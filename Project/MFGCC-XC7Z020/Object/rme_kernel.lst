ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 1


   1              		.cpu cortex-a9
   2              		.arch armv7-a
   3              		.fpu neon-fp16
   4              		.arch_extension mp
   5              		.arch_extension sec
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"rme_kernel.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../../Source/Kernel/rme_kernel.c"
  20              		.section	.text.RME_Int_Print,"ax",%progbits
  21              		.align	2
  22              		.global	RME_Int_Print
  23              		.syntax unified
  24              		.arm
  26              	RME_Int_Print:
  27              	.LFB0:
   1:../../Source/Kernel/rme_kernel.c **** /******************************************************************************
   2:../../Source/Kernel/rme_kernel.c **** Filename    : rme_kernel.c
   3:../../Source/Kernel/rme_kernel.c **** Author      : pry
   4:../../Source/Kernel/rme_kernel.c **** Date        : 23/03/2017
   5:../../Source/Kernel/rme_kernel.c **** Licence     : The Unlicense; see LICENSE for details.
   6:../../Source/Kernel/rme_kernel.c **** Description : The system call processing path, debugging primitives and kernel
   7:../../Source/Kernel/rme_kernel.c ****               capability implementation for the RME system.
   8:../../Source/Kernel/rme_kernel.c **** 
   9:../../Source/Kernel/rme_kernel.c **** * Capability Table ************************************************************
  10:../../Source/Kernel/rme_kernel.c **** This section of code might be confusing if the underlying principles
  11:../../Source/Kernel/rme_kernel.c **** of capability-based systems is not well understood. 
  12:../../Source/Kernel/rme_kernel.c **** 1. Owning a capability means you have the power to use the function
  13:../../Source/Kernel/rme_kernel.c ****    represented by that capability.
  14:../../Source/Kernel/rme_kernel.c **** 2. Capabilities have an field called flags, which denotes what operations
  15:../../Source/Kernel/rme_kernel.c ****    is allowed on that captbl.
  16:../../Source/Kernel/rme_kernel.c **** 3. Owning a capability to a capability table means that you have the
  17:../../Source/Kernel/rme_kernel.c ****    power to modify the capability table's contents.
  18:../../Source/Kernel/rme_kernel.c **** 4. Creation and deletion of kernel objects is an operation on capability
  19:../../Source/Kernel/rme_kernel.c ****    table, thus requiring the capability to the capability table.
  20:../../Source/Kernel/rme_kernel.c **** 
  21:../../Source/Kernel/rme_kernel.c **** Remember we do not check our master table to see if it is frozen, or if it is
  22:../../Source/Kernel/rme_kernel.c **** captbl, or something, because if the master table's cap is not explicitly 
  23:../../Source/Kernel/rme_kernel.c **** passed in, we do not operate on it at all; If it is explicitly passed in, it
  24:../../Source/Kernel/rme_kernel.c **** will be checked.
  25:../../Source/Kernel/rme_kernel.c **** 
  26:../../Source/Kernel/rme_kernel.c **** There are 4 basic types of operations, as listed below:
  27:../../Source/Kernel/rme_kernel.c **** Operation                     What it does
  28:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  29:../../Source/Kernel/rme_kernel.c **** Create/Add-Dst                CAS the slot to CREATING state.
  30:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  31:../../Source/Kernel/rme_kernel.c ****                               Create kernel object.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 2


  32:../../Source/Kernel/rme_kernel.c ****                               Atomically update header to complete creation.
  33:../../Source/Kernel/rme_kernel.c **** Use/Add-Src                   Use the kernel object, have a WCET.
  34:../../Source/Kernel/rme_kernel.c **** Freeze                        Check timestamp for create-freeze QUIESCENCE.
  35:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  36:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to FROZEN state.
  37:../../Source/Kernel/rme_kernel.c **** Delete/Removal                Check FROZEN.
  38:../../Source/Kernel/rme_kernel.c ****                               Check timestamp for freeze-delete QUIESCENCE.
  39:../../Source/Kernel/rme_kernel.c ****                               Check REFCNT (delete only).
  40:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to empty.
  41:../../Source/Kernel/rme_kernel.c ****                               Delete the kernel object (delete only).
  42:../../Source/Kernel/rme_kernel.c **** 
  43:../../Source/Kernel/rme_kernel.c **** Hazard Table: (Operation 2 follows Operation 1)
  44:../../Source/Kernel/rme_kernel.c **** Operation 1    Operation 2    Reason why it is safe
  45:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  46:../../Source/Kernel/rme_kernel.c **** Create         Create         Only one creation will be successful, because 
  47:../../Source/Kernel/rme_kernel.c ****                               CREATING slot is done by CAS.
  48:../../Source/Kernel/rme_kernel.c **** Create         Delete         Create only set the CREATING. Delete will require
  49:../../Source/Kernel/rme_kernel.c ****                               a TYPE data, which will only be set after the 
  50:../../Source/Kernel/rme_kernel.c ****                               creation completes. ABA problem cannot occur
  51:../../Source/Kernel/rme_kernel.c ****                               because of create-freeze quiescence.
  52:../../Source/Kernel/rme_kernel.c ****                               If there is no quiescence between Create-Freeze, 
  53:../../Source/Kernel/rme_kernel.c ****                               the following may occur:
  54:../../Source/Kernel/rme_kernel.c ****                               T1: Check ---------------------------- Delete(CAS)
  55:../../Source/Kernel/rme_kernel.c ****                               T2: Check - Delete - Create - Freeze -------------
  56:../../Source/Kernel/rme_kernel.c ****                               In this case, thread 1 will perform a wrong 
  57:../../Source/Kernel/rme_kernel.c ****                               deletion on the new capability (the CAS will be
  58:../../Source/Kernel/rme_kernel.c ****                               successful), but this cap is actually a new cap 
  59:../../Source/Kernel/rme_kernel.c ****                               created by the thread 2 at the same location, not
  60:../../Source/Kernel/rme_kernel.c ****                               the old cap, and its quiescence may not be satisfied.
  61:../../Source/Kernel/rme_kernel.c **** Create         Freeze         OCCUPY only set the FROZEN. FROZEN will require
  62:../../Source/Kernel/rme_kernel.c ****                               that bit not set.
  63:../../Source/Kernel/rme_kernel.c **** Create         Add-Src        Add-Src will require a TYPE data, which will only
  64:../../Source/Kernel/rme_kernel.c ****                               be set after the creation completes.
  65:../../Source/Kernel/rme_kernel.c **** Create         Add-Dst        Only one creation will be successful, because 
  66:../../Source/Kernel/rme_kernel.c ****                               OCCUPY slot is done by CAS.
  67:../../Source/Kernel/rme_kernel.c **** Create         Remove         OCCUPY only set the FROZEN. Remove will require a
  68:../../Source/Kernel/rme_kernel.c ****                               TYPE data, which will only be set after the
  69:../../Source/Kernel/rme_kernel.c ****                               creation completes. See Create-Delete for details.
  70:../../Source/Kernel/rme_kernel.c **** Create         Use            OCCUPY only set the FROZEN. Use the cap will 
  71:../../Source/Kernel/rme_kernel.c ****                               require a TYPE data, which will only be set after
  72:../../Source/Kernel/rme_kernel.c ****                               the creation completes.
  73:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  74:../../Source/Kernel/rme_kernel.c **** Delete         Delete         Actual deletion done by CAS so only one deletion
  75:../../Source/Kernel/rme_kernel.c ****                               will be successful.
  76:../../Source/Kernel/rme_kernel.c **** Delete         Freeze         If the deletion fails and clears the FROZEN flag,
  77:../../Source/Kernel/rme_kernel.c ****                               nothing will be done;
  78:../../Source/Kernel/rme_kernel.c ****                               If it does not fail, then the cap will be erased,
  79:../../Source/Kernel/rme_kernel.c ****                               and the FREEZE CAS will not succeed.
  80:../../Source/Kernel/rme_kernel.c **** Delete         Remove         Only one will be successful because only the root
  81:../../Source/Kernel/rme_kernel.c ****                               can be DELETED.
  82:../../Source/Kernel/rme_kernel.c **** Delete         Others         Banned by the FROZEN flag before deletion. 
  83:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  84:../../Source/Kernel/rme_kernel.c **** Freeze         Create         Create fails because slot is still OCCUPY.
  85:../../Source/Kernel/rme_kernel.c **** Freeze         Delete         Delete fails if not FROZEN, or not QUIESCENT.
  86:../../Source/Kernel/rme_kernel.c **** Freeze         Remove         Remove fails if not FROZEN, or not QUIESCENT.
  87:../../Source/Kernel/rme_kernel.c **** Freeze         Freeze         Freeze done by CAS, and only one will be successful.
  88:../../Source/Kernel/rme_kernel.c **** Freeze         Others         Freeze bans them if they attempt after FROZEN set.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 3


  89:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  90:../../Source/Kernel/rme_kernel.c **** Add-Src        Create         Impossible because something in that slot.
  91:../../Source/Kernel/rme_kernel.c **** Add-Src        Freeze         Cannot freeze if already increased REFCNT. If they
  92:../../Source/Kernel/rme_kernel.c ****                               increase REFCNT just after FROZEN set, let it be.
  93:../../Source/Kernel/rme_kernel.c ****                               The cap can't be deleted because of non-zero REFCNT.
  94:../../Source/Kernel/rme_kernel.c **** Add-Src        Delete         Impossible because cap not FROZEN.
  95:../../Source/Kernel/rme_kernel.c **** Add-Src        Remove         Impossible because cap not FROZEN.
  96:../../Source/Kernel/rme_kernel.c **** Add-Src        Others         These operations can be parallel, which is fine.
  97:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  98:../../Source/Kernel/rme_kernel.c **** Add-Dst         ...           Conclusion same as Create operation.
  99:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 100:../../Source/Kernel/rme_kernel.c **** Remove          ...           Conclusion same as Delete operation.
 101:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 102:../../Source/Kernel/rme_kernel.c **** Use            Create         Impossible because something in that slot.
 103:../../Source/Kernel/rme_kernel.c **** Use            Delete         Impossible because not FROZEN. The use can't be
 104:../../Source/Kernel/rme_kernel.c ****                               from leaf caps as well because deletion will check
 105:../../Source/Kernel/rme_kernel.c ****                               the REFCNT, and if the REFCNT is 0, then the only
 106:../../Source/Kernel/rme_kernel.c ****                               case where an unsettled use can happen is that it
 107:../../Source/Kernel/rme_kernel.c ****                               happens within WCET time to REFCNT check time. This
 108:../../Source/Kernel/rme_kernel.c ****                               unsettled use must come from a leaf cap, as the use
 109:../../Source/Kernel/rme_kernel.c ****                               happened after the root gets FROZEN. This leaf cap
 110:../../Source/Kernel/rme_kernel.c ****                               itself, will set the REFCNT to 1, and it have no
 111:../../Source/Kernel/rme_kernel.c ****                               chance to freeze then remove itself before a WCET.
 112:../../Source/Kernel/rme_kernel.c ****                               The unsettled use case is thus impossible and there
 113:../../Source/Kernel/rme_kernel.c ****                               is no race. As long as all new reference to caps
 114:../../Source/Kernel/rme_kernel.c ****                               require an active cap passed in, there is no such
 115:../../Source/Kernel/rme_kernel.c ****                               race. Also, for cap creation, the header create step 
 116:../../Source/Kernel/rme_kernel.c ****                               must be the last step (after refcnt can be seen on
 117:../../Source/Kernel/rme_kernel.c ****                               all cores as we use write release semantics), and
 118:../../Source/Kernel/rme_kernel.c ****                               this ensures that no new leaf caps will be available
 119:../../Source/Kernel/rme_kernel.c ****                               for use before REFCNT is seen by all cores.
 120:../../Source/Kernel/rme_kernel.c **** Use            Freeze         It is fine.
 121:../../Source/Kernel/rme_kernel.c **** Use            Add-Src        It is fine.
 122:../../Source/Kernel/rme_kernel.c **** Use            Add-Dst        Impossible because something in that slot.
 123:../../Source/Kernel/rme_kernel.c **** Use            Remove         Impossible because not FROZEN.
 124:../../Source/Kernel/rme_kernel.c **** Use            Use            It is fine.
 125:../../Source/Kernel/rme_kernel.c **** 
 126:../../Source/Kernel/rme_kernel.c **** * Page Table ******************************************************************
 127:../../Source/Kernel/rme_kernel.c **** Different from most large-scale operating systems, RME requires the page tables
 128:../../Source/Kernel/rme_kernel.c **** to be constructed by the user-level rather than kernel logic. Yet, RME provided
 129:../../Source/Kernel/rme_kernel.c **** sufficient utilities for the user to conduct the necessary paging operations:
 130:../../Source/Kernel/rme_kernel.c **** 1. Creating page directories;
 131:../../Source/Kernel/rme_kernel.c **** 2. Deletiing page directories;
 132:../../Source/Kernel/rme_kernel.c **** 3. Adding(mapping) pages into page directories;
 133:../../Source/Kernel/rme_kernel.c **** 4. Deleting(unmapping) pages from page directories.
 134:../../Source/Kernel/rme_kernel.c **** 5. Constructing hierachical page tables;
 135:../../Source/Kernel/rme_kernel.c **** 6. Destructing hierachical page tables.
 136:../../Source/Kernel/rme_kernel.c **** 
 137:../../Source/Kernel/rme_kernel.c **** * Kernel Memory ***************************************************************
 138:../../Source/Kernel/rme_kernel.c **** Different seL4 and Composite, RME applys a principle that resembles Fiasco.OC's
 139:../../Source/Kernel/rme_kernel.c **** kernel object factory. However, this is simplified very much in RME - just a table
 140:../../Source/Kernel/rme_kernel.c **** for registering kernel memory usage! Some may think that this prohibits retyping;
 141:../../Source/Kernel/rme_kernel.c **** this is not true because we can implement it with a trusted user-level proxy.
 142:../../Source/Kernel/rme_kernel.c **** 
 143:../../Source/Kernel/rme_kernel.c **** * Process and Thread **********************************************************
 144:../../Source/Kernel/rme_kernel.c **** RME provided process as a light-weight virtual machine/container abstraction, 
 145:../../Source/Kernel/rme_kernel.c **** and a versatile thread abstraction. Processes enforce isolation, while threads
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 4


 146:../../Source/Kernel/rme_kernel.c **** carry out the task.
 147:../../Source/Kernel/rme_kernel.c **** There is no bind-bind race because bind is done using CAS.
 148:../../Source/Kernel/rme_kernel.c **** There is no bind-unbind race for scheduler thread because all are core-local.
 149:../../Source/Kernel/rme_kernel.c **** 
 150:../../Source/Kernel/rme_kernel.c **** * Signal and Invocation *******************************************************
 151:../../Source/Kernel/rme_kernel.c **** RME employs simple signal endpoints for interrupt passing, inter-core interrupt
 152:../../Source/Kernel/rme_kernel.c **** and asynchronous communication. Different from most operating systems, it employs
 153:../../Source/Kernel/rme_kernel.c **** thread migration model for cross-boundary synchronous communication rather than
 154:../../Source/Kernel/rme_kernel.c **** simple blockpoints. This invocation design have many benefits in many facets.
 155:../../Source/Kernel/rme_kernel.c **** 
 156:../../Source/Kernel/rme_kernel.c **** * Kernel Function *************************************************************
 157:../../Source/Kernel/rme_kernel.c **** There's no perfect operating system for a particular hardware. A hardware may
 158:../../Source/Kernel/rme_kernel.c **** have its own idiosyncrasies that needs extra hacks. RME's kernel function utility
 159:../../Source/Kernel/rme_kernel.c **** provides a disciplined way of making such hacks, in case you need to add new 
 160:../../Source/Kernel/rme_kernel.c **** system calls or directly manipulate hardware.
 161:../../Source/Kernel/rme_kernel.c **** 
 162:../../Source/Kernel/rme_kernel.c **** * The Use of 'volatile' *******************************************************
 163:../../Source/Kernel/rme_kernel.c **** 'volatile' is not needed in the kernel because the syscall interface acts as a
 164:../../Source/Kernel/rme_kernel.c **** natural compiler barrier. We're safe to assume that, during one syscall, data
 165:../../Source/Kernel/rme_kernel.c **** in memory remains unchanged. If anything changes, it has been dealt with the 
 166:../../Source/Kernel/rme_kernel.c **** dedicated assembly atomics. If LTO has been enabled, there are three cases:
 167:../../Source/Kernel/rme_kernel.c **** (1) Uniprocessor with C-implemented "atomics" with no real atomic support.
 168:../../Source/Kernel/rme_kernel.c ****     In this case, compiler barriers are not needed due to no kernel concurrency.
 169:../../Source/Kernel/rme_kernel.c **** (2) Multiprocessor with assembly-implemented atomics, but the compiler LTO does
 170:../../Source/Kernel/rme_kernel.c ****     not honor the assembly functions; instead it thinks that they are opaque.
 171:../../Source/Kernel/rme_kernel.c ****     In this case, the opaque function call itself is a full compiler barrier.
 172:../../Source/Kernel/rme_kernel.c **** (3) Multiprocessor with assembly-implemented atomics, and the compiler LTO does
 173:../../Source/Kernel/rme_kernel.c ****     honor the assembly functions.
 174:../../Source/Kernel/rme_kernel.c ****     In this case, the compiler should be aware of the semantics of the assembly,
 175:../../Source/Kernel/rme_kernel.c ****     and produce correct code.
 176:../../Source/Kernel/rme_kernel.c **** * Function Name Rules *********************************************************
 177:../../Source/Kernel/rme_kernel.c **** (1) No "_": OS entry function RME_Kmain and C entry "main".
 178:../../Source/Kernel/rme_kernel.c **** (2) "_"   : Kernel functions that are be called by kernel.
 179:../../Source/Kernel/rme_kernel.c **** (3) "__"  : HAL functions that are called by kernel.
 180:../../Source/Kernel/rme_kernel.c **** (4) "___" : HAL functions that should only be called by HAL.
 181:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 182:../../Source/Kernel/rme_kernel.c **** 
 183:../../Source/Kernel/rme_kernel.c **** /* Include *******************************************************************/
 184:../../Source/Kernel/rme_kernel.c **** #define __HDR_DEF__
 185:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 186:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 187:../../Source/Kernel/rme_kernel.c **** #undef __HDR_DEF__
 188:../../Source/Kernel/rme_kernel.c **** 
 189:../../Source/Kernel/rme_kernel.c **** #define __HDR_STRUCT__
 190:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 191:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 192:../../Source/Kernel/rme_kernel.c **** #undef __HDR_STRUCT__
 193:../../Source/Kernel/rme_kernel.c **** 
 194:../../Source/Kernel/rme_kernel.c **** /* Private include */
 195:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 196:../../Source/Kernel/rme_kernel.c **** 
 197:../../Source/Kernel/rme_kernel.c **** #define __HDR_PUBLIC__
 198:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 199:../../Source/Kernel/rme_kernel.c **** #undef __HDR_PUBLIC__
 200:../../Source/Kernel/rme_kernel.c **** /* End Include ***************************************************************/
 201:../../Source/Kernel/rme_kernel.c **** 
 202:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Int_Print *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 5


 203:../../Source/Kernel/rme_kernel.c **** Description : Print a signed integer on the debugging console. This integer is
 204:../../Source/Kernel/rme_kernel.c ****               printed as decimal with sign.
 205:../../Source/Kernel/rme_kernel.c **** Input       : rme_cnt_t Int - The integer to print.
 206:../../Source/Kernel/rme_kernel.c **** Output      : None.
 207:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 208:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 209:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 210:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Int_Print(rme_cnt_t Int)
 211:../../Source/Kernel/rme_kernel.c **** {
  28              		.loc 1 211 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 00482DE9 		push	{fp, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 11, -8
  35              		.cfi_offset 14, -4
  36 0004 04B08DE2 		add	fp, sp, #4
  37              		.cfi_def_cfa 11, 4
  38 0008 20D04DE2 		sub	sp, sp, #32
  39 000c 20000BE5 		str	r0, [fp, #-32]
 212:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Num;
 213:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Abs;
 214:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Iter;
 215:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
 216:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Div;
 217:../../Source/Kernel/rme_kernel.c ****     
 218:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 219:../../Source/Kernel/rme_kernel.c ****     if(Int==0)
  40              		.loc 1 219 7
  41 0010 20301BE5 		ldr	r3, [fp, #-32]
  42 0014 000053E3 		cmp	r3, #0
  43 0018 0300001A 		bne	.L2
 220:../../Source/Kernel/rme_kernel.c ****     {
 221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 222:../../Source/Kernel/rme_kernel.c **** 
 223:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
  44              		.loc 1 223 9
  45 001c 3000A0E3 		mov	r0, #48
  46 0020 FEFFFFEB 		bl	__RME_Putchar
 224:../../Source/Kernel/rme_kernel.c ****         return 1;
  47              		.loc 1 224 16
  48 0024 0130A0E3 		mov	r3, #1
  49 0028 500000EA 		b	.L3
  50              	.L2:
 225:../../Source/Kernel/rme_kernel.c ****     }
 226:../../Source/Kernel/rme_kernel.c ****     else
 227:../../Source/Kernel/rme_kernel.c ****     {
 228:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 229:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 230:../../Source/Kernel/rme_kernel.c ****     }
 231:../../Source/Kernel/rme_kernel.c **** 
 232:../../Source/Kernel/rme_kernel.c **** 
 233:../../Source/Kernel/rme_kernel.c ****     /* Correct all negatives into positives */
 234:../../Source/Kernel/rme_kernel.c ****     if(Int<0)
  51              		.loc 1 234 7
  52 002c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 6


  53 0030 000053E3 		cmp	r3, #0
  54 0034 070000AA 		bge	.L4
 235:../../Source/Kernel/rme_kernel.c ****     {
 236:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 237:../../Source/Kernel/rme_kernel.c **** 
 238:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('-');
  55              		.loc 1 238 9
  56 0038 2D00A0E3 		mov	r0, #45
  57 003c FEFFFFEB 		bl	__RME_Putchar
 239:../../Source/Kernel/rme_kernel.c ****         Abs=-Int;
  58              		.loc 1 239 12
  59 0040 20301BE5 		ldr	r3, [fp, #-32]
  60 0044 003063E2 		rsb	r3, r3, #0
  61 0048 0C300BE5 		str	r3, [fp, #-12]
 240:../../Source/Kernel/rme_kernel.c ****         Num=1;
  62              		.loc 1 240 12
  63 004c 0130A0E3 		mov	r3, #1
  64 0050 08300BE5 		str	r3, [fp, #-8]
  65 0054 030000EA 		b	.L5
  66              	.L4:
 241:../../Source/Kernel/rme_kernel.c ****     }
 242:../../Source/Kernel/rme_kernel.c ****     else
 243:../../Source/Kernel/rme_kernel.c ****     {
 244:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 245:../../Source/Kernel/rme_kernel.c **** 
 246:../../Source/Kernel/rme_kernel.c ****         Abs=Int;
  67              		.loc 1 246 12
  68 0058 20301BE5 		ldr	r3, [fp, #-32]
  69 005c 0C300BE5 		str	r3, [fp, #-12]
 247:../../Source/Kernel/rme_kernel.c ****         Num=0;
  70              		.loc 1 247 12
  71 0060 0030A0E3 		mov	r3, #0
  72 0064 08300BE5 		str	r3, [fp, #-8]
  73              	.L5:
 248:../../Source/Kernel/rme_kernel.c ****     }
 249:../../Source/Kernel/rme_kernel.c **** 
 250:../../Source/Kernel/rme_kernel.c ****     /* How many digits are there? */
 251:../../Source/Kernel/rme_kernel.c ****     Count=0;
  74              		.loc 1 251 10
  75 0068 0030A0E3 		mov	r3, #0
  76 006c 14300BE5 		str	r3, [fp, #-20]
 252:../../Source/Kernel/rme_kernel.c ****     Div=1;
  77              		.loc 1 252 8
  78 0070 0130A0E3 		mov	r3, #1
  79 0074 18300BE5 		str	r3, [fp, #-24]
 253:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
  80              		.loc 1 253 9
  81 0078 0C301BE5 		ldr	r3, [fp, #-12]
  82 007c 10300BE5 		str	r3, [fp, #-16]
  83              	.L9:
 254:../../Source/Kernel/rme_kernel.c ****     while(1U)
 255:../../Source/Kernel/rme_kernel.c ****     {
 256:../../Source/Kernel/rme_kernel.c ****         Iter/=10;
  84              		.loc 1 256 13
  85 0080 10201BE5 		ldr	r2, [fp, #-16]
  86 0084 673606E3 		movw	r3, #26215
  87 0088 663646E3 		movt	r3, 26214
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 7


  88 008c 9312C3E0 		smull	r1, r3, r3, r2
  89 0090 4311A0E1 		asr	r1, r3, #2
  90 0094 C23FA0E1 		asr	r3, r2, #31
  91 0098 033041E0 		sub	r3, r1, r3
  92 009c 10300BE5 		str	r3, [fp, #-16]
 257:../../Source/Kernel/rme_kernel.c ****         Count++;
  93              		.loc 1 257 14
  94 00a0 14301BE5 		ldr	r3, [fp, #-20]
  95 00a4 013083E2 		add	r3, r3, #1
  96 00a8 14300BE5 		str	r3, [fp, #-20]
 258:../../Source/Kernel/rme_kernel.c ****         if(Iter!=0)
  97              		.loc 1 258 11
  98 00ac 10301BE5 		ldr	r3, [fp, #-16]
  99 00b0 000053E3 		cmp	r3, #0
 100 00b4 0600000A 		beq	.L12
 259:../../Source/Kernel/rme_kernel.c ****         {
 260:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 261:../../Source/Kernel/rme_kernel.c **** 
 262:../../Source/Kernel/rme_kernel.c ****             Div*=10;
 101              		.loc 1 262 16
 102 00b8 18201BE5 		ldr	r2, [fp, #-24]
 103 00bc 0230A0E1 		mov	r3, r2
 104 00c0 0331A0E1 		lsl	r3, r3, #2
 105 00c4 023083E0 		add	r3, r3, r2
 106 00c8 8330A0E1 		lsl	r3, r3, #1
 107 00cc 18300BE5 		str	r3, [fp, #-24]
 256:../../Source/Kernel/rme_kernel.c ****         Count++;
 108              		.loc 1 256 13
 109 00d0 EAFFFFEA 		b	.L9
 110              	.L12:
 263:../../Source/Kernel/rme_kernel.c ****         }
 264:../../Source/Kernel/rme_kernel.c ****         else
 265:../../Source/Kernel/rme_kernel.c ****         {
 266:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 267:../../Source/Kernel/rme_kernel.c **** 
 268:../../Source/Kernel/rme_kernel.c ****             break;
 111              		.loc 1 268 13
 112 00d4 00F020E3 		nop
 269:../../Source/Kernel/rme_kernel.c ****         }
 270:../../Source/Kernel/rme_kernel.c ****     }
 271:../../Source/Kernel/rme_kernel.c ****     Num+=Count;
 113              		.loc 1 271 8
 114 00d8 08201BE5 		ldr	r2, [fp, #-8]
 115 00dc 14301BE5 		ldr	r3, [fp, #-20]
 116 00e0 033082E0 		add	r3, r2, r3
 117 00e4 08300BE5 		str	r3, [fp, #-8]
 272:../../Source/Kernel/rme_kernel.c **** 
 273:../../Source/Kernel/rme_kernel.c ****     /* Print the integer */
 274:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
 118              		.loc 1 274 9
 119 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 120 00ec 10300BE5 		str	r3, [fp, #-16]
 275:../../Source/Kernel/rme_kernel.c **** 
 276:../../Source/Kernel/rme_kernel.c ****     while(Count>0)
 121              		.loc 1 276 10
 122 00f0 1A0000EA 		b	.L10
 123              	.L11:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 8


 277:../../Source/Kernel/rme_kernel.c ****     {
 278:../../Source/Kernel/rme_kernel.c ****         Count--;
 124              		.loc 1 278 14
 125 00f4 14301BE5 		ldr	r3, [fp, #-20]
 126 00f8 013043E2 		sub	r3, r3, #1
 127 00fc 14300BE5 		str	r3, [fp, #-20]
 279:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar((rme_s8_t)(Iter/Div)+'0');
 128              		.loc 1 279 38
 129 0100 18101BE5 		ldr	r1, [fp, #-24]
 130 0104 10001BE5 		ldr	r0, [fp, #-16]
 131 0108 FEFFFFEB 		bl	__aeabi_idiv
 132 010c 0030A0E1 		mov	r3, r0
 133              		.loc 1 279 23
 134 0110 7330EFE6 		uxtb	r3, r3
 135              		.loc 1 279 43
 136 0114 303083E2 		add	r3, r3, #48
 137 0118 7330EFE6 		uxtb	r3, r3
 138              		.loc 1 279 9
 139 011c 7330AFE6 		sxtb	r3, r3
 140 0120 0300A0E1 		mov	r0, r3
 141 0124 FEFFFFEB 		bl	__RME_Putchar
 280:../../Source/Kernel/rme_kernel.c ****         Iter=Iter%Div;
 142              		.loc 1 280 13
 143 0128 10301BE5 		ldr	r3, [fp, #-16]
 144 012c 18101BE5 		ldr	r1, [fp, #-24]
 145 0130 0300A0E1 		mov	r0, r3
 146 0134 FEFFFFEB 		bl	__aeabi_idivmod
 147 0138 0130A0E1 		mov	r3, r1
 148 013c 10300BE5 		str	r3, [fp, #-16]
 281:../../Source/Kernel/rme_kernel.c ****         Div/=10;
 149              		.loc 1 281 12
 150 0140 18201BE5 		ldr	r2, [fp, #-24]
 151 0144 673606E3 		movw	r3, #26215
 152 0148 663646E3 		movt	r3, 26214
 153 014c 9312C3E0 		smull	r1, r3, r3, r2
 154 0150 4311A0E1 		asr	r1, r3, #2
 155 0154 C23FA0E1 		asr	r3, r2, #31
 156 0158 033041E0 		sub	r3, r1, r3
 157 015c 18300BE5 		str	r3, [fp, #-24]
 158              	.L10:
 276:../../Source/Kernel/rme_kernel.c ****     {
 159              		.loc 1 276 16
 160 0160 14301BE5 		ldr	r3, [fp, #-20]
 161 0164 000053E3 		cmp	r3, #0
 162 0168 E1FFFFCA 		bgt	.L11
 282:../../Source/Kernel/rme_kernel.c ****     }
 283:../../Source/Kernel/rme_kernel.c ****     
 284:../../Source/Kernel/rme_kernel.c ****     return Num;
 163              		.loc 1 284 12
 164 016c 08301BE5 		ldr	r3, [fp, #-8]
 165              	.L3:
 285:../../Source/Kernel/rme_kernel.c **** }
 166              		.loc 1 285 1
 167 0170 0300A0E1 		mov	r0, r3
 168 0174 04D04BE2 		sub	sp, fp, #4
 169              		.cfi_def_cfa 13, 8
 170              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 9


 171 0178 0088BDE8 		pop	{fp, pc}
 172              		.cfi_endproc
 173              	.LFE0:
 175              		.section	.text.RME_Hex_Print,"ax",%progbits
 176              		.align	2
 177              		.global	RME_Hex_Print
 178              		.syntax unified
 179              		.arm
 181              	RME_Hex_Print:
 182              	.LFB1:
 286:../../Source/Kernel/rme_kernel.c **** #endif
 287:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Int_Print ************************************************/
 288:../../Source/Kernel/rme_kernel.c **** 
 289:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Hex_Print *****************************************************
 290:../../Source/Kernel/rme_kernel.c **** Description : Print a unsigned integer on the debugging console. This integer is
 291:../../Source/Kernel/rme_kernel.c ****               printed as hexadecimal.
 292:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Uint - The unsigned integer to print.
 293:../../Source/Kernel/rme_kernel.c **** Output      : None.
 294:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 295:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 296:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 297:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Hex_Print(rme_ptr_t Uint)
 298:../../Source/Kernel/rme_kernel.c **** {
 183              		.loc 1 298 1
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 24
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 00482DE9 		push	{fp, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 11, -8
 190              		.cfi_offset 14, -4
 191 0004 04B08DE2 		add	fp, sp, #4
 192              		.cfi_def_cfa 11, 4
 193 0008 18D04DE2 		sub	sp, sp, #24
 194 000c 18000BE5 		str	r0, [fp, #-24]
 299:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Iter;
 300:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 301:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Num;
 302:../../Source/Kernel/rme_kernel.c ****     
 303:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 304:../../Source/Kernel/rme_kernel.c ****     if(Uint==0U)
 195              		.loc 1 304 7
 196 0010 18301BE5 		ldr	r3, [fp, #-24]
 197 0014 000053E3 		cmp	r3, #0
 198 0018 0300001A 		bne	.L14
 305:../../Source/Kernel/rme_kernel.c ****     {
 306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 307:../../Source/Kernel/rme_kernel.c ****         
 308:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
 199              		.loc 1 308 9
 200 001c 3000A0E3 		mov	r0, #48
 201 0020 FEFFFFEB 		bl	__RME_Putchar
 309:../../Source/Kernel/rme_kernel.c ****         return 1;
 202              		.loc 1 309 16
 203 0024 0130A0E3 		mov	r3, #1
 204 0028 330000EA 		b	.L15
 205              	.L14:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 10


 310:../../Source/Kernel/rme_kernel.c ****     }
 311:../../Source/Kernel/rme_kernel.c ****     else
 312:../../Source/Kernel/rme_kernel.c ****     {
 313:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 314:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 315:../../Source/Kernel/rme_kernel.c ****     }
 316:../../Source/Kernel/rme_kernel.c **** 
 317:../../Source/Kernel/rme_kernel.c ****     /* Filter out all the zeroes */
 318:../../Source/Kernel/rme_kernel.c ****     Count=0U;
 206              		.loc 1 318 10
 207 002c 0030A0E3 		mov	r3, #0
 208 0030 0C300BE5 		str	r3, [fp, #-12]
 319:../../Source/Kernel/rme_kernel.c ****     Iter=Uint;
 209              		.loc 1 319 9
 210 0034 18301BE5 		ldr	r3, [fp, #-24]
 211 0038 08300BE5 		str	r3, [fp, #-8]
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 212              		.loc 1 320 10
 213 003c 050000EA 		b	.L16
 214              	.L17:
 321:../../Source/Kernel/rme_kernel.c ****     {
 322:../../Source/Kernel/rme_kernel.c ****         Iter<<=4;
 215              		.loc 1 322 13
 216 0040 08301BE5 		ldr	r3, [fp, #-8]
 217 0044 0332A0E1 		lsl	r3, r3, #4
 218 0048 08300BE5 		str	r3, [fp, #-8]
 323:../../Source/Kernel/rme_kernel.c ****         Count++;
 219              		.loc 1 323 14
 220 004c 0C301BE5 		ldr	r3, [fp, #-12]
 221 0050 013083E2 		add	r3, r3, #1
 222 0054 0C300BE5 		str	r3, [fp, #-12]
 223              	.L16:
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 224              		.loc 1 320 16
 225 0058 08301BE5 		ldr	r3, [fp, #-8]
 226 005c 233EA0E1 		lsr	r3, r3, #28
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 227              		.loc 1 320 36
 228 0060 000053E3 		cmp	r3, #0
 229 0064 F5FFFF0A 		beq	.L17
 324:../../Source/Kernel/rme_kernel.c ****     }
 325:../../Source/Kernel/rme_kernel.c ****     
 326:../../Source/Kernel/rme_kernel.c ****     /* Count is the number of pts to print */
 327:../../Source/Kernel/rme_kernel.c ****     Count=RME_POW2(RME_WORD_ORDER-2U)-Count;
 230              		.loc 1 327 10
 231 0068 0C301BE5 		ldr	r3, [fp, #-12]
 232 006c 083063E2 		rsb	r3, r3, #8
 233 0070 0C300BE5 		str	r3, [fp, #-12]
 328:../../Source/Kernel/rme_kernel.c ****     Num=Count;
 234              		.loc 1 328 8
 235 0074 0C301BE5 		ldr	r3, [fp, #-12]
 236 0078 10300BE5 		str	r3, [fp, #-16]
 329:../../Source/Kernel/rme_kernel.c ****     while(Count>0U)
 237              		.loc 1 329 10
 238 007c 1A0000EA 		b	.L18
 239              	.L20:
 330:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 11


 331:../../Source/Kernel/rme_kernel.c ****         Count--;
 240              		.loc 1 331 14
 241 0080 0C301BE5 		ldr	r3, [fp, #-12]
 242 0084 013043E2 		sub	r3, r3, #1
 243 0088 0C300BE5 		str	r3, [fp, #-12]
 332:../../Source/Kernel/rme_kernel.c ****         Iter=(Uint>>(Count<<2U))&0x0FU;
 244              		.loc 1 332 27
 245 008c 0C301BE5 		ldr	r3, [fp, #-12]
 246 0090 0331A0E1 		lsl	r3, r3, #2
 247              		.loc 1 332 19
 248 0094 18201BE5 		ldr	r2, [fp, #-24]
 249 0098 3233A0E1 		lsr	r3, r2, r3
 250              		.loc 1 332 13
 251 009c 0F3003E2 		and	r3, r3, #15
 252 00a0 08300BE5 		str	r3, [fp, #-8]
 333:../../Source/Kernel/rme_kernel.c ****         if(Iter<10U)
 253              		.loc 1 333 11
 254 00a4 08301BE5 		ldr	r3, [fp, #-8]
 255 00a8 090053E3 		cmp	r3, #9
 256 00ac 0700008A 		bhi	.L19
 334:../../Source/Kernel/rme_kernel.c ****         {
 335:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 336:../../Source/Kernel/rme_kernel.c ****             
 337:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'0');
 257              		.loc 1 337 27
 258 00b0 08301BE5 		ldr	r3, [fp, #-8]
 259 00b4 7330EFE6 		uxtb	r3, r3
 260              		.loc 1 337 41
 261 00b8 303083E2 		add	r3, r3, #48
 262 00bc 7330EFE6 		uxtb	r3, r3
 263              		.loc 1 337 13
 264 00c0 7330AFE6 		sxtb	r3, r3
 265 00c4 0300A0E1 		mov	r0, r3
 266 00c8 FEFFFFEB 		bl	__RME_Putchar
 267 00cc 060000EA 		b	.L18
 268              	.L19:
 338:../../Source/Kernel/rme_kernel.c ****         }
 339:../../Source/Kernel/rme_kernel.c ****         else
 340:../../Source/Kernel/rme_kernel.c ****         {
 341:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 342:../../Source/Kernel/rme_kernel.c ****             
 343:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'A'-10);
 269              		.loc 1 343 27
 270 00d0 08301BE5 		ldr	r3, [fp, #-8]
 271 00d4 7330EFE6 		uxtb	r3, r3
 272              		.loc 1 343 45
 273 00d8 373083E2 		add	r3, r3, #55
 274 00dc 7330EFE6 		uxtb	r3, r3
 275              		.loc 1 343 13
 276 00e0 7330AFE6 		sxtb	r3, r3
 277 00e4 0300A0E1 		mov	r0, r3
 278 00e8 FEFFFFEB 		bl	__RME_Putchar
 279              	.L18:
 329:../../Source/Kernel/rme_kernel.c ****     {
 280              		.loc 1 329 16
 281 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 282 00f0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 12


 283 00f4 E1FFFF1A 		bne	.L20
 344:../../Source/Kernel/rme_kernel.c ****         }
 345:../../Source/Kernel/rme_kernel.c ****     }
 346:../../Source/Kernel/rme_kernel.c ****     
 347:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Num;
 284              		.loc 1 347 12
 285 00f8 10301BE5 		ldr	r3, [fp, #-16]
 286              	.L15:
 348:../../Source/Kernel/rme_kernel.c **** }
 287              		.loc 1 348 1
 288 00fc 0300A0E1 		mov	r0, r3
 289 0100 04D04BE2 		sub	sp, fp, #4
 290              		.cfi_def_cfa 13, 8
 291              		@ sp needed
 292 0104 0088BDE8 		pop	{fp, pc}
 293              		.cfi_endproc
 294              	.LFE1:
 296              		.section	.text.RME_Str_Print,"ax",%progbits
 297              		.align	2
 298              		.global	RME_Str_Print
 299              		.syntax unified
 300              		.arm
 302              	RME_Str_Print:
 303              	.LFB2:
 349:../../Source/Kernel/rme_kernel.c **** #endif
 350:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Hex_Print ************************************************/
 351:../../Source/Kernel/rme_kernel.c **** 
 352:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Str_Print *****************************************************
 353:../../Source/Kernel/rme_kernel.c **** Description : Print a string the kernel console.
 354:../../Source/Kernel/rme_kernel.c ****               This is only used for kernel-level debugging.
 355:../../Source/Kernel/rme_kernel.c **** Input       : const rme_s8_t* String - The string to print
 356:../../Source/Kernel/rme_kernel.c **** Output      : None.
 357:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed, the '\0' is not included.
 358:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 359:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 360:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Str_Print(const rme_s8_t* String)
 361:../../Source/Kernel/rme_kernel.c **** {
 304              		.loc 1 361 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 00482DE9 		push	{fp, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 11, -8
 311              		.cfi_offset 14, -4
 312 0004 04B08DE2 		add	fp, sp, #4
 313              		.cfi_def_cfa 11, 4
 314 0008 10D04DE2 		sub	sp, sp, #16
 315 000c 10000BE5 		str	r0, [fp, #-16]
 362:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 363:../../Source/Kernel/rme_kernel.c ****     
 364:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_DBGLOG_MAX;Count++)
 316              		.loc 1 364 14
 317 0010 0030A0E3 		mov	r3, #0
 318 0014 08300BE5 		str	r3, [fp, #-8]
 319              		.loc 1 364 5
 320 0018 0E0000EA 		b	.L22
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 13


 321              	.L25:
 365:../../Source/Kernel/rme_kernel.c ****     {
 366:../../Source/Kernel/rme_kernel.c ****         if(String[Count]==(rme_s8_t)'\0')
 322              		.loc 1 366 18
 323 001c 10201BE5 		ldr	r2, [fp, #-16]
 324 0020 08301BE5 		ldr	r3, [fp, #-8]
 325 0024 033082E0 		add	r3, r2, r3
 326 0028 D030D3E1 		ldrsb	r3, [r3]
 327              		.loc 1 366 11
 328 002c 000053E3 		cmp	r3, #0
 329 0030 0C00000A 		beq	.L27
 367:../../Source/Kernel/rme_kernel.c ****         {
 368:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 369:../../Source/Kernel/rme_kernel.c ****             
 370:../../Source/Kernel/rme_kernel.c ****             break;
 371:../../Source/Kernel/rme_kernel.c ****         }
 372:../../Source/Kernel/rme_kernel.c ****         else
 373:../../Source/Kernel/rme_kernel.c ****         {
 374:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 375:../../Source/Kernel/rme_kernel.c ****             /* No action required */
 376:../../Source/Kernel/rme_kernel.c ****         }
 377:../../Source/Kernel/rme_kernel.c ****         
 378:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar(String[Count]);
 330              		.loc 1 378 29
 331 0034 10201BE5 		ldr	r2, [fp, #-16]
 332 0038 08301BE5 		ldr	r3, [fp, #-8]
 333 003c 033082E0 		add	r3, r2, r3
 334              		.loc 1 378 9
 335 0040 D030D3E1 		ldrsb	r3, [r3]
 336 0044 0300A0E1 		mov	r0, r3
 337 0048 FEFFFFEB 		bl	__RME_Putchar
 364:../../Source/Kernel/rme_kernel.c ****     {
 338              		.loc 1 364 44 discriminator 2
 339 004c 08301BE5 		ldr	r3, [fp, #-8]
 340 0050 013083E2 		add	r3, r3, #1
 341 0054 08300BE5 		str	r3, [fp, #-8]
 342              	.L22:
 364:../../Source/Kernel/rme_kernel.c ****     {
 343              		.loc 1 364 23 discriminator 1
 344 0058 08301BE5 		ldr	r3, [fp, #-8]
 345 005c FE0053E3 		cmp	r3, #254
 346 0060 EDFFFF9A 		bls	.L25
 347 0064 000000EA 		b	.L24
 348              	.L27:
 370:../../Source/Kernel/rme_kernel.c ****         }
 349              		.loc 1 370 13
 350 0068 00F020E3 		nop
 351              	.L24:
 379:../../Source/Kernel/rme_kernel.c ****     }
 380:../../Source/Kernel/rme_kernel.c ****     
 381:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Count;
 352              		.loc 1 381 12
 353 006c 08301BE5 		ldr	r3, [fp, #-8]
 382:../../Source/Kernel/rme_kernel.c **** }
 354              		.loc 1 382 1
 355 0070 0300A0E1 		mov	r0, r3
 356 0074 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 14


 357              		.cfi_def_cfa 13, 8
 358              		@ sp needed
 359 0078 0088BDE8 		pop	{fp, pc}
 360              		.cfi_endproc
 361              	.LFE2:
 363              		.section	.rodata
 364              		.align	2
 365              	.LC0:
 366 0000 0D0A2A2A 		.ascii	"\015\012***\015\012Kernel panic - not syncing :\015"
 366      2A0D0A4B 
 366      65726E65 
 366      6C207061 
 366      6E696320 
 367 0024 0A00     		.ascii	"\012\000"
 368 0026 0000     		.align	2
 369              	.LC1:
 370 0028 202C204C 		.ascii	" , Line \000"
 370      696E6520 
 370      00
 371 0031 000000   		.align	2
 372              	.LC2:
 373 0034 0D0A00   		.ascii	"\015\012\000"
 374 0037 00       		.align	2
 375              	.LC3:
 376 0038 202C2000 		.ascii	" , \000"
 377              		.section	.text.RME_Log,"ax",%progbits
 378              		.align	2
 379              		.global	RME_Log
 380              		.syntax unified
 381              		.arm
 383              	RME_Log:
 384              	.LFB3:
 383:../../Source/Kernel/rme_kernel.c **** #endif
 384:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Str_Print ************************************************/
 385:../../Source/Kernel/rme_kernel.c **** 
 386:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Log ***********************************************************
 387:../../Source/Kernel/rme_kernel.c **** Description : Default logging function, will be used when the user does not 
 388:../../Source/Kernel/rme_kernel.c ****               supply one. This will only be called when the kernel panics.
 389:../../Source/Kernel/rme_kernel.c **** Input       : const char* File - The filename.
 390:../../Source/Kernel/rme_kernel.c ****               long Line - The line number.
 391:../../Source/Kernel/rme_kernel.c ****               const char* Date - The compilation date.
 392:../../Source/Kernel/rme_kernel.c ****               const char* Time - The compilation time.
 393:../../Source/Kernel/rme_kernel.c **** Output      : None.
 394:../../Source/Kernel/rme_kernel.c **** Return      : None.
 395:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 396:../../Source/Kernel/rme_kernel.c **** #ifndef RME_LOG
 397:../../Source/Kernel/rme_kernel.c **** void RME_Log(const char* File,
 398:../../Source/Kernel/rme_kernel.c ****              long Line,
 399:../../Source/Kernel/rme_kernel.c ****              const char* Date,
 400:../../Source/Kernel/rme_kernel.c ****              const char* Time)
 401:../../Source/Kernel/rme_kernel.c **** {
 385              		.loc 1 401 1
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 00482DE9 		push	{fp, lr}
 390              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 15


 391              		.cfi_offset 11, -8
 392              		.cfi_offset 14, -4
 393 0004 04B08DE2 		add	fp, sp, #4
 394              		.cfi_def_cfa 11, 4
 395 0008 10D04DE2 		sub	sp, sp, #16
 396 000c 08000BE5 		str	r0, [fp, #-8]
 397 0010 0C100BE5 		str	r1, [fp, #-12]
 398 0014 10200BE5 		str	r2, [fp, #-16]
 399 0018 14300BE5 		str	r3, [fp, #-20]
 402:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n***\r\nKernel panic - not syncing :\r\n"); \
 400              		.loc 1 402 5
 401 001c 000000E3 		movw	r0, #:lower16:.LC0
 402 0020 000040E3 		movt	r0, #:upper16:.LC0
 403 0024 FEFFFFEB 		bl	RME_Str_Print
 403:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(File); \
 404              		.loc 1 403 5
 405 0028 08001BE5 		ldr	r0, [fp, #-8]
 406 002c FEFFFFEB 		bl	RME_Str_Print
 404:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , Line "); \
 407              		.loc 1 404 5
 408 0030 000000E3 		movw	r0, #:lower16:.LC1
 409 0034 000040E3 		movt	r0, #:upper16:.LC1
 410 0038 FEFFFFEB 		bl	RME_Str_Print
 405:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Line); \
 411              		.loc 1 405 5
 412 003c 0C001BE5 		ldr	r0, [fp, #-12]
 413 0040 FEFFFFEB 		bl	RME_Int_Print
 406:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 414              		.loc 1 406 5
 415 0044 000000E3 		movw	r0, #:lower16:.LC2
 416 0048 000040E3 		movt	r0, #:upper16:.LC2
 417 004c FEFFFFEB 		bl	RME_Str_Print
 407:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Date); \
 418              		.loc 1 407 5
 419 0050 10001BE5 		ldr	r0, [fp, #-16]
 420 0054 FEFFFFEB 		bl	RME_Str_Print
 408:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , "); \
 421              		.loc 1 408 5
 422 0058 000000E3 		movw	r0, #:lower16:.LC3
 423 005c 000040E3 		movt	r0, #:upper16:.LC3
 424 0060 FEFFFFEB 		bl	RME_Str_Print
 409:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Time); \
 425              		.loc 1 409 5
 426 0064 14001BE5 		ldr	r0, [fp, #-20]
 427 0068 FEFFFFEB 		bl	RME_Str_Print
 410:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 428              		.loc 1 410 5
 429 006c 000000E3 		movw	r0, #:lower16:.LC2
 430 0070 000040E3 		movt	r0, #:upper16:.LC2
 431 0074 FEFFFFEB 		bl	RME_Str_Print
 411:../../Source/Kernel/rme_kernel.c **** }
 432              		.loc 1 411 1
 433 0078 00F020E3 		nop
 434 007c 04D04BE2 		sub	sp, fp, #4
 435              		.cfi_def_cfa 13, 8
 436              		@ sp needed
 437 0080 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 16


 438              		.cfi_endproc
 439              	.LFE3:
 441              		.section	.text._RME_MSB_Generic,"ax",%progbits
 442              		.align	2
 443              		.global	_RME_MSB_Generic
 444              		.syntax unified
 445              		.arm
 447              	_RME_MSB_Generic:
 448              	.LFB4:
 412:../../Source/Kernel/rme_kernel.c **** #endif
 413:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Log ******************************************************/
 414:../../Source/Kernel/rme_kernel.c **** 
 415:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Cov_Print *****************************************************
 416:../../Source/Kernel/rme_kernel.c **** Description : The coverage data printer. Should always be disabled for all cases
 417:../../Source/Kernel/rme_kernel.c ****               except where a kernel coverage test is needed. This should never
 418:../../Source/Kernel/rme_kernel.c ****               be called any any user application; for coverage testing only.
 419:../../Source/Kernel/rme_kernel.c **** Input       : None.
 420:../../Source/Kernel/rme_kernel.c **** Output      : None.
 421:../../Source/Kernel/rme_kernel.c **** Return      : None.
 422:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 423:../../Source/Kernel/rme_kernel.c **** #ifdef RME_COV_LINE_NUM
 424:../../Source/Kernel/rme_kernel.c **** void RME_Cov_Print(void)
 425:../../Source/Kernel/rme_kernel.c **** {
 426:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Count;
 427:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Next;
 428:../../Source/Kernel/rme_kernel.c ****     
 429:../../Source/Kernel/rme_kernel.c ****     Next=0U;
 430:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_COV_LINE_NUM;Count++)
 431:../../Source/Kernel/rme_kernel.c ****     {
 432:../../Source/Kernel/rme_kernel.c ****         if(RME_BITMAP_IS_SET(RME_Cov,Count))
 433:../../Source/Kernel/rme_kernel.c ****         {
 434:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 435:../../Source/Kernel/rme_kernel.c ****             RME_DBG_I(Count);
 436:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S(",");
 437:../../Source/Kernel/rme_kernel.c ****             /* We put 12 markers on a single line */
 438:../../Source/Kernel/rme_kernel.c ****             Next++;
 439:../../Source/Kernel/rme_kernel.c ****             if(Next>11U)
 440:../../Source/Kernel/rme_kernel.c ****             {
 441:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 442:../../Source/Kernel/rme_kernel.c ****                 
 443:../../Source/Kernel/rme_kernel.c ****                 Next=0U;
 444:../../Source/Kernel/rme_kernel.c ****                 RME_DBG_S("\r\n");
 445:../../Source/Kernel/rme_kernel.c ****             }
 446:../../Source/Kernel/rme_kernel.c ****             else
 447:../../Source/Kernel/rme_kernel.c ****             {
 448:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 449:../../Source/Kernel/rme_kernel.c ****                 /* No action needed */
 450:../../Source/Kernel/rme_kernel.c ****             }
 451:../../Source/Kernel/rme_kernel.c ****         }
 452:../../Source/Kernel/rme_kernel.c ****         else
 453:../../Source/Kernel/rme_kernel.c ****         {
 454:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 455:../../Source/Kernel/rme_kernel.c ****             /* No action needed */
 456:../../Source/Kernel/rme_kernel.c ****         }
 457:../../Source/Kernel/rme_kernel.c ****     }
 458:../../Source/Kernel/rme_kernel.c **** }
 459:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 17


 460:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Cov_Print ************************************************/
 461:../../Source/Kernel/rme_kernel.c **** 
 462:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_MSB_Generic **************************************************
 463:../../Source/Kernel/rme_kernel.c **** Description : Find the MSB's position. This is a portable solution for all
 464:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 465:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 466:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to compute for.
 467:../../Source/Kernel/rme_kernel.c **** Output      : None.
 468:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 469:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 470:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_MSB_Generic(rme_ptr_t Value)
 471:../../Source/Kernel/rme_kernel.c **** {
 449              		.loc 1 471 1
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 16
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 04B02DE5 		str	fp, [sp, #-4]!
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 11, -4
 457 0004 00B08DE2 		add	fp, sp, #0
 458              		.cfi_def_cfa_register 11
 459 0008 14D04DE2 		sub	sp, sp, #20
 460 000c 10000BE5 		str	r0, [fp, #-16]
 472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 473:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 474:../../Source/Kernel/rme_kernel.c ****     {
 475:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,1U,2U,2U,2U,2U,3U,3U,3U,3U,3U,3U,3U,3U,
 476:../../Source/Kernel/rme_kernel.c ****         4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,
 477:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 478:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 479:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 480:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 481:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 482:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 483:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 484:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 485:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 486:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 487:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 488:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 489:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 490:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U
 491:../../Source/Kernel/rme_kernel.c ****     };
 492:../../Source/Kernel/rme_kernel.c **** 
 493:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 494:../../Source/Kernel/rme_kernel.c ****     /* 15-8 */
 495:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(8U))
 496:../../Source/Kernel/rme_kernel.c ****     {
 497:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 498:../../Source/Kernel/rme_kernel.c ****         
 499:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 500:../../Source/Kernel/rme_kernel.c ****     }
 501:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 502:../../Source/Kernel/rme_kernel.c ****     else
 503:../../Source/Kernel/rme_kernel.c ****     {
 504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 18


 505:../../Source/Kernel/rme_kernel.c ****         
 506:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 507:../../Source/Kernel/rme_kernel.c ****     }
 508:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 509:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 510:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(16U))
 461              		.loc 1 510 7
 462 0010 10301BE5 		ldr	r3, [fp, #-16]
 463 0014 010853E3 		cmp	r3, #65536
 464 0018 0800003A 		bcc	.L30
 511:../../Source/Kernel/rme_kernel.c ****     {
 512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 513:../../Source/Kernel/rme_kernel.c ****         
 514:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 515:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(24U))
 465              		.loc 1 515 11
 466 001c 10301BE5 		ldr	r3, [fp, #-16]
 467 0020 010453E3 		cmp	r3, #16777216
 468 0024 0200003A 		bcc	.L31
 516:../../Source/Kernel/rme_kernel.c ****         {
 517:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 518:../../Source/Kernel/rme_kernel.c ****             
 519:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 469              		.loc 1 519 16
 470 0028 1830A0E3 		mov	r3, #24
 471 002c 08300BE5 		str	r3, [fp, #-8]
 472 0030 0A0000EA 		b	.L32
 473              	.L31:
 520:../../Source/Kernel/rme_kernel.c ****         }
 521:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 522:../../Source/Kernel/rme_kernel.c ****         else
 523:../../Source/Kernel/rme_kernel.c ****         {
 524:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 525:../../Source/Kernel/rme_kernel.c ****             
 526:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 474              		.loc 1 526 16
 475 0034 1030A0E3 		mov	r3, #16
 476 0038 08300BE5 		str	r3, [fp, #-8]
 477 003c 070000EA 		b	.L32
 478              	.L30:
 527:../../Source/Kernel/rme_kernel.c ****         }
 528:../../Source/Kernel/rme_kernel.c ****     }
 529:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 530:../../Source/Kernel/rme_kernel.c ****     else
 531:../../Source/Kernel/rme_kernel.c ****     {
 532:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 533:../../Source/Kernel/rme_kernel.c ****         
 534:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 535:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(8U))
 479              		.loc 1 535 11
 480 0040 10301BE5 		ldr	r3, [fp, #-16]
 481 0044 FF0053E3 		cmp	r3, #255
 482 0048 0200009A 		bls	.L33
 536:../../Source/Kernel/rme_kernel.c ****         {
 537:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 538:../../Source/Kernel/rme_kernel.c ****             
 539:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 19


 483              		.loc 1 539 16
 484 004c 0830A0E3 		mov	r3, #8
 485 0050 08300BE5 		str	r3, [fp, #-8]
 486 0054 010000EA 		b	.L32
 487              	.L33:
 540:../../Source/Kernel/rme_kernel.c ****         }
 541:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 542:../../Source/Kernel/rme_kernel.c ****         else
 543:../../Source/Kernel/rme_kernel.c ****         {
 544:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 545:../../Source/Kernel/rme_kernel.c ****             
 546:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 488              		.loc 1 546 16
 489 0058 0030A0E3 		mov	r3, #0
 490 005c 08300BE5 		str	r3, [fp, #-8]
 491              	.L32:
 547:../../Source/Kernel/rme_kernel.c ****         }
 548:../../Source/Kernel/rme_kernel.c ****     }
 549:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 550:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 551:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(32U))
 552:../../Source/Kernel/rme_kernel.c ****     {
 553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 554:../../Source/Kernel/rme_kernel.c ****         
 555:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 556:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(48U))
 557:../../Source/Kernel/rme_kernel.c ****         {
 558:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 559:../../Source/Kernel/rme_kernel.c ****             
 560:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 561:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(56U))
 562:../../Source/Kernel/rme_kernel.c ****             {
 563:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 564:../../Source/Kernel/rme_kernel.c ****                 
 565:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 566:../../Source/Kernel/rme_kernel.c ****             }
 567:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 568:../../Source/Kernel/rme_kernel.c ****             else
 569:../../Source/Kernel/rme_kernel.c ****             {
 570:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 571:../../Source/Kernel/rme_kernel.c ****                 
 572:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 573:../../Source/Kernel/rme_kernel.c ****             }
 574:../../Source/Kernel/rme_kernel.c ****         }
 575:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 576:../../Source/Kernel/rme_kernel.c ****         else
 577:../../Source/Kernel/rme_kernel.c ****         {
 578:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 579:../../Source/Kernel/rme_kernel.c ****             
 580:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 581:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(40U))
 582:../../Source/Kernel/rme_kernel.c ****             {
 583:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 584:../../Source/Kernel/rme_kernel.c ****                 
 585:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 586:../../Source/Kernel/rme_kernel.c ****             }
 587:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 20


 588:../../Source/Kernel/rme_kernel.c ****             else
 589:../../Source/Kernel/rme_kernel.c ****             {
 590:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 591:../../Source/Kernel/rme_kernel.c ****                 
 592:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 593:../../Source/Kernel/rme_kernel.c ****             }
 594:../../Source/Kernel/rme_kernel.c ****         }
 595:../../Source/Kernel/rme_kernel.c ****     }
 596:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 597:../../Source/Kernel/rme_kernel.c ****     else
 598:../../Source/Kernel/rme_kernel.c ****     {
 599:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 600:../../Source/Kernel/rme_kernel.c ****         
 601:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 602:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(16U))
 603:../../Source/Kernel/rme_kernel.c ****         {
 604:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 605:../../Source/Kernel/rme_kernel.c ****             
 606:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 607:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(24U))
 608:../../Source/Kernel/rme_kernel.c ****             {
 609:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 610:../../Source/Kernel/rme_kernel.c ****                 
 611:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 612:../../Source/Kernel/rme_kernel.c ****             }
 613:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 614:../../Source/Kernel/rme_kernel.c ****             else
 615:../../Source/Kernel/rme_kernel.c ****             {
 616:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 617:../../Source/Kernel/rme_kernel.c ****                 
 618:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 619:../../Source/Kernel/rme_kernel.c ****             }
 620:../../Source/Kernel/rme_kernel.c ****         }
 621:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 622:../../Source/Kernel/rme_kernel.c ****         else
 623:../../Source/Kernel/rme_kernel.c ****         {
 624:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 625:../../Source/Kernel/rme_kernel.c ****             
 626:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 627:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(8U))
 628:../../Source/Kernel/rme_kernel.c ****             {
 629:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 630:../../Source/Kernel/rme_kernel.c ****                 
 631:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 632:../../Source/Kernel/rme_kernel.c ****             }
 633:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 634:../../Source/Kernel/rme_kernel.c ****             else
 635:../../Source/Kernel/rme_kernel.c ****             {
 636:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 637:../../Source/Kernel/rme_kernel.c ****                 
 638:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 639:../../Source/Kernel/rme_kernel.c ****             }
 640:../../Source/Kernel/rme_kernel.c ****         }
 641:../../Source/Kernel/rme_kernel.c ****     }
 642:../../Source/Kernel/rme_kernel.c **** #else
 643:../../Source/Kernel/rme_kernel.c **** #error Generic MSB for 128-bits & above are not implemented.
 644:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 21


 645:../../Source/Kernel/rme_kernel.c **** 
 646:../../Source/Kernel/rme_kernel.c ****     return Table[Value>>Bit]+Bit;
 492              		.loc 1 646 23
 493 0060 10201BE5 		ldr	r2, [fp, #-16]
 494 0064 08301BE5 		ldr	r3, [fp, #-8]
 495 0068 3223A0E1 		lsr	r2, r2, r3
 496              		.loc 1 646 17
 497 006c 003000E3 		movw	r3, #:lower16:Table.1
 498 0070 003040E3 		movt	r3, #:upper16:Table.1
 499 0074 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 500 0078 0320A0E1 		mov	r2, r3
 501              		.loc 1 646 29
 502 007c 08301BE5 		ldr	r3, [fp, #-8]
 503 0080 033082E0 		add	r3, r2, r3
 647:../../Source/Kernel/rme_kernel.c **** }
 504              		.loc 1 647 1
 505 0084 0300A0E1 		mov	r0, r3
 506 0088 00D08BE2 		add	sp, fp, #0
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 008c 04B09DE4 		ldr	fp, [sp], #4
 510              		.cfi_restore 11
 511              		.cfi_def_cfa_offset 0
 512 0090 1EFF2FE1 		bx	lr
 513              		.cfi_endproc
 514              	.LFE4:
 516              		.section	.text._RME_LSB_Generic,"ax",%progbits
 517              		.align	2
 518              		.global	_RME_LSB_Generic
 519              		.syntax unified
 520              		.arm
 522              	_RME_LSB_Generic:
 523              	.LFB5:
 648:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_MSB_Generic *********************************************/
 649:../../Source/Kernel/rme_kernel.c **** 
 650:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_LSB_Generic **************************************************
 651:../../Source/Kernel/rme_kernel.c **** Description : Find the LSB's position. This is a portable solution for all
 652:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 653:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 654:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to count.
 655:../../Source/Kernel/rme_kernel.c **** Output      : None.
 656:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 657:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 658:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_LSB_Generic(rme_ptr_t Value)
 659:../../Source/Kernel/rme_kernel.c **** {
 524              		.loc 1 659 1
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529 0000 04B02DE5 		str	fp, [sp, #-4]!
 530              		.cfi_def_cfa_offset 4
 531              		.cfi_offset 11, -4
 532 0004 00B08DE2 		add	fp, sp, #0
 533              		.cfi_def_cfa_register 11
 534 0008 14D04DE2 		sub	sp, sp, #20
 535 000c 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 22


 660:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 661:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 662:../../Source/Kernel/rme_kernel.c ****     {
 663:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 664:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 665:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 666:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 667:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 668:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 669:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 670:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 671:../../Source/Kernel/rme_kernel.c ****         7U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 672:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 673:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 674:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 675:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 676:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 677:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 678:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U
 679:../../Source/Kernel/rme_kernel.c ****     };
 680:../../Source/Kernel/rme_kernel.c ****     
 681:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 682:../../Source/Kernel/rme_kernel.c ****     /* 16-8 */
 683:../../Source/Kernel/rme_kernel.c ****     if((Value<<8U)==0U)
 684:../../Source/Kernel/rme_kernel.c ****     {
 685:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 686:../../Source/Kernel/rme_kernel.c ****         
 687:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 688:../../Source/Kernel/rme_kernel.c ****     }
 689:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 690:../../Source/Kernel/rme_kernel.c ****     else
 691:../../Source/Kernel/rme_kernel.c ****     {
 692:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 693:../../Source/Kernel/rme_kernel.c ****         
 694:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 695:../../Source/Kernel/rme_kernel.c ****     }
 696:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 697:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 698:../../Source/Kernel/rme_kernel.c ****     if((Value<<16U)==0U)
 536              		.loc 1 698 14
 537 0010 10301BE5 		ldr	r3, [fp, #-16]
 538 0014 0338A0E1 		lsl	r3, r3, #16
 539              		.loc 1 698 7
 540 0018 000053E3 		cmp	r3, #0
 541 001c 0900001A 		bne	.L36
 699:../../Source/Kernel/rme_kernel.c ****     {
 700:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 701:../../Source/Kernel/rme_kernel.c ****         
 702:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 703:../../Source/Kernel/rme_kernel.c ****         if((Value<<8U)==0U)
 542              		.loc 1 703 18
 543 0020 10301BE5 		ldr	r3, [fp, #-16]
 544 0024 0334A0E1 		lsl	r3, r3, #8
 545              		.loc 1 703 11
 546 0028 000053E3 		cmp	r3, #0
 547 002c 0200001A 		bne	.L37
 704:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 23


 705:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 706:../../Source/Kernel/rme_kernel.c ****             
 707:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 548              		.loc 1 707 16
 549 0030 1830A0E3 		mov	r3, #24
 550 0034 08300BE5 		str	r3, [fp, #-8]
 551 0038 0B0000EA 		b	.L38
 552              	.L37:
 708:../../Source/Kernel/rme_kernel.c ****         }
 709:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 710:../../Source/Kernel/rme_kernel.c ****         else
 711:../../Source/Kernel/rme_kernel.c ****         {
 712:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 713:../../Source/Kernel/rme_kernel.c ****             
 714:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 553              		.loc 1 714 16
 554 003c 1030A0E3 		mov	r3, #16
 555 0040 08300BE5 		str	r3, [fp, #-8]
 556 0044 080000EA 		b	.L38
 557              	.L36:
 715:../../Source/Kernel/rme_kernel.c ****         }
 716:../../Source/Kernel/rme_kernel.c ****     }
 717:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 718:../../Source/Kernel/rme_kernel.c ****     else
 719:../../Source/Kernel/rme_kernel.c ****     {
 720:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 721:../../Source/Kernel/rme_kernel.c ****         
 722:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 723:../../Source/Kernel/rme_kernel.c ****         if((Value<<24U)==0U)
 558              		.loc 1 723 18
 559 0048 10301BE5 		ldr	r3, [fp, #-16]
 560 004c 033CA0E1 		lsl	r3, r3, #24
 561              		.loc 1 723 11
 562 0050 000053E3 		cmp	r3, #0
 563 0054 0200001A 		bne	.L39
 724:../../Source/Kernel/rme_kernel.c ****         {
 725:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 726:../../Source/Kernel/rme_kernel.c ****             
 727:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 564              		.loc 1 727 16
 565 0058 0830A0E3 		mov	r3, #8
 566 005c 08300BE5 		str	r3, [fp, #-8]
 567 0060 010000EA 		b	.L38
 568              	.L39:
 728:../../Source/Kernel/rme_kernel.c ****         }
 729:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 730:../../Source/Kernel/rme_kernel.c ****         else
 731:../../Source/Kernel/rme_kernel.c ****         {
 732:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 733:../../Source/Kernel/rme_kernel.c ****             
 734:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 569              		.loc 1 734 16
 570 0064 0030A0E3 		mov	r3, #0
 571 0068 08300BE5 		str	r3, [fp, #-8]
 572              	.L38:
 735:../../Source/Kernel/rme_kernel.c ****         }
 736:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 24


 737:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 738:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 739:../../Source/Kernel/rme_kernel.c ****     if((Value<<32U)==0U)
 740:../../Source/Kernel/rme_kernel.c ****     {
 741:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 742:../../Source/Kernel/rme_kernel.c ****         
 743:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 744:../../Source/Kernel/rme_kernel.c ****         if((Value<<16U)==0U)
 745:../../Source/Kernel/rme_kernel.c ****         {
 746:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 747:../../Source/Kernel/rme_kernel.c ****             
 748:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 749:../../Source/Kernel/rme_kernel.c ****             if((Value<<8U)==0U)
 750:../../Source/Kernel/rme_kernel.c ****             {
 751:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 752:../../Source/Kernel/rme_kernel.c ****                 
 753:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 754:../../Source/Kernel/rme_kernel.c ****             }
 755:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 756:../../Source/Kernel/rme_kernel.c ****             else
 757:../../Source/Kernel/rme_kernel.c ****             {
 758:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 759:../../Source/Kernel/rme_kernel.c ****                 
 760:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 761:../../Source/Kernel/rme_kernel.c ****             }
 762:../../Source/Kernel/rme_kernel.c ****         }
 763:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 764:../../Source/Kernel/rme_kernel.c ****         else
 765:../../Source/Kernel/rme_kernel.c ****         {
 766:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 767:../../Source/Kernel/rme_kernel.c ****             
 768:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 769:../../Source/Kernel/rme_kernel.c ****             if((Value<<24U)==0U)
 770:../../Source/Kernel/rme_kernel.c ****             {
 771:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 772:../../Source/Kernel/rme_kernel.c ****                 
 773:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 774:../../Source/Kernel/rme_kernel.c ****             }
 775:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 776:../../Source/Kernel/rme_kernel.c ****             else
 777:../../Source/Kernel/rme_kernel.c ****             {
 778:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 779:../../Source/Kernel/rme_kernel.c ****                 
 780:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 781:../../Source/Kernel/rme_kernel.c ****             }
 782:../../Source/Kernel/rme_kernel.c ****         }
 783:../../Source/Kernel/rme_kernel.c ****     }
 784:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 785:../../Source/Kernel/rme_kernel.c ****     else
 786:../../Source/Kernel/rme_kernel.c ****     {
 787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 788:../../Source/Kernel/rme_kernel.c ****         
 789:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 790:../../Source/Kernel/rme_kernel.c ****         if((Value<<48U)==0U)
 791:../../Source/Kernel/rme_kernel.c ****         {
 792:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 793:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 25


 794:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 795:../../Source/Kernel/rme_kernel.c ****             if((Value<<40U)==0U)
 796:../../Source/Kernel/rme_kernel.c ****             {
 797:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 798:../../Source/Kernel/rme_kernel.c ****                 
 799:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 800:../../Source/Kernel/rme_kernel.c ****             }
 801:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 802:../../Source/Kernel/rme_kernel.c ****             else
 803:../../Source/Kernel/rme_kernel.c ****             {
 804:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 805:../../Source/Kernel/rme_kernel.c ****                 
 806:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 807:../../Source/Kernel/rme_kernel.c ****             }
 808:../../Source/Kernel/rme_kernel.c ****         }
 809:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 810:../../Source/Kernel/rme_kernel.c ****         else
 811:../../Source/Kernel/rme_kernel.c ****         {
 812:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 813:../../Source/Kernel/rme_kernel.c ****             
 814:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 815:../../Source/Kernel/rme_kernel.c ****             if((Value<<56U)==0U)
 816:../../Source/Kernel/rme_kernel.c ****             {
 817:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 818:../../Source/Kernel/rme_kernel.c ****                 
 819:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 820:../../Source/Kernel/rme_kernel.c ****             }
 821:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 822:../../Source/Kernel/rme_kernel.c ****             else
 823:../../Source/Kernel/rme_kernel.c ****             {
 824:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 825:../../Source/Kernel/rme_kernel.c ****                 
 826:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 827:../../Source/Kernel/rme_kernel.c ****             }
 828:../../Source/Kernel/rme_kernel.c ****         }
 829:../../Source/Kernel/rme_kernel.c ****     }
 830:../../Source/Kernel/rme_kernel.c **** #else
 831:../../Source/Kernel/rme_kernel.c **** #error Generic LSB for 128-bits & above are not implemented.
 832:../../Source/Kernel/rme_kernel.c **** #endif
 833:../../Source/Kernel/rme_kernel.c **** 
 834:../../Source/Kernel/rme_kernel.c ****     return Table[(rme_u8_t)(Value>>Bit)]+Bit;
 573              		.loc 1 834 34
 574 006c 10201BE5 		ldr	r2, [fp, #-16]
 575 0070 08301BE5 		ldr	r3, [fp, #-8]
 576 0074 3233A0E1 		lsr	r3, r2, r3
 577              		.loc 1 834 18
 578 0078 7330EFE6 		uxtb	r3, r3
 579 007c 0320A0E1 		mov	r2, r3
 580              		.loc 1 834 17
 581 0080 003000E3 		movw	r3, #:lower16:Table.0
 582 0084 003040E3 		movt	r3, #:upper16:Table.0
 583 0088 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 584 008c 0320A0E1 		mov	r2, r3
 585              		.loc 1 834 41
 586 0090 08301BE5 		ldr	r3, [fp, #-8]
 587 0094 033082E0 		add	r3, r2, r3
 835:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 26


 588              		.loc 1 835 1
 589 0098 0300A0E1 		mov	r0, r3
 590 009c 00D08BE2 		add	sp, fp, #0
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 00a0 04B09DE4 		ldr	fp, [sp], #4
 594              		.cfi_restore 11
 595              		.cfi_def_cfa_offset 0
 596 00a4 1EFF2FE1 		bx	lr
 597              		.cfi_endproc
 598              	.LFE5:
 600              		.section	.text._RME_Comp_Swap_Single,"ax",%progbits
 601              		.align	2
 602              		.global	_RME_Comp_Swap_Single
 603              		.syntax unified
 604              		.arm
 606              	_RME_Comp_Swap_Single:
 607              	.LFB6:
 836:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_LSB_Generic *********************************************/
 837:../../Source/Kernel/rme_kernel.c **** 
 838:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Comp_Swap_Single *********************************************
 839:../../Source/Kernel/rme_kernel.c **** Description : The compare-and-swap atomic instruction. If the Old value is
 840:../../Source/Kernel/rme_kernel.c ****               equal to *Ptr, then set the *Ptr as New and return 1; else return
 841:../../Source/Kernel/rme_kernel.c ****               0.
 842:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 843:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 844:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Old - The old value.
 845:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t New - The new value.
 846:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 847:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - If successful, 1; else 0.
 848:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 849:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Comp_Swap_Single(volatile rme_ptr_t* Ptr,
 850:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Old,
 851:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t New)
 852:../../Source/Kernel/rme_kernel.c **** {
 608              		.loc 1 852 1
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 16
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613 0000 04B02DE5 		str	fp, [sp, #-4]!
 614              		.cfi_def_cfa_offset 4
 615              		.cfi_offset 11, -4
 616 0004 00B08DE2 		add	fp, sp, #0
 617              		.cfi_def_cfa_register 11
 618 0008 14D04DE2 		sub	sp, sp, #20
 619 000c 08000BE5 		str	r0, [fp, #-8]
 620 0010 0C100BE5 		str	r1, [fp, #-12]
 621 0014 10200BE5 		str	r2, [fp, #-16]
 853:../../Source/Kernel/rme_kernel.c ****     if(*Ptr==Old)
 622              		.loc 1 853 8
 623 0018 08301BE5 		ldr	r3, [fp, #-8]
 624 001c 003093E5 		ldr	r3, [r3]
 625              		.loc 1 853 7
 626 0020 0C201BE5 		ldr	r2, [fp, #-12]
 627 0024 030052E1 		cmp	r2, r3
 628 0028 0400001A 		bne	.L42
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 27


 854:../../Source/Kernel/rme_kernel.c ****     {
 855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 856:../../Source/Kernel/rme_kernel.c ****         
 857:../../Source/Kernel/rme_kernel.c ****         *Ptr=New;
 629              		.loc 1 857 13
 630 002c 08301BE5 		ldr	r3, [fp, #-8]
 631 0030 10201BE5 		ldr	r2, [fp, #-16]
 632 0034 002083E5 		str	r2, [r3]
 858:../../Source/Kernel/rme_kernel.c ****         return 1U;
 633              		.loc 1 858 16
 634 0038 0130A0E3 		mov	r3, #1
 635 003c 000000EA 		b	.L43
 636              	.L42:
 859:../../Source/Kernel/rme_kernel.c ****     }
 860:../../Source/Kernel/rme_kernel.c ****     else
 861:../../Source/Kernel/rme_kernel.c ****     {
 862:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 863:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 864:../../Source/Kernel/rme_kernel.c ****     }
 865:../../Source/Kernel/rme_kernel.c **** 
 866:../../Source/Kernel/rme_kernel.c ****     return 0U;
 637              		.loc 1 866 12
 638 0040 0030A0E3 		mov	r3, #0
 639              	.L43:
 867:../../Source/Kernel/rme_kernel.c **** }
 640              		.loc 1 867 1
 641 0044 0300A0E1 		mov	r0, r3
 642 0048 00D08BE2 		add	sp, fp, #0
 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 004c 04B09DE4 		ldr	fp, [sp], #4
 646              		.cfi_restore 11
 647              		.cfi_def_cfa_offset 0
 648 0050 1EFF2FE1 		bx	lr
 649              		.cfi_endproc
 650              	.LFE6:
 652              		.section	.text._RME_Fetch_Add_Single,"ax",%progbits
 653              		.align	2
 654              		.global	_RME_Fetch_Add_Single
 655              		.syntax unified
 656              		.arm
 658              	_RME_Fetch_Add_Single:
 659              	.LFB7:
 868:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Comp_Swap_Single ****************************************/
 869:../../Source/Kernel/rme_kernel.c **** 
 870:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_Add_Single *********************************************
 871:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-add atomic instruction. Increase the value that is
 872:../../Source/Kernel/rme_kernel.c ****               pointed to by the pointer, and return the value before addition.
 873:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 874:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 875:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Addend - The number to add.
 876:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 877:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the addition.
 878:../../Source/Kernel/rme_kernel.c **** *******************************************************************************/
 879:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_Add_Single(volatile rme_ptr_t* Ptr,
 880:../../Source/Kernel/rme_kernel.c ****                                 rme_cnt_t Addend)
 881:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 28


 660              		.loc 1 881 1
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 16
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 04B02DE5 		str	fp, [sp, #-4]!
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 11, -4
 668 0004 00B08DE2 		add	fp, sp, #0
 669              		.cfi_def_cfa_register 11
 670 0008 14D04DE2 		sub	sp, sp, #20
 671 000c 10000BE5 		str	r0, [fp, #-16]
 672 0010 14100BE5 		str	r1, [fp, #-20]
 882:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Old;
 883:../../Source/Kernel/rme_kernel.c **** 
 884:../../Source/Kernel/rme_kernel.c ****     Old=(rme_cnt_t)(*Ptr);
 673              		.loc 1 884 21
 674 0014 10301BE5 		ldr	r3, [fp, #-16]
 675 0018 003093E5 		ldr	r3, [r3]
 676              		.loc 1 884 8
 677 001c 08300BE5 		str	r3, [fp, #-8]
 885:../../Source/Kernel/rme_kernel.c ****     *Ptr=(rme_ptr_t)(Old+Addend);
 678              		.loc 1 885 25
 679 0020 08201BE5 		ldr	r2, [fp, #-8]
 680 0024 14301BE5 		ldr	r3, [fp, #-20]
 681 0028 033082E0 		add	r3, r2, r3
 682              		.loc 1 885 10
 683 002c 0320A0E1 		mov	r2, r3
 684              		.loc 1 885 9
 685 0030 10301BE5 		ldr	r3, [fp, #-16]
 686 0034 002083E5 		str	r2, [r3]
 886:../../Source/Kernel/rme_kernel.c **** 
 887:../../Source/Kernel/rme_kernel.c ****     return (rme_ptr_t)Old;
 687              		.loc 1 887 12
 688 0038 08301BE5 		ldr	r3, [fp, #-8]
 888:../../Source/Kernel/rme_kernel.c **** }
 689              		.loc 1 888 1
 690 003c 0300A0E1 		mov	r0, r3
 691 0040 00D08BE2 		add	sp, fp, #0
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 0044 04B09DE4 		ldr	fp, [sp], #4
 695              		.cfi_restore 11
 696              		.cfi_def_cfa_offset 0
 697 0048 1EFF2FE1 		bx	lr
 698              		.cfi_endproc
 699              	.LFE7:
 701              		.section	.text._RME_Fetch_And_Single,"ax",%progbits
 702              		.align	2
 703              		.global	_RME_Fetch_And_Single
 704              		.syntax unified
 705              		.arm
 707              	_RME_Fetch_And_Single:
 708              	.LFB8:
 889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_Add_Single ****************************************/
 890:../../Source/Kernel/rme_kernel.c **** 
 891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_And_Single *********************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 29


 892:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-logic-and atomic instruction. Logic AND the pointer
 893:../../Source/Kernel/rme_kernel.c ****               value with the operand, and return the value before logic AND.
 894:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 895:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 896:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Operand - The number to logic AND with the destination.
 897:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 898:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the AND operation.
 899:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 900:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_And_Single(volatile rme_ptr_t* Ptr,
 901:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Operand)
 902:../../Source/Kernel/rme_kernel.c **** {
 709              		.loc 1 902 1
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 16
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 04B02DE5 		str	fp, [sp, #-4]!
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 11, -4
 717 0004 00B08DE2 		add	fp, sp, #0
 718              		.cfi_def_cfa_register 11
 719 0008 14D04DE2 		sub	sp, sp, #20
 720 000c 10000BE5 		str	r0, [fp, #-16]
 721 0010 14100BE5 		str	r1, [fp, #-20]
 903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old;
 904:../../Source/Kernel/rme_kernel.c **** 
 905:../../Source/Kernel/rme_kernel.c ****     Old=*Ptr;
 722              		.loc 1 905 8
 723 0014 10301BE5 		ldr	r3, [fp, #-16]
 724 0018 003093E5 		ldr	r3, [r3]
 725 001c 08300BE5 		str	r3, [fp, #-8]
 906:../../Source/Kernel/rme_kernel.c ****     *Ptr=Old&Operand;
 726              		.loc 1 906 13
 727 0020 08201BE5 		ldr	r2, [fp, #-8]
 728 0024 14301BE5 		ldr	r3, [fp, #-20]
 729 0028 032002E0 		and	r2, r2, r3
 730              		.loc 1 906 9
 731 002c 10301BE5 		ldr	r3, [fp, #-16]
 732 0030 002083E5 		str	r2, [r3]
 907:../../Source/Kernel/rme_kernel.c **** 
 908:../../Source/Kernel/rme_kernel.c ****     return Old;
 733              		.loc 1 908 12
 734 0034 08301BE5 		ldr	r3, [fp, #-8]
 909:../../Source/Kernel/rme_kernel.c **** }
 735              		.loc 1 909 1
 736 0038 0300A0E1 		mov	r0, r3
 737 003c 00D08BE2 		add	sp, fp, #0
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0040 04B09DE4 		ldr	fp, [sp], #4
 741              		.cfi_restore 11
 742              		.cfi_def_cfa_offset 0
 743 0044 1EFF2FE1 		bx	lr
 744              		.cfi_endproc
 745              	.LFE8:
 747              		.section	.text._RME_List_Crt,"ax",%progbits
 748              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 30


 749              		.global	_RME_List_Crt
 750              		.syntax unified
 751              		.arm
 753              	_RME_List_Crt:
 754              	.LFB9:
 910:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_And_Single ****************************************/
 911:../../Source/Kernel/rme_kernel.c **** 
 912:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Crt *****************************************************
 913:../../Source/Kernel/rme_kernel.c **** Description : Create a doubly linked list.
 914:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Head - The pointer to the list head.
 915:../../Source/Kernel/rme_kernel.c **** Output      : None.
 916:../../Source/Kernel/rme_kernel.c **** Return      : None.
 917:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 918:../../Source/Kernel/rme_kernel.c **** void _RME_List_Crt(struct RME_List* Head)
 919:../../Source/Kernel/rme_kernel.c **** {
 755              		.loc 1 919 1
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760 0000 04B02DE5 		str	fp, [sp, #-4]!
 761              		.cfi_def_cfa_offset 4
 762              		.cfi_offset 11, -4
 763 0004 00B08DE2 		add	fp, sp, #0
 764              		.cfi_def_cfa_register 11
 765 0008 0CD04DE2 		sub	sp, sp, #12
 766 000c 08000BE5 		str	r0, [fp, #-8]
 920:../../Source/Kernel/rme_kernel.c ****     Head->Prev=Head;
 767              		.loc 1 920 15
 768 0010 08301BE5 		ldr	r3, [fp, #-8]
 769 0014 08201BE5 		ldr	r2, [fp, #-8]
 770 0018 042083E5 		str	r2, [r3, #4]
 921:../../Source/Kernel/rme_kernel.c ****     Head->Next=Head;
 771              		.loc 1 921 15
 772 001c 08301BE5 		ldr	r3, [fp, #-8]
 773 0020 08201BE5 		ldr	r2, [fp, #-8]
 774 0024 002083E5 		str	r2, [r3]
 922:../../Source/Kernel/rme_kernel.c **** }
 775              		.loc 1 922 1
 776 0028 00F020E3 		nop
 777 002c 00D08BE2 		add	sp, fp, #0
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 0030 04B09DE4 		ldr	fp, [sp], #4
 781              		.cfi_restore 11
 782              		.cfi_def_cfa_offset 0
 783 0034 1EFF2FE1 		bx	lr
 784              		.cfi_endproc
 785              	.LFE9:
 787              		.section	.text._RME_List_Del,"ax",%progbits
 788              		.align	2
 789              		.global	_RME_List_Del
 790              		.syntax unified
 791              		.arm
 793              	_RME_List_Del:
 794              	.LFB10:
 923:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Crt ************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 31


 924:../../Source/Kernel/rme_kernel.c **** 
 925:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Del *****************************************************
 926:../../Source/Kernel/rme_kernel.c **** Description : Delete a node from the doubly-linked list.
 927:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Prev - The previous node.
 928:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 929:../../Source/Kernel/rme_kernel.c **** Output      : None.
 930:../../Source/Kernel/rme_kernel.c **** Return      : None.
 931:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 932:../../Source/Kernel/rme_kernel.c **** void _RME_List_Del(struct RME_List* Prev,
 933:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 934:../../Source/Kernel/rme_kernel.c **** {
 795              		.loc 1 934 1
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 8
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0000 04B02DE5 		str	fp, [sp, #-4]!
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 11, -4
 803 0004 00B08DE2 		add	fp, sp, #0
 804              		.cfi_def_cfa_register 11
 805 0008 0CD04DE2 		sub	sp, sp, #12
 806 000c 08000BE5 		str	r0, [fp, #-8]
 807 0010 0C100BE5 		str	r1, [fp, #-12]
 935:../../Source/Kernel/rme_kernel.c ****     Next->Prev=Prev;
 808              		.loc 1 935 15
 809 0014 0C301BE5 		ldr	r3, [fp, #-12]
 810 0018 08201BE5 		ldr	r2, [fp, #-8]
 811 001c 042083E5 		str	r2, [r3, #4]
 936:../../Source/Kernel/rme_kernel.c ****     Prev->Next=Next;
 812              		.loc 1 936 15
 813 0020 08301BE5 		ldr	r3, [fp, #-8]
 814 0024 0C201BE5 		ldr	r2, [fp, #-12]
 815 0028 002083E5 		str	r2, [r3]
 937:../../Source/Kernel/rme_kernel.c **** }
 816              		.loc 1 937 1
 817 002c 00F020E3 		nop
 818 0030 00D08BE2 		add	sp, fp, #0
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 0034 04B09DE4 		ldr	fp, [sp], #4
 822              		.cfi_restore 11
 823              		.cfi_def_cfa_offset 0
 824 0038 1EFF2FE1 		bx	lr
 825              		.cfi_endproc
 826              	.LFE10:
 828              		.section	.text._RME_List_Ins,"ax",%progbits
 829              		.align	2
 830              		.global	_RME_List_Ins
 831              		.syntax unified
 832              		.arm
 834              	_RME_List_Ins:
 835              	.LFB11:
 938:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Del ************************************************/
 939:../../Source/Kernel/rme_kernel.c **** 
 940:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Ins *****************************************************
 941:../../Source/Kernel/rme_kernel.c **** Description : Insert a node to the doubly-linked list.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 32


 942:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* New - The new node to insert.
 943:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Prev - The previous node.
 944:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 945:../../Source/Kernel/rme_kernel.c **** Output      : None.
 946:../../Source/Kernel/rme_kernel.c **** Return      : None.
 947:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 948:../../Source/Kernel/rme_kernel.c **** void _RME_List_Ins(struct RME_List* New,
 949:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Prev,
 950:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 951:../../Source/Kernel/rme_kernel.c **** {
 836              		.loc 1 951 1
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 16
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 04B02DE5 		str	fp, [sp, #-4]!
 842              		.cfi_def_cfa_offset 4
 843              		.cfi_offset 11, -4
 844 0004 00B08DE2 		add	fp, sp, #0
 845              		.cfi_def_cfa_register 11
 846 0008 14D04DE2 		sub	sp, sp, #20
 847 000c 08000BE5 		str	r0, [fp, #-8]
 848 0010 0C100BE5 		str	r1, [fp, #-12]
 849 0014 10200BE5 		str	r2, [fp, #-16]
 952:../../Source/Kernel/rme_kernel.c ****     Next->Prev=New;
 850              		.loc 1 952 15
 851 0018 10301BE5 		ldr	r3, [fp, #-16]
 852 001c 08201BE5 		ldr	r2, [fp, #-8]
 853 0020 042083E5 		str	r2, [r3, #4]
 953:../../Source/Kernel/rme_kernel.c ****     New->Next=Next;
 854              		.loc 1 953 14
 855 0024 08301BE5 		ldr	r3, [fp, #-8]
 856 0028 10201BE5 		ldr	r2, [fp, #-16]
 857 002c 002083E5 		str	r2, [r3]
 954:../../Source/Kernel/rme_kernel.c ****     New->Prev=Prev;
 858              		.loc 1 954 14
 859 0030 08301BE5 		ldr	r3, [fp, #-8]
 860 0034 0C201BE5 		ldr	r2, [fp, #-12]
 861 0038 042083E5 		str	r2, [r3, #4]
 955:../../Source/Kernel/rme_kernel.c ****     Prev->Next=New;
 862              		.loc 1 955 15
 863 003c 0C301BE5 		ldr	r3, [fp, #-12]
 864 0040 08201BE5 		ldr	r2, [fp, #-8]
 865 0044 002083E5 		str	r2, [r3]
 956:../../Source/Kernel/rme_kernel.c **** }
 866              		.loc 1 956 1
 867 0048 00F020E3 		nop
 868 004c 00D08BE2 		add	sp, fp, #0
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 0050 04B09DE4 		ldr	fp, [sp], #4
 872              		.cfi_restore 11
 873              		.cfi_def_cfa_offset 0
 874 0054 1EFF2FE1 		bx	lr
 875              		.cfi_endproc
 876              	.LFE11:
 878              		.section	.text._RME_Clear,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 33


 879              		.align	2
 880              		.global	_RME_Clear
 881              		.syntax unified
 882              		.arm
 884              	_RME_Clear:
 885              	.LFB12:
 957:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Ins ************************************************/
 958:../../Source/Kernel/rme_kernel.c **** 
 959:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Clear ********************************************************
 960:../../Source/Kernel/rme_kernel.c **** Description : Memset a memory area to zero. This is not fast due to byte operations;
 961:../../Source/Kernel/rme_kernel.c ****               this is not meant for large memory. However, it is indeed secure.
 962:../../Source/Kernel/rme_kernel.c **** Input       : void* Addr - The address to clear.
 963:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
 964:../../Source/Kernel/rme_kernel.c **** Output      : None.
 965:../../Source/Kernel/rme_kernel.c **** Return      : None.
 966:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 967:../../Source/Kernel/rme_kernel.c **** void _RME_Clear(void* Addr,
 968:../../Source/Kernel/rme_kernel.c ****                 rme_ptr_t Size)
 969:../../Source/Kernel/rme_kernel.c **** {
 886              		.loc 1 969 1
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 16
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 04B02DE5 		str	fp, [sp, #-4]!
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 11, -4
 894 0004 00B08DE2 		add	fp, sp, #0
 895              		.cfi_def_cfa_register 11
 896 0008 14D04DE2 		sub	sp, sp, #20
 897 000c 10000BE5 		str	r0, [fp, #-16]
 898 0010 14100BE5 		str	r1, [fp, #-20]
 970:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 971:../../Source/Kernel/rme_kernel.c **** 
 972:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Size;Count++)
 899              		.loc 1 972 14
 900 0014 0030A0E3 		mov	r3, #0
 901 0018 08300BE5 		str	r3, [fp, #-8]
 902              		.loc 1 972 5
 903 001c 070000EA 		b	.L52
 904              	.L53:
 973:../../Source/Kernel/rme_kernel.c ****     {
 974:../../Source/Kernel/rme_kernel.c ****         ((rme_u8_t*)Addr)[Count]=0U;
 905              		.loc 1 974 26
 906 0020 10201BE5 		ldr	r2, [fp, #-16]
 907 0024 08301BE5 		ldr	r3, [fp, #-8]
 908 0028 033082E0 		add	r3, r2, r3
 909              		.loc 1 974 33
 910 002c 0020A0E3 		mov	r2, #0
 911 0030 0020C3E5 		strb	r2, [r3]
 972:../../Source/Kernel/rme_kernel.c ****     {
 912              		.loc 1 972 34 discriminator 3
 913 0034 08301BE5 		ldr	r3, [fp, #-8]
 914 0038 013083E2 		add	r3, r3, #1
 915 003c 08300BE5 		str	r3, [fp, #-8]
 916              	.L52:
 972:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 34


 917              		.loc 1 972 23 discriminator 1
 918 0040 08201BE5 		ldr	r2, [fp, #-8]
 919 0044 14301BE5 		ldr	r3, [fp, #-20]
 920 0048 030052E1 		cmp	r2, r3
 921 004c F3FFFF3A 		bcc	.L53
 975:../../Source/Kernel/rme_kernel.c ****     }
 976:../../Source/Kernel/rme_kernel.c **** }
 922              		.loc 1 976 1
 923 0050 00F020E3 		nop
 924 0054 00F020E3 		nop
 925 0058 00D08BE2 		add	sp, fp, #0
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 005c 04B09DE4 		ldr	fp, [sp], #4
 929              		.cfi_restore 11
 930              		.cfi_def_cfa_offset 0
 931 0060 1EFF2FE1 		bx	lr
 932              		.cfi_endproc
 933              	.LFE12:
 935              		.section	.text._RME_Memcmp,"ax",%progbits
 936              		.align	2
 937              		.global	_RME_Memcmp
 938              		.syntax unified
 939              		.arm
 941              	_RME_Memcmp:
 942              	.LFB13:
 977:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Clear ***************************************************/
 978:../../Source/Kernel/rme_kernel.c **** 
 979:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcmp *******************************************************
 980:../../Source/Kernel/rme_kernel.c **** Description : Compare two memory segments to see if they are equal. This is not
 981:../../Source/Kernel/rme_kernel.c ****               fast due to byte operations; this is not meant for large memory.
 982:../../Source/Kernel/rme_kernel.c **** Input       : const void* Ptr1 - The first memory region.
 983:../../Source/Kernel/rme_kernel.c ****               const void* Ptr2 - The second memory region.
 984:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
 985:../../Source/Kernel/rme_kernel.c **** Output      : None.
 986:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If Ptr1>Ptr2, then return a positive value; else a negative
 987:../../Source/Kernel/rme_kernel.c ****                           value. If Ptr1==Ptr2, then return 0;
 988:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 989:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Memcmp(const void* Ptr1,
 990:../../Source/Kernel/rme_kernel.c ****                       const void* Ptr2,
 991:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Num)
 992:../../Source/Kernel/rme_kernel.c **** {
 943              		.loc 1 992 1
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 32
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948 0000 04B02DE5 		str	fp, [sp, #-4]!
 949              		.cfi_def_cfa_offset 4
 950              		.cfi_offset 11, -4
 951 0004 00B08DE2 		add	fp, sp, #0
 952              		.cfi_def_cfa_register 11
 953 0008 24D04DE2 		sub	sp, sp, #36
 954 000c 18000BE5 		str	r0, [fp, #-24]
 955 0010 1C100BE5 		str	r1, [fp, #-28]
 956 0014 20200BE5 		str	r2, [fp, #-32]
 993:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Dst;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 35


 994:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Src;
 995:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 996:../../Source/Kernel/rme_kernel.c **** 
 997:../../Source/Kernel/rme_kernel.c ****     Dst=(const rme_s8_t*)Ptr1;
 957              		.loc 1 997 8
 958 0018 18301BE5 		ldr	r3, [fp, #-24]
 959 001c 0C300BE5 		str	r3, [fp, #-12]
 998:../../Source/Kernel/rme_kernel.c ****     Src=(const rme_s8_t*)Ptr2;
 960              		.loc 1 998 8
 961 0020 1C301BE5 		ldr	r3, [fp, #-28]
 962 0024 10300BE5 		str	r3, [fp, #-16]
 999:../../Source/Kernel/rme_kernel.c **** 
1000:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 963              		.loc 1 1000 14
 964 0028 0030A0E3 		mov	r3, #0
 965 002c 08300BE5 		str	r3, [fp, #-8]
 966              		.loc 1 1000 5
 967 0030 170000EA 		b	.L55
 968              	.L58:
1001:../../Source/Kernel/rme_kernel.c ****     {
1002:../../Source/Kernel/rme_kernel.c ****         if(Dst[Count]!=Src[Count])
 969              		.loc 1 1002 15
 970 0034 0C201BE5 		ldr	r2, [fp, #-12]
 971 0038 08301BE5 		ldr	r3, [fp, #-8]
 972 003c 033082E0 		add	r3, r2, r3
 973 0040 D020D3E1 		ldrsb	r2, [r3]
 974              		.loc 1 1002 27
 975 0044 10101BE5 		ldr	r1, [fp, #-16]
 976 0048 08301BE5 		ldr	r3, [fp, #-8]
 977 004c 033081E0 		add	r3, r1, r3
 978 0050 D030D3E1 		ldrsb	r3, [r3]
 979              		.loc 1 1002 11
 980 0054 030052E1 		cmp	r2, r3
 981 0058 0A00000A 		beq	.L56
1003:../../Source/Kernel/rme_kernel.c ****         {
1004:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1005:../../Source/Kernel/rme_kernel.c ****             
1006:../../Source/Kernel/rme_kernel.c ****             return Dst[Count]-Src[Count];
 982              		.loc 1 1006 23
 983 005c 0C201BE5 		ldr	r2, [fp, #-12]
 984 0060 08301BE5 		ldr	r3, [fp, #-8]
 985 0064 033082E0 		add	r3, r2, r3
 986 0068 D030D3E1 		ldrsb	r3, [r3]
 987 006c 0310A0E1 		mov	r1, r3
 988              		.loc 1 1006 34
 989 0070 10201BE5 		ldr	r2, [fp, #-16]
 990 0074 08301BE5 		ldr	r3, [fp, #-8]
 991 0078 033082E0 		add	r3, r2, r3
 992 007c D030D3E1 		ldrsb	r3, [r3]
 993              		.loc 1 1006 30
 994 0080 033041E0 		sub	r3, r1, r3
 995 0084 070000EA 		b	.L57
 996              	.L56:
1000:../../Source/Kernel/rme_kernel.c ****     {
 997              		.loc 1 1000 33 discriminator 2
 998 0088 08301BE5 		ldr	r3, [fp, #-8]
 999 008c 013083E2 		add	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 36


 1000 0090 08300BE5 		str	r3, [fp, #-8]
 1001              	.L55:
1000:../../Source/Kernel/rme_kernel.c ****     {
 1002              		.loc 1 1000 23 discriminator 1
 1003 0094 08201BE5 		ldr	r2, [fp, #-8]
 1004 0098 20301BE5 		ldr	r3, [fp, #-32]
 1005 009c 030052E1 		cmp	r2, r3
 1006 00a0 E3FFFF3A 		bcc	.L58
1007:../../Source/Kernel/rme_kernel.c ****         }
1008:../../Source/Kernel/rme_kernel.c ****         else
1009:../../Source/Kernel/rme_kernel.c ****         {
1010:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1011:../../Source/Kernel/rme_kernel.c ****             /* No action required */
1012:../../Source/Kernel/rme_kernel.c ****         }
1013:../../Source/Kernel/rme_kernel.c ****     }
1014:../../Source/Kernel/rme_kernel.c **** 
1015:../../Source/Kernel/rme_kernel.c ****     return 0;
 1007              		.loc 1 1015 12
 1008 00a4 0030A0E3 		mov	r3, #0
 1009              	.L57:
1016:../../Source/Kernel/rme_kernel.c **** }
 1010              		.loc 1 1016 1
 1011 00a8 0300A0E1 		mov	r0, r3
 1012 00ac 00D08BE2 		add	sp, fp, #0
 1013              		.cfi_def_cfa_register 13
 1014              		@ sp needed
 1015 00b0 04B09DE4 		ldr	fp, [sp], #4
 1016              		.cfi_restore 11
 1017              		.cfi_def_cfa_offset 0
 1018 00b4 1EFF2FE1 		bx	lr
 1019              		.cfi_endproc
 1020              	.LFE13:
 1022              		.section	.text._RME_Memcpy,"ax",%progbits
 1023              		.align	2
 1024              		.global	_RME_Memcpy
 1025              		.syntax unified
 1026              		.arm
 1028              	_RME_Memcpy:
 1029              	.LFB14:
1017:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcmp **************************************************/
1018:../../Source/Kernel/rme_kernel.c **** 
1019:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcpy *******************************************************
1020:../../Source/Kernel/rme_kernel.c **** Description : Copy one segment of memory to another segment. This is not fast
1021:../../Source/Kernel/rme_kernel.c ****               due to byte operations; this is not meant for large memory.
1022:../../Source/Kernel/rme_kernel.c **** Input       : volatile void* Dst - The first memory region.
1023:../../Source/Kernel/rme_kernel.c ****               volatile void* Src - The second memory region.
1024:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
1025:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
1026:../../Source/Kernel/rme_kernel.c **** Output      : None.
1027:../../Source/Kernel/rme_kernel.c **** Return      : None.
1028:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1029:../../Source/Kernel/rme_kernel.c **** void _RME_Memcpy(void* Dst,
1030:../../Source/Kernel/rme_kernel.c ****                  void* Src,
1031:../../Source/Kernel/rme_kernel.c ****                  rme_ptr_t Num)
1032:../../Source/Kernel/rme_kernel.c **** {
 1030              		.loc 1 1032 1
 1031              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 37


 1032              		@ args = 0, pretend = 0, frame = 24
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035 0000 04B02DE5 		str	fp, [sp, #-4]!
 1036              		.cfi_def_cfa_offset 4
 1037              		.cfi_offset 11, -4
 1038 0004 00B08DE2 		add	fp, sp, #0
 1039              		.cfi_def_cfa_register 11
 1040 0008 1CD04DE2 		sub	sp, sp, #28
 1041 000c 10000BE5 		str	r0, [fp, #-16]
 1042 0010 14100BE5 		str	r1, [fp, #-20]
 1043 0014 18200BE5 		str	r2, [fp, #-24]
1033:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1034:../../Source/Kernel/rme_kernel.c **** 
1035:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 1044              		.loc 1 1035 14
 1045 0018 0030A0E3 		mov	r3, #0
 1046 001c 08300BE5 		str	r3, [fp, #-8]
 1047              		.loc 1 1035 5
 1048 0020 0B0000EA 		b	.L60
 1049              	.L61:
1036:../../Source/Kernel/rme_kernel.c ****     {
1037:../../Source/Kernel/rme_kernel.c ****         ((volatile rme_u8_t*)Dst)[Count]=((volatile rme_u8_t*)Src)[Count];
 1050              		.loc 1 1037 67
 1051 0024 14201BE5 		ldr	r2, [fp, #-20]
 1052 0028 08301BE5 		ldr	r3, [fp, #-8]
 1053 002c 032082E0 		add	r2, r2, r3
 1054              		.loc 1 1037 34
 1055 0030 10101BE5 		ldr	r1, [fp, #-16]
 1056 0034 08301BE5 		ldr	r3, [fp, #-8]
 1057 0038 033081E0 		add	r3, r1, r3
 1058              		.loc 1 1037 67
 1059 003c 0020D2E5 		ldrb	r2, [r2]
 1060 0040 7220EFE6 		uxtb	r2, r2
 1061              		.loc 1 1037 41
 1062 0044 0020C3E5 		strb	r2, [r3]
1035:../../Source/Kernel/rme_kernel.c ****     {
 1063              		.loc 1 1035 33 discriminator 3
 1064 0048 08301BE5 		ldr	r3, [fp, #-8]
 1065 004c 013083E2 		add	r3, r3, #1
 1066 0050 08300BE5 		str	r3, [fp, #-8]
 1067              	.L60:
1035:../../Source/Kernel/rme_kernel.c ****     {
 1068              		.loc 1 1035 23 discriminator 1
 1069 0054 08201BE5 		ldr	r2, [fp, #-8]
 1070 0058 18301BE5 		ldr	r3, [fp, #-24]
 1071 005c 030052E1 		cmp	r2, r3
 1072 0060 EFFFFF3A 		bcc	.L61
1038:../../Source/Kernel/rme_kernel.c ****     }
1039:../../Source/Kernel/rme_kernel.c **** }
 1073              		.loc 1 1039 1
 1074 0064 00F020E3 		nop
 1075 0068 00F020E3 		nop
 1076 006c 00D08BE2 		add	sp, fp, #0
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 0070 04B09DE4 		ldr	fp, [sp], #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 38


 1080              		.cfi_restore 11
 1081              		.cfi_def_cfa_offset 0
 1082 0074 1EFF2FE1 		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE14:
 1086              		.section	.text._RME_Diff,"ax",%progbits
 1087              		.align	2
 1088              		.global	_RME_Diff
 1089              		.syntax unified
 1090              		.arm
 1092              	_RME_Diff:
 1093              	.LFB15:
1040:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcpy **************************************************/
1041:../../Source/Kernel/rme_kernel.c **** 
1042:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Diff *********************************************************
1043:../../Source/Kernel/rme_kernel.c **** Description : Compute the absolute difference between two numbers, when integer
1044:../../Source/Kernel/rme_kernel.c ****               wraparound is considered.
1045:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Num1 - The first number.
1046:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num2 - The second number.
1047:../../Source/Kernel/rme_kernel.c **** Output      : None.
1048:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The distance.
1049:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1050:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Diff(rme_ptr_t Num1,
1051:../../Source/Kernel/rme_kernel.c ****                     rme_ptr_t Num2)
1052:../../Source/Kernel/rme_kernel.c **** {
 1094              		.loc 1 1052 1
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 16
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0000 04B02DE5 		str	fp, [sp, #-4]!
 1100              		.cfi_def_cfa_offset 4
 1101              		.cfi_offset 11, -4
 1102 0004 00B08DE2 		add	fp, sp, #0
 1103              		.cfi_def_cfa_register 11
 1104 0008 14D04DE2 		sub	sp, sp, #20
 1105 000c 10000BE5 		str	r0, [fp, #-16]
 1106 0010 14100BE5 		str	r1, [fp, #-20]
1053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff1;
1054:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff2;
1055:../../Source/Kernel/rme_kernel.c ****     
1056:../../Source/Kernel/rme_kernel.c ****     Diff1=Num1-Num2;
 1107              		.loc 1 1056 10
 1108 0014 10201BE5 		ldr	r2, [fp, #-16]
 1109 0018 14301BE5 		ldr	r3, [fp, #-20]
 1110 001c 033042E0 		sub	r3, r2, r3
 1111 0020 08300BE5 		str	r3, [fp, #-8]
1057:../../Source/Kernel/rme_kernel.c ****     Diff2=Num2-Num1;
 1112              		.loc 1 1057 10
 1113 0024 14201BE5 		ldr	r2, [fp, #-20]
 1114 0028 10301BE5 		ldr	r3, [fp, #-16]
 1115 002c 033042E0 		sub	r3, r2, r3
 1116 0030 0C300BE5 		str	r3, [fp, #-12]
1058:../../Source/Kernel/rme_kernel.c ****     
1059:../../Source/Kernel/rme_kernel.c ****     if(Diff1>Diff2)
 1117              		.loc 1 1059 7
 1118 0034 08201BE5 		ldr	r2, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 39


 1119 0038 0C301BE5 		ldr	r3, [fp, #-12]
 1120 003c 030052E1 		cmp	r2, r3
 1121 0040 0100009A 		bls	.L63
1060:../../Source/Kernel/rme_kernel.c ****     {
1061:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1062:../../Source/Kernel/rme_kernel.c ****         
1063:../../Source/Kernel/rme_kernel.c ****         return Diff2;
 1122              		.loc 1 1063 16
 1123 0044 0C301BE5 		ldr	r3, [fp, #-12]
 1124 0048 000000EA 		b	.L64
 1125              	.L63:
1064:../../Source/Kernel/rme_kernel.c ****     }
1065:../../Source/Kernel/rme_kernel.c ****     else
1066:../../Source/Kernel/rme_kernel.c ****     {
1067:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1068:../../Source/Kernel/rme_kernel.c ****         
1069:../../Source/Kernel/rme_kernel.c ****         return Diff1;
 1126              		.loc 1 1069 16
 1127 004c 08301BE5 		ldr	r3, [fp, #-8]
 1128              	.L64:
1070:../../Source/Kernel/rme_kernel.c ****     }
1071:../../Source/Kernel/rme_kernel.c **** }
 1129              		.loc 1 1071 1
 1130 0050 0300A0E1 		mov	r0, r3
 1131 0054 00D08BE2 		add	sp, fp, #0
 1132              		.cfi_def_cfa_register 13
 1133              		@ sp needed
 1134 0058 04B09DE4 		ldr	fp, [sp], #4
 1135              		.cfi_restore 11
 1136              		.cfi_def_cfa_offset 0
 1137 005c 1EFF2FE1 		bx	lr
 1138              		.cfi_endproc
 1139              	.LFE15:
 1141              		.section	.text.RME_Kmain,"ax",%progbits
 1142              		.align	2
 1143              		.global	RME_Kmain
 1144              		.syntax unified
 1145              		.arm
 1147              	RME_Kmain:
 1148              	.LFB16:
1072:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Diff ****************************************************/
1073:../../Source/Kernel/rme_kernel.c **** 
1074:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Kmain *********************************************************
1075:../../Source/Kernel/rme_kernel.c **** Description : The entry of the operating system.
1076:../../Source/Kernel/rme_kernel.c **** Input       : None.
1077:../../Source/Kernel/rme_kernel.c **** Output      : None.
1078:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - This function never returns.
1079:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1080:../../Source/Kernel/rme_kernel.c **** rme_ret_t RME_Kmain(void)
1081:../../Source/Kernel/rme_kernel.c **** {
 1149              		.loc 1 1081 1
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 00482DE9 		push	{fp, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 40


 1156              		.cfi_offset 14, -4
 1157 0004 04B08DE2 		add	fp, sp, #4
 1158              		.cfi_def_cfa 11, 4
1082:../../Source/Kernel/rme_kernel.c ****     /* Disable all interrupts first */
1083:../../Source/Kernel/rme_kernel.c ****     __RME_Int_Disable();
 1159              		.loc 1 1083 5
 1160 0008 FEFFFFEB 		bl	__RME_Int_Disable
1084:../../Source/Kernel/rme_kernel.c ****     /* Some low-level kernel assertions */
1085:../../Source/Kernel/rme_kernel.c ****     _RME_Lowlvl_Check();
 1161              		.loc 1 1085 5
 1162 000c FEFFFFEB 		bl	_RME_Lowlvl_Check
1086:../../Source/Kernel/rme_kernel.c ****     /* Hardware low-level init */
1087:../../Source/Kernel/rme_kernel.c ****     __RME_Lowlvl_Init();
 1163              		.loc 1 1087 5
 1164 0010 FEFFFFEB 		bl	__RME_Lowlvl_Init
1088:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel page tables or memory mappings */
1089:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Kom_Init();
 1165              		.loc 1 1089 5
 1166 0014 FEFFFFEB 		bl	__RME_Pgt_Kom_Init
1090:../../Source/Kernel/rme_kernel.c ****     
1091:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel object allocation table - default init */
1092:../../Source/Kernel/rme_kernel.c ****     _RME_Kot_Init(RME_KOT_WORD_NUM);
 1167              		.loc 1 1092 5
 1168 0018 0206A0E3 		mov	r0, #2097152
 1169 001c FEFFFFEB 		bl	_RME_Kot_Init
1093:../../Source/Kernel/rme_kernel.c ****     
1094:../../Source/Kernel/rme_kernel.c ****     /* Boot into the first process */
1095:../../Source/Kernel/rme_kernel.c ****     __RME_Boot();
 1170              		.loc 1 1095 5
 1171 0020 FEFFFFEB 		bl	__RME_Boot
1096:../../Source/Kernel/rme_kernel.c ****     
1097:../../Source/Kernel/rme_kernel.c ****     /* Should never reach here */
1098:../../Source/Kernel/rme_kernel.c ****     return 0;
 1172              		.loc 1 1098 12
 1173 0024 0030A0E3 		mov	r3, #0
1099:../../Source/Kernel/rme_kernel.c **** }
 1174              		.loc 1 1099 1
 1175 0028 0300A0E1 		mov	r0, r3
 1176 002c 0088BDE8 		pop	{fp, pc}
 1177              		.cfi_endproc
 1178              	.LFE16:
 1180              		.section	.text._RME_Lowlvl_Check,"ax",%progbits
 1181              		.align	2
 1182              		.syntax unified
 1183              		.arm
 1185              	_RME_Lowlvl_Check:
 1186              	.LFB17:
1100:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Kmain ****************************************************/
1101:../../Source/Kernel/rme_kernel.c **** 
1102:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Lowlvl_Check *************************************************
1103:../../Source/Kernel/rme_kernel.c **** Description : Do some low-level checking for the operating system.
1104:../../Source/Kernel/rme_kernel.c **** Input       : None.
1105:../../Source/Kernel/rme_kernel.c **** Output      : None.
1106:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
1107:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1108:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Lowlvl_Check(void)
1109:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 41


 1187              		.loc 1 1109 1
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192 0000 04B02DE5 		str	fp, [sp, #-4]!
 1193              		.cfi_def_cfa_offset 4
 1194              		.cfi_offset 11, -4
 1195 0004 00B08DE2 		add	fp, sp, #0
 1196              		.cfi_def_cfa_register 11
1110:../../Source/Kernel/rme_kernel.c ****     /* Make sure the machine is at least 32-bit */
1111:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_ORDER>=5U);
1112:../../Source/Kernel/rme_kernel.c ****     /* Check if the word order setting is correct */
1113:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_BIT==RME_POW2(RME_WORD_ORDER));
1114:../../Source/Kernel/rme_kernel.c ****     /* Check if the struct sizes are correct */
1115:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Struct)==RME_CAP_SIZE);
1116:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Cpt)==RME_CAP_SIZE);
1117:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1118:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Pgt)==RME_CAP_SIZE);
1119:../../Source/Kernel/rme_kernel.c **** #endif
1120:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Prc)==RME_CAP_SIZE);
1121:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Thd)==RME_CAP_SIZE);
1122:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Sig)==RME_CAP_SIZE);
1123:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Inv)==RME_CAP_SIZE);
1124:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kfn)==RME_CAP_SIZE);
1125:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kom)==RME_CAP_SIZE);
1126:../../Source/Kernel/rme_kernel.c ****     /* Check if the other configurations are correct */
1127:../../Source/Kernel/rme_kernel.c ****     /* Kernel memory allocation minimal size aligned to word boundary */
1128:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_KOM_SLOT_ORDER>=RME_WORD_ORDER-3U);
1129:../../Source/Kernel/rme_kernel.c ****     /* Make sure the number of priorities do not exceed half-word boundary */
1130:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_PREEMPT_PRIO_NUM<=RME_POW2(RME_WORD_BIT>>1));
1131:../../Source/Kernel/rme_kernel.c ****     
1132:../../Source/Kernel/rme_kernel.c ****     return 0;
 1197              		.loc 1 1132 12
 1198 0008 0030A0E3 		mov	r3, #0
1133:../../Source/Kernel/rme_kernel.c **** }
 1199              		.loc 1 1133 1
 1200 000c 0300A0E1 		mov	r0, r3
 1201 0010 00D08BE2 		add	sp, fp, #0
 1202              		.cfi_def_cfa_register 13
 1203              		@ sp needed
 1204 0014 04B09DE4 		ldr	fp, [sp], #4
 1205              		.cfi_restore 11
 1206              		.cfi_def_cfa_offset 0
 1207 0018 1EFF2FE1 		bx	lr
 1208              		.cfi_endproc
 1209              	.LFE17:
 1211              		.section	.text._RME_Svc_Handler,"ax",%progbits
 1212              		.align	2
 1213              		.global	_RME_Svc_Handler
 1214              		.syntax unified
 1215              		.arm
 1217              	_RME_Svc_Handler:
 1218              	.LFB18:
1134:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Lowlvl_Check ********************************************/
1135:../../Source/Kernel/rme_kernel.c **** 
1136:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Svc_Handler **************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 42


1137:../../Source/Kernel/rme_kernel.c **** Description : The system call handler of the operating system. The register set 
1138:../../Source/Kernel/rme_kernel.c ****               of the current thread shall be passed in as a parameter.
1139:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1140:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1141:../../Source/Kernel/rme_kernel.c **** Return      : None.
1142:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1143:../../Source/Kernel/rme_kernel.c **** void _RME_Svc_Handler(struct RME_Reg_Struct* Reg)
1144:../../Source/Kernel/rme_kernel.c **** {
 1219              		.loc 1 1144 1
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 48
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 30482DE9 		push	{r4, r5, fp, lr}
 1224              		.cfi_def_cfa_offset 16
 1225              		.cfi_offset 4, -16
 1226              		.cfi_offset 5, -12
 1227              		.cfi_offset 11, -8
 1228              		.cfi_offset 14, -4
 1229 0004 0CB08DE2 		add	fp, sp, #12
 1230              		.cfi_def_cfa 11, 4
 1231 0008 48D04DE2 		sub	sp, sp, #72
 1232 000c 38000BE5 		str	r0, [fp, #-56]
1145:../../Source/Kernel/rme_kernel.c ****     /* What's the system call number and major capability ID? */
1146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc;
1147:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Cid;
1148:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Param[3];
1149:../../Source/Kernel/rme_kernel.c ****     rme_ret_t Retval;
1150:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc_Num;
1151:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1152:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
1153:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1154:../../Source/Kernel/rme_kernel.c **** 
1155:../../Source/Kernel/rme_kernel.c ****     /* Get the system call parameters from the system call */
1156:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Param_Get(Reg, &Svc, &Cid, Param);
 1233              		.loc 1 1156 5
 1234 0010 34304BE2 		sub	r3, fp, #52
 1235 0014 28204BE2 		sub	r2, fp, #40
 1236 0018 24104BE2 		sub	r1, fp, #36
 1237 001c 38001BE5 		ldr	r0, [fp, #-56]
 1238 0020 FEFFFFEB 		bl	__RME_Svc_Param_Get
1157:../../Source/Kernel/rme_kernel.c ****     /* System call number takes [5:0] bits */
1158:../../Source/Kernel/rme_kernel.c ****     Svc_Num=Svc&RME_MASK_END(5U);
 1239              		.loc 1 1158 16
 1240 0024 24301BE5 		ldr	r3, [fp, #-36]
 1241              		.loc 1 1158 12
 1242 0028 3F3003E2 		and	r3, r3, #63
 1243 002c 18300BE5 		str	r3, [fp, #-24]
1159:../../Source/Kernel/rme_kernel.c ****     
1160:../../Source/Kernel/rme_kernel.c ****     /* Ultra-fast path - synchronous invocation returning */
1161:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_RET)
 1244              		.loc 1 1161 7
 1245 0030 18301BE5 		ldr	r3, [fp, #-24]
 1246 0034 000053E3 		cmp	r3, #0
 1247 0038 0C00001A 		bne	.L70
1162:../../Source/Kernel/rme_kernel.c ****     {
1163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1164:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 43


1165:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Ret(Reg,                                            /* volatile struct RME_
 1248              		.loc 1 1165 16
 1249 003c 34301BE5 		ldr	r3, [fp, #-52]
 1250 0040 0020A0E3 		mov	r2, #0
 1251 0044 0310A0E1 		mov	r1, r3
 1252 0048 38001BE5 		ldr	r0, [fp, #-56]
 1253 004c FEFFFFEB 		bl	_RME_Inv_Ret
 1254 0050 10000BE5 		str	r0, [fp, #-16]
1166:../../Source/Kernel/rme_kernel.c ****                             Param[0],                                       /* rme_ptr_t Retval */
1167:../../Source/Kernel/rme_kernel.c ****                             0U);                                            /* rme_ptr_t Is_Exc */
1168:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg, Retval);
 1255              		.loc 1 1168 9
 1256 0054 10301BE5 		ldr	r3, [fp, #-16]
 1257 0058 000053E3 		cmp	r3, #0
 1258 005c 110200AA 		bge	.L69
 1259              		.loc 1 1168 9 is_stmt 0 discriminator 1
 1260 0060 10101BE5 		ldr	r1, [fp, #-16]
 1261 0064 38001BE5 		ldr	r0, [fp, #-56]
 1262 0068 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1263              		.loc 1 1168 9
 1264 006c 0D0200EA 		b	.L69
 1265              	.L70:
1169:../../Source/Kernel/rme_kernel.c ****     }
1170:../../Source/Kernel/rme_kernel.c ****     else
1171:../../Source/Kernel/rme_kernel.c ****     {
1172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1173:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1174:../../Source/Kernel/rme_kernel.c ****     }
1175:../../Source/Kernel/rme_kernel.c ****     
1176:../../Source/Kernel/rme_kernel.c ****     /* Get our current capability table. No need to check whether it is frozen
1177:../../Source/Kernel/rme_kernel.c ****      * because it can't be deleted anyway */
1178:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 1266              		.loc 1 1178 12 is_stmt 1
 1267 0070 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 1268 0074 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 1269 0078 043093E5 		ldr	r3, [r3, #4]
 1270 007c 1C300BE5 		str	r3, [fp, #-28]
1179:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd_Cur);
 1271              		.loc 1 1179 13
 1272 0080 1C301BE5 		ldr	r3, [fp, #-28]
 1273 0084 4C2093E5 		ldr	r2, [r3, #76]
 1274 0088 1C301BE5 		ldr	r3, [fp, #-28]
 1275 008c 4C3083E2 		add	r3, r3, #76
 1276 0090 030052E1 		cmp	r2, r3
 1277 0094 0200000A 		beq	.L73
 1278              		.loc 1 1179 13 is_stmt 0 discriminator 1
 1279 0098 1C301BE5 		ldr	r3, [fp, #-28]
 1280 009c 4C3093E5 		ldr	r3, [r3, #76]
 1281 00a0 000000EA 		b	.L74
 1282              	.L73:
 1283              		.loc 1 1179 13 discriminator 2
 1284 00a4 0030A0E3 		mov	r3, #0
 1285              	.L74:
 1286              		.loc 1 1179 12 is_stmt 1 discriminator 4
 1287 00a8 20300BE5 		str	r3, [fp, #-32]
1180:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 1288              		.loc 1 1180 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 44


 1289 00ac 20301BE5 		ldr	r3, [fp, #-32]
 1290 00b0 000053E3 		cmp	r3, #0
 1291 00b4 0400001A 		bne	.L75
1181:../../Source/Kernel/rme_kernel.c ****     {
1182:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1183:../../Source/Kernel/rme_kernel.c ****         
1184:../../Source/Kernel/rme_kernel.c ****         Cpt=Thd_Cur->Sched.Prc->Cpt;
 1292              		.loc 1 1184 27
 1293 00b8 1C301BE5 		ldr	r3, [fp, #-28]
 1294 00bc 2C3093E5 		ldr	r3, [r3, #44]
 1295              		.loc 1 1184 12
 1296 00c0 143093E5 		ldr	r3, [r3, #20]
 1297 00c4 14300BE5 		str	r3, [fp, #-20]
 1298 00c8 030000EA 		b	.L76
 1299              	.L75:
1185:../../Source/Kernel/rme_kernel.c ****     }
1186:../../Source/Kernel/rme_kernel.c ****     else
1187:../../Source/Kernel/rme_kernel.c ****     {
1188:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1189:../../Source/Kernel/rme_kernel.c ****         
1190:../../Source/Kernel/rme_kernel.c ****         Cpt=Inv_Top->Prc->Cpt;
 1300              		.loc 1 1190 20
 1301 00cc 20301BE5 		ldr	r3, [fp, #-32]
 1302 00d0 083093E5 		ldr	r3, [r3, #8]
 1303              		.loc 1 1190 12
 1304 00d4 143093E5 		ldr	r3, [r3, #20]
 1305 00d8 14300BE5 		str	r3, [fp, #-20]
 1306              	.L76:
1191:../../Source/Kernel/rme_kernel.c ****     }
1192:../../Source/Kernel/rme_kernel.c **** 
1193:../../Source/Kernel/rme_kernel.c ****     /* Fast path - synchronous invocation activation */
1194:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_ACT)
 1307              		.loc 1 1194 7
 1308 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1309 00e0 010053E3 		cmp	r3, #1
 1310 00e4 0D00001A 		bne	.L77
1195:../../Source/Kernel/rme_kernel.c ****     {
1196:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1197:../../Source/Kernel/rme_kernel.c ****         
1198:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Act(Cpt,
1199:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
1200:../../Source/Kernel/rme_kernel.c ****                             (rme_cid_t)Param[0],                            /* rme_cid_t Cap_Inv */
 1311              		.loc 1 1200 45
 1312 00e8 34301BE5 		ldr	r3, [fp, #-52]
1198:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
 1313              		.loc 1 1198 16
 1314 00ec 0320A0E1 		mov	r2, r3
 1315 00f0 30301BE5 		ldr	r3, [fp, #-48]
 1316 00f4 38101BE5 		ldr	r1, [fp, #-56]
 1317 00f8 14001BE5 		ldr	r0, [fp, #-20]
 1318 00fc FEFFFFEB 		bl	_RME_Inv_Act
 1319 0100 10000BE5 		str	r0, [fp, #-16]
1201:../../Source/Kernel/rme_kernel.c ****                             Param[1]);                                      /* rme_ptr_t Param */
1202:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg,Retval);
 1320              		.loc 1 1202 9
 1321 0104 10301BE5 		ldr	r3, [fp, #-16]
 1322 0108 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 45


 1323 010c E50100AA 		bge	.L69
 1324              		.loc 1 1202 9 is_stmt 0 discriminator 1
 1325 0110 10101BE5 		ldr	r1, [fp, #-16]
 1326 0114 38001BE5 		ldr	r0, [fp, #-56]
 1327 0118 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1328              		.loc 1 1202 9
 1329 011c E10100EA 		b	.L69
 1330              	.L77:
1203:../../Source/Kernel/rme_kernel.c ****     }
1204:../../Source/Kernel/rme_kernel.c ****     else
1205:../../Source/Kernel/rme_kernel.c ****     {
1206:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1207:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1208:../../Source/Kernel/rme_kernel.c ****     }
1209:../../Source/Kernel/rme_kernel.c **** 
1210:../../Source/Kernel/rme_kernel.c ****     /* See if this operation can potentially cause a context switch. All the 
1211:../../Source/Kernel/rme_kernel.c ****      * functions that may cause a context switch is listed here. The behavior
1212:../../Source/Kernel/rme_kernel.c ****      * of these functions shall be: If the function is successful, they shall
1213:../../Source/Kernel/rme_kernel.c ****      * perform the return value saving on proper register stacks by themselves;
1214:../../Source/Kernel/rme_kernel.c ****      * if the function fails, it should not conduct such return value saving.
1215:../../Source/Kernel/rme_kernel.c ****      * These paths are less optimized than synchronous invocation, but are still
1216:../../Source/Kernel/rme_kernel.c ****      * optimized anyway. */
1217:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1331              		.loc 1 1217 5 is_stmt 1
 1332 0120 18301BE5 		ldr	r3, [fp, #-24]
 1333 0124 022043E2 		sub	r2, r3, #2
 1334 0128 80379FE5 		ldr	r3, .L127
 1335 012c 070052E3 		cmp	r2, #7
 1336 0130 9400008A 		bhi	.L126
 1337 0134 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1338              	.Lrtx81:
 1339 0138 00F020E3 		nop
 1340              		.section	.rodata._RME_Svc_Handler,"a",%progbits
 1341              		.align	2
 1342              	.L81:
 1343 0000 3C010000 		.word	.L88
 1344 0004 70010000 		.word	.L87
 1345 0008 A8010000 		.word	.L86
 1346 000c 08020000 		.word	.L85
 1347 0010 3C020000 		.word	.L84
 1348 0014 8C020000 		.word	.L83
 1349 0018 08030000 		.word	.L82
 1350 001c 50030000 		.word	.L80
 1351              		.section	.text._RME_Svc_Handler
 1352              		.p2align 2
 1353              	.L88:
1218:../../Source/Kernel/rme_kernel.c ****     {
1219:../../Source/Kernel/rme_kernel.c ****         /* Send to a signal endpoint */
1220:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_SND:
1221:../../Source/Kernel/rme_kernel.c ****         {
1222:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1223:../../Source/Kernel/rme_kernel.c ****             
1224:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Snd(Cpt,
1225:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1226:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1354              		.loc 1 1226 49
 1355 013c 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 46


1224:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1356              		.loc 1 1224 20
 1357 0140 0320A0E1 		mov	r2, r3
 1358 0144 38101BE5 		ldr	r1, [fp, #-56]
 1359 0148 14001BE5 		ldr	r0, [fp, #-20]
 1360 014c FEFFFFEB 		bl	_RME_Sig_Snd
 1361 0150 10000BE5 		str	r0, [fp, #-16]
1227:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1362              		.loc 1 1227 13
 1363 0154 10301BE5 		ldr	r3, [fp, #-16]
 1364 0158 000053E3 		cmp	r3, #0
 1365 015c D10100AA 		bge	.L69
 1366              		.loc 1 1227 13 is_stmt 0 discriminator 1
 1367 0160 10101BE5 		ldr	r1, [fp, #-16]
 1368 0164 38001BE5 		ldr	r0, [fp, #-56]
 1369 0168 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1370              		.loc 1 1227 13
 1371 016c CD0100EA 		b	.L69
 1372              	.L87:
1228:../../Source/Kernel/rme_kernel.c ****         }
1229:../../Source/Kernel/rme_kernel.c ****         /* Receive from a signal endpoint */
1230:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_RCV:
1231:../../Source/Kernel/rme_kernel.c ****         {
1232:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1233:../../Source/Kernel/rme_kernel.c ****             
1234:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Rcv(Cpt,
1235:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1236:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Sig */
 1373              		.loc 1 1236 49 is_stmt 1
 1374 0170 34301BE5 		ldr	r3, [fp, #-52]
1234:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1375              		.loc 1 1234 20
 1376 0174 0320A0E1 		mov	r2, r3
 1377 0178 30301BE5 		ldr	r3, [fp, #-48]
 1378 017c 38101BE5 		ldr	r1, [fp, #-56]
 1379 0180 14001BE5 		ldr	r0, [fp, #-20]
 1380 0184 FEFFFFEB 		bl	_RME_Sig_Rcv
 1381 0188 10000BE5 		str	r0, [fp, #-16]
1237:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Option */
1238:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1382              		.loc 1 1238 13
 1383 018c 10301BE5 		ldr	r3, [fp, #-16]
 1384 0190 000053E3 		cmp	r3, #0
 1385 0194 C30100AA 		bge	.L69
 1386              		.loc 1 1238 13 is_stmt 0 discriminator 1
 1387 0198 10101BE5 		ldr	r1, [fp, #-16]
 1388 019c 38001BE5 		ldr	r0, [fp, #-56]
 1389 01a0 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1390              		.loc 1 1238 13
 1391 01a4 BF0100EA 		b	.L69
 1392              	.L86:
1239:../../Source/Kernel/rme_kernel.c ****         }
1240:../../Source/Kernel/rme_kernel.c ****         /* Call kernel functions */
1241:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_KFN:
1242:../../Source/Kernel/rme_kernel.c ****         {
1243:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1244:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 47


1245:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Kfn_Act(Cpt,
 1393              		.loc 1 1245 20 is_stmt 1
 1394 01a8 28301BE5 		ldr	r3, [fp, #-40]
 1395 01ac 03C0A0E1 		mov	ip, r3
1246:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1247:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Kfn */
1248:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Func_ID */
 1396              		.loc 1 1248 33
 1397 01b0 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1398              		.loc 1 1245 20
 1399 01b4 7300FFE6 		uxth	r0, r3
1249:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]),                     /* rme_ptr_t Sub_ID */
 1400              		.loc 1 1249 33
 1401 01b8 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1402              		.loc 1 1245 20
 1403 01bc 2338A0E1 		lsr	r3, r3, #16
 1404 01c0 30201BE5 		ldr	r2, [fp, #-48]
 1405 01c4 2C101BE5 		ldr	r1, [fp, #-44]
 1406 01c8 08108DE5 		str	r1, [sp, #8]
 1407 01cc 04208DE5 		str	r2, [sp, #4]
 1408 01d0 00308DE5 		str	r3, [sp]
 1409 01d4 0030A0E1 		mov	r3, r0
 1410 01d8 0C20A0E1 		mov	r2, ip
 1411 01dc 38101BE5 		ldr	r1, [fp, #-56]
 1412 01e0 14001BE5 		ldr	r0, [fp, #-20]
 1413 01e4 FEFFFFEB 		bl	_RME_Kfn_Act
 1414 01e8 10000BE5 		str	r0, [fp, #-16]
1250:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Param1 */
1251:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Param2 */
1252:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg, Retval);
 1415              		.loc 1 1252 13
 1416 01ec 10301BE5 		ldr	r3, [fp, #-16]
 1417 01f0 000053E3 		cmp	r3, #0
 1418 01f4 AB0100AA 		bge	.L69
 1419              		.loc 1 1252 13 is_stmt 0 discriminator 1
 1420 01f8 10101BE5 		ldr	r1, [fp, #-16]
 1421 01fc 38001BE5 		ldr	r0, [fp, #-56]
 1422 0200 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1423              		.loc 1 1252 13
 1424 0204 A70100EA 		b	.L69
 1425              	.L85:
1253:../../Source/Kernel/rme_kernel.c ****         }
1254:../../Source/Kernel/rme_kernel.c ****         /* Free a thread from some core */
1255:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_FREE:
1256:../../Source/Kernel/rme_kernel.c ****         {
1257:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1258:../../Source/Kernel/rme_kernel.c ****             
1259:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Free(Cpt,
1260:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1261:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Param[0]);                /* rme_cid_t Cap_Thd */
 1426              		.loc 1 1261 56 is_stmt 1
 1427 0208 34301BE5 		ldr	r3, [fp, #-52]
1259:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1428              		.loc 1 1259 20
 1429 020c 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 48


 1430 0210 38101BE5 		ldr	r1, [fp, #-56]
 1431 0214 14001BE5 		ldr	r0, [fp, #-20]
 1432 0218 FEFFFFEB 		bl	_RME_Thd_Sched_Free
 1433 021c 10000BE5 		str	r0, [fp, #-16]
1262:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1434              		.loc 1 1262 13
 1435 0220 10301BE5 		ldr	r3, [fp, #-16]
 1436 0224 000053E3 		cmp	r3, #0
 1437 0228 9E0100AA 		bge	.L69
 1438              		.loc 1 1262 13 is_stmt 0 discriminator 1
 1439 022c 10101BE5 		ldr	r1, [fp, #-16]
 1440 0230 38001BE5 		ldr	r0, [fp, #-56]
 1441 0234 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1442              		.loc 1 1262 13
 1443 0238 9A0100EA 		b	.L69
 1444              	.L84:
1263:../../Source/Kernel/rme_kernel.c ****         }
1264:../../Source/Kernel/rme_kernel.c ****         /* Changing thread execution context */
1265:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_EXEC_SET:
1266:../../Source/Kernel/rme_kernel.c ****         {
1267:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1268:../../Source/Kernel/rme_kernel.c ****             
1269:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Exec_Set(Cpt,
 1445              		.loc 1 1269 20 is_stmt 1
 1446 023c 28301BE5 		ldr	r3, [fp, #-40]
 1447 0240 0300A0E1 		mov	r0, r3
 1448 0244 34101BE5 		ldr	r1, [fp, #-52]
 1449 0248 30301BE5 		ldr	r3, [fp, #-48]
 1450 024c 2C201BE5 		ldr	r2, [fp, #-44]
 1451 0250 04208DE5 		str	r2, [sp, #4]
 1452 0254 00308DE5 		str	r3, [sp]
 1453 0258 0130A0E1 		mov	r3, r1
 1454 025c 0020A0E1 		mov	r2, r0
 1455 0260 38101BE5 		ldr	r1, [fp, #-56]
 1456 0264 14001BE5 		ldr	r0, [fp, #-20]
 1457 0268 FEFFFFEB 		bl	_RME_Thd_Exec_Set
 1458 026c 10000BE5 		str	r0, [fp, #-16]
1270:../../Source/Kernel/rme_kernel.c ****                                      Reg,                                   /* volatile struct RME_
1271:../../Source/Kernel/rme_kernel.c ****                                      (rme_cid_t)Cid,                        /* rme_cid_t Cap_Thd */
1272:../../Source/Kernel/rme_kernel.c ****                                      Param[0],                              /* rme_ptr_t Entry */
1273:../../Source/Kernel/rme_kernel.c ****                                      Param[1],                              /* rme_ptr_t Stack */
1274:../../Source/Kernel/rme_kernel.c ****                                      Param[2]);                             /* rme_ptr_t Param */
1275:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1459              		.loc 1 1275 13
 1460 0270 10301BE5 		ldr	r3, [fp, #-16]
 1461 0274 000053E3 		cmp	r3, #0
 1462 0278 8A0100AA 		bge	.L69
 1463              		.loc 1 1275 13 is_stmt 0 discriminator 1
 1464 027c 10101BE5 		ldr	r1, [fp, #-16]
 1465 0280 38001BE5 		ldr	r0, [fp, #-56]
 1466 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1467              		.loc 1 1275 13
 1468 0288 860100EA 		b	.L69
 1469              	.L83:
1276:../../Source/Kernel/rme_kernel.c ****         }
1277:../../Source/Kernel/rme_kernel.c ****         /* Changing thread priority (up to three threads at once) */
1278:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_PRIO:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 49


1279:../../Source/Kernel/rme_kernel.c ****         {
1280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1281:../../Source/Kernel/rme_kernel.c ****             
1282:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Prio(Cpt,
 1470              		.loc 1 1282 20 is_stmt 1
 1471 028c 28E01BE5 		ldr	lr, [fp, #-40]
1283:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1284:../../Source/Kernel/rme_kernel.c ****                                        Cid,                                 /* rme_ptr_t Number */
1285:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Thd0 *
 1472              		.loc 1 1285 51
 1473 0290 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1474              		.loc 1 1282 20
 1475 0294 7340FFE6 		uxth	r4, r3
1286:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[0]),              /* rme_ptr_t Prio0 */
 1476              		.loc 1 1286 40
 1477 0298 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1478              		.loc 1 1282 20
 1479 029c 2338A0E1 		lsr	r3, r3, #16
1287:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[1]),   /* rme_cid_t Cap_Thd1 *
 1480              		.loc 1 1287 51
 1481 02a0 30201BE5 		ldr	r2, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1482              		.loc 1 1282 20
 1483 02a4 7220FFE6 		uxth	r2, r2
1288:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[1]),              /* rme_ptr_t Prio1 */
 1484              		.loc 1 1288 40
 1485 02a8 30101BE5 		ldr	r1, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1486              		.loc 1 1282 20
 1487 02ac 2118A0E1 		lsr	r1, r1, #16
1289:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[2]),   /* rme_cid_t Cap_Thd2 *
 1488              		.loc 1 1289 51
 1489 02b0 2C001BE5 		ldr	r0, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1490              		.loc 1 1282 20
 1491 02b4 7000FFE6 		uxth	r0, r0
1290:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[2]));             /* rme_ptr_t Prio2 */
 1492              		.loc 1 1290 40
 1493 02b8 2CC01BE5 		ldr	ip, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1494              		.loc 1 1282 20
 1495 02bc 2CC8A0E1 		lsr	ip, ip, #16
 1496 02c0 10C08DE5 		str	ip, [sp, #16]
 1497 02c4 0C008DE5 		str	r0, [sp, #12]
 1498 02c8 08108DE5 		str	r1, [sp, #8]
 1499 02cc 04208DE5 		str	r2, [sp, #4]
 1500 02d0 00308DE5 		str	r3, [sp]
 1501 02d4 0430A0E1 		mov	r3, r4
 1502 02d8 0E20A0E1 		mov	r2, lr
 1503 02dc 38101BE5 		ldr	r1, [fp, #-56]
 1504 02e0 14001BE5 		ldr	r0, [fp, #-20]
 1505 02e4 FEFFFFEB 		bl	_RME_Thd_Sched_Prio
 1506 02e8 10000BE5 		str	r0, [fp, #-16]
1291:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1507              		.loc 1 1291 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 50


 1508 02ec 10301BE5 		ldr	r3, [fp, #-16]
 1509 02f0 000053E3 		cmp	r3, #0
 1510 02f4 6B0100AA 		bge	.L69
 1511              		.loc 1 1291 13 is_stmt 0 discriminator 1
 1512 02f8 10101BE5 		ldr	r1, [fp, #-16]
 1513 02fc 38001BE5 		ldr	r0, [fp, #-56]
 1514 0300 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1515              		.loc 1 1291 13
 1516 0304 670100EA 		b	.L69
 1517              	.L82:
1292:../../Source/Kernel/rme_kernel.c ****         }
1293:../../Source/Kernel/rme_kernel.c ****         /* Transfer time to a thread */
1294:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_TIME_XFER:
1295:../../Source/Kernel/rme_kernel.c ****         {
1296:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1297:../../Source/Kernel/rme_kernel.c ****             
1298:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Time_Xfer(Cpt,
1299:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
1300:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0],                  /* rme_cid_t Cap_Thd_Ds
 1518              		.loc 1 1300 55 is_stmt 1
 1519 0308 34301BE5 		ldr	r3, [fp, #-52]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1520              		.loc 1 1298 20
 1521 030c 0320A0E1 		mov	r2, r3
1301:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[1],                  /* rme_cid_t Cap_Thd_Sr
 1522              		.loc 1 1301 55
 1523 0310 30301BE5 		ldr	r3, [fp, #-48]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1524              		.loc 1 1298 20
 1525 0314 0310A0E1 		mov	r1, r3
 1526 0318 2C301BE5 		ldr	r3, [fp, #-44]
 1527 031c 00308DE5 		str	r3, [sp]
 1528 0320 0130A0E1 		mov	r3, r1
 1529 0324 38101BE5 		ldr	r1, [fp, #-56]
 1530 0328 14001BE5 		ldr	r0, [fp, #-20]
 1531 032c FEFFFFEB 		bl	_RME_Thd_Time_Xfer
 1532 0330 10000BE5 		str	r0, [fp, #-16]
1302:../../Source/Kernel/rme_kernel.c ****                                       Param[2]);                            /* rme_ptr_t Time */
1303:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1533              		.loc 1 1303 13
 1534 0334 10301BE5 		ldr	r3, [fp, #-16]
 1535 0338 000053E3 		cmp	r3, #0
 1536 033c 590100AA 		bge	.L69
 1537              		.loc 1 1303 13 is_stmt 0 discriminator 1
 1538 0340 10101BE5 		ldr	r1, [fp, #-16]
 1539 0344 38001BE5 		ldr	r0, [fp, #-56]
 1540 0348 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1541              		.loc 1 1303 13
 1542 034c 550100EA 		b	.L69
 1543              	.L80:
1304:../../Source/Kernel/rme_kernel.c ****         }
1305:../../Source/Kernel/rme_kernel.c ****         /* Switch to another thread */
1306:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SWT:
1307:../../Source/Kernel/rme_kernel.c ****         {
1308:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1309:../../Source/Kernel/rme_kernel.c ****             
1310:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Swt(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 51


1311:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1312:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Thd */
 1544              		.loc 1 1312 49 is_stmt 1
 1545 0350 34301BE5 		ldr	r3, [fp, #-52]
1310:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1546              		.loc 1 1310 20
 1547 0354 0320A0E1 		mov	r2, r3
 1548 0358 30301BE5 		ldr	r3, [fp, #-48]
 1549 035c 38101BE5 		ldr	r1, [fp, #-56]
 1550 0360 14001BE5 		ldr	r0, [fp, #-20]
 1551 0364 FEFFFFEB 		bl	_RME_Thd_Swt
 1552 0368 10000BE5 		str	r0, [fp, #-16]
1313:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Full_Yield
1314:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1553              		.loc 1 1314 13
 1554 036c 10301BE5 		ldr	r3, [fp, #-16]
 1555 0370 000053E3 		cmp	r3, #0
 1556 0374 4B0100AA 		bge	.L69
 1557              		.loc 1 1314 13 is_stmt 0 discriminator 1
 1558 0378 10101BE5 		ldr	r1, [fp, #-16]
 1559 037c 38001BE5 		ldr	r0, [fp, #-56]
 1560 0380 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1561              		.loc 1 1314 13
 1562 0384 470100EA 		b	.L69
 1563              	.L126:
1315:../../Source/Kernel/rme_kernel.c ****         }
1316:../../Source/Kernel/rme_kernel.c ****         default:
1317:../../Source/Kernel/rme_kernel.c ****         {
1318:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1319:../../Source/Kernel/rme_kernel.c ****             break;
 1564              		.loc 1 1319 13 is_stmt 1
 1565 0388 00F020E3 		nop
1320:../../Source/Kernel/rme_kernel.c ****         }
1321:../../Source/Kernel/rme_kernel.c ****     } 
1322:../../Source/Kernel/rme_kernel.c **** 
1323:../../Source/Kernel/rme_kernel.c ****     /* It is guaranteed that these functions will never cause a context switch */
1324:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1566              		.loc 1 1324 5
 1567 038c 18301BE5 		ldr	r3, [fp, #-24]
 1568 0390 0A2043E2 		sub	r2, r3, #10
 1569 0394 18359FE5 		ldr	r3, .L127+4
 1570 0398 170052E3 		cmp	r2, #23
 1571 039c 3B01008A 		bhi	.L97
 1572 03a0 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1573              	.Lrtx99:
 1574 03a4 00F020E3 		nop
 1575              		.section	.rodata._RME_Svc_Handler
 1576              		.align	2
 1577              	.L99:
 1578 0020 A8030000 		.word	.L122
 1579 0024 F0030000 		.word	.L121
 1580 0028 10040000 		.word	.L120
 1581 002c 30040000 		.word	.L119
 1582 0030 94040000 		.word	.L118
 1583 0034 B4040000 		.word	.L117
 1584 0038 28050000 		.word	.L116
 1585 003c 48050000 		.word	.L115
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 52


 1586 0040 A0050000 		.word	.L114
 1587 0044 C0050000 		.word	.L113
 1588 0048 F8050000 		.word	.L112
 1589 004c 18060000 		.word	.L111
 1590 0050 4C060000 		.word	.L110
 1591 0054 6C060000 		.word	.L109
 1592 0058 8C060000 		.word	.L108
 1593 005c AC060000 		.word	.L107
 1594 0060 20070000 		.word	.L106
 1595 0064 40070000 		.word	.L105
 1596 0068 9C070000 		.word	.L104
 1597 006c B4070000 		.word	.L103
 1598 0070 D4070000 		.word	.L102
 1599 0074 F4070000 		.word	.L101
 1600 0078 40080000 		.word	.L100
 1601 007c 60080000 		.word	.L98
 1602              		.section	.text._RME_Svc_Handler
 1603              		.p2align 2
 1604              	.L122:
1325:../../Source/Kernel/rme_kernel.c ****     {
1326:../../Source/Kernel/rme_kernel.c ****         /* Capability table */
1327:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_CRT:
1328:../../Source/Kernel/rme_kernel.c ****         {
1329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1330:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Crt(Cpt,
 1605              		.loc 1 1330 20
 1606 03a8 28301BE5 		ldr	r3, [fp, #-40]
 1607 03ac 0300A0E1 		mov	r0, r3
1331:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1332:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1608              		.loc 1 1332 44
 1609 03b0 34301BE5 		ldr	r3, [fp, #-52]
 1610 03b4 2338A0E1 		lsr	r3, r3, #16
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1611              		.loc 1 1330 20
 1612 03b8 03C0A0E1 		mov	ip, r3
1333:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Crt */
 1613              		.loc 1 1333 44
 1614 03bc 34301BE5 		ldr	r3, [fp, #-52]
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1615              		.loc 1 1330 20
 1616 03c0 7310FFE6 		uxth	r1, r3
 1617 03c4 30301BE5 		ldr	r3, [fp, #-48]
 1618 03c8 2C201BE5 		ldr	r2, [fp, #-44]
 1619 03cc 04208DE5 		str	r2, [sp, #4]
 1620 03d0 00308DE5 		str	r3, [sp]
 1621 03d4 0130A0E1 		mov	r3, r1
 1622 03d8 0C20A0E1 		mov	r2, ip
 1623 03dc 0010A0E1 		mov	r1, r0
 1624 03e0 14001BE5 		ldr	r0, [fp, #-20]
 1625 03e4 FEFFFFEB 		bl	_RME_Cpt_Crt
 1626 03e8 10000BE5 		str	r0, [fp, #-16]
1334:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1335:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Entry_Num 
1336:../../Source/Kernel/rme_kernel.c ****             break;
 1627              		.loc 1 1336 13
 1628 03ec 2A0100EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 53


 1629              	.L121:
1337:../../Source/Kernel/rme_kernel.c ****         }
1338:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_DEL:
1339:../../Source/Kernel/rme_kernel.c ****         {
1340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1341:../../Source/Kernel/rme_kernel.c ****             
1342:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Del(Cpt,
 1630              		.loc 1 1342 20
 1631 03f0 28301BE5 		ldr	r3, [fp, #-40]
 1632 03f4 0310A0E1 		mov	r1, r3
1343:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
1344:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Cpt */
 1633              		.loc 1 1344 49
 1634 03f8 34301BE5 		ldr	r3, [fp, #-52]
1342:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
 1635              		.loc 1 1342 20
 1636 03fc 0320A0E1 		mov	r2, r3
 1637 0400 14001BE5 		ldr	r0, [fp, #-20]
 1638 0404 FEFFFFEB 		bl	_RME_Cpt_Del
 1639 0408 10000BE5 		str	r0, [fp, #-16]
1345:../../Source/Kernel/rme_kernel.c ****             break;
 1640              		.loc 1 1345 13
 1641 040c 220100EA 		b	.L123
 1642              	.L120:
1346:../../Source/Kernel/rme_kernel.c ****         }
1347:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_FRZ:
1348:../../Source/Kernel/rme_kernel.c ****         {
1349:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1350:../../Source/Kernel/rme_kernel.c ****             
1351:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Frz(Cpt,
 1643              		.loc 1 1351 20
 1644 0410 28301BE5 		ldr	r3, [fp, #-40]
 1645 0414 0310A0E1 		mov	r1, r3
1352:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
1353:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Frz */
 1646              		.loc 1 1353 49
 1647 0418 34301BE5 		ldr	r3, [fp, #-52]
1351:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
 1648              		.loc 1 1351 20
 1649 041c 0320A0E1 		mov	r2, r3
 1650 0420 14001BE5 		ldr	r0, [fp, #-20]
 1651 0424 FEFFFFEB 		bl	_RME_Cpt_Frz
 1652 0428 10000BE5 		str	r0, [fp, #-16]
1354:../../Source/Kernel/rme_kernel.c ****             break;
 1653              		.loc 1 1354 13
 1654 042c 1A0100EA 		b	.L123
 1655              	.L119:
1355:../../Source/Kernel/rme_kernel.c ****         }
1356:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_ADD:
1357:../../Source/Kernel/rme_kernel.c ****         {
1358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1359:../../Source/Kernel/rme_kernel.c ****             
1360:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Add(Cpt,
1361:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1656              		.loc 1 1361 44
 1657 0430 34301BE5 		ldr	r3, [fp, #-52]
 1658 0434 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 54


1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1659              		.loc 1 1360 20
 1660 0438 03E0A0E1 		mov	lr, r3
1362:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Dst */
 1661              		.loc 1 1362 44
 1662 043c 34301BE5 		ldr	r3, [fp, #-52]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1663              		.loc 1 1360 20
 1664 0440 73C0FFE6 		uxth	ip, r3
1363:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Cpt_Sr
 1665              		.loc 1 1363 44
 1666 0444 30301BE5 		ldr	r3, [fp, #-48]
 1667 0448 2338A0E1 		lsr	r3, r3, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1668              		.loc 1 1360 20
 1669 044c 0340A0E1 		mov	r4, r3
1364:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[1]),          /* rme_cid_t Cap_Src */
 1670              		.loc 1 1364 44
 1671 0450 30301BE5 		ldr	r3, [fp, #-48]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1672              		.loc 1 1360 20
 1673 0454 7330FFE6 		uxth	r3, r3
 1674 0458 2C201BE5 		ldr	r2, [fp, #-44]
1365:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Flag */
1366:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_KM(Svc,Cid));                     /* rme_ptr_t Ext_Flag *
 1675              		.loc 1 1366 33
 1676 045c 24101BE5 		ldr	r1, [fp, #-36]
 1677 0460 0108A0E1 		lsl	r0, r1, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1678              		.loc 1 1360 20
 1679 0464 28101BE5 		ldr	r1, [fp, #-40]
 1680 0468 011080E1 		orr	r1, r0, r1
 1681 046c 08108DE5 		str	r1, [sp, #8]
 1682 0470 04208DE5 		str	r2, [sp, #4]
 1683 0474 00308DE5 		str	r3, [sp]
 1684 0478 0430A0E1 		mov	r3, r4
 1685 047c 0C20A0E1 		mov	r2, ip
 1686 0480 0E10A0E1 		mov	r1, lr
 1687 0484 14001BE5 		ldr	r0, [fp, #-20]
 1688 0488 FEFFFFEB 		bl	_RME_Cpt_Add
 1689 048c 10000BE5 		str	r0, [fp, #-16]
1367:../../Source/Kernel/rme_kernel.c ****             break;
 1690              		.loc 1 1367 13
 1691 0490 010100EA 		b	.L123
 1692              	.L118:
1368:../../Source/Kernel/rme_kernel.c ****         }
1369:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_REM:
1370:../../Source/Kernel/rme_kernel.c ****         {
1371:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1372:../../Source/Kernel/rme_kernel.c ****             
1373:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Rem(Cpt,
 1693              		.loc 1 1373 20
 1694 0494 28301BE5 		ldr	r3, [fp, #-40]
 1695 0498 0310A0E1 		mov	r1, r3
1374:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
1375:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Rem */
 1696              		.loc 1 1375 49
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 55


 1697 049c 34301BE5 		ldr	r3, [fp, #-52]
1373:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
 1698              		.loc 1 1373 20
 1699 04a0 0320A0E1 		mov	r2, r3
 1700 04a4 14001BE5 		ldr	r0, [fp, #-20]
 1701 04a8 FEFFFFEB 		bl	_RME_Cpt_Rem
 1702 04ac 10000BE5 		str	r0, [fp, #-16]
1376:../../Source/Kernel/rme_kernel.c ****             break;
 1703              		.loc 1 1376 13
 1704 04b0 F90000EA 		b	.L123
 1705              	.L117:
1377:../../Source/Kernel/rme_kernel.c ****         }
1378:../../Source/Kernel/rme_kernel.c ****         
1379:../../Source/Kernel/rme_kernel.c ****         /* Page table */
1380:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1381:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CRT:
1382:../../Source/Kernel/rme_kernel.c ****         {
1383:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1384:../../Source/Kernel/rme_kernel.c ****             
1385:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Crt(Cpt,
 1706              		.loc 1 1385 20
 1707 04b4 28301BE5 		ldr	r3, [fp, #-40]
 1708 04b8 0340A0E1 		mov	r4, r3
1386:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1387:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1709              		.loc 1 1387 44
 1710 04bc 34301BE5 		ldr	r3, [fp, #-52]
 1711 04c0 2338A0E1 		lsr	r3, r3, #16
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1712              		.loc 1 1385 20
 1713 04c4 0350A0E1 		mov	r5, r3
1388:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_Q1(Param[0]),          /* rme_cid_t Cap_Pgt */
 1714              		.loc 1 1388 44
 1715 04c8 34301BE5 		ldr	r3, [fp, #-52]
 1716 04cc 2334A0E1 		lsr	r3, r3, #8
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1717              		.loc 1 1385 20
 1718 04d0 73E0EFE6 		uxtb	lr, r3
 1719 04d4 30301BE5 		ldr	r3, [fp, #-48]
1389:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1390:../../Source/Kernel/rme_kernel.c ****                                 Param[2]&RME_MASK_BEGIN(1U),                /* rme_ptr_t Base */
 1720              		.loc 1 1390 38
 1721 04d8 2C201BE5 		ldr	r2, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1722              		.loc 1 1385 20
 1723 04dc 0120C2E3 		bic	r2, r2, #1
1391:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PT(Param[2]),                     /* rme_ptr_t Is_Top */
 1724              		.loc 1 1391 33
 1725 04e0 2C101BE5 		ldr	r1, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1726              		.loc 1 1385 20
 1727 04e4 011001E2 		and	r1, r1, #1
1392:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_Q0(Param[0]),                     /* rme_ptr_t Size_Order
 1728              		.loc 1 1392 33
 1729 04e8 34001BE5 		ldr	r0, [fp, #-52]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1730              		.loc 1 1385 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 56


 1731 04ec 7000EFE6 		uxtb	r0, r0
 1732 04f0 24C01BE5 		ldr	ip, [fp, #-36]
 1733 04f4 2CC4A0E1 		lsr	ip, ip, #8
 1734 04f8 10C08DE5 		str	ip, [sp, #16]
 1735 04fc 0C008DE5 		str	r0, [sp, #12]
 1736 0500 08108DE5 		str	r1, [sp, #8]
 1737 0504 04208DE5 		str	r2, [sp, #4]
 1738 0508 00308DE5 		str	r3, [sp]
 1739 050c 0E30A0E1 		mov	r3, lr
 1740 0510 0520A0E1 		mov	r2, r5
 1741 0514 0410A0E1 		mov	r1, r4
 1742 0518 14001BE5 		ldr	r0, [fp, #-20]
 1743 051c FEFFFFEB 		bl	_RME_Pgt_Crt
 1744 0520 10000BE5 		str	r0, [fp, #-16]
1393:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PC(Svc));                         /* rme_ptr_t Num_Order 
1394:../../Source/Kernel/rme_kernel.c ****             break;
 1745              		.loc 1 1394 13
 1746 0524 DC0000EA 		b	.L123
 1747              	.L116:
1395:../../Source/Kernel/rme_kernel.c ****         }
1396:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DEL:
1397:../../Source/Kernel/rme_kernel.c ****         {
1398:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1399:../../Source/Kernel/rme_kernel.c ****             
1400:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Del(Cpt,
 1748              		.loc 1 1400 20
 1749 0528 28301BE5 		ldr	r3, [fp, #-40]
 1750 052c 0310A0E1 		mov	r1, r3
1401:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1402:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Pgt */
 1751              		.loc 1 1402 49
 1752 0530 34301BE5 		ldr	r3, [fp, #-52]
1400:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1753              		.loc 1 1400 20
 1754 0534 0320A0E1 		mov	r2, r3
 1755 0538 14001BE5 		ldr	r0, [fp, #-20]
 1756 053c FEFFFFEB 		bl	_RME_Pgt_Del
 1757 0540 10000BE5 		str	r0, [fp, #-16]
1403:../../Source/Kernel/rme_kernel.c ****             break;
 1758              		.loc 1 1403 13
 1759 0544 D40000EA 		b	.L123
 1760              	.L115:
1404:../../Source/Kernel/rme_kernel.c ****         }
1405:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_ADD:
1406:../../Source/Kernel/rme_kernel.c ****         {
1407:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1408:../../Source/Kernel/rme_kernel.c ****             
1409:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Add(Cpt,
1410:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1761              		.loc 1 1410 44
 1762 0548 34301BE5 		ldr	r3, [fp, #-52]
 1763 054c 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1764              		.loc 1 1409 20
 1765 0550 03E0A0E1 		mov	lr, r3
1411:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Pos_Dst */
 1766              		.loc 1 1411 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 57


 1767 0554 34301BE5 		ldr	r3, [fp, #-52]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1768              		.loc 1 1409 20
 1769 0558 7310FFE6 		uxth	r1, r3
 1770 055c 28001BE5 		ldr	r0, [fp, #-40]
1412:../../Source/Kernel/rme_kernel.c ****                                 Cid,                                        /* rme_ptr_t Flag_Dst *
1413:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Pgt_Sr
 1771              		.loc 1 1413 44
 1772 0560 30301BE5 		ldr	r3, [fp, #-48]
 1773 0564 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1774              		.loc 1 1409 20
 1775 0568 03C0A0E1 		mov	ip, r3
1414:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Pos_Src */
 1776              		.loc 1 1414 33
 1777 056c 30301BE5 		ldr	r3, [fp, #-48]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1778              		.loc 1 1409 20
 1779 0570 7330FFE6 		uxth	r3, r3
 1780 0574 2C201BE5 		ldr	r2, [fp, #-44]
 1781 0578 08208DE5 		str	r2, [sp, #8]
 1782 057c 04308DE5 		str	r3, [sp, #4]
 1783 0580 00C08DE5 		str	ip, [sp]
 1784 0584 0030A0E1 		mov	r3, r0
 1785 0588 0120A0E1 		mov	r2, r1
 1786 058c 0E10A0E1 		mov	r1, lr
 1787 0590 14001BE5 		ldr	r0, [fp, #-20]
 1788 0594 FEFFFFEB 		bl	_RME_Pgt_Add
 1789 0598 10000BE5 		str	r0, [fp, #-16]
1415:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Index */
1416:../../Source/Kernel/rme_kernel.c ****             break;
 1790              		.loc 1 1416 13
 1791 059c BE0000EA 		b	.L123
 1792              	.L114:
1417:../../Source/Kernel/rme_kernel.c ****         }
1418:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_REM:
1419:../../Source/Kernel/rme_kernel.c ****         {
1420:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1421:../../Source/Kernel/rme_kernel.c ****             
1422:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Rem(Cpt,
1423:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1793              		.loc 1 1423 49
 1794 05a0 34301BE5 		ldr	r3, [fp, #-52]
1422:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1795              		.loc 1 1422 20
 1796 05a4 0310A0E1 		mov	r1, r3
 1797 05a8 30301BE5 		ldr	r3, [fp, #-48]
 1798 05ac 0320A0E1 		mov	r2, r3
 1799 05b0 14001BE5 		ldr	r0, [fp, #-20]
 1800 05b4 FEFFFFEB 		bl	_RME_Pgt_Rem
 1801 05b8 10000BE5 		str	r0, [fp, #-16]
1424:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Pos */
1425:../../Source/Kernel/rme_kernel.c ****             break;
 1802              		.loc 1 1425 13
 1803 05bc B60000EA 		b	.L123
 1804              	.L113:
1426:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 58


1427:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CON:
1428:../../Source/Kernel/rme_kernel.c ****         {
1429:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1430:../../Source/Kernel/rme_kernel.c ****             
1431:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Con(Cpt,
1432:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1805              		.loc 1 1432 44
 1806 05c0 34301BE5 		ldr	r3, [fp, #-52]
 1807 05c4 2338A0E1 		lsr	r3, r3, #16
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1808              		.loc 1 1431 20
 1809 05c8 0300A0E1 		mov	r0, r3
 1810 05cc 30201BE5 		ldr	r2, [fp, #-48]
1433:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1434:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Pgt_Ch
 1811              		.loc 1 1434 44
 1812 05d0 34301BE5 		ldr	r3, [fp, #-52]
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1813              		.loc 1 1431 20
 1814 05d4 7310FFE6 		uxth	r1, r3
 1815 05d8 2C301BE5 		ldr	r3, [fp, #-44]
 1816 05dc 00308DE5 		str	r3, [sp]
 1817 05e0 0130A0E1 		mov	r3, r1
 1818 05e4 0010A0E1 		mov	r1, r0
 1819 05e8 14001BE5 		ldr	r0, [fp, #-20]
 1820 05ec FEFFFFEB 		bl	_RME_Pgt_Con
 1821 05f0 10000BE5 		str	r0, [fp, #-16]
1435:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Flag_Child
1436:../../Source/Kernel/rme_kernel.c ****             break;
 1822              		.loc 1 1436 13
 1823 05f4 A80000EA 		b	.L123
 1824              	.L112:
1437:../../Source/Kernel/rme_kernel.c ****         }
1438:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DES:
1439:../../Source/Kernel/rme_kernel.c ****         {
1440:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1441:../../Source/Kernel/rme_kernel.c ****             
1442:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Des(Cpt,
1443:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1825              		.loc 1 1443 49
 1826 05f8 34301BE5 		ldr	r3, [fp, #-52]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1827              		.loc 1 1442 20
 1828 05fc 0310A0E1 		mov	r1, r3
 1829 0600 30201BE5 		ldr	r2, [fp, #-48]
1444:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1445:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt_Ch
 1830              		.loc 1 1445 49
 1831 0604 2C301BE5 		ldr	r3, [fp, #-44]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1832              		.loc 1 1442 20
 1833 0608 14001BE5 		ldr	r0, [fp, #-20]
 1834 060c FEFFFFEB 		bl	_RME_Pgt_Des
 1835 0610 10000BE5 		str	r0, [fp, #-16]
1446:../../Source/Kernel/rme_kernel.c ****             break;
 1836              		.loc 1 1446 13
 1837 0614 A00000EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 59


 1838              	.L111:
1447:../../Source/Kernel/rme_kernel.c ****         }
1448:../../Source/Kernel/rme_kernel.c **** #endif
1449:../../Source/Kernel/rme_kernel.c ****         /* Process */
1450:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CRT:
1451:../../Source/Kernel/rme_kernel.c ****         {
1452:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1453:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
 1839              		.loc 1 1453 20
 1840 0618 28301BE5 		ldr	r3, [fp, #-40]
 1841 061c 0310A0E1 		mov	r1, r3
1454:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1455:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1842              		.loc 1 1455 49
 1843 0620 34301BE5 		ldr	r3, [fp, #-52]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1844              		.loc 1 1453 20
 1845 0624 0320A0E1 		mov	r2, r3
1456:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
 1846              		.loc 1 1456 49
 1847 0628 30301BE5 		ldr	r3, [fp, #-48]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1848              		.loc 1 1453 20
 1849 062c 0300A0E1 		mov	r0, r3
1457:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt */
 1850              		.loc 1 1457 49
 1851 0630 2C301BE5 		ldr	r3, [fp, #-44]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1852              		.loc 1 1453 20
 1853 0634 00308DE5 		str	r3, [sp]
 1854 0638 0030A0E1 		mov	r3, r0
 1855 063c 14001BE5 		ldr	r0, [fp, #-20]
 1856 0640 FEFFFFEB 		bl	_RME_Prc_Crt
 1857 0644 10000BE5 		str	r0, [fp, #-16]
1458:../../Source/Kernel/rme_kernel.c **** #else
1459:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
1460:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1462:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
1463:../../Source/Kernel/rme_kernel.c ****                                 (rme_ptr_t)Param[2]);                       /* rme_ptr_t Raw_Pgt */
1464:../../Source/Kernel/rme_kernel.c **** #endif
1465:../../Source/Kernel/rme_kernel.c ****             break;
 1858              		.loc 1 1465 13
 1859 0648 930000EA 		b	.L123
 1860              	.L110:
1466:../../Source/Kernel/rme_kernel.c ****         }
1467:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_DEL:
1468:../../Source/Kernel/rme_kernel.c ****         {
1469:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1470:../../Source/Kernel/rme_kernel.c ****             
1471:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Del(Cpt,
 1861              		.loc 1 1471 20
 1862 064c 28301BE5 		ldr	r3, [fp, #-40]
 1863 0650 0310A0E1 		mov	r1, r3
1472:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1473:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Prc */
 1864              		.loc 1 1473 49
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 60


 1865 0654 34301BE5 		ldr	r3, [fp, #-52]
1471:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1866              		.loc 1 1471 20
 1867 0658 0320A0E1 		mov	r2, r3
 1868 065c 14001BE5 		ldr	r0, [fp, #-20]
 1869 0660 FEFFFFEB 		bl	_RME_Prc_Del
 1870 0664 10000BE5 		str	r0, [fp, #-16]
1474:../../Source/Kernel/rme_kernel.c ****             break;
 1871              		.loc 1 1474 13
 1872 0668 8B0000EA 		b	.L123
 1873              	.L109:
1475:../../Source/Kernel/rme_kernel.c ****         }
1476:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CPT:
1477:../../Source/Kernel/rme_kernel.c ****         {
1478:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1479:../../Source/Kernel/rme_kernel.c ****             
1480:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Cpt(Cpt,
1481:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1874              		.loc 1 1481 49
 1875 066c 34301BE5 		ldr	r3, [fp, #-52]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1876              		.loc 1 1480 20
 1877 0670 0310A0E1 		mov	r1, r3
1482:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Cpt */
 1878              		.loc 1 1482 49
 1879 0674 30301BE5 		ldr	r3, [fp, #-48]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1880              		.loc 1 1480 20
 1881 0678 0320A0E1 		mov	r2, r3
 1882 067c 14001BE5 		ldr	r0, [fp, #-20]
 1883 0680 FEFFFFEB 		bl	_RME_Prc_Cpt
 1884 0684 10000BE5 		str	r0, [fp, #-16]
1483:../../Source/Kernel/rme_kernel.c ****             break;
 1885              		.loc 1 1483 13
 1886 0688 830000EA 		b	.L123
 1887              	.L108:
1484:../../Source/Kernel/rme_kernel.c ****         }
1485:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_PGT:
1486:../../Source/Kernel/rme_kernel.c ****         {
1487:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1488:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1489:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1490:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1888              		.loc 1 1490 49
 1889 068c 34301BE5 		ldr	r3, [fp, #-52]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1890              		.loc 1 1489 20
 1891 0690 0310A0E1 		mov	r1, r3
1491:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Pgt */
 1892              		.loc 1 1491 49
 1893 0694 30301BE5 		ldr	r3, [fp, #-48]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1894              		.loc 1 1489 20
 1895 0698 0320A0E1 		mov	r2, r3
 1896 069c 14001BE5 		ldr	r0, [fp, #-20]
 1897 06a0 FEFFFFEB 		bl	_RME_Prc_Pgt
 1898 06a4 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 61


1492:../../Source/Kernel/rme_kernel.c **** #else
1493:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1494:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1495:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Raw_Pgt */
1496:../../Source/Kernel/rme_kernel.c **** #endif
1497:../../Source/Kernel/rme_kernel.c ****             break;
 1899              		.loc 1 1497 13
 1900 06a8 7B0000EA 		b	.L123
 1901              	.L107:
1498:../../Source/Kernel/rme_kernel.c ****         }
1499:../../Source/Kernel/rme_kernel.c ****         
1500:../../Source/Kernel/rme_kernel.c ****         /* Thread */
1501:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_CRT:
1502:../../Source/Kernel/rme_kernel.c ****         {
1503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1504:../../Source/Kernel/rme_kernel.c ****             
1505:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Crt(Cpt,
 1902              		.loc 1 1505 20
 1903 06ac 28301BE5 		ldr	r3, [fp, #-40]
 1904 06b0 0340A0E1 		mov	r4, r3
1506:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1507:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1905              		.loc 1 1507 44
 1906 06b4 34301BE5 		ldr	r3, [fp, #-52]
 1907 06b8 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1908              		.loc 1 1505 20
 1909 06bc 0350A0E1 		mov	r5, r3
1508:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Thd */
 1910              		.loc 1 1508 44
 1911 06c0 34301BE5 		ldr	r3, [fp, #-52]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1912              		.loc 1 1505 20
 1913 06c4 73C0FFE6 		uxth	ip, r3
1509:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Prc */
 1914              		.loc 1 1509 44
 1915 06c8 30301BE5 		ldr	r3, [fp, #-48]
 1916 06cc 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1917              		.loc 1 1505 20
 1918 06d0 03E0A0E1 		mov	lr, r3
1510:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Prio_Max *
 1919              		.loc 1 1510 33
 1920 06d4 30301BE5 		ldr	r3, [fp, #-48]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1921              		.loc 1 1505 20
 1922 06d8 7330FFE6 		uxth	r3, r3
 1923 06dc 2C201BE5 		ldr	r2, [fp, #-44]
 1924 06e0 24101BE5 		ldr	r1, [fp, #-36]
 1925 06e4 A113A0E1 		lsr	r1, r1, #7
 1926 06e8 24001BE5 		ldr	r0, [fp, #-36]
 1927 06ec 400000E2 		and	r0, r0, #64
 1928 06f0 10008DE5 		str	r0, [sp, #16]
 1929 06f4 0C108DE5 		str	r1, [sp, #12]
 1930 06f8 08208DE5 		str	r2, [sp, #8]
 1931 06fc 04308DE5 		str	r3, [sp, #4]
 1932 0700 00E08DE5 		str	lr, [sp]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 62


 1933 0704 0C30A0E1 		mov	r3, ip
 1934 0708 0520A0E1 		mov	r2, r5
 1935 070c 0410A0E1 		mov	r1, r4
 1936 0710 14001BE5 		ldr	r0, [fp, #-20]
 1937 0714 FEFFFFEB 		bl	_RME_Thd_Crt
 1938 0718 10000BE5 		str	r0, [fp, #-16]
1511:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Raddr */
1512:../../Source/Kernel/rme_kernel.c ****                                 Svc>>7,                                     /* rme_ptr_t Attr */
1513:../../Source/Kernel/rme_kernel.c ****                                 Svc&0x40U);                                 /* rme_ptr_t Is_Hyp */
1514:../../Source/Kernel/rme_kernel.c ****             break;
 1939              		.loc 1 1514 13
 1940 071c 5E0000EA 		b	.L123
 1941              	.L106:
1515:../../Source/Kernel/rme_kernel.c ****         }
1516:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_DEL:
1517:../../Source/Kernel/rme_kernel.c ****         {
1518:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1519:../../Source/Kernel/rme_kernel.c ****             
1520:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Del(Cpt,
 1942              		.loc 1 1520 20
 1943 0720 28301BE5 		ldr	r3, [fp, #-40]
 1944 0724 0310A0E1 		mov	r1, r3
1521:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1522:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Thd */
 1945              		.loc 1 1522 49
 1946 0728 34301BE5 		ldr	r3, [fp, #-52]
1520:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1947              		.loc 1 1520 20
 1948 072c 0320A0E1 		mov	r2, r3
 1949 0730 14001BE5 		ldr	r0, [fp, #-20]
 1950 0734 FEFFFFEB 		bl	_RME_Thd_Del
 1951 0738 10000BE5 		str	r0, [fp, #-16]
1523:../../Source/Kernel/rme_kernel.c ****             break;
 1952              		.loc 1 1523 13
 1953 073c 560000EA 		b	.L123
 1954              	.L105:
1524:../../Source/Kernel/rme_kernel.c ****         }
1525:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_BIND:
1526:../../Source/Kernel/rme_kernel.c ****         {
1527:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1528:../../Source/Kernel/rme_kernel.c ****             
1529:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Bind(Cpt,
 1955              		.loc 1 1529 20
 1956 0740 28301BE5 		ldr	r3, [fp, #-40]
 1957 0744 03C0A0E1 		mov	ip, r3
1530:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
1531:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D1(Param[0]),   /* rme_cid_t Cap_Thd_Sc
 1958              		.loc 1 1531 51
 1959 0748 34301BE5 		ldr	r3, [fp, #-52]
 1960 074c 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1961              		.loc 1 1529 20
 1962 0750 03E0A0E1 		mov	lr, r3
1532:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Sig */
 1963              		.loc 1 1532 51
 1964 0754 34301BE5 		ldr	r3, [fp, #-52]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 63


 1965              		.loc 1 1529 20
 1966 0758 7310FFE6 		uxth	r1, r3
1533:../../Source/Kernel/rme_kernel.c ****                                        (rme_tid_t)RME_PARAM_D1(Param[1]),   /* rme_tid_t TID */
 1967              		.loc 1 1533 51
 1968 075c 30301BE5 		ldr	r3, [fp, #-48]
 1969 0760 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1970              		.loc 1 1529 20
 1971 0764 0300A0E1 		mov	r0, r3
1534:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D0(Param[1]),              /* rme_ptr_t Prio */
 1972              		.loc 1 1534 40
 1973 0768 30301BE5 		ldr	r3, [fp, #-48]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1974              		.loc 1 1529 20
 1975 076c 7330FFE6 		uxth	r3, r3
 1976 0770 2C201BE5 		ldr	r2, [fp, #-44]
 1977 0774 08208DE5 		str	r2, [sp, #8]
 1978 0778 04308DE5 		str	r3, [sp, #4]
 1979 077c 00008DE5 		str	r0, [sp]
 1980 0780 0130A0E1 		mov	r3, r1
 1981 0784 0E20A0E1 		mov	r2, lr
 1982 0788 0C10A0E1 		mov	r1, ip
 1983 078c 14001BE5 		ldr	r0, [fp, #-20]
 1984 0790 FEFFFFEB 		bl	_RME_Thd_Sched_Bind
 1985 0794 10000BE5 		str	r0, [fp, #-16]
1535:../../Source/Kernel/rme_kernel.c ****                                        Param[2]);                           /* rme_ptr_t Haddr */
1536:../../Source/Kernel/rme_kernel.c ****             break;
 1986              		.loc 1 1536 13
 1987 0798 3F0000EA 		b	.L123
 1988              	.L104:
1537:../../Source/Kernel/rme_kernel.c ****         }
1538:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_RCV:
1539:../../Source/Kernel/rme_kernel.c ****         {
1540:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1541:../../Source/Kernel/rme_kernel.c ****             
1542:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Rcv(Cpt,
1543:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1989              		.loc 1 1543 55
 1990 079c 34301BE5 		ldr	r3, [fp, #-52]
1542:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1991              		.loc 1 1542 20
 1992 07a0 0310A0E1 		mov	r1, r3
 1993 07a4 14001BE5 		ldr	r0, [fp, #-20]
 1994 07a8 FEFFFFEB 		bl	_RME_Thd_Sched_Rcv
 1995 07ac 10000BE5 		str	r0, [fp, #-16]
1544:../../Source/Kernel/rme_kernel.c ****             break;
 1996              		.loc 1 1544 13
 1997 07b0 390000EA 		b	.L123
 1998              	.L103:
1545:../../Source/Kernel/rme_kernel.c ****         }
1546:../../Source/Kernel/rme_kernel.c ****         
1547:../../Source/Kernel/rme_kernel.c ****         /* Signal */
1548:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_CRT:
1549:../../Source/Kernel/rme_kernel.c ****         {
1550:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1551:../../Source/Kernel/rme_kernel.c ****             
1552:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Crt(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 64


 1999              		.loc 1 1552 20
 2000 07b4 28301BE5 		ldr	r3, [fp, #-40]
 2001 07b8 0310A0E1 		mov	r1, r3
1553:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1554:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2002              		.loc 1 1554 49
 2003 07bc 34301BE5 		ldr	r3, [fp, #-52]
1552:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2004              		.loc 1 1552 20
 2005 07c0 0320A0E1 		mov	r2, r3
 2006 07c4 14001BE5 		ldr	r0, [fp, #-20]
 2007 07c8 FEFFFFEB 		bl	_RME_Sig_Crt
 2008 07cc 10000BE5 		str	r0, [fp, #-16]
1555:../../Source/Kernel/rme_kernel.c ****             break;
 2009              		.loc 1 1555 13
 2010 07d0 310000EA 		b	.L123
 2011              	.L102:
1556:../../Source/Kernel/rme_kernel.c ****         }
1557:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_DEL:
1558:../../Source/Kernel/rme_kernel.c ****         {
1559:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1560:../../Source/Kernel/rme_kernel.c ****             
1561:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Del(Cpt,
 2012              		.loc 1 1561 20
 2013 07d4 28301BE5 		ldr	r3, [fp, #-40]
 2014 07d8 0310A0E1 		mov	r1, r3
1562:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1563:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2015              		.loc 1 1563 49
 2016 07dc 34301BE5 		ldr	r3, [fp, #-52]
1561:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2017              		.loc 1 1561 20
 2018 07e0 0320A0E1 		mov	r2, r3
 2019 07e4 14001BE5 		ldr	r0, [fp, #-20]
 2020 07e8 FEFFFFEB 		bl	_RME_Sig_Del
 2021 07ec 10000BE5 		str	r0, [fp, #-16]
1564:../../Source/Kernel/rme_kernel.c ****             break;
 2022              		.loc 1 1564 13
 2023 07f0 290000EA 		b	.L123
 2024              	.L101:
1565:../../Source/Kernel/rme_kernel.c ****         }
1566:../../Source/Kernel/rme_kernel.c ****         
1567:../../Source/Kernel/rme_kernel.c ****         /* Invocation */
1568:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_CRT:
1569:../../Source/Kernel/rme_kernel.c ****         {
1570:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1571:../../Source/Kernel/rme_kernel.c ****             
1572:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Crt(Cpt,
 2025              		.loc 1 1572 20
 2026 07f4 28301BE5 		ldr	r3, [fp, #-40]
 2027 07f8 0300A0E1 		mov	r0, r3
1573:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1574:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 2028              		.loc 1 1574 44
 2029 07fc 34301BE5 		ldr	r3, [fp, #-52]
 2030 0800 2338A0E1 		lsr	r3, r3, #16
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 65


 2031              		.loc 1 1572 20
 2032 0804 03C0A0E1 		mov	ip, r3
1575:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2033              		.loc 1 1575 44
 2034 0808 34301BE5 		ldr	r3, [fp, #-52]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2035              		.loc 1 1572 20
 2036 080c 7320FFE6 		uxth	r2, r3
1576:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Prc */
 2037              		.loc 1 1576 49
 2038 0810 30301BE5 		ldr	r3, [fp, #-48]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2039              		.loc 1 1572 20
 2040 0814 0310A0E1 		mov	r1, r3
 2041 0818 2C301BE5 		ldr	r3, [fp, #-44]
 2042 081c 04308DE5 		str	r3, [sp, #4]
 2043 0820 00108DE5 		str	r1, [sp]
 2044 0824 0230A0E1 		mov	r3, r2
 2045 0828 0C20A0E1 		mov	r2, ip
 2046 082c 0010A0E1 		mov	r1, r0
 2047 0830 14001BE5 		ldr	r0, [fp, #-20]
 2048 0834 FEFFFFEB 		bl	_RME_Inv_Crt
 2049 0838 10000BE5 		str	r0, [fp, #-16]
1577:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Raddr */
1578:../../Source/Kernel/rme_kernel.c ****             break;
 2050              		.loc 1 1578 13
 2051 083c 160000EA 		b	.L123
 2052              	.L100:
1579:../../Source/Kernel/rme_kernel.c ****         }
1580:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_DEL:
1581:../../Source/Kernel/rme_kernel.c ****         {
1582:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1583:../../Source/Kernel/rme_kernel.c ****             
1584:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Del(Cpt,
 2053              		.loc 1 1584 20
 2054 0840 28301BE5 		ldr	r3, [fp, #-40]
 2055 0844 0310A0E1 		mov	r1, r3
1585:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1586:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Inv */
 2056              		.loc 1 1586 49
 2057 0848 34301BE5 		ldr	r3, [fp, #-52]
1584:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2058              		.loc 1 1584 20
 2059 084c 0320A0E1 		mov	r2, r3
 2060 0850 14001BE5 		ldr	r0, [fp, #-20]
 2061 0854 FEFFFFEB 		bl	_RME_Inv_Del
 2062 0858 10000BE5 		str	r0, [fp, #-16]
1587:../../Source/Kernel/rme_kernel.c ****             break;
 2063              		.loc 1 1587 13
 2064 085c 0E0000EA 		b	.L123
 2065              	.L98:
1588:../../Source/Kernel/rme_kernel.c ****         }
1589:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_SET:
1590:../../Source/Kernel/rme_kernel.c ****         {
1591:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1592:../../Source/Kernel/rme_kernel.c ****             
1593:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Set(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 66


1594:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2066              		.loc 1 1594 44
 2067 0860 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2068              		.loc 1 1593 20
 2069 0864 7310FFE6 		uxth	r1, r3
 2070 0868 30201BE5 		ldr	r2, [fp, #-48]
 2071 086c 2C001BE5 		ldr	r0, [fp, #-44]
1595:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Entry */
1596:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Stack */
1597:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]));                    /* rme_ptr_t Is_Exc_Ret
 2072              		.loc 1 1597 33
 2073 0870 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2074              		.loc 1 1593 20
 2075 0874 2338A0E1 		lsr	r3, r3, #16
 2076 0878 00308DE5 		str	r3, [sp]
 2077 087c 0030A0E1 		mov	r3, r0
 2078 0880 14001BE5 		ldr	r0, [fp, #-20]
 2079 0884 FEFFFFEB 		bl	_RME_Inv_Set
 2080 0888 10000BE5 		str	r0, [fp, #-16]
1598:../../Source/Kernel/rme_kernel.c ****             break;
 2081              		.loc 1 1598 13
 2082 088c 020000EA 		b	.L123
 2083              	.L97:
1599:../../Source/Kernel/rme_kernel.c ****         }
1600:../../Source/Kernel/rme_kernel.c ****         /* This is an error */
1601:../../Source/Kernel/rme_kernel.c ****         default: 
1602:../../Source/Kernel/rme_kernel.c ****         {
1603:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1604:../../Source/Kernel/rme_kernel.c ****             
1605:../../Source/Kernel/rme_kernel.c ****             Retval=RME_ERR_CPT_NULL;
 2084              		.loc 1 1605 19
 2085 0890 0030E0E3 		mvn	r3, #0
 2086 0894 10300BE5 		str	r3, [fp, #-16]
1606:../../Source/Kernel/rme_kernel.c ****             break;
 2087              		.loc 1 1606 13
 2088 0898 00F020E3 		nop
 2089              	.L123:
1607:../../Source/Kernel/rme_kernel.c ****         }
1608:../../Source/Kernel/rme_kernel.c ****     }
1609:../../Source/Kernel/rme_kernel.c ****     
1610:../../Source/Kernel/rme_kernel.c ****     /* We set the registers and return */
1611:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,Retval);
 2090              		.loc 1 1611 5
 2091 089c 10101BE5 		ldr	r1, [fp, #-16]
 2092 08a0 38001BE5 		ldr	r0, [fp, #-56]
 2093 08a4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 2094              	.L69:
1612:../../Source/Kernel/rme_kernel.c **** }
 2095              		.loc 1 1612 1
 2096 08a8 0CD04BE2 		sub	sp, fp, #12
 2097              		.cfi_def_cfa 13, 16
 2098              		@ sp needed
 2099 08ac 3088BDE8 		pop	{r4, r5, fp, pc}
 2100              	.L128:
 2101              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 67


 2102              	.L127:
 2103 08b0 00000000 		.word	.L81
 2104 08b4 20000000 		.word	.L99
 2105              		.cfi_endproc
 2106              	.LFE18:
 2108              		.section	.text._RME_Tim_Handler,"ax",%progbits
 2109              		.align	2
 2110              		.global	_RME_Tim_Handler
 2111              		.syntax unified
 2112              		.arm
 2114              	_RME_Tim_Handler:
 2115              	.LFB19:
1613:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Svc_Handler *********************************************/
1614:../../Source/Kernel/rme_kernel.c **** 
1615:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Handler **************************************************
1616:../../Source/Kernel/rme_kernel.c **** Description : The system tick timer handler of RME.
1617:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1618:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Slice - Number of slices passed since last call of
1619:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1620:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1621:../../Source/Kernel/rme_kernel.c **** Return      : None.
1622:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1623:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Handler(struct RME_Reg_Struct* Reg,
1624:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Slice)
1625:../../Source/Kernel/rme_kernel.c **** {
 2116              		.loc 1 1625 1
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 16
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0000 00482DE9 		push	{fp, lr}
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 11, -8
 2123              		.cfi_offset 14, -4
 2124 0004 04B08DE2 		add	fp, sp, #4
 2125              		.cfi_def_cfa 11, 4
 2126 0008 10D04DE2 		sub	sp, sp, #16
 2127 000c 10000BE5 		str	r0, [fp, #-16]
 2128 0010 14100BE5 		str	r1, [fp, #-20]
1626:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
1627:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1628:../../Source/Kernel/rme_kernel.c ****     
1629:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 2129              		.loc 1 1629 10
 2130 0014 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2131 0018 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2132 001c 08300BE5 		str	r3, [fp, #-8]
1630:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 2133              		.loc 1 1630 12
 2134 0020 08301BE5 		ldr	r3, [fp, #-8]
 2135 0024 043093E5 		ldr	r3, [r3, #4]
 2136 0028 0C300BE5 		str	r3, [fp, #-12]
1631:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2137              		.loc 1 1631 22
 2138 002c 0C301BE5 		ldr	r3, [fp, #-12]
 2139 0030 183093E5 		ldr	r3, [r3, #24]
 2140              		.loc 1 1631 7
 2141 0034 0E0173E3 		cmn	r3, #-2147483645
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 68


 2142 0038 1500008A 		bhi	.L130
1632:../../Source/Kernel/rme_kernel.c ****     {
1633:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1634:../../Source/Kernel/rme_kernel.c **** 
1635:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, and see if the timeslice is used up */
1636:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2143              		.loc 1 1636 32
 2144 003c 0C301BE5 		ldr	r3, [fp, #-12]
 2145 0040 183093E5 		ldr	r3, [r3, #24]
 2146              		.loc 1 1636 11
 2147 0044 14201BE5 		ldr	r2, [fp, #-20]
 2148 0048 030052E1 		cmp	r2, r3
 2149 004c 0600002A 		bcs	.L131
1637:../../Source/Kernel/rme_kernel.c ****         {
1638:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1639:../../Source/Kernel/rme_kernel.c ****             
1640:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2150              		.loc 1 1640 27
 2151 0050 0C301BE5 		ldr	r3, [fp, #-12]
 2152 0054 182093E5 		ldr	r2, [r3, #24]
 2153              		.loc 1 1640 33
 2154 0058 14301BE5 		ldr	r3, [fp, #-20]
 2155 005c 032042E0 		sub	r2, r2, r3
 2156 0060 0C301BE5 		ldr	r3, [fp, #-12]
 2157 0064 182083E5 		str	r2, [r3, #24]
 2158 0068 090000EA 		b	.L130
 2159              	.L131:
1641:../../Source/Kernel/rme_kernel.c ****         }
1642:../../Source/Kernel/rme_kernel.c ****         else
1643:../../Source/Kernel/rme_kernel.c ****         {
1644:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1645:../../Source/Kernel/rme_kernel.c **** 
1646:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
1647:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 2160              		.loc 1 1647 33
 2161 006c 0C301BE5 		ldr	r3, [fp, #-12]
 2162 0070 0020A0E3 		mov	r2, #0
 2163 0074 182083E5 		str	r2, [r3, #24]
1648:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 2164              		.loc 1 1648 13
 2165 0078 0C001BE5 		ldr	r0, [fp, #-12]
 2166 007c FEFFFFEB 		bl	_RME_Run_Del
1649:../../Source/Kernel/rme_kernel.c ****             
1650:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
1651:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 2167              		.loc 1 1651 33
 2168 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2169 0084 0220A0E3 		mov	r2, #2
 2170 0088 1C2083E5 		str	r2, [r3, #28]
1652:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 2171              		.loc 1 1652 13
 2172 008c 0C001BE5 		ldr	r0, [fp, #-12]
 2173 0090 FEFFFFEB 		bl	_RME_Run_Notif
 2174              	.L130:
1653:../../Source/Kernel/rme_kernel.c ****         }
1654:../../Source/Kernel/rme_kernel.c ****     }
1655:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 69


1656:../../Source/Kernel/rme_kernel.c ****     {
1657:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1658:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1659:../../Source/Kernel/rme_kernel.c ****     }
1660:../../Source/Kernel/rme_kernel.c **** 
1661:../../Source/Kernel/rme_kernel.c ****     /* Send to the system tick timer endpoint. This endpoint is per-core */
1662:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_Snd(Local->Sig_Tim);
 2175              		.loc 1 1662 5
 2176 0094 08301BE5 		ldr	r3, [fp, #-8]
 2177 0098 083093E5 		ldr	r3, [r3, #8]
 2178 009c 0300A0E1 		mov	r0, r3
 2179 00a0 FEFFFFEB 		bl	_RME_Kern_Snd
1663:../../Source/Kernel/rme_kernel.c **** 
1664:../../Source/Kernel/rme_kernel.c ****     /* All kernel send complete, now pick the highest priority thread to run */
1665:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 2180              		.loc 1 1665 5
 2181 00a4 08101BE5 		ldr	r1, [fp, #-8]
 2182 00a8 10001BE5 		ldr	r0, [fp, #-16]
 2183 00ac FEFFFFEB 		bl	_RME_Kern_High
1666:../../Source/Kernel/rme_kernel.c **** }
 2184              		.loc 1 1666 1
 2185 00b0 00F020E3 		nop
 2186 00b4 04D04BE2 		sub	sp, fp, #4
 2187              		.cfi_def_cfa 13, 8
 2188              		@ sp needed
 2189 00b8 0088BDE8 		pop	{fp, pc}
 2190              		.cfi_endproc
 2191              	.LFE19:
 2193              		.section	.text._RME_Tim_Elapse,"ax",%progbits
 2194              		.align	2
 2195              		.global	_RME_Tim_Elapse
 2196              		.syntax unified
 2197              		.arm
 2199              	_RME_Tim_Elapse:
 2200              	.LFB20:
1667:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Handler *********************************************/
1668:../../Source/Kernel/rme_kernel.c **** 
1669:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Elapse ***************************************************
1670:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1671:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Slice - Number of slices passed since last call of
1672:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1673:../../Source/Kernel/rme_kernel.c **** Output      : None.
1674:../../Source/Kernel/rme_kernel.c **** Return      : None.
1675:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1676:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Elapse(rme_ptr_t Slice)
1677:../../Source/Kernel/rme_kernel.c **** {
 2201              		.loc 1 1677 1
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 16
 2204              		@ frame_needed = 1, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
 2206 0000 04B02DE5 		str	fp, [sp, #-4]!
 2207              		.cfi_def_cfa_offset 4
 2208              		.cfi_offset 11, -4
 2209 0004 00B08DE2 		add	fp, sp, #0
 2210              		.cfi_def_cfa_register 11
 2211 0008 14D04DE2 		sub	sp, sp, #20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 70


 2212 000c 10000BE5 		str	r0, [fp, #-16]
1678:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1679:../../Source/Kernel/rme_kernel.c ****     
1680:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 2213              		.loc 1 1680 12
 2214 0010 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2215 0014 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2216 0018 043093E5 		ldr	r3, [r3, #4]
 2217 001c 08300BE5 		str	r3, [fp, #-8]
1681:../../Source/Kernel/rme_kernel.c ****     
1682:../../Source/Kernel/rme_kernel.c ****     /* We don't want the slices less than 1 because we want to keep the kernel
1683:../../Source/Kernel/rme_kernel.c ****      * SVC invariants - the current thread must still be running after this */
1684:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2218              		.loc 1 1684 22
 2219 0020 08301BE5 		ldr	r3, [fp, #-8]
 2220 0024 183093E5 		ldr	r3, [r3, #24]
 2221              		.loc 1 1684 7
 2222 0028 0E0173E3 		cmn	r3, #-2147483645
 2223 002c 0E00008A 		bhi	.L135
1685:../../Source/Kernel/rme_kernel.c ****     {
1686:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1687:../../Source/Kernel/rme_kernel.c **** 
1688:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, but no less than 1, so the thread is
1689:../../Source/Kernel/rme_kernel.c ****          * always running, which keeps the invariant of the kernel */
1690:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2224              		.loc 1 1690 32
 2225 0030 08301BE5 		ldr	r3, [fp, #-8]
 2226 0034 183093E5 		ldr	r3, [r3, #24]
 2227              		.loc 1 1690 11
 2228 0038 10201BE5 		ldr	r2, [fp, #-16]
 2229 003c 030052E1 		cmp	r2, r3
 2230 0040 0600002A 		bcs	.L134
1691:../../Source/Kernel/rme_kernel.c ****         {
1692:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1693:../../Source/Kernel/rme_kernel.c ****             
1694:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2231              		.loc 1 1694 27
 2232 0044 08301BE5 		ldr	r3, [fp, #-8]
 2233 0048 182093E5 		ldr	r2, [r3, #24]
 2234              		.loc 1 1694 33
 2235 004c 10301BE5 		ldr	r3, [fp, #-16]
 2236 0050 032042E0 		sub	r2, r2, r3
 2237 0054 08301BE5 		ldr	r3, [fp, #-8]
 2238 0058 182083E5 		str	r2, [r3, #24]
1695:../../Source/Kernel/rme_kernel.c ****         }
1696:../../Source/Kernel/rme_kernel.c ****         else
1697:../../Source/Kernel/rme_kernel.c ****         {
1698:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1699:../../Source/Kernel/rme_kernel.c ****             
1700:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=1U;
1701:../../Source/Kernel/rme_kernel.c ****         }
1702:../../Source/Kernel/rme_kernel.c ****     }
1703:../../Source/Kernel/rme_kernel.c ****     else
1704:../../Source/Kernel/rme_kernel.c ****     {
1705:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1706:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1707:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 71


1708:../../Source/Kernel/rme_kernel.c **** }
 2239              		.loc 1 1708 1
 2240 005c 020000EA 		b	.L135
 2241              	.L134:
1700:../../Source/Kernel/rme_kernel.c ****         }
 2242              		.loc 1 1700 33
 2243 0060 08301BE5 		ldr	r3, [fp, #-8]
 2244 0064 0120A0E3 		mov	r2, #1
 2245 0068 182083E5 		str	r2, [r3, #24]
 2246              	.L135:
 2247              		.loc 1 1708 1
 2248 006c 00F020E3 		nop
 2249 0070 00D08BE2 		add	sp, fp, #0
 2250              		.cfi_def_cfa_register 13
 2251              		@ sp needed
 2252 0074 04B09DE4 		ldr	fp, [sp], #4
 2253              		.cfi_restore 11
 2254              		.cfi_def_cfa_offset 0
 2255 0078 1EFF2FE1 		bx	lr
 2256              		.cfi_endproc
 2257              	.LFE20:
 2259              		.section	.text._RME_Tim_Future,"ax",%progbits
 2260              		.align	2
 2261              		.global	_RME_Tim_Future
 2262              		.syntax unified
 2263              		.arm
 2265              	_RME_Tim_Future:
 2266              	.LFB21:
1709:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Elapse **********************************************/
1710:../../Source/Kernel/rme_kernel.c **** 
1711:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Future ***************************************************
1712:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1713:../../Source/Kernel/rme_kernel.c **** Input       : None.
1714:../../Source/Kernel/rme_kernel.c **** Output      : None.
1715:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - How many slices to program until the next timeout.
1716:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1717:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Tim_Future(void)
1718:../../Source/Kernel/rme_kernel.c **** {
 2267              		.loc 1 1718 1
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 1, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
 2272 0000 04B02DE5 		str	fp, [sp, #-4]!
 2273              		.cfi_def_cfa_offset 4
 2274              		.cfi_offset 11, -4
 2275 0004 00B08DE2 		add	fp, sp, #0
 2276              		.cfi_def_cfa_register 11
1719:../../Source/Kernel/rme_kernel.c ****     /* If we're running an infinite thread, just program infinite time,
1720:../../Source/Kernel/rme_kernel.c ****      * these values are very large so that's fine */
1721:../../Source/Kernel/rme_kernel.c ****     return RME_CPU_LOCAL()->Thd_Cur->Sched.Slice;
 2277              		.loc 1 1721 27
 2278 0008 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2279 000c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2280 0010 043093E5 		ldr	r3, [r3, #4]
 2281              		.loc 1 1721 43
 2282 0014 183093E5 		ldr	r3, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 72


1722:../../Source/Kernel/rme_kernel.c **** }
 2283              		.loc 1 1722 1
 2284 0018 0300A0E1 		mov	r0, r3
 2285 001c 00D08BE2 		add	sp, fp, #0
 2286              		.cfi_def_cfa_register 13
 2287              		@ sp needed
 2288 0020 04B09DE4 		ldr	fp, [sp], #4
 2289              		.cfi_restore 11
 2290              		.cfi_def_cfa_offset 0
 2291 0024 1EFF2FE1 		bx	lr
 2292              		.cfi_endproc
 2293              	.LFE21:
 2295              		.section	.text._RME_Cpt_Boot_Init,"ax",%progbits
 2296              		.align	2
 2297              		.global	_RME_Cpt_Boot_Init
 2298              		.syntax unified
 2299              		.arm
 2301              	_RME_Cpt_Boot_Init:
 2302              	.LFB22:
1723:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Future **********************************************/
1724:../../Source/Kernel/rme_kernel.c **** 
1725:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Init ************************************************
1726:../../Source/Kernel/rme_kernel.c **** Description : Create the first capability table in the system, at boot-time. 
1727:../../Source/Kernel/rme_kernel.c ****               This function must be called at system startup before setting up
1728:../../Source/Kernel/rme_kernel.c ****               any other kernel objects.
1729:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
1730:../../Source/Kernel/rme_kernel.c **** Input       : rme_cid_t Cap_Cpt - The capability slot that you want this newly
1731:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1732:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1733:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the
1734:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1735:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capability entries in the
1736:../../Source/Kernel/rme_kernel.c ****                                     capability table.
1737:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1738:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1739:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Init(rme_cid_t Cap_Cpt,
1740:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Vaddr,
1741:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Entry_Num)
1742:../../Source/Kernel/rme_kernel.c **** {
 2303              		.loc 1 1742 1
 2304              		.cfi_startproc
 2305              		@ args = 0, pretend = 0, frame = 24
 2306              		@ frame_needed = 1, uses_anonymous_args = 0
 2307 0000 00482DE9 		push	{fp, lr}
 2308              		.cfi_def_cfa_offset 8
 2309              		.cfi_offset 11, -8
 2310              		.cfi_offset 14, -4
 2311 0004 04B08DE2 		add	fp, sp, #4
 2312              		.cfi_def_cfa 11, 4
 2313 0008 18D04DE2 		sub	sp, sp, #24
 2314 000c 10000BE5 		str	r0, [fp, #-16]
 2315 0010 14100BE5 		str	r1, [fp, #-20]
 2316 0014 18200BE5 		str	r2, [fp, #-24]
1743:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1744:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1745:../../Source/Kernel/rme_kernel.c **** 
1746:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 73


1747:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2317              		.loc 1 1747 7
 2318 0018 18301BE5 		ldr	r3, [fp, #-24]
 2319 001c 000053E3 		cmp	r3, #0
 2320 0020 0200000A 		beq	.L139
 2321              		.loc 1 1747 23 discriminator 1
 2322 0024 18301BE5 		ldr	r3, [fp, #-24]
 2323 0028 800053E3 		cmp	r3, #128
 2324 002c 0100009A 		bls	.L140
 2325              	.L139:
1748:../../Source/Kernel/rme_kernel.c ****     {
1749:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1750:../../Source/Kernel/rme_kernel.c ****         
1751:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2326              		.loc 1 1751 16
 2327 0030 0230E0E3 		mvn	r3, #2
 2328 0034 300000EA 		b	.L141
 2329              	.L140:
1752:../../Source/Kernel/rme_kernel.c ****     }
1753:../../Source/Kernel/rme_kernel.c ****     else
1754:../../Source/Kernel/rme_kernel.c ****     {
1755:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1756:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1757:../../Source/Kernel/rme_kernel.c ****     }
1758:../../Source/Kernel/rme_kernel.c ****     
1759:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
1760:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2330              		.loc 1 1760 8
 2331 0038 18301BE5 		ldr	r3, [fp, #-24]
 2332 003c 8332A0E1 		lsl	r3, r3, #5
 2333 0040 0310A0E1 		mov	r1, r3
 2334 0044 14001BE5 		ldr	r0, [fp, #-20]
 2335 0048 FEFFFFEB 		bl	_RME_Kot_Mark
 2336 004c 0030A0E1 		mov	r3, r0
 2337              		.loc 1 1760 7 discriminator 1
 2338 0050 000053E3 		cmp	r3, #0
 2339 0054 0100000A 		beq	.L142
1761:../../Source/Kernel/rme_kernel.c ****     {
1762:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1763:../../Source/Kernel/rme_kernel.c ****         
1764:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2340              		.loc 1 1764 16
 2341 0058 0330E0E3 		mvn	r3, #3
 2342 005c 260000EA 		b	.L141
 2343              	.L142:
1765:../../Source/Kernel/rme_kernel.c ****     }
1766:../../Source/Kernel/rme_kernel.c ****     else
1767:../../Source/Kernel/rme_kernel.c ****     {
1768:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1769:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1770:../../Source/Kernel/rme_kernel.c ****     }
1771:../../Source/Kernel/rme_kernel.c **** 
1772:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1773:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2344              		.loc 1 1773 14
 2345 0060 0030A0E3 		mov	r3, #0
 2346 0064 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 74


 2347              		.loc 1 1773 5
 2348 0068 090000EA 		b	.L143
 2349              	.L144:
1774:../../Source/Kernel/rme_kernel.c ****     {
1775:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2350              		.loc 1 1775 9
 2351 006c 08301BE5 		ldr	r3, [fp, #-8]
 2352 0070 8322A0E1 		lsl	r2, r3, #5
 2353 0074 14301BE5 		ldr	r3, [fp, #-20]
 2354 0078 033082E0 		add	r3, r2, r3
 2355 007c 0320A0E1 		mov	r2, r3
 2356 0080 0030A0E3 		mov	r3, #0
 2357 0084 003082E5 		str	r3, [r2]
1773:../../Source/Kernel/rme_kernel.c ****     {
 2358              		.loc 1 1773 39 discriminator 3
 2359 0088 08301BE5 		ldr	r3, [fp, #-8]
 2360 008c 013083E2 		add	r3, r3, #1
 2361 0090 08300BE5 		str	r3, [fp, #-8]
 2362              	.L143:
1773:../../Source/Kernel/rme_kernel.c ****     {
 2363              		.loc 1 1773 23 discriminator 1
 2364 0094 08201BE5 		ldr	r2, [fp, #-8]
 2365 0098 18301BE5 		ldr	r3, [fp, #-24]
 2366 009c 030052E1 		cmp	r2, r3
 2367 00a0 F1FFFF3A 		bcc	.L144
1776:../../Source/Kernel/rme_kernel.c ****     }
1777:../../Source/Kernel/rme_kernel.c **** 
1778:../../Source/Kernel/rme_kernel.c ****     Cpt=&(((struct RME_Cap_Cpt*)Vaddr)[Cap_Cpt]);
 2368              		.loc 1 1778 39
 2369 00a4 10301BE5 		ldr	r3, [fp, #-16]
 2370 00a8 8322A0E1 		lsl	r2, r3, #5
 2371 00ac 14301BE5 		ldr	r3, [fp, #-20]
 2372 00b0 033082E0 		add	r3, r2, r3
 2373              		.loc 1 1778 8
 2374 00b4 0C300BE5 		str	r3, [fp, #-12]
1779:../../Source/Kernel/rme_kernel.c ****     
1780:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1781:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Root_Ref=1U;
 2375              		.loc 1 1781 23
 2376 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 2377 00bc 0120A0E3 		mov	r2, #1
 2378 00c0 042083E5 		str	r2, [r3, #4]
1782:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Object=Vaddr;
 2379              		.loc 1 1782 21
 2380 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 2381 00c8 14201BE5 		ldr	r2, [fp, #-20]
 2382 00cc 0C2083E5 		str	r2, [r3, #12]
1783:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Flag=RME_CPT_FLAG_ALL;
 2383              		.loc 1 1783 19
 2384 00d0 0C301BE5 		ldr	r3, [fp, #-12]
 2385 00d4 FF20A0E3 		mov	r2, #255
 2386 00d8 082083E5 		str	r2, [r3, #8]
1784:../../Source/Kernel/rme_kernel.c ****     
1785:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1786:../../Source/Kernel/rme_kernel.c ****     Cpt->Entry_Num=Entry_Num;
 2387              		.loc 1 1786 19
 2388 00dc 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 75


 2389 00e0 18201BE5 		ldr	r2, [fp, #-24]
 2390 00e4 142083E5 		str	r2, [r3, #20]
1787:../../Source/Kernel/rme_kernel.c **** 
1788:../../Source/Kernel/rme_kernel.c ****     /* At last, write into slot the correct information, and set status to VALID */
1789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt->Head.Type_Stat),
 2391              		.loc 1 1789 5
 2392 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 2393 00ec 0314A0E3 		mov	r1, #50331648
 2394 00f0 0300A0E1 		mov	r0, r3
 2395 00f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
1790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1793:../../Source/Kernel/rme_kernel.c **** 
1794:../../Source/Kernel/rme_kernel.c ****     return Cap_Cpt;
 2396              		.loc 1 1794 12
 2397 00f8 10301BE5 		ldr	r3, [fp, #-16]
 2398              	.L141:
1795:../../Source/Kernel/rme_kernel.c **** }
 2399              		.loc 1 1795 1
 2400 00fc 0300A0E1 		mov	r0, r3
 2401 0100 04D04BE2 		sub	sp, fp, #4
 2402              		.cfi_def_cfa 13, 8
 2403              		@ sp needed
 2404 0104 0088BDE8 		pop	{fp, pc}
 2405              		.cfi_endproc
 2406              	.LFE22:
 2408              		.section	.text._RME_Cpt_Boot_Crt,"ax",%progbits
 2409              		.align	2
 2410              		.global	_RME_Cpt_Boot_Crt
 2411              		.syntax unified
 2412              		.arm
 2414              	_RME_Cpt_Boot_Crt:
 2415              	.LFB23:
1796:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Init *******************************************/
1797:../../Source/Kernel/rme_kernel.c **** 
1798:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Crt *************************************************
1799:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time capability table at the designated memory
1800:../../Source/Kernel/rme_kernel.c ****               address.
1801:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1802:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1803:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1804:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1805:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1806:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1807:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1808:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the 
1809:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1810:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capabilities in the capability table.
1811:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1812:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1813:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
1814:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
1815:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Crt,
1816:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
1817:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Entry_Num)
1818:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 76


 2416              		.loc 1 1818 1
 2417              		.cfi_startproc
 2418              		@ args = 4, pretend = 0, frame = 32
 2419              		@ frame_needed = 1, uses_anonymous_args = 0
 2420 0000 00482DE9 		push	{fp, lr}
 2421              		.cfi_def_cfa_offset 8
 2422              		.cfi_offset 11, -8
 2423              		.cfi_offset 14, -4
 2424 0004 04B08DE2 		add	fp, sp, #4
 2425              		.cfi_def_cfa 11, 4
 2426 0008 20D04DE2 		sub	sp, sp, #32
 2427 000c 18000BE5 		str	r0, [fp, #-24]
 2428 0010 1C100BE5 		str	r1, [fp, #-28]
 2429 0014 20200BE5 		str	r2, [fp, #-32]
 2430 0018 24300BE5 		str	r3, [fp, #-36]
1819:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1820:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1821:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1822:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1823:../../Source/Kernel/rme_kernel.c ****     
1824:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big - this is not restricted by RME_CPT_ENTRY_MAX */
1825:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2431              		.loc 1 1825 7
 2432 001c 04309BE5 		ldr	r3, [fp, #4]
 2433 0020 000053E3 		cmp	r3, #0
 2434 0024 0200000A 		beq	.L146
 2435              		.loc 1 1825 23 discriminator 1
 2436 0028 04309BE5 		ldr	r3, [fp, #4]
 2437 002c 800053E3 		cmp	r3, #128
 2438 0030 0100009A 		bls	.L147
 2439              	.L146:
1826:../../Source/Kernel/rme_kernel.c ****     {
1827:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1828:../../Source/Kernel/rme_kernel.c ****         
1829:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2440              		.loc 1 1829 16
 2441 0034 0230E0E3 		mvn	r3, #2
 2442 0038 B10000EA 		b	.L148
 2443              	.L147:
1830:../../Source/Kernel/rme_kernel.c ****     }
1831:../../Source/Kernel/rme_kernel.c ****     else
1832:../../Source/Kernel/rme_kernel.c ****     {
1833:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1834:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1835:../../Source/Kernel/rme_kernel.c ****     }
1836:../../Source/Kernel/rme_kernel.c **** 
1837:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1838:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,
 2444              		.loc 1 1838 5
 2445 003c 1C301BE5 		ldr	r3, [fp, #-28]
 2446 0040 803003E2 		and	r3, r3, #128
 2447 0044 000053E3 		cmp	r3, #0
 2448 0048 1C00001A 		bne	.L149
 2449              		.loc 1 1838 5 is_stmt 0 discriminator 1
 2450 004c 18301BE5 		ldr	r3, [fp, #-24]
 2451 0050 142093E5 		ldr	r2, [r3, #20]
 2452 0054 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 77


 2453 0058 030052E1 		cmp	r2, r3
 2454 005c 0100008A 		bhi	.L150
 2455              		.loc 1 1838 5 discriminator 3
 2456 0060 0230E0E3 		mvn	r3, #2
 2457              		.loc 1 1838 5
 2458 0064 A60000EA 		b	.L148
 2459              	.L150:
 2460              		.loc 1 1838 5 discriminator 4
 2461 0068 1C301BE5 		ldr	r3, [fp, #-28]
 2462 006c 8322A0E1 		lsl	r2, r3, #5
 2463 0070 18301BE5 		ldr	r3, [fp, #-24]
 2464 0074 0C3093E5 		ldr	r3, [r3, #12]
 2465 0078 033082E0 		add	r3, r2, r3
 2466 007c 0C300BE5 		str	r3, [fp, #-12]
 2467 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2468 0084 0300A0E1 		mov	r0, r3
 2469 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2470 008c 10000BE5 		str	r0, [fp, #-16]
 2471              		.loc 1 1838 5 discriminator 1
 2472 0090 10301BE5 		ldr	r3, [fp, #-16]
 2473 0094 FF3803E2 		and	r3, r3, #16711680
 2474 0098 020853E3 		cmp	r3, #131072
 2475 009c 0100001A 		bne	.L151
 2476              		.loc 1 1838 5 discriminator 5
 2477 00a0 0830E0E3 		mvn	r3, #8
 2478              		.loc 1 1838 5
 2479 00a4 960000EA 		b	.L148
 2480              	.L151:
 2481              		.loc 1 1838 5 discriminator 6
 2482 00a8 10301BE5 		ldr	r3, [fp, #-16]
 2483 00ac 233CA0E1 		lsr	r3, r3, #24
 2484 00b0 030053E3 		cmp	r3, #3
 2485 00b4 3F00000A 		beq	.L152
 2486              		.loc 1 1838 5 discriminator 7
 2487 00b8 0130E0E3 		mvn	r3, #1
 2488              		.loc 1 1838 5
 2489 00bc 900000EA 		b	.L148
 2490              	.L149:
 2491              		.loc 1 1838 5 discriminator 2
 2492 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 2493 00c4 2324A0E1 		lsr	r2, r3, #8
 2494 00c8 18301BE5 		ldr	r3, [fp, #-24]
 2495 00cc 143093E5 		ldr	r3, [r3, #20]
 2496 00d0 030052E1 		cmp	r2, r3
 2497 00d4 0100003A 		bcc	.L153
 2498              		.loc 1 1838 5 discriminator 8
 2499 00d8 0230E0E3 		mvn	r3, #2
 2500              		.loc 1 1838 5
 2501 00dc 880000EA 		b	.L148
 2502              	.L153:
 2503              		.loc 1 1838 5 discriminator 9
 2504 00e0 1C301BE5 		ldr	r3, [fp, #-28]
 2505 00e4 2334A0E1 		lsr	r3, r3, #8
 2506 00e8 8322A0E1 		lsl	r2, r3, #5
 2507 00ec 18301BE5 		ldr	r3, [fp, #-24]
 2508 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2509 00f4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 78


 2510 00f8 0C300BE5 		str	r3, [fp, #-12]
 2511 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2512 0100 0300A0E1 		mov	r0, r3
 2513 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2514 0108 10000BE5 		str	r0, [fp, #-16]
 2515              		.loc 1 1838 5 discriminator 1
 2516 010c 10301BE5 		ldr	r3, [fp, #-16]
 2517 0110 FF3803E2 		and	r3, r3, #16711680
 2518 0114 020853E3 		cmp	r3, #131072
 2519 0118 0100001A 		bne	.L154
 2520              		.loc 1 1838 5 discriminator 10
 2521 011c 0830E0E3 		mvn	r3, #8
 2522              		.loc 1 1838 5
 2523 0120 770000EA 		b	.L148
 2524              	.L154:
 2525              		.loc 1 1838 5 discriminator 11
 2526 0124 10301BE5 		ldr	r3, [fp, #-16]
 2527 0128 233CA0E1 		lsr	r3, r3, #24
 2528 012c 030053E3 		cmp	r3, #3
 2529 0130 0100000A 		beq	.L155
 2530              		.loc 1 1838 5 discriminator 12
 2531 0134 0130E0E3 		mvn	r3, #1
 2532              		.loc 1 1838 5
 2533 0138 710000EA 		b	.L148
 2534              	.L155:
 2535              		.loc 1 1838 5 discriminator 13
 2536 013c 1C301BE5 		ldr	r3, [fp, #-28]
 2537 0140 7F2003E2 		and	r2, r3, #127
 2538 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2539 0148 143093E5 		ldr	r3, [r3, #20]
 2540 014c 030052E1 		cmp	r2, r3
 2541 0150 0100003A 		bcc	.L156
 2542              		.loc 1 1838 5 discriminator 14
 2543 0154 0230E0E3 		mvn	r3, #2
 2544              		.loc 1 1838 5
 2545 0158 690000EA 		b	.L148
 2546              	.L156:
 2547              		.loc 1 1838 5 discriminator 15
 2548 015c 1C301BE5 		ldr	r3, [fp, #-28]
 2549 0160 7F3003E2 		and	r3, r3, #127
 2550 0164 8322A0E1 		lsl	r2, r3, #5
 2551 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2552 016c 0C3093E5 		ldr	r3, [r3, #12]
 2553 0170 033082E0 		add	r3, r2, r3
 2554 0174 0C300BE5 		str	r3, [fp, #-12]
 2555 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2556 017c 0300A0E1 		mov	r0, r3
 2557 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2558 0184 10000BE5 		str	r0, [fp, #-16]
 2559              		.loc 1 1838 5 discriminator 1
 2560 0188 10301BE5 		ldr	r3, [fp, #-16]
 2561 018c FF3803E2 		and	r3, r3, #16711680
 2562 0190 020853E3 		cmp	r3, #131072
 2563 0194 0100001A 		bne	.L157
 2564              		.loc 1 1838 5 discriminator 16
 2565 0198 0830E0E3 		mvn	r3, #8
 2566              		.loc 1 1838 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 79


 2567 019c 580000EA 		b	.L148
 2568              	.L157:
 2569              		.loc 1 1838 5 discriminator 17
 2570 01a0 10301BE5 		ldr	r3, [fp, #-16]
 2571 01a4 233CA0E1 		lsr	r3, r3, #24
 2572 01a8 030053E3 		cmp	r3, #3
 2573 01ac 0100000A 		beq	.L152
 2574              		.loc 1 1838 5 discriminator 18
 2575 01b0 0130E0E3 		mvn	r3, #1
 2576              		.loc 1 1838 5
 2577 01b4 520000EA 		b	.L148
 2578              	.L152:
1839:../../Source/Kernel/rme_kernel.c ****                    Cap_Cpt_Crt,
1840:../../Source/Kernel/rme_kernel.c ****                    RME_CAP_TYPE_CPT,
1841:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,
1842:../../Source/Kernel/rme_kernel.c ****                    Cpt_Op,
1843:../../Source/Kernel/rme_kernel.c ****                    Type_Stat);
1844:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1845:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2579              		.loc 1 1845 5 is_stmt 1
 2580 01b8 0C301BE5 		ldr	r3, [fp, #-12]
 2581 01bc 083093E5 		ldr	r3, [r3, #8]
 2582 01c0 013003E2 		and	r3, r3, #1
 2583 01c4 000053E3 		cmp	r3, #0
 2584 01c8 0100001A 		bne	.L158
 2585              		.loc 1 1845 5 is_stmt 0 discriminator 1
 2586 01cc 0630E0E3 		mvn	r3, #6
 2587              		.loc 1 1845 5
 2588 01d0 4B0000EA 		b	.L148
 2589              	.L158:
1846:../../Source/Kernel/rme_kernel.c **** 
1847:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1848:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 2590              		.loc 1 1848 5 is_stmt 1
 2591 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 2592 01d8 142093E5 		ldr	r2, [r3, #20]
 2593 01dc 20301BE5 		ldr	r3, [fp, #-32]
 2594 01e0 030052E1 		cmp	r2, r3
 2595 01e4 0100008A 		bhi	.L159
 2596              		.loc 1 1848 5 is_stmt 0 discriminator 1
 2597 01e8 0230E0E3 		mvn	r3, #2
 2598              		.loc 1 1848 5
 2599 01ec 440000EA 		b	.L148
 2600              	.L159:
 2601              		.loc 1 1848 5 discriminator 2
 2602 01f0 20301BE5 		ldr	r3, [fp, #-32]
 2603 01f4 8322A0E1 		lsl	r2, r3, #5
 2604 01f8 0C301BE5 		ldr	r3, [fp, #-12]
 2605 01fc 0C3093E5 		ldr	r3, [r3, #12]
 2606 0200 033082E0 		add	r3, r2, r3
 2607 0204 14300BE5 		str	r3, [fp, #-20]
1849:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1850:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 2608              		.loc 1 1850 5 is_stmt 1
 2609 0208 14301BE5 		ldr	r3, [fp, #-20]
 2610 020c 0128A0E3 		mov	r2, #65536
 2611 0210 0010A0E3 		mov	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 80


 2612 0214 0300A0E1 		mov	r0, r3
 2613 0218 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 2614 021c 0030A0E1 		mov	r3, r0
 2615              		.loc 1 1850 5 is_stmt 0 discriminator 1
 2616 0220 000053E3 		cmp	r3, #0
 2617 0224 0100001A 		bne	.L160
 2618 0228 0430E0E3 		mvn	r3, #4
 2619              		.loc 1 1850 5
 2620 022c 340000EA 		b	.L148
 2621              	.L160:
 2622              		.loc 1 1850 5 discriminator 2
 2623 0230 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 2624 0234 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 2625 0238 002093E5 		ldr	r2, [r3]
 2626 023c 14301BE5 		ldr	r3, [fp, #-20]
 2627 0240 102083E5 		str	r2, [r3, #16]
1851:../../Source/Kernel/rme_kernel.c **** 
1852:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1853:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2628              		.loc 1 1853 8 is_stmt 1
 2629 0244 04309BE5 		ldr	r3, [fp, #4]
 2630 0248 8332A0E1 		lsl	r3, r3, #5
 2631 024c 0310A0E1 		mov	r1, r3
 2632 0250 24001BE5 		ldr	r0, [fp, #-36]
 2633 0254 FEFFFFEB 		bl	_RME_Kot_Mark
 2634 0258 0030A0E1 		mov	r3, r0
 2635              		.loc 1 1853 7 discriminator 1
 2636 025c 000053E3 		cmp	r3, #0
 2637 0260 0500000A 		beq	.L161
1854:../../Source/Kernel/rme_kernel.c ****     {
1855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1856:../../Source/Kernel/rme_kernel.c ****         
1857:../../Source/Kernel/rme_kernel.c ****         /* Abort the creation process */
1858:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 2638              		.loc 1 1858 9
 2639 0264 14301BE5 		ldr	r3, [fp, #-20]
 2640 0268 0010A0E3 		mov	r1, #0
 2641 026c 0300A0E1 		mov	r0, r3
 2642 0270 FEFFFFEB 		bl	__RME_A7A_Write_Release
1859:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2643              		.loc 1 1859 16
 2644 0274 0330E0E3 		mvn	r3, #3
 2645 0278 210000EA 		b	.L148
 2646              	.L161:
1860:../../Source/Kernel/rme_kernel.c ****     }
1861:../../Source/Kernel/rme_kernel.c ****     else
1862:../../Source/Kernel/rme_kernel.c ****     {
1863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1864:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1865:../../Source/Kernel/rme_kernel.c ****     }
1866:../../Source/Kernel/rme_kernel.c **** 
1867:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1868:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2647              		.loc 1 1868 14
 2648 027c 0030A0E3 		mov	r3, #0
 2649 0280 08300BE5 		str	r3, [fp, #-8]
 2650              		.loc 1 1868 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 81


 2651 0284 090000EA 		b	.L162
 2652              	.L163:
1869:../../Source/Kernel/rme_kernel.c ****     {
1870:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2653              		.loc 1 1870 9
 2654 0288 08301BE5 		ldr	r3, [fp, #-8]
 2655 028c 8322A0E1 		lsl	r2, r3, #5
 2656 0290 24301BE5 		ldr	r3, [fp, #-36]
 2657 0294 033082E0 		add	r3, r2, r3
 2658 0298 0320A0E1 		mov	r2, r3
 2659 029c 0030A0E3 		mov	r3, #0
 2660 02a0 003082E5 		str	r3, [r2]
1868:../../Source/Kernel/rme_kernel.c ****     {
 2661              		.loc 1 1868 39 discriminator 3
 2662 02a4 08301BE5 		ldr	r3, [fp, #-8]
 2663 02a8 013083E2 		add	r3, r3, #1
 2664 02ac 08300BE5 		str	r3, [fp, #-8]
 2665              	.L162:
1868:../../Source/Kernel/rme_kernel.c ****     {
 2666              		.loc 1 1868 23 discriminator 1
 2667 02b0 08201BE5 		ldr	r2, [fp, #-8]
 2668 02b4 04309BE5 		ldr	r3, [fp, #4]
 2669 02b8 030052E1 		cmp	r2, r3
 2670 02bc F1FFFF3A 		bcc	.L163
1871:../../Source/Kernel/rme_kernel.c ****     }
1872:../../Source/Kernel/rme_kernel.c **** 
1873:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1874:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 2671              		.loc 1 1874 27
 2672 02c0 14301BE5 		ldr	r3, [fp, #-20]
 2673 02c4 0020A0E3 		mov	r2, #0
 2674 02c8 042083E5 		str	r2, [r3, #4]
1875:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 2675              		.loc 1 1875 25
 2676 02cc 14301BE5 		ldr	r3, [fp, #-20]
 2677 02d0 24201BE5 		ldr	r2, [fp, #-36]
 2678 02d4 0C2083E5 		str	r2, [r3, #12]
1876:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 2679              		.loc 1 1876 23
 2680 02d8 14301BE5 		ldr	r3, [fp, #-20]
 2681 02dc FF20A0E3 		mov	r2, #255
 2682 02e0 082083E5 		str	r2, [r3, #8]
1877:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1878:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 2683              		.loc 1 1878 23
 2684 02e4 14301BE5 		ldr	r3, [fp, #-20]
 2685 02e8 04209BE5 		ldr	r2, [fp, #4]
 2686 02ec 142083E5 		str	r2, [r3, #20]
1879:../../Source/Kernel/rme_kernel.c **** 
1880:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1881:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 2687              		.loc 1 1881 5
 2688 02f0 14301BE5 		ldr	r3, [fp, #-20]
 2689 02f4 0314A0E3 		mov	r1, #50331648
 2690 02f8 0300A0E1 		mov	r0, r3
 2691 02fc FEFFFFEB 		bl	__RME_A7A_Write_Release
1882:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 82


1883:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1884:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1885:../../Source/Kernel/rme_kernel.c **** 
1886:../../Source/Kernel/rme_kernel.c ****     return 0;
 2692              		.loc 1 1886 12
 2693 0300 0030A0E3 		mov	r3, #0
 2694              	.L148:
1887:../../Source/Kernel/rme_kernel.c **** }
 2695              		.loc 1 1887 1
 2696 0304 0300A0E1 		mov	r0, r3
 2697 0308 04D04BE2 		sub	sp, fp, #4
 2698              		.cfi_def_cfa 13, 8
 2699              		@ sp needed
 2700 030c 0088BDE8 		pop	{fp, pc}
 2701              		.cfi_endproc
 2702              	.LFE23:
 2704              		.section	.text._RME_Cpt_Crt,"ax",%progbits
 2705              		.align	2
 2706              		.syntax unified
 2707              		.arm
 2709              	_RME_Cpt_Crt:
 2710              	.LFB24:
1888:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Crt ********************************************/
1889:../../Source/Kernel/rme_kernel.c **** 
1890:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Crt ******************************************************
1891:../../Source/Kernel/rme_kernel.c **** Description : Create a capability table.
1892:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1893:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1894:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1895:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1896:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
1897:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
1898:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1899:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1900:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1901:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the 
1902:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1903:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of entries in that capability
1904:../../Source/Kernel/rme_kernel.c ****                                     table.
1905:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1906:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1907:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Crt(struct RME_Cap_Cpt* Cpt,
1908:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
1909:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
1910:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Crt,
1911:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
1912:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry_Num)
1913:../../Source/Kernel/rme_kernel.c **** {
 2711              		.loc 1 1913 1
 2712              		.cfi_startproc
 2713              		@ args = 8, pretend = 0, frame = 40
 2714              		@ frame_needed = 1, uses_anonymous_args = 0
 2715 0000 00482DE9 		push	{fp, lr}
 2716              		.cfi_def_cfa_offset 8
 2717              		.cfi_offset 11, -8
 2718              		.cfi_offset 14, -4
 2719 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 83


 2720              		.cfi_def_cfa 11, 4
 2721 0008 28D04DE2 		sub	sp, sp, #40
 2722 000c 20000BE5 		str	r0, [fp, #-32]
 2723 0010 24100BE5 		str	r1, [fp, #-36]
 2724 0014 28200BE5 		str	r2, [fp, #-40]
 2725 0018 2C300BE5 		str	r3, [fp, #-44]
1914:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1915:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1916:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
1917:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1918:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1919:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
1920:../../Source/Kernel/rme_kernel.c **** 
1921:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1922:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2726              		.loc 1 1922 7
 2727 001c 08309BE5 		ldr	r3, [fp, #8]
 2728 0020 000053E3 		cmp	r3, #0
 2729 0024 0200000A 		beq	.L165
 2730              		.loc 1 1922 23 discriminator 1
 2731 0028 08309BE5 		ldr	r3, [fp, #8]
 2732 002c 800053E3 		cmp	r3, #128
 2733 0030 0100009A 		bls	.L166
 2734              	.L165:
1923:../../Source/Kernel/rme_kernel.c ****     {
1924:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1925:../../Source/Kernel/rme_kernel.c ****         
1926:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2735              		.loc 1 1926 16
 2736 0034 0230E0E3 		mvn	r3, #2
 2737 0038 3D0100EA 		b	.L167
 2738              	.L166:
1927:../../Source/Kernel/rme_kernel.c ****     }
1928:../../Source/Kernel/rme_kernel.c ****     else
1929:../../Source/Kernel/rme_kernel.c ****     {
1930:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1931:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1932:../../Source/Kernel/rme_kernel.c ****     }
1933:../../Source/Kernel/rme_kernel.c **** 
1934:../../Source/Kernel/rme_kernel.c ****     /* Are we overrunning the size limit? */
1935:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
1936:../../Source/Kernel/rme_kernel.c ****     if(Entry_Num>RME_CPT_ENTRY_MAX)
1937:../../Source/Kernel/rme_kernel.c ****     {
1938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1939:../../Source/Kernel/rme_kernel.c ****         
1940:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
1941:../../Source/Kernel/rme_kernel.c ****     }
1942:../../Source/Kernel/rme_kernel.c ****     else
1943:../../Source/Kernel/rme_kernel.c ****     {
1944:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1945:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1946:../../Source/Kernel/rme_kernel.c ****     }
1947:../../Source/Kernel/rme_kernel.c **** #endif
1948:../../Source/Kernel/rme_kernel.c **** 
1949:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1950:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 2739              		.loc 1 1950 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 84


 2740 003c 24301BE5 		ldr	r3, [fp, #-36]
 2741 0040 803003E2 		and	r3, r3, #128
 2742 0044 000053E3 		cmp	r3, #0
 2743 0048 1C00001A 		bne	.L168
 2744              		.loc 1 1950 5 is_stmt 0 discriminator 1
 2745 004c 20301BE5 		ldr	r3, [fp, #-32]
 2746 0050 142093E5 		ldr	r2, [r3, #20]
 2747 0054 24301BE5 		ldr	r3, [fp, #-36]
 2748 0058 030052E1 		cmp	r2, r3
 2749 005c 0100008A 		bhi	.L169
 2750              		.loc 1 1950 5 discriminator 3
 2751 0060 0230E0E3 		mvn	r3, #2
 2752              		.loc 1 1950 5
 2753 0064 320100EA 		b	.L167
 2754              	.L169:
 2755              		.loc 1 1950 5 discriminator 4
 2756 0068 24301BE5 		ldr	r3, [fp, #-36]
 2757 006c 8322A0E1 		lsl	r2, r3, #5
 2758 0070 20301BE5 		ldr	r3, [fp, #-32]
 2759 0074 0C3093E5 		ldr	r3, [r3, #12]
 2760 0078 033082E0 		add	r3, r2, r3
 2761 007c 0C300BE5 		str	r3, [fp, #-12]
 2762 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2763 0084 0300A0E1 		mov	r0, r3
 2764 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2765 008c 14000BE5 		str	r0, [fp, #-20]
 2766              		.loc 1 1950 5 discriminator 1
 2767 0090 14301BE5 		ldr	r3, [fp, #-20]
 2768 0094 FF3803E2 		and	r3, r3, #16711680
 2769 0098 020853E3 		cmp	r3, #131072
 2770 009c 0100001A 		bne	.L170
 2771              		.loc 1 1950 5 discriminator 5
 2772 00a0 0830E0E3 		mvn	r3, #8
 2773              		.loc 1 1950 5
 2774 00a4 220100EA 		b	.L167
 2775              	.L170:
 2776              		.loc 1 1950 5 discriminator 6
 2777 00a8 14301BE5 		ldr	r3, [fp, #-20]
 2778 00ac 233CA0E1 		lsr	r3, r3, #24
 2779 00b0 030053E3 		cmp	r3, #3
 2780 00b4 3F00000A 		beq	.L171
 2781              		.loc 1 1950 5 discriminator 7
 2782 00b8 0130E0E3 		mvn	r3, #1
 2783              		.loc 1 1950 5
 2784 00bc 1C0100EA 		b	.L167
 2785              	.L168:
 2786              		.loc 1 1950 5 discriminator 2
 2787 00c0 24301BE5 		ldr	r3, [fp, #-36]
 2788 00c4 2324A0E1 		lsr	r2, r3, #8
 2789 00c8 20301BE5 		ldr	r3, [fp, #-32]
 2790 00cc 143093E5 		ldr	r3, [r3, #20]
 2791 00d0 030052E1 		cmp	r2, r3
 2792 00d4 0100003A 		bcc	.L172
 2793              		.loc 1 1950 5 discriminator 8
 2794 00d8 0230E0E3 		mvn	r3, #2
 2795              		.loc 1 1950 5
 2796 00dc 140100EA 		b	.L167
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 85


 2797              	.L172:
 2798              		.loc 1 1950 5 discriminator 9
 2799 00e0 24301BE5 		ldr	r3, [fp, #-36]
 2800 00e4 2334A0E1 		lsr	r3, r3, #8
 2801 00e8 8322A0E1 		lsl	r2, r3, #5
 2802 00ec 20301BE5 		ldr	r3, [fp, #-32]
 2803 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2804 00f4 033082E0 		add	r3, r2, r3
 2805 00f8 0C300BE5 		str	r3, [fp, #-12]
 2806 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2807 0100 0300A0E1 		mov	r0, r3
 2808 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2809 0108 14000BE5 		str	r0, [fp, #-20]
 2810              		.loc 1 1950 5 discriminator 1
 2811 010c 14301BE5 		ldr	r3, [fp, #-20]
 2812 0110 FF3803E2 		and	r3, r3, #16711680
 2813 0114 020853E3 		cmp	r3, #131072
 2814 0118 0100001A 		bne	.L173
 2815              		.loc 1 1950 5 discriminator 10
 2816 011c 0830E0E3 		mvn	r3, #8
 2817              		.loc 1 1950 5
 2818 0120 030100EA 		b	.L167
 2819              	.L173:
 2820              		.loc 1 1950 5 discriminator 11
 2821 0124 14301BE5 		ldr	r3, [fp, #-20]
 2822 0128 233CA0E1 		lsr	r3, r3, #24
 2823 012c 030053E3 		cmp	r3, #3
 2824 0130 0100000A 		beq	.L174
 2825              		.loc 1 1950 5 discriminator 12
 2826 0134 0130E0E3 		mvn	r3, #1
 2827              		.loc 1 1950 5
 2828 0138 FD0000EA 		b	.L167
 2829              	.L174:
 2830              		.loc 1 1950 5 discriminator 13
 2831 013c 24301BE5 		ldr	r3, [fp, #-36]
 2832 0140 7F2003E2 		and	r2, r3, #127
 2833 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2834 0148 143093E5 		ldr	r3, [r3, #20]
 2835 014c 030052E1 		cmp	r2, r3
 2836 0150 0100003A 		bcc	.L175
 2837              		.loc 1 1950 5 discriminator 14
 2838 0154 0230E0E3 		mvn	r3, #2
 2839              		.loc 1 1950 5
 2840 0158 F50000EA 		b	.L167
 2841              	.L175:
 2842              		.loc 1 1950 5 discriminator 15
 2843 015c 24301BE5 		ldr	r3, [fp, #-36]
 2844 0160 7F3003E2 		and	r3, r3, #127
 2845 0164 8322A0E1 		lsl	r2, r3, #5
 2846 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2847 016c 0C3093E5 		ldr	r3, [r3, #12]
 2848 0170 033082E0 		add	r3, r2, r3
 2849 0174 0C300BE5 		str	r3, [fp, #-12]
 2850 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2851 017c 0300A0E1 		mov	r0, r3
 2852 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2853 0184 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 86


 2854              		.loc 1 1950 5 discriminator 1
 2855 0188 14301BE5 		ldr	r3, [fp, #-20]
 2856 018c FF3803E2 		and	r3, r3, #16711680
 2857 0190 020853E3 		cmp	r3, #131072
 2858 0194 0100001A 		bne	.L176
 2859              		.loc 1 1950 5 discriminator 16
 2860 0198 0830E0E3 		mvn	r3, #8
 2861              		.loc 1 1950 5
 2862 019c E40000EA 		b	.L167
 2863              	.L176:
 2864              		.loc 1 1950 5 discriminator 17
 2865 01a0 14301BE5 		ldr	r3, [fp, #-20]
 2866 01a4 233CA0E1 		lsr	r3, r3, #24
 2867 01a8 030053E3 		cmp	r3, #3
 2868 01ac 0100000A 		beq	.L171
 2869              		.loc 1 1950 5 discriminator 18
 2870 01b0 0130E0E3 		mvn	r3, #1
 2871              		.loc 1 1950 5
 2872 01b4 DE0000EA 		b	.L167
 2873              	.L171:
1951:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
1952:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 2874              		.loc 1 1952 5 is_stmt 1
 2875 01b8 28301BE5 		ldr	r3, [fp, #-40]
 2876 01bc 803003E2 		and	r3, r3, #128
 2877 01c0 000053E3 		cmp	r3, #0
 2878 01c4 1C00001A 		bne	.L177
 2879              		.loc 1 1952 5 is_stmt 0 discriminator 1
 2880 01c8 20301BE5 		ldr	r3, [fp, #-32]
 2881 01cc 142093E5 		ldr	r2, [r3, #20]
 2882 01d0 28301BE5 		ldr	r3, [fp, #-40]
 2883 01d4 030052E1 		cmp	r2, r3
 2884 01d8 0100008A 		bhi	.L178
 2885              		.loc 1 1952 5 discriminator 3
 2886 01dc 0230E0E3 		mvn	r3, #2
 2887              		.loc 1 1952 5
 2888 01e0 D30000EA 		b	.L167
 2889              	.L178:
 2890              		.loc 1 1952 5 discriminator 4
 2891 01e4 28301BE5 		ldr	r3, [fp, #-40]
 2892 01e8 8322A0E1 		lsl	r2, r3, #5
 2893 01ec 20301BE5 		ldr	r3, [fp, #-32]
 2894 01f0 0C3093E5 		ldr	r3, [r3, #12]
 2895 01f4 033082E0 		add	r3, r2, r3
 2896 01f8 10300BE5 		str	r3, [fp, #-16]
 2897 01fc 10301BE5 		ldr	r3, [fp, #-16]
 2898 0200 0300A0E1 		mov	r0, r3
 2899 0204 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2900 0208 14000BE5 		str	r0, [fp, #-20]
 2901              		.loc 1 1952 5 discriminator 1
 2902 020c 14301BE5 		ldr	r3, [fp, #-20]
 2903 0210 FF3803E2 		and	r3, r3, #16711680
 2904 0214 020853E3 		cmp	r3, #131072
 2905 0218 0100001A 		bne	.L179
 2906              		.loc 1 1952 5 discriminator 5
 2907 021c 0830E0E3 		mvn	r3, #8
 2908              		.loc 1 1952 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 87


 2909 0220 C30000EA 		b	.L167
 2910              	.L179:
 2911              		.loc 1 1952 5 discriminator 6
 2912 0224 14301BE5 		ldr	r3, [fp, #-20]
 2913 0228 233CA0E1 		lsr	r3, r3, #24
 2914 022c 020053E3 		cmp	r3, #2
 2915 0230 3F00000A 		beq	.L180
 2916              		.loc 1 1952 5 discriminator 7
 2917 0234 0130E0E3 		mvn	r3, #1
 2918              		.loc 1 1952 5
 2919 0238 BD0000EA 		b	.L167
 2920              	.L177:
 2921              		.loc 1 1952 5 discriminator 2
 2922 023c 28301BE5 		ldr	r3, [fp, #-40]
 2923 0240 2324A0E1 		lsr	r2, r3, #8
 2924 0244 20301BE5 		ldr	r3, [fp, #-32]
 2925 0248 143093E5 		ldr	r3, [r3, #20]
 2926 024c 030052E1 		cmp	r2, r3
 2927 0250 0100003A 		bcc	.L181
 2928              		.loc 1 1952 5 discriminator 8
 2929 0254 0230E0E3 		mvn	r3, #2
 2930              		.loc 1 1952 5
 2931 0258 B50000EA 		b	.L167
 2932              	.L181:
 2933              		.loc 1 1952 5 discriminator 9
 2934 025c 28301BE5 		ldr	r3, [fp, #-40]
 2935 0260 2334A0E1 		lsr	r3, r3, #8
 2936 0264 8322A0E1 		lsl	r2, r3, #5
 2937 0268 20301BE5 		ldr	r3, [fp, #-32]
 2938 026c 0C3093E5 		ldr	r3, [r3, #12]
 2939 0270 033082E0 		add	r3, r2, r3
 2940 0274 10300BE5 		str	r3, [fp, #-16]
 2941 0278 10301BE5 		ldr	r3, [fp, #-16]
 2942 027c 0300A0E1 		mov	r0, r3
 2943 0280 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2944 0284 14000BE5 		str	r0, [fp, #-20]
 2945              		.loc 1 1952 5 discriminator 1
 2946 0288 14301BE5 		ldr	r3, [fp, #-20]
 2947 028c FF3803E2 		and	r3, r3, #16711680
 2948 0290 020853E3 		cmp	r3, #131072
 2949 0294 0100001A 		bne	.L182
 2950              		.loc 1 1952 5 discriminator 10
 2951 0298 0830E0E3 		mvn	r3, #8
 2952              		.loc 1 1952 5
 2953 029c A40000EA 		b	.L167
 2954              	.L182:
 2955              		.loc 1 1952 5 discriminator 11
 2956 02a0 14301BE5 		ldr	r3, [fp, #-20]
 2957 02a4 233CA0E1 		lsr	r3, r3, #24
 2958 02a8 030053E3 		cmp	r3, #3
 2959 02ac 0100000A 		beq	.L183
 2960              		.loc 1 1952 5 discriminator 12
 2961 02b0 0130E0E3 		mvn	r3, #1
 2962              		.loc 1 1952 5
 2963 02b4 9E0000EA 		b	.L167
 2964              	.L183:
 2965              		.loc 1 1952 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 88


 2966 02b8 28301BE5 		ldr	r3, [fp, #-40]
 2967 02bc 7F2003E2 		and	r2, r3, #127
 2968 02c0 10301BE5 		ldr	r3, [fp, #-16]
 2969 02c4 143093E5 		ldr	r3, [r3, #20]
 2970 02c8 030052E1 		cmp	r2, r3
 2971 02cc 0100003A 		bcc	.L184
 2972              		.loc 1 1952 5 discriminator 14
 2973 02d0 0230E0E3 		mvn	r3, #2
 2974              		.loc 1 1952 5
 2975 02d4 960000EA 		b	.L167
 2976              	.L184:
 2977              		.loc 1 1952 5 discriminator 15
 2978 02d8 28301BE5 		ldr	r3, [fp, #-40]
 2979 02dc 7F3003E2 		and	r3, r3, #127
 2980 02e0 8322A0E1 		lsl	r2, r3, #5
 2981 02e4 10301BE5 		ldr	r3, [fp, #-16]
 2982 02e8 0C3093E5 		ldr	r3, [r3, #12]
 2983 02ec 033082E0 		add	r3, r2, r3
 2984 02f0 10300BE5 		str	r3, [fp, #-16]
 2985 02f4 10301BE5 		ldr	r3, [fp, #-16]
 2986 02f8 0300A0E1 		mov	r0, r3
 2987 02fc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2988 0300 14000BE5 		str	r0, [fp, #-20]
 2989              		.loc 1 1952 5 discriminator 1
 2990 0304 14301BE5 		ldr	r3, [fp, #-20]
 2991 0308 FF3803E2 		and	r3, r3, #16711680
 2992 030c 020853E3 		cmp	r3, #131072
 2993 0310 0100001A 		bne	.L185
 2994              		.loc 1 1952 5 discriminator 16
 2995 0314 0830E0E3 		mvn	r3, #8
 2996              		.loc 1 1952 5
 2997 0318 850000EA 		b	.L167
 2998              	.L185:
 2999              		.loc 1 1952 5 discriminator 17
 3000 031c 14301BE5 		ldr	r3, [fp, #-20]
 3001 0320 233CA0E1 		lsr	r3, r3, #24
 3002 0324 020053E3 		cmp	r3, #2
 3003 0328 0100000A 		beq	.L180
 3004              		.loc 1 1952 5 discriminator 18
 3005 032c 0130E0E3 		mvn	r3, #1
 3006              		.loc 1 1952 5
 3007 0330 7F0000EA 		b	.L167
 3008              	.L180:
1953:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
1954:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1955:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 3009              		.loc 1 1955 5 is_stmt 1
 3010 0334 0C301BE5 		ldr	r3, [fp, #-12]
 3011 0338 083093E5 		ldr	r3, [r3, #8]
 3012 033c 013003E2 		and	r3, r3, #1
 3013 0340 000053E3 		cmp	r3, #0
 3014 0344 0100001A 		bne	.L186
 3015              		.loc 1 1955 5 is_stmt 0 discriminator 1
 3016 0348 0630E0E3 		mvn	r3, #6
 3017              		.loc 1 1955 5
 3018 034c 780000EA 		b	.L167
 3019              	.L186:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 89


1956:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
1957:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_CPT,Raddr,Vaddr,RME_CPT_SIZE(Entry_Num));
 3020              		.loc 1 1957 5 is_stmt 1
 3021 0350 10301BE5 		ldr	r3, [fp, #-16]
 3022 0354 083093E5 		ldr	r3, [r3, #8]
 3023 0358 013003E2 		and	r3, r3, #1
 3024 035c 000053E3 		cmp	r3, #0
 3025 0360 0100001A 		bne	.L187
 3026              		.loc 1 1957 5 is_stmt 0 discriminator 1
 3027 0364 0630E0E3 		mvn	r3, #6
 3028              		.loc 1 1957 5
 3029 0368 710000EA 		b	.L167
 3030              	.L187:
 3031              		.loc 1 1957 5 discriminator 2
 3032 036c 10301BE5 		ldr	r3, [fp, #-16]
 3033 0370 143093E5 		ldr	r3, [r3, #20]
 3034 0374 04209BE5 		ldr	r2, [fp, #4]
 3035 0378 033082E0 		add	r3, r2, r3
 3036 037c 18300BE5 		str	r3, [fp, #-24]
 3037 0380 18201BE5 		ldr	r2, [fp, #-24]
 3038 0384 04309BE5 		ldr	r3, [fp, #4]
 3039 0388 030052E1 		cmp	r2, r3
 3040 038c 0100002A 		bcs	.L188
 3041              		.loc 1 1957 5 discriminator 3
 3042 0390 0630E0E3 		mvn	r3, #6
 3043              		.loc 1 1957 5
 3044 0394 660000EA 		b	.L167
 3045              	.L188:
 3046              		.loc 1 1957 5 discriminator 4
 3047 0398 10301BE5 		ldr	r3, [fp, #-16]
 3048 039c 143093E5 		ldr	r3, [r3, #20]
 3049 03a0 18201BE5 		ldr	r2, [fp, #-24]
 3050 03a4 030052E1 		cmp	r2, r3
 3051 03a8 0100002A 		bcs	.L189
 3052              		.loc 1 1957 5 discriminator 5
 3053 03ac 0630E0E3 		mvn	r3, #6
 3054              		.loc 1 1957 5
 3055 03b0 5F0000EA 		b	.L167
 3056              	.L189:
 3057              		.loc 1 1957 5 discriminator 6
 3058 03b4 08309BE5 		ldr	r3, [fp, #8]
 3059 03b8 8322A0E1 		lsl	r2, r3, #5
 3060 03bc 18301BE5 		ldr	r3, [fp, #-24]
 3061 03c0 033082E0 		add	r3, r2, r3
 3062 03c4 18201BE5 		ldr	r2, [fp, #-24]
 3063 03c8 030052E1 		cmp	r2, r3
 3064 03cc 0100009A 		bls	.L190
 3065              		.loc 1 1957 5 discriminator 7
 3066 03d0 0630E0E3 		mvn	r3, #6
 3067              		.loc 1 1957 5
 3068 03d4 560000EA 		b	.L167
 3069              	.L190:
 3070              		.loc 1 1957 5 discriminator 8
 3071 03d8 10301BE5 		ldr	r3, [fp, #-16]
 3072 03dc 182093E5 		ldr	r2, [r3, #24]
 3073 03e0 08309BE5 		ldr	r3, [fp, #8]
 3074 03e4 8312A0E1 		lsl	r1, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 90


 3075 03e8 18301BE5 		ldr	r3, [fp, #-24]
 3076 03ec 033081E0 		add	r3, r1, r3
 3077 03f0 013043E2 		sub	r3, r3, #1
 3078 03f4 030052E1 		cmp	r2, r3
 3079 03f8 0100002A 		bcs	.L191
 3080              		.loc 1 1957 5 discriminator 9
 3081 03fc 0630E0E3 		mvn	r3, #6
 3082              		.loc 1 1957 5
 3083 0400 4B0000EA 		b	.L167
 3084              	.L191:
1958:../../Source/Kernel/rme_kernel.c **** 
1959:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1960:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 3085              		.loc 1 1960 5 is_stmt 1
 3086 0404 0C301BE5 		ldr	r3, [fp, #-12]
 3087 0408 142093E5 		ldr	r2, [r3, #20]
 3088 040c 2C301BE5 		ldr	r3, [fp, #-44]
 3089 0410 030052E1 		cmp	r2, r3
 3090 0414 0100008A 		bhi	.L192
 3091              		.loc 1 1960 5 is_stmt 0 discriminator 1
 3092 0418 0230E0E3 		mvn	r3, #2
 3093              		.loc 1 1960 5
 3094 041c 440000EA 		b	.L167
 3095              	.L192:
 3096              		.loc 1 1960 5 discriminator 2
 3097 0420 2C301BE5 		ldr	r3, [fp, #-44]
 3098 0424 8322A0E1 		lsl	r2, r3, #5
 3099 0428 0C301BE5 		ldr	r3, [fp, #-12]
 3100 042c 0C3093E5 		ldr	r3, [r3, #12]
 3101 0430 033082E0 		add	r3, r2, r3
 3102 0434 1C300BE5 		str	r3, [fp, #-28]
1961:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1962:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 3103              		.loc 1 1962 5 is_stmt 1
 3104 0438 1C301BE5 		ldr	r3, [fp, #-28]
 3105 043c 0128A0E3 		mov	r2, #65536
 3106 0440 0010A0E3 		mov	r1, #0
 3107 0444 0300A0E1 		mov	r0, r3
 3108 0448 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3109 044c 0030A0E1 		mov	r3, r0
 3110              		.loc 1 1962 5 is_stmt 0 discriminator 1
 3111 0450 000053E3 		cmp	r3, #0
 3112 0454 0100001A 		bne	.L193
 3113 0458 0430E0E3 		mvn	r3, #4
 3114              		.loc 1 1962 5
 3115 045c 340000EA 		b	.L167
 3116              	.L193:
 3117              		.loc 1 1962 5 discriminator 2
 3118 0460 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3119 0464 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3120 0468 002093E5 		ldr	r2, [r3]
 3121 046c 1C301BE5 		ldr	r3, [fp, #-28]
 3122 0470 102083E5 		str	r2, [r3, #16]
1963:../../Source/Kernel/rme_kernel.c **** 
1964:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1965:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))<0)
 3123              		.loc 1 1965 8 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 91


 3124 0474 08309BE5 		ldr	r3, [fp, #8]
 3125 0478 8332A0E1 		lsl	r3, r3, #5
 3126 047c 0310A0E1 		mov	r1, r3
 3127 0480 18001BE5 		ldr	r0, [fp, #-24]
 3128 0484 FEFFFFEB 		bl	_RME_Kot_Mark
 3129 0488 0030A0E1 		mov	r3, r0
 3130              		.loc 1 1965 7 discriminator 1
 3131 048c 000053E3 		cmp	r3, #0
 3132 0490 050000AA 		bge	.L194
1966:../../Source/Kernel/rme_kernel.c ****     {
1967:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1968:../../Source/Kernel/rme_kernel.c ****         
1969:../../Source/Kernel/rme_kernel.c ****         /* Failure. Set the Type_Stat back to 0 and abort the creation process */
1970:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 3133              		.loc 1 1970 9
 3134 0494 1C301BE5 		ldr	r3, [fp, #-28]
 3135 0498 0010A0E3 		mov	r1, #0
 3136 049c 0300A0E1 		mov	r0, r3
 3137 04a0 FEFFFFEB 		bl	__RME_A7A_Write_Release
1971:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 3138              		.loc 1 1971 16
 3139 04a4 0330E0E3 		mvn	r3, #3
 3140 04a8 210000EA 		b	.L167
 3141              	.L194:
1972:../../Source/Kernel/rme_kernel.c ****     }
1973:../../Source/Kernel/rme_kernel.c ****     else
1974:../../Source/Kernel/rme_kernel.c ****     {
1975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1976:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1977:../../Source/Kernel/rme_kernel.c ****     }
1978:../../Source/Kernel/rme_kernel.c **** 
1979:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1980:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3142              		.loc 1 1980 14
 3143 04ac 0030A0E3 		mov	r3, #0
 3144 04b0 08300BE5 		str	r3, [fp, #-8]
 3145              		.loc 1 1980 5
 3146 04b4 090000EA 		b	.L195
 3147              	.L196:
1981:../../Source/Kernel/rme_kernel.c ****     {
1982:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 3148              		.loc 1 1982 9
 3149 04b8 08301BE5 		ldr	r3, [fp, #-8]
 3150 04bc 8322A0E1 		lsl	r2, r3, #5
 3151 04c0 18301BE5 		ldr	r3, [fp, #-24]
 3152 04c4 033082E0 		add	r3, r2, r3
 3153 04c8 0320A0E1 		mov	r2, r3
 3154 04cc 0030A0E3 		mov	r3, #0
 3155 04d0 003082E5 		str	r3, [r2]
1980:../../Source/Kernel/rme_kernel.c ****     {
 3156              		.loc 1 1980 39 discriminator 3
 3157 04d4 08301BE5 		ldr	r3, [fp, #-8]
 3158 04d8 013083E2 		add	r3, r3, #1
 3159 04dc 08300BE5 		str	r3, [fp, #-8]
 3160              	.L195:
1980:../../Source/Kernel/rme_kernel.c ****     {
 3161              		.loc 1 1980 23 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 92


 3162 04e0 08201BE5 		ldr	r2, [fp, #-8]
 3163 04e4 08309BE5 		ldr	r3, [fp, #8]
 3164 04e8 030052E1 		cmp	r2, r3
 3165 04ec F1FFFF3A 		bcc	.L196
1983:../../Source/Kernel/rme_kernel.c ****     }
1984:../../Source/Kernel/rme_kernel.c **** 
1985:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1986:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 3166              		.loc 1 1986 27
 3167 04f0 1C301BE5 		ldr	r3, [fp, #-28]
 3168 04f4 0020A0E3 		mov	r2, #0
 3169 04f8 042083E5 		str	r2, [r3, #4]
1987:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 3170              		.loc 1 1987 25
 3171 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 3172 0500 18201BE5 		ldr	r2, [fp, #-24]
 3173 0504 0C2083E5 		str	r2, [r3, #12]
1988:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 3174              		.loc 1 1988 23
 3175 0508 1C301BE5 		ldr	r3, [fp, #-28]
 3176 050c FF20A0E3 		mov	r2, #255
 3177 0510 082083E5 		str	r2, [r3, #8]
1989:../../Source/Kernel/rme_kernel.c ****     
1990:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1991:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 3178              		.loc 1 1991 23
 3179 0514 1C301BE5 		ldr	r3, [fp, #-28]
 3180 0518 08209BE5 		ldr	r2, [fp, #8]
 3181 051c 142083E5 		str	r2, [r3, #20]
1992:../../Source/Kernel/rme_kernel.c **** 
1993:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1994:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 3182              		.loc 1 1994 5
 3183 0520 1C301BE5 		ldr	r3, [fp, #-28]
 3184 0524 0314A0E3 		mov	r1, #50331648
 3185 0528 0300A0E1 		mov	r0, r3
 3186 052c FEFFFFEB 		bl	__RME_A7A_Write_Release
1995:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1996:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1997:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1998:../../Source/Kernel/rme_kernel.c **** 
1999:../../Source/Kernel/rme_kernel.c ****     return 0;
 3187              		.loc 1 1999 12
 3188 0530 0030A0E3 		mov	r3, #0
 3189              	.L167:
2000:../../Source/Kernel/rme_kernel.c **** }
 3190              		.loc 1 2000 1
 3191 0534 0300A0E1 		mov	r0, r3
 3192 0538 04D04BE2 		sub	sp, fp, #4
 3193              		.cfi_def_cfa 13, 8
 3194              		@ sp needed
 3195 053c 0088BDE8 		pop	{fp, pc}
 3196              		.cfi_endproc
 3197              	.LFE24:
 3199              		.section	.rodata
 3200              		.align	2
 3201              	.LC6:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 93


 3202 003c 32333A35 		.ascii	"23:58:24\000"
 3202      383A3234 
 3202      00
 3203 0045 000000   		.align	2
 3204              	.LC7:
 3205 0048 4D617220 		.ascii	"Mar  6 2025\000"
 3205      20362032 
 3205      30323500 
 3206              		.align	2
 3207              	.LC8:
 3208 0054 2E2E2F2E 		.ascii	"../../Source/Kernel/rme_kernel.c\000"
 3208      2E2F536F 
 3208      75726365 
 3208      2F4B6572 
 3208      6E656C2F 
 3209              		.section	.text._RME_Cpt_Del,"ax",%progbits
 3210              		.align	2
 3211              		.syntax unified
 3212              		.arm
 3214              	_RME_Cpt_Del:
 3215              	.LFB25:
2001:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Crt *************************************************/
2002:../../Source/Kernel/rme_kernel.c **** 
2003:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Del ******************************************************
2004:../../Source/Kernel/rme_kernel.c **** Description : Delete a layer of capability table.
2005:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2006:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Del - The capability table that contains the
2007:../../Source/Kernel/rme_kernel.c ****                                       cap to captbl.
2008:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2009:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Del - The capability to the capability table to be
2010:../../Source/Kernel/rme_kernel.c ****                                   deleted.
2011:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2012:../../Source/Kernel/rme_kernel.c **** Output      : None.
2013:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2014:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2015:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Del(struct RME_Cap_Cpt* Cpt,
2016:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Del,
2017:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Del)
2018:../../Source/Kernel/rme_kernel.c **** {
 3216              		.loc 1 2018 1
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 48
 3219              		@ frame_needed = 1, uses_anonymous_args = 0
 3220 0000 00482DE9 		push	{fp, lr}
 3221              		.cfi_def_cfa_offset 8
 3222              		.cfi_offset 11, -8
 3223              		.cfi_offset 14, -4
 3224 0004 04B08DE2 		add	fp, sp, #4
 3225              		.cfi_def_cfa 11, 4
 3226 0008 30D04DE2 		sub	sp, sp, #48
 3227 000c 28000BE5 		str	r0, [fp, #-40]
 3228 0010 2C100BE5 		str	r1, [fp, #-44]
 3229 0014 30200BE5 		str	r2, [fp, #-48]
2019:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
2020:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Entry_Num;
2021:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2022:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Del;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 94


2023:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Struct* Table;
2024:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2025:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
2026:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
2027:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
2028:../../Source/Kernel/rme_kernel.c ****     
2029:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2030:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Del,RME_CAP_TYPE_CPT,
 3230              		.loc 1 2030 5
 3231 0018 2C301BE5 		ldr	r3, [fp, #-44]
 3232 001c 803003E2 		and	r3, r3, #128
 3233 0020 000053E3 		cmp	r3, #0
 3234 0024 1C00001A 		bne	.L198
 3235              		.loc 1 2030 5 is_stmt 0 discriminator 1
 3236 0028 28301BE5 		ldr	r3, [fp, #-40]
 3237 002c 142093E5 		ldr	r2, [r3, #20]
 3238 0030 2C301BE5 		ldr	r3, [fp, #-44]
 3239 0034 030052E1 		cmp	r2, r3
 3240 0038 0100008A 		bhi	.L199
 3241              		.loc 1 2030 5 discriminator 3
 3242 003c 0230E0E3 		mvn	r3, #2
 3243              		.loc 1 2030 5
 3244 0040 E10000EA 		b	.L200
 3245              	.L199:
 3246              		.loc 1 2030 5 discriminator 4
 3247 0044 2C301BE5 		ldr	r3, [fp, #-44]
 3248 0048 8322A0E1 		lsl	r2, r3, #5
 3249 004c 28301BE5 		ldr	r3, [fp, #-40]
 3250 0050 0C3093E5 		ldr	r3, [r3, #12]
 3251 0054 033082E0 		add	r3, r2, r3
 3252 0058 0C300BE5 		str	r3, [fp, #-12]
 3253 005c 0C301BE5 		ldr	r3, [fp, #-12]
 3254 0060 0300A0E1 		mov	r0, r3
 3255 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3256 0068 10000BE5 		str	r0, [fp, #-16]
 3257              		.loc 1 2030 5 discriminator 1
 3258 006c 10301BE5 		ldr	r3, [fp, #-16]
 3259 0070 FF3803E2 		and	r3, r3, #16711680
 3260 0074 020853E3 		cmp	r3, #131072
 3261 0078 0100001A 		bne	.L201
 3262              		.loc 1 2030 5 discriminator 5
 3263 007c 0830E0E3 		mvn	r3, #8
 3264              		.loc 1 2030 5
 3265 0080 D10000EA 		b	.L200
 3266              	.L201:
 3267              		.loc 1 2030 5 discriminator 6
 3268 0084 10301BE5 		ldr	r3, [fp, #-16]
 3269 0088 233CA0E1 		lsr	r3, r3, #24
 3270 008c 030053E3 		cmp	r3, #3
 3271 0090 3F00000A 		beq	.L202
 3272              		.loc 1 2030 5 discriminator 7
 3273 0094 0130E0E3 		mvn	r3, #1
 3274              		.loc 1 2030 5
 3275 0098 CB0000EA 		b	.L200
 3276              	.L198:
 3277              		.loc 1 2030 5 discriminator 2
 3278 009c 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 95


 3279 00a0 2324A0E1 		lsr	r2, r3, #8
 3280 00a4 28301BE5 		ldr	r3, [fp, #-40]
 3281 00a8 143093E5 		ldr	r3, [r3, #20]
 3282 00ac 030052E1 		cmp	r2, r3
 3283 00b0 0100003A 		bcc	.L203
 3284              		.loc 1 2030 5 discriminator 8
 3285 00b4 0230E0E3 		mvn	r3, #2
 3286              		.loc 1 2030 5
 3287 00b8 C30000EA 		b	.L200
 3288              	.L203:
 3289              		.loc 1 2030 5 discriminator 9
 3290 00bc 2C301BE5 		ldr	r3, [fp, #-44]
 3291 00c0 2334A0E1 		lsr	r3, r3, #8
 3292 00c4 8322A0E1 		lsl	r2, r3, #5
 3293 00c8 28301BE5 		ldr	r3, [fp, #-40]
 3294 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3295 00d0 033082E0 		add	r3, r2, r3
 3296 00d4 0C300BE5 		str	r3, [fp, #-12]
 3297 00d8 0C301BE5 		ldr	r3, [fp, #-12]
 3298 00dc 0300A0E1 		mov	r0, r3
 3299 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3300 00e4 10000BE5 		str	r0, [fp, #-16]
 3301              		.loc 1 2030 5 discriminator 1
 3302 00e8 10301BE5 		ldr	r3, [fp, #-16]
 3303 00ec FF3803E2 		and	r3, r3, #16711680
 3304 00f0 020853E3 		cmp	r3, #131072
 3305 00f4 0100001A 		bne	.L204
 3306              		.loc 1 2030 5 discriminator 10
 3307 00f8 0830E0E3 		mvn	r3, #8
 3308              		.loc 1 2030 5
 3309 00fc B20000EA 		b	.L200
 3310              	.L204:
 3311              		.loc 1 2030 5 discriminator 11
 3312 0100 10301BE5 		ldr	r3, [fp, #-16]
 3313 0104 233CA0E1 		lsr	r3, r3, #24
 3314 0108 030053E3 		cmp	r3, #3
 3315 010c 0100000A 		beq	.L205
 3316              		.loc 1 2030 5 discriminator 12
 3317 0110 0130E0E3 		mvn	r3, #1
 3318              		.loc 1 2030 5
 3319 0114 AC0000EA 		b	.L200
 3320              	.L205:
 3321              		.loc 1 2030 5 discriminator 13
 3322 0118 2C301BE5 		ldr	r3, [fp, #-44]
 3323 011c 7F2003E2 		and	r2, r3, #127
 3324 0120 0C301BE5 		ldr	r3, [fp, #-12]
 3325 0124 143093E5 		ldr	r3, [r3, #20]
 3326 0128 030052E1 		cmp	r2, r3
 3327 012c 0100003A 		bcc	.L206
 3328              		.loc 1 2030 5 discriminator 14
 3329 0130 0230E0E3 		mvn	r3, #2
 3330              		.loc 1 2030 5
 3331 0134 A40000EA 		b	.L200
 3332              	.L206:
 3333              		.loc 1 2030 5 discriminator 15
 3334 0138 2C301BE5 		ldr	r3, [fp, #-44]
 3335 013c 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 96


 3336 0140 8322A0E1 		lsl	r2, r3, #5
 3337 0144 0C301BE5 		ldr	r3, [fp, #-12]
 3338 0148 0C3093E5 		ldr	r3, [r3, #12]
 3339 014c 033082E0 		add	r3, r2, r3
 3340 0150 0C300BE5 		str	r3, [fp, #-12]
 3341 0154 0C301BE5 		ldr	r3, [fp, #-12]
 3342 0158 0300A0E1 		mov	r0, r3
 3343 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3344 0160 10000BE5 		str	r0, [fp, #-16]
 3345              		.loc 1 2030 5 discriminator 1
 3346 0164 10301BE5 		ldr	r3, [fp, #-16]
 3347 0168 FF3803E2 		and	r3, r3, #16711680
 3348 016c 020853E3 		cmp	r3, #131072
 3349 0170 0100001A 		bne	.L207
 3350              		.loc 1 2030 5 discriminator 16
 3351 0174 0830E0E3 		mvn	r3, #8
 3352              		.loc 1 2030 5
 3353 0178 930000EA 		b	.L200
 3354              	.L207:
 3355              		.loc 1 2030 5 discriminator 17
 3356 017c 10301BE5 		ldr	r3, [fp, #-16]
 3357 0180 233CA0E1 		lsr	r3, r3, #24
 3358 0184 030053E3 		cmp	r3, #3
 3359 0188 0100000A 		beq	.L202
 3360              		.loc 1 2030 5 discriminator 18
 3361 018c 0130E0E3 		mvn	r3, #1
 3362              		.loc 1 2030 5
 3363 0190 8D0000EA 		b	.L200
 3364              	.L202:
2031:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2032:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2033:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 3365              		.loc 1 2033 5 is_stmt 1
 3366 0194 0C301BE5 		ldr	r3, [fp, #-12]
 3367 0198 083093E5 		ldr	r3, [r3, #8]
 3368 019c 023003E2 		and	r3, r3, #2
 3369 01a0 000053E3 		cmp	r3, #0
 3370 01a4 0100001A 		bne	.L208
 3371              		.loc 1 2033 5 is_stmt 0 discriminator 1
 3372 01a8 0630E0E3 		mvn	r3, #6
 3373              		.loc 1 2033 5
 3374 01ac 860000EA 		b	.L200
 3375              	.L208:
2034:../../Source/Kernel/rme_kernel.c ****     
2035:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2036:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Del,struct RME_Cap_Cpt*,Cpt_Del);
 3376              		.loc 1 2036 5 is_stmt 1
 3377 01b0 0C301BE5 		ldr	r3, [fp, #-12]
 3378 01b4 142093E5 		ldr	r2, [r3, #20]
 3379 01b8 30301BE5 		ldr	r3, [fp, #-48]
 3380 01bc 030052E1 		cmp	r2, r3
 3381 01c0 0100008A 		bhi	.L209
 3382              		.loc 1 2036 5 is_stmt 0 discriminator 1
 3383 01c4 0230E0E3 		mvn	r3, #2
 3384              		.loc 1 2036 5
 3385 01c8 7F0000EA 		b	.L200
 3386              	.L209:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 97


 3387              		.loc 1 2036 5 discriminator 2
 3388 01cc 30301BE5 		ldr	r3, [fp, #-48]
 3389 01d0 8322A0E1 		lsl	r2, r3, #5
 3390 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 3391 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3392 01dc 033082E0 		add	r3, r2, r3
 3393 01e0 14300BE5 		str	r3, [fp, #-20]
2037:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
2038:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Cpt_Del,Type_Stat,RME_CAP_TYPE_CPT);
 3394              		.loc 1 2038 5 is_stmt 1
 3395 01e4 14301BE5 		ldr	r3, [fp, #-20]
 3396 01e8 0300A0E1 		mov	r0, r3
 3397 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3398 01f0 10000BE5 		str	r0, [fp, #-16]
 3399              		.loc 1 2038 5 is_stmt 0 discriminator 1
 3400 01f4 10301BE5 		ldr	r3, [fp, #-16]
 3401 01f8 FF3803E2 		and	r3, r3, #16711680
 3402 01fc 020853E3 		cmp	r3, #131072
 3403 0200 0100000A 		beq	.L210
 3404 0204 0830E0E3 		mvn	r3, #8
 3405              		.loc 1 2038 5
 3406 0208 6F0000EA 		b	.L200
 3407              	.L210:
 3408              		.loc 1 2038 5 discriminator 2
 3409 020c 10301BE5 		ldr	r3, [fp, #-16]
 3410 0210 233CA0E1 		lsr	r3, r3, #24
 3411 0214 030053E3 		cmp	r3, #3
 3412 0218 0100000A 		beq	.L211
 3413              		.loc 1 2038 5 discriminator 3
 3414 021c 0130E0E3 		mvn	r3, #1
 3415              		.loc 1 2038 5
 3416 0220 690000EA 		b	.L200
 3417              	.L211:
 3418              		.loc 1 2038 5 discriminator 4
 3419 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3420 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3421 022c 002093E5 		ldr	r2, [r3]
 3422 0230 14301BE5 		ldr	r3, [fp, #-20]
 3423 0234 103093E5 		ldr	r3, [r3, #16]
 3424 0238 0310A0E1 		mov	r1, r3
 3425 023c 0200A0E1 		mov	r0, r2
 3426 0240 FEFFFFEB 		bl	_RME_Diff
 3427 0244 0030A0E1 		mov	r3, r0
 3428              		.loc 1 2038 5 discriminator 1
 3429 0248 0A0053E3 		cmp	r3, #10
 3430 024c 0100008A 		bhi	.L212
 3431              		.loc 1 2038 5 discriminator 5
 3432 0250 0730E0E3 		mvn	r3, #7
 3433              		.loc 1 2038 5
 3434 0254 5C0000EA 		b	.L200
 3435              	.L212:
 3436              		.loc 1 2038 5 discriminator 6
 3437 0258 14301BE5 		ldr	r3, [fp, #-20]
 3438 025c 043093E5 		ldr	r3, [r3, #4]
 3439 0260 000053E3 		cmp	r3, #0
 3440 0264 0B00000A 		beq	.L213
 3441              		.loc 1 2038 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 98


 3442 0268 10301BE5 		ldr	r3, [fp, #-16]
 3443 026c 7330FFE6 		uxth	r3, r3
 3444 0270 000053E3 		cmp	r3, #0
 3445 0274 0500001A 		bne	.L214
 3446              		.loc 1 2038 5 discriminator 9
 3447 0278 14001BE5 		ldr	r0, [fp, #-20]
 3448 027c 10301BE5 		ldr	r3, [fp, #-16]
 3449 0280 FF38C3E3 		bic	r3, r3, #16711680
 3450 0284 0320A0E1 		mov	r2, r3
 3451 0288 10101BE5 		ldr	r1, [fp, #-16]
 3452 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3453              	.L214:
 3454              		.loc 1 2038 5 discriminator 11
 3455 0290 0530E0E3 		mvn	r3, #5
 3456              		.loc 1 2038 5
 3457 0294 4C0000EA 		b	.L200
 3458              	.L213:
 3459              		.loc 1 2038 5 discriminator 8
 3460 0298 10301BE5 		ldr	r3, [fp, #-16]
 3461 029c 7330FFE6 		uxth	r3, r3
 3462 02a0 000053E3 		cmp	r3, #0
 3463 02a4 0800000A 		beq	.L215
 3464              		.loc 1 2038 5 discriminator 12
 3465 02a8 003000E3 		movw	r3, #:lower16:.LC6
 3466 02ac 003040E3 		movt	r3, #:upper16:.LC6
 3467 02b0 002000E3 		movw	r2, #:lower16:.LC7
 3468 02b4 002040E3 		movt	r2, #:upper16:.LC7
 3469 02b8 F61700E3 		movw	r1, #2038
 3470 02bc 000000E3 		movw	r0, #:lower16:.LC8
 3471 02c0 000040E3 		movt	r0, #:upper16:.LC8
 3472 02c4 FEFFFFEB 		bl	RME_Log
 3473              	.L216:
 3474              		.loc 1 2038 5
 3475 02c8 FEFFFFEA 		b	.L216
 3476              	.L215:
2039:../../Source/Kernel/rme_kernel.c ****     
2040:../../Source/Kernel/rme_kernel.c ****     /* Is there any capability in this capability table? If yes, we cannot destroy it.
2041:../../Source/Kernel/rme_kernel.c ****      * We will check every slot to make sure nothing is there. This is surely,
2042:../../Source/Kernel/rme_kernel.c ****      * predictable but not so perfect. So, if the time of such operations is to be 
2043:../../Source/Kernel/rme_kernel.c ****      * bounded, the user must control the maximum number of entries in the table
2044:../../Source/Kernel/rme_kernel.c ****      * by configuring RME_CPT_ENTRY_MAX to a non-zero value. */
2045:../../Source/Kernel/rme_kernel.c ****     Table=RME_CAP_GETOBJ(Cpt_Del,struct RME_Cap_Struct*);
 3477              		.loc 1 2045 11 is_stmt 1
 3478 02cc 14301BE5 		ldr	r3, [fp, #-20]
 3479 02d0 0C3093E5 		ldr	r3, [r3, #12]
 3480              		.loc 1 2045 10
 3481 02d4 18300BE5 		str	r3, [fp, #-24]
2046:../../Source/Kernel/rme_kernel.c ****     Entry_Num=Cpt_Del->Entry_Num;
 3482              		.loc 1 2046 14
 3483 02d8 14301BE5 		ldr	r3, [fp, #-20]
 3484 02dc 143093E5 		ldr	r3, [r3, #20]
 3485 02e0 1C300BE5 		str	r3, [fp, #-28]
2047:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3486              		.loc 1 2047 14
 3487 02e4 0030A0E3 		mov	r3, #0
 3488 02e8 08300BE5 		str	r3, [fp, #-8]
 3489              		.loc 1 2047 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 99


 3490 02ec 110000EA 		b	.L217
 3491              	.L219:
2048:../../Source/Kernel/rme_kernel.c ****     {
2049:../../Source/Kernel/rme_kernel.c ****         if(Table[Count].Head.Type_Stat!=0U)
 3492              		.loc 1 2049 17
 3493 02f0 08301BE5 		ldr	r3, [fp, #-8]
 3494 02f4 8332A0E1 		lsl	r3, r3, #5
 3495 02f8 18201BE5 		ldr	r2, [fp, #-24]
 3496 02fc 033082E0 		add	r3, r2, r3
 3497              		.loc 1 2049 29
 3498 0300 003093E5 		ldr	r3, [r3]
 3499              		.loc 1 2049 11
 3500 0304 000053E3 		cmp	r3, #0
 3501 0308 0700000A 		beq	.L218
2050:../../Source/Kernel/rme_kernel.c ****         {
2051:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2052:../../Source/Kernel/rme_kernel.c ****             
2053:../../Source/Kernel/rme_kernel.c ****             RME_CAP_DEFROST(Cpt_Del,Type_Stat);
 3502              		.loc 1 2053 13
 3503 030c 14001BE5 		ldr	r0, [fp, #-20]
 3504 0310 10301BE5 		ldr	r3, [fp, #-16]
 3505 0314 FF38C3E3 		bic	r3, r3, #16711680
 3506 0318 0320A0E1 		mov	r2, r3
 3507 031c 10101BE5 		ldr	r1, [fp, #-16]
 3508 0320 FEFFFFEB 		bl	_RME_Comp_Swap_Single
2054:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_EXIST;
 3509              		.loc 1 2054 20
 3510 0324 0430E0E3 		mvn	r3, #4
 3511 0328 270000EA 		b	.L200
 3512              	.L218:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3513              		.loc 1 2047 39 discriminator 2
 3514 032c 08301BE5 		ldr	r3, [fp, #-8]
 3515 0330 013083E2 		add	r3, r3, #1
 3516 0334 08300BE5 		str	r3, [fp, #-8]
 3517              	.L217:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3518              		.loc 1 2047 23 discriminator 1
 3519 0338 08201BE5 		ldr	r2, [fp, #-8]
 3520 033c 1C301BE5 		ldr	r3, [fp, #-28]
 3521 0340 030052E1 		cmp	r2, r3
 3522 0344 E9FFFF3A 		bcc	.L219
2055:../../Source/Kernel/rme_kernel.c ****         }
2056:../../Source/Kernel/rme_kernel.c ****         else
2057:../../Source/Kernel/rme_kernel.c ****         {
2058:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2059:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2060:../../Source/Kernel/rme_kernel.c ****         }
2061:../../Source/Kernel/rme_kernel.c ****     }
2062:../../Source/Kernel/rme_kernel.c ****     
2063:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
2064:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Cpt_Del,rme_ptr_t);
 3523              		.loc 1 2064 11
 3524 0348 14301BE5 		ldr	r3, [fp, #-20]
 3525 034c 0C3093E5 		ldr	r3, [r3, #12]
 3526 0350 20300BE5 		str	r3, [fp, #-32]
2065:../../Source/Kernel/rme_kernel.c ****     Size=RME_CPT_SIZE(Cpt_Del->Entry_Num);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 100


 3527              		.loc 1 2065 10
 3528 0354 14301BE5 		ldr	r3, [fp, #-20]
 3529 0358 143093E5 		ldr	r3, [r3, #20]
 3530              		.loc 1 2065 9
 3531 035c 8332A0E1 		lsl	r3, r3, #5
 3532 0360 24300BE5 		str	r3, [fp, #-36]
2066:../../Source/Kernel/rme_kernel.c **** 
2067:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
2068:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Cpt_Del,Type_Stat);
 3533              		.loc 1 2068 5
 3534 0364 14301BE5 		ldr	r3, [fp, #-20]
 3535 0368 0020A0E3 		mov	r2, #0
 3536 036c 10101BE5 		ldr	r1, [fp, #-16]
 3537 0370 0300A0E1 		mov	r0, r3
 3538 0374 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3539 0378 0030A0E1 		mov	r3, r0
 3540              		.loc 1 2068 5 is_stmt 0 discriminator 1
 3541 037c 000053E3 		cmp	r3, #0
 3542 0380 0100001A 		bne	.L220
 3543 0384 0030E0E3 		mvn	r3, #0
 3544              		.loc 1 2068 5
 3545 0388 0F0000EA 		b	.L200
 3546              	.L220:
2069:../../Source/Kernel/rme_kernel.c **** 
2070:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
2071:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Size)==0);
 3547              		.loc 1 2071 5 is_stmt 1
 3548 038c 24101BE5 		ldr	r1, [fp, #-36]
 3549 0390 20001BE5 		ldr	r0, [fp, #-32]
 3550 0394 FEFFFFEB 		bl	_RME_Kot_Erase
 3551 0398 0030A0E1 		mov	r3, r0
 3552              		.loc 1 2071 5 is_stmt 0 discriminator 1
 3553 039c 000053E3 		cmp	r3, #0
 3554 03a0 0800000A 		beq	.L221
 3555 03a4 003000E3 		movw	r3, #:lower16:.LC6
 3556 03a8 003040E3 		movt	r3, #:upper16:.LC6
 3557 03ac 002000E3 		movw	r2, #:lower16:.LC7
 3558 03b0 002040E3 		movt	r2, #:upper16:.LC7
 3559 03b4 171800E3 		movw	r1, #2071
 3560 03b8 000000E3 		movw	r0, #:lower16:.LC8
 3561 03bc 000040E3 		movt	r0, #:upper16:.LC8
 3562 03c0 FEFFFFEB 		bl	RME_Log
 3563              	.L222:
 3564              		.loc 1 2071 5
 3565 03c4 FEFFFFEA 		b	.L222
 3566              	.L221:
2072:../../Source/Kernel/rme_kernel.c ****     
2073:../../Source/Kernel/rme_kernel.c ****     return 0;
 3567              		.loc 1 2073 12 is_stmt 1
 3568 03c8 0030A0E3 		mov	r3, #0
 3569              	.L200:
2074:../../Source/Kernel/rme_kernel.c **** }
 3570              		.loc 1 2074 1
 3571 03cc 0300A0E1 		mov	r0, r3
 3572 03d0 04D04BE2 		sub	sp, fp, #4
 3573              		.cfi_def_cfa 13, 8
 3574              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 101


 3575 03d4 0088BDE8 		pop	{fp, pc}
 3576              		.cfi_endproc
 3577              	.LFE25:
 3579              		.section	.text._RME_Cpt_Frz,"ax",%progbits
 3580              		.align	2
 3581              		.syntax unified
 3582              		.arm
 3584              	_RME_Cpt_Frz:
 3585              	.LFB26:
2075:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Del *************************************************/
2076:../../Source/Kernel/rme_kernel.c **** 
2077:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Frz ******************************************************
2078:../../Source/Kernel/rme_kernel.c **** Description : Freeze a capability in the capability table.
2079:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2080:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Frz  - The capability table containing the cap
2081:../../Source/Kernel/rme_kernel.c ****                                        to captbl for this operation.
2082:../../Source/Kernel/rme_kernel.c ****                                        2-Level.
2083:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Frz - The cap to the kernel object being freezed.
2084:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2085:../../Source/Kernel/rme_kernel.c **** Output      : None.
2086:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2087:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2088:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Frz(struct RME_Cap_Cpt* Cpt,
2089:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Frz,
2090:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Frz)
2091:../../Source/Kernel/rme_kernel.c **** {
 3586              		.loc 1 2091 1
 3587              		.cfi_startproc
 3588              		@ args = 0, pretend = 0, frame = 32
 3589              		@ frame_needed = 1, uses_anonymous_args = 0
 3590 0000 00482DE9 		push	{fp, lr}
 3591              		.cfi_def_cfa_offset 8
 3592              		.cfi_offset 11, -8
 3593              		.cfi_offset 14, -4
 3594 0004 04B08DE2 		add	fp, sp, #4
 3595              		.cfi_def_cfa 11, 4
 3596 0008 20D04DE2 		sub	sp, sp, #32
 3597 000c 18000BE5 		str	r0, [fp, #-24]
 3598 0010 1C100BE5 		str	r1, [fp, #-28]
 3599 0014 20200BE5 		str	r2, [fp, #-32]
2092:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2093:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Frz;
2094:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2095:../../Source/Kernel/rme_kernel.c ****     
2096:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2097:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Frz,RME_CAP_TYPE_CPT,
 3600              		.loc 1 2097 5
 3601 0018 1C301BE5 		ldr	r3, [fp, #-28]
 3602 001c 803003E2 		and	r3, r3, #128
 3603 0020 000053E3 		cmp	r3, #0
 3604 0024 1C00001A 		bne	.L224
 3605              		.loc 1 2097 5 is_stmt 0 discriminator 1
 3606 0028 18301BE5 		ldr	r3, [fp, #-24]
 3607 002c 142093E5 		ldr	r2, [r3, #20]
 3608 0030 1C301BE5 		ldr	r3, [fp, #-28]
 3609 0034 030052E1 		cmp	r2, r3
 3610 0038 0100008A 		bhi	.L225
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 102


 3611              		.loc 1 2097 5 discriminator 3
 3612 003c 0230E0E3 		mvn	r3, #2
 3613              		.loc 1 2097 5
 3614 0040 9B0000EA 		b	.L226
 3615              	.L225:
 3616              		.loc 1 2097 5 discriminator 4
 3617 0044 1C301BE5 		ldr	r3, [fp, #-28]
 3618 0048 8322A0E1 		lsl	r2, r3, #5
 3619 004c 18301BE5 		ldr	r3, [fp, #-24]
 3620 0050 0C3093E5 		ldr	r3, [r3, #12]
 3621 0054 033082E0 		add	r3, r2, r3
 3622 0058 08300BE5 		str	r3, [fp, #-8]
 3623 005c 08301BE5 		ldr	r3, [fp, #-8]
 3624 0060 0300A0E1 		mov	r0, r3
 3625 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3626 0068 0C000BE5 		str	r0, [fp, #-12]
 3627              		.loc 1 2097 5 discriminator 1
 3628 006c 0C301BE5 		ldr	r3, [fp, #-12]
 3629 0070 FF3803E2 		and	r3, r3, #16711680
 3630 0074 020853E3 		cmp	r3, #131072
 3631 0078 0100001A 		bne	.L227
 3632              		.loc 1 2097 5 discriminator 5
 3633 007c 0830E0E3 		mvn	r3, #8
 3634              		.loc 1 2097 5
 3635 0080 8B0000EA 		b	.L226
 3636              	.L227:
 3637              		.loc 1 2097 5 discriminator 6
 3638 0084 0C301BE5 		ldr	r3, [fp, #-12]
 3639 0088 233CA0E1 		lsr	r3, r3, #24
 3640 008c 030053E3 		cmp	r3, #3
 3641 0090 3F00000A 		beq	.L228
 3642              		.loc 1 2097 5 discriminator 7
 3643 0094 0130E0E3 		mvn	r3, #1
 3644              		.loc 1 2097 5
 3645 0098 850000EA 		b	.L226
 3646              	.L224:
 3647              		.loc 1 2097 5 discriminator 2
 3648 009c 1C301BE5 		ldr	r3, [fp, #-28]
 3649 00a0 2324A0E1 		lsr	r2, r3, #8
 3650 00a4 18301BE5 		ldr	r3, [fp, #-24]
 3651 00a8 143093E5 		ldr	r3, [r3, #20]
 3652 00ac 030052E1 		cmp	r2, r3
 3653 00b0 0100003A 		bcc	.L229
 3654              		.loc 1 2097 5 discriminator 8
 3655 00b4 0230E0E3 		mvn	r3, #2
 3656              		.loc 1 2097 5
 3657 00b8 7D0000EA 		b	.L226
 3658              	.L229:
 3659              		.loc 1 2097 5 discriminator 9
 3660 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 3661 00c0 2334A0E1 		lsr	r3, r3, #8
 3662 00c4 8322A0E1 		lsl	r2, r3, #5
 3663 00c8 18301BE5 		ldr	r3, [fp, #-24]
 3664 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3665 00d0 033082E0 		add	r3, r2, r3
 3666 00d4 08300BE5 		str	r3, [fp, #-8]
 3667 00d8 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 103


 3668 00dc 0300A0E1 		mov	r0, r3
 3669 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3670 00e4 0C000BE5 		str	r0, [fp, #-12]
 3671              		.loc 1 2097 5 discriminator 1
 3672 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 3673 00ec FF3803E2 		and	r3, r3, #16711680
 3674 00f0 020853E3 		cmp	r3, #131072
 3675 00f4 0100001A 		bne	.L230
 3676              		.loc 1 2097 5 discriminator 10
 3677 00f8 0830E0E3 		mvn	r3, #8
 3678              		.loc 1 2097 5
 3679 00fc 6C0000EA 		b	.L226
 3680              	.L230:
 3681              		.loc 1 2097 5 discriminator 11
 3682 0100 0C301BE5 		ldr	r3, [fp, #-12]
 3683 0104 233CA0E1 		lsr	r3, r3, #24
 3684 0108 030053E3 		cmp	r3, #3
 3685 010c 0100000A 		beq	.L231
 3686              		.loc 1 2097 5 discriminator 12
 3687 0110 0130E0E3 		mvn	r3, #1
 3688              		.loc 1 2097 5
 3689 0114 660000EA 		b	.L226
 3690              	.L231:
 3691              		.loc 1 2097 5 discriminator 13
 3692 0118 1C301BE5 		ldr	r3, [fp, #-28]
 3693 011c 7F2003E2 		and	r2, r3, #127
 3694 0120 08301BE5 		ldr	r3, [fp, #-8]
 3695 0124 143093E5 		ldr	r3, [r3, #20]
 3696 0128 030052E1 		cmp	r2, r3
 3697 012c 0100003A 		bcc	.L232
 3698              		.loc 1 2097 5 discriminator 14
 3699 0130 0230E0E3 		mvn	r3, #2
 3700              		.loc 1 2097 5
 3701 0134 5E0000EA 		b	.L226
 3702              	.L232:
 3703              		.loc 1 2097 5 discriminator 15
 3704 0138 1C301BE5 		ldr	r3, [fp, #-28]
 3705 013c 7F3003E2 		and	r3, r3, #127
 3706 0140 8322A0E1 		lsl	r2, r3, #5
 3707 0144 08301BE5 		ldr	r3, [fp, #-8]
 3708 0148 0C3093E5 		ldr	r3, [r3, #12]
 3709 014c 033082E0 		add	r3, r2, r3
 3710 0150 08300BE5 		str	r3, [fp, #-8]
 3711 0154 08301BE5 		ldr	r3, [fp, #-8]
 3712 0158 0300A0E1 		mov	r0, r3
 3713 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3714 0160 0C000BE5 		str	r0, [fp, #-12]
 3715              		.loc 1 2097 5 discriminator 1
 3716 0164 0C301BE5 		ldr	r3, [fp, #-12]
 3717 0168 FF3803E2 		and	r3, r3, #16711680
 3718 016c 020853E3 		cmp	r3, #131072
 3719 0170 0100001A 		bne	.L233
 3720              		.loc 1 2097 5 discriminator 16
 3721 0174 0830E0E3 		mvn	r3, #8
 3722              		.loc 1 2097 5
 3723 0178 4D0000EA 		b	.L226
 3724              	.L233:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 104


 3725              		.loc 1 2097 5 discriminator 17
 3726 017c 0C301BE5 		ldr	r3, [fp, #-12]
 3727 0180 233CA0E1 		lsr	r3, r3, #24
 3728 0184 030053E3 		cmp	r3, #3
 3729 0188 0100000A 		beq	.L228
 3730              		.loc 1 2097 5 discriminator 18
 3731 018c 0130E0E3 		mvn	r3, #1
 3732              		.loc 1 2097 5
 3733 0190 470000EA 		b	.L226
 3734              	.L228:
2098:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2099:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2100:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_FRZ);
 3735              		.loc 1 2100 5 is_stmt 1
 3736 0194 08301BE5 		ldr	r3, [fp, #-8]
 3737 0198 083093E5 		ldr	r3, [r3, #8]
 3738 019c 043003E2 		and	r3, r3, #4
 3739 01a0 000053E3 		cmp	r3, #0
 3740 01a4 0100001A 		bne	.L234
 3741              		.loc 1 2100 5 is_stmt 0 discriminator 1
 3742 01a8 0630E0E3 		mvn	r3, #6
 3743              		.loc 1 2100 5
 3744 01ac 400000EA 		b	.L226
 3745              	.L234:
2101:../../Source/Kernel/rme_kernel.c ****     
2102:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2103:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Frz,struct RME_Cap_Struct*,Capobj_Frz);
 3746              		.loc 1 2103 5 is_stmt 1
 3747 01b0 08301BE5 		ldr	r3, [fp, #-8]
 3748 01b4 142093E5 		ldr	r2, [r3, #20]
 3749 01b8 20301BE5 		ldr	r3, [fp, #-32]
 3750 01bc 030052E1 		cmp	r2, r3
 3751 01c0 0100008A 		bhi	.L235
 3752              		.loc 1 2103 5 is_stmt 0 discriminator 1
 3753 01c4 0230E0E3 		mvn	r3, #2
 3754              		.loc 1 2103 5
 3755 01c8 390000EA 		b	.L226
 3756              	.L235:
 3757              		.loc 1 2103 5 discriminator 2
 3758 01cc 20301BE5 		ldr	r3, [fp, #-32]
 3759 01d0 8322A0E1 		lsl	r2, r3, #5
 3760 01d4 08301BE5 		ldr	r3, [fp, #-8]
 3761 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3762 01dc 033082E0 		add	r3, r2, r3
 3763 01e0 10300BE5 		str	r3, [fp, #-16]
2104:../../Source/Kernel/rme_kernel.c ****     
2105:../../Source/Kernel/rme_kernel.c ****     /* Check if anything is there. If nothing there, the Type_Stat must be 0. 
2106:../../Source/Kernel/rme_kernel.c ****      * Need a read acquire barrier here to avoid stale reads below. */
2107:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Frz->Head.Type_Stat));
 3764              		.loc 1 2107 15 is_stmt 1
 3765 01e4 10301BE5 		ldr	r3, [fp, #-16]
 3766 01e8 0300A0E1 		mov	r0, r3
 3767 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3768 01f0 0C000BE5 		str	r0, [fp, #-12]
2108:../../Source/Kernel/rme_kernel.c ****     /* See if there is a cap */
2109:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_TYPE(Type_Stat)==RME_CAP_TYPE_NOP)
 3769              		.loc 1 2109 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 105


 3770 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 3771 01f8 233CA0E1 		lsr	r3, r3, #24
 3772              		.loc 1 2109 7
 3773 01fc 000053E3 		cmp	r3, #0
 3774 0200 0100001A 		bne	.L236
2110:../../Source/Kernel/rme_kernel.c ****     {
2111:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2112:../../Source/Kernel/rme_kernel.c ****         
2113:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 3775              		.loc 1 2113 16
 3776 0204 0030E0E3 		mvn	r3, #0
 3777 0208 290000EA 		b	.L226
 3778              	.L236:
2114:../../Source/Kernel/rme_kernel.c ****     }
2115:../../Source/Kernel/rme_kernel.c ****     else
2116:../../Source/Kernel/rme_kernel.c ****     {
2117:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2118:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2119:../../Source/Kernel/rme_kernel.c ****     }
2120:../../Source/Kernel/rme_kernel.c ****     
2121:../../Source/Kernel/rme_kernel.c ****     /* If this is a root capability, check if the reference count allows freezing */
2122:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_ATTR(Type_Stat)==RME_CAP_ATTR_ROOT)
 3779              		.loc 1 2122 8
 3780 020c 0C301BE5 		ldr	r3, [fp, #-12]
 3781 0210 7330FFE6 		uxth	r3, r3
 3782              		.loc 1 2122 7
 3783 0214 000053E3 		cmp	r3, #0
 3784 0218 0500001A 		bne	.L237
2123:../../Source/Kernel/rme_kernel.c ****     {
2124:../../Source/Kernel/rme_kernel.c ****         if(Capobj_Frz->Head.Root_Ref!=0U)
 3785              		.loc 1 2124 28
 3786 021c 10301BE5 		ldr	r3, [fp, #-16]
 3787 0220 043093E5 		ldr	r3, [r3, #4]
 3788              		.loc 1 2124 11
 3789 0224 000053E3 		cmp	r3, #0
 3790 0228 0100000A 		beq	.L237
2125:../../Source/Kernel/rme_kernel.c ****         {
2126:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2127:../../Source/Kernel/rme_kernel.c ****             
2128:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_REFCNT;
 3791              		.loc 1 2128 20
 3792 022c 0530E0E3 		mvn	r3, #5
 3793 0230 1F0000EA 		b	.L226
 3794              	.L237:
2129:../../Source/Kernel/rme_kernel.c ****         }
2130:../../Source/Kernel/rme_kernel.c ****         else
2131:../../Source/Kernel/rme_kernel.c ****         {
2132:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2133:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2134:../../Source/Kernel/rme_kernel.c ****         }
2135:../../Source/Kernel/rme_kernel.c ****     }
2136:../../Source/Kernel/rme_kernel.c ****     else
2137:../../Source/Kernel/rme_kernel.c ****     {
2138:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2139:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2140:../../Source/Kernel/rme_kernel.c ****     }
2141:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 106


2142:../../Source/Kernel/rme_kernel.c ****     /* The capability is already frozen - why do it again? */
2143:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 3795              		.loc 1 2143 31
 3796 0234 0C301BE5 		ldr	r3, [fp, #-12]
 3797 0238 FF3803E2 		and	r3, r3, #16711680
 3798              		.loc 1 2143 7
 3799 023c 020853E3 		cmp	r3, #131072
 3800 0240 0100001A 		bne	.L238
2144:../../Source/Kernel/rme_kernel.c ****     {
2145:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2146:../../Source/Kernel/rme_kernel.c ****         
2147:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 3801              		.loc 1 2147 16
 3802 0244 0830E0E3 		mvn	r3, #8
 3803 0248 190000EA 		b	.L226
 3804              	.L238:
2148:../../Source/Kernel/rme_kernel.c ****     }
2149:../../Source/Kernel/rme_kernel.c ****     else
2150:../../Source/Kernel/rme_kernel.c ****     {
2151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2152:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2153:../../Source/Kernel/rme_kernel.c ****     }
2154:../../Source/Kernel/rme_kernel.c ****     
2155:../../Source/Kernel/rme_kernel.c ****     /* See if the slot is quiescent */
2156:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_CAP_QUIE(Capobj_Frz->Head.Timestamp)==0U))
 3805              		.loc 1 2156 8
 3806 024c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3807 0250 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3808 0254 002093E5 		ldr	r2, [r3]
 3809 0258 10301BE5 		ldr	r3, [fp, #-16]
 3810 025c 103093E5 		ldr	r3, [r3, #16]
 3811 0260 0310A0E1 		mov	r1, r3
 3812 0264 0200A0E1 		mov	r0, r2
 3813 0268 FEFFFFEB 		bl	_RME_Diff
 3814 026c 0030A0E1 		mov	r3, r0
 3815              		.loc 1 2156 7 discriminator 1
 3816 0270 0A0053E3 		cmp	r3, #10
 3817 0274 0100008A 		bhi	.L239
2157:../../Source/Kernel/rme_kernel.c ****     {
2158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2159:../../Source/Kernel/rme_kernel.c ****         
2160:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_QUIE;
 3818              		.loc 1 2160 16
 3819 0278 0730E0E3 		mvn	r3, #7
 3820 027c 0C0000EA 		b	.L226
 3821              	.L239:
2161:../../Source/Kernel/rme_kernel.c ****     }
2162:../../Source/Kernel/rme_kernel.c ****     else
2163:../../Source/Kernel/rme_kernel.c ****     {
2164:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2165:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2166:../../Source/Kernel/rme_kernel.c ****     }
2167:../../Source/Kernel/rme_kernel.c **** 
2168:../../Source/Kernel/rme_kernel.c ****     /* Update the timestamp */
2169:../../Source/Kernel/rme_kernel.c ****     Capobj_Frz->Head.Timestamp=RME_TIMESTAMP;
 3822              		.loc 1 2169 31
 3823 0280 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 107


 3824 0284 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3825 0288 002093E5 		ldr	r2, [r3]
 3826 028c 10301BE5 		ldr	r3, [fp, #-16]
 3827 0290 102083E5 		str	r2, [r3, #16]
2170:../../Source/Kernel/rme_kernel.c ****     
2171:../../Source/Kernel/rme_kernel.c ****     /* Finally, freeze it. We do not report error here because if we CASFAIL someone must have help
2172:../../Source/Kernel/rme_kernel.c ****     RME_COMP_SWAP(&(Capobj_Frz->Head.Type_Stat),Type_Stat,
 3828              		.loc 1 2172 5
 3829 0294 10001BE5 		ldr	r0, [fp, #-16]
 3830 0298 0C301BE5 		ldr	r3, [fp, #-12]
 3831 029c FF38C3E3 		bic	r3, r3, #16711680
 3832 02a0 023883E3 		orr	r3, r3, #131072
 3833 02a4 0320A0E1 		mov	r2, r3
 3834 02a8 0C101BE5 		ldr	r1, [fp, #-12]
 3835 02ac FEFFFFEB 		bl	_RME_Comp_Swap_Single
2173:../../Source/Kernel/rme_kernel.c ****                   RME_CAP_TYPE_STAT(RME_CAP_TYPE(Type_Stat),
2174:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_STAT_FROZEN,
2175:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_ATTR(Type_Stat)));
2176:../../Source/Kernel/rme_kernel.c **** 
2177:../../Source/Kernel/rme_kernel.c ****     return 0;
 3836              		.loc 1 2177 12
 3837 02b0 0030A0E3 		mov	r3, #0
 3838              	.L226:
2178:../../Source/Kernel/rme_kernel.c **** }
 3839              		.loc 1 2178 1
 3840 02b4 0300A0E1 		mov	r0, r3
 3841 02b8 04D04BE2 		sub	sp, fp, #4
 3842              		.cfi_def_cfa 13, 8
 3843              		@ sp needed
 3844 02bc 0088BDE8 		pop	{fp, pc}
 3845              		.cfi_endproc
 3846              	.LFE26:
 3848              		.section	.text._RME_Cpt_Add,"ax",%progbits
 3849              		.align	2
 3850              		.syntax unified
 3851              		.arm
 3853              	_RME_Cpt_Add:
 3854              	.LFB27:
2179:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Frz *************************************************/
2180:../../Source/Kernel/rme_kernel.c **** 
2181:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Add ******************************************************
2182:../../Source/Kernel/rme_kernel.c **** Description : Delegate capability from one capability table to another.
2183:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2184:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Dst - The capability to the destination 
2185:../../Source/Kernel/rme_kernel.c ****                                       capability table.
2186:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2187:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Dst - The capability slot you want to add to.
2188:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2189:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Src - The capability to the source capability
2190:../../Source/Kernel/rme_kernel.c ****                                       table.
2191:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2192:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Src - The capability in the source capability table
2193:../../Source/Kernel/rme_kernel.c ****                                   to delegate.
2194:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2195:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the capability.
2196:../../Source/Kernel/rme_kernel.c **** Output      : None.
2197:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 108


2198:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2199:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Add(struct RME_Cap_Cpt* Cpt,
2200:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Dst,
2201:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Dst, 
2202:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Src,
2203:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Src,
2204:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag,
2205:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Ext_Flag)
2206:../../Source/Kernel/rme_kernel.c **** {
 3855              		.loc 1 2206 1
 3856              		.cfi_startproc
 3857              		@ args = 12, pretend = 0, frame = 56
 3858              		@ frame_needed = 1, uses_anonymous_args = 0
 3859 0000 00482DE9 		push	{fp, lr}
 3860              		.cfi_def_cfa_offset 8
 3861              		.cfi_offset 11, -8
 3862              		.cfi_offset 14, -4
 3863 0004 04B08DE2 		add	fp, sp, #4
 3864              		.cfi_def_cfa 11, 4
 3865 0008 38D04DE2 		sub	sp, sp, #56
 3866 000c 30000BE5 		str	r0, [fp, #-48]
 3867 0010 34100BE5 		str	r1, [fp, #-52]
 3868 0014 38200BE5 		str	r2, [fp, #-56]
 3869 0018 3C300BE5 		str	r3, [fp, #-60]
2207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Dst;
2208:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Src;
2209:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Dst;
2210:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Src;
2211:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2212:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Src_Type;
2213:../../Source/Kernel/rme_kernel.c ****     
2214:../../Source/Kernel/rme_kernel.c ****     /* These variables are only used for kernel memory checks */
2215:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
2216:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
2217:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Flag;
2218:../../Source/Kernel/rme_kernel.c **** 
2219:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2220:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Dst,RME_CAP_TYPE_CPT,
 3870              		.loc 1 2220 5
 3871 001c 34301BE5 		ldr	r3, [fp, #-52]
 3872 0020 803003E2 		and	r3, r3, #128
 3873 0024 000053E3 		cmp	r3, #0
 3874 0028 1C00001A 		bne	.L241
 3875              		.loc 1 2220 5 is_stmt 0 discriminator 1
 3876 002c 30301BE5 		ldr	r3, [fp, #-48]
 3877 0030 142093E5 		ldr	r2, [r3, #20]
 3878 0034 34301BE5 		ldr	r3, [fp, #-52]
 3879 0038 030052E1 		cmp	r2, r3
 3880 003c 0100008A 		bhi	.L242
 3881              		.loc 1 2220 5 discriminator 3
 3882 0040 0230E0E3 		mvn	r3, #2
 3883              		.loc 1 2220 5
 3884 0044 020200EA 		b	.L243
 3885              	.L242:
 3886              		.loc 1 2220 5 discriminator 4
 3887 0048 34301BE5 		ldr	r3, [fp, #-52]
 3888 004c 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 109


 3889 0050 30301BE5 		ldr	r3, [fp, #-48]
 3890 0054 0C3093E5 		ldr	r3, [r3, #12]
 3891 0058 033082E0 		add	r3, r2, r3
 3892 005c 08300BE5 		str	r3, [fp, #-8]
 3893 0060 08301BE5 		ldr	r3, [fp, #-8]
 3894 0064 0300A0E1 		mov	r0, r3
 3895 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3896 006c 1C000BE5 		str	r0, [fp, #-28]
 3897              		.loc 1 2220 5 discriminator 1
 3898 0070 1C301BE5 		ldr	r3, [fp, #-28]
 3899 0074 FF3803E2 		and	r3, r3, #16711680
 3900 0078 020853E3 		cmp	r3, #131072
 3901 007c 0100001A 		bne	.L244
 3902              		.loc 1 2220 5 discriminator 5
 3903 0080 0830E0E3 		mvn	r3, #8
 3904              		.loc 1 2220 5
 3905 0084 F20100EA 		b	.L243
 3906              	.L244:
 3907              		.loc 1 2220 5 discriminator 6
 3908 0088 1C301BE5 		ldr	r3, [fp, #-28]
 3909 008c 233CA0E1 		lsr	r3, r3, #24
 3910 0090 030053E3 		cmp	r3, #3
 3911 0094 3F00000A 		beq	.L245
 3912              		.loc 1 2220 5 discriminator 7
 3913 0098 0130E0E3 		mvn	r3, #1
 3914              		.loc 1 2220 5
 3915 009c EC0100EA 		b	.L243
 3916              	.L241:
 3917              		.loc 1 2220 5 discriminator 2
 3918 00a0 34301BE5 		ldr	r3, [fp, #-52]
 3919 00a4 2324A0E1 		lsr	r2, r3, #8
 3920 00a8 30301BE5 		ldr	r3, [fp, #-48]
 3921 00ac 143093E5 		ldr	r3, [r3, #20]
 3922 00b0 030052E1 		cmp	r2, r3
 3923 00b4 0100003A 		bcc	.L246
 3924              		.loc 1 2220 5 discriminator 8
 3925 00b8 0230E0E3 		mvn	r3, #2
 3926              		.loc 1 2220 5
 3927 00bc E40100EA 		b	.L243
 3928              	.L246:
 3929              		.loc 1 2220 5 discriminator 9
 3930 00c0 34301BE5 		ldr	r3, [fp, #-52]
 3931 00c4 2334A0E1 		lsr	r3, r3, #8
 3932 00c8 8322A0E1 		lsl	r2, r3, #5
 3933 00cc 30301BE5 		ldr	r3, [fp, #-48]
 3934 00d0 0C3093E5 		ldr	r3, [r3, #12]
 3935 00d4 033082E0 		add	r3, r2, r3
 3936 00d8 08300BE5 		str	r3, [fp, #-8]
 3937 00dc 08301BE5 		ldr	r3, [fp, #-8]
 3938 00e0 0300A0E1 		mov	r0, r3
 3939 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3940 00e8 1C000BE5 		str	r0, [fp, #-28]
 3941              		.loc 1 2220 5 discriminator 1
 3942 00ec 1C301BE5 		ldr	r3, [fp, #-28]
 3943 00f0 FF3803E2 		and	r3, r3, #16711680
 3944 00f4 020853E3 		cmp	r3, #131072
 3945 00f8 0100001A 		bne	.L247
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 110


 3946              		.loc 1 2220 5 discriminator 10
 3947 00fc 0830E0E3 		mvn	r3, #8
 3948              		.loc 1 2220 5
 3949 0100 D30100EA 		b	.L243
 3950              	.L247:
 3951              		.loc 1 2220 5 discriminator 11
 3952 0104 1C301BE5 		ldr	r3, [fp, #-28]
 3953 0108 233CA0E1 		lsr	r3, r3, #24
 3954 010c 030053E3 		cmp	r3, #3
 3955 0110 0100000A 		beq	.L248
 3956              		.loc 1 2220 5 discriminator 12
 3957 0114 0130E0E3 		mvn	r3, #1
 3958              		.loc 1 2220 5
 3959 0118 CD0100EA 		b	.L243
 3960              	.L248:
 3961              		.loc 1 2220 5 discriminator 13
 3962 011c 34301BE5 		ldr	r3, [fp, #-52]
 3963 0120 7F2003E2 		and	r2, r3, #127
 3964 0124 08301BE5 		ldr	r3, [fp, #-8]
 3965 0128 143093E5 		ldr	r3, [r3, #20]
 3966 012c 030052E1 		cmp	r2, r3
 3967 0130 0100003A 		bcc	.L249
 3968              		.loc 1 2220 5 discriminator 14
 3969 0134 0230E0E3 		mvn	r3, #2
 3970              		.loc 1 2220 5
 3971 0138 C50100EA 		b	.L243
 3972              	.L249:
 3973              		.loc 1 2220 5 discriminator 15
 3974 013c 34301BE5 		ldr	r3, [fp, #-52]
 3975 0140 7F3003E2 		and	r3, r3, #127
 3976 0144 8322A0E1 		lsl	r2, r3, #5
 3977 0148 08301BE5 		ldr	r3, [fp, #-8]
 3978 014c 0C3093E5 		ldr	r3, [r3, #12]
 3979 0150 033082E0 		add	r3, r2, r3
 3980 0154 08300BE5 		str	r3, [fp, #-8]
 3981 0158 08301BE5 		ldr	r3, [fp, #-8]
 3982 015c 0300A0E1 		mov	r0, r3
 3983 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3984 0164 1C000BE5 		str	r0, [fp, #-28]
 3985              		.loc 1 2220 5 discriminator 1
 3986 0168 1C301BE5 		ldr	r3, [fp, #-28]
 3987 016c FF3803E2 		and	r3, r3, #16711680
 3988 0170 020853E3 		cmp	r3, #131072
 3989 0174 0100001A 		bne	.L250
 3990              		.loc 1 2220 5 discriminator 16
 3991 0178 0830E0E3 		mvn	r3, #8
 3992              		.loc 1 2220 5
 3993 017c B40100EA 		b	.L243
 3994              	.L250:
 3995              		.loc 1 2220 5 discriminator 17
 3996 0180 1C301BE5 		ldr	r3, [fp, #-28]
 3997 0184 233CA0E1 		lsr	r3, r3, #24
 3998 0188 030053E3 		cmp	r3, #3
 3999 018c 0100000A 		beq	.L245
 4000              		.loc 1 2220 5 discriminator 18
 4001 0190 0130E0E3 		mvn	r3, #1
 4002              		.loc 1 2220 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 111


 4003 0194 AE0100EA 		b	.L243
 4004              	.L245:
2221:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Dst,Type_Stat);
2222:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Src,RME_CAP_TYPE_CPT,
 4005              		.loc 1 2222 5 is_stmt 1
 4006 0198 3C301BE5 		ldr	r3, [fp, #-60]
 4007 019c 803003E2 		and	r3, r3, #128
 4008 01a0 000053E3 		cmp	r3, #0
 4009 01a4 1C00001A 		bne	.L251
 4010              		.loc 1 2222 5 is_stmt 0 discriminator 1
 4011 01a8 30301BE5 		ldr	r3, [fp, #-48]
 4012 01ac 142093E5 		ldr	r2, [r3, #20]
 4013 01b0 3C301BE5 		ldr	r3, [fp, #-60]
 4014 01b4 030052E1 		cmp	r2, r3
 4015 01b8 0100008A 		bhi	.L252
 4016              		.loc 1 2222 5 discriminator 3
 4017 01bc 0230E0E3 		mvn	r3, #2
 4018              		.loc 1 2222 5
 4019 01c0 A30100EA 		b	.L243
 4020              	.L252:
 4021              		.loc 1 2222 5 discriminator 4
 4022 01c4 3C301BE5 		ldr	r3, [fp, #-60]
 4023 01c8 8322A0E1 		lsl	r2, r3, #5
 4024 01cc 30301BE5 		ldr	r3, [fp, #-48]
 4025 01d0 0C3093E5 		ldr	r3, [r3, #12]
 4026 01d4 033082E0 		add	r3, r2, r3
 4027 01d8 0C300BE5 		str	r3, [fp, #-12]
 4028 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 4029 01e0 0300A0E1 		mov	r0, r3
 4030 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4031 01e8 1C000BE5 		str	r0, [fp, #-28]
 4032              		.loc 1 2222 5 discriminator 1
 4033 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 4034 01f0 FF3803E2 		and	r3, r3, #16711680
 4035 01f4 020853E3 		cmp	r3, #131072
 4036 01f8 0100001A 		bne	.L253
 4037              		.loc 1 2222 5 discriminator 5
 4038 01fc 0830E0E3 		mvn	r3, #8
 4039              		.loc 1 2222 5
 4040 0200 930100EA 		b	.L243
 4041              	.L253:
 4042              		.loc 1 2222 5 discriminator 6
 4043 0204 1C301BE5 		ldr	r3, [fp, #-28]
 4044 0208 233CA0E1 		lsr	r3, r3, #24
 4045 020c 030053E3 		cmp	r3, #3
 4046 0210 3F00000A 		beq	.L254
 4047              		.loc 1 2222 5 discriminator 7
 4048 0214 0130E0E3 		mvn	r3, #1
 4049              		.loc 1 2222 5
 4050 0218 8D0100EA 		b	.L243
 4051              	.L251:
 4052              		.loc 1 2222 5 discriminator 2
 4053 021c 3C301BE5 		ldr	r3, [fp, #-60]
 4054 0220 2324A0E1 		lsr	r2, r3, #8
 4055 0224 30301BE5 		ldr	r3, [fp, #-48]
 4056 0228 143093E5 		ldr	r3, [r3, #20]
 4057 022c 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 112


 4058 0230 0100003A 		bcc	.L255
 4059              		.loc 1 2222 5 discriminator 8
 4060 0234 0230E0E3 		mvn	r3, #2
 4061              		.loc 1 2222 5
 4062 0238 850100EA 		b	.L243
 4063              	.L255:
 4064              		.loc 1 2222 5 discriminator 9
 4065 023c 3C301BE5 		ldr	r3, [fp, #-60]
 4066 0240 2334A0E1 		lsr	r3, r3, #8
 4067 0244 8322A0E1 		lsl	r2, r3, #5
 4068 0248 30301BE5 		ldr	r3, [fp, #-48]
 4069 024c 0C3093E5 		ldr	r3, [r3, #12]
 4070 0250 033082E0 		add	r3, r2, r3
 4071 0254 0C300BE5 		str	r3, [fp, #-12]
 4072 0258 0C301BE5 		ldr	r3, [fp, #-12]
 4073 025c 0300A0E1 		mov	r0, r3
 4074 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4075 0264 1C000BE5 		str	r0, [fp, #-28]
 4076              		.loc 1 2222 5 discriminator 1
 4077 0268 1C301BE5 		ldr	r3, [fp, #-28]
 4078 026c FF3803E2 		and	r3, r3, #16711680
 4079 0270 020853E3 		cmp	r3, #131072
 4080 0274 0100001A 		bne	.L256
 4081              		.loc 1 2222 5 discriminator 10
 4082 0278 0830E0E3 		mvn	r3, #8
 4083              		.loc 1 2222 5
 4084 027c 740100EA 		b	.L243
 4085              	.L256:
 4086              		.loc 1 2222 5 discriminator 11
 4087 0280 1C301BE5 		ldr	r3, [fp, #-28]
 4088 0284 233CA0E1 		lsr	r3, r3, #24
 4089 0288 030053E3 		cmp	r3, #3
 4090 028c 0100000A 		beq	.L257
 4091              		.loc 1 2222 5 discriminator 12
 4092 0290 0130E0E3 		mvn	r3, #1
 4093              		.loc 1 2222 5
 4094 0294 6E0100EA 		b	.L243
 4095              	.L257:
 4096              		.loc 1 2222 5 discriminator 13
 4097 0298 3C301BE5 		ldr	r3, [fp, #-60]
 4098 029c 7F2003E2 		and	r2, r3, #127
 4099 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 4100 02a4 143093E5 		ldr	r3, [r3, #20]
 4101 02a8 030052E1 		cmp	r2, r3
 4102 02ac 0100003A 		bcc	.L258
 4103              		.loc 1 2222 5 discriminator 14
 4104 02b0 0230E0E3 		mvn	r3, #2
 4105              		.loc 1 2222 5
 4106 02b4 660100EA 		b	.L243
 4107              	.L258:
 4108              		.loc 1 2222 5 discriminator 15
 4109 02b8 3C301BE5 		ldr	r3, [fp, #-60]
 4110 02bc 7F3003E2 		and	r3, r3, #127
 4111 02c0 8322A0E1 		lsl	r2, r3, #5
 4112 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 4113 02c8 0C3093E5 		ldr	r3, [r3, #12]
 4114 02cc 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 113


 4115 02d0 0C300BE5 		str	r3, [fp, #-12]
 4116 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 4117 02d8 0300A0E1 		mov	r0, r3
 4118 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4119 02e0 1C000BE5 		str	r0, [fp, #-28]
 4120              		.loc 1 2222 5 discriminator 1
 4121 02e4 1C301BE5 		ldr	r3, [fp, #-28]
 4122 02e8 FF3803E2 		and	r3, r3, #16711680
 4123 02ec 020853E3 		cmp	r3, #131072
 4124 02f0 0100001A 		bne	.L259
 4125              		.loc 1 2222 5 discriminator 16
 4126 02f4 0830E0E3 		mvn	r3, #8
 4127              		.loc 1 2222 5
 4128 02f8 550100EA 		b	.L243
 4129              	.L259:
 4130              		.loc 1 2222 5 discriminator 17
 4131 02fc 1C301BE5 		ldr	r3, [fp, #-28]
 4132 0300 233CA0E1 		lsr	r3, r3, #24
 4133 0304 030053E3 		cmp	r3, #3
 4134 0308 0100000A 		beq	.L254
 4135              		.loc 1 2222 5 discriminator 18
 4136 030c 0130E0E3 		mvn	r3, #1
 4137              		.loc 1 2222 5
 4138 0310 4F0100EA 		b	.L243
 4139              	.L254:
2223:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Src,Type_Stat);
2224:../../Source/Kernel/rme_kernel.c ****     /* Check if both captbls are not frozen and allows such operations */
2225:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Dst,RME_CPT_FLAG_ADD_DST);
 4140              		.loc 1 2225 5 is_stmt 1
 4141 0314 08301BE5 		ldr	r3, [fp, #-8]
 4142 0318 083093E5 		ldr	r3, [r3, #8]
 4143 031c 103003E2 		and	r3, r3, #16
 4144 0320 000053E3 		cmp	r3, #0
 4145 0324 0100001A 		bne	.L260
 4146              		.loc 1 2225 5 is_stmt 0 discriminator 1
 4147 0328 0630E0E3 		mvn	r3, #6
 4148              		.loc 1 2225 5
 4149 032c 480100EA 		b	.L243
 4150              	.L260:
2226:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Src,RME_CPT_FLAG_ADD_SRC);
 4151              		.loc 1 2226 5 is_stmt 1
 4152 0330 0C301BE5 		ldr	r3, [fp, #-12]
 4153 0334 083093E5 		ldr	r3, [r3, #8]
 4154 0338 083003E2 		and	r3, r3, #8
 4155 033c 000053E3 		cmp	r3, #0
 4156 0340 0100001A 		bne	.L261
 4157              		.loc 1 2226 5 is_stmt 0 discriminator 1
 4158 0344 0630E0E3 		mvn	r3, #6
 4159              		.loc 1 2226 5
 4160 0348 410100EA 		b	.L243
 4161              	.L261:
2227:../../Source/Kernel/rme_kernel.c ****     
2228:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slots */
2229:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Dst,Cap_Dst,struct RME_Cap_Struct*,Capobj_Dst);
 4162              		.loc 1 2229 5 is_stmt 1
 4163 034c 08301BE5 		ldr	r3, [fp, #-8]
 4164 0350 142093E5 		ldr	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 114


 4165 0354 38301BE5 		ldr	r3, [fp, #-56]
 4166 0358 030052E1 		cmp	r2, r3
 4167 035c 0100008A 		bhi	.L262
 4168              		.loc 1 2229 5 is_stmt 0 discriminator 1
 4169 0360 0230E0E3 		mvn	r3, #2
 4170              		.loc 1 2229 5
 4171 0364 3A0100EA 		b	.L243
 4172              	.L262:
 4173              		.loc 1 2229 5 discriminator 2
 4174 0368 38301BE5 		ldr	r3, [fp, #-56]
 4175 036c 8322A0E1 		lsl	r2, r3, #5
 4176 0370 08301BE5 		ldr	r3, [fp, #-8]
 4177 0374 0C3093E5 		ldr	r3, [r3, #12]
 4178 0378 033082E0 		add	r3, r2, r3
 4179 037c 20300BE5 		str	r3, [fp, #-32]
2230:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Src,Cap_Src,struct RME_Cap_Struct*,Capobj_Src);
 4180              		.loc 1 2230 5 is_stmt 1
 4181 0380 0C301BE5 		ldr	r3, [fp, #-12]
 4182 0384 142093E5 		ldr	r2, [r3, #20]
 4183 0388 04309BE5 		ldr	r3, [fp, #4]
 4184 038c 030052E1 		cmp	r2, r3
 4185 0390 0100008A 		bhi	.L263
 4186              		.loc 1 2230 5 is_stmt 0 discriminator 1
 4187 0394 0230E0E3 		mvn	r3, #2
 4188              		.loc 1 2230 5
 4189 0398 2D0100EA 		b	.L243
 4190              	.L263:
 4191              		.loc 1 2230 5 discriminator 2
 4192 039c 04309BE5 		ldr	r3, [fp, #4]
 4193 03a0 8322A0E1 		lsl	r2, r3, #5
 4194 03a4 0C301BE5 		ldr	r3, [fp, #-12]
 4195 03a8 0C3093E5 		ldr	r3, [r3, #12]
 4196 03ac 033082E0 		add	r3, r2, r3
 4197 03b0 24300BE5 		str	r3, [fp, #-36]
2231:../../Source/Kernel/rme_kernel.c ****     
2232:../../Source/Kernel/rme_kernel.c ****     /* Atomic read - Read barrier to avoid premature checking of the rest */
2233:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Src->Head.Type_Stat));
 4198              		.loc 1 2233 15 is_stmt 1
 4199 03b4 24301BE5 		ldr	r3, [fp, #-36]
 4200 03b8 0300A0E1 		mov	r0, r3
 4201 03bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4202 03c0 1C000BE5 		str	r0, [fp, #-28]
2234:../../Source/Kernel/rme_kernel.c ****     /* Is the source cap frozen? */
2235:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 4203              		.loc 1 2235 31
 4204 03c4 1C301BE5 		ldr	r3, [fp, #-28]
 4205 03c8 FF3803E2 		and	r3, r3, #16711680
 4206              		.loc 1 2235 7
 4207 03cc 020853E3 		cmp	r3, #131072
 4208 03d0 0100001A 		bne	.L264
2236:../../Source/Kernel/rme_kernel.c ****     {
2237:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2238:../../Source/Kernel/rme_kernel.c ****         
2239:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 4209              		.loc 1 2239 16
 4210 03d4 0830E0E3 		mvn	r3, #8
 4211 03d8 1D0100EA 		b	.L243
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 115


 4212              	.L264:
2240:../../Source/Kernel/rme_kernel.c ****     }
2241:../../Source/Kernel/rme_kernel.c ****     else
2242:../../Source/Kernel/rme_kernel.c ****     {
2243:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2244:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2245:../../Source/Kernel/rme_kernel.c ****     }
2246:../../Source/Kernel/rme_kernel.c ****     
2247:../../Source/Kernel/rme_kernel.c ****     /* Does the source cap exist at all? */
2248:../../Source/Kernel/rme_kernel.c ****     if(Type_Stat==0U)
 4213              		.loc 1 2248 7
 4214 03dc 1C301BE5 		ldr	r3, [fp, #-28]
 4215 03e0 000053E3 		cmp	r3, #0
 4216 03e4 0100001A 		bne	.L265
2249:../../Source/Kernel/rme_kernel.c ****     {
2250:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2251:../../Source/Kernel/rme_kernel.c ****         
2252:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 4217              		.loc 1 2252 16
 4218 03e8 0030E0E3 		mvn	r3, #0
 4219 03ec 180100EA 		b	.L243
 4220              	.L265:
2253:../../Source/Kernel/rme_kernel.c ****     }
2254:../../Source/Kernel/rme_kernel.c ****     else
2255:../../Source/Kernel/rme_kernel.c ****     {
2256:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2257:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2258:../../Source/Kernel/rme_kernel.c ****     }
2259:../../Source/Kernel/rme_kernel.c **** 
2260:../../Source/Kernel/rme_kernel.c ****     /* Dewarn some compilers that complain about uninitialized variables */
2261:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=0U;
 4221              		.loc 1 2261 14
 4222 03f0 0030A0E3 		mov	r3, #0
 4223 03f4 10300BE5 		str	r3, [fp, #-16]
2262:../../Source/Kernel/rme_kernel.c ****     Kom_End=0U;
 4224              		.loc 1 2262 12
 4225 03f8 0030A0E3 		mov	r3, #0
 4226 03fc 14300BE5 		str	r3, [fp, #-20]
2263:../../Source/Kernel/rme_kernel.c ****     Kom_Flag=0U;
 4227              		.loc 1 2263 13
 4228 0400 0030A0E3 		mov	r3, #0
 4229 0404 18300BE5 		str	r3, [fp, #-24]
2264:../../Source/Kernel/rme_kernel.c ****     
2265:../../Source/Kernel/rme_kernel.c ****     /* Is there a flag conflict? - For page tables, we have different checking mechanisms */
2266:../../Source/Kernel/rme_kernel.c ****     Src_Type=RME_CAP_TYPE(Type_Stat);
 4230              		.loc 1 2266 13
 4231 0408 1C301BE5 		ldr	r3, [fp, #-28]
 4232 040c 233CA0E1 		lsr	r3, r3, #24
 4233 0410 28300BE5 		str	r3, [fp, #-40]
2267:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_PGT)
 4234              		.loc 1 2267 7
 4235 0414 28301BE5 		ldr	r3, [fp, #-40]
 4236 0418 040053E3 		cmp	r3, #4
 4237 041c 2D00001A 		bne	.L266
2268:../../Source/Kernel/rme_kernel.c ****     {
2269:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2270:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 116


2271:../../Source/Kernel/rme_kernel.c ****         /* Check the delegation range */
2272:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)>RME_PGT_FLAG_HIGH(Capobj_Src->Head.Flag))
 4238              		.loc 1 2272 12
 4239 0420 08309BE5 		ldr	r3, [fp, #8]
 4240 0424 232AA0E1 		lsr	r2, r3, #20
 4241              		.loc 1 2272 36
 4242 0428 24301BE5 		ldr	r3, [fp, #-36]
 4243 042c 083093E5 		ldr	r3, [r3, #8]
 4244 0430 233AA0E1 		lsr	r3, r3, #20
 4245              		.loc 1 2272 11
 4246 0434 030052E1 		cmp	r2, r3
 4247 0438 0100009A 		bls	.L267
2273:../../Source/Kernel/rme_kernel.c ****         {
2274:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2275:../../Source/Kernel/rme_kernel.c ****         
2276:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4248              		.loc 1 2276 20
 4249 043c 0630E0E3 		mvn	r3, #6
 4250 0440 030100EA 		b	.L243
 4251              	.L267:
2277:../../Source/Kernel/rme_kernel.c ****         }
2278:../../Source/Kernel/rme_kernel.c ****         else
2279:../../Source/Kernel/rme_kernel.c ****         {
2280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2281:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2282:../../Source/Kernel/rme_kernel.c ****         }
2283:../../Source/Kernel/rme_kernel.c ****         
2284:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_LOW(Flag)<RME_PGT_FLAG_LOW(Capobj_Src->Head.Flag))
 4252              		.loc 1 2284 12
 4253 0444 08309BE5 		ldr	r3, [fp, #8]
 4254 0448 2334A0E1 		lsr	r3, r3, #8
 4255 044c 5320EBE7 		ubfx	r2, r3, #0, #12
 4256              		.loc 1 2284 35
 4257 0450 24301BE5 		ldr	r3, [fp, #-36]
 4258 0454 083093E5 		ldr	r3, [r3, #8]
 4259 0458 2334A0E1 		lsr	r3, r3, #8
 4260 045c 5330EBE7 		ubfx	r3, r3, #0, #12
 4261              		.loc 1 2284 11
 4262 0460 030052E1 		cmp	r2, r3
 4263 0464 0100002A 		bcs	.L268
2285:../../Source/Kernel/rme_kernel.c ****         {
2286:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2287:../../Source/Kernel/rme_kernel.c ****             
2288:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4264              		.loc 1 2288 20
 4265 0468 0630E0E3 		mvn	r3, #6
 4266 046c F80000EA 		b	.L243
 4267              	.L268:
2289:../../Source/Kernel/rme_kernel.c ****         }
2290:../../Source/Kernel/rme_kernel.c ****         else
2291:../../Source/Kernel/rme_kernel.c ****         {
2292:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2293:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2294:../../Source/Kernel/rme_kernel.c ****         }
2295:../../Source/Kernel/rme_kernel.c ****         
2296:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)<RME_PGT_FLAG_LOW(Flag))
 4268              		.loc 1 2296 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 117


 4269 0470 08309BE5 		ldr	r3, [fp, #8]
 4270 0474 232AA0E1 		lsr	r2, r3, #20
 4271              		.loc 1 2296 36
 4272 0478 08309BE5 		ldr	r3, [fp, #8]
 4273 047c 2334A0E1 		lsr	r3, r3, #8
 4274 0480 5330EBE7 		ubfx	r3, r3, #0, #12
 4275              		.loc 1 2296 11
 4276 0484 030052E1 		cmp	r2, r3
 4277 0488 0100002A 		bcs	.L269
2297:../../Source/Kernel/rme_kernel.c ****         {
2298:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2299:../../Source/Kernel/rme_kernel.c ****             
2300:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4278              		.loc 1 2300 20
 4279 048c 0630E0E3 		mvn	r3, #6
 4280 0490 EF0000EA 		b	.L243
 4281              	.L269:
2301:../../Source/Kernel/rme_kernel.c ****         }
2302:../../Source/Kernel/rme_kernel.c ****         else
2303:../../Source/Kernel/rme_kernel.c ****         {
2304:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2305:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2306:../../Source/Kernel/rme_kernel.c ****         }
2307:../../Source/Kernel/rme_kernel.c ****         
2308:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2309:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_FLAG(Flag)==0U)
 4282              		.loc 1 2309 12
 4283 0494 08309BE5 		ldr	r3, [fp, #8]
 4284 0498 7330EFE6 		uxtb	r3, r3
 4285              		.loc 1 2309 11
 4286 049c 000053E3 		cmp	r3, #0
 4287 04a0 0100001A 		bne	.L270
2310:../../Source/Kernel/rme_kernel.c ****         {
2311:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2312:../../Source/Kernel/rme_kernel.c ****             
2313:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4288              		.loc 1 2313 20
 4289 04a4 0630E0E3 		mvn	r3, #6
 4290 04a8 E90000EA 		b	.L243
 4291              	.L270:
2314:../../Source/Kernel/rme_kernel.c ****         }
2315:../../Source/Kernel/rme_kernel.c ****         else
2316:../../Source/Kernel/rme_kernel.c ****         {
2317:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2318:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2319:../../Source/Kernel/rme_kernel.c ****         }
2320:../../Source/Kernel/rme_kernel.c ****         
2321:../../Source/Kernel/rme_kernel.c ****         if((RME_PGT_FLAG_FLAG(Flag)&(~RME_PGT_FLAG_FLAG(Capobj_Src->Head.Flag)))!=0U)
 4292              		.loc 1 2321 39
 4293 04ac 24301BE5 		ldr	r3, [fp, #-36]
 4294 04b0 083093E5 		ldr	r3, [r3, #8]
 4295 04b4 7330EFE6 		uxtb	r3, r3
 4296              		.loc 1 2321 38
 4297 04b8 0320E0E1 		mvn	r2, r3
 4298              		.loc 1 2321 36
 4299 04bc 08309BE5 		ldr	r3, [fp, #8]
 4300 04c0 023003E0 		and	r3, r3, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 118


 4301 04c4 7330EFE6 		uxtb	r3, r3
 4302              		.loc 1 2321 11
 4303 04c8 000053E3 		cmp	r3, #0
 4304 04cc 7700000A 		beq	.L271
2322:../../Source/Kernel/rme_kernel.c ****         {
2323:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2324:../../Source/Kernel/rme_kernel.c ****             
2325:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4305              		.loc 1 2325 20
 4306 04d0 0630E0E3 		mvn	r3, #6
 4307 04d4 DE0000EA 		b	.L243
 4308              	.L266:
2326:../../Source/Kernel/rme_kernel.c ****         }
2327:../../Source/Kernel/rme_kernel.c ****         else
2328:../../Source/Kernel/rme_kernel.c ****         {
2329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2330:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2331:../../Source/Kernel/rme_kernel.c ****         }
2332:../../Source/Kernel/rme_kernel.c ****     }
2333:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KFN)
 4309              		.loc 1 2333 12
 4310 04d8 28301BE5 		ldr	r3, [fp, #-40]
 4311 04dc 010053E3 		cmp	r3, #1
 4312 04e0 1900001A 		bne	.L272
2334:../../Source/Kernel/rme_kernel.c ****     {
2335:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2336:../../Source/Kernel/rme_kernel.c ****         
2337:../../Source/Kernel/rme_kernel.c ****         /* Kernel funcrions only have ranges, no flags - check the delegation range */
2338:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)>RME_KFN_FLAG_HIGH(Capobj_Src->Head.Flag))
 4313              		.loc 1 2338 12
 4314 04e4 08309BE5 		ldr	r3, [fp, #8]
 4315 04e8 2328A0E1 		lsr	r2, r3, #16
 4316              		.loc 1 2338 36
 4317 04ec 24301BE5 		ldr	r3, [fp, #-36]
 4318 04f0 083093E5 		ldr	r3, [r3, #8]
 4319 04f4 2338A0E1 		lsr	r3, r3, #16
 4320              		.loc 1 2338 11
 4321 04f8 030052E1 		cmp	r2, r3
 4322 04fc 0100009A 		bls	.L273
2339:../../Source/Kernel/rme_kernel.c ****         {
2340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2341:../../Source/Kernel/rme_kernel.c ****             
2342:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4323              		.loc 1 2342 20
 4324 0500 0630E0E3 		mvn	r3, #6
 4325 0504 D20000EA 		b	.L243
 4326              	.L273:
2343:../../Source/Kernel/rme_kernel.c ****         }
2344:../../Source/Kernel/rme_kernel.c ****         else
2345:../../Source/Kernel/rme_kernel.c ****         {
2346:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2347:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2348:../../Source/Kernel/rme_kernel.c ****         }
2349:../../Source/Kernel/rme_kernel.c ****         
2350:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_LOW(Flag)<RME_KFN_FLAG_LOW(Capobj_Src->Head.Flag))
 4327              		.loc 1 2350 12
 4328 0508 08309BE5 		ldr	r3, [fp, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 119


 4329 050c 7320FFE6 		uxth	r2, r3
 4330              		.loc 1 2350 35
 4331 0510 24301BE5 		ldr	r3, [fp, #-36]
 4332 0514 083093E5 		ldr	r3, [r3, #8]
 4333 0518 7330FFE6 		uxth	r3, r3
 4334              		.loc 1 2350 11
 4335 051c 030052E1 		cmp	r2, r3
 4336 0520 0100002A 		bcs	.L274
2351:../../Source/Kernel/rme_kernel.c ****         {
2352:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2353:../../Source/Kernel/rme_kernel.c ****             
2354:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4337              		.loc 1 2354 20
 4338 0524 0630E0E3 		mvn	r3, #6
 4339 0528 C90000EA 		b	.L243
 4340              	.L274:
2355:../../Source/Kernel/rme_kernel.c ****         }
2356:../../Source/Kernel/rme_kernel.c ****         else
2357:../../Source/Kernel/rme_kernel.c ****         {
2358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2359:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2360:../../Source/Kernel/rme_kernel.c ****         }
2361:../../Source/Kernel/rme_kernel.c ****         
2362:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)<RME_KFN_FLAG_LOW(Flag))
 4341              		.loc 1 2362 12
 4342 052c 08309BE5 		ldr	r3, [fp, #8]
 4343 0530 2328A0E1 		lsr	r2, r3, #16
 4344              		.loc 1 2362 36
 4345 0534 08309BE5 		ldr	r3, [fp, #8]
 4346 0538 7330FFE6 		uxth	r3, r3
 4347              		.loc 1 2362 11
 4348 053c 030052E1 		cmp	r2, r3
 4349 0540 5A00002A 		bcs	.L271
2363:../../Source/Kernel/rme_kernel.c ****         {
2364:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2365:../../Source/Kernel/rme_kernel.c ****             
2366:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4350              		.loc 1 2366 20
 4351 0544 0630E0E3 		mvn	r3, #6
 4352 0548 C10000EA 		b	.L243
 4353              	.L272:
2367:../../Source/Kernel/rme_kernel.c ****         }
2368:../../Source/Kernel/rme_kernel.c ****         else
2369:../../Source/Kernel/rme_kernel.c ****         {
2370:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2371:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2372:../../Source/Kernel/rme_kernel.c ****         }
2373:../../Source/Kernel/rme_kernel.c ****     }
2374:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KOM)
 4354              		.loc 1 2374 12
 4355 054c 28301BE5 		ldr	r3, [fp, #-40]
 4356 0550 020053E3 		cmp	r3, #2
 4357 0554 4700001A 		bne	.L275
2375:../../Source/Kernel/rme_kernel.c ****     {
2376:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2377:../../Source/Kernel/rme_kernel.c ****         
2378:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End here is exclusive */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 120


2379:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_KOM_FLAG_LOW(Flag,Ext_Flag);
 4358              		.loc 1 2379 18
 4359 0558 08309BE5 		ldr	r3, [fp, #8]
 4360 055c 0338A0E1 		lsl	r3, r3, #16
 4361 0560 10300BE5 		str	r3, [fp, #-16]
2380:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_KOM_FLAG_HIGH(Flag,Ext_Flag);
 4362              		.loc 1 2380 17
 4363 0564 08309BE5 		ldr	r3, [fp, #8]
 4364 0568 2338A0E1 		lsr	r3, r3, #16
 4365 056c 0338A0E1 		lsl	r3, r3, #16
 4366 0570 0C209BE5 		ldr	r2, [fp, #12]
 4367 0574 2228A0E1 		lsr	r2, r2, #16
 4368 0578 3F20C2E3 		bic	r2, r2, #63
 4369              		.loc 1 2380 16
 4370 057c 023083E1 		orr	r3, r3, r2
 4371 0580 14300BE5 		str	r3, [fp, #-20]
2381:../../Source/Kernel/rme_kernel.c ****         Kom_Flag=RME_KOM_FLAG_KOM(Ext_Flag);
 4372              		.loc 1 2381 17
 4373 0584 0030A0E3 		mov	r3, #0
 4374 0588 18300BE5 		str	r3, [fp, #-24]
2382:../../Source/Kernel/rme_kernel.c ****         
2383:../../Source/Kernel/rme_kernel.c ****         /* Round start and end to the slot boundary, if we are using slots bigger than 64 bytes */
2384:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
2385:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_ROUND_DOWN(Kom_End,RME_KOM_SLOT_ORDER);
2386:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_ROUND_UP(Kom_Begin,RME_KOM_SLOT_ORDER);
2387:../../Source/Kernel/rme_kernel.c **** #endif
2388:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<=Kom_Begin)
 4375              		.loc 1 2388 11
 4376 058c 14201BE5 		ldr	r2, [fp, #-20]
 4377 0590 10301BE5 		ldr	r3, [fp, #-16]
 4378 0594 030052E1 		cmp	r2, r3
 4379 0598 0100008A 		bhi	.L276
2389:../../Source/Kernel/rme_kernel.c ****         {
2390:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2391:../../Source/Kernel/rme_kernel.c ****             
2392:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4380              		.loc 1 2392 20
 4381 059c 0630E0E3 		mvn	r3, #6
 4382 05a0 AB0000EA 		b	.L243
 4383              	.L276:
2393:../../Source/Kernel/rme_kernel.c ****         }
2394:../../Source/Kernel/rme_kernel.c ****         else
2395:../../Source/Kernel/rme_kernel.c ****         {
2396:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2397:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2398:../../Source/Kernel/rme_kernel.c ****         }
2399:../../Source/Kernel/rme_kernel.c **** 
2400:../../Source/Kernel/rme_kernel.c ****         /* Convert relative addresses to absolute addresses and check for overflow */
2401:../../Source/Kernel/rme_kernel.c ****         Kom_Begin+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4384              		.loc 1 2401 62
 4385 05a4 24301BE5 		ldr	r3, [fp, #-36]
 4386 05a8 143093E5 		ldr	r3, [r3, #20]
 4387              		.loc 1 2401 18
 4388 05ac 10201BE5 		ldr	r2, [fp, #-16]
 4389 05b0 033082E0 		add	r3, r2, r3
 4390 05b4 10300BE5 		str	r3, [fp, #-16]
2402:../../Source/Kernel/rme_kernel.c ****         if(Kom_Begin<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 121


 4391              		.loc 1 2402 64
 4392 05b8 24301BE5 		ldr	r3, [fp, #-36]
 4393 05bc 143093E5 		ldr	r3, [r3, #20]
 4394              		.loc 1 2402 11
 4395 05c0 10201BE5 		ldr	r2, [fp, #-16]
 4396 05c4 030052E1 		cmp	r2, r3
 4397 05c8 0100002A 		bcs	.L277
2403:../../Source/Kernel/rme_kernel.c ****         {
2404:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2405:../../Source/Kernel/rme_kernel.c ****             
2406:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4398              		.loc 1 2406 20
 4399 05cc 0630E0E3 		mvn	r3, #6
 4400 05d0 9F0000EA 		b	.L243
 4401              	.L277:
2407:../../Source/Kernel/rme_kernel.c ****         }
2408:../../Source/Kernel/rme_kernel.c ****         else
2409:../../Source/Kernel/rme_kernel.c ****         {
2410:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2411:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2412:../../Source/Kernel/rme_kernel.c ****         }
2413:../../Source/Kernel/rme_kernel.c ****         
2414:../../Source/Kernel/rme_kernel.c ****         Kom_End+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4402              		.loc 1 2414 60
 4403 05d4 24301BE5 		ldr	r3, [fp, #-36]
 4404 05d8 143093E5 		ldr	r3, [r3, #20]
 4405              		.loc 1 2414 16
 4406 05dc 14201BE5 		ldr	r2, [fp, #-20]
 4407 05e0 033082E0 		add	r3, r2, r3
 4408 05e4 14300BE5 		str	r3, [fp, #-20]
2415:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4409              		.loc 1 2415 62
 4410 05e8 24301BE5 		ldr	r3, [fp, #-36]
 4411 05ec 143093E5 		ldr	r3, [r3, #20]
 4412              		.loc 1 2415 11
 4413 05f0 14201BE5 		ldr	r2, [fp, #-20]
 4414 05f4 030052E1 		cmp	r2, r3
 4415 05f8 0100002A 		bcs	.L278
2416:../../Source/Kernel/rme_kernel.c ****         {
2417:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2418:../../Source/Kernel/rme_kernel.c ****             
2419:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4416              		.loc 1 2419 20
 4417 05fc 0630E0E3 		mvn	r3, #6
 4418 0600 930000EA 		b	.L243
 4419              	.L278:
2420:../../Source/Kernel/rme_kernel.c ****         }
2421:../../Source/Kernel/rme_kernel.c ****         else
2422:../../Source/Kernel/rme_kernel.c ****         {
2423:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2424:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2425:../../Source/Kernel/rme_kernel.c ****         }
2426:../../Source/Kernel/rme_kernel.c **** 
2427:../../Source/Kernel/rme_kernel.c ****         /* Check the ranges of kernel memory */
2428:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin>Kom_Begin)
 4420              		.loc 1 2428 54
 4421 0604 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 122


 4422 0608 143093E5 		ldr	r3, [r3, #20]
 4423              		.loc 1 2428 11
 4424 060c 10201BE5 		ldr	r2, [fp, #-16]
 4425 0610 030052E1 		cmp	r2, r3
 4426 0614 0100002A 		bcs	.L279
2429:../../Source/Kernel/rme_kernel.c ****         {
2430:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2431:../../Source/Kernel/rme_kernel.c ****             
2432:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4427              		.loc 1 2432 20
 4428 0618 0630E0E3 		mvn	r3, #6
 4429 061c 8C0000EA 		b	.L243
 4430              	.L279:
2433:../../Source/Kernel/rme_kernel.c ****         }
2434:../../Source/Kernel/rme_kernel.c ****         else
2435:../../Source/Kernel/rme_kernel.c ****         {
2436:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2437:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2438:../../Source/Kernel/rme_kernel.c ****         }
2439:../../Source/Kernel/rme_kernel.c ****         
2440:../../Source/Kernel/rme_kernel.c ****         /* Internal encoding of 'end' is inclusive */
2441:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->End<(Kom_End-1U))
 4431              		.loc 1 2441 54
 4432 0620 24301BE5 		ldr	r3, [fp, #-36]
 4433 0624 182093E5 		ldr	r2, [r3, #24]
 4434              		.loc 1 2441 68
 4435 0628 14301BE5 		ldr	r3, [fp, #-20]
 4436 062c 013043E2 		sub	r3, r3, #1
 4437              		.loc 1 2441 11
 4438 0630 030052E1 		cmp	r2, r3
 4439 0634 0100002A 		bcs	.L280
2442:../../Source/Kernel/rme_kernel.c ****         {
2443:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2444:../../Source/Kernel/rme_kernel.c ****             
2445:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4440              		.loc 1 2445 20
 4441 0638 0630E0E3 		mvn	r3, #6
 4442 063c 840000EA 		b	.L243
 4443              	.L280:
2446:../../Source/Kernel/rme_kernel.c ****         }
2447:../../Source/Kernel/rme_kernel.c ****         else
2448:../../Source/Kernel/rme_kernel.c ****         {
2449:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2450:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2451:../../Source/Kernel/rme_kernel.c ****         }
2452:../../Source/Kernel/rme_kernel.c ****         
2453:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2454:../../Source/Kernel/rme_kernel.c ****         if(Kom_Flag==0U)
 4444              		.loc 1 2454 11
 4445 0640 18301BE5 		ldr	r3, [fp, #-24]
 4446 0644 000053E3 		cmp	r3, #0
 4447 0648 0100001A 		bne	.L281
2455:../../Source/Kernel/rme_kernel.c ****         {
2456:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2457:../../Source/Kernel/rme_kernel.c ****             
2458:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4448              		.loc 1 2458 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 123


 4449 064c 0630E0E3 		mvn	r3, #6
 4450 0650 7F0000EA 		b	.L243
 4451              	.L281:
2459:../../Source/Kernel/rme_kernel.c ****         }
2460:../../Source/Kernel/rme_kernel.c ****         else
2461:../../Source/Kernel/rme_kernel.c ****         {
2462:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2463:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2464:../../Source/Kernel/rme_kernel.c ****         }
2465:../../Source/Kernel/rme_kernel.c ****         
2466:../../Source/Kernel/rme_kernel.c ****         if((Kom_Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4452              		.loc 1 2466 41
 4453 0654 24301BE5 		ldr	r3, [fp, #-36]
 4454 0658 083093E5 		ldr	r3, [r3, #8]
 4455              		.loc 1 2466 23
 4456 065c 0320E0E1 		mvn	r2, r3
 4457              		.loc 1 2466 21
 4458 0660 18301BE5 		ldr	r3, [fp, #-24]
 4459 0664 023003E0 		and	r3, r3, r2
 4460              		.loc 1 2466 11
 4461 0668 000053E3 		cmp	r3, #0
 4462 066c 0F00000A 		beq	.L271
2467:../../Source/Kernel/rme_kernel.c ****         {
2468:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2469:../../Source/Kernel/rme_kernel.c ****             
2470:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4463              		.loc 1 2470 20
 4464 0670 0630E0E3 		mvn	r3, #6
 4465 0674 760000EA 		b	.L243
 4466              	.L275:
2471:../../Source/Kernel/rme_kernel.c ****         }
2472:../../Source/Kernel/rme_kernel.c ****         else
2473:../../Source/Kernel/rme_kernel.c ****         {
2474:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2475:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2476:../../Source/Kernel/rme_kernel.c ****         }
2477:../../Source/Kernel/rme_kernel.c ****     }
2478:../../Source/Kernel/rme_kernel.c ****     /* All other caps */
2479:../../Source/Kernel/rme_kernel.c ****     else
2480:../../Source/Kernel/rme_kernel.c ****     {
2481:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2482:../../Source/Kernel/rme_kernel.c ****         
2483:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2484:../../Source/Kernel/rme_kernel.c ****         if(Flag==0U)
 4467              		.loc 1 2484 11
 4468 0678 08309BE5 		ldr	r3, [fp, #8]
 4469 067c 000053E3 		cmp	r3, #0
 4470 0680 0100001A 		bne	.L282
2485:../../Source/Kernel/rme_kernel.c ****         {
2486:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2487:../../Source/Kernel/rme_kernel.c ****             
2488:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4471              		.loc 1 2488 20
 4472 0684 0630E0E3 		mvn	r3, #6
 4473 0688 710000EA 		b	.L243
 4474              	.L282:
2489:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 124


2490:../../Source/Kernel/rme_kernel.c ****         else
2491:../../Source/Kernel/rme_kernel.c ****         {
2492:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2493:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2494:../../Source/Kernel/rme_kernel.c ****         }
2495:../../Source/Kernel/rme_kernel.c ****         if((Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4475              		.loc 1 2495 37
 4476 068c 24301BE5 		ldr	r3, [fp, #-36]
 4477 0690 083093E5 		ldr	r3, [r3, #8]
 4478              		.loc 1 2495 19
 4479 0694 0320E0E1 		mvn	r2, r3
 4480              		.loc 1 2495 17
 4481 0698 08309BE5 		ldr	r3, [fp, #8]
 4482 069c 023003E0 		and	r3, r3, r2
 4483              		.loc 1 2495 11
 4484 06a0 000053E3 		cmp	r3, #0
 4485 06a4 0100000A 		beq	.L271
2496:../../Source/Kernel/rme_kernel.c ****         {
2497:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2498:../../Source/Kernel/rme_kernel.c ****             
2499:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4486              		.loc 1 2499 20
 4487 06a8 0630E0E3 		mvn	r3, #6
 4488 06ac 680000EA 		b	.L243
 4489              	.L271:
2500:../../Source/Kernel/rme_kernel.c ****         }
2501:../../Source/Kernel/rme_kernel.c ****         else
2502:../../Source/Kernel/rme_kernel.c ****         {
2503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2504:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2505:../../Source/Kernel/rme_kernel.c ****         }
2506:../../Source/Kernel/rme_kernel.c ****     }
2507:../../Source/Kernel/rme_kernel.c ****     
2508:../../Source/Kernel/rme_kernel.c ****     /* Is the destination slot unoccupied? */
2509:../../Source/Kernel/rme_kernel.c ****     if(Capobj_Dst->Head.Type_Stat!=0U)
 4490              		.loc 1 2509 24
 4491 06b0 20301BE5 		ldr	r3, [fp, #-32]
 4492 06b4 003093E5 		ldr	r3, [r3]
 4493              		.loc 1 2509 7
 4494 06b8 000053E3 		cmp	r3, #0
 4495 06bc 0100000A 		beq	.L283
2510:../../Source/Kernel/rme_kernel.c ****     {
2511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2512:../../Source/Kernel/rme_kernel.c ****             
2513:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_EXIST;
 4496              		.loc 1 2513 16
 4497 06c0 0430E0E3 		mvn	r3, #4
 4498 06c4 620000EA 		b	.L243
 4499              	.L283:
2514:../../Source/Kernel/rme_kernel.c ****     }
2515:../../Source/Kernel/rme_kernel.c ****     else
2516:../../Source/Kernel/rme_kernel.c ****     {
2517:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2518:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2519:../../Source/Kernel/rme_kernel.c ****     }
2520:../../Source/Kernel/rme_kernel.c ****     
2521:../../Source/Kernel/rme_kernel.c ****     /* Try to take the empty slot */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 125


2522:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Capobj_Dst);
 4500              		.loc 1 2522 5
 4501 06c8 20301BE5 		ldr	r3, [fp, #-32]
 4502 06cc 0128A0E3 		mov	r2, #65536
 4503 06d0 0010A0E3 		mov	r1, #0
 4504 06d4 0300A0E1 		mov	r0, r3
 4505 06d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4506 06dc 0030A0E1 		mov	r3, r0
 4507              		.loc 1 2522 5 is_stmt 0 discriminator 1
 4508 06e0 000053E3 		cmp	r3, #0
 4509 06e4 0100001A 		bne	.L284
 4510 06e8 0430E0E3 		mvn	r3, #4
 4511              		.loc 1 2522 5
 4512 06ec 580000EA 		b	.L243
 4513              	.L284:
 4514              		.loc 1 2522 5 discriminator 2
 4515 06f0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4516 06f4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4517 06f8 002093E5 		ldr	r2, [r3]
 4518 06fc 20301BE5 		ldr	r3, [fp, #-32]
 4519 0700 102083E5 		str	r2, [r3, #16]
2523:../../Source/Kernel/rme_kernel.c ****     
2524:../../Source/Kernel/rme_kernel.c ****     /* All done, we replicate the cap with flags */
2525:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_KOM)
 4520              		.loc 1 2525 7 is_stmt 1
 4521 0704 28301BE5 		ldr	r3, [fp, #-40]
 4522 0708 020053E3 		cmp	r3, #2
 4523 070c 1A00001A 		bne	.L285
2526:../../Source/Kernel/rme_kernel.c ****     {
2527:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2528:../../Source/Kernel/rme_kernel.c ****             
2529:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Kom_Flag);
 4524              		.loc 1 2529 9
 4525 0710 20301BE5 		ldr	r3, [fp, #-32]
 4526 0714 18201BE5 		ldr	r2, [fp, #-24]
 4527 0718 082083E5 		str	r2, [r3, #8]
 4528 071c 24301BE5 		ldr	r3, [fp, #-36]
 4529 0720 0C2093E5 		ldr	r2, [r3, #12]
 4530 0724 20301BE5 		ldr	r3, [fp, #-32]
 4531 0728 0C2083E5 		str	r2, [r3, #12]
 4532 072c 24301BE5 		ldr	r3, [fp, #-36]
 4533 0730 142093E5 		ldr	r2, [r3, #20]
 4534 0734 20301BE5 		ldr	r3, [fp, #-32]
 4535 0738 142083E5 		str	r2, [r3, #20]
 4536 073c 24301BE5 		ldr	r3, [fp, #-36]
 4537 0740 182093E5 		ldr	r2, [r3, #24]
 4538 0744 20301BE5 		ldr	r3, [fp, #-32]
 4539 0748 182083E5 		str	r2, [r3, #24]
 4540 074c 24301BE5 		ldr	r3, [fp, #-36]
 4541 0750 1C2093E5 		ldr	r2, [r3, #28]
 4542 0754 20301BE5 		ldr	r3, [fp, #-32]
 4543 0758 1C2083E5 		str	r2, [r3, #28]
2530:../../Source/Kernel/rme_kernel.c ****         /* Write absolute range information for kernel memory caps */
2531:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->Begin=Kom_Begin;
 4544              		.loc 1 2531 58
 4545 075c 20301BE5 		ldr	r3, [fp, #-32]
 4546 0760 10201BE5 		ldr	r2, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 126


 4547 0764 142083E5 		str	r2, [r3, #20]
2532:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End encoded inclusively to avoid overflow at max address */
2533:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->End=Kom_End-1U;
 4548              		.loc 1 2533 64
 4549 0768 14301BE5 		ldr	r3, [fp, #-20]
 4550 076c 012043E2 		sub	r2, r3, #1
 4551              		.loc 1 2533 56
 4552 0770 20301BE5 		ldr	r3, [fp, #-32]
 4553 0774 182083E5 		str	r2, [r3, #24]
 4554 0778 120000EA 		b	.L286
 4555              	.L285:
2534:../../Source/Kernel/rme_kernel.c ****     }
2535:../../Source/Kernel/rme_kernel.c ****     else
2536:../../Source/Kernel/rme_kernel.c ****     {
2537:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2538:../../Source/Kernel/rme_kernel.c ****         
2539:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Flag);
 4556              		.loc 1 2539 9
 4557 077c 20301BE5 		ldr	r3, [fp, #-32]
 4558 0780 08209BE5 		ldr	r2, [fp, #8]
 4559 0784 082083E5 		str	r2, [r3, #8]
 4560 0788 24301BE5 		ldr	r3, [fp, #-36]
 4561 078c 0C2093E5 		ldr	r2, [r3, #12]
 4562 0790 20301BE5 		ldr	r3, [fp, #-32]
 4563 0794 0C2083E5 		str	r2, [r3, #12]
 4564 0798 24301BE5 		ldr	r3, [fp, #-36]
 4565 079c 142093E5 		ldr	r2, [r3, #20]
 4566 07a0 20301BE5 		ldr	r3, [fp, #-32]
 4567 07a4 142083E5 		str	r2, [r3, #20]
 4568 07a8 24301BE5 		ldr	r3, [fp, #-36]
 4569 07ac 182093E5 		ldr	r2, [r3, #24]
 4570 07b0 20301BE5 		ldr	r3, [fp, #-32]
 4571 07b4 182083E5 		str	r2, [r3, #24]
 4572 07b8 24301BE5 		ldr	r3, [fp, #-36]
 4573 07bc 1C2093E5 		ldr	r2, [r3, #28]
 4574 07c0 20301BE5 		ldr	r3, [fp, #-32]
 4575 07c4 1C2083E5 		str	r2, [r3, #28]
 4576              	.L286:
2540:../../Source/Kernel/rme_kernel.c ****     }
2541:../../Source/Kernel/rme_kernel.c ****     
2542:../../Source/Kernel/rme_kernel.c ****     /* Set the parent and increase reference count - if this is actually needed.
2543:../../Source/Kernel/rme_kernel.c ****      * The only two cases where this is not needed are KFN and KOM. These two
2544:../../Source/Kernel/rme_kernel.c ****      * capability types are standalone on their own and do not need to reference
2545:../../Source/Kernel/rme_kernel.c ****      * their parent, nor will they update the parent's reference count. This
2546:../../Source/Kernel/rme_kernel.c ****      * design decision comes from the fact that these two capability types are
2547:../../Source/Kernel/rme_kernel.c ****      * always created on boot and delegated everywhere, and they don't actually
2548:../../Source/Kernel/rme_kernel.c ****      * have an object. If we use refcnt on these, we may cause scalability 
2549:../../Source/Kernel/rme_kernel.c ****      * issues. The parent cap can't be deleted anyway, so this is fine. */
2550:../../Source/Kernel/rme_kernel.c ****     if((Src_Type!=RME_CAP_TYPE_KOM)&&(Src_Type!=RME_CAP_TYPE_KFN))
 4577              		.loc 1 2550 7
 4578 07c8 28301BE5 		ldr	r3, [fp, #-40]
 4579 07cc 020053E3 		cmp	r3, #2
 4580 07d0 1400000A 		beq	.L287
 4581              		.loc 1 2550 36 discriminator 1
 4582 07d4 28301BE5 		ldr	r3, [fp, #-40]
 4583 07d8 010053E3 		cmp	r3, #1
 4584 07dc 1100000A 		beq	.L287
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 127


2551:../../Source/Kernel/rme_kernel.c ****     {
2552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2553:../../Source/Kernel/rme_kernel.c ****         
2554:../../Source/Kernel/rme_kernel.c ****         /* Register root */
2555:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=RME_CAP_CONV_ROOT(Capobj_Src,rme_ptr_t);
 4585              		.loc 1 2555 35
 4586 07e0 24301BE5 		ldr	r3, [fp, #-36]
 4587 07e4 003093E5 		ldr	r3, [r3]
 4588 07e8 7330FFE6 		uxth	r3, r3
 4589 07ec 000053E3 		cmp	r3, #0
 4590 07f0 0200000A 		beq	.L288
 4591              		.loc 1 2555 35 is_stmt 0 discriminator 1
 4592 07f4 24301BE5 		ldr	r3, [fp, #-36]
 4593 07f8 043093E5 		ldr	r3, [r3, #4]
 4594 07fc 000000EA 		b	.L289
 4595              	.L288:
 4596              		.loc 1 2555 35 discriminator 2
 4597 0800 24301BE5 		ldr	r3, [fp, #-36]
 4598              	.L289:
 4599              		.loc 1 2555 34 is_stmt 1 discriminator 4
 4600 0804 20201BE5 		ldr	r2, [fp, #-32]
 4601 0808 043082E5 		str	r3, [r2, #4]
2556:../../Source/Kernel/rme_kernel.c ****     
2557:../../Source/Kernel/rme_kernel.c ****         /* Increase the parent's refcnt - never overflows, guaranteed by field size */
2558:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(((volatile struct RME_Cap_Struct*)
 4602              		.loc 1 2558 9
 4603 080c 20301BE5 		ldr	r3, [fp, #-32]
 4604 0810 043093E5 		ldr	r3, [r3, #4]
 4605 0814 043083E2 		add	r3, r3, #4
 4606 0818 0110A0E3 		mov	r1, #1
 4607 081c 0300A0E1 		mov	r0, r3
 4608 0820 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4609 0824 020000EA 		b	.L290
 4610              	.L287:
2559:../../Source/Kernel/rme_kernel.c ****                         (Capobj_Dst->Head.Root_Ref))->Head.Root_Ref),1U);
2560:../../Source/Kernel/rme_kernel.c ****     }
2561:../../Source/Kernel/rme_kernel.c ****     else
2562:../../Source/Kernel/rme_kernel.c ****     {
2563:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2564:../../Source/Kernel/rme_kernel.c ****         
2565:../../Source/Kernel/rme_kernel.c ****         /* No root for KOM and KFN */
2566:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=0U;
 4611              		.loc 1 2566 34
 4612 0828 20301BE5 		ldr	r3, [fp, #-32]
 4613 082c 0020A0E3 		mov	r2, #0
 4614 0830 042083E5 		str	r2, [r3, #4]
 4615              	.L290:
2567:../../Source/Kernel/rme_kernel.c ****     }
2568:../../Source/Kernel/rme_kernel.c **** 
2569:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2570:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Capobj_Dst->Head.Type_Stat),
 4616              		.loc 1 2570 5
 4617 0834 20201BE5 		ldr	r2, [fp, #-32]
 4618 0838 28301BE5 		ldr	r3, [fp, #-40]
 4619 083c 033CA0E1 		lsl	r3, r3, #24
 4620 0840 013083E3 		orr	r3, r3, #1
 4621 0844 0310A0E1 		mov	r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 128


 4622 0848 0200A0E1 		mov	r0, r2
 4623 084c FEFFFFEB 		bl	__RME_A7A_Write_Release
2571:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(Src_Type,
2572:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2573:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_LEAF));
2574:../../Source/Kernel/rme_kernel.c **** 
2575:../../Source/Kernel/rme_kernel.c ****     return 0;
 4624              		.loc 1 2575 12
 4625 0850 0030A0E3 		mov	r3, #0
 4626              	.L243:
2576:../../Source/Kernel/rme_kernel.c **** }
 4627              		.loc 1 2576 1
 4628 0854 0300A0E1 		mov	r0, r3
 4629 0858 04D04BE2 		sub	sp, fp, #4
 4630              		.cfi_def_cfa 13, 8
 4631              		@ sp needed
 4632 085c 0088BDE8 		pop	{fp, pc}
 4633              		.cfi_endproc
 4634              	.LFE27:
 4636              		.section	.text._RME_Cpt_Rem,"ax",%progbits
 4637              		.align	2
 4638              		.syntax unified
 4639              		.arm
 4641              	_RME_Cpt_Rem:
 4642              	.LFB28:
2577:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Add *************************************************/
2578:../../Source/Kernel/rme_kernel.c **** 
2579:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Rem ******************************************************
2580:../../Source/Kernel/rme_kernel.c **** Description : Remove one capability from the capability table. This function
2581:../../Source/Kernel/rme_kernel.c ****               reverts the delegation.
2582:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2583:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Rem - The capability to the capability table to
2584:../../Source/Kernel/rme_kernel.c ****                                       remove from.
2585:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2586:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Rem - The capability slot you want to remove.
2587:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2588:../../Source/Kernel/rme_kernel.c **** Output      : None.
2589:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2590:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2591:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Rem(struct RME_Cap_Cpt* Cpt,
2592:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Rem,
2593:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Rem)
2594:../../Source/Kernel/rme_kernel.c **** {
 4643              		.loc 1 2594 1
 4644              		.cfi_startproc
 4645              		@ args = 0, pretend = 0, frame = 40
 4646              		@ frame_needed = 1, uses_anonymous_args = 0
 4647 0000 00482DE9 		push	{fp, lr}
 4648              		.cfi_def_cfa_offset 8
 4649              		.cfi_offset 11, -8
 4650              		.cfi_offset 14, -4
 4651 0004 04B08DE2 		add	fp, sp, #4
 4652              		.cfi_def_cfa 11, 4
 4653 0008 28D04DE2 		sub	sp, sp, #40
 4654 000c 20000BE5 		str	r0, [fp, #-32]
 4655 0010 24100BE5 		str	r1, [fp, #-36]
 4656 0014 28200BE5 		str	r2, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 129


2595:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2596:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Rem;
2597:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2598:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Rem_Type;
2599:../../Source/Kernel/rme_kernel.c ****     /* This is used for removal */
2600:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Root;
2601:../../Source/Kernel/rme_kernel.c ****     
2602:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2603:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Rem,RME_CAP_TYPE_CPT,
 4657              		.loc 1 2603 5
 4658 0018 24301BE5 		ldr	r3, [fp, #-36]
 4659 001c 803003E2 		and	r3, r3, #128
 4660 0020 000053E3 		cmp	r3, #0
 4661 0024 1C00001A 		bne	.L292
 4662              		.loc 1 2603 5 is_stmt 0 discriminator 1
 4663 0028 20301BE5 		ldr	r3, [fp, #-32]
 4664 002c 142093E5 		ldr	r2, [r3, #20]
 4665 0030 24301BE5 		ldr	r3, [fp, #-36]
 4666 0034 030052E1 		cmp	r2, r3
 4667 0038 0100008A 		bhi	.L293
 4668              		.loc 1 2603 5 discriminator 3
 4669 003c 0230E0E3 		mvn	r3, #2
 4670              		.loc 1 2603 5
 4671 0040 AB0000EA 		b	.L294
 4672              	.L293:
 4673              		.loc 1 2603 5 discriminator 4
 4674 0044 24301BE5 		ldr	r3, [fp, #-36]
 4675 0048 8322A0E1 		lsl	r2, r3, #5
 4676 004c 20301BE5 		ldr	r3, [fp, #-32]
 4677 0050 0C3093E5 		ldr	r3, [r3, #12]
 4678 0054 033082E0 		add	r3, r2, r3
 4679 0058 08300BE5 		str	r3, [fp, #-8]
 4680 005c 08301BE5 		ldr	r3, [fp, #-8]
 4681 0060 0300A0E1 		mov	r0, r3
 4682 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4683 0068 0C000BE5 		str	r0, [fp, #-12]
 4684              		.loc 1 2603 5 discriminator 1
 4685 006c 0C301BE5 		ldr	r3, [fp, #-12]
 4686 0070 FF3803E2 		and	r3, r3, #16711680
 4687 0074 020853E3 		cmp	r3, #131072
 4688 0078 0100001A 		bne	.L295
 4689              		.loc 1 2603 5 discriminator 5
 4690 007c 0830E0E3 		mvn	r3, #8
 4691              		.loc 1 2603 5
 4692 0080 9B0000EA 		b	.L294
 4693              	.L295:
 4694              		.loc 1 2603 5 discriminator 6
 4695 0084 0C301BE5 		ldr	r3, [fp, #-12]
 4696 0088 233CA0E1 		lsr	r3, r3, #24
 4697 008c 030053E3 		cmp	r3, #3
 4698 0090 3F00000A 		beq	.L296
 4699              		.loc 1 2603 5 discriminator 7
 4700 0094 0130E0E3 		mvn	r3, #1
 4701              		.loc 1 2603 5
 4702 0098 950000EA 		b	.L294
 4703              	.L292:
 4704              		.loc 1 2603 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 130


 4705 009c 24301BE5 		ldr	r3, [fp, #-36]
 4706 00a0 2324A0E1 		lsr	r2, r3, #8
 4707 00a4 20301BE5 		ldr	r3, [fp, #-32]
 4708 00a8 143093E5 		ldr	r3, [r3, #20]
 4709 00ac 030052E1 		cmp	r2, r3
 4710 00b0 0100003A 		bcc	.L297
 4711              		.loc 1 2603 5 discriminator 8
 4712 00b4 0230E0E3 		mvn	r3, #2
 4713              		.loc 1 2603 5
 4714 00b8 8D0000EA 		b	.L294
 4715              	.L297:
 4716              		.loc 1 2603 5 discriminator 9
 4717 00bc 24301BE5 		ldr	r3, [fp, #-36]
 4718 00c0 2334A0E1 		lsr	r3, r3, #8
 4719 00c4 8322A0E1 		lsl	r2, r3, #5
 4720 00c8 20301BE5 		ldr	r3, [fp, #-32]
 4721 00cc 0C3093E5 		ldr	r3, [r3, #12]
 4722 00d0 033082E0 		add	r3, r2, r3
 4723 00d4 08300BE5 		str	r3, [fp, #-8]
 4724 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4725 00dc 0300A0E1 		mov	r0, r3
 4726 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4727 00e4 0C000BE5 		str	r0, [fp, #-12]
 4728              		.loc 1 2603 5 discriminator 1
 4729 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 4730 00ec FF3803E2 		and	r3, r3, #16711680
 4731 00f0 020853E3 		cmp	r3, #131072
 4732 00f4 0100001A 		bne	.L298
 4733              		.loc 1 2603 5 discriminator 10
 4734 00f8 0830E0E3 		mvn	r3, #8
 4735              		.loc 1 2603 5
 4736 00fc 7C0000EA 		b	.L294
 4737              	.L298:
 4738              		.loc 1 2603 5 discriminator 11
 4739 0100 0C301BE5 		ldr	r3, [fp, #-12]
 4740 0104 233CA0E1 		lsr	r3, r3, #24
 4741 0108 030053E3 		cmp	r3, #3
 4742 010c 0100000A 		beq	.L299
 4743              		.loc 1 2603 5 discriminator 12
 4744 0110 0130E0E3 		mvn	r3, #1
 4745              		.loc 1 2603 5
 4746 0114 760000EA 		b	.L294
 4747              	.L299:
 4748              		.loc 1 2603 5 discriminator 13
 4749 0118 24301BE5 		ldr	r3, [fp, #-36]
 4750 011c 7F2003E2 		and	r2, r3, #127
 4751 0120 08301BE5 		ldr	r3, [fp, #-8]
 4752 0124 143093E5 		ldr	r3, [r3, #20]
 4753 0128 030052E1 		cmp	r2, r3
 4754 012c 0100003A 		bcc	.L300
 4755              		.loc 1 2603 5 discriminator 14
 4756 0130 0230E0E3 		mvn	r3, #2
 4757              		.loc 1 2603 5
 4758 0134 6E0000EA 		b	.L294
 4759              	.L300:
 4760              		.loc 1 2603 5 discriminator 15
 4761 0138 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 131


 4762 013c 7F3003E2 		and	r3, r3, #127
 4763 0140 8322A0E1 		lsl	r2, r3, #5
 4764 0144 08301BE5 		ldr	r3, [fp, #-8]
 4765 0148 0C3093E5 		ldr	r3, [r3, #12]
 4766 014c 033082E0 		add	r3, r2, r3
 4767 0150 08300BE5 		str	r3, [fp, #-8]
 4768 0154 08301BE5 		ldr	r3, [fp, #-8]
 4769 0158 0300A0E1 		mov	r0, r3
 4770 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4771 0160 0C000BE5 		str	r0, [fp, #-12]
 4772              		.loc 1 2603 5 discriminator 1
 4773 0164 0C301BE5 		ldr	r3, [fp, #-12]
 4774 0168 FF3803E2 		and	r3, r3, #16711680
 4775 016c 020853E3 		cmp	r3, #131072
 4776 0170 0100001A 		bne	.L301
 4777              		.loc 1 2603 5 discriminator 16
 4778 0174 0830E0E3 		mvn	r3, #8
 4779              		.loc 1 2603 5
 4780 0178 5D0000EA 		b	.L294
 4781              	.L301:
 4782              		.loc 1 2603 5 discriminator 17
 4783 017c 0C301BE5 		ldr	r3, [fp, #-12]
 4784 0180 233CA0E1 		lsr	r3, r3, #24
 4785 0184 030053E3 		cmp	r3, #3
 4786 0188 0100000A 		beq	.L296
 4787              		.loc 1 2603 5 discriminator 18
 4788 018c 0130E0E3 		mvn	r3, #1
 4789              		.loc 1 2603 5
 4790 0190 570000EA 		b	.L294
 4791              	.L296:
2604:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2605:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2606:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_REM);
 4792              		.loc 1 2606 5 is_stmt 1
 4793 0194 08301BE5 		ldr	r3, [fp, #-8]
 4794 0198 083093E5 		ldr	r3, [r3, #8]
 4795 019c 203003E2 		and	r3, r3, #32
 4796 01a0 000053E3 		cmp	r3, #0
 4797 01a4 0100001A 		bne	.L302
 4798              		.loc 1 2606 5 is_stmt 0 discriminator 1
 4799 01a8 0630E0E3 		mvn	r3, #6
 4800              		.loc 1 2606 5
 4801 01ac 500000EA 		b	.L294
 4802              	.L302:
2607:../../Source/Kernel/rme_kernel.c ****     
2608:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2609:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Rem,struct RME_Cap_Struct*,Capobj_Rem);
 4803              		.loc 1 2609 5 is_stmt 1
 4804 01b0 08301BE5 		ldr	r3, [fp, #-8]
 4805 01b4 142093E5 		ldr	r2, [r3, #20]
 4806 01b8 28301BE5 		ldr	r3, [fp, #-40]
 4807 01bc 030052E1 		cmp	r2, r3
 4808 01c0 0100008A 		bhi	.L303
 4809              		.loc 1 2609 5 is_stmt 0 discriminator 1
 4810 01c4 0230E0E3 		mvn	r3, #2
 4811              		.loc 1 2609 5
 4812 01c8 490000EA 		b	.L294
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 132


 4813              	.L303:
 4814              		.loc 1 2609 5 discriminator 2
 4815 01cc 28301BE5 		ldr	r3, [fp, #-40]
 4816 01d0 8322A0E1 		lsl	r2, r3, #5
 4817 01d4 08301BE5 		ldr	r3, [fp, #-8]
 4818 01d8 0C3093E5 		ldr	r3, [r3, #12]
 4819 01dc 033082E0 		add	r3, r2, r3
 4820 01e0 10300BE5 		str	r3, [fp, #-16]
2610:../../Source/Kernel/rme_kernel.c ****     /* Removal check */
2611:../../Source/Kernel/rme_kernel.c ****     RME_CAP_REM_CHECK(Capobj_Rem,Type_Stat);
 4821              		.loc 1 2611 5 is_stmt 1
 4822 01e4 10301BE5 		ldr	r3, [fp, #-16]
 4823 01e8 0300A0E1 		mov	r0, r3
 4824 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4825 01f0 0C000BE5 		str	r0, [fp, #-12]
 4826              		.loc 1 2611 5 is_stmt 0 discriminator 1
 4827 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 4828 01f8 FF3803E2 		and	r3, r3, #16711680
 4829 01fc 020853E3 		cmp	r3, #131072
 4830 0200 0100000A 		beq	.L304
 4831 0204 0830E0E3 		mvn	r3, #8
 4832              		.loc 1 2611 5
 4833 0208 390000EA 		b	.L294
 4834              	.L304:
 4835              		.loc 1 2611 5 discriminator 2
 4836 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4837 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4838 0214 002093E5 		ldr	r2, [r3]
 4839 0218 10301BE5 		ldr	r3, [fp, #-16]
 4840 021c 103093E5 		ldr	r3, [r3, #16]
 4841 0220 0310A0E1 		mov	r1, r3
 4842 0224 0200A0E1 		mov	r0, r2
 4843 0228 FEFFFFEB 		bl	_RME_Diff
 4844 022c 0030A0E1 		mov	r3, r0
 4845              		.loc 1 2611 5 discriminator 1
 4846 0230 0A0053E3 		cmp	r3, #10
 4847 0234 0100008A 		bhi	.L305
 4848              		.loc 1 2611 5 discriminator 3
 4849 0238 0730E0E3 		mvn	r3, #7
 4850              		.loc 1 2611 5
 4851 023c 2C0000EA 		b	.L294
 4852              	.L305:
 4853              		.loc 1 2611 5 discriminator 4
 4854 0240 0C301BE5 		ldr	r3, [fp, #-12]
 4855 0244 7330FFE6 		uxth	r3, r3
 4856 0248 000053E3 		cmp	r3, #0
 4857 024c 0100001A 		bne	.L306
 4858              		.loc 1 2611 5 discriminator 5
 4859 0250 0930E0E3 		mvn	r3, #9
 4860              		.loc 1 2611 5
 4861 0254 260000EA 		b	.L294
 4862              	.L306:
2612:../../Source/Kernel/rme_kernel.c ****     
2613:../../Source/Kernel/rme_kernel.c ****     /* If we are KFN or KOM, we don't care about parent or refcnt */
2614:../../Source/Kernel/rme_kernel.c ****     Rem_Type=RME_CAP_TYPE(Type_Stat);
 4863              		.loc 1 2614 13 is_stmt 1
 4864 0258 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 133


 4865 025c 233CA0E1 		lsr	r3, r3, #24
 4866 0260 14300BE5 		str	r3, [fp, #-20]
2615:../../Source/Kernel/rme_kernel.c ****     if((Rem_Type!=RME_CAP_TYPE_KOM)&&(Rem_Type!=RME_CAP_TYPE_KFN))
 4867              		.loc 1 2615 7
 4868 0264 14301BE5 		ldr	r3, [fp, #-20]
 4869 0268 020053E3 		cmp	r3, #2
 4870 026c 1500000A 		beq	.L307
 4871              		.loc 1 2615 36 discriminator 1
 4872 0270 14301BE5 		ldr	r3, [fp, #-20]
 4873 0274 010053E3 		cmp	r3, #1
 4874 0278 1200000A 		beq	.L307
2616:../../Source/Kernel/rme_kernel.c ****     {
2617:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2618:../../Source/Kernel/rme_kernel.c ****         
2619:../../Source/Kernel/rme_kernel.c ****         /* Remember this for refcnt operations */
2620:../../Source/Kernel/rme_kernel.c ****         Capobj_Root=(struct RME_Cap_Struct*)(Capobj_Rem->Head.Root_Ref);
 4875              		.loc 1 2620 62
 4876 027c 10301BE5 		ldr	r3, [fp, #-16]
 4877 0280 043093E5 		ldr	r3, [r3, #4]
 4878              		.loc 1 2620 20
 4879 0284 18300BE5 		str	r3, [fp, #-24]
2621:../../Source/Kernel/rme_kernel.c ****         
2622:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4880              		.loc 1 2622 9
 4881 0288 10301BE5 		ldr	r3, [fp, #-16]
 4882 028c 0020A0E3 		mov	r2, #0
 4883 0290 0C101BE5 		ldr	r1, [fp, #-12]
 4884 0294 0300A0E1 		mov	r0, r3
 4885 0298 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4886 029c 0030A0E1 		mov	r3, r0
 4887              		.loc 1 2622 9 is_stmt 0 discriminator 1
 4888 02a0 000053E3 		cmp	r3, #0
 4889 02a4 0100001A 		bne	.L308
 4890 02a8 0030E0E3 		mvn	r3, #0
 4891              		.loc 1 2622 9
 4892 02ac 100000EA 		b	.L294
 4893              	.L308:
2623:../../Source/Kernel/rme_kernel.c **** 
2624:../../Source/Kernel/rme_kernel.c ****         /* Check done, decrease its parent's refcnt. This must be done at last */
2625:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Capobj_Root->Head.Root_Ref),-1);
 4894              		.loc 1 2625 9 is_stmt 1
 4895 02b0 18301BE5 		ldr	r3, [fp, #-24]
 4896 02b4 043083E2 		add	r3, r3, #4
 4897 02b8 0010E0E3 		mvn	r1, #0
 4898 02bc 0300A0E1 		mov	r0, r3
 4899 02c0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4900 02c4 090000EA 		b	.L309
 4901              	.L307:
2626:../../Source/Kernel/rme_kernel.c ****     }
2627:../../Source/Kernel/rme_kernel.c ****     else
2628:../../Source/Kernel/rme_kernel.c ****     {
2629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2630:../../Source/Kernel/rme_kernel.c **** 
2631:../../Source/Kernel/rme_kernel.c ****         /* Helping also applies here */
2632:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4902              		.loc 1 2632 9
 4903 02c8 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 134


 4904 02cc 0020A0E3 		mov	r2, #0
 4905 02d0 0C101BE5 		ldr	r1, [fp, #-12]
 4906 02d4 0300A0E1 		mov	r0, r3
 4907 02d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4908 02dc 0030A0E1 		mov	r3, r0
 4909              		.loc 1 2632 9 is_stmt 0 discriminator 1
 4910 02e0 000053E3 		cmp	r3, #0
 4911 02e4 0100001A 		bne	.L309
 4912 02e8 0030E0E3 		mvn	r3, #0
 4913              		.loc 1 2632 9
 4914 02ec 000000EA 		b	.L294
 4915              	.L309:
2633:../../Source/Kernel/rme_kernel.c ****     }
2634:../../Source/Kernel/rme_kernel.c ****     
2635:../../Source/Kernel/rme_kernel.c ****     return 0;
 4916              		.loc 1 2635 12 is_stmt 1
 4917 02f0 0030A0E3 		mov	r3, #0
 4918              	.L294:
2636:../../Source/Kernel/rme_kernel.c **** }
 4919              		.loc 1 2636 1
 4920 02f4 0300A0E1 		mov	r0, r3
 4921 02f8 04D04BE2 		sub	sp, fp, #4
 4922              		.cfi_def_cfa 13, 8
 4923              		@ sp needed
 4924 02fc 0088BDE8 		pop	{fp, pc}
 4925              		.cfi_endproc
 4926              	.LFE28:
 4928              		.section	.text._RME_Pgt_Boot_Crt,"ax",%progbits
 4929              		.align	2
 4930              		.global	_RME_Pgt_Boot_Crt
 4931              		.syntax unified
 4932              		.arm
 4934              	_RME_Pgt_Boot_Crt:
 4935              	.LFB29:
2637:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Rem *************************************************/
2638:../../Source/Kernel/rme_kernel.c **** 
2639:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Crt *************************************************
2640:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time page table.
2641:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
2642:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2643:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
2644:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
2645:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2646:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
2647:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
2648:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2649:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the page table.
2650:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
2651:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
2652:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
2653:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
2654:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page
2655:../../Source/Kernel/rme_kernel.c ****                                  directories into it.
2656:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
2657:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the
2658:../../Source/Kernel/rme_kernel.c ****                                      page directory.
2659:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the page
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 135


2660:../../Source/Kernel/rme_kernel.c ****                                     table.
2661:../../Source/Kernel/rme_kernel.c **** Output      : None.
2662:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2663:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2664:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2665:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
2666:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
2667:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt,
2668:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
2669:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Base,
2670:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Is_Top,
2671:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Size_Order,
2672:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Num_Order)
2673:../../Source/Kernel/rme_kernel.c **** {
 4936              		.loc 1 2673 1
 4937              		.cfi_startproc
 4938              		@ args = 16, pretend = 0, frame = 32
 4939              		@ frame_needed = 1, uses_anonymous_args = 0
 4940 0000 00482DE9 		push	{fp, lr}
 4941              		.cfi_def_cfa_offset 8
 4942              		.cfi_offset 11, -8
 4943              		.cfi_offset 14, -4
 4944 0004 04B08DE2 		add	fp, sp, #4
 4945              		.cfi_def_cfa 11, 4
 4946 0008 28D04DE2 		sub	sp, sp, #40
 4947 000c 18000BE5 		str	r0, [fp, #-24]
 4948 0010 1C100BE5 		str	r1, [fp, #-28]
 4949 0014 20200BE5 		str	r2, [fp, #-32]
 4950 0018 24300BE5 		str	r3, [fp, #-36]
2674:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2675:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
2676:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2677:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
2678:../../Source/Kernel/rme_kernel.c ****     
2679:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
2680:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
2681:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 4951              		.loc 1 2681 19
 4952 001c 0C209BE5 		ldr	r2, [fp, #12]
 4953 0020 10309BE5 		ldr	r3, [fp, #16]
 4954 0024 033082E0 		add	r3, r2, r3
 4955              		.loc 1 2681 7
 4956 0028 200053E3 		cmp	r3, #32
 4957 002c 0100009A 		bls	.L311
2682:../../Source/Kernel/rme_kernel.c ****     {
2683:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2684:../../Source/Kernel/rme_kernel.c **** 
2685:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4958              		.loc 1 2685 16
 4959 0030 6630E0E3 		mvn	r3, #102
 4960 0034 D00000EA 		b	.L312
 4961              	.L311:
2686:../../Source/Kernel/rme_kernel.c ****     }
2687:../../Source/Kernel/rme_kernel.c ****     else
2688:../../Source/Kernel/rme_kernel.c ****     {
2689:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2690:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 136


2691:../../Source/Kernel/rme_kernel.c ****     }
2692:../../Source/Kernel/rme_kernel.c **** 
2693:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
2694:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 4962              		.loc 1 2694 5
 4963 0038 1C301BE5 		ldr	r3, [fp, #-28]
 4964 003c 803003E2 		and	r3, r3, #128
 4965 0040 000053E3 		cmp	r3, #0
 4966 0044 1C00001A 		bne	.L313
 4967              		.loc 1 2694 5 is_stmt 0 discriminator 1
 4968 0048 18301BE5 		ldr	r3, [fp, #-24]
 4969 004c 142093E5 		ldr	r2, [r3, #20]
 4970 0050 1C301BE5 		ldr	r3, [fp, #-28]
 4971 0054 030052E1 		cmp	r2, r3
 4972 0058 0100008A 		bhi	.L314
 4973              		.loc 1 2694 5 discriminator 3
 4974 005c 0230E0E3 		mvn	r3, #2
 4975              		.loc 1 2694 5
 4976 0060 C50000EA 		b	.L312
 4977              	.L314:
 4978              		.loc 1 2694 5 discriminator 4
 4979 0064 1C301BE5 		ldr	r3, [fp, #-28]
 4980 0068 8322A0E1 		lsl	r2, r3, #5
 4981 006c 18301BE5 		ldr	r3, [fp, #-24]
 4982 0070 0C3093E5 		ldr	r3, [r3, #12]
 4983 0074 033082E0 		add	r3, r2, r3
 4984 0078 0C300BE5 		str	r3, [fp, #-12]
 4985 007c 0C301BE5 		ldr	r3, [fp, #-12]
 4986 0080 0300A0E1 		mov	r0, r3
 4987 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4988 0088 10000BE5 		str	r0, [fp, #-16]
 4989              		.loc 1 2694 5 discriminator 1
 4990 008c 10301BE5 		ldr	r3, [fp, #-16]
 4991 0090 FF3803E2 		and	r3, r3, #16711680
 4992 0094 020853E3 		cmp	r3, #131072
 4993 0098 0100001A 		bne	.L315
 4994              		.loc 1 2694 5 discriminator 5
 4995 009c 0830E0E3 		mvn	r3, #8
 4996              		.loc 1 2694 5
 4997 00a0 B50000EA 		b	.L312
 4998              	.L315:
 4999              		.loc 1 2694 5 discriminator 6
 5000 00a4 10301BE5 		ldr	r3, [fp, #-16]
 5001 00a8 233CA0E1 		lsr	r3, r3, #24
 5002 00ac 030053E3 		cmp	r3, #3
 5003 00b0 3F00000A 		beq	.L316
 5004              		.loc 1 2694 5 discriminator 7
 5005 00b4 0130E0E3 		mvn	r3, #1
 5006              		.loc 1 2694 5
 5007 00b8 AF0000EA 		b	.L312
 5008              	.L313:
 5009              		.loc 1 2694 5 discriminator 2
 5010 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 5011 00c0 2324A0E1 		lsr	r2, r3, #8
 5012 00c4 18301BE5 		ldr	r3, [fp, #-24]
 5013 00c8 143093E5 		ldr	r3, [r3, #20]
 5014 00cc 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 137


 5015 00d0 0100003A 		bcc	.L317
 5016              		.loc 1 2694 5 discriminator 8
 5017 00d4 0230E0E3 		mvn	r3, #2
 5018              		.loc 1 2694 5
 5019 00d8 A70000EA 		b	.L312
 5020              	.L317:
 5021              		.loc 1 2694 5 discriminator 9
 5022 00dc 1C301BE5 		ldr	r3, [fp, #-28]
 5023 00e0 2334A0E1 		lsr	r3, r3, #8
 5024 00e4 8322A0E1 		lsl	r2, r3, #5
 5025 00e8 18301BE5 		ldr	r3, [fp, #-24]
 5026 00ec 0C3093E5 		ldr	r3, [r3, #12]
 5027 00f0 033082E0 		add	r3, r2, r3
 5028 00f4 0C300BE5 		str	r3, [fp, #-12]
 5029 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 5030 00fc 0300A0E1 		mov	r0, r3
 5031 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5032 0104 10000BE5 		str	r0, [fp, #-16]
 5033              		.loc 1 2694 5 discriminator 1
 5034 0108 10301BE5 		ldr	r3, [fp, #-16]
 5035 010c FF3803E2 		and	r3, r3, #16711680
 5036 0110 020853E3 		cmp	r3, #131072
 5037 0114 0100001A 		bne	.L318
 5038              		.loc 1 2694 5 discriminator 10
 5039 0118 0830E0E3 		mvn	r3, #8
 5040              		.loc 1 2694 5
 5041 011c 960000EA 		b	.L312
 5042              	.L318:
 5043              		.loc 1 2694 5 discriminator 11
 5044 0120 10301BE5 		ldr	r3, [fp, #-16]
 5045 0124 233CA0E1 		lsr	r3, r3, #24
 5046 0128 030053E3 		cmp	r3, #3
 5047 012c 0100000A 		beq	.L319
 5048              		.loc 1 2694 5 discriminator 12
 5049 0130 0130E0E3 		mvn	r3, #1
 5050              		.loc 1 2694 5
 5051 0134 900000EA 		b	.L312
 5052              	.L319:
 5053              		.loc 1 2694 5 discriminator 13
 5054 0138 1C301BE5 		ldr	r3, [fp, #-28]
 5055 013c 7F2003E2 		and	r2, r3, #127
 5056 0140 0C301BE5 		ldr	r3, [fp, #-12]
 5057 0144 143093E5 		ldr	r3, [r3, #20]
 5058 0148 030052E1 		cmp	r2, r3
 5059 014c 0100003A 		bcc	.L320
 5060              		.loc 1 2694 5 discriminator 14
 5061 0150 0230E0E3 		mvn	r3, #2
 5062              		.loc 1 2694 5
 5063 0154 880000EA 		b	.L312
 5064              	.L320:
 5065              		.loc 1 2694 5 discriminator 15
 5066 0158 1C301BE5 		ldr	r3, [fp, #-28]
 5067 015c 7F3003E2 		and	r3, r3, #127
 5068 0160 8322A0E1 		lsl	r2, r3, #5
 5069 0164 0C301BE5 		ldr	r3, [fp, #-12]
 5070 0168 0C3093E5 		ldr	r3, [r3, #12]
 5071 016c 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 138


 5072 0170 0C300BE5 		str	r3, [fp, #-12]
 5073 0174 0C301BE5 		ldr	r3, [fp, #-12]
 5074 0178 0300A0E1 		mov	r0, r3
 5075 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5076 0180 10000BE5 		str	r0, [fp, #-16]
 5077              		.loc 1 2694 5 discriminator 1
 5078 0184 10301BE5 		ldr	r3, [fp, #-16]
 5079 0188 FF3803E2 		and	r3, r3, #16711680
 5080 018c 020853E3 		cmp	r3, #131072
 5081 0190 0100001A 		bne	.L321
 5082              		.loc 1 2694 5 discriminator 16
 5083 0194 0830E0E3 		mvn	r3, #8
 5084              		.loc 1 2694 5
 5085 0198 770000EA 		b	.L312
 5086              	.L321:
 5087              		.loc 1 2694 5 discriminator 17
 5088 019c 10301BE5 		ldr	r3, [fp, #-16]
 5089 01a0 233CA0E1 		lsr	r3, r3, #24
 5090 01a4 030053E3 		cmp	r3, #3
 5091 01a8 0100000A 		beq	.L316
 5092              		.loc 1 2694 5 discriminator 18
 5093 01ac 0130E0E3 		mvn	r3, #1
 5094              		.loc 1 2694 5
 5095 01b0 710000EA 		b	.L312
 5096              	.L316:
2695:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
2696:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2697:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 5097              		.loc 1 2697 5 is_stmt 1
 5098 01b4 0C301BE5 		ldr	r3, [fp, #-12]
 5099 01b8 083093E5 		ldr	r3, [r3, #8]
 5100 01bc 013003E2 		and	r3, r3, #1
 5101 01c0 000053E3 		cmp	r3, #0
 5102 01c4 0100001A 		bne	.L322
 5103              		.loc 1 2697 5 is_stmt 0 discriminator 1
 5104 01c8 0630E0E3 		mvn	r3, #6
 5105              		.loc 1 2697 5
 5106 01cc 6A0000EA 		b	.L312
 5107              	.L322:
2698:../../Source/Kernel/rme_kernel.c ****     
2699:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
2700:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)!=0)
 5108              		.loc 1 2700 8 is_stmt 1
 5109 01d0 24301BE5 		ldr	r3, [fp, #-36]
 5110 01d4 00308DE5 		str	r3, [sp]
 5111 01d8 10309BE5 		ldr	r3, [fp, #16]
 5112 01dc 0C209BE5 		ldr	r2, [fp, #12]
 5113 01e0 08109BE5 		ldr	r1, [fp, #8]
 5114 01e4 04009BE5 		ldr	r0, [fp, #4]
 5115 01e8 FEFFFFEB 		bl	__RME_Pgt_Check
 5116 01ec 0030A0E1 		mov	r3, r0
 5117              		.loc 1 2700 7 discriminator 1
 5118 01f0 000053E3 		cmp	r3, #0
 5119 01f4 0100000A 		beq	.L323
2701:../../Source/Kernel/rme_kernel.c ****     {
2702:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2703:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 139


2704:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5120              		.loc 1 2704 16
 5121 01f8 6630E0E3 		mvn	r3, #102
 5122 01fc 5E0000EA 		b	.L312
 5123              	.L323:
2705:../../Source/Kernel/rme_kernel.c ****     }
2706:../../Source/Kernel/rme_kernel.c ****     else
2707:../../Source/Kernel/rme_kernel.c ****     {
2708:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2709:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2710:../../Source/Kernel/rme_kernel.c ****     }
2711:../../Source/Kernel/rme_kernel.c ****     
2712:../../Source/Kernel/rme_kernel.c ****     /* Check if the base address is properly aligned to the total order of the page table */
2713:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 5124              		.loc 1 2713 14
 5125 0200 0C209BE5 		ldr	r2, [fp, #12]
 5126 0204 10309BE5 		ldr	r3, [fp, #16]
 5127 0208 033082E0 		add	r3, r2, r3
 5128 020c 203063E2 		rsb	r3, r3, #32
 5129 0210 0020E0E3 		mvn	r2, #0
 5130 0214 3223A0E1 		lsr	r2, r2, r3
 5131              		.loc 1 2713 13
 5132 0218 04309BE5 		ldr	r3, [fp, #4]
 5133 021c 023003E0 		and	r3, r3, r2
 5134              		.loc 1 2713 7
 5135 0220 000053E3 		cmp	r3, #0
 5136 0224 0100000A 		beq	.L324
2714:../../Source/Kernel/rme_kernel.c ****     {
2715:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2716:../../Source/Kernel/rme_kernel.c **** 
2717:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5137              		.loc 1 2717 16
 5138 0228 6630E0E3 		mvn	r3, #102
 5139 022c 520000EA 		b	.L312
 5140              	.L324:
2718:../../Source/Kernel/rme_kernel.c ****     }
2719:../../Source/Kernel/rme_kernel.c ****     else
2720:../../Source/Kernel/rme_kernel.c ****     {
2721:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2722:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2723:../../Source/Kernel/rme_kernel.c ****     }
2724:../../Source/Kernel/rme_kernel.c **** 
2725:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2726:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 5141              		.loc 1 2726 5
 5142 0230 0C301BE5 		ldr	r3, [fp, #-12]
 5143 0234 142093E5 		ldr	r2, [r3, #20]
 5144 0238 20301BE5 		ldr	r3, [fp, #-32]
 5145 023c 030052E1 		cmp	r2, r3
 5146 0240 0100008A 		bhi	.L325
 5147              		.loc 1 2726 5 is_stmt 0 discriminator 1
 5148 0244 0230E0E3 		mvn	r3, #2
 5149              		.loc 1 2726 5
 5150 0248 4B0000EA 		b	.L312
 5151              	.L325:
 5152              		.loc 1 2726 5 discriminator 2
 5153 024c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 140


 5154 0250 8322A0E1 		lsl	r2, r3, #5
 5155 0254 0C301BE5 		ldr	r3, [fp, #-12]
 5156 0258 0C3093E5 		ldr	r3, [r3, #12]
 5157 025c 033082E0 		add	r3, r2, r3
 5158 0260 14300BE5 		str	r3, [fp, #-20]
2727:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
2728:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 5159              		.loc 1 2728 5 is_stmt 1
 5160 0264 14301BE5 		ldr	r3, [fp, #-20]
 5161 0268 0128A0E3 		mov	r2, #65536
 5162 026c 0010A0E3 		mov	r1, #0
 5163 0270 0300A0E1 		mov	r0, r3
 5164 0274 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 5165 0278 0030A0E1 		mov	r3, r0
 5166              		.loc 1 2728 5 is_stmt 0 discriminator 1
 5167 027c 000053E3 		cmp	r3, #0
 5168 0280 0100001A 		bne	.L326
 5169 0284 0430E0E3 		mvn	r3, #4
 5170              		.loc 1 2728 5
 5171 0288 3B0000EA 		b	.L312
 5172              	.L326:
 5173              		.loc 1 2728 5 discriminator 2
 5174 028c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 5175 0290 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 5176 0294 002093E5 		ldr	r2, [r3]
 5177 0298 14301BE5 		ldr	r3, [fp, #-20]
 5178 029c 102083E5 		str	r2, [r3, #16]
2729:../../Source/Kernel/rme_kernel.c **** 
2730:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top level? */
2731:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 5179              		.loc 1 2731 7 is_stmt 1
 5180 02a0 08309BE5 		ldr	r3, [fp, #8]
 5181 02a4 000053E3 		cmp	r3, #0
 5182 02a8 0400000A 		beq	.L327
2732:../../Source/Kernel/rme_kernel.c ****     {
2733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2734:../../Source/Kernel/rme_kernel.c ****         
2735:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 5183              		.loc 1 2735 19
 5184 02ac 0120A0E3 		mov	r2, #1
 5185 02b0 10309BE5 		ldr	r3, [fp, #16]
 5186 02b4 1233A0E1 		lsl	r3, r2, r3
 5187 02b8 08300BE5 		str	r3, [fp, #-8]
 5188 02bc 030000EA 		b	.L328
 5189              	.L327:
2736:../../Source/Kernel/rme_kernel.c ****     }
2737:../../Source/Kernel/rme_kernel.c ****     else
2738:../../Source/Kernel/rme_kernel.c ****     {
2739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2740:../../Source/Kernel/rme_kernel.c ****         
2741:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 5190              		.loc 1 2741 19
 5191 02c0 0120A0E3 		mov	r2, #1
 5192 02c4 10309BE5 		ldr	r3, [fp, #16]
 5193 02c8 1233A0E1 		lsl	r3, r2, r3
 5194 02cc 08300BE5 		str	r3, [fp, #-8]
 5195              	.L328:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 141


2742:../../Source/Kernel/rme_kernel.c ****     }
2743:../../Source/Kernel/rme_kernel.c ****     
2744:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
2745:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr, Table_Size)!=0)
 5196              		.loc 1 2745 8
 5197 02d0 08101BE5 		ldr	r1, [fp, #-8]
 5198 02d4 24001BE5 		ldr	r0, [fp, #-36]
 5199 02d8 FEFFFFEB 		bl	_RME_Kot_Mark
 5200 02dc 0030A0E1 		mov	r3, r0
 5201              		.loc 1 2745 7 discriminator 1
 5202 02e0 000053E3 		cmp	r3, #0
 5203 02e4 0500000A 		beq	.L329
2746:../../Source/Kernel/rme_kernel.c ****     {
2747:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2748:../../Source/Kernel/rme_kernel.c ****     
2749:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 5204              		.loc 1 2749 9
 5205 02e8 14301BE5 		ldr	r3, [fp, #-20]
 5206 02ec 0010A0E3 		mov	r1, #0
 5207 02f0 0300A0E1 		mov	r0, r3
 5208 02f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
2750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 5209              		.loc 1 2750 16
 5210 02f8 0330E0E3 		mvn	r3, #3
 5211 02fc 1E0000EA 		b	.L312
 5212              	.L329:
2751:../../Source/Kernel/rme_kernel.c ****     }
2752:../../Source/Kernel/rme_kernel.c ****     else
2753:../../Source/Kernel/rme_kernel.c ****     {
2754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2756:../../Source/Kernel/rme_kernel.c ****     }
2757:../../Source/Kernel/rme_kernel.c ****     
2758:../../Source/Kernel/rme_kernel.c ****     /* Header init */
2759:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 5213              		.loc 1 2759 27
 5214 0300 14301BE5 		ldr	r3, [fp, #-20]
 5215 0304 0020A0E3 		mov	r2, #0
 5216 0308 042083E5 		str	r2, [r3, #4]
2760:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 5217              		.loc 1 2760 25
 5218 030c 14301BE5 		ldr	r3, [fp, #-20]
 5219 0310 24201BE5 		ldr	r2, [fp, #-36]
 5220 0314 0C2083E5 		str	r2, [r3, #12]
2761:../../Source/Kernel/rme_kernel.c ****     /* Set the property of the page table to only act as source and creating process */
2762:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ADD_SRC|
 5221              		.loc 1 2762 23
 5222 0318 14201BE5 		ldr	r2, [fp, #-20]
 5223 031c C130A0E3 		mov	r3, #193
 5224 0320 F03F4FE3 		movt	r3, 65520
 5225 0324 083082E5 		str	r3, [r2, #8]
2763:../../Source/Kernel/rme_kernel.c ****                        RME_PGT_FLAG_PRC_CRT|RME_PGT_FLAG_PRC_PGT;
2764:../../Source/Kernel/rme_kernel.c ****     
2765:../../Source/Kernel/rme_kernel.c ****     /* Info init */
2766:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 5226              		.loc 1 2766 23
 5227 0328 04209BE5 		ldr	r2, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 142


 5228 032c 08309BE5 		ldr	r3, [fp, #8]
 5229 0330 032082E1 		orr	r2, r2, r3
 5230              		.loc 1 2766 18
 5231 0334 14301BE5 		ldr	r3, [fp, #-20]
 5232 0338 182083E5 		str	r2, [r3, #24]
2767:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 5233              		.loc 1 2767 20
 5234 033c 0C309BE5 		ldr	r3, [fp, #12]
 5235 0340 0328A0E1 		lsl	r2, r3, #16
 5236 0344 10309BE5 		ldr	r3, [fp, #16]
 5237 0348 032082E1 		orr	r2, r2, r3
 5238              		.loc 1 2767 19
 5239 034c 14301BE5 		ldr	r3, [fp, #-20]
 5240 0350 142083E5 		str	r2, [r3, #20]
2768:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 5241              		.loc 1 2768 18
 5242 0354 14301BE5 		ldr	r3, [fp, #-20]
 5243 0358 0020A0E3 		mov	r2, #0
 5244 035c 1C2083E5 		str	r2, [r3, #28]
2769:../../Source/Kernel/rme_kernel.c **** 
2770:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
2771:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 5245              		.loc 1 2771 8
 5246 0360 14001BE5 		ldr	r0, [fp, #-20]
 5247 0364 FEFFFFEB 		bl	__RME_Pgt_Init
2772:../../Source/Kernel/rme_kernel.c ****     {
2773:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2774:../../Source/Kernel/rme_kernel.c ****         
2775:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
2776:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr, Table_Size)==0);
2777:../../Source/Kernel/rme_kernel.c **** 
2778:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
2779:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
2780:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
2781:../../Source/Kernel/rme_kernel.c ****     }
2782:../../Source/Kernel/rme_kernel.c ****     else
2783:../../Source/Kernel/rme_kernel.c ****     {
2784:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2785:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2786:../../Source/Kernel/rme_kernel.c ****     }
2787:../../Source/Kernel/rme_kernel.c **** 
2788:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 5248              		.loc 1 2789 5
 5249 0368 14301BE5 		ldr	r3, [fp, #-20]
 5250 036c 0113A0E3 		mov	r1, #67108864
 5251 0370 0300A0E1 		mov	r0, r3
 5252 0374 FEFFFFEB 		bl	__RME_A7A_Write_Release
2790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
2791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
2793:../../Source/Kernel/rme_kernel.c **** 
2794:../../Source/Kernel/rme_kernel.c ****     return 0;
 5253              		.loc 1 2794 12
 5254 0378 0030A0E3 		mov	r3, #0
 5255              	.L312:
2795:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 143


 5256              		.loc 1 2795 1
 5257 037c 0300A0E1 		mov	r0, r3
 5258 0380 04D04BE2 		sub	sp, fp, #4
 5259              		.cfi_def_cfa 13, 8
 5260              		@ sp needed
 5261 0384 0088BDE8 		pop	{fp, pc}
 5262              		.cfi_endproc
 5263              	.LFE29:
 5265              		.section	.rodata
 5266 0075 000000   		.align	2
 5267              	.LC9:
 5268 0078 0D0A6D61 		.ascii	"\015\012mapping range and the granularity is not al"
 5268      7070696E 
 5268      67207261 
 5268      6E676520 
 5268      616E6420 
 5269 00a5 6C6F7765 		.ascii	"lowed \000"
 5269      642000
 5270              		.align	2
 5271              	.LC10:
 5272 00ac 0D0A5468 		.ascii	"\015\012This work is not passed down to the HAL \000"
 5272      69732077 
 5272      6F726B20 
 5272      6973206E 
 5272      6F742070 
 5273              		.section	.text._RME_Pgt_Boot_Add,"ax",%progbits
 5274              		.align	2
 5275              		.global	_RME_Pgt_Boot_Add
 5276              		.syntax unified
 5277              		.arm
 5279              	_RME_Pgt_Boot_Add:
 5280              	.LFB30:
2796:../../Source/Kernel/rme_kernel.c **** #endif
2797:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Crt ********************************************/
2798:../../Source/Kernel/rme_kernel.c **** 
2799:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Add *************************************************
2800:../../Source/Kernel/rme_kernel.c **** Description : This function is exclusively used to set up the Init process's
2801:../../Source/Kernel/rme_kernel.c ****               memory mappings in the booting process. When the system has
2802:../../Source/Kernel/rme_kernel.c ****               booted, it won't possible to fabricate pages like this.
2803:../../Source/Kernel/rme_kernel.c ****               Additionally, this function will set the cap to page table's 
2804:../../Source/Kernel/rme_kernel.c ****               property as unremovable. This means that it is not allowed to
2805:../../Source/Kernel/rme_kernel.c ****               remove any pages in the directory. It will set the reference
2806:../../Source/Kernel/rme_kernel.c ****               count of the capability as 1, thus making the capability to the
2807:../../Source/Kernel/rme_kernel.c ****               initial page table undeletable.
2808:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2809:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
2810:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2811:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Paddr - The physical address to map from.
2812:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to map to.
2813:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the user page.
2814:../../Source/Kernel/rme_kernel.c **** Output      : None.
2815:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2816:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2817:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2818:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Add(struct RME_Cap_Cpt* Cpt,
2819:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt, 
2820:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Paddr,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 144


2821:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2822:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
2823:../../Source/Kernel/rme_kernel.c **** {
 5281              		.loc 1 2823 1
 5282              		.cfi_startproc
 5283              		@ args = 4, pretend = 0, frame = 32
 5284              		@ frame_needed = 1, uses_anonymous_args = 0
 5285 0000 00482DE9 		push	{fp, lr}
 5286              		.cfi_def_cfa_offset 8
 5287              		.cfi_offset 11, -8
 5288              		.cfi_offset 14, -4
 5289 0004 04B08DE2 		add	fp, sp, #4
 5290              		.cfi_def_cfa 11, 4
 5291 0008 20D04DE2 		sub	sp, sp, #32
 5292 000c 18000BE5 		str	r0, [fp, #-24]
 5293 0010 1C100BE5 		str	r1, [fp, #-28]
 5294 0014 20200BE5 		str	r2, [fp, #-32]
 5295 0018 24300BE5 		str	r3, [fp, #-36]
2824:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
2825:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2826:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord;
2827:../../Source/Kernel/rme_kernel.c ****     
2828:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2829:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 5296              		.loc 1 2829 5
 5297 001c 1C301BE5 		ldr	r3, [fp, #-28]
 5298 0020 803003E2 		and	r3, r3, #128
 5299 0024 000053E3 		cmp	r3, #0
 5300 0028 1C00001A 		bne	.L331
 5301              		.loc 1 2829 5 is_stmt 0 discriminator 1
 5302 002c 18301BE5 		ldr	r3, [fp, #-24]
 5303 0030 142093E5 		ldr	r2, [r3, #20]
 5304 0034 1C301BE5 		ldr	r3, [fp, #-28]
 5305 0038 030052E1 		cmp	r2, r3
 5306 003c 0100008A 		bhi	.L332
 5307              		.loc 1 2829 5 discriminator 3
 5308 0040 0230E0E3 		mvn	r3, #2
 5309              		.loc 1 2829 5
 5310 0044 800000EA 		b	.L333
 5311              	.L332:
 5312              		.loc 1 2829 5 discriminator 4
 5313 0048 1C301BE5 		ldr	r3, [fp, #-28]
 5314 004c 8322A0E1 		lsl	r2, r3, #5
 5315 0050 18301BE5 		ldr	r3, [fp, #-24]
 5316 0054 0C3093E5 		ldr	r3, [r3, #12]
 5317 0058 033082E0 		add	r3, r2, r3
 5318 005c 08300BE5 		str	r3, [fp, #-8]
 5319 0060 08301BE5 		ldr	r3, [fp, #-8]
 5320 0064 0300A0E1 		mov	r0, r3
 5321 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5322 006c 0C000BE5 		str	r0, [fp, #-12]
 5323              		.loc 1 2829 5 discriminator 1
 5324 0070 0C301BE5 		ldr	r3, [fp, #-12]
 5325 0074 FF3803E2 		and	r3, r3, #16711680
 5326 0078 020853E3 		cmp	r3, #131072
 5327 007c 0100001A 		bne	.L334
 5328              		.loc 1 2829 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 145


 5329 0080 0830E0E3 		mvn	r3, #8
 5330              		.loc 1 2829 5
 5331 0084 700000EA 		b	.L333
 5332              	.L334:
 5333              		.loc 1 2829 5 discriminator 6
 5334 0088 0C301BE5 		ldr	r3, [fp, #-12]
 5335 008c 233CA0E1 		lsr	r3, r3, #24
 5336 0090 040053E3 		cmp	r3, #4
 5337 0094 3F00000A 		beq	.L335
 5338              		.loc 1 2829 5 discriminator 7
 5339 0098 0130E0E3 		mvn	r3, #1
 5340              		.loc 1 2829 5
 5341 009c 6A0000EA 		b	.L333
 5342              	.L331:
 5343              		.loc 1 2829 5 discriminator 2
 5344 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 5345 00a4 2324A0E1 		lsr	r2, r3, #8
 5346 00a8 18301BE5 		ldr	r3, [fp, #-24]
 5347 00ac 143093E5 		ldr	r3, [r3, #20]
 5348 00b0 030052E1 		cmp	r2, r3
 5349 00b4 0100003A 		bcc	.L336
 5350              		.loc 1 2829 5 discriminator 8
 5351 00b8 0230E0E3 		mvn	r3, #2
 5352              		.loc 1 2829 5
 5353 00bc 620000EA 		b	.L333
 5354              	.L336:
 5355              		.loc 1 2829 5 discriminator 9
 5356 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 5357 00c4 2334A0E1 		lsr	r3, r3, #8
 5358 00c8 8322A0E1 		lsl	r2, r3, #5
 5359 00cc 18301BE5 		ldr	r3, [fp, #-24]
 5360 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5361 00d4 033082E0 		add	r3, r2, r3
 5362 00d8 08300BE5 		str	r3, [fp, #-8]
 5363 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5364 00e0 0300A0E1 		mov	r0, r3
 5365 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5366 00e8 0C000BE5 		str	r0, [fp, #-12]
 5367              		.loc 1 2829 5 discriminator 1
 5368 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 5369 00f0 FF3803E2 		and	r3, r3, #16711680
 5370 00f4 020853E3 		cmp	r3, #131072
 5371 00f8 0100001A 		bne	.L337
 5372              		.loc 1 2829 5 discriminator 10
 5373 00fc 0830E0E3 		mvn	r3, #8
 5374              		.loc 1 2829 5
 5375 0100 510000EA 		b	.L333
 5376              	.L337:
 5377              		.loc 1 2829 5 discriminator 11
 5378 0104 0C301BE5 		ldr	r3, [fp, #-12]
 5379 0108 233CA0E1 		lsr	r3, r3, #24
 5380 010c 030053E3 		cmp	r3, #3
 5381 0110 0100000A 		beq	.L338
 5382              		.loc 1 2829 5 discriminator 12
 5383 0114 0130E0E3 		mvn	r3, #1
 5384              		.loc 1 2829 5
 5385 0118 4B0000EA 		b	.L333
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 146


 5386              	.L338:
 5387              		.loc 1 2829 5 discriminator 13
 5388 011c 1C301BE5 		ldr	r3, [fp, #-28]
 5389 0120 7F2003E2 		and	r2, r3, #127
 5390 0124 08301BE5 		ldr	r3, [fp, #-8]
 5391 0128 143093E5 		ldr	r3, [r3, #20]
 5392 012c 030052E1 		cmp	r2, r3
 5393 0130 0100003A 		bcc	.L339
 5394              		.loc 1 2829 5 discriminator 14
 5395 0134 0230E0E3 		mvn	r3, #2
 5396              		.loc 1 2829 5
 5397 0138 430000EA 		b	.L333
 5398              	.L339:
 5399              		.loc 1 2829 5 discriminator 15
 5400 013c 1C301BE5 		ldr	r3, [fp, #-28]
 5401 0140 7F3003E2 		and	r3, r3, #127
 5402 0144 8322A0E1 		lsl	r2, r3, #5
 5403 0148 08301BE5 		ldr	r3, [fp, #-8]
 5404 014c 0C3093E5 		ldr	r3, [r3, #12]
 5405 0150 033082E0 		add	r3, r2, r3
 5406 0154 08300BE5 		str	r3, [fp, #-8]
 5407 0158 08301BE5 		ldr	r3, [fp, #-8]
 5408 015c 0300A0E1 		mov	r0, r3
 5409 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5410 0164 0C000BE5 		str	r0, [fp, #-12]
 5411              		.loc 1 2829 5 discriminator 1
 5412 0168 0C301BE5 		ldr	r3, [fp, #-12]
 5413 016c FF3803E2 		and	r3, r3, #16711680
 5414 0170 020853E3 		cmp	r3, #131072
 5415 0174 0100001A 		bne	.L340
 5416              		.loc 1 2829 5 discriminator 16
 5417 0178 0830E0E3 		mvn	r3, #8
 5418              		.loc 1 2829 5
 5419 017c 320000EA 		b	.L333
 5420              	.L340:
 5421              		.loc 1 2829 5 discriminator 17
 5422 0180 0C301BE5 		ldr	r3, [fp, #-12]
 5423 0184 233CA0E1 		lsr	r3, r3, #24
 5424 0188 040053E3 		cmp	r3, #4
 5425 018c 0100000A 		beq	.L335
 5426              		.loc 1 2829 5 discriminator 18
 5427 0190 0130E0E3 		mvn	r3, #1
 5428              		.loc 1 2829 5
 5429 0194 2C0000EA 		b	.L333
 5430              	.L335:
2830:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);    
2831:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen, but don't check their properties */
2832:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,0U);
2833:../../Source/Kernel/rme_kernel.c **** 
2834:../../Source/Kernel/rme_kernel.c ****     Szord=RME_PGT_SZORD(Pgt_Op->Order);
 5431              		.loc 1 2834 11 is_stmt 1
 5432 0198 08301BE5 		ldr	r3, [fp, #-8]
 5433 019c 143093E5 		ldr	r3, [r3, #20]
 5434              		.loc 1 2834 10
 5435 01a0 2338A0E1 		lsr	r3, r3, #16
 5436 01a4 10300BE5 		str	r3, [fp, #-16]
2835:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 147


2836:../../Source/Kernel/rme_kernel.c ****     /* Check if we force identical mapping */
2837:../../Source/Kernel/rme_kernel.c ****     if(Szord==RME_WORD_BIT)
2838:../../Source/Kernel/rme_kernel.c ****     {
2839:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2840:../../Source/Kernel/rme_kernel.c ****         
2841:../../Source/Kernel/rme_kernel.c ****         if((Paddr!=0U)||(Pos!=0U))
2842:../../Source/Kernel/rme_kernel.c ****         {
2843:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2844:../../Source/Kernel/rme_kernel.c ****             
2845:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2846:../../Source/Kernel/rme_kernel.c ****         }
2847:../../Source/Kernel/rme_kernel.c ****         else
2848:../../Source/Kernel/rme_kernel.c ****         {
2849:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2850:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2851:../../Source/Kernel/rme_kernel.c ****         }
2852:../../Source/Kernel/rme_kernel.c ****     }
2853:../../Source/Kernel/rme_kernel.c ****     else if(Paddr!=(RME_PGT_BASE(Pgt_Op->Base)+(Pos<<Szord)))
2854:../../Source/Kernel/rme_kernel.c ****     {
2855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2856:../../Source/Kernel/rme_kernel.c ****         
2857:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
2858:../../Source/Kernel/rme_kernel.c ****     }
2859:../../Source/Kernel/rme_kernel.c ****     else
2860:../../Source/Kernel/rme_kernel.c ****     {
2861:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2862:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2863:../../Source/Kernel/rme_kernel.c ****     }
2864:../../Source/Kernel/rme_kernel.c **** #endif
2865:../../Source/Kernel/rme_kernel.c **** 
2866:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range and the granularity is allowed */
2867:../../Source/Kernel/rme_kernel.c ****     if(((Pos>>RME_PGT_NMORD(Pgt_Op->Order))!=0U)||
 5437              		.loc 1 2867 15
 5438 01a8 08301BE5 		ldr	r3, [fp, #-8]
 5439 01ac 143093E5 		ldr	r3, [r3, #20]
 5440 01b0 7330FFE6 		uxth	r3, r3
 5441              		.loc 1 2867 13
 5442 01b4 24201BE5 		ldr	r2, [fp, #-36]
 5443 01b8 3233A0E1 		lsr	r3, r2, r3
 5444              		.loc 1 2867 7
 5445 01bc 000053E3 		cmp	r3, #0
 5446 01c0 0700001A 		bne	.L341
2868:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5447              		.loc 1 2868 16
 5448 01c4 10301BE5 		ldr	r3, [fp, #-16]
 5449 01c8 203063E2 		rsb	r3, r3, #32
 5450 01cc 0020E0E3 		mvn	r2, #0
 5451 01d0 3223A0E1 		lsr	r2, r2, r3
 5452              		.loc 1 2868 15
 5453 01d4 20301BE5 		ldr	r3, [fp, #-32]
 5454 01d8 023003E0 		and	r3, r3, r2
2867:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5455              		.loc 1 2867 49 discriminator 1
 5456 01dc 000053E3 		cmp	r3, #0
 5457 01e0 0400000A 		beq	.L342
 5458              	.L341:
2869:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 148


2870:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2871:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nmapping range and the granularity is not allowed ");
 5459              		.loc 1 2871 9
 5460 01e4 000000E3 		movw	r0, #:lower16:.LC9
 5461 01e8 000040E3 		movt	r0, #:upper16:.LC9
 5462 01ec FEFFFFEB 		bl	RME_Str_Print
2872:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5463              		.loc 1 2872 16
 5464 01f0 6430E0E3 		mvn	r3, #100
 5465 01f4 140000EA 		b	.L333
 5466              	.L342:
2873:../../Source/Kernel/rme_kernel.c ****     }
2874:../../Source/Kernel/rme_kernel.c ****     else
2875:../../Source/Kernel/rme_kernel.c ****     {
2876:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2877:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2878:../../Source/Kernel/rme_kernel.c ****     }
2879:../../Source/Kernel/rme_kernel.c **** 
2880:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
2881:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
2882:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag)!=0)
 5467              		.loc 1 2882 8
 5468 01f8 04309BE5 		ldr	r3, [fp, #4]
 5469 01fc 24201BE5 		ldr	r2, [fp, #-36]
 5470 0200 20101BE5 		ldr	r1, [fp, #-32]
 5471 0204 08001BE5 		ldr	r0, [fp, #-8]
 5472 0208 FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5473 020c 0030A0E1 		mov	r3, r0
 5474              		.loc 1 2882 7 discriminator 1
 5475 0210 000053E3 		cmp	r3, #0
 5476 0214 0B00000A 		beq	.L343
 5477              	.LBB2:
2883:../../Source/Kernel/rme_kernel.c ****     {
2884:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2885:../../Source/Kernel/rme_kernel.c ****         int a=__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag);
 5478              		.loc 1 2885 15
 5479 0218 04309BE5 		ldr	r3, [fp, #4]
 5480 021c 24201BE5 		ldr	r2, [fp, #-36]
 5481 0220 20101BE5 		ldr	r1, [fp, #-32]
 5482 0224 08001BE5 		ldr	r0, [fp, #-8]
 5483 0228 FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5484 022c 0030A0E1 		mov	r3, r0
 5485              		.loc 1 2885 13 discriminator 1
 5486 0230 14300BE5 		str	r3, [fp, #-20]
2886:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nThis work is not passed down to the HAL ");
 5487              		.loc 1 2886 9
 5488 0234 000000E3 		movw	r0, #:lower16:.LC10
 5489 0238 000040E3 		movt	r0, #:upper16:.LC10
 5490 023c FEFFFFEB 		bl	RME_Str_Print
2887:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 5491              		.loc 1 2887 16
 5492 0240 6530E0E3 		mvn	r3, #101
 5493 0244 000000EA 		b	.L333
 5494              	.L343:
 5495              	.LBE2:
2888:../../Source/Kernel/rme_kernel.c ****     }
2889:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 149


2890:../../Source/Kernel/rme_kernel.c ****     {
2891:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2892:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2893:../../Source/Kernel/rme_kernel.c ****     }
2894:../../Source/Kernel/rme_kernel.c **** 
2895:../../Source/Kernel/rme_kernel.c ****     return 0;
 5496              		.loc 1 2895 12
 5497 0248 0030A0E3 		mov	r3, #0
 5498              	.L333:
2896:../../Source/Kernel/rme_kernel.c **** }
 5499              		.loc 1 2896 1
 5500 024c 0300A0E1 		mov	r0, r3
 5501 0250 04D04BE2 		sub	sp, fp, #4
 5502              		.cfi_def_cfa 13, 8
 5503              		@ sp needed
 5504 0254 0088BDE8 		pop	{fp, pc}
 5505              		.cfi_endproc
 5506              	.LFE30:
 5508              		.section	.text._RME_Pgt_Boot_Con,"ax",%progbits
 5509              		.align	2
 5510              		.global	_RME_Pgt_Boot_Con
 5511              		.syntax unified
 5512              		.arm
 5514              	_RME_Pgt_Boot_Con:
 5515              	.LFB31:
2897:../../Source/Kernel/rme_kernel.c **** #endif
2898:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Add ********************************************/
2899:../../Source/Kernel/rme_kernel.c **** 
2900:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Con *************************************************
2901:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table from the parent page table at boot-time.
2902:../../Source/Kernel/rme_kernel.c ****               This does not check flags.
2903:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2904:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
2905:../../Source/Kernel/rme_kernel.c ****                                          table.
2906:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
2907:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
2908:../../Source/Kernel/rme_kernel.c ****                               page table to.
2909:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
2910:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
2911:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
2912:../../Source/Kernel/rme_kernel.c **** Output      : None.
2913:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2914:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2915:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2916:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Con(struct RME_Cap_Cpt* Cpt,
2917:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Parent,
2918:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2919:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Child,
2920:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag_Child)
2921:../../Source/Kernel/rme_kernel.c **** {
 5516              		.loc 1 2921 1
 5517              		.cfi_startproc
 5518              		@ args = 4, pretend = 0, frame = 40
 5519              		@ frame_needed = 1, uses_anonymous_args = 0
 5520 0000 00482DE9 		push	{fp, lr}
 5521              		.cfi_def_cfa_offset 8
 5522              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 150


 5523              		.cfi_offset 14, -4
 5524 0004 04B08DE2 		add	fp, sp, #4
 5525              		.cfi_def_cfa 11, 4
 5526 0008 28D04DE2 		sub	sp, sp, #40
 5527 000c 20000BE5 		str	r0, [fp, #-32]
 5528 0010 24100BE5 		str	r1, [fp, #-36]
 5529 0014 28200BE5 		str	r2, [fp, #-40]
 5530 0018 2C300BE5 		str	r3, [fp, #-44]
2922:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
2923:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
2924:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
2925:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2926:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
2927:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
2928:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2929:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
2930:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
2931:../../Source/Kernel/rme_kernel.c **** #endif
2932:../../Source/Kernel/rme_kernel.c ****     
2933:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2934:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 5531              		.loc 1 2934 5
 5532 001c 24301BE5 		ldr	r3, [fp, #-36]
 5533 0020 803003E2 		and	r3, r3, #128
 5534 0024 000053E3 		cmp	r3, #0
 5535 0028 1C00001A 		bne	.L345
 5536              		.loc 1 2934 5 is_stmt 0 discriminator 1
 5537 002c 20301BE5 		ldr	r3, [fp, #-32]
 5538 0030 142093E5 		ldr	r2, [r3, #20]
 5539 0034 24301BE5 		ldr	r3, [fp, #-36]
 5540 0038 030052E1 		cmp	r2, r3
 5541 003c 0100008A 		bhi	.L346
 5542              		.loc 1 2934 5 discriminator 3
 5543 0040 0230E0E3 		mvn	r3, #2
 5544              		.loc 1 2934 5
 5545 0044 F70000EA 		b	.L347
 5546              	.L346:
 5547              		.loc 1 2934 5 discriminator 4
 5548 0048 24301BE5 		ldr	r3, [fp, #-36]
 5549 004c 8322A0E1 		lsl	r2, r3, #5
 5550 0050 20301BE5 		ldr	r3, [fp, #-32]
 5551 0054 0C3093E5 		ldr	r3, [r3, #12]
 5552 0058 033082E0 		add	r3, r2, r3
 5553 005c 08300BE5 		str	r3, [fp, #-8]
 5554 0060 08301BE5 		ldr	r3, [fp, #-8]
 5555 0064 0300A0E1 		mov	r0, r3
 5556 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5557 006c 10000BE5 		str	r0, [fp, #-16]
 5558              		.loc 1 2934 5 discriminator 1
 5559 0070 10301BE5 		ldr	r3, [fp, #-16]
 5560 0074 FF3803E2 		and	r3, r3, #16711680
 5561 0078 020853E3 		cmp	r3, #131072
 5562 007c 0100001A 		bne	.L348
 5563              		.loc 1 2934 5 discriminator 5
 5564 0080 0830E0E3 		mvn	r3, #8
 5565              		.loc 1 2934 5
 5566 0084 E70000EA 		b	.L347
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 151


 5567              	.L348:
 5568              		.loc 1 2934 5 discriminator 6
 5569 0088 10301BE5 		ldr	r3, [fp, #-16]
 5570 008c 233CA0E1 		lsr	r3, r3, #24
 5571 0090 040053E3 		cmp	r3, #4
 5572 0094 3F00000A 		beq	.L349
 5573              		.loc 1 2934 5 discriminator 7
 5574 0098 0130E0E3 		mvn	r3, #1
 5575              		.loc 1 2934 5
 5576 009c E10000EA 		b	.L347
 5577              	.L345:
 5578              		.loc 1 2934 5 discriminator 2
 5579 00a0 24301BE5 		ldr	r3, [fp, #-36]
 5580 00a4 2324A0E1 		lsr	r2, r3, #8
 5581 00a8 20301BE5 		ldr	r3, [fp, #-32]
 5582 00ac 143093E5 		ldr	r3, [r3, #20]
 5583 00b0 030052E1 		cmp	r2, r3
 5584 00b4 0100003A 		bcc	.L350
 5585              		.loc 1 2934 5 discriminator 8
 5586 00b8 0230E0E3 		mvn	r3, #2
 5587              		.loc 1 2934 5
 5588 00bc D90000EA 		b	.L347
 5589              	.L350:
 5590              		.loc 1 2934 5 discriminator 9
 5591 00c0 24301BE5 		ldr	r3, [fp, #-36]
 5592 00c4 2334A0E1 		lsr	r3, r3, #8
 5593 00c8 8322A0E1 		lsl	r2, r3, #5
 5594 00cc 20301BE5 		ldr	r3, [fp, #-32]
 5595 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5596 00d4 033082E0 		add	r3, r2, r3
 5597 00d8 08300BE5 		str	r3, [fp, #-8]
 5598 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5599 00e0 0300A0E1 		mov	r0, r3
 5600 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5601 00e8 10000BE5 		str	r0, [fp, #-16]
 5602              		.loc 1 2934 5 discriminator 1
 5603 00ec 10301BE5 		ldr	r3, [fp, #-16]
 5604 00f0 FF3803E2 		and	r3, r3, #16711680
 5605 00f4 020853E3 		cmp	r3, #131072
 5606 00f8 0100001A 		bne	.L351
 5607              		.loc 1 2934 5 discriminator 10
 5608 00fc 0830E0E3 		mvn	r3, #8
 5609              		.loc 1 2934 5
 5610 0100 C80000EA 		b	.L347
 5611              	.L351:
 5612              		.loc 1 2934 5 discriminator 11
 5613 0104 10301BE5 		ldr	r3, [fp, #-16]
 5614 0108 233CA0E1 		lsr	r3, r3, #24
 5615 010c 030053E3 		cmp	r3, #3
 5616 0110 0100000A 		beq	.L352
 5617              		.loc 1 2934 5 discriminator 12
 5618 0114 0130E0E3 		mvn	r3, #1
 5619              		.loc 1 2934 5
 5620 0118 C20000EA 		b	.L347
 5621              	.L352:
 5622              		.loc 1 2934 5 discriminator 13
 5623 011c 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 152


 5624 0120 7F2003E2 		and	r2, r3, #127
 5625 0124 08301BE5 		ldr	r3, [fp, #-8]
 5626 0128 143093E5 		ldr	r3, [r3, #20]
 5627 012c 030052E1 		cmp	r2, r3
 5628 0130 0100003A 		bcc	.L353
 5629              		.loc 1 2934 5 discriminator 14
 5630 0134 0230E0E3 		mvn	r3, #2
 5631              		.loc 1 2934 5
 5632 0138 BA0000EA 		b	.L347
 5633              	.L353:
 5634              		.loc 1 2934 5 discriminator 15
 5635 013c 24301BE5 		ldr	r3, [fp, #-36]
 5636 0140 7F3003E2 		and	r3, r3, #127
 5637 0144 8322A0E1 		lsl	r2, r3, #5
 5638 0148 08301BE5 		ldr	r3, [fp, #-8]
 5639 014c 0C3093E5 		ldr	r3, [r3, #12]
 5640 0150 033082E0 		add	r3, r2, r3
 5641 0154 08300BE5 		str	r3, [fp, #-8]
 5642 0158 08301BE5 		ldr	r3, [fp, #-8]
 5643 015c 0300A0E1 		mov	r0, r3
 5644 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5645 0164 10000BE5 		str	r0, [fp, #-16]
 5646              		.loc 1 2934 5 discriminator 1
 5647 0168 10301BE5 		ldr	r3, [fp, #-16]
 5648 016c FF3803E2 		and	r3, r3, #16711680
 5649 0170 020853E3 		cmp	r3, #131072
 5650 0174 0100001A 		bne	.L354
 5651              		.loc 1 2934 5 discriminator 16
 5652 0178 0830E0E3 		mvn	r3, #8
 5653              		.loc 1 2934 5
 5654 017c A90000EA 		b	.L347
 5655              	.L354:
 5656              		.loc 1 2934 5 discriminator 17
 5657 0180 10301BE5 		ldr	r3, [fp, #-16]
 5658 0184 233CA0E1 		lsr	r3, r3, #24
 5659 0188 040053E3 		cmp	r3, #4
 5660 018c 0100000A 		beq	.L349
 5661              		.loc 1 2934 5 discriminator 18
 5662 0190 0130E0E3 		mvn	r3, #1
 5663              		.loc 1 2934 5
 5664 0194 A30000EA 		b	.L347
 5665              	.L349:
2935:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
2936:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 5666              		.loc 1 2936 5 is_stmt 1
 5667 0198 2C301BE5 		ldr	r3, [fp, #-44]
 5668 019c 803003E2 		and	r3, r3, #128
 5669 01a0 000053E3 		cmp	r3, #0
 5670 01a4 1C00001A 		bne	.L355
 5671              		.loc 1 2936 5 is_stmt 0 discriminator 1
 5672 01a8 20301BE5 		ldr	r3, [fp, #-32]
 5673 01ac 142093E5 		ldr	r2, [r3, #20]
 5674 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 5675 01b4 030052E1 		cmp	r2, r3
 5676 01b8 0100008A 		bhi	.L356
 5677              		.loc 1 2936 5 discriminator 3
 5678 01bc 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 153


 5679              		.loc 1 2936 5
 5680 01c0 980000EA 		b	.L347
 5681              	.L356:
 5682              		.loc 1 2936 5 discriminator 4
 5683 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 5684 01c8 8322A0E1 		lsl	r2, r3, #5
 5685 01cc 20301BE5 		ldr	r3, [fp, #-32]
 5686 01d0 0C3093E5 		ldr	r3, [r3, #12]
 5687 01d4 033082E0 		add	r3, r2, r3
 5688 01d8 0C300BE5 		str	r3, [fp, #-12]
 5689 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 5690 01e0 0300A0E1 		mov	r0, r3
 5691 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5692 01e8 10000BE5 		str	r0, [fp, #-16]
 5693              		.loc 1 2936 5 discriminator 1
 5694 01ec 10301BE5 		ldr	r3, [fp, #-16]
 5695 01f0 FF3803E2 		and	r3, r3, #16711680
 5696 01f4 020853E3 		cmp	r3, #131072
 5697 01f8 0100001A 		bne	.L357
 5698              		.loc 1 2936 5 discriminator 5
 5699 01fc 0830E0E3 		mvn	r3, #8
 5700              		.loc 1 2936 5
 5701 0200 880000EA 		b	.L347
 5702              	.L357:
 5703              		.loc 1 2936 5 discriminator 6
 5704 0204 10301BE5 		ldr	r3, [fp, #-16]
 5705 0208 233CA0E1 		lsr	r3, r3, #24
 5706 020c 040053E3 		cmp	r3, #4
 5707 0210 3F00000A 		beq	.L358
 5708              		.loc 1 2936 5 discriminator 7
 5709 0214 0130E0E3 		mvn	r3, #1
 5710              		.loc 1 2936 5
 5711 0218 820000EA 		b	.L347
 5712              	.L355:
 5713              		.loc 1 2936 5 discriminator 2
 5714 021c 2C301BE5 		ldr	r3, [fp, #-44]
 5715 0220 2324A0E1 		lsr	r2, r3, #8
 5716 0224 20301BE5 		ldr	r3, [fp, #-32]
 5717 0228 143093E5 		ldr	r3, [r3, #20]
 5718 022c 030052E1 		cmp	r2, r3
 5719 0230 0100003A 		bcc	.L359
 5720              		.loc 1 2936 5 discriminator 8
 5721 0234 0230E0E3 		mvn	r3, #2
 5722              		.loc 1 2936 5
 5723 0238 7A0000EA 		b	.L347
 5724              	.L359:
 5725              		.loc 1 2936 5 discriminator 9
 5726 023c 2C301BE5 		ldr	r3, [fp, #-44]
 5727 0240 2334A0E1 		lsr	r3, r3, #8
 5728 0244 8322A0E1 		lsl	r2, r3, #5
 5729 0248 20301BE5 		ldr	r3, [fp, #-32]
 5730 024c 0C3093E5 		ldr	r3, [r3, #12]
 5731 0250 033082E0 		add	r3, r2, r3
 5732 0254 0C300BE5 		str	r3, [fp, #-12]
 5733 0258 0C301BE5 		ldr	r3, [fp, #-12]
 5734 025c 0300A0E1 		mov	r0, r3
 5735 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 154


 5736 0264 10000BE5 		str	r0, [fp, #-16]
 5737              		.loc 1 2936 5 discriminator 1
 5738 0268 10301BE5 		ldr	r3, [fp, #-16]
 5739 026c FF3803E2 		and	r3, r3, #16711680
 5740 0270 020853E3 		cmp	r3, #131072
 5741 0274 0100001A 		bne	.L360
 5742              		.loc 1 2936 5 discriminator 10
 5743 0278 0830E0E3 		mvn	r3, #8
 5744              		.loc 1 2936 5
 5745 027c 690000EA 		b	.L347
 5746              	.L360:
 5747              		.loc 1 2936 5 discriminator 11
 5748 0280 10301BE5 		ldr	r3, [fp, #-16]
 5749 0284 233CA0E1 		lsr	r3, r3, #24
 5750 0288 030053E3 		cmp	r3, #3
 5751 028c 0100000A 		beq	.L361
 5752              		.loc 1 2936 5 discriminator 12
 5753 0290 0130E0E3 		mvn	r3, #1
 5754              		.loc 1 2936 5
 5755 0294 630000EA 		b	.L347
 5756              	.L361:
 5757              		.loc 1 2936 5 discriminator 13
 5758 0298 2C301BE5 		ldr	r3, [fp, #-44]
 5759 029c 7F2003E2 		and	r2, r3, #127
 5760 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 5761 02a4 143093E5 		ldr	r3, [r3, #20]
 5762 02a8 030052E1 		cmp	r2, r3
 5763 02ac 0100003A 		bcc	.L362
 5764              		.loc 1 2936 5 discriminator 14
 5765 02b0 0230E0E3 		mvn	r3, #2
 5766              		.loc 1 2936 5
 5767 02b4 5B0000EA 		b	.L347
 5768              	.L362:
 5769              		.loc 1 2936 5 discriminator 15
 5770 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 5771 02bc 7F3003E2 		and	r3, r3, #127
 5772 02c0 8322A0E1 		lsl	r2, r3, #5
 5773 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 5774 02c8 0C3093E5 		ldr	r3, [r3, #12]
 5775 02cc 033082E0 		add	r3, r2, r3
 5776 02d0 0C300BE5 		str	r3, [fp, #-12]
 5777 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 5778 02d8 0300A0E1 		mov	r0, r3
 5779 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5780 02e0 10000BE5 		str	r0, [fp, #-16]
 5781              		.loc 1 2936 5 discriminator 1
 5782 02e4 10301BE5 		ldr	r3, [fp, #-16]
 5783 02e8 FF3803E2 		and	r3, r3, #16711680
 5784 02ec 020853E3 		cmp	r3, #131072
 5785 02f0 0100001A 		bne	.L363
 5786              		.loc 1 2936 5 discriminator 16
 5787 02f4 0830E0E3 		mvn	r3, #8
 5788              		.loc 1 2936 5
 5789 02f8 4A0000EA 		b	.L347
 5790              	.L363:
 5791              		.loc 1 2936 5 discriminator 17
 5792 02fc 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 155


 5793 0300 233CA0E1 		lsr	r3, r3, #24
 5794 0304 040053E3 		cmp	r3, #4
 5795 0308 0100000A 		beq	.L358
 5796              		.loc 1 2936 5 discriminator 18
 5797 030c 0130E0E3 		mvn	r3, #1
 5798              		.loc 1 2936 5
 5799 0310 440000EA 		b	.L347
 5800              	.L358:
2937:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
2938:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen but don't check flags */
2939:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent,0U);
2940:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child,0U);
2941:../../Source/Kernel/rme_kernel.c ****     
2942:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
2943:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 5801              		.loc 1 2943 14 is_stmt 1
 5802 0314 08301BE5 		ldr	r3, [fp, #-8]
 5803 0318 143093E5 		ldr	r3, [r3, #20]
 5804 031c 7330FFE6 		uxth	r3, r3
 5805              		.loc 1 2943 12
 5806 0320 28201BE5 		ldr	r2, [fp, #-40]
 5807 0324 3233A0E1 		lsr	r3, r2, r3
 5808              		.loc 1 2943 7
 5809 0328 000053E3 		cmp	r3, #0
 5810 032c 0100000A 		beq	.L364
2944:../../Source/Kernel/rme_kernel.c ****     {
2945:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2946:../../Source/Kernel/rme_kernel.c ****         
2947:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5811              		.loc 1 2947 16
 5812 0330 6430E0E3 		mvn	r3, #100
 5813 0334 3B0000EA 		b	.L347
 5814              	.L364:
2948:../../Source/Kernel/rme_kernel.c ****     }
2949:../../Source/Kernel/rme_kernel.c ****     else
2950:../../Source/Kernel/rme_kernel.c ****     {
2951:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2952:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2953:../../Source/Kernel/rme_kernel.c ****     }
2954:../../Source/Kernel/rme_kernel.c ****     
2955:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
2956:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 5815              		.loc 1 2956 17
 5816 0338 0C301BE5 		ldr	r3, [fp, #-12]
 5817 033c 143093E5 		ldr	r3, [r3, #20]
 5818 0340 7320FFE6 		uxth	r2, r3
 5819              		.loc 1 2956 49
 5820 0344 0C301BE5 		ldr	r3, [fp, #-12]
 5821 0348 143093E5 		ldr	r3, [r3, #20]
 5822 034c 2338A0E1 		lsr	r3, r3, #16
 5823              		.loc 1 2956 16
 5824 0350 033082E0 		add	r3, r2, r3
 5825 0354 14300BE5 		str	r3, [fp, #-20]
2957:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 5826              		.loc 1 2957 18
 5827 0358 08301BE5 		ldr	r3, [fp, #-8]
 5828 035c 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 156


 5829              		.loc 1 2957 17
 5830 0360 2338A0E1 		lsr	r3, r3, #16
 5831 0364 18300BE5 		str	r3, [fp, #-24]
2958:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 5832              		.loc 1 2958 7
 5833 0368 18201BE5 		ldr	r2, [fp, #-24]
 5834 036c 14301BE5 		ldr	r3, [fp, #-20]
 5835 0370 030052E1 		cmp	r2, r3
 5836 0374 0100002A 		bcs	.L365
2959:../../Source/Kernel/rme_kernel.c ****     {
2960:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2961:../../Source/Kernel/rme_kernel.c ****         
2962:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5837              		.loc 1 2962 16
 5838 0378 6430E0E3 		mvn	r3, #100
 5839 037c 290000EA 		b	.L347
 5840              	.L365:
2963:../../Source/Kernel/rme_kernel.c ****     }
2964:../../Source/Kernel/rme_kernel.c ****     else
2965:../../Source/Kernel/rme_kernel.c ****     {
2966:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2967:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2968:../../Source/Kernel/rme_kernel.c ****     }
2969:../../Source/Kernel/rme_kernel.c **** 
2970:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2971:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
2972:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
2973:../../Source/Kernel/rme_kernel.c ****     {
2974:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2975:../../Source/Kernel/rme_kernel.c ****         
2976:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
2977:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
2978:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
2979:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
2980:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
2981:../../Source/Kernel/rme_kernel.c ****         {
2982:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2983:../../Source/Kernel/rme_kernel.c ****             
2984:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2985:../../Source/Kernel/rme_kernel.c ****         }
2986:../../Source/Kernel/rme_kernel.c ****         else
2987:../../Source/Kernel/rme_kernel.c ****         {
2988:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2989:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2990:../../Source/Kernel/rme_kernel.c ****         }
2991:../../Source/Kernel/rme_kernel.c ****         
2992:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
2993:../../Source/Kernel/rme_kernel.c ****         
2994:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
2995:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
2996:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
2997:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
2998:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
2999:../../Source/Kernel/rme_kernel.c ****         {
3000:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3001:../../Source/Kernel/rme_kernel.c ****             
3002:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 157


3003:../../Source/Kernel/rme_kernel.c ****             {
3004:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3005:../../Source/Kernel/rme_kernel.c **** 
3006:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3007:../../Source/Kernel/rme_kernel.c ****             }
3008:../../Source/Kernel/rme_kernel.c ****             else
3009:../../Source/Kernel/rme_kernel.c ****             {
3010:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3011:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3012:../../Source/Kernel/rme_kernel.c ****             }
3013:../../Source/Kernel/rme_kernel.c ****         }
3014:../../Source/Kernel/rme_kernel.c ****         else
3015:../../Source/Kernel/rme_kernel.c ****         {
3016:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3017:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3018:../../Source/Kernel/rme_kernel.c ****         }
3019:../../Source/Kernel/rme_kernel.c ****     }
3020:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, no need to check */
3021:../../Source/Kernel/rme_kernel.c ****     else
3022:../../Source/Kernel/rme_kernel.c ****     {
3023:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3024:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3025:../../Source/Kernel/rme_kernel.c ****     }
3026:../../Source/Kernel/rme_kernel.c **** #else
3027:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3028:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 5841              		.loc 1 3028 7
 5842 0380 18201BE5 		ldr	r2, [fp, #-24]
 5843 0384 14301BE5 		ldr	r3, [fp, #-20]
 5844 0388 030052E1 		cmp	r2, r3
 5845 038c 0100000A 		beq	.L366
3029:../../Source/Kernel/rme_kernel.c ****     {
3030:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3031:../../Source/Kernel/rme_kernel.c **** 
3032:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5846              		.loc 1 3032 16
 5847 0390 6430E0E3 		mvn	r3, #100
 5848 0394 230000EA 		b	.L347
 5849              	.L366:
3033:../../Source/Kernel/rme_kernel.c ****     }
3034:../../Source/Kernel/rme_kernel.c ****     else
3035:../../Source/Kernel/rme_kernel.c ****     {
3036:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3037:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3038:../../Source/Kernel/rme_kernel.c ****     }
3039:../../Source/Kernel/rme_kernel.c **** #endif
3040:../../Source/Kernel/rme_kernel.c **** 
3041:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3042:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3043:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 5850              		.loc 1 3043 8
 5851 0398 04309BE5 		ldr	r3, [fp, #4]
 5852 039c 0C201BE5 		ldr	r2, [fp, #-12]
 5853 03a0 28101BE5 		ldr	r1, [fp, #-40]
 5854 03a4 08001BE5 		ldr	r0, [fp, #-8]
 5855 03a8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3044:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 158


3045:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3046:../../Source/Kernel/rme_kernel.c **** 
3047:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3048:../../Source/Kernel/rme_kernel.c ****     }
3049:../../Source/Kernel/rme_kernel.c ****     else
3050:../../Source/Kernel/rme_kernel.c ****     {
3051:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3052:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3053:../../Source/Kernel/rme_kernel.c ****     }
3054:../../Source/Kernel/rme_kernel.c ****     
3055:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3056:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 5856              		.loc 1 3056 14
 5857 03ac 08301BE5 		ldr	r3, [fp, #-8]
 5858 03b0 003093E5 		ldr	r3, [r3]
 5859 03b4 7330FFE6 		uxth	r3, r3
 5860 03b8 000053E3 		cmp	r3, #0
 5861 03bc 0200000A 		beq	.L367
 5862              		.loc 1 3056 14 is_stmt 0 discriminator 1
 5863 03c0 08301BE5 		ldr	r3, [fp, #-8]
 5864 03c4 043093E5 		ldr	r3, [r3, #4]
 5865 03c8 000000EA 		b	.L368
 5866              	.L367:
 5867              		.loc 1 3056 14 discriminator 2
 5868 03cc 08301BE5 		ldr	r3, [fp, #-8]
 5869              	.L368:
 5870              		.loc 1 3056 13 is_stmt 1 discriminator 4
 5871 03d0 1C300BE5 		str	r3, [fp, #-28]
3057:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5872              		.loc 1 3057 5
 5873 03d4 1C301BE5 		ldr	r3, [fp, #-28]
 5874 03d8 043083E2 		add	r3, r3, #4
 5875 03dc 0110A0E3 		mov	r1, #1
 5876 03e0 0300A0E1 		mov	r0, r3
 5877 03e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3058:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 5878              		.loc 1 3058 14
 5879 03e8 0C301BE5 		ldr	r3, [fp, #-12]
 5880 03ec 003093E5 		ldr	r3, [r3]
 5881 03f0 7330FFE6 		uxth	r3, r3
 5882 03f4 000053E3 		cmp	r3, #0
 5883 03f8 0200000A 		beq	.L369
 5884              		.loc 1 3058 14 is_stmt 0 discriminator 1
 5885 03fc 0C301BE5 		ldr	r3, [fp, #-12]
 5886 0400 043093E5 		ldr	r3, [r3, #4]
 5887 0404 000000EA 		b	.L370
 5888              	.L369:
 5889              		.loc 1 3058 14 discriminator 2
 5890 0408 0C301BE5 		ldr	r3, [fp, #-12]
 5891              	.L370:
 5892              		.loc 1 3058 13 is_stmt 1 discriminator 4
 5893 040c 1C300BE5 		str	r3, [fp, #-28]
3059:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5894              		.loc 1 3059 5
 5895 0410 1C301BE5 		ldr	r3, [fp, #-28]
 5896 0414 043083E2 		add	r3, r3, #4
 5897 0418 0110A0E3 		mov	r1, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 159


 5898 041c 0300A0E1 		mov	r0, r3
 5899 0420 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3060:../../Source/Kernel/rme_kernel.c **** 
3061:../../Source/Kernel/rme_kernel.c ****     return 0;
 5900              		.loc 1 3061 12
 5901 0424 0030A0E3 		mov	r3, #0
 5902              	.L347:
3062:../../Source/Kernel/rme_kernel.c **** }
 5903              		.loc 1 3062 1
 5904 0428 0300A0E1 		mov	r0, r3
 5905 042c 04D04BE2 		sub	sp, fp, #4
 5906              		.cfi_def_cfa 13, 8
 5907              		@ sp needed
 5908 0430 0088BDE8 		pop	{fp, pc}
 5909              		.cfi_endproc
 5910              	.LFE31:
 5912              		.section	.text._RME_Pgt_Crt,"ax",%progbits
 5913              		.align	2
 5914              		.syntax unified
 5915              		.arm
 5917              	_RME_Pgt_Crt:
 5918              	.LFB32:
3063:../../Source/Kernel/rme_kernel.c **** #endif
3064:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Con ********************************************/
3065:../../Source/Kernel/rme_kernel.c **** 
3066:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Crt ******************************************************
3067:../../Source/Kernel/rme_kernel.c **** Description : Create a page table.
3068:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3069:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
3070:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
3071:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3072:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
3073:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3074:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3075:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3076:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3077:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the page
3078:../../Source/Kernel/rme_kernel.c ****                                 table kernel object.
3079:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
3080:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
3081:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
3082:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
3083:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page 
3084:../../Source/Kernel/rme_kernel.c ****                                  directories into this one.
3085:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
3086:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the 
3087:../../Source/Kernel/rme_kernel.c ****                                      page directory.
3088:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the table.
3089:../../Source/Kernel/rme_kernel.c **** Output      : None.
3090:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3091:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3092:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3093:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Crt(struct RME_Cap_Cpt* Cpt,
3094:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3095:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
3096:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3097:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 160


3098:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Base,
3099:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Top,
3100:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Size_Order,
3101:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Num_Order)
3102:../../Source/Kernel/rme_kernel.c **** {
 5919              		.loc 1 3102 1
 5920              		.cfi_startproc
 5921              		@ args = 20, pretend = 0, frame = 40
 5922              		@ frame_needed = 1, uses_anonymous_args = 0
 5923 0000 00482DE9 		push	{fp, lr}
 5924              		.cfi_def_cfa_offset 8
 5925              		.cfi_offset 11, -8
 5926              		.cfi_offset 14, -4
 5927 0004 04B08DE2 		add	fp, sp, #4
 5928              		.cfi_def_cfa 11, 4
 5929 0008 30D04DE2 		sub	sp, sp, #48
 5930 000c 20000BE5 		str	r0, [fp, #-32]
 5931 0010 24100BE5 		str	r1, [fp, #-36]
 5932 0014 28200BE5 		str	r2, [fp, #-40]
 5933 0018 2C300BE5 		str	r3, [fp, #-44]
3103:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3104:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
3105:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
3106:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3107:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
3108:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3109:../../Source/Kernel/rme_kernel.c ****     
3110:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
3111:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
3112:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 5934              		.loc 1 3112 19
 5935 001c 10209BE5 		ldr	r2, [fp, #16]
 5936 0020 14309BE5 		ldr	r3, [fp, #20]
 5937 0024 033082E0 		add	r3, r2, r3
 5938              		.loc 1 3112 7
 5939 0028 200053E3 		cmp	r3, #32
 5940 002c 0100009A 		bls	.L372
3113:../../Source/Kernel/rme_kernel.c ****     {
3114:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3115:../../Source/Kernel/rme_kernel.c ****         
3116:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5941              		.loc 1 3116 16
 5942 0030 6630E0E3 		mvn	r3, #102
 5943 0034 550100EA 		b	.L373
 5944              	.L372:
3117:../../Source/Kernel/rme_kernel.c ****     }
3118:../../Source/Kernel/rme_kernel.c ****     else
3119:../../Source/Kernel/rme_kernel.c ****     {
3120:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3121:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3122:../../Source/Kernel/rme_kernel.c ****     }
3123:../../Source/Kernel/rme_kernel.c ****     
3124:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3125:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 5945              		.loc 1 3125 5
 5946 0038 24301BE5 		ldr	r3, [fp, #-36]
 5947 003c 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 161


 5948 0040 000053E3 		cmp	r3, #0
 5949 0044 1C00001A 		bne	.L374
 5950              		.loc 1 3125 5 is_stmt 0 discriminator 1
 5951 0048 20301BE5 		ldr	r3, [fp, #-32]
 5952 004c 142093E5 		ldr	r2, [r3, #20]
 5953 0050 24301BE5 		ldr	r3, [fp, #-36]
 5954 0054 030052E1 		cmp	r2, r3
 5955 0058 0100008A 		bhi	.L375
 5956              		.loc 1 3125 5 discriminator 3
 5957 005c 0230E0E3 		mvn	r3, #2
 5958              		.loc 1 3125 5
 5959 0060 4A0100EA 		b	.L373
 5960              	.L375:
 5961              		.loc 1 3125 5 discriminator 4
 5962 0064 24301BE5 		ldr	r3, [fp, #-36]
 5963 0068 8322A0E1 		lsl	r2, r3, #5
 5964 006c 20301BE5 		ldr	r3, [fp, #-32]
 5965 0070 0C3093E5 		ldr	r3, [r3, #12]
 5966 0074 033082E0 		add	r3, r2, r3
 5967 0078 0C300BE5 		str	r3, [fp, #-12]
 5968 007c 0C301BE5 		ldr	r3, [fp, #-12]
 5969 0080 0300A0E1 		mov	r0, r3
 5970 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5971 0088 14000BE5 		str	r0, [fp, #-20]
 5972              		.loc 1 3125 5 discriminator 1
 5973 008c 14301BE5 		ldr	r3, [fp, #-20]
 5974 0090 FF3803E2 		and	r3, r3, #16711680
 5975 0094 020853E3 		cmp	r3, #131072
 5976 0098 0100001A 		bne	.L376
 5977              		.loc 1 3125 5 discriminator 5
 5978 009c 0830E0E3 		mvn	r3, #8
 5979              		.loc 1 3125 5
 5980 00a0 3A0100EA 		b	.L373
 5981              	.L376:
 5982              		.loc 1 3125 5 discriminator 6
 5983 00a4 14301BE5 		ldr	r3, [fp, #-20]
 5984 00a8 233CA0E1 		lsr	r3, r3, #24
 5985 00ac 030053E3 		cmp	r3, #3
 5986 00b0 3F00000A 		beq	.L377
 5987              		.loc 1 3125 5 discriminator 7
 5988 00b4 0130E0E3 		mvn	r3, #1
 5989              		.loc 1 3125 5
 5990 00b8 340100EA 		b	.L373
 5991              	.L374:
 5992              		.loc 1 3125 5 discriminator 2
 5993 00bc 24301BE5 		ldr	r3, [fp, #-36]
 5994 00c0 2324A0E1 		lsr	r2, r3, #8
 5995 00c4 20301BE5 		ldr	r3, [fp, #-32]
 5996 00c8 143093E5 		ldr	r3, [r3, #20]
 5997 00cc 030052E1 		cmp	r2, r3
 5998 00d0 0100003A 		bcc	.L378
 5999              		.loc 1 3125 5 discriminator 8
 6000 00d4 0230E0E3 		mvn	r3, #2
 6001              		.loc 1 3125 5
 6002 00d8 2C0100EA 		b	.L373
 6003              	.L378:
 6004              		.loc 1 3125 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 162


 6005 00dc 24301BE5 		ldr	r3, [fp, #-36]
 6006 00e0 2334A0E1 		lsr	r3, r3, #8
 6007 00e4 8322A0E1 		lsl	r2, r3, #5
 6008 00e8 20301BE5 		ldr	r3, [fp, #-32]
 6009 00ec 0C3093E5 		ldr	r3, [r3, #12]
 6010 00f0 033082E0 		add	r3, r2, r3
 6011 00f4 0C300BE5 		str	r3, [fp, #-12]
 6012 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 6013 00fc 0300A0E1 		mov	r0, r3
 6014 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6015 0104 14000BE5 		str	r0, [fp, #-20]
 6016              		.loc 1 3125 5 discriminator 1
 6017 0108 14301BE5 		ldr	r3, [fp, #-20]
 6018 010c FF3803E2 		and	r3, r3, #16711680
 6019 0110 020853E3 		cmp	r3, #131072
 6020 0114 0100001A 		bne	.L379
 6021              		.loc 1 3125 5 discriminator 10
 6022 0118 0830E0E3 		mvn	r3, #8
 6023              		.loc 1 3125 5
 6024 011c 1B0100EA 		b	.L373
 6025              	.L379:
 6026              		.loc 1 3125 5 discriminator 11
 6027 0120 14301BE5 		ldr	r3, [fp, #-20]
 6028 0124 233CA0E1 		lsr	r3, r3, #24
 6029 0128 030053E3 		cmp	r3, #3
 6030 012c 0100000A 		beq	.L380
 6031              		.loc 1 3125 5 discriminator 12
 6032 0130 0130E0E3 		mvn	r3, #1
 6033              		.loc 1 3125 5
 6034 0134 150100EA 		b	.L373
 6035              	.L380:
 6036              		.loc 1 3125 5 discriminator 13
 6037 0138 24301BE5 		ldr	r3, [fp, #-36]
 6038 013c 7F2003E2 		and	r2, r3, #127
 6039 0140 0C301BE5 		ldr	r3, [fp, #-12]
 6040 0144 143093E5 		ldr	r3, [r3, #20]
 6041 0148 030052E1 		cmp	r2, r3
 6042 014c 0100003A 		bcc	.L381
 6043              		.loc 1 3125 5 discriminator 14
 6044 0150 0230E0E3 		mvn	r3, #2
 6045              		.loc 1 3125 5
 6046 0154 0D0100EA 		b	.L373
 6047              	.L381:
 6048              		.loc 1 3125 5 discriminator 15
 6049 0158 24301BE5 		ldr	r3, [fp, #-36]
 6050 015c 7F3003E2 		and	r3, r3, #127
 6051 0160 8322A0E1 		lsl	r2, r3, #5
 6052 0164 0C301BE5 		ldr	r3, [fp, #-12]
 6053 0168 0C3093E5 		ldr	r3, [r3, #12]
 6054 016c 033082E0 		add	r3, r2, r3
 6055 0170 0C300BE5 		str	r3, [fp, #-12]
 6056 0174 0C301BE5 		ldr	r3, [fp, #-12]
 6057 0178 0300A0E1 		mov	r0, r3
 6058 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6059 0180 14000BE5 		str	r0, [fp, #-20]
 6060              		.loc 1 3125 5 discriminator 1
 6061 0184 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 163


 6062 0188 FF3803E2 		and	r3, r3, #16711680
 6063 018c 020853E3 		cmp	r3, #131072
 6064 0190 0100001A 		bne	.L382
 6065              		.loc 1 3125 5 discriminator 16
 6066 0194 0830E0E3 		mvn	r3, #8
 6067              		.loc 1 3125 5
 6068 0198 FC0000EA 		b	.L373
 6069              	.L382:
 6070              		.loc 1 3125 5 discriminator 17
 6071 019c 14301BE5 		ldr	r3, [fp, #-20]
 6072 01a0 233CA0E1 		lsr	r3, r3, #24
 6073 01a4 030053E3 		cmp	r3, #3
 6074 01a8 0100000A 		beq	.L377
 6075              		.loc 1 3125 5 discriminator 18
 6076 01ac 0130E0E3 		mvn	r3, #1
 6077              		.loc 1 3125 5
 6078 01b0 F60000EA 		b	.L373
 6079              	.L377:
3126:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3127:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 6080              		.loc 1 3127 5 is_stmt 1
 6081 01b4 28301BE5 		ldr	r3, [fp, #-40]
 6082 01b8 803003E2 		and	r3, r3, #128
 6083 01bc 000053E3 		cmp	r3, #0
 6084 01c0 1C00001A 		bne	.L383
 6085              		.loc 1 3127 5 is_stmt 0 discriminator 1
 6086 01c4 20301BE5 		ldr	r3, [fp, #-32]
 6087 01c8 142093E5 		ldr	r2, [r3, #20]
 6088 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6089 01d0 030052E1 		cmp	r2, r3
 6090 01d4 0100008A 		bhi	.L384
 6091              		.loc 1 3127 5 discriminator 3
 6092 01d8 0230E0E3 		mvn	r3, #2
 6093              		.loc 1 3127 5
 6094 01dc EB0000EA 		b	.L373
 6095              	.L384:
 6096              		.loc 1 3127 5 discriminator 4
 6097 01e0 28301BE5 		ldr	r3, [fp, #-40]
 6098 01e4 8322A0E1 		lsl	r2, r3, #5
 6099 01e8 20301BE5 		ldr	r3, [fp, #-32]
 6100 01ec 0C3093E5 		ldr	r3, [r3, #12]
 6101 01f0 033082E0 		add	r3, r2, r3
 6102 01f4 08300BE5 		str	r3, [fp, #-8]
 6103 01f8 08301BE5 		ldr	r3, [fp, #-8]
 6104 01fc 0300A0E1 		mov	r0, r3
 6105 0200 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6106 0204 14000BE5 		str	r0, [fp, #-20]
 6107              		.loc 1 3127 5 discriminator 1
 6108 0208 14301BE5 		ldr	r3, [fp, #-20]
 6109 020c FF3803E2 		and	r3, r3, #16711680
 6110 0210 020853E3 		cmp	r3, #131072
 6111 0214 0100001A 		bne	.L385
 6112              		.loc 1 3127 5 discriminator 5
 6113 0218 0830E0E3 		mvn	r3, #8
 6114              		.loc 1 3127 5
 6115 021c DB0000EA 		b	.L373
 6116              	.L385:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 164


 6117              		.loc 1 3127 5 discriminator 6
 6118 0220 14301BE5 		ldr	r3, [fp, #-20]
 6119 0224 233CA0E1 		lsr	r3, r3, #24
 6120 0228 020053E3 		cmp	r3, #2
 6121 022c 3F00000A 		beq	.L386
 6122              		.loc 1 3127 5 discriminator 7
 6123 0230 0130E0E3 		mvn	r3, #1
 6124              		.loc 1 3127 5
 6125 0234 D50000EA 		b	.L373
 6126              	.L383:
 6127              		.loc 1 3127 5 discriminator 2
 6128 0238 28301BE5 		ldr	r3, [fp, #-40]
 6129 023c 2324A0E1 		lsr	r2, r3, #8
 6130 0240 20301BE5 		ldr	r3, [fp, #-32]
 6131 0244 143093E5 		ldr	r3, [r3, #20]
 6132 0248 030052E1 		cmp	r2, r3
 6133 024c 0100003A 		bcc	.L387
 6134              		.loc 1 3127 5 discriminator 8
 6135 0250 0230E0E3 		mvn	r3, #2
 6136              		.loc 1 3127 5
 6137 0254 CD0000EA 		b	.L373
 6138              	.L387:
 6139              		.loc 1 3127 5 discriminator 9
 6140 0258 28301BE5 		ldr	r3, [fp, #-40]
 6141 025c 2334A0E1 		lsr	r3, r3, #8
 6142 0260 8322A0E1 		lsl	r2, r3, #5
 6143 0264 20301BE5 		ldr	r3, [fp, #-32]
 6144 0268 0C3093E5 		ldr	r3, [r3, #12]
 6145 026c 033082E0 		add	r3, r2, r3
 6146 0270 08300BE5 		str	r3, [fp, #-8]
 6147 0274 08301BE5 		ldr	r3, [fp, #-8]
 6148 0278 0300A0E1 		mov	r0, r3
 6149 027c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6150 0280 14000BE5 		str	r0, [fp, #-20]
 6151              		.loc 1 3127 5 discriminator 1
 6152 0284 14301BE5 		ldr	r3, [fp, #-20]
 6153 0288 FF3803E2 		and	r3, r3, #16711680
 6154 028c 020853E3 		cmp	r3, #131072
 6155 0290 0100001A 		bne	.L388
 6156              		.loc 1 3127 5 discriminator 10
 6157 0294 0830E0E3 		mvn	r3, #8
 6158              		.loc 1 3127 5
 6159 0298 BC0000EA 		b	.L373
 6160              	.L388:
 6161              		.loc 1 3127 5 discriminator 11
 6162 029c 14301BE5 		ldr	r3, [fp, #-20]
 6163 02a0 233CA0E1 		lsr	r3, r3, #24
 6164 02a4 030053E3 		cmp	r3, #3
 6165 02a8 0100000A 		beq	.L389
 6166              		.loc 1 3127 5 discriminator 12
 6167 02ac 0130E0E3 		mvn	r3, #1
 6168              		.loc 1 3127 5
 6169 02b0 B60000EA 		b	.L373
 6170              	.L389:
 6171              		.loc 1 3127 5 discriminator 13
 6172 02b4 28301BE5 		ldr	r3, [fp, #-40]
 6173 02b8 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 165


 6174 02bc 08301BE5 		ldr	r3, [fp, #-8]
 6175 02c0 143093E5 		ldr	r3, [r3, #20]
 6176 02c4 030052E1 		cmp	r2, r3
 6177 02c8 0100003A 		bcc	.L390
 6178              		.loc 1 3127 5 discriminator 14
 6179 02cc 0230E0E3 		mvn	r3, #2
 6180              		.loc 1 3127 5
 6181 02d0 AE0000EA 		b	.L373
 6182              	.L390:
 6183              		.loc 1 3127 5 discriminator 15
 6184 02d4 28301BE5 		ldr	r3, [fp, #-40]
 6185 02d8 7F3003E2 		and	r3, r3, #127
 6186 02dc 8322A0E1 		lsl	r2, r3, #5
 6187 02e0 08301BE5 		ldr	r3, [fp, #-8]
 6188 02e4 0C3093E5 		ldr	r3, [r3, #12]
 6189 02e8 033082E0 		add	r3, r2, r3
 6190 02ec 08300BE5 		str	r3, [fp, #-8]
 6191 02f0 08301BE5 		ldr	r3, [fp, #-8]
 6192 02f4 0300A0E1 		mov	r0, r3
 6193 02f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6194 02fc 14000BE5 		str	r0, [fp, #-20]
 6195              		.loc 1 3127 5 discriminator 1
 6196 0300 14301BE5 		ldr	r3, [fp, #-20]
 6197 0304 FF3803E2 		and	r3, r3, #16711680
 6198 0308 020853E3 		cmp	r3, #131072
 6199 030c 0100001A 		bne	.L391
 6200              		.loc 1 3127 5 discriminator 16
 6201 0310 0830E0E3 		mvn	r3, #8
 6202              		.loc 1 3127 5
 6203 0314 9D0000EA 		b	.L373
 6204              	.L391:
 6205              		.loc 1 3127 5 discriminator 17
 6206 0318 14301BE5 		ldr	r3, [fp, #-20]
 6207 031c 233CA0E1 		lsr	r3, r3, #24
 6208 0320 020053E3 		cmp	r3, #2
 6209 0324 0100000A 		beq	.L386
 6210              		.loc 1 3127 5 discriminator 18
 6211 0328 0130E0E3 		mvn	r3, #1
 6212              		.loc 1 3127 5
 6213 032c 970000EA 		b	.L373
 6214              	.L386:
3128:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
3129:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3130:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op, RME_CPT_FLAG_CRT);
 6215              		.loc 1 3130 5 is_stmt 1
 6216 0330 0C301BE5 		ldr	r3, [fp, #-12]
 6217 0334 083093E5 		ldr	r3, [r3, #8]
 6218 0338 013003E2 		and	r3, r3, #1
 6219 033c 000053E3 		cmp	r3, #0
 6220 0340 0100001A 		bne	.L392
 6221              		.loc 1 3130 5 is_stmt 0 discriminator 1
 6222 0344 0630E0E3 		mvn	r3, #6
 6223              		.loc 1 3130 5
 6224 0348 900000EA 		b	.L373
 6225              	.L392:
3131:../../Source/Kernel/rme_kernel.c ****     
3132:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top-level? */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 166


3133:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 6226              		.loc 1 3133 7 is_stmt 1
 6227 034c 0C309BE5 		ldr	r3, [fp, #12]
 6228 0350 000053E3 		cmp	r3, #0
 6229 0354 0400000A 		beq	.L393
3134:../../Source/Kernel/rme_kernel.c ****     {
3135:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3136:../../Source/Kernel/rme_kernel.c **** 
3137:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 6230              		.loc 1 3137 19
 6231 0358 0120A0E3 		mov	r2, #1
 6232 035c 14309BE5 		ldr	r3, [fp, #20]
 6233 0360 1233A0E1 		lsl	r3, r2, r3
 6234 0364 10300BE5 		str	r3, [fp, #-16]
 6235 0368 030000EA 		b	.L394
 6236              	.L393:
3138:../../Source/Kernel/rme_kernel.c ****     }
3139:../../Source/Kernel/rme_kernel.c ****     else
3140:../../Source/Kernel/rme_kernel.c ****     {
3141:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3142:../../Source/Kernel/rme_kernel.c **** 
3143:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 6237              		.loc 1 3143 19
 6238 036c 0120A0E3 		mov	r2, #1
 6239 0370 14309BE5 		ldr	r3, [fp, #20]
 6240 0374 1233A0E1 		lsl	r3, r2, r3
 6241 0378 10300BE5 		str	r3, [fp, #-16]
 6242              	.L394:
3144:../../Source/Kernel/rme_kernel.c ****     }
3145:../../Source/Kernel/rme_kernel.c ****     
3146:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
3147:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_PGT,Raddr,Vaddr,Table_Size);
 6243              		.loc 1 3147 5
 6244 037c 08301BE5 		ldr	r3, [fp, #-8]
 6245 0380 083093E5 		ldr	r3, [r3, #8]
 6246 0384 023003E2 		and	r3, r3, #2
 6247 0388 000053E3 		cmp	r3, #0
 6248 038c 0100001A 		bne	.L395
 6249              		.loc 1 3147 5 is_stmt 0 discriminator 1
 6250 0390 0630E0E3 		mvn	r3, #6
 6251              		.loc 1 3147 5
 6252 0394 7D0000EA 		b	.L373
 6253              	.L395:
 6254              		.loc 1 3147 5 discriminator 2
 6255 0398 08301BE5 		ldr	r3, [fp, #-8]
 6256 039c 143093E5 		ldr	r3, [r3, #20]
 6257 03a0 04209BE5 		ldr	r2, [fp, #4]
 6258 03a4 033082E0 		add	r3, r2, r3
 6259 03a8 18300BE5 		str	r3, [fp, #-24]
 6260 03ac 18201BE5 		ldr	r2, [fp, #-24]
 6261 03b0 04309BE5 		ldr	r3, [fp, #4]
 6262 03b4 030052E1 		cmp	r2, r3
 6263 03b8 0100002A 		bcs	.L396
 6264              		.loc 1 3147 5 discriminator 3
 6265 03bc 0630E0E3 		mvn	r3, #6
 6266              		.loc 1 3147 5
 6267 03c0 720000EA 		b	.L373
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 167


 6268              	.L396:
 6269              		.loc 1 3147 5 discriminator 4
 6270 03c4 08301BE5 		ldr	r3, [fp, #-8]
 6271 03c8 143093E5 		ldr	r3, [r3, #20]
 6272 03cc 18201BE5 		ldr	r2, [fp, #-24]
 6273 03d0 030052E1 		cmp	r2, r3
 6274 03d4 0100002A 		bcs	.L397
 6275              		.loc 1 3147 5 discriminator 5
 6276 03d8 0630E0E3 		mvn	r3, #6
 6277              		.loc 1 3147 5
 6278 03dc 6B0000EA 		b	.L373
 6279              	.L397:
 6280              		.loc 1 3147 5 discriminator 6
 6281 03e0 18201BE5 		ldr	r2, [fp, #-24]
 6282 03e4 10301BE5 		ldr	r3, [fp, #-16]
 6283 03e8 033082E0 		add	r3, r2, r3
 6284 03ec 18201BE5 		ldr	r2, [fp, #-24]
 6285 03f0 030052E1 		cmp	r2, r3
 6286 03f4 0100009A 		bls	.L398
 6287              		.loc 1 3147 5 discriminator 7
 6288 03f8 0630E0E3 		mvn	r3, #6
 6289              		.loc 1 3147 5
 6290 03fc 630000EA 		b	.L373
 6291              	.L398:
 6292              		.loc 1 3147 5 discriminator 8
 6293 0400 08301BE5 		ldr	r3, [fp, #-8]
 6294 0404 182093E5 		ldr	r2, [r3, #24]
 6295 0408 18101BE5 		ldr	r1, [fp, #-24]
 6296 040c 10301BE5 		ldr	r3, [fp, #-16]
 6297 0410 033081E0 		add	r3, r1, r3
 6298 0414 013043E2 		sub	r3, r3, #1
 6299 0418 030052E1 		cmp	r2, r3
 6300 041c 0100002A 		bcs	.L399
 6301              		.loc 1 3147 5 discriminator 9
 6302 0420 0630E0E3 		mvn	r3, #6
 6303              		.loc 1 3147 5
 6304 0424 590000EA 		b	.L373
 6305              	.L399:
3148:../../Source/Kernel/rme_kernel.c **** 
3149:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
3150:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)<0)
 6306              		.loc 1 3150 8 is_stmt 1
 6307 0428 18301BE5 		ldr	r3, [fp, #-24]
 6308 042c 00308DE5 		str	r3, [sp]
 6309 0430 14309BE5 		ldr	r3, [fp, #20]
 6310 0434 10209BE5 		ldr	r2, [fp, #16]
 6311 0438 0C109BE5 		ldr	r1, [fp, #12]
 6312 043c 08009BE5 		ldr	r0, [fp, #8]
 6313 0440 FEFFFFEB 		bl	__RME_Pgt_Check
3151:../../Source/Kernel/rme_kernel.c ****     {
3152:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3153:../../Source/Kernel/rme_kernel.c **** 
3154:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3155:../../Source/Kernel/rme_kernel.c ****     }
3156:../../Source/Kernel/rme_kernel.c ****     else
3157:../../Source/Kernel/rme_kernel.c ****     {
3158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 168


3159:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3160:../../Source/Kernel/rme_kernel.c ****     }
3161:../../Source/Kernel/rme_kernel.c **** 
3162:../../Source/Kernel/rme_kernel.c ****     /* Check if the start address is properly aligned to the total order of the page table */
3163:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 6314              		.loc 1 3163 14
 6315 0444 10209BE5 		ldr	r2, [fp, #16]
 6316 0448 14309BE5 		ldr	r3, [fp, #20]
 6317 044c 033082E0 		add	r3, r2, r3
 6318 0450 203063E2 		rsb	r3, r3, #32
 6319 0454 0020E0E3 		mvn	r2, #0
 6320 0458 3223A0E1 		lsr	r2, r2, r3
 6321              		.loc 1 3163 13
 6322 045c 08309BE5 		ldr	r3, [fp, #8]
 6323 0460 023003E0 		and	r3, r3, r2
 6324              		.loc 1 3163 7
 6325 0464 000053E3 		cmp	r3, #0
 6326 0468 0100000A 		beq	.L400
3164:../../Source/Kernel/rme_kernel.c ****     {
3165:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3166:../../Source/Kernel/rme_kernel.c **** 
3167:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 6327              		.loc 1 3167 16
 6328 046c 6630E0E3 		mvn	r3, #102
 6329 0470 460000EA 		b	.L373
 6330              	.L400:
3168:../../Source/Kernel/rme_kernel.c ****     }
3169:../../Source/Kernel/rme_kernel.c ****     else
3170:../../Source/Kernel/rme_kernel.c ****     {
3171:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3172:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3173:../../Source/Kernel/rme_kernel.c ****     }
3174:../../Source/Kernel/rme_kernel.c **** 
3175:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3176:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 6331              		.loc 1 3176 5
 6332 0474 0C301BE5 		ldr	r3, [fp, #-12]
 6333 0478 142093E5 		ldr	r2, [r3, #20]
 6334 047c 2C301BE5 		ldr	r3, [fp, #-44]
 6335 0480 030052E1 		cmp	r2, r3
 6336 0484 0100008A 		bhi	.L401
 6337              		.loc 1 3176 5 is_stmt 0 discriminator 1
 6338 0488 0230E0E3 		mvn	r3, #2
 6339              		.loc 1 3176 5
 6340 048c 3F0000EA 		b	.L373
 6341              	.L401:
 6342              		.loc 1 3176 5 discriminator 2
 6343 0490 2C301BE5 		ldr	r3, [fp, #-44]
 6344 0494 8322A0E1 		lsl	r2, r3, #5
 6345 0498 0C301BE5 		ldr	r3, [fp, #-12]
 6346 049c 0C3093E5 		ldr	r3, [r3, #12]
 6347 04a0 033082E0 		add	r3, r2, r3
 6348 04a4 1C300BE5 		str	r3, [fp, #-28]
3177:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
3178:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 6349              		.loc 1 3178 5 is_stmt 1
 6350 04a8 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 169


 6351 04ac 0128A0E3 		mov	r2, #65536
 6352 04b0 0010A0E3 		mov	r1, #0
 6353 04b4 0300A0E1 		mov	r0, r3
 6354 04b8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6355 04bc 0030A0E1 		mov	r3, r0
 6356              		.loc 1 3178 5 is_stmt 0 discriminator 1
 6357 04c0 000053E3 		cmp	r3, #0
 6358 04c4 0100001A 		bne	.L402
 6359 04c8 0430E0E3 		mvn	r3, #4
 6360              		.loc 1 3178 5
 6361 04cc 2F0000EA 		b	.L373
 6362              	.L402:
 6363              		.loc 1 3178 5 discriminator 2
 6364 04d0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6365 04d4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6366 04d8 002093E5 		ldr	r2, [r3]
 6367 04dc 1C301BE5 		ldr	r3, [fp, #-28]
 6368 04e0 102083E5 		str	r2, [r3, #16]
3179:../../Source/Kernel/rme_kernel.c **** 
3180:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
3181:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Table_Size)!=0)
 6369              		.loc 1 3181 8 is_stmt 1
 6370 04e4 10101BE5 		ldr	r1, [fp, #-16]
 6371 04e8 18001BE5 		ldr	r0, [fp, #-24]
 6372 04ec FEFFFFEB 		bl	_RME_Kot_Mark
 6373 04f0 0030A0E1 		mov	r3, r0
 6374              		.loc 1 3181 7 discriminator 1
 6375 04f4 000053E3 		cmp	r3, #0
 6376 04f8 0500000A 		beq	.L403
3182:../../Source/Kernel/rme_kernel.c ****     {
3183:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3184:../../Source/Kernel/rme_kernel.c **** 
3185:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 6377              		.loc 1 3185 9
 6378 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 6379 0500 0010A0E3 		mov	r1, #0
 6380 0504 0300A0E1 		mov	r0, r3
 6381 0508 FEFFFFEB 		bl	__RME_A7A_Write_Release
3186:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 6382              		.loc 1 3186 16
 6383 050c 0330E0E3 		mvn	r3, #3
 6384 0510 1E0000EA 		b	.L373
 6385              	.L403:
3187:../../Source/Kernel/rme_kernel.c ****     }
3188:../../Source/Kernel/rme_kernel.c ****     else
3189:../../Source/Kernel/rme_kernel.c ****     {
3190:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3191:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3192:../../Source/Kernel/rme_kernel.c ****     }
3193:../../Source/Kernel/rme_kernel.c ****     
3194:../../Source/Kernel/rme_kernel.c ****     /* Header init */
3195:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 6386              		.loc 1 3195 27
 6387 0514 1C301BE5 		ldr	r3, [fp, #-28]
 6388 0518 0020A0E3 		mov	r2, #0
 6389 051c 042083E5 		str	r2, [r3, #4]
3196:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 170


 6390              		.loc 1 3196 25
 6391 0520 1C301BE5 		ldr	r3, [fp, #-28]
 6392 0524 18201BE5 		ldr	r2, [fp, #-24]
 6393 0528 0C2083E5 		str	r2, [r3, #12]
3197:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ALL;
 6394              		.loc 1 3197 23
 6395 052c 1C201BE5 		ldr	r2, [fp, #-28]
 6396 0530 FF30A0E3 		mov	r3, #255
 6397 0534 F03F4FE3 		movt	r3, 65520
 6398 0538 083082E5 		str	r3, [r2, #8]
3198:../../Source/Kernel/rme_kernel.c ****     
3199:../../Source/Kernel/rme_kernel.c ****     /* Info init */
3200:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 6399              		.loc 1 3200 23
 6400 053c 08209BE5 		ldr	r2, [fp, #8]
 6401 0540 0C309BE5 		ldr	r3, [fp, #12]
 6402 0544 032082E1 		orr	r2, r2, r3
 6403              		.loc 1 3200 18
 6404 0548 1C301BE5 		ldr	r3, [fp, #-28]
 6405 054c 182083E5 		str	r2, [r3, #24]
3201:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 6406              		.loc 1 3201 20
 6407 0550 10309BE5 		ldr	r3, [fp, #16]
 6408 0554 0328A0E1 		lsl	r2, r3, #16
 6409 0558 14309BE5 		ldr	r3, [fp, #20]
 6410 055c 032082E1 		orr	r2, r2, r3
 6411              		.loc 1 3201 19
 6412 0560 1C301BE5 		ldr	r3, [fp, #-28]
 6413 0564 142083E5 		str	r2, [r3, #20]
3202:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 6414              		.loc 1 3202 18
 6415 0568 1C301BE5 		ldr	r3, [fp, #-28]
 6416 056c 0020A0E3 		mov	r2, #0
 6417 0570 1C2083E5 		str	r2, [r3, #28]
3203:../../Source/Kernel/rme_kernel.c ****     
3204:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
3205:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 6418              		.loc 1 3205 8
 6419 0574 1C001BE5 		ldr	r0, [fp, #-28]
 6420 0578 FEFFFFEB 		bl	__RME_Pgt_Init
3206:../../Source/Kernel/rme_kernel.c ****     {
3207:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3208:../../Source/Kernel/rme_kernel.c **** 
3209:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
3210:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr,Table_Size)==0);
3211:../../Source/Kernel/rme_kernel.c ****         
3212:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
3213:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
3214:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3215:../../Source/Kernel/rme_kernel.c ****     }
3216:../../Source/Kernel/rme_kernel.c ****     else
3217:../../Source/Kernel/rme_kernel.c ****     {
3218:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3219:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3220:../../Source/Kernel/rme_kernel.c ****     }
3221:../../Source/Kernel/rme_kernel.c **** 
3222:../../Source/Kernel/rme_kernel.c ****     /* Creation complete */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 171


3223:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 6421              		.loc 1 3223 5
 6422 057c 1C301BE5 		ldr	r3, [fp, #-28]
 6423 0580 0113A0E3 		mov	r1, #67108864
 6424 0584 0300A0E1 		mov	r0, r3
 6425 0588 FEFFFFEB 		bl	__RME_A7A_Write_Release
3224:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
3225:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
3226:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
3227:../../Source/Kernel/rme_kernel.c **** 
3228:../../Source/Kernel/rme_kernel.c ****     return 0;
 6426              		.loc 1 3228 12
 6427 058c 0030A0E3 		mov	r3, #0
 6428              	.L373:
3229:../../Source/Kernel/rme_kernel.c **** }
 6429              		.loc 1 3229 1
 6430 0590 0300A0E1 		mov	r0, r3
 6431 0594 04D04BE2 		sub	sp, fp, #4
 6432              		.cfi_def_cfa 13, 8
 6433              		@ sp needed
 6434 0598 0088BDE8 		pop	{fp, pc}
 6435              		.cfi_endproc
 6436              	.LFE32:
 6438              		.section	.text._RME_Pgt_Del,"ax",%progbits
 6439              		.align	2
 6440              		.syntax unified
 6441              		.arm
 6443              	_RME_Pgt_Del:
 6444              	.LFB33:
3230:../../Source/Kernel/rme_kernel.c **** #endif
3231:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Crt *************************************************/
3232:../../Source/Kernel/rme_kernel.c **** 
3233:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Del ******************************************************
3234:../../Source/Kernel/rme_kernel.c **** Description : Delete a page table.
3235:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3236:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
3237:../../Source/Kernel/rme_kernel.c ****                                   the cap to new captbl.
3238:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3239:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3240:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3241:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3242:../../Source/Kernel/rme_kernel.c **** Output      : None.
3243:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3244:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3245:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3246:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Del(struct RME_Cap_Cpt* Cpt,
3247:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3248:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
3249:../../Source/Kernel/rme_kernel.c **** {
 6445              		.loc 1 3249 1
 6446              		.cfi_startproc
 6447              		@ args = 0, pretend = 0, frame = 40
 6448              		@ frame_needed = 1, uses_anonymous_args = 0
 6449 0000 00482DE9 		push	{fp, lr}
 6450              		.cfi_def_cfa_offset 8
 6451              		.cfi_offset 11, -8
 6452              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 172


 6453 0004 04B08DE2 		add	fp, sp, #4
 6454              		.cfi_def_cfa 11, 4
 6455 0008 28D04DE2 		sub	sp, sp, #40
 6456 000c 20000BE5 		str	r0, [fp, #-32]
 6457 0010 24100BE5 		str	r1, [fp, #-36]
 6458 0014 28200BE5 		str	r2, [fp, #-40]
3250:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3251:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Del;
3252:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3253:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
3254:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
3255:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3256:../../Source/Kernel/rme_kernel.c ****     
3257:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3258:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 6459              		.loc 1 3258 5
 6460 0018 24301BE5 		ldr	r3, [fp, #-36]
 6461 001c 803003E2 		and	r3, r3, #128
 6462 0020 000053E3 		cmp	r3, #0
 6463 0024 1C00001A 		bne	.L405
 6464              		.loc 1 3258 5 is_stmt 0 discriminator 1
 6465 0028 20301BE5 		ldr	r3, [fp, #-32]
 6466 002c 142093E5 		ldr	r2, [r3, #20]
 6467 0030 24301BE5 		ldr	r3, [fp, #-36]
 6468 0034 030052E1 		cmp	r2, r3
 6469 0038 0100008A 		bhi	.L406
 6470              		.loc 1 3258 5 discriminator 3
 6471 003c 0230E0E3 		mvn	r3, #2
 6472              		.loc 1 3258 5
 6473 0040 D20000EA 		b	.L407
 6474              	.L406:
 6475              		.loc 1 3258 5 discriminator 4
 6476 0044 24301BE5 		ldr	r3, [fp, #-36]
 6477 0048 8322A0E1 		lsl	r2, r3, #5
 6478 004c 20301BE5 		ldr	r3, [fp, #-32]
 6479 0050 0C3093E5 		ldr	r3, [r3, #12]
 6480 0054 033082E0 		add	r3, r2, r3
 6481 0058 08300BE5 		str	r3, [fp, #-8]
 6482 005c 08301BE5 		ldr	r3, [fp, #-8]
 6483 0060 0300A0E1 		mov	r0, r3
 6484 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6485 0068 10000BE5 		str	r0, [fp, #-16]
 6486              		.loc 1 3258 5 discriminator 1
 6487 006c 10301BE5 		ldr	r3, [fp, #-16]
 6488 0070 FF3803E2 		and	r3, r3, #16711680
 6489 0074 020853E3 		cmp	r3, #131072
 6490 0078 0100001A 		bne	.L408
 6491              		.loc 1 3258 5 discriminator 5
 6492 007c 0830E0E3 		mvn	r3, #8
 6493              		.loc 1 3258 5
 6494 0080 C20000EA 		b	.L407
 6495              	.L408:
 6496              		.loc 1 3258 5 discriminator 6
 6497 0084 10301BE5 		ldr	r3, [fp, #-16]
 6498 0088 233CA0E1 		lsr	r3, r3, #24
 6499 008c 030053E3 		cmp	r3, #3
 6500 0090 3F00000A 		beq	.L409
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 173


 6501              		.loc 1 3258 5 discriminator 7
 6502 0094 0130E0E3 		mvn	r3, #1
 6503              		.loc 1 3258 5
 6504 0098 BC0000EA 		b	.L407
 6505              	.L405:
 6506              		.loc 1 3258 5 discriminator 2
 6507 009c 24301BE5 		ldr	r3, [fp, #-36]
 6508 00a0 2324A0E1 		lsr	r2, r3, #8
 6509 00a4 20301BE5 		ldr	r3, [fp, #-32]
 6510 00a8 143093E5 		ldr	r3, [r3, #20]
 6511 00ac 030052E1 		cmp	r2, r3
 6512 00b0 0100003A 		bcc	.L410
 6513              		.loc 1 3258 5 discriminator 8
 6514 00b4 0230E0E3 		mvn	r3, #2
 6515              		.loc 1 3258 5
 6516 00b8 B40000EA 		b	.L407
 6517              	.L410:
 6518              		.loc 1 3258 5 discriminator 9
 6519 00bc 24301BE5 		ldr	r3, [fp, #-36]
 6520 00c0 2334A0E1 		lsr	r3, r3, #8
 6521 00c4 8322A0E1 		lsl	r2, r3, #5
 6522 00c8 20301BE5 		ldr	r3, [fp, #-32]
 6523 00cc 0C3093E5 		ldr	r3, [r3, #12]
 6524 00d0 033082E0 		add	r3, r2, r3
 6525 00d4 08300BE5 		str	r3, [fp, #-8]
 6526 00d8 08301BE5 		ldr	r3, [fp, #-8]
 6527 00dc 0300A0E1 		mov	r0, r3
 6528 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6529 00e4 10000BE5 		str	r0, [fp, #-16]
 6530              		.loc 1 3258 5 discriminator 1
 6531 00e8 10301BE5 		ldr	r3, [fp, #-16]
 6532 00ec FF3803E2 		and	r3, r3, #16711680
 6533 00f0 020853E3 		cmp	r3, #131072
 6534 00f4 0100001A 		bne	.L411
 6535              		.loc 1 3258 5 discriminator 10
 6536 00f8 0830E0E3 		mvn	r3, #8
 6537              		.loc 1 3258 5
 6538 00fc A30000EA 		b	.L407
 6539              	.L411:
 6540              		.loc 1 3258 5 discriminator 11
 6541 0100 10301BE5 		ldr	r3, [fp, #-16]
 6542 0104 233CA0E1 		lsr	r3, r3, #24
 6543 0108 030053E3 		cmp	r3, #3
 6544 010c 0100000A 		beq	.L412
 6545              		.loc 1 3258 5 discriminator 12
 6546 0110 0130E0E3 		mvn	r3, #1
 6547              		.loc 1 3258 5
 6548 0114 9D0000EA 		b	.L407
 6549              	.L412:
 6550              		.loc 1 3258 5 discriminator 13
 6551 0118 24301BE5 		ldr	r3, [fp, #-36]
 6552 011c 7F2003E2 		and	r2, r3, #127
 6553 0120 08301BE5 		ldr	r3, [fp, #-8]
 6554 0124 143093E5 		ldr	r3, [r3, #20]
 6555 0128 030052E1 		cmp	r2, r3
 6556 012c 0100003A 		bcc	.L413
 6557              		.loc 1 3258 5 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 174


 6558 0130 0230E0E3 		mvn	r3, #2
 6559              		.loc 1 3258 5
 6560 0134 950000EA 		b	.L407
 6561              	.L413:
 6562              		.loc 1 3258 5 discriminator 15
 6563 0138 24301BE5 		ldr	r3, [fp, #-36]
 6564 013c 7F3003E2 		and	r3, r3, #127
 6565 0140 8322A0E1 		lsl	r2, r3, #5
 6566 0144 08301BE5 		ldr	r3, [fp, #-8]
 6567 0148 0C3093E5 		ldr	r3, [r3, #12]
 6568 014c 033082E0 		add	r3, r2, r3
 6569 0150 08300BE5 		str	r3, [fp, #-8]
 6570 0154 08301BE5 		ldr	r3, [fp, #-8]
 6571 0158 0300A0E1 		mov	r0, r3
 6572 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6573 0160 10000BE5 		str	r0, [fp, #-16]
 6574              		.loc 1 3258 5 discriminator 1
 6575 0164 10301BE5 		ldr	r3, [fp, #-16]
 6576 0168 FF3803E2 		and	r3, r3, #16711680
 6577 016c 020853E3 		cmp	r3, #131072
 6578 0170 0100001A 		bne	.L414
 6579              		.loc 1 3258 5 discriminator 16
 6580 0174 0830E0E3 		mvn	r3, #8
 6581              		.loc 1 3258 5
 6582 0178 840000EA 		b	.L407
 6583              	.L414:
 6584              		.loc 1 3258 5 discriminator 17
 6585 017c 10301BE5 		ldr	r3, [fp, #-16]
 6586 0180 233CA0E1 		lsr	r3, r3, #24
 6587 0184 030053E3 		cmp	r3, #3
 6588 0188 0100000A 		beq	.L409
 6589              		.loc 1 3258 5 discriminator 18
 6590 018c 0130E0E3 		mvn	r3, #1
 6591              		.loc 1 3258 5
 6592 0190 7E0000EA 		b	.L407
 6593              	.L409:
3259:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3260:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3261:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 6594              		.loc 1 3261 5 is_stmt 1
 6595 0194 08301BE5 		ldr	r3, [fp, #-8]
 6596 0198 083093E5 		ldr	r3, [r3, #8]
 6597 019c 023003E2 		and	r3, r3, #2
 6598 01a0 000053E3 		cmp	r3, #0
 6599 01a4 0100001A 		bne	.L415
 6600              		.loc 1 3261 5 is_stmt 0 discriminator 1
 6601 01a8 0630E0E3 		mvn	r3, #6
 6602              		.loc 1 3261 5
 6603 01ac 770000EA 		b	.L407
 6604              	.L415:
3262:../../Source/Kernel/rme_kernel.c ****     
3263:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3264:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Del);
 6605              		.loc 1 3264 5 is_stmt 1
 6606 01b0 08301BE5 		ldr	r3, [fp, #-8]
 6607 01b4 142093E5 		ldr	r2, [r3, #20]
 6608 01b8 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 175


 6609 01bc 030052E1 		cmp	r2, r3
 6610 01c0 0100008A 		bhi	.L416
 6611              		.loc 1 3264 5 is_stmt 0 discriminator 1
 6612 01c4 0230E0E3 		mvn	r3, #2
 6613              		.loc 1 3264 5
 6614 01c8 700000EA 		b	.L407
 6615              	.L416:
 6616              		.loc 1 3264 5 discriminator 2
 6617 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6618 01d0 8322A0E1 		lsl	r2, r3, #5
 6619 01d4 08301BE5 		ldr	r3, [fp, #-8]
 6620 01d8 0C3093E5 		ldr	r3, [r3, #12]
 6621 01dc 033082E0 		add	r3, r2, r3
 6622 01e0 14300BE5 		str	r3, [fp, #-20]
3265:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
3266:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Pgt_Del,Type_Stat,RME_CAP_TYPE_PGT);
 6623              		.loc 1 3266 5 is_stmt 1
 6624 01e4 14301BE5 		ldr	r3, [fp, #-20]
 6625 01e8 0300A0E1 		mov	r0, r3
 6626 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6627 01f0 10000BE5 		str	r0, [fp, #-16]
 6628              		.loc 1 3266 5 is_stmt 0 discriminator 1
 6629 01f4 10301BE5 		ldr	r3, [fp, #-16]
 6630 01f8 FF3803E2 		and	r3, r3, #16711680
 6631 01fc 020853E3 		cmp	r3, #131072
 6632 0200 0100000A 		beq	.L417
 6633 0204 0830E0E3 		mvn	r3, #8
 6634              		.loc 1 3266 5
 6635 0208 600000EA 		b	.L407
 6636              	.L417:
 6637              		.loc 1 3266 5 discriminator 2
 6638 020c 10301BE5 		ldr	r3, [fp, #-16]
 6639 0210 233CA0E1 		lsr	r3, r3, #24
 6640 0214 040053E3 		cmp	r3, #4
 6641 0218 0100000A 		beq	.L418
 6642              		.loc 1 3266 5 discriminator 3
 6643 021c 0130E0E3 		mvn	r3, #1
 6644              		.loc 1 3266 5
 6645 0220 5A0000EA 		b	.L407
 6646              	.L418:
 6647              		.loc 1 3266 5 discriminator 4
 6648 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6649 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6650 022c 002093E5 		ldr	r2, [r3]
 6651 0230 14301BE5 		ldr	r3, [fp, #-20]
 6652 0234 103093E5 		ldr	r3, [r3, #16]
 6653 0238 0310A0E1 		mov	r1, r3
 6654 023c 0200A0E1 		mov	r0, r2
 6655 0240 FEFFFFEB 		bl	_RME_Diff
 6656 0244 0030A0E1 		mov	r3, r0
 6657              		.loc 1 3266 5 discriminator 1
 6658 0248 0A0053E3 		cmp	r3, #10
 6659 024c 0100008A 		bhi	.L419
 6660              		.loc 1 3266 5 discriminator 5
 6661 0250 0730E0E3 		mvn	r3, #7
 6662              		.loc 1 3266 5
 6663 0254 4D0000EA 		b	.L407
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 176


 6664              	.L419:
 6665              		.loc 1 3266 5 discriminator 6
 6666 0258 14301BE5 		ldr	r3, [fp, #-20]
 6667 025c 043093E5 		ldr	r3, [r3, #4]
 6668 0260 000053E3 		cmp	r3, #0
 6669 0264 0B00000A 		beq	.L420
 6670              		.loc 1 3266 5 discriminator 7
 6671 0268 10301BE5 		ldr	r3, [fp, #-16]
 6672 026c 7330FFE6 		uxth	r3, r3
 6673 0270 000053E3 		cmp	r3, #0
 6674 0274 0500001A 		bne	.L421
 6675              		.loc 1 3266 5 discriminator 9
 6676 0278 14001BE5 		ldr	r0, [fp, #-20]
 6677 027c 10301BE5 		ldr	r3, [fp, #-16]
 6678 0280 FF38C3E3 		bic	r3, r3, #16711680
 6679 0284 0320A0E1 		mov	r2, r3
 6680 0288 10101BE5 		ldr	r1, [fp, #-16]
 6681 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6682              	.L421:
 6683              		.loc 1 3266 5 discriminator 11
 6684 0290 0530E0E3 		mvn	r3, #5
 6685              		.loc 1 3266 5
 6686 0294 3D0000EA 		b	.L407
 6687              	.L420:
 6688              		.loc 1 3266 5 discriminator 8
 6689 0298 10301BE5 		ldr	r3, [fp, #-16]
 6690 029c 7330FFE6 		uxth	r3, r3
 6691 02a0 000053E3 		cmp	r3, #0
 6692 02a4 0800000A 		beq	.L422
 6693              		.loc 1 3266 5 discriminator 12
 6694 02a8 003000E3 		movw	r3, #:lower16:.LC6
 6695 02ac 003040E3 		movt	r3, #:upper16:.LC6
 6696 02b0 002000E3 		movw	r2, #:lower16:.LC7
 6697 02b4 002040E3 		movt	r2, #:upper16:.LC7
 6698 02b8 C21C00E3 		movw	r1, #3266
 6699 02bc 000000E3 		movw	r0, #:lower16:.LC8
 6700 02c0 000040E3 		movt	r0, #:upper16:.LC8
 6701 02c4 FEFFFFEB 		bl	RME_Log
 6702              	.L423:
 6703              		.loc 1 3266 5
 6704 02c8 FEFFFFEA 		b	.L423
 6705              	.L422:
3267:../../Source/Kernel/rme_kernel.c ****     
3268:../../Source/Kernel/rme_kernel.c ****     /* Hardware related deletion check passed down to the HAL. The driver should make
3269:../../Source/Kernel/rme_kernel.c ****      * sure that it does not reference any lower level tables. If the driver layer does
3270:../../Source/Kernel/rme_kernel.c ****      * not conform to this, the deletion of page table is not guaranteed to main kernel
3271:../../Source/Kernel/rme_kernel.c ****      * consistency, and such consistency must be maintained by the user-level. It is 
3272:../../Source/Kernel/rme_kernel.c ****      * recommended that the driver layer enforce such consistency. */
3273:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Del_Check(Pgt_Del)<0)
 6706              		.loc 1 3273 8 is_stmt 1
 6707 02cc 14001BE5 		ldr	r0, [fp, #-20]
 6708 02d0 FEFFFFEB 		bl	__RME_Pgt_Del_Check
3274:../../Source/Kernel/rme_kernel.c ****     {
3275:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3276:../../Source/Kernel/rme_kernel.c **** 
3277:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Pgt_Del,Type_Stat);
3278:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 177


3279:../../Source/Kernel/rme_kernel.c ****     }
3280:../../Source/Kernel/rme_kernel.c ****     else
3281:../../Source/Kernel/rme_kernel.c ****     {
3282:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3283:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3284:../../Source/Kernel/rme_kernel.c ****     }
3285:../../Source/Kernel/rme_kernel.c ****     
3286:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
3287:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Pgt_Del,rme_ptr_t);
 6709              		.loc 1 3287 11
 6710 02d4 14301BE5 		ldr	r3, [fp, #-20]
 6711 02d8 0C3093E5 		ldr	r3, [r3, #12]
 6712 02dc 18300BE5 		str	r3, [fp, #-24]
3288:../../Source/Kernel/rme_kernel.c ****     if(((Pgt_Del->Base)&RME_PGT_TOP)!=0U)
 6713              		.loc 1 3288 17
 6714 02e0 14301BE5 		ldr	r3, [fp, #-20]
 6715 02e4 183093E5 		ldr	r3, [r3, #24]
 6716              		.loc 1 3288 24
 6717 02e8 013003E2 		and	r3, r3, #1
 6718              		.loc 1 3288 7
 6719 02ec 000053E3 		cmp	r3, #0
 6720 02f0 0600000A 		beq	.L424
3289:../../Source/Kernel/rme_kernel.c ****     {
3290:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3291:../../Source/Kernel/rme_kernel.c **** 
3292:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(RME_PGT_NMORD(Pgt_Del->Order));
 6721              		.loc 1 3292 20
 6722 02f4 14301BE5 		ldr	r3, [fp, #-20]
 6723 02f8 143093E5 		ldr	r3, [r3, #20]
 6724 02fc 7330FFE6 		uxth	r3, r3
 6725              		.loc 1 3292 19
 6726 0300 0120A0E3 		mov	r2, #1
 6727 0304 1233A0E1 		lsl	r3, r2, r3
 6728 0308 0C300BE5 		str	r3, [fp, #-12]
 6729 030c 050000EA 		b	.L425
 6730              	.L424:
3293:../../Source/Kernel/rme_kernel.c ****     }
3294:../../Source/Kernel/rme_kernel.c ****     else
3295:../../Source/Kernel/rme_kernel.c ****     {
3296:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3297:../../Source/Kernel/rme_kernel.c **** 
3298:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(RME_PGT_NMORD(Pgt_Del->Order));
 6731              		.loc 1 3298 20
 6732 0310 14301BE5 		ldr	r3, [fp, #-20]
 6733 0314 143093E5 		ldr	r3, [r3, #20]
 6734 0318 7330FFE6 		uxth	r3, r3
 6735              		.loc 1 3298 19
 6736 031c 0120A0E3 		mov	r2, #1
 6737 0320 1233A0E1 		lsl	r3, r2, r3
 6738 0324 0C300BE5 		str	r3, [fp, #-12]
 6739              	.L425:
3299:../../Source/Kernel/rme_kernel.c ****     }
3300:../../Source/Kernel/rme_kernel.c ****     
3301:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
3302:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Pgt_Del,Type_Stat);
 6740              		.loc 1 3302 5
 6741 0328 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 178


 6742 032c 0020A0E3 		mov	r2, #0
 6743 0330 10101BE5 		ldr	r1, [fp, #-16]
 6744 0334 0300A0E1 		mov	r0, r3
 6745 0338 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6746 033c 0030A0E1 		mov	r3, r0
 6747              		.loc 1 3302 5 is_stmt 0 discriminator 1
 6748 0340 000053E3 		cmp	r3, #0
 6749 0344 0100001A 		bne	.L426
 6750 0348 0030E0E3 		mvn	r3, #0
 6751              		.loc 1 3302 5
 6752 034c 0F0000EA 		b	.L407
 6753              	.L426:
3303:../../Source/Kernel/rme_kernel.c **** 
3304:../../Source/Kernel/rme_kernel.c ****     /* Try to erase the area - This must be successful */
3305:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Table_Size)==0);
 6754              		.loc 1 3305 5 is_stmt 1
 6755 0350 0C101BE5 		ldr	r1, [fp, #-12]
 6756 0354 18001BE5 		ldr	r0, [fp, #-24]
 6757 0358 FEFFFFEB 		bl	_RME_Kot_Erase
 6758 035c 0030A0E1 		mov	r3, r0
 6759              		.loc 1 3305 5 is_stmt 0 discriminator 1
 6760 0360 000053E3 		cmp	r3, #0
 6761 0364 0800000A 		beq	.L427
 6762 0368 003000E3 		movw	r3, #:lower16:.LC6
 6763 036c 003040E3 		movt	r3, #:upper16:.LC6
 6764 0370 002000E3 		movw	r2, #:lower16:.LC7
 6765 0374 002040E3 		movt	r2, #:upper16:.LC7
 6766 0378 E91C00E3 		movw	r1, #3305
 6767 037c 000000E3 		movw	r0, #:lower16:.LC8
 6768 0380 000040E3 		movt	r0, #:upper16:.LC8
 6769 0384 FEFFFFEB 		bl	RME_Log
 6770              	.L428:
 6771              		.loc 1 3305 5
 6772 0388 FEFFFFEA 		b	.L428
 6773              	.L427:
3306:../../Source/Kernel/rme_kernel.c **** 
3307:../../Source/Kernel/rme_kernel.c ****     return 0;
 6774              		.loc 1 3307 12 is_stmt 1
 6775 038c 0030A0E3 		mov	r3, #0
 6776              	.L407:
3308:../../Source/Kernel/rme_kernel.c **** }
 6777              		.loc 1 3308 1
 6778 0390 0300A0E1 		mov	r0, r3
 6779 0394 04D04BE2 		sub	sp, fp, #4
 6780              		.cfi_def_cfa 13, 8
 6781              		@ sp needed
 6782 0398 0088BDE8 		pop	{fp, pc}
 6783              		.cfi_endproc
 6784              	.LFE33:
 6786              		.section	.text._RME_Pgt_Add,"ax",%progbits
 6787              		.align	2
 6788              		.syntax unified
 6789              		.arm
 6791              	_RME_Pgt_Add:
 6792              	.LFB34:
3309:../../Source/Kernel/rme_kernel.c **** #endif
3310:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Del *************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 179


3311:../../Source/Kernel/rme_kernel.c **** 
3312:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Add ******************************************************
3313:../../Source/Kernel/rme_kernel.c **** Description : Delegate a page from one page table to another. This is the only
3314:../../Source/Kernel/rme_kernel.c ****               way to add pages to new page tables after the system boots.
3315:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3316:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Dst - The capability to the destination page
3317:../../Source/Kernel/rme_kernel.c ****                                       directory.
3318:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3319:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate to in the
3320:../../Source/Kernel/rme_kernel.c ****                                   destination page directory.
3321:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Dst - The page access permission for the
3322:../../Source/Kernel/rme_kernel.c ****                                    destination page.
3323:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Src - The capability to the source page 
3324:../../Source/Kernel/rme_kernel.c ****                                       directory.
3325:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3326:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate from in the source
3327:../../Source/Kernel/rme_kernel.c ****                                   page directory.
3328:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Index - The index of the physical address frame to
3329:../../Source/Kernel/rme_kernel.c ****                                 delegate. For example, if the destination
3330:../../Source/Kernel/rme_kernel.c ****                                 directory's page size is 1/4 of that of the
3331:../../Source/Kernel/rme_kernel.c ****                                 source directory, index=0 will delegate the
3332:../../Source/Kernel/rme_kernel.c ****                                 first 1/4, index=1 will delegate the second
3333:../../Source/Kernel/rme_kernel.c ****                                 1/4, index=2 will delegate the third 1/4, and
3334:../../Source/Kernel/rme_kernel.c ****                                 index=3 will delegate the last 1/4.
3335:../../Source/Kernel/rme_kernel.c ****                                 All other index values are illegal.
3336:../../Source/Kernel/rme_kernel.c **** Output      : None.
3337:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3338:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3339:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3340:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Add(struct RME_Cap_Cpt* Cpt, 
3341:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Dst,
3342:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Dst,
3343:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Dst,
3344:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Src,
3345:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Src,
3346:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Index)
3347:../../Source/Kernel/rme_kernel.c **** {
 6793              		.loc 1 3347 1
 6794              		.cfi_startproc
 6795              		@ args = 12, pretend = 0, frame = 48
 6796              		@ frame_needed = 1, uses_anonymous_args = 0
 6797 0000 00482DE9 		push	{fp, lr}
 6798              		.cfi_def_cfa_offset 8
 6799              		.cfi_offset 11, -8
 6800              		.cfi_offset 14, -4
 6801 0004 04B08DE2 		add	fp, sp, #4
 6802              		.cfi_def_cfa 11, 4
 6803 0008 30D04DE2 		sub	sp, sp, #48
 6804 000c 28000BE5 		str	r0, [fp, #-40]
 6805 0010 2C100BE5 		str	r1, [fp, #-44]
 6806 0014 30200BE5 		str	r2, [fp, #-48]
 6807 0018 34300BE5 		str	r3, [fp, #-52]
3348:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Src;
3349:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Dst;
3350:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Dst;
3351:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Src;
3352:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag_Src;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 180


3353:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3354:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Src;
3355:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Dst;
3356:../../Source/Kernel/rme_kernel.c **** 
3357:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3358:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Dst,RME_CAP_TYPE_PGT,
 6808              		.loc 1 3358 5
 6809 001c 2C301BE5 		ldr	r3, [fp, #-44]
 6810 0020 803003E2 		and	r3, r3, #128
 6811 0024 000053E3 		cmp	r3, #0
 6812 0028 1C00001A 		bne	.L430
 6813              		.loc 1 3358 5 is_stmt 0 discriminator 1
 6814 002c 28301BE5 		ldr	r3, [fp, #-40]
 6815 0030 142093E5 		ldr	r2, [r3, #20]
 6816 0034 2C301BE5 		ldr	r3, [fp, #-44]
 6817 0038 030052E1 		cmp	r2, r3
 6818 003c 0100008A 		bhi	.L431
 6819              		.loc 1 3358 5 discriminator 3
 6820 0040 0230E0E3 		mvn	r3, #2
 6821              		.loc 1 3358 5
 6822 0044 260100EA 		b	.L460
 6823              	.L431:
 6824              		.loc 1 3358 5 discriminator 4
 6825 0048 2C301BE5 		ldr	r3, [fp, #-44]
 6826 004c 8322A0E1 		lsl	r2, r3, #5
 6827 0050 28301BE5 		ldr	r3, [fp, #-40]
 6828 0054 0C3093E5 		ldr	r3, [r3, #12]
 6829 0058 033082E0 		add	r3, r2, r3
 6830 005c 0C300BE5 		str	r3, [fp, #-12]
 6831 0060 0C301BE5 		ldr	r3, [fp, #-12]
 6832 0064 0300A0E1 		mov	r0, r3
 6833 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6834 006c 14000BE5 		str	r0, [fp, #-20]
 6835              		.loc 1 3358 5 discriminator 1
 6836 0070 14301BE5 		ldr	r3, [fp, #-20]
 6837 0074 FF3803E2 		and	r3, r3, #16711680
 6838 0078 020853E3 		cmp	r3, #131072
 6839 007c 0100001A 		bne	.L433
 6840              		.loc 1 3358 5 discriminator 5
 6841 0080 0830E0E3 		mvn	r3, #8
 6842              		.loc 1 3358 5
 6843 0084 160100EA 		b	.L460
 6844              	.L433:
 6845              		.loc 1 3358 5 discriminator 6
 6846 0088 14301BE5 		ldr	r3, [fp, #-20]
 6847 008c 233CA0E1 		lsr	r3, r3, #24
 6848 0090 040053E3 		cmp	r3, #4
 6849 0094 3F00000A 		beq	.L434
 6850              		.loc 1 3358 5 discriminator 7
 6851 0098 0130E0E3 		mvn	r3, #1
 6852              		.loc 1 3358 5
 6853 009c 100100EA 		b	.L460
 6854              	.L430:
 6855              		.loc 1 3358 5 discriminator 2
 6856 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 6857 00a4 2324A0E1 		lsr	r2, r3, #8
 6858 00a8 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 181


 6859 00ac 143093E5 		ldr	r3, [r3, #20]
 6860 00b0 030052E1 		cmp	r2, r3
 6861 00b4 0100003A 		bcc	.L435
 6862              		.loc 1 3358 5 discriminator 8
 6863 00b8 0230E0E3 		mvn	r3, #2
 6864              		.loc 1 3358 5
 6865 00bc 080100EA 		b	.L460
 6866              	.L435:
 6867              		.loc 1 3358 5 discriminator 9
 6868 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 6869 00c4 2334A0E1 		lsr	r3, r3, #8
 6870 00c8 8322A0E1 		lsl	r2, r3, #5
 6871 00cc 28301BE5 		ldr	r3, [fp, #-40]
 6872 00d0 0C3093E5 		ldr	r3, [r3, #12]
 6873 00d4 033082E0 		add	r3, r2, r3
 6874 00d8 0C300BE5 		str	r3, [fp, #-12]
 6875 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 6876 00e0 0300A0E1 		mov	r0, r3
 6877 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6878 00e8 14000BE5 		str	r0, [fp, #-20]
 6879              		.loc 1 3358 5 discriminator 1
 6880 00ec 14301BE5 		ldr	r3, [fp, #-20]
 6881 00f0 FF3803E2 		and	r3, r3, #16711680
 6882 00f4 020853E3 		cmp	r3, #131072
 6883 00f8 0100001A 		bne	.L436
 6884              		.loc 1 3358 5 discriminator 10
 6885 00fc 0830E0E3 		mvn	r3, #8
 6886              		.loc 1 3358 5
 6887 0100 F70000EA 		b	.L460
 6888              	.L436:
 6889              		.loc 1 3358 5 discriminator 11
 6890 0104 14301BE5 		ldr	r3, [fp, #-20]
 6891 0108 233CA0E1 		lsr	r3, r3, #24
 6892 010c 030053E3 		cmp	r3, #3
 6893 0110 0100000A 		beq	.L437
 6894              		.loc 1 3358 5 discriminator 12
 6895 0114 0130E0E3 		mvn	r3, #1
 6896              		.loc 1 3358 5
 6897 0118 F10000EA 		b	.L460
 6898              	.L437:
 6899              		.loc 1 3358 5 discriminator 13
 6900 011c 2C301BE5 		ldr	r3, [fp, #-44]
 6901 0120 7F2003E2 		and	r2, r3, #127
 6902 0124 0C301BE5 		ldr	r3, [fp, #-12]
 6903 0128 143093E5 		ldr	r3, [r3, #20]
 6904 012c 030052E1 		cmp	r2, r3
 6905 0130 0100003A 		bcc	.L438
 6906              		.loc 1 3358 5 discriminator 14
 6907 0134 0230E0E3 		mvn	r3, #2
 6908              		.loc 1 3358 5
 6909 0138 E90000EA 		b	.L460
 6910              	.L438:
 6911              		.loc 1 3358 5 discriminator 15
 6912 013c 2C301BE5 		ldr	r3, [fp, #-44]
 6913 0140 7F3003E2 		and	r3, r3, #127
 6914 0144 8322A0E1 		lsl	r2, r3, #5
 6915 0148 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 182


 6916 014c 0C3093E5 		ldr	r3, [r3, #12]
 6917 0150 033082E0 		add	r3, r2, r3
 6918 0154 0C300BE5 		str	r3, [fp, #-12]
 6919 0158 0C301BE5 		ldr	r3, [fp, #-12]
 6920 015c 0300A0E1 		mov	r0, r3
 6921 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6922 0164 14000BE5 		str	r0, [fp, #-20]
 6923              		.loc 1 3358 5 discriminator 1
 6924 0168 14301BE5 		ldr	r3, [fp, #-20]
 6925 016c FF3803E2 		and	r3, r3, #16711680
 6926 0170 020853E3 		cmp	r3, #131072
 6927 0174 0100001A 		bne	.L439
 6928              		.loc 1 3358 5 discriminator 16
 6929 0178 0830E0E3 		mvn	r3, #8
 6930              		.loc 1 3358 5
 6931 017c D80000EA 		b	.L460
 6932              	.L439:
 6933              		.loc 1 3358 5 discriminator 17
 6934 0180 14301BE5 		ldr	r3, [fp, #-20]
 6935 0184 233CA0E1 		lsr	r3, r3, #24
 6936 0188 040053E3 		cmp	r3, #4
 6937 018c 0100000A 		beq	.L434
 6938              		.loc 1 3358 5 discriminator 18
 6939 0190 0130E0E3 		mvn	r3, #1
 6940              		.loc 1 3358 5
 6941 0194 D20000EA 		b	.L460
 6942              	.L434:
3359:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Dst,Type_Stat);
3360:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Src,RME_CAP_TYPE_PGT,
 6943              		.loc 1 3360 5 is_stmt 1
 6944 0198 04309BE5 		ldr	r3, [fp, #4]
 6945 019c 803003E2 		and	r3, r3, #128
 6946 01a0 000053E3 		cmp	r3, #0
 6947 01a4 1C00001A 		bne	.L440
 6948              		.loc 1 3360 5 is_stmt 0 discriminator 1
 6949 01a8 28301BE5 		ldr	r3, [fp, #-40]
 6950 01ac 142093E5 		ldr	r2, [r3, #20]
 6951 01b0 04309BE5 		ldr	r3, [fp, #4]
 6952 01b4 030052E1 		cmp	r2, r3
 6953 01b8 0100008A 		bhi	.L441
 6954              		.loc 1 3360 5 discriminator 3
 6955 01bc 0230E0E3 		mvn	r3, #2
 6956              		.loc 1 3360 5
 6957 01c0 C70000EA 		b	.L460
 6958              	.L441:
 6959              		.loc 1 3360 5 discriminator 4
 6960 01c4 04309BE5 		ldr	r3, [fp, #4]
 6961 01c8 8322A0E1 		lsl	r2, r3, #5
 6962 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6963 01d0 0C3093E5 		ldr	r3, [r3, #12]
 6964 01d4 033082E0 		add	r3, r2, r3
 6965 01d8 08300BE5 		str	r3, [fp, #-8]
 6966 01dc 08301BE5 		ldr	r3, [fp, #-8]
 6967 01e0 0300A0E1 		mov	r0, r3
 6968 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6969 01e8 14000BE5 		str	r0, [fp, #-20]
 6970              		.loc 1 3360 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 183


 6971 01ec 14301BE5 		ldr	r3, [fp, #-20]
 6972 01f0 FF3803E2 		and	r3, r3, #16711680
 6973 01f4 020853E3 		cmp	r3, #131072
 6974 01f8 0100001A 		bne	.L442
 6975              		.loc 1 3360 5 discriminator 5
 6976 01fc 0830E0E3 		mvn	r3, #8
 6977              		.loc 1 3360 5
 6978 0200 B70000EA 		b	.L460
 6979              	.L442:
 6980              		.loc 1 3360 5 discriminator 6
 6981 0204 14301BE5 		ldr	r3, [fp, #-20]
 6982 0208 233CA0E1 		lsr	r3, r3, #24
 6983 020c 040053E3 		cmp	r3, #4
 6984 0210 3F00000A 		beq	.L443
 6985              		.loc 1 3360 5 discriminator 7
 6986 0214 0130E0E3 		mvn	r3, #1
 6987              		.loc 1 3360 5
 6988 0218 B10000EA 		b	.L460
 6989              	.L440:
 6990              		.loc 1 3360 5 discriminator 2
 6991 021c 04309BE5 		ldr	r3, [fp, #4]
 6992 0220 2324A0E1 		lsr	r2, r3, #8
 6993 0224 28301BE5 		ldr	r3, [fp, #-40]
 6994 0228 143093E5 		ldr	r3, [r3, #20]
 6995 022c 030052E1 		cmp	r2, r3
 6996 0230 0100003A 		bcc	.L444
 6997              		.loc 1 3360 5 discriminator 8
 6998 0234 0230E0E3 		mvn	r3, #2
 6999              		.loc 1 3360 5
 7000 0238 A90000EA 		b	.L460
 7001              	.L444:
 7002              		.loc 1 3360 5 discriminator 9
 7003 023c 04309BE5 		ldr	r3, [fp, #4]
 7004 0240 2334A0E1 		lsr	r3, r3, #8
 7005 0244 8322A0E1 		lsl	r2, r3, #5
 7006 0248 28301BE5 		ldr	r3, [fp, #-40]
 7007 024c 0C3093E5 		ldr	r3, [r3, #12]
 7008 0250 033082E0 		add	r3, r2, r3
 7009 0254 08300BE5 		str	r3, [fp, #-8]
 7010 0258 08301BE5 		ldr	r3, [fp, #-8]
 7011 025c 0300A0E1 		mov	r0, r3
 7012 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7013 0264 14000BE5 		str	r0, [fp, #-20]
 7014              		.loc 1 3360 5 discriminator 1
 7015 0268 14301BE5 		ldr	r3, [fp, #-20]
 7016 026c FF3803E2 		and	r3, r3, #16711680
 7017 0270 020853E3 		cmp	r3, #131072
 7018 0274 0100001A 		bne	.L445
 7019              		.loc 1 3360 5 discriminator 10
 7020 0278 0830E0E3 		mvn	r3, #8
 7021              		.loc 1 3360 5
 7022 027c 980000EA 		b	.L460
 7023              	.L445:
 7024              		.loc 1 3360 5 discriminator 11
 7025 0280 14301BE5 		ldr	r3, [fp, #-20]
 7026 0284 233CA0E1 		lsr	r3, r3, #24
 7027 0288 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 184


 7028 028c 0100000A 		beq	.L446
 7029              		.loc 1 3360 5 discriminator 12
 7030 0290 0130E0E3 		mvn	r3, #1
 7031              		.loc 1 3360 5
 7032 0294 920000EA 		b	.L460
 7033              	.L446:
 7034              		.loc 1 3360 5 discriminator 13
 7035 0298 04309BE5 		ldr	r3, [fp, #4]
 7036 029c 7F2003E2 		and	r2, r3, #127
 7037 02a0 08301BE5 		ldr	r3, [fp, #-8]
 7038 02a4 143093E5 		ldr	r3, [r3, #20]
 7039 02a8 030052E1 		cmp	r2, r3
 7040 02ac 0100003A 		bcc	.L447
 7041              		.loc 1 3360 5 discriminator 14
 7042 02b0 0230E0E3 		mvn	r3, #2
 7043              		.loc 1 3360 5
 7044 02b4 8A0000EA 		b	.L460
 7045              	.L447:
 7046              		.loc 1 3360 5 discriminator 15
 7047 02b8 04309BE5 		ldr	r3, [fp, #4]
 7048 02bc 7F3003E2 		and	r3, r3, #127
 7049 02c0 8322A0E1 		lsl	r2, r3, #5
 7050 02c4 08301BE5 		ldr	r3, [fp, #-8]
 7051 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7052 02cc 033082E0 		add	r3, r2, r3
 7053 02d0 08300BE5 		str	r3, [fp, #-8]
 7054 02d4 08301BE5 		ldr	r3, [fp, #-8]
 7055 02d8 0300A0E1 		mov	r0, r3
 7056 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7057 02e0 14000BE5 		str	r0, [fp, #-20]
 7058              		.loc 1 3360 5 discriminator 1
 7059 02e4 14301BE5 		ldr	r3, [fp, #-20]
 7060 02e8 FF3803E2 		and	r3, r3, #16711680
 7061 02ec 020853E3 		cmp	r3, #131072
 7062 02f0 0100001A 		bne	.L448
 7063              		.loc 1 3360 5 discriminator 16
 7064 02f4 0830E0E3 		mvn	r3, #8
 7065              		.loc 1 3360 5
 7066 02f8 790000EA 		b	.L460
 7067              	.L448:
 7068              		.loc 1 3360 5 discriminator 17
 7069 02fc 14301BE5 		ldr	r3, [fp, #-20]
 7070 0300 233CA0E1 		lsr	r3, r3, #24
 7071 0304 040053E3 		cmp	r3, #4
 7072 0308 0100000A 		beq	.L443
 7073              		.loc 1 3360 5 discriminator 18
 7074 030c 0130E0E3 		mvn	r3, #1
 7075              		.loc 1 3360 5
 7076 0310 730000EA 		b	.L460
 7077              	.L443:
3361:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Src,Type_Stat);
3362:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3363:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Dst,RME_PGT_FLAG_ADD_DST);
 7078              		.loc 1 3363 5 is_stmt 1
 7079 0314 0C301BE5 		ldr	r3, [fp, #-12]
 7080 0318 083093E5 		ldr	r3, [r3, #8]
 7081 031c 023003E2 		and	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 185


 7082 0320 000053E3 		cmp	r3, #0
 7083 0324 0100001A 		bne	.L449
 7084              		.loc 1 3363 5 is_stmt 0 discriminator 1
 7085 0328 0630E0E3 		mvn	r3, #6
 7086              		.loc 1 3363 5
 7087 032c 6C0000EA 		b	.L460
 7088              	.L449:
3364:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Src,RME_PGT_FLAG_ADD_SRC);
 7089              		.loc 1 3364 5 is_stmt 1
 7090 0330 08301BE5 		ldr	r3, [fp, #-8]
 7091 0334 083093E5 		ldr	r3, [r3, #8]
 7092 0338 013003E2 		and	r3, r3, #1
 7093 033c 000053E3 		cmp	r3, #0
 7094 0340 0100001A 		bne	.L450
 7095              		.loc 1 3364 5 is_stmt 0 discriminator 1
 7096 0344 0630E0E3 		mvn	r3, #6
 7097              		.loc 1 3364 5
 7098 0348 650000EA 		b	.L460
 7099              	.L450:
3365:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3366:../../Source/Kernel/rme_kernel.c ****     if((Pos_Dst>RME_PGT_FLAG_HIGH(Pgt_Dst->Head.Flag))||
 7100              		.loc 1 3366 17 is_stmt 1
 7101 034c 0C301BE5 		ldr	r3, [fp, #-12]
 7102 0350 083093E5 		ldr	r3, [r3, #8]
 7103 0354 233AA0E1 		lsr	r3, r3, #20
 7104              		.loc 1 3366 7
 7105 0358 30201BE5 		ldr	r2, [fp, #-48]
 7106 035c 030052E1 		cmp	r2, r3
 7107 0360 1300008A 		bhi	.L451
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7108              		.loc 1 3367 17
 7109 0364 0C301BE5 		ldr	r3, [fp, #-12]
 7110 0368 083093E5 		ldr	r3, [r3, #8]
 7111 036c 2334A0E1 		lsr	r3, r3, #8
 7112 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3366:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7113              		.loc 1 3366 55 discriminator 1
 7114 0374 30201BE5 		ldr	r2, [fp, #-48]
 7115 0378 030052E1 		cmp	r2, r3
 7116 037c 0C00003A 		bcc	.L451
3368:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 7117              		.loc 1 3368 17
 7118 0380 08301BE5 		ldr	r3, [fp, #-8]
 7119 0384 083093E5 		ldr	r3, [r3, #8]
 7120 0388 233AA0E1 		lsr	r3, r3, #20
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7121              		.loc 1 3367 54
 7122 038c 08209BE5 		ldr	r2, [fp, #8]
 7123 0390 030052E1 		cmp	r2, r3
 7124 0394 0600008A 		bhi	.L451
3369:../../Source/Kernel/rme_kernel.c ****        (Pos_Src<RME_PGT_FLAG_LOW(Pgt_Src->Head.Flag)))
 7125              		.loc 1 3369 17
 7126 0398 08301BE5 		ldr	r3, [fp, #-8]
 7127 039c 083093E5 		ldr	r3, [r3, #8]
 7128 03a0 2334A0E1 		lsr	r3, r3, #8
 7129 03a4 5330EBE7 		ubfx	r3, r3, #0, #12
3368:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 186


 7130              		.loc 1 3368 55
 7131 03a8 08209BE5 		ldr	r2, [fp, #8]
 7132 03ac 030052E1 		cmp	r2, r3
 7133 03b0 0100002A 		bcs	.L452
 7134              	.L451:
3370:../../Source/Kernel/rme_kernel.c ****     {
3371:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3372:../../Source/Kernel/rme_kernel.c **** 
3373:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7135              		.loc 1 3373 16
 7136 03b4 0630E0E3 		mvn	r3, #6
 7137 03b8 490000EA 		b	.L460
 7138              	.L452:
3374:../../Source/Kernel/rme_kernel.c ****     }
3375:../../Source/Kernel/rme_kernel.c ****     else
3376:../../Source/Kernel/rme_kernel.c ****     {
3377:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3378:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3379:../../Source/Kernel/rme_kernel.c ****     }
3380:../../Source/Kernel/rme_kernel.c **** 
3381:../../Source/Kernel/rme_kernel.c ****     /* See if the size order relationship is correct */
3382:../../Source/Kernel/rme_kernel.c ****     Szord_Dst=RME_PGT_SZORD(Pgt_Dst->Order);
 7139              		.loc 1 3382 15
 7140 03bc 0C301BE5 		ldr	r3, [fp, #-12]
 7141 03c0 143093E5 		ldr	r3, [r3, #20]
 7142              		.loc 1 3382 14
 7143 03c4 2338A0E1 		lsr	r3, r3, #16
 7144 03c8 18300BE5 		str	r3, [fp, #-24]
3383:../../Source/Kernel/rme_kernel.c ****     Szord_Src=RME_PGT_SZORD(Pgt_Src->Order);
 7145              		.loc 1 3383 15
 7146 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7147 03d0 143093E5 		ldr	r3, [r3, #20]
 7148              		.loc 1 3383 14
 7149 03d4 2338A0E1 		lsr	r3, r3, #16
 7150 03d8 1C300BE5 		str	r3, [fp, #-28]
3384:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst>Szord_Src)
 7151              		.loc 1 3384 7
 7152 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7153 03e0 1C301BE5 		ldr	r3, [fp, #-28]
 7154 03e4 030052E1 		cmp	r2, r3
 7155 03e8 0100009A 		bls	.L453
3385:../../Source/Kernel/rme_kernel.c ****     {
3386:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3387:../../Source/Kernel/rme_kernel.c **** 
3388:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7156              		.loc 1 3388 16
 7157 03ec 6430E0E3 		mvn	r3, #100
 7158 03f0 3B0000EA 		b	.L460
 7159              	.L453:
3389:../../Source/Kernel/rme_kernel.c ****     }
3390:../../Source/Kernel/rme_kernel.c ****     else
3391:../../Source/Kernel/rme_kernel.c ****     {
3392:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3393:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3394:../../Source/Kernel/rme_kernel.c ****     }
3395:../../Source/Kernel/rme_kernel.c **** 
3396:../../Source/Kernel/rme_kernel.c ****     /* See if the positions are out of range - NMORD is restricted, no UB */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 187


3397:../../Source/Kernel/rme_kernel.c ****     if(((Pos_Dst>>RME_PGT_NMORD(Pgt_Dst->Order))!=0U)||
 7160              		.loc 1 3397 19
 7161 03f4 0C301BE5 		ldr	r3, [fp, #-12]
 7162 03f8 143093E5 		ldr	r3, [r3, #20]
 7163 03fc 7330FFE6 		uxth	r3, r3
 7164              		.loc 1 3397 17
 7165 0400 30201BE5 		ldr	r2, [fp, #-48]
 7166 0404 3233A0E1 		lsr	r3, r2, r3
 7167              		.loc 1 3397 7
 7168 0408 000053E3 		cmp	r3, #0
 7169 040c 0600001A 		bne	.L454
3398:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7170              		.loc 1 3398 19
 7171 0410 08301BE5 		ldr	r3, [fp, #-8]
 7172 0414 143093E5 		ldr	r3, [r3, #20]
 7173 0418 7330FFE6 		uxth	r3, r3
 7174              		.loc 1 3398 17
 7175 041c 08209BE5 		ldr	r2, [fp, #8]
 7176 0420 3233A0E1 		lsr	r3, r2, r3
3397:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7177              		.loc 1 3397 54 discriminator 1
 7178 0424 000053E3 		cmp	r3, #0
 7179 0428 0100000A 		beq	.L455
 7180              	.L454:
3399:../../Source/Kernel/rme_kernel.c ****     {
3400:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3401:../../Source/Kernel/rme_kernel.c **** 
3402:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7181              		.loc 1 3402 16
 7182 042c 6430E0E3 		mvn	r3, #100
 7183 0430 2B0000EA 		b	.L460
 7184              	.L455:
3403:../../Source/Kernel/rme_kernel.c ****     }
3404:../../Source/Kernel/rme_kernel.c ****     else
3405:../../Source/Kernel/rme_kernel.c ****     {
3406:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3407:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3408:../../Source/Kernel/rme_kernel.c ****     }
3409:../../Source/Kernel/rme_kernel.c **** 
3410:../../Source/Kernel/rme_kernel.c ****     /* See if the source subposition is out of range - avoid UB */
3411:../../Source/Kernel/rme_kernel.c ****     if(Szord_Src<RME_WORD_BIT)
 7185              		.loc 1 3411 7
 7186 0434 1C301BE5 		ldr	r3, [fp, #-28]
 7187 0438 1F0053E3 		cmp	r3, #31
 7188 043c 0900008A 		bhi	.L456
3412:../../Source/Kernel/rme_kernel.c ****     {
3413:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3414:../../Source/Kernel/rme_kernel.c ****         
3415:../../Source/Kernel/rme_kernel.c ****         /* No UB because Szord_Dst<=Szord_Src */
3416:../../Source/Kernel/rme_kernel.c ****         if(RME_POW2(Szord_Src)<=(Index<<Szord_Dst))
 7189              		.loc 1 3416 12
 7190 0440 0120A0E3 		mov	r2, #1
 7191 0444 1C301BE5 		ldr	r3, [fp, #-28]
 7192 0448 1223A0E1 		lsl	r2, r2, r3
 7193              		.loc 1 3416 39
 7194 044c 0C109BE5 		ldr	r1, [fp, #12]
 7195 0450 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 188


 7196 0454 1133A0E1 		lsl	r3, r1, r3
 7197              		.loc 1 3416 11
 7198 0458 030052E1 		cmp	r2, r3
 7199 045c 0100008A 		bhi	.L456
3417:../../Source/Kernel/rme_kernel.c ****         {
3418:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3419:../../Source/Kernel/rme_kernel.c **** 
3420:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
 7200              		.loc 1 3420 20
 7201 0460 6430E0E3 		mvn	r3, #100
 7202 0464 1E0000EA 		b	.L460
 7203              	.L456:
3421:../../Source/Kernel/rme_kernel.c ****         }
3422:../../Source/Kernel/rme_kernel.c ****         else
3423:../../Source/Kernel/rme_kernel.c ****         {
3424:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3425:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3426:../../Source/Kernel/rme_kernel.c ****         }
3427:../../Source/Kernel/rme_kernel.c ****     }
3428:../../Source/Kernel/rme_kernel.c ****     else
3429:../../Source/Kernel/rme_kernel.c ****     {
3430:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3431:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3432:../../Source/Kernel/rme_kernel.c ****     }
3433:../../Source/Kernel/rme_kernel.c **** 
3434:../../Source/Kernel/rme_kernel.c ****     /* Get the physical address and RME standard flags of that source page */
3435:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Lookup(Pgt_Src,Pos_Src,&Paddr_Src,&Flag_Src)<0)
 7204              		.loc 1 3435 8
 7205 0468 24304BE2 		sub	r3, fp, #36
 7206 046c 20204BE2 		sub	r2, fp, #32
 7207 0470 08109BE5 		ldr	r1, [fp, #8]
 7208 0474 08001BE5 		ldr	r0, [fp, #-8]
 7209 0478 FEFFFFEB 		bl	__RME_Pgt_Lookup
3436:../../Source/Kernel/rme_kernel.c ****     {
3437:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3438:../../Source/Kernel/rme_kernel.c **** 
3439:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3440:../../Source/Kernel/rme_kernel.c ****     }
3441:../../Source/Kernel/rme_kernel.c ****     else
3442:../../Source/Kernel/rme_kernel.c ****     {
3443:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3444:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3445:../../Source/Kernel/rme_kernel.c ****     }
3446:../../Source/Kernel/rme_kernel.c **** 
3447:../../Source/Kernel/rme_kernel.c ****     /* Calculate the destination physical address - avoid UB */
3448:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst<RME_WORD_BIT)
 7210              		.loc 1 3448 7
 7211 047c 18301BE5 		ldr	r3, [fp, #-24]
 7212 0480 1F0053E3 		cmp	r3, #31
 7213 0484 0600008A 		bhi	.L457
3449:../../Source/Kernel/rme_kernel.c ****     {
3450:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3451:../../Source/Kernel/rme_kernel.c ****         
3452:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src+(Index<<Szord_Dst);
 7214              		.loc 1 3452 35
 7215 0488 0C209BE5 		ldr	r2, [fp, #12]
 7216 048c 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 189


 7217 0490 1223A0E1 		lsl	r2, r2, r3
 7218              		.loc 1 3452 28
 7219 0494 20301BE5 		ldr	r3, [fp, #-32]
 7220              		.loc 1 3452 18
 7221 0498 033082E0 		add	r3, r2, r3
 7222 049c 10300BE5 		str	r3, [fp, #-16]
 7223 04a0 010000EA 		b	.L458
 7224              	.L457:
3453:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3454:../../Source/Kernel/rme_kernel.c ****         /* Check if we force identical mapping */
3455:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=(RME_PGT_BASE(Pgt_Dst->Base)+(Pos_Dst<<Szord_Dst)))
3456:../../Source/Kernel/rme_kernel.c ****         {
3457:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3458:../../Source/Kernel/rme_kernel.c **** 
3459:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3460:../../Source/Kernel/rme_kernel.c ****         }
3461:../../Source/Kernel/rme_kernel.c ****         else
3462:../../Source/Kernel/rme_kernel.c ****         {
3463:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3464:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3465:../../Source/Kernel/rme_kernel.c ****         }
3466:../../Source/Kernel/rme_kernel.c **** #endif
3467:../../Source/Kernel/rme_kernel.c ****     }
3468:../../Source/Kernel/rme_kernel.c ****     /* The destination is also full range */
3469:../../Source/Kernel/rme_kernel.c ****     else
3470:../../Source/Kernel/rme_kernel.c ****     {
3471:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3472:../../Source/Kernel/rme_kernel.c ****         
3473:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src;
 7225              		.loc 1 3473 18
 7226 04a4 20301BE5 		ldr	r3, [fp, #-32]
 7227 04a8 10300BE5 		str	r3, [fp, #-16]
 7228              	.L458:
3474:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3475:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=RME_PGT_BASE(Pgt_Dst->Base))
3476:../../Source/Kernel/rme_kernel.c ****         {
3477:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3478:../../Source/Kernel/rme_kernel.c **** 
3479:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3480:../../Source/Kernel/rme_kernel.c ****         }
3481:../../Source/Kernel/rme_kernel.c ****         else
3482:../../Source/Kernel/rme_kernel.c ****         {
3483:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3484:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3485:../../Source/Kernel/rme_kernel.c ****         }
3486:../../Source/Kernel/rme_kernel.c **** #endif
3487:../../Source/Kernel/rme_kernel.c ****     }
3488:../../Source/Kernel/rme_kernel.c ****     
3489:../../Source/Kernel/rme_kernel.c ****     /* Analyze the flags - we do not allow expansion of access permissions */
3490:../../Source/Kernel/rme_kernel.c ****     if(((Flag_Dst)&(~Flag_Src))!=0U)
 7229              		.loc 1 3490 21
 7230 04ac 24301BE5 		ldr	r3, [fp, #-36]
 7231 04b0 0320E0E1 		mvn	r2, r3
 7232              		.loc 1 3490 19
 7233 04b4 34301BE5 		ldr	r3, [fp, #-52]
 7234 04b8 023003E0 		and	r3, r3, r2
 7235              		.loc 1 3490 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 190


 7236 04bc 000053E3 		cmp	r3, #0
 7237 04c0 0100000A 		beq	.L459
3491:../../Source/Kernel/rme_kernel.c ****     {
3492:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3493:../../Source/Kernel/rme_kernel.c **** 
3494:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_PERM;
 7238              		.loc 1 3494 16
 7239 04c4 6730E0E3 		mvn	r3, #103
 7240 04c8 050000EA 		b	.L460
 7241              	.L459:
3495:../../Source/Kernel/rme_kernel.c ****     }
3496:../../Source/Kernel/rme_kernel.c ****     else
3497:../../Source/Kernel/rme_kernel.c ****     {
3498:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3499:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3500:../../Source/Kernel/rme_kernel.c ****     }
3501:../../Source/Kernel/rme_kernel.c **** 
3502:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3503:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3504:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Dst,Paddr_Dst,Pos_Dst,Flag_Dst)<0)
 7242              		.loc 1 3504 8
 7243 04cc 34301BE5 		ldr	r3, [fp, #-52]
 7244 04d0 30201BE5 		ldr	r2, [fp, #-48]
 7245 04d4 10101BE5 		ldr	r1, [fp, #-16]
 7246 04d8 0C001BE5 		ldr	r0, [fp, #-12]
 7247 04dc FEFFFFEB 		bl	__RME_Pgt_Page_Map
3505:../../Source/Kernel/rme_kernel.c ****     {
3506:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3507:../../Source/Kernel/rme_kernel.c **** 
3508:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3509:../../Source/Kernel/rme_kernel.c ****     }
3510:../../Source/Kernel/rme_kernel.c ****     else
3511:../../Source/Kernel/rme_kernel.c ****     {
3512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3513:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3514:../../Source/Kernel/rme_kernel.c ****     }
3515:../../Source/Kernel/rme_kernel.c **** 
3516:../../Source/Kernel/rme_kernel.c ****     return 0;
 7248              		.loc 1 3516 12
 7249 04e0 0030A0E3 		mov	r3, #0
 7250              	.L460:
3517:../../Source/Kernel/rme_kernel.c **** }
 7251              		.loc 1 3517 1
 7252 04e4 0300A0E1 		mov	r0, r3
 7253 04e8 04D04BE2 		sub	sp, fp, #4
 7254              		.cfi_def_cfa 13, 8
 7255              		@ sp needed
 7256 04ec 0088BDE8 		pop	{fp, pc}
 7257              		.cfi_endproc
 7258              	.LFE34:
 7260              		.section	.text._RME_Pgt_Rem,"ax",%progbits
 7261              		.align	2
 7262              		.syntax unified
 7263              		.arm
 7265              	_RME_Pgt_Rem:
 7266              	.LFB35:
3518:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 191


3519:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Add *************************************************/
3520:../../Source/Kernel/rme_kernel.c **** 
3521:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Rem ******************************************************
3522:../../Source/Kernel/rme_kernel.c **** Description : Remove a page from the page table. We are doing unmapping of a
3523:../../Source/Kernel/rme_kernel.c ****               page.
3524:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3525:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
3526:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3527:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to unmap from.
3528:../../Source/Kernel/rme_kernel.c **** Output      : None.
3529:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3530:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3531:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3532:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Rem(struct RME_Cap_Cpt* Cpt,
3533:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3534:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos)
3535:../../Source/Kernel/rme_kernel.c **** {
 7267              		.loc 1 3535 1
 7268              		.cfi_startproc
 7269              		@ args = 0, pretend = 0, frame = 24
 7270              		@ frame_needed = 1, uses_anonymous_args = 0
 7271 0000 00482DE9 		push	{fp, lr}
 7272              		.cfi_def_cfa_offset 8
 7273              		.cfi_offset 11, -8
 7274              		.cfi_offset 14, -4
 7275 0004 04B08DE2 		add	fp, sp, #4
 7276              		.cfi_def_cfa 11, 4
 7277 0008 18D04DE2 		sub	sp, sp, #24
 7278 000c 10000BE5 		str	r0, [fp, #-16]
 7279 0010 14100BE5 		str	r1, [fp, #-20]
 7280 0014 18200BE5 		str	r2, [fp, #-24]
3536:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Rem;
3537:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3538:../../Source/Kernel/rme_kernel.c ****     
3539:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3540:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_CPT,
 7281              		.loc 1 3540 5
 7282 0018 14301BE5 		ldr	r3, [fp, #-20]
 7283 001c 803003E2 		and	r3, r3, #128
 7284 0020 000053E3 		cmp	r3, #0
 7285 0024 1C00001A 		bne	.L462
 7286              		.loc 1 3540 5 is_stmt 0 discriminator 1
 7287 0028 10301BE5 		ldr	r3, [fp, #-16]
 7288 002c 142093E5 		ldr	r2, [r3, #20]
 7289 0030 14301BE5 		ldr	r3, [fp, #-20]
 7290 0034 030052E1 		cmp	r2, r3
 7291 0038 0100008A 		bhi	.L463
 7292              		.loc 1 3540 5 discriminator 3
 7293 003c 0230E0E3 		mvn	r3, #2
 7294              		.loc 1 3540 5
 7295 0040 760000EA 		b	.L464
 7296              	.L463:
 7297              		.loc 1 3540 5 discriminator 4
 7298 0044 14301BE5 		ldr	r3, [fp, #-20]
 7299 0048 8322A0E1 		lsl	r2, r3, #5
 7300 004c 10301BE5 		ldr	r3, [fp, #-16]
 7301 0050 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 192


 7302 0054 033082E0 		add	r3, r2, r3
 7303 0058 08300BE5 		str	r3, [fp, #-8]
 7304 005c 08301BE5 		ldr	r3, [fp, #-8]
 7305 0060 0300A0E1 		mov	r0, r3
 7306 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7307 0068 0C000BE5 		str	r0, [fp, #-12]
 7308              		.loc 1 3540 5 discriminator 1
 7309 006c 0C301BE5 		ldr	r3, [fp, #-12]
 7310 0070 FF3803E2 		and	r3, r3, #16711680
 7311 0074 020853E3 		cmp	r3, #131072
 7312 0078 0100001A 		bne	.L465
 7313              		.loc 1 3540 5 discriminator 5
 7314 007c 0830E0E3 		mvn	r3, #8
 7315              		.loc 1 3540 5
 7316 0080 660000EA 		b	.L464
 7317              	.L465:
 7318              		.loc 1 3540 5 discriminator 6
 7319 0084 0C301BE5 		ldr	r3, [fp, #-12]
 7320 0088 233CA0E1 		lsr	r3, r3, #24
 7321 008c 030053E3 		cmp	r3, #3
 7322 0090 3F00000A 		beq	.L466
 7323              		.loc 1 3540 5 discriminator 7
 7324 0094 0130E0E3 		mvn	r3, #1
 7325              		.loc 1 3540 5
 7326 0098 600000EA 		b	.L464
 7327              	.L462:
 7328              		.loc 1 3540 5 discriminator 2
 7329 009c 14301BE5 		ldr	r3, [fp, #-20]
 7330 00a0 2324A0E1 		lsr	r2, r3, #8
 7331 00a4 10301BE5 		ldr	r3, [fp, #-16]
 7332 00a8 143093E5 		ldr	r3, [r3, #20]
 7333 00ac 030052E1 		cmp	r2, r3
 7334 00b0 0100003A 		bcc	.L467
 7335              		.loc 1 3540 5 discriminator 8
 7336 00b4 0230E0E3 		mvn	r3, #2
 7337              		.loc 1 3540 5
 7338 00b8 580000EA 		b	.L464
 7339              	.L467:
 7340              		.loc 1 3540 5 discriminator 9
 7341 00bc 14301BE5 		ldr	r3, [fp, #-20]
 7342 00c0 2334A0E1 		lsr	r3, r3, #8
 7343 00c4 8322A0E1 		lsl	r2, r3, #5
 7344 00c8 10301BE5 		ldr	r3, [fp, #-16]
 7345 00cc 0C3093E5 		ldr	r3, [r3, #12]
 7346 00d0 033082E0 		add	r3, r2, r3
 7347 00d4 08300BE5 		str	r3, [fp, #-8]
 7348 00d8 08301BE5 		ldr	r3, [fp, #-8]
 7349 00dc 0300A0E1 		mov	r0, r3
 7350 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7351 00e4 0C000BE5 		str	r0, [fp, #-12]
 7352              		.loc 1 3540 5 discriminator 1
 7353 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 7354 00ec FF3803E2 		and	r3, r3, #16711680
 7355 00f0 020853E3 		cmp	r3, #131072
 7356 00f4 0100001A 		bne	.L468
 7357              		.loc 1 3540 5 discriminator 10
 7358 00f8 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 193


 7359              		.loc 1 3540 5
 7360 00fc 470000EA 		b	.L464
 7361              	.L468:
 7362              		.loc 1 3540 5 discriminator 11
 7363 0100 0C301BE5 		ldr	r3, [fp, #-12]
 7364 0104 233CA0E1 		lsr	r3, r3, #24
 7365 0108 030053E3 		cmp	r3, #3
 7366 010c 0100000A 		beq	.L469
 7367              		.loc 1 3540 5 discriminator 12
 7368 0110 0130E0E3 		mvn	r3, #1
 7369              		.loc 1 3540 5
 7370 0114 410000EA 		b	.L464
 7371              	.L469:
 7372              		.loc 1 3540 5 discriminator 13
 7373 0118 14301BE5 		ldr	r3, [fp, #-20]
 7374 011c 7F2003E2 		and	r2, r3, #127
 7375 0120 08301BE5 		ldr	r3, [fp, #-8]
 7376 0124 143093E5 		ldr	r3, [r3, #20]
 7377 0128 030052E1 		cmp	r2, r3
 7378 012c 0100003A 		bcc	.L470
 7379              		.loc 1 3540 5 discriminator 14
 7380 0130 0230E0E3 		mvn	r3, #2
 7381              		.loc 1 3540 5
 7382 0134 390000EA 		b	.L464
 7383              	.L470:
 7384              		.loc 1 3540 5 discriminator 15
 7385 0138 14301BE5 		ldr	r3, [fp, #-20]
 7386 013c 7F3003E2 		and	r3, r3, #127
 7387 0140 8322A0E1 		lsl	r2, r3, #5
 7388 0144 08301BE5 		ldr	r3, [fp, #-8]
 7389 0148 0C3093E5 		ldr	r3, [r3, #12]
 7390 014c 033082E0 		add	r3, r2, r3
 7391 0150 08300BE5 		str	r3, [fp, #-8]
 7392 0154 08301BE5 		ldr	r3, [fp, #-8]
 7393 0158 0300A0E1 		mov	r0, r3
 7394 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7395 0160 0C000BE5 		str	r0, [fp, #-12]
 7396              		.loc 1 3540 5 discriminator 1
 7397 0164 0C301BE5 		ldr	r3, [fp, #-12]
 7398 0168 FF3803E2 		and	r3, r3, #16711680
 7399 016c 020853E3 		cmp	r3, #131072
 7400 0170 0100001A 		bne	.L471
 7401              		.loc 1 3540 5 discriminator 16
 7402 0174 0830E0E3 		mvn	r3, #8
 7403              		.loc 1 3540 5
 7404 0178 280000EA 		b	.L464
 7405              	.L471:
 7406              		.loc 1 3540 5 discriminator 17
 7407 017c 0C301BE5 		ldr	r3, [fp, #-12]
 7408 0180 233CA0E1 		lsr	r3, r3, #24
 7409 0184 030053E3 		cmp	r3, #3
 7410 0188 0100000A 		beq	.L466
 7411              		.loc 1 3540 5 discriminator 18
 7412 018c 0130E0E3 		mvn	r3, #1
 7413              		.loc 1 3540 5
 7414 0190 220000EA 		b	.L464
 7415              	.L466:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 194


3541:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Rem,Type_Stat);
3542:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3543:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Rem,RME_PGT_FLAG_REM);
 7416              		.loc 1 3543 5 is_stmt 1
 7417 0194 08301BE5 		ldr	r3, [fp, #-8]
 7418 0198 083093E5 		ldr	r3, [r3, #8]
 7419 019c 043003E2 		and	r3, r3, #4
 7420 01a0 000053E3 		cmp	r3, #0
 7421 01a4 0100001A 		bne	.L472
 7422              		.loc 1 3543 5 is_stmt 0 discriminator 1
 7423 01a8 0630E0E3 		mvn	r3, #6
 7424              		.loc 1 3543 5
 7425 01ac 1B0000EA 		b	.L464
 7426              	.L472:
3544:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3545:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Rem->Head.Flag))||
 7427              		.loc 1 3545 13 is_stmt 1
 7428 01b0 08301BE5 		ldr	r3, [fp, #-8]
 7429 01b4 083093E5 		ldr	r3, [r3, #8]
 7430 01b8 233AA0E1 		lsr	r3, r3, #20
 7431              		.loc 1 3545 7
 7432 01bc 18201BE5 		ldr	r2, [fp, #-24]
 7433 01c0 030052E1 		cmp	r2, r3
 7434 01c4 0600008A 		bhi	.L473
3546:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7435              		.loc 1 3546 13
 7436 01c8 08301BE5 		ldr	r3, [fp, #-8]
 7437 01cc 083093E5 		ldr	r3, [r3, #8]
 7438 01d0 2334A0E1 		lsr	r3, r3, #8
 7439 01d4 5330EBE7 		ubfx	r3, r3, #0, #12
3545:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7440              		.loc 1 3545 51 discriminator 1
 7441 01d8 18201BE5 		ldr	r2, [fp, #-24]
 7442 01dc 030052E1 		cmp	r2, r3
 7443 01e0 0100002A 		bcs	.L474
 7444              	.L473:
3547:../../Source/Kernel/rme_kernel.c ****     {
3548:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3549:../../Source/Kernel/rme_kernel.c **** 
3550:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7445              		.loc 1 3550 16
 7446 01e4 0630E0E3 		mvn	r3, #6
 7447 01e8 0C0000EA 		b	.L464
 7448              	.L474:
3551:../../Source/Kernel/rme_kernel.c ****     }
3552:../../Source/Kernel/rme_kernel.c ****     else
3553:../../Source/Kernel/rme_kernel.c ****     {
3554:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3555:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3556:../../Source/Kernel/rme_kernel.c ****     }
3557:../../Source/Kernel/rme_kernel.c **** 
3558:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3559:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Rem->Order))!=0U)
 7449              		.loc 1 3559 14
 7450 01ec 08301BE5 		ldr	r3, [fp, #-8]
 7451 01f0 143093E5 		ldr	r3, [r3, #20]
 7452 01f4 7330FFE6 		uxth	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 195


 7453              		.loc 1 3559 12
 7454 01f8 18201BE5 		ldr	r2, [fp, #-24]
 7455 01fc 3233A0E1 		lsr	r3, r2, r3
 7456              		.loc 1 3559 7
 7457 0200 000053E3 		cmp	r3, #0
 7458 0204 0100000A 		beq	.L475
3560:../../Source/Kernel/rme_kernel.c ****     {
3561:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3562:../../Source/Kernel/rme_kernel.c **** 
3563:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7459              		.loc 1 3563 16
 7460 0208 6430E0E3 		mvn	r3, #100
 7461 020c 030000EA 		b	.L464
 7462              	.L475:
3564:../../Source/Kernel/rme_kernel.c ****     }
3565:../../Source/Kernel/rme_kernel.c ****     else
3566:../../Source/Kernel/rme_kernel.c ****     {
3567:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3568:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3569:../../Source/Kernel/rme_kernel.c ****     }
3570:../../Source/Kernel/rme_kernel.c **** 
3571:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3572:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3573:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Unmap(Pgt_Rem,Pos)<0)
 7463              		.loc 1 3573 8
 7464 0210 18101BE5 		ldr	r1, [fp, #-24]
 7465 0214 08001BE5 		ldr	r0, [fp, #-8]
 7466 0218 FEFFFFEB 		bl	__RME_Pgt_Page_Unmap
3574:../../Source/Kernel/rme_kernel.c ****     {
3575:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3576:../../Source/Kernel/rme_kernel.c **** 
3577:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3578:../../Source/Kernel/rme_kernel.c ****     }
3579:../../Source/Kernel/rme_kernel.c ****     else
3580:../../Source/Kernel/rme_kernel.c ****     {
3581:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3582:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3583:../../Source/Kernel/rme_kernel.c ****     }
3584:../../Source/Kernel/rme_kernel.c **** 
3585:../../Source/Kernel/rme_kernel.c ****     return 0;
 7467              		.loc 1 3585 12
 7468 021c 0030A0E3 		mov	r3, #0
 7469              	.L464:
3586:../../Source/Kernel/rme_kernel.c **** }
 7470              		.loc 1 3586 1
 7471 0220 0300A0E1 		mov	r0, r3
 7472 0224 04D04BE2 		sub	sp, fp, #4
 7473              		.cfi_def_cfa 13, 8
 7474              		@ sp needed
 7475 0228 0088BDE8 		pop	{fp, pc}
 7476              		.cfi_endproc
 7477              	.LFE35:
 7479              		.section	.text._RME_Pgt_Con,"ax",%progbits
 7480              		.align	2
 7481              		.syntax unified
 7482              		.arm
 7484              	_RME_Pgt_Con:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 196


 7485              	.LFB36:
3587:../../Source/Kernel/rme_kernel.c **** #endif
3588:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Rem *************************************************/
3589:../../Source/Kernel/rme_kernel.c **** 
3590:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Con ******************************************************
3591:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table into the parent page table, to construct
3592:../../Source/Kernel/rme_kernel.c ****               an address space tree.
3593:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3594:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
3595:../../Source/Kernel/rme_kernel.c ****                                          table.
3596:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3597:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
3598:../../Source/Kernel/rme_kernel.c ****                               page table to.
3599:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3600:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3601:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
3602:../../Source/Kernel/rme_kernel.c **** Output      : None.
3603:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3604:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3605:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3606:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Con(struct RME_Cap_Cpt* Cpt,
3607:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3608:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3609:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child,
3610:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Child)
3611:../../Source/Kernel/rme_kernel.c **** {
 7486              		.loc 1 3611 1
 7487              		.cfi_startproc
 7488              		@ args = 4, pretend = 0, frame = 40
 7489              		@ frame_needed = 1, uses_anonymous_args = 0
 7490 0000 00482DE9 		push	{fp, lr}
 7491              		.cfi_def_cfa_offset 8
 7492              		.cfi_offset 11, -8
 7493              		.cfi_offset 14, -4
 7494 0004 04B08DE2 		add	fp, sp, #4
 7495              		.cfi_def_cfa 11, 4
 7496 0008 28D04DE2 		sub	sp, sp, #40
 7497 000c 20000BE5 		str	r0, [fp, #-32]
 7498 0010 24100BE5 		str	r1, [fp, #-36]
 7499 0014 28200BE5 		str	r2, [fp, #-40]
 7500 0018 2C300BE5 		str	r3, [fp, #-44]
3612:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3613:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3614:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
3615:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
3616:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
3617:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3618:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
3619:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
3620:../../Source/Kernel/rme_kernel.c **** #endif
3621:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3622:../../Source/Kernel/rme_kernel.c ****     
3623:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3624:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 7501              		.loc 1 3624 5
 7502 001c 24301BE5 		ldr	r3, [fp, #-36]
 7503 0020 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 197


 7504 0024 000053E3 		cmp	r3, #0
 7505 0028 1C00001A 		bne	.L477
 7506              		.loc 1 3624 5 is_stmt 0 discriminator 1
 7507 002c 20301BE5 		ldr	r3, [fp, #-32]
 7508 0030 142093E5 		ldr	r2, [r3, #20]
 7509 0034 24301BE5 		ldr	r3, [fp, #-36]
 7510 0038 030052E1 		cmp	r2, r3
 7511 003c 0100008A 		bhi	.L478
 7512              		.loc 1 3624 5 discriminator 3
 7513 0040 0230E0E3 		mvn	r3, #2
 7514              		.loc 1 3624 5
 7515 0044 140100EA 		b	.L479
 7516              	.L478:
 7517              		.loc 1 3624 5 discriminator 4
 7518 0048 24301BE5 		ldr	r3, [fp, #-36]
 7519 004c 8322A0E1 		lsl	r2, r3, #5
 7520 0050 20301BE5 		ldr	r3, [fp, #-32]
 7521 0054 0C3093E5 		ldr	r3, [r3, #12]
 7522 0058 033082E0 		add	r3, r2, r3
 7523 005c 08300BE5 		str	r3, [fp, #-8]
 7524 0060 08301BE5 		ldr	r3, [fp, #-8]
 7525 0064 0300A0E1 		mov	r0, r3
 7526 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7527 006c 10000BE5 		str	r0, [fp, #-16]
 7528              		.loc 1 3624 5 discriminator 1
 7529 0070 10301BE5 		ldr	r3, [fp, #-16]
 7530 0074 FF3803E2 		and	r3, r3, #16711680
 7531 0078 020853E3 		cmp	r3, #131072
 7532 007c 0100001A 		bne	.L480
 7533              		.loc 1 3624 5 discriminator 5
 7534 0080 0830E0E3 		mvn	r3, #8
 7535              		.loc 1 3624 5
 7536 0084 040100EA 		b	.L479
 7537              	.L480:
 7538              		.loc 1 3624 5 discriminator 6
 7539 0088 10301BE5 		ldr	r3, [fp, #-16]
 7540 008c 233CA0E1 		lsr	r3, r3, #24
 7541 0090 040053E3 		cmp	r3, #4
 7542 0094 3F00000A 		beq	.L481
 7543              		.loc 1 3624 5 discriminator 7
 7544 0098 0130E0E3 		mvn	r3, #1
 7545              		.loc 1 3624 5
 7546 009c FE0000EA 		b	.L479
 7547              	.L477:
 7548              		.loc 1 3624 5 discriminator 2
 7549 00a0 24301BE5 		ldr	r3, [fp, #-36]
 7550 00a4 2324A0E1 		lsr	r2, r3, #8
 7551 00a8 20301BE5 		ldr	r3, [fp, #-32]
 7552 00ac 143093E5 		ldr	r3, [r3, #20]
 7553 00b0 030052E1 		cmp	r2, r3
 7554 00b4 0100003A 		bcc	.L482
 7555              		.loc 1 3624 5 discriminator 8
 7556 00b8 0230E0E3 		mvn	r3, #2
 7557              		.loc 1 3624 5
 7558 00bc F60000EA 		b	.L479
 7559              	.L482:
 7560              		.loc 1 3624 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 198


 7561 00c0 24301BE5 		ldr	r3, [fp, #-36]
 7562 00c4 2334A0E1 		lsr	r3, r3, #8
 7563 00c8 8322A0E1 		lsl	r2, r3, #5
 7564 00cc 20301BE5 		ldr	r3, [fp, #-32]
 7565 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7566 00d4 033082E0 		add	r3, r2, r3
 7567 00d8 08300BE5 		str	r3, [fp, #-8]
 7568 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7569 00e0 0300A0E1 		mov	r0, r3
 7570 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7571 00e8 10000BE5 		str	r0, [fp, #-16]
 7572              		.loc 1 3624 5 discriminator 1
 7573 00ec 10301BE5 		ldr	r3, [fp, #-16]
 7574 00f0 FF3803E2 		and	r3, r3, #16711680
 7575 00f4 020853E3 		cmp	r3, #131072
 7576 00f8 0100001A 		bne	.L483
 7577              		.loc 1 3624 5 discriminator 10
 7578 00fc 0830E0E3 		mvn	r3, #8
 7579              		.loc 1 3624 5
 7580 0100 E50000EA 		b	.L479
 7581              	.L483:
 7582              		.loc 1 3624 5 discriminator 11
 7583 0104 10301BE5 		ldr	r3, [fp, #-16]
 7584 0108 233CA0E1 		lsr	r3, r3, #24
 7585 010c 030053E3 		cmp	r3, #3
 7586 0110 0100000A 		beq	.L484
 7587              		.loc 1 3624 5 discriminator 12
 7588 0114 0130E0E3 		mvn	r3, #1
 7589              		.loc 1 3624 5
 7590 0118 DF0000EA 		b	.L479
 7591              	.L484:
 7592              		.loc 1 3624 5 discriminator 13
 7593 011c 24301BE5 		ldr	r3, [fp, #-36]
 7594 0120 7F2003E2 		and	r2, r3, #127
 7595 0124 08301BE5 		ldr	r3, [fp, #-8]
 7596 0128 143093E5 		ldr	r3, [r3, #20]
 7597 012c 030052E1 		cmp	r2, r3
 7598 0130 0100003A 		bcc	.L485
 7599              		.loc 1 3624 5 discriminator 14
 7600 0134 0230E0E3 		mvn	r3, #2
 7601              		.loc 1 3624 5
 7602 0138 D70000EA 		b	.L479
 7603              	.L485:
 7604              		.loc 1 3624 5 discriminator 15
 7605 013c 24301BE5 		ldr	r3, [fp, #-36]
 7606 0140 7F3003E2 		and	r3, r3, #127
 7607 0144 8322A0E1 		lsl	r2, r3, #5
 7608 0148 08301BE5 		ldr	r3, [fp, #-8]
 7609 014c 0C3093E5 		ldr	r3, [r3, #12]
 7610 0150 033082E0 		add	r3, r2, r3
 7611 0154 08300BE5 		str	r3, [fp, #-8]
 7612 0158 08301BE5 		ldr	r3, [fp, #-8]
 7613 015c 0300A0E1 		mov	r0, r3
 7614 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7615 0164 10000BE5 		str	r0, [fp, #-16]
 7616              		.loc 1 3624 5 discriminator 1
 7617 0168 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 199


 7618 016c FF3803E2 		and	r3, r3, #16711680
 7619 0170 020853E3 		cmp	r3, #131072
 7620 0174 0100001A 		bne	.L486
 7621              		.loc 1 3624 5 discriminator 16
 7622 0178 0830E0E3 		mvn	r3, #8
 7623              		.loc 1 3624 5
 7624 017c C60000EA 		b	.L479
 7625              	.L486:
 7626              		.loc 1 3624 5 discriminator 17
 7627 0180 10301BE5 		ldr	r3, [fp, #-16]
 7628 0184 233CA0E1 		lsr	r3, r3, #24
 7629 0188 040053E3 		cmp	r3, #4
 7630 018c 0100000A 		beq	.L481
 7631              		.loc 1 3624 5 discriminator 18
 7632 0190 0130E0E3 		mvn	r3, #1
 7633              		.loc 1 3624 5
 7634 0194 C00000EA 		b	.L479
 7635              	.L481:
3625:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3626:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 7636              		.loc 1 3626 5 is_stmt 1
 7637 0198 2C301BE5 		ldr	r3, [fp, #-44]
 7638 019c 803003E2 		and	r3, r3, #128
 7639 01a0 000053E3 		cmp	r3, #0
 7640 01a4 1C00001A 		bne	.L487
 7641              		.loc 1 3626 5 is_stmt 0 discriminator 1
 7642 01a8 20301BE5 		ldr	r3, [fp, #-32]
 7643 01ac 142093E5 		ldr	r2, [r3, #20]
 7644 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 7645 01b4 030052E1 		cmp	r2, r3
 7646 01b8 0100008A 		bhi	.L488
 7647              		.loc 1 3626 5 discriminator 3
 7648 01bc 0230E0E3 		mvn	r3, #2
 7649              		.loc 1 3626 5
 7650 01c0 B50000EA 		b	.L479
 7651              	.L488:
 7652              		.loc 1 3626 5 discriminator 4
 7653 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 7654 01c8 8322A0E1 		lsl	r2, r3, #5
 7655 01cc 20301BE5 		ldr	r3, [fp, #-32]
 7656 01d0 0C3093E5 		ldr	r3, [r3, #12]
 7657 01d4 033082E0 		add	r3, r2, r3
 7658 01d8 0C300BE5 		str	r3, [fp, #-12]
 7659 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 7660 01e0 0300A0E1 		mov	r0, r3
 7661 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7662 01e8 10000BE5 		str	r0, [fp, #-16]
 7663              		.loc 1 3626 5 discriminator 1
 7664 01ec 10301BE5 		ldr	r3, [fp, #-16]
 7665 01f0 FF3803E2 		and	r3, r3, #16711680
 7666 01f4 020853E3 		cmp	r3, #131072
 7667 01f8 0100001A 		bne	.L489
 7668              		.loc 1 3626 5 discriminator 5
 7669 01fc 0830E0E3 		mvn	r3, #8
 7670              		.loc 1 3626 5
 7671 0200 A50000EA 		b	.L479
 7672              	.L489:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 200


 7673              		.loc 1 3626 5 discriminator 6
 7674 0204 10301BE5 		ldr	r3, [fp, #-16]
 7675 0208 233CA0E1 		lsr	r3, r3, #24
 7676 020c 040053E3 		cmp	r3, #4
 7677 0210 3F00000A 		beq	.L490
 7678              		.loc 1 3626 5 discriminator 7
 7679 0214 0130E0E3 		mvn	r3, #1
 7680              		.loc 1 3626 5
 7681 0218 9F0000EA 		b	.L479
 7682              	.L487:
 7683              		.loc 1 3626 5 discriminator 2
 7684 021c 2C301BE5 		ldr	r3, [fp, #-44]
 7685 0220 2324A0E1 		lsr	r2, r3, #8
 7686 0224 20301BE5 		ldr	r3, [fp, #-32]
 7687 0228 143093E5 		ldr	r3, [r3, #20]
 7688 022c 030052E1 		cmp	r2, r3
 7689 0230 0100003A 		bcc	.L491
 7690              		.loc 1 3626 5 discriminator 8
 7691 0234 0230E0E3 		mvn	r3, #2
 7692              		.loc 1 3626 5
 7693 0238 970000EA 		b	.L479
 7694              	.L491:
 7695              		.loc 1 3626 5 discriminator 9
 7696 023c 2C301BE5 		ldr	r3, [fp, #-44]
 7697 0240 2334A0E1 		lsr	r3, r3, #8
 7698 0244 8322A0E1 		lsl	r2, r3, #5
 7699 0248 20301BE5 		ldr	r3, [fp, #-32]
 7700 024c 0C3093E5 		ldr	r3, [r3, #12]
 7701 0250 033082E0 		add	r3, r2, r3
 7702 0254 0C300BE5 		str	r3, [fp, #-12]
 7703 0258 0C301BE5 		ldr	r3, [fp, #-12]
 7704 025c 0300A0E1 		mov	r0, r3
 7705 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7706 0264 10000BE5 		str	r0, [fp, #-16]
 7707              		.loc 1 3626 5 discriminator 1
 7708 0268 10301BE5 		ldr	r3, [fp, #-16]
 7709 026c FF3803E2 		and	r3, r3, #16711680
 7710 0270 020853E3 		cmp	r3, #131072
 7711 0274 0100001A 		bne	.L492
 7712              		.loc 1 3626 5 discriminator 10
 7713 0278 0830E0E3 		mvn	r3, #8
 7714              		.loc 1 3626 5
 7715 027c 860000EA 		b	.L479
 7716              	.L492:
 7717              		.loc 1 3626 5 discriminator 11
 7718 0280 10301BE5 		ldr	r3, [fp, #-16]
 7719 0284 233CA0E1 		lsr	r3, r3, #24
 7720 0288 030053E3 		cmp	r3, #3
 7721 028c 0100000A 		beq	.L493
 7722              		.loc 1 3626 5 discriminator 12
 7723 0290 0130E0E3 		mvn	r3, #1
 7724              		.loc 1 3626 5
 7725 0294 800000EA 		b	.L479
 7726              	.L493:
 7727              		.loc 1 3626 5 discriminator 13
 7728 0298 2C301BE5 		ldr	r3, [fp, #-44]
 7729 029c 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 201


 7730 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 7731 02a4 143093E5 		ldr	r3, [r3, #20]
 7732 02a8 030052E1 		cmp	r2, r3
 7733 02ac 0100003A 		bcc	.L494
 7734              		.loc 1 3626 5 discriminator 14
 7735 02b0 0230E0E3 		mvn	r3, #2
 7736              		.loc 1 3626 5
 7737 02b4 780000EA 		b	.L479
 7738              	.L494:
 7739              		.loc 1 3626 5 discriminator 15
 7740 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 7741 02bc 7F3003E2 		and	r3, r3, #127
 7742 02c0 8322A0E1 		lsl	r2, r3, #5
 7743 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 7744 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7745 02cc 033082E0 		add	r3, r2, r3
 7746 02d0 0C300BE5 		str	r3, [fp, #-12]
 7747 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 7748 02d8 0300A0E1 		mov	r0, r3
 7749 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7750 02e0 10000BE5 		str	r0, [fp, #-16]
 7751              		.loc 1 3626 5 discriminator 1
 7752 02e4 10301BE5 		ldr	r3, [fp, #-16]
 7753 02e8 FF3803E2 		and	r3, r3, #16711680
 7754 02ec 020853E3 		cmp	r3, #131072
 7755 02f0 0100001A 		bne	.L495
 7756              		.loc 1 3626 5 discriminator 16
 7757 02f4 0830E0E3 		mvn	r3, #8
 7758              		.loc 1 3626 5
 7759 02f8 670000EA 		b	.L479
 7760              	.L495:
 7761              		.loc 1 3626 5 discriminator 17
 7762 02fc 10301BE5 		ldr	r3, [fp, #-16]
 7763 0300 233CA0E1 		lsr	r3, r3, #24
 7764 0304 040053E3 		cmp	r3, #4
 7765 0308 0100000A 		beq	.L490
 7766              		.loc 1 3626 5 discriminator 18
 7767 030c 0130E0E3 		mvn	r3, #1
 7768              		.loc 1 3626 5
 7769 0310 610000EA 		b	.L479
 7770              	.L490:
3627:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3628:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3629:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_CON_PARENT);
 7771              		.loc 1 3629 5 is_stmt 1
 7772 0314 08301BE5 		ldr	r3, [fp, #-8]
 7773 0318 083093E5 		ldr	r3, [r3, #8]
 7774 031c 103003E2 		and	r3, r3, #16
 7775 0320 000053E3 		cmp	r3, #0
 7776 0324 0100001A 		bne	.L496
 7777              		.loc 1 3629 5 is_stmt 0 discriminator 1
 7778 0328 0630E0E3 		mvn	r3, #6
 7779              		.loc 1 3629 5
 7780 032c 5A0000EA 		b	.L479
 7781              	.L496:
3630:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 7782              		.loc 1 3630 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 202


 7783 0330 0C301BE5 		ldr	r3, [fp, #-12]
 7784 0334 083093E5 		ldr	r3, [r3, #8]
 7785 0338 083003E2 		and	r3, r3, #8
 7786 033c 000053E3 		cmp	r3, #0
 7787 0340 0100001A 		bne	.L497
 7788              		.loc 1 3630 5 is_stmt 0 discriminator 1
 7789 0344 0630E0E3 		mvn	r3, #6
 7790              		.loc 1 3630 5
 7791 0348 530000EA 		b	.L479
 7792              	.L497:
3631:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3632:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 7793              		.loc 1 3632 13 is_stmt 1
 7794 034c 08301BE5 		ldr	r3, [fp, #-8]
 7795 0350 083093E5 		ldr	r3, [r3, #8]
 7796 0354 233AA0E1 		lsr	r3, r3, #20
 7797              		.loc 1 3632 7
 7798 0358 28201BE5 		ldr	r2, [fp, #-40]
 7799 035c 030052E1 		cmp	r2, r3
 7800 0360 0600008A 		bhi	.L498
3633:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7801              		.loc 1 3633 13
 7802 0364 08301BE5 		ldr	r3, [fp, #-8]
 7803 0368 083093E5 		ldr	r3, [r3, #8]
 7804 036c 2334A0E1 		lsr	r3, r3, #8
 7805 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3632:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7806              		.loc 1 3632 54 discriminator 1
 7807 0374 28201BE5 		ldr	r2, [fp, #-40]
 7808 0378 030052E1 		cmp	r2, r3
 7809 037c 0100002A 		bcs	.L499
 7810              	.L498:
3634:../../Source/Kernel/rme_kernel.c ****     {
3635:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3636:../../Source/Kernel/rme_kernel.c **** 
3637:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7811              		.loc 1 3637 16
 7812 0380 0630E0E3 		mvn	r3, #6
 7813 0384 440000EA 		b	.L479
 7814              	.L499:
3638:../../Source/Kernel/rme_kernel.c ****     }
3639:../../Source/Kernel/rme_kernel.c ****     else
3640:../../Source/Kernel/rme_kernel.c ****     {
3641:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3642:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3643:../../Source/Kernel/rme_kernel.c ****     }
3644:../../Source/Kernel/rme_kernel.c ****     
3645:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
3646:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 7815              		.loc 1 3646 14
 7816 0388 08301BE5 		ldr	r3, [fp, #-8]
 7817 038c 143093E5 		ldr	r3, [r3, #20]
 7818 0390 7330FFE6 		uxth	r3, r3
 7819              		.loc 1 3646 12
 7820 0394 28201BE5 		ldr	r2, [fp, #-40]
 7821 0398 3233A0E1 		lsr	r3, r2, r3
 7822              		.loc 1 3646 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 203


 7823 039c 000053E3 		cmp	r3, #0
 7824 03a0 0100000A 		beq	.L500
3647:../../Source/Kernel/rme_kernel.c ****     {
3648:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3649:../../Source/Kernel/rme_kernel.c **** 
3650:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7825              		.loc 1 3650 16
 7826 03a4 6430E0E3 		mvn	r3, #100
 7827 03a8 3B0000EA 		b	.L479
 7828              	.L500:
3651:../../Source/Kernel/rme_kernel.c ****     }
3652:../../Source/Kernel/rme_kernel.c ****     else
3653:../../Source/Kernel/rme_kernel.c ****     {
3654:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3655:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3656:../../Source/Kernel/rme_kernel.c ****     }
3657:../../Source/Kernel/rme_kernel.c ****     
3658:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
3659:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 7829              		.loc 1 3659 17
 7830 03ac 0C301BE5 		ldr	r3, [fp, #-12]
 7831 03b0 143093E5 		ldr	r3, [r3, #20]
 7832 03b4 7320FFE6 		uxth	r2, r3
 7833              		.loc 1 3659 49
 7834 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 7835 03bc 143093E5 		ldr	r3, [r3, #20]
 7836 03c0 2338A0E1 		lsr	r3, r3, #16
 7837              		.loc 1 3659 16
 7838 03c4 033082E0 		add	r3, r2, r3
 7839 03c8 14300BE5 		str	r3, [fp, #-20]
3660:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 7840              		.loc 1 3660 18
 7841 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7842 03d0 143093E5 		ldr	r3, [r3, #20]
 7843              		.loc 1 3660 17
 7844 03d4 2338A0E1 		lsr	r3, r3, #16
 7845 03d8 18300BE5 		str	r3, [fp, #-24]
3661:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 7846              		.loc 1 3661 7
 7847 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7848 03e0 14301BE5 		ldr	r3, [fp, #-20]
 7849 03e4 030052E1 		cmp	r2, r3
 7850 03e8 0100002A 		bcs	.L501
3662:../../Source/Kernel/rme_kernel.c ****     {
3663:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3664:../../Source/Kernel/rme_kernel.c ****         
3665:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7851              		.loc 1 3665 16
 7852 03ec 6430E0E3 		mvn	r3, #100
 7853 03f0 290000EA 		b	.L479
 7854              	.L501:
3666:../../Source/Kernel/rme_kernel.c ****     }
3667:../../Source/Kernel/rme_kernel.c ****     else
3668:../../Source/Kernel/rme_kernel.c ****     {
3669:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3670:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3671:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 204


3672:../../Source/Kernel/rme_kernel.c **** 
3673:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3674:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
3675:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
3676:../../Source/Kernel/rme_kernel.c ****     {
3677:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3678:../../Source/Kernel/rme_kernel.c ****         
3679:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
3680:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
3681:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
3682:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
3683:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
3684:../../Source/Kernel/rme_kernel.c ****         {
3685:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3686:../../Source/Kernel/rme_kernel.c ****             
3687:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3688:../../Source/Kernel/rme_kernel.c ****         }
3689:../../Source/Kernel/rme_kernel.c ****         else
3690:../../Source/Kernel/rme_kernel.c ****         {
3691:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3692:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3693:../../Source/Kernel/rme_kernel.c ****         }
3694:../../Source/Kernel/rme_kernel.c ****         
3695:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
3696:../../Source/Kernel/rme_kernel.c ****         
3697:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
3698:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
3699:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
3700:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
3701:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
3702:../../Source/Kernel/rme_kernel.c ****         {
3703:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3704:../../Source/Kernel/rme_kernel.c ****             
3705:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3706:../../Source/Kernel/rme_kernel.c ****             {
3707:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3708:../../Source/Kernel/rme_kernel.c **** 
3709:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3710:../../Source/Kernel/rme_kernel.c ****             }
3711:../../Source/Kernel/rme_kernel.c ****             else
3712:../../Source/Kernel/rme_kernel.c ****             {
3713:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3714:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3715:../../Source/Kernel/rme_kernel.c ****             }
3716:../../Source/Kernel/rme_kernel.c ****         }
3717:../../Source/Kernel/rme_kernel.c ****         else
3718:../../Source/Kernel/rme_kernel.c ****         {
3719:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3720:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3721:../../Source/Kernel/rme_kernel.c ****         }
3722:../../Source/Kernel/rme_kernel.c ****     }
3723:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, check exempt */
3724:../../Source/Kernel/rme_kernel.c ****     else
3725:../../Source/Kernel/rme_kernel.c ****     {
3726:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3727:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3728:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 205


3729:../../Source/Kernel/rme_kernel.c **** #else
3730:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3731:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 7855              		.loc 1 3731 7
 7856 03f4 18201BE5 		ldr	r2, [fp, #-24]
 7857 03f8 14301BE5 		ldr	r3, [fp, #-20]
 7858 03fc 030052E1 		cmp	r2, r3
 7859 0400 0100000A 		beq	.L502
3732:../../Source/Kernel/rme_kernel.c ****     {
3733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3734:../../Source/Kernel/rme_kernel.c **** 
3735:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7860              		.loc 1 3735 16
 7861 0404 6430E0E3 		mvn	r3, #100
 7862 0408 230000EA 		b	.L479
 7863              	.L502:
3736:../../Source/Kernel/rme_kernel.c ****     }
3737:../../Source/Kernel/rme_kernel.c ****     else
3738:../../Source/Kernel/rme_kernel.c ****     {
3739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3740:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3741:../../Source/Kernel/rme_kernel.c ****     }
3742:../../Source/Kernel/rme_kernel.c **** #endif
3743:../../Source/Kernel/rme_kernel.c **** 
3744:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3745:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3746:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 7864              		.loc 1 3746 8
 7865 040c 04309BE5 		ldr	r3, [fp, #4]
 7866 0410 0C201BE5 		ldr	r2, [fp, #-12]
 7867 0414 28101BE5 		ldr	r1, [fp, #-40]
 7868 0418 08001BE5 		ldr	r0, [fp, #-8]
 7869 041c FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3747:../../Source/Kernel/rme_kernel.c ****     {
3748:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3749:../../Source/Kernel/rme_kernel.c **** 
3750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3751:../../Source/Kernel/rme_kernel.c ****     }
3752:../../Source/Kernel/rme_kernel.c ****     else
3753:../../Source/Kernel/rme_kernel.c ****     {
3754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3756:../../Source/Kernel/rme_kernel.c ****     }
3757:../../Source/Kernel/rme_kernel.c ****     
3758:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3759:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 7870              		.loc 1 3759 14
 7871 0420 08301BE5 		ldr	r3, [fp, #-8]
 7872 0424 003093E5 		ldr	r3, [r3]
 7873 0428 7330FFE6 		uxth	r3, r3
 7874 042c 000053E3 		cmp	r3, #0
 7875 0430 0200000A 		beq	.L503
 7876              		.loc 1 3759 14 is_stmt 0 discriminator 1
 7877 0434 08301BE5 		ldr	r3, [fp, #-8]
 7878 0438 043093E5 		ldr	r3, [r3, #4]
 7879 043c 000000EA 		b	.L504
 7880              	.L503:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 206


 7881              		.loc 1 3759 14 discriminator 2
 7882 0440 08301BE5 		ldr	r3, [fp, #-8]
 7883              	.L504:
 7884              		.loc 1 3759 13 is_stmt 1 discriminator 4
 7885 0444 1C300BE5 		str	r3, [fp, #-28]
3760:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7886              		.loc 1 3760 5
 7887 0448 1C301BE5 		ldr	r3, [fp, #-28]
 7888 044c 043083E2 		add	r3, r3, #4
 7889 0450 0110A0E3 		mov	r1, #1
 7890 0454 0300A0E1 		mov	r0, r3
 7891 0458 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3761:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 7892              		.loc 1 3761 14
 7893 045c 0C301BE5 		ldr	r3, [fp, #-12]
 7894 0460 003093E5 		ldr	r3, [r3]
 7895 0464 7330FFE6 		uxth	r3, r3
 7896 0468 000053E3 		cmp	r3, #0
 7897 046c 0200000A 		beq	.L505
 7898              		.loc 1 3761 14 is_stmt 0 discriminator 1
 7899 0470 0C301BE5 		ldr	r3, [fp, #-12]
 7900 0474 043093E5 		ldr	r3, [r3, #4]
 7901 0478 000000EA 		b	.L506
 7902              	.L505:
 7903              		.loc 1 3761 14 discriminator 2
 7904 047c 0C301BE5 		ldr	r3, [fp, #-12]
 7905              	.L506:
 7906              		.loc 1 3761 13 is_stmt 1 discriminator 4
 7907 0480 1C300BE5 		str	r3, [fp, #-28]
3762:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7908              		.loc 1 3762 5
 7909 0484 1C301BE5 		ldr	r3, [fp, #-28]
 7910 0488 043083E2 		add	r3, r3, #4
 7911 048c 0110A0E3 		mov	r1, #1
 7912 0490 0300A0E1 		mov	r0, r3
 7913 0494 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3763:../../Source/Kernel/rme_kernel.c **** 
3764:../../Source/Kernel/rme_kernel.c ****     return 0;
 7914              		.loc 1 3764 12
 7915 0498 0030A0E3 		mov	r3, #0
 7916              	.L479:
3765:../../Source/Kernel/rme_kernel.c **** }
 7917              		.loc 1 3765 1
 7918 049c 0300A0E1 		mov	r0, r3
 7919 04a0 04D04BE2 		sub	sp, fp, #4
 7920              		.cfi_def_cfa 13, 8
 7921              		@ sp needed
 7922 04a4 0088BDE8 		pop	{fp, pc}
 7923              		.cfi_endproc
 7924              	.LFE36:
 7926              		.section	.text._RME_Pgt_Des,"ax",%progbits
 7927              		.align	2
 7928              		.syntax unified
 7929              		.arm
 7931              	_RME_Pgt_Des:
 7932              	.LFB37:
3766:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 207


3767:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Con *************************************************/
3768:../../Source/Kernel/rme_kernel.c **** 
3769:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Des ******************************************************
3770:../../Source/Kernel/rme_kernel.c **** Description : Unmap a child page table from the parent page table, destructing
3771:../../Source/Kernel/rme_kernel.c ****               the address space tree.
3772:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3773:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page
3774:../../Source/Kernel/rme_kernel.c ****                                          table.
3775:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3776:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to position unmap
3777:../../Source/Kernel/rme_kernel.c ****                               the child page table from. The child page table
3778:../../Source/Kernel/rme_kernel.c ****                               must be there for the destruction to succeed.
3779:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3780:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3781:../../Source/Kernel/rme_kernel.c **** Output      : None.
3782:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3783:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3784:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3785:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Des(struct RME_Cap_Cpt* Cpt, 
3786:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3787:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3788:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child)
3789:../../Source/Kernel/rme_kernel.c **** {
 7933              		.loc 1 3789 1
 7934              		.cfi_startproc
 7935              		@ args = 0, pretend = 0, frame = 32
 7936              		@ frame_needed = 1, uses_anonymous_args = 0
 7937 0000 00482DE9 		push	{fp, lr}
 7938              		.cfi_def_cfa_offset 8
 7939              		.cfi_offset 11, -8
 7940              		.cfi_offset 14, -4
 7941 0004 04B08DE2 		add	fp, sp, #4
 7942              		.cfi_def_cfa 11, 4
 7943 0008 20D04DE2 		sub	sp, sp, #32
 7944 000c 18000BE5 		str	r0, [fp, #-24]
 7945 0010 1C100BE5 		str	r1, [fp, #-28]
 7946 0014 20200BE5 		str	r2, [fp, #-32]
 7947 0018 24300BE5 		str	r3, [fp, #-36]
3790:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3791:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3792:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Root;
3793:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3794:../../Source/Kernel/rme_kernel.c ****     
3795:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3796:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_CPT,
 7948              		.loc 1 3796 5
 7949 001c 1C301BE5 		ldr	r3, [fp, #-28]
 7950 0020 803003E2 		and	r3, r3, #128
 7951 0024 000053E3 		cmp	r3, #0
 7952 0028 1C00001A 		bne	.L508
 7953              		.loc 1 3796 5 is_stmt 0 discriminator 1
 7954 002c 18301BE5 		ldr	r3, [fp, #-24]
 7955 0030 142093E5 		ldr	r2, [r3, #20]
 7956 0034 1C301BE5 		ldr	r3, [fp, #-28]
 7957 0038 030052E1 		cmp	r2, r3
 7958 003c 0100008A 		bhi	.L509
 7959              		.loc 1 3796 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 208


 7960 0040 0230E0E3 		mvn	r3, #2
 7961              		.loc 1 3796 5
 7962 0044 000100EA 		b	.L510
 7963              	.L509:
 7964              		.loc 1 3796 5 discriminator 4
 7965 0048 1C301BE5 		ldr	r3, [fp, #-28]
 7966 004c 8322A0E1 		lsl	r2, r3, #5
 7967 0050 18301BE5 		ldr	r3, [fp, #-24]
 7968 0054 0C3093E5 		ldr	r3, [r3, #12]
 7969 0058 033082E0 		add	r3, r2, r3
 7970 005c 08300BE5 		str	r3, [fp, #-8]
 7971 0060 08301BE5 		ldr	r3, [fp, #-8]
 7972 0064 0300A0E1 		mov	r0, r3
 7973 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7974 006c 10000BE5 		str	r0, [fp, #-16]
 7975              		.loc 1 3796 5 discriminator 1
 7976 0070 10301BE5 		ldr	r3, [fp, #-16]
 7977 0074 FF3803E2 		and	r3, r3, #16711680
 7978 0078 020853E3 		cmp	r3, #131072
 7979 007c 0100001A 		bne	.L511
 7980              		.loc 1 3796 5 discriminator 5
 7981 0080 0830E0E3 		mvn	r3, #8
 7982              		.loc 1 3796 5
 7983 0084 F00000EA 		b	.L510
 7984              	.L511:
 7985              		.loc 1 3796 5 discriminator 6
 7986 0088 10301BE5 		ldr	r3, [fp, #-16]
 7987 008c 233CA0E1 		lsr	r3, r3, #24
 7988 0090 030053E3 		cmp	r3, #3
 7989 0094 3F00000A 		beq	.L512
 7990              		.loc 1 3796 5 discriminator 7
 7991 0098 0130E0E3 		mvn	r3, #1
 7992              		.loc 1 3796 5
 7993 009c EA0000EA 		b	.L510
 7994              	.L508:
 7995              		.loc 1 3796 5 discriminator 2
 7996 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 7997 00a4 2324A0E1 		lsr	r2, r3, #8
 7998 00a8 18301BE5 		ldr	r3, [fp, #-24]
 7999 00ac 143093E5 		ldr	r3, [r3, #20]
 8000 00b0 030052E1 		cmp	r2, r3
 8001 00b4 0100003A 		bcc	.L513
 8002              		.loc 1 3796 5 discriminator 8
 8003 00b8 0230E0E3 		mvn	r3, #2
 8004              		.loc 1 3796 5
 8005 00bc E20000EA 		b	.L510
 8006              	.L513:
 8007              		.loc 1 3796 5 discriminator 9
 8008 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 8009 00c4 2334A0E1 		lsr	r3, r3, #8
 8010 00c8 8322A0E1 		lsl	r2, r3, #5
 8011 00cc 18301BE5 		ldr	r3, [fp, #-24]
 8012 00d0 0C3093E5 		ldr	r3, [r3, #12]
 8013 00d4 033082E0 		add	r3, r2, r3
 8014 00d8 08300BE5 		str	r3, [fp, #-8]
 8015 00dc 08301BE5 		ldr	r3, [fp, #-8]
 8016 00e0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 209


 8017 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8018 00e8 10000BE5 		str	r0, [fp, #-16]
 8019              		.loc 1 3796 5 discriminator 1
 8020 00ec 10301BE5 		ldr	r3, [fp, #-16]
 8021 00f0 FF3803E2 		and	r3, r3, #16711680
 8022 00f4 020853E3 		cmp	r3, #131072
 8023 00f8 0100001A 		bne	.L514
 8024              		.loc 1 3796 5 discriminator 10
 8025 00fc 0830E0E3 		mvn	r3, #8
 8026              		.loc 1 3796 5
 8027 0100 D10000EA 		b	.L510
 8028              	.L514:
 8029              		.loc 1 3796 5 discriminator 11
 8030 0104 10301BE5 		ldr	r3, [fp, #-16]
 8031 0108 233CA0E1 		lsr	r3, r3, #24
 8032 010c 030053E3 		cmp	r3, #3
 8033 0110 0100000A 		beq	.L515
 8034              		.loc 1 3796 5 discriminator 12
 8035 0114 0130E0E3 		mvn	r3, #1
 8036              		.loc 1 3796 5
 8037 0118 CB0000EA 		b	.L510
 8038              	.L515:
 8039              		.loc 1 3796 5 discriminator 13
 8040 011c 1C301BE5 		ldr	r3, [fp, #-28]
 8041 0120 7F2003E2 		and	r2, r3, #127
 8042 0124 08301BE5 		ldr	r3, [fp, #-8]
 8043 0128 143093E5 		ldr	r3, [r3, #20]
 8044 012c 030052E1 		cmp	r2, r3
 8045 0130 0100003A 		bcc	.L516
 8046              		.loc 1 3796 5 discriminator 14
 8047 0134 0230E0E3 		mvn	r3, #2
 8048              		.loc 1 3796 5
 8049 0138 C30000EA 		b	.L510
 8050              	.L516:
 8051              		.loc 1 3796 5 discriminator 15
 8052 013c 1C301BE5 		ldr	r3, [fp, #-28]
 8053 0140 7F3003E2 		and	r3, r3, #127
 8054 0144 8322A0E1 		lsl	r2, r3, #5
 8055 0148 08301BE5 		ldr	r3, [fp, #-8]
 8056 014c 0C3093E5 		ldr	r3, [r3, #12]
 8057 0150 033082E0 		add	r3, r2, r3
 8058 0154 08300BE5 		str	r3, [fp, #-8]
 8059 0158 08301BE5 		ldr	r3, [fp, #-8]
 8060 015c 0300A0E1 		mov	r0, r3
 8061 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8062 0164 10000BE5 		str	r0, [fp, #-16]
 8063              		.loc 1 3796 5 discriminator 1
 8064 0168 10301BE5 		ldr	r3, [fp, #-16]
 8065 016c FF3803E2 		and	r3, r3, #16711680
 8066 0170 020853E3 		cmp	r3, #131072
 8067 0174 0100001A 		bne	.L517
 8068              		.loc 1 3796 5 discriminator 16
 8069 0178 0830E0E3 		mvn	r3, #8
 8070              		.loc 1 3796 5
 8071 017c B20000EA 		b	.L510
 8072              	.L517:
 8073              		.loc 1 3796 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 210


 8074 0180 10301BE5 		ldr	r3, [fp, #-16]
 8075 0184 233CA0E1 		lsr	r3, r3, #24
 8076 0188 030053E3 		cmp	r3, #3
 8077 018c 0100000A 		beq	.L512
 8078              		.loc 1 3796 5 discriminator 18
 8079 0190 0130E0E3 		mvn	r3, #1
 8080              		.loc 1 3796 5
 8081 0194 AC0000EA 		b	.L510
 8082              	.L512:
3797:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3798:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_CPT,
 8083              		.loc 1 3798 5 is_stmt 1
 8084 0198 24301BE5 		ldr	r3, [fp, #-36]
 8085 019c 803003E2 		and	r3, r3, #128
 8086 01a0 000053E3 		cmp	r3, #0
 8087 01a4 1C00001A 		bne	.L518
 8088              		.loc 1 3798 5 is_stmt 0 discriminator 1
 8089 01a8 18301BE5 		ldr	r3, [fp, #-24]
 8090 01ac 142093E5 		ldr	r2, [r3, #20]
 8091 01b0 24301BE5 		ldr	r3, [fp, #-36]
 8092 01b4 030052E1 		cmp	r2, r3
 8093 01b8 0100008A 		bhi	.L519
 8094              		.loc 1 3798 5 discriminator 3
 8095 01bc 0230E0E3 		mvn	r3, #2
 8096              		.loc 1 3798 5
 8097 01c0 A10000EA 		b	.L510
 8098              	.L519:
 8099              		.loc 1 3798 5 discriminator 4
 8100 01c4 24301BE5 		ldr	r3, [fp, #-36]
 8101 01c8 8322A0E1 		lsl	r2, r3, #5
 8102 01cc 18301BE5 		ldr	r3, [fp, #-24]
 8103 01d0 0C3093E5 		ldr	r3, [r3, #12]
 8104 01d4 033082E0 		add	r3, r2, r3
 8105 01d8 0C300BE5 		str	r3, [fp, #-12]
 8106 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 8107 01e0 0300A0E1 		mov	r0, r3
 8108 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8109 01e8 10000BE5 		str	r0, [fp, #-16]
 8110              		.loc 1 3798 5 discriminator 1
 8111 01ec 10301BE5 		ldr	r3, [fp, #-16]
 8112 01f0 FF3803E2 		and	r3, r3, #16711680
 8113 01f4 020853E3 		cmp	r3, #131072
 8114 01f8 0100001A 		bne	.L520
 8115              		.loc 1 3798 5 discriminator 5
 8116 01fc 0830E0E3 		mvn	r3, #8
 8117              		.loc 1 3798 5
 8118 0200 910000EA 		b	.L510
 8119              	.L520:
 8120              		.loc 1 3798 5 discriminator 6
 8121 0204 10301BE5 		ldr	r3, [fp, #-16]
 8122 0208 233CA0E1 		lsr	r3, r3, #24
 8123 020c 030053E3 		cmp	r3, #3
 8124 0210 3F00000A 		beq	.L521
 8125              		.loc 1 3798 5 discriminator 7
 8126 0214 0130E0E3 		mvn	r3, #1
 8127              		.loc 1 3798 5
 8128 0218 8B0000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 211


 8129              	.L518:
 8130              		.loc 1 3798 5 discriminator 2
 8131 021c 24301BE5 		ldr	r3, [fp, #-36]
 8132 0220 2324A0E1 		lsr	r2, r3, #8
 8133 0224 18301BE5 		ldr	r3, [fp, #-24]
 8134 0228 143093E5 		ldr	r3, [r3, #20]
 8135 022c 030052E1 		cmp	r2, r3
 8136 0230 0100003A 		bcc	.L522
 8137              		.loc 1 3798 5 discriminator 8
 8138 0234 0230E0E3 		mvn	r3, #2
 8139              		.loc 1 3798 5
 8140 0238 830000EA 		b	.L510
 8141              	.L522:
 8142              		.loc 1 3798 5 discriminator 9
 8143 023c 24301BE5 		ldr	r3, [fp, #-36]
 8144 0240 2334A0E1 		lsr	r3, r3, #8
 8145 0244 8322A0E1 		lsl	r2, r3, #5
 8146 0248 18301BE5 		ldr	r3, [fp, #-24]
 8147 024c 0C3093E5 		ldr	r3, [r3, #12]
 8148 0250 033082E0 		add	r3, r2, r3
 8149 0254 0C300BE5 		str	r3, [fp, #-12]
 8150 0258 0C301BE5 		ldr	r3, [fp, #-12]
 8151 025c 0300A0E1 		mov	r0, r3
 8152 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8153 0264 10000BE5 		str	r0, [fp, #-16]
 8154              		.loc 1 3798 5 discriminator 1
 8155 0268 10301BE5 		ldr	r3, [fp, #-16]
 8156 026c FF3803E2 		and	r3, r3, #16711680
 8157 0270 020853E3 		cmp	r3, #131072
 8158 0274 0100001A 		bne	.L523
 8159              		.loc 1 3798 5 discriminator 10
 8160 0278 0830E0E3 		mvn	r3, #8
 8161              		.loc 1 3798 5
 8162 027c 720000EA 		b	.L510
 8163              	.L523:
 8164              		.loc 1 3798 5 discriminator 11
 8165 0280 10301BE5 		ldr	r3, [fp, #-16]
 8166 0284 233CA0E1 		lsr	r3, r3, #24
 8167 0288 030053E3 		cmp	r3, #3
 8168 028c 0100000A 		beq	.L524
 8169              		.loc 1 3798 5 discriminator 12
 8170 0290 0130E0E3 		mvn	r3, #1
 8171              		.loc 1 3798 5
 8172 0294 6C0000EA 		b	.L510
 8173              	.L524:
 8174              		.loc 1 3798 5 discriminator 13
 8175 0298 24301BE5 		ldr	r3, [fp, #-36]
 8176 029c 7F2003E2 		and	r2, r3, #127
 8177 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 8178 02a4 143093E5 		ldr	r3, [r3, #20]
 8179 02a8 030052E1 		cmp	r2, r3
 8180 02ac 0100003A 		bcc	.L525
 8181              		.loc 1 3798 5 discriminator 14
 8182 02b0 0230E0E3 		mvn	r3, #2
 8183              		.loc 1 3798 5
 8184 02b4 640000EA 		b	.L510
 8185              	.L525:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 212


 8186              		.loc 1 3798 5 discriminator 15
 8187 02b8 24301BE5 		ldr	r3, [fp, #-36]
 8188 02bc 7F3003E2 		and	r3, r3, #127
 8189 02c0 8322A0E1 		lsl	r2, r3, #5
 8190 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 8191 02c8 0C3093E5 		ldr	r3, [r3, #12]
 8192 02cc 033082E0 		add	r3, r2, r3
 8193 02d0 0C300BE5 		str	r3, [fp, #-12]
 8194 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 8195 02d8 0300A0E1 		mov	r0, r3
 8196 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8197 02e0 10000BE5 		str	r0, [fp, #-16]
 8198              		.loc 1 3798 5 discriminator 1
 8199 02e4 10301BE5 		ldr	r3, [fp, #-16]
 8200 02e8 FF3803E2 		and	r3, r3, #16711680
 8201 02ec 020853E3 		cmp	r3, #131072
 8202 02f0 0100001A 		bne	.L526
 8203              		.loc 1 3798 5 discriminator 16
 8204 02f4 0830E0E3 		mvn	r3, #8
 8205              		.loc 1 3798 5
 8206 02f8 530000EA 		b	.L510
 8207              	.L526:
 8208              		.loc 1 3798 5 discriminator 17
 8209 02fc 10301BE5 		ldr	r3, [fp, #-16]
 8210 0300 233CA0E1 		lsr	r3, r3, #24
 8211 0304 030053E3 		cmp	r3, #3
 8212 0308 0100000A 		beq	.L521
 8213              		.loc 1 3798 5 discriminator 18
 8214 030c 0130E0E3 		mvn	r3, #1
 8215              		.loc 1 3798 5
 8216 0310 4D0000EA 		b	.L510
 8217              	.L521:
3799:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3800:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3801:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_DES_PARENT);
 8218              		.loc 1 3801 5 is_stmt 1
 8219 0314 08301BE5 		ldr	r3, [fp, #-8]
 8220 0318 083093E5 		ldr	r3, [r3, #8]
 8221 031c 203003E2 		and	r3, r3, #32
 8222 0320 000053E3 		cmp	r3, #0
 8223 0324 0100001A 		bne	.L527
 8224              		.loc 1 3801 5 is_stmt 0 discriminator 1
 8225 0328 0630E0E3 		mvn	r3, #6
 8226              		.loc 1 3801 5
 8227 032c 460000EA 		b	.L510
 8228              	.L527:
3802:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 8229              		.loc 1 3802 5 is_stmt 1
 8230 0330 0C301BE5 		ldr	r3, [fp, #-12]
 8231 0334 083093E5 		ldr	r3, [r3, #8]
 8232 0338 083003E2 		and	r3, r3, #8
 8233 033c 000053E3 		cmp	r3, #0
 8234 0340 0100001A 		bne	.L528
 8235              		.loc 1 3802 5 is_stmt 0 discriminator 1
 8236 0344 0630E0E3 		mvn	r3, #6
 8237              		.loc 1 3802 5
 8238 0348 3F0000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 213


 8239              	.L528:
3803:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3804:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 8240              		.loc 1 3804 13 is_stmt 1
 8241 034c 08301BE5 		ldr	r3, [fp, #-8]
 8242 0350 083093E5 		ldr	r3, [r3, #8]
 8243 0354 233AA0E1 		lsr	r3, r3, #20
 8244              		.loc 1 3804 7
 8245 0358 20201BE5 		ldr	r2, [fp, #-32]
 8246 035c 030052E1 		cmp	r2, r3
 8247 0360 0600008A 		bhi	.L529
3805:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8248              		.loc 1 3805 13
 8249 0364 08301BE5 		ldr	r3, [fp, #-8]
 8250 0368 083093E5 		ldr	r3, [r3, #8]
 8251 036c 2334A0E1 		lsr	r3, r3, #8
 8252 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3804:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8253              		.loc 1 3804 54 discriminator 1
 8254 0374 20201BE5 		ldr	r2, [fp, #-32]
 8255 0378 030052E1 		cmp	r2, r3
 8256 037c 0100002A 		bcs	.L530
 8257              	.L529:
3806:../../Source/Kernel/rme_kernel.c ****     {
3807:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3808:../../Source/Kernel/rme_kernel.c **** 
3809:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 8258              		.loc 1 3809 16
 8259 0380 0630E0E3 		mvn	r3, #6
 8260 0384 300000EA 		b	.L510
 8261              	.L530:
3810:../../Source/Kernel/rme_kernel.c ****     }
3811:../../Source/Kernel/rme_kernel.c ****     else
3812:../../Source/Kernel/rme_kernel.c ****     {
3813:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3814:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3815:../../Source/Kernel/rme_kernel.c ****     }
3816:../../Source/Kernel/rme_kernel.c **** 
3817:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3818:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 8262              		.loc 1 3818 14
 8263 0388 08301BE5 		ldr	r3, [fp, #-8]
 8264 038c 143093E5 		ldr	r3, [r3, #20]
 8265 0390 7330FFE6 		uxth	r3, r3
 8266              		.loc 1 3818 12
 8267 0394 20201BE5 		ldr	r2, [fp, #-32]
 8268 0398 3233A0E1 		lsr	r3, r2, r3
 8269              		.loc 1 3818 7
 8270 039c 000053E3 		cmp	r3, #0
 8271 03a0 0100000A 		beq	.L531
3819:../../Source/Kernel/rme_kernel.c ****     {
3820:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3821:../../Source/Kernel/rme_kernel.c **** 
3822:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 8272              		.loc 1 3822 16
 8273 03a4 6430E0E3 		mvn	r3, #100
 8274 03a8 270000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 214


 8275              	.L531:
3823:../../Source/Kernel/rme_kernel.c ****     }
3824:../../Source/Kernel/rme_kernel.c ****     else
3825:../../Source/Kernel/rme_kernel.c ****     {
3826:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3827:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3828:../../Source/Kernel/rme_kernel.c ****     }
3829:../../Source/Kernel/rme_kernel.c **** 
3830:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3831:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict. Also,
3832:../../Source/Kernel/rme_kernel.c ****      * the HAL needs to guarantee that the Child is actually mapped there,
3833:../../Source/Kernel/rme_kernel.c ****      * and use that as the old value in CAS */
3834:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Unmap(Pgt_Parent,Pos,Pgt_Child)<0)
 8276              		.loc 1 3834 8
 8277 03ac 0C201BE5 		ldr	r2, [fp, #-12]
 8278 03b0 20101BE5 		ldr	r1, [fp, #-32]
 8279 03b4 08001BE5 		ldr	r0, [fp, #-8]
 8280 03b8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Unmap
 8281 03bc 0030A0E1 		mov	r3, r0
 8282              		.loc 1 3834 7 discriminator 1
 8283 03c0 000053E3 		cmp	r3, #0
 8284 03c4 010000AA 		bge	.L532
3835:../../Source/Kernel/rme_kernel.c ****     {
3836:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3837:../../Source/Kernel/rme_kernel.c **** 
3838:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 8285              		.loc 1 3838 16
 8286 03c8 6530E0E3 		mvn	r3, #101
 8287 03cc 1E0000EA 		b	.L510
 8288              	.L532:
3839:../../Source/Kernel/rme_kernel.c ****     }
3840:../../Source/Kernel/rme_kernel.c ****     else
3841:../../Source/Kernel/rme_kernel.c ****     {
3842:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3843:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3844:../../Source/Kernel/rme_kernel.c ****     }
3845:../../Source/Kernel/rme_kernel.c ****     
3846:../../Source/Kernel/rme_kernel.c ****     /* Decrease refcnt for both parent/child */
3847:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 8289              		.loc 1 3847 14
 8290 03d0 08301BE5 		ldr	r3, [fp, #-8]
 8291 03d4 003093E5 		ldr	r3, [r3]
 8292 03d8 7330FFE6 		uxth	r3, r3
 8293 03dc 000053E3 		cmp	r3, #0
 8294 03e0 0200000A 		beq	.L533
 8295              		.loc 1 3847 14 is_stmt 0 discriminator 1
 8296 03e4 08301BE5 		ldr	r3, [fp, #-8]
 8297 03e8 043093E5 		ldr	r3, [r3, #4]
 8298 03ec 000000EA 		b	.L534
 8299              	.L533:
 8300              		.loc 1 3847 14 discriminator 2
 8301 03f0 08301BE5 		ldr	r3, [fp, #-8]
 8302              	.L534:
 8303              		.loc 1 3847 13 is_stmt 1 discriminator 4
 8304 03f4 14300BE5 		str	r3, [fp, #-20]
3848:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8305              		.loc 1 3848 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 215


 8306 03f8 14301BE5 		ldr	r3, [fp, #-20]
 8307 03fc 043083E2 		add	r3, r3, #4
 8308 0400 0010E0E3 		mvn	r1, #0
 8309 0404 0300A0E1 		mov	r0, r3
 8310 0408 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3849:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 8311              		.loc 1 3849 14
 8312 040c 0C301BE5 		ldr	r3, [fp, #-12]
 8313 0410 003093E5 		ldr	r3, [r3]
 8314 0414 7330FFE6 		uxth	r3, r3
 8315 0418 000053E3 		cmp	r3, #0
 8316 041c 0200000A 		beq	.L535
 8317              		.loc 1 3849 14 is_stmt 0 discriminator 1
 8318 0420 0C301BE5 		ldr	r3, [fp, #-12]
 8319 0424 043093E5 		ldr	r3, [r3, #4]
 8320 0428 000000EA 		b	.L536
 8321              	.L535:
 8322              		.loc 1 3849 14 discriminator 2
 8323 042c 0C301BE5 		ldr	r3, [fp, #-12]
 8324              	.L536:
 8325              		.loc 1 3849 13 is_stmt 1 discriminator 4
 8326 0430 14300BE5 		str	r3, [fp, #-20]
3850:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8327              		.loc 1 3850 5
 8328 0434 14301BE5 		ldr	r3, [fp, #-20]
 8329 0438 043083E2 		add	r3, r3, #4
 8330 043c 0010E0E3 		mvn	r1, #0
 8331 0440 0300A0E1 		mov	r0, r3
 8332 0444 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3851:../../Source/Kernel/rme_kernel.c **** 
3852:../../Source/Kernel/rme_kernel.c ****     return 0;
 8333              		.loc 1 3852 12
 8334 0448 0030A0E3 		mov	r3, #0
 8335              	.L510:
3853:../../Source/Kernel/rme_kernel.c **** }
 8336              		.loc 1 3853 1
 8337 044c 0300A0E1 		mov	r0, r3
 8338 0450 04D04BE2 		sub	sp, fp, #4
 8339              		.cfi_def_cfa 13, 8
 8340              		@ sp needed
 8341 0454 0088BDE8 		pop	{fp, pc}
 8342              		.cfi_endproc
 8343              	.LFE37:
 8345              		.section	.text._RME_Kot_Init,"ax",%progbits
 8346              		.align	2
 8347              		.global	_RME_Kot_Init
 8348              		.syntax unified
 8349              		.arm
 8351              	_RME_Kot_Init:
 8352              	.LFB38:
3854:../../Source/Kernel/rme_kernel.c **** #endif
3855:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Des *************************************************/
3856:../../Source/Kernel/rme_kernel.c **** 
3857:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Init *****************************************************
3858:../../Source/Kernel/rme_kernel.c **** Description : Initialize the kernel object table according to the total kernel
3859:../../Source/Kernel/rme_kernel.c ****               memory size, which decides the number of words in the table.
3860:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Words - the number of words in the table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 216


3861:../../Source/Kernel/rme_kernel.c **** Output      : None.
3862:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the number of words are is not sufficient to hold 
3863:../../Source/Kernel/rme_kernel.c ****                           all kernel memory, -1; else 0.
3864:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3865:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Init(rme_ptr_t Word)
3866:../../Source/Kernel/rme_kernel.c **** {
 8353              		.loc 1 3866 1
 8354              		.cfi_startproc
 8355              		@ args = 0, pretend = 0, frame = 16
 8356              		@ frame_needed = 1, uses_anonymous_args = 0
 8357              		@ link register save eliminated.
 8358 0000 04B02DE5 		str	fp, [sp, #-4]!
 8359              		.cfi_def_cfa_offset 4
 8360              		.cfi_offset 11, -4
 8361 0004 00B08DE2 		add	fp, sp, #0
 8362              		.cfi_def_cfa_register 11
 8363 0008 14D04DE2 		sub	sp, sp, #20
 8364 000c 10000BE5 		str	r0, [fp, #-16]
3867:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3868:../../Source/Kernel/rme_kernel.c ****     
3869:../../Source/Kernel/rme_kernel.c ****     if(Word<RME_KOT_WORD_NUM)
 8365              		.loc 1 3869 7
 8366 0010 10301BE5 		ldr	r3, [fp, #-16]
 8367 0014 020653E3 		cmp	r3, #2097152
 8368 0018 0100002A 		bcs	.L538
3870:../../Source/Kernel/rme_kernel.c ****     {
3871:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3872:../../Source/Kernel/rme_kernel.c **** 
3873:../../Source/Kernel/rme_kernel.c ****         return -1;
 8369              		.loc 1 3873 16
 8370 001c 0030E0E3 		mvn	r3, #0
 8371 0020 0F0000EA 		b	.L539
 8372              	.L538:
3874:../../Source/Kernel/rme_kernel.c ****     }
3875:../../Source/Kernel/rme_kernel.c ****     else
3876:../../Source/Kernel/rme_kernel.c ****     {
3877:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3878:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3879:../../Source/Kernel/rme_kernel.c ****     }
3880:../../Source/Kernel/rme_kernel.c **** 
3881:../../Source/Kernel/rme_kernel.c ****     /* Zero out the whole table */
3882:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Word;Count++)
 8373              		.loc 1 3882 14
 8374 0024 0030A0E3 		mov	r3, #0
 8375 0028 08300BE5 		str	r3, [fp, #-8]
 8376              		.loc 1 3882 5
 8377 002c 070000EA 		b	.L540
 8378              	.L541:
3883:../../Source/Kernel/rme_kernel.c ****     {
3884:../../Source/Kernel/rme_kernel.c ****         RME_KOT_VA_BASE[Count]=0U;
 8379              		.loc 1 3884 31
 8380 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8381 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8382 0038 08201BE5 		ldr	r2, [fp, #-8]
 8383 003c 0010A0E3 		mov	r1, #0
 8384 0040 021183E7 		str	r1, [r3, r2, lsl #2]
3882:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 217


 8385              		.loc 1 3882 34 discriminator 3
 8386 0044 08301BE5 		ldr	r3, [fp, #-8]
 8387 0048 013083E2 		add	r3, r3, #1
 8388 004c 08300BE5 		str	r3, [fp, #-8]
 8389              	.L540:
3882:../../Source/Kernel/rme_kernel.c ****     {
 8390              		.loc 1 3882 23 discriminator 1
 8391 0050 08201BE5 		ldr	r2, [fp, #-8]
 8392 0054 10301BE5 		ldr	r3, [fp, #-16]
 8393 0058 030052E1 		cmp	r2, r3
 8394 005c F3FFFF3A 		bcc	.L541
3885:../../Source/Kernel/rme_kernel.c ****     }
3886:../../Source/Kernel/rme_kernel.c **** 
3887:../../Source/Kernel/rme_kernel.c ****     return 0;
 8395              		.loc 1 3887 12
 8396 0060 0030A0E3 		mov	r3, #0
 8397              	.L539:
3888:../../Source/Kernel/rme_kernel.c **** }
 8398              		.loc 1 3888 1
 8399 0064 0300A0E1 		mov	r0, r3
 8400 0068 00D08BE2 		add	sp, fp, #0
 8401              		.cfi_def_cfa_register 13
 8402              		@ sp needed
 8403 006c 04B09DE4 		ldr	fp, [sp], #4
 8404              		.cfi_restore 11
 8405              		.cfi_def_cfa_offset 0
 8406 0070 1EFF2FE1 		bx	lr
 8407              		.cfi_endproc
 8408              	.LFE38:
 8410              		.section	.text._RME_Kot_Mark,"ax",%progbits
 8411              		.align	2
 8412              		.global	_RME_Kot_Mark
 8413              		.syntax unified
 8414              		.arm
 8416              	_RME_Kot_Mark:
 8417              	.LFB39:
3889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Init ************************************************/
3890:../../Source/Kernel/rme_kernel.c **** 
3891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Mark *****************************************************
3892:../../Source/Kernel/rme_kernel.c **** Description : Populate the kernel object bitmap contiguously.
3893:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
3894:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to populate.
3895:../../Source/Kernel/rme_kernel.c **** Output      : None.
3896:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3897:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3898:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Mark(rme_ptr_t Kaddr,
3899:../../Source/Kernel/rme_kernel.c ****                         rme_ptr_t Size)
3900:../../Source/Kernel/rme_kernel.c **** {
 8418              		.loc 1 3900 1
 8419              		.cfi_startproc
 8420              		@ args = 0, pretend = 0, frame = 40
 8421              		@ frame_needed = 1, uses_anonymous_args = 0
 8422 0000 00482DE9 		push	{fp, lr}
 8423              		.cfi_def_cfa_offset 8
 8424              		.cfi_offset 11, -8
 8425              		.cfi_offset 14, -4
 8426 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 218


 8427              		.cfi_def_cfa 11, 4
 8428 0008 28D04DE2 		sub	sp, sp, #40
 8429 000c 28000BE5 		str	r0, [fp, #-40]
 8430 0010 2C100BE5 		str	r1, [fp, #-44]
3901:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3902:../../Source/Kernel/rme_kernel.c ****     /* The old value */
3903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Val;
3904:../../Source/Kernel/rme_kernel.c ****     /* Whether we need to undo our operations because of CAS failure */
3905:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Undo;
3906:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
3907:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
3908:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
3909:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
3910:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
3911:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
3912:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
3913:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
3914:../../Source/Kernel/rme_kernel.c **** 
3915:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
3916:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8431              		.loc 1 3916 14
 8432 0014 28301BE5 		ldr	r3, [fp, #-40]
 8433 0018 0F3003E2 		and	r3, r3, #15
 8434              		.loc 1 3916 7
 8435 001c 000053E3 		cmp	r3, #0
 8436 0020 0100000A 		beq	.L543
3917:../../Source/Kernel/rme_kernel.c ****     {
3918:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3919:../../Source/Kernel/rme_kernel.c **** 
3920:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8437              		.loc 1 3920 16
 8438 0024 0030E0E3 		mvn	r3, #0
 8439 0028 C20000EA 		b	.L544
 8440              	.L543:
3921:../../Source/Kernel/rme_kernel.c ****     }
3922:../../Source/Kernel/rme_kernel.c ****     else
3923:../../Source/Kernel/rme_kernel.c ****     {
3924:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3925:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3926:../../Source/Kernel/rme_kernel.c ****     }
3927:../../Source/Kernel/rme_kernel.c ****     
3928:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
3929:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8441              		.loc 1 3929 17
 8442 002c 28301BE5 		ldr	r3, [fp, #-40]
 8443 0030 7F3483E2 		add	r3, r3, #2130706432
 8444              		.loc 1 3929 10
 8445 0034 2332A0E1 		lsr	r3, r3, #4
 8446 0038 10300BE5 		str	r3, [fp, #-16]
3930:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8447              		.loc 1 3930 16
 8448 003c 10301BE5 		ldr	r3, [fp, #-16]
 8449 0040 1F3003E2 		and	r3, r3, #31
 8450              		.loc 1 3930 15
 8451 0044 0020E0E3 		mvn	r2, #0
 8452 0048 1233A0E1 		lsl	r3, r2, r3
 8453 004c 14300BE5 		str	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 219


3931:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8454              		.loc 1 3931 10
 8455 0050 10301BE5 		ldr	r3, [fp, #-16]
 8456 0054 A332A0E1 		lsr	r3, r3, #5
 8457 0058 10300BE5 		str	r3, [fp, #-16]
3932:../../Source/Kernel/rme_kernel.c ****     
3933:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8458              		.loc 1 3933 15
 8459 005c 28201BE5 		ldr	r2, [fp, #-40]
 8460 0060 2C301BE5 		ldr	r3, [fp, #-44]
 8461 0064 033082E0 		add	r3, r2, r3
 8462              		.loc 1 3933 23
 8463 0068 7F3483E2 		add	r3, r3, #2130706432
 8464 006c 013043E2 		sub	r3, r3, #1
 8465              		.loc 1 3933 8
 8466 0070 2332A0E1 		lsr	r3, r3, #4
 8467 0074 18300BE5 		str	r3, [fp, #-24]
3934:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8468              		.loc 1 3934 14
 8469 0078 18301BE5 		ldr	r3, [fp, #-24]
 8470 007c 0330E0E1 		mvn	r3, r3
 8471 0080 1F3003E2 		and	r3, r3, #31
 8472              		.loc 1 3934 13
 8473 0084 0020E0E3 		mvn	r2, #0
 8474 0088 3233A0E1 		lsr	r3, r2, r3
 8475 008c 1C300BE5 		str	r3, [fp, #-28]
3935:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8476              		.loc 1 3935 8
 8477 0090 18301BE5 		ldr	r3, [fp, #-24]
 8478 0094 A332A0E1 		lsr	r3, r3, #5
 8479 0098 18300BE5 		str	r3, [fp, #-24]
3936:../../Source/Kernel/rme_kernel.c ****     
3937:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
3938:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8480              		.loc 1 3938 7
 8481 009c 10201BE5 		ldr	r2, [fp, #-16]
 8482 00a0 18301BE5 		ldr	r3, [fp, #-24]
 8483 00a4 030052E1 		cmp	r2, r3
 8484 00a8 1F00001A 		bne	.L545
3939:../../Source/Kernel/rme_kernel.c ****     {
3940:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3941:../../Source/Kernel/rme_kernel.c **** 
3942:../../Source/Kernel/rme_kernel.c ****         /* Someone already populated something here */
3943:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8485              		.loc 1 3943 16
 8486 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8487 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8488 00b4 10201BE5 		ldr	r2, [fp, #-16]
 8489 00b8 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8490 00bc 20300BE5 		str	r3, [fp, #-32]
3944:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&(Mask_Begin&Mask_End))!=0U)
 8491              		.loc 1 3944 32
 8492 00c0 14201BE5 		ldr	r2, [fp, #-20]
 8493 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 8494 00c8 032002E0 		and	r2, r2, r3
 8495              		.loc 1 3944 20
 8496 00cc 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 220


 8497 00d0 023003E0 		and	r3, r3, r2
 8498              		.loc 1 3944 11
 8499 00d4 000053E3 		cmp	r3, #0
 8500 00d8 0100000A 		beq	.L546
3945:../../Source/Kernel/rme_kernel.c ****         {
3946:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3947:../../Source/Kernel/rme_kernel.c **** 
3948:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8501              		.loc 1 3948 20
 8502 00dc 0030E0E3 		mvn	r3, #0
 8503 00e0 940000EA 		b	.L544
 8504              	.L546:
3949:../../Source/Kernel/rme_kernel.c ****         }
3950:../../Source/Kernel/rme_kernel.c ****         else
3951:../../Source/Kernel/rme_kernel.c ****         {
3952:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3953:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3954:../../Source/Kernel/rme_kernel.c ****         }
3955:../../Source/Kernel/rme_kernel.c ****         
3956:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the marking with CAS */
3957:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8505              		.loc 1 3957 12
 8506 00e4 10301BE5 		ldr	r3, [fp, #-16]
 8507 00e8 0321A0E1 		lsl	r2, r3, #2
 8508 00ec 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8509 00f0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8510 00f4 030082E0 		add	r0, r2, r3
 8511 00f8 14201BE5 		ldr	r2, [fp, #-20]
 8512 00fc 1C301BE5 		ldr	r3, [fp, #-28]
 8513 0100 032002E0 		and	r2, r2, r3
 8514 0104 20301BE5 		ldr	r3, [fp, #-32]
 8515 0108 033082E1 		orr	r3, r2, r3
 8516 010c 0320A0E1 		mov	r2, r3
 8517 0110 20101BE5 		ldr	r1, [fp, #-32]
 8518 0114 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8519 0118 0030A0E1 		mov	r3, r0
 8520              		.loc 1 3957 11 discriminator 1
 8521 011c 000053E3 		cmp	r3, #0
 8522 0120 8300001A 		bne	.L547
3958:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3959:../../Source/Kernel/rme_kernel.c ****                          Old_Val|(Mask_Begin&Mask_End))==RME_CASFAIL)
3960:../../Source/Kernel/rme_kernel.c ****         {
3961:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3962:../../Source/Kernel/rme_kernel.c **** 
3963:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8523              		.loc 1 3963 20
 8524 0124 0030E0E3 		mvn	r3, #0
 8525 0128 820000EA 		b	.L544
 8526              	.L545:
3964:../../Source/Kernel/rme_kernel.c ****         }
3965:../../Source/Kernel/rme_kernel.c ****         else
3966:../../Source/Kernel/rme_kernel.c ****         {
3967:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3968:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3969:../../Source/Kernel/rme_kernel.c ****         }
3970:../../Source/Kernel/rme_kernel.c ****     }
3971:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 221


3972:../../Source/Kernel/rme_kernel.c ****     {
3973:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3974:../../Source/Kernel/rme_kernel.c ****         
3975:../../Source/Kernel/rme_kernel.c ****         Undo=0U;
 8527              		.loc 1 3975 13
 8528 012c 0030A0E3 		mov	r3, #0
 8529 0130 0C300BE5 		str	r3, [fp, #-12]
3976:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the start */
3977:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8530              		.loc 1 3977 16
 8531 0134 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8532 0138 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8533 013c 10201BE5 		ldr	r2, [fp, #-16]
 8534 0140 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8535 0144 20300BE5 		str	r3, [fp, #-32]
3978:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&Mask_Begin)!=0U)
 8536              		.loc 1 3978 20
 8537 0148 20201BE5 		ldr	r2, [fp, #-32]
 8538 014c 14301BE5 		ldr	r3, [fp, #-20]
 8539 0150 023003E0 		and	r3, r3, r2
 8540              		.loc 1 3978 11
 8541 0154 000053E3 		cmp	r3, #0
 8542 0158 0100000A 		beq	.L548
3979:../../Source/Kernel/rme_kernel.c ****         {
3980:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3981:../../Source/Kernel/rme_kernel.c **** 
3982:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8543              		.loc 1 3982 20
 8544 015c 0030E0E3 		mvn	r3, #0
 8545 0160 740000EA 		b	.L544
 8546              	.L548:
3983:../../Source/Kernel/rme_kernel.c ****         }
3984:../../Source/Kernel/rme_kernel.c ****         else
3985:../../Source/Kernel/rme_kernel.c ****         {
3986:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3987:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3988:../../Source/Kernel/rme_kernel.c ****         }
3989:../../Source/Kernel/rme_kernel.c ****         
3990:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8547              		.loc 1 3990 12
 8548 0164 10301BE5 		ldr	r3, [fp, #-16]
 8549 0168 0321A0E1 		lsl	r2, r3, #2
 8550 016c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8551 0170 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8552 0174 030082E0 		add	r0, r2, r3
 8553 0178 20201BE5 		ldr	r2, [fp, #-32]
 8554 017c 14301BE5 		ldr	r3, [fp, #-20]
 8555 0180 033082E1 		orr	r3, r2, r3
 8556 0184 0320A0E1 		mov	r2, r3
 8557 0188 20101BE5 		ldr	r1, [fp, #-32]
 8558 018c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8559 0190 0030A0E1 		mov	r3, r0
 8560              		.loc 1 3990 11 discriminator 1
 8561 0194 000053E3 		cmp	r3, #0
 8562 0198 0100001A 		bne	.L549
3991:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3992:../../Source/Kernel/rme_kernel.c ****                          Old_Val|Mask_Begin)==RME_CASFAIL)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 222


3993:../../Source/Kernel/rme_kernel.c ****         {
3994:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3995:../../Source/Kernel/rme_kernel.c **** 
3996:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8563              		.loc 1 3996 20
 8564 019c 0030E0E3 		mvn	r3, #0
 8565 01a0 640000EA 		b	.L544
 8566              	.L549:
3997:../../Source/Kernel/rme_kernel.c ****         }
3998:../../Source/Kernel/rme_kernel.c ****         else
3999:../../Source/Kernel/rme_kernel.c ****         {
4000:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4001:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4002:../../Source/Kernel/rme_kernel.c ****         }
4003:../../Source/Kernel/rme_kernel.c ****         
4004:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the middle */
4005:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End;Count++)
 8567              		.loc 1 4005 18
 8568 01a4 10301BE5 		ldr	r3, [fp, #-16]
 8569 01a8 013083E2 		add	r3, r3, #1
 8570 01ac 08300BE5 		str	r3, [fp, #-8]
 8571              		.loc 1 4005 9
 8572 01b0 1C0000EA 		b	.L550
 8573              	.L554:
4006:../../Source/Kernel/rme_kernel.c ****         {
4007:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[Count];
 8574              		.loc 1 4007 20
 8575 01b4 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8576 01b8 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8577 01bc 08201BE5 		ldr	r2, [fp, #-8]
 8578 01c0 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8579 01c4 20300BE5 		str	r3, [fp, #-32]
4008:../../Source/Kernel/rme_kernel.c ****             if(Old_Val!=0U)
 8580              		.loc 1 4008 15
 8581 01c8 20301BE5 		ldr	r3, [fp, #-32]
 8582 01cc 000053E3 		cmp	r3, #0
 8583 01d0 0200000A 		beq	.L551
4009:../../Source/Kernel/rme_kernel.c ****             {
4010:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4011:../../Source/Kernel/rme_kernel.c **** 
4012:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8584              		.loc 1 4012 21
 8585 01d4 0130A0E3 		mov	r3, #1
 8586 01d8 0C300BE5 		str	r3, [fp, #-12]
4013:../../Source/Kernel/rme_kernel.c ****                 break;
 8587              		.loc 1 4013 17
 8588 01dc 150000EA 		b	.L552
 8589              	.L551:
4014:../../Source/Kernel/rme_kernel.c ****             }
4015:../../Source/Kernel/rme_kernel.c ****             else
4016:../../Source/Kernel/rme_kernel.c ****             {
4017:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4018:../../Source/Kernel/rme_kernel.c ****                 
4019:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Count],
 8590              		.loc 1 4019 20
 8591 01e0 08301BE5 		ldr	r3, [fp, #-8]
 8592 01e4 0321A0E1 		lsl	r2, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 223


 8593 01e8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8594 01ec 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8595 01f0 033082E0 		add	r3, r2, r3
 8596 01f4 0020E0E3 		mvn	r2, #0
 8597 01f8 20101BE5 		ldr	r1, [fp, #-32]
 8598 01fc 0300A0E1 		mov	r0, r3
 8599 0200 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8600 0204 0030A0E1 		mov	r3, r0
 8601              		.loc 1 4019 19 discriminator 1
 8602 0208 000053E3 		cmp	r3, #0
 8603 020c 0200001A 		bne	.L553
4020:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4021:../../Source/Kernel/rme_kernel.c ****                                  RME_MASK_FULL)==RME_CASFAIL)
4022:../../Source/Kernel/rme_kernel.c ****                 {
4023:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4024:../../Source/Kernel/rme_kernel.c ****                     
4025:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8604              		.loc 1 4025 25
 8605 0210 0130A0E3 		mov	r3, #1
 8606 0214 0C300BE5 		str	r3, [fp, #-12]
4026:../../Source/Kernel/rme_kernel.c ****                     break;
 8607              		.loc 1 4026 21
 8608 0218 060000EA 		b	.L552
 8609              	.L553:
4005:../../Source/Kernel/rme_kernel.c ****         {
 8610              		.loc 1 4005 43 discriminator 2
 8611 021c 08301BE5 		ldr	r3, [fp, #-8]
 8612 0220 013083E2 		add	r3, r3, #1
 8613 0224 08300BE5 		str	r3, [fp, #-8]
 8614              	.L550:
4005:../../Source/Kernel/rme_kernel.c ****         {
 8615              		.loc 1 4005 33 discriminator 1
 8616 0228 08201BE5 		ldr	r2, [fp, #-8]
 8617 022c 18301BE5 		ldr	r3, [fp, #-24]
 8618 0230 030052E1 		cmp	r2, r3
 8619 0234 DEFFFF3A 		bcc	.L554
 8620              	.L552:
4027:../../Source/Kernel/rme_kernel.c ****                 }
4028:../../Source/Kernel/rme_kernel.c ****                 else
4029:../../Source/Kernel/rme_kernel.c ****                 {
4030:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4031:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4032:../../Source/Kernel/rme_kernel.c ****                 }
4033:../../Source/Kernel/rme_kernel.c ****             }
4034:../../Source/Kernel/rme_kernel.c ****         }
4035:../../Source/Kernel/rme_kernel.c ****         
4036:../../Source/Kernel/rme_kernel.c ****         /* See if the middle part failed. If yes, we skip the end marking */
4037:../../Source/Kernel/rme_kernel.c ****         if(Undo==0U)
 8621              		.loc 1 4037 11
 8622 0238 0C301BE5 		ldr	r3, [fp, #-12]
 8623 023c 000053E3 		cmp	r3, #0
 8624 0240 1C00001A 		bne	.L555
4038:../../Source/Kernel/rme_kernel.c ****         {
4039:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4040:../../Source/Kernel/rme_kernel.c **** 
4041:../../Source/Kernel/rme_kernel.c ****             /* Check&Mark the end */
4042:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[End];
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 224


 8625              		.loc 1 4042 20
 8626 0244 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8627 0248 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8628 024c 18201BE5 		ldr	r2, [fp, #-24]
 8629 0250 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8630 0254 20300BE5 		str	r3, [fp, #-32]
4043:../../Source/Kernel/rme_kernel.c ****             if((Old_Val&Mask_End)!=0U)
 8631              		.loc 1 4043 24
 8632 0258 20201BE5 		ldr	r2, [fp, #-32]
 8633 025c 1C301BE5 		ldr	r3, [fp, #-28]
 8634 0260 023003E0 		and	r3, r3, r2
 8635              		.loc 1 4043 15
 8636 0264 000053E3 		cmp	r3, #0
 8637 0268 0200000A 		beq	.L556
4044:../../Source/Kernel/rme_kernel.c ****             {
4045:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4046:../../Source/Kernel/rme_kernel.c **** 
4047:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8638              		.loc 1 4047 21
 8639 026c 0130A0E3 		mov	r3, #1
 8640 0270 0C300BE5 		str	r3, [fp, #-12]
 8641 0274 0F0000EA 		b	.L555
 8642              	.L556:
4048:../../Source/Kernel/rme_kernel.c ****             }
4049:../../Source/Kernel/rme_kernel.c ****             else
4050:../../Source/Kernel/rme_kernel.c ****             {
4051:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4052:../../Source/Kernel/rme_kernel.c **** 
4053:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[End],
 8643              		.loc 1 4053 20
 8644 0278 18301BE5 		ldr	r3, [fp, #-24]
 8645 027c 0321A0E1 		lsl	r2, r3, #2
 8646 0280 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8647 0284 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8648 0288 030082E0 		add	r0, r2, r3
 8649 028c 20201BE5 		ldr	r2, [fp, #-32]
 8650 0290 1C301BE5 		ldr	r3, [fp, #-28]
 8651 0294 033082E1 		orr	r3, r2, r3
 8652 0298 0320A0E1 		mov	r2, r3
 8653 029c 20101BE5 		ldr	r1, [fp, #-32]
 8654 02a0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8655 02a4 0030A0E1 		mov	r3, r0
 8656              		.loc 1 4053 19 discriminator 1
 8657 02a8 000053E3 		cmp	r3, #0
 8658 02ac 0100001A 		bne	.L555
4054:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4055:../../Source/Kernel/rme_kernel.c ****                                  Old_Val|Mask_End)==RME_CASFAIL)
4056:../../Source/Kernel/rme_kernel.c ****                 {
4057:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4058:../../Source/Kernel/rme_kernel.c **** 
4059:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8659              		.loc 1 4059 25
 8660 02b0 0130A0E3 		mov	r3, #1
 8661 02b4 0C300BE5 		str	r3, [fp, #-12]
 8662              	.L555:
4060:../../Source/Kernel/rme_kernel.c ****                 }
4061:../../Source/Kernel/rme_kernel.c ****                 else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 225


4062:../../Source/Kernel/rme_kernel.c ****                 {
4063:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4064:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4065:../../Source/Kernel/rme_kernel.c ****                 }
4066:../../Source/Kernel/rme_kernel.c ****             }
4067:../../Source/Kernel/rme_kernel.c ****         }
4068:../../Source/Kernel/rme_kernel.c ****         else
4069:../../Source/Kernel/rme_kernel.c ****         {
4070:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4071:../../Source/Kernel/rme_kernel.c ****         }
4072:../../Source/Kernel/rme_kernel.c ****         
4073:../../Source/Kernel/rme_kernel.c ****         /* See if we need to undo. If yes, proceed to unroll and return error */
4074:../../Source/Kernel/rme_kernel.c ****         if(Undo!=0U)
 8663              		.loc 1 4074 11
 8664 02b8 0C301BE5 		ldr	r3, [fp, #-12]
 8665 02bc 000053E3 		cmp	r3, #0
 8666 02c0 1B00000A 		beq	.L547
4075:../../Source/Kernel/rme_kernel.c ****         {
4076:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4077:../../Source/Kernel/rme_kernel.c **** 
4078:../../Source/Kernel/rme_kernel.c ****             /* Undo the middle part - no CAS neeeded, write back is always atomic */
4079:../../Source/Kernel/rme_kernel.c ****             for(Count--;Count>Start;Count--)
 8667              		.loc 1 4079 22
 8668 02c4 08301BE5 		ldr	r3, [fp, #-8]
 8669 02c8 013043E2 		sub	r3, r3, #1
 8670 02cc 08300BE5 		str	r3, [fp, #-8]
 8671              		.loc 1 4079 13
 8672 02d0 070000EA 		b	.L557
 8673              	.L558:
4080:../../Source/Kernel/rme_kernel.c ****             {
4081:../../Source/Kernel/rme_kernel.c ****                 RME_KOT_VA_BASE[Count]=0U;
 8674              		.loc 1 4081 39
 8675 02d4 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8676 02d8 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8677 02dc 08201BE5 		ldr	r2, [fp, #-8]
 8678 02e0 0010A0E3 		mov	r1, #0
 8679 02e4 021183E7 		str	r1, [r3, r2, lsl #2]
4079:../../Source/Kernel/rme_kernel.c ****             {
 8680              		.loc 1 4079 42 discriminator 3
 8681 02e8 08301BE5 		ldr	r3, [fp, #-8]
 8682 02ec 013043E2 		sub	r3, r3, #1
 8683 02f0 08300BE5 		str	r3, [fp, #-8]
 8684              	.L557:
4079:../../Source/Kernel/rme_kernel.c ****             {
 8685              		.loc 1 4079 30 discriminator 1
 8686 02f4 08201BE5 		ldr	r2, [fp, #-8]
 8687 02f8 10301BE5 		ldr	r3, [fp, #-16]
 8688 02fc 030052E1 		cmp	r2, r3
 8689 0300 F3FFFF8A 		bhi	.L558
4082:../../Source/Kernel/rme_kernel.c ****             }
4083:../../Source/Kernel/rme_kernel.c ****             /* Undo the first word - need atomic instructions */
4084:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8690              		.loc 1 4084 13
 8691 0304 10301BE5 		ldr	r3, [fp, #-16]
 8692 0308 0321A0E1 		lsl	r2, r3, #2
 8693 030c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8694 0310 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 226


 8695 0314 032082E0 		add	r2, r2, r3
 8696 0318 14301BE5 		ldr	r3, [fp, #-20]
 8697 031c 0330E0E1 		mvn	r3, r3
 8698 0320 0310A0E1 		mov	r1, r3
 8699 0324 0200A0E1 		mov	r0, r2
 8700 0328 FEFFFFEB 		bl	_RME_Fetch_And_Single
4085:../../Source/Kernel/rme_kernel.c ****             /* Return failure */
4086:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8701              		.loc 1 4086 20
 8702 032c 0030E0E3 		mvn	r3, #0
 8703 0330 000000EA 		b	.L544
 8704              	.L547:
4087:../../Source/Kernel/rme_kernel.c ****         }
4088:../../Source/Kernel/rme_kernel.c ****         else
4089:../../Source/Kernel/rme_kernel.c ****         {
4090:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4091:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4092:../../Source/Kernel/rme_kernel.c ****         }
4093:../../Source/Kernel/rme_kernel.c ****     }
4094:../../Source/Kernel/rme_kernel.c **** 
4095:../../Source/Kernel/rme_kernel.c ****     return 0;
 8705              		.loc 1 4095 12
 8706 0334 0030A0E3 		mov	r3, #0
 8707              	.L544:
4096:../../Source/Kernel/rme_kernel.c **** }
 8708              		.loc 1 4096 1
 8709 0338 0300A0E1 		mov	r0, r3
 8710 033c 04D04BE2 		sub	sp, fp, #4
 8711              		.cfi_def_cfa 13, 8
 8712              		@ sp needed
 8713 0340 0088BDE8 		pop	{fp, pc}
 8714              		.cfi_endproc
 8715              	.LFE39:
 8717              		.section	.text._RME_Kot_Erase,"ax",%progbits
 8718              		.align	2
 8719              		.global	_RME_Kot_Erase
 8720              		.syntax unified
 8721              		.arm
 8723              	_RME_Kot_Erase:
 8724              	.LFB40:
4097:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Mark ************************************************/
4098:../../Source/Kernel/rme_kernel.c **** 
4099:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Erase ****************************************************
4100:../../Source/Kernel/rme_kernel.c **** Description : Depopulate the kernel object bitmap contiguously. We do not need 
4101:../../Source/Kernel/rme_kernel.c ****               CAS on erasure operations.
4102:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
4103:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to depopulate.
4104:../../Source/Kernel/rme_kernel.c **** Output      : None.
4105:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4106:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4107:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Erase(rme_ptr_t Kaddr,
4108:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t Size)
4109:../../Source/Kernel/rme_kernel.c **** {
 8725              		.loc 1 4109 1
 8726              		.cfi_startproc
 8727              		@ args = 0, pretend = 0, frame = 32
 8728              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 227


 8729 0000 00482DE9 		push	{fp, lr}
 8730              		.cfi_def_cfa_offset 8
 8731              		.cfi_offset 11, -8
 8732              		.cfi_offset 14, -4
 8733 0004 04B08DE2 		add	fp, sp, #4
 8734              		.cfi_def_cfa 11, 4
 8735 0008 20D04DE2 		sub	sp, sp, #32
 8736 000c 20000BE5 		str	r0, [fp, #-32]
 8737 0010 24100BE5 		str	r1, [fp, #-36]
4110:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
4111:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
4112:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
4113:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
4114:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
4115:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
4116:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
4117:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
4118:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
4119:../../Source/Kernel/rme_kernel.c **** 
4120:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
4121:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8738              		.loc 1 4121 14
 8739 0014 20301BE5 		ldr	r3, [fp, #-32]
 8740 0018 0F3003E2 		and	r3, r3, #15
 8741              		.loc 1 4121 7
 8742 001c 000053E3 		cmp	r3, #0
 8743 0020 0100000A 		beq	.L560
4122:../../Source/Kernel/rme_kernel.c ****     {
4123:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4124:../../Source/Kernel/rme_kernel.c **** 
4125:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8744              		.loc 1 4125 16
 8745 0024 0030E0E3 		mvn	r3, #0
 8746 0028 8A0000EA 		b	.L561
 8747              	.L560:
4126:../../Source/Kernel/rme_kernel.c ****     }
4127:../../Source/Kernel/rme_kernel.c ****     else
4128:../../Source/Kernel/rme_kernel.c ****     {
4129:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4130:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4131:../../Source/Kernel/rme_kernel.c ****     }
4132:../../Source/Kernel/rme_kernel.c ****     
4133:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
4134:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8748              		.loc 1 4134 17
 8749 002c 20301BE5 		ldr	r3, [fp, #-32]
 8750 0030 7F3483E2 		add	r3, r3, #2130706432
 8751              		.loc 1 4134 10
 8752 0034 2332A0E1 		lsr	r3, r3, #4
 8753 0038 0C300BE5 		str	r3, [fp, #-12]
4135:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8754              		.loc 1 4135 16
 8755 003c 0C301BE5 		ldr	r3, [fp, #-12]
 8756 0040 1F3003E2 		and	r3, r3, #31
 8757              		.loc 1 4135 15
 8758 0044 0020E0E3 		mvn	r2, #0
 8759 0048 1233A0E1 		lsl	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 228


 8760 004c 10300BE5 		str	r3, [fp, #-16]
4136:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8761              		.loc 1 4136 10
 8762 0050 0C301BE5 		ldr	r3, [fp, #-12]
 8763 0054 A332A0E1 		lsr	r3, r3, #5
 8764 0058 0C300BE5 		str	r3, [fp, #-12]
4137:../../Source/Kernel/rme_kernel.c ****     
4138:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8765              		.loc 1 4138 15
 8766 005c 20201BE5 		ldr	r2, [fp, #-32]
 8767 0060 24301BE5 		ldr	r3, [fp, #-36]
 8768 0064 033082E0 		add	r3, r2, r3
 8769              		.loc 1 4138 23
 8770 0068 7F3483E2 		add	r3, r3, #2130706432
 8771 006c 013043E2 		sub	r3, r3, #1
 8772              		.loc 1 4138 8
 8773 0070 2332A0E1 		lsr	r3, r3, #4
 8774 0074 14300BE5 		str	r3, [fp, #-20]
4139:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8775              		.loc 1 4139 14
 8776 0078 14301BE5 		ldr	r3, [fp, #-20]
 8777 007c 0330E0E1 		mvn	r3, r3
 8778 0080 1F3003E2 		and	r3, r3, #31
 8779              		.loc 1 4139 13
 8780 0084 0020E0E3 		mvn	r2, #0
 8781 0088 3233A0E1 		lsr	r3, r2, r3
 8782 008c 18300BE5 		str	r3, [fp, #-24]
4140:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8783              		.loc 1 4140 8
 8784 0090 14301BE5 		ldr	r3, [fp, #-20]
 8785 0094 A332A0E1 		lsr	r3, r3, #5
 8786 0098 14300BE5 		str	r3, [fp, #-20]
4141:../../Source/Kernel/rme_kernel.c ****     
4142:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
4143:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8787              		.loc 1 4143 7
 8788 009c 0C201BE5 		ldr	r2, [fp, #-12]
 8789 00a0 14301BE5 		ldr	r3, [fp, #-20]
 8790 00a4 030052E1 		cmp	r2, r3
 8791 00a8 1A00001A 		bne	.L562
4144:../../Source/Kernel/rme_kernel.c ****     {
4145:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4146:../../Source/Kernel/rme_kernel.c **** 
4147:../../Source/Kernel/rme_kernel.c ****         /* This address range is not fully populated */
4148:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&(Mask_Begin&Mask_End))!=(Mask_Begin&Mask_End))
 8792              		.loc 1 4148 28
 8793 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8794 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8795 00b4 0C201BE5 		ldr	r2, [fp, #-12]
 8796 00b8 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8797              		.loc 1 4148 47
 8798 00bc 10101BE5 		ldr	r1, [fp, #-16]
 8799 00c0 18301BE5 		ldr	r3, [fp, #-24]
 8800 00c4 013003E0 		and	r3, r3, r1
 8801              		.loc 1 4148 35
 8802 00c8 032002E0 		and	r2, r2, r3
 8803              		.loc 1 4148 71
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 229


 8804 00cc 10101BE5 		ldr	r1, [fp, #-16]
 8805 00d0 18301BE5 		ldr	r3, [fp, #-24]
 8806 00d4 013003E0 		and	r3, r3, r1
 8807              		.loc 1 4148 11
 8808 00d8 030052E1 		cmp	r2, r3
 8809 00dc 0100000A 		beq	.L563
4149:../../Source/Kernel/rme_kernel.c ****         {
4150:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4151:../../Source/Kernel/rme_kernel.c **** 
4152:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8810              		.loc 1 4152 20
 8811 00e0 0030E0E3 		mvn	r3, #0
 8812 00e4 5B0000EA 		b	.L561
 8813              	.L563:
4153:../../Source/Kernel/rme_kernel.c ****         }
4154:../../Source/Kernel/rme_kernel.c ****         else
4155:../../Source/Kernel/rme_kernel.c ****         {
4156:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4157:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4158:../../Source/Kernel/rme_kernel.c ****         }
4159:../../Source/Kernel/rme_kernel.c **** 
4160:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the unmarking - need atomic operations */
4161:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~(Mask_Begin&Mask_End));
 8814              		.loc 1 4161 9
 8815 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 8816 00ec 0321A0E1 		lsl	r2, r3, #2
 8817 00f0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8818 00f4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8819 00f8 030082E0 		add	r0, r2, r3
 8820 00fc 10201BE5 		ldr	r2, [fp, #-16]
 8821 0100 18301BE5 		ldr	r3, [fp, #-24]
 8822 0104 023003E0 		and	r3, r3, r2
 8823 0108 0330E0E1 		mvn	r3, r3
 8824 010c 0310A0E1 		mov	r1, r3
 8825 0110 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8826 0114 4E0000EA 		b	.L564
 8827              	.L562:
4162:../../Source/Kernel/rme_kernel.c ****     }
4163:../../Source/Kernel/rme_kernel.c ****     else
4164:../../Source/Kernel/rme_kernel.c ****     {
4165:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4166:../../Source/Kernel/rme_kernel.c **** 
4167:../../Source/Kernel/rme_kernel.c ****         /* Check the start */
4168:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&Mask_Begin)!=Mask_Begin)
 8828              		.loc 1 4168 28
 8829 0118 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8830 011c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8831 0120 0C201BE5 		ldr	r2, [fp, #-12]
 8832 0124 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8833              		.loc 1 4168 35
 8834 0128 10301BE5 		ldr	r3, [fp, #-16]
 8835 012c 023003E0 		and	r3, r3, r2
 8836              		.loc 1 4168 11
 8837 0130 10201BE5 		ldr	r2, [fp, #-16]
 8838 0134 030052E1 		cmp	r2, r3
 8839 0138 0100000A 		beq	.L565
4169:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 230


4170:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4171:../../Source/Kernel/rme_kernel.c **** 
4172:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8840              		.loc 1 4172 20
 8841 013c 0030E0E3 		mvn	r3, #0
 8842 0140 440000EA 		b	.L561
 8843              	.L565:
4173:../../Source/Kernel/rme_kernel.c ****         }
4174:../../Source/Kernel/rme_kernel.c ****         else
4175:../../Source/Kernel/rme_kernel.c ****         {
4176:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4177:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4178:../../Source/Kernel/rme_kernel.c ****         }
4179:../../Source/Kernel/rme_kernel.c ****         
4180:../../Source/Kernel/rme_kernel.c ****         /* Check the middle */
4181:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8844              		.loc 1 4181 18
 8845 0144 0C301BE5 		ldr	r3, [fp, #-12]
 8846 0148 013083E2 		add	r3, r3, #1
 8847 014c 08300BE5 		str	r3, [fp, #-8]
 8848              		.loc 1 4181 9
 8849 0150 0A0000EA 		b	.L566
 8850              	.L568:
4182:../../Source/Kernel/rme_kernel.c ****         {
4183:../../Source/Kernel/rme_kernel.c ****             if(RME_KOT_VA_BASE[Count]!=RME_MASK_FULL)
 8851              		.loc 1 4183 31
 8852 0154 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8853 0158 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8854 015c 08201BE5 		ldr	r2, [fp, #-8]
 8855 0160 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8856              		.loc 1 4183 15
 8857 0164 010073E3 		cmn	r3, #1
 8858 0168 0100000A 		beq	.L567
4184:../../Source/Kernel/rme_kernel.c ****             {
4185:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4186:../../Source/Kernel/rme_kernel.c **** 
4187:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_KOT_BMP;
 8859              		.loc 1 4187 24
 8860 016c 0030E0E3 		mvn	r3, #0
 8861 0170 380000EA 		b	.L561
 8862              	.L567:
4181:../../Source/Kernel/rme_kernel.c ****         {
 8863              		.loc 1 4181 46 discriminator 2
 8864 0174 08301BE5 		ldr	r3, [fp, #-8]
 8865 0178 013083E2 		add	r3, r3, #1
 8866 017c 08300BE5 		str	r3, [fp, #-8]
 8867              	.L566:
4181:../../Source/Kernel/rme_kernel.c ****         {
 8868              		.loc 1 4181 37 discriminator 1
 8869 0180 14301BE5 		ldr	r3, [fp, #-20]
 8870 0184 013043E2 		sub	r3, r3, #1
4181:../../Source/Kernel/rme_kernel.c ****         {
 8871              		.loc 1 4181 33 discriminator 1
 8872 0188 08201BE5 		ldr	r2, [fp, #-8]
 8873 018c 030052E1 		cmp	r2, r3
 8874 0190 EFFFFF3A 		bcc	.L568
4188:../../Source/Kernel/rme_kernel.c ****             }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 231


4189:../../Source/Kernel/rme_kernel.c ****             else
4190:../../Source/Kernel/rme_kernel.c ****             {
4191:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4192:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
4193:../../Source/Kernel/rme_kernel.c ****             }
4194:../../Source/Kernel/rme_kernel.c ****         }
4195:../../Source/Kernel/rme_kernel.c **** 
4196:../../Source/Kernel/rme_kernel.c ****         /* Check the end */
4197:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[End]&Mask_End)!=Mask_End)
 8875              		.loc 1 4197 28
 8876 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8877 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8878 019c 14201BE5 		ldr	r2, [fp, #-20]
 8879 01a0 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8880              		.loc 1 4197 33
 8881 01a4 18301BE5 		ldr	r3, [fp, #-24]
 8882 01a8 023003E0 		and	r3, r3, r2
 8883              		.loc 1 4197 11
 8884 01ac 18201BE5 		ldr	r2, [fp, #-24]
 8885 01b0 030052E1 		cmp	r2, r3
 8886 01b4 0100000A 		beq	.L569
4198:../../Source/Kernel/rme_kernel.c ****         {
4199:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4200:../../Source/Kernel/rme_kernel.c **** 
4201:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8887              		.loc 1 4201 20
 8888 01b8 0030E0E3 		mvn	r3, #0
 8889 01bc 250000EA 		b	.L561
 8890              	.L569:
4202:../../Source/Kernel/rme_kernel.c ****         }
4203:../../Source/Kernel/rme_kernel.c ****         else
4204:../../Source/Kernel/rme_kernel.c ****         {
4205:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4206:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4207:../../Source/Kernel/rme_kernel.c ****         }
4208:../../Source/Kernel/rme_kernel.c ****         
4209:../../Source/Kernel/rme_kernel.c ****         /* Erase the start - make it atomic */
4210:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8891              		.loc 1 4210 9
 8892 01c0 0C301BE5 		ldr	r3, [fp, #-12]
 8893 01c4 0321A0E1 		lsl	r2, r3, #2
 8894 01c8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8895 01cc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8896 01d0 032082E0 		add	r2, r2, r3
 8897 01d4 10301BE5 		ldr	r3, [fp, #-16]
 8898 01d8 0330E0E1 		mvn	r3, r3
 8899 01dc 0310A0E1 		mov	r1, r3
 8900 01e0 0200A0E1 		mov	r0, r2
 8901 01e4 FEFFFFEB 		bl	_RME_Fetch_And_Single
4211:../../Source/Kernel/rme_kernel.c ****         /* Erase the middle - do not need atomics here */
4212:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8902              		.loc 1 4212 18
 8903 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 8904 01ec 013083E2 		add	r3, r3, #1
 8905 01f0 08300BE5 		str	r3, [fp, #-8]
 8906              		.loc 1 4212 9
 8907 01f4 070000EA 		b	.L570
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 232


 8908              	.L571:
4213:../../Source/Kernel/rme_kernel.c ****         {
4214:../../Source/Kernel/rme_kernel.c ****             RME_KOT_VA_BASE[Count]=0U;
 8909              		.loc 1 4214 35
 8910 01f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8911 01fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8912 0200 08201BE5 		ldr	r2, [fp, #-8]
 8913 0204 0010A0E3 		mov	r1, #0
 8914 0208 021183E7 		str	r1, [r3, r2, lsl #2]
4212:../../Source/Kernel/rme_kernel.c ****         {
 8915              		.loc 1 4212 46 discriminator 3
 8916 020c 08301BE5 		ldr	r3, [fp, #-8]
 8917 0210 013083E2 		add	r3, r3, #1
 8918 0214 08300BE5 		str	r3, [fp, #-8]
 8919              	.L570:
4212:../../Source/Kernel/rme_kernel.c ****         {
 8920              		.loc 1 4212 37 discriminator 1
 8921 0218 14301BE5 		ldr	r3, [fp, #-20]
 8922 021c 013043E2 		sub	r3, r3, #1
4212:../../Source/Kernel/rme_kernel.c ****         {
 8923              		.loc 1 4212 33 discriminator 1
 8924 0220 08201BE5 		ldr	r2, [fp, #-8]
 8925 0224 030052E1 		cmp	r2, r3
 8926 0228 F2FFFF3A 		bcc	.L571
4215:../../Source/Kernel/rme_kernel.c ****         }
4216:../../Source/Kernel/rme_kernel.c ****         /* Erase the end - make it atomic */
4217:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[End]),~Mask_End);
 8927              		.loc 1 4217 9
 8928 022c 14301BE5 		ldr	r3, [fp, #-20]
 8929 0230 0321A0E1 		lsl	r2, r3, #2
 8930 0234 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8931 0238 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8932 023c 032082E0 		add	r2, r2, r3
 8933 0240 18301BE5 		ldr	r3, [fp, #-24]
 8934 0244 0330E0E1 		mvn	r3, r3
 8935 0248 0310A0E1 		mov	r1, r3
 8936 024c 0200A0E1 		mov	r0, r2
 8937 0250 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8938              	.L564:
4218:../../Source/Kernel/rme_kernel.c ****     }
4219:../../Source/Kernel/rme_kernel.c **** 
4220:../../Source/Kernel/rme_kernel.c ****     return 0;
 8939              		.loc 1 4220 12
 8940 0254 0030A0E3 		mov	r3, #0
 8941              	.L561:
4221:../../Source/Kernel/rme_kernel.c **** }
 8942              		.loc 1 4221 1
 8943 0258 0300A0E1 		mov	r0, r3
 8944 025c 04D04BE2 		sub	sp, fp, #4
 8945              		.cfi_def_cfa 13, 8
 8946              		@ sp needed
 8947 0260 0088BDE8 		pop	{fp, pc}
 8948              		.cfi_endproc
 8949              	.LFE40:
 8951              		.section	.text._RME_Kom_Boot_Crt,"ax",%progbits
 8952              		.align	2
 8953              		.global	_RME_Kom_Boot_Crt
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 233


 8954              		.syntax unified
 8955              		.arm
 8957              	_RME_Kom_Boot_Crt:
 8958              	.LFB41:
4222:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Erase ***********************************************/
4223:../../Source/Kernel/rme_kernel.c **** 
4224:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kom_Boot_Crt *************************************************
4225:../../Source/Kernel/rme_kernel.c **** Description : Create boot-time kernel memory capability. Kernel memory allow
4226:../../Source/Kernel/rme_kernel.c ****               you to create specific types of kernel objects in a specific 
4227:../../Source/Kernel/rme_kernel.c ****               kernel memory range. The initial kernel memory capability's
4228:../../Source/Kernel/rme_kernel.c ****               content is supplied by the kernel according to config.
4229:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4230:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
4231:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
4232:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4233:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The capability to the kernel memory.
4234:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4235:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Begin - The begin address of the kernel memory, aligned
4236:../../Source/Kernel/rme_kernel.c ****                                 to kotbl granularity.
4237:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t End - The end address of the kernel memory, aligned to
4238:../../Source/Kernel/rme_kernel.c ****                               kotbl granularity, then -1.
4239:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The operation flags for this kernel memory. Set
4240:../../Source/Kernel/rme_kernel.c ****                                acoording to your needs.
4241:../../Source/Kernel/rme_kernel.c **** Output      : None.
4242:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4243:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4244:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kom_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4245:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4246:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kom,
4247:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Begin,
4248:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t End,
4249:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
4250:../../Source/Kernel/rme_kernel.c **** {
 8959              		.loc 1 4250 1
 8960              		.cfi_startproc
 8961              		@ args = 8, pretend = 0, frame = 40
 8962              		@ frame_needed = 1, uses_anonymous_args = 0
 8963 0000 00482DE9 		push	{fp, lr}
 8964              		.cfi_def_cfa_offset 8
 8965              		.cfi_offset 11, -8
 8966              		.cfi_offset 14, -4
 8967 0004 04B08DE2 		add	fp, sp, #4
 8968              		.cfi_def_cfa 11, 4
 8969 0008 28D04DE2 		sub	sp, sp, #40
 8970 000c 20000BE5 		str	r0, [fp, #-32]
 8971 0010 24100BE5 		str	r1, [fp, #-36]
 8972 0014 28200BE5 		str	r2, [fp, #-40]
 8973 0018 2C300BE5 		str	r3, [fp, #-44]
4251:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4252:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kom* Kom_Crt;
4253:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
4254:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
4255:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4256:../../Source/Kernel/rme_kernel.c ****     
4257:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
4258:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 8974              		.loc 1 4258 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 234


 8975 001c 24301BE5 		ldr	r3, [fp, #-36]
 8976 0020 803003E2 		and	r3, r3, #128
 8977 0024 000053E3 		cmp	r3, #0
 8978 0028 1C00001A 		bne	.L573
 8979              		.loc 1 4258 5 is_stmt 0 discriminator 1
 8980 002c 20301BE5 		ldr	r3, [fp, #-32]
 8981 0030 142093E5 		ldr	r2, [r3, #20]
 8982 0034 24301BE5 		ldr	r3, [fp, #-36]
 8983 0038 030052E1 		cmp	r2, r3
 8984 003c 0100008A 		bhi	.L574
 8985              		.loc 1 4258 5 discriminator 3
 8986 0040 0230E0E3 		mvn	r3, #2
 8987              		.loc 1 4258 5
 8988 0044 9F0000EA 		b	.L575
 8989              	.L574:
 8990              		.loc 1 4258 5 discriminator 4
 8991 0048 24301BE5 		ldr	r3, [fp, #-36]
 8992 004c 8322A0E1 		lsl	r2, r3, #5
 8993 0050 20301BE5 		ldr	r3, [fp, #-32]
 8994 0054 0C3093E5 		ldr	r3, [r3, #12]
 8995 0058 033082E0 		add	r3, r2, r3
 8996 005c 08300BE5 		str	r3, [fp, #-8]
 8997 0060 08301BE5 		ldr	r3, [fp, #-8]
 8998 0064 0300A0E1 		mov	r0, r3
 8999 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9000 006c 0C000BE5 		str	r0, [fp, #-12]
 9001              		.loc 1 4258 5 discriminator 1
 9002 0070 0C301BE5 		ldr	r3, [fp, #-12]
 9003 0074 FF3803E2 		and	r3, r3, #16711680
 9004 0078 020853E3 		cmp	r3, #131072
 9005 007c 0100001A 		bne	.L576
 9006              		.loc 1 4258 5 discriminator 5
 9007 0080 0830E0E3 		mvn	r3, #8
 9008              		.loc 1 4258 5
 9009 0084 8F0000EA 		b	.L575
 9010              	.L576:
 9011              		.loc 1 4258 5 discriminator 6
 9012 0088 0C301BE5 		ldr	r3, [fp, #-12]
 9013 008c 233CA0E1 		lsr	r3, r3, #24
 9014 0090 030053E3 		cmp	r3, #3
 9015 0094 3F00000A 		beq	.L577
 9016              		.loc 1 4258 5 discriminator 7
 9017 0098 0130E0E3 		mvn	r3, #1
 9018              		.loc 1 4258 5
 9019 009c 890000EA 		b	.L575
 9020              	.L573:
 9021              		.loc 1 4258 5 discriminator 2
 9022 00a0 24301BE5 		ldr	r3, [fp, #-36]
 9023 00a4 2324A0E1 		lsr	r2, r3, #8
 9024 00a8 20301BE5 		ldr	r3, [fp, #-32]
 9025 00ac 143093E5 		ldr	r3, [r3, #20]
 9026 00b0 030052E1 		cmp	r2, r3
 9027 00b4 0100003A 		bcc	.L578
 9028              		.loc 1 4258 5 discriminator 8
 9029 00b8 0230E0E3 		mvn	r3, #2
 9030              		.loc 1 4258 5
 9031 00bc 810000EA 		b	.L575
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 235


 9032              	.L578:
 9033              		.loc 1 4258 5 discriminator 9
 9034 00c0 24301BE5 		ldr	r3, [fp, #-36]
 9035 00c4 2334A0E1 		lsr	r3, r3, #8
 9036 00c8 8322A0E1 		lsl	r2, r3, #5
 9037 00cc 20301BE5 		ldr	r3, [fp, #-32]
 9038 00d0 0C3093E5 		ldr	r3, [r3, #12]
 9039 00d4 033082E0 		add	r3, r2, r3
 9040 00d8 08300BE5 		str	r3, [fp, #-8]
 9041 00dc 08301BE5 		ldr	r3, [fp, #-8]
 9042 00e0 0300A0E1 		mov	r0, r3
 9043 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9044 00e8 0C000BE5 		str	r0, [fp, #-12]
 9045              		.loc 1 4258 5 discriminator 1
 9046 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 9047 00f0 FF3803E2 		and	r3, r3, #16711680
 9048 00f4 020853E3 		cmp	r3, #131072
 9049 00f8 0100001A 		bne	.L579
 9050              		.loc 1 4258 5 discriminator 10
 9051 00fc 0830E0E3 		mvn	r3, #8
 9052              		.loc 1 4258 5
 9053 0100 700000EA 		b	.L575
 9054              	.L579:
 9055              		.loc 1 4258 5 discriminator 11
 9056 0104 0C301BE5 		ldr	r3, [fp, #-12]
 9057 0108 233CA0E1 		lsr	r3, r3, #24
 9058 010c 030053E3 		cmp	r3, #3
 9059 0110 0100000A 		beq	.L580
 9060              		.loc 1 4258 5 discriminator 12
 9061 0114 0130E0E3 		mvn	r3, #1
 9062              		.loc 1 4258 5
 9063 0118 6A0000EA 		b	.L575
 9064              	.L580:
 9065              		.loc 1 4258 5 discriminator 13
 9066 011c 24301BE5 		ldr	r3, [fp, #-36]
 9067 0120 7F2003E2 		and	r2, r3, #127
 9068 0124 08301BE5 		ldr	r3, [fp, #-8]
 9069 0128 143093E5 		ldr	r3, [r3, #20]
 9070 012c 030052E1 		cmp	r2, r3
 9071 0130 0100003A 		bcc	.L581
 9072              		.loc 1 4258 5 discriminator 14
 9073 0134 0230E0E3 		mvn	r3, #2
 9074              		.loc 1 4258 5
 9075 0138 620000EA 		b	.L575
 9076              	.L581:
 9077              		.loc 1 4258 5 discriminator 15
 9078 013c 24301BE5 		ldr	r3, [fp, #-36]
 9079 0140 7F3003E2 		and	r3, r3, #127
 9080 0144 8322A0E1 		lsl	r2, r3, #5
 9081 0148 08301BE5 		ldr	r3, [fp, #-8]
 9082 014c 0C3093E5 		ldr	r3, [r3, #12]
 9083 0150 033082E0 		add	r3, r2, r3
 9084 0154 08300BE5 		str	r3, [fp, #-8]
 9085 0158 08301BE5 		ldr	r3, [fp, #-8]
 9086 015c 0300A0E1 		mov	r0, r3
 9087 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9088 0164 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 236


 9089              		.loc 1 4258 5 discriminator 1
 9090 0168 0C301BE5 		ldr	r3, [fp, #-12]
 9091 016c FF3803E2 		and	r3, r3, #16711680
 9092 0170 020853E3 		cmp	r3, #131072
 9093 0174 0100001A 		bne	.L582
 9094              		.loc 1 4258 5 discriminator 16
 9095 0178 0830E0E3 		mvn	r3, #8
 9096              		.loc 1 4258 5
 9097 017c 510000EA 		b	.L575
 9098              	.L582:
 9099              		.loc 1 4258 5 discriminator 17
 9100 0180 0C301BE5 		ldr	r3, [fp, #-12]
 9101 0184 233CA0E1 		lsr	r3, r3, #24
 9102 0188 030053E3 		cmp	r3, #3
 9103 018c 0100000A 		beq	.L577
 9104              		.loc 1 4258 5 discriminator 18
 9105 0190 0130E0E3 		mvn	r3, #1
 9106              		.loc 1 4258 5
 9107 0194 4B0000EA 		b	.L575
 9108              	.L577:
4259:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4260:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4261:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 9109              		.loc 1 4261 5 is_stmt 1
 9110 0198 08301BE5 		ldr	r3, [fp, #-8]
 9111 019c 083093E5 		ldr	r3, [r3, #8]
 9112 01a0 013003E2 		and	r3, r3, #1
 9113 01a4 000053E3 		cmp	r3, #0
 9114 01a8 0100001A 		bne	.L583
 9115              		.loc 1 4261 5 is_stmt 0 discriminator 1
 9116 01ac 0630E0E3 		mvn	r3, #6
 9117              		.loc 1 4261 5
 9118 01b0 440000EA 		b	.L575
 9119              	.L583:
4262:../../Source/Kernel/rme_kernel.c **** 
4263:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4264:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kom,struct RME_Cap_Kom*,Kom_Crt);
 9120              		.loc 1 4264 5 is_stmt 1
 9121 01b4 08301BE5 		ldr	r3, [fp, #-8]
 9122 01b8 142093E5 		ldr	r2, [r3, #20]
 9123 01bc 28301BE5 		ldr	r3, [fp, #-40]
 9124 01c0 030052E1 		cmp	r2, r3
 9125 01c4 0100008A 		bhi	.L584
 9126              		.loc 1 4264 5 is_stmt 0 discriminator 1
 9127 01c8 0230E0E3 		mvn	r3, #2
 9128              		.loc 1 4264 5
 9129 01cc 3D0000EA 		b	.L575
 9130              	.L584:
 9131              		.loc 1 4264 5 discriminator 2
 9132 01d0 28301BE5 		ldr	r3, [fp, #-40]
 9133 01d4 8322A0E1 		lsl	r2, r3, #5
 9134 01d8 08301BE5 		ldr	r3, [fp, #-8]
 9135 01dc 0C3093E5 		ldr	r3, [r3, #12]
 9136 01e0 033082E0 		add	r3, r2, r3
 9137 01e4 10300BE5 		str	r3, [fp, #-16]
4265:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4266:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kom_Crt);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 237


 9138              		.loc 1 4266 5 is_stmt 1
 9139 01e8 10301BE5 		ldr	r3, [fp, #-16]
 9140 01ec 0128A0E3 		mov	r2, #65536
 9141 01f0 0010A0E3 		mov	r1, #0
 9142 01f4 0300A0E1 		mov	r0, r3
 9143 01f8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 9144 01fc 0030A0E1 		mov	r3, r0
 9145              		.loc 1 4266 5 is_stmt 0 discriminator 1
 9146 0200 000053E3 		cmp	r3, #0
 9147 0204 0100001A 		bne	.L585
 9148 0208 0430E0E3 		mvn	r3, #4
 9149              		.loc 1 4266 5
 9150 020c 2D0000EA 		b	.L575
 9151              	.L585:
 9152              		.loc 1 4266 5 discriminator 2
 9153 0210 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 9154 0214 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 9155 0218 002093E5 		ldr	r2, [r3]
 9156 021c 10301BE5 		ldr	r3, [fp, #-16]
 9157 0220 102083E5 		str	r2, [r3, #16]
4267:../../Source/Kernel/rme_kernel.c ****     
4268:../../Source/Kernel/rme_kernel.c ****     /* Align addresses */
4269:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
4270:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,RME_KOM_SLOT_ORDER);
4271:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Start,RME_KOM_SLOT_ORDER);
4272:../../Source/Kernel/rme_kernel.c **** #else
4273:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,6U);
 9158              		.loc 1 4273 13 is_stmt 1
 9159 0224 04309BE5 		ldr	r3, [fp, #4]
 9160 0228 013083E2 		add	r3, r3, #1
 9161              		.loc 1 4273 12
 9162 022c 3F30C3E3 		bic	r3, r3, #63
 9163 0230 14300BE5 		str	r3, [fp, #-20]
4274:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Begin,6U);
 9164              		.loc 1 4274 15
 9165 0234 2C301BE5 		ldr	r3, [fp, #-44]
 9166 0238 3F3083E2 		add	r3, r3, #63
 9167              		.loc 1 4274 14
 9168 023c 3F30C3E3 		bic	r3, r3, #63
 9169 0240 18300BE5 		str	r3, [fp, #-24]
4275:../../Source/Kernel/rme_kernel.c **** #endif
4276:../../Source/Kernel/rme_kernel.c **** 
4277:../../Source/Kernel/rme_kernel.c ****     /* Must at least allow creation of something */
4278:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Flag!=0U);
 9170              		.loc 1 4278 5
 9171 0244 08309BE5 		ldr	r3, [fp, #8]
 9172 0248 000053E3 		cmp	r3, #0
 9173 024c 0800001A 		bne	.L586
 9174              		.loc 1 4278 5 is_stmt 0 discriminator 1
 9175 0250 003000E3 		movw	r3, #:lower16:.LC6
 9176 0254 003040E3 		movt	r3, #:upper16:.LC6
 9177 0258 002000E3 		movw	r2, #:lower16:.LC7
 9178 025c 002040E3 		movt	r2, #:upper16:.LC7
 9179 0260 B61001E3 		movw	r1, #4278
 9180 0264 000000E3 		movw	r0, #:lower16:.LC8
 9181 0268 000040E3 		movt	r0, #:upper16:.LC8
 9182 026c FEFFFFEB 		bl	RME_Log
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 238


 9183              	.L587:
 9184              		.loc 1 4278 5
 9185 0270 FEFFFFEA 		b	.L587
 9186              	.L586:
4279:../../Source/Kernel/rme_kernel.c **** 
4280:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4281:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Root_Ref=1U;
 9187              		.loc 1 4281 27 is_stmt 1
 9188 0274 10301BE5 		ldr	r3, [fp, #-16]
 9189 0278 0120A0E3 		mov	r2, #1
 9190 027c 042083E5 		str	r2, [r3, #4]
4282:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Object=0U;
 9191              		.loc 1 4282 25
 9192 0280 10301BE5 		ldr	r3, [fp, #-16]
 9193 0284 0020A0E3 		mov	r2, #0
 9194 0288 0C2083E5 		str	r2, [r3, #12]
4283:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Flag=Flag;
 9195              		.loc 1 4283 23
 9196 028c 10301BE5 		ldr	r3, [fp, #-16]
 9197 0290 08209BE5 		ldr	r2, [fp, #8]
 9198 0294 082083E5 		str	r2, [r3, #8]
4284:../../Source/Kernel/rme_kernel.c ****     
4285:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4286:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Begin=Kom_Begin;
 9199              		.loc 1 4286 19
 9200 0298 10301BE5 		ldr	r3, [fp, #-16]
 9201 029c 18201BE5 		ldr	r2, [fp, #-24]
 9202 02a0 142083E5 		str	r2, [r3, #20]
4287:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->End=Kom_End-1U;
 9203              		.loc 1 4287 25
 9204 02a4 14301BE5 		ldr	r3, [fp, #-20]
 9205 02a8 012043E2 		sub	r2, r3, #1
 9206              		.loc 1 4287 17
 9207 02ac 10301BE5 		ldr	r3, [fp, #-16]
 9208 02b0 182083E5 		str	r2, [r3, #24]
4288:../../Source/Kernel/rme_kernel.c **** 
4289:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4290:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kom_Crt->Head.Type_Stat),
 9209              		.loc 1 4290 5
 9210 02b4 10301BE5 		ldr	r3, [fp, #-16]
 9211 02b8 0214A0E3 		mov	r1, #33554432
 9212 02bc 0300A0E1 		mov	r0, r3
 9213 02c0 FEFFFFEB 		bl	__RME_A7A_Write_Release
4291:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KOM,
4292:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4293:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4294:../../Source/Kernel/rme_kernel.c **** 
4295:../../Source/Kernel/rme_kernel.c ****     return 0;
 9214              		.loc 1 4295 12
 9215 02c4 0030A0E3 		mov	r3, #0
 9216              	.L575:
4296:../../Source/Kernel/rme_kernel.c **** }
 9217              		.loc 1 4296 1
 9218 02c8 0300A0E1 		mov	r0, r3
 9219 02cc 04D04BE2 		sub	sp, fp, #4
 9220              		.cfi_def_cfa 13, 8
 9221              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 239


 9222 02d0 0088BDE8 		pop	{fp, pc}
 9223              		.cfi_endproc
 9224              	.LFE41:
 9226              		.section	.text._RME_CPU_Local_Init,"ax",%progbits
 9227              		.align	2
 9228              		.global	_RME_CPU_Local_Init
 9229              		.syntax unified
 9230              		.arm
 9232              	_RME_CPU_Local_Init:
 9233              	.LFB42:
4297:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kom_Boot_Crt ********************************************/
4298:../../Source/Kernel/rme_kernel.c **** 
4299:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_CPU_Local_Init ***********************************************
4300:../../Source/Kernel/rme_kernel.c **** Description : Initialize the CPU-local data structure.
4301:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The pointer to the per-CPU values.
4302:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The CPUID of the CPU.
4303:../../Source/Kernel/rme_kernel.c **** Output      : None.
4304:../../Source/Kernel/rme_kernel.c **** Return      : None.
4305:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4306:../../Source/Kernel/rme_kernel.c **** void _RME_CPU_Local_Init(struct RME_CPU_Local* Local,
4307:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t CPUID)
4308:../../Source/Kernel/rme_kernel.c **** {
 9234              		.loc 1 4308 1
 9235              		.cfi_startproc
 9236              		@ args = 0, pretend = 0, frame = 16
 9237              		@ frame_needed = 1, uses_anonymous_args = 0
 9238 0000 00482DE9 		push	{fp, lr}
 9239              		.cfi_def_cfa_offset 8
 9240              		.cfi_offset 11, -8
 9241              		.cfi_offset 14, -4
 9242 0004 04B08DE2 		add	fp, sp, #4
 9243              		.cfi_def_cfa 11, 4
 9244 0008 10D04DE2 		sub	sp, sp, #16
 9245 000c 10000BE5 		str	r0, [fp, #-16]
 9246 0010 14100BE5 		str	r1, [fp, #-20]
4309:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio_Cnt;
4310:../../Source/Kernel/rme_kernel.c ****     
4311:../../Source/Kernel/rme_kernel.c ****     Local->CPUID=CPUID;
 9247              		.loc 1 4311 17
 9248 0014 10301BE5 		ldr	r3, [fp, #-16]
 9249 0018 14201BE5 		ldr	r2, [fp, #-20]
 9250 001c 002083E5 		str	r2, [r3]
4312:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=RME_NULL;
 9251              		.loc 1 4312 19
 9252 0020 10301BE5 		ldr	r3, [fp, #-16]
 9253 0024 0020A0E3 		mov	r2, #0
 9254 0028 042083E5 		str	r2, [r3, #4]
4313:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Vct=RME_NULL;
 9255              		.loc 1 4313 19
 9256 002c 10301BE5 		ldr	r3, [fp, #-16]
 9257 0030 0020A0E3 		mov	r2, #0
 9258 0034 0C2083E5 		str	r2, [r3, #12]
4314:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Tim=RME_NULL;
 9259              		.loc 1 4314 19
 9260 0038 10301BE5 		ldr	r3, [fp, #-16]
 9261 003c 0020A0E3 		mov	r2, #0
 9262 0040 082083E5 		str	r2, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 240


4315:../../Source/Kernel/rme_kernel.c ****     
4316:../../Source/Kernel/rme_kernel.c ****     /* Initialize the run-queue and bitmap */
4317:../../Source/Kernel/rme_kernel.c ****     for(Prio_Cnt=0U;Prio_Cnt<RME_PREEMPT_PRIO_NUM;Prio_Cnt++)
 9263              		.loc 1 4317 17
 9264 0044 0030A0E3 		mov	r3, #0
 9265 0048 08300BE5 		str	r3, [fp, #-8]
 9266              		.loc 1 4317 5
 9267 004c 100000EA 		b	.L589
 9268              	.L590:
4318:../../Source/Kernel/rme_kernel.c ****     {
4319:../../Source/Kernel/rme_kernel.c ****         Local->Run.Bitmap[Prio_Cnt>>RME_WORD_ORDER]=0U;
 9269              		.loc 1 4319 35
 9270 0050 08301BE5 		ldr	r3, [fp, #-8]
 9271 0054 A322A0E1 		lsr	r2, r3, #5
 9272              		.loc 1 4319 52
 9273 0058 10301BE5 		ldr	r3, [fp, #-16]
 9274 005c 042082E2 		add	r2, r2, #4
 9275 0060 0010A0E3 		mov	r1, #0
 9276 0064 021183E7 		str	r1, [r3, r2, lsl #2]
4320:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Local->Run.List[Prio_Cnt]));
 9277              		.loc 1 4320 9
 9278 0068 08301BE5 		ldr	r3, [fp, #-8]
 9279 006c 023083E2 		add	r3, r3, #2
 9280 0070 8331A0E1 		lsl	r3, r3, #3
 9281 0074 10201BE5 		ldr	r2, [fp, #-16]
 9282 0078 033082E0 		add	r3, r2, r3
 9283 007c 043083E2 		add	r3, r3, #4
 9284 0080 0300A0E1 		mov	r0, r3
 9285 0084 FEFFFFEB 		bl	_RME_List_Crt
4317:../../Source/Kernel/rme_kernel.c ****     {
 9286              		.loc 1 4317 59 discriminator 3
 9287 0088 08301BE5 		ldr	r3, [fp, #-8]
 9288 008c 013083E2 		add	r3, r3, #1
 9289 0090 08300BE5 		str	r3, [fp, #-8]
 9290              	.L589:
4317:../../Source/Kernel/rme_kernel.c ****     {
 9291              		.loc 1 4317 29 discriminator 1
 9292 0094 08301BE5 		ldr	r3, [fp, #-8]
 9293 0098 1F0053E3 		cmp	r3, #31
 9294 009c EBFFFF9A 		bls	.L590
4321:../../Source/Kernel/rme_kernel.c ****     }
4322:../../Source/Kernel/rme_kernel.c **** }
 9295              		.loc 1 4322 1
 9296 00a0 00F020E3 		nop
 9297 00a4 00F020E3 		nop
 9298 00a8 04D04BE2 		sub	sp, fp, #4
 9299              		.cfi_def_cfa 13, 8
 9300              		@ sp needed
 9301 00ac 0088BDE8 		pop	{fp, pc}
 9302              		.cfi_endproc
 9303              	.LFE42:
 9305              		.section	.rodata
 9306 00d7 00       		.align	2
 9307              	.LC11:
 9308 00d8 41747465 		.ascii	"Attempted to kill init thread.\000"
 9308      6D707465 
 9308      6420746F 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 241


 9308      206B696C 
 9308      6C20696E 
 9309              		.section	.text._RME_Thd_Fatal,"ax",%progbits
 9310              		.align	2
 9311              		.global	_RME_Thd_Fatal
 9312              		.syntax unified
 9313              		.arm
 9315              	_RME_Thd_Fatal:
 9316              	.LFB43:
4323:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_CPU_Local_Init ******************************************/
4324:../../Source/Kernel/rme_kernel.c **** 
4325:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Fatal ***************************************************
4326:../../Source/Kernel/rme_kernel.c **** Description : The fatal fault handler of RME. This handler will be called by
4327:../../Source/Kernel/rme_kernel.c ****               the ISR that handles the exceptions. This indicates that a fatal
4328:../../Source/Kernel/rme_kernel.c ****               exception has happened and we need to see if this thread is in a
4329:../../Source/Kernel/rme_kernel.c ****               synchronous invocation. If yes, we stop the invocation, and
4330:../../Source/Kernel/rme_kernel.c ****               possibly return a fault value to the old register set. If not, we
4331:../../Source/Kernel/rme_kernel.c ****               just kill the thread. If the thread is killed, a notification
4332:../../Source/Kernel/rme_kernel.c ****               will be sent to its scheduler. An Exec_Set is required to clear
4333:../../Source/Kernel/rme_kernel.c ****               the exception pending status of the thread.
4334:../../Source/Kernel/rme_kernel.c ****               Some processors may raise some exceptions that are difficult to
4335:../../Source/Kernel/rme_kernel.c ****               attribute to a particular thread, either due to the fact that
4336:../../Source/Kernel/rme_kernel.c ****               they are asynchronous, or they are derived from exception entry.
4337:../../Source/Kernel/rme_kernel.c ****               A good example is ARMv7-M: its autostacking feature derives fault
4338:../../Source/Kernel/rme_kernel.c ****               from exception entry, and some of its bus faults are asynchronous
4339:../../Source/Kernel/rme_kernel.c ****               and can cross context boundaries. RME requires that all these
4340:../../Source/Kernel/rme_kernel.c ****               exceptions be dropped rather than handled; or there will be 
4341:../../Source/Kernel/rme_kernel.c ****               integrity and availability compromises.
4342:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4343:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
4344:../../Source/Kernel/rme_kernel.c **** Return      : None.
4345:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4346:../../Source/Kernel/rme_kernel.c **** void _RME_Thd_Fatal(struct RME_Reg_Struct* Reg)
4347:../../Source/Kernel/rme_kernel.c **** {
 9317              		.loc 1 4347 1
 9318              		.cfi_startproc
 9319              		@ args = 0, pretend = 0, frame = 16
 9320              		@ frame_needed = 1, uses_anonymous_args = 0
 9321 0000 00482DE9 		push	{fp, lr}
 9322              		.cfi_def_cfa_offset 8
 9323              		.cfi_offset 11, -8
 9324              		.cfi_offset 14, -4
 9325 0004 04B08DE2 		add	fp, sp, #4
 9326              		.cfi_def_cfa 11, 4
 9327 0008 10D04DE2 		sub	sp, sp, #16
 9328 000c 10000BE5 		str	r0, [fp, #-16]
4348:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4349:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
4350:../../Source/Kernel/rme_kernel.c ****     
4351:../../Source/Kernel/rme_kernel.c ****     /* Attempt to return from the invocation, from fault */
4352:../../Source/Kernel/rme_kernel.c ****     if(_RME_Inv_Ret(Reg,0U,1U)!=0)
 9329              		.loc 1 4352 8
 9330 0010 0120A0E3 		mov	r2, #1
 9331 0014 0010A0E3 		mov	r1, #0
 9332 0018 10001BE5 		ldr	r0, [fp, #-16]
 9333 001c FEFFFFEB 		bl	_RME_Inv_Ret
 9334 0020 0030A0E1 		mov	r3, r0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 242


 9335              		.loc 1 4352 7 discriminator 1
 9336 0024 000053E3 		cmp	r3, #0
 9337 0028 2C00000A 		beq	.L597
4353:../../Source/Kernel/rme_kernel.c ****     {
4354:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4355:../../Source/Kernel/rme_kernel.c **** 
4356:../../Source/Kernel/rme_kernel.c ****         /* Return failure - report the exception */
4357:../../Source/Kernel/rme_kernel.c ****         Local=RME_CPU_LOCAL();
 9338              		.loc 1 4357 14
 9339 002c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 9340 0030 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 9341 0034 08300BE5 		str	r3, [fp, #-8]
4358:../../Source/Kernel/rme_kernel.c ****         Thd_Cur=Local->Thd_Cur;
 9342              		.loc 1 4358 16
 9343 0038 08301BE5 		ldr	r3, [fp, #-8]
 9344 003c 043093E5 		ldr	r3, [r3, #4]
 9345 0040 0C300BE5 		str	r3, [fp, #-12]
4359:../../Source/Kernel/rme_kernel.c ****         
4360:../../Source/Kernel/rme_kernel.c ****         /* Init thread shall never have exceptions */
4361:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 9346              		.loc 1 4361 26
 9347 0044 0C301BE5 		ldr	r3, [fp, #-12]
 9348 0048 183093E5 		ldr	r3, [r3, #24]
 9349              		.loc 1 4361 11
 9350 004c 060173E3 		cmn	r3, #-2147483647
 9351 0050 0B00001A 		bne	.L593
4362:../../Source/Kernel/rme_kernel.c ****         {
4363:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4364:../../Source/Kernel/rme_kernel.c ****             
4365:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("Attempted to kill init thread.");
 9352              		.loc 1 4365 13
 9353 0054 000000E3 		movw	r0, #:lower16:.LC11
 9354 0058 000040E3 		movt	r0, #:upper16:.LC11
 9355 005c FEFFFFEB 		bl	RME_Str_Print
4366:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(0U);
 9356              		.loc 1 4366 13 discriminator 1
 9357 0060 003000E3 		movw	r3, #:lower16:.LC6
 9358 0064 003040E3 		movt	r3, #:upper16:.LC6
 9359 0068 002000E3 		movw	r2, #:lower16:.LC7
 9360 006c 002040E3 		movt	r2, #:upper16:.LC7
 9361 0070 0E1101E3 		movw	r1, #4366
 9362 0074 000000E3 		movw	r0, #:lower16:.LC8
 9363 0078 000040E3 		movt	r0, #:upper16:.LC8
 9364 007c FEFFFFEB 		bl	RME_Log
 9365              	.L594:
 9366              		.loc 1 4366 13 is_stmt 0
 9367 0080 FEFFFFEA 		b	.L594
 9368              	.L593:
4367:../../Source/Kernel/rme_kernel.c ****         }
4368:../../Source/Kernel/rme_kernel.c ****         else
4369:../../Source/Kernel/rme_kernel.c ****         {
4370:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4371:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4372:../../Source/Kernel/rme_kernel.c ****         }
4373:../../Source/Kernel/rme_kernel.c ****         
4374:../../Source/Kernel/rme_kernel.c ****         /* We must be running at this point to trigger a synchronous exception */
4375:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 243


 9369              		.loc 1 4375 9 is_stmt 1
 9370 0084 0C301BE5 		ldr	r3, [fp, #-12]
 9371 0088 1C3093E5 		ldr	r3, [r3, #28]
 9372 008c 000053E3 		cmp	r3, #0
 9373 0090 0800000A 		beq	.L595
 9374              		.loc 1 4375 9 is_stmt 0 discriminator 1
 9375 0094 003000E3 		movw	r3, #:lower16:.LC6
 9376 0098 003040E3 		movt	r3, #:upper16:.LC6
 9377 009c 002000E3 		movw	r2, #:lower16:.LC7
 9378 00a0 002040E3 		movt	r2, #:upper16:.LC7
 9379 00a4 171101E3 		movw	r1, #4375
 9380 00a8 000000E3 		movw	r0, #:lower16:.LC8
 9381 00ac 000040E3 		movt	r0, #:upper16:.LC8
 9382 00b0 FEFFFFEB 		bl	RME_Log
 9383              	.L596:
 9384              		.loc 1 4375 9
 9385 00b4 FEFFFFEA 		b	.L596
 9386              	.L595:
4376:../../Source/Kernel/rme_kernel.c ****         
4377:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue */
4378:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thd_Cur);
 9387              		.loc 1 4378 9 is_stmt 1
 9388 00b8 0C001BE5 		ldr	r0, [fp, #-12]
 9389 00bc FEFFFFEB 		bl	_RME_Run_Del
4379:../../Source/Kernel/rme_kernel.c ****         
4380:../../Source/Kernel/rme_kernel.c ****         /* Exception pending and notify parent */
4381:../../Source/Kernel/rme_kernel.c ****         Thd_Cur->Sched.State=RME_THD_EXCPEND;
 9390              		.loc 1 4381 29
 9391 00c0 0C301BE5 		ldr	r3, [fp, #-12]
 9392 00c4 0320A0E3 		mov	r2, #3
 9393 00c8 1C2083E5 		str	r2, [r3, #28]
4382:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Notif(Thd_Cur);
 9394              		.loc 1 4382 9
 9395 00cc 0C001BE5 		ldr	r0, [fp, #-12]
 9396 00d0 FEFFFFEB 		bl	_RME_Run_Notif
4383:../../Source/Kernel/rme_kernel.c ****         
4384:../../Source/Kernel/rme_kernel.c ****         /* All kernel send complete, now pick the highest priority thread to run */
4385:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 9397              		.loc 1 4385 9
 9398 00d4 08101BE5 		ldr	r1, [fp, #-8]
 9399 00d8 10001BE5 		ldr	r0, [fp, #-16]
 9400 00dc FEFFFFEB 		bl	_RME_Kern_High
 9401              	.L597:
4386:../../Source/Kernel/rme_kernel.c ****     }
4387:../../Source/Kernel/rme_kernel.c ****     else
4388:../../Source/Kernel/rme_kernel.c ****     {
4389:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4390:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4391:../../Source/Kernel/rme_kernel.c ****     }
4392:../../Source/Kernel/rme_kernel.c **** }
 9402              		.loc 1 4392 1
 9403 00e0 00F020E3 		nop
 9404 00e4 04D04BE2 		sub	sp, fp, #4
 9405              		.cfi_def_cfa 13, 8
 9406              		@ sp needed
 9407 00e8 0088BDE8 		pop	{fp, pc}
 9408              		.cfi_endproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 244


 9409              	.LFE43:
 9411              		.section	.text._RME_Run_Ins,"ax",%progbits
 9412              		.align	2
 9413              		.syntax unified
 9414              		.arm
 9416              	_RME_Run_Ins:
 9417              	.LFB44:
4393:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Fatal ***********************************************/
4394:../../Source/Kernel/rme_kernel.c **** 
4395:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Ins ******************************************************
4396:../../Source/Kernel/rme_kernel.c **** Description : Insert a thread into the runqueue. In this function we do not
4397:../../Source/Kernel/rme_kernel.c ****               check if the thread is on the current core, or is runnable,
4398:../../Source/Kernel/rme_kernel.c ****               because it should have been checked by someone else.
4399:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to insert.
4400:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The cpu to consult.
4401:../../Source/Kernel/rme_kernel.c **** Output      : None.
4402:../../Source/Kernel/rme_kernel.c **** Return      : None.
4403:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4404:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Ins(struct RME_Thd_Struct* Thd)
4405:../../Source/Kernel/rme_kernel.c **** {
 9418              		.loc 1 4405 1
 9419              		.cfi_startproc
 9420              		@ args = 0, pretend = 0, frame = 16
 9421              		@ frame_needed = 1, uses_anonymous_args = 0
 9422 0000 00482DE9 		push	{fp, lr}
 9423              		.cfi_def_cfa_offset 8
 9424              		.cfi_offset 11, -8
 9425              		.cfi_offset 14, -4
 9426 0004 04B08DE2 		add	fp, sp, #4
 9427              		.cfi_def_cfa 11, 4
 9428 0008 10D04DE2 		sub	sp, sp, #16
 9429 000c 10000BE5 		str	r0, [fp, #-16]
4406:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4407:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4408:../../Source/Kernel/rme_kernel.c ****     
4409:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9430              		.loc 1 4409 9
 9431 0010 10301BE5 		ldr	r3, [fp, #-16]
 9432 0014 203093E5 		ldr	r3, [r3, #32]
 9433 0018 08300BE5 		str	r3, [fp, #-8]
4410:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9434              		.loc 1 4410 10
 9435 001c 10301BE5 		ldr	r3, [fp, #-16]
 9436 0020 143093E5 		ldr	r3, [r3, #20]
 9437 0024 0C300BE5 		str	r3, [fp, #-12]
4411:../../Source/Kernel/rme_kernel.c ****     
4412:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4413:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9438              		.loc 1 4413 5
 9439 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9440 002c 010073E3 		cmn	r3, #1
 9441 0030 0800001A 		bne	.L599
 9442              		.loc 1 4413 5 is_stmt 0 discriminator 1
 9443 0034 003000E3 		movw	r3, #:lower16:.LC6
 9444 0038 003040E3 		movt	r3, #:upper16:.LC6
 9445 003c 002000E3 		movw	r2, #:lower16:.LC7
 9446 0040 002040E3 		movt	r2, #:upper16:.LC7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 245


 9447 0044 3D1101E3 		movw	r1, #4413
 9448 0048 000000E3 		movw	r0, #:lower16:.LC8
 9449 004c 000040E3 		movt	r0, #:upper16:.LC8
 9450 0050 FEFFFFEB 		bl	RME_Log
 9451              	.L600:
 9452              		.loc 1 4413 5
 9453 0054 FEFFFFEA 		b	.L600
 9454              	.L599:
4414:../../Source/Kernel/rme_kernel.c ****     
4415:../../Source/Kernel/rme_kernel.c ****     /* Insert this thread into the runqueue */
4416:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Thd->Sched.Run),
 9455              		.loc 1 4416 5 is_stmt 1
 9456 0058 10001BE5 		ldr	r0, [fp, #-16]
 9457 005c 0C201BE5 		ldr	r2, [fp, #-12]
 9458 0060 08301BE5 		ldr	r3, [fp, #-8]
 9459 0064 023083E2 		add	r3, r3, #2
 9460 0068 8331A0E1 		lsl	r3, r3, #3
 9461 006c 033082E0 		add	r3, r2, r3
 9462 0070 081093E5 		ldr	r1, [r3, #8]
 9463 0074 08301BE5 		ldr	r3, [fp, #-8]
 9464 0078 023083E2 		add	r3, r3, #2
 9465 007c 8331A0E1 		lsl	r3, r3, #3
 9466 0080 0C201BE5 		ldr	r2, [fp, #-12]
 9467 0084 033082E0 		add	r3, r2, r3
 9468 0088 043083E2 		add	r3, r3, #4
 9469 008c 0320A0E1 		mov	r2, r3
 9470 0090 FEFFFFEB 		bl	_RME_List_Ins
4417:../../Source/Kernel/rme_kernel.c ****                   Local->Run.List[Prio].Prev,
4418:../../Source/Kernel/rme_kernel.c ****                   &(Local->Run.List[Prio]));
4419:../../Source/Kernel/rme_kernel.c ****     
4420:../../Source/Kernel/rme_kernel.c ****     /* Set the bit in the bitmap */
4421:../../Source/Kernel/rme_kernel.c ****     RME_BITMAP_SET(Local->Run.Bitmap,Prio);
 9471              		.loc 1 4421 5
 9472 0094 08301BE5 		ldr	r3, [fp, #-8]
 9473 0098 A322A0E1 		lsr	r2, r3, #5
 9474 009c 0C301BE5 		ldr	r3, [fp, #-12]
 9475 00a0 042082E2 		add	r2, r2, #4
 9476 00a4 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9477 00a8 08301BE5 		ldr	r3, [fp, #-8]
 9478 00ac 1F3003E2 		and	r3, r3, #31
 9479 00b0 0120A0E3 		mov	r2, #1
 9480 00b4 1233A0E1 		lsl	r3, r2, r3
 9481 00b8 08201BE5 		ldr	r2, [fp, #-8]
 9482 00bc A222A0E1 		lsr	r2, r2, #5
 9483 00c0 031081E1 		orr	r1, r1, r3
 9484 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 9485 00c8 042082E2 		add	r2, r2, #4
 9486 00cc 021183E7 		str	r1, [r3, r2, lsl #2]
4422:../../Source/Kernel/rme_kernel.c **** }
 9487              		.loc 1 4422 1
 9488 00d0 00F020E3 		nop
 9489 00d4 04D04BE2 		sub	sp, fp, #4
 9490              		.cfi_def_cfa 13, 8
 9491              		@ sp needed
 9492 00d8 0088BDE8 		pop	{fp, pc}
 9493              		.cfi_endproc
 9494              	.LFE44:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 246


 9496              		.section	.text._RME_Run_Del,"ax",%progbits
 9497              		.align	2
 9498              		.syntax unified
 9499              		.arm
 9501              	_RME_Run_Del:
 9502              	.LFB45:
4423:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Ins *************************************************/
4424:../../Source/Kernel/rme_kernel.c **** 
4425:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Del ******************************************************
4426:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread from the runqueue.
4427:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to delete.
4428:../../Source/Kernel/rme_kernel.c **** Output      : None.
4429:../../Source/Kernel/rme_kernel.c **** Return      : None.
4430:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4431:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Del(struct RME_Thd_Struct* Thd)
4432:../../Source/Kernel/rme_kernel.c **** {
 9503              		.loc 1 4432 1
 9504              		.cfi_startproc
 9505              		@ args = 0, pretend = 0, frame = 16
 9506              		@ frame_needed = 1, uses_anonymous_args = 0
 9507 0000 00482DE9 		push	{fp, lr}
 9508              		.cfi_def_cfa_offset 8
 9509              		.cfi_offset 11, -8
 9510              		.cfi_offset 14, -4
 9511 0004 04B08DE2 		add	fp, sp, #4
 9512              		.cfi_def_cfa 11, 4
 9513 0008 10D04DE2 		sub	sp, sp, #16
 9514 000c 10000BE5 		str	r0, [fp, #-16]
4433:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4434:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4435:../../Source/Kernel/rme_kernel.c ****     
4436:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9515              		.loc 1 4436 9
 9516 0010 10301BE5 		ldr	r3, [fp, #-16]
 9517 0014 203093E5 		ldr	r3, [r3, #32]
 9518 0018 08300BE5 		str	r3, [fp, #-8]
4437:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9519              		.loc 1 4437 10
 9520 001c 10301BE5 		ldr	r3, [fp, #-16]
 9521 0020 143093E5 		ldr	r3, [r3, #20]
 9522 0024 0C300BE5 		str	r3, [fp, #-12]
4438:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4439:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9523              		.loc 1 4439 5
 9524 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9525 002c 010073E3 		cmn	r3, #1
 9526 0030 0800001A 		bne	.L602
 9527              		.loc 1 4439 5 is_stmt 0 discriminator 1
 9528 0034 003000E3 		movw	r3, #:lower16:.LC6
 9529 0038 003040E3 		movt	r3, #:upper16:.LC6
 9530 003c 002000E3 		movw	r2, #:lower16:.LC7
 9531 0040 002040E3 		movt	r2, #:upper16:.LC7
 9532 0044 571101E3 		movw	r1, #4439
 9533 0048 000000E3 		movw	r0, #:lower16:.LC8
 9534 004c 000040E3 		movt	r0, #:upper16:.LC8
 9535 0050 FEFFFFEB 		bl	RME_Log
 9536              	.L603:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 247


 9537              		.loc 1 4439 5
 9538 0054 FEFFFFEA 		b	.L603
 9539              	.L602:
4440:../../Source/Kernel/rme_kernel.c ****     
4441:../../Source/Kernel/rme_kernel.c ****     /* Delete this thread from the runqueue */
4442:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thd->Sched.Run.Prev,Thd->Sched.Run.Next);
 9540              		.loc 1 4442 5 is_stmt 1
 9541 0058 10301BE5 		ldr	r3, [fp, #-16]
 9542 005c 042093E5 		ldr	r2, [r3, #4]
 9543 0060 10301BE5 		ldr	r3, [fp, #-16]
 9544 0064 003093E5 		ldr	r3, [r3]
 9545 0068 0310A0E1 		mov	r1, r3
 9546 006c 0200A0E1 		mov	r0, r2
 9547 0070 FEFFFFEB 		bl	_RME_List_Del
4443:../../Source/Kernel/rme_kernel.c ****     
4444:../../Source/Kernel/rme_kernel.c ****     /* See if there are any thread on this priority level */
4445:../../Source/Kernel/rme_kernel.c ****     if(Local->Run.List[Prio].Next==&(Local->Run.List[Prio]))
 9548              		.loc 1 4445 29
 9549 0074 0C201BE5 		ldr	r2, [fp, #-12]
 9550 0078 08301BE5 		ldr	r3, [fp, #-8]
 9551 007c 023083E2 		add	r3, r3, #2
 9552 0080 8331A0E1 		lsl	r3, r3, #3
 9553 0084 033082E0 		add	r3, r2, r3
 9554 0088 042093E5 		ldr	r2, [r3, #4]
 9555              		.loc 1 4445 36
 9556 008c 08301BE5 		ldr	r3, [fp, #-8]
 9557 0090 023083E2 		add	r3, r3, #2
 9558 0094 8331A0E1 		lsl	r3, r3, #3
 9559 0098 0C101BE5 		ldr	r1, [fp, #-12]
 9560 009c 033081E0 		add	r3, r1, r3
 9561 00a0 043083E2 		add	r3, r3, #4
 9562              		.loc 1 4445 7
 9563 00a4 030052E1 		cmp	r2, r3
 9564 00a8 0F00001A 		bne	.L605
4446:../../Source/Kernel/rme_kernel.c ****     {
4447:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4448:../../Source/Kernel/rme_kernel.c **** 
4449:../../Source/Kernel/rme_kernel.c ****         /* Nothing running, clear the bit in the bitmap */
4450:../../Source/Kernel/rme_kernel.c ****         RME_BITMAP_CLR(Local->Run.Bitmap,Prio);
 9565              		.loc 1 4450 9
 9566 00ac 08301BE5 		ldr	r3, [fp, #-8]
 9567 00b0 A322A0E1 		lsr	r2, r3, #5
 9568 00b4 0C301BE5 		ldr	r3, [fp, #-12]
 9569 00b8 042082E2 		add	r2, r2, #4
 9570 00bc 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9571 00c0 08301BE5 		ldr	r3, [fp, #-8]
 9572 00c4 1F3003E2 		and	r3, r3, #31
 9573 00c8 0120A0E3 		mov	r2, #1
 9574 00cc 1233A0E1 		lsl	r3, r2, r3
 9575 00d0 0330E0E1 		mvn	r3, r3
 9576 00d4 08201BE5 		ldr	r2, [fp, #-8]
 9577 00d8 A222A0E1 		lsr	r2, r2, #5
 9578 00dc 031001E0 		and	r1, r1, r3
 9579 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 9580 00e4 042082E2 		add	r2, r2, #4
 9581 00e8 021183E7 		str	r1, [r3, r2, lsl #2]
 9582              	.L605:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 248


4451:../../Source/Kernel/rme_kernel.c ****     }
4452:../../Source/Kernel/rme_kernel.c ****     else
4453:../../Source/Kernel/rme_kernel.c ****     {
4454:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4455:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4456:../../Source/Kernel/rme_kernel.c ****     }
4457:../../Source/Kernel/rme_kernel.c **** }
 9583              		.loc 1 4457 1
 9584 00ec 00F020E3 		nop
 9585 00f0 04D04BE2 		sub	sp, fp, #4
 9586              		.cfi_def_cfa 13, 8
 9587              		@ sp needed
 9588 00f4 0088BDE8 		pop	{fp, pc}
 9589              		.cfi_endproc
 9590              	.LFE45:
 9592              		.section	.text._RME_Run_High,"ax",%progbits
 9593              		.align	2
 9594              		.syntax unified
 9595              		.arm
 9597              	_RME_Run_High:
 9598              	.LFB46:
4458:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Del *************************************************/
4459:../../Source/Kernel/rme_kernel.c **** 
4460:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_High *****************************************************
4461:../../Source/Kernel/rme_kernel.c **** Description : Find the thread with the highest priority on the core.
4462:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The CPU-local data structure.
4463:../../Source/Kernel/rme_kernel.c **** Output      : None.
4464:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Thd_Struct* - The thread returned.
4465:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4466:../../Source/Kernel/rme_kernel.c **** static struct RME_Thd_Struct* _RME_Run_High(struct RME_CPU_Local* Local)
4467:../../Source/Kernel/rme_kernel.c **** {
 9599              		.loc 1 4467 1
 9600              		.cfi_startproc
 9601              		@ args = 0, pretend = 0, frame = 16
 9602              		@ frame_needed = 1, uses_anonymous_args = 0
 9603 0000 00482DE9 		push	{fp, lr}
 9604              		.cfi_def_cfa_offset 8
 9605              		.cfi_offset 11, -8
 9606              		.cfi_offset 14, -4
 9607 0004 04B08DE2 		add	fp, sp, #4
 9608              		.cfi_def_cfa 11, 4
 9609 0008 10D04DE2 		sub	sp, sp, #16
 9610 000c 10000BE5 		str	r0, [fp, #-16]
4468:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
4469:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4470:../../Source/Kernel/rme_kernel.c ****     
4471:../../Source/Kernel/rme_kernel.c ****     /* We start looking for preemption priority levels from the highest */
4472:../../Source/Kernel/rme_kernel.c ****     for(Count=(rme_cnt_t)(RME_PRIO_WORD_NUM-1U);Count>=0;Count--)
 9611              		.loc 1 4472 14
 9612 0010 0030A0E3 		mov	r3, #0
 9613 0014 08300BE5 		str	r3, [fp, #-8]
 9614              		.loc 1 4472 5
 9615 0018 080000EA 		b	.L607
 9616              	.L610:
4473:../../Source/Kernel/rme_kernel.c ****     {
4474:../../Source/Kernel/rme_kernel.c ****         if(Local->Run.Bitmap[Count]!=0U)
 9617              		.loc 1 4474 29
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 249


 9618 001c 10301BE5 		ldr	r3, [fp, #-16]
 9619 0020 08201BE5 		ldr	r2, [fp, #-8]
 9620 0024 042082E2 		add	r2, r2, #4
 9621 0028 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9622              		.loc 1 4474 11
 9623 002c 000053E3 		cmp	r3, #0
 9624 0030 0600001A 		bne	.L614
4472:../../Source/Kernel/rme_kernel.c ****     {
 9625              		.loc 1 4472 63 discriminator 2
 9626 0034 08301BE5 		ldr	r3, [fp, #-8]
 9627 0038 013043E2 		sub	r3, r3, #1
 9628 003c 08300BE5 		str	r3, [fp, #-8]
 9629              	.L607:
4472:../../Source/Kernel/rme_kernel.c ****     {
 9630              		.loc 1 4472 54 discriminator 1
 9631 0040 08301BE5 		ldr	r3, [fp, #-8]
 9632 0044 000053E3 		cmp	r3, #0
 9633 0048 F3FFFFAA 		bge	.L610
 9634 004c 000000EA 		b	.L609
 9635              	.L614:
4475:../../Source/Kernel/rme_kernel.c ****         {
4476:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4477:../../Source/Kernel/rme_kernel.c ****             
4478:../../Source/Kernel/rme_kernel.c ****             break;
 9636              		.loc 1 4478 13
 9637 0050 00F020E3 		nop
 9638              	.L609:
4479:../../Source/Kernel/rme_kernel.c ****         }
4480:../../Source/Kernel/rme_kernel.c ****         else
4481:../../Source/Kernel/rme_kernel.c ****         {
4482:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4483:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4484:../../Source/Kernel/rme_kernel.c ****         }
4485:../../Source/Kernel/rme_kernel.c ****     }
4486:../../Source/Kernel/rme_kernel.c ****     
4487:../../Source/Kernel/rme_kernel.c ****     /* It must be possible to find one thread per core */
4488:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Count>=0);
 9639              		.loc 1 4488 5
 9640 0054 08301BE5 		ldr	r3, [fp, #-8]
 9641 0058 000053E3 		cmp	r3, #0
 9642 005c 080000AA 		bge	.L611
 9643              		.loc 1 4488 5 is_stmt 0 discriminator 1
 9644 0060 003000E3 		movw	r3, #:lower16:.LC6
 9645 0064 003040E3 		movt	r3, #:upper16:.LC6
 9646 0068 002000E3 		movw	r2, #:lower16:.LC7
 9647 006c 002040E3 		movt	r2, #:upper16:.LC7
 9648 0070 881101E3 		movw	r1, #4488
 9649 0074 000000E3 		movw	r0, #:lower16:.LC8
 9650 0078 000040E3 		movt	r0, #:upper16:.LC8
 9651 007c FEFFFFEB 		bl	RME_Log
 9652              	.L612:
 9653              		.loc 1 4488 5
 9654 0080 FEFFFFEA 		b	.L612
 9655              	.L611:
4489:../../Source/Kernel/rme_kernel.c **** 
4490:../../Source/Kernel/rme_kernel.c ****     /* Get the first "1"'s position in the word */
4491:../../Source/Kernel/rme_kernel.c ****     Prio=RME_MSB_GET(Local->Run.Bitmap[Count]);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 250


 9656              		.loc 1 4491 10 is_stmt 1
 9657 0084 10301BE5 		ldr	r3, [fp, #-16]
 9658 0088 08201BE5 		ldr	r2, [fp, #-8]
 9659 008c 042082E2 		add	r2, r2, #4
 9660 0090 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9661 0094 0300A0E1 		mov	r0, r3
 9662 0098 FEFFFFEB 		bl	__RME_A7A_MSB_Get
 9663 009c 0C000BE5 		str	r0, [fp, #-12]
4492:../../Source/Kernel/rme_kernel.c ****     Prio+=((rme_ptr_t)Count)<<RME_WORD_ORDER;
 9664              		.loc 1 4492 29
 9665 00a0 08301BE5 		ldr	r3, [fp, #-8]
 9666 00a4 8332A0E1 		lsl	r3, r3, #5
 9667              		.loc 1 4492 9
 9668 00a8 0C201BE5 		ldr	r2, [fp, #-12]
 9669 00ac 033082E0 		add	r3, r2, r3
 9670 00b0 0C300BE5 		str	r3, [fp, #-12]
4493:../../Source/Kernel/rme_kernel.c **** 
4494:../../Source/Kernel/rme_kernel.c ****     /* Now there is something at this priority level. Get it and start to run */
4495:../../Source/Kernel/rme_kernel.c ****     return (struct RME_Thd_Struct*)(Local->Run.List[Prio].Next);
 9671              		.loc 1 4495 12
 9672 00b4 10201BE5 		ldr	r2, [fp, #-16]
 9673 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 9674 00bc 023083E2 		add	r3, r3, #2
 9675 00c0 8331A0E1 		lsl	r3, r3, #3
 9676 00c4 033082E0 		add	r3, r2, r3
 9677 00c8 043093E5 		ldr	r3, [r3, #4]
4496:../../Source/Kernel/rme_kernel.c **** }
 9678              		.loc 1 4496 1
 9679 00cc 0300A0E1 		mov	r0, r3
 9680 00d0 04D04BE2 		sub	sp, fp, #4
 9681              		.cfi_def_cfa 13, 8
 9682              		@ sp needed
 9683 00d4 0088BDE8 		pop	{fp, pc}
 9684              		.cfi_endproc
 9685              	.LFE46:
 9687              		.section	.text._RME_Run_Notif,"ax",%progbits
 9688              		.align	2
 9689              		.syntax unified
 9690              		.arm
 9692              	_RME_Run_Notif:
 9693              	.LFB47:
4497:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_High ************************************************/
4498:../../Source/Kernel/rme_kernel.c **** 
4499:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Notif ****************************************************
4500:../../Source/Kernel/rme_kernel.c **** Description : Send a notification to the thread's parent, to notify that this 
4501:../../Source/Kernel/rme_kernel.c ****               thread is currently out of time, or have a fault.
4502:../../Source/Kernel/rme_kernel.c ****               This function includes kernel send, so we need to call 
4503:../../Source/Kernel/rme_kernel.c ****               _RME_Kern_High after this. The only exception being the
4504:../../Source/Kernel/rme_kernel.c ****               _RME_Thd_Swt system call, which we use a more optimized routine.
4505:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to send notification for.
4506:../../Source/Kernel/rme_kernel.c **** Output      : None.
4507:../../Source/Kernel/rme_kernel.c **** Return      : None.
4508:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4509:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Notif(struct RME_Thd_Struct* Thd)
4510:../../Source/Kernel/rme_kernel.c **** {
 9694              		.loc 1 4510 1
 9695              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 251


 9696              		@ args = 0, pretend = 0, frame = 16
 9697              		@ frame_needed = 1, uses_anonymous_args = 0
 9698 0000 00482DE9 		push	{fp, lr}
 9699              		.cfi_def_cfa_offset 8
 9700              		.cfi_offset 11, -8
 9701              		.cfi_offset 14, -4
 9702 0004 04B08DE2 		add	fp, sp, #4
 9703              		.cfi_def_cfa 11, 4
 9704 0008 10D04DE2 		sub	sp, sp, #16
 9705 000c 10000BE5 		str	r0, [fp, #-16]
4511:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Sched_Thd;
4512:../../Source/Kernel/rme_kernel.c ****     
4513:../../Source/Kernel/rme_kernel.c ****     Sched_Thd=Thd->Sched.Sched_Thd;
 9706              		.loc 1 4513 14
 9707 0010 10301BE5 		ldr	r3, [fp, #-16]
 9708 0014 343093E5 		ldr	r3, [r3, #52]
 9709 0018 08300BE5 		str	r3, [fp, #-8]
4514:../../Source/Kernel/rme_kernel.c ****     
4515:../../Source/Kernel/rme_kernel.c ****     /* See if there is already a notification. If yes, do not do the send again */
4516:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Notif.Next==&(Thd->Sched.Notif))
 9710              		.loc 1 4516 24
 9711 001c 10301BE5 		ldr	r3, [fp, #-16]
 9712 0020 082093E5 		ldr	r2, [r3, #8]
 9713              		.loc 1 4516 31
 9714 0024 10301BE5 		ldr	r3, [fp, #-16]
 9715 0028 083083E2 		add	r3, r3, #8
 9716              		.loc 1 4516 7
 9717 002c 030052E1 		cmp	r2, r3
 9718 0030 0700001A 		bne	.L616
4517:../../Source/Kernel/rme_kernel.c ****     {
4518:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4519:../../Source/Kernel/rme_kernel.c **** 
4520:../../Source/Kernel/rme_kernel.c ****         _RME_List_Ins(&(Thd->Sched.Notif), 
 9719              		.loc 1 4520 9
 9720 0034 10301BE5 		ldr	r3, [fp, #-16]
 9721 0038 080083E2 		add	r0, r3, #8
 9722 003c 08301BE5 		ldr	r3, [fp, #-8]
 9723 0040 401093E5 		ldr	r1, [r3, #64]
 9724 0044 08301BE5 		ldr	r3, [fp, #-8]
 9725 0048 3C3083E2 		add	r3, r3, #60
 9726 004c 0320A0E1 		mov	r2, r3
 9727 0050 FEFFFFEB 		bl	_RME_List_Ins
 9728              	.L616:
4521:../../Source/Kernel/rme_kernel.c ****                       Sched_Thd->Sched.Event.Prev,&(Sched_Thd->Sched.Event));
4522:../../Source/Kernel/rme_kernel.c ****     }
4523:../../Source/Kernel/rme_kernel.c ****     else
4524:../../Source/Kernel/rme_kernel.c ****     {
4525:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4526:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4527:../../Source/Kernel/rme_kernel.c ****     }
4528:../../Source/Kernel/rme_kernel.c **** 
4529:../../Source/Kernel/rme_kernel.c ****     /* If this guy have an endpoint, send to it */
4530:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Sched_Sig!=0U)
 9729              		.loc 1 4530 18
 9730 0054 10301BE5 		ldr	r3, [fp, #-16]
 9731 0058 383093E5 		ldr	r3, [r3, #56]
 9732              		.loc 1 4530 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 252


 9733 005c 000053E3 		cmp	r3, #0
 9734 0060 0300000A 		beq	.L618
4531:../../Source/Kernel/rme_kernel.c ****     {
4532:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4533:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_Snd(Thd->Sched.Sched_Sig);
 9735              		.loc 1 4533 9
 9736 0064 10301BE5 		ldr	r3, [fp, #-16]
 9737 0068 383093E5 		ldr	r3, [r3, #56]
 9738 006c 0300A0E1 		mov	r0, r3
 9739 0070 FEFFFFEB 		bl	_RME_Kern_Snd
 9740              	.L618:
4534:../../Source/Kernel/rme_kernel.c ****     }
4535:../../Source/Kernel/rme_kernel.c ****     else
4536:../../Source/Kernel/rme_kernel.c ****     {
4537:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4538:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4539:../../Source/Kernel/rme_kernel.c ****     }
4540:../../Source/Kernel/rme_kernel.c **** }
 9741              		.loc 1 4540 1
 9742 0074 00F020E3 		nop
 9743 0078 04D04BE2 		sub	sp, fp, #4
 9744              		.cfi_def_cfa 13, 8
 9745              		@ sp needed
 9746 007c 0088BDE8 		pop	{fp, pc}
 9747              		.cfi_endproc
 9748              	.LFE47:
 9750              		.section	.text._RME_Thd_Pgt,"ax",%progbits
 9751              		.align	2
 9752              		.global	_RME_Thd_Pgt
 9753              		.syntax unified
 9754              		.arm
 9756              	_RME_Thd_Pgt:
 9757              	.LFB48:
4541:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Notif ***********************************************/
4542:../../Source/Kernel/rme_kernel.c **** 
4543:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Pgt ******************************************************
4544:../../Source/Kernel/rme_kernel.c **** Description : Get a thread's page table. 
4545:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread.
4546:../../Source/Kernel/rme_kernel.c **** Output      : None.
4547:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Cap_Pgt* / rme_ptr_t - The page table.
4548:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4549:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4550:../../Source/Kernel/rme_kernel.c **** struct RME_Cap_Pgt* _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4551:../../Source/Kernel/rme_kernel.c **** #else
4552:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4553:../../Source/Kernel/rme_kernel.c **** #endif
4554:../../Source/Kernel/rme_kernel.c **** {
 9758              		.loc 1 4554 1
 9759              		.cfi_startproc
 9760              		@ args = 0, pretend = 0, frame = 16
 9761              		@ frame_needed = 1, uses_anonymous_args = 0
 9762              		@ link register save eliminated.
 9763 0000 04B02DE5 		str	fp, [sp, #-4]!
 9764              		.cfi_def_cfa_offset 4
 9765              		.cfi_offset 11, -4
 9766 0004 00B08DE2 		add	fp, sp, #0
 9767              		.cfi_def_cfa_register 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 253


 9768 0008 14D04DE2 		sub	sp, sp, #20
 9769 000c 10000BE5 		str	r0, [fp, #-16]
4555:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
4556:../../Source/Kernel/rme_kernel.c ****     
4557:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd);
 9770              		.loc 1 4557 13
 9771 0010 10301BE5 		ldr	r3, [fp, #-16]
 9772 0014 4C2093E5 		ldr	r2, [r3, #76]
 9773 0018 10301BE5 		ldr	r3, [fp, #-16]
 9774 001c 4C3083E2 		add	r3, r3, #76
 9775 0020 030052E1 		cmp	r2, r3
 9776 0024 0200000A 		beq	.L620
 9777              		.loc 1 4557 13 is_stmt 0 discriminator 1
 9778 0028 10301BE5 		ldr	r3, [fp, #-16]
 9779 002c 4C3093E5 		ldr	r3, [r3, #76]
 9780 0030 000000EA 		b	.L621
 9781              	.L620:
 9782              		.loc 1 4557 13 discriminator 2
 9783 0034 0030A0E3 		mov	r3, #0
 9784              	.L621:
 9785              		.loc 1 4557 12 is_stmt 1 discriminator 4
 9786 0038 08300BE5 		str	r3, [fp, #-8]
4558:../../Source/Kernel/rme_kernel.c ****     
4559:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 9787              		.loc 1 4559 7
 9788 003c 08301BE5 		ldr	r3, [fp, #-8]
 9789 0040 000053E3 		cmp	r3, #0
 9790 0044 0300001A 		bne	.L622
4560:../../Source/Kernel/rme_kernel.c ****     {
4561:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4562:../../Source/Kernel/rme_kernel.c **** 
4563:../../Source/Kernel/rme_kernel.c ****         return Thd->Sched.Prc->Pgt;
 9791              		.loc 1 4563 26
 9792 0048 10301BE5 		ldr	r3, [fp, #-16]
 9793 004c 2C3093E5 		ldr	r3, [r3, #44]
 9794              		.loc 1 4563 30
 9795 0050 183093E5 		ldr	r3, [r3, #24]
 9796 0054 020000EA 		b	.L623
 9797              	.L622:
4564:../../Source/Kernel/rme_kernel.c ****     }
4565:../../Source/Kernel/rme_kernel.c ****     else
4566:../../Source/Kernel/rme_kernel.c ****     {
4567:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4568:../../Source/Kernel/rme_kernel.c **** 
4569:../../Source/Kernel/rme_kernel.c ****         return Inv_Top->Prc->Pgt;
 9798              		.loc 1 4569 23
 9799 0058 08301BE5 		ldr	r3, [fp, #-8]
 9800 005c 083093E5 		ldr	r3, [r3, #8]
 9801              		.loc 1 4569 28
 9802 0060 183093E5 		ldr	r3, [r3, #24]
 9803              	.L623:
4570:../../Source/Kernel/rme_kernel.c ****     }
4571:../../Source/Kernel/rme_kernel.c **** }
 9804              		.loc 1 4571 1
 9805 0064 0300A0E1 		mov	r0, r3
 9806 0068 00D08BE2 		add	sp, fp, #0
 9807              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 254


 9808              		@ sp needed
 9809 006c 04B09DE4 		ldr	fp, [sp], #4
 9810              		.cfi_restore 11
 9811              		.cfi_def_cfa_offset 0
 9812 0070 1EFF2FE1 		bx	lr
 9813              		.cfi_endproc
 9814              	.LFE48:
 9816              		.section	.text._RME_Run_Swt,"ax",%progbits
 9817              		.align	2
 9818              		.syntax unified
 9819              		.arm
 9821              	_RME_Run_Swt:
 9822              	.LFB49:
4572:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Pgt *************************************************/
4573:../../Source/Kernel/rme_kernel.c **** 
4574:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Swt ******************************************************
4575:../../Source/Kernel/rme_kernel.c **** Description : Switch the register set and page table to another thread. 
4576:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4577:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_Cur - The current thread.
4578:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_New - The next thread.
4579:../../Source/Kernel/rme_kernel.c **** Output      : None.
4580:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
4581:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4582:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Run_Swt(struct RME_Reg_Struct* Reg,
4583:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_Cur, 
4584:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_New)
4585:../../Source/Kernel/rme_kernel.c **** {
 9823              		.loc 1 4585 1
 9824              		.cfi_startproc
 9825              		@ args = 0, pretend = 0, frame = 32
 9826              		@ frame_needed = 1, uses_anonymous_args = 0
 9827 0000 00482DE9 		push	{fp, lr}
 9828              		.cfi_def_cfa_offset 8
 9829              		.cfi_offset 11, -8
 9830              		.cfi_offset 14, -4
 9831 0004 04B08DE2 		add	fp, sp, #4
 9832              		.cfi_def_cfa 11, 4
 9833 0008 20D04DE2 		sub	sp, sp, #32
 9834 000c 18000BE5 		str	r0, [fp, #-24]
 9835 0010 1C100BE5 		str	r1, [fp, #-28]
 9836 0014 20200BE5 		str	r2, [fp, #-32]
4586:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4587:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Cur;
4588:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4589:../../Source/Kernel/rme_kernel.c **** #else
4590:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Cur;
4591:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_New;
4592:../../Source/Kernel/rme_kernel.c **** #endif
4593:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_Cur;
4594:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_New;
4595:../../Source/Kernel/rme_kernel.c ****     
4596:../../Source/Kernel/rme_kernel.c ****     Reg_Cur=&(Thd_Cur->Ctx.Reg->Reg);
 9837              		.loc 1 4596 27
 9838 0018 1C301BE5 		ldr	r3, [fp, #-28]
 9839 001c 483093E5 		ldr	r3, [r3, #72]
 9840              		.loc 1 4596 12
 9841 0020 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 255


4597:../../Source/Kernel/rme_kernel.c ****     Reg_New=&(Thd_New->Ctx.Reg->Reg);
 9842              		.loc 1 4597 27
 9843 0024 20301BE5 		ldr	r3, [fp, #-32]
 9844 0028 483093E5 		ldr	r3, [r3, #72]
 9845              		.loc 1 4597 12
 9846 002c 0C300BE5 		str	r3, [fp, #-12]
4598:../../Source/Kernel/rme_kernel.c ****     
4599:../../Source/Kernel/rme_kernel.c ****     /* Save register context */
4600:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg_Cur,Reg);
 9847              		.loc 1 4600 5
 9848 0030 18101BE5 		ldr	r1, [fp, #-24]
 9849 0034 08001BE5 		ldr	r0, [fp, #-8]
 9850 0038 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4601:../../Source/Kernel/rme_kernel.c ****     
4602:../../Source/Kernel/rme_kernel.c ****     /* If coprocessor is enabled, handle coprocessor context as well */
4603:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
4604:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Cop_Swap(RME_THD_ATTR(Thd_New->Ctx.Hyp_Attr),
4605:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_New->Ctx.Hyp_Attr),
4606:../../Source/Kernel/rme_kernel.c ****                        Reg_New,Thd_New->Ctx.Reg->Cop,
4607:../../Source/Kernel/rme_kernel.c ****                        RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
4608:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_Cur->Ctx.Hyp_Attr),
4609:../../Source/Kernel/rme_kernel.c ****                        Reg_Cur,Thd_Cur->Ctx.Reg->Cop);
4610:../../Source/Kernel/rme_kernel.c **** #endif
4611:../../Source/Kernel/rme_kernel.c **** 
4612:../../Source/Kernel/rme_kernel.c ****     /* Load register context */
4613:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg,Reg_New);
 9851              		.loc 1 4613 5
 9852 003c 0C101BE5 		ldr	r1, [fp, #-12]
 9853 0040 18001BE5 		ldr	r0, [fp, #-24]
 9854 0044 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4614:../../Source/Kernel/rme_kernel.c **** 
4615:../../Source/Kernel/rme_kernel.c ****     /* Are we going to switch page tables? If yes, we change it now */
4616:../../Source/Kernel/rme_kernel.c ****     Pgt_Cur=_RME_Thd_Pgt(Thd_Cur);
 9855              		.loc 1 4616 13
 9856 0048 1C001BE5 		ldr	r0, [fp, #-28]
 9857 004c FEFFFFEB 		bl	_RME_Thd_Pgt
 9858 0050 10000BE5 		str	r0, [fp, #-16]
4617:../../Source/Kernel/rme_kernel.c ****     Pgt_New=_RME_Thd_Pgt(Thd_New);
 9859              		.loc 1 4617 13
 9860 0054 20001BE5 		ldr	r0, [fp, #-32]
 9861 0058 FEFFFFEB 		bl	_RME_Thd_Pgt
 9862 005c 14000BE5 		str	r0, [fp, #-20]
4618:../../Source/Kernel/rme_kernel.c ****     
4619:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4620:../../Source/Kernel/rme_kernel.c ****     /* The page tables here must be root cap */
4621:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_Cur)!=0U);
 9863              		.loc 1 4621 5
 9864 0060 10301BE5 		ldr	r3, [fp, #-16]
 9865 0064 003093E5 		ldr	r3, [r3]
 9866 0068 7330FFE6 		uxth	r3, r3
 9867 006c 000053E3 		cmp	r3, #0
 9868 0070 0800000A 		beq	.L625
 9869              		.loc 1 4621 5 is_stmt 0 discriminator 1
 9870 0074 003000E3 		movw	r3, #:lower16:.LC6
 9871 0078 003040E3 		movt	r3, #:upper16:.LC6
 9872 007c 002000E3 		movw	r2, #:lower16:.LC7
 9873 0080 002040E3 		movt	r2, #:upper16:.LC7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 256


 9874 0084 0D1201E3 		movw	r1, #4621
 9875 0088 000000E3 		movw	r0, #:lower16:.LC8
 9876 008c 000040E3 		movt	r0, #:upper16:.LC8
 9877 0090 FEFFFFEB 		bl	RME_Log
 9878              	.L626:
 9879              		.loc 1 4621 5
 9880 0094 FEFFFFEA 		b	.L626
 9881              	.L625:
4622:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_New)!=0U);
 9882              		.loc 1 4622 5 is_stmt 1
 9883 0098 14301BE5 		ldr	r3, [fp, #-20]
 9884 009c 003093E5 		ldr	r3, [r3]
 9885 00a0 7330FFE6 		uxth	r3, r3
 9886 00a4 000053E3 		cmp	r3, #0
 9887 00a8 0800000A 		beq	.L627
 9888              		.loc 1 4622 5 is_stmt 0 discriminator 1
 9889 00ac 003000E3 		movw	r3, #:lower16:.LC6
 9890 00b0 003040E3 		movt	r3, #:upper16:.LC6
 9891 00b4 002000E3 		movw	r2, #:lower16:.LC7
 9892 00b8 002040E3 		movt	r2, #:upper16:.LC7
 9893 00bc 0E1201E3 		movw	r1, #4622
 9894 00c0 000000E3 		movw	r0, #:lower16:.LC8
 9895 00c4 000040E3 		movt	r0, #:upper16:.LC8
 9896 00c8 FEFFFFEB 		bl	RME_Log
 9897              	.L628:
 9898              		.loc 1 4622 5
 9899 00cc FEFFFFEA 		b	.L628
 9900              	.L627:
4623:../../Source/Kernel/rme_kernel.c **** #endif
4624:../../Source/Kernel/rme_kernel.c ****     
4625:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4626:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_GETOBJ(Pgt_Cur,rme_ptr_t)!=RME_CAP_GETOBJ(Pgt_New,rme_ptr_t))
 9901              		.loc 1 4626 8 is_stmt 1
 9902 00d0 10301BE5 		ldr	r3, [fp, #-16]
 9903 00d4 0C2093E5 		ldr	r2, [r3, #12]
 9904              		.loc 1 4626 43
 9905 00d8 14301BE5 		ldr	r3, [fp, #-20]
 9906 00dc 0C3093E5 		ldr	r3, [r3, #12]
 9907              		.loc 1 4626 7
 9908 00e0 030052E1 		cmp	r2, r3
 9909 00e4 0100000A 		beq	.L629
4627:../../Source/Kernel/rme_kernel.c **** #else
4628:../../Source/Kernel/rme_kernel.c ****     if(Pgt_Cur!=Pgt_New)
4629:../../Source/Kernel/rme_kernel.c **** #endif
4630:../../Source/Kernel/rme_kernel.c ****     {
4631:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4632:../../Source/Kernel/rme_kernel.c ****         
4633:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Pgt_New);
 9910              		.loc 1 4633 9
 9911 00e8 14001BE5 		ldr	r0, [fp, #-20]
 9912 00ec FEFFFFEB 		bl	__RME_Pgt_Set
 9913              	.L629:
4634:../../Source/Kernel/rme_kernel.c ****     }
4635:../../Source/Kernel/rme_kernel.c ****     else
4636:../../Source/Kernel/rme_kernel.c ****     {
4637:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4638:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 257


4639:../../Source/Kernel/rme_kernel.c ****     }
4640:../../Source/Kernel/rme_kernel.c **** 
4641:../../Source/Kernel/rme_kernel.c ****     return 0;
 9914              		.loc 1 4641 12
 9915 00f0 0030A0E3 		mov	r3, #0
4642:../../Source/Kernel/rme_kernel.c **** }
 9916              		.loc 1 4642 1
 9917 00f4 0300A0E1 		mov	r0, r3
 9918 00f8 04D04BE2 		sub	sp, fp, #4
 9919              		.cfi_def_cfa 13, 8
 9920              		@ sp needed
 9921 00fc 0088BDE8 		pop	{fp, pc}
 9922              		.cfi_endproc
 9923              	.LFE49:
 9925              		.section	.text._RME_Prc_Boot_Crt,"ax",%progbits
 9926              		.align	2
 9927              		.global	_RME_Prc_Boot_Crt
 9928              		.syntax unified
 9929              		.arm
 9931              	_RME_Prc_Boot_Crt:
 9932              	.LFB50:
4643:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Swt *************************************************/
4644:../../Source/Kernel/rme_kernel.c **** 
4645:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Boot_Crt *************************************************
4646:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4647:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4648:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and is
4649:../../Source/Kernel/rme_kernel.c ****               only used to create the first process at boot-time.
4650:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4651:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4652:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4653:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4654:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4655:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4656:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4657:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4658:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4659:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4660:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4661:../../Source/Kernel/rme_kernel.c ****                                   this process.
4662:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4663:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4664:../../Source/Kernel/rme_kernel.c ****                                   address.
4665:../../Source/Kernel/rme_kernel.c **** Output      : None.
4666:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4667:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4668:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4669:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4670:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4671:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4672:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4673:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt)
4674:../../Source/Kernel/rme_kernel.c **** #else
4675:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4676:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4677:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4678:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 258


4679:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Raw_Pgt)
4680:../../Source/Kernel/rme_kernel.c **** #endif
4681:../../Source/Kernel/rme_kernel.c **** {
 9933              		.loc 1 4681 1
 9934              		.cfi_startproc
 9935              		@ args = 4, pretend = 0, frame = 48
 9936              		@ frame_needed = 1, uses_anonymous_args = 0
 9937 0000 00482DE9 		push	{fp, lr}
 9938              		.cfi_def_cfa_offset 8
 9939              		.cfi_offset 11, -8
 9940              		.cfi_offset 14, -4
 9941 0004 04B08DE2 		add	fp, sp, #4
 9942              		.cfi_def_cfa 11, 4
 9943 0008 30D04DE2 		sub	sp, sp, #48
 9944 000c 28000BE5 		str	r0, [fp, #-40]
 9945 0010 2C100BE5 		str	r1, [fp, #-44]
 9946 0014 30200BE5 		str	r2, [fp, #-48]
 9947 0018 34300BE5 		str	r3, [fp, #-52]
4682:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4683:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4684:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4685:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4686:../../Source/Kernel/rme_kernel.c **** #endif
4687:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4688:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4689:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4690:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4691:../../Source/Kernel/rme_kernel.c **** #endif
4692:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4693:../../Source/Kernel/rme_kernel.c ****     
4694:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4695:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 9948              		.loc 1 4695 5
 9949 001c 2C301BE5 		ldr	r3, [fp, #-44]
 9950 0020 803003E2 		and	r3, r3, #128
 9951 0024 000053E3 		cmp	r3, #0
 9952 0028 1C00001A 		bne	.L632
 9953              		.loc 1 4695 5 is_stmt 0 discriminator 1
 9954 002c 28301BE5 		ldr	r3, [fp, #-40]
 9955 0030 142093E5 		ldr	r2, [r3, #20]
 9956 0034 2C301BE5 		ldr	r3, [fp, #-44]
 9957 0038 030052E1 		cmp	r2, r3
 9958 003c 0100008A 		bhi	.L633
 9959              		.loc 1 4695 5 discriminator 3
 9960 0040 0230E0E3 		mvn	r3, #2
 9961              		.loc 1 4695 5
 9962 0044 740100EA 		b	.L634
 9963              	.L633:
 9964              		.loc 1 4695 5 discriminator 4
 9965 0048 2C301BE5 		ldr	r3, [fp, #-44]
 9966 004c 8322A0E1 		lsl	r2, r3, #5
 9967 0050 28301BE5 		ldr	r3, [fp, #-40]
 9968 0054 0C3093E5 		ldr	r3, [r3, #12]
 9969 0058 033082E0 		add	r3, r2, r3
 9970 005c 08300BE5 		str	r3, [fp, #-8]
 9971 0060 08301BE5 		ldr	r3, [fp, #-8]
 9972 0064 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 259


 9973 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9974 006c 14000BE5 		str	r0, [fp, #-20]
 9975              		.loc 1 4695 5 discriminator 1
 9976 0070 14301BE5 		ldr	r3, [fp, #-20]
 9977 0074 FF3803E2 		and	r3, r3, #16711680
 9978 0078 020853E3 		cmp	r3, #131072
 9979 007c 0100001A 		bne	.L635
 9980              		.loc 1 4695 5 discriminator 5
 9981 0080 0830E0E3 		mvn	r3, #8
 9982              		.loc 1 4695 5
 9983 0084 640100EA 		b	.L634
 9984              	.L635:
 9985              		.loc 1 4695 5 discriminator 6
 9986 0088 14301BE5 		ldr	r3, [fp, #-20]
 9987 008c 233CA0E1 		lsr	r3, r3, #24
 9988 0090 030053E3 		cmp	r3, #3
 9989 0094 3F00000A 		beq	.L636
 9990              		.loc 1 4695 5 discriminator 7
 9991 0098 0130E0E3 		mvn	r3, #1
 9992              		.loc 1 4695 5
 9993 009c 5E0100EA 		b	.L634
 9994              	.L632:
 9995              		.loc 1 4695 5 discriminator 2
 9996 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 9997 00a4 2324A0E1 		lsr	r2, r3, #8
 9998 00a8 28301BE5 		ldr	r3, [fp, #-40]
 9999 00ac 143093E5 		ldr	r3, [r3, #20]
 10000 00b0 030052E1 		cmp	r2, r3
 10001 00b4 0100003A 		bcc	.L637
 10002              		.loc 1 4695 5 discriminator 8
 10003 00b8 0230E0E3 		mvn	r3, #2
 10004              		.loc 1 4695 5
 10005 00bc 560100EA 		b	.L634
 10006              	.L637:
 10007              		.loc 1 4695 5 discriminator 9
 10008 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10009 00c4 2334A0E1 		lsr	r3, r3, #8
 10010 00c8 8322A0E1 		lsl	r2, r3, #5
 10011 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10012 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10013 00d4 033082E0 		add	r3, r2, r3
 10014 00d8 08300BE5 		str	r3, [fp, #-8]
 10015 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10016 00e0 0300A0E1 		mov	r0, r3
 10017 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10018 00e8 14000BE5 		str	r0, [fp, #-20]
 10019              		.loc 1 4695 5 discriminator 1
 10020 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10021 00f0 FF3803E2 		and	r3, r3, #16711680
 10022 00f4 020853E3 		cmp	r3, #131072
 10023 00f8 0100001A 		bne	.L638
 10024              		.loc 1 4695 5 discriminator 10
 10025 00fc 0830E0E3 		mvn	r3, #8
 10026              		.loc 1 4695 5
 10027 0100 450100EA 		b	.L634
 10028              	.L638:
 10029              		.loc 1 4695 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 260


 10030 0104 14301BE5 		ldr	r3, [fp, #-20]
 10031 0108 233CA0E1 		lsr	r3, r3, #24
 10032 010c 030053E3 		cmp	r3, #3
 10033 0110 0100000A 		beq	.L639
 10034              		.loc 1 4695 5 discriminator 12
 10035 0114 0130E0E3 		mvn	r3, #1
 10036              		.loc 1 4695 5
 10037 0118 3F0100EA 		b	.L634
 10038              	.L639:
 10039              		.loc 1 4695 5 discriminator 13
 10040 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10041 0120 7F2003E2 		and	r2, r3, #127
 10042 0124 08301BE5 		ldr	r3, [fp, #-8]
 10043 0128 143093E5 		ldr	r3, [r3, #20]
 10044 012c 030052E1 		cmp	r2, r3
 10045 0130 0100003A 		bcc	.L640
 10046              		.loc 1 4695 5 discriminator 14
 10047 0134 0230E0E3 		mvn	r3, #2
 10048              		.loc 1 4695 5
 10049 0138 370100EA 		b	.L634
 10050              	.L640:
 10051              		.loc 1 4695 5 discriminator 15
 10052 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10053 0140 7F3003E2 		and	r3, r3, #127
 10054 0144 8322A0E1 		lsl	r2, r3, #5
 10055 0148 08301BE5 		ldr	r3, [fp, #-8]
 10056 014c 0C3093E5 		ldr	r3, [r3, #12]
 10057 0150 033082E0 		add	r3, r2, r3
 10058 0154 08300BE5 		str	r3, [fp, #-8]
 10059 0158 08301BE5 		ldr	r3, [fp, #-8]
 10060 015c 0300A0E1 		mov	r0, r3
 10061 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10062 0164 14000BE5 		str	r0, [fp, #-20]
 10063              		.loc 1 4695 5 discriminator 1
 10064 0168 14301BE5 		ldr	r3, [fp, #-20]
 10065 016c FF3803E2 		and	r3, r3, #16711680
 10066 0170 020853E3 		cmp	r3, #131072
 10067 0174 0100001A 		bne	.L641
 10068              		.loc 1 4695 5 discriminator 16
 10069 0178 0830E0E3 		mvn	r3, #8
 10070              		.loc 1 4695 5
 10071 017c 260100EA 		b	.L634
 10072              	.L641:
 10073              		.loc 1 4695 5 discriminator 17
 10074 0180 14301BE5 		ldr	r3, [fp, #-20]
 10075 0184 233CA0E1 		lsr	r3, r3, #24
 10076 0188 030053E3 		cmp	r3, #3
 10077 018c 0100000A 		beq	.L636
 10078              		.loc 1 4695 5 discriminator 18
 10079 0190 0130E0E3 		mvn	r3, #1
 10080              		.loc 1 4695 5
 10081 0194 200100EA 		b	.L634
 10082              	.L636:
4696:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4697:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10083              		.loc 1 4697 5 is_stmt 1
 10084 0198 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 261


 10085 019c 803003E2 		and	r3, r3, #128
 10086 01a0 000053E3 		cmp	r3, #0
 10087 01a4 1C00001A 		bne	.L642
 10088              		.loc 1 4697 5 is_stmt 0 discriminator 1
 10089 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10090 01ac 142093E5 		ldr	r2, [r3, #20]
 10091 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10092 01b4 030052E1 		cmp	r2, r3
 10093 01b8 0100008A 		bhi	.L643
 10094              		.loc 1 4697 5 discriminator 3
 10095 01bc 0230E0E3 		mvn	r3, #2
 10096              		.loc 1 4697 5
 10097 01c0 150100EA 		b	.L634
 10098              	.L643:
 10099              		.loc 1 4697 5 discriminator 4
 10100 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10101 01c8 8322A0E1 		lsl	r2, r3, #5
 10102 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10103 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10104 01d4 033082E0 		add	r3, r2, r3
 10105 01d8 0C300BE5 		str	r3, [fp, #-12]
 10106 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10107 01e0 0300A0E1 		mov	r0, r3
 10108 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10109 01e8 14000BE5 		str	r0, [fp, #-20]
 10110              		.loc 1 4697 5 discriminator 1
 10111 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10112 01f0 FF3803E2 		and	r3, r3, #16711680
 10113 01f4 020853E3 		cmp	r3, #131072
 10114 01f8 0100001A 		bne	.L644
 10115              		.loc 1 4697 5 discriminator 5
 10116 01fc 0830E0E3 		mvn	r3, #8
 10117              		.loc 1 4697 5
 10118 0200 050100EA 		b	.L634
 10119              	.L644:
 10120              		.loc 1 4697 5 discriminator 6
 10121 0204 14301BE5 		ldr	r3, [fp, #-20]
 10122 0208 233CA0E1 		lsr	r3, r3, #24
 10123 020c 030053E3 		cmp	r3, #3
 10124 0210 3F00000A 		beq	.L645
 10125              		.loc 1 4697 5 discriminator 7
 10126 0214 0130E0E3 		mvn	r3, #1
 10127              		.loc 1 4697 5
 10128 0218 FF0000EA 		b	.L634
 10129              	.L642:
 10130              		.loc 1 4697 5 discriminator 2
 10131 021c 34301BE5 		ldr	r3, [fp, #-52]
 10132 0220 2324A0E1 		lsr	r2, r3, #8
 10133 0224 28301BE5 		ldr	r3, [fp, #-40]
 10134 0228 143093E5 		ldr	r3, [r3, #20]
 10135 022c 030052E1 		cmp	r2, r3
 10136 0230 0100003A 		bcc	.L646
 10137              		.loc 1 4697 5 discriminator 8
 10138 0234 0230E0E3 		mvn	r3, #2
 10139              		.loc 1 4697 5
 10140 0238 F70000EA 		b	.L634
 10141              	.L646:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 262


 10142              		.loc 1 4697 5 discriminator 9
 10143 023c 34301BE5 		ldr	r3, [fp, #-52]
 10144 0240 2334A0E1 		lsr	r3, r3, #8
 10145 0244 8322A0E1 		lsl	r2, r3, #5
 10146 0248 28301BE5 		ldr	r3, [fp, #-40]
 10147 024c 0C3093E5 		ldr	r3, [r3, #12]
 10148 0250 033082E0 		add	r3, r2, r3
 10149 0254 0C300BE5 		str	r3, [fp, #-12]
 10150 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10151 025c 0300A0E1 		mov	r0, r3
 10152 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10153 0264 14000BE5 		str	r0, [fp, #-20]
 10154              		.loc 1 4697 5 discriminator 1
 10155 0268 14301BE5 		ldr	r3, [fp, #-20]
 10156 026c FF3803E2 		and	r3, r3, #16711680
 10157 0270 020853E3 		cmp	r3, #131072
 10158 0274 0100001A 		bne	.L647
 10159              		.loc 1 4697 5 discriminator 10
 10160 0278 0830E0E3 		mvn	r3, #8
 10161              		.loc 1 4697 5
 10162 027c E60000EA 		b	.L634
 10163              	.L647:
 10164              		.loc 1 4697 5 discriminator 11
 10165 0280 14301BE5 		ldr	r3, [fp, #-20]
 10166 0284 233CA0E1 		lsr	r3, r3, #24
 10167 0288 030053E3 		cmp	r3, #3
 10168 028c 0100000A 		beq	.L648
 10169              		.loc 1 4697 5 discriminator 12
 10170 0290 0130E0E3 		mvn	r3, #1
 10171              		.loc 1 4697 5
 10172 0294 E00000EA 		b	.L634
 10173              	.L648:
 10174              		.loc 1 4697 5 discriminator 13
 10175 0298 34301BE5 		ldr	r3, [fp, #-52]
 10176 029c 7F2003E2 		and	r2, r3, #127
 10177 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10178 02a4 143093E5 		ldr	r3, [r3, #20]
 10179 02a8 030052E1 		cmp	r2, r3
 10180 02ac 0100003A 		bcc	.L649
 10181              		.loc 1 4697 5 discriminator 14
 10182 02b0 0230E0E3 		mvn	r3, #2
 10183              		.loc 1 4697 5
 10184 02b4 D80000EA 		b	.L634
 10185              	.L649:
 10186              		.loc 1 4697 5 discriminator 15
 10187 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10188 02bc 7F3003E2 		and	r3, r3, #127
 10189 02c0 8322A0E1 		lsl	r2, r3, #5
 10190 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10191 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10192 02cc 033082E0 		add	r3, r2, r3
 10193 02d0 0C300BE5 		str	r3, [fp, #-12]
 10194 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10195 02d8 0300A0E1 		mov	r0, r3
 10196 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10197 02e0 14000BE5 		str	r0, [fp, #-20]
 10198              		.loc 1 4697 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 263


 10199 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10200 02e8 FF3803E2 		and	r3, r3, #16711680
 10201 02ec 020853E3 		cmp	r3, #131072
 10202 02f0 0100001A 		bne	.L650
 10203              		.loc 1 4697 5 discriminator 16
 10204 02f4 0830E0E3 		mvn	r3, #8
 10205              		.loc 1 4697 5
 10206 02f8 C70000EA 		b	.L634
 10207              	.L650:
 10208              		.loc 1 4697 5 discriminator 17
 10209 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10210 0300 233CA0E1 		lsr	r3, r3, #24
 10211 0304 030053E3 		cmp	r3, #3
 10212 0308 0100000A 		beq	.L645
 10213              		.loc 1 4697 5 discriminator 18
 10214 030c 0130E0E3 		mvn	r3, #1
 10215              		.loc 1 4697 5
 10216 0310 C10000EA 		b	.L634
 10217              	.L645:
4698:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4699:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4700:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10218              		.loc 1 4700 5 is_stmt 1
 10219 0314 04309BE5 		ldr	r3, [fp, #4]
 10220 0318 803003E2 		and	r3, r3, #128
 10221 031c 000053E3 		cmp	r3, #0
 10222 0320 1C00001A 		bne	.L651
 10223              		.loc 1 4700 5 is_stmt 0 discriminator 1
 10224 0324 28301BE5 		ldr	r3, [fp, #-40]
 10225 0328 142093E5 		ldr	r2, [r3, #20]
 10226 032c 04309BE5 		ldr	r3, [fp, #4]
 10227 0330 030052E1 		cmp	r2, r3
 10228 0334 0100008A 		bhi	.L652
 10229              		.loc 1 4700 5 discriminator 3
 10230 0338 0230E0E3 		mvn	r3, #2
 10231              		.loc 1 4700 5
 10232 033c B60000EA 		b	.L634
 10233              	.L652:
 10234              		.loc 1 4700 5 discriminator 4
 10235 0340 04309BE5 		ldr	r3, [fp, #4]
 10236 0344 8322A0E1 		lsl	r2, r3, #5
 10237 0348 28301BE5 		ldr	r3, [fp, #-40]
 10238 034c 0C3093E5 		ldr	r3, [r3, #12]
 10239 0350 033082E0 		add	r3, r2, r3
 10240 0354 10300BE5 		str	r3, [fp, #-16]
 10241 0358 10301BE5 		ldr	r3, [fp, #-16]
 10242 035c 0300A0E1 		mov	r0, r3
 10243 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10244 0364 14000BE5 		str	r0, [fp, #-20]
 10245              		.loc 1 4700 5 discriminator 1
 10246 0368 14301BE5 		ldr	r3, [fp, #-20]
 10247 036c FF3803E2 		and	r3, r3, #16711680
 10248 0370 020853E3 		cmp	r3, #131072
 10249 0374 0100001A 		bne	.L653
 10250              		.loc 1 4700 5 discriminator 5
 10251 0378 0830E0E3 		mvn	r3, #8
 10252              		.loc 1 4700 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 264


 10253 037c A60000EA 		b	.L634
 10254              	.L653:
 10255              		.loc 1 4700 5 discriminator 6
 10256 0380 14301BE5 		ldr	r3, [fp, #-20]
 10257 0384 233CA0E1 		lsr	r3, r3, #24
 10258 0388 040053E3 		cmp	r3, #4
 10259 038c 3F00000A 		beq	.L654
 10260              		.loc 1 4700 5 discriminator 7
 10261 0390 0130E0E3 		mvn	r3, #1
 10262              		.loc 1 4700 5
 10263 0394 A00000EA 		b	.L634
 10264              	.L651:
 10265              		.loc 1 4700 5 discriminator 2
 10266 0398 04309BE5 		ldr	r3, [fp, #4]
 10267 039c 2324A0E1 		lsr	r2, r3, #8
 10268 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10269 03a4 143093E5 		ldr	r3, [r3, #20]
 10270 03a8 030052E1 		cmp	r2, r3
 10271 03ac 0100003A 		bcc	.L655
 10272              		.loc 1 4700 5 discriminator 8
 10273 03b0 0230E0E3 		mvn	r3, #2
 10274              		.loc 1 4700 5
 10275 03b4 980000EA 		b	.L634
 10276              	.L655:
 10277              		.loc 1 4700 5 discriminator 9
 10278 03b8 04309BE5 		ldr	r3, [fp, #4]
 10279 03bc 2334A0E1 		lsr	r3, r3, #8
 10280 03c0 8322A0E1 		lsl	r2, r3, #5
 10281 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10282 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10283 03cc 033082E0 		add	r3, r2, r3
 10284 03d0 10300BE5 		str	r3, [fp, #-16]
 10285 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10286 03d8 0300A0E1 		mov	r0, r3
 10287 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10288 03e0 14000BE5 		str	r0, [fp, #-20]
 10289              		.loc 1 4700 5 discriminator 1
 10290 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10291 03e8 FF3803E2 		and	r3, r3, #16711680
 10292 03ec 020853E3 		cmp	r3, #131072
 10293 03f0 0100001A 		bne	.L656
 10294              		.loc 1 4700 5 discriminator 10
 10295 03f4 0830E0E3 		mvn	r3, #8
 10296              		.loc 1 4700 5
 10297 03f8 870000EA 		b	.L634
 10298              	.L656:
 10299              		.loc 1 4700 5 discriminator 11
 10300 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10301 0400 233CA0E1 		lsr	r3, r3, #24
 10302 0404 030053E3 		cmp	r3, #3
 10303 0408 0100000A 		beq	.L657
 10304              		.loc 1 4700 5 discriminator 12
 10305 040c 0130E0E3 		mvn	r3, #1
 10306              		.loc 1 4700 5
 10307 0410 810000EA 		b	.L634
 10308              	.L657:
 10309              		.loc 1 4700 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 265


 10310 0414 04309BE5 		ldr	r3, [fp, #4]
 10311 0418 7F2003E2 		and	r2, r3, #127
 10312 041c 10301BE5 		ldr	r3, [fp, #-16]
 10313 0420 143093E5 		ldr	r3, [r3, #20]
 10314 0424 030052E1 		cmp	r2, r3
 10315 0428 0100003A 		bcc	.L658
 10316              		.loc 1 4700 5 discriminator 14
 10317 042c 0230E0E3 		mvn	r3, #2
 10318              		.loc 1 4700 5
 10319 0430 790000EA 		b	.L634
 10320              	.L658:
 10321              		.loc 1 4700 5 discriminator 15
 10322 0434 04309BE5 		ldr	r3, [fp, #4]
 10323 0438 7F3003E2 		and	r3, r3, #127
 10324 043c 8322A0E1 		lsl	r2, r3, #5
 10325 0440 10301BE5 		ldr	r3, [fp, #-16]
 10326 0444 0C3093E5 		ldr	r3, [r3, #12]
 10327 0448 033082E0 		add	r3, r2, r3
 10328 044c 10300BE5 		str	r3, [fp, #-16]
 10329 0450 10301BE5 		ldr	r3, [fp, #-16]
 10330 0454 0300A0E1 		mov	r0, r3
 10331 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10332 045c 14000BE5 		str	r0, [fp, #-20]
 10333              		.loc 1 4700 5 discriminator 1
 10334 0460 14301BE5 		ldr	r3, [fp, #-20]
 10335 0464 FF3803E2 		and	r3, r3, #16711680
 10336 0468 020853E3 		cmp	r3, #131072
 10337 046c 0100001A 		bne	.L659
 10338              		.loc 1 4700 5 discriminator 16
 10339 0470 0830E0E3 		mvn	r3, #8
 10340              		.loc 1 4700 5
 10341 0474 680000EA 		b	.L634
 10342              	.L659:
 10343              		.loc 1 4700 5 discriminator 17
 10344 0478 14301BE5 		ldr	r3, [fp, #-20]
 10345 047c 233CA0E1 		lsr	r3, r3, #24
 10346 0480 040053E3 		cmp	r3, #4
 10347 0484 0100000A 		beq	.L654
 10348              		.loc 1 4700 5 discriminator 18
 10349 0488 0130E0E3 		mvn	r3, #1
 10350              		.loc 1 4700 5
 10351 048c 620000EA 		b	.L634
 10352              	.L654:
4701:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4702:../../Source/Kernel/rme_kernel.c **** #endif
4703:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4704:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10353              		.loc 1 4704 5 is_stmt 1
 10354 0490 08301BE5 		ldr	r3, [fp, #-8]
 10355 0494 083093E5 		ldr	r3, [r3, #8]
 10356 0498 013003E2 		and	r3, r3, #1
 10357 049c 000053E3 		cmp	r3, #0
 10358 04a0 0100001A 		bne	.L660
 10359              		.loc 1 4704 5 is_stmt 0 discriminator 1
 10360 04a4 0630E0E3 		mvn	r3, #6
 10361              		.loc 1 4704 5
 10362 04a8 5B0000EA 		b	.L634
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 266


 10363              	.L660:
4705:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10364              		.loc 1 4705 5 is_stmt 1
 10365 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10366 04b0 083093E5 		ldr	r3, [r3, #8]
 10367 04b4 403003E2 		and	r3, r3, #64
 10368 04b8 000053E3 		cmp	r3, #0
 10369 04bc 0100001A 		bne	.L661
 10370              		.loc 1 4705 5 is_stmt 0 discriminator 1
 10371 04c0 0630E0E3 		mvn	r3, #6
 10372              		.loc 1 4705 5
 10373 04c4 540000EA 		b	.L634
 10374              	.L661:
4706:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4707:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10375              		.loc 1 4707 5 is_stmt 1
 10376 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10377 04cc 083093E5 		ldr	r3, [r3, #8]
 10378 04d0 403003E2 		and	r3, r3, #64
 10379 04d4 000053E3 		cmp	r3, #0
 10380 04d8 0100001A 		bne	.L662
 10381              		.loc 1 4707 5 is_stmt 0 discriminator 1
 10382 04dc 0630E0E3 		mvn	r3, #6
 10383              		.loc 1 4707 5
 10384 04e0 4D0000EA 		b	.L634
 10385              	.L662:
4708:../../Source/Kernel/rme_kernel.c **** #endif
4709:../../Source/Kernel/rme_kernel.c ****     
4710:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4711:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10386              		.loc 1 4711 5 is_stmt 1
 10387 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10388 04e8 142093E5 		ldr	r2, [r3, #20]
 10389 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10390 04f0 030052E1 		cmp	r2, r3
 10391 04f4 0100008A 		bhi	.L663
 10392              		.loc 1 4711 5 is_stmt 0 discriminator 1
 10393 04f8 0230E0E3 		mvn	r3, #2
 10394              		.loc 1 4711 5
 10395 04fc 460000EA 		b	.L634
 10396              	.L663:
 10397              		.loc 1 4711 5 discriminator 2
 10398 0500 30301BE5 		ldr	r3, [fp, #-48]
 10399 0504 8322A0E1 		lsl	r2, r3, #5
 10400 0508 08301BE5 		ldr	r3, [fp, #-8]
 10401 050c 0C3093E5 		ldr	r3, [r3, #12]
 10402 0510 033082E0 		add	r3, r2, r3
 10403 0514 18300BE5 		str	r3, [fp, #-24]
4712:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4713:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10404              		.loc 1 4713 5 is_stmt 1
 10405 0518 18301BE5 		ldr	r3, [fp, #-24]
 10406 051c 0128A0E3 		mov	r2, #65536
 10407 0520 0010A0E3 		mov	r1, #0
 10408 0524 0300A0E1 		mov	r0, r3
 10409 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10410 052c 0030A0E1 		mov	r3, r0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 267


 10411              		.loc 1 4713 5 is_stmt 0 discriminator 1
 10412 0530 000053E3 		cmp	r3, #0
 10413 0534 0100001A 		bne	.L664
 10414 0538 0430E0E3 		mvn	r3, #4
 10415              		.loc 1 4713 5
 10416 053c 360000EA 		b	.L634
 10417              	.L664:
 10418              		.loc 1 4713 5 discriminator 2
 10419 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10420 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10421 0548 002093E5 		ldr	r2, [r3]
 10422 054c 18301BE5 		ldr	r3, [fp, #-24]
 10423 0550 102083E5 		str	r2, [r3, #16]
4714:../../Source/Kernel/rme_kernel.c **** 
4715:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4716:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=1U;
 10424              		.loc 1 4716 27 is_stmt 1
 10425 0554 18301BE5 		ldr	r3, [fp, #-24]
 10426 0558 0120A0E3 		mov	r2, #1
 10427 055c 042083E5 		str	r2, [r3, #4]
4717:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10428              		.loc 1 4717 25
 10429 0560 18301BE5 		ldr	r3, [fp, #-24]
 10430 0564 0020A0E3 		mov	r2, #0
 10431 0568 0C2083E5 		str	r2, [r3, #12]
4718:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_INV|RME_PRC_FLAG_THD;
 10432              		.loc 1 4718 23
 10433 056c 18301BE5 		ldr	r3, [fp, #-24]
 10434 0570 0320A0E3 		mov	r2, #3
 10435 0574 082083E5 		str	r2, [r3, #8]
4719:../../Source/Kernel/rme_kernel.c **** 
4720:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4721:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10436              		.loc 1 4721 13
 10437 0578 0C301BE5 		ldr	r3, [fp, #-12]
 10438 057c 003093E5 		ldr	r3, [r3]
 10439 0580 7330FFE6 		uxth	r3, r3
 10440 0584 000053E3 		cmp	r3, #0
 10441 0588 0200000A 		beq	.L665
 10442              		.loc 1 4721 13 is_stmt 0 discriminator 1
 10443 058c 0C301BE5 		ldr	r3, [fp, #-12]
 10444 0590 043093E5 		ldr	r3, [r3, #4]
 10445 0594 000000EA 		b	.L666
 10446              	.L665:
 10447              		.loc 1 4721 13 discriminator 2
 10448 0598 0C301BE5 		ldr	r3, [fp, #-12]
 10449              	.L666:
 10450              		.loc 1 4721 12 is_stmt 1 discriminator 4
 10451 059c 1C300BE5 		str	r3, [fp, #-28]
4722:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4723:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10452              		.loc 1 4723 13
 10453 05a0 10301BE5 		ldr	r3, [fp, #-16]
 10454 05a4 003093E5 		ldr	r3, [r3]
 10455 05a8 7330FFE6 		uxth	r3, r3
 10456 05ac 000053E3 		cmp	r3, #0
 10457 05b0 0200000A 		beq	.L667
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 268


 10458              		.loc 1 4723 13 is_stmt 0 discriminator 1
 10459 05b4 10301BE5 		ldr	r3, [fp, #-16]
 10460 05b8 043093E5 		ldr	r3, [r3, #4]
 10461 05bc 000000EA 		b	.L668
 10462              	.L667:
 10463              		.loc 1 4723 13 discriminator 2
 10464 05c0 10301BE5 		ldr	r3, [fp, #-16]
 10465              	.L668:
 10466              		.loc 1 4723 12 is_stmt 1 discriminator 4
 10467 05c4 20300BE5 		str	r3, [fp, #-32]
4724:../../Source/Kernel/rme_kernel.c **** #endif
4725:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10468              		.loc 1 4725 17
 10469 05c8 18301BE5 		ldr	r3, [fp, #-24]
 10470 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 10471 05d0 142083E5 		str	r2, [r3, #20]
4726:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4727:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 10472              		.loc 1 4727 17
 10473 05d4 18301BE5 		ldr	r3, [fp, #-24]
 10474 05d8 20201BE5 		ldr	r2, [fp, #-32]
 10475 05dc 182083E5 		str	r2, [r3, #24]
4728:../../Source/Kernel/rme_kernel.c **** #else
4729:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4730:../../Source/Kernel/rme_kernel.c **** #endif
4731:../../Source/Kernel/rme_kernel.c ****     
4732:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4733:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10476              		.loc 1 4733 5
 10477 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 10478 05e4 043083E2 		add	r3, r3, #4
 10479 05e8 0110A0E3 		mov	r1, #1
 10480 05ec 0300A0E1 		mov	r0, r3
 10481 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4734:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4735:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10482              		.loc 1 4735 5
 10483 05f4 20301BE5 		ldr	r3, [fp, #-32]
 10484 05f8 043083E2 		add	r3, r3, #4
 10485 05fc 0110A0E3 		mov	r1, #1
 10486 0600 0300A0E1 		mov	r0, r3
 10487 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4736:../../Source/Kernel/rme_kernel.c **** #endif
4737:../../Source/Kernel/rme_kernel.c **** 
4738:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4739:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10488              		.loc 1 4739 5
 10489 0608 18301BE5 		ldr	r3, [fp, #-24]
 10490 060c 0514A0E3 		mov	r1, #83886080
 10491 0610 0300A0E1 		mov	r0, r3
 10492 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4740:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4741:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4742:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4743:../../Source/Kernel/rme_kernel.c **** 
4744:../../Source/Kernel/rme_kernel.c ****     return 0;
 10493              		.loc 1 4744 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 269


 10494 0618 0030A0E3 		mov	r3, #0
 10495              	.L634:
4745:../../Source/Kernel/rme_kernel.c **** }
 10496              		.loc 1 4745 1
 10497 061c 0300A0E1 		mov	r0, r3
 10498 0620 04D04BE2 		sub	sp, fp, #4
 10499              		.cfi_def_cfa 13, 8
 10500              		@ sp needed
 10501 0624 0088BDE8 		pop	{fp, pc}
 10502              		.cfi_endproc
 10503              	.LFE50:
 10505              		.section	.text._RME_Prc_Crt,"ax",%progbits
 10506              		.align	2
 10507              		.syntax unified
 10508              		.arm
 10510              	_RME_Prc_Crt:
 10511              	.LFB51:
4746:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Boot_Crt ********************************************/
4747:../../Source/Kernel/rme_kernel.c **** 
4748:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Crt ******************************************************
4749:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4750:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4751:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4752:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4753:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4754:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4755:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4756:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4757:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4758:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4759:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4760:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4761:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4762:../../Source/Kernel/rme_kernel.c ****                                   this process.
4763:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4764:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4765:../../Source/Kernel/rme_kernel.c ****                                   address.
4766:../../Source/Kernel/rme_kernel.c **** Output      : None.
4767:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4768:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4769:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4770:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4771:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4772:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4773:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4774:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4775:../../Source/Kernel/rme_kernel.c **** #else
4776:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4777:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4778:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4779:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4780:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4781:../../Source/Kernel/rme_kernel.c **** #endif
4782:../../Source/Kernel/rme_kernel.c **** {
 10512              		.loc 1 4782 1
 10513              		.cfi_startproc
 10514              		@ args = 4, pretend = 0, frame = 48
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 270


 10515              		@ frame_needed = 1, uses_anonymous_args = 0
 10516 0000 00482DE9 		push	{fp, lr}
 10517              		.cfi_def_cfa_offset 8
 10518              		.cfi_offset 11, -8
 10519              		.cfi_offset 14, -4
 10520 0004 04B08DE2 		add	fp, sp, #4
 10521              		.cfi_def_cfa 11, 4
 10522 0008 30D04DE2 		sub	sp, sp, #48
 10523 000c 28000BE5 		str	r0, [fp, #-40]
 10524 0010 2C100BE5 		str	r1, [fp, #-44]
 10525 0014 30200BE5 		str	r2, [fp, #-48]
 10526 0018 34300BE5 		str	r3, [fp, #-52]
4783:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4784:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4785:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4786:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4787:../../Source/Kernel/rme_kernel.c **** #endif
4788:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4789:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4790:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4791:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4792:../../Source/Kernel/rme_kernel.c **** #endif
4793:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4794:../../Source/Kernel/rme_kernel.c ****     
4795:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4796:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10527              		.loc 1 4796 5
 10528 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10529 0020 803003E2 		and	r3, r3, #128
 10530 0024 000053E3 		cmp	r3, #0
 10531 0028 1C00001A 		bne	.L670
 10532              		.loc 1 4796 5 is_stmt 0 discriminator 1
 10533 002c 28301BE5 		ldr	r3, [fp, #-40]
 10534 0030 142093E5 		ldr	r2, [r3, #20]
 10535 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10536 0038 030052E1 		cmp	r2, r3
 10537 003c 0100008A 		bhi	.L671
 10538              		.loc 1 4796 5 discriminator 3
 10539 0040 0230E0E3 		mvn	r3, #2
 10540              		.loc 1 4796 5
 10541 0044 740100EA 		b	.L672
 10542              	.L671:
 10543              		.loc 1 4796 5 discriminator 4
 10544 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10545 004c 8322A0E1 		lsl	r2, r3, #5
 10546 0050 28301BE5 		ldr	r3, [fp, #-40]
 10547 0054 0C3093E5 		ldr	r3, [r3, #12]
 10548 0058 033082E0 		add	r3, r2, r3
 10549 005c 08300BE5 		str	r3, [fp, #-8]
 10550 0060 08301BE5 		ldr	r3, [fp, #-8]
 10551 0064 0300A0E1 		mov	r0, r3
 10552 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10553 006c 14000BE5 		str	r0, [fp, #-20]
 10554              		.loc 1 4796 5 discriminator 1
 10555 0070 14301BE5 		ldr	r3, [fp, #-20]
 10556 0074 FF3803E2 		and	r3, r3, #16711680
 10557 0078 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 271


 10558 007c 0100001A 		bne	.L673
 10559              		.loc 1 4796 5 discriminator 5
 10560 0080 0830E0E3 		mvn	r3, #8
 10561              		.loc 1 4796 5
 10562 0084 640100EA 		b	.L672
 10563              	.L673:
 10564              		.loc 1 4796 5 discriminator 6
 10565 0088 14301BE5 		ldr	r3, [fp, #-20]
 10566 008c 233CA0E1 		lsr	r3, r3, #24
 10567 0090 030053E3 		cmp	r3, #3
 10568 0094 3F00000A 		beq	.L674
 10569              		.loc 1 4796 5 discriminator 7
 10570 0098 0130E0E3 		mvn	r3, #1
 10571              		.loc 1 4796 5
 10572 009c 5E0100EA 		b	.L672
 10573              	.L670:
 10574              		.loc 1 4796 5 discriminator 2
 10575 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 10576 00a4 2324A0E1 		lsr	r2, r3, #8
 10577 00a8 28301BE5 		ldr	r3, [fp, #-40]
 10578 00ac 143093E5 		ldr	r3, [r3, #20]
 10579 00b0 030052E1 		cmp	r2, r3
 10580 00b4 0100003A 		bcc	.L675
 10581              		.loc 1 4796 5 discriminator 8
 10582 00b8 0230E0E3 		mvn	r3, #2
 10583              		.loc 1 4796 5
 10584 00bc 560100EA 		b	.L672
 10585              	.L675:
 10586              		.loc 1 4796 5 discriminator 9
 10587 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10588 00c4 2334A0E1 		lsr	r3, r3, #8
 10589 00c8 8322A0E1 		lsl	r2, r3, #5
 10590 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10591 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10592 00d4 033082E0 		add	r3, r2, r3
 10593 00d8 08300BE5 		str	r3, [fp, #-8]
 10594 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10595 00e0 0300A0E1 		mov	r0, r3
 10596 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10597 00e8 14000BE5 		str	r0, [fp, #-20]
 10598              		.loc 1 4796 5 discriminator 1
 10599 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10600 00f0 FF3803E2 		and	r3, r3, #16711680
 10601 00f4 020853E3 		cmp	r3, #131072
 10602 00f8 0100001A 		bne	.L676
 10603              		.loc 1 4796 5 discriminator 10
 10604 00fc 0830E0E3 		mvn	r3, #8
 10605              		.loc 1 4796 5
 10606 0100 450100EA 		b	.L672
 10607              	.L676:
 10608              		.loc 1 4796 5 discriminator 11
 10609 0104 14301BE5 		ldr	r3, [fp, #-20]
 10610 0108 233CA0E1 		lsr	r3, r3, #24
 10611 010c 030053E3 		cmp	r3, #3
 10612 0110 0100000A 		beq	.L677
 10613              		.loc 1 4796 5 discriminator 12
 10614 0114 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 272


 10615              		.loc 1 4796 5
 10616 0118 3F0100EA 		b	.L672
 10617              	.L677:
 10618              		.loc 1 4796 5 discriminator 13
 10619 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10620 0120 7F2003E2 		and	r2, r3, #127
 10621 0124 08301BE5 		ldr	r3, [fp, #-8]
 10622 0128 143093E5 		ldr	r3, [r3, #20]
 10623 012c 030052E1 		cmp	r2, r3
 10624 0130 0100003A 		bcc	.L678
 10625              		.loc 1 4796 5 discriminator 14
 10626 0134 0230E0E3 		mvn	r3, #2
 10627              		.loc 1 4796 5
 10628 0138 370100EA 		b	.L672
 10629              	.L678:
 10630              		.loc 1 4796 5 discriminator 15
 10631 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10632 0140 7F3003E2 		and	r3, r3, #127
 10633 0144 8322A0E1 		lsl	r2, r3, #5
 10634 0148 08301BE5 		ldr	r3, [fp, #-8]
 10635 014c 0C3093E5 		ldr	r3, [r3, #12]
 10636 0150 033082E0 		add	r3, r2, r3
 10637 0154 08300BE5 		str	r3, [fp, #-8]
 10638 0158 08301BE5 		ldr	r3, [fp, #-8]
 10639 015c 0300A0E1 		mov	r0, r3
 10640 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10641 0164 14000BE5 		str	r0, [fp, #-20]
 10642              		.loc 1 4796 5 discriminator 1
 10643 0168 14301BE5 		ldr	r3, [fp, #-20]
 10644 016c FF3803E2 		and	r3, r3, #16711680
 10645 0170 020853E3 		cmp	r3, #131072
 10646 0174 0100001A 		bne	.L679
 10647              		.loc 1 4796 5 discriminator 16
 10648 0178 0830E0E3 		mvn	r3, #8
 10649              		.loc 1 4796 5
 10650 017c 260100EA 		b	.L672
 10651              	.L679:
 10652              		.loc 1 4796 5 discriminator 17
 10653 0180 14301BE5 		ldr	r3, [fp, #-20]
 10654 0184 233CA0E1 		lsr	r3, r3, #24
 10655 0188 030053E3 		cmp	r3, #3
 10656 018c 0100000A 		beq	.L674
 10657              		.loc 1 4796 5 discriminator 18
 10658 0190 0130E0E3 		mvn	r3, #1
 10659              		.loc 1 4796 5
 10660 0194 200100EA 		b	.L672
 10661              	.L674:
4797:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4798:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10662              		.loc 1 4798 5 is_stmt 1
 10663 0198 34301BE5 		ldr	r3, [fp, #-52]
 10664 019c 803003E2 		and	r3, r3, #128
 10665 01a0 000053E3 		cmp	r3, #0
 10666 01a4 1C00001A 		bne	.L680
 10667              		.loc 1 4798 5 is_stmt 0 discriminator 1
 10668 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10669 01ac 142093E5 		ldr	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 273


 10670 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10671 01b4 030052E1 		cmp	r2, r3
 10672 01b8 0100008A 		bhi	.L681
 10673              		.loc 1 4798 5 discriminator 3
 10674 01bc 0230E0E3 		mvn	r3, #2
 10675              		.loc 1 4798 5
 10676 01c0 150100EA 		b	.L672
 10677              	.L681:
 10678              		.loc 1 4798 5 discriminator 4
 10679 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10680 01c8 8322A0E1 		lsl	r2, r3, #5
 10681 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10682 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10683 01d4 033082E0 		add	r3, r2, r3
 10684 01d8 0C300BE5 		str	r3, [fp, #-12]
 10685 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10686 01e0 0300A0E1 		mov	r0, r3
 10687 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10688 01e8 14000BE5 		str	r0, [fp, #-20]
 10689              		.loc 1 4798 5 discriminator 1
 10690 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10691 01f0 FF3803E2 		and	r3, r3, #16711680
 10692 01f4 020853E3 		cmp	r3, #131072
 10693 01f8 0100001A 		bne	.L682
 10694              		.loc 1 4798 5 discriminator 5
 10695 01fc 0830E0E3 		mvn	r3, #8
 10696              		.loc 1 4798 5
 10697 0200 050100EA 		b	.L672
 10698              	.L682:
 10699              		.loc 1 4798 5 discriminator 6
 10700 0204 14301BE5 		ldr	r3, [fp, #-20]
 10701 0208 233CA0E1 		lsr	r3, r3, #24
 10702 020c 030053E3 		cmp	r3, #3
 10703 0210 3F00000A 		beq	.L683
 10704              		.loc 1 4798 5 discriminator 7
 10705 0214 0130E0E3 		mvn	r3, #1
 10706              		.loc 1 4798 5
 10707 0218 FF0000EA 		b	.L672
 10708              	.L680:
 10709              		.loc 1 4798 5 discriminator 2
 10710 021c 34301BE5 		ldr	r3, [fp, #-52]
 10711 0220 2324A0E1 		lsr	r2, r3, #8
 10712 0224 28301BE5 		ldr	r3, [fp, #-40]
 10713 0228 143093E5 		ldr	r3, [r3, #20]
 10714 022c 030052E1 		cmp	r2, r3
 10715 0230 0100003A 		bcc	.L684
 10716              		.loc 1 4798 5 discriminator 8
 10717 0234 0230E0E3 		mvn	r3, #2
 10718              		.loc 1 4798 5
 10719 0238 F70000EA 		b	.L672
 10720              	.L684:
 10721              		.loc 1 4798 5 discriminator 9
 10722 023c 34301BE5 		ldr	r3, [fp, #-52]
 10723 0240 2334A0E1 		lsr	r3, r3, #8
 10724 0244 8322A0E1 		lsl	r2, r3, #5
 10725 0248 28301BE5 		ldr	r3, [fp, #-40]
 10726 024c 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 274


 10727 0250 033082E0 		add	r3, r2, r3
 10728 0254 0C300BE5 		str	r3, [fp, #-12]
 10729 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10730 025c 0300A0E1 		mov	r0, r3
 10731 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10732 0264 14000BE5 		str	r0, [fp, #-20]
 10733              		.loc 1 4798 5 discriminator 1
 10734 0268 14301BE5 		ldr	r3, [fp, #-20]
 10735 026c FF3803E2 		and	r3, r3, #16711680
 10736 0270 020853E3 		cmp	r3, #131072
 10737 0274 0100001A 		bne	.L685
 10738              		.loc 1 4798 5 discriminator 10
 10739 0278 0830E0E3 		mvn	r3, #8
 10740              		.loc 1 4798 5
 10741 027c E60000EA 		b	.L672
 10742              	.L685:
 10743              		.loc 1 4798 5 discriminator 11
 10744 0280 14301BE5 		ldr	r3, [fp, #-20]
 10745 0284 233CA0E1 		lsr	r3, r3, #24
 10746 0288 030053E3 		cmp	r3, #3
 10747 028c 0100000A 		beq	.L686
 10748              		.loc 1 4798 5 discriminator 12
 10749 0290 0130E0E3 		mvn	r3, #1
 10750              		.loc 1 4798 5
 10751 0294 E00000EA 		b	.L672
 10752              	.L686:
 10753              		.loc 1 4798 5 discriminator 13
 10754 0298 34301BE5 		ldr	r3, [fp, #-52]
 10755 029c 7F2003E2 		and	r2, r3, #127
 10756 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10757 02a4 143093E5 		ldr	r3, [r3, #20]
 10758 02a8 030052E1 		cmp	r2, r3
 10759 02ac 0100003A 		bcc	.L687
 10760              		.loc 1 4798 5 discriminator 14
 10761 02b0 0230E0E3 		mvn	r3, #2
 10762              		.loc 1 4798 5
 10763 02b4 D80000EA 		b	.L672
 10764              	.L687:
 10765              		.loc 1 4798 5 discriminator 15
 10766 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10767 02bc 7F3003E2 		and	r3, r3, #127
 10768 02c0 8322A0E1 		lsl	r2, r3, #5
 10769 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10770 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10771 02cc 033082E0 		add	r3, r2, r3
 10772 02d0 0C300BE5 		str	r3, [fp, #-12]
 10773 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10774 02d8 0300A0E1 		mov	r0, r3
 10775 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10776 02e0 14000BE5 		str	r0, [fp, #-20]
 10777              		.loc 1 4798 5 discriminator 1
 10778 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10779 02e8 FF3803E2 		and	r3, r3, #16711680
 10780 02ec 020853E3 		cmp	r3, #131072
 10781 02f0 0100001A 		bne	.L688
 10782              		.loc 1 4798 5 discriminator 16
 10783 02f4 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 275


 10784              		.loc 1 4798 5
 10785 02f8 C70000EA 		b	.L672
 10786              	.L688:
 10787              		.loc 1 4798 5 discriminator 17
 10788 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10789 0300 233CA0E1 		lsr	r3, r3, #24
 10790 0304 030053E3 		cmp	r3, #3
 10791 0308 0100000A 		beq	.L683
 10792              		.loc 1 4798 5 discriminator 18
 10793 030c 0130E0E3 		mvn	r3, #1
 10794              		.loc 1 4798 5
 10795 0310 C10000EA 		b	.L672
 10796              	.L683:
4799:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4800:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4801:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10797              		.loc 1 4801 5 is_stmt 1
 10798 0314 04309BE5 		ldr	r3, [fp, #4]
 10799 0318 803003E2 		and	r3, r3, #128
 10800 031c 000053E3 		cmp	r3, #0
 10801 0320 1C00001A 		bne	.L689
 10802              		.loc 1 4801 5 is_stmt 0 discriminator 1
 10803 0324 28301BE5 		ldr	r3, [fp, #-40]
 10804 0328 142093E5 		ldr	r2, [r3, #20]
 10805 032c 04309BE5 		ldr	r3, [fp, #4]
 10806 0330 030052E1 		cmp	r2, r3
 10807 0334 0100008A 		bhi	.L690
 10808              		.loc 1 4801 5 discriminator 3
 10809 0338 0230E0E3 		mvn	r3, #2
 10810              		.loc 1 4801 5
 10811 033c B60000EA 		b	.L672
 10812              	.L690:
 10813              		.loc 1 4801 5 discriminator 4
 10814 0340 04309BE5 		ldr	r3, [fp, #4]
 10815 0344 8322A0E1 		lsl	r2, r3, #5
 10816 0348 28301BE5 		ldr	r3, [fp, #-40]
 10817 034c 0C3093E5 		ldr	r3, [r3, #12]
 10818 0350 033082E0 		add	r3, r2, r3
 10819 0354 10300BE5 		str	r3, [fp, #-16]
 10820 0358 10301BE5 		ldr	r3, [fp, #-16]
 10821 035c 0300A0E1 		mov	r0, r3
 10822 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10823 0364 14000BE5 		str	r0, [fp, #-20]
 10824              		.loc 1 4801 5 discriminator 1
 10825 0368 14301BE5 		ldr	r3, [fp, #-20]
 10826 036c FF3803E2 		and	r3, r3, #16711680
 10827 0370 020853E3 		cmp	r3, #131072
 10828 0374 0100001A 		bne	.L691
 10829              		.loc 1 4801 5 discriminator 5
 10830 0378 0830E0E3 		mvn	r3, #8
 10831              		.loc 1 4801 5
 10832 037c A60000EA 		b	.L672
 10833              	.L691:
 10834              		.loc 1 4801 5 discriminator 6
 10835 0380 14301BE5 		ldr	r3, [fp, #-20]
 10836 0384 233CA0E1 		lsr	r3, r3, #24
 10837 0388 040053E3 		cmp	r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 276


 10838 038c 3F00000A 		beq	.L692
 10839              		.loc 1 4801 5 discriminator 7
 10840 0390 0130E0E3 		mvn	r3, #1
 10841              		.loc 1 4801 5
 10842 0394 A00000EA 		b	.L672
 10843              	.L689:
 10844              		.loc 1 4801 5 discriminator 2
 10845 0398 04309BE5 		ldr	r3, [fp, #4]
 10846 039c 2324A0E1 		lsr	r2, r3, #8
 10847 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10848 03a4 143093E5 		ldr	r3, [r3, #20]
 10849 03a8 030052E1 		cmp	r2, r3
 10850 03ac 0100003A 		bcc	.L693
 10851              		.loc 1 4801 5 discriminator 8
 10852 03b0 0230E0E3 		mvn	r3, #2
 10853              		.loc 1 4801 5
 10854 03b4 980000EA 		b	.L672
 10855              	.L693:
 10856              		.loc 1 4801 5 discriminator 9
 10857 03b8 04309BE5 		ldr	r3, [fp, #4]
 10858 03bc 2334A0E1 		lsr	r3, r3, #8
 10859 03c0 8322A0E1 		lsl	r2, r3, #5
 10860 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10861 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10862 03cc 033082E0 		add	r3, r2, r3
 10863 03d0 10300BE5 		str	r3, [fp, #-16]
 10864 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10865 03d8 0300A0E1 		mov	r0, r3
 10866 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10867 03e0 14000BE5 		str	r0, [fp, #-20]
 10868              		.loc 1 4801 5 discriminator 1
 10869 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10870 03e8 FF3803E2 		and	r3, r3, #16711680
 10871 03ec 020853E3 		cmp	r3, #131072
 10872 03f0 0100001A 		bne	.L694
 10873              		.loc 1 4801 5 discriminator 10
 10874 03f4 0830E0E3 		mvn	r3, #8
 10875              		.loc 1 4801 5
 10876 03f8 870000EA 		b	.L672
 10877              	.L694:
 10878              		.loc 1 4801 5 discriminator 11
 10879 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10880 0400 233CA0E1 		lsr	r3, r3, #24
 10881 0404 030053E3 		cmp	r3, #3
 10882 0408 0100000A 		beq	.L695
 10883              		.loc 1 4801 5 discriminator 12
 10884 040c 0130E0E3 		mvn	r3, #1
 10885              		.loc 1 4801 5
 10886 0410 810000EA 		b	.L672
 10887              	.L695:
 10888              		.loc 1 4801 5 discriminator 13
 10889 0414 04309BE5 		ldr	r3, [fp, #4]
 10890 0418 7F2003E2 		and	r2, r3, #127
 10891 041c 10301BE5 		ldr	r3, [fp, #-16]
 10892 0420 143093E5 		ldr	r3, [r3, #20]
 10893 0424 030052E1 		cmp	r2, r3
 10894 0428 0100003A 		bcc	.L696
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 277


 10895              		.loc 1 4801 5 discriminator 14
 10896 042c 0230E0E3 		mvn	r3, #2
 10897              		.loc 1 4801 5
 10898 0430 790000EA 		b	.L672
 10899              	.L696:
 10900              		.loc 1 4801 5 discriminator 15
 10901 0434 04309BE5 		ldr	r3, [fp, #4]
 10902 0438 7F3003E2 		and	r3, r3, #127
 10903 043c 8322A0E1 		lsl	r2, r3, #5
 10904 0440 10301BE5 		ldr	r3, [fp, #-16]
 10905 0444 0C3093E5 		ldr	r3, [r3, #12]
 10906 0448 033082E0 		add	r3, r2, r3
 10907 044c 10300BE5 		str	r3, [fp, #-16]
 10908 0450 10301BE5 		ldr	r3, [fp, #-16]
 10909 0454 0300A0E1 		mov	r0, r3
 10910 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10911 045c 14000BE5 		str	r0, [fp, #-20]
 10912              		.loc 1 4801 5 discriminator 1
 10913 0460 14301BE5 		ldr	r3, [fp, #-20]
 10914 0464 FF3803E2 		and	r3, r3, #16711680
 10915 0468 020853E3 		cmp	r3, #131072
 10916 046c 0100001A 		bne	.L697
 10917              		.loc 1 4801 5 discriminator 16
 10918 0470 0830E0E3 		mvn	r3, #8
 10919              		.loc 1 4801 5
 10920 0474 680000EA 		b	.L672
 10921              	.L697:
 10922              		.loc 1 4801 5 discriminator 17
 10923 0478 14301BE5 		ldr	r3, [fp, #-20]
 10924 047c 233CA0E1 		lsr	r3, r3, #24
 10925 0480 040053E3 		cmp	r3, #4
 10926 0484 0100000A 		beq	.L692
 10927              		.loc 1 4801 5 discriminator 18
 10928 0488 0130E0E3 		mvn	r3, #1
 10929              		.loc 1 4801 5
 10930 048c 620000EA 		b	.L672
 10931              	.L692:
4802:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4803:../../Source/Kernel/rme_kernel.c **** #endif
4804:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4805:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10932              		.loc 1 4805 5 is_stmt 1
 10933 0490 08301BE5 		ldr	r3, [fp, #-8]
 10934 0494 083093E5 		ldr	r3, [r3, #8]
 10935 0498 013003E2 		and	r3, r3, #1
 10936 049c 000053E3 		cmp	r3, #0
 10937 04a0 0100001A 		bne	.L698
 10938              		.loc 1 4805 5 is_stmt 0 discriminator 1
 10939 04a4 0630E0E3 		mvn	r3, #6
 10940              		.loc 1 4805 5
 10941 04a8 5B0000EA 		b	.L672
 10942              	.L698:
4806:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10943              		.loc 1 4806 5 is_stmt 1
 10944 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10945 04b0 083093E5 		ldr	r3, [r3, #8]
 10946 04b4 403003E2 		and	r3, r3, #64
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 278


 10947 04b8 000053E3 		cmp	r3, #0
 10948 04bc 0100001A 		bne	.L699
 10949              		.loc 1 4806 5 is_stmt 0 discriminator 1
 10950 04c0 0630E0E3 		mvn	r3, #6
 10951              		.loc 1 4806 5
 10952 04c4 540000EA 		b	.L672
 10953              	.L699:
4807:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4808:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10954              		.loc 1 4808 5 is_stmt 1
 10955 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10956 04cc 083093E5 		ldr	r3, [r3, #8]
 10957 04d0 403003E2 		and	r3, r3, #64
 10958 04d4 000053E3 		cmp	r3, #0
 10959 04d8 0100001A 		bne	.L700
 10960              		.loc 1 4808 5 is_stmt 0 discriminator 1
 10961 04dc 0630E0E3 		mvn	r3, #6
 10962              		.loc 1 4808 5
 10963 04e0 4D0000EA 		b	.L672
 10964              	.L700:
4809:../../Source/Kernel/rme_kernel.c **** #endif
4810:../../Source/Kernel/rme_kernel.c ****     
4811:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4812:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10965              		.loc 1 4812 5 is_stmt 1
 10966 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10967 04e8 142093E5 		ldr	r2, [r3, #20]
 10968 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10969 04f0 030052E1 		cmp	r2, r3
 10970 04f4 0100008A 		bhi	.L701
 10971              		.loc 1 4812 5 is_stmt 0 discriminator 1
 10972 04f8 0230E0E3 		mvn	r3, #2
 10973              		.loc 1 4812 5
 10974 04fc 460000EA 		b	.L672
 10975              	.L701:
 10976              		.loc 1 4812 5 discriminator 2
 10977 0500 30301BE5 		ldr	r3, [fp, #-48]
 10978 0504 8322A0E1 		lsl	r2, r3, #5
 10979 0508 08301BE5 		ldr	r3, [fp, #-8]
 10980 050c 0C3093E5 		ldr	r3, [r3, #12]
 10981 0510 033082E0 		add	r3, r2, r3
 10982 0514 18300BE5 		str	r3, [fp, #-24]
4813:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4814:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10983              		.loc 1 4814 5 is_stmt 1
 10984 0518 18301BE5 		ldr	r3, [fp, #-24]
 10985 051c 0128A0E3 		mov	r2, #65536
 10986 0520 0010A0E3 		mov	r1, #0
 10987 0524 0300A0E1 		mov	r0, r3
 10988 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10989 052c 0030A0E1 		mov	r3, r0
 10990              		.loc 1 4814 5 is_stmt 0 discriminator 1
 10991 0530 000053E3 		cmp	r3, #0
 10992 0534 0100001A 		bne	.L702
 10993 0538 0430E0E3 		mvn	r3, #4
 10994              		.loc 1 4814 5
 10995 053c 360000EA 		b	.L672
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 279


 10996              	.L702:
 10997              		.loc 1 4814 5 discriminator 2
 10998 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10999 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 11000 0548 002093E5 		ldr	r2, [r3]
 11001 054c 18301BE5 		ldr	r3, [fp, #-24]
 11002 0550 102083E5 		str	r2, [r3, #16]
4815:../../Source/Kernel/rme_kernel.c ****     
4816:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4817:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=0U;
 11003              		.loc 1 4817 27 is_stmt 1
 11004 0554 18301BE5 		ldr	r3, [fp, #-24]
 11005 0558 0020A0E3 		mov	r2, #0
 11006 055c 042083E5 		str	r2, [r3, #4]
4818:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 11007              		.loc 1 4818 25
 11008 0560 18301BE5 		ldr	r3, [fp, #-24]
 11009 0564 0020A0E3 		mov	r2, #0
 11010 0568 0C2083E5 		str	r2, [r3, #12]
4819:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_ALL;
 11011              		.loc 1 4819 23
 11012 056c 18301BE5 		ldr	r3, [fp, #-24]
 11013 0570 0F20A0E3 		mov	r2, #15
 11014 0574 082083E5 		str	r2, [r3, #8]
4820:../../Source/Kernel/rme_kernel.c ****     
4821:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4822:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 11015              		.loc 1 4822 13
 11016 0578 0C301BE5 		ldr	r3, [fp, #-12]
 11017 057c 003093E5 		ldr	r3, [r3]
 11018 0580 7330FFE6 		uxth	r3, r3
 11019 0584 000053E3 		cmp	r3, #0
 11020 0588 0200000A 		beq	.L703
 11021              		.loc 1 4822 13 is_stmt 0 discriminator 1
 11022 058c 0C301BE5 		ldr	r3, [fp, #-12]
 11023 0590 043093E5 		ldr	r3, [r3, #4]
 11024 0594 000000EA 		b	.L704
 11025              	.L703:
 11026              		.loc 1 4822 13 discriminator 2
 11027 0598 0C301BE5 		ldr	r3, [fp, #-12]
 11028              	.L704:
 11029              		.loc 1 4822 12 is_stmt 1 discriminator 4
 11030 059c 1C300BE5 		str	r3, [fp, #-28]
4823:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4824:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 11031              		.loc 1 4824 13
 11032 05a0 10301BE5 		ldr	r3, [fp, #-16]
 11033 05a4 003093E5 		ldr	r3, [r3]
 11034 05a8 7330FFE6 		uxth	r3, r3
 11035 05ac 000053E3 		cmp	r3, #0
 11036 05b0 0200000A 		beq	.L705
 11037              		.loc 1 4824 13 is_stmt 0 discriminator 1
 11038 05b4 10301BE5 		ldr	r3, [fp, #-16]
 11039 05b8 043093E5 		ldr	r3, [r3, #4]
 11040 05bc 000000EA 		b	.L706
 11041              	.L705:
 11042              		.loc 1 4824 13 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 280


 11043 05c0 10301BE5 		ldr	r3, [fp, #-16]
 11044              	.L706:
 11045              		.loc 1 4824 12 is_stmt 1 discriminator 4
 11046 05c4 20300BE5 		str	r3, [fp, #-32]
4825:../../Source/Kernel/rme_kernel.c **** #endif
4826:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 11047              		.loc 1 4826 17
 11048 05c8 18301BE5 		ldr	r3, [fp, #-24]
 11049 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 11050 05d0 142083E5 		str	r2, [r3, #20]
4827:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4828:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 11051              		.loc 1 4828 17
 11052 05d4 18301BE5 		ldr	r3, [fp, #-24]
 11053 05d8 20201BE5 		ldr	r2, [fp, #-32]
 11054 05dc 182083E5 		str	r2, [r3, #24]
4829:../../Source/Kernel/rme_kernel.c **** #else
4830:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4831:../../Source/Kernel/rme_kernel.c **** #endif
4832:../../Source/Kernel/rme_kernel.c ****     
4833:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4834:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 11055              		.loc 1 4834 5
 11056 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 11057 05e4 043083E2 		add	r3, r3, #4
 11058 05e8 0110A0E3 		mov	r1, #1
 11059 05ec 0300A0E1 		mov	r0, r3
 11060 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4835:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4836:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 11061              		.loc 1 4836 5
 11062 05f4 20301BE5 		ldr	r3, [fp, #-32]
 11063 05f8 043083E2 		add	r3, r3, #4
 11064 05fc 0110A0E3 		mov	r1, #1
 11065 0600 0300A0E1 		mov	r0, r3
 11066 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4837:../../Source/Kernel/rme_kernel.c **** #endif
4838:../../Source/Kernel/rme_kernel.c **** 
4839:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4840:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 11067              		.loc 1 4840 5
 11068 0608 18301BE5 		ldr	r3, [fp, #-24]
 11069 060c 0514A0E3 		mov	r1, #83886080
 11070 0610 0300A0E1 		mov	r0, r3
 11071 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4841:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4842:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4843:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4844:../../Source/Kernel/rme_kernel.c **** 
4845:../../Source/Kernel/rme_kernel.c ****     return 0;
 11072              		.loc 1 4845 12
 11073 0618 0030A0E3 		mov	r3, #0
 11074              	.L672:
4846:../../Source/Kernel/rme_kernel.c **** }
 11075              		.loc 1 4846 1
 11076 061c 0300A0E1 		mov	r0, r3
 11077 0620 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 281


 11078              		.cfi_def_cfa 13, 8
 11079              		@ sp needed
 11080 0624 0088BDE8 		pop	{fp, pc}
 11081              		.cfi_endproc
 11082              	.LFE51:
 11084              		.section	.text._RME_Prc_Del,"ax",%progbits
 11085              		.align	2
 11086              		.syntax unified
 11087              		.arm
 11089              	_RME_Prc_Del:
 11090              	.LFB52:
4847:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Crt *************************************************/
4848:../../Source/Kernel/rme_kernel.c **** 
4849:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Del ******************************************************
4850:../../Source/Kernel/rme_kernel.c **** Description : Delete a process.
4851:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
4852:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
4853:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4854:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process.
4855:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4856:../../Source/Kernel/rme_kernel.c **** Output      : None.
4857:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4858:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4859:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Del(struct RME_Cap_Cpt* Cpt,
4860:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4861:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc)
4862:../../Source/Kernel/rme_kernel.c **** {
 11091              		.loc 1 4862 1
 11092              		.cfi_startproc
 11093              		@ args = 0, pretend = 0, frame = 40
 11094              		@ frame_needed = 1, uses_anonymous_args = 0
 11095 0000 00482DE9 		push	{fp, lr}
 11096              		.cfi_def_cfa_offset 8
 11097              		.cfi_offset 11, -8
 11098              		.cfi_offset 14, -4
 11099 0004 04B08DE2 		add	fp, sp, #4
 11100              		.cfi_def_cfa 11, 4
 11101 0008 28D04DE2 		sub	sp, sp, #40
 11102 000c 20000BE5 		str	r0, [fp, #-32]
 11103 0010 24100BE5 		str	r1, [fp, #-36]
 11104 0014 28200BE5 		str	r2, [fp, #-40]
4863:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4864:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Del;
4865:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4866:../../Source/Kernel/rme_kernel.c ****     /* For deletion use */
4867:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4868:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4869:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4870:../../Source/Kernel/rme_kernel.c **** #endif
4871:../../Source/Kernel/rme_kernel.c **** 
4872:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4873:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11105              		.loc 1 4873 5
 11106 0018 24301BE5 		ldr	r3, [fp, #-36]
 11107 001c 803003E2 		and	r3, r3, #128
 11108 0020 000053E3 		cmp	r3, #0
 11109 0024 1C00001A 		bne	.L708
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 282


 11110              		.loc 1 4873 5 is_stmt 0 discriminator 1
 11111 0028 20301BE5 		ldr	r3, [fp, #-32]
 11112 002c 142093E5 		ldr	r2, [r3, #20]
 11113 0030 24301BE5 		ldr	r3, [fp, #-36]
 11114 0034 030052E1 		cmp	r2, r3
 11115 0038 0100008A 		bhi	.L709
 11116              		.loc 1 4873 5 discriminator 3
 11117 003c 0230E0E3 		mvn	r3, #2
 11118              		.loc 1 4873 5
 11119 0040 BC0000EA 		b	.L710
 11120              	.L709:
 11121              		.loc 1 4873 5 discriminator 4
 11122 0044 24301BE5 		ldr	r3, [fp, #-36]
 11123 0048 8322A0E1 		lsl	r2, r3, #5
 11124 004c 20301BE5 		ldr	r3, [fp, #-32]
 11125 0050 0C3093E5 		ldr	r3, [r3, #12]
 11126 0054 033082E0 		add	r3, r2, r3
 11127 0058 08300BE5 		str	r3, [fp, #-8]
 11128 005c 08301BE5 		ldr	r3, [fp, #-8]
 11129 0060 0300A0E1 		mov	r0, r3
 11130 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11131 0068 0C000BE5 		str	r0, [fp, #-12]
 11132              		.loc 1 4873 5 discriminator 1
 11133 006c 0C301BE5 		ldr	r3, [fp, #-12]
 11134 0070 FF3803E2 		and	r3, r3, #16711680
 11135 0074 020853E3 		cmp	r3, #131072
 11136 0078 0100001A 		bne	.L711
 11137              		.loc 1 4873 5 discriminator 5
 11138 007c 0830E0E3 		mvn	r3, #8
 11139              		.loc 1 4873 5
 11140 0080 AC0000EA 		b	.L710
 11141              	.L711:
 11142              		.loc 1 4873 5 discriminator 6
 11143 0084 0C301BE5 		ldr	r3, [fp, #-12]
 11144 0088 233CA0E1 		lsr	r3, r3, #24
 11145 008c 030053E3 		cmp	r3, #3
 11146 0090 3F00000A 		beq	.L712
 11147              		.loc 1 4873 5 discriminator 7
 11148 0094 0130E0E3 		mvn	r3, #1
 11149              		.loc 1 4873 5
 11150 0098 A60000EA 		b	.L710
 11151              	.L708:
 11152              		.loc 1 4873 5 discriminator 2
 11153 009c 24301BE5 		ldr	r3, [fp, #-36]
 11154 00a0 2324A0E1 		lsr	r2, r3, #8
 11155 00a4 20301BE5 		ldr	r3, [fp, #-32]
 11156 00a8 143093E5 		ldr	r3, [r3, #20]
 11157 00ac 030052E1 		cmp	r2, r3
 11158 00b0 0100003A 		bcc	.L713
 11159              		.loc 1 4873 5 discriminator 8
 11160 00b4 0230E0E3 		mvn	r3, #2
 11161              		.loc 1 4873 5
 11162 00b8 9E0000EA 		b	.L710
 11163              	.L713:
 11164              		.loc 1 4873 5 discriminator 9
 11165 00bc 24301BE5 		ldr	r3, [fp, #-36]
 11166 00c0 2334A0E1 		lsr	r3, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 283


 11167 00c4 8322A0E1 		lsl	r2, r3, #5
 11168 00c8 20301BE5 		ldr	r3, [fp, #-32]
 11169 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11170 00d0 033082E0 		add	r3, r2, r3
 11171 00d4 08300BE5 		str	r3, [fp, #-8]
 11172 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11173 00dc 0300A0E1 		mov	r0, r3
 11174 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11175 00e4 0C000BE5 		str	r0, [fp, #-12]
 11176              		.loc 1 4873 5 discriminator 1
 11177 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 11178 00ec FF3803E2 		and	r3, r3, #16711680
 11179 00f0 020853E3 		cmp	r3, #131072
 11180 00f4 0100001A 		bne	.L714
 11181              		.loc 1 4873 5 discriminator 10
 11182 00f8 0830E0E3 		mvn	r3, #8
 11183              		.loc 1 4873 5
 11184 00fc 8D0000EA 		b	.L710
 11185              	.L714:
 11186              		.loc 1 4873 5 discriminator 11
 11187 0100 0C301BE5 		ldr	r3, [fp, #-12]
 11188 0104 233CA0E1 		lsr	r3, r3, #24
 11189 0108 030053E3 		cmp	r3, #3
 11190 010c 0100000A 		beq	.L715
 11191              		.loc 1 4873 5 discriminator 12
 11192 0110 0130E0E3 		mvn	r3, #1
 11193              		.loc 1 4873 5
 11194 0114 870000EA 		b	.L710
 11195              	.L715:
 11196              		.loc 1 4873 5 discriminator 13
 11197 0118 24301BE5 		ldr	r3, [fp, #-36]
 11198 011c 7F2003E2 		and	r2, r3, #127
 11199 0120 08301BE5 		ldr	r3, [fp, #-8]
 11200 0124 143093E5 		ldr	r3, [r3, #20]
 11201 0128 030052E1 		cmp	r2, r3
 11202 012c 0100003A 		bcc	.L716
 11203              		.loc 1 4873 5 discriminator 14
 11204 0130 0230E0E3 		mvn	r3, #2
 11205              		.loc 1 4873 5
 11206 0134 7F0000EA 		b	.L710
 11207              	.L716:
 11208              		.loc 1 4873 5 discriminator 15
 11209 0138 24301BE5 		ldr	r3, [fp, #-36]
 11210 013c 7F3003E2 		and	r3, r3, #127
 11211 0140 8322A0E1 		lsl	r2, r3, #5
 11212 0144 08301BE5 		ldr	r3, [fp, #-8]
 11213 0148 0C3093E5 		ldr	r3, [r3, #12]
 11214 014c 033082E0 		add	r3, r2, r3
 11215 0150 08300BE5 		str	r3, [fp, #-8]
 11216 0154 08301BE5 		ldr	r3, [fp, #-8]
 11217 0158 0300A0E1 		mov	r0, r3
 11218 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11219 0160 0C000BE5 		str	r0, [fp, #-12]
 11220              		.loc 1 4873 5 discriminator 1
 11221 0164 0C301BE5 		ldr	r3, [fp, #-12]
 11222 0168 FF3803E2 		and	r3, r3, #16711680
 11223 016c 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 284


 11224 0170 0100001A 		bne	.L717
 11225              		.loc 1 4873 5 discriminator 16
 11226 0174 0830E0E3 		mvn	r3, #8
 11227              		.loc 1 4873 5
 11228 0178 6E0000EA 		b	.L710
 11229              	.L717:
 11230              		.loc 1 4873 5 discriminator 17
 11231 017c 0C301BE5 		ldr	r3, [fp, #-12]
 11232 0180 233CA0E1 		lsr	r3, r3, #24
 11233 0184 030053E3 		cmp	r3, #3
 11234 0188 0100000A 		beq	.L712
 11235              		.loc 1 4873 5 discriminator 18
 11236 018c 0130E0E3 		mvn	r3, #1
 11237              		.loc 1 4873 5
 11238 0190 680000EA 		b	.L710
 11239              	.L712:
4874:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
4875:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4876:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 11240              		.loc 1 4876 5 is_stmt 1
 11241 0194 08301BE5 		ldr	r3, [fp, #-8]
 11242 0198 083093E5 		ldr	r3, [r3, #8]
 11243 019c 023003E2 		and	r3, r3, #2
 11244 01a0 000053E3 		cmp	r3, #0
 11245 01a4 0100001A 		bne	.L718
 11246              		.loc 1 4876 5 is_stmt 0 discriminator 1
 11247 01a8 0630E0E3 		mvn	r3, #6
 11248              		.loc 1 4876 5
 11249 01ac 610000EA 		b	.L710
 11250              	.L718:
4877:../../Source/Kernel/rme_kernel.c **** 
4878:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4879:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Prc,struct RME_Cap_Prc*,Prc_Del);
 11251              		.loc 1 4879 5 is_stmt 1
 11252 01b0 08301BE5 		ldr	r3, [fp, #-8]
 11253 01b4 142093E5 		ldr	r2, [r3, #20]
 11254 01b8 28301BE5 		ldr	r3, [fp, #-40]
 11255 01bc 030052E1 		cmp	r2, r3
 11256 01c0 0100008A 		bhi	.L719
 11257              		.loc 1 4879 5 is_stmt 0 discriminator 1
 11258 01c4 0230E0E3 		mvn	r3, #2
 11259              		.loc 1 4879 5
 11260 01c8 5A0000EA 		b	.L710
 11261              	.L719:
 11262              		.loc 1 4879 5 discriminator 2
 11263 01cc 28301BE5 		ldr	r3, [fp, #-40]
 11264 01d0 8322A0E1 		lsl	r2, r3, #5
 11265 01d4 08301BE5 		ldr	r3, [fp, #-8]
 11266 01d8 0C3093E5 		ldr	r3, [r3, #12]
 11267 01dc 033082E0 		add	r3, r2, r3
 11268 01e0 10300BE5 		str	r3, [fp, #-16]
4880:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
4881:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Prc_Del,Type_Stat,RME_CAP_TYPE_PRC);
 11269              		.loc 1 4881 5 is_stmt 1
 11270 01e4 10301BE5 		ldr	r3, [fp, #-16]
 11271 01e8 0300A0E1 		mov	r0, r3
 11272 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 285


 11273 01f0 0C000BE5 		str	r0, [fp, #-12]
 11274              		.loc 1 4881 5 is_stmt 0 discriminator 1
 11275 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 11276 01f8 FF3803E2 		and	r3, r3, #16711680
 11277 01fc 020853E3 		cmp	r3, #131072
 11278 0200 0100000A 		beq	.L720
 11279 0204 0830E0E3 		mvn	r3, #8
 11280              		.loc 1 4881 5
 11281 0208 4A0000EA 		b	.L710
 11282              	.L720:
 11283              		.loc 1 4881 5 discriminator 2
 11284 020c 0C301BE5 		ldr	r3, [fp, #-12]
 11285 0210 233CA0E1 		lsr	r3, r3, #24
 11286 0214 050053E3 		cmp	r3, #5
 11287 0218 0100000A 		beq	.L721
 11288              		.loc 1 4881 5 discriminator 3
 11289 021c 0130E0E3 		mvn	r3, #1
 11290              		.loc 1 4881 5
 11291 0220 440000EA 		b	.L710
 11292              	.L721:
 11293              		.loc 1 4881 5 discriminator 4
 11294 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 11295 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 11296 022c 002093E5 		ldr	r2, [r3]
 11297 0230 10301BE5 		ldr	r3, [fp, #-16]
 11298 0234 103093E5 		ldr	r3, [r3, #16]
 11299 0238 0310A0E1 		mov	r1, r3
 11300 023c 0200A0E1 		mov	r0, r2
 11301 0240 FEFFFFEB 		bl	_RME_Diff
 11302 0244 0030A0E1 		mov	r3, r0
 11303              		.loc 1 4881 5 discriminator 1
 11304 0248 0A0053E3 		cmp	r3, #10
 11305 024c 0100008A 		bhi	.L722
 11306              		.loc 1 4881 5 discriminator 5
 11307 0250 0730E0E3 		mvn	r3, #7
 11308              		.loc 1 4881 5
 11309 0254 370000EA 		b	.L710
 11310              	.L722:
 11311              		.loc 1 4881 5 discriminator 6
 11312 0258 10301BE5 		ldr	r3, [fp, #-16]
 11313 025c 043093E5 		ldr	r3, [r3, #4]
 11314 0260 000053E3 		cmp	r3, #0
 11315 0264 0B00000A 		beq	.L723
 11316              		.loc 1 4881 5 discriminator 7
 11317 0268 0C301BE5 		ldr	r3, [fp, #-12]
 11318 026c 7330FFE6 		uxth	r3, r3
 11319 0270 000053E3 		cmp	r3, #0
 11320 0274 0500001A 		bne	.L724
 11321              		.loc 1 4881 5 discriminator 9
 11322 0278 10001BE5 		ldr	r0, [fp, #-16]
 11323 027c 0C301BE5 		ldr	r3, [fp, #-12]
 11324 0280 FF38C3E3 		bic	r3, r3, #16711680
 11325 0284 0320A0E1 		mov	r2, r3
 11326 0288 0C101BE5 		ldr	r1, [fp, #-12]
 11327 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11328              	.L724:
 11329              		.loc 1 4881 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 286


 11330 0290 0530E0E3 		mvn	r3, #5
 11331              		.loc 1 4881 5
 11332 0294 270000EA 		b	.L710
 11333              	.L723:
 11334              		.loc 1 4881 5 discriminator 8
 11335 0298 0C301BE5 		ldr	r3, [fp, #-12]
 11336 029c 7330FFE6 		uxth	r3, r3
 11337 02a0 000053E3 		cmp	r3, #0
 11338 02a4 0800000A 		beq	.L725
 11339              		.loc 1 4881 5 discriminator 12
 11340 02a8 003000E3 		movw	r3, #:lower16:.LC6
 11341 02ac 003040E3 		movt	r3, #:upper16:.LC6
 11342 02b0 002000E3 		movw	r2, #:lower16:.LC7
 11343 02b4 002040E3 		movt	r2, #:upper16:.LC7
 11344 02b8 111301E3 		movw	r1, #4881
 11345 02bc 000000E3 		movw	r0, #:lower16:.LC8
 11346 02c0 000040E3 		movt	r0, #:upper16:.LC8
 11347 02c4 FEFFFFEB 		bl	RME_Log
 11348              	.L726:
 11349              		.loc 1 4881 5
 11350 02c8 FEFFFFEA 		b	.L726
 11351              	.L725:
4882:../../Source/Kernel/rme_kernel.c **** 
4883:../../Source/Kernel/rme_kernel.c ****     /* Remember for deletion */
4884:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=Prc_Del->Cpt;
 11352              		.loc 1 4884 12 is_stmt 1
 11353 02cc 10301BE5 		ldr	r3, [fp, #-16]
 11354 02d0 143093E5 		ldr	r3, [r3, #20]
 11355 02d4 14300BE5 		str	r3, [fp, #-20]
4885:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4886:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=Prc_Del->Pgt;
 11356              		.loc 1 4886 12
 11357 02d8 10301BE5 		ldr	r3, [fp, #-16]
 11358 02dc 183093E5 		ldr	r3, [r3, #24]
 11359 02e0 18300BE5 		str	r3, [fp, #-24]
4887:../../Source/Kernel/rme_kernel.c **** #endif
4888:../../Source/Kernel/rme_kernel.c **** 
4889:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
4890:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Prc_Del,Type_Stat);
 11360              		.loc 1 4890 5
 11361 02e4 10301BE5 		ldr	r3, [fp, #-16]
 11362 02e8 0020A0E3 		mov	r2, #0
 11363 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 11364 02f0 0300A0E1 		mov	r0, r3
 11365 02f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11366 02f8 0030A0E1 		mov	r3, r0
 11367              		.loc 1 4890 5 is_stmt 0 discriminator 1
 11368 02fc 000053E3 		cmp	r3, #0
 11369 0300 0100001A 		bne	.L727
 11370 0304 0030E0E3 		mvn	r3, #0
 11371              		.loc 1 4890 5
 11372 0308 0A0000EA 		b	.L710
 11373              	.L727:
4891:../../Source/Kernel/rme_kernel.c **** 
4892:../../Source/Kernel/rme_kernel.c ****     /* Dereference caps */
4893:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),-1);
 11374              		.loc 1 4893 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 287


 11375 030c 14301BE5 		ldr	r3, [fp, #-20]
 11376 0310 043083E2 		add	r3, r3, #4
 11377 0314 0010E0E3 		mvn	r1, #0
 11378 0318 0300A0E1 		mov	r0, r3
 11379 031c FEFFFFEB 		bl	_RME_Fetch_Add_Single
4894:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4895:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),-1);
 11380              		.loc 1 4895 5
 11381 0320 18301BE5 		ldr	r3, [fp, #-24]
 11382 0324 043083E2 		add	r3, r3, #4
 11383 0328 0010E0E3 		mvn	r1, #0
 11384 032c 0300A0E1 		mov	r0, r3
 11385 0330 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4896:../../Source/Kernel/rme_kernel.c **** #endif
4897:../../Source/Kernel/rme_kernel.c ****     
4898:../../Source/Kernel/rme_kernel.c ****     return 0;
 11386              		.loc 1 4898 12
 11387 0334 0030A0E3 		mov	r3, #0
 11388              	.L710:
4899:../../Source/Kernel/rme_kernel.c **** }
 11389              		.loc 1 4899 1
 11390 0338 0300A0E1 		mov	r0, r3
 11391 033c 04D04BE2 		sub	sp, fp, #4
 11392              		.cfi_def_cfa 13, 8
 11393              		@ sp needed
 11394 0340 0088BDE8 		pop	{fp, pc}
 11395              		.cfi_endproc
 11396              	.LFE52:
 11398              		.section	.text._RME_Prc_Cpt,"ax",%progbits
 11399              		.align	2
 11400              		.syntax unified
 11401              		.arm
 11403              	_RME_Prc_Cpt:
 11404              	.LFB53:
4900:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Del *************************************************/
4901:../../Source/Kernel/rme_kernel.c **** 
4902:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Cpt ******************************************************
4903:../../Source/Kernel/rme_kernel.c **** Description : Change a process's capability table.
4904:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4905:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4906:../../Source/Kernel/rme_kernel.c ****                                   created already.
4907:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4908:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4909:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4910:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4911:../../Source/Kernel/rme_kernel.c **** Output      : None.
4912:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4913:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4914:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Cpt(struct RME_Cap_Cpt* Cpt,
4915:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4916:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt)
4917:../../Source/Kernel/rme_kernel.c **** {
 11405              		.loc 1 4917 1
 11406              		.cfi_startproc
 11407              		@ args = 0, pretend = 0, frame = 32
 11408              		@ frame_needed = 1, uses_anonymous_args = 0
 11409 0000 00482DE9 		push	{fp, lr}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 288


 11410              		.cfi_def_cfa_offset 8
 11411              		.cfi_offset 11, -8
 11412              		.cfi_offset 14, -4
 11413 0004 04B08DE2 		add	fp, sp, #4
 11414              		.cfi_def_cfa 11, 4
 11415 0008 20D04DE2 		sub	sp, sp, #32
 11416 000c 18000BE5 		str	r0, [fp, #-24]
 11417 0010 1C100BE5 		str	r1, [fp, #-28]
 11418 0014 20200BE5 		str	r2, [fp, #-32]
4918:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4919:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_New;
4920:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Old;
4921:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4922:../../Source/Kernel/rme_kernel.c ****     
4923:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4924:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11419              		.loc 1 4924 5
 11420 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11421 001c 803003E2 		and	r3, r3, #128
 11422 0020 000053E3 		cmp	r3, #0
 11423 0024 1C00001A 		bne	.L729
 11424              		.loc 1 4924 5 is_stmt 0 discriminator 1
 11425 0028 18301BE5 		ldr	r3, [fp, #-24]
 11426 002c 142093E5 		ldr	r2, [r3, #20]
 11427 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11428 0034 030052E1 		cmp	r2, r3
 11429 0038 0100008A 		bhi	.L730
 11430              		.loc 1 4924 5 discriminator 3
 11431 003c 0230E0E3 		mvn	r3, #2
 11432              		.loc 1 4924 5
 11433 0040 E30000EA 		b	.L731
 11434              	.L730:
 11435              		.loc 1 4924 5 discriminator 4
 11436 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11437 0048 8322A0E1 		lsl	r2, r3, #5
 11438 004c 18301BE5 		ldr	r3, [fp, #-24]
 11439 0050 0C3093E5 		ldr	r3, [r3, #12]
 11440 0054 033082E0 		add	r3, r2, r3
 11441 0058 08300BE5 		str	r3, [fp, #-8]
 11442 005c 08301BE5 		ldr	r3, [fp, #-8]
 11443 0060 0300A0E1 		mov	r0, r3
 11444 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11445 0068 10000BE5 		str	r0, [fp, #-16]
 11446              		.loc 1 4924 5 discriminator 1
 11447 006c 10301BE5 		ldr	r3, [fp, #-16]
 11448 0070 FF3803E2 		and	r3, r3, #16711680
 11449 0074 020853E3 		cmp	r3, #131072
 11450 0078 0100001A 		bne	.L732
 11451              		.loc 1 4924 5 discriminator 5
 11452 007c 0830E0E3 		mvn	r3, #8
 11453              		.loc 1 4924 5
 11454 0080 D30000EA 		b	.L731
 11455              	.L732:
 11456              		.loc 1 4924 5 discriminator 6
 11457 0084 10301BE5 		ldr	r3, [fp, #-16]
 11458 0088 233CA0E1 		lsr	r3, r3, #24
 11459 008c 050053E3 		cmp	r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 289


 11460 0090 3F00000A 		beq	.L733
 11461              		.loc 1 4924 5 discriminator 7
 11462 0094 0130E0E3 		mvn	r3, #1
 11463              		.loc 1 4924 5
 11464 0098 CD0000EA 		b	.L731
 11465              	.L729:
 11466              		.loc 1 4924 5 discriminator 2
 11467 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11468 00a0 2324A0E1 		lsr	r2, r3, #8
 11469 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11470 00a8 143093E5 		ldr	r3, [r3, #20]
 11471 00ac 030052E1 		cmp	r2, r3
 11472 00b0 0100003A 		bcc	.L734
 11473              		.loc 1 4924 5 discriminator 8
 11474 00b4 0230E0E3 		mvn	r3, #2
 11475              		.loc 1 4924 5
 11476 00b8 C50000EA 		b	.L731
 11477              	.L734:
 11478              		.loc 1 4924 5 discriminator 9
 11479 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11480 00c0 2334A0E1 		lsr	r3, r3, #8
 11481 00c4 8322A0E1 		lsl	r2, r3, #5
 11482 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11483 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11484 00d0 033082E0 		add	r3, r2, r3
 11485 00d4 08300BE5 		str	r3, [fp, #-8]
 11486 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11487 00dc 0300A0E1 		mov	r0, r3
 11488 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11489 00e4 10000BE5 		str	r0, [fp, #-16]
 11490              		.loc 1 4924 5 discriminator 1
 11491 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11492 00ec FF3803E2 		and	r3, r3, #16711680
 11493 00f0 020853E3 		cmp	r3, #131072
 11494 00f4 0100001A 		bne	.L735
 11495              		.loc 1 4924 5 discriminator 10
 11496 00f8 0830E0E3 		mvn	r3, #8
 11497              		.loc 1 4924 5
 11498 00fc B40000EA 		b	.L731
 11499              	.L735:
 11500              		.loc 1 4924 5 discriminator 11
 11501 0100 10301BE5 		ldr	r3, [fp, #-16]
 11502 0104 233CA0E1 		lsr	r3, r3, #24
 11503 0108 030053E3 		cmp	r3, #3
 11504 010c 0100000A 		beq	.L736
 11505              		.loc 1 4924 5 discriminator 12
 11506 0110 0130E0E3 		mvn	r3, #1
 11507              		.loc 1 4924 5
 11508 0114 AE0000EA 		b	.L731
 11509              	.L736:
 11510              		.loc 1 4924 5 discriminator 13
 11511 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11512 011c 7F2003E2 		and	r2, r3, #127
 11513 0120 08301BE5 		ldr	r3, [fp, #-8]
 11514 0124 143093E5 		ldr	r3, [r3, #20]
 11515 0128 030052E1 		cmp	r2, r3
 11516 012c 0100003A 		bcc	.L737
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 290


 11517              		.loc 1 4924 5 discriminator 14
 11518 0130 0230E0E3 		mvn	r3, #2
 11519              		.loc 1 4924 5
 11520 0134 A60000EA 		b	.L731
 11521              	.L737:
 11522              		.loc 1 4924 5 discriminator 15
 11523 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11524 013c 7F3003E2 		and	r3, r3, #127
 11525 0140 8322A0E1 		lsl	r2, r3, #5
 11526 0144 08301BE5 		ldr	r3, [fp, #-8]
 11527 0148 0C3093E5 		ldr	r3, [r3, #12]
 11528 014c 033082E0 		add	r3, r2, r3
 11529 0150 08300BE5 		str	r3, [fp, #-8]
 11530 0154 08301BE5 		ldr	r3, [fp, #-8]
 11531 0158 0300A0E1 		mov	r0, r3
 11532 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11533 0160 10000BE5 		str	r0, [fp, #-16]
 11534              		.loc 1 4924 5 discriminator 1
 11535 0164 10301BE5 		ldr	r3, [fp, #-16]
 11536 0168 FF3803E2 		and	r3, r3, #16711680
 11537 016c 020853E3 		cmp	r3, #131072
 11538 0170 0100001A 		bne	.L738
 11539              		.loc 1 4924 5 discriminator 16
 11540 0174 0830E0E3 		mvn	r3, #8
 11541              		.loc 1 4924 5
 11542 0178 950000EA 		b	.L731
 11543              	.L738:
 11544              		.loc 1 4924 5 discriminator 17
 11545 017c 10301BE5 		ldr	r3, [fp, #-16]
 11546 0180 233CA0E1 		lsr	r3, r3, #24
 11547 0184 050053E3 		cmp	r3, #5
 11548 0188 0100000A 		beq	.L733
 11549              		.loc 1 4924 5 discriminator 18
 11550 018c 0130E0E3 		mvn	r3, #1
 11551              		.loc 1 4924 5
 11552 0190 8F0000EA 		b	.L731
 11553              	.L733:
4925:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4926:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11554              		.loc 1 4926 5 is_stmt 1
 11555 0194 20301BE5 		ldr	r3, [fp, #-32]
 11556 0198 803003E2 		and	r3, r3, #128
 11557 019c 000053E3 		cmp	r3, #0
 11558 01a0 1C00001A 		bne	.L739
 11559              		.loc 1 4926 5 is_stmt 0 discriminator 1
 11560 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11561 01a8 142093E5 		ldr	r2, [r3, #20]
 11562 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11563 01b0 030052E1 		cmp	r2, r3
 11564 01b4 0100008A 		bhi	.L740
 11565              		.loc 1 4926 5 discriminator 3
 11566 01b8 0230E0E3 		mvn	r3, #2
 11567              		.loc 1 4926 5
 11568 01bc 840000EA 		b	.L731
 11569              	.L740:
 11570              		.loc 1 4926 5 discriminator 4
 11571 01c0 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 291


 11572 01c4 8322A0E1 		lsl	r2, r3, #5
 11573 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11574 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11575 01d0 033082E0 		add	r3, r2, r3
 11576 01d4 0C300BE5 		str	r3, [fp, #-12]
 11577 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11578 01dc 0300A0E1 		mov	r0, r3
 11579 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11580 01e4 10000BE5 		str	r0, [fp, #-16]
 11581              		.loc 1 4926 5 discriminator 1
 11582 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11583 01ec FF3803E2 		and	r3, r3, #16711680
 11584 01f0 020853E3 		cmp	r3, #131072
 11585 01f4 0100001A 		bne	.L741
 11586              		.loc 1 4926 5 discriminator 5
 11587 01f8 0830E0E3 		mvn	r3, #8
 11588              		.loc 1 4926 5
 11589 01fc 740000EA 		b	.L731
 11590              	.L741:
 11591              		.loc 1 4926 5 discriminator 6
 11592 0200 10301BE5 		ldr	r3, [fp, #-16]
 11593 0204 233CA0E1 		lsr	r3, r3, #24
 11594 0208 030053E3 		cmp	r3, #3
 11595 020c 3F00000A 		beq	.L742
 11596              		.loc 1 4926 5 discriminator 7
 11597 0210 0130E0E3 		mvn	r3, #1
 11598              		.loc 1 4926 5
 11599 0214 6E0000EA 		b	.L731
 11600              	.L739:
 11601              		.loc 1 4926 5 discriminator 2
 11602 0218 20301BE5 		ldr	r3, [fp, #-32]
 11603 021c 2324A0E1 		lsr	r2, r3, #8
 11604 0220 18301BE5 		ldr	r3, [fp, #-24]
 11605 0224 143093E5 		ldr	r3, [r3, #20]
 11606 0228 030052E1 		cmp	r2, r3
 11607 022c 0100003A 		bcc	.L743
 11608              		.loc 1 4926 5 discriminator 8
 11609 0230 0230E0E3 		mvn	r3, #2
 11610              		.loc 1 4926 5
 11611 0234 660000EA 		b	.L731
 11612              	.L743:
 11613              		.loc 1 4926 5 discriminator 9
 11614 0238 20301BE5 		ldr	r3, [fp, #-32]
 11615 023c 2334A0E1 		lsr	r3, r3, #8
 11616 0240 8322A0E1 		lsl	r2, r3, #5
 11617 0244 18301BE5 		ldr	r3, [fp, #-24]
 11618 0248 0C3093E5 		ldr	r3, [r3, #12]
 11619 024c 033082E0 		add	r3, r2, r3
 11620 0250 0C300BE5 		str	r3, [fp, #-12]
 11621 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11622 0258 0300A0E1 		mov	r0, r3
 11623 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11624 0260 10000BE5 		str	r0, [fp, #-16]
 11625              		.loc 1 4926 5 discriminator 1
 11626 0264 10301BE5 		ldr	r3, [fp, #-16]
 11627 0268 FF3803E2 		and	r3, r3, #16711680
 11628 026c 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 292


 11629 0270 0100001A 		bne	.L744
 11630              		.loc 1 4926 5 discriminator 10
 11631 0274 0830E0E3 		mvn	r3, #8
 11632              		.loc 1 4926 5
 11633 0278 550000EA 		b	.L731
 11634              	.L744:
 11635              		.loc 1 4926 5 discriminator 11
 11636 027c 10301BE5 		ldr	r3, [fp, #-16]
 11637 0280 233CA0E1 		lsr	r3, r3, #24
 11638 0284 030053E3 		cmp	r3, #3
 11639 0288 0100000A 		beq	.L745
 11640              		.loc 1 4926 5 discriminator 12
 11641 028c 0130E0E3 		mvn	r3, #1
 11642              		.loc 1 4926 5
 11643 0290 4F0000EA 		b	.L731
 11644              	.L745:
 11645              		.loc 1 4926 5 discriminator 13
 11646 0294 20301BE5 		ldr	r3, [fp, #-32]
 11647 0298 7F2003E2 		and	r2, r3, #127
 11648 029c 0C301BE5 		ldr	r3, [fp, #-12]
 11649 02a0 143093E5 		ldr	r3, [r3, #20]
 11650 02a4 030052E1 		cmp	r2, r3
 11651 02a8 0100003A 		bcc	.L746
 11652              		.loc 1 4926 5 discriminator 14
 11653 02ac 0230E0E3 		mvn	r3, #2
 11654              		.loc 1 4926 5
 11655 02b0 470000EA 		b	.L731
 11656              	.L746:
 11657              		.loc 1 4926 5 discriminator 15
 11658 02b4 20301BE5 		ldr	r3, [fp, #-32]
 11659 02b8 7F3003E2 		and	r3, r3, #127
 11660 02bc 8322A0E1 		lsl	r2, r3, #5
 11661 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 11662 02c4 0C3093E5 		ldr	r3, [r3, #12]
 11663 02c8 033082E0 		add	r3, r2, r3
 11664 02cc 0C300BE5 		str	r3, [fp, #-12]
 11665 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 11666 02d4 0300A0E1 		mov	r0, r3
 11667 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11668 02dc 10000BE5 		str	r0, [fp, #-16]
 11669              		.loc 1 4926 5 discriminator 1
 11670 02e0 10301BE5 		ldr	r3, [fp, #-16]
 11671 02e4 FF3803E2 		and	r3, r3, #16711680
 11672 02e8 020853E3 		cmp	r3, #131072
 11673 02ec 0100001A 		bne	.L747
 11674              		.loc 1 4926 5 discriminator 16
 11675 02f0 0830E0E3 		mvn	r3, #8
 11676              		.loc 1 4926 5
 11677 02f4 360000EA 		b	.L731
 11678              	.L747:
 11679              		.loc 1 4926 5 discriminator 17
 11680 02f8 10301BE5 		ldr	r3, [fp, #-16]
 11681 02fc 233CA0E1 		lsr	r3, r3, #24
 11682 0300 030053E3 		cmp	r3, #3
 11683 0304 0100000A 		beq	.L742
 11684              		.loc 1 4926 5 discriminator 18
 11685 0308 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 293


 11686              		.loc 1 4926 5
 11687 030c 300000EA 		b	.L731
 11688              	.L742:
4927:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_New,Type_Stat);     
4928:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4929:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_CPT);
 11689              		.loc 1 4929 5 is_stmt 1
 11690 0310 08301BE5 		ldr	r3, [fp, #-8]
 11691 0314 083093E5 		ldr	r3, [r3, #8]
 11692 0318 043003E2 		and	r3, r3, #4
 11693 031c 000053E3 		cmp	r3, #0
 11694 0320 0100001A 		bne	.L748
 11695              		.loc 1 4929 5 is_stmt 0 discriminator 1
 11696 0324 0630E0E3 		mvn	r3, #6
 11697              		.loc 1 4929 5
 11698 0328 290000EA 		b	.L731
 11699              	.L748:
4930:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_New,RME_CPT_FLAG_PRC_CPT);
 11700              		.loc 1 4930 5 is_stmt 1
 11701 032c 0C301BE5 		ldr	r3, [fp, #-12]
 11702 0330 083093E5 		ldr	r3, [r3, #8]
 11703 0334 803003E2 		and	r3, r3, #128
 11704 0338 000053E3 		cmp	r3, #0
 11705 033c 0100001A 		bne	.L749
 11706              		.loc 1 4930 5 is_stmt 0 discriminator 1
 11707 0340 0630E0E3 		mvn	r3, #6
 11708              		.loc 1 4930 5
 11709 0344 220000EA 		b	.L731
 11710              	.L749:
4931:../../Source/Kernel/rme_kernel.c ****     
4932:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
4933:../../Source/Kernel/rme_kernel.c ****     Cpt_New=RME_CAP_CONV_ROOT(Cpt_New,struct RME_Cap_Cpt*);
 11711              		.loc 1 4933 13 is_stmt 1
 11712 0348 0C301BE5 		ldr	r3, [fp, #-12]
 11713 034c 003093E5 		ldr	r3, [r3]
 11714 0350 7330FFE6 		uxth	r3, r3
 11715 0354 000053E3 		cmp	r3, #0
 11716 0358 0200000A 		beq	.L750
 11717              		.loc 1 4933 13 is_stmt 0 discriminator 1
 11718 035c 0C301BE5 		ldr	r3, [fp, #-12]
 11719 0360 043093E5 		ldr	r3, [r3, #4]
 11720 0364 000000EA 		b	.L751
 11721              	.L750:
 11722              		.loc 1 4933 13 discriminator 2
 11723 0368 0C301BE5 		ldr	r3, [fp, #-12]
 11724              	.L751:
 11725              		.loc 1 4933 12 is_stmt 1 discriminator 4
 11726 036c 0C300BE5 		str	r3, [fp, #-12]
4934:../../Source/Kernel/rme_kernel.c ****     
4935:../../Source/Kernel/rme_kernel.c ****     /* Commit the change */
4936:../../Source/Kernel/rme_kernel.c ****     Cpt_Old=Prc_Op->Cpt;
 11727              		.loc 1 4936 12
 11728 0370 08301BE5 		ldr	r3, [fp, #-8]
 11729 0374 143093E5 		ldr	r3, [r3, #20]
 11730 0378 14300BE5 		str	r3, [fp, #-20]
4937:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Cpt)),
 11731              		.loc 1 4937 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 294


 11732 037c 08301BE5 		ldr	r3, [fp, #-8]
 11733 0380 143083E2 		add	r3, r3, #20
 11734 0384 14101BE5 		ldr	r1, [fp, #-20]
 11735 0388 0C201BE5 		ldr	r2, [fp, #-12]
 11736 038c 0300A0E1 		mov	r0, r3
 11737 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11738 0394 0030A0E1 		mov	r3, r0
 11739              		.loc 1 4937 7 discriminator 1
 11740 0398 000053E3 		cmp	r3, #0
 11741 039c 0100001A 		bne	.L752
4938:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Cpt_Old,(rme_ptr_t)Cpt_New)==RME_CASFAIL)
4939:../../Source/Kernel/rme_kernel.c ****     {
4940:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4941:../../Source/Kernel/rme_kernel.c ****         
4942:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 11742              		.loc 1 4942 16
 11743 03a0 C930E0E3 		mvn	r3, #201
 11744 03a4 0A0000EA 		b	.L731
 11745              	.L752:
4943:../../Source/Kernel/rme_kernel.c ****     }
4944:../../Source/Kernel/rme_kernel.c ****     else
4945:../../Source/Kernel/rme_kernel.c ****     {
4946:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4947:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4948:../../Source/Kernel/rme_kernel.c ****     }
4949:../../Source/Kernel/rme_kernel.c ****     
4950:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
4951:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_New->Head.Root_Ref),1);
 11746              		.loc 1 4951 5
 11747 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 11748 03ac 043083E2 		add	r3, r3, #4
 11749 03b0 0110A0E3 		mov	r1, #1
 11750 03b4 0300A0E1 		mov	r0, r3
 11751 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4952:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_Old->Head.Root_Ref),-1);
 11752              		.loc 1 4952 5
 11753 03bc 14301BE5 		ldr	r3, [fp, #-20]
 11754 03c0 043083E2 		add	r3, r3, #4
 11755 03c4 0010E0E3 		mvn	r1, #0
 11756 03c8 0300A0E1 		mov	r0, r3
 11757 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
4953:../../Source/Kernel/rme_kernel.c **** 
4954:../../Source/Kernel/rme_kernel.c ****     return 0;
 11758              		.loc 1 4954 12
 11759 03d0 0030A0E3 		mov	r3, #0
 11760              	.L731:
4955:../../Source/Kernel/rme_kernel.c **** }
 11761              		.loc 1 4955 1
 11762 03d4 0300A0E1 		mov	r0, r3
 11763 03d8 04D04BE2 		sub	sp, fp, #4
 11764              		.cfi_def_cfa 13, 8
 11765              		@ sp needed
 11766 03dc 0088BDE8 		pop	{fp, pc}
 11767              		.cfi_endproc
 11768              	.LFE53:
 11770              		.section	.text._RME_Prc_Pgt,"ax",%progbits
 11771              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 295


 11772              		.syntax unified
 11773              		.arm
 11775              	_RME_Prc_Pgt:
 11776              	.LFB54:
4956:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Cpt *************************************************/
4957:../../Source/Kernel/rme_kernel.c **** 
4958:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Pgt ******************************************************
4959:../../Source/Kernel/rme_kernel.c **** Description : Change a process's page table.
4960:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4961:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4962:../../Source/Kernel/rme_kernel.c ****                                   created already.
4963:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4964:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4965:../../Source/Kernel/rme_kernel.c ****                                   this process.
4966:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4967:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4968:../../Source/Kernel/rme_kernel.c ****                                   address.
4969:../../Source/Kernel/rme_kernel.c **** Output      : None.
4970:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4971:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4972:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4973:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4974:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4975:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4976:../../Source/Kernel/rme_kernel.c **** #else
4977:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4978:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4979:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4980:../../Source/Kernel/rme_kernel.c **** #endif
4981:../../Source/Kernel/rme_kernel.c **** {
 11777              		.loc 1 4981 1
 11778              		.cfi_startproc
 11779              		@ args = 0, pretend = 0, frame = 32
 11780              		@ frame_needed = 1, uses_anonymous_args = 0
 11781 0000 00482DE9 		push	{fp, lr}
 11782              		.cfi_def_cfa_offset 8
 11783              		.cfi_offset 11, -8
 11784              		.cfi_offset 14, -4
 11785 0004 04B08DE2 		add	fp, sp, #4
 11786              		.cfi_def_cfa 11, 4
 11787 0008 20D04DE2 		sub	sp, sp, #32
 11788 000c 18000BE5 		str	r0, [fp, #-24]
 11789 0010 1C100BE5 		str	r1, [fp, #-28]
 11790 0014 20200BE5 		str	r2, [fp, #-32]
4982:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4983:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4984:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4985:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Old;
4986:../../Source/Kernel/rme_kernel.c **** #else
4987:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Old;
4988:../../Source/Kernel/rme_kernel.c **** #endif
4989:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4990:../../Source/Kernel/rme_kernel.c ****     
4991:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4992:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11791              		.loc 1 4992 5
 11792 0018 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 296


 11793 001c 803003E2 		and	r3, r3, #128
 11794 0020 000053E3 		cmp	r3, #0
 11795 0024 1C00001A 		bne	.L754
 11796              		.loc 1 4992 5 is_stmt 0 discriminator 1
 11797 0028 18301BE5 		ldr	r3, [fp, #-24]
 11798 002c 142093E5 		ldr	r2, [r3, #20]
 11799 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11800 0034 030052E1 		cmp	r2, r3
 11801 0038 0100008A 		bhi	.L755
 11802              		.loc 1 4992 5 discriminator 3
 11803 003c 0230E0E3 		mvn	r3, #2
 11804              		.loc 1 4992 5
 11805 0040 E30000EA 		b	.L756
 11806              	.L755:
 11807              		.loc 1 4992 5 discriminator 4
 11808 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11809 0048 8322A0E1 		lsl	r2, r3, #5
 11810 004c 18301BE5 		ldr	r3, [fp, #-24]
 11811 0050 0C3093E5 		ldr	r3, [r3, #12]
 11812 0054 033082E0 		add	r3, r2, r3
 11813 0058 08300BE5 		str	r3, [fp, #-8]
 11814 005c 08301BE5 		ldr	r3, [fp, #-8]
 11815 0060 0300A0E1 		mov	r0, r3
 11816 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11817 0068 10000BE5 		str	r0, [fp, #-16]
 11818              		.loc 1 4992 5 discriminator 1
 11819 006c 10301BE5 		ldr	r3, [fp, #-16]
 11820 0070 FF3803E2 		and	r3, r3, #16711680
 11821 0074 020853E3 		cmp	r3, #131072
 11822 0078 0100001A 		bne	.L757
 11823              		.loc 1 4992 5 discriminator 5
 11824 007c 0830E0E3 		mvn	r3, #8
 11825              		.loc 1 4992 5
 11826 0080 D30000EA 		b	.L756
 11827              	.L757:
 11828              		.loc 1 4992 5 discriminator 6
 11829 0084 10301BE5 		ldr	r3, [fp, #-16]
 11830 0088 233CA0E1 		lsr	r3, r3, #24
 11831 008c 050053E3 		cmp	r3, #5
 11832 0090 3F00000A 		beq	.L758
 11833              		.loc 1 4992 5 discriminator 7
 11834 0094 0130E0E3 		mvn	r3, #1
 11835              		.loc 1 4992 5
 11836 0098 CD0000EA 		b	.L756
 11837              	.L754:
 11838              		.loc 1 4992 5 discriminator 2
 11839 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11840 00a0 2324A0E1 		lsr	r2, r3, #8
 11841 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11842 00a8 143093E5 		ldr	r3, [r3, #20]
 11843 00ac 030052E1 		cmp	r2, r3
 11844 00b0 0100003A 		bcc	.L759
 11845              		.loc 1 4992 5 discriminator 8
 11846 00b4 0230E0E3 		mvn	r3, #2
 11847              		.loc 1 4992 5
 11848 00b8 C50000EA 		b	.L756
 11849              	.L759:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 297


 11850              		.loc 1 4992 5 discriminator 9
 11851 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11852 00c0 2334A0E1 		lsr	r3, r3, #8
 11853 00c4 8322A0E1 		lsl	r2, r3, #5
 11854 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11855 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11856 00d0 033082E0 		add	r3, r2, r3
 11857 00d4 08300BE5 		str	r3, [fp, #-8]
 11858 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11859 00dc 0300A0E1 		mov	r0, r3
 11860 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11861 00e4 10000BE5 		str	r0, [fp, #-16]
 11862              		.loc 1 4992 5 discriminator 1
 11863 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11864 00ec FF3803E2 		and	r3, r3, #16711680
 11865 00f0 020853E3 		cmp	r3, #131072
 11866 00f4 0100001A 		bne	.L760
 11867              		.loc 1 4992 5 discriminator 10
 11868 00f8 0830E0E3 		mvn	r3, #8
 11869              		.loc 1 4992 5
 11870 00fc B40000EA 		b	.L756
 11871              	.L760:
 11872              		.loc 1 4992 5 discriminator 11
 11873 0100 10301BE5 		ldr	r3, [fp, #-16]
 11874 0104 233CA0E1 		lsr	r3, r3, #24
 11875 0108 030053E3 		cmp	r3, #3
 11876 010c 0100000A 		beq	.L761
 11877              		.loc 1 4992 5 discriminator 12
 11878 0110 0130E0E3 		mvn	r3, #1
 11879              		.loc 1 4992 5
 11880 0114 AE0000EA 		b	.L756
 11881              	.L761:
 11882              		.loc 1 4992 5 discriminator 13
 11883 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11884 011c 7F2003E2 		and	r2, r3, #127
 11885 0120 08301BE5 		ldr	r3, [fp, #-8]
 11886 0124 143093E5 		ldr	r3, [r3, #20]
 11887 0128 030052E1 		cmp	r2, r3
 11888 012c 0100003A 		bcc	.L762
 11889              		.loc 1 4992 5 discriminator 14
 11890 0130 0230E0E3 		mvn	r3, #2
 11891              		.loc 1 4992 5
 11892 0134 A60000EA 		b	.L756
 11893              	.L762:
 11894              		.loc 1 4992 5 discriminator 15
 11895 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11896 013c 7F3003E2 		and	r3, r3, #127
 11897 0140 8322A0E1 		lsl	r2, r3, #5
 11898 0144 08301BE5 		ldr	r3, [fp, #-8]
 11899 0148 0C3093E5 		ldr	r3, [r3, #12]
 11900 014c 033082E0 		add	r3, r2, r3
 11901 0150 08300BE5 		str	r3, [fp, #-8]
 11902 0154 08301BE5 		ldr	r3, [fp, #-8]
 11903 0158 0300A0E1 		mov	r0, r3
 11904 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11905 0160 10000BE5 		str	r0, [fp, #-16]
 11906              		.loc 1 4992 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 298


 11907 0164 10301BE5 		ldr	r3, [fp, #-16]
 11908 0168 FF3803E2 		and	r3, r3, #16711680
 11909 016c 020853E3 		cmp	r3, #131072
 11910 0170 0100001A 		bne	.L763
 11911              		.loc 1 4992 5 discriminator 16
 11912 0174 0830E0E3 		mvn	r3, #8
 11913              		.loc 1 4992 5
 11914 0178 950000EA 		b	.L756
 11915              	.L763:
 11916              		.loc 1 4992 5 discriminator 17
 11917 017c 10301BE5 		ldr	r3, [fp, #-16]
 11918 0180 233CA0E1 		lsr	r3, r3, #24
 11919 0184 050053E3 		cmp	r3, #5
 11920 0188 0100000A 		beq	.L758
 11921              		.loc 1 4992 5 discriminator 18
 11922 018c 0130E0E3 		mvn	r3, #1
 11923              		.loc 1 4992 5
 11924 0190 8F0000EA 		b	.L756
 11925              	.L758:
4993:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4994:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4995:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 11926              		.loc 1 4995 5 is_stmt 1
 11927 0194 20301BE5 		ldr	r3, [fp, #-32]
 11928 0198 803003E2 		and	r3, r3, #128
 11929 019c 000053E3 		cmp	r3, #0
 11930 01a0 1C00001A 		bne	.L764
 11931              		.loc 1 4995 5 is_stmt 0 discriminator 1
 11932 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11933 01a8 142093E5 		ldr	r2, [r3, #20]
 11934 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11935 01b0 030052E1 		cmp	r2, r3
 11936 01b4 0100008A 		bhi	.L765
 11937              		.loc 1 4995 5 discriminator 3
 11938 01b8 0230E0E3 		mvn	r3, #2
 11939              		.loc 1 4995 5
 11940 01bc 840000EA 		b	.L756
 11941              	.L765:
 11942              		.loc 1 4995 5 discriminator 4
 11943 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11944 01c4 8322A0E1 		lsl	r2, r3, #5
 11945 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11946 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11947 01d0 033082E0 		add	r3, r2, r3
 11948 01d4 0C300BE5 		str	r3, [fp, #-12]
 11949 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11950 01dc 0300A0E1 		mov	r0, r3
 11951 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11952 01e4 10000BE5 		str	r0, [fp, #-16]
 11953              		.loc 1 4995 5 discriminator 1
 11954 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11955 01ec FF3803E2 		and	r3, r3, #16711680
 11956 01f0 020853E3 		cmp	r3, #131072
 11957 01f4 0100001A 		bne	.L766
 11958              		.loc 1 4995 5 discriminator 5
 11959 01f8 0830E0E3 		mvn	r3, #8
 11960              		.loc 1 4995 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 299


 11961 01fc 740000EA 		b	.L756
 11962              	.L766:
 11963              		.loc 1 4995 5 discriminator 6
 11964 0200 10301BE5 		ldr	r3, [fp, #-16]
 11965 0204 233CA0E1 		lsr	r3, r3, #24
 11966 0208 040053E3 		cmp	r3, #4
 11967 020c 3F00000A 		beq	.L767
 11968              		.loc 1 4995 5 discriminator 7
 11969 0210 0130E0E3 		mvn	r3, #1
 11970              		.loc 1 4995 5
 11971 0214 6E0000EA 		b	.L756
 11972              	.L764:
 11973              		.loc 1 4995 5 discriminator 2
 11974 0218 20301BE5 		ldr	r3, [fp, #-32]
 11975 021c 2324A0E1 		lsr	r2, r3, #8
 11976 0220 18301BE5 		ldr	r3, [fp, #-24]
 11977 0224 143093E5 		ldr	r3, [r3, #20]
 11978 0228 030052E1 		cmp	r2, r3
 11979 022c 0100003A 		bcc	.L768
 11980              		.loc 1 4995 5 discriminator 8
 11981 0230 0230E0E3 		mvn	r3, #2
 11982              		.loc 1 4995 5
 11983 0234 660000EA 		b	.L756
 11984              	.L768:
 11985              		.loc 1 4995 5 discriminator 9
 11986 0238 20301BE5 		ldr	r3, [fp, #-32]
 11987 023c 2334A0E1 		lsr	r3, r3, #8
 11988 0240 8322A0E1 		lsl	r2, r3, #5
 11989 0244 18301BE5 		ldr	r3, [fp, #-24]
 11990 0248 0C3093E5 		ldr	r3, [r3, #12]
 11991 024c 033082E0 		add	r3, r2, r3
 11992 0250 0C300BE5 		str	r3, [fp, #-12]
 11993 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11994 0258 0300A0E1 		mov	r0, r3
 11995 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11996 0260 10000BE5 		str	r0, [fp, #-16]
 11997              		.loc 1 4995 5 discriminator 1
 11998 0264 10301BE5 		ldr	r3, [fp, #-16]
 11999 0268 FF3803E2 		and	r3, r3, #16711680
 12000 026c 020853E3 		cmp	r3, #131072
 12001 0270 0100001A 		bne	.L769
 12002              		.loc 1 4995 5 discriminator 10
 12003 0274 0830E0E3 		mvn	r3, #8
 12004              		.loc 1 4995 5
 12005 0278 550000EA 		b	.L756
 12006              	.L769:
 12007              		.loc 1 4995 5 discriminator 11
 12008 027c 10301BE5 		ldr	r3, [fp, #-16]
 12009 0280 233CA0E1 		lsr	r3, r3, #24
 12010 0284 030053E3 		cmp	r3, #3
 12011 0288 0100000A 		beq	.L770
 12012              		.loc 1 4995 5 discriminator 12
 12013 028c 0130E0E3 		mvn	r3, #1
 12014              		.loc 1 4995 5
 12015 0290 4F0000EA 		b	.L756
 12016              	.L770:
 12017              		.loc 1 4995 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 300


 12018 0294 20301BE5 		ldr	r3, [fp, #-32]
 12019 0298 7F2003E2 		and	r2, r3, #127
 12020 029c 0C301BE5 		ldr	r3, [fp, #-12]
 12021 02a0 143093E5 		ldr	r3, [r3, #20]
 12022 02a4 030052E1 		cmp	r2, r3
 12023 02a8 0100003A 		bcc	.L771
 12024              		.loc 1 4995 5 discriminator 14
 12025 02ac 0230E0E3 		mvn	r3, #2
 12026              		.loc 1 4995 5
 12027 02b0 470000EA 		b	.L756
 12028              	.L771:
 12029              		.loc 1 4995 5 discriminator 15
 12030 02b4 20301BE5 		ldr	r3, [fp, #-32]
 12031 02b8 7F3003E2 		and	r3, r3, #127
 12032 02bc 8322A0E1 		lsl	r2, r3, #5
 12033 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 12034 02c4 0C3093E5 		ldr	r3, [r3, #12]
 12035 02c8 033082E0 		add	r3, r2, r3
 12036 02cc 0C300BE5 		str	r3, [fp, #-12]
 12037 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 12038 02d4 0300A0E1 		mov	r0, r3
 12039 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12040 02dc 10000BE5 		str	r0, [fp, #-16]
 12041              		.loc 1 4995 5 discriminator 1
 12042 02e0 10301BE5 		ldr	r3, [fp, #-16]
 12043 02e4 FF3803E2 		and	r3, r3, #16711680
 12044 02e8 020853E3 		cmp	r3, #131072
 12045 02ec 0100001A 		bne	.L772
 12046              		.loc 1 4995 5 discriminator 16
 12047 02f0 0830E0E3 		mvn	r3, #8
 12048              		.loc 1 4995 5
 12049 02f4 360000EA 		b	.L756
 12050              	.L772:
 12051              		.loc 1 4995 5 discriminator 17
 12052 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12053 02fc 233CA0E1 		lsr	r3, r3, #24
 12054 0300 040053E3 		cmp	r3, #4
 12055 0304 0100000A 		beq	.L767
 12056              		.loc 1 4995 5 discriminator 18
 12057 0308 0130E0E3 		mvn	r3, #1
 12058              		.loc 1 4995 5
 12059 030c 300000EA 		b	.L756
 12060              	.L767:
4996:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_New,Type_Stat);
4997:../../Source/Kernel/rme_kernel.c **** #endif
4998:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4999:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_PGT);
 12061              		.loc 1 4999 5 is_stmt 1
 12062 0310 08301BE5 		ldr	r3, [fp, #-8]
 12063 0314 083093E5 		ldr	r3, [r3, #8]
 12064 0318 083003E2 		and	r3, r3, #8
 12065 031c 000053E3 		cmp	r3, #0
 12066 0320 0100001A 		bne	.L773
 12067              		.loc 1 4999 5 is_stmt 0 discriminator 1
 12068 0324 0630E0E3 		mvn	r3, #6
 12069              		.loc 1 4999 5
 12070 0328 290000EA 		b	.L756
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 301


 12071              	.L773:
5000:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5001:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_New,RME_PGT_FLAG_PRC_PGT);
 12072              		.loc 1 5001 5 is_stmt 1
 12073 032c 0C301BE5 		ldr	r3, [fp, #-12]
 12074 0330 083093E5 		ldr	r3, [r3, #8]
 12075 0334 803003E2 		and	r3, r3, #128
 12076 0338 000053E3 		cmp	r3, #0
 12077 033c 0100001A 		bne	.L774
 12078              		.loc 1 5001 5 is_stmt 0 discriminator 1
 12079 0340 0630E0E3 		mvn	r3, #6
 12080              		.loc 1 5001 5
 12081 0344 220000EA 		b	.L756
 12082              	.L774:
5002:../../Source/Kernel/rme_kernel.c **** #endif
5003:../../Source/Kernel/rme_kernel.c ****     
5004:../../Source/Kernel/rme_kernel.c ****     Pgt_Old=Prc_Op->Pgt;
 12083              		.loc 1 5004 12 is_stmt 1
 12084 0348 08301BE5 		ldr	r3, [fp, #-8]
 12085 034c 183093E5 		ldr	r3, [r3, #24]
 12086 0350 14300BE5 		str	r3, [fp, #-20]
5005:../../Source/Kernel/rme_kernel.c ****     
5006:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5007:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
5008:../../Source/Kernel/rme_kernel.c ****     Pgt_New=RME_CAP_CONV_ROOT(Pgt_New,struct RME_Cap_Pgt*);
 12087              		.loc 1 5008 13
 12088 0354 0C301BE5 		ldr	r3, [fp, #-12]
 12089 0358 003093E5 		ldr	r3, [r3]
 12090 035c 7330FFE6 		uxth	r3, r3
 12091 0360 000053E3 		cmp	r3, #0
 12092 0364 0200000A 		beq	.L775
 12093              		.loc 1 5008 13 is_stmt 0 discriminator 1
 12094 0368 0C301BE5 		ldr	r3, [fp, #-12]
 12095 036c 043093E5 		ldr	r3, [r3, #4]
 12096 0370 000000EA 		b	.L776
 12097              	.L775:
 12098              		.loc 1 5008 13 discriminator 2
 12099 0374 0C301BE5 		ldr	r3, [fp, #-12]
 12100              	.L776:
 12101              		.loc 1 5008 12 is_stmt 1 discriminator 4
 12102 0378 0C300BE5 		str	r3, [fp, #-12]
5009:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5010:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
 12103              		.loc 1 5010 8
 12104 037c 08301BE5 		ldr	r3, [fp, #-8]
 12105 0380 183083E2 		add	r3, r3, #24
 12106 0384 14101BE5 		ldr	r1, [fp, #-20]
 12107 0388 0C201BE5 		ldr	r2, [fp, #-12]
 12108 038c 0300A0E1 		mov	r0, r3
 12109 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12110 0394 0030A0E1 		mov	r3, r0
 12111              		.loc 1 5010 7 discriminator 1
 12112 0398 000053E3 		cmp	r3, #0
 12113 039c 0100001A 		bne	.L777
5011:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5012:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_New)==RME_CASFAIL)
5013:../../Source/Kernel/rme_kernel.c **** #else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 302


5014:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5015:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
5016:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5017:../../Source/Kernel/rme_kernel.c ****                      Raw_Pgt)==RME_CASFAIL)
5018:../../Source/Kernel/rme_kernel.c **** #endif
5019:../../Source/Kernel/rme_kernel.c ****     {
5020:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5021:../../Source/Kernel/rme_kernel.c ****         
5022:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 12114              		.loc 1 5022 16
 12115 03a0 C930E0E3 		mvn	r3, #201
 12116 03a4 0A0000EA 		b	.L756
 12117              	.L777:
5023:../../Source/Kernel/rme_kernel.c ****     }
5024:../../Source/Kernel/rme_kernel.c ****     else
5025:../../Source/Kernel/rme_kernel.c ****     {
5026:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5027:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5028:../../Source/Kernel/rme_kernel.c ****     }
5029:../../Source/Kernel/rme_kernel.c ****     
5030:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
5031:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5032:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_New->Head.Root_Ref),1);
 12118              		.loc 1 5032 5
 12119 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 12120 03ac 043083E2 		add	r3, r3, #4
 12121 03b0 0110A0E3 		mov	r1, #1
 12122 03b4 0300A0E1 		mov	r0, r3
 12123 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5033:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Old->Head.Root_Ref),-1);
 12124              		.loc 1 5033 5
 12125 03bc 14301BE5 		ldr	r3, [fp, #-20]
 12126 03c0 043083E2 		add	r3, r3, #4
 12127 03c4 0010E0E3 		mvn	r1, #0
 12128 03c8 0300A0E1 		mov	r0, r3
 12129 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
5034:../../Source/Kernel/rme_kernel.c **** #endif
5035:../../Source/Kernel/rme_kernel.c ****     
5036:../../Source/Kernel/rme_kernel.c ****     return 0;
 12130              		.loc 1 5036 12
 12131 03d0 0030A0E3 		mov	r3, #0
 12132              	.L756:
5037:../../Source/Kernel/rme_kernel.c **** }
 12133              		.loc 1 5037 1
 12134 03d4 0300A0E1 		mov	r0, r3
 12135 03d8 04D04BE2 		sub	sp, fp, #4
 12136              		.cfi_def_cfa 13, 8
 12137              		@ sp needed
 12138 03dc 0088BDE8 		pop	{fp, pc}
 12139              		.cfi_endproc
 12140              	.LFE54:
 12142              		.section	.text._RME_Thd_Boot_Crt,"ax",%progbits
 12143              		.align	2
 12144              		.global	_RME_Thd_Boot_Crt
 12145              		.syntax unified
 12146              		.arm
 12148              	_RME_Thd_Boot_Crt:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 303


 12149              	.LFB55:
5038:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Pgt *************************************************/
5039:../../Source/Kernel/rme_kernel.c **** 
5040:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Boot_Crt *************************************************
5041:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time thread. The boot-time thread is per-core, and
5042:../../Source/Kernel/rme_kernel.c ****               will have infinite budget, and has no parent. This function
5043:../../Source/Kernel/rme_kernel.c ****               allows creation of a thread on behalf of other processors,
5044:../../Source/Kernel/rme_kernel.c ****               by passing a CPUID parameter. Therefore, it is recommended to
5045:../../Source/Kernel/rme_kernel.c ****               create the threads sequentially during boot-up; if you create
5046:../../Source/Kernel/rme_kernel.c ****               threads in parallel, be sure to only create the thread on your
5047:../../Source/Kernel/rme_kernel.c ****               local core.
5048:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and 
5049:../../Source/Kernel/rme_kernel.c ****               the initial threads' maximum priority will be set by the system.
5050:../../Source/Kernel/rme_kernel.c ****               This thread is a basic thread and hence always have attribute 0.
5051:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5052:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5053:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5054:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5055:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5056:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5057:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5058:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5059:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the thread.
5060:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level of the thread.
5061:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure of the
5062:../../Source/Kernel/rme_kernel.c ****                                             CPU to bind the thread to.
5063:../../Source/Kernel/rme_kernel.c **** Output      : None.
5064:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5065:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5066:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Thd_Boot_Crt(struct RME_Cap_Cpt* Cpt,
5067:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
5068:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Thd,
5069:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
5070:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
5071:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Prio,
5072:../../Source/Kernel/rme_kernel.c ****                             struct RME_CPU_Local* Local)
5073:../../Source/Kernel/rme_kernel.c **** {
 12150              		.loc 1 5073 1
 12151              		.cfi_startproc
 12152              		@ args = 12, pretend = 0, frame = 40
 12153              		@ frame_needed = 1, uses_anonymous_args = 0
 12154 0000 00482DE9 		push	{fp, lr}
 12155              		.cfi_def_cfa_offset 8
 12156              		.cfi_offset 11, -8
 12157              		.cfi_offset 14, -4
 12158 0004 04B08DE2 		add	fp, sp, #4
 12159              		.cfi_def_cfa 11, 4
 12160 0008 28D04DE2 		sub	sp, sp, #40
 12161 000c 20000BE5 		str	r0, [fp, #-32]
 12162 0010 24100BE5 		str	r1, [fp, #-36]
 12163 0014 28200BE5 		str	r2, [fp, #-40]
 12164 0018 2C300BE5 		str	r3, [fp, #-44]
5074:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5075:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5076:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5077:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5078:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 304


5079:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5080:../../Source/Kernel/rme_kernel.c ****     
5081:../../Source/Kernel/rme_kernel.c ****     /* Check whether the priority level is allowed */
5082:../../Source/Kernel/rme_kernel.c ****     if(Prio>=RME_PREEMPT_PRIO_NUM)
 12165              		.loc 1 5082 7
 12166 001c 08309BE5 		ldr	r3, [fp, #8]
 12167 0020 1F0053E3 		cmp	r3, #31
 12168 0024 0100009A 		bls	.L779
5083:../../Source/Kernel/rme_kernel.c ****     {
5084:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5085:../../Source/Kernel/rme_kernel.c **** 
5086:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12169              		.loc 1 5086 16
 12170 0028 CC30E0E3 		mvn	r3, #204
 12171 002c 4C0100EA 		b	.L780
 12172              	.L779:
5087:../../Source/Kernel/rme_kernel.c ****     }
5088:../../Source/Kernel/rme_kernel.c ****     else
5089:../../Source/Kernel/rme_kernel.c ****     {
5090:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5091:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5092:../../Source/Kernel/rme_kernel.c ****     }
5093:../../Source/Kernel/rme_kernel.c ****     
5094:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5095:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12173              		.loc 1 5095 5
 12174 0030 24301BE5 		ldr	r3, [fp, #-36]
 12175 0034 803003E2 		and	r3, r3, #128
 12176 0038 000053E3 		cmp	r3, #0
 12177 003c 1C00001A 		bne	.L781
 12178              		.loc 1 5095 5 is_stmt 0 discriminator 1
 12179 0040 20301BE5 		ldr	r3, [fp, #-32]
 12180 0044 142093E5 		ldr	r2, [r3, #20]
 12181 0048 24301BE5 		ldr	r3, [fp, #-36]
 12182 004c 030052E1 		cmp	r2, r3
 12183 0050 0100008A 		bhi	.L782
 12184              		.loc 1 5095 5 discriminator 3
 12185 0054 0230E0E3 		mvn	r3, #2
 12186              		.loc 1 5095 5
 12187 0058 410100EA 		b	.L780
 12188              	.L782:
 12189              		.loc 1 5095 5 discriminator 4
 12190 005c 24301BE5 		ldr	r3, [fp, #-36]
 12191 0060 8322A0E1 		lsl	r2, r3, #5
 12192 0064 20301BE5 		ldr	r3, [fp, #-32]
 12193 0068 0C3093E5 		ldr	r3, [r3, #12]
 12194 006c 033082E0 		add	r3, r2, r3
 12195 0070 08300BE5 		str	r3, [fp, #-8]
 12196 0074 08301BE5 		ldr	r3, [fp, #-8]
 12197 0078 0300A0E1 		mov	r0, r3
 12198 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12199 0080 10000BE5 		str	r0, [fp, #-16]
 12200              		.loc 1 5095 5 discriminator 1
 12201 0084 10301BE5 		ldr	r3, [fp, #-16]
 12202 0088 FF3803E2 		and	r3, r3, #16711680
 12203 008c 020853E3 		cmp	r3, #131072
 12204 0090 0100001A 		bne	.L783
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 305


 12205              		.loc 1 5095 5 discriminator 5
 12206 0094 0830E0E3 		mvn	r3, #8
 12207              		.loc 1 5095 5
 12208 0098 310100EA 		b	.L780
 12209              	.L783:
 12210              		.loc 1 5095 5 discriminator 6
 12211 009c 10301BE5 		ldr	r3, [fp, #-16]
 12212 00a0 233CA0E1 		lsr	r3, r3, #24
 12213 00a4 030053E3 		cmp	r3, #3
 12214 00a8 3F00000A 		beq	.L784
 12215              		.loc 1 5095 5 discriminator 7
 12216 00ac 0130E0E3 		mvn	r3, #1
 12217              		.loc 1 5095 5
 12218 00b0 2B0100EA 		b	.L780
 12219              	.L781:
 12220              		.loc 1 5095 5 discriminator 2
 12221 00b4 24301BE5 		ldr	r3, [fp, #-36]
 12222 00b8 2324A0E1 		lsr	r2, r3, #8
 12223 00bc 20301BE5 		ldr	r3, [fp, #-32]
 12224 00c0 143093E5 		ldr	r3, [r3, #20]
 12225 00c4 030052E1 		cmp	r2, r3
 12226 00c8 0100003A 		bcc	.L785
 12227              		.loc 1 5095 5 discriminator 8
 12228 00cc 0230E0E3 		mvn	r3, #2
 12229              		.loc 1 5095 5
 12230 00d0 230100EA 		b	.L780
 12231              	.L785:
 12232              		.loc 1 5095 5 discriminator 9
 12233 00d4 24301BE5 		ldr	r3, [fp, #-36]
 12234 00d8 2334A0E1 		lsr	r3, r3, #8
 12235 00dc 8322A0E1 		lsl	r2, r3, #5
 12236 00e0 20301BE5 		ldr	r3, [fp, #-32]
 12237 00e4 0C3093E5 		ldr	r3, [r3, #12]
 12238 00e8 033082E0 		add	r3, r2, r3
 12239 00ec 08300BE5 		str	r3, [fp, #-8]
 12240 00f0 08301BE5 		ldr	r3, [fp, #-8]
 12241 00f4 0300A0E1 		mov	r0, r3
 12242 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12243 00fc 10000BE5 		str	r0, [fp, #-16]
 12244              		.loc 1 5095 5 discriminator 1
 12245 0100 10301BE5 		ldr	r3, [fp, #-16]
 12246 0104 FF3803E2 		and	r3, r3, #16711680
 12247 0108 020853E3 		cmp	r3, #131072
 12248 010c 0100001A 		bne	.L786
 12249              		.loc 1 5095 5 discriminator 10
 12250 0110 0830E0E3 		mvn	r3, #8
 12251              		.loc 1 5095 5
 12252 0114 120100EA 		b	.L780
 12253              	.L786:
 12254              		.loc 1 5095 5 discriminator 11
 12255 0118 10301BE5 		ldr	r3, [fp, #-16]
 12256 011c 233CA0E1 		lsr	r3, r3, #24
 12257 0120 030053E3 		cmp	r3, #3
 12258 0124 0100000A 		beq	.L787
 12259              		.loc 1 5095 5 discriminator 12
 12260 0128 0130E0E3 		mvn	r3, #1
 12261              		.loc 1 5095 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 306


 12262 012c 0C0100EA 		b	.L780
 12263              	.L787:
 12264              		.loc 1 5095 5 discriminator 13
 12265 0130 24301BE5 		ldr	r3, [fp, #-36]
 12266 0134 7F2003E2 		and	r2, r3, #127
 12267 0138 08301BE5 		ldr	r3, [fp, #-8]
 12268 013c 143093E5 		ldr	r3, [r3, #20]
 12269 0140 030052E1 		cmp	r2, r3
 12270 0144 0100003A 		bcc	.L788
 12271              		.loc 1 5095 5 discriminator 14
 12272 0148 0230E0E3 		mvn	r3, #2
 12273              		.loc 1 5095 5
 12274 014c 040100EA 		b	.L780
 12275              	.L788:
 12276              		.loc 1 5095 5 discriminator 15
 12277 0150 24301BE5 		ldr	r3, [fp, #-36]
 12278 0154 7F3003E2 		and	r3, r3, #127
 12279 0158 8322A0E1 		lsl	r2, r3, #5
 12280 015c 08301BE5 		ldr	r3, [fp, #-8]
 12281 0160 0C3093E5 		ldr	r3, [r3, #12]
 12282 0164 033082E0 		add	r3, r2, r3
 12283 0168 08300BE5 		str	r3, [fp, #-8]
 12284 016c 08301BE5 		ldr	r3, [fp, #-8]
 12285 0170 0300A0E1 		mov	r0, r3
 12286 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12287 0178 10000BE5 		str	r0, [fp, #-16]
 12288              		.loc 1 5095 5 discriminator 1
 12289 017c 10301BE5 		ldr	r3, [fp, #-16]
 12290 0180 FF3803E2 		and	r3, r3, #16711680
 12291 0184 020853E3 		cmp	r3, #131072
 12292 0188 0100001A 		bne	.L789
 12293              		.loc 1 5095 5 discriminator 16
 12294 018c 0830E0E3 		mvn	r3, #8
 12295              		.loc 1 5095 5
 12296 0190 F30000EA 		b	.L780
 12297              	.L789:
 12298              		.loc 1 5095 5 discriminator 17
 12299 0194 10301BE5 		ldr	r3, [fp, #-16]
 12300 0198 233CA0E1 		lsr	r3, r3, #24
 12301 019c 030053E3 		cmp	r3, #3
 12302 01a0 0100000A 		beq	.L784
 12303              		.loc 1 5095 5 discriminator 18
 12304 01a4 0130E0E3 		mvn	r3, #1
 12305              		.loc 1 5095 5
 12306 01a8 ED0000EA 		b	.L780
 12307              	.L784:
5096:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5097:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12308              		.loc 1 5097 5 is_stmt 1
 12309 01ac 2C301BE5 		ldr	r3, [fp, #-44]
 12310 01b0 803003E2 		and	r3, r3, #128
 12311 01b4 000053E3 		cmp	r3, #0
 12312 01b8 1C00001A 		bne	.L790
 12313              		.loc 1 5097 5 is_stmt 0 discriminator 1
 12314 01bc 20301BE5 		ldr	r3, [fp, #-32]
 12315 01c0 142093E5 		ldr	r2, [r3, #20]
 12316 01c4 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 307


 12317 01c8 030052E1 		cmp	r2, r3
 12318 01cc 0100008A 		bhi	.L791
 12319              		.loc 1 5097 5 discriminator 3
 12320 01d0 0230E0E3 		mvn	r3, #2
 12321              		.loc 1 5097 5
 12322 01d4 E20000EA 		b	.L780
 12323              	.L791:
 12324              		.loc 1 5097 5 discriminator 4
 12325 01d8 2C301BE5 		ldr	r3, [fp, #-44]
 12326 01dc 8322A0E1 		lsl	r2, r3, #5
 12327 01e0 20301BE5 		ldr	r3, [fp, #-32]
 12328 01e4 0C3093E5 		ldr	r3, [r3, #12]
 12329 01e8 033082E0 		add	r3, r2, r3
 12330 01ec 0C300BE5 		str	r3, [fp, #-12]
 12331 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 12332 01f4 0300A0E1 		mov	r0, r3
 12333 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12334 01fc 10000BE5 		str	r0, [fp, #-16]
 12335              		.loc 1 5097 5 discriminator 1
 12336 0200 10301BE5 		ldr	r3, [fp, #-16]
 12337 0204 FF3803E2 		and	r3, r3, #16711680
 12338 0208 020853E3 		cmp	r3, #131072
 12339 020c 0100001A 		bne	.L792
 12340              		.loc 1 5097 5 discriminator 5
 12341 0210 0830E0E3 		mvn	r3, #8
 12342              		.loc 1 5097 5
 12343 0214 D20000EA 		b	.L780
 12344              	.L792:
 12345              		.loc 1 5097 5 discriminator 6
 12346 0218 10301BE5 		ldr	r3, [fp, #-16]
 12347 021c 233CA0E1 		lsr	r3, r3, #24
 12348 0220 050053E3 		cmp	r3, #5
 12349 0224 3F00000A 		beq	.L793
 12350              		.loc 1 5097 5 discriminator 7
 12351 0228 0130E0E3 		mvn	r3, #1
 12352              		.loc 1 5097 5
 12353 022c CC0000EA 		b	.L780
 12354              	.L790:
 12355              		.loc 1 5097 5 discriminator 2
 12356 0230 2C301BE5 		ldr	r3, [fp, #-44]
 12357 0234 2324A0E1 		lsr	r2, r3, #8
 12358 0238 20301BE5 		ldr	r3, [fp, #-32]
 12359 023c 143093E5 		ldr	r3, [r3, #20]
 12360 0240 030052E1 		cmp	r2, r3
 12361 0244 0100003A 		bcc	.L794
 12362              		.loc 1 5097 5 discriminator 8
 12363 0248 0230E0E3 		mvn	r3, #2
 12364              		.loc 1 5097 5
 12365 024c C40000EA 		b	.L780
 12366              	.L794:
 12367              		.loc 1 5097 5 discriminator 9
 12368 0250 2C301BE5 		ldr	r3, [fp, #-44]
 12369 0254 2334A0E1 		lsr	r3, r3, #8
 12370 0258 8322A0E1 		lsl	r2, r3, #5
 12371 025c 20301BE5 		ldr	r3, [fp, #-32]
 12372 0260 0C3093E5 		ldr	r3, [r3, #12]
 12373 0264 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 308


 12374 0268 0C300BE5 		str	r3, [fp, #-12]
 12375 026c 0C301BE5 		ldr	r3, [fp, #-12]
 12376 0270 0300A0E1 		mov	r0, r3
 12377 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12378 0278 10000BE5 		str	r0, [fp, #-16]
 12379              		.loc 1 5097 5 discriminator 1
 12380 027c 10301BE5 		ldr	r3, [fp, #-16]
 12381 0280 FF3803E2 		and	r3, r3, #16711680
 12382 0284 020853E3 		cmp	r3, #131072
 12383 0288 0100001A 		bne	.L795
 12384              		.loc 1 5097 5 discriminator 10
 12385 028c 0830E0E3 		mvn	r3, #8
 12386              		.loc 1 5097 5
 12387 0290 B30000EA 		b	.L780
 12388              	.L795:
 12389              		.loc 1 5097 5 discriminator 11
 12390 0294 10301BE5 		ldr	r3, [fp, #-16]
 12391 0298 233CA0E1 		lsr	r3, r3, #24
 12392 029c 030053E3 		cmp	r3, #3
 12393 02a0 0100000A 		beq	.L796
 12394              		.loc 1 5097 5 discriminator 12
 12395 02a4 0130E0E3 		mvn	r3, #1
 12396              		.loc 1 5097 5
 12397 02a8 AD0000EA 		b	.L780
 12398              	.L796:
 12399              		.loc 1 5097 5 discriminator 13
 12400 02ac 2C301BE5 		ldr	r3, [fp, #-44]
 12401 02b0 7F2003E2 		and	r2, r3, #127
 12402 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 12403 02b8 143093E5 		ldr	r3, [r3, #20]
 12404 02bc 030052E1 		cmp	r2, r3
 12405 02c0 0100003A 		bcc	.L797
 12406              		.loc 1 5097 5 discriminator 14
 12407 02c4 0230E0E3 		mvn	r3, #2
 12408              		.loc 1 5097 5
 12409 02c8 A50000EA 		b	.L780
 12410              	.L797:
 12411              		.loc 1 5097 5 discriminator 15
 12412 02cc 2C301BE5 		ldr	r3, [fp, #-44]
 12413 02d0 7F3003E2 		and	r3, r3, #127
 12414 02d4 8322A0E1 		lsl	r2, r3, #5
 12415 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 12416 02dc 0C3093E5 		ldr	r3, [r3, #12]
 12417 02e0 033082E0 		add	r3, r2, r3
 12418 02e4 0C300BE5 		str	r3, [fp, #-12]
 12419 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 12420 02ec 0300A0E1 		mov	r0, r3
 12421 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12422 02f4 10000BE5 		str	r0, [fp, #-16]
 12423              		.loc 1 5097 5 discriminator 1
 12424 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12425 02fc FF3803E2 		and	r3, r3, #16711680
 12426 0300 020853E3 		cmp	r3, #131072
 12427 0304 0100001A 		bne	.L798
 12428              		.loc 1 5097 5 discriminator 16
 12429 0308 0830E0E3 		mvn	r3, #8
 12430              		.loc 1 5097 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 309


 12431 030c 940000EA 		b	.L780
 12432              	.L798:
 12433              		.loc 1 5097 5 discriminator 17
 12434 0310 10301BE5 		ldr	r3, [fp, #-16]
 12435 0314 233CA0E1 		lsr	r3, r3, #24
 12436 0318 050053E3 		cmp	r3, #5
 12437 031c 0100000A 		beq	.L793
 12438              		.loc 1 5097 5 discriminator 18
 12439 0320 0130E0E3 		mvn	r3, #1
 12440              		.loc 1 5097 5
 12441 0324 8E0000EA 		b	.L780
 12442              	.L793:
5098:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);   
5099:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5100:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 12443              		.loc 1 5100 5 is_stmt 1
 12444 0328 08301BE5 		ldr	r3, [fp, #-8]
 12445 032c 083093E5 		ldr	r3, [r3, #8]
 12446 0330 013003E2 		and	r3, r3, #1
 12447 0334 000053E3 		cmp	r3, #0
 12448 0338 0100001A 		bne	.L799
 12449              		.loc 1 5100 5 is_stmt 0 discriminator 1
 12450 033c 0630E0E3 		mvn	r3, #6
 12451              		.loc 1 5100 5
 12452 0340 870000EA 		b	.L780
 12453              	.L799:
5101:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 12454              		.loc 1 5101 5 is_stmt 1
 12455 0344 0C301BE5 		ldr	r3, [fp, #-12]
 12456 0348 083093E5 		ldr	r3, [r3, #8]
 12457 034c 023003E2 		and	r3, r3, #2
 12458 0350 000053E3 		cmp	r3, #0
 12459 0354 0100001A 		bne	.L800
 12460              		.loc 1 5101 5 is_stmt 0 discriminator 1
 12461 0358 0630E0E3 		mvn	r3, #6
 12462              		.loc 1 5101 5
 12463 035c 800000EA 		b	.L780
 12464              	.L800:
5102:../../Source/Kernel/rme_kernel.c ****     
5103:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5104:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 12465              		.loc 1 5104 5 is_stmt 1
 12466 0360 08301BE5 		ldr	r3, [fp, #-8]
 12467 0364 142093E5 		ldr	r2, [r3, #20]
 12468 0368 28301BE5 		ldr	r3, [fp, #-40]
 12469 036c 030052E1 		cmp	r2, r3
 12470 0370 0100008A 		bhi	.L801
 12471              		.loc 1 5104 5 is_stmt 0 discriminator 1
 12472 0374 0230E0E3 		mvn	r3, #2
 12473              		.loc 1 5104 5
 12474 0378 790000EA 		b	.L780
 12475              	.L801:
 12476              		.loc 1 5104 5 discriminator 2
 12477 037c 28301BE5 		ldr	r3, [fp, #-40]
 12478 0380 8322A0E1 		lsl	r2, r3, #5
 12479 0384 08301BE5 		ldr	r3, [fp, #-8]
 12480 0388 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 310


 12481 038c 033082E0 		add	r3, r2, r3
 12482 0390 14300BE5 		str	r3, [fp, #-20]
5105:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5106:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 12483              		.loc 1 5106 5 is_stmt 1
 12484 0394 14301BE5 		ldr	r3, [fp, #-20]
 12485 0398 0128A0E3 		mov	r2, #65536
 12486 039c 0010A0E3 		mov	r1, #0
 12487 03a0 0300A0E1 		mov	r0, r3
 12488 03a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12489 03a8 0030A0E1 		mov	r3, r0
 12490              		.loc 1 5106 5 is_stmt 0 discriminator 1
 12491 03ac 000053E3 		cmp	r3, #0
 12492 03b0 0100001A 		bne	.L802
 12493 03b4 0430E0E3 		mvn	r3, #4
 12494              		.loc 1 5106 5
 12495 03b8 690000EA 		b	.L780
 12496              	.L802:
 12497              		.loc 1 5106 5 discriminator 2
 12498 03bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 12499 03c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 12500 03c4 002093E5 		ldr	r2, [r3]
 12501 03c8 14301BE5 		ldr	r3, [fp, #-20]
 12502 03cc 102083E5 		str	r2, [r3, #16]
5107:../../Source/Kernel/rme_kernel.c ****      
5108:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5109:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_THD_SIZE(0U))!=0)
 12503              		.loc 1 5109 8 is_stmt 1
 12504 03d0 9C10A0E3 		mov	r1, #156
 12505 03d4 04009BE5 		ldr	r0, [fp, #4]
 12506 03d8 FEFFFFEB 		bl	_RME_Kot_Mark
 12507 03dc 0030A0E1 		mov	r3, r0
 12508              		.loc 1 5109 7 discriminator 1
 12509 03e0 000053E3 		cmp	r3, #0
 12510 03e4 0500000A 		beq	.L803
5110:../../Source/Kernel/rme_kernel.c ****     {
5111:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5112:../../Source/Kernel/rme_kernel.c **** 
5113:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 12511              		.loc 1 5113 9
 12512 03e8 14301BE5 		ldr	r3, [fp, #-20]
 12513 03ec 0010A0E3 		mov	r1, #0
 12514 03f0 0300A0E1 		mov	r0, r3
 12515 03f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5114:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 12516              		.loc 1 5114 16
 12517 03f8 0330E0E3 		mvn	r3, #3
 12518 03fc 580000EA 		b	.L780
 12519              	.L803:
5115:../../Source/Kernel/rme_kernel.c ****     }
5116:../../Source/Kernel/rme_kernel.c ****     else
5117:../../Source/Kernel/rme_kernel.c ****     {
5118:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5119:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5120:../../Source/Kernel/rme_kernel.c ****     }
5121:../../Source/Kernel/rme_kernel.c **** 
5122:../../Source/Kernel/rme_kernel.c ****     /* Object init */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 311


5123:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 12520              		.loc 1 5123 11
 12521 0400 04309BE5 		ldr	r3, [fp, #4]
 12522 0404 18300BE5 		str	r3, [fp, #-24]
5124:../../Source/Kernel/rme_kernel.c ****     /* The TID of these threads are by default taken care of by the kernel */
5125:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 12523              		.loc 1 5125 22
 12524 0408 18301BE5 		ldr	r3, [fp, #-24]
 12525 040c 0020A0E3 		mov	r2, #0
 12526 0410 102083E5 		str	r2, [r3, #16]
5126:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=RME_THD_INIT_TIME;
 12527              		.loc 1 5126 24
 12528 0414 18301BE5 		ldr	r3, [fp, #-24]
 12529 0418 0221E0E3 		mvn	r2, #-2147483648
 12530 041c 182083E5 		str	r2, [r3, #24]
5127:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_READY;
 12531              		.loc 1 5127 24
 12532 0420 18301BE5 		ldr	r3, [fp, #-24]
 12533 0424 0020A0E3 		mov	r2, #0
 12534 0428 1C2083E5 		str	r2, [r3, #28]
5128:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 12535              		.loc 1 5128 14
 12536 042c 0C301BE5 		ldr	r3, [fp, #-12]
 12537 0430 003093E5 		ldr	r3, [r3]
 12538 0434 7330FFE6 		uxth	r3, r3
 12539 0438 000053E3 		cmp	r3, #0
 12540 043c 0200000A 		beq	.L804
 12541              		.loc 1 5128 14 is_stmt 0 discriminator 1
 12542 0440 0C301BE5 		ldr	r3, [fp, #-12]
 12543 0444 043093E5 		ldr	r3, [r3, #4]
 12544 0448 000000EA 		b	.L805
 12545              	.L804:
 12546              		.loc 1 5128 14 discriminator 2
 12547 044c 0C301BE5 		ldr	r3, [fp, #-12]
 12548              	.L805:
 12549              		.loc 1 5128 13 is_stmt 1 discriminator 4
 12550 0450 1C300BE5 		str	r3, [fp, #-28]
5129:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 12551              		.loc 1 5129 22
 12552 0454 18301BE5 		ldr	r3, [fp, #-24]
 12553 0458 1C201BE5 		ldr	r2, [fp, #-28]
 12554 045c 2C2083E5 		str	r2, [r3, #44]
5130:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 12555              		.loc 1 5130 25
 12556 0460 18301BE5 		ldr	r3, [fp, #-24]
 12557 0464 0020A0E3 		mov	r2, #0
 12558 0468 282083E5 		str	r2, [r3, #40]
5131:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 12559              		.loc 1 5131 23
 12560 046c 18301BE5 		ldr	r3, [fp, #-24]
 12561 0470 08209BE5 		ldr	r2, [fp, #8]
 12562 0474 202083E5 		str	r2, [r3, #32]
5132:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=RME_PREEMPT_PRIO_NUM-1U;
 12563              		.loc 1 5132 27
 12564 0478 18301BE5 		ldr	r3, [fp, #-24]
 12565 047c 1F20A0E3 		mov	r2, #31
 12566 0480 242083E5 		str	r2, [r3, #36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 312


5133:../../Source/Kernel/rme_kernel.c ****     /* Set scheduler reference to 1 so cannot be free */
5134:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=1U;
 12567              		.loc 1 5134 28
 12568 0484 18301BE5 		ldr	r3, [fp, #-24]
 12569 0488 0120A0E3 		mov	r2, #1
 12570 048c 302083E5 		str	r2, [r3, #48]
5135:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 12571              		.loc 1 5135 28
 12572 0490 18301BE5 		ldr	r3, [fp, #-24]
 12573 0494 0020A0E3 		mov	r2, #0
 12574 0498 382083E5 		str	r2, [r3, #56]
5136:../../Source/Kernel/rme_kernel.c ****     /* Bind the thread to the current CPU */
5137:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=Local;
 12575              		.loc 1 5137 24
 12576 049c 18301BE5 		ldr	r3, [fp, #-24]
 12577 04a0 0C209BE5 		ldr	r2, [fp, #12]
 12578 04a4 142083E5 		str	r2, [r3, #20]
5138:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5139:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 12579              		.loc 1 5139 5
 12580 04a8 18301BE5 		ldr	r3, [fp, #-24]
 12581 04ac 083083E2 		add	r3, r3, #8
 12582 04b0 0300A0E1 		mov	r0, r3
 12583 04b4 FEFFFFEB 		bl	_RME_List_Crt
5140:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 12584              		.loc 1 5140 5
 12585 04b8 18301BE5 		ldr	r3, [fp, #-24]
 12586 04bc 3C3083E2 		add	r3, r3, #60
 12587 04c0 0300A0E1 		mov	r0, r3
 12588 04c4 FEFFFFEB 		bl	_RME_List_Crt
5141:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this will never be a hypervisor thread */
5142:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Hyp_Attr=0U;
 12589              		.loc 1 5142 25
 12590 04c8 18301BE5 		ldr	r3, [fp, #-24]
 12591 04cc 0020A0E3 		mov	r2, #0
 12592 04d0 442083E5 		str	r2, [r3, #68]
5143:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 12593              		.loc 1 5143 48
 12594 04d4 04309BE5 		ldr	r3, [fp, #4]
 12595 04d8 583083E2 		add	r3, r3, #88
 12596              		.loc 1 5143 21
 12597 04dc 0320A0E1 		mov	r2, r3
 12598              		.loc 1 5143 20
 12599 04e0 18301BE5 		ldr	r3, [fp, #-24]
 12600 04e4 482083E5 		str	r2, [r3, #72]
5144:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5145:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 12601              		.loc 1 5145 5
 12602 04e8 18301BE5 		ldr	r3, [fp, #-24]
 12603 04ec 4C3083E2 		add	r3, r3, #76
 12604 04f0 0300A0E1 		mov	r0, r3
 12605 04f4 FEFFFFEB 		bl	_RME_List_Crt
5146:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 12606              		.loc 1 5146 29
 12607 04f8 18301BE5 		ldr	r3, [fp, #-24]
 12608 04fc 0020A0E3 		mov	r2, #0
 12609 0500 542083E5 		str	r2, [r3, #84]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 313


5147:../../Source/Kernel/rme_kernel.c ****     
5148:../../Source/Kernel/rme_kernel.c ****     /* Info init */
5149:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=1U;
 12610              		.loc 1 5149 27
 12611 0504 14301BE5 		ldr	r3, [fp, #-20]
 12612 0508 0120A0E3 		mov	r2, #1
 12613 050c 042083E5 		str	r2, [r3, #4]
5150:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 12614              		.loc 1 5150 25
 12615 0510 14301BE5 		ldr	r3, [fp, #-20]
 12616 0514 04209BE5 		ldr	r2, [fp, #4]
 12617 0518 0C2083E5 		str	r2, [r3, #12]
5151:../../Source/Kernel/rme_kernel.c ****     /* This can only be a parent, and not a child, and cannot be freed. Additionally,
5152:../../Source/Kernel/rme_kernel.c ****      * this should not be blocked on any endpoint. Any attempt to block this thread will fail.
5153:../../Source/Kernel/rme_kernel.c ****      * Setting execution information for this is also prohibited. */
5154:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_SCHED_PRIO|RME_THD_FLAG_SCHED_PARENT|
 12618              		.loc 1 5154 23
 12619 051c 14301BE5 		ldr	r3, [fp, #-20]
 12620 0520 7B2FA0E3 		mov	r2, #492
 12621 0524 082083E5 		str	r2, [r3, #8]
5155:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_XFER_DST|RME_THD_FLAG_XFER_SRC|
5156:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_SCHED_RCV|RME_THD_FLAG_SWT;
5157:../../Source/Kernel/rme_kernel.c **** 
5158:../../Source/Kernel/rme_kernel.c ****     /* Referece process */
5159:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 12622              		.loc 1 5159 5
 12623 0528 1C301BE5 		ldr	r3, [fp, #-28]
 12624 052c 043083E2 		add	r3, r3, #4
 12625 0530 0110A0E3 		mov	r1, #1
 12626 0534 0300A0E1 		mov	r0, r3
 12627 0538 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5160:../../Source/Kernel/rme_kernel.c ****     
5161:../../Source/Kernel/rme_kernel.c ****     /* Insert this into the runqueue, and set current thread to it */
5162:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Ins(Thread);
 12628              		.loc 1 5162 5
 12629 053c 18001BE5 		ldr	r0, [fp, #-24]
 12630 0540 FEFFFFEB 		bl	_RME_Run_Ins
5163:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thread;
 12631              		.loc 1 5163 19
 12632 0544 0C309BE5 		ldr	r3, [fp, #12]
 12633 0548 18201BE5 		ldr	r2, [fp, #-24]
 12634 054c 042083E5 		str	r2, [r3, #4]
5164:../../Source/Kernel/rme_kernel.c **** 
5165:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5166:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 12635              		.loc 1 5166 5
 12636 0550 14301BE5 		ldr	r3, [fp, #-20]
 12637 0554 0614A0E3 		mov	r1, #100663296
 12638 0558 0300A0E1 		mov	r0, r3
 12639 055c FEFFFFEB 		bl	__RME_A7A_Write_Release
5167:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5168:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5169:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5170:../../Source/Kernel/rme_kernel.c **** 
5171:../../Source/Kernel/rme_kernel.c ****     return 0;
 12640              		.loc 1 5171 12
 12641 0560 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 314


 12642              	.L780:
5172:../../Source/Kernel/rme_kernel.c **** }
 12643              		.loc 1 5172 1
 12644 0564 0300A0E1 		mov	r0, r3
 12645 0568 04D04BE2 		sub	sp, fp, #4
 12646              		.cfi_def_cfa 13, 8
 12647              		@ sp needed
 12648 056c 0088BDE8 		pop	{fp, pc}
 12649              		.cfi_endproc
 12650              	.LFE55:
 12652              		.section	.text._RME_Thd_Crt,"ax",%progbits
 12653              		.align	2
 12654              		.syntax unified
 12655              		.arm
 12657              	_RME_Thd_Crt:
 12658              	.LFB56:
5173:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Boot_Crt ********************************************/
5174:../../Source/Kernel/rme_kernel.c **** 
5175:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Crt ******************************************************
5176:../../Source/Kernel/rme_kernel.c **** Description : Create a thread. A thread is the minimal kernel-level execution
5177:../../Source/Kernel/rme_kernel.c ****               unit.
5178:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5179:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5180:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5181:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
5182:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5183:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5184:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5185:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5186:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5187:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5188:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio_Max - The maximum priority allowed for this
5189:../../Source/Kernel/rme_kernel.c ****                                    thread. Once set, this cannot be changed.
5190:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
5191:../../Source/Kernel/rme_kernel.c ****                                 thread kernel object.
5192:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Attr - The context attributes.
5193:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Hyp - Whether this is a hypervisor thread.
5194:../../Source/Kernel/rme_kernel.c **** Output      : None.
5195:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5196:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5197:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Crt(struct RME_Cap_Cpt* Cpt,
5198:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5199:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
5200:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
5201:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5202:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Prio_Max,
5203:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
5204:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Attr,
5205:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Hyp)
5206:../../Source/Kernel/rme_kernel.c **** {
 12659              		.loc 1 5206 1
 12660              		.cfi_startproc
 12661              		@ args = 20, pretend = 0, frame = 56
 12662              		@ frame_needed = 1, uses_anonymous_args = 0
 12663 0000 00482DE9 		push	{fp, lr}
 12664              		.cfi_def_cfa_offset 8
 12665              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 315


 12666              		.cfi_offset 14, -4
 12667 0004 04B08DE2 		add	fp, sp, #4
 12668              		.cfi_def_cfa 11, 4
 12669 0008 38D04DE2 		sub	sp, sp, #56
 12670 000c 30000BE5 		str	r0, [fp, #-48]
 12671 0010 34100BE5 		str	r1, [fp, #-52]
 12672 0014 38200BE5 		str	r2, [fp, #-56]
 12673 0018 3C300BE5 		str	r3, [fp, #-60]
5207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5208:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5209:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
5210:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5211:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5212:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5213:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5214:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
5215:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
5216:../../Source/Kernel/rme_kernel.c ****     
5217:../../Source/Kernel/rme_kernel.c ****     /* See if the maximum priority relationship is correct - a thread
5218:../../Source/Kernel/rme_kernel.c ****      * can never create a thread with higher maximum priority */
5219:../../Source/Kernel/rme_kernel.c ****     if((RME_CPU_LOCAL()->Thd_Cur)->Sched.Prio_Max<Prio_Max)
 12674              		.loc 1 5219 24
 12675 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 12676 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 12677 0024 043093E5 		ldr	r3, [r3, #4]
 12678              		.loc 1 5219 41
 12679 0028 243093E5 		ldr	r3, [r3, #36]
 12680              		.loc 1 5219 7
 12681 002c 08209BE5 		ldr	r2, [fp, #8]
 12682 0030 030052E1 		cmp	r2, r3
 12683 0034 0100009A 		bls	.L807
5220:../../Source/Kernel/rme_kernel.c ****     {
5221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5222:../../Source/Kernel/rme_kernel.c **** 
5223:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12684              		.loc 1 5223 16
 12685 0038 CC30E0E3 		mvn	r3, #204
 12686 003c E10100EA 		b	.L808
 12687              	.L807:
5224:../../Source/Kernel/rme_kernel.c ****     }
5225:../../Source/Kernel/rme_kernel.c ****     else
5226:../../Source/Kernel/rme_kernel.c ****     {
5227:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5228:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5229:../../Source/Kernel/rme_kernel.c ****     }
5230:../../Source/Kernel/rme_kernel.c **** 
5231:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5232:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12688              		.loc 1 5232 5
 12689 0040 34301BE5 		ldr	r3, [fp, #-52]
 12690 0044 803003E2 		and	r3, r3, #128
 12691 0048 000053E3 		cmp	r3, #0
 12692 004c 1C00001A 		bne	.L809
 12693              		.loc 1 5232 5 is_stmt 0 discriminator 1
 12694 0050 30301BE5 		ldr	r3, [fp, #-48]
 12695 0054 142093E5 		ldr	r2, [r3, #20]
 12696 0058 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 316


 12697 005c 030052E1 		cmp	r2, r3
 12698 0060 0100008A 		bhi	.L810
 12699              		.loc 1 5232 5 discriminator 3
 12700 0064 0230E0E3 		mvn	r3, #2
 12701              		.loc 1 5232 5
 12702 0068 D60100EA 		b	.L808
 12703              	.L810:
 12704              		.loc 1 5232 5 discriminator 4
 12705 006c 34301BE5 		ldr	r3, [fp, #-52]
 12706 0070 8322A0E1 		lsl	r2, r3, #5
 12707 0074 30301BE5 		ldr	r3, [fp, #-48]
 12708 0078 0C3093E5 		ldr	r3, [r3, #12]
 12709 007c 033082E0 		add	r3, r2, r3
 12710 0080 08300BE5 		str	r3, [fp, #-8]
 12711 0084 08301BE5 		ldr	r3, [fp, #-8]
 12712 0088 0300A0E1 		mov	r0, r3
 12713 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12714 0090 18000BE5 		str	r0, [fp, #-24]
 12715              		.loc 1 5232 5 discriminator 1
 12716 0094 18301BE5 		ldr	r3, [fp, #-24]
 12717 0098 FF3803E2 		and	r3, r3, #16711680
 12718 009c 020853E3 		cmp	r3, #131072
 12719 00a0 0100001A 		bne	.L811
 12720              		.loc 1 5232 5 discriminator 5
 12721 00a4 0830E0E3 		mvn	r3, #8
 12722              		.loc 1 5232 5
 12723 00a8 C60100EA 		b	.L808
 12724              	.L811:
 12725              		.loc 1 5232 5 discriminator 6
 12726 00ac 18301BE5 		ldr	r3, [fp, #-24]
 12727 00b0 233CA0E1 		lsr	r3, r3, #24
 12728 00b4 030053E3 		cmp	r3, #3
 12729 00b8 3F00000A 		beq	.L812
 12730              		.loc 1 5232 5 discriminator 7
 12731 00bc 0130E0E3 		mvn	r3, #1
 12732              		.loc 1 5232 5
 12733 00c0 C00100EA 		b	.L808
 12734              	.L809:
 12735              		.loc 1 5232 5 discriminator 2
 12736 00c4 34301BE5 		ldr	r3, [fp, #-52]
 12737 00c8 2324A0E1 		lsr	r2, r3, #8
 12738 00cc 30301BE5 		ldr	r3, [fp, #-48]
 12739 00d0 143093E5 		ldr	r3, [r3, #20]
 12740 00d4 030052E1 		cmp	r2, r3
 12741 00d8 0100003A 		bcc	.L813
 12742              		.loc 1 5232 5 discriminator 8
 12743 00dc 0230E0E3 		mvn	r3, #2
 12744              		.loc 1 5232 5
 12745 00e0 B80100EA 		b	.L808
 12746              	.L813:
 12747              		.loc 1 5232 5 discriminator 9
 12748 00e4 34301BE5 		ldr	r3, [fp, #-52]
 12749 00e8 2334A0E1 		lsr	r3, r3, #8
 12750 00ec 8322A0E1 		lsl	r2, r3, #5
 12751 00f0 30301BE5 		ldr	r3, [fp, #-48]
 12752 00f4 0C3093E5 		ldr	r3, [r3, #12]
 12753 00f8 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 317


 12754 00fc 08300BE5 		str	r3, [fp, #-8]
 12755 0100 08301BE5 		ldr	r3, [fp, #-8]
 12756 0104 0300A0E1 		mov	r0, r3
 12757 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12758 010c 18000BE5 		str	r0, [fp, #-24]
 12759              		.loc 1 5232 5 discriminator 1
 12760 0110 18301BE5 		ldr	r3, [fp, #-24]
 12761 0114 FF3803E2 		and	r3, r3, #16711680
 12762 0118 020853E3 		cmp	r3, #131072
 12763 011c 0100001A 		bne	.L814
 12764              		.loc 1 5232 5 discriminator 10
 12765 0120 0830E0E3 		mvn	r3, #8
 12766              		.loc 1 5232 5
 12767 0124 A70100EA 		b	.L808
 12768              	.L814:
 12769              		.loc 1 5232 5 discriminator 11
 12770 0128 18301BE5 		ldr	r3, [fp, #-24]
 12771 012c 233CA0E1 		lsr	r3, r3, #24
 12772 0130 030053E3 		cmp	r3, #3
 12773 0134 0100000A 		beq	.L815
 12774              		.loc 1 5232 5 discriminator 12
 12775 0138 0130E0E3 		mvn	r3, #1
 12776              		.loc 1 5232 5
 12777 013c A10100EA 		b	.L808
 12778              	.L815:
 12779              		.loc 1 5232 5 discriminator 13
 12780 0140 34301BE5 		ldr	r3, [fp, #-52]
 12781 0144 7F2003E2 		and	r2, r3, #127
 12782 0148 08301BE5 		ldr	r3, [fp, #-8]
 12783 014c 143093E5 		ldr	r3, [r3, #20]
 12784 0150 030052E1 		cmp	r2, r3
 12785 0154 0100003A 		bcc	.L816
 12786              		.loc 1 5232 5 discriminator 14
 12787 0158 0230E0E3 		mvn	r3, #2
 12788              		.loc 1 5232 5
 12789 015c 990100EA 		b	.L808
 12790              	.L816:
 12791              		.loc 1 5232 5 discriminator 15
 12792 0160 34301BE5 		ldr	r3, [fp, #-52]
 12793 0164 7F3003E2 		and	r3, r3, #127
 12794 0168 8322A0E1 		lsl	r2, r3, #5
 12795 016c 08301BE5 		ldr	r3, [fp, #-8]
 12796 0170 0C3093E5 		ldr	r3, [r3, #12]
 12797 0174 033082E0 		add	r3, r2, r3
 12798 0178 08300BE5 		str	r3, [fp, #-8]
 12799 017c 08301BE5 		ldr	r3, [fp, #-8]
 12800 0180 0300A0E1 		mov	r0, r3
 12801 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12802 0188 18000BE5 		str	r0, [fp, #-24]
 12803              		.loc 1 5232 5 discriminator 1
 12804 018c 18301BE5 		ldr	r3, [fp, #-24]
 12805 0190 FF3803E2 		and	r3, r3, #16711680
 12806 0194 020853E3 		cmp	r3, #131072
 12807 0198 0100001A 		bne	.L817
 12808              		.loc 1 5232 5 discriminator 16
 12809 019c 0830E0E3 		mvn	r3, #8
 12810              		.loc 1 5232 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 318


 12811 01a0 880100EA 		b	.L808
 12812              	.L817:
 12813              		.loc 1 5232 5 discriminator 17
 12814 01a4 18301BE5 		ldr	r3, [fp, #-24]
 12815 01a8 233CA0E1 		lsr	r3, r3, #24
 12816 01ac 030053E3 		cmp	r3, #3
 12817 01b0 0100000A 		beq	.L812
 12818              		.loc 1 5232 5 discriminator 18
 12819 01b4 0130E0E3 		mvn	r3, #1
 12820              		.loc 1 5232 5
 12821 01b8 820100EA 		b	.L808
 12822              	.L812:
5233:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5234:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 12823              		.loc 1 5234 5 is_stmt 1
 12824 01bc 38301BE5 		ldr	r3, [fp, #-56]
 12825 01c0 803003E2 		and	r3, r3, #128
 12826 01c4 000053E3 		cmp	r3, #0
 12827 01c8 1C00001A 		bne	.L818
 12828              		.loc 1 5234 5 is_stmt 0 discriminator 1
 12829 01cc 30301BE5 		ldr	r3, [fp, #-48]
 12830 01d0 142093E5 		ldr	r2, [r3, #20]
 12831 01d4 38301BE5 		ldr	r3, [fp, #-56]
 12832 01d8 030052E1 		cmp	r2, r3
 12833 01dc 0100008A 		bhi	.L819
 12834              		.loc 1 5234 5 discriminator 3
 12835 01e0 0230E0E3 		mvn	r3, #2
 12836              		.loc 1 5234 5
 12837 01e4 770100EA 		b	.L808
 12838              	.L819:
 12839              		.loc 1 5234 5 discriminator 4
 12840 01e8 38301BE5 		ldr	r3, [fp, #-56]
 12841 01ec 8322A0E1 		lsl	r2, r3, #5
 12842 01f0 30301BE5 		ldr	r3, [fp, #-48]
 12843 01f4 0C3093E5 		ldr	r3, [r3, #12]
 12844 01f8 033082E0 		add	r3, r2, r3
 12845 01fc 10300BE5 		str	r3, [fp, #-16]
 12846 0200 10301BE5 		ldr	r3, [fp, #-16]
 12847 0204 0300A0E1 		mov	r0, r3
 12848 0208 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12849 020c 18000BE5 		str	r0, [fp, #-24]
 12850              		.loc 1 5234 5 discriminator 1
 12851 0210 18301BE5 		ldr	r3, [fp, #-24]
 12852 0214 FF3803E2 		and	r3, r3, #16711680
 12853 0218 020853E3 		cmp	r3, #131072
 12854 021c 0100001A 		bne	.L820
 12855              		.loc 1 5234 5 discriminator 5
 12856 0220 0830E0E3 		mvn	r3, #8
 12857              		.loc 1 5234 5
 12858 0224 670100EA 		b	.L808
 12859              	.L820:
 12860              		.loc 1 5234 5 discriminator 6
 12861 0228 18301BE5 		ldr	r3, [fp, #-24]
 12862 022c 233CA0E1 		lsr	r3, r3, #24
 12863 0230 020053E3 		cmp	r3, #2
 12864 0234 3F00000A 		beq	.L821
 12865              		.loc 1 5234 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 319


 12866 0238 0130E0E3 		mvn	r3, #1
 12867              		.loc 1 5234 5
 12868 023c 610100EA 		b	.L808
 12869              	.L818:
 12870              		.loc 1 5234 5 discriminator 2
 12871 0240 38301BE5 		ldr	r3, [fp, #-56]
 12872 0244 2324A0E1 		lsr	r2, r3, #8
 12873 0248 30301BE5 		ldr	r3, [fp, #-48]
 12874 024c 143093E5 		ldr	r3, [r3, #20]
 12875 0250 030052E1 		cmp	r2, r3
 12876 0254 0100003A 		bcc	.L822
 12877              		.loc 1 5234 5 discriminator 8
 12878 0258 0230E0E3 		mvn	r3, #2
 12879              		.loc 1 5234 5
 12880 025c 590100EA 		b	.L808
 12881              	.L822:
 12882              		.loc 1 5234 5 discriminator 9
 12883 0260 38301BE5 		ldr	r3, [fp, #-56]
 12884 0264 2334A0E1 		lsr	r3, r3, #8
 12885 0268 8322A0E1 		lsl	r2, r3, #5
 12886 026c 30301BE5 		ldr	r3, [fp, #-48]
 12887 0270 0C3093E5 		ldr	r3, [r3, #12]
 12888 0274 033082E0 		add	r3, r2, r3
 12889 0278 10300BE5 		str	r3, [fp, #-16]
 12890 027c 10301BE5 		ldr	r3, [fp, #-16]
 12891 0280 0300A0E1 		mov	r0, r3
 12892 0284 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12893 0288 18000BE5 		str	r0, [fp, #-24]
 12894              		.loc 1 5234 5 discriminator 1
 12895 028c 18301BE5 		ldr	r3, [fp, #-24]
 12896 0290 FF3803E2 		and	r3, r3, #16711680
 12897 0294 020853E3 		cmp	r3, #131072
 12898 0298 0100001A 		bne	.L823
 12899              		.loc 1 5234 5 discriminator 10
 12900 029c 0830E0E3 		mvn	r3, #8
 12901              		.loc 1 5234 5
 12902 02a0 480100EA 		b	.L808
 12903              	.L823:
 12904              		.loc 1 5234 5 discriminator 11
 12905 02a4 18301BE5 		ldr	r3, [fp, #-24]
 12906 02a8 233CA0E1 		lsr	r3, r3, #24
 12907 02ac 030053E3 		cmp	r3, #3
 12908 02b0 0100000A 		beq	.L824
 12909              		.loc 1 5234 5 discriminator 12
 12910 02b4 0130E0E3 		mvn	r3, #1
 12911              		.loc 1 5234 5
 12912 02b8 420100EA 		b	.L808
 12913              	.L824:
 12914              		.loc 1 5234 5 discriminator 13
 12915 02bc 38301BE5 		ldr	r3, [fp, #-56]
 12916 02c0 7F2003E2 		and	r2, r3, #127
 12917 02c4 10301BE5 		ldr	r3, [fp, #-16]
 12918 02c8 143093E5 		ldr	r3, [r3, #20]
 12919 02cc 030052E1 		cmp	r2, r3
 12920 02d0 0100003A 		bcc	.L825
 12921              		.loc 1 5234 5 discriminator 14
 12922 02d4 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 320


 12923              		.loc 1 5234 5
 12924 02d8 3A0100EA 		b	.L808
 12925              	.L825:
 12926              		.loc 1 5234 5 discriminator 15
 12927 02dc 38301BE5 		ldr	r3, [fp, #-56]
 12928 02e0 7F3003E2 		and	r3, r3, #127
 12929 02e4 8322A0E1 		lsl	r2, r3, #5
 12930 02e8 10301BE5 		ldr	r3, [fp, #-16]
 12931 02ec 0C3093E5 		ldr	r3, [r3, #12]
 12932 02f0 033082E0 		add	r3, r2, r3
 12933 02f4 10300BE5 		str	r3, [fp, #-16]
 12934 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12935 02fc 0300A0E1 		mov	r0, r3
 12936 0300 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12937 0304 18000BE5 		str	r0, [fp, #-24]
 12938              		.loc 1 5234 5 discriminator 1
 12939 0308 18301BE5 		ldr	r3, [fp, #-24]
 12940 030c FF3803E2 		and	r3, r3, #16711680
 12941 0310 020853E3 		cmp	r3, #131072
 12942 0314 0100001A 		bne	.L826
 12943              		.loc 1 5234 5 discriminator 16
 12944 0318 0830E0E3 		mvn	r3, #8
 12945              		.loc 1 5234 5
 12946 031c 290100EA 		b	.L808
 12947              	.L826:
 12948              		.loc 1 5234 5 discriminator 17
 12949 0320 18301BE5 		ldr	r3, [fp, #-24]
 12950 0324 233CA0E1 		lsr	r3, r3, #24
 12951 0328 020053E3 		cmp	r3, #2
 12952 032c 0100000A 		beq	.L821
 12953              		.loc 1 5234 5 discriminator 18
 12954 0330 0130E0E3 		mvn	r3, #1
 12955              		.loc 1 5234 5
 12956 0334 230100EA 		b	.L808
 12957              	.L821:
5235:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
5236:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12958              		.loc 1 5236 5 is_stmt 1
 12959 0338 04309BE5 		ldr	r3, [fp, #4]
 12960 033c 803003E2 		and	r3, r3, #128
 12961 0340 000053E3 		cmp	r3, #0
 12962 0344 1C00001A 		bne	.L827
 12963              		.loc 1 5236 5 is_stmt 0 discriminator 1
 12964 0348 30301BE5 		ldr	r3, [fp, #-48]
 12965 034c 142093E5 		ldr	r2, [r3, #20]
 12966 0350 04309BE5 		ldr	r3, [fp, #4]
 12967 0354 030052E1 		cmp	r2, r3
 12968 0358 0100008A 		bhi	.L828
 12969              		.loc 1 5236 5 discriminator 3
 12970 035c 0230E0E3 		mvn	r3, #2
 12971              		.loc 1 5236 5
 12972 0360 180100EA 		b	.L808
 12973              	.L828:
 12974              		.loc 1 5236 5 discriminator 4
 12975 0364 04309BE5 		ldr	r3, [fp, #4]
 12976 0368 8322A0E1 		lsl	r2, r3, #5
 12977 036c 30301BE5 		ldr	r3, [fp, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 321


 12978 0370 0C3093E5 		ldr	r3, [r3, #12]
 12979 0374 033082E0 		add	r3, r2, r3
 12980 0378 0C300BE5 		str	r3, [fp, #-12]
 12981 037c 0C301BE5 		ldr	r3, [fp, #-12]
 12982 0380 0300A0E1 		mov	r0, r3
 12983 0384 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12984 0388 18000BE5 		str	r0, [fp, #-24]
 12985              		.loc 1 5236 5 discriminator 1
 12986 038c 18301BE5 		ldr	r3, [fp, #-24]
 12987 0390 FF3803E2 		and	r3, r3, #16711680
 12988 0394 020853E3 		cmp	r3, #131072
 12989 0398 0100001A 		bne	.L829
 12990              		.loc 1 5236 5 discriminator 5
 12991 039c 0830E0E3 		mvn	r3, #8
 12992              		.loc 1 5236 5
 12993 03a0 080100EA 		b	.L808
 12994              	.L829:
 12995              		.loc 1 5236 5 discriminator 6
 12996 03a4 18301BE5 		ldr	r3, [fp, #-24]
 12997 03a8 233CA0E1 		lsr	r3, r3, #24
 12998 03ac 050053E3 		cmp	r3, #5
 12999 03b0 3F00000A 		beq	.L830
 13000              		.loc 1 5236 5 discriminator 7
 13001 03b4 0130E0E3 		mvn	r3, #1
 13002              		.loc 1 5236 5
 13003 03b8 020100EA 		b	.L808
 13004              	.L827:
 13005              		.loc 1 5236 5 discriminator 2
 13006 03bc 04309BE5 		ldr	r3, [fp, #4]
 13007 03c0 2324A0E1 		lsr	r2, r3, #8
 13008 03c4 30301BE5 		ldr	r3, [fp, #-48]
 13009 03c8 143093E5 		ldr	r3, [r3, #20]
 13010 03cc 030052E1 		cmp	r2, r3
 13011 03d0 0100003A 		bcc	.L831
 13012              		.loc 1 5236 5 discriminator 8
 13013 03d4 0230E0E3 		mvn	r3, #2
 13014              		.loc 1 5236 5
 13015 03d8 FA0000EA 		b	.L808
 13016              	.L831:
 13017              		.loc 1 5236 5 discriminator 9
 13018 03dc 04309BE5 		ldr	r3, [fp, #4]
 13019 03e0 2334A0E1 		lsr	r3, r3, #8
 13020 03e4 8322A0E1 		lsl	r2, r3, #5
 13021 03e8 30301BE5 		ldr	r3, [fp, #-48]
 13022 03ec 0C3093E5 		ldr	r3, [r3, #12]
 13023 03f0 033082E0 		add	r3, r2, r3
 13024 03f4 0C300BE5 		str	r3, [fp, #-12]
 13025 03f8 0C301BE5 		ldr	r3, [fp, #-12]
 13026 03fc 0300A0E1 		mov	r0, r3
 13027 0400 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13028 0404 18000BE5 		str	r0, [fp, #-24]
 13029              		.loc 1 5236 5 discriminator 1
 13030 0408 18301BE5 		ldr	r3, [fp, #-24]
 13031 040c FF3803E2 		and	r3, r3, #16711680
 13032 0410 020853E3 		cmp	r3, #131072
 13033 0414 0100001A 		bne	.L832
 13034              		.loc 1 5236 5 discriminator 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 322


 13035 0418 0830E0E3 		mvn	r3, #8
 13036              		.loc 1 5236 5
 13037 041c E90000EA 		b	.L808
 13038              	.L832:
 13039              		.loc 1 5236 5 discriminator 11
 13040 0420 18301BE5 		ldr	r3, [fp, #-24]
 13041 0424 233CA0E1 		lsr	r3, r3, #24
 13042 0428 030053E3 		cmp	r3, #3
 13043 042c 0100000A 		beq	.L833
 13044              		.loc 1 5236 5 discriminator 12
 13045 0430 0130E0E3 		mvn	r3, #1
 13046              		.loc 1 5236 5
 13047 0434 E30000EA 		b	.L808
 13048              	.L833:
 13049              		.loc 1 5236 5 discriminator 13
 13050 0438 04309BE5 		ldr	r3, [fp, #4]
 13051 043c 7F2003E2 		and	r2, r3, #127
 13052 0440 0C301BE5 		ldr	r3, [fp, #-12]
 13053 0444 143093E5 		ldr	r3, [r3, #20]
 13054 0448 030052E1 		cmp	r2, r3
 13055 044c 0100003A 		bcc	.L834
 13056              		.loc 1 5236 5 discriminator 14
 13057 0450 0230E0E3 		mvn	r3, #2
 13058              		.loc 1 5236 5
 13059 0454 DB0000EA 		b	.L808
 13060              	.L834:
 13061              		.loc 1 5236 5 discriminator 15
 13062 0458 04309BE5 		ldr	r3, [fp, #4]
 13063 045c 7F3003E2 		and	r3, r3, #127
 13064 0460 8322A0E1 		lsl	r2, r3, #5
 13065 0464 0C301BE5 		ldr	r3, [fp, #-12]
 13066 0468 0C3093E5 		ldr	r3, [r3, #12]
 13067 046c 033082E0 		add	r3, r2, r3
 13068 0470 0C300BE5 		str	r3, [fp, #-12]
 13069 0474 0C301BE5 		ldr	r3, [fp, #-12]
 13070 0478 0300A0E1 		mov	r0, r3
 13071 047c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13072 0480 18000BE5 		str	r0, [fp, #-24]
 13073              		.loc 1 5236 5 discriminator 1
 13074 0484 18301BE5 		ldr	r3, [fp, #-24]
 13075 0488 FF3803E2 		and	r3, r3, #16711680
 13076 048c 020853E3 		cmp	r3, #131072
 13077 0490 0100001A 		bne	.L835
 13078              		.loc 1 5236 5 discriminator 16
 13079 0494 0830E0E3 		mvn	r3, #8
 13080              		.loc 1 5236 5
 13081 0498 CA0000EA 		b	.L808
 13082              	.L835:
 13083              		.loc 1 5236 5 discriminator 17
 13084 049c 18301BE5 		ldr	r3, [fp, #-24]
 13085 04a0 233CA0E1 		lsr	r3, r3, #24
 13086 04a4 050053E3 		cmp	r3, #5
 13087 04a8 0100000A 		beq	.L830
 13088              		.loc 1 5236 5 discriminator 18
 13089 04ac 0130E0E3 		mvn	r3, #1
 13090              		.loc 1 5236 5
 13091 04b0 C40000EA 		b	.L808
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 323


 13092              	.L830:
5237:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
5238:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5239:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 13093              		.loc 1 5239 5 is_stmt 1
 13094 04b4 08301BE5 		ldr	r3, [fp, #-8]
 13095 04b8 083093E5 		ldr	r3, [r3, #8]
 13096 04bc 013003E2 		and	r3, r3, #1
 13097 04c0 000053E3 		cmp	r3, #0
 13098 04c4 0100001A 		bne	.L836
 13099              		.loc 1 5239 5 is_stmt 0 discriminator 1
 13100 04c8 0630E0E3 		mvn	r3, #6
 13101              		.loc 1 5239 5
 13102 04cc BD0000EA 		b	.L808
 13103              	.L836:
5240:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 13104              		.loc 1 5240 5 is_stmt 1
 13105 04d0 0C301BE5 		ldr	r3, [fp, #-12]
 13106 04d4 083093E5 		ldr	r3, [r3, #8]
 13107 04d8 023003E2 		and	r3, r3, #2
 13108 04dc 000053E3 		cmp	r3, #0
 13109 04e0 0100001A 		bne	.L837
 13110              		.loc 1 5240 5 is_stmt 0 discriminator 1
 13111 04e4 0630E0E3 		mvn	r3, #6
 13112              		.loc 1 5240 5
 13113 04e8 B60000EA 		b	.L808
 13114              	.L837:
5241:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
5242:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13115              		.loc 1 5242 7 is_stmt 1
 13116 04ec 14309BE5 		ldr	r3, [fp, #20]
 13117 04f0 000053E3 		cmp	r3, #0
 13118 04f4 0200001A 		bne	.L838
5243:../../Source/Kernel/rme_kernel.c ****     {
5244:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5245:../../Source/Kernel/rme_kernel.c ****         
5246:../../Source/Kernel/rme_kernel.c ****         Size=RME_THD_SIZE(Attr);
 13119              		.loc 1 5246 13
 13120 04f8 9C30A0E3 		mov	r3, #156
 13121 04fc 14300BE5 		str	r3, [fp, #-20]
 13122 0500 010000EA 		b	.L839
 13123              	.L838:
5247:../../Source/Kernel/rme_kernel.c ****     }
5248:../../Source/Kernel/rme_kernel.c ****     else
5249:../../Source/Kernel/rme_kernel.c ****     {
5250:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5251:../../Source/Kernel/rme_kernel.c ****         
5252:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_SIZE==0U)
5253:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
5254:../../Source/Kernel/rme_kernel.c **** #else
5255:../../Source/Kernel/rme_kernel.c ****         Size=RME_HYP_SIZE;
 13124              		.loc 1 5255 13
 13125 0504 5830A0E3 		mov	r3, #88
 13126 0508 14300BE5 		str	r3, [fp, #-20]
 13127              	.L839:
5256:../../Source/Kernel/rme_kernel.c **** #endif
5257:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 324


5258:../../Source/Kernel/rme_kernel.c ****     
5259:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_THD,Raddr,Vaddr,Size);
 13128              		.loc 1 5259 5
 13129 050c 10301BE5 		ldr	r3, [fp, #-16]
 13130 0510 083093E5 		ldr	r3, [r3, #8]
 13131 0514 043003E2 		and	r3, r3, #4
 13132 0518 000053E3 		cmp	r3, #0
 13133 051c 0100001A 		bne	.L840
 13134              		.loc 1 5259 5 is_stmt 0 discriminator 1
 13135 0520 0630E0E3 		mvn	r3, #6
 13136              		.loc 1 5259 5
 13137 0524 A70000EA 		b	.L808
 13138              	.L840:
 13139              		.loc 1 5259 5 discriminator 2
 13140 0528 10301BE5 		ldr	r3, [fp, #-16]
 13141 052c 143093E5 		ldr	r3, [r3, #20]
 13142 0530 0C209BE5 		ldr	r2, [fp, #12]
 13143 0534 033082E0 		add	r3, r2, r3
 13144 0538 1C300BE5 		str	r3, [fp, #-28]
 13145 053c 1C201BE5 		ldr	r2, [fp, #-28]
 13146 0540 0C309BE5 		ldr	r3, [fp, #12]
 13147 0544 030052E1 		cmp	r2, r3
 13148 0548 0100002A 		bcs	.L841
 13149              		.loc 1 5259 5 discriminator 3
 13150 054c 0630E0E3 		mvn	r3, #6
 13151              		.loc 1 5259 5
 13152 0550 9C0000EA 		b	.L808
 13153              	.L841:
 13154              		.loc 1 5259 5 discriminator 4
 13155 0554 10301BE5 		ldr	r3, [fp, #-16]
 13156 0558 143093E5 		ldr	r3, [r3, #20]
 13157 055c 1C201BE5 		ldr	r2, [fp, #-28]
 13158 0560 030052E1 		cmp	r2, r3
 13159 0564 0100002A 		bcs	.L842
 13160              		.loc 1 5259 5 discriminator 5
 13161 0568 0630E0E3 		mvn	r3, #6
 13162              		.loc 1 5259 5
 13163 056c 950000EA 		b	.L808
 13164              	.L842:
 13165              		.loc 1 5259 5 discriminator 6
 13166 0570 1C201BE5 		ldr	r2, [fp, #-28]
 13167 0574 14301BE5 		ldr	r3, [fp, #-20]
 13168 0578 033082E0 		add	r3, r2, r3
 13169 057c 1C201BE5 		ldr	r2, [fp, #-28]
 13170 0580 030052E1 		cmp	r2, r3
 13171 0584 0100009A 		bls	.L843
 13172              		.loc 1 5259 5 discriminator 7
 13173 0588 0630E0E3 		mvn	r3, #6
 13174              		.loc 1 5259 5
 13175 058c 8D0000EA 		b	.L808
 13176              	.L843:
 13177              		.loc 1 5259 5 discriminator 8
 13178 0590 10301BE5 		ldr	r3, [fp, #-16]
 13179 0594 182093E5 		ldr	r2, [r3, #24]
 13180 0598 1C101BE5 		ldr	r1, [fp, #-28]
 13181 059c 14301BE5 		ldr	r3, [fp, #-20]
 13182 05a0 033081E0 		add	r3, r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 325


 13183 05a4 013043E2 		sub	r3, r3, #1
 13184 05a8 030052E1 		cmp	r2, r3
 13185 05ac 0100002A 		bcs	.L844
 13186              		.loc 1 5259 5 discriminator 9
 13187 05b0 0630E0E3 		mvn	r3, #6
 13188              		.loc 1 5259 5
 13189 05b4 830000EA 		b	.L808
 13190              	.L844:
5260:../../Source/Kernel/rme_kernel.c ****     
5261:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5262:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 13191              		.loc 1 5262 5 is_stmt 1
 13192 05b8 08301BE5 		ldr	r3, [fp, #-8]
 13193 05bc 142093E5 		ldr	r2, [r3, #20]
 13194 05c0 3C301BE5 		ldr	r3, [fp, #-60]
 13195 05c4 030052E1 		cmp	r2, r3
 13196 05c8 0100008A 		bhi	.L845
 13197              		.loc 1 5262 5 is_stmt 0 discriminator 1
 13198 05cc 0230E0E3 		mvn	r3, #2
 13199              		.loc 1 5262 5
 13200 05d0 7C0000EA 		b	.L808
 13201              	.L845:
 13202              		.loc 1 5262 5 discriminator 2
 13203 05d4 3C301BE5 		ldr	r3, [fp, #-60]
 13204 05d8 8322A0E1 		lsl	r2, r3, #5
 13205 05dc 08301BE5 		ldr	r3, [fp, #-8]
 13206 05e0 0C3093E5 		ldr	r3, [r3, #12]
 13207 05e4 033082E0 		add	r3, r2, r3
 13208 05e8 20300BE5 		str	r3, [fp, #-32]
5263:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5264:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 13209              		.loc 1 5264 5 is_stmt 1
 13210 05ec 20301BE5 		ldr	r3, [fp, #-32]
 13211 05f0 0128A0E3 		mov	r2, #65536
 13212 05f4 0010A0E3 		mov	r1, #0
 13213 05f8 0300A0E1 		mov	r0, r3
 13214 05fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13215 0600 0030A0E1 		mov	r3, r0
 13216              		.loc 1 5264 5 is_stmt 0 discriminator 1
 13217 0604 000053E3 		cmp	r3, #0
 13218 0608 0100001A 		bne	.L846
 13219 060c 0430E0E3 		mvn	r3, #4
 13220              		.loc 1 5264 5
 13221 0610 6C0000EA 		b	.L808
 13222              	.L846:
 13223              		.loc 1 5264 5 discriminator 2
 13224 0614 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13225 0618 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13226 061c 002093E5 		ldr	r2, [r3]
 13227 0620 20301BE5 		ldr	r3, [fp, #-32]
 13228 0624 102083E5 		str	r2, [r3, #16]
5265:../../Source/Kernel/rme_kernel.c ****      
5266:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5267:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Size)<0)
 13229              		.loc 1 5267 8 is_stmt 1
 13230 0628 14101BE5 		ldr	r1, [fp, #-20]
 13231 062c 1C001BE5 		ldr	r0, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 326


 13232 0630 FEFFFFEB 		bl	_RME_Kot_Mark
 13233 0634 0030A0E1 		mov	r3, r0
 13234              		.loc 1 5267 7 discriminator 1
 13235 0638 000053E3 		cmp	r3, #0
 13236 063c 050000AA 		bge	.L847
5268:../../Source/Kernel/rme_kernel.c ****     {
5269:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5270:../../Source/Kernel/rme_kernel.c **** 
5271:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 13237              		.loc 1 5271 9
 13238 0640 20301BE5 		ldr	r3, [fp, #-32]
 13239 0644 0010A0E3 		mov	r1, #0
 13240 0648 0300A0E1 		mov	r0, r3
 13241 064c FEFFFFEB 		bl	__RME_A7A_Write_Release
5272:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 13242              		.loc 1 5272 16
 13243 0650 0330E0E3 		mvn	r3, #3
 13244 0654 5B0000EA 		b	.L808
 13245              	.L847:
5273:../../Source/Kernel/rme_kernel.c ****     }
5274:../../Source/Kernel/rme_kernel.c ****     else
5275:../../Source/Kernel/rme_kernel.c ****     {
5276:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5277:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5278:../../Source/Kernel/rme_kernel.c ****     }
5279:../../Source/Kernel/rme_kernel.c ****     
5280:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5281:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 13246              		.loc 1 5281 11
 13247 0658 1C301BE5 		ldr	r3, [fp, #-28]
 13248 065c 24300BE5 		str	r3, [fp, #-36]
5282:../../Source/Kernel/rme_kernel.c ****     /* These thread's TID default to 0, and have no timeslices assigned */
5283:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 13249              		.loc 1 5283 22
 13250 0660 24301BE5 		ldr	r3, [fp, #-36]
 13251 0664 0020A0E3 		mov	r2, #0
 13252 0668 102083E5 		str	r2, [r3, #16]
5284:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 13253              		.loc 1 5284 24
 13254 066c 24301BE5 		ldr	r3, [fp, #-36]
 13255 0670 0020A0E3 		mov	r2, #0
 13256 0674 182083E5 		str	r2, [r3, #24]
5285:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_TIMEOUT;
 13257              		.loc 1 5285 24
 13258 0678 24301BE5 		ldr	r3, [fp, #-36]
 13259 067c 0220A0E3 		mov	r2, #2
 13260 0680 1C2083E5 		str	r2, [r3, #28]
5286:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 13261              		.loc 1 5286 14
 13262 0684 0C301BE5 		ldr	r3, [fp, #-12]
 13263 0688 003093E5 		ldr	r3, [r3]
 13264 068c 7330FFE6 		uxth	r3, r3
 13265 0690 000053E3 		cmp	r3, #0
 13266 0694 0200000A 		beq	.L848
 13267              		.loc 1 5286 14 is_stmt 0 discriminator 1
 13268 0698 0C301BE5 		ldr	r3, [fp, #-12]
 13269 069c 043093E5 		ldr	r3, [r3, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 327


 13270 06a0 000000EA 		b	.L849
 13271              	.L848:
 13272              		.loc 1 5286 14 discriminator 2
 13273 06a4 0C301BE5 		ldr	r3, [fp, #-12]
 13274              	.L849:
 13275              		.loc 1 5286 13 is_stmt 1 discriminator 4
 13276 06a8 28300BE5 		str	r3, [fp, #-40]
5287:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 13277              		.loc 1 5287 22
 13278 06ac 24301BE5 		ldr	r3, [fp, #-36]
 13279 06b0 28201BE5 		ldr	r2, [fp, #-40]
 13280 06b4 2C2083E5 		str	r2, [r3, #44]
5288:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 13281              		.loc 1 5288 25
 13282 06b8 24301BE5 		ldr	r3, [fp, #-36]
 13283 06bc 0020A0E3 		mov	r2, #0
 13284 06c0 282083E5 		str	r2, [r3, #40]
5289:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=Prio_Max;
 13285              		.loc 1 5289 27
 13286 06c4 24301BE5 		ldr	r3, [fp, #-36]
 13287 06c8 08209BE5 		ldr	r2, [fp, #8]
 13288 06cc 242083E5 		str	r2, [r3, #36]
5290:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=0U;
 13289              		.loc 1 5290 28
 13290 06d0 24301BE5 		ldr	r3, [fp, #-36]
 13291 06d4 0020A0E3 		mov	r2, #0
 13292 06d8 302083E5 		str	r2, [r3, #48]
5291:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 13293              		.loc 1 5291 28
 13294 06dc 24301BE5 		ldr	r3, [fp, #-36]
 13295 06e0 0020A0E3 		mov	r2, #0
 13296 06e4 382083E5 		str	r2, [r3, #56]
5292:../../Source/Kernel/rme_kernel.c ****     /* Currently the thread is not bound to any particular CPU */
5293:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=RME_THD_FREE;
 13297              		.loc 1 5293 24
 13298 06e8 24301BE5 		ldr	r3, [fp, #-36]
 13299 06ec 0020E0E3 		mvn	r2, #0
 13300 06f0 142083E5 		str	r2, [r3, #20]
5294:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5295:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 13301              		.loc 1 5295 5
 13302 06f4 24301BE5 		ldr	r3, [fp, #-36]
 13303 06f8 083083E2 		add	r3, r3, #8
 13304 06fc 0300A0E1 		mov	r0, r3
 13305 0700 FEFFFFEB 		bl	_RME_List_Crt
5296:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 13306              		.loc 1 5296 5
 13307 0704 24301BE5 		ldr	r3, [fp, #-36]
 13308 0708 3C3083E2 		add	r3, r3, #60
 13309 070c 0300A0E1 		mov	r0, r3
 13310 0710 FEFFFFEB 		bl	_RME_List_Crt
5297:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this is not a hypervisor thread yet */
5298:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13311              		.loc 1 5298 7
 13312 0714 14309BE5 		ldr	r3, [fp, #20]
 13313 0718 000053E3 		cmp	r3, #0
 13314 071c 0800001A 		bne	.L850
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 328


5299:../../Source/Kernel/rme_kernel.c ****     {
5300:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5301:../../Source/Kernel/rme_kernel.c ****         
5302:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr;
 13315              		.loc 1 5302 29
 13316 0720 24301BE5 		ldr	r3, [fp, #-36]
 13317 0724 10209BE5 		ldr	r2, [fp, #16]
 13318 0728 442083E5 		str	r2, [r3, #68]
5303:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 13319              		.loc 1 5303 52
 13320 072c 1C301BE5 		ldr	r3, [fp, #-28]
 13321 0730 583083E2 		add	r3, r3, #88
 13322              		.loc 1 5303 25
 13323 0734 0320A0E1 		mov	r2, r3
 13324              		.loc 1 5303 24
 13325 0738 24301BE5 		ldr	r3, [fp, #-36]
 13326 073c 482083E5 		str	r2, [r3, #72]
 13327 0740 060000EA 		b	.L851
 13328              	.L850:
5304:../../Source/Kernel/rme_kernel.c ****     }
5305:../../Source/Kernel/rme_kernel.c ****     /* Default to HYP_VA_BASE for all created hypervisor threads */
5306:../../Source/Kernel/rme_kernel.c ****     else
5307:../../Source/Kernel/rme_kernel.c ****     {
5308:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5309:../../Source/Kernel/rme_kernel.c ****         
5310:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr|RME_THD_HYP_FLAG;
 13329              		.loc 1 5310 34
 13330 0744 10309BE5 		ldr	r3, [fp, #16]
 13331 0748 022183E3 		orr	r2, r3, #-2147483648
 13332              		.loc 1 5310 29
 13333 074c 24301BE5 		ldr	r3, [fp, #-36]
 13334 0750 442083E5 		str	r2, [r3, #68]
5311:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg *)RME_HYP_VA_BASE;
 13335              		.loc 1 5311 24
 13336 0754 24301BE5 		ldr	r3, [fp, #-36]
 13337 0758 0222A0E3 		mov	r2, #536870912
 13338 075c 482083E5 		str	r2, [r3, #72]
 13339              	.L851:
5312:../../Source/Kernel/rme_kernel.c ****     }
5313:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5314:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 13340              		.loc 1 5314 5
 13341 0760 24301BE5 		ldr	r3, [fp, #-36]
 13342 0764 4C3083E2 		add	r3, r3, #76
 13343 0768 0300A0E1 		mov	r0, r3
 13344 076c FEFFFFEB 		bl	_RME_List_Crt
5315:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 13345              		.loc 1 5315 29
 13346 0770 24301BE5 		ldr	r3, [fp, #-36]
 13347 0774 0020A0E3 		mov	r2, #0
 13348 0778 542083E5 		str	r2, [r3, #84]
5316:../../Source/Kernel/rme_kernel.c **** 
5317:../../Source/Kernel/rme_kernel.c ****     /* Header init */
5318:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=0U;
 13349              		.loc 1 5318 27
 13350 077c 20301BE5 		ldr	r3, [fp, #-32]
 13351 0780 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 329


 13352 0784 042083E5 		str	r2, [r3, #4]
5319:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 13353              		.loc 1 5319 25
 13354 0788 20301BE5 		ldr	r3, [fp, #-32]
 13355 078c 1C201BE5 		ldr	r2, [fp, #-28]
 13356 0790 0C2083E5 		str	r2, [r3, #12]
5320:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_ALL;
 13357              		.loc 1 5320 23
 13358 0794 20301BE5 		ldr	r3, [fp, #-32]
 13359 0798 FF2100E3 		movw	r2, #511
 13360 079c 082083E5 		str	r2, [r3, #8]
5321:../../Source/Kernel/rme_kernel.c **** 
5322:../../Source/Kernel/rme_kernel.c ****     /* Reference process */
5323:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 13361              		.loc 1 5323 5
 13362 07a0 28301BE5 		ldr	r3, [fp, #-40]
 13363 07a4 043083E2 		add	r3, r3, #4
 13364 07a8 0110A0E3 		mov	r1, #1
 13365 07ac 0300A0E1 		mov	r0, r3
 13366 07b0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5324:../../Source/Kernel/rme_kernel.c ****     
5325:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5326:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 13367              		.loc 1 5326 5
 13368 07b4 20301BE5 		ldr	r3, [fp, #-32]
 13369 07b8 0614A0E3 		mov	r1, #100663296
 13370 07bc 0300A0E1 		mov	r0, r3
 13371 07c0 FEFFFFEB 		bl	__RME_A7A_Write_Release
5327:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5328:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5329:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5330:../../Source/Kernel/rme_kernel.c **** 
5331:../../Source/Kernel/rme_kernel.c ****     return 0;
 13372              		.loc 1 5331 12
 13373 07c4 0030A0E3 		mov	r3, #0
 13374              	.L808:
5332:../../Source/Kernel/rme_kernel.c **** }
 13375              		.loc 1 5332 1
 13376 07c8 0300A0E1 		mov	r0, r3
 13377 07cc 04D04BE2 		sub	sp, fp, #4
 13378              		.cfi_def_cfa 13, 8
 13379              		@ sp needed
 13380 07d0 0088BDE8 		pop	{fp, pc}
 13381              		.cfi_endproc
 13382              	.LFE56:
 13384              		.section	.text._RME_Thd_Del,"ax",%progbits
 13385              		.align	2
 13386              		.syntax unified
 13387              		.arm
 13389              	_RME_Thd_Del:
 13390              	.LFB57:
5333:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Crt *************************************************/
5334:../../Source/Kernel/rme_kernel.c **** 
5335:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Del ******************************************************
5336:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread.
5337:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
5338:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 330


5339:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5340:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread in the captbl.
5341:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5342:../../Source/Kernel/rme_kernel.c **** Output      : None.
5343:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5344:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5345:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Del(struct RME_Cap_Cpt* Cpt,
5346:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5347:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd)
5348:../../Source/Kernel/rme_kernel.c **** {
 13391              		.loc 1 5348 1
 13392              		.cfi_startproc
 13393              		@ args = 0, pretend = 0, frame = 40
 13394              		@ frame_needed = 1, uses_anonymous_args = 0
 13395 0000 00482DE9 		push	{fp, lr}
 13396              		.cfi_def_cfa_offset 8
 13397              		.cfi_offset 11, -8
 13398              		.cfi_offset 14, -4
 13399 0004 04B08DE2 		add	fp, sp, #4
 13400              		.cfi_def_cfa 11, 4
 13401 0008 28D04DE2 		sub	sp, sp, #40
 13402 000c 20000BE5 		str	r0, [fp, #-32]
 13403 0010 24100BE5 		str	r1, [fp, #-36]
 13404 0014 28200BE5 		str	r2, [fp, #-40]
5349:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5350:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Del;
5351:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5352:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
5353:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5354:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
5355:../../Source/Kernel/rme_kernel.c ****     
5356:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5357:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 13405              		.loc 1 5357 5
 13406 0018 24301BE5 		ldr	r3, [fp, #-36]
 13407 001c 803003E2 		and	r3, r3, #128
 13408 0020 000053E3 		cmp	r3, #0
 13409 0024 1C00001A 		bne	.L853
 13410              		.loc 1 5357 5 is_stmt 0 discriminator 1
 13411 0028 20301BE5 		ldr	r3, [fp, #-32]
 13412 002c 142093E5 		ldr	r2, [r3, #20]
 13413 0030 24301BE5 		ldr	r3, [fp, #-36]
 13414 0034 030052E1 		cmp	r2, r3
 13415 0038 0100008A 		bhi	.L854
 13416              		.loc 1 5357 5 discriminator 3
 13417 003c 0230E0E3 		mvn	r3, #2
 13418              		.loc 1 5357 5
 13419 0040 0A0100EA 		b	.L855
 13420              	.L854:
 13421              		.loc 1 5357 5 discriminator 4
 13422 0044 24301BE5 		ldr	r3, [fp, #-36]
 13423 0048 8322A0E1 		lsl	r2, r3, #5
 13424 004c 20301BE5 		ldr	r3, [fp, #-32]
 13425 0050 0C3093E5 		ldr	r3, [r3, #12]
 13426 0054 033082E0 		add	r3, r2, r3
 13427 0058 08300BE5 		str	r3, [fp, #-8]
 13428 005c 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 331


 13429 0060 0300A0E1 		mov	r0, r3
 13430 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13431 0068 0C000BE5 		str	r0, [fp, #-12]
 13432              		.loc 1 5357 5 discriminator 1
 13433 006c 0C301BE5 		ldr	r3, [fp, #-12]
 13434 0070 FF3803E2 		and	r3, r3, #16711680
 13435 0074 020853E3 		cmp	r3, #131072
 13436 0078 0100001A 		bne	.L856
 13437              		.loc 1 5357 5 discriminator 5
 13438 007c 0830E0E3 		mvn	r3, #8
 13439              		.loc 1 5357 5
 13440 0080 FA0000EA 		b	.L855
 13441              	.L856:
 13442              		.loc 1 5357 5 discriminator 6
 13443 0084 0C301BE5 		ldr	r3, [fp, #-12]
 13444 0088 233CA0E1 		lsr	r3, r3, #24
 13445 008c 030053E3 		cmp	r3, #3
 13446 0090 3F00000A 		beq	.L857
 13447              		.loc 1 5357 5 discriminator 7
 13448 0094 0130E0E3 		mvn	r3, #1
 13449              		.loc 1 5357 5
 13450 0098 F40000EA 		b	.L855
 13451              	.L853:
 13452              		.loc 1 5357 5 discriminator 2
 13453 009c 24301BE5 		ldr	r3, [fp, #-36]
 13454 00a0 2324A0E1 		lsr	r2, r3, #8
 13455 00a4 20301BE5 		ldr	r3, [fp, #-32]
 13456 00a8 143093E5 		ldr	r3, [r3, #20]
 13457 00ac 030052E1 		cmp	r2, r3
 13458 00b0 0100003A 		bcc	.L858
 13459              		.loc 1 5357 5 discriminator 8
 13460 00b4 0230E0E3 		mvn	r3, #2
 13461              		.loc 1 5357 5
 13462 00b8 EC0000EA 		b	.L855
 13463              	.L858:
 13464              		.loc 1 5357 5 discriminator 9
 13465 00bc 24301BE5 		ldr	r3, [fp, #-36]
 13466 00c0 2334A0E1 		lsr	r3, r3, #8
 13467 00c4 8322A0E1 		lsl	r2, r3, #5
 13468 00c8 20301BE5 		ldr	r3, [fp, #-32]
 13469 00cc 0C3093E5 		ldr	r3, [r3, #12]
 13470 00d0 033082E0 		add	r3, r2, r3
 13471 00d4 08300BE5 		str	r3, [fp, #-8]
 13472 00d8 08301BE5 		ldr	r3, [fp, #-8]
 13473 00dc 0300A0E1 		mov	r0, r3
 13474 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13475 00e4 0C000BE5 		str	r0, [fp, #-12]
 13476              		.loc 1 5357 5 discriminator 1
 13477 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 13478 00ec FF3803E2 		and	r3, r3, #16711680
 13479 00f0 020853E3 		cmp	r3, #131072
 13480 00f4 0100001A 		bne	.L859
 13481              		.loc 1 5357 5 discriminator 10
 13482 00f8 0830E0E3 		mvn	r3, #8
 13483              		.loc 1 5357 5
 13484 00fc DB0000EA 		b	.L855
 13485              	.L859:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 332


 13486              		.loc 1 5357 5 discriminator 11
 13487 0100 0C301BE5 		ldr	r3, [fp, #-12]
 13488 0104 233CA0E1 		lsr	r3, r3, #24
 13489 0108 030053E3 		cmp	r3, #3
 13490 010c 0100000A 		beq	.L860
 13491              		.loc 1 5357 5 discriminator 12
 13492 0110 0130E0E3 		mvn	r3, #1
 13493              		.loc 1 5357 5
 13494 0114 D50000EA 		b	.L855
 13495              	.L860:
 13496              		.loc 1 5357 5 discriminator 13
 13497 0118 24301BE5 		ldr	r3, [fp, #-36]
 13498 011c 7F2003E2 		and	r2, r3, #127
 13499 0120 08301BE5 		ldr	r3, [fp, #-8]
 13500 0124 143093E5 		ldr	r3, [r3, #20]
 13501 0128 030052E1 		cmp	r2, r3
 13502 012c 0100003A 		bcc	.L861
 13503              		.loc 1 5357 5 discriminator 14
 13504 0130 0230E0E3 		mvn	r3, #2
 13505              		.loc 1 5357 5
 13506 0134 CD0000EA 		b	.L855
 13507              	.L861:
 13508              		.loc 1 5357 5 discriminator 15
 13509 0138 24301BE5 		ldr	r3, [fp, #-36]
 13510 013c 7F3003E2 		and	r3, r3, #127
 13511 0140 8322A0E1 		lsl	r2, r3, #5
 13512 0144 08301BE5 		ldr	r3, [fp, #-8]
 13513 0148 0C3093E5 		ldr	r3, [r3, #12]
 13514 014c 033082E0 		add	r3, r2, r3
 13515 0150 08300BE5 		str	r3, [fp, #-8]
 13516 0154 08301BE5 		ldr	r3, [fp, #-8]
 13517 0158 0300A0E1 		mov	r0, r3
 13518 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13519 0160 0C000BE5 		str	r0, [fp, #-12]
 13520              		.loc 1 5357 5 discriminator 1
 13521 0164 0C301BE5 		ldr	r3, [fp, #-12]
 13522 0168 FF3803E2 		and	r3, r3, #16711680
 13523 016c 020853E3 		cmp	r3, #131072
 13524 0170 0100001A 		bne	.L862
 13525              		.loc 1 5357 5 discriminator 16
 13526 0174 0830E0E3 		mvn	r3, #8
 13527              		.loc 1 5357 5
 13528 0178 BC0000EA 		b	.L855
 13529              	.L862:
 13530              		.loc 1 5357 5 discriminator 17
 13531 017c 0C301BE5 		ldr	r3, [fp, #-12]
 13532 0180 233CA0E1 		lsr	r3, r3, #24
 13533 0184 030053E3 		cmp	r3, #3
 13534 0188 0100000A 		beq	.L857
 13535              		.loc 1 5357 5 discriminator 18
 13536 018c 0130E0E3 		mvn	r3, #1
 13537              		.loc 1 5357 5
 13538 0190 B60000EA 		b	.L855
 13539              	.L857:
5358:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
5359:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
5360:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 333


 13540              		.loc 1 5360 5 is_stmt 1
 13541 0194 08301BE5 		ldr	r3, [fp, #-8]
 13542 0198 083093E5 		ldr	r3, [r3, #8]
 13543 019c 023003E2 		and	r3, r3, #2
 13544 01a0 000053E3 		cmp	r3, #0
 13545 01a4 0100001A 		bne	.L863
 13546              		.loc 1 5360 5 is_stmt 0 discriminator 1
 13547 01a8 0630E0E3 		mvn	r3, #6
 13548              		.loc 1 5360 5
 13549 01ac AF0000EA 		b	.L855
 13550              	.L863:
5361:../../Source/Kernel/rme_kernel.c ****     
5362:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5363:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Del);
 13551              		.loc 1 5363 5 is_stmt 1
 13552 01b0 08301BE5 		ldr	r3, [fp, #-8]
 13553 01b4 142093E5 		ldr	r2, [r3, #20]
 13554 01b8 28301BE5 		ldr	r3, [fp, #-40]
 13555 01bc 030052E1 		cmp	r2, r3
 13556 01c0 0100008A 		bhi	.L864
 13557              		.loc 1 5363 5 is_stmt 0 discriminator 1
 13558 01c4 0230E0E3 		mvn	r3, #2
 13559              		.loc 1 5363 5
 13560 01c8 A80000EA 		b	.L855
 13561              	.L864:
 13562              		.loc 1 5363 5 discriminator 2
 13563 01cc 28301BE5 		ldr	r3, [fp, #-40]
 13564 01d0 8322A0E1 		lsl	r2, r3, #5
 13565 01d4 08301BE5 		ldr	r3, [fp, #-8]
 13566 01d8 0C3093E5 		ldr	r3, [r3, #12]
 13567 01dc 033082E0 		add	r3, r2, r3
 13568 01e0 10300BE5 		str	r3, [fp, #-16]
5364:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
5365:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Thd_Del,Type_Stat,RME_CAP_TYPE_THD);
 13569              		.loc 1 5365 5 is_stmt 1
 13570 01e4 10301BE5 		ldr	r3, [fp, #-16]
 13571 01e8 0300A0E1 		mov	r0, r3
 13572 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13573 01f0 0C000BE5 		str	r0, [fp, #-12]
 13574              		.loc 1 5365 5 is_stmt 0 discriminator 1
 13575 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 13576 01f8 FF3803E2 		and	r3, r3, #16711680
 13577 01fc 020853E3 		cmp	r3, #131072
 13578 0200 0100000A 		beq	.L865
 13579 0204 0830E0E3 		mvn	r3, #8
 13580              		.loc 1 5365 5
 13581 0208 980000EA 		b	.L855
 13582              	.L865:
 13583              		.loc 1 5365 5 discriminator 2
 13584 020c 0C301BE5 		ldr	r3, [fp, #-12]
 13585 0210 233CA0E1 		lsr	r3, r3, #24
 13586 0214 060053E3 		cmp	r3, #6
 13587 0218 0100000A 		beq	.L866
 13588              		.loc 1 5365 5 discriminator 3
 13589 021c 0130E0E3 		mvn	r3, #1
 13590              		.loc 1 5365 5
 13591 0220 920000EA 		b	.L855
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 334


 13592              	.L866:
 13593              		.loc 1 5365 5 discriminator 4
 13594 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13595 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13596 022c 002093E5 		ldr	r2, [r3]
 13597 0230 10301BE5 		ldr	r3, [fp, #-16]
 13598 0234 103093E5 		ldr	r3, [r3, #16]
 13599 0238 0310A0E1 		mov	r1, r3
 13600 023c 0200A0E1 		mov	r0, r2
 13601 0240 FEFFFFEB 		bl	_RME_Diff
 13602 0244 0030A0E1 		mov	r3, r0
 13603              		.loc 1 5365 5 discriminator 1
 13604 0248 0A0053E3 		cmp	r3, #10
 13605 024c 0100008A 		bhi	.L867
 13606              		.loc 1 5365 5 discriminator 5
 13607 0250 0730E0E3 		mvn	r3, #7
 13608              		.loc 1 5365 5
 13609 0254 850000EA 		b	.L855
 13610              	.L867:
 13611              		.loc 1 5365 5 discriminator 6
 13612 0258 10301BE5 		ldr	r3, [fp, #-16]
 13613 025c 043093E5 		ldr	r3, [r3, #4]
 13614 0260 000053E3 		cmp	r3, #0
 13615 0264 0B00000A 		beq	.L868
 13616              		.loc 1 5365 5 discriminator 7
 13617 0268 0C301BE5 		ldr	r3, [fp, #-12]
 13618 026c 7330FFE6 		uxth	r3, r3
 13619 0270 000053E3 		cmp	r3, #0
 13620 0274 0500001A 		bne	.L869
 13621              		.loc 1 5365 5 discriminator 9
 13622 0278 10001BE5 		ldr	r0, [fp, #-16]
 13623 027c 0C301BE5 		ldr	r3, [fp, #-12]
 13624 0280 FF38C3E3 		bic	r3, r3, #16711680
 13625 0284 0320A0E1 		mov	r2, r3
 13626 0288 0C101BE5 		ldr	r1, [fp, #-12]
 13627 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13628              	.L869:
 13629              		.loc 1 5365 5 discriminator 11
 13630 0290 0530E0E3 		mvn	r3, #5
 13631              		.loc 1 5365 5
 13632 0294 750000EA 		b	.L855
 13633              	.L868:
 13634              		.loc 1 5365 5 discriminator 8
 13635 0298 0C301BE5 		ldr	r3, [fp, #-12]
 13636 029c 7330FFE6 		uxth	r3, r3
 13637 02a0 000053E3 		cmp	r3, #0
 13638 02a4 0800000A 		beq	.L870
 13639              		.loc 1 5365 5 discriminator 12
 13640 02a8 003000E3 		movw	r3, #:lower16:.LC6
 13641 02ac 003040E3 		movt	r3, #:upper16:.LC6
 13642 02b0 002000E3 		movw	r2, #:lower16:.LC7
 13643 02b4 002040E3 		movt	r2, #:upper16:.LC7
 13644 02b8 F51401E3 		movw	r1, #5365
 13645 02bc 000000E3 		movw	r0, #:lower16:.LC8
 13646 02c0 000040E3 		movt	r0, #:upper16:.LC8
 13647 02c4 FEFFFFEB 		bl	RME_Log
 13648              	.L871:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 335


 13649              		.loc 1 5365 5
 13650 02c8 FEFFFFEA 		b	.L871
 13651              	.L870:
5366:../../Source/Kernel/rme_kernel.c ****     
5367:../../Source/Kernel/rme_kernel.c ****     /* Get the thread */
5368:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Del,struct RME_Thd_Struct*);
 13652              		.loc 1 5368 12 is_stmt 1
 13653 02cc 10301BE5 		ldr	r3, [fp, #-16]
 13654 02d0 0C3093E5 		ldr	r3, [r3, #12]
 13655              		.loc 1 5368 11
 13656 02d4 14300BE5 		str	r3, [fp, #-20]
5369:../../Source/Kernel/rme_kernel.c ****     
5370:../../Source/Kernel/rme_kernel.c ****     /* See if the thread is free. If still bound, we cannot proceed to deletion */
5371:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=RME_THD_FREE)
 13657              		.loc 1 5371 21
 13658 02d8 14301BE5 		ldr	r3, [fp, #-20]
 13659 02dc 143093E5 		ldr	r3, [r3, #20]
 13660              		.loc 1 5371 7
 13661 02e0 010073E3 		cmn	r3, #1
 13662 02e4 0700000A 		beq	.L872
5372:../../Source/Kernel/rme_kernel.c ****     {
5373:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5374:../../Source/Kernel/rme_kernel.c **** 
5375:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Thd_Del,Type_Stat);
 13663              		.loc 1 5375 9
 13664 02e8 10001BE5 		ldr	r0, [fp, #-16]
 13665 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 13666 02f0 FF38C3E3 		bic	r3, r3, #16711680
 13667 02f4 0320A0E1 		mov	r2, r3
 13668 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 13669 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
5376:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13670              		.loc 1 5376 16
 13671 0300 CB30E0E3 		mvn	r3, #203
 13672 0304 590000EA 		b	.L855
 13673              	.L872:
5377:../../Source/Kernel/rme_kernel.c ****     }
5378:../../Source/Kernel/rme_kernel.c ****     else
5379:../../Source/Kernel/rme_kernel.c ****     {
5380:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5381:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5382:../../Source/Kernel/rme_kernel.c ****     }
5383:../../Source/Kernel/rme_kernel.c ****     
5384:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
5385:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Thd_Del,Type_Stat);
 13674              		.loc 1 5385 5
 13675 0308 10301BE5 		ldr	r3, [fp, #-16]
 13676 030c 0020A0E3 		mov	r2, #0
 13677 0310 0C101BE5 		ldr	r1, [fp, #-12]
 13678 0314 0300A0E1 		mov	r0, r3
 13679 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13680 031c 0030A0E1 		mov	r3, r0
 13681              		.loc 1 5385 5 is_stmt 0 discriminator 1
 13682 0320 000053E3 		cmp	r3, #0
 13683 0324 1300001A 		bne	.L874
 13684 0328 0030E0E3 		mvn	r3, #0
 13685              		.loc 1 5385 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 336


 13686 032c 4F0000EA 		b	.L855
 13687              	.L875:
5386:../../Source/Kernel/rme_kernel.c ****     
5387:../../Source/Kernel/rme_kernel.c ****     /* Is the thread using any invocation? If yes, just pop the invocation
5388:../../Source/Kernel/rme_kernel.c ****      * stack to empty, and free all the invocation stubs. This can be virtually
5389:../../Source/Kernel/rme_kernel.c ****      * unbounded if the invocation stack is just too deep. This is left to the
5390:../../Source/Kernel/rme_kernel.c ****      * user; if this is what he or she wants, be our guest. */
5391:../../Source/Kernel/rme_kernel.c ****     while(Thread->Ctx.Invstk.Next!=&(Thread->Ctx.Invstk))
5392:../../Source/Kernel/rme_kernel.c ****     {
5393:../../Source/Kernel/rme_kernel.c ****         Invocation=(struct RME_Inv_Struct*)(Thread->Ctx.Invstk.Next);
 13688              		.loc 1 5393 19 is_stmt 1
 13689 0330 14301BE5 		ldr	r3, [fp, #-20]
 13690 0334 4C3093E5 		ldr	r3, [r3, #76]
 13691 0338 18300BE5 		str	r3, [fp, #-24]
5394:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 13692              		.loc 1 5394 9
 13693 033c 18301BE5 		ldr	r3, [fp, #-24]
 13694 0340 042093E5 		ldr	r2, [r3, #4]
 13695 0344 18301BE5 		ldr	r3, [fp, #-24]
 13696 0348 003093E5 		ldr	r3, [r3]
 13697 034c 0310A0E1 		mov	r1, r3
 13698 0350 0200A0E1 		mov	r0, r2
 13699 0354 FEFFFFEB 		bl	_RME_List_Del
5395:../../Source/Kernel/rme_kernel.c ****         Invocation->Thd_Act=0U;
 13700              		.loc 1 5395 28
 13701 0358 18301BE5 		ldr	r3, [fp, #-24]
 13702 035c 0020A0E3 		mov	r2, #0
 13703 0360 0C2083E5 		str	r2, [r3, #12]
5396:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Invstk_Depth--;
 13704              		.loc 1 5396 20
 13705 0364 14301BE5 		ldr	r3, [fp, #-20]
 13706 0368 543093E5 		ldr	r3, [r3, #84]
 13707              		.loc 1 5396 33
 13708 036c 012043E2 		sub	r2, r3, #1
 13709 0370 14301BE5 		ldr	r3, [fp, #-20]
 13710 0374 542083E5 		str	r2, [r3, #84]
 13711              	.L874:
5391:../../Source/Kernel/rme_kernel.c ****     {
 13712              		.loc 1 5391 29
 13713 0378 14301BE5 		ldr	r3, [fp, #-20]
 13714 037c 4C2093E5 		ldr	r2, [r3, #76]
5391:../../Source/Kernel/rme_kernel.c ****     {
 13715              		.loc 1 5391 36
 13716 0380 14301BE5 		ldr	r3, [fp, #-20]
 13717 0384 4C3083E2 		add	r3, r3, #76
5391:../../Source/Kernel/rme_kernel.c ****     {
 13718              		.loc 1 5391 34
 13719 0388 030052E1 		cmp	r2, r3
 13720 038c E7FFFF1A 		bne	.L875
5397:../../Source/Kernel/rme_kernel.c ****     }
5398:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thread->Ctx.Invstk_Depth==0U);
 13721              		.loc 1 5398 5
 13722 0390 14301BE5 		ldr	r3, [fp, #-20]
 13723 0394 543093E5 		ldr	r3, [r3, #84]
 13724 0398 000053E3 		cmp	r3, #0
 13725 039c 0800000A 		beq	.L876
 13726              		.loc 1 5398 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 337


 13727 03a0 003000E3 		movw	r3, #:lower16:.LC6
 13728 03a4 003040E3 		movt	r3, #:upper16:.LC6
 13729 03a8 002000E3 		movw	r2, #:lower16:.LC7
 13730 03ac 002040E3 		movt	r2, #:upper16:.LC7
 13731 03b0 161501E3 		movw	r1, #5398
 13732 03b4 000000E3 		movw	r0, #:lower16:.LC8
 13733 03b8 000040E3 		movt	r0, #:upper16:.LC8
 13734 03bc FEFFFFEB 		bl	RME_Log
 13735              	.L877:
 13736              		.loc 1 5398 5
 13737 03c0 FEFFFFEA 		b	.L877
 13738              	.L876:
5399:../../Source/Kernel/rme_kernel.c ****     
5400:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
5401:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Thread->Sched.Prc->Head.Root_Ref), -1);
 13739              		.loc 1 5401 5 is_stmt 1
 13740 03c4 14301BE5 		ldr	r3, [fp, #-20]
 13741 03c8 2C3093E5 		ldr	r3, [r3, #44]
 13742 03cc 043083E2 		add	r3, r3, #4
 13743 03d0 0010E0E3 		mvn	r1, #0
 13744 03d4 0300A0E1 		mov	r0, r3
 13745 03d8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5402:../../Source/Kernel/rme_kernel.c ****     
5403:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
5404:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)==0U)
 13746              		.loc 1 5404 20
 13747 03dc 14301BE5 		ldr	r3, [fp, #-20]
 13748 03e0 443093E5 		ldr	r3, [r3, #68]
 13749              		.loc 1 5404 7
 13750 03e4 000053E3 		cmp	r3, #0
 13751 03e8 0F0000BA 		blt	.L878
5405:../../Source/Kernel/rme_kernel.c ****     {
5406:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5407:../../Source/Kernel/rme_kernel.c **** 
5408:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13752              		.loc 1 5408 9
 13753 03ec 14301BE5 		ldr	r3, [fp, #-20]
 13754 03f0 9C10A0E3 		mov	r1, #156
 13755 03f4 0300A0E1 		mov	r0, r3
 13756 03f8 FEFFFFEB 		bl	_RME_Kot_Erase
 13757 03fc 0030A0E1 		mov	r3, r0
 13758              		.loc 1 5408 9 is_stmt 0 discriminator 1
 13759 0400 000053E3 		cmp	r3, #0
 13760 0404 1800000A 		beq	.L879
 13761 0408 003000E3 		movw	r3, #:lower16:.LC6
 13762 040c 003040E3 		movt	r3, #:upper16:.LC6
 13763 0410 002000E3 		movw	r2, #:lower16:.LC7
 13764 0414 002040E3 		movt	r2, #:upper16:.LC7
 13765 0418 201501E3 		movw	r1, #5408
 13766 041c 000000E3 		movw	r0, #:lower16:.LC8
 13767 0420 000040E3 		movt	r0, #:upper16:.LC8
 13768 0424 FEFFFFEB 		bl	RME_Log
 13769              	.L880:
 13770              		.loc 1 5408 9
 13771 0428 FEFFFFEA 		b	.L880
 13772              	.L878:
5409:../../Source/Kernel/rme_kernel.c ****                                   RME_THD_SIZE(Thread->Ctx.Hyp_Attr))==0);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 338


5410:../../Source/Kernel/rme_kernel.c ****     }
5411:../../Source/Kernel/rme_kernel.c ****     else
5412:../../Source/Kernel/rme_kernel.c ****     {
5413:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5414:../../Source/Kernel/rme_kernel.c **** 
5415:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13773              		.loc 1 5415 9 is_stmt 1
 13774 042c 14301BE5 		ldr	r3, [fp, #-20]
 13775 0430 5810A0E3 		mov	r1, #88
 13776 0434 0300A0E1 		mov	r0, r3
 13777 0438 FEFFFFEB 		bl	_RME_Kot_Erase
 13778 043c 0030A0E1 		mov	r3, r0
 13779              		.loc 1 5415 9 is_stmt 0 discriminator 1
 13780 0440 000053E3 		cmp	r3, #0
 13781 0444 0800000A 		beq	.L879
 13782 0448 003000E3 		movw	r3, #:lower16:.LC6
 13783 044c 003040E3 		movt	r3, #:upper16:.LC6
 13784 0450 002000E3 		movw	r2, #:lower16:.LC7
 13785 0454 002040E3 		movt	r2, #:upper16:.LC7
 13786 0458 271501E3 		movw	r1, #5415
 13787 045c 000000E3 		movw	r0, #:lower16:.LC8
 13788 0460 000040E3 		movt	r0, #:upper16:.LC8
 13789 0464 FEFFFFEB 		bl	RME_Log
 13790              	.L881:
 13791              		.loc 1 5415 9
 13792 0468 FEFFFFEA 		b	.L881
 13793              	.L879:
5416:../../Source/Kernel/rme_kernel.c ****                    RME_HYP_SIZE)==0);
5417:../../Source/Kernel/rme_kernel.c ****     }
5418:../../Source/Kernel/rme_kernel.c ****     
5419:../../Source/Kernel/rme_kernel.c ****     return 0;
 13794              		.loc 1 5419 12 is_stmt 1
 13795 046c 0030A0E3 		mov	r3, #0
 13796              	.L855:
5420:../../Source/Kernel/rme_kernel.c **** }
 13797              		.loc 1 5420 1
 13798 0470 0300A0E1 		mov	r0, r3
 13799 0474 04D04BE2 		sub	sp, fp, #4
 13800              		.cfi_def_cfa 13, 8
 13801              		@ sp needed
 13802 0478 0088BDE8 		pop	{fp, pc}
 13803              		.cfi_endproc
 13804              	.LFE57:
 13806              		.section	.text._RME_Thd_Sched_Bind,"ax",%progbits
 13807              		.align	2
 13808              		.syntax unified
 13809              		.arm
 13811              	_RME_Thd_Sched_Bind:
 13812              	.LFB58:
5421:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Del *************************************************/
5422:../../Source/Kernel/rme_kernel.c **** 
5423:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Bind ***********************************************
5424:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's priority level, and its scheduler thread. When
5425:../../Source/Kernel/rme_kernel.c ****               there are any state changes on this thread, a notification will
5426:../../Source/Kernel/rme_kernel.c ****               be sent to its scheduler thread. If the state of the thread
5427:../../Source/Kernel/rme_kernel.c ****               changes for multiple times, then only the most recent state will
5428:../../Source/Kernel/rme_kernel.c ****               be reflected in the scheduler's receive queue.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 339


5429:../../Source/Kernel/rme_kernel.c ****               The scheduler and the threads that it schedule must be on the
5430:../../Source/Kernel/rme_kernel.c ****               same core. When a thread wants to go from one core to another,
5431:../../Source/Kernel/rme_kernel.c ****               it must be freed from that core first. 
5432:../../Source/Kernel/rme_kernel.c ****               This must be called on the same core with the Cap_Thd_Sched, and
5433:../../Source/Kernel/rme_kernel.c ****               the Cap_Thd itself must be free.
5434:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5435:../../Source/Kernel/rme_kernel.c ****               priority.
5436:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5437:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5438:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5439:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Sched - The scheduler thread.
5440:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
5441:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The signal endpoint for scheduler
5442:../../Source/Kernel/rme_kernel.c ****                                   notifications. This signal endpoint will be
5443:../../Source/Kernel/rme_kernel.c ****                                   sent to whenever this thread has a fault, or
5444:../../Source/Kernel/rme_kernel.c ****                                   timeouts. This is purely optional; if it is
5445:../../Source/Kernel/rme_kernel.c ****                                   not needed, pass in RME_CID_NULL.
5446:../../Source/Kernel/rme_kernel.c ****               rme_tid_t TID - The thread ID. This is user-supplied, and the
5447:../../Source/Kernel/rme_kernel.c ****                               kernel will not check whether there are two
5448:../../Source/Kernel/rme_kernel.c ****                               threads that have the same TID.
5449:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level, higher is more critical.
5450:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Haddr - The kernel-accessible virtual memory address
5451:../../Source/Kernel/rme_kernel.c ****                                 for this thread's register sets, only used by
5452:../../Source/Kernel/rme_kernel.c ****                                 hypervisor-managed threads. For other threads,
5453:../../Source/Kernel/rme_kernel.c ****                                 please pass in NULL instead.
5454:../../Source/Kernel/rme_kernel.c **** Output      : None.
5455:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5456:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5457:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Bind(struct RME_Cap_Cpt* Cpt,
5458:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd,
5459:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd_Sched,
5460:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Sig,
5461:../../Source/Kernel/rme_kernel.c ****                                      rme_tid_t TID,
5462:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio,
5463:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Haddr)
5464:../../Source/Kernel/rme_kernel.c **** {
 13813              		.loc 1 5464 1
 13814              		.cfi_startproc
 13815              		@ args = 12, pretend = 0, frame = 56
 13816              		@ frame_needed = 1, uses_anonymous_args = 0
 13817 0000 00482DE9 		push	{fp, lr}
 13818              		.cfi_def_cfa_offset 8
 13819              		.cfi_offset 11, -8
 13820              		.cfi_offset 14, -4
 13821 0004 04B08DE2 		add	fp, sp, #4
 13822              		.cfi_def_cfa 11, 4
 13823 0008 38D04DE2 		sub	sp, sp, #56
 13824 000c 30000BE5 		str	r0, [fp, #-48]
 13825 0010 34100BE5 		str	r1, [fp, #-52]
 13826 0014 38200BE5 		str	r2, [fp, #-56]
 13827 0018 3C300BE5 		str	r3, [fp, #-60]
5465:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5466:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Sched;
5467:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
5468:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5469:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
5470:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_Old;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 340


5471:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_New;
5472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5473:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Hyp_Attr;
5474:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
5475:../../Source/Kernel/rme_kernel.c **** 
5476:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5477:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 13828              		.loc 1 5477 5
 13829 001c 34301BE5 		ldr	r3, [fp, #-52]
 13830 0020 803003E2 		and	r3, r3, #128
 13831 0024 000053E3 		cmp	r3, #0
 13832 0028 1C00001A 		bne	.L883
 13833              		.loc 1 5477 5 is_stmt 0 discriminator 1
 13834 002c 30301BE5 		ldr	r3, [fp, #-48]
 13835 0030 142093E5 		ldr	r2, [r3, #20]
 13836 0034 34301BE5 		ldr	r3, [fp, #-52]
 13837 0038 030052E1 		cmp	r2, r3
 13838 003c 0100008A 		bhi	.L884
 13839              		.loc 1 5477 5 discriminator 3
 13840 0040 0230E0E3 		mvn	r3, #2
 13841              		.loc 1 5477 5
 13842 0044 D60100EA 		b	.L885
 13843              	.L884:
 13844              		.loc 1 5477 5 discriminator 4
 13845 0048 34301BE5 		ldr	r3, [fp, #-52]
 13846 004c 8322A0E1 		lsl	r2, r3, #5
 13847 0050 30301BE5 		ldr	r3, [fp, #-48]
 13848 0054 0C3093E5 		ldr	r3, [r3, #12]
 13849 0058 033082E0 		add	r3, r2, r3
 13850 005c 08300BE5 		str	r3, [fp, #-8]
 13851 0060 08301BE5 		ldr	r3, [fp, #-8]
 13852 0064 0300A0E1 		mov	r0, r3
 13853 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13854 006c 14000BE5 		str	r0, [fp, #-20]
 13855              		.loc 1 5477 5 discriminator 1
 13856 0070 14301BE5 		ldr	r3, [fp, #-20]
 13857 0074 FF3803E2 		and	r3, r3, #16711680
 13858 0078 020853E3 		cmp	r3, #131072
 13859 007c 0100001A 		bne	.L886
 13860              		.loc 1 5477 5 discriminator 5
 13861 0080 0830E0E3 		mvn	r3, #8
 13862              		.loc 1 5477 5
 13863 0084 C60100EA 		b	.L885
 13864              	.L886:
 13865              		.loc 1 5477 5 discriminator 6
 13866 0088 14301BE5 		ldr	r3, [fp, #-20]
 13867 008c 233CA0E1 		lsr	r3, r3, #24
 13868 0090 060053E3 		cmp	r3, #6
 13869 0094 3F00000A 		beq	.L887
 13870              		.loc 1 5477 5 discriminator 7
 13871 0098 0130E0E3 		mvn	r3, #1
 13872              		.loc 1 5477 5
 13873 009c C00100EA 		b	.L885
 13874              	.L883:
 13875              		.loc 1 5477 5 discriminator 2
 13876 00a0 34301BE5 		ldr	r3, [fp, #-52]
 13877 00a4 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 341


 13878 00a8 30301BE5 		ldr	r3, [fp, #-48]
 13879 00ac 143093E5 		ldr	r3, [r3, #20]
 13880 00b0 030052E1 		cmp	r2, r3
 13881 00b4 0100003A 		bcc	.L888
 13882              		.loc 1 5477 5 discriminator 8
 13883 00b8 0230E0E3 		mvn	r3, #2
 13884              		.loc 1 5477 5
 13885 00bc B80100EA 		b	.L885
 13886              	.L888:
 13887              		.loc 1 5477 5 discriminator 9
 13888 00c0 34301BE5 		ldr	r3, [fp, #-52]
 13889 00c4 2334A0E1 		lsr	r3, r3, #8
 13890 00c8 8322A0E1 		lsl	r2, r3, #5
 13891 00cc 30301BE5 		ldr	r3, [fp, #-48]
 13892 00d0 0C3093E5 		ldr	r3, [r3, #12]
 13893 00d4 033082E0 		add	r3, r2, r3
 13894 00d8 08300BE5 		str	r3, [fp, #-8]
 13895 00dc 08301BE5 		ldr	r3, [fp, #-8]
 13896 00e0 0300A0E1 		mov	r0, r3
 13897 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13898 00e8 14000BE5 		str	r0, [fp, #-20]
 13899              		.loc 1 5477 5 discriminator 1
 13900 00ec 14301BE5 		ldr	r3, [fp, #-20]
 13901 00f0 FF3803E2 		and	r3, r3, #16711680
 13902 00f4 020853E3 		cmp	r3, #131072
 13903 00f8 0100001A 		bne	.L889
 13904              		.loc 1 5477 5 discriminator 10
 13905 00fc 0830E0E3 		mvn	r3, #8
 13906              		.loc 1 5477 5
 13907 0100 A70100EA 		b	.L885
 13908              	.L889:
 13909              		.loc 1 5477 5 discriminator 11
 13910 0104 14301BE5 		ldr	r3, [fp, #-20]
 13911 0108 233CA0E1 		lsr	r3, r3, #24
 13912 010c 030053E3 		cmp	r3, #3
 13913 0110 0100000A 		beq	.L890
 13914              		.loc 1 5477 5 discriminator 12
 13915 0114 0130E0E3 		mvn	r3, #1
 13916              		.loc 1 5477 5
 13917 0118 A10100EA 		b	.L885
 13918              	.L890:
 13919              		.loc 1 5477 5 discriminator 13
 13920 011c 34301BE5 		ldr	r3, [fp, #-52]
 13921 0120 7F2003E2 		and	r2, r3, #127
 13922 0124 08301BE5 		ldr	r3, [fp, #-8]
 13923 0128 143093E5 		ldr	r3, [r3, #20]
 13924 012c 030052E1 		cmp	r2, r3
 13925 0130 0100003A 		bcc	.L891
 13926              		.loc 1 5477 5 discriminator 14
 13927 0134 0230E0E3 		mvn	r3, #2
 13928              		.loc 1 5477 5
 13929 0138 990100EA 		b	.L885
 13930              	.L891:
 13931              		.loc 1 5477 5 discriminator 15
 13932 013c 34301BE5 		ldr	r3, [fp, #-52]
 13933 0140 7F3003E2 		and	r3, r3, #127
 13934 0144 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 342


 13935 0148 08301BE5 		ldr	r3, [fp, #-8]
 13936 014c 0C3093E5 		ldr	r3, [r3, #12]
 13937 0150 033082E0 		add	r3, r2, r3
 13938 0154 08300BE5 		str	r3, [fp, #-8]
 13939 0158 08301BE5 		ldr	r3, [fp, #-8]
 13940 015c 0300A0E1 		mov	r0, r3
 13941 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13942 0164 14000BE5 		str	r0, [fp, #-20]
 13943              		.loc 1 5477 5 discriminator 1
 13944 0168 14301BE5 		ldr	r3, [fp, #-20]
 13945 016c FF3803E2 		and	r3, r3, #16711680
 13946 0170 020853E3 		cmp	r3, #131072
 13947 0174 0100001A 		bne	.L892
 13948              		.loc 1 5477 5 discriminator 16
 13949 0178 0830E0E3 		mvn	r3, #8
 13950              		.loc 1 5477 5
 13951 017c 880100EA 		b	.L885
 13952              	.L892:
 13953              		.loc 1 5477 5 discriminator 17
 13954 0180 14301BE5 		ldr	r3, [fp, #-20]
 13955 0184 233CA0E1 		lsr	r3, r3, #24
 13956 0188 060053E3 		cmp	r3, #6
 13957 018c 0100000A 		beq	.L887
 13958              		.loc 1 5477 5 discriminator 18
 13959 0190 0130E0E3 		mvn	r3, #1
 13960              		.loc 1 5477 5
 13961 0194 820100EA 		b	.L885
 13962              	.L887:
5478:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5479:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Sched,RME_CAP_TYPE_THD,
 13963              		.loc 1 5479 5 is_stmt 1
 13964 0198 38301BE5 		ldr	r3, [fp, #-56]
 13965 019c 803003E2 		and	r3, r3, #128
 13966 01a0 000053E3 		cmp	r3, #0
 13967 01a4 1C00001A 		bne	.L893
 13968              		.loc 1 5479 5 is_stmt 0 discriminator 1
 13969 01a8 30301BE5 		ldr	r3, [fp, #-48]
 13970 01ac 142093E5 		ldr	r2, [r3, #20]
 13971 01b0 38301BE5 		ldr	r3, [fp, #-56]
 13972 01b4 030052E1 		cmp	r2, r3
 13973 01b8 0100008A 		bhi	.L894
 13974              		.loc 1 5479 5 discriminator 3
 13975 01bc 0230E0E3 		mvn	r3, #2
 13976              		.loc 1 5479 5
 13977 01c0 770100EA 		b	.L885
 13978              	.L894:
 13979              		.loc 1 5479 5 discriminator 4
 13980 01c4 38301BE5 		ldr	r3, [fp, #-56]
 13981 01c8 8322A0E1 		lsl	r2, r3, #5
 13982 01cc 30301BE5 		ldr	r3, [fp, #-48]
 13983 01d0 0C3093E5 		ldr	r3, [r3, #12]
 13984 01d4 033082E0 		add	r3, r2, r3
 13985 01d8 0C300BE5 		str	r3, [fp, #-12]
 13986 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 13987 01e0 0300A0E1 		mov	r0, r3
 13988 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13989 01e8 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 343


 13990              		.loc 1 5479 5 discriminator 1
 13991 01ec 14301BE5 		ldr	r3, [fp, #-20]
 13992 01f0 FF3803E2 		and	r3, r3, #16711680
 13993 01f4 020853E3 		cmp	r3, #131072
 13994 01f8 0100001A 		bne	.L895
 13995              		.loc 1 5479 5 discriminator 5
 13996 01fc 0830E0E3 		mvn	r3, #8
 13997              		.loc 1 5479 5
 13998 0200 670100EA 		b	.L885
 13999              	.L895:
 14000              		.loc 1 5479 5 discriminator 6
 14001 0204 14301BE5 		ldr	r3, [fp, #-20]
 14002 0208 233CA0E1 		lsr	r3, r3, #24
 14003 020c 060053E3 		cmp	r3, #6
 14004 0210 3F00000A 		beq	.L896
 14005              		.loc 1 5479 5 discriminator 7
 14006 0214 0130E0E3 		mvn	r3, #1
 14007              		.loc 1 5479 5
 14008 0218 610100EA 		b	.L885
 14009              	.L893:
 14010              		.loc 1 5479 5 discriminator 2
 14011 021c 38301BE5 		ldr	r3, [fp, #-56]
 14012 0220 2324A0E1 		lsr	r2, r3, #8
 14013 0224 30301BE5 		ldr	r3, [fp, #-48]
 14014 0228 143093E5 		ldr	r3, [r3, #20]
 14015 022c 030052E1 		cmp	r2, r3
 14016 0230 0100003A 		bcc	.L897
 14017              		.loc 1 5479 5 discriminator 8
 14018 0234 0230E0E3 		mvn	r3, #2
 14019              		.loc 1 5479 5
 14020 0238 590100EA 		b	.L885
 14021              	.L897:
 14022              		.loc 1 5479 5 discriminator 9
 14023 023c 38301BE5 		ldr	r3, [fp, #-56]
 14024 0240 2334A0E1 		lsr	r3, r3, #8
 14025 0244 8322A0E1 		lsl	r2, r3, #5
 14026 0248 30301BE5 		ldr	r3, [fp, #-48]
 14027 024c 0C3093E5 		ldr	r3, [r3, #12]
 14028 0250 033082E0 		add	r3, r2, r3
 14029 0254 0C300BE5 		str	r3, [fp, #-12]
 14030 0258 0C301BE5 		ldr	r3, [fp, #-12]
 14031 025c 0300A0E1 		mov	r0, r3
 14032 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14033 0264 14000BE5 		str	r0, [fp, #-20]
 14034              		.loc 1 5479 5 discriminator 1
 14035 0268 14301BE5 		ldr	r3, [fp, #-20]
 14036 026c FF3803E2 		and	r3, r3, #16711680
 14037 0270 020853E3 		cmp	r3, #131072
 14038 0274 0100001A 		bne	.L898
 14039              		.loc 1 5479 5 discriminator 10
 14040 0278 0830E0E3 		mvn	r3, #8
 14041              		.loc 1 5479 5
 14042 027c 480100EA 		b	.L885
 14043              	.L898:
 14044              		.loc 1 5479 5 discriminator 11
 14045 0280 14301BE5 		ldr	r3, [fp, #-20]
 14046 0284 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 344


 14047 0288 030053E3 		cmp	r3, #3
 14048 028c 0100000A 		beq	.L899
 14049              		.loc 1 5479 5 discriminator 12
 14050 0290 0130E0E3 		mvn	r3, #1
 14051              		.loc 1 5479 5
 14052 0294 420100EA 		b	.L885
 14053              	.L899:
 14054              		.loc 1 5479 5 discriminator 13
 14055 0298 38301BE5 		ldr	r3, [fp, #-56]
 14056 029c 7F2003E2 		and	r2, r3, #127
 14057 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 14058 02a4 143093E5 		ldr	r3, [r3, #20]
 14059 02a8 030052E1 		cmp	r2, r3
 14060 02ac 0100003A 		bcc	.L900
 14061              		.loc 1 5479 5 discriminator 14
 14062 02b0 0230E0E3 		mvn	r3, #2
 14063              		.loc 1 5479 5
 14064 02b4 3A0100EA 		b	.L885
 14065              	.L900:
 14066              		.loc 1 5479 5 discriminator 15
 14067 02b8 38301BE5 		ldr	r3, [fp, #-56]
 14068 02bc 7F3003E2 		and	r3, r3, #127
 14069 02c0 8322A0E1 		lsl	r2, r3, #5
 14070 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 14071 02c8 0C3093E5 		ldr	r3, [r3, #12]
 14072 02cc 033082E0 		add	r3, r2, r3
 14073 02d0 0C300BE5 		str	r3, [fp, #-12]
 14074 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 14075 02d8 0300A0E1 		mov	r0, r3
 14076 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14077 02e0 14000BE5 		str	r0, [fp, #-20]
 14078              		.loc 1 5479 5 discriminator 1
 14079 02e4 14301BE5 		ldr	r3, [fp, #-20]
 14080 02e8 FF3803E2 		and	r3, r3, #16711680
 14081 02ec 020853E3 		cmp	r3, #131072
 14082 02f0 0100001A 		bne	.L901
 14083              		.loc 1 5479 5 discriminator 16
 14084 02f4 0830E0E3 		mvn	r3, #8
 14085              		.loc 1 5479 5
 14086 02f8 290100EA 		b	.L885
 14087              	.L901:
 14088              		.loc 1 5479 5 discriminator 17
 14089 02fc 14301BE5 		ldr	r3, [fp, #-20]
 14090 0300 233CA0E1 		lsr	r3, r3, #24
 14091 0304 060053E3 		cmp	r3, #6
 14092 0308 0100000A 		beq	.L896
 14093              		.loc 1 5479 5 discriminator 18
 14094 030c 0130E0E3 		mvn	r3, #1
 14095              		.loc 1 5479 5
 14096 0310 230100EA 		b	.L885
 14097              	.L896:
5480:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Sched,Type_Stat);
5481:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5482:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_CHILD);
 14098              		.loc 1 5482 5 is_stmt 1
 14099 0314 08301BE5 		ldr	r3, [fp, #-8]
 14100 0318 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 345


 14101 031c 023003E2 		and	r3, r3, #2
 14102 0320 000053E3 		cmp	r3, #0
 14103 0324 0100001A 		bne	.L902
 14104              		.loc 1 5482 5 is_stmt 0 discriminator 1
 14105 0328 0630E0E3 		mvn	r3, #6
 14106              		.loc 1 5482 5
 14107 032c 1C0100EA 		b	.L885
 14108              	.L902:
5483:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Sched,RME_THD_FLAG_SCHED_PARENT);
 14109              		.loc 1 5483 5 is_stmt 1
 14110 0330 0C301BE5 		ldr	r3, [fp, #-12]
 14111 0334 083093E5 		ldr	r3, [r3, #8]
 14112 0338 043003E2 		and	r3, r3, #4
 14113 033c 000053E3 		cmp	r3, #0
 14114 0340 0100001A 		bne	.L903
 14115              		.loc 1 5483 5 is_stmt 0 discriminator 1
 14116 0344 0630E0E3 		mvn	r3, #6
 14117              		.loc 1 5483 5
 14118 0348 150100EA 		b	.L885
 14119              	.L903:
5484:../../Source/Kernel/rme_kernel.c ****     
5485:../../Source/Kernel/rme_kernel.c ****     /* Check if we need the signal endpoint for this operation */
5486:../../Source/Kernel/rme_kernel.c ****     if(Cap_Sig!=RME_CID_NULL)
 14120              		.loc 1 5486 7 is_stmt 1
 14121 034c 3C301BE5 		ldr	r3, [fp, #-60]
 14122 0350 020953E3 		cmp	r3, #32768
 14123 0354 6500000A 		beq	.L904
5487:../../Source/Kernel/rme_kernel.c ****     {
5488:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5489:../../Source/Kernel/rme_kernel.c **** 
5490:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 14124              		.loc 1 5490 9
 14125 0358 3C301BE5 		ldr	r3, [fp, #-60]
 14126 035c 803003E2 		and	r3, r3, #128
 14127 0360 000053E3 		cmp	r3, #0
 14128 0364 1C00001A 		bne	.L905
 14129              		.loc 1 5490 9 is_stmt 0 discriminator 1
 14130 0368 30301BE5 		ldr	r3, [fp, #-48]
 14131 036c 142093E5 		ldr	r2, [r3, #20]
 14132 0370 3C301BE5 		ldr	r3, [fp, #-60]
 14133 0374 030052E1 		cmp	r2, r3
 14134 0378 0100008A 		bhi	.L906
 14135              		.loc 1 5490 9 discriminator 3
 14136 037c 0230E0E3 		mvn	r3, #2
 14137              		.loc 1 5490 9
 14138 0380 070100EA 		b	.L885
 14139              	.L906:
 14140              		.loc 1 5490 9 discriminator 4
 14141 0384 3C301BE5 		ldr	r3, [fp, #-60]
 14142 0388 8322A0E1 		lsl	r2, r3, #5
 14143 038c 30301BE5 		ldr	r3, [fp, #-48]
 14144 0390 0C3093E5 		ldr	r3, [r3, #12]
 14145 0394 033082E0 		add	r3, r2, r3
 14146 0398 10300BE5 		str	r3, [fp, #-16]
 14147 039c 10301BE5 		ldr	r3, [fp, #-16]
 14148 03a0 0300A0E1 		mov	r0, r3
 14149 03a4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 346


 14150 03a8 14000BE5 		str	r0, [fp, #-20]
 14151              		.loc 1 5490 9 discriminator 1
 14152 03ac 14301BE5 		ldr	r3, [fp, #-20]
 14153 03b0 FF3803E2 		and	r3, r3, #16711680
 14154 03b4 020853E3 		cmp	r3, #131072
 14155 03b8 0100001A 		bne	.L907
 14156              		.loc 1 5490 9 discriminator 5
 14157 03bc 0830E0E3 		mvn	r3, #8
 14158              		.loc 1 5490 9
 14159 03c0 F70000EA 		b	.L885
 14160              	.L907:
 14161              		.loc 1 5490 9 discriminator 6
 14162 03c4 14301BE5 		ldr	r3, [fp, #-20]
 14163 03c8 233CA0E1 		lsr	r3, r3, #24
 14164 03cc 080053E3 		cmp	r3, #8
 14165 03d0 3F00000A 		beq	.L908
 14166              		.loc 1 5490 9 discriminator 7
 14167 03d4 0130E0E3 		mvn	r3, #1
 14168              		.loc 1 5490 9
 14169 03d8 F10000EA 		b	.L885
 14170              	.L905:
 14171              		.loc 1 5490 9 discriminator 2
 14172 03dc 3C301BE5 		ldr	r3, [fp, #-60]
 14173 03e0 2324A0E1 		lsr	r2, r3, #8
 14174 03e4 30301BE5 		ldr	r3, [fp, #-48]
 14175 03e8 143093E5 		ldr	r3, [r3, #20]
 14176 03ec 030052E1 		cmp	r2, r3
 14177 03f0 0100003A 		bcc	.L909
 14178              		.loc 1 5490 9 discriminator 8
 14179 03f4 0230E0E3 		mvn	r3, #2
 14180              		.loc 1 5490 9
 14181 03f8 E90000EA 		b	.L885
 14182              	.L909:
 14183              		.loc 1 5490 9 discriminator 9
 14184 03fc 3C301BE5 		ldr	r3, [fp, #-60]
 14185 0400 2334A0E1 		lsr	r3, r3, #8
 14186 0404 8322A0E1 		lsl	r2, r3, #5
 14187 0408 30301BE5 		ldr	r3, [fp, #-48]
 14188 040c 0C3093E5 		ldr	r3, [r3, #12]
 14189 0410 033082E0 		add	r3, r2, r3
 14190 0414 10300BE5 		str	r3, [fp, #-16]
 14191 0418 10301BE5 		ldr	r3, [fp, #-16]
 14192 041c 0300A0E1 		mov	r0, r3
 14193 0420 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14194 0424 14000BE5 		str	r0, [fp, #-20]
 14195              		.loc 1 5490 9 discriminator 1
 14196 0428 14301BE5 		ldr	r3, [fp, #-20]
 14197 042c FF3803E2 		and	r3, r3, #16711680
 14198 0430 020853E3 		cmp	r3, #131072
 14199 0434 0100001A 		bne	.L910
 14200              		.loc 1 5490 9 discriminator 10
 14201 0438 0830E0E3 		mvn	r3, #8
 14202              		.loc 1 5490 9
 14203 043c D80000EA 		b	.L885
 14204              	.L910:
 14205              		.loc 1 5490 9 discriminator 11
 14206 0440 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 347


 14207 0444 233CA0E1 		lsr	r3, r3, #24
 14208 0448 030053E3 		cmp	r3, #3
 14209 044c 0100000A 		beq	.L911
 14210              		.loc 1 5490 9 discriminator 12
 14211 0450 0130E0E3 		mvn	r3, #1
 14212              		.loc 1 5490 9
 14213 0454 D20000EA 		b	.L885
 14214              	.L911:
 14215              		.loc 1 5490 9 discriminator 13
 14216 0458 3C301BE5 		ldr	r3, [fp, #-60]
 14217 045c 7F2003E2 		and	r2, r3, #127
 14218 0460 10301BE5 		ldr	r3, [fp, #-16]
 14219 0464 143093E5 		ldr	r3, [r3, #20]
 14220 0468 030052E1 		cmp	r2, r3
 14221 046c 0100003A 		bcc	.L912
 14222              		.loc 1 5490 9 discriminator 14
 14223 0470 0230E0E3 		mvn	r3, #2
 14224              		.loc 1 5490 9
 14225 0474 CA0000EA 		b	.L885
 14226              	.L912:
 14227              		.loc 1 5490 9 discriminator 15
 14228 0478 3C301BE5 		ldr	r3, [fp, #-60]
 14229 047c 7F3003E2 		and	r3, r3, #127
 14230 0480 8322A0E1 		lsl	r2, r3, #5
 14231 0484 10301BE5 		ldr	r3, [fp, #-16]
 14232 0488 0C3093E5 		ldr	r3, [r3, #12]
 14233 048c 033082E0 		add	r3, r2, r3
 14234 0490 10300BE5 		str	r3, [fp, #-16]
 14235 0494 10301BE5 		ldr	r3, [fp, #-16]
 14236 0498 0300A0E1 		mov	r0, r3
 14237 049c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14238 04a0 14000BE5 		str	r0, [fp, #-20]
 14239              		.loc 1 5490 9 discriminator 1
 14240 04a4 14301BE5 		ldr	r3, [fp, #-20]
 14241 04a8 FF3803E2 		and	r3, r3, #16711680
 14242 04ac 020853E3 		cmp	r3, #131072
 14243 04b0 0100001A 		bne	.L913
 14244              		.loc 1 5490 9 discriminator 16
 14245 04b4 0830E0E3 		mvn	r3, #8
 14246              		.loc 1 5490 9
 14247 04b8 B90000EA 		b	.L885
 14248              	.L913:
 14249              		.loc 1 5490 9 discriminator 17
 14250 04bc 14301BE5 		ldr	r3, [fp, #-20]
 14251 04c0 233CA0E1 		lsr	r3, r3, #24
 14252 04c4 080053E3 		cmp	r3, #8
 14253 04c8 0100000A 		beq	.L908
 14254              		.loc 1 5490 9 discriminator 18
 14255 04cc 0130E0E3 		mvn	r3, #1
 14256              		.loc 1 5490 9
 14257 04d0 B30000EA 		b	.L885
 14258              	.L908:
5491:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Sig*,Sig_Op,Type_Stat);
5492:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SCHED);
 14259              		.loc 1 5492 9 is_stmt 1
 14260 04d4 10301BE5 		ldr	r3, [fp, #-16]
 14261 04d8 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 348


 14262 04dc 203003E2 		and	r3, r3, #32
 14263 04e0 000053E3 		cmp	r3, #0
 14264 04e4 0300001A 		bne	.L914
 14265              		.loc 1 5492 9 is_stmt 0 discriminator 1
 14266 04e8 0630E0E3 		mvn	r3, #6
 14267              		.loc 1 5492 9
 14268 04ec AC0000EA 		b	.L885
 14269              	.L904:
5493:../../Source/Kernel/rme_kernel.c ****     }
5494:../../Source/Kernel/rme_kernel.c ****     else
5495:../../Source/Kernel/rme_kernel.c ****     {
5496:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5497:../../Source/Kernel/rme_kernel.c **** 
5498:../../Source/Kernel/rme_kernel.c ****         Sig_Op=RME_NULL;
 14270              		.loc 1 5498 15 is_stmt 1
 14271 04f0 0030A0E3 		mov	r3, #0
 14272 04f4 10300BE5 		str	r3, [fp, #-16]
 14273              	.L914:
5499:../../Source/Kernel/rme_kernel.c ****     }
5500:../../Source/Kernel/rme_kernel.c **** 
5501:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound. If yes, we just quit */
5502:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 14274              		.loc 1 5502 12
 14275 04f8 08301BE5 		ldr	r3, [fp, #-8]
 14276 04fc 0C3093E5 		ldr	r3, [r3, #12]
 14277              		.loc 1 5502 11
 14278 0500 18300BE5 		str	r3, [fp, #-24]
5503:../../Source/Kernel/rme_kernel.c ****     Local_Old=Thread->Sched.Local;
 14279              		.loc 1 5503 14
 14280 0504 18301BE5 		ldr	r3, [fp, #-24]
 14281 0508 143093E5 		ldr	r3, [r3, #20]
 14282 050c 1C300BE5 		str	r3, [fp, #-28]
5504:../../Source/Kernel/rme_kernel.c ****     if(Local_Old!=RME_THD_FREE)
 14283              		.loc 1 5504 7
 14284 0510 1C301BE5 		ldr	r3, [fp, #-28]
 14285 0514 010073E3 		cmn	r3, #1
 14286 0518 0100000A 		beq	.L915
5505:../../Source/Kernel/rme_kernel.c ****     {
5506:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5507:../../Source/Kernel/rme_kernel.c **** 
5508:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14287              		.loc 1 5508 16
 14288 051c CB30E0E3 		mvn	r3, #203
 14289 0520 9F0000EA 		b	.L885
 14290              	.L915:
5509:../../Source/Kernel/rme_kernel.c ****     }
5510:../../Source/Kernel/rme_kernel.c ****     else
5511:../../Source/Kernel/rme_kernel.c ****     {
5512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5513:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5514:../../Source/Kernel/rme_kernel.c ****     }
5515:../../Source/Kernel/rme_kernel.c ****     
5516:../../Source/Kernel/rme_kernel.c ****     /* See if the parent thread is on the same core with the current processor */
5517:../../Source/Kernel/rme_kernel.c ****     Local_New=RME_CPU_LOCAL();
 14291              		.loc 1 5517 14
 14292 0524 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14293 0528 003040E3 		movt	r3, #:upper16:RME_A7A_Local
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 349


 14294 052c 20300BE5 		str	r3, [fp, #-32]
5518:../../Source/Kernel/rme_kernel.c ****     Scheduler=RME_CAP_GETOBJ(Thd_Sched,struct RME_Thd_Struct*);
 14295              		.loc 1 5518 15
 14296 0530 0C301BE5 		ldr	r3, [fp, #-12]
 14297 0534 0C3093E5 		ldr	r3, [r3, #12]
 14298              		.loc 1 5518 14
 14299 0538 24300BE5 		str	r3, [fp, #-36]
5519:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=Local_New)
 14300              		.loc 1 5519 24
 14301 053c 24301BE5 		ldr	r3, [fp, #-36]
 14302 0540 143093E5 		ldr	r3, [r3, #20]
 14303              		.loc 1 5519 7
 14304 0544 20201BE5 		ldr	r2, [fp, #-32]
 14305 0548 030052E1 		cmp	r2, r3
 14306 054c 0100000A 		beq	.L916
5520:../../Source/Kernel/rme_kernel.c ****     {
5521:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5522:../../Source/Kernel/rme_kernel.c **** 
5523:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14307              		.loc 1 5523 16
 14308 0550 CB30E0E3 		mvn	r3, #203
 14309 0554 920000EA 		b	.L885
 14310              	.L916:
5524:../../Source/Kernel/rme_kernel.c ****     }
5525:../../Source/Kernel/rme_kernel.c ****     else
5526:../../Source/Kernel/rme_kernel.c ****     {
5527:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5528:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5529:../../Source/Kernel/rme_kernel.c ****     }
5530:../../Source/Kernel/rme_kernel.c **** 
5531:../../Source/Kernel/rme_kernel.c ****     /* See if we are trying to bind to ourself - prohibited */
5532:../../Source/Kernel/rme_kernel.c ****     if(Thread==Scheduler)
 14311              		.loc 1 5532 7
 14312 0558 18201BE5 		ldr	r2, [fp, #-24]
 14313 055c 24301BE5 		ldr	r3, [fp, #-36]
 14314 0560 030052E1 		cmp	r2, r3
 14315 0564 0100001A 		bne	.L917
5533:../../Source/Kernel/rme_kernel.c ****     {
5534:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5535:../../Source/Kernel/rme_kernel.c **** 
5536:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 14316              		.loc 1 5536 16
 14317 0568 CE30E0E3 		mvn	r3, #206
 14318 056c 8C0000EA 		b	.L885
 14319              	.L917:
5537:../../Source/Kernel/rme_kernel.c ****     }
5538:../../Source/Kernel/rme_kernel.c ****     else
5539:../../Source/Kernel/rme_kernel.c ****     {
5540:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5541:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5542:../../Source/Kernel/rme_kernel.c ****     }
5543:../../Source/Kernel/rme_kernel.c ****     
5544:../../Source/Kernel/rme_kernel.c ****     /* See if the priority relationship is correct */
5545:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Prio_Max<Prio)
 14320              		.loc 1 5545 24
 14321 0570 24301BE5 		ldr	r3, [fp, #-36]
 14322 0574 243093E5 		ldr	r3, [r3, #36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 350


 14323              		.loc 1 5545 7
 14324 0578 08209BE5 		ldr	r2, [fp, #8]
 14325 057c 030052E1 		cmp	r2, r3
 14326 0580 0100009A 		bls	.L918
5546:../../Source/Kernel/rme_kernel.c ****     {
5547:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5548:../../Source/Kernel/rme_kernel.c **** 
5549:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 14327              		.loc 1 5549 16
 14328 0584 CC30E0E3 		mvn	r3, #204
 14329 0588 850000EA 		b	.L885
 14330              	.L918:
5550:../../Source/Kernel/rme_kernel.c ****     }
5551:../../Source/Kernel/rme_kernel.c ****     else
5552:../../Source/Kernel/rme_kernel.c ****     {
5553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5554:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5555:../../Source/Kernel/rme_kernel.c ****     }
5556:../../Source/Kernel/rme_kernel.c ****     
5557:../../Source/Kernel/rme_kernel.c ****     /* Check whether the coprocessor context attribute is compatible with this core */
5558:../../Source/Kernel/rme_kernel.c ****     Hyp_Attr=Thread->Ctx.Hyp_Attr;
 14331              		.loc 1 5558 13
 14332 058c 18301BE5 		ldr	r3, [fp, #-24]
 14333 0590 443093E5 		ldr	r3, [r3, #68]
 14334 0594 28300BE5 		str	r3, [fp, #-40]
5559:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5560:../../Source/Kernel/rme_kernel.c ****     if(__RME_Thd_Cop_Check(RME_THD_ATTR(Hyp_Attr))<0)
5561:../../Source/Kernel/rme_kernel.c ****     {
5562:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5563:../../Source/Kernel/rme_kernel.c **** 
5564:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
5565:../../Source/Kernel/rme_kernel.c ****     }
5566:../../Source/Kernel/rme_kernel.c **** #else
5567:../../Source/Kernel/rme_kernel.c ****     if(RME_THD_ATTR(Hyp_Attr)!=0U)
 14335              		.loc 1 5567 8
 14336 0598 28301BE5 		ldr	r3, [fp, #-40]
 14337 059c 0231C3E3 		bic	r3, r3, #-2147483648
 14338              		.loc 1 5567 7
 14339 05a0 000053E3 		cmp	r3, #0
 14340 05a4 0100000A 		beq	.L919
5568:../../Source/Kernel/rme_kernel.c ****     {
5569:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5570:../../Source/Kernel/rme_kernel.c **** 
5571:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 14341              		.loc 1 5571 16
 14342 05a8 0630E0E3 		mvn	r3, #6
 14343 05ac 7C0000EA 		b	.L885
 14344              	.L919:
5572:../../Source/Kernel/rme_kernel.c ****     }
5573:../../Source/Kernel/rme_kernel.c **** #endif
5574:../../Source/Kernel/rme_kernel.c ****     else
5575:../../Source/Kernel/rme_kernel.c ****     {
5576:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5577:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5578:../../Source/Kernel/rme_kernel.c ****     }
5579:../../Source/Kernel/rme_kernel.c **** 
5580:../../Source/Kernel/rme_kernel.c ****     /* Check the hypervisor context buffer passed in to see whether it is good */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 351


5581:../../Source/Kernel/rme_kernel.c ****     if((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U))
 14345              		.loc 1 5581 7
 14346 05b0 0C309BE5 		ldr	r3, [fp, #12]
 14347 05b4 000053E3 		cmp	r3, #0
 14348 05b8 2000000A 		beq	.L920
 14349              		.loc 1 5581 55 discriminator 1
 14350 05bc 28301BE5 		ldr	r3, [fp, #-40]
 14351              		.loc 1 5581 25 discriminator 1
 14352 05c0 000053E3 		cmp	r3, #0
 14353 05c4 1D0000AA 		bge	.L920
5582:../../Source/Kernel/rme_kernel.c ****     {
5583:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5584:../../Source/Kernel/rme_kernel.c ****         
5585:../../Source/Kernel/rme_kernel.c ****         /* Register save area must be aligned to word boundary */
5586:../../Source/Kernel/rme_kernel.c ****         if(RME_IS_ALIGNED(Haddr)!=0U)
 14354              		.loc 1 5586 12
 14355 05c8 0C309BE5 		ldr	r3, [fp, #12]
 14356 05cc 033003E2 		and	r3, r3, #3
 14357              		.loc 1 5586 33
 14358 05d0 000053E3 		cmp	r3, #0
 14359 05d4 0100001A 		bne	.L921
 14360              		.loc 1 5586 33 is_stmt 0 discriminator 1
 14361 05d8 0130A0E3 		mov	r3, #1
 14362 05dc 000000EA 		b	.L922
 14363              	.L921:
 14364              		.loc 1 5586 33 discriminator 2
 14365 05e0 0030A0E3 		mov	r3, #0
 14366              	.L922:
 14367              		.loc 1 5586 11 is_stmt 1 discriminator 4
 14368 05e4 000053E3 		cmp	r3, #0
 14369 05e8 1200000A 		beq	.L923
5587:../../Source/Kernel/rme_kernel.c ****         {
5588:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5589:../../Source/Kernel/rme_kernel.c ****             
5590:../../Source/Kernel/rme_kernel.c ****             /* It needs to be safely accessible to the kernel as well */
5591:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5592:../../Source/Kernel/rme_kernel.c ****             if(Haddr<RME_HYP_VA_BASE)
 14370              		.loc 1 5592 15
 14371 05ec 0C309BE5 		ldr	r3, [fp, #12]
 14372 05f0 1E0273E3 		cmn	r3, #-536870911
 14373 05f4 0100008A 		bhi	.L924
5593:../../Source/Kernel/rme_kernel.c ****             {
5594:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
5595:../../Source/Kernel/rme_kernel.c **** 
5596:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PTH_HADDR;
 14374              		.loc 1 5596 24
 14375 05f8 CA30E0E3 		mvn	r3, #202
 14376 05fc 680000EA 		b	.L885
 14377              	.L924:
5597:../../Source/Kernel/rme_kernel.c ****             }
5598:../../Source/Kernel/rme_kernel.c ****             else
5599:../../Source/Kernel/rme_kernel.c ****             {
5600:../../Source/Kernel/rme_kernel.c **** #endif
5601:../../Source/Kernel/rme_kernel.c ****                 End=Haddr+RME_REG_SIZE(RME_THD_ATTR(Thread->Ctx.Hyp_Attr));
 14378              		.loc 1 5601 20
 14379 0600 0C309BE5 		ldr	r3, [fp, #12]
 14380 0604 443083E2 		add	r3, r3, #68
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 352


 14381 0608 2C300BE5 		str	r3, [fp, #-44]
5602:../../Source/Kernel/rme_kernel.c ****                 if((End<=Haddr)||(End>(RME_HYP_VA_BASE+RME_HYP_VA_SIZE)))
 14382              		.loc 1 5602 19
 14383 060c 2C201BE5 		ldr	r2, [fp, #-44]
 14384 0610 0C309BE5 		ldr	r3, [fp, #12]
 14385 0614 030052E1 		cmp	r2, r3
 14386 0618 0400009A 		bls	.L925
 14387              		.loc 1 5602 32 discriminator 1
 14388 061c 2C201BE5 		ldr	r2, [fp, #-44]
 14389 0620 0030A0E3 		mov	r3, #0
 14390 0624 023042E3 		movt	r3, 8194
 14391 0628 030052E1 		cmp	r2, r3
 14392 062c 1100009A 		bls	.L938
 14393              	.L925:
5603:../../Source/Kernel/rme_kernel.c ****                 {
5604:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5605:../../Source/Kernel/rme_kernel.c **** 
5606:../../Source/Kernel/rme_kernel.c ****                     return RME_ERR_PTH_HADDR;
 14394              		.loc 1 5606 28
 14395 0630 CA30E0E3 		mvn	r3, #202
 14396 0634 5A0000EA 		b	.L885
 14397              	.L923:
5607:../../Source/Kernel/rme_kernel.c ****                 }
5608:../../Source/Kernel/rme_kernel.c ****                 else
5609:../../Source/Kernel/rme_kernel.c ****                 {
5610:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5611:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
5612:../../Source/Kernel/rme_kernel.c ****                 }
5613:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5614:../../Source/Kernel/rme_kernel.c ****             }
5615:../../Source/Kernel/rme_kernel.c **** #endif
5616:../../Source/Kernel/rme_kernel.c ****         }
5617:../../Source/Kernel/rme_kernel.c ****         /* Not aligned, exiting */
5618:../../Source/Kernel/rme_kernel.c ****         else
5619:../../Source/Kernel/rme_kernel.c ****         {
5620:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5621:../../Source/Kernel/rme_kernel.c **** 
5622:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_HADDR;
 14398              		.loc 1 5622 20
 14399 0638 CA30E0E3 		mvn	r3, #202
 14400 063c 580000EA 		b	.L885
 14401              	.L920:
5623:../../Source/Kernel/rme_kernel.c ****         }
5624:../../Source/Kernel/rme_kernel.c ****     }
5625:../../Source/Kernel/rme_kernel.c ****     /* We don't allow setting HYP addr for normal threads, nor do we allow
5626:../../Source/Kernel/rme_kernel.c ****      * setting HYP addr to NULL for hypervisor-managed threads. */
5627:../../Source/Kernel/rme_kernel.c ****     else if(((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)==0U))||
 14402              		.loc 1 5627 12
 14403 0640 0C309BE5 		ldr	r3, [fp, #12]
 14404 0644 000053E3 		cmp	r3, #0
 14405 0648 0200000A 		beq	.L928
 14406              		.loc 1 5627 61 discriminator 1
 14407 064c 28301BE5 		ldr	r3, [fp, #-40]
 14408              		.loc 1 5627 31 discriminator 1
 14409 0650 000053E3 		cmp	r3, #0
 14410 0654 050000AA 		bge	.L929
 14411              	.L928:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 353


 14412              		.loc 1 5627 67 discriminator 3
 14413 0658 0C309BE5 		ldr	r3, [fp, #12]
 14414 065c 000053E3 		cmp	r3, #0
 14415 0660 0500001A 		bne	.L927
5628:../../Source/Kernel/rme_kernel.c ****             ((Haddr==RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U)))
 14416              		.loc 1 5628 61
 14417 0664 28301BE5 		ldr	r3, [fp, #-40]
 14418              		.loc 1 5628 31
 14419 0668 000053E3 		cmp	r3, #0
 14420 066c 020000AA 		bge	.L927
 14421              	.L929:
5629:../../Source/Kernel/rme_kernel.c ****     {
5630:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5631:../../Source/Kernel/rme_kernel.c **** 
5632:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
 14422              		.loc 1 5632 16
 14423 0670 CA30E0E3 		mvn	r3, #202
 14424 0674 4A0000EA 		b	.L885
 14425              	.L938:
5586:../../Source/Kernel/rme_kernel.c ****         {
 14426              		.loc 1 5586 11
 14427 0678 00F020E3 		nop
 14428              	.L927:
5633:../../Source/Kernel/rme_kernel.c ****     }
5634:../../Source/Kernel/rme_kernel.c ****     else
5635:../../Source/Kernel/rme_kernel.c ****     {
5636:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5637:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5638:../../Source/Kernel/rme_kernel.c ****     }
5639:../../Source/Kernel/rme_kernel.c **** 
5640:../../Source/Kernel/rme_kernel.c ****     /* Try to bind the thread */
5641:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)&(Thread->Sched.Local),
 14429              		.loc 1 5641 8
 14430 067c 18301BE5 		ldr	r3, [fp, #-24]
 14431 0680 143083E2 		add	r3, r3, #20
 14432 0684 1C101BE5 		ldr	r1, [fp, #-28]
 14433 0688 20201BE5 		ldr	r2, [fp, #-32]
 14434 068c 0300A0E1 		mov	r0, r3
 14435 0690 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 14436 0694 0030A0E1 		mov	r3, r0
 14437              		.loc 1 5641 7 discriminator 1
 14438 0698 000053E3 		cmp	r3, #0
 14439 069c 0100001A 		bne	.L930
5642:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_Old,
5643:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_New)==RME_CASFAIL)
5644:../../Source/Kernel/rme_kernel.c ****     {
5645:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5646:../../Source/Kernel/rme_kernel.c **** 
5647:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 14440              		.loc 1 5647 16
 14441 06a0 C930E0E3 		mvn	r3, #201
 14442 06a4 3E0000EA 		b	.L885
 14443              	.L930:
5648:../../Source/Kernel/rme_kernel.c ****     }
5649:../../Source/Kernel/rme_kernel.c ****     else
5650:../../Source/Kernel/rme_kernel.c ****     {
5651:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 354


5652:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5653:../../Source/Kernel/rme_kernel.c ****     }
5654:../../Source/Kernel/rme_kernel.c ****     
5655:../../Source/Kernel/rme_kernel.c ****     /* Increase the reference count of the scheduler thread struct - same core */
5656:../../Source/Kernel/rme_kernel.c ****     Scheduler->Sched.Sched_Ref++;
 14444              		.loc 1 5656 21
 14445 06a8 24301BE5 		ldr	r3, [fp, #-36]
 14446 06ac 303093E5 		ldr	r3, [r3, #48]
 14447              		.loc 1 5656 31
 14448 06b0 012083E2 		add	r2, r3, #1
 14449 06b4 24301BE5 		ldr	r3, [fp, #-36]
 14450 06b8 302083E5 		str	r2, [r3, #48]
5657:../../Source/Kernel/rme_kernel.c ****     
5658:../../Source/Kernel/rme_kernel.c ****     /* Bind successful and finish the work off. No need to worry about other cores'
5659:../../Source/Kernel/rme_kernel.c ****      * operations on this thread because this thread is already bound to this core.
5660:../../Source/Kernel/rme_kernel.c ****      * TID is half-word parameter-wise, but is stored and returned as a full word. */
5661:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd=Scheduler;
 14451              		.loc 1 5661 28
 14452 06bc 18301BE5 		ldr	r3, [fp, #-24]
 14453 06c0 24201BE5 		ldr	r2, [fp, #-36]
 14454 06c4 342083E5 		str	r2, [r3, #52]
5662:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 14455              		.loc 1 5662 23
 14456 06c8 18301BE5 		ldr	r3, [fp, #-24]
 14457 06cc 08209BE5 		ldr	r2, [fp, #8]
 14458 06d0 202083E5 		str	r2, [r3, #32]
5663:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=(rme_ptr_t)TID;
 14459              		.loc 1 5663 23
 14460 06d4 04209BE5 		ldr	r2, [fp, #4]
 14461              		.loc 1 5663 22
 14462 06d8 18301BE5 		ldr	r3, [fp, #-24]
 14463 06dc 102083E5 		str	r2, [r3, #16]
5664:../../Source/Kernel/rme_kernel.c ****     
5665:../../Source/Kernel/rme_kernel.c ****     /* The state must be TIMEOUT or EXCPEND at this point */
5666:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT((Thread->Sched.State==RME_THD_TIMEOUT)||
 14464              		.loc 1 5666 5
 14465 06e0 18301BE5 		ldr	r3, [fp, #-24]
 14466 06e4 1C3093E5 		ldr	r3, [r3, #28]
 14467 06e8 020053E3 		cmp	r3, #2
 14468 06ec 0C00000A 		beq	.L931
 14469              		.loc 1 5666 5 is_stmt 0 discriminator 1
 14470 06f0 18301BE5 		ldr	r3, [fp, #-24]
 14471 06f4 1C3093E5 		ldr	r3, [r3, #28]
 14472 06f8 030053E3 		cmp	r3, #3
 14473 06fc 0800000A 		beq	.L931
 14474              		.loc 1 5666 5 discriminator 2
 14475 0700 003000E3 		movw	r3, #:lower16:.LC6
 14476 0704 003040E3 		movt	r3, #:upper16:.LC6
 14477 0708 002000E3 		movw	r2, #:lower16:.LC7
 14478 070c 002040E3 		movt	r2, #:upper16:.LC7
 14479 0710 221601E3 		movw	r1, #5666
 14480 0714 000000E3 		movw	r0, #:lower16:.LC8
 14481 0718 000040E3 		movt	r0, #:upper16:.LC8
 14482 071c FEFFFFEB 		bl	RME_Log
 14483              	.L932:
 14484              		.loc 1 5666 5
 14485 0720 FEFFFFEA 		b	.L932
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 355


 14486              	.L931:
5667:../../Source/Kernel/rme_kernel.c ****                (Thread->Sched.State==RME_THD_EXCPEND));
5668:../../Source/Kernel/rme_kernel.c **** 
5669:../../Source/Kernel/rme_kernel.c ****     /* Tie the signal endpoint to it if not zero */
5670:../../Source/Kernel/rme_kernel.c ****     if(Sig_Op==0U)
 14487              		.loc 1 5670 7 is_stmt 1
 14488 0724 10301BE5 		ldr	r3, [fp, #-16]
 14489 0728 000053E3 		cmp	r3, #0
 14490 072c 0300001A 		bne	.L933
5671:../../Source/Kernel/rme_kernel.c ****     {
5672:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5673:../../Source/Kernel/rme_kernel.c **** 
5674:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=0U;
 14491              		.loc 1 5674 32
 14492 0730 18301BE5 		ldr	r3, [fp, #-24]
 14493 0734 0020A0E3 		mov	r2, #0
 14494 0738 382083E5 		str	r2, [r3, #56]
 14495 073c 100000EA 		b	.L934
 14496              	.L933:
5675:../../Source/Kernel/rme_kernel.c ****     }
5676:../../Source/Kernel/rme_kernel.c ****     else
5677:../../Source/Kernel/rme_kernel.c ****     {
5678:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5679:../../Source/Kernel/rme_kernel.c **** 
5680:../../Source/Kernel/rme_kernel.c ****         /* Convert to root cap */
5681:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 14497              		.loc 1 5681 33
 14498 0740 10301BE5 		ldr	r3, [fp, #-16]
 14499 0744 003093E5 		ldr	r3, [r3]
 14500 0748 7330FFE6 		uxth	r3, r3
 14501 074c 000053E3 		cmp	r3, #0
 14502 0750 0200000A 		beq	.L935
 14503              		.loc 1 5681 33 is_stmt 0 discriminator 1
 14504 0754 10301BE5 		ldr	r3, [fp, #-16]
 14505 0758 043093E5 		ldr	r3, [r3, #4]
 14506 075c 000000EA 		b	.L936
 14507              	.L935:
 14508              		.loc 1 5681 33 discriminator 2
 14509 0760 10301BE5 		ldr	r3, [fp, #-16]
 14510              	.L936:
 14511              		.loc 1 5681 32 is_stmt 1 discriminator 4
 14512 0764 18201BE5 		ldr	r2, [fp, #-24]
 14513 0768 383082E5 		str	r3, [r2, #56]
5682:../../Source/Kernel/rme_kernel.c ****         
5683:../../Source/Kernel/rme_kernel.c ****         /* Increase refcnt */
5684:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),1U);
 14514              		.loc 1 5684 9
 14515 076c 18301BE5 		ldr	r3, [fp, #-24]
 14516 0770 383093E5 		ldr	r3, [r3, #56]
 14517 0774 043083E2 		add	r3, r3, #4
 14518 0778 0110A0E3 		mov	r1, #1
 14519 077c 0300A0E1 		mov	r0, r3
 14520 0780 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14521              	.L934:
5685:../../Source/Kernel/rme_kernel.c ****     }
5686:../../Source/Kernel/rme_kernel.c ****     
5687:../../Source/Kernel/rme_kernel.c ****     /* Set hypervisor context address if we're hypervisor-managed */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 356


5688:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)!=0U)
 14522              		.loc 1 5688 20
 14523 0784 18301BE5 		ldr	r3, [fp, #-24]
 14524 0788 443093E5 		ldr	r3, [r3, #68]
 14525              		.loc 1 5688 7
 14526 078c 000053E3 		cmp	r3, #0
 14527 0790 020000AA 		bge	.L937
5689:../../Source/Kernel/rme_kernel.c ****     {
5690:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5691:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)Haddr;
 14528              		.loc 1 5691 25
 14529 0794 0C209BE5 		ldr	r2, [fp, #12]
 14530              		.loc 1 5691 24
 14531 0798 18301BE5 		ldr	r3, [fp, #-24]
 14532 079c 482083E5 		str	r2, [r3, #72]
 14533              	.L937:
5692:../../Source/Kernel/rme_kernel.c ****     }
5693:../../Source/Kernel/rme_kernel.c ****     else
5694:../../Source/Kernel/rme_kernel.c ****     {
5695:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5696:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5697:../../Source/Kernel/rme_kernel.c ****     }
5698:../../Source/Kernel/rme_kernel.c ****     
5699:../../Source/Kernel/rme_kernel.c ****     return 0;
 14534              		.loc 1 5699 12
 14535 07a0 0030A0E3 		mov	r3, #0
 14536              	.L885:
5700:../../Source/Kernel/rme_kernel.c **** }
 14537              		.loc 1 5700 1
 14538 07a4 0300A0E1 		mov	r0, r3
 14539 07a8 04D04BE2 		sub	sp, fp, #4
 14540              		.cfi_def_cfa 13, 8
 14541              		@ sp needed
 14542 07ac 0088BDE8 		pop	{fp, pc}
 14543              		.cfi_endproc
 14544              	.LFE58:
 14546              		.section	.text._RME_Thd_Sched_Free,"ax",%progbits
 14547              		.align	2
 14548              		.syntax unified
 14549              		.arm
 14551              	_RME_Thd_Sched_Free:
 14552              	.LFB59:
5701:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Bind ******************************************/
5702:../../Source/Kernel/rme_kernel.c **** 
5703:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Free ***********************************************
5704:../../Source/Kernel/rme_kernel.c **** Description : Free a thread from its current processor binding. This function
5705:../../Source/Kernel/rme_kernel.c ****               can only be executed from the same core on with the thread.
5706:../../Source/Kernel/rme_kernel.c ****               To free a thread from a core, it must not be the scheduler of
5707:../../Source/Kernel/rme_kernel.c ****               someone else. It could have pending scheduler notifications to
5708:../../Source/Kernel/rme_kernel.c ****               its parent though.
5709:../../Source/Kernel/rme_kernel.c ****               This system call can cause a potential context switch.
5710:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5711:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
5712:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5713:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5714:../../Source/Kernel/rme_kernel.c **** Output      : None.
5715:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 357


5716:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5717:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Free(struct RME_Cap_Cpt* Cpt, 
5718:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5719:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd)
5720:../../Source/Kernel/rme_kernel.c **** {
 14553              		.loc 1 5720 1
 14554              		.cfi_startproc
 14555              		@ args = 0, pretend = 0, frame = 32
 14556              		@ frame_needed = 1, uses_anonymous_args = 0
 14557 0000 00482DE9 		push	{fp, lr}
 14558              		.cfi_def_cfa_offset 8
 14559              		.cfi_offset 11, -8
 14560              		.cfi_offset 14, -4
 14561 0004 04B08DE2 		add	fp, sp, #4
 14562              		.cfi_def_cfa 11, 4
 14563 0008 20D04DE2 		sub	sp, sp, #32
 14564 000c 18000BE5 		str	r0, [fp, #-24]
 14565 0010 1C100BE5 		str	r1, [fp, #-28]
 14566 0014 20200BE5 		str	r2, [fp, #-32]
5721:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5722:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5723:../../Source/Kernel/rme_kernel.c ****     /* These are used to free the thread */
5724:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5725:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5726:../../Source/Kernel/rme_kernel.c ****     
5727:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5728:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14567              		.loc 1 5728 5
 14568 0018 20301BE5 		ldr	r3, [fp, #-32]
 14569 001c 803003E2 		and	r3, r3, #128
 14570 0020 000053E3 		cmp	r3, #0
 14571 0024 1C00001A 		bne	.L940
 14572              		.loc 1 5728 5 is_stmt 0 discriminator 1
 14573 0028 18301BE5 		ldr	r3, [fp, #-24]
 14574 002c 142093E5 		ldr	r2, [r3, #20]
 14575 0030 20301BE5 		ldr	r3, [fp, #-32]
 14576 0034 030052E1 		cmp	r2, r3
 14577 0038 0100008A 		bhi	.L941
 14578              		.loc 1 5728 5 discriminator 3
 14579 003c 0230E0E3 		mvn	r3, #2
 14580              		.loc 1 5728 5
 14581 0040 D90000EA 		b	.L942
 14582              	.L941:
 14583              		.loc 1 5728 5 discriminator 4
 14584 0044 20301BE5 		ldr	r3, [fp, #-32]
 14585 0048 8322A0E1 		lsl	r2, r3, #5
 14586 004c 18301BE5 		ldr	r3, [fp, #-24]
 14587 0050 0C3093E5 		ldr	r3, [r3, #12]
 14588 0054 033082E0 		add	r3, r2, r3
 14589 0058 08300BE5 		str	r3, [fp, #-8]
 14590 005c 08301BE5 		ldr	r3, [fp, #-8]
 14591 0060 0300A0E1 		mov	r0, r3
 14592 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14593 0068 0C000BE5 		str	r0, [fp, #-12]
 14594              		.loc 1 5728 5 discriminator 1
 14595 006c 0C301BE5 		ldr	r3, [fp, #-12]
 14596 0070 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 358


 14597 0074 020853E3 		cmp	r3, #131072
 14598 0078 0100001A 		bne	.L943
 14599              		.loc 1 5728 5 discriminator 5
 14600 007c 0830E0E3 		mvn	r3, #8
 14601              		.loc 1 5728 5
 14602 0080 C90000EA 		b	.L942
 14603              	.L943:
 14604              		.loc 1 5728 5 discriminator 6
 14605 0084 0C301BE5 		ldr	r3, [fp, #-12]
 14606 0088 233CA0E1 		lsr	r3, r3, #24
 14607 008c 060053E3 		cmp	r3, #6
 14608 0090 3F00000A 		beq	.L944
 14609              		.loc 1 5728 5 discriminator 7
 14610 0094 0130E0E3 		mvn	r3, #1
 14611              		.loc 1 5728 5
 14612 0098 C30000EA 		b	.L942
 14613              	.L940:
 14614              		.loc 1 5728 5 discriminator 2
 14615 009c 20301BE5 		ldr	r3, [fp, #-32]
 14616 00a0 2324A0E1 		lsr	r2, r3, #8
 14617 00a4 18301BE5 		ldr	r3, [fp, #-24]
 14618 00a8 143093E5 		ldr	r3, [r3, #20]
 14619 00ac 030052E1 		cmp	r2, r3
 14620 00b0 0100003A 		bcc	.L945
 14621              		.loc 1 5728 5 discriminator 8
 14622 00b4 0230E0E3 		mvn	r3, #2
 14623              		.loc 1 5728 5
 14624 00b8 BB0000EA 		b	.L942
 14625              	.L945:
 14626              		.loc 1 5728 5 discriminator 9
 14627 00bc 20301BE5 		ldr	r3, [fp, #-32]
 14628 00c0 2334A0E1 		lsr	r3, r3, #8
 14629 00c4 8322A0E1 		lsl	r2, r3, #5
 14630 00c8 18301BE5 		ldr	r3, [fp, #-24]
 14631 00cc 0C3093E5 		ldr	r3, [r3, #12]
 14632 00d0 033082E0 		add	r3, r2, r3
 14633 00d4 08300BE5 		str	r3, [fp, #-8]
 14634 00d8 08301BE5 		ldr	r3, [fp, #-8]
 14635 00dc 0300A0E1 		mov	r0, r3
 14636 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14637 00e4 0C000BE5 		str	r0, [fp, #-12]
 14638              		.loc 1 5728 5 discriminator 1
 14639 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 14640 00ec FF3803E2 		and	r3, r3, #16711680
 14641 00f0 020853E3 		cmp	r3, #131072
 14642 00f4 0100001A 		bne	.L946
 14643              		.loc 1 5728 5 discriminator 10
 14644 00f8 0830E0E3 		mvn	r3, #8
 14645              		.loc 1 5728 5
 14646 00fc AA0000EA 		b	.L942
 14647              	.L946:
 14648              		.loc 1 5728 5 discriminator 11
 14649 0100 0C301BE5 		ldr	r3, [fp, #-12]
 14650 0104 233CA0E1 		lsr	r3, r3, #24
 14651 0108 030053E3 		cmp	r3, #3
 14652 010c 0100000A 		beq	.L947
 14653              		.loc 1 5728 5 discriminator 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 359


 14654 0110 0130E0E3 		mvn	r3, #1
 14655              		.loc 1 5728 5
 14656 0114 A40000EA 		b	.L942
 14657              	.L947:
 14658              		.loc 1 5728 5 discriminator 13
 14659 0118 20301BE5 		ldr	r3, [fp, #-32]
 14660 011c 7F2003E2 		and	r2, r3, #127
 14661 0120 08301BE5 		ldr	r3, [fp, #-8]
 14662 0124 143093E5 		ldr	r3, [r3, #20]
 14663 0128 030052E1 		cmp	r2, r3
 14664 012c 0100003A 		bcc	.L948
 14665              		.loc 1 5728 5 discriminator 14
 14666 0130 0230E0E3 		mvn	r3, #2
 14667              		.loc 1 5728 5
 14668 0134 9C0000EA 		b	.L942
 14669              	.L948:
 14670              		.loc 1 5728 5 discriminator 15
 14671 0138 20301BE5 		ldr	r3, [fp, #-32]
 14672 013c 7F3003E2 		and	r3, r3, #127
 14673 0140 8322A0E1 		lsl	r2, r3, #5
 14674 0144 08301BE5 		ldr	r3, [fp, #-8]
 14675 0148 0C3093E5 		ldr	r3, [r3, #12]
 14676 014c 033082E0 		add	r3, r2, r3
 14677 0150 08300BE5 		str	r3, [fp, #-8]
 14678 0154 08301BE5 		ldr	r3, [fp, #-8]
 14679 0158 0300A0E1 		mov	r0, r3
 14680 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14681 0160 0C000BE5 		str	r0, [fp, #-12]
 14682              		.loc 1 5728 5 discriminator 1
 14683 0164 0C301BE5 		ldr	r3, [fp, #-12]
 14684 0168 FF3803E2 		and	r3, r3, #16711680
 14685 016c 020853E3 		cmp	r3, #131072
 14686 0170 0100001A 		bne	.L949
 14687              		.loc 1 5728 5 discriminator 16
 14688 0174 0830E0E3 		mvn	r3, #8
 14689              		.loc 1 5728 5
 14690 0178 8B0000EA 		b	.L942
 14691              	.L949:
 14692              		.loc 1 5728 5 discriminator 17
 14693 017c 0C301BE5 		ldr	r3, [fp, #-12]
 14694 0180 233CA0E1 		lsr	r3, r3, #24
 14695 0184 060053E3 		cmp	r3, #6
 14696 0188 0100000A 		beq	.L944
 14697              		.loc 1 5728 5 discriminator 18
 14698 018c 0130E0E3 		mvn	r3, #1
 14699              		.loc 1 5728 5
 14700 0190 850000EA 		b	.L942
 14701              	.L944:
5729:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5730:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5731:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_FREE);
 14702              		.loc 1 5731 5 is_stmt 1
 14703 0194 08301BE5 		ldr	r3, [fp, #-8]
 14704 0198 083093E5 		ldr	r3, [r3, #8]
 14705 019c 103003E2 		and	r3, r3, #16
 14706 01a0 000053E3 		cmp	r3, #0
 14707 01a4 0100001A 		bne	.L950
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 360


 14708              		.loc 1 5731 5 is_stmt 0 discriminator 1
 14709 01a8 0630E0E3 		mvn	r3, #6
 14710              		.loc 1 5731 5
 14711 01ac 7E0000EA 		b	.L942
 14712              	.L950:
5732:../../Source/Kernel/rme_kernel.c ****     
5733:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound to this core */
5734:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14713              		.loc 1 5734 10 is_stmt 1
 14714 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14715 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14716 01b8 10300BE5 		str	r3, [fp, #-16]
5735:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 14717              		.loc 1 5735 48
 14718 01bc 08301BE5 		ldr	r3, [fp, #-8]
 14719 01c0 0C3093E5 		ldr	r3, [r3, #12]
 14720              		.loc 1 5735 11
 14721 01c4 14300BE5 		str	r3, [fp, #-20]
5736:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 14722              		.loc 1 5736 21
 14723 01c8 14301BE5 		ldr	r3, [fp, #-20]
 14724 01cc 143093E5 		ldr	r3, [r3, #20]
 14725              		.loc 1 5736 7
 14726 01d0 10201BE5 		ldr	r2, [fp, #-16]
 14727 01d4 030052E1 		cmp	r2, r3
 14728 01d8 0100000A 		beq	.L951
5737:../../Source/Kernel/rme_kernel.c ****     {
5738:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5739:../../Source/Kernel/rme_kernel.c **** 
5740:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14729              		.loc 1 5740 16
 14730 01dc CB30E0E3 		mvn	r3, #203
 14731 01e0 710000EA 		b	.L942
 14732              	.L951:
5741:../../Source/Kernel/rme_kernel.c ****     }
5742:../../Source/Kernel/rme_kernel.c ****     else
5743:../../Source/Kernel/rme_kernel.c ****     {
5744:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5745:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5746:../../Source/Kernel/rme_kernel.c ****     }
5747:../../Source/Kernel/rme_kernel.c ****     
5748:../../Source/Kernel/rme_kernel.c ****     /* Am I referenced by someone as a scheduler? If yes, we cannot unbind. Because
5749:../../Source/Kernel/rme_kernel.c ****      * boot-time thread's refcnt will never be 0, thus they will never pass this checking */
5750:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Ref!=0U)
 14733              		.loc 1 5750 21
 14734 01e4 14301BE5 		ldr	r3, [fp, #-20]
 14735 01e8 303093E5 		ldr	r3, [r3, #48]
 14736              		.loc 1 5750 7
 14737 01ec 000053E3 		cmp	r3, #0
 14738 01f0 0100000A 		beq	.L952
5751:../../Source/Kernel/rme_kernel.c ****     {
5752:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5753:../../Source/Kernel/rme_kernel.c **** 
5754:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_REFCNT;
 14739              		.loc 1 5754 16
 14740 01f4 CD30E0E3 		mvn	r3, #205
 14741 01f8 6B0000EA 		b	.L942
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 361


 14742              	.L952:
5755:../../Source/Kernel/rme_kernel.c ****     }
5756:../../Source/Kernel/rme_kernel.c ****     else
5757:../../Source/Kernel/rme_kernel.c ****     {
5758:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5759:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5760:../../Source/Kernel/rme_kernel.c ****     }
5761:../../Source/Kernel/rme_kernel.c **** 
5762:../../Source/Kernel/rme_kernel.c ****     /* Decrease the parent's reference count - on the same core */
5763:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd->Sched.Sched_Ref--;
 14743              		.loc 1 5763 18
 14744 01fc 14301BE5 		ldr	r3, [fp, #-20]
 14745 0200 343093E5 		ldr	r3, [r3, #52]
 14746              		.loc 1 5763 35
 14747 0204 302093E5 		ldr	r2, [r3, #48]
 14748              		.loc 1 5763 45
 14749 0208 012042E2 		sub	r2, r2, #1
 14750 020c 302083E5 		str	r2, [r3, #48]
5764:../../Source/Kernel/rme_kernel.c **** 
5765:../../Source/Kernel/rme_kernel.c ****     /* See if we have any events sent to the parent. If yes, remove that event */
5766:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Notif.Next!=&(Thread->Sched.Notif))
 14751              		.loc 1 5766 27
 14752 0210 14301BE5 		ldr	r3, [fp, #-20]
 14753 0214 082093E5 		ldr	r2, [r3, #8]
 14754              		.loc 1 5766 34
 14755 0218 14301BE5 		ldr	r3, [fp, #-20]
 14756 021c 083083E2 		add	r3, r3, #8
 14757              		.loc 1 5766 7
 14758 0220 030052E1 		cmp	r2, r3
 14759 0224 0A00000A 		beq	.L953
5767:../../Source/Kernel/rme_kernel.c ****     {
5768:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5769:../../Source/Kernel/rme_kernel.c **** 
5770:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 14760              		.loc 1 5770 9
 14761 0228 14301BE5 		ldr	r3, [fp, #-20]
 14762 022c 0C2093E5 		ldr	r2, [r3, #12]
 14763 0230 14301BE5 		ldr	r3, [fp, #-20]
 14764 0234 083093E5 		ldr	r3, [r3, #8]
 14765 0238 0310A0E1 		mov	r1, r3
 14766 023c 0200A0E1 		mov	r0, r2
 14767 0240 FEFFFFEB 		bl	_RME_List_Del
5771:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Thread->Sched.Notif));
 14768              		.loc 1 5771 9
 14769 0244 14301BE5 		ldr	r3, [fp, #-20]
 14770 0248 083083E2 		add	r3, r3, #8
 14771 024c 0300A0E1 		mov	r0, r3
 14772 0250 FEFFFFEB 		bl	_RME_List_Crt
 14773              	.L953:
5772:../../Source/Kernel/rme_kernel.c ****     }
5773:../../Source/Kernel/rme_kernel.c ****     else
5774:../../Source/Kernel/rme_kernel.c ****     {
5775:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5776:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5777:../../Source/Kernel/rme_kernel.c ****     }
5778:../../Source/Kernel/rme_kernel.c **** 
5779:../../Source/Kernel/rme_kernel.c ****     /* If we have an scheduler event endpoint, release it */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 362


5780:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Sig!=RME_NULL)
 14774              		.loc 1 5780 21
 14775 0254 14301BE5 		ldr	r3, [fp, #-20]
 14776 0258 383093E5 		ldr	r3, [r3, #56]
 14777              		.loc 1 5780 7
 14778 025c 000053E3 		cmp	r3, #0
 14779 0260 0500000A 		beq	.L954
5781:../../Source/Kernel/rme_kernel.c ****     {
5782:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5783:../../Source/Kernel/rme_kernel.c **** 
5784:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),-1);
 14780              		.loc 1 5784 9
 14781 0264 14301BE5 		ldr	r3, [fp, #-20]
 14782 0268 383093E5 		ldr	r3, [r3, #56]
 14783 026c 043083E2 		add	r3, r3, #4
 14784 0270 0010E0E3 		mvn	r1, #0
 14785 0274 0300A0E1 		mov	r0, r3
 14786 0278 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14787              	.L954:
5785:../../Source/Kernel/rme_kernel.c ****     }
5786:../../Source/Kernel/rme_kernel.c ****     else
5787:../../Source/Kernel/rme_kernel.c ****     {
5788:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5789:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5790:../../Source/Kernel/rme_kernel.c ****     }
5791:../../Source/Kernel/rme_kernel.c **** 
5792:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5793:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 14788              		.loc 1 5793 5
 14789 027c 0010A0E3 		mov	r1, #0
 14790 0280 1C001BE5 		ldr	r0, [fp, #-28]
 14791 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5794:../../Source/Kernel/rme_kernel.c ****     
5795:../../Source/Kernel/rme_kernel.c ****     /* If the thread is ready, kick it out of the run queue. If it is blocked on
5796:../../Source/Kernel/rme_kernel.c ****      * some endpoint, end the blocking and set the return value to RME_ERR_SIV_FREE.
5797:../../Source/Kernel/rme_kernel.c ****      * If the thread is killed due to a fault, we will not clear the fault here, and
5798:../../Source/Kernel/rme_kernel.c ****      * we will wait for the Exec_Set to clear it. No scheduler notifications are sent
5799:../../Source/Kernel/rme_kernel.c ****      * because the thread is being freed and notifications at this point are useless. */
5800:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_READY)
 14792              		.loc 1 5800 21
 14793 0288 14301BE5 		ldr	r3, [fp, #-20]
 14794 028c 1C3093E5 		ldr	r3, [r3, #28]
 14795              		.loc 1 5800 7
 14796 0290 000053E3 		cmp	r3, #0
 14797 0294 0500001A 		bne	.L955
5801:../../Source/Kernel/rme_kernel.c ****     {
5802:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5803:../../Source/Kernel/rme_kernel.c **** 
5804:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue and timeout but don't notify parent */
5805:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thread);
 14798              		.loc 1 5805 9
 14799 0298 14001BE5 		ldr	r0, [fp, #-20]
 14800 029c FEFFFFEB 		bl	_RME_Run_Del
5806:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14801              		.loc 1 5806 28
 14802 02a0 14301BE5 		ldr	r3, [fp, #-20]
 14803 02a4 0220A0E3 		mov	r2, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 363


 14804 02a8 1C2083E5 		str	r2, [r3, #28]
 14805 02ac 130000EA 		b	.L956
 14806              	.L955:
5807:../../Source/Kernel/rme_kernel.c ****     }
5808:../../Source/Kernel/rme_kernel.c ****     /* BLOCKED */
5809:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_BLOCKED)
 14807              		.loc 1 5809 26
 14808 02b0 14301BE5 		ldr	r3, [fp, #-20]
 14809 02b4 1C3093E5 		ldr	r3, [r3, #28]
 14810              		.loc 1 5809 12
 14811 02b8 010053E3 		cmp	r3, #1
 14812 02bc 0F00001A 		bne	.L956
5810:../../Source/Kernel/rme_kernel.c ****     {
5811:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5812:../../Source/Kernel/rme_kernel.c ****         
5813:../../Source/Kernel/rme_kernel.c ****         /* If it got here, the thread that is operated on cannot be the current 
5814:../../Source/Kernel/rme_kernel.c ****          * thread, so we are not overwriting the return value of the caller. */
5815:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thread->Ctx.Reg->Reg),RME_ERR_SIV_FREE);
 14813              		.loc 1 5815 43
 14814 02c0 14301BE5 		ldr	r3, [fp, #-20]
 14815 02c4 483093E5 		ldr	r3, [r3, #72]
 14816              		.loc 1 5815 9
 14817 02c8 CE1E0FE3 		movw	r1, #65230
 14818 02cc FF1F4FE3 		movt	r1, 65535
 14819 02d0 0300A0E1 		mov	r0, r3
 14820 02d4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5816:../../Source/Kernel/rme_kernel.c ****         /* Release signal and thread from each other */
5817:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal->Thd=RME_NULL;
 14821              		.loc 1 5817 22
 14822 02d8 14301BE5 		ldr	r3, [fp, #-20]
 14823 02dc 283093E5 		ldr	r3, [r3, #40]
 14824              		.loc 1 5817 34
 14825 02e0 0020A0E3 		mov	r2, #0
 14826 02e4 182083E5 		str	r2, [r3, #24]
5818:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal=RME_NULL;
 14827              		.loc 1 5818 29
 14828 02e8 14301BE5 		ldr	r3, [fp, #-20]
 14829 02ec 0020A0E3 		mov	r2, #0
 14830 02f0 282083E5 		str	r2, [r3, #40]
5819:../../Source/Kernel/rme_kernel.c ****         /* Timeout but don't notify parent */
5820:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14831              		.loc 1 5820 28
 14832 02f4 14301BE5 		ldr	r3, [fp, #-20]
 14833 02f8 0220A0E3 		mov	r2, #2
 14834 02fc 1C2083E5 		str	r2, [r3, #28]
 14835              	.L956:
5821:../../Source/Kernel/rme_kernel.c ****     }
5822:../../Source/Kernel/rme_kernel.c ****     /* TIMEOUT or EXCPEND */
5823:../../Source/Kernel/rme_kernel.c ****     else
5824:../../Source/Kernel/rme_kernel.c ****     {
5825:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5826:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5827:../../Source/Kernel/rme_kernel.c ****     }
5828:../../Source/Kernel/rme_kernel.c **** 
5829:../../Source/Kernel/rme_kernel.c ****     /* Cleanup all remaining timeslices on it */
5830:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 14836              		.loc 1 5830 24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 364


 14837 0300 14301BE5 		ldr	r3, [fp, #-20]
 14838 0304 0020A0E3 		mov	r2, #0
 14839 0308 182083E5 		str	r2, [r3, #24]
5831:../../Source/Kernel/rme_kernel.c ****     
5832:../../Source/Kernel/rme_kernel.c ****     /* Check if this thread is the current one and we may need to switch away */
5833:../../Source/Kernel/rme_kernel.c ****     if(Local->Thd_Cur==Thread)
 14840              		.loc 1 5833 13
 14841 030c 10301BE5 		ldr	r3, [fp, #-16]
 14842 0310 043093E5 		ldr	r3, [r3, #4]
 14843              		.loc 1 5833 7
 14844 0314 14201BE5 		ldr	r2, [fp, #-20]
 14845 0318 030052E1 		cmp	r2, r3
 14846 031c 1C00001A 		bne	.L957
5834:../../Source/Kernel/rme_kernel.c ****     {
5835:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5836:../../Source/Kernel/rme_kernel.c **** 
5837:../../Source/Kernel/rme_kernel.c ****         Local->Thd_Cur=_RME_Run_High(Local);
 14847              		.loc 1 5837 24
 14848 0320 10001BE5 		ldr	r0, [fp, #-16]
 14849 0324 FEFFFFEB 		bl	_RME_Run_High
 14850 0328 0020A0E1 		mov	r2, r0
 14851              		.loc 1 5837 23 discriminator 1
 14852 032c 10301BE5 		ldr	r3, [fp, #-16]
 14853 0330 042083E5 		str	r2, [r3, #4]
5838:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Local->Thd_Cur);
 14854              		.loc 1 5838 9
 14855 0334 10301BE5 		ldr	r3, [fp, #-16]
 14856 0338 043093E5 		ldr	r3, [r3, #4]
 14857 033c 0300A0E1 		mov	r0, r3
 14858 0340 FEFFFFEB 		bl	_RME_Run_Ins
5839:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Local->Thd_Cur->Sched.State==RME_THD_READY);
 14859              		.loc 1 5839 9
 14860 0344 10301BE5 		ldr	r3, [fp, #-16]
 14861 0348 043093E5 		ldr	r3, [r3, #4]
 14862 034c 1C3093E5 		ldr	r3, [r3, #28]
 14863 0350 000053E3 		cmp	r3, #0
 14864 0354 0800000A 		beq	.L958
 14865              		.loc 1 5839 9 is_stmt 0 discriminator 1
 14866 0358 003000E3 		movw	r3, #:lower16:.LC6
 14867 035c 003040E3 		movt	r3, #:upper16:.LC6
 14868 0360 002000E3 		movw	r2, #:lower16:.LC7
 14869 0364 002040E3 		movt	r2, #:upper16:.LC7
 14870 0368 CF1601E3 		movw	r1, #5839
 14871 036c 000000E3 		movw	r0, #:lower16:.LC8
 14872 0370 000040E3 		movt	r0, #:upper16:.LC8
 14873 0374 FEFFFFEB 		bl	RME_Log
 14874              	.L959:
 14875              		.loc 1 5839 9
 14876 0378 FEFFFFEA 		b	.L959
 14877              	.L958:
5840:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Swt(Reg,Thread,Local->Thd_Cur);
 14878              		.loc 1 5840 9 is_stmt 1
 14879 037c 10301BE5 		ldr	r3, [fp, #-16]
 14880 0380 043093E5 		ldr	r3, [r3, #4]
 14881 0384 0320A0E1 		mov	r2, r3
 14882 0388 14101BE5 		ldr	r1, [fp, #-20]
 14883 038c 1C001BE5 		ldr	r0, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 365


 14884 0390 FEFFFFEB 		bl	_RME_Run_Swt
 14885              	.L957:
5841:../../Source/Kernel/rme_kernel.c ****     }
5842:../../Source/Kernel/rme_kernel.c ****     else
5843:../../Source/Kernel/rme_kernel.c ****     {
5844:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5845:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5846:../../Source/Kernel/rme_kernel.c ****     }
5847:../../Source/Kernel/rme_kernel.c ****     
5848:../../Source/Kernel/rme_kernel.c ****     /* Set the state to free so other cores can bind */
5849:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((rme_ptr_t*)&(Thread->Sched.Local),
 14886              		.loc 1 5849 5
 14887 0394 14301BE5 		ldr	r3, [fp, #-20]
 14888 0398 143083E2 		add	r3, r3, #20
 14889 039c 0010E0E3 		mvn	r1, #0
 14890 03a0 0300A0E1 		mov	r0, r3
 14891 03a4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5850:../../Source/Kernel/rme_kernel.c ****                       (rme_ptr_t)RME_THD_FREE);
5851:../../Source/Kernel/rme_kernel.c **** 
5852:../../Source/Kernel/rme_kernel.c ****     return 0;
 14892              		.loc 1 5852 12
 14893 03a8 0030A0E3 		mov	r3, #0
 14894              	.L942:
5853:../../Source/Kernel/rme_kernel.c **** }
 14895              		.loc 1 5853 1
 14896 03ac 0300A0E1 		mov	r0, r3
 14897 03b0 04D04BE2 		sub	sp, fp, #4
 14898              		.cfi_def_cfa 13, 8
 14899              		@ sp needed
 14900 03b4 0088BDE8 		pop	{fp, pc}
 14901              		.cfi_endproc
 14902              	.LFE59:
 14904              		.section	.text._RME_Thd_Exec_Set,"ax",%progbits
 14905              		.align	2
 14906              		.syntax unified
 14907              		.arm
 14909              	_RME_Thd_Exec_Set:
 14910              	.LFB60:
5854:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Free ******************************************/
5855:../../Source/Kernel/rme_kernel.c **** 
5856:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Exec_Set *************************************************
5857:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's entry point and stack. The registers will be
5858:../../Source/Kernel/rme_kernel.c ****               initialized with these contents.
5859:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5860:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5861:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5862:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5863:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry address of the thread.
5864:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
5865:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter to pass to the thread.
5866:../../Source/Kernel/rme_kernel.c **** Output      : None.
5867:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5868:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5869:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Exec_Set(struct RME_Cap_Cpt* Cpt,
5870:../../Source/Kernel/rme_kernel.c ****                                    struct RME_Reg_Struct* Reg,
5871:../../Source/Kernel/rme_kernel.c ****                                    rme_cid_t Cap_Thd,
5872:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Entry,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 366


5873:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Stack,
5874:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Param)
5875:../../Source/Kernel/rme_kernel.c **** {
 14911              		.loc 1 5875 1
 14912              		.cfi_startproc
 14913              		@ args = 8, pretend = 0, frame = 32
 14914              		@ frame_needed = 1, uses_anonymous_args = 0
 14915 0000 00482DE9 		push	{fp, lr}
 14916              		.cfi_def_cfa_offset 8
 14917              		.cfi_offset 11, -8
 14918              		.cfi_offset 14, -4
 14919 0004 04B08DE2 		add	fp, sp, #4
 14920              		.cfi_def_cfa 11, 4
 14921 0008 28D04DE2 		sub	sp, sp, #40
 14922 000c 18000BE5 		str	r0, [fp, #-24]
 14923 0010 1C100BE5 		str	r1, [fp, #-28]
 14924 0014 20200BE5 		str	r2, [fp, #-32]
 14925 0018 24300BE5 		str	r3, [fp, #-36]
5876:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5877:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5878:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5879:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5880:../../Source/Kernel/rme_kernel.c ****     
5881:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5882:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14926              		.loc 1 5882 5
 14927 001c 20301BE5 		ldr	r3, [fp, #-32]
 14928 0020 803003E2 		and	r3, r3, #128
 14929 0024 000053E3 		cmp	r3, #0
 14930 0028 1C00001A 		bne	.L961
 14931              		.loc 1 5882 5 is_stmt 0 discriminator 1
 14932 002c 18301BE5 		ldr	r3, [fp, #-24]
 14933 0030 142093E5 		ldr	r2, [r3, #20]
 14934 0034 20301BE5 		ldr	r3, [fp, #-32]
 14935 0038 030052E1 		cmp	r2, r3
 14936 003c 0100008A 		bhi	.L962
 14937              		.loc 1 5882 5 discriminator 3
 14938 0040 0230E0E3 		mvn	r3, #2
 14939              		.loc 1 5882 5
 14940 0044 910000EA 		b	.L963
 14941              	.L962:
 14942              		.loc 1 5882 5 discriminator 4
 14943 0048 20301BE5 		ldr	r3, [fp, #-32]
 14944 004c 8322A0E1 		lsl	r2, r3, #5
 14945 0050 18301BE5 		ldr	r3, [fp, #-24]
 14946 0054 0C3093E5 		ldr	r3, [r3, #12]
 14947 0058 033082E0 		add	r3, r2, r3
 14948 005c 08300BE5 		str	r3, [fp, #-8]
 14949 0060 08301BE5 		ldr	r3, [fp, #-8]
 14950 0064 0300A0E1 		mov	r0, r3
 14951 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14952 006c 0C000BE5 		str	r0, [fp, #-12]
 14953              		.loc 1 5882 5 discriminator 1
 14954 0070 0C301BE5 		ldr	r3, [fp, #-12]
 14955 0074 FF3803E2 		and	r3, r3, #16711680
 14956 0078 020853E3 		cmp	r3, #131072
 14957 007c 0100001A 		bne	.L964
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 367


 14958              		.loc 1 5882 5 discriminator 5
 14959 0080 0830E0E3 		mvn	r3, #8
 14960              		.loc 1 5882 5
 14961 0084 810000EA 		b	.L963
 14962              	.L964:
 14963              		.loc 1 5882 5 discriminator 6
 14964 0088 0C301BE5 		ldr	r3, [fp, #-12]
 14965 008c 233CA0E1 		lsr	r3, r3, #24
 14966 0090 060053E3 		cmp	r3, #6
 14967 0094 3F00000A 		beq	.L965
 14968              		.loc 1 5882 5 discriminator 7
 14969 0098 0130E0E3 		mvn	r3, #1
 14970              		.loc 1 5882 5
 14971 009c 7B0000EA 		b	.L963
 14972              	.L961:
 14973              		.loc 1 5882 5 discriminator 2
 14974 00a0 20301BE5 		ldr	r3, [fp, #-32]
 14975 00a4 2324A0E1 		lsr	r2, r3, #8
 14976 00a8 18301BE5 		ldr	r3, [fp, #-24]
 14977 00ac 143093E5 		ldr	r3, [r3, #20]
 14978 00b0 030052E1 		cmp	r2, r3
 14979 00b4 0100003A 		bcc	.L966
 14980              		.loc 1 5882 5 discriminator 8
 14981 00b8 0230E0E3 		mvn	r3, #2
 14982              		.loc 1 5882 5
 14983 00bc 730000EA 		b	.L963
 14984              	.L966:
 14985              		.loc 1 5882 5 discriminator 9
 14986 00c0 20301BE5 		ldr	r3, [fp, #-32]
 14987 00c4 2334A0E1 		lsr	r3, r3, #8
 14988 00c8 8322A0E1 		lsl	r2, r3, #5
 14989 00cc 18301BE5 		ldr	r3, [fp, #-24]
 14990 00d0 0C3093E5 		ldr	r3, [r3, #12]
 14991 00d4 033082E0 		add	r3, r2, r3
 14992 00d8 08300BE5 		str	r3, [fp, #-8]
 14993 00dc 08301BE5 		ldr	r3, [fp, #-8]
 14994 00e0 0300A0E1 		mov	r0, r3
 14995 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14996 00e8 0C000BE5 		str	r0, [fp, #-12]
 14997              		.loc 1 5882 5 discriminator 1
 14998 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 14999 00f0 FF3803E2 		and	r3, r3, #16711680
 15000 00f4 020853E3 		cmp	r3, #131072
 15001 00f8 0100001A 		bne	.L967
 15002              		.loc 1 5882 5 discriminator 10
 15003 00fc 0830E0E3 		mvn	r3, #8
 15004              		.loc 1 5882 5
 15005 0100 620000EA 		b	.L963
 15006              	.L967:
 15007              		.loc 1 5882 5 discriminator 11
 15008 0104 0C301BE5 		ldr	r3, [fp, #-12]
 15009 0108 233CA0E1 		lsr	r3, r3, #24
 15010 010c 030053E3 		cmp	r3, #3
 15011 0110 0100000A 		beq	.L968
 15012              		.loc 1 5882 5 discriminator 12
 15013 0114 0130E0E3 		mvn	r3, #1
 15014              		.loc 1 5882 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 368


 15015 0118 5C0000EA 		b	.L963
 15016              	.L968:
 15017              		.loc 1 5882 5 discriminator 13
 15018 011c 20301BE5 		ldr	r3, [fp, #-32]
 15019 0120 7F2003E2 		and	r2, r3, #127
 15020 0124 08301BE5 		ldr	r3, [fp, #-8]
 15021 0128 143093E5 		ldr	r3, [r3, #20]
 15022 012c 030052E1 		cmp	r2, r3
 15023 0130 0100003A 		bcc	.L969
 15024              		.loc 1 5882 5 discriminator 14
 15025 0134 0230E0E3 		mvn	r3, #2
 15026              		.loc 1 5882 5
 15027 0138 540000EA 		b	.L963
 15028              	.L969:
 15029              		.loc 1 5882 5 discriminator 15
 15030 013c 20301BE5 		ldr	r3, [fp, #-32]
 15031 0140 7F3003E2 		and	r3, r3, #127
 15032 0144 8322A0E1 		lsl	r2, r3, #5
 15033 0148 08301BE5 		ldr	r3, [fp, #-8]
 15034 014c 0C3093E5 		ldr	r3, [r3, #12]
 15035 0150 033082E0 		add	r3, r2, r3
 15036 0154 08300BE5 		str	r3, [fp, #-8]
 15037 0158 08301BE5 		ldr	r3, [fp, #-8]
 15038 015c 0300A0E1 		mov	r0, r3
 15039 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15040 0164 0C000BE5 		str	r0, [fp, #-12]
 15041              		.loc 1 5882 5 discriminator 1
 15042 0168 0C301BE5 		ldr	r3, [fp, #-12]
 15043 016c FF3803E2 		and	r3, r3, #16711680
 15044 0170 020853E3 		cmp	r3, #131072
 15045 0174 0100001A 		bne	.L970
 15046              		.loc 1 5882 5 discriminator 16
 15047 0178 0830E0E3 		mvn	r3, #8
 15048              		.loc 1 5882 5
 15049 017c 430000EA 		b	.L963
 15050              	.L970:
 15051              		.loc 1 5882 5 discriminator 17
 15052 0180 0C301BE5 		ldr	r3, [fp, #-12]
 15053 0184 233CA0E1 		lsr	r3, r3, #24
 15054 0188 060053E3 		cmp	r3, #6
 15055 018c 0100000A 		beq	.L965
 15056              		.loc 1 5882 5 discriminator 18
 15057 0190 0130E0E3 		mvn	r3, #1
 15058              		.loc 1 5882 5
 15059 0194 3D0000EA 		b	.L963
 15060              	.L965:
5883:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5884:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5885:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_EXEC_SET);
 15061              		.loc 1 5885 5 is_stmt 1
 15062 0198 08301BE5 		ldr	r3, [fp, #-8]
 15063 019c 083093E5 		ldr	r3, [r3, #8]
 15064 01a0 013003E2 		and	r3, r3, #1
 15065 01a4 000053E3 		cmp	r3, #0
 15066 01a8 0100001A 		bne	.L971
 15067              		.loc 1 5885 5 is_stmt 0 discriminator 1
 15068 01ac 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 369


 15069              		.loc 1 5885 5
 15070 01b0 360000EA 		b	.L963
 15071              	.L971:
5886:../../Source/Kernel/rme_kernel.c ****     
5887:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound, and quit if it is not on our core */
5888:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 15072              		.loc 1 5888 12 is_stmt 1
 15073 01b4 08301BE5 		ldr	r3, [fp, #-8]
 15074 01b8 0C3093E5 		ldr	r3, [r3, #12]
 15075              		.loc 1 5888 11
 15076 01bc 10300BE5 		str	r3, [fp, #-16]
5889:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15077              		.loc 1 5889 10
 15078 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15079 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15080 01c8 14300BE5 		str	r3, [fp, #-20]
5890:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 15081              		.loc 1 5890 21
 15082 01cc 10301BE5 		ldr	r3, [fp, #-16]
 15083 01d0 143093E5 		ldr	r3, [r3, #20]
 15084              		.loc 1 5890 7
 15085 01d4 14201BE5 		ldr	r2, [fp, #-20]
 15086 01d8 030052E1 		cmp	r2, r3
 15087 01dc 0100000A 		beq	.L972
5891:../../Source/Kernel/rme_kernel.c ****     {
5892:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5893:../../Source/Kernel/rme_kernel.c **** 
5894:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15088              		.loc 1 5894 16
 15089 01e0 CB30E0E3 		mvn	r3, #203
 15090 01e4 290000EA 		b	.L963
 15091              	.L972:
5895:../../Source/Kernel/rme_kernel.c ****     }
5896:../../Source/Kernel/rme_kernel.c ****     else
5897:../../Source/Kernel/rme_kernel.c ****     {
5898:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5899:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5900:../../Source/Kernel/rme_kernel.c ****     }
5901:../../Source/Kernel/rme_kernel.c ****     
5902:../../Source/Kernel/rme_kernel.c ****     /* Commit the change if both values are non-zero. If both are zero we are just
5903:../../Source/Kernel/rme_kernel.c ****      * clearing the error flag and continue from where the exception happened. */
5904:../../Source/Kernel/rme_kernel.c ****     if((Entry!=RME_NULL)&&(Stack!=RME_NULL))
 15092              		.loc 1 5904 7
 15093 01e8 24301BE5 		ldr	r3, [fp, #-36]
 15094 01ec 000053E3 		cmp	r3, #0
 15095 01f0 0C00000A 		beq	.L973
 15096              		.loc 1 5904 25 discriminator 1
 15097 01f4 04309BE5 		ldr	r3, [fp, #4]
 15098 01f8 000053E3 		cmp	r3, #0
 15099 01fc 0900000A 		beq	.L973
5905:../../Source/Kernel/rme_kernel.c ****     {
5906:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5907:../../Source/Kernel/rme_kernel.c **** 
5908:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Reg_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr),
 15100              		.loc 1 5908 28
 15101 0200 10301BE5 		ldr	r3, [fp, #-16]
 15102 0204 443093E5 		ldr	r3, [r3, #68]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 370


 15103              		.loc 1 5908 9
 15104 0208 0201C3E3 		bic	r0, r3, #-2147483648
5909:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15105              		.loc 1 5909 59
 15106 020c 10301BE5 		ldr	r3, [fp, #-16]
 15107 0210 483093E5 		ldr	r3, [r3, #72]
5908:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15108              		.loc 1 5908 9
 15109 0214 00308DE5 		str	r3, [sp]
 15110 0218 08309BE5 		ldr	r3, [fp, #8]
 15111 021c 04209BE5 		ldr	r2, [fp, #4]
 15112 0220 24101BE5 		ldr	r1, [fp, #-36]
 15113 0224 FEFFFFEB 		bl	__RME_Thd_Reg_Init
 15114              	.L973:
5910:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5911:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Cop_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr), 
5912:../../Source/Kernel/rme_kernel.c ****                            &(Thread->Ctx.Reg->Reg),&(Thread->Ctx.Reg->Cop));
5913:../../Source/Kernel/rme_kernel.c **** #endif
5914:../../Source/Kernel/rme_kernel.c ****     }
5915:../../Source/Kernel/rme_kernel.c ****     else
5916:../../Source/Kernel/rme_kernel.c ****     {
5917:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5918:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5919:../../Source/Kernel/rme_kernel.c ****     }
5920:../../Source/Kernel/rme_kernel.c ****     
5921:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5922:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 15115              		.loc 1 5922 5
 15116 0228 0010A0E3 		mov	r1, #0
 15117 022c 1C001BE5 		ldr	r0, [fp, #-28]
 15118 0230 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5923:../../Source/Kernel/rme_kernel.c ****     
5924:../../Source/Kernel/rme_kernel.c ****     /* Check if there is a exception pending and clear it if there is */
5925:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15119              		.loc 1 5925 21
 15120 0234 10301BE5 		ldr	r3, [fp, #-16]
 15121 0238 1C3093E5 		ldr	r3, [r3, #28]
 15122              		.loc 1 5925 7
 15123 023c 030053E3 		cmp	r3, #3
 15124 0240 1100001A 		bne	.L974
5926:../../Source/Kernel/rme_kernel.c ****     {
5927:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5928:../../Source/Kernel/rme_kernel.c ****         
5929:../../Source/Kernel/rme_kernel.c ****         /* Check if the thread still have timeslices. If yes, put it into the runqueue;
5930:../../Source/Kernel/rme_kernel.c ****          * if no, mark it as TIMEOUT and send scheduler notification to its parent. */
5931:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice!=0U)
 15125              		.loc 1 5931 25
 15126 0244 10301BE5 		ldr	r3, [fp, #-16]
 15127 0248 183093E5 		ldr	r3, [r3, #24]
 15128              		.loc 1 5931 11
 15129 024c 000053E3 		cmp	r3, #0
 15130 0250 0500000A 		beq	.L975
5932:../../Source/Kernel/rme_kernel.c ****         {
5933:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5934:../../Source/Kernel/rme_kernel.c ****             
5935:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
5936:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_READY;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 371


 15131              		.loc 1 5936 32
 15132 0254 10301BE5 		ldr	r3, [fp, #-16]
 15133 0258 0020A0E3 		mov	r2, #0
 15134 025c 1C2083E5 		str	r2, [r3, #28]
5937:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread);
 15135              		.loc 1 5937 13
 15136 0260 10001BE5 		ldr	r0, [fp, #-16]
 15137 0264 FEFFFFEB 		bl	_RME_Run_Ins
 15138 0268 040000EA 		b	.L976
 15139              	.L975:
5938:../../Source/Kernel/rme_kernel.c ****         }
5939:../../Source/Kernel/rme_kernel.c ****         else
5940:../../Source/Kernel/rme_kernel.c ****         {
5941:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5942:../../Source/Kernel/rme_kernel.c ****             
5943:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
5944:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_TIMEOUT;
 15140              		.loc 1 5944 32
 15141 026c 10301BE5 		ldr	r3, [fp, #-16]
 15142 0270 0220A0E3 		mov	r2, #2
 15143 0274 1C2083E5 		str	r2, [r3, #28]
5945:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thread);
 15144              		.loc 1 5945 13
 15145 0278 10001BE5 		ldr	r0, [fp, #-16]
 15146 027c FEFFFFEB 		bl	_RME_Run_Notif
 15147              	.L976:
5946:../../Source/Kernel/rme_kernel.c ****         }
5947:../../Source/Kernel/rme_kernel.c ****         
5948:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread because something unblocked */
5949:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 15148              		.loc 1 5949 9
 15149 0280 14101BE5 		ldr	r1, [fp, #-20]
 15150 0284 1C001BE5 		ldr	r0, [fp, #-28]
 15151 0288 FEFFFFEB 		bl	_RME_Kern_High
 15152              	.L974:
5950:../../Source/Kernel/rme_kernel.c ****     }
5951:../../Source/Kernel/rme_kernel.c ****     else
5952:../../Source/Kernel/rme_kernel.c ****     {
5953:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5954:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5955:../../Source/Kernel/rme_kernel.c ****     }
5956:../../Source/Kernel/rme_kernel.c ****     
5957:../../Source/Kernel/rme_kernel.c ****     return 0;
 15153              		.loc 1 5957 12
 15154 028c 0030A0E3 		mov	r3, #0
 15155              	.L963:
5958:../../Source/Kernel/rme_kernel.c **** }
 15156              		.loc 1 5958 1
 15157 0290 0300A0E1 		mov	r0, r3
 15158 0294 04D04BE2 		sub	sp, fp, #4
 15159              		.cfi_def_cfa 13, 8
 15160              		@ sp needed
 15161 0298 0088BDE8 		pop	{fp, pc}
 15162              		.cfi_endproc
 15163              	.LFE60:
 15165              		.section	.text._RME_Thd_Sched_Prio,"ax",%progbits
 15166              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 372


 15167              		.syntax unified
 15168              		.arm
 15170              	_RME_Thd_Sched_Prio:
 15171              	.LFB61:
5959:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Exec_Set ********************************************/
5960:../../Source/Kernel/rme_kernel.c **** 
5961:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Prio ***********************************************
5962:../../Source/Kernel/rme_kernel.c **** Description : Change a thread's priority level. This can only be called from
5963:../../Source/Kernel/rme_kernel.c ****               the core that have the thread bound. To facilitate scheduling,
5964:../../Source/Kernel/rme_kernel.c ****               this system call allows up to 3 thread's priority changes per
5965:../../Source/Kernel/rme_kernel.c ****               call. This system call can cause a potential context switch.
5966:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5967:../../Source/Kernel/rme_kernel.c ****               priority. 
5968:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5969:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5970:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Number - The number of threads to adjust priority.
5971:../../Source/Kernel/rme_kernel.c ****                                  Allowed values are 1, 2 and 3.
5972:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd0 - The capability to the first thread.
5973:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5974:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio0 - The priority level, higher is more critical.
5975:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd1 - The capability to the second thread.
5976:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5977:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio1 - The priority level, higher is more critical.
5978:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd2 - The capability to the third thread.
5979:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5980:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio2 - The priority level, higher is more critical.
5981:../../Source/Kernel/rme_kernel.c **** Output      : None.
5982:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5983:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5984:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Prio(struct RME_Cap_Cpt* Cpt,
5985:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5986:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Number,
5987:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd0,
5988:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio0,
5989:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd1,
5990:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio1,
5991:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd2,
5992:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio2)
5993:../../Source/Kernel/rme_kernel.c **** {
 15172              		.loc 1 5993 1
 15173              		.cfi_startproc
 15174              		@ args = 20, pretend = 0, frame = 80
 15175              		@ frame_needed = 1, uses_anonymous_args = 0
 15176 0000 00482DE9 		push	{fp, lr}
 15177              		.cfi_def_cfa_offset 8
 15178              		.cfi_offset 11, -8
 15179              		.cfi_offset 14, -4
 15180 0004 04B08DE2 		add	fp, sp, #4
 15181              		.cfi_def_cfa 11, 4
 15182 0008 50D04DE2 		sub	sp, sp, #80
 15183 000c 48000BE5 		str	r0, [fp, #-72]
 15184 0010 4C100BE5 		str	r1, [fp, #-76]
 15185 0014 50200BE5 		str	r2, [fp, #-80]
 15186 0018 54300BE5 		str	r3, [fp, #-84]
5994:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
5995:../../Source/Kernel/rme_kernel.c ****     rme_cid_t Cap_Thd[3];
5996:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio[3];
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 373


5997:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op[3];
5998:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread[3];
5999:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6000:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6001:../../Source/Kernel/rme_kernel.c ****     
6002:../../Source/Kernel/rme_kernel.c ****     /* Check parameter validity */
6003:../../Source/Kernel/rme_kernel.c ****     if((Number==0U)||(Number>3U))
 15187              		.loc 1 6003 7
 15188 001c 50301BE5 		ldr	r3, [fp, #-80]
 15189 0020 000053E3 		cmp	r3, #0
 15190 0024 0200000A 		beq	.L978
 15191              		.loc 1 6003 20 discriminator 1
 15192 0028 50301BE5 		ldr	r3, [fp, #-80]
 15193 002c 030053E3 		cmp	r3, #3
 15194 0030 0100009A 		bls	.L979
 15195              	.L978:
6004:../../Source/Kernel/rme_kernel.c ****     {
6005:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6006:../../Source/Kernel/rme_kernel.c **** 
6007:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15196              		.loc 1 6007 16
 15197 0034 CB30E0E3 		mvn	r3, #203
 15198 0038 260100EA 		b	.L999
 15199              	.L979:
6008:../../Source/Kernel/rme_kernel.c ****     }
6009:../../Source/Kernel/rme_kernel.c ****     
6010:../../Source/Kernel/rme_kernel.c ****     /* We'll use arrays in the next */
6011:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[0]=Cap_Thd0;
 15200              		.loc 1 6011 15
 15201 003c 54301BE5 		ldr	r3, [fp, #-84]
 15202 0040 1C300BE5 		str	r3, [fp, #-28]
6012:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[1]=Cap_Thd1;
 15203              		.loc 1 6012 15
 15204 0044 08309BE5 		ldr	r3, [fp, #8]
 15205 0048 18300BE5 		str	r3, [fp, #-24]
6013:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[2]=Cap_Thd2;
 15206              		.loc 1 6013 15
 15207 004c 10309BE5 		ldr	r3, [fp, #16]
 15208 0050 14300BE5 		str	r3, [fp, #-20]
6014:../../Source/Kernel/rme_kernel.c ****     Prio[0]=Prio0;
 15209              		.loc 1 6014 12
 15210 0054 04309BE5 		ldr	r3, [fp, #4]
 15211 0058 28300BE5 		str	r3, [fp, #-40]
6015:../../Source/Kernel/rme_kernel.c ****     Prio[1]=Prio1;
 15212              		.loc 1 6015 12
 15213 005c 0C309BE5 		ldr	r3, [fp, #12]
 15214 0060 24300BE5 		str	r3, [fp, #-36]
6016:../../Source/Kernel/rme_kernel.c ****     Prio[2]=Prio2;
 15215              		.loc 1 6016 12
 15216 0064 14309BE5 		ldr	r3, [fp, #20]
 15217 0068 20300BE5 		str	r3, [fp, #-32]
6017:../../Source/Kernel/rme_kernel.c **** 
6018:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15218              		.loc 1 6018 10
 15219 006c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15220 0070 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15221 0074 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 374


6019:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15222              		.loc 1 6019 14
 15223 0078 0030A0E3 		mov	r3, #0
 15224 007c 08300BE5 		str	r3, [fp, #-8]
 15225              		.loc 1 6019 5
 15226 0080 D20000EA 		b	.L981
 15227              	.L994:
6020:../../Source/Kernel/rme_kernel.c ****     {
6021:../../Source/Kernel/rme_kernel.c ****         /* Get the capability slot */
6022:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd[Count],RME_CAP_TYPE_THD,
 15228              		.loc 1 6022 9
 15229 0084 08301BE5 		ldr	r3, [fp, #-8]
 15230 0088 0331A0E1 		lsl	r3, r3, #2
 15231 008c 043043E2 		sub	r3, r3, #4
 15232 0090 0B3083E0 		add	r3, r3, fp
 15233 0094 183013E5 		ldr	r3, [r3, #-24]
 15234 0098 803003E2 		and	r3, r3, #128
 15235 009c 000053E3 		cmp	r3, #0
 15236 00a0 2E00001A 		bne	.L982
 15237              		.loc 1 6022 9 is_stmt 0 discriminator 1
 15238 00a4 08301BE5 		ldr	r3, [fp, #-8]
 15239 00a8 0331A0E1 		lsl	r3, r3, #2
 15240 00ac 043043E2 		sub	r3, r3, #4
 15241 00b0 0B3083E0 		add	r3, r3, fp
 15242 00b4 183013E5 		ldr	r3, [r3, #-24]
 15243 00b8 0320A0E1 		mov	r2, r3
 15244 00bc 48301BE5 		ldr	r3, [fp, #-72]
 15245 00c0 143093E5 		ldr	r3, [r3, #20]
 15246 00c4 030052E1 		cmp	r2, r3
 15247 00c8 0100003A 		bcc	.L983
 15248              		.loc 1 6022 9 discriminator 3
 15249 00cc 0230E0E3 		mvn	r3, #2
 15250              		.loc 1 6022 9
 15251 00d0 000100EA 		b	.L999
 15252              	.L983:
 15253              		.loc 1 6022 9 discriminator 4
 15254 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15255 00d8 0331A0E1 		lsl	r3, r3, #2
 15256 00dc 043043E2 		sub	r3, r3, #4
 15257 00e0 0B3083E0 		add	r3, r3, fp
 15258 00e4 183013E5 		ldr	r3, [r3, #-24]
 15259 00e8 8322A0E1 		lsl	r2, r3, #5
 15260 00ec 48301BE5 		ldr	r3, [fp, #-72]
 15261 00f0 0C3093E5 		ldr	r3, [r3, #12]
 15262 00f4 033082E0 		add	r3, r2, r3
 15263 00f8 0320A0E1 		mov	r2, r3
 15264 00fc 08301BE5 		ldr	r3, [fp, #-8]
 15265 0100 0331A0E1 		lsl	r3, r3, #2
 15266 0104 043043E2 		sub	r3, r3, #4
 15267 0108 0B3083E0 		add	r3, r3, fp
 15268 010c 302003E5 		str	r2, [r3, #-48]
 15269 0110 08301BE5 		ldr	r3, [fp, #-8]
 15270 0114 0331A0E1 		lsl	r3, r3, #2
 15271 0118 043043E2 		sub	r3, r3, #4
 15272 011c 0B3083E0 		add	r3, r3, fp
 15273 0120 303013E5 		ldr	r3, [r3, #-48]
 15274 0124 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 375


 15275 0128 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15276 012c 10000BE5 		str	r0, [fp, #-16]
 15277              		.loc 1 6022 9 discriminator 1
 15278 0130 10301BE5 		ldr	r3, [fp, #-16]
 15279 0134 FF3803E2 		and	r3, r3, #16711680
 15280 0138 020853E3 		cmp	r3, #131072
 15281 013c 0100001A 		bne	.L984
 15282              		.loc 1 6022 9 discriminator 5
 15283 0140 0830E0E3 		mvn	r3, #8
 15284              		.loc 1 6022 9
 15285 0144 E30000EA 		b	.L999
 15286              	.L984:
 15287              		.loc 1 6022 9 discriminator 6
 15288 0148 10301BE5 		ldr	r3, [fp, #-16]
 15289 014c 233CA0E1 		lsr	r3, r3, #24
 15290 0150 060053E3 		cmp	r3, #6
 15291 0154 6900000A 		beq	.L985
 15292              		.loc 1 6022 9 discriminator 7
 15293 0158 0130E0E3 		mvn	r3, #1
 15294              		.loc 1 6022 9
 15295 015c DD0000EA 		b	.L999
 15296              	.L982:
 15297              		.loc 1 6022 9 discriminator 2
 15298 0160 08301BE5 		ldr	r3, [fp, #-8]
 15299 0164 0331A0E1 		lsl	r3, r3, #2
 15300 0168 043043E2 		sub	r3, r3, #4
 15301 016c 0B3083E0 		add	r3, r3, fp
 15302 0170 183013E5 		ldr	r3, [r3, #-24]
 15303 0174 2324A0E1 		lsr	r2, r3, #8
 15304 0178 48301BE5 		ldr	r3, [fp, #-72]
 15305 017c 143093E5 		ldr	r3, [r3, #20]
 15306 0180 030052E1 		cmp	r2, r3
 15307 0184 0100003A 		bcc	.L986
 15308              		.loc 1 6022 9 discriminator 8
 15309 0188 0230E0E3 		mvn	r3, #2
 15310              		.loc 1 6022 9
 15311 018c D10000EA 		b	.L999
 15312              	.L986:
 15313              		.loc 1 6022 9 discriminator 9
 15314 0190 08301BE5 		ldr	r3, [fp, #-8]
 15315 0194 0331A0E1 		lsl	r3, r3, #2
 15316 0198 043043E2 		sub	r3, r3, #4
 15317 019c 0B3083E0 		add	r3, r3, fp
 15318 01a0 183013E5 		ldr	r3, [r3, #-24]
 15319 01a4 2334A0E1 		lsr	r3, r3, #8
 15320 01a8 8322A0E1 		lsl	r2, r3, #5
 15321 01ac 48301BE5 		ldr	r3, [fp, #-72]
 15322 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15323 01b4 033082E0 		add	r3, r2, r3
 15324 01b8 0320A0E1 		mov	r2, r3
 15325 01bc 08301BE5 		ldr	r3, [fp, #-8]
 15326 01c0 0331A0E1 		lsl	r3, r3, #2
 15327 01c4 043043E2 		sub	r3, r3, #4
 15328 01c8 0B3083E0 		add	r3, r3, fp
 15329 01cc 302003E5 		str	r2, [r3, #-48]
 15330 01d0 08301BE5 		ldr	r3, [fp, #-8]
 15331 01d4 0331A0E1 		lsl	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 376


 15332 01d8 043043E2 		sub	r3, r3, #4
 15333 01dc 0B3083E0 		add	r3, r3, fp
 15334 01e0 303013E5 		ldr	r3, [r3, #-48]
 15335 01e4 0300A0E1 		mov	r0, r3
 15336 01e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15337 01ec 10000BE5 		str	r0, [fp, #-16]
 15338              		.loc 1 6022 9 discriminator 1
 15339 01f0 10301BE5 		ldr	r3, [fp, #-16]
 15340 01f4 FF3803E2 		and	r3, r3, #16711680
 15341 01f8 020853E3 		cmp	r3, #131072
 15342 01fc 0100001A 		bne	.L987
 15343              		.loc 1 6022 9 discriminator 10
 15344 0200 0830E0E3 		mvn	r3, #8
 15345              		.loc 1 6022 9
 15346 0204 B30000EA 		b	.L999
 15347              	.L987:
 15348              		.loc 1 6022 9 discriminator 11
 15349 0208 10301BE5 		ldr	r3, [fp, #-16]
 15350 020c 233CA0E1 		lsr	r3, r3, #24
 15351 0210 030053E3 		cmp	r3, #3
 15352 0214 0100000A 		beq	.L988
 15353              		.loc 1 6022 9 discriminator 12
 15354 0218 0130E0E3 		mvn	r3, #1
 15355              		.loc 1 6022 9
 15356 021c AD0000EA 		b	.L999
 15357              	.L988:
 15358              		.loc 1 6022 9 discriminator 13
 15359 0220 08301BE5 		ldr	r3, [fp, #-8]
 15360 0224 0331A0E1 		lsl	r3, r3, #2
 15361 0228 043043E2 		sub	r3, r3, #4
 15362 022c 0B3083E0 		add	r3, r3, fp
 15363 0230 183013E5 		ldr	r3, [r3, #-24]
 15364 0234 7F2003E2 		and	r2, r3, #127
 15365 0238 08301BE5 		ldr	r3, [fp, #-8]
 15366 023c 0331A0E1 		lsl	r3, r3, #2
 15367 0240 043043E2 		sub	r3, r3, #4
 15368 0244 0B3083E0 		add	r3, r3, fp
 15369 0248 303013E5 		ldr	r3, [r3, #-48]
 15370 024c 143093E5 		ldr	r3, [r3, #20]
 15371 0250 030052E1 		cmp	r2, r3
 15372 0254 0100003A 		bcc	.L989
 15373              		.loc 1 6022 9 discriminator 14
 15374 0258 0230E0E3 		mvn	r3, #2
 15375              		.loc 1 6022 9
 15376 025c 9D0000EA 		b	.L999
 15377              	.L989:
 15378              		.loc 1 6022 9 discriminator 15
 15379 0260 08301BE5 		ldr	r3, [fp, #-8]
 15380 0264 0331A0E1 		lsl	r3, r3, #2
 15381 0268 043043E2 		sub	r3, r3, #4
 15382 026c 0B3083E0 		add	r3, r3, fp
 15383 0270 183013E5 		ldr	r3, [r3, #-24]
 15384 0274 7F3003E2 		and	r3, r3, #127
 15385 0278 8322A0E1 		lsl	r2, r3, #5
 15386 027c 08301BE5 		ldr	r3, [fp, #-8]
 15387 0280 0331A0E1 		lsl	r3, r3, #2
 15388 0284 043043E2 		sub	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 377


 15389 0288 0B3083E0 		add	r3, r3, fp
 15390 028c 303013E5 		ldr	r3, [r3, #-48]
 15391 0290 0C3093E5 		ldr	r3, [r3, #12]
 15392 0294 033082E0 		add	r3, r2, r3
 15393 0298 0320A0E1 		mov	r2, r3
 15394 029c 08301BE5 		ldr	r3, [fp, #-8]
 15395 02a0 0331A0E1 		lsl	r3, r3, #2
 15396 02a4 043043E2 		sub	r3, r3, #4
 15397 02a8 0B3083E0 		add	r3, r3, fp
 15398 02ac 302003E5 		str	r2, [r3, #-48]
 15399 02b0 08301BE5 		ldr	r3, [fp, #-8]
 15400 02b4 0331A0E1 		lsl	r3, r3, #2
 15401 02b8 043043E2 		sub	r3, r3, #4
 15402 02bc 0B3083E0 		add	r3, r3, fp
 15403 02c0 303013E5 		ldr	r3, [r3, #-48]
 15404 02c4 0300A0E1 		mov	r0, r3
 15405 02c8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15406 02cc 10000BE5 		str	r0, [fp, #-16]
 15407              		.loc 1 6022 9 discriminator 1
 15408 02d0 10301BE5 		ldr	r3, [fp, #-16]
 15409 02d4 FF3803E2 		and	r3, r3, #16711680
 15410 02d8 020853E3 		cmp	r3, #131072
 15411 02dc 0100001A 		bne	.L990
 15412              		.loc 1 6022 9 discriminator 16
 15413 02e0 0830E0E3 		mvn	r3, #8
 15414              		.loc 1 6022 9
 15415 02e4 7B0000EA 		b	.L999
 15416              	.L990:
 15417              		.loc 1 6022 9 discriminator 17
 15418 02e8 10301BE5 		ldr	r3, [fp, #-16]
 15419 02ec 233CA0E1 		lsr	r3, r3, #24
 15420 02f0 060053E3 		cmp	r3, #6
 15421 02f4 0100000A 		beq	.L985
 15422              		.loc 1 6022 9 discriminator 18
 15423 02f8 0130E0E3 		mvn	r3, #1
 15424              		.loc 1 6022 9
 15425 02fc 750000EA 		b	.L999
 15426              	.L985:
6023:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Op[Count],Type_Stat);
6024:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6025:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Op[Count],RME_THD_FLAG_SCHED_PRIO);
 15427              		.loc 1 6025 9 is_stmt 1
 15428 0300 08301BE5 		ldr	r3, [fp, #-8]
 15429 0304 0331A0E1 		lsl	r3, r3, #2
 15430 0308 043043E2 		sub	r3, r3, #4
 15431 030c 0B3083E0 		add	r3, r3, fp
 15432 0310 303013E5 		ldr	r3, [r3, #-48]
 15433 0314 083093E5 		ldr	r3, [r3, #8]
 15434 0318 083003E2 		and	r3, r3, #8
 15435 031c 000053E3 		cmp	r3, #0
 15436 0320 0100001A 		bne	.L991
 15437              		.loc 1 6025 9 is_stmt 0 discriminator 1
 15438 0324 0630E0E3 		mvn	r3, #6
 15439              		.loc 1 6025 9
 15440 0328 6A0000EA 		b	.L999
 15441              	.L991:
6026:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 378


6027:../../Source/Kernel/rme_kernel.c ****         /* See if the target thread is already bound to this core. If no, we just quit */
6028:../../Source/Kernel/rme_kernel.c ****         Thread[Count]=(struct RME_Thd_Struct*)(Thd_Op[Count]->Head.Object);
 15442              		.loc 1 6028 54 is_stmt 1
 15443 032c 08301BE5 		ldr	r3, [fp, #-8]
 15444 0330 0331A0E1 		lsl	r3, r3, #2
 15445 0334 043043E2 		sub	r3, r3, #4
 15446 0338 0B3083E0 		add	r3, r3, fp
 15447 033c 303013E5 		ldr	r3, [r3, #-48]
 15448              		.loc 1 6028 67
 15449 0340 0C3093E5 		ldr	r3, [r3, #12]
 15450              		.loc 1 6028 23
 15451 0344 0320A0E1 		mov	r2, r3
 15452              		.loc 1 6028 22
 15453 0348 08301BE5 		ldr	r3, [fp, #-8]
 15454 034c 0331A0E1 		lsl	r3, r3, #2
 15455 0350 043043E2 		sub	r3, r3, #4
 15456 0354 0B3083E0 		add	r3, r3, fp
 15457 0358 3C2003E5 		str	r2, [r3, #-60]
6029:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Local!=Local)
 15458              		.loc 1 6029 18
 15459 035c 08301BE5 		ldr	r3, [fp, #-8]
 15460 0360 0331A0E1 		lsl	r3, r3, #2
 15461 0364 043043E2 		sub	r3, r3, #4
 15462 0368 0B3083E0 		add	r3, r3, fp
 15463 036c 3C3013E5 		ldr	r3, [r3, #-60]
 15464              		.loc 1 6029 32
 15465 0370 143093E5 		ldr	r3, [r3, #20]
 15466              		.loc 1 6029 11
 15467 0374 0C201BE5 		ldr	r2, [fp, #-12]
 15468 0378 030052E1 		cmp	r2, r3
 15469 037c 0100000A 		beq	.L992
6030:../../Source/Kernel/rme_kernel.c ****         {
6031:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6032:../../Source/Kernel/rme_kernel.c **** 
6033:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 15470              		.loc 1 6033 20
 15471 0380 CB30E0E3 		mvn	r3, #203
 15472 0384 530000EA 		b	.L999
 15473              	.L992:
6034:../../Source/Kernel/rme_kernel.c ****         }
6035:../../Source/Kernel/rme_kernel.c ****         else
6036:../../Source/Kernel/rme_kernel.c ****         {
6037:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6038:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6039:../../Source/Kernel/rme_kernel.c ****         }
6040:../../Source/Kernel/rme_kernel.c ****         
6041:../../Source/Kernel/rme_kernel.c ****         /* See if the priority relationship is correct */
6042:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Prio_Max<Prio[Count])
 15474              		.loc 1 6042 18
 15475 0388 08301BE5 		ldr	r3, [fp, #-8]
 15476 038c 0331A0E1 		lsl	r3, r3, #2
 15477 0390 043043E2 		sub	r3, r3, #4
 15478 0394 0B3083E0 		add	r3, r3, fp
 15479 0398 3C3013E5 		ldr	r3, [r3, #-60]
 15480              		.loc 1 6042 32
 15481 039c 242093E5 		ldr	r2, [r3, #36]
 15482              		.loc 1 6042 46
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 379


 15483 03a0 08301BE5 		ldr	r3, [fp, #-8]
 15484 03a4 0331A0E1 		lsl	r3, r3, #2
 15485 03a8 043043E2 		sub	r3, r3, #4
 15486 03ac 0B3083E0 		add	r3, r3, fp
 15487 03b0 243013E5 		ldr	r3, [r3, #-36]
 15488              		.loc 1 6042 11
 15489 03b4 030052E1 		cmp	r2, r3
 15490 03b8 0100002A 		bcs	.L993
6043:../../Source/Kernel/rme_kernel.c ****         {
6044:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6045:../../Source/Kernel/rme_kernel.c **** 
6046:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 15491              		.loc 1 6046 20
 15492 03bc CC30E0E3 		mvn	r3, #204
 15493 03c0 440000EA 		b	.L999
 15494              	.L993:
6019:../../Source/Kernel/rme_kernel.c ****     {
 15495              		.loc 1 6019 36 discriminator 2
 15496 03c4 08301BE5 		ldr	r3, [fp, #-8]
 15497 03c8 013083E2 		add	r3, r3, #1
 15498 03cc 08300BE5 		str	r3, [fp, #-8]
 15499              	.L981:
6019:../../Source/Kernel/rme_kernel.c ****     {
 15500              		.loc 1 6019 23 discriminator 1
 15501 03d0 08201BE5 		ldr	r2, [fp, #-8]
 15502 03d4 50301BE5 		ldr	r3, [fp, #-80]
 15503 03d8 030052E1 		cmp	r2, r3
 15504 03dc 28FFFF3A 		bcc	.L994
6047:../../Source/Kernel/rme_kernel.c ****         }
6048:../../Source/Kernel/rme_kernel.c ****         else
6049:../../Source/Kernel/rme_kernel.c ****         {
6050:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6051:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6052:../../Source/Kernel/rme_kernel.c ****         }
6053:../../Source/Kernel/rme_kernel.c ****     }
6054:../../Source/Kernel/rme_kernel.c ****     
6055:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6056:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 15505              		.loc 1 6056 5
 15506 03e0 0010A0E3 		mov	r1, #0
 15507 03e4 4C001BE5 		ldr	r0, [fp, #-76]
 15508 03e8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6057:../../Source/Kernel/rme_kernel.c ****     
6058:../../Source/Kernel/rme_kernel.c ****     /* Change priority for each thread, and we'll switch to the real highest priority
6059:../../Source/Kernel/rme_kernel.c ****      * thread after all these changes. This can help remove the excessive overhead. */
6060:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15509              		.loc 1 6060 14
 15510 03ec 0030A0E3 		mov	r3, #0
 15511 03f0 08300BE5 		str	r3, [fp, #-8]
 15512              		.loc 1 6060 5
 15513 03f4 2F0000EA 		b	.L995
 15514              	.L998:
6061:../../Source/Kernel/rme_kernel.c ****     {
6062:../../Source/Kernel/rme_kernel.c ****         /* See if this thread is currently in the runqueue */
6063:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.State==RME_THD_READY)
 15515              		.loc 1 6063 18
 15516 03f8 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 380


 15517 03fc 0331A0E1 		lsl	r3, r3, #2
 15518 0400 043043E2 		sub	r3, r3, #4
 15519 0404 0B3083E0 		add	r3, r3, fp
 15520 0408 3C3013E5 		ldr	r3, [r3, #-60]
 15521              		.loc 1 6063 32
 15522 040c 1C3093E5 		ldr	r3, [r3, #28]
 15523              		.loc 1 6063 11
 15524 0410 000053E3 		cmp	r3, #0
 15525 0414 1900001A 		bne	.L996
6064:../../Source/Kernel/rme_kernel.c ****         {
6065:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6066:../../Source/Kernel/rme_kernel.c **** 
6067:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue, change priority, and add it back */
6068:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thread[Count]);
 15526              		.loc 1 6068 13
 15527 0418 08301BE5 		ldr	r3, [fp, #-8]
 15528 041c 0331A0E1 		lsl	r3, r3, #2
 15529 0420 043043E2 		sub	r3, r3, #4
 15530 0424 0B3083E0 		add	r3, r3, fp
 15531 0428 3C3013E5 		ldr	r3, [r3, #-60]
 15532 042c 0300A0E1 		mov	r0, r3
 15533 0430 FEFFFFEB 		bl	_RME_Run_Del
6069:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15534              		.loc 1 6069 19
 15535 0434 08301BE5 		ldr	r3, [fp, #-8]
 15536 0438 0331A0E1 		lsl	r3, r3, #2
 15537 043c 043043E2 		sub	r3, r3, #4
 15538 0440 0B3083E0 		add	r3, r3, fp
 15539 0444 3C2013E5 		ldr	r2, [r3, #-60]
 15540              		.loc 1 6069 43
 15541 0448 08301BE5 		ldr	r3, [fp, #-8]
 15542 044c 0331A0E1 		lsl	r3, r3, #2
 15543 0450 043043E2 		sub	r3, r3, #4
 15544 0454 0B3083E0 		add	r3, r3, fp
 15545 0458 243013E5 		ldr	r3, [r3, #-36]
 15546              		.loc 1 6069 38
 15547 045c 203082E5 		str	r3, [r2, #32]
6070:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread[Count]);
 15548              		.loc 1 6070 13
 15549 0460 08301BE5 		ldr	r3, [fp, #-8]
 15550 0464 0331A0E1 		lsl	r3, r3, #2
 15551 0468 043043E2 		sub	r3, r3, #4
 15552 046c 0B3083E0 		add	r3, r3, fp
 15553 0470 3C3013E5 		ldr	r3, [r3, #-60]
 15554 0474 0300A0E1 		mov	r0, r3
 15555 0478 FEFFFFEB 		bl	_RME_Run_Ins
 15556 047c 0A0000EA 		b	.L997
 15557              	.L996:
6071:../../Source/Kernel/rme_kernel.c ****         }
6072:../../Source/Kernel/rme_kernel.c ****         /* If it is BLOCKED, TIMEOUT or EXCPEND, changing the number will suffice */
6073:../../Source/Kernel/rme_kernel.c ****         else
6074:../../Source/Kernel/rme_kernel.c ****         {
6075:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6076:../../Source/Kernel/rme_kernel.c **** 
6077:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15558              		.loc 1 6077 19
 15559 0480 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 381


 15560 0484 0331A0E1 		lsl	r3, r3, #2
 15561 0488 043043E2 		sub	r3, r3, #4
 15562 048c 0B3083E0 		add	r3, r3, fp
 15563 0490 3C2013E5 		ldr	r2, [r3, #-60]
 15564              		.loc 1 6077 43
 15565 0494 08301BE5 		ldr	r3, [fp, #-8]
 15566 0498 0331A0E1 		lsl	r3, r3, #2
 15567 049c 043043E2 		sub	r3, r3, #4
 15568 04a0 0B3083E0 		add	r3, r3, fp
 15569 04a4 243013E5 		ldr	r3, [r3, #-36]
 15570              		.loc 1 6077 38
 15571 04a8 203082E5 		str	r3, [r2, #32]
 15572              	.L997:
6060:../../Source/Kernel/rme_kernel.c ****     {
 15573              		.loc 1 6060 36 discriminator 2
 15574 04ac 08301BE5 		ldr	r3, [fp, #-8]
 15575 04b0 013083E2 		add	r3, r3, #1
 15576 04b4 08300BE5 		str	r3, [fp, #-8]
 15577              	.L995:
6060:../../Source/Kernel/rme_kernel.c ****     {
 15578              		.loc 1 6060 23 discriminator 1
 15579 04b8 08201BE5 		ldr	r2, [fp, #-8]
 15580 04bc 50301BE5 		ldr	r3, [fp, #-80]
 15581 04c0 030052E1 		cmp	r2, r3
 15582 04c4 CBFFFF3A 		bcc	.L998
6078:../../Source/Kernel/rme_kernel.c ****         }
6079:../../Source/Kernel/rme_kernel.c ****     }
6080:../../Source/Kernel/rme_kernel.c ****     
6081:../../Source/Kernel/rme_kernel.c ****     /* Pick the current highest priority thread to run */
6082:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 15583              		.loc 1 6082 5
 15584 04c8 0C101BE5 		ldr	r1, [fp, #-12]
 15585 04cc 4C001BE5 		ldr	r0, [fp, #-76]
 15586 04d0 FEFFFFEB 		bl	_RME_Kern_High
6083:../../Source/Kernel/rme_kernel.c **** 
6084:../../Source/Kernel/rme_kernel.c ****     return 0;
 15587              		.loc 1 6084 12
 15588 04d4 0030A0E3 		mov	r3, #0
 15589              	.L999:
6085:../../Source/Kernel/rme_kernel.c **** }
 15590              		.loc 1 6085 1
 15591 04d8 0300A0E1 		mov	r0, r3
 15592 04dc 04D04BE2 		sub	sp, fp, #4
 15593              		.cfi_def_cfa 13, 8
 15594              		@ sp needed
 15595 04e0 0088BDE8 		pop	{fp, pc}
 15596              		.cfi_endproc
 15597              	.LFE61:
 15599              		.section	.text._RME_Thd_Sched_Rcv,"ax",%progbits
 15600              		.align	2
 15601              		.syntax unified
 15602              		.arm
 15604              	_RME_Thd_Sched_Rcv:
 15605              	.LFB62:
6086:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Prio ******************************************/
6087:../../Source/Kernel/rme_kernel.c **** 
6088:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Rcv ************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 382


6089:../../Source/Kernel/rme_kernel.c **** Description : Try to receive a notification from the scheduler queue. This
6090:../../Source/Kernel/rme_kernel.c ****               can only be called from the same core the thread is on.
6091:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6092:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the scheduler thread. We
6093:../../Source/Kernel/rme_kernel.c ****                                   are going to get timeout or exception
6094:../../Source/Kernel/rme_kernel.c ****                                   notifications for the threads that it is
6095:../../Source/Kernel/rme_kernel.c ****                                   responsible for scheduling. This capability
6096:../../Source/Kernel/rme_kernel.c ****                                   must point to a thread on the same core.
6097:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6098:../../Source/Kernel/rme_kernel.c **** Output      : None.
6099:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the thread ID; or an error code.
6100:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6101:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Rcv(struct RME_Cap_Cpt* Cpt,
6102:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd)
6103:../../Source/Kernel/rme_kernel.c **** {
 15606              		.loc 1 6103 1
 15607              		.cfi_startproc
 15608              		@ args = 0, pretend = 0, frame = 32
 15609              		@ frame_needed = 1, uses_anonymous_args = 0
 15610 0000 00482DE9 		push	{fp, lr}
 15611              		.cfi_def_cfa_offset 8
 15612              		.cfi_offset 11, -8
 15613              		.cfi_offset 14, -4
 15614 0004 04B08DE2 		add	fp, sp, #4
 15615              		.cfi_def_cfa 11, 4
 15616 0008 20D04DE2 		sub	sp, sp, #32
 15617 000c 20000BE5 		str	r0, [fp, #-32]
 15618 0010 24100BE5 		str	r1, [fp, #-36]
6104:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
6105:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
6106:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
6107:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6108:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag;
6109:../../Source/Kernel/rme_kernel.c ****     
6110:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6111:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15619              		.loc 1 6111 5
 15620 0014 24301BE5 		ldr	r3, [fp, #-36]
 15621 0018 803003E2 		and	r3, r3, #128
 15622 001c 000053E3 		cmp	r3, #0
 15623 0020 1C00001A 		bne	.L1001
 15624              		.loc 1 6111 5 is_stmt 0 discriminator 1
 15625 0024 20301BE5 		ldr	r3, [fp, #-32]
 15626 0028 142093E5 		ldr	r2, [r3, #20]
 15627 002c 24301BE5 		ldr	r3, [fp, #-36]
 15628 0030 030052E1 		cmp	r2, r3
 15629 0034 0100008A 		bhi	.L1002
 15630              		.loc 1 6111 5 discriminator 3
 15631 0038 0230E0E3 		mvn	r3, #2
 15632              		.loc 1 6111 5
 15633 003c 970000EA 		b	.L1003
 15634              	.L1002:
 15635              		.loc 1 6111 5 discriminator 4
 15636 0040 24301BE5 		ldr	r3, [fp, #-36]
 15637 0044 8322A0E1 		lsl	r2, r3, #5
 15638 0048 20301BE5 		ldr	r3, [fp, #-32]
 15639 004c 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 383


 15640 0050 033082E0 		add	r3, r2, r3
 15641 0054 08300BE5 		str	r3, [fp, #-8]
 15642 0058 08301BE5 		ldr	r3, [fp, #-8]
 15643 005c 0300A0E1 		mov	r0, r3
 15644 0060 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15645 0064 10000BE5 		str	r0, [fp, #-16]
 15646              		.loc 1 6111 5 discriminator 1
 15647 0068 10301BE5 		ldr	r3, [fp, #-16]
 15648 006c FF3803E2 		and	r3, r3, #16711680
 15649 0070 020853E3 		cmp	r3, #131072
 15650 0074 0100001A 		bne	.L1004
 15651              		.loc 1 6111 5 discriminator 5
 15652 0078 0830E0E3 		mvn	r3, #8
 15653              		.loc 1 6111 5
 15654 007c 870000EA 		b	.L1003
 15655              	.L1004:
 15656              		.loc 1 6111 5 discriminator 6
 15657 0080 10301BE5 		ldr	r3, [fp, #-16]
 15658 0084 233CA0E1 		lsr	r3, r3, #24
 15659 0088 060053E3 		cmp	r3, #6
 15660 008c 3F00000A 		beq	.L1005
 15661              		.loc 1 6111 5 discriminator 7
 15662 0090 0130E0E3 		mvn	r3, #1
 15663              		.loc 1 6111 5
 15664 0094 810000EA 		b	.L1003
 15665              	.L1001:
 15666              		.loc 1 6111 5 discriminator 2
 15667 0098 24301BE5 		ldr	r3, [fp, #-36]
 15668 009c 2324A0E1 		lsr	r2, r3, #8
 15669 00a0 20301BE5 		ldr	r3, [fp, #-32]
 15670 00a4 143093E5 		ldr	r3, [r3, #20]
 15671 00a8 030052E1 		cmp	r2, r3
 15672 00ac 0100003A 		bcc	.L1006
 15673              		.loc 1 6111 5 discriminator 8
 15674 00b0 0230E0E3 		mvn	r3, #2
 15675              		.loc 1 6111 5
 15676 00b4 790000EA 		b	.L1003
 15677              	.L1006:
 15678              		.loc 1 6111 5 discriminator 9
 15679 00b8 24301BE5 		ldr	r3, [fp, #-36]
 15680 00bc 2334A0E1 		lsr	r3, r3, #8
 15681 00c0 8322A0E1 		lsl	r2, r3, #5
 15682 00c4 20301BE5 		ldr	r3, [fp, #-32]
 15683 00c8 0C3093E5 		ldr	r3, [r3, #12]
 15684 00cc 033082E0 		add	r3, r2, r3
 15685 00d0 08300BE5 		str	r3, [fp, #-8]
 15686 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15687 00d8 0300A0E1 		mov	r0, r3
 15688 00dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15689 00e0 10000BE5 		str	r0, [fp, #-16]
 15690              		.loc 1 6111 5 discriminator 1
 15691 00e4 10301BE5 		ldr	r3, [fp, #-16]
 15692 00e8 FF3803E2 		and	r3, r3, #16711680
 15693 00ec 020853E3 		cmp	r3, #131072
 15694 00f0 0100001A 		bne	.L1007
 15695              		.loc 1 6111 5 discriminator 10
 15696 00f4 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 384


 15697              		.loc 1 6111 5
 15698 00f8 680000EA 		b	.L1003
 15699              	.L1007:
 15700              		.loc 1 6111 5 discriminator 11
 15701 00fc 10301BE5 		ldr	r3, [fp, #-16]
 15702 0100 233CA0E1 		lsr	r3, r3, #24
 15703 0104 030053E3 		cmp	r3, #3
 15704 0108 0100000A 		beq	.L1008
 15705              		.loc 1 6111 5 discriminator 12
 15706 010c 0130E0E3 		mvn	r3, #1
 15707              		.loc 1 6111 5
 15708 0110 620000EA 		b	.L1003
 15709              	.L1008:
 15710              		.loc 1 6111 5 discriminator 13
 15711 0114 24301BE5 		ldr	r3, [fp, #-36]
 15712 0118 7F2003E2 		and	r2, r3, #127
 15713 011c 08301BE5 		ldr	r3, [fp, #-8]
 15714 0120 143093E5 		ldr	r3, [r3, #20]
 15715 0124 030052E1 		cmp	r2, r3
 15716 0128 0100003A 		bcc	.L1009
 15717              		.loc 1 6111 5 discriminator 14
 15718 012c 0230E0E3 		mvn	r3, #2
 15719              		.loc 1 6111 5
 15720 0130 5A0000EA 		b	.L1003
 15721              	.L1009:
 15722              		.loc 1 6111 5 discriminator 15
 15723 0134 24301BE5 		ldr	r3, [fp, #-36]
 15724 0138 7F3003E2 		and	r3, r3, #127
 15725 013c 8322A0E1 		lsl	r2, r3, #5
 15726 0140 08301BE5 		ldr	r3, [fp, #-8]
 15727 0144 0C3093E5 		ldr	r3, [r3, #12]
 15728 0148 033082E0 		add	r3, r2, r3
 15729 014c 08300BE5 		str	r3, [fp, #-8]
 15730 0150 08301BE5 		ldr	r3, [fp, #-8]
 15731 0154 0300A0E1 		mov	r0, r3
 15732 0158 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15733 015c 10000BE5 		str	r0, [fp, #-16]
 15734              		.loc 1 6111 5 discriminator 1
 15735 0160 10301BE5 		ldr	r3, [fp, #-16]
 15736 0164 FF3803E2 		and	r3, r3, #16711680
 15737 0168 020853E3 		cmp	r3, #131072
 15738 016c 0100001A 		bne	.L1010
 15739              		.loc 1 6111 5 discriminator 16
 15740 0170 0830E0E3 		mvn	r3, #8
 15741              		.loc 1 6111 5
 15742 0174 490000EA 		b	.L1003
 15743              	.L1010:
 15744              		.loc 1 6111 5 discriminator 17
 15745 0178 10301BE5 		ldr	r3, [fp, #-16]
 15746 017c 233CA0E1 		lsr	r3, r3, #24
 15747 0180 060053E3 		cmp	r3, #6
 15748 0184 0100000A 		beq	.L1005
 15749              		.loc 1 6111 5 discriminator 18
 15750 0188 0130E0E3 		mvn	r3, #1
 15751              		.loc 1 6111 5
 15752 018c 430000EA 		b	.L1003
 15753              	.L1005:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 385


6112:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
6113:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6114:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_RCV);
 15754              		.loc 1 6114 5 is_stmt 1
 15755 0190 08301BE5 		ldr	r3, [fp, #-8]
 15756 0194 083093E5 		ldr	r3, [r3, #8]
 15757 0198 203003E2 		and	r3, r3, #32
 15758 019c 000053E3 		cmp	r3, #0
 15759 01a0 0100001A 		bne	.L1011
 15760              		.loc 1 6114 5 is_stmt 0 discriminator 1
 15761 01a4 0630E0E3 		mvn	r3, #6
 15762              		.loc 1 6114 5
 15763 01a8 3C0000EA 		b	.L1003
 15764              	.L1011:
6115:../../Source/Kernel/rme_kernel.c ****     
6116:../../Source/Kernel/rme_kernel.c ****     /* Check if we are on the same core with the target thread */
6117:../../Source/Kernel/rme_kernel.c ****     Scheduler=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 15765              		.loc 1 6117 51 is_stmt 1
 15766 01ac 08301BE5 		ldr	r3, [fp, #-8]
 15767 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15768              		.loc 1 6117 14
 15769 01b4 14300BE5 		str	r3, [fp, #-20]
6118:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=RME_CPU_LOCAL())
 15770              		.loc 1 6118 24
 15771 01b8 14301BE5 		ldr	r3, [fp, #-20]
 15772 01bc 142093E5 		ldr	r2, [r3, #20]
 15773              		.loc 1 6118 7
 15774 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15775 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15776 01c8 030052E1 		cmp	r2, r3
 15777 01cc 0100000A 		beq	.L1012
6119:../../Source/Kernel/rme_kernel.c ****     {
6120:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6121:../../Source/Kernel/rme_kernel.c **** 
6122:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15778              		.loc 1 6122 16
 15779 01d0 CB30E0E3 		mvn	r3, #203
 15780 01d4 310000EA 		b	.L1003
 15781              	.L1012:
6123:../../Source/Kernel/rme_kernel.c ****     }
6124:../../Source/Kernel/rme_kernel.c ****     else
6125:../../Source/Kernel/rme_kernel.c ****     {
6126:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6127:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6128:../../Source/Kernel/rme_kernel.c ****     }
6129:../../Source/Kernel/rme_kernel.c ****     
6130:../../Source/Kernel/rme_kernel.c ****     /* Check if there are any notifications */
6131:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Event.Next==&(Scheduler->Sched.Event))
 15782              		.loc 1 6131 30
 15783 01d8 14301BE5 		ldr	r3, [fp, #-20]
 15784 01dc 3C2093E5 		ldr	r2, [r3, #60]
 15785              		.loc 1 6131 37
 15786 01e0 14301BE5 		ldr	r3, [fp, #-20]
 15787 01e4 3C3083E2 		add	r3, r3, #60
 15788              		.loc 1 6131 7
 15789 01e8 030052E1 		cmp	r2, r3
 15790 01ec 0100001A 		bne	.L1013
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 386


6132:../../Source/Kernel/rme_kernel.c ****     {
6133:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6134:../../Source/Kernel/rme_kernel.c **** 
6135:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 15791              		.loc 1 6135 16
 15792 01f0 CE30E0E3 		mvn	r3, #206
 15793 01f4 290000EA 		b	.L1003
 15794              	.L1013:
6136:../../Source/Kernel/rme_kernel.c ****     }
6137:../../Source/Kernel/rme_kernel.c ****     else
6138:../../Source/Kernel/rme_kernel.c ****     {
6139:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6140:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6141:../../Source/Kernel/rme_kernel.c ****     }
6142:../../Source/Kernel/rme_kernel.c ****     
6143:../../Source/Kernel/rme_kernel.c ****     /* Return one notification and delete it from the notification list */
6144:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)(Scheduler->Sched.Event.Next-1U);
 15795              		.loc 1 6144 59
 15796 01f8 14301BE5 		ldr	r3, [fp, #-20]
 15797 01fc 3C3093E5 		ldr	r3, [r3, #60]
 15798              		.loc 1 6144 11
 15799 0200 083043E2 		sub	r3, r3, #8
 15800 0204 18300BE5 		str	r3, [fp, #-24]
6145:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 15801              		.loc 1 6145 5
 15802 0208 18301BE5 		ldr	r3, [fp, #-24]
 15803 020c 0C2093E5 		ldr	r2, [r3, #12]
 15804 0210 18301BE5 		ldr	r3, [fp, #-24]
 15805 0214 083093E5 		ldr	r3, [r3, #8]
 15806 0218 0310A0E1 		mov	r1, r3
 15807 021c 0200A0E1 		mov	r0, r2
 15808 0220 FEFFFFEB 		bl	_RME_List_Del
6146:../../Source/Kernel/rme_kernel.c ****     /* We need to do this because we are using this to detect whether the notification is sent */
6147:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 15809              		.loc 1 6147 5
 15810 0224 18301BE5 		ldr	r3, [fp, #-24]
 15811 0228 083083E2 		add	r3, r3, #8
 15812 022c 0300A0E1 		mov	r0, r3
 15813 0230 FEFFFFEB 		bl	_RME_List_Crt
6148:../../Source/Kernel/rme_kernel.c ****     
6149:../../Source/Kernel/rme_kernel.c ****     /* Exception pending */
6150:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15814              		.loc 1 6150 21
 15815 0234 18301BE5 		ldr	r3, [fp, #-24]
 15816 0238 1C3093E5 		ldr	r3, [r3, #28]
 15817              		.loc 1 6150 7
 15818 023c 030053E3 		cmp	r3, #3
 15819 0240 0900001A 		bne	.L1014
6151:../../Source/Kernel/rme_kernel.c ****     {
6152:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6153:../../Source/Kernel/rme_kernel.c ****         
6154:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_EXCPEND_FLAG;
 15820              		.loc 1 6154 13
 15821 0244 0131A0E3 		mov	r3, #1073741824
 15822 0248 0C300BE5 		str	r3, [fp, #-12]
6155:../../Source/Kernel/rme_kernel.c ****         
6156:../../Source/Kernel/rme_kernel.c ****         /* Is it also out of timeslice? */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 387


6157:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice==0U)
 15823              		.loc 1 6157 25
 15824 024c 18301BE5 		ldr	r3, [fp, #-24]
 15825 0250 183093E5 		ldr	r3, [r3, #24]
 15826              		.loc 1 6157 11
 15827 0254 000053E3 		cmp	r3, #0
 15828 0258 0C00001A 		bne	.L1015
6158:../../Source/Kernel/rme_kernel.c ****         {
6159:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6160:../../Source/Kernel/rme_kernel.c ****             
6161:../../Source/Kernel/rme_kernel.c ****             Flag|=RME_THD_TIMEOUT_FLAG;
 15829              		.loc 1 6161 17
 15830 025c 0C301BE5 		ldr	r3, [fp, #-12]
 15831 0260 023283E3 		orr	r3, r3, #536870912
 15832 0264 0C300BE5 		str	r3, [fp, #-12]
 15833 0268 080000EA 		b	.L1015
 15834              	.L1014:
6162:../../Source/Kernel/rme_kernel.c ****         }
6163:../../Source/Kernel/rme_kernel.c ****         else
6164:../../Source/Kernel/rme_kernel.c ****         {
6165:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6166:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6167:../../Source/Kernel/rme_kernel.c ****         }
6168:../../Source/Kernel/rme_kernel.c ****     }
6169:../../Source/Kernel/rme_kernel.c ****     /* Timeout */
6170:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_TIMEOUT)
 15835              		.loc 1 6170 26
 15836 026c 18301BE5 		ldr	r3, [fp, #-24]
 15837 0270 1C3093E5 		ldr	r3, [r3, #28]
 15838              		.loc 1 6170 12
 15839 0274 020053E3 		cmp	r3, #2
 15840 0278 0200001A 		bne	.L1016
6171:../../Source/Kernel/rme_kernel.c ****     {
6172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6173:../../Source/Kernel/rme_kernel.c ****         
6174:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_TIMEOUT_FLAG;
 15841              		.loc 1 6174 13
 15842 027c 0232A0E3 		mov	r3, #536870912
 15843 0280 0C300BE5 		str	r3, [fp, #-12]
 15844 0284 010000EA 		b	.L1015
 15845              	.L1016:
6175:../../Source/Kernel/rme_kernel.c ****     }
6176:../../Source/Kernel/rme_kernel.c ****     /* Spurious notification, cause eliminated before this sched rcv */
6177:../../Source/Kernel/rme_kernel.c ****     else
6178:../../Source/Kernel/rme_kernel.c ****     {
6179:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6180:../../Source/Kernel/rme_kernel.c ****         
6181:../../Source/Kernel/rme_kernel.c ****         Flag=0U;
 15846              		.loc 1 6181 13
 15847 0288 0030A0E3 		mov	r3, #0
 15848 028c 0C300BE5 		str	r3, [fp, #-12]
 15849              	.L1015:
6182:../../Source/Kernel/rme_kernel.c ****     }
6183:../../Source/Kernel/rme_kernel.c ****     
6184:../../Source/Kernel/rme_kernel.c ****     /* Return the notification TID with the flags */
6185:../../Source/Kernel/rme_kernel.c ****     return (rme_ret_t)(Thread->Sched.TID|Flag);
 15850              		.loc 1 6185 37
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 388


 15851 0290 18301BE5 		ldr	r3, [fp, #-24]
 15852 0294 102093E5 		ldr	r2, [r3, #16]
 15853              		.loc 1 6185 41
 15854 0298 0C301BE5 		ldr	r3, [fp, #-12]
 15855 029c 033082E1 		orr	r3, r2, r3
 15856              	.L1003:
6186:../../Source/Kernel/rme_kernel.c **** }
 15857              		.loc 1 6186 1
 15858 02a0 0300A0E1 		mov	r0, r3
 15859 02a4 04D04BE2 		sub	sp, fp, #4
 15860              		.cfi_def_cfa 13, 8
 15861              		@ sp needed
 15862 02a8 0088BDE8 		pop	{fp, pc}
 15863              		.cfi_endproc
 15864              	.LFE62:
 15866              		.section	.text._RME_Thd_Time_Xfer,"ax",%progbits
 15867              		.align	2
 15868              		.syntax unified
 15869              		.arm
 15871              	_RME_Thd_Time_Xfer:
 15872              	.LFB63:
6187:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Rcv *******************************************/
6188:../../Source/Kernel/rme_kernel.c **** 
6189:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Time_Xfer ************************************************
6190:../../Source/Kernel/rme_kernel.c **** Description : Transfer time from one thread to another. This can only be called
6191:../../Source/Kernel/rme_kernel.c ****               from the core that the thread is on, and the the two threads
6192:../../Source/Kernel/rme_kernel.c ****               involved in the time transfer must be on the same core.
6193:../../Source/Kernel/rme_kernel.c ****               If the time transfered is more than or equal to what the source
6194:../../Source/Kernel/rme_kernel.c ****               have, the source will be out of time or blocked. If the source is
6195:../../Source/Kernel/rme_kernel.c ****               both out of time and blocked, we do not send the notification;
6196:../../Source/Kernel/rme_kernel.c ****               Instead, we send the notification when the receive endpoint
6197:../../Source/Kernel/rme_kernel.c ****               actually receive something.
6198:../../Source/Kernel/rme_kernel.c ****               It is possible to transfer time to threads have a lower priority,
6199:../../Source/Kernel/rme_kernel.c ****               and it is also possible to transfer time to threads that have a
6200:../../Source/Kernel/rme_kernel.c ****               higher priority. In the latter case, and if the source is
6201:../../Source/Kernel/rme_kernel.c ****               currently running, a preemption will occur. However, it is not
6202:../../Source/Kernel/rme_kernel.c ****               allowed to transfer time to a thread with higher maximum priority,
6203:../../Source/Kernel/rme_kernel.c ****               and this guarantees that the quality of time can only degrade.
6204:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of threads in the system:
6205:../../Source/Kernel/rme_kernel.c ****               1. Init threads - They are created at boot-time and have infinite
6206:../../Source/Kernel/rme_kernel.c ****                                 budget.
6207:../../Source/Kernel/rme_kernel.c ****               2. Infinite threads - They are created later but have infinite
6208:../../Source/Kernel/rme_kernel.c ****                                     budget.
6209:../../Source/Kernel/rme_kernel.c ****               3. Normal threads - They are created later and have a finite
6210:../../Source/Kernel/rme_kernel.c ****                                   budget.
6211:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of transfer in the system:
6212:../../Source/Kernel/rme_kernel.c ****               1. Normal transfers - They transfer a finite budget.
6213:../../Source/Kernel/rme_kernel.c ****               2. Infinite transfers - They attempt to transfer an infinite
6214:../../Source/Kernel/rme_kernel.c ****                                       budget but will not revoke the timeslices
6215:../../Source/Kernel/rme_kernel.c ****                                       of the source if the source have infinite
6216:../../Source/Kernel/rme_kernel.c ****                                       budget.
6217:../../Source/Kernel/rme_kernel.c ****               3. Revoking transfers - They attempt to transfer an infinite
6218:../../Source/Kernel/rme_kernel.c ****                                       budget but will revoke the timeslices of
6219:../../Source/Kernel/rme_kernel.c ****                                       the source if the source is an infinite
6220:../../Source/Kernel/rme_kernel.c ****                                       thread.
6221:../../Source/Kernel/rme_kernel.c ****               Normal budget transferring rules:
6222:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 389


6223:../../Source/Kernel/rme_kernel.c ****                 Nom   |   From   |     Init     |   Infinite   |    Normal
6224:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6225:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      T-
6226:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6227:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      T-
6228:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6229:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -A      |      -A      |      TA
6230:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6231:../../Source/Kernel/rme_kernel.c ****               Infinite budget transferring rules:
6232:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6233:../../Source/Kernel/rme_kernel.c ****                 Inf   |   From   |     Init     |   Infinite   |    Normal
6234:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6235:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      S-
6236:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6237:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      S-
6238:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6239:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      -I      |      TA
6240:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6241:../../Source/Kernel/rme_kernel.c ****               Revoking budget transferring rules:
6242:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6243:../../Source/Kernel/rme_kernel.c ****                 Rev   |   From   |     Init     |   Infinite   |    Normal
6244:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6245:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      S-      |      S-
6246:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6247:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      S-      |      S-
6248:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6249:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      SI      |      TA
6250:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6251:../../Source/Kernel/rme_kernel.c ****               Notations:
6252:../../Source/Kernel/rme_kernel.c ****               -:Nothing will happen on source/destination.
6253:../../Source/Kernel/rme_kernel.c ****               T:Source timeout if all transferred.
6254:../../Source/Kernel/rme_kernel.c ****               S:Source will definitely timeout.
6255:../../Source/Kernel/rme_kernel.c ****               A:Destination accept if not overflow.
6256:../../Source/Kernel/rme_kernel.c ****               I:Destination will definitely become an infinite thread.
6257:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6258:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6259:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Dst - The destination thread.
6260:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6261:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Src - The source thread.
6262:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6263:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Time - The time to transfer, in slices.
6264:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INIT_TIME for revoking transfer.
6265:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INF_TIME for infinite trasnfer.
6266:../../Source/Kernel/rme_kernel.c **** Output      : None.
6267:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the destination time amount; or an
6268:../../Source/Kernel/rme_kernel.c ****                           error code.
6269:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6270:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Time_Xfer(struct RME_Cap_Cpt* Cpt,
6271:../../Source/Kernel/rme_kernel.c ****                                     struct RME_Reg_Struct* Reg,
6272:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Dst,
6273:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Src,
6274:../../Source/Kernel/rme_kernel.c ****                                     rme_ptr_t Time)
6275:../../Source/Kernel/rme_kernel.c **** {
 15873              		.loc 1 6275 1
 15874              		.cfi_startproc
 15875              		@ args = 4, pretend = 0, frame = 48
 15876              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 390


 15877 0000 00482DE9 		push	{fp, lr}
 15878              		.cfi_def_cfa_offset 8
 15879              		.cfi_offset 11, -8
 15880              		.cfi_offset 14, -4
 15881 0004 04B08DE2 		add	fp, sp, #4
 15882              		.cfi_def_cfa 11, 4
 15883 0008 30D04DE2 		sub	sp, sp, #48
 15884 000c 28000BE5 		str	r0, [fp, #-40]
 15885 0010 2C100BE5 		str	r1, [fp, #-44]
 15886 0014 30200BE5 		str	r2, [fp, #-48]
 15887 0018 34300BE5 		str	r3, [fp, #-52]
6276:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Dst_Op;
6277:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Src_Op;
6278:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Dst;
6279:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Src;
6280:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6281:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Time_Xfer;
6282:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6283:../../Source/Kernel/rme_kernel.c ****     
6284:../../Source/Kernel/rme_kernel.c ****     /* We may allow transferring infinite time here */
6285:../../Source/Kernel/rme_kernel.c ****     if(Time==0U)
 15888              		.loc 1 6285 7
 15889 001c 04309BE5 		ldr	r3, [fp, #4]
 15890 0020 000053E3 		cmp	r3, #0
 15891 0024 0100001A 		bne	.L1018
6286:../../Source/Kernel/rme_kernel.c ****     {
6287:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6288:../../Source/Kernel/rme_kernel.c **** 
6289:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15892              		.loc 1 6289 16
 15893 0028 CB30E0E3 		mvn	r3, #203
 15894 002c 770100EA 		b	.L1019
 15895              	.L1018:
6290:../../Source/Kernel/rme_kernel.c ****     }
6291:../../Source/Kernel/rme_kernel.c ****     else
6292:../../Source/Kernel/rme_kernel.c ****     {
6293:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6294:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6295:../../Source/Kernel/rme_kernel.c ****     }
6296:../../Source/Kernel/rme_kernel.c ****     
6297:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6298:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Dst,RME_CAP_TYPE_THD,
 15896              		.loc 1 6298 5
 15897 0030 30301BE5 		ldr	r3, [fp, #-48]
 15898 0034 803003E2 		and	r3, r3, #128
 15899 0038 000053E3 		cmp	r3, #0
 15900 003c 1C00001A 		bne	.L1020
 15901              		.loc 1 6298 5 is_stmt 0 discriminator 1
 15902 0040 28301BE5 		ldr	r3, [fp, #-40]
 15903 0044 142093E5 		ldr	r2, [r3, #20]
 15904 0048 30301BE5 		ldr	r3, [fp, #-48]
 15905 004c 030052E1 		cmp	r2, r3
 15906 0050 0100008A 		bhi	.L1021
 15907              		.loc 1 6298 5 discriminator 3
 15908 0054 0230E0E3 		mvn	r3, #2
 15909              		.loc 1 6298 5
 15910 0058 6C0100EA 		b	.L1019
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 391


 15911              	.L1021:
 15912              		.loc 1 6298 5 discriminator 4
 15913 005c 30301BE5 		ldr	r3, [fp, #-48]
 15914 0060 8322A0E1 		lsl	r2, r3, #5
 15915 0064 28301BE5 		ldr	r3, [fp, #-40]
 15916 0068 0C3093E5 		ldr	r3, [r3, #12]
 15917 006c 033082E0 		add	r3, r2, r3
 15918 0070 08300BE5 		str	r3, [fp, #-8]
 15919 0074 08301BE5 		ldr	r3, [fp, #-8]
 15920 0078 0300A0E1 		mov	r0, r3
 15921 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15922 0080 14000BE5 		str	r0, [fp, #-20]
 15923              		.loc 1 6298 5 discriminator 1
 15924 0084 14301BE5 		ldr	r3, [fp, #-20]
 15925 0088 FF3803E2 		and	r3, r3, #16711680
 15926 008c 020853E3 		cmp	r3, #131072
 15927 0090 0100001A 		bne	.L1022
 15928              		.loc 1 6298 5 discriminator 5
 15929 0094 0830E0E3 		mvn	r3, #8
 15930              		.loc 1 6298 5
 15931 0098 5C0100EA 		b	.L1019
 15932              	.L1022:
 15933              		.loc 1 6298 5 discriminator 6
 15934 009c 14301BE5 		ldr	r3, [fp, #-20]
 15935 00a0 233CA0E1 		lsr	r3, r3, #24
 15936 00a4 060053E3 		cmp	r3, #6
 15937 00a8 3F00000A 		beq	.L1023
 15938              		.loc 1 6298 5 discriminator 7
 15939 00ac 0130E0E3 		mvn	r3, #1
 15940              		.loc 1 6298 5
 15941 00b0 560100EA 		b	.L1019
 15942              	.L1020:
 15943              		.loc 1 6298 5 discriminator 2
 15944 00b4 30301BE5 		ldr	r3, [fp, #-48]
 15945 00b8 2324A0E1 		lsr	r2, r3, #8
 15946 00bc 28301BE5 		ldr	r3, [fp, #-40]
 15947 00c0 143093E5 		ldr	r3, [r3, #20]
 15948 00c4 030052E1 		cmp	r2, r3
 15949 00c8 0100003A 		bcc	.L1024
 15950              		.loc 1 6298 5 discriminator 8
 15951 00cc 0230E0E3 		mvn	r3, #2
 15952              		.loc 1 6298 5
 15953 00d0 4E0100EA 		b	.L1019
 15954              	.L1024:
 15955              		.loc 1 6298 5 discriminator 9
 15956 00d4 30301BE5 		ldr	r3, [fp, #-48]
 15957 00d8 2334A0E1 		lsr	r3, r3, #8
 15958 00dc 8322A0E1 		lsl	r2, r3, #5
 15959 00e0 28301BE5 		ldr	r3, [fp, #-40]
 15960 00e4 0C3093E5 		ldr	r3, [r3, #12]
 15961 00e8 033082E0 		add	r3, r2, r3
 15962 00ec 08300BE5 		str	r3, [fp, #-8]
 15963 00f0 08301BE5 		ldr	r3, [fp, #-8]
 15964 00f4 0300A0E1 		mov	r0, r3
 15965 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15966 00fc 14000BE5 		str	r0, [fp, #-20]
 15967              		.loc 1 6298 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 392


 15968 0100 14301BE5 		ldr	r3, [fp, #-20]
 15969 0104 FF3803E2 		and	r3, r3, #16711680
 15970 0108 020853E3 		cmp	r3, #131072
 15971 010c 0100001A 		bne	.L1025
 15972              		.loc 1 6298 5 discriminator 10
 15973 0110 0830E0E3 		mvn	r3, #8
 15974              		.loc 1 6298 5
 15975 0114 3D0100EA 		b	.L1019
 15976              	.L1025:
 15977              		.loc 1 6298 5 discriminator 11
 15978 0118 14301BE5 		ldr	r3, [fp, #-20]
 15979 011c 233CA0E1 		lsr	r3, r3, #24
 15980 0120 030053E3 		cmp	r3, #3
 15981 0124 0100000A 		beq	.L1026
 15982              		.loc 1 6298 5 discriminator 12
 15983 0128 0130E0E3 		mvn	r3, #1
 15984              		.loc 1 6298 5
 15985 012c 370100EA 		b	.L1019
 15986              	.L1026:
 15987              		.loc 1 6298 5 discriminator 13
 15988 0130 30301BE5 		ldr	r3, [fp, #-48]
 15989 0134 7F2003E2 		and	r2, r3, #127
 15990 0138 08301BE5 		ldr	r3, [fp, #-8]
 15991 013c 143093E5 		ldr	r3, [r3, #20]
 15992 0140 030052E1 		cmp	r2, r3
 15993 0144 0100003A 		bcc	.L1027
 15994              		.loc 1 6298 5 discriminator 14
 15995 0148 0230E0E3 		mvn	r3, #2
 15996              		.loc 1 6298 5
 15997 014c 2F0100EA 		b	.L1019
 15998              	.L1027:
 15999              		.loc 1 6298 5 discriminator 15
 16000 0150 30301BE5 		ldr	r3, [fp, #-48]
 16001 0154 7F3003E2 		and	r3, r3, #127
 16002 0158 8322A0E1 		lsl	r2, r3, #5
 16003 015c 08301BE5 		ldr	r3, [fp, #-8]
 16004 0160 0C3093E5 		ldr	r3, [r3, #12]
 16005 0164 033082E0 		add	r3, r2, r3
 16006 0168 08300BE5 		str	r3, [fp, #-8]
 16007 016c 08301BE5 		ldr	r3, [fp, #-8]
 16008 0170 0300A0E1 		mov	r0, r3
 16009 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16010 0178 14000BE5 		str	r0, [fp, #-20]
 16011              		.loc 1 6298 5 discriminator 1
 16012 017c 14301BE5 		ldr	r3, [fp, #-20]
 16013 0180 FF3803E2 		and	r3, r3, #16711680
 16014 0184 020853E3 		cmp	r3, #131072
 16015 0188 0100001A 		bne	.L1028
 16016              		.loc 1 6298 5 discriminator 16
 16017 018c 0830E0E3 		mvn	r3, #8
 16018              		.loc 1 6298 5
 16019 0190 1E0100EA 		b	.L1019
 16020              	.L1028:
 16021              		.loc 1 6298 5 discriminator 17
 16022 0194 14301BE5 		ldr	r3, [fp, #-20]
 16023 0198 233CA0E1 		lsr	r3, r3, #24
 16024 019c 060053E3 		cmp	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 393


 16025 01a0 0100000A 		beq	.L1023
 16026              		.loc 1 6298 5 discriminator 18
 16027 01a4 0130E0E3 		mvn	r3, #1
 16028              		.loc 1 6298 5
 16029 01a8 180100EA 		b	.L1019
 16030              	.L1023:
6299:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Dst_Op,Type_Stat);
6300:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Src,RME_CAP_TYPE_THD,
 16031              		.loc 1 6300 5 is_stmt 1
 16032 01ac 34301BE5 		ldr	r3, [fp, #-52]
 16033 01b0 803003E2 		and	r3, r3, #128
 16034 01b4 000053E3 		cmp	r3, #0
 16035 01b8 1C00001A 		bne	.L1029
 16036              		.loc 1 6300 5 is_stmt 0 discriminator 1
 16037 01bc 28301BE5 		ldr	r3, [fp, #-40]
 16038 01c0 142093E5 		ldr	r2, [r3, #20]
 16039 01c4 34301BE5 		ldr	r3, [fp, #-52]
 16040 01c8 030052E1 		cmp	r2, r3
 16041 01cc 0100008A 		bhi	.L1030
 16042              		.loc 1 6300 5 discriminator 3
 16043 01d0 0230E0E3 		mvn	r3, #2
 16044              		.loc 1 6300 5
 16045 01d4 0D0100EA 		b	.L1019
 16046              	.L1030:
 16047              		.loc 1 6300 5 discriminator 4
 16048 01d8 34301BE5 		ldr	r3, [fp, #-52]
 16049 01dc 8322A0E1 		lsl	r2, r3, #5
 16050 01e0 28301BE5 		ldr	r3, [fp, #-40]
 16051 01e4 0C3093E5 		ldr	r3, [r3, #12]
 16052 01e8 033082E0 		add	r3, r2, r3
 16053 01ec 0C300BE5 		str	r3, [fp, #-12]
 16054 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 16055 01f4 0300A0E1 		mov	r0, r3
 16056 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16057 01fc 14000BE5 		str	r0, [fp, #-20]
 16058              		.loc 1 6300 5 discriminator 1
 16059 0200 14301BE5 		ldr	r3, [fp, #-20]
 16060 0204 FF3803E2 		and	r3, r3, #16711680
 16061 0208 020853E3 		cmp	r3, #131072
 16062 020c 0100001A 		bne	.L1031
 16063              		.loc 1 6300 5 discriminator 5
 16064 0210 0830E0E3 		mvn	r3, #8
 16065              		.loc 1 6300 5
 16066 0214 FD0000EA 		b	.L1019
 16067              	.L1031:
 16068              		.loc 1 6300 5 discriminator 6
 16069 0218 14301BE5 		ldr	r3, [fp, #-20]
 16070 021c 233CA0E1 		lsr	r3, r3, #24
 16071 0220 060053E3 		cmp	r3, #6
 16072 0224 3F00000A 		beq	.L1032
 16073              		.loc 1 6300 5 discriminator 7
 16074 0228 0130E0E3 		mvn	r3, #1
 16075              		.loc 1 6300 5
 16076 022c F70000EA 		b	.L1019
 16077              	.L1029:
 16078              		.loc 1 6300 5 discriminator 2
 16079 0230 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 394


 16080 0234 2324A0E1 		lsr	r2, r3, #8
 16081 0238 28301BE5 		ldr	r3, [fp, #-40]
 16082 023c 143093E5 		ldr	r3, [r3, #20]
 16083 0240 030052E1 		cmp	r2, r3
 16084 0244 0100003A 		bcc	.L1033
 16085              		.loc 1 6300 5 discriminator 8
 16086 0248 0230E0E3 		mvn	r3, #2
 16087              		.loc 1 6300 5
 16088 024c EF0000EA 		b	.L1019
 16089              	.L1033:
 16090              		.loc 1 6300 5 discriminator 9
 16091 0250 34301BE5 		ldr	r3, [fp, #-52]
 16092 0254 2334A0E1 		lsr	r3, r3, #8
 16093 0258 8322A0E1 		lsl	r2, r3, #5
 16094 025c 28301BE5 		ldr	r3, [fp, #-40]
 16095 0260 0C3093E5 		ldr	r3, [r3, #12]
 16096 0264 033082E0 		add	r3, r2, r3
 16097 0268 0C300BE5 		str	r3, [fp, #-12]
 16098 026c 0C301BE5 		ldr	r3, [fp, #-12]
 16099 0270 0300A0E1 		mov	r0, r3
 16100 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16101 0278 14000BE5 		str	r0, [fp, #-20]
 16102              		.loc 1 6300 5 discriminator 1
 16103 027c 14301BE5 		ldr	r3, [fp, #-20]
 16104 0280 FF3803E2 		and	r3, r3, #16711680
 16105 0284 020853E3 		cmp	r3, #131072
 16106 0288 0100001A 		bne	.L1034
 16107              		.loc 1 6300 5 discriminator 10
 16108 028c 0830E0E3 		mvn	r3, #8
 16109              		.loc 1 6300 5
 16110 0290 DE0000EA 		b	.L1019
 16111              	.L1034:
 16112              		.loc 1 6300 5 discriminator 11
 16113 0294 14301BE5 		ldr	r3, [fp, #-20]
 16114 0298 233CA0E1 		lsr	r3, r3, #24
 16115 029c 030053E3 		cmp	r3, #3
 16116 02a0 0100000A 		beq	.L1035
 16117              		.loc 1 6300 5 discriminator 12
 16118 02a4 0130E0E3 		mvn	r3, #1
 16119              		.loc 1 6300 5
 16120 02a8 D80000EA 		b	.L1019
 16121              	.L1035:
 16122              		.loc 1 6300 5 discriminator 13
 16123 02ac 34301BE5 		ldr	r3, [fp, #-52]
 16124 02b0 7F2003E2 		and	r2, r3, #127
 16125 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 16126 02b8 143093E5 		ldr	r3, [r3, #20]
 16127 02bc 030052E1 		cmp	r2, r3
 16128 02c0 0100003A 		bcc	.L1036
 16129              		.loc 1 6300 5 discriminator 14
 16130 02c4 0230E0E3 		mvn	r3, #2
 16131              		.loc 1 6300 5
 16132 02c8 D00000EA 		b	.L1019
 16133              	.L1036:
 16134              		.loc 1 6300 5 discriminator 15
 16135 02cc 34301BE5 		ldr	r3, [fp, #-52]
 16136 02d0 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 395


 16137 02d4 8322A0E1 		lsl	r2, r3, #5
 16138 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 16139 02dc 0C3093E5 		ldr	r3, [r3, #12]
 16140 02e0 033082E0 		add	r3, r2, r3
 16141 02e4 0C300BE5 		str	r3, [fp, #-12]
 16142 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 16143 02ec 0300A0E1 		mov	r0, r3
 16144 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16145 02f4 14000BE5 		str	r0, [fp, #-20]
 16146              		.loc 1 6300 5 discriminator 1
 16147 02f8 14301BE5 		ldr	r3, [fp, #-20]
 16148 02fc FF3803E2 		and	r3, r3, #16711680
 16149 0300 020853E3 		cmp	r3, #131072
 16150 0304 0100001A 		bne	.L1037
 16151              		.loc 1 6300 5 discriminator 16
 16152 0308 0830E0E3 		mvn	r3, #8
 16153              		.loc 1 6300 5
 16154 030c BF0000EA 		b	.L1019
 16155              	.L1037:
 16156              		.loc 1 6300 5 discriminator 17
 16157 0310 14301BE5 		ldr	r3, [fp, #-20]
 16158 0314 233CA0E1 		lsr	r3, r3, #24
 16159 0318 060053E3 		cmp	r3, #6
 16160 031c 0100000A 		beq	.L1032
 16161              		.loc 1 6300 5 discriminator 18
 16162 0320 0130E0E3 		mvn	r3, #1
 16163              		.loc 1 6300 5
 16164 0324 B90000EA 		b	.L1019
 16165              	.L1032:
6301:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Src_Op,Type_Stat);
6302:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6303:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Dst_Op,RME_THD_FLAG_XFER_DST);
 16166              		.loc 1 6303 5 is_stmt 1
 16167 0328 08301BE5 		ldr	r3, [fp, #-8]
 16168 032c 083093E5 		ldr	r3, [r3, #8]
 16169 0330 803003E2 		and	r3, r3, #128
 16170 0334 000053E3 		cmp	r3, #0
 16171 0338 0100001A 		bne	.L1038
 16172              		.loc 1 6303 5 is_stmt 0 discriminator 1
 16173 033c 0630E0E3 		mvn	r3, #6
 16174              		.loc 1 6303 5
 16175 0340 B20000EA 		b	.L1019
 16176              	.L1038:
6304:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Src_Op,RME_THD_FLAG_XFER_SRC);
 16177              		.loc 1 6304 5 is_stmt 1
 16178 0344 0C301BE5 		ldr	r3, [fp, #-12]
 16179 0348 083093E5 		ldr	r3, [r3, #8]
 16180 034c 403003E2 		and	r3, r3, #64
 16181 0350 000053E3 		cmp	r3, #0
 16182 0354 0100001A 		bne	.L1039
 16183              		.loc 1 6304 5 is_stmt 0 discriminator 1
 16184 0358 0630E0E3 		mvn	r3, #6
 16185              		.loc 1 6304 5
 16186 035c AB0000EA 		b	.L1019
 16187              	.L1039:
6305:../../Source/Kernel/rme_kernel.c **** 
6306:../../Source/Kernel/rme_kernel.c ****     /* Check if the two threads are on the core that is accordance with what we are on */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 396


6307:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16188              		.loc 1 6307 10 is_stmt 1
 16189 0360 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16190 0364 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16191 0368 18300BE5 		str	r3, [fp, #-24]
6308:../../Source/Kernel/rme_kernel.c ****     Thd_Src=RME_CAP_GETOBJ(Thd_Src_Op,struct RME_Thd_Struct*);
 16192              		.loc 1 6308 13
 16193 036c 0C301BE5 		ldr	r3, [fp, #-12]
 16194 0370 0C3093E5 		ldr	r3, [r3, #12]
 16195              		.loc 1 6308 12
 16196 0374 1C300BE5 		str	r3, [fp, #-28]
6309:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Local!=Local)
 16197              		.loc 1 6309 22
 16198 0378 1C301BE5 		ldr	r3, [fp, #-28]
 16199 037c 143093E5 		ldr	r3, [r3, #20]
 16200              		.loc 1 6309 7
 16201 0380 18201BE5 		ldr	r2, [fp, #-24]
 16202 0384 030052E1 		cmp	r2, r3
 16203 0388 0100000A 		beq	.L1040
6310:../../Source/Kernel/rme_kernel.c ****     {
6311:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6312:../../Source/Kernel/rme_kernel.c **** 
6313:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16204              		.loc 1 6313 16
 16205 038c CB30E0E3 		mvn	r3, #203
 16206 0390 9E0000EA 		b	.L1019
 16207              	.L1040:
6314:../../Source/Kernel/rme_kernel.c ****     }
6315:../../Source/Kernel/rme_kernel.c ****     else
6316:../../Source/Kernel/rme_kernel.c ****     {
6317:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6318:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6319:../../Source/Kernel/rme_kernel.c ****     }
6320:../../Source/Kernel/rme_kernel.c ****     
6321:../../Source/Kernel/rme_kernel.c ****     /* Check if we have slices to transfer; 0 implies TIMEOUT, BLOCKED, or EXCPEND */
6322:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16208              		.loc 1 6322 22
 16209 0394 1C301BE5 		ldr	r3, [fp, #-28]
 16210 0398 183093E5 		ldr	r3, [r3, #24]
 16211              		.loc 1 6322 7
 16212 039c 000053E3 		cmp	r3, #0
 16213 03a0 0100001A 		bne	.L1041
6323:../../Source/Kernel/rme_kernel.c ****     {
6324:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6325:../../Source/Kernel/rme_kernel.c **** 
6326:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16214              		.loc 1 6326 16
 16215 03a4 CB30E0E3 		mvn	r3, #203
 16216 03a8 980000EA 		b	.L1019
 16217              	.L1041:
6327:../../Source/Kernel/rme_kernel.c ****     }
6328:../../Source/Kernel/rme_kernel.c ****     else
6329:../../Source/Kernel/rme_kernel.c ****     {
6330:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6331:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6332:../../Source/Kernel/rme_kernel.c ****     }
6333:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 397


6334:../../Source/Kernel/rme_kernel.c ****     Thd_Dst=RME_CAP_GETOBJ(Thd_Dst_Op,struct RME_Thd_Struct*);
 16218              		.loc 1 6334 13
 16219 03ac 08301BE5 		ldr	r3, [fp, #-8]
 16220 03b0 0C3093E5 		ldr	r3, [r3, #12]
 16221              		.loc 1 6334 12
 16222 03b4 20300BE5 		str	r3, [fp, #-32]
6335:../../Source/Kernel/rme_kernel.c ****     
6336:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.Local!=Local)
 16223              		.loc 1 6336 22
 16224 03b8 20301BE5 		ldr	r3, [fp, #-32]
 16225 03bc 143093E5 		ldr	r3, [r3, #20]
 16226              		.loc 1 6336 7
 16227 03c0 18201BE5 		ldr	r2, [fp, #-24]
 16228 03c4 030052E1 		cmp	r2, r3
 16229 03c8 0100000A 		beq	.L1042
6337:../../Source/Kernel/rme_kernel.c ****     {
6338:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6339:../../Source/Kernel/rme_kernel.c **** 
6340:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16230              		.loc 1 6340 16
 16231 03cc CB30E0E3 		mvn	r3, #203
 16232 03d0 8E0000EA 		b	.L1019
 16233              	.L1042:
6341:../../Source/Kernel/rme_kernel.c ****     }
6342:../../Source/Kernel/rme_kernel.c ****     else
6343:../../Source/Kernel/rme_kernel.c ****     {
6344:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6345:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6346:../../Source/Kernel/rme_kernel.c ****     }
6347:../../Source/Kernel/rme_kernel.c **** 
6348:../../Source/Kernel/rme_kernel.c ****     /* The destination must never have higher maximum priority than the source,
6349:../../Source/Kernel/rme_kernel.c ****      * unless it is a init thread which could be used as a black hole */
6350:../../Source/Kernel/rme_kernel.c ****     if((Thd_Src->Sched.Prio_Max<Thd_Dst->Sched.Prio_Max)&&
 16234              		.loc 1 6350 23
 16235 03d4 1C301BE5 		ldr	r3, [fp, #-28]
 16236 03d8 242093E5 		ldr	r2, [r3, #36]
 16237              		.loc 1 6350 47
 16238 03dc 20301BE5 		ldr	r3, [fp, #-32]
 16239 03e0 243093E5 		ldr	r3, [r3, #36]
 16240              		.loc 1 6350 7
 16241 03e4 030052E1 		cmp	r2, r3
 16242 03e8 0500002A 		bcs	.L1043
6351:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16243              		.loc 1 6351 23
 16244 03ec 20301BE5 		ldr	r3, [fp, #-32]
 16245 03f0 183093E5 		ldr	r3, [r3, #24]
6350:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16246              		.loc 1 6350 57 discriminator 1
 16247 03f4 060173E3 		cmn	r3, #-2147483647
 16248 03f8 0100000A 		beq	.L1043
6352:../../Source/Kernel/rme_kernel.c ****     {
6353:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6354:../../Source/Kernel/rme_kernel.c **** 
6355:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 16249              		.loc 1 6355 16
 16250 03fc CC30E0E3 		mvn	r3, #204
 16251 0400 820000EA 		b	.L1019
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 398


 16252              	.L1043:
6356:../../Source/Kernel/rme_kernel.c ****     }
6357:../../Source/Kernel/rme_kernel.c ****     else
6358:../../Source/Kernel/rme_kernel.c ****     {
6359:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6360:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6361:../../Source/Kernel/rme_kernel.c ****     }
6362:../../Source/Kernel/rme_kernel.c ****     
6363:../../Source/Kernel/rme_kernel.c ****     /* Delegating from a normal thread */
6364:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice<RME_THD_INF_TIME)
 16253              		.loc 1 6364 22
 16254 0404 1C301BE5 		ldr	r3, [fp, #-28]
 16255 0408 183093E5 		ldr	r3, [r3, #24]
 16256              		.loc 1 6364 7
 16257 040c 0E0173E3 		cmn	r3, #-2147483645
 16258 0410 3200008A 		bhi	.L1044
6365:../../Source/Kernel/rme_kernel.c ****     {
6366:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6367:../../Source/Kernel/rme_kernel.c **** 
6368:../../Source/Kernel/rme_kernel.c ****         /* Delegate all our time */
6369:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16259              		.loc 1 6369 11
 16260 0414 04309BE5 		ldr	r3, [fp, #4]
 16261 0418 0E0173E3 		cmn	r3, #-2147483645
 16262 041c 0300009A 		bls	.L1045
6370:../../Source/Kernel/rme_kernel.c ****         {
6371:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6372:../../Source/Kernel/rme_kernel.c **** 
6373:../../Source/Kernel/rme_kernel.c ****             Time_Xfer=Thd_Src->Sched.Slice;
 16263              		.loc 1 6373 22
 16264 0420 1C301BE5 		ldr	r3, [fp, #-28]
 16265 0424 183093E5 		ldr	r3, [r3, #24]
 16266 0428 10300BE5 		str	r3, [fp, #-16]
 16267 042c 0A0000EA 		b	.L1046
 16268              	.L1045:
6374:../../Source/Kernel/rme_kernel.c ****         }
6375:../../Source/Kernel/rme_kernel.c ****         /* Delegate some time, if not sufficient, clean up the source time */
6376:../../Source/Kernel/rme_kernel.c ****         else
6377:../../Source/Kernel/rme_kernel.c ****         {
6378:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6379:../../Source/Kernel/rme_kernel.c ****             
6380:../../Source/Kernel/rme_kernel.c ****             if(Thd_Src->Sched.Slice>Time)
 16269              		.loc 1 6380 30
 16270 0430 1C301BE5 		ldr	r3, [fp, #-28]
 16271 0434 183093E5 		ldr	r3, [r3, #24]
 16272              		.loc 1 6380 15
 16273 0438 04209BE5 		ldr	r2, [fp, #4]
 16274 043c 030052E1 		cmp	r2, r3
 16275 0440 0200002A 		bcs	.L1047
6381:../../Source/Kernel/rme_kernel.c ****             {
6382:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6383:../../Source/Kernel/rme_kernel.c **** 
6384:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Time;
 16276              		.loc 1 6384 26
 16277 0444 04309BE5 		ldr	r3, [fp, #4]
 16278 0448 10300BE5 		str	r3, [fp, #-16]
 16279 044c 020000EA 		b	.L1046
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 399


 16280              	.L1047:
6385:../../Source/Kernel/rme_kernel.c ****             }
6386:../../Source/Kernel/rme_kernel.c ****             else
6387:../../Source/Kernel/rme_kernel.c ****             {
6388:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6389:../../Source/Kernel/rme_kernel.c **** 
6390:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Thd_Src->Sched.Slice;
 16281              		.loc 1 6390 26
 16282 0450 1C301BE5 		ldr	r3, [fp, #-28]
 16283 0454 183093E5 		ldr	r3, [r3, #24]
 16284 0458 10300BE5 		str	r3, [fp, #-16]
 16285              	.L1046:
6391:../../Source/Kernel/rme_kernel.c ****             }
6392:../../Source/Kernel/rme_kernel.c ****         }
6393:../../Source/Kernel/rme_kernel.c ****         
6394:../../Source/Kernel/rme_kernel.c ****         /* See if we are transferring to an infinite budget thread. If yes, we
6395:../../Source/Kernel/rme_kernel.c ****          * are revoking timeslices; If not, this is a finite transfer */
6396:../../Source/Kernel/rme_kernel.c ****         if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16286              		.loc 1 6396 26
 16287 045c 20301BE5 		ldr	r3, [fp, #-32]
 16288 0460 183093E5 		ldr	r3, [r3, #24]
 16289              		.loc 1 6396 11
 16290 0464 0E0173E3 		cmn	r3, #-2147483645
 16291 0468 1500008A 		bhi	.L1048
6397:../../Source/Kernel/rme_kernel.c ****         {
6398:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6399:../../Source/Kernel/rme_kernel.c ****             
6400:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time_Xfer);
 16292              		.loc 1 6400 13
 16293 046c 20301BE5 		ldr	r3, [fp, #-32]
 16294 0470 182093E5 		ldr	r2, [r3, #24]
 16295 0474 10301BE5 		ldr	r3, [fp, #-16]
 16296 0478 033082E0 		add	r3, r2, r3
 16297 047c 0E0173E3 		cmn	r3, #-2147483645
 16298 0480 0700008A 		bhi	.L1049
 16299              		.loc 1 6400 13 is_stmt 0 discriminator 2
 16300 0484 20301BE5 		ldr	r3, [fp, #-32]
 16301 0488 182093E5 		ldr	r2, [r3, #24]
 16302 048c 10301BE5 		ldr	r3, [fp, #-16]
 16303 0490 032082E0 		add	r2, r2, r3
 16304 0494 20301BE5 		ldr	r3, [fp, #-32]
 16305 0498 183093E5 		ldr	r3, [r3, #24]
 16306 049c 030052E1 		cmp	r2, r3
 16307 04a0 0100002A 		bcs	.L1050
 16308              	.L1049:
 16309              		.loc 1 6400 13 discriminator 3
 16310 04a4 CF30E0E3 		mvn	r3, #207
 16311              		.loc 1 6400 13
 16312 04a8 580000EA 		b	.L1019
 16313              	.L1050:
6401:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time_Xfer;
 16314              		.loc 1 6401 27 is_stmt 1
 16315 04ac 20301BE5 		ldr	r3, [fp, #-32]
 16316 04b0 182093E5 		ldr	r2, [r3, #24]
 16317              		.loc 1 6401 33
 16318 04b4 10301BE5 		ldr	r3, [fp, #-16]
 16319 04b8 032082E0 		add	r2, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 400


 16320 04bc 20301BE5 		ldr	r3, [fp, #-32]
 16321 04c0 182083E5 		str	r2, [r3, #24]
 16322              	.L1048:
6402:../../Source/Kernel/rme_kernel.c ****         }
6403:../../Source/Kernel/rme_kernel.c ****         else
6404:../../Source/Kernel/rme_kernel.c ****         {
6405:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6406:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6407:../../Source/Kernel/rme_kernel.c ****         }
6408:../../Source/Kernel/rme_kernel.c ****         
6409:../../Source/Kernel/rme_kernel.c ****         Thd_Src->Sched.Slice-=Time_Xfer;
 16323              		.loc 1 6409 23
 16324 04c4 1C301BE5 		ldr	r3, [fp, #-28]
 16325 04c8 182093E5 		ldr	r2, [r3, #24]
 16326              		.loc 1 6409 29
 16327 04cc 10301BE5 		ldr	r3, [fp, #-16]
 16328 04d0 032042E0 		sub	r2, r2, r3
 16329 04d4 1C301BE5 		ldr	r3, [fp, #-28]
 16330 04d8 182083E5 		str	r2, [r3, #24]
 16331 04dc 2A0000EA 		b	.L1051
 16332              	.L1044:
6410:../../Source/Kernel/rme_kernel.c ****     }
6411:../../Source/Kernel/rme_kernel.c ****     /* Delegating from init or infinite thread */
6412:../../Source/Kernel/rme_kernel.c ****     else
6413:../../Source/Kernel/rme_kernel.c ****     {
6414:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6415:../../Source/Kernel/rme_kernel.c **** 
6416:../../Source/Kernel/rme_kernel.c ****         /* Infinite transfer to the destination */
6417:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16333              		.loc 1 6417 11
 16334 04e0 04309BE5 		ldr	r3, [fp, #4]
 16335 04e4 0E0173E3 		cmn	r3, #-2147483645
 16336 04e8 1100009A 		bls	.L1052
6418:../../Source/Kernel/rme_kernel.c ****         {
6419:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6420:../../Source/Kernel/rme_kernel.c **** 
6421:../../Source/Kernel/rme_kernel.c ****             /* This transfer will revoke the infinite budget */
6422:../../Source/Kernel/rme_kernel.c ****             if(Time==RME_THD_INIT_TIME)
 16337              		.loc 1 6422 15
 16338 04ec 04309BE5 		ldr	r3, [fp, #4]
 16339 04f0 060173E3 		cmn	r3, #-2147483647
 16340 04f4 0600001A 		bne	.L1053
6423:../../Source/Kernel/rme_kernel.c ****             {
6424:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6425:../../Source/Kernel/rme_kernel.c ****                 
6426:../../Source/Kernel/rme_kernel.c ****                 /* Will not revoke, source is an init thread */
6427:../../Source/Kernel/rme_kernel.c ****                 if(Thd_Src->Sched.Slice!=RME_THD_INIT_TIME)
 16341              		.loc 1 6427 34
 16342 04f8 1C301BE5 		ldr	r3, [fp, #-28]
 16343 04fc 183093E5 		ldr	r3, [r3, #24]
 16344              		.loc 1 6427 19
 16345 0500 060173E3 		cmn	r3, #-2147483647
 16346 0504 0200000A 		beq	.L1053
6428:../../Source/Kernel/rme_kernel.c ****                 {
6429:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6430:../../Source/Kernel/rme_kernel.c ****                     
6431:../../Source/Kernel/rme_kernel.c ****                     Thd_Src->Sched.Slice=0U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 401


 16347              		.loc 1 6431 41
 16348 0508 1C301BE5 		ldr	r3, [fp, #-28]
 16349 050c 0020A0E3 		mov	r2, #0
 16350 0510 182083E5 		str	r2, [r3, #24]
 16351              	.L1053:
6432:../../Source/Kernel/rme_kernel.c ****                 }
6433:../../Source/Kernel/rme_kernel.c ****                 else
6434:../../Source/Kernel/rme_kernel.c ****                 {
6435:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6436:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
6437:../../Source/Kernel/rme_kernel.c ****                 }
6438:../../Source/Kernel/rme_kernel.c ****             }
6439:../../Source/Kernel/rme_kernel.c ****             else
6440:../../Source/Kernel/rme_kernel.c ****             {
6441:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6442:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6443:../../Source/Kernel/rme_kernel.c ****             }
6444:../../Source/Kernel/rme_kernel.c ****             
6445:../../Source/Kernel/rme_kernel.c ****             /* Set destination to infinite if it is not an init thread */
6446:../../Source/Kernel/rme_kernel.c ****             if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16352              		.loc 1 6446 30
 16353 0514 20301BE5 		ldr	r3, [fp, #-32]
 16354 0518 183093E5 		ldr	r3, [r3, #24]
 16355              		.loc 1 6446 15
 16356 051c 0E0173E3 		cmn	r3, #-2147483645
 16357 0520 1900008A 		bhi	.L1051
6447:../../Source/Kernel/rme_kernel.c ****             {
6448:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6449:../../Source/Kernel/rme_kernel.c ****                 
6450:../../Source/Kernel/rme_kernel.c ****                 Thd_Dst->Sched.Slice=RME_THD_INF_TIME;
 16358              		.loc 1 6450 37
 16359 0524 20301BE5 		ldr	r3, [fp, #-32]
 16360 0528 0621E0E3 		mvn	r2, #-2147483647
 16361 052c 182083E5 		str	r2, [r3, #24]
 16362 0530 150000EA 		b	.L1051
 16363              	.L1052:
6451:../../Source/Kernel/rme_kernel.c ****             }
6452:../../Source/Kernel/rme_kernel.c ****             else
6453:../../Source/Kernel/rme_kernel.c ****             {
6454:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6455:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6456:../../Source/Kernel/rme_kernel.c ****             }
6457:../../Source/Kernel/rme_kernel.c ****         }
6458:../../Source/Kernel/rme_kernel.c ****         else
6459:../../Source/Kernel/rme_kernel.c ****         {
6460:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6461:../../Source/Kernel/rme_kernel.c **** 
6462:../../Source/Kernel/rme_kernel.c ****             /* Just increase the budget of the other thread - check first */
6463:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time);
 16364              		.loc 1 6463 13
 16365 0534 20301BE5 		ldr	r3, [fp, #-32]
 16366 0538 182093E5 		ldr	r2, [r3, #24]
 16367 053c 04309BE5 		ldr	r3, [fp, #4]
 16368 0540 033082E0 		add	r3, r2, r3
 16369 0544 0E0173E3 		cmn	r3, #-2147483645
 16370 0548 0700008A 		bhi	.L1054
 16371              		.loc 1 6463 13 is_stmt 0 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 402


 16372 054c 20301BE5 		ldr	r3, [fp, #-32]
 16373 0550 182093E5 		ldr	r2, [r3, #24]
 16374 0554 04309BE5 		ldr	r3, [fp, #4]
 16375 0558 032082E0 		add	r2, r2, r3
 16376 055c 20301BE5 		ldr	r3, [fp, #-32]
 16377 0560 183093E5 		ldr	r3, [r3, #24]
 16378 0564 030052E1 		cmp	r2, r3
 16379 0568 0100002A 		bcs	.L1055
 16380              	.L1054:
 16381              		.loc 1 6463 13 discriminator 3
 16382 056c CF30E0E3 		mvn	r3, #207
 16383              		.loc 1 6463 13
 16384 0570 260000EA 		b	.L1019
 16385              	.L1055:
6464:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time;
 16386              		.loc 1 6464 27 is_stmt 1
 16387 0574 20301BE5 		ldr	r3, [fp, #-32]
 16388 0578 182093E5 		ldr	r2, [r3, #24]
 16389              		.loc 1 6464 33
 16390 057c 04309BE5 		ldr	r3, [fp, #4]
 16391 0580 032082E0 		add	r2, r2, r3
 16392 0584 20301BE5 		ldr	r3, [fp, #-32]
 16393 0588 182083E5 		str	r2, [r3, #24]
 16394              	.L1051:
6465:../../Source/Kernel/rme_kernel.c ****         }
6466:../../Source/Kernel/rme_kernel.c ****     }
6467:../../Source/Kernel/rme_kernel.c **** 
6468:../../Source/Kernel/rme_kernel.c ****     /* Is the source time used up? If yes, delete it from the run queue, and notify its 
6469:../../Source/Kernel/rme_kernel.c ****      * parent. If it is not in the run queue, The state of the source must be BLOCKED. */
6470:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16395              		.loc 1 6470 22
 16396 058c 1C301BE5 		ldr	r3, [fp, #-28]
 16397 0590 183093E5 		ldr	r3, [r3, #24]
 16398              		.loc 1 6470 7
 16399 0594 000053E3 		cmp	r3, #0
 16400 0598 0A00001A 		bne	.L1056
6471:../../Source/Kernel/rme_kernel.c ****     {
6472:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6473:../../Source/Kernel/rme_kernel.c ****         
6474:../../Source/Kernel/rme_kernel.c ****         /* If it is blocked or have an exception, we neither change its state nor send
6475:../../Source/Kernel/rme_kernel.c ****          * the scheduler notification. It will be sent when the thread unblocks, or gets
6476:../../Source/Kernel/rme_kernel.c ****          * its exception handled. The rule of the thumb is, we only send scheduler 
6477:../../Source/Kernel/rme_kernel.c ****          * notifications when the thread really enter TIMEOUT or EXCPEND state. */
6478:../../Source/Kernel/rme_kernel.c ****         if(Thd_Src->Sched.State==RME_THD_READY)
 16401              		.loc 1 6478 26
 16402 059c 1C301BE5 		ldr	r3, [fp, #-28]
 16403 05a0 1C3093E5 		ldr	r3, [r3, #28]
 16404              		.loc 1 6478 11
 16405 05a4 000053E3 		cmp	r3, #0
 16406 05a8 0600001A 		bne	.L1056
6479:../../Source/Kernel/rme_kernel.c ****         {
6480:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6481:../../Source/Kernel/rme_kernel.c ****             
6482:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue */
6483:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Src);
 16407              		.loc 1 6483 13
 16408 05ac 1C001BE5 		ldr	r0, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 403


 16409 05b0 FEFFFFEB 		bl	_RME_Run_Del
6484:../../Source/Kernel/rme_kernel.c ****             
6485:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6486:../../Source/Kernel/rme_kernel.c ****             Thd_Src->Sched.State=RME_THD_TIMEOUT;
 16410              		.loc 1 6486 33
 16411 05b4 1C301BE5 		ldr	r3, [fp, #-28]
 16412 05b8 0220A0E3 		mov	r2, #2
 16413 05bc 1C2083E5 		str	r2, [r3, #28]
6487:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Src);
 16414              		.loc 1 6487 13
 16415 05c0 1C001BE5 		ldr	r0, [fp, #-28]
 16416 05c4 FEFFFFEB 		bl	_RME_Run_Notif
 16417              	.L1056:
6488:../../Source/Kernel/rme_kernel.c ****         }
6489:../../Source/Kernel/rme_kernel.c ****         else
6490:../../Source/Kernel/rme_kernel.c ****         {
6491:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6492:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6493:../../Source/Kernel/rme_kernel.c ****         }
6494:../../Source/Kernel/rme_kernel.c ****     }
6495:../../Source/Kernel/rme_kernel.c ****     else
6496:../../Source/Kernel/rme_kernel.c ****     {
6497:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6498:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6499:../../Source/Kernel/rme_kernel.c ****     }
6500:../../Source/Kernel/rme_kernel.c **** 
6501:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller 
6502:../../Source/Kernel/rme_kernel.c ****      * stack - how much time the destination have now */
6503:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,(rme_ret_t)(Thd_Dst->Sched.Slice));
 16418              		.loc 1 6503 56
 16419 05c8 20301BE5 		ldr	r3, [fp, #-32]
 16420 05cc 183093E5 		ldr	r3, [r3, #24]
 16421              		.loc 1 6503 5
 16422 05d0 0310A0E1 		mov	r1, r3
 16423 05d4 2C001BE5 		ldr	r0, [fp, #-44]
 16424 05d8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6504:../../Source/Kernel/rme_kernel.c **** 
6505:../../Source/Kernel/rme_kernel.c ****     /* See what was the state of the destination thread. If it is timeout, then activate
6506:../../Source/Kernel/rme_kernel.c ****      * it. If it is BLOCKED or EXCPEND, then leave it alone, and it will be activated
6507:../../Source/Kernel/rme_kernel.c ****      * when it unblocks or when the exception is handled. */
6508:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.State==RME_THD_TIMEOUT)
 16425              		.loc 1 6508 22
 16426 05dc 20301BE5 		ldr	r3, [fp, #-32]
 16427 05e0 1C3093E5 		ldr	r3, [r3, #28]
 16428              		.loc 1 6508 7
 16429 05e4 020053E3 		cmp	r3, #2
 16430 05e8 0400001A 		bne	.L1057
6509:../../Source/Kernel/rme_kernel.c ****     {
6510:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6511:../../Source/Kernel/rme_kernel.c **** 
6512:../../Source/Kernel/rme_kernel.c ****         /* Ready and add to runqueue */
6513:../../Source/Kernel/rme_kernel.c ****         Thd_Dst->Sched.State=RME_THD_READY;
 16431              		.loc 1 6513 29
 16432 05ec 20301BE5 		ldr	r3, [fp, #-32]
 16433 05f0 0020A0E3 		mov	r2, #0
 16434 05f4 1C2083E5 		str	r2, [r3, #28]
6514:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Thd_Dst);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 404


 16435              		.loc 1 6514 9
 16436 05f8 20001BE5 		ldr	r0, [fp, #-32]
 16437 05fc FEFFFFEB 		bl	_RME_Run_Ins
 16438              	.L1057:
6515:../../Source/Kernel/rme_kernel.c ****     }
6516:../../Source/Kernel/rme_kernel.c ****     else
6517:../../Source/Kernel/rme_kernel.c ****     {
6518:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6519:../../Source/Kernel/rme_kernel.c ****     }
6520:../../Source/Kernel/rme_kernel.c ****     
6521:../../Source/Kernel/rme_kernel.c ****     /* All possible kernel send (scheduler notifications) done,
6522:../../Source/Kernel/rme_kernel.c ****      * now pick the highest priority thread to run */
6523:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 16439              		.loc 1 6523 5
 16440 0600 18101BE5 		ldr	r1, [fp, #-24]
 16441 0604 2C001BE5 		ldr	r0, [fp, #-44]
 16442 0608 FEFFFFEB 		bl	_RME_Kern_High
6524:../../Source/Kernel/rme_kernel.c **** 
6525:../../Source/Kernel/rme_kernel.c ****     return 0;
 16443              		.loc 1 6525 12
 16444 060c 0030A0E3 		mov	r3, #0
 16445              	.L1019:
6526:../../Source/Kernel/rme_kernel.c **** }
 16446              		.loc 1 6526 1
 16447 0610 0300A0E1 		mov	r0, r3
 16448 0614 04D04BE2 		sub	sp, fp, #4
 16449              		.cfi_def_cfa 13, 8
 16450              		@ sp needed
 16451 0618 0088BDE8 		pop	{fp, pc}
 16452              		.cfi_endproc
 16453              	.LFE63:
 16455              		.section	.text._RME_Thd_Swt,"ax",%progbits
 16456              		.align	2
 16457              		.syntax unified
 16458              		.arm
 16460              	_RME_Thd_Swt:
 16461              	.LFB64:
6527:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Time_Xfer *******************************************/
6528:../../Source/Kernel/rme_kernel.c **** 
6529:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Swt ******************************************************
6530:../../Source/Kernel/rme_kernel.c **** Description : Switch to another thread. The thread to switch to must have the same
6531:../../Source/Kernel/rme_kernel.c ****               preemptive priority as this thread, and have time, and not blocked.
6532:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a higher priority thread, this is impossible
6533:../../Source/Kernel/rme_kernel.c ****               because whenever a thread with higher priority exists in the system,
6534:../../Source/Kernel/rme_kernel.c ****               the kernel wiull let it preempt the current thread. 
6535:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a lower priority thread, this is impossible
6536:../../Source/Kernel/rme_kernel.c ****               because the current thread just preempts it after the thread switch.
6537:../../Source/Kernel/rme_kernel.c ****               This syscall does not end with _RME_Kern_High because the user may
6538:../../Source/Kernel/rme_kernel.c ****               designate a specific thread rather than a random one.
6539:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
6540:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
6541:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread. If this is -1,
6542:../../Source/Kernel/rme_kernel.c ****                                   the kernel will pickup whatever thread that
6543:../../Source/Kernel/rme_kernel.c ****                                   has the highest priority and time to run. 
6544:../../Source/Kernel/rme_kernel.c ****                                   2-Level. 
6545:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Yield - This is a flag to indicate whether this
6546:../../Source/Kernel/rme_kernel.c ****                                    is a full yield. If it is, the kernel will
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 405


6547:../../Source/Kernel/rme_kernel.c ****                                    discard all the time alloted on this
6548:../../Source/Kernel/rme_kernel.c ****                                    thread. This only works for threads that
6549:../../Source/Kernel/rme_kernel.c ****                                    have a finite budget.
6550:../../Source/Kernel/rme_kernel.c **** Output      : None.
6551:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6552:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6553:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Swt(struct RME_Cap_Cpt* Cpt,
6554:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
6555:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
6556:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Yield)
6557:../../Source/Kernel/rme_kernel.c **** {
 16462              		.loc 1 6557 1
 16463              		.cfi_startproc
 16464              		@ args = 0, pretend = 0, frame = 40
 16465              		@ frame_needed = 1, uses_anonymous_args = 0
 16466 0000 00482DE9 		push	{fp, lr}
 16467              		.cfi_def_cfa_offset 8
 16468              		.cfi_offset 11, -8
 16469              		.cfi_offset 14, -4
 16470 0004 04B08DE2 		add	fp, sp, #4
 16471              		.cfi_def_cfa 11, 4
 16472 0008 28D04DE2 		sub	sp, sp, #40
 16473 000c 20000BE5 		str	r0, [fp, #-32]
 16474 0010 24100BE5 		str	r1, [fp, #-36]
 16475 0014 28200BE5 		str	r2, [fp, #-40]
 16476 0018 2C300BE5 		str	r3, [fp, #-44]
6558:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Cap_New;
6559:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6560:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_High;
6561:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6562:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6563:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6564:../../Source/Kernel/rme_kernel.c **** 
6565:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16477              		.loc 1 6565 10
 16478 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16479 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16480 0024 10300BE5 		str	r3, [fp, #-16]
6566:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 16481              		.loc 1 6566 12
 16482 0028 10301BE5 		ldr	r3, [fp, #-16]
 16483 002c 043093E5 		ldr	r3, [r3, #4]
 16484 0030 14300BE5 		str	r3, [fp, #-20]
6567:../../Source/Kernel/rme_kernel.c ****     
6568:../../Source/Kernel/rme_kernel.c ****     /* The caller have picked a thread to switch to */
6569:../../Source/Kernel/rme_kernel.c ****     if(Cap_Thd<RME_CID_NULL)
 16485              		.loc 1 6569 7
 16486 0034 28301BE5 		ldr	r3, [fp, #-40]
 16487 0038 020953E3 		cmp	r3, #32768
 16488 003c A60000AA 		bge	.L1059
6570:../../Source/Kernel/rme_kernel.c ****     {
6571:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6572:../../Source/Kernel/rme_kernel.c ****         
6573:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 16489              		.loc 1 6573 9
 16490 0040 28301BE5 		ldr	r3, [fp, #-40]
 16491 0044 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 406


 16492 0048 000053E3 		cmp	r3, #0
 16493 004c 1C00001A 		bne	.L1060
 16494              		.loc 1 6573 9 is_stmt 0 discriminator 1
 16495 0050 20301BE5 		ldr	r3, [fp, #-32]
 16496 0054 142093E5 		ldr	r2, [r3, #20]
 16497 0058 28301BE5 		ldr	r3, [fp, #-40]
 16498 005c 030052E1 		cmp	r2, r3
 16499 0060 0100008A 		bhi	.L1061
 16500              		.loc 1 6573 9 discriminator 3
 16501 0064 0230E0E3 		mvn	r3, #2
 16502              		.loc 1 6573 9
 16503 0068 DF0000EA 		b	.L1062
 16504              	.L1061:
 16505              		.loc 1 6573 9 discriminator 4
 16506 006c 28301BE5 		ldr	r3, [fp, #-40]
 16507 0070 8322A0E1 		lsl	r2, r3, #5
 16508 0074 20301BE5 		ldr	r3, [fp, #-32]
 16509 0078 0C3093E5 		ldr	r3, [r3, #12]
 16510 007c 033082E0 		add	r3, r2, r3
 16511 0080 08300BE5 		str	r3, [fp, #-8]
 16512 0084 08301BE5 		ldr	r3, [fp, #-8]
 16513 0088 0300A0E1 		mov	r0, r3
 16514 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16515 0090 18000BE5 		str	r0, [fp, #-24]
 16516              		.loc 1 6573 9 discriminator 1
 16517 0094 18301BE5 		ldr	r3, [fp, #-24]
 16518 0098 FF3803E2 		and	r3, r3, #16711680
 16519 009c 020853E3 		cmp	r3, #131072
 16520 00a0 0100001A 		bne	.L1063
 16521              		.loc 1 6573 9 discriminator 5
 16522 00a4 0830E0E3 		mvn	r3, #8
 16523              		.loc 1 6573 9
 16524 00a8 CF0000EA 		b	.L1062
 16525              	.L1063:
 16526              		.loc 1 6573 9 discriminator 6
 16527 00ac 18301BE5 		ldr	r3, [fp, #-24]
 16528 00b0 233CA0E1 		lsr	r3, r3, #24
 16529 00b4 060053E3 		cmp	r3, #6
 16530 00b8 3F00000A 		beq	.L1064
 16531              		.loc 1 6573 9 discriminator 7
 16532 00bc 0130E0E3 		mvn	r3, #1
 16533              		.loc 1 6573 9
 16534 00c0 C90000EA 		b	.L1062
 16535              	.L1060:
 16536              		.loc 1 6573 9 discriminator 2
 16537 00c4 28301BE5 		ldr	r3, [fp, #-40]
 16538 00c8 2324A0E1 		lsr	r2, r3, #8
 16539 00cc 20301BE5 		ldr	r3, [fp, #-32]
 16540 00d0 143093E5 		ldr	r3, [r3, #20]
 16541 00d4 030052E1 		cmp	r2, r3
 16542 00d8 0100003A 		bcc	.L1065
 16543              		.loc 1 6573 9 discriminator 8
 16544 00dc 0230E0E3 		mvn	r3, #2
 16545              		.loc 1 6573 9
 16546 00e0 C10000EA 		b	.L1062
 16547              	.L1065:
 16548              		.loc 1 6573 9 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 407


 16549 00e4 28301BE5 		ldr	r3, [fp, #-40]
 16550 00e8 2334A0E1 		lsr	r3, r3, #8
 16551 00ec 8322A0E1 		lsl	r2, r3, #5
 16552 00f0 20301BE5 		ldr	r3, [fp, #-32]
 16553 00f4 0C3093E5 		ldr	r3, [r3, #12]
 16554 00f8 033082E0 		add	r3, r2, r3
 16555 00fc 08300BE5 		str	r3, [fp, #-8]
 16556 0100 08301BE5 		ldr	r3, [fp, #-8]
 16557 0104 0300A0E1 		mov	r0, r3
 16558 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16559 010c 18000BE5 		str	r0, [fp, #-24]
 16560              		.loc 1 6573 9 discriminator 1
 16561 0110 18301BE5 		ldr	r3, [fp, #-24]
 16562 0114 FF3803E2 		and	r3, r3, #16711680
 16563 0118 020853E3 		cmp	r3, #131072
 16564 011c 0100001A 		bne	.L1066
 16565              		.loc 1 6573 9 discriminator 10
 16566 0120 0830E0E3 		mvn	r3, #8
 16567              		.loc 1 6573 9
 16568 0124 B00000EA 		b	.L1062
 16569              	.L1066:
 16570              		.loc 1 6573 9 discriminator 11
 16571 0128 18301BE5 		ldr	r3, [fp, #-24]
 16572 012c 233CA0E1 		lsr	r3, r3, #24
 16573 0130 030053E3 		cmp	r3, #3
 16574 0134 0100000A 		beq	.L1067
 16575              		.loc 1 6573 9 discriminator 12
 16576 0138 0130E0E3 		mvn	r3, #1
 16577              		.loc 1 6573 9
 16578 013c AA0000EA 		b	.L1062
 16579              	.L1067:
 16580              		.loc 1 6573 9 discriminator 13
 16581 0140 28301BE5 		ldr	r3, [fp, #-40]
 16582 0144 7F2003E2 		and	r2, r3, #127
 16583 0148 08301BE5 		ldr	r3, [fp, #-8]
 16584 014c 143093E5 		ldr	r3, [r3, #20]
 16585 0150 030052E1 		cmp	r2, r3
 16586 0154 0100003A 		bcc	.L1068
 16587              		.loc 1 6573 9 discriminator 14
 16588 0158 0230E0E3 		mvn	r3, #2
 16589              		.loc 1 6573 9
 16590 015c A20000EA 		b	.L1062
 16591              	.L1068:
 16592              		.loc 1 6573 9 discriminator 15
 16593 0160 28301BE5 		ldr	r3, [fp, #-40]
 16594 0164 7F3003E2 		and	r3, r3, #127
 16595 0168 8322A0E1 		lsl	r2, r3, #5
 16596 016c 08301BE5 		ldr	r3, [fp, #-8]
 16597 0170 0C3093E5 		ldr	r3, [r3, #12]
 16598 0174 033082E0 		add	r3, r2, r3
 16599 0178 08300BE5 		str	r3, [fp, #-8]
 16600 017c 08301BE5 		ldr	r3, [fp, #-8]
 16601 0180 0300A0E1 		mov	r0, r3
 16602 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16603 0188 18000BE5 		str	r0, [fp, #-24]
 16604              		.loc 1 6573 9 discriminator 1
 16605 018c 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 408


 16606 0190 FF3803E2 		and	r3, r3, #16711680
 16607 0194 020853E3 		cmp	r3, #131072
 16608 0198 0100001A 		bne	.L1069
 16609              		.loc 1 6573 9 discriminator 16
 16610 019c 0830E0E3 		mvn	r3, #8
 16611              		.loc 1 6573 9
 16612 01a0 910000EA 		b	.L1062
 16613              	.L1069:
 16614              		.loc 1 6573 9 discriminator 17
 16615 01a4 18301BE5 		ldr	r3, [fp, #-24]
 16616 01a8 233CA0E1 		lsr	r3, r3, #24
 16617 01ac 060053E3 		cmp	r3, #6
 16618 01b0 0100000A 		beq	.L1064
 16619              		.loc 1 6573 9 discriminator 18
 16620 01b4 0130E0E3 		mvn	r3, #1
 16621              		.loc 1 6573 9
 16622 01b8 8B0000EA 		b	.L1062
 16623              	.L1064:
6574:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Cap_New,Type_Stat);
6575:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6576:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Cap_New,RME_THD_FLAG_SWT);
 16624              		.loc 1 6576 9 is_stmt 1
 16625 01bc 08301BE5 		ldr	r3, [fp, #-8]
 16626 01c0 083093E5 		ldr	r3, [r3, #8]
 16627 01c4 013C03E2 		and	r3, r3, #256
 16628 01c8 000053E3 		cmp	r3, #0
 16629 01cc 0100001A 		bne	.L1070
 16630              		.loc 1 6576 9 is_stmt 0 discriminator 1
 16631 01d0 0630E0E3 		mvn	r3, #6
 16632              		.loc 1 6576 9
 16633 01d4 840000EA 		b	.L1062
 16634              	.L1070:
6577:../../Source/Kernel/rme_kernel.c ****         /* See if we can do operation on this core */
6578:../../Source/Kernel/rme_kernel.c ****         Thd_New=RME_CAP_GETOBJ(Thd_Cap_New,struct RME_Thd_Struct*);
 16635              		.loc 1 6578 17 is_stmt 1
 16636 01d8 08301BE5 		ldr	r3, [fp, #-8]
 16637 01dc 0C3093E5 		ldr	r3, [r3, #12]
 16638              		.loc 1 6578 16
 16639 01e0 0C300BE5 		str	r3, [fp, #-12]
6579:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Local!=Local)
 16640              		.loc 1 6579 26
 16641 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 16642 01e8 143093E5 		ldr	r3, [r3, #20]
 16643              		.loc 1 6579 11
 16644 01ec 10201BE5 		ldr	r2, [fp, #-16]
 16645 01f0 030052E1 		cmp	r2, r3
 16646 01f4 0100000A 		beq	.L1071
6580:../../Source/Kernel/rme_kernel.c ****         {
6581:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6582:../../Source/Kernel/rme_kernel.c **** 
6583:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16647              		.loc 1 6583 20
 16648 01f8 CB30E0E3 		mvn	r3, #203
 16649 01fc 7A0000EA 		b	.L1062
 16650              	.L1071:
6584:../../Source/Kernel/rme_kernel.c ****         }
6585:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 409


6586:../../Source/Kernel/rme_kernel.c ****         {
6587:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6588:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6589:../../Source/Kernel/rme_kernel.c ****         }
6590:../../Source/Kernel/rme_kernel.c ****             
6591:../../Source/Kernel/rme_kernel.c ****         /* See if we can yield to the thread */
6592:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Prio!=Thd_New->Sched.Prio)
 16651              		.loc 1 6592 26
 16652 0200 14301BE5 		ldr	r3, [fp, #-20]
 16653 0204 202093E5 		ldr	r2, [r3, #32]
 16654              		.loc 1 6592 47
 16655 0208 0C301BE5 		ldr	r3, [fp, #-12]
 16656 020c 203093E5 		ldr	r3, [r3, #32]
 16657              		.loc 1 6592 11
 16658 0210 030052E1 		cmp	r2, r3
 16659 0214 0100000A 		beq	.L1072
6593:../../Source/Kernel/rme_kernel.c ****         {
6594:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6595:../../Source/Kernel/rme_kernel.c **** 
6596:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 16660              		.loc 1 6596 20
 16661 0218 CC30E0E3 		mvn	r3, #204
 16662 021c 720000EA 		b	.L1062
 16663              	.L1072:
6597:../../Source/Kernel/rme_kernel.c ****         }
6598:../../Source/Kernel/rme_kernel.c ****         else
6599:../../Source/Kernel/rme_kernel.c ****         {
6600:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6601:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6602:../../Source/Kernel/rme_kernel.c ****         }
6603:../../Source/Kernel/rme_kernel.c ****             
6604:../../Source/Kernel/rme_kernel.c ****         /* Check if the target thread state is valid */
6605:../../Source/Kernel/rme_kernel.c ****         if((Thd_New->Sched.State==RME_THD_BLOCKED)||
 16664              		.loc 1 6605 27
 16665 0220 0C301BE5 		ldr	r3, [fp, #-12]
 16666 0224 1C3093E5 		ldr	r3, [r3, #28]
 16667              		.loc 1 6605 11
 16668 0228 010053E3 		cmp	r3, #1
 16669 022c 0700000A 		beq	.L1073
6606:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16670              		.loc 1 6606 27
 16671 0230 0C301BE5 		ldr	r3, [fp, #-12]
 16672 0234 1C3093E5 		ldr	r3, [r3, #28]
6605:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16673              		.loc 1 6605 51 discriminator 1
 16674 0238 020053E3 		cmp	r3, #2
 16675 023c 0300000A 		beq	.L1073
6607:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_EXCPEND))
 16676              		.loc 1 6607 27
 16677 0240 0C301BE5 		ldr	r3, [fp, #-12]
 16678 0244 1C3093E5 		ldr	r3, [r3, #28]
6606:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16679              		.loc 1 6606 51
 16680 0248 030053E3 		cmp	r3, #3
 16681 024c 0100001A 		bne	.L1074
 16682              	.L1073:
6608:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 410


6609:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6610:../../Source/Kernel/rme_kernel.c **** 
6611:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16683              		.loc 1 6611 20
 16684 0250 CB30E0E3 		mvn	r3, #203
 16685 0254 640000EA 		b	.L1062
 16686              	.L1074:
6612:../../Source/Kernel/rme_kernel.c ****         }
6613:../../Source/Kernel/rme_kernel.c ****         else
6614:../../Source/Kernel/rme_kernel.c ****         {
6615:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6616:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6617:../../Source/Kernel/rme_kernel.c ****         }
6618:../../Source/Kernel/rme_kernel.c ****         
6619:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6620:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16687              		.loc 1 6620 11
 16688 0258 2C301BE5 		ldr	r3, [fp, #-44]
 16689 025c 000053E3 		cmp	r3, #0
 16690 0260 4300000A 		beq	.L1075
 16691              		.loc 1 6620 43 discriminator 1
 16692 0264 14301BE5 		ldr	r3, [fp, #-20]
 16693 0268 183093E5 		ldr	r3, [r3, #24]
 16694              		.loc 1 6620 26 discriminator 1
 16695 026c 0E0173E3 		cmn	r3, #-2147483645
 16696 0270 3F00008A 		bhi	.L1075
6621:../../Source/Kernel/rme_kernel.c ****         {
6622:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6623:../../Source/Kernel/rme_kernel.c ****             
6624:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6625:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16697              		.loc 1 6625 33
 16698 0274 14301BE5 		ldr	r3, [fp, #-20]
 16699 0278 0020A0E3 		mov	r2, #0
 16700 027c 182083E5 		str	r2, [r3, #24]
6626:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16701              		.loc 1 6626 13
 16702 0280 14001BE5 		ldr	r0, [fp, #-20]
 16703 0284 FEFFFFEB 		bl	_RME_Run_Del
6627:../../Source/Kernel/rme_kernel.c ****             
6628:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6629:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16704              		.loc 1 6629 33
 16705 0288 14301BE5 		ldr	r3, [fp, #-20]
 16706 028c 0220A0E3 		mov	r2, #2
 16707 0290 1C2083E5 		str	r2, [r3, #28]
6630:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16708              		.loc 1 6630 13
 16709 0294 14001BE5 		ldr	r0, [fp, #-20]
 16710 0298 FEFFFFEB 		bl	_RME_Run_Notif
6631:../../Source/Kernel/rme_kernel.c ****             
6632:../../Source/Kernel/rme_kernel.c ****             /* Because we have sent a notification, we could have unblocked a
6633:../../Source/Kernel/rme_kernel.c ****              * thread at higher priority. Additionally, if the new thread is
6634:../../Source/Kernel/rme_kernel.c ****              * the current thread, we are forced to switch to someone else,
6635:../../Source/Kernel/rme_kernel.c ****              * because the current thread's timeslice must be exhausted. */
6636:../../Source/Kernel/rme_kernel.c ****             Thd_High=_RME_Run_High(Local);
 16711              		.loc 1 6636 22
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 411


 16712 029c 10001BE5 		ldr	r0, [fp, #-16]
 16713 02a0 FEFFFFEB 		bl	_RME_Run_High
 16714 02a4 1C000BE5 		str	r0, [fp, #-28]
6637:../../Source/Kernel/rme_kernel.c ****             if((Thd_High->Sched.Prio>Thd_New->Sched.Prio)||(Thd_Cur==Thd_New))
 16715              		.loc 1 6637 32
 16716 02a8 1C301BE5 		ldr	r3, [fp, #-28]
 16717 02ac 202093E5 		ldr	r2, [r3, #32]
 16718              		.loc 1 6637 52
 16719 02b0 0C301BE5 		ldr	r3, [fp, #-12]
 16720 02b4 203093E5 		ldr	r3, [r3, #32]
 16721              		.loc 1 6637 15
 16722 02b8 030052E1 		cmp	r2, r3
 16723 02bc 0300008A 		bhi	.L1076
 16724              		.loc 1 6637 58 discriminator 1
 16725 02c0 14201BE5 		ldr	r2, [fp, #-20]
 16726 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 16727 02c8 030052E1 		cmp	r2, r3
 16728 02cc 2800001A 		bne	.L1075
 16729              	.L1076:
6638:../../Source/Kernel/rme_kernel.c ****             {
6639:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6640:../../Source/Kernel/rme_kernel.c **** 
6641:../../Source/Kernel/rme_kernel.c ****                 Thd_New=Thd_High;
 16730              		.loc 1 6641 24
 16731 02d0 1C301BE5 		ldr	r3, [fp, #-28]
 16732 02d4 0C300BE5 		str	r3, [fp, #-12]
 16733 02d8 250000EA 		b	.L1075
 16734              	.L1059:
6642:../../Source/Kernel/rme_kernel.c ****             }
6643:../../Source/Kernel/rme_kernel.c ****             else
6644:../../Source/Kernel/rme_kernel.c ****             {
6645:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6646:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6647:../../Source/Kernel/rme_kernel.c ****             }
6648:../../Source/Kernel/rme_kernel.c ****         }
6649:../../Source/Kernel/rme_kernel.c ****         else
6650:../../Source/Kernel/rme_kernel.c ****         {
6651:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6652:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6653:../../Source/Kernel/rme_kernel.c ****         }
6654:../../Source/Kernel/rme_kernel.c ****     }
6655:../../Source/Kernel/rme_kernel.c ****     /* The kernel needs to pick a thread to switch to */
6656:../../Source/Kernel/rme_kernel.c ****     else
6657:../../Source/Kernel/rme_kernel.c ****     {
6658:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6659:../../Source/Kernel/rme_kernel.c ****         
6660:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6661:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16735              		.loc 1 6661 11
 16736 02dc 2C301BE5 		ldr	r3, [fp, #-44]
 16737 02e0 000053E3 		cmp	r3, #0
 16738 02e4 0E00000A 		beq	.L1077
 16739              		.loc 1 6661 43 discriminator 1
 16740 02e8 14301BE5 		ldr	r3, [fp, #-20]
 16741 02ec 183093E5 		ldr	r3, [r3, #24]
 16742              		.loc 1 6661 26 discriminator 1
 16743 02f0 0E0173E3 		cmn	r3, #-2147483645
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 412


 16744 02f4 0A00008A 		bhi	.L1077
6662:../../Source/Kernel/rme_kernel.c ****         {
6663:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6664:../../Source/Kernel/rme_kernel.c ****             
6665:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6666:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16745              		.loc 1 6666 33
 16746 02f8 14301BE5 		ldr	r3, [fp, #-20]
 16747 02fc 0020A0E3 		mov	r2, #0
 16748 0300 182083E5 		str	r2, [r3, #24]
6667:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16749              		.loc 1 6667 13
 16750 0304 14001BE5 		ldr	r0, [fp, #-20]
 16751 0308 FEFFFFEB 		bl	_RME_Run_Del
6668:../../Source/Kernel/rme_kernel.c ****             
6669:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6670:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16752              		.loc 1 6670 33
 16753 030c 14301BE5 		ldr	r3, [fp, #-20]
 16754 0310 0220A0E3 		mov	r2, #2
 16755 0314 1C2083E5 		str	r2, [r3, #28]
6671:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16756              		.loc 1 6671 13
 16757 0318 14001BE5 		ldr	r0, [fp, #-20]
 16758 031c FEFFFFEB 		bl	_RME_Run_Notif
 16759 0320 100000EA 		b	.L1078
 16760              	.L1077:
6672:../../Source/Kernel/rme_kernel.c ****         }
6673:../../Source/Kernel/rme_kernel.c ****         else
6674:../../Source/Kernel/rme_kernel.c ****         {
6675:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6676:../../Source/Kernel/rme_kernel.c ****             
6677:../../Source/Kernel/rme_kernel.c ****             /* This operation is just to make sure that if there are any other
6678:../../Source/Kernel/rme_kernel.c ****              * thread at the same priority level, we're not switching to ourself */
6679:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 16761              		.loc 1 6679 13
 16762 0324 14301BE5 		ldr	r3, [fp, #-20]
 16763 0328 1C3093E5 		ldr	r3, [r3, #28]
 16764 032c 000053E3 		cmp	r3, #0
 16765 0330 0800000A 		beq	.L1079
 16766              		.loc 1 6679 13 is_stmt 0 discriminator 1
 16767 0334 003000E3 		movw	r3, #:lower16:.LC6
 16768 0338 003040E3 		movt	r3, #:upper16:.LC6
 16769 033c 002000E3 		movw	r2, #:lower16:.LC7
 16770 0340 002040E3 		movt	r2, #:upper16:.LC7
 16771 0344 171A01E3 		movw	r1, #6679
 16772 0348 000000E3 		movw	r0, #:lower16:.LC8
 16773 034c 000040E3 		movt	r0, #:upper16:.LC8
 16774 0350 FEFFFFEB 		bl	RME_Log
 16775              	.L1080:
 16776              		.loc 1 6679 13
 16777 0354 FEFFFFEA 		b	.L1080
 16778              	.L1079:
6680:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16779              		.loc 1 6680 13 is_stmt 1
 16780 0358 14001BE5 		ldr	r0, [fp, #-20]
 16781 035c FEFFFFEB 		bl	_RME_Run_Del
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 413


6681:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Cur);
 16782              		.loc 1 6681 13
 16783 0360 14001BE5 		ldr	r0, [fp, #-20]
 16784 0364 FEFFFFEB 		bl	_RME_Run_Ins
 16785              	.L1078:
6682:../../Source/Kernel/rme_kernel.c ****         }
6683:../../Source/Kernel/rme_kernel.c ****         
6684:../../Source/Kernel/rme_kernel.c ****         Thd_New=_RME_Run_High(Local);
 16786              		.loc 1 6684 17
 16787 0368 10001BE5 		ldr	r0, [fp, #-16]
 16788 036c FEFFFFEB 		bl	_RME_Run_High
 16789 0370 0C000BE5 		str	r0, [fp, #-12]
 16790              	.L1075:
6685:../../Source/Kernel/rme_kernel.c ****     }
6686:../../Source/Kernel/rme_kernel.c ****     
6687:../../Source/Kernel/rme_kernel.c ****     /* Now that we are successful, save the return value to the caller stack */
6688:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 16791              		.loc 1 6688 5
 16792 0374 0010A0E3 		mov	r1, #0
 16793 0378 24001BE5 		ldr	r0, [fp, #-36]
 16794 037c FEFFFFEB 		bl	__RME_Svc_Retval_Set
6689:../../Source/Kernel/rme_kernel.c **** 
6690:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 16795              		.loc 1 6690 5
 16796 0380 0C301BE5 		ldr	r3, [fp, #-12]
 16797 0384 1C3093E5 		ldr	r3, [r3, #28]
 16798 0388 000053E3 		cmp	r3, #0
 16799 038c 0800000A 		beq	.L1081
 16800              		.loc 1 6690 5 is_stmt 0 discriminator 1
 16801 0390 003000E3 		movw	r3, #:lower16:.LC6
 16802 0394 003040E3 		movt	r3, #:upper16:.LC6
 16803 0398 002000E3 		movw	r2, #:lower16:.LC7
 16804 039c 002040E3 		movt	r2, #:upper16:.LC7
 16805 03a0 221A01E3 		movw	r1, #6690
 16806 03a4 000000E3 		movw	r0, #:lower16:.LC8
 16807 03a8 000040E3 		movt	r0, #:upper16:.LC8
 16808 03ac FEFFFFEB 		bl	RME_Log
 16809              	.L1082:
 16810              		.loc 1 6690 5
 16811 03b0 FEFFFFEA 		b	.L1082
 16812              	.L1081:
6691:../../Source/Kernel/rme_kernel.c ****     /* We cannot call _RME_Kern_High because it picks some random thread. Instead,
6692:../../Source/Kernel/rme_kernel.c ****      * we use a manual implementation that is faster than the _RME_Kern_High. */
6693:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur==Thd_New)
 16813              		.loc 1 6693 7 is_stmt 1
 16814 03b4 14201BE5 		ldr	r2, [fp, #-20]
 16815 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 16816 03bc 030052E1 		cmp	r2, r3
 16817 03c0 0100001A 		bne	.L1083
6694:../../Source/Kernel/rme_kernel.c ****     {
6695:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6696:../../Source/Kernel/rme_kernel.c ****         
6697:../../Source/Kernel/rme_kernel.c ****         return 0;
 16818              		.loc 1 6697 16
 16819 03c4 0030A0E3 		mov	r3, #0
 16820 03c8 070000EA 		b	.L1062
 16821              	.L1083:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 414


6698:../../Source/Kernel/rme_kernel.c ****     }
6699:../../Source/Kernel/rme_kernel.c ****     else
6700:../../Source/Kernel/rme_kernel.c ****     {
6701:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6702:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6703:../../Source/Kernel/rme_kernel.c ****     }
6704:../../Source/Kernel/rme_kernel.c ****             
6705:../../Source/Kernel/rme_kernel.c ****     /* We have a solid context switch at this point */
6706:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 16822              		.loc 1 6706 5
 16823 03cc 0C201BE5 		ldr	r2, [fp, #-12]
 16824 03d0 14101BE5 		ldr	r1, [fp, #-20]
 16825 03d4 24001BE5 		ldr	r0, [fp, #-36]
 16826 03d8 FEFFFFEB 		bl	_RME_Run_Swt
6707:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 16827              		.loc 1 6707 19
 16828 03dc 10301BE5 		ldr	r3, [fp, #-16]
 16829 03e0 0C201BE5 		ldr	r2, [fp, #-12]
 16830 03e4 042083E5 		str	r2, [r3, #4]
6708:../../Source/Kernel/rme_kernel.c **** 
6709:../../Source/Kernel/rme_kernel.c ****     return 0;
 16831              		.loc 1 6709 12
 16832 03e8 0030A0E3 		mov	r3, #0
 16833              	.L1062:
6710:../../Source/Kernel/rme_kernel.c **** }
 16834              		.loc 1 6710 1
 16835 03ec 0300A0E1 		mov	r0, r3
 16836 03f0 04D04BE2 		sub	sp, fp, #4
 16837              		.cfi_def_cfa 13, 8
 16838              		@ sp needed
 16839 03f4 0088BDE8 		pop	{fp, pc}
 16840              		.cfi_endproc
 16841              	.LFE64:
 16843              		.section	.text._RME_Sig_Boot_Crt,"ax",%progbits
 16844              		.align	2
 16845              		.global	_RME_Sig_Boot_Crt
 16846              		.syntax unified
 16847              		.arm
 16849              	_RME_Sig_Boot_Crt:
 16850              	.LFB65:
6711:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Swt *************************************************/
6712:../../Source/Kernel/rme_kernel.c **** 
6713:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Boot_Crt *************************************************
6714:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time kernel signal endpoint. This is only used at
6715:../../Source/Kernel/rme_kernel.c ****               boot-time to create endpoints that are related directly to 
6716:../../Source/Kernel/rme_kernel.c ****               hardware interrupts.
6717:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
6718:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6719:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6720:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6721:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6722:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6723:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6724:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6725:../../Source/Kernel/rme_kernel.c **** Output      : None.
6726:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6727:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 415


6728:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Sig_Boot_Crt(struct RME_Cap_Cpt* Cpt,
6729:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
6730:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Sig)
6731:../../Source/Kernel/rme_kernel.c **** {
 16851              		.loc 1 6731 1
 16852              		.cfi_startproc
 16853              		@ args = 0, pretend = 0, frame = 32
 16854              		@ frame_needed = 1, uses_anonymous_args = 0
 16855 0000 00482DE9 		push	{fp, lr}
 16856              		.cfi_def_cfa_offset 8
 16857              		.cfi_offset 11, -8
 16858              		.cfi_offset 14, -4
 16859 0004 04B08DE2 		add	fp, sp, #4
 16860              		.cfi_def_cfa 11, 4
 16861 0008 20D04DE2 		sub	sp, sp, #32
 16862 000c 18000BE5 		str	r0, [fp, #-24]
 16863 0010 1C100BE5 		str	r1, [fp, #-28]
 16864 0014 20200BE5 		str	r2, [fp, #-32]
6732:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
6733:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Crt;
6734:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6735:../../Source/Kernel/rme_kernel.c ****     
6736:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6737:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 16865              		.loc 1 6737 5
 16866 0018 1C301BE5 		ldr	r3, [fp, #-28]
 16867 001c 803003E2 		and	r3, r3, #128
 16868 0020 000053E3 		cmp	r3, #0
 16869 0024 1C00001A 		bne	.L1085
 16870              		.loc 1 6737 5 is_stmt 0 discriminator 1
 16871 0028 18301BE5 		ldr	r3, [fp, #-24]
 16872 002c 142093E5 		ldr	r2, [r3, #20]
 16873 0030 1C301BE5 		ldr	r3, [fp, #-28]
 16874 0034 030052E1 		cmp	r2, r3
 16875 0038 0100008A 		bhi	.L1086
 16876              		.loc 1 6737 5 discriminator 3
 16877 003c 0230E0E3 		mvn	r3, #2
 16878              		.loc 1 6737 5
 16879 0040 8A0000EA 		b	.L1087
 16880              	.L1086:
 16881              		.loc 1 6737 5 discriminator 4
 16882 0044 1C301BE5 		ldr	r3, [fp, #-28]
 16883 0048 8322A0E1 		lsl	r2, r3, #5
 16884 004c 18301BE5 		ldr	r3, [fp, #-24]
 16885 0050 0C3093E5 		ldr	r3, [r3, #12]
 16886 0054 033082E0 		add	r3, r2, r3
 16887 0058 08300BE5 		str	r3, [fp, #-8]
 16888 005c 08301BE5 		ldr	r3, [fp, #-8]
 16889 0060 0300A0E1 		mov	r0, r3
 16890 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16891 0068 0C000BE5 		str	r0, [fp, #-12]
 16892              		.loc 1 6737 5 discriminator 1
 16893 006c 0C301BE5 		ldr	r3, [fp, #-12]
 16894 0070 FF3803E2 		and	r3, r3, #16711680
 16895 0074 020853E3 		cmp	r3, #131072
 16896 0078 0100001A 		bne	.L1088
 16897              		.loc 1 6737 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 416


 16898 007c 0830E0E3 		mvn	r3, #8
 16899              		.loc 1 6737 5
 16900 0080 7A0000EA 		b	.L1087
 16901              	.L1088:
 16902              		.loc 1 6737 5 discriminator 6
 16903 0084 0C301BE5 		ldr	r3, [fp, #-12]
 16904 0088 233CA0E1 		lsr	r3, r3, #24
 16905 008c 030053E3 		cmp	r3, #3
 16906 0090 3F00000A 		beq	.L1089
 16907              		.loc 1 6737 5 discriminator 7
 16908 0094 0130E0E3 		mvn	r3, #1
 16909              		.loc 1 6737 5
 16910 0098 740000EA 		b	.L1087
 16911              	.L1085:
 16912              		.loc 1 6737 5 discriminator 2
 16913 009c 1C301BE5 		ldr	r3, [fp, #-28]
 16914 00a0 2324A0E1 		lsr	r2, r3, #8
 16915 00a4 18301BE5 		ldr	r3, [fp, #-24]
 16916 00a8 143093E5 		ldr	r3, [r3, #20]
 16917 00ac 030052E1 		cmp	r2, r3
 16918 00b0 0100003A 		bcc	.L1090
 16919              		.loc 1 6737 5 discriminator 8
 16920 00b4 0230E0E3 		mvn	r3, #2
 16921              		.loc 1 6737 5
 16922 00b8 6C0000EA 		b	.L1087
 16923              	.L1090:
 16924              		.loc 1 6737 5 discriminator 9
 16925 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 16926 00c0 2334A0E1 		lsr	r3, r3, #8
 16927 00c4 8322A0E1 		lsl	r2, r3, #5
 16928 00c8 18301BE5 		ldr	r3, [fp, #-24]
 16929 00cc 0C3093E5 		ldr	r3, [r3, #12]
 16930 00d0 033082E0 		add	r3, r2, r3
 16931 00d4 08300BE5 		str	r3, [fp, #-8]
 16932 00d8 08301BE5 		ldr	r3, [fp, #-8]
 16933 00dc 0300A0E1 		mov	r0, r3
 16934 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16935 00e4 0C000BE5 		str	r0, [fp, #-12]
 16936              		.loc 1 6737 5 discriminator 1
 16937 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 16938 00ec FF3803E2 		and	r3, r3, #16711680
 16939 00f0 020853E3 		cmp	r3, #131072
 16940 00f4 0100001A 		bne	.L1091
 16941              		.loc 1 6737 5 discriminator 10
 16942 00f8 0830E0E3 		mvn	r3, #8
 16943              		.loc 1 6737 5
 16944 00fc 5B0000EA 		b	.L1087
 16945              	.L1091:
 16946              		.loc 1 6737 5 discriminator 11
 16947 0100 0C301BE5 		ldr	r3, [fp, #-12]
 16948 0104 233CA0E1 		lsr	r3, r3, #24
 16949 0108 030053E3 		cmp	r3, #3
 16950 010c 0100000A 		beq	.L1092
 16951              		.loc 1 6737 5 discriminator 12
 16952 0110 0130E0E3 		mvn	r3, #1
 16953              		.loc 1 6737 5
 16954 0114 550000EA 		b	.L1087
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 417


 16955              	.L1092:
 16956              		.loc 1 6737 5 discriminator 13
 16957 0118 1C301BE5 		ldr	r3, [fp, #-28]
 16958 011c 7F2003E2 		and	r2, r3, #127
 16959 0120 08301BE5 		ldr	r3, [fp, #-8]
 16960 0124 143093E5 		ldr	r3, [r3, #20]
 16961 0128 030052E1 		cmp	r2, r3
 16962 012c 0100003A 		bcc	.L1093
 16963              		.loc 1 6737 5 discriminator 14
 16964 0130 0230E0E3 		mvn	r3, #2
 16965              		.loc 1 6737 5
 16966 0134 4D0000EA 		b	.L1087
 16967              	.L1093:
 16968              		.loc 1 6737 5 discriminator 15
 16969 0138 1C301BE5 		ldr	r3, [fp, #-28]
 16970 013c 7F3003E2 		and	r3, r3, #127
 16971 0140 8322A0E1 		lsl	r2, r3, #5
 16972 0144 08301BE5 		ldr	r3, [fp, #-8]
 16973 0148 0C3093E5 		ldr	r3, [r3, #12]
 16974 014c 033082E0 		add	r3, r2, r3
 16975 0150 08300BE5 		str	r3, [fp, #-8]
 16976 0154 08301BE5 		ldr	r3, [fp, #-8]
 16977 0158 0300A0E1 		mov	r0, r3
 16978 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16979 0160 0C000BE5 		str	r0, [fp, #-12]
 16980              		.loc 1 6737 5 discriminator 1
 16981 0164 0C301BE5 		ldr	r3, [fp, #-12]
 16982 0168 FF3803E2 		and	r3, r3, #16711680
 16983 016c 020853E3 		cmp	r3, #131072
 16984 0170 0100001A 		bne	.L1094
 16985              		.loc 1 6737 5 discriminator 16
 16986 0174 0830E0E3 		mvn	r3, #8
 16987              		.loc 1 6737 5
 16988 0178 3C0000EA 		b	.L1087
 16989              	.L1094:
 16990              		.loc 1 6737 5 discriminator 17
 16991 017c 0C301BE5 		ldr	r3, [fp, #-12]
 16992 0180 233CA0E1 		lsr	r3, r3, #24
 16993 0184 030053E3 		cmp	r3, #3
 16994 0188 0100000A 		beq	.L1089
 16995              		.loc 1 6737 5 discriminator 18
 16996 018c 0130E0E3 		mvn	r3, #1
 16997              		.loc 1 6737 5
 16998 0190 360000EA 		b	.L1087
 16999              	.L1089:
6738:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
6739:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6740:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 17000              		.loc 1 6740 5 is_stmt 1
 17001 0194 08301BE5 		ldr	r3, [fp, #-8]
 17002 0198 083093E5 		ldr	r3, [r3, #8]
 17003 019c 013003E2 		and	r3, r3, #1
 17004 01a0 000053E3 		cmp	r3, #0
 17005 01a4 0100001A 		bne	.L1095
 17006              		.loc 1 6740 5 is_stmt 0 discriminator 1
 17007 01a8 0630E0E3 		mvn	r3, #6
 17008              		.loc 1 6740 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 418


 17009 01ac 2F0000EA 		b	.L1087
 17010              	.L1095:
6741:../../Source/Kernel/rme_kernel.c ****     
6742:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6743:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17011              		.loc 1 6743 5 is_stmt 1
 17012 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17013 01b4 142093E5 		ldr	r2, [r3, #20]
 17014 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17015 01bc 030052E1 		cmp	r2, r3
 17016 01c0 0100008A 		bhi	.L1096
 17017              		.loc 1 6743 5 is_stmt 0 discriminator 1
 17018 01c4 0230E0E3 		mvn	r3, #2
 17019              		.loc 1 6743 5
 17020 01c8 280000EA 		b	.L1087
 17021              	.L1096:
 17022              		.loc 1 6743 5 discriminator 2
 17023 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17024 01d0 8322A0E1 		lsl	r2, r3, #5
 17025 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17026 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17027 01dc 033082E0 		add	r3, r2, r3
 17028 01e0 10300BE5 		str	r3, [fp, #-16]
6744:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6745:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17029              		.loc 1 6745 5 is_stmt 1
 17030 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17031 01e8 0128A0E3 		mov	r2, #65536
 17032 01ec 0010A0E3 		mov	r1, #0
 17033 01f0 0300A0E1 		mov	r0, r3
 17034 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17035 01f8 0030A0E1 		mov	r3, r0
 17036              		.loc 1 6745 5 is_stmt 0 discriminator 1
 17037 01fc 000053E3 		cmp	r3, #0
 17038 0200 0100001A 		bne	.L1097
 17039 0204 0430E0E3 		mvn	r3, #4
 17040              		.loc 1 6745 5
 17041 0208 180000EA 		b	.L1087
 17042              	.L1097:
 17043              		.loc 1 6745 5 discriminator 2
 17044 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17045 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17046 0214 002093E5 		ldr	r2, [r3]
 17047 0218 10301BE5 		ldr	r3, [fp, #-16]
 17048 021c 102083E5 		str	r2, [r3, #16]
6746:../../Source/Kernel/rme_kernel.c ****     
6747:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6748:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=1U;
 17049              		.loc 1 6748 27 is_stmt 1
 17050 0220 10301BE5 		ldr	r3, [fp, #-16]
 17051 0224 0120A0E3 		mov	r2, #1
 17052 0228 042083E5 		str	r2, [r3, #4]
6749:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17053              		.loc 1 6749 25
 17054 022c 10301BE5 		ldr	r3, [fp, #-16]
 17055 0230 0020A0E3 		mov	r2, #0
 17056 0234 0C2083E5 		str	r2, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 419


6750:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17057              		.loc 1 6750 23
 17058 0238 10301BE5 		ldr	r3, [fp, #-16]
 17059 023c 3F20A0E3 		mov	r2, #63
 17060 0240 082083E5 		str	r2, [r3, #8]
6751:../../Source/Kernel/rme_kernel.c ****     
6752:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6753:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17061              		.loc 1 6753 21
 17062 0244 10301BE5 		ldr	r3, [fp, #-16]
 17063 0248 0020A0E3 		mov	r2, #0
 17064 024c 142083E5 		str	r2, [r3, #20]
6754:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=RME_NULL;
 17065              		.loc 1 6754 17
 17066 0250 10301BE5 		ldr	r3, [fp, #-16]
 17067 0254 0020A0E3 		mov	r2, #0
 17068 0258 182083E5 		str	r2, [r3, #24]
6755:../../Source/Kernel/rme_kernel.c **** 
6756:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6757:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17069              		.loc 1 6757 5
 17070 025c 10301BE5 		ldr	r3, [fp, #-16]
 17071 0260 0213A0E3 		mov	r1, #134217728
 17072 0264 0300A0E1 		mov	r0, r3
 17073 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6758:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6759:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6760:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6761:../../Source/Kernel/rme_kernel.c **** 
6762:../../Source/Kernel/rme_kernel.c ****     return 0;
 17074              		.loc 1 6762 12
 17075 026c 0030A0E3 		mov	r3, #0
 17076              	.L1087:
6763:../../Source/Kernel/rme_kernel.c **** }
 17077              		.loc 1 6763 1
 17078 0270 0300A0E1 		mov	r0, r3
 17079 0274 04D04BE2 		sub	sp, fp, #4
 17080              		.cfi_def_cfa 13, 8
 17081              		@ sp needed
 17082 0278 0088BDE8 		pop	{fp, pc}
 17083              		.cfi_endproc
 17084              	.LFE65:
 17086              		.section	.text._RME_Sig_Crt,"ax",%progbits
 17087              		.align	2
 17088              		.syntax unified
 17089              		.arm
 17091              	_RME_Sig_Crt:
 17092              	.LFB66:
6764:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Boot_Crt ********************************************/
6765:../../Source/Kernel/rme_kernel.c **** 
6766:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Crt ******************************************************
6767:../../Source/Kernel/rme_kernel.c **** Description : Create a signal endpoint.
6768:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6769:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6770:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6771:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6772:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 420


6773:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6774:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6775:../../Source/Kernel/rme_kernel.c **** Output      : None.
6776:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6777:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6778:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Crt(struct RME_Cap_Cpt* Cpt,
6779:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6780:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6781:../../Source/Kernel/rme_kernel.c **** {
 17093              		.loc 1 6781 1
 17094              		.cfi_startproc
 17095              		@ args = 0, pretend = 0, frame = 32
 17096              		@ frame_needed = 1, uses_anonymous_args = 0
 17097 0000 00482DE9 		push	{fp, lr}
 17098              		.cfi_def_cfa_offset 8
 17099              		.cfi_offset 11, -8
 17100              		.cfi_offset 14, -4
 17101 0004 04B08DE2 		add	fp, sp, #4
 17102              		.cfi_def_cfa 11, 4
 17103 0008 20D04DE2 		sub	sp, sp, #32
 17104 000c 18000BE5 		str	r0, [fp, #-24]
 17105 0010 1C100BE5 		str	r1, [fp, #-28]
 17106 0014 20200BE5 		str	r2, [fp, #-32]
6782:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6783:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Crt;
6784:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6785:../../Source/Kernel/rme_kernel.c ****     
6786:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6787:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17107              		.loc 1 6787 5
 17108 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17109 001c 803003E2 		and	r3, r3, #128
 17110 0020 000053E3 		cmp	r3, #0
 17111 0024 1C00001A 		bne	.L1099
 17112              		.loc 1 6787 5 is_stmt 0 discriminator 1
 17113 0028 18301BE5 		ldr	r3, [fp, #-24]
 17114 002c 142093E5 		ldr	r2, [r3, #20]
 17115 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17116 0034 030052E1 		cmp	r2, r3
 17117 0038 0100008A 		bhi	.L1100
 17118              		.loc 1 6787 5 discriminator 3
 17119 003c 0230E0E3 		mvn	r3, #2
 17120              		.loc 1 6787 5
 17121 0040 8A0000EA 		b	.L1101
 17122              	.L1100:
 17123              		.loc 1 6787 5 discriminator 4
 17124 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17125 0048 8322A0E1 		lsl	r2, r3, #5
 17126 004c 18301BE5 		ldr	r3, [fp, #-24]
 17127 0050 0C3093E5 		ldr	r3, [r3, #12]
 17128 0054 033082E0 		add	r3, r2, r3
 17129 0058 08300BE5 		str	r3, [fp, #-8]
 17130 005c 08301BE5 		ldr	r3, [fp, #-8]
 17131 0060 0300A0E1 		mov	r0, r3
 17132 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17133 0068 0C000BE5 		str	r0, [fp, #-12]
 17134              		.loc 1 6787 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 421


 17135 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17136 0070 FF3803E2 		and	r3, r3, #16711680
 17137 0074 020853E3 		cmp	r3, #131072
 17138 0078 0100001A 		bne	.L1102
 17139              		.loc 1 6787 5 discriminator 5
 17140 007c 0830E0E3 		mvn	r3, #8
 17141              		.loc 1 6787 5
 17142 0080 7A0000EA 		b	.L1101
 17143              	.L1102:
 17144              		.loc 1 6787 5 discriminator 6
 17145 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17146 0088 233CA0E1 		lsr	r3, r3, #24
 17147 008c 030053E3 		cmp	r3, #3
 17148 0090 3F00000A 		beq	.L1103
 17149              		.loc 1 6787 5 discriminator 7
 17150 0094 0130E0E3 		mvn	r3, #1
 17151              		.loc 1 6787 5
 17152 0098 740000EA 		b	.L1101
 17153              	.L1099:
 17154              		.loc 1 6787 5 discriminator 2
 17155 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17156 00a0 2324A0E1 		lsr	r2, r3, #8
 17157 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17158 00a8 143093E5 		ldr	r3, [r3, #20]
 17159 00ac 030052E1 		cmp	r2, r3
 17160 00b0 0100003A 		bcc	.L1104
 17161              		.loc 1 6787 5 discriminator 8
 17162 00b4 0230E0E3 		mvn	r3, #2
 17163              		.loc 1 6787 5
 17164 00b8 6C0000EA 		b	.L1101
 17165              	.L1104:
 17166              		.loc 1 6787 5 discriminator 9
 17167 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17168 00c0 2334A0E1 		lsr	r3, r3, #8
 17169 00c4 8322A0E1 		lsl	r2, r3, #5
 17170 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17171 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17172 00d0 033082E0 		add	r3, r2, r3
 17173 00d4 08300BE5 		str	r3, [fp, #-8]
 17174 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17175 00dc 0300A0E1 		mov	r0, r3
 17176 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17177 00e4 0C000BE5 		str	r0, [fp, #-12]
 17178              		.loc 1 6787 5 discriminator 1
 17179 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17180 00ec FF3803E2 		and	r3, r3, #16711680
 17181 00f0 020853E3 		cmp	r3, #131072
 17182 00f4 0100001A 		bne	.L1105
 17183              		.loc 1 6787 5 discriminator 10
 17184 00f8 0830E0E3 		mvn	r3, #8
 17185              		.loc 1 6787 5
 17186 00fc 5B0000EA 		b	.L1101
 17187              	.L1105:
 17188              		.loc 1 6787 5 discriminator 11
 17189 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17190 0104 233CA0E1 		lsr	r3, r3, #24
 17191 0108 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 422


 17192 010c 0100000A 		beq	.L1106
 17193              		.loc 1 6787 5 discriminator 12
 17194 0110 0130E0E3 		mvn	r3, #1
 17195              		.loc 1 6787 5
 17196 0114 550000EA 		b	.L1101
 17197              	.L1106:
 17198              		.loc 1 6787 5 discriminator 13
 17199 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17200 011c 7F2003E2 		and	r2, r3, #127
 17201 0120 08301BE5 		ldr	r3, [fp, #-8]
 17202 0124 143093E5 		ldr	r3, [r3, #20]
 17203 0128 030052E1 		cmp	r2, r3
 17204 012c 0100003A 		bcc	.L1107
 17205              		.loc 1 6787 5 discriminator 14
 17206 0130 0230E0E3 		mvn	r3, #2
 17207              		.loc 1 6787 5
 17208 0134 4D0000EA 		b	.L1101
 17209              	.L1107:
 17210              		.loc 1 6787 5 discriminator 15
 17211 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17212 013c 7F3003E2 		and	r3, r3, #127
 17213 0140 8322A0E1 		lsl	r2, r3, #5
 17214 0144 08301BE5 		ldr	r3, [fp, #-8]
 17215 0148 0C3093E5 		ldr	r3, [r3, #12]
 17216 014c 033082E0 		add	r3, r2, r3
 17217 0150 08300BE5 		str	r3, [fp, #-8]
 17218 0154 08301BE5 		ldr	r3, [fp, #-8]
 17219 0158 0300A0E1 		mov	r0, r3
 17220 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17221 0160 0C000BE5 		str	r0, [fp, #-12]
 17222              		.loc 1 6787 5 discriminator 1
 17223 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17224 0168 FF3803E2 		and	r3, r3, #16711680
 17225 016c 020853E3 		cmp	r3, #131072
 17226 0170 0100001A 		bne	.L1108
 17227              		.loc 1 6787 5 discriminator 16
 17228 0174 0830E0E3 		mvn	r3, #8
 17229              		.loc 1 6787 5
 17230 0178 3C0000EA 		b	.L1101
 17231              	.L1108:
 17232              		.loc 1 6787 5 discriminator 17
 17233 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17234 0180 233CA0E1 		lsr	r3, r3, #24
 17235 0184 030053E3 		cmp	r3, #3
 17236 0188 0100000A 		beq	.L1103
 17237              		.loc 1 6787 5 discriminator 18
 17238 018c 0130E0E3 		mvn	r3, #1
 17239              		.loc 1 6787 5
 17240 0190 360000EA 		b	.L1101
 17241              	.L1103:
6788:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
6789:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6790:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 17242              		.loc 1 6790 5 is_stmt 1
 17243 0194 08301BE5 		ldr	r3, [fp, #-8]
 17244 0198 083093E5 		ldr	r3, [r3, #8]
 17245 019c 013003E2 		and	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 423


 17246 01a0 000053E3 		cmp	r3, #0
 17247 01a4 0100001A 		bne	.L1109
 17248              		.loc 1 6790 5 is_stmt 0 discriminator 1
 17249 01a8 0630E0E3 		mvn	r3, #6
 17250              		.loc 1 6790 5
 17251 01ac 2F0000EA 		b	.L1101
 17252              	.L1109:
6791:../../Source/Kernel/rme_kernel.c ****     
6792:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6793:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17253              		.loc 1 6793 5 is_stmt 1
 17254 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17255 01b4 142093E5 		ldr	r2, [r3, #20]
 17256 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17257 01bc 030052E1 		cmp	r2, r3
 17258 01c0 0100008A 		bhi	.L1110
 17259              		.loc 1 6793 5 is_stmt 0 discriminator 1
 17260 01c4 0230E0E3 		mvn	r3, #2
 17261              		.loc 1 6793 5
 17262 01c8 280000EA 		b	.L1101
 17263              	.L1110:
 17264              		.loc 1 6793 5 discriminator 2
 17265 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17266 01d0 8322A0E1 		lsl	r2, r3, #5
 17267 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17268 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17269 01dc 033082E0 		add	r3, r2, r3
 17270 01e0 10300BE5 		str	r3, [fp, #-16]
6794:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6795:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17271              		.loc 1 6795 5 is_stmt 1
 17272 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17273 01e8 0128A0E3 		mov	r2, #65536
 17274 01ec 0010A0E3 		mov	r1, #0
 17275 01f0 0300A0E1 		mov	r0, r3
 17276 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17277 01f8 0030A0E1 		mov	r3, r0
 17278              		.loc 1 6795 5 is_stmt 0 discriminator 1
 17279 01fc 000053E3 		cmp	r3, #0
 17280 0200 0100001A 		bne	.L1111
 17281 0204 0430E0E3 		mvn	r3, #4
 17282              		.loc 1 6795 5
 17283 0208 180000EA 		b	.L1101
 17284              	.L1111:
 17285              		.loc 1 6795 5 discriminator 2
 17286 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17287 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17288 0214 002093E5 		ldr	r2, [r3]
 17289 0218 10301BE5 		ldr	r3, [fp, #-16]
 17290 021c 102083E5 		str	r2, [r3, #16]
6796:../../Source/Kernel/rme_kernel.c **** 
6797:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6798:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=0U;
 17291              		.loc 1 6798 27 is_stmt 1
 17292 0220 10301BE5 		ldr	r3, [fp, #-16]
 17293 0224 0020A0E3 		mov	r2, #0
 17294 0228 042083E5 		str	r2, [r3, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 424


6799:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17295              		.loc 1 6799 25
 17296 022c 10301BE5 		ldr	r3, [fp, #-16]
 17297 0230 0020A0E3 		mov	r2, #0
 17298 0234 0C2083E5 		str	r2, [r3, #12]
6800:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17299              		.loc 1 6800 23
 17300 0238 10301BE5 		ldr	r3, [fp, #-16]
 17301 023c 3F20A0E3 		mov	r2, #63
 17302 0240 082083E5 		str	r2, [r3, #8]
6801:../../Source/Kernel/rme_kernel.c ****     
6802:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6803:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17303              		.loc 1 6803 21
 17304 0244 10301BE5 		ldr	r3, [fp, #-16]
 17305 0248 0020A0E3 		mov	r2, #0
 17306 024c 142083E5 		str	r2, [r3, #20]
6804:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=0U;
 17307              		.loc 1 6804 17
 17308 0250 10301BE5 		ldr	r3, [fp, #-16]
 17309 0254 0020A0E3 		mov	r2, #0
 17310 0258 182083E5 		str	r2, [r3, #24]
6805:../../Source/Kernel/rme_kernel.c ****     
6806:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6807:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17311              		.loc 1 6807 5
 17312 025c 10301BE5 		ldr	r3, [fp, #-16]
 17313 0260 0213A0E3 		mov	r1, #134217728
 17314 0264 0300A0E1 		mov	r0, r3
 17315 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6808:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6809:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6810:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6811:../../Source/Kernel/rme_kernel.c **** 
6812:../../Source/Kernel/rme_kernel.c ****     return 0;
 17316              		.loc 1 6812 12
 17317 026c 0030A0E3 		mov	r3, #0
 17318              	.L1101:
6813:../../Source/Kernel/rme_kernel.c **** }
 17319              		.loc 1 6813 1
 17320 0270 0300A0E1 		mov	r0, r3
 17321 0274 04D04BE2 		sub	sp, fp, #4
 17322              		.cfi_def_cfa 13, 8
 17323              		@ sp needed
 17324 0278 0088BDE8 		pop	{fp, pc}
 17325              		.cfi_endproc
 17326              	.LFE66:
 17328              		.section	.text._RME_Sig_Del,"ax",%progbits
 17329              		.align	2
 17330              		.syntax unified
 17331              		.arm
 17333              	_RME_Sig_Del:
 17334              	.LFB67:
6814:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Crt *************************************************/
6815:../../Source/Kernel/rme_kernel.c **** 
6816:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Del ******************************************************
6817:../../Source/Kernel/rme_kernel.c **** Description : Delete a signal endpoint.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 425


6818:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6819:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
6820:../../Source/Kernel/rme_kernel.c ****                                   delete from.
6821:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6822:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
6823:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6824:../../Source/Kernel/rme_kernel.c **** Output      : None.
6825:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6826:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6827:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Del(struct RME_Cap_Cpt* Cpt,
6828:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6829:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6830:../../Source/Kernel/rme_kernel.c **** {
 17335              		.loc 1 6830 1
 17336              		.cfi_startproc
 17337              		@ args = 0, pretend = 0, frame = 32
 17338              		@ frame_needed = 1, uses_anonymous_args = 0
 17339 0000 00482DE9 		push	{fp, lr}
 17340              		.cfi_def_cfa_offset 8
 17341              		.cfi_offset 11, -8
 17342              		.cfi_offset 14, -4
 17343 0004 04B08DE2 		add	fp, sp, #4
 17344              		.cfi_def_cfa 11, 4
 17345 0008 20D04DE2 		sub	sp, sp, #32
 17346 000c 18000BE5 		str	r0, [fp, #-24]
 17347 0010 1C100BE5 		str	r1, [fp, #-28]
 17348 0014 20200BE5 		str	r2, [fp, #-32]
6831:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6832:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Del;
6833:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6834:../../Source/Kernel/rme_kernel.c ****     
6835:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6836:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17349              		.loc 1 6836 5
 17350 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17351 001c 803003E2 		and	r3, r3, #128
 17352 0020 000053E3 		cmp	r3, #0
 17353 0024 1C00001A 		bne	.L1113
 17354              		.loc 1 6836 5 is_stmt 0 discriminator 1
 17355 0028 18301BE5 		ldr	r3, [fp, #-24]
 17356 002c 142093E5 		ldr	r2, [r3, #20]
 17357 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17358 0034 030052E1 		cmp	r2, r3
 17359 0038 0100008A 		bhi	.L1114
 17360              		.loc 1 6836 5 discriminator 3
 17361 003c 0230E0E3 		mvn	r3, #2
 17362              		.loc 1 6836 5
 17363 0040 B80000EA 		b	.L1115
 17364              	.L1114:
 17365              		.loc 1 6836 5 discriminator 4
 17366 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17367 0048 8322A0E1 		lsl	r2, r3, #5
 17368 004c 18301BE5 		ldr	r3, [fp, #-24]
 17369 0050 0C3093E5 		ldr	r3, [r3, #12]
 17370 0054 033082E0 		add	r3, r2, r3
 17371 0058 08300BE5 		str	r3, [fp, #-8]
 17372 005c 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 426


 17373 0060 0300A0E1 		mov	r0, r3
 17374 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17375 0068 0C000BE5 		str	r0, [fp, #-12]
 17376              		.loc 1 6836 5 discriminator 1
 17377 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17378 0070 FF3803E2 		and	r3, r3, #16711680
 17379 0074 020853E3 		cmp	r3, #131072
 17380 0078 0100001A 		bne	.L1116
 17381              		.loc 1 6836 5 discriminator 5
 17382 007c 0830E0E3 		mvn	r3, #8
 17383              		.loc 1 6836 5
 17384 0080 A80000EA 		b	.L1115
 17385              	.L1116:
 17386              		.loc 1 6836 5 discriminator 6
 17387 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17388 0088 233CA0E1 		lsr	r3, r3, #24
 17389 008c 030053E3 		cmp	r3, #3
 17390 0090 3F00000A 		beq	.L1117
 17391              		.loc 1 6836 5 discriminator 7
 17392 0094 0130E0E3 		mvn	r3, #1
 17393              		.loc 1 6836 5
 17394 0098 A20000EA 		b	.L1115
 17395              	.L1113:
 17396              		.loc 1 6836 5 discriminator 2
 17397 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17398 00a0 2324A0E1 		lsr	r2, r3, #8
 17399 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17400 00a8 143093E5 		ldr	r3, [r3, #20]
 17401 00ac 030052E1 		cmp	r2, r3
 17402 00b0 0100003A 		bcc	.L1118
 17403              		.loc 1 6836 5 discriminator 8
 17404 00b4 0230E0E3 		mvn	r3, #2
 17405              		.loc 1 6836 5
 17406 00b8 9A0000EA 		b	.L1115
 17407              	.L1118:
 17408              		.loc 1 6836 5 discriminator 9
 17409 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17410 00c0 2334A0E1 		lsr	r3, r3, #8
 17411 00c4 8322A0E1 		lsl	r2, r3, #5
 17412 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17413 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17414 00d0 033082E0 		add	r3, r2, r3
 17415 00d4 08300BE5 		str	r3, [fp, #-8]
 17416 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17417 00dc 0300A0E1 		mov	r0, r3
 17418 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17419 00e4 0C000BE5 		str	r0, [fp, #-12]
 17420              		.loc 1 6836 5 discriminator 1
 17421 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17422 00ec FF3803E2 		and	r3, r3, #16711680
 17423 00f0 020853E3 		cmp	r3, #131072
 17424 00f4 0100001A 		bne	.L1119
 17425              		.loc 1 6836 5 discriminator 10
 17426 00f8 0830E0E3 		mvn	r3, #8
 17427              		.loc 1 6836 5
 17428 00fc 890000EA 		b	.L1115
 17429              	.L1119:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 427


 17430              		.loc 1 6836 5 discriminator 11
 17431 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17432 0104 233CA0E1 		lsr	r3, r3, #24
 17433 0108 030053E3 		cmp	r3, #3
 17434 010c 0100000A 		beq	.L1120
 17435              		.loc 1 6836 5 discriminator 12
 17436 0110 0130E0E3 		mvn	r3, #1
 17437              		.loc 1 6836 5
 17438 0114 830000EA 		b	.L1115
 17439              	.L1120:
 17440              		.loc 1 6836 5 discriminator 13
 17441 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17442 011c 7F2003E2 		and	r2, r3, #127
 17443 0120 08301BE5 		ldr	r3, [fp, #-8]
 17444 0124 143093E5 		ldr	r3, [r3, #20]
 17445 0128 030052E1 		cmp	r2, r3
 17446 012c 0100003A 		bcc	.L1121
 17447              		.loc 1 6836 5 discriminator 14
 17448 0130 0230E0E3 		mvn	r3, #2
 17449              		.loc 1 6836 5
 17450 0134 7B0000EA 		b	.L1115
 17451              	.L1121:
 17452              		.loc 1 6836 5 discriminator 15
 17453 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17454 013c 7F3003E2 		and	r3, r3, #127
 17455 0140 8322A0E1 		lsl	r2, r3, #5
 17456 0144 08301BE5 		ldr	r3, [fp, #-8]
 17457 0148 0C3093E5 		ldr	r3, [r3, #12]
 17458 014c 033082E0 		add	r3, r2, r3
 17459 0150 08300BE5 		str	r3, [fp, #-8]
 17460 0154 08301BE5 		ldr	r3, [fp, #-8]
 17461 0158 0300A0E1 		mov	r0, r3
 17462 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17463 0160 0C000BE5 		str	r0, [fp, #-12]
 17464              		.loc 1 6836 5 discriminator 1
 17465 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17466 0168 FF3803E2 		and	r3, r3, #16711680
 17467 016c 020853E3 		cmp	r3, #131072
 17468 0170 0100001A 		bne	.L1122
 17469              		.loc 1 6836 5 discriminator 16
 17470 0174 0830E0E3 		mvn	r3, #8
 17471              		.loc 1 6836 5
 17472 0178 6A0000EA 		b	.L1115
 17473              	.L1122:
 17474              		.loc 1 6836 5 discriminator 17
 17475 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17476 0180 233CA0E1 		lsr	r3, r3, #24
 17477 0184 030053E3 		cmp	r3, #3
 17478 0188 0100000A 		beq	.L1117
 17479              		.loc 1 6836 5 discriminator 18
 17480 018c 0130E0E3 		mvn	r3, #1
 17481              		.loc 1 6836 5
 17482 0190 640000EA 		b	.L1115
 17483              	.L1117:
6837:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
6838:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
6839:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 428


 17484              		.loc 1 6839 5 is_stmt 1
 17485 0194 08301BE5 		ldr	r3, [fp, #-8]
 17486 0198 083093E5 		ldr	r3, [r3, #8]
 17487 019c 023003E2 		and	r3, r3, #2
 17488 01a0 000053E3 		cmp	r3, #0
 17489 01a4 0100001A 		bne	.L1123
 17490              		.loc 1 6839 5 is_stmt 0 discriminator 1
 17491 01a8 0630E0E3 		mvn	r3, #6
 17492              		.loc 1 6839 5
 17493 01ac 5D0000EA 		b	.L1115
 17494              	.L1123:
6840:../../Source/Kernel/rme_kernel.c ****     
6841:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6842:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Del);
 17495              		.loc 1 6842 5 is_stmt 1
 17496 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17497 01b4 142093E5 		ldr	r2, [r3, #20]
 17498 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17499 01bc 030052E1 		cmp	r2, r3
 17500 01c0 0100008A 		bhi	.L1124
 17501              		.loc 1 6842 5 is_stmt 0 discriminator 1
 17502 01c4 0230E0E3 		mvn	r3, #2
 17503              		.loc 1 6842 5
 17504 01c8 560000EA 		b	.L1115
 17505              	.L1124:
 17506              		.loc 1 6842 5 discriminator 2
 17507 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17508 01d0 8322A0E1 		lsl	r2, r3, #5
 17509 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17510 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17511 01dc 033082E0 		add	r3, r2, r3
 17512 01e0 10300BE5 		str	r3, [fp, #-16]
6843:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
6844:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Sig_Del,Type_Stat,RME_CAP_TYPE_SIG);
 17513              		.loc 1 6844 5 is_stmt 1
 17514 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17515 01e8 0300A0E1 		mov	r0, r3
 17516 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17517 01f0 0C000BE5 		str	r0, [fp, #-12]
 17518              		.loc 1 6844 5 is_stmt 0 discriminator 1
 17519 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 17520 01f8 FF3803E2 		and	r3, r3, #16711680
 17521 01fc 020853E3 		cmp	r3, #131072
 17522 0200 0100000A 		beq	.L1125
 17523 0204 0830E0E3 		mvn	r3, #8
 17524              		.loc 1 6844 5
 17525 0208 460000EA 		b	.L1115
 17526              	.L1125:
 17527              		.loc 1 6844 5 discriminator 2
 17528 020c 0C301BE5 		ldr	r3, [fp, #-12]
 17529 0210 233CA0E1 		lsr	r3, r3, #24
 17530 0214 080053E3 		cmp	r3, #8
 17531 0218 0100000A 		beq	.L1126
 17532              		.loc 1 6844 5 discriminator 3
 17533 021c 0130E0E3 		mvn	r3, #1
 17534              		.loc 1 6844 5
 17535 0220 400000EA 		b	.L1115
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 429


 17536              	.L1126:
 17537              		.loc 1 6844 5 discriminator 4
 17538 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17539 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17540 022c 002093E5 		ldr	r2, [r3]
 17541 0230 10301BE5 		ldr	r3, [fp, #-16]
 17542 0234 103093E5 		ldr	r3, [r3, #16]
 17543 0238 0310A0E1 		mov	r1, r3
 17544 023c 0200A0E1 		mov	r0, r2
 17545 0240 FEFFFFEB 		bl	_RME_Diff
 17546 0244 0030A0E1 		mov	r3, r0
 17547              		.loc 1 6844 5 discriminator 1
 17548 0248 0A0053E3 		cmp	r3, #10
 17549 024c 0100008A 		bhi	.L1127
 17550              		.loc 1 6844 5 discriminator 5
 17551 0250 0730E0E3 		mvn	r3, #7
 17552              		.loc 1 6844 5
 17553 0254 330000EA 		b	.L1115
 17554              	.L1127:
 17555              		.loc 1 6844 5 discriminator 6
 17556 0258 10301BE5 		ldr	r3, [fp, #-16]
 17557 025c 043093E5 		ldr	r3, [r3, #4]
 17558 0260 000053E3 		cmp	r3, #0
 17559 0264 0B00000A 		beq	.L1128
 17560              		.loc 1 6844 5 discriminator 7
 17561 0268 0C301BE5 		ldr	r3, [fp, #-12]
 17562 026c 7330FFE6 		uxth	r3, r3
 17563 0270 000053E3 		cmp	r3, #0
 17564 0274 0500001A 		bne	.L1129
 17565              		.loc 1 6844 5 discriminator 9
 17566 0278 10001BE5 		ldr	r0, [fp, #-16]
 17567 027c 0C301BE5 		ldr	r3, [fp, #-12]
 17568 0280 FF38C3E3 		bic	r3, r3, #16711680
 17569 0284 0320A0E1 		mov	r2, r3
 17570 0288 0C101BE5 		ldr	r1, [fp, #-12]
 17571 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17572              	.L1129:
 17573              		.loc 1 6844 5 discriminator 11
 17574 0290 0530E0E3 		mvn	r3, #5
 17575              		.loc 1 6844 5
 17576 0294 230000EA 		b	.L1115
 17577              	.L1128:
 17578              		.loc 1 6844 5 discriminator 8
 17579 0298 0C301BE5 		ldr	r3, [fp, #-12]
 17580 029c 7330FFE6 		uxth	r3, r3
 17581 02a0 000053E3 		cmp	r3, #0
 17582 02a4 0800000A 		beq	.L1130
 17583              		.loc 1 6844 5 discriminator 12
 17584 02a8 003000E3 		movw	r3, #:lower16:.LC6
 17585 02ac 003040E3 		movt	r3, #:upper16:.LC6
 17586 02b0 002000E3 		movw	r2, #:lower16:.LC7
 17587 02b4 002040E3 		movt	r2, #:upper16:.LC7
 17588 02b8 BC1A01E3 		movw	r1, #6844
 17589 02bc 000000E3 		movw	r0, #:lower16:.LC8
 17590 02c0 000040E3 		movt	r0, #:upper16:.LC8
 17591 02c4 FEFFFFEB 		bl	RME_Log
 17592              	.L1131:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 430


 17593              		.loc 1 6844 5
 17594 02c8 FEFFFFEA 		b	.L1131
 17595              	.L1130:
6845:../../Source/Kernel/rme_kernel.c **** 
6846:../../Source/Kernel/rme_kernel.c ****     /* Check if the signal endpoint is currently used and cannot be deleted */
6847:../../Source/Kernel/rme_kernel.c ****     if(Sig_Del->Thd!=0U)
 17596              		.loc 1 6847 15 is_stmt 1
 17597 02cc 10301BE5 		ldr	r3, [fp, #-16]
 17598 02d0 183093E5 		ldr	r3, [r3, #24]
 17599              		.loc 1 6847 7
 17600 02d4 000053E3 		cmp	r3, #0
 17601 02d8 0700000A 		beq	.L1132
6848:../../Source/Kernel/rme_kernel.c ****     {
6849:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6850:../../Source/Kernel/rme_kernel.c **** 
6851:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Sig_Del,Type_Stat);
 17602              		.loc 1 6851 9
 17603 02dc 10001BE5 		ldr	r0, [fp, #-16]
 17604 02e0 0C301BE5 		ldr	r3, [fp, #-12]
 17605 02e4 FF38C3E3 		bic	r3, r3, #16711680
 17606 02e8 0320A0E1 		mov	r2, r3
 17607 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 17608 02f0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
6852:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 17609              		.loc 1 6852 16
 17610 02f4 4B3FE0E3 		mvn	r3, #300
 17611 02f8 0A0000EA 		b	.L1115
 17612              	.L1132:
6853:../../Source/Kernel/rme_kernel.c ****     }
6854:../../Source/Kernel/rme_kernel.c ****     else
6855:../../Source/Kernel/rme_kernel.c ****     {
6856:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6857:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6858:../../Source/Kernel/rme_kernel.c ****     }
6859:../../Source/Kernel/rme_kernel.c ****     
6860:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
6861:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Sig_Del,Type_Stat);
 17613              		.loc 1 6861 5
 17614 02fc 10301BE5 		ldr	r3, [fp, #-16]
 17615 0300 0020A0E3 		mov	r2, #0
 17616 0304 0C101BE5 		ldr	r1, [fp, #-12]
 17617 0308 0300A0E1 		mov	r0, r3
 17618 030c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17619 0310 0030A0E1 		mov	r3, r0
 17620              		.loc 1 6861 5 is_stmt 0 discriminator 1
 17621 0314 000053E3 		cmp	r3, #0
 17622 0318 0100001A 		bne	.L1133
 17623 031c 0030E0E3 		mvn	r3, #0
 17624              		.loc 1 6861 5
 17625 0320 000000EA 		b	.L1115
 17626              	.L1133:
6862:../../Source/Kernel/rme_kernel.c ****     
6863:../../Source/Kernel/rme_kernel.c ****     return 0;
 17627              		.loc 1 6863 12 is_stmt 1
 17628 0324 0030A0E3 		mov	r3, #0
 17629              	.L1115:
6864:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 431


 17630              		.loc 1 6864 1
 17631 0328 0300A0E1 		mov	r0, r3
 17632 032c 04D04BE2 		sub	sp, fp, #4
 17633              		.cfi_def_cfa 13, 8
 17634              		@ sp needed
 17635 0330 0088BDE8 		pop	{fp, pc}
 17636              		.cfi_endproc
 17637              	.LFE67:
 17639              		.section	.text._RME_Kern_High,"ax",%progbits
 17640              		.align	2
 17641              		.global	_RME_Kern_High
 17642              		.syntax unified
 17643              		.arm
 17645              	_RME_Kern_High:
 17646              	.LFB68:
6865:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Del *************************************************/
6866:../../Source/Kernel/rme_kernel.c **** 
6867:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_High ****************************************************
6868:../../Source/Kernel/rme_kernel.c **** Description : Pick the thread with the highest priority to run. Always call
6869:../../Source/Kernel/rme_kernel.c ****               this after you finish all your kernel sending stuff in the
6870:../../Source/Kernel/rme_kernel.c ****               interrupt handler, or the kernel send will not be correct.
6871:../../Source/Kernel/rme_kernel.c ****               This function is also used by system calls to pick a random
6872:../../Source/Kernel/rme_kernel.c ****               highest priority thread.
6873:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
6874:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure.
6875:../../Source/Kernel/rme_kernel.c **** Output      : volatile struct RME_Reg_Struct* Reg - The updated register set.
6876:../../Source/Kernel/rme_kernel.c **** Return      : None.
6877:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6878:../../Source/Kernel/rme_kernel.c **** void _RME_Kern_High(struct RME_Reg_Struct* Reg,
6879:../../Source/Kernel/rme_kernel.c ****                     struct RME_CPU_Local* Local)
6880:../../Source/Kernel/rme_kernel.c **** {
 17647              		.loc 1 6880 1
 17648              		.cfi_startproc
 17649              		@ args = 0, pretend = 0, frame = 16
 17650              		@ frame_needed = 1, uses_anonymous_args = 0
 17651 0000 00482DE9 		push	{fp, lr}
 17652              		.cfi_def_cfa_offset 8
 17653              		.cfi_offset 11, -8
 17654              		.cfi_offset 14, -4
 17655 0004 04B08DE2 		add	fp, sp, #4
 17656              		.cfi_def_cfa 11, 4
 17657 0008 10D04DE2 		sub	sp, sp, #16
 17658 000c 10000BE5 		str	r0, [fp, #-16]
 17659 0010 14100BE5 		str	r1, [fp, #-20]
6881:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6882:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6883:../../Source/Kernel/rme_kernel.c **** 
6884:../../Source/Kernel/rme_kernel.c ****     Thd_New=_RME_Run_High(Local);
 17660              		.loc 1 6884 13
 17661 0014 14001BE5 		ldr	r0, [fp, #-20]
 17662 0018 FEFFFFEB 		bl	_RME_Run_High
 17663 001c 08000BE5 		str	r0, [fp, #-8]
6885:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New!=RME_NULL);
 17664              		.loc 1 6885 5
 17665 0020 08301BE5 		ldr	r3, [fp, #-8]
 17666 0024 000053E3 		cmp	r3, #0
 17667 0028 0800001A 		bne	.L1135
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 432


 17668              		.loc 1 6885 5 is_stmt 0 discriminator 1
 17669 002c 003000E3 		movw	r3, #:lower16:.LC6
 17670 0030 003040E3 		movt	r3, #:upper16:.LC6
 17671 0034 002000E3 		movw	r2, #:lower16:.LC7
 17672 0038 002040E3 		movt	r2, #:upper16:.LC7
 17673 003c E51A01E3 		movw	r1, #6885
 17674 0040 000000E3 		movw	r0, #:lower16:.LC8
 17675 0044 000040E3 		movt	r0, #:upper16:.LC8
 17676 0048 FEFFFFEB 		bl	RME_Log
 17677              	.L1136:
 17678              		.loc 1 6885 5
 17679 004c FEFFFFEA 		b	.L1136
 17680              	.L1135:
6886:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 17681              		.loc 1 6886 12 is_stmt 1
 17682 0050 14301BE5 		ldr	r3, [fp, #-20]
 17683 0054 043093E5 		ldr	r3, [r3, #4]
 17684 0058 0C300BE5 		str	r3, [fp, #-12]
6887:../../Source/Kernel/rme_kernel.c **** 
6888:../../Source/Kernel/rme_kernel.c ****     /* Are these two threads the same? */
6889:../../Source/Kernel/rme_kernel.c ****     if(Thd_New==Thd_Cur)
 17685              		.loc 1 6889 7
 17686 005c 08201BE5 		ldr	r2, [fp, #-8]
 17687 0060 0C301BE5 		ldr	r3, [fp, #-12]
 17688 0064 030052E1 		cmp	r2, r3
 17689 0068 1E00000A 		beq	.L1142
6890:../../Source/Kernel/rme_kernel.c ****     {
6891:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6892:../../Source/Kernel/rme_kernel.c **** 
6893:../../Source/Kernel/rme_kernel.c ****         return;
6894:../../Source/Kernel/rme_kernel.c ****     }
6895:../../Source/Kernel/rme_kernel.c ****     else
6896:../../Source/Kernel/rme_kernel.c ****     {
6897:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6898:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6899:../../Source/Kernel/rme_kernel.c ****     }
6900:../../Source/Kernel/rme_kernel.c **** 
6901:../../Source/Kernel/rme_kernel.c ****     /* Check if we need to do the context switch regardless of priority
6902:../../Source/Kernel/rme_kernel.c ****      * because the current thread is not ready yet. */
6903:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.State==RME_THD_READY)
 17690              		.loc 1 6903 22
 17691 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17692 0070 1C3093E5 		ldr	r3, [r3, #28]
 17693              		.loc 1 6903 7
 17694 0074 000053E3 		cmp	r3, #0
 17695 0078 0500001A 		bne	.L1139
6904:../../Source/Kernel/rme_kernel.c ****     {
6905:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6906:../../Source/Kernel/rme_kernel.c **** 
6907:../../Source/Kernel/rme_kernel.c ****         /* Check priority to see if the switch is necessary */
6908:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Prio<=Thd_Cur->Sched.Prio)
 17696              		.loc 1 6908 26
 17697 007c 08301BE5 		ldr	r3, [fp, #-8]
 17698 0080 202093E5 		ldr	r2, [r3, #32]
 17699              		.loc 1 6908 47
 17700 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17701 0088 203093E5 		ldr	r3, [r3, #32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 433


 17702              		.loc 1 6908 11
 17703 008c 030052E1 		cmp	r2, r3
 17704 0090 1600009A 		bls	.L1143
 17705              	.L1139:
6909:../../Source/Kernel/rme_kernel.c ****         {
6910:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6911:../../Source/Kernel/rme_kernel.c **** 
6912:../../Source/Kernel/rme_kernel.c ****             return;
6913:../../Source/Kernel/rme_kernel.c ****         }
6914:../../Source/Kernel/rme_kernel.c ****         else
6915:../../Source/Kernel/rme_kernel.c ****         {
6916:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6917:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6918:../../Source/Kernel/rme_kernel.c ****         }
6919:../../Source/Kernel/rme_kernel.c ****     }
6920:../../Source/Kernel/rme_kernel.c ****     else
6921:../../Source/Kernel/rme_kernel.c ****     {
6922:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6923:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6924:../../Source/Kernel/rme_kernel.c ****     }
6925:../../Source/Kernel/rme_kernel.c **** 
6926:../../Source/Kernel/rme_kernel.c ****     /* We will have a solid context switch on this point. The current 
6927:../../Source/Kernel/rme_kernel.c ****      * thread is not necessarily READY, it could be EXCPEND as well. */
6928:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 17706              		.loc 1 6928 5
 17707 0094 08301BE5 		ldr	r3, [fp, #-8]
 17708 0098 1C3093E5 		ldr	r3, [r3, #28]
 17709 009c 000053E3 		cmp	r3, #0
 17710 00a0 0800000A 		beq	.L1140
 17711              		.loc 1 6928 5 is_stmt 0 discriminator 1
 17712 00a4 003000E3 		movw	r3, #:lower16:.LC6
 17713 00a8 003040E3 		movt	r3, #:upper16:.LC6
 17714 00ac 002000E3 		movw	r2, #:lower16:.LC7
 17715 00b0 002040E3 		movt	r2, #:upper16:.LC7
 17716 00b4 101B01E3 		movw	r1, #6928
 17717 00b8 000000E3 		movw	r0, #:lower16:.LC8
 17718 00bc 000040E3 		movt	r0, #:upper16:.LC8
 17719 00c0 FEFFFFEB 		bl	RME_Log
 17720              	.L1141:
 17721              		.loc 1 6928 5
 17722 00c4 FEFFFFEA 		b	.L1141
 17723              	.L1140:
6929:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 17724              		.loc 1 6929 5 is_stmt 1
 17725 00c8 08201BE5 		ldr	r2, [fp, #-8]
 17726 00cc 0C101BE5 		ldr	r1, [fp, #-12]
 17727 00d0 10001BE5 		ldr	r0, [fp, #-16]
 17728 00d4 FEFFFFEB 		bl	_RME_Run_Swt
6930:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 17729              		.loc 1 6930 19
 17730 00d8 14301BE5 		ldr	r3, [fp, #-20]
 17731 00dc 08201BE5 		ldr	r2, [fp, #-8]
 17732 00e0 042083E5 		str	r2, [r3, #4]
 17733 00e4 020000EA 		b	.L1134
 17734              	.L1142:
6893:../../Source/Kernel/rme_kernel.c ****     }
 17735              		.loc 1 6893 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 434


 17736 00e8 00F020E3 		nop
 17737 00ec 000000EA 		b	.L1134
 17738              	.L1143:
6912:../../Source/Kernel/rme_kernel.c ****         }
 17739              		.loc 1 6912 13
 17740 00f0 00F020E3 		nop
 17741              	.L1134:
6931:../../Source/Kernel/rme_kernel.c **** }
 17742              		.loc 1 6931 1
 17743 00f4 04D04BE2 		sub	sp, fp, #4
 17744              		.cfi_def_cfa 13, 8
 17745              		@ sp needed
 17746 00f8 0088BDE8 		pop	{fp, pc}
 17747              		.cfi_endproc
 17748              	.LFE68:
 17750              		.section	.text._RME_Kern_Snd,"ax",%progbits
 17751              		.align	2
 17752              		.global	_RME_Kern_Snd
 17753              		.syntax unified
 17754              		.arm
 17756              	_RME_Kern_Snd:
 17757              	.LFB69:
6932:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_High ***********************************************/
6933:../../Source/Kernel/rme_kernel.c **** 
6934:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_Snd *****************************************************
6935:../../Source/Kernel/rme_kernel.c **** Description : Try to send a signal to an endpoint from kernel. This is intended
6936:../../Source/Kernel/rme_kernel.c ****               to be called in the interrupt routines in the kernel, and this is
6937:../../Source/Kernel/rme_kernel.c ****               not a system call. The capability passed in must be the root
6938:../../Source/Kernel/rme_kernel.c ****               capability, and this function will not check whether it really is.
6939:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Sig* Cap_Sig - The signal root capability.
6940:../../Source/Kernel/rme_kernel.c **** Output      : None.
6941:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
6942:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6943:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kern_Snd(struct RME_Cap_Sig* Cap_Sig)
6944:../../Source/Kernel/rme_kernel.c **** {
 17758              		.loc 1 6944 1
 17759              		.cfi_startproc
 17760              		@ args = 0, pretend = 0, frame = 16
 17761              		@ frame_needed = 1, uses_anonymous_args = 0
 17762 0000 00482DE9 		push	{fp, lr}
 17763              		.cfi_def_cfa_offset 8
 17764              		.cfi_offset 11, -8
 17765              		.cfi_offset 14, -4
 17766 0004 04B08DE2 		add	fp, sp, #4
 17767              		.cfi_def_cfa 11, 4
 17768 0008 10D04DE2 		sub	sp, sp, #16
 17769 000c 10000BE5 		str	r0, [fp, #-16]
6945:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
6946:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Sig;
6947:../../Source/Kernel/rme_kernel.c ****     
6948:../../Source/Kernel/rme_kernel.c ****     Thd_Sig=Cap_Sig->Thd;
 17770              		.loc 1 6948 12
 17771 0010 10301BE5 		ldr	r3, [fp, #-16]
 17772 0014 183093E5 		ldr	r3, [r3, #24]
 17773 0018 0C300BE5 		str	r3, [fp, #-12]
6949:../../Source/Kernel/rme_kernel.c ****     
6950:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 435


6951:../../Source/Kernel/rme_kernel.c ****     if(Thd_Sig!=RME_NULL)
 17774              		.loc 1 6951 7
 17775 001c 0C301BE5 		ldr	r3, [fp, #-12]
 17776 0020 000053E3 		cmp	r3, #0
 17777 0024 0B00000A 		beq	.L1145
6952:../../Source/Kernel/rme_kernel.c ****     {
6953:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6954:../../Source/Kernel/rme_kernel.c **** 
6955:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Local==RME_CPU_LOCAL())
 17778              		.loc 1 6955 26
 17779 0028 0C301BE5 		ldr	r3, [fp, #-12]
 17780 002c 142093E5 		ldr	r2, [r3, #20]
 17781              		.loc 1 6955 11
 17782 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 17783 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 17784 0038 030052E1 		cmp	r2, r3
 17785 003c 0200001A 		bne	.L1146
6956:../../Source/Kernel/rme_kernel.c ****         {
6957:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6958:../../Source/Kernel/rme_kernel.c **** 
6959:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 17786              		.loc 1 6959 20
 17787 0040 0130A0E3 		mov	r3, #1
 17788 0044 08300BE5 		str	r3, [fp, #-8]
 17789 0048 040000EA 		b	.L1147
 17790              	.L1146:
6960:../../Source/Kernel/rme_kernel.c ****         }
6961:../../Source/Kernel/rme_kernel.c ****         else
6962:../../Source/Kernel/rme_kernel.c ****         {
6963:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6964:../../Source/Kernel/rme_kernel.c **** 
6965:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 17791              		.loc 1 6965 20
 17792 004c 0030A0E3 		mov	r3, #0
 17793 0050 08300BE5 		str	r3, [fp, #-8]
 17794 0054 010000EA 		b	.L1147
 17795              	.L1145:
6966:../../Source/Kernel/rme_kernel.c ****         }
6967:../../Source/Kernel/rme_kernel.c ****     }
6968:../../Source/Kernel/rme_kernel.c ****     else
6969:../../Source/Kernel/rme_kernel.c ****     {
6970:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6971:../../Source/Kernel/rme_kernel.c **** 
6972:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 17796              		.loc 1 6972 16
 17797 0058 0030A0E3 		mov	r3, #0
 17798 005c 08300BE5 		str	r3, [fp, #-8]
 17799              	.L1147:
6973:../../Source/Kernel/rme_kernel.c ****     }
6974:../../Source/Kernel/rme_kernel.c **** 
6975:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 17800              		.loc 1 6975 7
 17801 0060 08301BE5 		ldr	r3, [fp, #-8]
 17802 0064 000053E3 		cmp	r3, #0
 17803 0068 1700000A 		beq	.L1148
6976:../../Source/Kernel/rme_kernel.c ****     {
6977:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 436


6978:../../Source/Kernel/rme_kernel.c **** 
6979:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
6980:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
6981:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
6982:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
6983:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Sig->Ctx.Reg->Reg),1);
 17804              		.loc 1 6983 44
 17805 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17806 0070 483093E5 		ldr	r3, [r3, #72]
 17807              		.loc 1 6983 9
 17808 0074 0110A0E3 		mov	r1, #1
 17809 0078 0300A0E1 		mov	r0, r3
 17810 007c FEFFFFEB 		bl	__RME_Svc_Retval_Set
6984:../../Source/Kernel/rme_kernel.c ****         
6985:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
6986:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Slice!=0U)
 17811              		.loc 1 6986 26
 17812 0080 0C301BE5 		ldr	r3, [fp, #-12]
 17813 0084 183093E5 		ldr	r3, [r3, #24]
 17814              		.loc 1 6986 11
 17815 0088 000053E3 		cmp	r3, #0
 17816 008c 0500000A 		beq	.L1149
6987:../../Source/Kernel/rme_kernel.c ****         {
6988:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6989:../../Source/Kernel/rme_kernel.c **** 
6990:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
6991:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_READY;
 17817              		.loc 1 6991 33
 17818 0090 0C301BE5 		ldr	r3, [fp, #-12]
 17819 0094 0020A0E3 		mov	r2, #0
 17820 0098 1C2083E5 		str	r2, [r3, #28]
6992:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Sig);
 17821              		.loc 1 6992 13
 17822 009c 0C001BE5 		ldr	r0, [fp, #-12]
 17823 00a0 FEFFFFEB 		bl	_RME_Run_Ins
 17824 00a4 040000EA 		b	.L1150
 17825              	.L1149:
6993:../../Source/Kernel/rme_kernel.c ****         }
6994:../../Source/Kernel/rme_kernel.c ****         else
6995:../../Source/Kernel/rme_kernel.c ****         {
6996:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6997:../../Source/Kernel/rme_kernel.c **** 
6998:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6999:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_TIMEOUT;
 17826              		.loc 1 6999 33
 17827 00a8 0C301BE5 		ldr	r3, [fp, #-12]
 17828 00ac 0220A0E3 		mov	r2, #2
 17829 00b0 1C2083E5 		str	r2, [r3, #28]
7000:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Sig);
 17830              		.loc 1 7000 13
 17831 00b4 0C001BE5 		ldr	r0, [fp, #-12]
 17832 00b8 FEFFFFEB 		bl	_RME_Run_Notif
 17833              	.L1150:
7001:../../Source/Kernel/rme_kernel.c ****         }
7002:../../Source/Kernel/rme_kernel.c ****         
7003:../../Source/Kernel/rme_kernel.c ****         /* We will not pick the highest priority thread here immediately, 
7004:../../Source/Kernel/rme_kernel.c ****          * because we may send to a myriad of endpoints in one interrupt, and
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 437


7005:../../Source/Kernel/rme_kernel.c ****          * we hope to perform the context switch only once when exiting that
7006:../../Source/Kernel/rme_kernel.c ****          * handler. Also note that the current thread could be EXCPEND as well;
7007:../../Source/Kernel/rme_kernel.c ****          * this is different from the normal signal sending system call. */
7008:../../Source/Kernel/rme_kernel.c ****         
7009:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7010:../../Source/Kernel/rme_kernel.c ****         Cap_Sig->Thd=RME_NULL;
 17834              		.loc 1 7010 21
 17835 00bc 10301BE5 		ldr	r3, [fp, #-16]
 17836 00c0 0020A0E3 		mov	r2, #0
 17837 00c4 182083E5 		str	r2, [r3, #24]
 17838 00c8 0F0000EA 		b	.L1151
 17839              	.L1148:
7011:../../Source/Kernel/rme_kernel.c ****     }
7012:../../Source/Kernel/rme_kernel.c ****     else
7013:../../Source/Kernel/rme_kernel.c ****     {
7014:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7015:../../Source/Kernel/rme_kernel.c **** 
7016:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, or nobody blocked.
7017:../../Source/Kernel/rme_kernel.c ****          * We just faa the counter value and return. */
7018:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Cap_Sig->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 17840              		.loc 1 7018 12
 17841 00cc 10301BE5 		ldr	r3, [fp, #-16]
 17842 00d0 143083E2 		add	r3, r3, #20
 17843 00d4 0110A0E3 		mov	r1, #1
 17844 00d8 0300A0E1 		mov	r0, r3
 17845 00dc FEFFFFEB 		bl	_RME_Fetch_Add_Single
 17846 00e0 0030A0E1 		mov	r3, r0
 17847              		.loc 1 7018 11 discriminator 1
 17848 00e4 0A0173E3 		cmn	r3, #-2147483646
 17849 00e8 0700009A 		bls	.L1151
7019:../../Source/Kernel/rme_kernel.c ****         {
7020:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7021:../../Source/Kernel/rme_kernel.c **** 
7022:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Cap_Sig->Sig_Num),-1);
 17850              		.loc 1 7022 13
 17851 00ec 10301BE5 		ldr	r3, [fp, #-16]
 17852 00f0 143083E2 		add	r3, r3, #20
 17853 00f4 0010E0E3 		mvn	r1, #0
 17854 00f8 0300A0E1 		mov	r0, r3
 17855 00fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
7023:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 17856              		.loc 1 7023 20
 17857 0100 D13E0FE3 		movw	r3, #65233
 17858 0104 FF3F4FE3 		movt	r3, 65535
 17859 0108 000000EA 		b	.L1152
 17860              	.L1151:
7024:../../Source/Kernel/rme_kernel.c ****         }
7025:../../Source/Kernel/rme_kernel.c ****         else
7026:../../Source/Kernel/rme_kernel.c ****         {
7027:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7028:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7029:../../Source/Kernel/rme_kernel.c ****         }
7030:../../Source/Kernel/rme_kernel.c ****     }
7031:../../Source/Kernel/rme_kernel.c **** 
7032:../../Source/Kernel/rme_kernel.c ****     return 0;
 17861              		.loc 1 7032 12
 17862 010c 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 438


 17863              	.L1152:
7033:../../Source/Kernel/rme_kernel.c **** }
 17864              		.loc 1 7033 1
 17865 0110 0300A0E1 		mov	r0, r3
 17866 0114 04D04BE2 		sub	sp, fp, #4
 17867              		.cfi_def_cfa 13, 8
 17868              		@ sp needed
 17869 0118 0088BDE8 		pop	{fp, pc}
 17870              		.cfi_endproc
 17871              	.LFE69:
 17873              		.section	.text._RME_Sig_Snd,"ax",%progbits
 17874              		.align	2
 17875              		.syntax unified
 17876              		.arm
 17878              	_RME_Sig_Snd:
 17879              	.LFB70:
7034:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_Snd ************************************************/
7035:../../Source/Kernel/rme_kernel.c **** 
7036:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Snd ******************************************************
7037:../../Source/Kernel/rme_kernel.c **** Description : Try to send to a signal endpoint. This system call can cause
7038:../../Source/Kernel/rme_kernel.c ****               a potential context switch.
7039:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7040:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7041:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7042:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7043:../../Source/Kernel/rme_kernel.c **** Output      : None.
7044:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7045:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7046:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Snd(struct RME_Cap_Cpt* Cpt, 
7047:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7048:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
7049:../../Source/Kernel/rme_kernel.c **** {
 17880              		.loc 1 7049 1
 17881              		.cfi_startproc
 17882              		@ args = 0, pretend = 0, frame = 40
 17883              		@ frame_needed = 1, uses_anonymous_args = 0
 17884 0000 00482DE9 		push	{fp, lr}
 17885              		.cfi_def_cfa_offset 8
 17886              		.cfi_offset 11, -8
 17887              		.cfi_offset 14, -4
 17888 0004 04B08DE2 		add	fp, sp, #4
 17889              		.cfi_def_cfa 11, 4
 17890 0008 28D04DE2 		sub	sp, sp, #40
 17891 000c 20000BE5 		str	r0, [fp, #-32]
 17892 0010 24100BE5 		str	r1, [fp, #-36]
 17893 0014 28200BE5 		str	r2, [fp, #-40]
7050:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7051:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7052:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Rcv;
7053:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7054:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7055:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7056:../../Source/Kernel/rme_kernel.c ****     
7057:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7058:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 17894              		.loc 1 7058 5
 17895 0018 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 439


 17896 001c 803003E2 		and	r3, r3, #128
 17897 0020 000053E3 		cmp	r3, #0
 17898 0024 1C00001A 		bne	.L1154
 17899              		.loc 1 7058 5 is_stmt 0 discriminator 1
 17900 0028 20301BE5 		ldr	r3, [fp, #-32]
 17901 002c 142093E5 		ldr	r2, [r3, #20]
 17902 0030 28301BE5 		ldr	r3, [fp, #-40]
 17903 0034 030052E1 		cmp	r2, r3
 17904 0038 0100008A 		bhi	.L1155
 17905              		.loc 1 7058 5 discriminator 3
 17906 003c 0230E0E3 		mvn	r3, #2
 17907              		.loc 1 7058 5
 17908 0040 AF0000EA 		b	.L1156
 17909              	.L1155:
 17910              		.loc 1 7058 5 discriminator 4
 17911 0044 28301BE5 		ldr	r3, [fp, #-40]
 17912 0048 8322A0E1 		lsl	r2, r3, #5
 17913 004c 20301BE5 		ldr	r3, [fp, #-32]
 17914 0050 0C3093E5 		ldr	r3, [r3, #12]
 17915 0054 033082E0 		add	r3, r2, r3
 17916 0058 08300BE5 		str	r3, [fp, #-8]
 17917 005c 08301BE5 		ldr	r3, [fp, #-8]
 17918 0060 0300A0E1 		mov	r0, r3
 17919 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17920 0068 10000BE5 		str	r0, [fp, #-16]
 17921              		.loc 1 7058 5 discriminator 1
 17922 006c 10301BE5 		ldr	r3, [fp, #-16]
 17923 0070 FF3803E2 		and	r3, r3, #16711680
 17924 0074 020853E3 		cmp	r3, #131072
 17925 0078 0100001A 		bne	.L1157
 17926              		.loc 1 7058 5 discriminator 5
 17927 007c 0830E0E3 		mvn	r3, #8
 17928              		.loc 1 7058 5
 17929 0080 9F0000EA 		b	.L1156
 17930              	.L1157:
 17931              		.loc 1 7058 5 discriminator 6
 17932 0084 10301BE5 		ldr	r3, [fp, #-16]
 17933 0088 233CA0E1 		lsr	r3, r3, #24
 17934 008c 080053E3 		cmp	r3, #8
 17935 0090 3F00000A 		beq	.L1158
 17936              		.loc 1 7058 5 discriminator 7
 17937 0094 0130E0E3 		mvn	r3, #1
 17938              		.loc 1 7058 5
 17939 0098 990000EA 		b	.L1156
 17940              	.L1154:
 17941              		.loc 1 7058 5 discriminator 2
 17942 009c 28301BE5 		ldr	r3, [fp, #-40]
 17943 00a0 2324A0E1 		lsr	r2, r3, #8
 17944 00a4 20301BE5 		ldr	r3, [fp, #-32]
 17945 00a8 143093E5 		ldr	r3, [r3, #20]
 17946 00ac 030052E1 		cmp	r2, r3
 17947 00b0 0100003A 		bcc	.L1159
 17948              		.loc 1 7058 5 discriminator 8
 17949 00b4 0230E0E3 		mvn	r3, #2
 17950              		.loc 1 7058 5
 17951 00b8 910000EA 		b	.L1156
 17952              	.L1159:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 440


 17953              		.loc 1 7058 5 discriminator 9
 17954 00bc 28301BE5 		ldr	r3, [fp, #-40]
 17955 00c0 2334A0E1 		lsr	r3, r3, #8
 17956 00c4 8322A0E1 		lsl	r2, r3, #5
 17957 00c8 20301BE5 		ldr	r3, [fp, #-32]
 17958 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17959 00d0 033082E0 		add	r3, r2, r3
 17960 00d4 08300BE5 		str	r3, [fp, #-8]
 17961 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17962 00dc 0300A0E1 		mov	r0, r3
 17963 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17964 00e4 10000BE5 		str	r0, [fp, #-16]
 17965              		.loc 1 7058 5 discriminator 1
 17966 00e8 10301BE5 		ldr	r3, [fp, #-16]
 17967 00ec FF3803E2 		and	r3, r3, #16711680
 17968 00f0 020853E3 		cmp	r3, #131072
 17969 00f4 0100001A 		bne	.L1160
 17970              		.loc 1 7058 5 discriminator 10
 17971 00f8 0830E0E3 		mvn	r3, #8
 17972              		.loc 1 7058 5
 17973 00fc 800000EA 		b	.L1156
 17974              	.L1160:
 17975              		.loc 1 7058 5 discriminator 11
 17976 0100 10301BE5 		ldr	r3, [fp, #-16]
 17977 0104 233CA0E1 		lsr	r3, r3, #24
 17978 0108 030053E3 		cmp	r3, #3
 17979 010c 0100000A 		beq	.L1161
 17980              		.loc 1 7058 5 discriminator 12
 17981 0110 0130E0E3 		mvn	r3, #1
 17982              		.loc 1 7058 5
 17983 0114 7A0000EA 		b	.L1156
 17984              	.L1161:
 17985              		.loc 1 7058 5 discriminator 13
 17986 0118 28301BE5 		ldr	r3, [fp, #-40]
 17987 011c 7F2003E2 		and	r2, r3, #127
 17988 0120 08301BE5 		ldr	r3, [fp, #-8]
 17989 0124 143093E5 		ldr	r3, [r3, #20]
 17990 0128 030052E1 		cmp	r2, r3
 17991 012c 0100003A 		bcc	.L1162
 17992              		.loc 1 7058 5 discriminator 14
 17993 0130 0230E0E3 		mvn	r3, #2
 17994              		.loc 1 7058 5
 17995 0134 720000EA 		b	.L1156
 17996              	.L1162:
 17997              		.loc 1 7058 5 discriminator 15
 17998 0138 28301BE5 		ldr	r3, [fp, #-40]
 17999 013c 7F3003E2 		and	r3, r3, #127
 18000 0140 8322A0E1 		lsl	r2, r3, #5
 18001 0144 08301BE5 		ldr	r3, [fp, #-8]
 18002 0148 0C3093E5 		ldr	r3, [r3, #12]
 18003 014c 033082E0 		add	r3, r2, r3
 18004 0150 08300BE5 		str	r3, [fp, #-8]
 18005 0154 08301BE5 		ldr	r3, [fp, #-8]
 18006 0158 0300A0E1 		mov	r0, r3
 18007 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18008 0160 10000BE5 		str	r0, [fp, #-16]
 18009              		.loc 1 7058 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 441


 18010 0164 10301BE5 		ldr	r3, [fp, #-16]
 18011 0168 FF3803E2 		and	r3, r3, #16711680
 18012 016c 020853E3 		cmp	r3, #131072
 18013 0170 0100001A 		bne	.L1163
 18014              		.loc 1 7058 5 discriminator 16
 18015 0174 0830E0E3 		mvn	r3, #8
 18016              		.loc 1 7058 5
 18017 0178 610000EA 		b	.L1156
 18018              	.L1163:
 18019              		.loc 1 7058 5 discriminator 17
 18020 017c 10301BE5 		ldr	r3, [fp, #-16]
 18021 0180 233CA0E1 		lsr	r3, r3, #24
 18022 0184 080053E3 		cmp	r3, #8
 18023 0188 0100000A 		beq	.L1158
 18024              		.loc 1 7058 5 discriminator 18
 18025 018c 0130E0E3 		mvn	r3, #1
 18026              		.loc 1 7058 5
 18027 0190 5B0000EA 		b	.L1156
 18028              	.L1158:
7059:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7060:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7061:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SND);
 18029              		.loc 1 7061 5 is_stmt 1
 18030 0194 08301BE5 		ldr	r3, [fp, #-8]
 18031 0198 083093E5 		ldr	r3, [r3, #8]
 18032 019c 013003E2 		and	r3, r3, #1
 18033 01a0 000053E3 		cmp	r3, #0
 18034 01a4 0100001A 		bne	.L1164
 18035              		.loc 1 7061 5 is_stmt 0 discriminator 1
 18036 01a8 0630E0E3 		mvn	r3, #6
 18037              		.loc 1 7061 5
 18038 01ac 540000EA 		b	.L1156
 18039              	.L1164:
7062:../../Source/Kernel/rme_kernel.c ****     
7063:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18040              		.loc 1 7063 10 is_stmt 1
 18041 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18042 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18043 01b8 14300BE5 		str	r3, [fp, #-20]
7064:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18044              		.loc 1 7064 14
 18045 01bc 08301BE5 		ldr	r3, [fp, #-8]
 18046 01c0 003093E5 		ldr	r3, [r3]
 18047 01c4 7330FFE6 		uxth	r3, r3
 18048 01c8 000053E3 		cmp	r3, #0
 18049 01cc 0200000A 		beq	.L1165
 18050              		.loc 1 7064 14 is_stmt 0 discriminator 1
 18051 01d0 08301BE5 		ldr	r3, [fp, #-8]
 18052 01d4 043093E5 		ldr	r3, [r3, #4]
 18053 01d8 000000EA 		b	.L1166
 18054              	.L1165:
 18055              		.loc 1 7064 14 discriminator 2
 18056 01dc 08301BE5 		ldr	r3, [fp, #-8]
 18057              	.L1166:
 18058              		.loc 1 7064 13 is_stmt 1 discriminator 4
 18059 01e0 18300BE5 		str	r3, [fp, #-24]
7065:../../Source/Kernel/rme_kernel.c ****     Thd_Rcv=Sig_Root->Thd;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 442


 18060              		.loc 1 7065 12
 18061 01e4 18301BE5 		ldr	r3, [fp, #-24]
 18062 01e8 183093E5 		ldr	r3, [r3, #24]
 18063 01ec 1C300BE5 		str	r3, [fp, #-28]
7066:../../Source/Kernel/rme_kernel.c **** 
7067:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7068:../../Source/Kernel/rme_kernel.c ****     if(Thd_Rcv!=RME_NULL)
 18064              		.loc 1 7068 7
 18065 01f0 1C301BE5 		ldr	r3, [fp, #-28]
 18066 01f4 000053E3 		cmp	r3, #0
 18067 01f8 0A00000A 		beq	.L1167
7069:../../Source/Kernel/rme_kernel.c ****     {
7070:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7071:../../Source/Kernel/rme_kernel.c **** 
7072:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Local==Local)
 18068              		.loc 1 7072 26
 18069 01fc 1C301BE5 		ldr	r3, [fp, #-28]
 18070 0200 143093E5 		ldr	r3, [r3, #20]
 18071              		.loc 1 7072 11
 18072 0204 14201BE5 		ldr	r2, [fp, #-20]
 18073 0208 030052E1 		cmp	r2, r3
 18074 020c 0200001A 		bne	.L1168
7073:../../Source/Kernel/rme_kernel.c ****         {
7074:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7075:../../Source/Kernel/rme_kernel.c **** 
7076:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 18075              		.loc 1 7076 20
 18076 0210 0130A0E3 		mov	r3, #1
 18077 0214 0C300BE5 		str	r3, [fp, #-12]
 18078 0218 040000EA 		b	.L1169
 18079              	.L1168:
7077:../../Source/Kernel/rme_kernel.c ****         }
7078:../../Source/Kernel/rme_kernel.c ****         else
7079:../../Source/Kernel/rme_kernel.c ****         {
7080:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7081:../../Source/Kernel/rme_kernel.c **** 
7082:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 18080              		.loc 1 7082 20
 18081 021c 0030A0E3 		mov	r3, #0
 18082 0220 0C300BE5 		str	r3, [fp, #-12]
 18083 0224 010000EA 		b	.L1169
 18084              	.L1167:
7083:../../Source/Kernel/rme_kernel.c ****         }
7084:../../Source/Kernel/rme_kernel.c ****     }
7085:../../Source/Kernel/rme_kernel.c ****     else
7086:../../Source/Kernel/rme_kernel.c ****     {
7087:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7088:../../Source/Kernel/rme_kernel.c **** 
7089:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 18085              		.loc 1 7089 16
 18086 0228 0030A0E3 		mov	r3, #0
 18087 022c 0C300BE5 		str	r3, [fp, #-12]
 18088              	.L1169:
7090:../../Source/Kernel/rme_kernel.c ****     }
7091:../../Source/Kernel/rme_kernel.c ****     
7092:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 18089              		.loc 1 7092 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 443


 18090 0230 0C301BE5 		ldr	r3, [fp, #-12]
 18091 0234 000053E3 		cmp	r3, #0
 18092 0238 1D00000A 		beq	.L1170
7093:../../Source/Kernel/rme_kernel.c ****     {
7094:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7095:../../Source/Kernel/rme_kernel.c **** 
7096:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7097:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18093              		.loc 1 7097 9
 18094 023c 0010A0E3 		mov	r1, #0
 18095 0240 24001BE5 		ldr	r0, [fp, #-36]
 18096 0244 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7098:../../Source/Kernel/rme_kernel.c ****         
7099:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7100:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7101:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7102:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7103:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Rcv->Ctx.Reg->Reg),1);
 18097              		.loc 1 7103 44
 18098 0248 1C301BE5 		ldr	r3, [fp, #-28]
 18099 024c 483093E5 		ldr	r3, [r3, #72]
 18100              		.loc 1 7103 9
 18101 0250 0110A0E3 		mov	r1, #1
 18102 0254 0300A0E1 		mov	r0, r3
 18103 0258 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7104:../../Source/Kernel/rme_kernel.c ****         
7105:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7106:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Slice!=0U)
 18104              		.loc 1 7106 26
 18105 025c 1C301BE5 		ldr	r3, [fp, #-28]
 18106 0260 183093E5 		ldr	r3, [r3, #24]
 18107              		.loc 1 7106 11
 18108 0264 000053E3 		cmp	r3, #0
 18109 0268 0500000A 		beq	.L1171
7107:../../Source/Kernel/rme_kernel.c ****         {
7108:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7109:../../Source/Kernel/rme_kernel.c **** 
7110:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7111:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_READY;
 18110              		.loc 1 7111 33
 18111 026c 1C301BE5 		ldr	r3, [fp, #-28]
 18112 0270 0020A0E3 		mov	r2, #0
 18113 0274 1C2083E5 		str	r2, [r3, #28]
7112:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Rcv);
 18114              		.loc 1 7112 13
 18115 0278 1C001BE5 		ldr	r0, [fp, #-28]
 18116 027c FEFFFFEB 		bl	_RME_Run_Ins
 18117 0280 040000EA 		b	.L1172
 18118              	.L1171:
7113:../../Source/Kernel/rme_kernel.c ****         }
7114:../../Source/Kernel/rme_kernel.c ****         else
7115:../../Source/Kernel/rme_kernel.c ****         {
7116:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7117:../../Source/Kernel/rme_kernel.c **** 
7118:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7119:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_TIMEOUT;
 18119              		.loc 1 7119 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 444


 18120 0284 1C301BE5 		ldr	r3, [fp, #-28]
 18121 0288 0220A0E3 		mov	r2, #2
 18122 028c 1C2083E5 		str	r2, [r3, #28]
7120:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Rcv);
 18123              		.loc 1 7120 13
 18124 0290 1C001BE5 		ldr	r0, [fp, #-28]
 18125 0294 FEFFFFEB 		bl	_RME_Run_Notif
 18126              	.L1172:
7121:../../Source/Kernel/rme_kernel.c ****         }
7122:../../Source/Kernel/rme_kernel.c ****         
7123:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread to run */
7124:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 18127              		.loc 1 7124 9
 18128 0298 14101BE5 		ldr	r1, [fp, #-20]
 18129 029c 24001BE5 		ldr	r0, [fp, #-36]
 18130 02a0 FEFFFFEB 		bl	_RME_Kern_High
7125:../../Source/Kernel/rme_kernel.c ****         
7126:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7127:../../Source/Kernel/rme_kernel.c ****         Sig_Root->Thd=RME_NULL;
 18131              		.loc 1 7127 22
 18132 02a4 18301BE5 		ldr	r3, [fp, #-24]
 18133 02a8 0020A0E3 		mov	r2, #0
 18134 02ac 182083E5 		str	r2, [r3, #24]
 18135 02b0 120000EA 		b	.L1173
 18136              	.L1170:
7128:../../Source/Kernel/rme_kernel.c ****     }
7129:../../Source/Kernel/rme_kernel.c ****     else
7130:../../Source/Kernel/rme_kernel.c ****     {
7131:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7132:../../Source/Kernel/rme_kernel.c **** 
7133:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, we just faa and return */
7134:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Sig_Root->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 18137              		.loc 1 7134 12
 18138 02b4 18301BE5 		ldr	r3, [fp, #-24]
 18139 02b8 143083E2 		add	r3, r3, #20
 18140 02bc 0110A0E3 		mov	r1, #1
 18141 02c0 0300A0E1 		mov	r0, r3
 18142 02c4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 18143 02c8 0030A0E1 		mov	r3, r0
 18144              		.loc 1 7134 11 discriminator 1
 18145 02cc 0A0173E3 		cmn	r3, #-2147483646
 18146 02d0 0700009A 		bls	.L1174
7135:../../Source/Kernel/rme_kernel.c ****         {
7136:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7137:../../Source/Kernel/rme_kernel.c **** 
7138:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Sig_Root->Sig_Num),-1);
 18147              		.loc 1 7138 13
 18148 02d4 18301BE5 		ldr	r3, [fp, #-24]
 18149 02d8 143083E2 		add	r3, r3, #20
 18150 02dc 0010E0E3 		mvn	r1, #0
 18151 02e0 0300A0E1 		mov	r0, r3
 18152 02e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7139:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 18153              		.loc 1 7139 20
 18154 02e8 D13E0FE3 		movw	r3, #65233
 18155 02ec FF3F4FE3 		movt	r3, 65535
 18156 02f0 030000EA 		b	.L1156
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 445


 18157              	.L1174:
7140:../../Source/Kernel/rme_kernel.c ****         }
7141:../../Source/Kernel/rme_kernel.c ****         else
7142:../../Source/Kernel/rme_kernel.c ****         {
7143:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7144:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7145:../../Source/Kernel/rme_kernel.c ****         }
7146:../../Source/Kernel/rme_kernel.c ****         
7147:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7148:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18158              		.loc 1 7148 9
 18159 02f4 0010A0E3 		mov	r1, #0
 18160 02f8 24001BE5 		ldr	r0, [fp, #-36]
 18161 02fc FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18162              	.L1173:
7149:../../Source/Kernel/rme_kernel.c ****     }
7150:../../Source/Kernel/rme_kernel.c **** 
7151:../../Source/Kernel/rme_kernel.c ****     return 0;
 18163              		.loc 1 7151 12
 18164 0300 0030A0E3 		mov	r3, #0
 18165              	.L1156:
7152:../../Source/Kernel/rme_kernel.c **** }
 18166              		.loc 1 7152 1
 18167 0304 0300A0E1 		mov	r0, r3
 18168 0308 04D04BE2 		sub	sp, fp, #4
 18169              		.cfi_def_cfa 13, 8
 18170              		@ sp needed
 18171 030c 0088BDE8 		pop	{fp, pc}
 18172              		.cfi_endproc
 18173              	.LFE70:
 18175              		.section	.text._RME_Sig_Rcv,"ax",%progbits
 18176              		.align	2
 18177              		.syntax unified
 18178              		.arm
 18180              	_RME_Sig_Rcv:
 18181              	.LFB71:
7153:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Snd *************************************************/
7154:../../Source/Kernel/rme_kernel.c **** 
7155:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Rcv ******************************************************
7156:../../Source/Kernel/rme_kernel.c **** Description : Try to receive from a signal endpoint. The rules for signal
7157:../../Source/Kernel/rme_kernel.c ****               endpoint receive is:
7158:../../Source/Kernel/rme_kernel.c ****               1.If a receive endpoint have many send endpoints, everyone can
7159:../../Source/Kernel/rme_kernel.c ****                 send to it, and sending to it will increase the count by 1.
7160:../../Source/Kernel/rme_kernel.c ****               2.If some thread blocks on a receive endpoint, the wakeup is only
7161:../../Source/Kernel/rme_kernel.c ****                 possible from the same core that thread is on.
7162:../../Source/Kernel/rme_kernel.c ****               3.It is not recommended to let 2 cores operate on the rcv endpoint
7163:../../Source/Kernel/rme_kernel.c ****                 simutaneously.
7164:../../Source/Kernel/rme_kernel.c ****               This system call can potentially trigger a context switch.
7165:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7166:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
7167:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7168:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7169:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Option - The receive option.
7170:../../Source/Kernel/rme_kernel.c **** Output      : None.
7171:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, a non-negative number containing the 
7172:../../Source/Kernel/rme_kernel.c ****                           number of signals received; or an error code.
7173:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 446


7174:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Rcv(struct RME_Cap_Cpt* Cpt,
7175:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7176:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig,
7177:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Option)
7178:../../Source/Kernel/rme_kernel.c **** {
 18182              		.loc 1 7178 1
 18183              		.cfi_startproc
 18184              		@ args = 0, pretend = 0, frame = 40
 18185              		@ frame_needed = 1, uses_anonymous_args = 0
 18186 0000 00482DE9 		push	{fp, lr}
 18187              		.cfi_def_cfa_offset 8
 18188              		.cfi_offset 11, -8
 18189              		.cfi_offset 14, -4
 18190 0004 04B08DE2 		add	fp, sp, #4
 18191              		.cfi_def_cfa 11, 4
 18192 0008 28D04DE2 		sub	sp, sp, #40
 18193 000c 20000BE5 		str	r0, [fp, #-32]
 18194 0010 24100BE5 		str	r1, [fp, #-36]
 18195 0014 28200BE5 		str	r2, [fp, #-40]
 18196 0018 2C300BE5 		str	r3, [fp, #-44]
7179:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7180:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7181:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7182:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7183:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Value;
7184:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7185:../../Source/Kernel/rme_kernel.c ****     
7186:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7187:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 18197              		.loc 1 7187 5
 18198 001c 28301BE5 		ldr	r3, [fp, #-40]
 18199 0020 803003E2 		and	r3, r3, #128
 18200 0024 000053E3 		cmp	r3, #0
 18201 0028 1C00001A 		bne	.L1176
 18202              		.loc 1 7187 5 is_stmt 0 discriminator 1
 18203 002c 20301BE5 		ldr	r3, [fp, #-32]
 18204 0030 142093E5 		ldr	r2, [r3, #20]
 18205 0034 28301BE5 		ldr	r3, [fp, #-40]
 18206 0038 030052E1 		cmp	r2, r3
 18207 003c 0100008A 		bhi	.L1177
 18208              		.loc 1 7187 5 discriminator 3
 18209 0040 0230E0E3 		mvn	r3, #2
 18210              		.loc 1 7187 5
 18211 0044 F60000EA 		b	.L1178
 18212              	.L1177:
 18213              		.loc 1 7187 5 discriminator 4
 18214 0048 28301BE5 		ldr	r3, [fp, #-40]
 18215 004c 8322A0E1 		lsl	r2, r3, #5
 18216 0050 20301BE5 		ldr	r3, [fp, #-32]
 18217 0054 0C3093E5 		ldr	r3, [r3, #12]
 18218 0058 033082E0 		add	r3, r2, r3
 18219 005c 08300BE5 		str	r3, [fp, #-8]
 18220 0060 08301BE5 		ldr	r3, [fp, #-8]
 18221 0064 0300A0E1 		mov	r0, r3
 18222 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18223 006c 0C000BE5 		str	r0, [fp, #-12]
 18224              		.loc 1 7187 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 447


 18225 0070 0C301BE5 		ldr	r3, [fp, #-12]
 18226 0074 FF3803E2 		and	r3, r3, #16711680
 18227 0078 020853E3 		cmp	r3, #131072
 18228 007c 0100001A 		bne	.L1179
 18229              		.loc 1 7187 5 discriminator 5
 18230 0080 0830E0E3 		mvn	r3, #8
 18231              		.loc 1 7187 5
 18232 0084 E60000EA 		b	.L1178
 18233              	.L1179:
 18234              		.loc 1 7187 5 discriminator 6
 18235 0088 0C301BE5 		ldr	r3, [fp, #-12]
 18236 008c 233CA0E1 		lsr	r3, r3, #24
 18237 0090 080053E3 		cmp	r3, #8
 18238 0094 3F00000A 		beq	.L1180
 18239              		.loc 1 7187 5 discriminator 7
 18240 0098 0130E0E3 		mvn	r3, #1
 18241              		.loc 1 7187 5
 18242 009c E00000EA 		b	.L1178
 18243              	.L1176:
 18244              		.loc 1 7187 5 discriminator 2
 18245 00a0 28301BE5 		ldr	r3, [fp, #-40]
 18246 00a4 2324A0E1 		lsr	r2, r3, #8
 18247 00a8 20301BE5 		ldr	r3, [fp, #-32]
 18248 00ac 143093E5 		ldr	r3, [r3, #20]
 18249 00b0 030052E1 		cmp	r2, r3
 18250 00b4 0100003A 		bcc	.L1181
 18251              		.loc 1 7187 5 discriminator 8
 18252 00b8 0230E0E3 		mvn	r3, #2
 18253              		.loc 1 7187 5
 18254 00bc D80000EA 		b	.L1178
 18255              	.L1181:
 18256              		.loc 1 7187 5 discriminator 9
 18257 00c0 28301BE5 		ldr	r3, [fp, #-40]
 18258 00c4 2334A0E1 		lsr	r3, r3, #8
 18259 00c8 8322A0E1 		lsl	r2, r3, #5
 18260 00cc 20301BE5 		ldr	r3, [fp, #-32]
 18261 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18262 00d4 033082E0 		add	r3, r2, r3
 18263 00d8 08300BE5 		str	r3, [fp, #-8]
 18264 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18265 00e0 0300A0E1 		mov	r0, r3
 18266 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18267 00e8 0C000BE5 		str	r0, [fp, #-12]
 18268              		.loc 1 7187 5 discriminator 1
 18269 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 18270 00f0 FF3803E2 		and	r3, r3, #16711680
 18271 00f4 020853E3 		cmp	r3, #131072
 18272 00f8 0100001A 		bne	.L1182
 18273              		.loc 1 7187 5 discriminator 10
 18274 00fc 0830E0E3 		mvn	r3, #8
 18275              		.loc 1 7187 5
 18276 0100 C70000EA 		b	.L1178
 18277              	.L1182:
 18278              		.loc 1 7187 5 discriminator 11
 18279 0104 0C301BE5 		ldr	r3, [fp, #-12]
 18280 0108 233CA0E1 		lsr	r3, r3, #24
 18281 010c 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 448


 18282 0110 0100000A 		beq	.L1183
 18283              		.loc 1 7187 5 discriminator 12
 18284 0114 0130E0E3 		mvn	r3, #1
 18285              		.loc 1 7187 5
 18286 0118 C10000EA 		b	.L1178
 18287              	.L1183:
 18288              		.loc 1 7187 5 discriminator 13
 18289 011c 28301BE5 		ldr	r3, [fp, #-40]
 18290 0120 7F2003E2 		and	r2, r3, #127
 18291 0124 08301BE5 		ldr	r3, [fp, #-8]
 18292 0128 143093E5 		ldr	r3, [r3, #20]
 18293 012c 030052E1 		cmp	r2, r3
 18294 0130 0100003A 		bcc	.L1184
 18295              		.loc 1 7187 5 discriminator 14
 18296 0134 0230E0E3 		mvn	r3, #2
 18297              		.loc 1 7187 5
 18298 0138 B90000EA 		b	.L1178
 18299              	.L1184:
 18300              		.loc 1 7187 5 discriminator 15
 18301 013c 28301BE5 		ldr	r3, [fp, #-40]
 18302 0140 7F3003E2 		and	r3, r3, #127
 18303 0144 8322A0E1 		lsl	r2, r3, #5
 18304 0148 08301BE5 		ldr	r3, [fp, #-8]
 18305 014c 0C3093E5 		ldr	r3, [r3, #12]
 18306 0150 033082E0 		add	r3, r2, r3
 18307 0154 08300BE5 		str	r3, [fp, #-8]
 18308 0158 08301BE5 		ldr	r3, [fp, #-8]
 18309 015c 0300A0E1 		mov	r0, r3
 18310 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18311 0164 0C000BE5 		str	r0, [fp, #-12]
 18312              		.loc 1 7187 5 discriminator 1
 18313 0168 0C301BE5 		ldr	r3, [fp, #-12]
 18314 016c FF3803E2 		and	r3, r3, #16711680
 18315 0170 020853E3 		cmp	r3, #131072
 18316 0174 0100001A 		bne	.L1185
 18317              		.loc 1 7187 5 discriminator 16
 18318 0178 0830E0E3 		mvn	r3, #8
 18319              		.loc 1 7187 5
 18320 017c A80000EA 		b	.L1178
 18321              	.L1185:
 18322              		.loc 1 7187 5 discriminator 17
 18323 0180 0C301BE5 		ldr	r3, [fp, #-12]
 18324 0184 233CA0E1 		lsr	r3, r3, #24
 18325 0188 080053E3 		cmp	r3, #8
 18326 018c 0100000A 		beq	.L1180
 18327              		.loc 1 7187 5 discriminator 18
 18328 0190 0130E0E3 		mvn	r3, #1
 18329              		.loc 1 7187 5
 18330 0194 A20000EA 		b	.L1178
 18331              	.L1180:
7188:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7189:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7190:../../Source/Kernel/rme_kernel.c ****     switch(Option)
 18332              		.loc 1 7190 5 is_stmt 1
 18333 0198 2C201BE5 		ldr	r2, [fp, #-44]
 18334 019c 8C329FE5 		ldr	r3, .L1217
 18335 01a0 030052E3 		cmp	r2, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 449


 18336 01a4 1D00008A 		bhi	.L1186
 18337 01a8 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 18338              	.Lrtx1188:
 18339 01ac 00F020E3 		nop
 18340              		.section	.rodata._RME_Sig_Rcv,"a",%progbits
 18341              		.align	2
 18342              	.L1188:
 18343 0000 B0010000 		.word	.L1191
 18344 0004 CC010000 		.word	.L1190
 18345 0008 E8010000 		.word	.L1189
 18346 000c 04020000 		.word	.L1187
 18347              		.section	.text._RME_Sig_Rcv
 18348              		.p2align 2
 18349              	.L1191:
7191:../../Source/Kernel/rme_kernel.c ****     {
7192:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BS:
7193:../../Source/Kernel/rme_kernel.c ****         {
7194:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7195:../../Source/Kernel/rme_kernel.c **** 
7196:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BS);
 18350              		.loc 1 7196 13
 18351 01b0 08301BE5 		ldr	r3, [fp, #-8]
 18352 01b4 083093E5 		ldr	r3, [r3, #8]
 18353 01b8 023003E2 		and	r3, r3, #2
 18354 01bc 000053E3 		cmp	r3, #0
 18355 01c0 1800001A 		bne	.L1213
 18356              		.loc 1 7196 13 is_stmt 0 discriminator 1
 18357 01c4 0630E0E3 		mvn	r3, #6
 18358              		.loc 1 7196 13
 18359 01c8 950000EA 		b	.L1178
 18360              	.L1190:
7197:../../Source/Kernel/rme_kernel.c ****             break;
7198:../../Source/Kernel/rme_kernel.c ****         }
7199:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BM:
7200:../../Source/Kernel/rme_kernel.c ****         {
7201:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7202:../../Source/Kernel/rme_kernel.c ****             
7203:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BM);
 18361              		.loc 1 7203 13 is_stmt 1
 18362 01cc 08301BE5 		ldr	r3, [fp, #-8]
 18363 01d0 083093E5 		ldr	r3, [r3, #8]
 18364 01d4 043003E2 		and	r3, r3, #4
 18365 01d8 000053E3 		cmp	r3, #0
 18366 01dc 1300001A 		bne	.L1214
 18367              		.loc 1 7203 13 is_stmt 0 discriminator 1
 18368 01e0 0630E0E3 		mvn	r3, #6
 18369              		.loc 1 7203 13
 18370 01e4 8E0000EA 		b	.L1178
 18371              	.L1189:
7204:../../Source/Kernel/rme_kernel.c ****             break;
7205:../../Source/Kernel/rme_kernel.c ****         }
7206:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NS:
7207:../../Source/Kernel/rme_kernel.c ****         {
7208:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7209:../../Source/Kernel/rme_kernel.c ****             
7210:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NS);
 18372              		.loc 1 7210 13 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 450


 18373 01e8 08301BE5 		ldr	r3, [fp, #-8]
 18374 01ec 083093E5 		ldr	r3, [r3, #8]
 18375 01f0 083003E2 		and	r3, r3, #8
 18376 01f4 000053E3 		cmp	r3, #0
 18377 01f8 0E00001A 		bne	.L1215
 18378              		.loc 1 7210 13 is_stmt 0 discriminator 1
 18379 01fc 0630E0E3 		mvn	r3, #6
 18380              		.loc 1 7210 13
 18381 0200 870000EA 		b	.L1178
 18382              	.L1187:
7211:../../Source/Kernel/rme_kernel.c ****             break;
7212:../../Source/Kernel/rme_kernel.c ****         }
7213:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NM:
7214:../../Source/Kernel/rme_kernel.c ****         {
7215:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7216:../../Source/Kernel/rme_kernel.c ****             
7217:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NM);
 18383              		.loc 1 7217 13 is_stmt 1
 18384 0204 08301BE5 		ldr	r3, [fp, #-8]
 18385 0208 083093E5 		ldr	r3, [r3, #8]
 18386 020c 103003E2 		and	r3, r3, #16
 18387 0210 000053E3 		cmp	r3, #0
 18388 0214 0900001A 		bne	.L1216
 18389              		.loc 1 7217 13 is_stmt 0 discriminator 1
 18390 0218 0630E0E3 		mvn	r3, #6
 18391              		.loc 1 7217 13
 18392 021c 800000EA 		b	.L1178
 18393              	.L1186:
7218:../../Source/Kernel/rme_kernel.c ****             break;
7219:../../Source/Kernel/rme_kernel.c ****         }
7220:../../Source/Kernel/rme_kernel.c ****         default:
7221:../../Source/Kernel/rme_kernel.c ****         {
7222:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7223:../../Source/Kernel/rme_kernel.c ****             
7224:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_ACT;
 18394              		.loc 1 7224 20 is_stmt 1
 18395 0220 4B3FE0E3 		mvn	r3, #300
 18396 0224 7E0000EA 		b	.L1178
 18397              	.L1213:
7197:../../Source/Kernel/rme_kernel.c ****         }
 18398              		.loc 1 7197 13
 18399 0228 00F020E3 		nop
 18400 022c 040000EA 		b	.L1193
 18401              	.L1214:
7204:../../Source/Kernel/rme_kernel.c ****         }
 18402              		.loc 1 7204 13
 18403 0230 00F020E3 		nop
 18404 0234 020000EA 		b	.L1193
 18405              	.L1215:
7211:../../Source/Kernel/rme_kernel.c ****         }
 18406              		.loc 1 7211 13
 18407 0238 00F020E3 		nop
 18408 023c 000000EA 		b	.L1193
 18409              	.L1216:
7218:../../Source/Kernel/rme_kernel.c ****         }
 18410              		.loc 1 7218 13
 18411 0240 00F020E3 		nop
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 451


 18412              	.L1193:
7225:../../Source/Kernel/rme_kernel.c ****         }
7226:../../Source/Kernel/rme_kernel.c ****     }
7227:../../Source/Kernel/rme_kernel.c ****     
7228:../../Source/Kernel/rme_kernel.c ****     /* Convert to root cap */
7229:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18413              		.loc 1 7229 14
 18414 0244 08301BE5 		ldr	r3, [fp, #-8]
 18415 0248 003093E5 		ldr	r3, [r3]
 18416 024c 7330FFE6 		uxth	r3, r3
 18417 0250 000053E3 		cmp	r3, #0
 18418 0254 0200000A 		beq	.L1197
 18419              		.loc 1 7229 14 is_stmt 0 discriminator 1
 18420 0258 08301BE5 		ldr	r3, [fp, #-8]
 18421 025c 043093E5 		ldr	r3, [r3, #4]
 18422 0260 000000EA 		b	.L1198
 18423              	.L1197:
 18424              		.loc 1 7229 14 discriminator 2
 18425 0264 08301BE5 		ldr	r3, [fp, #-8]
 18426              	.L1198:
 18427              		.loc 1 7229 13 is_stmt 1 discriminator 4
 18428 0268 10300BE5 		str	r3, [fp, #-16]
7230:../../Source/Kernel/rme_kernel.c ****     
7231:../../Source/Kernel/rme_kernel.c ****     /* See if we can receive on that endpoint - if someone blocks on it, we 
7232:../../Source/Kernel/rme_kernel.c ****      * must wait for it to unblock before we can proceed. */
7233:../../Source/Kernel/rme_kernel.c ****     if(Sig_Root->Thd!=RME_NULL)
 18429              		.loc 1 7233 16
 18430 026c 10301BE5 		ldr	r3, [fp, #-16]
 18431 0270 183093E5 		ldr	r3, [r3, #24]
 18432              		.loc 1 7233 7
 18433 0274 000053E3 		cmp	r3, #0
 18434 0278 0100000A 		beq	.L1199
7234:../../Source/Kernel/rme_kernel.c ****     {
7235:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7236:../../Source/Kernel/rme_kernel.c **** 
7237:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 18435              		.loc 1 7237 16
 18436 027c 4B3FE0E3 		mvn	r3, #300
 18437 0280 670000EA 		b	.L1178
 18438              	.L1199:
7238:../../Source/Kernel/rme_kernel.c ****     }
7239:../../Source/Kernel/rme_kernel.c ****     else
7240:../../Source/Kernel/rme_kernel.c ****     {
7241:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7242:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7243:../../Source/Kernel/rme_kernel.c ****     }
7244:../../Source/Kernel/rme_kernel.c ****     
7245:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18439              		.loc 1 7245 10
 18440 0284 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18441 0288 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18442 028c 14300BE5 		str	r3, [fp, #-20]
7246:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 18443              		.loc 1 7246 12
 18444 0290 14301BE5 		ldr	r3, [fp, #-20]
 18445 0294 043093E5 		ldr	r3, [r3, #4]
 18446 0298 18300BE5 		str	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 452


7247:../../Source/Kernel/rme_kernel.c ****     
7248:../../Source/Kernel/rme_kernel.c ****     /* Check if we trying to let a boot-time thread block on a signal, which is
7249:../../Source/Kernel/rme_kernel.c ****      * disallowed. Additionally, if the current thread have no timeslice left
7250:../../Source/Kernel/rme_kernel.c ****      * (which shouldn't happen under any circumstances), we assert and die. */
7251:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_Cur->Sched.Slice!=0U);
 18447              		.loc 1 7251 5
 18448 029c 18301BE5 		ldr	r3, [fp, #-24]
 18449 02a0 183093E5 		ldr	r3, [r3, #24]
 18450 02a4 000053E3 		cmp	r3, #0
 18451 02a8 0800001A 		bne	.L1200
 18452              		.loc 1 7251 5 is_stmt 0 discriminator 1
 18453 02ac 003000E3 		movw	r3, #:lower16:.LC6
 18454 02b0 003040E3 		movt	r3, #:upper16:.LC6
 18455 02b4 002000E3 		movw	r2, #:lower16:.LC7
 18456 02b8 002040E3 		movt	r2, #:upper16:.LC7
 18457 02bc 531C01E3 		movw	r1, #7251
 18458 02c0 000000E3 		movw	r0, #:lower16:.LC8
 18459 02c4 000040E3 		movt	r0, #:upper16:.LC8
 18460 02c8 FEFFFFEB 		bl	RME_Log
 18461              	.L1201:
 18462              		.loc 1 7251 5
 18463 02cc FEFFFFEA 		b	.L1201
 18464              	.L1200:
7252:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 18465              		.loc 1 7252 22 is_stmt 1
 18466 02d0 18301BE5 		ldr	r3, [fp, #-24]
 18467 02d4 183093E5 		ldr	r3, [r3, #24]
 18468              		.loc 1 7252 7
 18469 02d8 060173E3 		cmn	r3, #-2147483647
 18470 02dc 0200001A 		bne	.L1202
7253:../../Source/Kernel/rme_kernel.c ****     {
7254:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7255:../../Source/Kernel/rme_kernel.c **** 
7256:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_BOOT;
 18471              		.loc 1 7256 16
 18472 02e0 CD3E0FE3 		movw	r3, #65229
 18473 02e4 FF3F4FE3 		movt	r3, 65535
 18474 02e8 4D0000EA 		b	.L1178
 18475              	.L1202:
7257:../../Source/Kernel/rme_kernel.c ****     }
7258:../../Source/Kernel/rme_kernel.c ****     else
7259:../../Source/Kernel/rme_kernel.c ****     {
7260:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7261:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7262:../../Source/Kernel/rme_kernel.c ****     }
7263:../../Source/Kernel/rme_kernel.c **** 
7264:../../Source/Kernel/rme_kernel.c ****     /* Check if there are signals available */
7265:../../Source/Kernel/rme_kernel.c ****     Old_Value=Sig_Root->Sig_Num;
 18476              		.loc 1 7265 14
 18477 02ec 10301BE5 		ldr	r3, [fp, #-16]
 18478 02f0 143093E5 		ldr	r3, [r3, #20]
 18479 02f4 1C300BE5 		str	r3, [fp, #-28]
7266:../../Source/Kernel/rme_kernel.c ****     if(Old_Value>0U)
 18480              		.loc 1 7266 7
 18481 02f8 1C301BE5 		ldr	r3, [fp, #-28]
 18482 02fc 000053E3 		cmp	r3, #0
 18483 0300 2600000A 		beq	.L1203
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 453


7267:../../Source/Kernel/rme_kernel.c ****     {
7268:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7269:../../Source/Kernel/rme_kernel.c **** 
7270:../../Source/Kernel/rme_kernel.c ****         /* Can't use faa, other cores may reduce count to zero in the meantime */
7271:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_NS))
 18484              		.loc 1 7271 11
 18485 0304 2C301BE5 		ldr	r3, [fp, #-44]
 18486 0308 000053E3 		cmp	r3, #0
 18487 030c 0200000A 		beq	.L1204
 18488              		.loc 1 7271 32 discriminator 1
 18489 0310 2C301BE5 		ldr	r3, [fp, #-44]
 18490 0314 020053E3 		cmp	r3, #2
 18491 0318 0F00001A 		bne	.L1205
 18492              	.L1204:
7272:../../Source/Kernel/rme_kernel.c ****         {
7273:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7274:../../Source/Kernel/rme_kernel.c **** 
7275:../../Source/Kernel/rme_kernel.c ****             /* Try to take one */
7276:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18493              		.loc 1 7276 16
 18494 031c 10301BE5 		ldr	r3, [fp, #-16]
 18495 0320 140083E2 		add	r0, r3, #20
 18496 0324 1C301BE5 		ldr	r3, [fp, #-28]
 18497 0328 013043E2 		sub	r3, r3, #1
 18498 032c 0320A0E1 		mov	r2, r3
 18499 0330 1C101BE5 		ldr	r1, [fp, #-28]
 18500 0334 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18501 0338 0030A0E1 		mov	r3, r0
 18502              		.loc 1 7276 15 discriminator 1
 18503 033c 000053E3 		cmp	r3, #0
 18504 0340 0100001A 		bne	.L1206
7277:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7278:../../Source/Kernel/rme_kernel.c ****                              Old_Value-1U)==RME_CASFAIL)
7279:../../Source/Kernel/rme_kernel.c ****             {
7280:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7281:../../Source/Kernel/rme_kernel.c **** 
7282:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18505              		.loc 1 7282 24
 18506 0344 133EE0E3 		mvn	r3, #304
 18507 0348 350000EA 		b	.L1178
 18508              	.L1206:
7283:../../Source/Kernel/rme_kernel.c ****             }
7284:../../Source/Kernel/rme_kernel.c ****             else
7285:../../Source/Kernel/rme_kernel.c ****             {
7286:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7287:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7288:../../Source/Kernel/rme_kernel.c ****             }
7289:../../Source/Kernel/rme_kernel.c ****             
7290:../../Source/Kernel/rme_kernel.c ****             /* We have taken it, now return what we have taken */
7291:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,1);
 18509              		.loc 1 7291 13
 18510 034c 0110A0E3 		mov	r1, #1
 18511 0350 24001BE5 		ldr	r0, [fp, #-36]
 18512 0354 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18513 0358 0E0000EA 		b	.L1207
 18514              	.L1205:
7292:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 454


7293:../../Source/Kernel/rme_kernel.c ****         else
7294:../../Source/Kernel/rme_kernel.c ****         {
7295:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7296:../../Source/Kernel/rme_kernel.c **** 
7297:../../Source/Kernel/rme_kernel.c ****             /* Try to take all */
7298:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18515              		.loc 1 7298 16
 18516 035c 10301BE5 		ldr	r3, [fp, #-16]
 18517 0360 143083E2 		add	r3, r3, #20
 18518 0364 0020A0E3 		mov	r2, #0
 18519 0368 1C101BE5 		ldr	r1, [fp, #-28]
 18520 036c 0300A0E1 		mov	r0, r3
 18521 0370 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18522 0374 0030A0E1 		mov	r3, r0
 18523              		.loc 1 7298 15 discriminator 1
 18524 0378 000053E3 		cmp	r3, #0
 18525 037c 0100001A 		bne	.L1208
7299:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7300:../../Source/Kernel/rme_kernel.c ****                              0U)==RME_CASFAIL)
7301:../../Source/Kernel/rme_kernel.c ****             {
7302:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7303:../../Source/Kernel/rme_kernel.c **** 
7304:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18526              		.loc 1 7304 24
 18527 0380 133EE0E3 		mvn	r3, #304
 18528 0384 260000EA 		b	.L1178
 18529              	.L1208:
7305:../../Source/Kernel/rme_kernel.c ****             }
7306:../../Source/Kernel/rme_kernel.c ****             else
7307:../../Source/Kernel/rme_kernel.c ****             {
7308:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7309:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7310:../../Source/Kernel/rme_kernel.c ****             }
7311:../../Source/Kernel/rme_kernel.c ****             
7312:../../Source/Kernel/rme_kernel.c ****             /* We have taken all, now return what we have taken */
7313:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,(rme_ret_t)Old_Value);
 18530              		.loc 1 7313 13
 18531 0388 1C301BE5 		ldr	r3, [fp, #-28]
 18532 038c 0310A0E1 		mov	r1, r3
 18533 0390 24001BE5 		ldr	r0, [fp, #-36]
 18534 0394 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18535              	.L1207:
7314:../../Source/Kernel/rme_kernel.c ****         }
7315:../../Source/Kernel/rme_kernel.c ****         
7316:../../Source/Kernel/rme_kernel.c ****         return 0;
 18536              		.loc 1 7316 16
 18537 0398 0030A0E3 		mov	r3, #0
 18538 039c 200000EA 		b	.L1178
 18539              	.L1203:
7317:../../Source/Kernel/rme_kernel.c ****     }
7318:../../Source/Kernel/rme_kernel.c ****     else
7319:../../Source/Kernel/rme_kernel.c ****     {
7320:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7321:../../Source/Kernel/rme_kernel.c **** 
7322:../../Source/Kernel/rme_kernel.c ****         /* There's no value, try to block */
7323:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_BM))
 18540              		.loc 1 7323 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 455


 18541 03a0 2C301BE5 		ldr	r3, [fp, #-44]
 18542 03a4 000053E3 		cmp	r3, #0
 18543 03a8 0200000A 		beq	.L1209
 18544              		.loc 1 7323 32 discriminator 1
 18545 03ac 2C301BE5 		ldr	r3, [fp, #-44]
 18546 03b0 010053E3 		cmp	r3, #1
 18547 03b4 1600001A 		bne	.L1210
 18548              	.L1209:
7324:../../Source/Kernel/rme_kernel.c ****         {
7325:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7326:../../Source/Kernel/rme_kernel.c **** 
7327:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP((rme_ptr_t*)&(Sig_Root->Thd),
 18549              		.loc 1 7327 16
 18550 03b8 10301BE5 		ldr	r3, [fp, #-16]
 18551 03bc 183083E2 		add	r3, r3, #24
 18552 03c0 18201BE5 		ldr	r2, [fp, #-24]
 18553 03c4 0010A0E3 		mov	r1, #0
 18554 03c8 0300A0E1 		mov	r0, r3
 18555 03cc FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18556 03d0 0030A0E1 		mov	r3, r0
 18557              		.loc 1 7327 15 discriminator 1
 18558 03d4 000053E3 		cmp	r3, #0
 18559 03d8 0100001A 		bne	.L1211
7328:../../Source/Kernel/rme_kernel.c ****                              RME_NULL,
7329:../../Source/Kernel/rme_kernel.c ****                              (rme_ptr_t)Thd_Cur)==RME_CASFAIL)
7330:../../Source/Kernel/rme_kernel.c ****             {
7331:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7332:../../Source/Kernel/rme_kernel.c **** 
7333:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18560              		.loc 1 7333 24
 18561 03dc 133EE0E3 		mvn	r3, #304
 18562 03e0 0F0000EA 		b	.L1178
 18563              	.L1211:
7334:../../Source/Kernel/rme_kernel.c ****             }
7335:../../Source/Kernel/rme_kernel.c ****             else
7336:../../Source/Kernel/rme_kernel.c ****             {
7337:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7338:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7339:../../Source/Kernel/rme_kernel.c ****             }
7340:../../Source/Kernel/rme_kernel.c **** 
7341:../../Source/Kernel/rme_kernel.c ****             /* Now we block our current thread. No need to set any return value
7342:../../Source/Kernel/rme_kernel.c ****              * to the register set here, because we do not yet know how many
7343:../../Source/Kernel/rme_kernel.c ****              * signals will be there when the thread unblocks. The unblocking
7344:../../Source/Kernel/rme_kernel.c ****              * does not need an option so we don't keep that; we always treat
7345:../../Source/Kernel/rme_kernel.c ****              * it as single receive when we unblock anyway. */
7346:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Signal=Sig_Root;
 18564              		.loc 1 7346 34
 18565 03e4 18301BE5 		ldr	r3, [fp, #-24]
 18566 03e8 10201BE5 		ldr	r2, [fp, #-16]
 18567 03ec 282083E5 		str	r2, [r3, #40]
7347:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_BLOCKED;
 18568              		.loc 1 7347 33
 18569 03f0 18301BE5 		ldr	r3, [fp, #-24]
 18570 03f4 0120A0E3 		mov	r2, #1
 18571 03f8 1C2083E5 		str	r2, [r3, #28]
7348:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 18572              		.loc 1 7348 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 456


 18573 03fc 18001BE5 		ldr	r0, [fp, #-24]
 18574 0400 FEFFFFEB 		bl	_RME_Run_Del
7349:../../Source/Kernel/rme_kernel.c ****             
7350:../../Source/Kernel/rme_kernel.c ****             /* Pick the highest priority thread to run */
7351:../../Source/Kernel/rme_kernel.c ****             _RME_Kern_High(Reg,Local);
 18575              		.loc 1 7351 13
 18576 0404 14101BE5 		ldr	r1, [fp, #-20]
 18577 0408 24001BE5 		ldr	r0, [fp, #-36]
 18578 040c FEFFFFEB 		bl	_RME_Kern_High
 18579 0410 020000EA 		b	.L1212
 18580              	.L1210:
7352:../../Source/Kernel/rme_kernel.c ****         }
7353:../../Source/Kernel/rme_kernel.c ****         else
7354:../../Source/Kernel/rme_kernel.c ****         {
7355:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7356:../../Source/Kernel/rme_kernel.c **** 
7357:../../Source/Kernel/rme_kernel.c ****             /* We have taken nothing but the system call is successful anyway */
7358:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,0);
 18581              		.loc 1 7358 13
 18582 0414 0010A0E3 		mov	r1, #0
 18583 0418 24001BE5 		ldr	r0, [fp, #-36]
 18584 041c FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18585              	.L1212:
7359:../../Source/Kernel/rme_kernel.c ****         }
7360:../../Source/Kernel/rme_kernel.c ****     }
7361:../../Source/Kernel/rme_kernel.c ****     
7362:../../Source/Kernel/rme_kernel.c ****     return 0;
 18586              		.loc 1 7362 12
 18587 0420 0030A0E3 		mov	r3, #0
 18588              	.L1178:
7363:../../Source/Kernel/rme_kernel.c **** }
 18589              		.loc 1 7363 1
 18590 0424 0300A0E1 		mov	r0, r3
 18591 0428 04D04BE2 		sub	sp, fp, #4
 18592              		.cfi_def_cfa 13, 8
 18593              		@ sp needed
 18594 042c 0088BDE8 		pop	{fp, pc}
 18595              	.L1218:
 18596              		.align	2
 18597              	.L1217:
 18598 0430 00000000 		.word	.L1188
 18599              		.cfi_endproc
 18600              	.LFE71:
 18602              		.section	.text._RME_Inv_Crt,"ax",%progbits
 18603              		.align	2
 18604              		.syntax unified
 18605              		.arm
 18607              	_RME_Inv_Crt:
 18608              	.LFB72:
7364:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Rcv *************************************************/
7365:../../Source/Kernel/rme_kernel.c **** 
7366:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Crt ******************************************************
7367:../../Source/Kernel/rme_kernel.c **** Description : Create an invocation stub.
7368:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7369:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
7370:../../Source/Kernel/rme_kernel.c ****                                   for this process.
7371:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 457


7372:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability slot that you want this newly
7373:../../Source/Kernel/rme_kernel.c ****                                   created invocation capability to be in.
7374:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7375:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
7376:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7377:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
7378:../../Source/Kernel/rme_kernel.c ****                                 invocation port kernel object.
7379:../../Source/Kernel/rme_kernel.c **** Output      : None.
7380:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7381:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7382:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Crt(struct RME_Cap_Cpt* Cpt,
7383:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7384:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
7385:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7386:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
7387:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr)
7388:../../Source/Kernel/rme_kernel.c **** {
 18609              		.loc 1 7388 1
 18610              		.cfi_startproc
 18611              		@ args = 8, pretend = 0, frame = 48
 18612              		@ frame_needed = 1, uses_anonymous_args = 0
 18613 0000 00482DE9 		push	{fp, lr}
 18614              		.cfi_def_cfa_offset 8
 18615              		.cfi_offset 11, -8
 18616              		.cfi_offset 14, -4
 18617 0004 04B08DE2 		add	fp, sp, #4
 18618              		.cfi_def_cfa 11, 4
 18619 0008 30D04DE2 		sub	sp, sp, #48
 18620 000c 28000BE5 		str	r0, [fp, #-40]
 18621 0010 2C100BE5 		str	r1, [fp, #-44]
 18622 0014 30200BE5 		str	r2, [fp, #-48]
 18623 0018 34300BE5 		str	r3, [fp, #-52]
7389:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7390:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
7391:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
7392:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Crt;
7393:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
7394:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7395:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7396:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
7397:../../Source/Kernel/rme_kernel.c ****     
7398:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
7399:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 18624              		.loc 1 7399 5
 18625 001c 2C301BE5 		ldr	r3, [fp, #-44]
 18626 0020 803003E2 		and	r3, r3, #128
 18627 0024 000053E3 		cmp	r3, #0
 18628 0028 1C00001A 		bne	.L1220
 18629              		.loc 1 7399 5 is_stmt 0 discriminator 1
 18630 002c 28301BE5 		ldr	r3, [fp, #-40]
 18631 0030 142093E5 		ldr	r2, [r3, #20]
 18632 0034 2C301BE5 		ldr	r3, [fp, #-44]
 18633 0038 030052E1 		cmp	r2, r3
 18634 003c 0100008A 		bhi	.L1221
 18635              		.loc 1 7399 5 discriminator 3
 18636 0040 0230E0E3 		mvn	r3, #2
 18637              		.loc 1 7399 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 458


 18638 0044 950100EA 		b	.L1222
 18639              	.L1221:
 18640              		.loc 1 7399 5 discriminator 4
 18641 0048 2C301BE5 		ldr	r3, [fp, #-44]
 18642 004c 8322A0E1 		lsl	r2, r3, #5
 18643 0050 28301BE5 		ldr	r3, [fp, #-40]
 18644 0054 0C3093E5 		ldr	r3, [r3, #12]
 18645 0058 033082E0 		add	r3, r2, r3
 18646 005c 08300BE5 		str	r3, [fp, #-8]
 18647 0060 08301BE5 		ldr	r3, [fp, #-8]
 18648 0064 0300A0E1 		mov	r0, r3
 18649 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18650 006c 14000BE5 		str	r0, [fp, #-20]
 18651              		.loc 1 7399 5 discriminator 1
 18652 0070 14301BE5 		ldr	r3, [fp, #-20]
 18653 0074 FF3803E2 		and	r3, r3, #16711680
 18654 0078 020853E3 		cmp	r3, #131072
 18655 007c 0100001A 		bne	.L1223
 18656              		.loc 1 7399 5 discriminator 5
 18657 0080 0830E0E3 		mvn	r3, #8
 18658              		.loc 1 7399 5
 18659 0084 850100EA 		b	.L1222
 18660              	.L1223:
 18661              		.loc 1 7399 5 discriminator 6
 18662 0088 14301BE5 		ldr	r3, [fp, #-20]
 18663 008c 233CA0E1 		lsr	r3, r3, #24
 18664 0090 030053E3 		cmp	r3, #3
 18665 0094 3F00000A 		beq	.L1224
 18666              		.loc 1 7399 5 discriminator 7
 18667 0098 0130E0E3 		mvn	r3, #1
 18668              		.loc 1 7399 5
 18669 009c 7F0100EA 		b	.L1222
 18670              	.L1220:
 18671              		.loc 1 7399 5 discriminator 2
 18672 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 18673 00a4 2324A0E1 		lsr	r2, r3, #8
 18674 00a8 28301BE5 		ldr	r3, [fp, #-40]
 18675 00ac 143093E5 		ldr	r3, [r3, #20]
 18676 00b0 030052E1 		cmp	r2, r3
 18677 00b4 0100003A 		bcc	.L1225
 18678              		.loc 1 7399 5 discriminator 8
 18679 00b8 0230E0E3 		mvn	r3, #2
 18680              		.loc 1 7399 5
 18681 00bc 770100EA 		b	.L1222
 18682              	.L1225:
 18683              		.loc 1 7399 5 discriminator 9
 18684 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 18685 00c4 2334A0E1 		lsr	r3, r3, #8
 18686 00c8 8322A0E1 		lsl	r2, r3, #5
 18687 00cc 28301BE5 		ldr	r3, [fp, #-40]
 18688 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18689 00d4 033082E0 		add	r3, r2, r3
 18690 00d8 08300BE5 		str	r3, [fp, #-8]
 18691 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18692 00e0 0300A0E1 		mov	r0, r3
 18693 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18694 00e8 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 459


 18695              		.loc 1 7399 5 discriminator 1
 18696 00ec 14301BE5 		ldr	r3, [fp, #-20]
 18697 00f0 FF3803E2 		and	r3, r3, #16711680
 18698 00f4 020853E3 		cmp	r3, #131072
 18699 00f8 0100001A 		bne	.L1226
 18700              		.loc 1 7399 5 discriminator 10
 18701 00fc 0830E0E3 		mvn	r3, #8
 18702              		.loc 1 7399 5
 18703 0100 660100EA 		b	.L1222
 18704              	.L1226:
 18705              		.loc 1 7399 5 discriminator 11
 18706 0104 14301BE5 		ldr	r3, [fp, #-20]
 18707 0108 233CA0E1 		lsr	r3, r3, #24
 18708 010c 030053E3 		cmp	r3, #3
 18709 0110 0100000A 		beq	.L1227
 18710              		.loc 1 7399 5 discriminator 12
 18711 0114 0130E0E3 		mvn	r3, #1
 18712              		.loc 1 7399 5
 18713 0118 600100EA 		b	.L1222
 18714              	.L1227:
 18715              		.loc 1 7399 5 discriminator 13
 18716 011c 2C301BE5 		ldr	r3, [fp, #-44]
 18717 0120 7F2003E2 		and	r2, r3, #127
 18718 0124 08301BE5 		ldr	r3, [fp, #-8]
 18719 0128 143093E5 		ldr	r3, [r3, #20]
 18720 012c 030052E1 		cmp	r2, r3
 18721 0130 0100003A 		bcc	.L1228
 18722              		.loc 1 7399 5 discriminator 14
 18723 0134 0230E0E3 		mvn	r3, #2
 18724              		.loc 1 7399 5
 18725 0138 580100EA 		b	.L1222
 18726              	.L1228:
 18727              		.loc 1 7399 5 discriminator 15
 18728 013c 2C301BE5 		ldr	r3, [fp, #-44]
 18729 0140 7F3003E2 		and	r3, r3, #127
 18730 0144 8322A0E1 		lsl	r2, r3, #5
 18731 0148 08301BE5 		ldr	r3, [fp, #-8]
 18732 014c 0C3093E5 		ldr	r3, [r3, #12]
 18733 0150 033082E0 		add	r3, r2, r3
 18734 0154 08300BE5 		str	r3, [fp, #-8]
 18735 0158 08301BE5 		ldr	r3, [fp, #-8]
 18736 015c 0300A0E1 		mov	r0, r3
 18737 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18738 0164 14000BE5 		str	r0, [fp, #-20]
 18739              		.loc 1 7399 5 discriminator 1
 18740 0168 14301BE5 		ldr	r3, [fp, #-20]
 18741 016c FF3803E2 		and	r3, r3, #16711680
 18742 0170 020853E3 		cmp	r3, #131072
 18743 0174 0100001A 		bne	.L1229
 18744              		.loc 1 7399 5 discriminator 16
 18745 0178 0830E0E3 		mvn	r3, #8
 18746              		.loc 1 7399 5
 18747 017c 470100EA 		b	.L1222
 18748              	.L1229:
 18749              		.loc 1 7399 5 discriminator 17
 18750 0180 14301BE5 		ldr	r3, [fp, #-20]
 18751 0184 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 460


 18752 0188 030053E3 		cmp	r3, #3
 18753 018c 0100000A 		beq	.L1224
 18754              		.loc 1 7399 5 discriminator 18
 18755 0190 0130E0E3 		mvn	r3, #1
 18756              		.loc 1 7399 5
 18757 0194 410100EA 		b	.L1222
 18758              	.L1224:
7400:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7401:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 18759              		.loc 1 7401 5 is_stmt 1
 18760 0198 04309BE5 		ldr	r3, [fp, #4]
 18761 019c 803003E2 		and	r3, r3, #128
 18762 01a0 000053E3 		cmp	r3, #0
 18763 01a4 1C00001A 		bne	.L1230
 18764              		.loc 1 7401 5 is_stmt 0 discriminator 1
 18765 01a8 28301BE5 		ldr	r3, [fp, #-40]
 18766 01ac 142093E5 		ldr	r2, [r3, #20]
 18767 01b0 04309BE5 		ldr	r3, [fp, #4]
 18768 01b4 030052E1 		cmp	r2, r3
 18769 01b8 0100008A 		bhi	.L1231
 18770              		.loc 1 7401 5 discriminator 3
 18771 01bc 0230E0E3 		mvn	r3, #2
 18772              		.loc 1 7401 5
 18773 01c0 360100EA 		b	.L1222
 18774              	.L1231:
 18775              		.loc 1 7401 5 discriminator 4
 18776 01c4 04309BE5 		ldr	r3, [fp, #4]
 18777 01c8 8322A0E1 		lsl	r2, r3, #5
 18778 01cc 28301BE5 		ldr	r3, [fp, #-40]
 18779 01d0 0C3093E5 		ldr	r3, [r3, #12]
 18780 01d4 033082E0 		add	r3, r2, r3
 18781 01d8 0C300BE5 		str	r3, [fp, #-12]
 18782 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 18783 01e0 0300A0E1 		mov	r0, r3
 18784 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18785 01e8 14000BE5 		str	r0, [fp, #-20]
 18786              		.loc 1 7401 5 discriminator 1
 18787 01ec 14301BE5 		ldr	r3, [fp, #-20]
 18788 01f0 FF3803E2 		and	r3, r3, #16711680
 18789 01f4 020853E3 		cmp	r3, #131072
 18790 01f8 0100001A 		bne	.L1232
 18791              		.loc 1 7401 5 discriminator 5
 18792 01fc 0830E0E3 		mvn	r3, #8
 18793              		.loc 1 7401 5
 18794 0200 260100EA 		b	.L1222
 18795              	.L1232:
 18796              		.loc 1 7401 5 discriminator 6
 18797 0204 14301BE5 		ldr	r3, [fp, #-20]
 18798 0208 233CA0E1 		lsr	r3, r3, #24
 18799 020c 050053E3 		cmp	r3, #5
 18800 0210 3F00000A 		beq	.L1233
 18801              		.loc 1 7401 5 discriminator 7
 18802 0214 0130E0E3 		mvn	r3, #1
 18803              		.loc 1 7401 5
 18804 0218 200100EA 		b	.L1222
 18805              	.L1230:
 18806              		.loc 1 7401 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 461


 18807 021c 04309BE5 		ldr	r3, [fp, #4]
 18808 0220 2324A0E1 		lsr	r2, r3, #8
 18809 0224 28301BE5 		ldr	r3, [fp, #-40]
 18810 0228 143093E5 		ldr	r3, [r3, #20]
 18811 022c 030052E1 		cmp	r2, r3
 18812 0230 0100003A 		bcc	.L1234
 18813              		.loc 1 7401 5 discriminator 8
 18814 0234 0230E0E3 		mvn	r3, #2
 18815              		.loc 1 7401 5
 18816 0238 180100EA 		b	.L1222
 18817              	.L1234:
 18818              		.loc 1 7401 5 discriminator 9
 18819 023c 04309BE5 		ldr	r3, [fp, #4]
 18820 0240 2334A0E1 		lsr	r3, r3, #8
 18821 0244 8322A0E1 		lsl	r2, r3, #5
 18822 0248 28301BE5 		ldr	r3, [fp, #-40]
 18823 024c 0C3093E5 		ldr	r3, [r3, #12]
 18824 0250 033082E0 		add	r3, r2, r3
 18825 0254 0C300BE5 		str	r3, [fp, #-12]
 18826 0258 0C301BE5 		ldr	r3, [fp, #-12]
 18827 025c 0300A0E1 		mov	r0, r3
 18828 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18829 0264 14000BE5 		str	r0, [fp, #-20]
 18830              		.loc 1 7401 5 discriminator 1
 18831 0268 14301BE5 		ldr	r3, [fp, #-20]
 18832 026c FF3803E2 		and	r3, r3, #16711680
 18833 0270 020853E3 		cmp	r3, #131072
 18834 0274 0100001A 		bne	.L1235
 18835              		.loc 1 7401 5 discriminator 10
 18836 0278 0830E0E3 		mvn	r3, #8
 18837              		.loc 1 7401 5
 18838 027c 070100EA 		b	.L1222
 18839              	.L1235:
 18840              		.loc 1 7401 5 discriminator 11
 18841 0280 14301BE5 		ldr	r3, [fp, #-20]
 18842 0284 233CA0E1 		lsr	r3, r3, #24
 18843 0288 030053E3 		cmp	r3, #3
 18844 028c 0100000A 		beq	.L1236
 18845              		.loc 1 7401 5 discriminator 12
 18846 0290 0130E0E3 		mvn	r3, #1
 18847              		.loc 1 7401 5
 18848 0294 010100EA 		b	.L1222
 18849              	.L1236:
 18850              		.loc 1 7401 5 discriminator 13
 18851 0298 04309BE5 		ldr	r3, [fp, #4]
 18852 029c 7F2003E2 		and	r2, r3, #127
 18853 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 18854 02a4 143093E5 		ldr	r3, [r3, #20]
 18855 02a8 030052E1 		cmp	r2, r3
 18856 02ac 0100003A 		bcc	.L1237
 18857              		.loc 1 7401 5 discriminator 14
 18858 02b0 0230E0E3 		mvn	r3, #2
 18859              		.loc 1 7401 5
 18860 02b4 F90000EA 		b	.L1222
 18861              	.L1237:
 18862              		.loc 1 7401 5 discriminator 15
 18863 02b8 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 462


 18864 02bc 7F3003E2 		and	r3, r3, #127
 18865 02c0 8322A0E1 		lsl	r2, r3, #5
 18866 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 18867 02c8 0C3093E5 		ldr	r3, [r3, #12]
 18868 02cc 033082E0 		add	r3, r2, r3
 18869 02d0 0C300BE5 		str	r3, [fp, #-12]
 18870 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 18871 02d8 0300A0E1 		mov	r0, r3
 18872 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18873 02e0 14000BE5 		str	r0, [fp, #-20]
 18874              		.loc 1 7401 5 discriminator 1
 18875 02e4 14301BE5 		ldr	r3, [fp, #-20]
 18876 02e8 FF3803E2 		and	r3, r3, #16711680
 18877 02ec 020853E3 		cmp	r3, #131072
 18878 02f0 0100001A 		bne	.L1238
 18879              		.loc 1 7401 5 discriminator 16
 18880 02f4 0830E0E3 		mvn	r3, #8
 18881              		.loc 1 7401 5
 18882 02f8 E80000EA 		b	.L1222
 18883              	.L1238:
 18884              		.loc 1 7401 5 discriminator 17
 18885 02fc 14301BE5 		ldr	r3, [fp, #-20]
 18886 0300 233CA0E1 		lsr	r3, r3, #24
 18887 0304 050053E3 		cmp	r3, #5
 18888 0308 0100000A 		beq	.L1233
 18889              		.loc 1 7401 5 discriminator 18
 18890 030c 0130E0E3 		mvn	r3, #1
 18891              		.loc 1 7401 5
 18892 0310 E20000EA 		b	.L1222
 18893              	.L1233:
7402:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
7403:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 18894              		.loc 1 7403 5 is_stmt 1
 18895 0314 30301BE5 		ldr	r3, [fp, #-48]
 18896 0318 803003E2 		and	r3, r3, #128
 18897 031c 000053E3 		cmp	r3, #0
 18898 0320 1C00001A 		bne	.L1239
 18899              		.loc 1 7403 5 is_stmt 0 discriminator 1
 18900 0324 28301BE5 		ldr	r3, [fp, #-40]
 18901 0328 142093E5 		ldr	r2, [r3, #20]
 18902 032c 30301BE5 		ldr	r3, [fp, #-48]
 18903 0330 030052E1 		cmp	r2, r3
 18904 0334 0100008A 		bhi	.L1240
 18905              		.loc 1 7403 5 discriminator 3
 18906 0338 0230E0E3 		mvn	r3, #2
 18907              		.loc 1 7403 5
 18908 033c D70000EA 		b	.L1222
 18909              	.L1240:
 18910              		.loc 1 7403 5 discriminator 4
 18911 0340 30301BE5 		ldr	r3, [fp, #-48]
 18912 0344 8322A0E1 		lsl	r2, r3, #5
 18913 0348 28301BE5 		ldr	r3, [fp, #-40]
 18914 034c 0C3093E5 		ldr	r3, [r3, #12]
 18915 0350 033082E0 		add	r3, r2, r3
 18916 0354 10300BE5 		str	r3, [fp, #-16]
 18917 0358 10301BE5 		ldr	r3, [fp, #-16]
 18918 035c 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 463


 18919 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18920 0364 14000BE5 		str	r0, [fp, #-20]
 18921              		.loc 1 7403 5 discriminator 1
 18922 0368 14301BE5 		ldr	r3, [fp, #-20]
 18923 036c FF3803E2 		and	r3, r3, #16711680
 18924 0370 020853E3 		cmp	r3, #131072
 18925 0374 0100001A 		bne	.L1241
 18926              		.loc 1 7403 5 discriminator 5
 18927 0378 0830E0E3 		mvn	r3, #8
 18928              		.loc 1 7403 5
 18929 037c C70000EA 		b	.L1222
 18930              	.L1241:
 18931              		.loc 1 7403 5 discriminator 6
 18932 0380 14301BE5 		ldr	r3, [fp, #-20]
 18933 0384 233CA0E1 		lsr	r3, r3, #24
 18934 0388 020053E3 		cmp	r3, #2
 18935 038c 3F00000A 		beq	.L1242
 18936              		.loc 1 7403 5 discriminator 7
 18937 0390 0130E0E3 		mvn	r3, #1
 18938              		.loc 1 7403 5
 18939 0394 C10000EA 		b	.L1222
 18940              	.L1239:
 18941              		.loc 1 7403 5 discriminator 2
 18942 0398 30301BE5 		ldr	r3, [fp, #-48]
 18943 039c 2324A0E1 		lsr	r2, r3, #8
 18944 03a0 28301BE5 		ldr	r3, [fp, #-40]
 18945 03a4 143093E5 		ldr	r3, [r3, #20]
 18946 03a8 030052E1 		cmp	r2, r3
 18947 03ac 0100003A 		bcc	.L1243
 18948              		.loc 1 7403 5 discriminator 8
 18949 03b0 0230E0E3 		mvn	r3, #2
 18950              		.loc 1 7403 5
 18951 03b4 B90000EA 		b	.L1222
 18952              	.L1243:
 18953              		.loc 1 7403 5 discriminator 9
 18954 03b8 30301BE5 		ldr	r3, [fp, #-48]
 18955 03bc 2334A0E1 		lsr	r3, r3, #8
 18956 03c0 8322A0E1 		lsl	r2, r3, #5
 18957 03c4 28301BE5 		ldr	r3, [fp, #-40]
 18958 03c8 0C3093E5 		ldr	r3, [r3, #12]
 18959 03cc 033082E0 		add	r3, r2, r3
 18960 03d0 10300BE5 		str	r3, [fp, #-16]
 18961 03d4 10301BE5 		ldr	r3, [fp, #-16]
 18962 03d8 0300A0E1 		mov	r0, r3
 18963 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18964 03e0 14000BE5 		str	r0, [fp, #-20]
 18965              		.loc 1 7403 5 discriminator 1
 18966 03e4 14301BE5 		ldr	r3, [fp, #-20]
 18967 03e8 FF3803E2 		and	r3, r3, #16711680
 18968 03ec 020853E3 		cmp	r3, #131072
 18969 03f0 0100001A 		bne	.L1244
 18970              		.loc 1 7403 5 discriminator 10
 18971 03f4 0830E0E3 		mvn	r3, #8
 18972              		.loc 1 7403 5
 18973 03f8 A80000EA 		b	.L1222
 18974              	.L1244:
 18975              		.loc 1 7403 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 464


 18976 03fc 14301BE5 		ldr	r3, [fp, #-20]
 18977 0400 233CA0E1 		lsr	r3, r3, #24
 18978 0404 030053E3 		cmp	r3, #3
 18979 0408 0100000A 		beq	.L1245
 18980              		.loc 1 7403 5 discriminator 12
 18981 040c 0130E0E3 		mvn	r3, #1
 18982              		.loc 1 7403 5
 18983 0410 A20000EA 		b	.L1222
 18984              	.L1245:
 18985              		.loc 1 7403 5 discriminator 13
 18986 0414 30301BE5 		ldr	r3, [fp, #-48]
 18987 0418 7F2003E2 		and	r2, r3, #127
 18988 041c 10301BE5 		ldr	r3, [fp, #-16]
 18989 0420 143093E5 		ldr	r3, [r3, #20]
 18990 0424 030052E1 		cmp	r2, r3
 18991 0428 0100003A 		bcc	.L1246
 18992              		.loc 1 7403 5 discriminator 14
 18993 042c 0230E0E3 		mvn	r3, #2
 18994              		.loc 1 7403 5
 18995 0430 9A0000EA 		b	.L1222
 18996              	.L1246:
 18997              		.loc 1 7403 5 discriminator 15
 18998 0434 30301BE5 		ldr	r3, [fp, #-48]
 18999 0438 7F3003E2 		and	r3, r3, #127
 19000 043c 8322A0E1 		lsl	r2, r3, #5
 19001 0440 10301BE5 		ldr	r3, [fp, #-16]
 19002 0444 0C3093E5 		ldr	r3, [r3, #12]
 19003 0448 033082E0 		add	r3, r2, r3
 19004 044c 10300BE5 		str	r3, [fp, #-16]
 19005 0450 10301BE5 		ldr	r3, [fp, #-16]
 19006 0454 0300A0E1 		mov	r0, r3
 19007 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19008 045c 14000BE5 		str	r0, [fp, #-20]
 19009              		.loc 1 7403 5 discriminator 1
 19010 0460 14301BE5 		ldr	r3, [fp, #-20]
 19011 0464 FF3803E2 		and	r3, r3, #16711680
 19012 0468 020853E3 		cmp	r3, #131072
 19013 046c 0100001A 		bne	.L1247
 19014              		.loc 1 7403 5 discriminator 16
 19015 0470 0830E0E3 		mvn	r3, #8
 19016              		.loc 1 7403 5
 19017 0474 890000EA 		b	.L1222
 19018              	.L1247:
 19019              		.loc 1 7403 5 discriminator 17
 19020 0478 14301BE5 		ldr	r3, [fp, #-20]
 19021 047c 233CA0E1 		lsr	r3, r3, #24
 19022 0480 020053E3 		cmp	r3, #2
 19023 0484 0100000A 		beq	.L1242
 19024              		.loc 1 7403 5 discriminator 18
 19025 0488 0130E0E3 		mvn	r3, #1
 19026              		.loc 1 7403 5
 19027 048c 830000EA 		b	.L1222
 19028              	.L1242:
7404:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
7405:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
7406:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 19029              		.loc 1 7406 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 465


 19030 0490 08301BE5 		ldr	r3, [fp, #-8]
 19031 0494 083093E5 		ldr	r3, [r3, #8]
 19032 0498 013003E2 		and	r3, r3, #1
 19033 049c 000053E3 		cmp	r3, #0
 19034 04a0 0100001A 		bne	.L1248
 19035              		.loc 1 7406 5 is_stmt 0 discriminator 1
 19036 04a4 0630E0E3 		mvn	r3, #6
 19037              		.loc 1 7406 5
 19038 04a8 7C0000EA 		b	.L1222
 19039              	.L1248:
7407:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_INV);
 19040              		.loc 1 7407 5 is_stmt 1
 19041 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 19042 04b0 083093E5 		ldr	r3, [r3, #8]
 19043 04b4 013003E2 		and	r3, r3, #1
 19044 04b8 000053E3 		cmp	r3, #0
 19045 04bc 0100001A 		bne	.L1249
 19046              		.loc 1 7407 5 is_stmt 0 discriminator 1
 19047 04c0 0630E0E3 		mvn	r3, #6
 19048              		.loc 1 7407 5
 19049 04c4 750000EA 		b	.L1222
 19050              	.L1249:
7408:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
7409:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_INV,Raddr,Vaddr,RME_INV_SIZE);
 19051              		.loc 1 7409 5 is_stmt 1
 19052 04c8 10301BE5 		ldr	r3, [fp, #-16]
 19053 04cc 083093E5 		ldr	r3, [r3, #8]
 19054 04d0 083003E2 		and	r3, r3, #8
 19055 04d4 000053E3 		cmp	r3, #0
 19056 04d8 0100001A 		bne	.L1250
 19057              		.loc 1 7409 5 is_stmt 0 discriminator 1
 19058 04dc 0630E0E3 		mvn	r3, #6
 19059              		.loc 1 7409 5
 19060 04e0 6E0000EA 		b	.L1222
 19061              	.L1250:
 19062              		.loc 1 7409 5 discriminator 2
 19063 04e4 10301BE5 		ldr	r3, [fp, #-16]
 19064 04e8 143093E5 		ldr	r3, [r3, #20]
 19065 04ec 08209BE5 		ldr	r2, [fp, #8]
 19066 04f0 033082E0 		add	r3, r2, r3
 19067 04f4 18300BE5 		str	r3, [fp, #-24]
 19068 04f8 18201BE5 		ldr	r2, [fp, #-24]
 19069 04fc 08309BE5 		ldr	r3, [fp, #8]
 19070 0500 030052E1 		cmp	r2, r3
 19071 0504 0100002A 		bcs	.L1251
 19072              		.loc 1 7409 5 discriminator 3
 19073 0508 0630E0E3 		mvn	r3, #6
 19074              		.loc 1 7409 5
 19075 050c 630000EA 		b	.L1222
 19076              	.L1251:
 19077              		.loc 1 7409 5 discriminator 4
 19078 0510 10301BE5 		ldr	r3, [fp, #-16]
 19079 0514 143093E5 		ldr	r3, [r3, #20]
 19080 0518 18201BE5 		ldr	r2, [fp, #-24]
 19081 051c 030052E1 		cmp	r2, r3
 19082 0520 0100002A 		bcs	.L1252
 19083              		.loc 1 7409 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 466


 19084 0524 0630E0E3 		mvn	r3, #6
 19085              		.loc 1 7409 5
 19086 0528 5C0000EA 		b	.L1222
 19087              	.L1252:
 19088              		.loc 1 7409 5 discriminator 6
 19089 052c 18301BE5 		ldr	r3, [fp, #-24]
 19090 0530 250073E3 		cmn	r3, #37
 19091 0534 0100009A 		bls	.L1253
 19092              		.loc 1 7409 5 discriminator 7
 19093 0538 0630E0E3 		mvn	r3, #6
 19094              		.loc 1 7409 5
 19095 053c 570000EA 		b	.L1222
 19096              	.L1253:
 19097              		.loc 1 7409 5 discriminator 8
 19098 0540 10301BE5 		ldr	r3, [fp, #-16]
 19099 0544 182093E5 		ldr	r2, [r3, #24]
 19100 0548 18301BE5 		ldr	r3, [fp, #-24]
 19101 054c 233083E2 		add	r3, r3, #35
 19102 0550 030052E1 		cmp	r2, r3
 19103 0554 0100002A 		bcs	.L1254
 19104              		.loc 1 7409 5 discriminator 9
 19105 0558 0630E0E3 		mvn	r3, #6
 19106              		.loc 1 7409 5
 19107 055c 4F0000EA 		b	.L1222
 19108              	.L1254:
7410:../../Source/Kernel/rme_kernel.c ****     
7411:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7412:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Crt);
 19109              		.loc 1 7412 5 is_stmt 1
 19110 0560 08301BE5 		ldr	r3, [fp, #-8]
 19111 0564 142093E5 		ldr	r2, [r3, #20]
 19112 0568 34301BE5 		ldr	r3, [fp, #-52]
 19113 056c 030052E1 		cmp	r2, r3
 19114 0570 0100008A 		bhi	.L1255
 19115              		.loc 1 7412 5 is_stmt 0 discriminator 1
 19116 0574 0230E0E3 		mvn	r3, #2
 19117              		.loc 1 7412 5
 19118 0578 480000EA 		b	.L1222
 19119              	.L1255:
 19120              		.loc 1 7412 5 discriminator 2
 19121 057c 34301BE5 		ldr	r3, [fp, #-52]
 19122 0580 8322A0E1 		lsl	r2, r3, #5
 19123 0584 08301BE5 		ldr	r3, [fp, #-8]
 19124 0588 0C3093E5 		ldr	r3, [r3, #12]
 19125 058c 033082E0 		add	r3, r2, r3
 19126 0590 1C300BE5 		str	r3, [fp, #-28]
7413:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7414:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Inv_Crt);
 19127              		.loc 1 7414 5 is_stmt 1
 19128 0594 1C301BE5 		ldr	r3, [fp, #-28]
 19129 0598 0128A0E3 		mov	r2, #65536
 19130 059c 0010A0E3 		mov	r1, #0
 19131 05a0 0300A0E1 		mov	r0, r3
 19132 05a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19133 05a8 0030A0E1 		mov	r3, r0
 19134              		.loc 1 7414 5 is_stmt 0 discriminator 1
 19135 05ac 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 467


 19136 05b0 0100001A 		bne	.L1256
 19137 05b4 0430E0E3 		mvn	r3, #4
 19138              		.loc 1 7414 5
 19139 05b8 380000EA 		b	.L1222
 19140              	.L1256:
 19141              		.loc 1 7414 5 discriminator 2
 19142 05bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19143 05c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19144 05c4 002093E5 		ldr	r2, [r3]
 19145 05c8 1C301BE5 		ldr	r3, [fp, #-28]
 19146 05cc 102083E5 		str	r2, [r3, #16]
7415:../../Source/Kernel/rme_kernel.c ****     
7416:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
7417:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_INV_SIZE)!=0)
 19147              		.loc 1 7417 8 is_stmt 1
 19148 05d0 2410A0E3 		mov	r1, #36
 19149 05d4 18001BE5 		ldr	r0, [fp, #-24]
 19150 05d8 FEFFFFEB 		bl	_RME_Kot_Mark
 19151 05dc 0030A0E1 		mov	r3, r0
 19152              		.loc 1 7417 7 discriminator 1
 19153 05e0 000053E3 		cmp	r3, #0
 19154 05e4 0500000A 		beq	.L1257
7418:../../Source/Kernel/rme_kernel.c ****     {
7419:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7420:../../Source/Kernel/rme_kernel.c **** 
7421:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),0U);
 19155              		.loc 1 7421 9
 19156 05e8 1C301BE5 		ldr	r3, [fp, #-28]
 19157 05ec 0010A0E3 		mov	r1, #0
 19158 05f0 0300A0E1 		mov	r0, r3
 19159 05f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
7422:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 19160              		.loc 1 7422 16
 19161 05f8 0330E0E3 		mvn	r3, #3
 19162 05fc 270000EA 		b	.L1222
 19163              	.L1257:
7423:../../Source/Kernel/rme_kernel.c ****     }
7424:../../Source/Kernel/rme_kernel.c ****     else
7425:../../Source/Kernel/rme_kernel.c ****     {
7426:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7427:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7428:../../Source/Kernel/rme_kernel.c ****     }
7429:../../Source/Kernel/rme_kernel.c ****     
7430:../../Source/Kernel/rme_kernel.c ****     /* Object init */
7431:../../Source/Kernel/rme_kernel.c ****     Invocation=(struct RME_Inv_Struct*)Vaddr;
 19164              		.loc 1 7431 15
 19165 0600 18301BE5 		ldr	r3, [fp, #-24]
 19166 0604 20300BE5 		str	r3, [fp, #-32]
7432:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 19167              		.loc 1 7432 14
 19168 0608 0C301BE5 		ldr	r3, [fp, #-12]
 19169 060c 003093E5 		ldr	r3, [r3]
 19170 0610 7330FFE6 		uxth	r3, r3
 19171 0614 000053E3 		cmp	r3, #0
 19172 0618 0200000A 		beq	.L1258
 19173              		.loc 1 7432 14 is_stmt 0 discriminator 1
 19174 061c 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 468


 19175 0620 043093E5 		ldr	r3, [r3, #4]
 19176 0624 000000EA 		b	.L1259
 19177              	.L1258:
 19178              		.loc 1 7432 14 discriminator 2
 19179 0628 0C301BE5 		ldr	r3, [fp, #-12]
 19180              	.L1259:
 19181              		.loc 1 7432 13 is_stmt 1 discriminator 4
 19182 062c 24300BE5 		str	r3, [fp, #-36]
7433:../../Source/Kernel/rme_kernel.c ****     Invocation->Prc=Prc_Root;
 19183              		.loc 1 7433 20
 19184 0630 20301BE5 		ldr	r3, [fp, #-32]
 19185 0634 24201BE5 		ldr	r2, [fp, #-36]
 19186 0638 082083E5 		str	r2, [r3, #8]
7434:../../Source/Kernel/rme_kernel.c ****     Invocation->Thd_Act=RME_NULL;
 19187              		.loc 1 7434 24
 19188 063c 20301BE5 		ldr	r3, [fp, #-32]
 19189 0640 0020A0E3 		mov	r2, #0
 19190 0644 0C2083E5 		str	r2, [r3, #12]
7435:../../Source/Kernel/rme_kernel.c ****     /* By default we do not return on exception */
7436:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=0U;
 19191              		.loc 1 7436 27
 19192 0648 20301BE5 		ldr	r3, [fp, #-32]
 19193 064c 0020A0E3 		mov	r2, #0
 19194 0650 182083E5 		str	r2, [r3, #24]
7437:../../Source/Kernel/rme_kernel.c ****     
7438:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7439:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Root_Ref=0U;
 19195              		.loc 1 7439 27
 19196 0654 1C301BE5 		ldr	r3, [fp, #-28]
 19197 0658 0020A0E3 		mov	r2, #0
 19198 065c 042083E5 		str	r2, [r3, #4]
7440:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Object=Vaddr;
 19199              		.loc 1 7440 25
 19200 0660 1C301BE5 		ldr	r3, [fp, #-28]
 19201 0664 18201BE5 		ldr	r2, [fp, #-24]
 19202 0668 0C2083E5 		str	r2, [r3, #12]
7441:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Flag=RME_INV_FLAG_ALL;
 19203              		.loc 1 7441 23
 19204 066c 1C301BE5 		ldr	r3, [fp, #-28]
 19205 0670 0320A0E3 		mov	r2, #3
 19206 0674 082083E5 		str	r2, [r3, #8]
7442:../../Source/Kernel/rme_kernel.c ****     
7443:../../Source/Kernel/rme_kernel.c ****     /* Reference object */
7444:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref),1U);
 19207              		.loc 1 7444 5
 19208 0678 24301BE5 		ldr	r3, [fp, #-36]
 19209 067c 043083E2 		add	r3, r3, #4
 19210 0680 0110A0E3 		mov	r1, #1
 19211 0684 0300A0E1 		mov	r0, r3
 19212 0688 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7445:../../Source/Kernel/rme_kernel.c ****     
7446:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7447:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),
 19213              		.loc 1 7447 5
 19214 068c 1C301BE5 		ldr	r3, [fp, #-28]
 19215 0690 0714A0E3 		mov	r1, #117440512
 19216 0694 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 469


 19217 0698 FEFFFFEB 		bl	__RME_A7A_Write_Release
7448:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_INV,
7449:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7450:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7451:../../Source/Kernel/rme_kernel.c **** 
7452:../../Source/Kernel/rme_kernel.c ****     return 0;
 19218              		.loc 1 7452 12
 19219 069c 0030A0E3 		mov	r3, #0
 19220              	.L1222:
7453:../../Source/Kernel/rme_kernel.c **** }
 19221              		.loc 1 7453 1
 19222 06a0 0300A0E1 		mov	r0, r3
 19223 06a4 04D04BE2 		sub	sp, fp, #4
 19224              		.cfi_def_cfa 13, 8
 19225              		@ sp needed
 19226 06a8 0088BDE8 		pop	{fp, pc}
 19227              		.cfi_endproc
 19228              	.LFE72:
 19230              		.section	.text._RME_Inv_Del,"ax",%progbits
 19231              		.align	2
 19232              		.syntax unified
 19233              		.arm
 19235              	_RME_Inv_Del:
 19236              	.LFB73:
7454:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Crt *************************************************/
7455:../../Source/Kernel/rme_kernel.c **** 
7456:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Del ******************************************************
7457:../../Source/Kernel/rme_kernel.c **** Description : Delete an invocation stub.
7458:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7459:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
7460:../../Source/Kernel/rme_kernel.c ****                                   delete from.
7461:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7462:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7463:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7464:../../Source/Kernel/rme_kernel.c **** Output      : None.
7465:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7466:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7467:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Del(struct RME_Cap_Cpt* Cpt,
7468:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7469:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv)
7470:../../Source/Kernel/rme_kernel.c **** {
 19237              		.loc 1 7470 1
 19238              		.cfi_startproc
 19239              		@ args = 0, pretend = 0, frame = 32
 19240              		@ frame_needed = 1, uses_anonymous_args = 0
 19241 0000 00482DE9 		push	{fp, lr}
 19242              		.cfi_def_cfa_offset 8
 19243              		.cfi_offset 11, -8
 19244              		.cfi_offset 14, -4
 19245 0004 04B08DE2 		add	fp, sp, #4
 19246              		.cfi_def_cfa 11, 4
 19247 0008 20D04DE2 		sub	sp, sp, #32
 19248 000c 18000BE5 		str	r0, [fp, #-24]
 19249 0010 1C100BE5 		str	r1, [fp, #-28]
 19250 0014 20200BE5 		str	r2, [fp, #-32]
7471:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7472:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Del;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 470


7473:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7474:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
7475:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7476:../../Source/Kernel/rme_kernel.c ****     
7477:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7478:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 19251              		.loc 1 7478 5
 19252 0018 1C301BE5 		ldr	r3, [fp, #-28]
 19253 001c 803003E2 		and	r3, r3, #128
 19254 0020 000053E3 		cmp	r3, #0
 19255 0024 1C00001A 		bne	.L1261
 19256              		.loc 1 7478 5 is_stmt 0 discriminator 1
 19257 0028 18301BE5 		ldr	r3, [fp, #-24]
 19258 002c 142093E5 		ldr	r2, [r3, #20]
 19259 0030 1C301BE5 		ldr	r3, [fp, #-28]
 19260 0034 030052E1 		cmp	r2, r3
 19261 0038 0100008A 		bhi	.L1262
 19262              		.loc 1 7478 5 discriminator 3
 19263 003c 0230E0E3 		mvn	r3, #2
 19264              		.loc 1 7478 5
 19265 0040 D10000EA 		b	.L1263
 19266              	.L1262:
 19267              		.loc 1 7478 5 discriminator 4
 19268 0044 1C301BE5 		ldr	r3, [fp, #-28]
 19269 0048 8322A0E1 		lsl	r2, r3, #5
 19270 004c 18301BE5 		ldr	r3, [fp, #-24]
 19271 0050 0C3093E5 		ldr	r3, [r3, #12]
 19272 0054 033082E0 		add	r3, r2, r3
 19273 0058 08300BE5 		str	r3, [fp, #-8]
 19274 005c 08301BE5 		ldr	r3, [fp, #-8]
 19275 0060 0300A0E1 		mov	r0, r3
 19276 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19277 0068 0C000BE5 		str	r0, [fp, #-12]
 19278              		.loc 1 7478 5 discriminator 1
 19279 006c 0C301BE5 		ldr	r3, [fp, #-12]
 19280 0070 FF3803E2 		and	r3, r3, #16711680
 19281 0074 020853E3 		cmp	r3, #131072
 19282 0078 0100001A 		bne	.L1264
 19283              		.loc 1 7478 5 discriminator 5
 19284 007c 0830E0E3 		mvn	r3, #8
 19285              		.loc 1 7478 5
 19286 0080 C10000EA 		b	.L1263
 19287              	.L1264:
 19288              		.loc 1 7478 5 discriminator 6
 19289 0084 0C301BE5 		ldr	r3, [fp, #-12]
 19290 0088 233CA0E1 		lsr	r3, r3, #24
 19291 008c 030053E3 		cmp	r3, #3
 19292 0090 3F00000A 		beq	.L1265
 19293              		.loc 1 7478 5 discriminator 7
 19294 0094 0130E0E3 		mvn	r3, #1
 19295              		.loc 1 7478 5
 19296 0098 BB0000EA 		b	.L1263
 19297              	.L1261:
 19298              		.loc 1 7478 5 discriminator 2
 19299 009c 1C301BE5 		ldr	r3, [fp, #-28]
 19300 00a0 2324A0E1 		lsr	r2, r3, #8
 19301 00a4 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 471


 19302 00a8 143093E5 		ldr	r3, [r3, #20]
 19303 00ac 030052E1 		cmp	r2, r3
 19304 00b0 0100003A 		bcc	.L1266
 19305              		.loc 1 7478 5 discriminator 8
 19306 00b4 0230E0E3 		mvn	r3, #2
 19307              		.loc 1 7478 5
 19308 00b8 B30000EA 		b	.L1263
 19309              	.L1266:
 19310              		.loc 1 7478 5 discriminator 9
 19311 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 19312 00c0 2334A0E1 		lsr	r3, r3, #8
 19313 00c4 8322A0E1 		lsl	r2, r3, #5
 19314 00c8 18301BE5 		ldr	r3, [fp, #-24]
 19315 00cc 0C3093E5 		ldr	r3, [r3, #12]
 19316 00d0 033082E0 		add	r3, r2, r3
 19317 00d4 08300BE5 		str	r3, [fp, #-8]
 19318 00d8 08301BE5 		ldr	r3, [fp, #-8]
 19319 00dc 0300A0E1 		mov	r0, r3
 19320 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19321 00e4 0C000BE5 		str	r0, [fp, #-12]
 19322              		.loc 1 7478 5 discriminator 1
 19323 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 19324 00ec FF3803E2 		and	r3, r3, #16711680
 19325 00f0 020853E3 		cmp	r3, #131072
 19326 00f4 0100001A 		bne	.L1267
 19327              		.loc 1 7478 5 discriminator 10
 19328 00f8 0830E0E3 		mvn	r3, #8
 19329              		.loc 1 7478 5
 19330 00fc A20000EA 		b	.L1263
 19331              	.L1267:
 19332              		.loc 1 7478 5 discriminator 11
 19333 0100 0C301BE5 		ldr	r3, [fp, #-12]
 19334 0104 233CA0E1 		lsr	r3, r3, #24
 19335 0108 030053E3 		cmp	r3, #3
 19336 010c 0100000A 		beq	.L1268
 19337              		.loc 1 7478 5 discriminator 12
 19338 0110 0130E0E3 		mvn	r3, #1
 19339              		.loc 1 7478 5
 19340 0114 9C0000EA 		b	.L1263
 19341              	.L1268:
 19342              		.loc 1 7478 5 discriminator 13
 19343 0118 1C301BE5 		ldr	r3, [fp, #-28]
 19344 011c 7F2003E2 		and	r2, r3, #127
 19345 0120 08301BE5 		ldr	r3, [fp, #-8]
 19346 0124 143093E5 		ldr	r3, [r3, #20]
 19347 0128 030052E1 		cmp	r2, r3
 19348 012c 0100003A 		bcc	.L1269
 19349              		.loc 1 7478 5 discriminator 14
 19350 0130 0230E0E3 		mvn	r3, #2
 19351              		.loc 1 7478 5
 19352 0134 940000EA 		b	.L1263
 19353              	.L1269:
 19354              		.loc 1 7478 5 discriminator 15
 19355 0138 1C301BE5 		ldr	r3, [fp, #-28]
 19356 013c 7F3003E2 		and	r3, r3, #127
 19357 0140 8322A0E1 		lsl	r2, r3, #5
 19358 0144 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 472


 19359 0148 0C3093E5 		ldr	r3, [r3, #12]
 19360 014c 033082E0 		add	r3, r2, r3
 19361 0150 08300BE5 		str	r3, [fp, #-8]
 19362 0154 08301BE5 		ldr	r3, [fp, #-8]
 19363 0158 0300A0E1 		mov	r0, r3
 19364 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19365 0160 0C000BE5 		str	r0, [fp, #-12]
 19366              		.loc 1 7478 5 discriminator 1
 19367 0164 0C301BE5 		ldr	r3, [fp, #-12]
 19368 0168 FF3803E2 		and	r3, r3, #16711680
 19369 016c 020853E3 		cmp	r3, #131072
 19370 0170 0100001A 		bne	.L1270
 19371              		.loc 1 7478 5 discriminator 16
 19372 0174 0830E0E3 		mvn	r3, #8
 19373              		.loc 1 7478 5
 19374 0178 830000EA 		b	.L1263
 19375              	.L1270:
 19376              		.loc 1 7478 5 discriminator 17
 19377 017c 0C301BE5 		ldr	r3, [fp, #-12]
 19378 0180 233CA0E1 		lsr	r3, r3, #24
 19379 0184 030053E3 		cmp	r3, #3
 19380 0188 0100000A 		beq	.L1265
 19381              		.loc 1 7478 5 discriminator 18
 19382 018c 0130E0E3 		mvn	r3, #1
 19383              		.loc 1 7478 5
 19384 0190 7D0000EA 		b	.L1263
 19385              	.L1265:
7479:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
7480:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7481:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 19386              		.loc 1 7481 5 is_stmt 1
 19387 0194 08301BE5 		ldr	r3, [fp, #-8]
 19388 0198 083093E5 		ldr	r3, [r3, #8]
 19389 019c 023003E2 		and	r3, r3, #2
 19390 01a0 000053E3 		cmp	r3, #0
 19391 01a4 0100001A 		bne	.L1271
 19392              		.loc 1 7481 5 is_stmt 0 discriminator 1
 19393 01a8 0630E0E3 		mvn	r3, #6
 19394              		.loc 1 7481 5
 19395 01ac 760000EA 		b	.L1263
 19396              	.L1271:
7482:../../Source/Kernel/rme_kernel.c ****     
7483:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7484:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Del);
 19397              		.loc 1 7484 5 is_stmt 1
 19398 01b0 08301BE5 		ldr	r3, [fp, #-8]
 19399 01b4 142093E5 		ldr	r2, [r3, #20]
 19400 01b8 20301BE5 		ldr	r3, [fp, #-32]
 19401 01bc 030052E1 		cmp	r2, r3
 19402 01c0 0100008A 		bhi	.L1272
 19403              		.loc 1 7484 5 is_stmt 0 discriminator 1
 19404 01c4 0230E0E3 		mvn	r3, #2
 19405              		.loc 1 7484 5
 19406 01c8 6F0000EA 		b	.L1263
 19407              	.L1272:
 19408              		.loc 1 7484 5 discriminator 2
 19409 01cc 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 473


 19410 01d0 8322A0E1 		lsl	r2, r3, #5
 19411 01d4 08301BE5 		ldr	r3, [fp, #-8]
 19412 01d8 0C3093E5 		ldr	r3, [r3, #12]
 19413 01dc 033082E0 		add	r3, r2, r3
 19414 01e0 10300BE5 		str	r3, [fp, #-16]
7485:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
7486:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Inv_Del,Type_Stat,RME_CAP_TYPE_INV);
 19415              		.loc 1 7486 5 is_stmt 1
 19416 01e4 10301BE5 		ldr	r3, [fp, #-16]
 19417 01e8 0300A0E1 		mov	r0, r3
 19418 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19419 01f0 0C000BE5 		str	r0, [fp, #-12]
 19420              		.loc 1 7486 5 is_stmt 0 discriminator 1
 19421 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 19422 01f8 FF3803E2 		and	r3, r3, #16711680
 19423 01fc 020853E3 		cmp	r3, #131072
 19424 0200 0100000A 		beq	.L1273
 19425 0204 0830E0E3 		mvn	r3, #8
 19426              		.loc 1 7486 5
 19427 0208 5F0000EA 		b	.L1263
 19428              	.L1273:
 19429              		.loc 1 7486 5 discriminator 2
 19430 020c 0C301BE5 		ldr	r3, [fp, #-12]
 19431 0210 233CA0E1 		lsr	r3, r3, #24
 19432 0214 070053E3 		cmp	r3, #7
 19433 0218 0100000A 		beq	.L1274
 19434              		.loc 1 7486 5 discriminator 3
 19435 021c 0130E0E3 		mvn	r3, #1
 19436              		.loc 1 7486 5
 19437 0220 590000EA 		b	.L1263
 19438              	.L1274:
 19439              		.loc 1 7486 5 discriminator 4
 19440 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19441 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19442 022c 002093E5 		ldr	r2, [r3]
 19443 0230 10301BE5 		ldr	r3, [fp, #-16]
 19444 0234 103093E5 		ldr	r3, [r3, #16]
 19445 0238 0310A0E1 		mov	r1, r3
 19446 023c 0200A0E1 		mov	r0, r2
 19447 0240 FEFFFFEB 		bl	_RME_Diff
 19448 0244 0030A0E1 		mov	r3, r0
 19449              		.loc 1 7486 5 discriminator 1
 19450 0248 0A0053E3 		cmp	r3, #10
 19451 024c 0100008A 		bhi	.L1275
 19452              		.loc 1 7486 5 discriminator 5
 19453 0250 0730E0E3 		mvn	r3, #7
 19454              		.loc 1 7486 5
 19455 0254 4C0000EA 		b	.L1263
 19456              	.L1275:
 19457              		.loc 1 7486 5 discriminator 6
 19458 0258 10301BE5 		ldr	r3, [fp, #-16]
 19459 025c 043093E5 		ldr	r3, [r3, #4]
 19460 0260 000053E3 		cmp	r3, #0
 19461 0264 0B00000A 		beq	.L1276
 19462              		.loc 1 7486 5 discriminator 7
 19463 0268 0C301BE5 		ldr	r3, [fp, #-12]
 19464 026c 7330FFE6 		uxth	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 474


 19465 0270 000053E3 		cmp	r3, #0
 19466 0274 0500001A 		bne	.L1277
 19467              		.loc 1 7486 5 discriminator 9
 19468 0278 10001BE5 		ldr	r0, [fp, #-16]
 19469 027c 0C301BE5 		ldr	r3, [fp, #-12]
 19470 0280 FF38C3E3 		bic	r3, r3, #16711680
 19471 0284 0320A0E1 		mov	r2, r3
 19472 0288 0C101BE5 		ldr	r1, [fp, #-12]
 19473 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19474              	.L1277:
 19475              		.loc 1 7486 5 discriminator 11
 19476 0290 0530E0E3 		mvn	r3, #5
 19477              		.loc 1 7486 5
 19478 0294 3C0000EA 		b	.L1263
 19479              	.L1276:
 19480              		.loc 1 7486 5 discriminator 8
 19481 0298 0C301BE5 		ldr	r3, [fp, #-12]
 19482 029c 7330FFE6 		uxth	r3, r3
 19483 02a0 000053E3 		cmp	r3, #0
 19484 02a4 0800000A 		beq	.L1278
 19485              		.loc 1 7486 5 discriminator 12
 19486 02a8 003000E3 		movw	r3, #:lower16:.LC6
 19487 02ac 003040E3 		movt	r3, #:upper16:.LC6
 19488 02b0 002000E3 		movw	r2, #:lower16:.LC7
 19489 02b4 002040E3 		movt	r2, #:upper16:.LC7
 19490 02b8 3E1D01E3 		movw	r1, #7486
 19491 02bc 000000E3 		movw	r0, #:lower16:.LC8
 19492 02c0 000040E3 		movt	r0, #:upper16:.LC8
 19493 02c4 FEFFFFEB 		bl	RME_Log
 19494              	.L1279:
 19495              		.loc 1 7486 5
 19496 02c8 FEFFFFEA 		b	.L1279
 19497              	.L1278:
7487:../../Source/Kernel/rme_kernel.c ****     
7488:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation */
7489:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Del,struct RME_Inv_Struct*);
 19498              		.loc 1 7489 16 is_stmt 1
 19499 02cc 10301BE5 		ldr	r3, [fp, #-16]
 19500 02d0 0C3093E5 		ldr	r3, [r3, #12]
 19501              		.loc 1 7489 15
 19502 02d4 14300BE5 		str	r3, [fp, #-20]
7490:../../Source/Kernel/rme_kernel.c ****     
7491:../../Source/Kernel/rme_kernel.c ****     /* See if the invocation is currently being used. If yes, we cannot delete it */
7492:../../Source/Kernel/rme_kernel.c ****     if(Invocation->Thd_Act!=RME_NULL)
 19503              		.loc 1 7492 18
 19504 02d8 14301BE5 		ldr	r3, [fp, #-20]
 19505 02dc 0C3093E5 		ldr	r3, [r3, #12]
 19506              		.loc 1 7492 7
 19507 02e0 000053E3 		cmp	r3, #0
 19508 02e4 0700000A 		beq	.L1280
7493:../../Source/Kernel/rme_kernel.c ****     {
7494:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7495:../../Source/Kernel/rme_kernel.c **** 
7496:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Inv_Del,Type_Stat);
 19509              		.loc 1 7496 9
 19510 02e8 10001BE5 		ldr	r0, [fp, #-16]
 19511 02ec 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 475


 19512 02f0 FF38C3E3 		bic	r3, r3, #16711680
 19513 02f4 0320A0E1 		mov	r2, r3
 19514 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 19515 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
7497:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19516              		.loc 1 7497 16
 19517 0300 4B3FE0E3 		mvn	r3, #300
 19518 0304 200000EA 		b	.L1263
 19519              	.L1280:
7498:../../Source/Kernel/rme_kernel.c ****     }
7499:../../Source/Kernel/rme_kernel.c ****     else
7500:../../Source/Kernel/rme_kernel.c ****     {
7501:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7502:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7503:../../Source/Kernel/rme_kernel.c ****     }
7504:../../Source/Kernel/rme_kernel.c ****     
7505:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
7506:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Inv_Del,Type_Stat);
 19520              		.loc 1 7506 5
 19521 0308 10301BE5 		ldr	r3, [fp, #-16]
 19522 030c 0020A0E3 		mov	r2, #0
 19523 0310 0C101BE5 		ldr	r1, [fp, #-12]
 19524 0314 0300A0E1 		mov	r0, r3
 19525 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19526 031c 0030A0E1 		mov	r3, r0
 19527              		.loc 1 7506 5 is_stmt 0 discriminator 1
 19528 0320 000053E3 		cmp	r3, #0
 19529 0324 0100001A 		bne	.L1281
 19530 0328 0030E0E3 		mvn	r3, #0
 19531              		.loc 1 7506 5
 19532 032c 160000EA 		b	.L1263
 19533              	.L1281:
7507:../../Source/Kernel/rme_kernel.c ****     
7508:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
7509:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Invocation->Prc->Head.Root_Ref), -1);
 19534              		.loc 1 7509 5 is_stmt 1
 19535 0330 14301BE5 		ldr	r3, [fp, #-20]
 19536 0334 083093E5 		ldr	r3, [r3, #8]
 19537 0338 043083E2 		add	r3, r3, #4
 19538 033c 0010E0E3 		mvn	r1, #0
 19539 0340 0300A0E1 		mov	r0, r3
 19540 0344 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7510:../../Source/Kernel/rme_kernel.c ****     
7511:../../Source/Kernel/rme_kernel.c ****     /* Try to clear the area - this must be successful */
7512:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Invocation,RME_INV_SIZE)==0);
 19541              		.loc 1 7512 5
 19542 0348 14301BE5 		ldr	r3, [fp, #-20]
 19543 034c 2410A0E3 		mov	r1, #36
 19544 0350 0300A0E1 		mov	r0, r3
 19545 0354 FEFFFFEB 		bl	_RME_Kot_Erase
 19546 0358 0030A0E1 		mov	r3, r0
 19547              		.loc 1 7512 5 is_stmt 0 discriminator 1
 19548 035c 000053E3 		cmp	r3, #0
 19549 0360 0800000A 		beq	.L1282
 19550 0364 003000E3 		movw	r3, #:lower16:.LC6
 19551 0368 003040E3 		movt	r3, #:upper16:.LC6
 19552 036c 002000E3 		movw	r2, #:lower16:.LC7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 476


 19553 0370 002040E3 		movt	r2, #:upper16:.LC7
 19554 0374 581D01E3 		movw	r1, #7512
 19555 0378 000000E3 		movw	r0, #:lower16:.LC8
 19556 037c 000040E3 		movt	r0, #:upper16:.LC8
 19557 0380 FEFFFFEB 		bl	RME_Log
 19558              	.L1283:
 19559              		.loc 1 7512 5
 19560 0384 FEFFFFEA 		b	.L1283
 19561              	.L1282:
7513:../../Source/Kernel/rme_kernel.c ****     
7514:../../Source/Kernel/rme_kernel.c ****     return 0;
 19562              		.loc 1 7514 12 is_stmt 1
 19563 0388 0030A0E3 		mov	r3, #0
 19564              	.L1263:
7515:../../Source/Kernel/rme_kernel.c **** }
 19565              		.loc 1 7515 1
 19566 038c 0300A0E1 		mov	r0, r3
 19567 0390 04D04BE2 		sub	sp, fp, #4
 19568              		.cfi_def_cfa 13, 8
 19569              		@ sp needed
 19570 0394 0088BDE8 		pop	{fp, pc}
 19571              		.cfi_endproc
 19572              	.LFE73:
 19574              		.section	.text._RME_Inv_Set,"ax",%progbits
 19575              		.align	2
 19576              		.syntax unified
 19577              		.arm
 19579              	_RME_Inv_Set:
 19580              	.LFB74:
7516:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Del *************************************************/
7517:../../Source/Kernel/rme_kernel.c **** 
7518:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Set ******************************************************
7519:../../Source/Kernel/rme_kernel.c **** Description : Set an invocation stub's entry point and stack. The registers will
7520:../../Source/Kernel/rme_kernel.c ****               be initialized with these contents.
7521:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7522:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7523:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7524:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry of the thread.
7525:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
7526:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc_Ret - If there is an exception in this
7527:../../Source/Kernel/rme_kernel.c ****                                      invocation, return immediately, or wait
7528:../../Source/Kernel/rme_kernel.c ****                                      for fault handling?
7529:../../Source/Kernel/rme_kernel.c ****                                      If 1, we return directly on fault.
7530:../../Source/Kernel/rme_kernel.c **** Output      : None.
7531:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7532:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7533:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Set(struct RME_Cap_Cpt* Cpt,
7534:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7535:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry,
7536:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Stack,
7537:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc_Ret)
7538:../../Source/Kernel/rme_kernel.c **** {
 19581              		.loc 1 7538 1
 19582              		.cfi_startproc
 19583              		@ args = 4, pretend = 0, frame = 32
 19584              		@ frame_needed = 1, uses_anonymous_args = 0
 19585 0000 00482DE9 		push	{fp, lr}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 477


 19586              		.cfi_def_cfa_offset 8
 19587              		.cfi_offset 11, -8
 19588              		.cfi_offset 14, -4
 19589 0004 04B08DE2 		add	fp, sp, #4
 19590              		.cfi_def_cfa 11, 4
 19591 0008 20D04DE2 		sub	sp, sp, #32
 19592 000c 18000BE5 		str	r0, [fp, #-24]
 19593 0010 1C100BE5 		str	r1, [fp, #-28]
 19594 0014 20200BE5 		str	r2, [fp, #-32]
 19595 0018 24300BE5 		str	r3, [fp, #-36]
7539:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7540:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Inv_Struct* Invocation;
7541:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7542:../../Source/Kernel/rme_kernel.c ****     
7543:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7544:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19596              		.loc 1 7544 5
 19597 001c 1C301BE5 		ldr	r3, [fp, #-28]
 19598 0020 803003E2 		and	r3, r3, #128
 19599 0024 000053E3 		cmp	r3, #0
 19600 0028 1C00001A 		bne	.L1285
 19601              		.loc 1 7544 5 is_stmt 0 discriminator 1
 19602 002c 18301BE5 		ldr	r3, [fp, #-24]
 19603 0030 142093E5 		ldr	r2, [r3, #20]
 19604 0034 1C301BE5 		ldr	r3, [fp, #-28]
 19605 0038 030052E1 		cmp	r2, r3
 19606 003c 0100008A 		bhi	.L1286
 19607              		.loc 1 7544 5 discriminator 3
 19608 0040 0230E0E3 		mvn	r3, #2
 19609              		.loc 1 7544 5
 19610 0044 670000EA 		b	.L1287
 19611              	.L1286:
 19612              		.loc 1 7544 5 discriminator 4
 19613 0048 1C301BE5 		ldr	r3, [fp, #-28]
 19614 004c 8322A0E1 		lsl	r2, r3, #5
 19615 0050 18301BE5 		ldr	r3, [fp, #-24]
 19616 0054 0C3093E5 		ldr	r3, [r3, #12]
 19617 0058 033082E0 		add	r3, r2, r3
 19618 005c 08300BE5 		str	r3, [fp, #-8]
 19619 0060 08301BE5 		ldr	r3, [fp, #-8]
 19620 0064 0300A0E1 		mov	r0, r3
 19621 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19622 006c 0C000BE5 		str	r0, [fp, #-12]
 19623              		.loc 1 7544 5 discriminator 1
 19624 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19625 0074 FF3803E2 		and	r3, r3, #16711680
 19626 0078 020853E3 		cmp	r3, #131072
 19627 007c 0100001A 		bne	.L1288
 19628              		.loc 1 7544 5 discriminator 5
 19629 0080 0830E0E3 		mvn	r3, #8
 19630              		.loc 1 7544 5
 19631 0084 570000EA 		b	.L1287
 19632              	.L1288:
 19633              		.loc 1 7544 5 discriminator 6
 19634 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19635 008c 233CA0E1 		lsr	r3, r3, #24
 19636 0090 070053E3 		cmp	r3, #7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 478


 19637 0094 3F00000A 		beq	.L1289
 19638              		.loc 1 7544 5 discriminator 7
 19639 0098 0130E0E3 		mvn	r3, #1
 19640              		.loc 1 7544 5
 19641 009c 510000EA 		b	.L1287
 19642              	.L1285:
 19643              		.loc 1 7544 5 discriminator 2
 19644 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 19645 00a4 2324A0E1 		lsr	r2, r3, #8
 19646 00a8 18301BE5 		ldr	r3, [fp, #-24]
 19647 00ac 143093E5 		ldr	r3, [r3, #20]
 19648 00b0 030052E1 		cmp	r2, r3
 19649 00b4 0100003A 		bcc	.L1290
 19650              		.loc 1 7544 5 discriminator 8
 19651 00b8 0230E0E3 		mvn	r3, #2
 19652              		.loc 1 7544 5
 19653 00bc 490000EA 		b	.L1287
 19654              	.L1290:
 19655              		.loc 1 7544 5 discriminator 9
 19656 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 19657 00c4 2334A0E1 		lsr	r3, r3, #8
 19658 00c8 8322A0E1 		lsl	r2, r3, #5
 19659 00cc 18301BE5 		ldr	r3, [fp, #-24]
 19660 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19661 00d4 033082E0 		add	r3, r2, r3
 19662 00d8 08300BE5 		str	r3, [fp, #-8]
 19663 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19664 00e0 0300A0E1 		mov	r0, r3
 19665 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19666 00e8 0C000BE5 		str	r0, [fp, #-12]
 19667              		.loc 1 7544 5 discriminator 1
 19668 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19669 00f0 FF3803E2 		and	r3, r3, #16711680
 19670 00f4 020853E3 		cmp	r3, #131072
 19671 00f8 0100001A 		bne	.L1291
 19672              		.loc 1 7544 5 discriminator 10
 19673 00fc 0830E0E3 		mvn	r3, #8
 19674              		.loc 1 7544 5
 19675 0100 380000EA 		b	.L1287
 19676              	.L1291:
 19677              		.loc 1 7544 5 discriminator 11
 19678 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19679 0108 233CA0E1 		lsr	r3, r3, #24
 19680 010c 030053E3 		cmp	r3, #3
 19681 0110 0100000A 		beq	.L1292
 19682              		.loc 1 7544 5 discriminator 12
 19683 0114 0130E0E3 		mvn	r3, #1
 19684              		.loc 1 7544 5
 19685 0118 320000EA 		b	.L1287
 19686              	.L1292:
 19687              		.loc 1 7544 5 discriminator 13
 19688 011c 1C301BE5 		ldr	r3, [fp, #-28]
 19689 0120 7F2003E2 		and	r2, r3, #127
 19690 0124 08301BE5 		ldr	r3, [fp, #-8]
 19691 0128 143093E5 		ldr	r3, [r3, #20]
 19692 012c 030052E1 		cmp	r2, r3
 19693 0130 0100003A 		bcc	.L1293
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 479


 19694              		.loc 1 7544 5 discriminator 14
 19695 0134 0230E0E3 		mvn	r3, #2
 19696              		.loc 1 7544 5
 19697 0138 2A0000EA 		b	.L1287
 19698              	.L1293:
 19699              		.loc 1 7544 5 discriminator 15
 19700 013c 1C301BE5 		ldr	r3, [fp, #-28]
 19701 0140 7F3003E2 		and	r3, r3, #127
 19702 0144 8322A0E1 		lsl	r2, r3, #5
 19703 0148 08301BE5 		ldr	r3, [fp, #-8]
 19704 014c 0C3093E5 		ldr	r3, [r3, #12]
 19705 0150 033082E0 		add	r3, r2, r3
 19706 0154 08300BE5 		str	r3, [fp, #-8]
 19707 0158 08301BE5 		ldr	r3, [fp, #-8]
 19708 015c 0300A0E1 		mov	r0, r3
 19709 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19710 0164 0C000BE5 		str	r0, [fp, #-12]
 19711              		.loc 1 7544 5 discriminator 1
 19712 0168 0C301BE5 		ldr	r3, [fp, #-12]
 19713 016c FF3803E2 		and	r3, r3, #16711680
 19714 0170 020853E3 		cmp	r3, #131072
 19715 0174 0100001A 		bne	.L1294
 19716              		.loc 1 7544 5 discriminator 16
 19717 0178 0830E0E3 		mvn	r3, #8
 19718              		.loc 1 7544 5
 19719 017c 190000EA 		b	.L1287
 19720              	.L1294:
 19721              		.loc 1 7544 5 discriminator 17
 19722 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19723 0184 233CA0E1 		lsr	r3, r3, #24
 19724 0188 070053E3 		cmp	r3, #7
 19725 018c 0100000A 		beq	.L1289
 19726              		.loc 1 7544 5 discriminator 18
 19727 0190 0130E0E3 		mvn	r3, #1
 19728              		.loc 1 7544 5
 19729 0194 130000EA 		b	.L1287
 19730              	.L1289:
7545:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7546:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7547:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_SET);
 19731              		.loc 1 7547 5 is_stmt 1
 19732 0198 08301BE5 		ldr	r3, [fp, #-8]
 19733 019c 083093E5 		ldr	r3, [r3, #8]
 19734 01a0 013003E2 		and	r3, r3, #1
 19735 01a4 000053E3 		cmp	r3, #0
 19736 01a8 0100001A 		bne	.L1295
 19737              		.loc 1 7547 5 is_stmt 0 discriminator 1
 19738 01ac 0630E0E3 		mvn	r3, #6
 19739              		.loc 1 7547 5
 19740 01b0 0C0000EA 		b	.L1287
 19741              	.L1295:
7548:../../Source/Kernel/rme_kernel.c ****     
7549:../../Source/Kernel/rme_kernel.c ****     /* Commit the change - we do not care if the invocation is in use, it is
7550:../../Source/Kernel/rme_kernel.c ****      * the user's responsibility to guarantee the integrity of applications */
7551:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19742              		.loc 1 7551 16 is_stmt 1
 19743 01b4 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 480


 19744 01b8 0C3093E5 		ldr	r3, [r3, #12]
 19745              		.loc 1 7551 15
 19746 01bc 10300BE5 		str	r3, [fp, #-16]
7552:../../Source/Kernel/rme_kernel.c ****     Invocation->Entry=Entry;
 19747              		.loc 1 7552 22
 19748 01c0 10301BE5 		ldr	r3, [fp, #-16]
 19749 01c4 20201BE5 		ldr	r2, [fp, #-32]
 19750 01c8 102083E5 		str	r2, [r3, #16]
7553:../../Source/Kernel/rme_kernel.c ****     Invocation->Stack=Stack;
 19751              		.loc 1 7553 22
 19752 01cc 10301BE5 		ldr	r3, [fp, #-16]
 19753 01d0 24201BE5 		ldr	r2, [fp, #-36]
 19754 01d4 142083E5 		str	r2, [r3, #20]
7554:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=Is_Exc_Ret;
 19755              		.loc 1 7554 27
 19756 01d8 10301BE5 		ldr	r3, [fp, #-16]
 19757 01dc 04209BE5 		ldr	r2, [fp, #4]
 19758 01e0 182083E5 		str	r2, [r3, #24]
7555:../../Source/Kernel/rme_kernel.c ****     
7556:../../Source/Kernel/rme_kernel.c ****     return 0;
 19759              		.loc 1 7556 12
 19760 01e4 0030A0E3 		mov	r3, #0
 19761              	.L1287:
7557:../../Source/Kernel/rme_kernel.c **** }
 19762              		.loc 1 7557 1
 19763 01e8 0300A0E1 		mov	r0, r3
 19764 01ec 04D04BE2 		sub	sp, fp, #4
 19765              		.cfi_def_cfa 13, 8
 19766              		@ sp needed
 19767 01f0 0088BDE8 		pop	{fp, pc}
 19768              		.cfi_endproc
 19769              	.LFE74:
 19771              		.section	.text._RME_Inv_Act,"ax",%progbits
 19772              		.align	2
 19773              		.syntax unified
 19774              		.arm
 19776              	_RME_Inv_Act:
 19777              	.LFB75:
7558:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Set *************************************************/
7559:../../Source/Kernel/rme_kernel.c **** 
7560:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Act ******************************************************
7561:../../Source/Kernel/rme_kernel.c **** Description : Call the invocation stub. One parameter is guaranteed; however, 
7562:../../Source/Kernel/rme_kernel.c ****               some platforms may provide more than that.
7563:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7564:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7565:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The invocation stub.
7566:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7567:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter for the call.
7568:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7569:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7570:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Act(struct RME_Cap_Cpt* Cpt, 
7571:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7572:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7573:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param)
7574:../../Source/Kernel/rme_kernel.c **** {
 19778              		.loc 1 7574 1
 19779              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 481


 19780              		@ args = 0, pretend = 0, frame = 40
 19781              		@ frame_needed = 1, uses_anonymous_args = 0
 19782 0000 00482DE9 		push	{fp, lr}
 19783              		.cfi_def_cfa_offset 8
 19784              		.cfi_offset 11, -8
 19785              		.cfi_offset 14, -4
 19786 0004 04B08DE2 		add	fp, sp, #4
 19787              		.cfi_def_cfa 11, 4
 19788 0008 30D04DE2 		sub	sp, sp, #48
 19789 000c 20000BE5 		str	r0, [fp, #-32]
 19790 0010 24100BE5 		str	r1, [fp, #-36]
 19791 0014 28200BE5 		str	r2, [fp, #-40]
 19792 0018 2C300BE5 		str	r3, [fp, #-44]
7575:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7576:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7577:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7578:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Act;
7579:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7580:../../Source/Kernel/rme_kernel.c ****     
7581:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
7582:../../Source/Kernel/rme_kernel.c ****     /* Check if the current invocation stack has reached its limit */
7583:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
7584:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Ctx.Invstk_Depth>=RME_INV_DEPTH_MAX)
7585:../../Source/Kernel/rme_kernel.c ****     {
7586:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7587:../../Source/Kernel/rme_kernel.c **** 
7588:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
7589:../../Source/Kernel/rme_kernel.c ****     }
7590:../../Source/Kernel/rme_kernel.c ****     else
7591:../../Source/Kernel/rme_kernel.c ****     {
7592:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7593:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7594:../../Source/Kernel/rme_kernel.c ****     }
7595:../../Source/Kernel/rme_kernel.c **** #endif
7596:../../Source/Kernel/rme_kernel.c **** 
7597:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7598:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19793              		.loc 1 7598 5
 19794 001c 28301BE5 		ldr	r3, [fp, #-40]
 19795 0020 803003E2 		and	r3, r3, #128
 19796 0024 000053E3 		cmp	r3, #0
 19797 0028 1C00001A 		bne	.L1297
 19798              		.loc 1 7598 5 is_stmt 0 discriminator 1
 19799 002c 20301BE5 		ldr	r3, [fp, #-32]
 19800 0030 142093E5 		ldr	r2, [r3, #20]
 19801 0034 28301BE5 		ldr	r3, [fp, #-40]
 19802 0038 030052E1 		cmp	r2, r3
 19803 003c 0100008A 		bhi	.L1298
 19804              		.loc 1 7598 5 discriminator 3
 19805 0040 0230E0E3 		mvn	r3, #2
 19806              		.loc 1 7598 5
 19807 0044 A60000EA 		b	.L1299
 19808              	.L1298:
 19809              		.loc 1 7598 5 discriminator 4
 19810 0048 28301BE5 		ldr	r3, [fp, #-40]
 19811 004c 8322A0E1 		lsl	r2, r3, #5
 19812 0050 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 482


 19813 0054 0C3093E5 		ldr	r3, [r3, #12]
 19814 0058 033082E0 		add	r3, r2, r3
 19815 005c 08300BE5 		str	r3, [fp, #-8]
 19816 0060 08301BE5 		ldr	r3, [fp, #-8]
 19817 0064 0300A0E1 		mov	r0, r3
 19818 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19819 006c 0C000BE5 		str	r0, [fp, #-12]
 19820              		.loc 1 7598 5 discriminator 1
 19821 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19822 0074 FF3803E2 		and	r3, r3, #16711680
 19823 0078 020853E3 		cmp	r3, #131072
 19824 007c 0100001A 		bne	.L1300
 19825              		.loc 1 7598 5 discriminator 5
 19826 0080 0830E0E3 		mvn	r3, #8
 19827              		.loc 1 7598 5
 19828 0084 960000EA 		b	.L1299
 19829              	.L1300:
 19830              		.loc 1 7598 5 discriminator 6
 19831 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19832 008c 233CA0E1 		lsr	r3, r3, #24
 19833 0090 070053E3 		cmp	r3, #7
 19834 0094 3F00000A 		beq	.L1301
 19835              		.loc 1 7598 5 discriminator 7
 19836 0098 0130E0E3 		mvn	r3, #1
 19837              		.loc 1 7598 5
 19838 009c 900000EA 		b	.L1299
 19839              	.L1297:
 19840              		.loc 1 7598 5 discriminator 2
 19841 00a0 28301BE5 		ldr	r3, [fp, #-40]
 19842 00a4 2324A0E1 		lsr	r2, r3, #8
 19843 00a8 20301BE5 		ldr	r3, [fp, #-32]
 19844 00ac 143093E5 		ldr	r3, [r3, #20]
 19845 00b0 030052E1 		cmp	r2, r3
 19846 00b4 0100003A 		bcc	.L1302
 19847              		.loc 1 7598 5 discriminator 8
 19848 00b8 0230E0E3 		mvn	r3, #2
 19849              		.loc 1 7598 5
 19850 00bc 880000EA 		b	.L1299
 19851              	.L1302:
 19852              		.loc 1 7598 5 discriminator 9
 19853 00c0 28301BE5 		ldr	r3, [fp, #-40]
 19854 00c4 2334A0E1 		lsr	r3, r3, #8
 19855 00c8 8322A0E1 		lsl	r2, r3, #5
 19856 00cc 20301BE5 		ldr	r3, [fp, #-32]
 19857 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19858 00d4 033082E0 		add	r3, r2, r3
 19859 00d8 08300BE5 		str	r3, [fp, #-8]
 19860 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19861 00e0 0300A0E1 		mov	r0, r3
 19862 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19863 00e8 0C000BE5 		str	r0, [fp, #-12]
 19864              		.loc 1 7598 5 discriminator 1
 19865 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19866 00f0 FF3803E2 		and	r3, r3, #16711680
 19867 00f4 020853E3 		cmp	r3, #131072
 19868 00f8 0100001A 		bne	.L1303
 19869              		.loc 1 7598 5 discriminator 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 483


 19870 00fc 0830E0E3 		mvn	r3, #8
 19871              		.loc 1 7598 5
 19872 0100 770000EA 		b	.L1299
 19873              	.L1303:
 19874              		.loc 1 7598 5 discriminator 11
 19875 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19876 0108 233CA0E1 		lsr	r3, r3, #24
 19877 010c 030053E3 		cmp	r3, #3
 19878 0110 0100000A 		beq	.L1304
 19879              		.loc 1 7598 5 discriminator 12
 19880 0114 0130E0E3 		mvn	r3, #1
 19881              		.loc 1 7598 5
 19882 0118 710000EA 		b	.L1299
 19883              	.L1304:
 19884              		.loc 1 7598 5 discriminator 13
 19885 011c 28301BE5 		ldr	r3, [fp, #-40]
 19886 0120 7F2003E2 		and	r2, r3, #127
 19887 0124 08301BE5 		ldr	r3, [fp, #-8]
 19888 0128 143093E5 		ldr	r3, [r3, #20]
 19889 012c 030052E1 		cmp	r2, r3
 19890 0130 0100003A 		bcc	.L1305
 19891              		.loc 1 7598 5 discriminator 14
 19892 0134 0230E0E3 		mvn	r3, #2
 19893              		.loc 1 7598 5
 19894 0138 690000EA 		b	.L1299
 19895              	.L1305:
 19896              		.loc 1 7598 5 discriminator 15
 19897 013c 28301BE5 		ldr	r3, [fp, #-40]
 19898 0140 7F3003E2 		and	r3, r3, #127
 19899 0144 8322A0E1 		lsl	r2, r3, #5
 19900 0148 08301BE5 		ldr	r3, [fp, #-8]
 19901 014c 0C3093E5 		ldr	r3, [r3, #12]
 19902 0150 033082E0 		add	r3, r2, r3
 19903 0154 08300BE5 		str	r3, [fp, #-8]
 19904 0158 08301BE5 		ldr	r3, [fp, #-8]
 19905 015c 0300A0E1 		mov	r0, r3
 19906 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19907 0164 0C000BE5 		str	r0, [fp, #-12]
 19908              		.loc 1 7598 5 discriminator 1
 19909 0168 0C301BE5 		ldr	r3, [fp, #-12]
 19910 016c FF3803E2 		and	r3, r3, #16711680
 19911 0170 020853E3 		cmp	r3, #131072
 19912 0174 0100001A 		bne	.L1306
 19913              		.loc 1 7598 5 discriminator 16
 19914 0178 0830E0E3 		mvn	r3, #8
 19915              		.loc 1 7598 5
 19916 017c 580000EA 		b	.L1299
 19917              	.L1306:
 19918              		.loc 1 7598 5 discriminator 17
 19919 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19920 0184 233CA0E1 		lsr	r3, r3, #24
 19921 0188 070053E3 		cmp	r3, #7
 19922 018c 0100000A 		beq	.L1301
 19923              		.loc 1 7598 5 discriminator 18
 19924 0190 0130E0E3 		mvn	r3, #1
 19925              		.loc 1 7598 5
 19926 0194 520000EA 		b	.L1299
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 484


 19927              	.L1301:
7599:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7600:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7601:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_ACT);
 19928              		.loc 1 7601 5 is_stmt 1
 19929 0198 08301BE5 		ldr	r3, [fp, #-8]
 19930 019c 083093E5 		ldr	r3, [r3, #8]
 19931 01a0 023003E2 		and	r3, r3, #2
 19932 01a4 000053E3 		cmp	r3, #0
 19933 01a8 0100001A 		bne	.L1307
 19934              		.loc 1 7601 5 is_stmt 0 discriminator 1
 19935 01ac 0630E0E3 		mvn	r3, #6
 19936              		.loc 1 7601 5
 19937 01b0 4B0000EA 		b	.L1299
 19938              	.L1307:
7602:../../Source/Kernel/rme_kernel.c **** 
7603:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation struct */
7604:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19939              		.loc 1 7604 16 is_stmt 1
 19940 01b4 08301BE5 		ldr	r3, [fp, #-8]
 19941 01b8 0C3093E5 		ldr	r3, [r3, #12]
 19942              		.loc 1 7604 15
 19943 01bc 10300BE5 		str	r3, [fp, #-16]
7605:../../Source/Kernel/rme_kernel.c ****     /* Check if this invocation port is already active */
7606:../../Source/Kernel/rme_kernel.c ****     Thd_Act=Invocation->Thd_Act;
 19944              		.loc 1 7606 12
 19945 01c0 10301BE5 		ldr	r3, [fp, #-16]
 19946 01c4 0C3093E5 		ldr	r3, [r3, #12]
 19947 01c8 14300BE5 		str	r3, [fp, #-20]
7607:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Thd_Act!=0U))
 19948              		.loc 1 7607 7
 19949 01cc 14301BE5 		ldr	r3, [fp, #-20]
 19950 01d0 000053E3 		cmp	r3, #0
 19951 01d4 0100000A 		beq	.L1308
7608:../../Source/Kernel/rme_kernel.c ****     {
7609:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7610:../../Source/Kernel/rme_kernel.c **** 
7611:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19952              		.loc 1 7611 16
 19953 01d8 4B3FE0E3 		mvn	r3, #300
 19954 01dc 400000EA 		b	.L1299
 19955              	.L1308:
7612:../../Source/Kernel/rme_kernel.c ****     }
7613:../../Source/Kernel/rme_kernel.c ****     else
7614:../../Source/Kernel/rme_kernel.c ****     {
7615:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7616:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7617:../../Source/Kernel/rme_kernel.c ****     }
7618:../../Source/Kernel/rme_kernel.c **** 
7619:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX==0U)
7620:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 19956              		.loc 1 7620 12
 19957 01e0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 19958 01e4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 19959 01e8 043093E5 		ldr	r3, [r3, #4]
 19960 01ec 18300BE5 		str	r3, [fp, #-24]
7621:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 485


7622:../../Source/Kernel/rme_kernel.c ****     
7623:../../Source/Kernel/rme_kernel.c ****     /* Try to do CAS and activate this port */
7624:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_COMP_SWAP((volatile rme_ptr_t*)&(Invocation->Thd_Act),
 19961              		.loc 1 7624 8
 19962 01f0 10301BE5 		ldr	r3, [fp, #-16]
 19963 01f4 0C3083E2 		add	r3, r3, #12
 19964 01f8 14101BE5 		ldr	r1, [fp, #-20]
 19965 01fc 18201BE5 		ldr	r2, [fp, #-24]
 19966 0200 0300A0E1 		mov	r0, r3
 19967 0204 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19968 0208 0030A0E1 		mov	r3, r0
 19969              		.loc 1 7624 7 discriminator 1
 19970 020c 000053E3 		cmp	r3, #0
 19971 0210 0100001A 		bne	.L1309
7625:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Act,
7626:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Cur)==RME_CASFAIL))
7627:../../Source/Kernel/rme_kernel.c ****     {
7628:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7629:../../Source/Kernel/rme_kernel.c **** 
7630:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19972              		.loc 1 7630 16
 19973 0214 4B3FE0E3 		mvn	r3, #300
 19974 0218 310000EA 		b	.L1299
 19975              	.L1309:
7631:../../Source/Kernel/rme_kernel.c ****     }
7632:../../Source/Kernel/rme_kernel.c ****     else
7633:../../Source/Kernel/rme_kernel.c ****     {
7634:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7635:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7636:../../Source/Kernel/rme_kernel.c ****     }
7637:../../Source/Kernel/rme_kernel.c **** 
7638:../../Source/Kernel/rme_kernel.c ****     /* Save whatever is needed to return to the point - normally only SP and IP needed
7639:../../Source/Kernel/rme_kernel.c ****      * because all other registers, including the coprocessor registers, are saved at
7640:../../Source/Kernel/rme_kernel.c ****      * user-level. We do not set the return value because it will be set by Inv_Ret.
7641:../../Source/Kernel/rme_kernel.c ****      * The coprocessor state will be consistent across the call */
7642:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Save(&(Invocation->Ret),Reg);
 19976              		.loc 1 7642 5
 19977 021c 10301BE5 		ldr	r3, [fp, #-16]
 19978 0220 1C3083E2 		add	r3, r3, #28
 19979 0224 24101BE5 		ldr	r1, [fp, #-36]
 19980 0228 0300A0E1 		mov	r0, r3
 19981 022c FEFFFFEB 		bl	__RME_Inv_Reg_Save
7643:../../Source/Kernel/rme_kernel.c ****     /* Push this into the stack: insert after the thread list header */
7644:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Invocation->Head),
 19982              		.loc 1 7644 5
 19983 0230 10001BE5 		ldr	r0, [fp, #-16]
 19984 0234 18301BE5 		ldr	r3, [fp, #-24]
 19985 0238 4C1083E2 		add	r1, r3, #76
 19986 023c 18301BE5 		ldr	r3, [fp, #-24]
 19987 0240 4C3093E5 		ldr	r3, [r3, #76]
 19988 0244 0320A0E1 		mov	r2, r3
 19989 0248 FEFFFFEB 		bl	_RME_List_Ins
7645:../../Source/Kernel/rme_kernel.c ****                   &(Thd_Cur->Ctx.Invstk),
7646:../../Source/Kernel/rme_kernel.c ****                   Thd_Cur->Ctx.Invstk.Next);
7647:../../Source/Kernel/rme_kernel.c ****     /* Increase invocation depth - no atomic operation needed */
7648:../../Source/Kernel/rme_kernel.c ****     Thd_Cur->Ctx.Invstk_Depth++;
 19990              		.loc 1 7648 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 486


 19991 024c 18301BE5 		ldr	r3, [fp, #-24]
 19992 0250 543093E5 		ldr	r3, [r3, #84]
 19993              		.loc 1 7648 30
 19994 0254 012083E2 		add	r2, r3, #1
 19995 0258 18301BE5 		ldr	r3, [fp, #-24]
 19996 025c 542083E5 		str	r2, [r3, #84]
7649:../../Source/Kernel/rme_kernel.c ****     /* Setup the register contents, and do the invocation */
7650:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Init(RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
 19997              		.loc 1 7650 24
 19998 0260 18301BE5 		ldr	r3, [fp, #-24]
 19999 0264 443093E5 		ldr	r3, [r3, #68]
 20000              		.loc 1 7650 5
 20001 0268 0201C3E3 		bic	r0, r3, #-2147483648
 20002 026c 10301BE5 		ldr	r3, [fp, #-16]
 20003 0270 101093E5 		ldr	r1, [r3, #16]
 20004 0274 10301BE5 		ldr	r3, [fp, #-16]
 20005 0278 142093E5 		ldr	r2, [r3, #20]
 20006 027c 24301BE5 		ldr	r3, [fp, #-36]
 20007 0280 00308DE5 		str	r3, [sp]
 20008 0284 2C301BE5 		ldr	r3, [fp, #-44]
 20009 0288 FEFFFFEB 		bl	__RME_Thd_Reg_Init
7651:../../Source/Kernel/rme_kernel.c ****                        Invocation->Entry,
7652:../../Source/Kernel/rme_kernel.c ****                        Invocation->Stack,
7653:../../Source/Kernel/rme_kernel.c ****                        Param,Reg);
7654:../../Source/Kernel/rme_kernel.c ****     
7655:../../Source/Kernel/rme_kernel.c ****     
7656:../../Source/Kernel/rme_kernel.c ****     /* We are assuming that we are always invoking into a new process (why use synchronous
7657:../../Source/Kernel/rme_kernel.c ****      * invocation if you don't do so?). So we always switch page tables regardless. */
7658:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7659:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20010              		.loc 1 7659 5
 20011 028c 10301BE5 		ldr	r3, [fp, #-16]
 20012 0290 083093E5 		ldr	r3, [r3, #8]
 20013 0294 183093E5 		ldr	r3, [r3, #24]
 20014 0298 003093E5 		ldr	r3, [r3]
 20015 029c 7330FFE6 		uxth	r3, r3
 20016 02a0 000053E3 		cmp	r3, #0
 20017 02a4 0800000A 		beq	.L1310
 20018              		.loc 1 7659 5 is_stmt 0 discriminator 1
 20019 02a8 003000E3 		movw	r3, #:lower16:.LC6
 20020 02ac 003040E3 		movt	r3, #:upper16:.LC6
 20021 02b0 002000E3 		movw	r2, #:lower16:.LC7
 20022 02b4 002040E3 		movt	r2, #:upper16:.LC7
 20023 02b8 EB1D01E3 		movw	r1, #7659
 20024 02bc 000000E3 		movw	r0, #:lower16:.LC8
 20025 02c0 000040E3 		movt	r0, #:upper16:.LC8
 20026 02c4 FEFFFFEB 		bl	RME_Log
 20027              	.L1311:
 20028              		.loc 1 7659 5
 20029 02c8 FEFFFFEA 		b	.L1311
 20030              	.L1310:
7660:../../Source/Kernel/rme_kernel.c **** #endif
7661:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Set(Invocation->Prc->Pgt);
 20031              		.loc 1 7661 29 is_stmt 1
 20032 02cc 10301BE5 		ldr	r3, [fp, #-16]
 20033 02d0 083093E5 		ldr	r3, [r3, #8]
 20034              		.loc 1 7661 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 487


 20035 02d4 183093E5 		ldr	r3, [r3, #24]
 20036 02d8 0300A0E1 		mov	r0, r3
 20037 02dc FEFFFFEB 		bl	__RME_Pgt_Set
7662:../../Source/Kernel/rme_kernel.c ****     
7663:../../Source/Kernel/rme_kernel.c ****     return 0;
 20038              		.loc 1 7663 12
 20039 02e0 0030A0E3 		mov	r3, #0
 20040              	.L1299:
7664:../../Source/Kernel/rme_kernel.c **** }
 20041              		.loc 1 7664 1
 20042 02e4 0300A0E1 		mov	r0, r3
 20043 02e8 04D04BE2 		sub	sp, fp, #4
 20044              		.cfi_def_cfa 13, 8
 20045              		@ sp needed
 20046 02ec 0088BDE8 		pop	{fp, pc}
 20047              		.cfi_endproc
 20048              	.LFE75:
 20050              		.section	.text._RME_Inv_Ret,"ax",%progbits
 20051              		.align	2
 20052              		.syntax unified
 20053              		.arm
 20055              	_RME_Inv_Ret:
 20056              	.LFB76:
7665:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Act *************************************************/
7666:../../Source/Kernel/rme_kernel.c **** 
7667:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Ret ******************************************************
7668:../../Source/Kernel/rme_kernel.c **** Description : Return from the invocation function, and set the return value to
7669:../../Source/Kernel/rme_kernel.c ****               the old register set. This function does not need a capability
7670:../../Source/Kernel/rme_kernel.c ****               table to work.
7671:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
7672:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Retval - The return value of this synchronous invocation.
7673:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc - Are we attempting a return from exception?
7674:../../Source/Kernel/rme_kernel.c **** Output      : None.
7675:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7676:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7677:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Ret(struct RME_Reg_Struct* Reg,
7678:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Retval,
7679:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc)
7680:../../Source/Kernel/rme_kernel.c **** {
 20057              		.loc 1 7680 1
 20058              		.cfi_startproc
 20059              		@ args = 0, pretend = 0, frame = 24
 20060              		@ frame_needed = 1, uses_anonymous_args = 0
 20061 0000 00482DE9 		push	{fp, lr}
 20062              		.cfi_def_cfa_offset 8
 20063              		.cfi_offset 11, -8
 20064              		.cfi_offset 14, -4
 20065 0004 04B08DE2 		add	fp, sp, #4
 20066              		.cfi_def_cfa 11, 4
 20067 0008 18D04DE2 		sub	sp, sp, #24
 20068 000c 10000BE5 		str	r0, [fp, #-16]
 20069 0010 14100BE5 		str	r1, [fp, #-20]
 20070 0014 18200BE5 		str	r2, [fp, #-24]
7681:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
7682:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7683:../../Source/Kernel/rme_kernel.c **** 
7684:../../Source/Kernel/rme_kernel.c ****     /* See if we can return; If we can, get the structure */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 488


7685:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CPU_LOCAL()->Thd_Cur;
 20071              		.loc 1 7685 11
 20072 0018 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 20073 001c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 20074 0020 043093E5 		ldr	r3, [r3, #4]
 20075 0024 08300BE5 		str	r3, [fp, #-8]
7686:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20076              		.loc 1 7686 16
 20077 0028 08301BE5 		ldr	r3, [fp, #-8]
 20078 002c 4C2093E5 		ldr	r2, [r3, #76]
 20079 0030 08301BE5 		ldr	r3, [fp, #-8]
 20080 0034 4C3083E2 		add	r3, r3, #76
 20081 0038 030052E1 		cmp	r2, r3
 20082 003c 0200000A 		beq	.L1313
 20083              		.loc 1 7686 16 is_stmt 0 discriminator 1
 20084 0040 08301BE5 		ldr	r3, [fp, #-8]
 20085 0044 4C3093E5 		ldr	r3, [r3, #76]
 20086 0048 000000EA 		b	.L1314
 20087              	.L1313:
 20088              		.loc 1 7686 16 discriminator 2
 20089 004c 0030A0E3 		mov	r3, #0
 20090              	.L1314:
 20091              		.loc 1 7686 15 is_stmt 1 discriminator 4
 20092 0050 0C300BE5 		str	r3, [fp, #-12]
7687:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Invocation==RME_NULL))
 20093              		.loc 1 7687 7
 20094 0054 0C301BE5 		ldr	r3, [fp, #-12]
 20095 0058 000053E3 		cmp	r3, #0
 20096 005c 0200001A 		bne	.L1315
7688:../../Source/Kernel/rme_kernel.c ****     {
7689:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7690:../../Source/Kernel/rme_kernel.c **** 
7691:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_EMPTY;
 20097              		.loc 1 7691 16
 20098 0060 D03E0FE3 		movw	r3, #65232
 20099 0064 FF3F4FE3 		movt	r3, 65535
 20100 0068 680000EA 		b	.L1316
 20101              	.L1315:
7692:../../Source/Kernel/rme_kernel.c ****     }
7693:../../Source/Kernel/rme_kernel.c ****     else
7694:../../Source/Kernel/rme_kernel.c ****     {
7695:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7696:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7697:../../Source/Kernel/rme_kernel.c ****     }
7698:../../Source/Kernel/rme_kernel.c **** 
7699:../../Source/Kernel/rme_kernel.c ****     /* See if this port allows return-on-fault */
7700:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Is_Exc!=0U)&&(Invocation->Is_Exc_Ret==0U)))
 20102              		.loc 1 7700 7
 20103 006c 18301BE5 		ldr	r3, [fp, #-24]
 20104 0070 000053E3 		cmp	r3, #0
 20105 0074 0600000A 		beq	.L1317
 20106              		.loc 1 7700 8 discriminator 1
 20107 0078 0C301BE5 		ldr	r3, [fp, #-12]
 20108 007c 183093E5 		ldr	r3, [r3, #24]
 20109 0080 000053E3 		cmp	r3, #0
 20110 0084 0200001A 		bne	.L1317
7701:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 489


7702:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7703:../../Source/Kernel/rme_kernel.c **** 
7704:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_FAULT;
 20111              		.loc 1 7704 16
 20112 0088 D23E0FE3 		movw	r3, #65234
 20113 008c FF3F4FE3 		movt	r3, 65535
 20114 0090 5E0000EA 		b	.L1316
 20115              	.L1317:
7705:../../Source/Kernel/rme_kernel.c ****     }
7706:../../Source/Kernel/rme_kernel.c ****     else
7707:../../Source/Kernel/rme_kernel.c ****     {
7708:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7709:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7710:../../Source/Kernel/rme_kernel.c ****     }
7711:../../Source/Kernel/rme_kernel.c **** 
7712:../../Source/Kernel/rme_kernel.c ****     /* Pop it from the stack */
7713:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 20116              		.loc 1 7713 5
 20117 0094 0C301BE5 		ldr	r3, [fp, #-12]
 20118 0098 042093E5 		ldr	r2, [r3, #4]
 20119 009c 0C301BE5 		ldr	r3, [fp, #-12]
 20120 00a0 003093E5 		ldr	r3, [r3]
 20121 00a4 0310A0E1 		mov	r1, r3
 20122 00a8 0200A0E1 		mov	r0, r2
 20123 00ac FEFFFFEB 		bl	_RME_List_Del
7714:../../Source/Kernel/rme_kernel.c ****     /* Decrease invocation depth - no atomic operation needed */
7715:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth--;
 20124              		.loc 1 7715 16
 20125 00b0 08301BE5 		ldr	r3, [fp, #-8]
 20126 00b4 543093E5 		ldr	r3, [r3, #84]
 20127              		.loc 1 7715 29
 20128 00b8 012043E2 		sub	r2, r3, #1
 20129 00bc 08301BE5 		ldr	r3, [fp, #-8]
 20130 00c0 542083E5 		str	r2, [r3, #84]
7716:../../Source/Kernel/rme_kernel.c **** 
7717:../../Source/Kernel/rme_kernel.c ****     /* Restore the register contents, and set return value. We need to set
7718:../../Source/Kernel/rme_kernel.c ****      * the return value of the invocation system call itself as well. */
7719:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Restore(Reg,&(Invocation->Ret));
 20131              		.loc 1 7719 5
 20132 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 20133 00c8 1C3083E2 		add	r3, r3, #28
 20134 00cc 0310A0E1 		mov	r1, r3
 20135 00d0 10001BE5 		ldr	r0, [fp, #-16]
 20136 00d4 FEFFFFEB 		bl	__RME_Inv_Reg_Restore
7720:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Retval_Set(Reg,(rme_ret_t)Retval);
 20137              		.loc 1 7720 5
 20138 00d8 14301BE5 		ldr	r3, [fp, #-20]
 20139 00dc 0310A0E1 		mov	r1, r3
 20140 00e0 10001BE5 		ldr	r0, [fp, #-16]
 20141 00e4 FEFFFFEB 		bl	__RME_Inv_Retval_Set
7721:../../Source/Kernel/rme_kernel.c **** 
7722:../../Source/Kernel/rme_kernel.c ****     /* We have successfully returned, set the invocation as inactive. We need
7723:../../Source/Kernel/rme_kernel.c ****      * a barrier here to avoid potential destruction of the return value. */
7724:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((volatile rme_ptr_t*)&(Invocation->Thd_Act),0U);
 20142              		.loc 1 7724 5
 20143 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20144 00ec 0C3083E2 		add	r3, r3, #12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 490


 20145 00f0 0010A0E3 		mov	r1, #0
 20146 00f4 0300A0E1 		mov	r0, r3
 20147 00f8 FEFFFFEB 		bl	__RME_A7A_Write_Release
7725:../../Source/Kernel/rme_kernel.c **** 
7726:../../Source/Kernel/rme_kernel.c ****     /* Decide the system call's return value */
7727:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Is_Exc!=0U))
 20148              		.loc 1 7727 7
 20149 00fc 18301BE5 		ldr	r3, [fp, #-24]
 20150 0100 000053E3 		cmp	r3, #0
 20151 0104 0400000A 		beq	.L1318
7728:../../Source/Kernel/rme_kernel.c ****     {
7729:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7730:../../Source/Kernel/rme_kernel.c **** 
7731:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg, RME_ERR_SIV_FAULT);
 20152              		.loc 1 7731 9
 20153 0108 D21E0FE3 		movw	r1, #65234
 20154 010c FF1F4FE3 		movt	r1, 65535
 20155 0110 10001BE5 		ldr	r0, [fp, #-16]
 20156 0114 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20157 0118 020000EA 		b	.L1319
 20158              	.L1318:
7732:../../Source/Kernel/rme_kernel.c ****     }
7733:../../Source/Kernel/rme_kernel.c ****     else
7734:../../Source/Kernel/rme_kernel.c ****     {
7735:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7736:../../Source/Kernel/rme_kernel.c **** 
7737:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 20159              		.loc 1 7737 9
 20160 011c 0010A0E3 		mov	r1, #0
 20161 0120 10001BE5 		ldr	r0, [fp, #-16]
 20162 0124 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20163              	.L1319:
7738:../../Source/Kernel/rme_kernel.c ****     }
7739:../../Source/Kernel/rme_kernel.c **** 
7740:../../Source/Kernel/rme_kernel.c ****     /* Same assumptions as in invocation activation */
7741:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20164              		.loc 1 7741 16
 20165 0128 08301BE5 		ldr	r3, [fp, #-8]
 20166 012c 4C2093E5 		ldr	r2, [r3, #76]
 20167 0130 08301BE5 		ldr	r3, [fp, #-8]
 20168 0134 4C3083E2 		add	r3, r3, #76
 20169 0138 030052E1 		cmp	r2, r3
 20170 013c 0200000A 		beq	.L1320
 20171              		.loc 1 7741 16 is_stmt 0 discriminator 1
 20172 0140 08301BE5 		ldr	r3, [fp, #-8]
 20173 0144 4C3093E5 		ldr	r3, [r3, #76]
 20174 0148 000000EA 		b	.L1321
 20175              	.L1320:
 20176              		.loc 1 7741 16 discriminator 2
 20177 014c 0030A0E3 		mov	r3, #0
 20178              	.L1321:
 20179              		.loc 1 7741 15 is_stmt 1 discriminator 4
 20180 0150 0C300BE5 		str	r3, [fp, #-12]
7742:../../Source/Kernel/rme_kernel.c ****     if(Invocation!=RME_NULL)
 20181              		.loc 1 7742 7
 20182 0154 0C301BE5 		ldr	r3, [fp, #-12]
 20183 0158 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 491


 20184 015c 1500000A 		beq	.L1322
7743:../../Source/Kernel/rme_kernel.c ****     {
7744:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7745:../../Source/Kernel/rme_kernel.c ****         
7746:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7747:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20185              		.loc 1 7747 9
 20186 0160 0C301BE5 		ldr	r3, [fp, #-12]
 20187 0164 083093E5 		ldr	r3, [r3, #8]
 20188 0168 183093E5 		ldr	r3, [r3, #24]
 20189 016c 003093E5 		ldr	r3, [r3]
 20190 0170 7330FFE6 		uxth	r3, r3
 20191 0174 000053E3 		cmp	r3, #0
 20192 0178 0800000A 		beq	.L1323
 20193              		.loc 1 7747 9 is_stmt 0 discriminator 1
 20194 017c 003000E3 		movw	r3, #:lower16:.LC6
 20195 0180 003040E3 		movt	r3, #:upper16:.LC6
 20196 0184 002000E3 		movw	r2, #:lower16:.LC7
 20197 0188 002040E3 		movt	r2, #:upper16:.LC7
 20198 018c 431E01E3 		movw	r1, #7747
 20199 0190 000000E3 		movw	r0, #:lower16:.LC8
 20200 0194 000040E3 		movt	r0, #:upper16:.LC8
 20201 0198 FEFFFFEB 		bl	RME_Log
 20202              	.L1324:
 20203              		.loc 1 7747 9
 20204 019c FEFFFFEA 		b	.L1324
 20205              	.L1323:
7748:../../Source/Kernel/rme_kernel.c **** #endif
7749:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Invocation->Prc->Pgt);
 20206              		.loc 1 7749 33 is_stmt 1
 20207 01a0 0C301BE5 		ldr	r3, [fp, #-12]
 20208 01a4 083093E5 		ldr	r3, [r3, #8]
 20209              		.loc 1 7749 9
 20210 01a8 183093E5 		ldr	r3, [r3, #24]
 20211 01ac 0300A0E1 		mov	r0, r3
 20212 01b0 FEFFFFEB 		bl	__RME_Pgt_Set
 20213 01b4 140000EA 		b	.L1325
 20214              	.L1322:
7750:../../Source/Kernel/rme_kernel.c ****     }
7751:../../Source/Kernel/rme_kernel.c ****     else
7752:../../Source/Kernel/rme_kernel.c ****     {
7753:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7754:../../Source/Kernel/rme_kernel.c ****         
7755:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7756:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Thread->Sched.Prc->Pgt)!=0U);
 20215              		.loc 1 7756 9
 20216 01b8 08301BE5 		ldr	r3, [fp, #-8]
 20217 01bc 2C3093E5 		ldr	r3, [r3, #44]
 20218 01c0 183093E5 		ldr	r3, [r3, #24]
 20219 01c4 003093E5 		ldr	r3, [r3]
 20220 01c8 7330FFE6 		uxth	r3, r3
 20221 01cc 000053E3 		cmp	r3, #0
 20222 01d0 0800000A 		beq	.L1326
 20223              		.loc 1 7756 9 is_stmt 0 discriminator 1
 20224 01d4 003000E3 		movw	r3, #:lower16:.LC6
 20225 01d8 003040E3 		movt	r3, #:upper16:.LC6
 20226 01dc 002000E3 		movw	r2, #:lower16:.LC7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 492


 20227 01e0 002040E3 		movt	r2, #:upper16:.LC7
 20228 01e4 4C1E01E3 		movw	r1, #7756
 20229 01e8 000000E3 		movw	r0, #:lower16:.LC8
 20230 01ec 000040E3 		movt	r0, #:upper16:.LC8
 20231 01f0 FEFFFFEB 		bl	RME_Log
 20232              	.L1327:
 20233              		.loc 1 7756 9
 20234 01f4 FEFFFFEA 		b	.L1327
 20235              	.L1326:
7757:../../Source/Kernel/rme_kernel.c **** #endif
7758:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Thread->Sched.Prc->Pgt);
 20236              		.loc 1 7758 36 is_stmt 1
 20237 01f8 08301BE5 		ldr	r3, [fp, #-8]
 20238 01fc 2C3093E5 		ldr	r3, [r3, #44]
 20239              		.loc 1 7758 9
 20240 0200 183093E5 		ldr	r3, [r3, #24]
 20241 0204 0300A0E1 		mov	r0, r3
 20242 0208 FEFFFFEB 		bl	__RME_Pgt_Set
 20243              	.L1325:
7759:../../Source/Kernel/rme_kernel.c ****     }
7760:../../Source/Kernel/rme_kernel.c ****     
7761:../../Source/Kernel/rme_kernel.c ****     return 0;
 20244              		.loc 1 7761 12
 20245 020c 0030A0E3 		mov	r3, #0
 20246              	.L1316:
7762:../../Source/Kernel/rme_kernel.c **** }
 20247              		.loc 1 7762 1
 20248 0210 0300A0E1 		mov	r0, r3
 20249 0214 04D04BE2 		sub	sp, fp, #4
 20250              		.cfi_def_cfa 13, 8
 20251              		@ sp needed
 20252 0218 0088BDE8 		pop	{fp, pc}
 20253              		.cfi_endproc
 20254              	.LFE76:
 20256              		.section	.text._RME_Kfn_Boot_Crt,"ax",%progbits
 20257              		.align	2
 20258              		.global	_RME_Kfn_Boot_Crt
 20259              		.syntax unified
 20260              		.arm
 20262              	_RME_Kfn_Boot_Crt:
 20263              	.LFB77:
7763:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Ret *************************************************/
7764:../../Source/Kernel/rme_kernel.c **** 
7765:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Boot_Crt *************************************************
7766:../../Source/Kernel/rme_kernel.c **** Description : This function is used to create boot-time kernel call capability.
7767:../../Source/Kernel/rme_kernel.c ****               This kind of capability that does not have a kernel object.
7768:../../Source/Kernel/rme_kernel.c ****               Kernel function capabilities allow you to execute user-defined 
7769:../../Source/Kernel/rme_kernel.c ****               functions in kernel mode. These functions must be defined in the
7770:../../Source/Kernel/rme_kernel.c ****               platform extensions.
7771:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7772:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
7773:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
7774:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7775:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel function.
7776:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7777:../../Source/Kernel/rme_kernel.c **** Output      : None.
7778:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 493


7779:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7780:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kfn_Boot_Crt(struct RME_Cap_Cpt* Cpt,
7781:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
7782:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kfn)
7783:../../Source/Kernel/rme_kernel.c **** {
 20264              		.loc 1 7783 1
 20265              		.cfi_startproc
 20266              		@ args = 0, pretend = 0, frame = 32
 20267              		@ frame_needed = 1, uses_anonymous_args = 0
 20268 0000 00482DE9 		push	{fp, lr}
 20269              		.cfi_def_cfa_offset 8
 20270              		.cfi_offset 11, -8
 20271              		.cfi_offset 14, -4
 20272 0004 04B08DE2 		add	fp, sp, #4
 20273              		.cfi_def_cfa 11, 4
 20274 0008 20D04DE2 		sub	sp, sp, #32
 20275 000c 18000BE5 		str	r0, [fp, #-24]
 20276 0010 1C100BE5 		str	r1, [fp, #-28]
 20277 0014 20200BE5 		str	r2, [fp, #-32]
7784:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7785:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kfn* Kfn_Crt;
7786:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7787:../../Source/Kernel/rme_kernel.c ****     
7788:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
7789:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 20278              		.loc 1 7789 5
 20279 0018 1C301BE5 		ldr	r3, [fp, #-28]
 20280 001c 803003E2 		and	r3, r3, #128
 20281 0020 000053E3 		cmp	r3, #0
 20282 0024 1C00001A 		bne	.L1329
 20283              		.loc 1 7789 5 is_stmt 0 discriminator 1
 20284 0028 18301BE5 		ldr	r3, [fp, #-24]
 20285 002c 142093E5 		ldr	r2, [r3, #20]
 20286 0030 1C301BE5 		ldr	r3, [fp, #-28]
 20287 0034 030052E1 		cmp	r2, r3
 20288 0038 0100008A 		bhi	.L1330
 20289              		.loc 1 7789 5 discriminator 3
 20290 003c 0230E0E3 		mvn	r3, #2
 20291              		.loc 1 7789 5
 20292 0040 850000EA 		b	.L1331
 20293              	.L1330:
 20294              		.loc 1 7789 5 discriminator 4
 20295 0044 1C301BE5 		ldr	r3, [fp, #-28]
 20296 0048 8322A0E1 		lsl	r2, r3, #5
 20297 004c 18301BE5 		ldr	r3, [fp, #-24]
 20298 0050 0C3093E5 		ldr	r3, [r3, #12]
 20299 0054 033082E0 		add	r3, r2, r3
 20300 0058 08300BE5 		str	r3, [fp, #-8]
 20301 005c 08301BE5 		ldr	r3, [fp, #-8]
 20302 0060 0300A0E1 		mov	r0, r3
 20303 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20304 0068 0C000BE5 		str	r0, [fp, #-12]
 20305              		.loc 1 7789 5 discriminator 1
 20306 006c 0C301BE5 		ldr	r3, [fp, #-12]
 20307 0070 FF3803E2 		and	r3, r3, #16711680
 20308 0074 020853E3 		cmp	r3, #131072
 20309 0078 0100001A 		bne	.L1332
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 494


 20310              		.loc 1 7789 5 discriminator 5
 20311 007c 0830E0E3 		mvn	r3, #8
 20312              		.loc 1 7789 5
 20313 0080 750000EA 		b	.L1331
 20314              	.L1332:
 20315              		.loc 1 7789 5 discriminator 6
 20316 0084 0C301BE5 		ldr	r3, [fp, #-12]
 20317 0088 233CA0E1 		lsr	r3, r3, #24
 20318 008c 030053E3 		cmp	r3, #3
 20319 0090 3F00000A 		beq	.L1333
 20320              		.loc 1 7789 5 discriminator 7
 20321 0094 0130E0E3 		mvn	r3, #1
 20322              		.loc 1 7789 5
 20323 0098 6F0000EA 		b	.L1331
 20324              	.L1329:
 20325              		.loc 1 7789 5 discriminator 2
 20326 009c 1C301BE5 		ldr	r3, [fp, #-28]
 20327 00a0 2324A0E1 		lsr	r2, r3, #8
 20328 00a4 18301BE5 		ldr	r3, [fp, #-24]
 20329 00a8 143093E5 		ldr	r3, [r3, #20]
 20330 00ac 030052E1 		cmp	r2, r3
 20331 00b0 0100003A 		bcc	.L1334
 20332              		.loc 1 7789 5 discriminator 8
 20333 00b4 0230E0E3 		mvn	r3, #2
 20334              		.loc 1 7789 5
 20335 00b8 670000EA 		b	.L1331
 20336              	.L1334:
 20337              		.loc 1 7789 5 discriminator 9
 20338 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 20339 00c0 2334A0E1 		lsr	r3, r3, #8
 20340 00c4 8322A0E1 		lsl	r2, r3, #5
 20341 00c8 18301BE5 		ldr	r3, [fp, #-24]
 20342 00cc 0C3093E5 		ldr	r3, [r3, #12]
 20343 00d0 033082E0 		add	r3, r2, r3
 20344 00d4 08300BE5 		str	r3, [fp, #-8]
 20345 00d8 08301BE5 		ldr	r3, [fp, #-8]
 20346 00dc 0300A0E1 		mov	r0, r3
 20347 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20348 00e4 0C000BE5 		str	r0, [fp, #-12]
 20349              		.loc 1 7789 5 discriminator 1
 20350 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20351 00ec FF3803E2 		and	r3, r3, #16711680
 20352 00f0 020853E3 		cmp	r3, #131072
 20353 00f4 0100001A 		bne	.L1335
 20354              		.loc 1 7789 5 discriminator 10
 20355 00f8 0830E0E3 		mvn	r3, #8
 20356              		.loc 1 7789 5
 20357 00fc 560000EA 		b	.L1331
 20358              	.L1335:
 20359              		.loc 1 7789 5 discriminator 11
 20360 0100 0C301BE5 		ldr	r3, [fp, #-12]
 20361 0104 233CA0E1 		lsr	r3, r3, #24
 20362 0108 030053E3 		cmp	r3, #3
 20363 010c 0100000A 		beq	.L1336
 20364              		.loc 1 7789 5 discriminator 12
 20365 0110 0130E0E3 		mvn	r3, #1
 20366              		.loc 1 7789 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 495


 20367 0114 500000EA 		b	.L1331
 20368              	.L1336:
 20369              		.loc 1 7789 5 discriminator 13
 20370 0118 1C301BE5 		ldr	r3, [fp, #-28]
 20371 011c 7F2003E2 		and	r2, r3, #127
 20372 0120 08301BE5 		ldr	r3, [fp, #-8]
 20373 0124 143093E5 		ldr	r3, [r3, #20]
 20374 0128 030052E1 		cmp	r2, r3
 20375 012c 0100003A 		bcc	.L1337
 20376              		.loc 1 7789 5 discriminator 14
 20377 0130 0230E0E3 		mvn	r3, #2
 20378              		.loc 1 7789 5
 20379 0134 480000EA 		b	.L1331
 20380              	.L1337:
 20381              		.loc 1 7789 5 discriminator 15
 20382 0138 1C301BE5 		ldr	r3, [fp, #-28]
 20383 013c 7F3003E2 		and	r3, r3, #127
 20384 0140 8322A0E1 		lsl	r2, r3, #5
 20385 0144 08301BE5 		ldr	r3, [fp, #-8]
 20386 0148 0C3093E5 		ldr	r3, [r3, #12]
 20387 014c 033082E0 		add	r3, r2, r3
 20388 0150 08300BE5 		str	r3, [fp, #-8]
 20389 0154 08301BE5 		ldr	r3, [fp, #-8]
 20390 0158 0300A0E1 		mov	r0, r3
 20391 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20392 0160 0C000BE5 		str	r0, [fp, #-12]
 20393              		.loc 1 7789 5 discriminator 1
 20394 0164 0C301BE5 		ldr	r3, [fp, #-12]
 20395 0168 FF3803E2 		and	r3, r3, #16711680
 20396 016c 020853E3 		cmp	r3, #131072
 20397 0170 0100001A 		bne	.L1338
 20398              		.loc 1 7789 5 discriminator 16
 20399 0174 0830E0E3 		mvn	r3, #8
 20400              		.loc 1 7789 5
 20401 0178 370000EA 		b	.L1331
 20402              	.L1338:
 20403              		.loc 1 7789 5 discriminator 17
 20404 017c 0C301BE5 		ldr	r3, [fp, #-12]
 20405 0180 233CA0E1 		lsr	r3, r3, #24
 20406 0184 030053E3 		cmp	r3, #3
 20407 0188 0100000A 		beq	.L1333
 20408              		.loc 1 7789 5 discriminator 18
 20409 018c 0130E0E3 		mvn	r3, #1
 20410              		.loc 1 7789 5
 20411 0190 310000EA 		b	.L1331
 20412              	.L1333:
7790:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7791:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7792:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 20413              		.loc 1 7792 5 is_stmt 1
 20414 0194 08301BE5 		ldr	r3, [fp, #-8]
 20415 0198 083093E5 		ldr	r3, [r3, #8]
 20416 019c 013003E2 		and	r3, r3, #1
 20417 01a0 000053E3 		cmp	r3, #0
 20418 01a4 0100001A 		bne	.L1339
 20419              		.loc 1 7792 5 is_stmt 0 discriminator 1
 20420 01a8 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 496


 20421              		.loc 1 7792 5
 20422 01ac 2A0000EA 		b	.L1331
 20423              	.L1339:
7793:../../Source/Kernel/rme_kernel.c ****     
7794:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7795:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kfn,struct RME_Cap_Kfn*,Kfn_Crt);
 20424              		.loc 1 7795 5 is_stmt 1
 20425 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20426 01b4 142093E5 		ldr	r2, [r3, #20]
 20427 01b8 20301BE5 		ldr	r3, [fp, #-32]
 20428 01bc 030052E1 		cmp	r2, r3
 20429 01c0 0100008A 		bhi	.L1340
 20430              		.loc 1 7795 5 is_stmt 0 discriminator 1
 20431 01c4 0230E0E3 		mvn	r3, #2
 20432              		.loc 1 7795 5
 20433 01c8 230000EA 		b	.L1331
 20434              	.L1340:
 20435              		.loc 1 7795 5 discriminator 2
 20436 01cc 20301BE5 		ldr	r3, [fp, #-32]
 20437 01d0 8322A0E1 		lsl	r2, r3, #5
 20438 01d4 08301BE5 		ldr	r3, [fp, #-8]
 20439 01d8 0C3093E5 		ldr	r3, [r3, #12]
 20440 01dc 033082E0 		add	r3, r2, r3
 20441 01e0 10300BE5 		str	r3, [fp, #-16]
7796:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7797:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kfn_Crt);
 20442              		.loc 1 7797 5 is_stmt 1
 20443 01e4 10301BE5 		ldr	r3, [fp, #-16]
 20444 01e8 0128A0E3 		mov	r2, #65536
 20445 01ec 0010A0E3 		mov	r1, #0
 20446 01f0 0300A0E1 		mov	r0, r3
 20447 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20448 01f8 0030A0E1 		mov	r3, r0
 20449              		.loc 1 7797 5 is_stmt 0 discriminator 1
 20450 01fc 000053E3 		cmp	r3, #0
 20451 0200 0100001A 		bne	.L1341
 20452 0204 0430E0E3 		mvn	r3, #4
 20453              		.loc 1 7797 5
 20454 0208 130000EA 		b	.L1331
 20455              	.L1341:
 20456              		.loc 1 7797 5 discriminator 2
 20457 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 20458 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 20459 0214 002093E5 		ldr	r2, [r3]
 20460 0218 10301BE5 		ldr	r3, [fp, #-16]
 20461 021c 102083E5 		str	r2, [r3, #16]
7798:../../Source/Kernel/rme_kernel.c ****     
7799:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7800:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Root_Ref=1U;
 20462              		.loc 1 7800 27 is_stmt 1
 20463 0220 10301BE5 		ldr	r3, [fp, #-16]
 20464 0224 0120A0E3 		mov	r2, #1
 20465 0228 042083E5 		str	r2, [r3, #4]
7801:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Object=0U;
 20466              		.loc 1 7801 25
 20467 022c 10301BE5 		ldr	r3, [fp, #-16]
 20468 0230 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 497


 20469 0234 0C2083E5 		str	r2, [r3, #12]
7802:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Flag=RME_KFN_FLAG_FULL_RANGE;
 20470              		.loc 1 7802 23
 20471 0238 10201BE5 		ldr	r2, [fp, #-16]
 20472 023c 0030A0E3 		mov	r3, #0
 20473 0240 FF3F4FE3 		movt	r3, 65535
 20474 0244 083082E5 		str	r3, [r2, #8]
7803:../../Source/Kernel/rme_kernel.c ****     
7804:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7805:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kfn_Crt->Head.Type_Stat),
 20475              		.loc 1 7805 5
 20476 0248 10301BE5 		ldr	r3, [fp, #-16]
 20477 024c 0114A0E3 		mov	r1, #16777216
 20478 0250 0300A0E1 		mov	r0, r3
 20479 0254 FEFFFFEB 		bl	__RME_A7A_Write_Release
7806:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KFN,
7807:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7808:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7809:../../Source/Kernel/rme_kernel.c **** 
7810:../../Source/Kernel/rme_kernel.c ****     return 0;
 20480              		.loc 1 7810 12
 20481 0258 0030A0E3 		mov	r3, #0
 20482              	.L1331:
7811:../../Source/Kernel/rme_kernel.c **** }
 20483              		.loc 1 7811 1
 20484 025c 0300A0E1 		mov	r0, r3
 20485 0260 04D04BE2 		sub	sp, fp, #4
 20486              		.cfi_def_cfa 13, 8
 20487              		@ sp needed
 20488 0264 0088BDE8 		pop	{fp, pc}
 20489              		.cfi_endproc
 20490              	.LFE77:
 20492              		.section	.text._RME_Kfn_Act,"ax",%progbits
 20493              		.align	2
 20494              		.syntax unified
 20495              		.arm
 20497              	_RME_Kfn_Act:
 20498              	.LFB78:
7812:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kfn_Boot_Crt ********************************************/
7813:../../Source/Kernel/rme_kernel.c **** 
7814:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Act ******************************************************
7815:../../Source/Kernel/rme_kernel.c **** Description : Activate a kernel function.
7816:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7817:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7818:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel capability.
7819:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7820:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Func_ID - The function ID to invoke.
7821:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Sub_ID - The subfunction ID to invoke.
7822:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param1 - The first parameter.
7823:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param2 - The second parameter.
7824:../../Source/Kernel/rme_kernel.c **** Output      : None.
7825:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the call is successful, it will return whatever
7826:../../Source/Kernel/rme_kernel.c ****                           the 
7827:../../Source/Kernel/rme_kernel.c ****                           function returned (It is expected that they shall
7828:../../Source/Kernel/rme_kernel.c ****                           never return an negative value); or an error code.
7829:../../Source/Kernel/rme_kernel.c ****                           If the kernel function ever causes a context switch,
7830:../../Source/Kernel/rme_kernel.c ****                           it is responsible for setting the return value. On 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 498


7831:../../Source/Kernel/rme_kernel.c ****                           failure, no context switch is allowed.
7832:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7833:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Kfn_Act(struct RME_Cap_Cpt* Cpt,
7834:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7835:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kfn,
7836:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Func_ID,
7837:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Sub_ID,
7838:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param1,
7839:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param2)
7840:../../Source/Kernel/rme_kernel.c **** {
 20499              		.loc 1 7840 1
 20500              		.cfi_startproc
 20501              		@ args = 12, pretend = 0, frame = 24
 20502              		@ frame_needed = 1, uses_anonymous_args = 0
 20503 0000 00482DE9 		push	{fp, lr}
 20504              		.cfi_def_cfa_offset 8
 20505              		.cfi_offset 11, -8
 20506              		.cfi_offset 14, -4
 20507 0004 04B08DE2 		add	fp, sp, #4
 20508              		.cfi_def_cfa 11, 4
 20509 0008 20D04DE2 		sub	sp, sp, #32
 20510 000c 10000BE5 		str	r0, [fp, #-16]
 20511 0010 14100BE5 		str	r1, [fp, #-20]
 20512 0014 18200BE5 		str	r2, [fp, #-24]
 20513 0018 1C300BE5 		str	r3, [fp, #-28]
7841:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kfn* Kfn_Op;
7842:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7843:../../Source/Kernel/rme_kernel.c ****     
7844:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7845:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kfn,RME_CAP_TYPE_KFN,
 20514              		.loc 1 7845 5
 20515 001c 18301BE5 		ldr	r3, [fp, #-24]
 20516 0020 803003E2 		and	r3, r3, #128
 20517 0024 000053E3 		cmp	r3, #0
 20518 0028 1C00001A 		bne	.L1343
 20519              		.loc 1 7845 5 is_stmt 0 discriminator 1
 20520 002c 10301BE5 		ldr	r3, [fp, #-16]
 20521 0030 142093E5 		ldr	r2, [r3, #20]
 20522 0034 18301BE5 		ldr	r3, [fp, #-24]
 20523 0038 030052E1 		cmp	r2, r3
 20524 003c 0100008A 		bhi	.L1344
 20525              		.loc 1 7845 5 discriminator 3
 20526 0040 0230E0E3 		mvn	r3, #2
 20527              		.loc 1 7845 5
 20528 0044 6B0000EA 		b	.L1345
 20529              	.L1344:
 20530              		.loc 1 7845 5 discriminator 4
 20531 0048 18301BE5 		ldr	r3, [fp, #-24]
 20532 004c 8322A0E1 		lsl	r2, r3, #5
 20533 0050 10301BE5 		ldr	r3, [fp, #-16]
 20534 0054 0C3093E5 		ldr	r3, [r3, #12]
 20535 0058 033082E0 		add	r3, r2, r3
 20536 005c 08300BE5 		str	r3, [fp, #-8]
 20537 0060 08301BE5 		ldr	r3, [fp, #-8]
 20538 0064 0300A0E1 		mov	r0, r3
 20539 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20540 006c 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 499


 20541              		.loc 1 7845 5 discriminator 1
 20542 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20543 0074 FF3803E2 		and	r3, r3, #16711680
 20544 0078 020853E3 		cmp	r3, #131072
 20545 007c 0100001A 		bne	.L1346
 20546              		.loc 1 7845 5 discriminator 5
 20547 0080 0830E0E3 		mvn	r3, #8
 20548              		.loc 1 7845 5
 20549 0084 5B0000EA 		b	.L1345
 20550              	.L1346:
 20551              		.loc 1 7845 5 discriminator 6
 20552 0088 0C301BE5 		ldr	r3, [fp, #-12]
 20553 008c 233CA0E1 		lsr	r3, r3, #24
 20554 0090 010053E3 		cmp	r3, #1
 20555 0094 3F00000A 		beq	.L1347
 20556              		.loc 1 7845 5 discriminator 7
 20557 0098 0130E0E3 		mvn	r3, #1
 20558              		.loc 1 7845 5
 20559 009c 550000EA 		b	.L1345
 20560              	.L1343:
 20561              		.loc 1 7845 5 discriminator 2
 20562 00a0 18301BE5 		ldr	r3, [fp, #-24]
 20563 00a4 2324A0E1 		lsr	r2, r3, #8
 20564 00a8 10301BE5 		ldr	r3, [fp, #-16]
 20565 00ac 143093E5 		ldr	r3, [r3, #20]
 20566 00b0 030052E1 		cmp	r2, r3
 20567 00b4 0100003A 		bcc	.L1348
 20568              		.loc 1 7845 5 discriminator 8
 20569 00b8 0230E0E3 		mvn	r3, #2
 20570              		.loc 1 7845 5
 20571 00bc 4D0000EA 		b	.L1345
 20572              	.L1348:
 20573              		.loc 1 7845 5 discriminator 9
 20574 00c0 18301BE5 		ldr	r3, [fp, #-24]
 20575 00c4 2334A0E1 		lsr	r3, r3, #8
 20576 00c8 8322A0E1 		lsl	r2, r3, #5
 20577 00cc 10301BE5 		ldr	r3, [fp, #-16]
 20578 00d0 0C3093E5 		ldr	r3, [r3, #12]
 20579 00d4 033082E0 		add	r3, r2, r3
 20580 00d8 08300BE5 		str	r3, [fp, #-8]
 20581 00dc 08301BE5 		ldr	r3, [fp, #-8]
 20582 00e0 0300A0E1 		mov	r0, r3
 20583 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20584 00e8 0C000BE5 		str	r0, [fp, #-12]
 20585              		.loc 1 7845 5 discriminator 1
 20586 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 20587 00f0 FF3803E2 		and	r3, r3, #16711680
 20588 00f4 020853E3 		cmp	r3, #131072
 20589 00f8 0100001A 		bne	.L1349
 20590              		.loc 1 7845 5 discriminator 10
 20591 00fc 0830E0E3 		mvn	r3, #8
 20592              		.loc 1 7845 5
 20593 0100 3C0000EA 		b	.L1345
 20594              	.L1349:
 20595              		.loc 1 7845 5 discriminator 11
 20596 0104 0C301BE5 		ldr	r3, [fp, #-12]
 20597 0108 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 500


 20598 010c 030053E3 		cmp	r3, #3
 20599 0110 0100000A 		beq	.L1350
 20600              		.loc 1 7845 5 discriminator 12
 20601 0114 0130E0E3 		mvn	r3, #1
 20602              		.loc 1 7845 5
 20603 0118 360000EA 		b	.L1345
 20604              	.L1350:
 20605              		.loc 1 7845 5 discriminator 13
 20606 011c 18301BE5 		ldr	r3, [fp, #-24]
 20607 0120 7F2003E2 		and	r2, r3, #127
 20608 0124 08301BE5 		ldr	r3, [fp, #-8]
 20609 0128 143093E5 		ldr	r3, [r3, #20]
 20610 012c 030052E1 		cmp	r2, r3
 20611 0130 0100003A 		bcc	.L1351
 20612              		.loc 1 7845 5 discriminator 14
 20613 0134 0230E0E3 		mvn	r3, #2
 20614              		.loc 1 7845 5
 20615 0138 2E0000EA 		b	.L1345
 20616              	.L1351:
 20617              		.loc 1 7845 5 discriminator 15
 20618 013c 18301BE5 		ldr	r3, [fp, #-24]
 20619 0140 7F3003E2 		and	r3, r3, #127
 20620 0144 8322A0E1 		lsl	r2, r3, #5
 20621 0148 08301BE5 		ldr	r3, [fp, #-8]
 20622 014c 0C3093E5 		ldr	r3, [r3, #12]
 20623 0150 033082E0 		add	r3, r2, r3
 20624 0154 08300BE5 		str	r3, [fp, #-8]
 20625 0158 08301BE5 		ldr	r3, [fp, #-8]
 20626 015c 0300A0E1 		mov	r0, r3
 20627 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20628 0164 0C000BE5 		str	r0, [fp, #-12]
 20629              		.loc 1 7845 5 discriminator 1
 20630 0168 0C301BE5 		ldr	r3, [fp, #-12]
 20631 016c FF3803E2 		and	r3, r3, #16711680
 20632 0170 020853E3 		cmp	r3, #131072
 20633 0174 0100001A 		bne	.L1352
 20634              		.loc 1 7845 5 discriminator 16
 20635 0178 0830E0E3 		mvn	r3, #8
 20636              		.loc 1 7845 5
 20637 017c 1D0000EA 		b	.L1345
 20638              	.L1352:
 20639              		.loc 1 7845 5 discriminator 17
 20640 0180 0C301BE5 		ldr	r3, [fp, #-12]
 20641 0184 233CA0E1 		lsr	r3, r3, #24
 20642 0188 010053E3 		cmp	r3, #1
 20643 018c 0100000A 		beq	.L1347
 20644              		.loc 1 7845 5 discriminator 18
 20645 0190 0130E0E3 		mvn	r3, #1
 20646              		.loc 1 7845 5
 20647 0194 170000EA 		b	.L1345
 20648              	.L1347:
7846:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kfn*,Kfn_Op,Type_Stat);    
7847:../../Source/Kernel/rme_kernel.c **** 
7848:../../Source/Kernel/rme_kernel.c ****     /* Check if the range of calling is allowed - kernel function specific */
7849:../../Source/Kernel/rme_kernel.c ****     if((Func_ID>RME_KFN_FLAG_HIGH(Kfn_Op->Head.Flag))||
 20649              		.loc 1 7849 17 is_stmt 1
 20650 0198 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 501


 20651 019c 083093E5 		ldr	r3, [r3, #8]
 20652 01a0 2338A0E1 		lsr	r3, r3, #16
 20653              		.loc 1 7849 7
 20654 01a4 1C201BE5 		ldr	r2, [fp, #-28]
 20655 01a8 030052E1 		cmp	r2, r3
 20656 01ac 0500008A 		bhi	.L1353
7850:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20657              		.loc 1 7850 17
 20658 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20659 01b4 083093E5 		ldr	r3, [r3, #8]
 20660 01b8 7330FFE6 		uxth	r3, r3
7849:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20661              		.loc 1 7849 54 discriminator 1
 20662 01bc 1C201BE5 		ldr	r2, [fp, #-28]
 20663 01c0 030052E1 		cmp	r2, r3
 20664 01c4 0100002A 		bcs	.L1354
 20665              	.L1353:
7851:../../Source/Kernel/rme_kernel.c ****     {
7852:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7853:../../Source/Kernel/rme_kernel.c **** 
7854:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 20666              		.loc 1 7854 16
 20667 01c8 0630E0E3 		mvn	r3, #6
 20668 01cc 090000EA 		b	.L1345
 20669              	.L1354:
7855:../../Source/Kernel/rme_kernel.c ****     }
7856:../../Source/Kernel/rme_kernel.c ****     else
7857:../../Source/Kernel/rme_kernel.c ****     {
7858:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7859:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7860:../../Source/Kernel/rme_kernel.c ****     }
7861:../../Source/Kernel/rme_kernel.c **** 
7862:../../Source/Kernel/rme_kernel.c ****     /* Return whatever the function returns */
7863:../../Source/Kernel/rme_kernel.c ****     return __RME_Kfn_Handler(Cpt,Reg,Func_ID,Sub_ID,Param1,Param2);
 20670              		.loc 1 7863 12
 20671 01d0 0C309BE5 		ldr	r3, [fp, #12]
 20672 01d4 04308DE5 		str	r3, [sp, #4]
 20673 01d8 08309BE5 		ldr	r3, [fp, #8]
 20674 01dc 00308DE5 		str	r3, [sp]
 20675 01e0 04309BE5 		ldr	r3, [fp, #4]
 20676 01e4 1C201BE5 		ldr	r2, [fp, #-28]
 20677 01e8 14101BE5 		ldr	r1, [fp, #-20]
 20678 01ec 10001BE5 		ldr	r0, [fp, #-16]
 20679 01f0 FEFFFFEB 		bl	__RME_Kfn_Handler
 20680 01f4 0030A0E1 		mov	r3, r0
 20681              	.L1345:
7864:../../Source/Kernel/rme_kernel.c **** }
 20682              		.loc 1 7864 1
 20683 01f8 0300A0E1 		mov	r0, r3
 20684 01fc 04D04BE2 		sub	sp, fp, #4
 20685              		.cfi_def_cfa 13, 8
 20686              		@ sp needed
 20687 0200 0088BDE8 		pop	{fp, pc}
 20688              		.cfi_endproc
 20689              	.LFE78:
 20691              		.section	.rodata.Table.1,"a"
 20692              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 502


 20695              	Table.1:
 20696 0000 00000101 		.ascii	"\000\000\001\001\002\002\002\002\003\003\003\003\003"
 20696      02020202 
 20696      03030303 
 20696      03
 20697 000d 03030304 		.ascii	"\003\003\003\004\004\004\004\004\004\004\004\004\004"
 20697      04040404 
 20697      04040404 
 20697      04
 20698 001a 04040404 		.ascii	"\004\004\004\004\004\004\005\005\005\005\005\005\005"
 20698      04040505 
 20698      05050505 
 20698      05
 20699 0027 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\005"
 20699      05050505 
 20699      05050505 
 20699      05
 20700 0034 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\006"
 20700      05050505 
 20700      05050505 
 20700      06
 20701 0041 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20701      06060606 
 20701      06060606 
 20701      06
 20702 004e 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20702      06060606 
 20702      06060606 
 20702      06
 20703 005b 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20703      06060606 
 20703      06060606 
 20703      06
 20704 0068 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20704      06060606 
 20704      06060606 
 20704      06
 20705 0075 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\007\007"
 20705      06060606 
 20705      06060607 
 20705      07
 20706 0082 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20706      07070707 
 20706      07070707 
 20706      07
 20707 008f 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20707      07070707 
 20707      07070707 
 20707      07
 20708 009c 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20708      07070707 
 20708      07070707 
 20708      07
 20709 00a9 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20709      07070707 
 20709      07070707 
 20709      07
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 503


 20710 00b6 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20710      07070707 
 20710      07070707 
 20710      07
 20711 00c3 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20711      07070707 
 20711      07070707 
 20711      07
 20712 00d0 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20712      07070707 
 20712      07070707 
 20712      07
 20713 00dd 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20713      07070707 
 20713      07070707 
 20713      07
 20714 00ea 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20714      07070707 
 20714      07070707 
 20714      07
 20715 00f7 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007"
 20715      07070707 
 20715      07
 20716              		.section	.rodata.Table.0,"a"
 20717              		.align	2
 20720              	Table.0:
 20721 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 20721      02000100 
 20721      03000100 
 20721      02
 20722 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 20722      00010002 
 20722      00010003 
 20722      00
 20723 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 20723      01000500 
 20723      01000200 
 20723      01
 20724 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 20724      00020001 
 20724      00040001 
 20724      00
 20725 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 20725      03000100 
 20725      02000100 
 20725      06
 20726 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 20726      00010003 
 20726      00010002 
 20726      00
 20727 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 20727      01000200 
 20727      01000300 
 20727      01
 20728 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 20728      00050001 
 20728      00020001 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 504


 20728      00
 20729 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 20729      02000100 
 20729      04000100 
 20729      02
 20730 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 20730      00010002 
 20730      00010007 
 20730      00
 20731 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 20731      01000300 
 20731      01000200 
 20731      01
 20732 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 20732      00020001 
 20732      00030001 
 20732      00
 20733 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 20733      05000100 
 20733      02000100 
 20733      03
 20734 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 20734      00010004 
 20734      00010002 
 20734      00
 20735 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 20735      01000200 
 20735      01000600 
 20735      01
 20736 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 20736      00030001 
 20736      00020001 
 20736      00
 20737 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 20737      02000100 
 20737      03000100 
 20737      02
 20738 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 20738      00010002 
 20738      00010003 
 20738      00
 20739 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 20739      01000400 
 20739      01000200 
 20739      01
 20740 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 20740      00020001 
 20740      00
 20741              		.text
 20742              	.Letext0:
 20743              		.file 2 "../../Include/Platform/A7A/rme_platform_a7a.h"
 20744              		.file 3 "../../Include/Kernel/rme_kernel.h"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 505


DEFINED SYMBOLS
                            *ABS*:00000000 rme_kernel.c
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:21     .text.RME_Int_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:26     .text.RME_Int_Print:00000000 RME_Int_Print
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:176    .text.RME_Hex_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:181    .text.RME_Hex_Print:00000000 RME_Hex_Print
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:297    .text.RME_Str_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:302    .text.RME_Str_Print:00000000 RME_Str_Print
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:364    .rodata:00000000 $d
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:365    .rodata:00000000 .LC0
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:369    .rodata:00000028 .LC1
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:372    .rodata:00000034 .LC2
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:375    .rodata:00000038 .LC3
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:378    .text.RME_Log:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:383    .text.RME_Log:00000000 RME_Log
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:442    .text._RME_MSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:447    .text._RME_MSB_Generic:00000000 _RME_MSB_Generic
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20695  .rodata.Table.1:00000000 Table.1
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:517    .text._RME_LSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:522    .text._RME_LSB_Generic:00000000 _RME_LSB_Generic
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20720  .rodata.Table.0:00000000 Table.0
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:601    .text._RME_Comp_Swap_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:606    .text._RME_Comp_Swap_Single:00000000 _RME_Comp_Swap_Single
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:653    .text._RME_Fetch_Add_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:658    .text._RME_Fetch_Add_Single:00000000 _RME_Fetch_Add_Single
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:702    .text._RME_Fetch_And_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:707    .text._RME_Fetch_And_Single:00000000 _RME_Fetch_And_Single
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:748    .text._RME_List_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:753    .text._RME_List_Crt:00000000 _RME_List_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:788    .text._RME_List_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:793    .text._RME_List_Del:00000000 _RME_List_Del
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:829    .text._RME_List_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:834    .text._RME_List_Ins:00000000 _RME_List_Ins
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:879    .text._RME_Clear:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:884    .text._RME_Clear:00000000 _RME_Clear
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:936    .text._RME_Memcmp:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:941    .text._RME_Memcmp:00000000 _RME_Memcmp
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1023   .text._RME_Memcpy:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1028   .text._RME_Memcpy:00000000 _RME_Memcpy
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1087   .text._RME_Diff:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1092   .text._RME_Diff:00000000 _RME_Diff
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1142   .text.RME_Kmain:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1147   .text.RME_Kmain:00000000 RME_Kmain
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1185   .text._RME_Lowlvl_Check:00000000 _RME_Lowlvl_Check
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:8351   .text._RME_Kot_Init:00000000 _RME_Kot_Init
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1181   .text._RME_Lowlvl_Check:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1212   .text._RME_Svc_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1217   .text._RME_Svc_Handler:00000000 _RME_Svc_Handler
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20055  .text._RME_Inv_Ret:00000000 _RME_Inv_Ret
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:19776  .text._RME_Inv_Act:00000000 _RME_Inv_Act
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:1341   .rodata._RME_Svc_Handler:00000000 $d
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17878  .text._RME_Sig_Snd:00000000 _RME_Sig_Snd
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:18180  .text._RME_Sig_Rcv:00000000 _RME_Sig_Rcv
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20497  .text._RME_Kfn_Act:00000000 _RME_Kfn_Act
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:14551  .text._RME_Thd_Sched_Free:00000000 _RME_Thd_Sched_Free
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:14909  .text._RME_Thd_Exec_Set:00000000 _RME_Thd_Exec_Set
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:15170  .text._RME_Thd_Sched_Prio:00000000 _RME_Thd_Sched_Prio
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 506


C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:15871  .text._RME_Thd_Time_Xfer:00000000 _RME_Thd_Time_Xfer
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:16460  .text._RME_Thd_Swt:00000000 _RME_Thd_Swt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2709   .text._RME_Cpt_Crt:00000000 _RME_Cpt_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3214   .text._RME_Cpt_Del:00000000 _RME_Cpt_Del
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3584   .text._RME_Cpt_Frz:00000000 _RME_Cpt_Frz
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3853   .text._RME_Cpt_Add:00000000 _RME_Cpt_Add
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:4641   .text._RME_Cpt_Rem:00000000 _RME_Cpt_Rem
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:5917   .text._RME_Pgt_Crt:00000000 _RME_Pgt_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:6443   .text._RME_Pgt_Del:00000000 _RME_Pgt_Del
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:6791   .text._RME_Pgt_Add:00000000 _RME_Pgt_Add
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:7265   .text._RME_Pgt_Rem:00000000 _RME_Pgt_Rem
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:7484   .text._RME_Pgt_Con:00000000 _RME_Pgt_Con
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:7931   .text._RME_Pgt_Des:00000000 _RME_Pgt_Des
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:10510  .text._RME_Prc_Crt:00000000 _RME_Prc_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:11089  .text._RME_Prc_Del:00000000 _RME_Prc_Del
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:11403  .text._RME_Prc_Cpt:00000000 _RME_Prc_Cpt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:11775  .text._RME_Prc_Pgt:00000000 _RME_Prc_Pgt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:12657  .text._RME_Thd_Crt:00000000 _RME_Thd_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:13389  .text._RME_Thd_Del:00000000 _RME_Thd_Del
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:13811  .text._RME_Thd_Sched_Bind:00000000 _RME_Thd_Sched_Bind
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:15604  .text._RME_Thd_Sched_Rcv:00000000 _RME_Thd_Sched_Rcv
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17091  .text._RME_Sig_Crt:00000000 _RME_Sig_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17333  .text._RME_Sig_Del:00000000 _RME_Sig_Del
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:18607  .text._RME_Inv_Crt:00000000 _RME_Inv_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:19235  .text._RME_Inv_Del:00000000 _RME_Inv_Del
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:19579  .text._RME_Inv_Set:00000000 _RME_Inv_Set
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2103   .text._RME_Svc_Handler:000008b0 $d
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2109   .text._RME_Tim_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2114   .text._RME_Tim_Handler:00000000 _RME_Tim_Handler
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9501   .text._RME_Run_Del:00000000 _RME_Run_Del
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9692   .text._RME_Run_Notif:00000000 _RME_Run_Notif
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17756  .text._RME_Kern_Snd:00000000 _RME_Kern_Snd
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17645  .text._RME_Kern_High:00000000 _RME_Kern_High
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2194   .text._RME_Tim_Elapse:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2199   .text._RME_Tim_Elapse:00000000 _RME_Tim_Elapse
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2260   .text._RME_Tim_Future:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2265   .text._RME_Tim_Future:00000000 _RME_Tim_Future
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2296   .text._RME_Cpt_Boot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2301   .text._RME_Cpt_Boot_Init:00000000 _RME_Cpt_Boot_Init
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:8416   .text._RME_Kot_Mark:00000000 _RME_Kot_Mark
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2409   .text._RME_Cpt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2414   .text._RME_Cpt_Boot_Crt:00000000 _RME_Cpt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:2705   .text._RME_Cpt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3201   .rodata:0000003c .LC6
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3204   .rodata:00000048 .LC7
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3207   .rodata:00000054 .LC8
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3210   .text._RME_Cpt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:8723   .text._RME_Kot_Erase:00000000 _RME_Kot_Erase
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3580   .text._RME_Cpt_Frz:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:3849   .text._RME_Cpt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:4637   .text._RME_Cpt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:4929   .text._RME_Pgt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:4934   .text._RME_Pgt_Boot_Crt:00000000 _RME_Pgt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:5267   .rodata:00000078 .LC9
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:5271   .rodata:000000ac .LC10
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:5274   .text._RME_Pgt_Boot_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:5279   .text._RME_Pgt_Boot_Add:00000000 _RME_Pgt_Boot_Add
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 507


C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:5509   .text._RME_Pgt_Boot_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:5514   .text._RME_Pgt_Boot_Con:00000000 _RME_Pgt_Boot_Con
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:5913   .text._RME_Pgt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:6439   .text._RME_Pgt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:6787   .text._RME_Pgt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:7261   .text._RME_Pgt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:7480   .text._RME_Pgt_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:7927   .text._RME_Pgt_Des:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:8346   .text._RME_Kot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:8411   .text._RME_Kot_Mark:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:8718   .text._RME_Kot_Erase:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:8952   .text._RME_Kom_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:8957   .text._RME_Kom_Boot_Crt:00000000 _RME_Kom_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9227   .text._RME_CPU_Local_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9232   .text._RME_CPU_Local_Init:00000000 _RME_CPU_Local_Init
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9307   .rodata:000000d8 .LC11
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9310   .text._RME_Thd_Fatal:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9315   .text._RME_Thd_Fatal:00000000 _RME_Thd_Fatal
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9412   .text._RME_Run_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9416   .text._RME_Run_Ins:00000000 _RME_Run_Ins
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9497   .text._RME_Run_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9593   .text._RME_Run_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9597   .text._RME_Run_High:00000000 _RME_Run_High
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9688   .text._RME_Run_Notif:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9751   .text._RME_Thd_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9756   .text._RME_Thd_Pgt:00000000 _RME_Thd_Pgt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9817   .text._RME_Run_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9821   .text._RME_Run_Swt:00000000 _RME_Run_Swt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9926   .text._RME_Prc_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:9931   .text._RME_Prc_Boot_Crt:00000000 _RME_Prc_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:10506  .text._RME_Prc_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:11085  .text._RME_Prc_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:11399  .text._RME_Prc_Cpt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:11771  .text._RME_Prc_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:12143  .text._RME_Thd_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:12148  .text._RME_Thd_Boot_Crt:00000000 _RME_Thd_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:12653  .text._RME_Thd_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:13385  .text._RME_Thd_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:13807  .text._RME_Thd_Sched_Bind:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:14547  .text._RME_Thd_Sched_Free:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:14905  .text._RME_Thd_Exec_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:15166  .text._RME_Thd_Sched_Prio:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:15600  .text._RME_Thd_Sched_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:15867  .text._RME_Thd_Time_Xfer:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:16456  .text._RME_Thd_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:16844  .text._RME_Sig_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:16849  .text._RME_Sig_Boot_Crt:00000000 _RME_Sig_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17087  .text._RME_Sig_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17329  .text._RME_Sig_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17640  .text._RME_Kern_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17751  .text._RME_Kern_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:17874  .text._RME_Sig_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:18176  .text._RME_Sig_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:18341  .rodata._RME_Sig_Rcv:00000000 $d
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:18598  .text._RME_Sig_Rcv:00000430 $d
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:18603  .text._RME_Inv_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:19231  .text._RME_Inv_Del:00000000 $a
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEhdRgd.s 			page 508


C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:19575  .text._RME_Inv_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:19772  .text._RME_Inv_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20051  .text._RME_Inv_Ret:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20257  .text._RME_Kfn_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20262  .text._RME_Kfn_Boot_Crt:00000000 _RME_Kfn_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20493  .text._RME_Kfn_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20692  .rodata.Table.1:00000000 $d
C:\Users\even\AppData\Local\Temp\ccEhdRgd.s:20717  .rodata.Table.0:00000000 $d
                           .group:00000000 wm4.0.3b9f63523dc4e8d86e863c7e7e762be7
                           .group:00000000 wm4.rme_platform_a7a.h.12.f1b47b5cf52f8425e79b8a761d5bd676
                           .group:00000000 wm4.rme_platform_xc7z020.h.15.c1d90fcf057b7628b5ac2d33951e63ab
                           .group:00000000 wm4.rme_platform_a7a.h.137.fdc6a038503ac117e4f4f30ba1107f52
                           .group:00000000 wm4.rme_kernel.h.27.716340edb41bad57d522729bf2b8a38a
                           .group:00000000 wm4.rme.h.11.105c42759f88404be372052d8d99e5e6
                           .group:00000000 wm4.rme_kernel.h.185.d02db6497e1a69d04e005d15d216f811
                           .group:00000000 wm4.rme_platform_a7a.h.390.918e282e9d9d990fe491c99e3e90944b
                           .group:00000000 wm4.rme_kernel.h.678.0572fdf2012fb48f701f562b23d175bb
                           .group:00000000 wm4.rme_kernel.h.930.a0227bbf293ff3272fab74c6046a5fa5
                           .group:00000000 wm4.rme_platform_a7a.h.506.4377aa764f98c0dc92a81f841f19d61c

UNDEFINED SYMBOLS
__RME_Putchar
__aeabi_idiv
__aeabi_idivmod
__RME_Int_Disable
__RME_Lowlvl_Init
__RME_Pgt_Kom_Init
__RME_Boot
__RME_Svc_Param_Get
__RME_Svc_Retval_Set
RME_A7A_Local
__RME_A7A_Write_Release
__RME_A7A_Read_Acquire
RME_A7A_Timestamp
__RME_Pgt_Check
__RME_Pgt_Init
__RME_Pgt_Page_Map
__RME_Pgt_Pgdir_Map
__RME_Pgt_Del_Check
__RME_Pgt_Lookup
__RME_Pgt_Page_Unmap
__RME_Pgt_Pgdir_Unmap
RME_A7A_Kot
__RME_A7A_MSB_Get
__RME_Thd_Reg_Copy
__RME_Pgt_Set
__RME_Thd_Reg_Init
__RME_Inv_Reg_Save
__RME_Inv_Reg_Restore
__RME_Inv_Retval_Set
__RME_Kfn_Handler
