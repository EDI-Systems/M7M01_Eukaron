ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 1


   1              		.cpu cortex-a9
   2              		.arch armv7-a
   3              		.fpu neon-fp16
   4              		.arch_extension mp
   5              		.arch_extension sec
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"rme_kernel.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../../Source/Kernel/rme_kernel.c"
  20              		.section	.text.RME_Int_Print,"ax",%progbits
  21              		.align	2
  22              		.global	RME_Int_Print
  23              		.syntax unified
  24              		.arm
  26              	RME_Int_Print:
  27              	.LFB0:
   1:../../Source/Kernel/rme_kernel.c **** /******************************************************************************
   2:../../Source/Kernel/rme_kernel.c **** Filename    : rme_kernel.c
   3:../../Source/Kernel/rme_kernel.c **** Author      : pry
   4:../../Source/Kernel/rme_kernel.c **** Date        : 23/03/2017
   5:../../Source/Kernel/rme_kernel.c **** Licence     : The Unlicense; see LICENSE for details.
   6:../../Source/Kernel/rme_kernel.c **** Description : The system call processing path, debugging primitives and kernel
   7:../../Source/Kernel/rme_kernel.c ****               capability implementation for the RME system.
   8:../../Source/Kernel/rme_kernel.c **** 
   9:../../Source/Kernel/rme_kernel.c **** * Capability Table ************************************************************
  10:../../Source/Kernel/rme_kernel.c **** This section of code might be confusing if the underlying principles
  11:../../Source/Kernel/rme_kernel.c **** of capability-based systems is not well understood. 
  12:../../Source/Kernel/rme_kernel.c **** 1. Owning a capability means you have the power to use the function
  13:../../Source/Kernel/rme_kernel.c ****    represented by that capability.
  14:../../Source/Kernel/rme_kernel.c **** 2. Capabilities have an field called flags, which denotes what operations
  15:../../Source/Kernel/rme_kernel.c ****    is allowed on that captbl.
  16:../../Source/Kernel/rme_kernel.c **** 3. Owning a capability to a capability table means that you have the
  17:../../Source/Kernel/rme_kernel.c ****    power to modify the capability table's contents.
  18:../../Source/Kernel/rme_kernel.c **** 4. Creation and deletion of kernel objects is an operation on capability
  19:../../Source/Kernel/rme_kernel.c ****    table, thus requiring the capability to the capability table.
  20:../../Source/Kernel/rme_kernel.c **** 
  21:../../Source/Kernel/rme_kernel.c **** Remember we do not check our master table to see if it is frozen, or if it is
  22:../../Source/Kernel/rme_kernel.c **** captbl, or something, because if the master table's cap is not explicitly 
  23:../../Source/Kernel/rme_kernel.c **** passed in, we do not operate on it at all; If it is explicitly passed in, it
  24:../../Source/Kernel/rme_kernel.c **** will be checked.
  25:../../Source/Kernel/rme_kernel.c **** 
  26:../../Source/Kernel/rme_kernel.c **** There are 4 basic types of operations, as listed below:
  27:../../Source/Kernel/rme_kernel.c **** Operation                     What it does
  28:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  29:../../Source/Kernel/rme_kernel.c **** Create/Add-Dst                CAS the slot to CREATING state.
  30:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  31:../../Source/Kernel/rme_kernel.c ****                               Create kernel object.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 2


  32:../../Source/Kernel/rme_kernel.c ****                               Atomically update header to complete creation.
  33:../../Source/Kernel/rme_kernel.c **** Use/Add-Src                   Use the kernel object, have a WCET.
  34:../../Source/Kernel/rme_kernel.c **** Freeze                        Check timestamp for create-freeze QUIESCENCE.
  35:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  36:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to FROZEN state.
  37:../../Source/Kernel/rme_kernel.c **** Delete/Removal                Check FROZEN.
  38:../../Source/Kernel/rme_kernel.c ****                               Check timestamp for freeze-delete QUIESCENCE.
  39:../../Source/Kernel/rme_kernel.c ****                               Check REFCNT (delete only).
  40:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to empty.
  41:../../Source/Kernel/rme_kernel.c ****                               Delete the kernel object (delete only).
  42:../../Source/Kernel/rme_kernel.c **** 
  43:../../Source/Kernel/rme_kernel.c **** Hazard Table: (Operation 2 follows Operation 1)
  44:../../Source/Kernel/rme_kernel.c **** Operation 1    Operation 2    Reason why it is safe
  45:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  46:../../Source/Kernel/rme_kernel.c **** Create         Create         Only one creation will be successful, because 
  47:../../Source/Kernel/rme_kernel.c ****                               CREATING slot is done by CAS.
  48:../../Source/Kernel/rme_kernel.c **** Create         Delete         Create only set the CREATING. Delete will require
  49:../../Source/Kernel/rme_kernel.c ****                               a TYPE data, which will only be set after the 
  50:../../Source/Kernel/rme_kernel.c ****                               creation completes. ABA problem cannot occur
  51:../../Source/Kernel/rme_kernel.c ****                               because of create-freeze quiescence.
  52:../../Source/Kernel/rme_kernel.c ****                               If there is no quiescence between Create-Freeze, 
  53:../../Source/Kernel/rme_kernel.c ****                               the following may occur:
  54:../../Source/Kernel/rme_kernel.c ****                               T1: Check ---------------------------- Delete(CAS)
  55:../../Source/Kernel/rme_kernel.c ****                               T2: Check - Delete - Create - Freeze -------------
  56:../../Source/Kernel/rme_kernel.c ****                               In this case, thread 1 will perform a wrong 
  57:../../Source/Kernel/rme_kernel.c ****                               deletion on the new capability (the CAS will be
  58:../../Source/Kernel/rme_kernel.c ****                               successful), but this cap is actually a new cap 
  59:../../Source/Kernel/rme_kernel.c ****                               created by the thread 2 at the same location, not
  60:../../Source/Kernel/rme_kernel.c ****                               the old cap, and its quiescence may not be satisfied.
  61:../../Source/Kernel/rme_kernel.c **** Create         Freeze         OCCUPY only set the FROZEN. FROZEN will require
  62:../../Source/Kernel/rme_kernel.c ****                               that bit not set.
  63:../../Source/Kernel/rme_kernel.c **** Create         Add-Src        Add-Src will require a TYPE data, which will only
  64:../../Source/Kernel/rme_kernel.c ****                               be set after the creation completes.
  65:../../Source/Kernel/rme_kernel.c **** Create         Add-Dst        Only one creation will be successful, because 
  66:../../Source/Kernel/rme_kernel.c ****                               OCCUPY slot is done by CAS.
  67:../../Source/Kernel/rme_kernel.c **** Create         Remove         OCCUPY only set the FROZEN. Remove will require a
  68:../../Source/Kernel/rme_kernel.c ****                               TYPE data, which will only be set after the
  69:../../Source/Kernel/rme_kernel.c ****                               creation completes. See Create-Delete for details.
  70:../../Source/Kernel/rme_kernel.c **** Create         Use            OCCUPY only set the FROZEN. Use the cap will 
  71:../../Source/Kernel/rme_kernel.c ****                               require a TYPE data, which will only be set after
  72:../../Source/Kernel/rme_kernel.c ****                               the creation completes.
  73:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  74:../../Source/Kernel/rme_kernel.c **** Delete         Delete         Actual deletion done by CAS so only one deletion
  75:../../Source/Kernel/rme_kernel.c ****                               will be successful.
  76:../../Source/Kernel/rme_kernel.c **** Delete         Freeze         If the deletion fails and clears the FROZEN flag,
  77:../../Source/Kernel/rme_kernel.c ****                               nothing will be done;
  78:../../Source/Kernel/rme_kernel.c ****                               If it does not fail, then the cap will be erased,
  79:../../Source/Kernel/rme_kernel.c ****                               and the FREEZE CAS will not succeed.
  80:../../Source/Kernel/rme_kernel.c **** Delete         Remove         Only one will be successful because only the root
  81:../../Source/Kernel/rme_kernel.c ****                               can be DELETED.
  82:../../Source/Kernel/rme_kernel.c **** Delete         Others         Banned by the FROZEN flag before deletion. 
  83:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  84:../../Source/Kernel/rme_kernel.c **** Freeze         Create         Create fails because slot is still OCCUPY.
  85:../../Source/Kernel/rme_kernel.c **** Freeze         Delete         Delete fails if not FROZEN, or not QUIESCENT.
  86:../../Source/Kernel/rme_kernel.c **** Freeze         Remove         Remove fails if not FROZEN, or not QUIESCENT.
  87:../../Source/Kernel/rme_kernel.c **** Freeze         Freeze         Freeze done by CAS, and only one will be successful.
  88:../../Source/Kernel/rme_kernel.c **** Freeze         Others         Freeze bans them if they attempt after FROZEN set.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 3


  89:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  90:../../Source/Kernel/rme_kernel.c **** Add-Src        Create         Impossible because something in that slot.
  91:../../Source/Kernel/rme_kernel.c **** Add-Src        Freeze         Cannot freeze if already increased REFCNT. If they
  92:../../Source/Kernel/rme_kernel.c ****                               increase REFCNT just after FROZEN set, let it be.
  93:../../Source/Kernel/rme_kernel.c ****                               The cap can't be deleted because of non-zero REFCNT.
  94:../../Source/Kernel/rme_kernel.c **** Add-Src        Delete         Impossible because cap not FROZEN.
  95:../../Source/Kernel/rme_kernel.c **** Add-Src        Remove         Impossible because cap not FROZEN.
  96:../../Source/Kernel/rme_kernel.c **** Add-Src        Others         These operations can be parallel, which is fine.
  97:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  98:../../Source/Kernel/rme_kernel.c **** Add-Dst         ...           Conclusion same as Create operation.
  99:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 100:../../Source/Kernel/rme_kernel.c **** Remove          ...           Conclusion same as Delete operation.
 101:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 102:../../Source/Kernel/rme_kernel.c **** Use            Create         Impossible because something in that slot.
 103:../../Source/Kernel/rme_kernel.c **** Use            Delete         Impossible because not FROZEN. The use can't be
 104:../../Source/Kernel/rme_kernel.c ****                               from leaf caps as well because deletion will check
 105:../../Source/Kernel/rme_kernel.c ****                               the REFCNT, and if the REFCNT is 0, then the only
 106:../../Source/Kernel/rme_kernel.c ****                               case where an unsettled use can happen is that it
 107:../../Source/Kernel/rme_kernel.c ****                               happens within WCET time to REFCNT check time. This
 108:../../Source/Kernel/rme_kernel.c ****                               unsettled use must come from a leaf cap, as the use
 109:../../Source/Kernel/rme_kernel.c ****                               happened after the root gets FROZEN. This leaf cap
 110:../../Source/Kernel/rme_kernel.c ****                               itself, will set the REFCNT to 1, and it have no
 111:../../Source/Kernel/rme_kernel.c ****                               chance to freeze then remove itself before a WCET.
 112:../../Source/Kernel/rme_kernel.c ****                               The unsettled use case is thus impossible and there
 113:../../Source/Kernel/rme_kernel.c ****                               is no race. As long as all new reference to caps
 114:../../Source/Kernel/rme_kernel.c ****                               require an active cap passed in, there is no such
 115:../../Source/Kernel/rme_kernel.c ****                               race. Also, for cap creation, the header create step 
 116:../../Source/Kernel/rme_kernel.c ****                               must be the last step (after refcnt can be seen on
 117:../../Source/Kernel/rme_kernel.c ****                               all cores as we use write release semantics), and
 118:../../Source/Kernel/rme_kernel.c ****                               this ensures that no new leaf caps will be available
 119:../../Source/Kernel/rme_kernel.c ****                               for use before REFCNT is seen by all cores.
 120:../../Source/Kernel/rme_kernel.c **** Use            Freeze         It is fine.
 121:../../Source/Kernel/rme_kernel.c **** Use            Add-Src        It is fine.
 122:../../Source/Kernel/rme_kernel.c **** Use            Add-Dst        Impossible because something in that slot.
 123:../../Source/Kernel/rme_kernel.c **** Use            Remove         Impossible because not FROZEN.
 124:../../Source/Kernel/rme_kernel.c **** Use            Use            It is fine.
 125:../../Source/Kernel/rme_kernel.c **** 
 126:../../Source/Kernel/rme_kernel.c **** * Page Table ******************************************************************
 127:../../Source/Kernel/rme_kernel.c **** Different from most large-scale operating systems, RME requires the page tables
 128:../../Source/Kernel/rme_kernel.c **** to be constructed by the user-level rather than kernel logic. Yet, RME provided
 129:../../Source/Kernel/rme_kernel.c **** sufficient utilities for the user to conduct the necessary paging operations:
 130:../../Source/Kernel/rme_kernel.c **** 1. Creating page directories;
 131:../../Source/Kernel/rme_kernel.c **** 2. Deletiing page directories;
 132:../../Source/Kernel/rme_kernel.c **** 3. Adding(mapping) pages into page directories;
 133:../../Source/Kernel/rme_kernel.c **** 4. Deleting(unmapping) pages from page directories.
 134:../../Source/Kernel/rme_kernel.c **** 5. Constructing hierachical page tables;
 135:../../Source/Kernel/rme_kernel.c **** 6. Destructing hierachical page tables.
 136:../../Source/Kernel/rme_kernel.c **** 
 137:../../Source/Kernel/rme_kernel.c **** * Kernel Memory ***************************************************************
 138:../../Source/Kernel/rme_kernel.c **** Different seL4 and Composite, RME applys a principle that resembles Fiasco.OC's
 139:../../Source/Kernel/rme_kernel.c **** kernel object factory. However, this is simplified very much in RME - just a table
 140:../../Source/Kernel/rme_kernel.c **** for registering kernel memory usage! Some may think that this prohibits retyping;
 141:../../Source/Kernel/rme_kernel.c **** this is not true because we can implement it with a trusted user-level proxy.
 142:../../Source/Kernel/rme_kernel.c **** 
 143:../../Source/Kernel/rme_kernel.c **** * Process and Thread **********************************************************
 144:../../Source/Kernel/rme_kernel.c **** RME provided process as a light-weight virtual machine/container abstraction, 
 145:../../Source/Kernel/rme_kernel.c **** and a versatile thread abstraction. Processes enforce isolation, while threads
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 4


 146:../../Source/Kernel/rme_kernel.c **** carry out the task.
 147:../../Source/Kernel/rme_kernel.c **** There is no bind-bind race because bind is done using CAS.
 148:../../Source/Kernel/rme_kernel.c **** There is no bind-unbind race for scheduler thread because all are core-local.
 149:../../Source/Kernel/rme_kernel.c **** 
 150:../../Source/Kernel/rme_kernel.c **** * Signal and Invocation *******************************************************
 151:../../Source/Kernel/rme_kernel.c **** RME employs simple signal endpoints for interrupt passing, inter-core interrupt
 152:../../Source/Kernel/rme_kernel.c **** and asynchronous communication. Different from most operating systems, it employs
 153:../../Source/Kernel/rme_kernel.c **** thread migration model for cross-boundary synchronous communication rather than
 154:../../Source/Kernel/rme_kernel.c **** simple blockpoints. This invocation design have many benefits in many facets.
 155:../../Source/Kernel/rme_kernel.c **** 
 156:../../Source/Kernel/rme_kernel.c **** * Kernel Function *************************************************************
 157:../../Source/Kernel/rme_kernel.c **** There's no perfect operating system for a particular hardware. A hardware may
 158:../../Source/Kernel/rme_kernel.c **** have its own idiosyncrasies that needs extra hacks. RME's kernel function utility
 159:../../Source/Kernel/rme_kernel.c **** provides a disciplined way of making such hacks, in case you need to add new 
 160:../../Source/Kernel/rme_kernel.c **** system calls or directly manipulate hardware.
 161:../../Source/Kernel/rme_kernel.c **** 
 162:../../Source/Kernel/rme_kernel.c **** * The Use of 'volatile' *******************************************************
 163:../../Source/Kernel/rme_kernel.c **** 'volatile' is not needed in the kernel because the syscall interface acts as a
 164:../../Source/Kernel/rme_kernel.c **** natural compiler barrier. We're safe to assume that, during one syscall, data
 165:../../Source/Kernel/rme_kernel.c **** in memory remains unchanged. If anything changes, it has been dealt with the 
 166:../../Source/Kernel/rme_kernel.c **** dedicated assembly atomics. If LTO has been enabled, there are three cases:
 167:../../Source/Kernel/rme_kernel.c **** (1) Uniprocessor with C-implemented "atomics" with no real atomic support.
 168:../../Source/Kernel/rme_kernel.c ****     In this case, compiler barriers are not needed due to no kernel concurrency.
 169:../../Source/Kernel/rme_kernel.c **** (2) Multiprocessor with assembly-implemented atomics, but the compiler LTO does
 170:../../Source/Kernel/rme_kernel.c ****     not honor the assembly functions; instead it thinks that they are opaque.
 171:../../Source/Kernel/rme_kernel.c ****     In this case, the opaque function call itself is a full compiler barrier.
 172:../../Source/Kernel/rme_kernel.c **** (3) Multiprocessor with assembly-implemented atomics, and the compiler LTO does
 173:../../Source/Kernel/rme_kernel.c ****     honor the assembly functions.
 174:../../Source/Kernel/rme_kernel.c ****     In this case, the compiler should be aware of the semantics of the assembly,
 175:../../Source/Kernel/rme_kernel.c ****     and produce correct code.
 176:../../Source/Kernel/rme_kernel.c **** * Function Name Rules *********************************************************
 177:../../Source/Kernel/rme_kernel.c **** (1) No "_": OS entry function RME_Kmain and C entry "main".
 178:../../Source/Kernel/rme_kernel.c **** (2) "_"   : Kernel functions that are be called by kernel.
 179:../../Source/Kernel/rme_kernel.c **** (3) "__"  : HAL functions that are called by kernel.
 180:../../Source/Kernel/rme_kernel.c **** (4) "___" : HAL functions that should only be called by HAL.
 181:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 182:../../Source/Kernel/rme_kernel.c **** 
 183:../../Source/Kernel/rme_kernel.c **** /* Include *******************************************************************/
 184:../../Source/Kernel/rme_kernel.c **** #define __HDR_DEF__
 185:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 186:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 187:../../Source/Kernel/rme_kernel.c **** #undef __HDR_DEF__
 188:../../Source/Kernel/rme_kernel.c **** 
 189:../../Source/Kernel/rme_kernel.c **** #define __HDR_STRUCT__
 190:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 191:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 192:../../Source/Kernel/rme_kernel.c **** #undef __HDR_STRUCT__
 193:../../Source/Kernel/rme_kernel.c **** 
 194:../../Source/Kernel/rme_kernel.c **** /* Private include */
 195:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 196:../../Source/Kernel/rme_kernel.c **** 
 197:../../Source/Kernel/rme_kernel.c **** #define __HDR_PUBLIC__
 198:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 199:../../Source/Kernel/rme_kernel.c **** #undef __HDR_PUBLIC__
 200:../../Source/Kernel/rme_kernel.c **** /* End Include ***************************************************************/
 201:../../Source/Kernel/rme_kernel.c **** 
 202:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Int_Print *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 5


 203:../../Source/Kernel/rme_kernel.c **** Description : Print a signed integer on the debugging console. This integer is
 204:../../Source/Kernel/rme_kernel.c ****               printed as decimal with sign.
 205:../../Source/Kernel/rme_kernel.c **** Input       : rme_cnt_t Int - The integer to print.
 206:../../Source/Kernel/rme_kernel.c **** Output      : None.
 207:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 208:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 209:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 210:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Int_Print(rme_cnt_t Int)
 211:../../Source/Kernel/rme_kernel.c **** {
  28              		.loc 1 211 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 00482DE9 		push	{fp, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 11, -8
  35              		.cfi_offset 14, -4
  36 0004 04B08DE2 		add	fp, sp, #4
  37              		.cfi_def_cfa 11, 4
  38 0008 20D04DE2 		sub	sp, sp, #32
  39 000c 20000BE5 		str	r0, [fp, #-32]
 212:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Num;
 213:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Abs;
 214:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Iter;
 215:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
 216:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Div;
 217:../../Source/Kernel/rme_kernel.c ****     
 218:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 219:../../Source/Kernel/rme_kernel.c ****     if(Int==0)
  40              		.loc 1 219 7
  41 0010 20301BE5 		ldr	r3, [fp, #-32]
  42 0014 000053E3 		cmp	r3, #0
  43 0018 0300001A 		bne	.L2
 220:../../Source/Kernel/rme_kernel.c ****     {
 221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 222:../../Source/Kernel/rme_kernel.c **** 
 223:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
  44              		.loc 1 223 9
  45 001c 3000A0E3 		mov	r0, #48
  46 0020 FEFFFFEB 		bl	__RME_Putchar
 224:../../Source/Kernel/rme_kernel.c ****         return 1;
  47              		.loc 1 224 16
  48 0024 0130A0E3 		mov	r3, #1
  49 0028 500000EA 		b	.L3
  50              	.L2:
 225:../../Source/Kernel/rme_kernel.c ****     }
 226:../../Source/Kernel/rme_kernel.c ****     else
 227:../../Source/Kernel/rme_kernel.c ****     {
 228:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 229:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 230:../../Source/Kernel/rme_kernel.c ****     }
 231:../../Source/Kernel/rme_kernel.c **** 
 232:../../Source/Kernel/rme_kernel.c **** 
 233:../../Source/Kernel/rme_kernel.c ****     /* Correct all negatives into positives */
 234:../../Source/Kernel/rme_kernel.c ****     if(Int<0)
  51              		.loc 1 234 7
  52 002c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 6


  53 0030 000053E3 		cmp	r3, #0
  54 0034 070000AA 		bge	.L4
 235:../../Source/Kernel/rme_kernel.c ****     {
 236:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 237:../../Source/Kernel/rme_kernel.c **** 
 238:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('-');
  55              		.loc 1 238 9
  56 0038 2D00A0E3 		mov	r0, #45
  57 003c FEFFFFEB 		bl	__RME_Putchar
 239:../../Source/Kernel/rme_kernel.c ****         Abs=-Int;
  58              		.loc 1 239 12
  59 0040 20301BE5 		ldr	r3, [fp, #-32]
  60 0044 003063E2 		rsb	r3, r3, #0
  61 0048 0C300BE5 		str	r3, [fp, #-12]
 240:../../Source/Kernel/rme_kernel.c ****         Num=1;
  62              		.loc 1 240 12
  63 004c 0130A0E3 		mov	r3, #1
  64 0050 08300BE5 		str	r3, [fp, #-8]
  65 0054 030000EA 		b	.L5
  66              	.L4:
 241:../../Source/Kernel/rme_kernel.c ****     }
 242:../../Source/Kernel/rme_kernel.c ****     else
 243:../../Source/Kernel/rme_kernel.c ****     {
 244:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 245:../../Source/Kernel/rme_kernel.c **** 
 246:../../Source/Kernel/rme_kernel.c ****         Abs=Int;
  67              		.loc 1 246 12
  68 0058 20301BE5 		ldr	r3, [fp, #-32]
  69 005c 0C300BE5 		str	r3, [fp, #-12]
 247:../../Source/Kernel/rme_kernel.c ****         Num=0;
  70              		.loc 1 247 12
  71 0060 0030A0E3 		mov	r3, #0
  72 0064 08300BE5 		str	r3, [fp, #-8]
  73              	.L5:
 248:../../Source/Kernel/rme_kernel.c ****     }
 249:../../Source/Kernel/rme_kernel.c **** 
 250:../../Source/Kernel/rme_kernel.c ****     /* How many digits are there? */
 251:../../Source/Kernel/rme_kernel.c ****     Count=0;
  74              		.loc 1 251 10
  75 0068 0030A0E3 		mov	r3, #0
  76 006c 14300BE5 		str	r3, [fp, #-20]
 252:../../Source/Kernel/rme_kernel.c ****     Div=1;
  77              		.loc 1 252 8
  78 0070 0130A0E3 		mov	r3, #1
  79 0074 18300BE5 		str	r3, [fp, #-24]
 253:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
  80              		.loc 1 253 9
  81 0078 0C301BE5 		ldr	r3, [fp, #-12]
  82 007c 10300BE5 		str	r3, [fp, #-16]
  83              	.L9:
 254:../../Source/Kernel/rme_kernel.c ****     while(1U)
 255:../../Source/Kernel/rme_kernel.c ****     {
 256:../../Source/Kernel/rme_kernel.c ****         Iter/=10;
  84              		.loc 1 256 13
  85 0080 10201BE5 		ldr	r2, [fp, #-16]
  86 0084 673606E3 		movw	r3, #26215
  87 0088 663646E3 		movt	r3, 26214
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 7


  88 008c 9312C3E0 		smull	r1, r3, r3, r2
  89 0090 4311A0E1 		asr	r1, r3, #2
  90 0094 C23FA0E1 		asr	r3, r2, #31
  91 0098 033041E0 		sub	r3, r1, r3
  92 009c 10300BE5 		str	r3, [fp, #-16]
 257:../../Source/Kernel/rme_kernel.c ****         Count++;
  93              		.loc 1 257 14
  94 00a0 14301BE5 		ldr	r3, [fp, #-20]
  95 00a4 013083E2 		add	r3, r3, #1
  96 00a8 14300BE5 		str	r3, [fp, #-20]
 258:../../Source/Kernel/rme_kernel.c ****         if(Iter!=0)
  97              		.loc 1 258 11
  98 00ac 10301BE5 		ldr	r3, [fp, #-16]
  99 00b0 000053E3 		cmp	r3, #0
 100 00b4 0600000A 		beq	.L12
 259:../../Source/Kernel/rme_kernel.c ****         {
 260:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 261:../../Source/Kernel/rme_kernel.c **** 
 262:../../Source/Kernel/rme_kernel.c ****             Div*=10;
 101              		.loc 1 262 16
 102 00b8 18201BE5 		ldr	r2, [fp, #-24]
 103 00bc 0230A0E1 		mov	r3, r2
 104 00c0 0331A0E1 		lsl	r3, r3, #2
 105 00c4 023083E0 		add	r3, r3, r2
 106 00c8 8330A0E1 		lsl	r3, r3, #1
 107 00cc 18300BE5 		str	r3, [fp, #-24]
 256:../../Source/Kernel/rme_kernel.c ****         Count++;
 108              		.loc 1 256 13
 109 00d0 EAFFFFEA 		b	.L9
 110              	.L12:
 263:../../Source/Kernel/rme_kernel.c ****         }
 264:../../Source/Kernel/rme_kernel.c ****         else
 265:../../Source/Kernel/rme_kernel.c ****         {
 266:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 267:../../Source/Kernel/rme_kernel.c **** 
 268:../../Source/Kernel/rme_kernel.c ****             break;
 111              		.loc 1 268 13
 112 00d4 00F020E3 		nop
 269:../../Source/Kernel/rme_kernel.c ****         }
 270:../../Source/Kernel/rme_kernel.c ****     }
 271:../../Source/Kernel/rme_kernel.c ****     Num+=Count;
 113              		.loc 1 271 8
 114 00d8 08201BE5 		ldr	r2, [fp, #-8]
 115 00dc 14301BE5 		ldr	r3, [fp, #-20]
 116 00e0 033082E0 		add	r3, r2, r3
 117 00e4 08300BE5 		str	r3, [fp, #-8]
 272:../../Source/Kernel/rme_kernel.c **** 
 273:../../Source/Kernel/rme_kernel.c ****     /* Print the integer */
 274:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
 118              		.loc 1 274 9
 119 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 120 00ec 10300BE5 		str	r3, [fp, #-16]
 275:../../Source/Kernel/rme_kernel.c **** 
 276:../../Source/Kernel/rme_kernel.c ****     while(Count>0)
 121              		.loc 1 276 10
 122 00f0 1A0000EA 		b	.L10
 123              	.L11:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 8


 277:../../Source/Kernel/rme_kernel.c ****     {
 278:../../Source/Kernel/rme_kernel.c ****         Count--;
 124              		.loc 1 278 14
 125 00f4 14301BE5 		ldr	r3, [fp, #-20]
 126 00f8 013043E2 		sub	r3, r3, #1
 127 00fc 14300BE5 		str	r3, [fp, #-20]
 279:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar((rme_s8_t)(Iter/Div)+'0');
 128              		.loc 1 279 38
 129 0100 18101BE5 		ldr	r1, [fp, #-24]
 130 0104 10001BE5 		ldr	r0, [fp, #-16]
 131 0108 FEFFFFEB 		bl	__aeabi_idiv
 132 010c 0030A0E1 		mov	r3, r0
 133              		.loc 1 279 23
 134 0110 7330EFE6 		uxtb	r3, r3
 135              		.loc 1 279 43
 136 0114 303083E2 		add	r3, r3, #48
 137 0118 7330EFE6 		uxtb	r3, r3
 138              		.loc 1 279 9
 139 011c 7330AFE6 		sxtb	r3, r3
 140 0120 0300A0E1 		mov	r0, r3
 141 0124 FEFFFFEB 		bl	__RME_Putchar
 280:../../Source/Kernel/rme_kernel.c ****         Iter=Iter%Div;
 142              		.loc 1 280 13
 143 0128 10301BE5 		ldr	r3, [fp, #-16]
 144 012c 18101BE5 		ldr	r1, [fp, #-24]
 145 0130 0300A0E1 		mov	r0, r3
 146 0134 FEFFFFEB 		bl	__aeabi_idivmod
 147 0138 0130A0E1 		mov	r3, r1
 148 013c 10300BE5 		str	r3, [fp, #-16]
 281:../../Source/Kernel/rme_kernel.c ****         Div/=10;
 149              		.loc 1 281 12
 150 0140 18201BE5 		ldr	r2, [fp, #-24]
 151 0144 673606E3 		movw	r3, #26215
 152 0148 663646E3 		movt	r3, 26214
 153 014c 9312C3E0 		smull	r1, r3, r3, r2
 154 0150 4311A0E1 		asr	r1, r3, #2
 155 0154 C23FA0E1 		asr	r3, r2, #31
 156 0158 033041E0 		sub	r3, r1, r3
 157 015c 18300BE5 		str	r3, [fp, #-24]
 158              	.L10:
 276:../../Source/Kernel/rme_kernel.c ****     {
 159              		.loc 1 276 16
 160 0160 14301BE5 		ldr	r3, [fp, #-20]
 161 0164 000053E3 		cmp	r3, #0
 162 0168 E1FFFFCA 		bgt	.L11
 282:../../Source/Kernel/rme_kernel.c ****     }
 283:../../Source/Kernel/rme_kernel.c ****     
 284:../../Source/Kernel/rme_kernel.c ****     return Num;
 163              		.loc 1 284 12
 164 016c 08301BE5 		ldr	r3, [fp, #-8]
 165              	.L3:
 285:../../Source/Kernel/rme_kernel.c **** }
 166              		.loc 1 285 1
 167 0170 0300A0E1 		mov	r0, r3
 168 0174 04D04BE2 		sub	sp, fp, #4
 169              		.cfi_def_cfa 13, 8
 170              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 9


 171 0178 0088BDE8 		pop	{fp, pc}
 172              		.cfi_endproc
 173              	.LFE0:
 175              		.section	.text.RME_Hex_Print,"ax",%progbits
 176              		.align	2
 177              		.global	RME_Hex_Print
 178              		.syntax unified
 179              		.arm
 181              	RME_Hex_Print:
 182              	.LFB1:
 286:../../Source/Kernel/rme_kernel.c **** #endif
 287:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Int_Print ************************************************/
 288:../../Source/Kernel/rme_kernel.c **** 
 289:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Hex_Print *****************************************************
 290:../../Source/Kernel/rme_kernel.c **** Description : Print a unsigned integer on the debugging console. This integer is
 291:../../Source/Kernel/rme_kernel.c ****               printed as hexadecimal.
 292:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Uint - The unsigned integer to print.
 293:../../Source/Kernel/rme_kernel.c **** Output      : None.
 294:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 295:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 296:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 297:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Hex_Print(rme_ptr_t Uint)
 298:../../Source/Kernel/rme_kernel.c **** {
 183              		.loc 1 298 1
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 24
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 00482DE9 		push	{fp, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 11, -8
 190              		.cfi_offset 14, -4
 191 0004 04B08DE2 		add	fp, sp, #4
 192              		.cfi_def_cfa 11, 4
 193 0008 18D04DE2 		sub	sp, sp, #24
 194 000c 18000BE5 		str	r0, [fp, #-24]
 299:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Iter;
 300:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 301:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Num;
 302:../../Source/Kernel/rme_kernel.c ****     
 303:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 304:../../Source/Kernel/rme_kernel.c ****     if(Uint==0U)
 195              		.loc 1 304 7
 196 0010 18301BE5 		ldr	r3, [fp, #-24]
 197 0014 000053E3 		cmp	r3, #0
 198 0018 0300001A 		bne	.L14
 305:../../Source/Kernel/rme_kernel.c ****     {
 306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 307:../../Source/Kernel/rme_kernel.c ****         
 308:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
 199              		.loc 1 308 9
 200 001c 3000A0E3 		mov	r0, #48
 201 0020 FEFFFFEB 		bl	__RME_Putchar
 309:../../Source/Kernel/rme_kernel.c ****         return 1;
 202              		.loc 1 309 16
 203 0024 0130A0E3 		mov	r3, #1
 204 0028 330000EA 		b	.L15
 205              	.L14:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 10


 310:../../Source/Kernel/rme_kernel.c ****     }
 311:../../Source/Kernel/rme_kernel.c ****     else
 312:../../Source/Kernel/rme_kernel.c ****     {
 313:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 314:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 315:../../Source/Kernel/rme_kernel.c ****     }
 316:../../Source/Kernel/rme_kernel.c **** 
 317:../../Source/Kernel/rme_kernel.c ****     /* Filter out all the zeroes */
 318:../../Source/Kernel/rme_kernel.c ****     Count=0U;
 206              		.loc 1 318 10
 207 002c 0030A0E3 		mov	r3, #0
 208 0030 0C300BE5 		str	r3, [fp, #-12]
 319:../../Source/Kernel/rme_kernel.c ****     Iter=Uint;
 209              		.loc 1 319 9
 210 0034 18301BE5 		ldr	r3, [fp, #-24]
 211 0038 08300BE5 		str	r3, [fp, #-8]
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 212              		.loc 1 320 10
 213 003c 050000EA 		b	.L16
 214              	.L17:
 321:../../Source/Kernel/rme_kernel.c ****     {
 322:../../Source/Kernel/rme_kernel.c ****         Iter<<=4;
 215              		.loc 1 322 13
 216 0040 08301BE5 		ldr	r3, [fp, #-8]
 217 0044 0332A0E1 		lsl	r3, r3, #4
 218 0048 08300BE5 		str	r3, [fp, #-8]
 323:../../Source/Kernel/rme_kernel.c ****         Count++;
 219              		.loc 1 323 14
 220 004c 0C301BE5 		ldr	r3, [fp, #-12]
 221 0050 013083E2 		add	r3, r3, #1
 222 0054 0C300BE5 		str	r3, [fp, #-12]
 223              	.L16:
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 224              		.loc 1 320 16
 225 0058 08301BE5 		ldr	r3, [fp, #-8]
 226 005c 233EA0E1 		lsr	r3, r3, #28
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 227              		.loc 1 320 36
 228 0060 000053E3 		cmp	r3, #0
 229 0064 F5FFFF0A 		beq	.L17
 324:../../Source/Kernel/rme_kernel.c ****     }
 325:../../Source/Kernel/rme_kernel.c ****     
 326:../../Source/Kernel/rme_kernel.c ****     /* Count is the number of pts to print */
 327:../../Source/Kernel/rme_kernel.c ****     Count=RME_POW2(RME_WORD_ORDER-2U)-Count;
 230              		.loc 1 327 10
 231 0068 0C301BE5 		ldr	r3, [fp, #-12]
 232 006c 083063E2 		rsb	r3, r3, #8
 233 0070 0C300BE5 		str	r3, [fp, #-12]
 328:../../Source/Kernel/rme_kernel.c ****     Num=Count;
 234              		.loc 1 328 8
 235 0074 0C301BE5 		ldr	r3, [fp, #-12]
 236 0078 10300BE5 		str	r3, [fp, #-16]
 329:../../Source/Kernel/rme_kernel.c ****     while(Count>0U)
 237              		.loc 1 329 10
 238 007c 1A0000EA 		b	.L18
 239              	.L20:
 330:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 11


 331:../../Source/Kernel/rme_kernel.c ****         Count--;
 240              		.loc 1 331 14
 241 0080 0C301BE5 		ldr	r3, [fp, #-12]
 242 0084 013043E2 		sub	r3, r3, #1
 243 0088 0C300BE5 		str	r3, [fp, #-12]
 332:../../Source/Kernel/rme_kernel.c ****         Iter=(Uint>>(Count<<2U))&0x0FU;
 244              		.loc 1 332 27
 245 008c 0C301BE5 		ldr	r3, [fp, #-12]
 246 0090 0331A0E1 		lsl	r3, r3, #2
 247              		.loc 1 332 19
 248 0094 18201BE5 		ldr	r2, [fp, #-24]
 249 0098 3233A0E1 		lsr	r3, r2, r3
 250              		.loc 1 332 13
 251 009c 0F3003E2 		and	r3, r3, #15
 252 00a0 08300BE5 		str	r3, [fp, #-8]
 333:../../Source/Kernel/rme_kernel.c ****         if(Iter<10U)
 253              		.loc 1 333 11
 254 00a4 08301BE5 		ldr	r3, [fp, #-8]
 255 00a8 090053E3 		cmp	r3, #9
 256 00ac 0700008A 		bhi	.L19
 334:../../Source/Kernel/rme_kernel.c ****         {
 335:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 336:../../Source/Kernel/rme_kernel.c ****             
 337:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'0');
 257              		.loc 1 337 27
 258 00b0 08301BE5 		ldr	r3, [fp, #-8]
 259 00b4 7330EFE6 		uxtb	r3, r3
 260              		.loc 1 337 41
 261 00b8 303083E2 		add	r3, r3, #48
 262 00bc 7330EFE6 		uxtb	r3, r3
 263              		.loc 1 337 13
 264 00c0 7330AFE6 		sxtb	r3, r3
 265 00c4 0300A0E1 		mov	r0, r3
 266 00c8 FEFFFFEB 		bl	__RME_Putchar
 267 00cc 060000EA 		b	.L18
 268              	.L19:
 338:../../Source/Kernel/rme_kernel.c ****         }
 339:../../Source/Kernel/rme_kernel.c ****         else
 340:../../Source/Kernel/rme_kernel.c ****         {
 341:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 342:../../Source/Kernel/rme_kernel.c ****             
 343:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'A'-10);
 269              		.loc 1 343 27
 270 00d0 08301BE5 		ldr	r3, [fp, #-8]
 271 00d4 7330EFE6 		uxtb	r3, r3
 272              		.loc 1 343 45
 273 00d8 373083E2 		add	r3, r3, #55
 274 00dc 7330EFE6 		uxtb	r3, r3
 275              		.loc 1 343 13
 276 00e0 7330AFE6 		sxtb	r3, r3
 277 00e4 0300A0E1 		mov	r0, r3
 278 00e8 FEFFFFEB 		bl	__RME_Putchar
 279              	.L18:
 329:../../Source/Kernel/rme_kernel.c ****     {
 280              		.loc 1 329 16
 281 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 282 00f0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 12


 283 00f4 E1FFFF1A 		bne	.L20
 344:../../Source/Kernel/rme_kernel.c ****         }
 345:../../Source/Kernel/rme_kernel.c ****     }
 346:../../Source/Kernel/rme_kernel.c ****     
 347:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Num;
 284              		.loc 1 347 12
 285 00f8 10301BE5 		ldr	r3, [fp, #-16]
 286              	.L15:
 348:../../Source/Kernel/rme_kernel.c **** }
 287              		.loc 1 348 1
 288 00fc 0300A0E1 		mov	r0, r3
 289 0100 04D04BE2 		sub	sp, fp, #4
 290              		.cfi_def_cfa 13, 8
 291              		@ sp needed
 292 0104 0088BDE8 		pop	{fp, pc}
 293              		.cfi_endproc
 294              	.LFE1:
 296              		.section	.text.RME_Str_Print,"ax",%progbits
 297              		.align	2
 298              		.global	RME_Str_Print
 299              		.syntax unified
 300              		.arm
 302              	RME_Str_Print:
 303              	.LFB2:
 349:../../Source/Kernel/rme_kernel.c **** #endif
 350:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Hex_Print ************************************************/
 351:../../Source/Kernel/rme_kernel.c **** 
 352:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Str_Print *****************************************************
 353:../../Source/Kernel/rme_kernel.c **** Description : Print a string the kernel console.
 354:../../Source/Kernel/rme_kernel.c ****               This is only used for kernel-level debugging.
 355:../../Source/Kernel/rme_kernel.c **** Input       : const rme_s8_t* String - The string to print
 356:../../Source/Kernel/rme_kernel.c **** Output      : None.
 357:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed, the '\0' is not included.
 358:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 359:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 360:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Str_Print(const rme_s8_t* String)
 361:../../Source/Kernel/rme_kernel.c **** {
 304              		.loc 1 361 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 00482DE9 		push	{fp, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 11, -8
 311              		.cfi_offset 14, -4
 312 0004 04B08DE2 		add	fp, sp, #4
 313              		.cfi_def_cfa 11, 4
 314 0008 10D04DE2 		sub	sp, sp, #16
 315 000c 10000BE5 		str	r0, [fp, #-16]
 362:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 363:../../Source/Kernel/rme_kernel.c ****     
 364:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_DBGLOG_MAX;Count++)
 316              		.loc 1 364 14
 317 0010 0030A0E3 		mov	r3, #0
 318 0014 08300BE5 		str	r3, [fp, #-8]
 319              		.loc 1 364 5
 320 0018 0E0000EA 		b	.L22
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 13


 321              	.L25:
 365:../../Source/Kernel/rme_kernel.c ****     {
 366:../../Source/Kernel/rme_kernel.c ****         if(String[Count]==(rme_s8_t)'\0')
 322              		.loc 1 366 18
 323 001c 10201BE5 		ldr	r2, [fp, #-16]
 324 0020 08301BE5 		ldr	r3, [fp, #-8]
 325 0024 033082E0 		add	r3, r2, r3
 326 0028 D030D3E1 		ldrsb	r3, [r3]
 327              		.loc 1 366 11
 328 002c 000053E3 		cmp	r3, #0
 329 0030 0C00000A 		beq	.L27
 367:../../Source/Kernel/rme_kernel.c ****         {
 368:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 369:../../Source/Kernel/rme_kernel.c ****             
 370:../../Source/Kernel/rme_kernel.c ****             break;
 371:../../Source/Kernel/rme_kernel.c ****         }
 372:../../Source/Kernel/rme_kernel.c ****         else
 373:../../Source/Kernel/rme_kernel.c ****         {
 374:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 375:../../Source/Kernel/rme_kernel.c ****             /* No action required */
 376:../../Source/Kernel/rme_kernel.c ****         }
 377:../../Source/Kernel/rme_kernel.c ****         
 378:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar(String[Count]);
 330              		.loc 1 378 29
 331 0034 10201BE5 		ldr	r2, [fp, #-16]
 332 0038 08301BE5 		ldr	r3, [fp, #-8]
 333 003c 033082E0 		add	r3, r2, r3
 334              		.loc 1 378 9
 335 0040 D030D3E1 		ldrsb	r3, [r3]
 336 0044 0300A0E1 		mov	r0, r3
 337 0048 FEFFFFEB 		bl	__RME_Putchar
 364:../../Source/Kernel/rme_kernel.c ****     {
 338              		.loc 1 364 44 discriminator 2
 339 004c 08301BE5 		ldr	r3, [fp, #-8]
 340 0050 013083E2 		add	r3, r3, #1
 341 0054 08300BE5 		str	r3, [fp, #-8]
 342              	.L22:
 364:../../Source/Kernel/rme_kernel.c ****     {
 343              		.loc 1 364 23 discriminator 1
 344 0058 08301BE5 		ldr	r3, [fp, #-8]
 345 005c FE0053E3 		cmp	r3, #254
 346 0060 EDFFFF9A 		bls	.L25
 347 0064 000000EA 		b	.L24
 348              	.L27:
 370:../../Source/Kernel/rme_kernel.c ****         }
 349              		.loc 1 370 13
 350 0068 00F020E3 		nop
 351              	.L24:
 379:../../Source/Kernel/rme_kernel.c ****     }
 380:../../Source/Kernel/rme_kernel.c ****     
 381:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Count;
 352              		.loc 1 381 12
 353 006c 08301BE5 		ldr	r3, [fp, #-8]
 382:../../Source/Kernel/rme_kernel.c **** }
 354              		.loc 1 382 1
 355 0070 0300A0E1 		mov	r0, r3
 356 0074 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 14


 357              		.cfi_def_cfa 13, 8
 358              		@ sp needed
 359 0078 0088BDE8 		pop	{fp, pc}
 360              		.cfi_endproc
 361              	.LFE2:
 363              		.section	.text.RME_Log,"ax",%progbits
 364              		.align	2
 365              		.global	RME_Log
 366              		.syntax unified
 367              		.arm
 369              	RME_Log:
 370              	.LFB3:
 383:../../Source/Kernel/rme_kernel.c **** #endif
 384:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Str_Print ************************************************/
 385:../../Source/Kernel/rme_kernel.c **** 
 386:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Log ***********************************************************
 387:../../Source/Kernel/rme_kernel.c **** Description : Default logging function, will be used when the user does not 
 388:../../Source/Kernel/rme_kernel.c ****               supply one. This will only be called when the kernel panics.
 389:../../Source/Kernel/rme_kernel.c **** Input       : const char* File - The filename.
 390:../../Source/Kernel/rme_kernel.c ****               long Line - The line number.
 391:../../Source/Kernel/rme_kernel.c ****               const char* Date - The compilation date.
 392:../../Source/Kernel/rme_kernel.c ****               const char* Time - The compilation time.
 393:../../Source/Kernel/rme_kernel.c **** Output      : None.
 394:../../Source/Kernel/rme_kernel.c **** Return      : None.
 395:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 396:../../Source/Kernel/rme_kernel.c **** #ifndef RME_LOG
 397:../../Source/Kernel/rme_kernel.c **** void RME_Log(const char* File,
 398:../../Source/Kernel/rme_kernel.c ****              long Line,
 399:../../Source/Kernel/rme_kernel.c ****              const char* Date,
 400:../../Source/Kernel/rme_kernel.c ****              const char* Time)
 401:../../Source/Kernel/rme_kernel.c **** {
 371              		.loc 1 401 1
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 16
 374              		@ frame_needed = 1, uses_anonymous_args = 0
 375              		@ link register save eliminated.
 376 0000 04B02DE5 		str	fp, [sp, #-4]!
 377              		.cfi_def_cfa_offset 4
 378              		.cfi_offset 11, -4
 379 0004 00B08DE2 		add	fp, sp, #0
 380              		.cfi_def_cfa_register 11
 381 0008 14D04DE2 		sub	sp, sp, #20
 382 000c 08000BE5 		str	r0, [fp, #-8]
 383 0010 0C100BE5 		str	r1, [fp, #-12]
 384 0014 10200BE5 		str	r2, [fp, #-16]
 385 0018 14300BE5 		str	r3, [fp, #-20]
 402:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\n***\r\nKernel panic - not syncing :\r\n"); \
 403:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(File); \
 404:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , Line "); \
 405:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Line); \
 406:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 407:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Date); \
 408:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , "); \
 409:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Time); \
 410:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \*/
 411:../../Source/Kernel/rme_kernel.c **** }
 386              		.loc 1 411 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 15


 387 001c 00F020E3 		nop
 388 0020 00D08BE2 		add	sp, fp, #0
 389              		.cfi_def_cfa_register 13
 390              		@ sp needed
 391 0024 04B09DE4 		ldr	fp, [sp], #4
 392              		.cfi_restore 11
 393              		.cfi_def_cfa_offset 0
 394 0028 1EFF2FE1 		bx	lr
 395              		.cfi_endproc
 396              	.LFE3:
 398              		.section	.text._RME_MSB_Generic,"ax",%progbits
 399              		.align	2
 400              		.global	_RME_MSB_Generic
 401              		.syntax unified
 402              		.arm
 404              	_RME_MSB_Generic:
 405              	.LFB4:
 412:../../Source/Kernel/rme_kernel.c **** #endif
 413:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Log ******************************************************/
 414:../../Source/Kernel/rme_kernel.c **** 
 415:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Cov_Print *****************************************************
 416:../../Source/Kernel/rme_kernel.c **** Description : The coverage data printer. Should always be disabled for all cases
 417:../../Source/Kernel/rme_kernel.c ****               except where a kernel coverage test is needed. This should never
 418:../../Source/Kernel/rme_kernel.c ****               be called any any user application; for coverage testing only.
 419:../../Source/Kernel/rme_kernel.c **** Input       : None.
 420:../../Source/Kernel/rme_kernel.c **** Output      : None.
 421:../../Source/Kernel/rme_kernel.c **** Return      : None.
 422:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 423:../../Source/Kernel/rme_kernel.c **** #ifdef RME_COV_LINE_NUM
 424:../../Source/Kernel/rme_kernel.c **** void RME_Cov_Print(void)
 425:../../Source/Kernel/rme_kernel.c **** {
 426:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Count;
 427:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Next;
 428:../../Source/Kernel/rme_kernel.c ****     
 429:../../Source/Kernel/rme_kernel.c ****     Next=0U;
 430:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_COV_LINE_NUM;Count++)
 431:../../Source/Kernel/rme_kernel.c ****     {
 432:../../Source/Kernel/rme_kernel.c ****         if(RME_BITMAP_IS_SET(RME_Cov,Count))
 433:../../Source/Kernel/rme_kernel.c ****         {
 434:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 435:../../Source/Kernel/rme_kernel.c ****             RME_DBG_I(Count);
 436:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S(",");
 437:../../Source/Kernel/rme_kernel.c ****             /* We put 12 markers on a single line */
 438:../../Source/Kernel/rme_kernel.c ****             Next++;
 439:../../Source/Kernel/rme_kernel.c ****             if(Next>11U)
 440:../../Source/Kernel/rme_kernel.c ****             {
 441:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 442:../../Source/Kernel/rme_kernel.c ****                 
 443:../../Source/Kernel/rme_kernel.c ****                 Next=0U;
 444:../../Source/Kernel/rme_kernel.c ****                 RME_DBG_S("\r\n");
 445:../../Source/Kernel/rme_kernel.c ****             }
 446:../../Source/Kernel/rme_kernel.c ****             else
 447:../../Source/Kernel/rme_kernel.c ****             {
 448:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 449:../../Source/Kernel/rme_kernel.c ****                 /* No action needed */
 450:../../Source/Kernel/rme_kernel.c ****             }
 451:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 16


 452:../../Source/Kernel/rme_kernel.c ****         else
 453:../../Source/Kernel/rme_kernel.c ****         {
 454:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 455:../../Source/Kernel/rme_kernel.c ****             /* No action needed */
 456:../../Source/Kernel/rme_kernel.c ****         }
 457:../../Source/Kernel/rme_kernel.c ****     }
 458:../../Source/Kernel/rme_kernel.c **** }
 459:../../Source/Kernel/rme_kernel.c **** #endif
 460:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Cov_Print ************************************************/
 461:../../Source/Kernel/rme_kernel.c **** 
 462:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_MSB_Generic **************************************************
 463:../../Source/Kernel/rme_kernel.c **** Description : Find the MSB's position. This is a portable solution for all
 464:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 465:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 466:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to compute for.
 467:../../Source/Kernel/rme_kernel.c **** Output      : None.
 468:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 469:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 470:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_MSB_Generic(rme_ptr_t Value)
 471:../../Source/Kernel/rme_kernel.c **** {
 406              		.loc 1 471 1
 407              		.cfi_startproc
 408              		@ args = 0, pretend = 0, frame = 16
 409              		@ frame_needed = 1, uses_anonymous_args = 0
 410              		@ link register save eliminated.
 411 0000 04B02DE5 		str	fp, [sp, #-4]!
 412              		.cfi_def_cfa_offset 4
 413              		.cfi_offset 11, -4
 414 0004 00B08DE2 		add	fp, sp, #0
 415              		.cfi_def_cfa_register 11
 416 0008 14D04DE2 		sub	sp, sp, #20
 417 000c 10000BE5 		str	r0, [fp, #-16]
 472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 473:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 474:../../Source/Kernel/rme_kernel.c ****     {
 475:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,1U,2U,2U,2U,2U,3U,3U,3U,3U,3U,3U,3U,3U,
 476:../../Source/Kernel/rme_kernel.c ****         4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,
 477:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 478:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 479:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 480:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 481:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 482:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 483:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 484:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 485:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 486:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 487:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 488:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 489:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 490:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U
 491:../../Source/Kernel/rme_kernel.c ****     };
 492:../../Source/Kernel/rme_kernel.c **** 
 493:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 494:../../Source/Kernel/rme_kernel.c ****     /* 15-8 */
 495:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(8U))
 496:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 17


 497:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 498:../../Source/Kernel/rme_kernel.c ****         
 499:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 500:../../Source/Kernel/rme_kernel.c ****     }
 501:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 502:../../Source/Kernel/rme_kernel.c ****     else
 503:../../Source/Kernel/rme_kernel.c ****     {
 504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 505:../../Source/Kernel/rme_kernel.c ****         
 506:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 507:../../Source/Kernel/rme_kernel.c ****     }
 508:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 509:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 510:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(16U))
 418              		.loc 1 510 7
 419 0010 10301BE5 		ldr	r3, [fp, #-16]
 420 0014 010853E3 		cmp	r3, #65536
 421 0018 0800003A 		bcc	.L30
 511:../../Source/Kernel/rme_kernel.c ****     {
 512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 513:../../Source/Kernel/rme_kernel.c ****         
 514:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 515:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(24U))
 422              		.loc 1 515 11
 423 001c 10301BE5 		ldr	r3, [fp, #-16]
 424 0020 010453E3 		cmp	r3, #16777216
 425 0024 0200003A 		bcc	.L31
 516:../../Source/Kernel/rme_kernel.c ****         {
 517:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 518:../../Source/Kernel/rme_kernel.c ****             
 519:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 426              		.loc 1 519 16
 427 0028 1830A0E3 		mov	r3, #24
 428 002c 08300BE5 		str	r3, [fp, #-8]
 429 0030 0A0000EA 		b	.L32
 430              	.L31:
 520:../../Source/Kernel/rme_kernel.c ****         }
 521:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 522:../../Source/Kernel/rme_kernel.c ****         else
 523:../../Source/Kernel/rme_kernel.c ****         {
 524:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 525:../../Source/Kernel/rme_kernel.c ****             
 526:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 431              		.loc 1 526 16
 432 0034 1030A0E3 		mov	r3, #16
 433 0038 08300BE5 		str	r3, [fp, #-8]
 434 003c 070000EA 		b	.L32
 435              	.L30:
 527:../../Source/Kernel/rme_kernel.c ****         }
 528:../../Source/Kernel/rme_kernel.c ****     }
 529:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 530:../../Source/Kernel/rme_kernel.c ****     else
 531:../../Source/Kernel/rme_kernel.c ****     {
 532:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 533:../../Source/Kernel/rme_kernel.c ****         
 534:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 535:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(8U))
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 18


 436              		.loc 1 535 11
 437 0040 10301BE5 		ldr	r3, [fp, #-16]
 438 0044 FF0053E3 		cmp	r3, #255
 439 0048 0200009A 		bls	.L33
 536:../../Source/Kernel/rme_kernel.c ****         {
 537:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 538:../../Source/Kernel/rme_kernel.c ****             
 539:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 440              		.loc 1 539 16
 441 004c 0830A0E3 		mov	r3, #8
 442 0050 08300BE5 		str	r3, [fp, #-8]
 443 0054 010000EA 		b	.L32
 444              	.L33:
 540:../../Source/Kernel/rme_kernel.c ****         }
 541:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 542:../../Source/Kernel/rme_kernel.c ****         else
 543:../../Source/Kernel/rme_kernel.c ****         {
 544:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 545:../../Source/Kernel/rme_kernel.c ****             
 546:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 445              		.loc 1 546 16
 446 0058 0030A0E3 		mov	r3, #0
 447 005c 08300BE5 		str	r3, [fp, #-8]
 448              	.L32:
 547:../../Source/Kernel/rme_kernel.c ****         }
 548:../../Source/Kernel/rme_kernel.c ****     }
 549:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 550:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 551:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(32U))
 552:../../Source/Kernel/rme_kernel.c ****     {
 553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 554:../../Source/Kernel/rme_kernel.c ****         
 555:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 556:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(48U))
 557:../../Source/Kernel/rme_kernel.c ****         {
 558:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 559:../../Source/Kernel/rme_kernel.c ****             
 560:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 561:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(56U))
 562:../../Source/Kernel/rme_kernel.c ****             {
 563:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 564:../../Source/Kernel/rme_kernel.c ****                 
 565:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 566:../../Source/Kernel/rme_kernel.c ****             }
 567:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 568:../../Source/Kernel/rme_kernel.c ****             else
 569:../../Source/Kernel/rme_kernel.c ****             {
 570:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 571:../../Source/Kernel/rme_kernel.c ****                 
 572:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 573:../../Source/Kernel/rme_kernel.c ****             }
 574:../../Source/Kernel/rme_kernel.c ****         }
 575:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 576:../../Source/Kernel/rme_kernel.c ****         else
 577:../../Source/Kernel/rme_kernel.c ****         {
 578:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 579:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 19


 580:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 581:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(40U))
 582:../../Source/Kernel/rme_kernel.c ****             {
 583:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 584:../../Source/Kernel/rme_kernel.c ****                 
 585:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 586:../../Source/Kernel/rme_kernel.c ****             }
 587:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 588:../../Source/Kernel/rme_kernel.c ****             else
 589:../../Source/Kernel/rme_kernel.c ****             {
 590:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 591:../../Source/Kernel/rme_kernel.c ****                 
 592:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 593:../../Source/Kernel/rme_kernel.c ****             }
 594:../../Source/Kernel/rme_kernel.c ****         }
 595:../../Source/Kernel/rme_kernel.c ****     }
 596:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 597:../../Source/Kernel/rme_kernel.c ****     else
 598:../../Source/Kernel/rme_kernel.c ****     {
 599:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 600:../../Source/Kernel/rme_kernel.c ****         
 601:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 602:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(16U))
 603:../../Source/Kernel/rme_kernel.c ****         {
 604:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 605:../../Source/Kernel/rme_kernel.c ****             
 606:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 607:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(24U))
 608:../../Source/Kernel/rme_kernel.c ****             {
 609:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 610:../../Source/Kernel/rme_kernel.c ****                 
 611:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 612:../../Source/Kernel/rme_kernel.c ****             }
 613:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 614:../../Source/Kernel/rme_kernel.c ****             else
 615:../../Source/Kernel/rme_kernel.c ****             {
 616:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 617:../../Source/Kernel/rme_kernel.c ****                 
 618:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 619:../../Source/Kernel/rme_kernel.c ****             }
 620:../../Source/Kernel/rme_kernel.c ****         }
 621:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 622:../../Source/Kernel/rme_kernel.c ****         else
 623:../../Source/Kernel/rme_kernel.c ****         {
 624:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 625:../../Source/Kernel/rme_kernel.c ****             
 626:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 627:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(8U))
 628:../../Source/Kernel/rme_kernel.c ****             {
 629:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 630:../../Source/Kernel/rme_kernel.c ****                 
 631:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 632:../../Source/Kernel/rme_kernel.c ****             }
 633:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 634:../../Source/Kernel/rme_kernel.c ****             else
 635:../../Source/Kernel/rme_kernel.c ****             {
 636:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 20


 637:../../Source/Kernel/rme_kernel.c ****                 
 638:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 639:../../Source/Kernel/rme_kernel.c ****             }
 640:../../Source/Kernel/rme_kernel.c ****         }
 641:../../Source/Kernel/rme_kernel.c ****     }
 642:../../Source/Kernel/rme_kernel.c **** #else
 643:../../Source/Kernel/rme_kernel.c **** #error Generic MSB for 128-bits & above are not implemented.
 644:../../Source/Kernel/rme_kernel.c **** #endif
 645:../../Source/Kernel/rme_kernel.c **** 
 646:../../Source/Kernel/rme_kernel.c ****     return Table[Value>>Bit]+Bit;
 449              		.loc 1 646 23
 450 0060 10201BE5 		ldr	r2, [fp, #-16]
 451 0064 08301BE5 		ldr	r3, [fp, #-8]
 452 0068 3223A0E1 		lsr	r2, r2, r3
 453              		.loc 1 646 17
 454 006c 003000E3 		movw	r3, #:lower16:Table.1
 455 0070 003040E3 		movt	r3, #:upper16:Table.1
 456 0074 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 457 0078 0320A0E1 		mov	r2, r3
 458              		.loc 1 646 29
 459 007c 08301BE5 		ldr	r3, [fp, #-8]
 460 0080 033082E0 		add	r3, r2, r3
 647:../../Source/Kernel/rme_kernel.c **** }
 461              		.loc 1 647 1
 462 0084 0300A0E1 		mov	r0, r3
 463 0088 00D08BE2 		add	sp, fp, #0
 464              		.cfi_def_cfa_register 13
 465              		@ sp needed
 466 008c 04B09DE4 		ldr	fp, [sp], #4
 467              		.cfi_restore 11
 468              		.cfi_def_cfa_offset 0
 469 0090 1EFF2FE1 		bx	lr
 470              		.cfi_endproc
 471              	.LFE4:
 473              		.section	.text._RME_LSB_Generic,"ax",%progbits
 474              		.align	2
 475              		.global	_RME_LSB_Generic
 476              		.syntax unified
 477              		.arm
 479              	_RME_LSB_Generic:
 480              	.LFB5:
 648:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_MSB_Generic *********************************************/
 649:../../Source/Kernel/rme_kernel.c **** 
 650:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_LSB_Generic **************************************************
 651:../../Source/Kernel/rme_kernel.c **** Description : Find the LSB's position. This is a portable solution for all
 652:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 653:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 654:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to count.
 655:../../Source/Kernel/rme_kernel.c **** Output      : None.
 656:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 657:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 658:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_LSB_Generic(rme_ptr_t Value)
 659:../../Source/Kernel/rme_kernel.c **** {
 481              		.loc 1 659 1
 482              		.cfi_startproc
 483              		@ args = 0, pretend = 0, frame = 16
 484              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 21


 485              		@ link register save eliminated.
 486 0000 04B02DE5 		str	fp, [sp, #-4]!
 487              		.cfi_def_cfa_offset 4
 488              		.cfi_offset 11, -4
 489 0004 00B08DE2 		add	fp, sp, #0
 490              		.cfi_def_cfa_register 11
 491 0008 14D04DE2 		sub	sp, sp, #20
 492 000c 10000BE5 		str	r0, [fp, #-16]
 660:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 661:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 662:../../Source/Kernel/rme_kernel.c ****     {
 663:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 664:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 665:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 666:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 667:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 668:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 669:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 670:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 671:../../Source/Kernel/rme_kernel.c ****         7U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 672:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 673:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 674:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 675:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 676:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 677:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 678:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U
 679:../../Source/Kernel/rme_kernel.c ****     };
 680:../../Source/Kernel/rme_kernel.c ****     
 681:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 682:../../Source/Kernel/rme_kernel.c ****     /* 16-8 */
 683:../../Source/Kernel/rme_kernel.c ****     if((Value<<8U)==0U)
 684:../../Source/Kernel/rme_kernel.c ****     {
 685:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 686:../../Source/Kernel/rme_kernel.c ****         
 687:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 688:../../Source/Kernel/rme_kernel.c ****     }
 689:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 690:../../Source/Kernel/rme_kernel.c ****     else
 691:../../Source/Kernel/rme_kernel.c ****     {
 692:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 693:../../Source/Kernel/rme_kernel.c ****         
 694:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 695:../../Source/Kernel/rme_kernel.c ****     }
 696:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 697:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 698:../../Source/Kernel/rme_kernel.c ****     if((Value<<16U)==0U)
 493              		.loc 1 698 14
 494 0010 10301BE5 		ldr	r3, [fp, #-16]
 495 0014 0338A0E1 		lsl	r3, r3, #16
 496              		.loc 1 698 7
 497 0018 000053E3 		cmp	r3, #0
 498 001c 0900001A 		bne	.L36
 699:../../Source/Kernel/rme_kernel.c ****     {
 700:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 701:../../Source/Kernel/rme_kernel.c ****         
 702:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 22


 703:../../Source/Kernel/rme_kernel.c ****         if((Value<<8U)==0U)
 499              		.loc 1 703 18
 500 0020 10301BE5 		ldr	r3, [fp, #-16]
 501 0024 0334A0E1 		lsl	r3, r3, #8
 502              		.loc 1 703 11
 503 0028 000053E3 		cmp	r3, #0
 504 002c 0200001A 		bne	.L37
 704:../../Source/Kernel/rme_kernel.c ****         {
 705:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 706:../../Source/Kernel/rme_kernel.c ****             
 707:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 505              		.loc 1 707 16
 506 0030 1830A0E3 		mov	r3, #24
 507 0034 08300BE5 		str	r3, [fp, #-8]
 508 0038 0B0000EA 		b	.L38
 509              	.L37:
 708:../../Source/Kernel/rme_kernel.c ****         }
 709:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 710:../../Source/Kernel/rme_kernel.c ****         else
 711:../../Source/Kernel/rme_kernel.c ****         {
 712:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 713:../../Source/Kernel/rme_kernel.c ****             
 714:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 510              		.loc 1 714 16
 511 003c 1030A0E3 		mov	r3, #16
 512 0040 08300BE5 		str	r3, [fp, #-8]
 513 0044 080000EA 		b	.L38
 514              	.L36:
 715:../../Source/Kernel/rme_kernel.c ****         }
 716:../../Source/Kernel/rme_kernel.c ****     }
 717:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 718:../../Source/Kernel/rme_kernel.c ****     else
 719:../../Source/Kernel/rme_kernel.c ****     {
 720:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 721:../../Source/Kernel/rme_kernel.c ****         
 722:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 723:../../Source/Kernel/rme_kernel.c ****         if((Value<<24U)==0U)
 515              		.loc 1 723 18
 516 0048 10301BE5 		ldr	r3, [fp, #-16]
 517 004c 033CA0E1 		lsl	r3, r3, #24
 518              		.loc 1 723 11
 519 0050 000053E3 		cmp	r3, #0
 520 0054 0200001A 		bne	.L39
 724:../../Source/Kernel/rme_kernel.c ****         {
 725:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 726:../../Source/Kernel/rme_kernel.c ****             
 727:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 521              		.loc 1 727 16
 522 0058 0830A0E3 		mov	r3, #8
 523 005c 08300BE5 		str	r3, [fp, #-8]
 524 0060 010000EA 		b	.L38
 525              	.L39:
 728:../../Source/Kernel/rme_kernel.c ****         }
 729:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 730:../../Source/Kernel/rme_kernel.c ****         else
 731:../../Source/Kernel/rme_kernel.c ****         {
 732:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 23


 733:../../Source/Kernel/rme_kernel.c ****             
 734:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 526              		.loc 1 734 16
 527 0064 0030A0E3 		mov	r3, #0
 528 0068 08300BE5 		str	r3, [fp, #-8]
 529              	.L38:
 735:../../Source/Kernel/rme_kernel.c ****         }
 736:../../Source/Kernel/rme_kernel.c ****     }
 737:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 738:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 739:../../Source/Kernel/rme_kernel.c ****     if((Value<<32U)==0U)
 740:../../Source/Kernel/rme_kernel.c ****     {
 741:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 742:../../Source/Kernel/rme_kernel.c ****         
 743:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 744:../../Source/Kernel/rme_kernel.c ****         if((Value<<16U)==0U)
 745:../../Source/Kernel/rme_kernel.c ****         {
 746:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 747:../../Source/Kernel/rme_kernel.c ****             
 748:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 749:../../Source/Kernel/rme_kernel.c ****             if((Value<<8U)==0U)
 750:../../Source/Kernel/rme_kernel.c ****             {
 751:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 752:../../Source/Kernel/rme_kernel.c ****                 
 753:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 754:../../Source/Kernel/rme_kernel.c ****             }
 755:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 756:../../Source/Kernel/rme_kernel.c ****             else
 757:../../Source/Kernel/rme_kernel.c ****             {
 758:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 759:../../Source/Kernel/rme_kernel.c ****                 
 760:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 761:../../Source/Kernel/rme_kernel.c ****             }
 762:../../Source/Kernel/rme_kernel.c ****         }
 763:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 764:../../Source/Kernel/rme_kernel.c ****         else
 765:../../Source/Kernel/rme_kernel.c ****         {
 766:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 767:../../Source/Kernel/rme_kernel.c ****             
 768:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 769:../../Source/Kernel/rme_kernel.c ****             if((Value<<24U)==0U)
 770:../../Source/Kernel/rme_kernel.c ****             {
 771:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 772:../../Source/Kernel/rme_kernel.c ****                 
 773:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 774:../../Source/Kernel/rme_kernel.c ****             }
 775:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 776:../../Source/Kernel/rme_kernel.c ****             else
 777:../../Source/Kernel/rme_kernel.c ****             {
 778:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 779:../../Source/Kernel/rme_kernel.c ****                 
 780:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 781:../../Source/Kernel/rme_kernel.c ****             }
 782:../../Source/Kernel/rme_kernel.c ****         }
 783:../../Source/Kernel/rme_kernel.c ****     }
 784:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 785:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 24


 786:../../Source/Kernel/rme_kernel.c ****     {
 787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 788:../../Source/Kernel/rme_kernel.c ****         
 789:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 790:../../Source/Kernel/rme_kernel.c ****         if((Value<<48U)==0U)
 791:../../Source/Kernel/rme_kernel.c ****         {
 792:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 793:../../Source/Kernel/rme_kernel.c ****             
 794:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 795:../../Source/Kernel/rme_kernel.c ****             if((Value<<40U)==0U)
 796:../../Source/Kernel/rme_kernel.c ****             {
 797:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 798:../../Source/Kernel/rme_kernel.c ****                 
 799:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 800:../../Source/Kernel/rme_kernel.c ****             }
 801:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 802:../../Source/Kernel/rme_kernel.c ****             else
 803:../../Source/Kernel/rme_kernel.c ****             {
 804:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 805:../../Source/Kernel/rme_kernel.c ****                 
 806:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 807:../../Source/Kernel/rme_kernel.c ****             }
 808:../../Source/Kernel/rme_kernel.c ****         }
 809:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 810:../../Source/Kernel/rme_kernel.c ****         else
 811:../../Source/Kernel/rme_kernel.c ****         {
 812:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 813:../../Source/Kernel/rme_kernel.c ****             
 814:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 815:../../Source/Kernel/rme_kernel.c ****             if((Value<<56U)==0U)
 816:../../Source/Kernel/rme_kernel.c ****             {
 817:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 818:../../Source/Kernel/rme_kernel.c ****                 
 819:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 820:../../Source/Kernel/rme_kernel.c ****             }
 821:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 822:../../Source/Kernel/rme_kernel.c ****             else
 823:../../Source/Kernel/rme_kernel.c ****             {
 824:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 825:../../Source/Kernel/rme_kernel.c ****                 
 826:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 827:../../Source/Kernel/rme_kernel.c ****             }
 828:../../Source/Kernel/rme_kernel.c ****         }
 829:../../Source/Kernel/rme_kernel.c ****     }
 830:../../Source/Kernel/rme_kernel.c **** #else
 831:../../Source/Kernel/rme_kernel.c **** #error Generic LSB for 128-bits & above are not implemented.
 832:../../Source/Kernel/rme_kernel.c **** #endif
 833:../../Source/Kernel/rme_kernel.c **** 
 834:../../Source/Kernel/rme_kernel.c ****     return Table[(rme_u8_t)(Value>>Bit)]+Bit;
 530              		.loc 1 834 34
 531 006c 10201BE5 		ldr	r2, [fp, #-16]
 532 0070 08301BE5 		ldr	r3, [fp, #-8]
 533 0074 3233A0E1 		lsr	r3, r2, r3
 534              		.loc 1 834 18
 535 0078 7330EFE6 		uxtb	r3, r3
 536 007c 0320A0E1 		mov	r2, r3
 537              		.loc 1 834 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 25


 538 0080 003000E3 		movw	r3, #:lower16:Table.0
 539 0084 003040E3 		movt	r3, #:upper16:Table.0
 540 0088 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 541 008c 0320A0E1 		mov	r2, r3
 542              		.loc 1 834 41
 543 0090 08301BE5 		ldr	r3, [fp, #-8]
 544 0094 033082E0 		add	r3, r2, r3
 835:../../Source/Kernel/rme_kernel.c **** }
 545              		.loc 1 835 1
 546 0098 0300A0E1 		mov	r0, r3
 547 009c 00D08BE2 		add	sp, fp, #0
 548              		.cfi_def_cfa_register 13
 549              		@ sp needed
 550 00a0 04B09DE4 		ldr	fp, [sp], #4
 551              		.cfi_restore 11
 552              		.cfi_def_cfa_offset 0
 553 00a4 1EFF2FE1 		bx	lr
 554              		.cfi_endproc
 555              	.LFE5:
 557              		.section	.text._RME_Comp_Swap_Single,"ax",%progbits
 558              		.align	2
 559              		.global	_RME_Comp_Swap_Single
 560              		.syntax unified
 561              		.arm
 563              	_RME_Comp_Swap_Single:
 564              	.LFB6:
 836:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_LSB_Generic *********************************************/
 837:../../Source/Kernel/rme_kernel.c **** 
 838:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Comp_Swap_Single *********************************************
 839:../../Source/Kernel/rme_kernel.c **** Description : The compare-and-swap atomic instruction. If the Old value is
 840:../../Source/Kernel/rme_kernel.c ****               equal to *Ptr, then set the *Ptr as New and return 1; else return
 841:../../Source/Kernel/rme_kernel.c ****               0.
 842:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 843:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 844:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Old - The old value.
 845:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t New - The new value.
 846:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 847:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - If successful, 1; else 0.
 848:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 849:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Comp_Swap_Single(volatile rme_ptr_t* Ptr,
 850:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Old,
 851:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t New)
 852:../../Source/Kernel/rme_kernel.c **** {
 565              		.loc 1 852 1
 566              		.cfi_startproc
 567              		@ args = 0, pretend = 0, frame = 16
 568              		@ frame_needed = 1, uses_anonymous_args = 0
 569              		@ link register save eliminated.
 570 0000 04B02DE5 		str	fp, [sp, #-4]!
 571              		.cfi_def_cfa_offset 4
 572              		.cfi_offset 11, -4
 573 0004 00B08DE2 		add	fp, sp, #0
 574              		.cfi_def_cfa_register 11
 575 0008 14D04DE2 		sub	sp, sp, #20
 576 000c 08000BE5 		str	r0, [fp, #-8]
 577 0010 0C100BE5 		str	r1, [fp, #-12]
 578 0014 10200BE5 		str	r2, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 26


 853:../../Source/Kernel/rme_kernel.c ****     if(*Ptr==Old)
 579              		.loc 1 853 8
 580 0018 08301BE5 		ldr	r3, [fp, #-8]
 581 001c 003093E5 		ldr	r3, [r3]
 582              		.loc 1 853 7
 583 0020 0C201BE5 		ldr	r2, [fp, #-12]
 584 0024 030052E1 		cmp	r2, r3
 585 0028 0400001A 		bne	.L42
 854:../../Source/Kernel/rme_kernel.c ****     {
 855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 856:../../Source/Kernel/rme_kernel.c ****         
 857:../../Source/Kernel/rme_kernel.c ****         *Ptr=New;
 586              		.loc 1 857 13
 587 002c 08301BE5 		ldr	r3, [fp, #-8]
 588 0030 10201BE5 		ldr	r2, [fp, #-16]
 589 0034 002083E5 		str	r2, [r3]
 858:../../Source/Kernel/rme_kernel.c ****         return 1U;
 590              		.loc 1 858 16
 591 0038 0130A0E3 		mov	r3, #1
 592 003c 000000EA 		b	.L43
 593              	.L42:
 859:../../Source/Kernel/rme_kernel.c ****     }
 860:../../Source/Kernel/rme_kernel.c ****     else
 861:../../Source/Kernel/rme_kernel.c ****     {
 862:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 863:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 864:../../Source/Kernel/rme_kernel.c ****     }
 865:../../Source/Kernel/rme_kernel.c **** 
 866:../../Source/Kernel/rme_kernel.c ****     return 0U;
 594              		.loc 1 866 12
 595 0040 0030A0E3 		mov	r3, #0
 596              	.L43:
 867:../../Source/Kernel/rme_kernel.c **** }
 597              		.loc 1 867 1
 598 0044 0300A0E1 		mov	r0, r3
 599 0048 00D08BE2 		add	sp, fp, #0
 600              		.cfi_def_cfa_register 13
 601              		@ sp needed
 602 004c 04B09DE4 		ldr	fp, [sp], #4
 603              		.cfi_restore 11
 604              		.cfi_def_cfa_offset 0
 605 0050 1EFF2FE1 		bx	lr
 606              		.cfi_endproc
 607              	.LFE6:
 609              		.section	.text._RME_Fetch_Add_Single,"ax",%progbits
 610              		.align	2
 611              		.global	_RME_Fetch_Add_Single
 612              		.syntax unified
 613              		.arm
 615              	_RME_Fetch_Add_Single:
 616              	.LFB7:
 868:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Comp_Swap_Single ****************************************/
 869:../../Source/Kernel/rme_kernel.c **** 
 870:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_Add_Single *********************************************
 871:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-add atomic instruction. Increase the value that is
 872:../../Source/Kernel/rme_kernel.c ****               pointed to by the pointer, and return the value before addition.
 873:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 27


 874:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 875:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Addend - The number to add.
 876:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 877:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the addition.
 878:../../Source/Kernel/rme_kernel.c **** *******************************************************************************/
 879:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_Add_Single(volatile rme_ptr_t* Ptr,
 880:../../Source/Kernel/rme_kernel.c ****                                 rme_cnt_t Addend)
 881:../../Source/Kernel/rme_kernel.c **** {
 617              		.loc 1 881 1
 618              		.cfi_startproc
 619              		@ args = 0, pretend = 0, frame = 16
 620              		@ frame_needed = 1, uses_anonymous_args = 0
 621              		@ link register save eliminated.
 622 0000 04B02DE5 		str	fp, [sp, #-4]!
 623              		.cfi_def_cfa_offset 4
 624              		.cfi_offset 11, -4
 625 0004 00B08DE2 		add	fp, sp, #0
 626              		.cfi_def_cfa_register 11
 627 0008 14D04DE2 		sub	sp, sp, #20
 628 000c 10000BE5 		str	r0, [fp, #-16]
 629 0010 14100BE5 		str	r1, [fp, #-20]
 882:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Old;
 883:../../Source/Kernel/rme_kernel.c **** 
 884:../../Source/Kernel/rme_kernel.c ****     Old=(rme_cnt_t)(*Ptr);
 630              		.loc 1 884 21
 631 0014 10301BE5 		ldr	r3, [fp, #-16]
 632 0018 003093E5 		ldr	r3, [r3]
 633              		.loc 1 884 8
 634 001c 08300BE5 		str	r3, [fp, #-8]
 885:../../Source/Kernel/rme_kernel.c ****     *Ptr=(rme_ptr_t)(Old+Addend);
 635              		.loc 1 885 25
 636 0020 08201BE5 		ldr	r2, [fp, #-8]
 637 0024 14301BE5 		ldr	r3, [fp, #-20]
 638 0028 033082E0 		add	r3, r2, r3
 639              		.loc 1 885 10
 640 002c 0320A0E1 		mov	r2, r3
 641              		.loc 1 885 9
 642 0030 10301BE5 		ldr	r3, [fp, #-16]
 643 0034 002083E5 		str	r2, [r3]
 886:../../Source/Kernel/rme_kernel.c **** 
 887:../../Source/Kernel/rme_kernel.c ****     return (rme_ptr_t)Old;
 644              		.loc 1 887 12
 645 0038 08301BE5 		ldr	r3, [fp, #-8]
 888:../../Source/Kernel/rme_kernel.c **** }
 646              		.loc 1 888 1
 647 003c 0300A0E1 		mov	r0, r3
 648 0040 00D08BE2 		add	sp, fp, #0
 649              		.cfi_def_cfa_register 13
 650              		@ sp needed
 651 0044 04B09DE4 		ldr	fp, [sp], #4
 652              		.cfi_restore 11
 653              		.cfi_def_cfa_offset 0
 654 0048 1EFF2FE1 		bx	lr
 655              		.cfi_endproc
 656              	.LFE7:
 658              		.section	.text._RME_Fetch_And_Single,"ax",%progbits
 659              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 28


 660              		.global	_RME_Fetch_And_Single
 661              		.syntax unified
 662              		.arm
 664              	_RME_Fetch_And_Single:
 665              	.LFB8:
 889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_Add_Single ****************************************/
 890:../../Source/Kernel/rme_kernel.c **** 
 891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_And_Single *********************************************
 892:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-logic-and atomic instruction. Logic AND the pointer
 893:../../Source/Kernel/rme_kernel.c ****               value with the operand, and return the value before logic AND.
 894:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 895:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 896:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Operand - The number to logic AND with the destination.
 897:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 898:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the AND operation.
 899:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 900:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_And_Single(volatile rme_ptr_t* Ptr,
 901:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Operand)
 902:../../Source/Kernel/rme_kernel.c **** {
 666              		.loc 1 902 1
 667              		.cfi_startproc
 668              		@ args = 0, pretend = 0, frame = 16
 669              		@ frame_needed = 1, uses_anonymous_args = 0
 670              		@ link register save eliminated.
 671 0000 04B02DE5 		str	fp, [sp, #-4]!
 672              		.cfi_def_cfa_offset 4
 673              		.cfi_offset 11, -4
 674 0004 00B08DE2 		add	fp, sp, #0
 675              		.cfi_def_cfa_register 11
 676 0008 14D04DE2 		sub	sp, sp, #20
 677 000c 10000BE5 		str	r0, [fp, #-16]
 678 0010 14100BE5 		str	r1, [fp, #-20]
 903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old;
 904:../../Source/Kernel/rme_kernel.c **** 
 905:../../Source/Kernel/rme_kernel.c ****     Old=*Ptr;
 679              		.loc 1 905 8
 680 0014 10301BE5 		ldr	r3, [fp, #-16]
 681 0018 003093E5 		ldr	r3, [r3]
 682 001c 08300BE5 		str	r3, [fp, #-8]
 906:../../Source/Kernel/rme_kernel.c ****     *Ptr=Old&Operand;
 683              		.loc 1 906 13
 684 0020 08201BE5 		ldr	r2, [fp, #-8]
 685 0024 14301BE5 		ldr	r3, [fp, #-20]
 686 0028 032002E0 		and	r2, r2, r3
 687              		.loc 1 906 9
 688 002c 10301BE5 		ldr	r3, [fp, #-16]
 689 0030 002083E5 		str	r2, [r3]
 907:../../Source/Kernel/rme_kernel.c **** 
 908:../../Source/Kernel/rme_kernel.c ****     return Old;
 690              		.loc 1 908 12
 691 0034 08301BE5 		ldr	r3, [fp, #-8]
 909:../../Source/Kernel/rme_kernel.c **** }
 692              		.loc 1 909 1
 693 0038 0300A0E1 		mov	r0, r3
 694 003c 00D08BE2 		add	sp, fp, #0
 695              		.cfi_def_cfa_register 13
 696              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 29


 697 0040 04B09DE4 		ldr	fp, [sp], #4
 698              		.cfi_restore 11
 699              		.cfi_def_cfa_offset 0
 700 0044 1EFF2FE1 		bx	lr
 701              		.cfi_endproc
 702              	.LFE8:
 704              		.section	.text._RME_List_Crt,"ax",%progbits
 705              		.align	2
 706              		.global	_RME_List_Crt
 707              		.syntax unified
 708              		.arm
 710              	_RME_List_Crt:
 711              	.LFB9:
 910:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_And_Single ****************************************/
 911:../../Source/Kernel/rme_kernel.c **** 
 912:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Crt *****************************************************
 913:../../Source/Kernel/rme_kernel.c **** Description : Create a doubly linked list.
 914:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Head - The pointer to the list head.
 915:../../Source/Kernel/rme_kernel.c **** Output      : None.
 916:../../Source/Kernel/rme_kernel.c **** Return      : None.
 917:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 918:../../Source/Kernel/rme_kernel.c **** void _RME_List_Crt(struct RME_List* Head)
 919:../../Source/Kernel/rme_kernel.c **** {
 712              		.loc 1 919 1
 713              		.cfi_startproc
 714              		@ args = 0, pretend = 0, frame = 8
 715              		@ frame_needed = 1, uses_anonymous_args = 0
 716              		@ link register save eliminated.
 717 0000 04B02DE5 		str	fp, [sp, #-4]!
 718              		.cfi_def_cfa_offset 4
 719              		.cfi_offset 11, -4
 720 0004 00B08DE2 		add	fp, sp, #0
 721              		.cfi_def_cfa_register 11
 722 0008 0CD04DE2 		sub	sp, sp, #12
 723 000c 08000BE5 		str	r0, [fp, #-8]
 920:../../Source/Kernel/rme_kernel.c ****     Head->Prev=Head;
 724              		.loc 1 920 15
 725 0010 08301BE5 		ldr	r3, [fp, #-8]
 726 0014 08201BE5 		ldr	r2, [fp, #-8]
 727 0018 042083E5 		str	r2, [r3, #4]
 921:../../Source/Kernel/rme_kernel.c ****     Head->Next=Head;
 728              		.loc 1 921 15
 729 001c 08301BE5 		ldr	r3, [fp, #-8]
 730 0020 08201BE5 		ldr	r2, [fp, #-8]
 731 0024 002083E5 		str	r2, [r3]
 922:../../Source/Kernel/rme_kernel.c **** }
 732              		.loc 1 922 1
 733 0028 00F020E3 		nop
 734 002c 00D08BE2 		add	sp, fp, #0
 735              		.cfi_def_cfa_register 13
 736              		@ sp needed
 737 0030 04B09DE4 		ldr	fp, [sp], #4
 738              		.cfi_restore 11
 739              		.cfi_def_cfa_offset 0
 740 0034 1EFF2FE1 		bx	lr
 741              		.cfi_endproc
 742              	.LFE9:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 30


 744              		.section	.text._RME_List_Del,"ax",%progbits
 745              		.align	2
 746              		.global	_RME_List_Del
 747              		.syntax unified
 748              		.arm
 750              	_RME_List_Del:
 751              	.LFB10:
 923:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Crt ************************************************/
 924:../../Source/Kernel/rme_kernel.c **** 
 925:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Del *****************************************************
 926:../../Source/Kernel/rme_kernel.c **** Description : Delete a node from the doubly-linked list.
 927:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Prev - The previous node.
 928:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 929:../../Source/Kernel/rme_kernel.c **** Output      : None.
 930:../../Source/Kernel/rme_kernel.c **** Return      : None.
 931:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 932:../../Source/Kernel/rme_kernel.c **** void _RME_List_Del(struct RME_List* Prev,
 933:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 934:../../Source/Kernel/rme_kernel.c **** {
 752              		.loc 1 934 1
 753              		.cfi_startproc
 754              		@ args = 0, pretend = 0, frame = 8
 755              		@ frame_needed = 1, uses_anonymous_args = 0
 756              		@ link register save eliminated.
 757 0000 04B02DE5 		str	fp, [sp, #-4]!
 758              		.cfi_def_cfa_offset 4
 759              		.cfi_offset 11, -4
 760 0004 00B08DE2 		add	fp, sp, #0
 761              		.cfi_def_cfa_register 11
 762 0008 0CD04DE2 		sub	sp, sp, #12
 763 000c 08000BE5 		str	r0, [fp, #-8]
 764 0010 0C100BE5 		str	r1, [fp, #-12]
 935:../../Source/Kernel/rme_kernel.c ****     Next->Prev=Prev;
 765              		.loc 1 935 15
 766 0014 0C301BE5 		ldr	r3, [fp, #-12]
 767 0018 08201BE5 		ldr	r2, [fp, #-8]
 768 001c 042083E5 		str	r2, [r3, #4]
 936:../../Source/Kernel/rme_kernel.c ****     Prev->Next=Next;
 769              		.loc 1 936 15
 770 0020 08301BE5 		ldr	r3, [fp, #-8]
 771 0024 0C201BE5 		ldr	r2, [fp, #-12]
 772 0028 002083E5 		str	r2, [r3]
 937:../../Source/Kernel/rme_kernel.c **** }
 773              		.loc 1 937 1
 774 002c 00F020E3 		nop
 775 0030 00D08BE2 		add	sp, fp, #0
 776              		.cfi_def_cfa_register 13
 777              		@ sp needed
 778 0034 04B09DE4 		ldr	fp, [sp], #4
 779              		.cfi_restore 11
 780              		.cfi_def_cfa_offset 0
 781 0038 1EFF2FE1 		bx	lr
 782              		.cfi_endproc
 783              	.LFE10:
 785              		.section	.text._RME_List_Ins,"ax",%progbits
 786              		.align	2
 787              		.global	_RME_List_Ins
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 31


 788              		.syntax unified
 789              		.arm
 791              	_RME_List_Ins:
 792              	.LFB11:
 938:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Del ************************************************/
 939:../../Source/Kernel/rme_kernel.c **** 
 940:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Ins *****************************************************
 941:../../Source/Kernel/rme_kernel.c **** Description : Insert a node to the doubly-linked list.
 942:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* New - The new node to insert.
 943:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Prev - The previous node.
 944:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 945:../../Source/Kernel/rme_kernel.c **** Output      : None.
 946:../../Source/Kernel/rme_kernel.c **** Return      : None.
 947:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 948:../../Source/Kernel/rme_kernel.c **** void _RME_List_Ins(struct RME_List* New,
 949:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Prev,
 950:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 951:../../Source/Kernel/rme_kernel.c **** {
 793              		.loc 1 951 1
 794              		.cfi_startproc
 795              		@ args = 0, pretend = 0, frame = 16
 796              		@ frame_needed = 1, uses_anonymous_args = 0
 797              		@ link register save eliminated.
 798 0000 04B02DE5 		str	fp, [sp, #-4]!
 799              		.cfi_def_cfa_offset 4
 800              		.cfi_offset 11, -4
 801 0004 00B08DE2 		add	fp, sp, #0
 802              		.cfi_def_cfa_register 11
 803 0008 14D04DE2 		sub	sp, sp, #20
 804 000c 08000BE5 		str	r0, [fp, #-8]
 805 0010 0C100BE5 		str	r1, [fp, #-12]
 806 0014 10200BE5 		str	r2, [fp, #-16]
 952:../../Source/Kernel/rme_kernel.c ****     Next->Prev=New;
 807              		.loc 1 952 15
 808 0018 10301BE5 		ldr	r3, [fp, #-16]
 809 001c 08201BE5 		ldr	r2, [fp, #-8]
 810 0020 042083E5 		str	r2, [r3, #4]
 953:../../Source/Kernel/rme_kernel.c ****     New->Next=Next;
 811              		.loc 1 953 14
 812 0024 08301BE5 		ldr	r3, [fp, #-8]
 813 0028 10201BE5 		ldr	r2, [fp, #-16]
 814 002c 002083E5 		str	r2, [r3]
 954:../../Source/Kernel/rme_kernel.c ****     New->Prev=Prev;
 815              		.loc 1 954 14
 816 0030 08301BE5 		ldr	r3, [fp, #-8]
 817 0034 0C201BE5 		ldr	r2, [fp, #-12]
 818 0038 042083E5 		str	r2, [r3, #4]
 955:../../Source/Kernel/rme_kernel.c ****     Prev->Next=New;
 819              		.loc 1 955 15
 820 003c 0C301BE5 		ldr	r3, [fp, #-12]
 821 0040 08201BE5 		ldr	r2, [fp, #-8]
 822 0044 002083E5 		str	r2, [r3]
 956:../../Source/Kernel/rme_kernel.c **** }
 823              		.loc 1 956 1
 824 0048 00F020E3 		nop
 825 004c 00D08BE2 		add	sp, fp, #0
 826              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 32


 827              		@ sp needed
 828 0050 04B09DE4 		ldr	fp, [sp], #4
 829              		.cfi_restore 11
 830              		.cfi_def_cfa_offset 0
 831 0054 1EFF2FE1 		bx	lr
 832              		.cfi_endproc
 833              	.LFE11:
 835              		.section	.text._RME_Clear,"ax",%progbits
 836              		.align	2
 837              		.global	_RME_Clear
 838              		.syntax unified
 839              		.arm
 841              	_RME_Clear:
 842              	.LFB12:
 957:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Ins ************************************************/
 958:../../Source/Kernel/rme_kernel.c **** 
 959:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Clear ********************************************************
 960:../../Source/Kernel/rme_kernel.c **** Description : Memset a memory area to zero. This is not fast due to byte operations;
 961:../../Source/Kernel/rme_kernel.c ****               this is not meant for large memory. However, it is indeed secure.
 962:../../Source/Kernel/rme_kernel.c **** Input       : void* Addr - The address to clear.
 963:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
 964:../../Source/Kernel/rme_kernel.c **** Output      : None.
 965:../../Source/Kernel/rme_kernel.c **** Return      : None.
 966:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 967:../../Source/Kernel/rme_kernel.c **** void _RME_Clear(void* Addr,
 968:../../Source/Kernel/rme_kernel.c ****                 rme_ptr_t Size)
 969:../../Source/Kernel/rme_kernel.c **** {
 843              		.loc 1 969 1
 844              		.cfi_startproc
 845              		@ args = 0, pretend = 0, frame = 16
 846              		@ frame_needed = 1, uses_anonymous_args = 0
 847              		@ link register save eliminated.
 848 0000 04B02DE5 		str	fp, [sp, #-4]!
 849              		.cfi_def_cfa_offset 4
 850              		.cfi_offset 11, -4
 851 0004 00B08DE2 		add	fp, sp, #0
 852              		.cfi_def_cfa_register 11
 853 0008 14D04DE2 		sub	sp, sp, #20
 854 000c 10000BE5 		str	r0, [fp, #-16]
 855 0010 14100BE5 		str	r1, [fp, #-20]
 970:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 971:../../Source/Kernel/rme_kernel.c **** 
 972:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Size;Count++)
 856              		.loc 1 972 14
 857 0014 0030A0E3 		mov	r3, #0
 858 0018 08300BE5 		str	r3, [fp, #-8]
 859              		.loc 1 972 5
 860 001c 070000EA 		b	.L52
 861              	.L53:
 973:../../Source/Kernel/rme_kernel.c ****     {
 974:../../Source/Kernel/rme_kernel.c ****         ((rme_u8_t*)Addr)[Count]=0U;
 862              		.loc 1 974 26
 863 0020 10201BE5 		ldr	r2, [fp, #-16]
 864 0024 08301BE5 		ldr	r3, [fp, #-8]
 865 0028 033082E0 		add	r3, r2, r3
 866              		.loc 1 974 33
 867 002c 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 33


 868 0030 0020C3E5 		strb	r2, [r3]
 972:../../Source/Kernel/rme_kernel.c ****     {
 869              		.loc 1 972 34 discriminator 3
 870 0034 08301BE5 		ldr	r3, [fp, #-8]
 871 0038 013083E2 		add	r3, r3, #1
 872 003c 08300BE5 		str	r3, [fp, #-8]
 873              	.L52:
 972:../../Source/Kernel/rme_kernel.c ****     {
 874              		.loc 1 972 23 discriminator 1
 875 0040 08201BE5 		ldr	r2, [fp, #-8]
 876 0044 14301BE5 		ldr	r3, [fp, #-20]
 877 0048 030052E1 		cmp	r2, r3
 878 004c F3FFFF3A 		bcc	.L53
 975:../../Source/Kernel/rme_kernel.c ****     }
 976:../../Source/Kernel/rme_kernel.c **** }
 879              		.loc 1 976 1
 880 0050 00F020E3 		nop
 881 0054 00F020E3 		nop
 882 0058 00D08BE2 		add	sp, fp, #0
 883              		.cfi_def_cfa_register 13
 884              		@ sp needed
 885 005c 04B09DE4 		ldr	fp, [sp], #4
 886              		.cfi_restore 11
 887              		.cfi_def_cfa_offset 0
 888 0060 1EFF2FE1 		bx	lr
 889              		.cfi_endproc
 890              	.LFE12:
 892              		.section	.text._RME_Memcmp,"ax",%progbits
 893              		.align	2
 894              		.global	_RME_Memcmp
 895              		.syntax unified
 896              		.arm
 898              	_RME_Memcmp:
 899              	.LFB13:
 977:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Clear ***************************************************/
 978:../../Source/Kernel/rme_kernel.c **** 
 979:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcmp *******************************************************
 980:../../Source/Kernel/rme_kernel.c **** Description : Compare two memory segments to see if they are equal. This is not
 981:../../Source/Kernel/rme_kernel.c ****               fast due to byte operations; this is not meant for large memory.
 982:../../Source/Kernel/rme_kernel.c **** Input       : const void* Ptr1 - The first memory region.
 983:../../Source/Kernel/rme_kernel.c ****               const void* Ptr2 - The second memory region.
 984:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
 985:../../Source/Kernel/rme_kernel.c **** Output      : None.
 986:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If Ptr1>Ptr2, then return a positive value; else a negative
 987:../../Source/Kernel/rme_kernel.c ****                           value. If Ptr1==Ptr2, then return 0;
 988:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 989:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Memcmp(const void* Ptr1,
 990:../../Source/Kernel/rme_kernel.c ****                       const void* Ptr2,
 991:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Num)
 992:../../Source/Kernel/rme_kernel.c **** {
 900              		.loc 1 992 1
 901              		.cfi_startproc
 902              		@ args = 0, pretend = 0, frame = 32
 903              		@ frame_needed = 1, uses_anonymous_args = 0
 904              		@ link register save eliminated.
 905 0000 04B02DE5 		str	fp, [sp, #-4]!
 906              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 34


 907              		.cfi_offset 11, -4
 908 0004 00B08DE2 		add	fp, sp, #0
 909              		.cfi_def_cfa_register 11
 910 0008 24D04DE2 		sub	sp, sp, #36
 911 000c 18000BE5 		str	r0, [fp, #-24]
 912 0010 1C100BE5 		str	r1, [fp, #-28]
 913 0014 20200BE5 		str	r2, [fp, #-32]
 993:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Dst;
 994:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Src;
 995:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 996:../../Source/Kernel/rme_kernel.c **** 
 997:../../Source/Kernel/rme_kernel.c ****     Dst=(const rme_s8_t*)Ptr1;
 914              		.loc 1 997 8
 915 0018 18301BE5 		ldr	r3, [fp, #-24]
 916 001c 0C300BE5 		str	r3, [fp, #-12]
 998:../../Source/Kernel/rme_kernel.c ****     Src=(const rme_s8_t*)Ptr2;
 917              		.loc 1 998 8
 918 0020 1C301BE5 		ldr	r3, [fp, #-28]
 919 0024 10300BE5 		str	r3, [fp, #-16]
 999:../../Source/Kernel/rme_kernel.c **** 
1000:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 920              		.loc 1 1000 14
 921 0028 0030A0E3 		mov	r3, #0
 922 002c 08300BE5 		str	r3, [fp, #-8]
 923              		.loc 1 1000 5
 924 0030 170000EA 		b	.L55
 925              	.L58:
1001:../../Source/Kernel/rme_kernel.c ****     {
1002:../../Source/Kernel/rme_kernel.c ****         if(Dst[Count]!=Src[Count])
 926              		.loc 1 1002 15
 927 0034 0C201BE5 		ldr	r2, [fp, #-12]
 928 0038 08301BE5 		ldr	r3, [fp, #-8]
 929 003c 033082E0 		add	r3, r2, r3
 930 0040 D020D3E1 		ldrsb	r2, [r3]
 931              		.loc 1 1002 27
 932 0044 10101BE5 		ldr	r1, [fp, #-16]
 933 0048 08301BE5 		ldr	r3, [fp, #-8]
 934 004c 033081E0 		add	r3, r1, r3
 935 0050 D030D3E1 		ldrsb	r3, [r3]
 936              		.loc 1 1002 11
 937 0054 030052E1 		cmp	r2, r3
 938 0058 0A00000A 		beq	.L56
1003:../../Source/Kernel/rme_kernel.c ****         {
1004:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1005:../../Source/Kernel/rme_kernel.c ****             
1006:../../Source/Kernel/rme_kernel.c ****             return Dst[Count]-Src[Count];
 939              		.loc 1 1006 23
 940 005c 0C201BE5 		ldr	r2, [fp, #-12]
 941 0060 08301BE5 		ldr	r3, [fp, #-8]
 942 0064 033082E0 		add	r3, r2, r3
 943 0068 D030D3E1 		ldrsb	r3, [r3]
 944 006c 0310A0E1 		mov	r1, r3
 945              		.loc 1 1006 34
 946 0070 10201BE5 		ldr	r2, [fp, #-16]
 947 0074 08301BE5 		ldr	r3, [fp, #-8]
 948 0078 033082E0 		add	r3, r2, r3
 949 007c D030D3E1 		ldrsb	r3, [r3]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 35


 950              		.loc 1 1006 30
 951 0080 033041E0 		sub	r3, r1, r3
 952 0084 070000EA 		b	.L57
 953              	.L56:
1000:../../Source/Kernel/rme_kernel.c ****     {
 954              		.loc 1 1000 33 discriminator 2
 955 0088 08301BE5 		ldr	r3, [fp, #-8]
 956 008c 013083E2 		add	r3, r3, #1
 957 0090 08300BE5 		str	r3, [fp, #-8]
 958              	.L55:
1000:../../Source/Kernel/rme_kernel.c ****     {
 959              		.loc 1 1000 23 discriminator 1
 960 0094 08201BE5 		ldr	r2, [fp, #-8]
 961 0098 20301BE5 		ldr	r3, [fp, #-32]
 962 009c 030052E1 		cmp	r2, r3
 963 00a0 E3FFFF3A 		bcc	.L58
1007:../../Source/Kernel/rme_kernel.c ****         }
1008:../../Source/Kernel/rme_kernel.c ****         else
1009:../../Source/Kernel/rme_kernel.c ****         {
1010:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1011:../../Source/Kernel/rme_kernel.c ****             /* No action required */
1012:../../Source/Kernel/rme_kernel.c ****         }
1013:../../Source/Kernel/rme_kernel.c ****     }
1014:../../Source/Kernel/rme_kernel.c **** 
1015:../../Source/Kernel/rme_kernel.c ****     return 0;
 964              		.loc 1 1015 12
 965 00a4 0030A0E3 		mov	r3, #0
 966              	.L57:
1016:../../Source/Kernel/rme_kernel.c **** }
 967              		.loc 1 1016 1
 968 00a8 0300A0E1 		mov	r0, r3
 969 00ac 00D08BE2 		add	sp, fp, #0
 970              		.cfi_def_cfa_register 13
 971              		@ sp needed
 972 00b0 04B09DE4 		ldr	fp, [sp], #4
 973              		.cfi_restore 11
 974              		.cfi_def_cfa_offset 0
 975 00b4 1EFF2FE1 		bx	lr
 976              		.cfi_endproc
 977              	.LFE13:
 979              		.section	.text._RME_Memcpy,"ax",%progbits
 980              		.align	2
 981              		.global	_RME_Memcpy
 982              		.syntax unified
 983              		.arm
 985              	_RME_Memcpy:
 986              	.LFB14:
1017:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcmp **************************************************/
1018:../../Source/Kernel/rme_kernel.c **** 
1019:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcpy *******************************************************
1020:../../Source/Kernel/rme_kernel.c **** Description : Copy one segment of memory to another segment. This is not fast
1021:../../Source/Kernel/rme_kernel.c ****               due to byte operations; this is not meant for large memory.
1022:../../Source/Kernel/rme_kernel.c **** Input       : volatile void* Dst - The first memory region.
1023:../../Source/Kernel/rme_kernel.c ****               volatile void* Src - The second memory region.
1024:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
1025:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
1026:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 36


1027:../../Source/Kernel/rme_kernel.c **** Return      : None.
1028:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1029:../../Source/Kernel/rme_kernel.c **** void _RME_Memcpy(void* Dst,
1030:../../Source/Kernel/rme_kernel.c ****                  void* Src,
1031:../../Source/Kernel/rme_kernel.c ****                  rme_ptr_t Num)
1032:../../Source/Kernel/rme_kernel.c **** {
 987              		.loc 1 1032 1
 988              		.cfi_startproc
 989              		@ args = 0, pretend = 0, frame = 24
 990              		@ frame_needed = 1, uses_anonymous_args = 0
 991              		@ link register save eliminated.
 992 0000 04B02DE5 		str	fp, [sp, #-4]!
 993              		.cfi_def_cfa_offset 4
 994              		.cfi_offset 11, -4
 995 0004 00B08DE2 		add	fp, sp, #0
 996              		.cfi_def_cfa_register 11
 997 0008 1CD04DE2 		sub	sp, sp, #28
 998 000c 10000BE5 		str	r0, [fp, #-16]
 999 0010 14100BE5 		str	r1, [fp, #-20]
 1000 0014 18200BE5 		str	r2, [fp, #-24]
1033:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1034:../../Source/Kernel/rme_kernel.c **** 
1035:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 1001              		.loc 1 1035 14
 1002 0018 0030A0E3 		mov	r3, #0
 1003 001c 08300BE5 		str	r3, [fp, #-8]
 1004              		.loc 1 1035 5
 1005 0020 0B0000EA 		b	.L60
 1006              	.L61:
1036:../../Source/Kernel/rme_kernel.c ****     {
1037:../../Source/Kernel/rme_kernel.c ****         ((volatile rme_u8_t*)Dst)[Count]=((volatile rme_u8_t*)Src)[Count];
 1007              		.loc 1 1037 67
 1008 0024 14201BE5 		ldr	r2, [fp, #-20]
 1009 0028 08301BE5 		ldr	r3, [fp, #-8]
 1010 002c 032082E0 		add	r2, r2, r3
 1011              		.loc 1 1037 34
 1012 0030 10101BE5 		ldr	r1, [fp, #-16]
 1013 0034 08301BE5 		ldr	r3, [fp, #-8]
 1014 0038 033081E0 		add	r3, r1, r3
 1015              		.loc 1 1037 67
 1016 003c 0020D2E5 		ldrb	r2, [r2]
 1017 0040 7220EFE6 		uxtb	r2, r2
 1018              		.loc 1 1037 41
 1019 0044 0020C3E5 		strb	r2, [r3]
1035:../../Source/Kernel/rme_kernel.c ****     {
 1020              		.loc 1 1035 33 discriminator 3
 1021 0048 08301BE5 		ldr	r3, [fp, #-8]
 1022 004c 013083E2 		add	r3, r3, #1
 1023 0050 08300BE5 		str	r3, [fp, #-8]
 1024              	.L60:
1035:../../Source/Kernel/rme_kernel.c ****     {
 1025              		.loc 1 1035 23 discriminator 1
 1026 0054 08201BE5 		ldr	r2, [fp, #-8]
 1027 0058 18301BE5 		ldr	r3, [fp, #-24]
 1028 005c 030052E1 		cmp	r2, r3
 1029 0060 EFFFFF3A 		bcc	.L61
1038:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 37


1039:../../Source/Kernel/rme_kernel.c **** }
 1030              		.loc 1 1039 1
 1031 0064 00F020E3 		nop
 1032 0068 00F020E3 		nop
 1033 006c 00D08BE2 		add	sp, fp, #0
 1034              		.cfi_def_cfa_register 13
 1035              		@ sp needed
 1036 0070 04B09DE4 		ldr	fp, [sp], #4
 1037              		.cfi_restore 11
 1038              		.cfi_def_cfa_offset 0
 1039 0074 1EFF2FE1 		bx	lr
 1040              		.cfi_endproc
 1041              	.LFE14:
 1043              		.section	.text._RME_Diff,"ax",%progbits
 1044              		.align	2
 1045              		.global	_RME_Diff
 1046              		.syntax unified
 1047              		.arm
 1049              	_RME_Diff:
 1050              	.LFB15:
1040:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcpy **************************************************/
1041:../../Source/Kernel/rme_kernel.c **** 
1042:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Diff *********************************************************
1043:../../Source/Kernel/rme_kernel.c **** Description : Compute the absolute difference between two numbers, when integer
1044:../../Source/Kernel/rme_kernel.c ****               wraparound is considered.
1045:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Num1 - The first number.
1046:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num2 - The second number.
1047:../../Source/Kernel/rme_kernel.c **** Output      : None.
1048:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The distance.
1049:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1050:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Diff(rme_ptr_t Num1,
1051:../../Source/Kernel/rme_kernel.c ****                     rme_ptr_t Num2)
1052:../../Source/Kernel/rme_kernel.c **** {
 1051              		.loc 1 1052 1
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 16
 1054              		@ frame_needed = 1, uses_anonymous_args = 0
 1055              		@ link register save eliminated.
 1056 0000 04B02DE5 		str	fp, [sp, #-4]!
 1057              		.cfi_def_cfa_offset 4
 1058              		.cfi_offset 11, -4
 1059 0004 00B08DE2 		add	fp, sp, #0
 1060              		.cfi_def_cfa_register 11
 1061 0008 14D04DE2 		sub	sp, sp, #20
 1062 000c 10000BE5 		str	r0, [fp, #-16]
 1063 0010 14100BE5 		str	r1, [fp, #-20]
1053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff1;
1054:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff2;
1055:../../Source/Kernel/rme_kernel.c ****     
1056:../../Source/Kernel/rme_kernel.c ****     Diff1=Num1-Num2;
 1064              		.loc 1 1056 10
 1065 0014 10201BE5 		ldr	r2, [fp, #-16]
 1066 0018 14301BE5 		ldr	r3, [fp, #-20]
 1067 001c 033042E0 		sub	r3, r2, r3
 1068 0020 08300BE5 		str	r3, [fp, #-8]
1057:../../Source/Kernel/rme_kernel.c ****     Diff2=Num2-Num1;
 1069              		.loc 1 1057 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 38


 1070 0024 14201BE5 		ldr	r2, [fp, #-20]
 1071 0028 10301BE5 		ldr	r3, [fp, #-16]
 1072 002c 033042E0 		sub	r3, r2, r3
 1073 0030 0C300BE5 		str	r3, [fp, #-12]
1058:../../Source/Kernel/rme_kernel.c ****     
1059:../../Source/Kernel/rme_kernel.c ****     if(Diff1>Diff2)
 1074              		.loc 1 1059 7
 1075 0034 08201BE5 		ldr	r2, [fp, #-8]
 1076 0038 0C301BE5 		ldr	r3, [fp, #-12]
 1077 003c 030052E1 		cmp	r2, r3
 1078 0040 0100009A 		bls	.L63
1060:../../Source/Kernel/rme_kernel.c ****     {
1061:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1062:../../Source/Kernel/rme_kernel.c ****         
1063:../../Source/Kernel/rme_kernel.c ****         return Diff2;
 1079              		.loc 1 1063 16
 1080 0044 0C301BE5 		ldr	r3, [fp, #-12]
 1081 0048 000000EA 		b	.L64
 1082              	.L63:
1064:../../Source/Kernel/rme_kernel.c ****     }
1065:../../Source/Kernel/rme_kernel.c ****     else
1066:../../Source/Kernel/rme_kernel.c ****     {
1067:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1068:../../Source/Kernel/rme_kernel.c ****         
1069:../../Source/Kernel/rme_kernel.c ****         return Diff1;
 1083              		.loc 1 1069 16
 1084 004c 08301BE5 		ldr	r3, [fp, #-8]
 1085              	.L64:
1070:../../Source/Kernel/rme_kernel.c ****     }
1071:../../Source/Kernel/rme_kernel.c **** }
 1086              		.loc 1 1071 1
 1087 0050 0300A0E1 		mov	r0, r3
 1088 0054 00D08BE2 		add	sp, fp, #0
 1089              		.cfi_def_cfa_register 13
 1090              		@ sp needed
 1091 0058 04B09DE4 		ldr	fp, [sp], #4
 1092              		.cfi_restore 11
 1093              		.cfi_def_cfa_offset 0
 1094 005c 1EFF2FE1 		bx	lr
 1095              		.cfi_endproc
 1096              	.LFE15:
 1098              		.section	.text.RME_Kmain,"ax",%progbits
 1099              		.align	2
 1100              		.global	RME_Kmain
 1101              		.syntax unified
 1102              		.arm
 1104              	RME_Kmain:
 1105              	.LFB16:
1072:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Diff ****************************************************/
1073:../../Source/Kernel/rme_kernel.c **** 
1074:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Kmain *********************************************************
1075:../../Source/Kernel/rme_kernel.c **** Description : The entry of the operating system.
1076:../../Source/Kernel/rme_kernel.c **** Input       : None.
1077:../../Source/Kernel/rme_kernel.c **** Output      : None.
1078:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - This function never returns.
1079:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1080:../../Source/Kernel/rme_kernel.c **** rme_ret_t RME_Kmain(void)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 39


1081:../../Source/Kernel/rme_kernel.c **** {
 1106              		.loc 1 1081 1
 1107              		.cfi_startproc
 1108              		@ args = 0, pretend = 0, frame = 0
 1109              		@ frame_needed = 1, uses_anonymous_args = 0
 1110 0000 00482DE9 		push	{fp, lr}
 1111              		.cfi_def_cfa_offset 8
 1112              		.cfi_offset 11, -8
 1113              		.cfi_offset 14, -4
 1114 0004 04B08DE2 		add	fp, sp, #4
 1115              		.cfi_def_cfa 11, 4
1082:../../Source/Kernel/rme_kernel.c ****     /* Disable all interrupts first */
1083:../../Source/Kernel/rme_kernel.c ****     __RME_Int_Disable();
 1116              		.loc 1 1083 5
 1117 0008 FEFFFFEB 		bl	__RME_Int_Disable
1084:../../Source/Kernel/rme_kernel.c ****     /* Some low-level kernel assertions */
1085:../../Source/Kernel/rme_kernel.c ****     _RME_Lowlvl_Check();
 1118              		.loc 1 1085 5
 1119 000c FEFFFFEB 		bl	_RME_Lowlvl_Check
1086:../../Source/Kernel/rme_kernel.c ****     /* Hardware low-level init */
1087:../../Source/Kernel/rme_kernel.c ****     __RME_Lowlvl_Init();
 1120              		.loc 1 1087 5
 1121 0010 FEFFFFEB 		bl	__RME_Lowlvl_Init
1088:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel page tables or memory mappings */
1089:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Kom_Init();
 1122              		.loc 1 1089 5
 1123 0014 FEFFFFEB 		bl	__RME_Pgt_Kom_Init
1090:../../Source/Kernel/rme_kernel.c ****     
1091:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel object allocation table - default init */
1092:../../Source/Kernel/rme_kernel.c ****     _RME_Kot_Init(RME_KOT_WORD_NUM);
 1124              		.loc 1 1092 5
 1125 0018 0209A0E3 		mov	r0, #32768
 1126 001c FEFFFFEB 		bl	_RME_Kot_Init
1093:../../Source/Kernel/rme_kernel.c ****     
1094:../../Source/Kernel/rme_kernel.c ****     /* Boot into the first process */
1095:../../Source/Kernel/rme_kernel.c ****     __RME_Boot();
 1127              		.loc 1 1095 5
 1128 0020 FEFFFFEB 		bl	__RME_Boot
1096:../../Source/Kernel/rme_kernel.c ****     
1097:../../Source/Kernel/rme_kernel.c ****     /* Should never reach here */
1098:../../Source/Kernel/rme_kernel.c ****     return 0;
 1129              		.loc 1 1098 12
 1130 0024 0030A0E3 		mov	r3, #0
1099:../../Source/Kernel/rme_kernel.c **** }
 1131              		.loc 1 1099 1
 1132 0028 0300A0E1 		mov	r0, r3
 1133 002c 0088BDE8 		pop	{fp, pc}
 1134              		.cfi_endproc
 1135              	.LFE16:
 1137              		.section	.text._RME_Lowlvl_Check,"ax",%progbits
 1138              		.align	2
 1139              		.syntax unified
 1140              		.arm
 1142              	_RME_Lowlvl_Check:
 1143              	.LFB17:
1100:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Kmain ****************************************************/
1101:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 40


1102:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Lowlvl_Check *************************************************
1103:../../Source/Kernel/rme_kernel.c **** Description : Do some low-level checking for the operating system.
1104:../../Source/Kernel/rme_kernel.c **** Input       : None.
1105:../../Source/Kernel/rme_kernel.c **** Output      : None.
1106:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
1107:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1108:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Lowlvl_Check(void)
1109:../../Source/Kernel/rme_kernel.c **** {
 1144              		.loc 1 1109 1
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 1, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 1149 0000 04B02DE5 		str	fp, [sp, #-4]!
 1150              		.cfi_def_cfa_offset 4
 1151              		.cfi_offset 11, -4
 1152 0004 00B08DE2 		add	fp, sp, #0
 1153              		.cfi_def_cfa_register 11
1110:../../Source/Kernel/rme_kernel.c ****     /* Make sure the machine is at least 32-bit */
1111:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_ORDER>=5U);
1112:../../Source/Kernel/rme_kernel.c ****     /* Check if the word order setting is correct */
1113:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_BIT==RME_POW2(RME_WORD_ORDER));
1114:../../Source/Kernel/rme_kernel.c ****     /* Check if the struct sizes are correct */
1115:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Struct)==RME_CAP_SIZE);
1116:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Cpt)==RME_CAP_SIZE);
1117:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1118:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Pgt)==RME_CAP_SIZE);
1119:../../Source/Kernel/rme_kernel.c **** #endif
1120:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Prc)==RME_CAP_SIZE);
1121:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Thd)==RME_CAP_SIZE);
1122:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Sig)==RME_CAP_SIZE);
1123:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Inv)==RME_CAP_SIZE);
1124:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kfn)==RME_CAP_SIZE);
1125:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kom)==RME_CAP_SIZE);
1126:../../Source/Kernel/rme_kernel.c ****     /* Check if the other configurations are correct */
1127:../../Source/Kernel/rme_kernel.c ****     /* Kernel memory allocation minimal size aligned to word boundary */
1128:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_KOM_SLOT_ORDER>=RME_WORD_ORDER-3U);
1129:../../Source/Kernel/rme_kernel.c ****     /* Make sure the number of priorities do not exceed half-word boundary */
1130:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_PREEMPT_PRIO_NUM<=RME_POW2(RME_WORD_BIT>>1));
1131:../../Source/Kernel/rme_kernel.c ****     
1132:../../Source/Kernel/rme_kernel.c ****     return 0;
 1154              		.loc 1 1132 12
 1155 0008 0030A0E3 		mov	r3, #0
1133:../../Source/Kernel/rme_kernel.c **** }
 1156              		.loc 1 1133 1
 1157 000c 0300A0E1 		mov	r0, r3
 1158 0010 00D08BE2 		add	sp, fp, #0
 1159              		.cfi_def_cfa_register 13
 1160              		@ sp needed
 1161 0014 04B09DE4 		ldr	fp, [sp], #4
 1162              		.cfi_restore 11
 1163              		.cfi_def_cfa_offset 0
 1164 0018 1EFF2FE1 		bx	lr
 1165              		.cfi_endproc
 1166              	.LFE17:
 1168              		.section	.text._RME_Svc_Handler,"ax",%progbits
 1169              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 41


 1170              		.global	_RME_Svc_Handler
 1171              		.syntax unified
 1172              		.arm
 1174              	_RME_Svc_Handler:
 1175              	.LFB18:
1134:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Lowlvl_Check ********************************************/
1135:../../Source/Kernel/rme_kernel.c **** 
1136:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Svc_Handler **************************************************
1137:../../Source/Kernel/rme_kernel.c **** Description : The system call handler of the operating system. The register set 
1138:../../Source/Kernel/rme_kernel.c ****               of the current thread shall be passed in as a parameter.
1139:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1140:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1141:../../Source/Kernel/rme_kernel.c **** Return      : None.
1142:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1143:../../Source/Kernel/rme_kernel.c **** void _RME_Svc_Handler(struct RME_Reg_Struct* Reg)
1144:../../Source/Kernel/rme_kernel.c **** {
 1176              		.loc 1 1144 1
 1177              		.cfi_startproc
 1178              		@ args = 0, pretend = 0, frame = 48
 1179              		@ frame_needed = 1, uses_anonymous_args = 0
 1180 0000 30482DE9 		push	{r4, r5, fp, lr}
 1181              		.cfi_def_cfa_offset 16
 1182              		.cfi_offset 4, -16
 1183              		.cfi_offset 5, -12
 1184              		.cfi_offset 11, -8
 1185              		.cfi_offset 14, -4
 1186 0004 0CB08DE2 		add	fp, sp, #12
 1187              		.cfi_def_cfa 11, 4
 1188 0008 48D04DE2 		sub	sp, sp, #72
 1189 000c 38000BE5 		str	r0, [fp, #-56]
1145:../../Source/Kernel/rme_kernel.c ****     /* What's the system call number and major capability ID? */
1146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc;
1147:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Cid;
1148:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Param[3];
1149:../../Source/Kernel/rme_kernel.c ****     rme_ret_t Retval;
1150:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc_Num;
1151:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1152:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
1153:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1154:../../Source/Kernel/rme_kernel.c **** 
1155:../../Source/Kernel/rme_kernel.c ****     /* Get the system call parameters from the system call */
1156:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Param_Get(Reg, &Svc, &Cid, Param);
 1190              		.loc 1 1156 5
 1191 0010 34304BE2 		sub	r3, fp, #52
 1192 0014 28204BE2 		sub	r2, fp, #40
 1193 0018 24104BE2 		sub	r1, fp, #36
 1194 001c 38001BE5 		ldr	r0, [fp, #-56]
 1195 0020 FEFFFFEB 		bl	__RME_Svc_Param_Get
1157:../../Source/Kernel/rme_kernel.c ****     /* System call number takes [5:0] bits */
1158:../../Source/Kernel/rme_kernel.c ****     Svc_Num=Svc&RME_MASK_END(5U);
 1196              		.loc 1 1158 16
 1197 0024 24301BE5 		ldr	r3, [fp, #-36]
 1198              		.loc 1 1158 12
 1199 0028 3F3003E2 		and	r3, r3, #63
 1200 002c 18300BE5 		str	r3, [fp, #-24]
1159:../../Source/Kernel/rme_kernel.c ****     
1160:../../Source/Kernel/rme_kernel.c ****     /* Ultra-fast path - synchronous invocation returning */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 42


1161:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_RET)
 1201              		.loc 1 1161 7
 1202 0030 18301BE5 		ldr	r3, [fp, #-24]
 1203 0034 000053E3 		cmp	r3, #0
 1204 0038 0C00001A 		bne	.L70
1162:../../Source/Kernel/rme_kernel.c ****     {
1163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1164:../../Source/Kernel/rme_kernel.c ****         
1165:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Ret(Reg,                                            /* volatile struct RME_
 1205              		.loc 1 1165 16
 1206 003c 34301BE5 		ldr	r3, [fp, #-52]
 1207 0040 0020A0E3 		mov	r2, #0
 1208 0044 0310A0E1 		mov	r1, r3
 1209 0048 38001BE5 		ldr	r0, [fp, #-56]
 1210 004c FEFFFFEB 		bl	_RME_Inv_Ret
 1211 0050 10000BE5 		str	r0, [fp, #-16]
1166:../../Source/Kernel/rme_kernel.c ****                             Param[0],                                       /* rme_ptr_t Retval */
1167:../../Source/Kernel/rme_kernel.c ****                             0U);                                            /* rme_ptr_t Is_Exc */
1168:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg, Retval);
 1212              		.loc 1 1168 9
 1213 0054 10301BE5 		ldr	r3, [fp, #-16]
 1214 0058 000053E3 		cmp	r3, #0
 1215 005c 110200AA 		bge	.L69
 1216              		.loc 1 1168 9 is_stmt 0 discriminator 1
 1217 0060 10101BE5 		ldr	r1, [fp, #-16]
 1218 0064 38001BE5 		ldr	r0, [fp, #-56]
 1219 0068 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1220              		.loc 1 1168 9
 1221 006c 0D0200EA 		b	.L69
 1222              	.L70:
1169:../../Source/Kernel/rme_kernel.c ****     }
1170:../../Source/Kernel/rme_kernel.c ****     else
1171:../../Source/Kernel/rme_kernel.c ****     {
1172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1173:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1174:../../Source/Kernel/rme_kernel.c ****     }
1175:../../Source/Kernel/rme_kernel.c ****     
1176:../../Source/Kernel/rme_kernel.c ****     /* Get our current capability table. No need to check whether it is frozen
1177:../../Source/Kernel/rme_kernel.c ****      * because it can't be deleted anyway */
1178:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 1223              		.loc 1 1178 12 is_stmt 1
 1224 0070 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 1225 0074 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 1226 0078 043093E5 		ldr	r3, [r3, #4]
 1227 007c 1C300BE5 		str	r3, [fp, #-28]
1179:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd_Cur);
 1228              		.loc 1 1179 13
 1229 0080 1C301BE5 		ldr	r3, [fp, #-28]
 1230 0084 4C2093E5 		ldr	r2, [r3, #76]
 1231 0088 1C301BE5 		ldr	r3, [fp, #-28]
 1232 008c 4C3083E2 		add	r3, r3, #76
 1233 0090 030052E1 		cmp	r2, r3
 1234 0094 0200000A 		beq	.L73
 1235              		.loc 1 1179 13 is_stmt 0 discriminator 1
 1236 0098 1C301BE5 		ldr	r3, [fp, #-28]
 1237 009c 4C3093E5 		ldr	r3, [r3, #76]
 1238 00a0 000000EA 		b	.L74
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 43


 1239              	.L73:
 1240              		.loc 1 1179 13 discriminator 2
 1241 00a4 0030A0E3 		mov	r3, #0
 1242              	.L74:
 1243              		.loc 1 1179 12 is_stmt 1 discriminator 4
 1244 00a8 20300BE5 		str	r3, [fp, #-32]
1180:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 1245              		.loc 1 1180 7
 1246 00ac 20301BE5 		ldr	r3, [fp, #-32]
 1247 00b0 000053E3 		cmp	r3, #0
 1248 00b4 0400001A 		bne	.L75
1181:../../Source/Kernel/rme_kernel.c ****     {
1182:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1183:../../Source/Kernel/rme_kernel.c ****         
1184:../../Source/Kernel/rme_kernel.c ****         Cpt=Thd_Cur->Sched.Prc->Cpt;
 1249              		.loc 1 1184 27
 1250 00b8 1C301BE5 		ldr	r3, [fp, #-28]
 1251 00bc 2C3093E5 		ldr	r3, [r3, #44]
 1252              		.loc 1 1184 12
 1253 00c0 143093E5 		ldr	r3, [r3, #20]
 1254 00c4 14300BE5 		str	r3, [fp, #-20]
 1255 00c8 030000EA 		b	.L76
 1256              	.L75:
1185:../../Source/Kernel/rme_kernel.c ****     }
1186:../../Source/Kernel/rme_kernel.c ****     else
1187:../../Source/Kernel/rme_kernel.c ****     {
1188:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1189:../../Source/Kernel/rme_kernel.c ****         
1190:../../Source/Kernel/rme_kernel.c ****         Cpt=Inv_Top->Prc->Cpt;
 1257              		.loc 1 1190 20
 1258 00cc 20301BE5 		ldr	r3, [fp, #-32]
 1259 00d0 083093E5 		ldr	r3, [r3, #8]
 1260              		.loc 1 1190 12
 1261 00d4 143093E5 		ldr	r3, [r3, #20]
 1262 00d8 14300BE5 		str	r3, [fp, #-20]
 1263              	.L76:
1191:../../Source/Kernel/rme_kernel.c ****     }
1192:../../Source/Kernel/rme_kernel.c **** 
1193:../../Source/Kernel/rme_kernel.c ****     /* Fast path - synchronous invocation activation */
1194:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_ACT)
 1264              		.loc 1 1194 7
 1265 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1266 00e0 010053E3 		cmp	r3, #1
 1267 00e4 0D00001A 		bne	.L77
1195:../../Source/Kernel/rme_kernel.c ****     {
1196:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1197:../../Source/Kernel/rme_kernel.c ****         
1198:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Act(Cpt,
1199:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
1200:../../Source/Kernel/rme_kernel.c ****                             (rme_cid_t)Param[0],                            /* rme_cid_t Cap_Inv */
 1268              		.loc 1 1200 45
 1269 00e8 34301BE5 		ldr	r3, [fp, #-52]
1198:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
 1270              		.loc 1 1198 16
 1271 00ec 0320A0E1 		mov	r2, r3
 1272 00f0 30301BE5 		ldr	r3, [fp, #-48]
 1273 00f4 38101BE5 		ldr	r1, [fp, #-56]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 44


 1274 00f8 14001BE5 		ldr	r0, [fp, #-20]
 1275 00fc FEFFFFEB 		bl	_RME_Inv_Act
 1276 0100 10000BE5 		str	r0, [fp, #-16]
1201:../../Source/Kernel/rme_kernel.c ****                             Param[1]);                                      /* rme_ptr_t Param */
1202:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg,Retval);
 1277              		.loc 1 1202 9
 1278 0104 10301BE5 		ldr	r3, [fp, #-16]
 1279 0108 000053E3 		cmp	r3, #0
 1280 010c E50100AA 		bge	.L69
 1281              		.loc 1 1202 9 is_stmt 0 discriminator 1
 1282 0110 10101BE5 		ldr	r1, [fp, #-16]
 1283 0114 38001BE5 		ldr	r0, [fp, #-56]
 1284 0118 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1285              		.loc 1 1202 9
 1286 011c E10100EA 		b	.L69
 1287              	.L77:
1203:../../Source/Kernel/rme_kernel.c ****     }
1204:../../Source/Kernel/rme_kernel.c ****     else
1205:../../Source/Kernel/rme_kernel.c ****     {
1206:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1207:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1208:../../Source/Kernel/rme_kernel.c ****     }
1209:../../Source/Kernel/rme_kernel.c **** 
1210:../../Source/Kernel/rme_kernel.c ****     /* See if this operation can potentially cause a context switch. All the 
1211:../../Source/Kernel/rme_kernel.c ****      * functions that may cause a context switch is listed here. The behavior
1212:../../Source/Kernel/rme_kernel.c ****      * of these functions shall be: If the function is successful, they shall
1213:../../Source/Kernel/rme_kernel.c ****      * perform the return value saving on proper register stacks by themselves;
1214:../../Source/Kernel/rme_kernel.c ****      * if the function fails, it should not conduct such return value saving.
1215:../../Source/Kernel/rme_kernel.c ****      * These paths are less optimized than synchronous invocation, but are still
1216:../../Source/Kernel/rme_kernel.c ****      * optimized anyway. */
1217:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1288              		.loc 1 1217 5 is_stmt 1
 1289 0120 18301BE5 		ldr	r3, [fp, #-24]
 1290 0124 022043E2 		sub	r2, r3, #2
 1291 0128 80379FE5 		ldr	r3, .L127
 1292 012c 070052E3 		cmp	r2, #7
 1293 0130 9400008A 		bhi	.L126
 1294 0134 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1295              	.Lrtx81:
 1296 0138 00F020E3 		nop
 1297              		.section	.rodata._RME_Svc_Handler,"a",%progbits
 1298              		.align	2
 1299              	.L81:
 1300 0000 3C010000 		.word	.L88
 1301 0004 70010000 		.word	.L87
 1302 0008 A8010000 		.word	.L86
 1303 000c 08020000 		.word	.L85
 1304 0010 3C020000 		.word	.L84
 1305 0014 8C020000 		.word	.L83
 1306 0018 08030000 		.word	.L82
 1307 001c 50030000 		.word	.L80
 1308              		.section	.text._RME_Svc_Handler
 1309              		.p2align 2
 1310              	.L88:
1218:../../Source/Kernel/rme_kernel.c ****     {
1219:../../Source/Kernel/rme_kernel.c ****         /* Send to a signal endpoint */
1220:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_SND:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 45


1221:../../Source/Kernel/rme_kernel.c ****         {
1222:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1223:../../Source/Kernel/rme_kernel.c ****             
1224:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Snd(Cpt,
1225:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1226:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1311              		.loc 1 1226 49
 1312 013c 34301BE5 		ldr	r3, [fp, #-52]
1224:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1313              		.loc 1 1224 20
 1314 0140 0320A0E1 		mov	r2, r3
 1315 0144 38101BE5 		ldr	r1, [fp, #-56]
 1316 0148 14001BE5 		ldr	r0, [fp, #-20]
 1317 014c FEFFFFEB 		bl	_RME_Sig_Snd
 1318 0150 10000BE5 		str	r0, [fp, #-16]
1227:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1319              		.loc 1 1227 13
 1320 0154 10301BE5 		ldr	r3, [fp, #-16]
 1321 0158 000053E3 		cmp	r3, #0
 1322 015c D10100AA 		bge	.L69
 1323              		.loc 1 1227 13 is_stmt 0 discriminator 1
 1324 0160 10101BE5 		ldr	r1, [fp, #-16]
 1325 0164 38001BE5 		ldr	r0, [fp, #-56]
 1326 0168 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1327              		.loc 1 1227 13
 1328 016c CD0100EA 		b	.L69
 1329              	.L87:
1228:../../Source/Kernel/rme_kernel.c ****         }
1229:../../Source/Kernel/rme_kernel.c ****         /* Receive from a signal endpoint */
1230:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_RCV:
1231:../../Source/Kernel/rme_kernel.c ****         {
1232:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1233:../../Source/Kernel/rme_kernel.c ****             
1234:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Rcv(Cpt,
1235:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1236:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Sig */
 1330              		.loc 1 1236 49 is_stmt 1
 1331 0170 34301BE5 		ldr	r3, [fp, #-52]
1234:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1332              		.loc 1 1234 20
 1333 0174 0320A0E1 		mov	r2, r3
 1334 0178 30301BE5 		ldr	r3, [fp, #-48]
 1335 017c 38101BE5 		ldr	r1, [fp, #-56]
 1336 0180 14001BE5 		ldr	r0, [fp, #-20]
 1337 0184 FEFFFFEB 		bl	_RME_Sig_Rcv
 1338 0188 10000BE5 		str	r0, [fp, #-16]
1237:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Option */
1238:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1339              		.loc 1 1238 13
 1340 018c 10301BE5 		ldr	r3, [fp, #-16]
 1341 0190 000053E3 		cmp	r3, #0
 1342 0194 C30100AA 		bge	.L69
 1343              		.loc 1 1238 13 is_stmt 0 discriminator 1
 1344 0198 10101BE5 		ldr	r1, [fp, #-16]
 1345 019c 38001BE5 		ldr	r0, [fp, #-56]
 1346 01a0 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1347              		.loc 1 1238 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 46


 1348 01a4 BF0100EA 		b	.L69
 1349              	.L86:
1239:../../Source/Kernel/rme_kernel.c ****         }
1240:../../Source/Kernel/rme_kernel.c ****         /* Call kernel functions */
1241:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_KFN:
1242:../../Source/Kernel/rme_kernel.c ****         {
1243:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1244:../../Source/Kernel/rme_kernel.c ****             
1245:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Kfn_Act(Cpt,
 1350              		.loc 1 1245 20 is_stmt 1
 1351 01a8 28301BE5 		ldr	r3, [fp, #-40]
 1352 01ac 03C0A0E1 		mov	ip, r3
1246:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1247:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Kfn */
1248:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Func_ID */
 1353              		.loc 1 1248 33
 1354 01b0 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1355              		.loc 1 1245 20
 1356 01b4 7300FFE6 		uxth	r0, r3
1249:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]),                     /* rme_ptr_t Sub_ID */
 1357              		.loc 1 1249 33
 1358 01b8 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1359              		.loc 1 1245 20
 1360 01bc 2338A0E1 		lsr	r3, r3, #16
 1361 01c0 30201BE5 		ldr	r2, [fp, #-48]
 1362 01c4 2C101BE5 		ldr	r1, [fp, #-44]
 1363 01c8 08108DE5 		str	r1, [sp, #8]
 1364 01cc 04208DE5 		str	r2, [sp, #4]
 1365 01d0 00308DE5 		str	r3, [sp]
 1366 01d4 0030A0E1 		mov	r3, r0
 1367 01d8 0C20A0E1 		mov	r2, ip
 1368 01dc 38101BE5 		ldr	r1, [fp, #-56]
 1369 01e0 14001BE5 		ldr	r0, [fp, #-20]
 1370 01e4 FEFFFFEB 		bl	_RME_Kfn_Act
 1371 01e8 10000BE5 		str	r0, [fp, #-16]
1250:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Param1 */
1251:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Param2 */
1252:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg, Retval);
 1372              		.loc 1 1252 13
 1373 01ec 10301BE5 		ldr	r3, [fp, #-16]
 1374 01f0 000053E3 		cmp	r3, #0
 1375 01f4 AB0100AA 		bge	.L69
 1376              		.loc 1 1252 13 is_stmt 0 discriminator 1
 1377 01f8 10101BE5 		ldr	r1, [fp, #-16]
 1378 01fc 38001BE5 		ldr	r0, [fp, #-56]
 1379 0200 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1380              		.loc 1 1252 13
 1381 0204 A70100EA 		b	.L69
 1382              	.L85:
1253:../../Source/Kernel/rme_kernel.c ****         }
1254:../../Source/Kernel/rme_kernel.c ****         /* Free a thread from some core */
1255:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_FREE:
1256:../../Source/Kernel/rme_kernel.c ****         {
1257:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1258:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 47


1259:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Free(Cpt,
1260:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1261:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Param[0]);                /* rme_cid_t Cap_Thd */
 1383              		.loc 1 1261 56 is_stmt 1
 1384 0208 34301BE5 		ldr	r3, [fp, #-52]
1259:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1385              		.loc 1 1259 20
 1386 020c 0320A0E1 		mov	r2, r3
 1387 0210 38101BE5 		ldr	r1, [fp, #-56]
 1388 0214 14001BE5 		ldr	r0, [fp, #-20]
 1389 0218 FEFFFFEB 		bl	_RME_Thd_Sched_Free
 1390 021c 10000BE5 		str	r0, [fp, #-16]
1262:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1391              		.loc 1 1262 13
 1392 0220 10301BE5 		ldr	r3, [fp, #-16]
 1393 0224 000053E3 		cmp	r3, #0
 1394 0228 9E0100AA 		bge	.L69
 1395              		.loc 1 1262 13 is_stmt 0 discriminator 1
 1396 022c 10101BE5 		ldr	r1, [fp, #-16]
 1397 0230 38001BE5 		ldr	r0, [fp, #-56]
 1398 0234 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1399              		.loc 1 1262 13
 1400 0238 9A0100EA 		b	.L69
 1401              	.L84:
1263:../../Source/Kernel/rme_kernel.c ****         }
1264:../../Source/Kernel/rme_kernel.c ****         /* Changing thread execution context */
1265:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_EXEC_SET:
1266:../../Source/Kernel/rme_kernel.c ****         {
1267:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1268:../../Source/Kernel/rme_kernel.c ****             
1269:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Exec_Set(Cpt,
 1402              		.loc 1 1269 20 is_stmt 1
 1403 023c 28301BE5 		ldr	r3, [fp, #-40]
 1404 0240 0300A0E1 		mov	r0, r3
 1405 0244 34101BE5 		ldr	r1, [fp, #-52]
 1406 0248 30301BE5 		ldr	r3, [fp, #-48]
 1407 024c 2C201BE5 		ldr	r2, [fp, #-44]
 1408 0250 04208DE5 		str	r2, [sp, #4]
 1409 0254 00308DE5 		str	r3, [sp]
 1410 0258 0130A0E1 		mov	r3, r1
 1411 025c 0020A0E1 		mov	r2, r0
 1412 0260 38101BE5 		ldr	r1, [fp, #-56]
 1413 0264 14001BE5 		ldr	r0, [fp, #-20]
 1414 0268 FEFFFFEB 		bl	_RME_Thd_Exec_Set
 1415 026c 10000BE5 		str	r0, [fp, #-16]
1270:../../Source/Kernel/rme_kernel.c ****                                      Reg,                                   /* volatile struct RME_
1271:../../Source/Kernel/rme_kernel.c ****                                      (rme_cid_t)Cid,                        /* rme_cid_t Cap_Thd */
1272:../../Source/Kernel/rme_kernel.c ****                                      Param[0],                              /* rme_ptr_t Entry */
1273:../../Source/Kernel/rme_kernel.c ****                                      Param[1],                              /* rme_ptr_t Stack */
1274:../../Source/Kernel/rme_kernel.c ****                                      Param[2]);                             /* rme_ptr_t Param */
1275:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1416              		.loc 1 1275 13
 1417 0270 10301BE5 		ldr	r3, [fp, #-16]
 1418 0274 000053E3 		cmp	r3, #0
 1419 0278 8A0100AA 		bge	.L69
 1420              		.loc 1 1275 13 is_stmt 0 discriminator 1
 1421 027c 10101BE5 		ldr	r1, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 48


 1422 0280 38001BE5 		ldr	r0, [fp, #-56]
 1423 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1424              		.loc 1 1275 13
 1425 0288 860100EA 		b	.L69
 1426              	.L83:
1276:../../Source/Kernel/rme_kernel.c ****         }
1277:../../Source/Kernel/rme_kernel.c ****         /* Changing thread priority (up to three threads at once) */
1278:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_PRIO:
1279:../../Source/Kernel/rme_kernel.c ****         {
1280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1281:../../Source/Kernel/rme_kernel.c ****             
1282:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Prio(Cpt,
 1427              		.loc 1 1282 20 is_stmt 1
 1428 028c 28E01BE5 		ldr	lr, [fp, #-40]
1283:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1284:../../Source/Kernel/rme_kernel.c ****                                        Cid,                                 /* rme_ptr_t Number */
1285:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Thd0 *
 1429              		.loc 1 1285 51
 1430 0290 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1431              		.loc 1 1282 20
 1432 0294 7340FFE6 		uxth	r4, r3
1286:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[0]),              /* rme_ptr_t Prio0 */
 1433              		.loc 1 1286 40
 1434 0298 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1435              		.loc 1 1282 20
 1436 029c 2338A0E1 		lsr	r3, r3, #16
1287:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[1]),   /* rme_cid_t Cap_Thd1 *
 1437              		.loc 1 1287 51
 1438 02a0 30201BE5 		ldr	r2, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1439              		.loc 1 1282 20
 1440 02a4 7220FFE6 		uxth	r2, r2
1288:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[1]),              /* rme_ptr_t Prio1 */
 1441              		.loc 1 1288 40
 1442 02a8 30101BE5 		ldr	r1, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1443              		.loc 1 1282 20
 1444 02ac 2118A0E1 		lsr	r1, r1, #16
1289:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[2]),   /* rme_cid_t Cap_Thd2 *
 1445              		.loc 1 1289 51
 1446 02b0 2C001BE5 		ldr	r0, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1447              		.loc 1 1282 20
 1448 02b4 7000FFE6 		uxth	r0, r0
1290:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[2]));             /* rme_ptr_t Prio2 */
 1449              		.loc 1 1290 40
 1450 02b8 2CC01BE5 		ldr	ip, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1451              		.loc 1 1282 20
 1452 02bc 2CC8A0E1 		lsr	ip, ip, #16
 1453 02c0 10C08DE5 		str	ip, [sp, #16]
 1454 02c4 0C008DE5 		str	r0, [sp, #12]
 1455 02c8 08108DE5 		str	r1, [sp, #8]
 1456 02cc 04208DE5 		str	r2, [sp, #4]
 1457 02d0 00308DE5 		str	r3, [sp]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 49


 1458 02d4 0430A0E1 		mov	r3, r4
 1459 02d8 0E20A0E1 		mov	r2, lr
 1460 02dc 38101BE5 		ldr	r1, [fp, #-56]
 1461 02e0 14001BE5 		ldr	r0, [fp, #-20]
 1462 02e4 FEFFFFEB 		bl	_RME_Thd_Sched_Prio
 1463 02e8 10000BE5 		str	r0, [fp, #-16]
1291:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1464              		.loc 1 1291 13
 1465 02ec 10301BE5 		ldr	r3, [fp, #-16]
 1466 02f0 000053E3 		cmp	r3, #0
 1467 02f4 6B0100AA 		bge	.L69
 1468              		.loc 1 1291 13 is_stmt 0 discriminator 1
 1469 02f8 10101BE5 		ldr	r1, [fp, #-16]
 1470 02fc 38001BE5 		ldr	r0, [fp, #-56]
 1471 0300 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1472              		.loc 1 1291 13
 1473 0304 670100EA 		b	.L69
 1474              	.L82:
1292:../../Source/Kernel/rme_kernel.c ****         }
1293:../../Source/Kernel/rme_kernel.c ****         /* Transfer time to a thread */
1294:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_TIME_XFER:
1295:../../Source/Kernel/rme_kernel.c ****         {
1296:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1297:../../Source/Kernel/rme_kernel.c ****             
1298:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Time_Xfer(Cpt,
1299:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
1300:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0],                  /* rme_cid_t Cap_Thd_Ds
 1475              		.loc 1 1300 55 is_stmt 1
 1476 0308 34301BE5 		ldr	r3, [fp, #-52]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1477              		.loc 1 1298 20
 1478 030c 0320A0E1 		mov	r2, r3
1301:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[1],                  /* rme_cid_t Cap_Thd_Sr
 1479              		.loc 1 1301 55
 1480 0310 30301BE5 		ldr	r3, [fp, #-48]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1481              		.loc 1 1298 20
 1482 0314 0310A0E1 		mov	r1, r3
 1483 0318 2C301BE5 		ldr	r3, [fp, #-44]
 1484 031c 00308DE5 		str	r3, [sp]
 1485 0320 0130A0E1 		mov	r3, r1
 1486 0324 38101BE5 		ldr	r1, [fp, #-56]
 1487 0328 14001BE5 		ldr	r0, [fp, #-20]
 1488 032c FEFFFFEB 		bl	_RME_Thd_Time_Xfer
 1489 0330 10000BE5 		str	r0, [fp, #-16]
1302:../../Source/Kernel/rme_kernel.c ****                                       Param[2]);                            /* rme_ptr_t Time */
1303:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1490              		.loc 1 1303 13
 1491 0334 10301BE5 		ldr	r3, [fp, #-16]
 1492 0338 000053E3 		cmp	r3, #0
 1493 033c 590100AA 		bge	.L69
 1494              		.loc 1 1303 13 is_stmt 0 discriminator 1
 1495 0340 10101BE5 		ldr	r1, [fp, #-16]
 1496 0344 38001BE5 		ldr	r0, [fp, #-56]
 1497 0348 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1498              		.loc 1 1303 13
 1499 034c 550100EA 		b	.L69
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 50


 1500              	.L80:
1304:../../Source/Kernel/rme_kernel.c ****         }
1305:../../Source/Kernel/rme_kernel.c ****         /* Switch to another thread */
1306:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SWT:
1307:../../Source/Kernel/rme_kernel.c ****         {
1308:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1309:../../Source/Kernel/rme_kernel.c ****             
1310:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Swt(Cpt,
1311:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1312:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Thd */
 1501              		.loc 1 1312 49 is_stmt 1
 1502 0350 34301BE5 		ldr	r3, [fp, #-52]
1310:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1503              		.loc 1 1310 20
 1504 0354 0320A0E1 		mov	r2, r3
 1505 0358 30301BE5 		ldr	r3, [fp, #-48]
 1506 035c 38101BE5 		ldr	r1, [fp, #-56]
 1507 0360 14001BE5 		ldr	r0, [fp, #-20]
 1508 0364 FEFFFFEB 		bl	_RME_Thd_Swt
 1509 0368 10000BE5 		str	r0, [fp, #-16]
1313:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Full_Yield
1314:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1510              		.loc 1 1314 13
 1511 036c 10301BE5 		ldr	r3, [fp, #-16]
 1512 0370 000053E3 		cmp	r3, #0
 1513 0374 4B0100AA 		bge	.L69
 1514              		.loc 1 1314 13 is_stmt 0 discriminator 1
 1515 0378 10101BE5 		ldr	r1, [fp, #-16]
 1516 037c 38001BE5 		ldr	r0, [fp, #-56]
 1517 0380 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1518              		.loc 1 1314 13
 1519 0384 470100EA 		b	.L69
 1520              	.L126:
1315:../../Source/Kernel/rme_kernel.c ****         }
1316:../../Source/Kernel/rme_kernel.c ****         default:
1317:../../Source/Kernel/rme_kernel.c ****         {
1318:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1319:../../Source/Kernel/rme_kernel.c ****             break;
 1521              		.loc 1 1319 13 is_stmt 1
 1522 0388 00F020E3 		nop
1320:../../Source/Kernel/rme_kernel.c ****         }
1321:../../Source/Kernel/rme_kernel.c ****     } 
1322:../../Source/Kernel/rme_kernel.c **** 
1323:../../Source/Kernel/rme_kernel.c ****     /* It is guaranteed that these functions will never cause a context switch */
1324:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1523              		.loc 1 1324 5
 1524 038c 18301BE5 		ldr	r3, [fp, #-24]
 1525 0390 0A2043E2 		sub	r2, r3, #10
 1526 0394 18359FE5 		ldr	r3, .L127+4
 1527 0398 170052E3 		cmp	r2, #23
 1528 039c 3B01008A 		bhi	.L97
 1529 03a0 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1530              	.Lrtx99:
 1531 03a4 00F020E3 		nop
 1532              		.section	.rodata._RME_Svc_Handler
 1533              		.align	2
 1534              	.L99:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 51


 1535 0020 A8030000 		.word	.L122
 1536 0024 F0030000 		.word	.L121
 1537 0028 10040000 		.word	.L120
 1538 002c 30040000 		.word	.L119
 1539 0030 94040000 		.word	.L118
 1540 0034 B4040000 		.word	.L117
 1541 0038 28050000 		.word	.L116
 1542 003c 48050000 		.word	.L115
 1543 0040 A0050000 		.word	.L114
 1544 0044 C0050000 		.word	.L113
 1545 0048 F8050000 		.word	.L112
 1546 004c 18060000 		.word	.L111
 1547 0050 4C060000 		.word	.L110
 1548 0054 6C060000 		.word	.L109
 1549 0058 8C060000 		.word	.L108
 1550 005c AC060000 		.word	.L107
 1551 0060 20070000 		.word	.L106
 1552 0064 40070000 		.word	.L105
 1553 0068 9C070000 		.word	.L104
 1554 006c B4070000 		.word	.L103
 1555 0070 D4070000 		.word	.L102
 1556 0074 F4070000 		.word	.L101
 1557 0078 40080000 		.word	.L100
 1558 007c 60080000 		.word	.L98
 1559              		.section	.text._RME_Svc_Handler
 1560              		.p2align 2
 1561              	.L122:
1325:../../Source/Kernel/rme_kernel.c ****     {
1326:../../Source/Kernel/rme_kernel.c ****         /* Capability table */
1327:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_CRT:
1328:../../Source/Kernel/rme_kernel.c ****         {
1329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1330:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Crt(Cpt,
 1562              		.loc 1 1330 20
 1563 03a8 28301BE5 		ldr	r3, [fp, #-40]
 1564 03ac 0300A0E1 		mov	r0, r3
1331:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1332:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1565              		.loc 1 1332 44
 1566 03b0 34301BE5 		ldr	r3, [fp, #-52]
 1567 03b4 2338A0E1 		lsr	r3, r3, #16
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1568              		.loc 1 1330 20
 1569 03b8 03C0A0E1 		mov	ip, r3
1333:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Crt */
 1570              		.loc 1 1333 44
 1571 03bc 34301BE5 		ldr	r3, [fp, #-52]
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1572              		.loc 1 1330 20
 1573 03c0 7310FFE6 		uxth	r1, r3
 1574 03c4 30301BE5 		ldr	r3, [fp, #-48]
 1575 03c8 2C201BE5 		ldr	r2, [fp, #-44]
 1576 03cc 04208DE5 		str	r2, [sp, #4]
 1577 03d0 00308DE5 		str	r3, [sp]
 1578 03d4 0130A0E1 		mov	r3, r1
 1579 03d8 0C20A0E1 		mov	r2, ip
 1580 03dc 0010A0E1 		mov	r1, r0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 52


 1581 03e0 14001BE5 		ldr	r0, [fp, #-20]
 1582 03e4 FEFFFFEB 		bl	_RME_Cpt_Crt
 1583 03e8 10000BE5 		str	r0, [fp, #-16]
1334:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1335:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Entry_Num 
1336:../../Source/Kernel/rme_kernel.c ****             break;
 1584              		.loc 1 1336 13
 1585 03ec 2A0100EA 		b	.L123
 1586              	.L121:
1337:../../Source/Kernel/rme_kernel.c ****         }
1338:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_DEL:
1339:../../Source/Kernel/rme_kernel.c ****         {
1340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1341:../../Source/Kernel/rme_kernel.c ****             
1342:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Del(Cpt,
 1587              		.loc 1 1342 20
 1588 03f0 28301BE5 		ldr	r3, [fp, #-40]
 1589 03f4 0310A0E1 		mov	r1, r3
1343:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
1344:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Cpt */
 1590              		.loc 1 1344 49
 1591 03f8 34301BE5 		ldr	r3, [fp, #-52]
1342:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
 1592              		.loc 1 1342 20
 1593 03fc 0320A0E1 		mov	r2, r3
 1594 0400 14001BE5 		ldr	r0, [fp, #-20]
 1595 0404 FEFFFFEB 		bl	_RME_Cpt_Del
 1596 0408 10000BE5 		str	r0, [fp, #-16]
1345:../../Source/Kernel/rme_kernel.c ****             break;
 1597              		.loc 1 1345 13
 1598 040c 220100EA 		b	.L123
 1599              	.L120:
1346:../../Source/Kernel/rme_kernel.c ****         }
1347:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_FRZ:
1348:../../Source/Kernel/rme_kernel.c ****         {
1349:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1350:../../Source/Kernel/rme_kernel.c ****             
1351:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Frz(Cpt,
 1600              		.loc 1 1351 20
 1601 0410 28301BE5 		ldr	r3, [fp, #-40]
 1602 0414 0310A0E1 		mov	r1, r3
1352:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
1353:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Frz */
 1603              		.loc 1 1353 49
 1604 0418 34301BE5 		ldr	r3, [fp, #-52]
1351:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
 1605              		.loc 1 1351 20
 1606 041c 0320A0E1 		mov	r2, r3
 1607 0420 14001BE5 		ldr	r0, [fp, #-20]
 1608 0424 FEFFFFEB 		bl	_RME_Cpt_Frz
 1609 0428 10000BE5 		str	r0, [fp, #-16]
1354:../../Source/Kernel/rme_kernel.c ****             break;
 1610              		.loc 1 1354 13
 1611 042c 1A0100EA 		b	.L123
 1612              	.L119:
1355:../../Source/Kernel/rme_kernel.c ****         }
1356:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_ADD:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 53


1357:../../Source/Kernel/rme_kernel.c ****         {
1358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1359:../../Source/Kernel/rme_kernel.c ****             
1360:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Add(Cpt,
1361:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1613              		.loc 1 1361 44
 1614 0430 34301BE5 		ldr	r3, [fp, #-52]
 1615 0434 2338A0E1 		lsr	r3, r3, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1616              		.loc 1 1360 20
 1617 0438 03E0A0E1 		mov	lr, r3
1362:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Dst */
 1618              		.loc 1 1362 44
 1619 043c 34301BE5 		ldr	r3, [fp, #-52]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1620              		.loc 1 1360 20
 1621 0440 73C0FFE6 		uxth	ip, r3
1363:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Cpt_Sr
 1622              		.loc 1 1363 44
 1623 0444 30301BE5 		ldr	r3, [fp, #-48]
 1624 0448 2338A0E1 		lsr	r3, r3, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1625              		.loc 1 1360 20
 1626 044c 0340A0E1 		mov	r4, r3
1364:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[1]),          /* rme_cid_t Cap_Src */
 1627              		.loc 1 1364 44
 1628 0450 30301BE5 		ldr	r3, [fp, #-48]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1629              		.loc 1 1360 20
 1630 0454 7330FFE6 		uxth	r3, r3
 1631 0458 2C201BE5 		ldr	r2, [fp, #-44]
1365:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Flag */
1366:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_KM(Svc,Cid));                     /* rme_ptr_t Ext_Flag *
 1632              		.loc 1 1366 33
 1633 045c 24101BE5 		ldr	r1, [fp, #-36]
 1634 0460 0108A0E1 		lsl	r0, r1, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1635              		.loc 1 1360 20
 1636 0464 28101BE5 		ldr	r1, [fp, #-40]
 1637 0468 011080E1 		orr	r1, r0, r1
 1638 046c 08108DE5 		str	r1, [sp, #8]
 1639 0470 04208DE5 		str	r2, [sp, #4]
 1640 0474 00308DE5 		str	r3, [sp]
 1641 0478 0430A0E1 		mov	r3, r4
 1642 047c 0C20A0E1 		mov	r2, ip
 1643 0480 0E10A0E1 		mov	r1, lr
 1644 0484 14001BE5 		ldr	r0, [fp, #-20]
 1645 0488 FEFFFFEB 		bl	_RME_Cpt_Add
 1646 048c 10000BE5 		str	r0, [fp, #-16]
1367:../../Source/Kernel/rme_kernel.c ****             break;
 1647              		.loc 1 1367 13
 1648 0490 010100EA 		b	.L123
 1649              	.L118:
1368:../../Source/Kernel/rme_kernel.c ****         }
1369:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_REM:
1370:../../Source/Kernel/rme_kernel.c ****         {
1371:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 54


1372:../../Source/Kernel/rme_kernel.c ****             
1373:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Rem(Cpt,
 1650              		.loc 1 1373 20
 1651 0494 28301BE5 		ldr	r3, [fp, #-40]
 1652 0498 0310A0E1 		mov	r1, r3
1374:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
1375:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Rem */
 1653              		.loc 1 1375 49
 1654 049c 34301BE5 		ldr	r3, [fp, #-52]
1373:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
 1655              		.loc 1 1373 20
 1656 04a0 0320A0E1 		mov	r2, r3
 1657 04a4 14001BE5 		ldr	r0, [fp, #-20]
 1658 04a8 FEFFFFEB 		bl	_RME_Cpt_Rem
 1659 04ac 10000BE5 		str	r0, [fp, #-16]
1376:../../Source/Kernel/rme_kernel.c ****             break;
 1660              		.loc 1 1376 13
 1661 04b0 F90000EA 		b	.L123
 1662              	.L117:
1377:../../Source/Kernel/rme_kernel.c ****         }
1378:../../Source/Kernel/rme_kernel.c ****         
1379:../../Source/Kernel/rme_kernel.c ****         /* Page table */
1380:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1381:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CRT:
1382:../../Source/Kernel/rme_kernel.c ****         {
1383:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1384:../../Source/Kernel/rme_kernel.c ****             
1385:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Crt(Cpt,
 1663              		.loc 1 1385 20
 1664 04b4 28301BE5 		ldr	r3, [fp, #-40]
 1665 04b8 0340A0E1 		mov	r4, r3
1386:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1387:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1666              		.loc 1 1387 44
 1667 04bc 34301BE5 		ldr	r3, [fp, #-52]
 1668 04c0 2338A0E1 		lsr	r3, r3, #16
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1669              		.loc 1 1385 20
 1670 04c4 0350A0E1 		mov	r5, r3
1388:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_Q1(Param[0]),          /* rme_cid_t Cap_Pgt */
 1671              		.loc 1 1388 44
 1672 04c8 34301BE5 		ldr	r3, [fp, #-52]
 1673 04cc 2334A0E1 		lsr	r3, r3, #8
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1674              		.loc 1 1385 20
 1675 04d0 73E0EFE6 		uxtb	lr, r3
 1676 04d4 30301BE5 		ldr	r3, [fp, #-48]
1389:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1390:../../Source/Kernel/rme_kernel.c ****                                 Param[2]&RME_MASK_BEGIN(1U),                /* rme_ptr_t Base */
 1677              		.loc 1 1390 38
 1678 04d8 2C201BE5 		ldr	r2, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1679              		.loc 1 1385 20
 1680 04dc 0120C2E3 		bic	r2, r2, #1
1391:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PT(Param[2]),                     /* rme_ptr_t Is_Top */
 1681              		.loc 1 1391 33
 1682 04e0 2C101BE5 		ldr	r1, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 55


1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1683              		.loc 1 1385 20
 1684 04e4 011001E2 		and	r1, r1, #1
1392:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_Q0(Param[0]),                     /* rme_ptr_t Size_Order
 1685              		.loc 1 1392 33
 1686 04e8 34001BE5 		ldr	r0, [fp, #-52]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1687              		.loc 1 1385 20
 1688 04ec 7000EFE6 		uxtb	r0, r0
 1689 04f0 24C01BE5 		ldr	ip, [fp, #-36]
 1690 04f4 2CC4A0E1 		lsr	ip, ip, #8
 1691 04f8 10C08DE5 		str	ip, [sp, #16]
 1692 04fc 0C008DE5 		str	r0, [sp, #12]
 1693 0500 08108DE5 		str	r1, [sp, #8]
 1694 0504 04208DE5 		str	r2, [sp, #4]
 1695 0508 00308DE5 		str	r3, [sp]
 1696 050c 0E30A0E1 		mov	r3, lr
 1697 0510 0520A0E1 		mov	r2, r5
 1698 0514 0410A0E1 		mov	r1, r4
 1699 0518 14001BE5 		ldr	r0, [fp, #-20]
 1700 051c FEFFFFEB 		bl	_RME_Pgt_Crt
 1701 0520 10000BE5 		str	r0, [fp, #-16]
1393:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PC(Svc));                         /* rme_ptr_t Num_Order 
1394:../../Source/Kernel/rme_kernel.c ****             break;
 1702              		.loc 1 1394 13
 1703 0524 DC0000EA 		b	.L123
 1704              	.L116:
1395:../../Source/Kernel/rme_kernel.c ****         }
1396:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DEL:
1397:../../Source/Kernel/rme_kernel.c ****         {
1398:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1399:../../Source/Kernel/rme_kernel.c ****             
1400:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Del(Cpt,
 1705              		.loc 1 1400 20
 1706 0528 28301BE5 		ldr	r3, [fp, #-40]
 1707 052c 0310A0E1 		mov	r1, r3
1401:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1402:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Pgt */
 1708              		.loc 1 1402 49
 1709 0530 34301BE5 		ldr	r3, [fp, #-52]
1400:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1710              		.loc 1 1400 20
 1711 0534 0320A0E1 		mov	r2, r3
 1712 0538 14001BE5 		ldr	r0, [fp, #-20]
 1713 053c FEFFFFEB 		bl	_RME_Pgt_Del
 1714 0540 10000BE5 		str	r0, [fp, #-16]
1403:../../Source/Kernel/rme_kernel.c ****             break;
 1715              		.loc 1 1403 13
 1716 0544 D40000EA 		b	.L123
 1717              	.L115:
1404:../../Source/Kernel/rme_kernel.c ****         }
1405:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_ADD:
1406:../../Source/Kernel/rme_kernel.c ****         {
1407:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1408:../../Source/Kernel/rme_kernel.c ****             
1409:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Add(Cpt,
1410:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 56


 1718              		.loc 1 1410 44
 1719 0548 34301BE5 		ldr	r3, [fp, #-52]
 1720 054c 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1721              		.loc 1 1409 20
 1722 0550 03E0A0E1 		mov	lr, r3
1411:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Pos_Dst */
 1723              		.loc 1 1411 33
 1724 0554 34301BE5 		ldr	r3, [fp, #-52]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1725              		.loc 1 1409 20
 1726 0558 7310FFE6 		uxth	r1, r3
 1727 055c 28001BE5 		ldr	r0, [fp, #-40]
1412:../../Source/Kernel/rme_kernel.c ****                                 Cid,                                        /* rme_ptr_t Flag_Dst *
1413:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Pgt_Sr
 1728              		.loc 1 1413 44
 1729 0560 30301BE5 		ldr	r3, [fp, #-48]
 1730 0564 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1731              		.loc 1 1409 20
 1732 0568 03C0A0E1 		mov	ip, r3
1414:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Pos_Src */
 1733              		.loc 1 1414 33
 1734 056c 30301BE5 		ldr	r3, [fp, #-48]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1735              		.loc 1 1409 20
 1736 0570 7330FFE6 		uxth	r3, r3
 1737 0574 2C201BE5 		ldr	r2, [fp, #-44]
 1738 0578 08208DE5 		str	r2, [sp, #8]
 1739 057c 04308DE5 		str	r3, [sp, #4]
 1740 0580 00C08DE5 		str	ip, [sp]
 1741 0584 0030A0E1 		mov	r3, r0
 1742 0588 0120A0E1 		mov	r2, r1
 1743 058c 0E10A0E1 		mov	r1, lr
 1744 0590 14001BE5 		ldr	r0, [fp, #-20]
 1745 0594 FEFFFFEB 		bl	_RME_Pgt_Add
 1746 0598 10000BE5 		str	r0, [fp, #-16]
1415:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Index */
1416:../../Source/Kernel/rme_kernel.c ****             break;
 1747              		.loc 1 1416 13
 1748 059c BE0000EA 		b	.L123
 1749              	.L114:
1417:../../Source/Kernel/rme_kernel.c ****         }
1418:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_REM:
1419:../../Source/Kernel/rme_kernel.c ****         {
1420:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1421:../../Source/Kernel/rme_kernel.c ****             
1422:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Rem(Cpt,
1423:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1750              		.loc 1 1423 49
 1751 05a0 34301BE5 		ldr	r3, [fp, #-52]
1422:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1752              		.loc 1 1422 20
 1753 05a4 0310A0E1 		mov	r1, r3
 1754 05a8 30301BE5 		ldr	r3, [fp, #-48]
 1755 05ac 0320A0E1 		mov	r2, r3
 1756 05b0 14001BE5 		ldr	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 57


 1757 05b4 FEFFFFEB 		bl	_RME_Pgt_Rem
 1758 05b8 10000BE5 		str	r0, [fp, #-16]
1424:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Pos */
1425:../../Source/Kernel/rme_kernel.c ****             break;
 1759              		.loc 1 1425 13
 1760 05bc B60000EA 		b	.L123
 1761              	.L113:
1426:../../Source/Kernel/rme_kernel.c ****         }
1427:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CON:
1428:../../Source/Kernel/rme_kernel.c ****         {
1429:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1430:../../Source/Kernel/rme_kernel.c ****             
1431:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Con(Cpt,
1432:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1762              		.loc 1 1432 44
 1763 05c0 34301BE5 		ldr	r3, [fp, #-52]
 1764 05c4 2338A0E1 		lsr	r3, r3, #16
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1765              		.loc 1 1431 20
 1766 05c8 0300A0E1 		mov	r0, r3
 1767 05cc 30201BE5 		ldr	r2, [fp, #-48]
1433:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1434:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Pgt_Ch
 1768              		.loc 1 1434 44
 1769 05d0 34301BE5 		ldr	r3, [fp, #-52]
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1770              		.loc 1 1431 20
 1771 05d4 7310FFE6 		uxth	r1, r3
 1772 05d8 2C301BE5 		ldr	r3, [fp, #-44]
 1773 05dc 00308DE5 		str	r3, [sp]
 1774 05e0 0130A0E1 		mov	r3, r1
 1775 05e4 0010A0E1 		mov	r1, r0
 1776 05e8 14001BE5 		ldr	r0, [fp, #-20]
 1777 05ec FEFFFFEB 		bl	_RME_Pgt_Con
 1778 05f0 10000BE5 		str	r0, [fp, #-16]
1435:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Flag_Child
1436:../../Source/Kernel/rme_kernel.c ****             break;
 1779              		.loc 1 1436 13
 1780 05f4 A80000EA 		b	.L123
 1781              	.L112:
1437:../../Source/Kernel/rme_kernel.c ****         }
1438:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DES:
1439:../../Source/Kernel/rme_kernel.c ****         {
1440:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1441:../../Source/Kernel/rme_kernel.c ****             
1442:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Des(Cpt,
1443:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1782              		.loc 1 1443 49
 1783 05f8 34301BE5 		ldr	r3, [fp, #-52]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1784              		.loc 1 1442 20
 1785 05fc 0310A0E1 		mov	r1, r3
 1786 0600 30201BE5 		ldr	r2, [fp, #-48]
1444:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1445:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt_Ch
 1787              		.loc 1 1445 49
 1788 0604 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 58


1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1789              		.loc 1 1442 20
 1790 0608 14001BE5 		ldr	r0, [fp, #-20]
 1791 060c FEFFFFEB 		bl	_RME_Pgt_Des
 1792 0610 10000BE5 		str	r0, [fp, #-16]
1446:../../Source/Kernel/rme_kernel.c ****             break;
 1793              		.loc 1 1446 13
 1794 0614 A00000EA 		b	.L123
 1795              	.L111:
1447:../../Source/Kernel/rme_kernel.c ****         }
1448:../../Source/Kernel/rme_kernel.c **** #endif
1449:../../Source/Kernel/rme_kernel.c ****         /* Process */
1450:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CRT:
1451:../../Source/Kernel/rme_kernel.c ****         {
1452:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1453:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
 1796              		.loc 1 1453 20
 1797 0618 28301BE5 		ldr	r3, [fp, #-40]
 1798 061c 0310A0E1 		mov	r1, r3
1454:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1455:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1799              		.loc 1 1455 49
 1800 0620 34301BE5 		ldr	r3, [fp, #-52]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1801              		.loc 1 1453 20
 1802 0624 0320A0E1 		mov	r2, r3
1456:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
 1803              		.loc 1 1456 49
 1804 0628 30301BE5 		ldr	r3, [fp, #-48]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1805              		.loc 1 1453 20
 1806 062c 0300A0E1 		mov	r0, r3
1457:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt */
 1807              		.loc 1 1457 49
 1808 0630 2C301BE5 		ldr	r3, [fp, #-44]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1809              		.loc 1 1453 20
 1810 0634 00308DE5 		str	r3, [sp]
 1811 0638 0030A0E1 		mov	r3, r0
 1812 063c 14001BE5 		ldr	r0, [fp, #-20]
 1813 0640 FEFFFFEB 		bl	_RME_Prc_Crt
 1814 0644 10000BE5 		str	r0, [fp, #-16]
1458:../../Source/Kernel/rme_kernel.c **** #else
1459:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
1460:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1462:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
1463:../../Source/Kernel/rme_kernel.c ****                                 (rme_ptr_t)Param[2]);                       /* rme_ptr_t Raw_Pgt */
1464:../../Source/Kernel/rme_kernel.c **** #endif
1465:../../Source/Kernel/rme_kernel.c ****             break;
 1815              		.loc 1 1465 13
 1816 0648 930000EA 		b	.L123
 1817              	.L110:
1466:../../Source/Kernel/rme_kernel.c ****         }
1467:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_DEL:
1468:../../Source/Kernel/rme_kernel.c ****         {
1469:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 59


1470:../../Source/Kernel/rme_kernel.c ****             
1471:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Del(Cpt,
 1818              		.loc 1 1471 20
 1819 064c 28301BE5 		ldr	r3, [fp, #-40]
 1820 0650 0310A0E1 		mov	r1, r3
1472:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1473:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Prc */
 1821              		.loc 1 1473 49
 1822 0654 34301BE5 		ldr	r3, [fp, #-52]
1471:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1823              		.loc 1 1471 20
 1824 0658 0320A0E1 		mov	r2, r3
 1825 065c 14001BE5 		ldr	r0, [fp, #-20]
 1826 0660 FEFFFFEB 		bl	_RME_Prc_Del
 1827 0664 10000BE5 		str	r0, [fp, #-16]
1474:../../Source/Kernel/rme_kernel.c ****             break;
 1828              		.loc 1 1474 13
 1829 0668 8B0000EA 		b	.L123
 1830              	.L109:
1475:../../Source/Kernel/rme_kernel.c ****         }
1476:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CPT:
1477:../../Source/Kernel/rme_kernel.c ****         {
1478:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1479:../../Source/Kernel/rme_kernel.c ****             
1480:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Cpt(Cpt,
1481:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1831              		.loc 1 1481 49
 1832 066c 34301BE5 		ldr	r3, [fp, #-52]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1833              		.loc 1 1480 20
 1834 0670 0310A0E1 		mov	r1, r3
1482:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Cpt */
 1835              		.loc 1 1482 49
 1836 0674 30301BE5 		ldr	r3, [fp, #-48]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1837              		.loc 1 1480 20
 1838 0678 0320A0E1 		mov	r2, r3
 1839 067c 14001BE5 		ldr	r0, [fp, #-20]
 1840 0680 FEFFFFEB 		bl	_RME_Prc_Cpt
 1841 0684 10000BE5 		str	r0, [fp, #-16]
1483:../../Source/Kernel/rme_kernel.c ****             break;
 1842              		.loc 1 1483 13
 1843 0688 830000EA 		b	.L123
 1844              	.L108:
1484:../../Source/Kernel/rme_kernel.c ****         }
1485:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_PGT:
1486:../../Source/Kernel/rme_kernel.c ****         {
1487:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1488:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1489:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1490:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1845              		.loc 1 1490 49
 1846 068c 34301BE5 		ldr	r3, [fp, #-52]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1847              		.loc 1 1489 20
 1848 0690 0310A0E1 		mov	r1, r3
1491:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Pgt */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 60


 1849              		.loc 1 1491 49
 1850 0694 30301BE5 		ldr	r3, [fp, #-48]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1851              		.loc 1 1489 20
 1852 0698 0320A0E1 		mov	r2, r3
 1853 069c 14001BE5 		ldr	r0, [fp, #-20]
 1854 06a0 FEFFFFEB 		bl	_RME_Prc_Pgt
 1855 06a4 10000BE5 		str	r0, [fp, #-16]
1492:../../Source/Kernel/rme_kernel.c **** #else
1493:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1494:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1495:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Raw_Pgt */
1496:../../Source/Kernel/rme_kernel.c **** #endif
1497:../../Source/Kernel/rme_kernel.c ****             break;
 1856              		.loc 1 1497 13
 1857 06a8 7B0000EA 		b	.L123
 1858              	.L107:
1498:../../Source/Kernel/rme_kernel.c ****         }
1499:../../Source/Kernel/rme_kernel.c ****         
1500:../../Source/Kernel/rme_kernel.c ****         /* Thread */
1501:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_CRT:
1502:../../Source/Kernel/rme_kernel.c ****         {
1503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1504:../../Source/Kernel/rme_kernel.c **** 
1505:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Crt(Cpt,
 1859              		.loc 1 1505 20
 1860 06ac 28301BE5 		ldr	r3, [fp, #-40]
 1861 06b0 0340A0E1 		mov	r4, r3
1506:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1507:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1862              		.loc 1 1507 44
 1863 06b4 34301BE5 		ldr	r3, [fp, #-52]
 1864 06b8 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1865              		.loc 1 1505 20
 1866 06bc 0350A0E1 		mov	r5, r3
1508:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Thd */
 1867              		.loc 1 1508 44
 1868 06c0 34301BE5 		ldr	r3, [fp, #-52]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1869              		.loc 1 1505 20
 1870 06c4 73C0FFE6 		uxth	ip, r3
1509:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Prc */
 1871              		.loc 1 1509 44
 1872 06c8 30301BE5 		ldr	r3, [fp, #-48]
 1873 06cc 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1874              		.loc 1 1505 20
 1875 06d0 03E0A0E1 		mov	lr, r3
1510:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Prio_Max *
 1876              		.loc 1 1510 33
 1877 06d4 30301BE5 		ldr	r3, [fp, #-48]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1878              		.loc 1 1505 20
 1879 06d8 7330FFE6 		uxth	r3, r3
 1880 06dc 2C201BE5 		ldr	r2, [fp, #-44]
 1881 06e0 24101BE5 		ldr	r1, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 61


 1882 06e4 A113A0E1 		lsr	r1, r1, #7
 1883 06e8 24001BE5 		ldr	r0, [fp, #-36]
 1884 06ec 400000E2 		and	r0, r0, #64
 1885 06f0 10008DE5 		str	r0, [sp, #16]
 1886 06f4 0C108DE5 		str	r1, [sp, #12]
 1887 06f8 08208DE5 		str	r2, [sp, #8]
 1888 06fc 04308DE5 		str	r3, [sp, #4]
 1889 0700 00E08DE5 		str	lr, [sp]
 1890 0704 0C30A0E1 		mov	r3, ip
 1891 0708 0520A0E1 		mov	r2, r5
 1892 070c 0410A0E1 		mov	r1, r4
 1893 0710 14001BE5 		ldr	r0, [fp, #-20]
 1894 0714 FEFFFFEB 		bl	_RME_Thd_Crt
 1895 0718 10000BE5 		str	r0, [fp, #-16]
1511:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Raddr */
1512:../../Source/Kernel/rme_kernel.c ****                                 Svc>>7,                                     /* rme_ptr_t Attr */
1513:../../Source/Kernel/rme_kernel.c ****                                 Svc&0x40U);                                 /* rme_ptr_t Is_Hyp */
1514:../../Source/Kernel/rme_kernel.c ****             break;
 1896              		.loc 1 1514 13
 1897 071c 5E0000EA 		b	.L123
 1898              	.L106:
1515:../../Source/Kernel/rme_kernel.c ****         }
1516:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_DEL:
1517:../../Source/Kernel/rme_kernel.c ****         {
1518:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1519:../../Source/Kernel/rme_kernel.c ****             
1520:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Del(Cpt,
 1899              		.loc 1 1520 20
 1900 0720 28301BE5 		ldr	r3, [fp, #-40]
 1901 0724 0310A0E1 		mov	r1, r3
1521:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1522:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Thd */
 1902              		.loc 1 1522 49
 1903 0728 34301BE5 		ldr	r3, [fp, #-52]
1520:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1904              		.loc 1 1520 20
 1905 072c 0320A0E1 		mov	r2, r3
 1906 0730 14001BE5 		ldr	r0, [fp, #-20]
 1907 0734 FEFFFFEB 		bl	_RME_Thd_Del
 1908 0738 10000BE5 		str	r0, [fp, #-16]
1523:../../Source/Kernel/rme_kernel.c ****             break;
 1909              		.loc 1 1523 13
 1910 073c 560000EA 		b	.L123
 1911              	.L105:
1524:../../Source/Kernel/rme_kernel.c ****         }
1525:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_BIND:
1526:../../Source/Kernel/rme_kernel.c ****         {
1527:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1528:../../Source/Kernel/rme_kernel.c ****             
1529:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Bind(Cpt,
 1912              		.loc 1 1529 20
 1913 0740 28301BE5 		ldr	r3, [fp, #-40]
 1914 0744 03C0A0E1 		mov	ip, r3
1530:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
1531:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D1(Param[0]),   /* rme_cid_t Cap_Thd_Sc
 1915              		.loc 1 1531 51
 1916 0748 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 62


 1917 074c 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1918              		.loc 1 1529 20
 1919 0750 03E0A0E1 		mov	lr, r3
1532:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Sig */
 1920              		.loc 1 1532 51
 1921 0754 34301BE5 		ldr	r3, [fp, #-52]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1922              		.loc 1 1529 20
 1923 0758 7310FFE6 		uxth	r1, r3
1533:../../Source/Kernel/rme_kernel.c ****                                        (rme_tid_t)RME_PARAM_D1(Param[1]),   /* rme_tid_t TID */
 1924              		.loc 1 1533 51
 1925 075c 30301BE5 		ldr	r3, [fp, #-48]
 1926 0760 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1927              		.loc 1 1529 20
 1928 0764 0300A0E1 		mov	r0, r3
1534:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D0(Param[1]),              /* rme_ptr_t Prio */
 1929              		.loc 1 1534 40
 1930 0768 30301BE5 		ldr	r3, [fp, #-48]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1931              		.loc 1 1529 20
 1932 076c 7330FFE6 		uxth	r3, r3
 1933 0770 2C201BE5 		ldr	r2, [fp, #-44]
 1934 0774 08208DE5 		str	r2, [sp, #8]
 1935 0778 04308DE5 		str	r3, [sp, #4]
 1936 077c 00008DE5 		str	r0, [sp]
 1937 0780 0130A0E1 		mov	r3, r1
 1938 0784 0E20A0E1 		mov	r2, lr
 1939 0788 0C10A0E1 		mov	r1, ip
 1940 078c 14001BE5 		ldr	r0, [fp, #-20]
 1941 0790 FEFFFFEB 		bl	_RME_Thd_Sched_Bind
 1942 0794 10000BE5 		str	r0, [fp, #-16]
1535:../../Source/Kernel/rme_kernel.c ****                                        Param[2]);                           /* rme_ptr_t Haddr */
1536:../../Source/Kernel/rme_kernel.c ****             break;
 1943              		.loc 1 1536 13
 1944 0798 3F0000EA 		b	.L123
 1945              	.L104:
1537:../../Source/Kernel/rme_kernel.c ****         }
1538:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_RCV:
1539:../../Source/Kernel/rme_kernel.c ****         {
1540:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1541:../../Source/Kernel/rme_kernel.c ****             
1542:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Rcv(Cpt,
1543:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1946              		.loc 1 1543 55
 1947 079c 34301BE5 		ldr	r3, [fp, #-52]
1542:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1948              		.loc 1 1542 20
 1949 07a0 0310A0E1 		mov	r1, r3
 1950 07a4 14001BE5 		ldr	r0, [fp, #-20]
 1951 07a8 FEFFFFEB 		bl	_RME_Thd_Sched_Rcv
 1952 07ac 10000BE5 		str	r0, [fp, #-16]
1544:../../Source/Kernel/rme_kernel.c ****             break;
 1953              		.loc 1 1544 13
 1954 07b0 390000EA 		b	.L123
 1955              	.L103:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 63


1545:../../Source/Kernel/rme_kernel.c ****         }
1546:../../Source/Kernel/rme_kernel.c ****         
1547:../../Source/Kernel/rme_kernel.c ****         /* Signal */
1548:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_CRT:
1549:../../Source/Kernel/rme_kernel.c ****         {
1550:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1551:../../Source/Kernel/rme_kernel.c ****             
1552:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Crt(Cpt,
 1956              		.loc 1 1552 20
 1957 07b4 28301BE5 		ldr	r3, [fp, #-40]
 1958 07b8 0310A0E1 		mov	r1, r3
1553:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1554:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1959              		.loc 1 1554 49
 1960 07bc 34301BE5 		ldr	r3, [fp, #-52]
1552:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1961              		.loc 1 1552 20
 1962 07c0 0320A0E1 		mov	r2, r3
 1963 07c4 14001BE5 		ldr	r0, [fp, #-20]
 1964 07c8 FEFFFFEB 		bl	_RME_Sig_Crt
 1965 07cc 10000BE5 		str	r0, [fp, #-16]
1555:../../Source/Kernel/rme_kernel.c ****             break;
 1966              		.loc 1 1555 13
 1967 07d0 310000EA 		b	.L123
 1968              	.L102:
1556:../../Source/Kernel/rme_kernel.c ****         }
1557:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_DEL:
1558:../../Source/Kernel/rme_kernel.c ****         {
1559:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1560:../../Source/Kernel/rme_kernel.c ****             
1561:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Del(Cpt,
 1969              		.loc 1 1561 20
 1970 07d4 28301BE5 		ldr	r3, [fp, #-40]
 1971 07d8 0310A0E1 		mov	r1, r3
1562:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1563:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1972              		.loc 1 1563 49
 1973 07dc 34301BE5 		ldr	r3, [fp, #-52]
1561:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1974              		.loc 1 1561 20
 1975 07e0 0320A0E1 		mov	r2, r3
 1976 07e4 14001BE5 		ldr	r0, [fp, #-20]
 1977 07e8 FEFFFFEB 		bl	_RME_Sig_Del
 1978 07ec 10000BE5 		str	r0, [fp, #-16]
1564:../../Source/Kernel/rme_kernel.c ****             break;
 1979              		.loc 1 1564 13
 1980 07f0 290000EA 		b	.L123
 1981              	.L101:
1565:../../Source/Kernel/rme_kernel.c ****         }
1566:../../Source/Kernel/rme_kernel.c ****         
1567:../../Source/Kernel/rme_kernel.c ****         /* Invocation */
1568:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_CRT:
1569:../../Source/Kernel/rme_kernel.c ****         {
1570:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1571:../../Source/Kernel/rme_kernel.c ****             
1572:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Crt(Cpt,
 1982              		.loc 1 1572 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 64


 1983 07f4 28301BE5 		ldr	r3, [fp, #-40]
 1984 07f8 0300A0E1 		mov	r0, r3
1573:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1574:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1985              		.loc 1 1574 44
 1986 07fc 34301BE5 		ldr	r3, [fp, #-52]
 1987 0800 2338A0E1 		lsr	r3, r3, #16
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1988              		.loc 1 1572 20
 1989 0804 03C0A0E1 		mov	ip, r3
1575:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 1990              		.loc 1 1575 44
 1991 0808 34301BE5 		ldr	r3, [fp, #-52]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1992              		.loc 1 1572 20
 1993 080c 7320FFE6 		uxth	r2, r3
1576:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Prc */
 1994              		.loc 1 1576 49
 1995 0810 30301BE5 		ldr	r3, [fp, #-48]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1996              		.loc 1 1572 20
 1997 0814 0310A0E1 		mov	r1, r3
 1998 0818 2C301BE5 		ldr	r3, [fp, #-44]
 1999 081c 04308DE5 		str	r3, [sp, #4]
 2000 0820 00108DE5 		str	r1, [sp]
 2001 0824 0230A0E1 		mov	r3, r2
 2002 0828 0C20A0E1 		mov	r2, ip
 2003 082c 0010A0E1 		mov	r1, r0
 2004 0830 14001BE5 		ldr	r0, [fp, #-20]
 2005 0834 FEFFFFEB 		bl	_RME_Inv_Crt
 2006 0838 10000BE5 		str	r0, [fp, #-16]
1577:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Raddr */
1578:../../Source/Kernel/rme_kernel.c ****             break;
 2007              		.loc 1 1578 13
 2008 083c 160000EA 		b	.L123
 2009              	.L100:
1579:../../Source/Kernel/rme_kernel.c ****         }
1580:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_DEL:
1581:../../Source/Kernel/rme_kernel.c ****         {
1582:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1583:../../Source/Kernel/rme_kernel.c ****             
1584:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Del(Cpt,
 2010              		.loc 1 1584 20
 2011 0840 28301BE5 		ldr	r3, [fp, #-40]
 2012 0844 0310A0E1 		mov	r1, r3
1585:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1586:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Inv */
 2013              		.loc 1 1586 49
 2014 0848 34301BE5 		ldr	r3, [fp, #-52]
1584:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2015              		.loc 1 1584 20
 2016 084c 0320A0E1 		mov	r2, r3
 2017 0850 14001BE5 		ldr	r0, [fp, #-20]
 2018 0854 FEFFFFEB 		bl	_RME_Inv_Del
 2019 0858 10000BE5 		str	r0, [fp, #-16]
1587:../../Source/Kernel/rme_kernel.c ****             break;
 2020              		.loc 1 1587 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 65


 2021 085c 0E0000EA 		b	.L123
 2022              	.L98:
1588:../../Source/Kernel/rme_kernel.c ****         }
1589:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_SET:
1590:../../Source/Kernel/rme_kernel.c ****         {
1591:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1592:../../Source/Kernel/rme_kernel.c ****             
1593:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Set(Cpt,
1594:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2023              		.loc 1 1594 44
 2024 0860 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2025              		.loc 1 1593 20
 2026 0864 7310FFE6 		uxth	r1, r3
 2027 0868 30201BE5 		ldr	r2, [fp, #-48]
 2028 086c 2C001BE5 		ldr	r0, [fp, #-44]
1595:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Entry */
1596:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Stack */
1597:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]));                    /* rme_ptr_t Is_Exc_Ret
 2029              		.loc 1 1597 33
 2030 0870 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2031              		.loc 1 1593 20
 2032 0874 2338A0E1 		lsr	r3, r3, #16
 2033 0878 00308DE5 		str	r3, [sp]
 2034 087c 0030A0E1 		mov	r3, r0
 2035 0880 14001BE5 		ldr	r0, [fp, #-20]
 2036 0884 FEFFFFEB 		bl	_RME_Inv_Set
 2037 0888 10000BE5 		str	r0, [fp, #-16]
1598:../../Source/Kernel/rme_kernel.c ****             break;
 2038              		.loc 1 1598 13
 2039 088c 020000EA 		b	.L123
 2040              	.L97:
1599:../../Source/Kernel/rme_kernel.c ****         }
1600:../../Source/Kernel/rme_kernel.c ****         /* This is an error */
1601:../../Source/Kernel/rme_kernel.c ****         default: 
1602:../../Source/Kernel/rme_kernel.c ****         {
1603:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1604:../../Source/Kernel/rme_kernel.c ****             
1605:../../Source/Kernel/rme_kernel.c ****             Retval=RME_ERR_CPT_NULL;
 2041              		.loc 1 1605 19
 2042 0890 0030E0E3 		mvn	r3, #0
 2043 0894 10300BE5 		str	r3, [fp, #-16]
1606:../../Source/Kernel/rme_kernel.c ****             break;
 2044              		.loc 1 1606 13
 2045 0898 00F020E3 		nop
 2046              	.L123:
1607:../../Source/Kernel/rme_kernel.c ****         }
1608:../../Source/Kernel/rme_kernel.c ****     }
1609:../../Source/Kernel/rme_kernel.c ****     
1610:../../Source/Kernel/rme_kernel.c ****     /* We set the registers and return */
1611:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,Retval);
 2047              		.loc 1 1611 5
 2048 089c 10101BE5 		ldr	r1, [fp, #-16]
 2049 08a0 38001BE5 		ldr	r0, [fp, #-56]
 2050 08a4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 2051              	.L69:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 66


1612:../../Source/Kernel/rme_kernel.c **** }
 2052              		.loc 1 1612 1
 2053 08a8 0CD04BE2 		sub	sp, fp, #12
 2054              		.cfi_def_cfa 13, 16
 2055              		@ sp needed
 2056 08ac 3088BDE8 		pop	{r4, r5, fp, pc}
 2057              	.L128:
 2058              		.align	2
 2059              	.L127:
 2060 08b0 00000000 		.word	.L81
 2061 08b4 20000000 		.word	.L99
 2062              		.cfi_endproc
 2063              	.LFE18:
 2065              		.section	.text._RME_Tim_Handler,"ax",%progbits
 2066              		.align	2
 2067              		.global	_RME_Tim_Handler
 2068              		.syntax unified
 2069              		.arm
 2071              	_RME_Tim_Handler:
 2072              	.LFB19:
1613:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Svc_Handler *********************************************/
1614:../../Source/Kernel/rme_kernel.c **** 
1615:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Handler **************************************************
1616:../../Source/Kernel/rme_kernel.c **** Description : The system tick timer handler of RME.
1617:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1618:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Slice - Number of slices passed since last call of
1619:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1620:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1621:../../Source/Kernel/rme_kernel.c **** Return      : None.
1622:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1623:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Handler(struct RME_Reg_Struct* Reg,
1624:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Slice)
1625:../../Source/Kernel/rme_kernel.c **** {
 2073              		.loc 1 1625 1
 2074              		.cfi_startproc
 2075              		@ args = 0, pretend = 0, frame = 16
 2076              		@ frame_needed = 1, uses_anonymous_args = 0
 2077 0000 00482DE9 		push	{fp, lr}
 2078              		.cfi_def_cfa_offset 8
 2079              		.cfi_offset 11, -8
 2080              		.cfi_offset 14, -4
 2081 0004 04B08DE2 		add	fp, sp, #4
 2082              		.cfi_def_cfa 11, 4
 2083 0008 10D04DE2 		sub	sp, sp, #16
 2084 000c 10000BE5 		str	r0, [fp, #-16]
 2085 0010 14100BE5 		str	r1, [fp, #-20]
1626:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
1627:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1628:../../Source/Kernel/rme_kernel.c ****     
1629:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 2086              		.loc 1 1629 10
 2087 0014 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2088 0018 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2089 001c 08300BE5 		str	r3, [fp, #-8]
1630:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 2090              		.loc 1 1630 12
 2091 0020 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 67


 2092 0024 043093E5 		ldr	r3, [r3, #4]
 2093 0028 0C300BE5 		str	r3, [fp, #-12]
1631:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2094              		.loc 1 1631 22
 2095 002c 0C301BE5 		ldr	r3, [fp, #-12]
 2096 0030 183093E5 		ldr	r3, [r3, #24]
 2097              		.loc 1 1631 7
 2098 0034 0E0173E3 		cmn	r3, #-2147483645
 2099 0038 1500008A 		bhi	.L130
1632:../../Source/Kernel/rme_kernel.c ****     {
1633:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1634:../../Source/Kernel/rme_kernel.c **** 
1635:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, and see if the timeslice is used up */
1636:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2100              		.loc 1 1636 32
 2101 003c 0C301BE5 		ldr	r3, [fp, #-12]
 2102 0040 183093E5 		ldr	r3, [r3, #24]
 2103              		.loc 1 1636 11
 2104 0044 14201BE5 		ldr	r2, [fp, #-20]
 2105 0048 030052E1 		cmp	r2, r3
 2106 004c 0600002A 		bcs	.L131
1637:../../Source/Kernel/rme_kernel.c ****         {
1638:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1639:../../Source/Kernel/rme_kernel.c ****             
1640:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2107              		.loc 1 1640 27
 2108 0050 0C301BE5 		ldr	r3, [fp, #-12]
 2109 0054 182093E5 		ldr	r2, [r3, #24]
 2110              		.loc 1 1640 33
 2111 0058 14301BE5 		ldr	r3, [fp, #-20]
 2112 005c 032042E0 		sub	r2, r2, r3
 2113 0060 0C301BE5 		ldr	r3, [fp, #-12]
 2114 0064 182083E5 		str	r2, [r3, #24]
 2115 0068 090000EA 		b	.L130
 2116              	.L131:
1641:../../Source/Kernel/rme_kernel.c ****         }
1642:../../Source/Kernel/rme_kernel.c ****         else
1643:../../Source/Kernel/rme_kernel.c ****         {
1644:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1645:../../Source/Kernel/rme_kernel.c **** 
1646:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
1647:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 2117              		.loc 1 1647 33
 2118 006c 0C301BE5 		ldr	r3, [fp, #-12]
 2119 0070 0020A0E3 		mov	r2, #0
 2120 0074 182083E5 		str	r2, [r3, #24]
1648:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 2121              		.loc 1 1648 13
 2122 0078 0C001BE5 		ldr	r0, [fp, #-12]
 2123 007c FEFFFFEB 		bl	_RME_Run_Del
1649:../../Source/Kernel/rme_kernel.c ****             
1650:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
1651:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 2124              		.loc 1 1651 33
 2125 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2126 0084 0220A0E3 		mov	r2, #2
 2127 0088 1C2083E5 		str	r2, [r3, #28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 68


1652:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 2128              		.loc 1 1652 13
 2129 008c 0C001BE5 		ldr	r0, [fp, #-12]
 2130 0090 FEFFFFEB 		bl	_RME_Run_Notif
 2131              	.L130:
1653:../../Source/Kernel/rme_kernel.c ****         }
1654:../../Source/Kernel/rme_kernel.c ****     }
1655:../../Source/Kernel/rme_kernel.c ****     else
1656:../../Source/Kernel/rme_kernel.c ****     {
1657:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1658:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1659:../../Source/Kernel/rme_kernel.c ****     }
1660:../../Source/Kernel/rme_kernel.c **** 
1661:../../Source/Kernel/rme_kernel.c ****     /* Send to the system tick timer endpoint. This endpoint is per-core */
1662:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_Snd(Local->Sig_Tim);
 2132              		.loc 1 1662 5
 2133 0094 08301BE5 		ldr	r3, [fp, #-8]
 2134 0098 083093E5 		ldr	r3, [r3, #8]
 2135 009c 0300A0E1 		mov	r0, r3
 2136 00a0 FEFFFFEB 		bl	_RME_Kern_Snd
1663:../../Source/Kernel/rme_kernel.c **** 
1664:../../Source/Kernel/rme_kernel.c ****     /* All kernel send complete, now pick the highest priority thread to run */
1665:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 2137              		.loc 1 1665 5
 2138 00a4 08101BE5 		ldr	r1, [fp, #-8]
 2139 00a8 10001BE5 		ldr	r0, [fp, #-16]
 2140 00ac FEFFFFEB 		bl	_RME_Kern_High
1666:../../Source/Kernel/rme_kernel.c **** }
 2141              		.loc 1 1666 1
 2142 00b0 00F020E3 		nop
 2143 00b4 04D04BE2 		sub	sp, fp, #4
 2144              		.cfi_def_cfa 13, 8
 2145              		@ sp needed
 2146 00b8 0088BDE8 		pop	{fp, pc}
 2147              		.cfi_endproc
 2148              	.LFE19:
 2150              		.section	.text._RME_Tim_Elapse,"ax",%progbits
 2151              		.align	2
 2152              		.global	_RME_Tim_Elapse
 2153              		.syntax unified
 2154              		.arm
 2156              	_RME_Tim_Elapse:
 2157              	.LFB20:
1667:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Handler *********************************************/
1668:../../Source/Kernel/rme_kernel.c **** 
1669:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Elapse ***************************************************
1670:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1671:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Slice - Number of slices passed since last call of
1672:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1673:../../Source/Kernel/rme_kernel.c **** Output      : None.
1674:../../Source/Kernel/rme_kernel.c **** Return      : None.
1675:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1676:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Elapse(rme_ptr_t Slice)
1677:../../Source/Kernel/rme_kernel.c **** {
 2158              		.loc 1 1677 1
 2159              		.cfi_startproc
 2160              		@ args = 0, pretend = 0, frame = 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 69


 2161              		@ frame_needed = 1, uses_anonymous_args = 0
 2162              		@ link register save eliminated.
 2163 0000 04B02DE5 		str	fp, [sp, #-4]!
 2164              		.cfi_def_cfa_offset 4
 2165              		.cfi_offset 11, -4
 2166 0004 00B08DE2 		add	fp, sp, #0
 2167              		.cfi_def_cfa_register 11
 2168 0008 14D04DE2 		sub	sp, sp, #20
 2169 000c 10000BE5 		str	r0, [fp, #-16]
1678:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1679:../../Source/Kernel/rme_kernel.c ****     
1680:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 2170              		.loc 1 1680 12
 2171 0010 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2172 0014 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2173 0018 043093E5 		ldr	r3, [r3, #4]
 2174 001c 08300BE5 		str	r3, [fp, #-8]
1681:../../Source/Kernel/rme_kernel.c ****     
1682:../../Source/Kernel/rme_kernel.c ****     /* We don't want the slices less than 1 because we want to keep the kernel
1683:../../Source/Kernel/rme_kernel.c ****      * SVC invariants - the current thread must still be running after this */
1684:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2175              		.loc 1 1684 22
 2176 0020 08301BE5 		ldr	r3, [fp, #-8]
 2177 0024 183093E5 		ldr	r3, [r3, #24]
 2178              		.loc 1 1684 7
 2179 0028 0E0173E3 		cmn	r3, #-2147483645
 2180 002c 0E00008A 		bhi	.L135
1685:../../Source/Kernel/rme_kernel.c ****     {
1686:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1687:../../Source/Kernel/rme_kernel.c **** 
1688:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, but no less than 1, so the thread is
1689:../../Source/Kernel/rme_kernel.c ****          * always running, which keeps the invariant of the kernel */
1690:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2181              		.loc 1 1690 32
 2182 0030 08301BE5 		ldr	r3, [fp, #-8]
 2183 0034 183093E5 		ldr	r3, [r3, #24]
 2184              		.loc 1 1690 11
 2185 0038 10201BE5 		ldr	r2, [fp, #-16]
 2186 003c 030052E1 		cmp	r2, r3
 2187 0040 0600002A 		bcs	.L134
1691:../../Source/Kernel/rme_kernel.c ****         {
1692:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1693:../../Source/Kernel/rme_kernel.c ****             
1694:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2188              		.loc 1 1694 27
 2189 0044 08301BE5 		ldr	r3, [fp, #-8]
 2190 0048 182093E5 		ldr	r2, [r3, #24]
 2191              		.loc 1 1694 33
 2192 004c 10301BE5 		ldr	r3, [fp, #-16]
 2193 0050 032042E0 		sub	r2, r2, r3
 2194 0054 08301BE5 		ldr	r3, [fp, #-8]
 2195 0058 182083E5 		str	r2, [r3, #24]
1695:../../Source/Kernel/rme_kernel.c ****         }
1696:../../Source/Kernel/rme_kernel.c ****         else
1697:../../Source/Kernel/rme_kernel.c ****         {
1698:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1699:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 70


1700:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=1U;
1701:../../Source/Kernel/rme_kernel.c ****         }
1702:../../Source/Kernel/rme_kernel.c ****     }
1703:../../Source/Kernel/rme_kernel.c ****     else
1704:../../Source/Kernel/rme_kernel.c ****     {
1705:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1706:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1707:../../Source/Kernel/rme_kernel.c ****     }
1708:../../Source/Kernel/rme_kernel.c **** }
 2196              		.loc 1 1708 1
 2197 005c 020000EA 		b	.L135
 2198              	.L134:
1700:../../Source/Kernel/rme_kernel.c ****         }
 2199              		.loc 1 1700 33
 2200 0060 08301BE5 		ldr	r3, [fp, #-8]
 2201 0064 0120A0E3 		mov	r2, #1
 2202 0068 182083E5 		str	r2, [r3, #24]
 2203              	.L135:
 2204              		.loc 1 1708 1
 2205 006c 00F020E3 		nop
 2206 0070 00D08BE2 		add	sp, fp, #0
 2207              		.cfi_def_cfa_register 13
 2208              		@ sp needed
 2209 0074 04B09DE4 		ldr	fp, [sp], #4
 2210              		.cfi_restore 11
 2211              		.cfi_def_cfa_offset 0
 2212 0078 1EFF2FE1 		bx	lr
 2213              		.cfi_endproc
 2214              	.LFE20:
 2216              		.section	.text._RME_Tim_Future,"ax",%progbits
 2217              		.align	2
 2218              		.global	_RME_Tim_Future
 2219              		.syntax unified
 2220              		.arm
 2222              	_RME_Tim_Future:
 2223              	.LFB21:
1709:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Elapse **********************************************/
1710:../../Source/Kernel/rme_kernel.c **** 
1711:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Future ***************************************************
1712:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1713:../../Source/Kernel/rme_kernel.c **** Input       : None.
1714:../../Source/Kernel/rme_kernel.c **** Output      : None.
1715:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - How many slices to program until the next timeout.
1716:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1717:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Tim_Future(void)
1718:../../Source/Kernel/rme_kernel.c **** {
 2224              		.loc 1 1718 1
 2225              		.cfi_startproc
 2226              		@ args = 0, pretend = 0, frame = 0
 2227              		@ frame_needed = 1, uses_anonymous_args = 0
 2228              		@ link register save eliminated.
 2229 0000 04B02DE5 		str	fp, [sp, #-4]!
 2230              		.cfi_def_cfa_offset 4
 2231              		.cfi_offset 11, -4
 2232 0004 00B08DE2 		add	fp, sp, #0
 2233              		.cfi_def_cfa_register 11
1719:../../Source/Kernel/rme_kernel.c ****     /* If we're running an infinite thread, just program infinite time,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 71


1720:../../Source/Kernel/rme_kernel.c ****      * these values are very large so that's fine */
1721:../../Source/Kernel/rme_kernel.c ****     return RME_CPU_LOCAL()->Thd_Cur->Sched.Slice;
 2234              		.loc 1 1721 27
 2235 0008 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2236 000c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2237 0010 043093E5 		ldr	r3, [r3, #4]
 2238              		.loc 1 1721 43
 2239 0014 183093E5 		ldr	r3, [r3, #24]
1722:../../Source/Kernel/rme_kernel.c **** }
 2240              		.loc 1 1722 1
 2241 0018 0300A0E1 		mov	r0, r3
 2242 001c 00D08BE2 		add	sp, fp, #0
 2243              		.cfi_def_cfa_register 13
 2244              		@ sp needed
 2245 0020 04B09DE4 		ldr	fp, [sp], #4
 2246              		.cfi_restore 11
 2247              		.cfi_def_cfa_offset 0
 2248 0024 1EFF2FE1 		bx	lr
 2249              		.cfi_endproc
 2250              	.LFE21:
 2252              		.section	.text._RME_Cpt_Boot_Init,"ax",%progbits
 2253              		.align	2
 2254              		.global	_RME_Cpt_Boot_Init
 2255              		.syntax unified
 2256              		.arm
 2258              	_RME_Cpt_Boot_Init:
 2259              	.LFB22:
1723:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Future **********************************************/
1724:../../Source/Kernel/rme_kernel.c **** 
1725:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Init ************************************************
1726:../../Source/Kernel/rme_kernel.c **** Description : Create the first capability table in the system, at boot-time. 
1727:../../Source/Kernel/rme_kernel.c ****               This function must be called at system startup before setting up
1728:../../Source/Kernel/rme_kernel.c ****               any other kernel objects.
1729:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
1730:../../Source/Kernel/rme_kernel.c **** Input       : rme_cid_t Cap_Cpt - The capability slot that you want this newly
1731:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1732:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1733:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the
1734:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1735:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capability entries in the
1736:../../Source/Kernel/rme_kernel.c ****                                     capability table.
1737:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1738:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1739:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Init(rme_cid_t Cap_Cpt,
1740:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Vaddr,
1741:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Entry_Num)
1742:../../Source/Kernel/rme_kernel.c **** {
 2260              		.loc 1 1742 1
 2261              		.cfi_startproc
 2262              		@ args = 0, pretend = 0, frame = 24
 2263              		@ frame_needed = 1, uses_anonymous_args = 0
 2264 0000 00482DE9 		push	{fp, lr}
 2265              		.cfi_def_cfa_offset 8
 2266              		.cfi_offset 11, -8
 2267              		.cfi_offset 14, -4
 2268 0004 04B08DE2 		add	fp, sp, #4
 2269              		.cfi_def_cfa 11, 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 72


 2270 0008 18D04DE2 		sub	sp, sp, #24
 2271 000c 10000BE5 		str	r0, [fp, #-16]
 2272 0010 14100BE5 		str	r1, [fp, #-20]
 2273 0014 18200BE5 		str	r2, [fp, #-24]
1743:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1744:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1745:../../Source/Kernel/rme_kernel.c **** 
1746:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1747:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2274              		.loc 1 1747 7
 2275 0018 18301BE5 		ldr	r3, [fp, #-24]
 2276 001c 000053E3 		cmp	r3, #0
 2277 0020 0200000A 		beq	.L139
 2278              		.loc 1 1747 23 discriminator 1
 2279 0024 18301BE5 		ldr	r3, [fp, #-24]
 2280 0028 800053E3 		cmp	r3, #128
 2281 002c 0100009A 		bls	.L140
 2282              	.L139:
1748:../../Source/Kernel/rme_kernel.c ****     {
1749:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1750:../../Source/Kernel/rme_kernel.c ****         
1751:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2283              		.loc 1 1751 16
 2284 0030 0230E0E3 		mvn	r3, #2
 2285 0034 300000EA 		b	.L141
 2286              	.L140:
1752:../../Source/Kernel/rme_kernel.c ****     }
1753:../../Source/Kernel/rme_kernel.c ****     else
1754:../../Source/Kernel/rme_kernel.c ****     {
1755:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1756:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1757:../../Source/Kernel/rme_kernel.c ****     }
1758:../../Source/Kernel/rme_kernel.c ****     
1759:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
1760:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2287              		.loc 1 1760 8
 2288 0038 18301BE5 		ldr	r3, [fp, #-24]
 2289 003c 8332A0E1 		lsl	r3, r3, #5
 2290 0040 0310A0E1 		mov	r1, r3
 2291 0044 14001BE5 		ldr	r0, [fp, #-20]
 2292 0048 FEFFFFEB 		bl	_RME_Kot_Mark
 2293 004c 0030A0E1 		mov	r3, r0
 2294              		.loc 1 1760 7 discriminator 1
 2295 0050 000053E3 		cmp	r3, #0
 2296 0054 0100000A 		beq	.L142
1761:../../Source/Kernel/rme_kernel.c ****     {
1762:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1763:../../Source/Kernel/rme_kernel.c ****         
1764:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2297              		.loc 1 1764 16
 2298 0058 0330E0E3 		mvn	r3, #3
 2299 005c 260000EA 		b	.L141
 2300              	.L142:
1765:../../Source/Kernel/rme_kernel.c ****     }
1766:../../Source/Kernel/rme_kernel.c ****     else
1767:../../Source/Kernel/rme_kernel.c ****     {
1768:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 73


1769:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1770:../../Source/Kernel/rme_kernel.c ****     }
1771:../../Source/Kernel/rme_kernel.c **** 
1772:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1773:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2301              		.loc 1 1773 14
 2302 0060 0030A0E3 		mov	r3, #0
 2303 0064 08300BE5 		str	r3, [fp, #-8]
 2304              		.loc 1 1773 5
 2305 0068 090000EA 		b	.L143
 2306              	.L144:
1774:../../Source/Kernel/rme_kernel.c ****     {
1775:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2307              		.loc 1 1775 9
 2308 006c 08301BE5 		ldr	r3, [fp, #-8]
 2309 0070 8322A0E1 		lsl	r2, r3, #5
 2310 0074 14301BE5 		ldr	r3, [fp, #-20]
 2311 0078 033082E0 		add	r3, r2, r3
 2312 007c 0320A0E1 		mov	r2, r3
 2313 0080 0030A0E3 		mov	r3, #0
 2314 0084 003082E5 		str	r3, [r2]
1773:../../Source/Kernel/rme_kernel.c ****     {
 2315              		.loc 1 1773 39 discriminator 3
 2316 0088 08301BE5 		ldr	r3, [fp, #-8]
 2317 008c 013083E2 		add	r3, r3, #1
 2318 0090 08300BE5 		str	r3, [fp, #-8]
 2319              	.L143:
1773:../../Source/Kernel/rme_kernel.c ****     {
 2320              		.loc 1 1773 23 discriminator 1
 2321 0094 08201BE5 		ldr	r2, [fp, #-8]
 2322 0098 18301BE5 		ldr	r3, [fp, #-24]
 2323 009c 030052E1 		cmp	r2, r3
 2324 00a0 F1FFFF3A 		bcc	.L144
1776:../../Source/Kernel/rme_kernel.c ****     }
1777:../../Source/Kernel/rme_kernel.c **** 
1778:../../Source/Kernel/rme_kernel.c ****     Cpt=&(((struct RME_Cap_Cpt*)Vaddr)[Cap_Cpt]);
 2325              		.loc 1 1778 39
 2326 00a4 10301BE5 		ldr	r3, [fp, #-16]
 2327 00a8 8322A0E1 		lsl	r2, r3, #5
 2328 00ac 14301BE5 		ldr	r3, [fp, #-20]
 2329 00b0 033082E0 		add	r3, r2, r3
 2330              		.loc 1 1778 8
 2331 00b4 0C300BE5 		str	r3, [fp, #-12]
1779:../../Source/Kernel/rme_kernel.c ****     
1780:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1781:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Root_Ref=1U;
 2332              		.loc 1 1781 23
 2333 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 2334 00bc 0120A0E3 		mov	r2, #1
 2335 00c0 042083E5 		str	r2, [r3, #4]
1782:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Object=Vaddr;
 2336              		.loc 1 1782 21
 2337 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 2338 00c8 14201BE5 		ldr	r2, [fp, #-20]
 2339 00cc 0C2083E5 		str	r2, [r3, #12]
1783:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Flag=RME_CPT_FLAG_ALL;
 2340              		.loc 1 1783 19
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 74


 2341 00d0 0C301BE5 		ldr	r3, [fp, #-12]
 2342 00d4 FF20A0E3 		mov	r2, #255
 2343 00d8 082083E5 		str	r2, [r3, #8]
1784:../../Source/Kernel/rme_kernel.c ****     
1785:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1786:../../Source/Kernel/rme_kernel.c ****     Cpt->Entry_Num=Entry_Num;
 2344              		.loc 1 1786 19
 2345 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 2346 00e0 18201BE5 		ldr	r2, [fp, #-24]
 2347 00e4 142083E5 		str	r2, [r3, #20]
1787:../../Source/Kernel/rme_kernel.c **** 
1788:../../Source/Kernel/rme_kernel.c ****     /* At last, write into slot the correct information, and set status to VALID */
1789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt->Head.Type_Stat),
 2348              		.loc 1 1789 5
 2349 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 2350 00ec 0314A0E3 		mov	r1, #50331648
 2351 00f0 0300A0E1 		mov	r0, r3
 2352 00f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
1790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1793:../../Source/Kernel/rme_kernel.c **** 
1794:../../Source/Kernel/rme_kernel.c ****     return Cap_Cpt;
 2353              		.loc 1 1794 12
 2354 00f8 10301BE5 		ldr	r3, [fp, #-16]
 2355              	.L141:
1795:../../Source/Kernel/rme_kernel.c **** }
 2356              		.loc 1 1795 1
 2357 00fc 0300A0E1 		mov	r0, r3
 2358 0100 04D04BE2 		sub	sp, fp, #4
 2359              		.cfi_def_cfa 13, 8
 2360              		@ sp needed
 2361 0104 0088BDE8 		pop	{fp, pc}
 2362              		.cfi_endproc
 2363              	.LFE22:
 2365              		.section	.text._RME_Cpt_Boot_Crt,"ax",%progbits
 2366              		.align	2
 2367              		.global	_RME_Cpt_Boot_Crt
 2368              		.syntax unified
 2369              		.arm
 2371              	_RME_Cpt_Boot_Crt:
 2372              	.LFB23:
1796:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Init *******************************************/
1797:../../Source/Kernel/rme_kernel.c **** 
1798:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Crt *************************************************
1799:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time capability table at the designated memory
1800:../../Source/Kernel/rme_kernel.c ****               address.
1801:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1802:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1803:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1804:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1805:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1806:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1807:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1808:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the 
1809:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1810:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capabilities in the capability table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 75


1811:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1812:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1813:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
1814:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
1815:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Crt,
1816:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
1817:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Entry_Num)
1818:../../Source/Kernel/rme_kernel.c **** {
 2373              		.loc 1 1818 1
 2374              		.cfi_startproc
 2375              		@ args = 4, pretend = 0, frame = 32
 2376              		@ frame_needed = 1, uses_anonymous_args = 0
 2377 0000 00482DE9 		push	{fp, lr}
 2378              		.cfi_def_cfa_offset 8
 2379              		.cfi_offset 11, -8
 2380              		.cfi_offset 14, -4
 2381 0004 04B08DE2 		add	fp, sp, #4
 2382              		.cfi_def_cfa 11, 4
 2383 0008 20D04DE2 		sub	sp, sp, #32
 2384 000c 18000BE5 		str	r0, [fp, #-24]
 2385 0010 1C100BE5 		str	r1, [fp, #-28]
 2386 0014 20200BE5 		str	r2, [fp, #-32]
 2387 0018 24300BE5 		str	r3, [fp, #-36]
1819:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1820:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1821:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1822:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1823:../../Source/Kernel/rme_kernel.c ****     
1824:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big - this is not restricted by RME_CPT_ENTRY_MAX */
1825:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2388              		.loc 1 1825 7
 2389 001c 04309BE5 		ldr	r3, [fp, #4]
 2390 0020 000053E3 		cmp	r3, #0
 2391 0024 0200000A 		beq	.L146
 2392              		.loc 1 1825 23 discriminator 1
 2393 0028 04309BE5 		ldr	r3, [fp, #4]
 2394 002c 800053E3 		cmp	r3, #128
 2395 0030 0100009A 		bls	.L147
 2396              	.L146:
1826:../../Source/Kernel/rme_kernel.c ****     {
1827:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1828:../../Source/Kernel/rme_kernel.c ****         
1829:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2397              		.loc 1 1829 16
 2398 0034 0230E0E3 		mvn	r3, #2
 2399 0038 B10000EA 		b	.L148
 2400              	.L147:
1830:../../Source/Kernel/rme_kernel.c ****     }
1831:../../Source/Kernel/rme_kernel.c ****     else
1832:../../Source/Kernel/rme_kernel.c ****     {
1833:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1834:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1835:../../Source/Kernel/rme_kernel.c ****     }
1836:../../Source/Kernel/rme_kernel.c **** 
1837:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1838:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,
 2401              		.loc 1 1838 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 76


 2402 003c 1C301BE5 		ldr	r3, [fp, #-28]
 2403 0040 803003E2 		and	r3, r3, #128
 2404 0044 000053E3 		cmp	r3, #0
 2405 0048 1C00001A 		bne	.L149
 2406              		.loc 1 1838 5 is_stmt 0 discriminator 1
 2407 004c 18301BE5 		ldr	r3, [fp, #-24]
 2408 0050 142093E5 		ldr	r2, [r3, #20]
 2409 0054 1C301BE5 		ldr	r3, [fp, #-28]
 2410 0058 030052E1 		cmp	r2, r3
 2411 005c 0100008A 		bhi	.L150
 2412              		.loc 1 1838 5 discriminator 3
 2413 0060 0230E0E3 		mvn	r3, #2
 2414              		.loc 1 1838 5
 2415 0064 A60000EA 		b	.L148
 2416              	.L150:
 2417              		.loc 1 1838 5 discriminator 4
 2418 0068 1C301BE5 		ldr	r3, [fp, #-28]
 2419 006c 8322A0E1 		lsl	r2, r3, #5
 2420 0070 18301BE5 		ldr	r3, [fp, #-24]
 2421 0074 0C3093E5 		ldr	r3, [r3, #12]
 2422 0078 033082E0 		add	r3, r2, r3
 2423 007c 0C300BE5 		str	r3, [fp, #-12]
 2424 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2425 0084 0300A0E1 		mov	r0, r3
 2426 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2427 008c 10000BE5 		str	r0, [fp, #-16]
 2428              		.loc 1 1838 5 discriminator 1
 2429 0090 10301BE5 		ldr	r3, [fp, #-16]
 2430 0094 FF3803E2 		and	r3, r3, #16711680
 2431 0098 020853E3 		cmp	r3, #131072
 2432 009c 0100001A 		bne	.L151
 2433              		.loc 1 1838 5 discriminator 5
 2434 00a0 0830E0E3 		mvn	r3, #8
 2435              		.loc 1 1838 5
 2436 00a4 960000EA 		b	.L148
 2437              	.L151:
 2438              		.loc 1 1838 5 discriminator 6
 2439 00a8 10301BE5 		ldr	r3, [fp, #-16]
 2440 00ac 233CA0E1 		lsr	r3, r3, #24
 2441 00b0 030053E3 		cmp	r3, #3
 2442 00b4 3F00000A 		beq	.L152
 2443              		.loc 1 1838 5 discriminator 7
 2444 00b8 0130E0E3 		mvn	r3, #1
 2445              		.loc 1 1838 5
 2446 00bc 900000EA 		b	.L148
 2447              	.L149:
 2448              		.loc 1 1838 5 discriminator 2
 2449 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 2450 00c4 2324A0E1 		lsr	r2, r3, #8
 2451 00c8 18301BE5 		ldr	r3, [fp, #-24]
 2452 00cc 143093E5 		ldr	r3, [r3, #20]
 2453 00d0 030052E1 		cmp	r2, r3
 2454 00d4 0100003A 		bcc	.L153
 2455              		.loc 1 1838 5 discriminator 8
 2456 00d8 0230E0E3 		mvn	r3, #2
 2457              		.loc 1 1838 5
 2458 00dc 880000EA 		b	.L148
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 77


 2459              	.L153:
 2460              		.loc 1 1838 5 discriminator 9
 2461 00e0 1C301BE5 		ldr	r3, [fp, #-28]
 2462 00e4 2334A0E1 		lsr	r3, r3, #8
 2463 00e8 8322A0E1 		lsl	r2, r3, #5
 2464 00ec 18301BE5 		ldr	r3, [fp, #-24]
 2465 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2466 00f4 033082E0 		add	r3, r2, r3
 2467 00f8 0C300BE5 		str	r3, [fp, #-12]
 2468 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2469 0100 0300A0E1 		mov	r0, r3
 2470 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2471 0108 10000BE5 		str	r0, [fp, #-16]
 2472              		.loc 1 1838 5 discriminator 1
 2473 010c 10301BE5 		ldr	r3, [fp, #-16]
 2474 0110 FF3803E2 		and	r3, r3, #16711680
 2475 0114 020853E3 		cmp	r3, #131072
 2476 0118 0100001A 		bne	.L154
 2477              		.loc 1 1838 5 discriminator 10
 2478 011c 0830E0E3 		mvn	r3, #8
 2479              		.loc 1 1838 5
 2480 0120 770000EA 		b	.L148
 2481              	.L154:
 2482              		.loc 1 1838 5 discriminator 11
 2483 0124 10301BE5 		ldr	r3, [fp, #-16]
 2484 0128 233CA0E1 		lsr	r3, r3, #24
 2485 012c 030053E3 		cmp	r3, #3
 2486 0130 0100000A 		beq	.L155
 2487              		.loc 1 1838 5 discriminator 12
 2488 0134 0130E0E3 		mvn	r3, #1
 2489              		.loc 1 1838 5
 2490 0138 710000EA 		b	.L148
 2491              	.L155:
 2492              		.loc 1 1838 5 discriminator 13
 2493 013c 1C301BE5 		ldr	r3, [fp, #-28]
 2494 0140 7F2003E2 		and	r2, r3, #127
 2495 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2496 0148 143093E5 		ldr	r3, [r3, #20]
 2497 014c 030052E1 		cmp	r2, r3
 2498 0150 0100003A 		bcc	.L156
 2499              		.loc 1 1838 5 discriminator 14
 2500 0154 0230E0E3 		mvn	r3, #2
 2501              		.loc 1 1838 5
 2502 0158 690000EA 		b	.L148
 2503              	.L156:
 2504              		.loc 1 1838 5 discriminator 15
 2505 015c 1C301BE5 		ldr	r3, [fp, #-28]
 2506 0160 7F3003E2 		and	r3, r3, #127
 2507 0164 8322A0E1 		lsl	r2, r3, #5
 2508 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2509 016c 0C3093E5 		ldr	r3, [r3, #12]
 2510 0170 033082E0 		add	r3, r2, r3
 2511 0174 0C300BE5 		str	r3, [fp, #-12]
 2512 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2513 017c 0300A0E1 		mov	r0, r3
 2514 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2515 0184 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 78


 2516              		.loc 1 1838 5 discriminator 1
 2517 0188 10301BE5 		ldr	r3, [fp, #-16]
 2518 018c FF3803E2 		and	r3, r3, #16711680
 2519 0190 020853E3 		cmp	r3, #131072
 2520 0194 0100001A 		bne	.L157
 2521              		.loc 1 1838 5 discriminator 16
 2522 0198 0830E0E3 		mvn	r3, #8
 2523              		.loc 1 1838 5
 2524 019c 580000EA 		b	.L148
 2525              	.L157:
 2526              		.loc 1 1838 5 discriminator 17
 2527 01a0 10301BE5 		ldr	r3, [fp, #-16]
 2528 01a4 233CA0E1 		lsr	r3, r3, #24
 2529 01a8 030053E3 		cmp	r3, #3
 2530 01ac 0100000A 		beq	.L152
 2531              		.loc 1 1838 5 discriminator 18
 2532 01b0 0130E0E3 		mvn	r3, #1
 2533              		.loc 1 1838 5
 2534 01b4 520000EA 		b	.L148
 2535              	.L152:
1839:../../Source/Kernel/rme_kernel.c ****                    Cap_Cpt_Crt,
1840:../../Source/Kernel/rme_kernel.c ****                    RME_CAP_TYPE_CPT,
1841:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,
1842:../../Source/Kernel/rme_kernel.c ****                    Cpt_Op,
1843:../../Source/Kernel/rme_kernel.c ****                    Type_Stat);
1844:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1845:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2536              		.loc 1 1845 5 is_stmt 1
 2537 01b8 0C301BE5 		ldr	r3, [fp, #-12]
 2538 01bc 083093E5 		ldr	r3, [r3, #8]
 2539 01c0 013003E2 		and	r3, r3, #1
 2540 01c4 000053E3 		cmp	r3, #0
 2541 01c8 0100001A 		bne	.L158
 2542              		.loc 1 1845 5 is_stmt 0 discriminator 1
 2543 01cc 0630E0E3 		mvn	r3, #6
 2544              		.loc 1 1845 5
 2545 01d0 4B0000EA 		b	.L148
 2546              	.L158:
1846:../../Source/Kernel/rme_kernel.c **** 
1847:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1848:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 2547              		.loc 1 1848 5 is_stmt 1
 2548 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 2549 01d8 142093E5 		ldr	r2, [r3, #20]
 2550 01dc 20301BE5 		ldr	r3, [fp, #-32]
 2551 01e0 030052E1 		cmp	r2, r3
 2552 01e4 0100008A 		bhi	.L159
 2553              		.loc 1 1848 5 is_stmt 0 discriminator 1
 2554 01e8 0230E0E3 		mvn	r3, #2
 2555              		.loc 1 1848 5
 2556 01ec 440000EA 		b	.L148
 2557              	.L159:
 2558              		.loc 1 1848 5 discriminator 2
 2559 01f0 20301BE5 		ldr	r3, [fp, #-32]
 2560 01f4 8322A0E1 		lsl	r2, r3, #5
 2561 01f8 0C301BE5 		ldr	r3, [fp, #-12]
 2562 01fc 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 79


 2563 0200 033082E0 		add	r3, r2, r3
 2564 0204 14300BE5 		str	r3, [fp, #-20]
1849:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1850:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 2565              		.loc 1 1850 5 is_stmt 1
 2566 0208 14301BE5 		ldr	r3, [fp, #-20]
 2567 020c 0128A0E3 		mov	r2, #65536
 2568 0210 0010A0E3 		mov	r1, #0
 2569 0214 0300A0E1 		mov	r0, r3
 2570 0218 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 2571 021c 0030A0E1 		mov	r3, r0
 2572              		.loc 1 1850 5 is_stmt 0 discriminator 1
 2573 0220 000053E3 		cmp	r3, #0
 2574 0224 0100001A 		bne	.L160
 2575 0228 0430E0E3 		mvn	r3, #4
 2576              		.loc 1 1850 5
 2577 022c 340000EA 		b	.L148
 2578              	.L160:
 2579              		.loc 1 1850 5 discriminator 2
 2580 0230 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 2581 0234 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 2582 0238 002093E5 		ldr	r2, [r3]
 2583 023c 14301BE5 		ldr	r3, [fp, #-20]
 2584 0240 102083E5 		str	r2, [r3, #16]
1851:../../Source/Kernel/rme_kernel.c **** 
1852:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1853:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2585              		.loc 1 1853 8 is_stmt 1
 2586 0244 04309BE5 		ldr	r3, [fp, #4]
 2587 0248 8332A0E1 		lsl	r3, r3, #5
 2588 024c 0310A0E1 		mov	r1, r3
 2589 0250 24001BE5 		ldr	r0, [fp, #-36]
 2590 0254 FEFFFFEB 		bl	_RME_Kot_Mark
 2591 0258 0030A0E1 		mov	r3, r0
 2592              		.loc 1 1853 7 discriminator 1
 2593 025c 000053E3 		cmp	r3, #0
 2594 0260 0500000A 		beq	.L161
1854:../../Source/Kernel/rme_kernel.c ****     {
1855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1856:../../Source/Kernel/rme_kernel.c ****         
1857:../../Source/Kernel/rme_kernel.c ****         /* Abort the creation process */
1858:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 2595              		.loc 1 1858 9
 2596 0264 14301BE5 		ldr	r3, [fp, #-20]
 2597 0268 0010A0E3 		mov	r1, #0
 2598 026c 0300A0E1 		mov	r0, r3
 2599 0270 FEFFFFEB 		bl	__RME_A7A_Write_Release
1859:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2600              		.loc 1 1859 16
 2601 0274 0330E0E3 		mvn	r3, #3
 2602 0278 210000EA 		b	.L148
 2603              	.L161:
1860:../../Source/Kernel/rme_kernel.c ****     }
1861:../../Source/Kernel/rme_kernel.c ****     else
1862:../../Source/Kernel/rme_kernel.c ****     {
1863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1864:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 80


1865:../../Source/Kernel/rme_kernel.c ****     }
1866:../../Source/Kernel/rme_kernel.c **** 
1867:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1868:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2604              		.loc 1 1868 14
 2605 027c 0030A0E3 		mov	r3, #0
 2606 0280 08300BE5 		str	r3, [fp, #-8]
 2607              		.loc 1 1868 5
 2608 0284 090000EA 		b	.L162
 2609              	.L163:
1869:../../Source/Kernel/rme_kernel.c ****     {
1870:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2610              		.loc 1 1870 9
 2611 0288 08301BE5 		ldr	r3, [fp, #-8]
 2612 028c 8322A0E1 		lsl	r2, r3, #5
 2613 0290 24301BE5 		ldr	r3, [fp, #-36]
 2614 0294 033082E0 		add	r3, r2, r3
 2615 0298 0320A0E1 		mov	r2, r3
 2616 029c 0030A0E3 		mov	r3, #0
 2617 02a0 003082E5 		str	r3, [r2]
1868:../../Source/Kernel/rme_kernel.c ****     {
 2618              		.loc 1 1868 39 discriminator 3
 2619 02a4 08301BE5 		ldr	r3, [fp, #-8]
 2620 02a8 013083E2 		add	r3, r3, #1
 2621 02ac 08300BE5 		str	r3, [fp, #-8]
 2622              	.L162:
1868:../../Source/Kernel/rme_kernel.c ****     {
 2623              		.loc 1 1868 23 discriminator 1
 2624 02b0 08201BE5 		ldr	r2, [fp, #-8]
 2625 02b4 04309BE5 		ldr	r3, [fp, #4]
 2626 02b8 030052E1 		cmp	r2, r3
 2627 02bc F1FFFF3A 		bcc	.L163
1871:../../Source/Kernel/rme_kernel.c ****     }
1872:../../Source/Kernel/rme_kernel.c **** 
1873:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1874:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 2628              		.loc 1 1874 27
 2629 02c0 14301BE5 		ldr	r3, [fp, #-20]
 2630 02c4 0020A0E3 		mov	r2, #0
 2631 02c8 042083E5 		str	r2, [r3, #4]
1875:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 2632              		.loc 1 1875 25
 2633 02cc 14301BE5 		ldr	r3, [fp, #-20]
 2634 02d0 24201BE5 		ldr	r2, [fp, #-36]
 2635 02d4 0C2083E5 		str	r2, [r3, #12]
1876:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 2636              		.loc 1 1876 23
 2637 02d8 14301BE5 		ldr	r3, [fp, #-20]
 2638 02dc FF20A0E3 		mov	r2, #255
 2639 02e0 082083E5 		str	r2, [r3, #8]
1877:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1878:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 2640              		.loc 1 1878 23
 2641 02e4 14301BE5 		ldr	r3, [fp, #-20]
 2642 02e8 04209BE5 		ldr	r2, [fp, #4]
 2643 02ec 142083E5 		str	r2, [r3, #20]
1879:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 81


1880:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1881:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 2644              		.loc 1 1881 5
 2645 02f0 14301BE5 		ldr	r3, [fp, #-20]
 2646 02f4 0314A0E3 		mov	r1, #50331648
 2647 02f8 0300A0E1 		mov	r0, r3
 2648 02fc FEFFFFEB 		bl	__RME_A7A_Write_Release
1882:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1883:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1884:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1885:../../Source/Kernel/rme_kernel.c **** 
1886:../../Source/Kernel/rme_kernel.c ****     return 0;
 2649              		.loc 1 1886 12
 2650 0300 0030A0E3 		mov	r3, #0
 2651              	.L148:
1887:../../Source/Kernel/rme_kernel.c **** }
 2652              		.loc 1 1887 1
 2653 0304 0300A0E1 		mov	r0, r3
 2654 0308 04D04BE2 		sub	sp, fp, #4
 2655              		.cfi_def_cfa 13, 8
 2656              		@ sp needed
 2657 030c 0088BDE8 		pop	{fp, pc}
 2658              		.cfi_endproc
 2659              	.LFE23:
 2661              		.section	.text._RME_Cpt_Crt,"ax",%progbits
 2662              		.align	2
 2663              		.syntax unified
 2664              		.arm
 2666              	_RME_Cpt_Crt:
 2667              	.LFB24:
1888:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Crt ********************************************/
1889:../../Source/Kernel/rme_kernel.c **** 
1890:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Crt ******************************************************
1891:../../Source/Kernel/rme_kernel.c **** Description : Create a capability table.
1892:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1893:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1894:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1895:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1896:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
1897:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
1898:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1899:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1900:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1901:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the 
1902:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1903:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of entries in that capability
1904:../../Source/Kernel/rme_kernel.c ****                                     table.
1905:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1906:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1907:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Crt(struct RME_Cap_Cpt* Cpt,
1908:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
1909:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
1910:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Crt,
1911:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
1912:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry_Num)
1913:../../Source/Kernel/rme_kernel.c **** {
 2668              		.loc 1 1913 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 82


 2669              		.cfi_startproc
 2670              		@ args = 8, pretend = 0, frame = 40
 2671              		@ frame_needed = 1, uses_anonymous_args = 0
 2672 0000 00482DE9 		push	{fp, lr}
 2673              		.cfi_def_cfa_offset 8
 2674              		.cfi_offset 11, -8
 2675              		.cfi_offset 14, -4
 2676 0004 04B08DE2 		add	fp, sp, #4
 2677              		.cfi_def_cfa 11, 4
 2678 0008 28D04DE2 		sub	sp, sp, #40
 2679 000c 20000BE5 		str	r0, [fp, #-32]
 2680 0010 24100BE5 		str	r1, [fp, #-36]
 2681 0014 28200BE5 		str	r2, [fp, #-40]
 2682 0018 2C300BE5 		str	r3, [fp, #-44]
1914:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1915:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1916:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
1917:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1918:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1919:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
1920:../../Source/Kernel/rme_kernel.c **** 
1921:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1922:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2683              		.loc 1 1922 7
 2684 001c 08309BE5 		ldr	r3, [fp, #8]
 2685 0020 000053E3 		cmp	r3, #0
 2686 0024 0200000A 		beq	.L165
 2687              		.loc 1 1922 23 discriminator 1
 2688 0028 08309BE5 		ldr	r3, [fp, #8]
 2689 002c 800053E3 		cmp	r3, #128
 2690 0030 0100009A 		bls	.L166
 2691              	.L165:
1923:../../Source/Kernel/rme_kernel.c ****     {
1924:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1925:../../Source/Kernel/rme_kernel.c ****         
1926:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2692              		.loc 1 1926 16
 2693 0034 0230E0E3 		mvn	r3, #2
 2694 0038 3D0100EA 		b	.L167
 2695              	.L166:
1927:../../Source/Kernel/rme_kernel.c ****     }
1928:../../Source/Kernel/rme_kernel.c ****     else
1929:../../Source/Kernel/rme_kernel.c ****     {
1930:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1931:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1932:../../Source/Kernel/rme_kernel.c ****     }
1933:../../Source/Kernel/rme_kernel.c **** 
1934:../../Source/Kernel/rme_kernel.c ****     /* Are we overrunning the size limit? */
1935:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
1936:../../Source/Kernel/rme_kernel.c ****     if(Entry_Num>RME_CPT_ENTRY_MAX)
1937:../../Source/Kernel/rme_kernel.c ****     {
1938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1939:../../Source/Kernel/rme_kernel.c ****         
1940:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
1941:../../Source/Kernel/rme_kernel.c ****     }
1942:../../Source/Kernel/rme_kernel.c ****     else
1943:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 83


1944:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1945:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1946:../../Source/Kernel/rme_kernel.c ****     }
1947:../../Source/Kernel/rme_kernel.c **** #endif
1948:../../Source/Kernel/rme_kernel.c **** 
1949:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1950:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 2696              		.loc 1 1950 5
 2697 003c 24301BE5 		ldr	r3, [fp, #-36]
 2698 0040 803003E2 		and	r3, r3, #128
 2699 0044 000053E3 		cmp	r3, #0
 2700 0048 1C00001A 		bne	.L168
 2701              		.loc 1 1950 5 is_stmt 0 discriminator 1
 2702 004c 20301BE5 		ldr	r3, [fp, #-32]
 2703 0050 142093E5 		ldr	r2, [r3, #20]
 2704 0054 24301BE5 		ldr	r3, [fp, #-36]
 2705 0058 030052E1 		cmp	r2, r3
 2706 005c 0100008A 		bhi	.L169
 2707              		.loc 1 1950 5 discriminator 3
 2708 0060 0230E0E3 		mvn	r3, #2
 2709              		.loc 1 1950 5
 2710 0064 320100EA 		b	.L167
 2711              	.L169:
 2712              		.loc 1 1950 5 discriminator 4
 2713 0068 24301BE5 		ldr	r3, [fp, #-36]
 2714 006c 8322A0E1 		lsl	r2, r3, #5
 2715 0070 20301BE5 		ldr	r3, [fp, #-32]
 2716 0074 0C3093E5 		ldr	r3, [r3, #12]
 2717 0078 033082E0 		add	r3, r2, r3
 2718 007c 0C300BE5 		str	r3, [fp, #-12]
 2719 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2720 0084 0300A0E1 		mov	r0, r3
 2721 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2722 008c 14000BE5 		str	r0, [fp, #-20]
 2723              		.loc 1 1950 5 discriminator 1
 2724 0090 14301BE5 		ldr	r3, [fp, #-20]
 2725 0094 FF3803E2 		and	r3, r3, #16711680
 2726 0098 020853E3 		cmp	r3, #131072
 2727 009c 0100001A 		bne	.L170
 2728              		.loc 1 1950 5 discriminator 5
 2729 00a0 0830E0E3 		mvn	r3, #8
 2730              		.loc 1 1950 5
 2731 00a4 220100EA 		b	.L167
 2732              	.L170:
 2733              		.loc 1 1950 5 discriminator 6
 2734 00a8 14301BE5 		ldr	r3, [fp, #-20]
 2735 00ac 233CA0E1 		lsr	r3, r3, #24
 2736 00b0 030053E3 		cmp	r3, #3
 2737 00b4 3F00000A 		beq	.L171
 2738              		.loc 1 1950 5 discriminator 7
 2739 00b8 0130E0E3 		mvn	r3, #1
 2740              		.loc 1 1950 5
 2741 00bc 1C0100EA 		b	.L167
 2742              	.L168:
 2743              		.loc 1 1950 5 discriminator 2
 2744 00c0 24301BE5 		ldr	r3, [fp, #-36]
 2745 00c4 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 84


 2746 00c8 20301BE5 		ldr	r3, [fp, #-32]
 2747 00cc 143093E5 		ldr	r3, [r3, #20]
 2748 00d0 030052E1 		cmp	r2, r3
 2749 00d4 0100003A 		bcc	.L172
 2750              		.loc 1 1950 5 discriminator 8
 2751 00d8 0230E0E3 		mvn	r3, #2
 2752              		.loc 1 1950 5
 2753 00dc 140100EA 		b	.L167
 2754              	.L172:
 2755              		.loc 1 1950 5 discriminator 9
 2756 00e0 24301BE5 		ldr	r3, [fp, #-36]
 2757 00e4 2334A0E1 		lsr	r3, r3, #8
 2758 00e8 8322A0E1 		lsl	r2, r3, #5
 2759 00ec 20301BE5 		ldr	r3, [fp, #-32]
 2760 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2761 00f4 033082E0 		add	r3, r2, r3
 2762 00f8 0C300BE5 		str	r3, [fp, #-12]
 2763 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2764 0100 0300A0E1 		mov	r0, r3
 2765 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2766 0108 14000BE5 		str	r0, [fp, #-20]
 2767              		.loc 1 1950 5 discriminator 1
 2768 010c 14301BE5 		ldr	r3, [fp, #-20]
 2769 0110 FF3803E2 		and	r3, r3, #16711680
 2770 0114 020853E3 		cmp	r3, #131072
 2771 0118 0100001A 		bne	.L173
 2772              		.loc 1 1950 5 discriminator 10
 2773 011c 0830E0E3 		mvn	r3, #8
 2774              		.loc 1 1950 5
 2775 0120 030100EA 		b	.L167
 2776              	.L173:
 2777              		.loc 1 1950 5 discriminator 11
 2778 0124 14301BE5 		ldr	r3, [fp, #-20]
 2779 0128 233CA0E1 		lsr	r3, r3, #24
 2780 012c 030053E3 		cmp	r3, #3
 2781 0130 0100000A 		beq	.L174
 2782              		.loc 1 1950 5 discriminator 12
 2783 0134 0130E0E3 		mvn	r3, #1
 2784              		.loc 1 1950 5
 2785 0138 FD0000EA 		b	.L167
 2786              	.L174:
 2787              		.loc 1 1950 5 discriminator 13
 2788 013c 24301BE5 		ldr	r3, [fp, #-36]
 2789 0140 7F2003E2 		and	r2, r3, #127
 2790 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2791 0148 143093E5 		ldr	r3, [r3, #20]
 2792 014c 030052E1 		cmp	r2, r3
 2793 0150 0100003A 		bcc	.L175
 2794              		.loc 1 1950 5 discriminator 14
 2795 0154 0230E0E3 		mvn	r3, #2
 2796              		.loc 1 1950 5
 2797 0158 F50000EA 		b	.L167
 2798              	.L175:
 2799              		.loc 1 1950 5 discriminator 15
 2800 015c 24301BE5 		ldr	r3, [fp, #-36]
 2801 0160 7F3003E2 		and	r3, r3, #127
 2802 0164 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 85


 2803 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2804 016c 0C3093E5 		ldr	r3, [r3, #12]
 2805 0170 033082E0 		add	r3, r2, r3
 2806 0174 0C300BE5 		str	r3, [fp, #-12]
 2807 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2808 017c 0300A0E1 		mov	r0, r3
 2809 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2810 0184 14000BE5 		str	r0, [fp, #-20]
 2811              		.loc 1 1950 5 discriminator 1
 2812 0188 14301BE5 		ldr	r3, [fp, #-20]
 2813 018c FF3803E2 		and	r3, r3, #16711680
 2814 0190 020853E3 		cmp	r3, #131072
 2815 0194 0100001A 		bne	.L176
 2816              		.loc 1 1950 5 discriminator 16
 2817 0198 0830E0E3 		mvn	r3, #8
 2818              		.loc 1 1950 5
 2819 019c E40000EA 		b	.L167
 2820              	.L176:
 2821              		.loc 1 1950 5 discriminator 17
 2822 01a0 14301BE5 		ldr	r3, [fp, #-20]
 2823 01a4 233CA0E1 		lsr	r3, r3, #24
 2824 01a8 030053E3 		cmp	r3, #3
 2825 01ac 0100000A 		beq	.L171
 2826              		.loc 1 1950 5 discriminator 18
 2827 01b0 0130E0E3 		mvn	r3, #1
 2828              		.loc 1 1950 5
 2829 01b4 DE0000EA 		b	.L167
 2830              	.L171:
1951:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
1952:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 2831              		.loc 1 1952 5 is_stmt 1
 2832 01b8 28301BE5 		ldr	r3, [fp, #-40]
 2833 01bc 803003E2 		and	r3, r3, #128
 2834 01c0 000053E3 		cmp	r3, #0
 2835 01c4 1C00001A 		bne	.L177
 2836              		.loc 1 1952 5 is_stmt 0 discriminator 1
 2837 01c8 20301BE5 		ldr	r3, [fp, #-32]
 2838 01cc 142093E5 		ldr	r2, [r3, #20]
 2839 01d0 28301BE5 		ldr	r3, [fp, #-40]
 2840 01d4 030052E1 		cmp	r2, r3
 2841 01d8 0100008A 		bhi	.L178
 2842              		.loc 1 1952 5 discriminator 3
 2843 01dc 0230E0E3 		mvn	r3, #2
 2844              		.loc 1 1952 5
 2845 01e0 D30000EA 		b	.L167
 2846              	.L178:
 2847              		.loc 1 1952 5 discriminator 4
 2848 01e4 28301BE5 		ldr	r3, [fp, #-40]
 2849 01e8 8322A0E1 		lsl	r2, r3, #5
 2850 01ec 20301BE5 		ldr	r3, [fp, #-32]
 2851 01f0 0C3093E5 		ldr	r3, [r3, #12]
 2852 01f4 033082E0 		add	r3, r2, r3
 2853 01f8 10300BE5 		str	r3, [fp, #-16]
 2854 01fc 10301BE5 		ldr	r3, [fp, #-16]
 2855 0200 0300A0E1 		mov	r0, r3
 2856 0204 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2857 0208 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 86


 2858              		.loc 1 1952 5 discriminator 1
 2859 020c 14301BE5 		ldr	r3, [fp, #-20]
 2860 0210 FF3803E2 		and	r3, r3, #16711680
 2861 0214 020853E3 		cmp	r3, #131072
 2862 0218 0100001A 		bne	.L179
 2863              		.loc 1 1952 5 discriminator 5
 2864 021c 0830E0E3 		mvn	r3, #8
 2865              		.loc 1 1952 5
 2866 0220 C30000EA 		b	.L167
 2867              	.L179:
 2868              		.loc 1 1952 5 discriminator 6
 2869 0224 14301BE5 		ldr	r3, [fp, #-20]
 2870 0228 233CA0E1 		lsr	r3, r3, #24
 2871 022c 020053E3 		cmp	r3, #2
 2872 0230 3F00000A 		beq	.L180
 2873              		.loc 1 1952 5 discriminator 7
 2874 0234 0130E0E3 		mvn	r3, #1
 2875              		.loc 1 1952 5
 2876 0238 BD0000EA 		b	.L167
 2877              	.L177:
 2878              		.loc 1 1952 5 discriminator 2
 2879 023c 28301BE5 		ldr	r3, [fp, #-40]
 2880 0240 2324A0E1 		lsr	r2, r3, #8
 2881 0244 20301BE5 		ldr	r3, [fp, #-32]
 2882 0248 143093E5 		ldr	r3, [r3, #20]
 2883 024c 030052E1 		cmp	r2, r3
 2884 0250 0100003A 		bcc	.L181
 2885              		.loc 1 1952 5 discriminator 8
 2886 0254 0230E0E3 		mvn	r3, #2
 2887              		.loc 1 1952 5
 2888 0258 B50000EA 		b	.L167
 2889              	.L181:
 2890              		.loc 1 1952 5 discriminator 9
 2891 025c 28301BE5 		ldr	r3, [fp, #-40]
 2892 0260 2334A0E1 		lsr	r3, r3, #8
 2893 0264 8322A0E1 		lsl	r2, r3, #5
 2894 0268 20301BE5 		ldr	r3, [fp, #-32]
 2895 026c 0C3093E5 		ldr	r3, [r3, #12]
 2896 0270 033082E0 		add	r3, r2, r3
 2897 0274 10300BE5 		str	r3, [fp, #-16]
 2898 0278 10301BE5 		ldr	r3, [fp, #-16]
 2899 027c 0300A0E1 		mov	r0, r3
 2900 0280 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2901 0284 14000BE5 		str	r0, [fp, #-20]
 2902              		.loc 1 1952 5 discriminator 1
 2903 0288 14301BE5 		ldr	r3, [fp, #-20]
 2904 028c FF3803E2 		and	r3, r3, #16711680
 2905 0290 020853E3 		cmp	r3, #131072
 2906 0294 0100001A 		bne	.L182
 2907              		.loc 1 1952 5 discriminator 10
 2908 0298 0830E0E3 		mvn	r3, #8
 2909              		.loc 1 1952 5
 2910 029c A40000EA 		b	.L167
 2911              	.L182:
 2912              		.loc 1 1952 5 discriminator 11
 2913 02a0 14301BE5 		ldr	r3, [fp, #-20]
 2914 02a4 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 87


 2915 02a8 030053E3 		cmp	r3, #3
 2916 02ac 0100000A 		beq	.L183
 2917              		.loc 1 1952 5 discriminator 12
 2918 02b0 0130E0E3 		mvn	r3, #1
 2919              		.loc 1 1952 5
 2920 02b4 9E0000EA 		b	.L167
 2921              	.L183:
 2922              		.loc 1 1952 5 discriminator 13
 2923 02b8 28301BE5 		ldr	r3, [fp, #-40]
 2924 02bc 7F2003E2 		and	r2, r3, #127
 2925 02c0 10301BE5 		ldr	r3, [fp, #-16]
 2926 02c4 143093E5 		ldr	r3, [r3, #20]
 2927 02c8 030052E1 		cmp	r2, r3
 2928 02cc 0100003A 		bcc	.L184
 2929              		.loc 1 1952 5 discriminator 14
 2930 02d0 0230E0E3 		mvn	r3, #2
 2931              		.loc 1 1952 5
 2932 02d4 960000EA 		b	.L167
 2933              	.L184:
 2934              		.loc 1 1952 5 discriminator 15
 2935 02d8 28301BE5 		ldr	r3, [fp, #-40]
 2936 02dc 7F3003E2 		and	r3, r3, #127
 2937 02e0 8322A0E1 		lsl	r2, r3, #5
 2938 02e4 10301BE5 		ldr	r3, [fp, #-16]
 2939 02e8 0C3093E5 		ldr	r3, [r3, #12]
 2940 02ec 033082E0 		add	r3, r2, r3
 2941 02f0 10300BE5 		str	r3, [fp, #-16]
 2942 02f4 10301BE5 		ldr	r3, [fp, #-16]
 2943 02f8 0300A0E1 		mov	r0, r3
 2944 02fc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2945 0300 14000BE5 		str	r0, [fp, #-20]
 2946              		.loc 1 1952 5 discriminator 1
 2947 0304 14301BE5 		ldr	r3, [fp, #-20]
 2948 0308 FF3803E2 		and	r3, r3, #16711680
 2949 030c 020853E3 		cmp	r3, #131072
 2950 0310 0100001A 		bne	.L185
 2951              		.loc 1 1952 5 discriminator 16
 2952 0314 0830E0E3 		mvn	r3, #8
 2953              		.loc 1 1952 5
 2954 0318 850000EA 		b	.L167
 2955              	.L185:
 2956              		.loc 1 1952 5 discriminator 17
 2957 031c 14301BE5 		ldr	r3, [fp, #-20]
 2958 0320 233CA0E1 		lsr	r3, r3, #24
 2959 0324 020053E3 		cmp	r3, #2
 2960 0328 0100000A 		beq	.L180
 2961              		.loc 1 1952 5 discriminator 18
 2962 032c 0130E0E3 		mvn	r3, #1
 2963              		.loc 1 1952 5
 2964 0330 7F0000EA 		b	.L167
 2965              	.L180:
1953:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
1954:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1955:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2966              		.loc 1 1955 5 is_stmt 1
 2967 0334 0C301BE5 		ldr	r3, [fp, #-12]
 2968 0338 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 88


 2969 033c 013003E2 		and	r3, r3, #1
 2970 0340 000053E3 		cmp	r3, #0
 2971 0344 0100001A 		bne	.L186
 2972              		.loc 1 1955 5 is_stmt 0 discriminator 1
 2973 0348 0630E0E3 		mvn	r3, #6
 2974              		.loc 1 1955 5
 2975 034c 780000EA 		b	.L167
 2976              	.L186:
1956:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
1957:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_CPT,Raddr,Vaddr,RME_CPT_SIZE(Entry_Num));
 2977              		.loc 1 1957 5 is_stmt 1
 2978 0350 10301BE5 		ldr	r3, [fp, #-16]
 2979 0354 083093E5 		ldr	r3, [r3, #8]
 2980 0358 013003E2 		and	r3, r3, #1
 2981 035c 000053E3 		cmp	r3, #0
 2982 0360 0100001A 		bne	.L187
 2983              		.loc 1 1957 5 is_stmt 0 discriminator 1
 2984 0364 0630E0E3 		mvn	r3, #6
 2985              		.loc 1 1957 5
 2986 0368 710000EA 		b	.L167
 2987              	.L187:
 2988              		.loc 1 1957 5 discriminator 2
 2989 036c 10301BE5 		ldr	r3, [fp, #-16]
 2990 0370 143093E5 		ldr	r3, [r3, #20]
 2991 0374 04209BE5 		ldr	r2, [fp, #4]
 2992 0378 033082E0 		add	r3, r2, r3
 2993 037c 18300BE5 		str	r3, [fp, #-24]
 2994 0380 18201BE5 		ldr	r2, [fp, #-24]
 2995 0384 04309BE5 		ldr	r3, [fp, #4]
 2996 0388 030052E1 		cmp	r2, r3
 2997 038c 0100002A 		bcs	.L188
 2998              		.loc 1 1957 5 discriminator 3
 2999 0390 0630E0E3 		mvn	r3, #6
 3000              		.loc 1 1957 5
 3001 0394 660000EA 		b	.L167
 3002              	.L188:
 3003              		.loc 1 1957 5 discriminator 4
 3004 0398 10301BE5 		ldr	r3, [fp, #-16]
 3005 039c 143093E5 		ldr	r3, [r3, #20]
 3006 03a0 18201BE5 		ldr	r2, [fp, #-24]
 3007 03a4 030052E1 		cmp	r2, r3
 3008 03a8 0100002A 		bcs	.L189
 3009              		.loc 1 1957 5 discriminator 5
 3010 03ac 0630E0E3 		mvn	r3, #6
 3011              		.loc 1 1957 5
 3012 03b0 5F0000EA 		b	.L167
 3013              	.L189:
 3014              		.loc 1 1957 5 discriminator 6
 3015 03b4 08309BE5 		ldr	r3, [fp, #8]
 3016 03b8 8322A0E1 		lsl	r2, r3, #5
 3017 03bc 18301BE5 		ldr	r3, [fp, #-24]
 3018 03c0 033082E0 		add	r3, r2, r3
 3019 03c4 18201BE5 		ldr	r2, [fp, #-24]
 3020 03c8 030052E1 		cmp	r2, r3
 3021 03cc 0100009A 		bls	.L190
 3022              		.loc 1 1957 5 discriminator 7
 3023 03d0 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 89


 3024              		.loc 1 1957 5
 3025 03d4 560000EA 		b	.L167
 3026              	.L190:
 3027              		.loc 1 1957 5 discriminator 8
 3028 03d8 10301BE5 		ldr	r3, [fp, #-16]
 3029 03dc 182093E5 		ldr	r2, [r3, #24]
 3030 03e0 08309BE5 		ldr	r3, [fp, #8]
 3031 03e4 8312A0E1 		lsl	r1, r3, #5
 3032 03e8 18301BE5 		ldr	r3, [fp, #-24]
 3033 03ec 033081E0 		add	r3, r1, r3
 3034 03f0 013043E2 		sub	r3, r3, #1
 3035 03f4 030052E1 		cmp	r2, r3
 3036 03f8 0100002A 		bcs	.L191
 3037              		.loc 1 1957 5 discriminator 9
 3038 03fc 0630E0E3 		mvn	r3, #6
 3039              		.loc 1 1957 5
 3040 0400 4B0000EA 		b	.L167
 3041              	.L191:
1958:../../Source/Kernel/rme_kernel.c **** 
1959:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1960:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 3042              		.loc 1 1960 5 is_stmt 1
 3043 0404 0C301BE5 		ldr	r3, [fp, #-12]
 3044 0408 142093E5 		ldr	r2, [r3, #20]
 3045 040c 2C301BE5 		ldr	r3, [fp, #-44]
 3046 0410 030052E1 		cmp	r2, r3
 3047 0414 0100008A 		bhi	.L192
 3048              		.loc 1 1960 5 is_stmt 0 discriminator 1
 3049 0418 0230E0E3 		mvn	r3, #2
 3050              		.loc 1 1960 5
 3051 041c 440000EA 		b	.L167
 3052              	.L192:
 3053              		.loc 1 1960 5 discriminator 2
 3054 0420 2C301BE5 		ldr	r3, [fp, #-44]
 3055 0424 8322A0E1 		lsl	r2, r3, #5
 3056 0428 0C301BE5 		ldr	r3, [fp, #-12]
 3057 042c 0C3093E5 		ldr	r3, [r3, #12]
 3058 0430 033082E0 		add	r3, r2, r3
 3059 0434 1C300BE5 		str	r3, [fp, #-28]
1961:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1962:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 3060              		.loc 1 1962 5 is_stmt 1
 3061 0438 1C301BE5 		ldr	r3, [fp, #-28]
 3062 043c 0128A0E3 		mov	r2, #65536
 3063 0440 0010A0E3 		mov	r1, #0
 3064 0444 0300A0E1 		mov	r0, r3
 3065 0448 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3066 044c 0030A0E1 		mov	r3, r0
 3067              		.loc 1 1962 5 is_stmt 0 discriminator 1
 3068 0450 000053E3 		cmp	r3, #0
 3069 0454 0100001A 		bne	.L193
 3070 0458 0430E0E3 		mvn	r3, #4
 3071              		.loc 1 1962 5
 3072 045c 340000EA 		b	.L167
 3073              	.L193:
 3074              		.loc 1 1962 5 discriminator 2
 3075 0460 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 90


 3076 0464 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3077 0468 002093E5 		ldr	r2, [r3]
 3078 046c 1C301BE5 		ldr	r3, [fp, #-28]
 3079 0470 102083E5 		str	r2, [r3, #16]
1963:../../Source/Kernel/rme_kernel.c **** 
1964:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1965:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))<0)
 3080              		.loc 1 1965 8 is_stmt 1
 3081 0474 08309BE5 		ldr	r3, [fp, #8]
 3082 0478 8332A0E1 		lsl	r3, r3, #5
 3083 047c 0310A0E1 		mov	r1, r3
 3084 0480 18001BE5 		ldr	r0, [fp, #-24]
 3085 0484 FEFFFFEB 		bl	_RME_Kot_Mark
 3086 0488 0030A0E1 		mov	r3, r0
 3087              		.loc 1 1965 7 discriminator 1
 3088 048c 000053E3 		cmp	r3, #0
 3089 0490 050000AA 		bge	.L194
1966:../../Source/Kernel/rme_kernel.c ****     {
1967:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1968:../../Source/Kernel/rme_kernel.c ****         
1969:../../Source/Kernel/rme_kernel.c ****         /* Failure. Set the Type_Stat back to 0 and abort the creation process */
1970:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 3090              		.loc 1 1970 9
 3091 0494 1C301BE5 		ldr	r3, [fp, #-28]
 3092 0498 0010A0E3 		mov	r1, #0
 3093 049c 0300A0E1 		mov	r0, r3
 3094 04a0 FEFFFFEB 		bl	__RME_A7A_Write_Release
1971:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 3095              		.loc 1 1971 16
 3096 04a4 0330E0E3 		mvn	r3, #3
 3097 04a8 210000EA 		b	.L167
 3098              	.L194:
1972:../../Source/Kernel/rme_kernel.c ****     }
1973:../../Source/Kernel/rme_kernel.c ****     else
1974:../../Source/Kernel/rme_kernel.c ****     {
1975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1976:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1977:../../Source/Kernel/rme_kernel.c ****     }
1978:../../Source/Kernel/rme_kernel.c **** 
1979:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1980:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3099              		.loc 1 1980 14
 3100 04ac 0030A0E3 		mov	r3, #0
 3101 04b0 08300BE5 		str	r3, [fp, #-8]
 3102              		.loc 1 1980 5
 3103 04b4 090000EA 		b	.L195
 3104              	.L196:
1981:../../Source/Kernel/rme_kernel.c ****     {
1982:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 3105              		.loc 1 1982 9
 3106 04b8 08301BE5 		ldr	r3, [fp, #-8]
 3107 04bc 8322A0E1 		lsl	r2, r3, #5
 3108 04c0 18301BE5 		ldr	r3, [fp, #-24]
 3109 04c4 033082E0 		add	r3, r2, r3
 3110 04c8 0320A0E1 		mov	r2, r3
 3111 04cc 0030A0E3 		mov	r3, #0
 3112 04d0 003082E5 		str	r3, [r2]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 91


1980:../../Source/Kernel/rme_kernel.c ****     {
 3113              		.loc 1 1980 39 discriminator 3
 3114 04d4 08301BE5 		ldr	r3, [fp, #-8]
 3115 04d8 013083E2 		add	r3, r3, #1
 3116 04dc 08300BE5 		str	r3, [fp, #-8]
 3117              	.L195:
1980:../../Source/Kernel/rme_kernel.c ****     {
 3118              		.loc 1 1980 23 discriminator 1
 3119 04e0 08201BE5 		ldr	r2, [fp, #-8]
 3120 04e4 08309BE5 		ldr	r3, [fp, #8]
 3121 04e8 030052E1 		cmp	r2, r3
 3122 04ec F1FFFF3A 		bcc	.L196
1983:../../Source/Kernel/rme_kernel.c ****     }
1984:../../Source/Kernel/rme_kernel.c **** 
1985:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1986:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 3123              		.loc 1 1986 27
 3124 04f0 1C301BE5 		ldr	r3, [fp, #-28]
 3125 04f4 0020A0E3 		mov	r2, #0
 3126 04f8 042083E5 		str	r2, [r3, #4]
1987:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 3127              		.loc 1 1987 25
 3128 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 3129 0500 18201BE5 		ldr	r2, [fp, #-24]
 3130 0504 0C2083E5 		str	r2, [r3, #12]
1988:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 3131              		.loc 1 1988 23
 3132 0508 1C301BE5 		ldr	r3, [fp, #-28]
 3133 050c FF20A0E3 		mov	r2, #255
 3134 0510 082083E5 		str	r2, [r3, #8]
1989:../../Source/Kernel/rme_kernel.c ****     
1990:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1991:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 3135              		.loc 1 1991 23
 3136 0514 1C301BE5 		ldr	r3, [fp, #-28]
 3137 0518 08209BE5 		ldr	r2, [fp, #8]
 3138 051c 142083E5 		str	r2, [r3, #20]
1992:../../Source/Kernel/rme_kernel.c **** 
1993:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1994:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 3139              		.loc 1 1994 5
 3140 0520 1C301BE5 		ldr	r3, [fp, #-28]
 3141 0524 0314A0E3 		mov	r1, #50331648
 3142 0528 0300A0E1 		mov	r0, r3
 3143 052c FEFFFFEB 		bl	__RME_A7A_Write_Release
1995:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1996:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1997:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1998:../../Source/Kernel/rme_kernel.c **** 
1999:../../Source/Kernel/rme_kernel.c ****     return 0;
 3144              		.loc 1 1999 12
 3145 0530 0030A0E3 		mov	r3, #0
 3146              	.L167:
2000:../../Source/Kernel/rme_kernel.c **** }
 3147              		.loc 1 2000 1
 3148 0534 0300A0E1 		mov	r0, r3
 3149 0538 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 92


 3150              		.cfi_def_cfa 13, 8
 3151              		@ sp needed
 3152 053c 0088BDE8 		pop	{fp, pc}
 3153              		.cfi_endproc
 3154              	.LFE24:
 3156              		.section	.rodata
 3157              		.align	2
 3158              	.LC2:
 3159 0000 32323A32 		.ascii	"22:29:48\000"
 3159      393A3438 
 3159      00
 3160 0009 000000   		.align	2
 3161              	.LC3:
 3162 000c 41707220 		.ascii	"Apr  5 2025\000"
 3162      20352032 
 3162      30323500 
 3163              		.align	2
 3164              	.LC4:
 3165 0018 2E2E2F2E 		.ascii	"../../Source/Kernel/rme_kernel.c\000"
 3165      2E2F536F 
 3165      75726365 
 3165      2F4B6572 
 3165      6E656C2F 
 3166              		.section	.text._RME_Cpt_Del,"ax",%progbits
 3167              		.align	2
 3168              		.syntax unified
 3169              		.arm
 3171              	_RME_Cpt_Del:
 3172              	.LFB25:
2001:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Crt *************************************************/
2002:../../Source/Kernel/rme_kernel.c **** 
2003:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Del ******************************************************
2004:../../Source/Kernel/rme_kernel.c **** Description : Delete a layer of capability table.
2005:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2006:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Del - The capability table that contains the
2007:../../Source/Kernel/rme_kernel.c ****                                       cap to captbl.
2008:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2009:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Del - The capability to the capability table to be
2010:../../Source/Kernel/rme_kernel.c ****                                   deleted.
2011:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2012:../../Source/Kernel/rme_kernel.c **** Output      : None.
2013:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2014:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2015:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Del(struct RME_Cap_Cpt* Cpt,
2016:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Del,
2017:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Del)
2018:../../Source/Kernel/rme_kernel.c **** {
 3173              		.loc 1 2018 1
 3174              		.cfi_startproc
 3175              		@ args = 0, pretend = 0, frame = 48
 3176              		@ frame_needed = 1, uses_anonymous_args = 0
 3177 0000 00482DE9 		push	{fp, lr}
 3178              		.cfi_def_cfa_offset 8
 3179              		.cfi_offset 11, -8
 3180              		.cfi_offset 14, -4
 3181 0004 04B08DE2 		add	fp, sp, #4
 3182              		.cfi_def_cfa 11, 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 93


 3183 0008 30D04DE2 		sub	sp, sp, #48
 3184 000c 28000BE5 		str	r0, [fp, #-40]
 3185 0010 2C100BE5 		str	r1, [fp, #-44]
 3186 0014 30200BE5 		str	r2, [fp, #-48]
2019:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
2020:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Entry_Num;
2021:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2022:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Del;
2023:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Struct* Table;
2024:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2025:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
2026:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
2027:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
2028:../../Source/Kernel/rme_kernel.c ****     
2029:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2030:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Del,RME_CAP_TYPE_CPT,
 3187              		.loc 1 2030 5
 3188 0018 2C301BE5 		ldr	r3, [fp, #-44]
 3189 001c 803003E2 		and	r3, r3, #128
 3190 0020 000053E3 		cmp	r3, #0
 3191 0024 1C00001A 		bne	.L198
 3192              		.loc 1 2030 5 is_stmt 0 discriminator 1
 3193 0028 28301BE5 		ldr	r3, [fp, #-40]
 3194 002c 142093E5 		ldr	r2, [r3, #20]
 3195 0030 2C301BE5 		ldr	r3, [fp, #-44]
 3196 0034 030052E1 		cmp	r2, r3
 3197 0038 0100008A 		bhi	.L199
 3198              		.loc 1 2030 5 discriminator 3
 3199 003c 0230E0E3 		mvn	r3, #2
 3200              		.loc 1 2030 5
 3201 0040 E10000EA 		b	.L200
 3202              	.L199:
 3203              		.loc 1 2030 5 discriminator 4
 3204 0044 2C301BE5 		ldr	r3, [fp, #-44]
 3205 0048 8322A0E1 		lsl	r2, r3, #5
 3206 004c 28301BE5 		ldr	r3, [fp, #-40]
 3207 0050 0C3093E5 		ldr	r3, [r3, #12]
 3208 0054 033082E0 		add	r3, r2, r3
 3209 0058 0C300BE5 		str	r3, [fp, #-12]
 3210 005c 0C301BE5 		ldr	r3, [fp, #-12]
 3211 0060 0300A0E1 		mov	r0, r3
 3212 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3213 0068 10000BE5 		str	r0, [fp, #-16]
 3214              		.loc 1 2030 5 discriminator 1
 3215 006c 10301BE5 		ldr	r3, [fp, #-16]
 3216 0070 FF3803E2 		and	r3, r3, #16711680
 3217 0074 020853E3 		cmp	r3, #131072
 3218 0078 0100001A 		bne	.L201
 3219              		.loc 1 2030 5 discriminator 5
 3220 007c 0830E0E3 		mvn	r3, #8
 3221              		.loc 1 2030 5
 3222 0080 D10000EA 		b	.L200
 3223              	.L201:
 3224              		.loc 1 2030 5 discriminator 6
 3225 0084 10301BE5 		ldr	r3, [fp, #-16]
 3226 0088 233CA0E1 		lsr	r3, r3, #24
 3227 008c 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 94


 3228 0090 3F00000A 		beq	.L202
 3229              		.loc 1 2030 5 discriminator 7
 3230 0094 0130E0E3 		mvn	r3, #1
 3231              		.loc 1 2030 5
 3232 0098 CB0000EA 		b	.L200
 3233              	.L198:
 3234              		.loc 1 2030 5 discriminator 2
 3235 009c 2C301BE5 		ldr	r3, [fp, #-44]
 3236 00a0 2324A0E1 		lsr	r2, r3, #8
 3237 00a4 28301BE5 		ldr	r3, [fp, #-40]
 3238 00a8 143093E5 		ldr	r3, [r3, #20]
 3239 00ac 030052E1 		cmp	r2, r3
 3240 00b0 0100003A 		bcc	.L203
 3241              		.loc 1 2030 5 discriminator 8
 3242 00b4 0230E0E3 		mvn	r3, #2
 3243              		.loc 1 2030 5
 3244 00b8 C30000EA 		b	.L200
 3245              	.L203:
 3246              		.loc 1 2030 5 discriminator 9
 3247 00bc 2C301BE5 		ldr	r3, [fp, #-44]
 3248 00c0 2334A0E1 		lsr	r3, r3, #8
 3249 00c4 8322A0E1 		lsl	r2, r3, #5
 3250 00c8 28301BE5 		ldr	r3, [fp, #-40]
 3251 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3252 00d0 033082E0 		add	r3, r2, r3
 3253 00d4 0C300BE5 		str	r3, [fp, #-12]
 3254 00d8 0C301BE5 		ldr	r3, [fp, #-12]
 3255 00dc 0300A0E1 		mov	r0, r3
 3256 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3257 00e4 10000BE5 		str	r0, [fp, #-16]
 3258              		.loc 1 2030 5 discriminator 1
 3259 00e8 10301BE5 		ldr	r3, [fp, #-16]
 3260 00ec FF3803E2 		and	r3, r3, #16711680
 3261 00f0 020853E3 		cmp	r3, #131072
 3262 00f4 0100001A 		bne	.L204
 3263              		.loc 1 2030 5 discriminator 10
 3264 00f8 0830E0E3 		mvn	r3, #8
 3265              		.loc 1 2030 5
 3266 00fc B20000EA 		b	.L200
 3267              	.L204:
 3268              		.loc 1 2030 5 discriminator 11
 3269 0100 10301BE5 		ldr	r3, [fp, #-16]
 3270 0104 233CA0E1 		lsr	r3, r3, #24
 3271 0108 030053E3 		cmp	r3, #3
 3272 010c 0100000A 		beq	.L205
 3273              		.loc 1 2030 5 discriminator 12
 3274 0110 0130E0E3 		mvn	r3, #1
 3275              		.loc 1 2030 5
 3276 0114 AC0000EA 		b	.L200
 3277              	.L205:
 3278              		.loc 1 2030 5 discriminator 13
 3279 0118 2C301BE5 		ldr	r3, [fp, #-44]
 3280 011c 7F2003E2 		and	r2, r3, #127
 3281 0120 0C301BE5 		ldr	r3, [fp, #-12]
 3282 0124 143093E5 		ldr	r3, [r3, #20]
 3283 0128 030052E1 		cmp	r2, r3
 3284 012c 0100003A 		bcc	.L206
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 95


 3285              		.loc 1 2030 5 discriminator 14
 3286 0130 0230E0E3 		mvn	r3, #2
 3287              		.loc 1 2030 5
 3288 0134 A40000EA 		b	.L200
 3289              	.L206:
 3290              		.loc 1 2030 5 discriminator 15
 3291 0138 2C301BE5 		ldr	r3, [fp, #-44]
 3292 013c 7F3003E2 		and	r3, r3, #127
 3293 0140 8322A0E1 		lsl	r2, r3, #5
 3294 0144 0C301BE5 		ldr	r3, [fp, #-12]
 3295 0148 0C3093E5 		ldr	r3, [r3, #12]
 3296 014c 033082E0 		add	r3, r2, r3
 3297 0150 0C300BE5 		str	r3, [fp, #-12]
 3298 0154 0C301BE5 		ldr	r3, [fp, #-12]
 3299 0158 0300A0E1 		mov	r0, r3
 3300 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3301 0160 10000BE5 		str	r0, [fp, #-16]
 3302              		.loc 1 2030 5 discriminator 1
 3303 0164 10301BE5 		ldr	r3, [fp, #-16]
 3304 0168 FF3803E2 		and	r3, r3, #16711680
 3305 016c 020853E3 		cmp	r3, #131072
 3306 0170 0100001A 		bne	.L207
 3307              		.loc 1 2030 5 discriminator 16
 3308 0174 0830E0E3 		mvn	r3, #8
 3309              		.loc 1 2030 5
 3310 0178 930000EA 		b	.L200
 3311              	.L207:
 3312              		.loc 1 2030 5 discriminator 17
 3313 017c 10301BE5 		ldr	r3, [fp, #-16]
 3314 0180 233CA0E1 		lsr	r3, r3, #24
 3315 0184 030053E3 		cmp	r3, #3
 3316 0188 0100000A 		beq	.L202
 3317              		.loc 1 2030 5 discriminator 18
 3318 018c 0130E0E3 		mvn	r3, #1
 3319              		.loc 1 2030 5
 3320 0190 8D0000EA 		b	.L200
 3321              	.L202:
2031:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2032:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2033:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 3322              		.loc 1 2033 5 is_stmt 1
 3323 0194 0C301BE5 		ldr	r3, [fp, #-12]
 3324 0198 083093E5 		ldr	r3, [r3, #8]
 3325 019c 023003E2 		and	r3, r3, #2
 3326 01a0 000053E3 		cmp	r3, #0
 3327 01a4 0100001A 		bne	.L208
 3328              		.loc 1 2033 5 is_stmt 0 discriminator 1
 3329 01a8 0630E0E3 		mvn	r3, #6
 3330              		.loc 1 2033 5
 3331 01ac 860000EA 		b	.L200
 3332              	.L208:
2034:../../Source/Kernel/rme_kernel.c ****     
2035:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2036:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Del,struct RME_Cap_Cpt*,Cpt_Del);
 3333              		.loc 1 2036 5 is_stmt 1
 3334 01b0 0C301BE5 		ldr	r3, [fp, #-12]
 3335 01b4 142093E5 		ldr	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 96


 3336 01b8 30301BE5 		ldr	r3, [fp, #-48]
 3337 01bc 030052E1 		cmp	r2, r3
 3338 01c0 0100008A 		bhi	.L209
 3339              		.loc 1 2036 5 is_stmt 0 discriminator 1
 3340 01c4 0230E0E3 		mvn	r3, #2
 3341              		.loc 1 2036 5
 3342 01c8 7F0000EA 		b	.L200
 3343              	.L209:
 3344              		.loc 1 2036 5 discriminator 2
 3345 01cc 30301BE5 		ldr	r3, [fp, #-48]
 3346 01d0 8322A0E1 		lsl	r2, r3, #5
 3347 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 3348 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3349 01dc 033082E0 		add	r3, r2, r3
 3350 01e0 14300BE5 		str	r3, [fp, #-20]
2037:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
2038:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Cpt_Del,Type_Stat,RME_CAP_TYPE_CPT);
 3351              		.loc 1 2038 5 is_stmt 1
 3352 01e4 14301BE5 		ldr	r3, [fp, #-20]
 3353 01e8 0300A0E1 		mov	r0, r3
 3354 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3355 01f0 10000BE5 		str	r0, [fp, #-16]
 3356              		.loc 1 2038 5 is_stmt 0 discriminator 1
 3357 01f4 10301BE5 		ldr	r3, [fp, #-16]
 3358 01f8 FF3803E2 		and	r3, r3, #16711680
 3359 01fc 020853E3 		cmp	r3, #131072
 3360 0200 0100000A 		beq	.L210
 3361 0204 0830E0E3 		mvn	r3, #8
 3362              		.loc 1 2038 5
 3363 0208 6F0000EA 		b	.L200
 3364              	.L210:
 3365              		.loc 1 2038 5 discriminator 2
 3366 020c 10301BE5 		ldr	r3, [fp, #-16]
 3367 0210 233CA0E1 		lsr	r3, r3, #24
 3368 0214 030053E3 		cmp	r3, #3
 3369 0218 0100000A 		beq	.L211
 3370              		.loc 1 2038 5 discriminator 3
 3371 021c 0130E0E3 		mvn	r3, #1
 3372              		.loc 1 2038 5
 3373 0220 690000EA 		b	.L200
 3374              	.L211:
 3375              		.loc 1 2038 5 discriminator 4
 3376 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3377 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3378 022c 002093E5 		ldr	r2, [r3]
 3379 0230 14301BE5 		ldr	r3, [fp, #-20]
 3380 0234 103093E5 		ldr	r3, [r3, #16]
 3381 0238 0310A0E1 		mov	r1, r3
 3382 023c 0200A0E1 		mov	r0, r2
 3383 0240 FEFFFFEB 		bl	_RME_Diff
 3384 0244 0030A0E1 		mov	r3, r0
 3385              		.loc 1 2038 5 discriminator 1
 3386 0248 0A0053E3 		cmp	r3, #10
 3387 024c 0100008A 		bhi	.L212
 3388              		.loc 1 2038 5 discriminator 5
 3389 0250 0730E0E3 		mvn	r3, #7
 3390              		.loc 1 2038 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 97


 3391 0254 5C0000EA 		b	.L200
 3392              	.L212:
 3393              		.loc 1 2038 5 discriminator 6
 3394 0258 14301BE5 		ldr	r3, [fp, #-20]
 3395 025c 043093E5 		ldr	r3, [r3, #4]
 3396 0260 000053E3 		cmp	r3, #0
 3397 0264 0B00000A 		beq	.L213
 3398              		.loc 1 2038 5 discriminator 7
 3399 0268 10301BE5 		ldr	r3, [fp, #-16]
 3400 026c 7330FFE6 		uxth	r3, r3
 3401 0270 000053E3 		cmp	r3, #0
 3402 0274 0500001A 		bne	.L214
 3403              		.loc 1 2038 5 discriminator 9
 3404 0278 14001BE5 		ldr	r0, [fp, #-20]
 3405 027c 10301BE5 		ldr	r3, [fp, #-16]
 3406 0280 FF38C3E3 		bic	r3, r3, #16711680
 3407 0284 0320A0E1 		mov	r2, r3
 3408 0288 10101BE5 		ldr	r1, [fp, #-16]
 3409 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3410              	.L214:
 3411              		.loc 1 2038 5 discriminator 11
 3412 0290 0530E0E3 		mvn	r3, #5
 3413              		.loc 1 2038 5
 3414 0294 4C0000EA 		b	.L200
 3415              	.L213:
 3416              		.loc 1 2038 5 discriminator 8
 3417 0298 10301BE5 		ldr	r3, [fp, #-16]
 3418 029c 7330FFE6 		uxth	r3, r3
 3419 02a0 000053E3 		cmp	r3, #0
 3420 02a4 0800000A 		beq	.L215
 3421              		.loc 1 2038 5 discriminator 12
 3422 02a8 003000E3 		movw	r3, #:lower16:.LC2
 3423 02ac 003040E3 		movt	r3, #:upper16:.LC2
 3424 02b0 002000E3 		movw	r2, #:lower16:.LC3
 3425 02b4 002040E3 		movt	r2, #:upper16:.LC3
 3426 02b8 F61700E3 		movw	r1, #2038
 3427 02bc 000000E3 		movw	r0, #:lower16:.LC4
 3428 02c0 000040E3 		movt	r0, #:upper16:.LC4
 3429 02c4 FEFFFFEB 		bl	RME_Log
 3430              	.L216:
 3431              		.loc 1 2038 5
 3432 02c8 FEFFFFEA 		b	.L216
 3433              	.L215:
2039:../../Source/Kernel/rme_kernel.c ****     
2040:../../Source/Kernel/rme_kernel.c ****     /* Is there any capability in this capability table? If yes, we cannot destroy it.
2041:../../Source/Kernel/rme_kernel.c ****      * We will check every slot to make sure nothing is there. This is surely,
2042:../../Source/Kernel/rme_kernel.c ****      * predictable but not so perfect. So, if the time of such operations is to be 
2043:../../Source/Kernel/rme_kernel.c ****      * bounded, the user must control the maximum number of entries in the table
2044:../../Source/Kernel/rme_kernel.c ****      * by configuring RME_CPT_ENTRY_MAX to a non-zero value. */
2045:../../Source/Kernel/rme_kernel.c ****     Table=RME_CAP_GETOBJ(Cpt_Del,struct RME_Cap_Struct*);
 3434              		.loc 1 2045 11 is_stmt 1
 3435 02cc 14301BE5 		ldr	r3, [fp, #-20]
 3436 02d0 0C3093E5 		ldr	r3, [r3, #12]
 3437              		.loc 1 2045 10
 3438 02d4 18300BE5 		str	r3, [fp, #-24]
2046:../../Source/Kernel/rme_kernel.c ****     Entry_Num=Cpt_Del->Entry_Num;
 3439              		.loc 1 2046 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 98


 3440 02d8 14301BE5 		ldr	r3, [fp, #-20]
 3441 02dc 143093E5 		ldr	r3, [r3, #20]
 3442 02e0 1C300BE5 		str	r3, [fp, #-28]
2047:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3443              		.loc 1 2047 14
 3444 02e4 0030A0E3 		mov	r3, #0
 3445 02e8 08300BE5 		str	r3, [fp, #-8]
 3446              		.loc 1 2047 5
 3447 02ec 110000EA 		b	.L217
 3448              	.L219:
2048:../../Source/Kernel/rme_kernel.c ****     {
2049:../../Source/Kernel/rme_kernel.c ****         if(Table[Count].Head.Type_Stat!=0U)
 3449              		.loc 1 2049 17
 3450 02f0 08301BE5 		ldr	r3, [fp, #-8]
 3451 02f4 8332A0E1 		lsl	r3, r3, #5
 3452 02f8 18201BE5 		ldr	r2, [fp, #-24]
 3453 02fc 033082E0 		add	r3, r2, r3
 3454              		.loc 1 2049 29
 3455 0300 003093E5 		ldr	r3, [r3]
 3456              		.loc 1 2049 11
 3457 0304 000053E3 		cmp	r3, #0
 3458 0308 0700000A 		beq	.L218
2050:../../Source/Kernel/rme_kernel.c ****         {
2051:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2052:../../Source/Kernel/rme_kernel.c ****             
2053:../../Source/Kernel/rme_kernel.c ****             RME_CAP_DEFROST(Cpt_Del,Type_Stat);
 3459              		.loc 1 2053 13
 3460 030c 14001BE5 		ldr	r0, [fp, #-20]
 3461 0310 10301BE5 		ldr	r3, [fp, #-16]
 3462 0314 FF38C3E3 		bic	r3, r3, #16711680
 3463 0318 0320A0E1 		mov	r2, r3
 3464 031c 10101BE5 		ldr	r1, [fp, #-16]
 3465 0320 FEFFFFEB 		bl	_RME_Comp_Swap_Single
2054:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_EXIST;
 3466              		.loc 1 2054 20
 3467 0324 0430E0E3 		mvn	r3, #4
 3468 0328 270000EA 		b	.L200
 3469              	.L218:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3470              		.loc 1 2047 39 discriminator 2
 3471 032c 08301BE5 		ldr	r3, [fp, #-8]
 3472 0330 013083E2 		add	r3, r3, #1
 3473 0334 08300BE5 		str	r3, [fp, #-8]
 3474              	.L217:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3475              		.loc 1 2047 23 discriminator 1
 3476 0338 08201BE5 		ldr	r2, [fp, #-8]
 3477 033c 1C301BE5 		ldr	r3, [fp, #-28]
 3478 0340 030052E1 		cmp	r2, r3
 3479 0344 E9FFFF3A 		bcc	.L219
2055:../../Source/Kernel/rme_kernel.c ****         }
2056:../../Source/Kernel/rme_kernel.c ****         else
2057:../../Source/Kernel/rme_kernel.c ****         {
2058:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2059:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2060:../../Source/Kernel/rme_kernel.c ****         }
2061:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 99


2062:../../Source/Kernel/rme_kernel.c ****     
2063:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
2064:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Cpt_Del,rme_ptr_t);
 3480              		.loc 1 2064 11
 3481 0348 14301BE5 		ldr	r3, [fp, #-20]
 3482 034c 0C3093E5 		ldr	r3, [r3, #12]
 3483 0350 20300BE5 		str	r3, [fp, #-32]
2065:../../Source/Kernel/rme_kernel.c ****     Size=RME_CPT_SIZE(Cpt_Del->Entry_Num);
 3484              		.loc 1 2065 10
 3485 0354 14301BE5 		ldr	r3, [fp, #-20]
 3486 0358 143093E5 		ldr	r3, [r3, #20]
 3487              		.loc 1 2065 9
 3488 035c 8332A0E1 		lsl	r3, r3, #5
 3489 0360 24300BE5 		str	r3, [fp, #-36]
2066:../../Source/Kernel/rme_kernel.c **** 
2067:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
2068:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Cpt_Del,Type_Stat);
 3490              		.loc 1 2068 5
 3491 0364 14301BE5 		ldr	r3, [fp, #-20]
 3492 0368 0020A0E3 		mov	r2, #0
 3493 036c 10101BE5 		ldr	r1, [fp, #-16]
 3494 0370 0300A0E1 		mov	r0, r3
 3495 0374 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3496 0378 0030A0E1 		mov	r3, r0
 3497              		.loc 1 2068 5 is_stmt 0 discriminator 1
 3498 037c 000053E3 		cmp	r3, #0
 3499 0380 0100001A 		bne	.L220
 3500 0384 0030E0E3 		mvn	r3, #0
 3501              		.loc 1 2068 5
 3502 0388 0F0000EA 		b	.L200
 3503              	.L220:
2069:../../Source/Kernel/rme_kernel.c **** 
2070:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
2071:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Size)==0);
 3504              		.loc 1 2071 5 is_stmt 1
 3505 038c 24101BE5 		ldr	r1, [fp, #-36]
 3506 0390 20001BE5 		ldr	r0, [fp, #-32]
 3507 0394 FEFFFFEB 		bl	_RME_Kot_Erase
 3508 0398 0030A0E1 		mov	r3, r0
 3509              		.loc 1 2071 5 is_stmt 0 discriminator 1
 3510 039c 000053E3 		cmp	r3, #0
 3511 03a0 0800000A 		beq	.L221
 3512 03a4 003000E3 		movw	r3, #:lower16:.LC2
 3513 03a8 003040E3 		movt	r3, #:upper16:.LC2
 3514 03ac 002000E3 		movw	r2, #:lower16:.LC3
 3515 03b0 002040E3 		movt	r2, #:upper16:.LC3
 3516 03b4 171800E3 		movw	r1, #2071
 3517 03b8 000000E3 		movw	r0, #:lower16:.LC4
 3518 03bc 000040E3 		movt	r0, #:upper16:.LC4
 3519 03c0 FEFFFFEB 		bl	RME_Log
 3520              	.L222:
 3521              		.loc 1 2071 5
 3522 03c4 FEFFFFEA 		b	.L222
 3523              	.L221:
2072:../../Source/Kernel/rme_kernel.c ****     
2073:../../Source/Kernel/rme_kernel.c ****     return 0;
 3524              		.loc 1 2073 12 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 100


 3525 03c8 0030A0E3 		mov	r3, #0
 3526              	.L200:
2074:../../Source/Kernel/rme_kernel.c **** }
 3527              		.loc 1 2074 1
 3528 03cc 0300A0E1 		mov	r0, r3
 3529 03d0 04D04BE2 		sub	sp, fp, #4
 3530              		.cfi_def_cfa 13, 8
 3531              		@ sp needed
 3532 03d4 0088BDE8 		pop	{fp, pc}
 3533              		.cfi_endproc
 3534              	.LFE25:
 3536              		.section	.text._RME_Cpt_Frz,"ax",%progbits
 3537              		.align	2
 3538              		.syntax unified
 3539              		.arm
 3541              	_RME_Cpt_Frz:
 3542              	.LFB26:
2075:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Del *************************************************/
2076:../../Source/Kernel/rme_kernel.c **** 
2077:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Frz ******************************************************
2078:../../Source/Kernel/rme_kernel.c **** Description : Freeze a capability in the capability table.
2079:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2080:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Frz  - The capability table containing the cap
2081:../../Source/Kernel/rme_kernel.c ****                                        to captbl for this operation.
2082:../../Source/Kernel/rme_kernel.c ****                                        2-Level.
2083:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Frz - The cap to the kernel object being freezed.
2084:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2085:../../Source/Kernel/rme_kernel.c **** Output      : None.
2086:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2087:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2088:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Frz(struct RME_Cap_Cpt* Cpt,
2089:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Frz,
2090:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Frz)
2091:../../Source/Kernel/rme_kernel.c **** {
 3543              		.loc 1 2091 1
 3544              		.cfi_startproc
 3545              		@ args = 0, pretend = 0, frame = 32
 3546              		@ frame_needed = 1, uses_anonymous_args = 0
 3547 0000 00482DE9 		push	{fp, lr}
 3548              		.cfi_def_cfa_offset 8
 3549              		.cfi_offset 11, -8
 3550              		.cfi_offset 14, -4
 3551 0004 04B08DE2 		add	fp, sp, #4
 3552              		.cfi_def_cfa 11, 4
 3553 0008 20D04DE2 		sub	sp, sp, #32
 3554 000c 18000BE5 		str	r0, [fp, #-24]
 3555 0010 1C100BE5 		str	r1, [fp, #-28]
 3556 0014 20200BE5 		str	r2, [fp, #-32]
2092:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2093:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Frz;
2094:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2095:../../Source/Kernel/rme_kernel.c ****     
2096:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2097:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Frz,RME_CAP_TYPE_CPT,
 3557              		.loc 1 2097 5
 3558 0018 1C301BE5 		ldr	r3, [fp, #-28]
 3559 001c 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 101


 3560 0020 000053E3 		cmp	r3, #0
 3561 0024 1C00001A 		bne	.L224
 3562              		.loc 1 2097 5 is_stmt 0 discriminator 1
 3563 0028 18301BE5 		ldr	r3, [fp, #-24]
 3564 002c 142093E5 		ldr	r2, [r3, #20]
 3565 0030 1C301BE5 		ldr	r3, [fp, #-28]
 3566 0034 030052E1 		cmp	r2, r3
 3567 0038 0100008A 		bhi	.L225
 3568              		.loc 1 2097 5 discriminator 3
 3569 003c 0230E0E3 		mvn	r3, #2
 3570              		.loc 1 2097 5
 3571 0040 9B0000EA 		b	.L226
 3572              	.L225:
 3573              		.loc 1 2097 5 discriminator 4
 3574 0044 1C301BE5 		ldr	r3, [fp, #-28]
 3575 0048 8322A0E1 		lsl	r2, r3, #5
 3576 004c 18301BE5 		ldr	r3, [fp, #-24]
 3577 0050 0C3093E5 		ldr	r3, [r3, #12]
 3578 0054 033082E0 		add	r3, r2, r3
 3579 0058 08300BE5 		str	r3, [fp, #-8]
 3580 005c 08301BE5 		ldr	r3, [fp, #-8]
 3581 0060 0300A0E1 		mov	r0, r3
 3582 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3583 0068 0C000BE5 		str	r0, [fp, #-12]
 3584              		.loc 1 2097 5 discriminator 1
 3585 006c 0C301BE5 		ldr	r3, [fp, #-12]
 3586 0070 FF3803E2 		and	r3, r3, #16711680
 3587 0074 020853E3 		cmp	r3, #131072
 3588 0078 0100001A 		bne	.L227
 3589              		.loc 1 2097 5 discriminator 5
 3590 007c 0830E0E3 		mvn	r3, #8
 3591              		.loc 1 2097 5
 3592 0080 8B0000EA 		b	.L226
 3593              	.L227:
 3594              		.loc 1 2097 5 discriminator 6
 3595 0084 0C301BE5 		ldr	r3, [fp, #-12]
 3596 0088 233CA0E1 		lsr	r3, r3, #24
 3597 008c 030053E3 		cmp	r3, #3
 3598 0090 3F00000A 		beq	.L228
 3599              		.loc 1 2097 5 discriminator 7
 3600 0094 0130E0E3 		mvn	r3, #1
 3601              		.loc 1 2097 5
 3602 0098 850000EA 		b	.L226
 3603              	.L224:
 3604              		.loc 1 2097 5 discriminator 2
 3605 009c 1C301BE5 		ldr	r3, [fp, #-28]
 3606 00a0 2324A0E1 		lsr	r2, r3, #8
 3607 00a4 18301BE5 		ldr	r3, [fp, #-24]
 3608 00a8 143093E5 		ldr	r3, [r3, #20]
 3609 00ac 030052E1 		cmp	r2, r3
 3610 00b0 0100003A 		bcc	.L229
 3611              		.loc 1 2097 5 discriminator 8
 3612 00b4 0230E0E3 		mvn	r3, #2
 3613              		.loc 1 2097 5
 3614 00b8 7D0000EA 		b	.L226
 3615              	.L229:
 3616              		.loc 1 2097 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 102


 3617 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 3618 00c0 2334A0E1 		lsr	r3, r3, #8
 3619 00c4 8322A0E1 		lsl	r2, r3, #5
 3620 00c8 18301BE5 		ldr	r3, [fp, #-24]
 3621 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3622 00d0 033082E0 		add	r3, r2, r3
 3623 00d4 08300BE5 		str	r3, [fp, #-8]
 3624 00d8 08301BE5 		ldr	r3, [fp, #-8]
 3625 00dc 0300A0E1 		mov	r0, r3
 3626 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3627 00e4 0C000BE5 		str	r0, [fp, #-12]
 3628              		.loc 1 2097 5 discriminator 1
 3629 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 3630 00ec FF3803E2 		and	r3, r3, #16711680
 3631 00f0 020853E3 		cmp	r3, #131072
 3632 00f4 0100001A 		bne	.L230
 3633              		.loc 1 2097 5 discriminator 10
 3634 00f8 0830E0E3 		mvn	r3, #8
 3635              		.loc 1 2097 5
 3636 00fc 6C0000EA 		b	.L226
 3637              	.L230:
 3638              		.loc 1 2097 5 discriminator 11
 3639 0100 0C301BE5 		ldr	r3, [fp, #-12]
 3640 0104 233CA0E1 		lsr	r3, r3, #24
 3641 0108 030053E3 		cmp	r3, #3
 3642 010c 0100000A 		beq	.L231
 3643              		.loc 1 2097 5 discriminator 12
 3644 0110 0130E0E3 		mvn	r3, #1
 3645              		.loc 1 2097 5
 3646 0114 660000EA 		b	.L226
 3647              	.L231:
 3648              		.loc 1 2097 5 discriminator 13
 3649 0118 1C301BE5 		ldr	r3, [fp, #-28]
 3650 011c 7F2003E2 		and	r2, r3, #127
 3651 0120 08301BE5 		ldr	r3, [fp, #-8]
 3652 0124 143093E5 		ldr	r3, [r3, #20]
 3653 0128 030052E1 		cmp	r2, r3
 3654 012c 0100003A 		bcc	.L232
 3655              		.loc 1 2097 5 discriminator 14
 3656 0130 0230E0E3 		mvn	r3, #2
 3657              		.loc 1 2097 5
 3658 0134 5E0000EA 		b	.L226
 3659              	.L232:
 3660              		.loc 1 2097 5 discriminator 15
 3661 0138 1C301BE5 		ldr	r3, [fp, #-28]
 3662 013c 7F3003E2 		and	r3, r3, #127
 3663 0140 8322A0E1 		lsl	r2, r3, #5
 3664 0144 08301BE5 		ldr	r3, [fp, #-8]
 3665 0148 0C3093E5 		ldr	r3, [r3, #12]
 3666 014c 033082E0 		add	r3, r2, r3
 3667 0150 08300BE5 		str	r3, [fp, #-8]
 3668 0154 08301BE5 		ldr	r3, [fp, #-8]
 3669 0158 0300A0E1 		mov	r0, r3
 3670 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3671 0160 0C000BE5 		str	r0, [fp, #-12]
 3672              		.loc 1 2097 5 discriminator 1
 3673 0164 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 103


 3674 0168 FF3803E2 		and	r3, r3, #16711680
 3675 016c 020853E3 		cmp	r3, #131072
 3676 0170 0100001A 		bne	.L233
 3677              		.loc 1 2097 5 discriminator 16
 3678 0174 0830E0E3 		mvn	r3, #8
 3679              		.loc 1 2097 5
 3680 0178 4D0000EA 		b	.L226
 3681              	.L233:
 3682              		.loc 1 2097 5 discriminator 17
 3683 017c 0C301BE5 		ldr	r3, [fp, #-12]
 3684 0180 233CA0E1 		lsr	r3, r3, #24
 3685 0184 030053E3 		cmp	r3, #3
 3686 0188 0100000A 		beq	.L228
 3687              		.loc 1 2097 5 discriminator 18
 3688 018c 0130E0E3 		mvn	r3, #1
 3689              		.loc 1 2097 5
 3690 0190 470000EA 		b	.L226
 3691              	.L228:
2098:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2099:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2100:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_FRZ);
 3692              		.loc 1 2100 5 is_stmt 1
 3693 0194 08301BE5 		ldr	r3, [fp, #-8]
 3694 0198 083093E5 		ldr	r3, [r3, #8]
 3695 019c 043003E2 		and	r3, r3, #4
 3696 01a0 000053E3 		cmp	r3, #0
 3697 01a4 0100001A 		bne	.L234
 3698              		.loc 1 2100 5 is_stmt 0 discriminator 1
 3699 01a8 0630E0E3 		mvn	r3, #6
 3700              		.loc 1 2100 5
 3701 01ac 400000EA 		b	.L226
 3702              	.L234:
2101:../../Source/Kernel/rme_kernel.c ****     
2102:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2103:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Frz,struct RME_Cap_Struct*,Capobj_Frz);
 3703              		.loc 1 2103 5 is_stmt 1
 3704 01b0 08301BE5 		ldr	r3, [fp, #-8]
 3705 01b4 142093E5 		ldr	r2, [r3, #20]
 3706 01b8 20301BE5 		ldr	r3, [fp, #-32]
 3707 01bc 030052E1 		cmp	r2, r3
 3708 01c0 0100008A 		bhi	.L235
 3709              		.loc 1 2103 5 is_stmt 0 discriminator 1
 3710 01c4 0230E0E3 		mvn	r3, #2
 3711              		.loc 1 2103 5
 3712 01c8 390000EA 		b	.L226
 3713              	.L235:
 3714              		.loc 1 2103 5 discriminator 2
 3715 01cc 20301BE5 		ldr	r3, [fp, #-32]
 3716 01d0 8322A0E1 		lsl	r2, r3, #5
 3717 01d4 08301BE5 		ldr	r3, [fp, #-8]
 3718 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3719 01dc 033082E0 		add	r3, r2, r3
 3720 01e0 10300BE5 		str	r3, [fp, #-16]
2104:../../Source/Kernel/rme_kernel.c ****     
2105:../../Source/Kernel/rme_kernel.c ****     /* Check if anything is there. If nothing there, the Type_Stat must be 0. 
2106:../../Source/Kernel/rme_kernel.c ****      * Need a read acquire barrier here to avoid stale reads below. */
2107:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Frz->Head.Type_Stat));
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 104


 3721              		.loc 1 2107 15 is_stmt 1
 3722 01e4 10301BE5 		ldr	r3, [fp, #-16]
 3723 01e8 0300A0E1 		mov	r0, r3
 3724 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3725 01f0 0C000BE5 		str	r0, [fp, #-12]
2108:../../Source/Kernel/rme_kernel.c ****     /* See if there is a cap */
2109:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_TYPE(Type_Stat)==RME_CAP_TYPE_NOP)
 3726              		.loc 1 2109 8
 3727 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 3728 01f8 233CA0E1 		lsr	r3, r3, #24
 3729              		.loc 1 2109 7
 3730 01fc 000053E3 		cmp	r3, #0
 3731 0200 0100001A 		bne	.L236
2110:../../Source/Kernel/rme_kernel.c ****     {
2111:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2112:../../Source/Kernel/rme_kernel.c ****         
2113:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 3732              		.loc 1 2113 16
 3733 0204 0030E0E3 		mvn	r3, #0
 3734 0208 290000EA 		b	.L226
 3735              	.L236:
2114:../../Source/Kernel/rme_kernel.c ****     }
2115:../../Source/Kernel/rme_kernel.c ****     else
2116:../../Source/Kernel/rme_kernel.c ****     {
2117:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2118:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2119:../../Source/Kernel/rme_kernel.c ****     }
2120:../../Source/Kernel/rme_kernel.c ****     
2121:../../Source/Kernel/rme_kernel.c ****     /* If this is a root capability, check if the reference count allows freezing */
2122:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_ATTR(Type_Stat)==RME_CAP_ATTR_ROOT)
 3736              		.loc 1 2122 8
 3737 020c 0C301BE5 		ldr	r3, [fp, #-12]
 3738 0210 7330FFE6 		uxth	r3, r3
 3739              		.loc 1 2122 7
 3740 0214 000053E3 		cmp	r3, #0
 3741 0218 0500001A 		bne	.L237
2123:../../Source/Kernel/rme_kernel.c ****     {
2124:../../Source/Kernel/rme_kernel.c ****         if(Capobj_Frz->Head.Root_Ref!=0U)
 3742              		.loc 1 2124 28
 3743 021c 10301BE5 		ldr	r3, [fp, #-16]
 3744 0220 043093E5 		ldr	r3, [r3, #4]
 3745              		.loc 1 2124 11
 3746 0224 000053E3 		cmp	r3, #0
 3747 0228 0100000A 		beq	.L237
2125:../../Source/Kernel/rme_kernel.c ****         {
2126:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2127:../../Source/Kernel/rme_kernel.c ****             
2128:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_REFCNT;
 3748              		.loc 1 2128 20
 3749 022c 0530E0E3 		mvn	r3, #5
 3750 0230 1F0000EA 		b	.L226
 3751              	.L237:
2129:../../Source/Kernel/rme_kernel.c ****         }
2130:../../Source/Kernel/rme_kernel.c ****         else
2131:../../Source/Kernel/rme_kernel.c ****         {
2132:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2133:../../Source/Kernel/rme_kernel.c ****             /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 105


2134:../../Source/Kernel/rme_kernel.c ****         }
2135:../../Source/Kernel/rme_kernel.c ****     }
2136:../../Source/Kernel/rme_kernel.c ****     else
2137:../../Source/Kernel/rme_kernel.c ****     {
2138:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2139:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2140:../../Source/Kernel/rme_kernel.c ****     }
2141:../../Source/Kernel/rme_kernel.c ****     
2142:../../Source/Kernel/rme_kernel.c ****     /* The capability is already frozen - why do it again? */
2143:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 3752              		.loc 1 2143 31
 3753 0234 0C301BE5 		ldr	r3, [fp, #-12]
 3754 0238 FF3803E2 		and	r3, r3, #16711680
 3755              		.loc 1 2143 7
 3756 023c 020853E3 		cmp	r3, #131072
 3757 0240 0100001A 		bne	.L238
2144:../../Source/Kernel/rme_kernel.c ****     {
2145:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2146:../../Source/Kernel/rme_kernel.c ****         
2147:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 3758              		.loc 1 2147 16
 3759 0244 0830E0E3 		mvn	r3, #8
 3760 0248 190000EA 		b	.L226
 3761              	.L238:
2148:../../Source/Kernel/rme_kernel.c ****     }
2149:../../Source/Kernel/rme_kernel.c ****     else
2150:../../Source/Kernel/rme_kernel.c ****     {
2151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2152:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2153:../../Source/Kernel/rme_kernel.c ****     }
2154:../../Source/Kernel/rme_kernel.c ****     
2155:../../Source/Kernel/rme_kernel.c ****     /* See if the slot is quiescent */
2156:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_CAP_QUIE(Capobj_Frz->Head.Timestamp)==0U))
 3762              		.loc 1 2156 8
 3763 024c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3764 0250 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3765 0254 002093E5 		ldr	r2, [r3]
 3766 0258 10301BE5 		ldr	r3, [fp, #-16]
 3767 025c 103093E5 		ldr	r3, [r3, #16]
 3768 0260 0310A0E1 		mov	r1, r3
 3769 0264 0200A0E1 		mov	r0, r2
 3770 0268 FEFFFFEB 		bl	_RME_Diff
 3771 026c 0030A0E1 		mov	r3, r0
 3772              		.loc 1 2156 7 discriminator 1
 3773 0270 0A0053E3 		cmp	r3, #10
 3774 0274 0100008A 		bhi	.L239
2157:../../Source/Kernel/rme_kernel.c ****     {
2158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2159:../../Source/Kernel/rme_kernel.c ****         
2160:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_QUIE;
 3775              		.loc 1 2160 16
 3776 0278 0730E0E3 		mvn	r3, #7
 3777 027c 0C0000EA 		b	.L226
 3778              	.L239:
2161:../../Source/Kernel/rme_kernel.c ****     }
2162:../../Source/Kernel/rme_kernel.c ****     else
2163:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 106


2164:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2165:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2166:../../Source/Kernel/rme_kernel.c ****     }
2167:../../Source/Kernel/rme_kernel.c **** 
2168:../../Source/Kernel/rme_kernel.c ****     /* Update the timestamp */
2169:../../Source/Kernel/rme_kernel.c ****     Capobj_Frz->Head.Timestamp=RME_TIMESTAMP;
 3779              		.loc 1 2169 31
 3780 0280 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3781 0284 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3782 0288 002093E5 		ldr	r2, [r3]
 3783 028c 10301BE5 		ldr	r3, [fp, #-16]
 3784 0290 102083E5 		str	r2, [r3, #16]
2170:../../Source/Kernel/rme_kernel.c ****     
2171:../../Source/Kernel/rme_kernel.c ****     /* Finally, freeze it. We do not report error here because if we CASFAIL someone must have help
2172:../../Source/Kernel/rme_kernel.c ****     RME_COMP_SWAP(&(Capobj_Frz->Head.Type_Stat),Type_Stat,
 3785              		.loc 1 2172 5
 3786 0294 10001BE5 		ldr	r0, [fp, #-16]
 3787 0298 0C301BE5 		ldr	r3, [fp, #-12]
 3788 029c FF38C3E3 		bic	r3, r3, #16711680
 3789 02a0 023883E3 		orr	r3, r3, #131072
 3790 02a4 0320A0E1 		mov	r2, r3
 3791 02a8 0C101BE5 		ldr	r1, [fp, #-12]
 3792 02ac FEFFFFEB 		bl	_RME_Comp_Swap_Single
2173:../../Source/Kernel/rme_kernel.c ****                   RME_CAP_TYPE_STAT(RME_CAP_TYPE(Type_Stat),
2174:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_STAT_FROZEN,
2175:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_ATTR(Type_Stat)));
2176:../../Source/Kernel/rme_kernel.c **** 
2177:../../Source/Kernel/rme_kernel.c ****     return 0;
 3793              		.loc 1 2177 12
 3794 02b0 0030A0E3 		mov	r3, #0
 3795              	.L226:
2178:../../Source/Kernel/rme_kernel.c **** }
 3796              		.loc 1 2178 1
 3797 02b4 0300A0E1 		mov	r0, r3
 3798 02b8 04D04BE2 		sub	sp, fp, #4
 3799              		.cfi_def_cfa 13, 8
 3800              		@ sp needed
 3801 02bc 0088BDE8 		pop	{fp, pc}
 3802              		.cfi_endproc
 3803              	.LFE26:
 3805              		.section	.text._RME_Cpt_Add,"ax",%progbits
 3806              		.align	2
 3807              		.syntax unified
 3808              		.arm
 3810              	_RME_Cpt_Add:
 3811              	.LFB27:
2179:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Frz *************************************************/
2180:../../Source/Kernel/rme_kernel.c **** 
2181:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Add ******************************************************
2182:../../Source/Kernel/rme_kernel.c **** Description : Delegate capability from one capability table to another.
2183:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2184:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Dst - The capability to the destination 
2185:../../Source/Kernel/rme_kernel.c ****                                       capability table.
2186:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2187:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Dst - The capability slot you want to add to.
2188:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2189:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Src - The capability to the source capability
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 107


2190:../../Source/Kernel/rme_kernel.c ****                                       table.
2191:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2192:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Src - The capability in the source capability table
2193:../../Source/Kernel/rme_kernel.c ****                                   to delegate.
2194:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2195:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the capability.
2196:../../Source/Kernel/rme_kernel.c **** Output      : None.
2197:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2198:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2199:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Add(struct RME_Cap_Cpt* Cpt,
2200:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Dst,
2201:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Dst, 
2202:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Src,
2203:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Src,
2204:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag,
2205:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Ext_Flag)
2206:../../Source/Kernel/rme_kernel.c **** {
 3812              		.loc 1 2206 1
 3813              		.cfi_startproc
 3814              		@ args = 12, pretend = 0, frame = 56
 3815              		@ frame_needed = 1, uses_anonymous_args = 0
 3816 0000 00482DE9 		push	{fp, lr}
 3817              		.cfi_def_cfa_offset 8
 3818              		.cfi_offset 11, -8
 3819              		.cfi_offset 14, -4
 3820 0004 04B08DE2 		add	fp, sp, #4
 3821              		.cfi_def_cfa 11, 4
 3822 0008 38D04DE2 		sub	sp, sp, #56
 3823 000c 30000BE5 		str	r0, [fp, #-48]
 3824 0010 34100BE5 		str	r1, [fp, #-52]
 3825 0014 38200BE5 		str	r2, [fp, #-56]
 3826 0018 3C300BE5 		str	r3, [fp, #-60]
2207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Dst;
2208:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Src;
2209:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Dst;
2210:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Src;
2211:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2212:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Src_Type;
2213:../../Source/Kernel/rme_kernel.c ****     
2214:../../Source/Kernel/rme_kernel.c ****     /* These variables are only used for kernel memory checks */
2215:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
2216:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
2217:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Flag;
2218:../../Source/Kernel/rme_kernel.c **** 
2219:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2220:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Dst,RME_CAP_TYPE_CPT,
 3827              		.loc 1 2220 5
 3828 001c 34301BE5 		ldr	r3, [fp, #-52]
 3829 0020 803003E2 		and	r3, r3, #128
 3830 0024 000053E3 		cmp	r3, #0
 3831 0028 1C00001A 		bne	.L241
 3832              		.loc 1 2220 5 is_stmt 0 discriminator 1
 3833 002c 30301BE5 		ldr	r3, [fp, #-48]
 3834 0030 142093E5 		ldr	r2, [r3, #20]
 3835 0034 34301BE5 		ldr	r3, [fp, #-52]
 3836 0038 030052E1 		cmp	r2, r3
 3837 003c 0100008A 		bhi	.L242
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 108


 3838              		.loc 1 2220 5 discriminator 3
 3839 0040 0230E0E3 		mvn	r3, #2
 3840              		.loc 1 2220 5
 3841 0044 020200EA 		b	.L243
 3842              	.L242:
 3843              		.loc 1 2220 5 discriminator 4
 3844 0048 34301BE5 		ldr	r3, [fp, #-52]
 3845 004c 8322A0E1 		lsl	r2, r3, #5
 3846 0050 30301BE5 		ldr	r3, [fp, #-48]
 3847 0054 0C3093E5 		ldr	r3, [r3, #12]
 3848 0058 033082E0 		add	r3, r2, r3
 3849 005c 08300BE5 		str	r3, [fp, #-8]
 3850 0060 08301BE5 		ldr	r3, [fp, #-8]
 3851 0064 0300A0E1 		mov	r0, r3
 3852 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3853 006c 1C000BE5 		str	r0, [fp, #-28]
 3854              		.loc 1 2220 5 discriminator 1
 3855 0070 1C301BE5 		ldr	r3, [fp, #-28]
 3856 0074 FF3803E2 		and	r3, r3, #16711680
 3857 0078 020853E3 		cmp	r3, #131072
 3858 007c 0100001A 		bne	.L244
 3859              		.loc 1 2220 5 discriminator 5
 3860 0080 0830E0E3 		mvn	r3, #8
 3861              		.loc 1 2220 5
 3862 0084 F20100EA 		b	.L243
 3863              	.L244:
 3864              		.loc 1 2220 5 discriminator 6
 3865 0088 1C301BE5 		ldr	r3, [fp, #-28]
 3866 008c 233CA0E1 		lsr	r3, r3, #24
 3867 0090 030053E3 		cmp	r3, #3
 3868 0094 3F00000A 		beq	.L245
 3869              		.loc 1 2220 5 discriminator 7
 3870 0098 0130E0E3 		mvn	r3, #1
 3871              		.loc 1 2220 5
 3872 009c EC0100EA 		b	.L243
 3873              	.L241:
 3874              		.loc 1 2220 5 discriminator 2
 3875 00a0 34301BE5 		ldr	r3, [fp, #-52]
 3876 00a4 2324A0E1 		lsr	r2, r3, #8
 3877 00a8 30301BE5 		ldr	r3, [fp, #-48]
 3878 00ac 143093E5 		ldr	r3, [r3, #20]
 3879 00b0 030052E1 		cmp	r2, r3
 3880 00b4 0100003A 		bcc	.L246
 3881              		.loc 1 2220 5 discriminator 8
 3882 00b8 0230E0E3 		mvn	r3, #2
 3883              		.loc 1 2220 5
 3884 00bc E40100EA 		b	.L243
 3885              	.L246:
 3886              		.loc 1 2220 5 discriminator 9
 3887 00c0 34301BE5 		ldr	r3, [fp, #-52]
 3888 00c4 2334A0E1 		lsr	r3, r3, #8
 3889 00c8 8322A0E1 		lsl	r2, r3, #5
 3890 00cc 30301BE5 		ldr	r3, [fp, #-48]
 3891 00d0 0C3093E5 		ldr	r3, [r3, #12]
 3892 00d4 033082E0 		add	r3, r2, r3
 3893 00d8 08300BE5 		str	r3, [fp, #-8]
 3894 00dc 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 109


 3895 00e0 0300A0E1 		mov	r0, r3
 3896 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3897 00e8 1C000BE5 		str	r0, [fp, #-28]
 3898              		.loc 1 2220 5 discriminator 1
 3899 00ec 1C301BE5 		ldr	r3, [fp, #-28]
 3900 00f0 FF3803E2 		and	r3, r3, #16711680
 3901 00f4 020853E3 		cmp	r3, #131072
 3902 00f8 0100001A 		bne	.L247
 3903              		.loc 1 2220 5 discriminator 10
 3904 00fc 0830E0E3 		mvn	r3, #8
 3905              		.loc 1 2220 5
 3906 0100 D30100EA 		b	.L243
 3907              	.L247:
 3908              		.loc 1 2220 5 discriminator 11
 3909 0104 1C301BE5 		ldr	r3, [fp, #-28]
 3910 0108 233CA0E1 		lsr	r3, r3, #24
 3911 010c 030053E3 		cmp	r3, #3
 3912 0110 0100000A 		beq	.L248
 3913              		.loc 1 2220 5 discriminator 12
 3914 0114 0130E0E3 		mvn	r3, #1
 3915              		.loc 1 2220 5
 3916 0118 CD0100EA 		b	.L243
 3917              	.L248:
 3918              		.loc 1 2220 5 discriminator 13
 3919 011c 34301BE5 		ldr	r3, [fp, #-52]
 3920 0120 7F2003E2 		and	r2, r3, #127
 3921 0124 08301BE5 		ldr	r3, [fp, #-8]
 3922 0128 143093E5 		ldr	r3, [r3, #20]
 3923 012c 030052E1 		cmp	r2, r3
 3924 0130 0100003A 		bcc	.L249
 3925              		.loc 1 2220 5 discriminator 14
 3926 0134 0230E0E3 		mvn	r3, #2
 3927              		.loc 1 2220 5
 3928 0138 C50100EA 		b	.L243
 3929              	.L249:
 3930              		.loc 1 2220 5 discriminator 15
 3931 013c 34301BE5 		ldr	r3, [fp, #-52]
 3932 0140 7F3003E2 		and	r3, r3, #127
 3933 0144 8322A0E1 		lsl	r2, r3, #5
 3934 0148 08301BE5 		ldr	r3, [fp, #-8]
 3935 014c 0C3093E5 		ldr	r3, [r3, #12]
 3936 0150 033082E0 		add	r3, r2, r3
 3937 0154 08300BE5 		str	r3, [fp, #-8]
 3938 0158 08301BE5 		ldr	r3, [fp, #-8]
 3939 015c 0300A0E1 		mov	r0, r3
 3940 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3941 0164 1C000BE5 		str	r0, [fp, #-28]
 3942              		.loc 1 2220 5 discriminator 1
 3943 0168 1C301BE5 		ldr	r3, [fp, #-28]
 3944 016c FF3803E2 		and	r3, r3, #16711680
 3945 0170 020853E3 		cmp	r3, #131072
 3946 0174 0100001A 		bne	.L250
 3947              		.loc 1 2220 5 discriminator 16
 3948 0178 0830E0E3 		mvn	r3, #8
 3949              		.loc 1 2220 5
 3950 017c B40100EA 		b	.L243
 3951              	.L250:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 110


 3952              		.loc 1 2220 5 discriminator 17
 3953 0180 1C301BE5 		ldr	r3, [fp, #-28]
 3954 0184 233CA0E1 		lsr	r3, r3, #24
 3955 0188 030053E3 		cmp	r3, #3
 3956 018c 0100000A 		beq	.L245
 3957              		.loc 1 2220 5 discriminator 18
 3958 0190 0130E0E3 		mvn	r3, #1
 3959              		.loc 1 2220 5
 3960 0194 AE0100EA 		b	.L243
 3961              	.L245:
2221:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Dst,Type_Stat);
2222:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Src,RME_CAP_TYPE_CPT,
 3962              		.loc 1 2222 5 is_stmt 1
 3963 0198 3C301BE5 		ldr	r3, [fp, #-60]
 3964 019c 803003E2 		and	r3, r3, #128
 3965 01a0 000053E3 		cmp	r3, #0
 3966 01a4 1C00001A 		bne	.L251
 3967              		.loc 1 2222 5 is_stmt 0 discriminator 1
 3968 01a8 30301BE5 		ldr	r3, [fp, #-48]
 3969 01ac 142093E5 		ldr	r2, [r3, #20]
 3970 01b0 3C301BE5 		ldr	r3, [fp, #-60]
 3971 01b4 030052E1 		cmp	r2, r3
 3972 01b8 0100008A 		bhi	.L252
 3973              		.loc 1 2222 5 discriminator 3
 3974 01bc 0230E0E3 		mvn	r3, #2
 3975              		.loc 1 2222 5
 3976 01c0 A30100EA 		b	.L243
 3977              	.L252:
 3978              		.loc 1 2222 5 discriminator 4
 3979 01c4 3C301BE5 		ldr	r3, [fp, #-60]
 3980 01c8 8322A0E1 		lsl	r2, r3, #5
 3981 01cc 30301BE5 		ldr	r3, [fp, #-48]
 3982 01d0 0C3093E5 		ldr	r3, [r3, #12]
 3983 01d4 033082E0 		add	r3, r2, r3
 3984 01d8 0C300BE5 		str	r3, [fp, #-12]
 3985 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 3986 01e0 0300A0E1 		mov	r0, r3
 3987 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3988 01e8 1C000BE5 		str	r0, [fp, #-28]
 3989              		.loc 1 2222 5 discriminator 1
 3990 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 3991 01f0 FF3803E2 		and	r3, r3, #16711680
 3992 01f4 020853E3 		cmp	r3, #131072
 3993 01f8 0100001A 		bne	.L253
 3994              		.loc 1 2222 5 discriminator 5
 3995 01fc 0830E0E3 		mvn	r3, #8
 3996              		.loc 1 2222 5
 3997 0200 930100EA 		b	.L243
 3998              	.L253:
 3999              		.loc 1 2222 5 discriminator 6
 4000 0204 1C301BE5 		ldr	r3, [fp, #-28]
 4001 0208 233CA0E1 		lsr	r3, r3, #24
 4002 020c 030053E3 		cmp	r3, #3
 4003 0210 3F00000A 		beq	.L254
 4004              		.loc 1 2222 5 discriminator 7
 4005 0214 0130E0E3 		mvn	r3, #1
 4006              		.loc 1 2222 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 111


 4007 0218 8D0100EA 		b	.L243
 4008              	.L251:
 4009              		.loc 1 2222 5 discriminator 2
 4010 021c 3C301BE5 		ldr	r3, [fp, #-60]
 4011 0220 2324A0E1 		lsr	r2, r3, #8
 4012 0224 30301BE5 		ldr	r3, [fp, #-48]
 4013 0228 143093E5 		ldr	r3, [r3, #20]
 4014 022c 030052E1 		cmp	r2, r3
 4015 0230 0100003A 		bcc	.L255
 4016              		.loc 1 2222 5 discriminator 8
 4017 0234 0230E0E3 		mvn	r3, #2
 4018              		.loc 1 2222 5
 4019 0238 850100EA 		b	.L243
 4020              	.L255:
 4021              		.loc 1 2222 5 discriminator 9
 4022 023c 3C301BE5 		ldr	r3, [fp, #-60]
 4023 0240 2334A0E1 		lsr	r3, r3, #8
 4024 0244 8322A0E1 		lsl	r2, r3, #5
 4025 0248 30301BE5 		ldr	r3, [fp, #-48]
 4026 024c 0C3093E5 		ldr	r3, [r3, #12]
 4027 0250 033082E0 		add	r3, r2, r3
 4028 0254 0C300BE5 		str	r3, [fp, #-12]
 4029 0258 0C301BE5 		ldr	r3, [fp, #-12]
 4030 025c 0300A0E1 		mov	r0, r3
 4031 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4032 0264 1C000BE5 		str	r0, [fp, #-28]
 4033              		.loc 1 2222 5 discriminator 1
 4034 0268 1C301BE5 		ldr	r3, [fp, #-28]
 4035 026c FF3803E2 		and	r3, r3, #16711680
 4036 0270 020853E3 		cmp	r3, #131072
 4037 0274 0100001A 		bne	.L256
 4038              		.loc 1 2222 5 discriminator 10
 4039 0278 0830E0E3 		mvn	r3, #8
 4040              		.loc 1 2222 5
 4041 027c 740100EA 		b	.L243
 4042              	.L256:
 4043              		.loc 1 2222 5 discriminator 11
 4044 0280 1C301BE5 		ldr	r3, [fp, #-28]
 4045 0284 233CA0E1 		lsr	r3, r3, #24
 4046 0288 030053E3 		cmp	r3, #3
 4047 028c 0100000A 		beq	.L257
 4048              		.loc 1 2222 5 discriminator 12
 4049 0290 0130E0E3 		mvn	r3, #1
 4050              		.loc 1 2222 5
 4051 0294 6E0100EA 		b	.L243
 4052              	.L257:
 4053              		.loc 1 2222 5 discriminator 13
 4054 0298 3C301BE5 		ldr	r3, [fp, #-60]
 4055 029c 7F2003E2 		and	r2, r3, #127
 4056 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 4057 02a4 143093E5 		ldr	r3, [r3, #20]
 4058 02a8 030052E1 		cmp	r2, r3
 4059 02ac 0100003A 		bcc	.L258
 4060              		.loc 1 2222 5 discriminator 14
 4061 02b0 0230E0E3 		mvn	r3, #2
 4062              		.loc 1 2222 5
 4063 02b4 660100EA 		b	.L243
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 112


 4064              	.L258:
 4065              		.loc 1 2222 5 discriminator 15
 4066 02b8 3C301BE5 		ldr	r3, [fp, #-60]
 4067 02bc 7F3003E2 		and	r3, r3, #127
 4068 02c0 8322A0E1 		lsl	r2, r3, #5
 4069 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 4070 02c8 0C3093E5 		ldr	r3, [r3, #12]
 4071 02cc 033082E0 		add	r3, r2, r3
 4072 02d0 0C300BE5 		str	r3, [fp, #-12]
 4073 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 4074 02d8 0300A0E1 		mov	r0, r3
 4075 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4076 02e0 1C000BE5 		str	r0, [fp, #-28]
 4077              		.loc 1 2222 5 discriminator 1
 4078 02e4 1C301BE5 		ldr	r3, [fp, #-28]
 4079 02e8 FF3803E2 		and	r3, r3, #16711680
 4080 02ec 020853E3 		cmp	r3, #131072
 4081 02f0 0100001A 		bne	.L259
 4082              		.loc 1 2222 5 discriminator 16
 4083 02f4 0830E0E3 		mvn	r3, #8
 4084              		.loc 1 2222 5
 4085 02f8 550100EA 		b	.L243
 4086              	.L259:
 4087              		.loc 1 2222 5 discriminator 17
 4088 02fc 1C301BE5 		ldr	r3, [fp, #-28]
 4089 0300 233CA0E1 		lsr	r3, r3, #24
 4090 0304 030053E3 		cmp	r3, #3
 4091 0308 0100000A 		beq	.L254
 4092              		.loc 1 2222 5 discriminator 18
 4093 030c 0130E0E3 		mvn	r3, #1
 4094              		.loc 1 2222 5
 4095 0310 4F0100EA 		b	.L243
 4096              	.L254:
2223:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Src,Type_Stat);
2224:../../Source/Kernel/rme_kernel.c ****     /* Check if both captbls are not frozen and allows such operations */
2225:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Dst,RME_CPT_FLAG_ADD_DST);
 4097              		.loc 1 2225 5 is_stmt 1
 4098 0314 08301BE5 		ldr	r3, [fp, #-8]
 4099 0318 083093E5 		ldr	r3, [r3, #8]
 4100 031c 103003E2 		and	r3, r3, #16
 4101 0320 000053E3 		cmp	r3, #0
 4102 0324 0100001A 		bne	.L260
 4103              		.loc 1 2225 5 is_stmt 0 discriminator 1
 4104 0328 0630E0E3 		mvn	r3, #6
 4105              		.loc 1 2225 5
 4106 032c 480100EA 		b	.L243
 4107              	.L260:
2226:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Src,RME_CPT_FLAG_ADD_SRC);
 4108              		.loc 1 2226 5 is_stmt 1
 4109 0330 0C301BE5 		ldr	r3, [fp, #-12]
 4110 0334 083093E5 		ldr	r3, [r3, #8]
 4111 0338 083003E2 		and	r3, r3, #8
 4112 033c 000053E3 		cmp	r3, #0
 4113 0340 0100001A 		bne	.L261
 4114              		.loc 1 2226 5 is_stmt 0 discriminator 1
 4115 0344 0630E0E3 		mvn	r3, #6
 4116              		.loc 1 2226 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 113


 4117 0348 410100EA 		b	.L243
 4118              	.L261:
2227:../../Source/Kernel/rme_kernel.c ****     
2228:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slots */
2229:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Dst,Cap_Dst,struct RME_Cap_Struct*,Capobj_Dst);
 4119              		.loc 1 2229 5 is_stmt 1
 4120 034c 08301BE5 		ldr	r3, [fp, #-8]
 4121 0350 142093E5 		ldr	r2, [r3, #20]
 4122 0354 38301BE5 		ldr	r3, [fp, #-56]
 4123 0358 030052E1 		cmp	r2, r3
 4124 035c 0100008A 		bhi	.L262
 4125              		.loc 1 2229 5 is_stmt 0 discriminator 1
 4126 0360 0230E0E3 		mvn	r3, #2
 4127              		.loc 1 2229 5
 4128 0364 3A0100EA 		b	.L243
 4129              	.L262:
 4130              		.loc 1 2229 5 discriminator 2
 4131 0368 38301BE5 		ldr	r3, [fp, #-56]
 4132 036c 8322A0E1 		lsl	r2, r3, #5
 4133 0370 08301BE5 		ldr	r3, [fp, #-8]
 4134 0374 0C3093E5 		ldr	r3, [r3, #12]
 4135 0378 033082E0 		add	r3, r2, r3
 4136 037c 20300BE5 		str	r3, [fp, #-32]
2230:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Src,Cap_Src,struct RME_Cap_Struct*,Capobj_Src);
 4137              		.loc 1 2230 5 is_stmt 1
 4138 0380 0C301BE5 		ldr	r3, [fp, #-12]
 4139 0384 142093E5 		ldr	r2, [r3, #20]
 4140 0388 04309BE5 		ldr	r3, [fp, #4]
 4141 038c 030052E1 		cmp	r2, r3
 4142 0390 0100008A 		bhi	.L263
 4143              		.loc 1 2230 5 is_stmt 0 discriminator 1
 4144 0394 0230E0E3 		mvn	r3, #2
 4145              		.loc 1 2230 5
 4146 0398 2D0100EA 		b	.L243
 4147              	.L263:
 4148              		.loc 1 2230 5 discriminator 2
 4149 039c 04309BE5 		ldr	r3, [fp, #4]
 4150 03a0 8322A0E1 		lsl	r2, r3, #5
 4151 03a4 0C301BE5 		ldr	r3, [fp, #-12]
 4152 03a8 0C3093E5 		ldr	r3, [r3, #12]
 4153 03ac 033082E0 		add	r3, r2, r3
 4154 03b0 24300BE5 		str	r3, [fp, #-36]
2231:../../Source/Kernel/rme_kernel.c ****     
2232:../../Source/Kernel/rme_kernel.c ****     /* Atomic read - Read barrier to avoid premature checking of the rest */
2233:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Src->Head.Type_Stat));
 4155              		.loc 1 2233 15 is_stmt 1
 4156 03b4 24301BE5 		ldr	r3, [fp, #-36]
 4157 03b8 0300A0E1 		mov	r0, r3
 4158 03bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4159 03c0 1C000BE5 		str	r0, [fp, #-28]
2234:../../Source/Kernel/rme_kernel.c ****     /* Is the source cap frozen? */
2235:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 4160              		.loc 1 2235 31
 4161 03c4 1C301BE5 		ldr	r3, [fp, #-28]
 4162 03c8 FF3803E2 		and	r3, r3, #16711680
 4163              		.loc 1 2235 7
 4164 03cc 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 114


 4165 03d0 0100001A 		bne	.L264
2236:../../Source/Kernel/rme_kernel.c ****     {
2237:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2238:../../Source/Kernel/rme_kernel.c ****         
2239:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 4166              		.loc 1 2239 16
 4167 03d4 0830E0E3 		mvn	r3, #8
 4168 03d8 1D0100EA 		b	.L243
 4169              	.L264:
2240:../../Source/Kernel/rme_kernel.c ****     }
2241:../../Source/Kernel/rme_kernel.c ****     else
2242:../../Source/Kernel/rme_kernel.c ****     {
2243:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2244:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2245:../../Source/Kernel/rme_kernel.c ****     }
2246:../../Source/Kernel/rme_kernel.c ****     
2247:../../Source/Kernel/rme_kernel.c ****     /* Does the source cap exist at all? */
2248:../../Source/Kernel/rme_kernel.c ****     if(Type_Stat==0U)
 4170              		.loc 1 2248 7
 4171 03dc 1C301BE5 		ldr	r3, [fp, #-28]
 4172 03e0 000053E3 		cmp	r3, #0
 4173 03e4 0100001A 		bne	.L265
2249:../../Source/Kernel/rme_kernel.c ****     {
2250:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2251:../../Source/Kernel/rme_kernel.c ****         
2252:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 4174              		.loc 1 2252 16
 4175 03e8 0030E0E3 		mvn	r3, #0
 4176 03ec 180100EA 		b	.L243
 4177              	.L265:
2253:../../Source/Kernel/rme_kernel.c ****     }
2254:../../Source/Kernel/rme_kernel.c ****     else
2255:../../Source/Kernel/rme_kernel.c ****     {
2256:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2257:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2258:../../Source/Kernel/rme_kernel.c ****     }
2259:../../Source/Kernel/rme_kernel.c **** 
2260:../../Source/Kernel/rme_kernel.c ****     /* Dewarn some compilers that complain about uninitialized variables */
2261:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=0U;
 4178              		.loc 1 2261 14
 4179 03f0 0030A0E3 		mov	r3, #0
 4180 03f4 10300BE5 		str	r3, [fp, #-16]
2262:../../Source/Kernel/rme_kernel.c ****     Kom_End=0U;
 4181              		.loc 1 2262 12
 4182 03f8 0030A0E3 		mov	r3, #0
 4183 03fc 14300BE5 		str	r3, [fp, #-20]
2263:../../Source/Kernel/rme_kernel.c ****     Kom_Flag=0U;
 4184              		.loc 1 2263 13
 4185 0400 0030A0E3 		mov	r3, #0
 4186 0404 18300BE5 		str	r3, [fp, #-24]
2264:../../Source/Kernel/rme_kernel.c ****     
2265:../../Source/Kernel/rme_kernel.c ****     /* Is there a flag conflict? - For page tables, we have different checking mechanisms */
2266:../../Source/Kernel/rme_kernel.c ****     Src_Type=RME_CAP_TYPE(Type_Stat);
 4187              		.loc 1 2266 13
 4188 0408 1C301BE5 		ldr	r3, [fp, #-28]
 4189 040c 233CA0E1 		lsr	r3, r3, #24
 4190 0410 28300BE5 		str	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 115


2267:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_PGT)
 4191              		.loc 1 2267 7
 4192 0414 28301BE5 		ldr	r3, [fp, #-40]
 4193 0418 040053E3 		cmp	r3, #4
 4194 041c 2D00001A 		bne	.L266
2268:../../Source/Kernel/rme_kernel.c ****     {
2269:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2270:../../Source/Kernel/rme_kernel.c ****         
2271:../../Source/Kernel/rme_kernel.c ****         /* Check the delegation range */
2272:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)>RME_PGT_FLAG_HIGH(Capobj_Src->Head.Flag))
 4195              		.loc 1 2272 12
 4196 0420 08309BE5 		ldr	r3, [fp, #8]
 4197 0424 232AA0E1 		lsr	r2, r3, #20
 4198              		.loc 1 2272 36
 4199 0428 24301BE5 		ldr	r3, [fp, #-36]
 4200 042c 083093E5 		ldr	r3, [r3, #8]
 4201 0430 233AA0E1 		lsr	r3, r3, #20
 4202              		.loc 1 2272 11
 4203 0434 030052E1 		cmp	r2, r3
 4204 0438 0100009A 		bls	.L267
2273:../../Source/Kernel/rme_kernel.c ****         {
2274:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2275:../../Source/Kernel/rme_kernel.c ****         
2276:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4205              		.loc 1 2276 20
 4206 043c 0630E0E3 		mvn	r3, #6
 4207 0440 030100EA 		b	.L243
 4208              	.L267:
2277:../../Source/Kernel/rme_kernel.c ****         }
2278:../../Source/Kernel/rme_kernel.c ****         else
2279:../../Source/Kernel/rme_kernel.c ****         {
2280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2281:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2282:../../Source/Kernel/rme_kernel.c ****         }
2283:../../Source/Kernel/rme_kernel.c ****         
2284:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_LOW(Flag)<RME_PGT_FLAG_LOW(Capobj_Src->Head.Flag))
 4209              		.loc 1 2284 12
 4210 0444 08309BE5 		ldr	r3, [fp, #8]
 4211 0448 2334A0E1 		lsr	r3, r3, #8
 4212 044c 5320EBE7 		ubfx	r2, r3, #0, #12
 4213              		.loc 1 2284 35
 4214 0450 24301BE5 		ldr	r3, [fp, #-36]
 4215 0454 083093E5 		ldr	r3, [r3, #8]
 4216 0458 2334A0E1 		lsr	r3, r3, #8
 4217 045c 5330EBE7 		ubfx	r3, r3, #0, #12
 4218              		.loc 1 2284 11
 4219 0460 030052E1 		cmp	r2, r3
 4220 0464 0100002A 		bcs	.L268
2285:../../Source/Kernel/rme_kernel.c ****         {
2286:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2287:../../Source/Kernel/rme_kernel.c ****             
2288:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4221              		.loc 1 2288 20
 4222 0468 0630E0E3 		mvn	r3, #6
 4223 046c F80000EA 		b	.L243
 4224              	.L268:
2289:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 116


2290:../../Source/Kernel/rme_kernel.c ****         else
2291:../../Source/Kernel/rme_kernel.c ****         {
2292:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2293:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2294:../../Source/Kernel/rme_kernel.c ****         }
2295:../../Source/Kernel/rme_kernel.c ****         
2296:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)<RME_PGT_FLAG_LOW(Flag))
 4225              		.loc 1 2296 12
 4226 0470 08309BE5 		ldr	r3, [fp, #8]
 4227 0474 232AA0E1 		lsr	r2, r3, #20
 4228              		.loc 1 2296 36
 4229 0478 08309BE5 		ldr	r3, [fp, #8]
 4230 047c 2334A0E1 		lsr	r3, r3, #8
 4231 0480 5330EBE7 		ubfx	r3, r3, #0, #12
 4232              		.loc 1 2296 11
 4233 0484 030052E1 		cmp	r2, r3
 4234 0488 0100002A 		bcs	.L269
2297:../../Source/Kernel/rme_kernel.c ****         {
2298:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2299:../../Source/Kernel/rme_kernel.c ****             
2300:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4235              		.loc 1 2300 20
 4236 048c 0630E0E3 		mvn	r3, #6
 4237 0490 EF0000EA 		b	.L243
 4238              	.L269:
2301:../../Source/Kernel/rme_kernel.c ****         }
2302:../../Source/Kernel/rme_kernel.c ****         else
2303:../../Source/Kernel/rme_kernel.c ****         {
2304:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2305:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2306:../../Source/Kernel/rme_kernel.c ****         }
2307:../../Source/Kernel/rme_kernel.c ****         
2308:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2309:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_FLAG(Flag)==0U)
 4239              		.loc 1 2309 12
 4240 0494 08309BE5 		ldr	r3, [fp, #8]
 4241 0498 7330EFE6 		uxtb	r3, r3
 4242              		.loc 1 2309 11
 4243 049c 000053E3 		cmp	r3, #0
 4244 04a0 0100001A 		bne	.L270
2310:../../Source/Kernel/rme_kernel.c ****         {
2311:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2312:../../Source/Kernel/rme_kernel.c ****             
2313:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4245              		.loc 1 2313 20
 4246 04a4 0630E0E3 		mvn	r3, #6
 4247 04a8 E90000EA 		b	.L243
 4248              	.L270:
2314:../../Source/Kernel/rme_kernel.c ****         }
2315:../../Source/Kernel/rme_kernel.c ****         else
2316:../../Source/Kernel/rme_kernel.c ****         {
2317:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2318:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2319:../../Source/Kernel/rme_kernel.c ****         }
2320:../../Source/Kernel/rme_kernel.c ****         
2321:../../Source/Kernel/rme_kernel.c ****         if((RME_PGT_FLAG_FLAG(Flag)&(~RME_PGT_FLAG_FLAG(Capobj_Src->Head.Flag)))!=0U)
 4249              		.loc 1 2321 39
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 117


 4250 04ac 24301BE5 		ldr	r3, [fp, #-36]
 4251 04b0 083093E5 		ldr	r3, [r3, #8]
 4252 04b4 7330EFE6 		uxtb	r3, r3
 4253              		.loc 1 2321 38
 4254 04b8 0320E0E1 		mvn	r2, r3
 4255              		.loc 1 2321 36
 4256 04bc 08309BE5 		ldr	r3, [fp, #8]
 4257 04c0 023003E0 		and	r3, r3, r2
 4258 04c4 7330EFE6 		uxtb	r3, r3
 4259              		.loc 1 2321 11
 4260 04c8 000053E3 		cmp	r3, #0
 4261 04cc 7700000A 		beq	.L271
2322:../../Source/Kernel/rme_kernel.c ****         {
2323:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2324:../../Source/Kernel/rme_kernel.c ****             
2325:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4262              		.loc 1 2325 20
 4263 04d0 0630E0E3 		mvn	r3, #6
 4264 04d4 DE0000EA 		b	.L243
 4265              	.L266:
2326:../../Source/Kernel/rme_kernel.c ****         }
2327:../../Source/Kernel/rme_kernel.c ****         else
2328:../../Source/Kernel/rme_kernel.c ****         {
2329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2330:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2331:../../Source/Kernel/rme_kernel.c ****         }
2332:../../Source/Kernel/rme_kernel.c ****     }
2333:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KFN)
 4266              		.loc 1 2333 12
 4267 04d8 28301BE5 		ldr	r3, [fp, #-40]
 4268 04dc 010053E3 		cmp	r3, #1
 4269 04e0 1900001A 		bne	.L272
2334:../../Source/Kernel/rme_kernel.c ****     {
2335:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2336:../../Source/Kernel/rme_kernel.c ****         
2337:../../Source/Kernel/rme_kernel.c ****         /* Kernel funcrions only have ranges, no flags - check the delegation range */
2338:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)>RME_KFN_FLAG_HIGH(Capobj_Src->Head.Flag))
 4270              		.loc 1 2338 12
 4271 04e4 08309BE5 		ldr	r3, [fp, #8]
 4272 04e8 2328A0E1 		lsr	r2, r3, #16
 4273              		.loc 1 2338 36
 4274 04ec 24301BE5 		ldr	r3, [fp, #-36]
 4275 04f0 083093E5 		ldr	r3, [r3, #8]
 4276 04f4 2338A0E1 		lsr	r3, r3, #16
 4277              		.loc 1 2338 11
 4278 04f8 030052E1 		cmp	r2, r3
 4279 04fc 0100009A 		bls	.L273
2339:../../Source/Kernel/rme_kernel.c ****         {
2340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2341:../../Source/Kernel/rme_kernel.c ****             
2342:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4280              		.loc 1 2342 20
 4281 0500 0630E0E3 		mvn	r3, #6
 4282 0504 D20000EA 		b	.L243
 4283              	.L273:
2343:../../Source/Kernel/rme_kernel.c ****         }
2344:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 118


2345:../../Source/Kernel/rme_kernel.c ****         {
2346:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2347:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2348:../../Source/Kernel/rme_kernel.c ****         }
2349:../../Source/Kernel/rme_kernel.c ****         
2350:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_LOW(Flag)<RME_KFN_FLAG_LOW(Capobj_Src->Head.Flag))
 4284              		.loc 1 2350 12
 4285 0508 08309BE5 		ldr	r3, [fp, #8]
 4286 050c 7320FFE6 		uxth	r2, r3
 4287              		.loc 1 2350 35
 4288 0510 24301BE5 		ldr	r3, [fp, #-36]
 4289 0514 083093E5 		ldr	r3, [r3, #8]
 4290 0518 7330FFE6 		uxth	r3, r3
 4291              		.loc 1 2350 11
 4292 051c 030052E1 		cmp	r2, r3
 4293 0520 0100002A 		bcs	.L274
2351:../../Source/Kernel/rme_kernel.c ****         {
2352:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2353:../../Source/Kernel/rme_kernel.c ****             
2354:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4294              		.loc 1 2354 20
 4295 0524 0630E0E3 		mvn	r3, #6
 4296 0528 C90000EA 		b	.L243
 4297              	.L274:
2355:../../Source/Kernel/rme_kernel.c ****         }
2356:../../Source/Kernel/rme_kernel.c ****         else
2357:../../Source/Kernel/rme_kernel.c ****         {
2358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2359:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2360:../../Source/Kernel/rme_kernel.c ****         }
2361:../../Source/Kernel/rme_kernel.c ****         
2362:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)<RME_KFN_FLAG_LOW(Flag))
 4298              		.loc 1 2362 12
 4299 052c 08309BE5 		ldr	r3, [fp, #8]
 4300 0530 2328A0E1 		lsr	r2, r3, #16
 4301              		.loc 1 2362 36
 4302 0534 08309BE5 		ldr	r3, [fp, #8]
 4303 0538 7330FFE6 		uxth	r3, r3
 4304              		.loc 1 2362 11
 4305 053c 030052E1 		cmp	r2, r3
 4306 0540 5A00002A 		bcs	.L271
2363:../../Source/Kernel/rme_kernel.c ****         {
2364:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2365:../../Source/Kernel/rme_kernel.c ****             
2366:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4307              		.loc 1 2366 20
 4308 0544 0630E0E3 		mvn	r3, #6
 4309 0548 C10000EA 		b	.L243
 4310              	.L272:
2367:../../Source/Kernel/rme_kernel.c ****         }
2368:../../Source/Kernel/rme_kernel.c ****         else
2369:../../Source/Kernel/rme_kernel.c ****         {
2370:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2371:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2372:../../Source/Kernel/rme_kernel.c ****         }
2373:../../Source/Kernel/rme_kernel.c ****     }
2374:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KOM)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 119


 4311              		.loc 1 2374 12
 4312 054c 28301BE5 		ldr	r3, [fp, #-40]
 4313 0550 020053E3 		cmp	r3, #2
 4314 0554 4700001A 		bne	.L275
2375:../../Source/Kernel/rme_kernel.c ****     {
2376:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2377:../../Source/Kernel/rme_kernel.c ****         
2378:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End here is exclusive */
2379:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_KOM_FLAG_LOW(Flag,Ext_Flag);
 4315              		.loc 1 2379 18
 4316 0558 08309BE5 		ldr	r3, [fp, #8]
 4317 055c 0338A0E1 		lsl	r3, r3, #16
 4318 0560 10300BE5 		str	r3, [fp, #-16]
2380:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_KOM_FLAG_HIGH(Flag,Ext_Flag);
 4319              		.loc 1 2380 17
 4320 0564 08309BE5 		ldr	r3, [fp, #8]
 4321 0568 2338A0E1 		lsr	r3, r3, #16
 4322 056c 0338A0E1 		lsl	r3, r3, #16
 4323 0570 0C209BE5 		ldr	r2, [fp, #12]
 4324 0574 2228A0E1 		lsr	r2, r2, #16
 4325 0578 3F20C2E3 		bic	r2, r2, #63
 4326              		.loc 1 2380 16
 4327 057c 023083E1 		orr	r3, r3, r2
 4328 0580 14300BE5 		str	r3, [fp, #-20]
2381:../../Source/Kernel/rme_kernel.c ****         Kom_Flag=RME_KOM_FLAG_KOM(Ext_Flag);
 4329              		.loc 1 2381 17
 4330 0584 0030A0E3 		mov	r3, #0
 4331 0588 18300BE5 		str	r3, [fp, #-24]
2382:../../Source/Kernel/rme_kernel.c ****         
2383:../../Source/Kernel/rme_kernel.c ****         /* Round start and end to the slot boundary, if we are using slots bigger than 64 bytes */
2384:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
2385:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_ROUND_DOWN(Kom_End,RME_KOM_SLOT_ORDER);
2386:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_ROUND_UP(Kom_Begin,RME_KOM_SLOT_ORDER);
2387:../../Source/Kernel/rme_kernel.c **** #endif
2388:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<=Kom_Begin)
 4332              		.loc 1 2388 11
 4333 058c 14201BE5 		ldr	r2, [fp, #-20]
 4334 0590 10301BE5 		ldr	r3, [fp, #-16]
 4335 0594 030052E1 		cmp	r2, r3
 4336 0598 0100008A 		bhi	.L276
2389:../../Source/Kernel/rme_kernel.c ****         {
2390:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2391:../../Source/Kernel/rme_kernel.c ****             
2392:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4337              		.loc 1 2392 20
 4338 059c 0630E0E3 		mvn	r3, #6
 4339 05a0 AB0000EA 		b	.L243
 4340              	.L276:
2393:../../Source/Kernel/rme_kernel.c ****         }
2394:../../Source/Kernel/rme_kernel.c ****         else
2395:../../Source/Kernel/rme_kernel.c ****         {
2396:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2397:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2398:../../Source/Kernel/rme_kernel.c ****         }
2399:../../Source/Kernel/rme_kernel.c **** 
2400:../../Source/Kernel/rme_kernel.c ****         /* Convert relative addresses to absolute addresses and check for overflow */
2401:../../Source/Kernel/rme_kernel.c ****         Kom_Begin+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 120


 4341              		.loc 1 2401 62
 4342 05a4 24301BE5 		ldr	r3, [fp, #-36]
 4343 05a8 143093E5 		ldr	r3, [r3, #20]
 4344              		.loc 1 2401 18
 4345 05ac 10201BE5 		ldr	r2, [fp, #-16]
 4346 05b0 033082E0 		add	r3, r2, r3
 4347 05b4 10300BE5 		str	r3, [fp, #-16]
2402:../../Source/Kernel/rme_kernel.c ****         if(Kom_Begin<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4348              		.loc 1 2402 64
 4349 05b8 24301BE5 		ldr	r3, [fp, #-36]
 4350 05bc 143093E5 		ldr	r3, [r3, #20]
 4351              		.loc 1 2402 11
 4352 05c0 10201BE5 		ldr	r2, [fp, #-16]
 4353 05c4 030052E1 		cmp	r2, r3
 4354 05c8 0100002A 		bcs	.L277
2403:../../Source/Kernel/rme_kernel.c ****         {
2404:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2405:../../Source/Kernel/rme_kernel.c ****             
2406:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4355              		.loc 1 2406 20
 4356 05cc 0630E0E3 		mvn	r3, #6
 4357 05d0 9F0000EA 		b	.L243
 4358              	.L277:
2407:../../Source/Kernel/rme_kernel.c ****         }
2408:../../Source/Kernel/rme_kernel.c ****         else
2409:../../Source/Kernel/rme_kernel.c ****         {
2410:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2411:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2412:../../Source/Kernel/rme_kernel.c ****         }
2413:../../Source/Kernel/rme_kernel.c ****         
2414:../../Source/Kernel/rme_kernel.c ****         Kom_End+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4359              		.loc 1 2414 60
 4360 05d4 24301BE5 		ldr	r3, [fp, #-36]
 4361 05d8 143093E5 		ldr	r3, [r3, #20]
 4362              		.loc 1 2414 16
 4363 05dc 14201BE5 		ldr	r2, [fp, #-20]
 4364 05e0 033082E0 		add	r3, r2, r3
 4365 05e4 14300BE5 		str	r3, [fp, #-20]
2415:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4366              		.loc 1 2415 62
 4367 05e8 24301BE5 		ldr	r3, [fp, #-36]
 4368 05ec 143093E5 		ldr	r3, [r3, #20]
 4369              		.loc 1 2415 11
 4370 05f0 14201BE5 		ldr	r2, [fp, #-20]
 4371 05f4 030052E1 		cmp	r2, r3
 4372 05f8 0100002A 		bcs	.L278
2416:../../Source/Kernel/rme_kernel.c ****         {
2417:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2418:../../Source/Kernel/rme_kernel.c ****             
2419:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4373              		.loc 1 2419 20
 4374 05fc 0630E0E3 		mvn	r3, #6
 4375 0600 930000EA 		b	.L243
 4376              	.L278:
2420:../../Source/Kernel/rme_kernel.c ****         }
2421:../../Source/Kernel/rme_kernel.c ****         else
2422:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 121


2423:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2424:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2425:../../Source/Kernel/rme_kernel.c ****         }
2426:../../Source/Kernel/rme_kernel.c **** 
2427:../../Source/Kernel/rme_kernel.c ****         /* Check the ranges of kernel memory */
2428:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin>Kom_Begin)
 4377              		.loc 1 2428 54
 4378 0604 24301BE5 		ldr	r3, [fp, #-36]
 4379 0608 143093E5 		ldr	r3, [r3, #20]
 4380              		.loc 1 2428 11
 4381 060c 10201BE5 		ldr	r2, [fp, #-16]
 4382 0610 030052E1 		cmp	r2, r3
 4383 0614 0100002A 		bcs	.L279
2429:../../Source/Kernel/rme_kernel.c ****         {
2430:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2431:../../Source/Kernel/rme_kernel.c ****             
2432:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4384              		.loc 1 2432 20
 4385 0618 0630E0E3 		mvn	r3, #6
 4386 061c 8C0000EA 		b	.L243
 4387              	.L279:
2433:../../Source/Kernel/rme_kernel.c ****         }
2434:../../Source/Kernel/rme_kernel.c ****         else
2435:../../Source/Kernel/rme_kernel.c ****         {
2436:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2437:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2438:../../Source/Kernel/rme_kernel.c ****         }
2439:../../Source/Kernel/rme_kernel.c ****         
2440:../../Source/Kernel/rme_kernel.c ****         /* Internal encoding of 'end' is inclusive */
2441:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->End<(Kom_End-1U))
 4388              		.loc 1 2441 54
 4389 0620 24301BE5 		ldr	r3, [fp, #-36]
 4390 0624 182093E5 		ldr	r2, [r3, #24]
 4391              		.loc 1 2441 68
 4392 0628 14301BE5 		ldr	r3, [fp, #-20]
 4393 062c 013043E2 		sub	r3, r3, #1
 4394              		.loc 1 2441 11
 4395 0630 030052E1 		cmp	r2, r3
 4396 0634 0100002A 		bcs	.L280
2442:../../Source/Kernel/rme_kernel.c ****         {
2443:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2444:../../Source/Kernel/rme_kernel.c ****             
2445:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4397              		.loc 1 2445 20
 4398 0638 0630E0E3 		mvn	r3, #6
 4399 063c 840000EA 		b	.L243
 4400              	.L280:
2446:../../Source/Kernel/rme_kernel.c ****         }
2447:../../Source/Kernel/rme_kernel.c ****         else
2448:../../Source/Kernel/rme_kernel.c ****         {
2449:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2450:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2451:../../Source/Kernel/rme_kernel.c ****         }
2452:../../Source/Kernel/rme_kernel.c ****         
2453:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2454:../../Source/Kernel/rme_kernel.c ****         if(Kom_Flag==0U)
 4401              		.loc 1 2454 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 122


 4402 0640 18301BE5 		ldr	r3, [fp, #-24]
 4403 0644 000053E3 		cmp	r3, #0
 4404 0648 0100001A 		bne	.L281
2455:../../Source/Kernel/rme_kernel.c ****         {
2456:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2457:../../Source/Kernel/rme_kernel.c ****             
2458:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4405              		.loc 1 2458 20
 4406 064c 0630E0E3 		mvn	r3, #6
 4407 0650 7F0000EA 		b	.L243
 4408              	.L281:
2459:../../Source/Kernel/rme_kernel.c ****         }
2460:../../Source/Kernel/rme_kernel.c ****         else
2461:../../Source/Kernel/rme_kernel.c ****         {
2462:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2463:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2464:../../Source/Kernel/rme_kernel.c ****         }
2465:../../Source/Kernel/rme_kernel.c ****         
2466:../../Source/Kernel/rme_kernel.c ****         if((Kom_Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4409              		.loc 1 2466 41
 4410 0654 24301BE5 		ldr	r3, [fp, #-36]
 4411 0658 083093E5 		ldr	r3, [r3, #8]
 4412              		.loc 1 2466 23
 4413 065c 0320E0E1 		mvn	r2, r3
 4414              		.loc 1 2466 21
 4415 0660 18301BE5 		ldr	r3, [fp, #-24]
 4416 0664 023003E0 		and	r3, r3, r2
 4417              		.loc 1 2466 11
 4418 0668 000053E3 		cmp	r3, #0
 4419 066c 0F00000A 		beq	.L271
2467:../../Source/Kernel/rme_kernel.c ****         {
2468:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2469:../../Source/Kernel/rme_kernel.c ****             
2470:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4420              		.loc 1 2470 20
 4421 0670 0630E0E3 		mvn	r3, #6
 4422 0674 760000EA 		b	.L243
 4423              	.L275:
2471:../../Source/Kernel/rme_kernel.c ****         }
2472:../../Source/Kernel/rme_kernel.c ****         else
2473:../../Source/Kernel/rme_kernel.c ****         {
2474:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2475:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2476:../../Source/Kernel/rme_kernel.c ****         }
2477:../../Source/Kernel/rme_kernel.c ****     }
2478:../../Source/Kernel/rme_kernel.c ****     /* All other caps */
2479:../../Source/Kernel/rme_kernel.c ****     else
2480:../../Source/Kernel/rme_kernel.c ****     {
2481:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2482:../../Source/Kernel/rme_kernel.c ****         
2483:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2484:../../Source/Kernel/rme_kernel.c ****         if(Flag==0U)
 4424              		.loc 1 2484 11
 4425 0678 08309BE5 		ldr	r3, [fp, #8]
 4426 067c 000053E3 		cmp	r3, #0
 4427 0680 0100001A 		bne	.L282
2485:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 123


2486:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2487:../../Source/Kernel/rme_kernel.c ****             
2488:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4428              		.loc 1 2488 20
 4429 0684 0630E0E3 		mvn	r3, #6
 4430 0688 710000EA 		b	.L243
 4431              	.L282:
2489:../../Source/Kernel/rme_kernel.c ****         }
2490:../../Source/Kernel/rme_kernel.c ****         else
2491:../../Source/Kernel/rme_kernel.c ****         {
2492:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2493:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2494:../../Source/Kernel/rme_kernel.c ****         }
2495:../../Source/Kernel/rme_kernel.c ****         if((Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4432              		.loc 1 2495 37
 4433 068c 24301BE5 		ldr	r3, [fp, #-36]
 4434 0690 083093E5 		ldr	r3, [r3, #8]
 4435              		.loc 1 2495 19
 4436 0694 0320E0E1 		mvn	r2, r3
 4437              		.loc 1 2495 17
 4438 0698 08309BE5 		ldr	r3, [fp, #8]
 4439 069c 023003E0 		and	r3, r3, r2
 4440              		.loc 1 2495 11
 4441 06a0 000053E3 		cmp	r3, #0
 4442 06a4 0100000A 		beq	.L271
2496:../../Source/Kernel/rme_kernel.c ****         {
2497:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2498:../../Source/Kernel/rme_kernel.c ****             
2499:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4443              		.loc 1 2499 20
 4444 06a8 0630E0E3 		mvn	r3, #6
 4445 06ac 680000EA 		b	.L243
 4446              	.L271:
2500:../../Source/Kernel/rme_kernel.c ****         }
2501:../../Source/Kernel/rme_kernel.c ****         else
2502:../../Source/Kernel/rme_kernel.c ****         {
2503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2504:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2505:../../Source/Kernel/rme_kernel.c ****         }
2506:../../Source/Kernel/rme_kernel.c ****     }
2507:../../Source/Kernel/rme_kernel.c ****     
2508:../../Source/Kernel/rme_kernel.c ****     /* Is the destination slot unoccupied? */
2509:../../Source/Kernel/rme_kernel.c ****     if(Capobj_Dst->Head.Type_Stat!=0U)
 4447              		.loc 1 2509 24
 4448 06b0 20301BE5 		ldr	r3, [fp, #-32]
 4449 06b4 003093E5 		ldr	r3, [r3]
 4450              		.loc 1 2509 7
 4451 06b8 000053E3 		cmp	r3, #0
 4452 06bc 0100000A 		beq	.L283
2510:../../Source/Kernel/rme_kernel.c ****     {
2511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2512:../../Source/Kernel/rme_kernel.c ****             
2513:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_EXIST;
 4453              		.loc 1 2513 16
 4454 06c0 0430E0E3 		mvn	r3, #4
 4455 06c4 620000EA 		b	.L243
 4456              	.L283:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 124


2514:../../Source/Kernel/rme_kernel.c ****     }
2515:../../Source/Kernel/rme_kernel.c ****     else
2516:../../Source/Kernel/rme_kernel.c ****     {
2517:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2518:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2519:../../Source/Kernel/rme_kernel.c ****     }
2520:../../Source/Kernel/rme_kernel.c ****     
2521:../../Source/Kernel/rme_kernel.c ****     /* Try to take the empty slot */
2522:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Capobj_Dst);
 4457              		.loc 1 2522 5
 4458 06c8 20301BE5 		ldr	r3, [fp, #-32]
 4459 06cc 0128A0E3 		mov	r2, #65536
 4460 06d0 0010A0E3 		mov	r1, #0
 4461 06d4 0300A0E1 		mov	r0, r3
 4462 06d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4463 06dc 0030A0E1 		mov	r3, r0
 4464              		.loc 1 2522 5 is_stmt 0 discriminator 1
 4465 06e0 000053E3 		cmp	r3, #0
 4466 06e4 0100001A 		bne	.L284
 4467 06e8 0430E0E3 		mvn	r3, #4
 4468              		.loc 1 2522 5
 4469 06ec 580000EA 		b	.L243
 4470              	.L284:
 4471              		.loc 1 2522 5 discriminator 2
 4472 06f0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4473 06f4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4474 06f8 002093E5 		ldr	r2, [r3]
 4475 06fc 20301BE5 		ldr	r3, [fp, #-32]
 4476 0700 102083E5 		str	r2, [r3, #16]
2523:../../Source/Kernel/rme_kernel.c ****     
2524:../../Source/Kernel/rme_kernel.c ****     /* All done, we replicate the cap with flags */
2525:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_KOM)
 4477              		.loc 1 2525 7 is_stmt 1
 4478 0704 28301BE5 		ldr	r3, [fp, #-40]
 4479 0708 020053E3 		cmp	r3, #2
 4480 070c 1A00001A 		bne	.L285
2526:../../Source/Kernel/rme_kernel.c ****     {
2527:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2528:../../Source/Kernel/rme_kernel.c ****             
2529:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Kom_Flag);
 4481              		.loc 1 2529 9
 4482 0710 20301BE5 		ldr	r3, [fp, #-32]
 4483 0714 18201BE5 		ldr	r2, [fp, #-24]
 4484 0718 082083E5 		str	r2, [r3, #8]
 4485 071c 24301BE5 		ldr	r3, [fp, #-36]
 4486 0720 0C2093E5 		ldr	r2, [r3, #12]
 4487 0724 20301BE5 		ldr	r3, [fp, #-32]
 4488 0728 0C2083E5 		str	r2, [r3, #12]
 4489 072c 24301BE5 		ldr	r3, [fp, #-36]
 4490 0730 142093E5 		ldr	r2, [r3, #20]
 4491 0734 20301BE5 		ldr	r3, [fp, #-32]
 4492 0738 142083E5 		str	r2, [r3, #20]
 4493 073c 24301BE5 		ldr	r3, [fp, #-36]
 4494 0740 182093E5 		ldr	r2, [r3, #24]
 4495 0744 20301BE5 		ldr	r3, [fp, #-32]
 4496 0748 182083E5 		str	r2, [r3, #24]
 4497 074c 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 125


 4498 0750 1C2093E5 		ldr	r2, [r3, #28]
 4499 0754 20301BE5 		ldr	r3, [fp, #-32]
 4500 0758 1C2083E5 		str	r2, [r3, #28]
2530:../../Source/Kernel/rme_kernel.c ****         /* Write absolute range information for kernel memory caps */
2531:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->Begin=Kom_Begin;
 4501              		.loc 1 2531 58
 4502 075c 20301BE5 		ldr	r3, [fp, #-32]
 4503 0760 10201BE5 		ldr	r2, [fp, #-16]
 4504 0764 142083E5 		str	r2, [r3, #20]
2532:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End encoded inclusively to avoid overflow at max address */
2533:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->End=Kom_End-1U;
 4505              		.loc 1 2533 64
 4506 0768 14301BE5 		ldr	r3, [fp, #-20]
 4507 076c 012043E2 		sub	r2, r3, #1
 4508              		.loc 1 2533 56
 4509 0770 20301BE5 		ldr	r3, [fp, #-32]
 4510 0774 182083E5 		str	r2, [r3, #24]
 4511 0778 120000EA 		b	.L286
 4512              	.L285:
2534:../../Source/Kernel/rme_kernel.c ****     }
2535:../../Source/Kernel/rme_kernel.c ****     else
2536:../../Source/Kernel/rme_kernel.c ****     {
2537:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2538:../../Source/Kernel/rme_kernel.c ****         
2539:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Flag);
 4513              		.loc 1 2539 9
 4514 077c 20301BE5 		ldr	r3, [fp, #-32]
 4515 0780 08209BE5 		ldr	r2, [fp, #8]
 4516 0784 082083E5 		str	r2, [r3, #8]
 4517 0788 24301BE5 		ldr	r3, [fp, #-36]
 4518 078c 0C2093E5 		ldr	r2, [r3, #12]
 4519 0790 20301BE5 		ldr	r3, [fp, #-32]
 4520 0794 0C2083E5 		str	r2, [r3, #12]
 4521 0798 24301BE5 		ldr	r3, [fp, #-36]
 4522 079c 142093E5 		ldr	r2, [r3, #20]
 4523 07a0 20301BE5 		ldr	r3, [fp, #-32]
 4524 07a4 142083E5 		str	r2, [r3, #20]
 4525 07a8 24301BE5 		ldr	r3, [fp, #-36]
 4526 07ac 182093E5 		ldr	r2, [r3, #24]
 4527 07b0 20301BE5 		ldr	r3, [fp, #-32]
 4528 07b4 182083E5 		str	r2, [r3, #24]
 4529 07b8 24301BE5 		ldr	r3, [fp, #-36]
 4530 07bc 1C2093E5 		ldr	r2, [r3, #28]
 4531 07c0 20301BE5 		ldr	r3, [fp, #-32]
 4532 07c4 1C2083E5 		str	r2, [r3, #28]
 4533              	.L286:
2540:../../Source/Kernel/rme_kernel.c ****     }
2541:../../Source/Kernel/rme_kernel.c ****     
2542:../../Source/Kernel/rme_kernel.c ****     /* Set the parent and increase reference count - if this is actually needed.
2543:../../Source/Kernel/rme_kernel.c ****      * The only two cases where this is not needed are KFN and KOM. These two
2544:../../Source/Kernel/rme_kernel.c ****      * capability types are standalone on their own and do not need to reference
2545:../../Source/Kernel/rme_kernel.c ****      * their parent, nor will they update the parent's reference count. This
2546:../../Source/Kernel/rme_kernel.c ****      * design decision comes from the fact that these two capability types are
2547:../../Source/Kernel/rme_kernel.c ****      * always created on boot and delegated everywhere, and they don't actually
2548:../../Source/Kernel/rme_kernel.c ****      * have an object. If we use refcnt on these, we may cause scalability 
2549:../../Source/Kernel/rme_kernel.c ****      * issues. The parent cap can't be deleted anyway, so this is fine. */
2550:../../Source/Kernel/rme_kernel.c ****     if((Src_Type!=RME_CAP_TYPE_KOM)&&(Src_Type!=RME_CAP_TYPE_KFN))
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 126


 4534              		.loc 1 2550 7
 4535 07c8 28301BE5 		ldr	r3, [fp, #-40]
 4536 07cc 020053E3 		cmp	r3, #2
 4537 07d0 1400000A 		beq	.L287
 4538              		.loc 1 2550 36 discriminator 1
 4539 07d4 28301BE5 		ldr	r3, [fp, #-40]
 4540 07d8 010053E3 		cmp	r3, #1
 4541 07dc 1100000A 		beq	.L287
2551:../../Source/Kernel/rme_kernel.c ****     {
2552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2553:../../Source/Kernel/rme_kernel.c ****         
2554:../../Source/Kernel/rme_kernel.c ****         /* Register root */
2555:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=RME_CAP_CONV_ROOT(Capobj_Src,rme_ptr_t);
 4542              		.loc 1 2555 35
 4543 07e0 24301BE5 		ldr	r3, [fp, #-36]
 4544 07e4 003093E5 		ldr	r3, [r3]
 4545 07e8 7330FFE6 		uxth	r3, r3
 4546 07ec 000053E3 		cmp	r3, #0
 4547 07f0 0200000A 		beq	.L288
 4548              		.loc 1 2555 35 is_stmt 0 discriminator 1
 4549 07f4 24301BE5 		ldr	r3, [fp, #-36]
 4550 07f8 043093E5 		ldr	r3, [r3, #4]
 4551 07fc 000000EA 		b	.L289
 4552              	.L288:
 4553              		.loc 1 2555 35 discriminator 2
 4554 0800 24301BE5 		ldr	r3, [fp, #-36]
 4555              	.L289:
 4556              		.loc 1 2555 34 is_stmt 1 discriminator 4
 4557 0804 20201BE5 		ldr	r2, [fp, #-32]
 4558 0808 043082E5 		str	r3, [r2, #4]
2556:../../Source/Kernel/rme_kernel.c ****     
2557:../../Source/Kernel/rme_kernel.c ****         /* Increase the parent's refcnt - never overflows, guaranteed by field size */
2558:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(((volatile struct RME_Cap_Struct*)
 4559              		.loc 1 2558 9
 4560 080c 20301BE5 		ldr	r3, [fp, #-32]
 4561 0810 043093E5 		ldr	r3, [r3, #4]
 4562 0814 043083E2 		add	r3, r3, #4
 4563 0818 0110A0E3 		mov	r1, #1
 4564 081c 0300A0E1 		mov	r0, r3
 4565 0820 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4566 0824 020000EA 		b	.L290
 4567              	.L287:
2559:../../Source/Kernel/rme_kernel.c ****                         (Capobj_Dst->Head.Root_Ref))->Head.Root_Ref),1U);
2560:../../Source/Kernel/rme_kernel.c ****     }
2561:../../Source/Kernel/rme_kernel.c ****     else
2562:../../Source/Kernel/rme_kernel.c ****     {
2563:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2564:../../Source/Kernel/rme_kernel.c ****         
2565:../../Source/Kernel/rme_kernel.c ****         /* No root for KOM and KFN */
2566:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=0U;
 4568              		.loc 1 2566 34
 4569 0828 20301BE5 		ldr	r3, [fp, #-32]
 4570 082c 0020A0E3 		mov	r2, #0
 4571 0830 042083E5 		str	r2, [r3, #4]
 4572              	.L290:
2567:../../Source/Kernel/rme_kernel.c ****     }
2568:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 127


2569:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2570:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Capobj_Dst->Head.Type_Stat),
 4573              		.loc 1 2570 5
 4574 0834 20201BE5 		ldr	r2, [fp, #-32]
 4575 0838 28301BE5 		ldr	r3, [fp, #-40]
 4576 083c 033CA0E1 		lsl	r3, r3, #24
 4577 0840 013083E3 		orr	r3, r3, #1
 4578 0844 0310A0E1 		mov	r1, r3
 4579 0848 0200A0E1 		mov	r0, r2
 4580 084c FEFFFFEB 		bl	__RME_A7A_Write_Release
2571:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(Src_Type,
2572:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2573:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_LEAF));
2574:../../Source/Kernel/rme_kernel.c **** 
2575:../../Source/Kernel/rme_kernel.c ****     return 0;
 4581              		.loc 1 2575 12
 4582 0850 0030A0E3 		mov	r3, #0
 4583              	.L243:
2576:../../Source/Kernel/rme_kernel.c **** }
 4584              		.loc 1 2576 1
 4585 0854 0300A0E1 		mov	r0, r3
 4586 0858 04D04BE2 		sub	sp, fp, #4
 4587              		.cfi_def_cfa 13, 8
 4588              		@ sp needed
 4589 085c 0088BDE8 		pop	{fp, pc}
 4590              		.cfi_endproc
 4591              	.LFE27:
 4593              		.section	.text._RME_Cpt_Rem,"ax",%progbits
 4594              		.align	2
 4595              		.syntax unified
 4596              		.arm
 4598              	_RME_Cpt_Rem:
 4599              	.LFB28:
2577:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Add *************************************************/
2578:../../Source/Kernel/rme_kernel.c **** 
2579:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Rem ******************************************************
2580:../../Source/Kernel/rme_kernel.c **** Description : Remove one capability from the capability table. This function
2581:../../Source/Kernel/rme_kernel.c ****               reverts the delegation.
2582:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2583:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Rem - The capability to the capability table to
2584:../../Source/Kernel/rme_kernel.c ****                                       remove from.
2585:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2586:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Rem - The capability slot you want to remove.
2587:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2588:../../Source/Kernel/rme_kernel.c **** Output      : None.
2589:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2590:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2591:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Rem(struct RME_Cap_Cpt* Cpt,
2592:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Rem,
2593:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Rem)
2594:../../Source/Kernel/rme_kernel.c **** {
 4600              		.loc 1 2594 1
 4601              		.cfi_startproc
 4602              		@ args = 0, pretend = 0, frame = 40
 4603              		@ frame_needed = 1, uses_anonymous_args = 0
 4604 0000 00482DE9 		push	{fp, lr}
 4605              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 128


 4606              		.cfi_offset 11, -8
 4607              		.cfi_offset 14, -4
 4608 0004 04B08DE2 		add	fp, sp, #4
 4609              		.cfi_def_cfa 11, 4
 4610 0008 28D04DE2 		sub	sp, sp, #40
 4611 000c 20000BE5 		str	r0, [fp, #-32]
 4612 0010 24100BE5 		str	r1, [fp, #-36]
 4613 0014 28200BE5 		str	r2, [fp, #-40]
2595:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2596:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Rem;
2597:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2598:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Rem_Type;
2599:../../Source/Kernel/rme_kernel.c ****     /* This is used for removal */
2600:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Root;
2601:../../Source/Kernel/rme_kernel.c ****     
2602:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2603:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Rem,RME_CAP_TYPE_CPT,
 4614              		.loc 1 2603 5
 4615 0018 24301BE5 		ldr	r3, [fp, #-36]
 4616 001c 803003E2 		and	r3, r3, #128
 4617 0020 000053E3 		cmp	r3, #0
 4618 0024 1C00001A 		bne	.L292
 4619              		.loc 1 2603 5 is_stmt 0 discriminator 1
 4620 0028 20301BE5 		ldr	r3, [fp, #-32]
 4621 002c 142093E5 		ldr	r2, [r3, #20]
 4622 0030 24301BE5 		ldr	r3, [fp, #-36]
 4623 0034 030052E1 		cmp	r2, r3
 4624 0038 0100008A 		bhi	.L293
 4625              		.loc 1 2603 5 discriminator 3
 4626 003c 0230E0E3 		mvn	r3, #2
 4627              		.loc 1 2603 5
 4628 0040 AB0000EA 		b	.L294
 4629              	.L293:
 4630              		.loc 1 2603 5 discriminator 4
 4631 0044 24301BE5 		ldr	r3, [fp, #-36]
 4632 0048 8322A0E1 		lsl	r2, r3, #5
 4633 004c 20301BE5 		ldr	r3, [fp, #-32]
 4634 0050 0C3093E5 		ldr	r3, [r3, #12]
 4635 0054 033082E0 		add	r3, r2, r3
 4636 0058 08300BE5 		str	r3, [fp, #-8]
 4637 005c 08301BE5 		ldr	r3, [fp, #-8]
 4638 0060 0300A0E1 		mov	r0, r3
 4639 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4640 0068 0C000BE5 		str	r0, [fp, #-12]
 4641              		.loc 1 2603 5 discriminator 1
 4642 006c 0C301BE5 		ldr	r3, [fp, #-12]
 4643 0070 FF3803E2 		and	r3, r3, #16711680
 4644 0074 020853E3 		cmp	r3, #131072
 4645 0078 0100001A 		bne	.L295
 4646              		.loc 1 2603 5 discriminator 5
 4647 007c 0830E0E3 		mvn	r3, #8
 4648              		.loc 1 2603 5
 4649 0080 9B0000EA 		b	.L294
 4650              	.L295:
 4651              		.loc 1 2603 5 discriminator 6
 4652 0084 0C301BE5 		ldr	r3, [fp, #-12]
 4653 0088 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 129


 4654 008c 030053E3 		cmp	r3, #3
 4655 0090 3F00000A 		beq	.L296
 4656              		.loc 1 2603 5 discriminator 7
 4657 0094 0130E0E3 		mvn	r3, #1
 4658              		.loc 1 2603 5
 4659 0098 950000EA 		b	.L294
 4660              	.L292:
 4661              		.loc 1 2603 5 discriminator 2
 4662 009c 24301BE5 		ldr	r3, [fp, #-36]
 4663 00a0 2324A0E1 		lsr	r2, r3, #8
 4664 00a4 20301BE5 		ldr	r3, [fp, #-32]
 4665 00a8 143093E5 		ldr	r3, [r3, #20]
 4666 00ac 030052E1 		cmp	r2, r3
 4667 00b0 0100003A 		bcc	.L297
 4668              		.loc 1 2603 5 discriminator 8
 4669 00b4 0230E0E3 		mvn	r3, #2
 4670              		.loc 1 2603 5
 4671 00b8 8D0000EA 		b	.L294
 4672              	.L297:
 4673              		.loc 1 2603 5 discriminator 9
 4674 00bc 24301BE5 		ldr	r3, [fp, #-36]
 4675 00c0 2334A0E1 		lsr	r3, r3, #8
 4676 00c4 8322A0E1 		lsl	r2, r3, #5
 4677 00c8 20301BE5 		ldr	r3, [fp, #-32]
 4678 00cc 0C3093E5 		ldr	r3, [r3, #12]
 4679 00d0 033082E0 		add	r3, r2, r3
 4680 00d4 08300BE5 		str	r3, [fp, #-8]
 4681 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4682 00dc 0300A0E1 		mov	r0, r3
 4683 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4684 00e4 0C000BE5 		str	r0, [fp, #-12]
 4685              		.loc 1 2603 5 discriminator 1
 4686 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 4687 00ec FF3803E2 		and	r3, r3, #16711680
 4688 00f0 020853E3 		cmp	r3, #131072
 4689 00f4 0100001A 		bne	.L298
 4690              		.loc 1 2603 5 discriminator 10
 4691 00f8 0830E0E3 		mvn	r3, #8
 4692              		.loc 1 2603 5
 4693 00fc 7C0000EA 		b	.L294
 4694              	.L298:
 4695              		.loc 1 2603 5 discriminator 11
 4696 0100 0C301BE5 		ldr	r3, [fp, #-12]
 4697 0104 233CA0E1 		lsr	r3, r3, #24
 4698 0108 030053E3 		cmp	r3, #3
 4699 010c 0100000A 		beq	.L299
 4700              		.loc 1 2603 5 discriminator 12
 4701 0110 0130E0E3 		mvn	r3, #1
 4702              		.loc 1 2603 5
 4703 0114 760000EA 		b	.L294
 4704              	.L299:
 4705              		.loc 1 2603 5 discriminator 13
 4706 0118 24301BE5 		ldr	r3, [fp, #-36]
 4707 011c 7F2003E2 		and	r2, r3, #127
 4708 0120 08301BE5 		ldr	r3, [fp, #-8]
 4709 0124 143093E5 		ldr	r3, [r3, #20]
 4710 0128 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 130


 4711 012c 0100003A 		bcc	.L300
 4712              		.loc 1 2603 5 discriminator 14
 4713 0130 0230E0E3 		mvn	r3, #2
 4714              		.loc 1 2603 5
 4715 0134 6E0000EA 		b	.L294
 4716              	.L300:
 4717              		.loc 1 2603 5 discriminator 15
 4718 0138 24301BE5 		ldr	r3, [fp, #-36]
 4719 013c 7F3003E2 		and	r3, r3, #127
 4720 0140 8322A0E1 		lsl	r2, r3, #5
 4721 0144 08301BE5 		ldr	r3, [fp, #-8]
 4722 0148 0C3093E5 		ldr	r3, [r3, #12]
 4723 014c 033082E0 		add	r3, r2, r3
 4724 0150 08300BE5 		str	r3, [fp, #-8]
 4725 0154 08301BE5 		ldr	r3, [fp, #-8]
 4726 0158 0300A0E1 		mov	r0, r3
 4727 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4728 0160 0C000BE5 		str	r0, [fp, #-12]
 4729              		.loc 1 2603 5 discriminator 1
 4730 0164 0C301BE5 		ldr	r3, [fp, #-12]
 4731 0168 FF3803E2 		and	r3, r3, #16711680
 4732 016c 020853E3 		cmp	r3, #131072
 4733 0170 0100001A 		bne	.L301
 4734              		.loc 1 2603 5 discriminator 16
 4735 0174 0830E0E3 		mvn	r3, #8
 4736              		.loc 1 2603 5
 4737 0178 5D0000EA 		b	.L294
 4738              	.L301:
 4739              		.loc 1 2603 5 discriminator 17
 4740 017c 0C301BE5 		ldr	r3, [fp, #-12]
 4741 0180 233CA0E1 		lsr	r3, r3, #24
 4742 0184 030053E3 		cmp	r3, #3
 4743 0188 0100000A 		beq	.L296
 4744              		.loc 1 2603 5 discriminator 18
 4745 018c 0130E0E3 		mvn	r3, #1
 4746              		.loc 1 2603 5
 4747 0190 570000EA 		b	.L294
 4748              	.L296:
2604:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2605:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2606:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_REM);
 4749              		.loc 1 2606 5 is_stmt 1
 4750 0194 08301BE5 		ldr	r3, [fp, #-8]
 4751 0198 083093E5 		ldr	r3, [r3, #8]
 4752 019c 203003E2 		and	r3, r3, #32
 4753 01a0 000053E3 		cmp	r3, #0
 4754 01a4 0100001A 		bne	.L302
 4755              		.loc 1 2606 5 is_stmt 0 discriminator 1
 4756 01a8 0630E0E3 		mvn	r3, #6
 4757              		.loc 1 2606 5
 4758 01ac 500000EA 		b	.L294
 4759              	.L302:
2607:../../Source/Kernel/rme_kernel.c ****     
2608:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2609:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Rem,struct RME_Cap_Struct*,Capobj_Rem);
 4760              		.loc 1 2609 5 is_stmt 1
 4761 01b0 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 131


 4762 01b4 142093E5 		ldr	r2, [r3, #20]
 4763 01b8 28301BE5 		ldr	r3, [fp, #-40]
 4764 01bc 030052E1 		cmp	r2, r3
 4765 01c0 0100008A 		bhi	.L303
 4766              		.loc 1 2609 5 is_stmt 0 discriminator 1
 4767 01c4 0230E0E3 		mvn	r3, #2
 4768              		.loc 1 2609 5
 4769 01c8 490000EA 		b	.L294
 4770              	.L303:
 4771              		.loc 1 2609 5 discriminator 2
 4772 01cc 28301BE5 		ldr	r3, [fp, #-40]
 4773 01d0 8322A0E1 		lsl	r2, r3, #5
 4774 01d4 08301BE5 		ldr	r3, [fp, #-8]
 4775 01d8 0C3093E5 		ldr	r3, [r3, #12]
 4776 01dc 033082E0 		add	r3, r2, r3
 4777 01e0 10300BE5 		str	r3, [fp, #-16]
2610:../../Source/Kernel/rme_kernel.c ****     /* Removal check */
2611:../../Source/Kernel/rme_kernel.c ****     RME_CAP_REM_CHECK(Capobj_Rem,Type_Stat);
 4778              		.loc 1 2611 5 is_stmt 1
 4779 01e4 10301BE5 		ldr	r3, [fp, #-16]
 4780 01e8 0300A0E1 		mov	r0, r3
 4781 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4782 01f0 0C000BE5 		str	r0, [fp, #-12]
 4783              		.loc 1 2611 5 is_stmt 0 discriminator 1
 4784 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 4785 01f8 FF3803E2 		and	r3, r3, #16711680
 4786 01fc 020853E3 		cmp	r3, #131072
 4787 0200 0100000A 		beq	.L304
 4788 0204 0830E0E3 		mvn	r3, #8
 4789              		.loc 1 2611 5
 4790 0208 390000EA 		b	.L294
 4791              	.L304:
 4792              		.loc 1 2611 5 discriminator 2
 4793 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4794 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4795 0214 002093E5 		ldr	r2, [r3]
 4796 0218 10301BE5 		ldr	r3, [fp, #-16]
 4797 021c 103093E5 		ldr	r3, [r3, #16]
 4798 0220 0310A0E1 		mov	r1, r3
 4799 0224 0200A0E1 		mov	r0, r2
 4800 0228 FEFFFFEB 		bl	_RME_Diff
 4801 022c 0030A0E1 		mov	r3, r0
 4802              		.loc 1 2611 5 discriminator 1
 4803 0230 0A0053E3 		cmp	r3, #10
 4804 0234 0100008A 		bhi	.L305
 4805              		.loc 1 2611 5 discriminator 3
 4806 0238 0730E0E3 		mvn	r3, #7
 4807              		.loc 1 2611 5
 4808 023c 2C0000EA 		b	.L294
 4809              	.L305:
 4810              		.loc 1 2611 5 discriminator 4
 4811 0240 0C301BE5 		ldr	r3, [fp, #-12]
 4812 0244 7330FFE6 		uxth	r3, r3
 4813 0248 000053E3 		cmp	r3, #0
 4814 024c 0100001A 		bne	.L306
 4815              		.loc 1 2611 5 discriminator 5
 4816 0250 0930E0E3 		mvn	r3, #9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 132


 4817              		.loc 1 2611 5
 4818 0254 260000EA 		b	.L294
 4819              	.L306:
2612:../../Source/Kernel/rme_kernel.c ****     
2613:../../Source/Kernel/rme_kernel.c ****     /* If we are KFN or KOM, we don't care about parent or refcnt */
2614:../../Source/Kernel/rme_kernel.c ****     Rem_Type=RME_CAP_TYPE(Type_Stat);
 4820              		.loc 1 2614 13 is_stmt 1
 4821 0258 0C301BE5 		ldr	r3, [fp, #-12]
 4822 025c 233CA0E1 		lsr	r3, r3, #24
 4823 0260 14300BE5 		str	r3, [fp, #-20]
2615:../../Source/Kernel/rme_kernel.c ****     if((Rem_Type!=RME_CAP_TYPE_KOM)&&(Rem_Type!=RME_CAP_TYPE_KFN))
 4824              		.loc 1 2615 7
 4825 0264 14301BE5 		ldr	r3, [fp, #-20]
 4826 0268 020053E3 		cmp	r3, #2
 4827 026c 1500000A 		beq	.L307
 4828              		.loc 1 2615 36 discriminator 1
 4829 0270 14301BE5 		ldr	r3, [fp, #-20]
 4830 0274 010053E3 		cmp	r3, #1
 4831 0278 1200000A 		beq	.L307
2616:../../Source/Kernel/rme_kernel.c ****     {
2617:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2618:../../Source/Kernel/rme_kernel.c ****         
2619:../../Source/Kernel/rme_kernel.c ****         /* Remember this for refcnt operations */
2620:../../Source/Kernel/rme_kernel.c ****         Capobj_Root=(struct RME_Cap_Struct*)(Capobj_Rem->Head.Root_Ref);
 4832              		.loc 1 2620 62
 4833 027c 10301BE5 		ldr	r3, [fp, #-16]
 4834 0280 043093E5 		ldr	r3, [r3, #4]
 4835              		.loc 1 2620 20
 4836 0284 18300BE5 		str	r3, [fp, #-24]
2621:../../Source/Kernel/rme_kernel.c ****         
2622:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4837              		.loc 1 2622 9
 4838 0288 10301BE5 		ldr	r3, [fp, #-16]
 4839 028c 0020A0E3 		mov	r2, #0
 4840 0290 0C101BE5 		ldr	r1, [fp, #-12]
 4841 0294 0300A0E1 		mov	r0, r3
 4842 0298 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4843 029c 0030A0E1 		mov	r3, r0
 4844              		.loc 1 2622 9 is_stmt 0 discriminator 1
 4845 02a0 000053E3 		cmp	r3, #0
 4846 02a4 0100001A 		bne	.L308
 4847 02a8 0030E0E3 		mvn	r3, #0
 4848              		.loc 1 2622 9
 4849 02ac 100000EA 		b	.L294
 4850              	.L308:
2623:../../Source/Kernel/rme_kernel.c **** 
2624:../../Source/Kernel/rme_kernel.c ****         /* Check done, decrease its parent's refcnt. This must be done at last */
2625:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Capobj_Root->Head.Root_Ref),-1);
 4851              		.loc 1 2625 9 is_stmt 1
 4852 02b0 18301BE5 		ldr	r3, [fp, #-24]
 4853 02b4 043083E2 		add	r3, r3, #4
 4854 02b8 0010E0E3 		mvn	r1, #0
 4855 02bc 0300A0E1 		mov	r0, r3
 4856 02c0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4857 02c4 090000EA 		b	.L309
 4858              	.L307:
2626:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 133


2627:../../Source/Kernel/rme_kernel.c ****     else
2628:../../Source/Kernel/rme_kernel.c ****     {
2629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2630:../../Source/Kernel/rme_kernel.c **** 
2631:../../Source/Kernel/rme_kernel.c ****         /* Helping also applies here */
2632:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4859              		.loc 1 2632 9
 4860 02c8 10301BE5 		ldr	r3, [fp, #-16]
 4861 02cc 0020A0E3 		mov	r2, #0
 4862 02d0 0C101BE5 		ldr	r1, [fp, #-12]
 4863 02d4 0300A0E1 		mov	r0, r3
 4864 02d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4865 02dc 0030A0E1 		mov	r3, r0
 4866              		.loc 1 2632 9 is_stmt 0 discriminator 1
 4867 02e0 000053E3 		cmp	r3, #0
 4868 02e4 0100001A 		bne	.L309
 4869 02e8 0030E0E3 		mvn	r3, #0
 4870              		.loc 1 2632 9
 4871 02ec 000000EA 		b	.L294
 4872              	.L309:
2633:../../Source/Kernel/rme_kernel.c ****     }
2634:../../Source/Kernel/rme_kernel.c ****     
2635:../../Source/Kernel/rme_kernel.c ****     return 0;
 4873              		.loc 1 2635 12 is_stmt 1
 4874 02f0 0030A0E3 		mov	r3, #0
 4875              	.L294:
2636:../../Source/Kernel/rme_kernel.c **** }
 4876              		.loc 1 2636 1
 4877 02f4 0300A0E1 		mov	r0, r3
 4878 02f8 04D04BE2 		sub	sp, fp, #4
 4879              		.cfi_def_cfa 13, 8
 4880              		@ sp needed
 4881 02fc 0088BDE8 		pop	{fp, pc}
 4882              		.cfi_endproc
 4883              	.LFE28:
 4885              		.section	.text._RME_Pgt_Boot_Crt,"ax",%progbits
 4886              		.align	2
 4887              		.global	_RME_Pgt_Boot_Crt
 4888              		.syntax unified
 4889              		.arm
 4891              	_RME_Pgt_Boot_Crt:
 4892              	.LFB29:
2637:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Rem *************************************************/
2638:../../Source/Kernel/rme_kernel.c **** 
2639:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Crt *************************************************
2640:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time page table.
2641:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
2642:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2643:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
2644:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
2645:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2646:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
2647:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
2648:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2649:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the page table.
2650:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
2651:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 134


2652:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
2653:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
2654:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page
2655:../../Source/Kernel/rme_kernel.c ****                                  directories into it.
2656:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
2657:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the
2658:../../Source/Kernel/rme_kernel.c ****                                      page directory.
2659:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the page
2660:../../Source/Kernel/rme_kernel.c ****                                     table.
2661:../../Source/Kernel/rme_kernel.c **** Output      : None.
2662:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2663:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2664:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2665:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
2666:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
2667:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt,
2668:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
2669:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Base,
2670:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Is_Top,
2671:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Size_Order,
2672:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Num_Order)
2673:../../Source/Kernel/rme_kernel.c **** {
 4893              		.loc 1 2673 1
 4894              		.cfi_startproc
 4895              		@ args = 16, pretend = 0, frame = 32
 4896              		@ frame_needed = 1, uses_anonymous_args = 0
 4897 0000 00482DE9 		push	{fp, lr}
 4898              		.cfi_def_cfa_offset 8
 4899              		.cfi_offset 11, -8
 4900              		.cfi_offset 14, -4
 4901 0004 04B08DE2 		add	fp, sp, #4
 4902              		.cfi_def_cfa 11, 4
 4903 0008 28D04DE2 		sub	sp, sp, #40
 4904 000c 18000BE5 		str	r0, [fp, #-24]
 4905 0010 1C100BE5 		str	r1, [fp, #-28]
 4906 0014 20200BE5 		str	r2, [fp, #-32]
 4907 0018 24300BE5 		str	r3, [fp, #-36]
2674:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2675:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
2676:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2677:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
2678:../../Source/Kernel/rme_kernel.c ****     
2679:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
2680:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
2681:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 4908              		.loc 1 2681 19
 4909 001c 0C209BE5 		ldr	r2, [fp, #12]
 4910 0020 10309BE5 		ldr	r3, [fp, #16]
 4911 0024 033082E0 		add	r3, r2, r3
 4912              		.loc 1 2681 7
 4913 0028 200053E3 		cmp	r3, #32
 4914 002c 0100009A 		bls	.L311
2682:../../Source/Kernel/rme_kernel.c ****     {
2683:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2684:../../Source/Kernel/rme_kernel.c **** 
2685:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4915              		.loc 1 2685 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 135


 4916 0030 6630E0E3 		mvn	r3, #102
 4917 0034 D00000EA 		b	.L312
 4918              	.L311:
2686:../../Source/Kernel/rme_kernel.c ****     }
2687:../../Source/Kernel/rme_kernel.c ****     else
2688:../../Source/Kernel/rme_kernel.c ****     {
2689:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2690:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2691:../../Source/Kernel/rme_kernel.c ****     }
2692:../../Source/Kernel/rme_kernel.c **** 
2693:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
2694:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 4919              		.loc 1 2694 5
 4920 0038 1C301BE5 		ldr	r3, [fp, #-28]
 4921 003c 803003E2 		and	r3, r3, #128
 4922 0040 000053E3 		cmp	r3, #0
 4923 0044 1C00001A 		bne	.L313
 4924              		.loc 1 2694 5 is_stmt 0 discriminator 1
 4925 0048 18301BE5 		ldr	r3, [fp, #-24]
 4926 004c 142093E5 		ldr	r2, [r3, #20]
 4927 0050 1C301BE5 		ldr	r3, [fp, #-28]
 4928 0054 030052E1 		cmp	r2, r3
 4929 0058 0100008A 		bhi	.L314
 4930              		.loc 1 2694 5 discriminator 3
 4931 005c 0230E0E3 		mvn	r3, #2
 4932              		.loc 1 2694 5
 4933 0060 C50000EA 		b	.L312
 4934              	.L314:
 4935              		.loc 1 2694 5 discriminator 4
 4936 0064 1C301BE5 		ldr	r3, [fp, #-28]
 4937 0068 8322A0E1 		lsl	r2, r3, #5
 4938 006c 18301BE5 		ldr	r3, [fp, #-24]
 4939 0070 0C3093E5 		ldr	r3, [r3, #12]
 4940 0074 033082E0 		add	r3, r2, r3
 4941 0078 0C300BE5 		str	r3, [fp, #-12]
 4942 007c 0C301BE5 		ldr	r3, [fp, #-12]
 4943 0080 0300A0E1 		mov	r0, r3
 4944 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4945 0088 10000BE5 		str	r0, [fp, #-16]
 4946              		.loc 1 2694 5 discriminator 1
 4947 008c 10301BE5 		ldr	r3, [fp, #-16]
 4948 0090 FF3803E2 		and	r3, r3, #16711680
 4949 0094 020853E3 		cmp	r3, #131072
 4950 0098 0100001A 		bne	.L315
 4951              		.loc 1 2694 5 discriminator 5
 4952 009c 0830E0E3 		mvn	r3, #8
 4953              		.loc 1 2694 5
 4954 00a0 B50000EA 		b	.L312
 4955              	.L315:
 4956              		.loc 1 2694 5 discriminator 6
 4957 00a4 10301BE5 		ldr	r3, [fp, #-16]
 4958 00a8 233CA0E1 		lsr	r3, r3, #24
 4959 00ac 030053E3 		cmp	r3, #3
 4960 00b0 3F00000A 		beq	.L316
 4961              		.loc 1 2694 5 discriminator 7
 4962 00b4 0130E0E3 		mvn	r3, #1
 4963              		.loc 1 2694 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 136


 4964 00b8 AF0000EA 		b	.L312
 4965              	.L313:
 4966              		.loc 1 2694 5 discriminator 2
 4967 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 4968 00c0 2324A0E1 		lsr	r2, r3, #8
 4969 00c4 18301BE5 		ldr	r3, [fp, #-24]
 4970 00c8 143093E5 		ldr	r3, [r3, #20]
 4971 00cc 030052E1 		cmp	r2, r3
 4972 00d0 0100003A 		bcc	.L317
 4973              		.loc 1 2694 5 discriminator 8
 4974 00d4 0230E0E3 		mvn	r3, #2
 4975              		.loc 1 2694 5
 4976 00d8 A70000EA 		b	.L312
 4977              	.L317:
 4978              		.loc 1 2694 5 discriminator 9
 4979 00dc 1C301BE5 		ldr	r3, [fp, #-28]
 4980 00e0 2334A0E1 		lsr	r3, r3, #8
 4981 00e4 8322A0E1 		lsl	r2, r3, #5
 4982 00e8 18301BE5 		ldr	r3, [fp, #-24]
 4983 00ec 0C3093E5 		ldr	r3, [r3, #12]
 4984 00f0 033082E0 		add	r3, r2, r3
 4985 00f4 0C300BE5 		str	r3, [fp, #-12]
 4986 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 4987 00fc 0300A0E1 		mov	r0, r3
 4988 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4989 0104 10000BE5 		str	r0, [fp, #-16]
 4990              		.loc 1 2694 5 discriminator 1
 4991 0108 10301BE5 		ldr	r3, [fp, #-16]
 4992 010c FF3803E2 		and	r3, r3, #16711680
 4993 0110 020853E3 		cmp	r3, #131072
 4994 0114 0100001A 		bne	.L318
 4995              		.loc 1 2694 5 discriminator 10
 4996 0118 0830E0E3 		mvn	r3, #8
 4997              		.loc 1 2694 5
 4998 011c 960000EA 		b	.L312
 4999              	.L318:
 5000              		.loc 1 2694 5 discriminator 11
 5001 0120 10301BE5 		ldr	r3, [fp, #-16]
 5002 0124 233CA0E1 		lsr	r3, r3, #24
 5003 0128 030053E3 		cmp	r3, #3
 5004 012c 0100000A 		beq	.L319
 5005              		.loc 1 2694 5 discriminator 12
 5006 0130 0130E0E3 		mvn	r3, #1
 5007              		.loc 1 2694 5
 5008 0134 900000EA 		b	.L312
 5009              	.L319:
 5010              		.loc 1 2694 5 discriminator 13
 5011 0138 1C301BE5 		ldr	r3, [fp, #-28]
 5012 013c 7F2003E2 		and	r2, r3, #127
 5013 0140 0C301BE5 		ldr	r3, [fp, #-12]
 5014 0144 143093E5 		ldr	r3, [r3, #20]
 5015 0148 030052E1 		cmp	r2, r3
 5016 014c 0100003A 		bcc	.L320
 5017              		.loc 1 2694 5 discriminator 14
 5018 0150 0230E0E3 		mvn	r3, #2
 5019              		.loc 1 2694 5
 5020 0154 880000EA 		b	.L312
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 137


 5021              	.L320:
 5022              		.loc 1 2694 5 discriminator 15
 5023 0158 1C301BE5 		ldr	r3, [fp, #-28]
 5024 015c 7F3003E2 		and	r3, r3, #127
 5025 0160 8322A0E1 		lsl	r2, r3, #5
 5026 0164 0C301BE5 		ldr	r3, [fp, #-12]
 5027 0168 0C3093E5 		ldr	r3, [r3, #12]
 5028 016c 033082E0 		add	r3, r2, r3
 5029 0170 0C300BE5 		str	r3, [fp, #-12]
 5030 0174 0C301BE5 		ldr	r3, [fp, #-12]
 5031 0178 0300A0E1 		mov	r0, r3
 5032 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5033 0180 10000BE5 		str	r0, [fp, #-16]
 5034              		.loc 1 2694 5 discriminator 1
 5035 0184 10301BE5 		ldr	r3, [fp, #-16]
 5036 0188 FF3803E2 		and	r3, r3, #16711680
 5037 018c 020853E3 		cmp	r3, #131072
 5038 0190 0100001A 		bne	.L321
 5039              		.loc 1 2694 5 discriminator 16
 5040 0194 0830E0E3 		mvn	r3, #8
 5041              		.loc 1 2694 5
 5042 0198 770000EA 		b	.L312
 5043              	.L321:
 5044              		.loc 1 2694 5 discriminator 17
 5045 019c 10301BE5 		ldr	r3, [fp, #-16]
 5046 01a0 233CA0E1 		lsr	r3, r3, #24
 5047 01a4 030053E3 		cmp	r3, #3
 5048 01a8 0100000A 		beq	.L316
 5049              		.loc 1 2694 5 discriminator 18
 5050 01ac 0130E0E3 		mvn	r3, #1
 5051              		.loc 1 2694 5
 5052 01b0 710000EA 		b	.L312
 5053              	.L316:
2695:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
2696:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2697:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 5054              		.loc 1 2697 5 is_stmt 1
 5055 01b4 0C301BE5 		ldr	r3, [fp, #-12]
 5056 01b8 083093E5 		ldr	r3, [r3, #8]
 5057 01bc 013003E2 		and	r3, r3, #1
 5058 01c0 000053E3 		cmp	r3, #0
 5059 01c4 0100001A 		bne	.L322
 5060              		.loc 1 2697 5 is_stmt 0 discriminator 1
 5061 01c8 0630E0E3 		mvn	r3, #6
 5062              		.loc 1 2697 5
 5063 01cc 6A0000EA 		b	.L312
 5064              	.L322:
2698:../../Source/Kernel/rme_kernel.c ****     
2699:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
2700:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)!=0)
 5065              		.loc 1 2700 8 is_stmt 1
 5066 01d0 24301BE5 		ldr	r3, [fp, #-36]
 5067 01d4 00308DE5 		str	r3, [sp]
 5068 01d8 10309BE5 		ldr	r3, [fp, #16]
 5069 01dc 0C209BE5 		ldr	r2, [fp, #12]
 5070 01e0 08109BE5 		ldr	r1, [fp, #8]
 5071 01e4 04009BE5 		ldr	r0, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 138


 5072 01e8 FEFFFFEB 		bl	__RME_Pgt_Check
 5073 01ec 0030A0E1 		mov	r3, r0
 5074              		.loc 1 2700 7 discriminator 1
 5075 01f0 000053E3 		cmp	r3, #0
 5076 01f4 0100000A 		beq	.L323
2701:../../Source/Kernel/rme_kernel.c ****     {
2702:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2703:../../Source/Kernel/rme_kernel.c ****     
2704:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5077              		.loc 1 2704 16
 5078 01f8 6630E0E3 		mvn	r3, #102
 5079 01fc 5E0000EA 		b	.L312
 5080              	.L323:
2705:../../Source/Kernel/rme_kernel.c ****     }
2706:../../Source/Kernel/rme_kernel.c ****     else
2707:../../Source/Kernel/rme_kernel.c ****     {
2708:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2709:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2710:../../Source/Kernel/rme_kernel.c ****     }
2711:../../Source/Kernel/rme_kernel.c ****     
2712:../../Source/Kernel/rme_kernel.c ****     /* Check if the base address is properly aligned to the total order of the page table */
2713:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 5081              		.loc 1 2713 14
 5082 0200 0C209BE5 		ldr	r2, [fp, #12]
 5083 0204 10309BE5 		ldr	r3, [fp, #16]
 5084 0208 033082E0 		add	r3, r2, r3
 5085 020c 203063E2 		rsb	r3, r3, #32
 5086 0210 0020E0E3 		mvn	r2, #0
 5087 0214 3223A0E1 		lsr	r2, r2, r3
 5088              		.loc 1 2713 13
 5089 0218 04309BE5 		ldr	r3, [fp, #4]
 5090 021c 023003E0 		and	r3, r3, r2
 5091              		.loc 1 2713 7
 5092 0220 000053E3 		cmp	r3, #0
 5093 0224 0100000A 		beq	.L324
2714:../../Source/Kernel/rme_kernel.c ****     {
2715:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2716:../../Source/Kernel/rme_kernel.c **** 
2717:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5094              		.loc 1 2717 16
 5095 0228 6630E0E3 		mvn	r3, #102
 5096 022c 520000EA 		b	.L312
 5097              	.L324:
2718:../../Source/Kernel/rme_kernel.c ****     }
2719:../../Source/Kernel/rme_kernel.c ****     else
2720:../../Source/Kernel/rme_kernel.c ****     {
2721:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2722:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2723:../../Source/Kernel/rme_kernel.c ****     }
2724:../../Source/Kernel/rme_kernel.c **** 
2725:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2726:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 5098              		.loc 1 2726 5
 5099 0230 0C301BE5 		ldr	r3, [fp, #-12]
 5100 0234 142093E5 		ldr	r2, [r3, #20]
 5101 0238 20301BE5 		ldr	r3, [fp, #-32]
 5102 023c 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 139


 5103 0240 0100008A 		bhi	.L325
 5104              		.loc 1 2726 5 is_stmt 0 discriminator 1
 5105 0244 0230E0E3 		mvn	r3, #2
 5106              		.loc 1 2726 5
 5107 0248 4B0000EA 		b	.L312
 5108              	.L325:
 5109              		.loc 1 2726 5 discriminator 2
 5110 024c 20301BE5 		ldr	r3, [fp, #-32]
 5111 0250 8322A0E1 		lsl	r2, r3, #5
 5112 0254 0C301BE5 		ldr	r3, [fp, #-12]
 5113 0258 0C3093E5 		ldr	r3, [r3, #12]
 5114 025c 033082E0 		add	r3, r2, r3
 5115 0260 14300BE5 		str	r3, [fp, #-20]
2727:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
2728:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 5116              		.loc 1 2728 5 is_stmt 1
 5117 0264 14301BE5 		ldr	r3, [fp, #-20]
 5118 0268 0128A0E3 		mov	r2, #65536
 5119 026c 0010A0E3 		mov	r1, #0
 5120 0270 0300A0E1 		mov	r0, r3
 5121 0274 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 5122 0278 0030A0E1 		mov	r3, r0
 5123              		.loc 1 2728 5 is_stmt 0 discriminator 1
 5124 027c 000053E3 		cmp	r3, #0
 5125 0280 0100001A 		bne	.L326
 5126 0284 0430E0E3 		mvn	r3, #4
 5127              		.loc 1 2728 5
 5128 0288 3B0000EA 		b	.L312
 5129              	.L326:
 5130              		.loc 1 2728 5 discriminator 2
 5131 028c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 5132 0290 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 5133 0294 002093E5 		ldr	r2, [r3]
 5134 0298 14301BE5 		ldr	r3, [fp, #-20]
 5135 029c 102083E5 		str	r2, [r3, #16]
2729:../../Source/Kernel/rme_kernel.c **** 
2730:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top level? */
2731:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 5136              		.loc 1 2731 7 is_stmt 1
 5137 02a0 08309BE5 		ldr	r3, [fp, #8]
 5138 02a4 000053E3 		cmp	r3, #0
 5139 02a8 0400000A 		beq	.L327
2732:../../Source/Kernel/rme_kernel.c ****     {
2733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2734:../../Source/Kernel/rme_kernel.c ****         
2735:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 5140              		.loc 1 2735 19
 5141 02ac 0420A0E3 		mov	r2, #4
 5142 02b0 10309BE5 		ldr	r3, [fp, #16]
 5143 02b4 1233A0E1 		lsl	r3, r2, r3
 5144 02b8 08300BE5 		str	r3, [fp, #-8]
 5145 02bc 030000EA 		b	.L328
 5146              	.L327:
2736:../../Source/Kernel/rme_kernel.c ****     }
2737:../../Source/Kernel/rme_kernel.c ****     else
2738:../../Source/Kernel/rme_kernel.c ****     {
2739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 140


2740:../../Source/Kernel/rme_kernel.c ****         
2741:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 5147              		.loc 1 2741 19
 5148 02c0 0420A0E3 		mov	r2, #4
 5149 02c4 10309BE5 		ldr	r3, [fp, #16]
 5150 02c8 1233A0E1 		lsl	r3, r2, r3
 5151 02cc 08300BE5 		str	r3, [fp, #-8]
 5152              	.L328:
2742:../../Source/Kernel/rme_kernel.c ****     }
2743:../../Source/Kernel/rme_kernel.c ****     
2744:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
2745:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr, Table_Size)!=0)
 5153              		.loc 1 2745 8
 5154 02d0 08101BE5 		ldr	r1, [fp, #-8]
 5155 02d4 24001BE5 		ldr	r0, [fp, #-36]
 5156 02d8 FEFFFFEB 		bl	_RME_Kot_Mark
 5157 02dc 0030A0E1 		mov	r3, r0
 5158              		.loc 1 2745 7 discriminator 1
 5159 02e0 000053E3 		cmp	r3, #0
 5160 02e4 0500000A 		beq	.L329
2746:../../Source/Kernel/rme_kernel.c ****     {
2747:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2748:../../Source/Kernel/rme_kernel.c ****     
2749:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 5161              		.loc 1 2749 9
 5162 02e8 14301BE5 		ldr	r3, [fp, #-20]
 5163 02ec 0010A0E3 		mov	r1, #0
 5164 02f0 0300A0E1 		mov	r0, r3
 5165 02f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
2750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 5166              		.loc 1 2750 16
 5167 02f8 0330E0E3 		mvn	r3, #3
 5168 02fc 1E0000EA 		b	.L312
 5169              	.L329:
2751:../../Source/Kernel/rme_kernel.c ****     }
2752:../../Source/Kernel/rme_kernel.c ****     else
2753:../../Source/Kernel/rme_kernel.c ****     {
2754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2756:../../Source/Kernel/rme_kernel.c ****     }
2757:../../Source/Kernel/rme_kernel.c ****     
2758:../../Source/Kernel/rme_kernel.c ****     /* Header init */
2759:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 5170              		.loc 1 2759 27
 5171 0300 14301BE5 		ldr	r3, [fp, #-20]
 5172 0304 0020A0E3 		mov	r2, #0
 5173 0308 042083E5 		str	r2, [r3, #4]
2760:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 5174              		.loc 1 2760 25
 5175 030c 14301BE5 		ldr	r3, [fp, #-20]
 5176 0310 24201BE5 		ldr	r2, [fp, #-36]
 5177 0314 0C2083E5 		str	r2, [r3, #12]
2761:../../Source/Kernel/rme_kernel.c ****     /* Set the property of the page table to only act as source and creating process */
2762:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ADD_SRC|
 5178              		.loc 1 2762 23
 5179 0318 14201BE5 		ldr	r2, [fp, #-20]
 5180 031c C130A0E3 		mov	r3, #193
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 141


 5181 0320 F03F4FE3 		movt	r3, 65520
 5182 0324 083082E5 		str	r3, [r2, #8]
2763:../../Source/Kernel/rme_kernel.c ****                        RME_PGT_FLAG_PRC_CRT|RME_PGT_FLAG_PRC_PGT;
2764:../../Source/Kernel/rme_kernel.c ****     
2765:../../Source/Kernel/rme_kernel.c ****     /* Info init */
2766:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 5183              		.loc 1 2766 23
 5184 0328 04209BE5 		ldr	r2, [fp, #4]
 5185 032c 08309BE5 		ldr	r3, [fp, #8]
 5186 0330 032082E1 		orr	r2, r2, r3
 5187              		.loc 1 2766 18
 5188 0334 14301BE5 		ldr	r3, [fp, #-20]
 5189 0338 182083E5 		str	r2, [r3, #24]
2767:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 5190              		.loc 1 2767 20
 5191 033c 0C309BE5 		ldr	r3, [fp, #12]
 5192 0340 0328A0E1 		lsl	r2, r3, #16
 5193 0344 10309BE5 		ldr	r3, [fp, #16]
 5194 0348 032082E1 		orr	r2, r2, r3
 5195              		.loc 1 2767 19
 5196 034c 14301BE5 		ldr	r3, [fp, #-20]
 5197 0350 142083E5 		str	r2, [r3, #20]
2768:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 5198              		.loc 1 2768 18
 5199 0354 14301BE5 		ldr	r3, [fp, #-20]
 5200 0358 0020A0E3 		mov	r2, #0
 5201 035c 1C2083E5 		str	r2, [r3, #28]
2769:../../Source/Kernel/rme_kernel.c **** 
2770:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
2771:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 5202              		.loc 1 2771 8
 5203 0360 14001BE5 		ldr	r0, [fp, #-20]
 5204 0364 FEFFFFEB 		bl	__RME_Pgt_Init
2772:../../Source/Kernel/rme_kernel.c ****     {
2773:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2774:../../Source/Kernel/rme_kernel.c ****         
2775:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
2776:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr, Table_Size)==0);
2777:../../Source/Kernel/rme_kernel.c **** 
2778:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
2779:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
2780:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
2781:../../Source/Kernel/rme_kernel.c ****     }
2782:../../Source/Kernel/rme_kernel.c ****     else
2783:../../Source/Kernel/rme_kernel.c ****     {
2784:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2785:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2786:../../Source/Kernel/rme_kernel.c ****     }
2787:../../Source/Kernel/rme_kernel.c **** 
2788:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 5205              		.loc 1 2789 5
 5206 0368 14301BE5 		ldr	r3, [fp, #-20]
 5207 036c 0113A0E3 		mov	r1, #67108864
 5208 0370 0300A0E1 		mov	r0, r3
 5209 0374 FEFFFFEB 		bl	__RME_A7A_Write_Release
2790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 142


2791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
2793:../../Source/Kernel/rme_kernel.c **** 
2794:../../Source/Kernel/rme_kernel.c ****     return 0;
 5210              		.loc 1 2794 12
 5211 0378 0030A0E3 		mov	r3, #0
 5212              	.L312:
2795:../../Source/Kernel/rme_kernel.c **** }
 5213              		.loc 1 2795 1
 5214 037c 0300A0E1 		mov	r0, r3
 5215 0380 04D04BE2 		sub	sp, fp, #4
 5216              		.cfi_def_cfa 13, 8
 5217              		@ sp needed
 5218 0384 0088BDE8 		pop	{fp, pc}
 5219              		.cfi_endproc
 5220              	.LFE29:
 5222              		.section	.text._RME_Pgt_Boot_Add,"ax",%progbits
 5223              		.align	2
 5224              		.global	_RME_Pgt_Boot_Add
 5225              		.syntax unified
 5226              		.arm
 5228              	_RME_Pgt_Boot_Add:
 5229              	.LFB30:
2796:../../Source/Kernel/rme_kernel.c **** #endif
2797:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Crt ********************************************/
2798:../../Source/Kernel/rme_kernel.c **** 
2799:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Add *************************************************
2800:../../Source/Kernel/rme_kernel.c **** Description : This function is exclusively used to set up the Init process's
2801:../../Source/Kernel/rme_kernel.c ****               memory mappings in the booting process. When the system has
2802:../../Source/Kernel/rme_kernel.c ****               booted, it won't possible to fabricate pages like this.
2803:../../Source/Kernel/rme_kernel.c ****               Additionally, this function will set the cap to page table's 
2804:../../Source/Kernel/rme_kernel.c ****               property as unremovable. This means that it is not allowed to
2805:../../Source/Kernel/rme_kernel.c ****               remove any pages in the directory. It will set the reference
2806:../../Source/Kernel/rme_kernel.c ****               count of the capability as 1, thus making the capability to the
2807:../../Source/Kernel/rme_kernel.c ****               initial page table undeletable.
2808:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2809:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
2810:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2811:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Paddr - The physical address to map from.
2812:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to map to.
2813:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the user page.
2814:../../Source/Kernel/rme_kernel.c **** Output      : None.
2815:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2816:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2817:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2818:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Add(struct RME_Cap_Cpt* Cpt,
2819:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt, 
2820:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Paddr,
2821:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2822:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
2823:../../Source/Kernel/rme_kernel.c **** {
 5230              		.loc 1 2823 1
 5231              		.cfi_startproc
 5232              		@ args = 4, pretend = 0, frame = 32
 5233              		@ frame_needed = 1, uses_anonymous_args = 0
 5234 0000 00482DE9 		push	{fp, lr}
 5235              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 143


 5236              		.cfi_offset 11, -8
 5237              		.cfi_offset 14, -4
 5238 0004 04B08DE2 		add	fp, sp, #4
 5239              		.cfi_def_cfa 11, 4
 5240 0008 20D04DE2 		sub	sp, sp, #32
 5241 000c 18000BE5 		str	r0, [fp, #-24]
 5242 0010 1C100BE5 		str	r1, [fp, #-28]
 5243 0014 20200BE5 		str	r2, [fp, #-32]
 5244 0018 24300BE5 		str	r3, [fp, #-36]
2824:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
2825:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2826:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord;
2827:../../Source/Kernel/rme_kernel.c ****     
2828:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2829:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 5245              		.loc 1 2829 5
 5246 001c 1C301BE5 		ldr	r3, [fp, #-28]
 5247 0020 803003E2 		and	r3, r3, #128
 5248 0024 000053E3 		cmp	r3, #0
 5249 0028 1C00001A 		bne	.L331
 5250              		.loc 1 2829 5 is_stmt 0 discriminator 1
 5251 002c 18301BE5 		ldr	r3, [fp, #-24]
 5252 0030 142093E5 		ldr	r2, [r3, #20]
 5253 0034 1C301BE5 		ldr	r3, [fp, #-28]
 5254 0038 030052E1 		cmp	r2, r3
 5255 003c 0100008A 		bhi	.L332
 5256              		.loc 1 2829 5 discriminator 3
 5257 0040 0230E0E3 		mvn	r3, #2
 5258              		.loc 1 2829 5
 5259 0044 7A0000EA 		b	.L333
 5260              	.L332:
 5261              		.loc 1 2829 5 discriminator 4
 5262 0048 1C301BE5 		ldr	r3, [fp, #-28]
 5263 004c 8322A0E1 		lsl	r2, r3, #5
 5264 0050 18301BE5 		ldr	r3, [fp, #-24]
 5265 0054 0C3093E5 		ldr	r3, [r3, #12]
 5266 0058 033082E0 		add	r3, r2, r3
 5267 005c 08300BE5 		str	r3, [fp, #-8]
 5268 0060 08301BE5 		ldr	r3, [fp, #-8]
 5269 0064 0300A0E1 		mov	r0, r3
 5270 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5271 006c 0C000BE5 		str	r0, [fp, #-12]
 5272              		.loc 1 2829 5 discriminator 1
 5273 0070 0C301BE5 		ldr	r3, [fp, #-12]
 5274 0074 FF3803E2 		and	r3, r3, #16711680
 5275 0078 020853E3 		cmp	r3, #131072
 5276 007c 0100001A 		bne	.L334
 5277              		.loc 1 2829 5 discriminator 5
 5278 0080 0830E0E3 		mvn	r3, #8
 5279              		.loc 1 2829 5
 5280 0084 6A0000EA 		b	.L333
 5281              	.L334:
 5282              		.loc 1 2829 5 discriminator 6
 5283 0088 0C301BE5 		ldr	r3, [fp, #-12]
 5284 008c 233CA0E1 		lsr	r3, r3, #24
 5285 0090 040053E3 		cmp	r3, #4
 5286 0094 3F00000A 		beq	.L335
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 144


 5287              		.loc 1 2829 5 discriminator 7
 5288 0098 0130E0E3 		mvn	r3, #1
 5289              		.loc 1 2829 5
 5290 009c 640000EA 		b	.L333
 5291              	.L331:
 5292              		.loc 1 2829 5 discriminator 2
 5293 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 5294 00a4 2324A0E1 		lsr	r2, r3, #8
 5295 00a8 18301BE5 		ldr	r3, [fp, #-24]
 5296 00ac 143093E5 		ldr	r3, [r3, #20]
 5297 00b0 030052E1 		cmp	r2, r3
 5298 00b4 0100003A 		bcc	.L336
 5299              		.loc 1 2829 5 discriminator 8
 5300 00b8 0230E0E3 		mvn	r3, #2
 5301              		.loc 1 2829 5
 5302 00bc 5C0000EA 		b	.L333
 5303              	.L336:
 5304              		.loc 1 2829 5 discriminator 9
 5305 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 5306 00c4 2334A0E1 		lsr	r3, r3, #8
 5307 00c8 8322A0E1 		lsl	r2, r3, #5
 5308 00cc 18301BE5 		ldr	r3, [fp, #-24]
 5309 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5310 00d4 033082E0 		add	r3, r2, r3
 5311 00d8 08300BE5 		str	r3, [fp, #-8]
 5312 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5313 00e0 0300A0E1 		mov	r0, r3
 5314 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5315 00e8 0C000BE5 		str	r0, [fp, #-12]
 5316              		.loc 1 2829 5 discriminator 1
 5317 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 5318 00f0 FF3803E2 		and	r3, r3, #16711680
 5319 00f4 020853E3 		cmp	r3, #131072
 5320 00f8 0100001A 		bne	.L337
 5321              		.loc 1 2829 5 discriminator 10
 5322 00fc 0830E0E3 		mvn	r3, #8
 5323              		.loc 1 2829 5
 5324 0100 4B0000EA 		b	.L333
 5325              	.L337:
 5326              		.loc 1 2829 5 discriminator 11
 5327 0104 0C301BE5 		ldr	r3, [fp, #-12]
 5328 0108 233CA0E1 		lsr	r3, r3, #24
 5329 010c 030053E3 		cmp	r3, #3
 5330 0110 0100000A 		beq	.L338
 5331              		.loc 1 2829 5 discriminator 12
 5332 0114 0130E0E3 		mvn	r3, #1
 5333              		.loc 1 2829 5
 5334 0118 450000EA 		b	.L333
 5335              	.L338:
 5336              		.loc 1 2829 5 discriminator 13
 5337 011c 1C301BE5 		ldr	r3, [fp, #-28]
 5338 0120 7F2003E2 		and	r2, r3, #127
 5339 0124 08301BE5 		ldr	r3, [fp, #-8]
 5340 0128 143093E5 		ldr	r3, [r3, #20]
 5341 012c 030052E1 		cmp	r2, r3
 5342 0130 0100003A 		bcc	.L339
 5343              		.loc 1 2829 5 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 145


 5344 0134 0230E0E3 		mvn	r3, #2
 5345              		.loc 1 2829 5
 5346 0138 3D0000EA 		b	.L333
 5347              	.L339:
 5348              		.loc 1 2829 5 discriminator 15
 5349 013c 1C301BE5 		ldr	r3, [fp, #-28]
 5350 0140 7F3003E2 		and	r3, r3, #127
 5351 0144 8322A0E1 		lsl	r2, r3, #5
 5352 0148 08301BE5 		ldr	r3, [fp, #-8]
 5353 014c 0C3093E5 		ldr	r3, [r3, #12]
 5354 0150 033082E0 		add	r3, r2, r3
 5355 0154 08300BE5 		str	r3, [fp, #-8]
 5356 0158 08301BE5 		ldr	r3, [fp, #-8]
 5357 015c 0300A0E1 		mov	r0, r3
 5358 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5359 0164 0C000BE5 		str	r0, [fp, #-12]
 5360              		.loc 1 2829 5 discriminator 1
 5361 0168 0C301BE5 		ldr	r3, [fp, #-12]
 5362 016c FF3803E2 		and	r3, r3, #16711680
 5363 0170 020853E3 		cmp	r3, #131072
 5364 0174 0100001A 		bne	.L340
 5365              		.loc 1 2829 5 discriminator 16
 5366 0178 0830E0E3 		mvn	r3, #8
 5367              		.loc 1 2829 5
 5368 017c 2C0000EA 		b	.L333
 5369              	.L340:
 5370              		.loc 1 2829 5 discriminator 17
 5371 0180 0C301BE5 		ldr	r3, [fp, #-12]
 5372 0184 233CA0E1 		lsr	r3, r3, #24
 5373 0188 040053E3 		cmp	r3, #4
 5374 018c 0100000A 		beq	.L335
 5375              		.loc 1 2829 5 discriminator 18
 5376 0190 0130E0E3 		mvn	r3, #1
 5377              		.loc 1 2829 5
 5378 0194 260000EA 		b	.L333
 5379              	.L335:
2830:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);    
2831:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen, but don't check their properties */
2832:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,0U);
2833:../../Source/Kernel/rme_kernel.c **** 
2834:../../Source/Kernel/rme_kernel.c ****     Szord=RME_PGT_SZORD(Pgt_Op->Order);
 5380              		.loc 1 2834 11 is_stmt 1
 5381 0198 08301BE5 		ldr	r3, [fp, #-8]
 5382 019c 143093E5 		ldr	r3, [r3, #20]
 5383              		.loc 1 2834 10
 5384 01a0 2338A0E1 		lsr	r3, r3, #16
 5385 01a4 10300BE5 		str	r3, [fp, #-16]
2835:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2836:../../Source/Kernel/rme_kernel.c ****     /* Check if we force identical mapping */
2837:../../Source/Kernel/rme_kernel.c ****     if(Szord==RME_WORD_BIT)
2838:../../Source/Kernel/rme_kernel.c ****     {
2839:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2840:../../Source/Kernel/rme_kernel.c ****         
2841:../../Source/Kernel/rme_kernel.c ****         if((Paddr!=0U)||(Pos!=0U))
2842:../../Source/Kernel/rme_kernel.c ****         {
2843:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2844:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 146


2845:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2846:../../Source/Kernel/rme_kernel.c ****         }
2847:../../Source/Kernel/rme_kernel.c ****         else
2848:../../Source/Kernel/rme_kernel.c ****         {
2849:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2850:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2851:../../Source/Kernel/rme_kernel.c ****         }
2852:../../Source/Kernel/rme_kernel.c ****     }
2853:../../Source/Kernel/rme_kernel.c ****     else if(Paddr!=(RME_PGT_BASE(Pgt_Op->Base)+(Pos<<Szord)))
2854:../../Source/Kernel/rme_kernel.c ****     {
2855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2856:../../Source/Kernel/rme_kernel.c ****         
2857:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
2858:../../Source/Kernel/rme_kernel.c ****     }
2859:../../Source/Kernel/rme_kernel.c ****     else
2860:../../Source/Kernel/rme_kernel.c ****     {
2861:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2862:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2863:../../Source/Kernel/rme_kernel.c ****     }
2864:../../Source/Kernel/rme_kernel.c **** #endif
2865:../../Source/Kernel/rme_kernel.c **** 
2866:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range and the granularity is allowed */
2867:../../Source/Kernel/rme_kernel.c ****     if(((Pos>>RME_PGT_NMORD(Pgt_Op->Order))!=0U)||
 5386              		.loc 1 2867 15
 5387 01a8 08301BE5 		ldr	r3, [fp, #-8]
 5388 01ac 143093E5 		ldr	r3, [r3, #20]
 5389 01b0 7330FFE6 		uxth	r3, r3
 5390              		.loc 1 2867 13
 5391 01b4 24201BE5 		ldr	r2, [fp, #-36]
 5392 01b8 3233A0E1 		lsr	r3, r2, r3
 5393              		.loc 1 2867 7
 5394 01bc 000053E3 		cmp	r3, #0
 5395 01c0 0700001A 		bne	.L341
2868:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5396              		.loc 1 2868 16
 5397 01c4 10301BE5 		ldr	r3, [fp, #-16]
 5398 01c8 203063E2 		rsb	r3, r3, #32
 5399 01cc 0020E0E3 		mvn	r2, #0
 5400 01d0 3223A0E1 		lsr	r2, r2, r3
 5401              		.loc 1 2868 15
 5402 01d4 20301BE5 		ldr	r3, [fp, #-32]
 5403 01d8 023003E0 		and	r3, r3, r2
2867:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5404              		.loc 1 2867 49 discriminator 1
 5405 01dc 000053E3 		cmp	r3, #0
 5406 01e0 0100000A 		beq	.L342
 5407              	.L341:
2869:../../Source/Kernel/rme_kernel.c ****     {
2870:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2871:../../Source/Kernel/rme_kernel.c ****         //RME_DBG_S("\r\nmapping range and the granularity is not allowed ");
2872:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5408              		.loc 1 2872 16
 5409 01e4 6430E0E3 		mvn	r3, #100
 5410 01e8 110000EA 		b	.L333
 5411              	.L342:
2873:../../Source/Kernel/rme_kernel.c ****     }
2874:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 147


2875:../../Source/Kernel/rme_kernel.c ****     {
2876:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2877:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2878:../../Source/Kernel/rme_kernel.c ****     }
2879:../../Source/Kernel/rme_kernel.c **** 
2880:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
2881:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
2882:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag)!=0)
 5412              		.loc 1 2882 8
 5413 01ec 04309BE5 		ldr	r3, [fp, #4]
 5414 01f0 24201BE5 		ldr	r2, [fp, #-36]
 5415 01f4 20101BE5 		ldr	r1, [fp, #-32]
 5416 01f8 08001BE5 		ldr	r0, [fp, #-8]
 5417 01fc FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5418 0200 0030A0E1 		mov	r3, r0
 5419              		.loc 1 2882 7 discriminator 1
 5420 0204 000053E3 		cmp	r3, #0
 5421 0208 0800000A 		beq	.L343
 5422              	.LBB2:
2883:../../Source/Kernel/rme_kernel.c ****     {
2884:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2885:../../Source/Kernel/rme_kernel.c ****         int a=__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag);
 5423              		.loc 1 2885 15
 5424 020c 04309BE5 		ldr	r3, [fp, #4]
 5425 0210 24201BE5 		ldr	r2, [fp, #-36]
 5426 0214 20101BE5 		ldr	r1, [fp, #-32]
 5427 0218 08001BE5 		ldr	r0, [fp, #-8]
 5428 021c FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5429 0220 0030A0E1 		mov	r3, r0
 5430              		.loc 1 2885 13 discriminator 1
 5431 0224 14300BE5 		str	r3, [fp, #-20]
2886:../../Source/Kernel/rme_kernel.c ****         //RME_DBG_S("\r\nThis work is not passed down to the HAL ");
2887:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 5432              		.loc 1 2887 16
 5433 0228 6530E0E3 		mvn	r3, #101
 5434 022c 000000EA 		b	.L333
 5435              	.L343:
 5436              	.LBE2:
2888:../../Source/Kernel/rme_kernel.c ****     }
2889:../../Source/Kernel/rme_kernel.c ****     else
2890:../../Source/Kernel/rme_kernel.c ****     {
2891:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2892:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2893:../../Source/Kernel/rme_kernel.c ****     }
2894:../../Source/Kernel/rme_kernel.c **** 
2895:../../Source/Kernel/rme_kernel.c ****     return 0;
 5437              		.loc 1 2895 12
 5438 0230 0030A0E3 		mov	r3, #0
 5439              	.L333:
2896:../../Source/Kernel/rme_kernel.c **** }
 5440              		.loc 1 2896 1
 5441 0234 0300A0E1 		mov	r0, r3
 5442 0238 04D04BE2 		sub	sp, fp, #4
 5443              		.cfi_def_cfa 13, 8
 5444              		@ sp needed
 5445 023c 0088BDE8 		pop	{fp, pc}
 5446              		.cfi_endproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 148


 5447              	.LFE30:
 5449              		.section	.text._RME_Pgt_Boot_Con,"ax",%progbits
 5450              		.align	2
 5451              		.global	_RME_Pgt_Boot_Con
 5452              		.syntax unified
 5453              		.arm
 5455              	_RME_Pgt_Boot_Con:
 5456              	.LFB31:
2897:../../Source/Kernel/rme_kernel.c **** #endif
2898:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Add ********************************************/
2899:../../Source/Kernel/rme_kernel.c **** 
2900:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Con *************************************************
2901:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table from the parent page table at boot-time.
2902:../../Source/Kernel/rme_kernel.c ****               This does not check flags.
2903:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2904:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
2905:../../Source/Kernel/rme_kernel.c ****                                          table.
2906:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
2907:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
2908:../../Source/Kernel/rme_kernel.c ****                               page table to.
2909:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
2910:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
2911:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
2912:../../Source/Kernel/rme_kernel.c **** Output      : None.
2913:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2914:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2915:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2916:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Con(struct RME_Cap_Cpt* Cpt,
2917:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Parent,
2918:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2919:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Child,
2920:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag_Child)
2921:../../Source/Kernel/rme_kernel.c **** {
 5457              		.loc 1 2921 1
 5458              		.cfi_startproc
 5459              		@ args = 4, pretend = 0, frame = 40
 5460              		@ frame_needed = 1, uses_anonymous_args = 0
 5461 0000 00482DE9 		push	{fp, lr}
 5462              		.cfi_def_cfa_offset 8
 5463              		.cfi_offset 11, -8
 5464              		.cfi_offset 14, -4
 5465 0004 04B08DE2 		add	fp, sp, #4
 5466              		.cfi_def_cfa 11, 4
 5467 0008 28D04DE2 		sub	sp, sp, #40
 5468 000c 20000BE5 		str	r0, [fp, #-32]
 5469 0010 24100BE5 		str	r1, [fp, #-36]
 5470 0014 28200BE5 		str	r2, [fp, #-40]
 5471 0018 2C300BE5 		str	r3, [fp, #-44]
2922:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
2923:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
2924:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
2925:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2926:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
2927:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
2928:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2929:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
2930:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 149


2931:../../Source/Kernel/rme_kernel.c **** #endif
2932:../../Source/Kernel/rme_kernel.c ****     
2933:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2934:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 5472              		.loc 1 2934 5
 5473 001c 24301BE5 		ldr	r3, [fp, #-36]
 5474 0020 803003E2 		and	r3, r3, #128
 5475 0024 000053E3 		cmp	r3, #0
 5476 0028 1C00001A 		bne	.L345
 5477              		.loc 1 2934 5 is_stmt 0 discriminator 1
 5478 002c 20301BE5 		ldr	r3, [fp, #-32]
 5479 0030 142093E5 		ldr	r2, [r3, #20]
 5480 0034 24301BE5 		ldr	r3, [fp, #-36]
 5481 0038 030052E1 		cmp	r2, r3
 5482 003c 0100008A 		bhi	.L346
 5483              		.loc 1 2934 5 discriminator 3
 5484 0040 0230E0E3 		mvn	r3, #2
 5485              		.loc 1 2934 5
 5486 0044 F70000EA 		b	.L347
 5487              	.L346:
 5488              		.loc 1 2934 5 discriminator 4
 5489 0048 24301BE5 		ldr	r3, [fp, #-36]
 5490 004c 8322A0E1 		lsl	r2, r3, #5
 5491 0050 20301BE5 		ldr	r3, [fp, #-32]
 5492 0054 0C3093E5 		ldr	r3, [r3, #12]
 5493 0058 033082E0 		add	r3, r2, r3
 5494 005c 08300BE5 		str	r3, [fp, #-8]
 5495 0060 08301BE5 		ldr	r3, [fp, #-8]
 5496 0064 0300A0E1 		mov	r0, r3
 5497 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5498 006c 10000BE5 		str	r0, [fp, #-16]
 5499              		.loc 1 2934 5 discriminator 1
 5500 0070 10301BE5 		ldr	r3, [fp, #-16]
 5501 0074 FF3803E2 		and	r3, r3, #16711680
 5502 0078 020853E3 		cmp	r3, #131072
 5503 007c 0100001A 		bne	.L348
 5504              		.loc 1 2934 5 discriminator 5
 5505 0080 0830E0E3 		mvn	r3, #8
 5506              		.loc 1 2934 5
 5507 0084 E70000EA 		b	.L347
 5508              	.L348:
 5509              		.loc 1 2934 5 discriminator 6
 5510 0088 10301BE5 		ldr	r3, [fp, #-16]
 5511 008c 233CA0E1 		lsr	r3, r3, #24
 5512 0090 040053E3 		cmp	r3, #4
 5513 0094 3F00000A 		beq	.L349
 5514              		.loc 1 2934 5 discriminator 7
 5515 0098 0130E0E3 		mvn	r3, #1
 5516              		.loc 1 2934 5
 5517 009c E10000EA 		b	.L347
 5518              	.L345:
 5519              		.loc 1 2934 5 discriminator 2
 5520 00a0 24301BE5 		ldr	r3, [fp, #-36]
 5521 00a4 2324A0E1 		lsr	r2, r3, #8
 5522 00a8 20301BE5 		ldr	r3, [fp, #-32]
 5523 00ac 143093E5 		ldr	r3, [r3, #20]
 5524 00b0 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 150


 5525 00b4 0100003A 		bcc	.L350
 5526              		.loc 1 2934 5 discriminator 8
 5527 00b8 0230E0E3 		mvn	r3, #2
 5528              		.loc 1 2934 5
 5529 00bc D90000EA 		b	.L347
 5530              	.L350:
 5531              		.loc 1 2934 5 discriminator 9
 5532 00c0 24301BE5 		ldr	r3, [fp, #-36]
 5533 00c4 2334A0E1 		lsr	r3, r3, #8
 5534 00c8 8322A0E1 		lsl	r2, r3, #5
 5535 00cc 20301BE5 		ldr	r3, [fp, #-32]
 5536 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5537 00d4 033082E0 		add	r3, r2, r3
 5538 00d8 08300BE5 		str	r3, [fp, #-8]
 5539 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5540 00e0 0300A0E1 		mov	r0, r3
 5541 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5542 00e8 10000BE5 		str	r0, [fp, #-16]
 5543              		.loc 1 2934 5 discriminator 1
 5544 00ec 10301BE5 		ldr	r3, [fp, #-16]
 5545 00f0 FF3803E2 		and	r3, r3, #16711680
 5546 00f4 020853E3 		cmp	r3, #131072
 5547 00f8 0100001A 		bne	.L351
 5548              		.loc 1 2934 5 discriminator 10
 5549 00fc 0830E0E3 		mvn	r3, #8
 5550              		.loc 1 2934 5
 5551 0100 C80000EA 		b	.L347
 5552              	.L351:
 5553              		.loc 1 2934 5 discriminator 11
 5554 0104 10301BE5 		ldr	r3, [fp, #-16]
 5555 0108 233CA0E1 		lsr	r3, r3, #24
 5556 010c 030053E3 		cmp	r3, #3
 5557 0110 0100000A 		beq	.L352
 5558              		.loc 1 2934 5 discriminator 12
 5559 0114 0130E0E3 		mvn	r3, #1
 5560              		.loc 1 2934 5
 5561 0118 C20000EA 		b	.L347
 5562              	.L352:
 5563              		.loc 1 2934 5 discriminator 13
 5564 011c 24301BE5 		ldr	r3, [fp, #-36]
 5565 0120 7F2003E2 		and	r2, r3, #127
 5566 0124 08301BE5 		ldr	r3, [fp, #-8]
 5567 0128 143093E5 		ldr	r3, [r3, #20]
 5568 012c 030052E1 		cmp	r2, r3
 5569 0130 0100003A 		bcc	.L353
 5570              		.loc 1 2934 5 discriminator 14
 5571 0134 0230E0E3 		mvn	r3, #2
 5572              		.loc 1 2934 5
 5573 0138 BA0000EA 		b	.L347
 5574              	.L353:
 5575              		.loc 1 2934 5 discriminator 15
 5576 013c 24301BE5 		ldr	r3, [fp, #-36]
 5577 0140 7F3003E2 		and	r3, r3, #127
 5578 0144 8322A0E1 		lsl	r2, r3, #5
 5579 0148 08301BE5 		ldr	r3, [fp, #-8]
 5580 014c 0C3093E5 		ldr	r3, [r3, #12]
 5581 0150 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 151


 5582 0154 08300BE5 		str	r3, [fp, #-8]
 5583 0158 08301BE5 		ldr	r3, [fp, #-8]
 5584 015c 0300A0E1 		mov	r0, r3
 5585 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5586 0164 10000BE5 		str	r0, [fp, #-16]
 5587              		.loc 1 2934 5 discriminator 1
 5588 0168 10301BE5 		ldr	r3, [fp, #-16]
 5589 016c FF3803E2 		and	r3, r3, #16711680
 5590 0170 020853E3 		cmp	r3, #131072
 5591 0174 0100001A 		bne	.L354
 5592              		.loc 1 2934 5 discriminator 16
 5593 0178 0830E0E3 		mvn	r3, #8
 5594              		.loc 1 2934 5
 5595 017c A90000EA 		b	.L347
 5596              	.L354:
 5597              		.loc 1 2934 5 discriminator 17
 5598 0180 10301BE5 		ldr	r3, [fp, #-16]
 5599 0184 233CA0E1 		lsr	r3, r3, #24
 5600 0188 040053E3 		cmp	r3, #4
 5601 018c 0100000A 		beq	.L349
 5602              		.loc 1 2934 5 discriminator 18
 5603 0190 0130E0E3 		mvn	r3, #1
 5604              		.loc 1 2934 5
 5605 0194 A30000EA 		b	.L347
 5606              	.L349:
2935:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
2936:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 5607              		.loc 1 2936 5 is_stmt 1
 5608 0198 2C301BE5 		ldr	r3, [fp, #-44]
 5609 019c 803003E2 		and	r3, r3, #128
 5610 01a0 000053E3 		cmp	r3, #0
 5611 01a4 1C00001A 		bne	.L355
 5612              		.loc 1 2936 5 is_stmt 0 discriminator 1
 5613 01a8 20301BE5 		ldr	r3, [fp, #-32]
 5614 01ac 142093E5 		ldr	r2, [r3, #20]
 5615 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 5616 01b4 030052E1 		cmp	r2, r3
 5617 01b8 0100008A 		bhi	.L356
 5618              		.loc 1 2936 5 discriminator 3
 5619 01bc 0230E0E3 		mvn	r3, #2
 5620              		.loc 1 2936 5
 5621 01c0 980000EA 		b	.L347
 5622              	.L356:
 5623              		.loc 1 2936 5 discriminator 4
 5624 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 5625 01c8 8322A0E1 		lsl	r2, r3, #5
 5626 01cc 20301BE5 		ldr	r3, [fp, #-32]
 5627 01d0 0C3093E5 		ldr	r3, [r3, #12]
 5628 01d4 033082E0 		add	r3, r2, r3
 5629 01d8 0C300BE5 		str	r3, [fp, #-12]
 5630 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 5631 01e0 0300A0E1 		mov	r0, r3
 5632 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5633 01e8 10000BE5 		str	r0, [fp, #-16]
 5634              		.loc 1 2936 5 discriminator 1
 5635 01ec 10301BE5 		ldr	r3, [fp, #-16]
 5636 01f0 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 152


 5637 01f4 020853E3 		cmp	r3, #131072
 5638 01f8 0100001A 		bne	.L357
 5639              		.loc 1 2936 5 discriminator 5
 5640 01fc 0830E0E3 		mvn	r3, #8
 5641              		.loc 1 2936 5
 5642 0200 880000EA 		b	.L347
 5643              	.L357:
 5644              		.loc 1 2936 5 discriminator 6
 5645 0204 10301BE5 		ldr	r3, [fp, #-16]
 5646 0208 233CA0E1 		lsr	r3, r3, #24
 5647 020c 040053E3 		cmp	r3, #4
 5648 0210 3F00000A 		beq	.L358
 5649              		.loc 1 2936 5 discriminator 7
 5650 0214 0130E0E3 		mvn	r3, #1
 5651              		.loc 1 2936 5
 5652 0218 820000EA 		b	.L347
 5653              	.L355:
 5654              		.loc 1 2936 5 discriminator 2
 5655 021c 2C301BE5 		ldr	r3, [fp, #-44]
 5656 0220 2324A0E1 		lsr	r2, r3, #8
 5657 0224 20301BE5 		ldr	r3, [fp, #-32]
 5658 0228 143093E5 		ldr	r3, [r3, #20]
 5659 022c 030052E1 		cmp	r2, r3
 5660 0230 0100003A 		bcc	.L359
 5661              		.loc 1 2936 5 discriminator 8
 5662 0234 0230E0E3 		mvn	r3, #2
 5663              		.loc 1 2936 5
 5664 0238 7A0000EA 		b	.L347
 5665              	.L359:
 5666              		.loc 1 2936 5 discriminator 9
 5667 023c 2C301BE5 		ldr	r3, [fp, #-44]
 5668 0240 2334A0E1 		lsr	r3, r3, #8
 5669 0244 8322A0E1 		lsl	r2, r3, #5
 5670 0248 20301BE5 		ldr	r3, [fp, #-32]
 5671 024c 0C3093E5 		ldr	r3, [r3, #12]
 5672 0250 033082E0 		add	r3, r2, r3
 5673 0254 0C300BE5 		str	r3, [fp, #-12]
 5674 0258 0C301BE5 		ldr	r3, [fp, #-12]
 5675 025c 0300A0E1 		mov	r0, r3
 5676 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5677 0264 10000BE5 		str	r0, [fp, #-16]
 5678              		.loc 1 2936 5 discriminator 1
 5679 0268 10301BE5 		ldr	r3, [fp, #-16]
 5680 026c FF3803E2 		and	r3, r3, #16711680
 5681 0270 020853E3 		cmp	r3, #131072
 5682 0274 0100001A 		bne	.L360
 5683              		.loc 1 2936 5 discriminator 10
 5684 0278 0830E0E3 		mvn	r3, #8
 5685              		.loc 1 2936 5
 5686 027c 690000EA 		b	.L347
 5687              	.L360:
 5688              		.loc 1 2936 5 discriminator 11
 5689 0280 10301BE5 		ldr	r3, [fp, #-16]
 5690 0284 233CA0E1 		lsr	r3, r3, #24
 5691 0288 030053E3 		cmp	r3, #3
 5692 028c 0100000A 		beq	.L361
 5693              		.loc 1 2936 5 discriminator 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 153


 5694 0290 0130E0E3 		mvn	r3, #1
 5695              		.loc 1 2936 5
 5696 0294 630000EA 		b	.L347
 5697              	.L361:
 5698              		.loc 1 2936 5 discriminator 13
 5699 0298 2C301BE5 		ldr	r3, [fp, #-44]
 5700 029c 7F2003E2 		and	r2, r3, #127
 5701 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 5702 02a4 143093E5 		ldr	r3, [r3, #20]
 5703 02a8 030052E1 		cmp	r2, r3
 5704 02ac 0100003A 		bcc	.L362
 5705              		.loc 1 2936 5 discriminator 14
 5706 02b0 0230E0E3 		mvn	r3, #2
 5707              		.loc 1 2936 5
 5708 02b4 5B0000EA 		b	.L347
 5709              	.L362:
 5710              		.loc 1 2936 5 discriminator 15
 5711 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 5712 02bc 7F3003E2 		and	r3, r3, #127
 5713 02c0 8322A0E1 		lsl	r2, r3, #5
 5714 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 5715 02c8 0C3093E5 		ldr	r3, [r3, #12]
 5716 02cc 033082E0 		add	r3, r2, r3
 5717 02d0 0C300BE5 		str	r3, [fp, #-12]
 5718 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 5719 02d8 0300A0E1 		mov	r0, r3
 5720 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5721 02e0 10000BE5 		str	r0, [fp, #-16]
 5722              		.loc 1 2936 5 discriminator 1
 5723 02e4 10301BE5 		ldr	r3, [fp, #-16]
 5724 02e8 FF3803E2 		and	r3, r3, #16711680
 5725 02ec 020853E3 		cmp	r3, #131072
 5726 02f0 0100001A 		bne	.L363
 5727              		.loc 1 2936 5 discriminator 16
 5728 02f4 0830E0E3 		mvn	r3, #8
 5729              		.loc 1 2936 5
 5730 02f8 4A0000EA 		b	.L347
 5731              	.L363:
 5732              		.loc 1 2936 5 discriminator 17
 5733 02fc 10301BE5 		ldr	r3, [fp, #-16]
 5734 0300 233CA0E1 		lsr	r3, r3, #24
 5735 0304 040053E3 		cmp	r3, #4
 5736 0308 0100000A 		beq	.L358
 5737              		.loc 1 2936 5 discriminator 18
 5738 030c 0130E0E3 		mvn	r3, #1
 5739              		.loc 1 2936 5
 5740 0310 440000EA 		b	.L347
 5741              	.L358:
2937:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
2938:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen but don't check flags */
2939:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent,0U);
2940:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child,0U);
2941:../../Source/Kernel/rme_kernel.c ****     
2942:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
2943:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 5742              		.loc 1 2943 14 is_stmt 1
 5743 0314 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 154


 5744 0318 143093E5 		ldr	r3, [r3, #20]
 5745 031c 7330FFE6 		uxth	r3, r3
 5746              		.loc 1 2943 12
 5747 0320 28201BE5 		ldr	r2, [fp, #-40]
 5748 0324 3233A0E1 		lsr	r3, r2, r3
 5749              		.loc 1 2943 7
 5750 0328 000053E3 		cmp	r3, #0
 5751 032c 0100000A 		beq	.L364
2944:../../Source/Kernel/rme_kernel.c ****     {
2945:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2946:../../Source/Kernel/rme_kernel.c ****         
2947:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5752              		.loc 1 2947 16
 5753 0330 6430E0E3 		mvn	r3, #100
 5754 0334 3B0000EA 		b	.L347
 5755              	.L364:
2948:../../Source/Kernel/rme_kernel.c ****     }
2949:../../Source/Kernel/rme_kernel.c ****     else
2950:../../Source/Kernel/rme_kernel.c ****     {
2951:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2952:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2953:../../Source/Kernel/rme_kernel.c ****     }
2954:../../Source/Kernel/rme_kernel.c ****     
2955:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
2956:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 5756              		.loc 1 2956 17
 5757 0338 0C301BE5 		ldr	r3, [fp, #-12]
 5758 033c 143093E5 		ldr	r3, [r3, #20]
 5759 0340 7320FFE6 		uxth	r2, r3
 5760              		.loc 1 2956 49
 5761 0344 0C301BE5 		ldr	r3, [fp, #-12]
 5762 0348 143093E5 		ldr	r3, [r3, #20]
 5763 034c 2338A0E1 		lsr	r3, r3, #16
 5764              		.loc 1 2956 16
 5765 0350 033082E0 		add	r3, r2, r3
 5766 0354 14300BE5 		str	r3, [fp, #-20]
2957:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 5767              		.loc 1 2957 18
 5768 0358 08301BE5 		ldr	r3, [fp, #-8]
 5769 035c 143093E5 		ldr	r3, [r3, #20]
 5770              		.loc 1 2957 17
 5771 0360 2338A0E1 		lsr	r3, r3, #16
 5772 0364 18300BE5 		str	r3, [fp, #-24]
2958:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 5773              		.loc 1 2958 7
 5774 0368 18201BE5 		ldr	r2, [fp, #-24]
 5775 036c 14301BE5 		ldr	r3, [fp, #-20]
 5776 0370 030052E1 		cmp	r2, r3
 5777 0374 0100002A 		bcs	.L365
2959:../../Source/Kernel/rme_kernel.c ****     {
2960:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2961:../../Source/Kernel/rme_kernel.c ****         
2962:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5778              		.loc 1 2962 16
 5779 0378 6430E0E3 		mvn	r3, #100
 5780 037c 290000EA 		b	.L347
 5781              	.L365:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 155


2963:../../Source/Kernel/rme_kernel.c ****     }
2964:../../Source/Kernel/rme_kernel.c ****     else
2965:../../Source/Kernel/rme_kernel.c ****     {
2966:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2967:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2968:../../Source/Kernel/rme_kernel.c ****     }
2969:../../Source/Kernel/rme_kernel.c **** 
2970:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2971:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
2972:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
2973:../../Source/Kernel/rme_kernel.c ****     {
2974:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2975:../../Source/Kernel/rme_kernel.c ****         
2976:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
2977:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
2978:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
2979:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
2980:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
2981:../../Source/Kernel/rme_kernel.c ****         {
2982:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2983:../../Source/Kernel/rme_kernel.c ****             
2984:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2985:../../Source/Kernel/rme_kernel.c ****         }
2986:../../Source/Kernel/rme_kernel.c ****         else
2987:../../Source/Kernel/rme_kernel.c ****         {
2988:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2989:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2990:../../Source/Kernel/rme_kernel.c ****         }
2991:../../Source/Kernel/rme_kernel.c ****         
2992:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
2993:../../Source/Kernel/rme_kernel.c ****         
2994:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
2995:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
2996:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
2997:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
2998:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
2999:../../Source/Kernel/rme_kernel.c ****         {
3000:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3001:../../Source/Kernel/rme_kernel.c ****             
3002:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3003:../../Source/Kernel/rme_kernel.c ****             {
3004:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3005:../../Source/Kernel/rme_kernel.c **** 
3006:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3007:../../Source/Kernel/rme_kernel.c ****             }
3008:../../Source/Kernel/rme_kernel.c ****             else
3009:../../Source/Kernel/rme_kernel.c ****             {
3010:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3011:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3012:../../Source/Kernel/rme_kernel.c ****             }
3013:../../Source/Kernel/rme_kernel.c ****         }
3014:../../Source/Kernel/rme_kernel.c ****         else
3015:../../Source/Kernel/rme_kernel.c ****         {
3016:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3017:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3018:../../Source/Kernel/rme_kernel.c ****         }
3019:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 156


3020:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, no need to check */
3021:../../Source/Kernel/rme_kernel.c ****     else
3022:../../Source/Kernel/rme_kernel.c ****     {
3023:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3024:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3025:../../Source/Kernel/rme_kernel.c ****     }
3026:../../Source/Kernel/rme_kernel.c **** #else
3027:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3028:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 5782              		.loc 1 3028 7
 5783 0380 18201BE5 		ldr	r2, [fp, #-24]
 5784 0384 14301BE5 		ldr	r3, [fp, #-20]
 5785 0388 030052E1 		cmp	r2, r3
 5786 038c 0100000A 		beq	.L366
3029:../../Source/Kernel/rme_kernel.c ****     {
3030:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3031:../../Source/Kernel/rme_kernel.c **** 
3032:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5787              		.loc 1 3032 16
 5788 0390 6430E0E3 		mvn	r3, #100
 5789 0394 230000EA 		b	.L347
 5790              	.L366:
3033:../../Source/Kernel/rme_kernel.c ****     }
3034:../../Source/Kernel/rme_kernel.c ****     else
3035:../../Source/Kernel/rme_kernel.c ****     {
3036:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3037:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3038:../../Source/Kernel/rme_kernel.c ****     }
3039:../../Source/Kernel/rme_kernel.c **** #endif
3040:../../Source/Kernel/rme_kernel.c **** 
3041:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3042:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3043:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 5791              		.loc 1 3043 8
 5792 0398 04309BE5 		ldr	r3, [fp, #4]
 5793 039c 0C201BE5 		ldr	r2, [fp, #-12]
 5794 03a0 28101BE5 		ldr	r1, [fp, #-40]
 5795 03a4 08001BE5 		ldr	r0, [fp, #-8]
 5796 03a8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3044:../../Source/Kernel/rme_kernel.c ****     {
3045:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3046:../../Source/Kernel/rme_kernel.c **** 
3047:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3048:../../Source/Kernel/rme_kernel.c ****     }
3049:../../Source/Kernel/rme_kernel.c ****     else
3050:../../Source/Kernel/rme_kernel.c ****     {
3051:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3052:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3053:../../Source/Kernel/rme_kernel.c ****     }
3054:../../Source/Kernel/rme_kernel.c ****     
3055:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3056:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 5797              		.loc 1 3056 14
 5798 03ac 08301BE5 		ldr	r3, [fp, #-8]
 5799 03b0 003093E5 		ldr	r3, [r3]
 5800 03b4 7330FFE6 		uxth	r3, r3
 5801 03b8 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 157


 5802 03bc 0200000A 		beq	.L367
 5803              		.loc 1 3056 14 is_stmt 0 discriminator 1
 5804 03c0 08301BE5 		ldr	r3, [fp, #-8]
 5805 03c4 043093E5 		ldr	r3, [r3, #4]
 5806 03c8 000000EA 		b	.L368
 5807              	.L367:
 5808              		.loc 1 3056 14 discriminator 2
 5809 03cc 08301BE5 		ldr	r3, [fp, #-8]
 5810              	.L368:
 5811              		.loc 1 3056 13 is_stmt 1 discriminator 4
 5812 03d0 1C300BE5 		str	r3, [fp, #-28]
3057:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5813              		.loc 1 3057 5
 5814 03d4 1C301BE5 		ldr	r3, [fp, #-28]
 5815 03d8 043083E2 		add	r3, r3, #4
 5816 03dc 0110A0E3 		mov	r1, #1
 5817 03e0 0300A0E1 		mov	r0, r3
 5818 03e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3058:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 5819              		.loc 1 3058 14
 5820 03e8 0C301BE5 		ldr	r3, [fp, #-12]
 5821 03ec 003093E5 		ldr	r3, [r3]
 5822 03f0 7330FFE6 		uxth	r3, r3
 5823 03f4 000053E3 		cmp	r3, #0
 5824 03f8 0200000A 		beq	.L369
 5825              		.loc 1 3058 14 is_stmt 0 discriminator 1
 5826 03fc 0C301BE5 		ldr	r3, [fp, #-12]
 5827 0400 043093E5 		ldr	r3, [r3, #4]
 5828 0404 000000EA 		b	.L370
 5829              	.L369:
 5830              		.loc 1 3058 14 discriminator 2
 5831 0408 0C301BE5 		ldr	r3, [fp, #-12]
 5832              	.L370:
 5833              		.loc 1 3058 13 is_stmt 1 discriminator 4
 5834 040c 1C300BE5 		str	r3, [fp, #-28]
3059:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5835              		.loc 1 3059 5
 5836 0410 1C301BE5 		ldr	r3, [fp, #-28]
 5837 0414 043083E2 		add	r3, r3, #4
 5838 0418 0110A0E3 		mov	r1, #1
 5839 041c 0300A0E1 		mov	r0, r3
 5840 0420 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3060:../../Source/Kernel/rme_kernel.c **** 
3061:../../Source/Kernel/rme_kernel.c ****     return 0;
 5841              		.loc 1 3061 12
 5842 0424 0030A0E3 		mov	r3, #0
 5843              	.L347:
3062:../../Source/Kernel/rme_kernel.c **** }
 5844              		.loc 1 3062 1
 5845 0428 0300A0E1 		mov	r0, r3
 5846 042c 04D04BE2 		sub	sp, fp, #4
 5847              		.cfi_def_cfa 13, 8
 5848              		@ sp needed
 5849 0430 0088BDE8 		pop	{fp, pc}
 5850              		.cfi_endproc
 5851              	.LFE31:
 5853              		.section	.text._RME_Pgt_Crt,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 158


 5854              		.align	2
 5855              		.syntax unified
 5856              		.arm
 5858              	_RME_Pgt_Crt:
 5859              	.LFB32:
3063:../../Source/Kernel/rme_kernel.c **** #endif
3064:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Con ********************************************/
3065:../../Source/Kernel/rme_kernel.c **** 
3066:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Crt ******************************************************
3067:../../Source/Kernel/rme_kernel.c **** Description : Create a page table.
3068:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3069:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
3070:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
3071:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3072:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
3073:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3074:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3075:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3076:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3077:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the page
3078:../../Source/Kernel/rme_kernel.c ****                                 table kernel object.
3079:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
3080:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
3081:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
3082:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
3083:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page 
3084:../../Source/Kernel/rme_kernel.c ****                                  directories into this one.
3085:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
3086:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the 
3087:../../Source/Kernel/rme_kernel.c ****                                      page directory.
3088:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the table.
3089:../../Source/Kernel/rme_kernel.c **** Output      : None.
3090:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3091:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3092:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3093:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Crt(struct RME_Cap_Cpt* Cpt,
3094:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3095:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
3096:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3097:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
3098:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Base,
3099:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Top,
3100:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Size_Order,
3101:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Num_Order)
3102:../../Source/Kernel/rme_kernel.c **** {
 5860              		.loc 1 3102 1
 5861              		.cfi_startproc
 5862              		@ args = 20, pretend = 0, frame = 40
 5863              		@ frame_needed = 1, uses_anonymous_args = 0
 5864 0000 00482DE9 		push	{fp, lr}
 5865              		.cfi_def_cfa_offset 8
 5866              		.cfi_offset 11, -8
 5867              		.cfi_offset 14, -4
 5868 0004 04B08DE2 		add	fp, sp, #4
 5869              		.cfi_def_cfa 11, 4
 5870 0008 30D04DE2 		sub	sp, sp, #48
 5871 000c 20000BE5 		str	r0, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 159


 5872 0010 24100BE5 		str	r1, [fp, #-36]
 5873 0014 28200BE5 		str	r2, [fp, #-40]
 5874 0018 2C300BE5 		str	r3, [fp, #-44]
3103:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3104:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
3105:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
3106:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3107:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
3108:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3109:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\n Cap_Cpt ");
3110:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Cpt);
3111:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Cap_Kom ");
3112:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Kom);
3113:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Cap_Pgt ");
3114:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Pgt);
3115:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Raddr ");
3116:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Raddr);
3117:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Base ");
3118:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Base);
3119:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Is_Top ");
3120:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Is_Top);
3121:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Size_Order ");
3122:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Size_Order);
3123:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Num_Order ");
3124:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Num_Order);*/
3125:../../Source/Kernel/rme_kernel.c ****     
3126:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
3127:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
3128:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 5875              		.loc 1 3128 19
 5876 001c 10209BE5 		ldr	r2, [fp, #16]
 5877 0020 14309BE5 		ldr	r3, [fp, #20]
 5878 0024 033082E0 		add	r3, r2, r3
 5879              		.loc 1 3128 7
 5880 0028 200053E3 		cmp	r3, #32
 5881 002c 0100009A 		bls	.L372
3129:../../Source/Kernel/rme_kernel.c ****     {
3130:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3131:../../Source/Kernel/rme_kernel.c ****         
3132:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5882              		.loc 1 3132 16
 5883 0030 6630E0E3 		mvn	r3, #102
 5884 0034 550100EA 		b	.L373
 5885              	.L372:
3133:../../Source/Kernel/rme_kernel.c ****     }
3134:../../Source/Kernel/rme_kernel.c ****     else
3135:../../Source/Kernel/rme_kernel.c ****     {
3136:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3137:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3138:../../Source/Kernel/rme_kernel.c ****     }
3139:../../Source/Kernel/rme_kernel.c ****     
3140:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3141:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 5886              		.loc 1 3141 5
 5887 0038 24301BE5 		ldr	r3, [fp, #-36]
 5888 003c 803003E2 		and	r3, r3, #128
 5889 0040 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 160


 5890 0044 1C00001A 		bne	.L374
 5891              		.loc 1 3141 5 is_stmt 0 discriminator 1
 5892 0048 20301BE5 		ldr	r3, [fp, #-32]
 5893 004c 142093E5 		ldr	r2, [r3, #20]
 5894 0050 24301BE5 		ldr	r3, [fp, #-36]
 5895 0054 030052E1 		cmp	r2, r3
 5896 0058 0100008A 		bhi	.L375
 5897              		.loc 1 3141 5 discriminator 3
 5898 005c 0230E0E3 		mvn	r3, #2
 5899              		.loc 1 3141 5
 5900 0060 4A0100EA 		b	.L373
 5901              	.L375:
 5902              		.loc 1 3141 5 discriminator 4
 5903 0064 24301BE5 		ldr	r3, [fp, #-36]
 5904 0068 8322A0E1 		lsl	r2, r3, #5
 5905 006c 20301BE5 		ldr	r3, [fp, #-32]
 5906 0070 0C3093E5 		ldr	r3, [r3, #12]
 5907 0074 033082E0 		add	r3, r2, r3
 5908 0078 0C300BE5 		str	r3, [fp, #-12]
 5909 007c 0C301BE5 		ldr	r3, [fp, #-12]
 5910 0080 0300A0E1 		mov	r0, r3
 5911 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5912 0088 14000BE5 		str	r0, [fp, #-20]
 5913              		.loc 1 3141 5 discriminator 1
 5914 008c 14301BE5 		ldr	r3, [fp, #-20]
 5915 0090 FF3803E2 		and	r3, r3, #16711680
 5916 0094 020853E3 		cmp	r3, #131072
 5917 0098 0100001A 		bne	.L376
 5918              		.loc 1 3141 5 discriminator 5
 5919 009c 0830E0E3 		mvn	r3, #8
 5920              		.loc 1 3141 5
 5921 00a0 3A0100EA 		b	.L373
 5922              	.L376:
 5923              		.loc 1 3141 5 discriminator 6
 5924 00a4 14301BE5 		ldr	r3, [fp, #-20]
 5925 00a8 233CA0E1 		lsr	r3, r3, #24
 5926 00ac 030053E3 		cmp	r3, #3
 5927 00b0 3F00000A 		beq	.L377
 5928              		.loc 1 3141 5 discriminator 7
 5929 00b4 0130E0E3 		mvn	r3, #1
 5930              		.loc 1 3141 5
 5931 00b8 340100EA 		b	.L373
 5932              	.L374:
 5933              		.loc 1 3141 5 discriminator 2
 5934 00bc 24301BE5 		ldr	r3, [fp, #-36]
 5935 00c0 2324A0E1 		lsr	r2, r3, #8
 5936 00c4 20301BE5 		ldr	r3, [fp, #-32]
 5937 00c8 143093E5 		ldr	r3, [r3, #20]
 5938 00cc 030052E1 		cmp	r2, r3
 5939 00d0 0100003A 		bcc	.L378
 5940              		.loc 1 3141 5 discriminator 8
 5941 00d4 0230E0E3 		mvn	r3, #2
 5942              		.loc 1 3141 5
 5943 00d8 2C0100EA 		b	.L373
 5944              	.L378:
 5945              		.loc 1 3141 5 discriminator 9
 5946 00dc 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 161


 5947 00e0 2334A0E1 		lsr	r3, r3, #8
 5948 00e4 8322A0E1 		lsl	r2, r3, #5
 5949 00e8 20301BE5 		ldr	r3, [fp, #-32]
 5950 00ec 0C3093E5 		ldr	r3, [r3, #12]
 5951 00f0 033082E0 		add	r3, r2, r3
 5952 00f4 0C300BE5 		str	r3, [fp, #-12]
 5953 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 5954 00fc 0300A0E1 		mov	r0, r3
 5955 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5956 0104 14000BE5 		str	r0, [fp, #-20]
 5957              		.loc 1 3141 5 discriminator 1
 5958 0108 14301BE5 		ldr	r3, [fp, #-20]
 5959 010c FF3803E2 		and	r3, r3, #16711680
 5960 0110 020853E3 		cmp	r3, #131072
 5961 0114 0100001A 		bne	.L379
 5962              		.loc 1 3141 5 discriminator 10
 5963 0118 0830E0E3 		mvn	r3, #8
 5964              		.loc 1 3141 5
 5965 011c 1B0100EA 		b	.L373
 5966              	.L379:
 5967              		.loc 1 3141 5 discriminator 11
 5968 0120 14301BE5 		ldr	r3, [fp, #-20]
 5969 0124 233CA0E1 		lsr	r3, r3, #24
 5970 0128 030053E3 		cmp	r3, #3
 5971 012c 0100000A 		beq	.L380
 5972              		.loc 1 3141 5 discriminator 12
 5973 0130 0130E0E3 		mvn	r3, #1
 5974              		.loc 1 3141 5
 5975 0134 150100EA 		b	.L373
 5976              	.L380:
 5977              		.loc 1 3141 5 discriminator 13
 5978 0138 24301BE5 		ldr	r3, [fp, #-36]
 5979 013c 7F2003E2 		and	r2, r3, #127
 5980 0140 0C301BE5 		ldr	r3, [fp, #-12]
 5981 0144 143093E5 		ldr	r3, [r3, #20]
 5982 0148 030052E1 		cmp	r2, r3
 5983 014c 0100003A 		bcc	.L381
 5984              		.loc 1 3141 5 discriminator 14
 5985 0150 0230E0E3 		mvn	r3, #2
 5986              		.loc 1 3141 5
 5987 0154 0D0100EA 		b	.L373
 5988              	.L381:
 5989              		.loc 1 3141 5 discriminator 15
 5990 0158 24301BE5 		ldr	r3, [fp, #-36]
 5991 015c 7F3003E2 		and	r3, r3, #127
 5992 0160 8322A0E1 		lsl	r2, r3, #5
 5993 0164 0C301BE5 		ldr	r3, [fp, #-12]
 5994 0168 0C3093E5 		ldr	r3, [r3, #12]
 5995 016c 033082E0 		add	r3, r2, r3
 5996 0170 0C300BE5 		str	r3, [fp, #-12]
 5997 0174 0C301BE5 		ldr	r3, [fp, #-12]
 5998 0178 0300A0E1 		mov	r0, r3
 5999 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6000 0180 14000BE5 		str	r0, [fp, #-20]
 6001              		.loc 1 3141 5 discriminator 1
 6002 0184 14301BE5 		ldr	r3, [fp, #-20]
 6003 0188 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 162


 6004 018c 020853E3 		cmp	r3, #131072
 6005 0190 0100001A 		bne	.L382
 6006              		.loc 1 3141 5 discriminator 16
 6007 0194 0830E0E3 		mvn	r3, #8
 6008              		.loc 1 3141 5
 6009 0198 FC0000EA 		b	.L373
 6010              	.L382:
 6011              		.loc 1 3141 5 discriminator 17
 6012 019c 14301BE5 		ldr	r3, [fp, #-20]
 6013 01a0 233CA0E1 		lsr	r3, r3, #24
 6014 01a4 030053E3 		cmp	r3, #3
 6015 01a8 0100000A 		beq	.L377
 6016              		.loc 1 3141 5 discriminator 18
 6017 01ac 0130E0E3 		mvn	r3, #1
 6018              		.loc 1 3141 5
 6019 01b0 F60000EA 		b	.L373
 6020              	.L377:
3142:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3143:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 6021              		.loc 1 3143 5 is_stmt 1
 6022 01b4 28301BE5 		ldr	r3, [fp, #-40]
 6023 01b8 803003E2 		and	r3, r3, #128
 6024 01bc 000053E3 		cmp	r3, #0
 6025 01c0 1C00001A 		bne	.L383
 6026              		.loc 1 3143 5 is_stmt 0 discriminator 1
 6027 01c4 20301BE5 		ldr	r3, [fp, #-32]
 6028 01c8 142093E5 		ldr	r2, [r3, #20]
 6029 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6030 01d0 030052E1 		cmp	r2, r3
 6031 01d4 0100008A 		bhi	.L384
 6032              		.loc 1 3143 5 discriminator 3
 6033 01d8 0230E0E3 		mvn	r3, #2
 6034              		.loc 1 3143 5
 6035 01dc EB0000EA 		b	.L373
 6036              	.L384:
 6037              		.loc 1 3143 5 discriminator 4
 6038 01e0 28301BE5 		ldr	r3, [fp, #-40]
 6039 01e4 8322A0E1 		lsl	r2, r3, #5
 6040 01e8 20301BE5 		ldr	r3, [fp, #-32]
 6041 01ec 0C3093E5 		ldr	r3, [r3, #12]
 6042 01f0 033082E0 		add	r3, r2, r3
 6043 01f4 08300BE5 		str	r3, [fp, #-8]
 6044 01f8 08301BE5 		ldr	r3, [fp, #-8]
 6045 01fc 0300A0E1 		mov	r0, r3
 6046 0200 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6047 0204 14000BE5 		str	r0, [fp, #-20]
 6048              		.loc 1 3143 5 discriminator 1
 6049 0208 14301BE5 		ldr	r3, [fp, #-20]
 6050 020c FF3803E2 		and	r3, r3, #16711680
 6051 0210 020853E3 		cmp	r3, #131072
 6052 0214 0100001A 		bne	.L385
 6053              		.loc 1 3143 5 discriminator 5
 6054 0218 0830E0E3 		mvn	r3, #8
 6055              		.loc 1 3143 5
 6056 021c DB0000EA 		b	.L373
 6057              	.L385:
 6058              		.loc 1 3143 5 discriminator 6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 163


 6059 0220 14301BE5 		ldr	r3, [fp, #-20]
 6060 0224 233CA0E1 		lsr	r3, r3, #24
 6061 0228 020053E3 		cmp	r3, #2
 6062 022c 3F00000A 		beq	.L386
 6063              		.loc 1 3143 5 discriminator 7
 6064 0230 0130E0E3 		mvn	r3, #1
 6065              		.loc 1 3143 5
 6066 0234 D50000EA 		b	.L373
 6067              	.L383:
 6068              		.loc 1 3143 5 discriminator 2
 6069 0238 28301BE5 		ldr	r3, [fp, #-40]
 6070 023c 2324A0E1 		lsr	r2, r3, #8
 6071 0240 20301BE5 		ldr	r3, [fp, #-32]
 6072 0244 143093E5 		ldr	r3, [r3, #20]
 6073 0248 030052E1 		cmp	r2, r3
 6074 024c 0100003A 		bcc	.L387
 6075              		.loc 1 3143 5 discriminator 8
 6076 0250 0230E0E3 		mvn	r3, #2
 6077              		.loc 1 3143 5
 6078 0254 CD0000EA 		b	.L373
 6079              	.L387:
 6080              		.loc 1 3143 5 discriminator 9
 6081 0258 28301BE5 		ldr	r3, [fp, #-40]
 6082 025c 2334A0E1 		lsr	r3, r3, #8
 6083 0260 8322A0E1 		lsl	r2, r3, #5
 6084 0264 20301BE5 		ldr	r3, [fp, #-32]
 6085 0268 0C3093E5 		ldr	r3, [r3, #12]
 6086 026c 033082E0 		add	r3, r2, r3
 6087 0270 08300BE5 		str	r3, [fp, #-8]
 6088 0274 08301BE5 		ldr	r3, [fp, #-8]
 6089 0278 0300A0E1 		mov	r0, r3
 6090 027c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6091 0280 14000BE5 		str	r0, [fp, #-20]
 6092              		.loc 1 3143 5 discriminator 1
 6093 0284 14301BE5 		ldr	r3, [fp, #-20]
 6094 0288 FF3803E2 		and	r3, r3, #16711680
 6095 028c 020853E3 		cmp	r3, #131072
 6096 0290 0100001A 		bne	.L388
 6097              		.loc 1 3143 5 discriminator 10
 6098 0294 0830E0E3 		mvn	r3, #8
 6099              		.loc 1 3143 5
 6100 0298 BC0000EA 		b	.L373
 6101              	.L388:
 6102              		.loc 1 3143 5 discriminator 11
 6103 029c 14301BE5 		ldr	r3, [fp, #-20]
 6104 02a0 233CA0E1 		lsr	r3, r3, #24
 6105 02a4 030053E3 		cmp	r3, #3
 6106 02a8 0100000A 		beq	.L389
 6107              		.loc 1 3143 5 discriminator 12
 6108 02ac 0130E0E3 		mvn	r3, #1
 6109              		.loc 1 3143 5
 6110 02b0 B60000EA 		b	.L373
 6111              	.L389:
 6112              		.loc 1 3143 5 discriminator 13
 6113 02b4 28301BE5 		ldr	r3, [fp, #-40]
 6114 02b8 7F2003E2 		and	r2, r3, #127
 6115 02bc 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 164


 6116 02c0 143093E5 		ldr	r3, [r3, #20]
 6117 02c4 030052E1 		cmp	r2, r3
 6118 02c8 0100003A 		bcc	.L390
 6119              		.loc 1 3143 5 discriminator 14
 6120 02cc 0230E0E3 		mvn	r3, #2
 6121              		.loc 1 3143 5
 6122 02d0 AE0000EA 		b	.L373
 6123              	.L390:
 6124              		.loc 1 3143 5 discriminator 15
 6125 02d4 28301BE5 		ldr	r3, [fp, #-40]
 6126 02d8 7F3003E2 		and	r3, r3, #127
 6127 02dc 8322A0E1 		lsl	r2, r3, #5
 6128 02e0 08301BE5 		ldr	r3, [fp, #-8]
 6129 02e4 0C3093E5 		ldr	r3, [r3, #12]
 6130 02e8 033082E0 		add	r3, r2, r3
 6131 02ec 08300BE5 		str	r3, [fp, #-8]
 6132 02f0 08301BE5 		ldr	r3, [fp, #-8]
 6133 02f4 0300A0E1 		mov	r0, r3
 6134 02f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6135 02fc 14000BE5 		str	r0, [fp, #-20]
 6136              		.loc 1 3143 5 discriminator 1
 6137 0300 14301BE5 		ldr	r3, [fp, #-20]
 6138 0304 FF3803E2 		and	r3, r3, #16711680
 6139 0308 020853E3 		cmp	r3, #131072
 6140 030c 0100001A 		bne	.L391
 6141              		.loc 1 3143 5 discriminator 16
 6142 0310 0830E0E3 		mvn	r3, #8
 6143              		.loc 1 3143 5
 6144 0314 9D0000EA 		b	.L373
 6145              	.L391:
 6146              		.loc 1 3143 5 discriminator 17
 6147 0318 14301BE5 		ldr	r3, [fp, #-20]
 6148 031c 233CA0E1 		lsr	r3, r3, #24
 6149 0320 020053E3 		cmp	r3, #2
 6150 0324 0100000A 		beq	.L386
 6151              		.loc 1 3143 5 discriminator 18
 6152 0328 0130E0E3 		mvn	r3, #1
 6153              		.loc 1 3143 5
 6154 032c 970000EA 		b	.L373
 6155              	.L386:
3144:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
3145:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3146:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op, RME_CPT_FLAG_CRT);
 6156              		.loc 1 3146 5 is_stmt 1
 6157 0330 0C301BE5 		ldr	r3, [fp, #-12]
 6158 0334 083093E5 		ldr	r3, [r3, #8]
 6159 0338 013003E2 		and	r3, r3, #1
 6160 033c 000053E3 		cmp	r3, #0
 6161 0340 0100001A 		bne	.L392
 6162              		.loc 1 3146 5 is_stmt 0 discriminator 1
 6163 0344 0630E0E3 		mvn	r3, #6
 6164              		.loc 1 3146 5
 6165 0348 900000EA 		b	.L373
 6166              	.L392:
3147:../../Source/Kernel/rme_kernel.c ****     
3148:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top-level? */
3149:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 165


 6167              		.loc 1 3149 7 is_stmt 1
 6168 034c 0C309BE5 		ldr	r3, [fp, #12]
 6169 0350 000053E3 		cmp	r3, #0
 6170 0354 0400000A 		beq	.L393
3150:../../Source/Kernel/rme_kernel.c ****     {
3151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3152:../../Source/Kernel/rme_kernel.c **** 
3153:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 6171              		.loc 1 3153 19
 6172 0358 0420A0E3 		mov	r2, #4
 6173 035c 14309BE5 		ldr	r3, [fp, #20]
 6174 0360 1233A0E1 		lsl	r3, r2, r3
 6175 0364 10300BE5 		str	r3, [fp, #-16]
 6176 0368 030000EA 		b	.L394
 6177              	.L393:
3154:../../Source/Kernel/rme_kernel.c ****     }
3155:../../Source/Kernel/rme_kernel.c ****     else
3156:../../Source/Kernel/rme_kernel.c ****     {
3157:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3158:../../Source/Kernel/rme_kernel.c **** 
3159:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 6178              		.loc 1 3159 19
 6179 036c 0420A0E3 		mov	r2, #4
 6180 0370 14309BE5 		ldr	r3, [fp, #20]
 6181 0374 1233A0E1 		lsl	r3, r2, r3
 6182 0378 10300BE5 		str	r3, [fp, #-16]
 6183              	.L394:
3160:../../Source/Kernel/rme_kernel.c ****     }
3161:../../Source/Kernel/rme_kernel.c ****     
3162:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
3163:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_PGT,Raddr,Vaddr,Table_Size);
 6184              		.loc 1 3163 5
 6185 037c 08301BE5 		ldr	r3, [fp, #-8]
 6186 0380 083093E5 		ldr	r3, [r3, #8]
 6187 0384 023003E2 		and	r3, r3, #2
 6188 0388 000053E3 		cmp	r3, #0
 6189 038c 0100001A 		bne	.L395
 6190              		.loc 1 3163 5 is_stmt 0 discriminator 1
 6191 0390 0630E0E3 		mvn	r3, #6
 6192              		.loc 1 3163 5
 6193 0394 7D0000EA 		b	.L373
 6194              	.L395:
 6195              		.loc 1 3163 5 discriminator 2
 6196 0398 08301BE5 		ldr	r3, [fp, #-8]
 6197 039c 143093E5 		ldr	r3, [r3, #20]
 6198 03a0 04209BE5 		ldr	r2, [fp, #4]
 6199 03a4 033082E0 		add	r3, r2, r3
 6200 03a8 18300BE5 		str	r3, [fp, #-24]
 6201 03ac 18201BE5 		ldr	r2, [fp, #-24]
 6202 03b0 04309BE5 		ldr	r3, [fp, #4]
 6203 03b4 030052E1 		cmp	r2, r3
 6204 03b8 0100002A 		bcs	.L396
 6205              		.loc 1 3163 5 discriminator 3
 6206 03bc 0630E0E3 		mvn	r3, #6
 6207              		.loc 1 3163 5
 6208 03c0 720000EA 		b	.L373
 6209              	.L396:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 166


 6210              		.loc 1 3163 5 discriminator 4
 6211 03c4 08301BE5 		ldr	r3, [fp, #-8]
 6212 03c8 143093E5 		ldr	r3, [r3, #20]
 6213 03cc 18201BE5 		ldr	r2, [fp, #-24]
 6214 03d0 030052E1 		cmp	r2, r3
 6215 03d4 0100002A 		bcs	.L397
 6216              		.loc 1 3163 5 discriminator 5
 6217 03d8 0630E0E3 		mvn	r3, #6
 6218              		.loc 1 3163 5
 6219 03dc 6B0000EA 		b	.L373
 6220              	.L397:
 6221              		.loc 1 3163 5 discriminator 6
 6222 03e0 18201BE5 		ldr	r2, [fp, #-24]
 6223 03e4 10301BE5 		ldr	r3, [fp, #-16]
 6224 03e8 033082E0 		add	r3, r2, r3
 6225 03ec 18201BE5 		ldr	r2, [fp, #-24]
 6226 03f0 030052E1 		cmp	r2, r3
 6227 03f4 0100009A 		bls	.L398
 6228              		.loc 1 3163 5 discriminator 7
 6229 03f8 0630E0E3 		mvn	r3, #6
 6230              		.loc 1 3163 5
 6231 03fc 630000EA 		b	.L373
 6232              	.L398:
 6233              		.loc 1 3163 5 discriminator 8
 6234 0400 08301BE5 		ldr	r3, [fp, #-8]
 6235 0404 182093E5 		ldr	r2, [r3, #24]
 6236 0408 18101BE5 		ldr	r1, [fp, #-24]
 6237 040c 10301BE5 		ldr	r3, [fp, #-16]
 6238 0410 033081E0 		add	r3, r1, r3
 6239 0414 013043E2 		sub	r3, r3, #1
 6240 0418 030052E1 		cmp	r2, r3
 6241 041c 0100002A 		bcs	.L399
 6242              		.loc 1 3163 5 discriminator 9
 6243 0420 0630E0E3 		mvn	r3, #6
 6244              		.loc 1 3163 5
 6245 0424 590000EA 		b	.L373
 6246              	.L399:
3164:../../Source/Kernel/rme_kernel.c **** 
3165:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
3166:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)<0)
 6247              		.loc 1 3166 8 is_stmt 1
 6248 0428 18301BE5 		ldr	r3, [fp, #-24]
 6249 042c 00308DE5 		str	r3, [sp]
 6250 0430 14309BE5 		ldr	r3, [fp, #20]
 6251 0434 10209BE5 		ldr	r2, [fp, #16]
 6252 0438 0C109BE5 		ldr	r1, [fp, #12]
 6253 043c 08009BE5 		ldr	r0, [fp, #8]
 6254 0440 FEFFFFEB 		bl	__RME_Pgt_Check
3167:../../Source/Kernel/rme_kernel.c ****     {
3168:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3169:../../Source/Kernel/rme_kernel.c **** 
3170:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3171:../../Source/Kernel/rme_kernel.c ****     }
3172:../../Source/Kernel/rme_kernel.c ****     else
3173:../../Source/Kernel/rme_kernel.c ****     {
3174:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3175:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 167


3176:../../Source/Kernel/rme_kernel.c ****     }
3177:../../Source/Kernel/rme_kernel.c **** 
3178:../../Source/Kernel/rme_kernel.c ****     /* Check if the start address is properly aligned to the total order of the page table */
3179:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 6255              		.loc 1 3179 14
 6256 0444 10209BE5 		ldr	r2, [fp, #16]
 6257 0448 14309BE5 		ldr	r3, [fp, #20]
 6258 044c 033082E0 		add	r3, r2, r3
 6259 0450 203063E2 		rsb	r3, r3, #32
 6260 0454 0020E0E3 		mvn	r2, #0
 6261 0458 3223A0E1 		lsr	r2, r2, r3
 6262              		.loc 1 3179 13
 6263 045c 08309BE5 		ldr	r3, [fp, #8]
 6264 0460 023003E0 		and	r3, r3, r2
 6265              		.loc 1 3179 7
 6266 0464 000053E3 		cmp	r3, #0
 6267 0468 0100000A 		beq	.L400
3180:../../Source/Kernel/rme_kernel.c ****     {
3181:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3182:../../Source/Kernel/rme_kernel.c **** 
3183:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 6268              		.loc 1 3183 16
 6269 046c 6630E0E3 		mvn	r3, #102
 6270 0470 460000EA 		b	.L373
 6271              	.L400:
3184:../../Source/Kernel/rme_kernel.c ****     }
3185:../../Source/Kernel/rme_kernel.c ****     else
3186:../../Source/Kernel/rme_kernel.c ****     {
3187:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3188:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3189:../../Source/Kernel/rme_kernel.c ****     }
3190:../../Source/Kernel/rme_kernel.c **** 
3191:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3192:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 6272              		.loc 1 3192 5
 6273 0474 0C301BE5 		ldr	r3, [fp, #-12]
 6274 0478 142093E5 		ldr	r2, [r3, #20]
 6275 047c 2C301BE5 		ldr	r3, [fp, #-44]
 6276 0480 030052E1 		cmp	r2, r3
 6277 0484 0100008A 		bhi	.L401
 6278              		.loc 1 3192 5 is_stmt 0 discriminator 1
 6279 0488 0230E0E3 		mvn	r3, #2
 6280              		.loc 1 3192 5
 6281 048c 3F0000EA 		b	.L373
 6282              	.L401:
 6283              		.loc 1 3192 5 discriminator 2
 6284 0490 2C301BE5 		ldr	r3, [fp, #-44]
 6285 0494 8322A0E1 		lsl	r2, r3, #5
 6286 0498 0C301BE5 		ldr	r3, [fp, #-12]
 6287 049c 0C3093E5 		ldr	r3, [r3, #12]
 6288 04a0 033082E0 		add	r3, r2, r3
 6289 04a4 1C300BE5 		str	r3, [fp, #-28]
3193:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
3194:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 6290              		.loc 1 3194 5 is_stmt 1
 6291 04a8 1C301BE5 		ldr	r3, [fp, #-28]
 6292 04ac 0128A0E3 		mov	r2, #65536
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 168


 6293 04b0 0010A0E3 		mov	r1, #0
 6294 04b4 0300A0E1 		mov	r0, r3
 6295 04b8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6296 04bc 0030A0E1 		mov	r3, r0
 6297              		.loc 1 3194 5 is_stmt 0 discriminator 1
 6298 04c0 000053E3 		cmp	r3, #0
 6299 04c4 0100001A 		bne	.L402
 6300 04c8 0430E0E3 		mvn	r3, #4
 6301              		.loc 1 3194 5
 6302 04cc 2F0000EA 		b	.L373
 6303              	.L402:
 6304              		.loc 1 3194 5 discriminator 2
 6305 04d0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6306 04d4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6307 04d8 002093E5 		ldr	r2, [r3]
 6308 04dc 1C301BE5 		ldr	r3, [fp, #-28]
 6309 04e0 102083E5 		str	r2, [r3, #16]
3195:../../Source/Kernel/rme_kernel.c **** 
3196:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
3197:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Table_Size)!=0)
 6310              		.loc 1 3197 8 is_stmt 1
 6311 04e4 10101BE5 		ldr	r1, [fp, #-16]
 6312 04e8 18001BE5 		ldr	r0, [fp, #-24]
 6313 04ec FEFFFFEB 		bl	_RME_Kot_Mark
 6314 04f0 0030A0E1 		mov	r3, r0
 6315              		.loc 1 3197 7 discriminator 1
 6316 04f4 000053E3 		cmp	r3, #0
 6317 04f8 0500000A 		beq	.L403
3198:../../Source/Kernel/rme_kernel.c ****     {
3199:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3200:../../Source/Kernel/rme_kernel.c **** 
3201:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 6318              		.loc 1 3201 9
 6319 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 6320 0500 0010A0E3 		mov	r1, #0
 6321 0504 0300A0E1 		mov	r0, r3
 6322 0508 FEFFFFEB 		bl	__RME_A7A_Write_Release
3202:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 6323              		.loc 1 3202 16
 6324 050c 0330E0E3 		mvn	r3, #3
 6325 0510 1E0000EA 		b	.L373
 6326              	.L403:
3203:../../Source/Kernel/rme_kernel.c ****     }
3204:../../Source/Kernel/rme_kernel.c ****     else
3205:../../Source/Kernel/rme_kernel.c ****     {
3206:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3207:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3208:../../Source/Kernel/rme_kernel.c ****     }
3209:../../Source/Kernel/rme_kernel.c ****     
3210:../../Source/Kernel/rme_kernel.c ****     /* Header init */
3211:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 6327              		.loc 1 3211 27
 6328 0514 1C301BE5 		ldr	r3, [fp, #-28]
 6329 0518 0020A0E3 		mov	r2, #0
 6330 051c 042083E5 		str	r2, [r3, #4]
3212:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 6331              		.loc 1 3212 25
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 169


 6332 0520 1C301BE5 		ldr	r3, [fp, #-28]
 6333 0524 18201BE5 		ldr	r2, [fp, #-24]
 6334 0528 0C2083E5 		str	r2, [r3, #12]
3213:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ALL;
 6335              		.loc 1 3213 23
 6336 052c 1C201BE5 		ldr	r2, [fp, #-28]
 6337 0530 FF30A0E3 		mov	r3, #255
 6338 0534 F03F4FE3 		movt	r3, 65520
 6339 0538 083082E5 		str	r3, [r2, #8]
3214:../../Source/Kernel/rme_kernel.c ****     
3215:../../Source/Kernel/rme_kernel.c ****     /* Info init */
3216:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 6340              		.loc 1 3216 23
 6341 053c 08209BE5 		ldr	r2, [fp, #8]
 6342 0540 0C309BE5 		ldr	r3, [fp, #12]
 6343 0544 032082E1 		orr	r2, r2, r3
 6344              		.loc 1 3216 18
 6345 0548 1C301BE5 		ldr	r3, [fp, #-28]
 6346 054c 182083E5 		str	r2, [r3, #24]
3217:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 6347              		.loc 1 3217 20
 6348 0550 10309BE5 		ldr	r3, [fp, #16]
 6349 0554 0328A0E1 		lsl	r2, r3, #16
 6350 0558 14309BE5 		ldr	r3, [fp, #20]
 6351 055c 032082E1 		orr	r2, r2, r3
 6352              		.loc 1 3217 19
 6353 0560 1C301BE5 		ldr	r3, [fp, #-28]
 6354 0564 142083E5 		str	r2, [r3, #20]
3218:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 6355              		.loc 1 3218 18
 6356 0568 1C301BE5 		ldr	r3, [fp, #-28]
 6357 056c 0020A0E3 		mov	r2, #0
 6358 0570 1C2083E5 		str	r2, [r3, #28]
3219:../../Source/Kernel/rme_kernel.c ****     
3220:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
3221:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 6359              		.loc 1 3221 8
 6360 0574 1C001BE5 		ldr	r0, [fp, #-28]
 6361 0578 FEFFFFEB 		bl	__RME_Pgt_Init
3222:../../Source/Kernel/rme_kernel.c ****     {
3223:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3224:../../Source/Kernel/rme_kernel.c **** 
3225:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
3226:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr,Table_Size)==0);
3227:../../Source/Kernel/rme_kernel.c ****         
3228:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
3229:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
3230:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3231:../../Source/Kernel/rme_kernel.c ****     }
3232:../../Source/Kernel/rme_kernel.c ****     else
3233:../../Source/Kernel/rme_kernel.c ****     {
3234:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3235:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3236:../../Source/Kernel/rme_kernel.c ****     }
3237:../../Source/Kernel/rme_kernel.c **** 
3238:../../Source/Kernel/rme_kernel.c ****     /* Creation complete */
3239:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 170


 6362              		.loc 1 3239 5
 6363 057c 1C301BE5 		ldr	r3, [fp, #-28]
 6364 0580 0113A0E3 		mov	r1, #67108864
 6365 0584 0300A0E1 		mov	r0, r3
 6366 0588 FEFFFFEB 		bl	__RME_A7A_Write_Release
3240:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
3241:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
3242:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
3243:../../Source/Kernel/rme_kernel.c **** 
3244:../../Source/Kernel/rme_kernel.c ****     return 0;
 6367              		.loc 1 3244 12
 6368 058c 0030A0E3 		mov	r3, #0
 6369              	.L373:
3245:../../Source/Kernel/rme_kernel.c **** }
 6370              		.loc 1 3245 1
 6371 0590 0300A0E1 		mov	r0, r3
 6372 0594 04D04BE2 		sub	sp, fp, #4
 6373              		.cfi_def_cfa 13, 8
 6374              		@ sp needed
 6375 0598 0088BDE8 		pop	{fp, pc}
 6376              		.cfi_endproc
 6377              	.LFE32:
 6379              		.section	.text._RME_Pgt_Del,"ax",%progbits
 6380              		.align	2
 6381              		.syntax unified
 6382              		.arm
 6384              	_RME_Pgt_Del:
 6385              	.LFB33:
3246:../../Source/Kernel/rme_kernel.c **** #endif
3247:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Crt *************************************************/
3248:../../Source/Kernel/rme_kernel.c **** 
3249:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Del ******************************************************
3250:../../Source/Kernel/rme_kernel.c **** Description : Delete a page table.
3251:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3252:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
3253:../../Source/Kernel/rme_kernel.c ****                                   the cap to new captbl.
3254:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3255:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3256:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3257:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3258:../../Source/Kernel/rme_kernel.c **** Output      : None.
3259:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3260:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3261:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3262:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Del(struct RME_Cap_Cpt* Cpt,
3263:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3264:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
3265:../../Source/Kernel/rme_kernel.c **** {
 6386              		.loc 1 3265 1
 6387              		.cfi_startproc
 6388              		@ args = 0, pretend = 0, frame = 40
 6389              		@ frame_needed = 1, uses_anonymous_args = 0
 6390 0000 00482DE9 		push	{fp, lr}
 6391              		.cfi_def_cfa_offset 8
 6392              		.cfi_offset 11, -8
 6393              		.cfi_offset 14, -4
 6394 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 171


 6395              		.cfi_def_cfa 11, 4
 6396 0008 28D04DE2 		sub	sp, sp, #40
 6397 000c 20000BE5 		str	r0, [fp, #-32]
 6398 0010 24100BE5 		str	r1, [fp, #-36]
 6399 0014 28200BE5 		str	r2, [fp, #-40]
3266:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3267:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Del;
3268:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3269:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
3270:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
3271:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3272:../../Source/Kernel/rme_kernel.c ****     
3273:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3274:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 6400              		.loc 1 3274 5
 6401 0018 24301BE5 		ldr	r3, [fp, #-36]
 6402 001c 803003E2 		and	r3, r3, #128
 6403 0020 000053E3 		cmp	r3, #0
 6404 0024 1C00001A 		bne	.L405
 6405              		.loc 1 3274 5 is_stmt 0 discriminator 1
 6406 0028 20301BE5 		ldr	r3, [fp, #-32]
 6407 002c 142093E5 		ldr	r2, [r3, #20]
 6408 0030 24301BE5 		ldr	r3, [fp, #-36]
 6409 0034 030052E1 		cmp	r2, r3
 6410 0038 0100008A 		bhi	.L406
 6411              		.loc 1 3274 5 discriminator 3
 6412 003c 0230E0E3 		mvn	r3, #2
 6413              		.loc 1 3274 5
 6414 0040 D20000EA 		b	.L407
 6415              	.L406:
 6416              		.loc 1 3274 5 discriminator 4
 6417 0044 24301BE5 		ldr	r3, [fp, #-36]
 6418 0048 8322A0E1 		lsl	r2, r3, #5
 6419 004c 20301BE5 		ldr	r3, [fp, #-32]
 6420 0050 0C3093E5 		ldr	r3, [r3, #12]
 6421 0054 033082E0 		add	r3, r2, r3
 6422 0058 08300BE5 		str	r3, [fp, #-8]
 6423 005c 08301BE5 		ldr	r3, [fp, #-8]
 6424 0060 0300A0E1 		mov	r0, r3
 6425 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6426 0068 10000BE5 		str	r0, [fp, #-16]
 6427              		.loc 1 3274 5 discriminator 1
 6428 006c 10301BE5 		ldr	r3, [fp, #-16]
 6429 0070 FF3803E2 		and	r3, r3, #16711680
 6430 0074 020853E3 		cmp	r3, #131072
 6431 0078 0100001A 		bne	.L408
 6432              		.loc 1 3274 5 discriminator 5
 6433 007c 0830E0E3 		mvn	r3, #8
 6434              		.loc 1 3274 5
 6435 0080 C20000EA 		b	.L407
 6436              	.L408:
 6437              		.loc 1 3274 5 discriminator 6
 6438 0084 10301BE5 		ldr	r3, [fp, #-16]
 6439 0088 233CA0E1 		lsr	r3, r3, #24
 6440 008c 030053E3 		cmp	r3, #3
 6441 0090 3F00000A 		beq	.L409
 6442              		.loc 1 3274 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 172


 6443 0094 0130E0E3 		mvn	r3, #1
 6444              		.loc 1 3274 5
 6445 0098 BC0000EA 		b	.L407
 6446              	.L405:
 6447              		.loc 1 3274 5 discriminator 2
 6448 009c 24301BE5 		ldr	r3, [fp, #-36]
 6449 00a0 2324A0E1 		lsr	r2, r3, #8
 6450 00a4 20301BE5 		ldr	r3, [fp, #-32]
 6451 00a8 143093E5 		ldr	r3, [r3, #20]
 6452 00ac 030052E1 		cmp	r2, r3
 6453 00b0 0100003A 		bcc	.L410
 6454              		.loc 1 3274 5 discriminator 8
 6455 00b4 0230E0E3 		mvn	r3, #2
 6456              		.loc 1 3274 5
 6457 00b8 B40000EA 		b	.L407
 6458              	.L410:
 6459              		.loc 1 3274 5 discriminator 9
 6460 00bc 24301BE5 		ldr	r3, [fp, #-36]
 6461 00c0 2334A0E1 		lsr	r3, r3, #8
 6462 00c4 8322A0E1 		lsl	r2, r3, #5
 6463 00c8 20301BE5 		ldr	r3, [fp, #-32]
 6464 00cc 0C3093E5 		ldr	r3, [r3, #12]
 6465 00d0 033082E0 		add	r3, r2, r3
 6466 00d4 08300BE5 		str	r3, [fp, #-8]
 6467 00d8 08301BE5 		ldr	r3, [fp, #-8]
 6468 00dc 0300A0E1 		mov	r0, r3
 6469 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6470 00e4 10000BE5 		str	r0, [fp, #-16]
 6471              		.loc 1 3274 5 discriminator 1
 6472 00e8 10301BE5 		ldr	r3, [fp, #-16]
 6473 00ec FF3803E2 		and	r3, r3, #16711680
 6474 00f0 020853E3 		cmp	r3, #131072
 6475 00f4 0100001A 		bne	.L411
 6476              		.loc 1 3274 5 discriminator 10
 6477 00f8 0830E0E3 		mvn	r3, #8
 6478              		.loc 1 3274 5
 6479 00fc A30000EA 		b	.L407
 6480              	.L411:
 6481              		.loc 1 3274 5 discriminator 11
 6482 0100 10301BE5 		ldr	r3, [fp, #-16]
 6483 0104 233CA0E1 		lsr	r3, r3, #24
 6484 0108 030053E3 		cmp	r3, #3
 6485 010c 0100000A 		beq	.L412
 6486              		.loc 1 3274 5 discriminator 12
 6487 0110 0130E0E3 		mvn	r3, #1
 6488              		.loc 1 3274 5
 6489 0114 9D0000EA 		b	.L407
 6490              	.L412:
 6491              		.loc 1 3274 5 discriminator 13
 6492 0118 24301BE5 		ldr	r3, [fp, #-36]
 6493 011c 7F2003E2 		and	r2, r3, #127
 6494 0120 08301BE5 		ldr	r3, [fp, #-8]
 6495 0124 143093E5 		ldr	r3, [r3, #20]
 6496 0128 030052E1 		cmp	r2, r3
 6497 012c 0100003A 		bcc	.L413
 6498              		.loc 1 3274 5 discriminator 14
 6499 0130 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 173


 6500              		.loc 1 3274 5
 6501 0134 950000EA 		b	.L407
 6502              	.L413:
 6503              		.loc 1 3274 5 discriminator 15
 6504 0138 24301BE5 		ldr	r3, [fp, #-36]
 6505 013c 7F3003E2 		and	r3, r3, #127
 6506 0140 8322A0E1 		lsl	r2, r3, #5
 6507 0144 08301BE5 		ldr	r3, [fp, #-8]
 6508 0148 0C3093E5 		ldr	r3, [r3, #12]
 6509 014c 033082E0 		add	r3, r2, r3
 6510 0150 08300BE5 		str	r3, [fp, #-8]
 6511 0154 08301BE5 		ldr	r3, [fp, #-8]
 6512 0158 0300A0E1 		mov	r0, r3
 6513 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6514 0160 10000BE5 		str	r0, [fp, #-16]
 6515              		.loc 1 3274 5 discriminator 1
 6516 0164 10301BE5 		ldr	r3, [fp, #-16]
 6517 0168 FF3803E2 		and	r3, r3, #16711680
 6518 016c 020853E3 		cmp	r3, #131072
 6519 0170 0100001A 		bne	.L414
 6520              		.loc 1 3274 5 discriminator 16
 6521 0174 0830E0E3 		mvn	r3, #8
 6522              		.loc 1 3274 5
 6523 0178 840000EA 		b	.L407
 6524              	.L414:
 6525              		.loc 1 3274 5 discriminator 17
 6526 017c 10301BE5 		ldr	r3, [fp, #-16]
 6527 0180 233CA0E1 		lsr	r3, r3, #24
 6528 0184 030053E3 		cmp	r3, #3
 6529 0188 0100000A 		beq	.L409
 6530              		.loc 1 3274 5 discriminator 18
 6531 018c 0130E0E3 		mvn	r3, #1
 6532              		.loc 1 3274 5
 6533 0190 7E0000EA 		b	.L407
 6534              	.L409:
3275:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3276:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3277:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 6535              		.loc 1 3277 5 is_stmt 1
 6536 0194 08301BE5 		ldr	r3, [fp, #-8]
 6537 0198 083093E5 		ldr	r3, [r3, #8]
 6538 019c 023003E2 		and	r3, r3, #2
 6539 01a0 000053E3 		cmp	r3, #0
 6540 01a4 0100001A 		bne	.L415
 6541              		.loc 1 3277 5 is_stmt 0 discriminator 1
 6542 01a8 0630E0E3 		mvn	r3, #6
 6543              		.loc 1 3277 5
 6544 01ac 770000EA 		b	.L407
 6545              	.L415:
3278:../../Source/Kernel/rme_kernel.c ****     
3279:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3280:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Del);
 6546              		.loc 1 3280 5 is_stmt 1
 6547 01b0 08301BE5 		ldr	r3, [fp, #-8]
 6548 01b4 142093E5 		ldr	r2, [r3, #20]
 6549 01b8 28301BE5 		ldr	r3, [fp, #-40]
 6550 01bc 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 174


 6551 01c0 0100008A 		bhi	.L416
 6552              		.loc 1 3280 5 is_stmt 0 discriminator 1
 6553 01c4 0230E0E3 		mvn	r3, #2
 6554              		.loc 1 3280 5
 6555 01c8 700000EA 		b	.L407
 6556              	.L416:
 6557              		.loc 1 3280 5 discriminator 2
 6558 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6559 01d0 8322A0E1 		lsl	r2, r3, #5
 6560 01d4 08301BE5 		ldr	r3, [fp, #-8]
 6561 01d8 0C3093E5 		ldr	r3, [r3, #12]
 6562 01dc 033082E0 		add	r3, r2, r3
 6563 01e0 14300BE5 		str	r3, [fp, #-20]
3281:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
3282:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Pgt_Del,Type_Stat,RME_CAP_TYPE_PGT);
 6564              		.loc 1 3282 5 is_stmt 1
 6565 01e4 14301BE5 		ldr	r3, [fp, #-20]
 6566 01e8 0300A0E1 		mov	r0, r3
 6567 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6568 01f0 10000BE5 		str	r0, [fp, #-16]
 6569              		.loc 1 3282 5 is_stmt 0 discriminator 1
 6570 01f4 10301BE5 		ldr	r3, [fp, #-16]
 6571 01f8 FF3803E2 		and	r3, r3, #16711680
 6572 01fc 020853E3 		cmp	r3, #131072
 6573 0200 0100000A 		beq	.L417
 6574 0204 0830E0E3 		mvn	r3, #8
 6575              		.loc 1 3282 5
 6576 0208 600000EA 		b	.L407
 6577              	.L417:
 6578              		.loc 1 3282 5 discriminator 2
 6579 020c 10301BE5 		ldr	r3, [fp, #-16]
 6580 0210 233CA0E1 		lsr	r3, r3, #24
 6581 0214 040053E3 		cmp	r3, #4
 6582 0218 0100000A 		beq	.L418
 6583              		.loc 1 3282 5 discriminator 3
 6584 021c 0130E0E3 		mvn	r3, #1
 6585              		.loc 1 3282 5
 6586 0220 5A0000EA 		b	.L407
 6587              	.L418:
 6588              		.loc 1 3282 5 discriminator 4
 6589 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6590 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6591 022c 002093E5 		ldr	r2, [r3]
 6592 0230 14301BE5 		ldr	r3, [fp, #-20]
 6593 0234 103093E5 		ldr	r3, [r3, #16]
 6594 0238 0310A0E1 		mov	r1, r3
 6595 023c 0200A0E1 		mov	r0, r2
 6596 0240 FEFFFFEB 		bl	_RME_Diff
 6597 0244 0030A0E1 		mov	r3, r0
 6598              		.loc 1 3282 5 discriminator 1
 6599 0248 0A0053E3 		cmp	r3, #10
 6600 024c 0100008A 		bhi	.L419
 6601              		.loc 1 3282 5 discriminator 5
 6602 0250 0730E0E3 		mvn	r3, #7
 6603              		.loc 1 3282 5
 6604 0254 4D0000EA 		b	.L407
 6605              	.L419:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 175


 6606              		.loc 1 3282 5 discriminator 6
 6607 0258 14301BE5 		ldr	r3, [fp, #-20]
 6608 025c 043093E5 		ldr	r3, [r3, #4]
 6609 0260 000053E3 		cmp	r3, #0
 6610 0264 0B00000A 		beq	.L420
 6611              		.loc 1 3282 5 discriminator 7
 6612 0268 10301BE5 		ldr	r3, [fp, #-16]
 6613 026c 7330FFE6 		uxth	r3, r3
 6614 0270 000053E3 		cmp	r3, #0
 6615 0274 0500001A 		bne	.L421
 6616              		.loc 1 3282 5 discriminator 9
 6617 0278 14001BE5 		ldr	r0, [fp, #-20]
 6618 027c 10301BE5 		ldr	r3, [fp, #-16]
 6619 0280 FF38C3E3 		bic	r3, r3, #16711680
 6620 0284 0320A0E1 		mov	r2, r3
 6621 0288 10101BE5 		ldr	r1, [fp, #-16]
 6622 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6623              	.L421:
 6624              		.loc 1 3282 5 discriminator 11
 6625 0290 0530E0E3 		mvn	r3, #5
 6626              		.loc 1 3282 5
 6627 0294 3D0000EA 		b	.L407
 6628              	.L420:
 6629              		.loc 1 3282 5 discriminator 8
 6630 0298 10301BE5 		ldr	r3, [fp, #-16]
 6631 029c 7330FFE6 		uxth	r3, r3
 6632 02a0 000053E3 		cmp	r3, #0
 6633 02a4 0800000A 		beq	.L422
 6634              		.loc 1 3282 5 discriminator 12
 6635 02a8 003000E3 		movw	r3, #:lower16:.LC2
 6636 02ac 003040E3 		movt	r3, #:upper16:.LC2
 6637 02b0 002000E3 		movw	r2, #:lower16:.LC3
 6638 02b4 002040E3 		movt	r2, #:upper16:.LC3
 6639 02b8 D21C00E3 		movw	r1, #3282
 6640 02bc 000000E3 		movw	r0, #:lower16:.LC4
 6641 02c0 000040E3 		movt	r0, #:upper16:.LC4
 6642 02c4 FEFFFFEB 		bl	RME_Log
 6643              	.L423:
 6644              		.loc 1 3282 5
 6645 02c8 FEFFFFEA 		b	.L423
 6646              	.L422:
3283:../../Source/Kernel/rme_kernel.c ****     
3284:../../Source/Kernel/rme_kernel.c ****     /* Hardware related deletion check passed down to the HAL. The driver should make
3285:../../Source/Kernel/rme_kernel.c ****      * sure that it does not reference any lower level tables. If the driver layer does
3286:../../Source/Kernel/rme_kernel.c ****      * not conform to this, the deletion of page table is not guaranteed to main kernel
3287:../../Source/Kernel/rme_kernel.c ****      * consistency, and such consistency must be maintained by the user-level. It is 
3288:../../Source/Kernel/rme_kernel.c ****      * recommended that the driver layer enforce such consistency. */
3289:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Del_Check(Pgt_Del)<0)
 6647              		.loc 1 3289 8 is_stmt 1
 6648 02cc 14001BE5 		ldr	r0, [fp, #-20]
 6649 02d0 FEFFFFEB 		bl	__RME_Pgt_Del_Check
3290:../../Source/Kernel/rme_kernel.c ****     {
3291:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3292:../../Source/Kernel/rme_kernel.c **** 
3293:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Pgt_Del,Type_Stat);
3294:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3295:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 176


3296:../../Source/Kernel/rme_kernel.c ****     else
3297:../../Source/Kernel/rme_kernel.c ****     {
3298:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3299:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3300:../../Source/Kernel/rme_kernel.c ****     }
3301:../../Source/Kernel/rme_kernel.c ****     
3302:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
3303:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Pgt_Del,rme_ptr_t);
 6650              		.loc 1 3303 11
 6651 02d4 14301BE5 		ldr	r3, [fp, #-20]
 6652 02d8 0C3093E5 		ldr	r3, [r3, #12]
 6653 02dc 18300BE5 		str	r3, [fp, #-24]
3304:../../Source/Kernel/rme_kernel.c ****     if(((Pgt_Del->Base)&RME_PGT_TOP)!=0U)
 6654              		.loc 1 3304 17
 6655 02e0 14301BE5 		ldr	r3, [fp, #-20]
 6656 02e4 183093E5 		ldr	r3, [r3, #24]
 6657              		.loc 1 3304 24
 6658 02e8 013003E2 		and	r3, r3, #1
 6659              		.loc 1 3304 7
 6660 02ec 000053E3 		cmp	r3, #0
 6661 02f0 0600000A 		beq	.L424
3305:../../Source/Kernel/rme_kernel.c ****     {
3306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3307:../../Source/Kernel/rme_kernel.c **** 
3308:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(RME_PGT_NMORD(Pgt_Del->Order));
 6662              		.loc 1 3308 20
 6663 02f4 14301BE5 		ldr	r3, [fp, #-20]
 6664 02f8 143093E5 		ldr	r3, [r3, #20]
 6665 02fc 7330FFE6 		uxth	r3, r3
 6666              		.loc 1 3308 19
 6667 0300 0420A0E3 		mov	r2, #4
 6668 0304 1233A0E1 		lsl	r3, r2, r3
 6669 0308 0C300BE5 		str	r3, [fp, #-12]
 6670 030c 050000EA 		b	.L425
 6671              	.L424:
3309:../../Source/Kernel/rme_kernel.c ****     }
3310:../../Source/Kernel/rme_kernel.c ****     else
3311:../../Source/Kernel/rme_kernel.c ****     {
3312:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3313:../../Source/Kernel/rme_kernel.c **** 
3314:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(RME_PGT_NMORD(Pgt_Del->Order));
 6672              		.loc 1 3314 20
 6673 0310 14301BE5 		ldr	r3, [fp, #-20]
 6674 0314 143093E5 		ldr	r3, [r3, #20]
 6675 0318 7330FFE6 		uxth	r3, r3
 6676              		.loc 1 3314 19
 6677 031c 0420A0E3 		mov	r2, #4
 6678 0320 1233A0E1 		lsl	r3, r2, r3
 6679 0324 0C300BE5 		str	r3, [fp, #-12]
 6680              	.L425:
3315:../../Source/Kernel/rme_kernel.c ****     }
3316:../../Source/Kernel/rme_kernel.c ****     
3317:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
3318:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Pgt_Del,Type_Stat);
 6681              		.loc 1 3318 5
 6682 0328 14301BE5 		ldr	r3, [fp, #-20]
 6683 032c 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 177


 6684 0330 10101BE5 		ldr	r1, [fp, #-16]
 6685 0334 0300A0E1 		mov	r0, r3
 6686 0338 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6687 033c 0030A0E1 		mov	r3, r0
 6688              		.loc 1 3318 5 is_stmt 0 discriminator 1
 6689 0340 000053E3 		cmp	r3, #0
 6690 0344 0100001A 		bne	.L426
 6691 0348 0030E0E3 		mvn	r3, #0
 6692              		.loc 1 3318 5
 6693 034c 0F0000EA 		b	.L407
 6694              	.L426:
3319:../../Source/Kernel/rme_kernel.c **** 
3320:../../Source/Kernel/rme_kernel.c ****     /* Try to erase the area - This must be successful */
3321:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Table_Size)==0);
 6695              		.loc 1 3321 5 is_stmt 1
 6696 0350 0C101BE5 		ldr	r1, [fp, #-12]
 6697 0354 18001BE5 		ldr	r0, [fp, #-24]
 6698 0358 FEFFFFEB 		bl	_RME_Kot_Erase
 6699 035c 0030A0E1 		mov	r3, r0
 6700              		.loc 1 3321 5 is_stmt 0 discriminator 1
 6701 0360 000053E3 		cmp	r3, #0
 6702 0364 0800000A 		beq	.L427
 6703 0368 003000E3 		movw	r3, #:lower16:.LC2
 6704 036c 003040E3 		movt	r3, #:upper16:.LC2
 6705 0370 002000E3 		movw	r2, #:lower16:.LC3
 6706 0374 002040E3 		movt	r2, #:upper16:.LC3
 6707 0378 F91C00E3 		movw	r1, #3321
 6708 037c 000000E3 		movw	r0, #:lower16:.LC4
 6709 0380 000040E3 		movt	r0, #:upper16:.LC4
 6710 0384 FEFFFFEB 		bl	RME_Log
 6711              	.L428:
 6712              		.loc 1 3321 5
 6713 0388 FEFFFFEA 		b	.L428
 6714              	.L427:
3322:../../Source/Kernel/rme_kernel.c **** 
3323:../../Source/Kernel/rme_kernel.c ****     return 0;
 6715              		.loc 1 3323 12 is_stmt 1
 6716 038c 0030A0E3 		mov	r3, #0
 6717              	.L407:
3324:../../Source/Kernel/rme_kernel.c **** }
 6718              		.loc 1 3324 1
 6719 0390 0300A0E1 		mov	r0, r3
 6720 0394 04D04BE2 		sub	sp, fp, #4
 6721              		.cfi_def_cfa 13, 8
 6722              		@ sp needed
 6723 0398 0088BDE8 		pop	{fp, pc}
 6724              		.cfi_endproc
 6725              	.LFE33:
 6727              		.section	.text._RME_Pgt_Add,"ax",%progbits
 6728              		.align	2
 6729              		.syntax unified
 6730              		.arm
 6732              	_RME_Pgt_Add:
 6733              	.LFB34:
3325:../../Source/Kernel/rme_kernel.c **** #endif
3326:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Del *************************************************/
3327:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 178


3328:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Add ******************************************************
3329:../../Source/Kernel/rme_kernel.c **** Description : Delegate a page from one page table to another. This is the only
3330:../../Source/Kernel/rme_kernel.c ****               way to add pages to new page tables after the system boots.
3331:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3332:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Dst - The capability to the destination page
3333:../../Source/Kernel/rme_kernel.c ****                                       directory.
3334:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3335:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate to in the
3336:../../Source/Kernel/rme_kernel.c ****                                   destination page directory.
3337:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Dst - The page access permission for the
3338:../../Source/Kernel/rme_kernel.c ****                                    destination page.
3339:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Src - The capability to the source page 
3340:../../Source/Kernel/rme_kernel.c ****                                       directory.
3341:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3342:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate from in the source
3343:../../Source/Kernel/rme_kernel.c ****                                   page directory.
3344:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Index - The index of the physical address frame to
3345:../../Source/Kernel/rme_kernel.c ****                                 delegate. For example, if the destination
3346:../../Source/Kernel/rme_kernel.c ****                                 directory's page size is 1/4 of that of the
3347:../../Source/Kernel/rme_kernel.c ****                                 source directory, index=0 will delegate the
3348:../../Source/Kernel/rme_kernel.c ****                                 first 1/4, index=1 will delegate the second
3349:../../Source/Kernel/rme_kernel.c ****                                 1/4, index=2 will delegate the third 1/4, and
3350:../../Source/Kernel/rme_kernel.c ****                                 index=3 will delegate the last 1/4.
3351:../../Source/Kernel/rme_kernel.c ****                                 All other index values are illegal.
3352:../../Source/Kernel/rme_kernel.c **** Output      : None.
3353:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3354:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3355:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3356:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Add(struct RME_Cap_Cpt* Cpt, 
3357:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Dst,
3358:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Dst,
3359:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Dst,
3360:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Src,
3361:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Src,
3362:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Index)
3363:../../Source/Kernel/rme_kernel.c **** {
 6734              		.loc 1 3363 1
 6735              		.cfi_startproc
 6736              		@ args = 12, pretend = 0, frame = 48
 6737              		@ frame_needed = 1, uses_anonymous_args = 0
 6738 0000 00482DE9 		push	{fp, lr}
 6739              		.cfi_def_cfa_offset 8
 6740              		.cfi_offset 11, -8
 6741              		.cfi_offset 14, -4
 6742 0004 04B08DE2 		add	fp, sp, #4
 6743              		.cfi_def_cfa 11, 4
 6744 0008 30D04DE2 		sub	sp, sp, #48
 6745 000c 28000BE5 		str	r0, [fp, #-40]
 6746 0010 2C100BE5 		str	r1, [fp, #-44]
 6747 0014 30200BE5 		str	r2, [fp, #-48]
 6748 0018 34300BE5 		str	r3, [fp, #-52]
3364:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Src;
3365:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Dst;
3366:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Dst;
3367:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Src;
3368:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag_Src;
3369:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 179


3370:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Src;
3371:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Dst;
3372:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\n Cap_Pgt_Dst ");
3373:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Cap_Pgt_Dst);
3374:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Pos_Dst ");
3375:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pos_Dst);
3376:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Flag_Dst ");
3377:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Flag_Dst);
3378:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Cap_Pgt_Src ");
3379:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Cap_Pgt_Src);
3380:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Pos_Src ");
3381:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pos_Src);
3382:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n Index ");
3383:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Index);*/
3384:../../Source/Kernel/rme_kernel.c **** 
3385:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3386:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Dst,RME_CAP_TYPE_PGT,
 6749              		.loc 1 3386 5
 6750 001c 2C301BE5 		ldr	r3, [fp, #-44]
 6751 0020 803003E2 		and	r3, r3, #128
 6752 0024 000053E3 		cmp	r3, #0
 6753 0028 1C00001A 		bne	.L430
 6754              		.loc 1 3386 5 is_stmt 0 discriminator 1
 6755 002c 28301BE5 		ldr	r3, [fp, #-40]
 6756 0030 142093E5 		ldr	r2, [r3, #20]
 6757 0034 2C301BE5 		ldr	r3, [fp, #-44]
 6758 0038 030052E1 		cmp	r2, r3
 6759 003c 0100008A 		bhi	.L431
 6760              		.loc 1 3386 5 discriminator 3
 6761 0040 0230E0E3 		mvn	r3, #2
 6762              		.loc 1 3386 5
 6763 0044 260100EA 		b	.L460
 6764              	.L431:
 6765              		.loc 1 3386 5 discriminator 4
 6766 0048 2C301BE5 		ldr	r3, [fp, #-44]
 6767 004c 8322A0E1 		lsl	r2, r3, #5
 6768 0050 28301BE5 		ldr	r3, [fp, #-40]
 6769 0054 0C3093E5 		ldr	r3, [r3, #12]
 6770 0058 033082E0 		add	r3, r2, r3
 6771 005c 0C300BE5 		str	r3, [fp, #-12]
 6772 0060 0C301BE5 		ldr	r3, [fp, #-12]
 6773 0064 0300A0E1 		mov	r0, r3
 6774 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6775 006c 14000BE5 		str	r0, [fp, #-20]
 6776              		.loc 1 3386 5 discriminator 1
 6777 0070 14301BE5 		ldr	r3, [fp, #-20]
 6778 0074 FF3803E2 		and	r3, r3, #16711680
 6779 0078 020853E3 		cmp	r3, #131072
 6780 007c 0100001A 		bne	.L433
 6781              		.loc 1 3386 5 discriminator 5
 6782 0080 0830E0E3 		mvn	r3, #8
 6783              		.loc 1 3386 5
 6784 0084 160100EA 		b	.L460
 6785              	.L433:
 6786              		.loc 1 3386 5 discriminator 6
 6787 0088 14301BE5 		ldr	r3, [fp, #-20]
 6788 008c 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 180


 6789 0090 040053E3 		cmp	r3, #4
 6790 0094 3F00000A 		beq	.L434
 6791              		.loc 1 3386 5 discriminator 7
 6792 0098 0130E0E3 		mvn	r3, #1
 6793              		.loc 1 3386 5
 6794 009c 100100EA 		b	.L460
 6795              	.L430:
 6796              		.loc 1 3386 5 discriminator 2
 6797 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 6798 00a4 2324A0E1 		lsr	r2, r3, #8
 6799 00a8 28301BE5 		ldr	r3, [fp, #-40]
 6800 00ac 143093E5 		ldr	r3, [r3, #20]
 6801 00b0 030052E1 		cmp	r2, r3
 6802 00b4 0100003A 		bcc	.L435
 6803              		.loc 1 3386 5 discriminator 8
 6804 00b8 0230E0E3 		mvn	r3, #2
 6805              		.loc 1 3386 5
 6806 00bc 080100EA 		b	.L460
 6807              	.L435:
 6808              		.loc 1 3386 5 discriminator 9
 6809 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 6810 00c4 2334A0E1 		lsr	r3, r3, #8
 6811 00c8 8322A0E1 		lsl	r2, r3, #5
 6812 00cc 28301BE5 		ldr	r3, [fp, #-40]
 6813 00d0 0C3093E5 		ldr	r3, [r3, #12]
 6814 00d4 033082E0 		add	r3, r2, r3
 6815 00d8 0C300BE5 		str	r3, [fp, #-12]
 6816 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 6817 00e0 0300A0E1 		mov	r0, r3
 6818 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6819 00e8 14000BE5 		str	r0, [fp, #-20]
 6820              		.loc 1 3386 5 discriminator 1
 6821 00ec 14301BE5 		ldr	r3, [fp, #-20]
 6822 00f0 FF3803E2 		and	r3, r3, #16711680
 6823 00f4 020853E3 		cmp	r3, #131072
 6824 00f8 0100001A 		bne	.L436
 6825              		.loc 1 3386 5 discriminator 10
 6826 00fc 0830E0E3 		mvn	r3, #8
 6827              		.loc 1 3386 5
 6828 0100 F70000EA 		b	.L460
 6829              	.L436:
 6830              		.loc 1 3386 5 discriminator 11
 6831 0104 14301BE5 		ldr	r3, [fp, #-20]
 6832 0108 233CA0E1 		lsr	r3, r3, #24
 6833 010c 030053E3 		cmp	r3, #3
 6834 0110 0100000A 		beq	.L437
 6835              		.loc 1 3386 5 discriminator 12
 6836 0114 0130E0E3 		mvn	r3, #1
 6837              		.loc 1 3386 5
 6838 0118 F10000EA 		b	.L460
 6839              	.L437:
 6840              		.loc 1 3386 5 discriminator 13
 6841 011c 2C301BE5 		ldr	r3, [fp, #-44]
 6842 0120 7F2003E2 		and	r2, r3, #127
 6843 0124 0C301BE5 		ldr	r3, [fp, #-12]
 6844 0128 143093E5 		ldr	r3, [r3, #20]
 6845 012c 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 181


 6846 0130 0100003A 		bcc	.L438
 6847              		.loc 1 3386 5 discriminator 14
 6848 0134 0230E0E3 		mvn	r3, #2
 6849              		.loc 1 3386 5
 6850 0138 E90000EA 		b	.L460
 6851              	.L438:
 6852              		.loc 1 3386 5 discriminator 15
 6853 013c 2C301BE5 		ldr	r3, [fp, #-44]
 6854 0140 7F3003E2 		and	r3, r3, #127
 6855 0144 8322A0E1 		lsl	r2, r3, #5
 6856 0148 0C301BE5 		ldr	r3, [fp, #-12]
 6857 014c 0C3093E5 		ldr	r3, [r3, #12]
 6858 0150 033082E0 		add	r3, r2, r3
 6859 0154 0C300BE5 		str	r3, [fp, #-12]
 6860 0158 0C301BE5 		ldr	r3, [fp, #-12]
 6861 015c 0300A0E1 		mov	r0, r3
 6862 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6863 0164 14000BE5 		str	r0, [fp, #-20]
 6864              		.loc 1 3386 5 discriminator 1
 6865 0168 14301BE5 		ldr	r3, [fp, #-20]
 6866 016c FF3803E2 		and	r3, r3, #16711680
 6867 0170 020853E3 		cmp	r3, #131072
 6868 0174 0100001A 		bne	.L439
 6869              		.loc 1 3386 5 discriminator 16
 6870 0178 0830E0E3 		mvn	r3, #8
 6871              		.loc 1 3386 5
 6872 017c D80000EA 		b	.L460
 6873              	.L439:
 6874              		.loc 1 3386 5 discriminator 17
 6875 0180 14301BE5 		ldr	r3, [fp, #-20]
 6876 0184 233CA0E1 		lsr	r3, r3, #24
 6877 0188 040053E3 		cmp	r3, #4
 6878 018c 0100000A 		beq	.L434
 6879              		.loc 1 3386 5 discriminator 18
 6880 0190 0130E0E3 		mvn	r3, #1
 6881              		.loc 1 3386 5
 6882 0194 D20000EA 		b	.L460
 6883              	.L434:
3387:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Dst,Type_Stat);
3388:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Src,RME_CAP_TYPE_PGT,
 6884              		.loc 1 3388 5 is_stmt 1
 6885 0198 04309BE5 		ldr	r3, [fp, #4]
 6886 019c 803003E2 		and	r3, r3, #128
 6887 01a0 000053E3 		cmp	r3, #0
 6888 01a4 1C00001A 		bne	.L440
 6889              		.loc 1 3388 5 is_stmt 0 discriminator 1
 6890 01a8 28301BE5 		ldr	r3, [fp, #-40]
 6891 01ac 142093E5 		ldr	r2, [r3, #20]
 6892 01b0 04309BE5 		ldr	r3, [fp, #4]
 6893 01b4 030052E1 		cmp	r2, r3
 6894 01b8 0100008A 		bhi	.L441
 6895              		.loc 1 3388 5 discriminator 3
 6896 01bc 0230E0E3 		mvn	r3, #2
 6897              		.loc 1 3388 5
 6898 01c0 C70000EA 		b	.L460
 6899              	.L441:
 6900              		.loc 1 3388 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 182


 6901 01c4 04309BE5 		ldr	r3, [fp, #4]
 6902 01c8 8322A0E1 		lsl	r2, r3, #5
 6903 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6904 01d0 0C3093E5 		ldr	r3, [r3, #12]
 6905 01d4 033082E0 		add	r3, r2, r3
 6906 01d8 08300BE5 		str	r3, [fp, #-8]
 6907 01dc 08301BE5 		ldr	r3, [fp, #-8]
 6908 01e0 0300A0E1 		mov	r0, r3
 6909 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6910 01e8 14000BE5 		str	r0, [fp, #-20]
 6911              		.loc 1 3388 5 discriminator 1
 6912 01ec 14301BE5 		ldr	r3, [fp, #-20]
 6913 01f0 FF3803E2 		and	r3, r3, #16711680
 6914 01f4 020853E3 		cmp	r3, #131072
 6915 01f8 0100001A 		bne	.L442
 6916              		.loc 1 3388 5 discriminator 5
 6917 01fc 0830E0E3 		mvn	r3, #8
 6918              		.loc 1 3388 5
 6919 0200 B70000EA 		b	.L460
 6920              	.L442:
 6921              		.loc 1 3388 5 discriminator 6
 6922 0204 14301BE5 		ldr	r3, [fp, #-20]
 6923 0208 233CA0E1 		lsr	r3, r3, #24
 6924 020c 040053E3 		cmp	r3, #4
 6925 0210 3F00000A 		beq	.L443
 6926              		.loc 1 3388 5 discriminator 7
 6927 0214 0130E0E3 		mvn	r3, #1
 6928              		.loc 1 3388 5
 6929 0218 B10000EA 		b	.L460
 6930              	.L440:
 6931              		.loc 1 3388 5 discriminator 2
 6932 021c 04309BE5 		ldr	r3, [fp, #4]
 6933 0220 2324A0E1 		lsr	r2, r3, #8
 6934 0224 28301BE5 		ldr	r3, [fp, #-40]
 6935 0228 143093E5 		ldr	r3, [r3, #20]
 6936 022c 030052E1 		cmp	r2, r3
 6937 0230 0100003A 		bcc	.L444
 6938              		.loc 1 3388 5 discriminator 8
 6939 0234 0230E0E3 		mvn	r3, #2
 6940              		.loc 1 3388 5
 6941 0238 A90000EA 		b	.L460
 6942              	.L444:
 6943              		.loc 1 3388 5 discriminator 9
 6944 023c 04309BE5 		ldr	r3, [fp, #4]
 6945 0240 2334A0E1 		lsr	r3, r3, #8
 6946 0244 8322A0E1 		lsl	r2, r3, #5
 6947 0248 28301BE5 		ldr	r3, [fp, #-40]
 6948 024c 0C3093E5 		ldr	r3, [r3, #12]
 6949 0250 033082E0 		add	r3, r2, r3
 6950 0254 08300BE5 		str	r3, [fp, #-8]
 6951 0258 08301BE5 		ldr	r3, [fp, #-8]
 6952 025c 0300A0E1 		mov	r0, r3
 6953 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6954 0264 14000BE5 		str	r0, [fp, #-20]
 6955              		.loc 1 3388 5 discriminator 1
 6956 0268 14301BE5 		ldr	r3, [fp, #-20]
 6957 026c FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 183


 6958 0270 020853E3 		cmp	r3, #131072
 6959 0274 0100001A 		bne	.L445
 6960              		.loc 1 3388 5 discriminator 10
 6961 0278 0830E0E3 		mvn	r3, #8
 6962              		.loc 1 3388 5
 6963 027c 980000EA 		b	.L460
 6964              	.L445:
 6965              		.loc 1 3388 5 discriminator 11
 6966 0280 14301BE5 		ldr	r3, [fp, #-20]
 6967 0284 233CA0E1 		lsr	r3, r3, #24
 6968 0288 030053E3 		cmp	r3, #3
 6969 028c 0100000A 		beq	.L446
 6970              		.loc 1 3388 5 discriminator 12
 6971 0290 0130E0E3 		mvn	r3, #1
 6972              		.loc 1 3388 5
 6973 0294 920000EA 		b	.L460
 6974              	.L446:
 6975              		.loc 1 3388 5 discriminator 13
 6976 0298 04309BE5 		ldr	r3, [fp, #4]
 6977 029c 7F2003E2 		and	r2, r3, #127
 6978 02a0 08301BE5 		ldr	r3, [fp, #-8]
 6979 02a4 143093E5 		ldr	r3, [r3, #20]
 6980 02a8 030052E1 		cmp	r2, r3
 6981 02ac 0100003A 		bcc	.L447
 6982              		.loc 1 3388 5 discriminator 14
 6983 02b0 0230E0E3 		mvn	r3, #2
 6984              		.loc 1 3388 5
 6985 02b4 8A0000EA 		b	.L460
 6986              	.L447:
 6987              		.loc 1 3388 5 discriminator 15
 6988 02b8 04309BE5 		ldr	r3, [fp, #4]
 6989 02bc 7F3003E2 		and	r3, r3, #127
 6990 02c0 8322A0E1 		lsl	r2, r3, #5
 6991 02c4 08301BE5 		ldr	r3, [fp, #-8]
 6992 02c8 0C3093E5 		ldr	r3, [r3, #12]
 6993 02cc 033082E0 		add	r3, r2, r3
 6994 02d0 08300BE5 		str	r3, [fp, #-8]
 6995 02d4 08301BE5 		ldr	r3, [fp, #-8]
 6996 02d8 0300A0E1 		mov	r0, r3
 6997 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6998 02e0 14000BE5 		str	r0, [fp, #-20]
 6999              		.loc 1 3388 5 discriminator 1
 7000 02e4 14301BE5 		ldr	r3, [fp, #-20]
 7001 02e8 FF3803E2 		and	r3, r3, #16711680
 7002 02ec 020853E3 		cmp	r3, #131072
 7003 02f0 0100001A 		bne	.L448
 7004              		.loc 1 3388 5 discriminator 16
 7005 02f4 0830E0E3 		mvn	r3, #8
 7006              		.loc 1 3388 5
 7007 02f8 790000EA 		b	.L460
 7008              	.L448:
 7009              		.loc 1 3388 5 discriminator 17
 7010 02fc 14301BE5 		ldr	r3, [fp, #-20]
 7011 0300 233CA0E1 		lsr	r3, r3, #24
 7012 0304 040053E3 		cmp	r3, #4
 7013 0308 0100000A 		beq	.L443
 7014              		.loc 1 3388 5 discriminator 18
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 184


 7015 030c 0130E0E3 		mvn	r3, #1
 7016              		.loc 1 3388 5
 7017 0310 730000EA 		b	.L460
 7018              	.L443:
3389:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Src,Type_Stat);
3390:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3391:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Dst,RME_PGT_FLAG_ADD_DST);
 7019              		.loc 1 3391 5 is_stmt 1
 7020 0314 0C301BE5 		ldr	r3, [fp, #-12]
 7021 0318 083093E5 		ldr	r3, [r3, #8]
 7022 031c 023003E2 		and	r3, r3, #2
 7023 0320 000053E3 		cmp	r3, #0
 7024 0324 0100001A 		bne	.L449
 7025              		.loc 1 3391 5 is_stmt 0 discriminator 1
 7026 0328 0630E0E3 		mvn	r3, #6
 7027              		.loc 1 3391 5
 7028 032c 6C0000EA 		b	.L460
 7029              	.L449:
3392:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Src,RME_PGT_FLAG_ADD_SRC);
 7030              		.loc 1 3392 5 is_stmt 1
 7031 0330 08301BE5 		ldr	r3, [fp, #-8]
 7032 0334 083093E5 		ldr	r3, [r3, #8]
 7033 0338 013003E2 		and	r3, r3, #1
 7034 033c 000053E3 		cmp	r3, #0
 7035 0340 0100001A 		bne	.L450
 7036              		.loc 1 3392 5 is_stmt 0 discriminator 1
 7037 0344 0630E0E3 		mvn	r3, #6
 7038              		.loc 1 3392 5
 7039 0348 650000EA 		b	.L460
 7040              	.L450:
3393:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3394:../../Source/Kernel/rme_kernel.c ****     if((Pos_Dst>RME_PGT_FLAG_HIGH(Pgt_Dst->Head.Flag))||
 7041              		.loc 1 3394 17 is_stmt 1
 7042 034c 0C301BE5 		ldr	r3, [fp, #-12]
 7043 0350 083093E5 		ldr	r3, [r3, #8]
 7044 0354 233AA0E1 		lsr	r3, r3, #20
 7045              		.loc 1 3394 7
 7046 0358 30201BE5 		ldr	r2, [fp, #-48]
 7047 035c 030052E1 		cmp	r2, r3
 7048 0360 1300008A 		bhi	.L451
3395:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7049              		.loc 1 3395 17
 7050 0364 0C301BE5 		ldr	r3, [fp, #-12]
 7051 0368 083093E5 		ldr	r3, [r3, #8]
 7052 036c 2334A0E1 		lsr	r3, r3, #8
 7053 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3394:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7054              		.loc 1 3394 55 discriminator 1
 7055 0374 30201BE5 		ldr	r2, [fp, #-48]
 7056 0378 030052E1 		cmp	r2, r3
 7057 037c 0C00003A 		bcc	.L451
3396:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 7058              		.loc 1 3396 17
 7059 0380 08301BE5 		ldr	r3, [fp, #-8]
 7060 0384 083093E5 		ldr	r3, [r3, #8]
 7061 0388 233AA0E1 		lsr	r3, r3, #20
3395:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 185


 7062              		.loc 1 3395 54
 7063 038c 08209BE5 		ldr	r2, [fp, #8]
 7064 0390 030052E1 		cmp	r2, r3
 7065 0394 0600008A 		bhi	.L451
3397:../../Source/Kernel/rme_kernel.c ****        (Pos_Src<RME_PGT_FLAG_LOW(Pgt_Src->Head.Flag)))
 7066              		.loc 1 3397 17
 7067 0398 08301BE5 		ldr	r3, [fp, #-8]
 7068 039c 083093E5 		ldr	r3, [r3, #8]
 7069 03a0 2334A0E1 		lsr	r3, r3, #8
 7070 03a4 5330EBE7 		ubfx	r3, r3, #0, #12
3396:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 7071              		.loc 1 3396 55
 7072 03a8 08209BE5 		ldr	r2, [fp, #8]
 7073 03ac 030052E1 		cmp	r2, r3
 7074 03b0 0100002A 		bcs	.L452
 7075              	.L451:
3398:../../Source/Kernel/rme_kernel.c ****     {
3399:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3400:../../Source/Kernel/rme_kernel.c **** 
3401:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7076              		.loc 1 3401 16
 7077 03b4 0630E0E3 		mvn	r3, #6
 7078 03b8 490000EA 		b	.L460
 7079              	.L452:
3402:../../Source/Kernel/rme_kernel.c ****     }
3403:../../Source/Kernel/rme_kernel.c ****     else
3404:../../Source/Kernel/rme_kernel.c ****     {
3405:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3406:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3407:../../Source/Kernel/rme_kernel.c ****     }
3408:../../Source/Kernel/rme_kernel.c **** 
3409:../../Source/Kernel/rme_kernel.c ****     /* See if the size order relationship is correct */
3410:../../Source/Kernel/rme_kernel.c ****     Szord_Dst=RME_PGT_SZORD(Pgt_Dst->Order);
 7080              		.loc 1 3410 15
 7081 03bc 0C301BE5 		ldr	r3, [fp, #-12]
 7082 03c0 143093E5 		ldr	r3, [r3, #20]
 7083              		.loc 1 3410 14
 7084 03c4 2338A0E1 		lsr	r3, r3, #16
 7085 03c8 18300BE5 		str	r3, [fp, #-24]
3411:../../Source/Kernel/rme_kernel.c ****     Szord_Src=RME_PGT_SZORD(Pgt_Src->Order);
 7086              		.loc 1 3411 15
 7087 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7088 03d0 143093E5 		ldr	r3, [r3, #20]
 7089              		.loc 1 3411 14
 7090 03d4 2338A0E1 		lsr	r3, r3, #16
 7091 03d8 1C300BE5 		str	r3, [fp, #-28]
3412:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst>Szord_Src)
 7092              		.loc 1 3412 7
 7093 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7094 03e0 1C301BE5 		ldr	r3, [fp, #-28]
 7095 03e4 030052E1 		cmp	r2, r3
 7096 03e8 0100009A 		bls	.L453
3413:../../Source/Kernel/rme_kernel.c ****     {
3414:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3415:../../Source/Kernel/rme_kernel.c **** 
3416:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7097              		.loc 1 3416 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 186


 7098 03ec 6430E0E3 		mvn	r3, #100
 7099 03f0 3B0000EA 		b	.L460
 7100              	.L453:
3417:../../Source/Kernel/rme_kernel.c ****     }
3418:../../Source/Kernel/rme_kernel.c ****     else
3419:../../Source/Kernel/rme_kernel.c ****     {
3420:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3421:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3422:../../Source/Kernel/rme_kernel.c ****     }
3423:../../Source/Kernel/rme_kernel.c **** 
3424:../../Source/Kernel/rme_kernel.c ****     /* See if the positions are out of range - NMORD is restricted, no UB */
3425:../../Source/Kernel/rme_kernel.c ****     if(((Pos_Dst>>RME_PGT_NMORD(Pgt_Dst->Order))!=0U)||
 7101              		.loc 1 3425 19
 7102 03f4 0C301BE5 		ldr	r3, [fp, #-12]
 7103 03f8 143093E5 		ldr	r3, [r3, #20]
 7104 03fc 7330FFE6 		uxth	r3, r3
 7105              		.loc 1 3425 17
 7106 0400 30201BE5 		ldr	r2, [fp, #-48]
 7107 0404 3233A0E1 		lsr	r3, r2, r3
 7108              		.loc 1 3425 7
 7109 0408 000053E3 		cmp	r3, #0
 7110 040c 0600001A 		bne	.L454
3426:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7111              		.loc 1 3426 19
 7112 0410 08301BE5 		ldr	r3, [fp, #-8]
 7113 0414 143093E5 		ldr	r3, [r3, #20]
 7114 0418 7330FFE6 		uxth	r3, r3
 7115              		.loc 1 3426 17
 7116 041c 08209BE5 		ldr	r2, [fp, #8]
 7117 0420 3233A0E1 		lsr	r3, r2, r3
3425:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7118              		.loc 1 3425 54 discriminator 1
 7119 0424 000053E3 		cmp	r3, #0
 7120 0428 0100000A 		beq	.L455
 7121              	.L454:
3427:../../Source/Kernel/rme_kernel.c ****     {
3428:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3429:../../Source/Kernel/rme_kernel.c **** 
3430:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7122              		.loc 1 3430 16
 7123 042c 6430E0E3 		mvn	r3, #100
 7124 0430 2B0000EA 		b	.L460
 7125              	.L455:
3431:../../Source/Kernel/rme_kernel.c ****     }
3432:../../Source/Kernel/rme_kernel.c ****     else
3433:../../Source/Kernel/rme_kernel.c ****     {
3434:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3435:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3436:../../Source/Kernel/rme_kernel.c ****     }
3437:../../Source/Kernel/rme_kernel.c **** 
3438:../../Source/Kernel/rme_kernel.c ****     /* See if the source subposition is out of range - avoid UB */
3439:../../Source/Kernel/rme_kernel.c ****     if(Szord_Src<RME_WORD_BIT)
 7126              		.loc 1 3439 7
 7127 0434 1C301BE5 		ldr	r3, [fp, #-28]
 7128 0438 1F0053E3 		cmp	r3, #31
 7129 043c 0900008A 		bhi	.L456
3440:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 187


3441:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3442:../../Source/Kernel/rme_kernel.c ****         
3443:../../Source/Kernel/rme_kernel.c ****         /* No UB because Szord_Dst<=Szord_Src */
3444:../../Source/Kernel/rme_kernel.c ****         if(RME_POW2(Szord_Src)<=(Index<<Szord_Dst))
 7130              		.loc 1 3444 12
 7131 0440 0120A0E3 		mov	r2, #1
 7132 0444 1C301BE5 		ldr	r3, [fp, #-28]
 7133 0448 1223A0E1 		lsl	r2, r2, r3
 7134              		.loc 1 3444 39
 7135 044c 0C109BE5 		ldr	r1, [fp, #12]
 7136 0450 18301BE5 		ldr	r3, [fp, #-24]
 7137 0454 1133A0E1 		lsl	r3, r1, r3
 7138              		.loc 1 3444 11
 7139 0458 030052E1 		cmp	r2, r3
 7140 045c 0100008A 		bhi	.L456
3445:../../Source/Kernel/rme_kernel.c ****         {
3446:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3447:../../Source/Kernel/rme_kernel.c **** 
3448:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
 7141              		.loc 1 3448 20
 7142 0460 6430E0E3 		mvn	r3, #100
 7143 0464 1E0000EA 		b	.L460
 7144              	.L456:
3449:../../Source/Kernel/rme_kernel.c ****         }
3450:../../Source/Kernel/rme_kernel.c ****         else
3451:../../Source/Kernel/rme_kernel.c ****         {
3452:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3453:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3454:../../Source/Kernel/rme_kernel.c ****         }
3455:../../Source/Kernel/rme_kernel.c ****     }
3456:../../Source/Kernel/rme_kernel.c ****     else
3457:../../Source/Kernel/rme_kernel.c ****     {
3458:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3459:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3460:../../Source/Kernel/rme_kernel.c ****     }
3461:../../Source/Kernel/rme_kernel.c **** 
3462:../../Source/Kernel/rme_kernel.c ****     /* Get the physical address and RME standard flags of that source page */
3463:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Lookup(Pgt_Src,Pos_Src,&Paddr_Src,&Flag_Src)<0)
 7145              		.loc 1 3463 8
 7146 0468 24304BE2 		sub	r3, fp, #36
 7147 046c 20204BE2 		sub	r2, fp, #32
 7148 0470 08109BE5 		ldr	r1, [fp, #8]
 7149 0474 08001BE5 		ldr	r0, [fp, #-8]
 7150 0478 FEFFFFEB 		bl	__RME_Pgt_Lookup
3464:../../Source/Kernel/rme_kernel.c ****     {
3465:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3466:../../Source/Kernel/rme_kernel.c **** 
3467:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3468:../../Source/Kernel/rme_kernel.c ****     }
3469:../../Source/Kernel/rme_kernel.c ****     else
3470:../../Source/Kernel/rme_kernel.c ****     {
3471:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3472:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3473:../../Source/Kernel/rme_kernel.c ****     }
3474:../../Source/Kernel/rme_kernel.c **** 
3475:../../Source/Kernel/rme_kernel.c ****     /* Calculate the destination physical address - avoid UB */
3476:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst<RME_WORD_BIT)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 188


 7151              		.loc 1 3476 7
 7152 047c 18301BE5 		ldr	r3, [fp, #-24]
 7153 0480 1F0053E3 		cmp	r3, #31
 7154 0484 0600008A 		bhi	.L457
3477:../../Source/Kernel/rme_kernel.c ****     {
3478:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3479:../../Source/Kernel/rme_kernel.c ****         
3480:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src+(Index<<Szord_Dst);
 7155              		.loc 1 3480 35
 7156 0488 0C209BE5 		ldr	r2, [fp, #12]
 7157 048c 18301BE5 		ldr	r3, [fp, #-24]
 7158 0490 1223A0E1 		lsl	r2, r2, r3
 7159              		.loc 1 3480 28
 7160 0494 20301BE5 		ldr	r3, [fp, #-32]
 7161              		.loc 1 3480 18
 7162 0498 033082E0 		add	r3, r2, r3
 7163 049c 10300BE5 		str	r3, [fp, #-16]
 7164 04a0 010000EA 		b	.L458
 7165              	.L457:
3481:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3482:../../Source/Kernel/rme_kernel.c ****         /* Check if we force identical mapping */
3483:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=(RME_PGT_BASE(Pgt_Dst->Base)+(Pos_Dst<<Szord_Dst)))
3484:../../Source/Kernel/rme_kernel.c ****         {
3485:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3486:../../Source/Kernel/rme_kernel.c **** 
3487:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3488:../../Source/Kernel/rme_kernel.c ****         }
3489:../../Source/Kernel/rme_kernel.c ****         else
3490:../../Source/Kernel/rme_kernel.c ****         {
3491:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3492:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3493:../../Source/Kernel/rme_kernel.c ****         }
3494:../../Source/Kernel/rme_kernel.c **** #endif
3495:../../Source/Kernel/rme_kernel.c ****     }
3496:../../Source/Kernel/rme_kernel.c ****     /* The destination is also full range */
3497:../../Source/Kernel/rme_kernel.c ****     else
3498:../../Source/Kernel/rme_kernel.c ****     {
3499:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3500:../../Source/Kernel/rme_kernel.c ****         
3501:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src;
 7166              		.loc 1 3501 18
 7167 04a4 20301BE5 		ldr	r3, [fp, #-32]
 7168 04a8 10300BE5 		str	r3, [fp, #-16]
 7169              	.L458:
3502:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3503:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=RME_PGT_BASE(Pgt_Dst->Base))
3504:../../Source/Kernel/rme_kernel.c ****         {
3505:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3506:../../Source/Kernel/rme_kernel.c **** 
3507:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3508:../../Source/Kernel/rme_kernel.c ****         }
3509:../../Source/Kernel/rme_kernel.c ****         else
3510:../../Source/Kernel/rme_kernel.c ****         {
3511:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3512:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3513:../../Source/Kernel/rme_kernel.c ****         }
3514:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 189


3515:../../Source/Kernel/rme_kernel.c ****     }
3516:../../Source/Kernel/rme_kernel.c ****     
3517:../../Source/Kernel/rme_kernel.c ****     /* Analyze the flags - we do not allow expansion of access permissions */
3518:../../Source/Kernel/rme_kernel.c ****     if(((Flag_Dst)&(~Flag_Src))!=0U)
 7170              		.loc 1 3518 21
 7171 04ac 24301BE5 		ldr	r3, [fp, #-36]
 7172 04b0 0320E0E1 		mvn	r2, r3
 7173              		.loc 1 3518 19
 7174 04b4 34301BE5 		ldr	r3, [fp, #-52]
 7175 04b8 023003E0 		and	r3, r3, r2
 7176              		.loc 1 3518 7
 7177 04bc 000053E3 		cmp	r3, #0
 7178 04c0 0100000A 		beq	.L459
3519:../../Source/Kernel/rme_kernel.c ****     {
3520:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3521:../../Source/Kernel/rme_kernel.c **** 
3522:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_PERM;
 7179              		.loc 1 3522 16
 7180 04c4 6730E0E3 		mvn	r3, #103
 7181 04c8 050000EA 		b	.L460
 7182              	.L459:
3523:../../Source/Kernel/rme_kernel.c ****     }
3524:../../Source/Kernel/rme_kernel.c ****     else
3525:../../Source/Kernel/rme_kernel.c ****     {
3526:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3527:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3528:../../Source/Kernel/rme_kernel.c ****     }
3529:../../Source/Kernel/rme_kernel.c **** 
3530:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3531:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3532:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Dst,Paddr_Dst,Pos_Dst,Flag_Dst)<0)
 7183              		.loc 1 3532 8
 7184 04cc 34301BE5 		ldr	r3, [fp, #-52]
 7185 04d0 30201BE5 		ldr	r2, [fp, #-48]
 7186 04d4 10101BE5 		ldr	r1, [fp, #-16]
 7187 04d8 0C001BE5 		ldr	r0, [fp, #-12]
 7188 04dc FEFFFFEB 		bl	__RME_Pgt_Page_Map
3533:../../Source/Kernel/rme_kernel.c ****     {
3534:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3535:../../Source/Kernel/rme_kernel.c **** 
3536:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3537:../../Source/Kernel/rme_kernel.c ****     }
3538:../../Source/Kernel/rme_kernel.c ****     else
3539:../../Source/Kernel/rme_kernel.c ****     {
3540:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3541:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3542:../../Source/Kernel/rme_kernel.c ****     }
3543:../../Source/Kernel/rme_kernel.c ****     return 0;
 7189              		.loc 1 3543 12
 7190 04e0 0030A0E3 		mov	r3, #0
 7191              	.L460:
3544:../../Source/Kernel/rme_kernel.c **** }
 7192              		.loc 1 3544 1
 7193 04e4 0300A0E1 		mov	r0, r3
 7194 04e8 04D04BE2 		sub	sp, fp, #4
 7195              		.cfi_def_cfa 13, 8
 7196              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 190


 7197 04ec 0088BDE8 		pop	{fp, pc}
 7198              		.cfi_endproc
 7199              	.LFE34:
 7201              		.section	.text._RME_Pgt_Rem,"ax",%progbits
 7202              		.align	2
 7203              		.syntax unified
 7204              		.arm
 7206              	_RME_Pgt_Rem:
 7207              	.LFB35:
3545:../../Source/Kernel/rme_kernel.c **** #endif
3546:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Add *************************************************/
3547:../../Source/Kernel/rme_kernel.c **** 
3548:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Rem ******************************************************
3549:../../Source/Kernel/rme_kernel.c **** Description : Remove a page from the page table. We are doing unmapping of a
3550:../../Source/Kernel/rme_kernel.c ****               page.
3551:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3552:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
3553:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3554:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to unmap from.
3555:../../Source/Kernel/rme_kernel.c **** Output      : None.
3556:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3557:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3558:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3559:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Rem(struct RME_Cap_Cpt* Cpt,
3560:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3561:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos)
3562:../../Source/Kernel/rme_kernel.c **** {
 7208              		.loc 1 3562 1
 7209              		.cfi_startproc
 7210              		@ args = 0, pretend = 0, frame = 24
 7211              		@ frame_needed = 1, uses_anonymous_args = 0
 7212 0000 00482DE9 		push	{fp, lr}
 7213              		.cfi_def_cfa_offset 8
 7214              		.cfi_offset 11, -8
 7215              		.cfi_offset 14, -4
 7216 0004 04B08DE2 		add	fp, sp, #4
 7217              		.cfi_def_cfa 11, 4
 7218 0008 18D04DE2 		sub	sp, sp, #24
 7219 000c 10000BE5 		str	r0, [fp, #-16]
 7220 0010 14100BE5 		str	r1, [fp, #-20]
 7221 0014 18200BE5 		str	r2, [fp, #-24]
3563:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Rem;
3564:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3565:../../Source/Kernel/rme_kernel.c ****     
3566:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3567:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_CPT,
 7222              		.loc 1 3567 5
 7223 0018 14301BE5 		ldr	r3, [fp, #-20]
 7224 001c 803003E2 		and	r3, r3, #128
 7225 0020 000053E3 		cmp	r3, #0
 7226 0024 1C00001A 		bne	.L462
 7227              		.loc 1 3567 5 is_stmt 0 discriminator 1
 7228 0028 10301BE5 		ldr	r3, [fp, #-16]
 7229 002c 142093E5 		ldr	r2, [r3, #20]
 7230 0030 14301BE5 		ldr	r3, [fp, #-20]
 7231 0034 030052E1 		cmp	r2, r3
 7232 0038 0100008A 		bhi	.L463
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 191


 7233              		.loc 1 3567 5 discriminator 3
 7234 003c 0230E0E3 		mvn	r3, #2
 7235              		.loc 1 3567 5
 7236 0040 760000EA 		b	.L464
 7237              	.L463:
 7238              		.loc 1 3567 5 discriminator 4
 7239 0044 14301BE5 		ldr	r3, [fp, #-20]
 7240 0048 8322A0E1 		lsl	r2, r3, #5
 7241 004c 10301BE5 		ldr	r3, [fp, #-16]
 7242 0050 0C3093E5 		ldr	r3, [r3, #12]
 7243 0054 033082E0 		add	r3, r2, r3
 7244 0058 08300BE5 		str	r3, [fp, #-8]
 7245 005c 08301BE5 		ldr	r3, [fp, #-8]
 7246 0060 0300A0E1 		mov	r0, r3
 7247 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7248 0068 0C000BE5 		str	r0, [fp, #-12]
 7249              		.loc 1 3567 5 discriminator 1
 7250 006c 0C301BE5 		ldr	r3, [fp, #-12]
 7251 0070 FF3803E2 		and	r3, r3, #16711680
 7252 0074 020853E3 		cmp	r3, #131072
 7253 0078 0100001A 		bne	.L465
 7254              		.loc 1 3567 5 discriminator 5
 7255 007c 0830E0E3 		mvn	r3, #8
 7256              		.loc 1 3567 5
 7257 0080 660000EA 		b	.L464
 7258              	.L465:
 7259              		.loc 1 3567 5 discriminator 6
 7260 0084 0C301BE5 		ldr	r3, [fp, #-12]
 7261 0088 233CA0E1 		lsr	r3, r3, #24
 7262 008c 030053E3 		cmp	r3, #3
 7263 0090 3F00000A 		beq	.L466
 7264              		.loc 1 3567 5 discriminator 7
 7265 0094 0130E0E3 		mvn	r3, #1
 7266              		.loc 1 3567 5
 7267 0098 600000EA 		b	.L464
 7268              	.L462:
 7269              		.loc 1 3567 5 discriminator 2
 7270 009c 14301BE5 		ldr	r3, [fp, #-20]
 7271 00a0 2324A0E1 		lsr	r2, r3, #8
 7272 00a4 10301BE5 		ldr	r3, [fp, #-16]
 7273 00a8 143093E5 		ldr	r3, [r3, #20]
 7274 00ac 030052E1 		cmp	r2, r3
 7275 00b0 0100003A 		bcc	.L467
 7276              		.loc 1 3567 5 discriminator 8
 7277 00b4 0230E0E3 		mvn	r3, #2
 7278              		.loc 1 3567 5
 7279 00b8 580000EA 		b	.L464
 7280              	.L467:
 7281              		.loc 1 3567 5 discriminator 9
 7282 00bc 14301BE5 		ldr	r3, [fp, #-20]
 7283 00c0 2334A0E1 		lsr	r3, r3, #8
 7284 00c4 8322A0E1 		lsl	r2, r3, #5
 7285 00c8 10301BE5 		ldr	r3, [fp, #-16]
 7286 00cc 0C3093E5 		ldr	r3, [r3, #12]
 7287 00d0 033082E0 		add	r3, r2, r3
 7288 00d4 08300BE5 		str	r3, [fp, #-8]
 7289 00d8 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 192


 7290 00dc 0300A0E1 		mov	r0, r3
 7291 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7292 00e4 0C000BE5 		str	r0, [fp, #-12]
 7293              		.loc 1 3567 5 discriminator 1
 7294 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 7295 00ec FF3803E2 		and	r3, r3, #16711680
 7296 00f0 020853E3 		cmp	r3, #131072
 7297 00f4 0100001A 		bne	.L468
 7298              		.loc 1 3567 5 discriminator 10
 7299 00f8 0830E0E3 		mvn	r3, #8
 7300              		.loc 1 3567 5
 7301 00fc 470000EA 		b	.L464
 7302              	.L468:
 7303              		.loc 1 3567 5 discriminator 11
 7304 0100 0C301BE5 		ldr	r3, [fp, #-12]
 7305 0104 233CA0E1 		lsr	r3, r3, #24
 7306 0108 030053E3 		cmp	r3, #3
 7307 010c 0100000A 		beq	.L469
 7308              		.loc 1 3567 5 discriminator 12
 7309 0110 0130E0E3 		mvn	r3, #1
 7310              		.loc 1 3567 5
 7311 0114 410000EA 		b	.L464
 7312              	.L469:
 7313              		.loc 1 3567 5 discriminator 13
 7314 0118 14301BE5 		ldr	r3, [fp, #-20]
 7315 011c 7F2003E2 		and	r2, r3, #127
 7316 0120 08301BE5 		ldr	r3, [fp, #-8]
 7317 0124 143093E5 		ldr	r3, [r3, #20]
 7318 0128 030052E1 		cmp	r2, r3
 7319 012c 0100003A 		bcc	.L470
 7320              		.loc 1 3567 5 discriminator 14
 7321 0130 0230E0E3 		mvn	r3, #2
 7322              		.loc 1 3567 5
 7323 0134 390000EA 		b	.L464
 7324              	.L470:
 7325              		.loc 1 3567 5 discriminator 15
 7326 0138 14301BE5 		ldr	r3, [fp, #-20]
 7327 013c 7F3003E2 		and	r3, r3, #127
 7328 0140 8322A0E1 		lsl	r2, r3, #5
 7329 0144 08301BE5 		ldr	r3, [fp, #-8]
 7330 0148 0C3093E5 		ldr	r3, [r3, #12]
 7331 014c 033082E0 		add	r3, r2, r3
 7332 0150 08300BE5 		str	r3, [fp, #-8]
 7333 0154 08301BE5 		ldr	r3, [fp, #-8]
 7334 0158 0300A0E1 		mov	r0, r3
 7335 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7336 0160 0C000BE5 		str	r0, [fp, #-12]
 7337              		.loc 1 3567 5 discriminator 1
 7338 0164 0C301BE5 		ldr	r3, [fp, #-12]
 7339 0168 FF3803E2 		and	r3, r3, #16711680
 7340 016c 020853E3 		cmp	r3, #131072
 7341 0170 0100001A 		bne	.L471
 7342              		.loc 1 3567 5 discriminator 16
 7343 0174 0830E0E3 		mvn	r3, #8
 7344              		.loc 1 3567 5
 7345 0178 280000EA 		b	.L464
 7346              	.L471:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 193


 7347              		.loc 1 3567 5 discriminator 17
 7348 017c 0C301BE5 		ldr	r3, [fp, #-12]
 7349 0180 233CA0E1 		lsr	r3, r3, #24
 7350 0184 030053E3 		cmp	r3, #3
 7351 0188 0100000A 		beq	.L466
 7352              		.loc 1 3567 5 discriminator 18
 7353 018c 0130E0E3 		mvn	r3, #1
 7354              		.loc 1 3567 5
 7355 0190 220000EA 		b	.L464
 7356              	.L466:
3568:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Rem,Type_Stat);
3569:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3570:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Rem,RME_PGT_FLAG_REM);
 7357              		.loc 1 3570 5 is_stmt 1
 7358 0194 08301BE5 		ldr	r3, [fp, #-8]
 7359 0198 083093E5 		ldr	r3, [r3, #8]
 7360 019c 043003E2 		and	r3, r3, #4
 7361 01a0 000053E3 		cmp	r3, #0
 7362 01a4 0100001A 		bne	.L472
 7363              		.loc 1 3570 5 is_stmt 0 discriminator 1
 7364 01a8 0630E0E3 		mvn	r3, #6
 7365              		.loc 1 3570 5
 7366 01ac 1B0000EA 		b	.L464
 7367              	.L472:
3571:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3572:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Rem->Head.Flag))||
 7368              		.loc 1 3572 13 is_stmt 1
 7369 01b0 08301BE5 		ldr	r3, [fp, #-8]
 7370 01b4 083093E5 		ldr	r3, [r3, #8]
 7371 01b8 233AA0E1 		lsr	r3, r3, #20
 7372              		.loc 1 3572 7
 7373 01bc 18201BE5 		ldr	r2, [fp, #-24]
 7374 01c0 030052E1 		cmp	r2, r3
 7375 01c4 0600008A 		bhi	.L473
3573:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7376              		.loc 1 3573 13
 7377 01c8 08301BE5 		ldr	r3, [fp, #-8]
 7378 01cc 083093E5 		ldr	r3, [r3, #8]
 7379 01d0 2334A0E1 		lsr	r3, r3, #8
 7380 01d4 5330EBE7 		ubfx	r3, r3, #0, #12
3572:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7381              		.loc 1 3572 51 discriminator 1
 7382 01d8 18201BE5 		ldr	r2, [fp, #-24]
 7383 01dc 030052E1 		cmp	r2, r3
 7384 01e0 0100002A 		bcs	.L474
 7385              	.L473:
3574:../../Source/Kernel/rme_kernel.c ****     {
3575:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3576:../../Source/Kernel/rme_kernel.c **** 
3577:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7386              		.loc 1 3577 16
 7387 01e4 0630E0E3 		mvn	r3, #6
 7388 01e8 0C0000EA 		b	.L464
 7389              	.L474:
3578:../../Source/Kernel/rme_kernel.c ****     }
3579:../../Source/Kernel/rme_kernel.c ****     else
3580:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 194


3581:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3582:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3583:../../Source/Kernel/rme_kernel.c ****     }
3584:../../Source/Kernel/rme_kernel.c **** 
3585:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3586:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Rem->Order))!=0U)
 7390              		.loc 1 3586 14
 7391 01ec 08301BE5 		ldr	r3, [fp, #-8]
 7392 01f0 143093E5 		ldr	r3, [r3, #20]
 7393 01f4 7330FFE6 		uxth	r3, r3
 7394              		.loc 1 3586 12
 7395 01f8 18201BE5 		ldr	r2, [fp, #-24]
 7396 01fc 3233A0E1 		lsr	r3, r2, r3
 7397              		.loc 1 3586 7
 7398 0200 000053E3 		cmp	r3, #0
 7399 0204 0100000A 		beq	.L475
3587:../../Source/Kernel/rme_kernel.c ****     {
3588:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3589:../../Source/Kernel/rme_kernel.c **** 
3590:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7400              		.loc 1 3590 16
 7401 0208 6430E0E3 		mvn	r3, #100
 7402 020c 030000EA 		b	.L464
 7403              	.L475:
3591:../../Source/Kernel/rme_kernel.c ****     }
3592:../../Source/Kernel/rme_kernel.c ****     else
3593:../../Source/Kernel/rme_kernel.c ****     {
3594:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3595:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3596:../../Source/Kernel/rme_kernel.c ****     }
3597:../../Source/Kernel/rme_kernel.c **** 
3598:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3599:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3600:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Unmap(Pgt_Rem,Pos)<0)
 7404              		.loc 1 3600 8
 7405 0210 18101BE5 		ldr	r1, [fp, #-24]
 7406 0214 08001BE5 		ldr	r0, [fp, #-8]
 7407 0218 FEFFFFEB 		bl	__RME_Pgt_Page_Unmap
3601:../../Source/Kernel/rme_kernel.c ****     {
3602:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3603:../../Source/Kernel/rme_kernel.c **** 
3604:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3605:../../Source/Kernel/rme_kernel.c ****     }
3606:../../Source/Kernel/rme_kernel.c ****     else
3607:../../Source/Kernel/rme_kernel.c ****     {
3608:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3609:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3610:../../Source/Kernel/rme_kernel.c ****     }
3611:../../Source/Kernel/rme_kernel.c **** 
3612:../../Source/Kernel/rme_kernel.c ****     return 0;
 7408              		.loc 1 3612 12
 7409 021c 0030A0E3 		mov	r3, #0
 7410              	.L464:
3613:../../Source/Kernel/rme_kernel.c **** }
 7411              		.loc 1 3613 1
 7412 0220 0300A0E1 		mov	r0, r3
 7413 0224 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 195


 7414              		.cfi_def_cfa 13, 8
 7415              		@ sp needed
 7416 0228 0088BDE8 		pop	{fp, pc}
 7417              		.cfi_endproc
 7418              	.LFE35:
 7420              		.section	.text._RME_Pgt_Con,"ax",%progbits
 7421              		.align	2
 7422              		.syntax unified
 7423              		.arm
 7425              	_RME_Pgt_Con:
 7426              	.LFB36:
3614:../../Source/Kernel/rme_kernel.c **** #endif
3615:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Rem *************************************************/
3616:../../Source/Kernel/rme_kernel.c **** 
3617:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Con ******************************************************
3618:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table into the parent page table, to construct
3619:../../Source/Kernel/rme_kernel.c ****               an address space tree.
3620:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3621:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
3622:../../Source/Kernel/rme_kernel.c ****                                          table.
3623:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3624:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
3625:../../Source/Kernel/rme_kernel.c ****                               page table to.
3626:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3627:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3628:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
3629:../../Source/Kernel/rme_kernel.c **** Output      : None.
3630:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3631:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3632:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3633:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Con(struct RME_Cap_Cpt* Cpt,
3634:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3635:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3636:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child,
3637:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Child)
3638:../../Source/Kernel/rme_kernel.c **** {
 7427              		.loc 1 3638 1
 7428              		.cfi_startproc
 7429              		@ args = 4, pretend = 0, frame = 40
 7430              		@ frame_needed = 1, uses_anonymous_args = 0
 7431 0000 00482DE9 		push	{fp, lr}
 7432              		.cfi_def_cfa_offset 8
 7433              		.cfi_offset 11, -8
 7434              		.cfi_offset 14, -4
 7435 0004 04B08DE2 		add	fp, sp, #4
 7436              		.cfi_def_cfa 11, 4
 7437 0008 28D04DE2 		sub	sp, sp, #40
 7438 000c 20000BE5 		str	r0, [fp, #-32]
 7439 0010 24100BE5 		str	r1, [fp, #-36]
 7440 0014 28200BE5 		str	r2, [fp, #-40]
 7441 0018 2C300BE5 		str	r3, [fp, #-44]
3639:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3640:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3641:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
3642:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
3643:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
3644:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 196


3645:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
3646:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
3647:../../Source/Kernel/rme_kernel.c **** #endif
3648:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3649:../../Source/Kernel/rme_kernel.c ****     
3650:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3651:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 7442              		.loc 1 3651 5
 7443 001c 24301BE5 		ldr	r3, [fp, #-36]
 7444 0020 803003E2 		and	r3, r3, #128
 7445 0024 000053E3 		cmp	r3, #0
 7446 0028 1C00001A 		bne	.L477
 7447              		.loc 1 3651 5 is_stmt 0 discriminator 1
 7448 002c 20301BE5 		ldr	r3, [fp, #-32]
 7449 0030 142093E5 		ldr	r2, [r3, #20]
 7450 0034 24301BE5 		ldr	r3, [fp, #-36]
 7451 0038 030052E1 		cmp	r2, r3
 7452 003c 0100008A 		bhi	.L478
 7453              		.loc 1 3651 5 discriminator 3
 7454 0040 0230E0E3 		mvn	r3, #2
 7455              		.loc 1 3651 5
 7456 0044 140100EA 		b	.L479
 7457              	.L478:
 7458              		.loc 1 3651 5 discriminator 4
 7459 0048 24301BE5 		ldr	r3, [fp, #-36]
 7460 004c 8322A0E1 		lsl	r2, r3, #5
 7461 0050 20301BE5 		ldr	r3, [fp, #-32]
 7462 0054 0C3093E5 		ldr	r3, [r3, #12]
 7463 0058 033082E0 		add	r3, r2, r3
 7464 005c 08300BE5 		str	r3, [fp, #-8]
 7465 0060 08301BE5 		ldr	r3, [fp, #-8]
 7466 0064 0300A0E1 		mov	r0, r3
 7467 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7468 006c 10000BE5 		str	r0, [fp, #-16]
 7469              		.loc 1 3651 5 discriminator 1
 7470 0070 10301BE5 		ldr	r3, [fp, #-16]
 7471 0074 FF3803E2 		and	r3, r3, #16711680
 7472 0078 020853E3 		cmp	r3, #131072
 7473 007c 0100001A 		bne	.L480
 7474              		.loc 1 3651 5 discriminator 5
 7475 0080 0830E0E3 		mvn	r3, #8
 7476              		.loc 1 3651 5
 7477 0084 040100EA 		b	.L479
 7478              	.L480:
 7479              		.loc 1 3651 5 discriminator 6
 7480 0088 10301BE5 		ldr	r3, [fp, #-16]
 7481 008c 233CA0E1 		lsr	r3, r3, #24
 7482 0090 040053E3 		cmp	r3, #4
 7483 0094 3F00000A 		beq	.L481
 7484              		.loc 1 3651 5 discriminator 7
 7485 0098 0130E0E3 		mvn	r3, #1
 7486              		.loc 1 3651 5
 7487 009c FE0000EA 		b	.L479
 7488              	.L477:
 7489              		.loc 1 3651 5 discriminator 2
 7490 00a0 24301BE5 		ldr	r3, [fp, #-36]
 7491 00a4 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 197


 7492 00a8 20301BE5 		ldr	r3, [fp, #-32]
 7493 00ac 143093E5 		ldr	r3, [r3, #20]
 7494 00b0 030052E1 		cmp	r2, r3
 7495 00b4 0100003A 		bcc	.L482
 7496              		.loc 1 3651 5 discriminator 8
 7497 00b8 0230E0E3 		mvn	r3, #2
 7498              		.loc 1 3651 5
 7499 00bc F60000EA 		b	.L479
 7500              	.L482:
 7501              		.loc 1 3651 5 discriminator 9
 7502 00c0 24301BE5 		ldr	r3, [fp, #-36]
 7503 00c4 2334A0E1 		lsr	r3, r3, #8
 7504 00c8 8322A0E1 		lsl	r2, r3, #5
 7505 00cc 20301BE5 		ldr	r3, [fp, #-32]
 7506 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7507 00d4 033082E0 		add	r3, r2, r3
 7508 00d8 08300BE5 		str	r3, [fp, #-8]
 7509 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7510 00e0 0300A0E1 		mov	r0, r3
 7511 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7512 00e8 10000BE5 		str	r0, [fp, #-16]
 7513              		.loc 1 3651 5 discriminator 1
 7514 00ec 10301BE5 		ldr	r3, [fp, #-16]
 7515 00f0 FF3803E2 		and	r3, r3, #16711680
 7516 00f4 020853E3 		cmp	r3, #131072
 7517 00f8 0100001A 		bne	.L483
 7518              		.loc 1 3651 5 discriminator 10
 7519 00fc 0830E0E3 		mvn	r3, #8
 7520              		.loc 1 3651 5
 7521 0100 E50000EA 		b	.L479
 7522              	.L483:
 7523              		.loc 1 3651 5 discriminator 11
 7524 0104 10301BE5 		ldr	r3, [fp, #-16]
 7525 0108 233CA0E1 		lsr	r3, r3, #24
 7526 010c 030053E3 		cmp	r3, #3
 7527 0110 0100000A 		beq	.L484
 7528              		.loc 1 3651 5 discriminator 12
 7529 0114 0130E0E3 		mvn	r3, #1
 7530              		.loc 1 3651 5
 7531 0118 DF0000EA 		b	.L479
 7532              	.L484:
 7533              		.loc 1 3651 5 discriminator 13
 7534 011c 24301BE5 		ldr	r3, [fp, #-36]
 7535 0120 7F2003E2 		and	r2, r3, #127
 7536 0124 08301BE5 		ldr	r3, [fp, #-8]
 7537 0128 143093E5 		ldr	r3, [r3, #20]
 7538 012c 030052E1 		cmp	r2, r3
 7539 0130 0100003A 		bcc	.L485
 7540              		.loc 1 3651 5 discriminator 14
 7541 0134 0230E0E3 		mvn	r3, #2
 7542              		.loc 1 3651 5
 7543 0138 D70000EA 		b	.L479
 7544              	.L485:
 7545              		.loc 1 3651 5 discriminator 15
 7546 013c 24301BE5 		ldr	r3, [fp, #-36]
 7547 0140 7F3003E2 		and	r3, r3, #127
 7548 0144 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 198


 7549 0148 08301BE5 		ldr	r3, [fp, #-8]
 7550 014c 0C3093E5 		ldr	r3, [r3, #12]
 7551 0150 033082E0 		add	r3, r2, r3
 7552 0154 08300BE5 		str	r3, [fp, #-8]
 7553 0158 08301BE5 		ldr	r3, [fp, #-8]
 7554 015c 0300A0E1 		mov	r0, r3
 7555 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7556 0164 10000BE5 		str	r0, [fp, #-16]
 7557              		.loc 1 3651 5 discriminator 1
 7558 0168 10301BE5 		ldr	r3, [fp, #-16]
 7559 016c FF3803E2 		and	r3, r3, #16711680
 7560 0170 020853E3 		cmp	r3, #131072
 7561 0174 0100001A 		bne	.L486
 7562              		.loc 1 3651 5 discriminator 16
 7563 0178 0830E0E3 		mvn	r3, #8
 7564              		.loc 1 3651 5
 7565 017c C60000EA 		b	.L479
 7566              	.L486:
 7567              		.loc 1 3651 5 discriminator 17
 7568 0180 10301BE5 		ldr	r3, [fp, #-16]
 7569 0184 233CA0E1 		lsr	r3, r3, #24
 7570 0188 040053E3 		cmp	r3, #4
 7571 018c 0100000A 		beq	.L481
 7572              		.loc 1 3651 5 discriminator 18
 7573 0190 0130E0E3 		mvn	r3, #1
 7574              		.loc 1 3651 5
 7575 0194 C00000EA 		b	.L479
 7576              	.L481:
3652:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3653:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 7577              		.loc 1 3653 5 is_stmt 1
 7578 0198 2C301BE5 		ldr	r3, [fp, #-44]
 7579 019c 803003E2 		and	r3, r3, #128
 7580 01a0 000053E3 		cmp	r3, #0
 7581 01a4 1C00001A 		bne	.L487
 7582              		.loc 1 3653 5 is_stmt 0 discriminator 1
 7583 01a8 20301BE5 		ldr	r3, [fp, #-32]
 7584 01ac 142093E5 		ldr	r2, [r3, #20]
 7585 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 7586 01b4 030052E1 		cmp	r2, r3
 7587 01b8 0100008A 		bhi	.L488
 7588              		.loc 1 3653 5 discriminator 3
 7589 01bc 0230E0E3 		mvn	r3, #2
 7590              		.loc 1 3653 5
 7591 01c0 B50000EA 		b	.L479
 7592              	.L488:
 7593              		.loc 1 3653 5 discriminator 4
 7594 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 7595 01c8 8322A0E1 		lsl	r2, r3, #5
 7596 01cc 20301BE5 		ldr	r3, [fp, #-32]
 7597 01d0 0C3093E5 		ldr	r3, [r3, #12]
 7598 01d4 033082E0 		add	r3, r2, r3
 7599 01d8 0C300BE5 		str	r3, [fp, #-12]
 7600 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 7601 01e0 0300A0E1 		mov	r0, r3
 7602 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7603 01e8 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 199


 7604              		.loc 1 3653 5 discriminator 1
 7605 01ec 10301BE5 		ldr	r3, [fp, #-16]
 7606 01f0 FF3803E2 		and	r3, r3, #16711680
 7607 01f4 020853E3 		cmp	r3, #131072
 7608 01f8 0100001A 		bne	.L489
 7609              		.loc 1 3653 5 discriminator 5
 7610 01fc 0830E0E3 		mvn	r3, #8
 7611              		.loc 1 3653 5
 7612 0200 A50000EA 		b	.L479
 7613              	.L489:
 7614              		.loc 1 3653 5 discriminator 6
 7615 0204 10301BE5 		ldr	r3, [fp, #-16]
 7616 0208 233CA0E1 		lsr	r3, r3, #24
 7617 020c 040053E3 		cmp	r3, #4
 7618 0210 3F00000A 		beq	.L490
 7619              		.loc 1 3653 5 discriminator 7
 7620 0214 0130E0E3 		mvn	r3, #1
 7621              		.loc 1 3653 5
 7622 0218 9F0000EA 		b	.L479
 7623              	.L487:
 7624              		.loc 1 3653 5 discriminator 2
 7625 021c 2C301BE5 		ldr	r3, [fp, #-44]
 7626 0220 2324A0E1 		lsr	r2, r3, #8
 7627 0224 20301BE5 		ldr	r3, [fp, #-32]
 7628 0228 143093E5 		ldr	r3, [r3, #20]
 7629 022c 030052E1 		cmp	r2, r3
 7630 0230 0100003A 		bcc	.L491
 7631              		.loc 1 3653 5 discriminator 8
 7632 0234 0230E0E3 		mvn	r3, #2
 7633              		.loc 1 3653 5
 7634 0238 970000EA 		b	.L479
 7635              	.L491:
 7636              		.loc 1 3653 5 discriminator 9
 7637 023c 2C301BE5 		ldr	r3, [fp, #-44]
 7638 0240 2334A0E1 		lsr	r3, r3, #8
 7639 0244 8322A0E1 		lsl	r2, r3, #5
 7640 0248 20301BE5 		ldr	r3, [fp, #-32]
 7641 024c 0C3093E5 		ldr	r3, [r3, #12]
 7642 0250 033082E0 		add	r3, r2, r3
 7643 0254 0C300BE5 		str	r3, [fp, #-12]
 7644 0258 0C301BE5 		ldr	r3, [fp, #-12]
 7645 025c 0300A0E1 		mov	r0, r3
 7646 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7647 0264 10000BE5 		str	r0, [fp, #-16]
 7648              		.loc 1 3653 5 discriminator 1
 7649 0268 10301BE5 		ldr	r3, [fp, #-16]
 7650 026c FF3803E2 		and	r3, r3, #16711680
 7651 0270 020853E3 		cmp	r3, #131072
 7652 0274 0100001A 		bne	.L492
 7653              		.loc 1 3653 5 discriminator 10
 7654 0278 0830E0E3 		mvn	r3, #8
 7655              		.loc 1 3653 5
 7656 027c 860000EA 		b	.L479
 7657              	.L492:
 7658              		.loc 1 3653 5 discriminator 11
 7659 0280 10301BE5 		ldr	r3, [fp, #-16]
 7660 0284 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 200


 7661 0288 030053E3 		cmp	r3, #3
 7662 028c 0100000A 		beq	.L493
 7663              		.loc 1 3653 5 discriminator 12
 7664 0290 0130E0E3 		mvn	r3, #1
 7665              		.loc 1 3653 5
 7666 0294 800000EA 		b	.L479
 7667              	.L493:
 7668              		.loc 1 3653 5 discriminator 13
 7669 0298 2C301BE5 		ldr	r3, [fp, #-44]
 7670 029c 7F2003E2 		and	r2, r3, #127
 7671 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 7672 02a4 143093E5 		ldr	r3, [r3, #20]
 7673 02a8 030052E1 		cmp	r2, r3
 7674 02ac 0100003A 		bcc	.L494
 7675              		.loc 1 3653 5 discriminator 14
 7676 02b0 0230E0E3 		mvn	r3, #2
 7677              		.loc 1 3653 5
 7678 02b4 780000EA 		b	.L479
 7679              	.L494:
 7680              		.loc 1 3653 5 discriminator 15
 7681 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 7682 02bc 7F3003E2 		and	r3, r3, #127
 7683 02c0 8322A0E1 		lsl	r2, r3, #5
 7684 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 7685 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7686 02cc 033082E0 		add	r3, r2, r3
 7687 02d0 0C300BE5 		str	r3, [fp, #-12]
 7688 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 7689 02d8 0300A0E1 		mov	r0, r3
 7690 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7691 02e0 10000BE5 		str	r0, [fp, #-16]
 7692              		.loc 1 3653 5 discriminator 1
 7693 02e4 10301BE5 		ldr	r3, [fp, #-16]
 7694 02e8 FF3803E2 		and	r3, r3, #16711680
 7695 02ec 020853E3 		cmp	r3, #131072
 7696 02f0 0100001A 		bne	.L495
 7697              		.loc 1 3653 5 discriminator 16
 7698 02f4 0830E0E3 		mvn	r3, #8
 7699              		.loc 1 3653 5
 7700 02f8 670000EA 		b	.L479
 7701              	.L495:
 7702              		.loc 1 3653 5 discriminator 17
 7703 02fc 10301BE5 		ldr	r3, [fp, #-16]
 7704 0300 233CA0E1 		lsr	r3, r3, #24
 7705 0304 040053E3 		cmp	r3, #4
 7706 0308 0100000A 		beq	.L490
 7707              		.loc 1 3653 5 discriminator 18
 7708 030c 0130E0E3 		mvn	r3, #1
 7709              		.loc 1 3653 5
 7710 0310 610000EA 		b	.L479
 7711              	.L490:
3654:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3655:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3656:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_CON_PARENT);
 7712              		.loc 1 3656 5 is_stmt 1
 7713 0314 08301BE5 		ldr	r3, [fp, #-8]
 7714 0318 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 201


 7715 031c 103003E2 		and	r3, r3, #16
 7716 0320 000053E3 		cmp	r3, #0
 7717 0324 0100001A 		bne	.L496
 7718              		.loc 1 3656 5 is_stmt 0 discriminator 1
 7719 0328 0630E0E3 		mvn	r3, #6
 7720              		.loc 1 3656 5
 7721 032c 5A0000EA 		b	.L479
 7722              	.L496:
3657:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 7723              		.loc 1 3657 5 is_stmt 1
 7724 0330 0C301BE5 		ldr	r3, [fp, #-12]
 7725 0334 083093E5 		ldr	r3, [r3, #8]
 7726 0338 083003E2 		and	r3, r3, #8
 7727 033c 000053E3 		cmp	r3, #0
 7728 0340 0100001A 		bne	.L497
 7729              		.loc 1 3657 5 is_stmt 0 discriminator 1
 7730 0344 0630E0E3 		mvn	r3, #6
 7731              		.loc 1 3657 5
 7732 0348 530000EA 		b	.L479
 7733              	.L497:
3658:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3659:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 7734              		.loc 1 3659 13 is_stmt 1
 7735 034c 08301BE5 		ldr	r3, [fp, #-8]
 7736 0350 083093E5 		ldr	r3, [r3, #8]
 7737 0354 233AA0E1 		lsr	r3, r3, #20
 7738              		.loc 1 3659 7
 7739 0358 28201BE5 		ldr	r2, [fp, #-40]
 7740 035c 030052E1 		cmp	r2, r3
 7741 0360 0600008A 		bhi	.L498
3660:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7742              		.loc 1 3660 13
 7743 0364 08301BE5 		ldr	r3, [fp, #-8]
 7744 0368 083093E5 		ldr	r3, [r3, #8]
 7745 036c 2334A0E1 		lsr	r3, r3, #8
 7746 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3659:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7747              		.loc 1 3659 54 discriminator 1
 7748 0374 28201BE5 		ldr	r2, [fp, #-40]
 7749 0378 030052E1 		cmp	r2, r3
 7750 037c 0100002A 		bcs	.L499
 7751              	.L498:
3661:../../Source/Kernel/rme_kernel.c ****     {
3662:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3663:../../Source/Kernel/rme_kernel.c **** 
3664:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7752              		.loc 1 3664 16
 7753 0380 0630E0E3 		mvn	r3, #6
 7754 0384 440000EA 		b	.L479
 7755              	.L499:
3665:../../Source/Kernel/rme_kernel.c ****     }
3666:../../Source/Kernel/rme_kernel.c ****     else
3667:../../Source/Kernel/rme_kernel.c ****     {
3668:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3669:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3670:../../Source/Kernel/rme_kernel.c ****     }
3671:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 202


3672:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
3673:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 7756              		.loc 1 3673 14
 7757 0388 08301BE5 		ldr	r3, [fp, #-8]
 7758 038c 143093E5 		ldr	r3, [r3, #20]
 7759 0390 7330FFE6 		uxth	r3, r3
 7760              		.loc 1 3673 12
 7761 0394 28201BE5 		ldr	r2, [fp, #-40]
 7762 0398 3233A0E1 		lsr	r3, r2, r3
 7763              		.loc 1 3673 7
 7764 039c 000053E3 		cmp	r3, #0
 7765 03a0 0100000A 		beq	.L500
3674:../../Source/Kernel/rme_kernel.c ****     {
3675:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3676:../../Source/Kernel/rme_kernel.c **** 
3677:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7766              		.loc 1 3677 16
 7767 03a4 6430E0E3 		mvn	r3, #100
 7768 03a8 3B0000EA 		b	.L479
 7769              	.L500:
3678:../../Source/Kernel/rme_kernel.c ****     }
3679:../../Source/Kernel/rme_kernel.c ****     else
3680:../../Source/Kernel/rme_kernel.c ****     {
3681:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3682:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3683:../../Source/Kernel/rme_kernel.c ****     }
3684:../../Source/Kernel/rme_kernel.c ****     
3685:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
3686:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 7770              		.loc 1 3686 17
 7771 03ac 0C301BE5 		ldr	r3, [fp, #-12]
 7772 03b0 143093E5 		ldr	r3, [r3, #20]
 7773 03b4 7320FFE6 		uxth	r2, r3
 7774              		.loc 1 3686 49
 7775 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 7776 03bc 143093E5 		ldr	r3, [r3, #20]
 7777 03c0 2338A0E1 		lsr	r3, r3, #16
 7778              		.loc 1 3686 16
 7779 03c4 033082E0 		add	r3, r2, r3
 7780 03c8 14300BE5 		str	r3, [fp, #-20]
3687:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 7781              		.loc 1 3687 18
 7782 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7783 03d0 143093E5 		ldr	r3, [r3, #20]
 7784              		.loc 1 3687 17
 7785 03d4 2338A0E1 		lsr	r3, r3, #16
 7786 03d8 18300BE5 		str	r3, [fp, #-24]
3688:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 7787              		.loc 1 3688 7
 7788 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7789 03e0 14301BE5 		ldr	r3, [fp, #-20]
 7790 03e4 030052E1 		cmp	r2, r3
 7791 03e8 0100002A 		bcs	.L501
3689:../../Source/Kernel/rme_kernel.c ****     {
3690:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3691:../../Source/Kernel/rme_kernel.c ****         
3692:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 203


 7792              		.loc 1 3692 16
 7793 03ec 6430E0E3 		mvn	r3, #100
 7794 03f0 290000EA 		b	.L479
 7795              	.L501:
3693:../../Source/Kernel/rme_kernel.c ****     }
3694:../../Source/Kernel/rme_kernel.c ****     else
3695:../../Source/Kernel/rme_kernel.c ****     {
3696:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3697:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3698:../../Source/Kernel/rme_kernel.c ****     }
3699:../../Source/Kernel/rme_kernel.c **** 
3700:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3701:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
3702:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
3703:../../Source/Kernel/rme_kernel.c ****     {
3704:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3705:../../Source/Kernel/rme_kernel.c ****         
3706:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
3707:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
3708:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
3709:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
3710:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
3711:../../Source/Kernel/rme_kernel.c ****         {
3712:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3713:../../Source/Kernel/rme_kernel.c ****             
3714:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3715:../../Source/Kernel/rme_kernel.c ****         }
3716:../../Source/Kernel/rme_kernel.c ****         else
3717:../../Source/Kernel/rme_kernel.c ****         {
3718:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3719:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3720:../../Source/Kernel/rme_kernel.c ****         }
3721:../../Source/Kernel/rme_kernel.c ****         
3722:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
3723:../../Source/Kernel/rme_kernel.c ****         
3724:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
3725:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
3726:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
3727:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
3728:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
3729:../../Source/Kernel/rme_kernel.c ****         {
3730:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3731:../../Source/Kernel/rme_kernel.c ****             
3732:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3733:../../Source/Kernel/rme_kernel.c ****             {
3734:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3735:../../Source/Kernel/rme_kernel.c **** 
3736:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3737:../../Source/Kernel/rme_kernel.c ****             }
3738:../../Source/Kernel/rme_kernel.c ****             else
3739:../../Source/Kernel/rme_kernel.c ****             {
3740:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3741:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3742:../../Source/Kernel/rme_kernel.c ****             }
3743:../../Source/Kernel/rme_kernel.c ****         }
3744:../../Source/Kernel/rme_kernel.c ****         else
3745:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 204


3746:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3747:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3748:../../Source/Kernel/rme_kernel.c ****         }
3749:../../Source/Kernel/rme_kernel.c ****     }
3750:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, check exempt */
3751:../../Source/Kernel/rme_kernel.c ****     else
3752:../../Source/Kernel/rme_kernel.c ****     {
3753:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3754:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3755:../../Source/Kernel/rme_kernel.c ****     }
3756:../../Source/Kernel/rme_kernel.c **** #else
3757:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3758:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 7796              		.loc 1 3758 7
 7797 03f4 18201BE5 		ldr	r2, [fp, #-24]
 7798 03f8 14301BE5 		ldr	r3, [fp, #-20]
 7799 03fc 030052E1 		cmp	r2, r3
 7800 0400 0100000A 		beq	.L502
3759:../../Source/Kernel/rme_kernel.c ****     {
3760:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3761:../../Source/Kernel/rme_kernel.c **** 
3762:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7801              		.loc 1 3762 16
 7802 0404 6430E0E3 		mvn	r3, #100
 7803 0408 230000EA 		b	.L479
 7804              	.L502:
3763:../../Source/Kernel/rme_kernel.c ****     }
3764:../../Source/Kernel/rme_kernel.c ****     else
3765:../../Source/Kernel/rme_kernel.c ****     {
3766:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3767:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3768:../../Source/Kernel/rme_kernel.c ****     }
3769:../../Source/Kernel/rme_kernel.c **** #endif
3770:../../Source/Kernel/rme_kernel.c **** 
3771:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3772:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3773:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 7805              		.loc 1 3773 8
 7806 040c 04309BE5 		ldr	r3, [fp, #4]
 7807 0410 0C201BE5 		ldr	r2, [fp, #-12]
 7808 0414 28101BE5 		ldr	r1, [fp, #-40]
 7809 0418 08001BE5 		ldr	r0, [fp, #-8]
 7810 041c FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3774:../../Source/Kernel/rme_kernel.c ****     {
3775:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3776:../../Source/Kernel/rme_kernel.c **** 
3777:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3778:../../Source/Kernel/rme_kernel.c ****     }
3779:../../Source/Kernel/rme_kernel.c ****     else
3780:../../Source/Kernel/rme_kernel.c ****     {
3781:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3782:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3783:../../Source/Kernel/rme_kernel.c ****     }
3784:../../Source/Kernel/rme_kernel.c ****     
3785:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3786:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 7811              		.loc 1 3786 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 205


 7812 0420 08301BE5 		ldr	r3, [fp, #-8]
 7813 0424 003093E5 		ldr	r3, [r3]
 7814 0428 7330FFE6 		uxth	r3, r3
 7815 042c 000053E3 		cmp	r3, #0
 7816 0430 0200000A 		beq	.L503
 7817              		.loc 1 3786 14 is_stmt 0 discriminator 1
 7818 0434 08301BE5 		ldr	r3, [fp, #-8]
 7819 0438 043093E5 		ldr	r3, [r3, #4]
 7820 043c 000000EA 		b	.L504
 7821              	.L503:
 7822              		.loc 1 3786 14 discriminator 2
 7823 0440 08301BE5 		ldr	r3, [fp, #-8]
 7824              	.L504:
 7825              		.loc 1 3786 13 is_stmt 1 discriminator 4
 7826 0444 1C300BE5 		str	r3, [fp, #-28]
3787:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7827              		.loc 1 3787 5
 7828 0448 1C301BE5 		ldr	r3, [fp, #-28]
 7829 044c 043083E2 		add	r3, r3, #4
 7830 0450 0110A0E3 		mov	r1, #1
 7831 0454 0300A0E1 		mov	r0, r3
 7832 0458 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3788:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 7833              		.loc 1 3788 14
 7834 045c 0C301BE5 		ldr	r3, [fp, #-12]
 7835 0460 003093E5 		ldr	r3, [r3]
 7836 0464 7330FFE6 		uxth	r3, r3
 7837 0468 000053E3 		cmp	r3, #0
 7838 046c 0200000A 		beq	.L505
 7839              		.loc 1 3788 14 is_stmt 0 discriminator 1
 7840 0470 0C301BE5 		ldr	r3, [fp, #-12]
 7841 0474 043093E5 		ldr	r3, [r3, #4]
 7842 0478 000000EA 		b	.L506
 7843              	.L505:
 7844              		.loc 1 3788 14 discriminator 2
 7845 047c 0C301BE5 		ldr	r3, [fp, #-12]
 7846              	.L506:
 7847              		.loc 1 3788 13 is_stmt 1 discriminator 4
 7848 0480 1C300BE5 		str	r3, [fp, #-28]
3789:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7849              		.loc 1 3789 5
 7850 0484 1C301BE5 		ldr	r3, [fp, #-28]
 7851 0488 043083E2 		add	r3, r3, #4
 7852 048c 0110A0E3 		mov	r1, #1
 7853 0490 0300A0E1 		mov	r0, r3
 7854 0494 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3790:../../Source/Kernel/rme_kernel.c **** 
3791:../../Source/Kernel/rme_kernel.c ****     return 0;
 7855              		.loc 1 3791 12
 7856 0498 0030A0E3 		mov	r3, #0
 7857              	.L479:
3792:../../Source/Kernel/rme_kernel.c **** }
 7858              		.loc 1 3792 1
 7859 049c 0300A0E1 		mov	r0, r3
 7860 04a0 04D04BE2 		sub	sp, fp, #4
 7861              		.cfi_def_cfa 13, 8
 7862              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 206


 7863 04a4 0088BDE8 		pop	{fp, pc}
 7864              		.cfi_endproc
 7865              	.LFE36:
 7867              		.section	.text._RME_Pgt_Des,"ax",%progbits
 7868              		.align	2
 7869              		.syntax unified
 7870              		.arm
 7872              	_RME_Pgt_Des:
 7873              	.LFB37:
3793:../../Source/Kernel/rme_kernel.c **** #endif
3794:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Con *************************************************/
3795:../../Source/Kernel/rme_kernel.c **** 
3796:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Des ******************************************************
3797:../../Source/Kernel/rme_kernel.c **** Description : Unmap a child page table from the parent page table, destructing
3798:../../Source/Kernel/rme_kernel.c ****               the address space tree.
3799:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3800:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page
3801:../../Source/Kernel/rme_kernel.c ****                                          table.
3802:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3803:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to position unmap
3804:../../Source/Kernel/rme_kernel.c ****                               the child page table from. The child page table
3805:../../Source/Kernel/rme_kernel.c ****                               must be there for the destruction to succeed.
3806:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3807:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3808:../../Source/Kernel/rme_kernel.c **** Output      : None.
3809:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3810:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3811:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3812:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Des(struct RME_Cap_Cpt* Cpt, 
3813:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3814:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3815:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child)
3816:../../Source/Kernel/rme_kernel.c **** {
 7874              		.loc 1 3816 1
 7875              		.cfi_startproc
 7876              		@ args = 0, pretend = 0, frame = 32
 7877              		@ frame_needed = 1, uses_anonymous_args = 0
 7878 0000 00482DE9 		push	{fp, lr}
 7879              		.cfi_def_cfa_offset 8
 7880              		.cfi_offset 11, -8
 7881              		.cfi_offset 14, -4
 7882 0004 04B08DE2 		add	fp, sp, #4
 7883              		.cfi_def_cfa 11, 4
 7884 0008 20D04DE2 		sub	sp, sp, #32
 7885 000c 18000BE5 		str	r0, [fp, #-24]
 7886 0010 1C100BE5 		str	r1, [fp, #-28]
 7887 0014 20200BE5 		str	r2, [fp, #-32]
 7888 0018 24300BE5 		str	r3, [fp, #-36]
3817:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3818:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3819:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Root;
3820:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3821:../../Source/Kernel/rme_kernel.c ****     
3822:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3823:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_CPT,
 7889              		.loc 1 3823 5
 7890 001c 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 207


 7891 0020 803003E2 		and	r3, r3, #128
 7892 0024 000053E3 		cmp	r3, #0
 7893 0028 1C00001A 		bne	.L508
 7894              		.loc 1 3823 5 is_stmt 0 discriminator 1
 7895 002c 18301BE5 		ldr	r3, [fp, #-24]
 7896 0030 142093E5 		ldr	r2, [r3, #20]
 7897 0034 1C301BE5 		ldr	r3, [fp, #-28]
 7898 0038 030052E1 		cmp	r2, r3
 7899 003c 0100008A 		bhi	.L509
 7900              		.loc 1 3823 5 discriminator 3
 7901 0040 0230E0E3 		mvn	r3, #2
 7902              		.loc 1 3823 5
 7903 0044 000100EA 		b	.L510
 7904              	.L509:
 7905              		.loc 1 3823 5 discriminator 4
 7906 0048 1C301BE5 		ldr	r3, [fp, #-28]
 7907 004c 8322A0E1 		lsl	r2, r3, #5
 7908 0050 18301BE5 		ldr	r3, [fp, #-24]
 7909 0054 0C3093E5 		ldr	r3, [r3, #12]
 7910 0058 033082E0 		add	r3, r2, r3
 7911 005c 08300BE5 		str	r3, [fp, #-8]
 7912 0060 08301BE5 		ldr	r3, [fp, #-8]
 7913 0064 0300A0E1 		mov	r0, r3
 7914 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7915 006c 10000BE5 		str	r0, [fp, #-16]
 7916              		.loc 1 3823 5 discriminator 1
 7917 0070 10301BE5 		ldr	r3, [fp, #-16]
 7918 0074 FF3803E2 		and	r3, r3, #16711680
 7919 0078 020853E3 		cmp	r3, #131072
 7920 007c 0100001A 		bne	.L511
 7921              		.loc 1 3823 5 discriminator 5
 7922 0080 0830E0E3 		mvn	r3, #8
 7923              		.loc 1 3823 5
 7924 0084 F00000EA 		b	.L510
 7925              	.L511:
 7926              		.loc 1 3823 5 discriminator 6
 7927 0088 10301BE5 		ldr	r3, [fp, #-16]
 7928 008c 233CA0E1 		lsr	r3, r3, #24
 7929 0090 030053E3 		cmp	r3, #3
 7930 0094 3F00000A 		beq	.L512
 7931              		.loc 1 3823 5 discriminator 7
 7932 0098 0130E0E3 		mvn	r3, #1
 7933              		.loc 1 3823 5
 7934 009c EA0000EA 		b	.L510
 7935              	.L508:
 7936              		.loc 1 3823 5 discriminator 2
 7937 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 7938 00a4 2324A0E1 		lsr	r2, r3, #8
 7939 00a8 18301BE5 		ldr	r3, [fp, #-24]
 7940 00ac 143093E5 		ldr	r3, [r3, #20]
 7941 00b0 030052E1 		cmp	r2, r3
 7942 00b4 0100003A 		bcc	.L513
 7943              		.loc 1 3823 5 discriminator 8
 7944 00b8 0230E0E3 		mvn	r3, #2
 7945              		.loc 1 3823 5
 7946 00bc E20000EA 		b	.L510
 7947              	.L513:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 208


 7948              		.loc 1 3823 5 discriminator 9
 7949 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 7950 00c4 2334A0E1 		lsr	r3, r3, #8
 7951 00c8 8322A0E1 		lsl	r2, r3, #5
 7952 00cc 18301BE5 		ldr	r3, [fp, #-24]
 7953 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7954 00d4 033082E0 		add	r3, r2, r3
 7955 00d8 08300BE5 		str	r3, [fp, #-8]
 7956 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7957 00e0 0300A0E1 		mov	r0, r3
 7958 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7959 00e8 10000BE5 		str	r0, [fp, #-16]
 7960              		.loc 1 3823 5 discriminator 1
 7961 00ec 10301BE5 		ldr	r3, [fp, #-16]
 7962 00f0 FF3803E2 		and	r3, r3, #16711680
 7963 00f4 020853E3 		cmp	r3, #131072
 7964 00f8 0100001A 		bne	.L514
 7965              		.loc 1 3823 5 discriminator 10
 7966 00fc 0830E0E3 		mvn	r3, #8
 7967              		.loc 1 3823 5
 7968 0100 D10000EA 		b	.L510
 7969              	.L514:
 7970              		.loc 1 3823 5 discriminator 11
 7971 0104 10301BE5 		ldr	r3, [fp, #-16]
 7972 0108 233CA0E1 		lsr	r3, r3, #24
 7973 010c 030053E3 		cmp	r3, #3
 7974 0110 0100000A 		beq	.L515
 7975              		.loc 1 3823 5 discriminator 12
 7976 0114 0130E0E3 		mvn	r3, #1
 7977              		.loc 1 3823 5
 7978 0118 CB0000EA 		b	.L510
 7979              	.L515:
 7980              		.loc 1 3823 5 discriminator 13
 7981 011c 1C301BE5 		ldr	r3, [fp, #-28]
 7982 0120 7F2003E2 		and	r2, r3, #127
 7983 0124 08301BE5 		ldr	r3, [fp, #-8]
 7984 0128 143093E5 		ldr	r3, [r3, #20]
 7985 012c 030052E1 		cmp	r2, r3
 7986 0130 0100003A 		bcc	.L516
 7987              		.loc 1 3823 5 discriminator 14
 7988 0134 0230E0E3 		mvn	r3, #2
 7989              		.loc 1 3823 5
 7990 0138 C30000EA 		b	.L510
 7991              	.L516:
 7992              		.loc 1 3823 5 discriminator 15
 7993 013c 1C301BE5 		ldr	r3, [fp, #-28]
 7994 0140 7F3003E2 		and	r3, r3, #127
 7995 0144 8322A0E1 		lsl	r2, r3, #5
 7996 0148 08301BE5 		ldr	r3, [fp, #-8]
 7997 014c 0C3093E5 		ldr	r3, [r3, #12]
 7998 0150 033082E0 		add	r3, r2, r3
 7999 0154 08300BE5 		str	r3, [fp, #-8]
 8000 0158 08301BE5 		ldr	r3, [fp, #-8]
 8001 015c 0300A0E1 		mov	r0, r3
 8002 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8003 0164 10000BE5 		str	r0, [fp, #-16]
 8004              		.loc 1 3823 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 209


 8005 0168 10301BE5 		ldr	r3, [fp, #-16]
 8006 016c FF3803E2 		and	r3, r3, #16711680
 8007 0170 020853E3 		cmp	r3, #131072
 8008 0174 0100001A 		bne	.L517
 8009              		.loc 1 3823 5 discriminator 16
 8010 0178 0830E0E3 		mvn	r3, #8
 8011              		.loc 1 3823 5
 8012 017c B20000EA 		b	.L510
 8013              	.L517:
 8014              		.loc 1 3823 5 discriminator 17
 8015 0180 10301BE5 		ldr	r3, [fp, #-16]
 8016 0184 233CA0E1 		lsr	r3, r3, #24
 8017 0188 030053E3 		cmp	r3, #3
 8018 018c 0100000A 		beq	.L512
 8019              		.loc 1 3823 5 discriminator 18
 8020 0190 0130E0E3 		mvn	r3, #1
 8021              		.loc 1 3823 5
 8022 0194 AC0000EA 		b	.L510
 8023              	.L512:
3824:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3825:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_CPT,
 8024              		.loc 1 3825 5 is_stmt 1
 8025 0198 24301BE5 		ldr	r3, [fp, #-36]
 8026 019c 803003E2 		and	r3, r3, #128
 8027 01a0 000053E3 		cmp	r3, #0
 8028 01a4 1C00001A 		bne	.L518
 8029              		.loc 1 3825 5 is_stmt 0 discriminator 1
 8030 01a8 18301BE5 		ldr	r3, [fp, #-24]
 8031 01ac 142093E5 		ldr	r2, [r3, #20]
 8032 01b0 24301BE5 		ldr	r3, [fp, #-36]
 8033 01b4 030052E1 		cmp	r2, r3
 8034 01b8 0100008A 		bhi	.L519
 8035              		.loc 1 3825 5 discriminator 3
 8036 01bc 0230E0E3 		mvn	r3, #2
 8037              		.loc 1 3825 5
 8038 01c0 A10000EA 		b	.L510
 8039              	.L519:
 8040              		.loc 1 3825 5 discriminator 4
 8041 01c4 24301BE5 		ldr	r3, [fp, #-36]
 8042 01c8 8322A0E1 		lsl	r2, r3, #5
 8043 01cc 18301BE5 		ldr	r3, [fp, #-24]
 8044 01d0 0C3093E5 		ldr	r3, [r3, #12]
 8045 01d4 033082E0 		add	r3, r2, r3
 8046 01d8 0C300BE5 		str	r3, [fp, #-12]
 8047 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 8048 01e0 0300A0E1 		mov	r0, r3
 8049 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8050 01e8 10000BE5 		str	r0, [fp, #-16]
 8051              		.loc 1 3825 5 discriminator 1
 8052 01ec 10301BE5 		ldr	r3, [fp, #-16]
 8053 01f0 FF3803E2 		and	r3, r3, #16711680
 8054 01f4 020853E3 		cmp	r3, #131072
 8055 01f8 0100001A 		bne	.L520
 8056              		.loc 1 3825 5 discriminator 5
 8057 01fc 0830E0E3 		mvn	r3, #8
 8058              		.loc 1 3825 5
 8059 0200 910000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 210


 8060              	.L520:
 8061              		.loc 1 3825 5 discriminator 6
 8062 0204 10301BE5 		ldr	r3, [fp, #-16]
 8063 0208 233CA0E1 		lsr	r3, r3, #24
 8064 020c 030053E3 		cmp	r3, #3
 8065 0210 3F00000A 		beq	.L521
 8066              		.loc 1 3825 5 discriminator 7
 8067 0214 0130E0E3 		mvn	r3, #1
 8068              		.loc 1 3825 5
 8069 0218 8B0000EA 		b	.L510
 8070              	.L518:
 8071              		.loc 1 3825 5 discriminator 2
 8072 021c 24301BE5 		ldr	r3, [fp, #-36]
 8073 0220 2324A0E1 		lsr	r2, r3, #8
 8074 0224 18301BE5 		ldr	r3, [fp, #-24]
 8075 0228 143093E5 		ldr	r3, [r3, #20]
 8076 022c 030052E1 		cmp	r2, r3
 8077 0230 0100003A 		bcc	.L522
 8078              		.loc 1 3825 5 discriminator 8
 8079 0234 0230E0E3 		mvn	r3, #2
 8080              		.loc 1 3825 5
 8081 0238 830000EA 		b	.L510
 8082              	.L522:
 8083              		.loc 1 3825 5 discriminator 9
 8084 023c 24301BE5 		ldr	r3, [fp, #-36]
 8085 0240 2334A0E1 		lsr	r3, r3, #8
 8086 0244 8322A0E1 		lsl	r2, r3, #5
 8087 0248 18301BE5 		ldr	r3, [fp, #-24]
 8088 024c 0C3093E5 		ldr	r3, [r3, #12]
 8089 0250 033082E0 		add	r3, r2, r3
 8090 0254 0C300BE5 		str	r3, [fp, #-12]
 8091 0258 0C301BE5 		ldr	r3, [fp, #-12]
 8092 025c 0300A0E1 		mov	r0, r3
 8093 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8094 0264 10000BE5 		str	r0, [fp, #-16]
 8095              		.loc 1 3825 5 discriminator 1
 8096 0268 10301BE5 		ldr	r3, [fp, #-16]
 8097 026c FF3803E2 		and	r3, r3, #16711680
 8098 0270 020853E3 		cmp	r3, #131072
 8099 0274 0100001A 		bne	.L523
 8100              		.loc 1 3825 5 discriminator 10
 8101 0278 0830E0E3 		mvn	r3, #8
 8102              		.loc 1 3825 5
 8103 027c 720000EA 		b	.L510
 8104              	.L523:
 8105              		.loc 1 3825 5 discriminator 11
 8106 0280 10301BE5 		ldr	r3, [fp, #-16]
 8107 0284 233CA0E1 		lsr	r3, r3, #24
 8108 0288 030053E3 		cmp	r3, #3
 8109 028c 0100000A 		beq	.L524
 8110              		.loc 1 3825 5 discriminator 12
 8111 0290 0130E0E3 		mvn	r3, #1
 8112              		.loc 1 3825 5
 8113 0294 6C0000EA 		b	.L510
 8114              	.L524:
 8115              		.loc 1 3825 5 discriminator 13
 8116 0298 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 211


 8117 029c 7F2003E2 		and	r2, r3, #127
 8118 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 8119 02a4 143093E5 		ldr	r3, [r3, #20]
 8120 02a8 030052E1 		cmp	r2, r3
 8121 02ac 0100003A 		bcc	.L525
 8122              		.loc 1 3825 5 discriminator 14
 8123 02b0 0230E0E3 		mvn	r3, #2
 8124              		.loc 1 3825 5
 8125 02b4 640000EA 		b	.L510
 8126              	.L525:
 8127              		.loc 1 3825 5 discriminator 15
 8128 02b8 24301BE5 		ldr	r3, [fp, #-36]
 8129 02bc 7F3003E2 		and	r3, r3, #127
 8130 02c0 8322A0E1 		lsl	r2, r3, #5
 8131 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 8132 02c8 0C3093E5 		ldr	r3, [r3, #12]
 8133 02cc 033082E0 		add	r3, r2, r3
 8134 02d0 0C300BE5 		str	r3, [fp, #-12]
 8135 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 8136 02d8 0300A0E1 		mov	r0, r3
 8137 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8138 02e0 10000BE5 		str	r0, [fp, #-16]
 8139              		.loc 1 3825 5 discriminator 1
 8140 02e4 10301BE5 		ldr	r3, [fp, #-16]
 8141 02e8 FF3803E2 		and	r3, r3, #16711680
 8142 02ec 020853E3 		cmp	r3, #131072
 8143 02f0 0100001A 		bne	.L526
 8144              		.loc 1 3825 5 discriminator 16
 8145 02f4 0830E0E3 		mvn	r3, #8
 8146              		.loc 1 3825 5
 8147 02f8 530000EA 		b	.L510
 8148              	.L526:
 8149              		.loc 1 3825 5 discriminator 17
 8150 02fc 10301BE5 		ldr	r3, [fp, #-16]
 8151 0300 233CA0E1 		lsr	r3, r3, #24
 8152 0304 030053E3 		cmp	r3, #3
 8153 0308 0100000A 		beq	.L521
 8154              		.loc 1 3825 5 discriminator 18
 8155 030c 0130E0E3 		mvn	r3, #1
 8156              		.loc 1 3825 5
 8157 0310 4D0000EA 		b	.L510
 8158              	.L521:
3826:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3827:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3828:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_DES_PARENT);
 8159              		.loc 1 3828 5 is_stmt 1
 8160 0314 08301BE5 		ldr	r3, [fp, #-8]
 8161 0318 083093E5 		ldr	r3, [r3, #8]
 8162 031c 203003E2 		and	r3, r3, #32
 8163 0320 000053E3 		cmp	r3, #0
 8164 0324 0100001A 		bne	.L527
 8165              		.loc 1 3828 5 is_stmt 0 discriminator 1
 8166 0328 0630E0E3 		mvn	r3, #6
 8167              		.loc 1 3828 5
 8168 032c 460000EA 		b	.L510
 8169              	.L527:
3829:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 212


 8170              		.loc 1 3829 5 is_stmt 1
 8171 0330 0C301BE5 		ldr	r3, [fp, #-12]
 8172 0334 083093E5 		ldr	r3, [r3, #8]
 8173 0338 083003E2 		and	r3, r3, #8
 8174 033c 000053E3 		cmp	r3, #0
 8175 0340 0100001A 		bne	.L528
 8176              		.loc 1 3829 5 is_stmt 0 discriminator 1
 8177 0344 0630E0E3 		mvn	r3, #6
 8178              		.loc 1 3829 5
 8179 0348 3F0000EA 		b	.L510
 8180              	.L528:
3830:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3831:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 8181              		.loc 1 3831 13 is_stmt 1
 8182 034c 08301BE5 		ldr	r3, [fp, #-8]
 8183 0350 083093E5 		ldr	r3, [r3, #8]
 8184 0354 233AA0E1 		lsr	r3, r3, #20
 8185              		.loc 1 3831 7
 8186 0358 20201BE5 		ldr	r2, [fp, #-32]
 8187 035c 030052E1 		cmp	r2, r3
 8188 0360 0600008A 		bhi	.L529
3832:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8189              		.loc 1 3832 13
 8190 0364 08301BE5 		ldr	r3, [fp, #-8]
 8191 0368 083093E5 		ldr	r3, [r3, #8]
 8192 036c 2334A0E1 		lsr	r3, r3, #8
 8193 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3831:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8194              		.loc 1 3831 54 discriminator 1
 8195 0374 20201BE5 		ldr	r2, [fp, #-32]
 8196 0378 030052E1 		cmp	r2, r3
 8197 037c 0100002A 		bcs	.L530
 8198              	.L529:
3833:../../Source/Kernel/rme_kernel.c ****     {
3834:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3835:../../Source/Kernel/rme_kernel.c **** 
3836:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 8199              		.loc 1 3836 16
 8200 0380 0630E0E3 		mvn	r3, #6
 8201 0384 300000EA 		b	.L510
 8202              	.L530:
3837:../../Source/Kernel/rme_kernel.c ****     }
3838:../../Source/Kernel/rme_kernel.c ****     else
3839:../../Source/Kernel/rme_kernel.c ****     {
3840:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3841:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3842:../../Source/Kernel/rme_kernel.c ****     }
3843:../../Source/Kernel/rme_kernel.c **** 
3844:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3845:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 8203              		.loc 1 3845 14
 8204 0388 08301BE5 		ldr	r3, [fp, #-8]
 8205 038c 143093E5 		ldr	r3, [r3, #20]
 8206 0390 7330FFE6 		uxth	r3, r3
 8207              		.loc 1 3845 12
 8208 0394 20201BE5 		ldr	r2, [fp, #-32]
 8209 0398 3233A0E1 		lsr	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 213


 8210              		.loc 1 3845 7
 8211 039c 000053E3 		cmp	r3, #0
 8212 03a0 0100000A 		beq	.L531
3846:../../Source/Kernel/rme_kernel.c ****     {
3847:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3848:../../Source/Kernel/rme_kernel.c **** 
3849:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 8213              		.loc 1 3849 16
 8214 03a4 6430E0E3 		mvn	r3, #100
 8215 03a8 270000EA 		b	.L510
 8216              	.L531:
3850:../../Source/Kernel/rme_kernel.c ****     }
3851:../../Source/Kernel/rme_kernel.c ****     else
3852:../../Source/Kernel/rme_kernel.c ****     {
3853:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3854:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3855:../../Source/Kernel/rme_kernel.c ****     }
3856:../../Source/Kernel/rme_kernel.c **** 
3857:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3858:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict. Also,
3859:../../Source/Kernel/rme_kernel.c ****      * the HAL needs to guarantee that the Child is actually mapped there,
3860:../../Source/Kernel/rme_kernel.c ****      * and use that as the old value in CAS */
3861:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Unmap(Pgt_Parent,Pos,Pgt_Child)<0)
 8217              		.loc 1 3861 8
 8218 03ac 0C201BE5 		ldr	r2, [fp, #-12]
 8219 03b0 20101BE5 		ldr	r1, [fp, #-32]
 8220 03b4 08001BE5 		ldr	r0, [fp, #-8]
 8221 03b8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Unmap
 8222 03bc 0030A0E1 		mov	r3, r0
 8223              		.loc 1 3861 7 discriminator 1
 8224 03c0 000053E3 		cmp	r3, #0
 8225 03c4 010000AA 		bge	.L532
3862:../../Source/Kernel/rme_kernel.c ****     {
3863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3864:../../Source/Kernel/rme_kernel.c **** 
3865:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 8226              		.loc 1 3865 16
 8227 03c8 6530E0E3 		mvn	r3, #101
 8228 03cc 1E0000EA 		b	.L510
 8229              	.L532:
3866:../../Source/Kernel/rme_kernel.c ****     }
3867:../../Source/Kernel/rme_kernel.c ****     else
3868:../../Source/Kernel/rme_kernel.c ****     {
3869:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3870:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3871:../../Source/Kernel/rme_kernel.c ****     }
3872:../../Source/Kernel/rme_kernel.c ****     
3873:../../Source/Kernel/rme_kernel.c ****     /* Decrease refcnt for both parent/child */
3874:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 8230              		.loc 1 3874 14
 8231 03d0 08301BE5 		ldr	r3, [fp, #-8]
 8232 03d4 003093E5 		ldr	r3, [r3]
 8233 03d8 7330FFE6 		uxth	r3, r3
 8234 03dc 000053E3 		cmp	r3, #0
 8235 03e0 0200000A 		beq	.L533
 8236              		.loc 1 3874 14 is_stmt 0 discriminator 1
 8237 03e4 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 214


 8238 03e8 043093E5 		ldr	r3, [r3, #4]
 8239 03ec 000000EA 		b	.L534
 8240              	.L533:
 8241              		.loc 1 3874 14 discriminator 2
 8242 03f0 08301BE5 		ldr	r3, [fp, #-8]
 8243              	.L534:
 8244              		.loc 1 3874 13 is_stmt 1 discriminator 4
 8245 03f4 14300BE5 		str	r3, [fp, #-20]
3875:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8246              		.loc 1 3875 5
 8247 03f8 14301BE5 		ldr	r3, [fp, #-20]
 8248 03fc 043083E2 		add	r3, r3, #4
 8249 0400 0010E0E3 		mvn	r1, #0
 8250 0404 0300A0E1 		mov	r0, r3
 8251 0408 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3876:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 8252              		.loc 1 3876 14
 8253 040c 0C301BE5 		ldr	r3, [fp, #-12]
 8254 0410 003093E5 		ldr	r3, [r3]
 8255 0414 7330FFE6 		uxth	r3, r3
 8256 0418 000053E3 		cmp	r3, #0
 8257 041c 0200000A 		beq	.L535
 8258              		.loc 1 3876 14 is_stmt 0 discriminator 1
 8259 0420 0C301BE5 		ldr	r3, [fp, #-12]
 8260 0424 043093E5 		ldr	r3, [r3, #4]
 8261 0428 000000EA 		b	.L536
 8262              	.L535:
 8263              		.loc 1 3876 14 discriminator 2
 8264 042c 0C301BE5 		ldr	r3, [fp, #-12]
 8265              	.L536:
 8266              		.loc 1 3876 13 is_stmt 1 discriminator 4
 8267 0430 14300BE5 		str	r3, [fp, #-20]
3877:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8268              		.loc 1 3877 5
 8269 0434 14301BE5 		ldr	r3, [fp, #-20]
 8270 0438 043083E2 		add	r3, r3, #4
 8271 043c 0010E0E3 		mvn	r1, #0
 8272 0440 0300A0E1 		mov	r0, r3
 8273 0444 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3878:../../Source/Kernel/rme_kernel.c **** 
3879:../../Source/Kernel/rme_kernel.c ****     return 0;
 8274              		.loc 1 3879 12
 8275 0448 0030A0E3 		mov	r3, #0
 8276              	.L510:
3880:../../Source/Kernel/rme_kernel.c **** }
 8277              		.loc 1 3880 1
 8278 044c 0300A0E1 		mov	r0, r3
 8279 0450 04D04BE2 		sub	sp, fp, #4
 8280              		.cfi_def_cfa 13, 8
 8281              		@ sp needed
 8282 0454 0088BDE8 		pop	{fp, pc}
 8283              		.cfi_endproc
 8284              	.LFE37:
 8286              		.section	.text._RME_Kot_Init,"ax",%progbits
 8287              		.align	2
 8288              		.global	_RME_Kot_Init
 8289              		.syntax unified
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 215


 8290              		.arm
 8292              	_RME_Kot_Init:
 8293              	.LFB38:
3881:../../Source/Kernel/rme_kernel.c **** #endif
3882:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Des *************************************************/
3883:../../Source/Kernel/rme_kernel.c **** 
3884:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Init *****************************************************
3885:../../Source/Kernel/rme_kernel.c **** Description : Initialize the kernel object table according to the total kernel
3886:../../Source/Kernel/rme_kernel.c ****               memory size, which decides the number of words in the table.
3887:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Words - the number of words in the table.
3888:../../Source/Kernel/rme_kernel.c **** Output      : None.
3889:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the number of words are is not sufficient to hold 
3890:../../Source/Kernel/rme_kernel.c ****                           all kernel memory, -1; else 0.
3891:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3892:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Init(rme_ptr_t Word)
3893:../../Source/Kernel/rme_kernel.c **** {
 8294              		.loc 1 3893 1
 8295              		.cfi_startproc
 8296              		@ args = 0, pretend = 0, frame = 16
 8297              		@ frame_needed = 1, uses_anonymous_args = 0
 8298              		@ link register save eliminated.
 8299 0000 04B02DE5 		str	fp, [sp, #-4]!
 8300              		.cfi_def_cfa_offset 4
 8301              		.cfi_offset 11, -4
 8302 0004 00B08DE2 		add	fp, sp, #0
 8303              		.cfi_def_cfa_register 11
 8304 0008 14D04DE2 		sub	sp, sp, #20
 8305 000c 10000BE5 		str	r0, [fp, #-16]
3894:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3895:../../Source/Kernel/rme_kernel.c ****     
3896:../../Source/Kernel/rme_kernel.c ****     if(Word<RME_KOT_WORD_NUM)
 8306              		.loc 1 3896 7
 8307 0010 10301BE5 		ldr	r3, [fp, #-16]
 8308 0014 020953E3 		cmp	r3, #32768
 8309 0018 0100002A 		bcs	.L538
3897:../../Source/Kernel/rme_kernel.c ****     {
3898:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3899:../../Source/Kernel/rme_kernel.c **** 
3900:../../Source/Kernel/rme_kernel.c ****         return -1;
 8310              		.loc 1 3900 16
 8311 001c 0030E0E3 		mvn	r3, #0
 8312 0020 0F0000EA 		b	.L539
 8313              	.L538:
3901:../../Source/Kernel/rme_kernel.c ****     }
3902:../../Source/Kernel/rme_kernel.c ****     else
3903:../../Source/Kernel/rme_kernel.c ****     {
3904:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3905:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3906:../../Source/Kernel/rme_kernel.c ****     }
3907:../../Source/Kernel/rme_kernel.c **** 
3908:../../Source/Kernel/rme_kernel.c ****     /* Zero out the whole table */
3909:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Word;Count++)
 8314              		.loc 1 3909 14
 8315 0024 0030A0E3 		mov	r3, #0
 8316 0028 08300BE5 		str	r3, [fp, #-8]
 8317              		.loc 1 3909 5
 8318 002c 070000EA 		b	.L540
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 216


 8319              	.L541:
3910:../../Source/Kernel/rme_kernel.c ****     {
3911:../../Source/Kernel/rme_kernel.c ****         RME_KOT_VA_BASE[Count]=0U;
 8320              		.loc 1 3911 31
 8321 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8322 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8323 0038 08201BE5 		ldr	r2, [fp, #-8]
 8324 003c 0010A0E3 		mov	r1, #0
 8325 0040 021183E7 		str	r1, [r3, r2, lsl #2]
3909:../../Source/Kernel/rme_kernel.c ****     {
 8326              		.loc 1 3909 34 discriminator 3
 8327 0044 08301BE5 		ldr	r3, [fp, #-8]
 8328 0048 013083E2 		add	r3, r3, #1
 8329 004c 08300BE5 		str	r3, [fp, #-8]
 8330              	.L540:
3909:../../Source/Kernel/rme_kernel.c ****     {
 8331              		.loc 1 3909 23 discriminator 1
 8332 0050 08201BE5 		ldr	r2, [fp, #-8]
 8333 0054 10301BE5 		ldr	r3, [fp, #-16]
 8334 0058 030052E1 		cmp	r2, r3
 8335 005c F3FFFF3A 		bcc	.L541
3912:../../Source/Kernel/rme_kernel.c ****     }
3913:../../Source/Kernel/rme_kernel.c **** 
3914:../../Source/Kernel/rme_kernel.c ****     return 0;
 8336              		.loc 1 3914 12
 8337 0060 0030A0E3 		mov	r3, #0
 8338              	.L539:
3915:../../Source/Kernel/rme_kernel.c **** }
 8339              		.loc 1 3915 1
 8340 0064 0300A0E1 		mov	r0, r3
 8341 0068 00D08BE2 		add	sp, fp, #0
 8342              		.cfi_def_cfa_register 13
 8343              		@ sp needed
 8344 006c 04B09DE4 		ldr	fp, [sp], #4
 8345              		.cfi_restore 11
 8346              		.cfi_def_cfa_offset 0
 8347 0070 1EFF2FE1 		bx	lr
 8348              		.cfi_endproc
 8349              	.LFE38:
 8351              		.section	.rodata
 8352 0039 000000   		.align	2
 8353              	.LC5:
 8354 003c 0D0A4368 		.ascii	"\015\012Check&Mark the start\000"
 8354      65636B26 
 8354      4D61726B 
 8354      20746865 
 8354      20737461 
 8355              		.section	.text._RME_Kot_Mark,"ax",%progbits
 8356              		.align	2
 8357              		.global	_RME_Kot_Mark
 8358              		.syntax unified
 8359              		.arm
 8361              	_RME_Kot_Mark:
 8362              	.LFB39:
3916:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Init ************************************************/
3917:../../Source/Kernel/rme_kernel.c **** 
3918:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Mark *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 217


3919:../../Source/Kernel/rme_kernel.c **** Description : Populate the kernel object bitmap contiguously.
3920:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
3921:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to populate.
3922:../../Source/Kernel/rme_kernel.c **** Output      : None.
3923:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3924:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3925:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Mark(rme_ptr_t Kaddr,
3926:../../Source/Kernel/rme_kernel.c ****                         rme_ptr_t Size)
3927:../../Source/Kernel/rme_kernel.c **** {
 8363              		.loc 1 3927 1
 8364              		.cfi_startproc
 8365              		@ args = 0, pretend = 0, frame = 40
 8366              		@ frame_needed = 1, uses_anonymous_args = 0
 8367 0000 00482DE9 		push	{fp, lr}
 8368              		.cfi_def_cfa_offset 8
 8369              		.cfi_offset 11, -8
 8370              		.cfi_offset 14, -4
 8371 0004 04B08DE2 		add	fp, sp, #4
 8372              		.cfi_def_cfa 11, 4
 8373 0008 28D04DE2 		sub	sp, sp, #40
 8374 000c 28000BE5 		str	r0, [fp, #-40]
 8375 0010 2C100BE5 		str	r1, [fp, #-44]
3928:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3929:../../Source/Kernel/rme_kernel.c ****     /* The old value */
3930:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Val;
3931:../../Source/Kernel/rme_kernel.c ****     /* Whether we need to undo our operations because of CAS failure */
3932:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Undo;
3933:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
3934:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
3935:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
3936:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
3937:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
3938:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
3939:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
3940:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
3941:../../Source/Kernel/rme_kernel.c **** 
3942:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
3943:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8376              		.loc 1 3943 14
 8377 0014 28301BE5 		ldr	r3, [fp, #-40]
 8378 0018 0F3003E2 		and	r3, r3, #15
 8379              		.loc 1 3943 7
 8380 001c 000053E3 		cmp	r3, #0
 8381 0020 0100000A 		beq	.L543
3944:../../Source/Kernel/rme_kernel.c ****     {
3945:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3946:../../Source/Kernel/rme_kernel.c ****         //RME_DBG_S("\r\nCheck if the marking is well aligned");
3947:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8382              		.loc 1 3947 16
 8383 0024 0030E0E3 		mvn	r3, #0
 8384 0028 C50000EA 		b	.L544
 8385              	.L543:
3948:../../Source/Kernel/rme_kernel.c ****     }
3949:../../Source/Kernel/rme_kernel.c ****     else
3950:../../Source/Kernel/rme_kernel.c ****     {
3951:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3952:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 218


3953:../../Source/Kernel/rme_kernel.c ****     }
3954:../../Source/Kernel/rme_kernel.c ****     
3955:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
3956:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8386              		.loc 1 3956 17
 8387 002c 28301BE5 		ldr	r3, [fp, #-40]
 8388 0030 7F3483E2 		add	r3, r3, #2130706432
 8389              		.loc 1 3956 10
 8390 0034 2332A0E1 		lsr	r3, r3, #4
 8391 0038 10300BE5 		str	r3, [fp, #-16]
3957:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8392              		.loc 1 3957 16
 8393 003c 10301BE5 		ldr	r3, [fp, #-16]
 8394 0040 1F3003E2 		and	r3, r3, #31
 8395              		.loc 1 3957 15
 8396 0044 0020E0E3 		mvn	r2, #0
 8397 0048 1233A0E1 		lsl	r3, r2, r3
 8398 004c 14300BE5 		str	r3, [fp, #-20]
3958:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8399              		.loc 1 3958 10
 8400 0050 10301BE5 		ldr	r3, [fp, #-16]
 8401 0054 A332A0E1 		lsr	r3, r3, #5
 8402 0058 10300BE5 		str	r3, [fp, #-16]
3959:../../Source/Kernel/rme_kernel.c ****     
3960:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8403              		.loc 1 3960 15
 8404 005c 28201BE5 		ldr	r2, [fp, #-40]
 8405 0060 2C301BE5 		ldr	r3, [fp, #-44]
 8406 0064 033082E0 		add	r3, r2, r3
 8407              		.loc 1 3960 23
 8408 0068 7F3483E2 		add	r3, r3, #2130706432
 8409 006c 013043E2 		sub	r3, r3, #1
 8410              		.loc 1 3960 8
 8411 0070 2332A0E1 		lsr	r3, r3, #4
 8412 0074 18300BE5 		str	r3, [fp, #-24]
3961:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8413              		.loc 1 3961 14
 8414 0078 18301BE5 		ldr	r3, [fp, #-24]
 8415 007c 0330E0E1 		mvn	r3, r3
 8416 0080 1F3003E2 		and	r3, r3, #31
 8417              		.loc 1 3961 13
 8418 0084 0020E0E3 		mvn	r2, #0
 8419 0088 3233A0E1 		lsr	r3, r2, r3
 8420 008c 1C300BE5 		str	r3, [fp, #-28]
3962:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8421              		.loc 1 3962 8
 8422 0090 18301BE5 		ldr	r3, [fp, #-24]
 8423 0094 A332A0E1 		lsr	r3, r3, #5
 8424 0098 18300BE5 		str	r3, [fp, #-24]
3963:../../Source/Kernel/rme_kernel.c ****     
3964:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
3965:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8425              		.loc 1 3965 7
 8426 009c 10201BE5 		ldr	r2, [fp, #-16]
 8427 00a0 18301BE5 		ldr	r3, [fp, #-24]
 8428 00a4 030052E1 		cmp	r2, r3
 8429 00a8 1F00001A 		bne	.L545
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 219


3966:../../Source/Kernel/rme_kernel.c ****     {
3967:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3968:../../Source/Kernel/rme_kernel.c ****         
3969:../../Source/Kernel/rme_kernel.c ****         /* Someone already populated something here */
3970:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8430              		.loc 1 3970 16
 8431 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8432 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8433 00b4 10201BE5 		ldr	r2, [fp, #-16]
 8434 00b8 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8435 00bc 20300BE5 		str	r3, [fp, #-32]
3971:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&(Mask_Begin&Mask_End))!=0U)
 8436              		.loc 1 3971 32
 8437 00c0 14201BE5 		ldr	r2, [fp, #-20]
 8438 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 8439 00c8 032002E0 		and	r2, r2, r3
 8440              		.loc 1 3971 20
 8441 00cc 20301BE5 		ldr	r3, [fp, #-32]
 8442 00d0 023003E0 		and	r3, r3, r2
 8443              		.loc 1 3971 11
 8444 00d4 000053E3 		cmp	r3, #0
 8445 00d8 0100000A 		beq	.L546
3972:../../Source/Kernel/rme_kernel.c ****         {
3973:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3974:../../Source/Kernel/rme_kernel.c ****             /*RME_DBG_S("\r\nSomeone already populated something here");
3975:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nOld_Val ");
3976:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Old_Val);
3977:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nMask_Begin ");
3978:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Mask_Begin);
3979:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nMask_End ");
3980:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Mask_End);*/
3981:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8446              		.loc 1 3981 20
 8447 00dc 0030E0E3 		mvn	r3, #0
 8448 00e0 970000EA 		b	.L544
 8449              	.L546:
3982:../../Source/Kernel/rme_kernel.c ****         }
3983:../../Source/Kernel/rme_kernel.c ****         else
3984:../../Source/Kernel/rme_kernel.c ****         {
3985:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3986:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3987:../../Source/Kernel/rme_kernel.c ****         }
3988:../../Source/Kernel/rme_kernel.c ****         
3989:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the marking with CAS */
3990:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8450              		.loc 1 3990 12
 8451 00e4 10301BE5 		ldr	r3, [fp, #-16]
 8452 00e8 0321A0E1 		lsl	r2, r3, #2
 8453 00ec 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8454 00f0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8455 00f4 030082E0 		add	r0, r2, r3
 8456 00f8 14201BE5 		ldr	r2, [fp, #-20]
 8457 00fc 1C301BE5 		ldr	r3, [fp, #-28]
 8458 0100 032002E0 		and	r2, r2, r3
 8459 0104 20301BE5 		ldr	r3, [fp, #-32]
 8460 0108 033082E1 		orr	r3, r2, r3
 8461 010c 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 220


 8462 0110 20101BE5 		ldr	r1, [fp, #-32]
 8463 0114 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8464 0118 0030A0E1 		mov	r3, r0
 8465              		.loc 1 3990 11 discriminator 1
 8466 011c 000053E3 		cmp	r3, #0
 8467 0120 8600001A 		bne	.L547
3991:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3992:../../Source/Kernel/rme_kernel.c ****                          Old_Val|(Mask_Begin&Mask_End))==RME_CASFAIL)
3993:../../Source/Kernel/rme_kernel.c ****         {
3994:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3995:../../Source/Kernel/rme_kernel.c ****             //RME_DBG_S("\r\nCheck done, do the marking with CAS");
3996:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8468              		.loc 1 3996 20
 8469 0124 0030E0E3 		mvn	r3, #0
 8470 0128 850000EA 		b	.L544
 8471              	.L545:
3997:../../Source/Kernel/rme_kernel.c ****         }
3998:../../Source/Kernel/rme_kernel.c ****         else
3999:../../Source/Kernel/rme_kernel.c ****         {
4000:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4001:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4002:../../Source/Kernel/rme_kernel.c ****         }
4003:../../Source/Kernel/rme_kernel.c ****     }
4004:../../Source/Kernel/rme_kernel.c ****     else
4005:../../Source/Kernel/rme_kernel.c ****     {
4006:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4007:../../Source/Kernel/rme_kernel.c ****         
4008:../../Source/Kernel/rme_kernel.c ****         Undo=0U;
 8472              		.loc 1 4008 13
 8473 012c 0030A0E3 		mov	r3, #0
 8474 0130 0C300BE5 		str	r3, [fp, #-12]
4009:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the start */
4010:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8475              		.loc 1 4010 16
 8476 0134 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8477 0138 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8478 013c 10201BE5 		ldr	r2, [fp, #-16]
 8479 0140 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8480 0144 20300BE5 		str	r3, [fp, #-32]
4011:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&Mask_Begin)!=0U)
 8481              		.loc 1 4011 20
 8482 0148 20201BE5 		ldr	r2, [fp, #-32]
 8483 014c 14301BE5 		ldr	r3, [fp, #-20]
 8484 0150 023003E0 		and	r3, r3, r2
 8485              		.loc 1 4011 11
 8486 0154 000053E3 		cmp	r3, #0
 8487 0158 0400000A 		beq	.L548
4012:../../Source/Kernel/rme_kernel.c ****         {
4013:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4014:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nCheck&Mark the start");
 8488              		.loc 1 4014 13
 8489 015c 000000E3 		movw	r0, #:lower16:.LC5
 8490 0160 000040E3 		movt	r0, #:upper16:.LC5
 8491 0164 FEFFFFEB 		bl	RME_Str_Print
4015:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8492              		.loc 1 4015 20
 8493 0168 0030E0E3 		mvn	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 221


 8494 016c 740000EA 		b	.L544
 8495              	.L548:
4016:../../Source/Kernel/rme_kernel.c ****         }
4017:../../Source/Kernel/rme_kernel.c ****         else
4018:../../Source/Kernel/rme_kernel.c ****         {
4019:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4020:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4021:../../Source/Kernel/rme_kernel.c ****         }
4022:../../Source/Kernel/rme_kernel.c ****         
4023:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8496              		.loc 1 4023 12
 8497 0170 10301BE5 		ldr	r3, [fp, #-16]
 8498 0174 0321A0E1 		lsl	r2, r3, #2
 8499 0178 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8500 017c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8501 0180 030082E0 		add	r0, r2, r3
 8502 0184 20201BE5 		ldr	r2, [fp, #-32]
 8503 0188 14301BE5 		ldr	r3, [fp, #-20]
 8504 018c 033082E1 		orr	r3, r2, r3
 8505 0190 0320A0E1 		mov	r2, r3
 8506 0194 20101BE5 		ldr	r1, [fp, #-32]
 8507 0198 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8508 019c 0030A0E1 		mov	r3, r0
 8509              		.loc 1 4023 11 discriminator 1
 8510 01a0 000053E3 		cmp	r3, #0
 8511 01a4 0100001A 		bne	.L549
4024:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
4025:../../Source/Kernel/rme_kernel.c ****                          Old_Val|Mask_Begin)==RME_CASFAIL)
4026:../../Source/Kernel/rme_kernel.c ****         {
4027:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4028:../../Source/Kernel/rme_kernel.c ****             //RME_DBG_S("\r\nRME_COMP_SWAP(&RME_KOT_VA_BASE[Start],");
4029:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8512              		.loc 1 4029 20
 8513 01a8 0030E0E3 		mvn	r3, #0
 8514 01ac 640000EA 		b	.L544
 8515              	.L549:
4030:../../Source/Kernel/rme_kernel.c ****         }
4031:../../Source/Kernel/rme_kernel.c ****         else
4032:../../Source/Kernel/rme_kernel.c ****         {
4033:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4034:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4035:../../Source/Kernel/rme_kernel.c ****         }
4036:../../Source/Kernel/rme_kernel.c ****         
4037:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the middle */
4038:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End;Count++)
 8516              		.loc 1 4038 18
 8517 01b0 10301BE5 		ldr	r3, [fp, #-16]
 8518 01b4 013083E2 		add	r3, r3, #1
 8519 01b8 08300BE5 		str	r3, [fp, #-8]
 8520              		.loc 1 4038 9
 8521 01bc 1C0000EA 		b	.L550
 8522              	.L554:
4039:../../Source/Kernel/rme_kernel.c ****         {
4040:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[Count];
 8523              		.loc 1 4040 20
 8524 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8525 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 222


 8526 01c8 08201BE5 		ldr	r2, [fp, #-8]
 8527 01cc 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8528 01d0 20300BE5 		str	r3, [fp, #-32]
4041:../../Source/Kernel/rme_kernel.c ****             if(Old_Val!=0U)
 8529              		.loc 1 4041 15
 8530 01d4 20301BE5 		ldr	r3, [fp, #-32]
 8531 01d8 000053E3 		cmp	r3, #0
 8532 01dc 0200000A 		beq	.L551
4042:../../Source/Kernel/rme_kernel.c ****             {
4043:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4044:../../Source/Kernel/rme_kernel.c **** 
4045:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8533              		.loc 1 4045 21
 8534 01e0 0130A0E3 		mov	r3, #1
 8535 01e4 0C300BE5 		str	r3, [fp, #-12]
4046:../../Source/Kernel/rme_kernel.c ****                 break;
 8536              		.loc 1 4046 17
 8537 01e8 150000EA 		b	.L552
 8538              	.L551:
4047:../../Source/Kernel/rme_kernel.c ****             }
4048:../../Source/Kernel/rme_kernel.c ****             else
4049:../../Source/Kernel/rme_kernel.c ****             {
4050:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4051:../../Source/Kernel/rme_kernel.c ****                 
4052:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Count],
 8539              		.loc 1 4052 20
 8540 01ec 08301BE5 		ldr	r3, [fp, #-8]
 8541 01f0 0321A0E1 		lsl	r2, r3, #2
 8542 01f4 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8543 01f8 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8544 01fc 033082E0 		add	r3, r2, r3
 8545 0200 0020E0E3 		mvn	r2, #0
 8546 0204 20101BE5 		ldr	r1, [fp, #-32]
 8547 0208 0300A0E1 		mov	r0, r3
 8548 020c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8549 0210 0030A0E1 		mov	r3, r0
 8550              		.loc 1 4052 19 discriminator 1
 8551 0214 000053E3 		cmp	r3, #0
 8552 0218 0200001A 		bne	.L553
4053:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4054:../../Source/Kernel/rme_kernel.c ****                                  RME_MASK_FULL)==RME_CASFAIL)
4055:../../Source/Kernel/rme_kernel.c ****                 {
4056:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4057:../../Source/Kernel/rme_kernel.c ****                     
4058:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8553              		.loc 1 4058 25
 8554 021c 0130A0E3 		mov	r3, #1
 8555 0220 0C300BE5 		str	r3, [fp, #-12]
4059:../../Source/Kernel/rme_kernel.c ****                     break;
 8556              		.loc 1 4059 21
 8557 0224 060000EA 		b	.L552
 8558              	.L553:
4038:../../Source/Kernel/rme_kernel.c ****         {
 8559              		.loc 1 4038 43 discriminator 2
 8560 0228 08301BE5 		ldr	r3, [fp, #-8]
 8561 022c 013083E2 		add	r3, r3, #1
 8562 0230 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 223


 8563              	.L550:
4038:../../Source/Kernel/rme_kernel.c ****         {
 8564              		.loc 1 4038 33 discriminator 1
 8565 0234 08201BE5 		ldr	r2, [fp, #-8]
 8566 0238 18301BE5 		ldr	r3, [fp, #-24]
 8567 023c 030052E1 		cmp	r2, r3
 8568 0240 DEFFFF3A 		bcc	.L554
 8569              	.L552:
4060:../../Source/Kernel/rme_kernel.c ****                 }
4061:../../Source/Kernel/rme_kernel.c ****                 else
4062:../../Source/Kernel/rme_kernel.c ****                 {
4063:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4064:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4065:../../Source/Kernel/rme_kernel.c ****                 }
4066:../../Source/Kernel/rme_kernel.c ****             }
4067:../../Source/Kernel/rme_kernel.c ****         }
4068:../../Source/Kernel/rme_kernel.c ****         
4069:../../Source/Kernel/rme_kernel.c ****         /* See if the middle part failed. If yes, we skip the end marking */
4070:../../Source/Kernel/rme_kernel.c ****         if(Undo==0U)
 8570              		.loc 1 4070 11
 8571 0244 0C301BE5 		ldr	r3, [fp, #-12]
 8572 0248 000053E3 		cmp	r3, #0
 8573 024c 1C00001A 		bne	.L555
4071:../../Source/Kernel/rme_kernel.c ****         {
4072:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4073:../../Source/Kernel/rme_kernel.c **** 
4074:../../Source/Kernel/rme_kernel.c ****             /* Check&Mark the end */
4075:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[End];
 8574              		.loc 1 4075 20
 8575 0250 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8576 0254 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8577 0258 18201BE5 		ldr	r2, [fp, #-24]
 8578 025c 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8579 0260 20300BE5 		str	r3, [fp, #-32]
4076:../../Source/Kernel/rme_kernel.c ****             if((Old_Val&Mask_End)!=0U)
 8580              		.loc 1 4076 24
 8581 0264 20201BE5 		ldr	r2, [fp, #-32]
 8582 0268 1C301BE5 		ldr	r3, [fp, #-28]
 8583 026c 023003E0 		and	r3, r3, r2
 8584              		.loc 1 4076 15
 8585 0270 000053E3 		cmp	r3, #0
 8586 0274 0200000A 		beq	.L556
4077:../../Source/Kernel/rme_kernel.c ****             {
4078:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4079:../../Source/Kernel/rme_kernel.c **** 
4080:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8587              		.loc 1 4080 21
 8588 0278 0130A0E3 		mov	r3, #1
 8589 027c 0C300BE5 		str	r3, [fp, #-12]
 8590 0280 0F0000EA 		b	.L555
 8591              	.L556:
4081:../../Source/Kernel/rme_kernel.c ****             }
4082:../../Source/Kernel/rme_kernel.c ****             else
4083:../../Source/Kernel/rme_kernel.c ****             {
4084:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4085:../../Source/Kernel/rme_kernel.c **** 
4086:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[End],
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 224


 8592              		.loc 1 4086 20
 8593 0284 18301BE5 		ldr	r3, [fp, #-24]
 8594 0288 0321A0E1 		lsl	r2, r3, #2
 8595 028c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8596 0290 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8597 0294 030082E0 		add	r0, r2, r3
 8598 0298 20201BE5 		ldr	r2, [fp, #-32]
 8599 029c 1C301BE5 		ldr	r3, [fp, #-28]
 8600 02a0 033082E1 		orr	r3, r2, r3
 8601 02a4 0320A0E1 		mov	r2, r3
 8602 02a8 20101BE5 		ldr	r1, [fp, #-32]
 8603 02ac FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8604 02b0 0030A0E1 		mov	r3, r0
 8605              		.loc 1 4086 19 discriminator 1
 8606 02b4 000053E3 		cmp	r3, #0
 8607 02b8 0100001A 		bne	.L555
4087:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4088:../../Source/Kernel/rme_kernel.c ****                                  Old_Val|Mask_End)==RME_CASFAIL)
4089:../../Source/Kernel/rme_kernel.c ****                 {
4090:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4091:../../Source/Kernel/rme_kernel.c **** 
4092:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8608              		.loc 1 4092 25
 8609 02bc 0130A0E3 		mov	r3, #1
 8610 02c0 0C300BE5 		str	r3, [fp, #-12]
 8611              	.L555:
4093:../../Source/Kernel/rme_kernel.c ****                 }
4094:../../Source/Kernel/rme_kernel.c ****                 else
4095:../../Source/Kernel/rme_kernel.c ****                 {
4096:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4097:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4098:../../Source/Kernel/rme_kernel.c ****                 }
4099:../../Source/Kernel/rme_kernel.c ****             }
4100:../../Source/Kernel/rme_kernel.c ****         }
4101:../../Source/Kernel/rme_kernel.c ****         else
4102:../../Source/Kernel/rme_kernel.c ****         {
4103:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4104:../../Source/Kernel/rme_kernel.c ****         }
4105:../../Source/Kernel/rme_kernel.c ****         
4106:../../Source/Kernel/rme_kernel.c ****         /* See if we need to undo. If yes, proceed to unroll and return error */
4107:../../Source/Kernel/rme_kernel.c ****         if(Undo!=0U)
 8612              		.loc 1 4107 11
 8613 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 8614 02c8 000053E3 		cmp	r3, #0
 8615 02cc 1B00000A 		beq	.L547
4108:../../Source/Kernel/rme_kernel.c ****         {
4109:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4110:../../Source/Kernel/rme_kernel.c **** 
4111:../../Source/Kernel/rme_kernel.c ****             /* Undo the middle part - no CAS neeeded, write back is always atomic */
4112:../../Source/Kernel/rme_kernel.c ****             for(Count--;Count>Start;Count--)
 8616              		.loc 1 4112 22
 8617 02d0 08301BE5 		ldr	r3, [fp, #-8]
 8618 02d4 013043E2 		sub	r3, r3, #1
 8619 02d8 08300BE5 		str	r3, [fp, #-8]
 8620              		.loc 1 4112 13
 8621 02dc 070000EA 		b	.L557
 8622              	.L558:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 225


4113:../../Source/Kernel/rme_kernel.c ****             {
4114:../../Source/Kernel/rme_kernel.c ****                 RME_KOT_VA_BASE[Count]=0U;
 8623              		.loc 1 4114 39
 8624 02e0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8625 02e4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8626 02e8 08201BE5 		ldr	r2, [fp, #-8]
 8627 02ec 0010A0E3 		mov	r1, #0
 8628 02f0 021183E7 		str	r1, [r3, r2, lsl #2]
4112:../../Source/Kernel/rme_kernel.c ****             {
 8629              		.loc 1 4112 42 discriminator 3
 8630 02f4 08301BE5 		ldr	r3, [fp, #-8]
 8631 02f8 013043E2 		sub	r3, r3, #1
 8632 02fc 08300BE5 		str	r3, [fp, #-8]
 8633              	.L557:
4112:../../Source/Kernel/rme_kernel.c ****             {
 8634              		.loc 1 4112 30 discriminator 1
 8635 0300 08201BE5 		ldr	r2, [fp, #-8]
 8636 0304 10301BE5 		ldr	r3, [fp, #-16]
 8637 0308 030052E1 		cmp	r2, r3
 8638 030c F3FFFF8A 		bhi	.L558
4115:../../Source/Kernel/rme_kernel.c ****             }
4116:../../Source/Kernel/rme_kernel.c ****             /* Undo the first word - need atomic instructions */
4117:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8639              		.loc 1 4117 13
 8640 0310 10301BE5 		ldr	r3, [fp, #-16]
 8641 0314 0321A0E1 		lsl	r2, r3, #2
 8642 0318 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8643 031c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8644 0320 032082E0 		add	r2, r2, r3
 8645 0324 14301BE5 		ldr	r3, [fp, #-20]
 8646 0328 0330E0E1 		mvn	r3, r3
 8647 032c 0310A0E1 		mov	r1, r3
 8648 0330 0200A0E1 		mov	r0, r2
 8649 0334 FEFFFFEB 		bl	_RME_Fetch_And_Single
4118:../../Source/Kernel/rme_kernel.c ****             /* Return failure */
4119:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8650              		.loc 1 4119 20
 8651 0338 0030E0E3 		mvn	r3, #0
 8652 033c 000000EA 		b	.L544
 8653              	.L547:
4120:../../Source/Kernel/rme_kernel.c ****         }
4121:../../Source/Kernel/rme_kernel.c ****         else
4122:../../Source/Kernel/rme_kernel.c ****         {
4123:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4124:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4125:../../Source/Kernel/rme_kernel.c ****         }
4126:../../Source/Kernel/rme_kernel.c ****     }
4127:../../Source/Kernel/rme_kernel.c **** 
4128:../../Source/Kernel/rme_kernel.c ****     return 0;
 8654              		.loc 1 4128 12
 8655 0340 0030A0E3 		mov	r3, #0
 8656              	.L544:
4129:../../Source/Kernel/rme_kernel.c **** }
 8657              		.loc 1 4129 1
 8658 0344 0300A0E1 		mov	r0, r3
 8659 0348 04D04BE2 		sub	sp, fp, #4
 8660              		.cfi_def_cfa 13, 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 226


 8661              		@ sp needed
 8662 034c 0088BDE8 		pop	{fp, pc}
 8663              		.cfi_endproc
 8664              	.LFE39:
 8666              		.section	.text._RME_Kot_Erase,"ax",%progbits
 8667              		.align	2
 8668              		.global	_RME_Kot_Erase
 8669              		.syntax unified
 8670              		.arm
 8672              	_RME_Kot_Erase:
 8673              	.LFB40:
4130:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Mark ************************************************/
4131:../../Source/Kernel/rme_kernel.c **** 
4132:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Erase ****************************************************
4133:../../Source/Kernel/rme_kernel.c **** Description : Depopulate the kernel object bitmap contiguously. We do not need 
4134:../../Source/Kernel/rme_kernel.c ****               CAS on erasure operations.
4135:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
4136:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to depopulate.
4137:../../Source/Kernel/rme_kernel.c **** Output      : None.
4138:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4139:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4140:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Erase(rme_ptr_t Kaddr,
4141:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t Size)
4142:../../Source/Kernel/rme_kernel.c **** {
 8674              		.loc 1 4142 1
 8675              		.cfi_startproc
 8676              		@ args = 0, pretend = 0, frame = 32
 8677              		@ frame_needed = 1, uses_anonymous_args = 0
 8678 0000 00482DE9 		push	{fp, lr}
 8679              		.cfi_def_cfa_offset 8
 8680              		.cfi_offset 11, -8
 8681              		.cfi_offset 14, -4
 8682 0004 04B08DE2 		add	fp, sp, #4
 8683              		.cfi_def_cfa 11, 4
 8684 0008 20D04DE2 		sub	sp, sp, #32
 8685 000c 20000BE5 		str	r0, [fp, #-32]
 8686 0010 24100BE5 		str	r1, [fp, #-36]
4143:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
4144:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
4145:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
4146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
4147:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
4148:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
4149:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
4150:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
4151:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
4152:../../Source/Kernel/rme_kernel.c **** 
4153:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
4154:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8687              		.loc 1 4154 14
 8688 0014 20301BE5 		ldr	r3, [fp, #-32]
 8689 0018 0F3003E2 		and	r3, r3, #15
 8690              		.loc 1 4154 7
 8691 001c 000053E3 		cmp	r3, #0
 8692 0020 0100000A 		beq	.L560
4155:../../Source/Kernel/rme_kernel.c ****     {
4156:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 227


4157:../../Source/Kernel/rme_kernel.c **** 
4158:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8693              		.loc 1 4158 16
 8694 0024 0030E0E3 		mvn	r3, #0
 8695 0028 8A0000EA 		b	.L561
 8696              	.L560:
4159:../../Source/Kernel/rme_kernel.c ****     }
4160:../../Source/Kernel/rme_kernel.c ****     else
4161:../../Source/Kernel/rme_kernel.c ****     {
4162:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4163:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4164:../../Source/Kernel/rme_kernel.c ****     }
4165:../../Source/Kernel/rme_kernel.c ****     
4166:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
4167:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8697              		.loc 1 4167 17
 8698 002c 20301BE5 		ldr	r3, [fp, #-32]
 8699 0030 7F3483E2 		add	r3, r3, #2130706432
 8700              		.loc 1 4167 10
 8701 0034 2332A0E1 		lsr	r3, r3, #4
 8702 0038 0C300BE5 		str	r3, [fp, #-12]
4168:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8703              		.loc 1 4168 16
 8704 003c 0C301BE5 		ldr	r3, [fp, #-12]
 8705 0040 1F3003E2 		and	r3, r3, #31
 8706              		.loc 1 4168 15
 8707 0044 0020E0E3 		mvn	r2, #0
 8708 0048 1233A0E1 		lsl	r3, r2, r3
 8709 004c 10300BE5 		str	r3, [fp, #-16]
4169:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8710              		.loc 1 4169 10
 8711 0050 0C301BE5 		ldr	r3, [fp, #-12]
 8712 0054 A332A0E1 		lsr	r3, r3, #5
 8713 0058 0C300BE5 		str	r3, [fp, #-12]
4170:../../Source/Kernel/rme_kernel.c ****     
4171:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8714              		.loc 1 4171 15
 8715 005c 20201BE5 		ldr	r2, [fp, #-32]
 8716 0060 24301BE5 		ldr	r3, [fp, #-36]
 8717 0064 033082E0 		add	r3, r2, r3
 8718              		.loc 1 4171 23
 8719 0068 7F3483E2 		add	r3, r3, #2130706432
 8720 006c 013043E2 		sub	r3, r3, #1
 8721              		.loc 1 4171 8
 8722 0070 2332A0E1 		lsr	r3, r3, #4
 8723 0074 14300BE5 		str	r3, [fp, #-20]
4172:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8724              		.loc 1 4172 14
 8725 0078 14301BE5 		ldr	r3, [fp, #-20]
 8726 007c 0330E0E1 		mvn	r3, r3
 8727 0080 1F3003E2 		and	r3, r3, #31
 8728              		.loc 1 4172 13
 8729 0084 0020E0E3 		mvn	r2, #0
 8730 0088 3233A0E1 		lsr	r3, r2, r3
 8731 008c 18300BE5 		str	r3, [fp, #-24]
4173:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8732              		.loc 1 4173 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 228


 8733 0090 14301BE5 		ldr	r3, [fp, #-20]
 8734 0094 A332A0E1 		lsr	r3, r3, #5
 8735 0098 14300BE5 		str	r3, [fp, #-20]
4174:../../Source/Kernel/rme_kernel.c ****     
4175:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
4176:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8736              		.loc 1 4176 7
 8737 009c 0C201BE5 		ldr	r2, [fp, #-12]
 8738 00a0 14301BE5 		ldr	r3, [fp, #-20]
 8739 00a4 030052E1 		cmp	r2, r3
 8740 00a8 1A00001A 		bne	.L562
4177:../../Source/Kernel/rme_kernel.c ****     {
4178:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4179:../../Source/Kernel/rme_kernel.c **** 
4180:../../Source/Kernel/rme_kernel.c ****         /* This address range is not fully populated */
4181:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&(Mask_Begin&Mask_End))!=(Mask_Begin&Mask_End))
 8741              		.loc 1 4181 28
 8742 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8743 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8744 00b4 0C201BE5 		ldr	r2, [fp, #-12]
 8745 00b8 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8746              		.loc 1 4181 47
 8747 00bc 10101BE5 		ldr	r1, [fp, #-16]
 8748 00c0 18301BE5 		ldr	r3, [fp, #-24]
 8749 00c4 013003E0 		and	r3, r3, r1
 8750              		.loc 1 4181 35
 8751 00c8 032002E0 		and	r2, r2, r3
 8752              		.loc 1 4181 71
 8753 00cc 10101BE5 		ldr	r1, [fp, #-16]
 8754 00d0 18301BE5 		ldr	r3, [fp, #-24]
 8755 00d4 013003E0 		and	r3, r3, r1
 8756              		.loc 1 4181 11
 8757 00d8 030052E1 		cmp	r2, r3
 8758 00dc 0100000A 		beq	.L563
4182:../../Source/Kernel/rme_kernel.c ****         {
4183:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4184:../../Source/Kernel/rme_kernel.c **** 
4185:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8759              		.loc 1 4185 20
 8760 00e0 0030E0E3 		mvn	r3, #0
 8761 00e4 5B0000EA 		b	.L561
 8762              	.L563:
4186:../../Source/Kernel/rme_kernel.c ****         }
4187:../../Source/Kernel/rme_kernel.c ****         else
4188:../../Source/Kernel/rme_kernel.c ****         {
4189:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4190:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4191:../../Source/Kernel/rme_kernel.c ****         }
4192:../../Source/Kernel/rme_kernel.c **** 
4193:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the unmarking - need atomic operations */
4194:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~(Mask_Begin&Mask_End));
 8763              		.loc 1 4194 9
 8764 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 8765 00ec 0321A0E1 		lsl	r2, r3, #2
 8766 00f0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8767 00f4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8768 00f8 030082E0 		add	r0, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 229


 8769 00fc 10201BE5 		ldr	r2, [fp, #-16]
 8770 0100 18301BE5 		ldr	r3, [fp, #-24]
 8771 0104 023003E0 		and	r3, r3, r2
 8772 0108 0330E0E1 		mvn	r3, r3
 8773 010c 0310A0E1 		mov	r1, r3
 8774 0110 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8775 0114 4E0000EA 		b	.L564
 8776              	.L562:
4195:../../Source/Kernel/rme_kernel.c ****     }
4196:../../Source/Kernel/rme_kernel.c ****     else
4197:../../Source/Kernel/rme_kernel.c ****     {
4198:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4199:../../Source/Kernel/rme_kernel.c **** 
4200:../../Source/Kernel/rme_kernel.c ****         /* Check the start */
4201:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&Mask_Begin)!=Mask_Begin)
 8777              		.loc 1 4201 28
 8778 0118 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8779 011c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8780 0120 0C201BE5 		ldr	r2, [fp, #-12]
 8781 0124 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8782              		.loc 1 4201 35
 8783 0128 10301BE5 		ldr	r3, [fp, #-16]
 8784 012c 023003E0 		and	r3, r3, r2
 8785              		.loc 1 4201 11
 8786 0130 10201BE5 		ldr	r2, [fp, #-16]
 8787 0134 030052E1 		cmp	r2, r3
 8788 0138 0100000A 		beq	.L565
4202:../../Source/Kernel/rme_kernel.c ****         {
4203:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4204:../../Source/Kernel/rme_kernel.c **** 
4205:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8789              		.loc 1 4205 20
 8790 013c 0030E0E3 		mvn	r3, #0
 8791 0140 440000EA 		b	.L561
 8792              	.L565:
4206:../../Source/Kernel/rme_kernel.c ****         }
4207:../../Source/Kernel/rme_kernel.c ****         else
4208:../../Source/Kernel/rme_kernel.c ****         {
4209:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4210:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4211:../../Source/Kernel/rme_kernel.c ****         }
4212:../../Source/Kernel/rme_kernel.c ****         
4213:../../Source/Kernel/rme_kernel.c ****         /* Check the middle */
4214:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8793              		.loc 1 4214 18
 8794 0144 0C301BE5 		ldr	r3, [fp, #-12]
 8795 0148 013083E2 		add	r3, r3, #1
 8796 014c 08300BE5 		str	r3, [fp, #-8]
 8797              		.loc 1 4214 9
 8798 0150 0A0000EA 		b	.L566
 8799              	.L568:
4215:../../Source/Kernel/rme_kernel.c ****         {
4216:../../Source/Kernel/rme_kernel.c ****             if(RME_KOT_VA_BASE[Count]!=RME_MASK_FULL)
 8800              		.loc 1 4216 31
 8801 0154 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8802 0158 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8803 015c 08201BE5 		ldr	r2, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 230


 8804 0160 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8805              		.loc 1 4216 15
 8806 0164 010073E3 		cmn	r3, #1
 8807 0168 0100000A 		beq	.L567
4217:../../Source/Kernel/rme_kernel.c ****             {
4218:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4219:../../Source/Kernel/rme_kernel.c **** 
4220:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_KOT_BMP;
 8808              		.loc 1 4220 24
 8809 016c 0030E0E3 		mvn	r3, #0
 8810 0170 380000EA 		b	.L561
 8811              	.L567:
4214:../../Source/Kernel/rme_kernel.c ****         {
 8812              		.loc 1 4214 46 discriminator 2
 8813 0174 08301BE5 		ldr	r3, [fp, #-8]
 8814 0178 013083E2 		add	r3, r3, #1
 8815 017c 08300BE5 		str	r3, [fp, #-8]
 8816              	.L566:
4214:../../Source/Kernel/rme_kernel.c ****         {
 8817              		.loc 1 4214 37 discriminator 1
 8818 0180 14301BE5 		ldr	r3, [fp, #-20]
 8819 0184 013043E2 		sub	r3, r3, #1
4214:../../Source/Kernel/rme_kernel.c ****         {
 8820              		.loc 1 4214 33 discriminator 1
 8821 0188 08201BE5 		ldr	r2, [fp, #-8]
 8822 018c 030052E1 		cmp	r2, r3
 8823 0190 EFFFFF3A 		bcc	.L568
4221:../../Source/Kernel/rme_kernel.c ****             }
4222:../../Source/Kernel/rme_kernel.c ****             else
4223:../../Source/Kernel/rme_kernel.c ****             {
4224:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4225:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
4226:../../Source/Kernel/rme_kernel.c ****             }
4227:../../Source/Kernel/rme_kernel.c ****         }
4228:../../Source/Kernel/rme_kernel.c **** 
4229:../../Source/Kernel/rme_kernel.c ****         /* Check the end */
4230:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[End]&Mask_End)!=Mask_End)
 8824              		.loc 1 4230 28
 8825 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8826 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8827 019c 14201BE5 		ldr	r2, [fp, #-20]
 8828 01a0 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8829              		.loc 1 4230 33
 8830 01a4 18301BE5 		ldr	r3, [fp, #-24]
 8831 01a8 023003E0 		and	r3, r3, r2
 8832              		.loc 1 4230 11
 8833 01ac 18201BE5 		ldr	r2, [fp, #-24]
 8834 01b0 030052E1 		cmp	r2, r3
 8835 01b4 0100000A 		beq	.L569
4231:../../Source/Kernel/rme_kernel.c ****         {
4232:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4233:../../Source/Kernel/rme_kernel.c **** 
4234:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8836              		.loc 1 4234 20
 8837 01b8 0030E0E3 		mvn	r3, #0
 8838 01bc 250000EA 		b	.L561
 8839              	.L569:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 231


4235:../../Source/Kernel/rme_kernel.c ****         }
4236:../../Source/Kernel/rme_kernel.c ****         else
4237:../../Source/Kernel/rme_kernel.c ****         {
4238:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4239:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4240:../../Source/Kernel/rme_kernel.c ****         }
4241:../../Source/Kernel/rme_kernel.c ****         
4242:../../Source/Kernel/rme_kernel.c ****         /* Erase the start - make it atomic */
4243:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8840              		.loc 1 4243 9
 8841 01c0 0C301BE5 		ldr	r3, [fp, #-12]
 8842 01c4 0321A0E1 		lsl	r2, r3, #2
 8843 01c8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8844 01cc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8845 01d0 032082E0 		add	r2, r2, r3
 8846 01d4 10301BE5 		ldr	r3, [fp, #-16]
 8847 01d8 0330E0E1 		mvn	r3, r3
 8848 01dc 0310A0E1 		mov	r1, r3
 8849 01e0 0200A0E1 		mov	r0, r2
 8850 01e4 FEFFFFEB 		bl	_RME_Fetch_And_Single
4244:../../Source/Kernel/rme_kernel.c ****         /* Erase the middle - do not need atomics here */
4245:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8851              		.loc 1 4245 18
 8852 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 8853 01ec 013083E2 		add	r3, r3, #1
 8854 01f0 08300BE5 		str	r3, [fp, #-8]
 8855              		.loc 1 4245 9
 8856 01f4 070000EA 		b	.L570
 8857              	.L571:
4246:../../Source/Kernel/rme_kernel.c ****         {
4247:../../Source/Kernel/rme_kernel.c ****             RME_KOT_VA_BASE[Count]=0U;
 8858              		.loc 1 4247 35
 8859 01f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8860 01fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8861 0200 08201BE5 		ldr	r2, [fp, #-8]
 8862 0204 0010A0E3 		mov	r1, #0
 8863 0208 021183E7 		str	r1, [r3, r2, lsl #2]
4245:../../Source/Kernel/rme_kernel.c ****         {
 8864              		.loc 1 4245 46 discriminator 3
 8865 020c 08301BE5 		ldr	r3, [fp, #-8]
 8866 0210 013083E2 		add	r3, r3, #1
 8867 0214 08300BE5 		str	r3, [fp, #-8]
 8868              	.L570:
4245:../../Source/Kernel/rme_kernel.c ****         {
 8869              		.loc 1 4245 37 discriminator 1
 8870 0218 14301BE5 		ldr	r3, [fp, #-20]
 8871 021c 013043E2 		sub	r3, r3, #1
4245:../../Source/Kernel/rme_kernel.c ****         {
 8872              		.loc 1 4245 33 discriminator 1
 8873 0220 08201BE5 		ldr	r2, [fp, #-8]
 8874 0224 030052E1 		cmp	r2, r3
 8875 0228 F2FFFF3A 		bcc	.L571
4248:../../Source/Kernel/rme_kernel.c ****         }
4249:../../Source/Kernel/rme_kernel.c ****         /* Erase the end - make it atomic */
4250:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[End]),~Mask_End);
 8876              		.loc 1 4250 9
 8877 022c 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 232


 8878 0230 0321A0E1 		lsl	r2, r3, #2
 8879 0234 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8880 0238 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8881 023c 032082E0 		add	r2, r2, r3
 8882 0240 18301BE5 		ldr	r3, [fp, #-24]
 8883 0244 0330E0E1 		mvn	r3, r3
 8884 0248 0310A0E1 		mov	r1, r3
 8885 024c 0200A0E1 		mov	r0, r2
 8886 0250 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8887              	.L564:
4251:../../Source/Kernel/rme_kernel.c ****     }
4252:../../Source/Kernel/rme_kernel.c **** 
4253:../../Source/Kernel/rme_kernel.c ****     return 0;
 8888              		.loc 1 4253 12
 8889 0254 0030A0E3 		mov	r3, #0
 8890              	.L561:
4254:../../Source/Kernel/rme_kernel.c **** }
 8891              		.loc 1 4254 1
 8892 0258 0300A0E1 		mov	r0, r3
 8893 025c 04D04BE2 		sub	sp, fp, #4
 8894              		.cfi_def_cfa 13, 8
 8895              		@ sp needed
 8896 0260 0088BDE8 		pop	{fp, pc}
 8897              		.cfi_endproc
 8898              	.LFE40:
 8900              		.section	.text._RME_Kom_Boot_Crt,"ax",%progbits
 8901              		.align	2
 8902              		.global	_RME_Kom_Boot_Crt
 8903              		.syntax unified
 8904              		.arm
 8906              	_RME_Kom_Boot_Crt:
 8907              	.LFB41:
4255:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Erase ***********************************************/
4256:../../Source/Kernel/rme_kernel.c **** 
4257:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kom_Boot_Crt *************************************************
4258:../../Source/Kernel/rme_kernel.c **** Description : Create boot-time kernel memory capability. Kernel memory allow
4259:../../Source/Kernel/rme_kernel.c ****               you to create specific types of kernel objects in a specific 
4260:../../Source/Kernel/rme_kernel.c ****               kernel memory range. The initial kernel memory capability's
4261:../../Source/Kernel/rme_kernel.c ****               content is supplied by the kernel according to config.
4262:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4263:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
4264:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
4265:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4266:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The capability to the kernel memory.
4267:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4268:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Begin - The begin address of the kernel memory, aligned
4269:../../Source/Kernel/rme_kernel.c ****                                 to kotbl granularity.
4270:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t End - The end address of the kernel memory, aligned to
4271:../../Source/Kernel/rme_kernel.c ****                               kotbl granularity, then -1.
4272:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The operation flags for this kernel memory. Set
4273:../../Source/Kernel/rme_kernel.c ****                                acoording to your needs.
4274:../../Source/Kernel/rme_kernel.c **** Output      : None.
4275:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4276:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4277:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kom_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4278:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4279:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kom,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 233


4280:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Begin,
4281:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t End,
4282:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
4283:../../Source/Kernel/rme_kernel.c **** {
 8908              		.loc 1 4283 1
 8909              		.cfi_startproc
 8910              		@ args = 8, pretend = 0, frame = 40
 8911              		@ frame_needed = 1, uses_anonymous_args = 0
 8912 0000 00482DE9 		push	{fp, lr}
 8913              		.cfi_def_cfa_offset 8
 8914              		.cfi_offset 11, -8
 8915              		.cfi_offset 14, -4
 8916 0004 04B08DE2 		add	fp, sp, #4
 8917              		.cfi_def_cfa 11, 4
 8918 0008 28D04DE2 		sub	sp, sp, #40
 8919 000c 20000BE5 		str	r0, [fp, #-32]
 8920 0010 24100BE5 		str	r1, [fp, #-36]
 8921 0014 28200BE5 		str	r2, [fp, #-40]
 8922 0018 2C300BE5 		str	r3, [fp, #-44]
4284:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4285:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kom* Kom_Crt;
4286:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
4287:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
4288:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4289:../../Source/Kernel/rme_kernel.c ****     
4290:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
4291:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 8923              		.loc 1 4291 5
 8924 001c 24301BE5 		ldr	r3, [fp, #-36]
 8925 0020 803003E2 		and	r3, r3, #128
 8926 0024 000053E3 		cmp	r3, #0
 8927 0028 1C00001A 		bne	.L573
 8928              		.loc 1 4291 5 is_stmt 0 discriminator 1
 8929 002c 20301BE5 		ldr	r3, [fp, #-32]
 8930 0030 142093E5 		ldr	r2, [r3, #20]
 8931 0034 24301BE5 		ldr	r3, [fp, #-36]
 8932 0038 030052E1 		cmp	r2, r3
 8933 003c 0100008A 		bhi	.L574
 8934              		.loc 1 4291 5 discriminator 3
 8935 0040 0230E0E3 		mvn	r3, #2
 8936              		.loc 1 4291 5
 8937 0044 9F0000EA 		b	.L575
 8938              	.L574:
 8939              		.loc 1 4291 5 discriminator 4
 8940 0048 24301BE5 		ldr	r3, [fp, #-36]
 8941 004c 8322A0E1 		lsl	r2, r3, #5
 8942 0050 20301BE5 		ldr	r3, [fp, #-32]
 8943 0054 0C3093E5 		ldr	r3, [r3, #12]
 8944 0058 033082E0 		add	r3, r2, r3
 8945 005c 08300BE5 		str	r3, [fp, #-8]
 8946 0060 08301BE5 		ldr	r3, [fp, #-8]
 8947 0064 0300A0E1 		mov	r0, r3
 8948 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8949 006c 0C000BE5 		str	r0, [fp, #-12]
 8950              		.loc 1 4291 5 discriminator 1
 8951 0070 0C301BE5 		ldr	r3, [fp, #-12]
 8952 0074 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 234


 8953 0078 020853E3 		cmp	r3, #131072
 8954 007c 0100001A 		bne	.L576
 8955              		.loc 1 4291 5 discriminator 5
 8956 0080 0830E0E3 		mvn	r3, #8
 8957              		.loc 1 4291 5
 8958 0084 8F0000EA 		b	.L575
 8959              	.L576:
 8960              		.loc 1 4291 5 discriminator 6
 8961 0088 0C301BE5 		ldr	r3, [fp, #-12]
 8962 008c 233CA0E1 		lsr	r3, r3, #24
 8963 0090 030053E3 		cmp	r3, #3
 8964 0094 3F00000A 		beq	.L577
 8965              		.loc 1 4291 5 discriminator 7
 8966 0098 0130E0E3 		mvn	r3, #1
 8967              		.loc 1 4291 5
 8968 009c 890000EA 		b	.L575
 8969              	.L573:
 8970              		.loc 1 4291 5 discriminator 2
 8971 00a0 24301BE5 		ldr	r3, [fp, #-36]
 8972 00a4 2324A0E1 		lsr	r2, r3, #8
 8973 00a8 20301BE5 		ldr	r3, [fp, #-32]
 8974 00ac 143093E5 		ldr	r3, [r3, #20]
 8975 00b0 030052E1 		cmp	r2, r3
 8976 00b4 0100003A 		bcc	.L578
 8977              		.loc 1 4291 5 discriminator 8
 8978 00b8 0230E0E3 		mvn	r3, #2
 8979              		.loc 1 4291 5
 8980 00bc 810000EA 		b	.L575
 8981              	.L578:
 8982              		.loc 1 4291 5 discriminator 9
 8983 00c0 24301BE5 		ldr	r3, [fp, #-36]
 8984 00c4 2334A0E1 		lsr	r3, r3, #8
 8985 00c8 8322A0E1 		lsl	r2, r3, #5
 8986 00cc 20301BE5 		ldr	r3, [fp, #-32]
 8987 00d0 0C3093E5 		ldr	r3, [r3, #12]
 8988 00d4 033082E0 		add	r3, r2, r3
 8989 00d8 08300BE5 		str	r3, [fp, #-8]
 8990 00dc 08301BE5 		ldr	r3, [fp, #-8]
 8991 00e0 0300A0E1 		mov	r0, r3
 8992 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8993 00e8 0C000BE5 		str	r0, [fp, #-12]
 8994              		.loc 1 4291 5 discriminator 1
 8995 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 8996 00f0 FF3803E2 		and	r3, r3, #16711680
 8997 00f4 020853E3 		cmp	r3, #131072
 8998 00f8 0100001A 		bne	.L579
 8999              		.loc 1 4291 5 discriminator 10
 9000 00fc 0830E0E3 		mvn	r3, #8
 9001              		.loc 1 4291 5
 9002 0100 700000EA 		b	.L575
 9003              	.L579:
 9004              		.loc 1 4291 5 discriminator 11
 9005 0104 0C301BE5 		ldr	r3, [fp, #-12]
 9006 0108 233CA0E1 		lsr	r3, r3, #24
 9007 010c 030053E3 		cmp	r3, #3
 9008 0110 0100000A 		beq	.L580
 9009              		.loc 1 4291 5 discriminator 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 235


 9010 0114 0130E0E3 		mvn	r3, #1
 9011              		.loc 1 4291 5
 9012 0118 6A0000EA 		b	.L575
 9013              	.L580:
 9014              		.loc 1 4291 5 discriminator 13
 9015 011c 24301BE5 		ldr	r3, [fp, #-36]
 9016 0120 7F2003E2 		and	r2, r3, #127
 9017 0124 08301BE5 		ldr	r3, [fp, #-8]
 9018 0128 143093E5 		ldr	r3, [r3, #20]
 9019 012c 030052E1 		cmp	r2, r3
 9020 0130 0100003A 		bcc	.L581
 9021              		.loc 1 4291 5 discriminator 14
 9022 0134 0230E0E3 		mvn	r3, #2
 9023              		.loc 1 4291 5
 9024 0138 620000EA 		b	.L575
 9025              	.L581:
 9026              		.loc 1 4291 5 discriminator 15
 9027 013c 24301BE5 		ldr	r3, [fp, #-36]
 9028 0140 7F3003E2 		and	r3, r3, #127
 9029 0144 8322A0E1 		lsl	r2, r3, #5
 9030 0148 08301BE5 		ldr	r3, [fp, #-8]
 9031 014c 0C3093E5 		ldr	r3, [r3, #12]
 9032 0150 033082E0 		add	r3, r2, r3
 9033 0154 08300BE5 		str	r3, [fp, #-8]
 9034 0158 08301BE5 		ldr	r3, [fp, #-8]
 9035 015c 0300A0E1 		mov	r0, r3
 9036 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9037 0164 0C000BE5 		str	r0, [fp, #-12]
 9038              		.loc 1 4291 5 discriminator 1
 9039 0168 0C301BE5 		ldr	r3, [fp, #-12]
 9040 016c FF3803E2 		and	r3, r3, #16711680
 9041 0170 020853E3 		cmp	r3, #131072
 9042 0174 0100001A 		bne	.L582
 9043              		.loc 1 4291 5 discriminator 16
 9044 0178 0830E0E3 		mvn	r3, #8
 9045              		.loc 1 4291 5
 9046 017c 510000EA 		b	.L575
 9047              	.L582:
 9048              		.loc 1 4291 5 discriminator 17
 9049 0180 0C301BE5 		ldr	r3, [fp, #-12]
 9050 0184 233CA0E1 		lsr	r3, r3, #24
 9051 0188 030053E3 		cmp	r3, #3
 9052 018c 0100000A 		beq	.L577
 9053              		.loc 1 4291 5 discriminator 18
 9054 0190 0130E0E3 		mvn	r3, #1
 9055              		.loc 1 4291 5
 9056 0194 4B0000EA 		b	.L575
 9057              	.L577:
4292:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4293:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4294:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 9058              		.loc 1 4294 5 is_stmt 1
 9059 0198 08301BE5 		ldr	r3, [fp, #-8]
 9060 019c 083093E5 		ldr	r3, [r3, #8]
 9061 01a0 013003E2 		and	r3, r3, #1
 9062 01a4 000053E3 		cmp	r3, #0
 9063 01a8 0100001A 		bne	.L583
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 236


 9064              		.loc 1 4294 5 is_stmt 0 discriminator 1
 9065 01ac 0630E0E3 		mvn	r3, #6
 9066              		.loc 1 4294 5
 9067 01b0 440000EA 		b	.L575
 9068              	.L583:
4295:../../Source/Kernel/rme_kernel.c **** 
4296:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4297:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kom,struct RME_Cap_Kom*,Kom_Crt);
 9069              		.loc 1 4297 5 is_stmt 1
 9070 01b4 08301BE5 		ldr	r3, [fp, #-8]
 9071 01b8 142093E5 		ldr	r2, [r3, #20]
 9072 01bc 28301BE5 		ldr	r3, [fp, #-40]
 9073 01c0 030052E1 		cmp	r2, r3
 9074 01c4 0100008A 		bhi	.L584
 9075              		.loc 1 4297 5 is_stmt 0 discriminator 1
 9076 01c8 0230E0E3 		mvn	r3, #2
 9077              		.loc 1 4297 5
 9078 01cc 3D0000EA 		b	.L575
 9079              	.L584:
 9080              		.loc 1 4297 5 discriminator 2
 9081 01d0 28301BE5 		ldr	r3, [fp, #-40]
 9082 01d4 8322A0E1 		lsl	r2, r3, #5
 9083 01d8 08301BE5 		ldr	r3, [fp, #-8]
 9084 01dc 0C3093E5 		ldr	r3, [r3, #12]
 9085 01e0 033082E0 		add	r3, r2, r3
 9086 01e4 10300BE5 		str	r3, [fp, #-16]
4298:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4299:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kom_Crt);
 9087              		.loc 1 4299 5 is_stmt 1
 9088 01e8 10301BE5 		ldr	r3, [fp, #-16]
 9089 01ec 0128A0E3 		mov	r2, #65536
 9090 01f0 0010A0E3 		mov	r1, #0
 9091 01f4 0300A0E1 		mov	r0, r3
 9092 01f8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 9093 01fc 0030A0E1 		mov	r3, r0
 9094              		.loc 1 4299 5 is_stmt 0 discriminator 1
 9095 0200 000053E3 		cmp	r3, #0
 9096 0204 0100001A 		bne	.L585
 9097 0208 0430E0E3 		mvn	r3, #4
 9098              		.loc 1 4299 5
 9099 020c 2D0000EA 		b	.L575
 9100              	.L585:
 9101              		.loc 1 4299 5 discriminator 2
 9102 0210 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 9103 0214 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 9104 0218 002093E5 		ldr	r2, [r3]
 9105 021c 10301BE5 		ldr	r3, [fp, #-16]
 9106 0220 102083E5 		str	r2, [r3, #16]
4300:../../Source/Kernel/rme_kernel.c ****     
4301:../../Source/Kernel/rme_kernel.c ****     /* Align addresses */
4302:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
4303:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,RME_KOM_SLOT_ORDER);
4304:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Start,RME_KOM_SLOT_ORDER);
4305:../../Source/Kernel/rme_kernel.c **** #else
4306:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,6U);
 9107              		.loc 1 4306 13 is_stmt 1
 9108 0224 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 237


 9109 0228 013083E2 		add	r3, r3, #1
 9110              		.loc 1 4306 12
 9111 022c 3F30C3E3 		bic	r3, r3, #63
 9112 0230 14300BE5 		str	r3, [fp, #-20]
4307:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Begin,6U);
 9113              		.loc 1 4307 15
 9114 0234 2C301BE5 		ldr	r3, [fp, #-44]
 9115 0238 3F3083E2 		add	r3, r3, #63
 9116              		.loc 1 4307 14
 9117 023c 3F30C3E3 		bic	r3, r3, #63
 9118 0240 18300BE5 		str	r3, [fp, #-24]
4308:../../Source/Kernel/rme_kernel.c **** #endif
4309:../../Source/Kernel/rme_kernel.c **** 
4310:../../Source/Kernel/rme_kernel.c ****     /* Must at least allow creation of something */
4311:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Flag!=0U);
 9119              		.loc 1 4311 5
 9120 0244 08309BE5 		ldr	r3, [fp, #8]
 9121 0248 000053E3 		cmp	r3, #0
 9122 024c 0800001A 		bne	.L586
 9123              		.loc 1 4311 5 is_stmt 0 discriminator 1
 9124 0250 003000E3 		movw	r3, #:lower16:.LC2
 9125 0254 003040E3 		movt	r3, #:upper16:.LC2
 9126 0258 002000E3 		movw	r2, #:lower16:.LC3
 9127 025c 002040E3 		movt	r2, #:upper16:.LC3
 9128 0260 D71001E3 		movw	r1, #4311
 9129 0264 000000E3 		movw	r0, #:lower16:.LC4
 9130 0268 000040E3 		movt	r0, #:upper16:.LC4
 9131 026c FEFFFFEB 		bl	RME_Log
 9132              	.L587:
 9133              		.loc 1 4311 5
 9134 0270 FEFFFFEA 		b	.L587
 9135              	.L586:
4312:../../Source/Kernel/rme_kernel.c **** 
4313:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4314:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Root_Ref=1U;
 9136              		.loc 1 4314 27 is_stmt 1
 9137 0274 10301BE5 		ldr	r3, [fp, #-16]
 9138 0278 0120A0E3 		mov	r2, #1
 9139 027c 042083E5 		str	r2, [r3, #4]
4315:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Object=0U;
 9140              		.loc 1 4315 25
 9141 0280 10301BE5 		ldr	r3, [fp, #-16]
 9142 0284 0020A0E3 		mov	r2, #0
 9143 0288 0C2083E5 		str	r2, [r3, #12]
4316:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Flag=Flag;
 9144              		.loc 1 4316 23
 9145 028c 10301BE5 		ldr	r3, [fp, #-16]
 9146 0290 08209BE5 		ldr	r2, [fp, #8]
 9147 0294 082083E5 		str	r2, [r3, #8]
4317:../../Source/Kernel/rme_kernel.c ****     
4318:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4319:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Begin=Kom_Begin;
 9148              		.loc 1 4319 19
 9149 0298 10301BE5 		ldr	r3, [fp, #-16]
 9150 029c 18201BE5 		ldr	r2, [fp, #-24]
 9151 02a0 142083E5 		str	r2, [r3, #20]
4320:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->End=Kom_End-1U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 238


 9152              		.loc 1 4320 25
 9153 02a4 14301BE5 		ldr	r3, [fp, #-20]
 9154 02a8 012043E2 		sub	r2, r3, #1
 9155              		.loc 1 4320 17
 9156 02ac 10301BE5 		ldr	r3, [fp, #-16]
 9157 02b0 182083E5 		str	r2, [r3, #24]
4321:../../Source/Kernel/rme_kernel.c **** 
4322:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4323:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kom_Crt->Head.Type_Stat),
 9158              		.loc 1 4323 5
 9159 02b4 10301BE5 		ldr	r3, [fp, #-16]
 9160 02b8 0214A0E3 		mov	r1, #33554432
 9161 02bc 0300A0E1 		mov	r0, r3
 9162 02c0 FEFFFFEB 		bl	__RME_A7A_Write_Release
4324:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KOM,
4325:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4326:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4327:../../Source/Kernel/rme_kernel.c **** 
4328:../../Source/Kernel/rme_kernel.c ****     return 0;
 9163              		.loc 1 4328 12
 9164 02c4 0030A0E3 		mov	r3, #0
 9165              	.L575:
4329:../../Source/Kernel/rme_kernel.c **** }
 9166              		.loc 1 4329 1
 9167 02c8 0300A0E1 		mov	r0, r3
 9168 02cc 04D04BE2 		sub	sp, fp, #4
 9169              		.cfi_def_cfa 13, 8
 9170              		@ sp needed
 9171 02d0 0088BDE8 		pop	{fp, pc}
 9172              		.cfi_endproc
 9173              	.LFE41:
 9175              		.section	.text._RME_CPU_Local_Init,"ax",%progbits
 9176              		.align	2
 9177              		.global	_RME_CPU_Local_Init
 9178              		.syntax unified
 9179              		.arm
 9181              	_RME_CPU_Local_Init:
 9182              	.LFB42:
4330:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kom_Boot_Crt ********************************************/
4331:../../Source/Kernel/rme_kernel.c **** 
4332:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_CPU_Local_Init ***********************************************
4333:../../Source/Kernel/rme_kernel.c **** Description : Initialize the CPU-local data structure.
4334:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The pointer to the per-CPU values.
4335:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The CPUID of the CPU.
4336:../../Source/Kernel/rme_kernel.c **** Output      : None.
4337:../../Source/Kernel/rme_kernel.c **** Return      : None.
4338:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4339:../../Source/Kernel/rme_kernel.c **** void _RME_CPU_Local_Init(struct RME_CPU_Local* Local,
4340:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t CPUID)
4341:../../Source/Kernel/rme_kernel.c **** {
 9183              		.loc 1 4341 1
 9184              		.cfi_startproc
 9185              		@ args = 0, pretend = 0, frame = 16
 9186              		@ frame_needed = 1, uses_anonymous_args = 0
 9187 0000 00482DE9 		push	{fp, lr}
 9188              		.cfi_def_cfa_offset 8
 9189              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 239


 9190              		.cfi_offset 14, -4
 9191 0004 04B08DE2 		add	fp, sp, #4
 9192              		.cfi_def_cfa 11, 4
 9193 0008 10D04DE2 		sub	sp, sp, #16
 9194 000c 10000BE5 		str	r0, [fp, #-16]
 9195 0010 14100BE5 		str	r1, [fp, #-20]
4342:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio_Cnt;
4343:../../Source/Kernel/rme_kernel.c ****     
4344:../../Source/Kernel/rme_kernel.c ****     Local->CPUID=CPUID;
 9196              		.loc 1 4344 17
 9197 0014 10301BE5 		ldr	r3, [fp, #-16]
 9198 0018 14201BE5 		ldr	r2, [fp, #-20]
 9199 001c 002083E5 		str	r2, [r3]
4345:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=RME_NULL;
 9200              		.loc 1 4345 19
 9201 0020 10301BE5 		ldr	r3, [fp, #-16]
 9202 0024 0020A0E3 		mov	r2, #0
 9203 0028 042083E5 		str	r2, [r3, #4]
4346:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Vct=RME_NULL;
 9204              		.loc 1 4346 19
 9205 002c 10301BE5 		ldr	r3, [fp, #-16]
 9206 0030 0020A0E3 		mov	r2, #0
 9207 0034 0C2083E5 		str	r2, [r3, #12]
4347:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Tim=RME_NULL;
 9208              		.loc 1 4347 19
 9209 0038 10301BE5 		ldr	r3, [fp, #-16]
 9210 003c 0020A0E3 		mov	r2, #0
 9211 0040 082083E5 		str	r2, [r3, #8]
4348:../../Source/Kernel/rme_kernel.c ****     
4349:../../Source/Kernel/rme_kernel.c ****     /* Initialize the run-queue and bitmap */
4350:../../Source/Kernel/rme_kernel.c ****     for(Prio_Cnt=0U;Prio_Cnt<RME_PREEMPT_PRIO_NUM;Prio_Cnt++)
 9212              		.loc 1 4350 17
 9213 0044 0030A0E3 		mov	r3, #0
 9214 0048 08300BE5 		str	r3, [fp, #-8]
 9215              		.loc 1 4350 5
 9216 004c 100000EA 		b	.L589
 9217              	.L590:
4351:../../Source/Kernel/rme_kernel.c ****     {
4352:../../Source/Kernel/rme_kernel.c ****         Local->Run.Bitmap[Prio_Cnt>>RME_WORD_ORDER]=0U;
 9218              		.loc 1 4352 35
 9219 0050 08301BE5 		ldr	r3, [fp, #-8]
 9220 0054 A322A0E1 		lsr	r2, r3, #5
 9221              		.loc 1 4352 52
 9222 0058 10301BE5 		ldr	r3, [fp, #-16]
 9223 005c 042082E2 		add	r2, r2, #4
 9224 0060 0010A0E3 		mov	r1, #0
 9225 0064 021183E7 		str	r1, [r3, r2, lsl #2]
4353:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Local->Run.List[Prio_Cnt]));
 9226              		.loc 1 4353 9
 9227 0068 08301BE5 		ldr	r3, [fp, #-8]
 9228 006c 023083E2 		add	r3, r3, #2
 9229 0070 8331A0E1 		lsl	r3, r3, #3
 9230 0074 10201BE5 		ldr	r2, [fp, #-16]
 9231 0078 033082E0 		add	r3, r2, r3
 9232 007c 043083E2 		add	r3, r3, #4
 9233 0080 0300A0E1 		mov	r0, r3
 9234 0084 FEFFFFEB 		bl	_RME_List_Crt
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 240


4350:../../Source/Kernel/rme_kernel.c ****     {
 9235              		.loc 1 4350 59 discriminator 3
 9236 0088 08301BE5 		ldr	r3, [fp, #-8]
 9237 008c 013083E2 		add	r3, r3, #1
 9238 0090 08300BE5 		str	r3, [fp, #-8]
 9239              	.L589:
4350:../../Source/Kernel/rme_kernel.c ****     {
 9240              		.loc 1 4350 29 discriminator 1
 9241 0094 08301BE5 		ldr	r3, [fp, #-8]
 9242 0098 1F0053E3 		cmp	r3, #31
 9243 009c EBFFFF9A 		bls	.L590
4354:../../Source/Kernel/rme_kernel.c ****     }
4355:../../Source/Kernel/rme_kernel.c **** }
 9244              		.loc 1 4355 1
 9245 00a0 00F020E3 		nop
 9246 00a4 00F020E3 		nop
 9247 00a8 04D04BE2 		sub	sp, fp, #4
 9248              		.cfi_def_cfa 13, 8
 9249              		@ sp needed
 9250 00ac 0088BDE8 		pop	{fp, pc}
 9251              		.cfi_endproc
 9252              	.LFE42:
 9254              		.section	.rodata
 9255 0053 00       		.align	2
 9256              	.LC6:
 9257 0054 41747465 		.ascii	"Attempted to kill init thread.\000"
 9257      6D707465 
 9257      6420746F 
 9257      206B696C 
 9257      6C20696E 
 9258              		.section	.text._RME_Thd_Fatal,"ax",%progbits
 9259              		.align	2
 9260              		.global	_RME_Thd_Fatal
 9261              		.syntax unified
 9262              		.arm
 9264              	_RME_Thd_Fatal:
 9265              	.LFB43:
4356:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_CPU_Local_Init ******************************************/
4357:../../Source/Kernel/rme_kernel.c **** 
4358:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Fatal ***************************************************
4359:../../Source/Kernel/rme_kernel.c **** Description : The fatal fault handler of RME. This handler will be called by
4360:../../Source/Kernel/rme_kernel.c ****               the ISR that handles the exceptions. This indicates that a fatal
4361:../../Source/Kernel/rme_kernel.c ****               exception has happened and we need to see if this thread is in a
4362:../../Source/Kernel/rme_kernel.c ****               synchronous invocation. If yes, we stop the invocation, and
4363:../../Source/Kernel/rme_kernel.c ****               possibly return a fault value to the old register set. If not, we
4364:../../Source/Kernel/rme_kernel.c ****               just kill the thread. If the thread is killed, a notification
4365:../../Source/Kernel/rme_kernel.c ****               will be sent to its scheduler. An Exec_Set is required to clear
4366:../../Source/Kernel/rme_kernel.c ****               the exception pending status of the thread.
4367:../../Source/Kernel/rme_kernel.c ****               Some processors may raise some exceptions that are difficult to
4368:../../Source/Kernel/rme_kernel.c ****               attribute to a particular thread, either due to the fact that
4369:../../Source/Kernel/rme_kernel.c ****               they are asynchronous, or they are derived from exception entry.
4370:../../Source/Kernel/rme_kernel.c ****               A good example is ARMv7-M: its autostacking feature derives fault
4371:../../Source/Kernel/rme_kernel.c ****               from exception entry, and some of its bus faults are asynchronous
4372:../../Source/Kernel/rme_kernel.c ****               and can cross context boundaries. RME requires that all these
4373:../../Source/Kernel/rme_kernel.c ****               exceptions be dropped rather than handled; or there will be 
4374:../../Source/Kernel/rme_kernel.c ****               integrity and availability compromises.
4375:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 241


4376:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
4377:../../Source/Kernel/rme_kernel.c **** Return      : None.
4378:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4379:../../Source/Kernel/rme_kernel.c **** void _RME_Thd_Fatal(struct RME_Reg_Struct* Reg)
4380:../../Source/Kernel/rme_kernel.c **** {
 9266              		.loc 1 4380 1
 9267              		.cfi_startproc
 9268              		@ args = 0, pretend = 0, frame = 16
 9269              		@ frame_needed = 1, uses_anonymous_args = 0
 9270 0000 00482DE9 		push	{fp, lr}
 9271              		.cfi_def_cfa_offset 8
 9272              		.cfi_offset 11, -8
 9273              		.cfi_offset 14, -4
 9274 0004 04B08DE2 		add	fp, sp, #4
 9275              		.cfi_def_cfa 11, 4
 9276 0008 10D04DE2 		sub	sp, sp, #16
 9277 000c 10000BE5 		str	r0, [fp, #-16]
4381:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4382:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
4383:../../Source/Kernel/rme_kernel.c ****     
4384:../../Source/Kernel/rme_kernel.c ****     /* Attempt to return from the invocation, from fault */
4385:../../Source/Kernel/rme_kernel.c ****     if(_RME_Inv_Ret(Reg,0U,1U)!=0)
 9278              		.loc 1 4385 8
 9279 0010 0120A0E3 		mov	r2, #1
 9280 0014 0010A0E3 		mov	r1, #0
 9281 0018 10001BE5 		ldr	r0, [fp, #-16]
 9282 001c FEFFFFEB 		bl	_RME_Inv_Ret
 9283 0020 0030A0E1 		mov	r3, r0
 9284              		.loc 1 4385 7 discriminator 1
 9285 0024 000053E3 		cmp	r3, #0
 9286 0028 2C00000A 		beq	.L597
4386:../../Source/Kernel/rme_kernel.c ****     {
4387:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4388:../../Source/Kernel/rme_kernel.c **** 
4389:../../Source/Kernel/rme_kernel.c ****         /* Return failure - report the exception */
4390:../../Source/Kernel/rme_kernel.c ****         Local=RME_CPU_LOCAL();
 9287              		.loc 1 4390 14
 9288 002c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 9289 0030 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 9290 0034 08300BE5 		str	r3, [fp, #-8]
4391:../../Source/Kernel/rme_kernel.c ****         Thd_Cur=Local->Thd_Cur;
 9291              		.loc 1 4391 16
 9292 0038 08301BE5 		ldr	r3, [fp, #-8]
 9293 003c 043093E5 		ldr	r3, [r3, #4]
 9294 0040 0C300BE5 		str	r3, [fp, #-12]
4392:../../Source/Kernel/rme_kernel.c ****         
4393:../../Source/Kernel/rme_kernel.c ****         /* Init thread shall never have exceptions */
4394:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 9295              		.loc 1 4394 26
 9296 0044 0C301BE5 		ldr	r3, [fp, #-12]
 9297 0048 183093E5 		ldr	r3, [r3, #24]
 9298              		.loc 1 4394 11
 9299 004c 060173E3 		cmn	r3, #-2147483647
 9300 0050 0B00001A 		bne	.L593
4395:../../Source/Kernel/rme_kernel.c ****         {
4396:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4397:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 242


4398:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("Attempted to kill init thread.");
 9301              		.loc 1 4398 13
 9302 0054 000000E3 		movw	r0, #:lower16:.LC6
 9303 0058 000040E3 		movt	r0, #:upper16:.LC6
 9304 005c FEFFFFEB 		bl	RME_Str_Print
4399:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(0U);
 9305              		.loc 1 4399 13 discriminator 1
 9306 0060 003000E3 		movw	r3, #:lower16:.LC2
 9307 0064 003040E3 		movt	r3, #:upper16:.LC2
 9308 0068 002000E3 		movw	r2, #:lower16:.LC3
 9309 006c 002040E3 		movt	r2, #:upper16:.LC3
 9310 0070 2F1101E3 		movw	r1, #4399
 9311 0074 000000E3 		movw	r0, #:lower16:.LC4
 9312 0078 000040E3 		movt	r0, #:upper16:.LC4
 9313 007c FEFFFFEB 		bl	RME_Log
 9314              	.L594:
 9315              		.loc 1 4399 13 is_stmt 0
 9316 0080 FEFFFFEA 		b	.L594
 9317              	.L593:
4400:../../Source/Kernel/rme_kernel.c ****         }
4401:../../Source/Kernel/rme_kernel.c ****         else
4402:../../Source/Kernel/rme_kernel.c ****         {
4403:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4404:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4405:../../Source/Kernel/rme_kernel.c ****         }
4406:../../Source/Kernel/rme_kernel.c ****         
4407:../../Source/Kernel/rme_kernel.c ****         /* We must be running at this point to trigger a synchronous exception */
4408:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 9318              		.loc 1 4408 9 is_stmt 1
 9319 0084 0C301BE5 		ldr	r3, [fp, #-12]
 9320 0088 1C3093E5 		ldr	r3, [r3, #28]
 9321 008c 000053E3 		cmp	r3, #0
 9322 0090 0800000A 		beq	.L595
 9323              		.loc 1 4408 9 is_stmt 0 discriminator 1
 9324 0094 003000E3 		movw	r3, #:lower16:.LC2
 9325 0098 003040E3 		movt	r3, #:upper16:.LC2
 9326 009c 002000E3 		movw	r2, #:lower16:.LC3
 9327 00a0 002040E3 		movt	r2, #:upper16:.LC3
 9328 00a4 381101E3 		movw	r1, #4408
 9329 00a8 000000E3 		movw	r0, #:lower16:.LC4
 9330 00ac 000040E3 		movt	r0, #:upper16:.LC4
 9331 00b0 FEFFFFEB 		bl	RME_Log
 9332              	.L596:
 9333              		.loc 1 4408 9
 9334 00b4 FEFFFFEA 		b	.L596
 9335              	.L595:
4409:../../Source/Kernel/rme_kernel.c ****         
4410:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue */
4411:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thd_Cur);
 9336              		.loc 1 4411 9 is_stmt 1
 9337 00b8 0C001BE5 		ldr	r0, [fp, #-12]
 9338 00bc FEFFFFEB 		bl	_RME_Run_Del
4412:../../Source/Kernel/rme_kernel.c ****         
4413:../../Source/Kernel/rme_kernel.c ****         /* Exception pending and notify parent */
4414:../../Source/Kernel/rme_kernel.c ****         Thd_Cur->Sched.State=RME_THD_EXCPEND;
 9339              		.loc 1 4414 29
 9340 00c0 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 243


 9341 00c4 0320A0E3 		mov	r2, #3
 9342 00c8 1C2083E5 		str	r2, [r3, #28]
4415:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Notif(Thd_Cur);
 9343              		.loc 1 4415 9
 9344 00cc 0C001BE5 		ldr	r0, [fp, #-12]
 9345 00d0 FEFFFFEB 		bl	_RME_Run_Notif
4416:../../Source/Kernel/rme_kernel.c ****         
4417:../../Source/Kernel/rme_kernel.c ****         /* All kernel send complete, now pick the highest priority thread to run */
4418:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 9346              		.loc 1 4418 9
 9347 00d4 08101BE5 		ldr	r1, [fp, #-8]
 9348 00d8 10001BE5 		ldr	r0, [fp, #-16]
 9349 00dc FEFFFFEB 		bl	_RME_Kern_High
 9350              	.L597:
4419:../../Source/Kernel/rme_kernel.c ****     }
4420:../../Source/Kernel/rme_kernel.c ****     else
4421:../../Source/Kernel/rme_kernel.c ****     {
4422:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4423:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4424:../../Source/Kernel/rme_kernel.c ****     }
4425:../../Source/Kernel/rme_kernel.c **** }
 9351              		.loc 1 4425 1
 9352 00e0 00F020E3 		nop
 9353 00e4 04D04BE2 		sub	sp, fp, #4
 9354              		.cfi_def_cfa 13, 8
 9355              		@ sp needed
 9356 00e8 0088BDE8 		pop	{fp, pc}
 9357              		.cfi_endproc
 9358              	.LFE43:
 9360              		.section	.text._RME_Run_Ins,"ax",%progbits
 9361              		.align	2
 9362              		.syntax unified
 9363              		.arm
 9365              	_RME_Run_Ins:
 9366              	.LFB44:
4426:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Fatal ***********************************************/
4427:../../Source/Kernel/rme_kernel.c **** 
4428:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Ins ******************************************************
4429:../../Source/Kernel/rme_kernel.c **** Description : Insert a thread into the runqueue. In this function we do not
4430:../../Source/Kernel/rme_kernel.c ****               check if the thread is on the current core, or is runnable,
4431:../../Source/Kernel/rme_kernel.c ****               because it should have been checked by someone else.
4432:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to insert.
4433:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The cpu to consult.
4434:../../Source/Kernel/rme_kernel.c **** Output      : None.
4435:../../Source/Kernel/rme_kernel.c **** Return      : None.
4436:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4437:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Ins(struct RME_Thd_Struct* Thd)
4438:../../Source/Kernel/rme_kernel.c **** {
 9367              		.loc 1 4438 1
 9368              		.cfi_startproc
 9369              		@ args = 0, pretend = 0, frame = 16
 9370              		@ frame_needed = 1, uses_anonymous_args = 0
 9371 0000 00482DE9 		push	{fp, lr}
 9372              		.cfi_def_cfa_offset 8
 9373              		.cfi_offset 11, -8
 9374              		.cfi_offset 14, -4
 9375 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 244


 9376              		.cfi_def_cfa 11, 4
 9377 0008 10D04DE2 		sub	sp, sp, #16
 9378 000c 10000BE5 		str	r0, [fp, #-16]
4439:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4440:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4441:../../Source/Kernel/rme_kernel.c ****     
4442:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9379              		.loc 1 4442 9
 9380 0010 10301BE5 		ldr	r3, [fp, #-16]
 9381 0014 203093E5 		ldr	r3, [r3, #32]
 9382 0018 08300BE5 		str	r3, [fp, #-8]
4443:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9383              		.loc 1 4443 10
 9384 001c 10301BE5 		ldr	r3, [fp, #-16]
 9385 0020 143093E5 		ldr	r3, [r3, #20]
 9386 0024 0C300BE5 		str	r3, [fp, #-12]
4444:../../Source/Kernel/rme_kernel.c ****     
4445:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4446:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9387              		.loc 1 4446 5
 9388 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9389 002c 010073E3 		cmn	r3, #1
 9390 0030 0800001A 		bne	.L599
 9391              		.loc 1 4446 5 is_stmt 0 discriminator 1
 9392 0034 003000E3 		movw	r3, #:lower16:.LC2
 9393 0038 003040E3 		movt	r3, #:upper16:.LC2
 9394 003c 002000E3 		movw	r2, #:lower16:.LC3
 9395 0040 002040E3 		movt	r2, #:upper16:.LC3
 9396 0044 5E1101E3 		movw	r1, #4446
 9397 0048 000000E3 		movw	r0, #:lower16:.LC4
 9398 004c 000040E3 		movt	r0, #:upper16:.LC4
 9399 0050 FEFFFFEB 		bl	RME_Log
 9400              	.L600:
 9401              		.loc 1 4446 5
 9402 0054 FEFFFFEA 		b	.L600
 9403              	.L599:
4447:../../Source/Kernel/rme_kernel.c ****     
4448:../../Source/Kernel/rme_kernel.c ****     /* Insert this thread into the runqueue */
4449:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Thd->Sched.Run),
 9404              		.loc 1 4449 5 is_stmt 1
 9405 0058 10001BE5 		ldr	r0, [fp, #-16]
 9406 005c 0C201BE5 		ldr	r2, [fp, #-12]
 9407 0060 08301BE5 		ldr	r3, [fp, #-8]
 9408 0064 023083E2 		add	r3, r3, #2
 9409 0068 8331A0E1 		lsl	r3, r3, #3
 9410 006c 033082E0 		add	r3, r2, r3
 9411 0070 081093E5 		ldr	r1, [r3, #8]
 9412 0074 08301BE5 		ldr	r3, [fp, #-8]
 9413 0078 023083E2 		add	r3, r3, #2
 9414 007c 8331A0E1 		lsl	r3, r3, #3
 9415 0080 0C201BE5 		ldr	r2, [fp, #-12]
 9416 0084 033082E0 		add	r3, r2, r3
 9417 0088 043083E2 		add	r3, r3, #4
 9418 008c 0320A0E1 		mov	r2, r3
 9419 0090 FEFFFFEB 		bl	_RME_List_Ins
4450:../../Source/Kernel/rme_kernel.c ****                   Local->Run.List[Prio].Prev,
4451:../../Source/Kernel/rme_kernel.c ****                   &(Local->Run.List[Prio]));
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 245


4452:../../Source/Kernel/rme_kernel.c ****     
4453:../../Source/Kernel/rme_kernel.c ****     /* Set the bit in the bitmap */
4454:../../Source/Kernel/rme_kernel.c ****     RME_BITMAP_SET(Local->Run.Bitmap,Prio);
 9420              		.loc 1 4454 5
 9421 0094 08301BE5 		ldr	r3, [fp, #-8]
 9422 0098 A322A0E1 		lsr	r2, r3, #5
 9423 009c 0C301BE5 		ldr	r3, [fp, #-12]
 9424 00a0 042082E2 		add	r2, r2, #4
 9425 00a4 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9426 00a8 08301BE5 		ldr	r3, [fp, #-8]
 9427 00ac 1F3003E2 		and	r3, r3, #31
 9428 00b0 0120A0E3 		mov	r2, #1
 9429 00b4 1233A0E1 		lsl	r3, r2, r3
 9430 00b8 08201BE5 		ldr	r2, [fp, #-8]
 9431 00bc A222A0E1 		lsr	r2, r2, #5
 9432 00c0 031081E1 		orr	r1, r1, r3
 9433 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 9434 00c8 042082E2 		add	r2, r2, #4
 9435 00cc 021183E7 		str	r1, [r3, r2, lsl #2]
4455:../../Source/Kernel/rme_kernel.c **** }
 9436              		.loc 1 4455 1
 9437 00d0 00F020E3 		nop
 9438 00d4 04D04BE2 		sub	sp, fp, #4
 9439              		.cfi_def_cfa 13, 8
 9440              		@ sp needed
 9441 00d8 0088BDE8 		pop	{fp, pc}
 9442              		.cfi_endproc
 9443              	.LFE44:
 9445              		.section	.text._RME_Run_Del,"ax",%progbits
 9446              		.align	2
 9447              		.syntax unified
 9448              		.arm
 9450              	_RME_Run_Del:
 9451              	.LFB45:
4456:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Ins *************************************************/
4457:../../Source/Kernel/rme_kernel.c **** 
4458:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Del ******************************************************
4459:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread from the runqueue.
4460:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to delete.
4461:../../Source/Kernel/rme_kernel.c **** Output      : None.
4462:../../Source/Kernel/rme_kernel.c **** Return      : None.
4463:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4464:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Del(struct RME_Thd_Struct* Thd)
4465:../../Source/Kernel/rme_kernel.c **** {
 9452              		.loc 1 4465 1
 9453              		.cfi_startproc
 9454              		@ args = 0, pretend = 0, frame = 16
 9455              		@ frame_needed = 1, uses_anonymous_args = 0
 9456 0000 00482DE9 		push	{fp, lr}
 9457              		.cfi_def_cfa_offset 8
 9458              		.cfi_offset 11, -8
 9459              		.cfi_offset 14, -4
 9460 0004 04B08DE2 		add	fp, sp, #4
 9461              		.cfi_def_cfa 11, 4
 9462 0008 10D04DE2 		sub	sp, sp, #16
 9463 000c 10000BE5 		str	r0, [fp, #-16]
4466:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 246


4467:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4468:../../Source/Kernel/rme_kernel.c ****     
4469:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9464              		.loc 1 4469 9
 9465 0010 10301BE5 		ldr	r3, [fp, #-16]
 9466 0014 203093E5 		ldr	r3, [r3, #32]
 9467 0018 08300BE5 		str	r3, [fp, #-8]
4470:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9468              		.loc 1 4470 10
 9469 001c 10301BE5 		ldr	r3, [fp, #-16]
 9470 0020 143093E5 		ldr	r3, [r3, #20]
 9471 0024 0C300BE5 		str	r3, [fp, #-12]
4471:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4472:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9472              		.loc 1 4472 5
 9473 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9474 002c 010073E3 		cmn	r3, #1
 9475 0030 0800001A 		bne	.L602
 9476              		.loc 1 4472 5 is_stmt 0 discriminator 1
 9477 0034 003000E3 		movw	r3, #:lower16:.LC2
 9478 0038 003040E3 		movt	r3, #:upper16:.LC2
 9479 003c 002000E3 		movw	r2, #:lower16:.LC3
 9480 0040 002040E3 		movt	r2, #:upper16:.LC3
 9481 0044 781101E3 		movw	r1, #4472
 9482 0048 000000E3 		movw	r0, #:lower16:.LC4
 9483 004c 000040E3 		movt	r0, #:upper16:.LC4
 9484 0050 FEFFFFEB 		bl	RME_Log
 9485              	.L603:
 9486              		.loc 1 4472 5
 9487 0054 FEFFFFEA 		b	.L603
 9488              	.L602:
4473:../../Source/Kernel/rme_kernel.c ****     
4474:../../Source/Kernel/rme_kernel.c ****     /* Delete this thread from the runqueue */
4475:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thd->Sched.Run.Prev,Thd->Sched.Run.Next);
 9489              		.loc 1 4475 5 is_stmt 1
 9490 0058 10301BE5 		ldr	r3, [fp, #-16]
 9491 005c 042093E5 		ldr	r2, [r3, #4]
 9492 0060 10301BE5 		ldr	r3, [fp, #-16]
 9493 0064 003093E5 		ldr	r3, [r3]
 9494 0068 0310A0E1 		mov	r1, r3
 9495 006c 0200A0E1 		mov	r0, r2
 9496 0070 FEFFFFEB 		bl	_RME_List_Del
4476:../../Source/Kernel/rme_kernel.c ****     
4477:../../Source/Kernel/rme_kernel.c ****     /* See if there are any thread on this priority level */
4478:../../Source/Kernel/rme_kernel.c ****     if(Local->Run.List[Prio].Next==&(Local->Run.List[Prio]))
 9497              		.loc 1 4478 29
 9498 0074 0C201BE5 		ldr	r2, [fp, #-12]
 9499 0078 08301BE5 		ldr	r3, [fp, #-8]
 9500 007c 023083E2 		add	r3, r3, #2
 9501 0080 8331A0E1 		lsl	r3, r3, #3
 9502 0084 033082E0 		add	r3, r2, r3
 9503 0088 042093E5 		ldr	r2, [r3, #4]
 9504              		.loc 1 4478 36
 9505 008c 08301BE5 		ldr	r3, [fp, #-8]
 9506 0090 023083E2 		add	r3, r3, #2
 9507 0094 8331A0E1 		lsl	r3, r3, #3
 9508 0098 0C101BE5 		ldr	r1, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 247


 9509 009c 033081E0 		add	r3, r1, r3
 9510 00a0 043083E2 		add	r3, r3, #4
 9511              		.loc 1 4478 7
 9512 00a4 030052E1 		cmp	r2, r3
 9513 00a8 0F00001A 		bne	.L605
4479:../../Source/Kernel/rme_kernel.c ****     {
4480:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4481:../../Source/Kernel/rme_kernel.c **** 
4482:../../Source/Kernel/rme_kernel.c ****         /* Nothing running, clear the bit in the bitmap */
4483:../../Source/Kernel/rme_kernel.c ****         RME_BITMAP_CLR(Local->Run.Bitmap,Prio);
 9514              		.loc 1 4483 9
 9515 00ac 08301BE5 		ldr	r3, [fp, #-8]
 9516 00b0 A322A0E1 		lsr	r2, r3, #5
 9517 00b4 0C301BE5 		ldr	r3, [fp, #-12]
 9518 00b8 042082E2 		add	r2, r2, #4
 9519 00bc 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9520 00c0 08301BE5 		ldr	r3, [fp, #-8]
 9521 00c4 1F3003E2 		and	r3, r3, #31
 9522 00c8 0120A0E3 		mov	r2, #1
 9523 00cc 1233A0E1 		lsl	r3, r2, r3
 9524 00d0 0330E0E1 		mvn	r3, r3
 9525 00d4 08201BE5 		ldr	r2, [fp, #-8]
 9526 00d8 A222A0E1 		lsr	r2, r2, #5
 9527 00dc 031001E0 		and	r1, r1, r3
 9528 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 9529 00e4 042082E2 		add	r2, r2, #4
 9530 00e8 021183E7 		str	r1, [r3, r2, lsl #2]
 9531              	.L605:
4484:../../Source/Kernel/rme_kernel.c ****     }
4485:../../Source/Kernel/rme_kernel.c ****     else
4486:../../Source/Kernel/rme_kernel.c ****     {
4487:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4488:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4489:../../Source/Kernel/rme_kernel.c ****     }
4490:../../Source/Kernel/rme_kernel.c **** }
 9532              		.loc 1 4490 1
 9533 00ec 00F020E3 		nop
 9534 00f0 04D04BE2 		sub	sp, fp, #4
 9535              		.cfi_def_cfa 13, 8
 9536              		@ sp needed
 9537 00f4 0088BDE8 		pop	{fp, pc}
 9538              		.cfi_endproc
 9539              	.LFE45:
 9541              		.section	.text._RME_Run_High,"ax",%progbits
 9542              		.align	2
 9543              		.syntax unified
 9544              		.arm
 9546              	_RME_Run_High:
 9547              	.LFB46:
4491:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Del *************************************************/
4492:../../Source/Kernel/rme_kernel.c **** 
4493:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_High *****************************************************
4494:../../Source/Kernel/rme_kernel.c **** Description : Find the thread with the highest priority on the core.
4495:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The CPU-local data structure.
4496:../../Source/Kernel/rme_kernel.c **** Output      : None.
4497:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Thd_Struct* - The thread returned.
4498:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 248


4499:../../Source/Kernel/rme_kernel.c **** static struct RME_Thd_Struct* _RME_Run_High(struct RME_CPU_Local* Local)
4500:../../Source/Kernel/rme_kernel.c **** {
 9548              		.loc 1 4500 1
 9549              		.cfi_startproc
 9550              		@ args = 0, pretend = 0, frame = 16
 9551              		@ frame_needed = 1, uses_anonymous_args = 0
 9552 0000 00482DE9 		push	{fp, lr}
 9553              		.cfi_def_cfa_offset 8
 9554              		.cfi_offset 11, -8
 9555              		.cfi_offset 14, -4
 9556 0004 04B08DE2 		add	fp, sp, #4
 9557              		.cfi_def_cfa 11, 4
 9558 0008 10D04DE2 		sub	sp, sp, #16
 9559 000c 10000BE5 		str	r0, [fp, #-16]
4501:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
4502:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4503:../../Source/Kernel/rme_kernel.c ****     
4504:../../Source/Kernel/rme_kernel.c ****     /* We start looking for preemption priority levels from the highest */
4505:../../Source/Kernel/rme_kernel.c ****     for(Count=(rme_cnt_t)(RME_PRIO_WORD_NUM-1U);Count>=0;Count--)
 9560              		.loc 1 4505 14
 9561 0010 0030A0E3 		mov	r3, #0
 9562 0014 08300BE5 		str	r3, [fp, #-8]
 9563              		.loc 1 4505 5
 9564 0018 080000EA 		b	.L607
 9565              	.L610:
4506:../../Source/Kernel/rme_kernel.c ****     {
4507:../../Source/Kernel/rme_kernel.c ****         if(Local->Run.Bitmap[Count]!=0U)
 9566              		.loc 1 4507 29
 9567 001c 10301BE5 		ldr	r3, [fp, #-16]
 9568 0020 08201BE5 		ldr	r2, [fp, #-8]
 9569 0024 042082E2 		add	r2, r2, #4
 9570 0028 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9571              		.loc 1 4507 11
 9572 002c 000053E3 		cmp	r3, #0
 9573 0030 0600001A 		bne	.L614
4505:../../Source/Kernel/rme_kernel.c ****     {
 9574              		.loc 1 4505 63 discriminator 2
 9575 0034 08301BE5 		ldr	r3, [fp, #-8]
 9576 0038 013043E2 		sub	r3, r3, #1
 9577 003c 08300BE5 		str	r3, [fp, #-8]
 9578              	.L607:
4505:../../Source/Kernel/rme_kernel.c ****     {
 9579              		.loc 1 4505 54 discriminator 1
 9580 0040 08301BE5 		ldr	r3, [fp, #-8]
 9581 0044 000053E3 		cmp	r3, #0
 9582 0048 F3FFFFAA 		bge	.L610
 9583 004c 000000EA 		b	.L609
 9584              	.L614:
4508:../../Source/Kernel/rme_kernel.c ****         {
4509:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4510:../../Source/Kernel/rme_kernel.c ****             
4511:../../Source/Kernel/rme_kernel.c ****             break;
 9585              		.loc 1 4511 13
 9586 0050 00F020E3 		nop
 9587              	.L609:
4512:../../Source/Kernel/rme_kernel.c ****         }
4513:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 249


4514:../../Source/Kernel/rme_kernel.c ****         {
4515:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4516:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4517:../../Source/Kernel/rme_kernel.c ****         }
4518:../../Source/Kernel/rme_kernel.c ****     }
4519:../../Source/Kernel/rme_kernel.c ****     
4520:../../Source/Kernel/rme_kernel.c ****     /* It must be possible to find one thread per core */
4521:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Count>=0);
 9588              		.loc 1 4521 5
 9589 0054 08301BE5 		ldr	r3, [fp, #-8]
 9590 0058 000053E3 		cmp	r3, #0
 9591 005c 080000AA 		bge	.L611
 9592              		.loc 1 4521 5 is_stmt 0 discriminator 1
 9593 0060 003000E3 		movw	r3, #:lower16:.LC2
 9594 0064 003040E3 		movt	r3, #:upper16:.LC2
 9595 0068 002000E3 		movw	r2, #:lower16:.LC3
 9596 006c 002040E3 		movt	r2, #:upper16:.LC3
 9597 0070 A91101E3 		movw	r1, #4521
 9598 0074 000000E3 		movw	r0, #:lower16:.LC4
 9599 0078 000040E3 		movt	r0, #:upper16:.LC4
 9600 007c FEFFFFEB 		bl	RME_Log
 9601              	.L612:
 9602              		.loc 1 4521 5
 9603 0080 FEFFFFEA 		b	.L612
 9604              	.L611:
4522:../../Source/Kernel/rme_kernel.c **** 
4523:../../Source/Kernel/rme_kernel.c ****     /* Get the first "1"'s position in the word */
4524:../../Source/Kernel/rme_kernel.c ****     Prio=RME_MSB_GET(Local->Run.Bitmap[Count]);
 9605              		.loc 1 4524 10 is_stmt 1
 9606 0084 10301BE5 		ldr	r3, [fp, #-16]
 9607 0088 08201BE5 		ldr	r2, [fp, #-8]
 9608 008c 042082E2 		add	r2, r2, #4
 9609 0090 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9610 0094 0300A0E1 		mov	r0, r3
 9611 0098 FEFFFFEB 		bl	__RME_A7A_MSB_Get
 9612 009c 0C000BE5 		str	r0, [fp, #-12]
4525:../../Source/Kernel/rme_kernel.c ****     Prio+=((rme_ptr_t)Count)<<RME_WORD_ORDER;
 9613              		.loc 1 4525 29
 9614 00a0 08301BE5 		ldr	r3, [fp, #-8]
 9615 00a4 8332A0E1 		lsl	r3, r3, #5
 9616              		.loc 1 4525 9
 9617 00a8 0C201BE5 		ldr	r2, [fp, #-12]
 9618 00ac 033082E0 		add	r3, r2, r3
 9619 00b0 0C300BE5 		str	r3, [fp, #-12]
4526:../../Source/Kernel/rme_kernel.c **** 
4527:../../Source/Kernel/rme_kernel.c ****     /* Now there is something at this priority level. Get it and start to run */
4528:../../Source/Kernel/rme_kernel.c ****     return (struct RME_Thd_Struct*)(Local->Run.List[Prio].Next);
 9620              		.loc 1 4528 12
 9621 00b4 10201BE5 		ldr	r2, [fp, #-16]
 9622 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 9623 00bc 023083E2 		add	r3, r3, #2
 9624 00c0 8331A0E1 		lsl	r3, r3, #3
 9625 00c4 033082E0 		add	r3, r2, r3
 9626 00c8 043093E5 		ldr	r3, [r3, #4]
4529:../../Source/Kernel/rme_kernel.c **** }
 9627              		.loc 1 4529 1
 9628 00cc 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 250


 9629 00d0 04D04BE2 		sub	sp, fp, #4
 9630              		.cfi_def_cfa 13, 8
 9631              		@ sp needed
 9632 00d4 0088BDE8 		pop	{fp, pc}
 9633              		.cfi_endproc
 9634              	.LFE46:
 9636              		.section	.text._RME_Run_Notif,"ax",%progbits
 9637              		.align	2
 9638              		.syntax unified
 9639              		.arm
 9641              	_RME_Run_Notif:
 9642              	.LFB47:
4530:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_High ************************************************/
4531:../../Source/Kernel/rme_kernel.c **** 
4532:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Notif ****************************************************
4533:../../Source/Kernel/rme_kernel.c **** Description : Send a notification to the thread's parent, to notify that this 
4534:../../Source/Kernel/rme_kernel.c ****               thread is currently out of time, or have a fault.
4535:../../Source/Kernel/rme_kernel.c ****               This function includes kernel send, so we need to call 
4536:../../Source/Kernel/rme_kernel.c ****               _RME_Kern_High after this. The only exception being the
4537:../../Source/Kernel/rme_kernel.c ****               _RME_Thd_Swt system call, which we use a more optimized routine.
4538:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to send notification for.
4539:../../Source/Kernel/rme_kernel.c **** Output      : None.
4540:../../Source/Kernel/rme_kernel.c **** Return      : None.
4541:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4542:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Notif(struct RME_Thd_Struct* Thd)
4543:../../Source/Kernel/rme_kernel.c **** {
 9643              		.loc 1 4543 1
 9644              		.cfi_startproc
 9645              		@ args = 0, pretend = 0, frame = 16
 9646              		@ frame_needed = 1, uses_anonymous_args = 0
 9647 0000 00482DE9 		push	{fp, lr}
 9648              		.cfi_def_cfa_offset 8
 9649              		.cfi_offset 11, -8
 9650              		.cfi_offset 14, -4
 9651 0004 04B08DE2 		add	fp, sp, #4
 9652              		.cfi_def_cfa 11, 4
 9653 0008 10D04DE2 		sub	sp, sp, #16
 9654 000c 10000BE5 		str	r0, [fp, #-16]
4544:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Sched_Thd;
4545:../../Source/Kernel/rme_kernel.c ****     
4546:../../Source/Kernel/rme_kernel.c ****     Sched_Thd=Thd->Sched.Sched_Thd;
 9655              		.loc 1 4546 14
 9656 0010 10301BE5 		ldr	r3, [fp, #-16]
 9657 0014 343093E5 		ldr	r3, [r3, #52]
 9658 0018 08300BE5 		str	r3, [fp, #-8]
4547:../../Source/Kernel/rme_kernel.c ****     
4548:../../Source/Kernel/rme_kernel.c ****     /* See if there is already a notification. If yes, do not do the send again */
4549:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Notif.Next==&(Thd->Sched.Notif))
 9659              		.loc 1 4549 24
 9660 001c 10301BE5 		ldr	r3, [fp, #-16]
 9661 0020 082093E5 		ldr	r2, [r3, #8]
 9662              		.loc 1 4549 31
 9663 0024 10301BE5 		ldr	r3, [fp, #-16]
 9664 0028 083083E2 		add	r3, r3, #8
 9665              		.loc 1 4549 7
 9666 002c 030052E1 		cmp	r2, r3
 9667 0030 0700001A 		bne	.L616
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 251


4550:../../Source/Kernel/rme_kernel.c ****     {
4551:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4552:../../Source/Kernel/rme_kernel.c **** 
4553:../../Source/Kernel/rme_kernel.c ****         _RME_List_Ins(&(Thd->Sched.Notif), 
 9668              		.loc 1 4553 9
 9669 0034 10301BE5 		ldr	r3, [fp, #-16]
 9670 0038 080083E2 		add	r0, r3, #8
 9671 003c 08301BE5 		ldr	r3, [fp, #-8]
 9672 0040 401093E5 		ldr	r1, [r3, #64]
 9673 0044 08301BE5 		ldr	r3, [fp, #-8]
 9674 0048 3C3083E2 		add	r3, r3, #60
 9675 004c 0320A0E1 		mov	r2, r3
 9676 0050 FEFFFFEB 		bl	_RME_List_Ins
 9677              	.L616:
4554:../../Source/Kernel/rme_kernel.c ****                       Sched_Thd->Sched.Event.Prev,&(Sched_Thd->Sched.Event));
4555:../../Source/Kernel/rme_kernel.c ****     }
4556:../../Source/Kernel/rme_kernel.c ****     else
4557:../../Source/Kernel/rme_kernel.c ****     {
4558:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4559:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4560:../../Source/Kernel/rme_kernel.c ****     }
4561:../../Source/Kernel/rme_kernel.c **** 
4562:../../Source/Kernel/rme_kernel.c ****     /* If this guy have an endpoint, send to it */
4563:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Sched_Sig!=0U)
 9678              		.loc 1 4563 18
 9679 0054 10301BE5 		ldr	r3, [fp, #-16]
 9680 0058 383093E5 		ldr	r3, [r3, #56]
 9681              		.loc 1 4563 7
 9682 005c 000053E3 		cmp	r3, #0
 9683 0060 0300000A 		beq	.L618
4564:../../Source/Kernel/rme_kernel.c ****     {
4565:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4566:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_Snd(Thd->Sched.Sched_Sig);
 9684              		.loc 1 4566 9
 9685 0064 10301BE5 		ldr	r3, [fp, #-16]
 9686 0068 383093E5 		ldr	r3, [r3, #56]
 9687 006c 0300A0E1 		mov	r0, r3
 9688 0070 FEFFFFEB 		bl	_RME_Kern_Snd
 9689              	.L618:
4567:../../Source/Kernel/rme_kernel.c ****     }
4568:../../Source/Kernel/rme_kernel.c ****     else
4569:../../Source/Kernel/rme_kernel.c ****     {
4570:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4571:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4572:../../Source/Kernel/rme_kernel.c ****     }
4573:../../Source/Kernel/rme_kernel.c **** }
 9690              		.loc 1 4573 1
 9691 0074 00F020E3 		nop
 9692 0078 04D04BE2 		sub	sp, fp, #4
 9693              		.cfi_def_cfa 13, 8
 9694              		@ sp needed
 9695 007c 0088BDE8 		pop	{fp, pc}
 9696              		.cfi_endproc
 9697              	.LFE47:
 9699              		.section	.text._RME_Thd_Pgt,"ax",%progbits
 9700              		.align	2
 9701              		.global	_RME_Thd_Pgt
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 252


 9702              		.syntax unified
 9703              		.arm
 9705              	_RME_Thd_Pgt:
 9706              	.LFB48:
4574:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Notif ***********************************************/
4575:../../Source/Kernel/rme_kernel.c **** 
4576:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Pgt ******************************************************
4577:../../Source/Kernel/rme_kernel.c **** Description : Get a thread's page table. 
4578:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread.
4579:../../Source/Kernel/rme_kernel.c **** Output      : None.
4580:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Cap_Pgt* / rme_ptr_t - The page table.
4581:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4582:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4583:../../Source/Kernel/rme_kernel.c **** struct RME_Cap_Pgt* _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4584:../../Source/Kernel/rme_kernel.c **** #else
4585:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4586:../../Source/Kernel/rme_kernel.c **** #endif
4587:../../Source/Kernel/rme_kernel.c **** {
 9707              		.loc 1 4587 1
 9708              		.cfi_startproc
 9709              		@ args = 0, pretend = 0, frame = 16
 9710              		@ frame_needed = 1, uses_anonymous_args = 0
 9711              		@ link register save eliminated.
 9712 0000 04B02DE5 		str	fp, [sp, #-4]!
 9713              		.cfi_def_cfa_offset 4
 9714              		.cfi_offset 11, -4
 9715 0004 00B08DE2 		add	fp, sp, #0
 9716              		.cfi_def_cfa_register 11
 9717 0008 14D04DE2 		sub	sp, sp, #20
 9718 000c 10000BE5 		str	r0, [fp, #-16]
4588:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
4589:../../Source/Kernel/rme_kernel.c ****     
4590:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd);
 9719              		.loc 1 4590 13
 9720 0010 10301BE5 		ldr	r3, [fp, #-16]
 9721 0014 4C2093E5 		ldr	r2, [r3, #76]
 9722 0018 10301BE5 		ldr	r3, [fp, #-16]
 9723 001c 4C3083E2 		add	r3, r3, #76
 9724 0020 030052E1 		cmp	r2, r3
 9725 0024 0200000A 		beq	.L620
 9726              		.loc 1 4590 13 is_stmt 0 discriminator 1
 9727 0028 10301BE5 		ldr	r3, [fp, #-16]
 9728 002c 4C3093E5 		ldr	r3, [r3, #76]
 9729 0030 000000EA 		b	.L621
 9730              	.L620:
 9731              		.loc 1 4590 13 discriminator 2
 9732 0034 0030A0E3 		mov	r3, #0
 9733              	.L621:
 9734              		.loc 1 4590 12 is_stmt 1 discriminator 4
 9735 0038 08300BE5 		str	r3, [fp, #-8]
4591:../../Source/Kernel/rme_kernel.c ****     
4592:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 9736              		.loc 1 4592 7
 9737 003c 08301BE5 		ldr	r3, [fp, #-8]
 9738 0040 000053E3 		cmp	r3, #0
 9739 0044 0300001A 		bne	.L622
4593:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 253


4594:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4595:../../Source/Kernel/rme_kernel.c **** 
4596:../../Source/Kernel/rme_kernel.c ****         return Thd->Sched.Prc->Pgt;
 9740              		.loc 1 4596 26
 9741 0048 10301BE5 		ldr	r3, [fp, #-16]
 9742 004c 2C3093E5 		ldr	r3, [r3, #44]
 9743              		.loc 1 4596 30
 9744 0050 183093E5 		ldr	r3, [r3, #24]
 9745 0054 020000EA 		b	.L623
 9746              	.L622:
4597:../../Source/Kernel/rme_kernel.c ****     }
4598:../../Source/Kernel/rme_kernel.c ****     else
4599:../../Source/Kernel/rme_kernel.c ****     {
4600:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4601:../../Source/Kernel/rme_kernel.c **** 
4602:../../Source/Kernel/rme_kernel.c ****         return Inv_Top->Prc->Pgt;
 9747              		.loc 1 4602 23
 9748 0058 08301BE5 		ldr	r3, [fp, #-8]
 9749 005c 083093E5 		ldr	r3, [r3, #8]
 9750              		.loc 1 4602 28
 9751 0060 183093E5 		ldr	r3, [r3, #24]
 9752              	.L623:
4603:../../Source/Kernel/rme_kernel.c ****     }
4604:../../Source/Kernel/rme_kernel.c **** }
 9753              		.loc 1 4604 1
 9754 0064 0300A0E1 		mov	r0, r3
 9755 0068 00D08BE2 		add	sp, fp, #0
 9756              		.cfi_def_cfa_register 13
 9757              		@ sp needed
 9758 006c 04B09DE4 		ldr	fp, [sp], #4
 9759              		.cfi_restore 11
 9760              		.cfi_def_cfa_offset 0
 9761 0070 1EFF2FE1 		bx	lr
 9762              		.cfi_endproc
 9763              	.LFE48:
 9765              		.section	.text._RME_Run_Swt,"ax",%progbits
 9766              		.align	2
 9767              		.syntax unified
 9768              		.arm
 9770              	_RME_Run_Swt:
 9771              	.LFB49:
4605:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Pgt *************************************************/
4606:../../Source/Kernel/rme_kernel.c **** 
4607:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Swt ******************************************************
4608:../../Source/Kernel/rme_kernel.c **** Description : Switch the register set and page table to another thread. 
4609:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4610:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_Cur - The current thread.
4611:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_New - The next thread.
4612:../../Source/Kernel/rme_kernel.c **** Output      : None.
4613:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
4614:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4615:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Run_Swt(struct RME_Reg_Struct* Reg,
4616:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_Cur, 
4617:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_New)
4618:../../Source/Kernel/rme_kernel.c **** {
 9772              		.loc 1 4618 1
 9773              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 254


 9774              		@ args = 0, pretend = 0, frame = 32
 9775              		@ frame_needed = 1, uses_anonymous_args = 0
 9776 0000 00482DE9 		push	{fp, lr}
 9777              		.cfi_def_cfa_offset 8
 9778              		.cfi_offset 11, -8
 9779              		.cfi_offset 14, -4
 9780 0004 04B08DE2 		add	fp, sp, #4
 9781              		.cfi_def_cfa 11, 4
 9782 0008 20D04DE2 		sub	sp, sp, #32
 9783 000c 18000BE5 		str	r0, [fp, #-24]
 9784 0010 1C100BE5 		str	r1, [fp, #-28]
 9785 0014 20200BE5 		str	r2, [fp, #-32]
4619:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4620:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Cur;
4621:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4622:../../Source/Kernel/rme_kernel.c **** #else
4623:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Cur;
4624:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_New;
4625:../../Source/Kernel/rme_kernel.c **** #endif
4626:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_Cur;
4627:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_New;
4628:../../Source/Kernel/rme_kernel.c ****     
4629:../../Source/Kernel/rme_kernel.c ****     Reg_Cur=&(Thd_Cur->Ctx.Reg->Reg);
 9786              		.loc 1 4629 27
 9787 0018 1C301BE5 		ldr	r3, [fp, #-28]
 9788 001c 483093E5 		ldr	r3, [r3, #72]
 9789              		.loc 1 4629 12
 9790 0020 08300BE5 		str	r3, [fp, #-8]
4630:../../Source/Kernel/rme_kernel.c ****     Reg_New=&(Thd_New->Ctx.Reg->Reg);
 9791              		.loc 1 4630 27
 9792 0024 20301BE5 		ldr	r3, [fp, #-32]
 9793 0028 483093E5 		ldr	r3, [r3, #72]
 9794              		.loc 1 4630 12
 9795 002c 0C300BE5 		str	r3, [fp, #-12]
4631:../../Source/Kernel/rme_kernel.c ****     
4632:../../Source/Kernel/rme_kernel.c ****     /* Save register context */
4633:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg_Cur,Reg);
 9796              		.loc 1 4633 5
 9797 0030 18101BE5 		ldr	r1, [fp, #-24]
 9798 0034 08001BE5 		ldr	r0, [fp, #-8]
 9799 0038 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4634:../../Source/Kernel/rme_kernel.c ****     
4635:../../Source/Kernel/rme_kernel.c ****     /* If coprocessor is enabled, handle coprocessor context as well */
4636:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
4637:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Cop_Swap(RME_THD_ATTR(Thd_New->Ctx.Hyp_Attr),
4638:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_New->Ctx.Hyp_Attr),
4639:../../Source/Kernel/rme_kernel.c ****                        Reg_New,Thd_New->Ctx.Reg->Cop,
4640:../../Source/Kernel/rme_kernel.c ****                        RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
4641:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_Cur->Ctx.Hyp_Attr),
4642:../../Source/Kernel/rme_kernel.c ****                        Reg_Cur,Thd_Cur->Ctx.Reg->Cop);
4643:../../Source/Kernel/rme_kernel.c **** #endif
4644:../../Source/Kernel/rme_kernel.c **** 
4645:../../Source/Kernel/rme_kernel.c ****     /* Load register context */
4646:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg,Reg_New);
 9800              		.loc 1 4646 5
 9801 003c 0C101BE5 		ldr	r1, [fp, #-12]
 9802 0040 18001BE5 		ldr	r0, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 255


 9803 0044 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4647:../../Source/Kernel/rme_kernel.c **** 
4648:../../Source/Kernel/rme_kernel.c ****     /* Are we going to switch page tables? If yes, we change it now */
4649:../../Source/Kernel/rme_kernel.c ****     Pgt_Cur=_RME_Thd_Pgt(Thd_Cur);
 9804              		.loc 1 4649 13
 9805 0048 1C001BE5 		ldr	r0, [fp, #-28]
 9806 004c FEFFFFEB 		bl	_RME_Thd_Pgt
 9807 0050 10000BE5 		str	r0, [fp, #-16]
4650:../../Source/Kernel/rme_kernel.c ****     Pgt_New=_RME_Thd_Pgt(Thd_New);
 9808              		.loc 1 4650 13
 9809 0054 20001BE5 		ldr	r0, [fp, #-32]
 9810 0058 FEFFFFEB 		bl	_RME_Thd_Pgt
 9811 005c 14000BE5 		str	r0, [fp, #-20]
4651:../../Source/Kernel/rme_kernel.c **** 
4652:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4653:../../Source/Kernel/rme_kernel.c ****     /* The page tables here must be root cap */
4654:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_Cur)!=0U);
 9812              		.loc 1 4654 5
 9813 0060 10301BE5 		ldr	r3, [fp, #-16]
 9814 0064 003093E5 		ldr	r3, [r3]
 9815 0068 7330FFE6 		uxth	r3, r3
 9816 006c 000053E3 		cmp	r3, #0
 9817 0070 0800000A 		beq	.L625
 9818              		.loc 1 4654 5 is_stmt 0 discriminator 1
 9819 0074 003000E3 		movw	r3, #:lower16:.LC2
 9820 0078 003040E3 		movt	r3, #:upper16:.LC2
 9821 007c 002000E3 		movw	r2, #:lower16:.LC3
 9822 0080 002040E3 		movt	r2, #:upper16:.LC3
 9823 0084 2E1201E3 		movw	r1, #4654
 9824 0088 000000E3 		movw	r0, #:lower16:.LC4
 9825 008c 000040E3 		movt	r0, #:upper16:.LC4
 9826 0090 FEFFFFEB 		bl	RME_Log
 9827              	.L626:
 9828              		.loc 1 4654 5
 9829 0094 FEFFFFEA 		b	.L626
 9830              	.L625:
4655:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_New)!=0U);
 9831              		.loc 1 4655 5 is_stmt 1
 9832 0098 14301BE5 		ldr	r3, [fp, #-20]
 9833 009c 003093E5 		ldr	r3, [r3]
 9834 00a0 7330FFE6 		uxth	r3, r3
 9835 00a4 000053E3 		cmp	r3, #0
 9836 00a8 0800000A 		beq	.L627
 9837              		.loc 1 4655 5 is_stmt 0 discriminator 1
 9838 00ac 003000E3 		movw	r3, #:lower16:.LC2
 9839 00b0 003040E3 		movt	r3, #:upper16:.LC2
 9840 00b4 002000E3 		movw	r2, #:lower16:.LC3
 9841 00b8 002040E3 		movt	r2, #:upper16:.LC3
 9842 00bc 2F1201E3 		movw	r1, #4655
 9843 00c0 000000E3 		movw	r0, #:lower16:.LC4
 9844 00c4 000040E3 		movt	r0, #:upper16:.LC4
 9845 00c8 FEFFFFEB 		bl	RME_Log
 9846              	.L628:
 9847              		.loc 1 4655 5
 9848 00cc FEFFFFEA 		b	.L628
 9849              	.L627:
4656:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 256


4657:../../Source/Kernel/rme_kernel.c ****     
4658:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4659:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_GETOBJ(Pgt_Cur,rme_ptr_t)!=RME_CAP_GETOBJ(Pgt_New,rme_ptr_t))
 9850              		.loc 1 4659 8 is_stmt 1
 9851 00d0 10301BE5 		ldr	r3, [fp, #-16]
 9852 00d4 0C2093E5 		ldr	r2, [r3, #12]
 9853              		.loc 1 4659 43
 9854 00d8 14301BE5 		ldr	r3, [fp, #-20]
 9855 00dc 0C3093E5 		ldr	r3, [r3, #12]
 9856              		.loc 1 4659 7
 9857 00e0 030052E1 		cmp	r2, r3
 9858 00e4 0100000A 		beq	.L629
4660:../../Source/Kernel/rme_kernel.c **** #else
4661:../../Source/Kernel/rme_kernel.c ****     if(Pgt_Cur!=Pgt_New)
4662:../../Source/Kernel/rme_kernel.c **** #endif
4663:../../Source/Kernel/rme_kernel.c ****     {
4664:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4665:../../Source/Kernel/rme_kernel.c ****         /*RME_DBG_S("\r\n***************************SWT PGT*********************************\r\n");
4666:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("Cur - ");
4667:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pgt_Cur);
4668:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n");;
4669:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("New - ");
4670:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pgt_New);
4671:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n");*/
4672:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Pgt_New);
 9859              		.loc 1 4672 9
 9860 00e8 14001BE5 		ldr	r0, [fp, #-20]
 9861 00ec FEFFFFEB 		bl	__RME_Pgt_Set
 9862              	.L629:
4673:../../Source/Kernel/rme_kernel.c ****     }
4674:../../Source/Kernel/rme_kernel.c ****     else
4675:../../Source/Kernel/rme_kernel.c ****     {
4676:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4677:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4678:../../Source/Kernel/rme_kernel.c ****     }
4679:../../Source/Kernel/rme_kernel.c **** 
4680:../../Source/Kernel/rme_kernel.c ****     return 0;
 9863              		.loc 1 4680 12
 9864 00f0 0030A0E3 		mov	r3, #0
4681:../../Source/Kernel/rme_kernel.c **** }
 9865              		.loc 1 4681 1
 9866 00f4 0300A0E1 		mov	r0, r3
 9867 00f8 04D04BE2 		sub	sp, fp, #4
 9868              		.cfi_def_cfa 13, 8
 9869              		@ sp needed
 9870 00fc 0088BDE8 		pop	{fp, pc}
 9871              		.cfi_endproc
 9872              	.LFE49:
 9874              		.section	.text._RME_Prc_Boot_Crt,"ax",%progbits
 9875              		.align	2
 9876              		.global	_RME_Prc_Boot_Crt
 9877              		.syntax unified
 9878              		.arm
 9880              	_RME_Prc_Boot_Crt:
 9881              	.LFB50:
4682:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Swt *************************************************/
4683:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 257


4684:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Boot_Crt *************************************************
4685:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4686:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4687:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and is
4688:../../Source/Kernel/rme_kernel.c ****               only used to create the first process at boot-time.
4689:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4690:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4691:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4692:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4693:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4694:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4695:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4696:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4697:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4698:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4699:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4700:../../Source/Kernel/rme_kernel.c ****                                   this process.
4701:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4702:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4703:../../Source/Kernel/rme_kernel.c ****                                   address.
4704:../../Source/Kernel/rme_kernel.c **** Output      : None.
4705:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4706:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4707:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4708:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4709:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4710:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4711:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4712:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt)
4713:../../Source/Kernel/rme_kernel.c **** #else
4714:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4715:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4716:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4717:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4718:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Raw_Pgt)
4719:../../Source/Kernel/rme_kernel.c **** #endif
4720:../../Source/Kernel/rme_kernel.c **** {
 9882              		.loc 1 4720 1
 9883              		.cfi_startproc
 9884              		@ args = 4, pretend = 0, frame = 48
 9885              		@ frame_needed = 1, uses_anonymous_args = 0
 9886 0000 00482DE9 		push	{fp, lr}
 9887              		.cfi_def_cfa_offset 8
 9888              		.cfi_offset 11, -8
 9889              		.cfi_offset 14, -4
 9890 0004 04B08DE2 		add	fp, sp, #4
 9891              		.cfi_def_cfa 11, 4
 9892 0008 30D04DE2 		sub	sp, sp, #48
 9893 000c 28000BE5 		str	r0, [fp, #-40]
 9894 0010 2C100BE5 		str	r1, [fp, #-44]
 9895 0014 30200BE5 		str	r2, [fp, #-48]
 9896 0018 34300BE5 		str	r3, [fp, #-52]
4721:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4722:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4723:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4724:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4725:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 258


4726:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4727:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4728:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4729:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4730:../../Source/Kernel/rme_kernel.c **** #endif
4731:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4732:../../Source/Kernel/rme_kernel.c ****     
4733:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4734:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 9897              		.loc 1 4734 5
 9898 001c 2C301BE5 		ldr	r3, [fp, #-44]
 9899 0020 803003E2 		and	r3, r3, #128
 9900 0024 000053E3 		cmp	r3, #0
 9901 0028 1C00001A 		bne	.L632
 9902              		.loc 1 4734 5 is_stmt 0 discriminator 1
 9903 002c 28301BE5 		ldr	r3, [fp, #-40]
 9904 0030 142093E5 		ldr	r2, [r3, #20]
 9905 0034 2C301BE5 		ldr	r3, [fp, #-44]
 9906 0038 030052E1 		cmp	r2, r3
 9907 003c 0100008A 		bhi	.L633
 9908              		.loc 1 4734 5 discriminator 3
 9909 0040 0230E0E3 		mvn	r3, #2
 9910              		.loc 1 4734 5
 9911 0044 740100EA 		b	.L634
 9912              	.L633:
 9913              		.loc 1 4734 5 discriminator 4
 9914 0048 2C301BE5 		ldr	r3, [fp, #-44]
 9915 004c 8322A0E1 		lsl	r2, r3, #5
 9916 0050 28301BE5 		ldr	r3, [fp, #-40]
 9917 0054 0C3093E5 		ldr	r3, [r3, #12]
 9918 0058 033082E0 		add	r3, r2, r3
 9919 005c 08300BE5 		str	r3, [fp, #-8]
 9920 0060 08301BE5 		ldr	r3, [fp, #-8]
 9921 0064 0300A0E1 		mov	r0, r3
 9922 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9923 006c 14000BE5 		str	r0, [fp, #-20]
 9924              		.loc 1 4734 5 discriminator 1
 9925 0070 14301BE5 		ldr	r3, [fp, #-20]
 9926 0074 FF3803E2 		and	r3, r3, #16711680
 9927 0078 020853E3 		cmp	r3, #131072
 9928 007c 0100001A 		bne	.L635
 9929              		.loc 1 4734 5 discriminator 5
 9930 0080 0830E0E3 		mvn	r3, #8
 9931              		.loc 1 4734 5
 9932 0084 640100EA 		b	.L634
 9933              	.L635:
 9934              		.loc 1 4734 5 discriminator 6
 9935 0088 14301BE5 		ldr	r3, [fp, #-20]
 9936 008c 233CA0E1 		lsr	r3, r3, #24
 9937 0090 030053E3 		cmp	r3, #3
 9938 0094 3F00000A 		beq	.L636
 9939              		.loc 1 4734 5 discriminator 7
 9940 0098 0130E0E3 		mvn	r3, #1
 9941              		.loc 1 4734 5
 9942 009c 5E0100EA 		b	.L634
 9943              	.L632:
 9944              		.loc 1 4734 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 259


 9945 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 9946 00a4 2324A0E1 		lsr	r2, r3, #8
 9947 00a8 28301BE5 		ldr	r3, [fp, #-40]
 9948 00ac 143093E5 		ldr	r3, [r3, #20]
 9949 00b0 030052E1 		cmp	r2, r3
 9950 00b4 0100003A 		bcc	.L637
 9951              		.loc 1 4734 5 discriminator 8
 9952 00b8 0230E0E3 		mvn	r3, #2
 9953              		.loc 1 4734 5
 9954 00bc 560100EA 		b	.L634
 9955              	.L637:
 9956              		.loc 1 4734 5 discriminator 9
 9957 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 9958 00c4 2334A0E1 		lsr	r3, r3, #8
 9959 00c8 8322A0E1 		lsl	r2, r3, #5
 9960 00cc 28301BE5 		ldr	r3, [fp, #-40]
 9961 00d0 0C3093E5 		ldr	r3, [r3, #12]
 9962 00d4 033082E0 		add	r3, r2, r3
 9963 00d8 08300BE5 		str	r3, [fp, #-8]
 9964 00dc 08301BE5 		ldr	r3, [fp, #-8]
 9965 00e0 0300A0E1 		mov	r0, r3
 9966 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9967 00e8 14000BE5 		str	r0, [fp, #-20]
 9968              		.loc 1 4734 5 discriminator 1
 9969 00ec 14301BE5 		ldr	r3, [fp, #-20]
 9970 00f0 FF3803E2 		and	r3, r3, #16711680
 9971 00f4 020853E3 		cmp	r3, #131072
 9972 00f8 0100001A 		bne	.L638
 9973              		.loc 1 4734 5 discriminator 10
 9974 00fc 0830E0E3 		mvn	r3, #8
 9975              		.loc 1 4734 5
 9976 0100 450100EA 		b	.L634
 9977              	.L638:
 9978              		.loc 1 4734 5 discriminator 11
 9979 0104 14301BE5 		ldr	r3, [fp, #-20]
 9980 0108 233CA0E1 		lsr	r3, r3, #24
 9981 010c 030053E3 		cmp	r3, #3
 9982 0110 0100000A 		beq	.L639
 9983              		.loc 1 4734 5 discriminator 12
 9984 0114 0130E0E3 		mvn	r3, #1
 9985              		.loc 1 4734 5
 9986 0118 3F0100EA 		b	.L634
 9987              	.L639:
 9988              		.loc 1 4734 5 discriminator 13
 9989 011c 2C301BE5 		ldr	r3, [fp, #-44]
 9990 0120 7F2003E2 		and	r2, r3, #127
 9991 0124 08301BE5 		ldr	r3, [fp, #-8]
 9992 0128 143093E5 		ldr	r3, [r3, #20]
 9993 012c 030052E1 		cmp	r2, r3
 9994 0130 0100003A 		bcc	.L640
 9995              		.loc 1 4734 5 discriminator 14
 9996 0134 0230E0E3 		mvn	r3, #2
 9997              		.loc 1 4734 5
 9998 0138 370100EA 		b	.L634
 9999              	.L640:
 10000              		.loc 1 4734 5 discriminator 15
 10001 013c 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 260


 10002 0140 7F3003E2 		and	r3, r3, #127
 10003 0144 8322A0E1 		lsl	r2, r3, #5
 10004 0148 08301BE5 		ldr	r3, [fp, #-8]
 10005 014c 0C3093E5 		ldr	r3, [r3, #12]
 10006 0150 033082E0 		add	r3, r2, r3
 10007 0154 08300BE5 		str	r3, [fp, #-8]
 10008 0158 08301BE5 		ldr	r3, [fp, #-8]
 10009 015c 0300A0E1 		mov	r0, r3
 10010 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10011 0164 14000BE5 		str	r0, [fp, #-20]
 10012              		.loc 1 4734 5 discriminator 1
 10013 0168 14301BE5 		ldr	r3, [fp, #-20]
 10014 016c FF3803E2 		and	r3, r3, #16711680
 10015 0170 020853E3 		cmp	r3, #131072
 10016 0174 0100001A 		bne	.L641
 10017              		.loc 1 4734 5 discriminator 16
 10018 0178 0830E0E3 		mvn	r3, #8
 10019              		.loc 1 4734 5
 10020 017c 260100EA 		b	.L634
 10021              	.L641:
 10022              		.loc 1 4734 5 discriminator 17
 10023 0180 14301BE5 		ldr	r3, [fp, #-20]
 10024 0184 233CA0E1 		lsr	r3, r3, #24
 10025 0188 030053E3 		cmp	r3, #3
 10026 018c 0100000A 		beq	.L636
 10027              		.loc 1 4734 5 discriminator 18
 10028 0190 0130E0E3 		mvn	r3, #1
 10029              		.loc 1 4734 5
 10030 0194 200100EA 		b	.L634
 10031              	.L636:
4735:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4736:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10032              		.loc 1 4736 5 is_stmt 1
 10033 0198 34301BE5 		ldr	r3, [fp, #-52]
 10034 019c 803003E2 		and	r3, r3, #128
 10035 01a0 000053E3 		cmp	r3, #0
 10036 01a4 1C00001A 		bne	.L642
 10037              		.loc 1 4736 5 is_stmt 0 discriminator 1
 10038 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10039 01ac 142093E5 		ldr	r2, [r3, #20]
 10040 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10041 01b4 030052E1 		cmp	r2, r3
 10042 01b8 0100008A 		bhi	.L643
 10043              		.loc 1 4736 5 discriminator 3
 10044 01bc 0230E0E3 		mvn	r3, #2
 10045              		.loc 1 4736 5
 10046 01c0 150100EA 		b	.L634
 10047              	.L643:
 10048              		.loc 1 4736 5 discriminator 4
 10049 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10050 01c8 8322A0E1 		lsl	r2, r3, #5
 10051 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10052 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10053 01d4 033082E0 		add	r3, r2, r3
 10054 01d8 0C300BE5 		str	r3, [fp, #-12]
 10055 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10056 01e0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 261


 10057 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10058 01e8 14000BE5 		str	r0, [fp, #-20]
 10059              		.loc 1 4736 5 discriminator 1
 10060 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10061 01f0 FF3803E2 		and	r3, r3, #16711680
 10062 01f4 020853E3 		cmp	r3, #131072
 10063 01f8 0100001A 		bne	.L644
 10064              		.loc 1 4736 5 discriminator 5
 10065 01fc 0830E0E3 		mvn	r3, #8
 10066              		.loc 1 4736 5
 10067 0200 050100EA 		b	.L634
 10068              	.L644:
 10069              		.loc 1 4736 5 discriminator 6
 10070 0204 14301BE5 		ldr	r3, [fp, #-20]
 10071 0208 233CA0E1 		lsr	r3, r3, #24
 10072 020c 030053E3 		cmp	r3, #3
 10073 0210 3F00000A 		beq	.L645
 10074              		.loc 1 4736 5 discriminator 7
 10075 0214 0130E0E3 		mvn	r3, #1
 10076              		.loc 1 4736 5
 10077 0218 FF0000EA 		b	.L634
 10078              	.L642:
 10079              		.loc 1 4736 5 discriminator 2
 10080 021c 34301BE5 		ldr	r3, [fp, #-52]
 10081 0220 2324A0E1 		lsr	r2, r3, #8
 10082 0224 28301BE5 		ldr	r3, [fp, #-40]
 10083 0228 143093E5 		ldr	r3, [r3, #20]
 10084 022c 030052E1 		cmp	r2, r3
 10085 0230 0100003A 		bcc	.L646
 10086              		.loc 1 4736 5 discriminator 8
 10087 0234 0230E0E3 		mvn	r3, #2
 10088              		.loc 1 4736 5
 10089 0238 F70000EA 		b	.L634
 10090              	.L646:
 10091              		.loc 1 4736 5 discriminator 9
 10092 023c 34301BE5 		ldr	r3, [fp, #-52]
 10093 0240 2334A0E1 		lsr	r3, r3, #8
 10094 0244 8322A0E1 		lsl	r2, r3, #5
 10095 0248 28301BE5 		ldr	r3, [fp, #-40]
 10096 024c 0C3093E5 		ldr	r3, [r3, #12]
 10097 0250 033082E0 		add	r3, r2, r3
 10098 0254 0C300BE5 		str	r3, [fp, #-12]
 10099 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10100 025c 0300A0E1 		mov	r0, r3
 10101 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10102 0264 14000BE5 		str	r0, [fp, #-20]
 10103              		.loc 1 4736 5 discriminator 1
 10104 0268 14301BE5 		ldr	r3, [fp, #-20]
 10105 026c FF3803E2 		and	r3, r3, #16711680
 10106 0270 020853E3 		cmp	r3, #131072
 10107 0274 0100001A 		bne	.L647
 10108              		.loc 1 4736 5 discriminator 10
 10109 0278 0830E0E3 		mvn	r3, #8
 10110              		.loc 1 4736 5
 10111 027c E60000EA 		b	.L634
 10112              	.L647:
 10113              		.loc 1 4736 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 262


 10114 0280 14301BE5 		ldr	r3, [fp, #-20]
 10115 0284 233CA0E1 		lsr	r3, r3, #24
 10116 0288 030053E3 		cmp	r3, #3
 10117 028c 0100000A 		beq	.L648
 10118              		.loc 1 4736 5 discriminator 12
 10119 0290 0130E0E3 		mvn	r3, #1
 10120              		.loc 1 4736 5
 10121 0294 E00000EA 		b	.L634
 10122              	.L648:
 10123              		.loc 1 4736 5 discriminator 13
 10124 0298 34301BE5 		ldr	r3, [fp, #-52]
 10125 029c 7F2003E2 		and	r2, r3, #127
 10126 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10127 02a4 143093E5 		ldr	r3, [r3, #20]
 10128 02a8 030052E1 		cmp	r2, r3
 10129 02ac 0100003A 		bcc	.L649
 10130              		.loc 1 4736 5 discriminator 14
 10131 02b0 0230E0E3 		mvn	r3, #2
 10132              		.loc 1 4736 5
 10133 02b4 D80000EA 		b	.L634
 10134              	.L649:
 10135              		.loc 1 4736 5 discriminator 15
 10136 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10137 02bc 7F3003E2 		and	r3, r3, #127
 10138 02c0 8322A0E1 		lsl	r2, r3, #5
 10139 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10140 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10141 02cc 033082E0 		add	r3, r2, r3
 10142 02d0 0C300BE5 		str	r3, [fp, #-12]
 10143 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10144 02d8 0300A0E1 		mov	r0, r3
 10145 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10146 02e0 14000BE5 		str	r0, [fp, #-20]
 10147              		.loc 1 4736 5 discriminator 1
 10148 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10149 02e8 FF3803E2 		and	r3, r3, #16711680
 10150 02ec 020853E3 		cmp	r3, #131072
 10151 02f0 0100001A 		bne	.L650
 10152              		.loc 1 4736 5 discriminator 16
 10153 02f4 0830E0E3 		mvn	r3, #8
 10154              		.loc 1 4736 5
 10155 02f8 C70000EA 		b	.L634
 10156              	.L650:
 10157              		.loc 1 4736 5 discriminator 17
 10158 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10159 0300 233CA0E1 		lsr	r3, r3, #24
 10160 0304 030053E3 		cmp	r3, #3
 10161 0308 0100000A 		beq	.L645
 10162              		.loc 1 4736 5 discriminator 18
 10163 030c 0130E0E3 		mvn	r3, #1
 10164              		.loc 1 4736 5
 10165 0310 C10000EA 		b	.L634
 10166              	.L645:
4737:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4738:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4739:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10167              		.loc 1 4739 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 263


 10168 0314 04309BE5 		ldr	r3, [fp, #4]
 10169 0318 803003E2 		and	r3, r3, #128
 10170 031c 000053E3 		cmp	r3, #0
 10171 0320 1C00001A 		bne	.L651
 10172              		.loc 1 4739 5 is_stmt 0 discriminator 1
 10173 0324 28301BE5 		ldr	r3, [fp, #-40]
 10174 0328 142093E5 		ldr	r2, [r3, #20]
 10175 032c 04309BE5 		ldr	r3, [fp, #4]
 10176 0330 030052E1 		cmp	r2, r3
 10177 0334 0100008A 		bhi	.L652
 10178              		.loc 1 4739 5 discriminator 3
 10179 0338 0230E0E3 		mvn	r3, #2
 10180              		.loc 1 4739 5
 10181 033c B60000EA 		b	.L634
 10182              	.L652:
 10183              		.loc 1 4739 5 discriminator 4
 10184 0340 04309BE5 		ldr	r3, [fp, #4]
 10185 0344 8322A0E1 		lsl	r2, r3, #5
 10186 0348 28301BE5 		ldr	r3, [fp, #-40]
 10187 034c 0C3093E5 		ldr	r3, [r3, #12]
 10188 0350 033082E0 		add	r3, r2, r3
 10189 0354 10300BE5 		str	r3, [fp, #-16]
 10190 0358 10301BE5 		ldr	r3, [fp, #-16]
 10191 035c 0300A0E1 		mov	r0, r3
 10192 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10193 0364 14000BE5 		str	r0, [fp, #-20]
 10194              		.loc 1 4739 5 discriminator 1
 10195 0368 14301BE5 		ldr	r3, [fp, #-20]
 10196 036c FF3803E2 		and	r3, r3, #16711680
 10197 0370 020853E3 		cmp	r3, #131072
 10198 0374 0100001A 		bne	.L653
 10199              		.loc 1 4739 5 discriminator 5
 10200 0378 0830E0E3 		mvn	r3, #8
 10201              		.loc 1 4739 5
 10202 037c A60000EA 		b	.L634
 10203              	.L653:
 10204              		.loc 1 4739 5 discriminator 6
 10205 0380 14301BE5 		ldr	r3, [fp, #-20]
 10206 0384 233CA0E1 		lsr	r3, r3, #24
 10207 0388 040053E3 		cmp	r3, #4
 10208 038c 3F00000A 		beq	.L654
 10209              		.loc 1 4739 5 discriminator 7
 10210 0390 0130E0E3 		mvn	r3, #1
 10211              		.loc 1 4739 5
 10212 0394 A00000EA 		b	.L634
 10213              	.L651:
 10214              		.loc 1 4739 5 discriminator 2
 10215 0398 04309BE5 		ldr	r3, [fp, #4]
 10216 039c 2324A0E1 		lsr	r2, r3, #8
 10217 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10218 03a4 143093E5 		ldr	r3, [r3, #20]
 10219 03a8 030052E1 		cmp	r2, r3
 10220 03ac 0100003A 		bcc	.L655
 10221              		.loc 1 4739 5 discriminator 8
 10222 03b0 0230E0E3 		mvn	r3, #2
 10223              		.loc 1 4739 5
 10224 03b4 980000EA 		b	.L634
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 264


 10225              	.L655:
 10226              		.loc 1 4739 5 discriminator 9
 10227 03b8 04309BE5 		ldr	r3, [fp, #4]
 10228 03bc 2334A0E1 		lsr	r3, r3, #8
 10229 03c0 8322A0E1 		lsl	r2, r3, #5
 10230 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10231 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10232 03cc 033082E0 		add	r3, r2, r3
 10233 03d0 10300BE5 		str	r3, [fp, #-16]
 10234 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10235 03d8 0300A0E1 		mov	r0, r3
 10236 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10237 03e0 14000BE5 		str	r0, [fp, #-20]
 10238              		.loc 1 4739 5 discriminator 1
 10239 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10240 03e8 FF3803E2 		and	r3, r3, #16711680
 10241 03ec 020853E3 		cmp	r3, #131072
 10242 03f0 0100001A 		bne	.L656
 10243              		.loc 1 4739 5 discriminator 10
 10244 03f4 0830E0E3 		mvn	r3, #8
 10245              		.loc 1 4739 5
 10246 03f8 870000EA 		b	.L634
 10247              	.L656:
 10248              		.loc 1 4739 5 discriminator 11
 10249 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10250 0400 233CA0E1 		lsr	r3, r3, #24
 10251 0404 030053E3 		cmp	r3, #3
 10252 0408 0100000A 		beq	.L657
 10253              		.loc 1 4739 5 discriminator 12
 10254 040c 0130E0E3 		mvn	r3, #1
 10255              		.loc 1 4739 5
 10256 0410 810000EA 		b	.L634
 10257              	.L657:
 10258              		.loc 1 4739 5 discriminator 13
 10259 0414 04309BE5 		ldr	r3, [fp, #4]
 10260 0418 7F2003E2 		and	r2, r3, #127
 10261 041c 10301BE5 		ldr	r3, [fp, #-16]
 10262 0420 143093E5 		ldr	r3, [r3, #20]
 10263 0424 030052E1 		cmp	r2, r3
 10264 0428 0100003A 		bcc	.L658
 10265              		.loc 1 4739 5 discriminator 14
 10266 042c 0230E0E3 		mvn	r3, #2
 10267              		.loc 1 4739 5
 10268 0430 790000EA 		b	.L634
 10269              	.L658:
 10270              		.loc 1 4739 5 discriminator 15
 10271 0434 04309BE5 		ldr	r3, [fp, #4]
 10272 0438 7F3003E2 		and	r3, r3, #127
 10273 043c 8322A0E1 		lsl	r2, r3, #5
 10274 0440 10301BE5 		ldr	r3, [fp, #-16]
 10275 0444 0C3093E5 		ldr	r3, [r3, #12]
 10276 0448 033082E0 		add	r3, r2, r3
 10277 044c 10300BE5 		str	r3, [fp, #-16]
 10278 0450 10301BE5 		ldr	r3, [fp, #-16]
 10279 0454 0300A0E1 		mov	r0, r3
 10280 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10281 045c 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 265


 10282              		.loc 1 4739 5 discriminator 1
 10283 0460 14301BE5 		ldr	r3, [fp, #-20]
 10284 0464 FF3803E2 		and	r3, r3, #16711680
 10285 0468 020853E3 		cmp	r3, #131072
 10286 046c 0100001A 		bne	.L659
 10287              		.loc 1 4739 5 discriminator 16
 10288 0470 0830E0E3 		mvn	r3, #8
 10289              		.loc 1 4739 5
 10290 0474 680000EA 		b	.L634
 10291              	.L659:
 10292              		.loc 1 4739 5 discriminator 17
 10293 0478 14301BE5 		ldr	r3, [fp, #-20]
 10294 047c 233CA0E1 		lsr	r3, r3, #24
 10295 0480 040053E3 		cmp	r3, #4
 10296 0484 0100000A 		beq	.L654
 10297              		.loc 1 4739 5 discriminator 18
 10298 0488 0130E0E3 		mvn	r3, #1
 10299              		.loc 1 4739 5
 10300 048c 620000EA 		b	.L634
 10301              	.L654:
4740:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4741:../../Source/Kernel/rme_kernel.c **** #endif
4742:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4743:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10302              		.loc 1 4743 5 is_stmt 1
 10303 0490 08301BE5 		ldr	r3, [fp, #-8]
 10304 0494 083093E5 		ldr	r3, [r3, #8]
 10305 0498 013003E2 		and	r3, r3, #1
 10306 049c 000053E3 		cmp	r3, #0
 10307 04a0 0100001A 		bne	.L660
 10308              		.loc 1 4743 5 is_stmt 0 discriminator 1
 10309 04a4 0630E0E3 		mvn	r3, #6
 10310              		.loc 1 4743 5
 10311 04a8 5B0000EA 		b	.L634
 10312              	.L660:
4744:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10313              		.loc 1 4744 5 is_stmt 1
 10314 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10315 04b0 083093E5 		ldr	r3, [r3, #8]
 10316 04b4 403003E2 		and	r3, r3, #64
 10317 04b8 000053E3 		cmp	r3, #0
 10318 04bc 0100001A 		bne	.L661
 10319              		.loc 1 4744 5 is_stmt 0 discriminator 1
 10320 04c0 0630E0E3 		mvn	r3, #6
 10321              		.loc 1 4744 5
 10322 04c4 540000EA 		b	.L634
 10323              	.L661:
4745:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4746:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10324              		.loc 1 4746 5 is_stmt 1
 10325 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10326 04cc 083093E5 		ldr	r3, [r3, #8]
 10327 04d0 403003E2 		and	r3, r3, #64
 10328 04d4 000053E3 		cmp	r3, #0
 10329 04d8 0100001A 		bne	.L662
 10330              		.loc 1 4746 5 is_stmt 0 discriminator 1
 10331 04dc 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 266


 10332              		.loc 1 4746 5
 10333 04e0 4D0000EA 		b	.L634
 10334              	.L662:
4747:../../Source/Kernel/rme_kernel.c **** #endif
4748:../../Source/Kernel/rme_kernel.c ****     
4749:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4750:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10335              		.loc 1 4750 5 is_stmt 1
 10336 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10337 04e8 142093E5 		ldr	r2, [r3, #20]
 10338 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10339 04f0 030052E1 		cmp	r2, r3
 10340 04f4 0100008A 		bhi	.L663
 10341              		.loc 1 4750 5 is_stmt 0 discriminator 1
 10342 04f8 0230E0E3 		mvn	r3, #2
 10343              		.loc 1 4750 5
 10344 04fc 460000EA 		b	.L634
 10345              	.L663:
 10346              		.loc 1 4750 5 discriminator 2
 10347 0500 30301BE5 		ldr	r3, [fp, #-48]
 10348 0504 8322A0E1 		lsl	r2, r3, #5
 10349 0508 08301BE5 		ldr	r3, [fp, #-8]
 10350 050c 0C3093E5 		ldr	r3, [r3, #12]
 10351 0510 033082E0 		add	r3, r2, r3
 10352 0514 18300BE5 		str	r3, [fp, #-24]
4751:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4752:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10353              		.loc 1 4752 5 is_stmt 1
 10354 0518 18301BE5 		ldr	r3, [fp, #-24]
 10355 051c 0128A0E3 		mov	r2, #65536
 10356 0520 0010A0E3 		mov	r1, #0
 10357 0524 0300A0E1 		mov	r0, r3
 10358 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10359 052c 0030A0E1 		mov	r3, r0
 10360              		.loc 1 4752 5 is_stmt 0 discriminator 1
 10361 0530 000053E3 		cmp	r3, #0
 10362 0534 0100001A 		bne	.L664
 10363 0538 0430E0E3 		mvn	r3, #4
 10364              		.loc 1 4752 5
 10365 053c 360000EA 		b	.L634
 10366              	.L664:
 10367              		.loc 1 4752 5 discriminator 2
 10368 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10369 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10370 0548 002093E5 		ldr	r2, [r3]
 10371 054c 18301BE5 		ldr	r3, [fp, #-24]
 10372 0550 102083E5 		str	r2, [r3, #16]
4753:../../Source/Kernel/rme_kernel.c **** 
4754:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4755:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=1U;
 10373              		.loc 1 4755 27 is_stmt 1
 10374 0554 18301BE5 		ldr	r3, [fp, #-24]
 10375 0558 0120A0E3 		mov	r2, #1
 10376 055c 042083E5 		str	r2, [r3, #4]
4756:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10377              		.loc 1 4756 25
 10378 0560 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 267


 10379 0564 0020A0E3 		mov	r2, #0
 10380 0568 0C2083E5 		str	r2, [r3, #12]
4757:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_INV|RME_PRC_FLAG_THD;
 10381              		.loc 1 4757 23
 10382 056c 18301BE5 		ldr	r3, [fp, #-24]
 10383 0570 0320A0E3 		mov	r2, #3
 10384 0574 082083E5 		str	r2, [r3, #8]
4758:../../Source/Kernel/rme_kernel.c **** 
4759:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4760:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10385              		.loc 1 4760 13
 10386 0578 0C301BE5 		ldr	r3, [fp, #-12]
 10387 057c 003093E5 		ldr	r3, [r3]
 10388 0580 7330FFE6 		uxth	r3, r3
 10389 0584 000053E3 		cmp	r3, #0
 10390 0588 0200000A 		beq	.L665
 10391              		.loc 1 4760 13 is_stmt 0 discriminator 1
 10392 058c 0C301BE5 		ldr	r3, [fp, #-12]
 10393 0590 043093E5 		ldr	r3, [r3, #4]
 10394 0594 000000EA 		b	.L666
 10395              	.L665:
 10396              		.loc 1 4760 13 discriminator 2
 10397 0598 0C301BE5 		ldr	r3, [fp, #-12]
 10398              	.L666:
 10399              		.loc 1 4760 12 is_stmt 1 discriminator 4
 10400 059c 1C300BE5 		str	r3, [fp, #-28]
4761:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4762:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10401              		.loc 1 4762 13
 10402 05a0 10301BE5 		ldr	r3, [fp, #-16]
 10403 05a4 003093E5 		ldr	r3, [r3]
 10404 05a8 7330FFE6 		uxth	r3, r3
 10405 05ac 000053E3 		cmp	r3, #0
 10406 05b0 0200000A 		beq	.L667
 10407              		.loc 1 4762 13 is_stmt 0 discriminator 1
 10408 05b4 10301BE5 		ldr	r3, [fp, #-16]
 10409 05b8 043093E5 		ldr	r3, [r3, #4]
 10410 05bc 000000EA 		b	.L668
 10411              	.L667:
 10412              		.loc 1 4762 13 discriminator 2
 10413 05c0 10301BE5 		ldr	r3, [fp, #-16]
 10414              	.L668:
 10415              		.loc 1 4762 12 is_stmt 1 discriminator 4
 10416 05c4 20300BE5 		str	r3, [fp, #-32]
4763:../../Source/Kernel/rme_kernel.c **** #endif
4764:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10417              		.loc 1 4764 17
 10418 05c8 18301BE5 		ldr	r3, [fp, #-24]
 10419 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 10420 05d0 142083E5 		str	r2, [r3, #20]
4765:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4766:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 10421              		.loc 1 4766 17
 10422 05d4 18301BE5 		ldr	r3, [fp, #-24]
 10423 05d8 20201BE5 		ldr	r2, [fp, #-32]
 10424 05dc 182083E5 		str	r2, [r3, #24]
4767:../../Source/Kernel/rme_kernel.c **** #else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 268


4768:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4769:../../Source/Kernel/rme_kernel.c **** #endif
4770:../../Source/Kernel/rme_kernel.c ****     
4771:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4772:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10425              		.loc 1 4772 5
 10426 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 10427 05e4 043083E2 		add	r3, r3, #4
 10428 05e8 0110A0E3 		mov	r1, #1
 10429 05ec 0300A0E1 		mov	r0, r3
 10430 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4773:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4774:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10431              		.loc 1 4774 5
 10432 05f4 20301BE5 		ldr	r3, [fp, #-32]
 10433 05f8 043083E2 		add	r3, r3, #4
 10434 05fc 0110A0E3 		mov	r1, #1
 10435 0600 0300A0E1 		mov	r0, r3
 10436 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4775:../../Source/Kernel/rme_kernel.c **** #endif
4776:../../Source/Kernel/rme_kernel.c **** 
4777:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4778:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10437              		.loc 1 4778 5
 10438 0608 18301BE5 		ldr	r3, [fp, #-24]
 10439 060c 0514A0E3 		mov	r1, #83886080
 10440 0610 0300A0E1 		mov	r0, r3
 10441 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4779:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4780:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4781:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4782:../../Source/Kernel/rme_kernel.c **** 
4783:../../Source/Kernel/rme_kernel.c ****     return 0;
 10442              		.loc 1 4783 12
 10443 0618 0030A0E3 		mov	r3, #0
 10444              	.L634:
4784:../../Source/Kernel/rme_kernel.c **** }
 10445              		.loc 1 4784 1
 10446 061c 0300A0E1 		mov	r0, r3
 10447 0620 04D04BE2 		sub	sp, fp, #4
 10448              		.cfi_def_cfa 13, 8
 10449              		@ sp needed
 10450 0624 0088BDE8 		pop	{fp, pc}
 10451              		.cfi_endproc
 10452              	.LFE50:
 10454              		.section	.text._RME_Prc_Crt,"ax",%progbits
 10455              		.align	2
 10456              		.syntax unified
 10457              		.arm
 10459              	_RME_Prc_Crt:
 10460              	.LFB51:
4785:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Boot_Crt ********************************************/
4786:../../Source/Kernel/rme_kernel.c **** 
4787:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Crt ******************************************************
4788:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4789:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4790:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 269


4791:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4792:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4793:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4794:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4795:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4796:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4797:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4798:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4799:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4800:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4801:../../Source/Kernel/rme_kernel.c ****                                   this process.
4802:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4803:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4804:../../Source/Kernel/rme_kernel.c ****                                   address.
4805:../../Source/Kernel/rme_kernel.c **** Output      : None.
4806:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4807:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4808:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4809:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4810:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4811:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4812:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4813:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4814:../../Source/Kernel/rme_kernel.c **** #else
4815:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4816:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4817:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4818:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4819:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4820:../../Source/Kernel/rme_kernel.c **** #endif
4821:../../Source/Kernel/rme_kernel.c **** {
 10461              		.loc 1 4821 1
 10462              		.cfi_startproc
 10463              		@ args = 4, pretend = 0, frame = 48
 10464              		@ frame_needed = 1, uses_anonymous_args = 0
 10465 0000 00482DE9 		push	{fp, lr}
 10466              		.cfi_def_cfa_offset 8
 10467              		.cfi_offset 11, -8
 10468              		.cfi_offset 14, -4
 10469 0004 04B08DE2 		add	fp, sp, #4
 10470              		.cfi_def_cfa 11, 4
 10471 0008 30D04DE2 		sub	sp, sp, #48
 10472 000c 28000BE5 		str	r0, [fp, #-40]
 10473 0010 2C100BE5 		str	r1, [fp, #-44]
 10474 0014 30200BE5 		str	r2, [fp, #-48]
 10475 0018 34300BE5 		str	r3, [fp, #-52]
4822:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4823:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4824:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4825:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4826:../../Source/Kernel/rme_kernel.c **** #endif
4827:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4828:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4829:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4830:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4831:../../Source/Kernel/rme_kernel.c **** #endif
4832:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 270


4833:../../Source/Kernel/rme_kernel.c ****     
4834:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4835:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10476              		.loc 1 4835 5
 10477 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10478 0020 803003E2 		and	r3, r3, #128
 10479 0024 000053E3 		cmp	r3, #0
 10480 0028 1C00001A 		bne	.L670
 10481              		.loc 1 4835 5 is_stmt 0 discriminator 1
 10482 002c 28301BE5 		ldr	r3, [fp, #-40]
 10483 0030 142093E5 		ldr	r2, [r3, #20]
 10484 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10485 0038 030052E1 		cmp	r2, r3
 10486 003c 0100008A 		bhi	.L671
 10487              		.loc 1 4835 5 discriminator 3
 10488 0040 0230E0E3 		mvn	r3, #2
 10489              		.loc 1 4835 5
 10490 0044 740100EA 		b	.L672
 10491              	.L671:
 10492              		.loc 1 4835 5 discriminator 4
 10493 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10494 004c 8322A0E1 		lsl	r2, r3, #5
 10495 0050 28301BE5 		ldr	r3, [fp, #-40]
 10496 0054 0C3093E5 		ldr	r3, [r3, #12]
 10497 0058 033082E0 		add	r3, r2, r3
 10498 005c 08300BE5 		str	r3, [fp, #-8]
 10499 0060 08301BE5 		ldr	r3, [fp, #-8]
 10500 0064 0300A0E1 		mov	r0, r3
 10501 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10502 006c 14000BE5 		str	r0, [fp, #-20]
 10503              		.loc 1 4835 5 discriminator 1
 10504 0070 14301BE5 		ldr	r3, [fp, #-20]
 10505 0074 FF3803E2 		and	r3, r3, #16711680
 10506 0078 020853E3 		cmp	r3, #131072
 10507 007c 0100001A 		bne	.L673
 10508              		.loc 1 4835 5 discriminator 5
 10509 0080 0830E0E3 		mvn	r3, #8
 10510              		.loc 1 4835 5
 10511 0084 640100EA 		b	.L672
 10512              	.L673:
 10513              		.loc 1 4835 5 discriminator 6
 10514 0088 14301BE5 		ldr	r3, [fp, #-20]
 10515 008c 233CA0E1 		lsr	r3, r3, #24
 10516 0090 030053E3 		cmp	r3, #3
 10517 0094 3F00000A 		beq	.L674
 10518              		.loc 1 4835 5 discriminator 7
 10519 0098 0130E0E3 		mvn	r3, #1
 10520              		.loc 1 4835 5
 10521 009c 5E0100EA 		b	.L672
 10522              	.L670:
 10523              		.loc 1 4835 5 discriminator 2
 10524 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 10525 00a4 2324A0E1 		lsr	r2, r3, #8
 10526 00a8 28301BE5 		ldr	r3, [fp, #-40]
 10527 00ac 143093E5 		ldr	r3, [r3, #20]
 10528 00b0 030052E1 		cmp	r2, r3
 10529 00b4 0100003A 		bcc	.L675
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 271


 10530              		.loc 1 4835 5 discriminator 8
 10531 00b8 0230E0E3 		mvn	r3, #2
 10532              		.loc 1 4835 5
 10533 00bc 560100EA 		b	.L672
 10534              	.L675:
 10535              		.loc 1 4835 5 discriminator 9
 10536 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10537 00c4 2334A0E1 		lsr	r3, r3, #8
 10538 00c8 8322A0E1 		lsl	r2, r3, #5
 10539 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10540 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10541 00d4 033082E0 		add	r3, r2, r3
 10542 00d8 08300BE5 		str	r3, [fp, #-8]
 10543 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10544 00e0 0300A0E1 		mov	r0, r3
 10545 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10546 00e8 14000BE5 		str	r0, [fp, #-20]
 10547              		.loc 1 4835 5 discriminator 1
 10548 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10549 00f0 FF3803E2 		and	r3, r3, #16711680
 10550 00f4 020853E3 		cmp	r3, #131072
 10551 00f8 0100001A 		bne	.L676
 10552              		.loc 1 4835 5 discriminator 10
 10553 00fc 0830E0E3 		mvn	r3, #8
 10554              		.loc 1 4835 5
 10555 0100 450100EA 		b	.L672
 10556              	.L676:
 10557              		.loc 1 4835 5 discriminator 11
 10558 0104 14301BE5 		ldr	r3, [fp, #-20]
 10559 0108 233CA0E1 		lsr	r3, r3, #24
 10560 010c 030053E3 		cmp	r3, #3
 10561 0110 0100000A 		beq	.L677
 10562              		.loc 1 4835 5 discriminator 12
 10563 0114 0130E0E3 		mvn	r3, #1
 10564              		.loc 1 4835 5
 10565 0118 3F0100EA 		b	.L672
 10566              	.L677:
 10567              		.loc 1 4835 5 discriminator 13
 10568 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10569 0120 7F2003E2 		and	r2, r3, #127
 10570 0124 08301BE5 		ldr	r3, [fp, #-8]
 10571 0128 143093E5 		ldr	r3, [r3, #20]
 10572 012c 030052E1 		cmp	r2, r3
 10573 0130 0100003A 		bcc	.L678
 10574              		.loc 1 4835 5 discriminator 14
 10575 0134 0230E0E3 		mvn	r3, #2
 10576              		.loc 1 4835 5
 10577 0138 370100EA 		b	.L672
 10578              	.L678:
 10579              		.loc 1 4835 5 discriminator 15
 10580 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10581 0140 7F3003E2 		and	r3, r3, #127
 10582 0144 8322A0E1 		lsl	r2, r3, #5
 10583 0148 08301BE5 		ldr	r3, [fp, #-8]
 10584 014c 0C3093E5 		ldr	r3, [r3, #12]
 10585 0150 033082E0 		add	r3, r2, r3
 10586 0154 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 272


 10587 0158 08301BE5 		ldr	r3, [fp, #-8]
 10588 015c 0300A0E1 		mov	r0, r3
 10589 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10590 0164 14000BE5 		str	r0, [fp, #-20]
 10591              		.loc 1 4835 5 discriminator 1
 10592 0168 14301BE5 		ldr	r3, [fp, #-20]
 10593 016c FF3803E2 		and	r3, r3, #16711680
 10594 0170 020853E3 		cmp	r3, #131072
 10595 0174 0100001A 		bne	.L679
 10596              		.loc 1 4835 5 discriminator 16
 10597 0178 0830E0E3 		mvn	r3, #8
 10598              		.loc 1 4835 5
 10599 017c 260100EA 		b	.L672
 10600              	.L679:
 10601              		.loc 1 4835 5 discriminator 17
 10602 0180 14301BE5 		ldr	r3, [fp, #-20]
 10603 0184 233CA0E1 		lsr	r3, r3, #24
 10604 0188 030053E3 		cmp	r3, #3
 10605 018c 0100000A 		beq	.L674
 10606              		.loc 1 4835 5 discriminator 18
 10607 0190 0130E0E3 		mvn	r3, #1
 10608              		.loc 1 4835 5
 10609 0194 200100EA 		b	.L672
 10610              	.L674:
4836:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4837:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10611              		.loc 1 4837 5 is_stmt 1
 10612 0198 34301BE5 		ldr	r3, [fp, #-52]
 10613 019c 803003E2 		and	r3, r3, #128
 10614 01a0 000053E3 		cmp	r3, #0
 10615 01a4 1C00001A 		bne	.L680
 10616              		.loc 1 4837 5 is_stmt 0 discriminator 1
 10617 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10618 01ac 142093E5 		ldr	r2, [r3, #20]
 10619 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10620 01b4 030052E1 		cmp	r2, r3
 10621 01b8 0100008A 		bhi	.L681
 10622              		.loc 1 4837 5 discriminator 3
 10623 01bc 0230E0E3 		mvn	r3, #2
 10624              		.loc 1 4837 5
 10625 01c0 150100EA 		b	.L672
 10626              	.L681:
 10627              		.loc 1 4837 5 discriminator 4
 10628 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10629 01c8 8322A0E1 		lsl	r2, r3, #5
 10630 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10631 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10632 01d4 033082E0 		add	r3, r2, r3
 10633 01d8 0C300BE5 		str	r3, [fp, #-12]
 10634 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10635 01e0 0300A0E1 		mov	r0, r3
 10636 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10637 01e8 14000BE5 		str	r0, [fp, #-20]
 10638              		.loc 1 4837 5 discriminator 1
 10639 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10640 01f0 FF3803E2 		and	r3, r3, #16711680
 10641 01f4 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 273


 10642 01f8 0100001A 		bne	.L682
 10643              		.loc 1 4837 5 discriminator 5
 10644 01fc 0830E0E3 		mvn	r3, #8
 10645              		.loc 1 4837 5
 10646 0200 050100EA 		b	.L672
 10647              	.L682:
 10648              		.loc 1 4837 5 discriminator 6
 10649 0204 14301BE5 		ldr	r3, [fp, #-20]
 10650 0208 233CA0E1 		lsr	r3, r3, #24
 10651 020c 030053E3 		cmp	r3, #3
 10652 0210 3F00000A 		beq	.L683
 10653              		.loc 1 4837 5 discriminator 7
 10654 0214 0130E0E3 		mvn	r3, #1
 10655              		.loc 1 4837 5
 10656 0218 FF0000EA 		b	.L672
 10657              	.L680:
 10658              		.loc 1 4837 5 discriminator 2
 10659 021c 34301BE5 		ldr	r3, [fp, #-52]
 10660 0220 2324A0E1 		lsr	r2, r3, #8
 10661 0224 28301BE5 		ldr	r3, [fp, #-40]
 10662 0228 143093E5 		ldr	r3, [r3, #20]
 10663 022c 030052E1 		cmp	r2, r3
 10664 0230 0100003A 		bcc	.L684
 10665              		.loc 1 4837 5 discriminator 8
 10666 0234 0230E0E3 		mvn	r3, #2
 10667              		.loc 1 4837 5
 10668 0238 F70000EA 		b	.L672
 10669              	.L684:
 10670              		.loc 1 4837 5 discriminator 9
 10671 023c 34301BE5 		ldr	r3, [fp, #-52]
 10672 0240 2334A0E1 		lsr	r3, r3, #8
 10673 0244 8322A0E1 		lsl	r2, r3, #5
 10674 0248 28301BE5 		ldr	r3, [fp, #-40]
 10675 024c 0C3093E5 		ldr	r3, [r3, #12]
 10676 0250 033082E0 		add	r3, r2, r3
 10677 0254 0C300BE5 		str	r3, [fp, #-12]
 10678 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10679 025c 0300A0E1 		mov	r0, r3
 10680 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10681 0264 14000BE5 		str	r0, [fp, #-20]
 10682              		.loc 1 4837 5 discriminator 1
 10683 0268 14301BE5 		ldr	r3, [fp, #-20]
 10684 026c FF3803E2 		and	r3, r3, #16711680
 10685 0270 020853E3 		cmp	r3, #131072
 10686 0274 0100001A 		bne	.L685
 10687              		.loc 1 4837 5 discriminator 10
 10688 0278 0830E0E3 		mvn	r3, #8
 10689              		.loc 1 4837 5
 10690 027c E60000EA 		b	.L672
 10691              	.L685:
 10692              		.loc 1 4837 5 discriminator 11
 10693 0280 14301BE5 		ldr	r3, [fp, #-20]
 10694 0284 233CA0E1 		lsr	r3, r3, #24
 10695 0288 030053E3 		cmp	r3, #3
 10696 028c 0100000A 		beq	.L686
 10697              		.loc 1 4837 5 discriminator 12
 10698 0290 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 274


 10699              		.loc 1 4837 5
 10700 0294 E00000EA 		b	.L672
 10701              	.L686:
 10702              		.loc 1 4837 5 discriminator 13
 10703 0298 34301BE5 		ldr	r3, [fp, #-52]
 10704 029c 7F2003E2 		and	r2, r3, #127
 10705 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10706 02a4 143093E5 		ldr	r3, [r3, #20]
 10707 02a8 030052E1 		cmp	r2, r3
 10708 02ac 0100003A 		bcc	.L687
 10709              		.loc 1 4837 5 discriminator 14
 10710 02b0 0230E0E3 		mvn	r3, #2
 10711              		.loc 1 4837 5
 10712 02b4 D80000EA 		b	.L672
 10713              	.L687:
 10714              		.loc 1 4837 5 discriminator 15
 10715 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10716 02bc 7F3003E2 		and	r3, r3, #127
 10717 02c0 8322A0E1 		lsl	r2, r3, #5
 10718 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10719 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10720 02cc 033082E0 		add	r3, r2, r3
 10721 02d0 0C300BE5 		str	r3, [fp, #-12]
 10722 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10723 02d8 0300A0E1 		mov	r0, r3
 10724 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10725 02e0 14000BE5 		str	r0, [fp, #-20]
 10726              		.loc 1 4837 5 discriminator 1
 10727 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10728 02e8 FF3803E2 		and	r3, r3, #16711680
 10729 02ec 020853E3 		cmp	r3, #131072
 10730 02f0 0100001A 		bne	.L688
 10731              		.loc 1 4837 5 discriminator 16
 10732 02f4 0830E0E3 		mvn	r3, #8
 10733              		.loc 1 4837 5
 10734 02f8 C70000EA 		b	.L672
 10735              	.L688:
 10736              		.loc 1 4837 5 discriminator 17
 10737 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10738 0300 233CA0E1 		lsr	r3, r3, #24
 10739 0304 030053E3 		cmp	r3, #3
 10740 0308 0100000A 		beq	.L683
 10741              		.loc 1 4837 5 discriminator 18
 10742 030c 0130E0E3 		mvn	r3, #1
 10743              		.loc 1 4837 5
 10744 0310 C10000EA 		b	.L672
 10745              	.L683:
4838:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4839:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4840:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10746              		.loc 1 4840 5 is_stmt 1
 10747 0314 04309BE5 		ldr	r3, [fp, #4]
 10748 0318 803003E2 		and	r3, r3, #128
 10749 031c 000053E3 		cmp	r3, #0
 10750 0320 1C00001A 		bne	.L689
 10751              		.loc 1 4840 5 is_stmt 0 discriminator 1
 10752 0324 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 275


 10753 0328 142093E5 		ldr	r2, [r3, #20]
 10754 032c 04309BE5 		ldr	r3, [fp, #4]
 10755 0330 030052E1 		cmp	r2, r3
 10756 0334 0100008A 		bhi	.L690
 10757              		.loc 1 4840 5 discriminator 3
 10758 0338 0230E0E3 		mvn	r3, #2
 10759              		.loc 1 4840 5
 10760 033c B60000EA 		b	.L672
 10761              	.L690:
 10762              		.loc 1 4840 5 discriminator 4
 10763 0340 04309BE5 		ldr	r3, [fp, #4]
 10764 0344 8322A0E1 		lsl	r2, r3, #5
 10765 0348 28301BE5 		ldr	r3, [fp, #-40]
 10766 034c 0C3093E5 		ldr	r3, [r3, #12]
 10767 0350 033082E0 		add	r3, r2, r3
 10768 0354 10300BE5 		str	r3, [fp, #-16]
 10769 0358 10301BE5 		ldr	r3, [fp, #-16]
 10770 035c 0300A0E1 		mov	r0, r3
 10771 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10772 0364 14000BE5 		str	r0, [fp, #-20]
 10773              		.loc 1 4840 5 discriminator 1
 10774 0368 14301BE5 		ldr	r3, [fp, #-20]
 10775 036c FF3803E2 		and	r3, r3, #16711680
 10776 0370 020853E3 		cmp	r3, #131072
 10777 0374 0100001A 		bne	.L691
 10778              		.loc 1 4840 5 discriminator 5
 10779 0378 0830E0E3 		mvn	r3, #8
 10780              		.loc 1 4840 5
 10781 037c A60000EA 		b	.L672
 10782              	.L691:
 10783              		.loc 1 4840 5 discriminator 6
 10784 0380 14301BE5 		ldr	r3, [fp, #-20]
 10785 0384 233CA0E1 		lsr	r3, r3, #24
 10786 0388 040053E3 		cmp	r3, #4
 10787 038c 3F00000A 		beq	.L692
 10788              		.loc 1 4840 5 discriminator 7
 10789 0390 0130E0E3 		mvn	r3, #1
 10790              		.loc 1 4840 5
 10791 0394 A00000EA 		b	.L672
 10792              	.L689:
 10793              		.loc 1 4840 5 discriminator 2
 10794 0398 04309BE5 		ldr	r3, [fp, #4]
 10795 039c 2324A0E1 		lsr	r2, r3, #8
 10796 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10797 03a4 143093E5 		ldr	r3, [r3, #20]
 10798 03a8 030052E1 		cmp	r2, r3
 10799 03ac 0100003A 		bcc	.L693
 10800              		.loc 1 4840 5 discriminator 8
 10801 03b0 0230E0E3 		mvn	r3, #2
 10802              		.loc 1 4840 5
 10803 03b4 980000EA 		b	.L672
 10804              	.L693:
 10805              		.loc 1 4840 5 discriminator 9
 10806 03b8 04309BE5 		ldr	r3, [fp, #4]
 10807 03bc 2334A0E1 		lsr	r3, r3, #8
 10808 03c0 8322A0E1 		lsl	r2, r3, #5
 10809 03c4 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 276


 10810 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10811 03cc 033082E0 		add	r3, r2, r3
 10812 03d0 10300BE5 		str	r3, [fp, #-16]
 10813 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10814 03d8 0300A0E1 		mov	r0, r3
 10815 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10816 03e0 14000BE5 		str	r0, [fp, #-20]
 10817              		.loc 1 4840 5 discriminator 1
 10818 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10819 03e8 FF3803E2 		and	r3, r3, #16711680
 10820 03ec 020853E3 		cmp	r3, #131072
 10821 03f0 0100001A 		bne	.L694
 10822              		.loc 1 4840 5 discriminator 10
 10823 03f4 0830E0E3 		mvn	r3, #8
 10824              		.loc 1 4840 5
 10825 03f8 870000EA 		b	.L672
 10826              	.L694:
 10827              		.loc 1 4840 5 discriminator 11
 10828 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10829 0400 233CA0E1 		lsr	r3, r3, #24
 10830 0404 030053E3 		cmp	r3, #3
 10831 0408 0100000A 		beq	.L695
 10832              		.loc 1 4840 5 discriminator 12
 10833 040c 0130E0E3 		mvn	r3, #1
 10834              		.loc 1 4840 5
 10835 0410 810000EA 		b	.L672
 10836              	.L695:
 10837              		.loc 1 4840 5 discriminator 13
 10838 0414 04309BE5 		ldr	r3, [fp, #4]
 10839 0418 7F2003E2 		and	r2, r3, #127
 10840 041c 10301BE5 		ldr	r3, [fp, #-16]
 10841 0420 143093E5 		ldr	r3, [r3, #20]
 10842 0424 030052E1 		cmp	r2, r3
 10843 0428 0100003A 		bcc	.L696
 10844              		.loc 1 4840 5 discriminator 14
 10845 042c 0230E0E3 		mvn	r3, #2
 10846              		.loc 1 4840 5
 10847 0430 790000EA 		b	.L672
 10848              	.L696:
 10849              		.loc 1 4840 5 discriminator 15
 10850 0434 04309BE5 		ldr	r3, [fp, #4]
 10851 0438 7F3003E2 		and	r3, r3, #127
 10852 043c 8322A0E1 		lsl	r2, r3, #5
 10853 0440 10301BE5 		ldr	r3, [fp, #-16]
 10854 0444 0C3093E5 		ldr	r3, [r3, #12]
 10855 0448 033082E0 		add	r3, r2, r3
 10856 044c 10300BE5 		str	r3, [fp, #-16]
 10857 0450 10301BE5 		ldr	r3, [fp, #-16]
 10858 0454 0300A0E1 		mov	r0, r3
 10859 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10860 045c 14000BE5 		str	r0, [fp, #-20]
 10861              		.loc 1 4840 5 discriminator 1
 10862 0460 14301BE5 		ldr	r3, [fp, #-20]
 10863 0464 FF3803E2 		and	r3, r3, #16711680
 10864 0468 020853E3 		cmp	r3, #131072
 10865 046c 0100001A 		bne	.L697
 10866              		.loc 1 4840 5 discriminator 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 277


 10867 0470 0830E0E3 		mvn	r3, #8
 10868              		.loc 1 4840 5
 10869 0474 680000EA 		b	.L672
 10870              	.L697:
 10871              		.loc 1 4840 5 discriminator 17
 10872 0478 14301BE5 		ldr	r3, [fp, #-20]
 10873 047c 233CA0E1 		lsr	r3, r3, #24
 10874 0480 040053E3 		cmp	r3, #4
 10875 0484 0100000A 		beq	.L692
 10876              		.loc 1 4840 5 discriminator 18
 10877 0488 0130E0E3 		mvn	r3, #1
 10878              		.loc 1 4840 5
 10879 048c 620000EA 		b	.L672
 10880              	.L692:
4841:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4842:../../Source/Kernel/rme_kernel.c **** #endif
4843:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4844:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10881              		.loc 1 4844 5 is_stmt 1
 10882 0490 08301BE5 		ldr	r3, [fp, #-8]
 10883 0494 083093E5 		ldr	r3, [r3, #8]
 10884 0498 013003E2 		and	r3, r3, #1
 10885 049c 000053E3 		cmp	r3, #0
 10886 04a0 0100001A 		bne	.L698
 10887              		.loc 1 4844 5 is_stmt 0 discriminator 1
 10888 04a4 0630E0E3 		mvn	r3, #6
 10889              		.loc 1 4844 5
 10890 04a8 5B0000EA 		b	.L672
 10891              	.L698:
4845:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10892              		.loc 1 4845 5 is_stmt 1
 10893 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10894 04b0 083093E5 		ldr	r3, [r3, #8]
 10895 04b4 403003E2 		and	r3, r3, #64
 10896 04b8 000053E3 		cmp	r3, #0
 10897 04bc 0100001A 		bne	.L699
 10898              		.loc 1 4845 5 is_stmt 0 discriminator 1
 10899 04c0 0630E0E3 		mvn	r3, #6
 10900              		.loc 1 4845 5
 10901 04c4 540000EA 		b	.L672
 10902              	.L699:
4846:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4847:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10903              		.loc 1 4847 5 is_stmt 1
 10904 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10905 04cc 083093E5 		ldr	r3, [r3, #8]
 10906 04d0 403003E2 		and	r3, r3, #64
 10907 04d4 000053E3 		cmp	r3, #0
 10908 04d8 0100001A 		bne	.L700
 10909              		.loc 1 4847 5 is_stmt 0 discriminator 1
 10910 04dc 0630E0E3 		mvn	r3, #6
 10911              		.loc 1 4847 5
 10912 04e0 4D0000EA 		b	.L672
 10913              	.L700:
4848:../../Source/Kernel/rme_kernel.c **** #endif
4849:../../Source/Kernel/rme_kernel.c ****     
4850:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 278


4851:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10914              		.loc 1 4851 5 is_stmt 1
 10915 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10916 04e8 142093E5 		ldr	r2, [r3, #20]
 10917 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10918 04f0 030052E1 		cmp	r2, r3
 10919 04f4 0100008A 		bhi	.L701
 10920              		.loc 1 4851 5 is_stmt 0 discriminator 1
 10921 04f8 0230E0E3 		mvn	r3, #2
 10922              		.loc 1 4851 5
 10923 04fc 460000EA 		b	.L672
 10924              	.L701:
 10925              		.loc 1 4851 5 discriminator 2
 10926 0500 30301BE5 		ldr	r3, [fp, #-48]
 10927 0504 8322A0E1 		lsl	r2, r3, #5
 10928 0508 08301BE5 		ldr	r3, [fp, #-8]
 10929 050c 0C3093E5 		ldr	r3, [r3, #12]
 10930 0510 033082E0 		add	r3, r2, r3
 10931 0514 18300BE5 		str	r3, [fp, #-24]
4852:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4853:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10932              		.loc 1 4853 5 is_stmt 1
 10933 0518 18301BE5 		ldr	r3, [fp, #-24]
 10934 051c 0128A0E3 		mov	r2, #65536
 10935 0520 0010A0E3 		mov	r1, #0
 10936 0524 0300A0E1 		mov	r0, r3
 10937 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10938 052c 0030A0E1 		mov	r3, r0
 10939              		.loc 1 4853 5 is_stmt 0 discriminator 1
 10940 0530 000053E3 		cmp	r3, #0
 10941 0534 0100001A 		bne	.L702
 10942 0538 0430E0E3 		mvn	r3, #4
 10943              		.loc 1 4853 5
 10944 053c 360000EA 		b	.L672
 10945              	.L702:
 10946              		.loc 1 4853 5 discriminator 2
 10947 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10948 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10949 0548 002093E5 		ldr	r2, [r3]
 10950 054c 18301BE5 		ldr	r3, [fp, #-24]
 10951 0550 102083E5 		str	r2, [r3, #16]
4854:../../Source/Kernel/rme_kernel.c ****     
4855:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4856:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=0U;
 10952              		.loc 1 4856 27 is_stmt 1
 10953 0554 18301BE5 		ldr	r3, [fp, #-24]
 10954 0558 0020A0E3 		mov	r2, #0
 10955 055c 042083E5 		str	r2, [r3, #4]
4857:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10956              		.loc 1 4857 25
 10957 0560 18301BE5 		ldr	r3, [fp, #-24]
 10958 0564 0020A0E3 		mov	r2, #0
 10959 0568 0C2083E5 		str	r2, [r3, #12]
4858:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_ALL;
 10960              		.loc 1 4858 23
 10961 056c 18301BE5 		ldr	r3, [fp, #-24]
 10962 0570 0F20A0E3 		mov	r2, #15
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 279


 10963 0574 082083E5 		str	r2, [r3, #8]
4859:../../Source/Kernel/rme_kernel.c ****     
4860:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4861:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10964              		.loc 1 4861 13
 10965 0578 0C301BE5 		ldr	r3, [fp, #-12]
 10966 057c 003093E5 		ldr	r3, [r3]
 10967 0580 7330FFE6 		uxth	r3, r3
 10968 0584 000053E3 		cmp	r3, #0
 10969 0588 0200000A 		beq	.L703
 10970              		.loc 1 4861 13 is_stmt 0 discriminator 1
 10971 058c 0C301BE5 		ldr	r3, [fp, #-12]
 10972 0590 043093E5 		ldr	r3, [r3, #4]
 10973 0594 000000EA 		b	.L704
 10974              	.L703:
 10975              		.loc 1 4861 13 discriminator 2
 10976 0598 0C301BE5 		ldr	r3, [fp, #-12]
 10977              	.L704:
 10978              		.loc 1 4861 12 is_stmt 1 discriminator 4
 10979 059c 1C300BE5 		str	r3, [fp, #-28]
4862:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4863:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10980              		.loc 1 4863 13
 10981 05a0 10301BE5 		ldr	r3, [fp, #-16]
 10982 05a4 003093E5 		ldr	r3, [r3]
 10983 05a8 7330FFE6 		uxth	r3, r3
 10984 05ac 000053E3 		cmp	r3, #0
 10985 05b0 0200000A 		beq	.L705
 10986              		.loc 1 4863 13 is_stmt 0 discriminator 1
 10987 05b4 10301BE5 		ldr	r3, [fp, #-16]
 10988 05b8 043093E5 		ldr	r3, [r3, #4]
 10989 05bc 000000EA 		b	.L706
 10990              	.L705:
 10991              		.loc 1 4863 13 discriminator 2
 10992 05c0 10301BE5 		ldr	r3, [fp, #-16]
 10993              	.L706:
 10994              		.loc 1 4863 12 is_stmt 1 discriminator 4
 10995 05c4 20300BE5 		str	r3, [fp, #-32]
4864:../../Source/Kernel/rme_kernel.c **** #endif
4865:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10996              		.loc 1 4865 17
 10997 05c8 18301BE5 		ldr	r3, [fp, #-24]
 10998 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 10999 05d0 142083E5 		str	r2, [r3, #20]
4866:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4867:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 11000              		.loc 1 4867 17
 11001 05d4 18301BE5 		ldr	r3, [fp, #-24]
 11002 05d8 20201BE5 		ldr	r2, [fp, #-32]
 11003 05dc 182083E5 		str	r2, [r3, #24]
4868:../../Source/Kernel/rme_kernel.c **** #else
4869:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4870:../../Source/Kernel/rme_kernel.c **** #endif
4871:../../Source/Kernel/rme_kernel.c ****     
4872:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4873:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 11004              		.loc 1 4873 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 280


 11005 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 11006 05e4 043083E2 		add	r3, r3, #4
 11007 05e8 0110A0E3 		mov	r1, #1
 11008 05ec 0300A0E1 		mov	r0, r3
 11009 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4874:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4875:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 11010              		.loc 1 4875 5
 11011 05f4 20301BE5 		ldr	r3, [fp, #-32]
 11012 05f8 043083E2 		add	r3, r3, #4
 11013 05fc 0110A0E3 		mov	r1, #1
 11014 0600 0300A0E1 		mov	r0, r3
 11015 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4876:../../Source/Kernel/rme_kernel.c **** #endif
4877:../../Source/Kernel/rme_kernel.c **** 
4878:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4879:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 11016              		.loc 1 4879 5
 11017 0608 18301BE5 		ldr	r3, [fp, #-24]
 11018 060c 0514A0E3 		mov	r1, #83886080
 11019 0610 0300A0E1 		mov	r0, r3
 11020 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4880:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4881:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4882:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4883:../../Source/Kernel/rme_kernel.c **** 
4884:../../Source/Kernel/rme_kernel.c ****     return 0;
 11021              		.loc 1 4884 12
 11022 0618 0030A0E3 		mov	r3, #0
 11023              	.L672:
4885:../../Source/Kernel/rme_kernel.c **** }
 11024              		.loc 1 4885 1
 11025 061c 0300A0E1 		mov	r0, r3
 11026 0620 04D04BE2 		sub	sp, fp, #4
 11027              		.cfi_def_cfa 13, 8
 11028              		@ sp needed
 11029 0624 0088BDE8 		pop	{fp, pc}
 11030              		.cfi_endproc
 11031              	.LFE51:
 11033              		.section	.text._RME_Prc_Del,"ax",%progbits
 11034              		.align	2
 11035              		.syntax unified
 11036              		.arm
 11038              	_RME_Prc_Del:
 11039              	.LFB52:
4886:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Crt *************************************************/
4887:../../Source/Kernel/rme_kernel.c **** 
4888:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Del ******************************************************
4889:../../Source/Kernel/rme_kernel.c **** Description : Delete a process.
4890:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
4891:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
4892:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4893:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process.
4894:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4895:../../Source/Kernel/rme_kernel.c **** Output      : None.
4896:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4897:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 281


4898:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Del(struct RME_Cap_Cpt* Cpt,
4899:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4900:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc)
4901:../../Source/Kernel/rme_kernel.c **** {
 11040              		.loc 1 4901 1
 11041              		.cfi_startproc
 11042              		@ args = 0, pretend = 0, frame = 40
 11043              		@ frame_needed = 1, uses_anonymous_args = 0
 11044 0000 00482DE9 		push	{fp, lr}
 11045              		.cfi_def_cfa_offset 8
 11046              		.cfi_offset 11, -8
 11047              		.cfi_offset 14, -4
 11048 0004 04B08DE2 		add	fp, sp, #4
 11049              		.cfi_def_cfa 11, 4
 11050 0008 28D04DE2 		sub	sp, sp, #40
 11051 000c 20000BE5 		str	r0, [fp, #-32]
 11052 0010 24100BE5 		str	r1, [fp, #-36]
 11053 0014 28200BE5 		str	r2, [fp, #-40]
4902:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4903:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Del;
4904:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4905:../../Source/Kernel/rme_kernel.c ****     /* For deletion use */
4906:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4907:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4908:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4909:../../Source/Kernel/rme_kernel.c **** #endif
4910:../../Source/Kernel/rme_kernel.c **** 
4911:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4912:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11054              		.loc 1 4912 5
 11055 0018 24301BE5 		ldr	r3, [fp, #-36]
 11056 001c 803003E2 		and	r3, r3, #128
 11057 0020 000053E3 		cmp	r3, #0
 11058 0024 1C00001A 		bne	.L708
 11059              		.loc 1 4912 5 is_stmt 0 discriminator 1
 11060 0028 20301BE5 		ldr	r3, [fp, #-32]
 11061 002c 142093E5 		ldr	r2, [r3, #20]
 11062 0030 24301BE5 		ldr	r3, [fp, #-36]
 11063 0034 030052E1 		cmp	r2, r3
 11064 0038 0100008A 		bhi	.L709
 11065              		.loc 1 4912 5 discriminator 3
 11066 003c 0230E0E3 		mvn	r3, #2
 11067              		.loc 1 4912 5
 11068 0040 BC0000EA 		b	.L710
 11069              	.L709:
 11070              		.loc 1 4912 5 discriminator 4
 11071 0044 24301BE5 		ldr	r3, [fp, #-36]
 11072 0048 8322A0E1 		lsl	r2, r3, #5
 11073 004c 20301BE5 		ldr	r3, [fp, #-32]
 11074 0050 0C3093E5 		ldr	r3, [r3, #12]
 11075 0054 033082E0 		add	r3, r2, r3
 11076 0058 08300BE5 		str	r3, [fp, #-8]
 11077 005c 08301BE5 		ldr	r3, [fp, #-8]
 11078 0060 0300A0E1 		mov	r0, r3
 11079 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11080 0068 0C000BE5 		str	r0, [fp, #-12]
 11081              		.loc 1 4912 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 282


 11082 006c 0C301BE5 		ldr	r3, [fp, #-12]
 11083 0070 FF3803E2 		and	r3, r3, #16711680
 11084 0074 020853E3 		cmp	r3, #131072
 11085 0078 0100001A 		bne	.L711
 11086              		.loc 1 4912 5 discriminator 5
 11087 007c 0830E0E3 		mvn	r3, #8
 11088              		.loc 1 4912 5
 11089 0080 AC0000EA 		b	.L710
 11090              	.L711:
 11091              		.loc 1 4912 5 discriminator 6
 11092 0084 0C301BE5 		ldr	r3, [fp, #-12]
 11093 0088 233CA0E1 		lsr	r3, r3, #24
 11094 008c 030053E3 		cmp	r3, #3
 11095 0090 3F00000A 		beq	.L712
 11096              		.loc 1 4912 5 discriminator 7
 11097 0094 0130E0E3 		mvn	r3, #1
 11098              		.loc 1 4912 5
 11099 0098 A60000EA 		b	.L710
 11100              	.L708:
 11101              		.loc 1 4912 5 discriminator 2
 11102 009c 24301BE5 		ldr	r3, [fp, #-36]
 11103 00a0 2324A0E1 		lsr	r2, r3, #8
 11104 00a4 20301BE5 		ldr	r3, [fp, #-32]
 11105 00a8 143093E5 		ldr	r3, [r3, #20]
 11106 00ac 030052E1 		cmp	r2, r3
 11107 00b0 0100003A 		bcc	.L713
 11108              		.loc 1 4912 5 discriminator 8
 11109 00b4 0230E0E3 		mvn	r3, #2
 11110              		.loc 1 4912 5
 11111 00b8 9E0000EA 		b	.L710
 11112              	.L713:
 11113              		.loc 1 4912 5 discriminator 9
 11114 00bc 24301BE5 		ldr	r3, [fp, #-36]
 11115 00c0 2334A0E1 		lsr	r3, r3, #8
 11116 00c4 8322A0E1 		lsl	r2, r3, #5
 11117 00c8 20301BE5 		ldr	r3, [fp, #-32]
 11118 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11119 00d0 033082E0 		add	r3, r2, r3
 11120 00d4 08300BE5 		str	r3, [fp, #-8]
 11121 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11122 00dc 0300A0E1 		mov	r0, r3
 11123 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11124 00e4 0C000BE5 		str	r0, [fp, #-12]
 11125              		.loc 1 4912 5 discriminator 1
 11126 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 11127 00ec FF3803E2 		and	r3, r3, #16711680
 11128 00f0 020853E3 		cmp	r3, #131072
 11129 00f4 0100001A 		bne	.L714
 11130              		.loc 1 4912 5 discriminator 10
 11131 00f8 0830E0E3 		mvn	r3, #8
 11132              		.loc 1 4912 5
 11133 00fc 8D0000EA 		b	.L710
 11134              	.L714:
 11135              		.loc 1 4912 5 discriminator 11
 11136 0100 0C301BE5 		ldr	r3, [fp, #-12]
 11137 0104 233CA0E1 		lsr	r3, r3, #24
 11138 0108 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 283


 11139 010c 0100000A 		beq	.L715
 11140              		.loc 1 4912 5 discriminator 12
 11141 0110 0130E0E3 		mvn	r3, #1
 11142              		.loc 1 4912 5
 11143 0114 870000EA 		b	.L710
 11144              	.L715:
 11145              		.loc 1 4912 5 discriminator 13
 11146 0118 24301BE5 		ldr	r3, [fp, #-36]
 11147 011c 7F2003E2 		and	r2, r3, #127
 11148 0120 08301BE5 		ldr	r3, [fp, #-8]
 11149 0124 143093E5 		ldr	r3, [r3, #20]
 11150 0128 030052E1 		cmp	r2, r3
 11151 012c 0100003A 		bcc	.L716
 11152              		.loc 1 4912 5 discriminator 14
 11153 0130 0230E0E3 		mvn	r3, #2
 11154              		.loc 1 4912 5
 11155 0134 7F0000EA 		b	.L710
 11156              	.L716:
 11157              		.loc 1 4912 5 discriminator 15
 11158 0138 24301BE5 		ldr	r3, [fp, #-36]
 11159 013c 7F3003E2 		and	r3, r3, #127
 11160 0140 8322A0E1 		lsl	r2, r3, #5
 11161 0144 08301BE5 		ldr	r3, [fp, #-8]
 11162 0148 0C3093E5 		ldr	r3, [r3, #12]
 11163 014c 033082E0 		add	r3, r2, r3
 11164 0150 08300BE5 		str	r3, [fp, #-8]
 11165 0154 08301BE5 		ldr	r3, [fp, #-8]
 11166 0158 0300A0E1 		mov	r0, r3
 11167 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11168 0160 0C000BE5 		str	r0, [fp, #-12]
 11169              		.loc 1 4912 5 discriminator 1
 11170 0164 0C301BE5 		ldr	r3, [fp, #-12]
 11171 0168 FF3803E2 		and	r3, r3, #16711680
 11172 016c 020853E3 		cmp	r3, #131072
 11173 0170 0100001A 		bne	.L717
 11174              		.loc 1 4912 5 discriminator 16
 11175 0174 0830E0E3 		mvn	r3, #8
 11176              		.loc 1 4912 5
 11177 0178 6E0000EA 		b	.L710
 11178              	.L717:
 11179              		.loc 1 4912 5 discriminator 17
 11180 017c 0C301BE5 		ldr	r3, [fp, #-12]
 11181 0180 233CA0E1 		lsr	r3, r3, #24
 11182 0184 030053E3 		cmp	r3, #3
 11183 0188 0100000A 		beq	.L712
 11184              		.loc 1 4912 5 discriminator 18
 11185 018c 0130E0E3 		mvn	r3, #1
 11186              		.loc 1 4912 5
 11187 0190 680000EA 		b	.L710
 11188              	.L712:
4913:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
4914:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4915:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 11189              		.loc 1 4915 5 is_stmt 1
 11190 0194 08301BE5 		ldr	r3, [fp, #-8]
 11191 0198 083093E5 		ldr	r3, [r3, #8]
 11192 019c 023003E2 		and	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 284


 11193 01a0 000053E3 		cmp	r3, #0
 11194 01a4 0100001A 		bne	.L718
 11195              		.loc 1 4915 5 is_stmt 0 discriminator 1
 11196 01a8 0630E0E3 		mvn	r3, #6
 11197              		.loc 1 4915 5
 11198 01ac 610000EA 		b	.L710
 11199              	.L718:
4916:../../Source/Kernel/rme_kernel.c **** 
4917:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4918:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Prc,struct RME_Cap_Prc*,Prc_Del);
 11200              		.loc 1 4918 5 is_stmt 1
 11201 01b0 08301BE5 		ldr	r3, [fp, #-8]
 11202 01b4 142093E5 		ldr	r2, [r3, #20]
 11203 01b8 28301BE5 		ldr	r3, [fp, #-40]
 11204 01bc 030052E1 		cmp	r2, r3
 11205 01c0 0100008A 		bhi	.L719
 11206              		.loc 1 4918 5 is_stmt 0 discriminator 1
 11207 01c4 0230E0E3 		mvn	r3, #2
 11208              		.loc 1 4918 5
 11209 01c8 5A0000EA 		b	.L710
 11210              	.L719:
 11211              		.loc 1 4918 5 discriminator 2
 11212 01cc 28301BE5 		ldr	r3, [fp, #-40]
 11213 01d0 8322A0E1 		lsl	r2, r3, #5
 11214 01d4 08301BE5 		ldr	r3, [fp, #-8]
 11215 01d8 0C3093E5 		ldr	r3, [r3, #12]
 11216 01dc 033082E0 		add	r3, r2, r3
 11217 01e0 10300BE5 		str	r3, [fp, #-16]
4919:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
4920:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Prc_Del,Type_Stat,RME_CAP_TYPE_PRC);
 11218              		.loc 1 4920 5 is_stmt 1
 11219 01e4 10301BE5 		ldr	r3, [fp, #-16]
 11220 01e8 0300A0E1 		mov	r0, r3
 11221 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11222 01f0 0C000BE5 		str	r0, [fp, #-12]
 11223              		.loc 1 4920 5 is_stmt 0 discriminator 1
 11224 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 11225 01f8 FF3803E2 		and	r3, r3, #16711680
 11226 01fc 020853E3 		cmp	r3, #131072
 11227 0200 0100000A 		beq	.L720
 11228 0204 0830E0E3 		mvn	r3, #8
 11229              		.loc 1 4920 5
 11230 0208 4A0000EA 		b	.L710
 11231              	.L720:
 11232              		.loc 1 4920 5 discriminator 2
 11233 020c 0C301BE5 		ldr	r3, [fp, #-12]
 11234 0210 233CA0E1 		lsr	r3, r3, #24
 11235 0214 050053E3 		cmp	r3, #5
 11236 0218 0100000A 		beq	.L721
 11237              		.loc 1 4920 5 discriminator 3
 11238 021c 0130E0E3 		mvn	r3, #1
 11239              		.loc 1 4920 5
 11240 0220 440000EA 		b	.L710
 11241              	.L721:
 11242              		.loc 1 4920 5 discriminator 4
 11243 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 11244 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 285


 11245 022c 002093E5 		ldr	r2, [r3]
 11246 0230 10301BE5 		ldr	r3, [fp, #-16]
 11247 0234 103093E5 		ldr	r3, [r3, #16]
 11248 0238 0310A0E1 		mov	r1, r3
 11249 023c 0200A0E1 		mov	r0, r2
 11250 0240 FEFFFFEB 		bl	_RME_Diff
 11251 0244 0030A0E1 		mov	r3, r0
 11252              		.loc 1 4920 5 discriminator 1
 11253 0248 0A0053E3 		cmp	r3, #10
 11254 024c 0100008A 		bhi	.L722
 11255              		.loc 1 4920 5 discriminator 5
 11256 0250 0730E0E3 		mvn	r3, #7
 11257              		.loc 1 4920 5
 11258 0254 370000EA 		b	.L710
 11259              	.L722:
 11260              		.loc 1 4920 5 discriminator 6
 11261 0258 10301BE5 		ldr	r3, [fp, #-16]
 11262 025c 043093E5 		ldr	r3, [r3, #4]
 11263 0260 000053E3 		cmp	r3, #0
 11264 0264 0B00000A 		beq	.L723
 11265              		.loc 1 4920 5 discriminator 7
 11266 0268 0C301BE5 		ldr	r3, [fp, #-12]
 11267 026c 7330FFE6 		uxth	r3, r3
 11268 0270 000053E3 		cmp	r3, #0
 11269 0274 0500001A 		bne	.L724
 11270              		.loc 1 4920 5 discriminator 9
 11271 0278 10001BE5 		ldr	r0, [fp, #-16]
 11272 027c 0C301BE5 		ldr	r3, [fp, #-12]
 11273 0280 FF38C3E3 		bic	r3, r3, #16711680
 11274 0284 0320A0E1 		mov	r2, r3
 11275 0288 0C101BE5 		ldr	r1, [fp, #-12]
 11276 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11277              	.L724:
 11278              		.loc 1 4920 5 discriminator 11
 11279 0290 0530E0E3 		mvn	r3, #5
 11280              		.loc 1 4920 5
 11281 0294 270000EA 		b	.L710
 11282              	.L723:
 11283              		.loc 1 4920 5 discriminator 8
 11284 0298 0C301BE5 		ldr	r3, [fp, #-12]
 11285 029c 7330FFE6 		uxth	r3, r3
 11286 02a0 000053E3 		cmp	r3, #0
 11287 02a4 0800000A 		beq	.L725
 11288              		.loc 1 4920 5 discriminator 12
 11289 02a8 003000E3 		movw	r3, #:lower16:.LC2
 11290 02ac 003040E3 		movt	r3, #:upper16:.LC2
 11291 02b0 002000E3 		movw	r2, #:lower16:.LC3
 11292 02b4 002040E3 		movt	r2, #:upper16:.LC3
 11293 02b8 381301E3 		movw	r1, #4920
 11294 02bc 000000E3 		movw	r0, #:lower16:.LC4
 11295 02c0 000040E3 		movt	r0, #:upper16:.LC4
 11296 02c4 FEFFFFEB 		bl	RME_Log
 11297              	.L726:
 11298              		.loc 1 4920 5
 11299 02c8 FEFFFFEA 		b	.L726
 11300              	.L725:
4921:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 286


4922:../../Source/Kernel/rme_kernel.c ****     /* Remember for deletion */
4923:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=Prc_Del->Cpt;
 11301              		.loc 1 4923 12 is_stmt 1
 11302 02cc 10301BE5 		ldr	r3, [fp, #-16]
 11303 02d0 143093E5 		ldr	r3, [r3, #20]
 11304 02d4 14300BE5 		str	r3, [fp, #-20]
4924:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4925:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=Prc_Del->Pgt;
 11305              		.loc 1 4925 12
 11306 02d8 10301BE5 		ldr	r3, [fp, #-16]
 11307 02dc 183093E5 		ldr	r3, [r3, #24]
 11308 02e0 18300BE5 		str	r3, [fp, #-24]
4926:../../Source/Kernel/rme_kernel.c **** #endif
4927:../../Source/Kernel/rme_kernel.c **** 
4928:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
4929:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Prc_Del,Type_Stat);
 11309              		.loc 1 4929 5
 11310 02e4 10301BE5 		ldr	r3, [fp, #-16]
 11311 02e8 0020A0E3 		mov	r2, #0
 11312 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 11313 02f0 0300A0E1 		mov	r0, r3
 11314 02f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11315 02f8 0030A0E1 		mov	r3, r0
 11316              		.loc 1 4929 5 is_stmt 0 discriminator 1
 11317 02fc 000053E3 		cmp	r3, #0
 11318 0300 0100001A 		bne	.L727
 11319 0304 0030E0E3 		mvn	r3, #0
 11320              		.loc 1 4929 5
 11321 0308 0A0000EA 		b	.L710
 11322              	.L727:
4930:../../Source/Kernel/rme_kernel.c **** 
4931:../../Source/Kernel/rme_kernel.c ****     /* Dereference caps */
4932:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),-1);
 11323              		.loc 1 4932 5 is_stmt 1
 11324 030c 14301BE5 		ldr	r3, [fp, #-20]
 11325 0310 043083E2 		add	r3, r3, #4
 11326 0314 0010E0E3 		mvn	r1, #0
 11327 0318 0300A0E1 		mov	r0, r3
 11328 031c FEFFFFEB 		bl	_RME_Fetch_Add_Single
4933:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4934:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),-1);
 11329              		.loc 1 4934 5
 11330 0320 18301BE5 		ldr	r3, [fp, #-24]
 11331 0324 043083E2 		add	r3, r3, #4
 11332 0328 0010E0E3 		mvn	r1, #0
 11333 032c 0300A0E1 		mov	r0, r3
 11334 0330 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4935:../../Source/Kernel/rme_kernel.c **** #endif
4936:../../Source/Kernel/rme_kernel.c ****     
4937:../../Source/Kernel/rme_kernel.c ****     return 0;
 11335              		.loc 1 4937 12
 11336 0334 0030A0E3 		mov	r3, #0
 11337              	.L710:
4938:../../Source/Kernel/rme_kernel.c **** }
 11338              		.loc 1 4938 1
 11339 0338 0300A0E1 		mov	r0, r3
 11340 033c 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 287


 11341              		.cfi_def_cfa 13, 8
 11342              		@ sp needed
 11343 0340 0088BDE8 		pop	{fp, pc}
 11344              		.cfi_endproc
 11345              	.LFE52:
 11347              		.section	.text._RME_Prc_Cpt,"ax",%progbits
 11348              		.align	2
 11349              		.syntax unified
 11350              		.arm
 11352              	_RME_Prc_Cpt:
 11353              	.LFB53:
4939:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Del *************************************************/
4940:../../Source/Kernel/rme_kernel.c **** 
4941:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Cpt ******************************************************
4942:../../Source/Kernel/rme_kernel.c **** Description : Change a process's capability table.
4943:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4944:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4945:../../Source/Kernel/rme_kernel.c ****                                   created already.
4946:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4947:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4948:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4949:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4950:../../Source/Kernel/rme_kernel.c **** Output      : None.
4951:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4952:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4953:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Cpt(struct RME_Cap_Cpt* Cpt,
4954:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4955:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt)
4956:../../Source/Kernel/rme_kernel.c **** {
 11354              		.loc 1 4956 1
 11355              		.cfi_startproc
 11356              		@ args = 0, pretend = 0, frame = 32
 11357              		@ frame_needed = 1, uses_anonymous_args = 0
 11358 0000 00482DE9 		push	{fp, lr}
 11359              		.cfi_def_cfa_offset 8
 11360              		.cfi_offset 11, -8
 11361              		.cfi_offset 14, -4
 11362 0004 04B08DE2 		add	fp, sp, #4
 11363              		.cfi_def_cfa 11, 4
 11364 0008 20D04DE2 		sub	sp, sp, #32
 11365 000c 18000BE5 		str	r0, [fp, #-24]
 11366 0010 1C100BE5 		str	r1, [fp, #-28]
 11367 0014 20200BE5 		str	r2, [fp, #-32]
4957:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4958:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_New;
4959:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Old;
4960:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4961:../../Source/Kernel/rme_kernel.c ****     
4962:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4963:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11368              		.loc 1 4963 5
 11369 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11370 001c 803003E2 		and	r3, r3, #128
 11371 0020 000053E3 		cmp	r3, #0
 11372 0024 1C00001A 		bne	.L729
 11373              		.loc 1 4963 5 is_stmt 0 discriminator 1
 11374 0028 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 288


 11375 002c 142093E5 		ldr	r2, [r3, #20]
 11376 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11377 0034 030052E1 		cmp	r2, r3
 11378 0038 0100008A 		bhi	.L730
 11379              		.loc 1 4963 5 discriminator 3
 11380 003c 0230E0E3 		mvn	r3, #2
 11381              		.loc 1 4963 5
 11382 0040 E30000EA 		b	.L731
 11383              	.L730:
 11384              		.loc 1 4963 5 discriminator 4
 11385 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11386 0048 8322A0E1 		lsl	r2, r3, #5
 11387 004c 18301BE5 		ldr	r3, [fp, #-24]
 11388 0050 0C3093E5 		ldr	r3, [r3, #12]
 11389 0054 033082E0 		add	r3, r2, r3
 11390 0058 08300BE5 		str	r3, [fp, #-8]
 11391 005c 08301BE5 		ldr	r3, [fp, #-8]
 11392 0060 0300A0E1 		mov	r0, r3
 11393 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11394 0068 10000BE5 		str	r0, [fp, #-16]
 11395              		.loc 1 4963 5 discriminator 1
 11396 006c 10301BE5 		ldr	r3, [fp, #-16]
 11397 0070 FF3803E2 		and	r3, r3, #16711680
 11398 0074 020853E3 		cmp	r3, #131072
 11399 0078 0100001A 		bne	.L732
 11400              		.loc 1 4963 5 discriminator 5
 11401 007c 0830E0E3 		mvn	r3, #8
 11402              		.loc 1 4963 5
 11403 0080 D30000EA 		b	.L731
 11404              	.L732:
 11405              		.loc 1 4963 5 discriminator 6
 11406 0084 10301BE5 		ldr	r3, [fp, #-16]
 11407 0088 233CA0E1 		lsr	r3, r3, #24
 11408 008c 050053E3 		cmp	r3, #5
 11409 0090 3F00000A 		beq	.L733
 11410              		.loc 1 4963 5 discriminator 7
 11411 0094 0130E0E3 		mvn	r3, #1
 11412              		.loc 1 4963 5
 11413 0098 CD0000EA 		b	.L731
 11414              	.L729:
 11415              		.loc 1 4963 5 discriminator 2
 11416 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11417 00a0 2324A0E1 		lsr	r2, r3, #8
 11418 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11419 00a8 143093E5 		ldr	r3, [r3, #20]
 11420 00ac 030052E1 		cmp	r2, r3
 11421 00b0 0100003A 		bcc	.L734
 11422              		.loc 1 4963 5 discriminator 8
 11423 00b4 0230E0E3 		mvn	r3, #2
 11424              		.loc 1 4963 5
 11425 00b8 C50000EA 		b	.L731
 11426              	.L734:
 11427              		.loc 1 4963 5 discriminator 9
 11428 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11429 00c0 2334A0E1 		lsr	r3, r3, #8
 11430 00c4 8322A0E1 		lsl	r2, r3, #5
 11431 00c8 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 289


 11432 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11433 00d0 033082E0 		add	r3, r2, r3
 11434 00d4 08300BE5 		str	r3, [fp, #-8]
 11435 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11436 00dc 0300A0E1 		mov	r0, r3
 11437 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11438 00e4 10000BE5 		str	r0, [fp, #-16]
 11439              		.loc 1 4963 5 discriminator 1
 11440 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11441 00ec FF3803E2 		and	r3, r3, #16711680
 11442 00f0 020853E3 		cmp	r3, #131072
 11443 00f4 0100001A 		bne	.L735
 11444              		.loc 1 4963 5 discriminator 10
 11445 00f8 0830E0E3 		mvn	r3, #8
 11446              		.loc 1 4963 5
 11447 00fc B40000EA 		b	.L731
 11448              	.L735:
 11449              		.loc 1 4963 5 discriminator 11
 11450 0100 10301BE5 		ldr	r3, [fp, #-16]
 11451 0104 233CA0E1 		lsr	r3, r3, #24
 11452 0108 030053E3 		cmp	r3, #3
 11453 010c 0100000A 		beq	.L736
 11454              		.loc 1 4963 5 discriminator 12
 11455 0110 0130E0E3 		mvn	r3, #1
 11456              		.loc 1 4963 5
 11457 0114 AE0000EA 		b	.L731
 11458              	.L736:
 11459              		.loc 1 4963 5 discriminator 13
 11460 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11461 011c 7F2003E2 		and	r2, r3, #127
 11462 0120 08301BE5 		ldr	r3, [fp, #-8]
 11463 0124 143093E5 		ldr	r3, [r3, #20]
 11464 0128 030052E1 		cmp	r2, r3
 11465 012c 0100003A 		bcc	.L737
 11466              		.loc 1 4963 5 discriminator 14
 11467 0130 0230E0E3 		mvn	r3, #2
 11468              		.loc 1 4963 5
 11469 0134 A60000EA 		b	.L731
 11470              	.L737:
 11471              		.loc 1 4963 5 discriminator 15
 11472 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11473 013c 7F3003E2 		and	r3, r3, #127
 11474 0140 8322A0E1 		lsl	r2, r3, #5
 11475 0144 08301BE5 		ldr	r3, [fp, #-8]
 11476 0148 0C3093E5 		ldr	r3, [r3, #12]
 11477 014c 033082E0 		add	r3, r2, r3
 11478 0150 08300BE5 		str	r3, [fp, #-8]
 11479 0154 08301BE5 		ldr	r3, [fp, #-8]
 11480 0158 0300A0E1 		mov	r0, r3
 11481 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11482 0160 10000BE5 		str	r0, [fp, #-16]
 11483              		.loc 1 4963 5 discriminator 1
 11484 0164 10301BE5 		ldr	r3, [fp, #-16]
 11485 0168 FF3803E2 		and	r3, r3, #16711680
 11486 016c 020853E3 		cmp	r3, #131072
 11487 0170 0100001A 		bne	.L738
 11488              		.loc 1 4963 5 discriminator 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 290


 11489 0174 0830E0E3 		mvn	r3, #8
 11490              		.loc 1 4963 5
 11491 0178 950000EA 		b	.L731
 11492              	.L738:
 11493              		.loc 1 4963 5 discriminator 17
 11494 017c 10301BE5 		ldr	r3, [fp, #-16]
 11495 0180 233CA0E1 		lsr	r3, r3, #24
 11496 0184 050053E3 		cmp	r3, #5
 11497 0188 0100000A 		beq	.L733
 11498              		.loc 1 4963 5 discriminator 18
 11499 018c 0130E0E3 		mvn	r3, #1
 11500              		.loc 1 4963 5
 11501 0190 8F0000EA 		b	.L731
 11502              	.L733:
4964:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4965:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11503              		.loc 1 4965 5 is_stmt 1
 11504 0194 20301BE5 		ldr	r3, [fp, #-32]
 11505 0198 803003E2 		and	r3, r3, #128
 11506 019c 000053E3 		cmp	r3, #0
 11507 01a0 1C00001A 		bne	.L739
 11508              		.loc 1 4965 5 is_stmt 0 discriminator 1
 11509 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11510 01a8 142093E5 		ldr	r2, [r3, #20]
 11511 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11512 01b0 030052E1 		cmp	r2, r3
 11513 01b4 0100008A 		bhi	.L740
 11514              		.loc 1 4965 5 discriminator 3
 11515 01b8 0230E0E3 		mvn	r3, #2
 11516              		.loc 1 4965 5
 11517 01bc 840000EA 		b	.L731
 11518              	.L740:
 11519              		.loc 1 4965 5 discriminator 4
 11520 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11521 01c4 8322A0E1 		lsl	r2, r3, #5
 11522 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11523 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11524 01d0 033082E0 		add	r3, r2, r3
 11525 01d4 0C300BE5 		str	r3, [fp, #-12]
 11526 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11527 01dc 0300A0E1 		mov	r0, r3
 11528 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11529 01e4 10000BE5 		str	r0, [fp, #-16]
 11530              		.loc 1 4965 5 discriminator 1
 11531 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11532 01ec FF3803E2 		and	r3, r3, #16711680
 11533 01f0 020853E3 		cmp	r3, #131072
 11534 01f4 0100001A 		bne	.L741
 11535              		.loc 1 4965 5 discriminator 5
 11536 01f8 0830E0E3 		mvn	r3, #8
 11537              		.loc 1 4965 5
 11538 01fc 740000EA 		b	.L731
 11539              	.L741:
 11540              		.loc 1 4965 5 discriminator 6
 11541 0200 10301BE5 		ldr	r3, [fp, #-16]
 11542 0204 233CA0E1 		lsr	r3, r3, #24
 11543 0208 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 291


 11544 020c 3F00000A 		beq	.L742
 11545              		.loc 1 4965 5 discriminator 7
 11546 0210 0130E0E3 		mvn	r3, #1
 11547              		.loc 1 4965 5
 11548 0214 6E0000EA 		b	.L731
 11549              	.L739:
 11550              		.loc 1 4965 5 discriminator 2
 11551 0218 20301BE5 		ldr	r3, [fp, #-32]
 11552 021c 2324A0E1 		lsr	r2, r3, #8
 11553 0220 18301BE5 		ldr	r3, [fp, #-24]
 11554 0224 143093E5 		ldr	r3, [r3, #20]
 11555 0228 030052E1 		cmp	r2, r3
 11556 022c 0100003A 		bcc	.L743
 11557              		.loc 1 4965 5 discriminator 8
 11558 0230 0230E0E3 		mvn	r3, #2
 11559              		.loc 1 4965 5
 11560 0234 660000EA 		b	.L731
 11561              	.L743:
 11562              		.loc 1 4965 5 discriminator 9
 11563 0238 20301BE5 		ldr	r3, [fp, #-32]
 11564 023c 2334A0E1 		lsr	r3, r3, #8
 11565 0240 8322A0E1 		lsl	r2, r3, #5
 11566 0244 18301BE5 		ldr	r3, [fp, #-24]
 11567 0248 0C3093E5 		ldr	r3, [r3, #12]
 11568 024c 033082E0 		add	r3, r2, r3
 11569 0250 0C300BE5 		str	r3, [fp, #-12]
 11570 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11571 0258 0300A0E1 		mov	r0, r3
 11572 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11573 0260 10000BE5 		str	r0, [fp, #-16]
 11574              		.loc 1 4965 5 discriminator 1
 11575 0264 10301BE5 		ldr	r3, [fp, #-16]
 11576 0268 FF3803E2 		and	r3, r3, #16711680
 11577 026c 020853E3 		cmp	r3, #131072
 11578 0270 0100001A 		bne	.L744
 11579              		.loc 1 4965 5 discriminator 10
 11580 0274 0830E0E3 		mvn	r3, #8
 11581              		.loc 1 4965 5
 11582 0278 550000EA 		b	.L731
 11583              	.L744:
 11584              		.loc 1 4965 5 discriminator 11
 11585 027c 10301BE5 		ldr	r3, [fp, #-16]
 11586 0280 233CA0E1 		lsr	r3, r3, #24
 11587 0284 030053E3 		cmp	r3, #3
 11588 0288 0100000A 		beq	.L745
 11589              		.loc 1 4965 5 discriminator 12
 11590 028c 0130E0E3 		mvn	r3, #1
 11591              		.loc 1 4965 5
 11592 0290 4F0000EA 		b	.L731
 11593              	.L745:
 11594              		.loc 1 4965 5 discriminator 13
 11595 0294 20301BE5 		ldr	r3, [fp, #-32]
 11596 0298 7F2003E2 		and	r2, r3, #127
 11597 029c 0C301BE5 		ldr	r3, [fp, #-12]
 11598 02a0 143093E5 		ldr	r3, [r3, #20]
 11599 02a4 030052E1 		cmp	r2, r3
 11600 02a8 0100003A 		bcc	.L746
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 292


 11601              		.loc 1 4965 5 discriminator 14
 11602 02ac 0230E0E3 		mvn	r3, #2
 11603              		.loc 1 4965 5
 11604 02b0 470000EA 		b	.L731
 11605              	.L746:
 11606              		.loc 1 4965 5 discriminator 15
 11607 02b4 20301BE5 		ldr	r3, [fp, #-32]
 11608 02b8 7F3003E2 		and	r3, r3, #127
 11609 02bc 8322A0E1 		lsl	r2, r3, #5
 11610 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 11611 02c4 0C3093E5 		ldr	r3, [r3, #12]
 11612 02c8 033082E0 		add	r3, r2, r3
 11613 02cc 0C300BE5 		str	r3, [fp, #-12]
 11614 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 11615 02d4 0300A0E1 		mov	r0, r3
 11616 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11617 02dc 10000BE5 		str	r0, [fp, #-16]
 11618              		.loc 1 4965 5 discriminator 1
 11619 02e0 10301BE5 		ldr	r3, [fp, #-16]
 11620 02e4 FF3803E2 		and	r3, r3, #16711680
 11621 02e8 020853E3 		cmp	r3, #131072
 11622 02ec 0100001A 		bne	.L747
 11623              		.loc 1 4965 5 discriminator 16
 11624 02f0 0830E0E3 		mvn	r3, #8
 11625              		.loc 1 4965 5
 11626 02f4 360000EA 		b	.L731
 11627              	.L747:
 11628              		.loc 1 4965 5 discriminator 17
 11629 02f8 10301BE5 		ldr	r3, [fp, #-16]
 11630 02fc 233CA0E1 		lsr	r3, r3, #24
 11631 0300 030053E3 		cmp	r3, #3
 11632 0304 0100000A 		beq	.L742
 11633              		.loc 1 4965 5 discriminator 18
 11634 0308 0130E0E3 		mvn	r3, #1
 11635              		.loc 1 4965 5
 11636 030c 300000EA 		b	.L731
 11637              	.L742:
4966:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_New,Type_Stat);     
4967:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4968:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_CPT);
 11638              		.loc 1 4968 5 is_stmt 1
 11639 0310 08301BE5 		ldr	r3, [fp, #-8]
 11640 0314 083093E5 		ldr	r3, [r3, #8]
 11641 0318 043003E2 		and	r3, r3, #4
 11642 031c 000053E3 		cmp	r3, #0
 11643 0320 0100001A 		bne	.L748
 11644              		.loc 1 4968 5 is_stmt 0 discriminator 1
 11645 0324 0630E0E3 		mvn	r3, #6
 11646              		.loc 1 4968 5
 11647 0328 290000EA 		b	.L731
 11648              	.L748:
4969:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_New,RME_CPT_FLAG_PRC_CPT);
 11649              		.loc 1 4969 5 is_stmt 1
 11650 032c 0C301BE5 		ldr	r3, [fp, #-12]
 11651 0330 083093E5 		ldr	r3, [r3, #8]
 11652 0334 803003E2 		and	r3, r3, #128
 11653 0338 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 293


 11654 033c 0100001A 		bne	.L749
 11655              		.loc 1 4969 5 is_stmt 0 discriminator 1
 11656 0340 0630E0E3 		mvn	r3, #6
 11657              		.loc 1 4969 5
 11658 0344 220000EA 		b	.L731
 11659              	.L749:
4970:../../Source/Kernel/rme_kernel.c ****     
4971:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
4972:../../Source/Kernel/rme_kernel.c ****     Cpt_New=RME_CAP_CONV_ROOT(Cpt_New,struct RME_Cap_Cpt*);
 11660              		.loc 1 4972 13 is_stmt 1
 11661 0348 0C301BE5 		ldr	r3, [fp, #-12]
 11662 034c 003093E5 		ldr	r3, [r3]
 11663 0350 7330FFE6 		uxth	r3, r3
 11664 0354 000053E3 		cmp	r3, #0
 11665 0358 0200000A 		beq	.L750
 11666              		.loc 1 4972 13 is_stmt 0 discriminator 1
 11667 035c 0C301BE5 		ldr	r3, [fp, #-12]
 11668 0360 043093E5 		ldr	r3, [r3, #4]
 11669 0364 000000EA 		b	.L751
 11670              	.L750:
 11671              		.loc 1 4972 13 discriminator 2
 11672 0368 0C301BE5 		ldr	r3, [fp, #-12]
 11673              	.L751:
 11674              		.loc 1 4972 12 is_stmt 1 discriminator 4
 11675 036c 0C300BE5 		str	r3, [fp, #-12]
4973:../../Source/Kernel/rme_kernel.c ****     
4974:../../Source/Kernel/rme_kernel.c ****     /* Commit the change */
4975:../../Source/Kernel/rme_kernel.c ****     Cpt_Old=Prc_Op->Cpt;
 11676              		.loc 1 4975 12
 11677 0370 08301BE5 		ldr	r3, [fp, #-8]
 11678 0374 143093E5 		ldr	r3, [r3, #20]
 11679 0378 14300BE5 		str	r3, [fp, #-20]
4976:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Cpt)),
 11680              		.loc 1 4976 8
 11681 037c 08301BE5 		ldr	r3, [fp, #-8]
 11682 0380 143083E2 		add	r3, r3, #20
 11683 0384 14101BE5 		ldr	r1, [fp, #-20]
 11684 0388 0C201BE5 		ldr	r2, [fp, #-12]
 11685 038c 0300A0E1 		mov	r0, r3
 11686 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11687 0394 0030A0E1 		mov	r3, r0
 11688              		.loc 1 4976 7 discriminator 1
 11689 0398 000053E3 		cmp	r3, #0
 11690 039c 0100001A 		bne	.L752
4977:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Cpt_Old,(rme_ptr_t)Cpt_New)==RME_CASFAIL)
4978:../../Source/Kernel/rme_kernel.c ****     {
4979:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4980:../../Source/Kernel/rme_kernel.c ****         
4981:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 11691              		.loc 1 4981 16
 11692 03a0 C930E0E3 		mvn	r3, #201
 11693 03a4 0A0000EA 		b	.L731
 11694              	.L752:
4982:../../Source/Kernel/rme_kernel.c ****     }
4983:../../Source/Kernel/rme_kernel.c ****     else
4984:../../Source/Kernel/rme_kernel.c ****     {
4985:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 294


4986:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4987:../../Source/Kernel/rme_kernel.c ****     }
4988:../../Source/Kernel/rme_kernel.c ****     
4989:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
4990:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_New->Head.Root_Ref),1);
 11695              		.loc 1 4990 5
 11696 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 11697 03ac 043083E2 		add	r3, r3, #4
 11698 03b0 0110A0E3 		mov	r1, #1
 11699 03b4 0300A0E1 		mov	r0, r3
 11700 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4991:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_Old->Head.Root_Ref),-1);
 11701              		.loc 1 4991 5
 11702 03bc 14301BE5 		ldr	r3, [fp, #-20]
 11703 03c0 043083E2 		add	r3, r3, #4
 11704 03c4 0010E0E3 		mvn	r1, #0
 11705 03c8 0300A0E1 		mov	r0, r3
 11706 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
4992:../../Source/Kernel/rme_kernel.c **** 
4993:../../Source/Kernel/rme_kernel.c ****     return 0;
 11707              		.loc 1 4993 12
 11708 03d0 0030A0E3 		mov	r3, #0
 11709              	.L731:
4994:../../Source/Kernel/rme_kernel.c **** }
 11710              		.loc 1 4994 1
 11711 03d4 0300A0E1 		mov	r0, r3
 11712 03d8 04D04BE2 		sub	sp, fp, #4
 11713              		.cfi_def_cfa 13, 8
 11714              		@ sp needed
 11715 03dc 0088BDE8 		pop	{fp, pc}
 11716              		.cfi_endproc
 11717              	.LFE53:
 11719              		.section	.text._RME_Prc_Pgt,"ax",%progbits
 11720              		.align	2
 11721              		.syntax unified
 11722              		.arm
 11724              	_RME_Prc_Pgt:
 11725              	.LFB54:
4995:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Cpt *************************************************/
4996:../../Source/Kernel/rme_kernel.c **** 
4997:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Pgt ******************************************************
4998:../../Source/Kernel/rme_kernel.c **** Description : Change a process's page table.
4999:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5000:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
5001:../../Source/Kernel/rme_kernel.c ****                                   created already.
5002:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5003:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
5004:../../Source/Kernel/rme_kernel.c ****                                   this process.
5005:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5006:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
5007:../../Source/Kernel/rme_kernel.c ****                                   address.
5008:../../Source/Kernel/rme_kernel.c **** Output      : None.
5009:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5010:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5011:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5012:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
5013:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 295


5014:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
5015:../../Source/Kernel/rme_kernel.c **** #else
5016:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
5017:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5018:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
5019:../../Source/Kernel/rme_kernel.c **** #endif
5020:../../Source/Kernel/rme_kernel.c **** {
 11726              		.loc 1 5020 1
 11727              		.cfi_startproc
 11728              		@ args = 0, pretend = 0, frame = 32
 11729              		@ frame_needed = 1, uses_anonymous_args = 0
 11730 0000 00482DE9 		push	{fp, lr}
 11731              		.cfi_def_cfa_offset 8
 11732              		.cfi_offset 11, -8
 11733              		.cfi_offset 14, -4
 11734 0004 04B08DE2 		add	fp, sp, #4
 11735              		.cfi_def_cfa 11, 4
 11736 0008 20D04DE2 		sub	sp, sp, #32
 11737 000c 18000BE5 		str	r0, [fp, #-24]
 11738 0010 1C100BE5 		str	r1, [fp, #-28]
 11739 0014 20200BE5 		str	r2, [fp, #-32]
5021:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5022:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5023:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
5024:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Old;
5025:../../Source/Kernel/rme_kernel.c **** #else
5026:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Old;
5027:../../Source/Kernel/rme_kernel.c **** #endif
5028:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5029:../../Source/Kernel/rme_kernel.c ****     
5030:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5031:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11740              		.loc 1 5031 5
 11741 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11742 001c 803003E2 		and	r3, r3, #128
 11743 0020 000053E3 		cmp	r3, #0
 11744 0024 1C00001A 		bne	.L754
 11745              		.loc 1 5031 5 is_stmt 0 discriminator 1
 11746 0028 18301BE5 		ldr	r3, [fp, #-24]
 11747 002c 142093E5 		ldr	r2, [r3, #20]
 11748 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11749 0034 030052E1 		cmp	r2, r3
 11750 0038 0100008A 		bhi	.L755
 11751              		.loc 1 5031 5 discriminator 3
 11752 003c 0230E0E3 		mvn	r3, #2
 11753              		.loc 1 5031 5
 11754 0040 E30000EA 		b	.L756
 11755              	.L755:
 11756              		.loc 1 5031 5 discriminator 4
 11757 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11758 0048 8322A0E1 		lsl	r2, r3, #5
 11759 004c 18301BE5 		ldr	r3, [fp, #-24]
 11760 0050 0C3093E5 		ldr	r3, [r3, #12]
 11761 0054 033082E0 		add	r3, r2, r3
 11762 0058 08300BE5 		str	r3, [fp, #-8]
 11763 005c 08301BE5 		ldr	r3, [fp, #-8]
 11764 0060 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 296


 11765 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11766 0068 10000BE5 		str	r0, [fp, #-16]
 11767              		.loc 1 5031 5 discriminator 1
 11768 006c 10301BE5 		ldr	r3, [fp, #-16]
 11769 0070 FF3803E2 		and	r3, r3, #16711680
 11770 0074 020853E3 		cmp	r3, #131072
 11771 0078 0100001A 		bne	.L757
 11772              		.loc 1 5031 5 discriminator 5
 11773 007c 0830E0E3 		mvn	r3, #8
 11774              		.loc 1 5031 5
 11775 0080 D30000EA 		b	.L756
 11776              	.L757:
 11777              		.loc 1 5031 5 discriminator 6
 11778 0084 10301BE5 		ldr	r3, [fp, #-16]
 11779 0088 233CA0E1 		lsr	r3, r3, #24
 11780 008c 050053E3 		cmp	r3, #5
 11781 0090 3F00000A 		beq	.L758
 11782              		.loc 1 5031 5 discriminator 7
 11783 0094 0130E0E3 		mvn	r3, #1
 11784              		.loc 1 5031 5
 11785 0098 CD0000EA 		b	.L756
 11786              	.L754:
 11787              		.loc 1 5031 5 discriminator 2
 11788 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11789 00a0 2324A0E1 		lsr	r2, r3, #8
 11790 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11791 00a8 143093E5 		ldr	r3, [r3, #20]
 11792 00ac 030052E1 		cmp	r2, r3
 11793 00b0 0100003A 		bcc	.L759
 11794              		.loc 1 5031 5 discriminator 8
 11795 00b4 0230E0E3 		mvn	r3, #2
 11796              		.loc 1 5031 5
 11797 00b8 C50000EA 		b	.L756
 11798              	.L759:
 11799              		.loc 1 5031 5 discriminator 9
 11800 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11801 00c0 2334A0E1 		lsr	r3, r3, #8
 11802 00c4 8322A0E1 		lsl	r2, r3, #5
 11803 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11804 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11805 00d0 033082E0 		add	r3, r2, r3
 11806 00d4 08300BE5 		str	r3, [fp, #-8]
 11807 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11808 00dc 0300A0E1 		mov	r0, r3
 11809 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11810 00e4 10000BE5 		str	r0, [fp, #-16]
 11811              		.loc 1 5031 5 discriminator 1
 11812 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11813 00ec FF3803E2 		and	r3, r3, #16711680
 11814 00f0 020853E3 		cmp	r3, #131072
 11815 00f4 0100001A 		bne	.L760
 11816              		.loc 1 5031 5 discriminator 10
 11817 00f8 0830E0E3 		mvn	r3, #8
 11818              		.loc 1 5031 5
 11819 00fc B40000EA 		b	.L756
 11820              	.L760:
 11821              		.loc 1 5031 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 297


 11822 0100 10301BE5 		ldr	r3, [fp, #-16]
 11823 0104 233CA0E1 		lsr	r3, r3, #24
 11824 0108 030053E3 		cmp	r3, #3
 11825 010c 0100000A 		beq	.L761
 11826              		.loc 1 5031 5 discriminator 12
 11827 0110 0130E0E3 		mvn	r3, #1
 11828              		.loc 1 5031 5
 11829 0114 AE0000EA 		b	.L756
 11830              	.L761:
 11831              		.loc 1 5031 5 discriminator 13
 11832 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11833 011c 7F2003E2 		and	r2, r3, #127
 11834 0120 08301BE5 		ldr	r3, [fp, #-8]
 11835 0124 143093E5 		ldr	r3, [r3, #20]
 11836 0128 030052E1 		cmp	r2, r3
 11837 012c 0100003A 		bcc	.L762
 11838              		.loc 1 5031 5 discriminator 14
 11839 0130 0230E0E3 		mvn	r3, #2
 11840              		.loc 1 5031 5
 11841 0134 A60000EA 		b	.L756
 11842              	.L762:
 11843              		.loc 1 5031 5 discriminator 15
 11844 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11845 013c 7F3003E2 		and	r3, r3, #127
 11846 0140 8322A0E1 		lsl	r2, r3, #5
 11847 0144 08301BE5 		ldr	r3, [fp, #-8]
 11848 0148 0C3093E5 		ldr	r3, [r3, #12]
 11849 014c 033082E0 		add	r3, r2, r3
 11850 0150 08300BE5 		str	r3, [fp, #-8]
 11851 0154 08301BE5 		ldr	r3, [fp, #-8]
 11852 0158 0300A0E1 		mov	r0, r3
 11853 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11854 0160 10000BE5 		str	r0, [fp, #-16]
 11855              		.loc 1 5031 5 discriminator 1
 11856 0164 10301BE5 		ldr	r3, [fp, #-16]
 11857 0168 FF3803E2 		and	r3, r3, #16711680
 11858 016c 020853E3 		cmp	r3, #131072
 11859 0170 0100001A 		bne	.L763
 11860              		.loc 1 5031 5 discriminator 16
 11861 0174 0830E0E3 		mvn	r3, #8
 11862              		.loc 1 5031 5
 11863 0178 950000EA 		b	.L756
 11864              	.L763:
 11865              		.loc 1 5031 5 discriminator 17
 11866 017c 10301BE5 		ldr	r3, [fp, #-16]
 11867 0180 233CA0E1 		lsr	r3, r3, #24
 11868 0184 050053E3 		cmp	r3, #5
 11869 0188 0100000A 		beq	.L758
 11870              		.loc 1 5031 5 discriminator 18
 11871 018c 0130E0E3 		mvn	r3, #1
 11872              		.loc 1 5031 5
 11873 0190 8F0000EA 		b	.L756
 11874              	.L758:
5032:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
5033:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5034:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 11875              		.loc 1 5034 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 298


 11876 0194 20301BE5 		ldr	r3, [fp, #-32]
 11877 0198 803003E2 		and	r3, r3, #128
 11878 019c 000053E3 		cmp	r3, #0
 11879 01a0 1C00001A 		bne	.L764
 11880              		.loc 1 5034 5 is_stmt 0 discriminator 1
 11881 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11882 01a8 142093E5 		ldr	r2, [r3, #20]
 11883 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11884 01b0 030052E1 		cmp	r2, r3
 11885 01b4 0100008A 		bhi	.L765
 11886              		.loc 1 5034 5 discriminator 3
 11887 01b8 0230E0E3 		mvn	r3, #2
 11888              		.loc 1 5034 5
 11889 01bc 840000EA 		b	.L756
 11890              	.L765:
 11891              		.loc 1 5034 5 discriminator 4
 11892 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11893 01c4 8322A0E1 		lsl	r2, r3, #5
 11894 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11895 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11896 01d0 033082E0 		add	r3, r2, r3
 11897 01d4 0C300BE5 		str	r3, [fp, #-12]
 11898 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11899 01dc 0300A0E1 		mov	r0, r3
 11900 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11901 01e4 10000BE5 		str	r0, [fp, #-16]
 11902              		.loc 1 5034 5 discriminator 1
 11903 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11904 01ec FF3803E2 		and	r3, r3, #16711680
 11905 01f0 020853E3 		cmp	r3, #131072
 11906 01f4 0100001A 		bne	.L766
 11907              		.loc 1 5034 5 discriminator 5
 11908 01f8 0830E0E3 		mvn	r3, #8
 11909              		.loc 1 5034 5
 11910 01fc 740000EA 		b	.L756
 11911              	.L766:
 11912              		.loc 1 5034 5 discriminator 6
 11913 0200 10301BE5 		ldr	r3, [fp, #-16]
 11914 0204 233CA0E1 		lsr	r3, r3, #24
 11915 0208 040053E3 		cmp	r3, #4
 11916 020c 3F00000A 		beq	.L767
 11917              		.loc 1 5034 5 discriminator 7
 11918 0210 0130E0E3 		mvn	r3, #1
 11919              		.loc 1 5034 5
 11920 0214 6E0000EA 		b	.L756
 11921              	.L764:
 11922              		.loc 1 5034 5 discriminator 2
 11923 0218 20301BE5 		ldr	r3, [fp, #-32]
 11924 021c 2324A0E1 		lsr	r2, r3, #8
 11925 0220 18301BE5 		ldr	r3, [fp, #-24]
 11926 0224 143093E5 		ldr	r3, [r3, #20]
 11927 0228 030052E1 		cmp	r2, r3
 11928 022c 0100003A 		bcc	.L768
 11929              		.loc 1 5034 5 discriminator 8
 11930 0230 0230E0E3 		mvn	r3, #2
 11931              		.loc 1 5034 5
 11932 0234 660000EA 		b	.L756
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 299


 11933              	.L768:
 11934              		.loc 1 5034 5 discriminator 9
 11935 0238 20301BE5 		ldr	r3, [fp, #-32]
 11936 023c 2334A0E1 		lsr	r3, r3, #8
 11937 0240 8322A0E1 		lsl	r2, r3, #5
 11938 0244 18301BE5 		ldr	r3, [fp, #-24]
 11939 0248 0C3093E5 		ldr	r3, [r3, #12]
 11940 024c 033082E0 		add	r3, r2, r3
 11941 0250 0C300BE5 		str	r3, [fp, #-12]
 11942 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11943 0258 0300A0E1 		mov	r0, r3
 11944 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11945 0260 10000BE5 		str	r0, [fp, #-16]
 11946              		.loc 1 5034 5 discriminator 1
 11947 0264 10301BE5 		ldr	r3, [fp, #-16]
 11948 0268 FF3803E2 		and	r3, r3, #16711680
 11949 026c 020853E3 		cmp	r3, #131072
 11950 0270 0100001A 		bne	.L769
 11951              		.loc 1 5034 5 discriminator 10
 11952 0274 0830E0E3 		mvn	r3, #8
 11953              		.loc 1 5034 5
 11954 0278 550000EA 		b	.L756
 11955              	.L769:
 11956              		.loc 1 5034 5 discriminator 11
 11957 027c 10301BE5 		ldr	r3, [fp, #-16]
 11958 0280 233CA0E1 		lsr	r3, r3, #24
 11959 0284 030053E3 		cmp	r3, #3
 11960 0288 0100000A 		beq	.L770
 11961              		.loc 1 5034 5 discriminator 12
 11962 028c 0130E0E3 		mvn	r3, #1
 11963              		.loc 1 5034 5
 11964 0290 4F0000EA 		b	.L756
 11965              	.L770:
 11966              		.loc 1 5034 5 discriminator 13
 11967 0294 20301BE5 		ldr	r3, [fp, #-32]
 11968 0298 7F2003E2 		and	r2, r3, #127
 11969 029c 0C301BE5 		ldr	r3, [fp, #-12]
 11970 02a0 143093E5 		ldr	r3, [r3, #20]
 11971 02a4 030052E1 		cmp	r2, r3
 11972 02a8 0100003A 		bcc	.L771
 11973              		.loc 1 5034 5 discriminator 14
 11974 02ac 0230E0E3 		mvn	r3, #2
 11975              		.loc 1 5034 5
 11976 02b0 470000EA 		b	.L756
 11977              	.L771:
 11978              		.loc 1 5034 5 discriminator 15
 11979 02b4 20301BE5 		ldr	r3, [fp, #-32]
 11980 02b8 7F3003E2 		and	r3, r3, #127
 11981 02bc 8322A0E1 		lsl	r2, r3, #5
 11982 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 11983 02c4 0C3093E5 		ldr	r3, [r3, #12]
 11984 02c8 033082E0 		add	r3, r2, r3
 11985 02cc 0C300BE5 		str	r3, [fp, #-12]
 11986 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 11987 02d4 0300A0E1 		mov	r0, r3
 11988 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11989 02dc 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 300


 11990              		.loc 1 5034 5 discriminator 1
 11991 02e0 10301BE5 		ldr	r3, [fp, #-16]
 11992 02e4 FF3803E2 		and	r3, r3, #16711680
 11993 02e8 020853E3 		cmp	r3, #131072
 11994 02ec 0100001A 		bne	.L772
 11995              		.loc 1 5034 5 discriminator 16
 11996 02f0 0830E0E3 		mvn	r3, #8
 11997              		.loc 1 5034 5
 11998 02f4 360000EA 		b	.L756
 11999              	.L772:
 12000              		.loc 1 5034 5 discriminator 17
 12001 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12002 02fc 233CA0E1 		lsr	r3, r3, #24
 12003 0300 040053E3 		cmp	r3, #4
 12004 0304 0100000A 		beq	.L767
 12005              		.loc 1 5034 5 discriminator 18
 12006 0308 0130E0E3 		mvn	r3, #1
 12007              		.loc 1 5034 5
 12008 030c 300000EA 		b	.L756
 12009              	.L767:
5035:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_New,Type_Stat);
5036:../../Source/Kernel/rme_kernel.c **** #endif
5037:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5038:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_PGT);
 12010              		.loc 1 5038 5 is_stmt 1
 12011 0310 08301BE5 		ldr	r3, [fp, #-8]
 12012 0314 083093E5 		ldr	r3, [r3, #8]
 12013 0318 083003E2 		and	r3, r3, #8
 12014 031c 000053E3 		cmp	r3, #0
 12015 0320 0100001A 		bne	.L773
 12016              		.loc 1 5038 5 is_stmt 0 discriminator 1
 12017 0324 0630E0E3 		mvn	r3, #6
 12018              		.loc 1 5038 5
 12019 0328 290000EA 		b	.L756
 12020              	.L773:
5039:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5040:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_New,RME_PGT_FLAG_PRC_PGT);
 12021              		.loc 1 5040 5 is_stmt 1
 12022 032c 0C301BE5 		ldr	r3, [fp, #-12]
 12023 0330 083093E5 		ldr	r3, [r3, #8]
 12024 0334 803003E2 		and	r3, r3, #128
 12025 0338 000053E3 		cmp	r3, #0
 12026 033c 0100001A 		bne	.L774
 12027              		.loc 1 5040 5 is_stmt 0 discriminator 1
 12028 0340 0630E0E3 		mvn	r3, #6
 12029              		.loc 1 5040 5
 12030 0344 220000EA 		b	.L756
 12031              	.L774:
5041:../../Source/Kernel/rme_kernel.c **** #endif
5042:../../Source/Kernel/rme_kernel.c ****     
5043:../../Source/Kernel/rme_kernel.c ****     Pgt_Old=Prc_Op->Pgt;
 12032              		.loc 1 5043 12 is_stmt 1
 12033 0348 08301BE5 		ldr	r3, [fp, #-8]
 12034 034c 183093E5 		ldr	r3, [r3, #24]
 12035 0350 14300BE5 		str	r3, [fp, #-20]
5044:../../Source/Kernel/rme_kernel.c ****     
5045:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 301


5046:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
5047:../../Source/Kernel/rme_kernel.c ****     Pgt_New=RME_CAP_CONV_ROOT(Pgt_New,struct RME_Cap_Pgt*);
 12036              		.loc 1 5047 13
 12037 0354 0C301BE5 		ldr	r3, [fp, #-12]
 12038 0358 003093E5 		ldr	r3, [r3]
 12039 035c 7330FFE6 		uxth	r3, r3
 12040 0360 000053E3 		cmp	r3, #0
 12041 0364 0200000A 		beq	.L775
 12042              		.loc 1 5047 13 is_stmt 0 discriminator 1
 12043 0368 0C301BE5 		ldr	r3, [fp, #-12]
 12044 036c 043093E5 		ldr	r3, [r3, #4]
 12045 0370 000000EA 		b	.L776
 12046              	.L775:
 12047              		.loc 1 5047 13 discriminator 2
 12048 0374 0C301BE5 		ldr	r3, [fp, #-12]
 12049              	.L776:
 12050              		.loc 1 5047 12 is_stmt 1 discriminator 4
 12051 0378 0C300BE5 		str	r3, [fp, #-12]
5048:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5049:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
 12052              		.loc 1 5049 8
 12053 037c 08301BE5 		ldr	r3, [fp, #-8]
 12054 0380 183083E2 		add	r3, r3, #24
 12055 0384 14101BE5 		ldr	r1, [fp, #-20]
 12056 0388 0C201BE5 		ldr	r2, [fp, #-12]
 12057 038c 0300A0E1 		mov	r0, r3
 12058 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12059 0394 0030A0E1 		mov	r3, r0
 12060              		.loc 1 5049 7 discriminator 1
 12061 0398 000053E3 		cmp	r3, #0
 12062 039c 0100001A 		bne	.L777
5050:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5051:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_New)==RME_CASFAIL)
5052:../../Source/Kernel/rme_kernel.c **** #else
5053:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5054:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
5055:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5056:../../Source/Kernel/rme_kernel.c ****                      Raw_Pgt)==RME_CASFAIL)
5057:../../Source/Kernel/rme_kernel.c **** #endif
5058:../../Source/Kernel/rme_kernel.c ****     {
5059:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5060:../../Source/Kernel/rme_kernel.c ****         
5061:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 12063              		.loc 1 5061 16
 12064 03a0 C930E0E3 		mvn	r3, #201
 12065 03a4 0A0000EA 		b	.L756
 12066              	.L777:
5062:../../Source/Kernel/rme_kernel.c ****     }
5063:../../Source/Kernel/rme_kernel.c ****     else
5064:../../Source/Kernel/rme_kernel.c ****     {
5065:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5066:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5067:../../Source/Kernel/rme_kernel.c ****     }
5068:../../Source/Kernel/rme_kernel.c ****     
5069:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
5070:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5071:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_New->Head.Root_Ref),1);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 302


 12067              		.loc 1 5071 5
 12068 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 12069 03ac 043083E2 		add	r3, r3, #4
 12070 03b0 0110A0E3 		mov	r1, #1
 12071 03b4 0300A0E1 		mov	r0, r3
 12072 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5072:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Old->Head.Root_Ref),-1);
 12073              		.loc 1 5072 5
 12074 03bc 14301BE5 		ldr	r3, [fp, #-20]
 12075 03c0 043083E2 		add	r3, r3, #4
 12076 03c4 0010E0E3 		mvn	r1, #0
 12077 03c8 0300A0E1 		mov	r0, r3
 12078 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
5073:../../Source/Kernel/rme_kernel.c **** #endif
5074:../../Source/Kernel/rme_kernel.c ****     
5075:../../Source/Kernel/rme_kernel.c ****     return 0;
 12079              		.loc 1 5075 12
 12080 03d0 0030A0E3 		mov	r3, #0
 12081              	.L756:
5076:../../Source/Kernel/rme_kernel.c **** }
 12082              		.loc 1 5076 1
 12083 03d4 0300A0E1 		mov	r0, r3
 12084 03d8 04D04BE2 		sub	sp, fp, #4
 12085              		.cfi_def_cfa 13, 8
 12086              		@ sp needed
 12087 03dc 0088BDE8 		pop	{fp, pc}
 12088              		.cfi_endproc
 12089              	.LFE54:
 12091              		.section	.text._RME_Thd_Boot_Crt,"ax",%progbits
 12092              		.align	2
 12093              		.global	_RME_Thd_Boot_Crt
 12094              		.syntax unified
 12095              		.arm
 12097              	_RME_Thd_Boot_Crt:
 12098              	.LFB55:
5077:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Pgt *************************************************/
5078:../../Source/Kernel/rme_kernel.c **** 
5079:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Boot_Crt *************************************************
5080:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time thread. The boot-time thread is per-core, and
5081:../../Source/Kernel/rme_kernel.c ****               will have infinite budget, and has no parent. This function
5082:../../Source/Kernel/rme_kernel.c ****               allows creation of a thread on behalf of other processors,
5083:../../Source/Kernel/rme_kernel.c ****               by passing a CPUID parameter. Therefore, it is recommended to
5084:../../Source/Kernel/rme_kernel.c ****               create the threads sequentially during boot-up; if you create
5085:../../Source/Kernel/rme_kernel.c ****               threads in parallel, be sure to only create the thread on your
5086:../../Source/Kernel/rme_kernel.c ****               local core.
5087:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and 
5088:../../Source/Kernel/rme_kernel.c ****               the initial threads' maximum priority will be set by the system.
5089:../../Source/Kernel/rme_kernel.c ****               This thread is a basic thread and hence always have attribute 0.
5090:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5091:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5092:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5093:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5094:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5095:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5096:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5097:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5098:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the thread.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 303


5099:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level of the thread.
5100:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure of the
5101:../../Source/Kernel/rme_kernel.c ****                                             CPU to bind the thread to.
5102:../../Source/Kernel/rme_kernel.c **** Output      : None.
5103:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5104:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5105:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Thd_Boot_Crt(struct RME_Cap_Cpt* Cpt,
5106:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
5107:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Thd,
5108:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
5109:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
5110:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Prio,
5111:../../Source/Kernel/rme_kernel.c ****                             struct RME_CPU_Local* Local)
5112:../../Source/Kernel/rme_kernel.c **** {
 12099              		.loc 1 5112 1
 12100              		.cfi_startproc
 12101              		@ args = 12, pretend = 0, frame = 40
 12102              		@ frame_needed = 1, uses_anonymous_args = 0
 12103 0000 00482DE9 		push	{fp, lr}
 12104              		.cfi_def_cfa_offset 8
 12105              		.cfi_offset 11, -8
 12106              		.cfi_offset 14, -4
 12107 0004 04B08DE2 		add	fp, sp, #4
 12108              		.cfi_def_cfa 11, 4
 12109 0008 28D04DE2 		sub	sp, sp, #40
 12110 000c 20000BE5 		str	r0, [fp, #-32]
 12111 0010 24100BE5 		str	r1, [fp, #-36]
 12112 0014 28200BE5 		str	r2, [fp, #-40]
 12113 0018 2C300BE5 		str	r3, [fp, #-44]
5113:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5114:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5115:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5116:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5117:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5118:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5119:../../Source/Kernel/rme_kernel.c ****     
5120:../../Source/Kernel/rme_kernel.c ****     /* Check whether the priority level is allowed */
5121:../../Source/Kernel/rme_kernel.c ****     if(Prio>=RME_PREEMPT_PRIO_NUM)
 12114              		.loc 1 5121 7
 12115 001c 08309BE5 		ldr	r3, [fp, #8]
 12116 0020 1F0053E3 		cmp	r3, #31
 12117 0024 0100009A 		bls	.L779
5122:../../Source/Kernel/rme_kernel.c ****     {
5123:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5124:../../Source/Kernel/rme_kernel.c **** 
5125:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12118              		.loc 1 5125 16
 12119 0028 CC30E0E3 		mvn	r3, #204
 12120 002c 4C0100EA 		b	.L780
 12121              	.L779:
5126:../../Source/Kernel/rme_kernel.c ****     }
5127:../../Source/Kernel/rme_kernel.c ****     else
5128:../../Source/Kernel/rme_kernel.c ****     {
5129:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5130:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5131:../../Source/Kernel/rme_kernel.c ****     }
5132:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 304


5133:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5134:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12122              		.loc 1 5134 5
 12123 0030 24301BE5 		ldr	r3, [fp, #-36]
 12124 0034 803003E2 		and	r3, r3, #128
 12125 0038 000053E3 		cmp	r3, #0
 12126 003c 1C00001A 		bne	.L781
 12127              		.loc 1 5134 5 is_stmt 0 discriminator 1
 12128 0040 20301BE5 		ldr	r3, [fp, #-32]
 12129 0044 142093E5 		ldr	r2, [r3, #20]
 12130 0048 24301BE5 		ldr	r3, [fp, #-36]
 12131 004c 030052E1 		cmp	r2, r3
 12132 0050 0100008A 		bhi	.L782
 12133              		.loc 1 5134 5 discriminator 3
 12134 0054 0230E0E3 		mvn	r3, #2
 12135              		.loc 1 5134 5
 12136 0058 410100EA 		b	.L780
 12137              	.L782:
 12138              		.loc 1 5134 5 discriminator 4
 12139 005c 24301BE5 		ldr	r3, [fp, #-36]
 12140 0060 8322A0E1 		lsl	r2, r3, #5
 12141 0064 20301BE5 		ldr	r3, [fp, #-32]
 12142 0068 0C3093E5 		ldr	r3, [r3, #12]
 12143 006c 033082E0 		add	r3, r2, r3
 12144 0070 08300BE5 		str	r3, [fp, #-8]
 12145 0074 08301BE5 		ldr	r3, [fp, #-8]
 12146 0078 0300A0E1 		mov	r0, r3
 12147 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12148 0080 10000BE5 		str	r0, [fp, #-16]
 12149              		.loc 1 5134 5 discriminator 1
 12150 0084 10301BE5 		ldr	r3, [fp, #-16]
 12151 0088 FF3803E2 		and	r3, r3, #16711680
 12152 008c 020853E3 		cmp	r3, #131072
 12153 0090 0100001A 		bne	.L783
 12154              		.loc 1 5134 5 discriminator 5
 12155 0094 0830E0E3 		mvn	r3, #8
 12156              		.loc 1 5134 5
 12157 0098 310100EA 		b	.L780
 12158              	.L783:
 12159              		.loc 1 5134 5 discriminator 6
 12160 009c 10301BE5 		ldr	r3, [fp, #-16]
 12161 00a0 233CA0E1 		lsr	r3, r3, #24
 12162 00a4 030053E3 		cmp	r3, #3
 12163 00a8 3F00000A 		beq	.L784
 12164              		.loc 1 5134 5 discriminator 7
 12165 00ac 0130E0E3 		mvn	r3, #1
 12166              		.loc 1 5134 5
 12167 00b0 2B0100EA 		b	.L780
 12168              	.L781:
 12169              		.loc 1 5134 5 discriminator 2
 12170 00b4 24301BE5 		ldr	r3, [fp, #-36]
 12171 00b8 2324A0E1 		lsr	r2, r3, #8
 12172 00bc 20301BE5 		ldr	r3, [fp, #-32]
 12173 00c0 143093E5 		ldr	r3, [r3, #20]
 12174 00c4 030052E1 		cmp	r2, r3
 12175 00c8 0100003A 		bcc	.L785
 12176              		.loc 1 5134 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 305


 12177 00cc 0230E0E3 		mvn	r3, #2
 12178              		.loc 1 5134 5
 12179 00d0 230100EA 		b	.L780
 12180              	.L785:
 12181              		.loc 1 5134 5 discriminator 9
 12182 00d4 24301BE5 		ldr	r3, [fp, #-36]
 12183 00d8 2334A0E1 		lsr	r3, r3, #8
 12184 00dc 8322A0E1 		lsl	r2, r3, #5
 12185 00e0 20301BE5 		ldr	r3, [fp, #-32]
 12186 00e4 0C3093E5 		ldr	r3, [r3, #12]
 12187 00e8 033082E0 		add	r3, r2, r3
 12188 00ec 08300BE5 		str	r3, [fp, #-8]
 12189 00f0 08301BE5 		ldr	r3, [fp, #-8]
 12190 00f4 0300A0E1 		mov	r0, r3
 12191 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12192 00fc 10000BE5 		str	r0, [fp, #-16]
 12193              		.loc 1 5134 5 discriminator 1
 12194 0100 10301BE5 		ldr	r3, [fp, #-16]
 12195 0104 FF3803E2 		and	r3, r3, #16711680
 12196 0108 020853E3 		cmp	r3, #131072
 12197 010c 0100001A 		bne	.L786
 12198              		.loc 1 5134 5 discriminator 10
 12199 0110 0830E0E3 		mvn	r3, #8
 12200              		.loc 1 5134 5
 12201 0114 120100EA 		b	.L780
 12202              	.L786:
 12203              		.loc 1 5134 5 discriminator 11
 12204 0118 10301BE5 		ldr	r3, [fp, #-16]
 12205 011c 233CA0E1 		lsr	r3, r3, #24
 12206 0120 030053E3 		cmp	r3, #3
 12207 0124 0100000A 		beq	.L787
 12208              		.loc 1 5134 5 discriminator 12
 12209 0128 0130E0E3 		mvn	r3, #1
 12210              		.loc 1 5134 5
 12211 012c 0C0100EA 		b	.L780
 12212              	.L787:
 12213              		.loc 1 5134 5 discriminator 13
 12214 0130 24301BE5 		ldr	r3, [fp, #-36]
 12215 0134 7F2003E2 		and	r2, r3, #127
 12216 0138 08301BE5 		ldr	r3, [fp, #-8]
 12217 013c 143093E5 		ldr	r3, [r3, #20]
 12218 0140 030052E1 		cmp	r2, r3
 12219 0144 0100003A 		bcc	.L788
 12220              		.loc 1 5134 5 discriminator 14
 12221 0148 0230E0E3 		mvn	r3, #2
 12222              		.loc 1 5134 5
 12223 014c 040100EA 		b	.L780
 12224              	.L788:
 12225              		.loc 1 5134 5 discriminator 15
 12226 0150 24301BE5 		ldr	r3, [fp, #-36]
 12227 0154 7F3003E2 		and	r3, r3, #127
 12228 0158 8322A0E1 		lsl	r2, r3, #5
 12229 015c 08301BE5 		ldr	r3, [fp, #-8]
 12230 0160 0C3093E5 		ldr	r3, [r3, #12]
 12231 0164 033082E0 		add	r3, r2, r3
 12232 0168 08300BE5 		str	r3, [fp, #-8]
 12233 016c 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 306


 12234 0170 0300A0E1 		mov	r0, r3
 12235 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12236 0178 10000BE5 		str	r0, [fp, #-16]
 12237              		.loc 1 5134 5 discriminator 1
 12238 017c 10301BE5 		ldr	r3, [fp, #-16]
 12239 0180 FF3803E2 		and	r3, r3, #16711680
 12240 0184 020853E3 		cmp	r3, #131072
 12241 0188 0100001A 		bne	.L789
 12242              		.loc 1 5134 5 discriminator 16
 12243 018c 0830E0E3 		mvn	r3, #8
 12244              		.loc 1 5134 5
 12245 0190 F30000EA 		b	.L780
 12246              	.L789:
 12247              		.loc 1 5134 5 discriminator 17
 12248 0194 10301BE5 		ldr	r3, [fp, #-16]
 12249 0198 233CA0E1 		lsr	r3, r3, #24
 12250 019c 030053E3 		cmp	r3, #3
 12251 01a0 0100000A 		beq	.L784
 12252              		.loc 1 5134 5 discriminator 18
 12253 01a4 0130E0E3 		mvn	r3, #1
 12254              		.loc 1 5134 5
 12255 01a8 ED0000EA 		b	.L780
 12256              	.L784:
5135:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5136:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12257              		.loc 1 5136 5 is_stmt 1
 12258 01ac 2C301BE5 		ldr	r3, [fp, #-44]
 12259 01b0 803003E2 		and	r3, r3, #128
 12260 01b4 000053E3 		cmp	r3, #0
 12261 01b8 1C00001A 		bne	.L790
 12262              		.loc 1 5136 5 is_stmt 0 discriminator 1
 12263 01bc 20301BE5 		ldr	r3, [fp, #-32]
 12264 01c0 142093E5 		ldr	r2, [r3, #20]
 12265 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 12266 01c8 030052E1 		cmp	r2, r3
 12267 01cc 0100008A 		bhi	.L791
 12268              		.loc 1 5136 5 discriminator 3
 12269 01d0 0230E0E3 		mvn	r3, #2
 12270              		.loc 1 5136 5
 12271 01d4 E20000EA 		b	.L780
 12272              	.L791:
 12273              		.loc 1 5136 5 discriminator 4
 12274 01d8 2C301BE5 		ldr	r3, [fp, #-44]
 12275 01dc 8322A0E1 		lsl	r2, r3, #5
 12276 01e0 20301BE5 		ldr	r3, [fp, #-32]
 12277 01e4 0C3093E5 		ldr	r3, [r3, #12]
 12278 01e8 033082E0 		add	r3, r2, r3
 12279 01ec 0C300BE5 		str	r3, [fp, #-12]
 12280 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 12281 01f4 0300A0E1 		mov	r0, r3
 12282 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12283 01fc 10000BE5 		str	r0, [fp, #-16]
 12284              		.loc 1 5136 5 discriminator 1
 12285 0200 10301BE5 		ldr	r3, [fp, #-16]
 12286 0204 FF3803E2 		and	r3, r3, #16711680
 12287 0208 020853E3 		cmp	r3, #131072
 12288 020c 0100001A 		bne	.L792
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 307


 12289              		.loc 1 5136 5 discriminator 5
 12290 0210 0830E0E3 		mvn	r3, #8
 12291              		.loc 1 5136 5
 12292 0214 D20000EA 		b	.L780
 12293              	.L792:
 12294              		.loc 1 5136 5 discriminator 6
 12295 0218 10301BE5 		ldr	r3, [fp, #-16]
 12296 021c 233CA0E1 		lsr	r3, r3, #24
 12297 0220 050053E3 		cmp	r3, #5
 12298 0224 3F00000A 		beq	.L793
 12299              		.loc 1 5136 5 discriminator 7
 12300 0228 0130E0E3 		mvn	r3, #1
 12301              		.loc 1 5136 5
 12302 022c CC0000EA 		b	.L780
 12303              	.L790:
 12304              		.loc 1 5136 5 discriminator 2
 12305 0230 2C301BE5 		ldr	r3, [fp, #-44]
 12306 0234 2324A0E1 		lsr	r2, r3, #8
 12307 0238 20301BE5 		ldr	r3, [fp, #-32]
 12308 023c 143093E5 		ldr	r3, [r3, #20]
 12309 0240 030052E1 		cmp	r2, r3
 12310 0244 0100003A 		bcc	.L794
 12311              		.loc 1 5136 5 discriminator 8
 12312 0248 0230E0E3 		mvn	r3, #2
 12313              		.loc 1 5136 5
 12314 024c C40000EA 		b	.L780
 12315              	.L794:
 12316              		.loc 1 5136 5 discriminator 9
 12317 0250 2C301BE5 		ldr	r3, [fp, #-44]
 12318 0254 2334A0E1 		lsr	r3, r3, #8
 12319 0258 8322A0E1 		lsl	r2, r3, #5
 12320 025c 20301BE5 		ldr	r3, [fp, #-32]
 12321 0260 0C3093E5 		ldr	r3, [r3, #12]
 12322 0264 033082E0 		add	r3, r2, r3
 12323 0268 0C300BE5 		str	r3, [fp, #-12]
 12324 026c 0C301BE5 		ldr	r3, [fp, #-12]
 12325 0270 0300A0E1 		mov	r0, r3
 12326 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12327 0278 10000BE5 		str	r0, [fp, #-16]
 12328              		.loc 1 5136 5 discriminator 1
 12329 027c 10301BE5 		ldr	r3, [fp, #-16]
 12330 0280 FF3803E2 		and	r3, r3, #16711680
 12331 0284 020853E3 		cmp	r3, #131072
 12332 0288 0100001A 		bne	.L795
 12333              		.loc 1 5136 5 discriminator 10
 12334 028c 0830E0E3 		mvn	r3, #8
 12335              		.loc 1 5136 5
 12336 0290 B30000EA 		b	.L780
 12337              	.L795:
 12338              		.loc 1 5136 5 discriminator 11
 12339 0294 10301BE5 		ldr	r3, [fp, #-16]
 12340 0298 233CA0E1 		lsr	r3, r3, #24
 12341 029c 030053E3 		cmp	r3, #3
 12342 02a0 0100000A 		beq	.L796
 12343              		.loc 1 5136 5 discriminator 12
 12344 02a4 0130E0E3 		mvn	r3, #1
 12345              		.loc 1 5136 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 308


 12346 02a8 AD0000EA 		b	.L780
 12347              	.L796:
 12348              		.loc 1 5136 5 discriminator 13
 12349 02ac 2C301BE5 		ldr	r3, [fp, #-44]
 12350 02b0 7F2003E2 		and	r2, r3, #127
 12351 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 12352 02b8 143093E5 		ldr	r3, [r3, #20]
 12353 02bc 030052E1 		cmp	r2, r3
 12354 02c0 0100003A 		bcc	.L797
 12355              		.loc 1 5136 5 discriminator 14
 12356 02c4 0230E0E3 		mvn	r3, #2
 12357              		.loc 1 5136 5
 12358 02c8 A50000EA 		b	.L780
 12359              	.L797:
 12360              		.loc 1 5136 5 discriminator 15
 12361 02cc 2C301BE5 		ldr	r3, [fp, #-44]
 12362 02d0 7F3003E2 		and	r3, r3, #127
 12363 02d4 8322A0E1 		lsl	r2, r3, #5
 12364 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 12365 02dc 0C3093E5 		ldr	r3, [r3, #12]
 12366 02e0 033082E0 		add	r3, r2, r3
 12367 02e4 0C300BE5 		str	r3, [fp, #-12]
 12368 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 12369 02ec 0300A0E1 		mov	r0, r3
 12370 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12371 02f4 10000BE5 		str	r0, [fp, #-16]
 12372              		.loc 1 5136 5 discriminator 1
 12373 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12374 02fc FF3803E2 		and	r3, r3, #16711680
 12375 0300 020853E3 		cmp	r3, #131072
 12376 0304 0100001A 		bne	.L798
 12377              		.loc 1 5136 5 discriminator 16
 12378 0308 0830E0E3 		mvn	r3, #8
 12379              		.loc 1 5136 5
 12380 030c 940000EA 		b	.L780
 12381              	.L798:
 12382              		.loc 1 5136 5 discriminator 17
 12383 0310 10301BE5 		ldr	r3, [fp, #-16]
 12384 0314 233CA0E1 		lsr	r3, r3, #24
 12385 0318 050053E3 		cmp	r3, #5
 12386 031c 0100000A 		beq	.L793
 12387              		.loc 1 5136 5 discriminator 18
 12388 0320 0130E0E3 		mvn	r3, #1
 12389              		.loc 1 5136 5
 12390 0324 8E0000EA 		b	.L780
 12391              	.L793:
5137:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);   
5138:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5139:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 12392              		.loc 1 5139 5 is_stmt 1
 12393 0328 08301BE5 		ldr	r3, [fp, #-8]
 12394 032c 083093E5 		ldr	r3, [r3, #8]
 12395 0330 013003E2 		and	r3, r3, #1
 12396 0334 000053E3 		cmp	r3, #0
 12397 0338 0100001A 		bne	.L799
 12398              		.loc 1 5139 5 is_stmt 0 discriminator 1
 12399 033c 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 309


 12400              		.loc 1 5139 5
 12401 0340 870000EA 		b	.L780
 12402              	.L799:
5140:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 12403              		.loc 1 5140 5 is_stmt 1
 12404 0344 0C301BE5 		ldr	r3, [fp, #-12]
 12405 0348 083093E5 		ldr	r3, [r3, #8]
 12406 034c 023003E2 		and	r3, r3, #2
 12407 0350 000053E3 		cmp	r3, #0
 12408 0354 0100001A 		bne	.L800
 12409              		.loc 1 5140 5 is_stmt 0 discriminator 1
 12410 0358 0630E0E3 		mvn	r3, #6
 12411              		.loc 1 5140 5
 12412 035c 800000EA 		b	.L780
 12413              	.L800:
5141:../../Source/Kernel/rme_kernel.c ****     
5142:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5143:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 12414              		.loc 1 5143 5 is_stmt 1
 12415 0360 08301BE5 		ldr	r3, [fp, #-8]
 12416 0364 142093E5 		ldr	r2, [r3, #20]
 12417 0368 28301BE5 		ldr	r3, [fp, #-40]
 12418 036c 030052E1 		cmp	r2, r3
 12419 0370 0100008A 		bhi	.L801
 12420              		.loc 1 5143 5 is_stmt 0 discriminator 1
 12421 0374 0230E0E3 		mvn	r3, #2
 12422              		.loc 1 5143 5
 12423 0378 790000EA 		b	.L780
 12424              	.L801:
 12425              		.loc 1 5143 5 discriminator 2
 12426 037c 28301BE5 		ldr	r3, [fp, #-40]
 12427 0380 8322A0E1 		lsl	r2, r3, #5
 12428 0384 08301BE5 		ldr	r3, [fp, #-8]
 12429 0388 0C3093E5 		ldr	r3, [r3, #12]
 12430 038c 033082E0 		add	r3, r2, r3
 12431 0390 14300BE5 		str	r3, [fp, #-20]
5144:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5145:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 12432              		.loc 1 5145 5 is_stmt 1
 12433 0394 14301BE5 		ldr	r3, [fp, #-20]
 12434 0398 0128A0E3 		mov	r2, #65536
 12435 039c 0010A0E3 		mov	r1, #0
 12436 03a0 0300A0E1 		mov	r0, r3
 12437 03a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12438 03a8 0030A0E1 		mov	r3, r0
 12439              		.loc 1 5145 5 is_stmt 0 discriminator 1
 12440 03ac 000053E3 		cmp	r3, #0
 12441 03b0 0100001A 		bne	.L802
 12442 03b4 0430E0E3 		mvn	r3, #4
 12443              		.loc 1 5145 5
 12444 03b8 690000EA 		b	.L780
 12445              	.L802:
 12446              		.loc 1 5145 5 discriminator 2
 12447 03bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 12448 03c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 12449 03c4 002093E5 		ldr	r2, [r3]
 12450 03c8 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 310


 12451 03cc 102083E5 		str	r2, [r3, #16]
5146:../../Source/Kernel/rme_kernel.c ****      
5147:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5148:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_THD_SIZE(0U))!=0)
 12452              		.loc 1 5148 8 is_stmt 1
 12453 03d0 9C10A0E3 		mov	r1, #156
 12454 03d4 04009BE5 		ldr	r0, [fp, #4]
 12455 03d8 FEFFFFEB 		bl	_RME_Kot_Mark
 12456 03dc 0030A0E1 		mov	r3, r0
 12457              		.loc 1 5148 7 discriminator 1
 12458 03e0 000053E3 		cmp	r3, #0
 12459 03e4 0500000A 		beq	.L803
5149:../../Source/Kernel/rme_kernel.c ****     {
5150:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5151:../../Source/Kernel/rme_kernel.c **** 
5152:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 12460              		.loc 1 5152 9
 12461 03e8 14301BE5 		ldr	r3, [fp, #-20]
 12462 03ec 0010A0E3 		mov	r1, #0
 12463 03f0 0300A0E1 		mov	r0, r3
 12464 03f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5153:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 12465              		.loc 1 5153 16
 12466 03f8 0330E0E3 		mvn	r3, #3
 12467 03fc 580000EA 		b	.L780
 12468              	.L803:
5154:../../Source/Kernel/rme_kernel.c ****     }
5155:../../Source/Kernel/rme_kernel.c ****     else
5156:../../Source/Kernel/rme_kernel.c ****     {
5157:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5158:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5159:../../Source/Kernel/rme_kernel.c ****     }
5160:../../Source/Kernel/rme_kernel.c **** 
5161:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5162:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 12469              		.loc 1 5162 11
 12470 0400 04309BE5 		ldr	r3, [fp, #4]
 12471 0404 18300BE5 		str	r3, [fp, #-24]
5163:../../Source/Kernel/rme_kernel.c ****     /* The TID of these threads are by default taken care of by the kernel */
5164:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 12472              		.loc 1 5164 22
 12473 0408 18301BE5 		ldr	r3, [fp, #-24]
 12474 040c 0020A0E3 		mov	r2, #0
 12475 0410 102083E5 		str	r2, [r3, #16]
5165:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=RME_THD_INIT_TIME;
 12476              		.loc 1 5165 24
 12477 0414 18301BE5 		ldr	r3, [fp, #-24]
 12478 0418 0221E0E3 		mvn	r2, #-2147483648
 12479 041c 182083E5 		str	r2, [r3, #24]
5166:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_READY;
 12480              		.loc 1 5166 24
 12481 0420 18301BE5 		ldr	r3, [fp, #-24]
 12482 0424 0020A0E3 		mov	r2, #0
 12483 0428 1C2083E5 		str	r2, [r3, #28]
5167:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 12484              		.loc 1 5167 14
 12485 042c 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 311


 12486 0430 003093E5 		ldr	r3, [r3]
 12487 0434 7330FFE6 		uxth	r3, r3
 12488 0438 000053E3 		cmp	r3, #0
 12489 043c 0200000A 		beq	.L804
 12490              		.loc 1 5167 14 is_stmt 0 discriminator 1
 12491 0440 0C301BE5 		ldr	r3, [fp, #-12]
 12492 0444 043093E5 		ldr	r3, [r3, #4]
 12493 0448 000000EA 		b	.L805
 12494              	.L804:
 12495              		.loc 1 5167 14 discriminator 2
 12496 044c 0C301BE5 		ldr	r3, [fp, #-12]
 12497              	.L805:
 12498              		.loc 1 5167 13 is_stmt 1 discriminator 4
 12499 0450 1C300BE5 		str	r3, [fp, #-28]
5168:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 12500              		.loc 1 5168 22
 12501 0454 18301BE5 		ldr	r3, [fp, #-24]
 12502 0458 1C201BE5 		ldr	r2, [fp, #-28]
 12503 045c 2C2083E5 		str	r2, [r3, #44]
5169:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 12504              		.loc 1 5169 25
 12505 0460 18301BE5 		ldr	r3, [fp, #-24]
 12506 0464 0020A0E3 		mov	r2, #0
 12507 0468 282083E5 		str	r2, [r3, #40]
5170:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 12508              		.loc 1 5170 23
 12509 046c 18301BE5 		ldr	r3, [fp, #-24]
 12510 0470 08209BE5 		ldr	r2, [fp, #8]
 12511 0474 202083E5 		str	r2, [r3, #32]
5171:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=RME_PREEMPT_PRIO_NUM-1U;
 12512              		.loc 1 5171 27
 12513 0478 18301BE5 		ldr	r3, [fp, #-24]
 12514 047c 1F20A0E3 		mov	r2, #31
 12515 0480 242083E5 		str	r2, [r3, #36]
5172:../../Source/Kernel/rme_kernel.c ****     /* Set scheduler reference to 1 so cannot be free */
5173:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=1U;
 12516              		.loc 1 5173 28
 12517 0484 18301BE5 		ldr	r3, [fp, #-24]
 12518 0488 0120A0E3 		mov	r2, #1
 12519 048c 302083E5 		str	r2, [r3, #48]
5174:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 12520              		.loc 1 5174 28
 12521 0490 18301BE5 		ldr	r3, [fp, #-24]
 12522 0494 0020A0E3 		mov	r2, #0
 12523 0498 382083E5 		str	r2, [r3, #56]
5175:../../Source/Kernel/rme_kernel.c ****     /* Bind the thread to the current CPU */
5176:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=Local;
 12524              		.loc 1 5176 24
 12525 049c 18301BE5 		ldr	r3, [fp, #-24]
 12526 04a0 0C209BE5 		ldr	r2, [fp, #12]
 12527 04a4 142083E5 		str	r2, [r3, #20]
5177:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5178:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 12528              		.loc 1 5178 5
 12529 04a8 18301BE5 		ldr	r3, [fp, #-24]
 12530 04ac 083083E2 		add	r3, r3, #8
 12531 04b0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 312


 12532 04b4 FEFFFFEB 		bl	_RME_List_Crt
5179:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 12533              		.loc 1 5179 5
 12534 04b8 18301BE5 		ldr	r3, [fp, #-24]
 12535 04bc 3C3083E2 		add	r3, r3, #60
 12536 04c0 0300A0E1 		mov	r0, r3
 12537 04c4 FEFFFFEB 		bl	_RME_List_Crt
5180:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this will never be a hypervisor thread */
5181:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Hyp_Attr=0U;
 12538              		.loc 1 5181 25
 12539 04c8 18301BE5 		ldr	r3, [fp, #-24]
 12540 04cc 0020A0E3 		mov	r2, #0
 12541 04d0 442083E5 		str	r2, [r3, #68]
5182:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 12542              		.loc 1 5182 48
 12543 04d4 04309BE5 		ldr	r3, [fp, #4]
 12544 04d8 583083E2 		add	r3, r3, #88
 12545              		.loc 1 5182 21
 12546 04dc 0320A0E1 		mov	r2, r3
 12547              		.loc 1 5182 20
 12548 04e0 18301BE5 		ldr	r3, [fp, #-24]
 12549 04e4 482083E5 		str	r2, [r3, #72]
5183:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5184:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 12550              		.loc 1 5184 5
 12551 04e8 18301BE5 		ldr	r3, [fp, #-24]
 12552 04ec 4C3083E2 		add	r3, r3, #76
 12553 04f0 0300A0E1 		mov	r0, r3
 12554 04f4 FEFFFFEB 		bl	_RME_List_Crt
5185:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 12555              		.loc 1 5185 29
 12556 04f8 18301BE5 		ldr	r3, [fp, #-24]
 12557 04fc 0020A0E3 		mov	r2, #0
 12558 0500 542083E5 		str	r2, [r3, #84]
5186:../../Source/Kernel/rme_kernel.c ****     
5187:../../Source/Kernel/rme_kernel.c ****     /* Info init */
5188:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=1U;
 12559              		.loc 1 5188 27
 12560 0504 14301BE5 		ldr	r3, [fp, #-20]
 12561 0508 0120A0E3 		mov	r2, #1
 12562 050c 042083E5 		str	r2, [r3, #4]
5189:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 12563              		.loc 1 5189 25
 12564 0510 14301BE5 		ldr	r3, [fp, #-20]
 12565 0514 04209BE5 		ldr	r2, [fp, #4]
 12566 0518 0C2083E5 		str	r2, [r3, #12]
5190:../../Source/Kernel/rme_kernel.c ****     /* This can only be a parent, and not a child, and cannot be freed. Additionally,
5191:../../Source/Kernel/rme_kernel.c ****      * this should not be blocked on any endpoint. Any attempt to block this thread will fail.
5192:../../Source/Kernel/rme_kernel.c ****      * Setting execution information for this is also prohibited. */
5193:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_SCHED_PRIO|RME_THD_FLAG_SCHED_PARENT|
 12567              		.loc 1 5193 23
 12568 051c 14301BE5 		ldr	r3, [fp, #-20]
 12569 0520 7B2FA0E3 		mov	r2, #492
 12570 0524 082083E5 		str	r2, [r3, #8]
5194:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_XFER_DST|RME_THD_FLAG_XFER_SRC|
5195:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_SCHED_RCV|RME_THD_FLAG_SWT;
5196:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 313


5197:../../Source/Kernel/rme_kernel.c ****     /* Referece process */
5198:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 12571              		.loc 1 5198 5
 12572 0528 1C301BE5 		ldr	r3, [fp, #-28]
 12573 052c 043083E2 		add	r3, r3, #4
 12574 0530 0110A0E3 		mov	r1, #1
 12575 0534 0300A0E1 		mov	r0, r3
 12576 0538 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5199:../../Source/Kernel/rme_kernel.c ****     
5200:../../Source/Kernel/rme_kernel.c ****     /* Insert this into the runqueue, and set current thread to it */
5201:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Ins(Thread);
 12577              		.loc 1 5201 5
 12578 053c 18001BE5 		ldr	r0, [fp, #-24]
 12579 0540 FEFFFFEB 		bl	_RME_Run_Ins
5202:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thread;
 12580              		.loc 1 5202 19
 12581 0544 0C309BE5 		ldr	r3, [fp, #12]
 12582 0548 18201BE5 		ldr	r2, [fp, #-24]
 12583 054c 042083E5 		str	r2, [r3, #4]
5203:../../Source/Kernel/rme_kernel.c **** 
5204:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5205:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 12584              		.loc 1 5205 5
 12585 0550 14301BE5 		ldr	r3, [fp, #-20]
 12586 0554 0614A0E3 		mov	r1, #100663296
 12587 0558 0300A0E1 		mov	r0, r3
 12588 055c FEFFFFEB 		bl	__RME_A7A_Write_Release
5206:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5207:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5208:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5209:../../Source/Kernel/rme_kernel.c **** 
5210:../../Source/Kernel/rme_kernel.c ****     return 0;
 12589              		.loc 1 5210 12
 12590 0560 0030A0E3 		mov	r3, #0
 12591              	.L780:
5211:../../Source/Kernel/rme_kernel.c **** }
 12592              		.loc 1 5211 1
 12593 0564 0300A0E1 		mov	r0, r3
 12594 0568 04D04BE2 		sub	sp, fp, #4
 12595              		.cfi_def_cfa 13, 8
 12596              		@ sp needed
 12597 056c 0088BDE8 		pop	{fp, pc}
 12598              		.cfi_endproc
 12599              	.LFE55:
 12601              		.section	.rodata
 12602 0073 00       		.align	2
 12603              	.LC7:
 12604 0074 0D0A6D61 		.ascii	"\015\012maximum priority relationship is not correc"
 12604      78696D75 
 12604      6D207072 
 12604      696F7269 
 12604      74792072 
 12605 00a1 7400     		.ascii	"t\000"
 12606 00a3 00       		.align	2
 12607              	.LC8:
 12608 00a4 0D0A5F52 		.ascii	"\015\012_RME_Kot_Mark(Vaddr,Size)\000"
 12608      4D455F4B 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 314


 12608      6F745F4D 
 12608      61726B28 
 12608      56616464 
 12609              		.section	.text._RME_Thd_Crt,"ax",%progbits
 12610              		.align	2
 12611              		.syntax unified
 12612              		.arm
 12614              	_RME_Thd_Crt:
 12615              	.LFB56:
5212:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Boot_Crt ********************************************/
5213:../../Source/Kernel/rme_kernel.c **** 
5214:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Crt ******************************************************
5215:../../Source/Kernel/rme_kernel.c **** Description : Create a thread. A thread is the minimal kernel-level execution
5216:../../Source/Kernel/rme_kernel.c ****               unit.
5217:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5218:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5219:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5220:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
5221:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5222:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5223:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5224:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5225:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5226:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5227:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio_Max - The maximum priority allowed for this
5228:../../Source/Kernel/rme_kernel.c ****                                    thread. Once set, this cannot be changed.
5229:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
5230:../../Source/Kernel/rme_kernel.c ****                                 thread kernel object.
5231:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Attr - The context attributes.
5232:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Hyp - Whether this is a hypervisor thread.
5233:../../Source/Kernel/rme_kernel.c **** Output      : None.
5234:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5235:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5236:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Crt(struct RME_Cap_Cpt* Cpt,
5237:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5238:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
5239:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
5240:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5241:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Prio_Max,
5242:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
5243:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Attr,
5244:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Hyp)
5245:../../Source/Kernel/rme_kernel.c **** {
 12616              		.loc 1 5245 1
 12617              		.cfi_startproc
 12618              		@ args = 20, pretend = 0, frame = 56
 12619              		@ frame_needed = 1, uses_anonymous_args = 0
 12620 0000 00482DE9 		push	{fp, lr}
 12621              		.cfi_def_cfa_offset 8
 12622              		.cfi_offset 11, -8
 12623              		.cfi_offset 14, -4
 12624 0004 04B08DE2 		add	fp, sp, #4
 12625              		.cfi_def_cfa 11, 4
 12626 0008 38D04DE2 		sub	sp, sp, #56
 12627 000c 30000BE5 		str	r0, [fp, #-48]
 12628 0010 34100BE5 		str	r1, [fp, #-52]
 12629 0014 38200BE5 		str	r2, [fp, #-56]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 315


 12630 0018 3C300BE5 		str	r3, [fp, #-60]
5246:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5247:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5248:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
5249:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5250:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5251:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5252:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5253:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
5254:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
5255:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCpt addr ");
5256:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H((rme_ptr_t)Cpt);
5257:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Cpt ");
5258:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Cpt);
5259:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Kom ");
5260:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Kom);
5261:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd ");
5262:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
5263:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Prc ");
5264:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Prc);
5265:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nPrio_Max ");
5266:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Prio_Max);
5267:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nRaddr ");
5268:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Raddr);
5269:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nAttr ");
5270:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Attr);
5271:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nIs_Hyp ");
5272:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Is_Hyp);*/
5273:../../Source/Kernel/rme_kernel.c ****      
5274:../../Source/Kernel/rme_kernel.c ****     
5275:../../Source/Kernel/rme_kernel.c ****     /* See if the maximum priority relationship is correct - a thread
5276:../../Source/Kernel/rme_kernel.c ****      * can never create a thread with higher maximum priority */
5277:../../Source/Kernel/rme_kernel.c ****     if((RME_CPU_LOCAL()->Thd_Cur)->Sched.Prio_Max<Prio_Max)
 12631              		.loc 1 5277 24
 12632 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 12633 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 12634 0024 043093E5 		ldr	r3, [r3, #4]
 12635              		.loc 1 5277 41
 12636 0028 243093E5 		ldr	r3, [r3, #36]
 12637              		.loc 1 5277 7
 12638 002c 08209BE5 		ldr	r2, [fp, #8]
 12639 0030 030052E1 		cmp	r2, r3
 12640 0034 0400009A 		bls	.L807
5278:../../Source/Kernel/rme_kernel.c ****     {
5279:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5280:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nmaximum priority relationship is not correct");
 12641              		.loc 1 5280 9
 12642 0038 000000E3 		movw	r0, #:lower16:.LC7
 12643 003c 000040E3 		movt	r0, #:upper16:.LC7
 12644 0040 FEFFFFEB 		bl	RME_Str_Print
5281:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12645              		.loc 1 5281 16
 12646 0044 CC30E0E3 		mvn	r3, #204
 12647 0048 EA0100EA 		b	.L808
 12648              	.L807:
5282:../../Source/Kernel/rme_kernel.c ****     }
5283:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 316


5284:../../Source/Kernel/rme_kernel.c ****     {
5285:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5286:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5287:../../Source/Kernel/rme_kernel.c ****     }
5288:../../Source/Kernel/rme_kernel.c **** 
5289:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5290:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12649              		.loc 1 5290 5
 12650 004c 34301BE5 		ldr	r3, [fp, #-52]
 12651 0050 803003E2 		and	r3, r3, #128
 12652 0054 000053E3 		cmp	r3, #0
 12653 0058 1C00001A 		bne	.L809
 12654              		.loc 1 5290 5 is_stmt 0 discriminator 1
 12655 005c 30301BE5 		ldr	r3, [fp, #-48]
 12656 0060 142093E5 		ldr	r2, [r3, #20]
 12657 0064 34301BE5 		ldr	r3, [fp, #-52]
 12658 0068 030052E1 		cmp	r2, r3
 12659 006c 0100008A 		bhi	.L810
 12660              		.loc 1 5290 5 discriminator 3
 12661 0070 0230E0E3 		mvn	r3, #2
 12662              		.loc 1 5290 5
 12663 0074 DF0100EA 		b	.L808
 12664              	.L810:
 12665              		.loc 1 5290 5 discriminator 4
 12666 0078 34301BE5 		ldr	r3, [fp, #-52]
 12667 007c 8322A0E1 		lsl	r2, r3, #5
 12668 0080 30301BE5 		ldr	r3, [fp, #-48]
 12669 0084 0C3093E5 		ldr	r3, [r3, #12]
 12670 0088 033082E0 		add	r3, r2, r3
 12671 008c 08300BE5 		str	r3, [fp, #-8]
 12672 0090 08301BE5 		ldr	r3, [fp, #-8]
 12673 0094 0300A0E1 		mov	r0, r3
 12674 0098 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12675 009c 18000BE5 		str	r0, [fp, #-24]
 12676              		.loc 1 5290 5 discriminator 1
 12677 00a0 18301BE5 		ldr	r3, [fp, #-24]
 12678 00a4 FF3803E2 		and	r3, r3, #16711680
 12679 00a8 020853E3 		cmp	r3, #131072
 12680 00ac 0100001A 		bne	.L811
 12681              		.loc 1 5290 5 discriminator 5
 12682 00b0 0830E0E3 		mvn	r3, #8
 12683              		.loc 1 5290 5
 12684 00b4 CF0100EA 		b	.L808
 12685              	.L811:
 12686              		.loc 1 5290 5 discriminator 6
 12687 00b8 18301BE5 		ldr	r3, [fp, #-24]
 12688 00bc 233CA0E1 		lsr	r3, r3, #24
 12689 00c0 030053E3 		cmp	r3, #3
 12690 00c4 3F00000A 		beq	.L812
 12691              		.loc 1 5290 5 discriminator 7
 12692 00c8 0130E0E3 		mvn	r3, #1
 12693              		.loc 1 5290 5
 12694 00cc C90100EA 		b	.L808
 12695              	.L809:
 12696              		.loc 1 5290 5 discriminator 2
 12697 00d0 34301BE5 		ldr	r3, [fp, #-52]
 12698 00d4 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 317


 12699 00d8 30301BE5 		ldr	r3, [fp, #-48]
 12700 00dc 143093E5 		ldr	r3, [r3, #20]
 12701 00e0 030052E1 		cmp	r2, r3
 12702 00e4 0100003A 		bcc	.L813
 12703              		.loc 1 5290 5 discriminator 8
 12704 00e8 0230E0E3 		mvn	r3, #2
 12705              		.loc 1 5290 5
 12706 00ec C10100EA 		b	.L808
 12707              	.L813:
 12708              		.loc 1 5290 5 discriminator 9
 12709 00f0 34301BE5 		ldr	r3, [fp, #-52]
 12710 00f4 2334A0E1 		lsr	r3, r3, #8
 12711 00f8 8322A0E1 		lsl	r2, r3, #5
 12712 00fc 30301BE5 		ldr	r3, [fp, #-48]
 12713 0100 0C3093E5 		ldr	r3, [r3, #12]
 12714 0104 033082E0 		add	r3, r2, r3
 12715 0108 08300BE5 		str	r3, [fp, #-8]
 12716 010c 08301BE5 		ldr	r3, [fp, #-8]
 12717 0110 0300A0E1 		mov	r0, r3
 12718 0114 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12719 0118 18000BE5 		str	r0, [fp, #-24]
 12720              		.loc 1 5290 5 discriminator 1
 12721 011c 18301BE5 		ldr	r3, [fp, #-24]
 12722 0120 FF3803E2 		and	r3, r3, #16711680
 12723 0124 020853E3 		cmp	r3, #131072
 12724 0128 0100001A 		bne	.L814
 12725              		.loc 1 5290 5 discriminator 10
 12726 012c 0830E0E3 		mvn	r3, #8
 12727              		.loc 1 5290 5
 12728 0130 B00100EA 		b	.L808
 12729              	.L814:
 12730              		.loc 1 5290 5 discriminator 11
 12731 0134 18301BE5 		ldr	r3, [fp, #-24]
 12732 0138 233CA0E1 		lsr	r3, r3, #24
 12733 013c 030053E3 		cmp	r3, #3
 12734 0140 0100000A 		beq	.L815
 12735              		.loc 1 5290 5 discriminator 12
 12736 0144 0130E0E3 		mvn	r3, #1
 12737              		.loc 1 5290 5
 12738 0148 AA0100EA 		b	.L808
 12739              	.L815:
 12740              		.loc 1 5290 5 discriminator 13
 12741 014c 34301BE5 		ldr	r3, [fp, #-52]
 12742 0150 7F2003E2 		and	r2, r3, #127
 12743 0154 08301BE5 		ldr	r3, [fp, #-8]
 12744 0158 143093E5 		ldr	r3, [r3, #20]
 12745 015c 030052E1 		cmp	r2, r3
 12746 0160 0100003A 		bcc	.L816
 12747              		.loc 1 5290 5 discriminator 14
 12748 0164 0230E0E3 		mvn	r3, #2
 12749              		.loc 1 5290 5
 12750 0168 A20100EA 		b	.L808
 12751              	.L816:
 12752              		.loc 1 5290 5 discriminator 15
 12753 016c 34301BE5 		ldr	r3, [fp, #-52]
 12754 0170 7F3003E2 		and	r3, r3, #127
 12755 0174 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 318


 12756 0178 08301BE5 		ldr	r3, [fp, #-8]
 12757 017c 0C3093E5 		ldr	r3, [r3, #12]
 12758 0180 033082E0 		add	r3, r2, r3
 12759 0184 08300BE5 		str	r3, [fp, #-8]
 12760 0188 08301BE5 		ldr	r3, [fp, #-8]
 12761 018c 0300A0E1 		mov	r0, r3
 12762 0190 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12763 0194 18000BE5 		str	r0, [fp, #-24]
 12764              		.loc 1 5290 5 discriminator 1
 12765 0198 18301BE5 		ldr	r3, [fp, #-24]
 12766 019c FF3803E2 		and	r3, r3, #16711680
 12767 01a0 020853E3 		cmp	r3, #131072
 12768 01a4 0100001A 		bne	.L817
 12769              		.loc 1 5290 5 discriminator 16
 12770 01a8 0830E0E3 		mvn	r3, #8
 12771              		.loc 1 5290 5
 12772 01ac 910100EA 		b	.L808
 12773              	.L817:
 12774              		.loc 1 5290 5 discriminator 17
 12775 01b0 18301BE5 		ldr	r3, [fp, #-24]
 12776 01b4 233CA0E1 		lsr	r3, r3, #24
 12777 01b8 030053E3 		cmp	r3, #3
 12778 01bc 0100000A 		beq	.L812
 12779              		.loc 1 5290 5 discriminator 18
 12780 01c0 0130E0E3 		mvn	r3, #1
 12781              		.loc 1 5290 5
 12782 01c4 8B0100EA 		b	.L808
 12783              	.L812:
5291:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5292:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 1");
5293:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 12784              		.loc 1 5293 5 is_stmt 1
 12785 01c8 38301BE5 		ldr	r3, [fp, #-56]
 12786 01cc 803003E2 		and	r3, r3, #128
 12787 01d0 000053E3 		cmp	r3, #0
 12788 01d4 1C00001A 		bne	.L818
 12789              		.loc 1 5293 5 is_stmt 0 discriminator 1
 12790 01d8 30301BE5 		ldr	r3, [fp, #-48]
 12791 01dc 142093E5 		ldr	r2, [r3, #20]
 12792 01e0 38301BE5 		ldr	r3, [fp, #-56]
 12793 01e4 030052E1 		cmp	r2, r3
 12794 01e8 0100008A 		bhi	.L819
 12795              		.loc 1 5293 5 discriminator 3
 12796 01ec 0230E0E3 		mvn	r3, #2
 12797              		.loc 1 5293 5
 12798 01f0 800100EA 		b	.L808
 12799              	.L819:
 12800              		.loc 1 5293 5 discriminator 4
 12801 01f4 38301BE5 		ldr	r3, [fp, #-56]
 12802 01f8 8322A0E1 		lsl	r2, r3, #5
 12803 01fc 30301BE5 		ldr	r3, [fp, #-48]
 12804 0200 0C3093E5 		ldr	r3, [r3, #12]
 12805 0204 033082E0 		add	r3, r2, r3
 12806 0208 10300BE5 		str	r3, [fp, #-16]
 12807 020c 10301BE5 		ldr	r3, [fp, #-16]
 12808 0210 0300A0E1 		mov	r0, r3
 12809 0214 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 319


 12810 0218 18000BE5 		str	r0, [fp, #-24]
 12811              		.loc 1 5293 5 discriminator 1
 12812 021c 18301BE5 		ldr	r3, [fp, #-24]
 12813 0220 FF3803E2 		and	r3, r3, #16711680
 12814 0224 020853E3 		cmp	r3, #131072
 12815 0228 0100001A 		bne	.L820
 12816              		.loc 1 5293 5 discriminator 5
 12817 022c 0830E0E3 		mvn	r3, #8
 12818              		.loc 1 5293 5
 12819 0230 700100EA 		b	.L808
 12820              	.L820:
 12821              		.loc 1 5293 5 discriminator 6
 12822 0234 18301BE5 		ldr	r3, [fp, #-24]
 12823 0238 233CA0E1 		lsr	r3, r3, #24
 12824 023c 020053E3 		cmp	r3, #2
 12825 0240 3F00000A 		beq	.L821
 12826              		.loc 1 5293 5 discriminator 7
 12827 0244 0130E0E3 		mvn	r3, #1
 12828              		.loc 1 5293 5
 12829 0248 6A0100EA 		b	.L808
 12830              	.L818:
 12831              		.loc 1 5293 5 discriminator 2
 12832 024c 38301BE5 		ldr	r3, [fp, #-56]
 12833 0250 2324A0E1 		lsr	r2, r3, #8
 12834 0254 30301BE5 		ldr	r3, [fp, #-48]
 12835 0258 143093E5 		ldr	r3, [r3, #20]
 12836 025c 030052E1 		cmp	r2, r3
 12837 0260 0100003A 		bcc	.L822
 12838              		.loc 1 5293 5 discriminator 8
 12839 0264 0230E0E3 		mvn	r3, #2
 12840              		.loc 1 5293 5
 12841 0268 620100EA 		b	.L808
 12842              	.L822:
 12843              		.loc 1 5293 5 discriminator 9
 12844 026c 38301BE5 		ldr	r3, [fp, #-56]
 12845 0270 2334A0E1 		lsr	r3, r3, #8
 12846 0274 8322A0E1 		lsl	r2, r3, #5
 12847 0278 30301BE5 		ldr	r3, [fp, #-48]
 12848 027c 0C3093E5 		ldr	r3, [r3, #12]
 12849 0280 033082E0 		add	r3, r2, r3
 12850 0284 10300BE5 		str	r3, [fp, #-16]
 12851 0288 10301BE5 		ldr	r3, [fp, #-16]
 12852 028c 0300A0E1 		mov	r0, r3
 12853 0290 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12854 0294 18000BE5 		str	r0, [fp, #-24]
 12855              		.loc 1 5293 5 discriminator 1
 12856 0298 18301BE5 		ldr	r3, [fp, #-24]
 12857 029c FF3803E2 		and	r3, r3, #16711680
 12858 02a0 020853E3 		cmp	r3, #131072
 12859 02a4 0100001A 		bne	.L823
 12860              		.loc 1 5293 5 discriminator 10
 12861 02a8 0830E0E3 		mvn	r3, #8
 12862              		.loc 1 5293 5
 12863 02ac 510100EA 		b	.L808
 12864              	.L823:
 12865              		.loc 1 5293 5 discriminator 11
 12866 02b0 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 320


 12867 02b4 233CA0E1 		lsr	r3, r3, #24
 12868 02b8 030053E3 		cmp	r3, #3
 12869 02bc 0100000A 		beq	.L824
 12870              		.loc 1 5293 5 discriminator 12
 12871 02c0 0130E0E3 		mvn	r3, #1
 12872              		.loc 1 5293 5
 12873 02c4 4B0100EA 		b	.L808
 12874              	.L824:
 12875              		.loc 1 5293 5 discriminator 13
 12876 02c8 38301BE5 		ldr	r3, [fp, #-56]
 12877 02cc 7F2003E2 		and	r2, r3, #127
 12878 02d0 10301BE5 		ldr	r3, [fp, #-16]
 12879 02d4 143093E5 		ldr	r3, [r3, #20]
 12880 02d8 030052E1 		cmp	r2, r3
 12881 02dc 0100003A 		bcc	.L825
 12882              		.loc 1 5293 5 discriminator 14
 12883 02e0 0230E0E3 		mvn	r3, #2
 12884              		.loc 1 5293 5
 12885 02e4 430100EA 		b	.L808
 12886              	.L825:
 12887              		.loc 1 5293 5 discriminator 15
 12888 02e8 38301BE5 		ldr	r3, [fp, #-56]
 12889 02ec 7F3003E2 		and	r3, r3, #127
 12890 02f0 8322A0E1 		lsl	r2, r3, #5
 12891 02f4 10301BE5 		ldr	r3, [fp, #-16]
 12892 02f8 0C3093E5 		ldr	r3, [r3, #12]
 12893 02fc 033082E0 		add	r3, r2, r3
 12894 0300 10300BE5 		str	r3, [fp, #-16]
 12895 0304 10301BE5 		ldr	r3, [fp, #-16]
 12896 0308 0300A0E1 		mov	r0, r3
 12897 030c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12898 0310 18000BE5 		str	r0, [fp, #-24]
 12899              		.loc 1 5293 5 discriminator 1
 12900 0314 18301BE5 		ldr	r3, [fp, #-24]
 12901 0318 FF3803E2 		and	r3, r3, #16711680
 12902 031c 020853E3 		cmp	r3, #131072
 12903 0320 0100001A 		bne	.L826
 12904              		.loc 1 5293 5 discriminator 16
 12905 0324 0830E0E3 		mvn	r3, #8
 12906              		.loc 1 5293 5
 12907 0328 320100EA 		b	.L808
 12908              	.L826:
 12909              		.loc 1 5293 5 discriminator 17
 12910 032c 18301BE5 		ldr	r3, [fp, #-24]
 12911 0330 233CA0E1 		lsr	r3, r3, #24
 12912 0334 020053E3 		cmp	r3, #2
 12913 0338 0100000A 		beq	.L821
 12914              		.loc 1 5293 5 discriminator 18
 12915 033c 0130E0E3 		mvn	r3, #1
 12916              		.loc 1 5293 5
 12917 0340 2C0100EA 		b	.L808
 12918              	.L821:
5294:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
5295:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 2");
5296:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12919              		.loc 1 5296 5 is_stmt 1
 12920 0344 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 321


 12921 0348 803003E2 		and	r3, r3, #128
 12922 034c 000053E3 		cmp	r3, #0
 12923 0350 1C00001A 		bne	.L827
 12924              		.loc 1 5296 5 is_stmt 0 discriminator 1
 12925 0354 30301BE5 		ldr	r3, [fp, #-48]
 12926 0358 142093E5 		ldr	r2, [r3, #20]
 12927 035c 04309BE5 		ldr	r3, [fp, #4]
 12928 0360 030052E1 		cmp	r2, r3
 12929 0364 0100008A 		bhi	.L828
 12930              		.loc 1 5296 5 discriminator 3
 12931 0368 0230E0E3 		mvn	r3, #2
 12932              		.loc 1 5296 5
 12933 036c 210100EA 		b	.L808
 12934              	.L828:
 12935              		.loc 1 5296 5 discriminator 4
 12936 0370 04309BE5 		ldr	r3, [fp, #4]
 12937 0374 8322A0E1 		lsl	r2, r3, #5
 12938 0378 30301BE5 		ldr	r3, [fp, #-48]
 12939 037c 0C3093E5 		ldr	r3, [r3, #12]
 12940 0380 033082E0 		add	r3, r2, r3
 12941 0384 0C300BE5 		str	r3, [fp, #-12]
 12942 0388 0C301BE5 		ldr	r3, [fp, #-12]
 12943 038c 0300A0E1 		mov	r0, r3
 12944 0390 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12945 0394 18000BE5 		str	r0, [fp, #-24]
 12946              		.loc 1 5296 5 discriminator 1
 12947 0398 18301BE5 		ldr	r3, [fp, #-24]
 12948 039c FF3803E2 		and	r3, r3, #16711680
 12949 03a0 020853E3 		cmp	r3, #131072
 12950 03a4 0100001A 		bne	.L829
 12951              		.loc 1 5296 5 discriminator 5
 12952 03a8 0830E0E3 		mvn	r3, #8
 12953              		.loc 1 5296 5
 12954 03ac 110100EA 		b	.L808
 12955              	.L829:
 12956              		.loc 1 5296 5 discriminator 6
 12957 03b0 18301BE5 		ldr	r3, [fp, #-24]
 12958 03b4 233CA0E1 		lsr	r3, r3, #24
 12959 03b8 050053E3 		cmp	r3, #5
 12960 03bc 3F00000A 		beq	.L830
 12961              		.loc 1 5296 5 discriminator 7
 12962 03c0 0130E0E3 		mvn	r3, #1
 12963              		.loc 1 5296 5
 12964 03c4 0B0100EA 		b	.L808
 12965              	.L827:
 12966              		.loc 1 5296 5 discriminator 2
 12967 03c8 04309BE5 		ldr	r3, [fp, #4]
 12968 03cc 2324A0E1 		lsr	r2, r3, #8
 12969 03d0 30301BE5 		ldr	r3, [fp, #-48]
 12970 03d4 143093E5 		ldr	r3, [r3, #20]
 12971 03d8 030052E1 		cmp	r2, r3
 12972 03dc 0100003A 		bcc	.L831
 12973              		.loc 1 5296 5 discriminator 8
 12974 03e0 0230E0E3 		mvn	r3, #2
 12975              		.loc 1 5296 5
 12976 03e4 030100EA 		b	.L808
 12977              	.L831:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 322


 12978              		.loc 1 5296 5 discriminator 9
 12979 03e8 04309BE5 		ldr	r3, [fp, #4]
 12980 03ec 2334A0E1 		lsr	r3, r3, #8
 12981 03f0 8322A0E1 		lsl	r2, r3, #5
 12982 03f4 30301BE5 		ldr	r3, [fp, #-48]
 12983 03f8 0C3093E5 		ldr	r3, [r3, #12]
 12984 03fc 033082E0 		add	r3, r2, r3
 12985 0400 0C300BE5 		str	r3, [fp, #-12]
 12986 0404 0C301BE5 		ldr	r3, [fp, #-12]
 12987 0408 0300A0E1 		mov	r0, r3
 12988 040c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12989 0410 18000BE5 		str	r0, [fp, #-24]
 12990              		.loc 1 5296 5 discriminator 1
 12991 0414 18301BE5 		ldr	r3, [fp, #-24]
 12992 0418 FF3803E2 		and	r3, r3, #16711680
 12993 041c 020853E3 		cmp	r3, #131072
 12994 0420 0100001A 		bne	.L832
 12995              		.loc 1 5296 5 discriminator 10
 12996 0424 0830E0E3 		mvn	r3, #8
 12997              		.loc 1 5296 5
 12998 0428 F20000EA 		b	.L808
 12999              	.L832:
 13000              		.loc 1 5296 5 discriminator 11
 13001 042c 18301BE5 		ldr	r3, [fp, #-24]
 13002 0430 233CA0E1 		lsr	r3, r3, #24
 13003 0434 030053E3 		cmp	r3, #3
 13004 0438 0100000A 		beq	.L833
 13005              		.loc 1 5296 5 discriminator 12
 13006 043c 0130E0E3 		mvn	r3, #1
 13007              		.loc 1 5296 5
 13008 0440 EC0000EA 		b	.L808
 13009              	.L833:
 13010              		.loc 1 5296 5 discriminator 13
 13011 0444 04309BE5 		ldr	r3, [fp, #4]
 13012 0448 7F2003E2 		and	r2, r3, #127
 13013 044c 0C301BE5 		ldr	r3, [fp, #-12]
 13014 0450 143093E5 		ldr	r3, [r3, #20]
 13015 0454 030052E1 		cmp	r2, r3
 13016 0458 0100003A 		bcc	.L834
 13017              		.loc 1 5296 5 discriminator 14
 13018 045c 0230E0E3 		mvn	r3, #2
 13019              		.loc 1 5296 5
 13020 0460 E40000EA 		b	.L808
 13021              	.L834:
 13022              		.loc 1 5296 5 discriminator 15
 13023 0464 04309BE5 		ldr	r3, [fp, #4]
 13024 0468 7F3003E2 		and	r3, r3, #127
 13025 046c 8322A0E1 		lsl	r2, r3, #5
 13026 0470 0C301BE5 		ldr	r3, [fp, #-12]
 13027 0474 0C3093E5 		ldr	r3, [r3, #12]
 13028 0478 033082E0 		add	r3, r2, r3
 13029 047c 0C300BE5 		str	r3, [fp, #-12]
 13030 0480 0C301BE5 		ldr	r3, [fp, #-12]
 13031 0484 0300A0E1 		mov	r0, r3
 13032 0488 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13033 048c 18000BE5 		str	r0, [fp, #-24]
 13034              		.loc 1 5296 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 323


 13035 0490 18301BE5 		ldr	r3, [fp, #-24]
 13036 0494 FF3803E2 		and	r3, r3, #16711680
 13037 0498 020853E3 		cmp	r3, #131072
 13038 049c 0100001A 		bne	.L835
 13039              		.loc 1 5296 5 discriminator 16
 13040 04a0 0830E0E3 		mvn	r3, #8
 13041              		.loc 1 5296 5
 13042 04a4 D30000EA 		b	.L808
 13043              	.L835:
 13044              		.loc 1 5296 5 discriminator 17
 13045 04a8 18301BE5 		ldr	r3, [fp, #-24]
 13046 04ac 233CA0E1 		lsr	r3, r3, #24
 13047 04b0 050053E3 		cmp	r3, #5
 13048 04b4 0100000A 		beq	.L830
 13049              		.loc 1 5296 5 discriminator 18
 13050 04b8 0130E0E3 		mvn	r3, #1
 13051              		.loc 1 5296 5
 13052 04bc CD0000EA 		b	.L808
 13053              	.L830:
5297:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
5298:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 3");
5299:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5300:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 13054              		.loc 1 5300 5 is_stmt 1
 13055 04c0 08301BE5 		ldr	r3, [fp, #-8]
 13056 04c4 083093E5 		ldr	r3, [r3, #8]
 13057 04c8 013003E2 		and	r3, r3, #1
 13058 04cc 000053E3 		cmp	r3, #0
 13059 04d0 0100001A 		bne	.L836
 13060              		.loc 1 5300 5 is_stmt 0 discriminator 1
 13061 04d4 0630E0E3 		mvn	r3, #6
 13062              		.loc 1 5300 5
 13063 04d8 C60000EA 		b	.L808
 13064              	.L836:
5301:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 4");
5302:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 13065              		.loc 1 5302 5 is_stmt 1
 13066 04dc 0C301BE5 		ldr	r3, [fp, #-12]
 13067 04e0 083093E5 		ldr	r3, [r3, #8]
 13068 04e4 023003E2 		and	r3, r3, #2
 13069 04e8 000053E3 		cmp	r3, #0
 13070 04ec 0100001A 		bne	.L837
 13071              		.loc 1 5302 5 is_stmt 0 discriminator 1
 13072 04f0 0630E0E3 		mvn	r3, #6
 13073              		.loc 1 5302 5
 13074 04f4 BF0000EA 		b	.L808
 13075              	.L837:
5303:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 5");
5304:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
5305:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13076              		.loc 1 5305 7 is_stmt 1
 13077 04f8 14309BE5 		ldr	r3, [fp, #20]
 13078 04fc 000053E3 		cmp	r3, #0
 13079 0500 0200001A 		bne	.L838
5306:../../Source/Kernel/rme_kernel.c ****     {
5307:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5308:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 324


5309:../../Source/Kernel/rme_kernel.c ****         Size=RME_THD_SIZE(Attr);
 13080              		.loc 1 5309 13
 13081 0504 9C30A0E3 		mov	r3, #156
 13082 0508 14300BE5 		str	r3, [fp, #-20]
 13083 050c 010000EA 		b	.L839
 13084              	.L838:
5310:../../Source/Kernel/rme_kernel.c ****     }
5311:../../Source/Kernel/rme_kernel.c ****     else
5312:../../Source/Kernel/rme_kernel.c ****     {
5313:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5314:../../Source/Kernel/rme_kernel.c ****         
5315:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_SIZE==0U)
5316:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
5317:../../Source/Kernel/rme_kernel.c **** #else
5318:../../Source/Kernel/rme_kernel.c ****         Size=RME_HYP_SIZE;
 13085              		.loc 1 5318 13
 13086 0510 5830A0E3 		mov	r3, #88
 13087 0514 14300BE5 		str	r3, [fp, #-20]
 13088              	.L839:
5319:../../Source/Kernel/rme_kernel.c **** #endif
5320:../../Source/Kernel/rme_kernel.c ****     }
5321:../../Source/Kernel/rme_kernel.c ****     
5322:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_THD,Raddr,Vaddr,Size);
 13089              		.loc 1 5322 5
 13090 0518 10301BE5 		ldr	r3, [fp, #-16]
 13091 051c 083093E5 		ldr	r3, [r3, #8]
 13092 0520 043003E2 		and	r3, r3, #4
 13093 0524 000053E3 		cmp	r3, #0
 13094 0528 0100001A 		bne	.L840
 13095              		.loc 1 5322 5 is_stmt 0 discriminator 1
 13096 052c 0630E0E3 		mvn	r3, #6
 13097              		.loc 1 5322 5
 13098 0530 B00000EA 		b	.L808
 13099              	.L840:
 13100              		.loc 1 5322 5 discriminator 2
 13101 0534 10301BE5 		ldr	r3, [fp, #-16]
 13102 0538 143093E5 		ldr	r3, [r3, #20]
 13103 053c 0C209BE5 		ldr	r2, [fp, #12]
 13104 0540 033082E0 		add	r3, r2, r3
 13105 0544 1C300BE5 		str	r3, [fp, #-28]
 13106 0548 1C201BE5 		ldr	r2, [fp, #-28]
 13107 054c 0C309BE5 		ldr	r3, [fp, #12]
 13108 0550 030052E1 		cmp	r2, r3
 13109 0554 0100002A 		bcs	.L841
 13110              		.loc 1 5322 5 discriminator 3
 13111 0558 0630E0E3 		mvn	r3, #6
 13112              		.loc 1 5322 5
 13113 055c A50000EA 		b	.L808
 13114              	.L841:
 13115              		.loc 1 5322 5 discriminator 4
 13116 0560 10301BE5 		ldr	r3, [fp, #-16]
 13117 0564 143093E5 		ldr	r3, [r3, #20]
 13118 0568 1C201BE5 		ldr	r2, [fp, #-28]
 13119 056c 030052E1 		cmp	r2, r3
 13120 0570 0100002A 		bcs	.L842
 13121              		.loc 1 5322 5 discriminator 5
 13122 0574 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 325


 13123              		.loc 1 5322 5
 13124 0578 9E0000EA 		b	.L808
 13125              	.L842:
 13126              		.loc 1 5322 5 discriminator 6
 13127 057c 1C201BE5 		ldr	r2, [fp, #-28]
 13128 0580 14301BE5 		ldr	r3, [fp, #-20]
 13129 0584 033082E0 		add	r3, r2, r3
 13130 0588 1C201BE5 		ldr	r2, [fp, #-28]
 13131 058c 030052E1 		cmp	r2, r3
 13132 0590 0100009A 		bls	.L843
 13133              		.loc 1 5322 5 discriminator 7
 13134 0594 0630E0E3 		mvn	r3, #6
 13135              		.loc 1 5322 5
 13136 0598 960000EA 		b	.L808
 13137              	.L843:
 13138              		.loc 1 5322 5 discriminator 8
 13139 059c 10301BE5 		ldr	r3, [fp, #-16]
 13140 05a0 182093E5 		ldr	r2, [r3, #24]
 13141 05a4 1C101BE5 		ldr	r1, [fp, #-28]
 13142 05a8 14301BE5 		ldr	r3, [fp, #-20]
 13143 05ac 033081E0 		add	r3, r1, r3
 13144 05b0 013043E2 		sub	r3, r3, #1
 13145 05b4 030052E1 		cmp	r2, r3
 13146 05b8 0100002A 		bcs	.L844
 13147              		.loc 1 5322 5 discriminator 9
 13148 05bc 0630E0E3 		mvn	r3, #6
 13149              		.loc 1 5322 5
 13150 05c0 8C0000EA 		b	.L808
 13151              	.L844:
5323:../../Source/Kernel/rme_kernel.c ****     
5324:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5325:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 13152              		.loc 1 5325 5 is_stmt 1
 13153 05c4 08301BE5 		ldr	r3, [fp, #-8]
 13154 05c8 142093E5 		ldr	r2, [r3, #20]
 13155 05cc 3C301BE5 		ldr	r3, [fp, #-60]
 13156 05d0 030052E1 		cmp	r2, r3
 13157 05d4 0100008A 		bhi	.L845
 13158              		.loc 1 5325 5 is_stmt 0 discriminator 1
 13159 05d8 0230E0E3 		mvn	r3, #2
 13160              		.loc 1 5325 5
 13161 05dc 850000EA 		b	.L808
 13162              	.L845:
 13163              		.loc 1 5325 5 discriminator 2
 13164 05e0 3C301BE5 		ldr	r3, [fp, #-60]
 13165 05e4 8322A0E1 		lsl	r2, r3, #5
 13166 05e8 08301BE5 		ldr	r3, [fp, #-8]
 13167 05ec 0C3093E5 		ldr	r3, [r3, #12]
 13168 05f0 033082E0 		add	r3, r2, r3
 13169 05f4 20300BE5 		str	r3, [fp, #-32]
5326:../../Source/Kernel/rme_kernel.c **** 
5327:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5328:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 13170              		.loc 1 5328 5 is_stmt 1
 13171 05f8 20301BE5 		ldr	r3, [fp, #-32]
 13172 05fc 0128A0E3 		mov	r2, #65536
 13173 0600 0010A0E3 		mov	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 326


 13174 0604 0300A0E1 		mov	r0, r3
 13175 0608 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13176 060c 0030A0E1 		mov	r3, r0
 13177              		.loc 1 5328 5 is_stmt 0 discriminator 1
 13178 0610 000053E3 		cmp	r3, #0
 13179 0614 0100001A 		bne	.L846
 13180 0618 0430E0E3 		mvn	r3, #4
 13181              		.loc 1 5328 5
 13182 061c 750000EA 		b	.L808
 13183              	.L846:
 13184              		.loc 1 5328 5 discriminator 2
 13185 0620 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13186 0624 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13187 0628 002093E5 		ldr	r2, [r3]
 13188 062c 20301BE5 		ldr	r3, [fp, #-32]
 13189 0630 102083E5 		str	r2, [r3, #16]
5329:../../Source/Kernel/rme_kernel.c ****      
5330:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5331:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Size)<0)
 13190              		.loc 1 5331 8 is_stmt 1
 13191 0634 14101BE5 		ldr	r1, [fp, #-20]
 13192 0638 1C001BE5 		ldr	r0, [fp, #-28]
 13193 063c FEFFFFEB 		bl	_RME_Kot_Mark
 13194 0640 0030A0E1 		mov	r3, r0
 13195              		.loc 1 5331 7 discriminator 1
 13196 0644 000053E3 		cmp	r3, #0
 13197 0648 0E0000AA 		bge	.L847
5332:../../Source/Kernel/rme_kernel.c ****     {
5333:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5334:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n_RME_Kot_Mark(Vaddr,Size)");
 13198              		.loc 1 5334 9
 13199 064c 000000E3 		movw	r0, #:lower16:.LC8
 13200 0650 000040E3 		movt	r0, #:upper16:.LC8
 13201 0654 FEFFFFEB 		bl	RME_Str_Print
5335:../../Source/Kernel/rme_kernel.c ****         RME_DBG_I(_RME_Kot_Mark(Vaddr,Size));
 13202              		.loc 1 5335 9
 13203 0658 14101BE5 		ldr	r1, [fp, #-20]
 13204 065c 1C001BE5 		ldr	r0, [fp, #-28]
 13205 0660 FEFFFFEB 		bl	_RME_Kot_Mark
 13206 0664 0030A0E1 		mov	r3, r0
 13207              		.loc 1 5335 9 is_stmt 0 discriminator 1
 13208 0668 0300A0E1 		mov	r0, r3
 13209 066c FEFFFFEB 		bl	RME_Int_Print
5336:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 13210              		.loc 1 5336 9 is_stmt 1
 13211 0670 20301BE5 		ldr	r3, [fp, #-32]
 13212 0674 0010A0E3 		mov	r1, #0
 13213 0678 0300A0E1 		mov	r0, r3
 13214 067c FEFFFFEB 		bl	__RME_A7A_Write_Release
5337:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 13215              		.loc 1 5337 16
 13216 0680 0330E0E3 		mvn	r3, #3
 13217 0684 5B0000EA 		b	.L808
 13218              	.L847:
5338:../../Source/Kernel/rme_kernel.c ****     }
5339:../../Source/Kernel/rme_kernel.c ****     else
5340:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 327


5341:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5342:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5343:../../Source/Kernel/rme_kernel.c ****     }
5344:../../Source/Kernel/rme_kernel.c ****     
5345:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5346:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 13219              		.loc 1 5346 11
 13220 0688 1C301BE5 		ldr	r3, [fp, #-28]
 13221 068c 24300BE5 		str	r3, [fp, #-36]
5347:../../Source/Kernel/rme_kernel.c ****     /* These thread's TID default to 0, and have no timeslices assigned */
5348:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 13222              		.loc 1 5348 22
 13223 0690 24301BE5 		ldr	r3, [fp, #-36]
 13224 0694 0020A0E3 		mov	r2, #0
 13225 0698 102083E5 		str	r2, [r3, #16]
5349:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 13226              		.loc 1 5349 24
 13227 069c 24301BE5 		ldr	r3, [fp, #-36]
 13228 06a0 0020A0E3 		mov	r2, #0
 13229 06a4 182083E5 		str	r2, [r3, #24]
5350:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_TIMEOUT;
 13230              		.loc 1 5350 24
 13231 06a8 24301BE5 		ldr	r3, [fp, #-36]
 13232 06ac 0220A0E3 		mov	r2, #2
 13233 06b0 1C2083E5 		str	r2, [r3, #28]
5351:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 13234              		.loc 1 5351 14
 13235 06b4 0C301BE5 		ldr	r3, [fp, #-12]
 13236 06b8 003093E5 		ldr	r3, [r3]
 13237 06bc 7330FFE6 		uxth	r3, r3
 13238 06c0 000053E3 		cmp	r3, #0
 13239 06c4 0200000A 		beq	.L848
 13240              		.loc 1 5351 14 is_stmt 0 discriminator 1
 13241 06c8 0C301BE5 		ldr	r3, [fp, #-12]
 13242 06cc 043093E5 		ldr	r3, [r3, #4]
 13243 06d0 000000EA 		b	.L849
 13244              	.L848:
 13245              		.loc 1 5351 14 discriminator 2
 13246 06d4 0C301BE5 		ldr	r3, [fp, #-12]
 13247              	.L849:
 13248              		.loc 1 5351 13 is_stmt 1 discriminator 4
 13249 06d8 28300BE5 		str	r3, [fp, #-40]
5352:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 13250              		.loc 1 5352 22
 13251 06dc 24301BE5 		ldr	r3, [fp, #-36]
 13252 06e0 28201BE5 		ldr	r2, [fp, #-40]
 13253 06e4 2C2083E5 		str	r2, [r3, #44]
5353:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 13254              		.loc 1 5353 25
 13255 06e8 24301BE5 		ldr	r3, [fp, #-36]
 13256 06ec 0020A0E3 		mov	r2, #0
 13257 06f0 282083E5 		str	r2, [r3, #40]
5354:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=Prio_Max;
 13258              		.loc 1 5354 27
 13259 06f4 24301BE5 		ldr	r3, [fp, #-36]
 13260 06f8 08209BE5 		ldr	r2, [fp, #8]
 13261 06fc 242083E5 		str	r2, [r3, #36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 328


5355:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=0U;
 13262              		.loc 1 5355 28
 13263 0700 24301BE5 		ldr	r3, [fp, #-36]
 13264 0704 0020A0E3 		mov	r2, #0
 13265 0708 302083E5 		str	r2, [r3, #48]
5356:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 13266              		.loc 1 5356 28
 13267 070c 24301BE5 		ldr	r3, [fp, #-36]
 13268 0710 0020A0E3 		mov	r2, #0
 13269 0714 382083E5 		str	r2, [r3, #56]
5357:../../Source/Kernel/rme_kernel.c ****     /* Currently the thread is not bound to any particular CPU */
5358:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=RME_THD_FREE;
 13270              		.loc 1 5358 24
 13271 0718 24301BE5 		ldr	r3, [fp, #-36]
 13272 071c 0020E0E3 		mvn	r2, #0
 13273 0720 142083E5 		str	r2, [r3, #20]
5359:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5360:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 13274              		.loc 1 5360 5
 13275 0724 24301BE5 		ldr	r3, [fp, #-36]
 13276 0728 083083E2 		add	r3, r3, #8
 13277 072c 0300A0E1 		mov	r0, r3
 13278 0730 FEFFFFEB 		bl	_RME_List_Crt
5361:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 13279              		.loc 1 5361 5
 13280 0734 24301BE5 		ldr	r3, [fp, #-36]
 13281 0738 3C3083E2 		add	r3, r3, #60
 13282 073c 0300A0E1 		mov	r0, r3
 13283 0740 FEFFFFEB 		bl	_RME_List_Crt
5362:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this is not a hypervisor thread yet */
5363:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13284              		.loc 1 5363 7
 13285 0744 14309BE5 		ldr	r3, [fp, #20]
 13286 0748 000053E3 		cmp	r3, #0
 13287 074c 0800001A 		bne	.L850
5364:../../Source/Kernel/rme_kernel.c ****     {
5365:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5366:../../Source/Kernel/rme_kernel.c ****         
5367:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr;
 13288              		.loc 1 5367 29
 13289 0750 24301BE5 		ldr	r3, [fp, #-36]
 13290 0754 10209BE5 		ldr	r2, [fp, #16]
 13291 0758 442083E5 		str	r2, [r3, #68]
5368:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 13292              		.loc 1 5368 52
 13293 075c 1C301BE5 		ldr	r3, [fp, #-28]
 13294 0760 583083E2 		add	r3, r3, #88
 13295              		.loc 1 5368 25
 13296 0764 0320A0E1 		mov	r2, r3
 13297              		.loc 1 5368 24
 13298 0768 24301BE5 		ldr	r3, [fp, #-36]
 13299 076c 482083E5 		str	r2, [r3, #72]
 13300 0770 060000EA 		b	.L851
 13301              	.L850:
5369:../../Source/Kernel/rme_kernel.c ****     }
5370:../../Source/Kernel/rme_kernel.c ****     /* Default to HYP_VA_BASE for all created hypervisor threads */
5371:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 329


5372:../../Source/Kernel/rme_kernel.c ****     {
5373:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5374:../../Source/Kernel/rme_kernel.c ****         
5375:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr|RME_THD_HYP_FLAG;
 13302              		.loc 1 5375 34
 13303 0774 10309BE5 		ldr	r3, [fp, #16]
 13304 0778 022183E3 		orr	r2, r3, #-2147483648
 13305              		.loc 1 5375 29
 13306 077c 24301BE5 		ldr	r3, [fp, #-36]
 13307 0780 442083E5 		str	r2, [r3, #68]
5376:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg *)RME_HYP_VA_BASE;
 13308              		.loc 1 5376 24
 13309 0784 24301BE5 		ldr	r3, [fp, #-36]
 13310 0788 0222A0E3 		mov	r2, #536870912
 13311 078c 482083E5 		str	r2, [r3, #72]
 13312              	.L851:
5377:../../Source/Kernel/rme_kernel.c ****     }
5378:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5379:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 13313              		.loc 1 5379 5
 13314 0790 24301BE5 		ldr	r3, [fp, #-36]
 13315 0794 4C3083E2 		add	r3, r3, #76
 13316 0798 0300A0E1 		mov	r0, r3
 13317 079c FEFFFFEB 		bl	_RME_List_Crt
5380:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 13318              		.loc 1 5380 29
 13319 07a0 24301BE5 		ldr	r3, [fp, #-36]
 13320 07a4 0020A0E3 		mov	r2, #0
 13321 07a8 542083E5 		str	r2, [r3, #84]
5381:../../Source/Kernel/rme_kernel.c **** 
5382:../../Source/Kernel/rme_kernel.c ****     /* Header init */
5383:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=0U;
 13322              		.loc 1 5383 27
 13323 07ac 20301BE5 		ldr	r3, [fp, #-32]
 13324 07b0 0020A0E3 		mov	r2, #0
 13325 07b4 042083E5 		str	r2, [r3, #4]
5384:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 13326              		.loc 1 5384 25
 13327 07b8 20301BE5 		ldr	r3, [fp, #-32]
 13328 07bc 1C201BE5 		ldr	r2, [fp, #-28]
 13329 07c0 0C2083E5 		str	r2, [r3, #12]
5385:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_ALL;
 13330              		.loc 1 5385 23
 13331 07c4 20301BE5 		ldr	r3, [fp, #-32]
 13332 07c8 FF2100E3 		movw	r2, #511
 13333 07cc 082083E5 		str	r2, [r3, #8]
5386:../../Source/Kernel/rme_kernel.c **** 
5387:../../Source/Kernel/rme_kernel.c ****     /* Reference process */
5388:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 13334              		.loc 1 5388 5
 13335 07d0 28301BE5 		ldr	r3, [fp, #-40]
 13336 07d4 043083E2 		add	r3, r3, #4
 13337 07d8 0110A0E3 		mov	r1, #1
 13338 07dc 0300A0E1 		mov	r0, r3
 13339 07e0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5389:../../Source/Kernel/rme_kernel.c ****     
5390:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 330


5391:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 13340              		.loc 1 5391 5
 13341 07e4 20301BE5 		ldr	r3, [fp, #-32]
 13342 07e8 0614A0E3 		mov	r1, #100663296
 13343 07ec 0300A0E1 		mov	r0, r3
 13344 07f0 FEFFFFEB 		bl	__RME_A7A_Write_Release
5392:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5393:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5394:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5395:../../Source/Kernel/rme_kernel.c **** 
5396:../../Source/Kernel/rme_kernel.c ****     return 0;
 13345              		.loc 1 5396 12
 13346 07f4 0030A0E3 		mov	r3, #0
 13347              	.L808:
5397:../../Source/Kernel/rme_kernel.c **** }
 13348              		.loc 1 5397 1
 13349 07f8 0300A0E1 		mov	r0, r3
 13350 07fc 04D04BE2 		sub	sp, fp, #4
 13351              		.cfi_def_cfa 13, 8
 13352              		@ sp needed
 13353 0800 0088BDE8 		pop	{fp, pc}
 13354              		.cfi_endproc
 13355              	.LFE56:
 13357              		.section	.text._RME_Thd_Del,"ax",%progbits
 13358              		.align	2
 13359              		.syntax unified
 13360              		.arm
 13362              	_RME_Thd_Del:
 13363              	.LFB57:
5398:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Crt *************************************************/
5399:../../Source/Kernel/rme_kernel.c **** 
5400:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Del ******************************************************
5401:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread.
5402:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
5403:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5404:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5405:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread in the captbl.
5406:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5407:../../Source/Kernel/rme_kernel.c **** Output      : None.
5408:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5409:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5410:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Del(struct RME_Cap_Cpt* Cpt,
5411:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5412:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd)
5413:../../Source/Kernel/rme_kernel.c **** {
 13364              		.loc 1 5413 1
 13365              		.cfi_startproc
 13366              		@ args = 0, pretend = 0, frame = 40
 13367              		@ frame_needed = 1, uses_anonymous_args = 0
 13368 0000 00482DE9 		push	{fp, lr}
 13369              		.cfi_def_cfa_offset 8
 13370              		.cfi_offset 11, -8
 13371              		.cfi_offset 14, -4
 13372 0004 04B08DE2 		add	fp, sp, #4
 13373              		.cfi_def_cfa 11, 4
 13374 0008 28D04DE2 		sub	sp, sp, #40
 13375 000c 20000BE5 		str	r0, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 331


 13376 0010 24100BE5 		str	r1, [fp, #-36]
 13377 0014 28200BE5 		str	r2, [fp, #-40]
5414:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5415:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Del;
5416:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5417:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
5418:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5419:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
5420:../../Source/Kernel/rme_kernel.c ****     
5421:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5422:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 13378              		.loc 1 5422 5
 13379 0018 24301BE5 		ldr	r3, [fp, #-36]
 13380 001c 803003E2 		and	r3, r3, #128
 13381 0020 000053E3 		cmp	r3, #0
 13382 0024 1C00001A 		bne	.L853
 13383              		.loc 1 5422 5 is_stmt 0 discriminator 1
 13384 0028 20301BE5 		ldr	r3, [fp, #-32]
 13385 002c 142093E5 		ldr	r2, [r3, #20]
 13386 0030 24301BE5 		ldr	r3, [fp, #-36]
 13387 0034 030052E1 		cmp	r2, r3
 13388 0038 0100008A 		bhi	.L854
 13389              		.loc 1 5422 5 discriminator 3
 13390 003c 0230E0E3 		mvn	r3, #2
 13391              		.loc 1 5422 5
 13392 0040 0A0100EA 		b	.L855
 13393              	.L854:
 13394              		.loc 1 5422 5 discriminator 4
 13395 0044 24301BE5 		ldr	r3, [fp, #-36]
 13396 0048 8322A0E1 		lsl	r2, r3, #5
 13397 004c 20301BE5 		ldr	r3, [fp, #-32]
 13398 0050 0C3093E5 		ldr	r3, [r3, #12]
 13399 0054 033082E0 		add	r3, r2, r3
 13400 0058 08300BE5 		str	r3, [fp, #-8]
 13401 005c 08301BE5 		ldr	r3, [fp, #-8]
 13402 0060 0300A0E1 		mov	r0, r3
 13403 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13404 0068 0C000BE5 		str	r0, [fp, #-12]
 13405              		.loc 1 5422 5 discriminator 1
 13406 006c 0C301BE5 		ldr	r3, [fp, #-12]
 13407 0070 FF3803E2 		and	r3, r3, #16711680
 13408 0074 020853E3 		cmp	r3, #131072
 13409 0078 0100001A 		bne	.L856
 13410              		.loc 1 5422 5 discriminator 5
 13411 007c 0830E0E3 		mvn	r3, #8
 13412              		.loc 1 5422 5
 13413 0080 FA0000EA 		b	.L855
 13414              	.L856:
 13415              		.loc 1 5422 5 discriminator 6
 13416 0084 0C301BE5 		ldr	r3, [fp, #-12]
 13417 0088 233CA0E1 		lsr	r3, r3, #24
 13418 008c 030053E3 		cmp	r3, #3
 13419 0090 3F00000A 		beq	.L857
 13420              		.loc 1 5422 5 discriminator 7
 13421 0094 0130E0E3 		mvn	r3, #1
 13422              		.loc 1 5422 5
 13423 0098 F40000EA 		b	.L855
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 332


 13424              	.L853:
 13425              		.loc 1 5422 5 discriminator 2
 13426 009c 24301BE5 		ldr	r3, [fp, #-36]
 13427 00a0 2324A0E1 		lsr	r2, r3, #8
 13428 00a4 20301BE5 		ldr	r3, [fp, #-32]
 13429 00a8 143093E5 		ldr	r3, [r3, #20]
 13430 00ac 030052E1 		cmp	r2, r3
 13431 00b0 0100003A 		bcc	.L858
 13432              		.loc 1 5422 5 discriminator 8
 13433 00b4 0230E0E3 		mvn	r3, #2
 13434              		.loc 1 5422 5
 13435 00b8 EC0000EA 		b	.L855
 13436              	.L858:
 13437              		.loc 1 5422 5 discriminator 9
 13438 00bc 24301BE5 		ldr	r3, [fp, #-36]
 13439 00c0 2334A0E1 		lsr	r3, r3, #8
 13440 00c4 8322A0E1 		lsl	r2, r3, #5
 13441 00c8 20301BE5 		ldr	r3, [fp, #-32]
 13442 00cc 0C3093E5 		ldr	r3, [r3, #12]
 13443 00d0 033082E0 		add	r3, r2, r3
 13444 00d4 08300BE5 		str	r3, [fp, #-8]
 13445 00d8 08301BE5 		ldr	r3, [fp, #-8]
 13446 00dc 0300A0E1 		mov	r0, r3
 13447 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13448 00e4 0C000BE5 		str	r0, [fp, #-12]
 13449              		.loc 1 5422 5 discriminator 1
 13450 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 13451 00ec FF3803E2 		and	r3, r3, #16711680
 13452 00f0 020853E3 		cmp	r3, #131072
 13453 00f4 0100001A 		bne	.L859
 13454              		.loc 1 5422 5 discriminator 10
 13455 00f8 0830E0E3 		mvn	r3, #8
 13456              		.loc 1 5422 5
 13457 00fc DB0000EA 		b	.L855
 13458              	.L859:
 13459              		.loc 1 5422 5 discriminator 11
 13460 0100 0C301BE5 		ldr	r3, [fp, #-12]
 13461 0104 233CA0E1 		lsr	r3, r3, #24
 13462 0108 030053E3 		cmp	r3, #3
 13463 010c 0100000A 		beq	.L860
 13464              		.loc 1 5422 5 discriminator 12
 13465 0110 0130E0E3 		mvn	r3, #1
 13466              		.loc 1 5422 5
 13467 0114 D50000EA 		b	.L855
 13468              	.L860:
 13469              		.loc 1 5422 5 discriminator 13
 13470 0118 24301BE5 		ldr	r3, [fp, #-36]
 13471 011c 7F2003E2 		and	r2, r3, #127
 13472 0120 08301BE5 		ldr	r3, [fp, #-8]
 13473 0124 143093E5 		ldr	r3, [r3, #20]
 13474 0128 030052E1 		cmp	r2, r3
 13475 012c 0100003A 		bcc	.L861
 13476              		.loc 1 5422 5 discriminator 14
 13477 0130 0230E0E3 		mvn	r3, #2
 13478              		.loc 1 5422 5
 13479 0134 CD0000EA 		b	.L855
 13480              	.L861:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 333


 13481              		.loc 1 5422 5 discriminator 15
 13482 0138 24301BE5 		ldr	r3, [fp, #-36]
 13483 013c 7F3003E2 		and	r3, r3, #127
 13484 0140 8322A0E1 		lsl	r2, r3, #5
 13485 0144 08301BE5 		ldr	r3, [fp, #-8]
 13486 0148 0C3093E5 		ldr	r3, [r3, #12]
 13487 014c 033082E0 		add	r3, r2, r3
 13488 0150 08300BE5 		str	r3, [fp, #-8]
 13489 0154 08301BE5 		ldr	r3, [fp, #-8]
 13490 0158 0300A0E1 		mov	r0, r3
 13491 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13492 0160 0C000BE5 		str	r0, [fp, #-12]
 13493              		.loc 1 5422 5 discriminator 1
 13494 0164 0C301BE5 		ldr	r3, [fp, #-12]
 13495 0168 FF3803E2 		and	r3, r3, #16711680
 13496 016c 020853E3 		cmp	r3, #131072
 13497 0170 0100001A 		bne	.L862
 13498              		.loc 1 5422 5 discriminator 16
 13499 0174 0830E0E3 		mvn	r3, #8
 13500              		.loc 1 5422 5
 13501 0178 BC0000EA 		b	.L855
 13502              	.L862:
 13503              		.loc 1 5422 5 discriminator 17
 13504 017c 0C301BE5 		ldr	r3, [fp, #-12]
 13505 0180 233CA0E1 		lsr	r3, r3, #24
 13506 0184 030053E3 		cmp	r3, #3
 13507 0188 0100000A 		beq	.L857
 13508              		.loc 1 5422 5 discriminator 18
 13509 018c 0130E0E3 		mvn	r3, #1
 13510              		.loc 1 5422 5
 13511 0190 B60000EA 		b	.L855
 13512              	.L857:
5423:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
5424:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
5425:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 13513              		.loc 1 5425 5 is_stmt 1
 13514 0194 08301BE5 		ldr	r3, [fp, #-8]
 13515 0198 083093E5 		ldr	r3, [r3, #8]
 13516 019c 023003E2 		and	r3, r3, #2
 13517 01a0 000053E3 		cmp	r3, #0
 13518 01a4 0100001A 		bne	.L863
 13519              		.loc 1 5425 5 is_stmt 0 discriminator 1
 13520 01a8 0630E0E3 		mvn	r3, #6
 13521              		.loc 1 5425 5
 13522 01ac AF0000EA 		b	.L855
 13523              	.L863:
5426:../../Source/Kernel/rme_kernel.c ****     
5427:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5428:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Del);
 13524              		.loc 1 5428 5 is_stmt 1
 13525 01b0 08301BE5 		ldr	r3, [fp, #-8]
 13526 01b4 142093E5 		ldr	r2, [r3, #20]
 13527 01b8 28301BE5 		ldr	r3, [fp, #-40]
 13528 01bc 030052E1 		cmp	r2, r3
 13529 01c0 0100008A 		bhi	.L864
 13530              		.loc 1 5428 5 is_stmt 0 discriminator 1
 13531 01c4 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 334


 13532              		.loc 1 5428 5
 13533 01c8 A80000EA 		b	.L855
 13534              	.L864:
 13535              		.loc 1 5428 5 discriminator 2
 13536 01cc 28301BE5 		ldr	r3, [fp, #-40]
 13537 01d0 8322A0E1 		lsl	r2, r3, #5
 13538 01d4 08301BE5 		ldr	r3, [fp, #-8]
 13539 01d8 0C3093E5 		ldr	r3, [r3, #12]
 13540 01dc 033082E0 		add	r3, r2, r3
 13541 01e0 10300BE5 		str	r3, [fp, #-16]
5429:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
5430:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Thd_Del,Type_Stat,RME_CAP_TYPE_THD);
 13542              		.loc 1 5430 5 is_stmt 1
 13543 01e4 10301BE5 		ldr	r3, [fp, #-16]
 13544 01e8 0300A0E1 		mov	r0, r3
 13545 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13546 01f0 0C000BE5 		str	r0, [fp, #-12]
 13547              		.loc 1 5430 5 is_stmt 0 discriminator 1
 13548 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 13549 01f8 FF3803E2 		and	r3, r3, #16711680
 13550 01fc 020853E3 		cmp	r3, #131072
 13551 0200 0100000A 		beq	.L865
 13552 0204 0830E0E3 		mvn	r3, #8
 13553              		.loc 1 5430 5
 13554 0208 980000EA 		b	.L855
 13555              	.L865:
 13556              		.loc 1 5430 5 discriminator 2
 13557 020c 0C301BE5 		ldr	r3, [fp, #-12]
 13558 0210 233CA0E1 		lsr	r3, r3, #24
 13559 0214 060053E3 		cmp	r3, #6
 13560 0218 0100000A 		beq	.L866
 13561              		.loc 1 5430 5 discriminator 3
 13562 021c 0130E0E3 		mvn	r3, #1
 13563              		.loc 1 5430 5
 13564 0220 920000EA 		b	.L855
 13565              	.L866:
 13566              		.loc 1 5430 5 discriminator 4
 13567 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13568 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13569 022c 002093E5 		ldr	r2, [r3]
 13570 0230 10301BE5 		ldr	r3, [fp, #-16]
 13571 0234 103093E5 		ldr	r3, [r3, #16]
 13572 0238 0310A0E1 		mov	r1, r3
 13573 023c 0200A0E1 		mov	r0, r2
 13574 0240 FEFFFFEB 		bl	_RME_Diff
 13575 0244 0030A0E1 		mov	r3, r0
 13576              		.loc 1 5430 5 discriminator 1
 13577 0248 0A0053E3 		cmp	r3, #10
 13578 024c 0100008A 		bhi	.L867
 13579              		.loc 1 5430 5 discriminator 5
 13580 0250 0730E0E3 		mvn	r3, #7
 13581              		.loc 1 5430 5
 13582 0254 850000EA 		b	.L855
 13583              	.L867:
 13584              		.loc 1 5430 5 discriminator 6
 13585 0258 10301BE5 		ldr	r3, [fp, #-16]
 13586 025c 043093E5 		ldr	r3, [r3, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 335


 13587 0260 000053E3 		cmp	r3, #0
 13588 0264 0B00000A 		beq	.L868
 13589              		.loc 1 5430 5 discriminator 7
 13590 0268 0C301BE5 		ldr	r3, [fp, #-12]
 13591 026c 7330FFE6 		uxth	r3, r3
 13592 0270 000053E3 		cmp	r3, #0
 13593 0274 0500001A 		bne	.L869
 13594              		.loc 1 5430 5 discriminator 9
 13595 0278 10001BE5 		ldr	r0, [fp, #-16]
 13596 027c 0C301BE5 		ldr	r3, [fp, #-12]
 13597 0280 FF38C3E3 		bic	r3, r3, #16711680
 13598 0284 0320A0E1 		mov	r2, r3
 13599 0288 0C101BE5 		ldr	r1, [fp, #-12]
 13600 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13601              	.L869:
 13602              		.loc 1 5430 5 discriminator 11
 13603 0290 0530E0E3 		mvn	r3, #5
 13604              		.loc 1 5430 5
 13605 0294 750000EA 		b	.L855
 13606              	.L868:
 13607              		.loc 1 5430 5 discriminator 8
 13608 0298 0C301BE5 		ldr	r3, [fp, #-12]
 13609 029c 7330FFE6 		uxth	r3, r3
 13610 02a0 000053E3 		cmp	r3, #0
 13611 02a4 0800000A 		beq	.L870
 13612              		.loc 1 5430 5 discriminator 12
 13613 02a8 003000E3 		movw	r3, #:lower16:.LC2
 13614 02ac 003040E3 		movt	r3, #:upper16:.LC2
 13615 02b0 002000E3 		movw	r2, #:lower16:.LC3
 13616 02b4 002040E3 		movt	r2, #:upper16:.LC3
 13617 02b8 361501E3 		movw	r1, #5430
 13618 02bc 000000E3 		movw	r0, #:lower16:.LC4
 13619 02c0 000040E3 		movt	r0, #:upper16:.LC4
 13620 02c4 FEFFFFEB 		bl	RME_Log
 13621              	.L871:
 13622              		.loc 1 5430 5
 13623 02c8 FEFFFFEA 		b	.L871
 13624              	.L870:
5431:../../Source/Kernel/rme_kernel.c ****     
5432:../../Source/Kernel/rme_kernel.c ****     /* Get the thread */
5433:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Del,struct RME_Thd_Struct*);
 13625              		.loc 1 5433 12 is_stmt 1
 13626 02cc 10301BE5 		ldr	r3, [fp, #-16]
 13627 02d0 0C3093E5 		ldr	r3, [r3, #12]
 13628              		.loc 1 5433 11
 13629 02d4 14300BE5 		str	r3, [fp, #-20]
5434:../../Source/Kernel/rme_kernel.c ****     
5435:../../Source/Kernel/rme_kernel.c ****     /* See if the thread is free. If still bound, we cannot proceed to deletion */
5436:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=RME_THD_FREE)
 13630              		.loc 1 5436 21
 13631 02d8 14301BE5 		ldr	r3, [fp, #-20]
 13632 02dc 143093E5 		ldr	r3, [r3, #20]
 13633              		.loc 1 5436 7
 13634 02e0 010073E3 		cmn	r3, #1
 13635 02e4 0700000A 		beq	.L872
5437:../../Source/Kernel/rme_kernel.c ****     {
5438:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 336


5439:../../Source/Kernel/rme_kernel.c **** 
5440:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Thd_Del,Type_Stat);
 13636              		.loc 1 5440 9
 13637 02e8 10001BE5 		ldr	r0, [fp, #-16]
 13638 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 13639 02f0 FF38C3E3 		bic	r3, r3, #16711680
 13640 02f4 0320A0E1 		mov	r2, r3
 13641 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 13642 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
5441:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13643              		.loc 1 5441 16
 13644 0300 CB30E0E3 		mvn	r3, #203
 13645 0304 590000EA 		b	.L855
 13646              	.L872:
5442:../../Source/Kernel/rme_kernel.c ****     }
5443:../../Source/Kernel/rme_kernel.c ****     else
5444:../../Source/Kernel/rme_kernel.c ****     {
5445:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5446:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5447:../../Source/Kernel/rme_kernel.c ****     }
5448:../../Source/Kernel/rme_kernel.c ****     
5449:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
5450:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Thd_Del,Type_Stat);
 13647              		.loc 1 5450 5
 13648 0308 10301BE5 		ldr	r3, [fp, #-16]
 13649 030c 0020A0E3 		mov	r2, #0
 13650 0310 0C101BE5 		ldr	r1, [fp, #-12]
 13651 0314 0300A0E1 		mov	r0, r3
 13652 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13653 031c 0030A0E1 		mov	r3, r0
 13654              		.loc 1 5450 5 is_stmt 0 discriminator 1
 13655 0320 000053E3 		cmp	r3, #0
 13656 0324 1300001A 		bne	.L874
 13657 0328 0030E0E3 		mvn	r3, #0
 13658              		.loc 1 5450 5
 13659 032c 4F0000EA 		b	.L855
 13660              	.L875:
5451:../../Source/Kernel/rme_kernel.c ****     
5452:../../Source/Kernel/rme_kernel.c ****     /* Is the thread using any invocation? If yes, just pop the invocation
5453:../../Source/Kernel/rme_kernel.c ****      * stack to empty, and free all the invocation stubs. This can be virtually
5454:../../Source/Kernel/rme_kernel.c ****      * unbounded if the invocation stack is just too deep. This is left to the
5455:../../Source/Kernel/rme_kernel.c ****      * user; if this is what he or she wants, be our guest. */
5456:../../Source/Kernel/rme_kernel.c ****     while(Thread->Ctx.Invstk.Next!=&(Thread->Ctx.Invstk))
5457:../../Source/Kernel/rme_kernel.c ****     {
5458:../../Source/Kernel/rme_kernel.c ****         Invocation=(struct RME_Inv_Struct*)(Thread->Ctx.Invstk.Next);
 13661              		.loc 1 5458 19 is_stmt 1
 13662 0330 14301BE5 		ldr	r3, [fp, #-20]
 13663 0334 4C3093E5 		ldr	r3, [r3, #76]
 13664 0338 18300BE5 		str	r3, [fp, #-24]
5459:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 13665              		.loc 1 5459 9
 13666 033c 18301BE5 		ldr	r3, [fp, #-24]
 13667 0340 042093E5 		ldr	r2, [r3, #4]
 13668 0344 18301BE5 		ldr	r3, [fp, #-24]
 13669 0348 003093E5 		ldr	r3, [r3]
 13670 034c 0310A0E1 		mov	r1, r3
 13671 0350 0200A0E1 		mov	r0, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 337


 13672 0354 FEFFFFEB 		bl	_RME_List_Del
5460:../../Source/Kernel/rme_kernel.c ****         Invocation->Thd_Act=0U;
 13673              		.loc 1 5460 28
 13674 0358 18301BE5 		ldr	r3, [fp, #-24]
 13675 035c 0020A0E3 		mov	r2, #0
 13676 0360 0C2083E5 		str	r2, [r3, #12]
5461:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Invstk_Depth--;
 13677              		.loc 1 5461 20
 13678 0364 14301BE5 		ldr	r3, [fp, #-20]
 13679 0368 543093E5 		ldr	r3, [r3, #84]
 13680              		.loc 1 5461 33
 13681 036c 012043E2 		sub	r2, r3, #1
 13682 0370 14301BE5 		ldr	r3, [fp, #-20]
 13683 0374 542083E5 		str	r2, [r3, #84]
 13684              	.L874:
5456:../../Source/Kernel/rme_kernel.c ****     {
 13685              		.loc 1 5456 29
 13686 0378 14301BE5 		ldr	r3, [fp, #-20]
 13687 037c 4C2093E5 		ldr	r2, [r3, #76]
5456:../../Source/Kernel/rme_kernel.c ****     {
 13688              		.loc 1 5456 36
 13689 0380 14301BE5 		ldr	r3, [fp, #-20]
 13690 0384 4C3083E2 		add	r3, r3, #76
5456:../../Source/Kernel/rme_kernel.c ****     {
 13691              		.loc 1 5456 34
 13692 0388 030052E1 		cmp	r2, r3
 13693 038c E7FFFF1A 		bne	.L875
5462:../../Source/Kernel/rme_kernel.c ****     }
5463:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thread->Ctx.Invstk_Depth==0U);
 13694              		.loc 1 5463 5
 13695 0390 14301BE5 		ldr	r3, [fp, #-20]
 13696 0394 543093E5 		ldr	r3, [r3, #84]
 13697 0398 000053E3 		cmp	r3, #0
 13698 039c 0800000A 		beq	.L876
 13699              		.loc 1 5463 5 is_stmt 0 discriminator 1
 13700 03a0 003000E3 		movw	r3, #:lower16:.LC2
 13701 03a4 003040E3 		movt	r3, #:upper16:.LC2
 13702 03a8 002000E3 		movw	r2, #:lower16:.LC3
 13703 03ac 002040E3 		movt	r2, #:upper16:.LC3
 13704 03b0 571501E3 		movw	r1, #5463
 13705 03b4 000000E3 		movw	r0, #:lower16:.LC4
 13706 03b8 000040E3 		movt	r0, #:upper16:.LC4
 13707 03bc FEFFFFEB 		bl	RME_Log
 13708              	.L877:
 13709              		.loc 1 5463 5
 13710 03c0 FEFFFFEA 		b	.L877
 13711              	.L876:
5464:../../Source/Kernel/rme_kernel.c ****     
5465:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
5466:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Thread->Sched.Prc->Head.Root_Ref), -1);
 13712              		.loc 1 5466 5 is_stmt 1
 13713 03c4 14301BE5 		ldr	r3, [fp, #-20]
 13714 03c8 2C3093E5 		ldr	r3, [r3, #44]
 13715 03cc 043083E2 		add	r3, r3, #4
 13716 03d0 0010E0E3 		mvn	r1, #0
 13717 03d4 0300A0E1 		mov	r0, r3
 13718 03d8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 338


5467:../../Source/Kernel/rme_kernel.c ****     
5468:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
5469:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)==0U)
 13719              		.loc 1 5469 20
 13720 03dc 14301BE5 		ldr	r3, [fp, #-20]
 13721 03e0 443093E5 		ldr	r3, [r3, #68]
 13722              		.loc 1 5469 7
 13723 03e4 000053E3 		cmp	r3, #0
 13724 03e8 0F0000BA 		blt	.L878
5470:../../Source/Kernel/rme_kernel.c ****     {
5471:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5472:../../Source/Kernel/rme_kernel.c **** 
5473:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13725              		.loc 1 5473 9
 13726 03ec 14301BE5 		ldr	r3, [fp, #-20]
 13727 03f0 9C10A0E3 		mov	r1, #156
 13728 03f4 0300A0E1 		mov	r0, r3
 13729 03f8 FEFFFFEB 		bl	_RME_Kot_Erase
 13730 03fc 0030A0E1 		mov	r3, r0
 13731              		.loc 1 5473 9 is_stmt 0 discriminator 1
 13732 0400 000053E3 		cmp	r3, #0
 13733 0404 1800000A 		beq	.L879
 13734 0408 003000E3 		movw	r3, #:lower16:.LC2
 13735 040c 003040E3 		movt	r3, #:upper16:.LC2
 13736 0410 002000E3 		movw	r2, #:lower16:.LC3
 13737 0414 002040E3 		movt	r2, #:upper16:.LC3
 13738 0418 611501E3 		movw	r1, #5473
 13739 041c 000000E3 		movw	r0, #:lower16:.LC4
 13740 0420 000040E3 		movt	r0, #:upper16:.LC4
 13741 0424 FEFFFFEB 		bl	RME_Log
 13742              	.L880:
 13743              		.loc 1 5473 9
 13744 0428 FEFFFFEA 		b	.L880
 13745              	.L878:
5474:../../Source/Kernel/rme_kernel.c ****                                   RME_THD_SIZE(Thread->Ctx.Hyp_Attr))==0);
5475:../../Source/Kernel/rme_kernel.c ****     }
5476:../../Source/Kernel/rme_kernel.c ****     else
5477:../../Source/Kernel/rme_kernel.c ****     {
5478:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5479:../../Source/Kernel/rme_kernel.c **** 
5480:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13746              		.loc 1 5480 9 is_stmt 1
 13747 042c 14301BE5 		ldr	r3, [fp, #-20]
 13748 0430 5810A0E3 		mov	r1, #88
 13749 0434 0300A0E1 		mov	r0, r3
 13750 0438 FEFFFFEB 		bl	_RME_Kot_Erase
 13751 043c 0030A0E1 		mov	r3, r0
 13752              		.loc 1 5480 9 is_stmt 0 discriminator 1
 13753 0440 000053E3 		cmp	r3, #0
 13754 0444 0800000A 		beq	.L879
 13755 0448 003000E3 		movw	r3, #:lower16:.LC2
 13756 044c 003040E3 		movt	r3, #:upper16:.LC2
 13757 0450 002000E3 		movw	r2, #:lower16:.LC3
 13758 0454 002040E3 		movt	r2, #:upper16:.LC3
 13759 0458 681501E3 		movw	r1, #5480
 13760 045c 000000E3 		movw	r0, #:lower16:.LC4
 13761 0460 000040E3 		movt	r0, #:upper16:.LC4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 339


 13762 0464 FEFFFFEB 		bl	RME_Log
 13763              	.L881:
 13764              		.loc 1 5480 9
 13765 0468 FEFFFFEA 		b	.L881
 13766              	.L879:
5481:../../Source/Kernel/rme_kernel.c ****                    RME_HYP_SIZE)==0);
5482:../../Source/Kernel/rme_kernel.c ****     }
5483:../../Source/Kernel/rme_kernel.c ****     
5484:../../Source/Kernel/rme_kernel.c ****     return 0;
 13767              		.loc 1 5484 12 is_stmt 1
 13768 046c 0030A0E3 		mov	r3, #0
 13769              	.L855:
5485:../../Source/Kernel/rme_kernel.c **** }
 13770              		.loc 1 5485 1
 13771 0470 0300A0E1 		mov	r0, r3
 13772 0474 04D04BE2 		sub	sp, fp, #4
 13773              		.cfi_def_cfa 13, 8
 13774              		@ sp needed
 13775 0478 0088BDE8 		pop	{fp, pc}
 13776              		.cfi_endproc
 13777              	.LFE57:
 13779              		.section	.text._RME_Thd_Sched_Bind,"ax",%progbits
 13780              		.align	2
 13781              		.syntax unified
 13782              		.arm
 13784              	_RME_Thd_Sched_Bind:
 13785              	.LFB58:
5486:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Del *************************************************/
5487:../../Source/Kernel/rme_kernel.c **** 
5488:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Bind ***********************************************
5489:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's priority level, and its scheduler thread. When
5490:../../Source/Kernel/rme_kernel.c ****               there are any state changes on this thread, a notification will
5491:../../Source/Kernel/rme_kernel.c ****               be sent to its scheduler thread. If the state of the thread
5492:../../Source/Kernel/rme_kernel.c ****               changes for multiple times, then only the most recent state will
5493:../../Source/Kernel/rme_kernel.c ****               be reflected in the scheduler's receive queue.
5494:../../Source/Kernel/rme_kernel.c ****               The scheduler and the threads that it schedule must be on the
5495:../../Source/Kernel/rme_kernel.c ****               same core. When a thread wants to go from one core to another,
5496:../../Source/Kernel/rme_kernel.c ****               it must be freed from that core first. 
5497:../../Source/Kernel/rme_kernel.c ****               This must be called on the same core with the Cap_Thd_Sched, and
5498:../../Source/Kernel/rme_kernel.c ****               the Cap_Thd itself must be free.
5499:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5500:../../Source/Kernel/rme_kernel.c ****               priority.
5501:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5502:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5503:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5504:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Sched - The scheduler thread.
5505:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
5506:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The signal endpoint for scheduler
5507:../../Source/Kernel/rme_kernel.c ****                                   notifications. This signal endpoint will be
5508:../../Source/Kernel/rme_kernel.c ****                                   sent to whenever this thread has a fault, or
5509:../../Source/Kernel/rme_kernel.c ****                                   timeouts. This is purely optional; if it is
5510:../../Source/Kernel/rme_kernel.c ****                                   not needed, pass in RME_CID_NULL.
5511:../../Source/Kernel/rme_kernel.c ****               rme_tid_t TID - The thread ID. This is user-supplied, and the
5512:../../Source/Kernel/rme_kernel.c ****                               kernel will not check whether there are two
5513:../../Source/Kernel/rme_kernel.c ****                               threads that have the same TID.
5514:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level, higher is more critical.
5515:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Haddr - The kernel-accessible virtual memory address
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 340


5516:../../Source/Kernel/rme_kernel.c ****                                 for this thread's register sets, only used by
5517:../../Source/Kernel/rme_kernel.c ****                                 hypervisor-managed threads. For other threads,
5518:../../Source/Kernel/rme_kernel.c ****                                 please pass in NULL instead.
5519:../../Source/Kernel/rme_kernel.c **** Output      : None.
5520:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5521:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5522:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Bind(struct RME_Cap_Cpt* Cpt,
5523:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd,
5524:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd_Sched,
5525:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Sig,
5526:../../Source/Kernel/rme_kernel.c ****                                      rme_tid_t TID,
5527:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio,
5528:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Haddr)
5529:../../Source/Kernel/rme_kernel.c **** {
 13786              		.loc 1 5529 1
 13787              		.cfi_startproc
 13788              		@ args = 12, pretend = 0, frame = 56
 13789              		@ frame_needed = 1, uses_anonymous_args = 0
 13790 0000 00482DE9 		push	{fp, lr}
 13791              		.cfi_def_cfa_offset 8
 13792              		.cfi_offset 11, -8
 13793              		.cfi_offset 14, -4
 13794 0004 04B08DE2 		add	fp, sp, #4
 13795              		.cfi_def_cfa 11, 4
 13796 0008 38D04DE2 		sub	sp, sp, #56
 13797 000c 30000BE5 		str	r0, [fp, #-48]
 13798 0010 34100BE5 		str	r1, [fp, #-52]
 13799 0014 38200BE5 		str	r2, [fp, #-56]
 13800 0018 3C300BE5 		str	r3, [fp, #-60]
5530:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5531:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Sched;
5532:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
5533:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5534:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
5535:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_Old;
5536:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_New;
5537:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5538:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Hyp_Attr;
5539:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
5540:../../Source/Kernel/rme_kernel.c **** 
5541:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCpt addr ");
5542:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H((rme_ptr_t)Cpt);
5543:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd ");
5544:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
5545:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd_Sched ");
5546:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd_Sched);
5547:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Sig ");
5548:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Sig);
5549:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nTID ");
5550:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(TID);
5551:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nPrio ");
5552:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Prio);
5553:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nHaddr ");
5554:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Haddr);
5555:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nRME_CID_NULL ");
5556:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_I(RME_CID_NULL);*/
5557:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 341


5558:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5559:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 13801              		.loc 1 5559 5
 13802 001c 34301BE5 		ldr	r3, [fp, #-52]
 13803 0020 803003E2 		and	r3, r3, #128
 13804 0024 000053E3 		cmp	r3, #0
 13805 0028 1C00001A 		bne	.L883
 13806              		.loc 1 5559 5 is_stmt 0 discriminator 1
 13807 002c 30301BE5 		ldr	r3, [fp, #-48]
 13808 0030 142093E5 		ldr	r2, [r3, #20]
 13809 0034 34301BE5 		ldr	r3, [fp, #-52]
 13810 0038 030052E1 		cmp	r2, r3
 13811 003c 0100008A 		bhi	.L884
 13812              		.loc 1 5559 5 discriminator 3
 13813 0040 0230E0E3 		mvn	r3, #2
 13814              		.loc 1 5559 5
 13815 0044 D60100EA 		b	.L885
 13816              	.L884:
 13817              		.loc 1 5559 5 discriminator 4
 13818 0048 34301BE5 		ldr	r3, [fp, #-52]
 13819 004c 8322A0E1 		lsl	r2, r3, #5
 13820 0050 30301BE5 		ldr	r3, [fp, #-48]
 13821 0054 0C3093E5 		ldr	r3, [r3, #12]
 13822 0058 033082E0 		add	r3, r2, r3
 13823 005c 08300BE5 		str	r3, [fp, #-8]
 13824 0060 08301BE5 		ldr	r3, [fp, #-8]
 13825 0064 0300A0E1 		mov	r0, r3
 13826 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13827 006c 14000BE5 		str	r0, [fp, #-20]
 13828              		.loc 1 5559 5 discriminator 1
 13829 0070 14301BE5 		ldr	r3, [fp, #-20]
 13830 0074 FF3803E2 		and	r3, r3, #16711680
 13831 0078 020853E3 		cmp	r3, #131072
 13832 007c 0100001A 		bne	.L886
 13833              		.loc 1 5559 5 discriminator 5
 13834 0080 0830E0E3 		mvn	r3, #8
 13835              		.loc 1 5559 5
 13836 0084 C60100EA 		b	.L885
 13837              	.L886:
 13838              		.loc 1 5559 5 discriminator 6
 13839 0088 14301BE5 		ldr	r3, [fp, #-20]
 13840 008c 233CA0E1 		lsr	r3, r3, #24
 13841 0090 060053E3 		cmp	r3, #6
 13842 0094 3F00000A 		beq	.L887
 13843              		.loc 1 5559 5 discriminator 7
 13844 0098 0130E0E3 		mvn	r3, #1
 13845              		.loc 1 5559 5
 13846 009c C00100EA 		b	.L885
 13847              	.L883:
 13848              		.loc 1 5559 5 discriminator 2
 13849 00a0 34301BE5 		ldr	r3, [fp, #-52]
 13850 00a4 2324A0E1 		lsr	r2, r3, #8
 13851 00a8 30301BE5 		ldr	r3, [fp, #-48]
 13852 00ac 143093E5 		ldr	r3, [r3, #20]
 13853 00b0 030052E1 		cmp	r2, r3
 13854 00b4 0100003A 		bcc	.L888
 13855              		.loc 1 5559 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 342


 13856 00b8 0230E0E3 		mvn	r3, #2
 13857              		.loc 1 5559 5
 13858 00bc B80100EA 		b	.L885
 13859              	.L888:
 13860              		.loc 1 5559 5 discriminator 9
 13861 00c0 34301BE5 		ldr	r3, [fp, #-52]
 13862 00c4 2334A0E1 		lsr	r3, r3, #8
 13863 00c8 8322A0E1 		lsl	r2, r3, #5
 13864 00cc 30301BE5 		ldr	r3, [fp, #-48]
 13865 00d0 0C3093E5 		ldr	r3, [r3, #12]
 13866 00d4 033082E0 		add	r3, r2, r3
 13867 00d8 08300BE5 		str	r3, [fp, #-8]
 13868 00dc 08301BE5 		ldr	r3, [fp, #-8]
 13869 00e0 0300A0E1 		mov	r0, r3
 13870 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13871 00e8 14000BE5 		str	r0, [fp, #-20]
 13872              		.loc 1 5559 5 discriminator 1
 13873 00ec 14301BE5 		ldr	r3, [fp, #-20]
 13874 00f0 FF3803E2 		and	r3, r3, #16711680
 13875 00f4 020853E3 		cmp	r3, #131072
 13876 00f8 0100001A 		bne	.L889
 13877              		.loc 1 5559 5 discriminator 10
 13878 00fc 0830E0E3 		mvn	r3, #8
 13879              		.loc 1 5559 5
 13880 0100 A70100EA 		b	.L885
 13881              	.L889:
 13882              		.loc 1 5559 5 discriminator 11
 13883 0104 14301BE5 		ldr	r3, [fp, #-20]
 13884 0108 233CA0E1 		lsr	r3, r3, #24
 13885 010c 030053E3 		cmp	r3, #3
 13886 0110 0100000A 		beq	.L890
 13887              		.loc 1 5559 5 discriminator 12
 13888 0114 0130E0E3 		mvn	r3, #1
 13889              		.loc 1 5559 5
 13890 0118 A10100EA 		b	.L885
 13891              	.L890:
 13892              		.loc 1 5559 5 discriminator 13
 13893 011c 34301BE5 		ldr	r3, [fp, #-52]
 13894 0120 7F2003E2 		and	r2, r3, #127
 13895 0124 08301BE5 		ldr	r3, [fp, #-8]
 13896 0128 143093E5 		ldr	r3, [r3, #20]
 13897 012c 030052E1 		cmp	r2, r3
 13898 0130 0100003A 		bcc	.L891
 13899              		.loc 1 5559 5 discriminator 14
 13900 0134 0230E0E3 		mvn	r3, #2
 13901              		.loc 1 5559 5
 13902 0138 990100EA 		b	.L885
 13903              	.L891:
 13904              		.loc 1 5559 5 discriminator 15
 13905 013c 34301BE5 		ldr	r3, [fp, #-52]
 13906 0140 7F3003E2 		and	r3, r3, #127
 13907 0144 8322A0E1 		lsl	r2, r3, #5
 13908 0148 08301BE5 		ldr	r3, [fp, #-8]
 13909 014c 0C3093E5 		ldr	r3, [r3, #12]
 13910 0150 033082E0 		add	r3, r2, r3
 13911 0154 08300BE5 		str	r3, [fp, #-8]
 13912 0158 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 343


 13913 015c 0300A0E1 		mov	r0, r3
 13914 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13915 0164 14000BE5 		str	r0, [fp, #-20]
 13916              		.loc 1 5559 5 discriminator 1
 13917 0168 14301BE5 		ldr	r3, [fp, #-20]
 13918 016c FF3803E2 		and	r3, r3, #16711680
 13919 0170 020853E3 		cmp	r3, #131072
 13920 0174 0100001A 		bne	.L892
 13921              		.loc 1 5559 5 discriminator 16
 13922 0178 0830E0E3 		mvn	r3, #8
 13923              		.loc 1 5559 5
 13924 017c 880100EA 		b	.L885
 13925              	.L892:
 13926              		.loc 1 5559 5 discriminator 17
 13927 0180 14301BE5 		ldr	r3, [fp, #-20]
 13928 0184 233CA0E1 		lsr	r3, r3, #24
 13929 0188 060053E3 		cmp	r3, #6
 13930 018c 0100000A 		beq	.L887
 13931              		.loc 1 5559 5 discriminator 18
 13932 0190 0130E0E3 		mvn	r3, #1
 13933              		.loc 1 5559 5
 13934 0194 820100EA 		b	.L885
 13935              	.L887:
5560:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5561:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 1");
5562:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Sched,RME_CAP_TYPE_THD,
 13936              		.loc 1 5562 5 is_stmt 1
 13937 0198 38301BE5 		ldr	r3, [fp, #-56]
 13938 019c 803003E2 		and	r3, r3, #128
 13939 01a0 000053E3 		cmp	r3, #0
 13940 01a4 1C00001A 		bne	.L893
 13941              		.loc 1 5562 5 is_stmt 0 discriminator 1
 13942 01a8 30301BE5 		ldr	r3, [fp, #-48]
 13943 01ac 142093E5 		ldr	r2, [r3, #20]
 13944 01b0 38301BE5 		ldr	r3, [fp, #-56]
 13945 01b4 030052E1 		cmp	r2, r3
 13946 01b8 0100008A 		bhi	.L894
 13947              		.loc 1 5562 5 discriminator 3
 13948 01bc 0230E0E3 		mvn	r3, #2
 13949              		.loc 1 5562 5
 13950 01c0 770100EA 		b	.L885
 13951              	.L894:
 13952              		.loc 1 5562 5 discriminator 4
 13953 01c4 38301BE5 		ldr	r3, [fp, #-56]
 13954 01c8 8322A0E1 		lsl	r2, r3, #5
 13955 01cc 30301BE5 		ldr	r3, [fp, #-48]
 13956 01d0 0C3093E5 		ldr	r3, [r3, #12]
 13957 01d4 033082E0 		add	r3, r2, r3
 13958 01d8 0C300BE5 		str	r3, [fp, #-12]
 13959 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 13960 01e0 0300A0E1 		mov	r0, r3
 13961 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13962 01e8 14000BE5 		str	r0, [fp, #-20]
 13963              		.loc 1 5562 5 discriminator 1
 13964 01ec 14301BE5 		ldr	r3, [fp, #-20]
 13965 01f0 FF3803E2 		and	r3, r3, #16711680
 13966 01f4 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 344


 13967 01f8 0100001A 		bne	.L895
 13968              		.loc 1 5562 5 discriminator 5
 13969 01fc 0830E0E3 		mvn	r3, #8
 13970              		.loc 1 5562 5
 13971 0200 670100EA 		b	.L885
 13972              	.L895:
 13973              		.loc 1 5562 5 discriminator 6
 13974 0204 14301BE5 		ldr	r3, [fp, #-20]
 13975 0208 233CA0E1 		lsr	r3, r3, #24
 13976 020c 060053E3 		cmp	r3, #6
 13977 0210 3F00000A 		beq	.L896
 13978              		.loc 1 5562 5 discriminator 7
 13979 0214 0130E0E3 		mvn	r3, #1
 13980              		.loc 1 5562 5
 13981 0218 610100EA 		b	.L885
 13982              	.L893:
 13983              		.loc 1 5562 5 discriminator 2
 13984 021c 38301BE5 		ldr	r3, [fp, #-56]
 13985 0220 2324A0E1 		lsr	r2, r3, #8
 13986 0224 30301BE5 		ldr	r3, [fp, #-48]
 13987 0228 143093E5 		ldr	r3, [r3, #20]
 13988 022c 030052E1 		cmp	r2, r3
 13989 0230 0100003A 		bcc	.L897
 13990              		.loc 1 5562 5 discriminator 8
 13991 0234 0230E0E3 		mvn	r3, #2
 13992              		.loc 1 5562 5
 13993 0238 590100EA 		b	.L885
 13994              	.L897:
 13995              		.loc 1 5562 5 discriminator 9
 13996 023c 38301BE5 		ldr	r3, [fp, #-56]
 13997 0240 2334A0E1 		lsr	r3, r3, #8
 13998 0244 8322A0E1 		lsl	r2, r3, #5
 13999 0248 30301BE5 		ldr	r3, [fp, #-48]
 14000 024c 0C3093E5 		ldr	r3, [r3, #12]
 14001 0250 033082E0 		add	r3, r2, r3
 14002 0254 0C300BE5 		str	r3, [fp, #-12]
 14003 0258 0C301BE5 		ldr	r3, [fp, #-12]
 14004 025c 0300A0E1 		mov	r0, r3
 14005 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14006 0264 14000BE5 		str	r0, [fp, #-20]
 14007              		.loc 1 5562 5 discriminator 1
 14008 0268 14301BE5 		ldr	r3, [fp, #-20]
 14009 026c FF3803E2 		and	r3, r3, #16711680
 14010 0270 020853E3 		cmp	r3, #131072
 14011 0274 0100001A 		bne	.L898
 14012              		.loc 1 5562 5 discriminator 10
 14013 0278 0830E0E3 		mvn	r3, #8
 14014              		.loc 1 5562 5
 14015 027c 480100EA 		b	.L885
 14016              	.L898:
 14017              		.loc 1 5562 5 discriminator 11
 14018 0280 14301BE5 		ldr	r3, [fp, #-20]
 14019 0284 233CA0E1 		lsr	r3, r3, #24
 14020 0288 030053E3 		cmp	r3, #3
 14021 028c 0100000A 		beq	.L899
 14022              		.loc 1 5562 5 discriminator 12
 14023 0290 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 345


 14024              		.loc 1 5562 5
 14025 0294 420100EA 		b	.L885
 14026              	.L899:
 14027              		.loc 1 5562 5 discriminator 13
 14028 0298 38301BE5 		ldr	r3, [fp, #-56]
 14029 029c 7F2003E2 		and	r2, r3, #127
 14030 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 14031 02a4 143093E5 		ldr	r3, [r3, #20]
 14032 02a8 030052E1 		cmp	r2, r3
 14033 02ac 0100003A 		bcc	.L900
 14034              		.loc 1 5562 5 discriminator 14
 14035 02b0 0230E0E3 		mvn	r3, #2
 14036              		.loc 1 5562 5
 14037 02b4 3A0100EA 		b	.L885
 14038              	.L900:
 14039              		.loc 1 5562 5 discriminator 15
 14040 02b8 38301BE5 		ldr	r3, [fp, #-56]
 14041 02bc 7F3003E2 		and	r3, r3, #127
 14042 02c0 8322A0E1 		lsl	r2, r3, #5
 14043 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 14044 02c8 0C3093E5 		ldr	r3, [r3, #12]
 14045 02cc 033082E0 		add	r3, r2, r3
 14046 02d0 0C300BE5 		str	r3, [fp, #-12]
 14047 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 14048 02d8 0300A0E1 		mov	r0, r3
 14049 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14050 02e0 14000BE5 		str	r0, [fp, #-20]
 14051              		.loc 1 5562 5 discriminator 1
 14052 02e4 14301BE5 		ldr	r3, [fp, #-20]
 14053 02e8 FF3803E2 		and	r3, r3, #16711680
 14054 02ec 020853E3 		cmp	r3, #131072
 14055 02f0 0100001A 		bne	.L901
 14056              		.loc 1 5562 5 discriminator 16
 14057 02f4 0830E0E3 		mvn	r3, #8
 14058              		.loc 1 5562 5
 14059 02f8 290100EA 		b	.L885
 14060              	.L901:
 14061              		.loc 1 5562 5 discriminator 17
 14062 02fc 14301BE5 		ldr	r3, [fp, #-20]
 14063 0300 233CA0E1 		lsr	r3, r3, #24
 14064 0304 060053E3 		cmp	r3, #6
 14065 0308 0100000A 		beq	.L896
 14066              		.loc 1 5562 5 discriminator 18
 14067 030c 0130E0E3 		mvn	r3, #1
 14068              		.loc 1 5562 5
 14069 0310 230100EA 		b	.L885
 14070              	.L896:
5563:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Sched,Type_Stat);
5564:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 2");
5565:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5566:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_CHILD);
 14071              		.loc 1 5566 5 is_stmt 1
 14072 0314 08301BE5 		ldr	r3, [fp, #-8]
 14073 0318 083093E5 		ldr	r3, [r3, #8]
 14074 031c 023003E2 		and	r3, r3, #2
 14075 0320 000053E3 		cmp	r3, #0
 14076 0324 0100001A 		bne	.L902
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 346


 14077              		.loc 1 5566 5 is_stmt 0 discriminator 1
 14078 0328 0630E0E3 		mvn	r3, #6
 14079              		.loc 1 5566 5
 14080 032c 1C0100EA 		b	.L885
 14081              	.L902:
5567:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 3");
5568:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Sched,RME_THD_FLAG_SCHED_PARENT);
 14082              		.loc 1 5568 5 is_stmt 1
 14083 0330 0C301BE5 		ldr	r3, [fp, #-12]
 14084 0334 083093E5 		ldr	r3, [r3, #8]
 14085 0338 043003E2 		and	r3, r3, #4
 14086 033c 000053E3 		cmp	r3, #0
 14087 0340 0100001A 		bne	.L903
 14088              		.loc 1 5568 5 is_stmt 0 discriminator 1
 14089 0344 0630E0E3 		mvn	r3, #6
 14090              		.loc 1 5568 5
 14091 0348 150100EA 		b	.L885
 14092              	.L903:
5569:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 4");
5570:../../Source/Kernel/rme_kernel.c ****     
5571:../../Source/Kernel/rme_kernel.c ****     /* Check if we need the signal endpoint for this operation */
5572:../../Source/Kernel/rme_kernel.c ****     if(Cap_Sig!=RME_CID_NULL)
 14093              		.loc 1 5572 7 is_stmt 1
 14094 034c 3C301BE5 		ldr	r3, [fp, #-60]
 14095 0350 020953E3 		cmp	r3, #32768
 14096 0354 6500000A 		beq	.L904
5573:../../Source/Kernel/rme_kernel.c ****     {
5574:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5575:../../Source/Kernel/rme_kernel.c **** 
5576:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 14097              		.loc 1 5576 9
 14098 0358 3C301BE5 		ldr	r3, [fp, #-60]
 14099 035c 803003E2 		and	r3, r3, #128
 14100 0360 000053E3 		cmp	r3, #0
 14101 0364 1C00001A 		bne	.L905
 14102              		.loc 1 5576 9 is_stmt 0 discriminator 1
 14103 0368 30301BE5 		ldr	r3, [fp, #-48]
 14104 036c 142093E5 		ldr	r2, [r3, #20]
 14105 0370 3C301BE5 		ldr	r3, [fp, #-60]
 14106 0374 030052E1 		cmp	r2, r3
 14107 0378 0100008A 		bhi	.L906
 14108              		.loc 1 5576 9 discriminator 3
 14109 037c 0230E0E3 		mvn	r3, #2
 14110              		.loc 1 5576 9
 14111 0380 070100EA 		b	.L885
 14112              	.L906:
 14113              		.loc 1 5576 9 discriminator 4
 14114 0384 3C301BE5 		ldr	r3, [fp, #-60]
 14115 0388 8322A0E1 		lsl	r2, r3, #5
 14116 038c 30301BE5 		ldr	r3, [fp, #-48]
 14117 0390 0C3093E5 		ldr	r3, [r3, #12]
 14118 0394 033082E0 		add	r3, r2, r3
 14119 0398 10300BE5 		str	r3, [fp, #-16]
 14120 039c 10301BE5 		ldr	r3, [fp, #-16]
 14121 03a0 0300A0E1 		mov	r0, r3
 14122 03a4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14123 03a8 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 347


 14124              		.loc 1 5576 9 discriminator 1
 14125 03ac 14301BE5 		ldr	r3, [fp, #-20]
 14126 03b0 FF3803E2 		and	r3, r3, #16711680
 14127 03b4 020853E3 		cmp	r3, #131072
 14128 03b8 0100001A 		bne	.L907
 14129              		.loc 1 5576 9 discriminator 5
 14130 03bc 0830E0E3 		mvn	r3, #8
 14131              		.loc 1 5576 9
 14132 03c0 F70000EA 		b	.L885
 14133              	.L907:
 14134              		.loc 1 5576 9 discriminator 6
 14135 03c4 14301BE5 		ldr	r3, [fp, #-20]
 14136 03c8 233CA0E1 		lsr	r3, r3, #24
 14137 03cc 080053E3 		cmp	r3, #8
 14138 03d0 3F00000A 		beq	.L908
 14139              		.loc 1 5576 9 discriminator 7
 14140 03d4 0130E0E3 		mvn	r3, #1
 14141              		.loc 1 5576 9
 14142 03d8 F10000EA 		b	.L885
 14143              	.L905:
 14144              		.loc 1 5576 9 discriminator 2
 14145 03dc 3C301BE5 		ldr	r3, [fp, #-60]
 14146 03e0 2324A0E1 		lsr	r2, r3, #8
 14147 03e4 30301BE5 		ldr	r3, [fp, #-48]
 14148 03e8 143093E5 		ldr	r3, [r3, #20]
 14149 03ec 030052E1 		cmp	r2, r3
 14150 03f0 0100003A 		bcc	.L909
 14151              		.loc 1 5576 9 discriminator 8
 14152 03f4 0230E0E3 		mvn	r3, #2
 14153              		.loc 1 5576 9
 14154 03f8 E90000EA 		b	.L885
 14155              	.L909:
 14156              		.loc 1 5576 9 discriminator 9
 14157 03fc 3C301BE5 		ldr	r3, [fp, #-60]
 14158 0400 2334A0E1 		lsr	r3, r3, #8
 14159 0404 8322A0E1 		lsl	r2, r3, #5
 14160 0408 30301BE5 		ldr	r3, [fp, #-48]
 14161 040c 0C3093E5 		ldr	r3, [r3, #12]
 14162 0410 033082E0 		add	r3, r2, r3
 14163 0414 10300BE5 		str	r3, [fp, #-16]
 14164 0418 10301BE5 		ldr	r3, [fp, #-16]
 14165 041c 0300A0E1 		mov	r0, r3
 14166 0420 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14167 0424 14000BE5 		str	r0, [fp, #-20]
 14168              		.loc 1 5576 9 discriminator 1
 14169 0428 14301BE5 		ldr	r3, [fp, #-20]
 14170 042c FF3803E2 		and	r3, r3, #16711680
 14171 0430 020853E3 		cmp	r3, #131072
 14172 0434 0100001A 		bne	.L910
 14173              		.loc 1 5576 9 discriminator 10
 14174 0438 0830E0E3 		mvn	r3, #8
 14175              		.loc 1 5576 9
 14176 043c D80000EA 		b	.L885
 14177              	.L910:
 14178              		.loc 1 5576 9 discriminator 11
 14179 0440 14301BE5 		ldr	r3, [fp, #-20]
 14180 0444 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 348


 14181 0448 030053E3 		cmp	r3, #3
 14182 044c 0100000A 		beq	.L911
 14183              		.loc 1 5576 9 discriminator 12
 14184 0450 0130E0E3 		mvn	r3, #1
 14185              		.loc 1 5576 9
 14186 0454 D20000EA 		b	.L885
 14187              	.L911:
 14188              		.loc 1 5576 9 discriminator 13
 14189 0458 3C301BE5 		ldr	r3, [fp, #-60]
 14190 045c 7F2003E2 		and	r2, r3, #127
 14191 0460 10301BE5 		ldr	r3, [fp, #-16]
 14192 0464 143093E5 		ldr	r3, [r3, #20]
 14193 0468 030052E1 		cmp	r2, r3
 14194 046c 0100003A 		bcc	.L912
 14195              		.loc 1 5576 9 discriminator 14
 14196 0470 0230E0E3 		mvn	r3, #2
 14197              		.loc 1 5576 9
 14198 0474 CA0000EA 		b	.L885
 14199              	.L912:
 14200              		.loc 1 5576 9 discriminator 15
 14201 0478 3C301BE5 		ldr	r3, [fp, #-60]
 14202 047c 7F3003E2 		and	r3, r3, #127
 14203 0480 8322A0E1 		lsl	r2, r3, #5
 14204 0484 10301BE5 		ldr	r3, [fp, #-16]
 14205 0488 0C3093E5 		ldr	r3, [r3, #12]
 14206 048c 033082E0 		add	r3, r2, r3
 14207 0490 10300BE5 		str	r3, [fp, #-16]
 14208 0494 10301BE5 		ldr	r3, [fp, #-16]
 14209 0498 0300A0E1 		mov	r0, r3
 14210 049c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14211 04a0 14000BE5 		str	r0, [fp, #-20]
 14212              		.loc 1 5576 9 discriminator 1
 14213 04a4 14301BE5 		ldr	r3, [fp, #-20]
 14214 04a8 FF3803E2 		and	r3, r3, #16711680
 14215 04ac 020853E3 		cmp	r3, #131072
 14216 04b0 0100001A 		bne	.L913
 14217              		.loc 1 5576 9 discriminator 16
 14218 04b4 0830E0E3 		mvn	r3, #8
 14219              		.loc 1 5576 9
 14220 04b8 B90000EA 		b	.L885
 14221              	.L913:
 14222              		.loc 1 5576 9 discriminator 17
 14223 04bc 14301BE5 		ldr	r3, [fp, #-20]
 14224 04c0 233CA0E1 		lsr	r3, r3, #24
 14225 04c4 080053E3 		cmp	r3, #8
 14226 04c8 0100000A 		beq	.L908
 14227              		.loc 1 5576 9 discriminator 18
 14228 04cc 0130E0E3 		mvn	r3, #1
 14229              		.loc 1 5576 9
 14230 04d0 B30000EA 		b	.L885
 14231              	.L908:
5577:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Sig*,Sig_Op,Type_Stat);
5578:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SCHED);
 14232              		.loc 1 5578 9 is_stmt 1
 14233 04d4 10301BE5 		ldr	r3, [fp, #-16]
 14234 04d8 083093E5 		ldr	r3, [r3, #8]
 14235 04dc 203003E2 		and	r3, r3, #32
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 349


 14236 04e0 000053E3 		cmp	r3, #0
 14237 04e4 0300001A 		bne	.L914
 14238              		.loc 1 5578 9 is_stmt 0 discriminator 1
 14239 04e8 0630E0E3 		mvn	r3, #6
 14240              		.loc 1 5578 9
 14241 04ec AC0000EA 		b	.L885
 14242              	.L904:
5579:../../Source/Kernel/rme_kernel.c ****     }
5580:../../Source/Kernel/rme_kernel.c ****     else
5581:../../Source/Kernel/rme_kernel.c ****     {
5582:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5583:../../Source/Kernel/rme_kernel.c **** 
5584:../../Source/Kernel/rme_kernel.c ****         Sig_Op=RME_NULL;
 14243              		.loc 1 5584 15 is_stmt 1
 14244 04f0 0030A0E3 		mov	r3, #0
 14245 04f4 10300BE5 		str	r3, [fp, #-16]
 14246              	.L914:
5585:../../Source/Kernel/rme_kernel.c ****     }
5586:../../Source/Kernel/rme_kernel.c **** 
5587:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound. If yes, we just quit */
5588:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 14247              		.loc 1 5588 12
 14248 04f8 08301BE5 		ldr	r3, [fp, #-8]
 14249 04fc 0C3093E5 		ldr	r3, [r3, #12]
 14250              		.loc 1 5588 11
 14251 0500 18300BE5 		str	r3, [fp, #-24]
5589:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 5");
5590:../../Source/Kernel/rme_kernel.c ****     Local_Old=Thread->Sched.Local;
 14252              		.loc 1 5590 14
 14253 0504 18301BE5 		ldr	r3, [fp, #-24]
 14254 0508 143093E5 		ldr	r3, [r3, #20]
 14255 050c 1C300BE5 		str	r3, [fp, #-28]
5591:../../Source/Kernel/rme_kernel.c ****     if(Local_Old!=RME_THD_FREE)
 14256              		.loc 1 5591 7
 14257 0510 1C301BE5 		ldr	r3, [fp, #-28]
 14258 0514 010073E3 		cmn	r3, #1
 14259 0518 0100000A 		beq	.L915
5592:../../Source/Kernel/rme_kernel.c ****     {
5593:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5594:../../Source/Kernel/rme_kernel.c **** 
5595:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14260              		.loc 1 5595 16
 14261 051c CB30E0E3 		mvn	r3, #203
 14262 0520 9F0000EA 		b	.L885
 14263              	.L915:
5596:../../Source/Kernel/rme_kernel.c ****     }
5597:../../Source/Kernel/rme_kernel.c ****     else
5598:../../Source/Kernel/rme_kernel.c ****     {
5599:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5600:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5601:../../Source/Kernel/rme_kernel.c ****     }
5602:../../Source/Kernel/rme_kernel.c ****     
5603:../../Source/Kernel/rme_kernel.c ****     /* See if the parent thread is on the same core with the current processor */
5604:../../Source/Kernel/rme_kernel.c ****     Local_New=RME_CPU_LOCAL();
 14264              		.loc 1 5604 14
 14265 0524 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14266 0528 003040E3 		movt	r3, #:upper16:RME_A7A_Local
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 350


 14267 052c 20300BE5 		str	r3, [fp, #-32]
5605:../../Source/Kernel/rme_kernel.c ****     Scheduler=RME_CAP_GETOBJ(Thd_Sched,struct RME_Thd_Struct*);
 14268              		.loc 1 5605 15
 14269 0530 0C301BE5 		ldr	r3, [fp, #-12]
 14270 0534 0C3093E5 		ldr	r3, [r3, #12]
 14271              		.loc 1 5605 14
 14272 0538 24300BE5 		str	r3, [fp, #-36]
5606:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=Local_New)
 14273              		.loc 1 5606 24
 14274 053c 24301BE5 		ldr	r3, [fp, #-36]
 14275 0540 143093E5 		ldr	r3, [r3, #20]
 14276              		.loc 1 5606 7
 14277 0544 20201BE5 		ldr	r2, [fp, #-32]
 14278 0548 030052E1 		cmp	r2, r3
 14279 054c 0100000A 		beq	.L916
5607:../../Source/Kernel/rme_kernel.c ****     {
5608:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5609:../../Source/Kernel/rme_kernel.c **** 
5610:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14280              		.loc 1 5610 16
 14281 0550 CB30E0E3 		mvn	r3, #203
 14282 0554 920000EA 		b	.L885
 14283              	.L916:
5611:../../Source/Kernel/rme_kernel.c ****     }
5612:../../Source/Kernel/rme_kernel.c ****     else
5613:../../Source/Kernel/rme_kernel.c ****     {
5614:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5615:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5616:../../Source/Kernel/rme_kernel.c ****     }
5617:../../Source/Kernel/rme_kernel.c **** 
5618:../../Source/Kernel/rme_kernel.c ****     /* See if we are trying to bind to ourself - prohibited */
5619:../../Source/Kernel/rme_kernel.c ****     if(Thread==Scheduler)
 14284              		.loc 1 5619 7
 14285 0558 18201BE5 		ldr	r2, [fp, #-24]
 14286 055c 24301BE5 		ldr	r3, [fp, #-36]
 14287 0560 030052E1 		cmp	r2, r3
 14288 0564 0100001A 		bne	.L917
5620:../../Source/Kernel/rme_kernel.c ****     {
5621:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5622:../../Source/Kernel/rme_kernel.c **** 
5623:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 14289              		.loc 1 5623 16
 14290 0568 CE30E0E3 		mvn	r3, #206
 14291 056c 8C0000EA 		b	.L885
 14292              	.L917:
5624:../../Source/Kernel/rme_kernel.c ****     }
5625:../../Source/Kernel/rme_kernel.c ****     else
5626:../../Source/Kernel/rme_kernel.c ****     {
5627:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5628:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5629:../../Source/Kernel/rme_kernel.c ****     }
5630:../../Source/Kernel/rme_kernel.c ****     
5631:../../Source/Kernel/rme_kernel.c ****     /* See if the priority relationship is correct */
5632:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Prio_Max<Prio)
 14293              		.loc 1 5632 24
 14294 0570 24301BE5 		ldr	r3, [fp, #-36]
 14295 0574 243093E5 		ldr	r3, [r3, #36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 351


 14296              		.loc 1 5632 7
 14297 0578 08209BE5 		ldr	r2, [fp, #8]
 14298 057c 030052E1 		cmp	r2, r3
 14299 0580 0100009A 		bls	.L918
5633:../../Source/Kernel/rme_kernel.c ****     {
5634:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5635:../../Source/Kernel/rme_kernel.c **** 
5636:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 14300              		.loc 1 5636 16
 14301 0584 CC30E0E3 		mvn	r3, #204
 14302 0588 850000EA 		b	.L885
 14303              	.L918:
5637:../../Source/Kernel/rme_kernel.c ****     }
5638:../../Source/Kernel/rme_kernel.c ****     else
5639:../../Source/Kernel/rme_kernel.c ****     {
5640:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5641:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5642:../../Source/Kernel/rme_kernel.c ****     }
5643:../../Source/Kernel/rme_kernel.c ****     
5644:../../Source/Kernel/rme_kernel.c ****     /* Check whether the coprocessor context attribute is compatible with this core */
5645:../../Source/Kernel/rme_kernel.c ****     Hyp_Attr=Thread->Ctx.Hyp_Attr;
 14304              		.loc 1 5645 13
 14305 058c 18301BE5 		ldr	r3, [fp, #-24]
 14306 0590 443093E5 		ldr	r3, [r3, #68]
 14307 0594 28300BE5 		str	r3, [fp, #-40]
5646:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5647:../../Source/Kernel/rme_kernel.c ****     if(__RME_Thd_Cop_Check(RME_THD_ATTR(Hyp_Attr))<0)
5648:../../Source/Kernel/rme_kernel.c ****     {
5649:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5650:../../Source/Kernel/rme_kernel.c **** 
5651:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
5652:../../Source/Kernel/rme_kernel.c ****     }
5653:../../Source/Kernel/rme_kernel.c **** #else
5654:../../Source/Kernel/rme_kernel.c ****     if(RME_THD_ATTR(Hyp_Attr)!=0U)
 14308              		.loc 1 5654 8
 14309 0598 28301BE5 		ldr	r3, [fp, #-40]
 14310 059c 0231C3E3 		bic	r3, r3, #-2147483648
 14311              		.loc 1 5654 7
 14312 05a0 000053E3 		cmp	r3, #0
 14313 05a4 0100000A 		beq	.L919
5655:../../Source/Kernel/rme_kernel.c ****     {
5656:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5657:../../Source/Kernel/rme_kernel.c **** 
5658:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 14314              		.loc 1 5658 16
 14315 05a8 0630E0E3 		mvn	r3, #6
 14316 05ac 7C0000EA 		b	.L885
 14317              	.L919:
5659:../../Source/Kernel/rme_kernel.c ****     }
5660:../../Source/Kernel/rme_kernel.c **** #endif
5661:../../Source/Kernel/rme_kernel.c ****     else
5662:../../Source/Kernel/rme_kernel.c ****     {
5663:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5664:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5665:../../Source/Kernel/rme_kernel.c ****     }
5666:../../Source/Kernel/rme_kernel.c **** 
5667:../../Source/Kernel/rme_kernel.c ****     /* Check the hypervisor context buffer passed in to see whether it is good */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 352


5668:../../Source/Kernel/rme_kernel.c ****     if((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U))
 14318              		.loc 1 5668 7
 14319 05b0 0C309BE5 		ldr	r3, [fp, #12]
 14320 05b4 000053E3 		cmp	r3, #0
 14321 05b8 2000000A 		beq	.L920
 14322              		.loc 1 5668 55 discriminator 1
 14323 05bc 28301BE5 		ldr	r3, [fp, #-40]
 14324              		.loc 1 5668 25 discriminator 1
 14325 05c0 000053E3 		cmp	r3, #0
 14326 05c4 1D0000AA 		bge	.L920
5669:../../Source/Kernel/rme_kernel.c ****     {
5670:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5671:../../Source/Kernel/rme_kernel.c ****         
5672:../../Source/Kernel/rme_kernel.c ****         /* Register save area must be aligned to word boundary */
5673:../../Source/Kernel/rme_kernel.c ****         if(RME_IS_ALIGNED(Haddr)!=0U)
 14327              		.loc 1 5673 12
 14328 05c8 0C309BE5 		ldr	r3, [fp, #12]
 14329 05cc 033003E2 		and	r3, r3, #3
 14330              		.loc 1 5673 33
 14331 05d0 000053E3 		cmp	r3, #0
 14332 05d4 0100001A 		bne	.L921
 14333              		.loc 1 5673 33 is_stmt 0 discriminator 1
 14334 05d8 0130A0E3 		mov	r3, #1
 14335 05dc 000000EA 		b	.L922
 14336              	.L921:
 14337              		.loc 1 5673 33 discriminator 2
 14338 05e0 0030A0E3 		mov	r3, #0
 14339              	.L922:
 14340              		.loc 1 5673 11 is_stmt 1 discriminator 4
 14341 05e4 000053E3 		cmp	r3, #0
 14342 05e8 1200000A 		beq	.L923
5674:../../Source/Kernel/rme_kernel.c ****         {
5675:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5676:../../Source/Kernel/rme_kernel.c ****             
5677:../../Source/Kernel/rme_kernel.c ****             /* It needs to be safely accessible to the kernel as well */
5678:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5679:../../Source/Kernel/rme_kernel.c ****             if(Haddr<RME_HYP_VA_BASE)
 14343              		.loc 1 5679 15
 14344 05ec 0C309BE5 		ldr	r3, [fp, #12]
 14345 05f0 1E0273E3 		cmn	r3, #-536870911
 14346 05f4 0100008A 		bhi	.L924
5680:../../Source/Kernel/rme_kernel.c ****             {
5681:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
5682:../../Source/Kernel/rme_kernel.c **** 
5683:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PTH_HADDR;
 14347              		.loc 1 5683 24
 14348 05f8 CA30E0E3 		mvn	r3, #202
 14349 05fc 680000EA 		b	.L885
 14350              	.L924:
5684:../../Source/Kernel/rme_kernel.c ****             }
5685:../../Source/Kernel/rme_kernel.c ****             else
5686:../../Source/Kernel/rme_kernel.c ****             {
5687:../../Source/Kernel/rme_kernel.c **** #endif
5688:../../Source/Kernel/rme_kernel.c ****                 End=Haddr+RME_REG_SIZE(RME_THD_ATTR(Thread->Ctx.Hyp_Attr));
 14351              		.loc 1 5688 20
 14352 0600 0C309BE5 		ldr	r3, [fp, #12]
 14353 0604 443083E2 		add	r3, r3, #68
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 353


 14354 0608 2C300BE5 		str	r3, [fp, #-44]
5689:../../Source/Kernel/rme_kernel.c ****                 if((End<=Haddr)||(End>(RME_HYP_VA_BASE+RME_HYP_VA_SIZE)))
 14355              		.loc 1 5689 19
 14356 060c 2C201BE5 		ldr	r2, [fp, #-44]
 14357 0610 0C309BE5 		ldr	r3, [fp, #12]
 14358 0614 030052E1 		cmp	r2, r3
 14359 0618 0400009A 		bls	.L925
 14360              		.loc 1 5689 32 discriminator 1
 14361 061c 2C201BE5 		ldr	r2, [fp, #-44]
 14362 0620 0030A0E3 		mov	r3, #0
 14363 0624 023042E3 		movt	r3, 8194
 14364 0628 030052E1 		cmp	r2, r3
 14365 062c 1100009A 		bls	.L938
 14366              	.L925:
5690:../../Source/Kernel/rme_kernel.c ****                 {
5691:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5692:../../Source/Kernel/rme_kernel.c **** 
5693:../../Source/Kernel/rme_kernel.c ****                     return RME_ERR_PTH_HADDR;
 14367              		.loc 1 5693 28
 14368 0630 CA30E0E3 		mvn	r3, #202
 14369 0634 5A0000EA 		b	.L885
 14370              	.L923:
5694:../../Source/Kernel/rme_kernel.c ****                 }
5695:../../Source/Kernel/rme_kernel.c ****                 else
5696:../../Source/Kernel/rme_kernel.c ****                 {
5697:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5698:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
5699:../../Source/Kernel/rme_kernel.c ****                 }
5700:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5701:../../Source/Kernel/rme_kernel.c ****             }
5702:../../Source/Kernel/rme_kernel.c **** #endif
5703:../../Source/Kernel/rme_kernel.c ****         }
5704:../../Source/Kernel/rme_kernel.c ****         /* Not aligned, exiting */
5705:../../Source/Kernel/rme_kernel.c ****         else
5706:../../Source/Kernel/rme_kernel.c ****         {
5707:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5708:../../Source/Kernel/rme_kernel.c **** 
5709:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_HADDR;
 14371              		.loc 1 5709 20
 14372 0638 CA30E0E3 		mvn	r3, #202
 14373 063c 580000EA 		b	.L885
 14374              	.L920:
5710:../../Source/Kernel/rme_kernel.c ****         }
5711:../../Source/Kernel/rme_kernel.c ****     }
5712:../../Source/Kernel/rme_kernel.c ****     /* We don't allow setting HYP addr for normal threads, nor do we allow
5713:../../Source/Kernel/rme_kernel.c ****      * setting HYP addr to NULL for hypervisor-managed threads. */
5714:../../Source/Kernel/rme_kernel.c ****     else if(((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)==0U))||
 14375              		.loc 1 5714 12
 14376 0640 0C309BE5 		ldr	r3, [fp, #12]
 14377 0644 000053E3 		cmp	r3, #0
 14378 0648 0200000A 		beq	.L928
 14379              		.loc 1 5714 61 discriminator 1
 14380 064c 28301BE5 		ldr	r3, [fp, #-40]
 14381              		.loc 1 5714 31 discriminator 1
 14382 0650 000053E3 		cmp	r3, #0
 14383 0654 050000AA 		bge	.L929
 14384              	.L928:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 354


 14385              		.loc 1 5714 67 discriminator 3
 14386 0658 0C309BE5 		ldr	r3, [fp, #12]
 14387 065c 000053E3 		cmp	r3, #0
 14388 0660 0500001A 		bne	.L927
5715:../../Source/Kernel/rme_kernel.c ****             ((Haddr==RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U)))
 14389              		.loc 1 5715 61
 14390 0664 28301BE5 		ldr	r3, [fp, #-40]
 14391              		.loc 1 5715 31
 14392 0668 000053E3 		cmp	r3, #0
 14393 066c 020000AA 		bge	.L927
 14394              	.L929:
5716:../../Source/Kernel/rme_kernel.c ****     {
5717:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5718:../../Source/Kernel/rme_kernel.c **** 
5719:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
 14395              		.loc 1 5719 16
 14396 0670 CA30E0E3 		mvn	r3, #202
 14397 0674 4A0000EA 		b	.L885
 14398              	.L938:
5673:../../Source/Kernel/rme_kernel.c ****         {
 14399              		.loc 1 5673 11
 14400 0678 00F020E3 		nop
 14401              	.L927:
5720:../../Source/Kernel/rme_kernel.c ****     }
5721:../../Source/Kernel/rme_kernel.c ****     else
5722:../../Source/Kernel/rme_kernel.c ****     {
5723:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5724:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5725:../../Source/Kernel/rme_kernel.c ****     }
5726:../../Source/Kernel/rme_kernel.c **** 
5727:../../Source/Kernel/rme_kernel.c ****     /* Try to bind the thread */
5728:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)&(Thread->Sched.Local),
 14402              		.loc 1 5728 8
 14403 067c 18301BE5 		ldr	r3, [fp, #-24]
 14404 0680 143083E2 		add	r3, r3, #20
 14405 0684 1C101BE5 		ldr	r1, [fp, #-28]
 14406 0688 20201BE5 		ldr	r2, [fp, #-32]
 14407 068c 0300A0E1 		mov	r0, r3
 14408 0690 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 14409 0694 0030A0E1 		mov	r3, r0
 14410              		.loc 1 5728 7 discriminator 1
 14411 0698 000053E3 		cmp	r3, #0
 14412 069c 0100001A 		bne	.L930
5729:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_Old,
5730:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_New)==RME_CASFAIL)
5731:../../Source/Kernel/rme_kernel.c ****     {
5732:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5733:../../Source/Kernel/rme_kernel.c **** 
5734:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 14413              		.loc 1 5734 16
 14414 06a0 C930E0E3 		mvn	r3, #201
 14415 06a4 3E0000EA 		b	.L885
 14416              	.L930:
5735:../../Source/Kernel/rme_kernel.c ****     }
5736:../../Source/Kernel/rme_kernel.c ****     else
5737:../../Source/Kernel/rme_kernel.c ****     {
5738:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 355


5739:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5740:../../Source/Kernel/rme_kernel.c ****     }
5741:../../Source/Kernel/rme_kernel.c ****     
5742:../../Source/Kernel/rme_kernel.c ****     /* Increase the reference count of the scheduler thread struct - same core */
5743:../../Source/Kernel/rme_kernel.c ****     Scheduler->Sched.Sched_Ref++;
 14417              		.loc 1 5743 21
 14418 06a8 24301BE5 		ldr	r3, [fp, #-36]
 14419 06ac 303093E5 		ldr	r3, [r3, #48]
 14420              		.loc 1 5743 31
 14421 06b0 012083E2 		add	r2, r3, #1
 14422 06b4 24301BE5 		ldr	r3, [fp, #-36]
 14423 06b8 302083E5 		str	r2, [r3, #48]
5744:../../Source/Kernel/rme_kernel.c ****     
5745:../../Source/Kernel/rme_kernel.c ****     /* Bind successful and finish the work off. No need to worry about other cores'
5746:../../Source/Kernel/rme_kernel.c ****      * operations on this thread because this thread is already bound to this core.
5747:../../Source/Kernel/rme_kernel.c ****      * TID is half-word parameter-wise, but is stored and returned as a full word. */
5748:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd=Scheduler;
 14424              		.loc 1 5748 28
 14425 06bc 18301BE5 		ldr	r3, [fp, #-24]
 14426 06c0 24201BE5 		ldr	r2, [fp, #-36]
 14427 06c4 342083E5 		str	r2, [r3, #52]
5749:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 14428              		.loc 1 5749 23
 14429 06c8 18301BE5 		ldr	r3, [fp, #-24]
 14430 06cc 08209BE5 		ldr	r2, [fp, #8]
 14431 06d0 202083E5 		str	r2, [r3, #32]
5750:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=(rme_ptr_t)TID;
 14432              		.loc 1 5750 23
 14433 06d4 04209BE5 		ldr	r2, [fp, #4]
 14434              		.loc 1 5750 22
 14435 06d8 18301BE5 		ldr	r3, [fp, #-24]
 14436 06dc 102083E5 		str	r2, [r3, #16]
5751:../../Source/Kernel/rme_kernel.c ****     
5752:../../Source/Kernel/rme_kernel.c ****     /* The state must be TIMEOUT or EXCPEND at this point */
5753:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT((Thread->Sched.State==RME_THD_TIMEOUT)||
 14437              		.loc 1 5753 5
 14438 06e0 18301BE5 		ldr	r3, [fp, #-24]
 14439 06e4 1C3093E5 		ldr	r3, [r3, #28]
 14440 06e8 020053E3 		cmp	r3, #2
 14441 06ec 0C00000A 		beq	.L931
 14442              		.loc 1 5753 5 is_stmt 0 discriminator 1
 14443 06f0 18301BE5 		ldr	r3, [fp, #-24]
 14444 06f4 1C3093E5 		ldr	r3, [r3, #28]
 14445 06f8 030053E3 		cmp	r3, #3
 14446 06fc 0800000A 		beq	.L931
 14447              		.loc 1 5753 5 discriminator 2
 14448 0700 003000E3 		movw	r3, #:lower16:.LC2
 14449 0704 003040E3 		movt	r3, #:upper16:.LC2
 14450 0708 002000E3 		movw	r2, #:lower16:.LC3
 14451 070c 002040E3 		movt	r2, #:upper16:.LC3
 14452 0710 791601E3 		movw	r1, #5753
 14453 0714 000000E3 		movw	r0, #:lower16:.LC4
 14454 0718 000040E3 		movt	r0, #:upper16:.LC4
 14455 071c FEFFFFEB 		bl	RME_Log
 14456              	.L932:
 14457              		.loc 1 5753 5
 14458 0720 FEFFFFEA 		b	.L932
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 356


 14459              	.L931:
5754:../../Source/Kernel/rme_kernel.c ****                (Thread->Sched.State==RME_THD_EXCPEND));
5755:../../Source/Kernel/rme_kernel.c **** 
5756:../../Source/Kernel/rme_kernel.c ****     /* Tie the signal endpoint to it if not zero */
5757:../../Source/Kernel/rme_kernel.c ****     if(Sig_Op==0U)
 14460              		.loc 1 5757 7 is_stmt 1
 14461 0724 10301BE5 		ldr	r3, [fp, #-16]
 14462 0728 000053E3 		cmp	r3, #0
 14463 072c 0300001A 		bne	.L933
5758:../../Source/Kernel/rme_kernel.c ****     {
5759:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5760:../../Source/Kernel/rme_kernel.c **** 
5761:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=0U;
 14464              		.loc 1 5761 32
 14465 0730 18301BE5 		ldr	r3, [fp, #-24]
 14466 0734 0020A0E3 		mov	r2, #0
 14467 0738 382083E5 		str	r2, [r3, #56]
 14468 073c 100000EA 		b	.L934
 14469              	.L933:
5762:../../Source/Kernel/rme_kernel.c ****     }
5763:../../Source/Kernel/rme_kernel.c ****     else
5764:../../Source/Kernel/rme_kernel.c ****     {
5765:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5766:../../Source/Kernel/rme_kernel.c **** 
5767:../../Source/Kernel/rme_kernel.c ****         /* Convert to root cap */
5768:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 14470              		.loc 1 5768 33
 14471 0740 10301BE5 		ldr	r3, [fp, #-16]
 14472 0744 003093E5 		ldr	r3, [r3]
 14473 0748 7330FFE6 		uxth	r3, r3
 14474 074c 000053E3 		cmp	r3, #0
 14475 0750 0200000A 		beq	.L935
 14476              		.loc 1 5768 33 is_stmt 0 discriminator 1
 14477 0754 10301BE5 		ldr	r3, [fp, #-16]
 14478 0758 043093E5 		ldr	r3, [r3, #4]
 14479 075c 000000EA 		b	.L936
 14480              	.L935:
 14481              		.loc 1 5768 33 discriminator 2
 14482 0760 10301BE5 		ldr	r3, [fp, #-16]
 14483              	.L936:
 14484              		.loc 1 5768 32 is_stmt 1 discriminator 4
 14485 0764 18201BE5 		ldr	r2, [fp, #-24]
 14486 0768 383082E5 		str	r3, [r2, #56]
5769:../../Source/Kernel/rme_kernel.c ****         
5770:../../Source/Kernel/rme_kernel.c ****         /* Increase refcnt */
5771:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),1U);
 14487              		.loc 1 5771 9
 14488 076c 18301BE5 		ldr	r3, [fp, #-24]
 14489 0770 383093E5 		ldr	r3, [r3, #56]
 14490 0774 043083E2 		add	r3, r3, #4
 14491 0778 0110A0E3 		mov	r1, #1
 14492 077c 0300A0E1 		mov	r0, r3
 14493 0780 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14494              	.L934:
5772:../../Source/Kernel/rme_kernel.c ****     }
5773:../../Source/Kernel/rme_kernel.c ****     
5774:../../Source/Kernel/rme_kernel.c ****     /* Set hypervisor context address if we're hypervisor-managed */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 357


5775:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)!=0U)
 14495              		.loc 1 5775 20
 14496 0784 18301BE5 		ldr	r3, [fp, #-24]
 14497 0788 443093E5 		ldr	r3, [r3, #68]
 14498              		.loc 1 5775 7
 14499 078c 000053E3 		cmp	r3, #0
 14500 0790 020000AA 		bge	.L937
5776:../../Source/Kernel/rme_kernel.c ****     {
5777:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5778:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)Haddr;
 14501              		.loc 1 5778 25
 14502 0794 0C209BE5 		ldr	r2, [fp, #12]
 14503              		.loc 1 5778 24
 14504 0798 18301BE5 		ldr	r3, [fp, #-24]
 14505 079c 482083E5 		str	r2, [r3, #72]
 14506              	.L937:
5779:../../Source/Kernel/rme_kernel.c ****     }
5780:../../Source/Kernel/rme_kernel.c ****     else
5781:../../Source/Kernel/rme_kernel.c ****     {
5782:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5783:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5784:../../Source/Kernel/rme_kernel.c ****     }
5785:../../Source/Kernel/rme_kernel.c ****     
5786:../../Source/Kernel/rme_kernel.c ****     return 0;
 14507              		.loc 1 5786 12
 14508 07a0 0030A0E3 		mov	r3, #0
 14509              	.L885:
5787:../../Source/Kernel/rme_kernel.c **** }
 14510              		.loc 1 5787 1
 14511 07a4 0300A0E1 		mov	r0, r3
 14512 07a8 04D04BE2 		sub	sp, fp, #4
 14513              		.cfi_def_cfa 13, 8
 14514              		@ sp needed
 14515 07ac 0088BDE8 		pop	{fp, pc}
 14516              		.cfi_endproc
 14517              	.LFE58:
 14519              		.section	.text._RME_Thd_Sched_Free,"ax",%progbits
 14520              		.align	2
 14521              		.syntax unified
 14522              		.arm
 14524              	_RME_Thd_Sched_Free:
 14525              	.LFB59:
5788:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Bind ******************************************/
5789:../../Source/Kernel/rme_kernel.c **** 
5790:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Free ***********************************************
5791:../../Source/Kernel/rme_kernel.c **** Description : Free a thread from its current processor binding. This function
5792:../../Source/Kernel/rme_kernel.c ****               can only be executed from the same core on with the thread.
5793:../../Source/Kernel/rme_kernel.c ****               To free a thread from a core, it must not be the scheduler of
5794:../../Source/Kernel/rme_kernel.c ****               someone else. It could have pending scheduler notifications to
5795:../../Source/Kernel/rme_kernel.c ****               its parent though.
5796:../../Source/Kernel/rme_kernel.c ****               This system call can cause a potential context switch.
5797:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5798:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
5799:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5800:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5801:../../Source/Kernel/rme_kernel.c **** Output      : None.
5802:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 358


5803:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5804:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Free(struct RME_Cap_Cpt* Cpt, 
5805:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5806:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd)
5807:../../Source/Kernel/rme_kernel.c **** {
 14526              		.loc 1 5807 1
 14527              		.cfi_startproc
 14528              		@ args = 0, pretend = 0, frame = 32
 14529              		@ frame_needed = 1, uses_anonymous_args = 0
 14530 0000 00482DE9 		push	{fp, lr}
 14531              		.cfi_def_cfa_offset 8
 14532              		.cfi_offset 11, -8
 14533              		.cfi_offset 14, -4
 14534 0004 04B08DE2 		add	fp, sp, #4
 14535              		.cfi_def_cfa 11, 4
 14536 0008 20D04DE2 		sub	sp, sp, #32
 14537 000c 18000BE5 		str	r0, [fp, #-24]
 14538 0010 1C100BE5 		str	r1, [fp, #-28]
 14539 0014 20200BE5 		str	r2, [fp, #-32]
5808:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5809:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5810:../../Source/Kernel/rme_kernel.c ****     /* These are used to free the thread */
5811:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5812:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5813:../../Source/Kernel/rme_kernel.c ****     
5814:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5815:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14540              		.loc 1 5815 5
 14541 0018 20301BE5 		ldr	r3, [fp, #-32]
 14542 001c 803003E2 		and	r3, r3, #128
 14543 0020 000053E3 		cmp	r3, #0
 14544 0024 1C00001A 		bne	.L940
 14545              		.loc 1 5815 5 is_stmt 0 discriminator 1
 14546 0028 18301BE5 		ldr	r3, [fp, #-24]
 14547 002c 142093E5 		ldr	r2, [r3, #20]
 14548 0030 20301BE5 		ldr	r3, [fp, #-32]
 14549 0034 030052E1 		cmp	r2, r3
 14550 0038 0100008A 		bhi	.L941
 14551              		.loc 1 5815 5 discriminator 3
 14552 003c 0230E0E3 		mvn	r3, #2
 14553              		.loc 1 5815 5
 14554 0040 D90000EA 		b	.L942
 14555              	.L941:
 14556              		.loc 1 5815 5 discriminator 4
 14557 0044 20301BE5 		ldr	r3, [fp, #-32]
 14558 0048 8322A0E1 		lsl	r2, r3, #5
 14559 004c 18301BE5 		ldr	r3, [fp, #-24]
 14560 0050 0C3093E5 		ldr	r3, [r3, #12]
 14561 0054 033082E0 		add	r3, r2, r3
 14562 0058 08300BE5 		str	r3, [fp, #-8]
 14563 005c 08301BE5 		ldr	r3, [fp, #-8]
 14564 0060 0300A0E1 		mov	r0, r3
 14565 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14566 0068 0C000BE5 		str	r0, [fp, #-12]
 14567              		.loc 1 5815 5 discriminator 1
 14568 006c 0C301BE5 		ldr	r3, [fp, #-12]
 14569 0070 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 359


 14570 0074 020853E3 		cmp	r3, #131072
 14571 0078 0100001A 		bne	.L943
 14572              		.loc 1 5815 5 discriminator 5
 14573 007c 0830E0E3 		mvn	r3, #8
 14574              		.loc 1 5815 5
 14575 0080 C90000EA 		b	.L942
 14576              	.L943:
 14577              		.loc 1 5815 5 discriminator 6
 14578 0084 0C301BE5 		ldr	r3, [fp, #-12]
 14579 0088 233CA0E1 		lsr	r3, r3, #24
 14580 008c 060053E3 		cmp	r3, #6
 14581 0090 3F00000A 		beq	.L944
 14582              		.loc 1 5815 5 discriminator 7
 14583 0094 0130E0E3 		mvn	r3, #1
 14584              		.loc 1 5815 5
 14585 0098 C30000EA 		b	.L942
 14586              	.L940:
 14587              		.loc 1 5815 5 discriminator 2
 14588 009c 20301BE5 		ldr	r3, [fp, #-32]
 14589 00a0 2324A0E1 		lsr	r2, r3, #8
 14590 00a4 18301BE5 		ldr	r3, [fp, #-24]
 14591 00a8 143093E5 		ldr	r3, [r3, #20]
 14592 00ac 030052E1 		cmp	r2, r3
 14593 00b0 0100003A 		bcc	.L945
 14594              		.loc 1 5815 5 discriminator 8
 14595 00b4 0230E0E3 		mvn	r3, #2
 14596              		.loc 1 5815 5
 14597 00b8 BB0000EA 		b	.L942
 14598              	.L945:
 14599              		.loc 1 5815 5 discriminator 9
 14600 00bc 20301BE5 		ldr	r3, [fp, #-32]
 14601 00c0 2334A0E1 		lsr	r3, r3, #8
 14602 00c4 8322A0E1 		lsl	r2, r3, #5
 14603 00c8 18301BE5 		ldr	r3, [fp, #-24]
 14604 00cc 0C3093E5 		ldr	r3, [r3, #12]
 14605 00d0 033082E0 		add	r3, r2, r3
 14606 00d4 08300BE5 		str	r3, [fp, #-8]
 14607 00d8 08301BE5 		ldr	r3, [fp, #-8]
 14608 00dc 0300A0E1 		mov	r0, r3
 14609 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14610 00e4 0C000BE5 		str	r0, [fp, #-12]
 14611              		.loc 1 5815 5 discriminator 1
 14612 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 14613 00ec FF3803E2 		and	r3, r3, #16711680
 14614 00f0 020853E3 		cmp	r3, #131072
 14615 00f4 0100001A 		bne	.L946
 14616              		.loc 1 5815 5 discriminator 10
 14617 00f8 0830E0E3 		mvn	r3, #8
 14618              		.loc 1 5815 5
 14619 00fc AA0000EA 		b	.L942
 14620              	.L946:
 14621              		.loc 1 5815 5 discriminator 11
 14622 0100 0C301BE5 		ldr	r3, [fp, #-12]
 14623 0104 233CA0E1 		lsr	r3, r3, #24
 14624 0108 030053E3 		cmp	r3, #3
 14625 010c 0100000A 		beq	.L947
 14626              		.loc 1 5815 5 discriminator 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 360


 14627 0110 0130E0E3 		mvn	r3, #1
 14628              		.loc 1 5815 5
 14629 0114 A40000EA 		b	.L942
 14630              	.L947:
 14631              		.loc 1 5815 5 discriminator 13
 14632 0118 20301BE5 		ldr	r3, [fp, #-32]
 14633 011c 7F2003E2 		and	r2, r3, #127
 14634 0120 08301BE5 		ldr	r3, [fp, #-8]
 14635 0124 143093E5 		ldr	r3, [r3, #20]
 14636 0128 030052E1 		cmp	r2, r3
 14637 012c 0100003A 		bcc	.L948
 14638              		.loc 1 5815 5 discriminator 14
 14639 0130 0230E0E3 		mvn	r3, #2
 14640              		.loc 1 5815 5
 14641 0134 9C0000EA 		b	.L942
 14642              	.L948:
 14643              		.loc 1 5815 5 discriminator 15
 14644 0138 20301BE5 		ldr	r3, [fp, #-32]
 14645 013c 7F3003E2 		and	r3, r3, #127
 14646 0140 8322A0E1 		lsl	r2, r3, #5
 14647 0144 08301BE5 		ldr	r3, [fp, #-8]
 14648 0148 0C3093E5 		ldr	r3, [r3, #12]
 14649 014c 033082E0 		add	r3, r2, r3
 14650 0150 08300BE5 		str	r3, [fp, #-8]
 14651 0154 08301BE5 		ldr	r3, [fp, #-8]
 14652 0158 0300A0E1 		mov	r0, r3
 14653 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14654 0160 0C000BE5 		str	r0, [fp, #-12]
 14655              		.loc 1 5815 5 discriminator 1
 14656 0164 0C301BE5 		ldr	r3, [fp, #-12]
 14657 0168 FF3803E2 		and	r3, r3, #16711680
 14658 016c 020853E3 		cmp	r3, #131072
 14659 0170 0100001A 		bne	.L949
 14660              		.loc 1 5815 5 discriminator 16
 14661 0174 0830E0E3 		mvn	r3, #8
 14662              		.loc 1 5815 5
 14663 0178 8B0000EA 		b	.L942
 14664              	.L949:
 14665              		.loc 1 5815 5 discriminator 17
 14666 017c 0C301BE5 		ldr	r3, [fp, #-12]
 14667 0180 233CA0E1 		lsr	r3, r3, #24
 14668 0184 060053E3 		cmp	r3, #6
 14669 0188 0100000A 		beq	.L944
 14670              		.loc 1 5815 5 discriminator 18
 14671 018c 0130E0E3 		mvn	r3, #1
 14672              		.loc 1 5815 5
 14673 0190 850000EA 		b	.L942
 14674              	.L944:
5816:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5817:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5818:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_FREE);
 14675              		.loc 1 5818 5 is_stmt 1
 14676 0194 08301BE5 		ldr	r3, [fp, #-8]
 14677 0198 083093E5 		ldr	r3, [r3, #8]
 14678 019c 103003E2 		and	r3, r3, #16
 14679 01a0 000053E3 		cmp	r3, #0
 14680 01a4 0100001A 		bne	.L950
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 361


 14681              		.loc 1 5818 5 is_stmt 0 discriminator 1
 14682 01a8 0630E0E3 		mvn	r3, #6
 14683              		.loc 1 5818 5
 14684 01ac 7E0000EA 		b	.L942
 14685              	.L950:
5819:../../Source/Kernel/rme_kernel.c ****     
5820:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound to this core */
5821:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14686              		.loc 1 5821 10 is_stmt 1
 14687 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14688 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14689 01b8 10300BE5 		str	r3, [fp, #-16]
5822:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 14690              		.loc 1 5822 48
 14691 01bc 08301BE5 		ldr	r3, [fp, #-8]
 14692 01c0 0C3093E5 		ldr	r3, [r3, #12]
 14693              		.loc 1 5822 11
 14694 01c4 14300BE5 		str	r3, [fp, #-20]
5823:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 14695              		.loc 1 5823 21
 14696 01c8 14301BE5 		ldr	r3, [fp, #-20]
 14697 01cc 143093E5 		ldr	r3, [r3, #20]
 14698              		.loc 1 5823 7
 14699 01d0 10201BE5 		ldr	r2, [fp, #-16]
 14700 01d4 030052E1 		cmp	r2, r3
 14701 01d8 0100000A 		beq	.L951
5824:../../Source/Kernel/rme_kernel.c ****     {
5825:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5826:../../Source/Kernel/rme_kernel.c **** 
5827:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14702              		.loc 1 5827 16
 14703 01dc CB30E0E3 		mvn	r3, #203
 14704 01e0 710000EA 		b	.L942
 14705              	.L951:
5828:../../Source/Kernel/rme_kernel.c ****     }
5829:../../Source/Kernel/rme_kernel.c ****     else
5830:../../Source/Kernel/rme_kernel.c ****     {
5831:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5832:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5833:../../Source/Kernel/rme_kernel.c ****     }
5834:../../Source/Kernel/rme_kernel.c ****     
5835:../../Source/Kernel/rme_kernel.c ****     /* Am I referenced by someone as a scheduler? If yes, we cannot unbind. Because
5836:../../Source/Kernel/rme_kernel.c ****      * boot-time thread's refcnt will never be 0, thus they will never pass this checking */
5837:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Ref!=0U)
 14706              		.loc 1 5837 21
 14707 01e4 14301BE5 		ldr	r3, [fp, #-20]
 14708 01e8 303093E5 		ldr	r3, [r3, #48]
 14709              		.loc 1 5837 7
 14710 01ec 000053E3 		cmp	r3, #0
 14711 01f0 0100000A 		beq	.L952
5838:../../Source/Kernel/rme_kernel.c ****     {
5839:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5840:../../Source/Kernel/rme_kernel.c **** 
5841:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_REFCNT;
 14712              		.loc 1 5841 16
 14713 01f4 CD30E0E3 		mvn	r3, #205
 14714 01f8 6B0000EA 		b	.L942
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 362


 14715              	.L952:
5842:../../Source/Kernel/rme_kernel.c ****     }
5843:../../Source/Kernel/rme_kernel.c ****     else
5844:../../Source/Kernel/rme_kernel.c ****     {
5845:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5846:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5847:../../Source/Kernel/rme_kernel.c ****     }
5848:../../Source/Kernel/rme_kernel.c **** 
5849:../../Source/Kernel/rme_kernel.c ****     /* Decrease the parent's reference count - on the same core */
5850:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd->Sched.Sched_Ref--;
 14716              		.loc 1 5850 18
 14717 01fc 14301BE5 		ldr	r3, [fp, #-20]
 14718 0200 343093E5 		ldr	r3, [r3, #52]
 14719              		.loc 1 5850 35
 14720 0204 302093E5 		ldr	r2, [r3, #48]
 14721              		.loc 1 5850 45
 14722 0208 012042E2 		sub	r2, r2, #1
 14723 020c 302083E5 		str	r2, [r3, #48]
5851:../../Source/Kernel/rme_kernel.c **** 
5852:../../Source/Kernel/rme_kernel.c ****     /* See if we have any events sent to the parent. If yes, remove that event */
5853:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Notif.Next!=&(Thread->Sched.Notif))
 14724              		.loc 1 5853 27
 14725 0210 14301BE5 		ldr	r3, [fp, #-20]
 14726 0214 082093E5 		ldr	r2, [r3, #8]
 14727              		.loc 1 5853 34
 14728 0218 14301BE5 		ldr	r3, [fp, #-20]
 14729 021c 083083E2 		add	r3, r3, #8
 14730              		.loc 1 5853 7
 14731 0220 030052E1 		cmp	r2, r3
 14732 0224 0A00000A 		beq	.L953
5854:../../Source/Kernel/rme_kernel.c ****     {
5855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5856:../../Source/Kernel/rme_kernel.c **** 
5857:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 14733              		.loc 1 5857 9
 14734 0228 14301BE5 		ldr	r3, [fp, #-20]
 14735 022c 0C2093E5 		ldr	r2, [r3, #12]
 14736 0230 14301BE5 		ldr	r3, [fp, #-20]
 14737 0234 083093E5 		ldr	r3, [r3, #8]
 14738 0238 0310A0E1 		mov	r1, r3
 14739 023c 0200A0E1 		mov	r0, r2
 14740 0240 FEFFFFEB 		bl	_RME_List_Del
5858:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Thread->Sched.Notif));
 14741              		.loc 1 5858 9
 14742 0244 14301BE5 		ldr	r3, [fp, #-20]
 14743 0248 083083E2 		add	r3, r3, #8
 14744 024c 0300A0E1 		mov	r0, r3
 14745 0250 FEFFFFEB 		bl	_RME_List_Crt
 14746              	.L953:
5859:../../Source/Kernel/rme_kernel.c ****     }
5860:../../Source/Kernel/rme_kernel.c ****     else
5861:../../Source/Kernel/rme_kernel.c ****     {
5862:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5863:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5864:../../Source/Kernel/rme_kernel.c ****     }
5865:../../Source/Kernel/rme_kernel.c **** 
5866:../../Source/Kernel/rme_kernel.c ****     /* If we have an scheduler event endpoint, release it */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 363


5867:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Sig!=RME_NULL)
 14747              		.loc 1 5867 21
 14748 0254 14301BE5 		ldr	r3, [fp, #-20]
 14749 0258 383093E5 		ldr	r3, [r3, #56]
 14750              		.loc 1 5867 7
 14751 025c 000053E3 		cmp	r3, #0
 14752 0260 0500000A 		beq	.L954
5868:../../Source/Kernel/rme_kernel.c ****     {
5869:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5870:../../Source/Kernel/rme_kernel.c **** 
5871:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),-1);
 14753              		.loc 1 5871 9
 14754 0264 14301BE5 		ldr	r3, [fp, #-20]
 14755 0268 383093E5 		ldr	r3, [r3, #56]
 14756 026c 043083E2 		add	r3, r3, #4
 14757 0270 0010E0E3 		mvn	r1, #0
 14758 0274 0300A0E1 		mov	r0, r3
 14759 0278 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14760              	.L954:
5872:../../Source/Kernel/rme_kernel.c ****     }
5873:../../Source/Kernel/rme_kernel.c ****     else
5874:../../Source/Kernel/rme_kernel.c ****     {
5875:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5876:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5877:../../Source/Kernel/rme_kernel.c ****     }
5878:../../Source/Kernel/rme_kernel.c **** 
5879:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5880:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 14761              		.loc 1 5880 5
 14762 027c 0010A0E3 		mov	r1, #0
 14763 0280 1C001BE5 		ldr	r0, [fp, #-28]
 14764 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5881:../../Source/Kernel/rme_kernel.c ****     
5882:../../Source/Kernel/rme_kernel.c ****     /* If the thread is ready, kick it out of the run queue. If it is blocked on
5883:../../Source/Kernel/rme_kernel.c ****      * some endpoint, end the blocking and set the return value to RME_ERR_SIV_FREE.
5884:../../Source/Kernel/rme_kernel.c ****      * If the thread is killed due to a fault, we will not clear the fault here, and
5885:../../Source/Kernel/rme_kernel.c ****      * we will wait for the Exec_Set to clear it. No scheduler notifications are sent
5886:../../Source/Kernel/rme_kernel.c ****      * because the thread is being freed and notifications at this point are useless. */
5887:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_READY)
 14765              		.loc 1 5887 21
 14766 0288 14301BE5 		ldr	r3, [fp, #-20]
 14767 028c 1C3093E5 		ldr	r3, [r3, #28]
 14768              		.loc 1 5887 7
 14769 0290 000053E3 		cmp	r3, #0
 14770 0294 0500001A 		bne	.L955
5888:../../Source/Kernel/rme_kernel.c ****     {
5889:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5890:../../Source/Kernel/rme_kernel.c **** 
5891:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue and timeout but don't notify parent */
5892:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thread);
 14771              		.loc 1 5892 9
 14772 0298 14001BE5 		ldr	r0, [fp, #-20]
 14773 029c FEFFFFEB 		bl	_RME_Run_Del
5893:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14774              		.loc 1 5893 28
 14775 02a0 14301BE5 		ldr	r3, [fp, #-20]
 14776 02a4 0220A0E3 		mov	r2, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 364


 14777 02a8 1C2083E5 		str	r2, [r3, #28]
 14778 02ac 130000EA 		b	.L956
 14779              	.L955:
5894:../../Source/Kernel/rme_kernel.c ****     }
5895:../../Source/Kernel/rme_kernel.c ****     /* BLOCKED */
5896:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_BLOCKED)
 14780              		.loc 1 5896 26
 14781 02b0 14301BE5 		ldr	r3, [fp, #-20]
 14782 02b4 1C3093E5 		ldr	r3, [r3, #28]
 14783              		.loc 1 5896 12
 14784 02b8 010053E3 		cmp	r3, #1
 14785 02bc 0F00001A 		bne	.L956
5897:../../Source/Kernel/rme_kernel.c ****     {
5898:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5899:../../Source/Kernel/rme_kernel.c ****         
5900:../../Source/Kernel/rme_kernel.c ****         /* If it got here, the thread that is operated on cannot be the current 
5901:../../Source/Kernel/rme_kernel.c ****          * thread, so we are not overwriting the return value of the caller. */
5902:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thread->Ctx.Reg->Reg),RME_ERR_SIV_FREE);
 14786              		.loc 1 5902 43
 14787 02c0 14301BE5 		ldr	r3, [fp, #-20]
 14788 02c4 483093E5 		ldr	r3, [r3, #72]
 14789              		.loc 1 5902 9
 14790 02c8 CE1E0FE3 		movw	r1, #65230
 14791 02cc FF1F4FE3 		movt	r1, 65535
 14792 02d0 0300A0E1 		mov	r0, r3
 14793 02d4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5903:../../Source/Kernel/rme_kernel.c ****         /* Release signal and thread from each other */
5904:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal->Thd=RME_NULL;
 14794              		.loc 1 5904 22
 14795 02d8 14301BE5 		ldr	r3, [fp, #-20]
 14796 02dc 283093E5 		ldr	r3, [r3, #40]
 14797              		.loc 1 5904 34
 14798 02e0 0020A0E3 		mov	r2, #0
 14799 02e4 182083E5 		str	r2, [r3, #24]
5905:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal=RME_NULL;
 14800              		.loc 1 5905 29
 14801 02e8 14301BE5 		ldr	r3, [fp, #-20]
 14802 02ec 0020A0E3 		mov	r2, #0
 14803 02f0 282083E5 		str	r2, [r3, #40]
5906:../../Source/Kernel/rme_kernel.c ****         /* Timeout but don't notify parent */
5907:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14804              		.loc 1 5907 28
 14805 02f4 14301BE5 		ldr	r3, [fp, #-20]
 14806 02f8 0220A0E3 		mov	r2, #2
 14807 02fc 1C2083E5 		str	r2, [r3, #28]
 14808              	.L956:
5908:../../Source/Kernel/rme_kernel.c ****     }
5909:../../Source/Kernel/rme_kernel.c ****     /* TIMEOUT or EXCPEND */
5910:../../Source/Kernel/rme_kernel.c ****     else
5911:../../Source/Kernel/rme_kernel.c ****     {
5912:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5913:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5914:../../Source/Kernel/rme_kernel.c ****     }
5915:../../Source/Kernel/rme_kernel.c **** 
5916:../../Source/Kernel/rme_kernel.c ****     /* Cleanup all remaining timeslices on it */
5917:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 14809              		.loc 1 5917 24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 365


 14810 0300 14301BE5 		ldr	r3, [fp, #-20]
 14811 0304 0020A0E3 		mov	r2, #0
 14812 0308 182083E5 		str	r2, [r3, #24]
5918:../../Source/Kernel/rme_kernel.c ****     
5919:../../Source/Kernel/rme_kernel.c ****     /* Check if this thread is the current one and we may need to switch away */
5920:../../Source/Kernel/rme_kernel.c ****     if(Local->Thd_Cur==Thread)
 14813              		.loc 1 5920 13
 14814 030c 10301BE5 		ldr	r3, [fp, #-16]
 14815 0310 043093E5 		ldr	r3, [r3, #4]
 14816              		.loc 1 5920 7
 14817 0314 14201BE5 		ldr	r2, [fp, #-20]
 14818 0318 030052E1 		cmp	r2, r3
 14819 031c 1C00001A 		bne	.L957
5921:../../Source/Kernel/rme_kernel.c ****     {
5922:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5923:../../Source/Kernel/rme_kernel.c **** 
5924:../../Source/Kernel/rme_kernel.c ****         Local->Thd_Cur=_RME_Run_High(Local);
 14820              		.loc 1 5924 24
 14821 0320 10001BE5 		ldr	r0, [fp, #-16]
 14822 0324 FEFFFFEB 		bl	_RME_Run_High
 14823 0328 0020A0E1 		mov	r2, r0
 14824              		.loc 1 5924 23 discriminator 1
 14825 032c 10301BE5 		ldr	r3, [fp, #-16]
 14826 0330 042083E5 		str	r2, [r3, #4]
5925:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Local->Thd_Cur);
 14827              		.loc 1 5925 9
 14828 0334 10301BE5 		ldr	r3, [fp, #-16]
 14829 0338 043093E5 		ldr	r3, [r3, #4]
 14830 033c 0300A0E1 		mov	r0, r3
 14831 0340 FEFFFFEB 		bl	_RME_Run_Ins
5926:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Local->Thd_Cur->Sched.State==RME_THD_READY);
 14832              		.loc 1 5926 9
 14833 0344 10301BE5 		ldr	r3, [fp, #-16]
 14834 0348 043093E5 		ldr	r3, [r3, #4]
 14835 034c 1C3093E5 		ldr	r3, [r3, #28]
 14836 0350 000053E3 		cmp	r3, #0
 14837 0354 0800000A 		beq	.L958
 14838              		.loc 1 5926 9 is_stmt 0 discriminator 1
 14839 0358 003000E3 		movw	r3, #:lower16:.LC2
 14840 035c 003040E3 		movt	r3, #:upper16:.LC2
 14841 0360 002000E3 		movw	r2, #:lower16:.LC3
 14842 0364 002040E3 		movt	r2, #:upper16:.LC3
 14843 0368 261701E3 		movw	r1, #5926
 14844 036c 000000E3 		movw	r0, #:lower16:.LC4
 14845 0370 000040E3 		movt	r0, #:upper16:.LC4
 14846 0374 FEFFFFEB 		bl	RME_Log
 14847              	.L959:
 14848              		.loc 1 5926 9
 14849 0378 FEFFFFEA 		b	.L959
 14850              	.L958:
5927:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Swt(Reg,Thread,Local->Thd_Cur);
 14851              		.loc 1 5927 9 is_stmt 1
 14852 037c 10301BE5 		ldr	r3, [fp, #-16]
 14853 0380 043093E5 		ldr	r3, [r3, #4]
 14854 0384 0320A0E1 		mov	r2, r3
 14855 0388 14101BE5 		ldr	r1, [fp, #-20]
 14856 038c 1C001BE5 		ldr	r0, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 366


 14857 0390 FEFFFFEB 		bl	_RME_Run_Swt
 14858              	.L957:
5928:../../Source/Kernel/rme_kernel.c ****     }
5929:../../Source/Kernel/rme_kernel.c ****     else
5930:../../Source/Kernel/rme_kernel.c ****     {
5931:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5932:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5933:../../Source/Kernel/rme_kernel.c ****     }
5934:../../Source/Kernel/rme_kernel.c ****     
5935:../../Source/Kernel/rme_kernel.c ****     /* Set the state to free so other cores can bind */
5936:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((rme_ptr_t*)&(Thread->Sched.Local),
 14859              		.loc 1 5936 5
 14860 0394 14301BE5 		ldr	r3, [fp, #-20]
 14861 0398 143083E2 		add	r3, r3, #20
 14862 039c 0010E0E3 		mvn	r1, #0
 14863 03a0 0300A0E1 		mov	r0, r3
 14864 03a4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5937:../../Source/Kernel/rme_kernel.c ****                       (rme_ptr_t)RME_THD_FREE);
5938:../../Source/Kernel/rme_kernel.c **** 
5939:../../Source/Kernel/rme_kernel.c ****     return 0;
 14865              		.loc 1 5939 12
 14866 03a8 0030A0E3 		mov	r3, #0
 14867              	.L942:
5940:../../Source/Kernel/rme_kernel.c **** }
 14868              		.loc 1 5940 1
 14869 03ac 0300A0E1 		mov	r0, r3
 14870 03b0 04D04BE2 		sub	sp, fp, #4
 14871              		.cfi_def_cfa 13, 8
 14872              		@ sp needed
 14873 03b4 0088BDE8 		pop	{fp, pc}
 14874              		.cfi_endproc
 14875              	.LFE59:
 14877              		.section	.text._RME_Thd_Exec_Set,"ax",%progbits
 14878              		.align	2
 14879              		.syntax unified
 14880              		.arm
 14882              	_RME_Thd_Exec_Set:
 14883              	.LFB60:
5941:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Free ******************************************/
5942:../../Source/Kernel/rme_kernel.c **** 
5943:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Exec_Set *************************************************
5944:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's entry point and stack. The registers will be
5945:../../Source/Kernel/rme_kernel.c ****               initialized with these contents.
5946:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5947:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5948:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5949:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5950:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry address of the thread.
5951:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
5952:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter to pass to the thread.
5953:../../Source/Kernel/rme_kernel.c **** Output      : None.
5954:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5955:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5956:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Exec_Set(struct RME_Cap_Cpt* Cpt,
5957:../../Source/Kernel/rme_kernel.c ****                                    struct RME_Reg_Struct* Reg,
5958:../../Source/Kernel/rme_kernel.c ****                                    rme_cid_t Cap_Thd,
5959:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Entry,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 367


5960:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Stack,
5961:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Param)
5962:../../Source/Kernel/rme_kernel.c **** {
 14884              		.loc 1 5962 1
 14885              		.cfi_startproc
 14886              		@ args = 8, pretend = 0, frame = 32
 14887              		@ frame_needed = 1, uses_anonymous_args = 0
 14888 0000 00482DE9 		push	{fp, lr}
 14889              		.cfi_def_cfa_offset 8
 14890              		.cfi_offset 11, -8
 14891              		.cfi_offset 14, -4
 14892 0004 04B08DE2 		add	fp, sp, #4
 14893              		.cfi_def_cfa 11, 4
 14894 0008 28D04DE2 		sub	sp, sp, #40
 14895 000c 18000BE5 		str	r0, [fp, #-24]
 14896 0010 1C100BE5 		str	r1, [fp, #-28]
 14897 0014 20200BE5 		str	r2, [fp, #-32]
 14898 0018 24300BE5 		str	r3, [fp, #-36]
5963:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5964:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5965:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5966:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5967:../../Source/Kernel/rme_kernel.c ****     
5968:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCap_Thd ");
5969:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
5970:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nEntry ");
5971:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Entry);
5972:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nStack ");
5973:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Stack);
5974:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nParam ");
5975:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Param);*/
5976:../../Source/Kernel/rme_kernel.c **** 
5977:../../Source/Kernel/rme_kernel.c **** 
5978:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5979:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14899              		.loc 1 5979 5
 14900 001c 20301BE5 		ldr	r3, [fp, #-32]
 14901 0020 803003E2 		and	r3, r3, #128
 14902 0024 000053E3 		cmp	r3, #0
 14903 0028 1C00001A 		bne	.L961
 14904              		.loc 1 5979 5 is_stmt 0 discriminator 1
 14905 002c 18301BE5 		ldr	r3, [fp, #-24]
 14906 0030 142093E5 		ldr	r2, [r3, #20]
 14907 0034 20301BE5 		ldr	r3, [fp, #-32]
 14908 0038 030052E1 		cmp	r2, r3
 14909 003c 0100008A 		bhi	.L962
 14910              		.loc 1 5979 5 discriminator 3
 14911 0040 0230E0E3 		mvn	r3, #2
 14912              		.loc 1 5979 5
 14913 0044 910000EA 		b	.L963
 14914              	.L962:
 14915              		.loc 1 5979 5 discriminator 4
 14916 0048 20301BE5 		ldr	r3, [fp, #-32]
 14917 004c 8322A0E1 		lsl	r2, r3, #5
 14918 0050 18301BE5 		ldr	r3, [fp, #-24]
 14919 0054 0C3093E5 		ldr	r3, [r3, #12]
 14920 0058 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 368


 14921 005c 08300BE5 		str	r3, [fp, #-8]
 14922 0060 08301BE5 		ldr	r3, [fp, #-8]
 14923 0064 0300A0E1 		mov	r0, r3
 14924 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14925 006c 0C000BE5 		str	r0, [fp, #-12]
 14926              		.loc 1 5979 5 discriminator 1
 14927 0070 0C301BE5 		ldr	r3, [fp, #-12]
 14928 0074 FF3803E2 		and	r3, r3, #16711680
 14929 0078 020853E3 		cmp	r3, #131072
 14930 007c 0100001A 		bne	.L964
 14931              		.loc 1 5979 5 discriminator 5
 14932 0080 0830E0E3 		mvn	r3, #8
 14933              		.loc 1 5979 5
 14934 0084 810000EA 		b	.L963
 14935              	.L964:
 14936              		.loc 1 5979 5 discriminator 6
 14937 0088 0C301BE5 		ldr	r3, [fp, #-12]
 14938 008c 233CA0E1 		lsr	r3, r3, #24
 14939 0090 060053E3 		cmp	r3, #6
 14940 0094 3F00000A 		beq	.L965
 14941              		.loc 1 5979 5 discriminator 7
 14942 0098 0130E0E3 		mvn	r3, #1
 14943              		.loc 1 5979 5
 14944 009c 7B0000EA 		b	.L963
 14945              	.L961:
 14946              		.loc 1 5979 5 discriminator 2
 14947 00a0 20301BE5 		ldr	r3, [fp, #-32]
 14948 00a4 2324A0E1 		lsr	r2, r3, #8
 14949 00a8 18301BE5 		ldr	r3, [fp, #-24]
 14950 00ac 143093E5 		ldr	r3, [r3, #20]
 14951 00b0 030052E1 		cmp	r2, r3
 14952 00b4 0100003A 		bcc	.L966
 14953              		.loc 1 5979 5 discriminator 8
 14954 00b8 0230E0E3 		mvn	r3, #2
 14955              		.loc 1 5979 5
 14956 00bc 730000EA 		b	.L963
 14957              	.L966:
 14958              		.loc 1 5979 5 discriminator 9
 14959 00c0 20301BE5 		ldr	r3, [fp, #-32]
 14960 00c4 2334A0E1 		lsr	r3, r3, #8
 14961 00c8 8322A0E1 		lsl	r2, r3, #5
 14962 00cc 18301BE5 		ldr	r3, [fp, #-24]
 14963 00d0 0C3093E5 		ldr	r3, [r3, #12]
 14964 00d4 033082E0 		add	r3, r2, r3
 14965 00d8 08300BE5 		str	r3, [fp, #-8]
 14966 00dc 08301BE5 		ldr	r3, [fp, #-8]
 14967 00e0 0300A0E1 		mov	r0, r3
 14968 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14969 00e8 0C000BE5 		str	r0, [fp, #-12]
 14970              		.loc 1 5979 5 discriminator 1
 14971 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 14972 00f0 FF3803E2 		and	r3, r3, #16711680
 14973 00f4 020853E3 		cmp	r3, #131072
 14974 00f8 0100001A 		bne	.L967
 14975              		.loc 1 5979 5 discriminator 10
 14976 00fc 0830E0E3 		mvn	r3, #8
 14977              		.loc 1 5979 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 369


 14978 0100 620000EA 		b	.L963
 14979              	.L967:
 14980              		.loc 1 5979 5 discriminator 11
 14981 0104 0C301BE5 		ldr	r3, [fp, #-12]
 14982 0108 233CA0E1 		lsr	r3, r3, #24
 14983 010c 030053E3 		cmp	r3, #3
 14984 0110 0100000A 		beq	.L968
 14985              		.loc 1 5979 5 discriminator 12
 14986 0114 0130E0E3 		mvn	r3, #1
 14987              		.loc 1 5979 5
 14988 0118 5C0000EA 		b	.L963
 14989              	.L968:
 14990              		.loc 1 5979 5 discriminator 13
 14991 011c 20301BE5 		ldr	r3, [fp, #-32]
 14992 0120 7F2003E2 		and	r2, r3, #127
 14993 0124 08301BE5 		ldr	r3, [fp, #-8]
 14994 0128 143093E5 		ldr	r3, [r3, #20]
 14995 012c 030052E1 		cmp	r2, r3
 14996 0130 0100003A 		bcc	.L969
 14997              		.loc 1 5979 5 discriminator 14
 14998 0134 0230E0E3 		mvn	r3, #2
 14999              		.loc 1 5979 5
 15000 0138 540000EA 		b	.L963
 15001              	.L969:
 15002              		.loc 1 5979 5 discriminator 15
 15003 013c 20301BE5 		ldr	r3, [fp, #-32]
 15004 0140 7F3003E2 		and	r3, r3, #127
 15005 0144 8322A0E1 		lsl	r2, r3, #5
 15006 0148 08301BE5 		ldr	r3, [fp, #-8]
 15007 014c 0C3093E5 		ldr	r3, [r3, #12]
 15008 0150 033082E0 		add	r3, r2, r3
 15009 0154 08300BE5 		str	r3, [fp, #-8]
 15010 0158 08301BE5 		ldr	r3, [fp, #-8]
 15011 015c 0300A0E1 		mov	r0, r3
 15012 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15013 0164 0C000BE5 		str	r0, [fp, #-12]
 15014              		.loc 1 5979 5 discriminator 1
 15015 0168 0C301BE5 		ldr	r3, [fp, #-12]
 15016 016c FF3803E2 		and	r3, r3, #16711680
 15017 0170 020853E3 		cmp	r3, #131072
 15018 0174 0100001A 		bne	.L970
 15019              		.loc 1 5979 5 discriminator 16
 15020 0178 0830E0E3 		mvn	r3, #8
 15021              		.loc 1 5979 5
 15022 017c 430000EA 		b	.L963
 15023              	.L970:
 15024              		.loc 1 5979 5 discriminator 17
 15025 0180 0C301BE5 		ldr	r3, [fp, #-12]
 15026 0184 233CA0E1 		lsr	r3, r3, #24
 15027 0188 060053E3 		cmp	r3, #6
 15028 018c 0100000A 		beq	.L965
 15029              		.loc 1 5979 5 discriminator 18
 15030 0190 0130E0E3 		mvn	r3, #1
 15031              		.loc 1 5979 5
 15032 0194 3D0000EA 		b	.L963
 15033              	.L965:
5980:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 370


5981:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5982:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_EXEC_SET);
 15034              		.loc 1 5982 5 is_stmt 1
 15035 0198 08301BE5 		ldr	r3, [fp, #-8]
 15036 019c 083093E5 		ldr	r3, [r3, #8]
 15037 01a0 013003E2 		and	r3, r3, #1
 15038 01a4 000053E3 		cmp	r3, #0
 15039 01a8 0100001A 		bne	.L971
 15040              		.loc 1 5982 5 is_stmt 0 discriminator 1
 15041 01ac 0630E0E3 		mvn	r3, #6
 15042              		.loc 1 5982 5
 15043 01b0 360000EA 		b	.L963
 15044              	.L971:
5983:../../Source/Kernel/rme_kernel.c ****     
5984:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound, and quit if it is not on our core */
5985:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 15045              		.loc 1 5985 12 is_stmt 1
 15046 01b4 08301BE5 		ldr	r3, [fp, #-8]
 15047 01b8 0C3093E5 		ldr	r3, [r3, #12]
 15048              		.loc 1 5985 11
 15049 01bc 10300BE5 		str	r3, [fp, #-16]
5986:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15050              		.loc 1 5986 10
 15051 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15052 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15053 01c8 14300BE5 		str	r3, [fp, #-20]
5987:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 15054              		.loc 1 5987 21
 15055 01cc 10301BE5 		ldr	r3, [fp, #-16]
 15056 01d0 143093E5 		ldr	r3, [r3, #20]
 15057              		.loc 1 5987 7
 15058 01d4 14201BE5 		ldr	r2, [fp, #-20]
 15059 01d8 030052E1 		cmp	r2, r3
 15060 01dc 0100000A 		beq	.L972
5988:../../Source/Kernel/rme_kernel.c ****     {
5989:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5990:../../Source/Kernel/rme_kernel.c **** 
5991:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15061              		.loc 1 5991 16
 15062 01e0 CB30E0E3 		mvn	r3, #203
 15063 01e4 290000EA 		b	.L963
 15064              	.L972:
5992:../../Source/Kernel/rme_kernel.c ****     }
5993:../../Source/Kernel/rme_kernel.c ****     else
5994:../../Source/Kernel/rme_kernel.c ****     {
5995:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5996:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5997:../../Source/Kernel/rme_kernel.c ****     }
5998:../../Source/Kernel/rme_kernel.c ****     
5999:../../Source/Kernel/rme_kernel.c ****     /* Commit the change if both values are non-zero. If both are zero we are just
6000:../../Source/Kernel/rme_kernel.c ****      * clearing the error flag and continue from where the exception happened. */
6001:../../Source/Kernel/rme_kernel.c ****     if((Entry!=RME_NULL)&&(Stack!=RME_NULL))
 15065              		.loc 1 6001 7
 15066 01e8 24301BE5 		ldr	r3, [fp, #-36]
 15067 01ec 000053E3 		cmp	r3, #0
 15068 01f0 0C00000A 		beq	.L973
 15069              		.loc 1 6001 25 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 371


 15070 01f4 04309BE5 		ldr	r3, [fp, #4]
 15071 01f8 000053E3 		cmp	r3, #0
 15072 01fc 0900000A 		beq	.L973
6002:../../Source/Kernel/rme_kernel.c ****     {
6003:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6004:../../Source/Kernel/rme_kernel.c **** 
6005:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Reg_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr),
 15073              		.loc 1 6005 28
 15074 0200 10301BE5 		ldr	r3, [fp, #-16]
 15075 0204 443093E5 		ldr	r3, [r3, #68]
 15076              		.loc 1 6005 9
 15077 0208 0201C3E3 		bic	r0, r3, #-2147483648
6006:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15078              		.loc 1 6006 59
 15079 020c 10301BE5 		ldr	r3, [fp, #-16]
 15080 0210 483093E5 		ldr	r3, [r3, #72]
6005:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15081              		.loc 1 6005 9
 15082 0214 00308DE5 		str	r3, [sp]
 15083 0218 08309BE5 		ldr	r3, [fp, #8]
 15084 021c 04209BE5 		ldr	r2, [fp, #4]
 15085 0220 24101BE5 		ldr	r1, [fp, #-36]
 15086 0224 FEFFFFEB 		bl	__RME_Thd_Reg_Init
 15087              	.L973:
6007:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
6008:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Cop_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr), 
6009:../../Source/Kernel/rme_kernel.c ****                            &(Thread->Ctx.Reg->Reg),&(Thread->Ctx.Reg->Cop));
6010:../../Source/Kernel/rme_kernel.c **** #endif
6011:../../Source/Kernel/rme_kernel.c ****     }
6012:../../Source/Kernel/rme_kernel.c ****     else
6013:../../Source/Kernel/rme_kernel.c ****     {
6014:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6015:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6016:../../Source/Kernel/rme_kernel.c ****     }
6017:../../Source/Kernel/rme_kernel.c ****     
6018:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6019:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 15088              		.loc 1 6019 5
 15089 0228 0010A0E3 		mov	r1, #0
 15090 022c 1C001BE5 		ldr	r0, [fp, #-28]
 15091 0230 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6020:../../Source/Kernel/rme_kernel.c ****     
6021:../../Source/Kernel/rme_kernel.c ****     /* Check if there is a exception pending and clear it if there is */
6022:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15092              		.loc 1 6022 21
 15093 0234 10301BE5 		ldr	r3, [fp, #-16]
 15094 0238 1C3093E5 		ldr	r3, [r3, #28]
 15095              		.loc 1 6022 7
 15096 023c 030053E3 		cmp	r3, #3
 15097 0240 1100001A 		bne	.L974
6023:../../Source/Kernel/rme_kernel.c ****     {
6024:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6025:../../Source/Kernel/rme_kernel.c ****         
6026:../../Source/Kernel/rme_kernel.c ****         /* Check if the thread still have timeslices. If yes, put it into the runqueue;
6027:../../Source/Kernel/rme_kernel.c ****          * if no, mark it as TIMEOUT and send scheduler notification to its parent. */
6028:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice!=0U)
 15098              		.loc 1 6028 25
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 372


 15099 0244 10301BE5 		ldr	r3, [fp, #-16]
 15100 0248 183093E5 		ldr	r3, [r3, #24]
 15101              		.loc 1 6028 11
 15102 024c 000053E3 		cmp	r3, #0
 15103 0250 0500000A 		beq	.L975
6029:../../Source/Kernel/rme_kernel.c ****         {
6030:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6031:../../Source/Kernel/rme_kernel.c ****             
6032:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
6033:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_READY;
 15104              		.loc 1 6033 32
 15105 0254 10301BE5 		ldr	r3, [fp, #-16]
 15106 0258 0020A0E3 		mov	r2, #0
 15107 025c 1C2083E5 		str	r2, [r3, #28]
6034:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread);
 15108              		.loc 1 6034 13
 15109 0260 10001BE5 		ldr	r0, [fp, #-16]
 15110 0264 FEFFFFEB 		bl	_RME_Run_Ins
 15111 0268 040000EA 		b	.L976
 15112              	.L975:
6035:../../Source/Kernel/rme_kernel.c ****         }
6036:../../Source/Kernel/rme_kernel.c ****         else
6037:../../Source/Kernel/rme_kernel.c ****         {
6038:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6039:../../Source/Kernel/rme_kernel.c ****             
6040:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6041:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_TIMEOUT;
 15113              		.loc 1 6041 32
 15114 026c 10301BE5 		ldr	r3, [fp, #-16]
 15115 0270 0220A0E3 		mov	r2, #2
 15116 0274 1C2083E5 		str	r2, [r3, #28]
6042:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thread);
 15117              		.loc 1 6042 13
 15118 0278 10001BE5 		ldr	r0, [fp, #-16]
 15119 027c FEFFFFEB 		bl	_RME_Run_Notif
 15120              	.L976:
6043:../../Source/Kernel/rme_kernel.c ****         }
6044:../../Source/Kernel/rme_kernel.c ****         
6045:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread because something unblocked */
6046:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 15121              		.loc 1 6046 9
 15122 0280 14101BE5 		ldr	r1, [fp, #-20]
 15123 0284 1C001BE5 		ldr	r0, [fp, #-28]
 15124 0288 FEFFFFEB 		bl	_RME_Kern_High
 15125              	.L974:
6047:../../Source/Kernel/rme_kernel.c ****     }
6048:../../Source/Kernel/rme_kernel.c ****     else
6049:../../Source/Kernel/rme_kernel.c ****     {
6050:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6051:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6052:../../Source/Kernel/rme_kernel.c ****     }
6053:../../Source/Kernel/rme_kernel.c ****     
6054:../../Source/Kernel/rme_kernel.c ****     return 0;
 15126              		.loc 1 6054 12
 15127 028c 0030A0E3 		mov	r3, #0
 15128              	.L963:
6055:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 373


 15129              		.loc 1 6055 1
 15130 0290 0300A0E1 		mov	r0, r3
 15131 0294 04D04BE2 		sub	sp, fp, #4
 15132              		.cfi_def_cfa 13, 8
 15133              		@ sp needed
 15134 0298 0088BDE8 		pop	{fp, pc}
 15135              		.cfi_endproc
 15136              	.LFE60:
 15138              		.section	.text._RME_Thd_Sched_Prio,"ax",%progbits
 15139              		.align	2
 15140              		.syntax unified
 15141              		.arm
 15143              	_RME_Thd_Sched_Prio:
 15144              	.LFB61:
6056:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Exec_Set ********************************************/
6057:../../Source/Kernel/rme_kernel.c **** 
6058:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Prio ***********************************************
6059:../../Source/Kernel/rme_kernel.c **** Description : Change a thread's priority level. This can only be called from
6060:../../Source/Kernel/rme_kernel.c ****               the core that have the thread bound. To facilitate scheduling,
6061:../../Source/Kernel/rme_kernel.c ****               this system call allows up to 3 thread's priority changes per
6062:../../Source/Kernel/rme_kernel.c ****               call. This system call can cause a potential context switch.
6063:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
6064:../../Source/Kernel/rme_kernel.c ****               priority. 
6065:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6066:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6067:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Number - The number of threads to adjust priority.
6068:../../Source/Kernel/rme_kernel.c ****                                  Allowed values are 1, 2 and 3.
6069:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd0 - The capability to the first thread.
6070:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6071:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio0 - The priority level, higher is more critical.
6072:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd1 - The capability to the second thread.
6073:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6074:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio1 - The priority level, higher is more critical.
6075:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd2 - The capability to the third thread.
6076:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6077:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio2 - The priority level, higher is more critical.
6078:../../Source/Kernel/rme_kernel.c **** Output      : None.
6079:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6080:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6081:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Prio(struct RME_Cap_Cpt* Cpt,
6082:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
6083:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Number,
6084:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd0,
6085:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio0,
6086:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd1,
6087:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio1,
6088:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd2,
6089:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio2)
6090:../../Source/Kernel/rme_kernel.c **** {
 15145              		.loc 1 6090 1
 15146              		.cfi_startproc
 15147              		@ args = 20, pretend = 0, frame = 80
 15148              		@ frame_needed = 1, uses_anonymous_args = 0
 15149 0000 00482DE9 		push	{fp, lr}
 15150              		.cfi_def_cfa_offset 8
 15151              		.cfi_offset 11, -8
 15152              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 374


 15153 0004 04B08DE2 		add	fp, sp, #4
 15154              		.cfi_def_cfa 11, 4
 15155 0008 50D04DE2 		sub	sp, sp, #80
 15156 000c 48000BE5 		str	r0, [fp, #-72]
 15157 0010 4C100BE5 		str	r1, [fp, #-76]
 15158 0014 50200BE5 		str	r2, [fp, #-80]
 15159 0018 54300BE5 		str	r3, [fp, #-84]
6091:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
6092:../../Source/Kernel/rme_kernel.c ****     rme_cid_t Cap_Thd[3];
6093:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio[3];
6094:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op[3];
6095:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread[3];
6096:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6097:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6098:../../Source/Kernel/rme_kernel.c ****     
6099:../../Source/Kernel/rme_kernel.c ****     /* Check parameter validity */
6100:../../Source/Kernel/rme_kernel.c ****     if((Number==0U)||(Number>3U))
 15160              		.loc 1 6100 7
 15161 001c 50301BE5 		ldr	r3, [fp, #-80]
 15162 0020 000053E3 		cmp	r3, #0
 15163 0024 0200000A 		beq	.L978
 15164              		.loc 1 6100 20 discriminator 1
 15165 0028 50301BE5 		ldr	r3, [fp, #-80]
 15166 002c 030053E3 		cmp	r3, #3
 15167 0030 0100009A 		bls	.L979
 15168              	.L978:
6101:../../Source/Kernel/rme_kernel.c ****     {
6102:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6103:../../Source/Kernel/rme_kernel.c **** 
6104:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15169              		.loc 1 6104 16
 15170 0034 CB30E0E3 		mvn	r3, #203
 15171 0038 260100EA 		b	.L999
 15172              	.L979:
6105:../../Source/Kernel/rme_kernel.c ****     }
6106:../../Source/Kernel/rme_kernel.c ****     
6107:../../Source/Kernel/rme_kernel.c ****     /* We'll use arrays in the next */
6108:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[0]=Cap_Thd0;
 15173              		.loc 1 6108 15
 15174 003c 54301BE5 		ldr	r3, [fp, #-84]
 15175 0040 1C300BE5 		str	r3, [fp, #-28]
6109:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[1]=Cap_Thd1;
 15176              		.loc 1 6109 15
 15177 0044 08309BE5 		ldr	r3, [fp, #8]
 15178 0048 18300BE5 		str	r3, [fp, #-24]
6110:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[2]=Cap_Thd2;
 15179              		.loc 1 6110 15
 15180 004c 10309BE5 		ldr	r3, [fp, #16]
 15181 0050 14300BE5 		str	r3, [fp, #-20]
6111:../../Source/Kernel/rme_kernel.c ****     Prio[0]=Prio0;
 15182              		.loc 1 6111 12
 15183 0054 04309BE5 		ldr	r3, [fp, #4]
 15184 0058 28300BE5 		str	r3, [fp, #-40]
6112:../../Source/Kernel/rme_kernel.c ****     Prio[1]=Prio1;
 15185              		.loc 1 6112 12
 15186 005c 0C309BE5 		ldr	r3, [fp, #12]
 15187 0060 24300BE5 		str	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 375


6113:../../Source/Kernel/rme_kernel.c ****     Prio[2]=Prio2;
 15188              		.loc 1 6113 12
 15189 0064 14309BE5 		ldr	r3, [fp, #20]
 15190 0068 20300BE5 		str	r3, [fp, #-32]
6114:../../Source/Kernel/rme_kernel.c **** 
6115:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15191              		.loc 1 6115 10
 15192 006c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15193 0070 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15194 0074 0C300BE5 		str	r3, [fp, #-12]
6116:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15195              		.loc 1 6116 14
 15196 0078 0030A0E3 		mov	r3, #0
 15197 007c 08300BE5 		str	r3, [fp, #-8]
 15198              		.loc 1 6116 5
 15199 0080 D20000EA 		b	.L981
 15200              	.L994:
6117:../../Source/Kernel/rme_kernel.c ****     {
6118:../../Source/Kernel/rme_kernel.c ****         /* Get the capability slot */
6119:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd[Count],RME_CAP_TYPE_THD,
 15201              		.loc 1 6119 9
 15202 0084 08301BE5 		ldr	r3, [fp, #-8]
 15203 0088 0331A0E1 		lsl	r3, r3, #2
 15204 008c 043043E2 		sub	r3, r3, #4
 15205 0090 0B3083E0 		add	r3, r3, fp
 15206 0094 183013E5 		ldr	r3, [r3, #-24]
 15207 0098 803003E2 		and	r3, r3, #128
 15208 009c 000053E3 		cmp	r3, #0
 15209 00a0 2E00001A 		bne	.L982
 15210              		.loc 1 6119 9 is_stmt 0 discriminator 1
 15211 00a4 08301BE5 		ldr	r3, [fp, #-8]
 15212 00a8 0331A0E1 		lsl	r3, r3, #2
 15213 00ac 043043E2 		sub	r3, r3, #4
 15214 00b0 0B3083E0 		add	r3, r3, fp
 15215 00b4 183013E5 		ldr	r3, [r3, #-24]
 15216 00b8 0320A0E1 		mov	r2, r3
 15217 00bc 48301BE5 		ldr	r3, [fp, #-72]
 15218 00c0 143093E5 		ldr	r3, [r3, #20]
 15219 00c4 030052E1 		cmp	r2, r3
 15220 00c8 0100003A 		bcc	.L983
 15221              		.loc 1 6119 9 discriminator 3
 15222 00cc 0230E0E3 		mvn	r3, #2
 15223              		.loc 1 6119 9
 15224 00d0 000100EA 		b	.L999
 15225              	.L983:
 15226              		.loc 1 6119 9 discriminator 4
 15227 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15228 00d8 0331A0E1 		lsl	r3, r3, #2
 15229 00dc 043043E2 		sub	r3, r3, #4
 15230 00e0 0B3083E0 		add	r3, r3, fp
 15231 00e4 183013E5 		ldr	r3, [r3, #-24]
 15232 00e8 8322A0E1 		lsl	r2, r3, #5
 15233 00ec 48301BE5 		ldr	r3, [fp, #-72]
 15234 00f0 0C3093E5 		ldr	r3, [r3, #12]
 15235 00f4 033082E0 		add	r3, r2, r3
 15236 00f8 0320A0E1 		mov	r2, r3
 15237 00fc 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 376


 15238 0100 0331A0E1 		lsl	r3, r3, #2
 15239 0104 043043E2 		sub	r3, r3, #4
 15240 0108 0B3083E0 		add	r3, r3, fp
 15241 010c 302003E5 		str	r2, [r3, #-48]
 15242 0110 08301BE5 		ldr	r3, [fp, #-8]
 15243 0114 0331A0E1 		lsl	r3, r3, #2
 15244 0118 043043E2 		sub	r3, r3, #4
 15245 011c 0B3083E0 		add	r3, r3, fp
 15246 0120 303013E5 		ldr	r3, [r3, #-48]
 15247 0124 0300A0E1 		mov	r0, r3
 15248 0128 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15249 012c 10000BE5 		str	r0, [fp, #-16]
 15250              		.loc 1 6119 9 discriminator 1
 15251 0130 10301BE5 		ldr	r3, [fp, #-16]
 15252 0134 FF3803E2 		and	r3, r3, #16711680
 15253 0138 020853E3 		cmp	r3, #131072
 15254 013c 0100001A 		bne	.L984
 15255              		.loc 1 6119 9 discriminator 5
 15256 0140 0830E0E3 		mvn	r3, #8
 15257              		.loc 1 6119 9
 15258 0144 E30000EA 		b	.L999
 15259              	.L984:
 15260              		.loc 1 6119 9 discriminator 6
 15261 0148 10301BE5 		ldr	r3, [fp, #-16]
 15262 014c 233CA0E1 		lsr	r3, r3, #24
 15263 0150 060053E3 		cmp	r3, #6
 15264 0154 6900000A 		beq	.L985
 15265              		.loc 1 6119 9 discriminator 7
 15266 0158 0130E0E3 		mvn	r3, #1
 15267              		.loc 1 6119 9
 15268 015c DD0000EA 		b	.L999
 15269              	.L982:
 15270              		.loc 1 6119 9 discriminator 2
 15271 0160 08301BE5 		ldr	r3, [fp, #-8]
 15272 0164 0331A0E1 		lsl	r3, r3, #2
 15273 0168 043043E2 		sub	r3, r3, #4
 15274 016c 0B3083E0 		add	r3, r3, fp
 15275 0170 183013E5 		ldr	r3, [r3, #-24]
 15276 0174 2324A0E1 		lsr	r2, r3, #8
 15277 0178 48301BE5 		ldr	r3, [fp, #-72]
 15278 017c 143093E5 		ldr	r3, [r3, #20]
 15279 0180 030052E1 		cmp	r2, r3
 15280 0184 0100003A 		bcc	.L986
 15281              		.loc 1 6119 9 discriminator 8
 15282 0188 0230E0E3 		mvn	r3, #2
 15283              		.loc 1 6119 9
 15284 018c D10000EA 		b	.L999
 15285              	.L986:
 15286              		.loc 1 6119 9 discriminator 9
 15287 0190 08301BE5 		ldr	r3, [fp, #-8]
 15288 0194 0331A0E1 		lsl	r3, r3, #2
 15289 0198 043043E2 		sub	r3, r3, #4
 15290 019c 0B3083E0 		add	r3, r3, fp
 15291 01a0 183013E5 		ldr	r3, [r3, #-24]
 15292 01a4 2334A0E1 		lsr	r3, r3, #8
 15293 01a8 8322A0E1 		lsl	r2, r3, #5
 15294 01ac 48301BE5 		ldr	r3, [fp, #-72]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 377


 15295 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15296 01b4 033082E0 		add	r3, r2, r3
 15297 01b8 0320A0E1 		mov	r2, r3
 15298 01bc 08301BE5 		ldr	r3, [fp, #-8]
 15299 01c0 0331A0E1 		lsl	r3, r3, #2
 15300 01c4 043043E2 		sub	r3, r3, #4
 15301 01c8 0B3083E0 		add	r3, r3, fp
 15302 01cc 302003E5 		str	r2, [r3, #-48]
 15303 01d0 08301BE5 		ldr	r3, [fp, #-8]
 15304 01d4 0331A0E1 		lsl	r3, r3, #2
 15305 01d8 043043E2 		sub	r3, r3, #4
 15306 01dc 0B3083E0 		add	r3, r3, fp
 15307 01e0 303013E5 		ldr	r3, [r3, #-48]
 15308 01e4 0300A0E1 		mov	r0, r3
 15309 01e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15310 01ec 10000BE5 		str	r0, [fp, #-16]
 15311              		.loc 1 6119 9 discriminator 1
 15312 01f0 10301BE5 		ldr	r3, [fp, #-16]
 15313 01f4 FF3803E2 		and	r3, r3, #16711680
 15314 01f8 020853E3 		cmp	r3, #131072
 15315 01fc 0100001A 		bne	.L987
 15316              		.loc 1 6119 9 discriminator 10
 15317 0200 0830E0E3 		mvn	r3, #8
 15318              		.loc 1 6119 9
 15319 0204 B30000EA 		b	.L999
 15320              	.L987:
 15321              		.loc 1 6119 9 discriminator 11
 15322 0208 10301BE5 		ldr	r3, [fp, #-16]
 15323 020c 233CA0E1 		lsr	r3, r3, #24
 15324 0210 030053E3 		cmp	r3, #3
 15325 0214 0100000A 		beq	.L988
 15326              		.loc 1 6119 9 discriminator 12
 15327 0218 0130E0E3 		mvn	r3, #1
 15328              		.loc 1 6119 9
 15329 021c AD0000EA 		b	.L999
 15330              	.L988:
 15331              		.loc 1 6119 9 discriminator 13
 15332 0220 08301BE5 		ldr	r3, [fp, #-8]
 15333 0224 0331A0E1 		lsl	r3, r3, #2
 15334 0228 043043E2 		sub	r3, r3, #4
 15335 022c 0B3083E0 		add	r3, r3, fp
 15336 0230 183013E5 		ldr	r3, [r3, #-24]
 15337 0234 7F2003E2 		and	r2, r3, #127
 15338 0238 08301BE5 		ldr	r3, [fp, #-8]
 15339 023c 0331A0E1 		lsl	r3, r3, #2
 15340 0240 043043E2 		sub	r3, r3, #4
 15341 0244 0B3083E0 		add	r3, r3, fp
 15342 0248 303013E5 		ldr	r3, [r3, #-48]
 15343 024c 143093E5 		ldr	r3, [r3, #20]
 15344 0250 030052E1 		cmp	r2, r3
 15345 0254 0100003A 		bcc	.L989
 15346              		.loc 1 6119 9 discriminator 14
 15347 0258 0230E0E3 		mvn	r3, #2
 15348              		.loc 1 6119 9
 15349 025c 9D0000EA 		b	.L999
 15350              	.L989:
 15351              		.loc 1 6119 9 discriminator 15
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 378


 15352 0260 08301BE5 		ldr	r3, [fp, #-8]
 15353 0264 0331A0E1 		lsl	r3, r3, #2
 15354 0268 043043E2 		sub	r3, r3, #4
 15355 026c 0B3083E0 		add	r3, r3, fp
 15356 0270 183013E5 		ldr	r3, [r3, #-24]
 15357 0274 7F3003E2 		and	r3, r3, #127
 15358 0278 8322A0E1 		lsl	r2, r3, #5
 15359 027c 08301BE5 		ldr	r3, [fp, #-8]
 15360 0280 0331A0E1 		lsl	r3, r3, #2
 15361 0284 043043E2 		sub	r3, r3, #4
 15362 0288 0B3083E0 		add	r3, r3, fp
 15363 028c 303013E5 		ldr	r3, [r3, #-48]
 15364 0290 0C3093E5 		ldr	r3, [r3, #12]
 15365 0294 033082E0 		add	r3, r2, r3
 15366 0298 0320A0E1 		mov	r2, r3
 15367 029c 08301BE5 		ldr	r3, [fp, #-8]
 15368 02a0 0331A0E1 		lsl	r3, r3, #2
 15369 02a4 043043E2 		sub	r3, r3, #4
 15370 02a8 0B3083E0 		add	r3, r3, fp
 15371 02ac 302003E5 		str	r2, [r3, #-48]
 15372 02b0 08301BE5 		ldr	r3, [fp, #-8]
 15373 02b4 0331A0E1 		lsl	r3, r3, #2
 15374 02b8 043043E2 		sub	r3, r3, #4
 15375 02bc 0B3083E0 		add	r3, r3, fp
 15376 02c0 303013E5 		ldr	r3, [r3, #-48]
 15377 02c4 0300A0E1 		mov	r0, r3
 15378 02c8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15379 02cc 10000BE5 		str	r0, [fp, #-16]
 15380              		.loc 1 6119 9 discriminator 1
 15381 02d0 10301BE5 		ldr	r3, [fp, #-16]
 15382 02d4 FF3803E2 		and	r3, r3, #16711680
 15383 02d8 020853E3 		cmp	r3, #131072
 15384 02dc 0100001A 		bne	.L990
 15385              		.loc 1 6119 9 discriminator 16
 15386 02e0 0830E0E3 		mvn	r3, #8
 15387              		.loc 1 6119 9
 15388 02e4 7B0000EA 		b	.L999
 15389              	.L990:
 15390              		.loc 1 6119 9 discriminator 17
 15391 02e8 10301BE5 		ldr	r3, [fp, #-16]
 15392 02ec 233CA0E1 		lsr	r3, r3, #24
 15393 02f0 060053E3 		cmp	r3, #6
 15394 02f4 0100000A 		beq	.L985
 15395              		.loc 1 6119 9 discriminator 18
 15396 02f8 0130E0E3 		mvn	r3, #1
 15397              		.loc 1 6119 9
 15398 02fc 750000EA 		b	.L999
 15399              	.L985:
6120:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Op[Count],Type_Stat);
6121:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6122:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Op[Count],RME_THD_FLAG_SCHED_PRIO);
 15400              		.loc 1 6122 9 is_stmt 1
 15401 0300 08301BE5 		ldr	r3, [fp, #-8]
 15402 0304 0331A0E1 		lsl	r3, r3, #2
 15403 0308 043043E2 		sub	r3, r3, #4
 15404 030c 0B3083E0 		add	r3, r3, fp
 15405 0310 303013E5 		ldr	r3, [r3, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 379


 15406 0314 083093E5 		ldr	r3, [r3, #8]
 15407 0318 083003E2 		and	r3, r3, #8
 15408 031c 000053E3 		cmp	r3, #0
 15409 0320 0100001A 		bne	.L991
 15410              		.loc 1 6122 9 is_stmt 0 discriminator 1
 15411 0324 0630E0E3 		mvn	r3, #6
 15412              		.loc 1 6122 9
 15413 0328 6A0000EA 		b	.L999
 15414              	.L991:
6123:../../Source/Kernel/rme_kernel.c ****         
6124:../../Source/Kernel/rme_kernel.c ****         /* See if the target thread is already bound to this core. If no, we just quit */
6125:../../Source/Kernel/rme_kernel.c ****         Thread[Count]=(struct RME_Thd_Struct*)(Thd_Op[Count]->Head.Object);
 15415              		.loc 1 6125 54 is_stmt 1
 15416 032c 08301BE5 		ldr	r3, [fp, #-8]
 15417 0330 0331A0E1 		lsl	r3, r3, #2
 15418 0334 043043E2 		sub	r3, r3, #4
 15419 0338 0B3083E0 		add	r3, r3, fp
 15420 033c 303013E5 		ldr	r3, [r3, #-48]
 15421              		.loc 1 6125 67
 15422 0340 0C3093E5 		ldr	r3, [r3, #12]
 15423              		.loc 1 6125 23
 15424 0344 0320A0E1 		mov	r2, r3
 15425              		.loc 1 6125 22
 15426 0348 08301BE5 		ldr	r3, [fp, #-8]
 15427 034c 0331A0E1 		lsl	r3, r3, #2
 15428 0350 043043E2 		sub	r3, r3, #4
 15429 0354 0B3083E0 		add	r3, r3, fp
 15430 0358 3C2003E5 		str	r2, [r3, #-60]
6126:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Local!=Local)
 15431              		.loc 1 6126 18
 15432 035c 08301BE5 		ldr	r3, [fp, #-8]
 15433 0360 0331A0E1 		lsl	r3, r3, #2
 15434 0364 043043E2 		sub	r3, r3, #4
 15435 0368 0B3083E0 		add	r3, r3, fp
 15436 036c 3C3013E5 		ldr	r3, [r3, #-60]
 15437              		.loc 1 6126 32
 15438 0370 143093E5 		ldr	r3, [r3, #20]
 15439              		.loc 1 6126 11
 15440 0374 0C201BE5 		ldr	r2, [fp, #-12]
 15441 0378 030052E1 		cmp	r2, r3
 15442 037c 0100000A 		beq	.L992
6127:../../Source/Kernel/rme_kernel.c ****         {
6128:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6129:../../Source/Kernel/rme_kernel.c **** 
6130:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 15443              		.loc 1 6130 20
 15444 0380 CB30E0E3 		mvn	r3, #203
 15445 0384 530000EA 		b	.L999
 15446              	.L992:
6131:../../Source/Kernel/rme_kernel.c ****         }
6132:../../Source/Kernel/rme_kernel.c ****         else
6133:../../Source/Kernel/rme_kernel.c ****         {
6134:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6135:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6136:../../Source/Kernel/rme_kernel.c ****         }
6137:../../Source/Kernel/rme_kernel.c ****         
6138:../../Source/Kernel/rme_kernel.c ****         /* See if the priority relationship is correct */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 380


6139:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Prio_Max<Prio[Count])
 15447              		.loc 1 6139 18
 15448 0388 08301BE5 		ldr	r3, [fp, #-8]
 15449 038c 0331A0E1 		lsl	r3, r3, #2
 15450 0390 043043E2 		sub	r3, r3, #4
 15451 0394 0B3083E0 		add	r3, r3, fp
 15452 0398 3C3013E5 		ldr	r3, [r3, #-60]
 15453              		.loc 1 6139 32
 15454 039c 242093E5 		ldr	r2, [r3, #36]
 15455              		.loc 1 6139 46
 15456 03a0 08301BE5 		ldr	r3, [fp, #-8]
 15457 03a4 0331A0E1 		lsl	r3, r3, #2
 15458 03a8 043043E2 		sub	r3, r3, #4
 15459 03ac 0B3083E0 		add	r3, r3, fp
 15460 03b0 243013E5 		ldr	r3, [r3, #-36]
 15461              		.loc 1 6139 11
 15462 03b4 030052E1 		cmp	r2, r3
 15463 03b8 0100002A 		bcs	.L993
6140:../../Source/Kernel/rme_kernel.c ****         {
6141:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6142:../../Source/Kernel/rme_kernel.c **** 
6143:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 15464              		.loc 1 6143 20
 15465 03bc CC30E0E3 		mvn	r3, #204
 15466 03c0 440000EA 		b	.L999
 15467              	.L993:
6116:../../Source/Kernel/rme_kernel.c ****     {
 15468              		.loc 1 6116 36 discriminator 2
 15469 03c4 08301BE5 		ldr	r3, [fp, #-8]
 15470 03c8 013083E2 		add	r3, r3, #1
 15471 03cc 08300BE5 		str	r3, [fp, #-8]
 15472              	.L981:
6116:../../Source/Kernel/rme_kernel.c ****     {
 15473              		.loc 1 6116 23 discriminator 1
 15474 03d0 08201BE5 		ldr	r2, [fp, #-8]
 15475 03d4 50301BE5 		ldr	r3, [fp, #-80]
 15476 03d8 030052E1 		cmp	r2, r3
 15477 03dc 28FFFF3A 		bcc	.L994
6144:../../Source/Kernel/rme_kernel.c ****         }
6145:../../Source/Kernel/rme_kernel.c ****         else
6146:../../Source/Kernel/rme_kernel.c ****         {
6147:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6148:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6149:../../Source/Kernel/rme_kernel.c ****         }
6150:../../Source/Kernel/rme_kernel.c ****     }
6151:../../Source/Kernel/rme_kernel.c ****     
6152:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6153:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 15478              		.loc 1 6153 5
 15479 03e0 0010A0E3 		mov	r1, #0
 15480 03e4 4C001BE5 		ldr	r0, [fp, #-76]
 15481 03e8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6154:../../Source/Kernel/rme_kernel.c ****     
6155:../../Source/Kernel/rme_kernel.c ****     /* Change priority for each thread, and we'll switch to the real highest priority
6156:../../Source/Kernel/rme_kernel.c ****      * thread after all these changes. This can help remove the excessive overhead. */
6157:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15482              		.loc 1 6157 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 381


 15483 03ec 0030A0E3 		mov	r3, #0
 15484 03f0 08300BE5 		str	r3, [fp, #-8]
 15485              		.loc 1 6157 5
 15486 03f4 2F0000EA 		b	.L995
 15487              	.L998:
6158:../../Source/Kernel/rme_kernel.c ****     {
6159:../../Source/Kernel/rme_kernel.c ****         /* See if this thread is currently in the runqueue */
6160:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.State==RME_THD_READY)
 15488              		.loc 1 6160 18
 15489 03f8 08301BE5 		ldr	r3, [fp, #-8]
 15490 03fc 0331A0E1 		lsl	r3, r3, #2
 15491 0400 043043E2 		sub	r3, r3, #4
 15492 0404 0B3083E0 		add	r3, r3, fp
 15493 0408 3C3013E5 		ldr	r3, [r3, #-60]
 15494              		.loc 1 6160 32
 15495 040c 1C3093E5 		ldr	r3, [r3, #28]
 15496              		.loc 1 6160 11
 15497 0410 000053E3 		cmp	r3, #0
 15498 0414 1900001A 		bne	.L996
6161:../../Source/Kernel/rme_kernel.c ****         {
6162:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6163:../../Source/Kernel/rme_kernel.c **** 
6164:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue, change priority, and add it back */
6165:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thread[Count]);
 15499              		.loc 1 6165 13
 15500 0418 08301BE5 		ldr	r3, [fp, #-8]
 15501 041c 0331A0E1 		lsl	r3, r3, #2
 15502 0420 043043E2 		sub	r3, r3, #4
 15503 0424 0B3083E0 		add	r3, r3, fp
 15504 0428 3C3013E5 		ldr	r3, [r3, #-60]
 15505 042c 0300A0E1 		mov	r0, r3
 15506 0430 FEFFFFEB 		bl	_RME_Run_Del
6166:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15507              		.loc 1 6166 19
 15508 0434 08301BE5 		ldr	r3, [fp, #-8]
 15509 0438 0331A0E1 		lsl	r3, r3, #2
 15510 043c 043043E2 		sub	r3, r3, #4
 15511 0440 0B3083E0 		add	r3, r3, fp
 15512 0444 3C2013E5 		ldr	r2, [r3, #-60]
 15513              		.loc 1 6166 43
 15514 0448 08301BE5 		ldr	r3, [fp, #-8]
 15515 044c 0331A0E1 		lsl	r3, r3, #2
 15516 0450 043043E2 		sub	r3, r3, #4
 15517 0454 0B3083E0 		add	r3, r3, fp
 15518 0458 243013E5 		ldr	r3, [r3, #-36]
 15519              		.loc 1 6166 38
 15520 045c 203082E5 		str	r3, [r2, #32]
6167:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread[Count]);
 15521              		.loc 1 6167 13
 15522 0460 08301BE5 		ldr	r3, [fp, #-8]
 15523 0464 0331A0E1 		lsl	r3, r3, #2
 15524 0468 043043E2 		sub	r3, r3, #4
 15525 046c 0B3083E0 		add	r3, r3, fp
 15526 0470 3C3013E5 		ldr	r3, [r3, #-60]
 15527 0474 0300A0E1 		mov	r0, r3
 15528 0478 FEFFFFEB 		bl	_RME_Run_Ins
 15529 047c 0A0000EA 		b	.L997
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 382


 15530              	.L996:
6168:../../Source/Kernel/rme_kernel.c ****         }
6169:../../Source/Kernel/rme_kernel.c ****         /* If it is BLOCKED, TIMEOUT or EXCPEND, changing the number will suffice */
6170:../../Source/Kernel/rme_kernel.c ****         else
6171:../../Source/Kernel/rme_kernel.c ****         {
6172:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6173:../../Source/Kernel/rme_kernel.c **** 
6174:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15531              		.loc 1 6174 19
 15532 0480 08301BE5 		ldr	r3, [fp, #-8]
 15533 0484 0331A0E1 		lsl	r3, r3, #2
 15534 0488 043043E2 		sub	r3, r3, #4
 15535 048c 0B3083E0 		add	r3, r3, fp
 15536 0490 3C2013E5 		ldr	r2, [r3, #-60]
 15537              		.loc 1 6174 43
 15538 0494 08301BE5 		ldr	r3, [fp, #-8]
 15539 0498 0331A0E1 		lsl	r3, r3, #2
 15540 049c 043043E2 		sub	r3, r3, #4
 15541 04a0 0B3083E0 		add	r3, r3, fp
 15542 04a4 243013E5 		ldr	r3, [r3, #-36]
 15543              		.loc 1 6174 38
 15544 04a8 203082E5 		str	r3, [r2, #32]
 15545              	.L997:
6157:../../Source/Kernel/rme_kernel.c ****     {
 15546              		.loc 1 6157 36 discriminator 2
 15547 04ac 08301BE5 		ldr	r3, [fp, #-8]
 15548 04b0 013083E2 		add	r3, r3, #1
 15549 04b4 08300BE5 		str	r3, [fp, #-8]
 15550              	.L995:
6157:../../Source/Kernel/rme_kernel.c ****     {
 15551              		.loc 1 6157 23 discriminator 1
 15552 04b8 08201BE5 		ldr	r2, [fp, #-8]
 15553 04bc 50301BE5 		ldr	r3, [fp, #-80]
 15554 04c0 030052E1 		cmp	r2, r3
 15555 04c4 CBFFFF3A 		bcc	.L998
6175:../../Source/Kernel/rme_kernel.c ****         }
6176:../../Source/Kernel/rme_kernel.c ****     }
6177:../../Source/Kernel/rme_kernel.c ****     
6178:../../Source/Kernel/rme_kernel.c ****     /* Pick the current highest priority thread to run */
6179:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 15556              		.loc 1 6179 5
 15557 04c8 0C101BE5 		ldr	r1, [fp, #-12]
 15558 04cc 4C001BE5 		ldr	r0, [fp, #-76]
 15559 04d0 FEFFFFEB 		bl	_RME_Kern_High
6180:../../Source/Kernel/rme_kernel.c **** 
6181:../../Source/Kernel/rme_kernel.c ****     return 0;
 15560              		.loc 1 6181 12
 15561 04d4 0030A0E3 		mov	r3, #0
 15562              	.L999:
6182:../../Source/Kernel/rme_kernel.c **** }
 15563              		.loc 1 6182 1
 15564 04d8 0300A0E1 		mov	r0, r3
 15565 04dc 04D04BE2 		sub	sp, fp, #4
 15566              		.cfi_def_cfa 13, 8
 15567              		@ sp needed
 15568 04e0 0088BDE8 		pop	{fp, pc}
 15569              		.cfi_endproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 383


 15570              	.LFE61:
 15572              		.section	.text._RME_Thd_Sched_Rcv,"ax",%progbits
 15573              		.align	2
 15574              		.syntax unified
 15575              		.arm
 15577              	_RME_Thd_Sched_Rcv:
 15578              	.LFB62:
6183:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Prio ******************************************/
6184:../../Source/Kernel/rme_kernel.c **** 
6185:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Rcv ************************************************
6186:../../Source/Kernel/rme_kernel.c **** Description : Try to receive a notification from the scheduler queue. This
6187:../../Source/Kernel/rme_kernel.c ****               can only be called from the same core the thread is on.
6188:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6189:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the scheduler thread. We
6190:../../Source/Kernel/rme_kernel.c ****                                   are going to get timeout or exception
6191:../../Source/Kernel/rme_kernel.c ****                                   notifications for the threads that it is
6192:../../Source/Kernel/rme_kernel.c ****                                   responsible for scheduling. This capability
6193:../../Source/Kernel/rme_kernel.c ****                                   must point to a thread on the same core.
6194:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6195:../../Source/Kernel/rme_kernel.c **** Output      : None.
6196:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the thread ID; or an error code.
6197:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6198:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Rcv(struct RME_Cap_Cpt* Cpt,
6199:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd)
6200:../../Source/Kernel/rme_kernel.c **** {
 15579              		.loc 1 6200 1
 15580              		.cfi_startproc
 15581              		@ args = 0, pretend = 0, frame = 32
 15582              		@ frame_needed = 1, uses_anonymous_args = 0
 15583 0000 00482DE9 		push	{fp, lr}
 15584              		.cfi_def_cfa_offset 8
 15585              		.cfi_offset 11, -8
 15586              		.cfi_offset 14, -4
 15587 0004 04B08DE2 		add	fp, sp, #4
 15588              		.cfi_def_cfa 11, 4
 15589 0008 20D04DE2 		sub	sp, sp, #32
 15590 000c 20000BE5 		str	r0, [fp, #-32]
 15591 0010 24100BE5 		str	r1, [fp, #-36]
6201:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
6202:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
6203:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
6204:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6205:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag;
6206:../../Source/Kernel/rme_kernel.c ****     
6207:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6208:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15592              		.loc 1 6208 5
 15593 0014 24301BE5 		ldr	r3, [fp, #-36]
 15594 0018 803003E2 		and	r3, r3, #128
 15595 001c 000053E3 		cmp	r3, #0
 15596 0020 1C00001A 		bne	.L1001
 15597              		.loc 1 6208 5 is_stmt 0 discriminator 1
 15598 0024 20301BE5 		ldr	r3, [fp, #-32]
 15599 0028 142093E5 		ldr	r2, [r3, #20]
 15600 002c 24301BE5 		ldr	r3, [fp, #-36]
 15601 0030 030052E1 		cmp	r2, r3
 15602 0034 0100008A 		bhi	.L1002
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 384


 15603              		.loc 1 6208 5 discriminator 3
 15604 0038 0230E0E3 		mvn	r3, #2
 15605              		.loc 1 6208 5
 15606 003c 970000EA 		b	.L1003
 15607              	.L1002:
 15608              		.loc 1 6208 5 discriminator 4
 15609 0040 24301BE5 		ldr	r3, [fp, #-36]
 15610 0044 8322A0E1 		lsl	r2, r3, #5
 15611 0048 20301BE5 		ldr	r3, [fp, #-32]
 15612 004c 0C3093E5 		ldr	r3, [r3, #12]
 15613 0050 033082E0 		add	r3, r2, r3
 15614 0054 08300BE5 		str	r3, [fp, #-8]
 15615 0058 08301BE5 		ldr	r3, [fp, #-8]
 15616 005c 0300A0E1 		mov	r0, r3
 15617 0060 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15618 0064 10000BE5 		str	r0, [fp, #-16]
 15619              		.loc 1 6208 5 discriminator 1
 15620 0068 10301BE5 		ldr	r3, [fp, #-16]
 15621 006c FF3803E2 		and	r3, r3, #16711680
 15622 0070 020853E3 		cmp	r3, #131072
 15623 0074 0100001A 		bne	.L1004
 15624              		.loc 1 6208 5 discriminator 5
 15625 0078 0830E0E3 		mvn	r3, #8
 15626              		.loc 1 6208 5
 15627 007c 870000EA 		b	.L1003
 15628              	.L1004:
 15629              		.loc 1 6208 5 discriminator 6
 15630 0080 10301BE5 		ldr	r3, [fp, #-16]
 15631 0084 233CA0E1 		lsr	r3, r3, #24
 15632 0088 060053E3 		cmp	r3, #6
 15633 008c 3F00000A 		beq	.L1005
 15634              		.loc 1 6208 5 discriminator 7
 15635 0090 0130E0E3 		mvn	r3, #1
 15636              		.loc 1 6208 5
 15637 0094 810000EA 		b	.L1003
 15638              	.L1001:
 15639              		.loc 1 6208 5 discriminator 2
 15640 0098 24301BE5 		ldr	r3, [fp, #-36]
 15641 009c 2324A0E1 		lsr	r2, r3, #8
 15642 00a0 20301BE5 		ldr	r3, [fp, #-32]
 15643 00a4 143093E5 		ldr	r3, [r3, #20]
 15644 00a8 030052E1 		cmp	r2, r3
 15645 00ac 0100003A 		bcc	.L1006
 15646              		.loc 1 6208 5 discriminator 8
 15647 00b0 0230E0E3 		mvn	r3, #2
 15648              		.loc 1 6208 5
 15649 00b4 790000EA 		b	.L1003
 15650              	.L1006:
 15651              		.loc 1 6208 5 discriminator 9
 15652 00b8 24301BE5 		ldr	r3, [fp, #-36]
 15653 00bc 2334A0E1 		lsr	r3, r3, #8
 15654 00c0 8322A0E1 		lsl	r2, r3, #5
 15655 00c4 20301BE5 		ldr	r3, [fp, #-32]
 15656 00c8 0C3093E5 		ldr	r3, [r3, #12]
 15657 00cc 033082E0 		add	r3, r2, r3
 15658 00d0 08300BE5 		str	r3, [fp, #-8]
 15659 00d4 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 385


 15660 00d8 0300A0E1 		mov	r0, r3
 15661 00dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15662 00e0 10000BE5 		str	r0, [fp, #-16]
 15663              		.loc 1 6208 5 discriminator 1
 15664 00e4 10301BE5 		ldr	r3, [fp, #-16]
 15665 00e8 FF3803E2 		and	r3, r3, #16711680
 15666 00ec 020853E3 		cmp	r3, #131072
 15667 00f0 0100001A 		bne	.L1007
 15668              		.loc 1 6208 5 discriminator 10
 15669 00f4 0830E0E3 		mvn	r3, #8
 15670              		.loc 1 6208 5
 15671 00f8 680000EA 		b	.L1003
 15672              	.L1007:
 15673              		.loc 1 6208 5 discriminator 11
 15674 00fc 10301BE5 		ldr	r3, [fp, #-16]
 15675 0100 233CA0E1 		lsr	r3, r3, #24
 15676 0104 030053E3 		cmp	r3, #3
 15677 0108 0100000A 		beq	.L1008
 15678              		.loc 1 6208 5 discriminator 12
 15679 010c 0130E0E3 		mvn	r3, #1
 15680              		.loc 1 6208 5
 15681 0110 620000EA 		b	.L1003
 15682              	.L1008:
 15683              		.loc 1 6208 5 discriminator 13
 15684 0114 24301BE5 		ldr	r3, [fp, #-36]
 15685 0118 7F2003E2 		and	r2, r3, #127
 15686 011c 08301BE5 		ldr	r3, [fp, #-8]
 15687 0120 143093E5 		ldr	r3, [r3, #20]
 15688 0124 030052E1 		cmp	r2, r3
 15689 0128 0100003A 		bcc	.L1009
 15690              		.loc 1 6208 5 discriminator 14
 15691 012c 0230E0E3 		mvn	r3, #2
 15692              		.loc 1 6208 5
 15693 0130 5A0000EA 		b	.L1003
 15694              	.L1009:
 15695              		.loc 1 6208 5 discriminator 15
 15696 0134 24301BE5 		ldr	r3, [fp, #-36]
 15697 0138 7F3003E2 		and	r3, r3, #127
 15698 013c 8322A0E1 		lsl	r2, r3, #5
 15699 0140 08301BE5 		ldr	r3, [fp, #-8]
 15700 0144 0C3093E5 		ldr	r3, [r3, #12]
 15701 0148 033082E0 		add	r3, r2, r3
 15702 014c 08300BE5 		str	r3, [fp, #-8]
 15703 0150 08301BE5 		ldr	r3, [fp, #-8]
 15704 0154 0300A0E1 		mov	r0, r3
 15705 0158 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15706 015c 10000BE5 		str	r0, [fp, #-16]
 15707              		.loc 1 6208 5 discriminator 1
 15708 0160 10301BE5 		ldr	r3, [fp, #-16]
 15709 0164 FF3803E2 		and	r3, r3, #16711680
 15710 0168 020853E3 		cmp	r3, #131072
 15711 016c 0100001A 		bne	.L1010
 15712              		.loc 1 6208 5 discriminator 16
 15713 0170 0830E0E3 		mvn	r3, #8
 15714              		.loc 1 6208 5
 15715 0174 490000EA 		b	.L1003
 15716              	.L1010:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 386


 15717              		.loc 1 6208 5 discriminator 17
 15718 0178 10301BE5 		ldr	r3, [fp, #-16]
 15719 017c 233CA0E1 		lsr	r3, r3, #24
 15720 0180 060053E3 		cmp	r3, #6
 15721 0184 0100000A 		beq	.L1005
 15722              		.loc 1 6208 5 discriminator 18
 15723 0188 0130E0E3 		mvn	r3, #1
 15724              		.loc 1 6208 5
 15725 018c 430000EA 		b	.L1003
 15726              	.L1005:
6209:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
6210:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6211:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_RCV);
 15727              		.loc 1 6211 5 is_stmt 1
 15728 0190 08301BE5 		ldr	r3, [fp, #-8]
 15729 0194 083093E5 		ldr	r3, [r3, #8]
 15730 0198 203003E2 		and	r3, r3, #32
 15731 019c 000053E3 		cmp	r3, #0
 15732 01a0 0100001A 		bne	.L1011
 15733              		.loc 1 6211 5 is_stmt 0 discriminator 1
 15734 01a4 0630E0E3 		mvn	r3, #6
 15735              		.loc 1 6211 5
 15736 01a8 3C0000EA 		b	.L1003
 15737              	.L1011:
6212:../../Source/Kernel/rme_kernel.c ****     
6213:../../Source/Kernel/rme_kernel.c ****     /* Check if we are on the same core with the target thread */
6214:../../Source/Kernel/rme_kernel.c ****     Scheduler=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 15738              		.loc 1 6214 51 is_stmt 1
 15739 01ac 08301BE5 		ldr	r3, [fp, #-8]
 15740 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15741              		.loc 1 6214 14
 15742 01b4 14300BE5 		str	r3, [fp, #-20]
6215:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=RME_CPU_LOCAL())
 15743              		.loc 1 6215 24
 15744 01b8 14301BE5 		ldr	r3, [fp, #-20]
 15745 01bc 142093E5 		ldr	r2, [r3, #20]
 15746              		.loc 1 6215 7
 15747 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15748 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15749 01c8 030052E1 		cmp	r2, r3
 15750 01cc 0100000A 		beq	.L1012
6216:../../Source/Kernel/rme_kernel.c ****     {
6217:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6218:../../Source/Kernel/rme_kernel.c **** 
6219:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15751              		.loc 1 6219 16
 15752 01d0 CB30E0E3 		mvn	r3, #203
 15753 01d4 310000EA 		b	.L1003
 15754              	.L1012:
6220:../../Source/Kernel/rme_kernel.c ****     }
6221:../../Source/Kernel/rme_kernel.c ****     else
6222:../../Source/Kernel/rme_kernel.c ****     {
6223:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6224:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6225:../../Source/Kernel/rme_kernel.c ****     }
6226:../../Source/Kernel/rme_kernel.c ****     
6227:../../Source/Kernel/rme_kernel.c ****     /* Check if there are any notifications */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 387


6228:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Event.Next==&(Scheduler->Sched.Event))
 15755              		.loc 1 6228 30
 15756 01d8 14301BE5 		ldr	r3, [fp, #-20]
 15757 01dc 3C2093E5 		ldr	r2, [r3, #60]
 15758              		.loc 1 6228 37
 15759 01e0 14301BE5 		ldr	r3, [fp, #-20]
 15760 01e4 3C3083E2 		add	r3, r3, #60
 15761              		.loc 1 6228 7
 15762 01e8 030052E1 		cmp	r2, r3
 15763 01ec 0100001A 		bne	.L1013
6229:../../Source/Kernel/rme_kernel.c ****     {
6230:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6231:../../Source/Kernel/rme_kernel.c **** 
6232:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 15764              		.loc 1 6232 16
 15765 01f0 CE30E0E3 		mvn	r3, #206
 15766 01f4 290000EA 		b	.L1003
 15767              	.L1013:
6233:../../Source/Kernel/rme_kernel.c ****     }
6234:../../Source/Kernel/rme_kernel.c ****     else
6235:../../Source/Kernel/rme_kernel.c ****     {
6236:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6237:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6238:../../Source/Kernel/rme_kernel.c ****     }
6239:../../Source/Kernel/rme_kernel.c ****     
6240:../../Source/Kernel/rme_kernel.c ****     /* Return one notification and delete it from the notification list */
6241:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)(Scheduler->Sched.Event.Next-1U);
 15768              		.loc 1 6241 59
 15769 01f8 14301BE5 		ldr	r3, [fp, #-20]
 15770 01fc 3C3093E5 		ldr	r3, [r3, #60]
 15771              		.loc 1 6241 11
 15772 0200 083043E2 		sub	r3, r3, #8
 15773 0204 18300BE5 		str	r3, [fp, #-24]
6242:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 15774              		.loc 1 6242 5
 15775 0208 18301BE5 		ldr	r3, [fp, #-24]
 15776 020c 0C2093E5 		ldr	r2, [r3, #12]
 15777 0210 18301BE5 		ldr	r3, [fp, #-24]
 15778 0214 083093E5 		ldr	r3, [r3, #8]
 15779 0218 0310A0E1 		mov	r1, r3
 15780 021c 0200A0E1 		mov	r0, r2
 15781 0220 FEFFFFEB 		bl	_RME_List_Del
6243:../../Source/Kernel/rme_kernel.c ****     /* We need to do this because we are using this to detect whether the notification is sent */
6244:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 15782              		.loc 1 6244 5
 15783 0224 18301BE5 		ldr	r3, [fp, #-24]
 15784 0228 083083E2 		add	r3, r3, #8
 15785 022c 0300A0E1 		mov	r0, r3
 15786 0230 FEFFFFEB 		bl	_RME_List_Crt
6245:../../Source/Kernel/rme_kernel.c ****     
6246:../../Source/Kernel/rme_kernel.c ****     /* Exception pending */
6247:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15787              		.loc 1 6247 21
 15788 0234 18301BE5 		ldr	r3, [fp, #-24]
 15789 0238 1C3093E5 		ldr	r3, [r3, #28]
 15790              		.loc 1 6247 7
 15791 023c 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 388


 15792 0240 0900001A 		bne	.L1014
6248:../../Source/Kernel/rme_kernel.c ****     {
6249:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6250:../../Source/Kernel/rme_kernel.c ****         
6251:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_EXCPEND_FLAG;
 15793              		.loc 1 6251 13
 15794 0244 0131A0E3 		mov	r3, #1073741824
 15795 0248 0C300BE5 		str	r3, [fp, #-12]
6252:../../Source/Kernel/rme_kernel.c ****         
6253:../../Source/Kernel/rme_kernel.c ****         /* Is it also out of timeslice? */
6254:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice==0U)
 15796              		.loc 1 6254 25
 15797 024c 18301BE5 		ldr	r3, [fp, #-24]
 15798 0250 183093E5 		ldr	r3, [r3, #24]
 15799              		.loc 1 6254 11
 15800 0254 000053E3 		cmp	r3, #0
 15801 0258 0C00001A 		bne	.L1015
6255:../../Source/Kernel/rme_kernel.c ****         {
6256:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6257:../../Source/Kernel/rme_kernel.c ****             
6258:../../Source/Kernel/rme_kernel.c ****             Flag|=RME_THD_TIMEOUT_FLAG;
 15802              		.loc 1 6258 17
 15803 025c 0C301BE5 		ldr	r3, [fp, #-12]
 15804 0260 023283E3 		orr	r3, r3, #536870912
 15805 0264 0C300BE5 		str	r3, [fp, #-12]
 15806 0268 080000EA 		b	.L1015
 15807              	.L1014:
6259:../../Source/Kernel/rme_kernel.c ****         }
6260:../../Source/Kernel/rme_kernel.c ****         else
6261:../../Source/Kernel/rme_kernel.c ****         {
6262:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6263:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6264:../../Source/Kernel/rme_kernel.c ****         }
6265:../../Source/Kernel/rme_kernel.c ****     }
6266:../../Source/Kernel/rme_kernel.c ****     /* Timeout */
6267:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_TIMEOUT)
 15808              		.loc 1 6267 26
 15809 026c 18301BE5 		ldr	r3, [fp, #-24]
 15810 0270 1C3093E5 		ldr	r3, [r3, #28]
 15811              		.loc 1 6267 12
 15812 0274 020053E3 		cmp	r3, #2
 15813 0278 0200001A 		bne	.L1016
6268:../../Source/Kernel/rme_kernel.c ****     {
6269:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6270:../../Source/Kernel/rme_kernel.c ****         
6271:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_TIMEOUT_FLAG;
 15814              		.loc 1 6271 13
 15815 027c 0232A0E3 		mov	r3, #536870912
 15816 0280 0C300BE5 		str	r3, [fp, #-12]
 15817 0284 010000EA 		b	.L1015
 15818              	.L1016:
6272:../../Source/Kernel/rme_kernel.c ****     }
6273:../../Source/Kernel/rme_kernel.c ****     /* Spurious notification, cause eliminated before this sched rcv */
6274:../../Source/Kernel/rme_kernel.c ****     else
6275:../../Source/Kernel/rme_kernel.c ****     {
6276:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6277:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 389


6278:../../Source/Kernel/rme_kernel.c ****         Flag=0U;
 15819              		.loc 1 6278 13
 15820 0288 0030A0E3 		mov	r3, #0
 15821 028c 0C300BE5 		str	r3, [fp, #-12]
 15822              	.L1015:
6279:../../Source/Kernel/rme_kernel.c ****     }
6280:../../Source/Kernel/rme_kernel.c ****     
6281:../../Source/Kernel/rme_kernel.c ****     /* Return the notification TID with the flags */
6282:../../Source/Kernel/rme_kernel.c ****     return (rme_ret_t)(Thread->Sched.TID|Flag);
 15823              		.loc 1 6282 37
 15824 0290 18301BE5 		ldr	r3, [fp, #-24]
 15825 0294 102093E5 		ldr	r2, [r3, #16]
 15826              		.loc 1 6282 41
 15827 0298 0C301BE5 		ldr	r3, [fp, #-12]
 15828 029c 033082E1 		orr	r3, r2, r3
 15829              	.L1003:
6283:../../Source/Kernel/rme_kernel.c **** }
 15830              		.loc 1 6283 1
 15831 02a0 0300A0E1 		mov	r0, r3
 15832 02a4 04D04BE2 		sub	sp, fp, #4
 15833              		.cfi_def_cfa 13, 8
 15834              		@ sp needed
 15835 02a8 0088BDE8 		pop	{fp, pc}
 15836              		.cfi_endproc
 15837              	.LFE62:
 15839              		.section	.rodata
 15840              		.align	2
 15841              	.LC9:
 15842 00c0 0D0A524D 		.ascii	"\015\012RME_ERR_PTH_INVSTATE\000"
 15842      455F4552 
 15842      525F5054 
 15842      485F494E 
 15842      56535441 
 15843              		.section	.text._RME_Thd_Time_Xfer,"ax",%progbits
 15844              		.align	2
 15845              		.syntax unified
 15846              		.arm
 15848              	_RME_Thd_Time_Xfer:
 15849              	.LFB63:
6284:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Rcv *******************************************/
6285:../../Source/Kernel/rme_kernel.c **** 
6286:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Time_Xfer ************************************************
6287:../../Source/Kernel/rme_kernel.c **** Description : Transfer time from one thread to another. This can only be called
6288:../../Source/Kernel/rme_kernel.c ****               from the core that the thread is on, and the the two threads
6289:../../Source/Kernel/rme_kernel.c ****               involved in the time transfer must be on the same core.
6290:../../Source/Kernel/rme_kernel.c ****               If the time transfered is more than or equal to what the source
6291:../../Source/Kernel/rme_kernel.c ****               have, the source will be out of time or blocked. If the source is
6292:../../Source/Kernel/rme_kernel.c ****               both out of time and blocked, we do not send the notification;
6293:../../Source/Kernel/rme_kernel.c ****               Instead, we send the notification when the receive endpoint
6294:../../Source/Kernel/rme_kernel.c ****               actually receive something.
6295:../../Source/Kernel/rme_kernel.c ****               It is possible to transfer time to threads have a lower priority,
6296:../../Source/Kernel/rme_kernel.c ****               and it is also possible to transfer time to threads that have a
6297:../../Source/Kernel/rme_kernel.c ****               higher priority. In the latter case, and if the source is
6298:../../Source/Kernel/rme_kernel.c ****               currently running, a preemption will occur. However, it is not
6299:../../Source/Kernel/rme_kernel.c ****               allowed to transfer time to a thread with higher maximum priority,
6300:../../Source/Kernel/rme_kernel.c ****               and this guarantees that the quality of time can only degrade.
6301:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of threads in the system:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 390


6302:../../Source/Kernel/rme_kernel.c ****               1. Init threads - They are created at boot-time and have infinite
6303:../../Source/Kernel/rme_kernel.c ****                                 budget.
6304:../../Source/Kernel/rme_kernel.c ****               2. Infinite threads - They are created later but have infinite
6305:../../Source/Kernel/rme_kernel.c ****                                     budget.
6306:../../Source/Kernel/rme_kernel.c ****               3. Normal threads - They are created later and have a finite
6307:../../Source/Kernel/rme_kernel.c ****                                   budget.
6308:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of transfer in the system:
6309:../../Source/Kernel/rme_kernel.c ****               1. Normal transfers - They transfer a finite budget.
6310:../../Source/Kernel/rme_kernel.c ****               2. Infinite transfers - They attempt to transfer an infinite
6311:../../Source/Kernel/rme_kernel.c ****                                       budget but will not revoke the timeslices
6312:../../Source/Kernel/rme_kernel.c ****                                       of the source if the source have infinite
6313:../../Source/Kernel/rme_kernel.c ****                                       budget.
6314:../../Source/Kernel/rme_kernel.c ****               3. Revoking transfers - They attempt to transfer an infinite
6315:../../Source/Kernel/rme_kernel.c ****                                       budget but will revoke the timeslices of
6316:../../Source/Kernel/rme_kernel.c ****                                       the source if the source is an infinite
6317:../../Source/Kernel/rme_kernel.c ****                                       thread.
6318:../../Source/Kernel/rme_kernel.c ****               Normal budget transferring rules:
6319:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6320:../../Source/Kernel/rme_kernel.c ****                 Nom   |   From   |     Init     |   Infinite   |    Normal
6321:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6322:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      T-
6323:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6324:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      T-
6325:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6326:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -A      |      -A      |      TA
6327:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6328:../../Source/Kernel/rme_kernel.c ****               Infinite budget transferring rules:
6329:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6330:../../Source/Kernel/rme_kernel.c ****                 Inf   |   From   |     Init     |   Infinite   |    Normal
6331:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6332:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      S-
6333:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6334:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      S-
6335:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6336:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      -I      |      TA
6337:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6338:../../Source/Kernel/rme_kernel.c ****               Revoking budget transferring rules:
6339:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6340:../../Source/Kernel/rme_kernel.c ****                 Rev   |   From   |     Init     |   Infinite   |    Normal
6341:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6342:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      S-      |      S-
6343:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6344:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      S-      |      S-
6345:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6346:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      SI      |      TA
6347:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6348:../../Source/Kernel/rme_kernel.c ****               Notations:
6349:../../Source/Kernel/rme_kernel.c ****               -:Nothing will happen on source/destination.
6350:../../Source/Kernel/rme_kernel.c ****               T:Source timeout if all transferred.
6351:../../Source/Kernel/rme_kernel.c ****               S:Source will definitely timeout.
6352:../../Source/Kernel/rme_kernel.c ****               A:Destination accept if not overflow.
6353:../../Source/Kernel/rme_kernel.c ****               I:Destination will definitely become an infinite thread.
6354:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6355:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6356:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Dst - The destination thread.
6357:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6358:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Src - The source thread.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 391


6359:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6360:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Time - The time to transfer, in slices.
6361:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INIT_TIME for revoking transfer.
6362:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INF_TIME for infinite trasnfer.
6363:../../Source/Kernel/rme_kernel.c **** Output      : None.
6364:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the destination time amount; or an
6365:../../Source/Kernel/rme_kernel.c ****                           error code.
6366:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6367:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Time_Xfer(struct RME_Cap_Cpt* Cpt,
6368:../../Source/Kernel/rme_kernel.c ****                                     struct RME_Reg_Struct* Reg,
6369:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Dst,
6370:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Src,
6371:../../Source/Kernel/rme_kernel.c ****                                     rme_ptr_t Time)
6372:../../Source/Kernel/rme_kernel.c **** {
 15850              		.loc 1 6372 1
 15851              		.cfi_startproc
 15852              		@ args = 4, pretend = 0, frame = 48
 15853              		@ frame_needed = 1, uses_anonymous_args = 0
 15854 0000 00482DE9 		push	{fp, lr}
 15855              		.cfi_def_cfa_offset 8
 15856              		.cfi_offset 11, -8
 15857              		.cfi_offset 14, -4
 15858 0004 04B08DE2 		add	fp, sp, #4
 15859              		.cfi_def_cfa 11, 4
 15860 0008 30D04DE2 		sub	sp, sp, #48
 15861 000c 28000BE5 		str	r0, [fp, #-40]
 15862 0010 2C100BE5 		str	r1, [fp, #-44]
 15863 0014 30200BE5 		str	r2, [fp, #-48]
 15864 0018 34300BE5 		str	r3, [fp, #-52]
6373:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Dst_Op;
6374:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Src_Op;
6375:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Dst;
6376:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Src;
6377:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6378:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Time_Xfer;
6379:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6380:../../Source/Kernel/rme_kernel.c ****     
6381:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCap_Thd_Dst ");
6382:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Cap_Thd_Dst);
6383:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd_Src ");
6384:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Cap_Thd_Src);
6385:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nTime ");
6386:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Time);*/
6387:../../Source/Kernel/rme_kernel.c ****     /* We may allow transferring infinite time here */
6388:../../Source/Kernel/rme_kernel.c ****     if(Time==0U)
 15865              		.loc 1 6388 7
 15866 001c 04309BE5 		ldr	r3, [fp, #4]
 15867 0020 000053E3 		cmp	r3, #0
 15868 0024 0100001A 		bne	.L1018
6389:../../Source/Kernel/rme_kernel.c ****     {
6390:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6391:../../Source/Kernel/rme_kernel.c **** 
6392:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15869              		.loc 1 6392 16
 15870 0028 CB30E0E3 		mvn	r3, #203
 15871 002c 7A0100EA 		b	.L1019
 15872              	.L1018:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 392


6393:../../Source/Kernel/rme_kernel.c ****     }
6394:../../Source/Kernel/rme_kernel.c ****     else
6395:../../Source/Kernel/rme_kernel.c ****     {
6396:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6397:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6398:../../Source/Kernel/rme_kernel.c ****     }
6399:../../Source/Kernel/rme_kernel.c ****     
6400:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6401:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Dst,RME_CAP_TYPE_THD,
 15873              		.loc 1 6401 5
 15874 0030 30301BE5 		ldr	r3, [fp, #-48]
 15875 0034 803003E2 		and	r3, r3, #128
 15876 0038 000053E3 		cmp	r3, #0
 15877 003c 1C00001A 		bne	.L1020
 15878              		.loc 1 6401 5 is_stmt 0 discriminator 1
 15879 0040 28301BE5 		ldr	r3, [fp, #-40]
 15880 0044 142093E5 		ldr	r2, [r3, #20]
 15881 0048 30301BE5 		ldr	r3, [fp, #-48]
 15882 004c 030052E1 		cmp	r2, r3
 15883 0050 0100008A 		bhi	.L1021
 15884              		.loc 1 6401 5 discriminator 3
 15885 0054 0230E0E3 		mvn	r3, #2
 15886              		.loc 1 6401 5
 15887 0058 6F0100EA 		b	.L1019
 15888              	.L1021:
 15889              		.loc 1 6401 5 discriminator 4
 15890 005c 30301BE5 		ldr	r3, [fp, #-48]
 15891 0060 8322A0E1 		lsl	r2, r3, #5
 15892 0064 28301BE5 		ldr	r3, [fp, #-40]
 15893 0068 0C3093E5 		ldr	r3, [r3, #12]
 15894 006c 033082E0 		add	r3, r2, r3
 15895 0070 08300BE5 		str	r3, [fp, #-8]
 15896 0074 08301BE5 		ldr	r3, [fp, #-8]
 15897 0078 0300A0E1 		mov	r0, r3
 15898 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15899 0080 14000BE5 		str	r0, [fp, #-20]
 15900              		.loc 1 6401 5 discriminator 1
 15901 0084 14301BE5 		ldr	r3, [fp, #-20]
 15902 0088 FF3803E2 		and	r3, r3, #16711680
 15903 008c 020853E3 		cmp	r3, #131072
 15904 0090 0100001A 		bne	.L1022
 15905              		.loc 1 6401 5 discriminator 5
 15906 0094 0830E0E3 		mvn	r3, #8
 15907              		.loc 1 6401 5
 15908 0098 5F0100EA 		b	.L1019
 15909              	.L1022:
 15910              		.loc 1 6401 5 discriminator 6
 15911 009c 14301BE5 		ldr	r3, [fp, #-20]
 15912 00a0 233CA0E1 		lsr	r3, r3, #24
 15913 00a4 060053E3 		cmp	r3, #6
 15914 00a8 3F00000A 		beq	.L1023
 15915              		.loc 1 6401 5 discriminator 7
 15916 00ac 0130E0E3 		mvn	r3, #1
 15917              		.loc 1 6401 5
 15918 00b0 590100EA 		b	.L1019
 15919              	.L1020:
 15920              		.loc 1 6401 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 393


 15921 00b4 30301BE5 		ldr	r3, [fp, #-48]
 15922 00b8 2324A0E1 		lsr	r2, r3, #8
 15923 00bc 28301BE5 		ldr	r3, [fp, #-40]
 15924 00c0 143093E5 		ldr	r3, [r3, #20]
 15925 00c4 030052E1 		cmp	r2, r3
 15926 00c8 0100003A 		bcc	.L1024
 15927              		.loc 1 6401 5 discriminator 8
 15928 00cc 0230E0E3 		mvn	r3, #2
 15929              		.loc 1 6401 5
 15930 00d0 510100EA 		b	.L1019
 15931              	.L1024:
 15932              		.loc 1 6401 5 discriminator 9
 15933 00d4 30301BE5 		ldr	r3, [fp, #-48]
 15934 00d8 2334A0E1 		lsr	r3, r3, #8
 15935 00dc 8322A0E1 		lsl	r2, r3, #5
 15936 00e0 28301BE5 		ldr	r3, [fp, #-40]
 15937 00e4 0C3093E5 		ldr	r3, [r3, #12]
 15938 00e8 033082E0 		add	r3, r2, r3
 15939 00ec 08300BE5 		str	r3, [fp, #-8]
 15940 00f0 08301BE5 		ldr	r3, [fp, #-8]
 15941 00f4 0300A0E1 		mov	r0, r3
 15942 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15943 00fc 14000BE5 		str	r0, [fp, #-20]
 15944              		.loc 1 6401 5 discriminator 1
 15945 0100 14301BE5 		ldr	r3, [fp, #-20]
 15946 0104 FF3803E2 		and	r3, r3, #16711680
 15947 0108 020853E3 		cmp	r3, #131072
 15948 010c 0100001A 		bne	.L1025
 15949              		.loc 1 6401 5 discriminator 10
 15950 0110 0830E0E3 		mvn	r3, #8
 15951              		.loc 1 6401 5
 15952 0114 400100EA 		b	.L1019
 15953              	.L1025:
 15954              		.loc 1 6401 5 discriminator 11
 15955 0118 14301BE5 		ldr	r3, [fp, #-20]
 15956 011c 233CA0E1 		lsr	r3, r3, #24
 15957 0120 030053E3 		cmp	r3, #3
 15958 0124 0100000A 		beq	.L1026
 15959              		.loc 1 6401 5 discriminator 12
 15960 0128 0130E0E3 		mvn	r3, #1
 15961              		.loc 1 6401 5
 15962 012c 3A0100EA 		b	.L1019
 15963              	.L1026:
 15964              		.loc 1 6401 5 discriminator 13
 15965 0130 30301BE5 		ldr	r3, [fp, #-48]
 15966 0134 7F2003E2 		and	r2, r3, #127
 15967 0138 08301BE5 		ldr	r3, [fp, #-8]
 15968 013c 143093E5 		ldr	r3, [r3, #20]
 15969 0140 030052E1 		cmp	r2, r3
 15970 0144 0100003A 		bcc	.L1027
 15971              		.loc 1 6401 5 discriminator 14
 15972 0148 0230E0E3 		mvn	r3, #2
 15973              		.loc 1 6401 5
 15974 014c 320100EA 		b	.L1019
 15975              	.L1027:
 15976              		.loc 1 6401 5 discriminator 15
 15977 0150 30301BE5 		ldr	r3, [fp, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 394


 15978 0154 7F3003E2 		and	r3, r3, #127
 15979 0158 8322A0E1 		lsl	r2, r3, #5
 15980 015c 08301BE5 		ldr	r3, [fp, #-8]
 15981 0160 0C3093E5 		ldr	r3, [r3, #12]
 15982 0164 033082E0 		add	r3, r2, r3
 15983 0168 08300BE5 		str	r3, [fp, #-8]
 15984 016c 08301BE5 		ldr	r3, [fp, #-8]
 15985 0170 0300A0E1 		mov	r0, r3
 15986 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15987 0178 14000BE5 		str	r0, [fp, #-20]
 15988              		.loc 1 6401 5 discriminator 1
 15989 017c 14301BE5 		ldr	r3, [fp, #-20]
 15990 0180 FF3803E2 		and	r3, r3, #16711680
 15991 0184 020853E3 		cmp	r3, #131072
 15992 0188 0100001A 		bne	.L1028
 15993              		.loc 1 6401 5 discriminator 16
 15994 018c 0830E0E3 		mvn	r3, #8
 15995              		.loc 1 6401 5
 15996 0190 210100EA 		b	.L1019
 15997              	.L1028:
 15998              		.loc 1 6401 5 discriminator 17
 15999 0194 14301BE5 		ldr	r3, [fp, #-20]
 16000 0198 233CA0E1 		lsr	r3, r3, #24
 16001 019c 060053E3 		cmp	r3, #6
 16002 01a0 0100000A 		beq	.L1023
 16003              		.loc 1 6401 5 discriminator 18
 16004 01a4 0130E0E3 		mvn	r3, #1
 16005              		.loc 1 6401 5
 16006 01a8 1B0100EA 		b	.L1019
 16007              	.L1023:
6402:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Dst_Op,Type_Stat);
6403:../../Source/Kernel/rme_kernel.c **** 
6404:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Src,RME_CAP_TYPE_THD,
 16008              		.loc 1 6404 5 is_stmt 1
 16009 01ac 34301BE5 		ldr	r3, [fp, #-52]
 16010 01b0 803003E2 		and	r3, r3, #128
 16011 01b4 000053E3 		cmp	r3, #0
 16012 01b8 1C00001A 		bne	.L1029
 16013              		.loc 1 6404 5 is_stmt 0 discriminator 1
 16014 01bc 28301BE5 		ldr	r3, [fp, #-40]
 16015 01c0 142093E5 		ldr	r2, [r3, #20]
 16016 01c4 34301BE5 		ldr	r3, [fp, #-52]
 16017 01c8 030052E1 		cmp	r2, r3
 16018 01cc 0100008A 		bhi	.L1030
 16019              		.loc 1 6404 5 discriminator 3
 16020 01d0 0230E0E3 		mvn	r3, #2
 16021              		.loc 1 6404 5
 16022 01d4 100100EA 		b	.L1019
 16023              	.L1030:
 16024              		.loc 1 6404 5 discriminator 4
 16025 01d8 34301BE5 		ldr	r3, [fp, #-52]
 16026 01dc 8322A0E1 		lsl	r2, r3, #5
 16027 01e0 28301BE5 		ldr	r3, [fp, #-40]
 16028 01e4 0C3093E5 		ldr	r3, [r3, #12]
 16029 01e8 033082E0 		add	r3, r2, r3
 16030 01ec 0C300BE5 		str	r3, [fp, #-12]
 16031 01f0 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 395


 16032 01f4 0300A0E1 		mov	r0, r3
 16033 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16034 01fc 14000BE5 		str	r0, [fp, #-20]
 16035              		.loc 1 6404 5 discriminator 1
 16036 0200 14301BE5 		ldr	r3, [fp, #-20]
 16037 0204 FF3803E2 		and	r3, r3, #16711680
 16038 0208 020853E3 		cmp	r3, #131072
 16039 020c 0100001A 		bne	.L1031
 16040              		.loc 1 6404 5 discriminator 5
 16041 0210 0830E0E3 		mvn	r3, #8
 16042              		.loc 1 6404 5
 16043 0214 000100EA 		b	.L1019
 16044              	.L1031:
 16045              		.loc 1 6404 5 discriminator 6
 16046 0218 14301BE5 		ldr	r3, [fp, #-20]
 16047 021c 233CA0E1 		lsr	r3, r3, #24
 16048 0220 060053E3 		cmp	r3, #6
 16049 0224 3F00000A 		beq	.L1032
 16050              		.loc 1 6404 5 discriminator 7
 16051 0228 0130E0E3 		mvn	r3, #1
 16052              		.loc 1 6404 5
 16053 022c FA0000EA 		b	.L1019
 16054              	.L1029:
 16055              		.loc 1 6404 5 discriminator 2
 16056 0230 34301BE5 		ldr	r3, [fp, #-52]
 16057 0234 2324A0E1 		lsr	r2, r3, #8
 16058 0238 28301BE5 		ldr	r3, [fp, #-40]
 16059 023c 143093E5 		ldr	r3, [r3, #20]
 16060 0240 030052E1 		cmp	r2, r3
 16061 0244 0100003A 		bcc	.L1033
 16062              		.loc 1 6404 5 discriminator 8
 16063 0248 0230E0E3 		mvn	r3, #2
 16064              		.loc 1 6404 5
 16065 024c F20000EA 		b	.L1019
 16066              	.L1033:
 16067              		.loc 1 6404 5 discriminator 9
 16068 0250 34301BE5 		ldr	r3, [fp, #-52]
 16069 0254 2334A0E1 		lsr	r3, r3, #8
 16070 0258 8322A0E1 		lsl	r2, r3, #5
 16071 025c 28301BE5 		ldr	r3, [fp, #-40]
 16072 0260 0C3093E5 		ldr	r3, [r3, #12]
 16073 0264 033082E0 		add	r3, r2, r3
 16074 0268 0C300BE5 		str	r3, [fp, #-12]
 16075 026c 0C301BE5 		ldr	r3, [fp, #-12]
 16076 0270 0300A0E1 		mov	r0, r3
 16077 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16078 0278 14000BE5 		str	r0, [fp, #-20]
 16079              		.loc 1 6404 5 discriminator 1
 16080 027c 14301BE5 		ldr	r3, [fp, #-20]
 16081 0280 FF3803E2 		and	r3, r3, #16711680
 16082 0284 020853E3 		cmp	r3, #131072
 16083 0288 0100001A 		bne	.L1034
 16084              		.loc 1 6404 5 discriminator 10
 16085 028c 0830E0E3 		mvn	r3, #8
 16086              		.loc 1 6404 5
 16087 0290 E10000EA 		b	.L1019
 16088              	.L1034:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 396


 16089              		.loc 1 6404 5 discriminator 11
 16090 0294 14301BE5 		ldr	r3, [fp, #-20]
 16091 0298 233CA0E1 		lsr	r3, r3, #24
 16092 029c 030053E3 		cmp	r3, #3
 16093 02a0 0100000A 		beq	.L1035
 16094              		.loc 1 6404 5 discriminator 12
 16095 02a4 0130E0E3 		mvn	r3, #1
 16096              		.loc 1 6404 5
 16097 02a8 DB0000EA 		b	.L1019
 16098              	.L1035:
 16099              		.loc 1 6404 5 discriminator 13
 16100 02ac 34301BE5 		ldr	r3, [fp, #-52]
 16101 02b0 7F2003E2 		and	r2, r3, #127
 16102 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 16103 02b8 143093E5 		ldr	r3, [r3, #20]
 16104 02bc 030052E1 		cmp	r2, r3
 16105 02c0 0100003A 		bcc	.L1036
 16106              		.loc 1 6404 5 discriminator 14
 16107 02c4 0230E0E3 		mvn	r3, #2
 16108              		.loc 1 6404 5
 16109 02c8 D30000EA 		b	.L1019
 16110              	.L1036:
 16111              		.loc 1 6404 5 discriminator 15
 16112 02cc 34301BE5 		ldr	r3, [fp, #-52]
 16113 02d0 7F3003E2 		and	r3, r3, #127
 16114 02d4 8322A0E1 		lsl	r2, r3, #5
 16115 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 16116 02dc 0C3093E5 		ldr	r3, [r3, #12]
 16117 02e0 033082E0 		add	r3, r2, r3
 16118 02e4 0C300BE5 		str	r3, [fp, #-12]
 16119 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 16120 02ec 0300A0E1 		mov	r0, r3
 16121 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16122 02f4 14000BE5 		str	r0, [fp, #-20]
 16123              		.loc 1 6404 5 discriminator 1
 16124 02f8 14301BE5 		ldr	r3, [fp, #-20]
 16125 02fc FF3803E2 		and	r3, r3, #16711680
 16126 0300 020853E3 		cmp	r3, #131072
 16127 0304 0100001A 		bne	.L1037
 16128              		.loc 1 6404 5 discriminator 16
 16129 0308 0830E0E3 		mvn	r3, #8
 16130              		.loc 1 6404 5
 16131 030c C20000EA 		b	.L1019
 16132              	.L1037:
 16133              		.loc 1 6404 5 discriminator 17
 16134 0310 14301BE5 		ldr	r3, [fp, #-20]
 16135 0314 233CA0E1 		lsr	r3, r3, #24
 16136 0318 060053E3 		cmp	r3, #6
 16137 031c 0100000A 		beq	.L1032
 16138              		.loc 1 6404 5 discriminator 18
 16139 0320 0130E0E3 		mvn	r3, #1
 16140              		.loc 1 6404 5
 16141 0324 BC0000EA 		b	.L1019
 16142              	.L1032:
6405:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Src_Op,Type_Stat);
6406:../../Source/Kernel/rme_kernel.c **** 
6407:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 397


6408:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Dst_Op,RME_THD_FLAG_XFER_DST);
 16143              		.loc 1 6408 5 is_stmt 1
 16144 0328 08301BE5 		ldr	r3, [fp, #-8]
 16145 032c 083093E5 		ldr	r3, [r3, #8]
 16146 0330 803003E2 		and	r3, r3, #128
 16147 0334 000053E3 		cmp	r3, #0
 16148 0338 0100001A 		bne	.L1038
 16149              		.loc 1 6408 5 is_stmt 0 discriminator 1
 16150 033c 0630E0E3 		mvn	r3, #6
 16151              		.loc 1 6408 5
 16152 0340 B50000EA 		b	.L1019
 16153              	.L1038:
6409:../../Source/Kernel/rme_kernel.c **** 
6410:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Src_Op,RME_THD_FLAG_XFER_SRC);
 16154              		.loc 1 6410 5 is_stmt 1
 16155 0344 0C301BE5 		ldr	r3, [fp, #-12]
 16156 0348 083093E5 		ldr	r3, [r3, #8]
 16157 034c 403003E2 		and	r3, r3, #64
 16158 0350 000053E3 		cmp	r3, #0
 16159 0354 0100001A 		bne	.L1039
 16160              		.loc 1 6410 5 is_stmt 0 discriminator 1
 16161 0358 0630E0E3 		mvn	r3, #6
 16162              		.loc 1 6410 5
 16163 035c AE0000EA 		b	.L1019
 16164              	.L1039:
6411:../../Source/Kernel/rme_kernel.c **** 
6412:../../Source/Kernel/rme_kernel.c **** 
6413:../../Source/Kernel/rme_kernel.c ****     /* Check if the two threads are on the core that is accordance with what we are on */
6414:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16165              		.loc 1 6414 10 is_stmt 1
 16166 0360 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16167 0364 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16168 0368 18300BE5 		str	r3, [fp, #-24]
6415:../../Source/Kernel/rme_kernel.c ****     Thd_Src=RME_CAP_GETOBJ(Thd_Src_Op,struct RME_Thd_Struct*);
 16169              		.loc 1 6415 13
 16170 036c 0C301BE5 		ldr	r3, [fp, #-12]
 16171 0370 0C3093E5 		ldr	r3, [r3, #12]
 16172              		.loc 1 6415 12
 16173 0374 1C300BE5 		str	r3, [fp, #-28]
6416:../../Source/Kernel/rme_kernel.c **** 
6417:../../Source/Kernel/rme_kernel.c **** 
6418:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Local!=Local)
 16174              		.loc 1 6418 22
 16175 0378 1C301BE5 		ldr	r3, [fp, #-28]
 16176 037c 143093E5 		ldr	r3, [r3, #20]
 16177              		.loc 1 6418 7
 16178 0380 18201BE5 		ldr	r2, [fp, #-24]
 16179 0384 030052E1 		cmp	r2, r3
 16180 0388 0400000A 		beq	.L1040
6419:../../Source/Kernel/rme_kernel.c ****     {
6420:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6421:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nRME_ERR_PTH_INVSTATE");
 16181              		.loc 1 6421 9
 16182 038c 000000E3 		movw	r0, #:lower16:.LC9
 16183 0390 000040E3 		movt	r0, #:upper16:.LC9
 16184 0394 FEFFFFEB 		bl	RME_Str_Print
6422:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 398


 16185              		.loc 1 6422 16
 16186 0398 CB30E0E3 		mvn	r3, #203
 16187 039c 9E0000EA 		b	.L1019
 16188              	.L1040:
6423:../../Source/Kernel/rme_kernel.c ****     }
6424:../../Source/Kernel/rme_kernel.c ****     else
6425:../../Source/Kernel/rme_kernel.c ****     {
6426:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6427:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6428:../../Source/Kernel/rme_kernel.c ****     }
6429:../../Source/Kernel/rme_kernel.c ****     
6430:../../Source/Kernel/rme_kernel.c ****     /* Check if we have slices to transfer; 0 implies TIMEOUT, BLOCKED, or EXCPEND */
6431:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16189              		.loc 1 6431 22
 16190 03a0 1C301BE5 		ldr	r3, [fp, #-28]
 16191 03a4 183093E5 		ldr	r3, [r3, #24]
 16192              		.loc 1 6431 7
 16193 03a8 000053E3 		cmp	r3, #0
 16194 03ac 0100001A 		bne	.L1041
6432:../../Source/Kernel/rme_kernel.c ****     {
6433:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6434:../../Source/Kernel/rme_kernel.c **** 
6435:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16195              		.loc 1 6435 16
 16196 03b0 CB30E0E3 		mvn	r3, #203
 16197 03b4 980000EA 		b	.L1019
 16198              	.L1041:
6436:../../Source/Kernel/rme_kernel.c ****     }
6437:../../Source/Kernel/rme_kernel.c ****     else
6438:../../Source/Kernel/rme_kernel.c ****     {
6439:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6440:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6441:../../Source/Kernel/rme_kernel.c ****     }
6442:../../Source/Kernel/rme_kernel.c **** 
6443:../../Source/Kernel/rme_kernel.c ****     Thd_Dst=RME_CAP_GETOBJ(Thd_Dst_Op,struct RME_Thd_Struct*);
 16199              		.loc 1 6443 13
 16200 03b8 08301BE5 		ldr	r3, [fp, #-8]
 16201 03bc 0C3093E5 		ldr	r3, [r3, #12]
 16202              		.loc 1 6443 12
 16203 03c0 20300BE5 		str	r3, [fp, #-32]
6444:../../Source/Kernel/rme_kernel.c ****     
6445:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.Local!=Local)
 16204              		.loc 1 6445 22
 16205 03c4 20301BE5 		ldr	r3, [fp, #-32]
 16206 03c8 143093E5 		ldr	r3, [r3, #20]
 16207              		.loc 1 6445 7
 16208 03cc 18201BE5 		ldr	r2, [fp, #-24]
 16209 03d0 030052E1 		cmp	r2, r3
 16210 03d4 0100000A 		beq	.L1042
6446:../../Source/Kernel/rme_kernel.c ****     {
6447:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6448:../../Source/Kernel/rme_kernel.c **** 
6449:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16211              		.loc 1 6449 16
 16212 03d8 CB30E0E3 		mvn	r3, #203
 16213 03dc 8E0000EA 		b	.L1019
 16214              	.L1042:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 399


6450:../../Source/Kernel/rme_kernel.c ****     }
6451:../../Source/Kernel/rme_kernel.c ****     else
6452:../../Source/Kernel/rme_kernel.c ****     {
6453:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6454:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6455:../../Source/Kernel/rme_kernel.c ****     }
6456:../../Source/Kernel/rme_kernel.c **** 
6457:../../Source/Kernel/rme_kernel.c ****     /* The destination must never have higher maximum priority than the source,
6458:../../Source/Kernel/rme_kernel.c ****      * unless it is a init thread which could be used as a black hole */
6459:../../Source/Kernel/rme_kernel.c ****     if((Thd_Src->Sched.Prio_Max<Thd_Dst->Sched.Prio_Max)&&
 16215              		.loc 1 6459 23
 16216 03e0 1C301BE5 		ldr	r3, [fp, #-28]
 16217 03e4 242093E5 		ldr	r2, [r3, #36]
 16218              		.loc 1 6459 47
 16219 03e8 20301BE5 		ldr	r3, [fp, #-32]
 16220 03ec 243093E5 		ldr	r3, [r3, #36]
 16221              		.loc 1 6459 7
 16222 03f0 030052E1 		cmp	r2, r3
 16223 03f4 0500002A 		bcs	.L1043
6460:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16224              		.loc 1 6460 23
 16225 03f8 20301BE5 		ldr	r3, [fp, #-32]
 16226 03fc 183093E5 		ldr	r3, [r3, #24]
6459:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16227              		.loc 1 6459 57 discriminator 1
 16228 0400 060173E3 		cmn	r3, #-2147483647
 16229 0404 0100000A 		beq	.L1043
6461:../../Source/Kernel/rme_kernel.c ****     {
6462:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6463:../../Source/Kernel/rme_kernel.c **** 
6464:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 16230              		.loc 1 6464 16
 16231 0408 CC30E0E3 		mvn	r3, #204
 16232 040c 820000EA 		b	.L1019
 16233              	.L1043:
6465:../../Source/Kernel/rme_kernel.c ****     }
6466:../../Source/Kernel/rme_kernel.c ****     else
6467:../../Source/Kernel/rme_kernel.c ****     {
6468:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6469:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6470:../../Source/Kernel/rme_kernel.c ****     }
6471:../../Source/Kernel/rme_kernel.c **** 
6472:../../Source/Kernel/rme_kernel.c ****     /* Delegating from a normal thread */
6473:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice<RME_THD_INF_TIME)
 16234              		.loc 1 6473 22
 16235 0410 1C301BE5 		ldr	r3, [fp, #-28]
 16236 0414 183093E5 		ldr	r3, [r3, #24]
 16237              		.loc 1 6473 7
 16238 0418 0E0173E3 		cmn	r3, #-2147483645
 16239 041c 3200008A 		bhi	.L1044
6474:../../Source/Kernel/rme_kernel.c ****     {
6475:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6476:../../Source/Kernel/rme_kernel.c **** 
6477:../../Source/Kernel/rme_kernel.c ****         /* Delegate all our time */
6478:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16240              		.loc 1 6478 11
 16241 0420 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 400


 16242 0424 0E0173E3 		cmn	r3, #-2147483645
 16243 0428 0300009A 		bls	.L1045
6479:../../Source/Kernel/rme_kernel.c ****         {
6480:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6481:../../Source/Kernel/rme_kernel.c **** 
6482:../../Source/Kernel/rme_kernel.c ****             Time_Xfer=Thd_Src->Sched.Slice;
 16244              		.loc 1 6482 22
 16245 042c 1C301BE5 		ldr	r3, [fp, #-28]
 16246 0430 183093E5 		ldr	r3, [r3, #24]
 16247 0434 10300BE5 		str	r3, [fp, #-16]
 16248 0438 0A0000EA 		b	.L1046
 16249              	.L1045:
6483:../../Source/Kernel/rme_kernel.c ****         }
6484:../../Source/Kernel/rme_kernel.c ****         /* Delegate some time, if not sufficient, clean up the source time */
6485:../../Source/Kernel/rme_kernel.c ****         else
6486:../../Source/Kernel/rme_kernel.c ****         {
6487:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6488:../../Source/Kernel/rme_kernel.c ****             
6489:../../Source/Kernel/rme_kernel.c ****             if(Thd_Src->Sched.Slice>Time)
 16250              		.loc 1 6489 30
 16251 043c 1C301BE5 		ldr	r3, [fp, #-28]
 16252 0440 183093E5 		ldr	r3, [r3, #24]
 16253              		.loc 1 6489 15
 16254 0444 04209BE5 		ldr	r2, [fp, #4]
 16255 0448 030052E1 		cmp	r2, r3
 16256 044c 0200002A 		bcs	.L1047
6490:../../Source/Kernel/rme_kernel.c ****             {
6491:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6492:../../Source/Kernel/rme_kernel.c **** 
6493:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Time;
 16257              		.loc 1 6493 26
 16258 0450 04309BE5 		ldr	r3, [fp, #4]
 16259 0454 10300BE5 		str	r3, [fp, #-16]
 16260 0458 020000EA 		b	.L1046
 16261              	.L1047:
6494:../../Source/Kernel/rme_kernel.c ****             }
6495:../../Source/Kernel/rme_kernel.c ****             else
6496:../../Source/Kernel/rme_kernel.c ****             {
6497:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6498:../../Source/Kernel/rme_kernel.c **** 
6499:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Thd_Src->Sched.Slice;
 16262              		.loc 1 6499 26
 16263 045c 1C301BE5 		ldr	r3, [fp, #-28]
 16264 0460 183093E5 		ldr	r3, [r3, #24]
 16265 0464 10300BE5 		str	r3, [fp, #-16]
 16266              	.L1046:
6500:../../Source/Kernel/rme_kernel.c ****             }
6501:../../Source/Kernel/rme_kernel.c ****         }
6502:../../Source/Kernel/rme_kernel.c ****         
6503:../../Source/Kernel/rme_kernel.c ****         /* See if we are transferring to an infinite budget thread. If yes, we
6504:../../Source/Kernel/rme_kernel.c ****          * are revoking timeslices; If not, this is a finite transfer */
6505:../../Source/Kernel/rme_kernel.c ****         if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16267              		.loc 1 6505 26
 16268 0468 20301BE5 		ldr	r3, [fp, #-32]
 16269 046c 183093E5 		ldr	r3, [r3, #24]
 16270              		.loc 1 6505 11
 16271 0470 0E0173E3 		cmn	r3, #-2147483645
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 401


 16272 0474 1500008A 		bhi	.L1048
6506:../../Source/Kernel/rme_kernel.c ****         {
6507:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6508:../../Source/Kernel/rme_kernel.c ****             
6509:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time_Xfer);
 16273              		.loc 1 6509 13
 16274 0478 20301BE5 		ldr	r3, [fp, #-32]
 16275 047c 182093E5 		ldr	r2, [r3, #24]
 16276 0480 10301BE5 		ldr	r3, [fp, #-16]
 16277 0484 033082E0 		add	r3, r2, r3
 16278 0488 0E0173E3 		cmn	r3, #-2147483645
 16279 048c 0700008A 		bhi	.L1049
 16280              		.loc 1 6509 13 is_stmt 0 discriminator 2
 16281 0490 20301BE5 		ldr	r3, [fp, #-32]
 16282 0494 182093E5 		ldr	r2, [r3, #24]
 16283 0498 10301BE5 		ldr	r3, [fp, #-16]
 16284 049c 032082E0 		add	r2, r2, r3
 16285 04a0 20301BE5 		ldr	r3, [fp, #-32]
 16286 04a4 183093E5 		ldr	r3, [r3, #24]
 16287 04a8 030052E1 		cmp	r2, r3
 16288 04ac 0100002A 		bcs	.L1050
 16289              	.L1049:
 16290              		.loc 1 6509 13 discriminator 3
 16291 04b0 CF30E0E3 		mvn	r3, #207
 16292              		.loc 1 6509 13
 16293 04b4 580000EA 		b	.L1019
 16294              	.L1050:
6510:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time_Xfer;
 16295              		.loc 1 6510 27 is_stmt 1
 16296 04b8 20301BE5 		ldr	r3, [fp, #-32]
 16297 04bc 182093E5 		ldr	r2, [r3, #24]
 16298              		.loc 1 6510 33
 16299 04c0 10301BE5 		ldr	r3, [fp, #-16]
 16300 04c4 032082E0 		add	r2, r2, r3
 16301 04c8 20301BE5 		ldr	r3, [fp, #-32]
 16302 04cc 182083E5 		str	r2, [r3, #24]
 16303              	.L1048:
6511:../../Source/Kernel/rme_kernel.c ****         }
6512:../../Source/Kernel/rme_kernel.c ****         else
6513:../../Source/Kernel/rme_kernel.c ****         {
6514:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6515:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6516:../../Source/Kernel/rme_kernel.c ****         }
6517:../../Source/Kernel/rme_kernel.c ****         
6518:../../Source/Kernel/rme_kernel.c ****         Thd_Src->Sched.Slice-=Time_Xfer;
 16304              		.loc 1 6518 23
 16305 04d0 1C301BE5 		ldr	r3, [fp, #-28]
 16306 04d4 182093E5 		ldr	r2, [r3, #24]
 16307              		.loc 1 6518 29
 16308 04d8 10301BE5 		ldr	r3, [fp, #-16]
 16309 04dc 032042E0 		sub	r2, r2, r3
 16310 04e0 1C301BE5 		ldr	r3, [fp, #-28]
 16311 04e4 182083E5 		str	r2, [r3, #24]
 16312 04e8 2A0000EA 		b	.L1051
 16313              	.L1044:
6519:../../Source/Kernel/rme_kernel.c ****     }
6520:../../Source/Kernel/rme_kernel.c ****     /* Delegating from init or infinite thread */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 402


6521:../../Source/Kernel/rme_kernel.c ****     else
6522:../../Source/Kernel/rme_kernel.c ****     {
6523:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6524:../../Source/Kernel/rme_kernel.c **** 
6525:../../Source/Kernel/rme_kernel.c ****         /* Infinite transfer to the destination */
6526:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16314              		.loc 1 6526 11
 16315 04ec 04309BE5 		ldr	r3, [fp, #4]
 16316 04f0 0E0173E3 		cmn	r3, #-2147483645
 16317 04f4 1100009A 		bls	.L1052
6527:../../Source/Kernel/rme_kernel.c ****         {
6528:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6529:../../Source/Kernel/rme_kernel.c **** 
6530:../../Source/Kernel/rme_kernel.c ****             /* This transfer will revoke the infinite budget */
6531:../../Source/Kernel/rme_kernel.c ****             if(Time==RME_THD_INIT_TIME)
 16318              		.loc 1 6531 15
 16319 04f8 04309BE5 		ldr	r3, [fp, #4]
 16320 04fc 060173E3 		cmn	r3, #-2147483647
 16321 0500 0600001A 		bne	.L1053
6532:../../Source/Kernel/rme_kernel.c ****             {
6533:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6534:../../Source/Kernel/rme_kernel.c ****                 
6535:../../Source/Kernel/rme_kernel.c ****                 /* Will not revoke, source is an init thread */
6536:../../Source/Kernel/rme_kernel.c ****                 if(Thd_Src->Sched.Slice!=RME_THD_INIT_TIME)
 16322              		.loc 1 6536 34
 16323 0504 1C301BE5 		ldr	r3, [fp, #-28]
 16324 0508 183093E5 		ldr	r3, [r3, #24]
 16325              		.loc 1 6536 19
 16326 050c 060173E3 		cmn	r3, #-2147483647
 16327 0510 0200000A 		beq	.L1053
6537:../../Source/Kernel/rme_kernel.c ****                 {
6538:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6539:../../Source/Kernel/rme_kernel.c ****                     
6540:../../Source/Kernel/rme_kernel.c ****                     Thd_Src->Sched.Slice=0U;
 16328              		.loc 1 6540 41
 16329 0514 1C301BE5 		ldr	r3, [fp, #-28]
 16330 0518 0020A0E3 		mov	r2, #0
 16331 051c 182083E5 		str	r2, [r3, #24]
 16332              	.L1053:
6541:../../Source/Kernel/rme_kernel.c ****                 }
6542:../../Source/Kernel/rme_kernel.c ****                 else
6543:../../Source/Kernel/rme_kernel.c ****                 {
6544:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6545:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
6546:../../Source/Kernel/rme_kernel.c ****                 }
6547:../../Source/Kernel/rme_kernel.c ****             }
6548:../../Source/Kernel/rme_kernel.c ****             else
6549:../../Source/Kernel/rme_kernel.c ****             {
6550:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6551:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6552:../../Source/Kernel/rme_kernel.c ****             }
6553:../../Source/Kernel/rme_kernel.c ****             
6554:../../Source/Kernel/rme_kernel.c ****             /* Set destination to infinite if it is not an init thread */
6555:../../Source/Kernel/rme_kernel.c ****             if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16333              		.loc 1 6555 30
 16334 0520 20301BE5 		ldr	r3, [fp, #-32]
 16335 0524 183093E5 		ldr	r3, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 403


 16336              		.loc 1 6555 15
 16337 0528 0E0173E3 		cmn	r3, #-2147483645
 16338 052c 1900008A 		bhi	.L1051
6556:../../Source/Kernel/rme_kernel.c ****             {
6557:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6558:../../Source/Kernel/rme_kernel.c ****                 
6559:../../Source/Kernel/rme_kernel.c ****                 Thd_Dst->Sched.Slice=RME_THD_INF_TIME;
 16339              		.loc 1 6559 37
 16340 0530 20301BE5 		ldr	r3, [fp, #-32]
 16341 0534 0621E0E3 		mvn	r2, #-2147483647
 16342 0538 182083E5 		str	r2, [r3, #24]
 16343 053c 150000EA 		b	.L1051
 16344              	.L1052:
6560:../../Source/Kernel/rme_kernel.c ****             }
6561:../../Source/Kernel/rme_kernel.c ****             else
6562:../../Source/Kernel/rme_kernel.c ****             {
6563:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6564:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6565:../../Source/Kernel/rme_kernel.c ****             }
6566:../../Source/Kernel/rme_kernel.c ****         }
6567:../../Source/Kernel/rme_kernel.c ****         else
6568:../../Source/Kernel/rme_kernel.c ****         {
6569:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6570:../../Source/Kernel/rme_kernel.c **** 
6571:../../Source/Kernel/rme_kernel.c ****             /* Just increase the budget of the other thread - check first */
6572:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time);
 16345              		.loc 1 6572 13
 16346 0540 20301BE5 		ldr	r3, [fp, #-32]
 16347 0544 182093E5 		ldr	r2, [r3, #24]
 16348 0548 04309BE5 		ldr	r3, [fp, #4]
 16349 054c 033082E0 		add	r3, r2, r3
 16350 0550 0E0173E3 		cmn	r3, #-2147483645
 16351 0554 0700008A 		bhi	.L1054
 16352              		.loc 1 6572 13 is_stmt 0 discriminator 2
 16353 0558 20301BE5 		ldr	r3, [fp, #-32]
 16354 055c 182093E5 		ldr	r2, [r3, #24]
 16355 0560 04309BE5 		ldr	r3, [fp, #4]
 16356 0564 032082E0 		add	r2, r2, r3
 16357 0568 20301BE5 		ldr	r3, [fp, #-32]
 16358 056c 183093E5 		ldr	r3, [r3, #24]
 16359 0570 030052E1 		cmp	r2, r3
 16360 0574 0100002A 		bcs	.L1055
 16361              	.L1054:
 16362              		.loc 1 6572 13 discriminator 3
 16363 0578 CF30E0E3 		mvn	r3, #207
 16364              		.loc 1 6572 13
 16365 057c 260000EA 		b	.L1019
 16366              	.L1055:
6573:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time;
 16367              		.loc 1 6573 27 is_stmt 1
 16368 0580 20301BE5 		ldr	r3, [fp, #-32]
 16369 0584 182093E5 		ldr	r2, [r3, #24]
 16370              		.loc 1 6573 33
 16371 0588 04309BE5 		ldr	r3, [fp, #4]
 16372 058c 032082E0 		add	r2, r2, r3
 16373 0590 20301BE5 		ldr	r3, [fp, #-32]
 16374 0594 182083E5 		str	r2, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 404


 16375              	.L1051:
6574:../../Source/Kernel/rme_kernel.c ****         }
6575:../../Source/Kernel/rme_kernel.c ****     }
6576:../../Source/Kernel/rme_kernel.c **** 
6577:../../Source/Kernel/rme_kernel.c ****     /* Is the source time used up? If yes, delete it from the run queue, and notify its 
6578:../../Source/Kernel/rme_kernel.c ****      * parent. If it is not in the run queue, The state of the source must be BLOCKED. */
6579:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16376              		.loc 1 6579 22
 16377 0598 1C301BE5 		ldr	r3, [fp, #-28]
 16378 059c 183093E5 		ldr	r3, [r3, #24]
 16379              		.loc 1 6579 7
 16380 05a0 000053E3 		cmp	r3, #0
 16381 05a4 0A00001A 		bne	.L1056
6580:../../Source/Kernel/rme_kernel.c ****     {
6581:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6582:../../Source/Kernel/rme_kernel.c ****         
6583:../../Source/Kernel/rme_kernel.c ****         /* If it is blocked or have an exception, we neither change its state nor send
6584:../../Source/Kernel/rme_kernel.c ****          * the scheduler notification. It will be sent when the thread unblocks, or gets
6585:../../Source/Kernel/rme_kernel.c ****          * its exception handled. The rule of the thumb is, we only send scheduler 
6586:../../Source/Kernel/rme_kernel.c ****          * notifications when the thread really enter TIMEOUT or EXCPEND state. */
6587:../../Source/Kernel/rme_kernel.c ****         if(Thd_Src->Sched.State==RME_THD_READY)
 16382              		.loc 1 6587 26
 16383 05a8 1C301BE5 		ldr	r3, [fp, #-28]
 16384 05ac 1C3093E5 		ldr	r3, [r3, #28]
 16385              		.loc 1 6587 11
 16386 05b0 000053E3 		cmp	r3, #0
 16387 05b4 0600001A 		bne	.L1056
6588:../../Source/Kernel/rme_kernel.c ****         {
6589:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6590:../../Source/Kernel/rme_kernel.c ****             
6591:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue */
6592:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Src);
 16388              		.loc 1 6592 13
 16389 05b8 1C001BE5 		ldr	r0, [fp, #-28]
 16390 05bc FEFFFFEB 		bl	_RME_Run_Del
6593:../../Source/Kernel/rme_kernel.c ****             
6594:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6595:../../Source/Kernel/rme_kernel.c ****             Thd_Src->Sched.State=RME_THD_TIMEOUT;
 16391              		.loc 1 6595 33
 16392 05c0 1C301BE5 		ldr	r3, [fp, #-28]
 16393 05c4 0220A0E3 		mov	r2, #2
 16394 05c8 1C2083E5 		str	r2, [r3, #28]
6596:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Src);
 16395              		.loc 1 6596 13
 16396 05cc 1C001BE5 		ldr	r0, [fp, #-28]
 16397 05d0 FEFFFFEB 		bl	_RME_Run_Notif
 16398              	.L1056:
6597:../../Source/Kernel/rme_kernel.c ****         }
6598:../../Source/Kernel/rme_kernel.c ****         else
6599:../../Source/Kernel/rme_kernel.c ****         {
6600:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6601:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6602:../../Source/Kernel/rme_kernel.c ****         }
6603:../../Source/Kernel/rme_kernel.c ****     }
6604:../../Source/Kernel/rme_kernel.c ****     else
6605:../../Source/Kernel/rme_kernel.c ****     {
6606:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 405


6607:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6608:../../Source/Kernel/rme_kernel.c ****     }
6609:../../Source/Kernel/rme_kernel.c **** 
6610:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller 
6611:../../Source/Kernel/rme_kernel.c ****      * stack - how much time the destination have now */
6612:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,(rme_ret_t)(Thd_Dst->Sched.Slice));
 16399              		.loc 1 6612 56
 16400 05d4 20301BE5 		ldr	r3, [fp, #-32]
 16401 05d8 183093E5 		ldr	r3, [r3, #24]
 16402              		.loc 1 6612 5
 16403 05dc 0310A0E1 		mov	r1, r3
 16404 05e0 2C001BE5 		ldr	r0, [fp, #-44]
 16405 05e4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6613:../../Source/Kernel/rme_kernel.c **** 
6614:../../Source/Kernel/rme_kernel.c ****     /* See what was the state of the destination thread. If it is timeout, then activate
6615:../../Source/Kernel/rme_kernel.c ****      * it. If it is BLOCKED or EXCPEND, then leave it alone, and it will be activated
6616:../../Source/Kernel/rme_kernel.c ****      * when it unblocks or when the exception is handled. */
6617:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.State==RME_THD_TIMEOUT)
 16406              		.loc 1 6617 22
 16407 05e8 20301BE5 		ldr	r3, [fp, #-32]
 16408 05ec 1C3093E5 		ldr	r3, [r3, #28]
 16409              		.loc 1 6617 7
 16410 05f0 020053E3 		cmp	r3, #2
 16411 05f4 0400001A 		bne	.L1057
6618:../../Source/Kernel/rme_kernel.c ****     {
6619:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6620:../../Source/Kernel/rme_kernel.c **** 
6621:../../Source/Kernel/rme_kernel.c ****         /* Ready and add to runqueue */
6622:../../Source/Kernel/rme_kernel.c ****         Thd_Dst->Sched.State=RME_THD_READY;
 16412              		.loc 1 6622 29
 16413 05f8 20301BE5 		ldr	r3, [fp, #-32]
 16414 05fc 0020A0E3 		mov	r2, #0
 16415 0600 1C2083E5 		str	r2, [r3, #28]
6623:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Thd_Dst);
 16416              		.loc 1 6623 9
 16417 0604 20001BE5 		ldr	r0, [fp, #-32]
 16418 0608 FEFFFFEB 		bl	_RME_Run_Ins
 16419              	.L1057:
6624:../../Source/Kernel/rme_kernel.c ****     }
6625:../../Source/Kernel/rme_kernel.c ****     else
6626:../../Source/Kernel/rme_kernel.c ****     {
6627:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6628:../../Source/Kernel/rme_kernel.c ****     }
6629:../../Source/Kernel/rme_kernel.c ****     
6630:../../Source/Kernel/rme_kernel.c ****     /* All possible kernel send (scheduler notifications) done,
6631:../../Source/Kernel/rme_kernel.c ****      * now pick the highest priority thread to run */
6632:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 16420              		.loc 1 6632 5
 16421 060c 18101BE5 		ldr	r1, [fp, #-24]
 16422 0610 2C001BE5 		ldr	r0, [fp, #-44]
 16423 0614 FEFFFFEB 		bl	_RME_Kern_High
6633:../../Source/Kernel/rme_kernel.c **** 
6634:../../Source/Kernel/rme_kernel.c ****     return 0;
 16424              		.loc 1 6634 12
 16425 0618 0030A0E3 		mov	r3, #0
 16426              	.L1019:
6635:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 406


 16427              		.loc 1 6635 1
 16428 061c 0300A0E1 		mov	r0, r3
 16429 0620 04D04BE2 		sub	sp, fp, #4
 16430              		.cfi_def_cfa 13, 8
 16431              		@ sp needed
 16432 0624 0088BDE8 		pop	{fp, pc}
 16433              		.cfi_endproc
 16434              	.LFE63:
 16436              		.section	.rodata
 16437 00d7 00       		.align	2
 16438              	.LC10:
 16439 00d8 0D0A5468 		.ascii	"\015\012Thd_Cur->Sched.Prio = \000"
 16439      645F4375 
 16439      722D3E53 
 16439      63686564 
 16439      2E507269 
 16440 00f1 000000   		.align	2
 16441              	.LC11:
 16442 00f4 0D0A5468 		.ascii	"\015\012Thd_New->Sched.Prio = \000"
 16442      645F4E65 
 16442      772D3E53 
 16442      63686564 
 16442      2E507269 
 16443              		.section	.text._RME_Thd_Swt,"ax",%progbits
 16444              		.align	2
 16445              		.syntax unified
 16446              		.arm
 16448              	_RME_Thd_Swt:
 16449              	.LFB64:
6636:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Time_Xfer *******************************************/
6637:../../Source/Kernel/rme_kernel.c **** 
6638:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Swt ******************************************************
6639:../../Source/Kernel/rme_kernel.c **** Description : Switch to another thread. The thread to switch to must have the same
6640:../../Source/Kernel/rme_kernel.c ****               preemptive priority as this thread, and have time, and not blocked.
6641:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a higher priority thread, this is impossible
6642:../../Source/Kernel/rme_kernel.c ****               because whenever a thread with higher priority exists in the system,
6643:../../Source/Kernel/rme_kernel.c ****               the kernel wiull let it preempt the current thread. 
6644:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a lower priority thread, this is impossible
6645:../../Source/Kernel/rme_kernel.c ****               because the current thread just preempts it after the thread switch.
6646:../../Source/Kernel/rme_kernel.c ****               This syscall does not end with _RME_Kern_High because the user may
6647:../../Source/Kernel/rme_kernel.c ****               designate a specific thread rather than a random one.
6648:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
6649:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
6650:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread. If this is -1,
6651:../../Source/Kernel/rme_kernel.c ****                                   the kernel will pickup whatever thread that
6652:../../Source/Kernel/rme_kernel.c ****                                   has the highest priority and time to run. 
6653:../../Source/Kernel/rme_kernel.c ****                                   2-Level. 
6654:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Yield - This is a flag to indicate whether this
6655:../../Source/Kernel/rme_kernel.c ****                                    is a full yield. If it is, the kernel will
6656:../../Source/Kernel/rme_kernel.c ****                                    discard all the time alloted on this
6657:../../Source/Kernel/rme_kernel.c ****                                    thread. This only works for threads that
6658:../../Source/Kernel/rme_kernel.c ****                                    have a finite budget.
6659:../../Source/Kernel/rme_kernel.c **** Output      : None.
6660:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6661:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6662:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Swt(struct RME_Cap_Cpt* Cpt,
6663:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 407


6664:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
6665:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Yield)
6666:../../Source/Kernel/rme_kernel.c **** {
 16450              		.loc 1 6666 1
 16451              		.cfi_startproc
 16452              		@ args = 0, pretend = 0, frame = 40
 16453              		@ frame_needed = 1, uses_anonymous_args = 0
 16454 0000 00482DE9 		push	{fp, lr}
 16455              		.cfi_def_cfa_offset 8
 16456              		.cfi_offset 11, -8
 16457              		.cfi_offset 14, -4
 16458 0004 04B08DE2 		add	fp, sp, #4
 16459              		.cfi_def_cfa 11, 4
 16460 0008 28D04DE2 		sub	sp, sp, #40
 16461 000c 20000BE5 		str	r0, [fp, #-32]
 16462 0010 24100BE5 		str	r1, [fp, #-36]
 16463 0014 28200BE5 		str	r2, [fp, #-40]
 16464 0018 2C300BE5 		str	r3, [fp, #-44]
6667:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Cap_New;
6668:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6669:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_High;
6670:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6671:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6672:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6673:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\nCap_Thd ");
6674:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
6675:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nIs_Yield ");
6676:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Is_Yield);*/
6677:../../Source/Kernel/rme_kernel.c ****     
6678:../../Source/Kernel/rme_kernel.c **** 
6679:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16465              		.loc 1 6679 10
 16466 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16467 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16468 0024 10300BE5 		str	r3, [fp, #-16]
6680:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 16469              		.loc 1 6680 12
 16470 0028 10301BE5 		ldr	r3, [fp, #-16]
 16471 002c 043093E5 		ldr	r3, [r3, #4]
 16472 0030 14300BE5 		str	r3, [fp, #-20]
6681:../../Source/Kernel/rme_kernel.c ****     
6682:../../Source/Kernel/rme_kernel.c ****     /* The caller have picked a thread to switch to */
6683:../../Source/Kernel/rme_kernel.c ****     if(Cap_Thd<RME_CID_NULL)
 16473              		.loc 1 6683 7
 16474 0034 28301BE5 		ldr	r3, [fp, #-40]
 16475 0038 020953E3 		cmp	r3, #32768
 16476 003c B40000AA 		bge	.L1059
6684:../../Source/Kernel/rme_kernel.c ****     {
6685:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6686:../../Source/Kernel/rme_kernel.c ****         
6687:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 16477              		.loc 1 6687 9
 16478 0040 28301BE5 		ldr	r3, [fp, #-40]
 16479 0044 803003E2 		and	r3, r3, #128
 16480 0048 000053E3 		cmp	r3, #0
 16481 004c 1C00001A 		bne	.L1060
 16482              		.loc 1 6687 9 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 408


 16483 0050 20301BE5 		ldr	r3, [fp, #-32]
 16484 0054 142093E5 		ldr	r2, [r3, #20]
 16485 0058 28301BE5 		ldr	r3, [fp, #-40]
 16486 005c 030052E1 		cmp	r2, r3
 16487 0060 0100008A 		bhi	.L1061
 16488              		.loc 1 6687 9 discriminator 3
 16489 0064 0230E0E3 		mvn	r3, #2
 16490              		.loc 1 6687 9
 16491 0068 ED0000EA 		b	.L1062
 16492              	.L1061:
 16493              		.loc 1 6687 9 discriminator 4
 16494 006c 28301BE5 		ldr	r3, [fp, #-40]
 16495 0070 8322A0E1 		lsl	r2, r3, #5
 16496 0074 20301BE5 		ldr	r3, [fp, #-32]
 16497 0078 0C3093E5 		ldr	r3, [r3, #12]
 16498 007c 033082E0 		add	r3, r2, r3
 16499 0080 08300BE5 		str	r3, [fp, #-8]
 16500 0084 08301BE5 		ldr	r3, [fp, #-8]
 16501 0088 0300A0E1 		mov	r0, r3
 16502 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16503 0090 18000BE5 		str	r0, [fp, #-24]
 16504              		.loc 1 6687 9 discriminator 1
 16505 0094 18301BE5 		ldr	r3, [fp, #-24]
 16506 0098 FF3803E2 		and	r3, r3, #16711680
 16507 009c 020853E3 		cmp	r3, #131072
 16508 00a0 0100001A 		bne	.L1063
 16509              		.loc 1 6687 9 discriminator 5
 16510 00a4 0830E0E3 		mvn	r3, #8
 16511              		.loc 1 6687 9
 16512 00a8 DD0000EA 		b	.L1062
 16513              	.L1063:
 16514              		.loc 1 6687 9 discriminator 6
 16515 00ac 18301BE5 		ldr	r3, [fp, #-24]
 16516 00b0 233CA0E1 		lsr	r3, r3, #24
 16517 00b4 060053E3 		cmp	r3, #6
 16518 00b8 3F00000A 		beq	.L1064
 16519              		.loc 1 6687 9 discriminator 7
 16520 00bc 0130E0E3 		mvn	r3, #1
 16521              		.loc 1 6687 9
 16522 00c0 D70000EA 		b	.L1062
 16523              	.L1060:
 16524              		.loc 1 6687 9 discriminator 2
 16525 00c4 28301BE5 		ldr	r3, [fp, #-40]
 16526 00c8 2324A0E1 		lsr	r2, r3, #8
 16527 00cc 20301BE5 		ldr	r3, [fp, #-32]
 16528 00d0 143093E5 		ldr	r3, [r3, #20]
 16529 00d4 030052E1 		cmp	r2, r3
 16530 00d8 0100003A 		bcc	.L1065
 16531              		.loc 1 6687 9 discriminator 8
 16532 00dc 0230E0E3 		mvn	r3, #2
 16533              		.loc 1 6687 9
 16534 00e0 CF0000EA 		b	.L1062
 16535              	.L1065:
 16536              		.loc 1 6687 9 discriminator 9
 16537 00e4 28301BE5 		ldr	r3, [fp, #-40]
 16538 00e8 2334A0E1 		lsr	r3, r3, #8
 16539 00ec 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 409


 16540 00f0 20301BE5 		ldr	r3, [fp, #-32]
 16541 00f4 0C3093E5 		ldr	r3, [r3, #12]
 16542 00f8 033082E0 		add	r3, r2, r3
 16543 00fc 08300BE5 		str	r3, [fp, #-8]
 16544 0100 08301BE5 		ldr	r3, [fp, #-8]
 16545 0104 0300A0E1 		mov	r0, r3
 16546 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16547 010c 18000BE5 		str	r0, [fp, #-24]
 16548              		.loc 1 6687 9 discriminator 1
 16549 0110 18301BE5 		ldr	r3, [fp, #-24]
 16550 0114 FF3803E2 		and	r3, r3, #16711680
 16551 0118 020853E3 		cmp	r3, #131072
 16552 011c 0100001A 		bne	.L1066
 16553              		.loc 1 6687 9 discriminator 10
 16554 0120 0830E0E3 		mvn	r3, #8
 16555              		.loc 1 6687 9
 16556 0124 BE0000EA 		b	.L1062
 16557              	.L1066:
 16558              		.loc 1 6687 9 discriminator 11
 16559 0128 18301BE5 		ldr	r3, [fp, #-24]
 16560 012c 233CA0E1 		lsr	r3, r3, #24
 16561 0130 030053E3 		cmp	r3, #3
 16562 0134 0100000A 		beq	.L1067
 16563              		.loc 1 6687 9 discriminator 12
 16564 0138 0130E0E3 		mvn	r3, #1
 16565              		.loc 1 6687 9
 16566 013c B80000EA 		b	.L1062
 16567              	.L1067:
 16568              		.loc 1 6687 9 discriminator 13
 16569 0140 28301BE5 		ldr	r3, [fp, #-40]
 16570 0144 7F2003E2 		and	r2, r3, #127
 16571 0148 08301BE5 		ldr	r3, [fp, #-8]
 16572 014c 143093E5 		ldr	r3, [r3, #20]
 16573 0150 030052E1 		cmp	r2, r3
 16574 0154 0100003A 		bcc	.L1068
 16575              		.loc 1 6687 9 discriminator 14
 16576 0158 0230E0E3 		mvn	r3, #2
 16577              		.loc 1 6687 9
 16578 015c B00000EA 		b	.L1062
 16579              	.L1068:
 16580              		.loc 1 6687 9 discriminator 15
 16581 0160 28301BE5 		ldr	r3, [fp, #-40]
 16582 0164 7F3003E2 		and	r3, r3, #127
 16583 0168 8322A0E1 		lsl	r2, r3, #5
 16584 016c 08301BE5 		ldr	r3, [fp, #-8]
 16585 0170 0C3093E5 		ldr	r3, [r3, #12]
 16586 0174 033082E0 		add	r3, r2, r3
 16587 0178 08300BE5 		str	r3, [fp, #-8]
 16588 017c 08301BE5 		ldr	r3, [fp, #-8]
 16589 0180 0300A0E1 		mov	r0, r3
 16590 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16591 0188 18000BE5 		str	r0, [fp, #-24]
 16592              		.loc 1 6687 9 discriminator 1
 16593 018c 18301BE5 		ldr	r3, [fp, #-24]
 16594 0190 FF3803E2 		and	r3, r3, #16711680
 16595 0194 020853E3 		cmp	r3, #131072
 16596 0198 0100001A 		bne	.L1069
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 410


 16597              		.loc 1 6687 9 discriminator 16
 16598 019c 0830E0E3 		mvn	r3, #8
 16599              		.loc 1 6687 9
 16600 01a0 9F0000EA 		b	.L1062
 16601              	.L1069:
 16602              		.loc 1 6687 9 discriminator 17
 16603 01a4 18301BE5 		ldr	r3, [fp, #-24]
 16604 01a8 233CA0E1 		lsr	r3, r3, #24
 16605 01ac 060053E3 		cmp	r3, #6
 16606 01b0 0100000A 		beq	.L1064
 16607              		.loc 1 6687 9 discriminator 18
 16608 01b4 0130E0E3 		mvn	r3, #1
 16609              		.loc 1 6687 9
 16610 01b8 990000EA 		b	.L1062
 16611              	.L1064:
6688:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Cap_New,Type_Stat);
6689:../../Source/Kernel/rme_kernel.c **** 
6690:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6691:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Cap_New,RME_THD_FLAG_SWT);
 16612              		.loc 1 6691 9 is_stmt 1
 16613 01bc 08301BE5 		ldr	r3, [fp, #-8]
 16614 01c0 083093E5 		ldr	r3, [r3, #8]
 16615 01c4 013C03E2 		and	r3, r3, #256
 16616 01c8 000053E3 		cmp	r3, #0
 16617 01cc 0100001A 		bne	.L1070
 16618              		.loc 1 6691 9 is_stmt 0 discriminator 1
 16619 01d0 0630E0E3 		mvn	r3, #6
 16620              		.loc 1 6691 9
 16621 01d4 920000EA 		b	.L1062
 16622              	.L1070:
6692:../../Source/Kernel/rme_kernel.c **** 
6693:../../Source/Kernel/rme_kernel.c ****         /* See if we can do operation on this core */
6694:../../Source/Kernel/rme_kernel.c ****         Thd_New=RME_CAP_GETOBJ(Thd_Cap_New,struct RME_Thd_Struct*);
 16623              		.loc 1 6694 17 is_stmt 1
 16624 01d8 08301BE5 		ldr	r3, [fp, #-8]
 16625 01dc 0C3093E5 		ldr	r3, [r3, #12]
 16626              		.loc 1 6694 16
 16627 01e0 0C300BE5 		str	r3, [fp, #-12]
6695:../../Source/Kernel/rme_kernel.c **** 
6696:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Local!=Local)
 16628              		.loc 1 6696 26
 16629 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 16630 01e8 143093E5 		ldr	r3, [r3, #20]
 16631              		.loc 1 6696 11
 16632 01ec 10201BE5 		ldr	r2, [fp, #-16]
 16633 01f0 030052E1 		cmp	r2, r3
 16634 01f4 0100000A 		beq	.L1071
6697:../../Source/Kernel/rme_kernel.c ****         {
6698:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6699:../../Source/Kernel/rme_kernel.c ****             
6700:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16635              		.loc 1 6700 20
 16636 01f8 CB30E0E3 		mvn	r3, #203
 16637 01fc 880000EA 		b	.L1062
 16638              	.L1071:
6701:../../Source/Kernel/rme_kernel.c ****         }
6702:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 411


6703:../../Source/Kernel/rme_kernel.c ****         {
6704:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6705:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6706:../../Source/Kernel/rme_kernel.c ****         }
6707:../../Source/Kernel/rme_kernel.c **** 
6708:../../Source/Kernel/rme_kernel.c ****         /* See if we can yield to the thread */
6709:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Prio!=Thd_New->Sched.Prio)
 16639              		.loc 1 6709 26
 16640 0200 14301BE5 		ldr	r3, [fp, #-20]
 16641 0204 202093E5 		ldr	r2, [r3, #32]
 16642              		.loc 1 6709 47
 16643 0208 0C301BE5 		ldr	r3, [fp, #-12]
 16644 020c 203093E5 		ldr	r3, [r3, #32]
 16645              		.loc 1 6709 11
 16646 0210 030052E1 		cmp	r2, r3
 16647 0214 0F00000A 		beq	.L1072
6710:../../Source/Kernel/rme_kernel.c ****         {
6711:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6712:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nThd_Cur->Sched.Prio = "); 
 16648              		.loc 1 6712 13
 16649 0218 000000E3 		movw	r0, #:lower16:.LC10
 16650 021c 000040E3 		movt	r0, #:upper16:.LC10
 16651 0220 FEFFFFEB 		bl	RME_Str_Print
6713:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Thd_Cur->Sched.Prio);
 16652              		.loc 1 6713 13
 16653 0224 14301BE5 		ldr	r3, [fp, #-20]
 16654 0228 203093E5 		ldr	r3, [r3, #32]
 16655 022c 0300A0E1 		mov	r0, r3
 16656 0230 FEFFFFEB 		bl	RME_Hex_Print
6714:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nThd_New->Sched.Prio = "); 
 16657              		.loc 1 6714 13
 16658 0234 000000E3 		movw	r0, #:lower16:.LC11
 16659 0238 000040E3 		movt	r0, #:upper16:.LC11
 16660 023c FEFFFFEB 		bl	RME_Str_Print
6715:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Thd_New->Sched.Prio);
 16661              		.loc 1 6715 13
 16662 0240 0C301BE5 		ldr	r3, [fp, #-12]
 16663 0244 203093E5 		ldr	r3, [r3, #32]
 16664 0248 0300A0E1 		mov	r0, r3
 16665 024c FEFFFFEB 		bl	RME_Hex_Print
6716:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 16666              		.loc 1 6716 20
 16667 0250 CC30E0E3 		mvn	r3, #204
 16668 0254 720000EA 		b	.L1062
 16669              	.L1072:
6717:../../Source/Kernel/rme_kernel.c ****         }
6718:../../Source/Kernel/rme_kernel.c ****         else
6719:../../Source/Kernel/rme_kernel.c ****         {
6720:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6721:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6722:../../Source/Kernel/rme_kernel.c ****         }
6723:../../Source/Kernel/rme_kernel.c **** 
6724:../../Source/Kernel/rme_kernel.c ****         /* Check if the target thread state is valid */
6725:../../Source/Kernel/rme_kernel.c ****         if((Thd_New->Sched.State==RME_THD_BLOCKED)||
 16670              		.loc 1 6725 27
 16671 0258 0C301BE5 		ldr	r3, [fp, #-12]
 16672 025c 1C3093E5 		ldr	r3, [r3, #28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 412


 16673              		.loc 1 6725 11
 16674 0260 010053E3 		cmp	r3, #1
 16675 0264 0700000A 		beq	.L1073
6726:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16676              		.loc 1 6726 27
 16677 0268 0C301BE5 		ldr	r3, [fp, #-12]
 16678 026c 1C3093E5 		ldr	r3, [r3, #28]
6725:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16679              		.loc 1 6725 51 discriminator 1
 16680 0270 020053E3 		cmp	r3, #2
 16681 0274 0300000A 		beq	.L1073
6727:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_EXCPEND))
 16682              		.loc 1 6727 27
 16683 0278 0C301BE5 		ldr	r3, [fp, #-12]
 16684 027c 1C3093E5 		ldr	r3, [r3, #28]
6726:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16685              		.loc 1 6726 51
 16686 0280 030053E3 		cmp	r3, #3
 16687 0284 0100001A 		bne	.L1074
 16688              	.L1073:
6728:../../Source/Kernel/rme_kernel.c ****         {
6729:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6730:../../Source/Kernel/rme_kernel.c **** 
6731:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16689              		.loc 1 6731 20
 16690 0288 CB30E0E3 		mvn	r3, #203
 16691 028c 640000EA 		b	.L1062
 16692              	.L1074:
6732:../../Source/Kernel/rme_kernel.c ****         }
6733:../../Source/Kernel/rme_kernel.c ****         else
6734:../../Source/Kernel/rme_kernel.c ****         {
6735:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6736:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6737:../../Source/Kernel/rme_kernel.c ****         }
6738:../../Source/Kernel/rme_kernel.c **** 
6739:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6740:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16693              		.loc 1 6740 11
 16694 0290 2C301BE5 		ldr	r3, [fp, #-44]
 16695 0294 000053E3 		cmp	r3, #0
 16696 0298 4300000A 		beq	.L1075
 16697              		.loc 1 6740 43 discriminator 1
 16698 029c 14301BE5 		ldr	r3, [fp, #-20]
 16699 02a0 183093E5 		ldr	r3, [r3, #24]
 16700              		.loc 1 6740 26 discriminator 1
 16701 02a4 0E0173E3 		cmn	r3, #-2147483645
 16702 02a8 3F00008A 		bhi	.L1075
6741:../../Source/Kernel/rme_kernel.c ****         {
6742:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6743:../../Source/Kernel/rme_kernel.c ****             
6744:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6745:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16703              		.loc 1 6745 33
 16704 02ac 14301BE5 		ldr	r3, [fp, #-20]
 16705 02b0 0020A0E3 		mov	r2, #0
 16706 02b4 182083E5 		str	r2, [r3, #24]
6746:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 413


 16707              		.loc 1 6746 13
 16708 02b8 14001BE5 		ldr	r0, [fp, #-20]
 16709 02bc FEFFFFEB 		bl	_RME_Run_Del
6747:../../Source/Kernel/rme_kernel.c ****             
6748:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6749:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16710              		.loc 1 6749 33
 16711 02c0 14301BE5 		ldr	r3, [fp, #-20]
 16712 02c4 0220A0E3 		mov	r2, #2
 16713 02c8 1C2083E5 		str	r2, [r3, #28]
6750:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16714              		.loc 1 6750 13
 16715 02cc 14001BE5 		ldr	r0, [fp, #-20]
 16716 02d0 FEFFFFEB 		bl	_RME_Run_Notif
6751:../../Source/Kernel/rme_kernel.c ****             
6752:../../Source/Kernel/rme_kernel.c ****             /* Because we have sent a notification, we could have unblocked a
6753:../../Source/Kernel/rme_kernel.c ****              * thread at higher priority. Additionally, if the new thread is
6754:../../Source/Kernel/rme_kernel.c ****              * the current thread, we are forced to switch to someone else,
6755:../../Source/Kernel/rme_kernel.c ****              * because the current thread's timeslice must be exhausted. */
6756:../../Source/Kernel/rme_kernel.c ****             Thd_High=_RME_Run_High(Local);
 16717              		.loc 1 6756 22
 16718 02d4 10001BE5 		ldr	r0, [fp, #-16]
 16719 02d8 FEFFFFEB 		bl	_RME_Run_High
 16720 02dc 1C000BE5 		str	r0, [fp, #-28]
6757:../../Source/Kernel/rme_kernel.c ****             if((Thd_High->Sched.Prio>Thd_New->Sched.Prio)||(Thd_Cur==Thd_New))
 16721              		.loc 1 6757 32
 16722 02e0 1C301BE5 		ldr	r3, [fp, #-28]
 16723 02e4 202093E5 		ldr	r2, [r3, #32]
 16724              		.loc 1 6757 52
 16725 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 16726 02ec 203093E5 		ldr	r3, [r3, #32]
 16727              		.loc 1 6757 15
 16728 02f0 030052E1 		cmp	r2, r3
 16729 02f4 0300008A 		bhi	.L1076
 16730              		.loc 1 6757 58 discriminator 1
 16731 02f8 14201BE5 		ldr	r2, [fp, #-20]
 16732 02fc 0C301BE5 		ldr	r3, [fp, #-12]
 16733 0300 030052E1 		cmp	r2, r3
 16734 0304 2800001A 		bne	.L1075
 16735              	.L1076:
6758:../../Source/Kernel/rme_kernel.c ****             {
6759:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6760:../../Source/Kernel/rme_kernel.c **** 
6761:../../Source/Kernel/rme_kernel.c ****                 Thd_New=Thd_High;
 16736              		.loc 1 6761 24
 16737 0308 1C301BE5 		ldr	r3, [fp, #-28]
 16738 030c 0C300BE5 		str	r3, [fp, #-12]
 16739 0310 250000EA 		b	.L1075
 16740              	.L1059:
6762:../../Source/Kernel/rme_kernel.c ****             }
6763:../../Source/Kernel/rme_kernel.c ****             else
6764:../../Source/Kernel/rme_kernel.c ****             {
6765:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6766:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6767:../../Source/Kernel/rme_kernel.c ****             }
6768:../../Source/Kernel/rme_kernel.c ****         }
6769:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 414


6770:../../Source/Kernel/rme_kernel.c ****         {
6771:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6772:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6773:../../Source/Kernel/rme_kernel.c ****         }
6774:../../Source/Kernel/rme_kernel.c ****     }
6775:../../Source/Kernel/rme_kernel.c ****     /* The kernel needs to pick a thread to switch to */
6776:../../Source/Kernel/rme_kernel.c ****     else
6777:../../Source/Kernel/rme_kernel.c ****     {
6778:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6779:../../Source/Kernel/rme_kernel.c ****         
6780:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6781:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16741              		.loc 1 6781 11
 16742 0314 2C301BE5 		ldr	r3, [fp, #-44]
 16743 0318 000053E3 		cmp	r3, #0
 16744 031c 0E00000A 		beq	.L1077
 16745              		.loc 1 6781 43 discriminator 1
 16746 0320 14301BE5 		ldr	r3, [fp, #-20]
 16747 0324 183093E5 		ldr	r3, [r3, #24]
 16748              		.loc 1 6781 26 discriminator 1
 16749 0328 0E0173E3 		cmn	r3, #-2147483645
 16750 032c 0A00008A 		bhi	.L1077
6782:../../Source/Kernel/rme_kernel.c ****         {
6783:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6784:../../Source/Kernel/rme_kernel.c ****             
6785:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6786:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16751              		.loc 1 6786 33
 16752 0330 14301BE5 		ldr	r3, [fp, #-20]
 16753 0334 0020A0E3 		mov	r2, #0
 16754 0338 182083E5 		str	r2, [r3, #24]
6787:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16755              		.loc 1 6787 13
 16756 033c 14001BE5 		ldr	r0, [fp, #-20]
 16757 0340 FEFFFFEB 		bl	_RME_Run_Del
6788:../../Source/Kernel/rme_kernel.c ****             
6789:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6790:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16758              		.loc 1 6790 33
 16759 0344 14301BE5 		ldr	r3, [fp, #-20]
 16760 0348 0220A0E3 		mov	r2, #2
 16761 034c 1C2083E5 		str	r2, [r3, #28]
6791:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16762              		.loc 1 6791 13
 16763 0350 14001BE5 		ldr	r0, [fp, #-20]
 16764 0354 FEFFFFEB 		bl	_RME_Run_Notif
 16765 0358 100000EA 		b	.L1078
 16766              	.L1077:
6792:../../Source/Kernel/rme_kernel.c ****         }
6793:../../Source/Kernel/rme_kernel.c ****         else
6794:../../Source/Kernel/rme_kernel.c ****         {
6795:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6796:../../Source/Kernel/rme_kernel.c ****             
6797:../../Source/Kernel/rme_kernel.c ****             /* This operation is just to make sure that if there are any other
6798:../../Source/Kernel/rme_kernel.c ****              * thread at the same priority level, we're not switching to ourself */
6799:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 16767              		.loc 1 6799 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 415


 16768 035c 14301BE5 		ldr	r3, [fp, #-20]
 16769 0360 1C3093E5 		ldr	r3, [r3, #28]
 16770 0364 000053E3 		cmp	r3, #0
 16771 0368 0800000A 		beq	.L1079
 16772              		.loc 1 6799 13 is_stmt 0 discriminator 1
 16773 036c 003000E3 		movw	r3, #:lower16:.LC2
 16774 0370 003040E3 		movt	r3, #:upper16:.LC2
 16775 0374 002000E3 		movw	r2, #:lower16:.LC3
 16776 0378 002040E3 		movt	r2, #:upper16:.LC3
 16777 037c 8F1A01E3 		movw	r1, #6799
 16778 0380 000000E3 		movw	r0, #:lower16:.LC4
 16779 0384 000040E3 		movt	r0, #:upper16:.LC4
 16780 0388 FEFFFFEB 		bl	RME_Log
 16781              	.L1080:
 16782              		.loc 1 6799 13
 16783 038c FEFFFFEA 		b	.L1080
 16784              	.L1079:
6800:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16785              		.loc 1 6800 13 is_stmt 1
 16786 0390 14001BE5 		ldr	r0, [fp, #-20]
 16787 0394 FEFFFFEB 		bl	_RME_Run_Del
6801:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Cur);
 16788              		.loc 1 6801 13
 16789 0398 14001BE5 		ldr	r0, [fp, #-20]
 16790 039c FEFFFFEB 		bl	_RME_Run_Ins
 16791              	.L1078:
6802:../../Source/Kernel/rme_kernel.c ****         }
6803:../../Source/Kernel/rme_kernel.c **** 
6804:../../Source/Kernel/rme_kernel.c ****         Thd_New=_RME_Run_High(Local);
 16792              		.loc 1 6804 17
 16793 03a0 10001BE5 		ldr	r0, [fp, #-16]
 16794 03a4 FEFFFFEB 		bl	_RME_Run_High
 16795 03a8 0C000BE5 		str	r0, [fp, #-12]
 16796              	.L1075:
6805:../../Source/Kernel/rme_kernel.c ****     }
6806:../../Source/Kernel/rme_kernel.c ****     
6807:../../Source/Kernel/rme_kernel.c ****     /* Now that we are successful, save the return value to the caller stack */
6808:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 16797              		.loc 1 6808 5
 16798 03ac 0010A0E3 		mov	r1, #0
 16799 03b0 24001BE5 		ldr	r0, [fp, #-36]
 16800 03b4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6809:../../Source/Kernel/rme_kernel.c **** 
6810:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 16801              		.loc 1 6810 5
 16802 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 16803 03bc 1C3093E5 		ldr	r3, [r3, #28]
 16804 03c0 000053E3 		cmp	r3, #0
 16805 03c4 0800000A 		beq	.L1081
 16806              		.loc 1 6810 5 is_stmt 0 discriminator 1
 16807 03c8 003000E3 		movw	r3, #:lower16:.LC2
 16808 03cc 003040E3 		movt	r3, #:upper16:.LC2
 16809 03d0 002000E3 		movw	r2, #:lower16:.LC3
 16810 03d4 002040E3 		movt	r2, #:upper16:.LC3
 16811 03d8 9A1A01E3 		movw	r1, #6810
 16812 03dc 000000E3 		movw	r0, #:lower16:.LC4
 16813 03e0 000040E3 		movt	r0, #:upper16:.LC4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 416


 16814 03e4 FEFFFFEB 		bl	RME_Log
 16815              	.L1082:
 16816              		.loc 1 6810 5
 16817 03e8 FEFFFFEA 		b	.L1082
 16818              	.L1081:
6811:../../Source/Kernel/rme_kernel.c ****     /* We cannot call _RME_Kern_High because it picks some random thread. Instead,
6812:../../Source/Kernel/rme_kernel.c ****      * we use a manual implementation that is faster than the _RME_Kern_High. */
6813:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur==Thd_New)
 16819              		.loc 1 6813 7 is_stmt 1
 16820 03ec 14201BE5 		ldr	r2, [fp, #-20]
 16821 03f0 0C301BE5 		ldr	r3, [fp, #-12]
 16822 03f4 030052E1 		cmp	r2, r3
 16823 03f8 0100001A 		bne	.L1083
6814:../../Source/Kernel/rme_kernel.c ****     {
6815:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6816:../../Source/Kernel/rme_kernel.c ****         
6817:../../Source/Kernel/rme_kernel.c ****         return 0;
 16824              		.loc 1 6817 16
 16825 03fc 0030A0E3 		mov	r3, #0
 16826 0400 070000EA 		b	.L1062
 16827              	.L1083:
6818:../../Source/Kernel/rme_kernel.c ****     }
6819:../../Source/Kernel/rme_kernel.c ****     else
6820:../../Source/Kernel/rme_kernel.c ****     {
6821:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6822:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6823:../../Source/Kernel/rme_kernel.c ****     }
6824:../../Source/Kernel/rme_kernel.c ****             
6825:../../Source/Kernel/rme_kernel.c ****     /* We have a solid context switch at this point */
6826:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 16828              		.loc 1 6826 5
 16829 0404 0C201BE5 		ldr	r2, [fp, #-12]
 16830 0408 14101BE5 		ldr	r1, [fp, #-20]
 16831 040c 24001BE5 		ldr	r0, [fp, #-36]
 16832 0410 FEFFFFEB 		bl	_RME_Run_Swt
6827:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 16833              		.loc 1 6827 19
 16834 0414 10301BE5 		ldr	r3, [fp, #-16]
 16835 0418 0C201BE5 		ldr	r2, [fp, #-12]
 16836 041c 042083E5 		str	r2, [r3, #4]
6828:../../Source/Kernel/rme_kernel.c **** 
6829:../../Source/Kernel/rme_kernel.c ****     return 0;
 16837              		.loc 1 6829 12
 16838 0420 0030A0E3 		mov	r3, #0
 16839              	.L1062:
6830:../../Source/Kernel/rme_kernel.c **** }
 16840              		.loc 1 6830 1
 16841 0424 0300A0E1 		mov	r0, r3
 16842 0428 04D04BE2 		sub	sp, fp, #4
 16843              		.cfi_def_cfa 13, 8
 16844              		@ sp needed
 16845 042c 0088BDE8 		pop	{fp, pc}
 16846              		.cfi_endproc
 16847              	.LFE64:
 16849              		.section	.text._RME_Sig_Boot_Crt,"ax",%progbits
 16850              		.align	2
 16851              		.global	_RME_Sig_Boot_Crt
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 417


 16852              		.syntax unified
 16853              		.arm
 16855              	_RME_Sig_Boot_Crt:
 16856              	.LFB65:
6831:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Swt *************************************************/
6832:../../Source/Kernel/rme_kernel.c **** 
6833:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Boot_Crt *************************************************
6834:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time kernel signal endpoint. This is only used at
6835:../../Source/Kernel/rme_kernel.c ****               boot-time to create endpoints that are related directly to 
6836:../../Source/Kernel/rme_kernel.c ****               hardware interrupts.
6837:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
6838:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6839:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6840:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6841:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6842:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6843:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6844:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6845:../../Source/Kernel/rme_kernel.c **** Output      : None.
6846:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6847:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6848:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Sig_Boot_Crt(struct RME_Cap_Cpt* Cpt,
6849:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
6850:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Sig)
6851:../../Source/Kernel/rme_kernel.c **** {
 16857              		.loc 1 6851 1
 16858              		.cfi_startproc
 16859              		@ args = 0, pretend = 0, frame = 32
 16860              		@ frame_needed = 1, uses_anonymous_args = 0
 16861 0000 00482DE9 		push	{fp, lr}
 16862              		.cfi_def_cfa_offset 8
 16863              		.cfi_offset 11, -8
 16864              		.cfi_offset 14, -4
 16865 0004 04B08DE2 		add	fp, sp, #4
 16866              		.cfi_def_cfa 11, 4
 16867 0008 20D04DE2 		sub	sp, sp, #32
 16868 000c 18000BE5 		str	r0, [fp, #-24]
 16869 0010 1C100BE5 		str	r1, [fp, #-28]
 16870 0014 20200BE5 		str	r2, [fp, #-32]
6852:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
6853:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Crt;
6854:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6855:../../Source/Kernel/rme_kernel.c ****     
6856:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6857:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 16871              		.loc 1 6857 5
 16872 0018 1C301BE5 		ldr	r3, [fp, #-28]
 16873 001c 803003E2 		and	r3, r3, #128
 16874 0020 000053E3 		cmp	r3, #0
 16875 0024 1C00001A 		bne	.L1085
 16876              		.loc 1 6857 5 is_stmt 0 discriminator 1
 16877 0028 18301BE5 		ldr	r3, [fp, #-24]
 16878 002c 142093E5 		ldr	r2, [r3, #20]
 16879 0030 1C301BE5 		ldr	r3, [fp, #-28]
 16880 0034 030052E1 		cmp	r2, r3
 16881 0038 0100008A 		bhi	.L1086
 16882              		.loc 1 6857 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 418


 16883 003c 0230E0E3 		mvn	r3, #2
 16884              		.loc 1 6857 5
 16885 0040 8A0000EA 		b	.L1087
 16886              	.L1086:
 16887              		.loc 1 6857 5 discriminator 4
 16888 0044 1C301BE5 		ldr	r3, [fp, #-28]
 16889 0048 8322A0E1 		lsl	r2, r3, #5
 16890 004c 18301BE5 		ldr	r3, [fp, #-24]
 16891 0050 0C3093E5 		ldr	r3, [r3, #12]
 16892 0054 033082E0 		add	r3, r2, r3
 16893 0058 08300BE5 		str	r3, [fp, #-8]
 16894 005c 08301BE5 		ldr	r3, [fp, #-8]
 16895 0060 0300A0E1 		mov	r0, r3
 16896 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16897 0068 0C000BE5 		str	r0, [fp, #-12]
 16898              		.loc 1 6857 5 discriminator 1
 16899 006c 0C301BE5 		ldr	r3, [fp, #-12]
 16900 0070 FF3803E2 		and	r3, r3, #16711680
 16901 0074 020853E3 		cmp	r3, #131072
 16902 0078 0100001A 		bne	.L1088
 16903              		.loc 1 6857 5 discriminator 5
 16904 007c 0830E0E3 		mvn	r3, #8
 16905              		.loc 1 6857 5
 16906 0080 7A0000EA 		b	.L1087
 16907              	.L1088:
 16908              		.loc 1 6857 5 discriminator 6
 16909 0084 0C301BE5 		ldr	r3, [fp, #-12]
 16910 0088 233CA0E1 		lsr	r3, r3, #24
 16911 008c 030053E3 		cmp	r3, #3
 16912 0090 3F00000A 		beq	.L1089
 16913              		.loc 1 6857 5 discriminator 7
 16914 0094 0130E0E3 		mvn	r3, #1
 16915              		.loc 1 6857 5
 16916 0098 740000EA 		b	.L1087
 16917              	.L1085:
 16918              		.loc 1 6857 5 discriminator 2
 16919 009c 1C301BE5 		ldr	r3, [fp, #-28]
 16920 00a0 2324A0E1 		lsr	r2, r3, #8
 16921 00a4 18301BE5 		ldr	r3, [fp, #-24]
 16922 00a8 143093E5 		ldr	r3, [r3, #20]
 16923 00ac 030052E1 		cmp	r2, r3
 16924 00b0 0100003A 		bcc	.L1090
 16925              		.loc 1 6857 5 discriminator 8
 16926 00b4 0230E0E3 		mvn	r3, #2
 16927              		.loc 1 6857 5
 16928 00b8 6C0000EA 		b	.L1087
 16929              	.L1090:
 16930              		.loc 1 6857 5 discriminator 9
 16931 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 16932 00c0 2334A0E1 		lsr	r3, r3, #8
 16933 00c4 8322A0E1 		lsl	r2, r3, #5
 16934 00c8 18301BE5 		ldr	r3, [fp, #-24]
 16935 00cc 0C3093E5 		ldr	r3, [r3, #12]
 16936 00d0 033082E0 		add	r3, r2, r3
 16937 00d4 08300BE5 		str	r3, [fp, #-8]
 16938 00d8 08301BE5 		ldr	r3, [fp, #-8]
 16939 00dc 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 419


 16940 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16941 00e4 0C000BE5 		str	r0, [fp, #-12]
 16942              		.loc 1 6857 5 discriminator 1
 16943 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 16944 00ec FF3803E2 		and	r3, r3, #16711680
 16945 00f0 020853E3 		cmp	r3, #131072
 16946 00f4 0100001A 		bne	.L1091
 16947              		.loc 1 6857 5 discriminator 10
 16948 00f8 0830E0E3 		mvn	r3, #8
 16949              		.loc 1 6857 5
 16950 00fc 5B0000EA 		b	.L1087
 16951              	.L1091:
 16952              		.loc 1 6857 5 discriminator 11
 16953 0100 0C301BE5 		ldr	r3, [fp, #-12]
 16954 0104 233CA0E1 		lsr	r3, r3, #24
 16955 0108 030053E3 		cmp	r3, #3
 16956 010c 0100000A 		beq	.L1092
 16957              		.loc 1 6857 5 discriminator 12
 16958 0110 0130E0E3 		mvn	r3, #1
 16959              		.loc 1 6857 5
 16960 0114 550000EA 		b	.L1087
 16961              	.L1092:
 16962              		.loc 1 6857 5 discriminator 13
 16963 0118 1C301BE5 		ldr	r3, [fp, #-28]
 16964 011c 7F2003E2 		and	r2, r3, #127
 16965 0120 08301BE5 		ldr	r3, [fp, #-8]
 16966 0124 143093E5 		ldr	r3, [r3, #20]
 16967 0128 030052E1 		cmp	r2, r3
 16968 012c 0100003A 		bcc	.L1093
 16969              		.loc 1 6857 5 discriminator 14
 16970 0130 0230E0E3 		mvn	r3, #2
 16971              		.loc 1 6857 5
 16972 0134 4D0000EA 		b	.L1087
 16973              	.L1093:
 16974              		.loc 1 6857 5 discriminator 15
 16975 0138 1C301BE5 		ldr	r3, [fp, #-28]
 16976 013c 7F3003E2 		and	r3, r3, #127
 16977 0140 8322A0E1 		lsl	r2, r3, #5
 16978 0144 08301BE5 		ldr	r3, [fp, #-8]
 16979 0148 0C3093E5 		ldr	r3, [r3, #12]
 16980 014c 033082E0 		add	r3, r2, r3
 16981 0150 08300BE5 		str	r3, [fp, #-8]
 16982 0154 08301BE5 		ldr	r3, [fp, #-8]
 16983 0158 0300A0E1 		mov	r0, r3
 16984 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16985 0160 0C000BE5 		str	r0, [fp, #-12]
 16986              		.loc 1 6857 5 discriminator 1
 16987 0164 0C301BE5 		ldr	r3, [fp, #-12]
 16988 0168 FF3803E2 		and	r3, r3, #16711680
 16989 016c 020853E3 		cmp	r3, #131072
 16990 0170 0100001A 		bne	.L1094
 16991              		.loc 1 6857 5 discriminator 16
 16992 0174 0830E0E3 		mvn	r3, #8
 16993              		.loc 1 6857 5
 16994 0178 3C0000EA 		b	.L1087
 16995              	.L1094:
 16996              		.loc 1 6857 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 420


 16997 017c 0C301BE5 		ldr	r3, [fp, #-12]
 16998 0180 233CA0E1 		lsr	r3, r3, #24
 16999 0184 030053E3 		cmp	r3, #3
 17000 0188 0100000A 		beq	.L1089
 17001              		.loc 1 6857 5 discriminator 18
 17002 018c 0130E0E3 		mvn	r3, #1
 17003              		.loc 1 6857 5
 17004 0190 360000EA 		b	.L1087
 17005              	.L1089:
6858:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
6859:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6860:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 17006              		.loc 1 6860 5 is_stmt 1
 17007 0194 08301BE5 		ldr	r3, [fp, #-8]
 17008 0198 083093E5 		ldr	r3, [r3, #8]
 17009 019c 013003E2 		and	r3, r3, #1
 17010 01a0 000053E3 		cmp	r3, #0
 17011 01a4 0100001A 		bne	.L1095
 17012              		.loc 1 6860 5 is_stmt 0 discriminator 1
 17013 01a8 0630E0E3 		mvn	r3, #6
 17014              		.loc 1 6860 5
 17015 01ac 2F0000EA 		b	.L1087
 17016              	.L1095:
6861:../../Source/Kernel/rme_kernel.c ****     
6862:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6863:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17017              		.loc 1 6863 5 is_stmt 1
 17018 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17019 01b4 142093E5 		ldr	r2, [r3, #20]
 17020 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17021 01bc 030052E1 		cmp	r2, r3
 17022 01c0 0100008A 		bhi	.L1096
 17023              		.loc 1 6863 5 is_stmt 0 discriminator 1
 17024 01c4 0230E0E3 		mvn	r3, #2
 17025              		.loc 1 6863 5
 17026 01c8 280000EA 		b	.L1087
 17027              	.L1096:
 17028              		.loc 1 6863 5 discriminator 2
 17029 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17030 01d0 8322A0E1 		lsl	r2, r3, #5
 17031 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17032 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17033 01dc 033082E0 		add	r3, r2, r3
 17034 01e0 10300BE5 		str	r3, [fp, #-16]
6864:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6865:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17035              		.loc 1 6865 5 is_stmt 1
 17036 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17037 01e8 0128A0E3 		mov	r2, #65536
 17038 01ec 0010A0E3 		mov	r1, #0
 17039 01f0 0300A0E1 		mov	r0, r3
 17040 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17041 01f8 0030A0E1 		mov	r3, r0
 17042              		.loc 1 6865 5 is_stmt 0 discriminator 1
 17043 01fc 000053E3 		cmp	r3, #0
 17044 0200 0100001A 		bne	.L1097
 17045 0204 0430E0E3 		mvn	r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 421


 17046              		.loc 1 6865 5
 17047 0208 180000EA 		b	.L1087
 17048              	.L1097:
 17049              		.loc 1 6865 5 discriminator 2
 17050 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17051 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17052 0214 002093E5 		ldr	r2, [r3]
 17053 0218 10301BE5 		ldr	r3, [fp, #-16]
 17054 021c 102083E5 		str	r2, [r3, #16]
6866:../../Source/Kernel/rme_kernel.c ****     
6867:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6868:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=1U;
 17055              		.loc 1 6868 27 is_stmt 1
 17056 0220 10301BE5 		ldr	r3, [fp, #-16]
 17057 0224 0120A0E3 		mov	r2, #1
 17058 0228 042083E5 		str	r2, [r3, #4]
6869:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17059              		.loc 1 6869 25
 17060 022c 10301BE5 		ldr	r3, [fp, #-16]
 17061 0230 0020A0E3 		mov	r2, #0
 17062 0234 0C2083E5 		str	r2, [r3, #12]
6870:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17063              		.loc 1 6870 23
 17064 0238 10301BE5 		ldr	r3, [fp, #-16]
 17065 023c 3F20A0E3 		mov	r2, #63
 17066 0240 082083E5 		str	r2, [r3, #8]
6871:../../Source/Kernel/rme_kernel.c ****     
6872:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6873:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17067              		.loc 1 6873 21
 17068 0244 10301BE5 		ldr	r3, [fp, #-16]
 17069 0248 0020A0E3 		mov	r2, #0
 17070 024c 142083E5 		str	r2, [r3, #20]
6874:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=RME_NULL;
 17071              		.loc 1 6874 17
 17072 0250 10301BE5 		ldr	r3, [fp, #-16]
 17073 0254 0020A0E3 		mov	r2, #0
 17074 0258 182083E5 		str	r2, [r3, #24]
6875:../../Source/Kernel/rme_kernel.c **** 
6876:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6877:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17075              		.loc 1 6877 5
 17076 025c 10301BE5 		ldr	r3, [fp, #-16]
 17077 0260 0213A0E3 		mov	r1, #134217728
 17078 0264 0300A0E1 		mov	r0, r3
 17079 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6878:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6879:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6880:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6881:../../Source/Kernel/rme_kernel.c **** 
6882:../../Source/Kernel/rme_kernel.c ****     return 0;
 17080              		.loc 1 6882 12
 17081 026c 0030A0E3 		mov	r3, #0
 17082              	.L1087:
6883:../../Source/Kernel/rme_kernel.c **** }
 17083              		.loc 1 6883 1
 17084 0270 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 422


 17085 0274 04D04BE2 		sub	sp, fp, #4
 17086              		.cfi_def_cfa 13, 8
 17087              		@ sp needed
 17088 0278 0088BDE8 		pop	{fp, pc}
 17089              		.cfi_endproc
 17090              	.LFE65:
 17092              		.section	.text._RME_Sig_Crt,"ax",%progbits
 17093              		.align	2
 17094              		.syntax unified
 17095              		.arm
 17097              	_RME_Sig_Crt:
 17098              	.LFB66:
6884:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Boot_Crt ********************************************/
6885:../../Source/Kernel/rme_kernel.c **** 
6886:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Crt ******************************************************
6887:../../Source/Kernel/rme_kernel.c **** Description : Create a signal endpoint.
6888:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6889:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6890:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6891:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6892:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6893:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6894:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6895:../../Source/Kernel/rme_kernel.c **** Output      : None.
6896:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6897:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6898:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Crt(struct RME_Cap_Cpt* Cpt,
6899:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6900:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6901:../../Source/Kernel/rme_kernel.c **** {
 17099              		.loc 1 6901 1
 17100              		.cfi_startproc
 17101              		@ args = 0, pretend = 0, frame = 32
 17102              		@ frame_needed = 1, uses_anonymous_args = 0
 17103 0000 00482DE9 		push	{fp, lr}
 17104              		.cfi_def_cfa_offset 8
 17105              		.cfi_offset 11, -8
 17106              		.cfi_offset 14, -4
 17107 0004 04B08DE2 		add	fp, sp, #4
 17108              		.cfi_def_cfa 11, 4
 17109 0008 20D04DE2 		sub	sp, sp, #32
 17110 000c 18000BE5 		str	r0, [fp, #-24]
 17111 0010 1C100BE5 		str	r1, [fp, #-28]
 17112 0014 20200BE5 		str	r2, [fp, #-32]
6902:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6903:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Crt;
6904:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6905:../../Source/Kernel/rme_kernel.c ****     
6906:../../Source/Kernel/rme_kernel.c ****     /*RME_DBG_S("\r\n Cap_Cpt ");
6907:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Cpt);
6908:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n Cap_Sig ");
6909:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Sig);*/
6910:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6911:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17113              		.loc 1 6911 5
 17114 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17115 001c 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 423


 17116 0020 000053E3 		cmp	r3, #0
 17117 0024 1C00001A 		bne	.L1099
 17118              		.loc 1 6911 5 is_stmt 0 discriminator 1
 17119 0028 18301BE5 		ldr	r3, [fp, #-24]
 17120 002c 142093E5 		ldr	r2, [r3, #20]
 17121 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17122 0034 030052E1 		cmp	r2, r3
 17123 0038 0100008A 		bhi	.L1100
 17124              		.loc 1 6911 5 discriminator 3
 17125 003c 0230E0E3 		mvn	r3, #2
 17126              		.loc 1 6911 5
 17127 0040 8A0000EA 		b	.L1101
 17128              	.L1100:
 17129              		.loc 1 6911 5 discriminator 4
 17130 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17131 0048 8322A0E1 		lsl	r2, r3, #5
 17132 004c 18301BE5 		ldr	r3, [fp, #-24]
 17133 0050 0C3093E5 		ldr	r3, [r3, #12]
 17134 0054 033082E0 		add	r3, r2, r3
 17135 0058 08300BE5 		str	r3, [fp, #-8]
 17136 005c 08301BE5 		ldr	r3, [fp, #-8]
 17137 0060 0300A0E1 		mov	r0, r3
 17138 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17139 0068 0C000BE5 		str	r0, [fp, #-12]
 17140              		.loc 1 6911 5 discriminator 1
 17141 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17142 0070 FF3803E2 		and	r3, r3, #16711680
 17143 0074 020853E3 		cmp	r3, #131072
 17144 0078 0100001A 		bne	.L1102
 17145              		.loc 1 6911 5 discriminator 5
 17146 007c 0830E0E3 		mvn	r3, #8
 17147              		.loc 1 6911 5
 17148 0080 7A0000EA 		b	.L1101
 17149              	.L1102:
 17150              		.loc 1 6911 5 discriminator 6
 17151 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17152 0088 233CA0E1 		lsr	r3, r3, #24
 17153 008c 030053E3 		cmp	r3, #3
 17154 0090 3F00000A 		beq	.L1103
 17155              		.loc 1 6911 5 discriminator 7
 17156 0094 0130E0E3 		mvn	r3, #1
 17157              		.loc 1 6911 5
 17158 0098 740000EA 		b	.L1101
 17159              	.L1099:
 17160              		.loc 1 6911 5 discriminator 2
 17161 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17162 00a0 2324A0E1 		lsr	r2, r3, #8
 17163 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17164 00a8 143093E5 		ldr	r3, [r3, #20]
 17165 00ac 030052E1 		cmp	r2, r3
 17166 00b0 0100003A 		bcc	.L1104
 17167              		.loc 1 6911 5 discriminator 8
 17168 00b4 0230E0E3 		mvn	r3, #2
 17169              		.loc 1 6911 5
 17170 00b8 6C0000EA 		b	.L1101
 17171              	.L1104:
 17172              		.loc 1 6911 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 424


 17173 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17174 00c0 2334A0E1 		lsr	r3, r3, #8
 17175 00c4 8322A0E1 		lsl	r2, r3, #5
 17176 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17177 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17178 00d0 033082E0 		add	r3, r2, r3
 17179 00d4 08300BE5 		str	r3, [fp, #-8]
 17180 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17181 00dc 0300A0E1 		mov	r0, r3
 17182 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17183 00e4 0C000BE5 		str	r0, [fp, #-12]
 17184              		.loc 1 6911 5 discriminator 1
 17185 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17186 00ec FF3803E2 		and	r3, r3, #16711680
 17187 00f0 020853E3 		cmp	r3, #131072
 17188 00f4 0100001A 		bne	.L1105
 17189              		.loc 1 6911 5 discriminator 10
 17190 00f8 0830E0E3 		mvn	r3, #8
 17191              		.loc 1 6911 5
 17192 00fc 5B0000EA 		b	.L1101
 17193              	.L1105:
 17194              		.loc 1 6911 5 discriminator 11
 17195 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17196 0104 233CA0E1 		lsr	r3, r3, #24
 17197 0108 030053E3 		cmp	r3, #3
 17198 010c 0100000A 		beq	.L1106
 17199              		.loc 1 6911 5 discriminator 12
 17200 0110 0130E0E3 		mvn	r3, #1
 17201              		.loc 1 6911 5
 17202 0114 550000EA 		b	.L1101
 17203              	.L1106:
 17204              		.loc 1 6911 5 discriminator 13
 17205 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17206 011c 7F2003E2 		and	r2, r3, #127
 17207 0120 08301BE5 		ldr	r3, [fp, #-8]
 17208 0124 143093E5 		ldr	r3, [r3, #20]
 17209 0128 030052E1 		cmp	r2, r3
 17210 012c 0100003A 		bcc	.L1107
 17211              		.loc 1 6911 5 discriminator 14
 17212 0130 0230E0E3 		mvn	r3, #2
 17213              		.loc 1 6911 5
 17214 0134 4D0000EA 		b	.L1101
 17215              	.L1107:
 17216              		.loc 1 6911 5 discriminator 15
 17217 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17218 013c 7F3003E2 		and	r3, r3, #127
 17219 0140 8322A0E1 		lsl	r2, r3, #5
 17220 0144 08301BE5 		ldr	r3, [fp, #-8]
 17221 0148 0C3093E5 		ldr	r3, [r3, #12]
 17222 014c 033082E0 		add	r3, r2, r3
 17223 0150 08300BE5 		str	r3, [fp, #-8]
 17224 0154 08301BE5 		ldr	r3, [fp, #-8]
 17225 0158 0300A0E1 		mov	r0, r3
 17226 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17227 0160 0C000BE5 		str	r0, [fp, #-12]
 17228              		.loc 1 6911 5 discriminator 1
 17229 0164 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 425


 17230 0168 FF3803E2 		and	r3, r3, #16711680
 17231 016c 020853E3 		cmp	r3, #131072
 17232 0170 0100001A 		bne	.L1108
 17233              		.loc 1 6911 5 discriminator 16
 17234 0174 0830E0E3 		mvn	r3, #8
 17235              		.loc 1 6911 5
 17236 0178 3C0000EA 		b	.L1101
 17237              	.L1108:
 17238              		.loc 1 6911 5 discriminator 17
 17239 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17240 0180 233CA0E1 		lsr	r3, r3, #24
 17241 0184 030053E3 		cmp	r3, #3
 17242 0188 0100000A 		beq	.L1103
 17243              		.loc 1 6911 5 discriminator 18
 17244 018c 0130E0E3 		mvn	r3, #1
 17245              		.loc 1 6911 5
 17246 0190 360000EA 		b	.L1101
 17247              	.L1103:
6912:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
6913:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("reach 1 ");
6914:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6915:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 17248              		.loc 1 6915 5 is_stmt 1
 17249 0194 08301BE5 		ldr	r3, [fp, #-8]
 17250 0198 083093E5 		ldr	r3, [r3, #8]
 17251 019c 013003E2 		and	r3, r3, #1
 17252 01a0 000053E3 		cmp	r3, #0
 17253 01a4 0100001A 		bne	.L1109
 17254              		.loc 1 6915 5 is_stmt 0 discriminator 1
 17255 01a8 0630E0E3 		mvn	r3, #6
 17256              		.loc 1 6915 5
 17257 01ac 2F0000EA 		b	.L1101
 17258              	.L1109:
6916:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("reach 2 ");
6917:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6918:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17259              		.loc 1 6918 5 is_stmt 1
 17260 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17261 01b4 142093E5 		ldr	r2, [r3, #20]
 17262 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17263 01bc 030052E1 		cmp	r2, r3
 17264 01c0 0100008A 		bhi	.L1110
 17265              		.loc 1 6918 5 is_stmt 0 discriminator 1
 17266 01c4 0230E0E3 		mvn	r3, #2
 17267              		.loc 1 6918 5
 17268 01c8 280000EA 		b	.L1101
 17269              	.L1110:
 17270              		.loc 1 6918 5 discriminator 2
 17271 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17272 01d0 8322A0E1 		lsl	r2, r3, #5
 17273 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17274 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17275 01dc 033082E0 		add	r3, r2, r3
 17276 01e0 10300BE5 		str	r3, [fp, #-16]
6919:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("reach 3 ");
6920:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6921:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 426


 17277              		.loc 1 6921 5 is_stmt 1
 17278 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17279 01e8 0128A0E3 		mov	r2, #65536
 17280 01ec 0010A0E3 		mov	r1, #0
 17281 01f0 0300A0E1 		mov	r0, r3
 17282 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17283 01f8 0030A0E1 		mov	r3, r0
 17284              		.loc 1 6921 5 is_stmt 0 discriminator 1
 17285 01fc 000053E3 		cmp	r3, #0
 17286 0200 0100001A 		bne	.L1111
 17287 0204 0430E0E3 		mvn	r3, #4
 17288              		.loc 1 6921 5
 17289 0208 180000EA 		b	.L1101
 17290              	.L1111:
 17291              		.loc 1 6921 5 discriminator 2
 17292 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17293 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17294 0214 002093E5 		ldr	r2, [r3]
 17295 0218 10301BE5 		ldr	r3, [fp, #-16]
 17296 021c 102083E5 		str	r2, [r3, #16]
6922:../../Source/Kernel/rme_kernel.c **** 
6923:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6924:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=0U;
 17297              		.loc 1 6924 27 is_stmt 1
 17298 0220 10301BE5 		ldr	r3, [fp, #-16]
 17299 0224 0020A0E3 		mov	r2, #0
 17300 0228 042083E5 		str	r2, [r3, #4]
6925:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17301              		.loc 1 6925 25
 17302 022c 10301BE5 		ldr	r3, [fp, #-16]
 17303 0230 0020A0E3 		mov	r2, #0
 17304 0234 0C2083E5 		str	r2, [r3, #12]
6926:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17305              		.loc 1 6926 23
 17306 0238 10301BE5 		ldr	r3, [fp, #-16]
 17307 023c 3F20A0E3 		mov	r2, #63
 17308 0240 082083E5 		str	r2, [r3, #8]
6927:../../Source/Kernel/rme_kernel.c ****     
6928:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6929:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17309              		.loc 1 6929 21
 17310 0244 10301BE5 		ldr	r3, [fp, #-16]
 17311 0248 0020A0E3 		mov	r2, #0
 17312 024c 142083E5 		str	r2, [r3, #20]
6930:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=0U;
 17313              		.loc 1 6930 17
 17314 0250 10301BE5 		ldr	r3, [fp, #-16]
 17315 0254 0020A0E3 		mov	r2, #0
 17316 0258 182083E5 		str	r2, [r3, #24]
6931:../../Source/Kernel/rme_kernel.c ****     
6932:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6933:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17317              		.loc 1 6933 5
 17318 025c 10301BE5 		ldr	r3, [fp, #-16]
 17319 0260 0213A0E3 		mov	r1, #134217728
 17320 0264 0300A0E1 		mov	r0, r3
 17321 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 427


6934:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6935:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6936:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6937:../../Source/Kernel/rme_kernel.c **** 
6938:../../Source/Kernel/rme_kernel.c ****     return 0;
 17322              		.loc 1 6938 12
 17323 026c 0030A0E3 		mov	r3, #0
 17324              	.L1101:
6939:../../Source/Kernel/rme_kernel.c **** }
 17325              		.loc 1 6939 1
 17326 0270 0300A0E1 		mov	r0, r3
 17327 0274 04D04BE2 		sub	sp, fp, #4
 17328              		.cfi_def_cfa 13, 8
 17329              		@ sp needed
 17330 0278 0088BDE8 		pop	{fp, pc}
 17331              		.cfi_endproc
 17332              	.LFE66:
 17334              		.section	.text._RME_Sig_Del,"ax",%progbits
 17335              		.align	2
 17336              		.syntax unified
 17337              		.arm
 17339              	_RME_Sig_Del:
 17340              	.LFB67:
6940:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Crt *************************************************/
6941:../../Source/Kernel/rme_kernel.c **** 
6942:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Del ******************************************************
6943:../../Source/Kernel/rme_kernel.c **** Description : Delete a signal endpoint.
6944:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6945:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
6946:../../Source/Kernel/rme_kernel.c ****                                   delete from.
6947:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6948:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
6949:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6950:../../Source/Kernel/rme_kernel.c **** Output      : None.
6951:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6952:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6953:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Del(struct RME_Cap_Cpt* Cpt,
6954:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6955:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6956:../../Source/Kernel/rme_kernel.c **** {
 17341              		.loc 1 6956 1
 17342              		.cfi_startproc
 17343              		@ args = 0, pretend = 0, frame = 32
 17344              		@ frame_needed = 1, uses_anonymous_args = 0
 17345 0000 00482DE9 		push	{fp, lr}
 17346              		.cfi_def_cfa_offset 8
 17347              		.cfi_offset 11, -8
 17348              		.cfi_offset 14, -4
 17349 0004 04B08DE2 		add	fp, sp, #4
 17350              		.cfi_def_cfa 11, 4
 17351 0008 20D04DE2 		sub	sp, sp, #32
 17352 000c 18000BE5 		str	r0, [fp, #-24]
 17353 0010 1C100BE5 		str	r1, [fp, #-28]
 17354 0014 20200BE5 		str	r2, [fp, #-32]
6957:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6958:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Del;
6959:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 428


6960:../../Source/Kernel/rme_kernel.c ****     
6961:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6962:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17355              		.loc 1 6962 5
 17356 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17357 001c 803003E2 		and	r3, r3, #128
 17358 0020 000053E3 		cmp	r3, #0
 17359 0024 1C00001A 		bne	.L1113
 17360              		.loc 1 6962 5 is_stmt 0 discriminator 1
 17361 0028 18301BE5 		ldr	r3, [fp, #-24]
 17362 002c 142093E5 		ldr	r2, [r3, #20]
 17363 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17364 0034 030052E1 		cmp	r2, r3
 17365 0038 0100008A 		bhi	.L1114
 17366              		.loc 1 6962 5 discriminator 3
 17367 003c 0230E0E3 		mvn	r3, #2
 17368              		.loc 1 6962 5
 17369 0040 B80000EA 		b	.L1115
 17370              	.L1114:
 17371              		.loc 1 6962 5 discriminator 4
 17372 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17373 0048 8322A0E1 		lsl	r2, r3, #5
 17374 004c 18301BE5 		ldr	r3, [fp, #-24]
 17375 0050 0C3093E5 		ldr	r3, [r3, #12]
 17376 0054 033082E0 		add	r3, r2, r3
 17377 0058 08300BE5 		str	r3, [fp, #-8]
 17378 005c 08301BE5 		ldr	r3, [fp, #-8]
 17379 0060 0300A0E1 		mov	r0, r3
 17380 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17381 0068 0C000BE5 		str	r0, [fp, #-12]
 17382              		.loc 1 6962 5 discriminator 1
 17383 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17384 0070 FF3803E2 		and	r3, r3, #16711680
 17385 0074 020853E3 		cmp	r3, #131072
 17386 0078 0100001A 		bne	.L1116
 17387              		.loc 1 6962 5 discriminator 5
 17388 007c 0830E0E3 		mvn	r3, #8
 17389              		.loc 1 6962 5
 17390 0080 A80000EA 		b	.L1115
 17391              	.L1116:
 17392              		.loc 1 6962 5 discriminator 6
 17393 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17394 0088 233CA0E1 		lsr	r3, r3, #24
 17395 008c 030053E3 		cmp	r3, #3
 17396 0090 3F00000A 		beq	.L1117
 17397              		.loc 1 6962 5 discriminator 7
 17398 0094 0130E0E3 		mvn	r3, #1
 17399              		.loc 1 6962 5
 17400 0098 A20000EA 		b	.L1115
 17401              	.L1113:
 17402              		.loc 1 6962 5 discriminator 2
 17403 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17404 00a0 2324A0E1 		lsr	r2, r3, #8
 17405 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17406 00a8 143093E5 		ldr	r3, [r3, #20]
 17407 00ac 030052E1 		cmp	r2, r3
 17408 00b0 0100003A 		bcc	.L1118
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 429


 17409              		.loc 1 6962 5 discriminator 8
 17410 00b4 0230E0E3 		mvn	r3, #2
 17411              		.loc 1 6962 5
 17412 00b8 9A0000EA 		b	.L1115
 17413              	.L1118:
 17414              		.loc 1 6962 5 discriminator 9
 17415 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17416 00c0 2334A0E1 		lsr	r3, r3, #8
 17417 00c4 8322A0E1 		lsl	r2, r3, #5
 17418 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17419 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17420 00d0 033082E0 		add	r3, r2, r3
 17421 00d4 08300BE5 		str	r3, [fp, #-8]
 17422 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17423 00dc 0300A0E1 		mov	r0, r3
 17424 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17425 00e4 0C000BE5 		str	r0, [fp, #-12]
 17426              		.loc 1 6962 5 discriminator 1
 17427 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17428 00ec FF3803E2 		and	r3, r3, #16711680
 17429 00f0 020853E3 		cmp	r3, #131072
 17430 00f4 0100001A 		bne	.L1119
 17431              		.loc 1 6962 5 discriminator 10
 17432 00f8 0830E0E3 		mvn	r3, #8
 17433              		.loc 1 6962 5
 17434 00fc 890000EA 		b	.L1115
 17435              	.L1119:
 17436              		.loc 1 6962 5 discriminator 11
 17437 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17438 0104 233CA0E1 		lsr	r3, r3, #24
 17439 0108 030053E3 		cmp	r3, #3
 17440 010c 0100000A 		beq	.L1120
 17441              		.loc 1 6962 5 discriminator 12
 17442 0110 0130E0E3 		mvn	r3, #1
 17443              		.loc 1 6962 5
 17444 0114 830000EA 		b	.L1115
 17445              	.L1120:
 17446              		.loc 1 6962 5 discriminator 13
 17447 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17448 011c 7F2003E2 		and	r2, r3, #127
 17449 0120 08301BE5 		ldr	r3, [fp, #-8]
 17450 0124 143093E5 		ldr	r3, [r3, #20]
 17451 0128 030052E1 		cmp	r2, r3
 17452 012c 0100003A 		bcc	.L1121
 17453              		.loc 1 6962 5 discriminator 14
 17454 0130 0230E0E3 		mvn	r3, #2
 17455              		.loc 1 6962 5
 17456 0134 7B0000EA 		b	.L1115
 17457              	.L1121:
 17458              		.loc 1 6962 5 discriminator 15
 17459 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17460 013c 7F3003E2 		and	r3, r3, #127
 17461 0140 8322A0E1 		lsl	r2, r3, #5
 17462 0144 08301BE5 		ldr	r3, [fp, #-8]
 17463 0148 0C3093E5 		ldr	r3, [r3, #12]
 17464 014c 033082E0 		add	r3, r2, r3
 17465 0150 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 430


 17466 0154 08301BE5 		ldr	r3, [fp, #-8]
 17467 0158 0300A0E1 		mov	r0, r3
 17468 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17469 0160 0C000BE5 		str	r0, [fp, #-12]
 17470              		.loc 1 6962 5 discriminator 1
 17471 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17472 0168 FF3803E2 		and	r3, r3, #16711680
 17473 016c 020853E3 		cmp	r3, #131072
 17474 0170 0100001A 		bne	.L1122
 17475              		.loc 1 6962 5 discriminator 16
 17476 0174 0830E0E3 		mvn	r3, #8
 17477              		.loc 1 6962 5
 17478 0178 6A0000EA 		b	.L1115
 17479              	.L1122:
 17480              		.loc 1 6962 5 discriminator 17
 17481 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17482 0180 233CA0E1 		lsr	r3, r3, #24
 17483 0184 030053E3 		cmp	r3, #3
 17484 0188 0100000A 		beq	.L1117
 17485              		.loc 1 6962 5 discriminator 18
 17486 018c 0130E0E3 		mvn	r3, #1
 17487              		.loc 1 6962 5
 17488 0190 640000EA 		b	.L1115
 17489              	.L1117:
6963:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
6964:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
6965:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 17490              		.loc 1 6965 5 is_stmt 1
 17491 0194 08301BE5 		ldr	r3, [fp, #-8]
 17492 0198 083093E5 		ldr	r3, [r3, #8]
 17493 019c 023003E2 		and	r3, r3, #2
 17494 01a0 000053E3 		cmp	r3, #0
 17495 01a4 0100001A 		bne	.L1123
 17496              		.loc 1 6965 5 is_stmt 0 discriminator 1
 17497 01a8 0630E0E3 		mvn	r3, #6
 17498              		.loc 1 6965 5
 17499 01ac 5D0000EA 		b	.L1115
 17500              	.L1123:
6966:../../Source/Kernel/rme_kernel.c ****     
6967:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6968:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Del);
 17501              		.loc 1 6968 5 is_stmt 1
 17502 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17503 01b4 142093E5 		ldr	r2, [r3, #20]
 17504 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17505 01bc 030052E1 		cmp	r2, r3
 17506 01c0 0100008A 		bhi	.L1124
 17507              		.loc 1 6968 5 is_stmt 0 discriminator 1
 17508 01c4 0230E0E3 		mvn	r3, #2
 17509              		.loc 1 6968 5
 17510 01c8 560000EA 		b	.L1115
 17511              	.L1124:
 17512              		.loc 1 6968 5 discriminator 2
 17513 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17514 01d0 8322A0E1 		lsl	r2, r3, #5
 17515 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17516 01d8 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 431


 17517 01dc 033082E0 		add	r3, r2, r3
 17518 01e0 10300BE5 		str	r3, [fp, #-16]
6969:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
6970:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Sig_Del,Type_Stat,RME_CAP_TYPE_SIG);
 17519              		.loc 1 6970 5 is_stmt 1
 17520 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17521 01e8 0300A0E1 		mov	r0, r3
 17522 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17523 01f0 0C000BE5 		str	r0, [fp, #-12]
 17524              		.loc 1 6970 5 is_stmt 0 discriminator 1
 17525 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 17526 01f8 FF3803E2 		and	r3, r3, #16711680
 17527 01fc 020853E3 		cmp	r3, #131072
 17528 0200 0100000A 		beq	.L1125
 17529 0204 0830E0E3 		mvn	r3, #8
 17530              		.loc 1 6970 5
 17531 0208 460000EA 		b	.L1115
 17532              	.L1125:
 17533              		.loc 1 6970 5 discriminator 2
 17534 020c 0C301BE5 		ldr	r3, [fp, #-12]
 17535 0210 233CA0E1 		lsr	r3, r3, #24
 17536 0214 080053E3 		cmp	r3, #8
 17537 0218 0100000A 		beq	.L1126
 17538              		.loc 1 6970 5 discriminator 3
 17539 021c 0130E0E3 		mvn	r3, #1
 17540              		.loc 1 6970 5
 17541 0220 400000EA 		b	.L1115
 17542              	.L1126:
 17543              		.loc 1 6970 5 discriminator 4
 17544 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17545 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17546 022c 002093E5 		ldr	r2, [r3]
 17547 0230 10301BE5 		ldr	r3, [fp, #-16]
 17548 0234 103093E5 		ldr	r3, [r3, #16]
 17549 0238 0310A0E1 		mov	r1, r3
 17550 023c 0200A0E1 		mov	r0, r2
 17551 0240 FEFFFFEB 		bl	_RME_Diff
 17552 0244 0030A0E1 		mov	r3, r0
 17553              		.loc 1 6970 5 discriminator 1
 17554 0248 0A0053E3 		cmp	r3, #10
 17555 024c 0100008A 		bhi	.L1127
 17556              		.loc 1 6970 5 discriminator 5
 17557 0250 0730E0E3 		mvn	r3, #7
 17558              		.loc 1 6970 5
 17559 0254 330000EA 		b	.L1115
 17560              	.L1127:
 17561              		.loc 1 6970 5 discriminator 6
 17562 0258 10301BE5 		ldr	r3, [fp, #-16]
 17563 025c 043093E5 		ldr	r3, [r3, #4]
 17564 0260 000053E3 		cmp	r3, #0
 17565 0264 0B00000A 		beq	.L1128
 17566              		.loc 1 6970 5 discriminator 7
 17567 0268 0C301BE5 		ldr	r3, [fp, #-12]
 17568 026c 7330FFE6 		uxth	r3, r3
 17569 0270 000053E3 		cmp	r3, #0
 17570 0274 0500001A 		bne	.L1129
 17571              		.loc 1 6970 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 432


 17572 0278 10001BE5 		ldr	r0, [fp, #-16]
 17573 027c 0C301BE5 		ldr	r3, [fp, #-12]
 17574 0280 FF38C3E3 		bic	r3, r3, #16711680
 17575 0284 0320A0E1 		mov	r2, r3
 17576 0288 0C101BE5 		ldr	r1, [fp, #-12]
 17577 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17578              	.L1129:
 17579              		.loc 1 6970 5 discriminator 11
 17580 0290 0530E0E3 		mvn	r3, #5
 17581              		.loc 1 6970 5
 17582 0294 230000EA 		b	.L1115
 17583              	.L1128:
 17584              		.loc 1 6970 5 discriminator 8
 17585 0298 0C301BE5 		ldr	r3, [fp, #-12]
 17586 029c 7330FFE6 		uxth	r3, r3
 17587 02a0 000053E3 		cmp	r3, #0
 17588 02a4 0800000A 		beq	.L1130
 17589              		.loc 1 6970 5 discriminator 12
 17590 02a8 003000E3 		movw	r3, #:lower16:.LC2
 17591 02ac 003040E3 		movt	r3, #:upper16:.LC2
 17592 02b0 002000E3 		movw	r2, #:lower16:.LC3
 17593 02b4 002040E3 		movt	r2, #:upper16:.LC3
 17594 02b8 3A1B01E3 		movw	r1, #6970
 17595 02bc 000000E3 		movw	r0, #:lower16:.LC4
 17596 02c0 000040E3 		movt	r0, #:upper16:.LC4
 17597 02c4 FEFFFFEB 		bl	RME_Log
 17598              	.L1131:
 17599              		.loc 1 6970 5
 17600 02c8 FEFFFFEA 		b	.L1131
 17601              	.L1130:
6971:../../Source/Kernel/rme_kernel.c **** 
6972:../../Source/Kernel/rme_kernel.c ****     /* Check if the signal endpoint is currently used and cannot be deleted */
6973:../../Source/Kernel/rme_kernel.c ****     if(Sig_Del->Thd!=0U)
 17602              		.loc 1 6973 15 is_stmt 1
 17603 02cc 10301BE5 		ldr	r3, [fp, #-16]
 17604 02d0 183093E5 		ldr	r3, [r3, #24]
 17605              		.loc 1 6973 7
 17606 02d4 000053E3 		cmp	r3, #0
 17607 02d8 0700000A 		beq	.L1132
6974:../../Source/Kernel/rme_kernel.c ****     {
6975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6976:../../Source/Kernel/rme_kernel.c **** 
6977:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Sig_Del,Type_Stat);
 17608              		.loc 1 6977 9
 17609 02dc 10001BE5 		ldr	r0, [fp, #-16]
 17610 02e0 0C301BE5 		ldr	r3, [fp, #-12]
 17611 02e4 FF38C3E3 		bic	r3, r3, #16711680
 17612 02e8 0320A0E1 		mov	r2, r3
 17613 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 17614 02f0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
6978:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 17615              		.loc 1 6978 16
 17616 02f4 4B3FE0E3 		mvn	r3, #300
 17617 02f8 0A0000EA 		b	.L1115
 17618              	.L1132:
6979:../../Source/Kernel/rme_kernel.c ****     }
6980:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 433


6981:../../Source/Kernel/rme_kernel.c ****     {
6982:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6983:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6984:../../Source/Kernel/rme_kernel.c ****     }
6985:../../Source/Kernel/rme_kernel.c ****     
6986:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
6987:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Sig_Del,Type_Stat);
 17619              		.loc 1 6987 5
 17620 02fc 10301BE5 		ldr	r3, [fp, #-16]
 17621 0300 0020A0E3 		mov	r2, #0
 17622 0304 0C101BE5 		ldr	r1, [fp, #-12]
 17623 0308 0300A0E1 		mov	r0, r3
 17624 030c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17625 0310 0030A0E1 		mov	r3, r0
 17626              		.loc 1 6987 5 is_stmt 0 discriminator 1
 17627 0314 000053E3 		cmp	r3, #0
 17628 0318 0100001A 		bne	.L1133
 17629 031c 0030E0E3 		mvn	r3, #0
 17630              		.loc 1 6987 5
 17631 0320 000000EA 		b	.L1115
 17632              	.L1133:
6988:../../Source/Kernel/rme_kernel.c ****     
6989:../../Source/Kernel/rme_kernel.c ****     return 0;
 17633              		.loc 1 6989 12 is_stmt 1
 17634 0324 0030A0E3 		mov	r3, #0
 17635              	.L1115:
6990:../../Source/Kernel/rme_kernel.c **** }
 17636              		.loc 1 6990 1
 17637 0328 0300A0E1 		mov	r0, r3
 17638 032c 04D04BE2 		sub	sp, fp, #4
 17639              		.cfi_def_cfa 13, 8
 17640              		@ sp needed
 17641 0330 0088BDE8 		pop	{fp, pc}
 17642              		.cfi_endproc
 17643              	.LFE67:
 17645              		.section	.text._RME_Kern_High,"ax",%progbits
 17646              		.align	2
 17647              		.global	_RME_Kern_High
 17648              		.syntax unified
 17649              		.arm
 17651              	_RME_Kern_High:
 17652              	.LFB68:
6991:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Del *************************************************/
6992:../../Source/Kernel/rme_kernel.c **** 
6993:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_High ****************************************************
6994:../../Source/Kernel/rme_kernel.c **** Description : Pick the thread with the highest priority to run. Always call
6995:../../Source/Kernel/rme_kernel.c ****               this after you finish all your kernel sending stuff in the
6996:../../Source/Kernel/rme_kernel.c ****               interrupt handler, or the kernel send will not be correct.
6997:../../Source/Kernel/rme_kernel.c ****               This function is also used by system calls to pick a random
6998:../../Source/Kernel/rme_kernel.c ****               highest priority thread.
6999:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
7000:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure.
7001:../../Source/Kernel/rme_kernel.c **** Output      : volatile struct RME_Reg_Struct* Reg - The updated register set.
7002:../../Source/Kernel/rme_kernel.c **** Return      : None.
7003:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7004:../../Source/Kernel/rme_kernel.c **** void _RME_Kern_High(struct RME_Reg_Struct* Reg,
7005:../../Source/Kernel/rme_kernel.c ****                     struct RME_CPU_Local* Local)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 434


7006:../../Source/Kernel/rme_kernel.c **** {
 17653              		.loc 1 7006 1
 17654              		.cfi_startproc
 17655              		@ args = 0, pretend = 0, frame = 16
 17656              		@ frame_needed = 1, uses_anonymous_args = 0
 17657 0000 00482DE9 		push	{fp, lr}
 17658              		.cfi_def_cfa_offset 8
 17659              		.cfi_offset 11, -8
 17660              		.cfi_offset 14, -4
 17661 0004 04B08DE2 		add	fp, sp, #4
 17662              		.cfi_def_cfa 11, 4
 17663 0008 10D04DE2 		sub	sp, sp, #16
 17664 000c 10000BE5 		str	r0, [fp, #-16]
 17665 0010 14100BE5 		str	r1, [fp, #-20]
7007:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
7008:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7009:../../Source/Kernel/rme_kernel.c **** 
7010:../../Source/Kernel/rme_kernel.c ****     Thd_New=_RME_Run_High(Local);
 17666              		.loc 1 7010 13
 17667 0014 14001BE5 		ldr	r0, [fp, #-20]
 17668 0018 FEFFFFEB 		bl	_RME_Run_High
 17669 001c 08000BE5 		str	r0, [fp, #-8]
7011:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New!=RME_NULL);
 17670              		.loc 1 7011 5
 17671 0020 08301BE5 		ldr	r3, [fp, #-8]
 17672 0024 000053E3 		cmp	r3, #0
 17673 0028 0800001A 		bne	.L1135
 17674              		.loc 1 7011 5 is_stmt 0 discriminator 1
 17675 002c 003000E3 		movw	r3, #:lower16:.LC2
 17676 0030 003040E3 		movt	r3, #:upper16:.LC2
 17677 0034 002000E3 		movw	r2, #:lower16:.LC3
 17678 0038 002040E3 		movt	r2, #:upper16:.LC3
 17679 003c 631B01E3 		movw	r1, #7011
 17680 0040 000000E3 		movw	r0, #:lower16:.LC4
 17681 0044 000040E3 		movt	r0, #:upper16:.LC4
 17682 0048 FEFFFFEB 		bl	RME_Log
 17683              	.L1136:
 17684              		.loc 1 7011 5
 17685 004c FEFFFFEA 		b	.L1136
 17686              	.L1135:
7012:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 17687              		.loc 1 7012 12 is_stmt 1
 17688 0050 14301BE5 		ldr	r3, [fp, #-20]
 17689 0054 043093E5 		ldr	r3, [r3, #4]
 17690 0058 0C300BE5 		str	r3, [fp, #-12]
7013:../../Source/Kernel/rme_kernel.c **** 
7014:../../Source/Kernel/rme_kernel.c ****     /* Are these two threads the same? */
7015:../../Source/Kernel/rme_kernel.c ****     if(Thd_New==Thd_Cur)
 17691              		.loc 1 7015 7
 17692 005c 08201BE5 		ldr	r2, [fp, #-8]
 17693 0060 0C301BE5 		ldr	r3, [fp, #-12]
 17694 0064 030052E1 		cmp	r2, r3
 17695 0068 1E00000A 		beq	.L1142
7016:../../Source/Kernel/rme_kernel.c ****     {
7017:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7018:../../Source/Kernel/rme_kernel.c **** 
7019:../../Source/Kernel/rme_kernel.c ****         return;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 435


7020:../../Source/Kernel/rme_kernel.c ****     }
7021:../../Source/Kernel/rme_kernel.c ****     else
7022:../../Source/Kernel/rme_kernel.c ****     {
7023:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7024:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7025:../../Source/Kernel/rme_kernel.c ****     }
7026:../../Source/Kernel/rme_kernel.c **** 
7027:../../Source/Kernel/rme_kernel.c ****     /* Check if we need to do the context switch regardless of priority
7028:../../Source/Kernel/rme_kernel.c ****      * because the current thread is not ready yet. */
7029:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.State==RME_THD_READY)
 17696              		.loc 1 7029 22
 17697 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17698 0070 1C3093E5 		ldr	r3, [r3, #28]
 17699              		.loc 1 7029 7
 17700 0074 000053E3 		cmp	r3, #0
 17701 0078 0500001A 		bne	.L1139
7030:../../Source/Kernel/rme_kernel.c ****     {
7031:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7032:../../Source/Kernel/rme_kernel.c **** 
7033:../../Source/Kernel/rme_kernel.c ****         /* Check priority to see if the switch is necessary */
7034:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Prio<=Thd_Cur->Sched.Prio)
 17702              		.loc 1 7034 26
 17703 007c 08301BE5 		ldr	r3, [fp, #-8]
 17704 0080 202093E5 		ldr	r2, [r3, #32]
 17705              		.loc 1 7034 47
 17706 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17707 0088 203093E5 		ldr	r3, [r3, #32]
 17708              		.loc 1 7034 11
 17709 008c 030052E1 		cmp	r2, r3
 17710 0090 1600009A 		bls	.L1143
 17711              	.L1139:
7035:../../Source/Kernel/rme_kernel.c ****         {
7036:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7037:../../Source/Kernel/rme_kernel.c **** 
7038:../../Source/Kernel/rme_kernel.c ****             return;
7039:../../Source/Kernel/rme_kernel.c ****         }
7040:../../Source/Kernel/rme_kernel.c ****         else
7041:../../Source/Kernel/rme_kernel.c ****         {
7042:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7043:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7044:../../Source/Kernel/rme_kernel.c ****         }
7045:../../Source/Kernel/rme_kernel.c ****     }
7046:../../Source/Kernel/rme_kernel.c ****     else
7047:../../Source/Kernel/rme_kernel.c ****     {
7048:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7049:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7050:../../Source/Kernel/rme_kernel.c ****     }
7051:../../Source/Kernel/rme_kernel.c **** 
7052:../../Source/Kernel/rme_kernel.c ****     /* We will have a solid context switch on this point. The current 
7053:../../Source/Kernel/rme_kernel.c ****      * thread is not necessarily READY, it could be EXCPEND as well. */
7054:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 17712              		.loc 1 7054 5
 17713 0094 08301BE5 		ldr	r3, [fp, #-8]
 17714 0098 1C3093E5 		ldr	r3, [r3, #28]
 17715 009c 000053E3 		cmp	r3, #0
 17716 00a0 0800000A 		beq	.L1140
 17717              		.loc 1 7054 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 436


 17718 00a4 003000E3 		movw	r3, #:lower16:.LC2
 17719 00a8 003040E3 		movt	r3, #:upper16:.LC2
 17720 00ac 002000E3 		movw	r2, #:lower16:.LC3
 17721 00b0 002040E3 		movt	r2, #:upper16:.LC3
 17722 00b4 8E1B01E3 		movw	r1, #7054
 17723 00b8 000000E3 		movw	r0, #:lower16:.LC4
 17724 00bc 000040E3 		movt	r0, #:upper16:.LC4
 17725 00c0 FEFFFFEB 		bl	RME_Log
 17726              	.L1141:
 17727              		.loc 1 7054 5
 17728 00c4 FEFFFFEA 		b	.L1141
 17729              	.L1140:
7055:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 17730              		.loc 1 7055 5 is_stmt 1
 17731 00c8 08201BE5 		ldr	r2, [fp, #-8]
 17732 00cc 0C101BE5 		ldr	r1, [fp, #-12]
 17733 00d0 10001BE5 		ldr	r0, [fp, #-16]
 17734 00d4 FEFFFFEB 		bl	_RME_Run_Swt
7056:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 17735              		.loc 1 7056 19
 17736 00d8 14301BE5 		ldr	r3, [fp, #-20]
 17737 00dc 08201BE5 		ldr	r2, [fp, #-8]
 17738 00e0 042083E5 		str	r2, [r3, #4]
 17739 00e4 020000EA 		b	.L1134
 17740              	.L1142:
7019:../../Source/Kernel/rme_kernel.c ****     }
 17741              		.loc 1 7019 9
 17742 00e8 00F020E3 		nop
 17743 00ec 000000EA 		b	.L1134
 17744              	.L1143:
7038:../../Source/Kernel/rme_kernel.c ****         }
 17745              		.loc 1 7038 13
 17746 00f0 00F020E3 		nop
 17747              	.L1134:
7057:../../Source/Kernel/rme_kernel.c **** }
 17748              		.loc 1 7057 1
 17749 00f4 04D04BE2 		sub	sp, fp, #4
 17750              		.cfi_def_cfa 13, 8
 17751              		@ sp needed
 17752 00f8 0088BDE8 		pop	{fp, pc}
 17753              		.cfi_endproc
 17754              	.LFE68:
 17756              		.section	.text._RME_Kern_Snd,"ax",%progbits
 17757              		.align	2
 17758              		.global	_RME_Kern_Snd
 17759              		.syntax unified
 17760              		.arm
 17762              	_RME_Kern_Snd:
 17763              	.LFB69:
7058:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_High ***********************************************/
7059:../../Source/Kernel/rme_kernel.c **** 
7060:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_Snd *****************************************************
7061:../../Source/Kernel/rme_kernel.c **** Description : Try to send a signal to an endpoint from kernel. This is intended
7062:../../Source/Kernel/rme_kernel.c ****               to be called in the interrupt routines in the kernel, and this is
7063:../../Source/Kernel/rme_kernel.c ****               not a system call. The capability passed in must be the root
7064:../../Source/Kernel/rme_kernel.c ****               capability, and this function will not check whether it really is.
7065:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Sig* Cap_Sig - The signal root capability.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 437


7066:../../Source/Kernel/rme_kernel.c **** Output      : None.
7067:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7068:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7069:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kern_Snd(struct RME_Cap_Sig* Cap_Sig)
7070:../../Source/Kernel/rme_kernel.c **** {
 17764              		.loc 1 7070 1
 17765              		.cfi_startproc
 17766              		@ args = 0, pretend = 0, frame = 16
 17767              		@ frame_needed = 1, uses_anonymous_args = 0
 17768 0000 00482DE9 		push	{fp, lr}
 17769              		.cfi_def_cfa_offset 8
 17770              		.cfi_offset 11, -8
 17771              		.cfi_offset 14, -4
 17772 0004 04B08DE2 		add	fp, sp, #4
 17773              		.cfi_def_cfa 11, 4
 17774 0008 10D04DE2 		sub	sp, sp, #16
 17775 000c 10000BE5 		str	r0, [fp, #-16]
7071:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7072:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Sig;
7073:../../Source/Kernel/rme_kernel.c ****     
7074:../../Source/Kernel/rme_kernel.c ****     Thd_Sig=Cap_Sig->Thd;
 17776              		.loc 1 7074 12
 17777 0010 10301BE5 		ldr	r3, [fp, #-16]
 17778 0014 183093E5 		ldr	r3, [r3, #24]
 17779 0018 0C300BE5 		str	r3, [fp, #-12]
7075:../../Source/Kernel/rme_kernel.c ****     
7076:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7077:../../Source/Kernel/rme_kernel.c ****     if(Thd_Sig!=RME_NULL)
 17780              		.loc 1 7077 7
 17781 001c 0C301BE5 		ldr	r3, [fp, #-12]
 17782 0020 000053E3 		cmp	r3, #0
 17783 0024 0B00000A 		beq	.L1145
7078:../../Source/Kernel/rme_kernel.c ****     {
7079:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7080:../../Source/Kernel/rme_kernel.c **** 
7081:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Local==RME_CPU_LOCAL())
 17784              		.loc 1 7081 26
 17785 0028 0C301BE5 		ldr	r3, [fp, #-12]
 17786 002c 142093E5 		ldr	r2, [r3, #20]
 17787              		.loc 1 7081 11
 17788 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 17789 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 17790 0038 030052E1 		cmp	r2, r3
 17791 003c 0200001A 		bne	.L1146
7082:../../Source/Kernel/rme_kernel.c ****         {
7083:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7084:../../Source/Kernel/rme_kernel.c **** 
7085:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 17792              		.loc 1 7085 20
 17793 0040 0130A0E3 		mov	r3, #1
 17794 0044 08300BE5 		str	r3, [fp, #-8]
 17795 0048 040000EA 		b	.L1147
 17796              	.L1146:
7086:../../Source/Kernel/rme_kernel.c ****         }
7087:../../Source/Kernel/rme_kernel.c ****         else
7088:../../Source/Kernel/rme_kernel.c ****         {
7089:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 438


7090:../../Source/Kernel/rme_kernel.c **** 
7091:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 17797              		.loc 1 7091 20
 17798 004c 0030A0E3 		mov	r3, #0
 17799 0050 08300BE5 		str	r3, [fp, #-8]
 17800 0054 010000EA 		b	.L1147
 17801              	.L1145:
7092:../../Source/Kernel/rme_kernel.c ****         }
7093:../../Source/Kernel/rme_kernel.c ****     }
7094:../../Source/Kernel/rme_kernel.c ****     else
7095:../../Source/Kernel/rme_kernel.c ****     {
7096:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7097:../../Source/Kernel/rme_kernel.c **** 
7098:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 17802              		.loc 1 7098 16
 17803 0058 0030A0E3 		mov	r3, #0
 17804 005c 08300BE5 		str	r3, [fp, #-8]
 17805              	.L1147:
7099:../../Source/Kernel/rme_kernel.c ****     }
7100:../../Source/Kernel/rme_kernel.c **** 
7101:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 17806              		.loc 1 7101 7
 17807 0060 08301BE5 		ldr	r3, [fp, #-8]
 17808 0064 000053E3 		cmp	r3, #0
 17809 0068 1700000A 		beq	.L1148
7102:../../Source/Kernel/rme_kernel.c ****     {
7103:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7104:../../Source/Kernel/rme_kernel.c **** 
7105:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7106:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7107:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7108:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7109:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Sig->Ctx.Reg->Reg),1);
 17810              		.loc 1 7109 44
 17811 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17812 0070 483093E5 		ldr	r3, [r3, #72]
 17813              		.loc 1 7109 9
 17814 0074 0110A0E3 		mov	r1, #1
 17815 0078 0300A0E1 		mov	r0, r3
 17816 007c FEFFFFEB 		bl	__RME_Svc_Retval_Set
7110:../../Source/Kernel/rme_kernel.c ****         
7111:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7112:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Slice!=0U)
 17817              		.loc 1 7112 26
 17818 0080 0C301BE5 		ldr	r3, [fp, #-12]
 17819 0084 183093E5 		ldr	r3, [r3, #24]
 17820              		.loc 1 7112 11
 17821 0088 000053E3 		cmp	r3, #0
 17822 008c 0500000A 		beq	.L1149
7113:../../Source/Kernel/rme_kernel.c ****         {
7114:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7115:../../Source/Kernel/rme_kernel.c **** 
7116:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7117:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_READY;
 17823              		.loc 1 7117 33
 17824 0090 0C301BE5 		ldr	r3, [fp, #-12]
 17825 0094 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 439


 17826 0098 1C2083E5 		str	r2, [r3, #28]
7118:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Sig);
 17827              		.loc 1 7118 13
 17828 009c 0C001BE5 		ldr	r0, [fp, #-12]
 17829 00a0 FEFFFFEB 		bl	_RME_Run_Ins
 17830 00a4 040000EA 		b	.L1150
 17831              	.L1149:
7119:../../Source/Kernel/rme_kernel.c ****         }
7120:../../Source/Kernel/rme_kernel.c ****         else
7121:../../Source/Kernel/rme_kernel.c ****         {
7122:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7123:../../Source/Kernel/rme_kernel.c **** 
7124:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7125:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_TIMEOUT;
 17832              		.loc 1 7125 33
 17833 00a8 0C301BE5 		ldr	r3, [fp, #-12]
 17834 00ac 0220A0E3 		mov	r2, #2
 17835 00b0 1C2083E5 		str	r2, [r3, #28]
7126:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Sig);
 17836              		.loc 1 7126 13
 17837 00b4 0C001BE5 		ldr	r0, [fp, #-12]
 17838 00b8 FEFFFFEB 		bl	_RME_Run_Notif
 17839              	.L1150:
7127:../../Source/Kernel/rme_kernel.c ****         }
7128:../../Source/Kernel/rme_kernel.c ****         
7129:../../Source/Kernel/rme_kernel.c ****         /* We will not pick the highest priority thread here immediately, 
7130:../../Source/Kernel/rme_kernel.c ****          * because we may send to a myriad of endpoints in one interrupt, and
7131:../../Source/Kernel/rme_kernel.c ****          * we hope to perform the context switch only once when exiting that
7132:../../Source/Kernel/rme_kernel.c ****          * handler. Also note that the current thread could be EXCPEND as well;
7133:../../Source/Kernel/rme_kernel.c ****          * this is different from the normal signal sending system call. */
7134:../../Source/Kernel/rme_kernel.c ****         
7135:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7136:../../Source/Kernel/rme_kernel.c ****         Cap_Sig->Thd=RME_NULL;
 17840              		.loc 1 7136 21
 17841 00bc 10301BE5 		ldr	r3, [fp, #-16]
 17842 00c0 0020A0E3 		mov	r2, #0
 17843 00c4 182083E5 		str	r2, [r3, #24]
 17844 00c8 0F0000EA 		b	.L1151
 17845              	.L1148:
7137:../../Source/Kernel/rme_kernel.c ****     }
7138:../../Source/Kernel/rme_kernel.c ****     else
7139:../../Source/Kernel/rme_kernel.c ****     {
7140:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7141:../../Source/Kernel/rme_kernel.c **** 
7142:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, or nobody blocked.
7143:../../Source/Kernel/rme_kernel.c ****          * We just faa the counter value and return. */
7144:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Cap_Sig->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 17846              		.loc 1 7144 12
 17847 00cc 10301BE5 		ldr	r3, [fp, #-16]
 17848 00d0 143083E2 		add	r3, r3, #20
 17849 00d4 0110A0E3 		mov	r1, #1
 17850 00d8 0300A0E1 		mov	r0, r3
 17851 00dc FEFFFFEB 		bl	_RME_Fetch_Add_Single
 17852 00e0 0030A0E1 		mov	r3, r0
 17853              		.loc 1 7144 11 discriminator 1
 17854 00e4 0A0173E3 		cmn	r3, #-2147483646
 17855 00e8 0700009A 		bls	.L1151
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 440


7145:../../Source/Kernel/rme_kernel.c ****         {
7146:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7147:../../Source/Kernel/rme_kernel.c **** 
7148:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Cap_Sig->Sig_Num),-1);
 17856              		.loc 1 7148 13
 17857 00ec 10301BE5 		ldr	r3, [fp, #-16]
 17858 00f0 143083E2 		add	r3, r3, #20
 17859 00f4 0010E0E3 		mvn	r1, #0
 17860 00f8 0300A0E1 		mov	r0, r3
 17861 00fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
7149:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 17862              		.loc 1 7149 20
 17863 0100 D13E0FE3 		movw	r3, #65233
 17864 0104 FF3F4FE3 		movt	r3, 65535
 17865 0108 000000EA 		b	.L1152
 17866              	.L1151:
7150:../../Source/Kernel/rme_kernel.c ****         }
7151:../../Source/Kernel/rme_kernel.c ****         else
7152:../../Source/Kernel/rme_kernel.c ****         {
7153:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7154:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7155:../../Source/Kernel/rme_kernel.c ****         }
7156:../../Source/Kernel/rme_kernel.c ****     }
7157:../../Source/Kernel/rme_kernel.c **** 
7158:../../Source/Kernel/rme_kernel.c ****     return 0;
 17867              		.loc 1 7158 12
 17868 010c 0030A0E3 		mov	r3, #0
 17869              	.L1152:
7159:../../Source/Kernel/rme_kernel.c **** }
 17870              		.loc 1 7159 1
 17871 0110 0300A0E1 		mov	r0, r3
 17872 0114 04D04BE2 		sub	sp, fp, #4
 17873              		.cfi_def_cfa 13, 8
 17874              		@ sp needed
 17875 0118 0088BDE8 		pop	{fp, pc}
 17876              		.cfi_endproc
 17877              	.LFE69:
 17879              		.section	.text._RME_Sig_Snd,"ax",%progbits
 17880              		.align	2
 17881              		.syntax unified
 17882              		.arm
 17884              	_RME_Sig_Snd:
 17885              	.LFB70:
7160:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_Snd ************************************************/
7161:../../Source/Kernel/rme_kernel.c **** 
7162:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Snd ******************************************************
7163:../../Source/Kernel/rme_kernel.c **** Description : Try to send to a signal endpoint. This system call can cause
7164:../../Source/Kernel/rme_kernel.c ****               a potential context switch.
7165:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7166:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7167:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7168:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7169:../../Source/Kernel/rme_kernel.c **** Output      : None.
7170:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7171:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7172:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Snd(struct RME_Cap_Cpt* Cpt, 
7173:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 441


7174:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
7175:../../Source/Kernel/rme_kernel.c **** {
 17886              		.loc 1 7175 1
 17887              		.cfi_startproc
 17888              		@ args = 0, pretend = 0, frame = 40
 17889              		@ frame_needed = 1, uses_anonymous_args = 0
 17890 0000 00482DE9 		push	{fp, lr}
 17891              		.cfi_def_cfa_offset 8
 17892              		.cfi_offset 11, -8
 17893              		.cfi_offset 14, -4
 17894 0004 04B08DE2 		add	fp, sp, #4
 17895              		.cfi_def_cfa 11, 4
 17896 0008 28D04DE2 		sub	sp, sp, #40
 17897 000c 20000BE5 		str	r0, [fp, #-32]
 17898 0010 24100BE5 		str	r1, [fp, #-36]
 17899 0014 28200BE5 		str	r2, [fp, #-40]
7176:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7177:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7178:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Rcv;
7179:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7180:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7181:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7182:../../Source/Kernel/rme_kernel.c ****     
7183:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7184:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 17900              		.loc 1 7184 5
 17901 0018 28301BE5 		ldr	r3, [fp, #-40]
 17902 001c 803003E2 		and	r3, r3, #128
 17903 0020 000053E3 		cmp	r3, #0
 17904 0024 1C00001A 		bne	.L1154
 17905              		.loc 1 7184 5 is_stmt 0 discriminator 1
 17906 0028 20301BE5 		ldr	r3, [fp, #-32]
 17907 002c 142093E5 		ldr	r2, [r3, #20]
 17908 0030 28301BE5 		ldr	r3, [fp, #-40]
 17909 0034 030052E1 		cmp	r2, r3
 17910 0038 0100008A 		bhi	.L1155
 17911              		.loc 1 7184 5 discriminator 3
 17912 003c 0230E0E3 		mvn	r3, #2
 17913              		.loc 1 7184 5
 17914 0040 AF0000EA 		b	.L1156
 17915              	.L1155:
 17916              		.loc 1 7184 5 discriminator 4
 17917 0044 28301BE5 		ldr	r3, [fp, #-40]
 17918 0048 8322A0E1 		lsl	r2, r3, #5
 17919 004c 20301BE5 		ldr	r3, [fp, #-32]
 17920 0050 0C3093E5 		ldr	r3, [r3, #12]
 17921 0054 033082E0 		add	r3, r2, r3
 17922 0058 08300BE5 		str	r3, [fp, #-8]
 17923 005c 08301BE5 		ldr	r3, [fp, #-8]
 17924 0060 0300A0E1 		mov	r0, r3
 17925 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17926 0068 10000BE5 		str	r0, [fp, #-16]
 17927              		.loc 1 7184 5 discriminator 1
 17928 006c 10301BE5 		ldr	r3, [fp, #-16]
 17929 0070 FF3803E2 		and	r3, r3, #16711680
 17930 0074 020853E3 		cmp	r3, #131072
 17931 0078 0100001A 		bne	.L1157
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 442


 17932              		.loc 1 7184 5 discriminator 5
 17933 007c 0830E0E3 		mvn	r3, #8
 17934              		.loc 1 7184 5
 17935 0080 9F0000EA 		b	.L1156
 17936              	.L1157:
 17937              		.loc 1 7184 5 discriminator 6
 17938 0084 10301BE5 		ldr	r3, [fp, #-16]
 17939 0088 233CA0E1 		lsr	r3, r3, #24
 17940 008c 080053E3 		cmp	r3, #8
 17941 0090 3F00000A 		beq	.L1158
 17942              		.loc 1 7184 5 discriminator 7
 17943 0094 0130E0E3 		mvn	r3, #1
 17944              		.loc 1 7184 5
 17945 0098 990000EA 		b	.L1156
 17946              	.L1154:
 17947              		.loc 1 7184 5 discriminator 2
 17948 009c 28301BE5 		ldr	r3, [fp, #-40]
 17949 00a0 2324A0E1 		lsr	r2, r3, #8
 17950 00a4 20301BE5 		ldr	r3, [fp, #-32]
 17951 00a8 143093E5 		ldr	r3, [r3, #20]
 17952 00ac 030052E1 		cmp	r2, r3
 17953 00b0 0100003A 		bcc	.L1159
 17954              		.loc 1 7184 5 discriminator 8
 17955 00b4 0230E0E3 		mvn	r3, #2
 17956              		.loc 1 7184 5
 17957 00b8 910000EA 		b	.L1156
 17958              	.L1159:
 17959              		.loc 1 7184 5 discriminator 9
 17960 00bc 28301BE5 		ldr	r3, [fp, #-40]
 17961 00c0 2334A0E1 		lsr	r3, r3, #8
 17962 00c4 8322A0E1 		lsl	r2, r3, #5
 17963 00c8 20301BE5 		ldr	r3, [fp, #-32]
 17964 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17965 00d0 033082E0 		add	r3, r2, r3
 17966 00d4 08300BE5 		str	r3, [fp, #-8]
 17967 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17968 00dc 0300A0E1 		mov	r0, r3
 17969 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17970 00e4 10000BE5 		str	r0, [fp, #-16]
 17971              		.loc 1 7184 5 discriminator 1
 17972 00e8 10301BE5 		ldr	r3, [fp, #-16]
 17973 00ec FF3803E2 		and	r3, r3, #16711680
 17974 00f0 020853E3 		cmp	r3, #131072
 17975 00f4 0100001A 		bne	.L1160
 17976              		.loc 1 7184 5 discriminator 10
 17977 00f8 0830E0E3 		mvn	r3, #8
 17978              		.loc 1 7184 5
 17979 00fc 800000EA 		b	.L1156
 17980              	.L1160:
 17981              		.loc 1 7184 5 discriminator 11
 17982 0100 10301BE5 		ldr	r3, [fp, #-16]
 17983 0104 233CA0E1 		lsr	r3, r3, #24
 17984 0108 030053E3 		cmp	r3, #3
 17985 010c 0100000A 		beq	.L1161
 17986              		.loc 1 7184 5 discriminator 12
 17987 0110 0130E0E3 		mvn	r3, #1
 17988              		.loc 1 7184 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 443


 17989 0114 7A0000EA 		b	.L1156
 17990              	.L1161:
 17991              		.loc 1 7184 5 discriminator 13
 17992 0118 28301BE5 		ldr	r3, [fp, #-40]
 17993 011c 7F2003E2 		and	r2, r3, #127
 17994 0120 08301BE5 		ldr	r3, [fp, #-8]
 17995 0124 143093E5 		ldr	r3, [r3, #20]
 17996 0128 030052E1 		cmp	r2, r3
 17997 012c 0100003A 		bcc	.L1162
 17998              		.loc 1 7184 5 discriminator 14
 17999 0130 0230E0E3 		mvn	r3, #2
 18000              		.loc 1 7184 5
 18001 0134 720000EA 		b	.L1156
 18002              	.L1162:
 18003              		.loc 1 7184 5 discriminator 15
 18004 0138 28301BE5 		ldr	r3, [fp, #-40]
 18005 013c 7F3003E2 		and	r3, r3, #127
 18006 0140 8322A0E1 		lsl	r2, r3, #5
 18007 0144 08301BE5 		ldr	r3, [fp, #-8]
 18008 0148 0C3093E5 		ldr	r3, [r3, #12]
 18009 014c 033082E0 		add	r3, r2, r3
 18010 0150 08300BE5 		str	r3, [fp, #-8]
 18011 0154 08301BE5 		ldr	r3, [fp, #-8]
 18012 0158 0300A0E1 		mov	r0, r3
 18013 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18014 0160 10000BE5 		str	r0, [fp, #-16]
 18015              		.loc 1 7184 5 discriminator 1
 18016 0164 10301BE5 		ldr	r3, [fp, #-16]
 18017 0168 FF3803E2 		and	r3, r3, #16711680
 18018 016c 020853E3 		cmp	r3, #131072
 18019 0170 0100001A 		bne	.L1163
 18020              		.loc 1 7184 5 discriminator 16
 18021 0174 0830E0E3 		mvn	r3, #8
 18022              		.loc 1 7184 5
 18023 0178 610000EA 		b	.L1156
 18024              	.L1163:
 18025              		.loc 1 7184 5 discriminator 17
 18026 017c 10301BE5 		ldr	r3, [fp, #-16]
 18027 0180 233CA0E1 		lsr	r3, r3, #24
 18028 0184 080053E3 		cmp	r3, #8
 18029 0188 0100000A 		beq	.L1158
 18030              		.loc 1 7184 5 discriminator 18
 18031 018c 0130E0E3 		mvn	r3, #1
 18032              		.loc 1 7184 5
 18033 0190 5B0000EA 		b	.L1156
 18034              	.L1158:
7185:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7186:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7187:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SND);
 18035              		.loc 1 7187 5 is_stmt 1
 18036 0194 08301BE5 		ldr	r3, [fp, #-8]
 18037 0198 083093E5 		ldr	r3, [r3, #8]
 18038 019c 013003E2 		and	r3, r3, #1
 18039 01a0 000053E3 		cmp	r3, #0
 18040 01a4 0100001A 		bne	.L1164
 18041              		.loc 1 7187 5 is_stmt 0 discriminator 1
 18042 01a8 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 444


 18043              		.loc 1 7187 5
 18044 01ac 540000EA 		b	.L1156
 18045              	.L1164:
7188:../../Source/Kernel/rme_kernel.c ****     
7189:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18046              		.loc 1 7189 10 is_stmt 1
 18047 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18048 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18049 01b8 14300BE5 		str	r3, [fp, #-20]
7190:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18050              		.loc 1 7190 14
 18051 01bc 08301BE5 		ldr	r3, [fp, #-8]
 18052 01c0 003093E5 		ldr	r3, [r3]
 18053 01c4 7330FFE6 		uxth	r3, r3
 18054 01c8 000053E3 		cmp	r3, #0
 18055 01cc 0200000A 		beq	.L1165
 18056              		.loc 1 7190 14 is_stmt 0 discriminator 1
 18057 01d0 08301BE5 		ldr	r3, [fp, #-8]
 18058 01d4 043093E5 		ldr	r3, [r3, #4]
 18059 01d8 000000EA 		b	.L1166
 18060              	.L1165:
 18061              		.loc 1 7190 14 discriminator 2
 18062 01dc 08301BE5 		ldr	r3, [fp, #-8]
 18063              	.L1166:
 18064              		.loc 1 7190 13 is_stmt 1 discriminator 4
 18065 01e0 18300BE5 		str	r3, [fp, #-24]
7191:../../Source/Kernel/rme_kernel.c ****     Thd_Rcv=Sig_Root->Thd;
 18066              		.loc 1 7191 12
 18067 01e4 18301BE5 		ldr	r3, [fp, #-24]
 18068 01e8 183093E5 		ldr	r3, [r3, #24]
 18069 01ec 1C300BE5 		str	r3, [fp, #-28]
7192:../../Source/Kernel/rme_kernel.c **** 
7193:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7194:../../Source/Kernel/rme_kernel.c ****     if(Thd_Rcv!=RME_NULL)
 18070              		.loc 1 7194 7
 18071 01f0 1C301BE5 		ldr	r3, [fp, #-28]
 18072 01f4 000053E3 		cmp	r3, #0
 18073 01f8 0A00000A 		beq	.L1167
7195:../../Source/Kernel/rme_kernel.c ****     {
7196:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7197:../../Source/Kernel/rme_kernel.c **** 
7198:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Local==Local)
 18074              		.loc 1 7198 26
 18075 01fc 1C301BE5 		ldr	r3, [fp, #-28]
 18076 0200 143093E5 		ldr	r3, [r3, #20]
 18077              		.loc 1 7198 11
 18078 0204 14201BE5 		ldr	r2, [fp, #-20]
 18079 0208 030052E1 		cmp	r2, r3
 18080 020c 0200001A 		bne	.L1168
7199:../../Source/Kernel/rme_kernel.c ****         {
7200:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7201:../../Source/Kernel/rme_kernel.c **** 
7202:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 18081              		.loc 1 7202 20
 18082 0210 0130A0E3 		mov	r3, #1
 18083 0214 0C300BE5 		str	r3, [fp, #-12]
 18084 0218 040000EA 		b	.L1169
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 445


 18085              	.L1168:
7203:../../Source/Kernel/rme_kernel.c ****         }
7204:../../Source/Kernel/rme_kernel.c ****         else
7205:../../Source/Kernel/rme_kernel.c ****         {
7206:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7207:../../Source/Kernel/rme_kernel.c **** 
7208:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 18086              		.loc 1 7208 20
 18087 021c 0030A0E3 		mov	r3, #0
 18088 0220 0C300BE5 		str	r3, [fp, #-12]
 18089 0224 010000EA 		b	.L1169
 18090              	.L1167:
7209:../../Source/Kernel/rme_kernel.c ****         }
7210:../../Source/Kernel/rme_kernel.c ****     }
7211:../../Source/Kernel/rme_kernel.c ****     else
7212:../../Source/Kernel/rme_kernel.c ****     {
7213:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7214:../../Source/Kernel/rme_kernel.c **** 
7215:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 18091              		.loc 1 7215 16
 18092 0228 0030A0E3 		mov	r3, #0
 18093 022c 0C300BE5 		str	r3, [fp, #-12]
 18094              	.L1169:
7216:../../Source/Kernel/rme_kernel.c ****     }
7217:../../Source/Kernel/rme_kernel.c ****     
7218:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 18095              		.loc 1 7218 7
 18096 0230 0C301BE5 		ldr	r3, [fp, #-12]
 18097 0234 000053E3 		cmp	r3, #0
 18098 0238 1D00000A 		beq	.L1170
7219:../../Source/Kernel/rme_kernel.c ****     {
7220:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7221:../../Source/Kernel/rme_kernel.c **** 
7222:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7223:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18099              		.loc 1 7223 9
 18100 023c 0010A0E3 		mov	r1, #0
 18101 0240 24001BE5 		ldr	r0, [fp, #-36]
 18102 0244 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7224:../../Source/Kernel/rme_kernel.c ****         
7225:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7226:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7227:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7228:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7229:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Rcv->Ctx.Reg->Reg),1);
 18103              		.loc 1 7229 44
 18104 0248 1C301BE5 		ldr	r3, [fp, #-28]
 18105 024c 483093E5 		ldr	r3, [r3, #72]
 18106              		.loc 1 7229 9
 18107 0250 0110A0E3 		mov	r1, #1
 18108 0254 0300A0E1 		mov	r0, r3
 18109 0258 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7230:../../Source/Kernel/rme_kernel.c ****         
7231:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7232:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Slice!=0U)
 18110              		.loc 1 7232 26
 18111 025c 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 446


 18112 0260 183093E5 		ldr	r3, [r3, #24]
 18113              		.loc 1 7232 11
 18114 0264 000053E3 		cmp	r3, #0
 18115 0268 0500000A 		beq	.L1171
7233:../../Source/Kernel/rme_kernel.c ****         {
7234:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7235:../../Source/Kernel/rme_kernel.c **** 
7236:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7237:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_READY;
 18116              		.loc 1 7237 33
 18117 026c 1C301BE5 		ldr	r3, [fp, #-28]
 18118 0270 0020A0E3 		mov	r2, #0
 18119 0274 1C2083E5 		str	r2, [r3, #28]
7238:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Rcv);
 18120              		.loc 1 7238 13
 18121 0278 1C001BE5 		ldr	r0, [fp, #-28]
 18122 027c FEFFFFEB 		bl	_RME_Run_Ins
 18123 0280 040000EA 		b	.L1172
 18124              	.L1171:
7239:../../Source/Kernel/rme_kernel.c ****         }
7240:../../Source/Kernel/rme_kernel.c ****         else
7241:../../Source/Kernel/rme_kernel.c ****         {
7242:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7243:../../Source/Kernel/rme_kernel.c **** 
7244:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7245:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_TIMEOUT;
 18125              		.loc 1 7245 33
 18126 0284 1C301BE5 		ldr	r3, [fp, #-28]
 18127 0288 0220A0E3 		mov	r2, #2
 18128 028c 1C2083E5 		str	r2, [r3, #28]
7246:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Rcv);
 18129              		.loc 1 7246 13
 18130 0290 1C001BE5 		ldr	r0, [fp, #-28]
 18131 0294 FEFFFFEB 		bl	_RME_Run_Notif
 18132              	.L1172:
7247:../../Source/Kernel/rme_kernel.c ****         }
7248:../../Source/Kernel/rme_kernel.c ****         
7249:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread to run */
7250:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 18133              		.loc 1 7250 9
 18134 0298 14101BE5 		ldr	r1, [fp, #-20]
 18135 029c 24001BE5 		ldr	r0, [fp, #-36]
 18136 02a0 FEFFFFEB 		bl	_RME_Kern_High
7251:../../Source/Kernel/rme_kernel.c ****         
7252:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7253:../../Source/Kernel/rme_kernel.c ****         Sig_Root->Thd=RME_NULL;
 18137              		.loc 1 7253 22
 18138 02a4 18301BE5 		ldr	r3, [fp, #-24]
 18139 02a8 0020A0E3 		mov	r2, #0
 18140 02ac 182083E5 		str	r2, [r3, #24]
 18141 02b0 120000EA 		b	.L1173
 18142              	.L1170:
7254:../../Source/Kernel/rme_kernel.c ****     }
7255:../../Source/Kernel/rme_kernel.c ****     else
7256:../../Source/Kernel/rme_kernel.c ****     {
7257:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7258:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 447


7259:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, we just faa and return */
7260:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Sig_Root->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 18143              		.loc 1 7260 12
 18144 02b4 18301BE5 		ldr	r3, [fp, #-24]
 18145 02b8 143083E2 		add	r3, r3, #20
 18146 02bc 0110A0E3 		mov	r1, #1
 18147 02c0 0300A0E1 		mov	r0, r3
 18148 02c4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 18149 02c8 0030A0E1 		mov	r3, r0
 18150              		.loc 1 7260 11 discriminator 1
 18151 02cc 0A0173E3 		cmn	r3, #-2147483646
 18152 02d0 0700009A 		bls	.L1174
7261:../../Source/Kernel/rme_kernel.c ****         {
7262:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7263:../../Source/Kernel/rme_kernel.c **** 
7264:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Sig_Root->Sig_Num),-1);
 18153              		.loc 1 7264 13
 18154 02d4 18301BE5 		ldr	r3, [fp, #-24]
 18155 02d8 143083E2 		add	r3, r3, #20
 18156 02dc 0010E0E3 		mvn	r1, #0
 18157 02e0 0300A0E1 		mov	r0, r3
 18158 02e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7265:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 18159              		.loc 1 7265 20
 18160 02e8 D13E0FE3 		movw	r3, #65233
 18161 02ec FF3F4FE3 		movt	r3, 65535
 18162 02f0 030000EA 		b	.L1156
 18163              	.L1174:
7266:../../Source/Kernel/rme_kernel.c ****         }
7267:../../Source/Kernel/rme_kernel.c ****         else
7268:../../Source/Kernel/rme_kernel.c ****         {
7269:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7270:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7271:../../Source/Kernel/rme_kernel.c ****         }
7272:../../Source/Kernel/rme_kernel.c ****         
7273:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7274:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18164              		.loc 1 7274 9
 18165 02f4 0010A0E3 		mov	r1, #0
 18166 02f8 24001BE5 		ldr	r0, [fp, #-36]
 18167 02fc FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18168              	.L1173:
7275:../../Source/Kernel/rme_kernel.c ****     }
7276:../../Source/Kernel/rme_kernel.c **** 
7277:../../Source/Kernel/rme_kernel.c ****     return 0;
 18169              		.loc 1 7277 12
 18170 0300 0030A0E3 		mov	r3, #0
 18171              	.L1156:
7278:../../Source/Kernel/rme_kernel.c **** }
 18172              		.loc 1 7278 1
 18173 0304 0300A0E1 		mov	r0, r3
 18174 0308 04D04BE2 		sub	sp, fp, #4
 18175              		.cfi_def_cfa 13, 8
 18176              		@ sp needed
 18177 030c 0088BDE8 		pop	{fp, pc}
 18178              		.cfi_endproc
 18179              	.LFE70:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 448


 18181              		.section	.text._RME_Sig_Rcv,"ax",%progbits
 18182              		.align	2
 18183              		.syntax unified
 18184              		.arm
 18186              	_RME_Sig_Rcv:
 18187              	.LFB71:
7279:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Snd *************************************************/
7280:../../Source/Kernel/rme_kernel.c **** 
7281:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Rcv ******************************************************
7282:../../Source/Kernel/rme_kernel.c **** Description : Try to receive from a signal endpoint. The rules for signal
7283:../../Source/Kernel/rme_kernel.c ****               endpoint receive is:
7284:../../Source/Kernel/rme_kernel.c ****               1.If a receive endpoint have many send endpoints, everyone can
7285:../../Source/Kernel/rme_kernel.c ****                 send to it, and sending to it will increase the count by 1.
7286:../../Source/Kernel/rme_kernel.c ****               2.If some thread blocks on a receive endpoint, the wakeup is only
7287:../../Source/Kernel/rme_kernel.c ****                 possible from the same core that thread is on.
7288:../../Source/Kernel/rme_kernel.c ****               3.It is not recommended to let 2 cores operate on the rcv endpoint
7289:../../Source/Kernel/rme_kernel.c ****                 simutaneously.
7290:../../Source/Kernel/rme_kernel.c ****               This system call can potentially trigger a context switch.
7291:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7292:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
7293:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7294:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7295:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Option - The receive option.
7296:../../Source/Kernel/rme_kernel.c **** Output      : None.
7297:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, a non-negative number containing the 
7298:../../Source/Kernel/rme_kernel.c ****                           number of signals received; or an error code.
7299:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7300:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Rcv(struct RME_Cap_Cpt* Cpt,
7301:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7302:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig,
7303:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Option)
7304:../../Source/Kernel/rme_kernel.c **** {
 18188              		.loc 1 7304 1
 18189              		.cfi_startproc
 18190              		@ args = 0, pretend = 0, frame = 40
 18191              		@ frame_needed = 1, uses_anonymous_args = 0
 18192 0000 00482DE9 		push	{fp, lr}
 18193              		.cfi_def_cfa_offset 8
 18194              		.cfi_offset 11, -8
 18195              		.cfi_offset 14, -4
 18196 0004 04B08DE2 		add	fp, sp, #4
 18197              		.cfi_def_cfa 11, 4
 18198 0008 28D04DE2 		sub	sp, sp, #40
 18199 000c 20000BE5 		str	r0, [fp, #-32]
 18200 0010 24100BE5 		str	r1, [fp, #-36]
 18201 0014 28200BE5 		str	r2, [fp, #-40]
 18202 0018 2C300BE5 		str	r3, [fp, #-44]
7305:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7306:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7307:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7308:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7309:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Value;
7310:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7311:../../Source/Kernel/rme_kernel.c ****     
7312:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7313:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 18203              		.loc 1 7313 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 449


 18204 001c 28301BE5 		ldr	r3, [fp, #-40]
 18205 0020 803003E2 		and	r3, r3, #128
 18206 0024 000053E3 		cmp	r3, #0
 18207 0028 1C00001A 		bne	.L1176
 18208              		.loc 1 7313 5 is_stmt 0 discriminator 1
 18209 002c 20301BE5 		ldr	r3, [fp, #-32]
 18210 0030 142093E5 		ldr	r2, [r3, #20]
 18211 0034 28301BE5 		ldr	r3, [fp, #-40]
 18212 0038 030052E1 		cmp	r2, r3
 18213 003c 0100008A 		bhi	.L1177
 18214              		.loc 1 7313 5 discriminator 3
 18215 0040 0230E0E3 		mvn	r3, #2
 18216              		.loc 1 7313 5
 18217 0044 F60000EA 		b	.L1178
 18218              	.L1177:
 18219              		.loc 1 7313 5 discriminator 4
 18220 0048 28301BE5 		ldr	r3, [fp, #-40]
 18221 004c 8322A0E1 		lsl	r2, r3, #5
 18222 0050 20301BE5 		ldr	r3, [fp, #-32]
 18223 0054 0C3093E5 		ldr	r3, [r3, #12]
 18224 0058 033082E0 		add	r3, r2, r3
 18225 005c 08300BE5 		str	r3, [fp, #-8]
 18226 0060 08301BE5 		ldr	r3, [fp, #-8]
 18227 0064 0300A0E1 		mov	r0, r3
 18228 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18229 006c 0C000BE5 		str	r0, [fp, #-12]
 18230              		.loc 1 7313 5 discriminator 1
 18231 0070 0C301BE5 		ldr	r3, [fp, #-12]
 18232 0074 FF3803E2 		and	r3, r3, #16711680
 18233 0078 020853E3 		cmp	r3, #131072
 18234 007c 0100001A 		bne	.L1179
 18235              		.loc 1 7313 5 discriminator 5
 18236 0080 0830E0E3 		mvn	r3, #8
 18237              		.loc 1 7313 5
 18238 0084 E60000EA 		b	.L1178
 18239              	.L1179:
 18240              		.loc 1 7313 5 discriminator 6
 18241 0088 0C301BE5 		ldr	r3, [fp, #-12]
 18242 008c 233CA0E1 		lsr	r3, r3, #24
 18243 0090 080053E3 		cmp	r3, #8
 18244 0094 3F00000A 		beq	.L1180
 18245              		.loc 1 7313 5 discriminator 7
 18246 0098 0130E0E3 		mvn	r3, #1
 18247              		.loc 1 7313 5
 18248 009c E00000EA 		b	.L1178
 18249              	.L1176:
 18250              		.loc 1 7313 5 discriminator 2
 18251 00a0 28301BE5 		ldr	r3, [fp, #-40]
 18252 00a4 2324A0E1 		lsr	r2, r3, #8
 18253 00a8 20301BE5 		ldr	r3, [fp, #-32]
 18254 00ac 143093E5 		ldr	r3, [r3, #20]
 18255 00b0 030052E1 		cmp	r2, r3
 18256 00b4 0100003A 		bcc	.L1181
 18257              		.loc 1 7313 5 discriminator 8
 18258 00b8 0230E0E3 		mvn	r3, #2
 18259              		.loc 1 7313 5
 18260 00bc D80000EA 		b	.L1178
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 450


 18261              	.L1181:
 18262              		.loc 1 7313 5 discriminator 9
 18263 00c0 28301BE5 		ldr	r3, [fp, #-40]
 18264 00c4 2334A0E1 		lsr	r3, r3, #8
 18265 00c8 8322A0E1 		lsl	r2, r3, #5
 18266 00cc 20301BE5 		ldr	r3, [fp, #-32]
 18267 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18268 00d4 033082E0 		add	r3, r2, r3
 18269 00d8 08300BE5 		str	r3, [fp, #-8]
 18270 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18271 00e0 0300A0E1 		mov	r0, r3
 18272 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18273 00e8 0C000BE5 		str	r0, [fp, #-12]
 18274              		.loc 1 7313 5 discriminator 1
 18275 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 18276 00f0 FF3803E2 		and	r3, r3, #16711680
 18277 00f4 020853E3 		cmp	r3, #131072
 18278 00f8 0100001A 		bne	.L1182
 18279              		.loc 1 7313 5 discriminator 10
 18280 00fc 0830E0E3 		mvn	r3, #8
 18281              		.loc 1 7313 5
 18282 0100 C70000EA 		b	.L1178
 18283              	.L1182:
 18284              		.loc 1 7313 5 discriminator 11
 18285 0104 0C301BE5 		ldr	r3, [fp, #-12]
 18286 0108 233CA0E1 		lsr	r3, r3, #24
 18287 010c 030053E3 		cmp	r3, #3
 18288 0110 0100000A 		beq	.L1183
 18289              		.loc 1 7313 5 discriminator 12
 18290 0114 0130E0E3 		mvn	r3, #1
 18291              		.loc 1 7313 5
 18292 0118 C10000EA 		b	.L1178
 18293              	.L1183:
 18294              		.loc 1 7313 5 discriminator 13
 18295 011c 28301BE5 		ldr	r3, [fp, #-40]
 18296 0120 7F2003E2 		and	r2, r3, #127
 18297 0124 08301BE5 		ldr	r3, [fp, #-8]
 18298 0128 143093E5 		ldr	r3, [r3, #20]
 18299 012c 030052E1 		cmp	r2, r3
 18300 0130 0100003A 		bcc	.L1184
 18301              		.loc 1 7313 5 discriminator 14
 18302 0134 0230E0E3 		mvn	r3, #2
 18303              		.loc 1 7313 5
 18304 0138 B90000EA 		b	.L1178
 18305              	.L1184:
 18306              		.loc 1 7313 5 discriminator 15
 18307 013c 28301BE5 		ldr	r3, [fp, #-40]
 18308 0140 7F3003E2 		and	r3, r3, #127
 18309 0144 8322A0E1 		lsl	r2, r3, #5
 18310 0148 08301BE5 		ldr	r3, [fp, #-8]
 18311 014c 0C3093E5 		ldr	r3, [r3, #12]
 18312 0150 033082E0 		add	r3, r2, r3
 18313 0154 08300BE5 		str	r3, [fp, #-8]
 18314 0158 08301BE5 		ldr	r3, [fp, #-8]
 18315 015c 0300A0E1 		mov	r0, r3
 18316 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18317 0164 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 451


 18318              		.loc 1 7313 5 discriminator 1
 18319 0168 0C301BE5 		ldr	r3, [fp, #-12]
 18320 016c FF3803E2 		and	r3, r3, #16711680
 18321 0170 020853E3 		cmp	r3, #131072
 18322 0174 0100001A 		bne	.L1185
 18323              		.loc 1 7313 5 discriminator 16
 18324 0178 0830E0E3 		mvn	r3, #8
 18325              		.loc 1 7313 5
 18326 017c A80000EA 		b	.L1178
 18327              	.L1185:
 18328              		.loc 1 7313 5 discriminator 17
 18329 0180 0C301BE5 		ldr	r3, [fp, #-12]
 18330 0184 233CA0E1 		lsr	r3, r3, #24
 18331 0188 080053E3 		cmp	r3, #8
 18332 018c 0100000A 		beq	.L1180
 18333              		.loc 1 7313 5 discriminator 18
 18334 0190 0130E0E3 		mvn	r3, #1
 18335              		.loc 1 7313 5
 18336 0194 A20000EA 		b	.L1178
 18337              	.L1180:
7314:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7315:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7316:../../Source/Kernel/rme_kernel.c ****     switch(Option)
 18338              		.loc 1 7316 5 is_stmt 1
 18339 0198 2C201BE5 		ldr	r2, [fp, #-44]
 18340 019c 8C329FE5 		ldr	r3, .L1217
 18341 01a0 030052E3 		cmp	r2, #3
 18342 01a4 1D00008A 		bhi	.L1186
 18343 01a8 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 18344              	.Lrtx1188:
 18345 01ac 00F020E3 		nop
 18346              		.section	.rodata._RME_Sig_Rcv,"a",%progbits
 18347              		.align	2
 18348              	.L1188:
 18349 0000 B0010000 		.word	.L1191
 18350 0004 CC010000 		.word	.L1190
 18351 0008 E8010000 		.word	.L1189
 18352 000c 04020000 		.word	.L1187
 18353              		.section	.text._RME_Sig_Rcv
 18354              		.p2align 2
 18355              	.L1191:
7317:../../Source/Kernel/rme_kernel.c ****     {
7318:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BS:
7319:../../Source/Kernel/rme_kernel.c ****         {
7320:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7321:../../Source/Kernel/rme_kernel.c **** 
7322:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BS);
 18356              		.loc 1 7322 13
 18357 01b0 08301BE5 		ldr	r3, [fp, #-8]
 18358 01b4 083093E5 		ldr	r3, [r3, #8]
 18359 01b8 023003E2 		and	r3, r3, #2
 18360 01bc 000053E3 		cmp	r3, #0
 18361 01c0 1800001A 		bne	.L1213
 18362              		.loc 1 7322 13 is_stmt 0 discriminator 1
 18363 01c4 0630E0E3 		mvn	r3, #6
 18364              		.loc 1 7322 13
 18365 01c8 950000EA 		b	.L1178
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 452


 18366              	.L1190:
7323:../../Source/Kernel/rme_kernel.c ****             break;
7324:../../Source/Kernel/rme_kernel.c ****         }
7325:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BM:
7326:../../Source/Kernel/rme_kernel.c ****         {
7327:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7328:../../Source/Kernel/rme_kernel.c ****             
7329:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BM);
 18367              		.loc 1 7329 13 is_stmt 1
 18368 01cc 08301BE5 		ldr	r3, [fp, #-8]
 18369 01d0 083093E5 		ldr	r3, [r3, #8]
 18370 01d4 043003E2 		and	r3, r3, #4
 18371 01d8 000053E3 		cmp	r3, #0
 18372 01dc 1300001A 		bne	.L1214
 18373              		.loc 1 7329 13 is_stmt 0 discriminator 1
 18374 01e0 0630E0E3 		mvn	r3, #6
 18375              		.loc 1 7329 13
 18376 01e4 8E0000EA 		b	.L1178
 18377              	.L1189:
7330:../../Source/Kernel/rme_kernel.c ****             break;
7331:../../Source/Kernel/rme_kernel.c ****         }
7332:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NS:
7333:../../Source/Kernel/rme_kernel.c ****         {
7334:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7335:../../Source/Kernel/rme_kernel.c ****             
7336:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NS);
 18378              		.loc 1 7336 13 is_stmt 1
 18379 01e8 08301BE5 		ldr	r3, [fp, #-8]
 18380 01ec 083093E5 		ldr	r3, [r3, #8]
 18381 01f0 083003E2 		and	r3, r3, #8
 18382 01f4 000053E3 		cmp	r3, #0
 18383 01f8 0E00001A 		bne	.L1215
 18384              		.loc 1 7336 13 is_stmt 0 discriminator 1
 18385 01fc 0630E0E3 		mvn	r3, #6
 18386              		.loc 1 7336 13
 18387 0200 870000EA 		b	.L1178
 18388              	.L1187:
7337:../../Source/Kernel/rme_kernel.c ****             break;
7338:../../Source/Kernel/rme_kernel.c ****         }
7339:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NM:
7340:../../Source/Kernel/rme_kernel.c ****         {
7341:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7342:../../Source/Kernel/rme_kernel.c ****             
7343:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NM);
 18389              		.loc 1 7343 13 is_stmt 1
 18390 0204 08301BE5 		ldr	r3, [fp, #-8]
 18391 0208 083093E5 		ldr	r3, [r3, #8]
 18392 020c 103003E2 		and	r3, r3, #16
 18393 0210 000053E3 		cmp	r3, #0
 18394 0214 0900001A 		bne	.L1216
 18395              		.loc 1 7343 13 is_stmt 0 discriminator 1
 18396 0218 0630E0E3 		mvn	r3, #6
 18397              		.loc 1 7343 13
 18398 021c 800000EA 		b	.L1178
 18399              	.L1186:
7344:../../Source/Kernel/rme_kernel.c ****             break;
7345:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 453


7346:../../Source/Kernel/rme_kernel.c ****         default:
7347:../../Source/Kernel/rme_kernel.c ****         {
7348:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7349:../../Source/Kernel/rme_kernel.c ****             
7350:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_ACT;
 18400              		.loc 1 7350 20 is_stmt 1
 18401 0220 4B3FE0E3 		mvn	r3, #300
 18402 0224 7E0000EA 		b	.L1178
 18403              	.L1213:
7323:../../Source/Kernel/rme_kernel.c ****         }
 18404              		.loc 1 7323 13
 18405 0228 00F020E3 		nop
 18406 022c 040000EA 		b	.L1193
 18407              	.L1214:
7330:../../Source/Kernel/rme_kernel.c ****         }
 18408              		.loc 1 7330 13
 18409 0230 00F020E3 		nop
 18410 0234 020000EA 		b	.L1193
 18411              	.L1215:
7337:../../Source/Kernel/rme_kernel.c ****         }
 18412              		.loc 1 7337 13
 18413 0238 00F020E3 		nop
 18414 023c 000000EA 		b	.L1193
 18415              	.L1216:
7344:../../Source/Kernel/rme_kernel.c ****         }
 18416              		.loc 1 7344 13
 18417 0240 00F020E3 		nop
 18418              	.L1193:
7351:../../Source/Kernel/rme_kernel.c ****         }
7352:../../Source/Kernel/rme_kernel.c ****     }
7353:../../Source/Kernel/rme_kernel.c ****     
7354:../../Source/Kernel/rme_kernel.c ****     /* Convert to root cap */
7355:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18419              		.loc 1 7355 14
 18420 0244 08301BE5 		ldr	r3, [fp, #-8]
 18421 0248 003093E5 		ldr	r3, [r3]
 18422 024c 7330FFE6 		uxth	r3, r3
 18423 0250 000053E3 		cmp	r3, #0
 18424 0254 0200000A 		beq	.L1197
 18425              		.loc 1 7355 14 is_stmt 0 discriminator 1
 18426 0258 08301BE5 		ldr	r3, [fp, #-8]
 18427 025c 043093E5 		ldr	r3, [r3, #4]
 18428 0260 000000EA 		b	.L1198
 18429              	.L1197:
 18430              		.loc 1 7355 14 discriminator 2
 18431 0264 08301BE5 		ldr	r3, [fp, #-8]
 18432              	.L1198:
 18433              		.loc 1 7355 13 is_stmt 1 discriminator 4
 18434 0268 10300BE5 		str	r3, [fp, #-16]
7356:../../Source/Kernel/rme_kernel.c ****     
7357:../../Source/Kernel/rme_kernel.c ****     /* See if we can receive on that endpoint - if someone blocks on it, we 
7358:../../Source/Kernel/rme_kernel.c ****      * must wait for it to unblock before we can proceed. */
7359:../../Source/Kernel/rme_kernel.c ****     if(Sig_Root->Thd!=RME_NULL)
 18435              		.loc 1 7359 16
 18436 026c 10301BE5 		ldr	r3, [fp, #-16]
 18437 0270 183093E5 		ldr	r3, [r3, #24]
 18438              		.loc 1 7359 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 454


 18439 0274 000053E3 		cmp	r3, #0
 18440 0278 0100000A 		beq	.L1199
7360:../../Source/Kernel/rme_kernel.c ****     {
7361:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7362:../../Source/Kernel/rme_kernel.c **** 
7363:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 18441              		.loc 1 7363 16
 18442 027c 4B3FE0E3 		mvn	r3, #300
 18443 0280 670000EA 		b	.L1178
 18444              	.L1199:
7364:../../Source/Kernel/rme_kernel.c ****     }
7365:../../Source/Kernel/rme_kernel.c ****     else
7366:../../Source/Kernel/rme_kernel.c ****     {
7367:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7368:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7369:../../Source/Kernel/rme_kernel.c ****     }
7370:../../Source/Kernel/rme_kernel.c ****     
7371:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18445              		.loc 1 7371 10
 18446 0284 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18447 0288 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18448 028c 14300BE5 		str	r3, [fp, #-20]
7372:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 18449              		.loc 1 7372 12
 18450 0290 14301BE5 		ldr	r3, [fp, #-20]
 18451 0294 043093E5 		ldr	r3, [r3, #4]
 18452 0298 18300BE5 		str	r3, [fp, #-24]
7373:../../Source/Kernel/rme_kernel.c ****     
7374:../../Source/Kernel/rme_kernel.c ****     /* Check if we trying to let a boot-time thread block on a signal, which is
7375:../../Source/Kernel/rme_kernel.c ****      * disallowed. Additionally, if the current thread have no timeslice left
7376:../../Source/Kernel/rme_kernel.c ****      * (which shouldn't happen under any circumstances), we assert and die. */
7377:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_Cur->Sched.Slice!=0U);
 18453              		.loc 1 7377 5
 18454 029c 18301BE5 		ldr	r3, [fp, #-24]
 18455 02a0 183093E5 		ldr	r3, [r3, #24]
 18456 02a4 000053E3 		cmp	r3, #0
 18457 02a8 0800001A 		bne	.L1200
 18458              		.loc 1 7377 5 is_stmt 0 discriminator 1
 18459 02ac 003000E3 		movw	r3, #:lower16:.LC2
 18460 02b0 003040E3 		movt	r3, #:upper16:.LC2
 18461 02b4 002000E3 		movw	r2, #:lower16:.LC3
 18462 02b8 002040E3 		movt	r2, #:upper16:.LC3
 18463 02bc D11C01E3 		movw	r1, #7377
 18464 02c0 000000E3 		movw	r0, #:lower16:.LC4
 18465 02c4 000040E3 		movt	r0, #:upper16:.LC4
 18466 02c8 FEFFFFEB 		bl	RME_Log
 18467              	.L1201:
 18468              		.loc 1 7377 5
 18469 02cc FEFFFFEA 		b	.L1201
 18470              	.L1200:
7378:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 18471              		.loc 1 7378 22 is_stmt 1
 18472 02d0 18301BE5 		ldr	r3, [fp, #-24]
 18473 02d4 183093E5 		ldr	r3, [r3, #24]
 18474              		.loc 1 7378 7
 18475 02d8 060173E3 		cmn	r3, #-2147483647
 18476 02dc 0200001A 		bne	.L1202
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 455


7379:../../Source/Kernel/rme_kernel.c ****     {
7380:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7381:../../Source/Kernel/rme_kernel.c **** 
7382:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_BOOT;
 18477              		.loc 1 7382 16
 18478 02e0 CD3E0FE3 		movw	r3, #65229
 18479 02e4 FF3F4FE3 		movt	r3, 65535
 18480 02e8 4D0000EA 		b	.L1178
 18481              	.L1202:
7383:../../Source/Kernel/rme_kernel.c ****     }
7384:../../Source/Kernel/rme_kernel.c ****     else
7385:../../Source/Kernel/rme_kernel.c ****     {
7386:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7387:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7388:../../Source/Kernel/rme_kernel.c ****     }
7389:../../Source/Kernel/rme_kernel.c **** 
7390:../../Source/Kernel/rme_kernel.c ****     /* Check if there are signals available */
7391:../../Source/Kernel/rme_kernel.c ****     Old_Value=Sig_Root->Sig_Num;
 18482              		.loc 1 7391 14
 18483 02ec 10301BE5 		ldr	r3, [fp, #-16]
 18484 02f0 143093E5 		ldr	r3, [r3, #20]
 18485 02f4 1C300BE5 		str	r3, [fp, #-28]
7392:../../Source/Kernel/rme_kernel.c ****     if(Old_Value>0U)
 18486              		.loc 1 7392 7
 18487 02f8 1C301BE5 		ldr	r3, [fp, #-28]
 18488 02fc 000053E3 		cmp	r3, #0
 18489 0300 2600000A 		beq	.L1203
7393:../../Source/Kernel/rme_kernel.c ****     {
7394:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7395:../../Source/Kernel/rme_kernel.c **** 
7396:../../Source/Kernel/rme_kernel.c ****         /* Can't use faa, other cores may reduce count to zero in the meantime */
7397:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_NS))
 18490              		.loc 1 7397 11
 18491 0304 2C301BE5 		ldr	r3, [fp, #-44]
 18492 0308 000053E3 		cmp	r3, #0
 18493 030c 0200000A 		beq	.L1204
 18494              		.loc 1 7397 32 discriminator 1
 18495 0310 2C301BE5 		ldr	r3, [fp, #-44]
 18496 0314 020053E3 		cmp	r3, #2
 18497 0318 0F00001A 		bne	.L1205
 18498              	.L1204:
7398:../../Source/Kernel/rme_kernel.c ****         {
7399:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7400:../../Source/Kernel/rme_kernel.c **** 
7401:../../Source/Kernel/rme_kernel.c ****             /* Try to take one */
7402:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18499              		.loc 1 7402 16
 18500 031c 10301BE5 		ldr	r3, [fp, #-16]
 18501 0320 140083E2 		add	r0, r3, #20
 18502 0324 1C301BE5 		ldr	r3, [fp, #-28]
 18503 0328 013043E2 		sub	r3, r3, #1
 18504 032c 0320A0E1 		mov	r2, r3
 18505 0330 1C101BE5 		ldr	r1, [fp, #-28]
 18506 0334 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18507 0338 0030A0E1 		mov	r3, r0
 18508              		.loc 1 7402 15 discriminator 1
 18509 033c 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 456


 18510 0340 0100001A 		bne	.L1206
7403:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7404:../../Source/Kernel/rme_kernel.c ****                              Old_Value-1U)==RME_CASFAIL)
7405:../../Source/Kernel/rme_kernel.c ****             {
7406:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7407:../../Source/Kernel/rme_kernel.c **** 
7408:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18511              		.loc 1 7408 24
 18512 0344 133EE0E3 		mvn	r3, #304
 18513 0348 350000EA 		b	.L1178
 18514              	.L1206:
7409:../../Source/Kernel/rme_kernel.c ****             }
7410:../../Source/Kernel/rme_kernel.c ****             else
7411:../../Source/Kernel/rme_kernel.c ****             {
7412:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7413:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7414:../../Source/Kernel/rme_kernel.c ****             }
7415:../../Source/Kernel/rme_kernel.c ****             
7416:../../Source/Kernel/rme_kernel.c ****             /* We have taken it, now return what we have taken */
7417:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,1);
 18515              		.loc 1 7417 13
 18516 034c 0110A0E3 		mov	r1, #1
 18517 0350 24001BE5 		ldr	r0, [fp, #-36]
 18518 0354 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18519 0358 0E0000EA 		b	.L1207
 18520              	.L1205:
7418:../../Source/Kernel/rme_kernel.c ****         }
7419:../../Source/Kernel/rme_kernel.c ****         else
7420:../../Source/Kernel/rme_kernel.c ****         {
7421:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7422:../../Source/Kernel/rme_kernel.c **** 
7423:../../Source/Kernel/rme_kernel.c ****             /* Try to take all */
7424:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18521              		.loc 1 7424 16
 18522 035c 10301BE5 		ldr	r3, [fp, #-16]
 18523 0360 143083E2 		add	r3, r3, #20
 18524 0364 0020A0E3 		mov	r2, #0
 18525 0368 1C101BE5 		ldr	r1, [fp, #-28]
 18526 036c 0300A0E1 		mov	r0, r3
 18527 0370 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18528 0374 0030A0E1 		mov	r3, r0
 18529              		.loc 1 7424 15 discriminator 1
 18530 0378 000053E3 		cmp	r3, #0
 18531 037c 0100001A 		bne	.L1208
7425:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7426:../../Source/Kernel/rme_kernel.c ****                              0U)==RME_CASFAIL)
7427:../../Source/Kernel/rme_kernel.c ****             {
7428:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7429:../../Source/Kernel/rme_kernel.c **** 
7430:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18532              		.loc 1 7430 24
 18533 0380 133EE0E3 		mvn	r3, #304
 18534 0384 260000EA 		b	.L1178
 18535              	.L1208:
7431:../../Source/Kernel/rme_kernel.c ****             }
7432:../../Source/Kernel/rme_kernel.c ****             else
7433:../../Source/Kernel/rme_kernel.c ****             {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 457


7434:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7435:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7436:../../Source/Kernel/rme_kernel.c ****             }
7437:../../Source/Kernel/rme_kernel.c ****             
7438:../../Source/Kernel/rme_kernel.c ****             /* We have taken all, now return what we have taken */
7439:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,(rme_ret_t)Old_Value);
 18536              		.loc 1 7439 13
 18537 0388 1C301BE5 		ldr	r3, [fp, #-28]
 18538 038c 0310A0E1 		mov	r1, r3
 18539 0390 24001BE5 		ldr	r0, [fp, #-36]
 18540 0394 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18541              	.L1207:
7440:../../Source/Kernel/rme_kernel.c ****         }
7441:../../Source/Kernel/rme_kernel.c ****         
7442:../../Source/Kernel/rme_kernel.c ****         return 0;
 18542              		.loc 1 7442 16
 18543 0398 0030A0E3 		mov	r3, #0
 18544 039c 200000EA 		b	.L1178
 18545              	.L1203:
7443:../../Source/Kernel/rme_kernel.c ****     }
7444:../../Source/Kernel/rme_kernel.c ****     else
7445:../../Source/Kernel/rme_kernel.c ****     {
7446:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7447:../../Source/Kernel/rme_kernel.c **** 
7448:../../Source/Kernel/rme_kernel.c ****         /* There's no value, try to block */
7449:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_BM))
 18546              		.loc 1 7449 11
 18547 03a0 2C301BE5 		ldr	r3, [fp, #-44]
 18548 03a4 000053E3 		cmp	r3, #0
 18549 03a8 0200000A 		beq	.L1209
 18550              		.loc 1 7449 32 discriminator 1
 18551 03ac 2C301BE5 		ldr	r3, [fp, #-44]
 18552 03b0 010053E3 		cmp	r3, #1
 18553 03b4 1600001A 		bne	.L1210
 18554              	.L1209:
7450:../../Source/Kernel/rme_kernel.c ****         {
7451:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7452:../../Source/Kernel/rme_kernel.c **** 
7453:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP((rme_ptr_t*)&(Sig_Root->Thd),
 18555              		.loc 1 7453 16
 18556 03b8 10301BE5 		ldr	r3, [fp, #-16]
 18557 03bc 183083E2 		add	r3, r3, #24
 18558 03c0 18201BE5 		ldr	r2, [fp, #-24]
 18559 03c4 0010A0E3 		mov	r1, #0
 18560 03c8 0300A0E1 		mov	r0, r3
 18561 03cc FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18562 03d0 0030A0E1 		mov	r3, r0
 18563              		.loc 1 7453 15 discriminator 1
 18564 03d4 000053E3 		cmp	r3, #0
 18565 03d8 0100001A 		bne	.L1211
7454:../../Source/Kernel/rme_kernel.c ****                              RME_NULL,
7455:../../Source/Kernel/rme_kernel.c ****                              (rme_ptr_t)Thd_Cur)==RME_CASFAIL)
7456:../../Source/Kernel/rme_kernel.c ****             {
7457:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7458:../../Source/Kernel/rme_kernel.c **** 
7459:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18566              		.loc 1 7459 24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 458


 18567 03dc 133EE0E3 		mvn	r3, #304
 18568 03e0 0F0000EA 		b	.L1178
 18569              	.L1211:
7460:../../Source/Kernel/rme_kernel.c ****             }
7461:../../Source/Kernel/rme_kernel.c ****             else
7462:../../Source/Kernel/rme_kernel.c ****             {
7463:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7464:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7465:../../Source/Kernel/rme_kernel.c ****             }
7466:../../Source/Kernel/rme_kernel.c **** 
7467:../../Source/Kernel/rme_kernel.c ****             /* Now we block our current thread. No need to set any return value
7468:../../Source/Kernel/rme_kernel.c ****              * to the register set here, because we do not yet know how many
7469:../../Source/Kernel/rme_kernel.c ****              * signals will be there when the thread unblocks. The unblocking
7470:../../Source/Kernel/rme_kernel.c ****              * does not need an option so we don't keep that; we always treat
7471:../../Source/Kernel/rme_kernel.c ****              * it as single receive when we unblock anyway. */
7472:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Signal=Sig_Root;
 18570              		.loc 1 7472 34
 18571 03e4 18301BE5 		ldr	r3, [fp, #-24]
 18572 03e8 10201BE5 		ldr	r2, [fp, #-16]
 18573 03ec 282083E5 		str	r2, [r3, #40]
7473:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_BLOCKED;
 18574              		.loc 1 7473 33
 18575 03f0 18301BE5 		ldr	r3, [fp, #-24]
 18576 03f4 0120A0E3 		mov	r2, #1
 18577 03f8 1C2083E5 		str	r2, [r3, #28]
7474:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 18578              		.loc 1 7474 13
 18579 03fc 18001BE5 		ldr	r0, [fp, #-24]
 18580 0400 FEFFFFEB 		bl	_RME_Run_Del
7475:../../Source/Kernel/rme_kernel.c ****             
7476:../../Source/Kernel/rme_kernel.c ****             /* Pick the highest priority thread to run */
7477:../../Source/Kernel/rme_kernel.c ****             _RME_Kern_High(Reg,Local);
 18581              		.loc 1 7477 13
 18582 0404 14101BE5 		ldr	r1, [fp, #-20]
 18583 0408 24001BE5 		ldr	r0, [fp, #-36]
 18584 040c FEFFFFEB 		bl	_RME_Kern_High
 18585 0410 020000EA 		b	.L1212
 18586              	.L1210:
7478:../../Source/Kernel/rme_kernel.c ****         }
7479:../../Source/Kernel/rme_kernel.c ****         else
7480:../../Source/Kernel/rme_kernel.c ****         {
7481:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7482:../../Source/Kernel/rme_kernel.c **** 
7483:../../Source/Kernel/rme_kernel.c ****             /* We have taken nothing but the system call is successful anyway */
7484:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,0);
 18587              		.loc 1 7484 13
 18588 0414 0010A0E3 		mov	r1, #0
 18589 0418 24001BE5 		ldr	r0, [fp, #-36]
 18590 041c FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18591              	.L1212:
7485:../../Source/Kernel/rme_kernel.c ****         }
7486:../../Source/Kernel/rme_kernel.c ****     }
7487:../../Source/Kernel/rme_kernel.c ****     
7488:../../Source/Kernel/rme_kernel.c ****     return 0;
 18592              		.loc 1 7488 12
 18593 0420 0030A0E3 		mov	r3, #0
 18594              	.L1178:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 459


7489:../../Source/Kernel/rme_kernel.c **** }
 18595              		.loc 1 7489 1
 18596 0424 0300A0E1 		mov	r0, r3
 18597 0428 04D04BE2 		sub	sp, fp, #4
 18598              		.cfi_def_cfa 13, 8
 18599              		@ sp needed
 18600 042c 0088BDE8 		pop	{fp, pc}
 18601              	.L1218:
 18602              		.align	2
 18603              	.L1217:
 18604 0430 00000000 		.word	.L1188
 18605              		.cfi_endproc
 18606              	.LFE71:
 18608              		.section	.text._RME_Inv_Crt,"ax",%progbits
 18609              		.align	2
 18610              		.syntax unified
 18611              		.arm
 18613              	_RME_Inv_Crt:
 18614              	.LFB72:
7490:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Rcv *************************************************/
7491:../../Source/Kernel/rme_kernel.c **** 
7492:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Crt ******************************************************
7493:../../Source/Kernel/rme_kernel.c **** Description : Create an invocation stub.
7494:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7495:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
7496:../../Source/Kernel/rme_kernel.c ****                                   for this process.
7497:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7498:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability slot that you want this newly
7499:../../Source/Kernel/rme_kernel.c ****                                   created invocation capability to be in.
7500:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7501:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
7502:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7503:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
7504:../../Source/Kernel/rme_kernel.c ****                                 invocation port kernel object.
7505:../../Source/Kernel/rme_kernel.c **** Output      : None.
7506:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7507:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7508:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Crt(struct RME_Cap_Cpt* Cpt,
7509:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7510:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
7511:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7512:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
7513:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr)
7514:../../Source/Kernel/rme_kernel.c **** {
 18615              		.loc 1 7514 1
 18616              		.cfi_startproc
 18617              		@ args = 8, pretend = 0, frame = 48
 18618              		@ frame_needed = 1, uses_anonymous_args = 0
 18619 0000 00482DE9 		push	{fp, lr}
 18620              		.cfi_def_cfa_offset 8
 18621              		.cfi_offset 11, -8
 18622              		.cfi_offset 14, -4
 18623 0004 04B08DE2 		add	fp, sp, #4
 18624              		.cfi_def_cfa 11, 4
 18625 0008 30D04DE2 		sub	sp, sp, #48
 18626 000c 28000BE5 		str	r0, [fp, #-40]
 18627 0010 2C100BE5 		str	r1, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 460


 18628 0014 30200BE5 		str	r2, [fp, #-48]
 18629 0018 34300BE5 		str	r3, [fp, #-52]
7515:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7516:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
7517:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
7518:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Crt;
7519:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
7520:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7521:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7522:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
7523:../../Source/Kernel/rme_kernel.c ****     
7524:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
7525:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 18630              		.loc 1 7525 5
 18631 001c 2C301BE5 		ldr	r3, [fp, #-44]
 18632 0020 803003E2 		and	r3, r3, #128
 18633 0024 000053E3 		cmp	r3, #0
 18634 0028 1C00001A 		bne	.L1220
 18635              		.loc 1 7525 5 is_stmt 0 discriminator 1
 18636 002c 28301BE5 		ldr	r3, [fp, #-40]
 18637 0030 142093E5 		ldr	r2, [r3, #20]
 18638 0034 2C301BE5 		ldr	r3, [fp, #-44]
 18639 0038 030052E1 		cmp	r2, r3
 18640 003c 0100008A 		bhi	.L1221
 18641              		.loc 1 7525 5 discriminator 3
 18642 0040 0230E0E3 		mvn	r3, #2
 18643              		.loc 1 7525 5
 18644 0044 950100EA 		b	.L1222
 18645              	.L1221:
 18646              		.loc 1 7525 5 discriminator 4
 18647 0048 2C301BE5 		ldr	r3, [fp, #-44]
 18648 004c 8322A0E1 		lsl	r2, r3, #5
 18649 0050 28301BE5 		ldr	r3, [fp, #-40]
 18650 0054 0C3093E5 		ldr	r3, [r3, #12]
 18651 0058 033082E0 		add	r3, r2, r3
 18652 005c 08300BE5 		str	r3, [fp, #-8]
 18653 0060 08301BE5 		ldr	r3, [fp, #-8]
 18654 0064 0300A0E1 		mov	r0, r3
 18655 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18656 006c 14000BE5 		str	r0, [fp, #-20]
 18657              		.loc 1 7525 5 discriminator 1
 18658 0070 14301BE5 		ldr	r3, [fp, #-20]
 18659 0074 FF3803E2 		and	r3, r3, #16711680
 18660 0078 020853E3 		cmp	r3, #131072
 18661 007c 0100001A 		bne	.L1223
 18662              		.loc 1 7525 5 discriminator 5
 18663 0080 0830E0E3 		mvn	r3, #8
 18664              		.loc 1 7525 5
 18665 0084 850100EA 		b	.L1222
 18666              	.L1223:
 18667              		.loc 1 7525 5 discriminator 6
 18668 0088 14301BE5 		ldr	r3, [fp, #-20]
 18669 008c 233CA0E1 		lsr	r3, r3, #24
 18670 0090 030053E3 		cmp	r3, #3
 18671 0094 3F00000A 		beq	.L1224
 18672              		.loc 1 7525 5 discriminator 7
 18673 0098 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 461


 18674              		.loc 1 7525 5
 18675 009c 7F0100EA 		b	.L1222
 18676              	.L1220:
 18677              		.loc 1 7525 5 discriminator 2
 18678 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 18679 00a4 2324A0E1 		lsr	r2, r3, #8
 18680 00a8 28301BE5 		ldr	r3, [fp, #-40]
 18681 00ac 143093E5 		ldr	r3, [r3, #20]
 18682 00b0 030052E1 		cmp	r2, r3
 18683 00b4 0100003A 		bcc	.L1225
 18684              		.loc 1 7525 5 discriminator 8
 18685 00b8 0230E0E3 		mvn	r3, #2
 18686              		.loc 1 7525 5
 18687 00bc 770100EA 		b	.L1222
 18688              	.L1225:
 18689              		.loc 1 7525 5 discriminator 9
 18690 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 18691 00c4 2334A0E1 		lsr	r3, r3, #8
 18692 00c8 8322A0E1 		lsl	r2, r3, #5
 18693 00cc 28301BE5 		ldr	r3, [fp, #-40]
 18694 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18695 00d4 033082E0 		add	r3, r2, r3
 18696 00d8 08300BE5 		str	r3, [fp, #-8]
 18697 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18698 00e0 0300A0E1 		mov	r0, r3
 18699 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18700 00e8 14000BE5 		str	r0, [fp, #-20]
 18701              		.loc 1 7525 5 discriminator 1
 18702 00ec 14301BE5 		ldr	r3, [fp, #-20]
 18703 00f0 FF3803E2 		and	r3, r3, #16711680
 18704 00f4 020853E3 		cmp	r3, #131072
 18705 00f8 0100001A 		bne	.L1226
 18706              		.loc 1 7525 5 discriminator 10
 18707 00fc 0830E0E3 		mvn	r3, #8
 18708              		.loc 1 7525 5
 18709 0100 660100EA 		b	.L1222
 18710              	.L1226:
 18711              		.loc 1 7525 5 discriminator 11
 18712 0104 14301BE5 		ldr	r3, [fp, #-20]
 18713 0108 233CA0E1 		lsr	r3, r3, #24
 18714 010c 030053E3 		cmp	r3, #3
 18715 0110 0100000A 		beq	.L1227
 18716              		.loc 1 7525 5 discriminator 12
 18717 0114 0130E0E3 		mvn	r3, #1
 18718              		.loc 1 7525 5
 18719 0118 600100EA 		b	.L1222
 18720              	.L1227:
 18721              		.loc 1 7525 5 discriminator 13
 18722 011c 2C301BE5 		ldr	r3, [fp, #-44]
 18723 0120 7F2003E2 		and	r2, r3, #127
 18724 0124 08301BE5 		ldr	r3, [fp, #-8]
 18725 0128 143093E5 		ldr	r3, [r3, #20]
 18726 012c 030052E1 		cmp	r2, r3
 18727 0130 0100003A 		bcc	.L1228
 18728              		.loc 1 7525 5 discriminator 14
 18729 0134 0230E0E3 		mvn	r3, #2
 18730              		.loc 1 7525 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 462


 18731 0138 580100EA 		b	.L1222
 18732              	.L1228:
 18733              		.loc 1 7525 5 discriminator 15
 18734 013c 2C301BE5 		ldr	r3, [fp, #-44]
 18735 0140 7F3003E2 		and	r3, r3, #127
 18736 0144 8322A0E1 		lsl	r2, r3, #5
 18737 0148 08301BE5 		ldr	r3, [fp, #-8]
 18738 014c 0C3093E5 		ldr	r3, [r3, #12]
 18739 0150 033082E0 		add	r3, r2, r3
 18740 0154 08300BE5 		str	r3, [fp, #-8]
 18741 0158 08301BE5 		ldr	r3, [fp, #-8]
 18742 015c 0300A0E1 		mov	r0, r3
 18743 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18744 0164 14000BE5 		str	r0, [fp, #-20]
 18745              		.loc 1 7525 5 discriminator 1
 18746 0168 14301BE5 		ldr	r3, [fp, #-20]
 18747 016c FF3803E2 		and	r3, r3, #16711680
 18748 0170 020853E3 		cmp	r3, #131072
 18749 0174 0100001A 		bne	.L1229
 18750              		.loc 1 7525 5 discriminator 16
 18751 0178 0830E0E3 		mvn	r3, #8
 18752              		.loc 1 7525 5
 18753 017c 470100EA 		b	.L1222
 18754              	.L1229:
 18755              		.loc 1 7525 5 discriminator 17
 18756 0180 14301BE5 		ldr	r3, [fp, #-20]
 18757 0184 233CA0E1 		lsr	r3, r3, #24
 18758 0188 030053E3 		cmp	r3, #3
 18759 018c 0100000A 		beq	.L1224
 18760              		.loc 1 7525 5 discriminator 18
 18761 0190 0130E0E3 		mvn	r3, #1
 18762              		.loc 1 7525 5
 18763 0194 410100EA 		b	.L1222
 18764              	.L1224:
7526:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7527:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 18765              		.loc 1 7527 5 is_stmt 1
 18766 0198 04309BE5 		ldr	r3, [fp, #4]
 18767 019c 803003E2 		and	r3, r3, #128
 18768 01a0 000053E3 		cmp	r3, #0
 18769 01a4 1C00001A 		bne	.L1230
 18770              		.loc 1 7527 5 is_stmt 0 discriminator 1
 18771 01a8 28301BE5 		ldr	r3, [fp, #-40]
 18772 01ac 142093E5 		ldr	r2, [r3, #20]
 18773 01b0 04309BE5 		ldr	r3, [fp, #4]
 18774 01b4 030052E1 		cmp	r2, r3
 18775 01b8 0100008A 		bhi	.L1231
 18776              		.loc 1 7527 5 discriminator 3
 18777 01bc 0230E0E3 		mvn	r3, #2
 18778              		.loc 1 7527 5
 18779 01c0 360100EA 		b	.L1222
 18780              	.L1231:
 18781              		.loc 1 7527 5 discriminator 4
 18782 01c4 04309BE5 		ldr	r3, [fp, #4]
 18783 01c8 8322A0E1 		lsl	r2, r3, #5
 18784 01cc 28301BE5 		ldr	r3, [fp, #-40]
 18785 01d0 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 463


 18786 01d4 033082E0 		add	r3, r2, r3
 18787 01d8 0C300BE5 		str	r3, [fp, #-12]
 18788 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 18789 01e0 0300A0E1 		mov	r0, r3
 18790 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18791 01e8 14000BE5 		str	r0, [fp, #-20]
 18792              		.loc 1 7527 5 discriminator 1
 18793 01ec 14301BE5 		ldr	r3, [fp, #-20]
 18794 01f0 FF3803E2 		and	r3, r3, #16711680
 18795 01f4 020853E3 		cmp	r3, #131072
 18796 01f8 0100001A 		bne	.L1232
 18797              		.loc 1 7527 5 discriminator 5
 18798 01fc 0830E0E3 		mvn	r3, #8
 18799              		.loc 1 7527 5
 18800 0200 260100EA 		b	.L1222
 18801              	.L1232:
 18802              		.loc 1 7527 5 discriminator 6
 18803 0204 14301BE5 		ldr	r3, [fp, #-20]
 18804 0208 233CA0E1 		lsr	r3, r3, #24
 18805 020c 050053E3 		cmp	r3, #5
 18806 0210 3F00000A 		beq	.L1233
 18807              		.loc 1 7527 5 discriminator 7
 18808 0214 0130E0E3 		mvn	r3, #1
 18809              		.loc 1 7527 5
 18810 0218 200100EA 		b	.L1222
 18811              	.L1230:
 18812              		.loc 1 7527 5 discriminator 2
 18813 021c 04309BE5 		ldr	r3, [fp, #4]
 18814 0220 2324A0E1 		lsr	r2, r3, #8
 18815 0224 28301BE5 		ldr	r3, [fp, #-40]
 18816 0228 143093E5 		ldr	r3, [r3, #20]
 18817 022c 030052E1 		cmp	r2, r3
 18818 0230 0100003A 		bcc	.L1234
 18819              		.loc 1 7527 5 discriminator 8
 18820 0234 0230E0E3 		mvn	r3, #2
 18821              		.loc 1 7527 5
 18822 0238 180100EA 		b	.L1222
 18823              	.L1234:
 18824              		.loc 1 7527 5 discriminator 9
 18825 023c 04309BE5 		ldr	r3, [fp, #4]
 18826 0240 2334A0E1 		lsr	r3, r3, #8
 18827 0244 8322A0E1 		lsl	r2, r3, #5
 18828 0248 28301BE5 		ldr	r3, [fp, #-40]
 18829 024c 0C3093E5 		ldr	r3, [r3, #12]
 18830 0250 033082E0 		add	r3, r2, r3
 18831 0254 0C300BE5 		str	r3, [fp, #-12]
 18832 0258 0C301BE5 		ldr	r3, [fp, #-12]
 18833 025c 0300A0E1 		mov	r0, r3
 18834 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18835 0264 14000BE5 		str	r0, [fp, #-20]
 18836              		.loc 1 7527 5 discriminator 1
 18837 0268 14301BE5 		ldr	r3, [fp, #-20]
 18838 026c FF3803E2 		and	r3, r3, #16711680
 18839 0270 020853E3 		cmp	r3, #131072
 18840 0274 0100001A 		bne	.L1235
 18841              		.loc 1 7527 5 discriminator 10
 18842 0278 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 464


 18843              		.loc 1 7527 5
 18844 027c 070100EA 		b	.L1222
 18845              	.L1235:
 18846              		.loc 1 7527 5 discriminator 11
 18847 0280 14301BE5 		ldr	r3, [fp, #-20]
 18848 0284 233CA0E1 		lsr	r3, r3, #24
 18849 0288 030053E3 		cmp	r3, #3
 18850 028c 0100000A 		beq	.L1236
 18851              		.loc 1 7527 5 discriminator 12
 18852 0290 0130E0E3 		mvn	r3, #1
 18853              		.loc 1 7527 5
 18854 0294 010100EA 		b	.L1222
 18855              	.L1236:
 18856              		.loc 1 7527 5 discriminator 13
 18857 0298 04309BE5 		ldr	r3, [fp, #4]
 18858 029c 7F2003E2 		and	r2, r3, #127
 18859 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 18860 02a4 143093E5 		ldr	r3, [r3, #20]
 18861 02a8 030052E1 		cmp	r2, r3
 18862 02ac 0100003A 		bcc	.L1237
 18863              		.loc 1 7527 5 discriminator 14
 18864 02b0 0230E0E3 		mvn	r3, #2
 18865              		.loc 1 7527 5
 18866 02b4 F90000EA 		b	.L1222
 18867              	.L1237:
 18868              		.loc 1 7527 5 discriminator 15
 18869 02b8 04309BE5 		ldr	r3, [fp, #4]
 18870 02bc 7F3003E2 		and	r3, r3, #127
 18871 02c0 8322A0E1 		lsl	r2, r3, #5
 18872 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 18873 02c8 0C3093E5 		ldr	r3, [r3, #12]
 18874 02cc 033082E0 		add	r3, r2, r3
 18875 02d0 0C300BE5 		str	r3, [fp, #-12]
 18876 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 18877 02d8 0300A0E1 		mov	r0, r3
 18878 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18879 02e0 14000BE5 		str	r0, [fp, #-20]
 18880              		.loc 1 7527 5 discriminator 1
 18881 02e4 14301BE5 		ldr	r3, [fp, #-20]
 18882 02e8 FF3803E2 		and	r3, r3, #16711680
 18883 02ec 020853E3 		cmp	r3, #131072
 18884 02f0 0100001A 		bne	.L1238
 18885              		.loc 1 7527 5 discriminator 16
 18886 02f4 0830E0E3 		mvn	r3, #8
 18887              		.loc 1 7527 5
 18888 02f8 E80000EA 		b	.L1222
 18889              	.L1238:
 18890              		.loc 1 7527 5 discriminator 17
 18891 02fc 14301BE5 		ldr	r3, [fp, #-20]
 18892 0300 233CA0E1 		lsr	r3, r3, #24
 18893 0304 050053E3 		cmp	r3, #5
 18894 0308 0100000A 		beq	.L1233
 18895              		.loc 1 7527 5 discriminator 18
 18896 030c 0130E0E3 		mvn	r3, #1
 18897              		.loc 1 7527 5
 18898 0310 E20000EA 		b	.L1222
 18899              	.L1233:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 465


7528:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
7529:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 18900              		.loc 1 7529 5 is_stmt 1
 18901 0314 30301BE5 		ldr	r3, [fp, #-48]
 18902 0318 803003E2 		and	r3, r3, #128
 18903 031c 000053E3 		cmp	r3, #0
 18904 0320 1C00001A 		bne	.L1239
 18905              		.loc 1 7529 5 is_stmt 0 discriminator 1
 18906 0324 28301BE5 		ldr	r3, [fp, #-40]
 18907 0328 142093E5 		ldr	r2, [r3, #20]
 18908 032c 30301BE5 		ldr	r3, [fp, #-48]
 18909 0330 030052E1 		cmp	r2, r3
 18910 0334 0100008A 		bhi	.L1240
 18911              		.loc 1 7529 5 discriminator 3
 18912 0338 0230E0E3 		mvn	r3, #2
 18913              		.loc 1 7529 5
 18914 033c D70000EA 		b	.L1222
 18915              	.L1240:
 18916              		.loc 1 7529 5 discriminator 4
 18917 0340 30301BE5 		ldr	r3, [fp, #-48]
 18918 0344 8322A0E1 		lsl	r2, r3, #5
 18919 0348 28301BE5 		ldr	r3, [fp, #-40]
 18920 034c 0C3093E5 		ldr	r3, [r3, #12]
 18921 0350 033082E0 		add	r3, r2, r3
 18922 0354 10300BE5 		str	r3, [fp, #-16]
 18923 0358 10301BE5 		ldr	r3, [fp, #-16]
 18924 035c 0300A0E1 		mov	r0, r3
 18925 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18926 0364 14000BE5 		str	r0, [fp, #-20]
 18927              		.loc 1 7529 5 discriminator 1
 18928 0368 14301BE5 		ldr	r3, [fp, #-20]
 18929 036c FF3803E2 		and	r3, r3, #16711680
 18930 0370 020853E3 		cmp	r3, #131072
 18931 0374 0100001A 		bne	.L1241
 18932              		.loc 1 7529 5 discriminator 5
 18933 0378 0830E0E3 		mvn	r3, #8
 18934              		.loc 1 7529 5
 18935 037c C70000EA 		b	.L1222
 18936              	.L1241:
 18937              		.loc 1 7529 5 discriminator 6
 18938 0380 14301BE5 		ldr	r3, [fp, #-20]
 18939 0384 233CA0E1 		lsr	r3, r3, #24
 18940 0388 020053E3 		cmp	r3, #2
 18941 038c 3F00000A 		beq	.L1242
 18942              		.loc 1 7529 5 discriminator 7
 18943 0390 0130E0E3 		mvn	r3, #1
 18944              		.loc 1 7529 5
 18945 0394 C10000EA 		b	.L1222
 18946              	.L1239:
 18947              		.loc 1 7529 5 discriminator 2
 18948 0398 30301BE5 		ldr	r3, [fp, #-48]
 18949 039c 2324A0E1 		lsr	r2, r3, #8
 18950 03a0 28301BE5 		ldr	r3, [fp, #-40]
 18951 03a4 143093E5 		ldr	r3, [r3, #20]
 18952 03a8 030052E1 		cmp	r2, r3
 18953 03ac 0100003A 		bcc	.L1243
 18954              		.loc 1 7529 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 466


 18955 03b0 0230E0E3 		mvn	r3, #2
 18956              		.loc 1 7529 5
 18957 03b4 B90000EA 		b	.L1222
 18958              	.L1243:
 18959              		.loc 1 7529 5 discriminator 9
 18960 03b8 30301BE5 		ldr	r3, [fp, #-48]
 18961 03bc 2334A0E1 		lsr	r3, r3, #8
 18962 03c0 8322A0E1 		lsl	r2, r3, #5
 18963 03c4 28301BE5 		ldr	r3, [fp, #-40]
 18964 03c8 0C3093E5 		ldr	r3, [r3, #12]
 18965 03cc 033082E0 		add	r3, r2, r3
 18966 03d0 10300BE5 		str	r3, [fp, #-16]
 18967 03d4 10301BE5 		ldr	r3, [fp, #-16]
 18968 03d8 0300A0E1 		mov	r0, r3
 18969 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18970 03e0 14000BE5 		str	r0, [fp, #-20]
 18971              		.loc 1 7529 5 discriminator 1
 18972 03e4 14301BE5 		ldr	r3, [fp, #-20]
 18973 03e8 FF3803E2 		and	r3, r3, #16711680
 18974 03ec 020853E3 		cmp	r3, #131072
 18975 03f0 0100001A 		bne	.L1244
 18976              		.loc 1 7529 5 discriminator 10
 18977 03f4 0830E0E3 		mvn	r3, #8
 18978              		.loc 1 7529 5
 18979 03f8 A80000EA 		b	.L1222
 18980              	.L1244:
 18981              		.loc 1 7529 5 discriminator 11
 18982 03fc 14301BE5 		ldr	r3, [fp, #-20]
 18983 0400 233CA0E1 		lsr	r3, r3, #24
 18984 0404 030053E3 		cmp	r3, #3
 18985 0408 0100000A 		beq	.L1245
 18986              		.loc 1 7529 5 discriminator 12
 18987 040c 0130E0E3 		mvn	r3, #1
 18988              		.loc 1 7529 5
 18989 0410 A20000EA 		b	.L1222
 18990              	.L1245:
 18991              		.loc 1 7529 5 discriminator 13
 18992 0414 30301BE5 		ldr	r3, [fp, #-48]
 18993 0418 7F2003E2 		and	r2, r3, #127
 18994 041c 10301BE5 		ldr	r3, [fp, #-16]
 18995 0420 143093E5 		ldr	r3, [r3, #20]
 18996 0424 030052E1 		cmp	r2, r3
 18997 0428 0100003A 		bcc	.L1246
 18998              		.loc 1 7529 5 discriminator 14
 18999 042c 0230E0E3 		mvn	r3, #2
 19000              		.loc 1 7529 5
 19001 0430 9A0000EA 		b	.L1222
 19002              	.L1246:
 19003              		.loc 1 7529 5 discriminator 15
 19004 0434 30301BE5 		ldr	r3, [fp, #-48]
 19005 0438 7F3003E2 		and	r3, r3, #127
 19006 043c 8322A0E1 		lsl	r2, r3, #5
 19007 0440 10301BE5 		ldr	r3, [fp, #-16]
 19008 0444 0C3093E5 		ldr	r3, [r3, #12]
 19009 0448 033082E0 		add	r3, r2, r3
 19010 044c 10300BE5 		str	r3, [fp, #-16]
 19011 0450 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 467


 19012 0454 0300A0E1 		mov	r0, r3
 19013 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19014 045c 14000BE5 		str	r0, [fp, #-20]
 19015              		.loc 1 7529 5 discriminator 1
 19016 0460 14301BE5 		ldr	r3, [fp, #-20]
 19017 0464 FF3803E2 		and	r3, r3, #16711680
 19018 0468 020853E3 		cmp	r3, #131072
 19019 046c 0100001A 		bne	.L1247
 19020              		.loc 1 7529 5 discriminator 16
 19021 0470 0830E0E3 		mvn	r3, #8
 19022              		.loc 1 7529 5
 19023 0474 890000EA 		b	.L1222
 19024              	.L1247:
 19025              		.loc 1 7529 5 discriminator 17
 19026 0478 14301BE5 		ldr	r3, [fp, #-20]
 19027 047c 233CA0E1 		lsr	r3, r3, #24
 19028 0480 020053E3 		cmp	r3, #2
 19029 0484 0100000A 		beq	.L1242
 19030              		.loc 1 7529 5 discriminator 18
 19031 0488 0130E0E3 		mvn	r3, #1
 19032              		.loc 1 7529 5
 19033 048c 830000EA 		b	.L1222
 19034              	.L1242:
7530:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
7531:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
7532:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 19035              		.loc 1 7532 5 is_stmt 1
 19036 0490 08301BE5 		ldr	r3, [fp, #-8]
 19037 0494 083093E5 		ldr	r3, [r3, #8]
 19038 0498 013003E2 		and	r3, r3, #1
 19039 049c 000053E3 		cmp	r3, #0
 19040 04a0 0100001A 		bne	.L1248
 19041              		.loc 1 7532 5 is_stmt 0 discriminator 1
 19042 04a4 0630E0E3 		mvn	r3, #6
 19043              		.loc 1 7532 5
 19044 04a8 7C0000EA 		b	.L1222
 19045              	.L1248:
7533:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_INV);
 19046              		.loc 1 7533 5 is_stmt 1
 19047 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 19048 04b0 083093E5 		ldr	r3, [r3, #8]
 19049 04b4 013003E2 		and	r3, r3, #1
 19050 04b8 000053E3 		cmp	r3, #0
 19051 04bc 0100001A 		bne	.L1249
 19052              		.loc 1 7533 5 is_stmt 0 discriminator 1
 19053 04c0 0630E0E3 		mvn	r3, #6
 19054              		.loc 1 7533 5
 19055 04c4 750000EA 		b	.L1222
 19056              	.L1249:
7534:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
7535:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_INV,Raddr,Vaddr,RME_INV_SIZE);
 19057              		.loc 1 7535 5 is_stmt 1
 19058 04c8 10301BE5 		ldr	r3, [fp, #-16]
 19059 04cc 083093E5 		ldr	r3, [r3, #8]
 19060 04d0 083003E2 		and	r3, r3, #8
 19061 04d4 000053E3 		cmp	r3, #0
 19062 04d8 0100001A 		bne	.L1250
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 468


 19063              		.loc 1 7535 5 is_stmt 0 discriminator 1
 19064 04dc 0630E0E3 		mvn	r3, #6
 19065              		.loc 1 7535 5
 19066 04e0 6E0000EA 		b	.L1222
 19067              	.L1250:
 19068              		.loc 1 7535 5 discriminator 2
 19069 04e4 10301BE5 		ldr	r3, [fp, #-16]
 19070 04e8 143093E5 		ldr	r3, [r3, #20]
 19071 04ec 08209BE5 		ldr	r2, [fp, #8]
 19072 04f0 033082E0 		add	r3, r2, r3
 19073 04f4 18300BE5 		str	r3, [fp, #-24]
 19074 04f8 18201BE5 		ldr	r2, [fp, #-24]
 19075 04fc 08309BE5 		ldr	r3, [fp, #8]
 19076 0500 030052E1 		cmp	r2, r3
 19077 0504 0100002A 		bcs	.L1251
 19078              		.loc 1 7535 5 discriminator 3
 19079 0508 0630E0E3 		mvn	r3, #6
 19080              		.loc 1 7535 5
 19081 050c 630000EA 		b	.L1222
 19082              	.L1251:
 19083              		.loc 1 7535 5 discriminator 4
 19084 0510 10301BE5 		ldr	r3, [fp, #-16]
 19085 0514 143093E5 		ldr	r3, [r3, #20]
 19086 0518 18201BE5 		ldr	r2, [fp, #-24]
 19087 051c 030052E1 		cmp	r2, r3
 19088 0520 0100002A 		bcs	.L1252
 19089              		.loc 1 7535 5 discriminator 5
 19090 0524 0630E0E3 		mvn	r3, #6
 19091              		.loc 1 7535 5
 19092 0528 5C0000EA 		b	.L1222
 19093              	.L1252:
 19094              		.loc 1 7535 5 discriminator 6
 19095 052c 18301BE5 		ldr	r3, [fp, #-24]
 19096 0530 250073E3 		cmn	r3, #37
 19097 0534 0100009A 		bls	.L1253
 19098              		.loc 1 7535 5 discriminator 7
 19099 0538 0630E0E3 		mvn	r3, #6
 19100              		.loc 1 7535 5
 19101 053c 570000EA 		b	.L1222
 19102              	.L1253:
 19103              		.loc 1 7535 5 discriminator 8
 19104 0540 10301BE5 		ldr	r3, [fp, #-16]
 19105 0544 182093E5 		ldr	r2, [r3, #24]
 19106 0548 18301BE5 		ldr	r3, [fp, #-24]
 19107 054c 233083E2 		add	r3, r3, #35
 19108 0550 030052E1 		cmp	r2, r3
 19109 0554 0100002A 		bcs	.L1254
 19110              		.loc 1 7535 5 discriminator 9
 19111 0558 0630E0E3 		mvn	r3, #6
 19112              		.loc 1 7535 5
 19113 055c 4F0000EA 		b	.L1222
 19114              	.L1254:
7536:../../Source/Kernel/rme_kernel.c ****     
7537:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7538:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Crt);
 19115              		.loc 1 7538 5 is_stmt 1
 19116 0560 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 469


 19117 0564 142093E5 		ldr	r2, [r3, #20]
 19118 0568 34301BE5 		ldr	r3, [fp, #-52]
 19119 056c 030052E1 		cmp	r2, r3
 19120 0570 0100008A 		bhi	.L1255
 19121              		.loc 1 7538 5 is_stmt 0 discriminator 1
 19122 0574 0230E0E3 		mvn	r3, #2
 19123              		.loc 1 7538 5
 19124 0578 480000EA 		b	.L1222
 19125              	.L1255:
 19126              		.loc 1 7538 5 discriminator 2
 19127 057c 34301BE5 		ldr	r3, [fp, #-52]
 19128 0580 8322A0E1 		lsl	r2, r3, #5
 19129 0584 08301BE5 		ldr	r3, [fp, #-8]
 19130 0588 0C3093E5 		ldr	r3, [r3, #12]
 19131 058c 033082E0 		add	r3, r2, r3
 19132 0590 1C300BE5 		str	r3, [fp, #-28]
7539:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7540:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Inv_Crt);
 19133              		.loc 1 7540 5 is_stmt 1
 19134 0594 1C301BE5 		ldr	r3, [fp, #-28]
 19135 0598 0128A0E3 		mov	r2, #65536
 19136 059c 0010A0E3 		mov	r1, #0
 19137 05a0 0300A0E1 		mov	r0, r3
 19138 05a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19139 05a8 0030A0E1 		mov	r3, r0
 19140              		.loc 1 7540 5 is_stmt 0 discriminator 1
 19141 05ac 000053E3 		cmp	r3, #0
 19142 05b0 0100001A 		bne	.L1256
 19143 05b4 0430E0E3 		mvn	r3, #4
 19144              		.loc 1 7540 5
 19145 05b8 380000EA 		b	.L1222
 19146              	.L1256:
 19147              		.loc 1 7540 5 discriminator 2
 19148 05bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19149 05c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19150 05c4 002093E5 		ldr	r2, [r3]
 19151 05c8 1C301BE5 		ldr	r3, [fp, #-28]
 19152 05cc 102083E5 		str	r2, [r3, #16]
7541:../../Source/Kernel/rme_kernel.c ****     
7542:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
7543:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_INV_SIZE)!=0)
 19153              		.loc 1 7543 8 is_stmt 1
 19154 05d0 2410A0E3 		mov	r1, #36
 19155 05d4 18001BE5 		ldr	r0, [fp, #-24]
 19156 05d8 FEFFFFEB 		bl	_RME_Kot_Mark
 19157 05dc 0030A0E1 		mov	r3, r0
 19158              		.loc 1 7543 7 discriminator 1
 19159 05e0 000053E3 		cmp	r3, #0
 19160 05e4 0500000A 		beq	.L1257
7544:../../Source/Kernel/rme_kernel.c ****     {
7545:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7546:../../Source/Kernel/rme_kernel.c **** 
7547:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),0U);
 19161              		.loc 1 7547 9
 19162 05e8 1C301BE5 		ldr	r3, [fp, #-28]
 19163 05ec 0010A0E3 		mov	r1, #0
 19164 05f0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 470


 19165 05f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
7548:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 19166              		.loc 1 7548 16
 19167 05f8 0330E0E3 		mvn	r3, #3
 19168 05fc 270000EA 		b	.L1222
 19169              	.L1257:
7549:../../Source/Kernel/rme_kernel.c ****     }
7550:../../Source/Kernel/rme_kernel.c ****     else
7551:../../Source/Kernel/rme_kernel.c ****     {
7552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7553:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7554:../../Source/Kernel/rme_kernel.c ****     }
7555:../../Source/Kernel/rme_kernel.c ****     
7556:../../Source/Kernel/rme_kernel.c ****     /* Object init */
7557:../../Source/Kernel/rme_kernel.c ****     Invocation=(struct RME_Inv_Struct*)Vaddr;
 19170              		.loc 1 7557 15
 19171 0600 18301BE5 		ldr	r3, [fp, #-24]
 19172 0604 20300BE5 		str	r3, [fp, #-32]
7558:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 19173              		.loc 1 7558 14
 19174 0608 0C301BE5 		ldr	r3, [fp, #-12]
 19175 060c 003093E5 		ldr	r3, [r3]
 19176 0610 7330FFE6 		uxth	r3, r3
 19177 0614 000053E3 		cmp	r3, #0
 19178 0618 0200000A 		beq	.L1258
 19179              		.loc 1 7558 14 is_stmt 0 discriminator 1
 19180 061c 0C301BE5 		ldr	r3, [fp, #-12]
 19181 0620 043093E5 		ldr	r3, [r3, #4]
 19182 0624 000000EA 		b	.L1259
 19183              	.L1258:
 19184              		.loc 1 7558 14 discriminator 2
 19185 0628 0C301BE5 		ldr	r3, [fp, #-12]
 19186              	.L1259:
 19187              		.loc 1 7558 13 is_stmt 1 discriminator 4
 19188 062c 24300BE5 		str	r3, [fp, #-36]
7559:../../Source/Kernel/rme_kernel.c ****     Invocation->Prc=Prc_Root;
 19189              		.loc 1 7559 20
 19190 0630 20301BE5 		ldr	r3, [fp, #-32]
 19191 0634 24201BE5 		ldr	r2, [fp, #-36]
 19192 0638 082083E5 		str	r2, [r3, #8]
7560:../../Source/Kernel/rme_kernel.c ****     Invocation->Thd_Act=RME_NULL;
 19193              		.loc 1 7560 24
 19194 063c 20301BE5 		ldr	r3, [fp, #-32]
 19195 0640 0020A0E3 		mov	r2, #0
 19196 0644 0C2083E5 		str	r2, [r3, #12]
7561:../../Source/Kernel/rme_kernel.c ****     /* By default we do not return on exception */
7562:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=0U;
 19197              		.loc 1 7562 27
 19198 0648 20301BE5 		ldr	r3, [fp, #-32]
 19199 064c 0020A0E3 		mov	r2, #0
 19200 0650 182083E5 		str	r2, [r3, #24]
7563:../../Source/Kernel/rme_kernel.c ****     
7564:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7565:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Root_Ref=0U;
 19201              		.loc 1 7565 27
 19202 0654 1C301BE5 		ldr	r3, [fp, #-28]
 19203 0658 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 471


 19204 065c 042083E5 		str	r2, [r3, #4]
7566:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Object=Vaddr;
 19205              		.loc 1 7566 25
 19206 0660 1C301BE5 		ldr	r3, [fp, #-28]
 19207 0664 18201BE5 		ldr	r2, [fp, #-24]
 19208 0668 0C2083E5 		str	r2, [r3, #12]
7567:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Flag=RME_INV_FLAG_ALL;
 19209              		.loc 1 7567 23
 19210 066c 1C301BE5 		ldr	r3, [fp, #-28]
 19211 0670 0320A0E3 		mov	r2, #3
 19212 0674 082083E5 		str	r2, [r3, #8]
7568:../../Source/Kernel/rme_kernel.c ****     
7569:../../Source/Kernel/rme_kernel.c ****     /* Reference object */
7570:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref),1U);
 19213              		.loc 1 7570 5
 19214 0678 24301BE5 		ldr	r3, [fp, #-36]
 19215 067c 043083E2 		add	r3, r3, #4
 19216 0680 0110A0E3 		mov	r1, #1
 19217 0684 0300A0E1 		mov	r0, r3
 19218 0688 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7571:../../Source/Kernel/rme_kernel.c ****     
7572:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7573:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),
 19219              		.loc 1 7573 5
 19220 068c 1C301BE5 		ldr	r3, [fp, #-28]
 19221 0690 0714A0E3 		mov	r1, #117440512
 19222 0694 0300A0E1 		mov	r0, r3
 19223 0698 FEFFFFEB 		bl	__RME_A7A_Write_Release
7574:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_INV,
7575:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7576:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7577:../../Source/Kernel/rme_kernel.c **** 
7578:../../Source/Kernel/rme_kernel.c ****     return 0;
 19224              		.loc 1 7578 12
 19225 069c 0030A0E3 		mov	r3, #0
 19226              	.L1222:
7579:../../Source/Kernel/rme_kernel.c **** }
 19227              		.loc 1 7579 1
 19228 06a0 0300A0E1 		mov	r0, r3
 19229 06a4 04D04BE2 		sub	sp, fp, #4
 19230              		.cfi_def_cfa 13, 8
 19231              		@ sp needed
 19232 06a8 0088BDE8 		pop	{fp, pc}
 19233              		.cfi_endproc
 19234              	.LFE72:
 19236              		.section	.text._RME_Inv_Del,"ax",%progbits
 19237              		.align	2
 19238              		.syntax unified
 19239              		.arm
 19241              	_RME_Inv_Del:
 19242              	.LFB73:
7580:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Crt *************************************************/
7581:../../Source/Kernel/rme_kernel.c **** 
7582:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Del ******************************************************
7583:../../Source/Kernel/rme_kernel.c **** Description : Delete an invocation stub.
7584:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7585:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 472


7586:../../Source/Kernel/rme_kernel.c ****                                   delete from.
7587:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7588:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7589:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7590:../../Source/Kernel/rme_kernel.c **** Output      : None.
7591:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7592:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7593:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Del(struct RME_Cap_Cpt* Cpt,
7594:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7595:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv)
7596:../../Source/Kernel/rme_kernel.c **** {
 19243              		.loc 1 7596 1
 19244              		.cfi_startproc
 19245              		@ args = 0, pretend = 0, frame = 32
 19246              		@ frame_needed = 1, uses_anonymous_args = 0
 19247 0000 00482DE9 		push	{fp, lr}
 19248              		.cfi_def_cfa_offset 8
 19249              		.cfi_offset 11, -8
 19250              		.cfi_offset 14, -4
 19251 0004 04B08DE2 		add	fp, sp, #4
 19252              		.cfi_def_cfa 11, 4
 19253 0008 20D04DE2 		sub	sp, sp, #32
 19254 000c 18000BE5 		str	r0, [fp, #-24]
 19255 0010 1C100BE5 		str	r1, [fp, #-28]
 19256 0014 20200BE5 		str	r2, [fp, #-32]
7597:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7598:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Del;
7599:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7600:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
7601:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7602:../../Source/Kernel/rme_kernel.c ****     
7603:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7604:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 19257              		.loc 1 7604 5
 19258 0018 1C301BE5 		ldr	r3, [fp, #-28]
 19259 001c 803003E2 		and	r3, r3, #128
 19260 0020 000053E3 		cmp	r3, #0
 19261 0024 1C00001A 		bne	.L1261
 19262              		.loc 1 7604 5 is_stmt 0 discriminator 1
 19263 0028 18301BE5 		ldr	r3, [fp, #-24]
 19264 002c 142093E5 		ldr	r2, [r3, #20]
 19265 0030 1C301BE5 		ldr	r3, [fp, #-28]
 19266 0034 030052E1 		cmp	r2, r3
 19267 0038 0100008A 		bhi	.L1262
 19268              		.loc 1 7604 5 discriminator 3
 19269 003c 0230E0E3 		mvn	r3, #2
 19270              		.loc 1 7604 5
 19271 0040 D10000EA 		b	.L1263
 19272              	.L1262:
 19273              		.loc 1 7604 5 discriminator 4
 19274 0044 1C301BE5 		ldr	r3, [fp, #-28]
 19275 0048 8322A0E1 		lsl	r2, r3, #5
 19276 004c 18301BE5 		ldr	r3, [fp, #-24]
 19277 0050 0C3093E5 		ldr	r3, [r3, #12]
 19278 0054 033082E0 		add	r3, r2, r3
 19279 0058 08300BE5 		str	r3, [fp, #-8]
 19280 005c 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 473


 19281 0060 0300A0E1 		mov	r0, r3
 19282 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19283 0068 0C000BE5 		str	r0, [fp, #-12]
 19284              		.loc 1 7604 5 discriminator 1
 19285 006c 0C301BE5 		ldr	r3, [fp, #-12]
 19286 0070 FF3803E2 		and	r3, r3, #16711680
 19287 0074 020853E3 		cmp	r3, #131072
 19288 0078 0100001A 		bne	.L1264
 19289              		.loc 1 7604 5 discriminator 5
 19290 007c 0830E0E3 		mvn	r3, #8
 19291              		.loc 1 7604 5
 19292 0080 C10000EA 		b	.L1263
 19293              	.L1264:
 19294              		.loc 1 7604 5 discriminator 6
 19295 0084 0C301BE5 		ldr	r3, [fp, #-12]
 19296 0088 233CA0E1 		lsr	r3, r3, #24
 19297 008c 030053E3 		cmp	r3, #3
 19298 0090 3F00000A 		beq	.L1265
 19299              		.loc 1 7604 5 discriminator 7
 19300 0094 0130E0E3 		mvn	r3, #1
 19301              		.loc 1 7604 5
 19302 0098 BB0000EA 		b	.L1263
 19303              	.L1261:
 19304              		.loc 1 7604 5 discriminator 2
 19305 009c 1C301BE5 		ldr	r3, [fp, #-28]
 19306 00a0 2324A0E1 		lsr	r2, r3, #8
 19307 00a4 18301BE5 		ldr	r3, [fp, #-24]
 19308 00a8 143093E5 		ldr	r3, [r3, #20]
 19309 00ac 030052E1 		cmp	r2, r3
 19310 00b0 0100003A 		bcc	.L1266
 19311              		.loc 1 7604 5 discriminator 8
 19312 00b4 0230E0E3 		mvn	r3, #2
 19313              		.loc 1 7604 5
 19314 00b8 B30000EA 		b	.L1263
 19315              	.L1266:
 19316              		.loc 1 7604 5 discriminator 9
 19317 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 19318 00c0 2334A0E1 		lsr	r3, r3, #8
 19319 00c4 8322A0E1 		lsl	r2, r3, #5
 19320 00c8 18301BE5 		ldr	r3, [fp, #-24]
 19321 00cc 0C3093E5 		ldr	r3, [r3, #12]
 19322 00d0 033082E0 		add	r3, r2, r3
 19323 00d4 08300BE5 		str	r3, [fp, #-8]
 19324 00d8 08301BE5 		ldr	r3, [fp, #-8]
 19325 00dc 0300A0E1 		mov	r0, r3
 19326 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19327 00e4 0C000BE5 		str	r0, [fp, #-12]
 19328              		.loc 1 7604 5 discriminator 1
 19329 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 19330 00ec FF3803E2 		and	r3, r3, #16711680
 19331 00f0 020853E3 		cmp	r3, #131072
 19332 00f4 0100001A 		bne	.L1267
 19333              		.loc 1 7604 5 discriminator 10
 19334 00f8 0830E0E3 		mvn	r3, #8
 19335              		.loc 1 7604 5
 19336 00fc A20000EA 		b	.L1263
 19337              	.L1267:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 474


 19338              		.loc 1 7604 5 discriminator 11
 19339 0100 0C301BE5 		ldr	r3, [fp, #-12]
 19340 0104 233CA0E1 		lsr	r3, r3, #24
 19341 0108 030053E3 		cmp	r3, #3
 19342 010c 0100000A 		beq	.L1268
 19343              		.loc 1 7604 5 discriminator 12
 19344 0110 0130E0E3 		mvn	r3, #1
 19345              		.loc 1 7604 5
 19346 0114 9C0000EA 		b	.L1263
 19347              	.L1268:
 19348              		.loc 1 7604 5 discriminator 13
 19349 0118 1C301BE5 		ldr	r3, [fp, #-28]
 19350 011c 7F2003E2 		and	r2, r3, #127
 19351 0120 08301BE5 		ldr	r3, [fp, #-8]
 19352 0124 143093E5 		ldr	r3, [r3, #20]
 19353 0128 030052E1 		cmp	r2, r3
 19354 012c 0100003A 		bcc	.L1269
 19355              		.loc 1 7604 5 discriminator 14
 19356 0130 0230E0E3 		mvn	r3, #2
 19357              		.loc 1 7604 5
 19358 0134 940000EA 		b	.L1263
 19359              	.L1269:
 19360              		.loc 1 7604 5 discriminator 15
 19361 0138 1C301BE5 		ldr	r3, [fp, #-28]
 19362 013c 7F3003E2 		and	r3, r3, #127
 19363 0140 8322A0E1 		lsl	r2, r3, #5
 19364 0144 08301BE5 		ldr	r3, [fp, #-8]
 19365 0148 0C3093E5 		ldr	r3, [r3, #12]
 19366 014c 033082E0 		add	r3, r2, r3
 19367 0150 08300BE5 		str	r3, [fp, #-8]
 19368 0154 08301BE5 		ldr	r3, [fp, #-8]
 19369 0158 0300A0E1 		mov	r0, r3
 19370 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19371 0160 0C000BE5 		str	r0, [fp, #-12]
 19372              		.loc 1 7604 5 discriminator 1
 19373 0164 0C301BE5 		ldr	r3, [fp, #-12]
 19374 0168 FF3803E2 		and	r3, r3, #16711680
 19375 016c 020853E3 		cmp	r3, #131072
 19376 0170 0100001A 		bne	.L1270
 19377              		.loc 1 7604 5 discriminator 16
 19378 0174 0830E0E3 		mvn	r3, #8
 19379              		.loc 1 7604 5
 19380 0178 830000EA 		b	.L1263
 19381              	.L1270:
 19382              		.loc 1 7604 5 discriminator 17
 19383 017c 0C301BE5 		ldr	r3, [fp, #-12]
 19384 0180 233CA0E1 		lsr	r3, r3, #24
 19385 0184 030053E3 		cmp	r3, #3
 19386 0188 0100000A 		beq	.L1265
 19387              		.loc 1 7604 5 discriminator 18
 19388 018c 0130E0E3 		mvn	r3, #1
 19389              		.loc 1 7604 5
 19390 0190 7D0000EA 		b	.L1263
 19391              	.L1265:
7605:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
7606:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7607:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 475


 19392              		.loc 1 7607 5 is_stmt 1
 19393 0194 08301BE5 		ldr	r3, [fp, #-8]
 19394 0198 083093E5 		ldr	r3, [r3, #8]
 19395 019c 023003E2 		and	r3, r3, #2
 19396 01a0 000053E3 		cmp	r3, #0
 19397 01a4 0100001A 		bne	.L1271
 19398              		.loc 1 7607 5 is_stmt 0 discriminator 1
 19399 01a8 0630E0E3 		mvn	r3, #6
 19400              		.loc 1 7607 5
 19401 01ac 760000EA 		b	.L1263
 19402              	.L1271:
7608:../../Source/Kernel/rme_kernel.c ****     
7609:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7610:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Del);
 19403              		.loc 1 7610 5 is_stmt 1
 19404 01b0 08301BE5 		ldr	r3, [fp, #-8]
 19405 01b4 142093E5 		ldr	r2, [r3, #20]
 19406 01b8 20301BE5 		ldr	r3, [fp, #-32]
 19407 01bc 030052E1 		cmp	r2, r3
 19408 01c0 0100008A 		bhi	.L1272
 19409              		.loc 1 7610 5 is_stmt 0 discriminator 1
 19410 01c4 0230E0E3 		mvn	r3, #2
 19411              		.loc 1 7610 5
 19412 01c8 6F0000EA 		b	.L1263
 19413              	.L1272:
 19414              		.loc 1 7610 5 discriminator 2
 19415 01cc 20301BE5 		ldr	r3, [fp, #-32]
 19416 01d0 8322A0E1 		lsl	r2, r3, #5
 19417 01d4 08301BE5 		ldr	r3, [fp, #-8]
 19418 01d8 0C3093E5 		ldr	r3, [r3, #12]
 19419 01dc 033082E0 		add	r3, r2, r3
 19420 01e0 10300BE5 		str	r3, [fp, #-16]
7611:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
7612:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Inv_Del,Type_Stat,RME_CAP_TYPE_INV);
 19421              		.loc 1 7612 5 is_stmt 1
 19422 01e4 10301BE5 		ldr	r3, [fp, #-16]
 19423 01e8 0300A0E1 		mov	r0, r3
 19424 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19425 01f0 0C000BE5 		str	r0, [fp, #-12]
 19426              		.loc 1 7612 5 is_stmt 0 discriminator 1
 19427 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 19428 01f8 FF3803E2 		and	r3, r3, #16711680
 19429 01fc 020853E3 		cmp	r3, #131072
 19430 0200 0100000A 		beq	.L1273
 19431 0204 0830E0E3 		mvn	r3, #8
 19432              		.loc 1 7612 5
 19433 0208 5F0000EA 		b	.L1263
 19434              	.L1273:
 19435              		.loc 1 7612 5 discriminator 2
 19436 020c 0C301BE5 		ldr	r3, [fp, #-12]
 19437 0210 233CA0E1 		lsr	r3, r3, #24
 19438 0214 070053E3 		cmp	r3, #7
 19439 0218 0100000A 		beq	.L1274
 19440              		.loc 1 7612 5 discriminator 3
 19441 021c 0130E0E3 		mvn	r3, #1
 19442              		.loc 1 7612 5
 19443 0220 590000EA 		b	.L1263
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 476


 19444              	.L1274:
 19445              		.loc 1 7612 5 discriminator 4
 19446 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19447 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19448 022c 002093E5 		ldr	r2, [r3]
 19449 0230 10301BE5 		ldr	r3, [fp, #-16]
 19450 0234 103093E5 		ldr	r3, [r3, #16]
 19451 0238 0310A0E1 		mov	r1, r3
 19452 023c 0200A0E1 		mov	r0, r2
 19453 0240 FEFFFFEB 		bl	_RME_Diff
 19454 0244 0030A0E1 		mov	r3, r0
 19455              		.loc 1 7612 5 discriminator 1
 19456 0248 0A0053E3 		cmp	r3, #10
 19457 024c 0100008A 		bhi	.L1275
 19458              		.loc 1 7612 5 discriminator 5
 19459 0250 0730E0E3 		mvn	r3, #7
 19460              		.loc 1 7612 5
 19461 0254 4C0000EA 		b	.L1263
 19462              	.L1275:
 19463              		.loc 1 7612 5 discriminator 6
 19464 0258 10301BE5 		ldr	r3, [fp, #-16]
 19465 025c 043093E5 		ldr	r3, [r3, #4]
 19466 0260 000053E3 		cmp	r3, #0
 19467 0264 0B00000A 		beq	.L1276
 19468              		.loc 1 7612 5 discriminator 7
 19469 0268 0C301BE5 		ldr	r3, [fp, #-12]
 19470 026c 7330FFE6 		uxth	r3, r3
 19471 0270 000053E3 		cmp	r3, #0
 19472 0274 0500001A 		bne	.L1277
 19473              		.loc 1 7612 5 discriminator 9
 19474 0278 10001BE5 		ldr	r0, [fp, #-16]
 19475 027c 0C301BE5 		ldr	r3, [fp, #-12]
 19476 0280 FF38C3E3 		bic	r3, r3, #16711680
 19477 0284 0320A0E1 		mov	r2, r3
 19478 0288 0C101BE5 		ldr	r1, [fp, #-12]
 19479 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19480              	.L1277:
 19481              		.loc 1 7612 5 discriminator 11
 19482 0290 0530E0E3 		mvn	r3, #5
 19483              		.loc 1 7612 5
 19484 0294 3C0000EA 		b	.L1263
 19485              	.L1276:
 19486              		.loc 1 7612 5 discriminator 8
 19487 0298 0C301BE5 		ldr	r3, [fp, #-12]
 19488 029c 7330FFE6 		uxth	r3, r3
 19489 02a0 000053E3 		cmp	r3, #0
 19490 02a4 0800000A 		beq	.L1278
 19491              		.loc 1 7612 5 discriminator 12
 19492 02a8 003000E3 		movw	r3, #:lower16:.LC2
 19493 02ac 003040E3 		movt	r3, #:upper16:.LC2
 19494 02b0 002000E3 		movw	r2, #:lower16:.LC3
 19495 02b4 002040E3 		movt	r2, #:upper16:.LC3
 19496 02b8 BC1D01E3 		movw	r1, #7612
 19497 02bc 000000E3 		movw	r0, #:lower16:.LC4
 19498 02c0 000040E3 		movt	r0, #:upper16:.LC4
 19499 02c4 FEFFFFEB 		bl	RME_Log
 19500              	.L1279:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 477


 19501              		.loc 1 7612 5
 19502 02c8 FEFFFFEA 		b	.L1279
 19503              	.L1278:
7613:../../Source/Kernel/rme_kernel.c ****     
7614:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation */
7615:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Del,struct RME_Inv_Struct*);
 19504              		.loc 1 7615 16 is_stmt 1
 19505 02cc 10301BE5 		ldr	r3, [fp, #-16]
 19506 02d0 0C3093E5 		ldr	r3, [r3, #12]
 19507              		.loc 1 7615 15
 19508 02d4 14300BE5 		str	r3, [fp, #-20]
7616:../../Source/Kernel/rme_kernel.c ****     
7617:../../Source/Kernel/rme_kernel.c ****     /* See if the invocation is currently being used. If yes, we cannot delete it */
7618:../../Source/Kernel/rme_kernel.c ****     if(Invocation->Thd_Act!=RME_NULL)
 19509              		.loc 1 7618 18
 19510 02d8 14301BE5 		ldr	r3, [fp, #-20]
 19511 02dc 0C3093E5 		ldr	r3, [r3, #12]
 19512              		.loc 1 7618 7
 19513 02e0 000053E3 		cmp	r3, #0
 19514 02e4 0700000A 		beq	.L1280
7619:../../Source/Kernel/rme_kernel.c ****     {
7620:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7621:../../Source/Kernel/rme_kernel.c **** 
7622:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Inv_Del,Type_Stat);
 19515              		.loc 1 7622 9
 19516 02e8 10001BE5 		ldr	r0, [fp, #-16]
 19517 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 19518 02f0 FF38C3E3 		bic	r3, r3, #16711680
 19519 02f4 0320A0E1 		mov	r2, r3
 19520 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 19521 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
7623:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19522              		.loc 1 7623 16
 19523 0300 4B3FE0E3 		mvn	r3, #300
 19524 0304 200000EA 		b	.L1263
 19525              	.L1280:
7624:../../Source/Kernel/rme_kernel.c ****     }
7625:../../Source/Kernel/rme_kernel.c ****     else
7626:../../Source/Kernel/rme_kernel.c ****     {
7627:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7628:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7629:../../Source/Kernel/rme_kernel.c ****     }
7630:../../Source/Kernel/rme_kernel.c ****     
7631:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
7632:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Inv_Del,Type_Stat);
 19526              		.loc 1 7632 5
 19527 0308 10301BE5 		ldr	r3, [fp, #-16]
 19528 030c 0020A0E3 		mov	r2, #0
 19529 0310 0C101BE5 		ldr	r1, [fp, #-12]
 19530 0314 0300A0E1 		mov	r0, r3
 19531 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19532 031c 0030A0E1 		mov	r3, r0
 19533              		.loc 1 7632 5 is_stmt 0 discriminator 1
 19534 0320 000053E3 		cmp	r3, #0
 19535 0324 0100001A 		bne	.L1281
 19536 0328 0030E0E3 		mvn	r3, #0
 19537              		.loc 1 7632 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 478


 19538 032c 160000EA 		b	.L1263
 19539              	.L1281:
7633:../../Source/Kernel/rme_kernel.c ****     
7634:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
7635:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Invocation->Prc->Head.Root_Ref), -1);
 19540              		.loc 1 7635 5 is_stmt 1
 19541 0330 14301BE5 		ldr	r3, [fp, #-20]
 19542 0334 083093E5 		ldr	r3, [r3, #8]
 19543 0338 043083E2 		add	r3, r3, #4
 19544 033c 0010E0E3 		mvn	r1, #0
 19545 0340 0300A0E1 		mov	r0, r3
 19546 0344 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7636:../../Source/Kernel/rme_kernel.c ****     
7637:../../Source/Kernel/rme_kernel.c ****     /* Try to clear the area - this must be successful */
7638:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Invocation,RME_INV_SIZE)==0);
 19547              		.loc 1 7638 5
 19548 0348 14301BE5 		ldr	r3, [fp, #-20]
 19549 034c 2410A0E3 		mov	r1, #36
 19550 0350 0300A0E1 		mov	r0, r3
 19551 0354 FEFFFFEB 		bl	_RME_Kot_Erase
 19552 0358 0030A0E1 		mov	r3, r0
 19553              		.loc 1 7638 5 is_stmt 0 discriminator 1
 19554 035c 000053E3 		cmp	r3, #0
 19555 0360 0800000A 		beq	.L1282
 19556 0364 003000E3 		movw	r3, #:lower16:.LC2
 19557 0368 003040E3 		movt	r3, #:upper16:.LC2
 19558 036c 002000E3 		movw	r2, #:lower16:.LC3
 19559 0370 002040E3 		movt	r2, #:upper16:.LC3
 19560 0374 D61D01E3 		movw	r1, #7638
 19561 0378 000000E3 		movw	r0, #:lower16:.LC4
 19562 037c 000040E3 		movt	r0, #:upper16:.LC4
 19563 0380 FEFFFFEB 		bl	RME_Log
 19564              	.L1283:
 19565              		.loc 1 7638 5
 19566 0384 FEFFFFEA 		b	.L1283
 19567              	.L1282:
7639:../../Source/Kernel/rme_kernel.c ****     
7640:../../Source/Kernel/rme_kernel.c ****     return 0;
 19568              		.loc 1 7640 12 is_stmt 1
 19569 0388 0030A0E3 		mov	r3, #0
 19570              	.L1263:
7641:../../Source/Kernel/rme_kernel.c **** }
 19571              		.loc 1 7641 1
 19572 038c 0300A0E1 		mov	r0, r3
 19573 0390 04D04BE2 		sub	sp, fp, #4
 19574              		.cfi_def_cfa 13, 8
 19575              		@ sp needed
 19576 0394 0088BDE8 		pop	{fp, pc}
 19577              		.cfi_endproc
 19578              	.LFE73:
 19580              		.section	.text._RME_Inv_Set,"ax",%progbits
 19581              		.align	2
 19582              		.syntax unified
 19583              		.arm
 19585              	_RME_Inv_Set:
 19586              	.LFB74:
7642:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Del *************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 479


7643:../../Source/Kernel/rme_kernel.c **** 
7644:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Set ******************************************************
7645:../../Source/Kernel/rme_kernel.c **** Description : Set an invocation stub's entry point and stack. The registers will
7646:../../Source/Kernel/rme_kernel.c ****               be initialized with these contents.
7647:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7648:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7649:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7650:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry of the thread.
7651:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
7652:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc_Ret - If there is an exception in this
7653:../../Source/Kernel/rme_kernel.c ****                                      invocation, return immediately, or wait
7654:../../Source/Kernel/rme_kernel.c ****                                      for fault handling?
7655:../../Source/Kernel/rme_kernel.c ****                                      If 1, we return directly on fault.
7656:../../Source/Kernel/rme_kernel.c **** Output      : None.
7657:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7658:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7659:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Set(struct RME_Cap_Cpt* Cpt,
7660:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7661:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry,
7662:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Stack,
7663:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc_Ret)
7664:../../Source/Kernel/rme_kernel.c **** {
 19587              		.loc 1 7664 1
 19588              		.cfi_startproc
 19589              		@ args = 4, pretend = 0, frame = 32
 19590              		@ frame_needed = 1, uses_anonymous_args = 0
 19591 0000 00482DE9 		push	{fp, lr}
 19592              		.cfi_def_cfa_offset 8
 19593              		.cfi_offset 11, -8
 19594              		.cfi_offset 14, -4
 19595 0004 04B08DE2 		add	fp, sp, #4
 19596              		.cfi_def_cfa 11, 4
 19597 0008 20D04DE2 		sub	sp, sp, #32
 19598 000c 18000BE5 		str	r0, [fp, #-24]
 19599 0010 1C100BE5 		str	r1, [fp, #-28]
 19600 0014 20200BE5 		str	r2, [fp, #-32]
 19601 0018 24300BE5 		str	r3, [fp, #-36]
7665:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7666:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Inv_Struct* Invocation;
7667:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7668:../../Source/Kernel/rme_kernel.c ****     
7669:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7670:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19602              		.loc 1 7670 5
 19603 001c 1C301BE5 		ldr	r3, [fp, #-28]
 19604 0020 803003E2 		and	r3, r3, #128
 19605 0024 000053E3 		cmp	r3, #0
 19606 0028 1C00001A 		bne	.L1285
 19607              		.loc 1 7670 5 is_stmt 0 discriminator 1
 19608 002c 18301BE5 		ldr	r3, [fp, #-24]
 19609 0030 142093E5 		ldr	r2, [r3, #20]
 19610 0034 1C301BE5 		ldr	r3, [fp, #-28]
 19611 0038 030052E1 		cmp	r2, r3
 19612 003c 0100008A 		bhi	.L1286
 19613              		.loc 1 7670 5 discriminator 3
 19614 0040 0230E0E3 		mvn	r3, #2
 19615              		.loc 1 7670 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 480


 19616 0044 670000EA 		b	.L1287
 19617              	.L1286:
 19618              		.loc 1 7670 5 discriminator 4
 19619 0048 1C301BE5 		ldr	r3, [fp, #-28]
 19620 004c 8322A0E1 		lsl	r2, r3, #5
 19621 0050 18301BE5 		ldr	r3, [fp, #-24]
 19622 0054 0C3093E5 		ldr	r3, [r3, #12]
 19623 0058 033082E0 		add	r3, r2, r3
 19624 005c 08300BE5 		str	r3, [fp, #-8]
 19625 0060 08301BE5 		ldr	r3, [fp, #-8]
 19626 0064 0300A0E1 		mov	r0, r3
 19627 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19628 006c 0C000BE5 		str	r0, [fp, #-12]
 19629              		.loc 1 7670 5 discriminator 1
 19630 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19631 0074 FF3803E2 		and	r3, r3, #16711680
 19632 0078 020853E3 		cmp	r3, #131072
 19633 007c 0100001A 		bne	.L1288
 19634              		.loc 1 7670 5 discriminator 5
 19635 0080 0830E0E3 		mvn	r3, #8
 19636              		.loc 1 7670 5
 19637 0084 570000EA 		b	.L1287
 19638              	.L1288:
 19639              		.loc 1 7670 5 discriminator 6
 19640 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19641 008c 233CA0E1 		lsr	r3, r3, #24
 19642 0090 070053E3 		cmp	r3, #7
 19643 0094 3F00000A 		beq	.L1289
 19644              		.loc 1 7670 5 discriminator 7
 19645 0098 0130E0E3 		mvn	r3, #1
 19646              		.loc 1 7670 5
 19647 009c 510000EA 		b	.L1287
 19648              	.L1285:
 19649              		.loc 1 7670 5 discriminator 2
 19650 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 19651 00a4 2324A0E1 		lsr	r2, r3, #8
 19652 00a8 18301BE5 		ldr	r3, [fp, #-24]
 19653 00ac 143093E5 		ldr	r3, [r3, #20]
 19654 00b0 030052E1 		cmp	r2, r3
 19655 00b4 0100003A 		bcc	.L1290
 19656              		.loc 1 7670 5 discriminator 8
 19657 00b8 0230E0E3 		mvn	r3, #2
 19658              		.loc 1 7670 5
 19659 00bc 490000EA 		b	.L1287
 19660              	.L1290:
 19661              		.loc 1 7670 5 discriminator 9
 19662 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 19663 00c4 2334A0E1 		lsr	r3, r3, #8
 19664 00c8 8322A0E1 		lsl	r2, r3, #5
 19665 00cc 18301BE5 		ldr	r3, [fp, #-24]
 19666 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19667 00d4 033082E0 		add	r3, r2, r3
 19668 00d8 08300BE5 		str	r3, [fp, #-8]
 19669 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19670 00e0 0300A0E1 		mov	r0, r3
 19671 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19672 00e8 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 481


 19673              		.loc 1 7670 5 discriminator 1
 19674 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19675 00f0 FF3803E2 		and	r3, r3, #16711680
 19676 00f4 020853E3 		cmp	r3, #131072
 19677 00f8 0100001A 		bne	.L1291
 19678              		.loc 1 7670 5 discriminator 10
 19679 00fc 0830E0E3 		mvn	r3, #8
 19680              		.loc 1 7670 5
 19681 0100 380000EA 		b	.L1287
 19682              	.L1291:
 19683              		.loc 1 7670 5 discriminator 11
 19684 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19685 0108 233CA0E1 		lsr	r3, r3, #24
 19686 010c 030053E3 		cmp	r3, #3
 19687 0110 0100000A 		beq	.L1292
 19688              		.loc 1 7670 5 discriminator 12
 19689 0114 0130E0E3 		mvn	r3, #1
 19690              		.loc 1 7670 5
 19691 0118 320000EA 		b	.L1287
 19692              	.L1292:
 19693              		.loc 1 7670 5 discriminator 13
 19694 011c 1C301BE5 		ldr	r3, [fp, #-28]
 19695 0120 7F2003E2 		and	r2, r3, #127
 19696 0124 08301BE5 		ldr	r3, [fp, #-8]
 19697 0128 143093E5 		ldr	r3, [r3, #20]
 19698 012c 030052E1 		cmp	r2, r3
 19699 0130 0100003A 		bcc	.L1293
 19700              		.loc 1 7670 5 discriminator 14
 19701 0134 0230E0E3 		mvn	r3, #2
 19702              		.loc 1 7670 5
 19703 0138 2A0000EA 		b	.L1287
 19704              	.L1293:
 19705              		.loc 1 7670 5 discriminator 15
 19706 013c 1C301BE5 		ldr	r3, [fp, #-28]
 19707 0140 7F3003E2 		and	r3, r3, #127
 19708 0144 8322A0E1 		lsl	r2, r3, #5
 19709 0148 08301BE5 		ldr	r3, [fp, #-8]
 19710 014c 0C3093E5 		ldr	r3, [r3, #12]
 19711 0150 033082E0 		add	r3, r2, r3
 19712 0154 08300BE5 		str	r3, [fp, #-8]
 19713 0158 08301BE5 		ldr	r3, [fp, #-8]
 19714 015c 0300A0E1 		mov	r0, r3
 19715 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19716 0164 0C000BE5 		str	r0, [fp, #-12]
 19717              		.loc 1 7670 5 discriminator 1
 19718 0168 0C301BE5 		ldr	r3, [fp, #-12]
 19719 016c FF3803E2 		and	r3, r3, #16711680
 19720 0170 020853E3 		cmp	r3, #131072
 19721 0174 0100001A 		bne	.L1294
 19722              		.loc 1 7670 5 discriminator 16
 19723 0178 0830E0E3 		mvn	r3, #8
 19724              		.loc 1 7670 5
 19725 017c 190000EA 		b	.L1287
 19726              	.L1294:
 19727              		.loc 1 7670 5 discriminator 17
 19728 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19729 0184 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 482


 19730 0188 070053E3 		cmp	r3, #7
 19731 018c 0100000A 		beq	.L1289
 19732              		.loc 1 7670 5 discriminator 18
 19733 0190 0130E0E3 		mvn	r3, #1
 19734              		.loc 1 7670 5
 19735 0194 130000EA 		b	.L1287
 19736              	.L1289:
7671:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7672:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7673:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_SET);
 19737              		.loc 1 7673 5 is_stmt 1
 19738 0198 08301BE5 		ldr	r3, [fp, #-8]
 19739 019c 083093E5 		ldr	r3, [r3, #8]
 19740 01a0 013003E2 		and	r3, r3, #1
 19741 01a4 000053E3 		cmp	r3, #0
 19742 01a8 0100001A 		bne	.L1295
 19743              		.loc 1 7673 5 is_stmt 0 discriminator 1
 19744 01ac 0630E0E3 		mvn	r3, #6
 19745              		.loc 1 7673 5
 19746 01b0 0C0000EA 		b	.L1287
 19747              	.L1295:
7674:../../Source/Kernel/rme_kernel.c ****     
7675:../../Source/Kernel/rme_kernel.c ****     /* Commit the change - we do not care if the invocation is in use, it is
7676:../../Source/Kernel/rme_kernel.c ****      * the user's responsibility to guarantee the integrity of applications */
7677:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19748              		.loc 1 7677 16 is_stmt 1
 19749 01b4 08301BE5 		ldr	r3, [fp, #-8]
 19750 01b8 0C3093E5 		ldr	r3, [r3, #12]
 19751              		.loc 1 7677 15
 19752 01bc 10300BE5 		str	r3, [fp, #-16]
7678:../../Source/Kernel/rme_kernel.c ****     Invocation->Entry=Entry;
 19753              		.loc 1 7678 22
 19754 01c0 10301BE5 		ldr	r3, [fp, #-16]
 19755 01c4 20201BE5 		ldr	r2, [fp, #-32]
 19756 01c8 102083E5 		str	r2, [r3, #16]
7679:../../Source/Kernel/rme_kernel.c ****     Invocation->Stack=Stack;
 19757              		.loc 1 7679 22
 19758 01cc 10301BE5 		ldr	r3, [fp, #-16]
 19759 01d0 24201BE5 		ldr	r2, [fp, #-36]
 19760 01d4 142083E5 		str	r2, [r3, #20]
7680:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=Is_Exc_Ret;
 19761              		.loc 1 7680 27
 19762 01d8 10301BE5 		ldr	r3, [fp, #-16]
 19763 01dc 04209BE5 		ldr	r2, [fp, #4]
 19764 01e0 182083E5 		str	r2, [r3, #24]
7681:../../Source/Kernel/rme_kernel.c ****     
7682:../../Source/Kernel/rme_kernel.c ****     return 0;
 19765              		.loc 1 7682 12
 19766 01e4 0030A0E3 		mov	r3, #0
 19767              	.L1287:
7683:../../Source/Kernel/rme_kernel.c **** }
 19768              		.loc 1 7683 1
 19769 01e8 0300A0E1 		mov	r0, r3
 19770 01ec 04D04BE2 		sub	sp, fp, #4
 19771              		.cfi_def_cfa 13, 8
 19772              		@ sp needed
 19773 01f0 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 483


 19774              		.cfi_endproc
 19775              	.LFE74:
 19777              		.section	.text._RME_Inv_Act,"ax",%progbits
 19778              		.align	2
 19779              		.syntax unified
 19780              		.arm
 19782              	_RME_Inv_Act:
 19783              	.LFB75:
7684:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Set *************************************************/
7685:../../Source/Kernel/rme_kernel.c **** 
7686:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Act ******************************************************
7687:../../Source/Kernel/rme_kernel.c **** Description : Call the invocation stub. One parameter is guaranteed; however, 
7688:../../Source/Kernel/rme_kernel.c ****               some platforms may provide more than that.
7689:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7690:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7691:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The invocation stub.
7692:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7693:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter for the call.
7694:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7695:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7696:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Act(struct RME_Cap_Cpt* Cpt, 
7697:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7698:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7699:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param)
7700:../../Source/Kernel/rme_kernel.c **** {
 19784              		.loc 1 7700 1
 19785              		.cfi_startproc
 19786              		@ args = 0, pretend = 0, frame = 40
 19787              		@ frame_needed = 1, uses_anonymous_args = 0
 19788 0000 00482DE9 		push	{fp, lr}
 19789              		.cfi_def_cfa_offset 8
 19790              		.cfi_offset 11, -8
 19791              		.cfi_offset 14, -4
 19792 0004 04B08DE2 		add	fp, sp, #4
 19793              		.cfi_def_cfa 11, 4
 19794 0008 30D04DE2 		sub	sp, sp, #48
 19795 000c 20000BE5 		str	r0, [fp, #-32]
 19796 0010 24100BE5 		str	r1, [fp, #-36]
 19797 0014 28200BE5 		str	r2, [fp, #-40]
 19798 0018 2C300BE5 		str	r3, [fp, #-44]
7701:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7702:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7703:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7704:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Act;
7705:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7706:../../Source/Kernel/rme_kernel.c ****     
7707:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
7708:../../Source/Kernel/rme_kernel.c ****     /* Check if the current invocation stack has reached its limit */
7709:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
7710:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Ctx.Invstk_Depth>=RME_INV_DEPTH_MAX)
7711:../../Source/Kernel/rme_kernel.c ****     {
7712:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7713:../../Source/Kernel/rme_kernel.c **** 
7714:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
7715:../../Source/Kernel/rme_kernel.c ****     }
7716:../../Source/Kernel/rme_kernel.c ****     else
7717:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 484


7718:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7719:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7720:../../Source/Kernel/rme_kernel.c ****     }
7721:../../Source/Kernel/rme_kernel.c **** #endif
7722:../../Source/Kernel/rme_kernel.c **** 
7723:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7724:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19799              		.loc 1 7724 5
 19800 001c 28301BE5 		ldr	r3, [fp, #-40]
 19801 0020 803003E2 		and	r3, r3, #128
 19802 0024 000053E3 		cmp	r3, #0
 19803 0028 1C00001A 		bne	.L1297
 19804              		.loc 1 7724 5 is_stmt 0 discriminator 1
 19805 002c 20301BE5 		ldr	r3, [fp, #-32]
 19806 0030 142093E5 		ldr	r2, [r3, #20]
 19807 0034 28301BE5 		ldr	r3, [fp, #-40]
 19808 0038 030052E1 		cmp	r2, r3
 19809 003c 0100008A 		bhi	.L1298
 19810              		.loc 1 7724 5 discriminator 3
 19811 0040 0230E0E3 		mvn	r3, #2
 19812              		.loc 1 7724 5
 19813 0044 A60000EA 		b	.L1299
 19814              	.L1298:
 19815              		.loc 1 7724 5 discriminator 4
 19816 0048 28301BE5 		ldr	r3, [fp, #-40]
 19817 004c 8322A0E1 		lsl	r2, r3, #5
 19818 0050 20301BE5 		ldr	r3, [fp, #-32]
 19819 0054 0C3093E5 		ldr	r3, [r3, #12]
 19820 0058 033082E0 		add	r3, r2, r3
 19821 005c 08300BE5 		str	r3, [fp, #-8]
 19822 0060 08301BE5 		ldr	r3, [fp, #-8]
 19823 0064 0300A0E1 		mov	r0, r3
 19824 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19825 006c 0C000BE5 		str	r0, [fp, #-12]
 19826              		.loc 1 7724 5 discriminator 1
 19827 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19828 0074 FF3803E2 		and	r3, r3, #16711680
 19829 0078 020853E3 		cmp	r3, #131072
 19830 007c 0100001A 		bne	.L1300
 19831              		.loc 1 7724 5 discriminator 5
 19832 0080 0830E0E3 		mvn	r3, #8
 19833              		.loc 1 7724 5
 19834 0084 960000EA 		b	.L1299
 19835              	.L1300:
 19836              		.loc 1 7724 5 discriminator 6
 19837 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19838 008c 233CA0E1 		lsr	r3, r3, #24
 19839 0090 070053E3 		cmp	r3, #7
 19840 0094 3F00000A 		beq	.L1301
 19841              		.loc 1 7724 5 discriminator 7
 19842 0098 0130E0E3 		mvn	r3, #1
 19843              		.loc 1 7724 5
 19844 009c 900000EA 		b	.L1299
 19845              	.L1297:
 19846              		.loc 1 7724 5 discriminator 2
 19847 00a0 28301BE5 		ldr	r3, [fp, #-40]
 19848 00a4 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 485


 19849 00a8 20301BE5 		ldr	r3, [fp, #-32]
 19850 00ac 143093E5 		ldr	r3, [r3, #20]
 19851 00b0 030052E1 		cmp	r2, r3
 19852 00b4 0100003A 		bcc	.L1302
 19853              		.loc 1 7724 5 discriminator 8
 19854 00b8 0230E0E3 		mvn	r3, #2
 19855              		.loc 1 7724 5
 19856 00bc 880000EA 		b	.L1299
 19857              	.L1302:
 19858              		.loc 1 7724 5 discriminator 9
 19859 00c0 28301BE5 		ldr	r3, [fp, #-40]
 19860 00c4 2334A0E1 		lsr	r3, r3, #8
 19861 00c8 8322A0E1 		lsl	r2, r3, #5
 19862 00cc 20301BE5 		ldr	r3, [fp, #-32]
 19863 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19864 00d4 033082E0 		add	r3, r2, r3
 19865 00d8 08300BE5 		str	r3, [fp, #-8]
 19866 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19867 00e0 0300A0E1 		mov	r0, r3
 19868 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19869 00e8 0C000BE5 		str	r0, [fp, #-12]
 19870              		.loc 1 7724 5 discriminator 1
 19871 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19872 00f0 FF3803E2 		and	r3, r3, #16711680
 19873 00f4 020853E3 		cmp	r3, #131072
 19874 00f8 0100001A 		bne	.L1303
 19875              		.loc 1 7724 5 discriminator 10
 19876 00fc 0830E0E3 		mvn	r3, #8
 19877              		.loc 1 7724 5
 19878 0100 770000EA 		b	.L1299
 19879              	.L1303:
 19880              		.loc 1 7724 5 discriminator 11
 19881 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19882 0108 233CA0E1 		lsr	r3, r3, #24
 19883 010c 030053E3 		cmp	r3, #3
 19884 0110 0100000A 		beq	.L1304
 19885              		.loc 1 7724 5 discriminator 12
 19886 0114 0130E0E3 		mvn	r3, #1
 19887              		.loc 1 7724 5
 19888 0118 710000EA 		b	.L1299
 19889              	.L1304:
 19890              		.loc 1 7724 5 discriminator 13
 19891 011c 28301BE5 		ldr	r3, [fp, #-40]
 19892 0120 7F2003E2 		and	r2, r3, #127
 19893 0124 08301BE5 		ldr	r3, [fp, #-8]
 19894 0128 143093E5 		ldr	r3, [r3, #20]
 19895 012c 030052E1 		cmp	r2, r3
 19896 0130 0100003A 		bcc	.L1305
 19897              		.loc 1 7724 5 discriminator 14
 19898 0134 0230E0E3 		mvn	r3, #2
 19899              		.loc 1 7724 5
 19900 0138 690000EA 		b	.L1299
 19901              	.L1305:
 19902              		.loc 1 7724 5 discriminator 15
 19903 013c 28301BE5 		ldr	r3, [fp, #-40]
 19904 0140 7F3003E2 		and	r3, r3, #127
 19905 0144 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 486


 19906 0148 08301BE5 		ldr	r3, [fp, #-8]
 19907 014c 0C3093E5 		ldr	r3, [r3, #12]
 19908 0150 033082E0 		add	r3, r2, r3
 19909 0154 08300BE5 		str	r3, [fp, #-8]
 19910 0158 08301BE5 		ldr	r3, [fp, #-8]
 19911 015c 0300A0E1 		mov	r0, r3
 19912 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19913 0164 0C000BE5 		str	r0, [fp, #-12]
 19914              		.loc 1 7724 5 discriminator 1
 19915 0168 0C301BE5 		ldr	r3, [fp, #-12]
 19916 016c FF3803E2 		and	r3, r3, #16711680
 19917 0170 020853E3 		cmp	r3, #131072
 19918 0174 0100001A 		bne	.L1306
 19919              		.loc 1 7724 5 discriminator 16
 19920 0178 0830E0E3 		mvn	r3, #8
 19921              		.loc 1 7724 5
 19922 017c 580000EA 		b	.L1299
 19923              	.L1306:
 19924              		.loc 1 7724 5 discriminator 17
 19925 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19926 0184 233CA0E1 		lsr	r3, r3, #24
 19927 0188 070053E3 		cmp	r3, #7
 19928 018c 0100000A 		beq	.L1301
 19929              		.loc 1 7724 5 discriminator 18
 19930 0190 0130E0E3 		mvn	r3, #1
 19931              		.loc 1 7724 5
 19932 0194 520000EA 		b	.L1299
 19933              	.L1301:
7725:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7726:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7727:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_ACT);
 19934              		.loc 1 7727 5 is_stmt 1
 19935 0198 08301BE5 		ldr	r3, [fp, #-8]
 19936 019c 083093E5 		ldr	r3, [r3, #8]
 19937 01a0 023003E2 		and	r3, r3, #2
 19938 01a4 000053E3 		cmp	r3, #0
 19939 01a8 0100001A 		bne	.L1307
 19940              		.loc 1 7727 5 is_stmt 0 discriminator 1
 19941 01ac 0630E0E3 		mvn	r3, #6
 19942              		.loc 1 7727 5
 19943 01b0 4B0000EA 		b	.L1299
 19944              	.L1307:
7728:../../Source/Kernel/rme_kernel.c **** 
7729:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation struct */
7730:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19945              		.loc 1 7730 16 is_stmt 1
 19946 01b4 08301BE5 		ldr	r3, [fp, #-8]
 19947 01b8 0C3093E5 		ldr	r3, [r3, #12]
 19948              		.loc 1 7730 15
 19949 01bc 10300BE5 		str	r3, [fp, #-16]
7731:../../Source/Kernel/rme_kernel.c ****     /* Check if this invocation port is already active */
7732:../../Source/Kernel/rme_kernel.c ****     Thd_Act=Invocation->Thd_Act;
 19950              		.loc 1 7732 12
 19951 01c0 10301BE5 		ldr	r3, [fp, #-16]
 19952 01c4 0C3093E5 		ldr	r3, [r3, #12]
 19953 01c8 14300BE5 		str	r3, [fp, #-20]
7733:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Thd_Act!=0U))
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 487


 19954              		.loc 1 7733 7
 19955 01cc 14301BE5 		ldr	r3, [fp, #-20]
 19956 01d0 000053E3 		cmp	r3, #0
 19957 01d4 0100000A 		beq	.L1308
7734:../../Source/Kernel/rme_kernel.c ****     {
7735:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7736:../../Source/Kernel/rme_kernel.c **** 
7737:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19958              		.loc 1 7737 16
 19959 01d8 4B3FE0E3 		mvn	r3, #300
 19960 01dc 400000EA 		b	.L1299
 19961              	.L1308:
7738:../../Source/Kernel/rme_kernel.c ****     }
7739:../../Source/Kernel/rme_kernel.c ****     else
7740:../../Source/Kernel/rme_kernel.c ****     {
7741:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7742:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7743:../../Source/Kernel/rme_kernel.c ****     }
7744:../../Source/Kernel/rme_kernel.c **** 
7745:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX==0U)
7746:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 19962              		.loc 1 7746 12
 19963 01e0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 19964 01e4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 19965 01e8 043093E5 		ldr	r3, [r3, #4]
 19966 01ec 18300BE5 		str	r3, [fp, #-24]
7747:../../Source/Kernel/rme_kernel.c **** #endif
7748:../../Source/Kernel/rme_kernel.c ****     
7749:../../Source/Kernel/rme_kernel.c ****     /* Try to do CAS and activate this port */
7750:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_COMP_SWAP((volatile rme_ptr_t*)&(Invocation->Thd_Act),
 19967              		.loc 1 7750 8
 19968 01f0 10301BE5 		ldr	r3, [fp, #-16]
 19969 01f4 0C3083E2 		add	r3, r3, #12
 19970 01f8 14101BE5 		ldr	r1, [fp, #-20]
 19971 01fc 18201BE5 		ldr	r2, [fp, #-24]
 19972 0200 0300A0E1 		mov	r0, r3
 19973 0204 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19974 0208 0030A0E1 		mov	r3, r0
 19975              		.loc 1 7750 7 discriminator 1
 19976 020c 000053E3 		cmp	r3, #0
 19977 0210 0100001A 		bne	.L1309
7751:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Act,
7752:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Cur)==RME_CASFAIL))
7753:../../Source/Kernel/rme_kernel.c ****     {
7754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7755:../../Source/Kernel/rme_kernel.c **** 
7756:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19978              		.loc 1 7756 16
 19979 0214 4B3FE0E3 		mvn	r3, #300
 19980 0218 310000EA 		b	.L1299
 19981              	.L1309:
7757:../../Source/Kernel/rme_kernel.c ****     }
7758:../../Source/Kernel/rme_kernel.c ****     else
7759:../../Source/Kernel/rme_kernel.c ****     {
7760:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7761:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7762:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 488


7763:../../Source/Kernel/rme_kernel.c **** 
7764:../../Source/Kernel/rme_kernel.c ****     /* Save whatever is needed to return to the point - normally only SP and IP needed
7765:../../Source/Kernel/rme_kernel.c ****      * because all other registers, including the coprocessor registers, are saved at
7766:../../Source/Kernel/rme_kernel.c ****      * user-level. We do not set the return value because it will be set by Inv_Ret.
7767:../../Source/Kernel/rme_kernel.c ****      * The coprocessor state will be consistent across the call */
7768:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Save(&(Invocation->Ret),Reg);
 19982              		.loc 1 7768 5
 19983 021c 10301BE5 		ldr	r3, [fp, #-16]
 19984 0220 1C3083E2 		add	r3, r3, #28
 19985 0224 24101BE5 		ldr	r1, [fp, #-36]
 19986 0228 0300A0E1 		mov	r0, r3
 19987 022c FEFFFFEB 		bl	__RME_Inv_Reg_Save
7769:../../Source/Kernel/rme_kernel.c ****     /* Push this into the stack: insert after the thread list header */
7770:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Invocation->Head),
 19988              		.loc 1 7770 5
 19989 0230 10001BE5 		ldr	r0, [fp, #-16]
 19990 0234 18301BE5 		ldr	r3, [fp, #-24]
 19991 0238 4C1083E2 		add	r1, r3, #76
 19992 023c 18301BE5 		ldr	r3, [fp, #-24]
 19993 0240 4C3093E5 		ldr	r3, [r3, #76]
 19994 0244 0320A0E1 		mov	r2, r3
 19995 0248 FEFFFFEB 		bl	_RME_List_Ins
7771:../../Source/Kernel/rme_kernel.c ****                   &(Thd_Cur->Ctx.Invstk),
7772:../../Source/Kernel/rme_kernel.c ****                   Thd_Cur->Ctx.Invstk.Next);
7773:../../Source/Kernel/rme_kernel.c ****     /* Increase invocation depth - no atomic operation needed */
7774:../../Source/Kernel/rme_kernel.c ****     Thd_Cur->Ctx.Invstk_Depth++;
 19996              		.loc 1 7774 17
 19997 024c 18301BE5 		ldr	r3, [fp, #-24]
 19998 0250 543093E5 		ldr	r3, [r3, #84]
 19999              		.loc 1 7774 30
 20000 0254 012083E2 		add	r2, r3, #1
 20001 0258 18301BE5 		ldr	r3, [fp, #-24]
 20002 025c 542083E5 		str	r2, [r3, #84]
7775:../../Source/Kernel/rme_kernel.c ****     /* Setup the register contents, and do the invocation */
7776:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Init(RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
 20003              		.loc 1 7776 24
 20004 0260 18301BE5 		ldr	r3, [fp, #-24]
 20005 0264 443093E5 		ldr	r3, [r3, #68]
 20006              		.loc 1 7776 5
 20007 0268 0201C3E3 		bic	r0, r3, #-2147483648
 20008 026c 10301BE5 		ldr	r3, [fp, #-16]
 20009 0270 101093E5 		ldr	r1, [r3, #16]
 20010 0274 10301BE5 		ldr	r3, [fp, #-16]
 20011 0278 142093E5 		ldr	r2, [r3, #20]
 20012 027c 24301BE5 		ldr	r3, [fp, #-36]
 20013 0280 00308DE5 		str	r3, [sp]
 20014 0284 2C301BE5 		ldr	r3, [fp, #-44]
 20015 0288 FEFFFFEB 		bl	__RME_Thd_Reg_Init
7777:../../Source/Kernel/rme_kernel.c ****                        Invocation->Entry,
7778:../../Source/Kernel/rme_kernel.c ****                        Invocation->Stack,
7779:../../Source/Kernel/rme_kernel.c ****                        Param,Reg);
7780:../../Source/Kernel/rme_kernel.c ****     
7781:../../Source/Kernel/rme_kernel.c ****     
7782:../../Source/Kernel/rme_kernel.c ****     /* We are assuming that we are always invoking into a new process (why use synchronous
7783:../../Source/Kernel/rme_kernel.c ****      * invocation if you don't do so?). So we always switch page tables regardless. */
7784:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7785:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 489


 20016              		.loc 1 7785 5
 20017 028c 10301BE5 		ldr	r3, [fp, #-16]
 20018 0290 083093E5 		ldr	r3, [r3, #8]
 20019 0294 183093E5 		ldr	r3, [r3, #24]
 20020 0298 003093E5 		ldr	r3, [r3]
 20021 029c 7330FFE6 		uxth	r3, r3
 20022 02a0 000053E3 		cmp	r3, #0
 20023 02a4 0800000A 		beq	.L1310
 20024              		.loc 1 7785 5 is_stmt 0 discriminator 1
 20025 02a8 003000E3 		movw	r3, #:lower16:.LC2
 20026 02ac 003040E3 		movt	r3, #:upper16:.LC2
 20027 02b0 002000E3 		movw	r2, #:lower16:.LC3
 20028 02b4 002040E3 		movt	r2, #:upper16:.LC3
 20029 02b8 691E01E3 		movw	r1, #7785
 20030 02bc 000000E3 		movw	r0, #:lower16:.LC4
 20031 02c0 000040E3 		movt	r0, #:upper16:.LC4
 20032 02c4 FEFFFFEB 		bl	RME_Log
 20033              	.L1311:
 20034              		.loc 1 7785 5
 20035 02c8 FEFFFFEA 		b	.L1311
 20036              	.L1310:
7786:../../Source/Kernel/rme_kernel.c **** #endif
7787:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Set(Invocation->Prc->Pgt);
 20037              		.loc 1 7787 29 is_stmt 1
 20038 02cc 10301BE5 		ldr	r3, [fp, #-16]
 20039 02d0 083093E5 		ldr	r3, [r3, #8]
 20040              		.loc 1 7787 5
 20041 02d4 183093E5 		ldr	r3, [r3, #24]
 20042 02d8 0300A0E1 		mov	r0, r3
 20043 02dc FEFFFFEB 		bl	__RME_Pgt_Set
7788:../../Source/Kernel/rme_kernel.c ****     
7789:../../Source/Kernel/rme_kernel.c ****     return 0;
 20044              		.loc 1 7789 12
 20045 02e0 0030A0E3 		mov	r3, #0
 20046              	.L1299:
7790:../../Source/Kernel/rme_kernel.c **** }
 20047              		.loc 1 7790 1
 20048 02e4 0300A0E1 		mov	r0, r3
 20049 02e8 04D04BE2 		sub	sp, fp, #4
 20050              		.cfi_def_cfa 13, 8
 20051              		@ sp needed
 20052 02ec 0088BDE8 		pop	{fp, pc}
 20053              		.cfi_endproc
 20054              	.LFE75:
 20056              		.section	.text._RME_Inv_Ret,"ax",%progbits
 20057              		.align	2
 20058              		.syntax unified
 20059              		.arm
 20061              	_RME_Inv_Ret:
 20062              	.LFB76:
7791:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Act *************************************************/
7792:../../Source/Kernel/rme_kernel.c **** 
7793:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Ret ******************************************************
7794:../../Source/Kernel/rme_kernel.c **** Description : Return from the invocation function, and set the return value to
7795:../../Source/Kernel/rme_kernel.c ****               the old register set. This function does not need a capability
7796:../../Source/Kernel/rme_kernel.c ****               table to work.
7797:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 490


7798:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Retval - The return value of this synchronous invocation.
7799:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc - Are we attempting a return from exception?
7800:../../Source/Kernel/rme_kernel.c **** Output      : None.
7801:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7802:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7803:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Ret(struct RME_Reg_Struct* Reg,
7804:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Retval,
7805:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc)
7806:../../Source/Kernel/rme_kernel.c **** {
 20063              		.loc 1 7806 1
 20064              		.cfi_startproc
 20065              		@ args = 0, pretend = 0, frame = 24
 20066              		@ frame_needed = 1, uses_anonymous_args = 0
 20067 0000 00482DE9 		push	{fp, lr}
 20068              		.cfi_def_cfa_offset 8
 20069              		.cfi_offset 11, -8
 20070              		.cfi_offset 14, -4
 20071 0004 04B08DE2 		add	fp, sp, #4
 20072              		.cfi_def_cfa 11, 4
 20073 0008 18D04DE2 		sub	sp, sp, #24
 20074 000c 10000BE5 		str	r0, [fp, #-16]
 20075 0010 14100BE5 		str	r1, [fp, #-20]
 20076 0014 18200BE5 		str	r2, [fp, #-24]
7807:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
7808:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7809:../../Source/Kernel/rme_kernel.c **** 
7810:../../Source/Kernel/rme_kernel.c ****     /* See if we can return; If we can, get the structure */
7811:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CPU_LOCAL()->Thd_Cur;
 20077              		.loc 1 7811 11
 20078 0018 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 20079 001c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 20080 0020 043093E5 		ldr	r3, [r3, #4]
 20081 0024 08300BE5 		str	r3, [fp, #-8]
7812:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20082              		.loc 1 7812 16
 20083 0028 08301BE5 		ldr	r3, [fp, #-8]
 20084 002c 4C2093E5 		ldr	r2, [r3, #76]
 20085 0030 08301BE5 		ldr	r3, [fp, #-8]
 20086 0034 4C3083E2 		add	r3, r3, #76
 20087 0038 030052E1 		cmp	r2, r3
 20088 003c 0200000A 		beq	.L1313
 20089              		.loc 1 7812 16 is_stmt 0 discriminator 1
 20090 0040 08301BE5 		ldr	r3, [fp, #-8]
 20091 0044 4C3093E5 		ldr	r3, [r3, #76]
 20092 0048 000000EA 		b	.L1314
 20093              	.L1313:
 20094              		.loc 1 7812 16 discriminator 2
 20095 004c 0030A0E3 		mov	r3, #0
 20096              	.L1314:
 20097              		.loc 1 7812 15 is_stmt 1 discriminator 4
 20098 0050 0C300BE5 		str	r3, [fp, #-12]
7813:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Invocation==RME_NULL))
 20099              		.loc 1 7813 7
 20100 0054 0C301BE5 		ldr	r3, [fp, #-12]
 20101 0058 000053E3 		cmp	r3, #0
 20102 005c 0200001A 		bne	.L1315
7814:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 491


7815:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7816:../../Source/Kernel/rme_kernel.c **** 
7817:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_EMPTY;
 20103              		.loc 1 7817 16
 20104 0060 D03E0FE3 		movw	r3, #65232
 20105 0064 FF3F4FE3 		movt	r3, 65535
 20106 0068 680000EA 		b	.L1316
 20107              	.L1315:
7818:../../Source/Kernel/rme_kernel.c ****     }
7819:../../Source/Kernel/rme_kernel.c ****     else
7820:../../Source/Kernel/rme_kernel.c ****     {
7821:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7822:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7823:../../Source/Kernel/rme_kernel.c ****     }
7824:../../Source/Kernel/rme_kernel.c **** 
7825:../../Source/Kernel/rme_kernel.c ****     /* See if this port allows return-on-fault */
7826:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Is_Exc!=0U)&&(Invocation->Is_Exc_Ret==0U)))
 20108              		.loc 1 7826 7
 20109 006c 18301BE5 		ldr	r3, [fp, #-24]
 20110 0070 000053E3 		cmp	r3, #0
 20111 0074 0600000A 		beq	.L1317
 20112              		.loc 1 7826 8 discriminator 1
 20113 0078 0C301BE5 		ldr	r3, [fp, #-12]
 20114 007c 183093E5 		ldr	r3, [r3, #24]
 20115 0080 000053E3 		cmp	r3, #0
 20116 0084 0200001A 		bne	.L1317
7827:../../Source/Kernel/rme_kernel.c ****     {
7828:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7829:../../Source/Kernel/rme_kernel.c **** 
7830:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_FAULT;
 20117              		.loc 1 7830 16
 20118 0088 D23E0FE3 		movw	r3, #65234
 20119 008c FF3F4FE3 		movt	r3, 65535
 20120 0090 5E0000EA 		b	.L1316
 20121              	.L1317:
7831:../../Source/Kernel/rme_kernel.c ****     }
7832:../../Source/Kernel/rme_kernel.c ****     else
7833:../../Source/Kernel/rme_kernel.c ****     {
7834:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7835:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7836:../../Source/Kernel/rme_kernel.c ****     }
7837:../../Source/Kernel/rme_kernel.c **** 
7838:../../Source/Kernel/rme_kernel.c ****     /* Pop it from the stack */
7839:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 20122              		.loc 1 7839 5
 20123 0094 0C301BE5 		ldr	r3, [fp, #-12]
 20124 0098 042093E5 		ldr	r2, [r3, #4]
 20125 009c 0C301BE5 		ldr	r3, [fp, #-12]
 20126 00a0 003093E5 		ldr	r3, [r3]
 20127 00a4 0310A0E1 		mov	r1, r3
 20128 00a8 0200A0E1 		mov	r0, r2
 20129 00ac FEFFFFEB 		bl	_RME_List_Del
7840:../../Source/Kernel/rme_kernel.c ****     /* Decrease invocation depth - no atomic operation needed */
7841:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth--;
 20130              		.loc 1 7841 16
 20131 00b0 08301BE5 		ldr	r3, [fp, #-8]
 20132 00b4 543093E5 		ldr	r3, [r3, #84]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 492


 20133              		.loc 1 7841 29
 20134 00b8 012043E2 		sub	r2, r3, #1
 20135 00bc 08301BE5 		ldr	r3, [fp, #-8]
 20136 00c0 542083E5 		str	r2, [r3, #84]
7842:../../Source/Kernel/rme_kernel.c **** 
7843:../../Source/Kernel/rme_kernel.c ****     /* Restore the register contents, and set return value. We need to set
7844:../../Source/Kernel/rme_kernel.c ****      * the return value of the invocation system call itself as well. */
7845:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Restore(Reg,&(Invocation->Ret));
 20137              		.loc 1 7845 5
 20138 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 20139 00c8 1C3083E2 		add	r3, r3, #28
 20140 00cc 0310A0E1 		mov	r1, r3
 20141 00d0 10001BE5 		ldr	r0, [fp, #-16]
 20142 00d4 FEFFFFEB 		bl	__RME_Inv_Reg_Restore
7846:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Retval_Set(Reg,(rme_ret_t)Retval);
 20143              		.loc 1 7846 5
 20144 00d8 14301BE5 		ldr	r3, [fp, #-20]
 20145 00dc 0310A0E1 		mov	r1, r3
 20146 00e0 10001BE5 		ldr	r0, [fp, #-16]
 20147 00e4 FEFFFFEB 		bl	__RME_Inv_Retval_Set
7847:../../Source/Kernel/rme_kernel.c **** 
7848:../../Source/Kernel/rme_kernel.c ****     /* We have successfully returned, set the invocation as inactive. We need
7849:../../Source/Kernel/rme_kernel.c ****      * a barrier here to avoid potential destruction of the return value. */
7850:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((volatile rme_ptr_t*)&(Invocation->Thd_Act),0U);
 20148              		.loc 1 7850 5
 20149 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20150 00ec 0C3083E2 		add	r3, r3, #12
 20151 00f0 0010A0E3 		mov	r1, #0
 20152 00f4 0300A0E1 		mov	r0, r3
 20153 00f8 FEFFFFEB 		bl	__RME_A7A_Write_Release
7851:../../Source/Kernel/rme_kernel.c **** 
7852:../../Source/Kernel/rme_kernel.c ****     /* Decide the system call's return value */
7853:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Is_Exc!=0U))
 20154              		.loc 1 7853 7
 20155 00fc 18301BE5 		ldr	r3, [fp, #-24]
 20156 0100 000053E3 		cmp	r3, #0
 20157 0104 0400000A 		beq	.L1318
7854:../../Source/Kernel/rme_kernel.c ****     {
7855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7856:../../Source/Kernel/rme_kernel.c **** 
7857:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg, RME_ERR_SIV_FAULT);
 20158              		.loc 1 7857 9
 20159 0108 D21E0FE3 		movw	r1, #65234
 20160 010c FF1F4FE3 		movt	r1, 65535
 20161 0110 10001BE5 		ldr	r0, [fp, #-16]
 20162 0114 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20163 0118 020000EA 		b	.L1319
 20164              	.L1318:
7858:../../Source/Kernel/rme_kernel.c ****     }
7859:../../Source/Kernel/rme_kernel.c ****     else
7860:../../Source/Kernel/rme_kernel.c ****     {
7861:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7862:../../Source/Kernel/rme_kernel.c **** 
7863:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 20165              		.loc 1 7863 9
 20166 011c 0010A0E3 		mov	r1, #0
 20167 0120 10001BE5 		ldr	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 493


 20168 0124 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20169              	.L1319:
7864:../../Source/Kernel/rme_kernel.c ****     }
7865:../../Source/Kernel/rme_kernel.c **** 
7866:../../Source/Kernel/rme_kernel.c ****     /* Same assumptions as in invocation activation */
7867:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20170              		.loc 1 7867 16
 20171 0128 08301BE5 		ldr	r3, [fp, #-8]
 20172 012c 4C2093E5 		ldr	r2, [r3, #76]
 20173 0130 08301BE5 		ldr	r3, [fp, #-8]
 20174 0134 4C3083E2 		add	r3, r3, #76
 20175 0138 030052E1 		cmp	r2, r3
 20176 013c 0200000A 		beq	.L1320
 20177              		.loc 1 7867 16 is_stmt 0 discriminator 1
 20178 0140 08301BE5 		ldr	r3, [fp, #-8]
 20179 0144 4C3093E5 		ldr	r3, [r3, #76]
 20180 0148 000000EA 		b	.L1321
 20181              	.L1320:
 20182              		.loc 1 7867 16 discriminator 2
 20183 014c 0030A0E3 		mov	r3, #0
 20184              	.L1321:
 20185              		.loc 1 7867 15 is_stmt 1 discriminator 4
 20186 0150 0C300BE5 		str	r3, [fp, #-12]
7868:../../Source/Kernel/rme_kernel.c ****     if(Invocation!=RME_NULL)
 20187              		.loc 1 7868 7
 20188 0154 0C301BE5 		ldr	r3, [fp, #-12]
 20189 0158 000053E3 		cmp	r3, #0
 20190 015c 1500000A 		beq	.L1322
7869:../../Source/Kernel/rme_kernel.c ****     {
7870:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7871:../../Source/Kernel/rme_kernel.c ****         
7872:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7873:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20191              		.loc 1 7873 9
 20192 0160 0C301BE5 		ldr	r3, [fp, #-12]
 20193 0164 083093E5 		ldr	r3, [r3, #8]
 20194 0168 183093E5 		ldr	r3, [r3, #24]
 20195 016c 003093E5 		ldr	r3, [r3]
 20196 0170 7330FFE6 		uxth	r3, r3
 20197 0174 000053E3 		cmp	r3, #0
 20198 0178 0800000A 		beq	.L1323
 20199              		.loc 1 7873 9 is_stmt 0 discriminator 1
 20200 017c 003000E3 		movw	r3, #:lower16:.LC2
 20201 0180 003040E3 		movt	r3, #:upper16:.LC2
 20202 0184 002000E3 		movw	r2, #:lower16:.LC3
 20203 0188 002040E3 		movt	r2, #:upper16:.LC3
 20204 018c C11E01E3 		movw	r1, #7873
 20205 0190 000000E3 		movw	r0, #:lower16:.LC4
 20206 0194 000040E3 		movt	r0, #:upper16:.LC4
 20207 0198 FEFFFFEB 		bl	RME_Log
 20208              	.L1324:
 20209              		.loc 1 7873 9
 20210 019c FEFFFFEA 		b	.L1324
 20211              	.L1323:
7874:../../Source/Kernel/rme_kernel.c **** #endif
7875:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Invocation->Prc->Pgt);
 20212              		.loc 1 7875 33 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 494


 20213 01a0 0C301BE5 		ldr	r3, [fp, #-12]
 20214 01a4 083093E5 		ldr	r3, [r3, #8]
 20215              		.loc 1 7875 9
 20216 01a8 183093E5 		ldr	r3, [r3, #24]
 20217 01ac 0300A0E1 		mov	r0, r3
 20218 01b0 FEFFFFEB 		bl	__RME_Pgt_Set
 20219 01b4 140000EA 		b	.L1325
 20220              	.L1322:
7876:../../Source/Kernel/rme_kernel.c ****     }
7877:../../Source/Kernel/rme_kernel.c ****     else
7878:../../Source/Kernel/rme_kernel.c ****     {
7879:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7880:../../Source/Kernel/rme_kernel.c ****         
7881:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7882:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Thread->Sched.Prc->Pgt)!=0U);
 20221              		.loc 1 7882 9
 20222 01b8 08301BE5 		ldr	r3, [fp, #-8]
 20223 01bc 2C3093E5 		ldr	r3, [r3, #44]
 20224 01c0 183093E5 		ldr	r3, [r3, #24]
 20225 01c4 003093E5 		ldr	r3, [r3]
 20226 01c8 7330FFE6 		uxth	r3, r3
 20227 01cc 000053E3 		cmp	r3, #0
 20228 01d0 0800000A 		beq	.L1326
 20229              		.loc 1 7882 9 is_stmt 0 discriminator 1
 20230 01d4 003000E3 		movw	r3, #:lower16:.LC2
 20231 01d8 003040E3 		movt	r3, #:upper16:.LC2
 20232 01dc 002000E3 		movw	r2, #:lower16:.LC3
 20233 01e0 002040E3 		movt	r2, #:upper16:.LC3
 20234 01e4 CA1E01E3 		movw	r1, #7882
 20235 01e8 000000E3 		movw	r0, #:lower16:.LC4
 20236 01ec 000040E3 		movt	r0, #:upper16:.LC4
 20237 01f0 FEFFFFEB 		bl	RME_Log
 20238              	.L1327:
 20239              		.loc 1 7882 9
 20240 01f4 FEFFFFEA 		b	.L1327
 20241              	.L1326:
7883:../../Source/Kernel/rme_kernel.c **** #endif
7884:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Thread->Sched.Prc->Pgt);
 20242              		.loc 1 7884 36 is_stmt 1
 20243 01f8 08301BE5 		ldr	r3, [fp, #-8]
 20244 01fc 2C3093E5 		ldr	r3, [r3, #44]
 20245              		.loc 1 7884 9
 20246 0200 183093E5 		ldr	r3, [r3, #24]
 20247 0204 0300A0E1 		mov	r0, r3
 20248 0208 FEFFFFEB 		bl	__RME_Pgt_Set
 20249              	.L1325:
7885:../../Source/Kernel/rme_kernel.c ****     }
7886:../../Source/Kernel/rme_kernel.c ****     
7887:../../Source/Kernel/rme_kernel.c ****     return 0;
 20250              		.loc 1 7887 12
 20251 020c 0030A0E3 		mov	r3, #0
 20252              	.L1316:
7888:../../Source/Kernel/rme_kernel.c **** }
 20253              		.loc 1 7888 1
 20254 0210 0300A0E1 		mov	r0, r3
 20255 0214 04D04BE2 		sub	sp, fp, #4
 20256              		.cfi_def_cfa 13, 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 495


 20257              		@ sp needed
 20258 0218 0088BDE8 		pop	{fp, pc}
 20259              		.cfi_endproc
 20260              	.LFE76:
 20262              		.section	.text._RME_Kfn_Boot_Crt,"ax",%progbits
 20263              		.align	2
 20264              		.global	_RME_Kfn_Boot_Crt
 20265              		.syntax unified
 20266              		.arm
 20268              	_RME_Kfn_Boot_Crt:
 20269              	.LFB77:
7889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Ret *************************************************/
7890:../../Source/Kernel/rme_kernel.c **** 
7891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Boot_Crt *************************************************
7892:../../Source/Kernel/rme_kernel.c **** Description : This function is used to create boot-time kernel call capability.
7893:../../Source/Kernel/rme_kernel.c ****               This kind of capability that does not have a kernel object.
7894:../../Source/Kernel/rme_kernel.c ****               Kernel function capabilities allow you to execute user-defined 
7895:../../Source/Kernel/rme_kernel.c ****               functions in kernel mode. These functions must be defined in the
7896:../../Source/Kernel/rme_kernel.c ****               platform extensions.
7897:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7898:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
7899:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
7900:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7901:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel function.
7902:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7903:../../Source/Kernel/rme_kernel.c **** Output      : None.
7904:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or error code.
7905:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7906:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kfn_Boot_Crt(struct RME_Cap_Cpt* Cpt,
7907:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
7908:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kfn)
7909:../../Source/Kernel/rme_kernel.c **** {
 20270              		.loc 1 7909 1
 20271              		.cfi_startproc
 20272              		@ args = 0, pretend = 0, frame = 32
 20273              		@ frame_needed = 1, uses_anonymous_args = 0
 20274 0000 00482DE9 		push	{fp, lr}
 20275              		.cfi_def_cfa_offset 8
 20276              		.cfi_offset 11, -8
 20277              		.cfi_offset 14, -4
 20278 0004 04B08DE2 		add	fp, sp, #4
 20279              		.cfi_def_cfa 11, 4
 20280 0008 20D04DE2 		sub	sp, sp, #32
 20281 000c 18000BE5 		str	r0, [fp, #-24]
 20282 0010 1C100BE5 		str	r1, [fp, #-28]
 20283 0014 20200BE5 		str	r2, [fp, #-32]
7910:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7911:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kfn* Kfn_Crt;
7912:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7913:../../Source/Kernel/rme_kernel.c ****     
7914:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
7915:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 20284              		.loc 1 7915 5
 20285 0018 1C301BE5 		ldr	r3, [fp, #-28]
 20286 001c 803003E2 		and	r3, r3, #128
 20287 0020 000053E3 		cmp	r3, #0
 20288 0024 1C00001A 		bne	.L1329
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 496


 20289              		.loc 1 7915 5 is_stmt 0 discriminator 1
 20290 0028 18301BE5 		ldr	r3, [fp, #-24]
 20291 002c 142093E5 		ldr	r2, [r3, #20]
 20292 0030 1C301BE5 		ldr	r3, [fp, #-28]
 20293 0034 030052E1 		cmp	r2, r3
 20294 0038 0100008A 		bhi	.L1330
 20295              		.loc 1 7915 5 discriminator 3
 20296 003c 0230E0E3 		mvn	r3, #2
 20297              		.loc 1 7915 5
 20298 0040 850000EA 		b	.L1331
 20299              	.L1330:
 20300              		.loc 1 7915 5 discriminator 4
 20301 0044 1C301BE5 		ldr	r3, [fp, #-28]
 20302 0048 8322A0E1 		lsl	r2, r3, #5
 20303 004c 18301BE5 		ldr	r3, [fp, #-24]
 20304 0050 0C3093E5 		ldr	r3, [r3, #12]
 20305 0054 033082E0 		add	r3, r2, r3
 20306 0058 08300BE5 		str	r3, [fp, #-8]
 20307 005c 08301BE5 		ldr	r3, [fp, #-8]
 20308 0060 0300A0E1 		mov	r0, r3
 20309 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20310 0068 0C000BE5 		str	r0, [fp, #-12]
 20311              		.loc 1 7915 5 discriminator 1
 20312 006c 0C301BE5 		ldr	r3, [fp, #-12]
 20313 0070 FF3803E2 		and	r3, r3, #16711680
 20314 0074 020853E3 		cmp	r3, #131072
 20315 0078 0100001A 		bne	.L1332
 20316              		.loc 1 7915 5 discriminator 5
 20317 007c 0830E0E3 		mvn	r3, #8
 20318              		.loc 1 7915 5
 20319 0080 750000EA 		b	.L1331
 20320              	.L1332:
 20321              		.loc 1 7915 5 discriminator 6
 20322 0084 0C301BE5 		ldr	r3, [fp, #-12]
 20323 0088 233CA0E1 		lsr	r3, r3, #24
 20324 008c 030053E3 		cmp	r3, #3
 20325 0090 3F00000A 		beq	.L1333
 20326              		.loc 1 7915 5 discriminator 7
 20327 0094 0130E0E3 		mvn	r3, #1
 20328              		.loc 1 7915 5
 20329 0098 6F0000EA 		b	.L1331
 20330              	.L1329:
 20331              		.loc 1 7915 5 discriminator 2
 20332 009c 1C301BE5 		ldr	r3, [fp, #-28]
 20333 00a0 2324A0E1 		lsr	r2, r3, #8
 20334 00a4 18301BE5 		ldr	r3, [fp, #-24]
 20335 00a8 143093E5 		ldr	r3, [r3, #20]
 20336 00ac 030052E1 		cmp	r2, r3
 20337 00b0 0100003A 		bcc	.L1334
 20338              		.loc 1 7915 5 discriminator 8
 20339 00b4 0230E0E3 		mvn	r3, #2
 20340              		.loc 1 7915 5
 20341 00b8 670000EA 		b	.L1331
 20342              	.L1334:
 20343              		.loc 1 7915 5 discriminator 9
 20344 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 20345 00c0 2334A0E1 		lsr	r3, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 497


 20346 00c4 8322A0E1 		lsl	r2, r3, #5
 20347 00c8 18301BE5 		ldr	r3, [fp, #-24]
 20348 00cc 0C3093E5 		ldr	r3, [r3, #12]
 20349 00d0 033082E0 		add	r3, r2, r3
 20350 00d4 08300BE5 		str	r3, [fp, #-8]
 20351 00d8 08301BE5 		ldr	r3, [fp, #-8]
 20352 00dc 0300A0E1 		mov	r0, r3
 20353 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20354 00e4 0C000BE5 		str	r0, [fp, #-12]
 20355              		.loc 1 7915 5 discriminator 1
 20356 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20357 00ec FF3803E2 		and	r3, r3, #16711680
 20358 00f0 020853E3 		cmp	r3, #131072
 20359 00f4 0100001A 		bne	.L1335
 20360              		.loc 1 7915 5 discriminator 10
 20361 00f8 0830E0E3 		mvn	r3, #8
 20362              		.loc 1 7915 5
 20363 00fc 560000EA 		b	.L1331
 20364              	.L1335:
 20365              		.loc 1 7915 5 discriminator 11
 20366 0100 0C301BE5 		ldr	r3, [fp, #-12]
 20367 0104 233CA0E1 		lsr	r3, r3, #24
 20368 0108 030053E3 		cmp	r3, #3
 20369 010c 0100000A 		beq	.L1336
 20370              		.loc 1 7915 5 discriminator 12
 20371 0110 0130E0E3 		mvn	r3, #1
 20372              		.loc 1 7915 5
 20373 0114 500000EA 		b	.L1331
 20374              	.L1336:
 20375              		.loc 1 7915 5 discriminator 13
 20376 0118 1C301BE5 		ldr	r3, [fp, #-28]
 20377 011c 7F2003E2 		and	r2, r3, #127
 20378 0120 08301BE5 		ldr	r3, [fp, #-8]
 20379 0124 143093E5 		ldr	r3, [r3, #20]
 20380 0128 030052E1 		cmp	r2, r3
 20381 012c 0100003A 		bcc	.L1337
 20382              		.loc 1 7915 5 discriminator 14
 20383 0130 0230E0E3 		mvn	r3, #2
 20384              		.loc 1 7915 5
 20385 0134 480000EA 		b	.L1331
 20386              	.L1337:
 20387              		.loc 1 7915 5 discriminator 15
 20388 0138 1C301BE5 		ldr	r3, [fp, #-28]
 20389 013c 7F3003E2 		and	r3, r3, #127
 20390 0140 8322A0E1 		lsl	r2, r3, #5
 20391 0144 08301BE5 		ldr	r3, [fp, #-8]
 20392 0148 0C3093E5 		ldr	r3, [r3, #12]
 20393 014c 033082E0 		add	r3, r2, r3
 20394 0150 08300BE5 		str	r3, [fp, #-8]
 20395 0154 08301BE5 		ldr	r3, [fp, #-8]
 20396 0158 0300A0E1 		mov	r0, r3
 20397 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20398 0160 0C000BE5 		str	r0, [fp, #-12]
 20399              		.loc 1 7915 5 discriminator 1
 20400 0164 0C301BE5 		ldr	r3, [fp, #-12]
 20401 0168 FF3803E2 		and	r3, r3, #16711680
 20402 016c 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 498


 20403 0170 0100001A 		bne	.L1338
 20404              		.loc 1 7915 5 discriminator 16
 20405 0174 0830E0E3 		mvn	r3, #8
 20406              		.loc 1 7915 5
 20407 0178 370000EA 		b	.L1331
 20408              	.L1338:
 20409              		.loc 1 7915 5 discriminator 17
 20410 017c 0C301BE5 		ldr	r3, [fp, #-12]
 20411 0180 233CA0E1 		lsr	r3, r3, #24
 20412 0184 030053E3 		cmp	r3, #3
 20413 0188 0100000A 		beq	.L1333
 20414              		.loc 1 7915 5 discriminator 18
 20415 018c 0130E0E3 		mvn	r3, #1
 20416              		.loc 1 7915 5
 20417 0190 310000EA 		b	.L1331
 20418              	.L1333:
7916:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7917:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7918:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 20419              		.loc 1 7918 5 is_stmt 1
 20420 0194 08301BE5 		ldr	r3, [fp, #-8]
 20421 0198 083093E5 		ldr	r3, [r3, #8]
 20422 019c 013003E2 		and	r3, r3, #1
 20423 01a0 000053E3 		cmp	r3, #0
 20424 01a4 0100001A 		bne	.L1339
 20425              		.loc 1 7918 5 is_stmt 0 discriminator 1
 20426 01a8 0630E0E3 		mvn	r3, #6
 20427              		.loc 1 7918 5
 20428 01ac 2A0000EA 		b	.L1331
 20429              	.L1339:
7919:../../Source/Kernel/rme_kernel.c ****     
7920:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7921:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kfn,struct RME_Cap_Kfn*,Kfn_Crt);
 20430              		.loc 1 7921 5 is_stmt 1
 20431 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20432 01b4 142093E5 		ldr	r2, [r3, #20]
 20433 01b8 20301BE5 		ldr	r3, [fp, #-32]
 20434 01bc 030052E1 		cmp	r2, r3
 20435 01c0 0100008A 		bhi	.L1340
 20436              		.loc 1 7921 5 is_stmt 0 discriminator 1
 20437 01c4 0230E0E3 		mvn	r3, #2
 20438              		.loc 1 7921 5
 20439 01c8 230000EA 		b	.L1331
 20440              	.L1340:
 20441              		.loc 1 7921 5 discriminator 2
 20442 01cc 20301BE5 		ldr	r3, [fp, #-32]
 20443 01d0 8322A0E1 		lsl	r2, r3, #5
 20444 01d4 08301BE5 		ldr	r3, [fp, #-8]
 20445 01d8 0C3093E5 		ldr	r3, [r3, #12]
 20446 01dc 033082E0 		add	r3, r2, r3
 20447 01e0 10300BE5 		str	r3, [fp, #-16]
7922:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7923:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kfn_Crt);
 20448              		.loc 1 7923 5 is_stmt 1
 20449 01e4 10301BE5 		ldr	r3, [fp, #-16]
 20450 01e8 0128A0E3 		mov	r2, #65536
 20451 01ec 0010A0E3 		mov	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 499


 20452 01f0 0300A0E1 		mov	r0, r3
 20453 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20454 01f8 0030A0E1 		mov	r3, r0
 20455              		.loc 1 7923 5 is_stmt 0 discriminator 1
 20456 01fc 000053E3 		cmp	r3, #0
 20457 0200 0100001A 		bne	.L1341
 20458 0204 0430E0E3 		mvn	r3, #4
 20459              		.loc 1 7923 5
 20460 0208 130000EA 		b	.L1331
 20461              	.L1341:
 20462              		.loc 1 7923 5 discriminator 2
 20463 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 20464 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 20465 0214 002093E5 		ldr	r2, [r3]
 20466 0218 10301BE5 		ldr	r3, [fp, #-16]
 20467 021c 102083E5 		str	r2, [r3, #16]
7924:../../Source/Kernel/rme_kernel.c ****     
7925:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7926:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Root_Ref=1U;
 20468              		.loc 1 7926 27 is_stmt 1
 20469 0220 10301BE5 		ldr	r3, [fp, #-16]
 20470 0224 0120A0E3 		mov	r2, #1
 20471 0228 042083E5 		str	r2, [r3, #4]
7927:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Object=0U;
 20472              		.loc 1 7927 25
 20473 022c 10301BE5 		ldr	r3, [fp, #-16]
 20474 0230 0020A0E3 		mov	r2, #0
 20475 0234 0C2083E5 		str	r2, [r3, #12]
7928:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Flag=RME_KFN_FLAG_FULL_RANGE;
 20476              		.loc 1 7928 23
 20477 0238 10201BE5 		ldr	r2, [fp, #-16]
 20478 023c 0030A0E3 		mov	r3, #0
 20479 0240 FF3F4FE3 		movt	r3, 65535
 20480 0244 083082E5 		str	r3, [r2, #8]
7929:../../Source/Kernel/rme_kernel.c ****     
7930:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7931:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kfn_Crt->Head.Type_Stat),
 20481              		.loc 1 7931 5
 20482 0248 10301BE5 		ldr	r3, [fp, #-16]
 20483 024c 0114A0E3 		mov	r1, #16777216
 20484 0250 0300A0E1 		mov	r0, r3
 20485 0254 FEFFFFEB 		bl	__RME_A7A_Write_Release
7932:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KFN,
7933:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7934:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7935:../../Source/Kernel/rme_kernel.c **** 
7936:../../Source/Kernel/rme_kernel.c ****     return 0;
 20486              		.loc 1 7936 12
 20487 0258 0030A0E3 		mov	r3, #0
 20488              	.L1331:
7937:../../Source/Kernel/rme_kernel.c **** }
 20489              		.loc 1 7937 1
 20490 025c 0300A0E1 		mov	r0, r3
 20491 0260 04D04BE2 		sub	sp, fp, #4
 20492              		.cfi_def_cfa 13, 8
 20493              		@ sp needed
 20494 0264 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 500


 20495              		.cfi_endproc
 20496              	.LFE77:
 20498              		.section	.text._RME_Kfn_Act,"ax",%progbits
 20499              		.align	2
 20500              		.syntax unified
 20501              		.arm
 20503              	_RME_Kfn_Act:
 20504              	.LFB78:
7938:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kfn_Boot_Crt ********************************************/
7939:../../Source/Kernel/rme_kernel.c **** 
7940:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Act ******************************************************
7941:../../Source/Kernel/rme_kernel.c **** Description : Activate a kernel function.
7942:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7943:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7944:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel capability.
7945:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7946:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Func_ID - The function ID to invoke.
7947:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Sub_ID - The subfunction ID to invoke.
7948:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param1 - The first parameter.
7949:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param2 - The second parameter.
7950:../../Source/Kernel/rme_kernel.c **** Output      : None.
7951:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the call is successful, it will return whatever
7952:../../Source/Kernel/rme_kernel.c ****                           the 
7953:../../Source/Kernel/rme_kernel.c ****                           function returned (It is expected that they shall
7954:../../Source/Kernel/rme_kernel.c ****                           never return an negative value); or an error code.
7955:../../Source/Kernel/rme_kernel.c ****                           If the kernel function ever causes a context switch,
7956:../../Source/Kernel/rme_kernel.c ****                           it is responsible for setting the return value. On 
7957:../../Source/Kernel/rme_kernel.c ****                           failure, no context switch is allowed.
7958:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7959:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Kfn_Act(struct RME_Cap_Cpt* Cpt,
7960:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7961:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kfn,
7962:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Func_ID,
7963:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Sub_ID,
7964:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param1,
7965:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param2)
7966:../../Source/Kernel/rme_kernel.c **** {
 20505              		.loc 1 7966 1
 20506              		.cfi_startproc
 20507              		@ args = 12, pretend = 0, frame = 24
 20508              		@ frame_needed = 1, uses_anonymous_args = 0
 20509 0000 00482DE9 		push	{fp, lr}
 20510              		.cfi_def_cfa_offset 8
 20511              		.cfi_offset 11, -8
 20512              		.cfi_offset 14, -4
 20513 0004 04B08DE2 		add	fp, sp, #4
 20514              		.cfi_def_cfa 11, 4
 20515 0008 20D04DE2 		sub	sp, sp, #32
 20516 000c 10000BE5 		str	r0, [fp, #-16]
 20517 0010 14100BE5 		str	r1, [fp, #-20]
 20518 0014 18200BE5 		str	r2, [fp, #-24]
 20519 0018 1C300BE5 		str	r3, [fp, #-28]
7967:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kfn* Kfn_Op;
7968:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7969:../../Source/Kernel/rme_kernel.c ****     
7970:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7971:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kfn,RME_CAP_TYPE_KFN,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 501


 20520              		.loc 1 7971 5
 20521 001c 18301BE5 		ldr	r3, [fp, #-24]
 20522 0020 803003E2 		and	r3, r3, #128
 20523 0024 000053E3 		cmp	r3, #0
 20524 0028 1C00001A 		bne	.L1343
 20525              		.loc 1 7971 5 is_stmt 0 discriminator 1
 20526 002c 10301BE5 		ldr	r3, [fp, #-16]
 20527 0030 142093E5 		ldr	r2, [r3, #20]
 20528 0034 18301BE5 		ldr	r3, [fp, #-24]
 20529 0038 030052E1 		cmp	r2, r3
 20530 003c 0100008A 		bhi	.L1344
 20531              		.loc 1 7971 5 discriminator 3
 20532 0040 0230E0E3 		mvn	r3, #2
 20533              		.loc 1 7971 5
 20534 0044 6B0000EA 		b	.L1345
 20535              	.L1344:
 20536              		.loc 1 7971 5 discriminator 4
 20537 0048 18301BE5 		ldr	r3, [fp, #-24]
 20538 004c 8322A0E1 		lsl	r2, r3, #5
 20539 0050 10301BE5 		ldr	r3, [fp, #-16]
 20540 0054 0C3093E5 		ldr	r3, [r3, #12]
 20541 0058 033082E0 		add	r3, r2, r3
 20542 005c 08300BE5 		str	r3, [fp, #-8]
 20543 0060 08301BE5 		ldr	r3, [fp, #-8]
 20544 0064 0300A0E1 		mov	r0, r3
 20545 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20546 006c 0C000BE5 		str	r0, [fp, #-12]
 20547              		.loc 1 7971 5 discriminator 1
 20548 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20549 0074 FF3803E2 		and	r3, r3, #16711680
 20550 0078 020853E3 		cmp	r3, #131072
 20551 007c 0100001A 		bne	.L1346
 20552              		.loc 1 7971 5 discriminator 5
 20553 0080 0830E0E3 		mvn	r3, #8
 20554              		.loc 1 7971 5
 20555 0084 5B0000EA 		b	.L1345
 20556              	.L1346:
 20557              		.loc 1 7971 5 discriminator 6
 20558 0088 0C301BE5 		ldr	r3, [fp, #-12]
 20559 008c 233CA0E1 		lsr	r3, r3, #24
 20560 0090 010053E3 		cmp	r3, #1
 20561 0094 3F00000A 		beq	.L1347
 20562              		.loc 1 7971 5 discriminator 7
 20563 0098 0130E0E3 		mvn	r3, #1
 20564              		.loc 1 7971 5
 20565 009c 550000EA 		b	.L1345
 20566              	.L1343:
 20567              		.loc 1 7971 5 discriminator 2
 20568 00a0 18301BE5 		ldr	r3, [fp, #-24]
 20569 00a4 2324A0E1 		lsr	r2, r3, #8
 20570 00a8 10301BE5 		ldr	r3, [fp, #-16]
 20571 00ac 143093E5 		ldr	r3, [r3, #20]
 20572 00b0 030052E1 		cmp	r2, r3
 20573 00b4 0100003A 		bcc	.L1348
 20574              		.loc 1 7971 5 discriminator 8
 20575 00b8 0230E0E3 		mvn	r3, #2
 20576              		.loc 1 7971 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 502


 20577 00bc 4D0000EA 		b	.L1345
 20578              	.L1348:
 20579              		.loc 1 7971 5 discriminator 9
 20580 00c0 18301BE5 		ldr	r3, [fp, #-24]
 20581 00c4 2334A0E1 		lsr	r3, r3, #8
 20582 00c8 8322A0E1 		lsl	r2, r3, #5
 20583 00cc 10301BE5 		ldr	r3, [fp, #-16]
 20584 00d0 0C3093E5 		ldr	r3, [r3, #12]
 20585 00d4 033082E0 		add	r3, r2, r3
 20586 00d8 08300BE5 		str	r3, [fp, #-8]
 20587 00dc 08301BE5 		ldr	r3, [fp, #-8]
 20588 00e0 0300A0E1 		mov	r0, r3
 20589 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20590 00e8 0C000BE5 		str	r0, [fp, #-12]
 20591              		.loc 1 7971 5 discriminator 1
 20592 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 20593 00f0 FF3803E2 		and	r3, r3, #16711680
 20594 00f4 020853E3 		cmp	r3, #131072
 20595 00f8 0100001A 		bne	.L1349
 20596              		.loc 1 7971 5 discriminator 10
 20597 00fc 0830E0E3 		mvn	r3, #8
 20598              		.loc 1 7971 5
 20599 0100 3C0000EA 		b	.L1345
 20600              	.L1349:
 20601              		.loc 1 7971 5 discriminator 11
 20602 0104 0C301BE5 		ldr	r3, [fp, #-12]
 20603 0108 233CA0E1 		lsr	r3, r3, #24
 20604 010c 030053E3 		cmp	r3, #3
 20605 0110 0100000A 		beq	.L1350
 20606              		.loc 1 7971 5 discriminator 12
 20607 0114 0130E0E3 		mvn	r3, #1
 20608              		.loc 1 7971 5
 20609 0118 360000EA 		b	.L1345
 20610              	.L1350:
 20611              		.loc 1 7971 5 discriminator 13
 20612 011c 18301BE5 		ldr	r3, [fp, #-24]
 20613 0120 7F2003E2 		and	r2, r3, #127
 20614 0124 08301BE5 		ldr	r3, [fp, #-8]
 20615 0128 143093E5 		ldr	r3, [r3, #20]
 20616 012c 030052E1 		cmp	r2, r3
 20617 0130 0100003A 		bcc	.L1351
 20618              		.loc 1 7971 5 discriminator 14
 20619 0134 0230E0E3 		mvn	r3, #2
 20620              		.loc 1 7971 5
 20621 0138 2E0000EA 		b	.L1345
 20622              	.L1351:
 20623              		.loc 1 7971 5 discriminator 15
 20624 013c 18301BE5 		ldr	r3, [fp, #-24]
 20625 0140 7F3003E2 		and	r3, r3, #127
 20626 0144 8322A0E1 		lsl	r2, r3, #5
 20627 0148 08301BE5 		ldr	r3, [fp, #-8]
 20628 014c 0C3093E5 		ldr	r3, [r3, #12]
 20629 0150 033082E0 		add	r3, r2, r3
 20630 0154 08300BE5 		str	r3, [fp, #-8]
 20631 0158 08301BE5 		ldr	r3, [fp, #-8]
 20632 015c 0300A0E1 		mov	r0, r3
 20633 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 503


 20634 0164 0C000BE5 		str	r0, [fp, #-12]
 20635              		.loc 1 7971 5 discriminator 1
 20636 0168 0C301BE5 		ldr	r3, [fp, #-12]
 20637 016c FF3803E2 		and	r3, r3, #16711680
 20638 0170 020853E3 		cmp	r3, #131072
 20639 0174 0100001A 		bne	.L1352
 20640              		.loc 1 7971 5 discriminator 16
 20641 0178 0830E0E3 		mvn	r3, #8
 20642              		.loc 1 7971 5
 20643 017c 1D0000EA 		b	.L1345
 20644              	.L1352:
 20645              		.loc 1 7971 5 discriminator 17
 20646 0180 0C301BE5 		ldr	r3, [fp, #-12]
 20647 0184 233CA0E1 		lsr	r3, r3, #24
 20648 0188 010053E3 		cmp	r3, #1
 20649 018c 0100000A 		beq	.L1347
 20650              		.loc 1 7971 5 discriminator 18
 20651 0190 0130E0E3 		mvn	r3, #1
 20652              		.loc 1 7971 5
 20653 0194 170000EA 		b	.L1345
 20654              	.L1347:
7972:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kfn*,Kfn_Op,Type_Stat);    
7973:../../Source/Kernel/rme_kernel.c **** 
7974:../../Source/Kernel/rme_kernel.c ****     /* Check if the range of calling is allowed - kernel function specific */
7975:../../Source/Kernel/rme_kernel.c ****     if((Func_ID>RME_KFN_FLAG_HIGH(Kfn_Op->Head.Flag))||
 20655              		.loc 1 7975 17 is_stmt 1
 20656 0198 08301BE5 		ldr	r3, [fp, #-8]
 20657 019c 083093E5 		ldr	r3, [r3, #8]
 20658 01a0 2338A0E1 		lsr	r3, r3, #16
 20659              		.loc 1 7975 7
 20660 01a4 1C201BE5 		ldr	r2, [fp, #-28]
 20661 01a8 030052E1 		cmp	r2, r3
 20662 01ac 0500008A 		bhi	.L1353
7976:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20663              		.loc 1 7976 17
 20664 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20665 01b4 083093E5 		ldr	r3, [r3, #8]
 20666 01b8 7330FFE6 		uxth	r3, r3
7975:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20667              		.loc 1 7975 54 discriminator 1
 20668 01bc 1C201BE5 		ldr	r2, [fp, #-28]
 20669 01c0 030052E1 		cmp	r2, r3
 20670 01c4 0100002A 		bcs	.L1354
 20671              	.L1353:
7977:../../Source/Kernel/rme_kernel.c ****     {
7978:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7979:../../Source/Kernel/rme_kernel.c **** 
7980:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 20672              		.loc 1 7980 16
 20673 01c8 0630E0E3 		mvn	r3, #6
 20674 01cc 090000EA 		b	.L1345
 20675              	.L1354:
7981:../../Source/Kernel/rme_kernel.c ****     }
7982:../../Source/Kernel/rme_kernel.c ****     else
7983:../../Source/Kernel/rme_kernel.c ****     {
7984:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7985:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 504


7986:../../Source/Kernel/rme_kernel.c ****     }
7987:../../Source/Kernel/rme_kernel.c **** 
7988:../../Source/Kernel/rme_kernel.c ****     /* Return whatever the function returns */
7989:../../Source/Kernel/rme_kernel.c ****     return __RME_Kfn_Handler(Cpt,Reg,Func_ID,Sub_ID,Param1,Param2);
 20676              		.loc 1 7989 12
 20677 01d0 0C309BE5 		ldr	r3, [fp, #12]
 20678 01d4 04308DE5 		str	r3, [sp, #4]
 20679 01d8 08309BE5 		ldr	r3, [fp, #8]
 20680 01dc 00308DE5 		str	r3, [sp]
 20681 01e0 04309BE5 		ldr	r3, [fp, #4]
 20682 01e4 1C201BE5 		ldr	r2, [fp, #-28]
 20683 01e8 14101BE5 		ldr	r1, [fp, #-20]
 20684 01ec 10001BE5 		ldr	r0, [fp, #-16]
 20685 01f0 FEFFFFEB 		bl	__RME_Kfn_Handler
 20686 01f4 0030A0E1 		mov	r3, r0
 20687              	.L1345:
7990:../../Source/Kernel/rme_kernel.c **** }
 20688              		.loc 1 7990 1
 20689 01f8 0300A0E1 		mov	r0, r3
 20690 01fc 04D04BE2 		sub	sp, fp, #4
 20691              		.cfi_def_cfa 13, 8
 20692              		@ sp needed
 20693 0200 0088BDE8 		pop	{fp, pc}
 20694              		.cfi_endproc
 20695              	.LFE78:
 20697              		.section	.rodata.Table.1,"a"
 20698              		.align	2
 20701              	Table.1:
 20702 0000 00000101 		.ascii	"\000\000\001\001\002\002\002\002\003\003\003\003\003"
 20702      02020202 
 20702      03030303 
 20702      03
 20703 000d 03030304 		.ascii	"\003\003\003\004\004\004\004\004\004\004\004\004\004"
 20703      04040404 
 20703      04040404 
 20703      04
 20704 001a 04040404 		.ascii	"\004\004\004\004\004\004\005\005\005\005\005\005\005"
 20704      04040505 
 20704      05050505 
 20704      05
 20705 0027 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\005"
 20705      05050505 
 20705      05050505 
 20705      05
 20706 0034 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\006"
 20706      05050505 
 20706      05050505 
 20706      06
 20707 0041 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20707      06060606 
 20707      06060606 
 20707      06
 20708 004e 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20708      06060606 
 20708      06060606 
 20708      06
 20709 005b 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 505


 20709      06060606 
 20709      06060606 
 20709      06
 20710 0068 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20710      06060606 
 20710      06060606 
 20710      06
 20711 0075 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\007\007"
 20711      06060606 
 20711      06060607 
 20711      07
 20712 0082 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20712      07070707 
 20712      07070707 
 20712      07
 20713 008f 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20713      07070707 
 20713      07070707 
 20713      07
 20714 009c 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20714      07070707 
 20714      07070707 
 20714      07
 20715 00a9 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20715      07070707 
 20715      07070707 
 20715      07
 20716 00b6 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20716      07070707 
 20716      07070707 
 20716      07
 20717 00c3 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20717      07070707 
 20717      07070707 
 20717      07
 20718 00d0 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20718      07070707 
 20718      07070707 
 20718      07
 20719 00dd 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20719      07070707 
 20719      07070707 
 20719      07
 20720 00ea 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20720      07070707 
 20720      07070707 
 20720      07
 20721 00f7 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007"
 20721      07070707 
 20721      07
 20722              		.section	.rodata.Table.0,"a"
 20723              		.align	2
 20726              	Table.0:
 20727 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 20727      02000100 
 20727      03000100 
 20727      02
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 506


 20728 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 20728      00010002 
 20728      00010003 
 20728      00
 20729 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 20729      01000500 
 20729      01000200 
 20729      01
 20730 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 20730      00020001 
 20730      00040001 
 20730      00
 20731 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 20731      03000100 
 20731      02000100 
 20731      06
 20732 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 20732      00010003 
 20732      00010002 
 20732      00
 20733 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 20733      01000200 
 20733      01000300 
 20733      01
 20734 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 20734      00050001 
 20734      00020001 
 20734      00
 20735 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 20735      02000100 
 20735      04000100 
 20735      02
 20736 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 20736      00010002 
 20736      00010007 
 20736      00
 20737 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 20737      01000300 
 20737      01000200 
 20737      01
 20738 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 20738      00020001 
 20738      00030001 
 20738      00
 20739 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 20739      05000100 
 20739      02000100 
 20739      03
 20740 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 20740      00010004 
 20740      00010002 
 20740      00
 20741 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 20741      01000200 
 20741      01000600 
 20741      01
 20742 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 507


 20742      00030001 
 20742      00020001 
 20742      00
 20743 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 20743      02000100 
 20743      03000100 
 20743      02
 20744 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 20744      00010002 
 20744      00010003 
 20744      00
 20745 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 20745      01000400 
 20745      01000200 
 20745      01
 20746 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 20746      00020001 
 20746      00
 20747              		.text
 20748              	.Letext0:
 20749              		.file 2 "../../Include/Platform/A7A/rme_platform_a7a.h"
 20750              		.file 3 "../../Include/Kernel/rme_kernel.h"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 508


DEFINED SYMBOLS
                            *ABS*:00000000 rme_kernel.c
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:21     .text.RME_Int_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:26     .text.RME_Int_Print:00000000 RME_Int_Print
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:176    .text.RME_Hex_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:181    .text.RME_Hex_Print:00000000 RME_Hex_Print
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:297    .text.RME_Str_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:302    .text.RME_Str_Print:00000000 RME_Str_Print
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:364    .text.RME_Log:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:369    .text.RME_Log:00000000 RME_Log
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:399    .text._RME_MSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:404    .text._RME_MSB_Generic:00000000 _RME_MSB_Generic
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20701  .rodata.Table.1:00000000 Table.1
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:474    .text._RME_LSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:479    .text._RME_LSB_Generic:00000000 _RME_LSB_Generic
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20726  .rodata.Table.0:00000000 Table.0
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:558    .text._RME_Comp_Swap_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:563    .text._RME_Comp_Swap_Single:00000000 _RME_Comp_Swap_Single
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:610    .text._RME_Fetch_Add_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:615    .text._RME_Fetch_Add_Single:00000000 _RME_Fetch_Add_Single
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:659    .text._RME_Fetch_And_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:664    .text._RME_Fetch_And_Single:00000000 _RME_Fetch_And_Single
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:705    .text._RME_List_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:710    .text._RME_List_Crt:00000000 _RME_List_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:745    .text._RME_List_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:750    .text._RME_List_Del:00000000 _RME_List_Del
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:786    .text._RME_List_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:791    .text._RME_List_Ins:00000000 _RME_List_Ins
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:836    .text._RME_Clear:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:841    .text._RME_Clear:00000000 _RME_Clear
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:893    .text._RME_Memcmp:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:898    .text._RME_Memcmp:00000000 _RME_Memcmp
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:980    .text._RME_Memcpy:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:985    .text._RME_Memcpy:00000000 _RME_Memcpy
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1044   .text._RME_Diff:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1049   .text._RME_Diff:00000000 _RME_Diff
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1099   .text.RME_Kmain:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1104   .text.RME_Kmain:00000000 RME_Kmain
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1142   .text._RME_Lowlvl_Check:00000000 _RME_Lowlvl_Check
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8292   .text._RME_Kot_Init:00000000 _RME_Kot_Init
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1138   .text._RME_Lowlvl_Check:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1169   .text._RME_Svc_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1174   .text._RME_Svc_Handler:00000000 _RME_Svc_Handler
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20061  .text._RME_Inv_Ret:00000000 _RME_Inv_Ret
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:19782  .text._RME_Inv_Act:00000000 _RME_Inv_Act
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:1298   .rodata._RME_Svc_Handler:00000000 $d
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17884  .text._RME_Sig_Snd:00000000 _RME_Sig_Snd
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:18186  .text._RME_Sig_Rcv:00000000 _RME_Sig_Rcv
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20503  .text._RME_Kfn_Act:00000000 _RME_Kfn_Act
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:14524  .text._RME_Thd_Sched_Free:00000000 _RME_Thd_Sched_Free
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:14882  .text._RME_Thd_Exec_Set:00000000 _RME_Thd_Exec_Set
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:15143  .text._RME_Thd_Sched_Prio:00000000 _RME_Thd_Sched_Prio
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:15848  .text._RME_Thd_Time_Xfer:00000000 _RME_Thd_Time_Xfer
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:16448  .text._RME_Thd_Swt:00000000 _RME_Thd_Swt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2666   .text._RME_Cpt_Crt:00000000 _RME_Cpt_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3171   .text._RME_Cpt_Del:00000000 _RME_Cpt_Del
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3541   .text._RME_Cpt_Frz:00000000 _RME_Cpt_Frz
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 509


C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3810   .text._RME_Cpt_Add:00000000 _RME_Cpt_Add
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:4598   .text._RME_Cpt_Rem:00000000 _RME_Cpt_Rem
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:5858   .text._RME_Pgt_Crt:00000000 _RME_Pgt_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:6384   .text._RME_Pgt_Del:00000000 _RME_Pgt_Del
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:6732   .text._RME_Pgt_Add:00000000 _RME_Pgt_Add
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:7206   .text._RME_Pgt_Rem:00000000 _RME_Pgt_Rem
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:7425   .text._RME_Pgt_Con:00000000 _RME_Pgt_Con
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:7872   .text._RME_Pgt_Des:00000000 _RME_Pgt_Des
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:10459  .text._RME_Prc_Crt:00000000 _RME_Prc_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:11038  .text._RME_Prc_Del:00000000 _RME_Prc_Del
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:11352  .text._RME_Prc_Cpt:00000000 _RME_Prc_Cpt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:11724  .text._RME_Prc_Pgt:00000000 _RME_Prc_Pgt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:12614  .text._RME_Thd_Crt:00000000 _RME_Thd_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:13362  .text._RME_Thd_Del:00000000 _RME_Thd_Del
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:13784  .text._RME_Thd_Sched_Bind:00000000 _RME_Thd_Sched_Bind
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:15577  .text._RME_Thd_Sched_Rcv:00000000 _RME_Thd_Sched_Rcv
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17097  .text._RME_Sig_Crt:00000000 _RME_Sig_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17339  .text._RME_Sig_Del:00000000 _RME_Sig_Del
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:18613  .text._RME_Inv_Crt:00000000 _RME_Inv_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:19241  .text._RME_Inv_Del:00000000 _RME_Inv_Del
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:19585  .text._RME_Inv_Set:00000000 _RME_Inv_Set
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2060   .text._RME_Svc_Handler:000008b0 $d
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2066   .text._RME_Tim_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2071   .text._RME_Tim_Handler:00000000 _RME_Tim_Handler
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9450   .text._RME_Run_Del:00000000 _RME_Run_Del
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9641   .text._RME_Run_Notif:00000000 _RME_Run_Notif
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17762  .text._RME_Kern_Snd:00000000 _RME_Kern_Snd
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17651  .text._RME_Kern_High:00000000 _RME_Kern_High
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2151   .text._RME_Tim_Elapse:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2156   .text._RME_Tim_Elapse:00000000 _RME_Tim_Elapse
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2217   .text._RME_Tim_Future:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2222   .text._RME_Tim_Future:00000000 _RME_Tim_Future
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2253   .text._RME_Cpt_Boot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2258   .text._RME_Cpt_Boot_Init:00000000 _RME_Cpt_Boot_Init
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8361   .text._RME_Kot_Mark:00000000 _RME_Kot_Mark
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2366   .text._RME_Cpt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2371   .text._RME_Cpt_Boot_Crt:00000000 _RME_Cpt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:2662   .text._RME_Cpt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3157   .rodata:00000000 $d
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3158   .rodata:00000000 .LC2
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3161   .rodata:0000000c .LC3
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3164   .rodata:00000018 .LC4
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3167   .text._RME_Cpt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8672   .text._RME_Kot_Erase:00000000 _RME_Kot_Erase
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3537   .text._RME_Cpt_Frz:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:3806   .text._RME_Cpt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:4594   .text._RME_Cpt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:4886   .text._RME_Pgt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:4891   .text._RME_Pgt_Boot_Crt:00000000 _RME_Pgt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:5223   .text._RME_Pgt_Boot_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:5228   .text._RME_Pgt_Boot_Add:00000000 _RME_Pgt_Boot_Add
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:5450   .text._RME_Pgt_Boot_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:5455   .text._RME_Pgt_Boot_Con:00000000 _RME_Pgt_Boot_Con
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:5854   .text._RME_Pgt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:6380   .text._RME_Pgt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:6728   .text._RME_Pgt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:7202   .text._RME_Pgt_Rem:00000000 $a
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 510


C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:7421   .text._RME_Pgt_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:7868   .text._RME_Pgt_Des:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8287   .text._RME_Kot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8353   .rodata:0000003c .LC5
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8356   .text._RME_Kot_Mark:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8667   .text._RME_Kot_Erase:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8901   .text._RME_Kom_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:8906   .text._RME_Kom_Boot_Crt:00000000 _RME_Kom_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9176   .text._RME_CPU_Local_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9181   .text._RME_CPU_Local_Init:00000000 _RME_CPU_Local_Init
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9256   .rodata:00000054 .LC6
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9259   .text._RME_Thd_Fatal:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9264   .text._RME_Thd_Fatal:00000000 _RME_Thd_Fatal
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9361   .text._RME_Run_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9365   .text._RME_Run_Ins:00000000 _RME_Run_Ins
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9446   .text._RME_Run_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9542   .text._RME_Run_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9546   .text._RME_Run_High:00000000 _RME_Run_High
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9637   .text._RME_Run_Notif:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9700   .text._RME_Thd_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9705   .text._RME_Thd_Pgt:00000000 _RME_Thd_Pgt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9766   .text._RME_Run_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9770   .text._RME_Run_Swt:00000000 _RME_Run_Swt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9875   .text._RME_Prc_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:9880   .text._RME_Prc_Boot_Crt:00000000 _RME_Prc_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:10455  .text._RME_Prc_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:11034  .text._RME_Prc_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:11348  .text._RME_Prc_Cpt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:11720  .text._RME_Prc_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:12092  .text._RME_Thd_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:12097  .text._RME_Thd_Boot_Crt:00000000 _RME_Thd_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:12603  .rodata:00000074 .LC7
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:12607  .rodata:000000a4 .LC8
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:12610  .text._RME_Thd_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:13358  .text._RME_Thd_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:13780  .text._RME_Thd_Sched_Bind:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:14520  .text._RME_Thd_Sched_Free:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:14878  .text._RME_Thd_Exec_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:15139  .text._RME_Thd_Sched_Prio:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:15573  .text._RME_Thd_Sched_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:15841  .rodata:000000c0 .LC9
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:15844  .text._RME_Thd_Time_Xfer:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:16438  .rodata:000000d8 .LC10
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:16441  .rodata:000000f4 .LC11
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:16444  .text._RME_Thd_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:16850  .text._RME_Sig_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:16855  .text._RME_Sig_Boot_Crt:00000000 _RME_Sig_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17093  .text._RME_Sig_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17335  .text._RME_Sig_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17646  .text._RME_Kern_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17757  .text._RME_Kern_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:17880  .text._RME_Sig_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:18182  .text._RME_Sig_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:18347  .rodata._RME_Sig_Rcv:00000000 $d
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:18604  .text._RME_Sig_Rcv:00000430 $d
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:18609  .text._RME_Inv_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:19237  .text._RME_Inv_Del:00000000 $a
ARM GAS  C:\Users\even\AppData\Local\Temp\ccKcWSLs.s 			page 511


C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:19581  .text._RME_Inv_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:19778  .text._RME_Inv_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20057  .text._RME_Inv_Ret:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20263  .text._RME_Kfn_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20268  .text._RME_Kfn_Boot_Crt:00000000 _RME_Kfn_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20499  .text._RME_Kfn_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20698  .rodata.Table.1:00000000 $d
C:\Users\even\AppData\Local\Temp\ccKcWSLs.s:20723  .rodata.Table.0:00000000 $d
                           .group:00000000 wm4.0.3b9f63523dc4e8d86e863c7e7e762be7
                           .group:00000000 wm4.rme_platform_a7a.h.12.6f31e4bbf2ba0e08caa014445997fe37
                           .group:00000000 wm4.rme_platform_xc7z020.h.16.13f9fdbe37174b2b51a191bc4802e8df
                           .group:00000000 wm4.rme_platform_a7a.h.137.e9a24d7a5233e57f2f7befcdf024b105
                           .group:00000000 wm4.rme_kernel.h.27.716340edb41bad57d522729bf2b8a38a
                           .group:00000000 wm4.rme.h.11.105c42759f88404be372052d8d99e5e6
                           .group:00000000 wm4.rme_kernel.h.185.d02db6497e1a69d04e005d15d216f811
                           .group:00000000 wm4.rme_platform_a7a.h.398.f0ac34dc9ab051d9dffae2ce4ab8d08a
                           .group:00000000 wm4.rme_kernel.h.678.0572fdf2012fb48f701f562b23d175bb
                           .group:00000000 wm4.rme_kernel.h.930.a0227bbf293ff3272fab74c6046a5fa5
                           .group:00000000 wm4.rme_platform_a7a.h.514.57f45f27324c526a3ab5eab0a56cc64f

UNDEFINED SYMBOLS
__RME_Putchar
__aeabi_idiv
__aeabi_idivmod
__RME_Int_Disable
__RME_Lowlvl_Init
__RME_Pgt_Kom_Init
__RME_Boot
__RME_Svc_Param_Get
__RME_Svc_Retval_Set
RME_A7A_Local
__RME_A7A_Write_Release
__RME_A7A_Read_Acquire
RME_A7A_Timestamp
__RME_Pgt_Check
__RME_Pgt_Init
__RME_Pgt_Page_Map
__RME_Pgt_Pgdir_Map
__RME_Pgt_Del_Check
__RME_Pgt_Lookup
__RME_Pgt_Page_Unmap
__RME_Pgt_Pgdir_Unmap
RME_A7A_Kot
__RME_A7A_MSB_Get
__RME_Thd_Reg_Copy
__RME_Pgt_Set
__RME_Thd_Reg_Init
__RME_Inv_Reg_Save
__RME_Inv_Reg_Restore
__RME_Inv_Retval_Set
__RME_Kfn_Handler
