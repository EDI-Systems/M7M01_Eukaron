ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 1


   1              		.cpu cortex-a9
   2              		.arch armv7-a
   3              		.fpu neon-fp16
   4              		.arch_extension mp
   5              		.arch_extension sec
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"rme_kernel.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../../Source/Kernel/rme_kernel.c"
  20              		.section	.text.RME_Int_Print,"ax",%progbits
  21              		.align	2
  22              		.global	RME_Int_Print
  23              		.syntax unified
  24              		.arm
  26              	RME_Int_Print:
  27              	.LFB0:
   1:../../Source/Kernel/rme_kernel.c **** /******************************************************************************
   2:../../Source/Kernel/rme_kernel.c **** Filename    : rme_kernel.c
   3:../../Source/Kernel/rme_kernel.c **** Author      : pry
   4:../../Source/Kernel/rme_kernel.c **** Date        : 23/03/2017
   5:../../Source/Kernel/rme_kernel.c **** Licence     : The Unlicense; see LICENSE for details.
   6:../../Source/Kernel/rme_kernel.c **** Description : The system call processing path, debugging primitives and kernel
   7:../../Source/Kernel/rme_kernel.c ****               capability implementation for the RME system.
   8:../../Source/Kernel/rme_kernel.c **** 
   9:../../Source/Kernel/rme_kernel.c **** * Capability Table ************************************************************
  10:../../Source/Kernel/rme_kernel.c **** This section of code might be confusing if the underlying principles
  11:../../Source/Kernel/rme_kernel.c **** of capability-based systems is not well understood. 
  12:../../Source/Kernel/rme_kernel.c **** 1. Owning a capability means you have the power to use the function
  13:../../Source/Kernel/rme_kernel.c ****    represented by that capability.
  14:../../Source/Kernel/rme_kernel.c **** 2. Capabilities have an field called flags, which denotes what operations
  15:../../Source/Kernel/rme_kernel.c ****    is allowed on that captbl.
  16:../../Source/Kernel/rme_kernel.c **** 3. Owning a capability to a capability table means that you have the
  17:../../Source/Kernel/rme_kernel.c ****    power to modify the capability table's contents.
  18:../../Source/Kernel/rme_kernel.c **** 4. Creation and deletion of kernel objects is an operation on capability
  19:../../Source/Kernel/rme_kernel.c ****    table, thus requiring the capability to the capability table.
  20:../../Source/Kernel/rme_kernel.c **** 
  21:../../Source/Kernel/rme_kernel.c **** Remember we do not check our master table to see if it is frozen, or if it is
  22:../../Source/Kernel/rme_kernel.c **** captbl, or something, because if the master table's cap is not explicitly 
  23:../../Source/Kernel/rme_kernel.c **** passed in, we do not operate on it at all; If it is explicitly passed in, it
  24:../../Source/Kernel/rme_kernel.c **** will be checked.
  25:../../Source/Kernel/rme_kernel.c **** 
  26:../../Source/Kernel/rme_kernel.c **** There are 4 basic types of operations, as listed below:
  27:../../Source/Kernel/rme_kernel.c **** Operation                     What it does
  28:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  29:../../Source/Kernel/rme_kernel.c **** Create/Add-Dst                CAS the slot to CREATING state.
  30:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  31:../../Source/Kernel/rme_kernel.c ****                               Create kernel object.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 2


  32:../../Source/Kernel/rme_kernel.c ****                               Atomically update header to complete creation.
  33:../../Source/Kernel/rme_kernel.c **** Use/Add-Src                   Use the kernel object, have a WCET.
  34:../../Source/Kernel/rme_kernel.c **** Freeze                        Check timestamp for create-freeze QUIESCENCE.
  35:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  36:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to FROZEN state.
  37:../../Source/Kernel/rme_kernel.c **** Delete/Removal                Check FROZEN.
  38:../../Source/Kernel/rme_kernel.c ****                               Check timestamp for freeze-delete QUIESCENCE.
  39:../../Source/Kernel/rme_kernel.c ****                               Check REFCNT (delete only).
  40:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to empty.
  41:../../Source/Kernel/rme_kernel.c ****                               Delete the kernel object (delete only).
  42:../../Source/Kernel/rme_kernel.c **** 
  43:../../Source/Kernel/rme_kernel.c **** Hazard Table: (Operation 2 follows Operation 1)
  44:../../Source/Kernel/rme_kernel.c **** Operation 1    Operation 2    Reason why it is safe
  45:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  46:../../Source/Kernel/rme_kernel.c **** Create         Create         Only one creation will be successful, because 
  47:../../Source/Kernel/rme_kernel.c ****                               CREATING slot is done by CAS.
  48:../../Source/Kernel/rme_kernel.c **** Create         Delete         Create only set the CREATING. Delete will require
  49:../../Source/Kernel/rme_kernel.c ****                               a TYPE data, which will only be set after the 
  50:../../Source/Kernel/rme_kernel.c ****                               creation completes. ABA problem cannot occur
  51:../../Source/Kernel/rme_kernel.c ****                               because of create-freeze quiescence.
  52:../../Source/Kernel/rme_kernel.c ****                               If there is no quiescence between Create-Freeze, 
  53:../../Source/Kernel/rme_kernel.c ****                               the following may occur:
  54:../../Source/Kernel/rme_kernel.c ****                               T1: Check ---------------------------- Delete(CAS)
  55:../../Source/Kernel/rme_kernel.c ****                               T2: Check - Delete - Create - Freeze -------------
  56:../../Source/Kernel/rme_kernel.c ****                               In this case, thread 1 will perform a wrong 
  57:../../Source/Kernel/rme_kernel.c ****                               deletion on the new capability (the CAS will be
  58:../../Source/Kernel/rme_kernel.c ****                               successful), but this cap is actually a new cap 
  59:../../Source/Kernel/rme_kernel.c ****                               created by the thread 2 at the same location, not
  60:../../Source/Kernel/rme_kernel.c ****                               the old cap, and its quiescence may not be satisfied.
  61:../../Source/Kernel/rme_kernel.c **** Create         Freeze         OCCUPY only set the FROZEN. FROZEN will require
  62:../../Source/Kernel/rme_kernel.c ****                               that bit not set.
  63:../../Source/Kernel/rme_kernel.c **** Create         Add-Src        Add-Src will require a TYPE data, which will only
  64:../../Source/Kernel/rme_kernel.c ****                               be set after the creation completes.
  65:../../Source/Kernel/rme_kernel.c **** Create         Add-Dst        Only one creation will be successful, because 
  66:../../Source/Kernel/rme_kernel.c ****                               OCCUPY slot is done by CAS.
  67:../../Source/Kernel/rme_kernel.c **** Create         Remove         OCCUPY only set the FROZEN. Remove will require a
  68:../../Source/Kernel/rme_kernel.c ****                               TYPE data, which will only be set after the
  69:../../Source/Kernel/rme_kernel.c ****                               creation completes. See Create-Delete for details.
  70:../../Source/Kernel/rme_kernel.c **** Create         Use            OCCUPY only set the FROZEN. Use the cap will 
  71:../../Source/Kernel/rme_kernel.c ****                               require a TYPE data, which will only be set after
  72:../../Source/Kernel/rme_kernel.c ****                               the creation completes.
  73:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  74:../../Source/Kernel/rme_kernel.c **** Delete         Delete         Actual deletion done by CAS so only one deletion
  75:../../Source/Kernel/rme_kernel.c ****                               will be successful.
  76:../../Source/Kernel/rme_kernel.c **** Delete         Freeze         If the deletion fails and clears the FROZEN flag,
  77:../../Source/Kernel/rme_kernel.c ****                               nothing will be done;
  78:../../Source/Kernel/rme_kernel.c ****                               If it does not fail, then the cap will be erased,
  79:../../Source/Kernel/rme_kernel.c ****                               and the FREEZE CAS will not succeed.
  80:../../Source/Kernel/rme_kernel.c **** Delete         Remove         Only one will be successful because only the root
  81:../../Source/Kernel/rme_kernel.c ****                               can be DELETED.
  82:../../Source/Kernel/rme_kernel.c **** Delete         Others         Banned by the FROZEN flag before deletion. 
  83:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  84:../../Source/Kernel/rme_kernel.c **** Freeze         Create         Create fails because slot is still OCCUPY.
  85:../../Source/Kernel/rme_kernel.c **** Freeze         Delete         Delete fails if not FROZEN, or not QUIESCENT.
  86:../../Source/Kernel/rme_kernel.c **** Freeze         Remove         Remove fails if not FROZEN, or not QUIESCENT.
  87:../../Source/Kernel/rme_kernel.c **** Freeze         Freeze         Freeze done by CAS, and only one will be successful.
  88:../../Source/Kernel/rme_kernel.c **** Freeze         Others         Freeze bans them if they attempt after FROZEN set.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 3


  89:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  90:../../Source/Kernel/rme_kernel.c **** Add-Src        Create         Impossible because something in that slot.
  91:../../Source/Kernel/rme_kernel.c **** Add-Src        Freeze         Cannot freeze if already increased REFCNT. If they
  92:../../Source/Kernel/rme_kernel.c ****                               increase REFCNT just after FROZEN set, let it be.
  93:../../Source/Kernel/rme_kernel.c ****                               The cap can't be deleted because of non-zero REFCNT.
  94:../../Source/Kernel/rme_kernel.c **** Add-Src        Delete         Impossible because cap not FROZEN.
  95:../../Source/Kernel/rme_kernel.c **** Add-Src        Remove         Impossible because cap not FROZEN.
  96:../../Source/Kernel/rme_kernel.c **** Add-Src        Others         These operations can be parallel, which is fine.
  97:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  98:../../Source/Kernel/rme_kernel.c **** Add-Dst         ...           Conclusion same as Create operation.
  99:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 100:../../Source/Kernel/rme_kernel.c **** Remove          ...           Conclusion same as Delete operation.
 101:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 102:../../Source/Kernel/rme_kernel.c **** Use            Create         Impossible because something in that slot.
 103:../../Source/Kernel/rme_kernel.c **** Use            Delete         Impossible because not FROZEN. The use can't be
 104:../../Source/Kernel/rme_kernel.c ****                               from leaf caps as well because deletion will check
 105:../../Source/Kernel/rme_kernel.c ****                               the REFCNT, and if the REFCNT is 0, then the only
 106:../../Source/Kernel/rme_kernel.c ****                               case where an unsettled use can happen is that it
 107:../../Source/Kernel/rme_kernel.c ****                               happens within WCET time to REFCNT check time. This
 108:../../Source/Kernel/rme_kernel.c ****                               unsettled use must come from a leaf cap, as the use
 109:../../Source/Kernel/rme_kernel.c ****                               happened after the root gets FROZEN. This leaf cap
 110:../../Source/Kernel/rme_kernel.c ****                               itself, will set the REFCNT to 1, and it have no
 111:../../Source/Kernel/rme_kernel.c ****                               chance to freeze then remove itself before a WCET.
 112:../../Source/Kernel/rme_kernel.c ****                               The unsettled use case is thus impossible and there
 113:../../Source/Kernel/rme_kernel.c ****                               is no race. As long as all new reference to caps
 114:../../Source/Kernel/rme_kernel.c ****                               require an active cap passed in, there is no such
 115:../../Source/Kernel/rme_kernel.c ****                               race. Also, for cap creation, the header create step 
 116:../../Source/Kernel/rme_kernel.c ****                               must be the last step (after refcnt can be seen on
 117:../../Source/Kernel/rme_kernel.c ****                               all cores as we use write release semantics), and
 118:../../Source/Kernel/rme_kernel.c ****                               this ensures that no new leaf caps will be available
 119:../../Source/Kernel/rme_kernel.c ****                               for use before REFCNT is seen by all cores.
 120:../../Source/Kernel/rme_kernel.c **** Use            Freeze         It is fine.
 121:../../Source/Kernel/rme_kernel.c **** Use            Add-Src        It is fine.
 122:../../Source/Kernel/rme_kernel.c **** Use            Add-Dst        Impossible because something in that slot.
 123:../../Source/Kernel/rme_kernel.c **** Use            Remove         Impossible because not FROZEN.
 124:../../Source/Kernel/rme_kernel.c **** Use            Use            It is fine.
 125:../../Source/Kernel/rme_kernel.c **** 
 126:../../Source/Kernel/rme_kernel.c **** * Page Table ******************************************************************
 127:../../Source/Kernel/rme_kernel.c **** Different from most large-scale operating systems, RME requires the page tables
 128:../../Source/Kernel/rme_kernel.c **** to be constructed by the user-level rather than kernel logic. Yet, RME provided
 129:../../Source/Kernel/rme_kernel.c **** sufficient utilities for the user to conduct the necessary paging operations:
 130:../../Source/Kernel/rme_kernel.c **** 1. Creating page directories;
 131:../../Source/Kernel/rme_kernel.c **** 2. Deletiing page directories;
 132:../../Source/Kernel/rme_kernel.c **** 3. Adding(mapping) pages into page directories;
 133:../../Source/Kernel/rme_kernel.c **** 4. Deleting(unmapping) pages from page directories.
 134:../../Source/Kernel/rme_kernel.c **** 5. Constructing hierachical page tables;
 135:../../Source/Kernel/rme_kernel.c **** 6. Destructing hierachical page tables.
 136:../../Source/Kernel/rme_kernel.c **** 
 137:../../Source/Kernel/rme_kernel.c **** * Kernel Memory ***************************************************************
 138:../../Source/Kernel/rme_kernel.c **** Different seL4 and Composite, RME applys a principle that resembles Fiasco.OC's
 139:../../Source/Kernel/rme_kernel.c **** kernel object factory. However, this is simplified very much in RME - just a table
 140:../../Source/Kernel/rme_kernel.c **** for registering kernel memory usage! Some may think that this prohibits retyping;
 141:../../Source/Kernel/rme_kernel.c **** this is not true because we can implement it with a trusted user-level proxy.
 142:../../Source/Kernel/rme_kernel.c **** 
 143:../../Source/Kernel/rme_kernel.c **** * Process and Thread **********************************************************
 144:../../Source/Kernel/rme_kernel.c **** RME provided process as a light-weight virtual machine/container abstraction, 
 145:../../Source/Kernel/rme_kernel.c **** and a versatile thread abstraction. Processes enforce isolation, while threads
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 4


 146:../../Source/Kernel/rme_kernel.c **** carry out the task.
 147:../../Source/Kernel/rme_kernel.c **** There is no bind-bind race because bind is done using CAS.
 148:../../Source/Kernel/rme_kernel.c **** There is no bind-unbind race for scheduler thread because all are core-local.
 149:../../Source/Kernel/rme_kernel.c **** 
 150:../../Source/Kernel/rme_kernel.c **** * Signal and Invocation *******************************************************
 151:../../Source/Kernel/rme_kernel.c **** RME employs simple signal endpoints for interrupt passing, inter-core interrupt
 152:../../Source/Kernel/rme_kernel.c **** and asynchronous communication. Different from most operating systems, it employs
 153:../../Source/Kernel/rme_kernel.c **** thread migration model for cross-boundary synchronous communication rather than
 154:../../Source/Kernel/rme_kernel.c **** simple blockpoints. This invocation design have many benefits in many facets.
 155:../../Source/Kernel/rme_kernel.c **** 
 156:../../Source/Kernel/rme_kernel.c **** * Kernel Function *************************************************************
 157:../../Source/Kernel/rme_kernel.c **** There's no perfect operating system for a particular hardware. A hardware may
 158:../../Source/Kernel/rme_kernel.c **** have its own idiosyncrasies that needs extra hacks. RME's kernel function utility
 159:../../Source/Kernel/rme_kernel.c **** provides a disciplined way of making such hacks, in case you need to add new 
 160:../../Source/Kernel/rme_kernel.c **** system calls or directly manipulate hardware.
 161:../../Source/Kernel/rme_kernel.c **** 
 162:../../Source/Kernel/rme_kernel.c **** * The Use of 'volatile' *******************************************************
 163:../../Source/Kernel/rme_kernel.c **** 'volatile' is not needed in the kernel because the syscall interface acts as a
 164:../../Source/Kernel/rme_kernel.c **** natural compiler barrier. We're safe to assume that, during one syscall, data
 165:../../Source/Kernel/rme_kernel.c **** in memory remains unchanged. If anything changes, it has been dealt with the 
 166:../../Source/Kernel/rme_kernel.c **** dedicated assembly atomics. If LTO has been enabled, there are three cases:
 167:../../Source/Kernel/rme_kernel.c **** (1) Uniprocessor with C-implemented "atomics" with no real atomic support.
 168:../../Source/Kernel/rme_kernel.c ****     In this case, compiler barriers are not needed due to no kernel concurrency.
 169:../../Source/Kernel/rme_kernel.c **** (2) Multiprocessor with assembly-implemented atomics, but the compiler LTO does
 170:../../Source/Kernel/rme_kernel.c ****     not honor the assembly functions; instead it thinks that they are opaque.
 171:../../Source/Kernel/rme_kernel.c ****     In this case, the opaque function call itself is a full compiler barrier.
 172:../../Source/Kernel/rme_kernel.c **** (3) Multiprocessor with assembly-implemented atomics, and the compiler LTO does
 173:../../Source/Kernel/rme_kernel.c ****     honor the assembly functions.
 174:../../Source/Kernel/rme_kernel.c ****     In this case, the compiler should be aware of the semantics of the assembly,
 175:../../Source/Kernel/rme_kernel.c ****     and produce correct code.
 176:../../Source/Kernel/rme_kernel.c **** * Function Name Rules *********************************************************
 177:../../Source/Kernel/rme_kernel.c **** (1) No "_": OS entry function RME_Kmain and C entry "main".
 178:../../Source/Kernel/rme_kernel.c **** (2) "_"   : Kernel functions that are be called by kernel.
 179:../../Source/Kernel/rme_kernel.c **** (3) "__"  : HAL functions that are called by kernel.
 180:../../Source/Kernel/rme_kernel.c **** (4) "___" : HAL functions that should only be called by HAL.
 181:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 182:../../Source/Kernel/rme_kernel.c **** 
 183:../../Source/Kernel/rme_kernel.c **** /* Include *******************************************************************/
 184:../../Source/Kernel/rme_kernel.c **** #define __HDR_DEF__
 185:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 186:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 187:../../Source/Kernel/rme_kernel.c **** #undef __HDR_DEF__
 188:../../Source/Kernel/rme_kernel.c **** 
 189:../../Source/Kernel/rme_kernel.c **** #define __HDR_STRUCT__
 190:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 191:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 192:../../Source/Kernel/rme_kernel.c **** #undef __HDR_STRUCT__
 193:../../Source/Kernel/rme_kernel.c **** 
 194:../../Source/Kernel/rme_kernel.c **** /* Private include */
 195:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 196:../../Source/Kernel/rme_kernel.c **** 
 197:../../Source/Kernel/rme_kernel.c **** #define __HDR_PUBLIC__
 198:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 199:../../Source/Kernel/rme_kernel.c **** #undef __HDR_PUBLIC__
 200:../../Source/Kernel/rme_kernel.c **** /* End Include ***************************************************************/
 201:../../Source/Kernel/rme_kernel.c **** 
 202:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Int_Print *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 5


 203:../../Source/Kernel/rme_kernel.c **** Description : Print a signed integer on the debugging console. This integer is
 204:../../Source/Kernel/rme_kernel.c ****               printed as decimal with sign.
 205:../../Source/Kernel/rme_kernel.c **** Input       : rme_cnt_t Int - The integer to print.
 206:../../Source/Kernel/rme_kernel.c **** Output      : None.
 207:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 208:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 209:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 210:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Int_Print(rme_cnt_t Int)
 211:../../Source/Kernel/rme_kernel.c **** {
  28              		.loc 1 211 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 00482DE9 		push	{fp, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 11, -8
  35              		.cfi_offset 14, -4
  36 0004 04B08DE2 		add	fp, sp, #4
  37              		.cfi_def_cfa 11, 4
  38 0008 20D04DE2 		sub	sp, sp, #32
  39 000c 20000BE5 		str	r0, [fp, #-32]
 212:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Num;
 213:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Abs;
 214:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Iter;
 215:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
 216:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Div;
 217:../../Source/Kernel/rme_kernel.c ****     
 218:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 219:../../Source/Kernel/rme_kernel.c ****     if(Int==0)
  40              		.loc 1 219 7
  41 0010 20301BE5 		ldr	r3, [fp, #-32]
  42 0014 000053E3 		cmp	r3, #0
  43 0018 0300001A 		bne	.L2
 220:../../Source/Kernel/rme_kernel.c ****     {
 221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 222:../../Source/Kernel/rme_kernel.c **** 
 223:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
  44              		.loc 1 223 9
  45 001c 3000A0E3 		mov	r0, #48
  46 0020 FEFFFFEB 		bl	__RME_Putchar
 224:../../Source/Kernel/rme_kernel.c ****         return 1;
  47              		.loc 1 224 16
  48 0024 0130A0E3 		mov	r3, #1
  49 0028 500000EA 		b	.L3
  50              	.L2:
 225:../../Source/Kernel/rme_kernel.c ****     }
 226:../../Source/Kernel/rme_kernel.c ****     else
 227:../../Source/Kernel/rme_kernel.c ****     {
 228:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 229:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 230:../../Source/Kernel/rme_kernel.c ****     }
 231:../../Source/Kernel/rme_kernel.c **** 
 232:../../Source/Kernel/rme_kernel.c **** 
 233:../../Source/Kernel/rme_kernel.c ****     /* Correct all negatives into positives */
 234:../../Source/Kernel/rme_kernel.c ****     if(Int<0)
  51              		.loc 1 234 7
  52 002c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 6


  53 0030 000053E3 		cmp	r3, #0
  54 0034 070000AA 		bge	.L4
 235:../../Source/Kernel/rme_kernel.c ****     {
 236:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 237:../../Source/Kernel/rme_kernel.c **** 
 238:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('-');
  55              		.loc 1 238 9
  56 0038 2D00A0E3 		mov	r0, #45
  57 003c FEFFFFEB 		bl	__RME_Putchar
 239:../../Source/Kernel/rme_kernel.c ****         Abs=-Int;
  58              		.loc 1 239 12
  59 0040 20301BE5 		ldr	r3, [fp, #-32]
  60 0044 003063E2 		rsb	r3, r3, #0
  61 0048 0C300BE5 		str	r3, [fp, #-12]
 240:../../Source/Kernel/rme_kernel.c ****         Num=1;
  62              		.loc 1 240 12
  63 004c 0130A0E3 		mov	r3, #1
  64 0050 08300BE5 		str	r3, [fp, #-8]
  65 0054 030000EA 		b	.L5
  66              	.L4:
 241:../../Source/Kernel/rme_kernel.c ****     }
 242:../../Source/Kernel/rme_kernel.c ****     else
 243:../../Source/Kernel/rme_kernel.c ****     {
 244:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 245:../../Source/Kernel/rme_kernel.c **** 
 246:../../Source/Kernel/rme_kernel.c ****         Abs=Int;
  67              		.loc 1 246 12
  68 0058 20301BE5 		ldr	r3, [fp, #-32]
  69 005c 0C300BE5 		str	r3, [fp, #-12]
 247:../../Source/Kernel/rme_kernel.c ****         Num=0;
  70              		.loc 1 247 12
  71 0060 0030A0E3 		mov	r3, #0
  72 0064 08300BE5 		str	r3, [fp, #-8]
  73              	.L5:
 248:../../Source/Kernel/rme_kernel.c ****     }
 249:../../Source/Kernel/rme_kernel.c **** 
 250:../../Source/Kernel/rme_kernel.c ****     /* How many digits are there? */
 251:../../Source/Kernel/rme_kernel.c ****     Count=0;
  74              		.loc 1 251 10
  75 0068 0030A0E3 		mov	r3, #0
  76 006c 14300BE5 		str	r3, [fp, #-20]
 252:../../Source/Kernel/rme_kernel.c ****     Div=1;
  77              		.loc 1 252 8
  78 0070 0130A0E3 		mov	r3, #1
  79 0074 18300BE5 		str	r3, [fp, #-24]
 253:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
  80              		.loc 1 253 9
  81 0078 0C301BE5 		ldr	r3, [fp, #-12]
  82 007c 10300BE5 		str	r3, [fp, #-16]
  83              	.L9:
 254:../../Source/Kernel/rme_kernel.c ****     while(1U)
 255:../../Source/Kernel/rme_kernel.c ****     {
 256:../../Source/Kernel/rme_kernel.c ****         Iter/=10;
  84              		.loc 1 256 13
  85 0080 10201BE5 		ldr	r2, [fp, #-16]
  86 0084 673606E3 		movw	r3, #26215
  87 0088 663646E3 		movt	r3, 26214
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 7


  88 008c 9312C3E0 		smull	r1, r3, r3, r2
  89 0090 4311A0E1 		asr	r1, r3, #2
  90 0094 C23FA0E1 		asr	r3, r2, #31
  91 0098 033041E0 		sub	r3, r1, r3
  92 009c 10300BE5 		str	r3, [fp, #-16]
 257:../../Source/Kernel/rme_kernel.c ****         Count++;
  93              		.loc 1 257 14
  94 00a0 14301BE5 		ldr	r3, [fp, #-20]
  95 00a4 013083E2 		add	r3, r3, #1
  96 00a8 14300BE5 		str	r3, [fp, #-20]
 258:../../Source/Kernel/rme_kernel.c ****         if(Iter!=0)
  97              		.loc 1 258 11
  98 00ac 10301BE5 		ldr	r3, [fp, #-16]
  99 00b0 000053E3 		cmp	r3, #0
 100 00b4 0600000A 		beq	.L12
 259:../../Source/Kernel/rme_kernel.c ****         {
 260:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 261:../../Source/Kernel/rme_kernel.c **** 
 262:../../Source/Kernel/rme_kernel.c ****             Div*=10;
 101              		.loc 1 262 16
 102 00b8 18201BE5 		ldr	r2, [fp, #-24]
 103 00bc 0230A0E1 		mov	r3, r2
 104 00c0 0331A0E1 		lsl	r3, r3, #2
 105 00c4 023083E0 		add	r3, r3, r2
 106 00c8 8330A0E1 		lsl	r3, r3, #1
 107 00cc 18300BE5 		str	r3, [fp, #-24]
 256:../../Source/Kernel/rme_kernel.c ****         Count++;
 108              		.loc 1 256 13
 109 00d0 EAFFFFEA 		b	.L9
 110              	.L12:
 263:../../Source/Kernel/rme_kernel.c ****         }
 264:../../Source/Kernel/rme_kernel.c ****         else
 265:../../Source/Kernel/rme_kernel.c ****         {
 266:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 267:../../Source/Kernel/rme_kernel.c **** 
 268:../../Source/Kernel/rme_kernel.c ****             break;
 111              		.loc 1 268 13
 112 00d4 00F020E3 		nop
 269:../../Source/Kernel/rme_kernel.c ****         }
 270:../../Source/Kernel/rme_kernel.c ****     }
 271:../../Source/Kernel/rme_kernel.c ****     Num+=Count;
 113              		.loc 1 271 8
 114 00d8 08201BE5 		ldr	r2, [fp, #-8]
 115 00dc 14301BE5 		ldr	r3, [fp, #-20]
 116 00e0 033082E0 		add	r3, r2, r3
 117 00e4 08300BE5 		str	r3, [fp, #-8]
 272:../../Source/Kernel/rme_kernel.c **** 
 273:../../Source/Kernel/rme_kernel.c ****     /* Print the integer */
 274:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
 118              		.loc 1 274 9
 119 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 120 00ec 10300BE5 		str	r3, [fp, #-16]
 275:../../Source/Kernel/rme_kernel.c **** 
 276:../../Source/Kernel/rme_kernel.c ****     while(Count>0)
 121              		.loc 1 276 10
 122 00f0 1A0000EA 		b	.L10
 123              	.L11:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 8


 277:../../Source/Kernel/rme_kernel.c ****     {
 278:../../Source/Kernel/rme_kernel.c ****         Count--;
 124              		.loc 1 278 14
 125 00f4 14301BE5 		ldr	r3, [fp, #-20]
 126 00f8 013043E2 		sub	r3, r3, #1
 127 00fc 14300BE5 		str	r3, [fp, #-20]
 279:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar((rme_s8_t)(Iter/Div)+'0');
 128              		.loc 1 279 38
 129 0100 18101BE5 		ldr	r1, [fp, #-24]
 130 0104 10001BE5 		ldr	r0, [fp, #-16]
 131 0108 FEFFFFEB 		bl	__aeabi_idiv
 132 010c 0030A0E1 		mov	r3, r0
 133              		.loc 1 279 23
 134 0110 7330EFE6 		uxtb	r3, r3
 135              		.loc 1 279 43
 136 0114 303083E2 		add	r3, r3, #48
 137 0118 7330EFE6 		uxtb	r3, r3
 138              		.loc 1 279 9
 139 011c 7330AFE6 		sxtb	r3, r3
 140 0120 0300A0E1 		mov	r0, r3
 141 0124 FEFFFFEB 		bl	__RME_Putchar
 280:../../Source/Kernel/rme_kernel.c ****         Iter=Iter%Div;
 142              		.loc 1 280 13
 143 0128 10301BE5 		ldr	r3, [fp, #-16]
 144 012c 18101BE5 		ldr	r1, [fp, #-24]
 145 0130 0300A0E1 		mov	r0, r3
 146 0134 FEFFFFEB 		bl	__aeabi_idivmod
 147 0138 0130A0E1 		mov	r3, r1
 148 013c 10300BE5 		str	r3, [fp, #-16]
 281:../../Source/Kernel/rme_kernel.c ****         Div/=10;
 149              		.loc 1 281 12
 150 0140 18201BE5 		ldr	r2, [fp, #-24]
 151 0144 673606E3 		movw	r3, #26215
 152 0148 663646E3 		movt	r3, 26214
 153 014c 9312C3E0 		smull	r1, r3, r3, r2
 154 0150 4311A0E1 		asr	r1, r3, #2
 155 0154 C23FA0E1 		asr	r3, r2, #31
 156 0158 033041E0 		sub	r3, r1, r3
 157 015c 18300BE5 		str	r3, [fp, #-24]
 158              	.L10:
 276:../../Source/Kernel/rme_kernel.c ****     {
 159              		.loc 1 276 16
 160 0160 14301BE5 		ldr	r3, [fp, #-20]
 161 0164 000053E3 		cmp	r3, #0
 162 0168 E1FFFFCA 		bgt	.L11
 282:../../Source/Kernel/rme_kernel.c ****     }
 283:../../Source/Kernel/rme_kernel.c ****     
 284:../../Source/Kernel/rme_kernel.c ****     return Num;
 163              		.loc 1 284 12
 164 016c 08301BE5 		ldr	r3, [fp, #-8]
 165              	.L3:
 285:../../Source/Kernel/rme_kernel.c **** }
 166              		.loc 1 285 1
 167 0170 0300A0E1 		mov	r0, r3
 168 0174 04D04BE2 		sub	sp, fp, #4
 169              		.cfi_def_cfa 13, 8
 170              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 9


 171 0178 0088BDE8 		pop	{fp, pc}
 172              		.cfi_endproc
 173              	.LFE0:
 175              		.section	.text.RME_Hex_Print,"ax",%progbits
 176              		.align	2
 177              		.global	RME_Hex_Print
 178              		.syntax unified
 179              		.arm
 181              	RME_Hex_Print:
 182              	.LFB1:
 286:../../Source/Kernel/rme_kernel.c **** #endif
 287:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Int_Print ************************************************/
 288:../../Source/Kernel/rme_kernel.c **** 
 289:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Hex_Print *****************************************************
 290:../../Source/Kernel/rme_kernel.c **** Description : Print a unsigned integer on the debugging console. This integer is
 291:../../Source/Kernel/rme_kernel.c ****               printed as hexadecimal.
 292:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Uint - The unsigned integer to print.
 293:../../Source/Kernel/rme_kernel.c **** Output      : None.
 294:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 295:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 296:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 297:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Hex_Print(rme_ptr_t Uint)
 298:../../Source/Kernel/rme_kernel.c **** {
 183              		.loc 1 298 1
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 24
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 00482DE9 		push	{fp, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 11, -8
 190              		.cfi_offset 14, -4
 191 0004 04B08DE2 		add	fp, sp, #4
 192              		.cfi_def_cfa 11, 4
 193 0008 18D04DE2 		sub	sp, sp, #24
 194 000c 18000BE5 		str	r0, [fp, #-24]
 299:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Iter;
 300:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 301:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Num;
 302:../../Source/Kernel/rme_kernel.c ****     
 303:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 304:../../Source/Kernel/rme_kernel.c ****     if(Uint==0U)
 195              		.loc 1 304 7
 196 0010 18301BE5 		ldr	r3, [fp, #-24]
 197 0014 000053E3 		cmp	r3, #0
 198 0018 0300001A 		bne	.L14
 305:../../Source/Kernel/rme_kernel.c ****     {
 306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 307:../../Source/Kernel/rme_kernel.c ****         
 308:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
 199              		.loc 1 308 9
 200 001c 3000A0E3 		mov	r0, #48
 201 0020 FEFFFFEB 		bl	__RME_Putchar
 309:../../Source/Kernel/rme_kernel.c ****         return 1;
 202              		.loc 1 309 16
 203 0024 0130A0E3 		mov	r3, #1
 204 0028 330000EA 		b	.L15
 205              	.L14:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 10


 310:../../Source/Kernel/rme_kernel.c ****     }
 311:../../Source/Kernel/rme_kernel.c ****     else
 312:../../Source/Kernel/rme_kernel.c ****     {
 313:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 314:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 315:../../Source/Kernel/rme_kernel.c ****     }
 316:../../Source/Kernel/rme_kernel.c **** 
 317:../../Source/Kernel/rme_kernel.c ****     /* Filter out all the zeroes */
 318:../../Source/Kernel/rme_kernel.c ****     Count=0U;
 206              		.loc 1 318 10
 207 002c 0030A0E3 		mov	r3, #0
 208 0030 0C300BE5 		str	r3, [fp, #-12]
 319:../../Source/Kernel/rme_kernel.c ****     Iter=Uint;
 209              		.loc 1 319 9
 210 0034 18301BE5 		ldr	r3, [fp, #-24]
 211 0038 08300BE5 		str	r3, [fp, #-8]
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 212              		.loc 1 320 10
 213 003c 050000EA 		b	.L16
 214              	.L17:
 321:../../Source/Kernel/rme_kernel.c ****     {
 322:../../Source/Kernel/rme_kernel.c ****         Iter<<=4;
 215              		.loc 1 322 13
 216 0040 08301BE5 		ldr	r3, [fp, #-8]
 217 0044 0332A0E1 		lsl	r3, r3, #4
 218 0048 08300BE5 		str	r3, [fp, #-8]
 323:../../Source/Kernel/rme_kernel.c ****         Count++;
 219              		.loc 1 323 14
 220 004c 0C301BE5 		ldr	r3, [fp, #-12]
 221 0050 013083E2 		add	r3, r3, #1
 222 0054 0C300BE5 		str	r3, [fp, #-12]
 223              	.L16:
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 224              		.loc 1 320 16
 225 0058 08301BE5 		ldr	r3, [fp, #-8]
 226 005c 233EA0E1 		lsr	r3, r3, #28
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 227              		.loc 1 320 36
 228 0060 000053E3 		cmp	r3, #0
 229 0064 F5FFFF0A 		beq	.L17
 324:../../Source/Kernel/rme_kernel.c ****     }
 325:../../Source/Kernel/rme_kernel.c ****     
 326:../../Source/Kernel/rme_kernel.c ****     /* Count is the number of pts to print */
 327:../../Source/Kernel/rme_kernel.c ****     Count=RME_POW2(RME_WORD_ORDER-2U)-Count;
 230              		.loc 1 327 10
 231 0068 0C301BE5 		ldr	r3, [fp, #-12]
 232 006c 083063E2 		rsb	r3, r3, #8
 233 0070 0C300BE5 		str	r3, [fp, #-12]
 328:../../Source/Kernel/rme_kernel.c ****     Num=Count;
 234              		.loc 1 328 8
 235 0074 0C301BE5 		ldr	r3, [fp, #-12]
 236 0078 10300BE5 		str	r3, [fp, #-16]
 329:../../Source/Kernel/rme_kernel.c ****     while(Count>0U)
 237              		.loc 1 329 10
 238 007c 1A0000EA 		b	.L18
 239              	.L20:
 330:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 11


 331:../../Source/Kernel/rme_kernel.c ****         Count--;
 240              		.loc 1 331 14
 241 0080 0C301BE5 		ldr	r3, [fp, #-12]
 242 0084 013043E2 		sub	r3, r3, #1
 243 0088 0C300BE5 		str	r3, [fp, #-12]
 332:../../Source/Kernel/rme_kernel.c ****         Iter=(Uint>>(Count<<2U))&0x0FU;
 244              		.loc 1 332 27
 245 008c 0C301BE5 		ldr	r3, [fp, #-12]
 246 0090 0331A0E1 		lsl	r3, r3, #2
 247              		.loc 1 332 19
 248 0094 18201BE5 		ldr	r2, [fp, #-24]
 249 0098 3233A0E1 		lsr	r3, r2, r3
 250              		.loc 1 332 13
 251 009c 0F3003E2 		and	r3, r3, #15
 252 00a0 08300BE5 		str	r3, [fp, #-8]
 333:../../Source/Kernel/rme_kernel.c ****         if(Iter<10U)
 253              		.loc 1 333 11
 254 00a4 08301BE5 		ldr	r3, [fp, #-8]
 255 00a8 090053E3 		cmp	r3, #9
 256 00ac 0700008A 		bhi	.L19
 334:../../Source/Kernel/rme_kernel.c ****         {
 335:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 336:../../Source/Kernel/rme_kernel.c ****             
 337:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'0');
 257              		.loc 1 337 27
 258 00b0 08301BE5 		ldr	r3, [fp, #-8]
 259 00b4 7330EFE6 		uxtb	r3, r3
 260              		.loc 1 337 41
 261 00b8 303083E2 		add	r3, r3, #48
 262 00bc 7330EFE6 		uxtb	r3, r3
 263              		.loc 1 337 13
 264 00c0 7330AFE6 		sxtb	r3, r3
 265 00c4 0300A0E1 		mov	r0, r3
 266 00c8 FEFFFFEB 		bl	__RME_Putchar
 267 00cc 060000EA 		b	.L18
 268              	.L19:
 338:../../Source/Kernel/rme_kernel.c ****         }
 339:../../Source/Kernel/rme_kernel.c ****         else
 340:../../Source/Kernel/rme_kernel.c ****         {
 341:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 342:../../Source/Kernel/rme_kernel.c ****             
 343:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'A'-10);
 269              		.loc 1 343 27
 270 00d0 08301BE5 		ldr	r3, [fp, #-8]
 271 00d4 7330EFE6 		uxtb	r3, r3
 272              		.loc 1 343 45
 273 00d8 373083E2 		add	r3, r3, #55
 274 00dc 7330EFE6 		uxtb	r3, r3
 275              		.loc 1 343 13
 276 00e0 7330AFE6 		sxtb	r3, r3
 277 00e4 0300A0E1 		mov	r0, r3
 278 00e8 FEFFFFEB 		bl	__RME_Putchar
 279              	.L18:
 329:../../Source/Kernel/rme_kernel.c ****     {
 280              		.loc 1 329 16
 281 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 282 00f0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 12


 283 00f4 E1FFFF1A 		bne	.L20
 344:../../Source/Kernel/rme_kernel.c ****         }
 345:../../Source/Kernel/rme_kernel.c ****     }
 346:../../Source/Kernel/rme_kernel.c ****     
 347:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Num;
 284              		.loc 1 347 12
 285 00f8 10301BE5 		ldr	r3, [fp, #-16]
 286              	.L15:
 348:../../Source/Kernel/rme_kernel.c **** }
 287              		.loc 1 348 1
 288 00fc 0300A0E1 		mov	r0, r3
 289 0100 04D04BE2 		sub	sp, fp, #4
 290              		.cfi_def_cfa 13, 8
 291              		@ sp needed
 292 0104 0088BDE8 		pop	{fp, pc}
 293              		.cfi_endproc
 294              	.LFE1:
 296              		.section	.text.RME_Str_Print,"ax",%progbits
 297              		.align	2
 298              		.global	RME_Str_Print
 299              		.syntax unified
 300              		.arm
 302              	RME_Str_Print:
 303              	.LFB2:
 349:../../Source/Kernel/rme_kernel.c **** #endif
 350:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Hex_Print ************************************************/
 351:../../Source/Kernel/rme_kernel.c **** 
 352:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Str_Print *****************************************************
 353:../../Source/Kernel/rme_kernel.c **** Description : Print a string the kernel console.
 354:../../Source/Kernel/rme_kernel.c ****               This is only used for kernel-level debugging.
 355:../../Source/Kernel/rme_kernel.c **** Input       : const rme_s8_t* String - The string to print
 356:../../Source/Kernel/rme_kernel.c **** Output      : None.
 357:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed, the '\0' is not included.
 358:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 359:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 360:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Str_Print(const rme_s8_t* String)
 361:../../Source/Kernel/rme_kernel.c **** {
 304              		.loc 1 361 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 00482DE9 		push	{fp, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 11, -8
 311              		.cfi_offset 14, -4
 312 0004 04B08DE2 		add	fp, sp, #4
 313              		.cfi_def_cfa 11, 4
 314 0008 10D04DE2 		sub	sp, sp, #16
 315 000c 10000BE5 		str	r0, [fp, #-16]
 362:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 363:../../Source/Kernel/rme_kernel.c ****     
 364:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_DBGLOG_MAX;Count++)
 316              		.loc 1 364 14
 317 0010 0030A0E3 		mov	r3, #0
 318 0014 08300BE5 		str	r3, [fp, #-8]
 319              		.loc 1 364 5
 320 0018 0E0000EA 		b	.L22
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 13


 321              	.L25:
 365:../../Source/Kernel/rme_kernel.c ****     {
 366:../../Source/Kernel/rme_kernel.c ****         if(String[Count]==(rme_s8_t)'\0')
 322              		.loc 1 366 18
 323 001c 10201BE5 		ldr	r2, [fp, #-16]
 324 0020 08301BE5 		ldr	r3, [fp, #-8]
 325 0024 033082E0 		add	r3, r2, r3
 326 0028 D030D3E1 		ldrsb	r3, [r3]
 327              		.loc 1 366 11
 328 002c 000053E3 		cmp	r3, #0
 329 0030 0C00000A 		beq	.L27
 367:../../Source/Kernel/rme_kernel.c ****         {
 368:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 369:../../Source/Kernel/rme_kernel.c ****             
 370:../../Source/Kernel/rme_kernel.c ****             break;
 371:../../Source/Kernel/rme_kernel.c ****         }
 372:../../Source/Kernel/rme_kernel.c ****         else
 373:../../Source/Kernel/rme_kernel.c ****         {
 374:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 375:../../Source/Kernel/rme_kernel.c ****             /* No action required */
 376:../../Source/Kernel/rme_kernel.c ****         }
 377:../../Source/Kernel/rme_kernel.c ****         
 378:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar(String[Count]);
 330              		.loc 1 378 29
 331 0034 10201BE5 		ldr	r2, [fp, #-16]
 332 0038 08301BE5 		ldr	r3, [fp, #-8]
 333 003c 033082E0 		add	r3, r2, r3
 334              		.loc 1 378 9
 335 0040 D030D3E1 		ldrsb	r3, [r3]
 336 0044 0300A0E1 		mov	r0, r3
 337 0048 FEFFFFEB 		bl	__RME_Putchar
 364:../../Source/Kernel/rme_kernel.c ****     {
 338              		.loc 1 364 44 discriminator 2
 339 004c 08301BE5 		ldr	r3, [fp, #-8]
 340 0050 013083E2 		add	r3, r3, #1
 341 0054 08300BE5 		str	r3, [fp, #-8]
 342              	.L22:
 364:../../Source/Kernel/rme_kernel.c ****     {
 343              		.loc 1 364 23 discriminator 1
 344 0058 08301BE5 		ldr	r3, [fp, #-8]
 345 005c FE0053E3 		cmp	r3, #254
 346 0060 EDFFFF9A 		bls	.L25
 347 0064 000000EA 		b	.L24
 348              	.L27:
 370:../../Source/Kernel/rme_kernel.c ****         }
 349              		.loc 1 370 13
 350 0068 00F020E3 		nop
 351              	.L24:
 379:../../Source/Kernel/rme_kernel.c ****     }
 380:../../Source/Kernel/rme_kernel.c ****     
 381:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Count;
 352              		.loc 1 381 12
 353 006c 08301BE5 		ldr	r3, [fp, #-8]
 382:../../Source/Kernel/rme_kernel.c **** }
 354              		.loc 1 382 1
 355 0070 0300A0E1 		mov	r0, r3
 356 0074 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 14


 357              		.cfi_def_cfa 13, 8
 358              		@ sp needed
 359 0078 0088BDE8 		pop	{fp, pc}
 360              		.cfi_endproc
 361              	.LFE2:
 363              		.section	.rodata
 364              		.align	2
 365              	.LC0:
 366 0000 0D0A2A2A 		.ascii	"\015\012***\015\012Kernel panic - not syncing :\015"
 366      2A0D0A4B 
 366      65726E65 
 366      6C207061 
 366      6E696320 
 367 0024 0A00     		.ascii	"\012\000"
 368 0026 0000     		.align	2
 369              	.LC1:
 370 0028 202C204C 		.ascii	" , Line \000"
 370      696E6520 
 370      00
 371 0031 000000   		.align	2
 372              	.LC2:
 373 0034 0D0A00   		.ascii	"\015\012\000"
 374 0037 00       		.align	2
 375              	.LC3:
 376 0038 202C2000 		.ascii	" , \000"
 377              		.section	.text.RME_Log,"ax",%progbits
 378              		.align	2
 379              		.global	RME_Log
 380              		.syntax unified
 381              		.arm
 383              	RME_Log:
 384              	.LFB3:
 383:../../Source/Kernel/rme_kernel.c **** #endif
 384:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Str_Print ************************************************/
 385:../../Source/Kernel/rme_kernel.c **** 
 386:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Log ***********************************************************
 387:../../Source/Kernel/rme_kernel.c **** Description : Default logging function, will be used when the user does not 
 388:../../Source/Kernel/rme_kernel.c ****               supply one. This will only be called when the kernel panics.
 389:../../Source/Kernel/rme_kernel.c **** Input       : const char* File - The filename.
 390:../../Source/Kernel/rme_kernel.c ****               long Line - The line number.
 391:../../Source/Kernel/rme_kernel.c ****               const char* Date - The compilation date.
 392:../../Source/Kernel/rme_kernel.c ****               const char* Time - The compilation time.
 393:../../Source/Kernel/rme_kernel.c **** Output      : None.
 394:../../Source/Kernel/rme_kernel.c **** Return      : None.
 395:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 396:../../Source/Kernel/rme_kernel.c **** #ifndef RME_LOG
 397:../../Source/Kernel/rme_kernel.c **** void RME_Log(const char* File,
 398:../../Source/Kernel/rme_kernel.c ****              long Line,
 399:../../Source/Kernel/rme_kernel.c ****              const char* Date,
 400:../../Source/Kernel/rme_kernel.c ****              const char* Time)
 401:../../Source/Kernel/rme_kernel.c **** {
 385              		.loc 1 401 1
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 00482DE9 		push	{fp, lr}
 390              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 15


 391              		.cfi_offset 11, -8
 392              		.cfi_offset 14, -4
 393 0004 04B08DE2 		add	fp, sp, #4
 394              		.cfi_def_cfa 11, 4
 395 0008 10D04DE2 		sub	sp, sp, #16
 396 000c 08000BE5 		str	r0, [fp, #-8]
 397 0010 0C100BE5 		str	r1, [fp, #-12]
 398 0014 10200BE5 		str	r2, [fp, #-16]
 399 0018 14300BE5 		str	r3, [fp, #-20]
 402:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n***\r\nKernel panic - not syncing :\r\n"); \
 400              		.loc 1 402 5
 401 001c 000000E3 		movw	r0, #:lower16:.LC0
 402 0020 000040E3 		movt	r0, #:upper16:.LC0
 403 0024 FEFFFFEB 		bl	RME_Str_Print
 403:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(File); \
 404              		.loc 1 403 5
 405 0028 08001BE5 		ldr	r0, [fp, #-8]
 406 002c FEFFFFEB 		bl	RME_Str_Print
 404:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , Line "); \
 407              		.loc 1 404 5
 408 0030 000000E3 		movw	r0, #:lower16:.LC1
 409 0034 000040E3 		movt	r0, #:upper16:.LC1
 410 0038 FEFFFFEB 		bl	RME_Str_Print
 405:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Line); \
 411              		.loc 1 405 5
 412 003c 0C001BE5 		ldr	r0, [fp, #-12]
 413 0040 FEFFFFEB 		bl	RME_Int_Print
 406:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 414              		.loc 1 406 5
 415 0044 000000E3 		movw	r0, #:lower16:.LC2
 416 0048 000040E3 		movt	r0, #:upper16:.LC2
 417 004c FEFFFFEB 		bl	RME_Str_Print
 407:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Date); \
 418              		.loc 1 407 5
 419 0050 10001BE5 		ldr	r0, [fp, #-16]
 420 0054 FEFFFFEB 		bl	RME_Str_Print
 408:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , "); \
 421              		.loc 1 408 5
 422 0058 000000E3 		movw	r0, #:lower16:.LC3
 423 005c 000040E3 		movt	r0, #:upper16:.LC3
 424 0060 FEFFFFEB 		bl	RME_Str_Print
 409:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Time); \
 425              		.loc 1 409 5
 426 0064 14001BE5 		ldr	r0, [fp, #-20]
 427 0068 FEFFFFEB 		bl	RME_Str_Print
 410:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 428              		.loc 1 410 5
 429 006c 000000E3 		movw	r0, #:lower16:.LC2
 430 0070 000040E3 		movt	r0, #:upper16:.LC2
 431 0074 FEFFFFEB 		bl	RME_Str_Print
 411:../../Source/Kernel/rme_kernel.c **** }
 432              		.loc 1 411 1
 433 0078 00F020E3 		nop
 434 007c 04D04BE2 		sub	sp, fp, #4
 435              		.cfi_def_cfa 13, 8
 436              		@ sp needed
 437 0080 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 16


 438              		.cfi_endproc
 439              	.LFE3:
 441              		.section	.text._RME_MSB_Generic,"ax",%progbits
 442              		.align	2
 443              		.global	_RME_MSB_Generic
 444              		.syntax unified
 445              		.arm
 447              	_RME_MSB_Generic:
 448              	.LFB4:
 412:../../Source/Kernel/rme_kernel.c **** #endif
 413:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Log ******************************************************/
 414:../../Source/Kernel/rme_kernel.c **** 
 415:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Cov_Print *****************************************************
 416:../../Source/Kernel/rme_kernel.c **** Description : The coverage data printer. Should always be disabled for all cases
 417:../../Source/Kernel/rme_kernel.c ****               except where a kernel coverage test is needed. This should never
 418:../../Source/Kernel/rme_kernel.c ****               be called any any user application; for coverage testing only.
 419:../../Source/Kernel/rme_kernel.c **** Input       : None.
 420:../../Source/Kernel/rme_kernel.c **** Output      : None.
 421:../../Source/Kernel/rme_kernel.c **** Return      : None.
 422:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 423:../../Source/Kernel/rme_kernel.c **** #ifdef RME_COV_LINE_NUM
 424:../../Source/Kernel/rme_kernel.c **** void RME_Cov_Print(void)
 425:../../Source/Kernel/rme_kernel.c **** {
 426:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Count;
 427:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Next;
 428:../../Source/Kernel/rme_kernel.c ****     
 429:../../Source/Kernel/rme_kernel.c ****     Next=0U;
 430:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_COV_LINE_NUM;Count++)
 431:../../Source/Kernel/rme_kernel.c ****     {
 432:../../Source/Kernel/rme_kernel.c ****         if(RME_BITMAP_IS_SET(RME_Cov,Count))
 433:../../Source/Kernel/rme_kernel.c ****         {
 434:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 435:../../Source/Kernel/rme_kernel.c ****             RME_DBG_I(Count);
 436:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S(",");
 437:../../Source/Kernel/rme_kernel.c ****             /* We put 12 markers on a single line */
 438:../../Source/Kernel/rme_kernel.c ****             Next++;
 439:../../Source/Kernel/rme_kernel.c ****             if(Next>11U)
 440:../../Source/Kernel/rme_kernel.c ****             {
 441:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 442:../../Source/Kernel/rme_kernel.c ****                 
 443:../../Source/Kernel/rme_kernel.c ****                 Next=0U;
 444:../../Source/Kernel/rme_kernel.c ****                 RME_DBG_S("\r\n");
 445:../../Source/Kernel/rme_kernel.c ****             }
 446:../../Source/Kernel/rme_kernel.c ****             else
 447:../../Source/Kernel/rme_kernel.c ****             {
 448:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 449:../../Source/Kernel/rme_kernel.c ****                 /* No action needed */
 450:../../Source/Kernel/rme_kernel.c ****             }
 451:../../Source/Kernel/rme_kernel.c ****         }
 452:../../Source/Kernel/rme_kernel.c ****         else
 453:../../Source/Kernel/rme_kernel.c ****         {
 454:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 455:../../Source/Kernel/rme_kernel.c ****             /* No action needed */
 456:../../Source/Kernel/rme_kernel.c ****         }
 457:../../Source/Kernel/rme_kernel.c ****     }
 458:../../Source/Kernel/rme_kernel.c **** }
 459:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 17


 460:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Cov_Print ************************************************/
 461:../../Source/Kernel/rme_kernel.c **** 
 462:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_MSB_Generic **************************************************
 463:../../Source/Kernel/rme_kernel.c **** Description : Find the MSB's position. This is a portable solution for all
 464:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 465:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 466:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to compute for.
 467:../../Source/Kernel/rme_kernel.c **** Output      : None.
 468:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 469:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 470:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_MSB_Generic(rme_ptr_t Value)
 471:../../Source/Kernel/rme_kernel.c **** {
 449              		.loc 1 471 1
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 16
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 04B02DE5 		str	fp, [sp, #-4]!
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 11, -4
 457 0004 00B08DE2 		add	fp, sp, #0
 458              		.cfi_def_cfa_register 11
 459 0008 14D04DE2 		sub	sp, sp, #20
 460 000c 10000BE5 		str	r0, [fp, #-16]
 472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 473:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 474:../../Source/Kernel/rme_kernel.c ****     {
 475:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,1U,2U,2U,2U,2U,3U,3U,3U,3U,3U,3U,3U,3U,
 476:../../Source/Kernel/rme_kernel.c ****         4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,
 477:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 478:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 479:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 480:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 481:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 482:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 483:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 484:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 485:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 486:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 487:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 488:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 489:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 490:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U
 491:../../Source/Kernel/rme_kernel.c ****     };
 492:../../Source/Kernel/rme_kernel.c **** 
 493:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 494:../../Source/Kernel/rme_kernel.c ****     /* 15-8 */
 495:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(8U))
 496:../../Source/Kernel/rme_kernel.c ****     {
 497:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 498:../../Source/Kernel/rme_kernel.c ****         
 499:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 500:../../Source/Kernel/rme_kernel.c ****     }
 501:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 502:../../Source/Kernel/rme_kernel.c ****     else
 503:../../Source/Kernel/rme_kernel.c ****     {
 504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 18


 505:../../Source/Kernel/rme_kernel.c ****         
 506:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 507:../../Source/Kernel/rme_kernel.c ****     }
 508:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 509:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 510:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(16U))
 461              		.loc 1 510 7
 462 0010 10301BE5 		ldr	r3, [fp, #-16]
 463 0014 010853E3 		cmp	r3, #65536
 464 0018 0800003A 		bcc	.L30
 511:../../Source/Kernel/rme_kernel.c ****     {
 512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 513:../../Source/Kernel/rme_kernel.c ****         
 514:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 515:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(24U))
 465              		.loc 1 515 11
 466 001c 10301BE5 		ldr	r3, [fp, #-16]
 467 0020 010453E3 		cmp	r3, #16777216
 468 0024 0200003A 		bcc	.L31
 516:../../Source/Kernel/rme_kernel.c ****         {
 517:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 518:../../Source/Kernel/rme_kernel.c ****             
 519:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 469              		.loc 1 519 16
 470 0028 1830A0E3 		mov	r3, #24
 471 002c 08300BE5 		str	r3, [fp, #-8]
 472 0030 0A0000EA 		b	.L32
 473              	.L31:
 520:../../Source/Kernel/rme_kernel.c ****         }
 521:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 522:../../Source/Kernel/rme_kernel.c ****         else
 523:../../Source/Kernel/rme_kernel.c ****         {
 524:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 525:../../Source/Kernel/rme_kernel.c ****             
 526:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 474              		.loc 1 526 16
 475 0034 1030A0E3 		mov	r3, #16
 476 0038 08300BE5 		str	r3, [fp, #-8]
 477 003c 070000EA 		b	.L32
 478              	.L30:
 527:../../Source/Kernel/rme_kernel.c ****         }
 528:../../Source/Kernel/rme_kernel.c ****     }
 529:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 530:../../Source/Kernel/rme_kernel.c ****     else
 531:../../Source/Kernel/rme_kernel.c ****     {
 532:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 533:../../Source/Kernel/rme_kernel.c ****         
 534:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 535:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(8U))
 479              		.loc 1 535 11
 480 0040 10301BE5 		ldr	r3, [fp, #-16]
 481 0044 FF0053E3 		cmp	r3, #255
 482 0048 0200009A 		bls	.L33
 536:../../Source/Kernel/rme_kernel.c ****         {
 537:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 538:../../Source/Kernel/rme_kernel.c ****             
 539:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 19


 483              		.loc 1 539 16
 484 004c 0830A0E3 		mov	r3, #8
 485 0050 08300BE5 		str	r3, [fp, #-8]
 486 0054 010000EA 		b	.L32
 487              	.L33:
 540:../../Source/Kernel/rme_kernel.c ****         }
 541:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 542:../../Source/Kernel/rme_kernel.c ****         else
 543:../../Source/Kernel/rme_kernel.c ****         {
 544:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 545:../../Source/Kernel/rme_kernel.c ****             
 546:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 488              		.loc 1 546 16
 489 0058 0030A0E3 		mov	r3, #0
 490 005c 08300BE5 		str	r3, [fp, #-8]
 491              	.L32:
 547:../../Source/Kernel/rme_kernel.c ****         }
 548:../../Source/Kernel/rme_kernel.c ****     }
 549:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 550:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 551:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(32U))
 552:../../Source/Kernel/rme_kernel.c ****     {
 553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 554:../../Source/Kernel/rme_kernel.c ****         
 555:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 556:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(48U))
 557:../../Source/Kernel/rme_kernel.c ****         {
 558:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 559:../../Source/Kernel/rme_kernel.c ****             
 560:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 561:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(56U))
 562:../../Source/Kernel/rme_kernel.c ****             {
 563:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 564:../../Source/Kernel/rme_kernel.c ****                 
 565:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 566:../../Source/Kernel/rme_kernel.c ****             }
 567:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 568:../../Source/Kernel/rme_kernel.c ****             else
 569:../../Source/Kernel/rme_kernel.c ****             {
 570:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 571:../../Source/Kernel/rme_kernel.c ****                 
 572:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 573:../../Source/Kernel/rme_kernel.c ****             }
 574:../../Source/Kernel/rme_kernel.c ****         }
 575:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 576:../../Source/Kernel/rme_kernel.c ****         else
 577:../../Source/Kernel/rme_kernel.c ****         {
 578:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 579:../../Source/Kernel/rme_kernel.c ****             
 580:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 581:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(40U))
 582:../../Source/Kernel/rme_kernel.c ****             {
 583:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 584:../../Source/Kernel/rme_kernel.c ****                 
 585:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 586:../../Source/Kernel/rme_kernel.c ****             }
 587:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 20


 588:../../Source/Kernel/rme_kernel.c ****             else
 589:../../Source/Kernel/rme_kernel.c ****             {
 590:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 591:../../Source/Kernel/rme_kernel.c ****                 
 592:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 593:../../Source/Kernel/rme_kernel.c ****             }
 594:../../Source/Kernel/rme_kernel.c ****         }
 595:../../Source/Kernel/rme_kernel.c ****     }
 596:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 597:../../Source/Kernel/rme_kernel.c ****     else
 598:../../Source/Kernel/rme_kernel.c ****     {
 599:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 600:../../Source/Kernel/rme_kernel.c ****         
 601:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 602:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(16U))
 603:../../Source/Kernel/rme_kernel.c ****         {
 604:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 605:../../Source/Kernel/rme_kernel.c ****             
 606:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 607:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(24U))
 608:../../Source/Kernel/rme_kernel.c ****             {
 609:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 610:../../Source/Kernel/rme_kernel.c ****                 
 611:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 612:../../Source/Kernel/rme_kernel.c ****             }
 613:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 614:../../Source/Kernel/rme_kernel.c ****             else
 615:../../Source/Kernel/rme_kernel.c ****             {
 616:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 617:../../Source/Kernel/rme_kernel.c ****                 
 618:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 619:../../Source/Kernel/rme_kernel.c ****             }
 620:../../Source/Kernel/rme_kernel.c ****         }
 621:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 622:../../Source/Kernel/rme_kernel.c ****         else
 623:../../Source/Kernel/rme_kernel.c ****         {
 624:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 625:../../Source/Kernel/rme_kernel.c ****             
 626:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 627:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(8U))
 628:../../Source/Kernel/rme_kernel.c ****             {
 629:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 630:../../Source/Kernel/rme_kernel.c ****                 
 631:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 632:../../Source/Kernel/rme_kernel.c ****             }
 633:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 634:../../Source/Kernel/rme_kernel.c ****             else
 635:../../Source/Kernel/rme_kernel.c ****             {
 636:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 637:../../Source/Kernel/rme_kernel.c ****                 
 638:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 639:../../Source/Kernel/rme_kernel.c ****             }
 640:../../Source/Kernel/rme_kernel.c ****         }
 641:../../Source/Kernel/rme_kernel.c ****     }
 642:../../Source/Kernel/rme_kernel.c **** #else
 643:../../Source/Kernel/rme_kernel.c **** #error Generic MSB for 128-bits & above are not implemented.
 644:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 21


 645:../../Source/Kernel/rme_kernel.c **** 
 646:../../Source/Kernel/rme_kernel.c ****     return Table[Value>>Bit]+Bit;
 492              		.loc 1 646 23
 493 0060 10201BE5 		ldr	r2, [fp, #-16]
 494 0064 08301BE5 		ldr	r3, [fp, #-8]
 495 0068 3223A0E1 		lsr	r2, r2, r3
 496              		.loc 1 646 17
 497 006c 003000E3 		movw	r3, #:lower16:Table.1
 498 0070 003040E3 		movt	r3, #:upper16:Table.1
 499 0074 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 500 0078 0320A0E1 		mov	r2, r3
 501              		.loc 1 646 29
 502 007c 08301BE5 		ldr	r3, [fp, #-8]
 503 0080 033082E0 		add	r3, r2, r3
 647:../../Source/Kernel/rme_kernel.c **** }
 504              		.loc 1 647 1
 505 0084 0300A0E1 		mov	r0, r3
 506 0088 00D08BE2 		add	sp, fp, #0
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 008c 04B09DE4 		ldr	fp, [sp], #4
 510              		.cfi_restore 11
 511              		.cfi_def_cfa_offset 0
 512 0090 1EFF2FE1 		bx	lr
 513              		.cfi_endproc
 514              	.LFE4:
 516              		.section	.text._RME_LSB_Generic,"ax",%progbits
 517              		.align	2
 518              		.global	_RME_LSB_Generic
 519              		.syntax unified
 520              		.arm
 522              	_RME_LSB_Generic:
 523              	.LFB5:
 648:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_MSB_Generic *********************************************/
 649:../../Source/Kernel/rme_kernel.c **** 
 650:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_LSB_Generic **************************************************
 651:../../Source/Kernel/rme_kernel.c **** Description : Find the LSB's position. This is a portable solution for all
 652:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 653:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 654:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to count.
 655:../../Source/Kernel/rme_kernel.c **** Output      : None.
 656:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 657:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 658:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_LSB_Generic(rme_ptr_t Value)
 659:../../Source/Kernel/rme_kernel.c **** {
 524              		.loc 1 659 1
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529 0000 04B02DE5 		str	fp, [sp, #-4]!
 530              		.cfi_def_cfa_offset 4
 531              		.cfi_offset 11, -4
 532 0004 00B08DE2 		add	fp, sp, #0
 533              		.cfi_def_cfa_register 11
 534 0008 14D04DE2 		sub	sp, sp, #20
 535 000c 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 22


 660:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 661:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 662:../../Source/Kernel/rme_kernel.c ****     {
 663:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 664:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 665:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 666:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 667:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 668:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 669:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 670:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 671:../../Source/Kernel/rme_kernel.c ****         7U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 672:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 673:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 674:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 675:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 676:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 677:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 678:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U
 679:../../Source/Kernel/rme_kernel.c ****     };
 680:../../Source/Kernel/rme_kernel.c ****     
 681:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 682:../../Source/Kernel/rme_kernel.c ****     /* 16-8 */
 683:../../Source/Kernel/rme_kernel.c ****     if((Value<<8U)==0U)
 684:../../Source/Kernel/rme_kernel.c ****     {
 685:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 686:../../Source/Kernel/rme_kernel.c ****         
 687:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 688:../../Source/Kernel/rme_kernel.c ****     }
 689:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 690:../../Source/Kernel/rme_kernel.c ****     else
 691:../../Source/Kernel/rme_kernel.c ****     {
 692:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 693:../../Source/Kernel/rme_kernel.c ****         
 694:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 695:../../Source/Kernel/rme_kernel.c ****     }
 696:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 697:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 698:../../Source/Kernel/rme_kernel.c ****     if((Value<<16U)==0U)
 536              		.loc 1 698 14
 537 0010 10301BE5 		ldr	r3, [fp, #-16]
 538 0014 0338A0E1 		lsl	r3, r3, #16
 539              		.loc 1 698 7
 540 0018 000053E3 		cmp	r3, #0
 541 001c 0900001A 		bne	.L36
 699:../../Source/Kernel/rme_kernel.c ****     {
 700:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 701:../../Source/Kernel/rme_kernel.c ****         
 702:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 703:../../Source/Kernel/rme_kernel.c ****         if((Value<<8U)==0U)
 542              		.loc 1 703 18
 543 0020 10301BE5 		ldr	r3, [fp, #-16]
 544 0024 0334A0E1 		lsl	r3, r3, #8
 545              		.loc 1 703 11
 546 0028 000053E3 		cmp	r3, #0
 547 002c 0200001A 		bne	.L37
 704:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 23


 705:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 706:../../Source/Kernel/rme_kernel.c ****             
 707:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 548              		.loc 1 707 16
 549 0030 1830A0E3 		mov	r3, #24
 550 0034 08300BE5 		str	r3, [fp, #-8]
 551 0038 0B0000EA 		b	.L38
 552              	.L37:
 708:../../Source/Kernel/rme_kernel.c ****         }
 709:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 710:../../Source/Kernel/rme_kernel.c ****         else
 711:../../Source/Kernel/rme_kernel.c ****         {
 712:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 713:../../Source/Kernel/rme_kernel.c ****             
 714:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 553              		.loc 1 714 16
 554 003c 1030A0E3 		mov	r3, #16
 555 0040 08300BE5 		str	r3, [fp, #-8]
 556 0044 080000EA 		b	.L38
 557              	.L36:
 715:../../Source/Kernel/rme_kernel.c ****         }
 716:../../Source/Kernel/rme_kernel.c ****     }
 717:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 718:../../Source/Kernel/rme_kernel.c ****     else
 719:../../Source/Kernel/rme_kernel.c ****     {
 720:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 721:../../Source/Kernel/rme_kernel.c ****         
 722:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 723:../../Source/Kernel/rme_kernel.c ****         if((Value<<24U)==0U)
 558              		.loc 1 723 18
 559 0048 10301BE5 		ldr	r3, [fp, #-16]
 560 004c 033CA0E1 		lsl	r3, r3, #24
 561              		.loc 1 723 11
 562 0050 000053E3 		cmp	r3, #0
 563 0054 0200001A 		bne	.L39
 724:../../Source/Kernel/rme_kernel.c ****         {
 725:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 726:../../Source/Kernel/rme_kernel.c ****             
 727:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 564              		.loc 1 727 16
 565 0058 0830A0E3 		mov	r3, #8
 566 005c 08300BE5 		str	r3, [fp, #-8]
 567 0060 010000EA 		b	.L38
 568              	.L39:
 728:../../Source/Kernel/rme_kernel.c ****         }
 729:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 730:../../Source/Kernel/rme_kernel.c ****         else
 731:../../Source/Kernel/rme_kernel.c ****         {
 732:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 733:../../Source/Kernel/rme_kernel.c ****             
 734:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 569              		.loc 1 734 16
 570 0064 0030A0E3 		mov	r3, #0
 571 0068 08300BE5 		str	r3, [fp, #-8]
 572              	.L38:
 735:../../Source/Kernel/rme_kernel.c ****         }
 736:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 24


 737:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 738:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 739:../../Source/Kernel/rme_kernel.c ****     if((Value<<32U)==0U)
 740:../../Source/Kernel/rme_kernel.c ****     {
 741:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 742:../../Source/Kernel/rme_kernel.c ****         
 743:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 744:../../Source/Kernel/rme_kernel.c ****         if((Value<<16U)==0U)
 745:../../Source/Kernel/rme_kernel.c ****         {
 746:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 747:../../Source/Kernel/rme_kernel.c ****             
 748:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 749:../../Source/Kernel/rme_kernel.c ****             if((Value<<8U)==0U)
 750:../../Source/Kernel/rme_kernel.c ****             {
 751:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 752:../../Source/Kernel/rme_kernel.c ****                 
 753:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 754:../../Source/Kernel/rme_kernel.c ****             }
 755:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 756:../../Source/Kernel/rme_kernel.c ****             else
 757:../../Source/Kernel/rme_kernel.c ****             {
 758:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 759:../../Source/Kernel/rme_kernel.c ****                 
 760:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 761:../../Source/Kernel/rme_kernel.c ****             }
 762:../../Source/Kernel/rme_kernel.c ****         }
 763:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 764:../../Source/Kernel/rme_kernel.c ****         else
 765:../../Source/Kernel/rme_kernel.c ****         {
 766:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 767:../../Source/Kernel/rme_kernel.c ****             
 768:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 769:../../Source/Kernel/rme_kernel.c ****             if((Value<<24U)==0U)
 770:../../Source/Kernel/rme_kernel.c ****             {
 771:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 772:../../Source/Kernel/rme_kernel.c ****                 
 773:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 774:../../Source/Kernel/rme_kernel.c ****             }
 775:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 776:../../Source/Kernel/rme_kernel.c ****             else
 777:../../Source/Kernel/rme_kernel.c ****             {
 778:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 779:../../Source/Kernel/rme_kernel.c ****                 
 780:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 781:../../Source/Kernel/rme_kernel.c ****             }
 782:../../Source/Kernel/rme_kernel.c ****         }
 783:../../Source/Kernel/rme_kernel.c ****     }
 784:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 785:../../Source/Kernel/rme_kernel.c ****     else
 786:../../Source/Kernel/rme_kernel.c ****     {
 787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 788:../../Source/Kernel/rme_kernel.c ****         
 789:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 790:../../Source/Kernel/rme_kernel.c ****         if((Value<<48U)==0U)
 791:../../Source/Kernel/rme_kernel.c ****         {
 792:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 793:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 25


 794:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 795:../../Source/Kernel/rme_kernel.c ****             if((Value<<40U)==0U)
 796:../../Source/Kernel/rme_kernel.c ****             {
 797:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 798:../../Source/Kernel/rme_kernel.c ****                 
 799:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 800:../../Source/Kernel/rme_kernel.c ****             }
 801:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 802:../../Source/Kernel/rme_kernel.c ****             else
 803:../../Source/Kernel/rme_kernel.c ****             {
 804:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 805:../../Source/Kernel/rme_kernel.c ****                 
 806:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 807:../../Source/Kernel/rme_kernel.c ****             }
 808:../../Source/Kernel/rme_kernel.c ****         }
 809:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 810:../../Source/Kernel/rme_kernel.c ****         else
 811:../../Source/Kernel/rme_kernel.c ****         {
 812:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 813:../../Source/Kernel/rme_kernel.c ****             
 814:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 815:../../Source/Kernel/rme_kernel.c ****             if((Value<<56U)==0U)
 816:../../Source/Kernel/rme_kernel.c ****             {
 817:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 818:../../Source/Kernel/rme_kernel.c ****                 
 819:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 820:../../Source/Kernel/rme_kernel.c ****             }
 821:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 822:../../Source/Kernel/rme_kernel.c ****             else
 823:../../Source/Kernel/rme_kernel.c ****             {
 824:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 825:../../Source/Kernel/rme_kernel.c ****                 
 826:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 827:../../Source/Kernel/rme_kernel.c ****             }
 828:../../Source/Kernel/rme_kernel.c ****         }
 829:../../Source/Kernel/rme_kernel.c ****     }
 830:../../Source/Kernel/rme_kernel.c **** #else
 831:../../Source/Kernel/rme_kernel.c **** #error Generic LSB for 128-bits & above are not implemented.
 832:../../Source/Kernel/rme_kernel.c **** #endif
 833:../../Source/Kernel/rme_kernel.c **** 
 834:../../Source/Kernel/rme_kernel.c ****     return Table[(rme_u8_t)(Value>>Bit)]+Bit;
 573              		.loc 1 834 34
 574 006c 10201BE5 		ldr	r2, [fp, #-16]
 575 0070 08301BE5 		ldr	r3, [fp, #-8]
 576 0074 3233A0E1 		lsr	r3, r2, r3
 577              		.loc 1 834 18
 578 0078 7330EFE6 		uxtb	r3, r3
 579 007c 0320A0E1 		mov	r2, r3
 580              		.loc 1 834 17
 581 0080 003000E3 		movw	r3, #:lower16:Table.0
 582 0084 003040E3 		movt	r3, #:upper16:Table.0
 583 0088 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 584 008c 0320A0E1 		mov	r2, r3
 585              		.loc 1 834 41
 586 0090 08301BE5 		ldr	r3, [fp, #-8]
 587 0094 033082E0 		add	r3, r2, r3
 835:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 26


 588              		.loc 1 835 1
 589 0098 0300A0E1 		mov	r0, r3
 590 009c 00D08BE2 		add	sp, fp, #0
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 00a0 04B09DE4 		ldr	fp, [sp], #4
 594              		.cfi_restore 11
 595              		.cfi_def_cfa_offset 0
 596 00a4 1EFF2FE1 		bx	lr
 597              		.cfi_endproc
 598              	.LFE5:
 600              		.section	.text._RME_Comp_Swap_Single,"ax",%progbits
 601              		.align	2
 602              		.global	_RME_Comp_Swap_Single
 603              		.syntax unified
 604              		.arm
 606              	_RME_Comp_Swap_Single:
 607              	.LFB6:
 836:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_LSB_Generic *********************************************/
 837:../../Source/Kernel/rme_kernel.c **** 
 838:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Comp_Swap_Single *********************************************
 839:../../Source/Kernel/rme_kernel.c **** Description : The compare-and-swap atomic instruction. If the Old value is
 840:../../Source/Kernel/rme_kernel.c ****               equal to *Ptr, then set the *Ptr as New and return 1; else return
 841:../../Source/Kernel/rme_kernel.c ****               0.
 842:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 843:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 844:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Old - The old value.
 845:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t New - The new value.
 846:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 847:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - If successful, 1; else 0.
 848:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 849:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Comp_Swap_Single(volatile rme_ptr_t* Ptr,
 850:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Old,
 851:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t New)
 852:../../Source/Kernel/rme_kernel.c **** {
 608              		.loc 1 852 1
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 16
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613 0000 04B02DE5 		str	fp, [sp, #-4]!
 614              		.cfi_def_cfa_offset 4
 615              		.cfi_offset 11, -4
 616 0004 00B08DE2 		add	fp, sp, #0
 617              		.cfi_def_cfa_register 11
 618 0008 14D04DE2 		sub	sp, sp, #20
 619 000c 08000BE5 		str	r0, [fp, #-8]
 620 0010 0C100BE5 		str	r1, [fp, #-12]
 621 0014 10200BE5 		str	r2, [fp, #-16]
 853:../../Source/Kernel/rme_kernel.c ****     if(*Ptr==Old)
 622              		.loc 1 853 8
 623 0018 08301BE5 		ldr	r3, [fp, #-8]
 624 001c 003093E5 		ldr	r3, [r3]
 625              		.loc 1 853 7
 626 0020 0C201BE5 		ldr	r2, [fp, #-12]
 627 0024 030052E1 		cmp	r2, r3
 628 0028 0400001A 		bne	.L42
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 27


 854:../../Source/Kernel/rme_kernel.c ****     {
 855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 856:../../Source/Kernel/rme_kernel.c ****         
 857:../../Source/Kernel/rme_kernel.c ****         *Ptr=New;
 629              		.loc 1 857 13
 630 002c 08301BE5 		ldr	r3, [fp, #-8]
 631 0030 10201BE5 		ldr	r2, [fp, #-16]
 632 0034 002083E5 		str	r2, [r3]
 858:../../Source/Kernel/rme_kernel.c ****         return 1U;
 633              		.loc 1 858 16
 634 0038 0130A0E3 		mov	r3, #1
 635 003c 000000EA 		b	.L43
 636              	.L42:
 859:../../Source/Kernel/rme_kernel.c ****     }
 860:../../Source/Kernel/rme_kernel.c ****     else
 861:../../Source/Kernel/rme_kernel.c ****     {
 862:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 863:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 864:../../Source/Kernel/rme_kernel.c ****     }
 865:../../Source/Kernel/rme_kernel.c **** 
 866:../../Source/Kernel/rme_kernel.c ****     return 0U;
 637              		.loc 1 866 12
 638 0040 0030A0E3 		mov	r3, #0
 639              	.L43:
 867:../../Source/Kernel/rme_kernel.c **** }
 640              		.loc 1 867 1
 641 0044 0300A0E1 		mov	r0, r3
 642 0048 00D08BE2 		add	sp, fp, #0
 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 004c 04B09DE4 		ldr	fp, [sp], #4
 646              		.cfi_restore 11
 647              		.cfi_def_cfa_offset 0
 648 0050 1EFF2FE1 		bx	lr
 649              		.cfi_endproc
 650              	.LFE6:
 652              		.section	.text._RME_Fetch_Add_Single,"ax",%progbits
 653              		.align	2
 654              		.global	_RME_Fetch_Add_Single
 655              		.syntax unified
 656              		.arm
 658              	_RME_Fetch_Add_Single:
 659              	.LFB7:
 868:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Comp_Swap_Single ****************************************/
 869:../../Source/Kernel/rme_kernel.c **** 
 870:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_Add_Single *********************************************
 871:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-add atomic instruction. Increase the value that is
 872:../../Source/Kernel/rme_kernel.c ****               pointed to by the pointer, and return the value before addition.
 873:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 874:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 875:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Addend - The number to add.
 876:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 877:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the addition.
 878:../../Source/Kernel/rme_kernel.c **** *******************************************************************************/
 879:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_Add_Single(volatile rme_ptr_t* Ptr,
 880:../../Source/Kernel/rme_kernel.c ****                                 rme_cnt_t Addend)
 881:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 28


 660              		.loc 1 881 1
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 16
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 04B02DE5 		str	fp, [sp, #-4]!
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 11, -4
 668 0004 00B08DE2 		add	fp, sp, #0
 669              		.cfi_def_cfa_register 11
 670 0008 14D04DE2 		sub	sp, sp, #20
 671 000c 10000BE5 		str	r0, [fp, #-16]
 672 0010 14100BE5 		str	r1, [fp, #-20]
 882:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Old;
 883:../../Source/Kernel/rme_kernel.c **** 
 884:../../Source/Kernel/rme_kernel.c ****     Old=(rme_cnt_t)(*Ptr);
 673              		.loc 1 884 21
 674 0014 10301BE5 		ldr	r3, [fp, #-16]
 675 0018 003093E5 		ldr	r3, [r3]
 676              		.loc 1 884 8
 677 001c 08300BE5 		str	r3, [fp, #-8]
 885:../../Source/Kernel/rme_kernel.c ****     *Ptr=(rme_ptr_t)(Old+Addend);
 678              		.loc 1 885 25
 679 0020 08201BE5 		ldr	r2, [fp, #-8]
 680 0024 14301BE5 		ldr	r3, [fp, #-20]
 681 0028 033082E0 		add	r3, r2, r3
 682              		.loc 1 885 10
 683 002c 0320A0E1 		mov	r2, r3
 684              		.loc 1 885 9
 685 0030 10301BE5 		ldr	r3, [fp, #-16]
 686 0034 002083E5 		str	r2, [r3]
 886:../../Source/Kernel/rme_kernel.c **** 
 887:../../Source/Kernel/rme_kernel.c ****     return (rme_ptr_t)Old;
 687              		.loc 1 887 12
 688 0038 08301BE5 		ldr	r3, [fp, #-8]
 888:../../Source/Kernel/rme_kernel.c **** }
 689              		.loc 1 888 1
 690 003c 0300A0E1 		mov	r0, r3
 691 0040 00D08BE2 		add	sp, fp, #0
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 0044 04B09DE4 		ldr	fp, [sp], #4
 695              		.cfi_restore 11
 696              		.cfi_def_cfa_offset 0
 697 0048 1EFF2FE1 		bx	lr
 698              		.cfi_endproc
 699              	.LFE7:
 701              		.section	.text._RME_Fetch_And_Single,"ax",%progbits
 702              		.align	2
 703              		.global	_RME_Fetch_And_Single
 704              		.syntax unified
 705              		.arm
 707              	_RME_Fetch_And_Single:
 708              	.LFB8:
 889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_Add_Single ****************************************/
 890:../../Source/Kernel/rme_kernel.c **** 
 891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_And_Single *********************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 29


 892:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-logic-and atomic instruction. Logic AND the pointer
 893:../../Source/Kernel/rme_kernel.c ****               value with the operand, and return the value before logic AND.
 894:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 895:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 896:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Operand - The number to logic AND with the destination.
 897:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 898:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the AND operation.
 899:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 900:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_And_Single(volatile rme_ptr_t* Ptr,
 901:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Operand)
 902:../../Source/Kernel/rme_kernel.c **** {
 709              		.loc 1 902 1
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 16
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 04B02DE5 		str	fp, [sp, #-4]!
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 11, -4
 717 0004 00B08DE2 		add	fp, sp, #0
 718              		.cfi_def_cfa_register 11
 719 0008 14D04DE2 		sub	sp, sp, #20
 720 000c 10000BE5 		str	r0, [fp, #-16]
 721 0010 14100BE5 		str	r1, [fp, #-20]
 903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old;
 904:../../Source/Kernel/rme_kernel.c **** 
 905:../../Source/Kernel/rme_kernel.c ****     Old=*Ptr;
 722              		.loc 1 905 8
 723 0014 10301BE5 		ldr	r3, [fp, #-16]
 724 0018 003093E5 		ldr	r3, [r3]
 725 001c 08300BE5 		str	r3, [fp, #-8]
 906:../../Source/Kernel/rme_kernel.c ****     *Ptr=Old&Operand;
 726              		.loc 1 906 13
 727 0020 08201BE5 		ldr	r2, [fp, #-8]
 728 0024 14301BE5 		ldr	r3, [fp, #-20]
 729 0028 032002E0 		and	r2, r2, r3
 730              		.loc 1 906 9
 731 002c 10301BE5 		ldr	r3, [fp, #-16]
 732 0030 002083E5 		str	r2, [r3]
 907:../../Source/Kernel/rme_kernel.c **** 
 908:../../Source/Kernel/rme_kernel.c ****     return Old;
 733              		.loc 1 908 12
 734 0034 08301BE5 		ldr	r3, [fp, #-8]
 909:../../Source/Kernel/rme_kernel.c **** }
 735              		.loc 1 909 1
 736 0038 0300A0E1 		mov	r0, r3
 737 003c 00D08BE2 		add	sp, fp, #0
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0040 04B09DE4 		ldr	fp, [sp], #4
 741              		.cfi_restore 11
 742              		.cfi_def_cfa_offset 0
 743 0044 1EFF2FE1 		bx	lr
 744              		.cfi_endproc
 745              	.LFE8:
 747              		.section	.text._RME_List_Crt,"ax",%progbits
 748              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 30


 749              		.global	_RME_List_Crt
 750              		.syntax unified
 751              		.arm
 753              	_RME_List_Crt:
 754              	.LFB9:
 910:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_And_Single ****************************************/
 911:../../Source/Kernel/rme_kernel.c **** 
 912:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Crt *****************************************************
 913:../../Source/Kernel/rme_kernel.c **** Description : Create a doubly linked list.
 914:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Head - The pointer to the list head.
 915:../../Source/Kernel/rme_kernel.c **** Output      : None.
 916:../../Source/Kernel/rme_kernel.c **** Return      : None.
 917:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 918:../../Source/Kernel/rme_kernel.c **** void _RME_List_Crt(struct RME_List* Head)
 919:../../Source/Kernel/rme_kernel.c **** {
 755              		.loc 1 919 1
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760 0000 04B02DE5 		str	fp, [sp, #-4]!
 761              		.cfi_def_cfa_offset 4
 762              		.cfi_offset 11, -4
 763 0004 00B08DE2 		add	fp, sp, #0
 764              		.cfi_def_cfa_register 11
 765 0008 0CD04DE2 		sub	sp, sp, #12
 766 000c 08000BE5 		str	r0, [fp, #-8]
 920:../../Source/Kernel/rme_kernel.c ****     Head->Prev=Head;
 767              		.loc 1 920 15
 768 0010 08301BE5 		ldr	r3, [fp, #-8]
 769 0014 08201BE5 		ldr	r2, [fp, #-8]
 770 0018 042083E5 		str	r2, [r3, #4]
 921:../../Source/Kernel/rme_kernel.c ****     Head->Next=Head;
 771              		.loc 1 921 15
 772 001c 08301BE5 		ldr	r3, [fp, #-8]
 773 0020 08201BE5 		ldr	r2, [fp, #-8]
 774 0024 002083E5 		str	r2, [r3]
 922:../../Source/Kernel/rme_kernel.c **** }
 775              		.loc 1 922 1
 776 0028 00F020E3 		nop
 777 002c 00D08BE2 		add	sp, fp, #0
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 0030 04B09DE4 		ldr	fp, [sp], #4
 781              		.cfi_restore 11
 782              		.cfi_def_cfa_offset 0
 783 0034 1EFF2FE1 		bx	lr
 784              		.cfi_endproc
 785              	.LFE9:
 787              		.section	.text._RME_List_Del,"ax",%progbits
 788              		.align	2
 789              		.global	_RME_List_Del
 790              		.syntax unified
 791              		.arm
 793              	_RME_List_Del:
 794              	.LFB10:
 923:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Crt ************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 31


 924:../../Source/Kernel/rme_kernel.c **** 
 925:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Del *****************************************************
 926:../../Source/Kernel/rme_kernel.c **** Description : Delete a node from the doubly-linked list.
 927:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Prev - The previous node.
 928:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 929:../../Source/Kernel/rme_kernel.c **** Output      : None.
 930:../../Source/Kernel/rme_kernel.c **** Return      : None.
 931:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 932:../../Source/Kernel/rme_kernel.c **** void _RME_List_Del(struct RME_List* Prev,
 933:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 934:../../Source/Kernel/rme_kernel.c **** {
 795              		.loc 1 934 1
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 8
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0000 04B02DE5 		str	fp, [sp, #-4]!
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 11, -4
 803 0004 00B08DE2 		add	fp, sp, #0
 804              		.cfi_def_cfa_register 11
 805 0008 0CD04DE2 		sub	sp, sp, #12
 806 000c 08000BE5 		str	r0, [fp, #-8]
 807 0010 0C100BE5 		str	r1, [fp, #-12]
 935:../../Source/Kernel/rme_kernel.c ****     Next->Prev=Prev;
 808              		.loc 1 935 15
 809 0014 0C301BE5 		ldr	r3, [fp, #-12]
 810 0018 08201BE5 		ldr	r2, [fp, #-8]
 811 001c 042083E5 		str	r2, [r3, #4]
 936:../../Source/Kernel/rme_kernel.c ****     Prev->Next=Next;
 812              		.loc 1 936 15
 813 0020 08301BE5 		ldr	r3, [fp, #-8]
 814 0024 0C201BE5 		ldr	r2, [fp, #-12]
 815 0028 002083E5 		str	r2, [r3]
 937:../../Source/Kernel/rme_kernel.c **** }
 816              		.loc 1 937 1
 817 002c 00F020E3 		nop
 818 0030 00D08BE2 		add	sp, fp, #0
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 0034 04B09DE4 		ldr	fp, [sp], #4
 822              		.cfi_restore 11
 823              		.cfi_def_cfa_offset 0
 824 0038 1EFF2FE1 		bx	lr
 825              		.cfi_endproc
 826              	.LFE10:
 828              		.section	.text._RME_List_Ins,"ax",%progbits
 829              		.align	2
 830              		.global	_RME_List_Ins
 831              		.syntax unified
 832              		.arm
 834              	_RME_List_Ins:
 835              	.LFB11:
 938:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Del ************************************************/
 939:../../Source/Kernel/rme_kernel.c **** 
 940:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Ins *****************************************************
 941:../../Source/Kernel/rme_kernel.c **** Description : Insert a node to the doubly-linked list.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 32


 942:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* New - The new node to insert.
 943:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Prev - The previous node.
 944:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 945:../../Source/Kernel/rme_kernel.c **** Output      : None.
 946:../../Source/Kernel/rme_kernel.c **** Return      : None.
 947:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 948:../../Source/Kernel/rme_kernel.c **** void _RME_List_Ins(struct RME_List* New,
 949:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Prev,
 950:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 951:../../Source/Kernel/rme_kernel.c **** {
 836              		.loc 1 951 1
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 16
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 04B02DE5 		str	fp, [sp, #-4]!
 842              		.cfi_def_cfa_offset 4
 843              		.cfi_offset 11, -4
 844 0004 00B08DE2 		add	fp, sp, #0
 845              		.cfi_def_cfa_register 11
 846 0008 14D04DE2 		sub	sp, sp, #20
 847 000c 08000BE5 		str	r0, [fp, #-8]
 848 0010 0C100BE5 		str	r1, [fp, #-12]
 849 0014 10200BE5 		str	r2, [fp, #-16]
 952:../../Source/Kernel/rme_kernel.c ****     Next->Prev=New;
 850              		.loc 1 952 15
 851 0018 10301BE5 		ldr	r3, [fp, #-16]
 852 001c 08201BE5 		ldr	r2, [fp, #-8]
 853 0020 042083E5 		str	r2, [r3, #4]
 953:../../Source/Kernel/rme_kernel.c ****     New->Next=Next;
 854              		.loc 1 953 14
 855 0024 08301BE5 		ldr	r3, [fp, #-8]
 856 0028 10201BE5 		ldr	r2, [fp, #-16]
 857 002c 002083E5 		str	r2, [r3]
 954:../../Source/Kernel/rme_kernel.c ****     New->Prev=Prev;
 858              		.loc 1 954 14
 859 0030 08301BE5 		ldr	r3, [fp, #-8]
 860 0034 0C201BE5 		ldr	r2, [fp, #-12]
 861 0038 042083E5 		str	r2, [r3, #4]
 955:../../Source/Kernel/rme_kernel.c ****     Prev->Next=New;
 862              		.loc 1 955 15
 863 003c 0C301BE5 		ldr	r3, [fp, #-12]
 864 0040 08201BE5 		ldr	r2, [fp, #-8]
 865 0044 002083E5 		str	r2, [r3]
 956:../../Source/Kernel/rme_kernel.c **** }
 866              		.loc 1 956 1
 867 0048 00F020E3 		nop
 868 004c 00D08BE2 		add	sp, fp, #0
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 0050 04B09DE4 		ldr	fp, [sp], #4
 872              		.cfi_restore 11
 873              		.cfi_def_cfa_offset 0
 874 0054 1EFF2FE1 		bx	lr
 875              		.cfi_endproc
 876              	.LFE11:
 878              		.section	.text._RME_Clear,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 33


 879              		.align	2
 880              		.global	_RME_Clear
 881              		.syntax unified
 882              		.arm
 884              	_RME_Clear:
 885              	.LFB12:
 957:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Ins ************************************************/
 958:../../Source/Kernel/rme_kernel.c **** 
 959:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Clear ********************************************************
 960:../../Source/Kernel/rme_kernel.c **** Description : Memset a memory area to zero. This is not fast due to byte operations;
 961:../../Source/Kernel/rme_kernel.c ****               this is not meant for large memory. However, it is indeed secure.
 962:../../Source/Kernel/rme_kernel.c **** Input       : void* Addr - The address to clear.
 963:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
 964:../../Source/Kernel/rme_kernel.c **** Output      : None.
 965:../../Source/Kernel/rme_kernel.c **** Return      : None.
 966:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 967:../../Source/Kernel/rme_kernel.c **** void _RME_Clear(void* Addr,
 968:../../Source/Kernel/rme_kernel.c ****                 rme_ptr_t Size)
 969:../../Source/Kernel/rme_kernel.c **** {
 886              		.loc 1 969 1
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 16
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 04B02DE5 		str	fp, [sp, #-4]!
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 11, -4
 894 0004 00B08DE2 		add	fp, sp, #0
 895              		.cfi_def_cfa_register 11
 896 0008 14D04DE2 		sub	sp, sp, #20
 897 000c 10000BE5 		str	r0, [fp, #-16]
 898 0010 14100BE5 		str	r1, [fp, #-20]
 970:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 971:../../Source/Kernel/rme_kernel.c **** 
 972:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Size;Count++)
 899              		.loc 1 972 14
 900 0014 0030A0E3 		mov	r3, #0
 901 0018 08300BE5 		str	r3, [fp, #-8]
 902              		.loc 1 972 5
 903 001c 070000EA 		b	.L52
 904              	.L53:
 973:../../Source/Kernel/rme_kernel.c ****     {
 974:../../Source/Kernel/rme_kernel.c ****         ((rme_u8_t*)Addr)[Count]=0U;
 905              		.loc 1 974 26
 906 0020 10201BE5 		ldr	r2, [fp, #-16]
 907 0024 08301BE5 		ldr	r3, [fp, #-8]
 908 0028 033082E0 		add	r3, r2, r3
 909              		.loc 1 974 33
 910 002c 0020A0E3 		mov	r2, #0
 911 0030 0020C3E5 		strb	r2, [r3]
 972:../../Source/Kernel/rme_kernel.c ****     {
 912              		.loc 1 972 34 discriminator 3
 913 0034 08301BE5 		ldr	r3, [fp, #-8]
 914 0038 013083E2 		add	r3, r3, #1
 915 003c 08300BE5 		str	r3, [fp, #-8]
 916              	.L52:
 972:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 34


 917              		.loc 1 972 23 discriminator 1
 918 0040 08201BE5 		ldr	r2, [fp, #-8]
 919 0044 14301BE5 		ldr	r3, [fp, #-20]
 920 0048 030052E1 		cmp	r2, r3
 921 004c F3FFFF3A 		bcc	.L53
 975:../../Source/Kernel/rme_kernel.c ****     }
 976:../../Source/Kernel/rme_kernel.c **** }
 922              		.loc 1 976 1
 923 0050 00F020E3 		nop
 924 0054 00F020E3 		nop
 925 0058 00D08BE2 		add	sp, fp, #0
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 005c 04B09DE4 		ldr	fp, [sp], #4
 929              		.cfi_restore 11
 930              		.cfi_def_cfa_offset 0
 931 0060 1EFF2FE1 		bx	lr
 932              		.cfi_endproc
 933              	.LFE12:
 935              		.section	.text._RME_Memcmp,"ax",%progbits
 936              		.align	2
 937              		.global	_RME_Memcmp
 938              		.syntax unified
 939              		.arm
 941              	_RME_Memcmp:
 942              	.LFB13:
 977:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Clear ***************************************************/
 978:../../Source/Kernel/rme_kernel.c **** 
 979:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcmp *******************************************************
 980:../../Source/Kernel/rme_kernel.c **** Description : Compare two memory segments to see if they are equal. This is not
 981:../../Source/Kernel/rme_kernel.c ****               fast due to byte operations; this is not meant for large memory.
 982:../../Source/Kernel/rme_kernel.c **** Input       : const void* Ptr1 - The first memory region.
 983:../../Source/Kernel/rme_kernel.c ****               const void* Ptr2 - The second memory region.
 984:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
 985:../../Source/Kernel/rme_kernel.c **** Output      : None.
 986:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If Ptr1>Ptr2, then return a positive value; else a negative
 987:../../Source/Kernel/rme_kernel.c ****                           value. If Ptr1==Ptr2, then return 0;
 988:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 989:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Memcmp(const void* Ptr1,
 990:../../Source/Kernel/rme_kernel.c ****                       const void* Ptr2,
 991:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Num)
 992:../../Source/Kernel/rme_kernel.c **** {
 943              		.loc 1 992 1
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 32
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948 0000 04B02DE5 		str	fp, [sp, #-4]!
 949              		.cfi_def_cfa_offset 4
 950              		.cfi_offset 11, -4
 951 0004 00B08DE2 		add	fp, sp, #0
 952              		.cfi_def_cfa_register 11
 953 0008 24D04DE2 		sub	sp, sp, #36
 954 000c 18000BE5 		str	r0, [fp, #-24]
 955 0010 1C100BE5 		str	r1, [fp, #-28]
 956 0014 20200BE5 		str	r2, [fp, #-32]
 993:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Dst;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 35


 994:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Src;
 995:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 996:../../Source/Kernel/rme_kernel.c **** 
 997:../../Source/Kernel/rme_kernel.c ****     Dst=(const rme_s8_t*)Ptr1;
 957              		.loc 1 997 8
 958 0018 18301BE5 		ldr	r3, [fp, #-24]
 959 001c 0C300BE5 		str	r3, [fp, #-12]
 998:../../Source/Kernel/rme_kernel.c ****     Src=(const rme_s8_t*)Ptr2;
 960              		.loc 1 998 8
 961 0020 1C301BE5 		ldr	r3, [fp, #-28]
 962 0024 10300BE5 		str	r3, [fp, #-16]
 999:../../Source/Kernel/rme_kernel.c **** 
1000:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 963              		.loc 1 1000 14
 964 0028 0030A0E3 		mov	r3, #0
 965 002c 08300BE5 		str	r3, [fp, #-8]
 966              		.loc 1 1000 5
 967 0030 170000EA 		b	.L55
 968              	.L58:
1001:../../Source/Kernel/rme_kernel.c ****     {
1002:../../Source/Kernel/rme_kernel.c ****         if(Dst[Count]!=Src[Count])
 969              		.loc 1 1002 15
 970 0034 0C201BE5 		ldr	r2, [fp, #-12]
 971 0038 08301BE5 		ldr	r3, [fp, #-8]
 972 003c 033082E0 		add	r3, r2, r3
 973 0040 D020D3E1 		ldrsb	r2, [r3]
 974              		.loc 1 1002 27
 975 0044 10101BE5 		ldr	r1, [fp, #-16]
 976 0048 08301BE5 		ldr	r3, [fp, #-8]
 977 004c 033081E0 		add	r3, r1, r3
 978 0050 D030D3E1 		ldrsb	r3, [r3]
 979              		.loc 1 1002 11
 980 0054 030052E1 		cmp	r2, r3
 981 0058 0A00000A 		beq	.L56
1003:../../Source/Kernel/rme_kernel.c ****         {
1004:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1005:../../Source/Kernel/rme_kernel.c ****             
1006:../../Source/Kernel/rme_kernel.c ****             return Dst[Count]-Src[Count];
 982              		.loc 1 1006 23
 983 005c 0C201BE5 		ldr	r2, [fp, #-12]
 984 0060 08301BE5 		ldr	r3, [fp, #-8]
 985 0064 033082E0 		add	r3, r2, r3
 986 0068 D030D3E1 		ldrsb	r3, [r3]
 987 006c 0310A0E1 		mov	r1, r3
 988              		.loc 1 1006 34
 989 0070 10201BE5 		ldr	r2, [fp, #-16]
 990 0074 08301BE5 		ldr	r3, [fp, #-8]
 991 0078 033082E0 		add	r3, r2, r3
 992 007c D030D3E1 		ldrsb	r3, [r3]
 993              		.loc 1 1006 30
 994 0080 033041E0 		sub	r3, r1, r3
 995 0084 070000EA 		b	.L57
 996              	.L56:
1000:../../Source/Kernel/rme_kernel.c ****     {
 997              		.loc 1 1000 33 discriminator 2
 998 0088 08301BE5 		ldr	r3, [fp, #-8]
 999 008c 013083E2 		add	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 36


 1000 0090 08300BE5 		str	r3, [fp, #-8]
 1001              	.L55:
1000:../../Source/Kernel/rme_kernel.c ****     {
 1002              		.loc 1 1000 23 discriminator 1
 1003 0094 08201BE5 		ldr	r2, [fp, #-8]
 1004 0098 20301BE5 		ldr	r3, [fp, #-32]
 1005 009c 030052E1 		cmp	r2, r3
 1006 00a0 E3FFFF3A 		bcc	.L58
1007:../../Source/Kernel/rme_kernel.c ****         }
1008:../../Source/Kernel/rme_kernel.c ****         else
1009:../../Source/Kernel/rme_kernel.c ****         {
1010:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1011:../../Source/Kernel/rme_kernel.c ****             /* No action required */
1012:../../Source/Kernel/rme_kernel.c ****         }
1013:../../Source/Kernel/rme_kernel.c ****     }
1014:../../Source/Kernel/rme_kernel.c **** 
1015:../../Source/Kernel/rme_kernel.c ****     return 0;
 1007              		.loc 1 1015 12
 1008 00a4 0030A0E3 		mov	r3, #0
 1009              	.L57:
1016:../../Source/Kernel/rme_kernel.c **** }
 1010              		.loc 1 1016 1
 1011 00a8 0300A0E1 		mov	r0, r3
 1012 00ac 00D08BE2 		add	sp, fp, #0
 1013              		.cfi_def_cfa_register 13
 1014              		@ sp needed
 1015 00b0 04B09DE4 		ldr	fp, [sp], #4
 1016              		.cfi_restore 11
 1017              		.cfi_def_cfa_offset 0
 1018 00b4 1EFF2FE1 		bx	lr
 1019              		.cfi_endproc
 1020              	.LFE13:
 1022              		.section	.text._RME_Memcpy,"ax",%progbits
 1023              		.align	2
 1024              		.global	_RME_Memcpy
 1025              		.syntax unified
 1026              		.arm
 1028              	_RME_Memcpy:
 1029              	.LFB14:
1017:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcmp **************************************************/
1018:../../Source/Kernel/rme_kernel.c **** 
1019:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcpy *******************************************************
1020:../../Source/Kernel/rme_kernel.c **** Description : Copy one segment of memory to another segment. This is not fast
1021:../../Source/Kernel/rme_kernel.c ****               due to byte operations; this is not meant for large memory.
1022:../../Source/Kernel/rme_kernel.c **** Input       : volatile void* Dst - The first memory region.
1023:../../Source/Kernel/rme_kernel.c ****               volatile void* Src - The second memory region.
1024:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
1025:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
1026:../../Source/Kernel/rme_kernel.c **** Output      : None.
1027:../../Source/Kernel/rme_kernel.c **** Return      : None.
1028:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1029:../../Source/Kernel/rme_kernel.c **** void _RME_Memcpy(void* Dst,
1030:../../Source/Kernel/rme_kernel.c ****                  void* Src,
1031:../../Source/Kernel/rme_kernel.c ****                  rme_ptr_t Num)
1032:../../Source/Kernel/rme_kernel.c **** {
 1030              		.loc 1 1032 1
 1031              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 37


 1032              		@ args = 0, pretend = 0, frame = 24
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035 0000 04B02DE5 		str	fp, [sp, #-4]!
 1036              		.cfi_def_cfa_offset 4
 1037              		.cfi_offset 11, -4
 1038 0004 00B08DE2 		add	fp, sp, #0
 1039              		.cfi_def_cfa_register 11
 1040 0008 1CD04DE2 		sub	sp, sp, #28
 1041 000c 10000BE5 		str	r0, [fp, #-16]
 1042 0010 14100BE5 		str	r1, [fp, #-20]
 1043 0014 18200BE5 		str	r2, [fp, #-24]
1033:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1034:../../Source/Kernel/rme_kernel.c **** 
1035:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 1044              		.loc 1 1035 14
 1045 0018 0030A0E3 		mov	r3, #0
 1046 001c 08300BE5 		str	r3, [fp, #-8]
 1047              		.loc 1 1035 5
 1048 0020 0B0000EA 		b	.L60
 1049              	.L61:
1036:../../Source/Kernel/rme_kernel.c ****     {
1037:../../Source/Kernel/rme_kernel.c ****         ((volatile rme_u8_t*)Dst)[Count]=((volatile rme_u8_t*)Src)[Count];
 1050              		.loc 1 1037 67
 1051 0024 14201BE5 		ldr	r2, [fp, #-20]
 1052 0028 08301BE5 		ldr	r3, [fp, #-8]
 1053 002c 032082E0 		add	r2, r2, r3
 1054              		.loc 1 1037 34
 1055 0030 10101BE5 		ldr	r1, [fp, #-16]
 1056 0034 08301BE5 		ldr	r3, [fp, #-8]
 1057 0038 033081E0 		add	r3, r1, r3
 1058              		.loc 1 1037 67
 1059 003c 0020D2E5 		ldrb	r2, [r2]
 1060 0040 7220EFE6 		uxtb	r2, r2
 1061              		.loc 1 1037 41
 1062 0044 0020C3E5 		strb	r2, [r3]
1035:../../Source/Kernel/rme_kernel.c ****     {
 1063              		.loc 1 1035 33 discriminator 3
 1064 0048 08301BE5 		ldr	r3, [fp, #-8]
 1065 004c 013083E2 		add	r3, r3, #1
 1066 0050 08300BE5 		str	r3, [fp, #-8]
 1067              	.L60:
1035:../../Source/Kernel/rme_kernel.c ****     {
 1068              		.loc 1 1035 23 discriminator 1
 1069 0054 08201BE5 		ldr	r2, [fp, #-8]
 1070 0058 18301BE5 		ldr	r3, [fp, #-24]
 1071 005c 030052E1 		cmp	r2, r3
 1072 0060 EFFFFF3A 		bcc	.L61
1038:../../Source/Kernel/rme_kernel.c ****     }
1039:../../Source/Kernel/rme_kernel.c **** }
 1073              		.loc 1 1039 1
 1074 0064 00F020E3 		nop
 1075 0068 00F020E3 		nop
 1076 006c 00D08BE2 		add	sp, fp, #0
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 0070 04B09DE4 		ldr	fp, [sp], #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 38


 1080              		.cfi_restore 11
 1081              		.cfi_def_cfa_offset 0
 1082 0074 1EFF2FE1 		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE14:
 1086              		.section	.text._RME_Diff,"ax",%progbits
 1087              		.align	2
 1088              		.global	_RME_Diff
 1089              		.syntax unified
 1090              		.arm
 1092              	_RME_Diff:
 1093              	.LFB15:
1040:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcpy **************************************************/
1041:../../Source/Kernel/rme_kernel.c **** 
1042:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Diff *********************************************************
1043:../../Source/Kernel/rme_kernel.c **** Description : Compute the absolute difference between two numbers, when integer
1044:../../Source/Kernel/rme_kernel.c ****               wraparound is considered.
1045:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Num1 - The first number.
1046:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num2 - The second number.
1047:../../Source/Kernel/rme_kernel.c **** Output      : None.
1048:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The distance.
1049:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1050:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Diff(rme_ptr_t Num1,
1051:../../Source/Kernel/rme_kernel.c ****                     rme_ptr_t Num2)
1052:../../Source/Kernel/rme_kernel.c **** {
 1094              		.loc 1 1052 1
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 16
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0000 04B02DE5 		str	fp, [sp, #-4]!
 1100              		.cfi_def_cfa_offset 4
 1101              		.cfi_offset 11, -4
 1102 0004 00B08DE2 		add	fp, sp, #0
 1103              		.cfi_def_cfa_register 11
 1104 0008 14D04DE2 		sub	sp, sp, #20
 1105 000c 10000BE5 		str	r0, [fp, #-16]
 1106 0010 14100BE5 		str	r1, [fp, #-20]
1053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff1;
1054:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff2;
1055:../../Source/Kernel/rme_kernel.c ****     
1056:../../Source/Kernel/rme_kernel.c ****     Diff1=Num1-Num2;
 1107              		.loc 1 1056 10
 1108 0014 10201BE5 		ldr	r2, [fp, #-16]
 1109 0018 14301BE5 		ldr	r3, [fp, #-20]
 1110 001c 033042E0 		sub	r3, r2, r3
 1111 0020 08300BE5 		str	r3, [fp, #-8]
1057:../../Source/Kernel/rme_kernel.c ****     Diff2=Num2-Num1;
 1112              		.loc 1 1057 10
 1113 0024 14201BE5 		ldr	r2, [fp, #-20]
 1114 0028 10301BE5 		ldr	r3, [fp, #-16]
 1115 002c 033042E0 		sub	r3, r2, r3
 1116 0030 0C300BE5 		str	r3, [fp, #-12]
1058:../../Source/Kernel/rme_kernel.c ****     
1059:../../Source/Kernel/rme_kernel.c ****     if(Diff1>Diff2)
 1117              		.loc 1 1059 7
 1118 0034 08201BE5 		ldr	r2, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 39


 1119 0038 0C301BE5 		ldr	r3, [fp, #-12]
 1120 003c 030052E1 		cmp	r2, r3
 1121 0040 0100009A 		bls	.L63
1060:../../Source/Kernel/rme_kernel.c ****     {
1061:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1062:../../Source/Kernel/rme_kernel.c ****         
1063:../../Source/Kernel/rme_kernel.c ****         return Diff2;
 1122              		.loc 1 1063 16
 1123 0044 0C301BE5 		ldr	r3, [fp, #-12]
 1124 0048 000000EA 		b	.L64
 1125              	.L63:
1064:../../Source/Kernel/rme_kernel.c ****     }
1065:../../Source/Kernel/rme_kernel.c ****     else
1066:../../Source/Kernel/rme_kernel.c ****     {
1067:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1068:../../Source/Kernel/rme_kernel.c ****         
1069:../../Source/Kernel/rme_kernel.c ****         return Diff1;
 1126              		.loc 1 1069 16
 1127 004c 08301BE5 		ldr	r3, [fp, #-8]
 1128              	.L64:
1070:../../Source/Kernel/rme_kernel.c ****     }
1071:../../Source/Kernel/rme_kernel.c **** }
 1129              		.loc 1 1071 1
 1130 0050 0300A0E1 		mov	r0, r3
 1131 0054 00D08BE2 		add	sp, fp, #0
 1132              		.cfi_def_cfa_register 13
 1133              		@ sp needed
 1134 0058 04B09DE4 		ldr	fp, [sp], #4
 1135              		.cfi_restore 11
 1136              		.cfi_def_cfa_offset 0
 1137 005c 1EFF2FE1 		bx	lr
 1138              		.cfi_endproc
 1139              	.LFE15:
 1141              		.section	.text.RME_Kmain,"ax",%progbits
 1142              		.align	2
 1143              		.global	RME_Kmain
 1144              		.syntax unified
 1145              		.arm
 1147              	RME_Kmain:
 1148              	.LFB16:
1072:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Diff ****************************************************/
1073:../../Source/Kernel/rme_kernel.c **** 
1074:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Kmain *********************************************************
1075:../../Source/Kernel/rme_kernel.c **** Description : The entry of the operating system.
1076:../../Source/Kernel/rme_kernel.c **** Input       : None.
1077:../../Source/Kernel/rme_kernel.c **** Output      : None.
1078:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - This function never returns.
1079:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1080:../../Source/Kernel/rme_kernel.c **** rme_ret_t RME_Kmain(void)
1081:../../Source/Kernel/rme_kernel.c **** {
 1149              		.loc 1 1081 1
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 00482DE9 		push	{fp, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 40


 1156              		.cfi_offset 14, -4
 1157 0004 04B08DE2 		add	fp, sp, #4
 1158              		.cfi_def_cfa 11, 4
1082:../../Source/Kernel/rme_kernel.c ****     /* Disable all interrupts first */
1083:../../Source/Kernel/rme_kernel.c ****     __RME_Int_Disable();
 1159              		.loc 1 1083 5
 1160 0008 FEFFFFEB 		bl	__RME_Int_Disable
1084:../../Source/Kernel/rme_kernel.c ****     /* Some low-level kernel assertions */
1085:../../Source/Kernel/rme_kernel.c ****     _RME_Lowlvl_Check();
 1161              		.loc 1 1085 5
 1162 000c FEFFFFEB 		bl	_RME_Lowlvl_Check
1086:../../Source/Kernel/rme_kernel.c ****     /* Hardware low-level init */
1087:../../Source/Kernel/rme_kernel.c ****     __RME_Lowlvl_Init();
 1163              		.loc 1 1087 5
 1164 0010 FEFFFFEB 		bl	__RME_Lowlvl_Init
1088:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel page tables or memory mappings */
1089:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Kom_Init();
 1165              		.loc 1 1089 5
 1166 0014 FEFFFFEB 		bl	__RME_Pgt_Kom_Init
1090:../../Source/Kernel/rme_kernel.c ****     
1091:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel object allocation table - default init */
1092:../../Source/Kernel/rme_kernel.c ****     _RME_Kot_Init(RME_KOT_WORD_NUM);
 1167              		.loc 1 1092 5
 1168 0018 0206A0E3 		mov	r0, #2097152
 1169 001c FEFFFFEB 		bl	_RME_Kot_Init
1093:../../Source/Kernel/rme_kernel.c **** 
1094:../../Source/Kernel/rme_kernel.c ****     /* Boot into the first process */
1095:../../Source/Kernel/rme_kernel.c ****     __RME_Boot();
 1170              		.loc 1 1095 5
 1171 0020 FEFFFFEB 		bl	__RME_Boot
1096:../../Source/Kernel/rme_kernel.c ****     
1097:../../Source/Kernel/rme_kernel.c ****     /* Should never reach here */
1098:../../Source/Kernel/rme_kernel.c ****     return 0;
 1172              		.loc 1 1098 12
 1173 0024 0030A0E3 		mov	r3, #0
1099:../../Source/Kernel/rme_kernel.c **** }
 1174              		.loc 1 1099 1
 1175 0028 0300A0E1 		mov	r0, r3
 1176 002c 0088BDE8 		pop	{fp, pc}
 1177              		.cfi_endproc
 1178              	.LFE16:
 1180              		.section	.text._RME_Lowlvl_Check,"ax",%progbits
 1181              		.align	2
 1182              		.syntax unified
 1183              		.arm
 1185              	_RME_Lowlvl_Check:
 1186              	.LFB17:
1100:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Kmain ****************************************************/
1101:../../Source/Kernel/rme_kernel.c **** 
1102:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Lowlvl_Check *************************************************
1103:../../Source/Kernel/rme_kernel.c **** Description : Do some low-level checking for the operating system.
1104:../../Source/Kernel/rme_kernel.c **** Input       : None.
1105:../../Source/Kernel/rme_kernel.c **** Output      : None.
1106:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
1107:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1108:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Lowlvl_Check(void)
1109:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 41


 1187              		.loc 1 1109 1
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192 0000 04B02DE5 		str	fp, [sp, #-4]!
 1193              		.cfi_def_cfa_offset 4
 1194              		.cfi_offset 11, -4
 1195 0004 00B08DE2 		add	fp, sp, #0
 1196              		.cfi_def_cfa_register 11
1110:../../Source/Kernel/rme_kernel.c ****     /* Make sure the machine is at least 32-bit */
1111:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_ORDER>=5U);
1112:../../Source/Kernel/rme_kernel.c ****     /* Check if the word order setting is correct */
1113:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_BIT==RME_POW2(RME_WORD_ORDER));
1114:../../Source/Kernel/rme_kernel.c ****     /* Check if the struct sizes are correct */
1115:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Struct)==RME_CAP_SIZE);
1116:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Cpt)==RME_CAP_SIZE);
1117:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1118:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Pgt)==RME_CAP_SIZE);
1119:../../Source/Kernel/rme_kernel.c **** #endif
1120:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Prc)==RME_CAP_SIZE);
1121:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Thd)==RME_CAP_SIZE);
1122:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Sig)==RME_CAP_SIZE);
1123:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Inv)==RME_CAP_SIZE);
1124:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kfn)==RME_CAP_SIZE);
1125:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kom)==RME_CAP_SIZE);
1126:../../Source/Kernel/rme_kernel.c ****     /* Check if the other configurations are correct */
1127:../../Source/Kernel/rme_kernel.c ****     /* Kernel memory allocation minimal size aligned to word boundary */
1128:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_KOM_SLOT_ORDER>=RME_WORD_ORDER-3U);
1129:../../Source/Kernel/rme_kernel.c ****     /* Make sure the number of priorities do not exceed half-word boundary */
1130:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_PREEMPT_PRIO_NUM<=RME_POW2(RME_WORD_BIT>>1));
1131:../../Source/Kernel/rme_kernel.c ****     
1132:../../Source/Kernel/rme_kernel.c ****     return 0;
 1197              		.loc 1 1132 12
 1198 0008 0030A0E3 		mov	r3, #0
1133:../../Source/Kernel/rme_kernel.c **** }
 1199              		.loc 1 1133 1
 1200 000c 0300A0E1 		mov	r0, r3
 1201 0010 00D08BE2 		add	sp, fp, #0
 1202              		.cfi_def_cfa_register 13
 1203              		@ sp needed
 1204 0014 04B09DE4 		ldr	fp, [sp], #4
 1205              		.cfi_restore 11
 1206              		.cfi_def_cfa_offset 0
 1207 0018 1EFF2FE1 		bx	lr
 1208              		.cfi_endproc
 1209              	.LFE17:
 1211              		.section	.text._RME_Svc_Handler,"ax",%progbits
 1212              		.align	2
 1213              		.global	_RME_Svc_Handler
 1214              		.syntax unified
 1215              		.arm
 1217              	_RME_Svc_Handler:
 1218              	.LFB18:
1134:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Lowlvl_Check ********************************************/
1135:../../Source/Kernel/rme_kernel.c **** 
1136:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Svc_Handler **************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 42


1137:../../Source/Kernel/rme_kernel.c **** Description : The system call handler of the operating system. The register set 
1138:../../Source/Kernel/rme_kernel.c ****               of the current thread shall be passed in as a parameter.
1139:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1140:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1141:../../Source/Kernel/rme_kernel.c **** Return      : None.
1142:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1143:../../Source/Kernel/rme_kernel.c **** void _RME_Svc_Handler(struct RME_Reg_Struct* Reg)
1144:../../Source/Kernel/rme_kernel.c **** {
 1219              		.loc 1 1144 1
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 48
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 30482DE9 		push	{r4, r5, fp, lr}
 1224              		.cfi_def_cfa_offset 16
 1225              		.cfi_offset 4, -16
 1226              		.cfi_offset 5, -12
 1227              		.cfi_offset 11, -8
 1228              		.cfi_offset 14, -4
 1229 0004 0CB08DE2 		add	fp, sp, #12
 1230              		.cfi_def_cfa 11, 4
 1231 0008 48D04DE2 		sub	sp, sp, #72
 1232 000c 38000BE5 		str	r0, [fp, #-56]
1145:../../Source/Kernel/rme_kernel.c ****     /* What's the system call number and major capability ID? */
1146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc;
1147:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Cid;
1148:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Param[3];
1149:../../Source/Kernel/rme_kernel.c ****     rme_ret_t Retval;
1150:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc_Num;
1151:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1152:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
1153:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1154:../../Source/Kernel/rme_kernel.c **** 
1155:../../Source/Kernel/rme_kernel.c ****     /* Get the system call parameters from the system call */
1156:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Param_Get(Reg, &Svc, &Cid, Param);
 1233              		.loc 1 1156 5
 1234 0010 34304BE2 		sub	r3, fp, #52
 1235 0014 28204BE2 		sub	r2, fp, #40
 1236 0018 24104BE2 		sub	r1, fp, #36
 1237 001c 38001BE5 		ldr	r0, [fp, #-56]
 1238 0020 FEFFFFEB 		bl	__RME_Svc_Param_Get
1157:../../Source/Kernel/rme_kernel.c ****     /* System call number takes [5:0] bits */
1158:../../Source/Kernel/rme_kernel.c ****     Svc_Num=Svc&RME_MASK_END(5U);
 1239              		.loc 1 1158 16
 1240 0024 24301BE5 		ldr	r3, [fp, #-36]
 1241              		.loc 1 1158 12
 1242 0028 3F3003E2 		and	r3, r3, #63
 1243 002c 18300BE5 		str	r3, [fp, #-24]
1159:../../Source/Kernel/rme_kernel.c ****     
1160:../../Source/Kernel/rme_kernel.c ****     /* Ultra-fast path - synchronous invocation returning */
1161:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_RET)
 1244              		.loc 1 1161 7
 1245 0030 18301BE5 		ldr	r3, [fp, #-24]
 1246 0034 000053E3 		cmp	r3, #0
 1247 0038 0C00001A 		bne	.L70
1162:../../Source/Kernel/rme_kernel.c ****     {
1163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1164:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 43


1165:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Ret(Reg,                                            /* volatile struct RME_
 1248              		.loc 1 1165 16
 1249 003c 34301BE5 		ldr	r3, [fp, #-52]
 1250 0040 0020A0E3 		mov	r2, #0
 1251 0044 0310A0E1 		mov	r1, r3
 1252 0048 38001BE5 		ldr	r0, [fp, #-56]
 1253 004c FEFFFFEB 		bl	_RME_Inv_Ret
 1254 0050 10000BE5 		str	r0, [fp, #-16]
1166:../../Source/Kernel/rme_kernel.c ****                             Param[0],                                       /* rme_ptr_t Retval */
1167:../../Source/Kernel/rme_kernel.c ****                             0U);                                            /* rme_ptr_t Is_Exc */
1168:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg, Retval);
 1255              		.loc 1 1168 9
 1256 0054 10301BE5 		ldr	r3, [fp, #-16]
 1257 0058 000053E3 		cmp	r3, #0
 1258 005c 110200AA 		bge	.L69
 1259              		.loc 1 1168 9 is_stmt 0 discriminator 1
 1260 0060 10101BE5 		ldr	r1, [fp, #-16]
 1261 0064 38001BE5 		ldr	r0, [fp, #-56]
 1262 0068 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1263              		.loc 1 1168 9
 1264 006c 0D0200EA 		b	.L69
 1265              	.L70:
1169:../../Source/Kernel/rme_kernel.c ****     }
1170:../../Source/Kernel/rme_kernel.c ****     else
1171:../../Source/Kernel/rme_kernel.c ****     {
1172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1173:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1174:../../Source/Kernel/rme_kernel.c ****     }
1175:../../Source/Kernel/rme_kernel.c ****     
1176:../../Source/Kernel/rme_kernel.c ****     /* Get our current capability table. No need to check whether it is frozen
1177:../../Source/Kernel/rme_kernel.c ****      * because it can't be deleted anyway */
1178:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 1266              		.loc 1 1178 12 is_stmt 1
 1267 0070 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 1268 0074 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 1269 0078 043093E5 		ldr	r3, [r3, #4]
 1270 007c 1C300BE5 		str	r3, [fp, #-28]
1179:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd_Cur);
 1271              		.loc 1 1179 13
 1272 0080 1C301BE5 		ldr	r3, [fp, #-28]
 1273 0084 4C2093E5 		ldr	r2, [r3, #76]
 1274 0088 1C301BE5 		ldr	r3, [fp, #-28]
 1275 008c 4C3083E2 		add	r3, r3, #76
 1276 0090 030052E1 		cmp	r2, r3
 1277 0094 0200000A 		beq	.L73
 1278              		.loc 1 1179 13 is_stmt 0 discriminator 1
 1279 0098 1C301BE5 		ldr	r3, [fp, #-28]
 1280 009c 4C3093E5 		ldr	r3, [r3, #76]
 1281 00a0 000000EA 		b	.L74
 1282              	.L73:
 1283              		.loc 1 1179 13 discriminator 2
 1284 00a4 0030A0E3 		mov	r3, #0
 1285              	.L74:
 1286              		.loc 1 1179 12 is_stmt 1 discriminator 4
 1287 00a8 20300BE5 		str	r3, [fp, #-32]
1180:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 1288              		.loc 1 1180 7
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 44


 1289 00ac 20301BE5 		ldr	r3, [fp, #-32]
 1290 00b0 000053E3 		cmp	r3, #0
 1291 00b4 0400001A 		bne	.L75
1181:../../Source/Kernel/rme_kernel.c ****     {
1182:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1183:../../Source/Kernel/rme_kernel.c ****         
1184:../../Source/Kernel/rme_kernel.c ****         Cpt=Thd_Cur->Sched.Prc->Cpt;
 1292              		.loc 1 1184 27
 1293 00b8 1C301BE5 		ldr	r3, [fp, #-28]
 1294 00bc 2C3093E5 		ldr	r3, [r3, #44]
 1295              		.loc 1 1184 12
 1296 00c0 143093E5 		ldr	r3, [r3, #20]
 1297 00c4 14300BE5 		str	r3, [fp, #-20]
 1298 00c8 030000EA 		b	.L76
 1299              	.L75:
1185:../../Source/Kernel/rme_kernel.c ****     }
1186:../../Source/Kernel/rme_kernel.c ****     else
1187:../../Source/Kernel/rme_kernel.c ****     {
1188:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1189:../../Source/Kernel/rme_kernel.c ****         
1190:../../Source/Kernel/rme_kernel.c ****         Cpt=Inv_Top->Prc->Cpt;
 1300              		.loc 1 1190 20
 1301 00cc 20301BE5 		ldr	r3, [fp, #-32]
 1302 00d0 083093E5 		ldr	r3, [r3, #8]
 1303              		.loc 1 1190 12
 1304 00d4 143093E5 		ldr	r3, [r3, #20]
 1305 00d8 14300BE5 		str	r3, [fp, #-20]
 1306              	.L76:
1191:../../Source/Kernel/rme_kernel.c ****     }
1192:../../Source/Kernel/rme_kernel.c **** 
1193:../../Source/Kernel/rme_kernel.c ****     /* Fast path - synchronous invocation activation */
1194:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_ACT)
 1307              		.loc 1 1194 7
 1308 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1309 00e0 010053E3 		cmp	r3, #1
 1310 00e4 0D00001A 		bne	.L77
1195:../../Source/Kernel/rme_kernel.c ****     {
1196:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1197:../../Source/Kernel/rme_kernel.c ****         
1198:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Act(Cpt,
1199:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
1200:../../Source/Kernel/rme_kernel.c ****                             (rme_cid_t)Param[0],                            /* rme_cid_t Cap_Inv */
 1311              		.loc 1 1200 45
 1312 00e8 34301BE5 		ldr	r3, [fp, #-52]
1198:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
 1313              		.loc 1 1198 16
 1314 00ec 0320A0E1 		mov	r2, r3
 1315 00f0 30301BE5 		ldr	r3, [fp, #-48]
 1316 00f4 38101BE5 		ldr	r1, [fp, #-56]
 1317 00f8 14001BE5 		ldr	r0, [fp, #-20]
 1318 00fc FEFFFFEB 		bl	_RME_Inv_Act
 1319 0100 10000BE5 		str	r0, [fp, #-16]
1201:../../Source/Kernel/rme_kernel.c ****                             Param[1]);                                      /* rme_ptr_t Param */
1202:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg,Retval);
 1320              		.loc 1 1202 9
 1321 0104 10301BE5 		ldr	r3, [fp, #-16]
 1322 0108 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 45


 1323 010c E50100AA 		bge	.L69
 1324              		.loc 1 1202 9 is_stmt 0 discriminator 1
 1325 0110 10101BE5 		ldr	r1, [fp, #-16]
 1326 0114 38001BE5 		ldr	r0, [fp, #-56]
 1327 0118 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1328              		.loc 1 1202 9
 1329 011c E10100EA 		b	.L69
 1330              	.L77:
1203:../../Source/Kernel/rme_kernel.c ****     }
1204:../../Source/Kernel/rme_kernel.c ****     else
1205:../../Source/Kernel/rme_kernel.c ****     {
1206:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1207:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1208:../../Source/Kernel/rme_kernel.c ****     }
1209:../../Source/Kernel/rme_kernel.c **** 
1210:../../Source/Kernel/rme_kernel.c ****     /* See if this operation can potentially cause a context switch. All the 
1211:../../Source/Kernel/rme_kernel.c ****      * functions that may cause a context switch is listed here. The behavior
1212:../../Source/Kernel/rme_kernel.c ****      * of these functions shall be: If the function is successful, they shall
1213:../../Source/Kernel/rme_kernel.c ****      * perform the return value saving on proper register stacks by themselves;
1214:../../Source/Kernel/rme_kernel.c ****      * if the function fails, it should not conduct such return value saving.
1215:../../Source/Kernel/rme_kernel.c ****      * These paths are less optimized than synchronous invocation, but are still
1216:../../Source/Kernel/rme_kernel.c ****      * optimized anyway. */
1217:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1331              		.loc 1 1217 5 is_stmt 1
 1332 0120 18301BE5 		ldr	r3, [fp, #-24]
 1333 0124 022043E2 		sub	r2, r3, #2
 1334 0128 80379FE5 		ldr	r3, .L127
 1335 012c 070052E3 		cmp	r2, #7
 1336 0130 9400008A 		bhi	.L126
 1337 0134 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1338              	.Lrtx81:
 1339 0138 00F020E3 		nop
 1340              		.section	.rodata._RME_Svc_Handler,"a",%progbits
 1341              		.align	2
 1342              	.L81:
 1343 0000 3C010000 		.word	.L88
 1344 0004 70010000 		.word	.L87
 1345 0008 A8010000 		.word	.L86
 1346 000c 08020000 		.word	.L85
 1347 0010 3C020000 		.word	.L84
 1348 0014 8C020000 		.word	.L83
 1349 0018 08030000 		.word	.L82
 1350 001c 50030000 		.word	.L80
 1351              		.section	.text._RME_Svc_Handler
 1352              		.p2align 2
 1353              	.L88:
1218:../../Source/Kernel/rme_kernel.c ****     {
1219:../../Source/Kernel/rme_kernel.c ****         /* Send to a signal endpoint */
1220:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_SND:
1221:../../Source/Kernel/rme_kernel.c ****         {
1222:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1223:../../Source/Kernel/rme_kernel.c ****             
1224:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Snd(Cpt,
1225:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1226:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1354              		.loc 1 1226 49
 1355 013c 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 46


1224:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1356              		.loc 1 1224 20
 1357 0140 0320A0E1 		mov	r2, r3
 1358 0144 38101BE5 		ldr	r1, [fp, #-56]
 1359 0148 14001BE5 		ldr	r0, [fp, #-20]
 1360 014c FEFFFFEB 		bl	_RME_Sig_Snd
 1361 0150 10000BE5 		str	r0, [fp, #-16]
1227:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1362              		.loc 1 1227 13
 1363 0154 10301BE5 		ldr	r3, [fp, #-16]
 1364 0158 000053E3 		cmp	r3, #0
 1365 015c D10100AA 		bge	.L69
 1366              		.loc 1 1227 13 is_stmt 0 discriminator 1
 1367 0160 10101BE5 		ldr	r1, [fp, #-16]
 1368 0164 38001BE5 		ldr	r0, [fp, #-56]
 1369 0168 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1370              		.loc 1 1227 13
 1371 016c CD0100EA 		b	.L69
 1372              	.L87:
1228:../../Source/Kernel/rme_kernel.c ****         }
1229:../../Source/Kernel/rme_kernel.c ****         /* Receive from a signal endpoint */
1230:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_RCV:
1231:../../Source/Kernel/rme_kernel.c ****         {
1232:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1233:../../Source/Kernel/rme_kernel.c ****             
1234:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Rcv(Cpt,
1235:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1236:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Sig */
 1373              		.loc 1 1236 49 is_stmt 1
 1374 0170 34301BE5 		ldr	r3, [fp, #-52]
1234:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1375              		.loc 1 1234 20
 1376 0174 0320A0E1 		mov	r2, r3
 1377 0178 30301BE5 		ldr	r3, [fp, #-48]
 1378 017c 38101BE5 		ldr	r1, [fp, #-56]
 1379 0180 14001BE5 		ldr	r0, [fp, #-20]
 1380 0184 FEFFFFEB 		bl	_RME_Sig_Rcv
 1381 0188 10000BE5 		str	r0, [fp, #-16]
1237:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Option */
1238:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1382              		.loc 1 1238 13
 1383 018c 10301BE5 		ldr	r3, [fp, #-16]
 1384 0190 000053E3 		cmp	r3, #0
 1385 0194 C30100AA 		bge	.L69
 1386              		.loc 1 1238 13 is_stmt 0 discriminator 1
 1387 0198 10101BE5 		ldr	r1, [fp, #-16]
 1388 019c 38001BE5 		ldr	r0, [fp, #-56]
 1389 01a0 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1390              		.loc 1 1238 13
 1391 01a4 BF0100EA 		b	.L69
 1392              	.L86:
1239:../../Source/Kernel/rme_kernel.c ****         }
1240:../../Source/Kernel/rme_kernel.c ****         /* Call kernel functions */
1241:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_KFN:
1242:../../Source/Kernel/rme_kernel.c ****         {
1243:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1244:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 47


1245:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Kfn_Act(Cpt,
 1393              		.loc 1 1245 20 is_stmt 1
 1394 01a8 28301BE5 		ldr	r3, [fp, #-40]
 1395 01ac 03C0A0E1 		mov	ip, r3
1246:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1247:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Kfn */
1248:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Func_ID */
 1396              		.loc 1 1248 33
 1397 01b0 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1398              		.loc 1 1245 20
 1399 01b4 7300FFE6 		uxth	r0, r3
1249:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]),                     /* rme_ptr_t Sub_ID */
 1400              		.loc 1 1249 33
 1401 01b8 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1402              		.loc 1 1245 20
 1403 01bc 2338A0E1 		lsr	r3, r3, #16
 1404 01c0 30201BE5 		ldr	r2, [fp, #-48]
 1405 01c4 2C101BE5 		ldr	r1, [fp, #-44]
 1406 01c8 08108DE5 		str	r1, [sp, #8]
 1407 01cc 04208DE5 		str	r2, [sp, #4]
 1408 01d0 00308DE5 		str	r3, [sp]
 1409 01d4 0030A0E1 		mov	r3, r0
 1410 01d8 0C20A0E1 		mov	r2, ip
 1411 01dc 38101BE5 		ldr	r1, [fp, #-56]
 1412 01e0 14001BE5 		ldr	r0, [fp, #-20]
 1413 01e4 FEFFFFEB 		bl	_RME_Kfn_Act
 1414 01e8 10000BE5 		str	r0, [fp, #-16]
1250:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Param1 */
1251:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Param2 */
1252:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg, Retval);
 1415              		.loc 1 1252 13
 1416 01ec 10301BE5 		ldr	r3, [fp, #-16]
 1417 01f0 000053E3 		cmp	r3, #0
 1418 01f4 AB0100AA 		bge	.L69
 1419              		.loc 1 1252 13 is_stmt 0 discriminator 1
 1420 01f8 10101BE5 		ldr	r1, [fp, #-16]
 1421 01fc 38001BE5 		ldr	r0, [fp, #-56]
 1422 0200 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1423              		.loc 1 1252 13
 1424 0204 A70100EA 		b	.L69
 1425              	.L85:
1253:../../Source/Kernel/rme_kernel.c ****         }
1254:../../Source/Kernel/rme_kernel.c ****         /* Free a thread from some core */
1255:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_FREE:
1256:../../Source/Kernel/rme_kernel.c ****         {
1257:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1258:../../Source/Kernel/rme_kernel.c ****             
1259:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Free(Cpt,
1260:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1261:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Param[0]);                /* rme_cid_t Cap_Thd */
 1426              		.loc 1 1261 56 is_stmt 1
 1427 0208 34301BE5 		ldr	r3, [fp, #-52]
1259:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1428              		.loc 1 1259 20
 1429 020c 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 48


 1430 0210 38101BE5 		ldr	r1, [fp, #-56]
 1431 0214 14001BE5 		ldr	r0, [fp, #-20]
 1432 0218 FEFFFFEB 		bl	_RME_Thd_Sched_Free
 1433 021c 10000BE5 		str	r0, [fp, #-16]
1262:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1434              		.loc 1 1262 13
 1435 0220 10301BE5 		ldr	r3, [fp, #-16]
 1436 0224 000053E3 		cmp	r3, #0
 1437 0228 9E0100AA 		bge	.L69
 1438              		.loc 1 1262 13 is_stmt 0 discriminator 1
 1439 022c 10101BE5 		ldr	r1, [fp, #-16]
 1440 0230 38001BE5 		ldr	r0, [fp, #-56]
 1441 0234 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1442              		.loc 1 1262 13
 1443 0238 9A0100EA 		b	.L69
 1444              	.L84:
1263:../../Source/Kernel/rme_kernel.c ****         }
1264:../../Source/Kernel/rme_kernel.c ****         /* Changing thread execution context */
1265:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_EXEC_SET:
1266:../../Source/Kernel/rme_kernel.c ****         {
1267:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1268:../../Source/Kernel/rme_kernel.c ****             
1269:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Exec_Set(Cpt,
 1445              		.loc 1 1269 20 is_stmt 1
 1446 023c 28301BE5 		ldr	r3, [fp, #-40]
 1447 0240 0300A0E1 		mov	r0, r3
 1448 0244 34101BE5 		ldr	r1, [fp, #-52]
 1449 0248 30301BE5 		ldr	r3, [fp, #-48]
 1450 024c 2C201BE5 		ldr	r2, [fp, #-44]
 1451 0250 04208DE5 		str	r2, [sp, #4]
 1452 0254 00308DE5 		str	r3, [sp]
 1453 0258 0130A0E1 		mov	r3, r1
 1454 025c 0020A0E1 		mov	r2, r0
 1455 0260 38101BE5 		ldr	r1, [fp, #-56]
 1456 0264 14001BE5 		ldr	r0, [fp, #-20]
 1457 0268 FEFFFFEB 		bl	_RME_Thd_Exec_Set
 1458 026c 10000BE5 		str	r0, [fp, #-16]
1270:../../Source/Kernel/rme_kernel.c ****                                      Reg,                                   /* volatile struct RME_
1271:../../Source/Kernel/rme_kernel.c ****                                      (rme_cid_t)Cid,                        /* rme_cid_t Cap_Thd */
1272:../../Source/Kernel/rme_kernel.c ****                                      Param[0],                              /* rme_ptr_t Entry */
1273:../../Source/Kernel/rme_kernel.c ****                                      Param[1],                              /* rme_ptr_t Stack */
1274:../../Source/Kernel/rme_kernel.c ****                                      Param[2]);                             /* rme_ptr_t Param */
1275:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1459              		.loc 1 1275 13
 1460 0270 10301BE5 		ldr	r3, [fp, #-16]
 1461 0274 000053E3 		cmp	r3, #0
 1462 0278 8A0100AA 		bge	.L69
 1463              		.loc 1 1275 13 is_stmt 0 discriminator 1
 1464 027c 10101BE5 		ldr	r1, [fp, #-16]
 1465 0280 38001BE5 		ldr	r0, [fp, #-56]
 1466 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1467              		.loc 1 1275 13
 1468 0288 860100EA 		b	.L69
 1469              	.L83:
1276:../../Source/Kernel/rme_kernel.c ****         }
1277:../../Source/Kernel/rme_kernel.c ****         /* Changing thread priority (up to three threads at once) */
1278:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_PRIO:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 49


1279:../../Source/Kernel/rme_kernel.c ****         {
1280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1281:../../Source/Kernel/rme_kernel.c ****             
1282:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Prio(Cpt,
 1470              		.loc 1 1282 20 is_stmt 1
 1471 028c 28E01BE5 		ldr	lr, [fp, #-40]
1283:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1284:../../Source/Kernel/rme_kernel.c ****                                        Cid,                                 /* rme_ptr_t Number */
1285:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Thd0 *
 1472              		.loc 1 1285 51
 1473 0290 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1474              		.loc 1 1282 20
 1475 0294 7340FFE6 		uxth	r4, r3
1286:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[0]),              /* rme_ptr_t Prio0 */
 1476              		.loc 1 1286 40
 1477 0298 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1478              		.loc 1 1282 20
 1479 029c 2338A0E1 		lsr	r3, r3, #16
1287:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[1]),   /* rme_cid_t Cap_Thd1 *
 1480              		.loc 1 1287 51
 1481 02a0 30201BE5 		ldr	r2, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1482              		.loc 1 1282 20
 1483 02a4 7220FFE6 		uxth	r2, r2
1288:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[1]),              /* rme_ptr_t Prio1 */
 1484              		.loc 1 1288 40
 1485 02a8 30101BE5 		ldr	r1, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1486              		.loc 1 1282 20
 1487 02ac 2118A0E1 		lsr	r1, r1, #16
1289:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[2]),   /* rme_cid_t Cap_Thd2 *
 1488              		.loc 1 1289 51
 1489 02b0 2C001BE5 		ldr	r0, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1490              		.loc 1 1282 20
 1491 02b4 7000FFE6 		uxth	r0, r0
1290:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[2]));             /* rme_ptr_t Prio2 */
 1492              		.loc 1 1290 40
 1493 02b8 2CC01BE5 		ldr	ip, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1494              		.loc 1 1282 20
 1495 02bc 2CC8A0E1 		lsr	ip, ip, #16
 1496 02c0 10C08DE5 		str	ip, [sp, #16]
 1497 02c4 0C008DE5 		str	r0, [sp, #12]
 1498 02c8 08108DE5 		str	r1, [sp, #8]
 1499 02cc 04208DE5 		str	r2, [sp, #4]
 1500 02d0 00308DE5 		str	r3, [sp]
 1501 02d4 0430A0E1 		mov	r3, r4
 1502 02d8 0E20A0E1 		mov	r2, lr
 1503 02dc 38101BE5 		ldr	r1, [fp, #-56]
 1504 02e0 14001BE5 		ldr	r0, [fp, #-20]
 1505 02e4 FEFFFFEB 		bl	_RME_Thd_Sched_Prio
 1506 02e8 10000BE5 		str	r0, [fp, #-16]
1291:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1507              		.loc 1 1291 13
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 50


 1508 02ec 10301BE5 		ldr	r3, [fp, #-16]
 1509 02f0 000053E3 		cmp	r3, #0
 1510 02f4 6B0100AA 		bge	.L69
 1511              		.loc 1 1291 13 is_stmt 0 discriminator 1
 1512 02f8 10101BE5 		ldr	r1, [fp, #-16]
 1513 02fc 38001BE5 		ldr	r0, [fp, #-56]
 1514 0300 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1515              		.loc 1 1291 13
 1516 0304 670100EA 		b	.L69
 1517              	.L82:
1292:../../Source/Kernel/rme_kernel.c ****         }
1293:../../Source/Kernel/rme_kernel.c ****         /* Transfer time to a thread */
1294:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_TIME_XFER:
1295:../../Source/Kernel/rme_kernel.c ****         {
1296:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1297:../../Source/Kernel/rme_kernel.c ****             
1298:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Time_Xfer(Cpt,
1299:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
1300:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0],                  /* rme_cid_t Cap_Thd_Ds
 1518              		.loc 1 1300 55 is_stmt 1
 1519 0308 34301BE5 		ldr	r3, [fp, #-52]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1520              		.loc 1 1298 20
 1521 030c 0320A0E1 		mov	r2, r3
1301:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[1],                  /* rme_cid_t Cap_Thd_Sr
 1522              		.loc 1 1301 55
 1523 0310 30301BE5 		ldr	r3, [fp, #-48]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1524              		.loc 1 1298 20
 1525 0314 0310A0E1 		mov	r1, r3
 1526 0318 2C301BE5 		ldr	r3, [fp, #-44]
 1527 031c 00308DE5 		str	r3, [sp]
 1528 0320 0130A0E1 		mov	r3, r1
 1529 0324 38101BE5 		ldr	r1, [fp, #-56]
 1530 0328 14001BE5 		ldr	r0, [fp, #-20]
 1531 032c FEFFFFEB 		bl	_RME_Thd_Time_Xfer
 1532 0330 10000BE5 		str	r0, [fp, #-16]
1302:../../Source/Kernel/rme_kernel.c ****                                       Param[2]);                            /* rme_ptr_t Time */
1303:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1533              		.loc 1 1303 13
 1534 0334 10301BE5 		ldr	r3, [fp, #-16]
 1535 0338 000053E3 		cmp	r3, #0
 1536 033c 590100AA 		bge	.L69
 1537              		.loc 1 1303 13 is_stmt 0 discriminator 1
 1538 0340 10101BE5 		ldr	r1, [fp, #-16]
 1539 0344 38001BE5 		ldr	r0, [fp, #-56]
 1540 0348 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1541              		.loc 1 1303 13
 1542 034c 550100EA 		b	.L69
 1543              	.L80:
1304:../../Source/Kernel/rme_kernel.c ****         }
1305:../../Source/Kernel/rme_kernel.c ****         /* Switch to another thread */
1306:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SWT:
1307:../../Source/Kernel/rme_kernel.c ****         {
1308:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1309:../../Source/Kernel/rme_kernel.c ****             
1310:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Swt(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 51


1311:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1312:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Thd */
 1544              		.loc 1 1312 49 is_stmt 1
 1545 0350 34301BE5 		ldr	r3, [fp, #-52]
1310:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1546              		.loc 1 1310 20
 1547 0354 0320A0E1 		mov	r2, r3
 1548 0358 30301BE5 		ldr	r3, [fp, #-48]
 1549 035c 38101BE5 		ldr	r1, [fp, #-56]
 1550 0360 14001BE5 		ldr	r0, [fp, #-20]
 1551 0364 FEFFFFEB 		bl	_RME_Thd_Swt
 1552 0368 10000BE5 		str	r0, [fp, #-16]
1313:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Full_Yield
1314:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1553              		.loc 1 1314 13
 1554 036c 10301BE5 		ldr	r3, [fp, #-16]
 1555 0370 000053E3 		cmp	r3, #0
 1556 0374 4B0100AA 		bge	.L69
 1557              		.loc 1 1314 13 is_stmt 0 discriminator 1
 1558 0378 10101BE5 		ldr	r1, [fp, #-16]
 1559 037c 38001BE5 		ldr	r0, [fp, #-56]
 1560 0380 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1561              		.loc 1 1314 13
 1562 0384 470100EA 		b	.L69
 1563              	.L126:
1315:../../Source/Kernel/rme_kernel.c ****         }
1316:../../Source/Kernel/rme_kernel.c ****         default:
1317:../../Source/Kernel/rme_kernel.c ****         {
1318:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1319:../../Source/Kernel/rme_kernel.c ****             break;
 1564              		.loc 1 1319 13 is_stmt 1
 1565 0388 00F020E3 		nop
1320:../../Source/Kernel/rme_kernel.c ****         }
1321:../../Source/Kernel/rme_kernel.c ****     } 
1322:../../Source/Kernel/rme_kernel.c **** 
1323:../../Source/Kernel/rme_kernel.c ****     /* It is guaranteed that these functions will never cause a context switch */
1324:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1566              		.loc 1 1324 5
 1567 038c 18301BE5 		ldr	r3, [fp, #-24]
 1568 0390 0A2043E2 		sub	r2, r3, #10
 1569 0394 18359FE5 		ldr	r3, .L127+4
 1570 0398 170052E3 		cmp	r2, #23
 1571 039c 3B01008A 		bhi	.L97
 1572 03a0 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1573              	.Lrtx99:
 1574 03a4 00F020E3 		nop
 1575              		.section	.rodata._RME_Svc_Handler
 1576              		.align	2
 1577              	.L99:
 1578 0020 A8030000 		.word	.L122
 1579 0024 F0030000 		.word	.L121
 1580 0028 10040000 		.word	.L120
 1581 002c 30040000 		.word	.L119
 1582 0030 94040000 		.word	.L118
 1583 0034 B4040000 		.word	.L117
 1584 0038 28050000 		.word	.L116
 1585 003c 48050000 		.word	.L115
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 52


 1586 0040 A0050000 		.word	.L114
 1587 0044 C0050000 		.word	.L113
 1588 0048 F8050000 		.word	.L112
 1589 004c 18060000 		.word	.L111
 1590 0050 4C060000 		.word	.L110
 1591 0054 6C060000 		.word	.L109
 1592 0058 8C060000 		.word	.L108
 1593 005c AC060000 		.word	.L107
 1594 0060 20070000 		.word	.L106
 1595 0064 40070000 		.word	.L105
 1596 0068 9C070000 		.word	.L104
 1597 006c B4070000 		.word	.L103
 1598 0070 D4070000 		.word	.L102
 1599 0074 F4070000 		.word	.L101
 1600 0078 40080000 		.word	.L100
 1601 007c 60080000 		.word	.L98
 1602              		.section	.text._RME_Svc_Handler
 1603              		.p2align 2
 1604              	.L122:
1325:../../Source/Kernel/rme_kernel.c ****     {
1326:../../Source/Kernel/rme_kernel.c ****         /* Capability table */
1327:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_CRT:
1328:../../Source/Kernel/rme_kernel.c ****         {
1329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1330:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Crt(Cpt,
 1605              		.loc 1 1330 20
 1606 03a8 28301BE5 		ldr	r3, [fp, #-40]
 1607 03ac 0300A0E1 		mov	r0, r3
1331:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1332:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1608              		.loc 1 1332 44
 1609 03b0 34301BE5 		ldr	r3, [fp, #-52]
 1610 03b4 2338A0E1 		lsr	r3, r3, #16
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1611              		.loc 1 1330 20
 1612 03b8 03C0A0E1 		mov	ip, r3
1333:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Crt */
 1613              		.loc 1 1333 44
 1614 03bc 34301BE5 		ldr	r3, [fp, #-52]
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1615              		.loc 1 1330 20
 1616 03c0 7310FFE6 		uxth	r1, r3
 1617 03c4 30301BE5 		ldr	r3, [fp, #-48]
 1618 03c8 2C201BE5 		ldr	r2, [fp, #-44]
 1619 03cc 04208DE5 		str	r2, [sp, #4]
 1620 03d0 00308DE5 		str	r3, [sp]
 1621 03d4 0130A0E1 		mov	r3, r1
 1622 03d8 0C20A0E1 		mov	r2, ip
 1623 03dc 0010A0E1 		mov	r1, r0
 1624 03e0 14001BE5 		ldr	r0, [fp, #-20]
 1625 03e4 FEFFFFEB 		bl	_RME_Cpt_Crt
 1626 03e8 10000BE5 		str	r0, [fp, #-16]
1334:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1335:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Entry_Num 
1336:../../Source/Kernel/rme_kernel.c ****             break;
 1627              		.loc 1 1336 13
 1628 03ec 2A0100EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 53


 1629              	.L121:
1337:../../Source/Kernel/rme_kernel.c ****         }
1338:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_DEL:
1339:../../Source/Kernel/rme_kernel.c ****         {
1340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1341:../../Source/Kernel/rme_kernel.c ****             
1342:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Del(Cpt,
 1630              		.loc 1 1342 20
 1631 03f0 28301BE5 		ldr	r3, [fp, #-40]
 1632 03f4 0310A0E1 		mov	r1, r3
1343:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
1344:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Cpt */
 1633              		.loc 1 1344 49
 1634 03f8 34301BE5 		ldr	r3, [fp, #-52]
1342:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
 1635              		.loc 1 1342 20
 1636 03fc 0320A0E1 		mov	r2, r3
 1637 0400 14001BE5 		ldr	r0, [fp, #-20]
 1638 0404 FEFFFFEB 		bl	_RME_Cpt_Del
 1639 0408 10000BE5 		str	r0, [fp, #-16]
1345:../../Source/Kernel/rme_kernel.c ****             break;
 1640              		.loc 1 1345 13
 1641 040c 220100EA 		b	.L123
 1642              	.L120:
1346:../../Source/Kernel/rme_kernel.c ****         }
1347:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_FRZ:
1348:../../Source/Kernel/rme_kernel.c ****         {
1349:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1350:../../Source/Kernel/rme_kernel.c ****             
1351:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Frz(Cpt,
 1643              		.loc 1 1351 20
 1644 0410 28301BE5 		ldr	r3, [fp, #-40]
 1645 0414 0310A0E1 		mov	r1, r3
1352:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
1353:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Frz */
 1646              		.loc 1 1353 49
 1647 0418 34301BE5 		ldr	r3, [fp, #-52]
1351:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
 1648              		.loc 1 1351 20
 1649 041c 0320A0E1 		mov	r2, r3
 1650 0420 14001BE5 		ldr	r0, [fp, #-20]
 1651 0424 FEFFFFEB 		bl	_RME_Cpt_Frz
 1652 0428 10000BE5 		str	r0, [fp, #-16]
1354:../../Source/Kernel/rme_kernel.c ****             break;
 1653              		.loc 1 1354 13
 1654 042c 1A0100EA 		b	.L123
 1655              	.L119:
1355:../../Source/Kernel/rme_kernel.c ****         }
1356:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_ADD:
1357:../../Source/Kernel/rme_kernel.c ****         {
1358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1359:../../Source/Kernel/rme_kernel.c ****             
1360:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Add(Cpt,
1361:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1656              		.loc 1 1361 44
 1657 0430 34301BE5 		ldr	r3, [fp, #-52]
 1658 0434 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 54


1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1659              		.loc 1 1360 20
 1660 0438 03E0A0E1 		mov	lr, r3
1362:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Dst */
 1661              		.loc 1 1362 44
 1662 043c 34301BE5 		ldr	r3, [fp, #-52]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1663              		.loc 1 1360 20
 1664 0440 73C0FFE6 		uxth	ip, r3
1363:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Cpt_Sr
 1665              		.loc 1 1363 44
 1666 0444 30301BE5 		ldr	r3, [fp, #-48]
 1667 0448 2338A0E1 		lsr	r3, r3, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1668              		.loc 1 1360 20
 1669 044c 0340A0E1 		mov	r4, r3
1364:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[1]),          /* rme_cid_t Cap_Src */
 1670              		.loc 1 1364 44
 1671 0450 30301BE5 		ldr	r3, [fp, #-48]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1672              		.loc 1 1360 20
 1673 0454 7330FFE6 		uxth	r3, r3
 1674 0458 2C201BE5 		ldr	r2, [fp, #-44]
1365:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Flag */
1366:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_KM(Svc,Cid));                     /* rme_ptr_t Ext_Flag *
 1675              		.loc 1 1366 33
 1676 045c 24101BE5 		ldr	r1, [fp, #-36]
 1677 0460 0108A0E1 		lsl	r0, r1, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1678              		.loc 1 1360 20
 1679 0464 28101BE5 		ldr	r1, [fp, #-40]
 1680 0468 011080E1 		orr	r1, r0, r1
 1681 046c 08108DE5 		str	r1, [sp, #8]
 1682 0470 04208DE5 		str	r2, [sp, #4]
 1683 0474 00308DE5 		str	r3, [sp]
 1684 0478 0430A0E1 		mov	r3, r4
 1685 047c 0C20A0E1 		mov	r2, ip
 1686 0480 0E10A0E1 		mov	r1, lr
 1687 0484 14001BE5 		ldr	r0, [fp, #-20]
 1688 0488 FEFFFFEB 		bl	_RME_Cpt_Add
 1689 048c 10000BE5 		str	r0, [fp, #-16]
1367:../../Source/Kernel/rme_kernel.c ****             break;
 1690              		.loc 1 1367 13
 1691 0490 010100EA 		b	.L123
 1692              	.L118:
1368:../../Source/Kernel/rme_kernel.c ****         }
1369:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_REM:
1370:../../Source/Kernel/rme_kernel.c ****         {
1371:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1372:../../Source/Kernel/rme_kernel.c ****             
1373:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Rem(Cpt,
 1693              		.loc 1 1373 20
 1694 0494 28301BE5 		ldr	r3, [fp, #-40]
 1695 0498 0310A0E1 		mov	r1, r3
1374:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
1375:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Rem */
 1696              		.loc 1 1375 49
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 55


 1697 049c 34301BE5 		ldr	r3, [fp, #-52]
1373:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
 1698              		.loc 1 1373 20
 1699 04a0 0320A0E1 		mov	r2, r3
 1700 04a4 14001BE5 		ldr	r0, [fp, #-20]
 1701 04a8 FEFFFFEB 		bl	_RME_Cpt_Rem
 1702 04ac 10000BE5 		str	r0, [fp, #-16]
1376:../../Source/Kernel/rme_kernel.c ****             break;
 1703              		.loc 1 1376 13
 1704 04b0 F90000EA 		b	.L123
 1705              	.L117:
1377:../../Source/Kernel/rme_kernel.c ****         }
1378:../../Source/Kernel/rme_kernel.c ****         
1379:../../Source/Kernel/rme_kernel.c ****         /* Page table */
1380:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1381:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CRT:
1382:../../Source/Kernel/rme_kernel.c ****         {
1383:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1384:../../Source/Kernel/rme_kernel.c ****             
1385:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Crt(Cpt,
 1706              		.loc 1 1385 20
 1707 04b4 28301BE5 		ldr	r3, [fp, #-40]
 1708 04b8 0340A0E1 		mov	r4, r3
1386:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1387:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1709              		.loc 1 1387 44
 1710 04bc 34301BE5 		ldr	r3, [fp, #-52]
 1711 04c0 2338A0E1 		lsr	r3, r3, #16
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1712              		.loc 1 1385 20
 1713 04c4 0350A0E1 		mov	r5, r3
1388:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_Q1(Param[0]),          /* rme_cid_t Cap_Pgt */
 1714              		.loc 1 1388 44
 1715 04c8 34301BE5 		ldr	r3, [fp, #-52]
 1716 04cc 2334A0E1 		lsr	r3, r3, #8
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1717              		.loc 1 1385 20
 1718 04d0 73E0EFE6 		uxtb	lr, r3
 1719 04d4 30301BE5 		ldr	r3, [fp, #-48]
1389:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1390:../../Source/Kernel/rme_kernel.c ****                                 Param[2]&RME_MASK_BEGIN(1U),                /* rme_ptr_t Base */
 1720              		.loc 1 1390 38
 1721 04d8 2C201BE5 		ldr	r2, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1722              		.loc 1 1385 20
 1723 04dc 0120C2E3 		bic	r2, r2, #1
1391:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PT(Param[2]),                     /* rme_ptr_t Is_Top */
 1724              		.loc 1 1391 33
 1725 04e0 2C101BE5 		ldr	r1, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1726              		.loc 1 1385 20
 1727 04e4 011001E2 		and	r1, r1, #1
1392:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_Q0(Param[0]),                     /* rme_ptr_t Size_Order
 1728              		.loc 1 1392 33
 1729 04e8 34001BE5 		ldr	r0, [fp, #-52]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1730              		.loc 1 1385 20
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 56


 1731 04ec 7000EFE6 		uxtb	r0, r0
 1732 04f0 24C01BE5 		ldr	ip, [fp, #-36]
 1733 04f4 2CC4A0E1 		lsr	ip, ip, #8
 1734 04f8 10C08DE5 		str	ip, [sp, #16]
 1735 04fc 0C008DE5 		str	r0, [sp, #12]
 1736 0500 08108DE5 		str	r1, [sp, #8]
 1737 0504 04208DE5 		str	r2, [sp, #4]
 1738 0508 00308DE5 		str	r3, [sp]
 1739 050c 0E30A0E1 		mov	r3, lr
 1740 0510 0520A0E1 		mov	r2, r5
 1741 0514 0410A0E1 		mov	r1, r4
 1742 0518 14001BE5 		ldr	r0, [fp, #-20]
 1743 051c FEFFFFEB 		bl	_RME_Pgt_Crt
 1744 0520 10000BE5 		str	r0, [fp, #-16]
1393:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PC(Svc));                         /* rme_ptr_t Num_Order 
1394:../../Source/Kernel/rme_kernel.c ****             break;
 1745              		.loc 1 1394 13
 1746 0524 DC0000EA 		b	.L123
 1747              	.L116:
1395:../../Source/Kernel/rme_kernel.c ****         }
1396:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DEL:
1397:../../Source/Kernel/rme_kernel.c ****         {
1398:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1399:../../Source/Kernel/rme_kernel.c ****             
1400:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Del(Cpt,
 1748              		.loc 1 1400 20
 1749 0528 28301BE5 		ldr	r3, [fp, #-40]
 1750 052c 0310A0E1 		mov	r1, r3
1401:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1402:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Pgt */
 1751              		.loc 1 1402 49
 1752 0530 34301BE5 		ldr	r3, [fp, #-52]
1400:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1753              		.loc 1 1400 20
 1754 0534 0320A0E1 		mov	r2, r3
 1755 0538 14001BE5 		ldr	r0, [fp, #-20]
 1756 053c FEFFFFEB 		bl	_RME_Pgt_Del
 1757 0540 10000BE5 		str	r0, [fp, #-16]
1403:../../Source/Kernel/rme_kernel.c ****             break;
 1758              		.loc 1 1403 13
 1759 0544 D40000EA 		b	.L123
 1760              	.L115:
1404:../../Source/Kernel/rme_kernel.c ****         }
1405:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_ADD:
1406:../../Source/Kernel/rme_kernel.c ****         {
1407:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1408:../../Source/Kernel/rme_kernel.c ****             
1409:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Add(Cpt,
1410:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1761              		.loc 1 1410 44
 1762 0548 34301BE5 		ldr	r3, [fp, #-52]
 1763 054c 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1764              		.loc 1 1409 20
 1765 0550 03E0A0E1 		mov	lr, r3
1411:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Pos_Dst */
 1766              		.loc 1 1411 33
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 57


 1767 0554 34301BE5 		ldr	r3, [fp, #-52]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1768              		.loc 1 1409 20
 1769 0558 7310FFE6 		uxth	r1, r3
 1770 055c 28001BE5 		ldr	r0, [fp, #-40]
1412:../../Source/Kernel/rme_kernel.c ****                                 Cid,                                        /* rme_ptr_t Flag_Dst *
1413:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Pgt_Sr
 1771              		.loc 1 1413 44
 1772 0560 30301BE5 		ldr	r3, [fp, #-48]
 1773 0564 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1774              		.loc 1 1409 20
 1775 0568 03C0A0E1 		mov	ip, r3
1414:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Pos_Src */
 1776              		.loc 1 1414 33
 1777 056c 30301BE5 		ldr	r3, [fp, #-48]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1778              		.loc 1 1409 20
 1779 0570 7330FFE6 		uxth	r3, r3
 1780 0574 2C201BE5 		ldr	r2, [fp, #-44]
 1781 0578 08208DE5 		str	r2, [sp, #8]
 1782 057c 04308DE5 		str	r3, [sp, #4]
 1783 0580 00C08DE5 		str	ip, [sp]
 1784 0584 0030A0E1 		mov	r3, r0
 1785 0588 0120A0E1 		mov	r2, r1
 1786 058c 0E10A0E1 		mov	r1, lr
 1787 0590 14001BE5 		ldr	r0, [fp, #-20]
 1788 0594 FEFFFFEB 		bl	_RME_Pgt_Add
 1789 0598 10000BE5 		str	r0, [fp, #-16]
1415:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Index */
1416:../../Source/Kernel/rme_kernel.c ****             break;
 1790              		.loc 1 1416 13
 1791 059c BE0000EA 		b	.L123
 1792              	.L114:
1417:../../Source/Kernel/rme_kernel.c ****         }
1418:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_REM:
1419:../../Source/Kernel/rme_kernel.c ****         {
1420:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1421:../../Source/Kernel/rme_kernel.c ****             
1422:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Rem(Cpt,
1423:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1793              		.loc 1 1423 49
 1794 05a0 34301BE5 		ldr	r3, [fp, #-52]
1422:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1795              		.loc 1 1422 20
 1796 05a4 0310A0E1 		mov	r1, r3
 1797 05a8 30301BE5 		ldr	r3, [fp, #-48]
 1798 05ac 0320A0E1 		mov	r2, r3
 1799 05b0 14001BE5 		ldr	r0, [fp, #-20]
 1800 05b4 FEFFFFEB 		bl	_RME_Pgt_Rem
 1801 05b8 10000BE5 		str	r0, [fp, #-16]
1424:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Pos */
1425:../../Source/Kernel/rme_kernel.c ****             break;
 1802              		.loc 1 1425 13
 1803 05bc B60000EA 		b	.L123
 1804              	.L113:
1426:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 58


1427:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CON:
1428:../../Source/Kernel/rme_kernel.c ****         {
1429:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1430:../../Source/Kernel/rme_kernel.c ****             
1431:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Con(Cpt,
1432:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1805              		.loc 1 1432 44
 1806 05c0 34301BE5 		ldr	r3, [fp, #-52]
 1807 05c4 2338A0E1 		lsr	r3, r3, #16
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1808              		.loc 1 1431 20
 1809 05c8 0300A0E1 		mov	r0, r3
 1810 05cc 30201BE5 		ldr	r2, [fp, #-48]
1433:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1434:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Pgt_Ch
 1811              		.loc 1 1434 44
 1812 05d0 34301BE5 		ldr	r3, [fp, #-52]
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1813              		.loc 1 1431 20
 1814 05d4 7310FFE6 		uxth	r1, r3
 1815 05d8 2C301BE5 		ldr	r3, [fp, #-44]
 1816 05dc 00308DE5 		str	r3, [sp]
 1817 05e0 0130A0E1 		mov	r3, r1
 1818 05e4 0010A0E1 		mov	r1, r0
 1819 05e8 14001BE5 		ldr	r0, [fp, #-20]
 1820 05ec FEFFFFEB 		bl	_RME_Pgt_Con
 1821 05f0 10000BE5 		str	r0, [fp, #-16]
1435:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Flag_Child
1436:../../Source/Kernel/rme_kernel.c ****             break;
 1822              		.loc 1 1436 13
 1823 05f4 A80000EA 		b	.L123
 1824              	.L112:
1437:../../Source/Kernel/rme_kernel.c ****         }
1438:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DES:
1439:../../Source/Kernel/rme_kernel.c ****         {
1440:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1441:../../Source/Kernel/rme_kernel.c ****             
1442:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Des(Cpt,
1443:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1825              		.loc 1 1443 49
 1826 05f8 34301BE5 		ldr	r3, [fp, #-52]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1827              		.loc 1 1442 20
 1828 05fc 0310A0E1 		mov	r1, r3
 1829 0600 30201BE5 		ldr	r2, [fp, #-48]
1444:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1445:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt_Ch
 1830              		.loc 1 1445 49
 1831 0604 2C301BE5 		ldr	r3, [fp, #-44]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1832              		.loc 1 1442 20
 1833 0608 14001BE5 		ldr	r0, [fp, #-20]
 1834 060c FEFFFFEB 		bl	_RME_Pgt_Des
 1835 0610 10000BE5 		str	r0, [fp, #-16]
1446:../../Source/Kernel/rme_kernel.c ****             break;
 1836              		.loc 1 1446 13
 1837 0614 A00000EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 59


 1838              	.L111:
1447:../../Source/Kernel/rme_kernel.c ****         }
1448:../../Source/Kernel/rme_kernel.c **** #endif
1449:../../Source/Kernel/rme_kernel.c ****         /* Process */
1450:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CRT:
1451:../../Source/Kernel/rme_kernel.c ****         {
1452:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1453:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
 1839              		.loc 1 1453 20
 1840 0618 28301BE5 		ldr	r3, [fp, #-40]
 1841 061c 0310A0E1 		mov	r1, r3
1454:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1455:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1842              		.loc 1 1455 49
 1843 0620 34301BE5 		ldr	r3, [fp, #-52]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1844              		.loc 1 1453 20
 1845 0624 0320A0E1 		mov	r2, r3
1456:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
 1846              		.loc 1 1456 49
 1847 0628 30301BE5 		ldr	r3, [fp, #-48]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1848              		.loc 1 1453 20
 1849 062c 0300A0E1 		mov	r0, r3
1457:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt */
 1850              		.loc 1 1457 49
 1851 0630 2C301BE5 		ldr	r3, [fp, #-44]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1852              		.loc 1 1453 20
 1853 0634 00308DE5 		str	r3, [sp]
 1854 0638 0030A0E1 		mov	r3, r0
 1855 063c 14001BE5 		ldr	r0, [fp, #-20]
 1856 0640 FEFFFFEB 		bl	_RME_Prc_Crt
 1857 0644 10000BE5 		str	r0, [fp, #-16]
1458:../../Source/Kernel/rme_kernel.c **** #else
1459:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
1460:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1462:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
1463:../../Source/Kernel/rme_kernel.c ****                                 (rme_ptr_t)Param[2]);                       /* rme_ptr_t Raw_Pgt */
1464:../../Source/Kernel/rme_kernel.c **** #endif
1465:../../Source/Kernel/rme_kernel.c ****             break;
 1858              		.loc 1 1465 13
 1859 0648 930000EA 		b	.L123
 1860              	.L110:
1466:../../Source/Kernel/rme_kernel.c ****         }
1467:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_DEL:
1468:../../Source/Kernel/rme_kernel.c ****         {
1469:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1470:../../Source/Kernel/rme_kernel.c ****             
1471:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Del(Cpt,
 1861              		.loc 1 1471 20
 1862 064c 28301BE5 		ldr	r3, [fp, #-40]
 1863 0650 0310A0E1 		mov	r1, r3
1472:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1473:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Prc */
 1864              		.loc 1 1473 49
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 60


 1865 0654 34301BE5 		ldr	r3, [fp, #-52]
1471:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1866              		.loc 1 1471 20
 1867 0658 0320A0E1 		mov	r2, r3
 1868 065c 14001BE5 		ldr	r0, [fp, #-20]
 1869 0660 FEFFFFEB 		bl	_RME_Prc_Del
 1870 0664 10000BE5 		str	r0, [fp, #-16]
1474:../../Source/Kernel/rme_kernel.c ****             break;
 1871              		.loc 1 1474 13
 1872 0668 8B0000EA 		b	.L123
 1873              	.L109:
1475:../../Source/Kernel/rme_kernel.c ****         }
1476:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CPT:
1477:../../Source/Kernel/rme_kernel.c ****         {
1478:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1479:../../Source/Kernel/rme_kernel.c ****             
1480:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Cpt(Cpt,
1481:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1874              		.loc 1 1481 49
 1875 066c 34301BE5 		ldr	r3, [fp, #-52]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1876              		.loc 1 1480 20
 1877 0670 0310A0E1 		mov	r1, r3
1482:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Cpt */
 1878              		.loc 1 1482 49
 1879 0674 30301BE5 		ldr	r3, [fp, #-48]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1880              		.loc 1 1480 20
 1881 0678 0320A0E1 		mov	r2, r3
 1882 067c 14001BE5 		ldr	r0, [fp, #-20]
 1883 0680 FEFFFFEB 		bl	_RME_Prc_Cpt
 1884 0684 10000BE5 		str	r0, [fp, #-16]
1483:../../Source/Kernel/rme_kernel.c ****             break;
 1885              		.loc 1 1483 13
 1886 0688 830000EA 		b	.L123
 1887              	.L108:
1484:../../Source/Kernel/rme_kernel.c ****         }
1485:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_PGT:
1486:../../Source/Kernel/rme_kernel.c ****         {
1487:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1488:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1489:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1490:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1888              		.loc 1 1490 49
 1889 068c 34301BE5 		ldr	r3, [fp, #-52]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1890              		.loc 1 1489 20
 1891 0690 0310A0E1 		mov	r1, r3
1491:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Pgt */
 1892              		.loc 1 1491 49
 1893 0694 30301BE5 		ldr	r3, [fp, #-48]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1894              		.loc 1 1489 20
 1895 0698 0320A0E1 		mov	r2, r3
 1896 069c 14001BE5 		ldr	r0, [fp, #-20]
 1897 06a0 FEFFFFEB 		bl	_RME_Prc_Pgt
 1898 06a4 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 61


1492:../../Source/Kernel/rme_kernel.c **** #else
1493:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1494:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1495:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Raw_Pgt */
1496:../../Source/Kernel/rme_kernel.c **** #endif
1497:../../Source/Kernel/rme_kernel.c ****             break;
 1899              		.loc 1 1497 13
 1900 06a8 7B0000EA 		b	.L123
 1901              	.L107:
1498:../../Source/Kernel/rme_kernel.c ****         }
1499:../../Source/Kernel/rme_kernel.c ****         
1500:../../Source/Kernel/rme_kernel.c ****         /* Thread */
1501:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_CRT:
1502:../../Source/Kernel/rme_kernel.c ****         {
1503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1504:../../Source/Kernel/rme_kernel.c ****             
1505:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Crt(Cpt,
 1902              		.loc 1 1505 20
 1903 06ac 28301BE5 		ldr	r3, [fp, #-40]
 1904 06b0 0340A0E1 		mov	r4, r3
1506:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1507:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1905              		.loc 1 1507 44
 1906 06b4 34301BE5 		ldr	r3, [fp, #-52]
 1907 06b8 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1908              		.loc 1 1505 20
 1909 06bc 0350A0E1 		mov	r5, r3
1508:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Thd */
 1910              		.loc 1 1508 44
 1911 06c0 34301BE5 		ldr	r3, [fp, #-52]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1912              		.loc 1 1505 20
 1913 06c4 73C0FFE6 		uxth	ip, r3
1509:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Prc */
 1914              		.loc 1 1509 44
 1915 06c8 30301BE5 		ldr	r3, [fp, #-48]
 1916 06cc 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1917              		.loc 1 1505 20
 1918 06d0 03E0A0E1 		mov	lr, r3
1510:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Prio_Max *
 1919              		.loc 1 1510 33
 1920 06d4 30301BE5 		ldr	r3, [fp, #-48]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1921              		.loc 1 1505 20
 1922 06d8 7330FFE6 		uxth	r3, r3
 1923 06dc 2C201BE5 		ldr	r2, [fp, #-44]
 1924 06e0 24101BE5 		ldr	r1, [fp, #-36]
 1925 06e4 A113A0E1 		lsr	r1, r1, #7
 1926 06e8 24001BE5 		ldr	r0, [fp, #-36]
 1927 06ec 400000E2 		and	r0, r0, #64
 1928 06f0 10008DE5 		str	r0, [sp, #16]
 1929 06f4 0C108DE5 		str	r1, [sp, #12]
 1930 06f8 08208DE5 		str	r2, [sp, #8]
 1931 06fc 04308DE5 		str	r3, [sp, #4]
 1932 0700 00E08DE5 		str	lr, [sp]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 62


 1933 0704 0C30A0E1 		mov	r3, ip
 1934 0708 0520A0E1 		mov	r2, r5
 1935 070c 0410A0E1 		mov	r1, r4
 1936 0710 14001BE5 		ldr	r0, [fp, #-20]
 1937 0714 FEFFFFEB 		bl	_RME_Thd_Crt
 1938 0718 10000BE5 		str	r0, [fp, #-16]
1511:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Raddr */
1512:../../Source/Kernel/rme_kernel.c ****                                 Svc>>7,                                     /* rme_ptr_t Attr */
1513:../../Source/Kernel/rme_kernel.c ****                                 Svc&0x40U);                                 /* rme_ptr_t Is_Hyp */
1514:../../Source/Kernel/rme_kernel.c ****             break;
 1939              		.loc 1 1514 13
 1940 071c 5E0000EA 		b	.L123
 1941              	.L106:
1515:../../Source/Kernel/rme_kernel.c ****         }
1516:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_DEL:
1517:../../Source/Kernel/rme_kernel.c ****         {
1518:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1519:../../Source/Kernel/rme_kernel.c ****             
1520:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Del(Cpt,
 1942              		.loc 1 1520 20
 1943 0720 28301BE5 		ldr	r3, [fp, #-40]
 1944 0724 0310A0E1 		mov	r1, r3
1521:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1522:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Thd */
 1945              		.loc 1 1522 49
 1946 0728 34301BE5 		ldr	r3, [fp, #-52]
1520:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1947              		.loc 1 1520 20
 1948 072c 0320A0E1 		mov	r2, r3
 1949 0730 14001BE5 		ldr	r0, [fp, #-20]
 1950 0734 FEFFFFEB 		bl	_RME_Thd_Del
 1951 0738 10000BE5 		str	r0, [fp, #-16]
1523:../../Source/Kernel/rme_kernel.c ****             break;
 1952              		.loc 1 1523 13
 1953 073c 560000EA 		b	.L123
 1954              	.L105:
1524:../../Source/Kernel/rme_kernel.c ****         }
1525:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_BIND:
1526:../../Source/Kernel/rme_kernel.c ****         {
1527:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1528:../../Source/Kernel/rme_kernel.c ****             
1529:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Bind(Cpt,
 1955              		.loc 1 1529 20
 1956 0740 28301BE5 		ldr	r3, [fp, #-40]
 1957 0744 03C0A0E1 		mov	ip, r3
1530:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
1531:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D1(Param[0]),   /* rme_cid_t Cap_Thd_Sc
 1958              		.loc 1 1531 51
 1959 0748 34301BE5 		ldr	r3, [fp, #-52]
 1960 074c 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1961              		.loc 1 1529 20
 1962 0750 03E0A0E1 		mov	lr, r3
1532:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Sig */
 1963              		.loc 1 1532 51
 1964 0754 34301BE5 		ldr	r3, [fp, #-52]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 63


 1965              		.loc 1 1529 20
 1966 0758 7310FFE6 		uxth	r1, r3
1533:../../Source/Kernel/rme_kernel.c ****                                        (rme_tid_t)RME_PARAM_D1(Param[1]),   /* rme_tid_t TID */
 1967              		.loc 1 1533 51
 1968 075c 30301BE5 		ldr	r3, [fp, #-48]
 1969 0760 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1970              		.loc 1 1529 20
 1971 0764 0300A0E1 		mov	r0, r3
1534:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D0(Param[1]),              /* rme_ptr_t Prio */
 1972              		.loc 1 1534 40
 1973 0768 30301BE5 		ldr	r3, [fp, #-48]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1974              		.loc 1 1529 20
 1975 076c 7330FFE6 		uxth	r3, r3
 1976 0770 2C201BE5 		ldr	r2, [fp, #-44]
 1977 0774 08208DE5 		str	r2, [sp, #8]
 1978 0778 04308DE5 		str	r3, [sp, #4]
 1979 077c 00008DE5 		str	r0, [sp]
 1980 0780 0130A0E1 		mov	r3, r1
 1981 0784 0E20A0E1 		mov	r2, lr
 1982 0788 0C10A0E1 		mov	r1, ip
 1983 078c 14001BE5 		ldr	r0, [fp, #-20]
 1984 0790 FEFFFFEB 		bl	_RME_Thd_Sched_Bind
 1985 0794 10000BE5 		str	r0, [fp, #-16]
1535:../../Source/Kernel/rme_kernel.c ****                                        Param[2]);                           /* rme_ptr_t Haddr */
1536:../../Source/Kernel/rme_kernel.c ****             break;
 1986              		.loc 1 1536 13
 1987 0798 3F0000EA 		b	.L123
 1988              	.L104:
1537:../../Source/Kernel/rme_kernel.c ****         }
1538:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_RCV:
1539:../../Source/Kernel/rme_kernel.c ****         {
1540:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1541:../../Source/Kernel/rme_kernel.c ****             
1542:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Rcv(Cpt,
1543:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1989              		.loc 1 1543 55
 1990 079c 34301BE5 		ldr	r3, [fp, #-52]
1542:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1991              		.loc 1 1542 20
 1992 07a0 0310A0E1 		mov	r1, r3
 1993 07a4 14001BE5 		ldr	r0, [fp, #-20]
 1994 07a8 FEFFFFEB 		bl	_RME_Thd_Sched_Rcv
 1995 07ac 10000BE5 		str	r0, [fp, #-16]
1544:../../Source/Kernel/rme_kernel.c ****             break;
 1996              		.loc 1 1544 13
 1997 07b0 390000EA 		b	.L123
 1998              	.L103:
1545:../../Source/Kernel/rme_kernel.c ****         }
1546:../../Source/Kernel/rme_kernel.c ****         
1547:../../Source/Kernel/rme_kernel.c ****         /* Signal */
1548:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_CRT:
1549:../../Source/Kernel/rme_kernel.c ****         {
1550:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1551:../../Source/Kernel/rme_kernel.c ****             
1552:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Crt(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 64


 1999              		.loc 1 1552 20
 2000 07b4 28301BE5 		ldr	r3, [fp, #-40]
 2001 07b8 0310A0E1 		mov	r1, r3
1553:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1554:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2002              		.loc 1 1554 49
 2003 07bc 34301BE5 		ldr	r3, [fp, #-52]
1552:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2004              		.loc 1 1552 20
 2005 07c0 0320A0E1 		mov	r2, r3
 2006 07c4 14001BE5 		ldr	r0, [fp, #-20]
 2007 07c8 FEFFFFEB 		bl	_RME_Sig_Crt
 2008 07cc 10000BE5 		str	r0, [fp, #-16]
1555:../../Source/Kernel/rme_kernel.c ****             break;
 2009              		.loc 1 1555 13
 2010 07d0 310000EA 		b	.L123
 2011              	.L102:
1556:../../Source/Kernel/rme_kernel.c ****         }
1557:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_DEL:
1558:../../Source/Kernel/rme_kernel.c ****         {
1559:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1560:../../Source/Kernel/rme_kernel.c ****             
1561:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Del(Cpt,
 2012              		.loc 1 1561 20
 2013 07d4 28301BE5 		ldr	r3, [fp, #-40]
 2014 07d8 0310A0E1 		mov	r1, r3
1562:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1563:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2015              		.loc 1 1563 49
 2016 07dc 34301BE5 		ldr	r3, [fp, #-52]
1561:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2017              		.loc 1 1561 20
 2018 07e0 0320A0E1 		mov	r2, r3
 2019 07e4 14001BE5 		ldr	r0, [fp, #-20]
 2020 07e8 FEFFFFEB 		bl	_RME_Sig_Del
 2021 07ec 10000BE5 		str	r0, [fp, #-16]
1564:../../Source/Kernel/rme_kernel.c ****             break;
 2022              		.loc 1 1564 13
 2023 07f0 290000EA 		b	.L123
 2024              	.L101:
1565:../../Source/Kernel/rme_kernel.c ****         }
1566:../../Source/Kernel/rme_kernel.c ****         
1567:../../Source/Kernel/rme_kernel.c ****         /* Invocation */
1568:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_CRT:
1569:../../Source/Kernel/rme_kernel.c ****         {
1570:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1571:../../Source/Kernel/rme_kernel.c ****             
1572:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Crt(Cpt,
 2025              		.loc 1 1572 20
 2026 07f4 28301BE5 		ldr	r3, [fp, #-40]
 2027 07f8 0300A0E1 		mov	r0, r3
1573:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1574:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 2028              		.loc 1 1574 44
 2029 07fc 34301BE5 		ldr	r3, [fp, #-52]
 2030 0800 2338A0E1 		lsr	r3, r3, #16
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 65


 2031              		.loc 1 1572 20
 2032 0804 03C0A0E1 		mov	ip, r3
1575:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2033              		.loc 1 1575 44
 2034 0808 34301BE5 		ldr	r3, [fp, #-52]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2035              		.loc 1 1572 20
 2036 080c 7320FFE6 		uxth	r2, r3
1576:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Prc */
 2037              		.loc 1 1576 49
 2038 0810 30301BE5 		ldr	r3, [fp, #-48]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2039              		.loc 1 1572 20
 2040 0814 0310A0E1 		mov	r1, r3
 2041 0818 2C301BE5 		ldr	r3, [fp, #-44]
 2042 081c 04308DE5 		str	r3, [sp, #4]
 2043 0820 00108DE5 		str	r1, [sp]
 2044 0824 0230A0E1 		mov	r3, r2
 2045 0828 0C20A0E1 		mov	r2, ip
 2046 082c 0010A0E1 		mov	r1, r0
 2047 0830 14001BE5 		ldr	r0, [fp, #-20]
 2048 0834 FEFFFFEB 		bl	_RME_Inv_Crt
 2049 0838 10000BE5 		str	r0, [fp, #-16]
1577:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Raddr */
1578:../../Source/Kernel/rme_kernel.c ****             break;
 2050              		.loc 1 1578 13
 2051 083c 160000EA 		b	.L123
 2052              	.L100:
1579:../../Source/Kernel/rme_kernel.c ****         }
1580:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_DEL:
1581:../../Source/Kernel/rme_kernel.c ****         {
1582:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1583:../../Source/Kernel/rme_kernel.c ****             
1584:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Del(Cpt,
 2053              		.loc 1 1584 20
 2054 0840 28301BE5 		ldr	r3, [fp, #-40]
 2055 0844 0310A0E1 		mov	r1, r3
1585:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1586:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Inv */
 2056              		.loc 1 1586 49
 2057 0848 34301BE5 		ldr	r3, [fp, #-52]
1584:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2058              		.loc 1 1584 20
 2059 084c 0320A0E1 		mov	r2, r3
 2060 0850 14001BE5 		ldr	r0, [fp, #-20]
 2061 0854 FEFFFFEB 		bl	_RME_Inv_Del
 2062 0858 10000BE5 		str	r0, [fp, #-16]
1587:../../Source/Kernel/rme_kernel.c ****             break;
 2063              		.loc 1 1587 13
 2064 085c 0E0000EA 		b	.L123
 2065              	.L98:
1588:../../Source/Kernel/rme_kernel.c ****         }
1589:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_SET:
1590:../../Source/Kernel/rme_kernel.c ****         {
1591:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1592:../../Source/Kernel/rme_kernel.c ****             
1593:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Set(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 66


1594:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2066              		.loc 1 1594 44
 2067 0860 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2068              		.loc 1 1593 20
 2069 0864 7310FFE6 		uxth	r1, r3
 2070 0868 30201BE5 		ldr	r2, [fp, #-48]
 2071 086c 2C001BE5 		ldr	r0, [fp, #-44]
1595:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Entry */
1596:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Stack */
1597:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]));                    /* rme_ptr_t Is_Exc_Ret
 2072              		.loc 1 1597 33
 2073 0870 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2074              		.loc 1 1593 20
 2075 0874 2338A0E1 		lsr	r3, r3, #16
 2076 0878 00308DE5 		str	r3, [sp]
 2077 087c 0030A0E1 		mov	r3, r0
 2078 0880 14001BE5 		ldr	r0, [fp, #-20]
 2079 0884 FEFFFFEB 		bl	_RME_Inv_Set
 2080 0888 10000BE5 		str	r0, [fp, #-16]
1598:../../Source/Kernel/rme_kernel.c ****             break;
 2081              		.loc 1 1598 13
 2082 088c 020000EA 		b	.L123
 2083              	.L97:
1599:../../Source/Kernel/rme_kernel.c ****         }
1600:../../Source/Kernel/rme_kernel.c ****         /* This is an error */
1601:../../Source/Kernel/rme_kernel.c ****         default: 
1602:../../Source/Kernel/rme_kernel.c ****         {
1603:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1604:../../Source/Kernel/rme_kernel.c ****             
1605:../../Source/Kernel/rme_kernel.c ****             Retval=RME_ERR_CPT_NULL;
 2084              		.loc 1 1605 19
 2085 0890 0030E0E3 		mvn	r3, #0
 2086 0894 10300BE5 		str	r3, [fp, #-16]
1606:../../Source/Kernel/rme_kernel.c ****             break;
 2087              		.loc 1 1606 13
 2088 0898 00F020E3 		nop
 2089              	.L123:
1607:../../Source/Kernel/rme_kernel.c ****         }
1608:../../Source/Kernel/rme_kernel.c ****     }
1609:../../Source/Kernel/rme_kernel.c ****     
1610:../../Source/Kernel/rme_kernel.c ****     /* We set the registers and return */
1611:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,Retval);
 2090              		.loc 1 1611 5
 2091 089c 10101BE5 		ldr	r1, [fp, #-16]
 2092 08a0 38001BE5 		ldr	r0, [fp, #-56]
 2093 08a4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 2094              	.L69:
1612:../../Source/Kernel/rme_kernel.c **** }
 2095              		.loc 1 1612 1
 2096 08a8 0CD04BE2 		sub	sp, fp, #12
 2097              		.cfi_def_cfa 13, 16
 2098              		@ sp needed
 2099 08ac 3088BDE8 		pop	{r4, r5, fp, pc}
 2100              	.L128:
 2101              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 67


 2102              	.L127:
 2103 08b0 00000000 		.word	.L81
 2104 08b4 20000000 		.word	.L99
 2105              		.cfi_endproc
 2106              	.LFE18:
 2108              		.section	.text._RME_Tim_Handler,"ax",%progbits
 2109              		.align	2
 2110              		.global	_RME_Tim_Handler
 2111              		.syntax unified
 2112              		.arm
 2114              	_RME_Tim_Handler:
 2115              	.LFB19:
1613:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Svc_Handler *********************************************/
1614:../../Source/Kernel/rme_kernel.c **** 
1615:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Handler **************************************************
1616:../../Source/Kernel/rme_kernel.c **** Description : The system tick timer handler of RME.
1617:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1618:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Slice - Number of slices passed since last call of
1619:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1620:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1621:../../Source/Kernel/rme_kernel.c **** Return      : None.
1622:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1623:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Handler(struct RME_Reg_Struct* Reg,
1624:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Slice)
1625:../../Source/Kernel/rme_kernel.c **** {
 2116              		.loc 1 1625 1
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 16
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0000 00482DE9 		push	{fp, lr}
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 11, -8
 2123              		.cfi_offset 14, -4
 2124 0004 04B08DE2 		add	fp, sp, #4
 2125              		.cfi_def_cfa 11, 4
 2126 0008 10D04DE2 		sub	sp, sp, #16
 2127 000c 10000BE5 		str	r0, [fp, #-16]
 2128 0010 14100BE5 		str	r1, [fp, #-20]
1626:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
1627:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1628:../../Source/Kernel/rme_kernel.c ****     
1629:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 2129              		.loc 1 1629 10
 2130 0014 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2131 0018 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2132 001c 08300BE5 		str	r3, [fp, #-8]
1630:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 2133              		.loc 1 1630 12
 2134 0020 08301BE5 		ldr	r3, [fp, #-8]
 2135 0024 043093E5 		ldr	r3, [r3, #4]
 2136 0028 0C300BE5 		str	r3, [fp, #-12]
1631:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2137              		.loc 1 1631 22
 2138 002c 0C301BE5 		ldr	r3, [fp, #-12]
 2139 0030 183093E5 		ldr	r3, [r3, #24]
 2140              		.loc 1 1631 7
 2141 0034 0E0173E3 		cmn	r3, #-2147483645
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 68


 2142 0038 1500008A 		bhi	.L130
1632:../../Source/Kernel/rme_kernel.c ****     {
1633:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1634:../../Source/Kernel/rme_kernel.c **** 
1635:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, and see if the timeslice is used up */
1636:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2143              		.loc 1 1636 32
 2144 003c 0C301BE5 		ldr	r3, [fp, #-12]
 2145 0040 183093E5 		ldr	r3, [r3, #24]
 2146              		.loc 1 1636 11
 2147 0044 14201BE5 		ldr	r2, [fp, #-20]
 2148 0048 030052E1 		cmp	r2, r3
 2149 004c 0600002A 		bcs	.L131
1637:../../Source/Kernel/rme_kernel.c ****         {
1638:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1639:../../Source/Kernel/rme_kernel.c ****             
1640:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2150              		.loc 1 1640 27
 2151 0050 0C301BE5 		ldr	r3, [fp, #-12]
 2152 0054 182093E5 		ldr	r2, [r3, #24]
 2153              		.loc 1 1640 33
 2154 0058 14301BE5 		ldr	r3, [fp, #-20]
 2155 005c 032042E0 		sub	r2, r2, r3
 2156 0060 0C301BE5 		ldr	r3, [fp, #-12]
 2157 0064 182083E5 		str	r2, [r3, #24]
 2158 0068 090000EA 		b	.L130
 2159              	.L131:
1641:../../Source/Kernel/rme_kernel.c ****         }
1642:../../Source/Kernel/rme_kernel.c ****         else
1643:../../Source/Kernel/rme_kernel.c ****         {
1644:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1645:../../Source/Kernel/rme_kernel.c **** 
1646:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
1647:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 2160              		.loc 1 1647 33
 2161 006c 0C301BE5 		ldr	r3, [fp, #-12]
 2162 0070 0020A0E3 		mov	r2, #0
 2163 0074 182083E5 		str	r2, [r3, #24]
1648:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 2164              		.loc 1 1648 13
 2165 0078 0C001BE5 		ldr	r0, [fp, #-12]
 2166 007c FEFFFFEB 		bl	_RME_Run_Del
1649:../../Source/Kernel/rme_kernel.c ****             
1650:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
1651:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 2167              		.loc 1 1651 33
 2168 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2169 0084 0220A0E3 		mov	r2, #2
 2170 0088 1C2083E5 		str	r2, [r3, #28]
1652:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 2171              		.loc 1 1652 13
 2172 008c 0C001BE5 		ldr	r0, [fp, #-12]
 2173 0090 FEFFFFEB 		bl	_RME_Run_Notif
 2174              	.L130:
1653:../../Source/Kernel/rme_kernel.c ****         }
1654:../../Source/Kernel/rme_kernel.c ****     }
1655:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 69


1656:../../Source/Kernel/rme_kernel.c ****     {
1657:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1658:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1659:../../Source/Kernel/rme_kernel.c ****     }
1660:../../Source/Kernel/rme_kernel.c **** 
1661:../../Source/Kernel/rme_kernel.c ****     /* Send to the system tick timer endpoint. This endpoint is per-core */
1662:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_Snd(Local->Sig_Tim);
 2175              		.loc 1 1662 5
 2176 0094 08301BE5 		ldr	r3, [fp, #-8]
 2177 0098 083093E5 		ldr	r3, [r3, #8]
 2178 009c 0300A0E1 		mov	r0, r3
 2179 00a0 FEFFFFEB 		bl	_RME_Kern_Snd
1663:../../Source/Kernel/rme_kernel.c **** 
1664:../../Source/Kernel/rme_kernel.c ****     /* All kernel send complete, now pick the highest priority thread to run */
1665:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 2180              		.loc 1 1665 5
 2181 00a4 08101BE5 		ldr	r1, [fp, #-8]
 2182 00a8 10001BE5 		ldr	r0, [fp, #-16]
 2183 00ac FEFFFFEB 		bl	_RME_Kern_High
1666:../../Source/Kernel/rme_kernel.c **** }
 2184              		.loc 1 1666 1
 2185 00b0 00F020E3 		nop
 2186 00b4 04D04BE2 		sub	sp, fp, #4
 2187              		.cfi_def_cfa 13, 8
 2188              		@ sp needed
 2189 00b8 0088BDE8 		pop	{fp, pc}
 2190              		.cfi_endproc
 2191              	.LFE19:
 2193              		.section	.text._RME_Tim_Elapse,"ax",%progbits
 2194              		.align	2
 2195              		.global	_RME_Tim_Elapse
 2196              		.syntax unified
 2197              		.arm
 2199              	_RME_Tim_Elapse:
 2200              	.LFB20:
1667:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Handler *********************************************/
1668:../../Source/Kernel/rme_kernel.c **** 
1669:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Elapse ***************************************************
1670:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1671:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Slice - Number of slices passed since last call of
1672:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1673:../../Source/Kernel/rme_kernel.c **** Output      : None.
1674:../../Source/Kernel/rme_kernel.c **** Return      : None.
1675:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1676:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Elapse(rme_ptr_t Slice)
1677:../../Source/Kernel/rme_kernel.c **** {
 2201              		.loc 1 1677 1
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 16
 2204              		@ frame_needed = 1, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
 2206 0000 04B02DE5 		str	fp, [sp, #-4]!
 2207              		.cfi_def_cfa_offset 4
 2208              		.cfi_offset 11, -4
 2209 0004 00B08DE2 		add	fp, sp, #0
 2210              		.cfi_def_cfa_register 11
 2211 0008 14D04DE2 		sub	sp, sp, #20
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 70


 2212 000c 10000BE5 		str	r0, [fp, #-16]
1678:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1679:../../Source/Kernel/rme_kernel.c ****     
1680:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 2213              		.loc 1 1680 12
 2214 0010 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2215 0014 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2216 0018 043093E5 		ldr	r3, [r3, #4]
 2217 001c 08300BE5 		str	r3, [fp, #-8]
1681:../../Source/Kernel/rme_kernel.c ****     
1682:../../Source/Kernel/rme_kernel.c ****     /* We don't want the slices less than 1 because we want to keep the kernel
1683:../../Source/Kernel/rme_kernel.c ****      * SVC invariants - the current thread must still be running after this */
1684:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2218              		.loc 1 1684 22
 2219 0020 08301BE5 		ldr	r3, [fp, #-8]
 2220 0024 183093E5 		ldr	r3, [r3, #24]
 2221              		.loc 1 1684 7
 2222 0028 0E0173E3 		cmn	r3, #-2147483645
 2223 002c 0E00008A 		bhi	.L135
1685:../../Source/Kernel/rme_kernel.c ****     {
1686:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1687:../../Source/Kernel/rme_kernel.c **** 
1688:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, but no less than 1, so the thread is
1689:../../Source/Kernel/rme_kernel.c ****          * always running, which keeps the invariant of the kernel */
1690:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2224              		.loc 1 1690 32
 2225 0030 08301BE5 		ldr	r3, [fp, #-8]
 2226 0034 183093E5 		ldr	r3, [r3, #24]
 2227              		.loc 1 1690 11
 2228 0038 10201BE5 		ldr	r2, [fp, #-16]
 2229 003c 030052E1 		cmp	r2, r3
 2230 0040 0600002A 		bcs	.L134
1691:../../Source/Kernel/rme_kernel.c ****         {
1692:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1693:../../Source/Kernel/rme_kernel.c ****             
1694:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2231              		.loc 1 1694 27
 2232 0044 08301BE5 		ldr	r3, [fp, #-8]
 2233 0048 182093E5 		ldr	r2, [r3, #24]
 2234              		.loc 1 1694 33
 2235 004c 10301BE5 		ldr	r3, [fp, #-16]
 2236 0050 032042E0 		sub	r2, r2, r3
 2237 0054 08301BE5 		ldr	r3, [fp, #-8]
 2238 0058 182083E5 		str	r2, [r3, #24]
1695:../../Source/Kernel/rme_kernel.c ****         }
1696:../../Source/Kernel/rme_kernel.c ****         else
1697:../../Source/Kernel/rme_kernel.c ****         {
1698:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1699:../../Source/Kernel/rme_kernel.c ****             
1700:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=1U;
1701:../../Source/Kernel/rme_kernel.c ****         }
1702:../../Source/Kernel/rme_kernel.c ****     }
1703:../../Source/Kernel/rme_kernel.c ****     else
1704:../../Source/Kernel/rme_kernel.c ****     {
1705:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1706:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1707:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 71


1708:../../Source/Kernel/rme_kernel.c **** }
 2239              		.loc 1 1708 1
 2240 005c 020000EA 		b	.L135
 2241              	.L134:
1700:../../Source/Kernel/rme_kernel.c ****         }
 2242              		.loc 1 1700 33
 2243 0060 08301BE5 		ldr	r3, [fp, #-8]
 2244 0064 0120A0E3 		mov	r2, #1
 2245 0068 182083E5 		str	r2, [r3, #24]
 2246              	.L135:
 2247              		.loc 1 1708 1
 2248 006c 00F020E3 		nop
 2249 0070 00D08BE2 		add	sp, fp, #0
 2250              		.cfi_def_cfa_register 13
 2251              		@ sp needed
 2252 0074 04B09DE4 		ldr	fp, [sp], #4
 2253              		.cfi_restore 11
 2254              		.cfi_def_cfa_offset 0
 2255 0078 1EFF2FE1 		bx	lr
 2256              		.cfi_endproc
 2257              	.LFE20:
 2259              		.section	.text._RME_Tim_Future,"ax",%progbits
 2260              		.align	2
 2261              		.global	_RME_Tim_Future
 2262              		.syntax unified
 2263              		.arm
 2265              	_RME_Tim_Future:
 2266              	.LFB21:
1709:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Elapse **********************************************/
1710:../../Source/Kernel/rme_kernel.c **** 
1711:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Future ***************************************************
1712:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1713:../../Source/Kernel/rme_kernel.c **** Input       : None.
1714:../../Source/Kernel/rme_kernel.c **** Output      : None.
1715:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - How many slices to program until the next timeout.
1716:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1717:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Tim_Future(void)
1718:../../Source/Kernel/rme_kernel.c **** {
 2267              		.loc 1 1718 1
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 1, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
 2272 0000 04B02DE5 		str	fp, [sp, #-4]!
 2273              		.cfi_def_cfa_offset 4
 2274              		.cfi_offset 11, -4
 2275 0004 00B08DE2 		add	fp, sp, #0
 2276              		.cfi_def_cfa_register 11
1719:../../Source/Kernel/rme_kernel.c ****     /* If we're running an infinite thread, just program infinite time,
1720:../../Source/Kernel/rme_kernel.c ****      * these values are very large so that's fine */
1721:../../Source/Kernel/rme_kernel.c ****     return RME_CPU_LOCAL()->Thd_Cur->Sched.Slice;
 2277              		.loc 1 1721 27
 2278 0008 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2279 000c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2280 0010 043093E5 		ldr	r3, [r3, #4]
 2281              		.loc 1 1721 43
 2282 0014 183093E5 		ldr	r3, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 72


1722:../../Source/Kernel/rme_kernel.c **** }
 2283              		.loc 1 1722 1
 2284 0018 0300A0E1 		mov	r0, r3
 2285 001c 00D08BE2 		add	sp, fp, #0
 2286              		.cfi_def_cfa_register 13
 2287              		@ sp needed
 2288 0020 04B09DE4 		ldr	fp, [sp], #4
 2289              		.cfi_restore 11
 2290              		.cfi_def_cfa_offset 0
 2291 0024 1EFF2FE1 		bx	lr
 2292              		.cfi_endproc
 2293              	.LFE21:
 2295              		.section	.text._RME_Cpt_Boot_Init,"ax",%progbits
 2296              		.align	2
 2297              		.global	_RME_Cpt_Boot_Init
 2298              		.syntax unified
 2299              		.arm
 2301              	_RME_Cpt_Boot_Init:
 2302              	.LFB22:
1723:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Future **********************************************/
1724:../../Source/Kernel/rme_kernel.c **** 
1725:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Init ************************************************
1726:../../Source/Kernel/rme_kernel.c **** Description : Create the first capability table in the system, at boot-time. 
1727:../../Source/Kernel/rme_kernel.c ****               This function must be called at system startup before setting up
1728:../../Source/Kernel/rme_kernel.c ****               any other kernel objects.
1729:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
1730:../../Source/Kernel/rme_kernel.c **** Input       : rme_cid_t Cap_Cpt - The capability slot that you want this newly
1731:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1732:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1733:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the
1734:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1735:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capability entries in the
1736:../../Source/Kernel/rme_kernel.c ****                                     capability table.
1737:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1738:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1739:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Init(rme_cid_t Cap_Cpt,
1740:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Vaddr,
1741:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Entry_Num)
1742:../../Source/Kernel/rme_kernel.c **** {
 2303              		.loc 1 1742 1
 2304              		.cfi_startproc
 2305              		@ args = 0, pretend = 0, frame = 24
 2306              		@ frame_needed = 1, uses_anonymous_args = 0
 2307 0000 00482DE9 		push	{fp, lr}
 2308              		.cfi_def_cfa_offset 8
 2309              		.cfi_offset 11, -8
 2310              		.cfi_offset 14, -4
 2311 0004 04B08DE2 		add	fp, sp, #4
 2312              		.cfi_def_cfa 11, 4
 2313 0008 18D04DE2 		sub	sp, sp, #24
 2314 000c 10000BE5 		str	r0, [fp, #-16]
 2315 0010 14100BE5 		str	r1, [fp, #-20]
 2316 0014 18200BE5 		str	r2, [fp, #-24]
1743:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1744:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1745:../../Source/Kernel/rme_kernel.c **** 
1746:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 73


1747:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2317              		.loc 1 1747 7
 2318 0018 18301BE5 		ldr	r3, [fp, #-24]
 2319 001c 000053E3 		cmp	r3, #0
 2320 0020 0200000A 		beq	.L139
 2321              		.loc 1 1747 23 discriminator 1
 2322 0024 18301BE5 		ldr	r3, [fp, #-24]
 2323 0028 800053E3 		cmp	r3, #128
 2324 002c 0100009A 		bls	.L140
 2325              	.L139:
1748:../../Source/Kernel/rme_kernel.c ****     {
1749:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1750:../../Source/Kernel/rme_kernel.c ****         
1751:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2326              		.loc 1 1751 16
 2327 0030 0230E0E3 		mvn	r3, #2
 2328 0034 300000EA 		b	.L141
 2329              	.L140:
1752:../../Source/Kernel/rme_kernel.c ****     }
1753:../../Source/Kernel/rme_kernel.c ****     else
1754:../../Source/Kernel/rme_kernel.c ****     {
1755:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1756:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1757:../../Source/Kernel/rme_kernel.c ****     }
1758:../../Source/Kernel/rme_kernel.c ****     
1759:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
1760:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2330              		.loc 1 1760 8
 2331 0038 18301BE5 		ldr	r3, [fp, #-24]
 2332 003c 8332A0E1 		lsl	r3, r3, #5
 2333 0040 0310A0E1 		mov	r1, r3
 2334 0044 14001BE5 		ldr	r0, [fp, #-20]
 2335 0048 FEFFFFEB 		bl	_RME_Kot_Mark
 2336 004c 0030A0E1 		mov	r3, r0
 2337              		.loc 1 1760 7 discriminator 1
 2338 0050 000053E3 		cmp	r3, #0
 2339 0054 0100000A 		beq	.L142
1761:../../Source/Kernel/rme_kernel.c ****     {
1762:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1763:../../Source/Kernel/rme_kernel.c ****         
1764:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2340              		.loc 1 1764 16
 2341 0058 0330E0E3 		mvn	r3, #3
 2342 005c 260000EA 		b	.L141
 2343              	.L142:
1765:../../Source/Kernel/rme_kernel.c ****     }
1766:../../Source/Kernel/rme_kernel.c ****     else
1767:../../Source/Kernel/rme_kernel.c ****     {
1768:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1769:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1770:../../Source/Kernel/rme_kernel.c ****     }
1771:../../Source/Kernel/rme_kernel.c **** 
1772:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1773:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2344              		.loc 1 1773 14
 2345 0060 0030A0E3 		mov	r3, #0
 2346 0064 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 74


 2347              		.loc 1 1773 5
 2348 0068 090000EA 		b	.L143
 2349              	.L144:
1774:../../Source/Kernel/rme_kernel.c ****     {
1775:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2350              		.loc 1 1775 9
 2351 006c 08301BE5 		ldr	r3, [fp, #-8]
 2352 0070 8322A0E1 		lsl	r2, r3, #5
 2353 0074 14301BE5 		ldr	r3, [fp, #-20]
 2354 0078 033082E0 		add	r3, r2, r3
 2355 007c 0320A0E1 		mov	r2, r3
 2356 0080 0030A0E3 		mov	r3, #0
 2357 0084 003082E5 		str	r3, [r2]
1773:../../Source/Kernel/rme_kernel.c ****     {
 2358              		.loc 1 1773 39 discriminator 3
 2359 0088 08301BE5 		ldr	r3, [fp, #-8]
 2360 008c 013083E2 		add	r3, r3, #1
 2361 0090 08300BE5 		str	r3, [fp, #-8]
 2362              	.L143:
1773:../../Source/Kernel/rme_kernel.c ****     {
 2363              		.loc 1 1773 23 discriminator 1
 2364 0094 08201BE5 		ldr	r2, [fp, #-8]
 2365 0098 18301BE5 		ldr	r3, [fp, #-24]
 2366 009c 030052E1 		cmp	r2, r3
 2367 00a0 F1FFFF3A 		bcc	.L144
1776:../../Source/Kernel/rme_kernel.c ****     }
1777:../../Source/Kernel/rme_kernel.c **** 
1778:../../Source/Kernel/rme_kernel.c ****     Cpt=&(((struct RME_Cap_Cpt*)Vaddr)[Cap_Cpt]);
 2368              		.loc 1 1778 39
 2369 00a4 10301BE5 		ldr	r3, [fp, #-16]
 2370 00a8 8322A0E1 		lsl	r2, r3, #5
 2371 00ac 14301BE5 		ldr	r3, [fp, #-20]
 2372 00b0 033082E0 		add	r3, r2, r3
 2373              		.loc 1 1778 8
 2374 00b4 0C300BE5 		str	r3, [fp, #-12]
1779:../../Source/Kernel/rme_kernel.c ****     
1780:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1781:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Root_Ref=1U;
 2375              		.loc 1 1781 23
 2376 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 2377 00bc 0120A0E3 		mov	r2, #1
 2378 00c0 042083E5 		str	r2, [r3, #4]
1782:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Object=Vaddr;
 2379              		.loc 1 1782 21
 2380 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 2381 00c8 14201BE5 		ldr	r2, [fp, #-20]
 2382 00cc 0C2083E5 		str	r2, [r3, #12]
1783:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Flag=RME_CPT_FLAG_ALL;
 2383              		.loc 1 1783 19
 2384 00d0 0C301BE5 		ldr	r3, [fp, #-12]
 2385 00d4 FF20A0E3 		mov	r2, #255
 2386 00d8 082083E5 		str	r2, [r3, #8]
1784:../../Source/Kernel/rme_kernel.c ****     
1785:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1786:../../Source/Kernel/rme_kernel.c ****     Cpt->Entry_Num=Entry_Num;
 2387              		.loc 1 1786 19
 2388 00dc 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 75


 2389 00e0 18201BE5 		ldr	r2, [fp, #-24]
 2390 00e4 142083E5 		str	r2, [r3, #20]
1787:../../Source/Kernel/rme_kernel.c **** 
1788:../../Source/Kernel/rme_kernel.c ****     /* At last, write into slot the correct information, and set status to VALID */
1789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt->Head.Type_Stat),
 2391              		.loc 1 1789 5
 2392 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 2393 00ec 0314A0E3 		mov	r1, #50331648
 2394 00f0 0300A0E1 		mov	r0, r3
 2395 00f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
1790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1793:../../Source/Kernel/rme_kernel.c **** 
1794:../../Source/Kernel/rme_kernel.c ****     return Cap_Cpt;
 2396              		.loc 1 1794 12
 2397 00f8 10301BE5 		ldr	r3, [fp, #-16]
 2398              	.L141:
1795:../../Source/Kernel/rme_kernel.c **** }
 2399              		.loc 1 1795 1
 2400 00fc 0300A0E1 		mov	r0, r3
 2401 0100 04D04BE2 		sub	sp, fp, #4
 2402              		.cfi_def_cfa 13, 8
 2403              		@ sp needed
 2404 0104 0088BDE8 		pop	{fp, pc}
 2405              		.cfi_endproc
 2406              	.LFE22:
 2408              		.section	.text._RME_Cpt_Boot_Crt,"ax",%progbits
 2409              		.align	2
 2410              		.global	_RME_Cpt_Boot_Crt
 2411              		.syntax unified
 2412              		.arm
 2414              	_RME_Cpt_Boot_Crt:
 2415              	.LFB23:
1796:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Init *******************************************/
1797:../../Source/Kernel/rme_kernel.c **** 
1798:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Crt *************************************************
1799:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time capability table at the designated memory
1800:../../Source/Kernel/rme_kernel.c ****               address.
1801:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1802:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1803:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1804:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1805:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1806:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1807:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1808:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the 
1809:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1810:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capabilities in the capability table.
1811:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1812:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1813:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
1814:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
1815:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Crt,
1816:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
1817:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Entry_Num)
1818:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 76


 2416              		.loc 1 1818 1
 2417              		.cfi_startproc
 2418              		@ args = 4, pretend = 0, frame = 32
 2419              		@ frame_needed = 1, uses_anonymous_args = 0
 2420 0000 00482DE9 		push	{fp, lr}
 2421              		.cfi_def_cfa_offset 8
 2422              		.cfi_offset 11, -8
 2423              		.cfi_offset 14, -4
 2424 0004 04B08DE2 		add	fp, sp, #4
 2425              		.cfi_def_cfa 11, 4
 2426 0008 20D04DE2 		sub	sp, sp, #32
 2427 000c 18000BE5 		str	r0, [fp, #-24]
 2428 0010 1C100BE5 		str	r1, [fp, #-28]
 2429 0014 20200BE5 		str	r2, [fp, #-32]
 2430 0018 24300BE5 		str	r3, [fp, #-36]
1819:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1820:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1821:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1822:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1823:../../Source/Kernel/rme_kernel.c ****     
1824:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big - this is not restricted by RME_CPT_ENTRY_MAX */
1825:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2431              		.loc 1 1825 7
 2432 001c 04309BE5 		ldr	r3, [fp, #4]
 2433 0020 000053E3 		cmp	r3, #0
 2434 0024 0200000A 		beq	.L146
 2435              		.loc 1 1825 23 discriminator 1
 2436 0028 04309BE5 		ldr	r3, [fp, #4]
 2437 002c 800053E3 		cmp	r3, #128
 2438 0030 0100009A 		bls	.L147
 2439              	.L146:
1826:../../Source/Kernel/rme_kernel.c ****     {
1827:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1828:../../Source/Kernel/rme_kernel.c ****         
1829:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2440              		.loc 1 1829 16
 2441 0034 0230E0E3 		mvn	r3, #2
 2442 0038 B10000EA 		b	.L148
 2443              	.L147:
1830:../../Source/Kernel/rme_kernel.c ****     }
1831:../../Source/Kernel/rme_kernel.c ****     else
1832:../../Source/Kernel/rme_kernel.c ****     {
1833:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1834:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1835:../../Source/Kernel/rme_kernel.c ****     }
1836:../../Source/Kernel/rme_kernel.c **** 
1837:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1838:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,
 2444              		.loc 1 1838 5
 2445 003c 1C301BE5 		ldr	r3, [fp, #-28]
 2446 0040 803003E2 		and	r3, r3, #128
 2447 0044 000053E3 		cmp	r3, #0
 2448 0048 1C00001A 		bne	.L149
 2449              		.loc 1 1838 5 is_stmt 0 discriminator 1
 2450 004c 18301BE5 		ldr	r3, [fp, #-24]
 2451 0050 142093E5 		ldr	r2, [r3, #20]
 2452 0054 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 77


 2453 0058 030052E1 		cmp	r2, r3
 2454 005c 0100008A 		bhi	.L150
 2455              		.loc 1 1838 5 discriminator 3
 2456 0060 0230E0E3 		mvn	r3, #2
 2457              		.loc 1 1838 5
 2458 0064 A60000EA 		b	.L148
 2459              	.L150:
 2460              		.loc 1 1838 5 discriminator 4
 2461 0068 1C301BE5 		ldr	r3, [fp, #-28]
 2462 006c 8322A0E1 		lsl	r2, r3, #5
 2463 0070 18301BE5 		ldr	r3, [fp, #-24]
 2464 0074 0C3093E5 		ldr	r3, [r3, #12]
 2465 0078 033082E0 		add	r3, r2, r3
 2466 007c 0C300BE5 		str	r3, [fp, #-12]
 2467 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2468 0084 0300A0E1 		mov	r0, r3
 2469 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2470 008c 10000BE5 		str	r0, [fp, #-16]
 2471              		.loc 1 1838 5 discriminator 1
 2472 0090 10301BE5 		ldr	r3, [fp, #-16]
 2473 0094 FF3803E2 		and	r3, r3, #16711680
 2474 0098 020853E3 		cmp	r3, #131072
 2475 009c 0100001A 		bne	.L151
 2476              		.loc 1 1838 5 discriminator 5
 2477 00a0 0830E0E3 		mvn	r3, #8
 2478              		.loc 1 1838 5
 2479 00a4 960000EA 		b	.L148
 2480              	.L151:
 2481              		.loc 1 1838 5 discriminator 6
 2482 00a8 10301BE5 		ldr	r3, [fp, #-16]
 2483 00ac 233CA0E1 		lsr	r3, r3, #24
 2484 00b0 030053E3 		cmp	r3, #3
 2485 00b4 3F00000A 		beq	.L152
 2486              		.loc 1 1838 5 discriminator 7
 2487 00b8 0130E0E3 		mvn	r3, #1
 2488              		.loc 1 1838 5
 2489 00bc 900000EA 		b	.L148
 2490              	.L149:
 2491              		.loc 1 1838 5 discriminator 2
 2492 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 2493 00c4 2324A0E1 		lsr	r2, r3, #8
 2494 00c8 18301BE5 		ldr	r3, [fp, #-24]
 2495 00cc 143093E5 		ldr	r3, [r3, #20]
 2496 00d0 030052E1 		cmp	r2, r3
 2497 00d4 0100003A 		bcc	.L153
 2498              		.loc 1 1838 5 discriminator 8
 2499 00d8 0230E0E3 		mvn	r3, #2
 2500              		.loc 1 1838 5
 2501 00dc 880000EA 		b	.L148
 2502              	.L153:
 2503              		.loc 1 1838 5 discriminator 9
 2504 00e0 1C301BE5 		ldr	r3, [fp, #-28]
 2505 00e4 2334A0E1 		lsr	r3, r3, #8
 2506 00e8 8322A0E1 		lsl	r2, r3, #5
 2507 00ec 18301BE5 		ldr	r3, [fp, #-24]
 2508 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2509 00f4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 78


 2510 00f8 0C300BE5 		str	r3, [fp, #-12]
 2511 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2512 0100 0300A0E1 		mov	r0, r3
 2513 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2514 0108 10000BE5 		str	r0, [fp, #-16]
 2515              		.loc 1 1838 5 discriminator 1
 2516 010c 10301BE5 		ldr	r3, [fp, #-16]
 2517 0110 FF3803E2 		and	r3, r3, #16711680
 2518 0114 020853E3 		cmp	r3, #131072
 2519 0118 0100001A 		bne	.L154
 2520              		.loc 1 1838 5 discriminator 10
 2521 011c 0830E0E3 		mvn	r3, #8
 2522              		.loc 1 1838 5
 2523 0120 770000EA 		b	.L148
 2524              	.L154:
 2525              		.loc 1 1838 5 discriminator 11
 2526 0124 10301BE5 		ldr	r3, [fp, #-16]
 2527 0128 233CA0E1 		lsr	r3, r3, #24
 2528 012c 030053E3 		cmp	r3, #3
 2529 0130 0100000A 		beq	.L155
 2530              		.loc 1 1838 5 discriminator 12
 2531 0134 0130E0E3 		mvn	r3, #1
 2532              		.loc 1 1838 5
 2533 0138 710000EA 		b	.L148
 2534              	.L155:
 2535              		.loc 1 1838 5 discriminator 13
 2536 013c 1C301BE5 		ldr	r3, [fp, #-28]
 2537 0140 7F2003E2 		and	r2, r3, #127
 2538 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2539 0148 143093E5 		ldr	r3, [r3, #20]
 2540 014c 030052E1 		cmp	r2, r3
 2541 0150 0100003A 		bcc	.L156
 2542              		.loc 1 1838 5 discriminator 14
 2543 0154 0230E0E3 		mvn	r3, #2
 2544              		.loc 1 1838 5
 2545 0158 690000EA 		b	.L148
 2546              	.L156:
 2547              		.loc 1 1838 5 discriminator 15
 2548 015c 1C301BE5 		ldr	r3, [fp, #-28]
 2549 0160 7F3003E2 		and	r3, r3, #127
 2550 0164 8322A0E1 		lsl	r2, r3, #5
 2551 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2552 016c 0C3093E5 		ldr	r3, [r3, #12]
 2553 0170 033082E0 		add	r3, r2, r3
 2554 0174 0C300BE5 		str	r3, [fp, #-12]
 2555 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2556 017c 0300A0E1 		mov	r0, r3
 2557 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2558 0184 10000BE5 		str	r0, [fp, #-16]
 2559              		.loc 1 1838 5 discriminator 1
 2560 0188 10301BE5 		ldr	r3, [fp, #-16]
 2561 018c FF3803E2 		and	r3, r3, #16711680
 2562 0190 020853E3 		cmp	r3, #131072
 2563 0194 0100001A 		bne	.L157
 2564              		.loc 1 1838 5 discriminator 16
 2565 0198 0830E0E3 		mvn	r3, #8
 2566              		.loc 1 1838 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 79


 2567 019c 580000EA 		b	.L148
 2568              	.L157:
 2569              		.loc 1 1838 5 discriminator 17
 2570 01a0 10301BE5 		ldr	r3, [fp, #-16]
 2571 01a4 233CA0E1 		lsr	r3, r3, #24
 2572 01a8 030053E3 		cmp	r3, #3
 2573 01ac 0100000A 		beq	.L152
 2574              		.loc 1 1838 5 discriminator 18
 2575 01b0 0130E0E3 		mvn	r3, #1
 2576              		.loc 1 1838 5
 2577 01b4 520000EA 		b	.L148
 2578              	.L152:
1839:../../Source/Kernel/rme_kernel.c ****                    Cap_Cpt_Crt,
1840:../../Source/Kernel/rme_kernel.c ****                    RME_CAP_TYPE_CPT,
1841:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,
1842:../../Source/Kernel/rme_kernel.c ****                    Cpt_Op,
1843:../../Source/Kernel/rme_kernel.c ****                    Type_Stat);
1844:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1845:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2579              		.loc 1 1845 5 is_stmt 1
 2580 01b8 0C301BE5 		ldr	r3, [fp, #-12]
 2581 01bc 083093E5 		ldr	r3, [r3, #8]
 2582 01c0 013003E2 		and	r3, r3, #1
 2583 01c4 000053E3 		cmp	r3, #0
 2584 01c8 0100001A 		bne	.L158
 2585              		.loc 1 1845 5 is_stmt 0 discriminator 1
 2586 01cc 0630E0E3 		mvn	r3, #6
 2587              		.loc 1 1845 5
 2588 01d0 4B0000EA 		b	.L148
 2589              	.L158:
1846:../../Source/Kernel/rme_kernel.c **** 
1847:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1848:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 2590              		.loc 1 1848 5 is_stmt 1
 2591 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 2592 01d8 142093E5 		ldr	r2, [r3, #20]
 2593 01dc 20301BE5 		ldr	r3, [fp, #-32]
 2594 01e0 030052E1 		cmp	r2, r3
 2595 01e4 0100008A 		bhi	.L159
 2596              		.loc 1 1848 5 is_stmt 0 discriminator 1
 2597 01e8 0230E0E3 		mvn	r3, #2
 2598              		.loc 1 1848 5
 2599 01ec 440000EA 		b	.L148
 2600              	.L159:
 2601              		.loc 1 1848 5 discriminator 2
 2602 01f0 20301BE5 		ldr	r3, [fp, #-32]
 2603 01f4 8322A0E1 		lsl	r2, r3, #5
 2604 01f8 0C301BE5 		ldr	r3, [fp, #-12]
 2605 01fc 0C3093E5 		ldr	r3, [r3, #12]
 2606 0200 033082E0 		add	r3, r2, r3
 2607 0204 14300BE5 		str	r3, [fp, #-20]
1849:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1850:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 2608              		.loc 1 1850 5 is_stmt 1
 2609 0208 14301BE5 		ldr	r3, [fp, #-20]
 2610 020c 0128A0E3 		mov	r2, #65536
 2611 0210 0010A0E3 		mov	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 80


 2612 0214 0300A0E1 		mov	r0, r3
 2613 0218 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 2614 021c 0030A0E1 		mov	r3, r0
 2615              		.loc 1 1850 5 is_stmt 0 discriminator 1
 2616 0220 000053E3 		cmp	r3, #0
 2617 0224 0100001A 		bne	.L160
 2618 0228 0430E0E3 		mvn	r3, #4
 2619              		.loc 1 1850 5
 2620 022c 340000EA 		b	.L148
 2621              	.L160:
 2622              		.loc 1 1850 5 discriminator 2
 2623 0230 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 2624 0234 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 2625 0238 002093E5 		ldr	r2, [r3]
 2626 023c 14301BE5 		ldr	r3, [fp, #-20]
 2627 0240 102083E5 		str	r2, [r3, #16]
1851:../../Source/Kernel/rme_kernel.c **** 
1852:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1853:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2628              		.loc 1 1853 8 is_stmt 1
 2629 0244 04309BE5 		ldr	r3, [fp, #4]
 2630 0248 8332A0E1 		lsl	r3, r3, #5
 2631 024c 0310A0E1 		mov	r1, r3
 2632 0250 24001BE5 		ldr	r0, [fp, #-36]
 2633 0254 FEFFFFEB 		bl	_RME_Kot_Mark
 2634 0258 0030A0E1 		mov	r3, r0
 2635              		.loc 1 1853 7 discriminator 1
 2636 025c 000053E3 		cmp	r3, #0
 2637 0260 0500000A 		beq	.L161
1854:../../Source/Kernel/rme_kernel.c ****     {
1855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1856:../../Source/Kernel/rme_kernel.c ****         
1857:../../Source/Kernel/rme_kernel.c ****         /* Abort the creation process */
1858:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 2638              		.loc 1 1858 9
 2639 0264 14301BE5 		ldr	r3, [fp, #-20]
 2640 0268 0010A0E3 		mov	r1, #0
 2641 026c 0300A0E1 		mov	r0, r3
 2642 0270 FEFFFFEB 		bl	__RME_A7A_Write_Release
1859:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2643              		.loc 1 1859 16
 2644 0274 0330E0E3 		mvn	r3, #3
 2645 0278 210000EA 		b	.L148
 2646              	.L161:
1860:../../Source/Kernel/rme_kernel.c ****     }
1861:../../Source/Kernel/rme_kernel.c ****     else
1862:../../Source/Kernel/rme_kernel.c ****     {
1863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1864:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1865:../../Source/Kernel/rme_kernel.c ****     }
1866:../../Source/Kernel/rme_kernel.c **** 
1867:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1868:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2647              		.loc 1 1868 14
 2648 027c 0030A0E3 		mov	r3, #0
 2649 0280 08300BE5 		str	r3, [fp, #-8]
 2650              		.loc 1 1868 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 81


 2651 0284 090000EA 		b	.L162
 2652              	.L163:
1869:../../Source/Kernel/rme_kernel.c ****     {
1870:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2653              		.loc 1 1870 9
 2654 0288 08301BE5 		ldr	r3, [fp, #-8]
 2655 028c 8322A0E1 		lsl	r2, r3, #5
 2656 0290 24301BE5 		ldr	r3, [fp, #-36]
 2657 0294 033082E0 		add	r3, r2, r3
 2658 0298 0320A0E1 		mov	r2, r3
 2659 029c 0030A0E3 		mov	r3, #0
 2660 02a0 003082E5 		str	r3, [r2]
1868:../../Source/Kernel/rme_kernel.c ****     {
 2661              		.loc 1 1868 39 discriminator 3
 2662 02a4 08301BE5 		ldr	r3, [fp, #-8]
 2663 02a8 013083E2 		add	r3, r3, #1
 2664 02ac 08300BE5 		str	r3, [fp, #-8]
 2665              	.L162:
1868:../../Source/Kernel/rme_kernel.c ****     {
 2666              		.loc 1 1868 23 discriminator 1
 2667 02b0 08201BE5 		ldr	r2, [fp, #-8]
 2668 02b4 04309BE5 		ldr	r3, [fp, #4]
 2669 02b8 030052E1 		cmp	r2, r3
 2670 02bc F1FFFF3A 		bcc	.L163
1871:../../Source/Kernel/rme_kernel.c ****     }
1872:../../Source/Kernel/rme_kernel.c **** 
1873:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1874:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 2671              		.loc 1 1874 27
 2672 02c0 14301BE5 		ldr	r3, [fp, #-20]
 2673 02c4 0020A0E3 		mov	r2, #0
 2674 02c8 042083E5 		str	r2, [r3, #4]
1875:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 2675              		.loc 1 1875 25
 2676 02cc 14301BE5 		ldr	r3, [fp, #-20]
 2677 02d0 24201BE5 		ldr	r2, [fp, #-36]
 2678 02d4 0C2083E5 		str	r2, [r3, #12]
1876:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 2679              		.loc 1 1876 23
 2680 02d8 14301BE5 		ldr	r3, [fp, #-20]
 2681 02dc FF20A0E3 		mov	r2, #255
 2682 02e0 082083E5 		str	r2, [r3, #8]
1877:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1878:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 2683              		.loc 1 1878 23
 2684 02e4 14301BE5 		ldr	r3, [fp, #-20]
 2685 02e8 04209BE5 		ldr	r2, [fp, #4]
 2686 02ec 142083E5 		str	r2, [r3, #20]
1879:../../Source/Kernel/rme_kernel.c **** 
1880:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1881:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 2687              		.loc 1 1881 5
 2688 02f0 14301BE5 		ldr	r3, [fp, #-20]
 2689 02f4 0314A0E3 		mov	r1, #50331648
 2690 02f8 0300A0E1 		mov	r0, r3
 2691 02fc FEFFFFEB 		bl	__RME_A7A_Write_Release
1882:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 82


1883:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1884:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1885:../../Source/Kernel/rme_kernel.c **** 
1886:../../Source/Kernel/rme_kernel.c ****     return 0;
 2692              		.loc 1 1886 12
 2693 0300 0030A0E3 		mov	r3, #0
 2694              	.L148:
1887:../../Source/Kernel/rme_kernel.c **** }
 2695              		.loc 1 1887 1
 2696 0304 0300A0E1 		mov	r0, r3
 2697 0308 04D04BE2 		sub	sp, fp, #4
 2698              		.cfi_def_cfa 13, 8
 2699              		@ sp needed
 2700 030c 0088BDE8 		pop	{fp, pc}
 2701              		.cfi_endproc
 2702              	.LFE23:
 2704              		.section	.text._RME_Cpt_Crt,"ax",%progbits
 2705              		.align	2
 2706              		.syntax unified
 2707              		.arm
 2709              	_RME_Cpt_Crt:
 2710              	.LFB24:
1888:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Crt ********************************************/
1889:../../Source/Kernel/rme_kernel.c **** 
1890:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Crt ******************************************************
1891:../../Source/Kernel/rme_kernel.c **** Description : Create a capability table.
1892:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1893:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1894:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1895:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1896:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
1897:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
1898:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1899:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1900:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1901:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the 
1902:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1903:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of entries in that capability
1904:../../Source/Kernel/rme_kernel.c ****                                     table.
1905:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1906:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1907:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Crt(struct RME_Cap_Cpt* Cpt,
1908:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
1909:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
1910:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Crt,
1911:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
1912:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry_Num)
1913:../../Source/Kernel/rme_kernel.c **** {
 2711              		.loc 1 1913 1
 2712              		.cfi_startproc
 2713              		@ args = 8, pretend = 0, frame = 40
 2714              		@ frame_needed = 1, uses_anonymous_args = 0
 2715 0000 00482DE9 		push	{fp, lr}
 2716              		.cfi_def_cfa_offset 8
 2717              		.cfi_offset 11, -8
 2718              		.cfi_offset 14, -4
 2719 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 83


 2720              		.cfi_def_cfa 11, 4
 2721 0008 28D04DE2 		sub	sp, sp, #40
 2722 000c 20000BE5 		str	r0, [fp, #-32]
 2723 0010 24100BE5 		str	r1, [fp, #-36]
 2724 0014 28200BE5 		str	r2, [fp, #-40]
 2725 0018 2C300BE5 		str	r3, [fp, #-44]
1914:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1915:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1916:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
1917:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1918:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1919:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
1920:../../Source/Kernel/rme_kernel.c **** 
1921:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1922:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2726              		.loc 1 1922 7
 2727 001c 08309BE5 		ldr	r3, [fp, #8]
 2728 0020 000053E3 		cmp	r3, #0
 2729 0024 0200000A 		beq	.L165
 2730              		.loc 1 1922 23 discriminator 1
 2731 0028 08309BE5 		ldr	r3, [fp, #8]
 2732 002c 800053E3 		cmp	r3, #128
 2733 0030 0100009A 		bls	.L166
 2734              	.L165:
1923:../../Source/Kernel/rme_kernel.c ****     {
1924:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1925:../../Source/Kernel/rme_kernel.c ****         
1926:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2735              		.loc 1 1926 16
 2736 0034 0230E0E3 		mvn	r3, #2
 2737 0038 3D0100EA 		b	.L167
 2738              	.L166:
1927:../../Source/Kernel/rme_kernel.c ****     }
1928:../../Source/Kernel/rme_kernel.c ****     else
1929:../../Source/Kernel/rme_kernel.c ****     {
1930:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1931:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1932:../../Source/Kernel/rme_kernel.c ****     }
1933:../../Source/Kernel/rme_kernel.c **** 
1934:../../Source/Kernel/rme_kernel.c ****     /* Are we overrunning the size limit? */
1935:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
1936:../../Source/Kernel/rme_kernel.c ****     if(Entry_Num>RME_CPT_ENTRY_MAX)
1937:../../Source/Kernel/rme_kernel.c ****     {
1938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1939:../../Source/Kernel/rme_kernel.c ****         
1940:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
1941:../../Source/Kernel/rme_kernel.c ****     }
1942:../../Source/Kernel/rme_kernel.c ****     else
1943:../../Source/Kernel/rme_kernel.c ****     {
1944:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1945:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1946:../../Source/Kernel/rme_kernel.c ****     }
1947:../../Source/Kernel/rme_kernel.c **** #endif
1948:../../Source/Kernel/rme_kernel.c **** 
1949:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1950:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 2739              		.loc 1 1950 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 84


 2740 003c 24301BE5 		ldr	r3, [fp, #-36]
 2741 0040 803003E2 		and	r3, r3, #128
 2742 0044 000053E3 		cmp	r3, #0
 2743 0048 1C00001A 		bne	.L168
 2744              		.loc 1 1950 5 is_stmt 0 discriminator 1
 2745 004c 20301BE5 		ldr	r3, [fp, #-32]
 2746 0050 142093E5 		ldr	r2, [r3, #20]
 2747 0054 24301BE5 		ldr	r3, [fp, #-36]
 2748 0058 030052E1 		cmp	r2, r3
 2749 005c 0100008A 		bhi	.L169
 2750              		.loc 1 1950 5 discriminator 3
 2751 0060 0230E0E3 		mvn	r3, #2
 2752              		.loc 1 1950 5
 2753 0064 320100EA 		b	.L167
 2754              	.L169:
 2755              		.loc 1 1950 5 discriminator 4
 2756 0068 24301BE5 		ldr	r3, [fp, #-36]
 2757 006c 8322A0E1 		lsl	r2, r3, #5
 2758 0070 20301BE5 		ldr	r3, [fp, #-32]
 2759 0074 0C3093E5 		ldr	r3, [r3, #12]
 2760 0078 033082E0 		add	r3, r2, r3
 2761 007c 0C300BE5 		str	r3, [fp, #-12]
 2762 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2763 0084 0300A0E1 		mov	r0, r3
 2764 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2765 008c 14000BE5 		str	r0, [fp, #-20]
 2766              		.loc 1 1950 5 discriminator 1
 2767 0090 14301BE5 		ldr	r3, [fp, #-20]
 2768 0094 FF3803E2 		and	r3, r3, #16711680
 2769 0098 020853E3 		cmp	r3, #131072
 2770 009c 0100001A 		bne	.L170
 2771              		.loc 1 1950 5 discriminator 5
 2772 00a0 0830E0E3 		mvn	r3, #8
 2773              		.loc 1 1950 5
 2774 00a4 220100EA 		b	.L167
 2775              	.L170:
 2776              		.loc 1 1950 5 discriminator 6
 2777 00a8 14301BE5 		ldr	r3, [fp, #-20]
 2778 00ac 233CA0E1 		lsr	r3, r3, #24
 2779 00b0 030053E3 		cmp	r3, #3
 2780 00b4 3F00000A 		beq	.L171
 2781              		.loc 1 1950 5 discriminator 7
 2782 00b8 0130E0E3 		mvn	r3, #1
 2783              		.loc 1 1950 5
 2784 00bc 1C0100EA 		b	.L167
 2785              	.L168:
 2786              		.loc 1 1950 5 discriminator 2
 2787 00c0 24301BE5 		ldr	r3, [fp, #-36]
 2788 00c4 2324A0E1 		lsr	r2, r3, #8
 2789 00c8 20301BE5 		ldr	r3, [fp, #-32]
 2790 00cc 143093E5 		ldr	r3, [r3, #20]
 2791 00d0 030052E1 		cmp	r2, r3
 2792 00d4 0100003A 		bcc	.L172
 2793              		.loc 1 1950 5 discriminator 8
 2794 00d8 0230E0E3 		mvn	r3, #2
 2795              		.loc 1 1950 5
 2796 00dc 140100EA 		b	.L167
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 85


 2797              	.L172:
 2798              		.loc 1 1950 5 discriminator 9
 2799 00e0 24301BE5 		ldr	r3, [fp, #-36]
 2800 00e4 2334A0E1 		lsr	r3, r3, #8
 2801 00e8 8322A0E1 		lsl	r2, r3, #5
 2802 00ec 20301BE5 		ldr	r3, [fp, #-32]
 2803 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2804 00f4 033082E0 		add	r3, r2, r3
 2805 00f8 0C300BE5 		str	r3, [fp, #-12]
 2806 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2807 0100 0300A0E1 		mov	r0, r3
 2808 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2809 0108 14000BE5 		str	r0, [fp, #-20]
 2810              		.loc 1 1950 5 discriminator 1
 2811 010c 14301BE5 		ldr	r3, [fp, #-20]
 2812 0110 FF3803E2 		and	r3, r3, #16711680
 2813 0114 020853E3 		cmp	r3, #131072
 2814 0118 0100001A 		bne	.L173
 2815              		.loc 1 1950 5 discriminator 10
 2816 011c 0830E0E3 		mvn	r3, #8
 2817              		.loc 1 1950 5
 2818 0120 030100EA 		b	.L167
 2819              	.L173:
 2820              		.loc 1 1950 5 discriminator 11
 2821 0124 14301BE5 		ldr	r3, [fp, #-20]
 2822 0128 233CA0E1 		lsr	r3, r3, #24
 2823 012c 030053E3 		cmp	r3, #3
 2824 0130 0100000A 		beq	.L174
 2825              		.loc 1 1950 5 discriminator 12
 2826 0134 0130E0E3 		mvn	r3, #1
 2827              		.loc 1 1950 5
 2828 0138 FD0000EA 		b	.L167
 2829              	.L174:
 2830              		.loc 1 1950 5 discriminator 13
 2831 013c 24301BE5 		ldr	r3, [fp, #-36]
 2832 0140 7F2003E2 		and	r2, r3, #127
 2833 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2834 0148 143093E5 		ldr	r3, [r3, #20]
 2835 014c 030052E1 		cmp	r2, r3
 2836 0150 0100003A 		bcc	.L175
 2837              		.loc 1 1950 5 discriminator 14
 2838 0154 0230E0E3 		mvn	r3, #2
 2839              		.loc 1 1950 5
 2840 0158 F50000EA 		b	.L167
 2841              	.L175:
 2842              		.loc 1 1950 5 discriminator 15
 2843 015c 24301BE5 		ldr	r3, [fp, #-36]
 2844 0160 7F3003E2 		and	r3, r3, #127
 2845 0164 8322A0E1 		lsl	r2, r3, #5
 2846 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2847 016c 0C3093E5 		ldr	r3, [r3, #12]
 2848 0170 033082E0 		add	r3, r2, r3
 2849 0174 0C300BE5 		str	r3, [fp, #-12]
 2850 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2851 017c 0300A0E1 		mov	r0, r3
 2852 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2853 0184 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 86


 2854              		.loc 1 1950 5 discriminator 1
 2855 0188 14301BE5 		ldr	r3, [fp, #-20]
 2856 018c FF3803E2 		and	r3, r3, #16711680
 2857 0190 020853E3 		cmp	r3, #131072
 2858 0194 0100001A 		bne	.L176
 2859              		.loc 1 1950 5 discriminator 16
 2860 0198 0830E0E3 		mvn	r3, #8
 2861              		.loc 1 1950 5
 2862 019c E40000EA 		b	.L167
 2863              	.L176:
 2864              		.loc 1 1950 5 discriminator 17
 2865 01a0 14301BE5 		ldr	r3, [fp, #-20]
 2866 01a4 233CA0E1 		lsr	r3, r3, #24
 2867 01a8 030053E3 		cmp	r3, #3
 2868 01ac 0100000A 		beq	.L171
 2869              		.loc 1 1950 5 discriminator 18
 2870 01b0 0130E0E3 		mvn	r3, #1
 2871              		.loc 1 1950 5
 2872 01b4 DE0000EA 		b	.L167
 2873              	.L171:
1951:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
1952:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 2874              		.loc 1 1952 5 is_stmt 1
 2875 01b8 28301BE5 		ldr	r3, [fp, #-40]
 2876 01bc 803003E2 		and	r3, r3, #128
 2877 01c0 000053E3 		cmp	r3, #0
 2878 01c4 1C00001A 		bne	.L177
 2879              		.loc 1 1952 5 is_stmt 0 discriminator 1
 2880 01c8 20301BE5 		ldr	r3, [fp, #-32]
 2881 01cc 142093E5 		ldr	r2, [r3, #20]
 2882 01d0 28301BE5 		ldr	r3, [fp, #-40]
 2883 01d4 030052E1 		cmp	r2, r3
 2884 01d8 0100008A 		bhi	.L178
 2885              		.loc 1 1952 5 discriminator 3
 2886 01dc 0230E0E3 		mvn	r3, #2
 2887              		.loc 1 1952 5
 2888 01e0 D30000EA 		b	.L167
 2889              	.L178:
 2890              		.loc 1 1952 5 discriminator 4
 2891 01e4 28301BE5 		ldr	r3, [fp, #-40]
 2892 01e8 8322A0E1 		lsl	r2, r3, #5
 2893 01ec 20301BE5 		ldr	r3, [fp, #-32]
 2894 01f0 0C3093E5 		ldr	r3, [r3, #12]
 2895 01f4 033082E0 		add	r3, r2, r3
 2896 01f8 10300BE5 		str	r3, [fp, #-16]
 2897 01fc 10301BE5 		ldr	r3, [fp, #-16]
 2898 0200 0300A0E1 		mov	r0, r3
 2899 0204 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2900 0208 14000BE5 		str	r0, [fp, #-20]
 2901              		.loc 1 1952 5 discriminator 1
 2902 020c 14301BE5 		ldr	r3, [fp, #-20]
 2903 0210 FF3803E2 		and	r3, r3, #16711680
 2904 0214 020853E3 		cmp	r3, #131072
 2905 0218 0100001A 		bne	.L179
 2906              		.loc 1 1952 5 discriminator 5
 2907 021c 0830E0E3 		mvn	r3, #8
 2908              		.loc 1 1952 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 87


 2909 0220 C30000EA 		b	.L167
 2910              	.L179:
 2911              		.loc 1 1952 5 discriminator 6
 2912 0224 14301BE5 		ldr	r3, [fp, #-20]
 2913 0228 233CA0E1 		lsr	r3, r3, #24
 2914 022c 020053E3 		cmp	r3, #2
 2915 0230 3F00000A 		beq	.L180
 2916              		.loc 1 1952 5 discriminator 7
 2917 0234 0130E0E3 		mvn	r3, #1
 2918              		.loc 1 1952 5
 2919 0238 BD0000EA 		b	.L167
 2920              	.L177:
 2921              		.loc 1 1952 5 discriminator 2
 2922 023c 28301BE5 		ldr	r3, [fp, #-40]
 2923 0240 2324A0E1 		lsr	r2, r3, #8
 2924 0244 20301BE5 		ldr	r3, [fp, #-32]
 2925 0248 143093E5 		ldr	r3, [r3, #20]
 2926 024c 030052E1 		cmp	r2, r3
 2927 0250 0100003A 		bcc	.L181
 2928              		.loc 1 1952 5 discriminator 8
 2929 0254 0230E0E3 		mvn	r3, #2
 2930              		.loc 1 1952 5
 2931 0258 B50000EA 		b	.L167
 2932              	.L181:
 2933              		.loc 1 1952 5 discriminator 9
 2934 025c 28301BE5 		ldr	r3, [fp, #-40]
 2935 0260 2334A0E1 		lsr	r3, r3, #8
 2936 0264 8322A0E1 		lsl	r2, r3, #5
 2937 0268 20301BE5 		ldr	r3, [fp, #-32]
 2938 026c 0C3093E5 		ldr	r3, [r3, #12]
 2939 0270 033082E0 		add	r3, r2, r3
 2940 0274 10300BE5 		str	r3, [fp, #-16]
 2941 0278 10301BE5 		ldr	r3, [fp, #-16]
 2942 027c 0300A0E1 		mov	r0, r3
 2943 0280 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2944 0284 14000BE5 		str	r0, [fp, #-20]
 2945              		.loc 1 1952 5 discriminator 1
 2946 0288 14301BE5 		ldr	r3, [fp, #-20]
 2947 028c FF3803E2 		and	r3, r3, #16711680
 2948 0290 020853E3 		cmp	r3, #131072
 2949 0294 0100001A 		bne	.L182
 2950              		.loc 1 1952 5 discriminator 10
 2951 0298 0830E0E3 		mvn	r3, #8
 2952              		.loc 1 1952 5
 2953 029c A40000EA 		b	.L167
 2954              	.L182:
 2955              		.loc 1 1952 5 discriminator 11
 2956 02a0 14301BE5 		ldr	r3, [fp, #-20]
 2957 02a4 233CA0E1 		lsr	r3, r3, #24
 2958 02a8 030053E3 		cmp	r3, #3
 2959 02ac 0100000A 		beq	.L183
 2960              		.loc 1 1952 5 discriminator 12
 2961 02b0 0130E0E3 		mvn	r3, #1
 2962              		.loc 1 1952 5
 2963 02b4 9E0000EA 		b	.L167
 2964              	.L183:
 2965              		.loc 1 1952 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 88


 2966 02b8 28301BE5 		ldr	r3, [fp, #-40]
 2967 02bc 7F2003E2 		and	r2, r3, #127
 2968 02c0 10301BE5 		ldr	r3, [fp, #-16]
 2969 02c4 143093E5 		ldr	r3, [r3, #20]
 2970 02c8 030052E1 		cmp	r2, r3
 2971 02cc 0100003A 		bcc	.L184
 2972              		.loc 1 1952 5 discriminator 14
 2973 02d0 0230E0E3 		mvn	r3, #2
 2974              		.loc 1 1952 5
 2975 02d4 960000EA 		b	.L167
 2976              	.L184:
 2977              		.loc 1 1952 5 discriminator 15
 2978 02d8 28301BE5 		ldr	r3, [fp, #-40]
 2979 02dc 7F3003E2 		and	r3, r3, #127
 2980 02e0 8322A0E1 		lsl	r2, r3, #5
 2981 02e4 10301BE5 		ldr	r3, [fp, #-16]
 2982 02e8 0C3093E5 		ldr	r3, [r3, #12]
 2983 02ec 033082E0 		add	r3, r2, r3
 2984 02f0 10300BE5 		str	r3, [fp, #-16]
 2985 02f4 10301BE5 		ldr	r3, [fp, #-16]
 2986 02f8 0300A0E1 		mov	r0, r3
 2987 02fc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2988 0300 14000BE5 		str	r0, [fp, #-20]
 2989              		.loc 1 1952 5 discriminator 1
 2990 0304 14301BE5 		ldr	r3, [fp, #-20]
 2991 0308 FF3803E2 		and	r3, r3, #16711680
 2992 030c 020853E3 		cmp	r3, #131072
 2993 0310 0100001A 		bne	.L185
 2994              		.loc 1 1952 5 discriminator 16
 2995 0314 0830E0E3 		mvn	r3, #8
 2996              		.loc 1 1952 5
 2997 0318 850000EA 		b	.L167
 2998              	.L185:
 2999              		.loc 1 1952 5 discriminator 17
 3000 031c 14301BE5 		ldr	r3, [fp, #-20]
 3001 0320 233CA0E1 		lsr	r3, r3, #24
 3002 0324 020053E3 		cmp	r3, #2
 3003 0328 0100000A 		beq	.L180
 3004              		.loc 1 1952 5 discriminator 18
 3005 032c 0130E0E3 		mvn	r3, #1
 3006              		.loc 1 1952 5
 3007 0330 7F0000EA 		b	.L167
 3008              	.L180:
1953:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
1954:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1955:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 3009              		.loc 1 1955 5 is_stmt 1
 3010 0334 0C301BE5 		ldr	r3, [fp, #-12]
 3011 0338 083093E5 		ldr	r3, [r3, #8]
 3012 033c 013003E2 		and	r3, r3, #1
 3013 0340 000053E3 		cmp	r3, #0
 3014 0344 0100001A 		bne	.L186
 3015              		.loc 1 1955 5 is_stmt 0 discriminator 1
 3016 0348 0630E0E3 		mvn	r3, #6
 3017              		.loc 1 1955 5
 3018 034c 780000EA 		b	.L167
 3019              	.L186:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 89


1956:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
1957:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_CPT,Raddr,Vaddr,RME_CPT_SIZE(Entry_Num));
 3020              		.loc 1 1957 5 is_stmt 1
 3021 0350 10301BE5 		ldr	r3, [fp, #-16]
 3022 0354 083093E5 		ldr	r3, [r3, #8]
 3023 0358 013003E2 		and	r3, r3, #1
 3024 035c 000053E3 		cmp	r3, #0
 3025 0360 0100001A 		bne	.L187
 3026              		.loc 1 1957 5 is_stmt 0 discriminator 1
 3027 0364 0630E0E3 		mvn	r3, #6
 3028              		.loc 1 1957 5
 3029 0368 710000EA 		b	.L167
 3030              	.L187:
 3031              		.loc 1 1957 5 discriminator 2
 3032 036c 10301BE5 		ldr	r3, [fp, #-16]
 3033 0370 143093E5 		ldr	r3, [r3, #20]
 3034 0374 04209BE5 		ldr	r2, [fp, #4]
 3035 0378 033082E0 		add	r3, r2, r3
 3036 037c 18300BE5 		str	r3, [fp, #-24]
 3037 0380 18201BE5 		ldr	r2, [fp, #-24]
 3038 0384 04309BE5 		ldr	r3, [fp, #4]
 3039 0388 030052E1 		cmp	r2, r3
 3040 038c 0100002A 		bcs	.L188
 3041              		.loc 1 1957 5 discriminator 3
 3042 0390 0630E0E3 		mvn	r3, #6
 3043              		.loc 1 1957 5
 3044 0394 660000EA 		b	.L167
 3045              	.L188:
 3046              		.loc 1 1957 5 discriminator 4
 3047 0398 10301BE5 		ldr	r3, [fp, #-16]
 3048 039c 143093E5 		ldr	r3, [r3, #20]
 3049 03a0 18201BE5 		ldr	r2, [fp, #-24]
 3050 03a4 030052E1 		cmp	r2, r3
 3051 03a8 0100002A 		bcs	.L189
 3052              		.loc 1 1957 5 discriminator 5
 3053 03ac 0630E0E3 		mvn	r3, #6
 3054              		.loc 1 1957 5
 3055 03b0 5F0000EA 		b	.L167
 3056              	.L189:
 3057              		.loc 1 1957 5 discriminator 6
 3058 03b4 08309BE5 		ldr	r3, [fp, #8]
 3059 03b8 8322A0E1 		lsl	r2, r3, #5
 3060 03bc 18301BE5 		ldr	r3, [fp, #-24]
 3061 03c0 033082E0 		add	r3, r2, r3
 3062 03c4 18201BE5 		ldr	r2, [fp, #-24]
 3063 03c8 030052E1 		cmp	r2, r3
 3064 03cc 0100009A 		bls	.L190
 3065              		.loc 1 1957 5 discriminator 7
 3066 03d0 0630E0E3 		mvn	r3, #6
 3067              		.loc 1 1957 5
 3068 03d4 560000EA 		b	.L167
 3069              	.L190:
 3070              		.loc 1 1957 5 discriminator 8
 3071 03d8 10301BE5 		ldr	r3, [fp, #-16]
 3072 03dc 182093E5 		ldr	r2, [r3, #24]
 3073 03e0 08309BE5 		ldr	r3, [fp, #8]
 3074 03e4 8312A0E1 		lsl	r1, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 90


 3075 03e8 18301BE5 		ldr	r3, [fp, #-24]
 3076 03ec 033081E0 		add	r3, r1, r3
 3077 03f0 013043E2 		sub	r3, r3, #1
 3078 03f4 030052E1 		cmp	r2, r3
 3079 03f8 0100002A 		bcs	.L191
 3080              		.loc 1 1957 5 discriminator 9
 3081 03fc 0630E0E3 		mvn	r3, #6
 3082              		.loc 1 1957 5
 3083 0400 4B0000EA 		b	.L167
 3084              	.L191:
1958:../../Source/Kernel/rme_kernel.c **** 
1959:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1960:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 3085              		.loc 1 1960 5 is_stmt 1
 3086 0404 0C301BE5 		ldr	r3, [fp, #-12]
 3087 0408 142093E5 		ldr	r2, [r3, #20]
 3088 040c 2C301BE5 		ldr	r3, [fp, #-44]
 3089 0410 030052E1 		cmp	r2, r3
 3090 0414 0100008A 		bhi	.L192
 3091              		.loc 1 1960 5 is_stmt 0 discriminator 1
 3092 0418 0230E0E3 		mvn	r3, #2
 3093              		.loc 1 1960 5
 3094 041c 440000EA 		b	.L167
 3095              	.L192:
 3096              		.loc 1 1960 5 discriminator 2
 3097 0420 2C301BE5 		ldr	r3, [fp, #-44]
 3098 0424 8322A0E1 		lsl	r2, r3, #5
 3099 0428 0C301BE5 		ldr	r3, [fp, #-12]
 3100 042c 0C3093E5 		ldr	r3, [r3, #12]
 3101 0430 033082E0 		add	r3, r2, r3
 3102 0434 1C300BE5 		str	r3, [fp, #-28]
1961:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1962:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 3103              		.loc 1 1962 5 is_stmt 1
 3104 0438 1C301BE5 		ldr	r3, [fp, #-28]
 3105 043c 0128A0E3 		mov	r2, #65536
 3106 0440 0010A0E3 		mov	r1, #0
 3107 0444 0300A0E1 		mov	r0, r3
 3108 0448 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3109 044c 0030A0E1 		mov	r3, r0
 3110              		.loc 1 1962 5 is_stmt 0 discriminator 1
 3111 0450 000053E3 		cmp	r3, #0
 3112 0454 0100001A 		bne	.L193
 3113 0458 0430E0E3 		mvn	r3, #4
 3114              		.loc 1 1962 5
 3115 045c 340000EA 		b	.L167
 3116              	.L193:
 3117              		.loc 1 1962 5 discriminator 2
 3118 0460 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3119 0464 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3120 0468 002093E5 		ldr	r2, [r3]
 3121 046c 1C301BE5 		ldr	r3, [fp, #-28]
 3122 0470 102083E5 		str	r2, [r3, #16]
1963:../../Source/Kernel/rme_kernel.c **** 
1964:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1965:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))<0)
 3123              		.loc 1 1965 8 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 91


 3124 0474 08309BE5 		ldr	r3, [fp, #8]
 3125 0478 8332A0E1 		lsl	r3, r3, #5
 3126 047c 0310A0E1 		mov	r1, r3
 3127 0480 18001BE5 		ldr	r0, [fp, #-24]
 3128 0484 FEFFFFEB 		bl	_RME_Kot_Mark
 3129 0488 0030A0E1 		mov	r3, r0
 3130              		.loc 1 1965 7 discriminator 1
 3131 048c 000053E3 		cmp	r3, #0
 3132 0490 050000AA 		bge	.L194
1966:../../Source/Kernel/rme_kernel.c ****     {
1967:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1968:../../Source/Kernel/rme_kernel.c ****         
1969:../../Source/Kernel/rme_kernel.c ****         /* Failure. Set the Type_Stat back to 0 and abort the creation process */
1970:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 3133              		.loc 1 1970 9
 3134 0494 1C301BE5 		ldr	r3, [fp, #-28]
 3135 0498 0010A0E3 		mov	r1, #0
 3136 049c 0300A0E1 		mov	r0, r3
 3137 04a0 FEFFFFEB 		bl	__RME_A7A_Write_Release
1971:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 3138              		.loc 1 1971 16
 3139 04a4 0330E0E3 		mvn	r3, #3
 3140 04a8 210000EA 		b	.L167
 3141              	.L194:
1972:../../Source/Kernel/rme_kernel.c ****     }
1973:../../Source/Kernel/rme_kernel.c ****     else
1974:../../Source/Kernel/rme_kernel.c ****     {
1975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1976:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1977:../../Source/Kernel/rme_kernel.c ****     }
1978:../../Source/Kernel/rme_kernel.c **** 
1979:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1980:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3142              		.loc 1 1980 14
 3143 04ac 0030A0E3 		mov	r3, #0
 3144 04b0 08300BE5 		str	r3, [fp, #-8]
 3145              		.loc 1 1980 5
 3146 04b4 090000EA 		b	.L195
 3147              	.L196:
1981:../../Source/Kernel/rme_kernel.c ****     {
1982:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 3148              		.loc 1 1982 9
 3149 04b8 08301BE5 		ldr	r3, [fp, #-8]
 3150 04bc 8322A0E1 		lsl	r2, r3, #5
 3151 04c0 18301BE5 		ldr	r3, [fp, #-24]
 3152 04c4 033082E0 		add	r3, r2, r3
 3153 04c8 0320A0E1 		mov	r2, r3
 3154 04cc 0030A0E3 		mov	r3, #0
 3155 04d0 003082E5 		str	r3, [r2]
1980:../../Source/Kernel/rme_kernel.c ****     {
 3156              		.loc 1 1980 39 discriminator 3
 3157 04d4 08301BE5 		ldr	r3, [fp, #-8]
 3158 04d8 013083E2 		add	r3, r3, #1
 3159 04dc 08300BE5 		str	r3, [fp, #-8]
 3160              	.L195:
1980:../../Source/Kernel/rme_kernel.c ****     {
 3161              		.loc 1 1980 23 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 92


 3162 04e0 08201BE5 		ldr	r2, [fp, #-8]
 3163 04e4 08309BE5 		ldr	r3, [fp, #8]
 3164 04e8 030052E1 		cmp	r2, r3
 3165 04ec F1FFFF3A 		bcc	.L196
1983:../../Source/Kernel/rme_kernel.c ****     }
1984:../../Source/Kernel/rme_kernel.c **** 
1985:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1986:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 3166              		.loc 1 1986 27
 3167 04f0 1C301BE5 		ldr	r3, [fp, #-28]
 3168 04f4 0020A0E3 		mov	r2, #0
 3169 04f8 042083E5 		str	r2, [r3, #4]
1987:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 3170              		.loc 1 1987 25
 3171 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 3172 0500 18201BE5 		ldr	r2, [fp, #-24]
 3173 0504 0C2083E5 		str	r2, [r3, #12]
1988:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 3174              		.loc 1 1988 23
 3175 0508 1C301BE5 		ldr	r3, [fp, #-28]
 3176 050c FF20A0E3 		mov	r2, #255
 3177 0510 082083E5 		str	r2, [r3, #8]
1989:../../Source/Kernel/rme_kernel.c ****     
1990:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1991:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 3178              		.loc 1 1991 23
 3179 0514 1C301BE5 		ldr	r3, [fp, #-28]
 3180 0518 08209BE5 		ldr	r2, [fp, #8]
 3181 051c 142083E5 		str	r2, [r3, #20]
1992:../../Source/Kernel/rme_kernel.c **** 
1993:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1994:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 3182              		.loc 1 1994 5
 3183 0520 1C301BE5 		ldr	r3, [fp, #-28]
 3184 0524 0314A0E3 		mov	r1, #50331648
 3185 0528 0300A0E1 		mov	r0, r3
 3186 052c FEFFFFEB 		bl	__RME_A7A_Write_Release
1995:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1996:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1997:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1998:../../Source/Kernel/rme_kernel.c **** 
1999:../../Source/Kernel/rme_kernel.c ****     return 0;
 3187              		.loc 1 1999 12
 3188 0530 0030A0E3 		mov	r3, #0
 3189              	.L167:
2000:../../Source/Kernel/rme_kernel.c **** }
 3190              		.loc 1 2000 1
 3191 0534 0300A0E1 		mov	r0, r3
 3192 0538 04D04BE2 		sub	sp, fp, #4
 3193              		.cfi_def_cfa 13, 8
 3194              		@ sp needed
 3195 053c 0088BDE8 		pop	{fp, pc}
 3196              		.cfi_endproc
 3197              	.LFE24:
 3199              		.section	.rodata
 3200              		.align	2
 3201              	.LC6:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 93


 3202 003c 32323A30 		.ascii	"22:03:26\000"
 3202      333A3236 
 3202      00
 3203 0045 000000   		.align	2
 3204              	.LC7:
 3205 0048 46656220 		.ascii	"Feb 27 2025\000"
 3205      32372032 
 3205      30323500 
 3206              		.align	2
 3207              	.LC8:
 3208 0054 2E2E2F2E 		.ascii	"../../Source/Kernel/rme_kernel.c\000"
 3208      2E2F536F 
 3208      75726365 
 3208      2F4B6572 
 3208      6E656C2F 
 3209              		.section	.text._RME_Cpt_Del,"ax",%progbits
 3210              		.align	2
 3211              		.syntax unified
 3212              		.arm
 3214              	_RME_Cpt_Del:
 3215              	.LFB25:
2001:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Crt *************************************************/
2002:../../Source/Kernel/rme_kernel.c **** 
2003:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Del ******************************************************
2004:../../Source/Kernel/rme_kernel.c **** Description : Delete a layer of capability table.
2005:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2006:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Del - The capability table that contains the
2007:../../Source/Kernel/rme_kernel.c ****                                       cap to captbl.
2008:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2009:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Del - The capability to the capability table to be
2010:../../Source/Kernel/rme_kernel.c ****                                   deleted.
2011:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2012:../../Source/Kernel/rme_kernel.c **** Output      : None.
2013:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2014:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2015:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Del(struct RME_Cap_Cpt* Cpt,
2016:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Del,
2017:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Del)
2018:../../Source/Kernel/rme_kernel.c **** {
 3216              		.loc 1 2018 1
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 48
 3219              		@ frame_needed = 1, uses_anonymous_args = 0
 3220 0000 00482DE9 		push	{fp, lr}
 3221              		.cfi_def_cfa_offset 8
 3222              		.cfi_offset 11, -8
 3223              		.cfi_offset 14, -4
 3224 0004 04B08DE2 		add	fp, sp, #4
 3225              		.cfi_def_cfa 11, 4
 3226 0008 30D04DE2 		sub	sp, sp, #48
 3227 000c 28000BE5 		str	r0, [fp, #-40]
 3228 0010 2C100BE5 		str	r1, [fp, #-44]
 3229 0014 30200BE5 		str	r2, [fp, #-48]
2019:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
2020:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Entry_Num;
2021:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2022:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Del;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 94


2023:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Struct* Table;
2024:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2025:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
2026:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
2027:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
2028:../../Source/Kernel/rme_kernel.c ****     
2029:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2030:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Del,RME_CAP_TYPE_CPT,
 3230              		.loc 1 2030 5
 3231 0018 2C301BE5 		ldr	r3, [fp, #-44]
 3232 001c 803003E2 		and	r3, r3, #128
 3233 0020 000053E3 		cmp	r3, #0
 3234 0024 1C00001A 		bne	.L198
 3235              		.loc 1 2030 5 is_stmt 0 discriminator 1
 3236 0028 28301BE5 		ldr	r3, [fp, #-40]
 3237 002c 142093E5 		ldr	r2, [r3, #20]
 3238 0030 2C301BE5 		ldr	r3, [fp, #-44]
 3239 0034 030052E1 		cmp	r2, r3
 3240 0038 0100008A 		bhi	.L199
 3241              		.loc 1 2030 5 discriminator 3
 3242 003c 0230E0E3 		mvn	r3, #2
 3243              		.loc 1 2030 5
 3244 0040 D40000EA 		b	.L200
 3245              	.L199:
 3246              		.loc 1 2030 5 discriminator 4
 3247 0044 2C301BE5 		ldr	r3, [fp, #-44]
 3248 0048 8322A0E1 		lsl	r2, r3, #5
 3249 004c 28301BE5 		ldr	r3, [fp, #-40]
 3250 0050 0C3093E5 		ldr	r3, [r3, #12]
 3251 0054 033082E0 		add	r3, r2, r3
 3252 0058 0C300BE5 		str	r3, [fp, #-12]
 3253 005c 0C301BE5 		ldr	r3, [fp, #-12]
 3254 0060 0300A0E1 		mov	r0, r3
 3255 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3256 0068 10000BE5 		str	r0, [fp, #-16]
 3257              		.loc 1 2030 5 discriminator 1
 3258 006c 10301BE5 		ldr	r3, [fp, #-16]
 3259 0070 FF3803E2 		and	r3, r3, #16711680
 3260 0074 020853E3 		cmp	r3, #131072
 3261 0078 0100001A 		bne	.L201
 3262              		.loc 1 2030 5 discriminator 5
 3263 007c 0830E0E3 		mvn	r3, #8
 3264              		.loc 1 2030 5
 3265 0080 C40000EA 		b	.L200
 3266              	.L201:
 3267              		.loc 1 2030 5 discriminator 6
 3268 0084 10301BE5 		ldr	r3, [fp, #-16]
 3269 0088 233CA0E1 		lsr	r3, r3, #24
 3270 008c 030053E3 		cmp	r3, #3
 3271 0090 3F00000A 		beq	.L202
 3272              		.loc 1 2030 5 discriminator 7
 3273 0094 0130E0E3 		mvn	r3, #1
 3274              		.loc 1 2030 5
 3275 0098 BE0000EA 		b	.L200
 3276              	.L198:
 3277              		.loc 1 2030 5 discriminator 2
 3278 009c 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 95


 3279 00a0 2324A0E1 		lsr	r2, r3, #8
 3280 00a4 28301BE5 		ldr	r3, [fp, #-40]
 3281 00a8 143093E5 		ldr	r3, [r3, #20]
 3282 00ac 030052E1 		cmp	r2, r3
 3283 00b0 0100003A 		bcc	.L203
 3284              		.loc 1 2030 5 discriminator 8
 3285 00b4 0230E0E3 		mvn	r3, #2
 3286              		.loc 1 2030 5
 3287 00b8 B60000EA 		b	.L200
 3288              	.L203:
 3289              		.loc 1 2030 5 discriminator 9
 3290 00bc 2C301BE5 		ldr	r3, [fp, #-44]
 3291 00c0 2334A0E1 		lsr	r3, r3, #8
 3292 00c4 8322A0E1 		lsl	r2, r3, #5
 3293 00c8 28301BE5 		ldr	r3, [fp, #-40]
 3294 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3295 00d0 033082E0 		add	r3, r2, r3
 3296 00d4 0C300BE5 		str	r3, [fp, #-12]
 3297 00d8 0C301BE5 		ldr	r3, [fp, #-12]
 3298 00dc 0300A0E1 		mov	r0, r3
 3299 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3300 00e4 10000BE5 		str	r0, [fp, #-16]
 3301              		.loc 1 2030 5 discriminator 1
 3302 00e8 10301BE5 		ldr	r3, [fp, #-16]
 3303 00ec FF3803E2 		and	r3, r3, #16711680
 3304 00f0 020853E3 		cmp	r3, #131072
 3305 00f4 0100001A 		bne	.L204
 3306              		.loc 1 2030 5 discriminator 10
 3307 00f8 0830E0E3 		mvn	r3, #8
 3308              		.loc 1 2030 5
 3309 00fc A50000EA 		b	.L200
 3310              	.L204:
 3311              		.loc 1 2030 5 discriminator 11
 3312 0100 10301BE5 		ldr	r3, [fp, #-16]
 3313 0104 233CA0E1 		lsr	r3, r3, #24
 3314 0108 030053E3 		cmp	r3, #3
 3315 010c 0100000A 		beq	.L205
 3316              		.loc 1 2030 5 discriminator 12
 3317 0110 0130E0E3 		mvn	r3, #1
 3318              		.loc 1 2030 5
 3319 0114 9F0000EA 		b	.L200
 3320              	.L205:
 3321              		.loc 1 2030 5 discriminator 13
 3322 0118 2C301BE5 		ldr	r3, [fp, #-44]
 3323 011c 7F2003E2 		and	r2, r3, #127
 3324 0120 0C301BE5 		ldr	r3, [fp, #-12]
 3325 0124 143093E5 		ldr	r3, [r3, #20]
 3326 0128 030052E1 		cmp	r2, r3
 3327 012c 0100003A 		bcc	.L206
 3328              		.loc 1 2030 5 discriminator 14
 3329 0130 0230E0E3 		mvn	r3, #2
 3330              		.loc 1 2030 5
 3331 0134 970000EA 		b	.L200
 3332              	.L206:
 3333              		.loc 1 2030 5 discriminator 15
 3334 0138 2C301BE5 		ldr	r3, [fp, #-44]
 3335 013c 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 96


 3336 0140 8322A0E1 		lsl	r2, r3, #5
 3337 0144 0C301BE5 		ldr	r3, [fp, #-12]
 3338 0148 0C3093E5 		ldr	r3, [r3, #12]
 3339 014c 033082E0 		add	r3, r2, r3
 3340 0150 0C300BE5 		str	r3, [fp, #-12]
 3341 0154 0C301BE5 		ldr	r3, [fp, #-12]
 3342 0158 0300A0E1 		mov	r0, r3
 3343 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3344 0160 10000BE5 		str	r0, [fp, #-16]
 3345              		.loc 1 2030 5 discriminator 1
 3346 0164 10301BE5 		ldr	r3, [fp, #-16]
 3347 0168 FF3803E2 		and	r3, r3, #16711680
 3348 016c 020853E3 		cmp	r3, #131072
 3349 0170 0100001A 		bne	.L207
 3350              		.loc 1 2030 5 discriminator 16
 3351 0174 0830E0E3 		mvn	r3, #8
 3352              		.loc 1 2030 5
 3353 0178 860000EA 		b	.L200
 3354              	.L207:
 3355              		.loc 1 2030 5 discriminator 17
 3356 017c 10301BE5 		ldr	r3, [fp, #-16]
 3357 0180 233CA0E1 		lsr	r3, r3, #24
 3358 0184 030053E3 		cmp	r3, #3
 3359 0188 0100000A 		beq	.L202
 3360              		.loc 1 2030 5 discriminator 18
 3361 018c 0130E0E3 		mvn	r3, #1
 3362              		.loc 1 2030 5
 3363 0190 800000EA 		b	.L200
 3364              	.L202:
2031:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2032:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2033:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 3365              		.loc 1 2033 5 is_stmt 1
 3366 0194 0C301BE5 		ldr	r3, [fp, #-12]
 3367 0198 083093E5 		ldr	r3, [r3, #8]
 3368 019c 023003E2 		and	r3, r3, #2
 3369 01a0 000053E3 		cmp	r3, #0
 3370 01a4 0100001A 		bne	.L208
 3371              		.loc 1 2033 5 is_stmt 0 discriminator 1
 3372 01a8 0630E0E3 		mvn	r3, #6
 3373              		.loc 1 2033 5
 3374 01ac 790000EA 		b	.L200
 3375              	.L208:
2034:../../Source/Kernel/rme_kernel.c ****     
2035:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2036:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Del,struct RME_Cap_Cpt*,Cpt_Del);
 3376              		.loc 1 2036 5 is_stmt 1
 3377 01b0 0C301BE5 		ldr	r3, [fp, #-12]
 3378 01b4 142093E5 		ldr	r2, [r3, #20]
 3379 01b8 30301BE5 		ldr	r3, [fp, #-48]
 3380 01bc 030052E1 		cmp	r2, r3
 3381 01c0 0100008A 		bhi	.L209
 3382              		.loc 1 2036 5 is_stmt 0 discriminator 1
 3383 01c4 0230E0E3 		mvn	r3, #2
 3384              		.loc 1 2036 5
 3385 01c8 720000EA 		b	.L200
 3386              	.L209:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 97


 3387              		.loc 1 2036 5 discriminator 2
 3388 01cc 30301BE5 		ldr	r3, [fp, #-48]
 3389 01d0 8322A0E1 		lsl	r2, r3, #5
 3390 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 3391 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3392 01dc 033082E0 		add	r3, r2, r3
 3393 01e0 14300BE5 		str	r3, [fp, #-20]
2037:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
2038:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Cpt_Del,Type_Stat,RME_CAP_TYPE_CPT);
 3394              		.loc 1 2038 5 is_stmt 1
 3395 01e4 14301BE5 		ldr	r3, [fp, #-20]
 3396 01e8 0300A0E1 		mov	r0, r3
 3397 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3398 01f0 10000BE5 		str	r0, [fp, #-16]
 3399              		.loc 1 2038 5 is_stmt 0 discriminator 1
 3400 01f4 10301BE5 		ldr	r3, [fp, #-16]
 3401 01f8 FF3803E2 		and	r3, r3, #16711680
 3402 01fc 020853E3 		cmp	r3, #131072
 3403 0200 0100000A 		beq	.L210
 3404 0204 0830E0E3 		mvn	r3, #8
 3405              		.loc 1 2038 5
 3406 0208 620000EA 		b	.L200
 3407              	.L210:
 3408              		.loc 1 2038 5 discriminator 2
 3409 020c 10301BE5 		ldr	r3, [fp, #-16]
 3410 0210 233CA0E1 		lsr	r3, r3, #24
 3411 0214 030053E3 		cmp	r3, #3
 3412 0218 0100000A 		beq	.L211
 3413              		.loc 1 2038 5 discriminator 3
 3414 021c 0130E0E3 		mvn	r3, #1
 3415              		.loc 1 2038 5
 3416 0220 5C0000EA 		b	.L200
 3417              	.L211:
 3418              		.loc 1 2038 5 discriminator 6
 3419 0224 14301BE5 		ldr	r3, [fp, #-20]
 3420 0228 043093E5 		ldr	r3, [r3, #4]
 3421 022c 000053E3 		cmp	r3, #0
 3422 0230 0B00000A 		beq	.L212
 3423              		.loc 1 2038 5 discriminator 7
 3424 0234 10301BE5 		ldr	r3, [fp, #-16]
 3425 0238 7330FFE6 		uxth	r3, r3
 3426 023c 000053E3 		cmp	r3, #0
 3427 0240 0500001A 		bne	.L213
 3428              		.loc 1 2038 5 discriminator 9
 3429 0244 14001BE5 		ldr	r0, [fp, #-20]
 3430 0248 10301BE5 		ldr	r3, [fp, #-16]
 3431 024c FF38C3E3 		bic	r3, r3, #16711680
 3432 0250 0320A0E1 		mov	r2, r3
 3433 0254 10101BE5 		ldr	r1, [fp, #-16]
 3434 0258 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3435              	.L213:
 3436              		.loc 1 2038 5 discriminator 11
 3437 025c 0530E0E3 		mvn	r3, #5
 3438              		.loc 1 2038 5
 3439 0260 4C0000EA 		b	.L200
 3440              	.L212:
 3441              		.loc 1 2038 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 98


 3442 0264 10301BE5 		ldr	r3, [fp, #-16]
 3443 0268 7330FFE6 		uxth	r3, r3
 3444 026c 000053E3 		cmp	r3, #0
 3445 0270 0800000A 		beq	.L214
 3446              		.loc 1 2038 5 discriminator 12
 3447 0274 003000E3 		movw	r3, #:lower16:.LC6
 3448 0278 003040E3 		movt	r3, #:upper16:.LC6
 3449 027c 002000E3 		movw	r2, #:lower16:.LC7
 3450 0280 002040E3 		movt	r2, #:upper16:.LC7
 3451 0284 F61700E3 		movw	r1, #2038
 3452 0288 000000E3 		movw	r0, #:lower16:.LC8
 3453 028c 000040E3 		movt	r0, #:upper16:.LC8
 3454 0290 FEFFFFEB 		bl	RME_Log
 3455              	.L215:
 3456              		.loc 1 2038 5
 3457 0294 FEFFFFEA 		b	.L215
 3458              	.L214:
2039:../../Source/Kernel/rme_kernel.c ****     
2040:../../Source/Kernel/rme_kernel.c ****     /* Is there any capability in this capability table? If yes, we cannot destroy it.
2041:../../Source/Kernel/rme_kernel.c ****      * We will check every slot to make sure nothing is there. This is surely,
2042:../../Source/Kernel/rme_kernel.c ****      * predictable but not so perfect. So, if the time of such operations is to be 
2043:../../Source/Kernel/rme_kernel.c ****      * bounded, the user must control the maximum number of entries in the table
2044:../../Source/Kernel/rme_kernel.c ****      * by configuring RME_CPT_ENTRY_MAX to a non-zero value. */
2045:../../Source/Kernel/rme_kernel.c ****     Table=RME_CAP_GETOBJ(Cpt_Del,struct RME_Cap_Struct*);
 3459              		.loc 1 2045 11 is_stmt 1
 3460 0298 14301BE5 		ldr	r3, [fp, #-20]
 3461 029c 0C3093E5 		ldr	r3, [r3, #12]
 3462              		.loc 1 2045 10
 3463 02a0 18300BE5 		str	r3, [fp, #-24]
2046:../../Source/Kernel/rme_kernel.c ****     Entry_Num=Cpt_Del->Entry_Num;
 3464              		.loc 1 2046 14
 3465 02a4 14301BE5 		ldr	r3, [fp, #-20]
 3466 02a8 143093E5 		ldr	r3, [r3, #20]
 3467 02ac 1C300BE5 		str	r3, [fp, #-28]
2047:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3468              		.loc 1 2047 14
 3469 02b0 0030A0E3 		mov	r3, #0
 3470 02b4 08300BE5 		str	r3, [fp, #-8]
 3471              		.loc 1 2047 5
 3472 02b8 110000EA 		b	.L216
 3473              	.L218:
2048:../../Source/Kernel/rme_kernel.c ****     {
2049:../../Source/Kernel/rme_kernel.c ****         if(Table[Count].Head.Type_Stat!=0U)
 3474              		.loc 1 2049 17
 3475 02bc 08301BE5 		ldr	r3, [fp, #-8]
 3476 02c0 8332A0E1 		lsl	r3, r3, #5
 3477 02c4 18201BE5 		ldr	r2, [fp, #-24]
 3478 02c8 033082E0 		add	r3, r2, r3
 3479              		.loc 1 2049 29
 3480 02cc 003093E5 		ldr	r3, [r3]
 3481              		.loc 1 2049 11
 3482 02d0 000053E3 		cmp	r3, #0
 3483 02d4 0700000A 		beq	.L217
2050:../../Source/Kernel/rme_kernel.c ****         {
2051:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2052:../../Source/Kernel/rme_kernel.c ****             
2053:../../Source/Kernel/rme_kernel.c ****             RME_CAP_DEFROST(Cpt_Del,Type_Stat);
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 99


 3484              		.loc 1 2053 13
 3485 02d8 14001BE5 		ldr	r0, [fp, #-20]
 3486 02dc 10301BE5 		ldr	r3, [fp, #-16]
 3487 02e0 FF38C3E3 		bic	r3, r3, #16711680
 3488 02e4 0320A0E1 		mov	r2, r3
 3489 02e8 10101BE5 		ldr	r1, [fp, #-16]
 3490 02ec FEFFFFEB 		bl	_RME_Comp_Swap_Single
2054:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_EXIST;
 3491              		.loc 1 2054 20
 3492 02f0 0430E0E3 		mvn	r3, #4
 3493 02f4 270000EA 		b	.L200
 3494              	.L217:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3495              		.loc 1 2047 39 discriminator 2
 3496 02f8 08301BE5 		ldr	r3, [fp, #-8]
 3497 02fc 013083E2 		add	r3, r3, #1
 3498 0300 08300BE5 		str	r3, [fp, #-8]
 3499              	.L216:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3500              		.loc 1 2047 23 discriminator 1
 3501 0304 08201BE5 		ldr	r2, [fp, #-8]
 3502 0308 1C301BE5 		ldr	r3, [fp, #-28]
 3503 030c 030052E1 		cmp	r2, r3
 3504 0310 E9FFFF3A 		bcc	.L218
2055:../../Source/Kernel/rme_kernel.c ****         }
2056:../../Source/Kernel/rme_kernel.c ****         else
2057:../../Source/Kernel/rme_kernel.c ****         {
2058:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2059:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2060:../../Source/Kernel/rme_kernel.c ****         }
2061:../../Source/Kernel/rme_kernel.c ****     }
2062:../../Source/Kernel/rme_kernel.c ****     
2063:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
2064:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Cpt_Del,rme_ptr_t);
 3505              		.loc 1 2064 11
 3506 0314 14301BE5 		ldr	r3, [fp, #-20]
 3507 0318 0C3093E5 		ldr	r3, [r3, #12]
 3508 031c 20300BE5 		str	r3, [fp, #-32]
2065:../../Source/Kernel/rme_kernel.c ****     Size=RME_CPT_SIZE(Cpt_Del->Entry_Num);
 3509              		.loc 1 2065 10
 3510 0320 14301BE5 		ldr	r3, [fp, #-20]
 3511 0324 143093E5 		ldr	r3, [r3, #20]
 3512              		.loc 1 2065 9
 3513 0328 8332A0E1 		lsl	r3, r3, #5
 3514 032c 24300BE5 		str	r3, [fp, #-36]
2066:../../Source/Kernel/rme_kernel.c **** 
2067:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
2068:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Cpt_Del,Type_Stat);
 3515              		.loc 1 2068 5
 3516 0330 14301BE5 		ldr	r3, [fp, #-20]
 3517 0334 0020A0E3 		mov	r2, #0
 3518 0338 10101BE5 		ldr	r1, [fp, #-16]
 3519 033c 0300A0E1 		mov	r0, r3
 3520 0340 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3521 0344 0030A0E1 		mov	r3, r0
 3522              		.loc 1 2068 5 is_stmt 0 discriminator 1
 3523 0348 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 100


 3524 034c 0100001A 		bne	.L219
 3525 0350 0030E0E3 		mvn	r3, #0
 3526              		.loc 1 2068 5
 3527 0354 0F0000EA 		b	.L200
 3528              	.L219:
2069:../../Source/Kernel/rme_kernel.c **** 
2070:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
2071:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Size)==0);
 3529              		.loc 1 2071 5 is_stmt 1
 3530 0358 24101BE5 		ldr	r1, [fp, #-36]
 3531 035c 20001BE5 		ldr	r0, [fp, #-32]
 3532 0360 FEFFFFEB 		bl	_RME_Kot_Erase
 3533 0364 0030A0E1 		mov	r3, r0
 3534              		.loc 1 2071 5 is_stmt 0 discriminator 1
 3535 0368 000053E3 		cmp	r3, #0
 3536 036c 0800000A 		beq	.L220
 3537 0370 003000E3 		movw	r3, #:lower16:.LC6
 3538 0374 003040E3 		movt	r3, #:upper16:.LC6
 3539 0378 002000E3 		movw	r2, #:lower16:.LC7
 3540 037c 002040E3 		movt	r2, #:upper16:.LC7
 3541 0380 171800E3 		movw	r1, #2071
 3542 0384 000000E3 		movw	r0, #:lower16:.LC8
 3543 0388 000040E3 		movt	r0, #:upper16:.LC8
 3544 038c FEFFFFEB 		bl	RME_Log
 3545              	.L221:
 3546              		.loc 1 2071 5
 3547 0390 FEFFFFEA 		b	.L221
 3548              	.L220:
2072:../../Source/Kernel/rme_kernel.c ****     
2073:../../Source/Kernel/rme_kernel.c ****     return 0;
 3549              		.loc 1 2073 12 is_stmt 1
 3550 0394 0030A0E3 		mov	r3, #0
 3551              	.L200:
2074:../../Source/Kernel/rme_kernel.c **** }
 3552              		.loc 1 2074 1
 3553 0398 0300A0E1 		mov	r0, r3
 3554 039c 04D04BE2 		sub	sp, fp, #4
 3555              		.cfi_def_cfa 13, 8
 3556              		@ sp needed
 3557 03a0 0088BDE8 		pop	{fp, pc}
 3558              		.cfi_endproc
 3559              	.LFE25:
 3561              		.section	.text._RME_Cpt_Frz,"ax",%progbits
 3562              		.align	2
 3563              		.syntax unified
 3564              		.arm
 3566              	_RME_Cpt_Frz:
 3567              	.LFB26:
2075:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Del *************************************************/
2076:../../Source/Kernel/rme_kernel.c **** 
2077:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Frz ******************************************************
2078:../../Source/Kernel/rme_kernel.c **** Description : Freeze a capability in the capability table.
2079:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2080:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Frz  - The capability table containing the cap
2081:../../Source/Kernel/rme_kernel.c ****                                        to captbl for this operation.
2082:../../Source/Kernel/rme_kernel.c ****                                        2-Level.
2083:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Frz - The cap to the kernel object being freezed.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 101


2084:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2085:../../Source/Kernel/rme_kernel.c **** Output      : None.
2086:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2087:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2088:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Frz(struct RME_Cap_Cpt* Cpt,
2089:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Frz,
2090:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Frz)
2091:../../Source/Kernel/rme_kernel.c **** {
 3568              		.loc 1 2091 1
 3569              		.cfi_startproc
 3570              		@ args = 0, pretend = 0, frame = 32
 3571              		@ frame_needed = 1, uses_anonymous_args = 0
 3572 0000 00482DE9 		push	{fp, lr}
 3573              		.cfi_def_cfa_offset 8
 3574              		.cfi_offset 11, -8
 3575              		.cfi_offset 14, -4
 3576 0004 04B08DE2 		add	fp, sp, #4
 3577              		.cfi_def_cfa 11, 4
 3578 0008 20D04DE2 		sub	sp, sp, #32
 3579 000c 18000BE5 		str	r0, [fp, #-24]
 3580 0010 1C100BE5 		str	r1, [fp, #-28]
 3581 0014 20200BE5 		str	r2, [fp, #-32]
2092:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2093:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Frz;
2094:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2095:../../Source/Kernel/rme_kernel.c ****     
2096:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2097:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Frz,RME_CAP_TYPE_CPT,
 3582              		.loc 1 2097 5
 3583 0018 1C301BE5 		ldr	r3, [fp, #-28]
 3584 001c 803003E2 		and	r3, r3, #128
 3585 0020 000053E3 		cmp	r3, #0
 3586 0024 1C00001A 		bne	.L223
 3587              		.loc 1 2097 5 is_stmt 0 discriminator 1
 3588 0028 18301BE5 		ldr	r3, [fp, #-24]
 3589 002c 142093E5 		ldr	r2, [r3, #20]
 3590 0030 1C301BE5 		ldr	r3, [fp, #-28]
 3591 0034 030052E1 		cmp	r2, r3
 3592 0038 0100008A 		bhi	.L224
 3593              		.loc 1 2097 5 discriminator 3
 3594 003c 0230E0E3 		mvn	r3, #2
 3595              		.loc 1 2097 5
 3596 0040 8E0000EA 		b	.L225
 3597              	.L224:
 3598              		.loc 1 2097 5 discriminator 4
 3599 0044 1C301BE5 		ldr	r3, [fp, #-28]
 3600 0048 8322A0E1 		lsl	r2, r3, #5
 3601 004c 18301BE5 		ldr	r3, [fp, #-24]
 3602 0050 0C3093E5 		ldr	r3, [r3, #12]
 3603 0054 033082E0 		add	r3, r2, r3
 3604 0058 08300BE5 		str	r3, [fp, #-8]
 3605 005c 08301BE5 		ldr	r3, [fp, #-8]
 3606 0060 0300A0E1 		mov	r0, r3
 3607 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3608 0068 0C000BE5 		str	r0, [fp, #-12]
 3609              		.loc 1 2097 5 discriminator 1
 3610 006c 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 102


 3611 0070 FF3803E2 		and	r3, r3, #16711680
 3612 0074 020853E3 		cmp	r3, #131072
 3613 0078 0100001A 		bne	.L226
 3614              		.loc 1 2097 5 discriminator 5
 3615 007c 0830E0E3 		mvn	r3, #8
 3616              		.loc 1 2097 5
 3617 0080 7E0000EA 		b	.L225
 3618              	.L226:
 3619              		.loc 1 2097 5 discriminator 6
 3620 0084 0C301BE5 		ldr	r3, [fp, #-12]
 3621 0088 233CA0E1 		lsr	r3, r3, #24
 3622 008c 030053E3 		cmp	r3, #3
 3623 0090 3F00000A 		beq	.L227
 3624              		.loc 1 2097 5 discriminator 7
 3625 0094 0130E0E3 		mvn	r3, #1
 3626              		.loc 1 2097 5
 3627 0098 780000EA 		b	.L225
 3628              	.L223:
 3629              		.loc 1 2097 5 discriminator 2
 3630 009c 1C301BE5 		ldr	r3, [fp, #-28]
 3631 00a0 2324A0E1 		lsr	r2, r3, #8
 3632 00a4 18301BE5 		ldr	r3, [fp, #-24]
 3633 00a8 143093E5 		ldr	r3, [r3, #20]
 3634 00ac 030052E1 		cmp	r2, r3
 3635 00b0 0100003A 		bcc	.L228
 3636              		.loc 1 2097 5 discriminator 8
 3637 00b4 0230E0E3 		mvn	r3, #2
 3638              		.loc 1 2097 5
 3639 00b8 700000EA 		b	.L225
 3640              	.L228:
 3641              		.loc 1 2097 5 discriminator 9
 3642 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 3643 00c0 2334A0E1 		lsr	r3, r3, #8
 3644 00c4 8322A0E1 		lsl	r2, r3, #5
 3645 00c8 18301BE5 		ldr	r3, [fp, #-24]
 3646 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3647 00d0 033082E0 		add	r3, r2, r3
 3648 00d4 08300BE5 		str	r3, [fp, #-8]
 3649 00d8 08301BE5 		ldr	r3, [fp, #-8]
 3650 00dc 0300A0E1 		mov	r0, r3
 3651 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3652 00e4 0C000BE5 		str	r0, [fp, #-12]
 3653              		.loc 1 2097 5 discriminator 1
 3654 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 3655 00ec FF3803E2 		and	r3, r3, #16711680
 3656 00f0 020853E3 		cmp	r3, #131072
 3657 00f4 0100001A 		bne	.L229
 3658              		.loc 1 2097 5 discriminator 10
 3659 00f8 0830E0E3 		mvn	r3, #8
 3660              		.loc 1 2097 5
 3661 00fc 5F0000EA 		b	.L225
 3662              	.L229:
 3663              		.loc 1 2097 5 discriminator 11
 3664 0100 0C301BE5 		ldr	r3, [fp, #-12]
 3665 0104 233CA0E1 		lsr	r3, r3, #24
 3666 0108 030053E3 		cmp	r3, #3
 3667 010c 0100000A 		beq	.L230
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 103


 3668              		.loc 1 2097 5 discriminator 12
 3669 0110 0130E0E3 		mvn	r3, #1
 3670              		.loc 1 2097 5
 3671 0114 590000EA 		b	.L225
 3672              	.L230:
 3673              		.loc 1 2097 5 discriminator 13
 3674 0118 1C301BE5 		ldr	r3, [fp, #-28]
 3675 011c 7F2003E2 		and	r2, r3, #127
 3676 0120 08301BE5 		ldr	r3, [fp, #-8]
 3677 0124 143093E5 		ldr	r3, [r3, #20]
 3678 0128 030052E1 		cmp	r2, r3
 3679 012c 0100003A 		bcc	.L231
 3680              		.loc 1 2097 5 discriminator 14
 3681 0130 0230E0E3 		mvn	r3, #2
 3682              		.loc 1 2097 5
 3683 0134 510000EA 		b	.L225
 3684              	.L231:
 3685              		.loc 1 2097 5 discriminator 15
 3686 0138 1C301BE5 		ldr	r3, [fp, #-28]
 3687 013c 7F3003E2 		and	r3, r3, #127
 3688 0140 8322A0E1 		lsl	r2, r3, #5
 3689 0144 08301BE5 		ldr	r3, [fp, #-8]
 3690 0148 0C3093E5 		ldr	r3, [r3, #12]
 3691 014c 033082E0 		add	r3, r2, r3
 3692 0150 08300BE5 		str	r3, [fp, #-8]
 3693 0154 08301BE5 		ldr	r3, [fp, #-8]
 3694 0158 0300A0E1 		mov	r0, r3
 3695 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3696 0160 0C000BE5 		str	r0, [fp, #-12]
 3697              		.loc 1 2097 5 discriminator 1
 3698 0164 0C301BE5 		ldr	r3, [fp, #-12]
 3699 0168 FF3803E2 		and	r3, r3, #16711680
 3700 016c 020853E3 		cmp	r3, #131072
 3701 0170 0100001A 		bne	.L232
 3702              		.loc 1 2097 5 discriminator 16
 3703 0174 0830E0E3 		mvn	r3, #8
 3704              		.loc 1 2097 5
 3705 0178 400000EA 		b	.L225
 3706              	.L232:
 3707              		.loc 1 2097 5 discriminator 17
 3708 017c 0C301BE5 		ldr	r3, [fp, #-12]
 3709 0180 233CA0E1 		lsr	r3, r3, #24
 3710 0184 030053E3 		cmp	r3, #3
 3711 0188 0100000A 		beq	.L227
 3712              		.loc 1 2097 5 discriminator 18
 3713 018c 0130E0E3 		mvn	r3, #1
 3714              		.loc 1 2097 5
 3715 0190 3A0000EA 		b	.L225
 3716              	.L227:
2098:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2099:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2100:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_FRZ);
 3717              		.loc 1 2100 5 is_stmt 1
 3718 0194 08301BE5 		ldr	r3, [fp, #-8]
 3719 0198 083093E5 		ldr	r3, [r3, #8]
 3720 019c 043003E2 		and	r3, r3, #4
 3721 01a0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 104


 3722 01a4 0100001A 		bne	.L233
 3723              		.loc 1 2100 5 is_stmt 0 discriminator 1
 3724 01a8 0630E0E3 		mvn	r3, #6
 3725              		.loc 1 2100 5
 3726 01ac 330000EA 		b	.L225
 3727              	.L233:
2101:../../Source/Kernel/rme_kernel.c ****     
2102:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2103:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Frz,struct RME_Cap_Struct*,Capobj_Frz);
 3728              		.loc 1 2103 5 is_stmt 1
 3729 01b0 08301BE5 		ldr	r3, [fp, #-8]
 3730 01b4 142093E5 		ldr	r2, [r3, #20]
 3731 01b8 20301BE5 		ldr	r3, [fp, #-32]
 3732 01bc 030052E1 		cmp	r2, r3
 3733 01c0 0100008A 		bhi	.L234
 3734              		.loc 1 2103 5 is_stmt 0 discriminator 1
 3735 01c4 0230E0E3 		mvn	r3, #2
 3736              		.loc 1 2103 5
 3737 01c8 2C0000EA 		b	.L225
 3738              	.L234:
 3739              		.loc 1 2103 5 discriminator 2
 3740 01cc 20301BE5 		ldr	r3, [fp, #-32]
 3741 01d0 8322A0E1 		lsl	r2, r3, #5
 3742 01d4 08301BE5 		ldr	r3, [fp, #-8]
 3743 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3744 01dc 033082E0 		add	r3, r2, r3
 3745 01e0 10300BE5 		str	r3, [fp, #-16]
2104:../../Source/Kernel/rme_kernel.c ****     
2105:../../Source/Kernel/rme_kernel.c ****     /* Check if anything is there. If nothing there, the Type_Stat must be 0. 
2106:../../Source/Kernel/rme_kernel.c ****      * Need a read acquire barrier here to avoid stale reads below. */
2107:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Frz->Head.Type_Stat));
 3746              		.loc 1 2107 15 is_stmt 1
 3747 01e4 10301BE5 		ldr	r3, [fp, #-16]
 3748 01e8 0300A0E1 		mov	r0, r3
 3749 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3750 01f0 0C000BE5 		str	r0, [fp, #-12]
2108:../../Source/Kernel/rme_kernel.c ****     /* See if there is a cap */
2109:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_TYPE(Type_Stat)==RME_CAP_TYPE_NOP)
 3751              		.loc 1 2109 8
 3752 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 3753 01f8 233CA0E1 		lsr	r3, r3, #24
 3754              		.loc 1 2109 7
 3755 01fc 000053E3 		cmp	r3, #0
 3756 0200 0100001A 		bne	.L235
2110:../../Source/Kernel/rme_kernel.c ****     {
2111:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2112:../../Source/Kernel/rme_kernel.c ****         
2113:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 3757              		.loc 1 2113 16
 3758 0204 0030E0E3 		mvn	r3, #0
 3759 0208 1C0000EA 		b	.L225
 3760              	.L235:
2114:../../Source/Kernel/rme_kernel.c ****     }
2115:../../Source/Kernel/rme_kernel.c ****     else
2116:../../Source/Kernel/rme_kernel.c ****     {
2117:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2118:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 105


2119:../../Source/Kernel/rme_kernel.c ****     }
2120:../../Source/Kernel/rme_kernel.c ****     
2121:../../Source/Kernel/rme_kernel.c ****     /* If this is a root capability, check if the reference count allows freezing */
2122:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_ATTR(Type_Stat)==RME_CAP_ATTR_ROOT)
 3761              		.loc 1 2122 8
 3762 020c 0C301BE5 		ldr	r3, [fp, #-12]
 3763 0210 7330FFE6 		uxth	r3, r3
 3764              		.loc 1 2122 7
 3765 0214 000053E3 		cmp	r3, #0
 3766 0218 0500001A 		bne	.L236
2123:../../Source/Kernel/rme_kernel.c ****     {
2124:../../Source/Kernel/rme_kernel.c ****         if(Capobj_Frz->Head.Root_Ref!=0U)
 3767              		.loc 1 2124 28
 3768 021c 10301BE5 		ldr	r3, [fp, #-16]
 3769 0220 043093E5 		ldr	r3, [r3, #4]
 3770              		.loc 1 2124 11
 3771 0224 000053E3 		cmp	r3, #0
 3772 0228 0100000A 		beq	.L236
2125:../../Source/Kernel/rme_kernel.c ****         {
2126:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2127:../../Source/Kernel/rme_kernel.c ****             
2128:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_REFCNT;
 3773              		.loc 1 2128 20
 3774 022c 0530E0E3 		mvn	r3, #5
 3775 0230 120000EA 		b	.L225
 3776              	.L236:
2129:../../Source/Kernel/rme_kernel.c ****         }
2130:../../Source/Kernel/rme_kernel.c ****         else
2131:../../Source/Kernel/rme_kernel.c ****         {
2132:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2133:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2134:../../Source/Kernel/rme_kernel.c ****         }
2135:../../Source/Kernel/rme_kernel.c ****     }
2136:../../Source/Kernel/rme_kernel.c ****     else
2137:../../Source/Kernel/rme_kernel.c ****     {
2138:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2139:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2140:../../Source/Kernel/rme_kernel.c ****     }
2141:../../Source/Kernel/rme_kernel.c ****     
2142:../../Source/Kernel/rme_kernel.c ****     /* The capability is already frozen - why do it again? */
2143:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 3777              		.loc 1 2143 31
 3778 0234 0C301BE5 		ldr	r3, [fp, #-12]
 3779 0238 FF3803E2 		and	r3, r3, #16711680
 3780              		.loc 1 2143 7
 3781 023c 020853E3 		cmp	r3, #131072
 3782 0240 0100001A 		bne	.L237
2144:../../Source/Kernel/rme_kernel.c ****     {
2145:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2146:../../Source/Kernel/rme_kernel.c ****         
2147:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 3783              		.loc 1 2147 16
 3784 0244 0830E0E3 		mvn	r3, #8
 3785 0248 0C0000EA 		b	.L225
 3786              	.L237:
2148:../../Source/Kernel/rme_kernel.c ****     }
2149:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 106


2150:../../Source/Kernel/rme_kernel.c ****     {
2151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2152:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2153:../../Source/Kernel/rme_kernel.c ****     }
2154:../../Source/Kernel/rme_kernel.c ****     
2155:../../Source/Kernel/rme_kernel.c ****     /* See if the slot is quiescent */
2156:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_CAP_QUIE(Capobj_Frz->Head.Timestamp)==0U))
2157:../../Source/Kernel/rme_kernel.c ****     {
2158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2159:../../Source/Kernel/rme_kernel.c ****         
2160:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_QUIE;
2161:../../Source/Kernel/rme_kernel.c ****     }
2162:../../Source/Kernel/rme_kernel.c ****     else
2163:../../Source/Kernel/rme_kernel.c ****     {
2164:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2165:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2166:../../Source/Kernel/rme_kernel.c ****     }
2167:../../Source/Kernel/rme_kernel.c **** 
2168:../../Source/Kernel/rme_kernel.c ****     /* Update the timestamp */
2169:../../Source/Kernel/rme_kernel.c ****     Capobj_Frz->Head.Timestamp=RME_TIMESTAMP;
 3787              		.loc 1 2169 31
 3788 024c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3789 0250 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3790 0254 002093E5 		ldr	r2, [r3]
 3791 0258 10301BE5 		ldr	r3, [fp, #-16]
 3792 025c 102083E5 		str	r2, [r3, #16]
2170:../../Source/Kernel/rme_kernel.c ****     
2171:../../Source/Kernel/rme_kernel.c ****     /* Finally, freeze it. We do not report error here because if we CASFAIL someone must have help
2172:../../Source/Kernel/rme_kernel.c ****     RME_COMP_SWAP(&(Capobj_Frz->Head.Type_Stat),Type_Stat,
 3793              		.loc 1 2172 5
 3794 0260 10001BE5 		ldr	r0, [fp, #-16]
 3795 0264 0C301BE5 		ldr	r3, [fp, #-12]
 3796 0268 FF38C3E3 		bic	r3, r3, #16711680
 3797 026c 023883E3 		orr	r3, r3, #131072
 3798 0270 0320A0E1 		mov	r2, r3
 3799 0274 0C101BE5 		ldr	r1, [fp, #-12]
 3800 0278 FEFFFFEB 		bl	_RME_Comp_Swap_Single
2173:../../Source/Kernel/rme_kernel.c ****                   RME_CAP_TYPE_STAT(RME_CAP_TYPE(Type_Stat),
2174:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_STAT_FROZEN,
2175:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_ATTR(Type_Stat)));
2176:../../Source/Kernel/rme_kernel.c **** 
2177:../../Source/Kernel/rme_kernel.c ****     return 0;
 3801              		.loc 1 2177 12
 3802 027c 0030A0E3 		mov	r3, #0
 3803              	.L225:
2178:../../Source/Kernel/rme_kernel.c **** }
 3804              		.loc 1 2178 1
 3805 0280 0300A0E1 		mov	r0, r3
 3806 0284 04D04BE2 		sub	sp, fp, #4
 3807              		.cfi_def_cfa 13, 8
 3808              		@ sp needed
 3809 0288 0088BDE8 		pop	{fp, pc}
 3810              		.cfi_endproc
 3811              	.LFE26:
 3813              		.section	.text._RME_Cpt_Add,"ax",%progbits
 3814              		.align	2
 3815              		.syntax unified
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 107


 3816              		.arm
 3818              	_RME_Cpt_Add:
 3819              	.LFB27:
2179:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Frz *************************************************/
2180:../../Source/Kernel/rme_kernel.c **** 
2181:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Add ******************************************************
2182:../../Source/Kernel/rme_kernel.c **** Description : Delegate capability from one capability table to another.
2183:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2184:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Dst - The capability to the destination 
2185:../../Source/Kernel/rme_kernel.c ****                                       capability table.
2186:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2187:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Dst - The capability slot you want to add to.
2188:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2189:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Src - The capability to the source capability
2190:../../Source/Kernel/rme_kernel.c ****                                       table.
2191:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2192:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Src - The capability in the source capability table
2193:../../Source/Kernel/rme_kernel.c ****                                   to delegate.
2194:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2195:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the capability.
2196:../../Source/Kernel/rme_kernel.c **** Output      : None.
2197:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2198:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2199:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Add(struct RME_Cap_Cpt* Cpt,
2200:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Dst,
2201:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Dst, 
2202:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Src,
2203:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Src,
2204:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag,
2205:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Ext_Flag)
2206:../../Source/Kernel/rme_kernel.c **** {
 3820              		.loc 1 2206 1
 3821              		.cfi_startproc
 3822              		@ args = 12, pretend = 0, frame = 56
 3823              		@ frame_needed = 1, uses_anonymous_args = 0
 3824 0000 00482DE9 		push	{fp, lr}
 3825              		.cfi_def_cfa_offset 8
 3826              		.cfi_offset 11, -8
 3827              		.cfi_offset 14, -4
 3828 0004 04B08DE2 		add	fp, sp, #4
 3829              		.cfi_def_cfa 11, 4
 3830 0008 38D04DE2 		sub	sp, sp, #56
 3831 000c 30000BE5 		str	r0, [fp, #-48]
 3832 0010 34100BE5 		str	r1, [fp, #-52]
 3833 0014 38200BE5 		str	r2, [fp, #-56]
 3834 0018 3C300BE5 		str	r3, [fp, #-60]
2207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Dst;
2208:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Src;
2209:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Dst;
2210:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Src;
2211:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2212:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Src_Type;
2213:../../Source/Kernel/rme_kernel.c ****     
2214:../../Source/Kernel/rme_kernel.c ****     /* These variables are only used for kernel memory checks */
2215:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
2216:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
2217:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Flag;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 108


2218:../../Source/Kernel/rme_kernel.c **** 
2219:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2220:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Dst,RME_CAP_TYPE_CPT,
 3835              		.loc 1 2220 5
 3836 001c 34301BE5 		ldr	r3, [fp, #-52]
 3837 0020 803003E2 		and	r3, r3, #128
 3838 0024 000053E3 		cmp	r3, #0
 3839 0028 1C00001A 		bne	.L239
 3840              		.loc 1 2220 5 is_stmt 0 discriminator 1
 3841 002c 30301BE5 		ldr	r3, [fp, #-48]
 3842 0030 142093E5 		ldr	r2, [r3, #20]
 3843 0034 34301BE5 		ldr	r3, [fp, #-52]
 3844 0038 030052E1 		cmp	r2, r3
 3845 003c 0100008A 		bhi	.L240
 3846              		.loc 1 2220 5 discriminator 3
 3847 0040 0230E0E3 		mvn	r3, #2
 3848              		.loc 1 2220 5
 3849 0044 020200EA 		b	.L241
 3850              	.L240:
 3851              		.loc 1 2220 5 discriminator 4
 3852 0048 34301BE5 		ldr	r3, [fp, #-52]
 3853 004c 8322A0E1 		lsl	r2, r3, #5
 3854 0050 30301BE5 		ldr	r3, [fp, #-48]
 3855 0054 0C3093E5 		ldr	r3, [r3, #12]
 3856 0058 033082E0 		add	r3, r2, r3
 3857 005c 08300BE5 		str	r3, [fp, #-8]
 3858 0060 08301BE5 		ldr	r3, [fp, #-8]
 3859 0064 0300A0E1 		mov	r0, r3
 3860 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3861 006c 1C000BE5 		str	r0, [fp, #-28]
 3862              		.loc 1 2220 5 discriminator 1
 3863 0070 1C301BE5 		ldr	r3, [fp, #-28]
 3864 0074 FF3803E2 		and	r3, r3, #16711680
 3865 0078 020853E3 		cmp	r3, #131072
 3866 007c 0100001A 		bne	.L242
 3867              		.loc 1 2220 5 discriminator 5
 3868 0080 0830E0E3 		mvn	r3, #8
 3869              		.loc 1 2220 5
 3870 0084 F20100EA 		b	.L241
 3871              	.L242:
 3872              		.loc 1 2220 5 discriminator 6
 3873 0088 1C301BE5 		ldr	r3, [fp, #-28]
 3874 008c 233CA0E1 		lsr	r3, r3, #24
 3875 0090 030053E3 		cmp	r3, #3
 3876 0094 3F00000A 		beq	.L243
 3877              		.loc 1 2220 5 discriminator 7
 3878 0098 0130E0E3 		mvn	r3, #1
 3879              		.loc 1 2220 5
 3880 009c EC0100EA 		b	.L241
 3881              	.L239:
 3882              		.loc 1 2220 5 discriminator 2
 3883 00a0 34301BE5 		ldr	r3, [fp, #-52]
 3884 00a4 2324A0E1 		lsr	r2, r3, #8
 3885 00a8 30301BE5 		ldr	r3, [fp, #-48]
 3886 00ac 143093E5 		ldr	r3, [r3, #20]
 3887 00b0 030052E1 		cmp	r2, r3
 3888 00b4 0100003A 		bcc	.L244
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 109


 3889              		.loc 1 2220 5 discriminator 8
 3890 00b8 0230E0E3 		mvn	r3, #2
 3891              		.loc 1 2220 5
 3892 00bc E40100EA 		b	.L241
 3893              	.L244:
 3894              		.loc 1 2220 5 discriminator 9
 3895 00c0 34301BE5 		ldr	r3, [fp, #-52]
 3896 00c4 2334A0E1 		lsr	r3, r3, #8
 3897 00c8 8322A0E1 		lsl	r2, r3, #5
 3898 00cc 30301BE5 		ldr	r3, [fp, #-48]
 3899 00d0 0C3093E5 		ldr	r3, [r3, #12]
 3900 00d4 033082E0 		add	r3, r2, r3
 3901 00d8 08300BE5 		str	r3, [fp, #-8]
 3902 00dc 08301BE5 		ldr	r3, [fp, #-8]
 3903 00e0 0300A0E1 		mov	r0, r3
 3904 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3905 00e8 1C000BE5 		str	r0, [fp, #-28]
 3906              		.loc 1 2220 5 discriminator 1
 3907 00ec 1C301BE5 		ldr	r3, [fp, #-28]
 3908 00f0 FF3803E2 		and	r3, r3, #16711680
 3909 00f4 020853E3 		cmp	r3, #131072
 3910 00f8 0100001A 		bne	.L245
 3911              		.loc 1 2220 5 discriminator 10
 3912 00fc 0830E0E3 		mvn	r3, #8
 3913              		.loc 1 2220 5
 3914 0100 D30100EA 		b	.L241
 3915              	.L245:
 3916              		.loc 1 2220 5 discriminator 11
 3917 0104 1C301BE5 		ldr	r3, [fp, #-28]
 3918 0108 233CA0E1 		lsr	r3, r3, #24
 3919 010c 030053E3 		cmp	r3, #3
 3920 0110 0100000A 		beq	.L246
 3921              		.loc 1 2220 5 discriminator 12
 3922 0114 0130E0E3 		mvn	r3, #1
 3923              		.loc 1 2220 5
 3924 0118 CD0100EA 		b	.L241
 3925              	.L246:
 3926              		.loc 1 2220 5 discriminator 13
 3927 011c 34301BE5 		ldr	r3, [fp, #-52]
 3928 0120 7F2003E2 		and	r2, r3, #127
 3929 0124 08301BE5 		ldr	r3, [fp, #-8]
 3930 0128 143093E5 		ldr	r3, [r3, #20]
 3931 012c 030052E1 		cmp	r2, r3
 3932 0130 0100003A 		bcc	.L247
 3933              		.loc 1 2220 5 discriminator 14
 3934 0134 0230E0E3 		mvn	r3, #2
 3935              		.loc 1 2220 5
 3936 0138 C50100EA 		b	.L241
 3937              	.L247:
 3938              		.loc 1 2220 5 discriminator 15
 3939 013c 34301BE5 		ldr	r3, [fp, #-52]
 3940 0140 7F3003E2 		and	r3, r3, #127
 3941 0144 8322A0E1 		lsl	r2, r3, #5
 3942 0148 08301BE5 		ldr	r3, [fp, #-8]
 3943 014c 0C3093E5 		ldr	r3, [r3, #12]
 3944 0150 033082E0 		add	r3, r2, r3
 3945 0154 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 110


 3946 0158 08301BE5 		ldr	r3, [fp, #-8]
 3947 015c 0300A0E1 		mov	r0, r3
 3948 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3949 0164 1C000BE5 		str	r0, [fp, #-28]
 3950              		.loc 1 2220 5 discriminator 1
 3951 0168 1C301BE5 		ldr	r3, [fp, #-28]
 3952 016c FF3803E2 		and	r3, r3, #16711680
 3953 0170 020853E3 		cmp	r3, #131072
 3954 0174 0100001A 		bne	.L248
 3955              		.loc 1 2220 5 discriminator 16
 3956 0178 0830E0E3 		mvn	r3, #8
 3957              		.loc 1 2220 5
 3958 017c B40100EA 		b	.L241
 3959              	.L248:
 3960              		.loc 1 2220 5 discriminator 17
 3961 0180 1C301BE5 		ldr	r3, [fp, #-28]
 3962 0184 233CA0E1 		lsr	r3, r3, #24
 3963 0188 030053E3 		cmp	r3, #3
 3964 018c 0100000A 		beq	.L243
 3965              		.loc 1 2220 5 discriminator 18
 3966 0190 0130E0E3 		mvn	r3, #1
 3967              		.loc 1 2220 5
 3968 0194 AE0100EA 		b	.L241
 3969              	.L243:
2221:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Dst,Type_Stat);
2222:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Src,RME_CAP_TYPE_CPT,
 3970              		.loc 1 2222 5 is_stmt 1
 3971 0198 3C301BE5 		ldr	r3, [fp, #-60]
 3972 019c 803003E2 		and	r3, r3, #128
 3973 01a0 000053E3 		cmp	r3, #0
 3974 01a4 1C00001A 		bne	.L249
 3975              		.loc 1 2222 5 is_stmt 0 discriminator 1
 3976 01a8 30301BE5 		ldr	r3, [fp, #-48]
 3977 01ac 142093E5 		ldr	r2, [r3, #20]
 3978 01b0 3C301BE5 		ldr	r3, [fp, #-60]
 3979 01b4 030052E1 		cmp	r2, r3
 3980 01b8 0100008A 		bhi	.L250
 3981              		.loc 1 2222 5 discriminator 3
 3982 01bc 0230E0E3 		mvn	r3, #2
 3983              		.loc 1 2222 5
 3984 01c0 A30100EA 		b	.L241
 3985              	.L250:
 3986              		.loc 1 2222 5 discriminator 4
 3987 01c4 3C301BE5 		ldr	r3, [fp, #-60]
 3988 01c8 8322A0E1 		lsl	r2, r3, #5
 3989 01cc 30301BE5 		ldr	r3, [fp, #-48]
 3990 01d0 0C3093E5 		ldr	r3, [r3, #12]
 3991 01d4 033082E0 		add	r3, r2, r3
 3992 01d8 0C300BE5 		str	r3, [fp, #-12]
 3993 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 3994 01e0 0300A0E1 		mov	r0, r3
 3995 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3996 01e8 1C000BE5 		str	r0, [fp, #-28]
 3997              		.loc 1 2222 5 discriminator 1
 3998 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 3999 01f0 FF3803E2 		and	r3, r3, #16711680
 4000 01f4 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 111


 4001 01f8 0100001A 		bne	.L251
 4002              		.loc 1 2222 5 discriminator 5
 4003 01fc 0830E0E3 		mvn	r3, #8
 4004              		.loc 1 2222 5
 4005 0200 930100EA 		b	.L241
 4006              	.L251:
 4007              		.loc 1 2222 5 discriminator 6
 4008 0204 1C301BE5 		ldr	r3, [fp, #-28]
 4009 0208 233CA0E1 		lsr	r3, r3, #24
 4010 020c 030053E3 		cmp	r3, #3
 4011 0210 3F00000A 		beq	.L252
 4012              		.loc 1 2222 5 discriminator 7
 4013 0214 0130E0E3 		mvn	r3, #1
 4014              		.loc 1 2222 5
 4015 0218 8D0100EA 		b	.L241
 4016              	.L249:
 4017              		.loc 1 2222 5 discriminator 2
 4018 021c 3C301BE5 		ldr	r3, [fp, #-60]
 4019 0220 2324A0E1 		lsr	r2, r3, #8
 4020 0224 30301BE5 		ldr	r3, [fp, #-48]
 4021 0228 143093E5 		ldr	r3, [r3, #20]
 4022 022c 030052E1 		cmp	r2, r3
 4023 0230 0100003A 		bcc	.L253
 4024              		.loc 1 2222 5 discriminator 8
 4025 0234 0230E0E3 		mvn	r3, #2
 4026              		.loc 1 2222 5
 4027 0238 850100EA 		b	.L241
 4028              	.L253:
 4029              		.loc 1 2222 5 discriminator 9
 4030 023c 3C301BE5 		ldr	r3, [fp, #-60]
 4031 0240 2334A0E1 		lsr	r3, r3, #8
 4032 0244 8322A0E1 		lsl	r2, r3, #5
 4033 0248 30301BE5 		ldr	r3, [fp, #-48]
 4034 024c 0C3093E5 		ldr	r3, [r3, #12]
 4035 0250 033082E0 		add	r3, r2, r3
 4036 0254 0C300BE5 		str	r3, [fp, #-12]
 4037 0258 0C301BE5 		ldr	r3, [fp, #-12]
 4038 025c 0300A0E1 		mov	r0, r3
 4039 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4040 0264 1C000BE5 		str	r0, [fp, #-28]
 4041              		.loc 1 2222 5 discriminator 1
 4042 0268 1C301BE5 		ldr	r3, [fp, #-28]
 4043 026c FF3803E2 		and	r3, r3, #16711680
 4044 0270 020853E3 		cmp	r3, #131072
 4045 0274 0100001A 		bne	.L254
 4046              		.loc 1 2222 5 discriminator 10
 4047 0278 0830E0E3 		mvn	r3, #8
 4048              		.loc 1 2222 5
 4049 027c 740100EA 		b	.L241
 4050              	.L254:
 4051              		.loc 1 2222 5 discriminator 11
 4052 0280 1C301BE5 		ldr	r3, [fp, #-28]
 4053 0284 233CA0E1 		lsr	r3, r3, #24
 4054 0288 030053E3 		cmp	r3, #3
 4055 028c 0100000A 		beq	.L255
 4056              		.loc 1 2222 5 discriminator 12
 4057 0290 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 112


 4058              		.loc 1 2222 5
 4059 0294 6E0100EA 		b	.L241
 4060              	.L255:
 4061              		.loc 1 2222 5 discriminator 13
 4062 0298 3C301BE5 		ldr	r3, [fp, #-60]
 4063 029c 7F2003E2 		and	r2, r3, #127
 4064 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 4065 02a4 143093E5 		ldr	r3, [r3, #20]
 4066 02a8 030052E1 		cmp	r2, r3
 4067 02ac 0100003A 		bcc	.L256
 4068              		.loc 1 2222 5 discriminator 14
 4069 02b0 0230E0E3 		mvn	r3, #2
 4070              		.loc 1 2222 5
 4071 02b4 660100EA 		b	.L241
 4072              	.L256:
 4073              		.loc 1 2222 5 discriminator 15
 4074 02b8 3C301BE5 		ldr	r3, [fp, #-60]
 4075 02bc 7F3003E2 		and	r3, r3, #127
 4076 02c0 8322A0E1 		lsl	r2, r3, #5
 4077 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 4078 02c8 0C3093E5 		ldr	r3, [r3, #12]
 4079 02cc 033082E0 		add	r3, r2, r3
 4080 02d0 0C300BE5 		str	r3, [fp, #-12]
 4081 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 4082 02d8 0300A0E1 		mov	r0, r3
 4083 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4084 02e0 1C000BE5 		str	r0, [fp, #-28]
 4085              		.loc 1 2222 5 discriminator 1
 4086 02e4 1C301BE5 		ldr	r3, [fp, #-28]
 4087 02e8 FF3803E2 		and	r3, r3, #16711680
 4088 02ec 020853E3 		cmp	r3, #131072
 4089 02f0 0100001A 		bne	.L257
 4090              		.loc 1 2222 5 discriminator 16
 4091 02f4 0830E0E3 		mvn	r3, #8
 4092              		.loc 1 2222 5
 4093 02f8 550100EA 		b	.L241
 4094              	.L257:
 4095              		.loc 1 2222 5 discriminator 17
 4096 02fc 1C301BE5 		ldr	r3, [fp, #-28]
 4097 0300 233CA0E1 		lsr	r3, r3, #24
 4098 0304 030053E3 		cmp	r3, #3
 4099 0308 0100000A 		beq	.L252
 4100              		.loc 1 2222 5 discriminator 18
 4101 030c 0130E0E3 		mvn	r3, #1
 4102              		.loc 1 2222 5
 4103 0310 4F0100EA 		b	.L241
 4104              	.L252:
2223:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Src,Type_Stat);
2224:../../Source/Kernel/rme_kernel.c ****     /* Check if both captbls are not frozen and allows such operations */
2225:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Dst,RME_CPT_FLAG_ADD_DST);
 4105              		.loc 1 2225 5 is_stmt 1
 4106 0314 08301BE5 		ldr	r3, [fp, #-8]
 4107 0318 083093E5 		ldr	r3, [r3, #8]
 4108 031c 103003E2 		and	r3, r3, #16
 4109 0320 000053E3 		cmp	r3, #0
 4110 0324 0100001A 		bne	.L258
 4111              		.loc 1 2225 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 113


 4112 0328 0630E0E3 		mvn	r3, #6
 4113              		.loc 1 2225 5
 4114 032c 480100EA 		b	.L241
 4115              	.L258:
2226:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Src,RME_CPT_FLAG_ADD_SRC);
 4116              		.loc 1 2226 5 is_stmt 1
 4117 0330 0C301BE5 		ldr	r3, [fp, #-12]
 4118 0334 083093E5 		ldr	r3, [r3, #8]
 4119 0338 083003E2 		and	r3, r3, #8
 4120 033c 000053E3 		cmp	r3, #0
 4121 0340 0100001A 		bne	.L259
 4122              		.loc 1 2226 5 is_stmt 0 discriminator 1
 4123 0344 0630E0E3 		mvn	r3, #6
 4124              		.loc 1 2226 5
 4125 0348 410100EA 		b	.L241
 4126              	.L259:
2227:../../Source/Kernel/rme_kernel.c ****     
2228:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slots */
2229:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Dst,Cap_Dst,struct RME_Cap_Struct*,Capobj_Dst);
 4127              		.loc 1 2229 5 is_stmt 1
 4128 034c 08301BE5 		ldr	r3, [fp, #-8]
 4129 0350 142093E5 		ldr	r2, [r3, #20]
 4130 0354 38301BE5 		ldr	r3, [fp, #-56]
 4131 0358 030052E1 		cmp	r2, r3
 4132 035c 0100008A 		bhi	.L260
 4133              		.loc 1 2229 5 is_stmt 0 discriminator 1
 4134 0360 0230E0E3 		mvn	r3, #2
 4135              		.loc 1 2229 5
 4136 0364 3A0100EA 		b	.L241
 4137              	.L260:
 4138              		.loc 1 2229 5 discriminator 2
 4139 0368 38301BE5 		ldr	r3, [fp, #-56]
 4140 036c 8322A0E1 		lsl	r2, r3, #5
 4141 0370 08301BE5 		ldr	r3, [fp, #-8]
 4142 0374 0C3093E5 		ldr	r3, [r3, #12]
 4143 0378 033082E0 		add	r3, r2, r3
 4144 037c 20300BE5 		str	r3, [fp, #-32]
2230:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Src,Cap_Src,struct RME_Cap_Struct*,Capobj_Src);
 4145              		.loc 1 2230 5 is_stmt 1
 4146 0380 0C301BE5 		ldr	r3, [fp, #-12]
 4147 0384 142093E5 		ldr	r2, [r3, #20]
 4148 0388 04309BE5 		ldr	r3, [fp, #4]
 4149 038c 030052E1 		cmp	r2, r3
 4150 0390 0100008A 		bhi	.L261
 4151              		.loc 1 2230 5 is_stmt 0 discriminator 1
 4152 0394 0230E0E3 		mvn	r3, #2
 4153              		.loc 1 2230 5
 4154 0398 2D0100EA 		b	.L241
 4155              	.L261:
 4156              		.loc 1 2230 5 discriminator 2
 4157 039c 04309BE5 		ldr	r3, [fp, #4]
 4158 03a0 8322A0E1 		lsl	r2, r3, #5
 4159 03a4 0C301BE5 		ldr	r3, [fp, #-12]
 4160 03a8 0C3093E5 		ldr	r3, [r3, #12]
 4161 03ac 033082E0 		add	r3, r2, r3
 4162 03b0 24300BE5 		str	r3, [fp, #-36]
2231:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 114


2232:../../Source/Kernel/rme_kernel.c ****     /* Atomic read - Read barrier to avoid premature checking of the rest */
2233:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Src->Head.Type_Stat));
 4163              		.loc 1 2233 15 is_stmt 1
 4164 03b4 24301BE5 		ldr	r3, [fp, #-36]
 4165 03b8 0300A0E1 		mov	r0, r3
 4166 03bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4167 03c0 1C000BE5 		str	r0, [fp, #-28]
2234:../../Source/Kernel/rme_kernel.c ****     /* Is the source cap frozen? */
2235:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 4168              		.loc 1 2235 31
 4169 03c4 1C301BE5 		ldr	r3, [fp, #-28]
 4170 03c8 FF3803E2 		and	r3, r3, #16711680
 4171              		.loc 1 2235 7
 4172 03cc 020853E3 		cmp	r3, #131072
 4173 03d0 0100001A 		bne	.L262
2236:../../Source/Kernel/rme_kernel.c ****     {
2237:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2238:../../Source/Kernel/rme_kernel.c ****         
2239:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 4174              		.loc 1 2239 16
 4175 03d4 0830E0E3 		mvn	r3, #8
 4176 03d8 1D0100EA 		b	.L241
 4177              	.L262:
2240:../../Source/Kernel/rme_kernel.c ****     }
2241:../../Source/Kernel/rme_kernel.c ****     else
2242:../../Source/Kernel/rme_kernel.c ****     {
2243:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2244:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2245:../../Source/Kernel/rme_kernel.c ****     }
2246:../../Source/Kernel/rme_kernel.c ****     
2247:../../Source/Kernel/rme_kernel.c ****     /* Does the source cap exist at all? */
2248:../../Source/Kernel/rme_kernel.c ****     if(Type_Stat==0U)
 4178              		.loc 1 2248 7
 4179 03dc 1C301BE5 		ldr	r3, [fp, #-28]
 4180 03e0 000053E3 		cmp	r3, #0
 4181 03e4 0100001A 		bne	.L263
2249:../../Source/Kernel/rme_kernel.c ****     {
2250:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2251:../../Source/Kernel/rme_kernel.c ****         
2252:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 4182              		.loc 1 2252 16
 4183 03e8 0030E0E3 		mvn	r3, #0
 4184 03ec 180100EA 		b	.L241
 4185              	.L263:
2253:../../Source/Kernel/rme_kernel.c ****     }
2254:../../Source/Kernel/rme_kernel.c ****     else
2255:../../Source/Kernel/rme_kernel.c ****     {
2256:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2257:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2258:../../Source/Kernel/rme_kernel.c ****     }
2259:../../Source/Kernel/rme_kernel.c **** 
2260:../../Source/Kernel/rme_kernel.c ****     /* Dewarn some compilers that complain about uninitialized variables */
2261:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=0U;
 4186              		.loc 1 2261 14
 4187 03f0 0030A0E3 		mov	r3, #0
 4188 03f4 10300BE5 		str	r3, [fp, #-16]
2262:../../Source/Kernel/rme_kernel.c ****     Kom_End=0U;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 115


 4189              		.loc 1 2262 12
 4190 03f8 0030A0E3 		mov	r3, #0
 4191 03fc 14300BE5 		str	r3, [fp, #-20]
2263:../../Source/Kernel/rme_kernel.c ****     Kom_Flag=0U;
 4192              		.loc 1 2263 13
 4193 0400 0030A0E3 		mov	r3, #0
 4194 0404 18300BE5 		str	r3, [fp, #-24]
2264:../../Source/Kernel/rme_kernel.c ****     
2265:../../Source/Kernel/rme_kernel.c ****     /* Is there a flag conflict? - For page tables, we have different checking mechanisms */
2266:../../Source/Kernel/rme_kernel.c ****     Src_Type=RME_CAP_TYPE(Type_Stat);
 4195              		.loc 1 2266 13
 4196 0408 1C301BE5 		ldr	r3, [fp, #-28]
 4197 040c 233CA0E1 		lsr	r3, r3, #24
 4198 0410 28300BE5 		str	r3, [fp, #-40]
2267:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_PGT)
 4199              		.loc 1 2267 7
 4200 0414 28301BE5 		ldr	r3, [fp, #-40]
 4201 0418 040053E3 		cmp	r3, #4
 4202 041c 2D00001A 		bne	.L264
2268:../../Source/Kernel/rme_kernel.c ****     {
2269:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2270:../../Source/Kernel/rme_kernel.c ****         
2271:../../Source/Kernel/rme_kernel.c ****         /* Check the delegation range */
2272:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)>RME_PGT_FLAG_HIGH(Capobj_Src->Head.Flag))
 4203              		.loc 1 2272 12
 4204 0420 08309BE5 		ldr	r3, [fp, #8]
 4205 0424 232AA0E1 		lsr	r2, r3, #20
 4206              		.loc 1 2272 36
 4207 0428 24301BE5 		ldr	r3, [fp, #-36]
 4208 042c 083093E5 		ldr	r3, [r3, #8]
 4209 0430 233AA0E1 		lsr	r3, r3, #20
 4210              		.loc 1 2272 11
 4211 0434 030052E1 		cmp	r2, r3
 4212 0438 0100009A 		bls	.L265
2273:../../Source/Kernel/rme_kernel.c ****         {
2274:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2275:../../Source/Kernel/rme_kernel.c ****         
2276:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4213              		.loc 1 2276 20
 4214 043c 0630E0E3 		mvn	r3, #6
 4215 0440 030100EA 		b	.L241
 4216              	.L265:
2277:../../Source/Kernel/rme_kernel.c ****         }
2278:../../Source/Kernel/rme_kernel.c ****         else
2279:../../Source/Kernel/rme_kernel.c ****         {
2280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2281:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2282:../../Source/Kernel/rme_kernel.c ****         }
2283:../../Source/Kernel/rme_kernel.c ****         
2284:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_LOW(Flag)<RME_PGT_FLAG_LOW(Capobj_Src->Head.Flag))
 4217              		.loc 1 2284 12
 4218 0444 08309BE5 		ldr	r3, [fp, #8]
 4219 0448 2334A0E1 		lsr	r3, r3, #8
 4220 044c 5320EBE7 		ubfx	r2, r3, #0, #12
 4221              		.loc 1 2284 35
 4222 0450 24301BE5 		ldr	r3, [fp, #-36]
 4223 0454 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 116


 4224 0458 2334A0E1 		lsr	r3, r3, #8
 4225 045c 5330EBE7 		ubfx	r3, r3, #0, #12
 4226              		.loc 1 2284 11
 4227 0460 030052E1 		cmp	r2, r3
 4228 0464 0100002A 		bcs	.L266
2285:../../Source/Kernel/rme_kernel.c ****         {
2286:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2287:../../Source/Kernel/rme_kernel.c ****             
2288:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4229              		.loc 1 2288 20
 4230 0468 0630E0E3 		mvn	r3, #6
 4231 046c F80000EA 		b	.L241
 4232              	.L266:
2289:../../Source/Kernel/rme_kernel.c ****         }
2290:../../Source/Kernel/rme_kernel.c ****         else
2291:../../Source/Kernel/rme_kernel.c ****         {
2292:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2293:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2294:../../Source/Kernel/rme_kernel.c ****         }
2295:../../Source/Kernel/rme_kernel.c ****         
2296:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)<RME_PGT_FLAG_LOW(Flag))
 4233              		.loc 1 2296 12
 4234 0470 08309BE5 		ldr	r3, [fp, #8]
 4235 0474 232AA0E1 		lsr	r2, r3, #20
 4236              		.loc 1 2296 36
 4237 0478 08309BE5 		ldr	r3, [fp, #8]
 4238 047c 2334A0E1 		lsr	r3, r3, #8
 4239 0480 5330EBE7 		ubfx	r3, r3, #0, #12
 4240              		.loc 1 2296 11
 4241 0484 030052E1 		cmp	r2, r3
 4242 0488 0100002A 		bcs	.L267
2297:../../Source/Kernel/rme_kernel.c ****         {
2298:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2299:../../Source/Kernel/rme_kernel.c ****             
2300:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4243              		.loc 1 2300 20
 4244 048c 0630E0E3 		mvn	r3, #6
 4245 0490 EF0000EA 		b	.L241
 4246              	.L267:
2301:../../Source/Kernel/rme_kernel.c ****         }
2302:../../Source/Kernel/rme_kernel.c ****         else
2303:../../Source/Kernel/rme_kernel.c ****         {
2304:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2305:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2306:../../Source/Kernel/rme_kernel.c ****         }
2307:../../Source/Kernel/rme_kernel.c ****         
2308:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2309:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_FLAG(Flag)==0U)
 4247              		.loc 1 2309 12
 4248 0494 08309BE5 		ldr	r3, [fp, #8]
 4249 0498 7330EFE6 		uxtb	r3, r3
 4250              		.loc 1 2309 11
 4251 049c 000053E3 		cmp	r3, #0
 4252 04a0 0100001A 		bne	.L268
2310:../../Source/Kernel/rme_kernel.c ****         {
2311:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2312:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 117


2313:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4253              		.loc 1 2313 20
 4254 04a4 0630E0E3 		mvn	r3, #6
 4255 04a8 E90000EA 		b	.L241
 4256              	.L268:
2314:../../Source/Kernel/rme_kernel.c ****         }
2315:../../Source/Kernel/rme_kernel.c ****         else
2316:../../Source/Kernel/rme_kernel.c ****         {
2317:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2318:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2319:../../Source/Kernel/rme_kernel.c ****         }
2320:../../Source/Kernel/rme_kernel.c ****         
2321:../../Source/Kernel/rme_kernel.c ****         if((RME_PGT_FLAG_FLAG(Flag)&(~RME_PGT_FLAG_FLAG(Capobj_Src->Head.Flag)))!=0U)
 4257              		.loc 1 2321 39
 4258 04ac 24301BE5 		ldr	r3, [fp, #-36]
 4259 04b0 083093E5 		ldr	r3, [r3, #8]
 4260 04b4 7330EFE6 		uxtb	r3, r3
 4261              		.loc 1 2321 38
 4262 04b8 0320E0E1 		mvn	r2, r3
 4263              		.loc 1 2321 36
 4264 04bc 08309BE5 		ldr	r3, [fp, #8]
 4265 04c0 023003E0 		and	r3, r3, r2
 4266 04c4 7330EFE6 		uxtb	r3, r3
 4267              		.loc 1 2321 11
 4268 04c8 000053E3 		cmp	r3, #0
 4269 04cc 7700000A 		beq	.L269
2322:../../Source/Kernel/rme_kernel.c ****         {
2323:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2324:../../Source/Kernel/rme_kernel.c ****             
2325:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4270              		.loc 1 2325 20
 4271 04d0 0630E0E3 		mvn	r3, #6
 4272 04d4 DE0000EA 		b	.L241
 4273              	.L264:
2326:../../Source/Kernel/rme_kernel.c ****         }
2327:../../Source/Kernel/rme_kernel.c ****         else
2328:../../Source/Kernel/rme_kernel.c ****         {
2329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2330:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2331:../../Source/Kernel/rme_kernel.c ****         }
2332:../../Source/Kernel/rme_kernel.c ****     }
2333:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KFN)
 4274              		.loc 1 2333 12
 4275 04d8 28301BE5 		ldr	r3, [fp, #-40]
 4276 04dc 010053E3 		cmp	r3, #1
 4277 04e0 1900001A 		bne	.L270
2334:../../Source/Kernel/rme_kernel.c ****     {
2335:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2336:../../Source/Kernel/rme_kernel.c ****         
2337:../../Source/Kernel/rme_kernel.c ****         /* Kernel funcrions only have ranges, no flags - check the delegation range */
2338:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)>RME_KFN_FLAG_HIGH(Capobj_Src->Head.Flag))
 4278              		.loc 1 2338 12
 4279 04e4 08309BE5 		ldr	r3, [fp, #8]
 4280 04e8 2328A0E1 		lsr	r2, r3, #16
 4281              		.loc 1 2338 36
 4282 04ec 24301BE5 		ldr	r3, [fp, #-36]
 4283 04f0 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 118


 4284 04f4 2338A0E1 		lsr	r3, r3, #16
 4285              		.loc 1 2338 11
 4286 04f8 030052E1 		cmp	r2, r3
 4287 04fc 0100009A 		bls	.L271
2339:../../Source/Kernel/rme_kernel.c ****         {
2340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2341:../../Source/Kernel/rme_kernel.c ****             
2342:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4288              		.loc 1 2342 20
 4289 0500 0630E0E3 		mvn	r3, #6
 4290 0504 D20000EA 		b	.L241
 4291              	.L271:
2343:../../Source/Kernel/rme_kernel.c ****         }
2344:../../Source/Kernel/rme_kernel.c ****         else
2345:../../Source/Kernel/rme_kernel.c ****         {
2346:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2347:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2348:../../Source/Kernel/rme_kernel.c ****         }
2349:../../Source/Kernel/rme_kernel.c ****         
2350:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_LOW(Flag)<RME_KFN_FLAG_LOW(Capobj_Src->Head.Flag))
 4292              		.loc 1 2350 12
 4293 0508 08309BE5 		ldr	r3, [fp, #8]
 4294 050c 7320FFE6 		uxth	r2, r3
 4295              		.loc 1 2350 35
 4296 0510 24301BE5 		ldr	r3, [fp, #-36]
 4297 0514 083093E5 		ldr	r3, [r3, #8]
 4298 0518 7330FFE6 		uxth	r3, r3
 4299              		.loc 1 2350 11
 4300 051c 030052E1 		cmp	r2, r3
 4301 0520 0100002A 		bcs	.L272
2351:../../Source/Kernel/rme_kernel.c ****         {
2352:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2353:../../Source/Kernel/rme_kernel.c ****             
2354:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4302              		.loc 1 2354 20
 4303 0524 0630E0E3 		mvn	r3, #6
 4304 0528 C90000EA 		b	.L241
 4305              	.L272:
2355:../../Source/Kernel/rme_kernel.c ****         }
2356:../../Source/Kernel/rme_kernel.c ****         else
2357:../../Source/Kernel/rme_kernel.c ****         {
2358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2359:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2360:../../Source/Kernel/rme_kernel.c ****         }
2361:../../Source/Kernel/rme_kernel.c ****         
2362:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)<RME_KFN_FLAG_LOW(Flag))
 4306              		.loc 1 2362 12
 4307 052c 08309BE5 		ldr	r3, [fp, #8]
 4308 0530 2328A0E1 		lsr	r2, r3, #16
 4309              		.loc 1 2362 36
 4310 0534 08309BE5 		ldr	r3, [fp, #8]
 4311 0538 7330FFE6 		uxth	r3, r3
 4312              		.loc 1 2362 11
 4313 053c 030052E1 		cmp	r2, r3
 4314 0540 5A00002A 		bcs	.L269
2363:../../Source/Kernel/rme_kernel.c ****         {
2364:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 119


2365:../../Source/Kernel/rme_kernel.c ****             
2366:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4315              		.loc 1 2366 20
 4316 0544 0630E0E3 		mvn	r3, #6
 4317 0548 C10000EA 		b	.L241
 4318              	.L270:
2367:../../Source/Kernel/rme_kernel.c ****         }
2368:../../Source/Kernel/rme_kernel.c ****         else
2369:../../Source/Kernel/rme_kernel.c ****         {
2370:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2371:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2372:../../Source/Kernel/rme_kernel.c ****         }
2373:../../Source/Kernel/rme_kernel.c ****     }
2374:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KOM)
 4319              		.loc 1 2374 12
 4320 054c 28301BE5 		ldr	r3, [fp, #-40]
 4321 0550 020053E3 		cmp	r3, #2
 4322 0554 4700001A 		bne	.L273
2375:../../Source/Kernel/rme_kernel.c ****     {
2376:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2377:../../Source/Kernel/rme_kernel.c ****         
2378:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End here is exclusive */
2379:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_KOM_FLAG_LOW(Flag,Ext_Flag);
 4323              		.loc 1 2379 18
 4324 0558 08309BE5 		ldr	r3, [fp, #8]
 4325 055c 0338A0E1 		lsl	r3, r3, #16
 4326 0560 10300BE5 		str	r3, [fp, #-16]
2380:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_KOM_FLAG_HIGH(Flag,Ext_Flag);
 4327              		.loc 1 2380 17
 4328 0564 08309BE5 		ldr	r3, [fp, #8]
 4329 0568 2338A0E1 		lsr	r3, r3, #16
 4330 056c 0338A0E1 		lsl	r3, r3, #16
 4331 0570 0C209BE5 		ldr	r2, [fp, #12]
 4332 0574 2228A0E1 		lsr	r2, r2, #16
 4333 0578 3F20C2E3 		bic	r2, r2, #63
 4334              		.loc 1 2380 16
 4335 057c 023083E1 		orr	r3, r3, r2
 4336 0580 14300BE5 		str	r3, [fp, #-20]
2381:../../Source/Kernel/rme_kernel.c ****         Kom_Flag=RME_KOM_FLAG_KOM(Ext_Flag);
 4337              		.loc 1 2381 17
 4338 0584 0030A0E3 		mov	r3, #0
 4339 0588 18300BE5 		str	r3, [fp, #-24]
2382:../../Source/Kernel/rme_kernel.c ****         
2383:../../Source/Kernel/rme_kernel.c ****         /* Round start and end to the slot boundary, if we are using slots bigger than 64 bytes */
2384:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
2385:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_ROUND_DOWN(Kom_End,RME_KOM_SLOT_ORDER);
2386:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_ROUND_UP(Kom_Begin,RME_KOM_SLOT_ORDER);
2387:../../Source/Kernel/rme_kernel.c **** #endif
2388:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<=Kom_Begin)
 4340              		.loc 1 2388 11
 4341 058c 14201BE5 		ldr	r2, [fp, #-20]
 4342 0590 10301BE5 		ldr	r3, [fp, #-16]
 4343 0594 030052E1 		cmp	r2, r3
 4344 0598 0100008A 		bhi	.L274
2389:../../Source/Kernel/rme_kernel.c ****         {
2390:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2391:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 120


2392:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4345              		.loc 1 2392 20
 4346 059c 0630E0E3 		mvn	r3, #6
 4347 05a0 AB0000EA 		b	.L241
 4348              	.L274:
2393:../../Source/Kernel/rme_kernel.c ****         }
2394:../../Source/Kernel/rme_kernel.c ****         else
2395:../../Source/Kernel/rme_kernel.c ****         {
2396:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2397:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2398:../../Source/Kernel/rme_kernel.c ****         }
2399:../../Source/Kernel/rme_kernel.c **** 
2400:../../Source/Kernel/rme_kernel.c ****         /* Convert relative addresses to absolute addresses and check for overflow */
2401:../../Source/Kernel/rme_kernel.c ****         Kom_Begin+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4349              		.loc 1 2401 62
 4350 05a4 24301BE5 		ldr	r3, [fp, #-36]
 4351 05a8 143093E5 		ldr	r3, [r3, #20]
 4352              		.loc 1 2401 18
 4353 05ac 10201BE5 		ldr	r2, [fp, #-16]
 4354 05b0 033082E0 		add	r3, r2, r3
 4355 05b4 10300BE5 		str	r3, [fp, #-16]
2402:../../Source/Kernel/rme_kernel.c ****         if(Kom_Begin<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4356              		.loc 1 2402 64
 4357 05b8 24301BE5 		ldr	r3, [fp, #-36]
 4358 05bc 143093E5 		ldr	r3, [r3, #20]
 4359              		.loc 1 2402 11
 4360 05c0 10201BE5 		ldr	r2, [fp, #-16]
 4361 05c4 030052E1 		cmp	r2, r3
 4362 05c8 0100002A 		bcs	.L275
2403:../../Source/Kernel/rme_kernel.c ****         {
2404:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2405:../../Source/Kernel/rme_kernel.c ****             
2406:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4363              		.loc 1 2406 20
 4364 05cc 0630E0E3 		mvn	r3, #6
 4365 05d0 9F0000EA 		b	.L241
 4366              	.L275:
2407:../../Source/Kernel/rme_kernel.c ****         }
2408:../../Source/Kernel/rme_kernel.c ****         else
2409:../../Source/Kernel/rme_kernel.c ****         {
2410:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2411:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2412:../../Source/Kernel/rme_kernel.c ****         }
2413:../../Source/Kernel/rme_kernel.c ****         
2414:../../Source/Kernel/rme_kernel.c ****         Kom_End+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4367              		.loc 1 2414 60
 4368 05d4 24301BE5 		ldr	r3, [fp, #-36]
 4369 05d8 143093E5 		ldr	r3, [r3, #20]
 4370              		.loc 1 2414 16
 4371 05dc 14201BE5 		ldr	r2, [fp, #-20]
 4372 05e0 033082E0 		add	r3, r2, r3
 4373 05e4 14300BE5 		str	r3, [fp, #-20]
2415:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4374              		.loc 1 2415 62
 4375 05e8 24301BE5 		ldr	r3, [fp, #-36]
 4376 05ec 143093E5 		ldr	r3, [r3, #20]
 4377              		.loc 1 2415 11
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 121


 4378 05f0 14201BE5 		ldr	r2, [fp, #-20]
 4379 05f4 030052E1 		cmp	r2, r3
 4380 05f8 0100002A 		bcs	.L276
2416:../../Source/Kernel/rme_kernel.c ****         {
2417:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2418:../../Source/Kernel/rme_kernel.c ****             
2419:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4381              		.loc 1 2419 20
 4382 05fc 0630E0E3 		mvn	r3, #6
 4383 0600 930000EA 		b	.L241
 4384              	.L276:
2420:../../Source/Kernel/rme_kernel.c ****         }
2421:../../Source/Kernel/rme_kernel.c ****         else
2422:../../Source/Kernel/rme_kernel.c ****         {
2423:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2424:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2425:../../Source/Kernel/rme_kernel.c ****         }
2426:../../Source/Kernel/rme_kernel.c **** 
2427:../../Source/Kernel/rme_kernel.c ****         /* Check the ranges of kernel memory */
2428:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin>Kom_Begin)
 4385              		.loc 1 2428 54
 4386 0604 24301BE5 		ldr	r3, [fp, #-36]
 4387 0608 143093E5 		ldr	r3, [r3, #20]
 4388              		.loc 1 2428 11
 4389 060c 10201BE5 		ldr	r2, [fp, #-16]
 4390 0610 030052E1 		cmp	r2, r3
 4391 0614 0100002A 		bcs	.L277
2429:../../Source/Kernel/rme_kernel.c ****         {
2430:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2431:../../Source/Kernel/rme_kernel.c ****             
2432:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4392              		.loc 1 2432 20
 4393 0618 0630E0E3 		mvn	r3, #6
 4394 061c 8C0000EA 		b	.L241
 4395              	.L277:
2433:../../Source/Kernel/rme_kernel.c ****         }
2434:../../Source/Kernel/rme_kernel.c ****         else
2435:../../Source/Kernel/rme_kernel.c ****         {
2436:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2437:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2438:../../Source/Kernel/rme_kernel.c ****         }
2439:../../Source/Kernel/rme_kernel.c ****         
2440:../../Source/Kernel/rme_kernel.c ****         /* Internal encoding of 'end' is inclusive */
2441:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->End<(Kom_End-1U))
 4396              		.loc 1 2441 54
 4397 0620 24301BE5 		ldr	r3, [fp, #-36]
 4398 0624 182093E5 		ldr	r2, [r3, #24]
 4399              		.loc 1 2441 68
 4400 0628 14301BE5 		ldr	r3, [fp, #-20]
 4401 062c 013043E2 		sub	r3, r3, #1
 4402              		.loc 1 2441 11
 4403 0630 030052E1 		cmp	r2, r3
 4404 0634 0100002A 		bcs	.L278
2442:../../Source/Kernel/rme_kernel.c ****         {
2443:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2444:../../Source/Kernel/rme_kernel.c ****             
2445:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 122


 4405              		.loc 1 2445 20
 4406 0638 0630E0E3 		mvn	r3, #6
 4407 063c 840000EA 		b	.L241
 4408              	.L278:
2446:../../Source/Kernel/rme_kernel.c ****         }
2447:../../Source/Kernel/rme_kernel.c ****         else
2448:../../Source/Kernel/rme_kernel.c ****         {
2449:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2450:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2451:../../Source/Kernel/rme_kernel.c ****         }
2452:../../Source/Kernel/rme_kernel.c ****         
2453:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2454:../../Source/Kernel/rme_kernel.c ****         if(Kom_Flag==0U)
 4409              		.loc 1 2454 11
 4410 0640 18301BE5 		ldr	r3, [fp, #-24]
 4411 0644 000053E3 		cmp	r3, #0
 4412 0648 0100001A 		bne	.L279
2455:../../Source/Kernel/rme_kernel.c ****         {
2456:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2457:../../Source/Kernel/rme_kernel.c ****             
2458:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4413              		.loc 1 2458 20
 4414 064c 0630E0E3 		mvn	r3, #6
 4415 0650 7F0000EA 		b	.L241
 4416              	.L279:
2459:../../Source/Kernel/rme_kernel.c ****         }
2460:../../Source/Kernel/rme_kernel.c ****         else
2461:../../Source/Kernel/rme_kernel.c ****         {
2462:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2463:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2464:../../Source/Kernel/rme_kernel.c ****         }
2465:../../Source/Kernel/rme_kernel.c ****         
2466:../../Source/Kernel/rme_kernel.c ****         if((Kom_Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4417              		.loc 1 2466 41
 4418 0654 24301BE5 		ldr	r3, [fp, #-36]
 4419 0658 083093E5 		ldr	r3, [r3, #8]
 4420              		.loc 1 2466 23
 4421 065c 0320E0E1 		mvn	r2, r3
 4422              		.loc 1 2466 21
 4423 0660 18301BE5 		ldr	r3, [fp, #-24]
 4424 0664 023003E0 		and	r3, r3, r2
 4425              		.loc 1 2466 11
 4426 0668 000053E3 		cmp	r3, #0
 4427 066c 0F00000A 		beq	.L269
2467:../../Source/Kernel/rme_kernel.c ****         {
2468:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2469:../../Source/Kernel/rme_kernel.c ****             
2470:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4428              		.loc 1 2470 20
 4429 0670 0630E0E3 		mvn	r3, #6
 4430 0674 760000EA 		b	.L241
 4431              	.L273:
2471:../../Source/Kernel/rme_kernel.c ****         }
2472:../../Source/Kernel/rme_kernel.c ****         else
2473:../../Source/Kernel/rme_kernel.c ****         {
2474:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2475:../../Source/Kernel/rme_kernel.c ****             /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 123


2476:../../Source/Kernel/rme_kernel.c ****         }
2477:../../Source/Kernel/rme_kernel.c ****     }
2478:../../Source/Kernel/rme_kernel.c ****     /* All other caps */
2479:../../Source/Kernel/rme_kernel.c ****     else
2480:../../Source/Kernel/rme_kernel.c ****     {
2481:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2482:../../Source/Kernel/rme_kernel.c ****         
2483:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2484:../../Source/Kernel/rme_kernel.c ****         if(Flag==0U)
 4432              		.loc 1 2484 11
 4433 0678 08309BE5 		ldr	r3, [fp, #8]
 4434 067c 000053E3 		cmp	r3, #0
 4435 0680 0100001A 		bne	.L280
2485:../../Source/Kernel/rme_kernel.c ****         {
2486:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2487:../../Source/Kernel/rme_kernel.c ****             
2488:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4436              		.loc 1 2488 20
 4437 0684 0630E0E3 		mvn	r3, #6
 4438 0688 710000EA 		b	.L241
 4439              	.L280:
2489:../../Source/Kernel/rme_kernel.c ****         }
2490:../../Source/Kernel/rme_kernel.c ****         else
2491:../../Source/Kernel/rme_kernel.c ****         {
2492:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2493:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2494:../../Source/Kernel/rme_kernel.c ****         }
2495:../../Source/Kernel/rme_kernel.c ****         if((Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4440              		.loc 1 2495 37
 4441 068c 24301BE5 		ldr	r3, [fp, #-36]
 4442 0690 083093E5 		ldr	r3, [r3, #8]
 4443              		.loc 1 2495 19
 4444 0694 0320E0E1 		mvn	r2, r3
 4445              		.loc 1 2495 17
 4446 0698 08309BE5 		ldr	r3, [fp, #8]
 4447 069c 023003E0 		and	r3, r3, r2
 4448              		.loc 1 2495 11
 4449 06a0 000053E3 		cmp	r3, #0
 4450 06a4 0100000A 		beq	.L269
2496:../../Source/Kernel/rme_kernel.c ****         {
2497:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2498:../../Source/Kernel/rme_kernel.c ****             
2499:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4451              		.loc 1 2499 20
 4452 06a8 0630E0E3 		mvn	r3, #6
 4453 06ac 680000EA 		b	.L241
 4454              	.L269:
2500:../../Source/Kernel/rme_kernel.c ****         }
2501:../../Source/Kernel/rme_kernel.c ****         else
2502:../../Source/Kernel/rme_kernel.c ****         {
2503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2504:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2505:../../Source/Kernel/rme_kernel.c ****         }
2506:../../Source/Kernel/rme_kernel.c ****     }
2507:../../Source/Kernel/rme_kernel.c ****     
2508:../../Source/Kernel/rme_kernel.c ****     /* Is the destination slot unoccupied? */
2509:../../Source/Kernel/rme_kernel.c ****     if(Capobj_Dst->Head.Type_Stat!=0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 124


 4455              		.loc 1 2509 24
 4456 06b0 20301BE5 		ldr	r3, [fp, #-32]
 4457 06b4 003093E5 		ldr	r3, [r3]
 4458              		.loc 1 2509 7
 4459 06b8 000053E3 		cmp	r3, #0
 4460 06bc 0100000A 		beq	.L281
2510:../../Source/Kernel/rme_kernel.c ****     {
2511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2512:../../Source/Kernel/rme_kernel.c ****             
2513:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_EXIST;
 4461              		.loc 1 2513 16
 4462 06c0 0430E0E3 		mvn	r3, #4
 4463 06c4 620000EA 		b	.L241
 4464              	.L281:
2514:../../Source/Kernel/rme_kernel.c ****     }
2515:../../Source/Kernel/rme_kernel.c ****     else
2516:../../Source/Kernel/rme_kernel.c ****     {
2517:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2518:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2519:../../Source/Kernel/rme_kernel.c ****     }
2520:../../Source/Kernel/rme_kernel.c ****     
2521:../../Source/Kernel/rme_kernel.c ****     /* Try to take the empty slot */
2522:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Capobj_Dst);
 4465              		.loc 1 2522 5
 4466 06c8 20301BE5 		ldr	r3, [fp, #-32]
 4467 06cc 0128A0E3 		mov	r2, #65536
 4468 06d0 0010A0E3 		mov	r1, #0
 4469 06d4 0300A0E1 		mov	r0, r3
 4470 06d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4471 06dc 0030A0E1 		mov	r3, r0
 4472              		.loc 1 2522 5 is_stmt 0 discriminator 1
 4473 06e0 000053E3 		cmp	r3, #0
 4474 06e4 0100001A 		bne	.L282
 4475 06e8 0430E0E3 		mvn	r3, #4
 4476              		.loc 1 2522 5
 4477 06ec 580000EA 		b	.L241
 4478              	.L282:
 4479              		.loc 1 2522 5 discriminator 2
 4480 06f0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4481 06f4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4482 06f8 002093E5 		ldr	r2, [r3]
 4483 06fc 20301BE5 		ldr	r3, [fp, #-32]
 4484 0700 102083E5 		str	r2, [r3, #16]
2523:../../Source/Kernel/rme_kernel.c ****     
2524:../../Source/Kernel/rme_kernel.c ****     /* All done, we replicate the cap with flags */
2525:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_KOM)
 4485              		.loc 1 2525 7 is_stmt 1
 4486 0704 28301BE5 		ldr	r3, [fp, #-40]
 4487 0708 020053E3 		cmp	r3, #2
 4488 070c 1A00001A 		bne	.L283
2526:../../Source/Kernel/rme_kernel.c ****     {
2527:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2528:../../Source/Kernel/rme_kernel.c ****             
2529:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Kom_Flag);
 4489              		.loc 1 2529 9
 4490 0710 20301BE5 		ldr	r3, [fp, #-32]
 4491 0714 18201BE5 		ldr	r2, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 125


 4492 0718 082083E5 		str	r2, [r3, #8]
 4493 071c 24301BE5 		ldr	r3, [fp, #-36]
 4494 0720 0C2093E5 		ldr	r2, [r3, #12]
 4495 0724 20301BE5 		ldr	r3, [fp, #-32]
 4496 0728 0C2083E5 		str	r2, [r3, #12]
 4497 072c 24301BE5 		ldr	r3, [fp, #-36]
 4498 0730 142093E5 		ldr	r2, [r3, #20]
 4499 0734 20301BE5 		ldr	r3, [fp, #-32]
 4500 0738 142083E5 		str	r2, [r3, #20]
 4501 073c 24301BE5 		ldr	r3, [fp, #-36]
 4502 0740 182093E5 		ldr	r2, [r3, #24]
 4503 0744 20301BE5 		ldr	r3, [fp, #-32]
 4504 0748 182083E5 		str	r2, [r3, #24]
 4505 074c 24301BE5 		ldr	r3, [fp, #-36]
 4506 0750 1C2093E5 		ldr	r2, [r3, #28]
 4507 0754 20301BE5 		ldr	r3, [fp, #-32]
 4508 0758 1C2083E5 		str	r2, [r3, #28]
2530:../../Source/Kernel/rme_kernel.c ****         /* Write absolute range information for kernel memory caps */
2531:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->Begin=Kom_Begin;
 4509              		.loc 1 2531 58
 4510 075c 20301BE5 		ldr	r3, [fp, #-32]
 4511 0760 10201BE5 		ldr	r2, [fp, #-16]
 4512 0764 142083E5 		str	r2, [r3, #20]
2532:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End encoded inclusively to avoid overflow at max address */
2533:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->End=Kom_End-1U;
 4513              		.loc 1 2533 64
 4514 0768 14301BE5 		ldr	r3, [fp, #-20]
 4515 076c 012043E2 		sub	r2, r3, #1
 4516              		.loc 1 2533 56
 4517 0770 20301BE5 		ldr	r3, [fp, #-32]
 4518 0774 182083E5 		str	r2, [r3, #24]
 4519 0778 120000EA 		b	.L284
 4520              	.L283:
2534:../../Source/Kernel/rme_kernel.c ****     }
2535:../../Source/Kernel/rme_kernel.c ****     else
2536:../../Source/Kernel/rme_kernel.c ****     {
2537:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2538:../../Source/Kernel/rme_kernel.c ****         
2539:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Flag);
 4521              		.loc 1 2539 9
 4522 077c 20301BE5 		ldr	r3, [fp, #-32]
 4523 0780 08209BE5 		ldr	r2, [fp, #8]
 4524 0784 082083E5 		str	r2, [r3, #8]
 4525 0788 24301BE5 		ldr	r3, [fp, #-36]
 4526 078c 0C2093E5 		ldr	r2, [r3, #12]
 4527 0790 20301BE5 		ldr	r3, [fp, #-32]
 4528 0794 0C2083E5 		str	r2, [r3, #12]
 4529 0798 24301BE5 		ldr	r3, [fp, #-36]
 4530 079c 142093E5 		ldr	r2, [r3, #20]
 4531 07a0 20301BE5 		ldr	r3, [fp, #-32]
 4532 07a4 142083E5 		str	r2, [r3, #20]
 4533 07a8 24301BE5 		ldr	r3, [fp, #-36]
 4534 07ac 182093E5 		ldr	r2, [r3, #24]
 4535 07b0 20301BE5 		ldr	r3, [fp, #-32]
 4536 07b4 182083E5 		str	r2, [r3, #24]
 4537 07b8 24301BE5 		ldr	r3, [fp, #-36]
 4538 07bc 1C2093E5 		ldr	r2, [r3, #28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 126


 4539 07c0 20301BE5 		ldr	r3, [fp, #-32]
 4540 07c4 1C2083E5 		str	r2, [r3, #28]
 4541              	.L284:
2540:../../Source/Kernel/rme_kernel.c ****     }
2541:../../Source/Kernel/rme_kernel.c ****     
2542:../../Source/Kernel/rme_kernel.c ****     /* Set the parent and increase reference count - if this is actually needed.
2543:../../Source/Kernel/rme_kernel.c ****      * The only two cases where this is not needed are KFN and KOM. These two
2544:../../Source/Kernel/rme_kernel.c ****      * capability types are standalone on their own and do not need to reference
2545:../../Source/Kernel/rme_kernel.c ****      * their parent, nor will they update the parent's reference count. This
2546:../../Source/Kernel/rme_kernel.c ****      * design decision comes from the fact that these two capability types are
2547:../../Source/Kernel/rme_kernel.c ****      * always created on boot and delegated everywhere, and they don't actually
2548:../../Source/Kernel/rme_kernel.c ****      * have an object. If we use refcnt on these, we may cause scalability 
2549:../../Source/Kernel/rme_kernel.c ****      * issues. The parent cap can't be deleted anyway, so this is fine. */
2550:../../Source/Kernel/rme_kernel.c ****     if((Src_Type!=RME_CAP_TYPE_KOM)&&(Src_Type!=RME_CAP_TYPE_KFN))
 4542              		.loc 1 2550 7
 4543 07c8 28301BE5 		ldr	r3, [fp, #-40]
 4544 07cc 020053E3 		cmp	r3, #2
 4545 07d0 1400000A 		beq	.L285
 4546              		.loc 1 2550 36 discriminator 1
 4547 07d4 28301BE5 		ldr	r3, [fp, #-40]
 4548 07d8 010053E3 		cmp	r3, #1
 4549 07dc 1100000A 		beq	.L285
2551:../../Source/Kernel/rme_kernel.c ****     {
2552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2553:../../Source/Kernel/rme_kernel.c ****         
2554:../../Source/Kernel/rme_kernel.c ****         /* Register root */
2555:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=RME_CAP_CONV_ROOT(Capobj_Src,rme_ptr_t);
 4550              		.loc 1 2555 35
 4551 07e0 24301BE5 		ldr	r3, [fp, #-36]
 4552 07e4 003093E5 		ldr	r3, [r3]
 4553 07e8 7330FFE6 		uxth	r3, r3
 4554 07ec 000053E3 		cmp	r3, #0
 4555 07f0 0200000A 		beq	.L286
 4556              		.loc 1 2555 35 is_stmt 0 discriminator 1
 4557 07f4 24301BE5 		ldr	r3, [fp, #-36]
 4558 07f8 043093E5 		ldr	r3, [r3, #4]
 4559 07fc 000000EA 		b	.L287
 4560              	.L286:
 4561              		.loc 1 2555 35 discriminator 2
 4562 0800 24301BE5 		ldr	r3, [fp, #-36]
 4563              	.L287:
 4564              		.loc 1 2555 34 is_stmt 1 discriminator 4
 4565 0804 20201BE5 		ldr	r2, [fp, #-32]
 4566 0808 043082E5 		str	r3, [r2, #4]
2556:../../Source/Kernel/rme_kernel.c ****     
2557:../../Source/Kernel/rme_kernel.c ****         /* Increase the parent's refcnt - never overflows, guaranteed by field size */
2558:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(((volatile struct RME_Cap_Struct*)
 4567              		.loc 1 2558 9
 4568 080c 20301BE5 		ldr	r3, [fp, #-32]
 4569 0810 043093E5 		ldr	r3, [r3, #4]
 4570 0814 043083E2 		add	r3, r3, #4
 4571 0818 0110A0E3 		mov	r1, #1
 4572 081c 0300A0E1 		mov	r0, r3
 4573 0820 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4574 0824 020000EA 		b	.L288
 4575              	.L285:
2559:../../Source/Kernel/rme_kernel.c ****                         (Capobj_Dst->Head.Root_Ref))->Head.Root_Ref),1U);
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 127


2560:../../Source/Kernel/rme_kernel.c ****     }
2561:../../Source/Kernel/rme_kernel.c ****     else
2562:../../Source/Kernel/rme_kernel.c ****     {
2563:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2564:../../Source/Kernel/rme_kernel.c ****         
2565:../../Source/Kernel/rme_kernel.c ****         /* No root for KOM and KFN */
2566:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=0U;
 4576              		.loc 1 2566 34
 4577 0828 20301BE5 		ldr	r3, [fp, #-32]
 4578 082c 0020A0E3 		mov	r2, #0
 4579 0830 042083E5 		str	r2, [r3, #4]
 4580              	.L288:
2567:../../Source/Kernel/rme_kernel.c ****     }
2568:../../Source/Kernel/rme_kernel.c **** 
2569:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2570:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Capobj_Dst->Head.Type_Stat),
 4581              		.loc 1 2570 5
 4582 0834 20201BE5 		ldr	r2, [fp, #-32]
 4583 0838 28301BE5 		ldr	r3, [fp, #-40]
 4584 083c 033CA0E1 		lsl	r3, r3, #24
 4585 0840 013083E3 		orr	r3, r3, #1
 4586 0844 0310A0E1 		mov	r1, r3
 4587 0848 0200A0E1 		mov	r0, r2
 4588 084c FEFFFFEB 		bl	__RME_A7A_Write_Release
2571:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(Src_Type,
2572:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2573:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_LEAF));
2574:../../Source/Kernel/rme_kernel.c **** 
2575:../../Source/Kernel/rme_kernel.c ****     return 0;
 4589              		.loc 1 2575 12
 4590 0850 0030A0E3 		mov	r3, #0
 4591              	.L241:
2576:../../Source/Kernel/rme_kernel.c **** }
 4592              		.loc 1 2576 1
 4593 0854 0300A0E1 		mov	r0, r3
 4594 0858 04D04BE2 		sub	sp, fp, #4
 4595              		.cfi_def_cfa 13, 8
 4596              		@ sp needed
 4597 085c 0088BDE8 		pop	{fp, pc}
 4598              		.cfi_endproc
 4599              	.LFE27:
 4601              		.section	.text._RME_Cpt_Rem,"ax",%progbits
 4602              		.align	2
 4603              		.syntax unified
 4604              		.arm
 4606              	_RME_Cpt_Rem:
 4607              	.LFB28:
2577:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Add *************************************************/
2578:../../Source/Kernel/rme_kernel.c **** 
2579:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Rem ******************************************************
2580:../../Source/Kernel/rme_kernel.c **** Description : Remove one capability from the capability table. This function
2581:../../Source/Kernel/rme_kernel.c ****               reverts the delegation.
2582:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2583:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Rem - The capability to the capability table to
2584:../../Source/Kernel/rme_kernel.c ****                                       remove from.
2585:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2586:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Rem - The capability slot you want to remove.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 128


2587:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2588:../../Source/Kernel/rme_kernel.c **** Output      : None.
2589:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2590:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2591:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Rem(struct RME_Cap_Cpt* Cpt,
2592:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Rem,
2593:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Rem)
2594:../../Source/Kernel/rme_kernel.c **** {
 4608              		.loc 1 2594 1
 4609              		.cfi_startproc
 4610              		@ args = 0, pretend = 0, frame = 40
 4611              		@ frame_needed = 1, uses_anonymous_args = 0
 4612 0000 00482DE9 		push	{fp, lr}
 4613              		.cfi_def_cfa_offset 8
 4614              		.cfi_offset 11, -8
 4615              		.cfi_offset 14, -4
 4616 0004 04B08DE2 		add	fp, sp, #4
 4617              		.cfi_def_cfa 11, 4
 4618 0008 28D04DE2 		sub	sp, sp, #40
 4619 000c 20000BE5 		str	r0, [fp, #-32]
 4620 0010 24100BE5 		str	r1, [fp, #-36]
 4621 0014 28200BE5 		str	r2, [fp, #-40]
2595:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2596:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Rem;
2597:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2598:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Rem_Type;
2599:../../Source/Kernel/rme_kernel.c ****     /* This is used for removal */
2600:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Root;
2601:../../Source/Kernel/rme_kernel.c ****     
2602:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2603:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Rem,RME_CAP_TYPE_CPT,
 4622              		.loc 1 2603 5
 4623 0018 24301BE5 		ldr	r3, [fp, #-36]
 4624 001c 803003E2 		and	r3, r3, #128
 4625 0020 000053E3 		cmp	r3, #0
 4626 0024 1C00001A 		bne	.L290
 4627              		.loc 1 2603 5 is_stmt 0 discriminator 1
 4628 0028 20301BE5 		ldr	r3, [fp, #-32]
 4629 002c 142093E5 		ldr	r2, [r3, #20]
 4630 0030 24301BE5 		ldr	r3, [fp, #-36]
 4631 0034 030052E1 		cmp	r2, r3
 4632 0038 0100008A 		bhi	.L291
 4633              		.loc 1 2603 5 discriminator 3
 4634 003c 0230E0E3 		mvn	r3, #2
 4635              		.loc 1 2603 5
 4636 0040 9E0000EA 		b	.L292
 4637              	.L291:
 4638              		.loc 1 2603 5 discriminator 4
 4639 0044 24301BE5 		ldr	r3, [fp, #-36]
 4640 0048 8322A0E1 		lsl	r2, r3, #5
 4641 004c 20301BE5 		ldr	r3, [fp, #-32]
 4642 0050 0C3093E5 		ldr	r3, [r3, #12]
 4643 0054 033082E0 		add	r3, r2, r3
 4644 0058 08300BE5 		str	r3, [fp, #-8]
 4645 005c 08301BE5 		ldr	r3, [fp, #-8]
 4646 0060 0300A0E1 		mov	r0, r3
 4647 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 129


 4648 0068 0C000BE5 		str	r0, [fp, #-12]
 4649              		.loc 1 2603 5 discriminator 1
 4650 006c 0C301BE5 		ldr	r3, [fp, #-12]
 4651 0070 FF3803E2 		and	r3, r3, #16711680
 4652 0074 020853E3 		cmp	r3, #131072
 4653 0078 0100001A 		bne	.L293
 4654              		.loc 1 2603 5 discriminator 5
 4655 007c 0830E0E3 		mvn	r3, #8
 4656              		.loc 1 2603 5
 4657 0080 8E0000EA 		b	.L292
 4658              	.L293:
 4659              		.loc 1 2603 5 discriminator 6
 4660 0084 0C301BE5 		ldr	r3, [fp, #-12]
 4661 0088 233CA0E1 		lsr	r3, r3, #24
 4662 008c 030053E3 		cmp	r3, #3
 4663 0090 3F00000A 		beq	.L294
 4664              		.loc 1 2603 5 discriminator 7
 4665 0094 0130E0E3 		mvn	r3, #1
 4666              		.loc 1 2603 5
 4667 0098 880000EA 		b	.L292
 4668              	.L290:
 4669              		.loc 1 2603 5 discriminator 2
 4670 009c 24301BE5 		ldr	r3, [fp, #-36]
 4671 00a0 2324A0E1 		lsr	r2, r3, #8
 4672 00a4 20301BE5 		ldr	r3, [fp, #-32]
 4673 00a8 143093E5 		ldr	r3, [r3, #20]
 4674 00ac 030052E1 		cmp	r2, r3
 4675 00b0 0100003A 		bcc	.L295
 4676              		.loc 1 2603 5 discriminator 8
 4677 00b4 0230E0E3 		mvn	r3, #2
 4678              		.loc 1 2603 5
 4679 00b8 800000EA 		b	.L292
 4680              	.L295:
 4681              		.loc 1 2603 5 discriminator 9
 4682 00bc 24301BE5 		ldr	r3, [fp, #-36]
 4683 00c0 2334A0E1 		lsr	r3, r3, #8
 4684 00c4 8322A0E1 		lsl	r2, r3, #5
 4685 00c8 20301BE5 		ldr	r3, [fp, #-32]
 4686 00cc 0C3093E5 		ldr	r3, [r3, #12]
 4687 00d0 033082E0 		add	r3, r2, r3
 4688 00d4 08300BE5 		str	r3, [fp, #-8]
 4689 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4690 00dc 0300A0E1 		mov	r0, r3
 4691 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4692 00e4 0C000BE5 		str	r0, [fp, #-12]
 4693              		.loc 1 2603 5 discriminator 1
 4694 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 4695 00ec FF3803E2 		and	r3, r3, #16711680
 4696 00f0 020853E3 		cmp	r3, #131072
 4697 00f4 0100001A 		bne	.L296
 4698              		.loc 1 2603 5 discriminator 10
 4699 00f8 0830E0E3 		mvn	r3, #8
 4700              		.loc 1 2603 5
 4701 00fc 6F0000EA 		b	.L292
 4702              	.L296:
 4703              		.loc 1 2603 5 discriminator 11
 4704 0100 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 130


 4705 0104 233CA0E1 		lsr	r3, r3, #24
 4706 0108 030053E3 		cmp	r3, #3
 4707 010c 0100000A 		beq	.L297
 4708              		.loc 1 2603 5 discriminator 12
 4709 0110 0130E0E3 		mvn	r3, #1
 4710              		.loc 1 2603 5
 4711 0114 690000EA 		b	.L292
 4712              	.L297:
 4713              		.loc 1 2603 5 discriminator 13
 4714 0118 24301BE5 		ldr	r3, [fp, #-36]
 4715 011c 7F2003E2 		and	r2, r3, #127
 4716 0120 08301BE5 		ldr	r3, [fp, #-8]
 4717 0124 143093E5 		ldr	r3, [r3, #20]
 4718 0128 030052E1 		cmp	r2, r3
 4719 012c 0100003A 		bcc	.L298
 4720              		.loc 1 2603 5 discriminator 14
 4721 0130 0230E0E3 		mvn	r3, #2
 4722              		.loc 1 2603 5
 4723 0134 610000EA 		b	.L292
 4724              	.L298:
 4725              		.loc 1 2603 5 discriminator 15
 4726 0138 24301BE5 		ldr	r3, [fp, #-36]
 4727 013c 7F3003E2 		and	r3, r3, #127
 4728 0140 8322A0E1 		lsl	r2, r3, #5
 4729 0144 08301BE5 		ldr	r3, [fp, #-8]
 4730 0148 0C3093E5 		ldr	r3, [r3, #12]
 4731 014c 033082E0 		add	r3, r2, r3
 4732 0150 08300BE5 		str	r3, [fp, #-8]
 4733 0154 08301BE5 		ldr	r3, [fp, #-8]
 4734 0158 0300A0E1 		mov	r0, r3
 4735 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4736 0160 0C000BE5 		str	r0, [fp, #-12]
 4737              		.loc 1 2603 5 discriminator 1
 4738 0164 0C301BE5 		ldr	r3, [fp, #-12]
 4739 0168 FF3803E2 		and	r3, r3, #16711680
 4740 016c 020853E3 		cmp	r3, #131072
 4741 0170 0100001A 		bne	.L299
 4742              		.loc 1 2603 5 discriminator 16
 4743 0174 0830E0E3 		mvn	r3, #8
 4744              		.loc 1 2603 5
 4745 0178 500000EA 		b	.L292
 4746              	.L299:
 4747              		.loc 1 2603 5 discriminator 17
 4748 017c 0C301BE5 		ldr	r3, [fp, #-12]
 4749 0180 233CA0E1 		lsr	r3, r3, #24
 4750 0184 030053E3 		cmp	r3, #3
 4751 0188 0100000A 		beq	.L294
 4752              		.loc 1 2603 5 discriminator 18
 4753 018c 0130E0E3 		mvn	r3, #1
 4754              		.loc 1 2603 5
 4755 0190 4A0000EA 		b	.L292
 4756              	.L294:
2604:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2605:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2606:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_REM);
 4757              		.loc 1 2606 5 is_stmt 1
 4758 0194 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 131


 4759 0198 083093E5 		ldr	r3, [r3, #8]
 4760 019c 203003E2 		and	r3, r3, #32
 4761 01a0 000053E3 		cmp	r3, #0
 4762 01a4 0100001A 		bne	.L300
 4763              		.loc 1 2606 5 is_stmt 0 discriminator 1
 4764 01a8 0630E0E3 		mvn	r3, #6
 4765              		.loc 1 2606 5
 4766 01ac 430000EA 		b	.L292
 4767              	.L300:
2607:../../Source/Kernel/rme_kernel.c ****     
2608:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2609:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Rem,struct RME_Cap_Struct*,Capobj_Rem);
 4768              		.loc 1 2609 5 is_stmt 1
 4769 01b0 08301BE5 		ldr	r3, [fp, #-8]
 4770 01b4 142093E5 		ldr	r2, [r3, #20]
 4771 01b8 28301BE5 		ldr	r3, [fp, #-40]
 4772 01bc 030052E1 		cmp	r2, r3
 4773 01c0 0100008A 		bhi	.L301
 4774              		.loc 1 2609 5 is_stmt 0 discriminator 1
 4775 01c4 0230E0E3 		mvn	r3, #2
 4776              		.loc 1 2609 5
 4777 01c8 3C0000EA 		b	.L292
 4778              	.L301:
 4779              		.loc 1 2609 5 discriminator 2
 4780 01cc 28301BE5 		ldr	r3, [fp, #-40]
 4781 01d0 8322A0E1 		lsl	r2, r3, #5
 4782 01d4 08301BE5 		ldr	r3, [fp, #-8]
 4783 01d8 0C3093E5 		ldr	r3, [r3, #12]
 4784 01dc 033082E0 		add	r3, r2, r3
 4785 01e0 10300BE5 		str	r3, [fp, #-16]
2610:../../Source/Kernel/rme_kernel.c ****     /* Removal check */
2611:../../Source/Kernel/rme_kernel.c ****     RME_CAP_REM_CHECK(Capobj_Rem,Type_Stat);
 4786              		.loc 1 2611 5 is_stmt 1
 4787 01e4 10301BE5 		ldr	r3, [fp, #-16]
 4788 01e8 0300A0E1 		mov	r0, r3
 4789 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4790 01f0 0C000BE5 		str	r0, [fp, #-12]
 4791              		.loc 1 2611 5 is_stmt 0 discriminator 1
 4792 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 4793 01f8 FF3803E2 		and	r3, r3, #16711680
 4794 01fc 020853E3 		cmp	r3, #131072
 4795 0200 0100000A 		beq	.L302
 4796 0204 0830E0E3 		mvn	r3, #8
 4797              		.loc 1 2611 5
 4798 0208 2C0000EA 		b	.L292
 4799              	.L302:
 4800              		.loc 1 2611 5 discriminator 4
 4801 020c 0C301BE5 		ldr	r3, [fp, #-12]
 4802 0210 7330FFE6 		uxth	r3, r3
 4803 0214 000053E3 		cmp	r3, #0
 4804 0218 0100001A 		bne	.L303
 4805              		.loc 1 2611 5 discriminator 5
 4806 021c 0930E0E3 		mvn	r3, #9
 4807              		.loc 1 2611 5
 4808 0220 260000EA 		b	.L292
 4809              	.L303:
2612:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 132


2613:../../Source/Kernel/rme_kernel.c ****     /* If we are KFN or KOM, we don't care about parent or refcnt */
2614:../../Source/Kernel/rme_kernel.c ****     Rem_Type=RME_CAP_TYPE(Type_Stat);
 4810              		.loc 1 2614 13 is_stmt 1
 4811 0224 0C301BE5 		ldr	r3, [fp, #-12]
 4812 0228 233CA0E1 		lsr	r3, r3, #24
 4813 022c 14300BE5 		str	r3, [fp, #-20]
2615:../../Source/Kernel/rme_kernel.c ****     if((Rem_Type!=RME_CAP_TYPE_KOM)&&(Rem_Type!=RME_CAP_TYPE_KFN))
 4814              		.loc 1 2615 7
 4815 0230 14301BE5 		ldr	r3, [fp, #-20]
 4816 0234 020053E3 		cmp	r3, #2
 4817 0238 1500000A 		beq	.L304
 4818              		.loc 1 2615 36 discriminator 1
 4819 023c 14301BE5 		ldr	r3, [fp, #-20]
 4820 0240 010053E3 		cmp	r3, #1
 4821 0244 1200000A 		beq	.L304
2616:../../Source/Kernel/rme_kernel.c ****     {
2617:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2618:../../Source/Kernel/rme_kernel.c ****         
2619:../../Source/Kernel/rme_kernel.c ****         /* Remember this for refcnt operations */
2620:../../Source/Kernel/rme_kernel.c ****         Capobj_Root=(struct RME_Cap_Struct*)(Capobj_Rem->Head.Root_Ref);
 4822              		.loc 1 2620 62
 4823 0248 10301BE5 		ldr	r3, [fp, #-16]
 4824 024c 043093E5 		ldr	r3, [r3, #4]
 4825              		.loc 1 2620 20
 4826 0250 18300BE5 		str	r3, [fp, #-24]
2621:../../Source/Kernel/rme_kernel.c ****         
2622:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4827              		.loc 1 2622 9
 4828 0254 10301BE5 		ldr	r3, [fp, #-16]
 4829 0258 0020A0E3 		mov	r2, #0
 4830 025c 0C101BE5 		ldr	r1, [fp, #-12]
 4831 0260 0300A0E1 		mov	r0, r3
 4832 0264 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4833 0268 0030A0E1 		mov	r3, r0
 4834              		.loc 1 2622 9 is_stmt 0 discriminator 1
 4835 026c 000053E3 		cmp	r3, #0
 4836 0270 0100001A 		bne	.L305
 4837 0274 0030E0E3 		mvn	r3, #0
 4838              		.loc 1 2622 9
 4839 0278 100000EA 		b	.L292
 4840              	.L305:
2623:../../Source/Kernel/rme_kernel.c **** 
2624:../../Source/Kernel/rme_kernel.c ****         /* Check done, decrease its parent's refcnt. This must be done at last */
2625:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Capobj_Root->Head.Root_Ref),-1);
 4841              		.loc 1 2625 9 is_stmt 1
 4842 027c 18301BE5 		ldr	r3, [fp, #-24]
 4843 0280 043083E2 		add	r3, r3, #4
 4844 0284 0010E0E3 		mvn	r1, #0
 4845 0288 0300A0E1 		mov	r0, r3
 4846 028c FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4847 0290 090000EA 		b	.L306
 4848              	.L304:
2626:../../Source/Kernel/rme_kernel.c ****     }
2627:../../Source/Kernel/rme_kernel.c ****     else
2628:../../Source/Kernel/rme_kernel.c ****     {
2629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2630:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 133


2631:../../Source/Kernel/rme_kernel.c ****         /* Helping also applies here */
2632:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4849              		.loc 1 2632 9
 4850 0294 10301BE5 		ldr	r3, [fp, #-16]
 4851 0298 0020A0E3 		mov	r2, #0
 4852 029c 0C101BE5 		ldr	r1, [fp, #-12]
 4853 02a0 0300A0E1 		mov	r0, r3
 4854 02a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4855 02a8 0030A0E1 		mov	r3, r0
 4856              		.loc 1 2632 9 is_stmt 0 discriminator 1
 4857 02ac 000053E3 		cmp	r3, #0
 4858 02b0 0100001A 		bne	.L306
 4859 02b4 0030E0E3 		mvn	r3, #0
 4860              		.loc 1 2632 9
 4861 02b8 000000EA 		b	.L292
 4862              	.L306:
2633:../../Source/Kernel/rme_kernel.c ****     }
2634:../../Source/Kernel/rme_kernel.c ****     
2635:../../Source/Kernel/rme_kernel.c ****     return 0;
 4863              		.loc 1 2635 12 is_stmt 1
 4864 02bc 0030A0E3 		mov	r3, #0
 4865              	.L292:
2636:../../Source/Kernel/rme_kernel.c **** }
 4866              		.loc 1 2636 1
 4867 02c0 0300A0E1 		mov	r0, r3
 4868 02c4 04D04BE2 		sub	sp, fp, #4
 4869              		.cfi_def_cfa 13, 8
 4870              		@ sp needed
 4871 02c8 0088BDE8 		pop	{fp, pc}
 4872              		.cfi_endproc
 4873              	.LFE28:
 4875              		.section	.text._RME_Pgt_Boot_Crt,"ax",%progbits
 4876              		.align	2
 4877              		.global	_RME_Pgt_Boot_Crt
 4878              		.syntax unified
 4879              		.arm
 4881              	_RME_Pgt_Boot_Crt:
 4882              	.LFB29:
2637:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Rem *************************************************/
2638:../../Source/Kernel/rme_kernel.c **** 
2639:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Crt *************************************************
2640:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time page table.
2641:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
2642:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2643:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
2644:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
2645:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2646:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
2647:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
2648:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2649:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the page table.
2650:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
2651:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
2652:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
2653:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
2654:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page
2655:../../Source/Kernel/rme_kernel.c ****                                  directories into it.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 134


2656:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
2657:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the
2658:../../Source/Kernel/rme_kernel.c ****                                      page directory.
2659:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the page
2660:../../Source/Kernel/rme_kernel.c ****                                     table.
2661:../../Source/Kernel/rme_kernel.c **** Output      : None.
2662:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2663:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2664:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2665:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
2666:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
2667:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt,
2668:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
2669:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Base,
2670:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Is_Top,
2671:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Size_Order,
2672:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Num_Order)
2673:../../Source/Kernel/rme_kernel.c **** {
 4883              		.loc 1 2673 1
 4884              		.cfi_startproc
 4885              		@ args = 16, pretend = 0, frame = 32
 4886              		@ frame_needed = 1, uses_anonymous_args = 0
 4887 0000 00482DE9 		push	{fp, lr}
 4888              		.cfi_def_cfa_offset 8
 4889              		.cfi_offset 11, -8
 4890              		.cfi_offset 14, -4
 4891 0004 04B08DE2 		add	fp, sp, #4
 4892              		.cfi_def_cfa 11, 4
 4893 0008 28D04DE2 		sub	sp, sp, #40
 4894 000c 18000BE5 		str	r0, [fp, #-24]
 4895 0010 1C100BE5 		str	r1, [fp, #-28]
 4896 0014 20200BE5 		str	r2, [fp, #-32]
 4897 0018 24300BE5 		str	r3, [fp, #-36]
2674:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2675:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
2676:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2677:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
2678:../../Source/Kernel/rme_kernel.c ****     
2679:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
2680:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
2681:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 4898              		.loc 1 2681 19
 4899 001c 0C209BE5 		ldr	r2, [fp, #12]
 4900 0020 10309BE5 		ldr	r3, [fp, #16]
 4901 0024 033082E0 		add	r3, r2, r3
 4902              		.loc 1 2681 7
 4903 0028 200053E3 		cmp	r3, #32
 4904 002c 0100009A 		bls	.L308
2682:../../Source/Kernel/rme_kernel.c ****     {
2683:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2684:../../Source/Kernel/rme_kernel.c ****         
2685:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4905              		.loc 1 2685 16
 4906 0030 6630E0E3 		mvn	r3, #102
 4907 0034 D00000EA 		b	.L309
 4908              	.L308:
2686:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 135


2687:../../Source/Kernel/rme_kernel.c ****     else
2688:../../Source/Kernel/rme_kernel.c ****     {
2689:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2690:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2691:../../Source/Kernel/rme_kernel.c ****     }
2692:../../Source/Kernel/rme_kernel.c **** 
2693:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
2694:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 4909              		.loc 1 2694 5
 4910 0038 1C301BE5 		ldr	r3, [fp, #-28]
 4911 003c 803003E2 		and	r3, r3, #128
 4912 0040 000053E3 		cmp	r3, #0
 4913 0044 1C00001A 		bne	.L310
 4914              		.loc 1 2694 5 is_stmt 0 discriminator 1
 4915 0048 18301BE5 		ldr	r3, [fp, #-24]
 4916 004c 142093E5 		ldr	r2, [r3, #20]
 4917 0050 1C301BE5 		ldr	r3, [fp, #-28]
 4918 0054 030052E1 		cmp	r2, r3
 4919 0058 0100008A 		bhi	.L311
 4920              		.loc 1 2694 5 discriminator 3
 4921 005c 0230E0E3 		mvn	r3, #2
 4922              		.loc 1 2694 5
 4923 0060 C50000EA 		b	.L309
 4924              	.L311:
 4925              		.loc 1 2694 5 discriminator 4
 4926 0064 1C301BE5 		ldr	r3, [fp, #-28]
 4927 0068 8322A0E1 		lsl	r2, r3, #5
 4928 006c 18301BE5 		ldr	r3, [fp, #-24]
 4929 0070 0C3093E5 		ldr	r3, [r3, #12]
 4930 0074 033082E0 		add	r3, r2, r3
 4931 0078 0C300BE5 		str	r3, [fp, #-12]
 4932 007c 0C301BE5 		ldr	r3, [fp, #-12]
 4933 0080 0300A0E1 		mov	r0, r3
 4934 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4935 0088 10000BE5 		str	r0, [fp, #-16]
 4936              		.loc 1 2694 5 discriminator 1
 4937 008c 10301BE5 		ldr	r3, [fp, #-16]
 4938 0090 FF3803E2 		and	r3, r3, #16711680
 4939 0094 020853E3 		cmp	r3, #131072
 4940 0098 0100001A 		bne	.L312
 4941              		.loc 1 2694 5 discriminator 5
 4942 009c 0830E0E3 		mvn	r3, #8
 4943              		.loc 1 2694 5
 4944 00a0 B50000EA 		b	.L309
 4945              	.L312:
 4946              		.loc 1 2694 5 discriminator 6
 4947 00a4 10301BE5 		ldr	r3, [fp, #-16]
 4948 00a8 233CA0E1 		lsr	r3, r3, #24
 4949 00ac 030053E3 		cmp	r3, #3
 4950 00b0 3F00000A 		beq	.L313
 4951              		.loc 1 2694 5 discriminator 7
 4952 00b4 0130E0E3 		mvn	r3, #1
 4953              		.loc 1 2694 5
 4954 00b8 AF0000EA 		b	.L309
 4955              	.L310:
 4956              		.loc 1 2694 5 discriminator 2
 4957 00bc 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 136


 4958 00c0 2324A0E1 		lsr	r2, r3, #8
 4959 00c4 18301BE5 		ldr	r3, [fp, #-24]
 4960 00c8 143093E5 		ldr	r3, [r3, #20]
 4961 00cc 030052E1 		cmp	r2, r3
 4962 00d0 0100003A 		bcc	.L314
 4963              		.loc 1 2694 5 discriminator 8
 4964 00d4 0230E0E3 		mvn	r3, #2
 4965              		.loc 1 2694 5
 4966 00d8 A70000EA 		b	.L309
 4967              	.L314:
 4968              		.loc 1 2694 5 discriminator 9
 4969 00dc 1C301BE5 		ldr	r3, [fp, #-28]
 4970 00e0 2334A0E1 		lsr	r3, r3, #8
 4971 00e4 8322A0E1 		lsl	r2, r3, #5
 4972 00e8 18301BE5 		ldr	r3, [fp, #-24]
 4973 00ec 0C3093E5 		ldr	r3, [r3, #12]
 4974 00f0 033082E0 		add	r3, r2, r3
 4975 00f4 0C300BE5 		str	r3, [fp, #-12]
 4976 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 4977 00fc 0300A0E1 		mov	r0, r3
 4978 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4979 0104 10000BE5 		str	r0, [fp, #-16]
 4980              		.loc 1 2694 5 discriminator 1
 4981 0108 10301BE5 		ldr	r3, [fp, #-16]
 4982 010c FF3803E2 		and	r3, r3, #16711680
 4983 0110 020853E3 		cmp	r3, #131072
 4984 0114 0100001A 		bne	.L315
 4985              		.loc 1 2694 5 discriminator 10
 4986 0118 0830E0E3 		mvn	r3, #8
 4987              		.loc 1 2694 5
 4988 011c 960000EA 		b	.L309
 4989              	.L315:
 4990              		.loc 1 2694 5 discriminator 11
 4991 0120 10301BE5 		ldr	r3, [fp, #-16]
 4992 0124 233CA0E1 		lsr	r3, r3, #24
 4993 0128 030053E3 		cmp	r3, #3
 4994 012c 0100000A 		beq	.L316
 4995              		.loc 1 2694 5 discriminator 12
 4996 0130 0130E0E3 		mvn	r3, #1
 4997              		.loc 1 2694 5
 4998 0134 900000EA 		b	.L309
 4999              	.L316:
 5000              		.loc 1 2694 5 discriminator 13
 5001 0138 1C301BE5 		ldr	r3, [fp, #-28]
 5002 013c 7F2003E2 		and	r2, r3, #127
 5003 0140 0C301BE5 		ldr	r3, [fp, #-12]
 5004 0144 143093E5 		ldr	r3, [r3, #20]
 5005 0148 030052E1 		cmp	r2, r3
 5006 014c 0100003A 		bcc	.L317
 5007              		.loc 1 2694 5 discriminator 14
 5008 0150 0230E0E3 		mvn	r3, #2
 5009              		.loc 1 2694 5
 5010 0154 880000EA 		b	.L309
 5011              	.L317:
 5012              		.loc 1 2694 5 discriminator 15
 5013 0158 1C301BE5 		ldr	r3, [fp, #-28]
 5014 015c 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 137


 5015 0160 8322A0E1 		lsl	r2, r3, #5
 5016 0164 0C301BE5 		ldr	r3, [fp, #-12]
 5017 0168 0C3093E5 		ldr	r3, [r3, #12]
 5018 016c 033082E0 		add	r3, r2, r3
 5019 0170 0C300BE5 		str	r3, [fp, #-12]
 5020 0174 0C301BE5 		ldr	r3, [fp, #-12]
 5021 0178 0300A0E1 		mov	r0, r3
 5022 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5023 0180 10000BE5 		str	r0, [fp, #-16]
 5024              		.loc 1 2694 5 discriminator 1
 5025 0184 10301BE5 		ldr	r3, [fp, #-16]
 5026 0188 FF3803E2 		and	r3, r3, #16711680
 5027 018c 020853E3 		cmp	r3, #131072
 5028 0190 0100001A 		bne	.L318
 5029              		.loc 1 2694 5 discriminator 16
 5030 0194 0830E0E3 		mvn	r3, #8
 5031              		.loc 1 2694 5
 5032 0198 770000EA 		b	.L309
 5033              	.L318:
 5034              		.loc 1 2694 5 discriminator 17
 5035 019c 10301BE5 		ldr	r3, [fp, #-16]
 5036 01a0 233CA0E1 		lsr	r3, r3, #24
 5037 01a4 030053E3 		cmp	r3, #3
 5038 01a8 0100000A 		beq	.L313
 5039              		.loc 1 2694 5 discriminator 18
 5040 01ac 0130E0E3 		mvn	r3, #1
 5041              		.loc 1 2694 5
 5042 01b0 710000EA 		b	.L309
 5043              	.L313:
2695:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
2696:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2697:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 5044              		.loc 1 2697 5 is_stmt 1
 5045 01b4 0C301BE5 		ldr	r3, [fp, #-12]
 5046 01b8 083093E5 		ldr	r3, [r3, #8]
 5047 01bc 013003E2 		and	r3, r3, #1
 5048 01c0 000053E3 		cmp	r3, #0
 5049 01c4 0100001A 		bne	.L319
 5050              		.loc 1 2697 5 is_stmt 0 discriminator 1
 5051 01c8 0630E0E3 		mvn	r3, #6
 5052              		.loc 1 2697 5
 5053 01cc 6A0000EA 		b	.L309
 5054              	.L319:
2698:../../Source/Kernel/rme_kernel.c ****     
2699:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
2700:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)!=0)
 5055              		.loc 1 2700 8 is_stmt 1
 5056 01d0 24301BE5 		ldr	r3, [fp, #-36]
 5057 01d4 00308DE5 		str	r3, [sp]
 5058 01d8 10309BE5 		ldr	r3, [fp, #16]
 5059 01dc 0C209BE5 		ldr	r2, [fp, #12]
 5060 01e0 08109BE5 		ldr	r1, [fp, #8]
 5061 01e4 04009BE5 		ldr	r0, [fp, #4]
 5062 01e8 FEFFFFEB 		bl	__RME_Pgt_Check
 5063 01ec 0030A0E1 		mov	r3, r0
 5064              		.loc 1 2700 7 discriminator 1
 5065 01f0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 138


 5066 01f4 0100000A 		beq	.L320
2701:../../Source/Kernel/rme_kernel.c ****     {
2702:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2703:../../Source/Kernel/rme_kernel.c ****         
2704:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5067              		.loc 1 2704 16
 5068 01f8 6630E0E3 		mvn	r3, #102
 5069 01fc 5E0000EA 		b	.L309
 5070              	.L320:
2705:../../Source/Kernel/rme_kernel.c ****     }
2706:../../Source/Kernel/rme_kernel.c ****     else
2707:../../Source/Kernel/rme_kernel.c ****     {
2708:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2709:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2710:../../Source/Kernel/rme_kernel.c ****     }
2711:../../Source/Kernel/rme_kernel.c ****     
2712:../../Source/Kernel/rme_kernel.c ****     /* Check if the base address is properly aligned to the total order of the page table */
2713:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 5071              		.loc 1 2713 14
 5072 0200 0C209BE5 		ldr	r2, [fp, #12]
 5073 0204 10309BE5 		ldr	r3, [fp, #16]
 5074 0208 033082E0 		add	r3, r2, r3
 5075 020c 203063E2 		rsb	r3, r3, #32
 5076 0210 0020E0E3 		mvn	r2, #0
 5077 0214 3223A0E1 		lsr	r2, r2, r3
 5078              		.loc 1 2713 13
 5079 0218 04309BE5 		ldr	r3, [fp, #4]
 5080 021c 023003E0 		and	r3, r3, r2
 5081              		.loc 1 2713 7
 5082 0220 000053E3 		cmp	r3, #0
 5083 0224 0100000A 		beq	.L321
2714:../../Source/Kernel/rme_kernel.c ****     {
2715:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2716:../../Source/Kernel/rme_kernel.c **** 
2717:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5084              		.loc 1 2717 16
 5085 0228 6630E0E3 		mvn	r3, #102
 5086 022c 520000EA 		b	.L309
 5087              	.L321:
2718:../../Source/Kernel/rme_kernel.c ****     }
2719:../../Source/Kernel/rme_kernel.c ****     else
2720:../../Source/Kernel/rme_kernel.c ****     {
2721:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2722:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2723:../../Source/Kernel/rme_kernel.c ****     }
2724:../../Source/Kernel/rme_kernel.c **** 
2725:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2726:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 5088              		.loc 1 2726 5
 5089 0230 0C301BE5 		ldr	r3, [fp, #-12]
 5090 0234 142093E5 		ldr	r2, [r3, #20]
 5091 0238 20301BE5 		ldr	r3, [fp, #-32]
 5092 023c 030052E1 		cmp	r2, r3
 5093 0240 0100008A 		bhi	.L322
 5094              		.loc 1 2726 5 is_stmt 0 discriminator 1
 5095 0244 0230E0E3 		mvn	r3, #2
 5096              		.loc 1 2726 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 139


 5097 0248 4B0000EA 		b	.L309
 5098              	.L322:
 5099              		.loc 1 2726 5 discriminator 2
 5100 024c 20301BE5 		ldr	r3, [fp, #-32]
 5101 0250 8322A0E1 		lsl	r2, r3, #5
 5102 0254 0C301BE5 		ldr	r3, [fp, #-12]
 5103 0258 0C3093E5 		ldr	r3, [r3, #12]
 5104 025c 033082E0 		add	r3, r2, r3
 5105 0260 14300BE5 		str	r3, [fp, #-20]
2727:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
2728:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 5106              		.loc 1 2728 5 is_stmt 1
 5107 0264 14301BE5 		ldr	r3, [fp, #-20]
 5108 0268 0128A0E3 		mov	r2, #65536
 5109 026c 0010A0E3 		mov	r1, #0
 5110 0270 0300A0E1 		mov	r0, r3
 5111 0274 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 5112 0278 0030A0E1 		mov	r3, r0
 5113              		.loc 1 2728 5 is_stmt 0 discriminator 1
 5114 027c 000053E3 		cmp	r3, #0
 5115 0280 0100001A 		bne	.L323
 5116 0284 0430E0E3 		mvn	r3, #4
 5117              		.loc 1 2728 5
 5118 0288 3B0000EA 		b	.L309
 5119              	.L323:
 5120              		.loc 1 2728 5 discriminator 2
 5121 028c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 5122 0290 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 5123 0294 002093E5 		ldr	r2, [r3]
 5124 0298 14301BE5 		ldr	r3, [fp, #-20]
 5125 029c 102083E5 		str	r2, [r3, #16]
2729:../../Source/Kernel/rme_kernel.c **** 
2730:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top level? */
2731:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 5126              		.loc 1 2731 7 is_stmt 1
 5127 02a0 08309BE5 		ldr	r3, [fp, #8]
 5128 02a4 000053E3 		cmp	r3, #0
 5129 02a8 0400000A 		beq	.L324
2732:../../Source/Kernel/rme_kernel.c ****     {
2733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2734:../../Source/Kernel/rme_kernel.c ****         
2735:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 5130              		.loc 1 2735 20
 5131 02ac 0120A0E3 		mov	r2, #1
 5132 02b0 10309BE5 		ldr	r3, [fp, #16]
 5133 02b4 1233A0E1 		lsl	r3, r2, r3
 5134              		.loc 1 2735 19
 5135 02b8 08300BE5 		str	r3, [fp, #-8]
 5136 02bc 030000EA 		b	.L325
 5137              	.L324:
2736:../../Source/Kernel/rme_kernel.c ****     }
2737:../../Source/Kernel/rme_kernel.c ****     else
2738:../../Source/Kernel/rme_kernel.c ****     {
2739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2740:../../Source/Kernel/rme_kernel.c ****         
2741:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 5138              		.loc 1 2741 20
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 140


 5139 02c0 0120A0E3 		mov	r2, #1
 5140 02c4 10309BE5 		ldr	r3, [fp, #16]
 5141 02c8 1233A0E1 		lsl	r3, r2, r3
 5142              		.loc 1 2741 19
 5143 02cc 08300BE5 		str	r3, [fp, #-8]
 5144              	.L325:
2742:../../Source/Kernel/rme_kernel.c ****     }
2743:../../Source/Kernel/rme_kernel.c ****     
2744:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
2745:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr, Table_Size)!=0)
 5145              		.loc 1 2745 8
 5146 02d0 08101BE5 		ldr	r1, [fp, #-8]
 5147 02d4 24001BE5 		ldr	r0, [fp, #-36]
 5148 02d8 FEFFFFEB 		bl	_RME_Kot_Mark
 5149 02dc 0030A0E1 		mov	r3, r0
 5150              		.loc 1 2745 7 discriminator 1
 5151 02e0 000053E3 		cmp	r3, #0
 5152 02e4 0500000A 		beq	.L326
2746:../../Source/Kernel/rme_kernel.c ****     {
2747:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2748:../../Source/Kernel/rme_kernel.c ****     
2749:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 5153              		.loc 1 2749 9
 5154 02e8 14301BE5 		ldr	r3, [fp, #-20]
 5155 02ec 0010A0E3 		mov	r1, #0
 5156 02f0 0300A0E1 		mov	r0, r3
 5157 02f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
2750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 5158              		.loc 1 2750 16
 5159 02f8 0330E0E3 		mvn	r3, #3
 5160 02fc 1E0000EA 		b	.L309
 5161              	.L326:
2751:../../Source/Kernel/rme_kernel.c ****     }
2752:../../Source/Kernel/rme_kernel.c ****     else
2753:../../Source/Kernel/rme_kernel.c ****     {
2754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2756:../../Source/Kernel/rme_kernel.c ****     }
2757:../../Source/Kernel/rme_kernel.c ****     
2758:../../Source/Kernel/rme_kernel.c ****     /* Header init */
2759:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 5162              		.loc 1 2759 27
 5163 0300 14301BE5 		ldr	r3, [fp, #-20]
 5164 0304 0020A0E3 		mov	r2, #0
 5165 0308 042083E5 		str	r2, [r3, #4]
2760:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 5166              		.loc 1 2760 25
 5167 030c 14301BE5 		ldr	r3, [fp, #-20]
 5168 0310 24201BE5 		ldr	r2, [fp, #-36]
 5169 0314 0C2083E5 		str	r2, [r3, #12]
2761:../../Source/Kernel/rme_kernel.c ****     /* Set the property of the page table to only act as source and creating process */
2762:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ADD_SRC|
 5170              		.loc 1 2762 23
 5171 0318 14201BE5 		ldr	r2, [fp, #-20]
 5172 031c C130A0E3 		mov	r3, #193
 5173 0320 F03F4FE3 		movt	r3, 65520
 5174 0324 083082E5 		str	r3, [r2, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 141


2763:../../Source/Kernel/rme_kernel.c ****                        RME_PGT_FLAG_PRC_CRT|RME_PGT_FLAG_PRC_PGT;
2764:../../Source/Kernel/rme_kernel.c ****     
2765:../../Source/Kernel/rme_kernel.c ****     /* Info init */
2766:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 5175              		.loc 1 2766 23
 5176 0328 04209BE5 		ldr	r2, [fp, #4]
 5177 032c 08309BE5 		ldr	r3, [fp, #8]
 5178 0330 032082E1 		orr	r2, r2, r3
 5179              		.loc 1 2766 18
 5180 0334 14301BE5 		ldr	r3, [fp, #-20]
 5181 0338 182083E5 		str	r2, [r3, #24]
2767:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 5182              		.loc 1 2767 20
 5183 033c 0C309BE5 		ldr	r3, [fp, #12]
 5184 0340 0328A0E1 		lsl	r2, r3, #16
 5185 0344 10309BE5 		ldr	r3, [fp, #16]
 5186 0348 032082E1 		orr	r2, r2, r3
 5187              		.loc 1 2767 19
 5188 034c 14301BE5 		ldr	r3, [fp, #-20]
 5189 0350 142083E5 		str	r2, [r3, #20]
2768:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 5190              		.loc 1 2768 18
 5191 0354 14301BE5 		ldr	r3, [fp, #-20]
 5192 0358 0020A0E3 		mov	r2, #0
 5193 035c 1C2083E5 		str	r2, [r3, #28]
2769:../../Source/Kernel/rme_kernel.c **** 
2770:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
2771:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 5194              		.loc 1 2771 8
 5195 0360 14001BE5 		ldr	r0, [fp, #-20]
 5196 0364 FEFFFFEB 		bl	__RME_Pgt_Init
2772:../../Source/Kernel/rme_kernel.c ****     {
2773:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2774:../../Source/Kernel/rme_kernel.c ****         
2775:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
2776:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr, Table_Size)==0);
2777:../../Source/Kernel/rme_kernel.c **** 
2778:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
2779:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
2780:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
2781:../../Source/Kernel/rme_kernel.c ****     }
2782:../../Source/Kernel/rme_kernel.c ****     else
2783:../../Source/Kernel/rme_kernel.c ****     {
2784:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2785:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2786:../../Source/Kernel/rme_kernel.c ****     }
2787:../../Source/Kernel/rme_kernel.c **** 
2788:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 5197              		.loc 1 2789 5
 5198 0368 14301BE5 		ldr	r3, [fp, #-20]
 5199 036c 0113A0E3 		mov	r1, #67108864
 5200 0370 0300A0E1 		mov	r0, r3
 5201 0374 FEFFFFEB 		bl	__RME_A7A_Write_Release
2790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
2791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 142


2793:../../Source/Kernel/rme_kernel.c **** 
2794:../../Source/Kernel/rme_kernel.c ****     return 0;
 5202              		.loc 1 2794 12
 5203 0378 0030A0E3 		mov	r3, #0
 5204              	.L309:
2795:../../Source/Kernel/rme_kernel.c **** }
 5205              		.loc 1 2795 1
 5206 037c 0300A0E1 		mov	r0, r3
 5207 0380 04D04BE2 		sub	sp, fp, #4
 5208              		.cfi_def_cfa 13, 8
 5209              		@ sp needed
 5210 0384 0088BDE8 		pop	{fp, pc}
 5211              		.cfi_endproc
 5212              	.LFE29:
 5214              		.section	.text._RME_Pgt_Boot_Add,"ax",%progbits
 5215              		.align	2
 5216              		.global	_RME_Pgt_Boot_Add
 5217              		.syntax unified
 5218              		.arm
 5220              	_RME_Pgt_Boot_Add:
 5221              	.LFB30:
2796:../../Source/Kernel/rme_kernel.c **** #endif
2797:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Crt ********************************************/
2798:../../Source/Kernel/rme_kernel.c **** 
2799:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Add *************************************************
2800:../../Source/Kernel/rme_kernel.c **** Description : This function is exclusively used to set up the Init process's
2801:../../Source/Kernel/rme_kernel.c ****               memory mappings in the booting process. When the system has
2802:../../Source/Kernel/rme_kernel.c ****               booted, it won't possible to fabricate pages like this.
2803:../../Source/Kernel/rme_kernel.c ****               Additionally, this function will set the cap to page table's 
2804:../../Source/Kernel/rme_kernel.c ****               property as unremovable. This means that it is not allowed to
2805:../../Source/Kernel/rme_kernel.c ****               remove any pages in the directory. It will set the reference
2806:../../Source/Kernel/rme_kernel.c ****               count of the capability as 1, thus making the capability to the
2807:../../Source/Kernel/rme_kernel.c ****               initial page table undeletable.
2808:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2809:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
2810:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2811:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Paddr - The physical address to map from.
2812:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to map to.
2813:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the user page.
2814:../../Source/Kernel/rme_kernel.c **** Output      : None.
2815:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2816:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2817:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2818:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Add(struct RME_Cap_Cpt* Cpt,
2819:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt, 
2820:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Paddr,
2821:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2822:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
2823:../../Source/Kernel/rme_kernel.c **** {
 5222              		.loc 1 2823 1
 5223              		.cfi_startproc
 5224              		@ args = 4, pretend = 0, frame = 32
 5225              		@ frame_needed = 1, uses_anonymous_args = 0
 5226 0000 00482DE9 		push	{fp, lr}
 5227              		.cfi_def_cfa_offset 8
 5228              		.cfi_offset 11, -8
 5229              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 143


 5230 0004 04B08DE2 		add	fp, sp, #4
 5231              		.cfi_def_cfa 11, 4
 5232 0008 20D04DE2 		sub	sp, sp, #32
 5233 000c 18000BE5 		str	r0, [fp, #-24]
 5234 0010 1C100BE5 		str	r1, [fp, #-28]
 5235 0014 20200BE5 		str	r2, [fp, #-32]
 5236 0018 24300BE5 		str	r3, [fp, #-36]
2824:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
2825:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2826:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord;
2827:../../Source/Kernel/rme_kernel.c ****     
2828:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2829:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 5237              		.loc 1 2829 5
 5238 001c 1C301BE5 		ldr	r3, [fp, #-28]
 5239 0020 803003E2 		and	r3, r3, #128
 5240 0024 000053E3 		cmp	r3, #0
 5241 0028 1C00001A 		bne	.L328
 5242              		.loc 1 2829 5 is_stmt 0 discriminator 1
 5243 002c 18301BE5 		ldr	r3, [fp, #-24]
 5244 0030 142093E5 		ldr	r2, [r3, #20]
 5245 0034 1C301BE5 		ldr	r3, [fp, #-28]
 5246 0038 030052E1 		cmp	r2, r3
 5247 003c 0100008A 		bhi	.L329
 5248              		.loc 1 2829 5 discriminator 3
 5249 0040 0230E0E3 		mvn	r3, #2
 5250              		.loc 1 2829 5
 5251 0044 730000EA 		b	.L330
 5252              	.L329:
 5253              		.loc 1 2829 5 discriminator 4
 5254 0048 1C301BE5 		ldr	r3, [fp, #-28]
 5255 004c 8322A0E1 		lsl	r2, r3, #5
 5256 0050 18301BE5 		ldr	r3, [fp, #-24]
 5257 0054 0C3093E5 		ldr	r3, [r3, #12]
 5258 0058 033082E0 		add	r3, r2, r3
 5259 005c 08300BE5 		str	r3, [fp, #-8]
 5260 0060 08301BE5 		ldr	r3, [fp, #-8]
 5261 0064 0300A0E1 		mov	r0, r3
 5262 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5263 006c 0C000BE5 		str	r0, [fp, #-12]
 5264              		.loc 1 2829 5 discriminator 1
 5265 0070 0C301BE5 		ldr	r3, [fp, #-12]
 5266 0074 FF3803E2 		and	r3, r3, #16711680
 5267 0078 020853E3 		cmp	r3, #131072
 5268 007c 0100001A 		bne	.L331
 5269              		.loc 1 2829 5 discriminator 5
 5270 0080 0830E0E3 		mvn	r3, #8
 5271              		.loc 1 2829 5
 5272 0084 630000EA 		b	.L330
 5273              	.L331:
 5274              		.loc 1 2829 5 discriminator 6
 5275 0088 0C301BE5 		ldr	r3, [fp, #-12]
 5276 008c 233CA0E1 		lsr	r3, r3, #24
 5277 0090 040053E3 		cmp	r3, #4
 5278 0094 3F00000A 		beq	.L332
 5279              		.loc 1 2829 5 discriminator 7
 5280 0098 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 144


 5281              		.loc 1 2829 5
 5282 009c 5D0000EA 		b	.L330
 5283              	.L328:
 5284              		.loc 1 2829 5 discriminator 2
 5285 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 5286 00a4 2324A0E1 		lsr	r2, r3, #8
 5287 00a8 18301BE5 		ldr	r3, [fp, #-24]
 5288 00ac 143093E5 		ldr	r3, [r3, #20]
 5289 00b0 030052E1 		cmp	r2, r3
 5290 00b4 0100003A 		bcc	.L333
 5291              		.loc 1 2829 5 discriminator 8
 5292 00b8 0230E0E3 		mvn	r3, #2
 5293              		.loc 1 2829 5
 5294 00bc 550000EA 		b	.L330
 5295              	.L333:
 5296              		.loc 1 2829 5 discriminator 9
 5297 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 5298 00c4 2334A0E1 		lsr	r3, r3, #8
 5299 00c8 8322A0E1 		lsl	r2, r3, #5
 5300 00cc 18301BE5 		ldr	r3, [fp, #-24]
 5301 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5302 00d4 033082E0 		add	r3, r2, r3
 5303 00d8 08300BE5 		str	r3, [fp, #-8]
 5304 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5305 00e0 0300A0E1 		mov	r0, r3
 5306 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5307 00e8 0C000BE5 		str	r0, [fp, #-12]
 5308              		.loc 1 2829 5 discriminator 1
 5309 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 5310 00f0 FF3803E2 		and	r3, r3, #16711680
 5311 00f4 020853E3 		cmp	r3, #131072
 5312 00f8 0100001A 		bne	.L334
 5313              		.loc 1 2829 5 discriminator 10
 5314 00fc 0830E0E3 		mvn	r3, #8
 5315              		.loc 1 2829 5
 5316 0100 440000EA 		b	.L330
 5317              	.L334:
 5318              		.loc 1 2829 5 discriminator 11
 5319 0104 0C301BE5 		ldr	r3, [fp, #-12]
 5320 0108 233CA0E1 		lsr	r3, r3, #24
 5321 010c 030053E3 		cmp	r3, #3
 5322 0110 0100000A 		beq	.L335
 5323              		.loc 1 2829 5 discriminator 12
 5324 0114 0130E0E3 		mvn	r3, #1
 5325              		.loc 1 2829 5
 5326 0118 3E0000EA 		b	.L330
 5327              	.L335:
 5328              		.loc 1 2829 5 discriminator 13
 5329 011c 1C301BE5 		ldr	r3, [fp, #-28]
 5330 0120 7F2003E2 		and	r2, r3, #127
 5331 0124 08301BE5 		ldr	r3, [fp, #-8]
 5332 0128 143093E5 		ldr	r3, [r3, #20]
 5333 012c 030052E1 		cmp	r2, r3
 5334 0130 0100003A 		bcc	.L336
 5335              		.loc 1 2829 5 discriminator 14
 5336 0134 0230E0E3 		mvn	r3, #2
 5337              		.loc 1 2829 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 145


 5338 0138 360000EA 		b	.L330
 5339              	.L336:
 5340              		.loc 1 2829 5 discriminator 15
 5341 013c 1C301BE5 		ldr	r3, [fp, #-28]
 5342 0140 7F3003E2 		and	r3, r3, #127
 5343 0144 8322A0E1 		lsl	r2, r3, #5
 5344 0148 08301BE5 		ldr	r3, [fp, #-8]
 5345 014c 0C3093E5 		ldr	r3, [r3, #12]
 5346 0150 033082E0 		add	r3, r2, r3
 5347 0154 08300BE5 		str	r3, [fp, #-8]
 5348 0158 08301BE5 		ldr	r3, [fp, #-8]
 5349 015c 0300A0E1 		mov	r0, r3
 5350 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5351 0164 0C000BE5 		str	r0, [fp, #-12]
 5352              		.loc 1 2829 5 discriminator 1
 5353 0168 0C301BE5 		ldr	r3, [fp, #-12]
 5354 016c FF3803E2 		and	r3, r3, #16711680
 5355 0170 020853E3 		cmp	r3, #131072
 5356 0174 0100001A 		bne	.L337
 5357              		.loc 1 2829 5 discriminator 16
 5358 0178 0830E0E3 		mvn	r3, #8
 5359              		.loc 1 2829 5
 5360 017c 250000EA 		b	.L330
 5361              	.L337:
 5362              		.loc 1 2829 5 discriminator 17
 5363 0180 0C301BE5 		ldr	r3, [fp, #-12]
 5364 0184 233CA0E1 		lsr	r3, r3, #24
 5365 0188 040053E3 		cmp	r3, #4
 5366 018c 0100000A 		beq	.L332
 5367              		.loc 1 2829 5 discriminator 18
 5368 0190 0130E0E3 		mvn	r3, #1
 5369              		.loc 1 2829 5
 5370 0194 1F0000EA 		b	.L330
 5371              	.L332:
2830:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);    
2831:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen, but don't check their properties */
2832:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,0U);
2833:../../Source/Kernel/rme_kernel.c **** 
2834:../../Source/Kernel/rme_kernel.c ****     Szord=RME_PGT_SZORD(Pgt_Op->Order);
 5372              		.loc 1 2834 11 is_stmt 1
 5373 0198 08301BE5 		ldr	r3, [fp, #-8]
 5374 019c 143093E5 		ldr	r3, [r3, #20]
 5375              		.loc 1 2834 10
 5376 01a0 2338A0E1 		lsr	r3, r3, #16
 5377 01a4 10300BE5 		str	r3, [fp, #-16]
2835:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2836:../../Source/Kernel/rme_kernel.c ****     /* Check if we force identical mapping */
2837:../../Source/Kernel/rme_kernel.c ****     if(Szord==RME_WORD_BIT)
2838:../../Source/Kernel/rme_kernel.c ****     {
2839:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2840:../../Source/Kernel/rme_kernel.c ****         
2841:../../Source/Kernel/rme_kernel.c ****         if((Paddr!=0U)||(Pos!=0U))
2842:../../Source/Kernel/rme_kernel.c ****         {
2843:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2844:../../Source/Kernel/rme_kernel.c ****             
2845:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2846:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 146


2847:../../Source/Kernel/rme_kernel.c ****         else
2848:../../Source/Kernel/rme_kernel.c ****         {
2849:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2850:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2851:../../Source/Kernel/rme_kernel.c ****         }
2852:../../Source/Kernel/rme_kernel.c ****     }
2853:../../Source/Kernel/rme_kernel.c ****     else if(Paddr!=(RME_PGT_BASE(Pgt_Op->Base)+(Pos<<Szord)))
2854:../../Source/Kernel/rme_kernel.c ****     {
2855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2856:../../Source/Kernel/rme_kernel.c ****         
2857:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
2858:../../Source/Kernel/rme_kernel.c ****     }
2859:../../Source/Kernel/rme_kernel.c ****     else
2860:../../Source/Kernel/rme_kernel.c ****     {
2861:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2862:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2863:../../Source/Kernel/rme_kernel.c ****     }
2864:../../Source/Kernel/rme_kernel.c **** #endif
2865:../../Source/Kernel/rme_kernel.c **** 
2866:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range and the granularity is allowed */
2867:../../Source/Kernel/rme_kernel.c ****     if(((Pos>>RME_PGT_NMORD(Pgt_Op->Order))!=0U)||
 5378              		.loc 1 2867 15
 5379 01a8 08301BE5 		ldr	r3, [fp, #-8]
 5380 01ac 143093E5 		ldr	r3, [r3, #20]
 5381 01b0 7330FFE6 		uxth	r3, r3
 5382              		.loc 1 2867 13
 5383 01b4 24201BE5 		ldr	r2, [fp, #-36]
 5384 01b8 3233A0E1 		lsr	r3, r2, r3
 5385              		.loc 1 2867 7
 5386 01bc 000053E3 		cmp	r3, #0
 5387 01c0 0700001A 		bne	.L338
2868:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5388              		.loc 1 2868 16
 5389 01c4 10301BE5 		ldr	r3, [fp, #-16]
 5390 01c8 203063E2 		rsb	r3, r3, #32
 5391 01cc 0020E0E3 		mvn	r2, #0
 5392 01d0 3223A0E1 		lsr	r2, r2, r3
 5393              		.loc 1 2868 15
 5394 01d4 20301BE5 		ldr	r3, [fp, #-32]
 5395 01d8 023003E0 		and	r3, r3, r2
2867:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5396              		.loc 1 2867 49 discriminator 1
 5397 01dc 000053E3 		cmp	r3, #0
 5398 01e0 0100000A 		beq	.L339
 5399              	.L338:
2869:../../Source/Kernel/rme_kernel.c ****     {
2870:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2871:../../Source/Kernel/rme_kernel.c ****         
2872:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5400              		.loc 1 2872 16
 5401 01e4 6430E0E3 		mvn	r3, #100
 5402 01e8 0A0000EA 		b	.L330
 5403              	.L339:
2873:../../Source/Kernel/rme_kernel.c ****     }
2874:../../Source/Kernel/rme_kernel.c ****     else
2875:../../Source/Kernel/rme_kernel.c ****     {
2876:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 147


2877:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2878:../../Source/Kernel/rme_kernel.c ****     }
2879:../../Source/Kernel/rme_kernel.c **** 
2880:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
2881:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
2882:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag)!=0)
 5404              		.loc 1 2882 8
 5405 01ec 04309BE5 		ldr	r3, [fp, #4]
 5406 01f0 24201BE5 		ldr	r2, [fp, #-36]
 5407 01f4 20101BE5 		ldr	r1, [fp, #-32]
 5408 01f8 08001BE5 		ldr	r0, [fp, #-8]
 5409 01fc FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5410 0200 0030A0E1 		mov	r3, r0
 5411              		.loc 1 2882 7 discriminator 1
 5412 0204 000053E3 		cmp	r3, #0
 5413 0208 0100000A 		beq	.L340
2883:../../Source/Kernel/rme_kernel.c ****     {
2884:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2885:../../Source/Kernel/rme_kernel.c ****         
2886:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 5414              		.loc 1 2886 16
 5415 020c 6530E0E3 		mvn	r3, #101
 5416 0210 000000EA 		b	.L330
 5417              	.L340:
2887:../../Source/Kernel/rme_kernel.c ****     }
2888:../../Source/Kernel/rme_kernel.c ****     else
2889:../../Source/Kernel/rme_kernel.c ****     {
2890:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2891:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2892:../../Source/Kernel/rme_kernel.c ****     }
2893:../../Source/Kernel/rme_kernel.c **** 
2894:../../Source/Kernel/rme_kernel.c ****     return 0;
 5418              		.loc 1 2894 12
 5419 0214 0030A0E3 		mov	r3, #0
 5420              	.L330:
2895:../../Source/Kernel/rme_kernel.c **** }
 5421              		.loc 1 2895 1
 5422 0218 0300A0E1 		mov	r0, r3
 5423 021c 04D04BE2 		sub	sp, fp, #4
 5424              		.cfi_def_cfa 13, 8
 5425              		@ sp needed
 5426 0220 0088BDE8 		pop	{fp, pc}
 5427              		.cfi_endproc
 5428              	.LFE30:
 5430              		.section	.text._RME_Pgt_Boot_Con,"ax",%progbits
 5431              		.align	2
 5432              		.global	_RME_Pgt_Boot_Con
 5433              		.syntax unified
 5434              		.arm
 5436              	_RME_Pgt_Boot_Con:
 5437              	.LFB31:
2896:../../Source/Kernel/rme_kernel.c **** #endif
2897:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Add ********************************************/
2898:../../Source/Kernel/rme_kernel.c **** 
2899:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Con *************************************************
2900:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table from the parent page table at boot-time.
2901:../../Source/Kernel/rme_kernel.c ****               This does not check flags.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 148


2902:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2903:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
2904:../../Source/Kernel/rme_kernel.c ****                                          table.
2905:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
2906:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
2907:../../Source/Kernel/rme_kernel.c ****                               page table to.
2908:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
2909:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
2910:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
2911:../../Source/Kernel/rme_kernel.c **** Output      : None.
2912:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2913:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2914:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2915:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Con(struct RME_Cap_Cpt* Cpt,
2916:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Parent,
2917:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2918:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Child,
2919:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag_Child)
2920:../../Source/Kernel/rme_kernel.c **** {
 5438              		.loc 1 2920 1
 5439              		.cfi_startproc
 5440              		@ args = 4, pretend = 0, frame = 40
 5441              		@ frame_needed = 1, uses_anonymous_args = 0
 5442 0000 00482DE9 		push	{fp, lr}
 5443              		.cfi_def_cfa_offset 8
 5444              		.cfi_offset 11, -8
 5445              		.cfi_offset 14, -4
 5446 0004 04B08DE2 		add	fp, sp, #4
 5447              		.cfi_def_cfa 11, 4
 5448 0008 28D04DE2 		sub	sp, sp, #40
 5449 000c 20000BE5 		str	r0, [fp, #-32]
 5450 0010 24100BE5 		str	r1, [fp, #-36]
 5451 0014 28200BE5 		str	r2, [fp, #-40]
 5452 0018 2C300BE5 		str	r3, [fp, #-44]
2921:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
2922:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
2923:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
2924:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2925:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
2926:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
2927:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2928:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
2929:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
2930:../../Source/Kernel/rme_kernel.c **** #endif
2931:../../Source/Kernel/rme_kernel.c ****     
2932:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2933:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 5453              		.loc 1 2933 5
 5454 001c 24301BE5 		ldr	r3, [fp, #-36]
 5455 0020 803003E2 		and	r3, r3, #128
 5456 0024 000053E3 		cmp	r3, #0
 5457 0028 1C00001A 		bne	.L342
 5458              		.loc 1 2933 5 is_stmt 0 discriminator 1
 5459 002c 20301BE5 		ldr	r3, [fp, #-32]
 5460 0030 142093E5 		ldr	r2, [r3, #20]
 5461 0034 24301BE5 		ldr	r3, [fp, #-36]
 5462 0038 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 149


 5463 003c 0100008A 		bhi	.L343
 5464              		.loc 1 2933 5 discriminator 3
 5465 0040 0230E0E3 		mvn	r3, #2
 5466              		.loc 1 2933 5
 5467 0044 F70000EA 		b	.L344
 5468              	.L343:
 5469              		.loc 1 2933 5 discriminator 4
 5470 0048 24301BE5 		ldr	r3, [fp, #-36]
 5471 004c 8322A0E1 		lsl	r2, r3, #5
 5472 0050 20301BE5 		ldr	r3, [fp, #-32]
 5473 0054 0C3093E5 		ldr	r3, [r3, #12]
 5474 0058 033082E0 		add	r3, r2, r3
 5475 005c 08300BE5 		str	r3, [fp, #-8]
 5476 0060 08301BE5 		ldr	r3, [fp, #-8]
 5477 0064 0300A0E1 		mov	r0, r3
 5478 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5479 006c 10000BE5 		str	r0, [fp, #-16]
 5480              		.loc 1 2933 5 discriminator 1
 5481 0070 10301BE5 		ldr	r3, [fp, #-16]
 5482 0074 FF3803E2 		and	r3, r3, #16711680
 5483 0078 020853E3 		cmp	r3, #131072
 5484 007c 0100001A 		bne	.L345
 5485              		.loc 1 2933 5 discriminator 5
 5486 0080 0830E0E3 		mvn	r3, #8
 5487              		.loc 1 2933 5
 5488 0084 E70000EA 		b	.L344
 5489              	.L345:
 5490              		.loc 1 2933 5 discriminator 6
 5491 0088 10301BE5 		ldr	r3, [fp, #-16]
 5492 008c 233CA0E1 		lsr	r3, r3, #24
 5493 0090 040053E3 		cmp	r3, #4
 5494 0094 3F00000A 		beq	.L346
 5495              		.loc 1 2933 5 discriminator 7
 5496 0098 0130E0E3 		mvn	r3, #1
 5497              		.loc 1 2933 5
 5498 009c E10000EA 		b	.L344
 5499              	.L342:
 5500              		.loc 1 2933 5 discriminator 2
 5501 00a0 24301BE5 		ldr	r3, [fp, #-36]
 5502 00a4 2324A0E1 		lsr	r2, r3, #8
 5503 00a8 20301BE5 		ldr	r3, [fp, #-32]
 5504 00ac 143093E5 		ldr	r3, [r3, #20]
 5505 00b0 030052E1 		cmp	r2, r3
 5506 00b4 0100003A 		bcc	.L347
 5507              		.loc 1 2933 5 discriminator 8
 5508 00b8 0230E0E3 		mvn	r3, #2
 5509              		.loc 1 2933 5
 5510 00bc D90000EA 		b	.L344
 5511              	.L347:
 5512              		.loc 1 2933 5 discriminator 9
 5513 00c0 24301BE5 		ldr	r3, [fp, #-36]
 5514 00c4 2334A0E1 		lsr	r3, r3, #8
 5515 00c8 8322A0E1 		lsl	r2, r3, #5
 5516 00cc 20301BE5 		ldr	r3, [fp, #-32]
 5517 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5518 00d4 033082E0 		add	r3, r2, r3
 5519 00d8 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 150


 5520 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5521 00e0 0300A0E1 		mov	r0, r3
 5522 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5523 00e8 10000BE5 		str	r0, [fp, #-16]
 5524              		.loc 1 2933 5 discriminator 1
 5525 00ec 10301BE5 		ldr	r3, [fp, #-16]
 5526 00f0 FF3803E2 		and	r3, r3, #16711680
 5527 00f4 020853E3 		cmp	r3, #131072
 5528 00f8 0100001A 		bne	.L348
 5529              		.loc 1 2933 5 discriminator 10
 5530 00fc 0830E0E3 		mvn	r3, #8
 5531              		.loc 1 2933 5
 5532 0100 C80000EA 		b	.L344
 5533              	.L348:
 5534              		.loc 1 2933 5 discriminator 11
 5535 0104 10301BE5 		ldr	r3, [fp, #-16]
 5536 0108 233CA0E1 		lsr	r3, r3, #24
 5537 010c 030053E3 		cmp	r3, #3
 5538 0110 0100000A 		beq	.L349
 5539              		.loc 1 2933 5 discriminator 12
 5540 0114 0130E0E3 		mvn	r3, #1
 5541              		.loc 1 2933 5
 5542 0118 C20000EA 		b	.L344
 5543              	.L349:
 5544              		.loc 1 2933 5 discriminator 13
 5545 011c 24301BE5 		ldr	r3, [fp, #-36]
 5546 0120 7F2003E2 		and	r2, r3, #127
 5547 0124 08301BE5 		ldr	r3, [fp, #-8]
 5548 0128 143093E5 		ldr	r3, [r3, #20]
 5549 012c 030052E1 		cmp	r2, r3
 5550 0130 0100003A 		bcc	.L350
 5551              		.loc 1 2933 5 discriminator 14
 5552 0134 0230E0E3 		mvn	r3, #2
 5553              		.loc 1 2933 5
 5554 0138 BA0000EA 		b	.L344
 5555              	.L350:
 5556              		.loc 1 2933 5 discriminator 15
 5557 013c 24301BE5 		ldr	r3, [fp, #-36]
 5558 0140 7F3003E2 		and	r3, r3, #127
 5559 0144 8322A0E1 		lsl	r2, r3, #5
 5560 0148 08301BE5 		ldr	r3, [fp, #-8]
 5561 014c 0C3093E5 		ldr	r3, [r3, #12]
 5562 0150 033082E0 		add	r3, r2, r3
 5563 0154 08300BE5 		str	r3, [fp, #-8]
 5564 0158 08301BE5 		ldr	r3, [fp, #-8]
 5565 015c 0300A0E1 		mov	r0, r3
 5566 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5567 0164 10000BE5 		str	r0, [fp, #-16]
 5568              		.loc 1 2933 5 discriminator 1
 5569 0168 10301BE5 		ldr	r3, [fp, #-16]
 5570 016c FF3803E2 		and	r3, r3, #16711680
 5571 0170 020853E3 		cmp	r3, #131072
 5572 0174 0100001A 		bne	.L351
 5573              		.loc 1 2933 5 discriminator 16
 5574 0178 0830E0E3 		mvn	r3, #8
 5575              		.loc 1 2933 5
 5576 017c A90000EA 		b	.L344
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 151


 5577              	.L351:
 5578              		.loc 1 2933 5 discriminator 17
 5579 0180 10301BE5 		ldr	r3, [fp, #-16]
 5580 0184 233CA0E1 		lsr	r3, r3, #24
 5581 0188 040053E3 		cmp	r3, #4
 5582 018c 0100000A 		beq	.L346
 5583              		.loc 1 2933 5 discriminator 18
 5584 0190 0130E0E3 		mvn	r3, #1
 5585              		.loc 1 2933 5
 5586 0194 A30000EA 		b	.L344
 5587              	.L346:
2934:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
2935:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 5588              		.loc 1 2935 5 is_stmt 1
 5589 0198 2C301BE5 		ldr	r3, [fp, #-44]
 5590 019c 803003E2 		and	r3, r3, #128
 5591 01a0 000053E3 		cmp	r3, #0
 5592 01a4 1C00001A 		bne	.L352
 5593              		.loc 1 2935 5 is_stmt 0 discriminator 1
 5594 01a8 20301BE5 		ldr	r3, [fp, #-32]
 5595 01ac 142093E5 		ldr	r2, [r3, #20]
 5596 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 5597 01b4 030052E1 		cmp	r2, r3
 5598 01b8 0100008A 		bhi	.L353
 5599              		.loc 1 2935 5 discriminator 3
 5600 01bc 0230E0E3 		mvn	r3, #2
 5601              		.loc 1 2935 5
 5602 01c0 980000EA 		b	.L344
 5603              	.L353:
 5604              		.loc 1 2935 5 discriminator 4
 5605 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 5606 01c8 8322A0E1 		lsl	r2, r3, #5
 5607 01cc 20301BE5 		ldr	r3, [fp, #-32]
 5608 01d0 0C3093E5 		ldr	r3, [r3, #12]
 5609 01d4 033082E0 		add	r3, r2, r3
 5610 01d8 0C300BE5 		str	r3, [fp, #-12]
 5611 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 5612 01e0 0300A0E1 		mov	r0, r3
 5613 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5614 01e8 10000BE5 		str	r0, [fp, #-16]
 5615              		.loc 1 2935 5 discriminator 1
 5616 01ec 10301BE5 		ldr	r3, [fp, #-16]
 5617 01f0 FF3803E2 		and	r3, r3, #16711680
 5618 01f4 020853E3 		cmp	r3, #131072
 5619 01f8 0100001A 		bne	.L354
 5620              		.loc 1 2935 5 discriminator 5
 5621 01fc 0830E0E3 		mvn	r3, #8
 5622              		.loc 1 2935 5
 5623 0200 880000EA 		b	.L344
 5624              	.L354:
 5625              		.loc 1 2935 5 discriminator 6
 5626 0204 10301BE5 		ldr	r3, [fp, #-16]
 5627 0208 233CA0E1 		lsr	r3, r3, #24
 5628 020c 040053E3 		cmp	r3, #4
 5629 0210 3F00000A 		beq	.L355
 5630              		.loc 1 2935 5 discriminator 7
 5631 0214 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 152


 5632              		.loc 1 2935 5
 5633 0218 820000EA 		b	.L344
 5634              	.L352:
 5635              		.loc 1 2935 5 discriminator 2
 5636 021c 2C301BE5 		ldr	r3, [fp, #-44]
 5637 0220 2324A0E1 		lsr	r2, r3, #8
 5638 0224 20301BE5 		ldr	r3, [fp, #-32]
 5639 0228 143093E5 		ldr	r3, [r3, #20]
 5640 022c 030052E1 		cmp	r2, r3
 5641 0230 0100003A 		bcc	.L356
 5642              		.loc 1 2935 5 discriminator 8
 5643 0234 0230E0E3 		mvn	r3, #2
 5644              		.loc 1 2935 5
 5645 0238 7A0000EA 		b	.L344
 5646              	.L356:
 5647              		.loc 1 2935 5 discriminator 9
 5648 023c 2C301BE5 		ldr	r3, [fp, #-44]
 5649 0240 2334A0E1 		lsr	r3, r3, #8
 5650 0244 8322A0E1 		lsl	r2, r3, #5
 5651 0248 20301BE5 		ldr	r3, [fp, #-32]
 5652 024c 0C3093E5 		ldr	r3, [r3, #12]
 5653 0250 033082E0 		add	r3, r2, r3
 5654 0254 0C300BE5 		str	r3, [fp, #-12]
 5655 0258 0C301BE5 		ldr	r3, [fp, #-12]
 5656 025c 0300A0E1 		mov	r0, r3
 5657 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5658 0264 10000BE5 		str	r0, [fp, #-16]
 5659              		.loc 1 2935 5 discriminator 1
 5660 0268 10301BE5 		ldr	r3, [fp, #-16]
 5661 026c FF3803E2 		and	r3, r3, #16711680
 5662 0270 020853E3 		cmp	r3, #131072
 5663 0274 0100001A 		bne	.L357
 5664              		.loc 1 2935 5 discriminator 10
 5665 0278 0830E0E3 		mvn	r3, #8
 5666              		.loc 1 2935 5
 5667 027c 690000EA 		b	.L344
 5668              	.L357:
 5669              		.loc 1 2935 5 discriminator 11
 5670 0280 10301BE5 		ldr	r3, [fp, #-16]
 5671 0284 233CA0E1 		lsr	r3, r3, #24
 5672 0288 030053E3 		cmp	r3, #3
 5673 028c 0100000A 		beq	.L358
 5674              		.loc 1 2935 5 discriminator 12
 5675 0290 0130E0E3 		mvn	r3, #1
 5676              		.loc 1 2935 5
 5677 0294 630000EA 		b	.L344
 5678              	.L358:
 5679              		.loc 1 2935 5 discriminator 13
 5680 0298 2C301BE5 		ldr	r3, [fp, #-44]
 5681 029c 7F2003E2 		and	r2, r3, #127
 5682 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 5683 02a4 143093E5 		ldr	r3, [r3, #20]
 5684 02a8 030052E1 		cmp	r2, r3
 5685 02ac 0100003A 		bcc	.L359
 5686              		.loc 1 2935 5 discriminator 14
 5687 02b0 0230E0E3 		mvn	r3, #2
 5688              		.loc 1 2935 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 153


 5689 02b4 5B0000EA 		b	.L344
 5690              	.L359:
 5691              		.loc 1 2935 5 discriminator 15
 5692 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 5693 02bc 7F3003E2 		and	r3, r3, #127
 5694 02c0 8322A0E1 		lsl	r2, r3, #5
 5695 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 5696 02c8 0C3093E5 		ldr	r3, [r3, #12]
 5697 02cc 033082E0 		add	r3, r2, r3
 5698 02d0 0C300BE5 		str	r3, [fp, #-12]
 5699 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 5700 02d8 0300A0E1 		mov	r0, r3
 5701 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5702 02e0 10000BE5 		str	r0, [fp, #-16]
 5703              		.loc 1 2935 5 discriminator 1
 5704 02e4 10301BE5 		ldr	r3, [fp, #-16]
 5705 02e8 FF3803E2 		and	r3, r3, #16711680
 5706 02ec 020853E3 		cmp	r3, #131072
 5707 02f0 0100001A 		bne	.L360
 5708              		.loc 1 2935 5 discriminator 16
 5709 02f4 0830E0E3 		mvn	r3, #8
 5710              		.loc 1 2935 5
 5711 02f8 4A0000EA 		b	.L344
 5712              	.L360:
 5713              		.loc 1 2935 5 discriminator 17
 5714 02fc 10301BE5 		ldr	r3, [fp, #-16]
 5715 0300 233CA0E1 		lsr	r3, r3, #24
 5716 0304 040053E3 		cmp	r3, #4
 5717 0308 0100000A 		beq	.L355
 5718              		.loc 1 2935 5 discriminator 18
 5719 030c 0130E0E3 		mvn	r3, #1
 5720              		.loc 1 2935 5
 5721 0310 440000EA 		b	.L344
 5722              	.L355:
2936:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
2937:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen but don't check flags */
2938:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent,0U);
2939:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child,0U);
2940:../../Source/Kernel/rme_kernel.c ****     
2941:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
2942:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 5723              		.loc 1 2942 14 is_stmt 1
 5724 0314 08301BE5 		ldr	r3, [fp, #-8]
 5725 0318 143093E5 		ldr	r3, [r3, #20]
 5726 031c 7330FFE6 		uxth	r3, r3
 5727              		.loc 1 2942 12
 5728 0320 28201BE5 		ldr	r2, [fp, #-40]
 5729 0324 3233A0E1 		lsr	r3, r2, r3
 5730              		.loc 1 2942 7
 5731 0328 000053E3 		cmp	r3, #0
 5732 032c 0100000A 		beq	.L361
2943:../../Source/Kernel/rme_kernel.c ****     {
2944:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2945:../../Source/Kernel/rme_kernel.c ****         
2946:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5733              		.loc 1 2946 16
 5734 0330 6430E0E3 		mvn	r3, #100
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 154


 5735 0334 3B0000EA 		b	.L344
 5736              	.L361:
2947:../../Source/Kernel/rme_kernel.c ****     }
2948:../../Source/Kernel/rme_kernel.c ****     else
2949:../../Source/Kernel/rme_kernel.c ****     {
2950:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2951:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2952:../../Source/Kernel/rme_kernel.c ****     }
2953:../../Source/Kernel/rme_kernel.c ****     
2954:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
2955:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 5737              		.loc 1 2955 17
 5738 0338 0C301BE5 		ldr	r3, [fp, #-12]
 5739 033c 143093E5 		ldr	r3, [r3, #20]
 5740 0340 7320FFE6 		uxth	r2, r3
 5741              		.loc 1 2955 49
 5742 0344 0C301BE5 		ldr	r3, [fp, #-12]
 5743 0348 143093E5 		ldr	r3, [r3, #20]
 5744 034c 2338A0E1 		lsr	r3, r3, #16
 5745              		.loc 1 2955 16
 5746 0350 033082E0 		add	r3, r2, r3
 5747 0354 14300BE5 		str	r3, [fp, #-20]
2956:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 5748              		.loc 1 2956 18
 5749 0358 08301BE5 		ldr	r3, [fp, #-8]
 5750 035c 143093E5 		ldr	r3, [r3, #20]
 5751              		.loc 1 2956 17
 5752 0360 2338A0E1 		lsr	r3, r3, #16
 5753 0364 18300BE5 		str	r3, [fp, #-24]
2957:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 5754              		.loc 1 2957 7
 5755 0368 18201BE5 		ldr	r2, [fp, #-24]
 5756 036c 14301BE5 		ldr	r3, [fp, #-20]
 5757 0370 030052E1 		cmp	r2, r3
 5758 0374 0100002A 		bcs	.L362
2958:../../Source/Kernel/rme_kernel.c ****     {
2959:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2960:../../Source/Kernel/rme_kernel.c ****         
2961:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5759              		.loc 1 2961 16
 5760 0378 6430E0E3 		mvn	r3, #100
 5761 037c 290000EA 		b	.L344
 5762              	.L362:
2962:../../Source/Kernel/rme_kernel.c ****     }
2963:../../Source/Kernel/rme_kernel.c ****     else
2964:../../Source/Kernel/rme_kernel.c ****     {
2965:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2966:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2967:../../Source/Kernel/rme_kernel.c ****     }
2968:../../Source/Kernel/rme_kernel.c **** 
2969:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2970:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
2971:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
2972:../../Source/Kernel/rme_kernel.c ****     {
2973:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2974:../../Source/Kernel/rme_kernel.c ****         
2975:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 155


2976:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
2977:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
2978:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
2979:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
2980:../../Source/Kernel/rme_kernel.c ****         {
2981:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2982:../../Source/Kernel/rme_kernel.c ****             
2983:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2984:../../Source/Kernel/rme_kernel.c ****         }
2985:../../Source/Kernel/rme_kernel.c ****         else
2986:../../Source/Kernel/rme_kernel.c ****         {
2987:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2988:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2989:../../Source/Kernel/rme_kernel.c ****         }
2990:../../Source/Kernel/rme_kernel.c ****         
2991:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
2992:../../Source/Kernel/rme_kernel.c ****         
2993:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
2994:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
2995:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
2996:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
2997:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
2998:../../Source/Kernel/rme_kernel.c ****         {
2999:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3000:../../Source/Kernel/rme_kernel.c ****             
3001:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3002:../../Source/Kernel/rme_kernel.c ****             {
3003:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3004:../../Source/Kernel/rme_kernel.c **** 
3005:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3006:../../Source/Kernel/rme_kernel.c ****             }
3007:../../Source/Kernel/rme_kernel.c ****             else
3008:../../Source/Kernel/rme_kernel.c ****             {
3009:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3010:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3011:../../Source/Kernel/rme_kernel.c ****             }
3012:../../Source/Kernel/rme_kernel.c ****         }
3013:../../Source/Kernel/rme_kernel.c ****         else
3014:../../Source/Kernel/rme_kernel.c ****         {
3015:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3016:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3017:../../Source/Kernel/rme_kernel.c ****         }
3018:../../Source/Kernel/rme_kernel.c ****     }
3019:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, no need to check */
3020:../../Source/Kernel/rme_kernel.c ****     else
3021:../../Source/Kernel/rme_kernel.c ****     {
3022:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3023:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3024:../../Source/Kernel/rme_kernel.c ****     }
3025:../../Source/Kernel/rme_kernel.c **** #else
3026:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3027:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 5763              		.loc 1 3027 7
 5764 0380 18201BE5 		ldr	r2, [fp, #-24]
 5765 0384 14301BE5 		ldr	r3, [fp, #-20]
 5766 0388 030052E1 		cmp	r2, r3
 5767 038c 0100000A 		beq	.L363
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 156


3028:../../Source/Kernel/rme_kernel.c ****     {
3029:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3030:../../Source/Kernel/rme_kernel.c **** 
3031:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5768              		.loc 1 3031 16
 5769 0390 6430E0E3 		mvn	r3, #100
 5770 0394 230000EA 		b	.L344
 5771              	.L363:
3032:../../Source/Kernel/rme_kernel.c ****     }
3033:../../Source/Kernel/rme_kernel.c ****     else
3034:../../Source/Kernel/rme_kernel.c ****     {
3035:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3036:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3037:../../Source/Kernel/rme_kernel.c ****     }
3038:../../Source/Kernel/rme_kernel.c **** #endif
3039:../../Source/Kernel/rme_kernel.c **** 
3040:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3041:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3042:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 5772              		.loc 1 3042 8
 5773 0398 04309BE5 		ldr	r3, [fp, #4]
 5774 039c 0C201BE5 		ldr	r2, [fp, #-12]
 5775 03a0 28101BE5 		ldr	r1, [fp, #-40]
 5776 03a4 08001BE5 		ldr	r0, [fp, #-8]
 5777 03a8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3043:../../Source/Kernel/rme_kernel.c ****     {
3044:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3045:../../Source/Kernel/rme_kernel.c **** 
3046:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3047:../../Source/Kernel/rme_kernel.c ****     }
3048:../../Source/Kernel/rme_kernel.c ****     else
3049:../../Source/Kernel/rme_kernel.c ****     {
3050:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3051:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3052:../../Source/Kernel/rme_kernel.c ****     }
3053:../../Source/Kernel/rme_kernel.c ****     
3054:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3055:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 5778              		.loc 1 3055 14
 5779 03ac 08301BE5 		ldr	r3, [fp, #-8]
 5780 03b0 003093E5 		ldr	r3, [r3]
 5781 03b4 7330FFE6 		uxth	r3, r3
 5782 03b8 000053E3 		cmp	r3, #0
 5783 03bc 0200000A 		beq	.L364
 5784              		.loc 1 3055 14 is_stmt 0 discriminator 1
 5785 03c0 08301BE5 		ldr	r3, [fp, #-8]
 5786 03c4 043093E5 		ldr	r3, [r3, #4]
 5787 03c8 000000EA 		b	.L365
 5788              	.L364:
 5789              		.loc 1 3055 14 discriminator 2
 5790 03cc 08301BE5 		ldr	r3, [fp, #-8]
 5791              	.L365:
 5792              		.loc 1 3055 13 is_stmt 1 discriminator 4
 5793 03d0 1C300BE5 		str	r3, [fp, #-28]
3056:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5794              		.loc 1 3056 5
 5795 03d4 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 157


 5796 03d8 043083E2 		add	r3, r3, #4
 5797 03dc 0110A0E3 		mov	r1, #1
 5798 03e0 0300A0E1 		mov	r0, r3
 5799 03e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3057:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 5800              		.loc 1 3057 14
 5801 03e8 0C301BE5 		ldr	r3, [fp, #-12]
 5802 03ec 003093E5 		ldr	r3, [r3]
 5803 03f0 7330FFE6 		uxth	r3, r3
 5804 03f4 000053E3 		cmp	r3, #0
 5805 03f8 0200000A 		beq	.L366
 5806              		.loc 1 3057 14 is_stmt 0 discriminator 1
 5807 03fc 0C301BE5 		ldr	r3, [fp, #-12]
 5808 0400 043093E5 		ldr	r3, [r3, #4]
 5809 0404 000000EA 		b	.L367
 5810              	.L366:
 5811              		.loc 1 3057 14 discriminator 2
 5812 0408 0C301BE5 		ldr	r3, [fp, #-12]
 5813              	.L367:
 5814              		.loc 1 3057 13 is_stmt 1 discriminator 4
 5815 040c 1C300BE5 		str	r3, [fp, #-28]
3058:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5816              		.loc 1 3058 5
 5817 0410 1C301BE5 		ldr	r3, [fp, #-28]
 5818 0414 043083E2 		add	r3, r3, #4
 5819 0418 0110A0E3 		mov	r1, #1
 5820 041c 0300A0E1 		mov	r0, r3
 5821 0420 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3059:../../Source/Kernel/rme_kernel.c **** 
3060:../../Source/Kernel/rme_kernel.c ****     return 0;
 5822              		.loc 1 3060 12
 5823 0424 0030A0E3 		mov	r3, #0
 5824              	.L344:
3061:../../Source/Kernel/rme_kernel.c **** }
 5825              		.loc 1 3061 1
 5826 0428 0300A0E1 		mov	r0, r3
 5827 042c 04D04BE2 		sub	sp, fp, #4
 5828              		.cfi_def_cfa 13, 8
 5829              		@ sp needed
 5830 0430 0088BDE8 		pop	{fp, pc}
 5831              		.cfi_endproc
 5832              	.LFE31:
 5834              		.section	.text._RME_Pgt_Crt,"ax",%progbits
 5835              		.align	2
 5836              		.syntax unified
 5837              		.arm
 5839              	_RME_Pgt_Crt:
 5840              	.LFB32:
3062:../../Source/Kernel/rme_kernel.c **** #endif
3063:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Con ********************************************/
3064:../../Source/Kernel/rme_kernel.c **** 
3065:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Crt ******************************************************
3066:../../Source/Kernel/rme_kernel.c **** Description : Create a page table.
3067:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3068:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
3069:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
3070:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 158


3071:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
3072:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3073:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3074:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3075:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3076:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the page
3077:../../Source/Kernel/rme_kernel.c ****                                 table kernel object.
3078:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
3079:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
3080:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
3081:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
3082:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page 
3083:../../Source/Kernel/rme_kernel.c ****                                  directories into this one.
3084:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
3085:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the 
3086:../../Source/Kernel/rme_kernel.c ****                                      page directory.
3087:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the table.
3088:../../Source/Kernel/rme_kernel.c **** Output      : None.
3089:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3090:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3091:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3092:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Crt(struct RME_Cap_Cpt* Cpt,
3093:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3094:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
3095:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3096:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
3097:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Base,
3098:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Top,
3099:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Size_Order,
3100:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Num_Order)
3101:../../Source/Kernel/rme_kernel.c **** {
 5841              		.loc 1 3101 1
 5842              		.cfi_startproc
 5843              		@ args = 20, pretend = 0, frame = 40
 5844              		@ frame_needed = 1, uses_anonymous_args = 0
 5845 0000 00482DE9 		push	{fp, lr}
 5846              		.cfi_def_cfa_offset 8
 5847              		.cfi_offset 11, -8
 5848              		.cfi_offset 14, -4
 5849 0004 04B08DE2 		add	fp, sp, #4
 5850              		.cfi_def_cfa 11, 4
 5851 0008 30D04DE2 		sub	sp, sp, #48
 5852 000c 20000BE5 		str	r0, [fp, #-32]
 5853 0010 24100BE5 		str	r1, [fp, #-36]
 5854 0014 28200BE5 		str	r2, [fp, #-40]
 5855 0018 2C300BE5 		str	r3, [fp, #-44]
3102:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3103:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
3104:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
3105:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3106:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
3107:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3108:../../Source/Kernel/rme_kernel.c ****     
3109:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
3110:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
3111:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 5856              		.loc 1 3111 19
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 159


 5857 001c 10209BE5 		ldr	r2, [fp, #16]
 5858 0020 14309BE5 		ldr	r3, [fp, #20]
 5859 0024 033082E0 		add	r3, r2, r3
 5860              		.loc 1 3111 7
 5861 0028 200053E3 		cmp	r3, #32
 5862 002c 0100009A 		bls	.L369
3112:../../Source/Kernel/rme_kernel.c ****     {
3113:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3114:../../Source/Kernel/rme_kernel.c ****         
3115:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5863              		.loc 1 3115 16
 5864 0030 6630E0E3 		mvn	r3, #102
 5865 0034 550100EA 		b	.L370
 5866              	.L369:
3116:../../Source/Kernel/rme_kernel.c ****     }
3117:../../Source/Kernel/rme_kernel.c ****     else
3118:../../Source/Kernel/rme_kernel.c ****     {
3119:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3120:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3121:../../Source/Kernel/rme_kernel.c ****     }
3122:../../Source/Kernel/rme_kernel.c ****     
3123:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3124:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 5867              		.loc 1 3124 5
 5868 0038 24301BE5 		ldr	r3, [fp, #-36]
 5869 003c 803003E2 		and	r3, r3, #128
 5870 0040 000053E3 		cmp	r3, #0
 5871 0044 1C00001A 		bne	.L371
 5872              		.loc 1 3124 5 is_stmt 0 discriminator 1
 5873 0048 20301BE5 		ldr	r3, [fp, #-32]
 5874 004c 142093E5 		ldr	r2, [r3, #20]
 5875 0050 24301BE5 		ldr	r3, [fp, #-36]
 5876 0054 030052E1 		cmp	r2, r3
 5877 0058 0100008A 		bhi	.L372
 5878              		.loc 1 3124 5 discriminator 3
 5879 005c 0230E0E3 		mvn	r3, #2
 5880              		.loc 1 3124 5
 5881 0060 4A0100EA 		b	.L370
 5882              	.L372:
 5883              		.loc 1 3124 5 discriminator 4
 5884 0064 24301BE5 		ldr	r3, [fp, #-36]
 5885 0068 8322A0E1 		lsl	r2, r3, #5
 5886 006c 20301BE5 		ldr	r3, [fp, #-32]
 5887 0070 0C3093E5 		ldr	r3, [r3, #12]
 5888 0074 033082E0 		add	r3, r2, r3
 5889 0078 0C300BE5 		str	r3, [fp, #-12]
 5890 007c 0C301BE5 		ldr	r3, [fp, #-12]
 5891 0080 0300A0E1 		mov	r0, r3
 5892 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5893 0088 14000BE5 		str	r0, [fp, #-20]
 5894              		.loc 1 3124 5 discriminator 1
 5895 008c 14301BE5 		ldr	r3, [fp, #-20]
 5896 0090 FF3803E2 		and	r3, r3, #16711680
 5897 0094 020853E3 		cmp	r3, #131072
 5898 0098 0100001A 		bne	.L373
 5899              		.loc 1 3124 5 discriminator 5
 5900 009c 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 160


 5901              		.loc 1 3124 5
 5902 00a0 3A0100EA 		b	.L370
 5903              	.L373:
 5904              		.loc 1 3124 5 discriminator 6
 5905 00a4 14301BE5 		ldr	r3, [fp, #-20]
 5906 00a8 233CA0E1 		lsr	r3, r3, #24
 5907 00ac 030053E3 		cmp	r3, #3
 5908 00b0 3F00000A 		beq	.L374
 5909              		.loc 1 3124 5 discriminator 7
 5910 00b4 0130E0E3 		mvn	r3, #1
 5911              		.loc 1 3124 5
 5912 00b8 340100EA 		b	.L370
 5913              	.L371:
 5914              		.loc 1 3124 5 discriminator 2
 5915 00bc 24301BE5 		ldr	r3, [fp, #-36]
 5916 00c0 2324A0E1 		lsr	r2, r3, #8
 5917 00c4 20301BE5 		ldr	r3, [fp, #-32]
 5918 00c8 143093E5 		ldr	r3, [r3, #20]
 5919 00cc 030052E1 		cmp	r2, r3
 5920 00d0 0100003A 		bcc	.L375
 5921              		.loc 1 3124 5 discriminator 8
 5922 00d4 0230E0E3 		mvn	r3, #2
 5923              		.loc 1 3124 5
 5924 00d8 2C0100EA 		b	.L370
 5925              	.L375:
 5926              		.loc 1 3124 5 discriminator 9
 5927 00dc 24301BE5 		ldr	r3, [fp, #-36]
 5928 00e0 2334A0E1 		lsr	r3, r3, #8
 5929 00e4 8322A0E1 		lsl	r2, r3, #5
 5930 00e8 20301BE5 		ldr	r3, [fp, #-32]
 5931 00ec 0C3093E5 		ldr	r3, [r3, #12]
 5932 00f0 033082E0 		add	r3, r2, r3
 5933 00f4 0C300BE5 		str	r3, [fp, #-12]
 5934 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 5935 00fc 0300A0E1 		mov	r0, r3
 5936 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5937 0104 14000BE5 		str	r0, [fp, #-20]
 5938              		.loc 1 3124 5 discriminator 1
 5939 0108 14301BE5 		ldr	r3, [fp, #-20]
 5940 010c FF3803E2 		and	r3, r3, #16711680
 5941 0110 020853E3 		cmp	r3, #131072
 5942 0114 0100001A 		bne	.L376
 5943              		.loc 1 3124 5 discriminator 10
 5944 0118 0830E0E3 		mvn	r3, #8
 5945              		.loc 1 3124 5
 5946 011c 1B0100EA 		b	.L370
 5947              	.L376:
 5948              		.loc 1 3124 5 discriminator 11
 5949 0120 14301BE5 		ldr	r3, [fp, #-20]
 5950 0124 233CA0E1 		lsr	r3, r3, #24
 5951 0128 030053E3 		cmp	r3, #3
 5952 012c 0100000A 		beq	.L377
 5953              		.loc 1 3124 5 discriminator 12
 5954 0130 0130E0E3 		mvn	r3, #1
 5955              		.loc 1 3124 5
 5956 0134 150100EA 		b	.L370
 5957              	.L377:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 161


 5958              		.loc 1 3124 5 discriminator 13
 5959 0138 24301BE5 		ldr	r3, [fp, #-36]
 5960 013c 7F2003E2 		and	r2, r3, #127
 5961 0140 0C301BE5 		ldr	r3, [fp, #-12]
 5962 0144 143093E5 		ldr	r3, [r3, #20]
 5963 0148 030052E1 		cmp	r2, r3
 5964 014c 0100003A 		bcc	.L378
 5965              		.loc 1 3124 5 discriminator 14
 5966 0150 0230E0E3 		mvn	r3, #2
 5967              		.loc 1 3124 5
 5968 0154 0D0100EA 		b	.L370
 5969              	.L378:
 5970              		.loc 1 3124 5 discriminator 15
 5971 0158 24301BE5 		ldr	r3, [fp, #-36]
 5972 015c 7F3003E2 		and	r3, r3, #127
 5973 0160 8322A0E1 		lsl	r2, r3, #5
 5974 0164 0C301BE5 		ldr	r3, [fp, #-12]
 5975 0168 0C3093E5 		ldr	r3, [r3, #12]
 5976 016c 033082E0 		add	r3, r2, r3
 5977 0170 0C300BE5 		str	r3, [fp, #-12]
 5978 0174 0C301BE5 		ldr	r3, [fp, #-12]
 5979 0178 0300A0E1 		mov	r0, r3
 5980 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5981 0180 14000BE5 		str	r0, [fp, #-20]
 5982              		.loc 1 3124 5 discriminator 1
 5983 0184 14301BE5 		ldr	r3, [fp, #-20]
 5984 0188 FF3803E2 		and	r3, r3, #16711680
 5985 018c 020853E3 		cmp	r3, #131072
 5986 0190 0100001A 		bne	.L379
 5987              		.loc 1 3124 5 discriminator 16
 5988 0194 0830E0E3 		mvn	r3, #8
 5989              		.loc 1 3124 5
 5990 0198 FC0000EA 		b	.L370
 5991              	.L379:
 5992              		.loc 1 3124 5 discriminator 17
 5993 019c 14301BE5 		ldr	r3, [fp, #-20]
 5994 01a0 233CA0E1 		lsr	r3, r3, #24
 5995 01a4 030053E3 		cmp	r3, #3
 5996 01a8 0100000A 		beq	.L374
 5997              		.loc 1 3124 5 discriminator 18
 5998 01ac 0130E0E3 		mvn	r3, #1
 5999              		.loc 1 3124 5
 6000 01b0 F60000EA 		b	.L370
 6001              	.L374:
3125:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3126:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 6002              		.loc 1 3126 5 is_stmt 1
 6003 01b4 28301BE5 		ldr	r3, [fp, #-40]
 6004 01b8 803003E2 		and	r3, r3, #128
 6005 01bc 000053E3 		cmp	r3, #0
 6006 01c0 1C00001A 		bne	.L380
 6007              		.loc 1 3126 5 is_stmt 0 discriminator 1
 6008 01c4 20301BE5 		ldr	r3, [fp, #-32]
 6009 01c8 142093E5 		ldr	r2, [r3, #20]
 6010 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6011 01d0 030052E1 		cmp	r2, r3
 6012 01d4 0100008A 		bhi	.L381
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 162


 6013              		.loc 1 3126 5 discriminator 3
 6014 01d8 0230E0E3 		mvn	r3, #2
 6015              		.loc 1 3126 5
 6016 01dc EB0000EA 		b	.L370
 6017              	.L381:
 6018              		.loc 1 3126 5 discriminator 4
 6019 01e0 28301BE5 		ldr	r3, [fp, #-40]
 6020 01e4 8322A0E1 		lsl	r2, r3, #5
 6021 01e8 20301BE5 		ldr	r3, [fp, #-32]
 6022 01ec 0C3093E5 		ldr	r3, [r3, #12]
 6023 01f0 033082E0 		add	r3, r2, r3
 6024 01f4 08300BE5 		str	r3, [fp, #-8]
 6025 01f8 08301BE5 		ldr	r3, [fp, #-8]
 6026 01fc 0300A0E1 		mov	r0, r3
 6027 0200 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6028 0204 14000BE5 		str	r0, [fp, #-20]
 6029              		.loc 1 3126 5 discriminator 1
 6030 0208 14301BE5 		ldr	r3, [fp, #-20]
 6031 020c FF3803E2 		and	r3, r3, #16711680
 6032 0210 020853E3 		cmp	r3, #131072
 6033 0214 0100001A 		bne	.L382
 6034              		.loc 1 3126 5 discriminator 5
 6035 0218 0830E0E3 		mvn	r3, #8
 6036              		.loc 1 3126 5
 6037 021c DB0000EA 		b	.L370
 6038              	.L382:
 6039              		.loc 1 3126 5 discriminator 6
 6040 0220 14301BE5 		ldr	r3, [fp, #-20]
 6041 0224 233CA0E1 		lsr	r3, r3, #24
 6042 0228 020053E3 		cmp	r3, #2
 6043 022c 3F00000A 		beq	.L383
 6044              		.loc 1 3126 5 discriminator 7
 6045 0230 0130E0E3 		mvn	r3, #1
 6046              		.loc 1 3126 5
 6047 0234 D50000EA 		b	.L370
 6048              	.L380:
 6049              		.loc 1 3126 5 discriminator 2
 6050 0238 28301BE5 		ldr	r3, [fp, #-40]
 6051 023c 2324A0E1 		lsr	r2, r3, #8
 6052 0240 20301BE5 		ldr	r3, [fp, #-32]
 6053 0244 143093E5 		ldr	r3, [r3, #20]
 6054 0248 030052E1 		cmp	r2, r3
 6055 024c 0100003A 		bcc	.L384
 6056              		.loc 1 3126 5 discriminator 8
 6057 0250 0230E0E3 		mvn	r3, #2
 6058              		.loc 1 3126 5
 6059 0254 CD0000EA 		b	.L370
 6060              	.L384:
 6061              		.loc 1 3126 5 discriminator 9
 6062 0258 28301BE5 		ldr	r3, [fp, #-40]
 6063 025c 2334A0E1 		lsr	r3, r3, #8
 6064 0260 8322A0E1 		lsl	r2, r3, #5
 6065 0264 20301BE5 		ldr	r3, [fp, #-32]
 6066 0268 0C3093E5 		ldr	r3, [r3, #12]
 6067 026c 033082E0 		add	r3, r2, r3
 6068 0270 08300BE5 		str	r3, [fp, #-8]
 6069 0274 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 163


 6070 0278 0300A0E1 		mov	r0, r3
 6071 027c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6072 0280 14000BE5 		str	r0, [fp, #-20]
 6073              		.loc 1 3126 5 discriminator 1
 6074 0284 14301BE5 		ldr	r3, [fp, #-20]
 6075 0288 FF3803E2 		and	r3, r3, #16711680
 6076 028c 020853E3 		cmp	r3, #131072
 6077 0290 0100001A 		bne	.L385
 6078              		.loc 1 3126 5 discriminator 10
 6079 0294 0830E0E3 		mvn	r3, #8
 6080              		.loc 1 3126 5
 6081 0298 BC0000EA 		b	.L370
 6082              	.L385:
 6083              		.loc 1 3126 5 discriminator 11
 6084 029c 14301BE5 		ldr	r3, [fp, #-20]
 6085 02a0 233CA0E1 		lsr	r3, r3, #24
 6086 02a4 030053E3 		cmp	r3, #3
 6087 02a8 0100000A 		beq	.L386
 6088              		.loc 1 3126 5 discriminator 12
 6089 02ac 0130E0E3 		mvn	r3, #1
 6090              		.loc 1 3126 5
 6091 02b0 B60000EA 		b	.L370
 6092              	.L386:
 6093              		.loc 1 3126 5 discriminator 13
 6094 02b4 28301BE5 		ldr	r3, [fp, #-40]
 6095 02b8 7F2003E2 		and	r2, r3, #127
 6096 02bc 08301BE5 		ldr	r3, [fp, #-8]
 6097 02c0 143093E5 		ldr	r3, [r3, #20]
 6098 02c4 030052E1 		cmp	r2, r3
 6099 02c8 0100003A 		bcc	.L387
 6100              		.loc 1 3126 5 discriminator 14
 6101 02cc 0230E0E3 		mvn	r3, #2
 6102              		.loc 1 3126 5
 6103 02d0 AE0000EA 		b	.L370
 6104              	.L387:
 6105              		.loc 1 3126 5 discriminator 15
 6106 02d4 28301BE5 		ldr	r3, [fp, #-40]
 6107 02d8 7F3003E2 		and	r3, r3, #127
 6108 02dc 8322A0E1 		lsl	r2, r3, #5
 6109 02e0 08301BE5 		ldr	r3, [fp, #-8]
 6110 02e4 0C3093E5 		ldr	r3, [r3, #12]
 6111 02e8 033082E0 		add	r3, r2, r3
 6112 02ec 08300BE5 		str	r3, [fp, #-8]
 6113 02f0 08301BE5 		ldr	r3, [fp, #-8]
 6114 02f4 0300A0E1 		mov	r0, r3
 6115 02f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6116 02fc 14000BE5 		str	r0, [fp, #-20]
 6117              		.loc 1 3126 5 discriminator 1
 6118 0300 14301BE5 		ldr	r3, [fp, #-20]
 6119 0304 FF3803E2 		and	r3, r3, #16711680
 6120 0308 020853E3 		cmp	r3, #131072
 6121 030c 0100001A 		bne	.L388
 6122              		.loc 1 3126 5 discriminator 16
 6123 0310 0830E0E3 		mvn	r3, #8
 6124              		.loc 1 3126 5
 6125 0314 9D0000EA 		b	.L370
 6126              	.L388:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 164


 6127              		.loc 1 3126 5 discriminator 17
 6128 0318 14301BE5 		ldr	r3, [fp, #-20]
 6129 031c 233CA0E1 		lsr	r3, r3, #24
 6130 0320 020053E3 		cmp	r3, #2
 6131 0324 0100000A 		beq	.L383
 6132              		.loc 1 3126 5 discriminator 18
 6133 0328 0130E0E3 		mvn	r3, #1
 6134              		.loc 1 3126 5
 6135 032c 970000EA 		b	.L370
 6136              	.L383:
3127:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
3128:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3129:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op, RME_CPT_FLAG_CRT);
 6137              		.loc 1 3129 5 is_stmt 1
 6138 0330 0C301BE5 		ldr	r3, [fp, #-12]
 6139 0334 083093E5 		ldr	r3, [r3, #8]
 6140 0338 013003E2 		and	r3, r3, #1
 6141 033c 000053E3 		cmp	r3, #0
 6142 0340 0100001A 		bne	.L389
 6143              		.loc 1 3129 5 is_stmt 0 discriminator 1
 6144 0344 0630E0E3 		mvn	r3, #6
 6145              		.loc 1 3129 5
 6146 0348 900000EA 		b	.L370
 6147              	.L389:
3130:../../Source/Kernel/rme_kernel.c ****     
3131:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top-level? */
3132:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 6148              		.loc 1 3132 7 is_stmt 1
 6149 034c 0C309BE5 		ldr	r3, [fp, #12]
 6150 0350 000053E3 		cmp	r3, #0
 6151 0354 0400000A 		beq	.L390
3133:../../Source/Kernel/rme_kernel.c ****     {
3134:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3135:../../Source/Kernel/rme_kernel.c **** 
3136:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 6152              		.loc 1 3136 20
 6153 0358 0120A0E3 		mov	r2, #1
 6154 035c 14309BE5 		ldr	r3, [fp, #20]
 6155 0360 1233A0E1 		lsl	r3, r2, r3
 6156              		.loc 1 3136 19
 6157 0364 10300BE5 		str	r3, [fp, #-16]
 6158 0368 030000EA 		b	.L391
 6159              	.L390:
3137:../../Source/Kernel/rme_kernel.c ****     }
3138:../../Source/Kernel/rme_kernel.c ****     else
3139:../../Source/Kernel/rme_kernel.c ****     {
3140:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3141:../../Source/Kernel/rme_kernel.c **** 
3142:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 6160              		.loc 1 3142 20
 6161 036c 0120A0E3 		mov	r2, #1
 6162 0370 14309BE5 		ldr	r3, [fp, #20]
 6163 0374 1233A0E1 		lsl	r3, r2, r3
 6164              		.loc 1 3142 19
 6165 0378 10300BE5 		str	r3, [fp, #-16]
 6166              	.L391:
3143:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 165


3144:../../Source/Kernel/rme_kernel.c ****     
3145:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
3146:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_PGT,Raddr,Vaddr,Table_Size);
 6167              		.loc 1 3146 5
 6168 037c 08301BE5 		ldr	r3, [fp, #-8]
 6169 0380 083093E5 		ldr	r3, [r3, #8]
 6170 0384 023003E2 		and	r3, r3, #2
 6171 0388 000053E3 		cmp	r3, #0
 6172 038c 0100001A 		bne	.L392
 6173              		.loc 1 3146 5 is_stmt 0 discriminator 1
 6174 0390 0630E0E3 		mvn	r3, #6
 6175              		.loc 1 3146 5
 6176 0394 7D0000EA 		b	.L370
 6177              	.L392:
 6178              		.loc 1 3146 5 discriminator 2
 6179 0398 08301BE5 		ldr	r3, [fp, #-8]
 6180 039c 143093E5 		ldr	r3, [r3, #20]
 6181 03a0 04209BE5 		ldr	r2, [fp, #4]
 6182 03a4 033082E0 		add	r3, r2, r3
 6183 03a8 18300BE5 		str	r3, [fp, #-24]
 6184 03ac 18201BE5 		ldr	r2, [fp, #-24]
 6185 03b0 04309BE5 		ldr	r3, [fp, #4]
 6186 03b4 030052E1 		cmp	r2, r3
 6187 03b8 0100002A 		bcs	.L393
 6188              		.loc 1 3146 5 discriminator 3
 6189 03bc 0630E0E3 		mvn	r3, #6
 6190              		.loc 1 3146 5
 6191 03c0 720000EA 		b	.L370
 6192              	.L393:
 6193              		.loc 1 3146 5 discriminator 4
 6194 03c4 08301BE5 		ldr	r3, [fp, #-8]
 6195 03c8 143093E5 		ldr	r3, [r3, #20]
 6196 03cc 18201BE5 		ldr	r2, [fp, #-24]
 6197 03d0 030052E1 		cmp	r2, r3
 6198 03d4 0100002A 		bcs	.L394
 6199              		.loc 1 3146 5 discriminator 5
 6200 03d8 0630E0E3 		mvn	r3, #6
 6201              		.loc 1 3146 5
 6202 03dc 6B0000EA 		b	.L370
 6203              	.L394:
 6204              		.loc 1 3146 5 discriminator 6
 6205 03e0 18201BE5 		ldr	r2, [fp, #-24]
 6206 03e4 10301BE5 		ldr	r3, [fp, #-16]
 6207 03e8 033082E0 		add	r3, r2, r3
 6208 03ec 18201BE5 		ldr	r2, [fp, #-24]
 6209 03f0 030052E1 		cmp	r2, r3
 6210 03f4 0100009A 		bls	.L395
 6211              		.loc 1 3146 5 discriminator 7
 6212 03f8 0630E0E3 		mvn	r3, #6
 6213              		.loc 1 3146 5
 6214 03fc 630000EA 		b	.L370
 6215              	.L395:
 6216              		.loc 1 3146 5 discriminator 8
 6217 0400 08301BE5 		ldr	r3, [fp, #-8]
 6218 0404 182093E5 		ldr	r2, [r3, #24]
 6219 0408 18101BE5 		ldr	r1, [fp, #-24]
 6220 040c 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 166


 6221 0410 033081E0 		add	r3, r1, r3
 6222 0414 013043E2 		sub	r3, r3, #1
 6223 0418 030052E1 		cmp	r2, r3
 6224 041c 0100002A 		bcs	.L396
 6225              		.loc 1 3146 5 discriminator 9
 6226 0420 0630E0E3 		mvn	r3, #6
 6227              		.loc 1 3146 5
 6228 0424 590000EA 		b	.L370
 6229              	.L396:
3147:../../Source/Kernel/rme_kernel.c **** 
3148:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
3149:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)<0)
 6230              		.loc 1 3149 8 is_stmt 1
 6231 0428 18301BE5 		ldr	r3, [fp, #-24]
 6232 042c 00308DE5 		str	r3, [sp]
 6233 0430 14309BE5 		ldr	r3, [fp, #20]
 6234 0434 10209BE5 		ldr	r2, [fp, #16]
 6235 0438 0C109BE5 		ldr	r1, [fp, #12]
 6236 043c 08009BE5 		ldr	r0, [fp, #8]
 6237 0440 FEFFFFEB 		bl	__RME_Pgt_Check
3150:../../Source/Kernel/rme_kernel.c ****     {
3151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3152:../../Source/Kernel/rme_kernel.c **** 
3153:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3154:../../Source/Kernel/rme_kernel.c ****     }
3155:../../Source/Kernel/rme_kernel.c ****     else
3156:../../Source/Kernel/rme_kernel.c ****     {
3157:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3158:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3159:../../Source/Kernel/rme_kernel.c ****     }
3160:../../Source/Kernel/rme_kernel.c **** 
3161:../../Source/Kernel/rme_kernel.c ****     /* Check if the start address is properly aligned to the total order of the page table */
3162:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 6238              		.loc 1 3162 14
 6239 0444 10209BE5 		ldr	r2, [fp, #16]
 6240 0448 14309BE5 		ldr	r3, [fp, #20]
 6241 044c 033082E0 		add	r3, r2, r3
 6242 0450 203063E2 		rsb	r3, r3, #32
 6243 0454 0020E0E3 		mvn	r2, #0
 6244 0458 3223A0E1 		lsr	r2, r2, r3
 6245              		.loc 1 3162 13
 6246 045c 08309BE5 		ldr	r3, [fp, #8]
 6247 0460 023003E0 		and	r3, r3, r2
 6248              		.loc 1 3162 7
 6249 0464 000053E3 		cmp	r3, #0
 6250 0468 0100000A 		beq	.L397
3163:../../Source/Kernel/rme_kernel.c ****     {
3164:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3165:../../Source/Kernel/rme_kernel.c **** 
3166:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 6251              		.loc 1 3166 16
 6252 046c 6630E0E3 		mvn	r3, #102
 6253 0470 460000EA 		b	.L370
 6254              	.L397:
3167:../../Source/Kernel/rme_kernel.c ****     }
3168:../../Source/Kernel/rme_kernel.c ****     else
3169:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 167


3170:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3171:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3172:../../Source/Kernel/rme_kernel.c ****     }
3173:../../Source/Kernel/rme_kernel.c **** 
3174:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3175:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 6255              		.loc 1 3175 5
 6256 0474 0C301BE5 		ldr	r3, [fp, #-12]
 6257 0478 142093E5 		ldr	r2, [r3, #20]
 6258 047c 2C301BE5 		ldr	r3, [fp, #-44]
 6259 0480 030052E1 		cmp	r2, r3
 6260 0484 0100008A 		bhi	.L398
 6261              		.loc 1 3175 5 is_stmt 0 discriminator 1
 6262 0488 0230E0E3 		mvn	r3, #2
 6263              		.loc 1 3175 5
 6264 048c 3F0000EA 		b	.L370
 6265              	.L398:
 6266              		.loc 1 3175 5 discriminator 2
 6267 0490 2C301BE5 		ldr	r3, [fp, #-44]
 6268 0494 8322A0E1 		lsl	r2, r3, #5
 6269 0498 0C301BE5 		ldr	r3, [fp, #-12]
 6270 049c 0C3093E5 		ldr	r3, [r3, #12]
 6271 04a0 033082E0 		add	r3, r2, r3
 6272 04a4 1C300BE5 		str	r3, [fp, #-28]
3176:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
3177:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 6273              		.loc 1 3177 5 is_stmt 1
 6274 04a8 1C301BE5 		ldr	r3, [fp, #-28]
 6275 04ac 0128A0E3 		mov	r2, #65536
 6276 04b0 0010A0E3 		mov	r1, #0
 6277 04b4 0300A0E1 		mov	r0, r3
 6278 04b8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6279 04bc 0030A0E1 		mov	r3, r0
 6280              		.loc 1 3177 5 is_stmt 0 discriminator 1
 6281 04c0 000053E3 		cmp	r3, #0
 6282 04c4 0100001A 		bne	.L399
 6283 04c8 0430E0E3 		mvn	r3, #4
 6284              		.loc 1 3177 5
 6285 04cc 2F0000EA 		b	.L370
 6286              	.L399:
 6287              		.loc 1 3177 5 discriminator 2
 6288 04d0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6289 04d4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6290 04d8 002093E5 		ldr	r2, [r3]
 6291 04dc 1C301BE5 		ldr	r3, [fp, #-28]
 6292 04e0 102083E5 		str	r2, [r3, #16]
3178:../../Source/Kernel/rme_kernel.c **** 
3179:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
3180:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Table_Size)!=0)
 6293              		.loc 1 3180 8 is_stmt 1
 6294 04e4 10101BE5 		ldr	r1, [fp, #-16]
 6295 04e8 18001BE5 		ldr	r0, [fp, #-24]
 6296 04ec FEFFFFEB 		bl	_RME_Kot_Mark
 6297 04f0 0030A0E1 		mov	r3, r0
 6298              		.loc 1 3180 7 discriminator 1
 6299 04f4 000053E3 		cmp	r3, #0
 6300 04f8 0500000A 		beq	.L400
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 168


3181:../../Source/Kernel/rme_kernel.c ****     {
3182:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3183:../../Source/Kernel/rme_kernel.c **** 
3184:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 6301              		.loc 1 3184 9
 6302 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 6303 0500 0010A0E3 		mov	r1, #0
 6304 0504 0300A0E1 		mov	r0, r3
 6305 0508 FEFFFFEB 		bl	__RME_A7A_Write_Release
3185:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 6306              		.loc 1 3185 16
 6307 050c 0330E0E3 		mvn	r3, #3
 6308 0510 1E0000EA 		b	.L370
 6309              	.L400:
3186:../../Source/Kernel/rme_kernel.c ****     }
3187:../../Source/Kernel/rme_kernel.c ****     else
3188:../../Source/Kernel/rme_kernel.c ****     {
3189:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3190:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3191:../../Source/Kernel/rme_kernel.c ****     }
3192:../../Source/Kernel/rme_kernel.c ****     
3193:../../Source/Kernel/rme_kernel.c ****     /* Header init */
3194:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 6310              		.loc 1 3194 27
 6311 0514 1C301BE5 		ldr	r3, [fp, #-28]
 6312 0518 0020A0E3 		mov	r2, #0
 6313 051c 042083E5 		str	r2, [r3, #4]
3195:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 6314              		.loc 1 3195 25
 6315 0520 1C301BE5 		ldr	r3, [fp, #-28]
 6316 0524 18201BE5 		ldr	r2, [fp, #-24]
 6317 0528 0C2083E5 		str	r2, [r3, #12]
3196:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ALL;
 6318              		.loc 1 3196 23
 6319 052c 1C201BE5 		ldr	r2, [fp, #-28]
 6320 0530 FF30A0E3 		mov	r3, #255
 6321 0534 F03F4FE3 		movt	r3, 65520
 6322 0538 083082E5 		str	r3, [r2, #8]
3197:../../Source/Kernel/rme_kernel.c ****     
3198:../../Source/Kernel/rme_kernel.c ****     /* Info init */
3199:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 6323              		.loc 1 3199 23
 6324 053c 08209BE5 		ldr	r2, [fp, #8]
 6325 0540 0C309BE5 		ldr	r3, [fp, #12]
 6326 0544 032082E1 		orr	r2, r2, r3
 6327              		.loc 1 3199 18
 6328 0548 1C301BE5 		ldr	r3, [fp, #-28]
 6329 054c 182083E5 		str	r2, [r3, #24]
3200:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 6330              		.loc 1 3200 20
 6331 0550 10309BE5 		ldr	r3, [fp, #16]
 6332 0554 0328A0E1 		lsl	r2, r3, #16
 6333 0558 14309BE5 		ldr	r3, [fp, #20]
 6334 055c 032082E1 		orr	r2, r2, r3
 6335              		.loc 1 3200 19
 6336 0560 1C301BE5 		ldr	r3, [fp, #-28]
 6337 0564 142083E5 		str	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 169


3201:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 6338              		.loc 1 3201 18
 6339 0568 1C301BE5 		ldr	r3, [fp, #-28]
 6340 056c 0020A0E3 		mov	r2, #0
 6341 0570 1C2083E5 		str	r2, [r3, #28]
3202:../../Source/Kernel/rme_kernel.c ****     
3203:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
3204:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 6342              		.loc 1 3204 8
 6343 0574 1C001BE5 		ldr	r0, [fp, #-28]
 6344 0578 FEFFFFEB 		bl	__RME_Pgt_Init
3205:../../Source/Kernel/rme_kernel.c ****     {
3206:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3207:../../Source/Kernel/rme_kernel.c **** 
3208:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
3209:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr,Table_Size)==0);
3210:../../Source/Kernel/rme_kernel.c ****         
3211:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
3212:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
3213:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3214:../../Source/Kernel/rme_kernel.c ****     }
3215:../../Source/Kernel/rme_kernel.c ****     else
3216:../../Source/Kernel/rme_kernel.c ****     {
3217:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3218:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3219:../../Source/Kernel/rme_kernel.c ****     }
3220:../../Source/Kernel/rme_kernel.c **** 
3221:../../Source/Kernel/rme_kernel.c ****     /* Creation complete */
3222:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 6345              		.loc 1 3222 5
 6346 057c 1C301BE5 		ldr	r3, [fp, #-28]
 6347 0580 0113A0E3 		mov	r1, #67108864
 6348 0584 0300A0E1 		mov	r0, r3
 6349 0588 FEFFFFEB 		bl	__RME_A7A_Write_Release
3223:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
3224:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
3225:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
3226:../../Source/Kernel/rme_kernel.c **** 
3227:../../Source/Kernel/rme_kernel.c ****     return 0;
 6350              		.loc 1 3227 12
 6351 058c 0030A0E3 		mov	r3, #0
 6352              	.L370:
3228:../../Source/Kernel/rme_kernel.c **** }
 6353              		.loc 1 3228 1
 6354 0590 0300A0E1 		mov	r0, r3
 6355 0594 04D04BE2 		sub	sp, fp, #4
 6356              		.cfi_def_cfa 13, 8
 6357              		@ sp needed
 6358 0598 0088BDE8 		pop	{fp, pc}
 6359              		.cfi_endproc
 6360              	.LFE32:
 6362              		.section	.text._RME_Pgt_Del,"ax",%progbits
 6363              		.align	2
 6364              		.syntax unified
 6365              		.arm
 6367              	_RME_Pgt_Del:
 6368              	.LFB33:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 170


3229:../../Source/Kernel/rme_kernel.c **** #endif
3230:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Crt *************************************************/
3231:../../Source/Kernel/rme_kernel.c **** 
3232:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Del ******************************************************
3233:../../Source/Kernel/rme_kernel.c **** Description : Delete a page table.
3234:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3235:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
3236:../../Source/Kernel/rme_kernel.c ****                                   the cap to new captbl.
3237:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3238:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3239:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3240:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3241:../../Source/Kernel/rme_kernel.c **** Output      : None.
3242:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3243:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3244:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3245:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Del(struct RME_Cap_Cpt* Cpt,
3246:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3247:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
3248:../../Source/Kernel/rme_kernel.c **** {
 6369              		.loc 1 3248 1
 6370              		.cfi_startproc
 6371              		@ args = 0, pretend = 0, frame = 40
 6372              		@ frame_needed = 1, uses_anonymous_args = 0
 6373 0000 00482DE9 		push	{fp, lr}
 6374              		.cfi_def_cfa_offset 8
 6375              		.cfi_offset 11, -8
 6376              		.cfi_offset 14, -4
 6377 0004 04B08DE2 		add	fp, sp, #4
 6378              		.cfi_def_cfa 11, 4
 6379 0008 28D04DE2 		sub	sp, sp, #40
 6380 000c 20000BE5 		str	r0, [fp, #-32]
 6381 0010 24100BE5 		str	r1, [fp, #-36]
 6382 0014 28200BE5 		str	r2, [fp, #-40]
3249:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3250:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Del;
3251:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3252:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
3253:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
3254:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3255:../../Source/Kernel/rme_kernel.c ****     
3256:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3257:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 6383              		.loc 1 3257 5
 6384 0018 24301BE5 		ldr	r3, [fp, #-36]
 6385 001c 803003E2 		and	r3, r3, #128
 6386 0020 000053E3 		cmp	r3, #0
 6387 0024 1C00001A 		bne	.L402
 6388              		.loc 1 3257 5 is_stmt 0 discriminator 1
 6389 0028 20301BE5 		ldr	r3, [fp, #-32]
 6390 002c 142093E5 		ldr	r2, [r3, #20]
 6391 0030 24301BE5 		ldr	r3, [fp, #-36]
 6392 0034 030052E1 		cmp	r2, r3
 6393 0038 0100008A 		bhi	.L403
 6394              		.loc 1 3257 5 discriminator 3
 6395 003c 0230E0E3 		mvn	r3, #2
 6396              		.loc 1 3257 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 171


 6397 0040 C50000EA 		b	.L404
 6398              	.L403:
 6399              		.loc 1 3257 5 discriminator 4
 6400 0044 24301BE5 		ldr	r3, [fp, #-36]
 6401 0048 8322A0E1 		lsl	r2, r3, #5
 6402 004c 20301BE5 		ldr	r3, [fp, #-32]
 6403 0050 0C3093E5 		ldr	r3, [r3, #12]
 6404 0054 033082E0 		add	r3, r2, r3
 6405 0058 08300BE5 		str	r3, [fp, #-8]
 6406 005c 08301BE5 		ldr	r3, [fp, #-8]
 6407 0060 0300A0E1 		mov	r0, r3
 6408 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6409 0068 10000BE5 		str	r0, [fp, #-16]
 6410              		.loc 1 3257 5 discriminator 1
 6411 006c 10301BE5 		ldr	r3, [fp, #-16]
 6412 0070 FF3803E2 		and	r3, r3, #16711680
 6413 0074 020853E3 		cmp	r3, #131072
 6414 0078 0100001A 		bne	.L405
 6415              		.loc 1 3257 5 discriminator 5
 6416 007c 0830E0E3 		mvn	r3, #8
 6417              		.loc 1 3257 5
 6418 0080 B50000EA 		b	.L404
 6419              	.L405:
 6420              		.loc 1 3257 5 discriminator 6
 6421 0084 10301BE5 		ldr	r3, [fp, #-16]
 6422 0088 233CA0E1 		lsr	r3, r3, #24
 6423 008c 030053E3 		cmp	r3, #3
 6424 0090 3F00000A 		beq	.L406
 6425              		.loc 1 3257 5 discriminator 7
 6426 0094 0130E0E3 		mvn	r3, #1
 6427              		.loc 1 3257 5
 6428 0098 AF0000EA 		b	.L404
 6429              	.L402:
 6430              		.loc 1 3257 5 discriminator 2
 6431 009c 24301BE5 		ldr	r3, [fp, #-36]
 6432 00a0 2324A0E1 		lsr	r2, r3, #8
 6433 00a4 20301BE5 		ldr	r3, [fp, #-32]
 6434 00a8 143093E5 		ldr	r3, [r3, #20]
 6435 00ac 030052E1 		cmp	r2, r3
 6436 00b0 0100003A 		bcc	.L407
 6437              		.loc 1 3257 5 discriminator 8
 6438 00b4 0230E0E3 		mvn	r3, #2
 6439              		.loc 1 3257 5
 6440 00b8 A70000EA 		b	.L404
 6441              	.L407:
 6442              		.loc 1 3257 5 discriminator 9
 6443 00bc 24301BE5 		ldr	r3, [fp, #-36]
 6444 00c0 2334A0E1 		lsr	r3, r3, #8
 6445 00c4 8322A0E1 		lsl	r2, r3, #5
 6446 00c8 20301BE5 		ldr	r3, [fp, #-32]
 6447 00cc 0C3093E5 		ldr	r3, [r3, #12]
 6448 00d0 033082E0 		add	r3, r2, r3
 6449 00d4 08300BE5 		str	r3, [fp, #-8]
 6450 00d8 08301BE5 		ldr	r3, [fp, #-8]
 6451 00dc 0300A0E1 		mov	r0, r3
 6452 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6453 00e4 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 172


 6454              		.loc 1 3257 5 discriminator 1
 6455 00e8 10301BE5 		ldr	r3, [fp, #-16]
 6456 00ec FF3803E2 		and	r3, r3, #16711680
 6457 00f0 020853E3 		cmp	r3, #131072
 6458 00f4 0100001A 		bne	.L408
 6459              		.loc 1 3257 5 discriminator 10
 6460 00f8 0830E0E3 		mvn	r3, #8
 6461              		.loc 1 3257 5
 6462 00fc 960000EA 		b	.L404
 6463              	.L408:
 6464              		.loc 1 3257 5 discriminator 11
 6465 0100 10301BE5 		ldr	r3, [fp, #-16]
 6466 0104 233CA0E1 		lsr	r3, r3, #24
 6467 0108 030053E3 		cmp	r3, #3
 6468 010c 0100000A 		beq	.L409
 6469              		.loc 1 3257 5 discriminator 12
 6470 0110 0130E0E3 		mvn	r3, #1
 6471              		.loc 1 3257 5
 6472 0114 900000EA 		b	.L404
 6473              	.L409:
 6474              		.loc 1 3257 5 discriminator 13
 6475 0118 24301BE5 		ldr	r3, [fp, #-36]
 6476 011c 7F2003E2 		and	r2, r3, #127
 6477 0120 08301BE5 		ldr	r3, [fp, #-8]
 6478 0124 143093E5 		ldr	r3, [r3, #20]
 6479 0128 030052E1 		cmp	r2, r3
 6480 012c 0100003A 		bcc	.L410
 6481              		.loc 1 3257 5 discriminator 14
 6482 0130 0230E0E3 		mvn	r3, #2
 6483              		.loc 1 3257 5
 6484 0134 880000EA 		b	.L404
 6485              	.L410:
 6486              		.loc 1 3257 5 discriminator 15
 6487 0138 24301BE5 		ldr	r3, [fp, #-36]
 6488 013c 7F3003E2 		and	r3, r3, #127
 6489 0140 8322A0E1 		lsl	r2, r3, #5
 6490 0144 08301BE5 		ldr	r3, [fp, #-8]
 6491 0148 0C3093E5 		ldr	r3, [r3, #12]
 6492 014c 033082E0 		add	r3, r2, r3
 6493 0150 08300BE5 		str	r3, [fp, #-8]
 6494 0154 08301BE5 		ldr	r3, [fp, #-8]
 6495 0158 0300A0E1 		mov	r0, r3
 6496 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6497 0160 10000BE5 		str	r0, [fp, #-16]
 6498              		.loc 1 3257 5 discriminator 1
 6499 0164 10301BE5 		ldr	r3, [fp, #-16]
 6500 0168 FF3803E2 		and	r3, r3, #16711680
 6501 016c 020853E3 		cmp	r3, #131072
 6502 0170 0100001A 		bne	.L411
 6503              		.loc 1 3257 5 discriminator 16
 6504 0174 0830E0E3 		mvn	r3, #8
 6505              		.loc 1 3257 5
 6506 0178 770000EA 		b	.L404
 6507              	.L411:
 6508              		.loc 1 3257 5 discriminator 17
 6509 017c 10301BE5 		ldr	r3, [fp, #-16]
 6510 0180 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 173


 6511 0184 030053E3 		cmp	r3, #3
 6512 0188 0100000A 		beq	.L406
 6513              		.loc 1 3257 5 discriminator 18
 6514 018c 0130E0E3 		mvn	r3, #1
 6515              		.loc 1 3257 5
 6516 0190 710000EA 		b	.L404
 6517              	.L406:
3258:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3259:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3260:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 6518              		.loc 1 3260 5 is_stmt 1
 6519 0194 08301BE5 		ldr	r3, [fp, #-8]
 6520 0198 083093E5 		ldr	r3, [r3, #8]
 6521 019c 023003E2 		and	r3, r3, #2
 6522 01a0 000053E3 		cmp	r3, #0
 6523 01a4 0100001A 		bne	.L412
 6524              		.loc 1 3260 5 is_stmt 0 discriminator 1
 6525 01a8 0630E0E3 		mvn	r3, #6
 6526              		.loc 1 3260 5
 6527 01ac 6A0000EA 		b	.L404
 6528              	.L412:
3261:../../Source/Kernel/rme_kernel.c ****     
3262:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3263:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Del);
 6529              		.loc 1 3263 5 is_stmt 1
 6530 01b0 08301BE5 		ldr	r3, [fp, #-8]
 6531 01b4 142093E5 		ldr	r2, [r3, #20]
 6532 01b8 28301BE5 		ldr	r3, [fp, #-40]
 6533 01bc 030052E1 		cmp	r2, r3
 6534 01c0 0100008A 		bhi	.L413
 6535              		.loc 1 3263 5 is_stmt 0 discriminator 1
 6536 01c4 0230E0E3 		mvn	r3, #2
 6537              		.loc 1 3263 5
 6538 01c8 630000EA 		b	.L404
 6539              	.L413:
 6540              		.loc 1 3263 5 discriminator 2
 6541 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6542 01d0 8322A0E1 		lsl	r2, r3, #5
 6543 01d4 08301BE5 		ldr	r3, [fp, #-8]
 6544 01d8 0C3093E5 		ldr	r3, [r3, #12]
 6545 01dc 033082E0 		add	r3, r2, r3
 6546 01e0 14300BE5 		str	r3, [fp, #-20]
3264:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
3265:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Pgt_Del,Type_Stat,RME_CAP_TYPE_PGT);
 6547              		.loc 1 3265 5 is_stmt 1
 6548 01e4 14301BE5 		ldr	r3, [fp, #-20]
 6549 01e8 0300A0E1 		mov	r0, r3
 6550 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6551 01f0 10000BE5 		str	r0, [fp, #-16]
 6552              		.loc 1 3265 5 is_stmt 0 discriminator 1
 6553 01f4 10301BE5 		ldr	r3, [fp, #-16]
 6554 01f8 FF3803E2 		and	r3, r3, #16711680
 6555 01fc 020853E3 		cmp	r3, #131072
 6556 0200 0100000A 		beq	.L414
 6557 0204 0830E0E3 		mvn	r3, #8
 6558              		.loc 1 3265 5
 6559 0208 530000EA 		b	.L404
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 174


 6560              	.L414:
 6561              		.loc 1 3265 5 discriminator 2
 6562 020c 10301BE5 		ldr	r3, [fp, #-16]
 6563 0210 233CA0E1 		lsr	r3, r3, #24
 6564 0214 040053E3 		cmp	r3, #4
 6565 0218 0100000A 		beq	.L415
 6566              		.loc 1 3265 5 discriminator 3
 6567 021c 0130E0E3 		mvn	r3, #1
 6568              		.loc 1 3265 5
 6569 0220 4D0000EA 		b	.L404
 6570              	.L415:
 6571              		.loc 1 3265 5 discriminator 6
 6572 0224 14301BE5 		ldr	r3, [fp, #-20]
 6573 0228 043093E5 		ldr	r3, [r3, #4]
 6574 022c 000053E3 		cmp	r3, #0
 6575 0230 0B00000A 		beq	.L416
 6576              		.loc 1 3265 5 discriminator 7
 6577 0234 10301BE5 		ldr	r3, [fp, #-16]
 6578 0238 7330FFE6 		uxth	r3, r3
 6579 023c 000053E3 		cmp	r3, #0
 6580 0240 0500001A 		bne	.L417
 6581              		.loc 1 3265 5 discriminator 9
 6582 0244 14001BE5 		ldr	r0, [fp, #-20]
 6583 0248 10301BE5 		ldr	r3, [fp, #-16]
 6584 024c FF38C3E3 		bic	r3, r3, #16711680
 6585 0250 0320A0E1 		mov	r2, r3
 6586 0254 10101BE5 		ldr	r1, [fp, #-16]
 6587 0258 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6588              	.L417:
 6589              		.loc 1 3265 5 discriminator 11
 6590 025c 0530E0E3 		mvn	r3, #5
 6591              		.loc 1 3265 5
 6592 0260 3D0000EA 		b	.L404
 6593              	.L416:
 6594              		.loc 1 3265 5 discriminator 8
 6595 0264 10301BE5 		ldr	r3, [fp, #-16]
 6596 0268 7330FFE6 		uxth	r3, r3
 6597 026c 000053E3 		cmp	r3, #0
 6598 0270 0800000A 		beq	.L418
 6599              		.loc 1 3265 5 discriminator 12
 6600 0274 003000E3 		movw	r3, #:lower16:.LC6
 6601 0278 003040E3 		movt	r3, #:upper16:.LC6
 6602 027c 002000E3 		movw	r2, #:lower16:.LC7
 6603 0280 002040E3 		movt	r2, #:upper16:.LC7
 6604 0284 C11C00E3 		movw	r1, #3265
 6605 0288 000000E3 		movw	r0, #:lower16:.LC8
 6606 028c 000040E3 		movt	r0, #:upper16:.LC8
 6607 0290 FEFFFFEB 		bl	RME_Log
 6608              	.L419:
 6609              		.loc 1 3265 5
 6610 0294 FEFFFFEA 		b	.L419
 6611              	.L418:
3266:../../Source/Kernel/rme_kernel.c ****     
3267:../../Source/Kernel/rme_kernel.c ****     /* Hardware related deletion check passed down to the HAL. The driver should make
3268:../../Source/Kernel/rme_kernel.c ****      * sure that it does not reference any lower level tables. If the driver layer does
3269:../../Source/Kernel/rme_kernel.c ****      * not conform to this, the deletion of page table is not guaranteed to main kernel
3270:../../Source/Kernel/rme_kernel.c ****      * consistency, and such consistency must be maintained by the user-level. It is 
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 175


3271:../../Source/Kernel/rme_kernel.c ****      * recommended that the driver layer enforce such consistency. */
3272:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Del_Check(Pgt_Del)<0)
 6612              		.loc 1 3272 8 is_stmt 1
 6613 0298 14001BE5 		ldr	r0, [fp, #-20]
 6614 029c FEFFFFEB 		bl	__RME_Pgt_Del_Check
3273:../../Source/Kernel/rme_kernel.c ****     {
3274:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3275:../../Source/Kernel/rme_kernel.c **** 
3276:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Pgt_Del,Type_Stat);
3277:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3278:../../Source/Kernel/rme_kernel.c ****     }
3279:../../Source/Kernel/rme_kernel.c ****     else
3280:../../Source/Kernel/rme_kernel.c ****     {
3281:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3282:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3283:../../Source/Kernel/rme_kernel.c ****     }
3284:../../Source/Kernel/rme_kernel.c ****     
3285:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
3286:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Pgt_Del,rme_ptr_t);
 6615              		.loc 1 3286 11
 6616 02a0 14301BE5 		ldr	r3, [fp, #-20]
 6617 02a4 0C3093E5 		ldr	r3, [r3, #12]
 6618 02a8 18300BE5 		str	r3, [fp, #-24]
3287:../../Source/Kernel/rme_kernel.c ****     if(((Pgt_Del->Base)&RME_PGT_TOP)!=0U)
 6619              		.loc 1 3287 17
 6620 02ac 14301BE5 		ldr	r3, [fp, #-20]
 6621 02b0 183093E5 		ldr	r3, [r3, #24]
 6622              		.loc 1 3287 24
 6623 02b4 013003E2 		and	r3, r3, #1
 6624              		.loc 1 3287 7
 6625 02b8 000053E3 		cmp	r3, #0
 6626 02bc 0600000A 		beq	.L420
3288:../../Source/Kernel/rme_kernel.c ****     {
3289:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3290:../../Source/Kernel/rme_kernel.c **** 
3291:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(RME_PGT_NMORD(Pgt_Del->Order));
 6627              		.loc 1 3291 20
 6628 02c0 14301BE5 		ldr	r3, [fp, #-20]
 6629 02c4 143093E5 		ldr	r3, [r3, #20]
 6630 02c8 7330FFE6 		uxth	r3, r3
 6631 02cc 0120A0E3 		mov	r2, #1
 6632 02d0 1233A0E1 		lsl	r3, r2, r3
 6633              		.loc 1 3291 19
 6634 02d4 0C300BE5 		str	r3, [fp, #-12]
 6635 02d8 050000EA 		b	.L421
 6636              	.L420:
3292:../../Source/Kernel/rme_kernel.c ****     }
3293:../../Source/Kernel/rme_kernel.c ****     else
3294:../../Source/Kernel/rme_kernel.c ****     {
3295:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3296:../../Source/Kernel/rme_kernel.c **** 
3297:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(RME_PGT_NMORD(Pgt_Del->Order));
 6637              		.loc 1 3297 20
 6638 02dc 14301BE5 		ldr	r3, [fp, #-20]
 6639 02e0 143093E5 		ldr	r3, [r3, #20]
 6640 02e4 7330FFE6 		uxth	r3, r3
 6641 02e8 0120A0E3 		mov	r2, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 176


 6642 02ec 1233A0E1 		lsl	r3, r2, r3
 6643              		.loc 1 3297 19
 6644 02f0 0C300BE5 		str	r3, [fp, #-12]
 6645              	.L421:
3298:../../Source/Kernel/rme_kernel.c ****     }
3299:../../Source/Kernel/rme_kernel.c ****     
3300:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
3301:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Pgt_Del,Type_Stat);
 6646              		.loc 1 3301 5
 6647 02f4 14301BE5 		ldr	r3, [fp, #-20]
 6648 02f8 0020A0E3 		mov	r2, #0
 6649 02fc 10101BE5 		ldr	r1, [fp, #-16]
 6650 0300 0300A0E1 		mov	r0, r3
 6651 0304 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6652 0308 0030A0E1 		mov	r3, r0
 6653              		.loc 1 3301 5 is_stmt 0 discriminator 1
 6654 030c 000053E3 		cmp	r3, #0
 6655 0310 0100001A 		bne	.L422
 6656 0314 0030E0E3 		mvn	r3, #0
 6657              		.loc 1 3301 5
 6658 0318 0F0000EA 		b	.L404
 6659              	.L422:
3302:../../Source/Kernel/rme_kernel.c **** 
3303:../../Source/Kernel/rme_kernel.c ****     /* Try to erase the area - This must be successful */
3304:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Table_Size)==0);
 6660              		.loc 1 3304 5 is_stmt 1
 6661 031c 0C101BE5 		ldr	r1, [fp, #-12]
 6662 0320 18001BE5 		ldr	r0, [fp, #-24]
 6663 0324 FEFFFFEB 		bl	_RME_Kot_Erase
 6664 0328 0030A0E1 		mov	r3, r0
 6665              		.loc 1 3304 5 is_stmt 0 discriminator 1
 6666 032c 000053E3 		cmp	r3, #0
 6667 0330 0800000A 		beq	.L423
 6668 0334 003000E3 		movw	r3, #:lower16:.LC6
 6669 0338 003040E3 		movt	r3, #:upper16:.LC6
 6670 033c 002000E3 		movw	r2, #:lower16:.LC7
 6671 0340 002040E3 		movt	r2, #:upper16:.LC7
 6672 0344 E81C00E3 		movw	r1, #3304
 6673 0348 000000E3 		movw	r0, #:lower16:.LC8
 6674 034c 000040E3 		movt	r0, #:upper16:.LC8
 6675 0350 FEFFFFEB 		bl	RME_Log
 6676              	.L424:
 6677              		.loc 1 3304 5
 6678 0354 FEFFFFEA 		b	.L424
 6679              	.L423:
3305:../../Source/Kernel/rme_kernel.c **** 
3306:../../Source/Kernel/rme_kernel.c ****     return 0;
 6680              		.loc 1 3306 12 is_stmt 1
 6681 0358 0030A0E3 		mov	r3, #0
 6682              	.L404:
3307:../../Source/Kernel/rme_kernel.c **** }
 6683              		.loc 1 3307 1
 6684 035c 0300A0E1 		mov	r0, r3
 6685 0360 04D04BE2 		sub	sp, fp, #4
 6686              		.cfi_def_cfa 13, 8
 6687              		@ sp needed
 6688 0364 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 177


 6689              		.cfi_endproc
 6690              	.LFE33:
 6692              		.section	.text._RME_Pgt_Add,"ax",%progbits
 6693              		.align	2
 6694              		.syntax unified
 6695              		.arm
 6697              	_RME_Pgt_Add:
 6698              	.LFB34:
3308:../../Source/Kernel/rme_kernel.c **** #endif
3309:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Del *************************************************/
3310:../../Source/Kernel/rme_kernel.c **** 
3311:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Add ******************************************************
3312:../../Source/Kernel/rme_kernel.c **** Description : Delegate a page from one page table to another. This is the only
3313:../../Source/Kernel/rme_kernel.c ****               way to add pages to new page tables after the system boots.
3314:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3315:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Dst - The capability to the destination page
3316:../../Source/Kernel/rme_kernel.c ****                                       directory.
3317:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3318:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate to in the
3319:../../Source/Kernel/rme_kernel.c ****                                   destination page directory.
3320:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Dst - The page access permission for the
3321:../../Source/Kernel/rme_kernel.c ****                                    destination page.
3322:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Src - The capability to the source page 
3323:../../Source/Kernel/rme_kernel.c ****                                       directory.
3324:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3325:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate from in the source
3326:../../Source/Kernel/rme_kernel.c ****                                   page directory.
3327:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Index - The index of the physical address frame to
3328:../../Source/Kernel/rme_kernel.c ****                                 delegate. For example, if the destination
3329:../../Source/Kernel/rme_kernel.c ****                                 directory's page size is 1/4 of that of the
3330:../../Source/Kernel/rme_kernel.c ****                                 source directory, index=0 will delegate the
3331:../../Source/Kernel/rme_kernel.c ****                                 first 1/4, index=1 will delegate the second
3332:../../Source/Kernel/rme_kernel.c ****                                 1/4, index=2 will delegate the third 1/4, and
3333:../../Source/Kernel/rme_kernel.c ****                                 index=3 will delegate the last 1/4.
3334:../../Source/Kernel/rme_kernel.c ****                                 All other index values are illegal.
3335:../../Source/Kernel/rme_kernel.c **** Output      : None.
3336:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3337:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3338:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3339:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Add(struct RME_Cap_Cpt* Cpt, 
3340:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Dst,
3341:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Dst,
3342:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Dst,
3343:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Src,
3344:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Src,
3345:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Index)
3346:../../Source/Kernel/rme_kernel.c **** {
 6699              		.loc 1 3346 1
 6700              		.cfi_startproc
 6701              		@ args = 12, pretend = 0, frame = 48
 6702              		@ frame_needed = 1, uses_anonymous_args = 0
 6703 0000 00482DE9 		push	{fp, lr}
 6704              		.cfi_def_cfa_offset 8
 6705              		.cfi_offset 11, -8
 6706              		.cfi_offset 14, -4
 6707 0004 04B08DE2 		add	fp, sp, #4
 6708              		.cfi_def_cfa 11, 4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 178


 6709 0008 30D04DE2 		sub	sp, sp, #48
 6710 000c 28000BE5 		str	r0, [fp, #-40]
 6711 0010 2C100BE5 		str	r1, [fp, #-44]
 6712 0014 30200BE5 		str	r2, [fp, #-48]
 6713 0018 34300BE5 		str	r3, [fp, #-52]
3347:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Src;
3348:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Dst;
3349:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Dst;
3350:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Src;
3351:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag_Src;
3352:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3353:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Src;
3354:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Dst;
3355:../../Source/Kernel/rme_kernel.c **** 
3356:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3357:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Dst,RME_CAP_TYPE_PGT,
 6714              		.loc 1 3357 5
 6715 001c 2C301BE5 		ldr	r3, [fp, #-44]
 6716 0020 803003E2 		and	r3, r3, #128
 6717 0024 000053E3 		cmp	r3, #0
 6718 0028 1C00001A 		bne	.L426
 6719              		.loc 1 3357 5 is_stmt 0 discriminator 1
 6720 002c 28301BE5 		ldr	r3, [fp, #-40]
 6721 0030 142093E5 		ldr	r2, [r3, #20]
 6722 0034 2C301BE5 		ldr	r3, [fp, #-44]
 6723 0038 030052E1 		cmp	r2, r3
 6724 003c 0100008A 		bhi	.L427
 6725              		.loc 1 3357 5 discriminator 3
 6726 0040 0230E0E3 		mvn	r3, #2
 6727              		.loc 1 3357 5
 6728 0044 260100EA 		b	.L456
 6729              	.L427:
 6730              		.loc 1 3357 5 discriminator 4
 6731 0048 2C301BE5 		ldr	r3, [fp, #-44]
 6732 004c 8322A0E1 		lsl	r2, r3, #5
 6733 0050 28301BE5 		ldr	r3, [fp, #-40]
 6734 0054 0C3093E5 		ldr	r3, [r3, #12]
 6735 0058 033082E0 		add	r3, r2, r3
 6736 005c 0C300BE5 		str	r3, [fp, #-12]
 6737 0060 0C301BE5 		ldr	r3, [fp, #-12]
 6738 0064 0300A0E1 		mov	r0, r3
 6739 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6740 006c 14000BE5 		str	r0, [fp, #-20]
 6741              		.loc 1 3357 5 discriminator 1
 6742 0070 14301BE5 		ldr	r3, [fp, #-20]
 6743 0074 FF3803E2 		and	r3, r3, #16711680
 6744 0078 020853E3 		cmp	r3, #131072
 6745 007c 0100001A 		bne	.L429
 6746              		.loc 1 3357 5 discriminator 5
 6747 0080 0830E0E3 		mvn	r3, #8
 6748              		.loc 1 3357 5
 6749 0084 160100EA 		b	.L456
 6750              	.L429:
 6751              		.loc 1 3357 5 discriminator 6
 6752 0088 14301BE5 		ldr	r3, [fp, #-20]
 6753 008c 233CA0E1 		lsr	r3, r3, #24
 6754 0090 040053E3 		cmp	r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 179


 6755 0094 3F00000A 		beq	.L430
 6756              		.loc 1 3357 5 discriminator 7
 6757 0098 0130E0E3 		mvn	r3, #1
 6758              		.loc 1 3357 5
 6759 009c 100100EA 		b	.L456
 6760              	.L426:
 6761              		.loc 1 3357 5 discriminator 2
 6762 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 6763 00a4 2324A0E1 		lsr	r2, r3, #8
 6764 00a8 28301BE5 		ldr	r3, [fp, #-40]
 6765 00ac 143093E5 		ldr	r3, [r3, #20]
 6766 00b0 030052E1 		cmp	r2, r3
 6767 00b4 0100003A 		bcc	.L431
 6768              		.loc 1 3357 5 discriminator 8
 6769 00b8 0230E0E3 		mvn	r3, #2
 6770              		.loc 1 3357 5
 6771 00bc 080100EA 		b	.L456
 6772              	.L431:
 6773              		.loc 1 3357 5 discriminator 9
 6774 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 6775 00c4 2334A0E1 		lsr	r3, r3, #8
 6776 00c8 8322A0E1 		lsl	r2, r3, #5
 6777 00cc 28301BE5 		ldr	r3, [fp, #-40]
 6778 00d0 0C3093E5 		ldr	r3, [r3, #12]
 6779 00d4 033082E0 		add	r3, r2, r3
 6780 00d8 0C300BE5 		str	r3, [fp, #-12]
 6781 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 6782 00e0 0300A0E1 		mov	r0, r3
 6783 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6784 00e8 14000BE5 		str	r0, [fp, #-20]
 6785              		.loc 1 3357 5 discriminator 1
 6786 00ec 14301BE5 		ldr	r3, [fp, #-20]
 6787 00f0 FF3803E2 		and	r3, r3, #16711680
 6788 00f4 020853E3 		cmp	r3, #131072
 6789 00f8 0100001A 		bne	.L432
 6790              		.loc 1 3357 5 discriminator 10
 6791 00fc 0830E0E3 		mvn	r3, #8
 6792              		.loc 1 3357 5
 6793 0100 F70000EA 		b	.L456
 6794              	.L432:
 6795              		.loc 1 3357 5 discriminator 11
 6796 0104 14301BE5 		ldr	r3, [fp, #-20]
 6797 0108 233CA0E1 		lsr	r3, r3, #24
 6798 010c 030053E3 		cmp	r3, #3
 6799 0110 0100000A 		beq	.L433
 6800              		.loc 1 3357 5 discriminator 12
 6801 0114 0130E0E3 		mvn	r3, #1
 6802              		.loc 1 3357 5
 6803 0118 F10000EA 		b	.L456
 6804              	.L433:
 6805              		.loc 1 3357 5 discriminator 13
 6806 011c 2C301BE5 		ldr	r3, [fp, #-44]
 6807 0120 7F2003E2 		and	r2, r3, #127
 6808 0124 0C301BE5 		ldr	r3, [fp, #-12]
 6809 0128 143093E5 		ldr	r3, [r3, #20]
 6810 012c 030052E1 		cmp	r2, r3
 6811 0130 0100003A 		bcc	.L434
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 180


 6812              		.loc 1 3357 5 discriminator 14
 6813 0134 0230E0E3 		mvn	r3, #2
 6814              		.loc 1 3357 5
 6815 0138 E90000EA 		b	.L456
 6816              	.L434:
 6817              		.loc 1 3357 5 discriminator 15
 6818 013c 2C301BE5 		ldr	r3, [fp, #-44]
 6819 0140 7F3003E2 		and	r3, r3, #127
 6820 0144 8322A0E1 		lsl	r2, r3, #5
 6821 0148 0C301BE5 		ldr	r3, [fp, #-12]
 6822 014c 0C3093E5 		ldr	r3, [r3, #12]
 6823 0150 033082E0 		add	r3, r2, r3
 6824 0154 0C300BE5 		str	r3, [fp, #-12]
 6825 0158 0C301BE5 		ldr	r3, [fp, #-12]
 6826 015c 0300A0E1 		mov	r0, r3
 6827 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6828 0164 14000BE5 		str	r0, [fp, #-20]
 6829              		.loc 1 3357 5 discriminator 1
 6830 0168 14301BE5 		ldr	r3, [fp, #-20]
 6831 016c FF3803E2 		and	r3, r3, #16711680
 6832 0170 020853E3 		cmp	r3, #131072
 6833 0174 0100001A 		bne	.L435
 6834              		.loc 1 3357 5 discriminator 16
 6835 0178 0830E0E3 		mvn	r3, #8
 6836              		.loc 1 3357 5
 6837 017c D80000EA 		b	.L456
 6838              	.L435:
 6839              		.loc 1 3357 5 discriminator 17
 6840 0180 14301BE5 		ldr	r3, [fp, #-20]
 6841 0184 233CA0E1 		lsr	r3, r3, #24
 6842 0188 040053E3 		cmp	r3, #4
 6843 018c 0100000A 		beq	.L430
 6844              		.loc 1 3357 5 discriminator 18
 6845 0190 0130E0E3 		mvn	r3, #1
 6846              		.loc 1 3357 5
 6847 0194 D20000EA 		b	.L456
 6848              	.L430:
3358:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Dst,Type_Stat);
3359:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Src,RME_CAP_TYPE_PGT,
 6849              		.loc 1 3359 5 is_stmt 1
 6850 0198 04309BE5 		ldr	r3, [fp, #4]
 6851 019c 803003E2 		and	r3, r3, #128
 6852 01a0 000053E3 		cmp	r3, #0
 6853 01a4 1C00001A 		bne	.L436
 6854              		.loc 1 3359 5 is_stmt 0 discriminator 1
 6855 01a8 28301BE5 		ldr	r3, [fp, #-40]
 6856 01ac 142093E5 		ldr	r2, [r3, #20]
 6857 01b0 04309BE5 		ldr	r3, [fp, #4]
 6858 01b4 030052E1 		cmp	r2, r3
 6859 01b8 0100008A 		bhi	.L437
 6860              		.loc 1 3359 5 discriminator 3
 6861 01bc 0230E0E3 		mvn	r3, #2
 6862              		.loc 1 3359 5
 6863 01c0 C70000EA 		b	.L456
 6864              	.L437:
 6865              		.loc 1 3359 5 discriminator 4
 6866 01c4 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 181


 6867 01c8 8322A0E1 		lsl	r2, r3, #5
 6868 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6869 01d0 0C3093E5 		ldr	r3, [r3, #12]
 6870 01d4 033082E0 		add	r3, r2, r3
 6871 01d8 08300BE5 		str	r3, [fp, #-8]
 6872 01dc 08301BE5 		ldr	r3, [fp, #-8]
 6873 01e0 0300A0E1 		mov	r0, r3
 6874 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6875 01e8 14000BE5 		str	r0, [fp, #-20]
 6876              		.loc 1 3359 5 discriminator 1
 6877 01ec 14301BE5 		ldr	r3, [fp, #-20]
 6878 01f0 FF3803E2 		and	r3, r3, #16711680
 6879 01f4 020853E3 		cmp	r3, #131072
 6880 01f8 0100001A 		bne	.L438
 6881              		.loc 1 3359 5 discriminator 5
 6882 01fc 0830E0E3 		mvn	r3, #8
 6883              		.loc 1 3359 5
 6884 0200 B70000EA 		b	.L456
 6885              	.L438:
 6886              		.loc 1 3359 5 discriminator 6
 6887 0204 14301BE5 		ldr	r3, [fp, #-20]
 6888 0208 233CA0E1 		lsr	r3, r3, #24
 6889 020c 040053E3 		cmp	r3, #4
 6890 0210 3F00000A 		beq	.L439
 6891              		.loc 1 3359 5 discriminator 7
 6892 0214 0130E0E3 		mvn	r3, #1
 6893              		.loc 1 3359 5
 6894 0218 B10000EA 		b	.L456
 6895              	.L436:
 6896              		.loc 1 3359 5 discriminator 2
 6897 021c 04309BE5 		ldr	r3, [fp, #4]
 6898 0220 2324A0E1 		lsr	r2, r3, #8
 6899 0224 28301BE5 		ldr	r3, [fp, #-40]
 6900 0228 143093E5 		ldr	r3, [r3, #20]
 6901 022c 030052E1 		cmp	r2, r3
 6902 0230 0100003A 		bcc	.L440
 6903              		.loc 1 3359 5 discriminator 8
 6904 0234 0230E0E3 		mvn	r3, #2
 6905              		.loc 1 3359 5
 6906 0238 A90000EA 		b	.L456
 6907              	.L440:
 6908              		.loc 1 3359 5 discriminator 9
 6909 023c 04309BE5 		ldr	r3, [fp, #4]
 6910 0240 2334A0E1 		lsr	r3, r3, #8
 6911 0244 8322A0E1 		lsl	r2, r3, #5
 6912 0248 28301BE5 		ldr	r3, [fp, #-40]
 6913 024c 0C3093E5 		ldr	r3, [r3, #12]
 6914 0250 033082E0 		add	r3, r2, r3
 6915 0254 08300BE5 		str	r3, [fp, #-8]
 6916 0258 08301BE5 		ldr	r3, [fp, #-8]
 6917 025c 0300A0E1 		mov	r0, r3
 6918 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6919 0264 14000BE5 		str	r0, [fp, #-20]
 6920              		.loc 1 3359 5 discriminator 1
 6921 0268 14301BE5 		ldr	r3, [fp, #-20]
 6922 026c FF3803E2 		and	r3, r3, #16711680
 6923 0270 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 182


 6924 0274 0100001A 		bne	.L441
 6925              		.loc 1 3359 5 discriminator 10
 6926 0278 0830E0E3 		mvn	r3, #8
 6927              		.loc 1 3359 5
 6928 027c 980000EA 		b	.L456
 6929              	.L441:
 6930              		.loc 1 3359 5 discriminator 11
 6931 0280 14301BE5 		ldr	r3, [fp, #-20]
 6932 0284 233CA0E1 		lsr	r3, r3, #24
 6933 0288 030053E3 		cmp	r3, #3
 6934 028c 0100000A 		beq	.L442
 6935              		.loc 1 3359 5 discriminator 12
 6936 0290 0130E0E3 		mvn	r3, #1
 6937              		.loc 1 3359 5
 6938 0294 920000EA 		b	.L456
 6939              	.L442:
 6940              		.loc 1 3359 5 discriminator 13
 6941 0298 04309BE5 		ldr	r3, [fp, #4]
 6942 029c 7F2003E2 		and	r2, r3, #127
 6943 02a0 08301BE5 		ldr	r3, [fp, #-8]
 6944 02a4 143093E5 		ldr	r3, [r3, #20]
 6945 02a8 030052E1 		cmp	r2, r3
 6946 02ac 0100003A 		bcc	.L443
 6947              		.loc 1 3359 5 discriminator 14
 6948 02b0 0230E0E3 		mvn	r3, #2
 6949              		.loc 1 3359 5
 6950 02b4 8A0000EA 		b	.L456
 6951              	.L443:
 6952              		.loc 1 3359 5 discriminator 15
 6953 02b8 04309BE5 		ldr	r3, [fp, #4]
 6954 02bc 7F3003E2 		and	r3, r3, #127
 6955 02c0 8322A0E1 		lsl	r2, r3, #5
 6956 02c4 08301BE5 		ldr	r3, [fp, #-8]
 6957 02c8 0C3093E5 		ldr	r3, [r3, #12]
 6958 02cc 033082E0 		add	r3, r2, r3
 6959 02d0 08300BE5 		str	r3, [fp, #-8]
 6960 02d4 08301BE5 		ldr	r3, [fp, #-8]
 6961 02d8 0300A0E1 		mov	r0, r3
 6962 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6963 02e0 14000BE5 		str	r0, [fp, #-20]
 6964              		.loc 1 3359 5 discriminator 1
 6965 02e4 14301BE5 		ldr	r3, [fp, #-20]
 6966 02e8 FF3803E2 		and	r3, r3, #16711680
 6967 02ec 020853E3 		cmp	r3, #131072
 6968 02f0 0100001A 		bne	.L444
 6969              		.loc 1 3359 5 discriminator 16
 6970 02f4 0830E0E3 		mvn	r3, #8
 6971              		.loc 1 3359 5
 6972 02f8 790000EA 		b	.L456
 6973              	.L444:
 6974              		.loc 1 3359 5 discriminator 17
 6975 02fc 14301BE5 		ldr	r3, [fp, #-20]
 6976 0300 233CA0E1 		lsr	r3, r3, #24
 6977 0304 040053E3 		cmp	r3, #4
 6978 0308 0100000A 		beq	.L439
 6979              		.loc 1 3359 5 discriminator 18
 6980 030c 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 183


 6981              		.loc 1 3359 5
 6982 0310 730000EA 		b	.L456
 6983              	.L439:
3360:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Src,Type_Stat);
3361:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3362:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Dst,RME_PGT_FLAG_ADD_DST);
 6984              		.loc 1 3362 5 is_stmt 1
 6985 0314 0C301BE5 		ldr	r3, [fp, #-12]
 6986 0318 083093E5 		ldr	r3, [r3, #8]
 6987 031c 023003E2 		and	r3, r3, #2
 6988 0320 000053E3 		cmp	r3, #0
 6989 0324 0100001A 		bne	.L445
 6990              		.loc 1 3362 5 is_stmt 0 discriminator 1
 6991 0328 0630E0E3 		mvn	r3, #6
 6992              		.loc 1 3362 5
 6993 032c 6C0000EA 		b	.L456
 6994              	.L445:
3363:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Src,RME_PGT_FLAG_ADD_SRC);
 6995              		.loc 1 3363 5 is_stmt 1
 6996 0330 08301BE5 		ldr	r3, [fp, #-8]
 6997 0334 083093E5 		ldr	r3, [r3, #8]
 6998 0338 013003E2 		and	r3, r3, #1
 6999 033c 000053E3 		cmp	r3, #0
 7000 0340 0100001A 		bne	.L446
 7001              		.loc 1 3363 5 is_stmt 0 discriminator 1
 7002 0344 0630E0E3 		mvn	r3, #6
 7003              		.loc 1 3363 5
 7004 0348 650000EA 		b	.L456
 7005              	.L446:
3364:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3365:../../Source/Kernel/rme_kernel.c ****     if((Pos_Dst>RME_PGT_FLAG_HIGH(Pgt_Dst->Head.Flag))||
 7006              		.loc 1 3365 17 is_stmt 1
 7007 034c 0C301BE5 		ldr	r3, [fp, #-12]
 7008 0350 083093E5 		ldr	r3, [r3, #8]
 7009 0354 233AA0E1 		lsr	r3, r3, #20
 7010              		.loc 1 3365 7
 7011 0358 30201BE5 		ldr	r2, [fp, #-48]
 7012 035c 030052E1 		cmp	r2, r3
 7013 0360 1300008A 		bhi	.L447
3366:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7014              		.loc 1 3366 17
 7015 0364 0C301BE5 		ldr	r3, [fp, #-12]
 7016 0368 083093E5 		ldr	r3, [r3, #8]
 7017 036c 2334A0E1 		lsr	r3, r3, #8
 7018 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3365:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7019              		.loc 1 3365 55 discriminator 1
 7020 0374 30201BE5 		ldr	r2, [fp, #-48]
 7021 0378 030052E1 		cmp	r2, r3
 7022 037c 0C00003A 		bcc	.L447
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 7023              		.loc 1 3367 17
 7024 0380 08301BE5 		ldr	r3, [fp, #-8]
 7025 0384 083093E5 		ldr	r3, [r3, #8]
 7026 0388 233AA0E1 		lsr	r3, r3, #20
3366:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7027              		.loc 1 3366 54
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 184


 7028 038c 08209BE5 		ldr	r2, [fp, #8]
 7029 0390 030052E1 		cmp	r2, r3
 7030 0394 0600008A 		bhi	.L447
3368:../../Source/Kernel/rme_kernel.c ****        (Pos_Src<RME_PGT_FLAG_LOW(Pgt_Src->Head.Flag)))
 7031              		.loc 1 3368 17
 7032 0398 08301BE5 		ldr	r3, [fp, #-8]
 7033 039c 083093E5 		ldr	r3, [r3, #8]
 7034 03a0 2334A0E1 		lsr	r3, r3, #8
 7035 03a4 5330EBE7 		ubfx	r3, r3, #0, #12
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 7036              		.loc 1 3367 55
 7037 03a8 08209BE5 		ldr	r2, [fp, #8]
 7038 03ac 030052E1 		cmp	r2, r3
 7039 03b0 0100002A 		bcs	.L448
 7040              	.L447:
3369:../../Source/Kernel/rme_kernel.c ****     {
3370:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3371:../../Source/Kernel/rme_kernel.c **** 
3372:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7041              		.loc 1 3372 16
 7042 03b4 0630E0E3 		mvn	r3, #6
 7043 03b8 490000EA 		b	.L456
 7044              	.L448:
3373:../../Source/Kernel/rme_kernel.c ****     }
3374:../../Source/Kernel/rme_kernel.c ****     else
3375:../../Source/Kernel/rme_kernel.c ****     {
3376:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3377:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3378:../../Source/Kernel/rme_kernel.c ****     }
3379:../../Source/Kernel/rme_kernel.c **** 
3380:../../Source/Kernel/rme_kernel.c ****     /* See if the size order relationship is correct */
3381:../../Source/Kernel/rme_kernel.c ****     Szord_Dst=RME_PGT_SZORD(Pgt_Dst->Order);
 7045              		.loc 1 3381 15
 7046 03bc 0C301BE5 		ldr	r3, [fp, #-12]
 7047 03c0 143093E5 		ldr	r3, [r3, #20]
 7048              		.loc 1 3381 14
 7049 03c4 2338A0E1 		lsr	r3, r3, #16
 7050 03c8 18300BE5 		str	r3, [fp, #-24]
3382:../../Source/Kernel/rme_kernel.c ****     Szord_Src=RME_PGT_SZORD(Pgt_Src->Order);
 7051              		.loc 1 3382 15
 7052 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7053 03d0 143093E5 		ldr	r3, [r3, #20]
 7054              		.loc 1 3382 14
 7055 03d4 2338A0E1 		lsr	r3, r3, #16
 7056 03d8 1C300BE5 		str	r3, [fp, #-28]
3383:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst>Szord_Src)
 7057              		.loc 1 3383 7
 7058 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7059 03e0 1C301BE5 		ldr	r3, [fp, #-28]
 7060 03e4 030052E1 		cmp	r2, r3
 7061 03e8 0100009A 		bls	.L449
3384:../../Source/Kernel/rme_kernel.c ****     {
3385:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3386:../../Source/Kernel/rme_kernel.c **** 
3387:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7062              		.loc 1 3387 16
 7063 03ec 6430E0E3 		mvn	r3, #100
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 185


 7064 03f0 3B0000EA 		b	.L456
 7065              	.L449:
3388:../../Source/Kernel/rme_kernel.c ****     }
3389:../../Source/Kernel/rme_kernel.c ****     else
3390:../../Source/Kernel/rme_kernel.c ****     {
3391:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3392:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3393:../../Source/Kernel/rme_kernel.c ****     }
3394:../../Source/Kernel/rme_kernel.c **** 
3395:../../Source/Kernel/rme_kernel.c ****     /* See if the positions are out of range - NMORD is restricted, no UB */
3396:../../Source/Kernel/rme_kernel.c ****     if(((Pos_Dst>>RME_PGT_NMORD(Pgt_Dst->Order))!=0U)||
 7066              		.loc 1 3396 19
 7067 03f4 0C301BE5 		ldr	r3, [fp, #-12]
 7068 03f8 143093E5 		ldr	r3, [r3, #20]
 7069 03fc 7330FFE6 		uxth	r3, r3
 7070              		.loc 1 3396 17
 7071 0400 30201BE5 		ldr	r2, [fp, #-48]
 7072 0404 3233A0E1 		lsr	r3, r2, r3
 7073              		.loc 1 3396 7
 7074 0408 000053E3 		cmp	r3, #0
 7075 040c 0600001A 		bne	.L450
3397:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7076              		.loc 1 3397 19
 7077 0410 08301BE5 		ldr	r3, [fp, #-8]
 7078 0414 143093E5 		ldr	r3, [r3, #20]
 7079 0418 7330FFE6 		uxth	r3, r3
 7080              		.loc 1 3397 17
 7081 041c 08209BE5 		ldr	r2, [fp, #8]
 7082 0420 3233A0E1 		lsr	r3, r2, r3
3396:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7083              		.loc 1 3396 54 discriminator 1
 7084 0424 000053E3 		cmp	r3, #0
 7085 0428 0100000A 		beq	.L451
 7086              	.L450:
3398:../../Source/Kernel/rme_kernel.c ****     {
3399:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3400:../../Source/Kernel/rme_kernel.c **** 
3401:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7087              		.loc 1 3401 16
 7088 042c 6430E0E3 		mvn	r3, #100
 7089 0430 2B0000EA 		b	.L456
 7090              	.L451:
3402:../../Source/Kernel/rme_kernel.c ****     }
3403:../../Source/Kernel/rme_kernel.c ****     else
3404:../../Source/Kernel/rme_kernel.c ****     {
3405:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3406:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3407:../../Source/Kernel/rme_kernel.c ****     }
3408:../../Source/Kernel/rme_kernel.c **** 
3409:../../Source/Kernel/rme_kernel.c ****     /* See if the source subposition is out of range - avoid UB */
3410:../../Source/Kernel/rme_kernel.c ****     if(Szord_Src<RME_WORD_BIT)
 7091              		.loc 1 3410 7
 7092 0434 1C301BE5 		ldr	r3, [fp, #-28]
 7093 0438 1F0053E3 		cmp	r3, #31
 7094 043c 0900008A 		bhi	.L452
3411:../../Source/Kernel/rme_kernel.c ****     {
3412:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 186


3413:../../Source/Kernel/rme_kernel.c ****         
3414:../../Source/Kernel/rme_kernel.c ****         /* No UB because Szord_Dst<=Szord_Src */
3415:../../Source/Kernel/rme_kernel.c ****         if(RME_POW2(Szord_Src)<=(Index<<Szord_Dst))
 7095              		.loc 1 3415 12
 7096 0440 0120A0E3 		mov	r2, #1
 7097 0444 1C301BE5 		ldr	r3, [fp, #-28]
 7098 0448 1223A0E1 		lsl	r2, r2, r3
 7099              		.loc 1 3415 39
 7100 044c 0C109BE5 		ldr	r1, [fp, #12]
 7101 0450 18301BE5 		ldr	r3, [fp, #-24]
 7102 0454 1133A0E1 		lsl	r3, r1, r3
 7103              		.loc 1 3415 11
 7104 0458 030052E1 		cmp	r2, r3
 7105 045c 0100008A 		bhi	.L452
3416:../../Source/Kernel/rme_kernel.c ****         {
3417:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3418:../../Source/Kernel/rme_kernel.c **** 
3419:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
 7106              		.loc 1 3419 20
 7107 0460 6430E0E3 		mvn	r3, #100
 7108 0464 1E0000EA 		b	.L456
 7109              	.L452:
3420:../../Source/Kernel/rme_kernel.c ****         }
3421:../../Source/Kernel/rme_kernel.c ****         else
3422:../../Source/Kernel/rme_kernel.c ****         {
3423:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3424:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3425:../../Source/Kernel/rme_kernel.c ****         }
3426:../../Source/Kernel/rme_kernel.c ****     }
3427:../../Source/Kernel/rme_kernel.c ****     else
3428:../../Source/Kernel/rme_kernel.c ****     {
3429:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3430:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3431:../../Source/Kernel/rme_kernel.c ****     }
3432:../../Source/Kernel/rme_kernel.c **** 
3433:../../Source/Kernel/rme_kernel.c ****     /* Get the physical address and RME standard flags of that source page */
3434:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Lookup(Pgt_Src,Pos_Src,&Paddr_Src,&Flag_Src)<0)
 7110              		.loc 1 3434 8
 7111 0468 24304BE2 		sub	r3, fp, #36
 7112 046c 20204BE2 		sub	r2, fp, #32
 7113 0470 08109BE5 		ldr	r1, [fp, #8]
 7114 0474 08001BE5 		ldr	r0, [fp, #-8]
 7115 0478 FEFFFFEB 		bl	__RME_Pgt_Lookup
3435:../../Source/Kernel/rme_kernel.c ****     {
3436:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3437:../../Source/Kernel/rme_kernel.c **** 
3438:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3439:../../Source/Kernel/rme_kernel.c ****     }
3440:../../Source/Kernel/rme_kernel.c ****     else
3441:../../Source/Kernel/rme_kernel.c ****     {
3442:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3443:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3444:../../Source/Kernel/rme_kernel.c ****     }
3445:../../Source/Kernel/rme_kernel.c **** 
3446:../../Source/Kernel/rme_kernel.c ****     /* Calculate the destination physical address - avoid UB */
3447:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst<RME_WORD_BIT)
 7116              		.loc 1 3447 7
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 187


 7117 047c 18301BE5 		ldr	r3, [fp, #-24]
 7118 0480 1F0053E3 		cmp	r3, #31
 7119 0484 0600008A 		bhi	.L453
3448:../../Source/Kernel/rme_kernel.c ****     {
3449:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3450:../../Source/Kernel/rme_kernel.c ****         
3451:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src+(Index<<Szord_Dst);
 7120              		.loc 1 3451 35
 7121 0488 0C209BE5 		ldr	r2, [fp, #12]
 7122 048c 18301BE5 		ldr	r3, [fp, #-24]
 7123 0490 1223A0E1 		lsl	r2, r2, r3
 7124              		.loc 1 3451 28
 7125 0494 20301BE5 		ldr	r3, [fp, #-32]
 7126              		.loc 1 3451 18
 7127 0498 033082E0 		add	r3, r2, r3
 7128 049c 10300BE5 		str	r3, [fp, #-16]
 7129 04a0 010000EA 		b	.L454
 7130              	.L453:
3452:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3453:../../Source/Kernel/rme_kernel.c ****         /* Check if we force identical mapping */
3454:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=(RME_PGT_BASE(Pgt_Dst->Base)+(Pos_Dst<<Szord_Dst)))
3455:../../Source/Kernel/rme_kernel.c ****         {
3456:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3457:../../Source/Kernel/rme_kernel.c **** 
3458:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3459:../../Source/Kernel/rme_kernel.c ****         }
3460:../../Source/Kernel/rme_kernel.c ****         else
3461:../../Source/Kernel/rme_kernel.c ****         {
3462:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3463:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3464:../../Source/Kernel/rme_kernel.c ****         }
3465:../../Source/Kernel/rme_kernel.c **** #endif
3466:../../Source/Kernel/rme_kernel.c ****     }
3467:../../Source/Kernel/rme_kernel.c ****     /* The destination is also full range */
3468:../../Source/Kernel/rme_kernel.c ****     else
3469:../../Source/Kernel/rme_kernel.c ****     {
3470:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3471:../../Source/Kernel/rme_kernel.c ****         
3472:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src;
 7131              		.loc 1 3472 18
 7132 04a4 20301BE5 		ldr	r3, [fp, #-32]
 7133 04a8 10300BE5 		str	r3, [fp, #-16]
 7134              	.L454:
3473:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3474:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=RME_PGT_BASE(Pgt_Dst->Base))
3475:../../Source/Kernel/rme_kernel.c ****         {
3476:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3477:../../Source/Kernel/rme_kernel.c **** 
3478:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3479:../../Source/Kernel/rme_kernel.c ****         }
3480:../../Source/Kernel/rme_kernel.c ****         else
3481:../../Source/Kernel/rme_kernel.c ****         {
3482:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3483:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3484:../../Source/Kernel/rme_kernel.c ****         }
3485:../../Source/Kernel/rme_kernel.c **** #endif
3486:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 188


3487:../../Source/Kernel/rme_kernel.c ****     
3488:../../Source/Kernel/rme_kernel.c ****     /* Analyze the flags - we do not allow expansion of access permissions */
3489:../../Source/Kernel/rme_kernel.c ****     if(((Flag_Dst)&(~Flag_Src))!=0U)
 7135              		.loc 1 3489 21
 7136 04ac 24301BE5 		ldr	r3, [fp, #-36]
 7137 04b0 0320E0E1 		mvn	r2, r3
 7138              		.loc 1 3489 19
 7139 04b4 34301BE5 		ldr	r3, [fp, #-52]
 7140 04b8 023003E0 		and	r3, r3, r2
 7141              		.loc 1 3489 7
 7142 04bc 000053E3 		cmp	r3, #0
 7143 04c0 0100000A 		beq	.L455
3490:../../Source/Kernel/rme_kernel.c ****     {
3491:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3492:../../Source/Kernel/rme_kernel.c **** 
3493:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_PERM;
 7144              		.loc 1 3493 16
 7145 04c4 6730E0E3 		mvn	r3, #103
 7146 04c8 050000EA 		b	.L456
 7147              	.L455:
3494:../../Source/Kernel/rme_kernel.c ****     }
3495:../../Source/Kernel/rme_kernel.c ****     else
3496:../../Source/Kernel/rme_kernel.c ****     {
3497:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3498:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3499:../../Source/Kernel/rme_kernel.c ****     }
3500:../../Source/Kernel/rme_kernel.c **** 
3501:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3502:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3503:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Dst,Paddr_Dst,Pos_Dst,Flag_Dst)<0)
 7148              		.loc 1 3503 8
 7149 04cc 34301BE5 		ldr	r3, [fp, #-52]
 7150 04d0 30201BE5 		ldr	r2, [fp, #-48]
 7151 04d4 10101BE5 		ldr	r1, [fp, #-16]
 7152 04d8 0C001BE5 		ldr	r0, [fp, #-12]
 7153 04dc FEFFFFEB 		bl	__RME_Pgt_Page_Map
3504:../../Source/Kernel/rme_kernel.c ****     {
3505:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3506:../../Source/Kernel/rme_kernel.c **** 
3507:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3508:../../Source/Kernel/rme_kernel.c ****     }
3509:../../Source/Kernel/rme_kernel.c ****     else
3510:../../Source/Kernel/rme_kernel.c ****     {
3511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3512:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3513:../../Source/Kernel/rme_kernel.c ****     }
3514:../../Source/Kernel/rme_kernel.c **** 
3515:../../Source/Kernel/rme_kernel.c ****     return 0;
 7154              		.loc 1 3515 12
 7155 04e0 0030A0E3 		mov	r3, #0
 7156              	.L456:
3516:../../Source/Kernel/rme_kernel.c **** }
 7157              		.loc 1 3516 1
 7158 04e4 0300A0E1 		mov	r0, r3
 7159 04e8 04D04BE2 		sub	sp, fp, #4
 7160              		.cfi_def_cfa 13, 8
 7161              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 189


 7162 04ec 0088BDE8 		pop	{fp, pc}
 7163              		.cfi_endproc
 7164              	.LFE34:
 7166              		.section	.text._RME_Pgt_Rem,"ax",%progbits
 7167              		.align	2
 7168              		.syntax unified
 7169              		.arm
 7171              	_RME_Pgt_Rem:
 7172              	.LFB35:
3517:../../Source/Kernel/rme_kernel.c **** #endif
3518:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Add *************************************************/
3519:../../Source/Kernel/rme_kernel.c **** 
3520:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Rem ******************************************************
3521:../../Source/Kernel/rme_kernel.c **** Description : Remove a page from the page table. We are doing unmapping of a
3522:../../Source/Kernel/rme_kernel.c ****               page.
3523:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3524:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
3525:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3526:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to unmap from.
3527:../../Source/Kernel/rme_kernel.c **** Output      : None.
3528:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3529:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3530:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3531:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Rem(struct RME_Cap_Cpt* Cpt,
3532:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3533:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos)
3534:../../Source/Kernel/rme_kernel.c **** {
 7173              		.loc 1 3534 1
 7174              		.cfi_startproc
 7175              		@ args = 0, pretend = 0, frame = 24
 7176              		@ frame_needed = 1, uses_anonymous_args = 0
 7177 0000 00482DE9 		push	{fp, lr}
 7178              		.cfi_def_cfa_offset 8
 7179              		.cfi_offset 11, -8
 7180              		.cfi_offset 14, -4
 7181 0004 04B08DE2 		add	fp, sp, #4
 7182              		.cfi_def_cfa 11, 4
 7183 0008 18D04DE2 		sub	sp, sp, #24
 7184 000c 10000BE5 		str	r0, [fp, #-16]
 7185 0010 14100BE5 		str	r1, [fp, #-20]
 7186 0014 18200BE5 		str	r2, [fp, #-24]
3535:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Rem;
3536:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3537:../../Source/Kernel/rme_kernel.c ****     
3538:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3539:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_CPT,
 7187              		.loc 1 3539 5
 7188 0018 14301BE5 		ldr	r3, [fp, #-20]
 7189 001c 803003E2 		and	r3, r3, #128
 7190 0020 000053E3 		cmp	r3, #0
 7191 0024 1C00001A 		bne	.L458
 7192              		.loc 1 3539 5 is_stmt 0 discriminator 1
 7193 0028 10301BE5 		ldr	r3, [fp, #-16]
 7194 002c 142093E5 		ldr	r2, [r3, #20]
 7195 0030 14301BE5 		ldr	r3, [fp, #-20]
 7196 0034 030052E1 		cmp	r2, r3
 7197 0038 0100008A 		bhi	.L459
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 190


 7198              		.loc 1 3539 5 discriminator 3
 7199 003c 0230E0E3 		mvn	r3, #2
 7200              		.loc 1 3539 5
 7201 0040 760000EA 		b	.L460
 7202              	.L459:
 7203              		.loc 1 3539 5 discriminator 4
 7204 0044 14301BE5 		ldr	r3, [fp, #-20]
 7205 0048 8322A0E1 		lsl	r2, r3, #5
 7206 004c 10301BE5 		ldr	r3, [fp, #-16]
 7207 0050 0C3093E5 		ldr	r3, [r3, #12]
 7208 0054 033082E0 		add	r3, r2, r3
 7209 0058 08300BE5 		str	r3, [fp, #-8]
 7210 005c 08301BE5 		ldr	r3, [fp, #-8]
 7211 0060 0300A0E1 		mov	r0, r3
 7212 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7213 0068 0C000BE5 		str	r0, [fp, #-12]
 7214              		.loc 1 3539 5 discriminator 1
 7215 006c 0C301BE5 		ldr	r3, [fp, #-12]
 7216 0070 FF3803E2 		and	r3, r3, #16711680
 7217 0074 020853E3 		cmp	r3, #131072
 7218 0078 0100001A 		bne	.L461
 7219              		.loc 1 3539 5 discriminator 5
 7220 007c 0830E0E3 		mvn	r3, #8
 7221              		.loc 1 3539 5
 7222 0080 660000EA 		b	.L460
 7223              	.L461:
 7224              		.loc 1 3539 5 discriminator 6
 7225 0084 0C301BE5 		ldr	r3, [fp, #-12]
 7226 0088 233CA0E1 		lsr	r3, r3, #24
 7227 008c 030053E3 		cmp	r3, #3
 7228 0090 3F00000A 		beq	.L462
 7229              		.loc 1 3539 5 discriminator 7
 7230 0094 0130E0E3 		mvn	r3, #1
 7231              		.loc 1 3539 5
 7232 0098 600000EA 		b	.L460
 7233              	.L458:
 7234              		.loc 1 3539 5 discriminator 2
 7235 009c 14301BE5 		ldr	r3, [fp, #-20]
 7236 00a0 2324A0E1 		lsr	r2, r3, #8
 7237 00a4 10301BE5 		ldr	r3, [fp, #-16]
 7238 00a8 143093E5 		ldr	r3, [r3, #20]
 7239 00ac 030052E1 		cmp	r2, r3
 7240 00b0 0100003A 		bcc	.L463
 7241              		.loc 1 3539 5 discriminator 8
 7242 00b4 0230E0E3 		mvn	r3, #2
 7243              		.loc 1 3539 5
 7244 00b8 580000EA 		b	.L460
 7245              	.L463:
 7246              		.loc 1 3539 5 discriminator 9
 7247 00bc 14301BE5 		ldr	r3, [fp, #-20]
 7248 00c0 2334A0E1 		lsr	r3, r3, #8
 7249 00c4 8322A0E1 		lsl	r2, r3, #5
 7250 00c8 10301BE5 		ldr	r3, [fp, #-16]
 7251 00cc 0C3093E5 		ldr	r3, [r3, #12]
 7252 00d0 033082E0 		add	r3, r2, r3
 7253 00d4 08300BE5 		str	r3, [fp, #-8]
 7254 00d8 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 191


 7255 00dc 0300A0E1 		mov	r0, r3
 7256 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7257 00e4 0C000BE5 		str	r0, [fp, #-12]
 7258              		.loc 1 3539 5 discriminator 1
 7259 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 7260 00ec FF3803E2 		and	r3, r3, #16711680
 7261 00f0 020853E3 		cmp	r3, #131072
 7262 00f4 0100001A 		bne	.L464
 7263              		.loc 1 3539 5 discriminator 10
 7264 00f8 0830E0E3 		mvn	r3, #8
 7265              		.loc 1 3539 5
 7266 00fc 470000EA 		b	.L460
 7267              	.L464:
 7268              		.loc 1 3539 5 discriminator 11
 7269 0100 0C301BE5 		ldr	r3, [fp, #-12]
 7270 0104 233CA0E1 		lsr	r3, r3, #24
 7271 0108 030053E3 		cmp	r3, #3
 7272 010c 0100000A 		beq	.L465
 7273              		.loc 1 3539 5 discriminator 12
 7274 0110 0130E0E3 		mvn	r3, #1
 7275              		.loc 1 3539 5
 7276 0114 410000EA 		b	.L460
 7277              	.L465:
 7278              		.loc 1 3539 5 discriminator 13
 7279 0118 14301BE5 		ldr	r3, [fp, #-20]
 7280 011c 7F2003E2 		and	r2, r3, #127
 7281 0120 08301BE5 		ldr	r3, [fp, #-8]
 7282 0124 143093E5 		ldr	r3, [r3, #20]
 7283 0128 030052E1 		cmp	r2, r3
 7284 012c 0100003A 		bcc	.L466
 7285              		.loc 1 3539 5 discriminator 14
 7286 0130 0230E0E3 		mvn	r3, #2
 7287              		.loc 1 3539 5
 7288 0134 390000EA 		b	.L460
 7289              	.L466:
 7290              		.loc 1 3539 5 discriminator 15
 7291 0138 14301BE5 		ldr	r3, [fp, #-20]
 7292 013c 7F3003E2 		and	r3, r3, #127
 7293 0140 8322A0E1 		lsl	r2, r3, #5
 7294 0144 08301BE5 		ldr	r3, [fp, #-8]
 7295 0148 0C3093E5 		ldr	r3, [r3, #12]
 7296 014c 033082E0 		add	r3, r2, r3
 7297 0150 08300BE5 		str	r3, [fp, #-8]
 7298 0154 08301BE5 		ldr	r3, [fp, #-8]
 7299 0158 0300A0E1 		mov	r0, r3
 7300 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7301 0160 0C000BE5 		str	r0, [fp, #-12]
 7302              		.loc 1 3539 5 discriminator 1
 7303 0164 0C301BE5 		ldr	r3, [fp, #-12]
 7304 0168 FF3803E2 		and	r3, r3, #16711680
 7305 016c 020853E3 		cmp	r3, #131072
 7306 0170 0100001A 		bne	.L467
 7307              		.loc 1 3539 5 discriminator 16
 7308 0174 0830E0E3 		mvn	r3, #8
 7309              		.loc 1 3539 5
 7310 0178 280000EA 		b	.L460
 7311              	.L467:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 192


 7312              		.loc 1 3539 5 discriminator 17
 7313 017c 0C301BE5 		ldr	r3, [fp, #-12]
 7314 0180 233CA0E1 		lsr	r3, r3, #24
 7315 0184 030053E3 		cmp	r3, #3
 7316 0188 0100000A 		beq	.L462
 7317              		.loc 1 3539 5 discriminator 18
 7318 018c 0130E0E3 		mvn	r3, #1
 7319              		.loc 1 3539 5
 7320 0190 220000EA 		b	.L460
 7321              	.L462:
3540:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Rem,Type_Stat);
3541:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3542:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Rem,RME_PGT_FLAG_REM);
 7322              		.loc 1 3542 5 is_stmt 1
 7323 0194 08301BE5 		ldr	r3, [fp, #-8]
 7324 0198 083093E5 		ldr	r3, [r3, #8]
 7325 019c 043003E2 		and	r3, r3, #4
 7326 01a0 000053E3 		cmp	r3, #0
 7327 01a4 0100001A 		bne	.L468
 7328              		.loc 1 3542 5 is_stmt 0 discriminator 1
 7329 01a8 0630E0E3 		mvn	r3, #6
 7330              		.loc 1 3542 5
 7331 01ac 1B0000EA 		b	.L460
 7332              	.L468:
3543:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3544:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Rem->Head.Flag))||
 7333              		.loc 1 3544 13 is_stmt 1
 7334 01b0 08301BE5 		ldr	r3, [fp, #-8]
 7335 01b4 083093E5 		ldr	r3, [r3, #8]
 7336 01b8 233AA0E1 		lsr	r3, r3, #20
 7337              		.loc 1 3544 7
 7338 01bc 18201BE5 		ldr	r2, [fp, #-24]
 7339 01c0 030052E1 		cmp	r2, r3
 7340 01c4 0600008A 		bhi	.L469
3545:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7341              		.loc 1 3545 13
 7342 01c8 08301BE5 		ldr	r3, [fp, #-8]
 7343 01cc 083093E5 		ldr	r3, [r3, #8]
 7344 01d0 2334A0E1 		lsr	r3, r3, #8
 7345 01d4 5330EBE7 		ubfx	r3, r3, #0, #12
3544:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7346              		.loc 1 3544 51 discriminator 1
 7347 01d8 18201BE5 		ldr	r2, [fp, #-24]
 7348 01dc 030052E1 		cmp	r2, r3
 7349 01e0 0100002A 		bcs	.L470
 7350              	.L469:
3546:../../Source/Kernel/rme_kernel.c ****     {
3547:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3548:../../Source/Kernel/rme_kernel.c **** 
3549:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7351              		.loc 1 3549 16
 7352 01e4 0630E0E3 		mvn	r3, #6
 7353 01e8 0C0000EA 		b	.L460
 7354              	.L470:
3550:../../Source/Kernel/rme_kernel.c ****     }
3551:../../Source/Kernel/rme_kernel.c ****     else
3552:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 193


3553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3554:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3555:../../Source/Kernel/rme_kernel.c ****     }
3556:../../Source/Kernel/rme_kernel.c **** 
3557:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3558:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Rem->Order))!=0U)
 7355              		.loc 1 3558 14
 7356 01ec 08301BE5 		ldr	r3, [fp, #-8]
 7357 01f0 143093E5 		ldr	r3, [r3, #20]
 7358 01f4 7330FFE6 		uxth	r3, r3
 7359              		.loc 1 3558 12
 7360 01f8 18201BE5 		ldr	r2, [fp, #-24]
 7361 01fc 3233A0E1 		lsr	r3, r2, r3
 7362              		.loc 1 3558 7
 7363 0200 000053E3 		cmp	r3, #0
 7364 0204 0100000A 		beq	.L471
3559:../../Source/Kernel/rme_kernel.c ****     {
3560:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3561:../../Source/Kernel/rme_kernel.c **** 
3562:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7365              		.loc 1 3562 16
 7366 0208 6430E0E3 		mvn	r3, #100
 7367 020c 030000EA 		b	.L460
 7368              	.L471:
3563:../../Source/Kernel/rme_kernel.c ****     }
3564:../../Source/Kernel/rme_kernel.c ****     else
3565:../../Source/Kernel/rme_kernel.c ****     {
3566:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3567:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3568:../../Source/Kernel/rme_kernel.c ****     }
3569:../../Source/Kernel/rme_kernel.c **** 
3570:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3571:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3572:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Unmap(Pgt_Rem,Pos)<0)
 7369              		.loc 1 3572 8
 7370 0210 18101BE5 		ldr	r1, [fp, #-24]
 7371 0214 08001BE5 		ldr	r0, [fp, #-8]
 7372 0218 FEFFFFEB 		bl	__RME_Pgt_Page_Unmap
3573:../../Source/Kernel/rme_kernel.c ****     {
3574:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3575:../../Source/Kernel/rme_kernel.c **** 
3576:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3577:../../Source/Kernel/rme_kernel.c ****     }
3578:../../Source/Kernel/rme_kernel.c ****     else
3579:../../Source/Kernel/rme_kernel.c ****     {
3580:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3581:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3582:../../Source/Kernel/rme_kernel.c ****     }
3583:../../Source/Kernel/rme_kernel.c **** 
3584:../../Source/Kernel/rme_kernel.c ****     return 0;
 7373              		.loc 1 3584 12
 7374 021c 0030A0E3 		mov	r3, #0
 7375              	.L460:
3585:../../Source/Kernel/rme_kernel.c **** }
 7376              		.loc 1 3585 1
 7377 0220 0300A0E1 		mov	r0, r3
 7378 0224 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 194


 7379              		.cfi_def_cfa 13, 8
 7380              		@ sp needed
 7381 0228 0088BDE8 		pop	{fp, pc}
 7382              		.cfi_endproc
 7383              	.LFE35:
 7385              		.section	.text._RME_Pgt_Con,"ax",%progbits
 7386              		.align	2
 7387              		.syntax unified
 7388              		.arm
 7390              	_RME_Pgt_Con:
 7391              	.LFB36:
3586:../../Source/Kernel/rme_kernel.c **** #endif
3587:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Rem *************************************************/
3588:../../Source/Kernel/rme_kernel.c **** 
3589:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Con ******************************************************
3590:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table into the parent page table, to construct
3591:../../Source/Kernel/rme_kernel.c ****               an address space tree.
3592:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3593:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
3594:../../Source/Kernel/rme_kernel.c ****                                          table.
3595:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3596:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
3597:../../Source/Kernel/rme_kernel.c ****                               page table to.
3598:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3599:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3600:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
3601:../../Source/Kernel/rme_kernel.c **** Output      : None.
3602:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3603:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3604:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3605:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Con(struct RME_Cap_Cpt* Cpt,
3606:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3607:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3608:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child,
3609:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Child)
3610:../../Source/Kernel/rme_kernel.c **** {
 7392              		.loc 1 3610 1
 7393              		.cfi_startproc
 7394              		@ args = 4, pretend = 0, frame = 40
 7395              		@ frame_needed = 1, uses_anonymous_args = 0
 7396 0000 00482DE9 		push	{fp, lr}
 7397              		.cfi_def_cfa_offset 8
 7398              		.cfi_offset 11, -8
 7399              		.cfi_offset 14, -4
 7400 0004 04B08DE2 		add	fp, sp, #4
 7401              		.cfi_def_cfa 11, 4
 7402 0008 28D04DE2 		sub	sp, sp, #40
 7403 000c 20000BE5 		str	r0, [fp, #-32]
 7404 0010 24100BE5 		str	r1, [fp, #-36]
 7405 0014 28200BE5 		str	r2, [fp, #-40]
 7406 0018 2C300BE5 		str	r3, [fp, #-44]
3611:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3612:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3613:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
3614:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
3615:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
3616:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 195


3617:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
3618:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
3619:../../Source/Kernel/rme_kernel.c **** #endif
3620:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3621:../../Source/Kernel/rme_kernel.c ****     
3622:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3623:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 7407              		.loc 1 3623 5
 7408 001c 24301BE5 		ldr	r3, [fp, #-36]
 7409 0020 803003E2 		and	r3, r3, #128
 7410 0024 000053E3 		cmp	r3, #0
 7411 0028 1C00001A 		bne	.L473
 7412              		.loc 1 3623 5 is_stmt 0 discriminator 1
 7413 002c 20301BE5 		ldr	r3, [fp, #-32]
 7414 0030 142093E5 		ldr	r2, [r3, #20]
 7415 0034 24301BE5 		ldr	r3, [fp, #-36]
 7416 0038 030052E1 		cmp	r2, r3
 7417 003c 0100008A 		bhi	.L474
 7418              		.loc 1 3623 5 discriminator 3
 7419 0040 0230E0E3 		mvn	r3, #2
 7420              		.loc 1 3623 5
 7421 0044 140100EA 		b	.L475
 7422              	.L474:
 7423              		.loc 1 3623 5 discriminator 4
 7424 0048 24301BE5 		ldr	r3, [fp, #-36]
 7425 004c 8322A0E1 		lsl	r2, r3, #5
 7426 0050 20301BE5 		ldr	r3, [fp, #-32]
 7427 0054 0C3093E5 		ldr	r3, [r3, #12]
 7428 0058 033082E0 		add	r3, r2, r3
 7429 005c 08300BE5 		str	r3, [fp, #-8]
 7430 0060 08301BE5 		ldr	r3, [fp, #-8]
 7431 0064 0300A0E1 		mov	r0, r3
 7432 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7433 006c 10000BE5 		str	r0, [fp, #-16]
 7434              		.loc 1 3623 5 discriminator 1
 7435 0070 10301BE5 		ldr	r3, [fp, #-16]
 7436 0074 FF3803E2 		and	r3, r3, #16711680
 7437 0078 020853E3 		cmp	r3, #131072
 7438 007c 0100001A 		bne	.L476
 7439              		.loc 1 3623 5 discriminator 5
 7440 0080 0830E0E3 		mvn	r3, #8
 7441              		.loc 1 3623 5
 7442 0084 040100EA 		b	.L475
 7443              	.L476:
 7444              		.loc 1 3623 5 discriminator 6
 7445 0088 10301BE5 		ldr	r3, [fp, #-16]
 7446 008c 233CA0E1 		lsr	r3, r3, #24
 7447 0090 040053E3 		cmp	r3, #4
 7448 0094 3F00000A 		beq	.L477
 7449              		.loc 1 3623 5 discriminator 7
 7450 0098 0130E0E3 		mvn	r3, #1
 7451              		.loc 1 3623 5
 7452 009c FE0000EA 		b	.L475
 7453              	.L473:
 7454              		.loc 1 3623 5 discriminator 2
 7455 00a0 24301BE5 		ldr	r3, [fp, #-36]
 7456 00a4 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 196


 7457 00a8 20301BE5 		ldr	r3, [fp, #-32]
 7458 00ac 143093E5 		ldr	r3, [r3, #20]
 7459 00b0 030052E1 		cmp	r2, r3
 7460 00b4 0100003A 		bcc	.L478
 7461              		.loc 1 3623 5 discriminator 8
 7462 00b8 0230E0E3 		mvn	r3, #2
 7463              		.loc 1 3623 5
 7464 00bc F60000EA 		b	.L475
 7465              	.L478:
 7466              		.loc 1 3623 5 discriminator 9
 7467 00c0 24301BE5 		ldr	r3, [fp, #-36]
 7468 00c4 2334A0E1 		lsr	r3, r3, #8
 7469 00c8 8322A0E1 		lsl	r2, r3, #5
 7470 00cc 20301BE5 		ldr	r3, [fp, #-32]
 7471 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7472 00d4 033082E0 		add	r3, r2, r3
 7473 00d8 08300BE5 		str	r3, [fp, #-8]
 7474 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7475 00e0 0300A0E1 		mov	r0, r3
 7476 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7477 00e8 10000BE5 		str	r0, [fp, #-16]
 7478              		.loc 1 3623 5 discriminator 1
 7479 00ec 10301BE5 		ldr	r3, [fp, #-16]
 7480 00f0 FF3803E2 		and	r3, r3, #16711680
 7481 00f4 020853E3 		cmp	r3, #131072
 7482 00f8 0100001A 		bne	.L479
 7483              		.loc 1 3623 5 discriminator 10
 7484 00fc 0830E0E3 		mvn	r3, #8
 7485              		.loc 1 3623 5
 7486 0100 E50000EA 		b	.L475
 7487              	.L479:
 7488              		.loc 1 3623 5 discriminator 11
 7489 0104 10301BE5 		ldr	r3, [fp, #-16]
 7490 0108 233CA0E1 		lsr	r3, r3, #24
 7491 010c 030053E3 		cmp	r3, #3
 7492 0110 0100000A 		beq	.L480
 7493              		.loc 1 3623 5 discriminator 12
 7494 0114 0130E0E3 		mvn	r3, #1
 7495              		.loc 1 3623 5
 7496 0118 DF0000EA 		b	.L475
 7497              	.L480:
 7498              		.loc 1 3623 5 discriminator 13
 7499 011c 24301BE5 		ldr	r3, [fp, #-36]
 7500 0120 7F2003E2 		and	r2, r3, #127
 7501 0124 08301BE5 		ldr	r3, [fp, #-8]
 7502 0128 143093E5 		ldr	r3, [r3, #20]
 7503 012c 030052E1 		cmp	r2, r3
 7504 0130 0100003A 		bcc	.L481
 7505              		.loc 1 3623 5 discriminator 14
 7506 0134 0230E0E3 		mvn	r3, #2
 7507              		.loc 1 3623 5
 7508 0138 D70000EA 		b	.L475
 7509              	.L481:
 7510              		.loc 1 3623 5 discriminator 15
 7511 013c 24301BE5 		ldr	r3, [fp, #-36]
 7512 0140 7F3003E2 		and	r3, r3, #127
 7513 0144 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 197


 7514 0148 08301BE5 		ldr	r3, [fp, #-8]
 7515 014c 0C3093E5 		ldr	r3, [r3, #12]
 7516 0150 033082E0 		add	r3, r2, r3
 7517 0154 08300BE5 		str	r3, [fp, #-8]
 7518 0158 08301BE5 		ldr	r3, [fp, #-8]
 7519 015c 0300A0E1 		mov	r0, r3
 7520 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7521 0164 10000BE5 		str	r0, [fp, #-16]
 7522              		.loc 1 3623 5 discriminator 1
 7523 0168 10301BE5 		ldr	r3, [fp, #-16]
 7524 016c FF3803E2 		and	r3, r3, #16711680
 7525 0170 020853E3 		cmp	r3, #131072
 7526 0174 0100001A 		bne	.L482
 7527              		.loc 1 3623 5 discriminator 16
 7528 0178 0830E0E3 		mvn	r3, #8
 7529              		.loc 1 3623 5
 7530 017c C60000EA 		b	.L475
 7531              	.L482:
 7532              		.loc 1 3623 5 discriminator 17
 7533 0180 10301BE5 		ldr	r3, [fp, #-16]
 7534 0184 233CA0E1 		lsr	r3, r3, #24
 7535 0188 040053E3 		cmp	r3, #4
 7536 018c 0100000A 		beq	.L477
 7537              		.loc 1 3623 5 discriminator 18
 7538 0190 0130E0E3 		mvn	r3, #1
 7539              		.loc 1 3623 5
 7540 0194 C00000EA 		b	.L475
 7541              	.L477:
3624:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3625:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 7542              		.loc 1 3625 5 is_stmt 1
 7543 0198 2C301BE5 		ldr	r3, [fp, #-44]
 7544 019c 803003E2 		and	r3, r3, #128
 7545 01a0 000053E3 		cmp	r3, #0
 7546 01a4 1C00001A 		bne	.L483
 7547              		.loc 1 3625 5 is_stmt 0 discriminator 1
 7548 01a8 20301BE5 		ldr	r3, [fp, #-32]
 7549 01ac 142093E5 		ldr	r2, [r3, #20]
 7550 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 7551 01b4 030052E1 		cmp	r2, r3
 7552 01b8 0100008A 		bhi	.L484
 7553              		.loc 1 3625 5 discriminator 3
 7554 01bc 0230E0E3 		mvn	r3, #2
 7555              		.loc 1 3625 5
 7556 01c0 B50000EA 		b	.L475
 7557              	.L484:
 7558              		.loc 1 3625 5 discriminator 4
 7559 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 7560 01c8 8322A0E1 		lsl	r2, r3, #5
 7561 01cc 20301BE5 		ldr	r3, [fp, #-32]
 7562 01d0 0C3093E5 		ldr	r3, [r3, #12]
 7563 01d4 033082E0 		add	r3, r2, r3
 7564 01d8 0C300BE5 		str	r3, [fp, #-12]
 7565 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 7566 01e0 0300A0E1 		mov	r0, r3
 7567 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7568 01e8 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 198


 7569              		.loc 1 3625 5 discriminator 1
 7570 01ec 10301BE5 		ldr	r3, [fp, #-16]
 7571 01f0 FF3803E2 		and	r3, r3, #16711680
 7572 01f4 020853E3 		cmp	r3, #131072
 7573 01f8 0100001A 		bne	.L485
 7574              		.loc 1 3625 5 discriminator 5
 7575 01fc 0830E0E3 		mvn	r3, #8
 7576              		.loc 1 3625 5
 7577 0200 A50000EA 		b	.L475
 7578              	.L485:
 7579              		.loc 1 3625 5 discriminator 6
 7580 0204 10301BE5 		ldr	r3, [fp, #-16]
 7581 0208 233CA0E1 		lsr	r3, r3, #24
 7582 020c 040053E3 		cmp	r3, #4
 7583 0210 3F00000A 		beq	.L486
 7584              		.loc 1 3625 5 discriminator 7
 7585 0214 0130E0E3 		mvn	r3, #1
 7586              		.loc 1 3625 5
 7587 0218 9F0000EA 		b	.L475
 7588              	.L483:
 7589              		.loc 1 3625 5 discriminator 2
 7590 021c 2C301BE5 		ldr	r3, [fp, #-44]
 7591 0220 2324A0E1 		lsr	r2, r3, #8
 7592 0224 20301BE5 		ldr	r3, [fp, #-32]
 7593 0228 143093E5 		ldr	r3, [r3, #20]
 7594 022c 030052E1 		cmp	r2, r3
 7595 0230 0100003A 		bcc	.L487
 7596              		.loc 1 3625 5 discriminator 8
 7597 0234 0230E0E3 		mvn	r3, #2
 7598              		.loc 1 3625 5
 7599 0238 970000EA 		b	.L475
 7600              	.L487:
 7601              		.loc 1 3625 5 discriminator 9
 7602 023c 2C301BE5 		ldr	r3, [fp, #-44]
 7603 0240 2334A0E1 		lsr	r3, r3, #8
 7604 0244 8322A0E1 		lsl	r2, r3, #5
 7605 0248 20301BE5 		ldr	r3, [fp, #-32]
 7606 024c 0C3093E5 		ldr	r3, [r3, #12]
 7607 0250 033082E0 		add	r3, r2, r3
 7608 0254 0C300BE5 		str	r3, [fp, #-12]
 7609 0258 0C301BE5 		ldr	r3, [fp, #-12]
 7610 025c 0300A0E1 		mov	r0, r3
 7611 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7612 0264 10000BE5 		str	r0, [fp, #-16]
 7613              		.loc 1 3625 5 discriminator 1
 7614 0268 10301BE5 		ldr	r3, [fp, #-16]
 7615 026c FF3803E2 		and	r3, r3, #16711680
 7616 0270 020853E3 		cmp	r3, #131072
 7617 0274 0100001A 		bne	.L488
 7618              		.loc 1 3625 5 discriminator 10
 7619 0278 0830E0E3 		mvn	r3, #8
 7620              		.loc 1 3625 5
 7621 027c 860000EA 		b	.L475
 7622              	.L488:
 7623              		.loc 1 3625 5 discriminator 11
 7624 0280 10301BE5 		ldr	r3, [fp, #-16]
 7625 0284 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 199


 7626 0288 030053E3 		cmp	r3, #3
 7627 028c 0100000A 		beq	.L489
 7628              		.loc 1 3625 5 discriminator 12
 7629 0290 0130E0E3 		mvn	r3, #1
 7630              		.loc 1 3625 5
 7631 0294 800000EA 		b	.L475
 7632              	.L489:
 7633              		.loc 1 3625 5 discriminator 13
 7634 0298 2C301BE5 		ldr	r3, [fp, #-44]
 7635 029c 7F2003E2 		and	r2, r3, #127
 7636 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 7637 02a4 143093E5 		ldr	r3, [r3, #20]
 7638 02a8 030052E1 		cmp	r2, r3
 7639 02ac 0100003A 		bcc	.L490
 7640              		.loc 1 3625 5 discriminator 14
 7641 02b0 0230E0E3 		mvn	r3, #2
 7642              		.loc 1 3625 5
 7643 02b4 780000EA 		b	.L475
 7644              	.L490:
 7645              		.loc 1 3625 5 discriminator 15
 7646 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 7647 02bc 7F3003E2 		and	r3, r3, #127
 7648 02c0 8322A0E1 		lsl	r2, r3, #5
 7649 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 7650 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7651 02cc 033082E0 		add	r3, r2, r3
 7652 02d0 0C300BE5 		str	r3, [fp, #-12]
 7653 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 7654 02d8 0300A0E1 		mov	r0, r3
 7655 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7656 02e0 10000BE5 		str	r0, [fp, #-16]
 7657              		.loc 1 3625 5 discriminator 1
 7658 02e4 10301BE5 		ldr	r3, [fp, #-16]
 7659 02e8 FF3803E2 		and	r3, r3, #16711680
 7660 02ec 020853E3 		cmp	r3, #131072
 7661 02f0 0100001A 		bne	.L491
 7662              		.loc 1 3625 5 discriminator 16
 7663 02f4 0830E0E3 		mvn	r3, #8
 7664              		.loc 1 3625 5
 7665 02f8 670000EA 		b	.L475
 7666              	.L491:
 7667              		.loc 1 3625 5 discriminator 17
 7668 02fc 10301BE5 		ldr	r3, [fp, #-16]
 7669 0300 233CA0E1 		lsr	r3, r3, #24
 7670 0304 040053E3 		cmp	r3, #4
 7671 0308 0100000A 		beq	.L486
 7672              		.loc 1 3625 5 discriminator 18
 7673 030c 0130E0E3 		mvn	r3, #1
 7674              		.loc 1 3625 5
 7675 0310 610000EA 		b	.L475
 7676              	.L486:
3626:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3627:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3628:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_CON_PARENT);
 7677              		.loc 1 3628 5 is_stmt 1
 7678 0314 08301BE5 		ldr	r3, [fp, #-8]
 7679 0318 083093E5 		ldr	r3, [r3, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 200


 7680 031c 103003E2 		and	r3, r3, #16
 7681 0320 000053E3 		cmp	r3, #0
 7682 0324 0100001A 		bne	.L492
 7683              		.loc 1 3628 5 is_stmt 0 discriminator 1
 7684 0328 0630E0E3 		mvn	r3, #6
 7685              		.loc 1 3628 5
 7686 032c 5A0000EA 		b	.L475
 7687              	.L492:
3629:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 7688              		.loc 1 3629 5 is_stmt 1
 7689 0330 0C301BE5 		ldr	r3, [fp, #-12]
 7690 0334 083093E5 		ldr	r3, [r3, #8]
 7691 0338 083003E2 		and	r3, r3, #8
 7692 033c 000053E3 		cmp	r3, #0
 7693 0340 0100001A 		bne	.L493
 7694              		.loc 1 3629 5 is_stmt 0 discriminator 1
 7695 0344 0630E0E3 		mvn	r3, #6
 7696              		.loc 1 3629 5
 7697 0348 530000EA 		b	.L475
 7698              	.L493:
3630:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3631:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 7699              		.loc 1 3631 13 is_stmt 1
 7700 034c 08301BE5 		ldr	r3, [fp, #-8]
 7701 0350 083093E5 		ldr	r3, [r3, #8]
 7702 0354 233AA0E1 		lsr	r3, r3, #20
 7703              		.loc 1 3631 7
 7704 0358 28201BE5 		ldr	r2, [fp, #-40]
 7705 035c 030052E1 		cmp	r2, r3
 7706 0360 0600008A 		bhi	.L494
3632:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7707              		.loc 1 3632 13
 7708 0364 08301BE5 		ldr	r3, [fp, #-8]
 7709 0368 083093E5 		ldr	r3, [r3, #8]
 7710 036c 2334A0E1 		lsr	r3, r3, #8
 7711 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3631:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7712              		.loc 1 3631 54 discriminator 1
 7713 0374 28201BE5 		ldr	r2, [fp, #-40]
 7714 0378 030052E1 		cmp	r2, r3
 7715 037c 0100002A 		bcs	.L495
 7716              	.L494:
3633:../../Source/Kernel/rme_kernel.c ****     {
3634:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3635:../../Source/Kernel/rme_kernel.c **** 
3636:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7717              		.loc 1 3636 16
 7718 0380 0630E0E3 		mvn	r3, #6
 7719 0384 440000EA 		b	.L475
 7720              	.L495:
3637:../../Source/Kernel/rme_kernel.c ****     }
3638:../../Source/Kernel/rme_kernel.c ****     else
3639:../../Source/Kernel/rme_kernel.c ****     {
3640:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3641:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3642:../../Source/Kernel/rme_kernel.c ****     }
3643:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 201


3644:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
3645:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 7721              		.loc 1 3645 14
 7722 0388 08301BE5 		ldr	r3, [fp, #-8]
 7723 038c 143093E5 		ldr	r3, [r3, #20]
 7724 0390 7330FFE6 		uxth	r3, r3
 7725              		.loc 1 3645 12
 7726 0394 28201BE5 		ldr	r2, [fp, #-40]
 7727 0398 3233A0E1 		lsr	r3, r2, r3
 7728              		.loc 1 3645 7
 7729 039c 000053E3 		cmp	r3, #0
 7730 03a0 0100000A 		beq	.L496
3646:../../Source/Kernel/rme_kernel.c ****     {
3647:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3648:../../Source/Kernel/rme_kernel.c **** 
3649:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7731              		.loc 1 3649 16
 7732 03a4 6430E0E3 		mvn	r3, #100
 7733 03a8 3B0000EA 		b	.L475
 7734              	.L496:
3650:../../Source/Kernel/rme_kernel.c ****     }
3651:../../Source/Kernel/rme_kernel.c ****     else
3652:../../Source/Kernel/rme_kernel.c ****     {
3653:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3654:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3655:../../Source/Kernel/rme_kernel.c ****     }
3656:../../Source/Kernel/rme_kernel.c ****     
3657:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
3658:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 7735              		.loc 1 3658 17
 7736 03ac 0C301BE5 		ldr	r3, [fp, #-12]
 7737 03b0 143093E5 		ldr	r3, [r3, #20]
 7738 03b4 7320FFE6 		uxth	r2, r3
 7739              		.loc 1 3658 49
 7740 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 7741 03bc 143093E5 		ldr	r3, [r3, #20]
 7742 03c0 2338A0E1 		lsr	r3, r3, #16
 7743              		.loc 1 3658 16
 7744 03c4 033082E0 		add	r3, r2, r3
 7745 03c8 14300BE5 		str	r3, [fp, #-20]
3659:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 7746              		.loc 1 3659 18
 7747 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7748 03d0 143093E5 		ldr	r3, [r3, #20]
 7749              		.loc 1 3659 17
 7750 03d4 2338A0E1 		lsr	r3, r3, #16
 7751 03d8 18300BE5 		str	r3, [fp, #-24]
3660:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 7752              		.loc 1 3660 7
 7753 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7754 03e0 14301BE5 		ldr	r3, [fp, #-20]
 7755 03e4 030052E1 		cmp	r2, r3
 7756 03e8 0100002A 		bcs	.L497
3661:../../Source/Kernel/rme_kernel.c ****     {
3662:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3663:../../Source/Kernel/rme_kernel.c ****         
3664:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 202


 7757              		.loc 1 3664 16
 7758 03ec 6430E0E3 		mvn	r3, #100
 7759 03f0 290000EA 		b	.L475
 7760              	.L497:
3665:../../Source/Kernel/rme_kernel.c ****     }
3666:../../Source/Kernel/rme_kernel.c ****     else
3667:../../Source/Kernel/rme_kernel.c ****     {
3668:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3669:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3670:../../Source/Kernel/rme_kernel.c ****     }
3671:../../Source/Kernel/rme_kernel.c **** 
3672:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3673:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
3674:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
3675:../../Source/Kernel/rme_kernel.c ****     {
3676:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3677:../../Source/Kernel/rme_kernel.c ****         
3678:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
3679:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
3680:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
3681:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
3682:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
3683:../../Source/Kernel/rme_kernel.c ****         {
3684:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3685:../../Source/Kernel/rme_kernel.c ****             
3686:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3687:../../Source/Kernel/rme_kernel.c ****         }
3688:../../Source/Kernel/rme_kernel.c ****         else
3689:../../Source/Kernel/rme_kernel.c ****         {
3690:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3691:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3692:../../Source/Kernel/rme_kernel.c ****         }
3693:../../Source/Kernel/rme_kernel.c ****         
3694:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
3695:../../Source/Kernel/rme_kernel.c ****         
3696:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
3697:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
3698:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
3699:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
3700:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
3701:../../Source/Kernel/rme_kernel.c ****         {
3702:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3703:../../Source/Kernel/rme_kernel.c ****             
3704:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3705:../../Source/Kernel/rme_kernel.c ****             {
3706:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3707:../../Source/Kernel/rme_kernel.c **** 
3708:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3709:../../Source/Kernel/rme_kernel.c ****             }
3710:../../Source/Kernel/rme_kernel.c ****             else
3711:../../Source/Kernel/rme_kernel.c ****             {
3712:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3713:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3714:../../Source/Kernel/rme_kernel.c ****             }
3715:../../Source/Kernel/rme_kernel.c ****         }
3716:../../Source/Kernel/rme_kernel.c ****         else
3717:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 203


3718:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3719:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3720:../../Source/Kernel/rme_kernel.c ****         }
3721:../../Source/Kernel/rme_kernel.c ****     }
3722:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, check exempt */
3723:../../Source/Kernel/rme_kernel.c ****     else
3724:../../Source/Kernel/rme_kernel.c ****     {
3725:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3726:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3727:../../Source/Kernel/rme_kernel.c ****     }
3728:../../Source/Kernel/rme_kernel.c **** #else
3729:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3730:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 7761              		.loc 1 3730 7
 7762 03f4 18201BE5 		ldr	r2, [fp, #-24]
 7763 03f8 14301BE5 		ldr	r3, [fp, #-20]
 7764 03fc 030052E1 		cmp	r2, r3
 7765 0400 0100000A 		beq	.L498
3731:../../Source/Kernel/rme_kernel.c ****     {
3732:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3733:../../Source/Kernel/rme_kernel.c **** 
3734:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7766              		.loc 1 3734 16
 7767 0404 6430E0E3 		mvn	r3, #100
 7768 0408 230000EA 		b	.L475
 7769              	.L498:
3735:../../Source/Kernel/rme_kernel.c ****     }
3736:../../Source/Kernel/rme_kernel.c ****     else
3737:../../Source/Kernel/rme_kernel.c ****     {
3738:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3739:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3740:../../Source/Kernel/rme_kernel.c ****     }
3741:../../Source/Kernel/rme_kernel.c **** #endif
3742:../../Source/Kernel/rme_kernel.c **** 
3743:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3744:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3745:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 7770              		.loc 1 3745 8
 7771 040c 04309BE5 		ldr	r3, [fp, #4]
 7772 0410 0C201BE5 		ldr	r2, [fp, #-12]
 7773 0414 28101BE5 		ldr	r1, [fp, #-40]
 7774 0418 08001BE5 		ldr	r0, [fp, #-8]
 7775 041c FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3746:../../Source/Kernel/rme_kernel.c ****     {
3747:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3748:../../Source/Kernel/rme_kernel.c **** 
3749:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3750:../../Source/Kernel/rme_kernel.c ****     }
3751:../../Source/Kernel/rme_kernel.c ****     else
3752:../../Source/Kernel/rme_kernel.c ****     {
3753:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3754:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3755:../../Source/Kernel/rme_kernel.c ****     }
3756:../../Source/Kernel/rme_kernel.c ****     
3757:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3758:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 7776              		.loc 1 3758 14
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 204


 7777 0420 08301BE5 		ldr	r3, [fp, #-8]
 7778 0424 003093E5 		ldr	r3, [r3]
 7779 0428 7330FFE6 		uxth	r3, r3
 7780 042c 000053E3 		cmp	r3, #0
 7781 0430 0200000A 		beq	.L499
 7782              		.loc 1 3758 14 is_stmt 0 discriminator 1
 7783 0434 08301BE5 		ldr	r3, [fp, #-8]
 7784 0438 043093E5 		ldr	r3, [r3, #4]
 7785 043c 000000EA 		b	.L500
 7786              	.L499:
 7787              		.loc 1 3758 14 discriminator 2
 7788 0440 08301BE5 		ldr	r3, [fp, #-8]
 7789              	.L500:
 7790              		.loc 1 3758 13 is_stmt 1 discriminator 4
 7791 0444 1C300BE5 		str	r3, [fp, #-28]
3759:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7792              		.loc 1 3759 5
 7793 0448 1C301BE5 		ldr	r3, [fp, #-28]
 7794 044c 043083E2 		add	r3, r3, #4
 7795 0450 0110A0E3 		mov	r1, #1
 7796 0454 0300A0E1 		mov	r0, r3
 7797 0458 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3760:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 7798              		.loc 1 3760 14
 7799 045c 0C301BE5 		ldr	r3, [fp, #-12]
 7800 0460 003093E5 		ldr	r3, [r3]
 7801 0464 7330FFE6 		uxth	r3, r3
 7802 0468 000053E3 		cmp	r3, #0
 7803 046c 0200000A 		beq	.L501
 7804              		.loc 1 3760 14 is_stmt 0 discriminator 1
 7805 0470 0C301BE5 		ldr	r3, [fp, #-12]
 7806 0474 043093E5 		ldr	r3, [r3, #4]
 7807 0478 000000EA 		b	.L502
 7808              	.L501:
 7809              		.loc 1 3760 14 discriminator 2
 7810 047c 0C301BE5 		ldr	r3, [fp, #-12]
 7811              	.L502:
 7812              		.loc 1 3760 13 is_stmt 1 discriminator 4
 7813 0480 1C300BE5 		str	r3, [fp, #-28]
3761:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7814              		.loc 1 3761 5
 7815 0484 1C301BE5 		ldr	r3, [fp, #-28]
 7816 0488 043083E2 		add	r3, r3, #4
 7817 048c 0110A0E3 		mov	r1, #1
 7818 0490 0300A0E1 		mov	r0, r3
 7819 0494 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3762:../../Source/Kernel/rme_kernel.c **** 
3763:../../Source/Kernel/rme_kernel.c ****     return 0;
 7820              		.loc 1 3763 12
 7821 0498 0030A0E3 		mov	r3, #0
 7822              	.L475:
3764:../../Source/Kernel/rme_kernel.c **** }
 7823              		.loc 1 3764 1
 7824 049c 0300A0E1 		mov	r0, r3
 7825 04a0 04D04BE2 		sub	sp, fp, #4
 7826              		.cfi_def_cfa 13, 8
 7827              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 205


 7828 04a4 0088BDE8 		pop	{fp, pc}
 7829              		.cfi_endproc
 7830              	.LFE36:
 7832              		.section	.text._RME_Pgt_Des,"ax",%progbits
 7833              		.align	2
 7834              		.syntax unified
 7835              		.arm
 7837              	_RME_Pgt_Des:
 7838              	.LFB37:
3765:../../Source/Kernel/rme_kernel.c **** #endif
3766:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Con *************************************************/
3767:../../Source/Kernel/rme_kernel.c **** 
3768:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Des ******************************************************
3769:../../Source/Kernel/rme_kernel.c **** Description : Unmap a child page table from the parent page table, destructing
3770:../../Source/Kernel/rme_kernel.c ****               the address space tree.
3771:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3772:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page
3773:../../Source/Kernel/rme_kernel.c ****                                          table.
3774:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3775:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to position unmap
3776:../../Source/Kernel/rme_kernel.c ****                               the child page table from. The child page table
3777:../../Source/Kernel/rme_kernel.c ****                               must be there for the destruction to succeed.
3778:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3779:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3780:../../Source/Kernel/rme_kernel.c **** Output      : None.
3781:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3782:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3783:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3784:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Des(struct RME_Cap_Cpt* Cpt, 
3785:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3786:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3787:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child)
3788:../../Source/Kernel/rme_kernel.c **** {
 7839              		.loc 1 3788 1
 7840              		.cfi_startproc
 7841              		@ args = 0, pretend = 0, frame = 32
 7842              		@ frame_needed = 1, uses_anonymous_args = 0
 7843 0000 00482DE9 		push	{fp, lr}
 7844              		.cfi_def_cfa_offset 8
 7845              		.cfi_offset 11, -8
 7846              		.cfi_offset 14, -4
 7847 0004 04B08DE2 		add	fp, sp, #4
 7848              		.cfi_def_cfa 11, 4
 7849 0008 20D04DE2 		sub	sp, sp, #32
 7850 000c 18000BE5 		str	r0, [fp, #-24]
 7851 0010 1C100BE5 		str	r1, [fp, #-28]
 7852 0014 20200BE5 		str	r2, [fp, #-32]
 7853 0018 24300BE5 		str	r3, [fp, #-36]
3789:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3790:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3791:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Root;
3792:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3793:../../Source/Kernel/rme_kernel.c ****     
3794:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3795:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_CPT,
 7854              		.loc 1 3795 5
 7855 001c 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 206


 7856 0020 803003E2 		and	r3, r3, #128
 7857 0024 000053E3 		cmp	r3, #0
 7858 0028 1C00001A 		bne	.L504
 7859              		.loc 1 3795 5 is_stmt 0 discriminator 1
 7860 002c 18301BE5 		ldr	r3, [fp, #-24]
 7861 0030 142093E5 		ldr	r2, [r3, #20]
 7862 0034 1C301BE5 		ldr	r3, [fp, #-28]
 7863 0038 030052E1 		cmp	r2, r3
 7864 003c 0100008A 		bhi	.L505
 7865              		.loc 1 3795 5 discriminator 3
 7866 0040 0230E0E3 		mvn	r3, #2
 7867              		.loc 1 3795 5
 7868 0044 000100EA 		b	.L506
 7869              	.L505:
 7870              		.loc 1 3795 5 discriminator 4
 7871 0048 1C301BE5 		ldr	r3, [fp, #-28]
 7872 004c 8322A0E1 		lsl	r2, r3, #5
 7873 0050 18301BE5 		ldr	r3, [fp, #-24]
 7874 0054 0C3093E5 		ldr	r3, [r3, #12]
 7875 0058 033082E0 		add	r3, r2, r3
 7876 005c 08300BE5 		str	r3, [fp, #-8]
 7877 0060 08301BE5 		ldr	r3, [fp, #-8]
 7878 0064 0300A0E1 		mov	r0, r3
 7879 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7880 006c 10000BE5 		str	r0, [fp, #-16]
 7881              		.loc 1 3795 5 discriminator 1
 7882 0070 10301BE5 		ldr	r3, [fp, #-16]
 7883 0074 FF3803E2 		and	r3, r3, #16711680
 7884 0078 020853E3 		cmp	r3, #131072
 7885 007c 0100001A 		bne	.L507
 7886              		.loc 1 3795 5 discriminator 5
 7887 0080 0830E0E3 		mvn	r3, #8
 7888              		.loc 1 3795 5
 7889 0084 F00000EA 		b	.L506
 7890              	.L507:
 7891              		.loc 1 3795 5 discriminator 6
 7892 0088 10301BE5 		ldr	r3, [fp, #-16]
 7893 008c 233CA0E1 		lsr	r3, r3, #24
 7894 0090 030053E3 		cmp	r3, #3
 7895 0094 3F00000A 		beq	.L508
 7896              		.loc 1 3795 5 discriminator 7
 7897 0098 0130E0E3 		mvn	r3, #1
 7898              		.loc 1 3795 5
 7899 009c EA0000EA 		b	.L506
 7900              	.L504:
 7901              		.loc 1 3795 5 discriminator 2
 7902 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 7903 00a4 2324A0E1 		lsr	r2, r3, #8
 7904 00a8 18301BE5 		ldr	r3, [fp, #-24]
 7905 00ac 143093E5 		ldr	r3, [r3, #20]
 7906 00b0 030052E1 		cmp	r2, r3
 7907 00b4 0100003A 		bcc	.L509
 7908              		.loc 1 3795 5 discriminator 8
 7909 00b8 0230E0E3 		mvn	r3, #2
 7910              		.loc 1 3795 5
 7911 00bc E20000EA 		b	.L506
 7912              	.L509:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 207


 7913              		.loc 1 3795 5 discriminator 9
 7914 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 7915 00c4 2334A0E1 		lsr	r3, r3, #8
 7916 00c8 8322A0E1 		lsl	r2, r3, #5
 7917 00cc 18301BE5 		ldr	r3, [fp, #-24]
 7918 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7919 00d4 033082E0 		add	r3, r2, r3
 7920 00d8 08300BE5 		str	r3, [fp, #-8]
 7921 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7922 00e0 0300A0E1 		mov	r0, r3
 7923 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7924 00e8 10000BE5 		str	r0, [fp, #-16]
 7925              		.loc 1 3795 5 discriminator 1
 7926 00ec 10301BE5 		ldr	r3, [fp, #-16]
 7927 00f0 FF3803E2 		and	r3, r3, #16711680
 7928 00f4 020853E3 		cmp	r3, #131072
 7929 00f8 0100001A 		bne	.L510
 7930              		.loc 1 3795 5 discriminator 10
 7931 00fc 0830E0E3 		mvn	r3, #8
 7932              		.loc 1 3795 5
 7933 0100 D10000EA 		b	.L506
 7934              	.L510:
 7935              		.loc 1 3795 5 discriminator 11
 7936 0104 10301BE5 		ldr	r3, [fp, #-16]
 7937 0108 233CA0E1 		lsr	r3, r3, #24
 7938 010c 030053E3 		cmp	r3, #3
 7939 0110 0100000A 		beq	.L511
 7940              		.loc 1 3795 5 discriminator 12
 7941 0114 0130E0E3 		mvn	r3, #1
 7942              		.loc 1 3795 5
 7943 0118 CB0000EA 		b	.L506
 7944              	.L511:
 7945              		.loc 1 3795 5 discriminator 13
 7946 011c 1C301BE5 		ldr	r3, [fp, #-28]
 7947 0120 7F2003E2 		and	r2, r3, #127
 7948 0124 08301BE5 		ldr	r3, [fp, #-8]
 7949 0128 143093E5 		ldr	r3, [r3, #20]
 7950 012c 030052E1 		cmp	r2, r3
 7951 0130 0100003A 		bcc	.L512
 7952              		.loc 1 3795 5 discriminator 14
 7953 0134 0230E0E3 		mvn	r3, #2
 7954              		.loc 1 3795 5
 7955 0138 C30000EA 		b	.L506
 7956              	.L512:
 7957              		.loc 1 3795 5 discriminator 15
 7958 013c 1C301BE5 		ldr	r3, [fp, #-28]
 7959 0140 7F3003E2 		and	r3, r3, #127
 7960 0144 8322A0E1 		lsl	r2, r3, #5
 7961 0148 08301BE5 		ldr	r3, [fp, #-8]
 7962 014c 0C3093E5 		ldr	r3, [r3, #12]
 7963 0150 033082E0 		add	r3, r2, r3
 7964 0154 08300BE5 		str	r3, [fp, #-8]
 7965 0158 08301BE5 		ldr	r3, [fp, #-8]
 7966 015c 0300A0E1 		mov	r0, r3
 7967 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7968 0164 10000BE5 		str	r0, [fp, #-16]
 7969              		.loc 1 3795 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 208


 7970 0168 10301BE5 		ldr	r3, [fp, #-16]
 7971 016c FF3803E2 		and	r3, r3, #16711680
 7972 0170 020853E3 		cmp	r3, #131072
 7973 0174 0100001A 		bne	.L513
 7974              		.loc 1 3795 5 discriminator 16
 7975 0178 0830E0E3 		mvn	r3, #8
 7976              		.loc 1 3795 5
 7977 017c B20000EA 		b	.L506
 7978              	.L513:
 7979              		.loc 1 3795 5 discriminator 17
 7980 0180 10301BE5 		ldr	r3, [fp, #-16]
 7981 0184 233CA0E1 		lsr	r3, r3, #24
 7982 0188 030053E3 		cmp	r3, #3
 7983 018c 0100000A 		beq	.L508
 7984              		.loc 1 3795 5 discriminator 18
 7985 0190 0130E0E3 		mvn	r3, #1
 7986              		.loc 1 3795 5
 7987 0194 AC0000EA 		b	.L506
 7988              	.L508:
3796:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3797:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_CPT,
 7989              		.loc 1 3797 5 is_stmt 1
 7990 0198 24301BE5 		ldr	r3, [fp, #-36]
 7991 019c 803003E2 		and	r3, r3, #128
 7992 01a0 000053E3 		cmp	r3, #0
 7993 01a4 1C00001A 		bne	.L514
 7994              		.loc 1 3797 5 is_stmt 0 discriminator 1
 7995 01a8 18301BE5 		ldr	r3, [fp, #-24]
 7996 01ac 142093E5 		ldr	r2, [r3, #20]
 7997 01b0 24301BE5 		ldr	r3, [fp, #-36]
 7998 01b4 030052E1 		cmp	r2, r3
 7999 01b8 0100008A 		bhi	.L515
 8000              		.loc 1 3797 5 discriminator 3
 8001 01bc 0230E0E3 		mvn	r3, #2
 8002              		.loc 1 3797 5
 8003 01c0 A10000EA 		b	.L506
 8004              	.L515:
 8005              		.loc 1 3797 5 discriminator 4
 8006 01c4 24301BE5 		ldr	r3, [fp, #-36]
 8007 01c8 8322A0E1 		lsl	r2, r3, #5
 8008 01cc 18301BE5 		ldr	r3, [fp, #-24]
 8009 01d0 0C3093E5 		ldr	r3, [r3, #12]
 8010 01d4 033082E0 		add	r3, r2, r3
 8011 01d8 0C300BE5 		str	r3, [fp, #-12]
 8012 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 8013 01e0 0300A0E1 		mov	r0, r3
 8014 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8015 01e8 10000BE5 		str	r0, [fp, #-16]
 8016              		.loc 1 3797 5 discriminator 1
 8017 01ec 10301BE5 		ldr	r3, [fp, #-16]
 8018 01f0 FF3803E2 		and	r3, r3, #16711680
 8019 01f4 020853E3 		cmp	r3, #131072
 8020 01f8 0100001A 		bne	.L516
 8021              		.loc 1 3797 5 discriminator 5
 8022 01fc 0830E0E3 		mvn	r3, #8
 8023              		.loc 1 3797 5
 8024 0200 910000EA 		b	.L506
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 209


 8025              	.L516:
 8026              		.loc 1 3797 5 discriminator 6
 8027 0204 10301BE5 		ldr	r3, [fp, #-16]
 8028 0208 233CA0E1 		lsr	r3, r3, #24
 8029 020c 030053E3 		cmp	r3, #3
 8030 0210 3F00000A 		beq	.L517
 8031              		.loc 1 3797 5 discriminator 7
 8032 0214 0130E0E3 		mvn	r3, #1
 8033              		.loc 1 3797 5
 8034 0218 8B0000EA 		b	.L506
 8035              	.L514:
 8036              		.loc 1 3797 5 discriminator 2
 8037 021c 24301BE5 		ldr	r3, [fp, #-36]
 8038 0220 2324A0E1 		lsr	r2, r3, #8
 8039 0224 18301BE5 		ldr	r3, [fp, #-24]
 8040 0228 143093E5 		ldr	r3, [r3, #20]
 8041 022c 030052E1 		cmp	r2, r3
 8042 0230 0100003A 		bcc	.L518
 8043              		.loc 1 3797 5 discriminator 8
 8044 0234 0230E0E3 		mvn	r3, #2
 8045              		.loc 1 3797 5
 8046 0238 830000EA 		b	.L506
 8047              	.L518:
 8048              		.loc 1 3797 5 discriminator 9
 8049 023c 24301BE5 		ldr	r3, [fp, #-36]
 8050 0240 2334A0E1 		lsr	r3, r3, #8
 8051 0244 8322A0E1 		lsl	r2, r3, #5
 8052 0248 18301BE5 		ldr	r3, [fp, #-24]
 8053 024c 0C3093E5 		ldr	r3, [r3, #12]
 8054 0250 033082E0 		add	r3, r2, r3
 8055 0254 0C300BE5 		str	r3, [fp, #-12]
 8056 0258 0C301BE5 		ldr	r3, [fp, #-12]
 8057 025c 0300A0E1 		mov	r0, r3
 8058 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8059 0264 10000BE5 		str	r0, [fp, #-16]
 8060              		.loc 1 3797 5 discriminator 1
 8061 0268 10301BE5 		ldr	r3, [fp, #-16]
 8062 026c FF3803E2 		and	r3, r3, #16711680
 8063 0270 020853E3 		cmp	r3, #131072
 8064 0274 0100001A 		bne	.L519
 8065              		.loc 1 3797 5 discriminator 10
 8066 0278 0830E0E3 		mvn	r3, #8
 8067              		.loc 1 3797 5
 8068 027c 720000EA 		b	.L506
 8069              	.L519:
 8070              		.loc 1 3797 5 discriminator 11
 8071 0280 10301BE5 		ldr	r3, [fp, #-16]
 8072 0284 233CA0E1 		lsr	r3, r3, #24
 8073 0288 030053E3 		cmp	r3, #3
 8074 028c 0100000A 		beq	.L520
 8075              		.loc 1 3797 5 discriminator 12
 8076 0290 0130E0E3 		mvn	r3, #1
 8077              		.loc 1 3797 5
 8078 0294 6C0000EA 		b	.L506
 8079              	.L520:
 8080              		.loc 1 3797 5 discriminator 13
 8081 0298 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 210


 8082 029c 7F2003E2 		and	r2, r3, #127
 8083 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 8084 02a4 143093E5 		ldr	r3, [r3, #20]
 8085 02a8 030052E1 		cmp	r2, r3
 8086 02ac 0100003A 		bcc	.L521
 8087              		.loc 1 3797 5 discriminator 14
 8088 02b0 0230E0E3 		mvn	r3, #2
 8089              		.loc 1 3797 5
 8090 02b4 640000EA 		b	.L506
 8091              	.L521:
 8092              		.loc 1 3797 5 discriminator 15
 8093 02b8 24301BE5 		ldr	r3, [fp, #-36]
 8094 02bc 7F3003E2 		and	r3, r3, #127
 8095 02c0 8322A0E1 		lsl	r2, r3, #5
 8096 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 8097 02c8 0C3093E5 		ldr	r3, [r3, #12]
 8098 02cc 033082E0 		add	r3, r2, r3
 8099 02d0 0C300BE5 		str	r3, [fp, #-12]
 8100 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 8101 02d8 0300A0E1 		mov	r0, r3
 8102 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8103 02e0 10000BE5 		str	r0, [fp, #-16]
 8104              		.loc 1 3797 5 discriminator 1
 8105 02e4 10301BE5 		ldr	r3, [fp, #-16]
 8106 02e8 FF3803E2 		and	r3, r3, #16711680
 8107 02ec 020853E3 		cmp	r3, #131072
 8108 02f0 0100001A 		bne	.L522
 8109              		.loc 1 3797 5 discriminator 16
 8110 02f4 0830E0E3 		mvn	r3, #8
 8111              		.loc 1 3797 5
 8112 02f8 530000EA 		b	.L506
 8113              	.L522:
 8114              		.loc 1 3797 5 discriminator 17
 8115 02fc 10301BE5 		ldr	r3, [fp, #-16]
 8116 0300 233CA0E1 		lsr	r3, r3, #24
 8117 0304 030053E3 		cmp	r3, #3
 8118 0308 0100000A 		beq	.L517
 8119              		.loc 1 3797 5 discriminator 18
 8120 030c 0130E0E3 		mvn	r3, #1
 8121              		.loc 1 3797 5
 8122 0310 4D0000EA 		b	.L506
 8123              	.L517:
3798:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3799:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3800:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_DES_PARENT);
 8124              		.loc 1 3800 5 is_stmt 1
 8125 0314 08301BE5 		ldr	r3, [fp, #-8]
 8126 0318 083093E5 		ldr	r3, [r3, #8]
 8127 031c 203003E2 		and	r3, r3, #32
 8128 0320 000053E3 		cmp	r3, #0
 8129 0324 0100001A 		bne	.L523
 8130              		.loc 1 3800 5 is_stmt 0 discriminator 1
 8131 0328 0630E0E3 		mvn	r3, #6
 8132              		.loc 1 3800 5
 8133 032c 460000EA 		b	.L506
 8134              	.L523:
3801:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 211


 8135              		.loc 1 3801 5 is_stmt 1
 8136 0330 0C301BE5 		ldr	r3, [fp, #-12]
 8137 0334 083093E5 		ldr	r3, [r3, #8]
 8138 0338 083003E2 		and	r3, r3, #8
 8139 033c 000053E3 		cmp	r3, #0
 8140 0340 0100001A 		bne	.L524
 8141              		.loc 1 3801 5 is_stmt 0 discriminator 1
 8142 0344 0630E0E3 		mvn	r3, #6
 8143              		.loc 1 3801 5
 8144 0348 3F0000EA 		b	.L506
 8145              	.L524:
3802:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3803:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 8146              		.loc 1 3803 13 is_stmt 1
 8147 034c 08301BE5 		ldr	r3, [fp, #-8]
 8148 0350 083093E5 		ldr	r3, [r3, #8]
 8149 0354 233AA0E1 		lsr	r3, r3, #20
 8150              		.loc 1 3803 7
 8151 0358 20201BE5 		ldr	r2, [fp, #-32]
 8152 035c 030052E1 		cmp	r2, r3
 8153 0360 0600008A 		bhi	.L525
3804:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8154              		.loc 1 3804 13
 8155 0364 08301BE5 		ldr	r3, [fp, #-8]
 8156 0368 083093E5 		ldr	r3, [r3, #8]
 8157 036c 2334A0E1 		lsr	r3, r3, #8
 8158 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3803:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8159              		.loc 1 3803 54 discriminator 1
 8160 0374 20201BE5 		ldr	r2, [fp, #-32]
 8161 0378 030052E1 		cmp	r2, r3
 8162 037c 0100002A 		bcs	.L526
 8163              	.L525:
3805:../../Source/Kernel/rme_kernel.c ****     {
3806:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3807:../../Source/Kernel/rme_kernel.c **** 
3808:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 8164              		.loc 1 3808 16
 8165 0380 0630E0E3 		mvn	r3, #6
 8166 0384 300000EA 		b	.L506
 8167              	.L526:
3809:../../Source/Kernel/rme_kernel.c ****     }
3810:../../Source/Kernel/rme_kernel.c ****     else
3811:../../Source/Kernel/rme_kernel.c ****     {
3812:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3813:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3814:../../Source/Kernel/rme_kernel.c ****     }
3815:../../Source/Kernel/rme_kernel.c **** 
3816:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3817:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 8168              		.loc 1 3817 14
 8169 0388 08301BE5 		ldr	r3, [fp, #-8]
 8170 038c 143093E5 		ldr	r3, [r3, #20]
 8171 0390 7330FFE6 		uxth	r3, r3
 8172              		.loc 1 3817 12
 8173 0394 20201BE5 		ldr	r2, [fp, #-32]
 8174 0398 3233A0E1 		lsr	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 212


 8175              		.loc 1 3817 7
 8176 039c 000053E3 		cmp	r3, #0
 8177 03a0 0100000A 		beq	.L527
3818:../../Source/Kernel/rme_kernel.c ****     {
3819:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3820:../../Source/Kernel/rme_kernel.c **** 
3821:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 8178              		.loc 1 3821 16
 8179 03a4 6430E0E3 		mvn	r3, #100
 8180 03a8 270000EA 		b	.L506
 8181              	.L527:
3822:../../Source/Kernel/rme_kernel.c ****     }
3823:../../Source/Kernel/rme_kernel.c ****     else
3824:../../Source/Kernel/rme_kernel.c ****     {
3825:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3826:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3827:../../Source/Kernel/rme_kernel.c ****     }
3828:../../Source/Kernel/rme_kernel.c **** 
3829:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3830:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict. Also,
3831:../../Source/Kernel/rme_kernel.c ****      * the HAL needs to guarantee that the Child is actually mapped there,
3832:../../Source/Kernel/rme_kernel.c ****      * and use that as the old value in CAS */
3833:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Unmap(Pgt_Parent,Pos,Pgt_Child)<0)
 8182              		.loc 1 3833 8
 8183 03ac 0C201BE5 		ldr	r2, [fp, #-12]
 8184 03b0 20101BE5 		ldr	r1, [fp, #-32]
 8185 03b4 08001BE5 		ldr	r0, [fp, #-8]
 8186 03b8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Unmap
 8187 03bc 0030A0E1 		mov	r3, r0
 8188              		.loc 1 3833 7 discriminator 1
 8189 03c0 000053E3 		cmp	r3, #0
 8190 03c4 010000AA 		bge	.L528
3834:../../Source/Kernel/rme_kernel.c ****     {
3835:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3836:../../Source/Kernel/rme_kernel.c **** 
3837:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 8191              		.loc 1 3837 16
 8192 03c8 6530E0E3 		mvn	r3, #101
 8193 03cc 1E0000EA 		b	.L506
 8194              	.L528:
3838:../../Source/Kernel/rme_kernel.c ****     }
3839:../../Source/Kernel/rme_kernel.c ****     else
3840:../../Source/Kernel/rme_kernel.c ****     {
3841:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3842:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3843:../../Source/Kernel/rme_kernel.c ****     }
3844:../../Source/Kernel/rme_kernel.c ****     
3845:../../Source/Kernel/rme_kernel.c ****     /* Decrease refcnt for both parent/child */
3846:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 8195              		.loc 1 3846 14
 8196 03d0 08301BE5 		ldr	r3, [fp, #-8]
 8197 03d4 003093E5 		ldr	r3, [r3]
 8198 03d8 7330FFE6 		uxth	r3, r3
 8199 03dc 000053E3 		cmp	r3, #0
 8200 03e0 0200000A 		beq	.L529
 8201              		.loc 1 3846 14 is_stmt 0 discriminator 1
 8202 03e4 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 213


 8203 03e8 043093E5 		ldr	r3, [r3, #4]
 8204 03ec 000000EA 		b	.L530
 8205              	.L529:
 8206              		.loc 1 3846 14 discriminator 2
 8207 03f0 08301BE5 		ldr	r3, [fp, #-8]
 8208              	.L530:
 8209              		.loc 1 3846 13 is_stmt 1 discriminator 4
 8210 03f4 14300BE5 		str	r3, [fp, #-20]
3847:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8211              		.loc 1 3847 5
 8212 03f8 14301BE5 		ldr	r3, [fp, #-20]
 8213 03fc 043083E2 		add	r3, r3, #4
 8214 0400 0010E0E3 		mvn	r1, #0
 8215 0404 0300A0E1 		mov	r0, r3
 8216 0408 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3848:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 8217              		.loc 1 3848 14
 8218 040c 0C301BE5 		ldr	r3, [fp, #-12]
 8219 0410 003093E5 		ldr	r3, [r3]
 8220 0414 7330FFE6 		uxth	r3, r3
 8221 0418 000053E3 		cmp	r3, #0
 8222 041c 0200000A 		beq	.L531
 8223              		.loc 1 3848 14 is_stmt 0 discriminator 1
 8224 0420 0C301BE5 		ldr	r3, [fp, #-12]
 8225 0424 043093E5 		ldr	r3, [r3, #4]
 8226 0428 000000EA 		b	.L532
 8227              	.L531:
 8228              		.loc 1 3848 14 discriminator 2
 8229 042c 0C301BE5 		ldr	r3, [fp, #-12]
 8230              	.L532:
 8231              		.loc 1 3848 13 is_stmt 1 discriminator 4
 8232 0430 14300BE5 		str	r3, [fp, #-20]
3849:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8233              		.loc 1 3849 5
 8234 0434 14301BE5 		ldr	r3, [fp, #-20]
 8235 0438 043083E2 		add	r3, r3, #4
 8236 043c 0010E0E3 		mvn	r1, #0
 8237 0440 0300A0E1 		mov	r0, r3
 8238 0444 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3850:../../Source/Kernel/rme_kernel.c **** 
3851:../../Source/Kernel/rme_kernel.c ****     return 0;
 8239              		.loc 1 3851 12
 8240 0448 0030A0E3 		mov	r3, #0
 8241              	.L506:
3852:../../Source/Kernel/rme_kernel.c **** }
 8242              		.loc 1 3852 1
 8243 044c 0300A0E1 		mov	r0, r3
 8244 0450 04D04BE2 		sub	sp, fp, #4
 8245              		.cfi_def_cfa 13, 8
 8246              		@ sp needed
 8247 0454 0088BDE8 		pop	{fp, pc}
 8248              		.cfi_endproc
 8249              	.LFE37:
 8251              		.section	.text._RME_Kot_Init,"ax",%progbits
 8252              		.align	2
 8253              		.global	_RME_Kot_Init
 8254              		.syntax unified
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 214


 8255              		.arm
 8257              	_RME_Kot_Init:
 8258              	.LFB38:
3853:../../Source/Kernel/rme_kernel.c **** #endif
3854:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Des *************************************************/
3855:../../Source/Kernel/rme_kernel.c **** 
3856:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Init *****************************************************
3857:../../Source/Kernel/rme_kernel.c **** Description : Initialize the kernel object table according to the total kernel
3858:../../Source/Kernel/rme_kernel.c ****               memory size, which decides the number of words in the table.
3859:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Words - the number of words in the table.
3860:../../Source/Kernel/rme_kernel.c **** Output      : None.
3861:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the number of words are is not sufficient to hold 
3862:../../Source/Kernel/rme_kernel.c ****                           all kernel memory, -1; else 0.
3863:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3864:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Init(rme_ptr_t Word)
3865:../../Source/Kernel/rme_kernel.c **** {
 8259              		.loc 1 3865 1
 8260              		.cfi_startproc
 8261              		@ args = 0, pretend = 0, frame = 16
 8262              		@ frame_needed = 1, uses_anonymous_args = 0
 8263              		@ link register save eliminated.
 8264 0000 04B02DE5 		str	fp, [sp, #-4]!
 8265              		.cfi_def_cfa_offset 4
 8266              		.cfi_offset 11, -4
 8267 0004 00B08DE2 		add	fp, sp, #0
 8268              		.cfi_def_cfa_register 11
 8269 0008 14D04DE2 		sub	sp, sp, #20
 8270 000c 10000BE5 		str	r0, [fp, #-16]
3866:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3867:../../Source/Kernel/rme_kernel.c ****     
3868:../../Source/Kernel/rme_kernel.c ****     if(Word<RME_KOT_WORD_NUM)
 8271              		.loc 1 3868 7
 8272 0010 10301BE5 		ldr	r3, [fp, #-16]
 8273 0014 020653E3 		cmp	r3, #2097152
 8274 0018 0100002A 		bcs	.L534
3869:../../Source/Kernel/rme_kernel.c ****     {
3870:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3871:../../Source/Kernel/rme_kernel.c **** 
3872:../../Source/Kernel/rme_kernel.c ****         return -1;
 8275              		.loc 1 3872 16
 8276 001c 0030E0E3 		mvn	r3, #0
 8277 0020 0F0000EA 		b	.L535
 8278              	.L534:
3873:../../Source/Kernel/rme_kernel.c ****     }
3874:../../Source/Kernel/rme_kernel.c ****     else
3875:../../Source/Kernel/rme_kernel.c ****     {
3876:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3877:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3878:../../Source/Kernel/rme_kernel.c ****     }
3879:../../Source/Kernel/rme_kernel.c **** 
3880:../../Source/Kernel/rme_kernel.c ****     /* Zero out the whole table */
3881:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Word;Count++)
 8279              		.loc 1 3881 14
 8280 0024 0030A0E3 		mov	r3, #0
 8281 0028 08300BE5 		str	r3, [fp, #-8]
 8282              		.loc 1 3881 5
 8283 002c 070000EA 		b	.L536
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 215


 8284              	.L537:
3882:../../Source/Kernel/rme_kernel.c ****     {
3883:../../Source/Kernel/rme_kernel.c ****         RME_KOT_VA_BASE[Count]=0U;
 8285              		.loc 1 3883 31
 8286 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8287 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8288 0038 08201BE5 		ldr	r2, [fp, #-8]
 8289 003c 0010A0E3 		mov	r1, #0
 8290 0040 021183E7 		str	r1, [r3, r2, lsl #2]
3881:../../Source/Kernel/rme_kernel.c ****     {
 8291              		.loc 1 3881 34 discriminator 3
 8292 0044 08301BE5 		ldr	r3, [fp, #-8]
 8293 0048 013083E2 		add	r3, r3, #1
 8294 004c 08300BE5 		str	r3, [fp, #-8]
 8295              	.L536:
3881:../../Source/Kernel/rme_kernel.c ****     {
 8296              		.loc 1 3881 23 discriminator 1
 8297 0050 08201BE5 		ldr	r2, [fp, #-8]
 8298 0054 10301BE5 		ldr	r3, [fp, #-16]
 8299 0058 030052E1 		cmp	r2, r3
 8300 005c F3FFFF3A 		bcc	.L537
3884:../../Source/Kernel/rme_kernel.c ****     }
3885:../../Source/Kernel/rme_kernel.c **** 
3886:../../Source/Kernel/rme_kernel.c ****     return 0;
 8301              		.loc 1 3886 12
 8302 0060 0030A0E3 		mov	r3, #0
 8303              	.L535:
3887:../../Source/Kernel/rme_kernel.c **** }
 8304              		.loc 1 3887 1
 8305 0064 0300A0E1 		mov	r0, r3
 8306 0068 00D08BE2 		add	sp, fp, #0
 8307              		.cfi_def_cfa_register 13
 8308              		@ sp needed
 8309 006c 04B09DE4 		ldr	fp, [sp], #4
 8310              		.cfi_restore 11
 8311              		.cfi_def_cfa_offset 0
 8312 0070 1EFF2FE1 		bx	lr
 8313              		.cfi_endproc
 8314              	.LFE38:
 8316              		.section	.text._RME_Kot_Mark,"ax",%progbits
 8317              		.align	2
 8318              		.global	_RME_Kot_Mark
 8319              		.syntax unified
 8320              		.arm
 8322              	_RME_Kot_Mark:
 8323              	.LFB39:
3888:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Init ************************************************/
3889:../../Source/Kernel/rme_kernel.c **** 
3890:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Mark *****************************************************
3891:../../Source/Kernel/rme_kernel.c **** Description : Populate the kernel object bitmap contiguously.
3892:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
3893:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to populate.
3894:../../Source/Kernel/rme_kernel.c **** Output      : None.
3895:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3896:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3897:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Mark(rme_ptr_t Kaddr,
3898:../../Source/Kernel/rme_kernel.c ****                         rme_ptr_t Size)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 216


3899:../../Source/Kernel/rme_kernel.c **** {
 8324              		.loc 1 3899 1
 8325              		.cfi_startproc
 8326              		@ args = 0, pretend = 0, frame = 40
 8327              		@ frame_needed = 1, uses_anonymous_args = 0
 8328 0000 00482DE9 		push	{fp, lr}
 8329              		.cfi_def_cfa_offset 8
 8330              		.cfi_offset 11, -8
 8331              		.cfi_offset 14, -4
 8332 0004 04B08DE2 		add	fp, sp, #4
 8333              		.cfi_def_cfa 11, 4
 8334 0008 28D04DE2 		sub	sp, sp, #40
 8335 000c 28000BE5 		str	r0, [fp, #-40]
 8336 0010 2C100BE5 		str	r1, [fp, #-44]
3900:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3901:../../Source/Kernel/rme_kernel.c ****     /* The old value */
3902:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Val;
3903:../../Source/Kernel/rme_kernel.c ****     /* Whether we need to undo our operations because of CAS failure */
3904:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Undo;
3905:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
3906:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
3907:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
3908:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
3909:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
3910:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
3911:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
3912:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
3913:../../Source/Kernel/rme_kernel.c **** 
3914:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
3915:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8337              		.loc 1 3915 14
 8338 0014 28301BE5 		ldr	r3, [fp, #-40]
 8339 0018 0F3003E2 		and	r3, r3, #15
 8340              		.loc 1 3915 7
 8341 001c 000053E3 		cmp	r3, #0
 8342 0020 0100000A 		beq	.L539
3916:../../Source/Kernel/rme_kernel.c ****     {
3917:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3918:../../Source/Kernel/rme_kernel.c **** 
3919:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8343              		.loc 1 3919 16
 8344 0024 0030E0E3 		mvn	r3, #0
 8345 0028 C20000EA 		b	.L540
 8346              	.L539:
3920:../../Source/Kernel/rme_kernel.c ****     }
3921:../../Source/Kernel/rme_kernel.c ****     else
3922:../../Source/Kernel/rme_kernel.c ****     {
3923:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3924:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3925:../../Source/Kernel/rme_kernel.c ****     }
3926:../../Source/Kernel/rme_kernel.c ****     
3927:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
3928:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8347              		.loc 1 3928 17
 8348 002c 28301BE5 		ldr	r3, [fp, #-40]
 8349 0030 7F3483E2 		add	r3, r3, #2130706432
 8350              		.loc 1 3928 10
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 217


 8351 0034 2332A0E1 		lsr	r3, r3, #4
 8352 0038 10300BE5 		str	r3, [fp, #-16]
3929:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8353              		.loc 1 3929 16
 8354 003c 10301BE5 		ldr	r3, [fp, #-16]
 8355 0040 1F3003E2 		and	r3, r3, #31
 8356              		.loc 1 3929 15
 8357 0044 0020E0E3 		mvn	r2, #0
 8358 0048 1233A0E1 		lsl	r3, r2, r3
 8359 004c 14300BE5 		str	r3, [fp, #-20]
3930:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8360              		.loc 1 3930 10
 8361 0050 10301BE5 		ldr	r3, [fp, #-16]
 8362 0054 A332A0E1 		lsr	r3, r3, #5
 8363 0058 10300BE5 		str	r3, [fp, #-16]
3931:../../Source/Kernel/rme_kernel.c ****     
3932:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8364              		.loc 1 3932 15
 8365 005c 28201BE5 		ldr	r2, [fp, #-40]
 8366 0060 2C301BE5 		ldr	r3, [fp, #-44]
 8367 0064 033082E0 		add	r3, r2, r3
 8368              		.loc 1 3932 23
 8369 0068 7F3483E2 		add	r3, r3, #2130706432
 8370 006c 013043E2 		sub	r3, r3, #1
 8371              		.loc 1 3932 8
 8372 0070 2332A0E1 		lsr	r3, r3, #4
 8373 0074 18300BE5 		str	r3, [fp, #-24]
3933:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8374              		.loc 1 3933 14
 8375 0078 18301BE5 		ldr	r3, [fp, #-24]
 8376 007c 0330E0E1 		mvn	r3, r3
 8377 0080 1F3003E2 		and	r3, r3, #31
 8378              		.loc 1 3933 13
 8379 0084 0020E0E3 		mvn	r2, #0
 8380 0088 3233A0E1 		lsr	r3, r2, r3
 8381 008c 1C300BE5 		str	r3, [fp, #-28]
3934:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8382              		.loc 1 3934 8
 8383 0090 18301BE5 		ldr	r3, [fp, #-24]
 8384 0094 A332A0E1 		lsr	r3, r3, #5
 8385 0098 18300BE5 		str	r3, [fp, #-24]
3935:../../Source/Kernel/rme_kernel.c ****     
3936:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
3937:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8386              		.loc 1 3937 7
 8387 009c 10201BE5 		ldr	r2, [fp, #-16]
 8388 00a0 18301BE5 		ldr	r3, [fp, #-24]
 8389 00a4 030052E1 		cmp	r2, r3
 8390 00a8 1F00001A 		bne	.L541
3938:../../Source/Kernel/rme_kernel.c ****     {
3939:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3940:../../Source/Kernel/rme_kernel.c **** 
3941:../../Source/Kernel/rme_kernel.c ****         /* Someone already populated something here */
3942:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8391              		.loc 1 3942 16
 8392 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8393 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 218


 8394 00b4 10201BE5 		ldr	r2, [fp, #-16]
 8395 00b8 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8396 00bc 20300BE5 		str	r3, [fp, #-32]
3943:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&(Mask_Begin&Mask_End))!=0U)
 8397              		.loc 1 3943 32
 8398 00c0 14201BE5 		ldr	r2, [fp, #-20]
 8399 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 8400 00c8 032002E0 		and	r2, r2, r3
 8401              		.loc 1 3943 20
 8402 00cc 20301BE5 		ldr	r3, [fp, #-32]
 8403 00d0 023003E0 		and	r3, r3, r2
 8404              		.loc 1 3943 11
 8405 00d4 000053E3 		cmp	r3, #0
 8406 00d8 0100000A 		beq	.L542
3944:../../Source/Kernel/rme_kernel.c ****         {
3945:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3946:../../Source/Kernel/rme_kernel.c **** 
3947:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8407              		.loc 1 3947 20
 8408 00dc 0030E0E3 		mvn	r3, #0
 8409 00e0 940000EA 		b	.L540
 8410              	.L542:
3948:../../Source/Kernel/rme_kernel.c ****         }
3949:../../Source/Kernel/rme_kernel.c ****         else
3950:../../Source/Kernel/rme_kernel.c ****         {
3951:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3952:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3953:../../Source/Kernel/rme_kernel.c ****         }
3954:../../Source/Kernel/rme_kernel.c ****         
3955:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the marking with CAS */
3956:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8411              		.loc 1 3956 12
 8412 00e4 10301BE5 		ldr	r3, [fp, #-16]
 8413 00e8 0321A0E1 		lsl	r2, r3, #2
 8414 00ec 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8415 00f0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8416 00f4 030082E0 		add	r0, r2, r3
 8417 00f8 14201BE5 		ldr	r2, [fp, #-20]
 8418 00fc 1C301BE5 		ldr	r3, [fp, #-28]
 8419 0100 032002E0 		and	r2, r2, r3
 8420 0104 20301BE5 		ldr	r3, [fp, #-32]
 8421 0108 033082E1 		orr	r3, r2, r3
 8422 010c 0320A0E1 		mov	r2, r3
 8423 0110 20101BE5 		ldr	r1, [fp, #-32]
 8424 0114 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8425 0118 0030A0E1 		mov	r3, r0
 8426              		.loc 1 3956 11 discriminator 1
 8427 011c 000053E3 		cmp	r3, #0
 8428 0120 8300001A 		bne	.L543
3957:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3958:../../Source/Kernel/rme_kernel.c ****                          Old_Val|(Mask_Begin&Mask_End))==RME_CASFAIL)
3959:../../Source/Kernel/rme_kernel.c ****         {
3960:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3961:../../Source/Kernel/rme_kernel.c **** 
3962:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8429              		.loc 1 3962 20
 8430 0124 0030E0E3 		mvn	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 219


 8431 0128 820000EA 		b	.L540
 8432              	.L541:
3963:../../Source/Kernel/rme_kernel.c ****         }
3964:../../Source/Kernel/rme_kernel.c ****         else
3965:../../Source/Kernel/rme_kernel.c ****         {
3966:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3967:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3968:../../Source/Kernel/rme_kernel.c ****         }
3969:../../Source/Kernel/rme_kernel.c ****     }
3970:../../Source/Kernel/rme_kernel.c ****     else
3971:../../Source/Kernel/rme_kernel.c ****     {
3972:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3973:../../Source/Kernel/rme_kernel.c ****         
3974:../../Source/Kernel/rme_kernel.c ****         Undo=0U;
 8433              		.loc 1 3974 13
 8434 012c 0030A0E3 		mov	r3, #0
 8435 0130 0C300BE5 		str	r3, [fp, #-12]
3975:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the start */
3976:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8436              		.loc 1 3976 16
 8437 0134 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8438 0138 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8439 013c 10201BE5 		ldr	r2, [fp, #-16]
 8440 0140 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8441 0144 20300BE5 		str	r3, [fp, #-32]
3977:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&Mask_Begin)!=0U)
 8442              		.loc 1 3977 20
 8443 0148 20201BE5 		ldr	r2, [fp, #-32]
 8444 014c 14301BE5 		ldr	r3, [fp, #-20]
 8445 0150 023003E0 		and	r3, r3, r2
 8446              		.loc 1 3977 11
 8447 0154 000053E3 		cmp	r3, #0
 8448 0158 0100000A 		beq	.L544
3978:../../Source/Kernel/rme_kernel.c ****         {
3979:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3980:../../Source/Kernel/rme_kernel.c **** 
3981:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8449              		.loc 1 3981 20
 8450 015c 0030E0E3 		mvn	r3, #0
 8451 0160 740000EA 		b	.L540
 8452              	.L544:
3982:../../Source/Kernel/rme_kernel.c ****         }
3983:../../Source/Kernel/rme_kernel.c ****         else
3984:../../Source/Kernel/rme_kernel.c ****         {
3985:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3986:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3987:../../Source/Kernel/rme_kernel.c ****         }
3988:../../Source/Kernel/rme_kernel.c ****         
3989:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8453              		.loc 1 3989 12
 8454 0164 10301BE5 		ldr	r3, [fp, #-16]
 8455 0168 0321A0E1 		lsl	r2, r3, #2
 8456 016c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8457 0170 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8458 0174 030082E0 		add	r0, r2, r3
 8459 0178 20201BE5 		ldr	r2, [fp, #-32]
 8460 017c 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 220


 8461 0180 033082E1 		orr	r3, r2, r3
 8462 0184 0320A0E1 		mov	r2, r3
 8463 0188 20101BE5 		ldr	r1, [fp, #-32]
 8464 018c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8465 0190 0030A0E1 		mov	r3, r0
 8466              		.loc 1 3989 11 discriminator 1
 8467 0194 000053E3 		cmp	r3, #0
 8468 0198 0100001A 		bne	.L545
3990:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3991:../../Source/Kernel/rme_kernel.c ****                          Old_Val|Mask_Begin)==RME_CASFAIL)
3992:../../Source/Kernel/rme_kernel.c ****         {
3993:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3994:../../Source/Kernel/rme_kernel.c **** 
3995:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8469              		.loc 1 3995 20
 8470 019c 0030E0E3 		mvn	r3, #0
 8471 01a0 640000EA 		b	.L540
 8472              	.L545:
3996:../../Source/Kernel/rme_kernel.c ****         }
3997:../../Source/Kernel/rme_kernel.c ****         else
3998:../../Source/Kernel/rme_kernel.c ****         {
3999:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4000:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4001:../../Source/Kernel/rme_kernel.c ****         }
4002:../../Source/Kernel/rme_kernel.c ****         
4003:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the middle */
4004:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End;Count++)
 8473              		.loc 1 4004 18
 8474 01a4 10301BE5 		ldr	r3, [fp, #-16]
 8475 01a8 013083E2 		add	r3, r3, #1
 8476 01ac 08300BE5 		str	r3, [fp, #-8]
 8477              		.loc 1 4004 9
 8478 01b0 1C0000EA 		b	.L546
 8479              	.L550:
4005:../../Source/Kernel/rme_kernel.c ****         {
4006:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[Count];
 8480              		.loc 1 4006 20
 8481 01b4 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8482 01b8 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8483 01bc 08201BE5 		ldr	r2, [fp, #-8]
 8484 01c0 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8485 01c4 20300BE5 		str	r3, [fp, #-32]
4007:../../Source/Kernel/rme_kernel.c ****             if(Old_Val!=0U)
 8486              		.loc 1 4007 15
 8487 01c8 20301BE5 		ldr	r3, [fp, #-32]
 8488 01cc 000053E3 		cmp	r3, #0
 8489 01d0 0200000A 		beq	.L547
4008:../../Source/Kernel/rme_kernel.c ****             {
4009:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4010:../../Source/Kernel/rme_kernel.c **** 
4011:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8490              		.loc 1 4011 21
 8491 01d4 0130A0E3 		mov	r3, #1
 8492 01d8 0C300BE5 		str	r3, [fp, #-12]
4012:../../Source/Kernel/rme_kernel.c ****                 break;
 8493              		.loc 1 4012 17
 8494 01dc 150000EA 		b	.L548
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 221


 8495              	.L547:
4013:../../Source/Kernel/rme_kernel.c ****             }
4014:../../Source/Kernel/rme_kernel.c ****             else
4015:../../Source/Kernel/rme_kernel.c ****             {
4016:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4017:../../Source/Kernel/rme_kernel.c ****                 
4018:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Count],
 8496              		.loc 1 4018 20
 8497 01e0 08301BE5 		ldr	r3, [fp, #-8]
 8498 01e4 0321A0E1 		lsl	r2, r3, #2
 8499 01e8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8500 01ec 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8501 01f0 033082E0 		add	r3, r2, r3
 8502 01f4 0020E0E3 		mvn	r2, #0
 8503 01f8 20101BE5 		ldr	r1, [fp, #-32]
 8504 01fc 0300A0E1 		mov	r0, r3
 8505 0200 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8506 0204 0030A0E1 		mov	r3, r0
 8507              		.loc 1 4018 19 discriminator 1
 8508 0208 000053E3 		cmp	r3, #0
 8509 020c 0200001A 		bne	.L549
4019:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4020:../../Source/Kernel/rme_kernel.c ****                                  RME_MASK_FULL)==RME_CASFAIL)
4021:../../Source/Kernel/rme_kernel.c ****                 {
4022:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4023:../../Source/Kernel/rme_kernel.c ****                     
4024:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8510              		.loc 1 4024 25
 8511 0210 0130A0E3 		mov	r3, #1
 8512 0214 0C300BE5 		str	r3, [fp, #-12]
4025:../../Source/Kernel/rme_kernel.c ****                     break;
 8513              		.loc 1 4025 21
 8514 0218 060000EA 		b	.L548
 8515              	.L549:
4004:../../Source/Kernel/rme_kernel.c ****         {
 8516              		.loc 1 4004 43 discriminator 2
 8517 021c 08301BE5 		ldr	r3, [fp, #-8]
 8518 0220 013083E2 		add	r3, r3, #1
 8519 0224 08300BE5 		str	r3, [fp, #-8]
 8520              	.L546:
4004:../../Source/Kernel/rme_kernel.c ****         {
 8521              		.loc 1 4004 33 discriminator 1
 8522 0228 08201BE5 		ldr	r2, [fp, #-8]
 8523 022c 18301BE5 		ldr	r3, [fp, #-24]
 8524 0230 030052E1 		cmp	r2, r3
 8525 0234 DEFFFF3A 		bcc	.L550
 8526              	.L548:
4026:../../Source/Kernel/rme_kernel.c ****                 }
4027:../../Source/Kernel/rme_kernel.c ****                 else
4028:../../Source/Kernel/rme_kernel.c ****                 {
4029:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4030:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4031:../../Source/Kernel/rme_kernel.c ****                 }
4032:../../Source/Kernel/rme_kernel.c ****             }
4033:../../Source/Kernel/rme_kernel.c ****         }
4034:../../Source/Kernel/rme_kernel.c ****         
4035:../../Source/Kernel/rme_kernel.c ****         /* See if the middle part failed. If yes, we skip the end marking */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 222


4036:../../Source/Kernel/rme_kernel.c ****         if(Undo==0U)
 8527              		.loc 1 4036 11
 8528 0238 0C301BE5 		ldr	r3, [fp, #-12]
 8529 023c 000053E3 		cmp	r3, #0
 8530 0240 1C00001A 		bne	.L551
4037:../../Source/Kernel/rme_kernel.c ****         {
4038:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4039:../../Source/Kernel/rme_kernel.c **** 
4040:../../Source/Kernel/rme_kernel.c ****             /* Check&Mark the end */
4041:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[End];
 8531              		.loc 1 4041 20
 8532 0244 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8533 0248 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8534 024c 18201BE5 		ldr	r2, [fp, #-24]
 8535 0250 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8536 0254 20300BE5 		str	r3, [fp, #-32]
4042:../../Source/Kernel/rme_kernel.c ****             if((Old_Val&Mask_End)!=0U)
 8537              		.loc 1 4042 24
 8538 0258 20201BE5 		ldr	r2, [fp, #-32]
 8539 025c 1C301BE5 		ldr	r3, [fp, #-28]
 8540 0260 023003E0 		and	r3, r3, r2
 8541              		.loc 1 4042 15
 8542 0264 000053E3 		cmp	r3, #0
 8543 0268 0200000A 		beq	.L552
4043:../../Source/Kernel/rme_kernel.c ****             {
4044:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4045:../../Source/Kernel/rme_kernel.c **** 
4046:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8544              		.loc 1 4046 21
 8545 026c 0130A0E3 		mov	r3, #1
 8546 0270 0C300BE5 		str	r3, [fp, #-12]
 8547 0274 0F0000EA 		b	.L551
 8548              	.L552:
4047:../../Source/Kernel/rme_kernel.c ****             }
4048:../../Source/Kernel/rme_kernel.c ****             else
4049:../../Source/Kernel/rme_kernel.c ****             {
4050:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4051:../../Source/Kernel/rme_kernel.c **** 
4052:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[End],
 8549              		.loc 1 4052 20
 8550 0278 18301BE5 		ldr	r3, [fp, #-24]
 8551 027c 0321A0E1 		lsl	r2, r3, #2
 8552 0280 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8553 0284 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8554 0288 030082E0 		add	r0, r2, r3
 8555 028c 20201BE5 		ldr	r2, [fp, #-32]
 8556 0290 1C301BE5 		ldr	r3, [fp, #-28]
 8557 0294 033082E1 		orr	r3, r2, r3
 8558 0298 0320A0E1 		mov	r2, r3
 8559 029c 20101BE5 		ldr	r1, [fp, #-32]
 8560 02a0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8561 02a4 0030A0E1 		mov	r3, r0
 8562              		.loc 1 4052 19 discriminator 1
 8563 02a8 000053E3 		cmp	r3, #0
 8564 02ac 0100001A 		bne	.L551
4053:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4054:../../Source/Kernel/rme_kernel.c ****                                  Old_Val|Mask_End)==RME_CASFAIL)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 223


4055:../../Source/Kernel/rme_kernel.c ****                 {
4056:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4057:../../Source/Kernel/rme_kernel.c **** 
4058:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8565              		.loc 1 4058 25
 8566 02b0 0130A0E3 		mov	r3, #1
 8567 02b4 0C300BE5 		str	r3, [fp, #-12]
 8568              	.L551:
4059:../../Source/Kernel/rme_kernel.c ****                 }
4060:../../Source/Kernel/rme_kernel.c ****                 else
4061:../../Source/Kernel/rme_kernel.c ****                 {
4062:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4063:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4064:../../Source/Kernel/rme_kernel.c ****                 }
4065:../../Source/Kernel/rme_kernel.c ****             }
4066:../../Source/Kernel/rme_kernel.c ****         }
4067:../../Source/Kernel/rme_kernel.c ****         else
4068:../../Source/Kernel/rme_kernel.c ****         {
4069:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4070:../../Source/Kernel/rme_kernel.c ****         }
4071:../../Source/Kernel/rme_kernel.c ****         
4072:../../Source/Kernel/rme_kernel.c ****         /* See if we need to undo. If yes, proceed to unroll and return error */
4073:../../Source/Kernel/rme_kernel.c ****         if(Undo!=0U)
 8569              		.loc 1 4073 11
 8570 02b8 0C301BE5 		ldr	r3, [fp, #-12]
 8571 02bc 000053E3 		cmp	r3, #0
 8572 02c0 1B00000A 		beq	.L543
4074:../../Source/Kernel/rme_kernel.c ****         {
4075:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4076:../../Source/Kernel/rme_kernel.c **** 
4077:../../Source/Kernel/rme_kernel.c ****             /* Undo the middle part - no CAS neeeded, write back is always atomic */
4078:../../Source/Kernel/rme_kernel.c ****             for(Count--;Count>Start;Count--)
 8573              		.loc 1 4078 22
 8574 02c4 08301BE5 		ldr	r3, [fp, #-8]
 8575 02c8 013043E2 		sub	r3, r3, #1
 8576 02cc 08300BE5 		str	r3, [fp, #-8]
 8577              		.loc 1 4078 13
 8578 02d0 070000EA 		b	.L553
 8579              	.L554:
4079:../../Source/Kernel/rme_kernel.c ****             {
4080:../../Source/Kernel/rme_kernel.c ****                 RME_KOT_VA_BASE[Count]=0U;
 8580              		.loc 1 4080 39
 8581 02d4 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8582 02d8 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8583 02dc 08201BE5 		ldr	r2, [fp, #-8]
 8584 02e0 0010A0E3 		mov	r1, #0
 8585 02e4 021183E7 		str	r1, [r3, r2, lsl #2]
4078:../../Source/Kernel/rme_kernel.c ****             {
 8586              		.loc 1 4078 42 discriminator 3
 8587 02e8 08301BE5 		ldr	r3, [fp, #-8]
 8588 02ec 013043E2 		sub	r3, r3, #1
 8589 02f0 08300BE5 		str	r3, [fp, #-8]
 8590              	.L553:
4078:../../Source/Kernel/rme_kernel.c ****             {
 8591              		.loc 1 4078 30 discriminator 1
 8592 02f4 08201BE5 		ldr	r2, [fp, #-8]
 8593 02f8 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 224


 8594 02fc 030052E1 		cmp	r2, r3
 8595 0300 F3FFFF8A 		bhi	.L554
4081:../../Source/Kernel/rme_kernel.c ****             }
4082:../../Source/Kernel/rme_kernel.c ****             /* Undo the first word - need atomic instructions */
4083:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8596              		.loc 1 4083 13
 8597 0304 10301BE5 		ldr	r3, [fp, #-16]
 8598 0308 0321A0E1 		lsl	r2, r3, #2
 8599 030c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8600 0310 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8601 0314 032082E0 		add	r2, r2, r3
 8602 0318 14301BE5 		ldr	r3, [fp, #-20]
 8603 031c 0330E0E1 		mvn	r3, r3
 8604 0320 0310A0E1 		mov	r1, r3
 8605 0324 0200A0E1 		mov	r0, r2
 8606 0328 FEFFFFEB 		bl	_RME_Fetch_And_Single
4084:../../Source/Kernel/rme_kernel.c ****             /* Return failure */
4085:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8607              		.loc 1 4085 20
 8608 032c 0030E0E3 		mvn	r3, #0
 8609 0330 000000EA 		b	.L540
 8610              	.L543:
4086:../../Source/Kernel/rme_kernel.c ****         }
4087:../../Source/Kernel/rme_kernel.c ****         else
4088:../../Source/Kernel/rme_kernel.c ****         {
4089:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4090:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4091:../../Source/Kernel/rme_kernel.c ****         }
4092:../../Source/Kernel/rme_kernel.c ****     }
4093:../../Source/Kernel/rme_kernel.c **** 
4094:../../Source/Kernel/rme_kernel.c ****     return 0;
 8611              		.loc 1 4094 12
 8612 0334 0030A0E3 		mov	r3, #0
 8613              	.L540:
4095:../../Source/Kernel/rme_kernel.c **** }
 8614              		.loc 1 4095 1
 8615 0338 0300A0E1 		mov	r0, r3
 8616 033c 04D04BE2 		sub	sp, fp, #4
 8617              		.cfi_def_cfa 13, 8
 8618              		@ sp needed
 8619 0340 0088BDE8 		pop	{fp, pc}
 8620              		.cfi_endproc
 8621              	.LFE39:
 8623              		.section	.text._RME_Kot_Erase,"ax",%progbits
 8624              		.align	2
 8625              		.global	_RME_Kot_Erase
 8626              		.syntax unified
 8627              		.arm
 8629              	_RME_Kot_Erase:
 8630              	.LFB40:
4096:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Mark ************************************************/
4097:../../Source/Kernel/rme_kernel.c **** 
4098:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Erase ****************************************************
4099:../../Source/Kernel/rme_kernel.c **** Description : Depopulate the kernel object bitmap contiguously. We do not need 
4100:../../Source/Kernel/rme_kernel.c ****               CAS on erasure operations.
4101:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
4102:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to depopulate.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 225


4103:../../Source/Kernel/rme_kernel.c **** Output      : None.
4104:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4105:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4106:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Erase(rme_ptr_t Kaddr,
4107:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t Size)
4108:../../Source/Kernel/rme_kernel.c **** {
 8631              		.loc 1 4108 1
 8632              		.cfi_startproc
 8633              		@ args = 0, pretend = 0, frame = 32
 8634              		@ frame_needed = 1, uses_anonymous_args = 0
 8635 0000 00482DE9 		push	{fp, lr}
 8636              		.cfi_def_cfa_offset 8
 8637              		.cfi_offset 11, -8
 8638              		.cfi_offset 14, -4
 8639 0004 04B08DE2 		add	fp, sp, #4
 8640              		.cfi_def_cfa 11, 4
 8641 0008 20D04DE2 		sub	sp, sp, #32
 8642 000c 20000BE5 		str	r0, [fp, #-32]
 8643 0010 24100BE5 		str	r1, [fp, #-36]
4109:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
4110:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
4111:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
4112:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
4113:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
4114:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
4115:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
4116:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
4117:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
4118:../../Source/Kernel/rme_kernel.c **** 
4119:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
4120:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8644              		.loc 1 4120 14
 8645 0014 20301BE5 		ldr	r3, [fp, #-32]
 8646 0018 0F3003E2 		and	r3, r3, #15
 8647              		.loc 1 4120 7
 8648 001c 000053E3 		cmp	r3, #0
 8649 0020 0100000A 		beq	.L556
4121:../../Source/Kernel/rme_kernel.c ****     {
4122:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4123:../../Source/Kernel/rme_kernel.c **** 
4124:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8650              		.loc 1 4124 16
 8651 0024 0030E0E3 		mvn	r3, #0
 8652 0028 8A0000EA 		b	.L557
 8653              	.L556:
4125:../../Source/Kernel/rme_kernel.c ****     }
4126:../../Source/Kernel/rme_kernel.c ****     else
4127:../../Source/Kernel/rme_kernel.c ****     {
4128:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4129:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4130:../../Source/Kernel/rme_kernel.c ****     }
4131:../../Source/Kernel/rme_kernel.c ****     
4132:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
4133:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8654              		.loc 1 4133 17
 8655 002c 20301BE5 		ldr	r3, [fp, #-32]
 8656 0030 7F3483E2 		add	r3, r3, #2130706432
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 226


 8657              		.loc 1 4133 10
 8658 0034 2332A0E1 		lsr	r3, r3, #4
 8659 0038 0C300BE5 		str	r3, [fp, #-12]
4134:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8660              		.loc 1 4134 16
 8661 003c 0C301BE5 		ldr	r3, [fp, #-12]
 8662 0040 1F3003E2 		and	r3, r3, #31
 8663              		.loc 1 4134 15
 8664 0044 0020E0E3 		mvn	r2, #0
 8665 0048 1233A0E1 		lsl	r3, r2, r3
 8666 004c 10300BE5 		str	r3, [fp, #-16]
4135:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8667              		.loc 1 4135 10
 8668 0050 0C301BE5 		ldr	r3, [fp, #-12]
 8669 0054 A332A0E1 		lsr	r3, r3, #5
 8670 0058 0C300BE5 		str	r3, [fp, #-12]
4136:../../Source/Kernel/rme_kernel.c ****     
4137:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8671              		.loc 1 4137 15
 8672 005c 20201BE5 		ldr	r2, [fp, #-32]
 8673 0060 24301BE5 		ldr	r3, [fp, #-36]
 8674 0064 033082E0 		add	r3, r2, r3
 8675              		.loc 1 4137 23
 8676 0068 7F3483E2 		add	r3, r3, #2130706432
 8677 006c 013043E2 		sub	r3, r3, #1
 8678              		.loc 1 4137 8
 8679 0070 2332A0E1 		lsr	r3, r3, #4
 8680 0074 14300BE5 		str	r3, [fp, #-20]
4138:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8681              		.loc 1 4138 14
 8682 0078 14301BE5 		ldr	r3, [fp, #-20]
 8683 007c 0330E0E1 		mvn	r3, r3
 8684 0080 1F3003E2 		and	r3, r3, #31
 8685              		.loc 1 4138 13
 8686 0084 0020E0E3 		mvn	r2, #0
 8687 0088 3233A0E1 		lsr	r3, r2, r3
 8688 008c 18300BE5 		str	r3, [fp, #-24]
4139:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8689              		.loc 1 4139 8
 8690 0090 14301BE5 		ldr	r3, [fp, #-20]
 8691 0094 A332A0E1 		lsr	r3, r3, #5
 8692 0098 14300BE5 		str	r3, [fp, #-20]
4140:../../Source/Kernel/rme_kernel.c ****     
4141:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
4142:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8693              		.loc 1 4142 7
 8694 009c 0C201BE5 		ldr	r2, [fp, #-12]
 8695 00a0 14301BE5 		ldr	r3, [fp, #-20]
 8696 00a4 030052E1 		cmp	r2, r3
 8697 00a8 1A00001A 		bne	.L558
4143:../../Source/Kernel/rme_kernel.c ****     {
4144:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4145:../../Source/Kernel/rme_kernel.c **** 
4146:../../Source/Kernel/rme_kernel.c ****         /* This address range is not fully populated */
4147:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&(Mask_Begin&Mask_End))!=(Mask_Begin&Mask_End))
 8698              		.loc 1 4147 28
 8699 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 227


 8700 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8701 00b4 0C201BE5 		ldr	r2, [fp, #-12]
 8702 00b8 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8703              		.loc 1 4147 47
 8704 00bc 10101BE5 		ldr	r1, [fp, #-16]
 8705 00c0 18301BE5 		ldr	r3, [fp, #-24]
 8706 00c4 013003E0 		and	r3, r3, r1
 8707              		.loc 1 4147 35
 8708 00c8 032002E0 		and	r2, r2, r3
 8709              		.loc 1 4147 71
 8710 00cc 10101BE5 		ldr	r1, [fp, #-16]
 8711 00d0 18301BE5 		ldr	r3, [fp, #-24]
 8712 00d4 013003E0 		and	r3, r3, r1
 8713              		.loc 1 4147 11
 8714 00d8 030052E1 		cmp	r2, r3
 8715 00dc 0100000A 		beq	.L559
4148:../../Source/Kernel/rme_kernel.c ****         {
4149:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4150:../../Source/Kernel/rme_kernel.c **** 
4151:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8716              		.loc 1 4151 20
 8717 00e0 0030E0E3 		mvn	r3, #0
 8718 00e4 5B0000EA 		b	.L557
 8719              	.L559:
4152:../../Source/Kernel/rme_kernel.c ****         }
4153:../../Source/Kernel/rme_kernel.c ****         else
4154:../../Source/Kernel/rme_kernel.c ****         {
4155:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4156:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4157:../../Source/Kernel/rme_kernel.c ****         }
4158:../../Source/Kernel/rme_kernel.c **** 
4159:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the unmarking - need atomic operations */
4160:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~(Mask_Begin&Mask_End));
 8720              		.loc 1 4160 9
 8721 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 8722 00ec 0321A0E1 		lsl	r2, r3, #2
 8723 00f0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8724 00f4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8725 00f8 030082E0 		add	r0, r2, r3
 8726 00fc 10201BE5 		ldr	r2, [fp, #-16]
 8727 0100 18301BE5 		ldr	r3, [fp, #-24]
 8728 0104 023003E0 		and	r3, r3, r2
 8729 0108 0330E0E1 		mvn	r3, r3
 8730 010c 0310A0E1 		mov	r1, r3
 8731 0110 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8732 0114 4E0000EA 		b	.L560
 8733              	.L558:
4161:../../Source/Kernel/rme_kernel.c ****     }
4162:../../Source/Kernel/rme_kernel.c ****     else
4163:../../Source/Kernel/rme_kernel.c ****     {
4164:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4165:../../Source/Kernel/rme_kernel.c **** 
4166:../../Source/Kernel/rme_kernel.c ****         /* Check the start */
4167:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&Mask_Begin)!=Mask_Begin)
 8734              		.loc 1 4167 28
 8735 0118 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8736 011c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 228


 8737 0120 0C201BE5 		ldr	r2, [fp, #-12]
 8738 0124 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8739              		.loc 1 4167 35
 8740 0128 10301BE5 		ldr	r3, [fp, #-16]
 8741 012c 023003E0 		and	r3, r3, r2
 8742              		.loc 1 4167 11
 8743 0130 10201BE5 		ldr	r2, [fp, #-16]
 8744 0134 030052E1 		cmp	r2, r3
 8745 0138 0100000A 		beq	.L561
4168:../../Source/Kernel/rme_kernel.c ****         {
4169:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4170:../../Source/Kernel/rme_kernel.c **** 
4171:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8746              		.loc 1 4171 20
 8747 013c 0030E0E3 		mvn	r3, #0
 8748 0140 440000EA 		b	.L557
 8749              	.L561:
4172:../../Source/Kernel/rme_kernel.c ****         }
4173:../../Source/Kernel/rme_kernel.c ****         else
4174:../../Source/Kernel/rme_kernel.c ****         {
4175:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4176:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4177:../../Source/Kernel/rme_kernel.c ****         }
4178:../../Source/Kernel/rme_kernel.c ****         
4179:../../Source/Kernel/rme_kernel.c ****         /* Check the middle */
4180:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8750              		.loc 1 4180 18
 8751 0144 0C301BE5 		ldr	r3, [fp, #-12]
 8752 0148 013083E2 		add	r3, r3, #1
 8753 014c 08300BE5 		str	r3, [fp, #-8]
 8754              		.loc 1 4180 9
 8755 0150 0A0000EA 		b	.L562
 8756              	.L564:
4181:../../Source/Kernel/rme_kernel.c ****         {
4182:../../Source/Kernel/rme_kernel.c ****             if(RME_KOT_VA_BASE[Count]!=RME_MASK_FULL)
 8757              		.loc 1 4182 31
 8758 0154 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8759 0158 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8760 015c 08201BE5 		ldr	r2, [fp, #-8]
 8761 0160 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8762              		.loc 1 4182 15
 8763 0164 010073E3 		cmn	r3, #1
 8764 0168 0100000A 		beq	.L563
4183:../../Source/Kernel/rme_kernel.c ****             {
4184:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4185:../../Source/Kernel/rme_kernel.c **** 
4186:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_KOT_BMP;
 8765              		.loc 1 4186 24
 8766 016c 0030E0E3 		mvn	r3, #0
 8767 0170 380000EA 		b	.L557
 8768              	.L563:
4180:../../Source/Kernel/rme_kernel.c ****         {
 8769              		.loc 1 4180 46 discriminator 2
 8770 0174 08301BE5 		ldr	r3, [fp, #-8]
 8771 0178 013083E2 		add	r3, r3, #1
 8772 017c 08300BE5 		str	r3, [fp, #-8]
 8773              	.L562:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 229


4180:../../Source/Kernel/rme_kernel.c ****         {
 8774              		.loc 1 4180 37 discriminator 1
 8775 0180 14301BE5 		ldr	r3, [fp, #-20]
 8776 0184 013043E2 		sub	r3, r3, #1
4180:../../Source/Kernel/rme_kernel.c ****         {
 8777              		.loc 1 4180 33 discriminator 1
 8778 0188 08201BE5 		ldr	r2, [fp, #-8]
 8779 018c 030052E1 		cmp	r2, r3
 8780 0190 EFFFFF3A 		bcc	.L564
4187:../../Source/Kernel/rme_kernel.c ****             }
4188:../../Source/Kernel/rme_kernel.c ****             else
4189:../../Source/Kernel/rme_kernel.c ****             {
4190:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4191:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
4192:../../Source/Kernel/rme_kernel.c ****             }
4193:../../Source/Kernel/rme_kernel.c ****         }
4194:../../Source/Kernel/rme_kernel.c **** 
4195:../../Source/Kernel/rme_kernel.c ****         /* Check the end */
4196:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[End]&Mask_End)!=Mask_End)
 8781              		.loc 1 4196 28
 8782 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8783 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8784 019c 14201BE5 		ldr	r2, [fp, #-20]
 8785 01a0 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8786              		.loc 1 4196 33
 8787 01a4 18301BE5 		ldr	r3, [fp, #-24]
 8788 01a8 023003E0 		and	r3, r3, r2
 8789              		.loc 1 4196 11
 8790 01ac 18201BE5 		ldr	r2, [fp, #-24]
 8791 01b0 030052E1 		cmp	r2, r3
 8792 01b4 0100000A 		beq	.L565
4197:../../Source/Kernel/rme_kernel.c ****         {
4198:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4199:../../Source/Kernel/rme_kernel.c **** 
4200:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8793              		.loc 1 4200 20
 8794 01b8 0030E0E3 		mvn	r3, #0
 8795 01bc 250000EA 		b	.L557
 8796              	.L565:
4201:../../Source/Kernel/rme_kernel.c ****         }
4202:../../Source/Kernel/rme_kernel.c ****         else
4203:../../Source/Kernel/rme_kernel.c ****         {
4204:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4205:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4206:../../Source/Kernel/rme_kernel.c ****         }
4207:../../Source/Kernel/rme_kernel.c ****         
4208:../../Source/Kernel/rme_kernel.c ****         /* Erase the start - make it atomic */
4209:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8797              		.loc 1 4209 9
 8798 01c0 0C301BE5 		ldr	r3, [fp, #-12]
 8799 01c4 0321A0E1 		lsl	r2, r3, #2
 8800 01c8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8801 01cc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8802 01d0 032082E0 		add	r2, r2, r3
 8803 01d4 10301BE5 		ldr	r3, [fp, #-16]
 8804 01d8 0330E0E1 		mvn	r3, r3
 8805 01dc 0310A0E1 		mov	r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 230


 8806 01e0 0200A0E1 		mov	r0, r2
 8807 01e4 FEFFFFEB 		bl	_RME_Fetch_And_Single
4210:../../Source/Kernel/rme_kernel.c ****         /* Erase the middle - do not need atomics here */
4211:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8808              		.loc 1 4211 18
 8809 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 8810 01ec 013083E2 		add	r3, r3, #1
 8811 01f0 08300BE5 		str	r3, [fp, #-8]
 8812              		.loc 1 4211 9
 8813 01f4 070000EA 		b	.L566
 8814              	.L567:
4212:../../Source/Kernel/rme_kernel.c ****         {
4213:../../Source/Kernel/rme_kernel.c ****             RME_KOT_VA_BASE[Count]=0U;
 8815              		.loc 1 4213 35
 8816 01f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8817 01fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8818 0200 08201BE5 		ldr	r2, [fp, #-8]
 8819 0204 0010A0E3 		mov	r1, #0
 8820 0208 021183E7 		str	r1, [r3, r2, lsl #2]
4211:../../Source/Kernel/rme_kernel.c ****         {
 8821              		.loc 1 4211 46 discriminator 3
 8822 020c 08301BE5 		ldr	r3, [fp, #-8]
 8823 0210 013083E2 		add	r3, r3, #1
 8824 0214 08300BE5 		str	r3, [fp, #-8]
 8825              	.L566:
4211:../../Source/Kernel/rme_kernel.c ****         {
 8826              		.loc 1 4211 37 discriminator 1
 8827 0218 14301BE5 		ldr	r3, [fp, #-20]
 8828 021c 013043E2 		sub	r3, r3, #1
4211:../../Source/Kernel/rme_kernel.c ****         {
 8829              		.loc 1 4211 33 discriminator 1
 8830 0220 08201BE5 		ldr	r2, [fp, #-8]
 8831 0224 030052E1 		cmp	r2, r3
 8832 0228 F2FFFF3A 		bcc	.L567
4214:../../Source/Kernel/rme_kernel.c ****         }
4215:../../Source/Kernel/rme_kernel.c ****         /* Erase the end - make it atomic */
4216:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[End]),~Mask_End);
 8833              		.loc 1 4216 9
 8834 022c 14301BE5 		ldr	r3, [fp, #-20]
 8835 0230 0321A0E1 		lsl	r2, r3, #2
 8836 0234 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8837 0238 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8838 023c 032082E0 		add	r2, r2, r3
 8839 0240 18301BE5 		ldr	r3, [fp, #-24]
 8840 0244 0330E0E1 		mvn	r3, r3
 8841 0248 0310A0E1 		mov	r1, r3
 8842 024c 0200A0E1 		mov	r0, r2
 8843 0250 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8844              	.L560:
4217:../../Source/Kernel/rme_kernel.c ****     }
4218:../../Source/Kernel/rme_kernel.c **** 
4219:../../Source/Kernel/rme_kernel.c ****     return 0;
 8845              		.loc 1 4219 12
 8846 0254 0030A0E3 		mov	r3, #0
 8847              	.L557:
4220:../../Source/Kernel/rme_kernel.c **** }
 8848              		.loc 1 4220 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 231


 8849 0258 0300A0E1 		mov	r0, r3
 8850 025c 04D04BE2 		sub	sp, fp, #4
 8851              		.cfi_def_cfa 13, 8
 8852              		@ sp needed
 8853 0260 0088BDE8 		pop	{fp, pc}
 8854              		.cfi_endproc
 8855              	.LFE40:
 8857              		.section	.text._RME_Kom_Boot_Crt,"ax",%progbits
 8858              		.align	2
 8859              		.global	_RME_Kom_Boot_Crt
 8860              		.syntax unified
 8861              		.arm
 8863              	_RME_Kom_Boot_Crt:
 8864              	.LFB41:
4221:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Erase ***********************************************/
4222:../../Source/Kernel/rme_kernel.c **** 
4223:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kom_Boot_Crt *************************************************
4224:../../Source/Kernel/rme_kernel.c **** Description : Create boot-time kernel memory capability. Kernel memory allow
4225:../../Source/Kernel/rme_kernel.c ****               you to create specific types of kernel objects in a specific 
4226:../../Source/Kernel/rme_kernel.c ****               kernel memory range. The initial kernel memory capability's
4227:../../Source/Kernel/rme_kernel.c ****               content is supplied by the kernel according to config.
4228:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4229:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
4230:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
4231:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4232:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The capability to the kernel memory.
4233:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4234:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Begin - The begin address of the kernel memory, aligned
4235:../../Source/Kernel/rme_kernel.c ****                                 to kotbl granularity.
4236:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t End - The end address of the kernel memory, aligned to
4237:../../Source/Kernel/rme_kernel.c ****                               kotbl granularity, then -1.
4238:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The operation flags for this kernel memory. Set
4239:../../Source/Kernel/rme_kernel.c ****                                acoording to your needs.
4240:../../Source/Kernel/rme_kernel.c **** Output      : None.
4241:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4242:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4243:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kom_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4244:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4245:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kom,
4246:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Begin,
4247:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t End,
4248:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
4249:../../Source/Kernel/rme_kernel.c **** {
 8865              		.loc 1 4249 1
 8866              		.cfi_startproc
 8867              		@ args = 8, pretend = 0, frame = 40
 8868              		@ frame_needed = 1, uses_anonymous_args = 0
 8869 0000 00482DE9 		push	{fp, lr}
 8870              		.cfi_def_cfa_offset 8
 8871              		.cfi_offset 11, -8
 8872              		.cfi_offset 14, -4
 8873 0004 04B08DE2 		add	fp, sp, #4
 8874              		.cfi_def_cfa 11, 4
 8875 0008 28D04DE2 		sub	sp, sp, #40
 8876 000c 20000BE5 		str	r0, [fp, #-32]
 8877 0010 24100BE5 		str	r1, [fp, #-36]
 8878 0014 28200BE5 		str	r2, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 232


 8879 0018 2C300BE5 		str	r3, [fp, #-44]
4250:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4251:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kom* Kom_Crt;
4252:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
4253:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
4254:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4255:../../Source/Kernel/rme_kernel.c ****     
4256:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
4257:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 8880              		.loc 1 4257 5
 8881 001c 24301BE5 		ldr	r3, [fp, #-36]
 8882 0020 803003E2 		and	r3, r3, #128
 8883 0024 000053E3 		cmp	r3, #0
 8884 0028 1C00001A 		bne	.L569
 8885              		.loc 1 4257 5 is_stmt 0 discriminator 1
 8886 002c 20301BE5 		ldr	r3, [fp, #-32]
 8887 0030 142093E5 		ldr	r2, [r3, #20]
 8888 0034 24301BE5 		ldr	r3, [fp, #-36]
 8889 0038 030052E1 		cmp	r2, r3
 8890 003c 0100008A 		bhi	.L570
 8891              		.loc 1 4257 5 discriminator 3
 8892 0040 0230E0E3 		mvn	r3, #2
 8893              		.loc 1 4257 5
 8894 0044 9F0000EA 		b	.L571
 8895              	.L570:
 8896              		.loc 1 4257 5 discriminator 4
 8897 0048 24301BE5 		ldr	r3, [fp, #-36]
 8898 004c 8322A0E1 		lsl	r2, r3, #5
 8899 0050 20301BE5 		ldr	r3, [fp, #-32]
 8900 0054 0C3093E5 		ldr	r3, [r3, #12]
 8901 0058 033082E0 		add	r3, r2, r3
 8902 005c 08300BE5 		str	r3, [fp, #-8]
 8903 0060 08301BE5 		ldr	r3, [fp, #-8]
 8904 0064 0300A0E1 		mov	r0, r3
 8905 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8906 006c 0C000BE5 		str	r0, [fp, #-12]
 8907              		.loc 1 4257 5 discriminator 1
 8908 0070 0C301BE5 		ldr	r3, [fp, #-12]
 8909 0074 FF3803E2 		and	r3, r3, #16711680
 8910 0078 020853E3 		cmp	r3, #131072
 8911 007c 0100001A 		bne	.L572
 8912              		.loc 1 4257 5 discriminator 5
 8913 0080 0830E0E3 		mvn	r3, #8
 8914              		.loc 1 4257 5
 8915 0084 8F0000EA 		b	.L571
 8916              	.L572:
 8917              		.loc 1 4257 5 discriminator 6
 8918 0088 0C301BE5 		ldr	r3, [fp, #-12]
 8919 008c 233CA0E1 		lsr	r3, r3, #24
 8920 0090 030053E3 		cmp	r3, #3
 8921 0094 3F00000A 		beq	.L573
 8922              		.loc 1 4257 5 discriminator 7
 8923 0098 0130E0E3 		mvn	r3, #1
 8924              		.loc 1 4257 5
 8925 009c 890000EA 		b	.L571
 8926              	.L569:
 8927              		.loc 1 4257 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 233


 8928 00a0 24301BE5 		ldr	r3, [fp, #-36]
 8929 00a4 2324A0E1 		lsr	r2, r3, #8
 8930 00a8 20301BE5 		ldr	r3, [fp, #-32]
 8931 00ac 143093E5 		ldr	r3, [r3, #20]
 8932 00b0 030052E1 		cmp	r2, r3
 8933 00b4 0100003A 		bcc	.L574
 8934              		.loc 1 4257 5 discriminator 8
 8935 00b8 0230E0E3 		mvn	r3, #2
 8936              		.loc 1 4257 5
 8937 00bc 810000EA 		b	.L571
 8938              	.L574:
 8939              		.loc 1 4257 5 discriminator 9
 8940 00c0 24301BE5 		ldr	r3, [fp, #-36]
 8941 00c4 2334A0E1 		lsr	r3, r3, #8
 8942 00c8 8322A0E1 		lsl	r2, r3, #5
 8943 00cc 20301BE5 		ldr	r3, [fp, #-32]
 8944 00d0 0C3093E5 		ldr	r3, [r3, #12]
 8945 00d4 033082E0 		add	r3, r2, r3
 8946 00d8 08300BE5 		str	r3, [fp, #-8]
 8947 00dc 08301BE5 		ldr	r3, [fp, #-8]
 8948 00e0 0300A0E1 		mov	r0, r3
 8949 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8950 00e8 0C000BE5 		str	r0, [fp, #-12]
 8951              		.loc 1 4257 5 discriminator 1
 8952 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 8953 00f0 FF3803E2 		and	r3, r3, #16711680
 8954 00f4 020853E3 		cmp	r3, #131072
 8955 00f8 0100001A 		bne	.L575
 8956              		.loc 1 4257 5 discriminator 10
 8957 00fc 0830E0E3 		mvn	r3, #8
 8958              		.loc 1 4257 5
 8959 0100 700000EA 		b	.L571
 8960              	.L575:
 8961              		.loc 1 4257 5 discriminator 11
 8962 0104 0C301BE5 		ldr	r3, [fp, #-12]
 8963 0108 233CA0E1 		lsr	r3, r3, #24
 8964 010c 030053E3 		cmp	r3, #3
 8965 0110 0100000A 		beq	.L576
 8966              		.loc 1 4257 5 discriminator 12
 8967 0114 0130E0E3 		mvn	r3, #1
 8968              		.loc 1 4257 5
 8969 0118 6A0000EA 		b	.L571
 8970              	.L576:
 8971              		.loc 1 4257 5 discriminator 13
 8972 011c 24301BE5 		ldr	r3, [fp, #-36]
 8973 0120 7F2003E2 		and	r2, r3, #127
 8974 0124 08301BE5 		ldr	r3, [fp, #-8]
 8975 0128 143093E5 		ldr	r3, [r3, #20]
 8976 012c 030052E1 		cmp	r2, r3
 8977 0130 0100003A 		bcc	.L577
 8978              		.loc 1 4257 5 discriminator 14
 8979 0134 0230E0E3 		mvn	r3, #2
 8980              		.loc 1 4257 5
 8981 0138 620000EA 		b	.L571
 8982              	.L577:
 8983              		.loc 1 4257 5 discriminator 15
 8984 013c 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 234


 8985 0140 7F3003E2 		and	r3, r3, #127
 8986 0144 8322A0E1 		lsl	r2, r3, #5
 8987 0148 08301BE5 		ldr	r3, [fp, #-8]
 8988 014c 0C3093E5 		ldr	r3, [r3, #12]
 8989 0150 033082E0 		add	r3, r2, r3
 8990 0154 08300BE5 		str	r3, [fp, #-8]
 8991 0158 08301BE5 		ldr	r3, [fp, #-8]
 8992 015c 0300A0E1 		mov	r0, r3
 8993 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8994 0164 0C000BE5 		str	r0, [fp, #-12]
 8995              		.loc 1 4257 5 discriminator 1
 8996 0168 0C301BE5 		ldr	r3, [fp, #-12]
 8997 016c FF3803E2 		and	r3, r3, #16711680
 8998 0170 020853E3 		cmp	r3, #131072
 8999 0174 0100001A 		bne	.L578
 9000              		.loc 1 4257 5 discriminator 16
 9001 0178 0830E0E3 		mvn	r3, #8
 9002              		.loc 1 4257 5
 9003 017c 510000EA 		b	.L571
 9004              	.L578:
 9005              		.loc 1 4257 5 discriminator 17
 9006 0180 0C301BE5 		ldr	r3, [fp, #-12]
 9007 0184 233CA0E1 		lsr	r3, r3, #24
 9008 0188 030053E3 		cmp	r3, #3
 9009 018c 0100000A 		beq	.L573
 9010              		.loc 1 4257 5 discriminator 18
 9011 0190 0130E0E3 		mvn	r3, #1
 9012              		.loc 1 4257 5
 9013 0194 4B0000EA 		b	.L571
 9014              	.L573:
4258:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4259:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4260:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 9015              		.loc 1 4260 5 is_stmt 1
 9016 0198 08301BE5 		ldr	r3, [fp, #-8]
 9017 019c 083093E5 		ldr	r3, [r3, #8]
 9018 01a0 013003E2 		and	r3, r3, #1
 9019 01a4 000053E3 		cmp	r3, #0
 9020 01a8 0100001A 		bne	.L579
 9021              		.loc 1 4260 5 is_stmt 0 discriminator 1
 9022 01ac 0630E0E3 		mvn	r3, #6
 9023              		.loc 1 4260 5
 9024 01b0 440000EA 		b	.L571
 9025              	.L579:
4261:../../Source/Kernel/rme_kernel.c ****     
4262:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4263:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kom,struct RME_Cap_Kom*,Kom_Crt);
 9026              		.loc 1 4263 5 is_stmt 1
 9027 01b4 08301BE5 		ldr	r3, [fp, #-8]
 9028 01b8 142093E5 		ldr	r2, [r3, #20]
 9029 01bc 28301BE5 		ldr	r3, [fp, #-40]
 9030 01c0 030052E1 		cmp	r2, r3
 9031 01c4 0100008A 		bhi	.L580
 9032              		.loc 1 4263 5 is_stmt 0 discriminator 1
 9033 01c8 0230E0E3 		mvn	r3, #2
 9034              		.loc 1 4263 5
 9035 01cc 3D0000EA 		b	.L571
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 235


 9036              	.L580:
 9037              		.loc 1 4263 5 discriminator 2
 9038 01d0 28301BE5 		ldr	r3, [fp, #-40]
 9039 01d4 8322A0E1 		lsl	r2, r3, #5
 9040 01d8 08301BE5 		ldr	r3, [fp, #-8]
 9041 01dc 0C3093E5 		ldr	r3, [r3, #12]
 9042 01e0 033082E0 		add	r3, r2, r3
 9043 01e4 10300BE5 		str	r3, [fp, #-16]
4264:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4265:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kom_Crt);
 9044              		.loc 1 4265 5 is_stmt 1
 9045 01e8 10301BE5 		ldr	r3, [fp, #-16]
 9046 01ec 0128A0E3 		mov	r2, #65536
 9047 01f0 0010A0E3 		mov	r1, #0
 9048 01f4 0300A0E1 		mov	r0, r3
 9049 01f8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 9050 01fc 0030A0E1 		mov	r3, r0
 9051              		.loc 1 4265 5 is_stmt 0 discriminator 1
 9052 0200 000053E3 		cmp	r3, #0
 9053 0204 0100001A 		bne	.L581
 9054 0208 0430E0E3 		mvn	r3, #4
 9055              		.loc 1 4265 5
 9056 020c 2D0000EA 		b	.L571
 9057              	.L581:
 9058              		.loc 1 4265 5 discriminator 2
 9059 0210 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 9060 0214 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 9061 0218 002093E5 		ldr	r2, [r3]
 9062 021c 10301BE5 		ldr	r3, [fp, #-16]
 9063 0220 102083E5 		str	r2, [r3, #16]
4266:../../Source/Kernel/rme_kernel.c ****     
4267:../../Source/Kernel/rme_kernel.c ****     /* Align addresses */
4268:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
4269:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,RME_KOM_SLOT_ORDER);
4270:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Start,RME_KOM_SLOT_ORDER);
4271:../../Source/Kernel/rme_kernel.c **** #else
4272:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,6U);
 9064              		.loc 1 4272 13 is_stmt 1
 9065 0224 04309BE5 		ldr	r3, [fp, #4]
 9066 0228 013083E2 		add	r3, r3, #1
 9067              		.loc 1 4272 12
 9068 022c 3F30C3E3 		bic	r3, r3, #63
 9069 0230 14300BE5 		str	r3, [fp, #-20]
4273:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Begin,6U);
 9070              		.loc 1 4273 15
 9071 0234 2C301BE5 		ldr	r3, [fp, #-44]
 9072 0238 3F3083E2 		add	r3, r3, #63
 9073              		.loc 1 4273 14
 9074 023c 3F30C3E3 		bic	r3, r3, #63
 9075 0240 18300BE5 		str	r3, [fp, #-24]
4274:../../Source/Kernel/rme_kernel.c **** #endif
4275:../../Source/Kernel/rme_kernel.c **** 
4276:../../Source/Kernel/rme_kernel.c ****     /* Must at least allow creation of something */
4277:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Flag!=0U);
 9076              		.loc 1 4277 5
 9077 0244 08309BE5 		ldr	r3, [fp, #8]
 9078 0248 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 236


 9079 024c 0800001A 		bne	.L582
 9080              		.loc 1 4277 5 is_stmt 0 discriminator 1
 9081 0250 003000E3 		movw	r3, #:lower16:.LC6
 9082 0254 003040E3 		movt	r3, #:upper16:.LC6
 9083 0258 002000E3 		movw	r2, #:lower16:.LC7
 9084 025c 002040E3 		movt	r2, #:upper16:.LC7
 9085 0260 B51001E3 		movw	r1, #4277
 9086 0264 000000E3 		movw	r0, #:lower16:.LC8
 9087 0268 000040E3 		movt	r0, #:upper16:.LC8
 9088 026c FEFFFFEB 		bl	RME_Log
 9089              	.L583:
 9090              		.loc 1 4277 5
 9091 0270 FEFFFFEA 		b	.L583
 9092              	.L582:
4278:../../Source/Kernel/rme_kernel.c **** 
4279:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4280:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Root_Ref=1U;
 9093              		.loc 1 4280 27 is_stmt 1
 9094 0274 10301BE5 		ldr	r3, [fp, #-16]
 9095 0278 0120A0E3 		mov	r2, #1
 9096 027c 042083E5 		str	r2, [r3, #4]
4281:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Object=0U;
 9097              		.loc 1 4281 25
 9098 0280 10301BE5 		ldr	r3, [fp, #-16]
 9099 0284 0020A0E3 		mov	r2, #0
 9100 0288 0C2083E5 		str	r2, [r3, #12]
4282:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Flag=Flag;
 9101              		.loc 1 4282 23
 9102 028c 10301BE5 		ldr	r3, [fp, #-16]
 9103 0290 08209BE5 		ldr	r2, [fp, #8]
 9104 0294 082083E5 		str	r2, [r3, #8]
4283:../../Source/Kernel/rme_kernel.c ****     
4284:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4285:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Begin=Kom_Begin;
 9105              		.loc 1 4285 19
 9106 0298 10301BE5 		ldr	r3, [fp, #-16]
 9107 029c 18201BE5 		ldr	r2, [fp, #-24]
 9108 02a0 142083E5 		str	r2, [r3, #20]
4286:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->End=Kom_End-1U;
 9109              		.loc 1 4286 25
 9110 02a4 14301BE5 		ldr	r3, [fp, #-20]
 9111 02a8 012043E2 		sub	r2, r3, #1
 9112              		.loc 1 4286 17
 9113 02ac 10301BE5 		ldr	r3, [fp, #-16]
 9114 02b0 182083E5 		str	r2, [r3, #24]
4287:../../Source/Kernel/rme_kernel.c **** 
4288:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4289:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kom_Crt->Head.Type_Stat),
 9115              		.loc 1 4289 5
 9116 02b4 10301BE5 		ldr	r3, [fp, #-16]
 9117 02b8 0214A0E3 		mov	r1, #33554432
 9118 02bc 0300A0E1 		mov	r0, r3
 9119 02c0 FEFFFFEB 		bl	__RME_A7A_Write_Release
4290:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KOM,
4291:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4292:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4293:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 237


4294:../../Source/Kernel/rme_kernel.c ****     return 0;
 9120              		.loc 1 4294 12
 9121 02c4 0030A0E3 		mov	r3, #0
 9122              	.L571:
4295:../../Source/Kernel/rme_kernel.c **** }
 9123              		.loc 1 4295 1
 9124 02c8 0300A0E1 		mov	r0, r3
 9125 02cc 04D04BE2 		sub	sp, fp, #4
 9126              		.cfi_def_cfa 13, 8
 9127              		@ sp needed
 9128 02d0 0088BDE8 		pop	{fp, pc}
 9129              		.cfi_endproc
 9130              	.LFE41:
 9132              		.section	.text._RME_CPU_Local_Init,"ax",%progbits
 9133              		.align	2
 9134              		.global	_RME_CPU_Local_Init
 9135              		.syntax unified
 9136              		.arm
 9138              	_RME_CPU_Local_Init:
 9139              	.LFB42:
4296:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kom_Boot_Crt ********************************************/
4297:../../Source/Kernel/rme_kernel.c **** 
4298:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_CPU_Local_Init ***********************************************
4299:../../Source/Kernel/rme_kernel.c **** Description : Initialize the CPU-local data structure.
4300:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The pointer to the per-CPU values.
4301:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The CPUID of the CPU.
4302:../../Source/Kernel/rme_kernel.c **** Output      : None.
4303:../../Source/Kernel/rme_kernel.c **** Return      : None.
4304:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4305:../../Source/Kernel/rme_kernel.c **** void _RME_CPU_Local_Init(struct RME_CPU_Local* Local,
4306:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t CPUID)
4307:../../Source/Kernel/rme_kernel.c **** {
 9140              		.loc 1 4307 1
 9141              		.cfi_startproc
 9142              		@ args = 0, pretend = 0, frame = 16
 9143              		@ frame_needed = 1, uses_anonymous_args = 0
 9144 0000 00482DE9 		push	{fp, lr}
 9145              		.cfi_def_cfa_offset 8
 9146              		.cfi_offset 11, -8
 9147              		.cfi_offset 14, -4
 9148 0004 04B08DE2 		add	fp, sp, #4
 9149              		.cfi_def_cfa 11, 4
 9150 0008 10D04DE2 		sub	sp, sp, #16
 9151 000c 10000BE5 		str	r0, [fp, #-16]
 9152 0010 14100BE5 		str	r1, [fp, #-20]
4308:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio_Cnt;
4309:../../Source/Kernel/rme_kernel.c ****     
4310:../../Source/Kernel/rme_kernel.c ****     Local->CPUID=CPUID;
 9153              		.loc 1 4310 17
 9154 0014 10301BE5 		ldr	r3, [fp, #-16]
 9155 0018 14201BE5 		ldr	r2, [fp, #-20]
 9156 001c 002083E5 		str	r2, [r3]
4311:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=RME_NULL;
 9157              		.loc 1 4311 19
 9158 0020 10301BE5 		ldr	r3, [fp, #-16]
 9159 0024 0020A0E3 		mov	r2, #0
 9160 0028 042083E5 		str	r2, [r3, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 238


4312:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Vct=RME_NULL;
 9161              		.loc 1 4312 19
 9162 002c 10301BE5 		ldr	r3, [fp, #-16]
 9163 0030 0020A0E3 		mov	r2, #0
 9164 0034 0C2083E5 		str	r2, [r3, #12]
4313:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Tim=RME_NULL;
 9165              		.loc 1 4313 19
 9166 0038 10301BE5 		ldr	r3, [fp, #-16]
 9167 003c 0020A0E3 		mov	r2, #0
 9168 0040 082083E5 		str	r2, [r3, #8]
4314:../../Source/Kernel/rme_kernel.c ****     
4315:../../Source/Kernel/rme_kernel.c ****     /* Initialize the run-queue and bitmap */
4316:../../Source/Kernel/rme_kernel.c ****     for(Prio_Cnt=0U;Prio_Cnt<RME_PREEMPT_PRIO_NUM;Prio_Cnt++)
 9169              		.loc 1 4316 17
 9170 0044 0030A0E3 		mov	r3, #0
 9171 0048 08300BE5 		str	r3, [fp, #-8]
 9172              		.loc 1 4316 5
 9173 004c 100000EA 		b	.L585
 9174              	.L586:
4317:../../Source/Kernel/rme_kernel.c ****     {
4318:../../Source/Kernel/rme_kernel.c ****         Local->Run.Bitmap[Prio_Cnt>>RME_WORD_ORDER]=0U;
 9175              		.loc 1 4318 35
 9176 0050 08301BE5 		ldr	r3, [fp, #-8]
 9177 0054 A322A0E1 		lsr	r2, r3, #5
 9178              		.loc 1 4318 52
 9179 0058 10301BE5 		ldr	r3, [fp, #-16]
 9180 005c 042082E2 		add	r2, r2, #4
 9181 0060 0010A0E3 		mov	r1, #0
 9182 0064 021183E7 		str	r1, [r3, r2, lsl #2]
4319:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Local->Run.List[Prio_Cnt]));
 9183              		.loc 1 4319 9
 9184 0068 08301BE5 		ldr	r3, [fp, #-8]
 9185 006c 023083E2 		add	r3, r3, #2
 9186 0070 8331A0E1 		lsl	r3, r3, #3
 9187 0074 10201BE5 		ldr	r2, [fp, #-16]
 9188 0078 033082E0 		add	r3, r2, r3
 9189 007c 043083E2 		add	r3, r3, #4
 9190 0080 0300A0E1 		mov	r0, r3
 9191 0084 FEFFFFEB 		bl	_RME_List_Crt
4316:../../Source/Kernel/rme_kernel.c ****     {
 9192              		.loc 1 4316 59 discriminator 3
 9193 0088 08301BE5 		ldr	r3, [fp, #-8]
 9194 008c 013083E2 		add	r3, r3, #1
 9195 0090 08300BE5 		str	r3, [fp, #-8]
 9196              	.L585:
4316:../../Source/Kernel/rme_kernel.c ****     {
 9197              		.loc 1 4316 29 discriminator 1
 9198 0094 08301BE5 		ldr	r3, [fp, #-8]
 9199 0098 1F0053E3 		cmp	r3, #31
 9200 009c EBFFFF9A 		bls	.L586
4320:../../Source/Kernel/rme_kernel.c ****     }
4321:../../Source/Kernel/rme_kernel.c **** }
 9201              		.loc 1 4321 1
 9202 00a0 00F020E3 		nop
 9203 00a4 00F020E3 		nop
 9204 00a8 04D04BE2 		sub	sp, fp, #4
 9205              		.cfi_def_cfa 13, 8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 239


 9206              		@ sp needed
 9207 00ac 0088BDE8 		pop	{fp, pc}
 9208              		.cfi_endproc
 9209              	.LFE42:
 9211              		.section	.rodata
 9212 0075 000000   		.align	2
 9213              	.LC9:
 9214 0078 41747465 		.ascii	"Attempted to kill init thread.\000"
 9214      6D707465 
 9214      6420746F 
 9214      206B696C 
 9214      6C20696E 
 9215              		.section	.text._RME_Thd_Fatal,"ax",%progbits
 9216              		.align	2
 9217              		.global	_RME_Thd_Fatal
 9218              		.syntax unified
 9219              		.arm
 9221              	_RME_Thd_Fatal:
 9222              	.LFB43:
4322:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_CPU_Local_Init ******************************************/
4323:../../Source/Kernel/rme_kernel.c **** 
4324:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Fatal ***************************************************
4325:../../Source/Kernel/rme_kernel.c **** Description : The fatal fault handler of RME. This handler will be called by
4326:../../Source/Kernel/rme_kernel.c ****               the ISR that handles the exceptions. This indicates that a fatal
4327:../../Source/Kernel/rme_kernel.c ****               exception has happened and we need to see if this thread is in a
4328:../../Source/Kernel/rme_kernel.c ****               synchronous invocation. If yes, we stop the invocation, and
4329:../../Source/Kernel/rme_kernel.c ****               possibly return a fault value to the old register set. If not, we
4330:../../Source/Kernel/rme_kernel.c ****               just kill the thread. If the thread is killed, a notification
4331:../../Source/Kernel/rme_kernel.c ****               will be sent to its scheduler. An Exec_Set is required to clear
4332:../../Source/Kernel/rme_kernel.c ****               the exception pending status of the thread.
4333:../../Source/Kernel/rme_kernel.c ****               Some processors may raise some exceptions that are difficult to
4334:../../Source/Kernel/rme_kernel.c ****               attribute to a particular thread, either due to the fact that
4335:../../Source/Kernel/rme_kernel.c ****               they are asynchronous, or they are derived from exception entry.
4336:../../Source/Kernel/rme_kernel.c ****               A good example is ARMv7-M: its autostacking feature derives fault
4337:../../Source/Kernel/rme_kernel.c ****               from exception entry, and some of its bus faults are asynchronous
4338:../../Source/Kernel/rme_kernel.c ****               and can cross context boundaries. RME requires that all these
4339:../../Source/Kernel/rme_kernel.c ****               exceptions be dropped rather than handled; or there will be 
4340:../../Source/Kernel/rme_kernel.c ****               integrity and availability compromises.
4341:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4342:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
4343:../../Source/Kernel/rme_kernel.c **** Return      : None.
4344:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4345:../../Source/Kernel/rme_kernel.c **** void _RME_Thd_Fatal(struct RME_Reg_Struct* Reg)
4346:../../Source/Kernel/rme_kernel.c **** {
 9223              		.loc 1 4346 1
 9224              		.cfi_startproc
 9225              		@ args = 0, pretend = 0, frame = 16
 9226              		@ frame_needed = 1, uses_anonymous_args = 0
 9227 0000 00482DE9 		push	{fp, lr}
 9228              		.cfi_def_cfa_offset 8
 9229              		.cfi_offset 11, -8
 9230              		.cfi_offset 14, -4
 9231 0004 04B08DE2 		add	fp, sp, #4
 9232              		.cfi_def_cfa 11, 4
 9233 0008 10D04DE2 		sub	sp, sp, #16
 9234 000c 10000BE5 		str	r0, [fp, #-16]
4347:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 240


4348:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
4349:../../Source/Kernel/rme_kernel.c ****     
4350:../../Source/Kernel/rme_kernel.c ****     /* Attempt to return from the invocation, from fault */
4351:../../Source/Kernel/rme_kernel.c ****     if(_RME_Inv_Ret(Reg,0U,1U)!=0)
 9235              		.loc 1 4351 8
 9236 0010 0120A0E3 		mov	r2, #1
 9237 0014 0010A0E3 		mov	r1, #0
 9238 0018 10001BE5 		ldr	r0, [fp, #-16]
 9239 001c FEFFFFEB 		bl	_RME_Inv_Ret
 9240 0020 0030A0E1 		mov	r3, r0
 9241              		.loc 1 4351 7 discriminator 1
 9242 0024 000053E3 		cmp	r3, #0
 9243 0028 2C00000A 		beq	.L593
4352:../../Source/Kernel/rme_kernel.c ****     {
4353:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4354:../../Source/Kernel/rme_kernel.c **** 
4355:../../Source/Kernel/rme_kernel.c ****         /* Return failure - report the exception */
4356:../../Source/Kernel/rme_kernel.c ****         Local=RME_CPU_LOCAL();
 9244              		.loc 1 4356 14
 9245 002c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 9246 0030 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 9247 0034 08300BE5 		str	r3, [fp, #-8]
4357:../../Source/Kernel/rme_kernel.c ****         Thd_Cur=Local->Thd_Cur;
 9248              		.loc 1 4357 16
 9249 0038 08301BE5 		ldr	r3, [fp, #-8]
 9250 003c 043093E5 		ldr	r3, [r3, #4]
 9251 0040 0C300BE5 		str	r3, [fp, #-12]
4358:../../Source/Kernel/rme_kernel.c ****         
4359:../../Source/Kernel/rme_kernel.c ****         /* Init thread shall never have exceptions */
4360:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 9252              		.loc 1 4360 26
 9253 0044 0C301BE5 		ldr	r3, [fp, #-12]
 9254 0048 183093E5 		ldr	r3, [r3, #24]
 9255              		.loc 1 4360 11
 9256 004c 060173E3 		cmn	r3, #-2147483647
 9257 0050 0B00001A 		bne	.L589
4361:../../Source/Kernel/rme_kernel.c ****         {
4362:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4363:../../Source/Kernel/rme_kernel.c ****             
4364:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("Attempted to kill init thread.");
 9258              		.loc 1 4364 13
 9259 0054 000000E3 		movw	r0, #:lower16:.LC9
 9260 0058 000040E3 		movt	r0, #:upper16:.LC9
 9261 005c FEFFFFEB 		bl	RME_Str_Print
4365:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(0U);
 9262              		.loc 1 4365 13 discriminator 1
 9263 0060 003000E3 		movw	r3, #:lower16:.LC6
 9264 0064 003040E3 		movt	r3, #:upper16:.LC6
 9265 0068 002000E3 		movw	r2, #:lower16:.LC7
 9266 006c 002040E3 		movt	r2, #:upper16:.LC7
 9267 0070 0D1101E3 		movw	r1, #4365
 9268 0074 000000E3 		movw	r0, #:lower16:.LC8
 9269 0078 000040E3 		movt	r0, #:upper16:.LC8
 9270 007c FEFFFFEB 		bl	RME_Log
 9271              	.L590:
 9272              		.loc 1 4365 13 is_stmt 0
 9273 0080 FEFFFFEA 		b	.L590
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 241


 9274              	.L589:
4366:../../Source/Kernel/rme_kernel.c ****         }
4367:../../Source/Kernel/rme_kernel.c ****         else
4368:../../Source/Kernel/rme_kernel.c ****         {
4369:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4370:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4371:../../Source/Kernel/rme_kernel.c ****         }
4372:../../Source/Kernel/rme_kernel.c ****         
4373:../../Source/Kernel/rme_kernel.c ****         /* We must be running at this point to trigger a synchronous exception */
4374:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 9275              		.loc 1 4374 9 is_stmt 1
 9276 0084 0C301BE5 		ldr	r3, [fp, #-12]
 9277 0088 1C3093E5 		ldr	r3, [r3, #28]
 9278 008c 000053E3 		cmp	r3, #0
 9279 0090 0800000A 		beq	.L591
 9280              		.loc 1 4374 9 is_stmt 0 discriminator 1
 9281 0094 003000E3 		movw	r3, #:lower16:.LC6
 9282 0098 003040E3 		movt	r3, #:upper16:.LC6
 9283 009c 002000E3 		movw	r2, #:lower16:.LC7
 9284 00a0 002040E3 		movt	r2, #:upper16:.LC7
 9285 00a4 161101E3 		movw	r1, #4374
 9286 00a8 000000E3 		movw	r0, #:lower16:.LC8
 9287 00ac 000040E3 		movt	r0, #:upper16:.LC8
 9288 00b0 FEFFFFEB 		bl	RME_Log
 9289              	.L592:
 9290              		.loc 1 4374 9
 9291 00b4 FEFFFFEA 		b	.L592
 9292              	.L591:
4375:../../Source/Kernel/rme_kernel.c ****         
4376:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue */
4377:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thd_Cur);
 9293              		.loc 1 4377 9 is_stmt 1
 9294 00b8 0C001BE5 		ldr	r0, [fp, #-12]
 9295 00bc FEFFFFEB 		bl	_RME_Run_Del
4378:../../Source/Kernel/rme_kernel.c ****         
4379:../../Source/Kernel/rme_kernel.c ****         /* Exception pending and notify parent */
4380:../../Source/Kernel/rme_kernel.c ****         Thd_Cur->Sched.State=RME_THD_EXCPEND;
 9296              		.loc 1 4380 29
 9297 00c0 0C301BE5 		ldr	r3, [fp, #-12]
 9298 00c4 0320A0E3 		mov	r2, #3
 9299 00c8 1C2083E5 		str	r2, [r3, #28]
4381:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Notif(Thd_Cur);
 9300              		.loc 1 4381 9
 9301 00cc 0C001BE5 		ldr	r0, [fp, #-12]
 9302 00d0 FEFFFFEB 		bl	_RME_Run_Notif
4382:../../Source/Kernel/rme_kernel.c ****         
4383:../../Source/Kernel/rme_kernel.c ****         /* All kernel send complete, now pick the highest priority thread to run */
4384:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 9303              		.loc 1 4384 9
 9304 00d4 08101BE5 		ldr	r1, [fp, #-8]
 9305 00d8 10001BE5 		ldr	r0, [fp, #-16]
 9306 00dc FEFFFFEB 		bl	_RME_Kern_High
 9307              	.L593:
4385:../../Source/Kernel/rme_kernel.c ****     }
4386:../../Source/Kernel/rme_kernel.c ****     else
4387:../../Source/Kernel/rme_kernel.c ****     {
4388:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 242


4389:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4390:../../Source/Kernel/rme_kernel.c ****     }
4391:../../Source/Kernel/rme_kernel.c **** }
 9308              		.loc 1 4391 1
 9309 00e0 00F020E3 		nop
 9310 00e4 04D04BE2 		sub	sp, fp, #4
 9311              		.cfi_def_cfa 13, 8
 9312              		@ sp needed
 9313 00e8 0088BDE8 		pop	{fp, pc}
 9314              		.cfi_endproc
 9315              	.LFE43:
 9317              		.section	.text._RME_Run_Ins,"ax",%progbits
 9318              		.align	2
 9319              		.syntax unified
 9320              		.arm
 9322              	_RME_Run_Ins:
 9323              	.LFB44:
4392:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Fatal ***********************************************/
4393:../../Source/Kernel/rme_kernel.c **** 
4394:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Ins ******************************************************
4395:../../Source/Kernel/rme_kernel.c **** Description : Insert a thread into the runqueue. In this function we do not
4396:../../Source/Kernel/rme_kernel.c ****               check if the thread is on the current core, or is runnable,
4397:../../Source/Kernel/rme_kernel.c ****               because it should have been checked by someone else.
4398:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to insert.
4399:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The cpu to consult.
4400:../../Source/Kernel/rme_kernel.c **** Output      : None.
4401:../../Source/Kernel/rme_kernel.c **** Return      : None.
4402:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4403:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Ins(struct RME_Thd_Struct* Thd)
4404:../../Source/Kernel/rme_kernel.c **** {
 9324              		.loc 1 4404 1
 9325              		.cfi_startproc
 9326              		@ args = 0, pretend = 0, frame = 16
 9327              		@ frame_needed = 1, uses_anonymous_args = 0
 9328 0000 00482DE9 		push	{fp, lr}
 9329              		.cfi_def_cfa_offset 8
 9330              		.cfi_offset 11, -8
 9331              		.cfi_offset 14, -4
 9332 0004 04B08DE2 		add	fp, sp, #4
 9333              		.cfi_def_cfa 11, 4
 9334 0008 10D04DE2 		sub	sp, sp, #16
 9335 000c 10000BE5 		str	r0, [fp, #-16]
4405:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4406:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4407:../../Source/Kernel/rme_kernel.c ****     
4408:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9336              		.loc 1 4408 9
 9337 0010 10301BE5 		ldr	r3, [fp, #-16]
 9338 0014 203093E5 		ldr	r3, [r3, #32]
 9339 0018 08300BE5 		str	r3, [fp, #-8]
4409:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9340              		.loc 1 4409 10
 9341 001c 10301BE5 		ldr	r3, [fp, #-16]
 9342 0020 143093E5 		ldr	r3, [r3, #20]
 9343 0024 0C300BE5 		str	r3, [fp, #-12]
4410:../../Source/Kernel/rme_kernel.c ****     
4411:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 243


4412:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9344              		.loc 1 4412 5
 9345 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9346 002c 010073E3 		cmn	r3, #1
 9347 0030 0800001A 		bne	.L595
 9348              		.loc 1 4412 5 is_stmt 0 discriminator 1
 9349 0034 003000E3 		movw	r3, #:lower16:.LC6
 9350 0038 003040E3 		movt	r3, #:upper16:.LC6
 9351 003c 002000E3 		movw	r2, #:lower16:.LC7
 9352 0040 002040E3 		movt	r2, #:upper16:.LC7
 9353 0044 3C1101E3 		movw	r1, #4412
 9354 0048 000000E3 		movw	r0, #:lower16:.LC8
 9355 004c 000040E3 		movt	r0, #:upper16:.LC8
 9356 0050 FEFFFFEB 		bl	RME_Log
 9357              	.L596:
 9358              		.loc 1 4412 5
 9359 0054 FEFFFFEA 		b	.L596
 9360              	.L595:
4413:../../Source/Kernel/rme_kernel.c ****     
4414:../../Source/Kernel/rme_kernel.c ****     /* Insert this thread into the runqueue */
4415:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Thd->Sched.Run),
 9361              		.loc 1 4415 5 is_stmt 1
 9362 0058 10001BE5 		ldr	r0, [fp, #-16]
 9363 005c 0C201BE5 		ldr	r2, [fp, #-12]
 9364 0060 08301BE5 		ldr	r3, [fp, #-8]
 9365 0064 023083E2 		add	r3, r3, #2
 9366 0068 8331A0E1 		lsl	r3, r3, #3
 9367 006c 033082E0 		add	r3, r2, r3
 9368 0070 081093E5 		ldr	r1, [r3, #8]
 9369 0074 08301BE5 		ldr	r3, [fp, #-8]
 9370 0078 023083E2 		add	r3, r3, #2
 9371 007c 8331A0E1 		lsl	r3, r3, #3
 9372 0080 0C201BE5 		ldr	r2, [fp, #-12]
 9373 0084 033082E0 		add	r3, r2, r3
 9374 0088 043083E2 		add	r3, r3, #4
 9375 008c 0320A0E1 		mov	r2, r3
 9376 0090 FEFFFFEB 		bl	_RME_List_Ins
4416:../../Source/Kernel/rme_kernel.c ****                   Local->Run.List[Prio].Prev,
4417:../../Source/Kernel/rme_kernel.c ****                   &(Local->Run.List[Prio]));
4418:../../Source/Kernel/rme_kernel.c ****     
4419:../../Source/Kernel/rme_kernel.c ****     /* Set the bit in the bitmap */
4420:../../Source/Kernel/rme_kernel.c ****     RME_BITMAP_SET(Local->Run.Bitmap,Prio);
 9377              		.loc 1 4420 5
 9378 0094 08301BE5 		ldr	r3, [fp, #-8]
 9379 0098 A322A0E1 		lsr	r2, r3, #5
 9380 009c 0C301BE5 		ldr	r3, [fp, #-12]
 9381 00a0 042082E2 		add	r2, r2, #4
 9382 00a4 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9383 00a8 08301BE5 		ldr	r3, [fp, #-8]
 9384 00ac 1F3003E2 		and	r3, r3, #31
 9385 00b0 0120A0E3 		mov	r2, #1
 9386 00b4 1233A0E1 		lsl	r3, r2, r3
 9387 00b8 08201BE5 		ldr	r2, [fp, #-8]
 9388 00bc A222A0E1 		lsr	r2, r2, #5
 9389 00c0 031081E1 		orr	r1, r1, r3
 9390 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 9391 00c8 042082E2 		add	r2, r2, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 244


 9392 00cc 021183E7 		str	r1, [r3, r2, lsl #2]
4421:../../Source/Kernel/rme_kernel.c **** }
 9393              		.loc 1 4421 1
 9394 00d0 00F020E3 		nop
 9395 00d4 04D04BE2 		sub	sp, fp, #4
 9396              		.cfi_def_cfa 13, 8
 9397              		@ sp needed
 9398 00d8 0088BDE8 		pop	{fp, pc}
 9399              		.cfi_endproc
 9400              	.LFE44:
 9402              		.section	.text._RME_Run_Del,"ax",%progbits
 9403              		.align	2
 9404              		.syntax unified
 9405              		.arm
 9407              	_RME_Run_Del:
 9408              	.LFB45:
4422:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Ins *************************************************/
4423:../../Source/Kernel/rme_kernel.c **** 
4424:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Del ******************************************************
4425:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread from the runqueue.
4426:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to delete.
4427:../../Source/Kernel/rme_kernel.c **** Output      : None.
4428:../../Source/Kernel/rme_kernel.c **** Return      : None.
4429:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4430:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Del(struct RME_Thd_Struct* Thd)
4431:../../Source/Kernel/rme_kernel.c **** {
 9409              		.loc 1 4431 1
 9410              		.cfi_startproc
 9411              		@ args = 0, pretend = 0, frame = 16
 9412              		@ frame_needed = 1, uses_anonymous_args = 0
 9413 0000 00482DE9 		push	{fp, lr}
 9414              		.cfi_def_cfa_offset 8
 9415              		.cfi_offset 11, -8
 9416              		.cfi_offset 14, -4
 9417 0004 04B08DE2 		add	fp, sp, #4
 9418              		.cfi_def_cfa 11, 4
 9419 0008 10D04DE2 		sub	sp, sp, #16
 9420 000c 10000BE5 		str	r0, [fp, #-16]
4432:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4433:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4434:../../Source/Kernel/rme_kernel.c ****     
4435:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9421              		.loc 1 4435 9
 9422 0010 10301BE5 		ldr	r3, [fp, #-16]
 9423 0014 203093E5 		ldr	r3, [r3, #32]
 9424 0018 08300BE5 		str	r3, [fp, #-8]
4436:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9425              		.loc 1 4436 10
 9426 001c 10301BE5 		ldr	r3, [fp, #-16]
 9427 0020 143093E5 		ldr	r3, [r3, #20]
 9428 0024 0C300BE5 		str	r3, [fp, #-12]
4437:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4438:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9429              		.loc 1 4438 5
 9430 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9431 002c 010073E3 		cmn	r3, #1
 9432 0030 0800001A 		bne	.L598
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 245


 9433              		.loc 1 4438 5 is_stmt 0 discriminator 1
 9434 0034 003000E3 		movw	r3, #:lower16:.LC6
 9435 0038 003040E3 		movt	r3, #:upper16:.LC6
 9436 003c 002000E3 		movw	r2, #:lower16:.LC7
 9437 0040 002040E3 		movt	r2, #:upper16:.LC7
 9438 0044 561101E3 		movw	r1, #4438
 9439 0048 000000E3 		movw	r0, #:lower16:.LC8
 9440 004c 000040E3 		movt	r0, #:upper16:.LC8
 9441 0050 FEFFFFEB 		bl	RME_Log
 9442              	.L599:
 9443              		.loc 1 4438 5
 9444 0054 FEFFFFEA 		b	.L599
 9445              	.L598:
4439:../../Source/Kernel/rme_kernel.c ****     
4440:../../Source/Kernel/rme_kernel.c ****     /* Delete this thread from the runqueue */
4441:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thd->Sched.Run.Prev,Thd->Sched.Run.Next);
 9446              		.loc 1 4441 5 is_stmt 1
 9447 0058 10301BE5 		ldr	r3, [fp, #-16]
 9448 005c 042093E5 		ldr	r2, [r3, #4]
 9449 0060 10301BE5 		ldr	r3, [fp, #-16]
 9450 0064 003093E5 		ldr	r3, [r3]
 9451 0068 0310A0E1 		mov	r1, r3
 9452 006c 0200A0E1 		mov	r0, r2
 9453 0070 FEFFFFEB 		bl	_RME_List_Del
4442:../../Source/Kernel/rme_kernel.c ****     
4443:../../Source/Kernel/rme_kernel.c ****     /* See if there are any thread on this priority level */
4444:../../Source/Kernel/rme_kernel.c ****     if(Local->Run.List[Prio].Next==&(Local->Run.List[Prio]))
 9454              		.loc 1 4444 29
 9455 0074 0C201BE5 		ldr	r2, [fp, #-12]
 9456 0078 08301BE5 		ldr	r3, [fp, #-8]
 9457 007c 023083E2 		add	r3, r3, #2
 9458 0080 8331A0E1 		lsl	r3, r3, #3
 9459 0084 033082E0 		add	r3, r2, r3
 9460 0088 042093E5 		ldr	r2, [r3, #4]
 9461              		.loc 1 4444 36
 9462 008c 08301BE5 		ldr	r3, [fp, #-8]
 9463 0090 023083E2 		add	r3, r3, #2
 9464 0094 8331A0E1 		lsl	r3, r3, #3
 9465 0098 0C101BE5 		ldr	r1, [fp, #-12]
 9466 009c 033081E0 		add	r3, r1, r3
 9467 00a0 043083E2 		add	r3, r3, #4
 9468              		.loc 1 4444 7
 9469 00a4 030052E1 		cmp	r2, r3
 9470 00a8 0F00001A 		bne	.L601
4445:../../Source/Kernel/rme_kernel.c ****     {
4446:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4447:../../Source/Kernel/rme_kernel.c **** 
4448:../../Source/Kernel/rme_kernel.c ****         /* Nothing running, clear the bit in the bitmap */
4449:../../Source/Kernel/rme_kernel.c ****         RME_BITMAP_CLR(Local->Run.Bitmap,Prio);
 9471              		.loc 1 4449 9
 9472 00ac 08301BE5 		ldr	r3, [fp, #-8]
 9473 00b0 A322A0E1 		lsr	r2, r3, #5
 9474 00b4 0C301BE5 		ldr	r3, [fp, #-12]
 9475 00b8 042082E2 		add	r2, r2, #4
 9476 00bc 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9477 00c0 08301BE5 		ldr	r3, [fp, #-8]
 9478 00c4 1F3003E2 		and	r3, r3, #31
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 246


 9479 00c8 0120A0E3 		mov	r2, #1
 9480 00cc 1233A0E1 		lsl	r3, r2, r3
 9481 00d0 0330E0E1 		mvn	r3, r3
 9482 00d4 08201BE5 		ldr	r2, [fp, #-8]
 9483 00d8 A222A0E1 		lsr	r2, r2, #5
 9484 00dc 031001E0 		and	r1, r1, r3
 9485 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 9486 00e4 042082E2 		add	r2, r2, #4
 9487 00e8 021183E7 		str	r1, [r3, r2, lsl #2]
 9488              	.L601:
4450:../../Source/Kernel/rme_kernel.c ****     }
4451:../../Source/Kernel/rme_kernel.c ****     else
4452:../../Source/Kernel/rme_kernel.c ****     {
4453:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4454:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4455:../../Source/Kernel/rme_kernel.c ****     }
4456:../../Source/Kernel/rme_kernel.c **** }
 9489              		.loc 1 4456 1
 9490 00ec 00F020E3 		nop
 9491 00f0 04D04BE2 		sub	sp, fp, #4
 9492              		.cfi_def_cfa 13, 8
 9493              		@ sp needed
 9494 00f4 0088BDE8 		pop	{fp, pc}
 9495              		.cfi_endproc
 9496              	.LFE45:
 9498              		.section	.text._RME_Run_High,"ax",%progbits
 9499              		.align	2
 9500              		.syntax unified
 9501              		.arm
 9503              	_RME_Run_High:
 9504              	.LFB46:
4457:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Del *************************************************/
4458:../../Source/Kernel/rme_kernel.c **** 
4459:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_High *****************************************************
4460:../../Source/Kernel/rme_kernel.c **** Description : Find the thread with the highest priority on the core.
4461:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The CPU-local data structure.
4462:../../Source/Kernel/rme_kernel.c **** Output      : None.
4463:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Thd_Struct* - The thread returned.
4464:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4465:../../Source/Kernel/rme_kernel.c **** static struct RME_Thd_Struct* _RME_Run_High(struct RME_CPU_Local* Local)
4466:../../Source/Kernel/rme_kernel.c **** {
 9505              		.loc 1 4466 1
 9506              		.cfi_startproc
 9507              		@ args = 0, pretend = 0, frame = 16
 9508              		@ frame_needed = 1, uses_anonymous_args = 0
 9509 0000 00482DE9 		push	{fp, lr}
 9510              		.cfi_def_cfa_offset 8
 9511              		.cfi_offset 11, -8
 9512              		.cfi_offset 14, -4
 9513 0004 04B08DE2 		add	fp, sp, #4
 9514              		.cfi_def_cfa 11, 4
 9515 0008 10D04DE2 		sub	sp, sp, #16
 9516 000c 10000BE5 		str	r0, [fp, #-16]
4467:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
4468:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4469:../../Source/Kernel/rme_kernel.c ****     
4470:../../Source/Kernel/rme_kernel.c ****     /* We start looking for preemption priority levels from the highest */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 247


4471:../../Source/Kernel/rme_kernel.c ****     for(Count=(rme_cnt_t)(RME_PRIO_WORD_NUM-1U);Count>=0;Count--)
 9517              		.loc 1 4471 14
 9518 0010 0030A0E3 		mov	r3, #0
 9519 0014 08300BE5 		str	r3, [fp, #-8]
 9520              		.loc 1 4471 5
 9521 0018 080000EA 		b	.L603
 9522              	.L606:
4472:../../Source/Kernel/rme_kernel.c ****     {
4473:../../Source/Kernel/rme_kernel.c ****         if(Local->Run.Bitmap[Count]!=0U)
 9523              		.loc 1 4473 29
 9524 001c 10301BE5 		ldr	r3, [fp, #-16]
 9525 0020 08201BE5 		ldr	r2, [fp, #-8]
 9526 0024 042082E2 		add	r2, r2, #4
 9527 0028 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9528              		.loc 1 4473 11
 9529 002c 000053E3 		cmp	r3, #0
 9530 0030 0600001A 		bne	.L610
4471:../../Source/Kernel/rme_kernel.c ****     {
 9531              		.loc 1 4471 63 discriminator 2
 9532 0034 08301BE5 		ldr	r3, [fp, #-8]
 9533 0038 013043E2 		sub	r3, r3, #1
 9534 003c 08300BE5 		str	r3, [fp, #-8]
 9535              	.L603:
4471:../../Source/Kernel/rme_kernel.c ****     {
 9536              		.loc 1 4471 54 discriminator 1
 9537 0040 08301BE5 		ldr	r3, [fp, #-8]
 9538 0044 000053E3 		cmp	r3, #0
 9539 0048 F3FFFFAA 		bge	.L606
 9540 004c 000000EA 		b	.L605
 9541              	.L610:
4474:../../Source/Kernel/rme_kernel.c ****         {
4475:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4476:../../Source/Kernel/rme_kernel.c ****             
4477:../../Source/Kernel/rme_kernel.c ****             break;
 9542              		.loc 1 4477 13
 9543 0050 00F020E3 		nop
 9544              	.L605:
4478:../../Source/Kernel/rme_kernel.c ****         }
4479:../../Source/Kernel/rme_kernel.c ****         else
4480:../../Source/Kernel/rme_kernel.c ****         {
4481:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4482:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4483:../../Source/Kernel/rme_kernel.c ****         }
4484:../../Source/Kernel/rme_kernel.c ****     }
4485:../../Source/Kernel/rme_kernel.c ****     
4486:../../Source/Kernel/rme_kernel.c ****     /* It must be possible to find one thread per core */
4487:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Count>=0);
 9545              		.loc 1 4487 5
 9546 0054 08301BE5 		ldr	r3, [fp, #-8]
 9547 0058 000053E3 		cmp	r3, #0
 9548 005c 080000AA 		bge	.L607
 9549              		.loc 1 4487 5 is_stmt 0 discriminator 1
 9550 0060 003000E3 		movw	r3, #:lower16:.LC6
 9551 0064 003040E3 		movt	r3, #:upper16:.LC6
 9552 0068 002000E3 		movw	r2, #:lower16:.LC7
 9553 006c 002040E3 		movt	r2, #:upper16:.LC7
 9554 0070 871101E3 		movw	r1, #4487
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 248


 9555 0074 000000E3 		movw	r0, #:lower16:.LC8
 9556 0078 000040E3 		movt	r0, #:upper16:.LC8
 9557 007c FEFFFFEB 		bl	RME_Log
 9558              	.L608:
 9559              		.loc 1 4487 5
 9560 0080 FEFFFFEA 		b	.L608
 9561              	.L607:
4488:../../Source/Kernel/rme_kernel.c **** 
4489:../../Source/Kernel/rme_kernel.c ****     /* Get the first "1"'s position in the word */
4490:../../Source/Kernel/rme_kernel.c ****     Prio=RME_MSB_GET(Local->Run.Bitmap[Count]);
 9562              		.loc 1 4490 10 is_stmt 1
 9563 0084 10301BE5 		ldr	r3, [fp, #-16]
 9564 0088 08201BE5 		ldr	r2, [fp, #-8]
 9565 008c 042082E2 		add	r2, r2, #4
 9566 0090 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9567 0094 0300A0E1 		mov	r0, r3
 9568 0098 FEFFFFEB 		bl	__RME_A7A_MSB_Get
 9569 009c 0C000BE5 		str	r0, [fp, #-12]
4491:../../Source/Kernel/rme_kernel.c ****     Prio+=((rme_ptr_t)Count)<<RME_WORD_ORDER;
 9570              		.loc 1 4491 29
 9571 00a0 08301BE5 		ldr	r3, [fp, #-8]
 9572 00a4 8332A0E1 		lsl	r3, r3, #5
 9573              		.loc 1 4491 9
 9574 00a8 0C201BE5 		ldr	r2, [fp, #-12]
 9575 00ac 033082E0 		add	r3, r2, r3
 9576 00b0 0C300BE5 		str	r3, [fp, #-12]
4492:../../Source/Kernel/rme_kernel.c **** 
4493:../../Source/Kernel/rme_kernel.c ****     /* Now there is something at this priority level. Get it and start to run */
4494:../../Source/Kernel/rme_kernel.c ****     return (struct RME_Thd_Struct*)(Local->Run.List[Prio].Next);
 9577              		.loc 1 4494 12
 9578 00b4 10201BE5 		ldr	r2, [fp, #-16]
 9579 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 9580 00bc 023083E2 		add	r3, r3, #2
 9581 00c0 8331A0E1 		lsl	r3, r3, #3
 9582 00c4 033082E0 		add	r3, r2, r3
 9583 00c8 043093E5 		ldr	r3, [r3, #4]
4495:../../Source/Kernel/rme_kernel.c **** }
 9584              		.loc 1 4495 1
 9585 00cc 0300A0E1 		mov	r0, r3
 9586 00d0 04D04BE2 		sub	sp, fp, #4
 9587              		.cfi_def_cfa 13, 8
 9588              		@ sp needed
 9589 00d4 0088BDE8 		pop	{fp, pc}
 9590              		.cfi_endproc
 9591              	.LFE46:
 9593              		.section	.text._RME_Run_Notif,"ax",%progbits
 9594              		.align	2
 9595              		.syntax unified
 9596              		.arm
 9598              	_RME_Run_Notif:
 9599              	.LFB47:
4496:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_High ************************************************/
4497:../../Source/Kernel/rme_kernel.c **** 
4498:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Notif ****************************************************
4499:../../Source/Kernel/rme_kernel.c **** Description : Send a notification to the thread's parent, to notify that this 
4500:../../Source/Kernel/rme_kernel.c ****               thread is currently out of time, or have a fault.
4501:../../Source/Kernel/rme_kernel.c ****               This function includes kernel send, so we need to call 
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 249


4502:../../Source/Kernel/rme_kernel.c ****               _RME_Kern_High after this. The only exception being the
4503:../../Source/Kernel/rme_kernel.c ****               _RME_Thd_Swt system call, which we use a more optimized routine.
4504:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to send notification for.
4505:../../Source/Kernel/rme_kernel.c **** Output      : None.
4506:../../Source/Kernel/rme_kernel.c **** Return      : None.
4507:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4508:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Notif(struct RME_Thd_Struct* Thd)
4509:../../Source/Kernel/rme_kernel.c **** {
 9600              		.loc 1 4509 1
 9601              		.cfi_startproc
 9602              		@ args = 0, pretend = 0, frame = 16
 9603              		@ frame_needed = 1, uses_anonymous_args = 0
 9604 0000 00482DE9 		push	{fp, lr}
 9605              		.cfi_def_cfa_offset 8
 9606              		.cfi_offset 11, -8
 9607              		.cfi_offset 14, -4
 9608 0004 04B08DE2 		add	fp, sp, #4
 9609              		.cfi_def_cfa 11, 4
 9610 0008 10D04DE2 		sub	sp, sp, #16
 9611 000c 10000BE5 		str	r0, [fp, #-16]
4510:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Sched_Thd;
4511:../../Source/Kernel/rme_kernel.c ****     
4512:../../Source/Kernel/rme_kernel.c ****     Sched_Thd=Thd->Sched.Sched_Thd;
 9612              		.loc 1 4512 14
 9613 0010 10301BE5 		ldr	r3, [fp, #-16]
 9614 0014 343093E5 		ldr	r3, [r3, #52]
 9615 0018 08300BE5 		str	r3, [fp, #-8]
4513:../../Source/Kernel/rme_kernel.c ****     
4514:../../Source/Kernel/rme_kernel.c ****     /* See if there is already a notification. If yes, do not do the send again */
4515:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Notif.Next==&(Thd->Sched.Notif))
 9616              		.loc 1 4515 24
 9617 001c 10301BE5 		ldr	r3, [fp, #-16]
 9618 0020 082093E5 		ldr	r2, [r3, #8]
 9619              		.loc 1 4515 31
 9620 0024 10301BE5 		ldr	r3, [fp, #-16]
 9621 0028 083083E2 		add	r3, r3, #8
 9622              		.loc 1 4515 7
 9623 002c 030052E1 		cmp	r2, r3
 9624 0030 0700001A 		bne	.L612
4516:../../Source/Kernel/rme_kernel.c ****     {
4517:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4518:../../Source/Kernel/rme_kernel.c **** 
4519:../../Source/Kernel/rme_kernel.c ****         _RME_List_Ins(&(Thd->Sched.Notif), 
 9625              		.loc 1 4519 9
 9626 0034 10301BE5 		ldr	r3, [fp, #-16]
 9627 0038 080083E2 		add	r0, r3, #8
 9628 003c 08301BE5 		ldr	r3, [fp, #-8]
 9629 0040 401093E5 		ldr	r1, [r3, #64]
 9630 0044 08301BE5 		ldr	r3, [fp, #-8]
 9631 0048 3C3083E2 		add	r3, r3, #60
 9632 004c 0320A0E1 		mov	r2, r3
 9633 0050 FEFFFFEB 		bl	_RME_List_Ins
 9634              	.L612:
4520:../../Source/Kernel/rme_kernel.c ****                       Sched_Thd->Sched.Event.Prev,&(Sched_Thd->Sched.Event));
4521:../../Source/Kernel/rme_kernel.c ****     }
4522:../../Source/Kernel/rme_kernel.c ****     else
4523:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 250


4524:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4525:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4526:../../Source/Kernel/rme_kernel.c ****     }
4527:../../Source/Kernel/rme_kernel.c **** 
4528:../../Source/Kernel/rme_kernel.c ****     /* If this guy have an endpoint, send to it */
4529:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Sched_Sig!=0U)
 9635              		.loc 1 4529 18
 9636 0054 10301BE5 		ldr	r3, [fp, #-16]
 9637 0058 383093E5 		ldr	r3, [r3, #56]
 9638              		.loc 1 4529 7
 9639 005c 000053E3 		cmp	r3, #0
 9640 0060 0300000A 		beq	.L614
4530:../../Source/Kernel/rme_kernel.c ****     {
4531:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4532:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_Snd(Thd->Sched.Sched_Sig);
 9641              		.loc 1 4532 9
 9642 0064 10301BE5 		ldr	r3, [fp, #-16]
 9643 0068 383093E5 		ldr	r3, [r3, #56]
 9644 006c 0300A0E1 		mov	r0, r3
 9645 0070 FEFFFFEB 		bl	_RME_Kern_Snd
 9646              	.L614:
4533:../../Source/Kernel/rme_kernel.c ****     }
4534:../../Source/Kernel/rme_kernel.c ****     else
4535:../../Source/Kernel/rme_kernel.c ****     {
4536:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4537:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4538:../../Source/Kernel/rme_kernel.c ****     }
4539:../../Source/Kernel/rme_kernel.c **** }
 9647              		.loc 1 4539 1
 9648 0074 00F020E3 		nop
 9649 0078 04D04BE2 		sub	sp, fp, #4
 9650              		.cfi_def_cfa 13, 8
 9651              		@ sp needed
 9652 007c 0088BDE8 		pop	{fp, pc}
 9653              		.cfi_endproc
 9654              	.LFE47:
 9656              		.section	.text._RME_Thd_Pgt,"ax",%progbits
 9657              		.align	2
 9658              		.global	_RME_Thd_Pgt
 9659              		.syntax unified
 9660              		.arm
 9662              	_RME_Thd_Pgt:
 9663              	.LFB48:
4540:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Notif ***********************************************/
4541:../../Source/Kernel/rme_kernel.c **** 
4542:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Pgt ******************************************************
4543:../../Source/Kernel/rme_kernel.c **** Description : Get a thread's page table. 
4544:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread.
4545:../../Source/Kernel/rme_kernel.c **** Output      : None.
4546:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Cap_Pgt* / rme_ptr_t - The page table.
4547:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4548:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4549:../../Source/Kernel/rme_kernel.c **** struct RME_Cap_Pgt* _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4550:../../Source/Kernel/rme_kernel.c **** #else
4551:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4552:../../Source/Kernel/rme_kernel.c **** #endif
4553:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 251


 9664              		.loc 1 4553 1
 9665              		.cfi_startproc
 9666              		@ args = 0, pretend = 0, frame = 16
 9667              		@ frame_needed = 1, uses_anonymous_args = 0
 9668              		@ link register save eliminated.
 9669 0000 04B02DE5 		str	fp, [sp, #-4]!
 9670              		.cfi_def_cfa_offset 4
 9671              		.cfi_offset 11, -4
 9672 0004 00B08DE2 		add	fp, sp, #0
 9673              		.cfi_def_cfa_register 11
 9674 0008 14D04DE2 		sub	sp, sp, #20
 9675 000c 10000BE5 		str	r0, [fp, #-16]
4554:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
4555:../../Source/Kernel/rme_kernel.c ****     
4556:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd);
 9676              		.loc 1 4556 13
 9677 0010 10301BE5 		ldr	r3, [fp, #-16]
 9678 0014 4C2093E5 		ldr	r2, [r3, #76]
 9679 0018 10301BE5 		ldr	r3, [fp, #-16]
 9680 001c 4C3083E2 		add	r3, r3, #76
 9681 0020 030052E1 		cmp	r2, r3
 9682 0024 0200000A 		beq	.L616
 9683              		.loc 1 4556 13 is_stmt 0 discriminator 1
 9684 0028 10301BE5 		ldr	r3, [fp, #-16]
 9685 002c 4C3093E5 		ldr	r3, [r3, #76]
 9686 0030 000000EA 		b	.L617
 9687              	.L616:
 9688              		.loc 1 4556 13 discriminator 2
 9689 0034 0030A0E3 		mov	r3, #0
 9690              	.L617:
 9691              		.loc 1 4556 12 is_stmt 1 discriminator 4
 9692 0038 08300BE5 		str	r3, [fp, #-8]
4557:../../Source/Kernel/rme_kernel.c ****     
4558:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 9693              		.loc 1 4558 7
 9694 003c 08301BE5 		ldr	r3, [fp, #-8]
 9695 0040 000053E3 		cmp	r3, #0
 9696 0044 0300001A 		bne	.L618
4559:../../Source/Kernel/rme_kernel.c ****     {
4560:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4561:../../Source/Kernel/rme_kernel.c **** 
4562:../../Source/Kernel/rme_kernel.c ****         return Thd->Sched.Prc->Pgt;
 9697              		.loc 1 4562 26
 9698 0048 10301BE5 		ldr	r3, [fp, #-16]
 9699 004c 2C3093E5 		ldr	r3, [r3, #44]
 9700              		.loc 1 4562 30
 9701 0050 183093E5 		ldr	r3, [r3, #24]
 9702 0054 020000EA 		b	.L619
 9703              	.L618:
4563:../../Source/Kernel/rme_kernel.c ****     }
4564:../../Source/Kernel/rme_kernel.c ****     else
4565:../../Source/Kernel/rme_kernel.c ****     {
4566:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4567:../../Source/Kernel/rme_kernel.c **** 
4568:../../Source/Kernel/rme_kernel.c ****         return Inv_Top->Prc->Pgt;
 9704              		.loc 1 4568 23
 9705 0058 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 252


 9706 005c 083093E5 		ldr	r3, [r3, #8]
 9707              		.loc 1 4568 28
 9708 0060 183093E5 		ldr	r3, [r3, #24]
 9709              	.L619:
4569:../../Source/Kernel/rme_kernel.c ****     }
4570:../../Source/Kernel/rme_kernel.c **** }
 9710              		.loc 1 4570 1
 9711 0064 0300A0E1 		mov	r0, r3
 9712 0068 00D08BE2 		add	sp, fp, #0
 9713              		.cfi_def_cfa_register 13
 9714              		@ sp needed
 9715 006c 04B09DE4 		ldr	fp, [sp], #4
 9716              		.cfi_restore 11
 9717              		.cfi_def_cfa_offset 0
 9718 0070 1EFF2FE1 		bx	lr
 9719              		.cfi_endproc
 9720              	.LFE48:
 9722              		.section	.text._RME_Run_Swt,"ax",%progbits
 9723              		.align	2
 9724              		.syntax unified
 9725              		.arm
 9727              	_RME_Run_Swt:
 9728              	.LFB49:
4571:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Pgt *************************************************/
4572:../../Source/Kernel/rme_kernel.c **** 
4573:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Swt ******************************************************
4574:../../Source/Kernel/rme_kernel.c **** Description : Switch the register set and page table to another thread. 
4575:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4576:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_Cur - The current thread.
4577:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_New - The next thread.
4578:../../Source/Kernel/rme_kernel.c **** Output      : None.
4579:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
4580:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4581:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Run_Swt(struct RME_Reg_Struct* Reg,
4582:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_Cur, 
4583:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_New)
4584:../../Source/Kernel/rme_kernel.c **** {
 9729              		.loc 1 4584 1
 9730              		.cfi_startproc
 9731              		@ args = 0, pretend = 0, frame = 32
 9732              		@ frame_needed = 1, uses_anonymous_args = 0
 9733 0000 00482DE9 		push	{fp, lr}
 9734              		.cfi_def_cfa_offset 8
 9735              		.cfi_offset 11, -8
 9736              		.cfi_offset 14, -4
 9737 0004 04B08DE2 		add	fp, sp, #4
 9738              		.cfi_def_cfa 11, 4
 9739 0008 20D04DE2 		sub	sp, sp, #32
 9740 000c 18000BE5 		str	r0, [fp, #-24]
 9741 0010 1C100BE5 		str	r1, [fp, #-28]
 9742 0014 20200BE5 		str	r2, [fp, #-32]
4585:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4586:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Cur;
4587:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4588:../../Source/Kernel/rme_kernel.c **** #else
4589:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Cur;
4590:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_New;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 253


4591:../../Source/Kernel/rme_kernel.c **** #endif
4592:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_Cur;
4593:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_New;
4594:../../Source/Kernel/rme_kernel.c ****     
4595:../../Source/Kernel/rme_kernel.c ****     Reg_Cur=&(Thd_Cur->Ctx.Reg->Reg);
 9743              		.loc 1 4595 27
 9744 0018 1C301BE5 		ldr	r3, [fp, #-28]
 9745 001c 483093E5 		ldr	r3, [r3, #72]
 9746              		.loc 1 4595 12
 9747 0020 08300BE5 		str	r3, [fp, #-8]
4596:../../Source/Kernel/rme_kernel.c ****     Reg_New=&(Thd_New->Ctx.Reg->Reg);
 9748              		.loc 1 4596 27
 9749 0024 20301BE5 		ldr	r3, [fp, #-32]
 9750 0028 483093E5 		ldr	r3, [r3, #72]
 9751              		.loc 1 4596 12
 9752 002c 0C300BE5 		str	r3, [fp, #-12]
4597:../../Source/Kernel/rme_kernel.c ****     
4598:../../Source/Kernel/rme_kernel.c ****     /* Save register context */
4599:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg_Cur,Reg);
 9753              		.loc 1 4599 5
 9754 0030 18101BE5 		ldr	r1, [fp, #-24]
 9755 0034 08001BE5 		ldr	r0, [fp, #-8]
 9756 0038 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4600:../../Source/Kernel/rme_kernel.c ****     
4601:../../Source/Kernel/rme_kernel.c ****     /* If coprocessor is enabled, handle coprocessor context as well */
4602:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
4603:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Cop_Swap(RME_THD_ATTR(Thd_New->Ctx.Hyp_Attr),
4604:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_New->Ctx.Hyp_Attr),
4605:../../Source/Kernel/rme_kernel.c ****                        Reg_New,Thd_New->Ctx.Reg->Cop,
4606:../../Source/Kernel/rme_kernel.c ****                        RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
4607:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_Cur->Ctx.Hyp_Attr),
4608:../../Source/Kernel/rme_kernel.c ****                        Reg_Cur,Thd_Cur->Ctx.Reg->Cop);
4609:../../Source/Kernel/rme_kernel.c **** #endif
4610:../../Source/Kernel/rme_kernel.c **** 
4611:../../Source/Kernel/rme_kernel.c ****     /* Load register context */
4612:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg,Reg_New);
 9757              		.loc 1 4612 5
 9758 003c 0C101BE5 		ldr	r1, [fp, #-12]
 9759 0040 18001BE5 		ldr	r0, [fp, #-24]
 9760 0044 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4613:../../Source/Kernel/rme_kernel.c **** 
4614:../../Source/Kernel/rme_kernel.c ****     /* Are we going to switch page tables? If yes, we change it now */
4615:../../Source/Kernel/rme_kernel.c ****     Pgt_Cur=_RME_Thd_Pgt(Thd_Cur);
 9761              		.loc 1 4615 13
 9762 0048 1C001BE5 		ldr	r0, [fp, #-28]
 9763 004c FEFFFFEB 		bl	_RME_Thd_Pgt
 9764 0050 10000BE5 		str	r0, [fp, #-16]
4616:../../Source/Kernel/rme_kernel.c ****     Pgt_New=_RME_Thd_Pgt(Thd_New);
 9765              		.loc 1 4616 13
 9766 0054 20001BE5 		ldr	r0, [fp, #-32]
 9767 0058 FEFFFFEB 		bl	_RME_Thd_Pgt
 9768 005c 14000BE5 		str	r0, [fp, #-20]
4617:../../Source/Kernel/rme_kernel.c ****     
4618:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4619:../../Source/Kernel/rme_kernel.c ****     /* The page tables here must be root cap */
4620:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_Cur)!=0U);
 9769              		.loc 1 4620 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 254


 9770 0060 10301BE5 		ldr	r3, [fp, #-16]
 9771 0064 003093E5 		ldr	r3, [r3]
 9772 0068 7330FFE6 		uxth	r3, r3
 9773 006c 000053E3 		cmp	r3, #0
 9774 0070 0800000A 		beq	.L621
 9775              		.loc 1 4620 5 is_stmt 0 discriminator 1
 9776 0074 003000E3 		movw	r3, #:lower16:.LC6
 9777 0078 003040E3 		movt	r3, #:upper16:.LC6
 9778 007c 002000E3 		movw	r2, #:lower16:.LC7
 9779 0080 002040E3 		movt	r2, #:upper16:.LC7
 9780 0084 0C1201E3 		movw	r1, #4620
 9781 0088 000000E3 		movw	r0, #:lower16:.LC8
 9782 008c 000040E3 		movt	r0, #:upper16:.LC8
 9783 0090 FEFFFFEB 		bl	RME_Log
 9784              	.L622:
 9785              		.loc 1 4620 5
 9786 0094 FEFFFFEA 		b	.L622
 9787              	.L621:
4621:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_New)!=0U);
 9788              		.loc 1 4621 5 is_stmt 1
 9789 0098 14301BE5 		ldr	r3, [fp, #-20]
 9790 009c 003093E5 		ldr	r3, [r3]
 9791 00a0 7330FFE6 		uxth	r3, r3
 9792 00a4 000053E3 		cmp	r3, #0
 9793 00a8 0800000A 		beq	.L623
 9794              		.loc 1 4621 5 is_stmt 0 discriminator 1
 9795 00ac 003000E3 		movw	r3, #:lower16:.LC6
 9796 00b0 003040E3 		movt	r3, #:upper16:.LC6
 9797 00b4 002000E3 		movw	r2, #:lower16:.LC7
 9798 00b8 002040E3 		movt	r2, #:upper16:.LC7
 9799 00bc 0D1201E3 		movw	r1, #4621
 9800 00c0 000000E3 		movw	r0, #:lower16:.LC8
 9801 00c4 000040E3 		movt	r0, #:upper16:.LC8
 9802 00c8 FEFFFFEB 		bl	RME_Log
 9803              	.L624:
 9804              		.loc 1 4621 5
 9805 00cc FEFFFFEA 		b	.L624
 9806              	.L623:
4622:../../Source/Kernel/rme_kernel.c **** #endif
4623:../../Source/Kernel/rme_kernel.c ****     
4624:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4625:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_GETOBJ(Pgt_Cur,rme_ptr_t)!=RME_CAP_GETOBJ(Pgt_New,rme_ptr_t))
 9807              		.loc 1 4625 8 is_stmt 1
 9808 00d0 10301BE5 		ldr	r3, [fp, #-16]
 9809 00d4 0C2093E5 		ldr	r2, [r3, #12]
 9810              		.loc 1 4625 43
 9811 00d8 14301BE5 		ldr	r3, [fp, #-20]
 9812 00dc 0C3093E5 		ldr	r3, [r3, #12]
 9813              		.loc 1 4625 7
 9814 00e0 030052E1 		cmp	r2, r3
 9815 00e4 0100000A 		beq	.L625
4626:../../Source/Kernel/rme_kernel.c **** #else
4627:../../Source/Kernel/rme_kernel.c ****     if(Pgt_Cur!=Pgt_New)
4628:../../Source/Kernel/rme_kernel.c **** #endif
4629:../../Source/Kernel/rme_kernel.c ****     {
4630:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4631:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 255


4632:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Pgt_New);
 9816              		.loc 1 4632 9
 9817 00e8 14001BE5 		ldr	r0, [fp, #-20]
 9818 00ec FEFFFFEB 		bl	__RME_Pgt_Set
 9819              	.L625:
4633:../../Source/Kernel/rme_kernel.c ****     }
4634:../../Source/Kernel/rme_kernel.c ****     else
4635:../../Source/Kernel/rme_kernel.c ****     {
4636:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4637:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4638:../../Source/Kernel/rme_kernel.c ****     }
4639:../../Source/Kernel/rme_kernel.c **** 
4640:../../Source/Kernel/rme_kernel.c ****     return 0;
 9820              		.loc 1 4640 12
 9821 00f0 0030A0E3 		mov	r3, #0
4641:../../Source/Kernel/rme_kernel.c **** }
 9822              		.loc 1 4641 1
 9823 00f4 0300A0E1 		mov	r0, r3
 9824 00f8 04D04BE2 		sub	sp, fp, #4
 9825              		.cfi_def_cfa 13, 8
 9826              		@ sp needed
 9827 00fc 0088BDE8 		pop	{fp, pc}
 9828              		.cfi_endproc
 9829              	.LFE49:
 9831              		.section	.text._RME_Prc_Boot_Crt,"ax",%progbits
 9832              		.align	2
 9833              		.global	_RME_Prc_Boot_Crt
 9834              		.syntax unified
 9835              		.arm
 9837              	_RME_Prc_Boot_Crt:
 9838              	.LFB50:
4642:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Swt *************************************************/
4643:../../Source/Kernel/rme_kernel.c **** 
4644:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Boot_Crt *************************************************
4645:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4646:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4647:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and is
4648:../../Source/Kernel/rme_kernel.c ****               only used to create the first process at boot-time.
4649:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4650:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4651:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4652:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4653:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4654:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4655:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4656:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4657:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4658:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4659:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4660:../../Source/Kernel/rme_kernel.c ****                                   this process.
4661:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4662:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4663:../../Source/Kernel/rme_kernel.c ****                                   address.
4664:../../Source/Kernel/rme_kernel.c **** Output      : None.
4665:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4666:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4667:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 256


4668:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4669:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4670:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4671:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4672:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt)
4673:../../Source/Kernel/rme_kernel.c **** #else
4674:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4675:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4676:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4677:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4678:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Raw_Pgt)
4679:../../Source/Kernel/rme_kernel.c **** #endif
4680:../../Source/Kernel/rme_kernel.c **** {
 9839              		.loc 1 4680 1
 9840              		.cfi_startproc
 9841              		@ args = 4, pretend = 0, frame = 48
 9842              		@ frame_needed = 1, uses_anonymous_args = 0
 9843 0000 00482DE9 		push	{fp, lr}
 9844              		.cfi_def_cfa_offset 8
 9845              		.cfi_offset 11, -8
 9846              		.cfi_offset 14, -4
 9847 0004 04B08DE2 		add	fp, sp, #4
 9848              		.cfi_def_cfa 11, 4
 9849 0008 30D04DE2 		sub	sp, sp, #48
 9850 000c 28000BE5 		str	r0, [fp, #-40]
 9851 0010 2C100BE5 		str	r1, [fp, #-44]
 9852 0014 30200BE5 		str	r2, [fp, #-48]
 9853 0018 34300BE5 		str	r3, [fp, #-52]
4681:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4682:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4683:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4684:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4685:../../Source/Kernel/rme_kernel.c **** #endif
4686:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4687:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4688:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4689:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4690:../../Source/Kernel/rme_kernel.c **** #endif
4691:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4692:../../Source/Kernel/rme_kernel.c ****     
4693:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4694:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 9854              		.loc 1 4694 5
 9855 001c 2C301BE5 		ldr	r3, [fp, #-44]
 9856 0020 803003E2 		and	r3, r3, #128
 9857 0024 000053E3 		cmp	r3, #0
 9858 0028 1C00001A 		bne	.L628
 9859              		.loc 1 4694 5 is_stmt 0 discriminator 1
 9860 002c 28301BE5 		ldr	r3, [fp, #-40]
 9861 0030 142093E5 		ldr	r2, [r3, #20]
 9862 0034 2C301BE5 		ldr	r3, [fp, #-44]
 9863 0038 030052E1 		cmp	r2, r3
 9864 003c 0100008A 		bhi	.L629
 9865              		.loc 1 4694 5 discriminator 3
 9866 0040 0230E0E3 		mvn	r3, #2
 9867              		.loc 1 4694 5
 9868 0044 740100EA 		b	.L630
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 257


 9869              	.L629:
 9870              		.loc 1 4694 5 discriminator 4
 9871 0048 2C301BE5 		ldr	r3, [fp, #-44]
 9872 004c 8322A0E1 		lsl	r2, r3, #5
 9873 0050 28301BE5 		ldr	r3, [fp, #-40]
 9874 0054 0C3093E5 		ldr	r3, [r3, #12]
 9875 0058 033082E0 		add	r3, r2, r3
 9876 005c 08300BE5 		str	r3, [fp, #-8]
 9877 0060 08301BE5 		ldr	r3, [fp, #-8]
 9878 0064 0300A0E1 		mov	r0, r3
 9879 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9880 006c 14000BE5 		str	r0, [fp, #-20]
 9881              		.loc 1 4694 5 discriminator 1
 9882 0070 14301BE5 		ldr	r3, [fp, #-20]
 9883 0074 FF3803E2 		and	r3, r3, #16711680
 9884 0078 020853E3 		cmp	r3, #131072
 9885 007c 0100001A 		bne	.L631
 9886              		.loc 1 4694 5 discriminator 5
 9887 0080 0830E0E3 		mvn	r3, #8
 9888              		.loc 1 4694 5
 9889 0084 640100EA 		b	.L630
 9890              	.L631:
 9891              		.loc 1 4694 5 discriminator 6
 9892 0088 14301BE5 		ldr	r3, [fp, #-20]
 9893 008c 233CA0E1 		lsr	r3, r3, #24
 9894 0090 030053E3 		cmp	r3, #3
 9895 0094 3F00000A 		beq	.L632
 9896              		.loc 1 4694 5 discriminator 7
 9897 0098 0130E0E3 		mvn	r3, #1
 9898              		.loc 1 4694 5
 9899 009c 5E0100EA 		b	.L630
 9900              	.L628:
 9901              		.loc 1 4694 5 discriminator 2
 9902 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 9903 00a4 2324A0E1 		lsr	r2, r3, #8
 9904 00a8 28301BE5 		ldr	r3, [fp, #-40]
 9905 00ac 143093E5 		ldr	r3, [r3, #20]
 9906 00b0 030052E1 		cmp	r2, r3
 9907 00b4 0100003A 		bcc	.L633
 9908              		.loc 1 4694 5 discriminator 8
 9909 00b8 0230E0E3 		mvn	r3, #2
 9910              		.loc 1 4694 5
 9911 00bc 560100EA 		b	.L630
 9912              	.L633:
 9913              		.loc 1 4694 5 discriminator 9
 9914 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 9915 00c4 2334A0E1 		lsr	r3, r3, #8
 9916 00c8 8322A0E1 		lsl	r2, r3, #5
 9917 00cc 28301BE5 		ldr	r3, [fp, #-40]
 9918 00d0 0C3093E5 		ldr	r3, [r3, #12]
 9919 00d4 033082E0 		add	r3, r2, r3
 9920 00d8 08300BE5 		str	r3, [fp, #-8]
 9921 00dc 08301BE5 		ldr	r3, [fp, #-8]
 9922 00e0 0300A0E1 		mov	r0, r3
 9923 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9924 00e8 14000BE5 		str	r0, [fp, #-20]
 9925              		.loc 1 4694 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 258


 9926 00ec 14301BE5 		ldr	r3, [fp, #-20]
 9927 00f0 FF3803E2 		and	r3, r3, #16711680
 9928 00f4 020853E3 		cmp	r3, #131072
 9929 00f8 0100001A 		bne	.L634
 9930              		.loc 1 4694 5 discriminator 10
 9931 00fc 0830E0E3 		mvn	r3, #8
 9932              		.loc 1 4694 5
 9933 0100 450100EA 		b	.L630
 9934              	.L634:
 9935              		.loc 1 4694 5 discriminator 11
 9936 0104 14301BE5 		ldr	r3, [fp, #-20]
 9937 0108 233CA0E1 		lsr	r3, r3, #24
 9938 010c 030053E3 		cmp	r3, #3
 9939 0110 0100000A 		beq	.L635
 9940              		.loc 1 4694 5 discriminator 12
 9941 0114 0130E0E3 		mvn	r3, #1
 9942              		.loc 1 4694 5
 9943 0118 3F0100EA 		b	.L630
 9944              	.L635:
 9945              		.loc 1 4694 5 discriminator 13
 9946 011c 2C301BE5 		ldr	r3, [fp, #-44]
 9947 0120 7F2003E2 		and	r2, r3, #127
 9948 0124 08301BE5 		ldr	r3, [fp, #-8]
 9949 0128 143093E5 		ldr	r3, [r3, #20]
 9950 012c 030052E1 		cmp	r2, r3
 9951 0130 0100003A 		bcc	.L636
 9952              		.loc 1 4694 5 discriminator 14
 9953 0134 0230E0E3 		mvn	r3, #2
 9954              		.loc 1 4694 5
 9955 0138 370100EA 		b	.L630
 9956              	.L636:
 9957              		.loc 1 4694 5 discriminator 15
 9958 013c 2C301BE5 		ldr	r3, [fp, #-44]
 9959 0140 7F3003E2 		and	r3, r3, #127
 9960 0144 8322A0E1 		lsl	r2, r3, #5
 9961 0148 08301BE5 		ldr	r3, [fp, #-8]
 9962 014c 0C3093E5 		ldr	r3, [r3, #12]
 9963 0150 033082E0 		add	r3, r2, r3
 9964 0154 08300BE5 		str	r3, [fp, #-8]
 9965 0158 08301BE5 		ldr	r3, [fp, #-8]
 9966 015c 0300A0E1 		mov	r0, r3
 9967 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9968 0164 14000BE5 		str	r0, [fp, #-20]
 9969              		.loc 1 4694 5 discriminator 1
 9970 0168 14301BE5 		ldr	r3, [fp, #-20]
 9971 016c FF3803E2 		and	r3, r3, #16711680
 9972 0170 020853E3 		cmp	r3, #131072
 9973 0174 0100001A 		bne	.L637
 9974              		.loc 1 4694 5 discriminator 16
 9975 0178 0830E0E3 		mvn	r3, #8
 9976              		.loc 1 4694 5
 9977 017c 260100EA 		b	.L630
 9978              	.L637:
 9979              		.loc 1 4694 5 discriminator 17
 9980 0180 14301BE5 		ldr	r3, [fp, #-20]
 9981 0184 233CA0E1 		lsr	r3, r3, #24
 9982 0188 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 259


 9983 018c 0100000A 		beq	.L632
 9984              		.loc 1 4694 5 discriminator 18
 9985 0190 0130E0E3 		mvn	r3, #1
 9986              		.loc 1 4694 5
 9987 0194 200100EA 		b	.L630
 9988              	.L632:
4695:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4696:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 9989              		.loc 1 4696 5 is_stmt 1
 9990 0198 34301BE5 		ldr	r3, [fp, #-52]
 9991 019c 803003E2 		and	r3, r3, #128
 9992 01a0 000053E3 		cmp	r3, #0
 9993 01a4 1C00001A 		bne	.L638
 9994              		.loc 1 4696 5 is_stmt 0 discriminator 1
 9995 01a8 28301BE5 		ldr	r3, [fp, #-40]
 9996 01ac 142093E5 		ldr	r2, [r3, #20]
 9997 01b0 34301BE5 		ldr	r3, [fp, #-52]
 9998 01b4 030052E1 		cmp	r2, r3
 9999 01b8 0100008A 		bhi	.L639
 10000              		.loc 1 4696 5 discriminator 3
 10001 01bc 0230E0E3 		mvn	r3, #2
 10002              		.loc 1 4696 5
 10003 01c0 150100EA 		b	.L630
 10004              	.L639:
 10005              		.loc 1 4696 5 discriminator 4
 10006 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10007 01c8 8322A0E1 		lsl	r2, r3, #5
 10008 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10009 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10010 01d4 033082E0 		add	r3, r2, r3
 10011 01d8 0C300BE5 		str	r3, [fp, #-12]
 10012 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10013 01e0 0300A0E1 		mov	r0, r3
 10014 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10015 01e8 14000BE5 		str	r0, [fp, #-20]
 10016              		.loc 1 4696 5 discriminator 1
 10017 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10018 01f0 FF3803E2 		and	r3, r3, #16711680
 10019 01f4 020853E3 		cmp	r3, #131072
 10020 01f8 0100001A 		bne	.L640
 10021              		.loc 1 4696 5 discriminator 5
 10022 01fc 0830E0E3 		mvn	r3, #8
 10023              		.loc 1 4696 5
 10024 0200 050100EA 		b	.L630
 10025              	.L640:
 10026              		.loc 1 4696 5 discriminator 6
 10027 0204 14301BE5 		ldr	r3, [fp, #-20]
 10028 0208 233CA0E1 		lsr	r3, r3, #24
 10029 020c 030053E3 		cmp	r3, #3
 10030 0210 3F00000A 		beq	.L641
 10031              		.loc 1 4696 5 discriminator 7
 10032 0214 0130E0E3 		mvn	r3, #1
 10033              		.loc 1 4696 5
 10034 0218 FF0000EA 		b	.L630
 10035              	.L638:
 10036              		.loc 1 4696 5 discriminator 2
 10037 021c 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 260


 10038 0220 2324A0E1 		lsr	r2, r3, #8
 10039 0224 28301BE5 		ldr	r3, [fp, #-40]
 10040 0228 143093E5 		ldr	r3, [r3, #20]
 10041 022c 030052E1 		cmp	r2, r3
 10042 0230 0100003A 		bcc	.L642
 10043              		.loc 1 4696 5 discriminator 8
 10044 0234 0230E0E3 		mvn	r3, #2
 10045              		.loc 1 4696 5
 10046 0238 F70000EA 		b	.L630
 10047              	.L642:
 10048              		.loc 1 4696 5 discriminator 9
 10049 023c 34301BE5 		ldr	r3, [fp, #-52]
 10050 0240 2334A0E1 		lsr	r3, r3, #8
 10051 0244 8322A0E1 		lsl	r2, r3, #5
 10052 0248 28301BE5 		ldr	r3, [fp, #-40]
 10053 024c 0C3093E5 		ldr	r3, [r3, #12]
 10054 0250 033082E0 		add	r3, r2, r3
 10055 0254 0C300BE5 		str	r3, [fp, #-12]
 10056 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10057 025c 0300A0E1 		mov	r0, r3
 10058 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10059 0264 14000BE5 		str	r0, [fp, #-20]
 10060              		.loc 1 4696 5 discriminator 1
 10061 0268 14301BE5 		ldr	r3, [fp, #-20]
 10062 026c FF3803E2 		and	r3, r3, #16711680
 10063 0270 020853E3 		cmp	r3, #131072
 10064 0274 0100001A 		bne	.L643
 10065              		.loc 1 4696 5 discriminator 10
 10066 0278 0830E0E3 		mvn	r3, #8
 10067              		.loc 1 4696 5
 10068 027c E60000EA 		b	.L630
 10069              	.L643:
 10070              		.loc 1 4696 5 discriminator 11
 10071 0280 14301BE5 		ldr	r3, [fp, #-20]
 10072 0284 233CA0E1 		lsr	r3, r3, #24
 10073 0288 030053E3 		cmp	r3, #3
 10074 028c 0100000A 		beq	.L644
 10075              		.loc 1 4696 5 discriminator 12
 10076 0290 0130E0E3 		mvn	r3, #1
 10077              		.loc 1 4696 5
 10078 0294 E00000EA 		b	.L630
 10079              	.L644:
 10080              		.loc 1 4696 5 discriminator 13
 10081 0298 34301BE5 		ldr	r3, [fp, #-52]
 10082 029c 7F2003E2 		and	r2, r3, #127
 10083 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10084 02a4 143093E5 		ldr	r3, [r3, #20]
 10085 02a8 030052E1 		cmp	r2, r3
 10086 02ac 0100003A 		bcc	.L645
 10087              		.loc 1 4696 5 discriminator 14
 10088 02b0 0230E0E3 		mvn	r3, #2
 10089              		.loc 1 4696 5
 10090 02b4 D80000EA 		b	.L630
 10091              	.L645:
 10092              		.loc 1 4696 5 discriminator 15
 10093 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10094 02bc 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 261


 10095 02c0 8322A0E1 		lsl	r2, r3, #5
 10096 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10097 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10098 02cc 033082E0 		add	r3, r2, r3
 10099 02d0 0C300BE5 		str	r3, [fp, #-12]
 10100 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10101 02d8 0300A0E1 		mov	r0, r3
 10102 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10103 02e0 14000BE5 		str	r0, [fp, #-20]
 10104              		.loc 1 4696 5 discriminator 1
 10105 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10106 02e8 FF3803E2 		and	r3, r3, #16711680
 10107 02ec 020853E3 		cmp	r3, #131072
 10108 02f0 0100001A 		bne	.L646
 10109              		.loc 1 4696 5 discriminator 16
 10110 02f4 0830E0E3 		mvn	r3, #8
 10111              		.loc 1 4696 5
 10112 02f8 C70000EA 		b	.L630
 10113              	.L646:
 10114              		.loc 1 4696 5 discriminator 17
 10115 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10116 0300 233CA0E1 		lsr	r3, r3, #24
 10117 0304 030053E3 		cmp	r3, #3
 10118 0308 0100000A 		beq	.L641
 10119              		.loc 1 4696 5 discriminator 18
 10120 030c 0130E0E3 		mvn	r3, #1
 10121              		.loc 1 4696 5
 10122 0310 C10000EA 		b	.L630
 10123              	.L641:
4697:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4698:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4699:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10124              		.loc 1 4699 5 is_stmt 1
 10125 0314 04309BE5 		ldr	r3, [fp, #4]
 10126 0318 803003E2 		and	r3, r3, #128
 10127 031c 000053E3 		cmp	r3, #0
 10128 0320 1C00001A 		bne	.L647
 10129              		.loc 1 4699 5 is_stmt 0 discriminator 1
 10130 0324 28301BE5 		ldr	r3, [fp, #-40]
 10131 0328 142093E5 		ldr	r2, [r3, #20]
 10132 032c 04309BE5 		ldr	r3, [fp, #4]
 10133 0330 030052E1 		cmp	r2, r3
 10134 0334 0100008A 		bhi	.L648
 10135              		.loc 1 4699 5 discriminator 3
 10136 0338 0230E0E3 		mvn	r3, #2
 10137              		.loc 1 4699 5
 10138 033c B60000EA 		b	.L630
 10139              	.L648:
 10140              		.loc 1 4699 5 discriminator 4
 10141 0340 04309BE5 		ldr	r3, [fp, #4]
 10142 0344 8322A0E1 		lsl	r2, r3, #5
 10143 0348 28301BE5 		ldr	r3, [fp, #-40]
 10144 034c 0C3093E5 		ldr	r3, [r3, #12]
 10145 0350 033082E0 		add	r3, r2, r3
 10146 0354 10300BE5 		str	r3, [fp, #-16]
 10147 0358 10301BE5 		ldr	r3, [fp, #-16]
 10148 035c 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 262


 10149 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10150 0364 14000BE5 		str	r0, [fp, #-20]
 10151              		.loc 1 4699 5 discriminator 1
 10152 0368 14301BE5 		ldr	r3, [fp, #-20]
 10153 036c FF3803E2 		and	r3, r3, #16711680
 10154 0370 020853E3 		cmp	r3, #131072
 10155 0374 0100001A 		bne	.L649
 10156              		.loc 1 4699 5 discriminator 5
 10157 0378 0830E0E3 		mvn	r3, #8
 10158              		.loc 1 4699 5
 10159 037c A60000EA 		b	.L630
 10160              	.L649:
 10161              		.loc 1 4699 5 discriminator 6
 10162 0380 14301BE5 		ldr	r3, [fp, #-20]
 10163 0384 233CA0E1 		lsr	r3, r3, #24
 10164 0388 040053E3 		cmp	r3, #4
 10165 038c 3F00000A 		beq	.L650
 10166              		.loc 1 4699 5 discriminator 7
 10167 0390 0130E0E3 		mvn	r3, #1
 10168              		.loc 1 4699 5
 10169 0394 A00000EA 		b	.L630
 10170              	.L647:
 10171              		.loc 1 4699 5 discriminator 2
 10172 0398 04309BE5 		ldr	r3, [fp, #4]
 10173 039c 2324A0E1 		lsr	r2, r3, #8
 10174 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10175 03a4 143093E5 		ldr	r3, [r3, #20]
 10176 03a8 030052E1 		cmp	r2, r3
 10177 03ac 0100003A 		bcc	.L651
 10178              		.loc 1 4699 5 discriminator 8
 10179 03b0 0230E0E3 		mvn	r3, #2
 10180              		.loc 1 4699 5
 10181 03b4 980000EA 		b	.L630
 10182              	.L651:
 10183              		.loc 1 4699 5 discriminator 9
 10184 03b8 04309BE5 		ldr	r3, [fp, #4]
 10185 03bc 2334A0E1 		lsr	r3, r3, #8
 10186 03c0 8322A0E1 		lsl	r2, r3, #5
 10187 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10188 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10189 03cc 033082E0 		add	r3, r2, r3
 10190 03d0 10300BE5 		str	r3, [fp, #-16]
 10191 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10192 03d8 0300A0E1 		mov	r0, r3
 10193 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10194 03e0 14000BE5 		str	r0, [fp, #-20]
 10195              		.loc 1 4699 5 discriminator 1
 10196 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10197 03e8 FF3803E2 		and	r3, r3, #16711680
 10198 03ec 020853E3 		cmp	r3, #131072
 10199 03f0 0100001A 		bne	.L652
 10200              		.loc 1 4699 5 discriminator 10
 10201 03f4 0830E0E3 		mvn	r3, #8
 10202              		.loc 1 4699 5
 10203 03f8 870000EA 		b	.L630
 10204              	.L652:
 10205              		.loc 1 4699 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 263


 10206 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10207 0400 233CA0E1 		lsr	r3, r3, #24
 10208 0404 030053E3 		cmp	r3, #3
 10209 0408 0100000A 		beq	.L653
 10210              		.loc 1 4699 5 discriminator 12
 10211 040c 0130E0E3 		mvn	r3, #1
 10212              		.loc 1 4699 5
 10213 0410 810000EA 		b	.L630
 10214              	.L653:
 10215              		.loc 1 4699 5 discriminator 13
 10216 0414 04309BE5 		ldr	r3, [fp, #4]
 10217 0418 7F2003E2 		and	r2, r3, #127
 10218 041c 10301BE5 		ldr	r3, [fp, #-16]
 10219 0420 143093E5 		ldr	r3, [r3, #20]
 10220 0424 030052E1 		cmp	r2, r3
 10221 0428 0100003A 		bcc	.L654
 10222              		.loc 1 4699 5 discriminator 14
 10223 042c 0230E0E3 		mvn	r3, #2
 10224              		.loc 1 4699 5
 10225 0430 790000EA 		b	.L630
 10226              	.L654:
 10227              		.loc 1 4699 5 discriminator 15
 10228 0434 04309BE5 		ldr	r3, [fp, #4]
 10229 0438 7F3003E2 		and	r3, r3, #127
 10230 043c 8322A0E1 		lsl	r2, r3, #5
 10231 0440 10301BE5 		ldr	r3, [fp, #-16]
 10232 0444 0C3093E5 		ldr	r3, [r3, #12]
 10233 0448 033082E0 		add	r3, r2, r3
 10234 044c 10300BE5 		str	r3, [fp, #-16]
 10235 0450 10301BE5 		ldr	r3, [fp, #-16]
 10236 0454 0300A0E1 		mov	r0, r3
 10237 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10238 045c 14000BE5 		str	r0, [fp, #-20]
 10239              		.loc 1 4699 5 discriminator 1
 10240 0460 14301BE5 		ldr	r3, [fp, #-20]
 10241 0464 FF3803E2 		and	r3, r3, #16711680
 10242 0468 020853E3 		cmp	r3, #131072
 10243 046c 0100001A 		bne	.L655
 10244              		.loc 1 4699 5 discriminator 16
 10245 0470 0830E0E3 		mvn	r3, #8
 10246              		.loc 1 4699 5
 10247 0474 680000EA 		b	.L630
 10248              	.L655:
 10249              		.loc 1 4699 5 discriminator 17
 10250 0478 14301BE5 		ldr	r3, [fp, #-20]
 10251 047c 233CA0E1 		lsr	r3, r3, #24
 10252 0480 040053E3 		cmp	r3, #4
 10253 0484 0100000A 		beq	.L650
 10254              		.loc 1 4699 5 discriminator 18
 10255 0488 0130E0E3 		mvn	r3, #1
 10256              		.loc 1 4699 5
 10257 048c 620000EA 		b	.L630
 10258              	.L650:
4700:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4701:../../Source/Kernel/rme_kernel.c **** #endif
4702:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4703:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 264


 10259              		.loc 1 4703 5 is_stmt 1
 10260 0490 08301BE5 		ldr	r3, [fp, #-8]
 10261 0494 083093E5 		ldr	r3, [r3, #8]
 10262 0498 013003E2 		and	r3, r3, #1
 10263 049c 000053E3 		cmp	r3, #0
 10264 04a0 0100001A 		bne	.L656
 10265              		.loc 1 4703 5 is_stmt 0 discriminator 1
 10266 04a4 0630E0E3 		mvn	r3, #6
 10267              		.loc 1 4703 5
 10268 04a8 5B0000EA 		b	.L630
 10269              	.L656:
4704:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10270              		.loc 1 4704 5 is_stmt 1
 10271 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10272 04b0 083093E5 		ldr	r3, [r3, #8]
 10273 04b4 403003E2 		and	r3, r3, #64
 10274 04b8 000053E3 		cmp	r3, #0
 10275 04bc 0100001A 		bne	.L657
 10276              		.loc 1 4704 5 is_stmt 0 discriminator 1
 10277 04c0 0630E0E3 		mvn	r3, #6
 10278              		.loc 1 4704 5
 10279 04c4 540000EA 		b	.L630
 10280              	.L657:
4705:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4706:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10281              		.loc 1 4706 5 is_stmt 1
 10282 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10283 04cc 083093E5 		ldr	r3, [r3, #8]
 10284 04d0 403003E2 		and	r3, r3, #64
 10285 04d4 000053E3 		cmp	r3, #0
 10286 04d8 0100001A 		bne	.L658
 10287              		.loc 1 4706 5 is_stmt 0 discriminator 1
 10288 04dc 0630E0E3 		mvn	r3, #6
 10289              		.loc 1 4706 5
 10290 04e0 4D0000EA 		b	.L630
 10291              	.L658:
4707:../../Source/Kernel/rme_kernel.c **** #endif
4708:../../Source/Kernel/rme_kernel.c ****     
4709:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4710:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10292              		.loc 1 4710 5 is_stmt 1
 10293 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10294 04e8 142093E5 		ldr	r2, [r3, #20]
 10295 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10296 04f0 030052E1 		cmp	r2, r3
 10297 04f4 0100008A 		bhi	.L659
 10298              		.loc 1 4710 5 is_stmt 0 discriminator 1
 10299 04f8 0230E0E3 		mvn	r3, #2
 10300              		.loc 1 4710 5
 10301 04fc 460000EA 		b	.L630
 10302              	.L659:
 10303              		.loc 1 4710 5 discriminator 2
 10304 0500 30301BE5 		ldr	r3, [fp, #-48]
 10305 0504 8322A0E1 		lsl	r2, r3, #5
 10306 0508 08301BE5 		ldr	r3, [fp, #-8]
 10307 050c 0C3093E5 		ldr	r3, [r3, #12]
 10308 0510 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 265


 10309 0514 18300BE5 		str	r3, [fp, #-24]
4711:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4712:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10310              		.loc 1 4712 5 is_stmt 1
 10311 0518 18301BE5 		ldr	r3, [fp, #-24]
 10312 051c 0128A0E3 		mov	r2, #65536
 10313 0520 0010A0E3 		mov	r1, #0
 10314 0524 0300A0E1 		mov	r0, r3
 10315 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10316 052c 0030A0E1 		mov	r3, r0
 10317              		.loc 1 4712 5 is_stmt 0 discriminator 1
 10318 0530 000053E3 		cmp	r3, #0
 10319 0534 0100001A 		bne	.L660
 10320 0538 0430E0E3 		mvn	r3, #4
 10321              		.loc 1 4712 5
 10322 053c 360000EA 		b	.L630
 10323              	.L660:
 10324              		.loc 1 4712 5 discriminator 2
 10325 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10326 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10327 0548 002093E5 		ldr	r2, [r3]
 10328 054c 18301BE5 		ldr	r3, [fp, #-24]
 10329 0550 102083E5 		str	r2, [r3, #16]
4713:../../Source/Kernel/rme_kernel.c **** 
4714:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4715:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=1U;
 10330              		.loc 1 4715 27 is_stmt 1
 10331 0554 18301BE5 		ldr	r3, [fp, #-24]
 10332 0558 0120A0E3 		mov	r2, #1
 10333 055c 042083E5 		str	r2, [r3, #4]
4716:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10334              		.loc 1 4716 25
 10335 0560 18301BE5 		ldr	r3, [fp, #-24]
 10336 0564 0020A0E3 		mov	r2, #0
 10337 0568 0C2083E5 		str	r2, [r3, #12]
4717:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_INV|RME_PRC_FLAG_THD;
 10338              		.loc 1 4717 23
 10339 056c 18301BE5 		ldr	r3, [fp, #-24]
 10340 0570 0320A0E3 		mov	r2, #3
 10341 0574 082083E5 		str	r2, [r3, #8]
4718:../../Source/Kernel/rme_kernel.c **** 
4719:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4720:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10342              		.loc 1 4720 13
 10343 0578 0C301BE5 		ldr	r3, [fp, #-12]
 10344 057c 003093E5 		ldr	r3, [r3]
 10345 0580 7330FFE6 		uxth	r3, r3
 10346 0584 000053E3 		cmp	r3, #0
 10347 0588 0200000A 		beq	.L661
 10348              		.loc 1 4720 13 is_stmt 0 discriminator 1
 10349 058c 0C301BE5 		ldr	r3, [fp, #-12]
 10350 0590 043093E5 		ldr	r3, [r3, #4]
 10351 0594 000000EA 		b	.L662
 10352              	.L661:
 10353              		.loc 1 4720 13 discriminator 2
 10354 0598 0C301BE5 		ldr	r3, [fp, #-12]
 10355              	.L662:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 266


 10356              		.loc 1 4720 12 is_stmt 1 discriminator 4
 10357 059c 1C300BE5 		str	r3, [fp, #-28]
4721:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4722:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10358              		.loc 1 4722 13
 10359 05a0 10301BE5 		ldr	r3, [fp, #-16]
 10360 05a4 003093E5 		ldr	r3, [r3]
 10361 05a8 7330FFE6 		uxth	r3, r3
 10362 05ac 000053E3 		cmp	r3, #0
 10363 05b0 0200000A 		beq	.L663
 10364              		.loc 1 4722 13 is_stmt 0 discriminator 1
 10365 05b4 10301BE5 		ldr	r3, [fp, #-16]
 10366 05b8 043093E5 		ldr	r3, [r3, #4]
 10367 05bc 000000EA 		b	.L664
 10368              	.L663:
 10369              		.loc 1 4722 13 discriminator 2
 10370 05c0 10301BE5 		ldr	r3, [fp, #-16]
 10371              	.L664:
 10372              		.loc 1 4722 12 is_stmt 1 discriminator 4
 10373 05c4 20300BE5 		str	r3, [fp, #-32]
4723:../../Source/Kernel/rme_kernel.c **** #endif
4724:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10374              		.loc 1 4724 17
 10375 05c8 18301BE5 		ldr	r3, [fp, #-24]
 10376 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 10377 05d0 142083E5 		str	r2, [r3, #20]
4725:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4726:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 10378              		.loc 1 4726 17
 10379 05d4 18301BE5 		ldr	r3, [fp, #-24]
 10380 05d8 20201BE5 		ldr	r2, [fp, #-32]
 10381 05dc 182083E5 		str	r2, [r3, #24]
4727:../../Source/Kernel/rme_kernel.c **** #else
4728:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4729:../../Source/Kernel/rme_kernel.c **** #endif
4730:../../Source/Kernel/rme_kernel.c ****     
4731:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4732:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10382              		.loc 1 4732 5
 10383 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 10384 05e4 043083E2 		add	r3, r3, #4
 10385 05e8 0110A0E3 		mov	r1, #1
 10386 05ec 0300A0E1 		mov	r0, r3
 10387 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4733:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4734:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10388              		.loc 1 4734 5
 10389 05f4 20301BE5 		ldr	r3, [fp, #-32]
 10390 05f8 043083E2 		add	r3, r3, #4
 10391 05fc 0110A0E3 		mov	r1, #1
 10392 0600 0300A0E1 		mov	r0, r3
 10393 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4735:../../Source/Kernel/rme_kernel.c **** #endif
4736:../../Source/Kernel/rme_kernel.c **** 
4737:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4738:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10394              		.loc 1 4738 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 267


 10395 0608 18301BE5 		ldr	r3, [fp, #-24]
 10396 060c 0514A0E3 		mov	r1, #83886080
 10397 0610 0300A0E1 		mov	r0, r3
 10398 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4739:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4740:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4741:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4742:../../Source/Kernel/rme_kernel.c **** 
4743:../../Source/Kernel/rme_kernel.c ****     return 0;
 10399              		.loc 1 4743 12
 10400 0618 0030A0E3 		mov	r3, #0
 10401              	.L630:
4744:../../Source/Kernel/rme_kernel.c **** }
 10402              		.loc 1 4744 1
 10403 061c 0300A0E1 		mov	r0, r3
 10404 0620 04D04BE2 		sub	sp, fp, #4
 10405              		.cfi_def_cfa 13, 8
 10406              		@ sp needed
 10407 0624 0088BDE8 		pop	{fp, pc}
 10408              		.cfi_endproc
 10409              	.LFE50:
 10411              		.section	.text._RME_Prc_Crt,"ax",%progbits
 10412              		.align	2
 10413              		.syntax unified
 10414              		.arm
 10416              	_RME_Prc_Crt:
 10417              	.LFB51:
4745:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Boot_Crt ********************************************/
4746:../../Source/Kernel/rme_kernel.c **** 
4747:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Crt ******************************************************
4748:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4749:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4750:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4751:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4752:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4753:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4754:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4755:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4756:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4757:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4758:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4759:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4760:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4761:../../Source/Kernel/rme_kernel.c ****                                   this process.
4762:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4763:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4764:../../Source/Kernel/rme_kernel.c ****                                   address.
4765:../../Source/Kernel/rme_kernel.c **** Output      : None.
4766:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4767:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4768:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4769:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4770:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4771:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4772:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4773:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4774:../../Source/Kernel/rme_kernel.c **** #else
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 268


4775:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4776:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4777:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4778:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4779:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4780:../../Source/Kernel/rme_kernel.c **** #endif
4781:../../Source/Kernel/rme_kernel.c **** {
 10418              		.loc 1 4781 1
 10419              		.cfi_startproc
 10420              		@ args = 4, pretend = 0, frame = 48
 10421              		@ frame_needed = 1, uses_anonymous_args = 0
 10422 0000 00482DE9 		push	{fp, lr}
 10423              		.cfi_def_cfa_offset 8
 10424              		.cfi_offset 11, -8
 10425              		.cfi_offset 14, -4
 10426 0004 04B08DE2 		add	fp, sp, #4
 10427              		.cfi_def_cfa 11, 4
 10428 0008 30D04DE2 		sub	sp, sp, #48
 10429 000c 28000BE5 		str	r0, [fp, #-40]
 10430 0010 2C100BE5 		str	r1, [fp, #-44]
 10431 0014 30200BE5 		str	r2, [fp, #-48]
 10432 0018 34300BE5 		str	r3, [fp, #-52]
4782:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4783:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4784:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4785:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4786:../../Source/Kernel/rme_kernel.c **** #endif
4787:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4788:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4789:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4790:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4791:../../Source/Kernel/rme_kernel.c **** #endif
4792:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4793:../../Source/Kernel/rme_kernel.c ****     
4794:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4795:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10433              		.loc 1 4795 5
 10434 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10435 0020 803003E2 		and	r3, r3, #128
 10436 0024 000053E3 		cmp	r3, #0
 10437 0028 1C00001A 		bne	.L666
 10438              		.loc 1 4795 5 is_stmt 0 discriminator 1
 10439 002c 28301BE5 		ldr	r3, [fp, #-40]
 10440 0030 142093E5 		ldr	r2, [r3, #20]
 10441 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10442 0038 030052E1 		cmp	r2, r3
 10443 003c 0100008A 		bhi	.L667
 10444              		.loc 1 4795 5 discriminator 3
 10445 0040 0230E0E3 		mvn	r3, #2
 10446              		.loc 1 4795 5
 10447 0044 740100EA 		b	.L668
 10448              	.L667:
 10449              		.loc 1 4795 5 discriminator 4
 10450 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10451 004c 8322A0E1 		lsl	r2, r3, #5
 10452 0050 28301BE5 		ldr	r3, [fp, #-40]
 10453 0054 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 269


 10454 0058 033082E0 		add	r3, r2, r3
 10455 005c 08300BE5 		str	r3, [fp, #-8]
 10456 0060 08301BE5 		ldr	r3, [fp, #-8]
 10457 0064 0300A0E1 		mov	r0, r3
 10458 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10459 006c 14000BE5 		str	r0, [fp, #-20]
 10460              		.loc 1 4795 5 discriminator 1
 10461 0070 14301BE5 		ldr	r3, [fp, #-20]
 10462 0074 FF3803E2 		and	r3, r3, #16711680
 10463 0078 020853E3 		cmp	r3, #131072
 10464 007c 0100001A 		bne	.L669
 10465              		.loc 1 4795 5 discriminator 5
 10466 0080 0830E0E3 		mvn	r3, #8
 10467              		.loc 1 4795 5
 10468 0084 640100EA 		b	.L668
 10469              	.L669:
 10470              		.loc 1 4795 5 discriminator 6
 10471 0088 14301BE5 		ldr	r3, [fp, #-20]
 10472 008c 233CA0E1 		lsr	r3, r3, #24
 10473 0090 030053E3 		cmp	r3, #3
 10474 0094 3F00000A 		beq	.L670
 10475              		.loc 1 4795 5 discriminator 7
 10476 0098 0130E0E3 		mvn	r3, #1
 10477              		.loc 1 4795 5
 10478 009c 5E0100EA 		b	.L668
 10479              	.L666:
 10480              		.loc 1 4795 5 discriminator 2
 10481 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 10482 00a4 2324A0E1 		lsr	r2, r3, #8
 10483 00a8 28301BE5 		ldr	r3, [fp, #-40]
 10484 00ac 143093E5 		ldr	r3, [r3, #20]
 10485 00b0 030052E1 		cmp	r2, r3
 10486 00b4 0100003A 		bcc	.L671
 10487              		.loc 1 4795 5 discriminator 8
 10488 00b8 0230E0E3 		mvn	r3, #2
 10489              		.loc 1 4795 5
 10490 00bc 560100EA 		b	.L668
 10491              	.L671:
 10492              		.loc 1 4795 5 discriminator 9
 10493 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10494 00c4 2334A0E1 		lsr	r3, r3, #8
 10495 00c8 8322A0E1 		lsl	r2, r3, #5
 10496 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10497 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10498 00d4 033082E0 		add	r3, r2, r3
 10499 00d8 08300BE5 		str	r3, [fp, #-8]
 10500 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10501 00e0 0300A0E1 		mov	r0, r3
 10502 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10503 00e8 14000BE5 		str	r0, [fp, #-20]
 10504              		.loc 1 4795 5 discriminator 1
 10505 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10506 00f0 FF3803E2 		and	r3, r3, #16711680
 10507 00f4 020853E3 		cmp	r3, #131072
 10508 00f8 0100001A 		bne	.L672
 10509              		.loc 1 4795 5 discriminator 10
 10510 00fc 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 270


 10511              		.loc 1 4795 5
 10512 0100 450100EA 		b	.L668
 10513              	.L672:
 10514              		.loc 1 4795 5 discriminator 11
 10515 0104 14301BE5 		ldr	r3, [fp, #-20]
 10516 0108 233CA0E1 		lsr	r3, r3, #24
 10517 010c 030053E3 		cmp	r3, #3
 10518 0110 0100000A 		beq	.L673
 10519              		.loc 1 4795 5 discriminator 12
 10520 0114 0130E0E3 		mvn	r3, #1
 10521              		.loc 1 4795 5
 10522 0118 3F0100EA 		b	.L668
 10523              	.L673:
 10524              		.loc 1 4795 5 discriminator 13
 10525 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10526 0120 7F2003E2 		and	r2, r3, #127
 10527 0124 08301BE5 		ldr	r3, [fp, #-8]
 10528 0128 143093E5 		ldr	r3, [r3, #20]
 10529 012c 030052E1 		cmp	r2, r3
 10530 0130 0100003A 		bcc	.L674
 10531              		.loc 1 4795 5 discriminator 14
 10532 0134 0230E0E3 		mvn	r3, #2
 10533              		.loc 1 4795 5
 10534 0138 370100EA 		b	.L668
 10535              	.L674:
 10536              		.loc 1 4795 5 discriminator 15
 10537 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10538 0140 7F3003E2 		and	r3, r3, #127
 10539 0144 8322A0E1 		lsl	r2, r3, #5
 10540 0148 08301BE5 		ldr	r3, [fp, #-8]
 10541 014c 0C3093E5 		ldr	r3, [r3, #12]
 10542 0150 033082E0 		add	r3, r2, r3
 10543 0154 08300BE5 		str	r3, [fp, #-8]
 10544 0158 08301BE5 		ldr	r3, [fp, #-8]
 10545 015c 0300A0E1 		mov	r0, r3
 10546 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10547 0164 14000BE5 		str	r0, [fp, #-20]
 10548              		.loc 1 4795 5 discriminator 1
 10549 0168 14301BE5 		ldr	r3, [fp, #-20]
 10550 016c FF3803E2 		and	r3, r3, #16711680
 10551 0170 020853E3 		cmp	r3, #131072
 10552 0174 0100001A 		bne	.L675
 10553              		.loc 1 4795 5 discriminator 16
 10554 0178 0830E0E3 		mvn	r3, #8
 10555              		.loc 1 4795 5
 10556 017c 260100EA 		b	.L668
 10557              	.L675:
 10558              		.loc 1 4795 5 discriminator 17
 10559 0180 14301BE5 		ldr	r3, [fp, #-20]
 10560 0184 233CA0E1 		lsr	r3, r3, #24
 10561 0188 030053E3 		cmp	r3, #3
 10562 018c 0100000A 		beq	.L670
 10563              		.loc 1 4795 5 discriminator 18
 10564 0190 0130E0E3 		mvn	r3, #1
 10565              		.loc 1 4795 5
 10566 0194 200100EA 		b	.L668
 10567              	.L670:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 271


4796:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4797:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10568              		.loc 1 4797 5 is_stmt 1
 10569 0198 34301BE5 		ldr	r3, [fp, #-52]
 10570 019c 803003E2 		and	r3, r3, #128
 10571 01a0 000053E3 		cmp	r3, #0
 10572 01a4 1C00001A 		bne	.L676
 10573              		.loc 1 4797 5 is_stmt 0 discriminator 1
 10574 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10575 01ac 142093E5 		ldr	r2, [r3, #20]
 10576 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10577 01b4 030052E1 		cmp	r2, r3
 10578 01b8 0100008A 		bhi	.L677
 10579              		.loc 1 4797 5 discriminator 3
 10580 01bc 0230E0E3 		mvn	r3, #2
 10581              		.loc 1 4797 5
 10582 01c0 150100EA 		b	.L668
 10583              	.L677:
 10584              		.loc 1 4797 5 discriminator 4
 10585 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10586 01c8 8322A0E1 		lsl	r2, r3, #5
 10587 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10588 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10589 01d4 033082E0 		add	r3, r2, r3
 10590 01d8 0C300BE5 		str	r3, [fp, #-12]
 10591 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10592 01e0 0300A0E1 		mov	r0, r3
 10593 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10594 01e8 14000BE5 		str	r0, [fp, #-20]
 10595              		.loc 1 4797 5 discriminator 1
 10596 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10597 01f0 FF3803E2 		and	r3, r3, #16711680
 10598 01f4 020853E3 		cmp	r3, #131072
 10599 01f8 0100001A 		bne	.L678
 10600              		.loc 1 4797 5 discriminator 5
 10601 01fc 0830E0E3 		mvn	r3, #8
 10602              		.loc 1 4797 5
 10603 0200 050100EA 		b	.L668
 10604              	.L678:
 10605              		.loc 1 4797 5 discriminator 6
 10606 0204 14301BE5 		ldr	r3, [fp, #-20]
 10607 0208 233CA0E1 		lsr	r3, r3, #24
 10608 020c 030053E3 		cmp	r3, #3
 10609 0210 3F00000A 		beq	.L679
 10610              		.loc 1 4797 5 discriminator 7
 10611 0214 0130E0E3 		mvn	r3, #1
 10612              		.loc 1 4797 5
 10613 0218 FF0000EA 		b	.L668
 10614              	.L676:
 10615              		.loc 1 4797 5 discriminator 2
 10616 021c 34301BE5 		ldr	r3, [fp, #-52]
 10617 0220 2324A0E1 		lsr	r2, r3, #8
 10618 0224 28301BE5 		ldr	r3, [fp, #-40]
 10619 0228 143093E5 		ldr	r3, [r3, #20]
 10620 022c 030052E1 		cmp	r2, r3
 10621 0230 0100003A 		bcc	.L680
 10622              		.loc 1 4797 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 272


 10623 0234 0230E0E3 		mvn	r3, #2
 10624              		.loc 1 4797 5
 10625 0238 F70000EA 		b	.L668
 10626              	.L680:
 10627              		.loc 1 4797 5 discriminator 9
 10628 023c 34301BE5 		ldr	r3, [fp, #-52]
 10629 0240 2334A0E1 		lsr	r3, r3, #8
 10630 0244 8322A0E1 		lsl	r2, r3, #5
 10631 0248 28301BE5 		ldr	r3, [fp, #-40]
 10632 024c 0C3093E5 		ldr	r3, [r3, #12]
 10633 0250 033082E0 		add	r3, r2, r3
 10634 0254 0C300BE5 		str	r3, [fp, #-12]
 10635 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10636 025c 0300A0E1 		mov	r0, r3
 10637 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10638 0264 14000BE5 		str	r0, [fp, #-20]
 10639              		.loc 1 4797 5 discriminator 1
 10640 0268 14301BE5 		ldr	r3, [fp, #-20]
 10641 026c FF3803E2 		and	r3, r3, #16711680
 10642 0270 020853E3 		cmp	r3, #131072
 10643 0274 0100001A 		bne	.L681
 10644              		.loc 1 4797 5 discriminator 10
 10645 0278 0830E0E3 		mvn	r3, #8
 10646              		.loc 1 4797 5
 10647 027c E60000EA 		b	.L668
 10648              	.L681:
 10649              		.loc 1 4797 5 discriminator 11
 10650 0280 14301BE5 		ldr	r3, [fp, #-20]
 10651 0284 233CA0E1 		lsr	r3, r3, #24
 10652 0288 030053E3 		cmp	r3, #3
 10653 028c 0100000A 		beq	.L682
 10654              		.loc 1 4797 5 discriminator 12
 10655 0290 0130E0E3 		mvn	r3, #1
 10656              		.loc 1 4797 5
 10657 0294 E00000EA 		b	.L668
 10658              	.L682:
 10659              		.loc 1 4797 5 discriminator 13
 10660 0298 34301BE5 		ldr	r3, [fp, #-52]
 10661 029c 7F2003E2 		and	r2, r3, #127
 10662 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10663 02a4 143093E5 		ldr	r3, [r3, #20]
 10664 02a8 030052E1 		cmp	r2, r3
 10665 02ac 0100003A 		bcc	.L683
 10666              		.loc 1 4797 5 discriminator 14
 10667 02b0 0230E0E3 		mvn	r3, #2
 10668              		.loc 1 4797 5
 10669 02b4 D80000EA 		b	.L668
 10670              	.L683:
 10671              		.loc 1 4797 5 discriminator 15
 10672 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10673 02bc 7F3003E2 		and	r3, r3, #127
 10674 02c0 8322A0E1 		lsl	r2, r3, #5
 10675 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10676 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10677 02cc 033082E0 		add	r3, r2, r3
 10678 02d0 0C300BE5 		str	r3, [fp, #-12]
 10679 02d4 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 273


 10680 02d8 0300A0E1 		mov	r0, r3
 10681 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10682 02e0 14000BE5 		str	r0, [fp, #-20]
 10683              		.loc 1 4797 5 discriminator 1
 10684 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10685 02e8 FF3803E2 		and	r3, r3, #16711680
 10686 02ec 020853E3 		cmp	r3, #131072
 10687 02f0 0100001A 		bne	.L684
 10688              		.loc 1 4797 5 discriminator 16
 10689 02f4 0830E0E3 		mvn	r3, #8
 10690              		.loc 1 4797 5
 10691 02f8 C70000EA 		b	.L668
 10692              	.L684:
 10693              		.loc 1 4797 5 discriminator 17
 10694 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10695 0300 233CA0E1 		lsr	r3, r3, #24
 10696 0304 030053E3 		cmp	r3, #3
 10697 0308 0100000A 		beq	.L679
 10698              		.loc 1 4797 5 discriminator 18
 10699 030c 0130E0E3 		mvn	r3, #1
 10700              		.loc 1 4797 5
 10701 0310 C10000EA 		b	.L668
 10702              	.L679:
4798:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4799:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4800:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10703              		.loc 1 4800 5 is_stmt 1
 10704 0314 04309BE5 		ldr	r3, [fp, #4]
 10705 0318 803003E2 		and	r3, r3, #128
 10706 031c 000053E3 		cmp	r3, #0
 10707 0320 1C00001A 		bne	.L685
 10708              		.loc 1 4800 5 is_stmt 0 discriminator 1
 10709 0324 28301BE5 		ldr	r3, [fp, #-40]
 10710 0328 142093E5 		ldr	r2, [r3, #20]
 10711 032c 04309BE5 		ldr	r3, [fp, #4]
 10712 0330 030052E1 		cmp	r2, r3
 10713 0334 0100008A 		bhi	.L686
 10714              		.loc 1 4800 5 discriminator 3
 10715 0338 0230E0E3 		mvn	r3, #2
 10716              		.loc 1 4800 5
 10717 033c B60000EA 		b	.L668
 10718              	.L686:
 10719              		.loc 1 4800 5 discriminator 4
 10720 0340 04309BE5 		ldr	r3, [fp, #4]
 10721 0344 8322A0E1 		lsl	r2, r3, #5
 10722 0348 28301BE5 		ldr	r3, [fp, #-40]
 10723 034c 0C3093E5 		ldr	r3, [r3, #12]
 10724 0350 033082E0 		add	r3, r2, r3
 10725 0354 10300BE5 		str	r3, [fp, #-16]
 10726 0358 10301BE5 		ldr	r3, [fp, #-16]
 10727 035c 0300A0E1 		mov	r0, r3
 10728 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10729 0364 14000BE5 		str	r0, [fp, #-20]
 10730              		.loc 1 4800 5 discriminator 1
 10731 0368 14301BE5 		ldr	r3, [fp, #-20]
 10732 036c FF3803E2 		and	r3, r3, #16711680
 10733 0370 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 274


 10734 0374 0100001A 		bne	.L687
 10735              		.loc 1 4800 5 discriminator 5
 10736 0378 0830E0E3 		mvn	r3, #8
 10737              		.loc 1 4800 5
 10738 037c A60000EA 		b	.L668
 10739              	.L687:
 10740              		.loc 1 4800 5 discriminator 6
 10741 0380 14301BE5 		ldr	r3, [fp, #-20]
 10742 0384 233CA0E1 		lsr	r3, r3, #24
 10743 0388 040053E3 		cmp	r3, #4
 10744 038c 3F00000A 		beq	.L688
 10745              		.loc 1 4800 5 discriminator 7
 10746 0390 0130E0E3 		mvn	r3, #1
 10747              		.loc 1 4800 5
 10748 0394 A00000EA 		b	.L668
 10749              	.L685:
 10750              		.loc 1 4800 5 discriminator 2
 10751 0398 04309BE5 		ldr	r3, [fp, #4]
 10752 039c 2324A0E1 		lsr	r2, r3, #8
 10753 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10754 03a4 143093E5 		ldr	r3, [r3, #20]
 10755 03a8 030052E1 		cmp	r2, r3
 10756 03ac 0100003A 		bcc	.L689
 10757              		.loc 1 4800 5 discriminator 8
 10758 03b0 0230E0E3 		mvn	r3, #2
 10759              		.loc 1 4800 5
 10760 03b4 980000EA 		b	.L668
 10761              	.L689:
 10762              		.loc 1 4800 5 discriminator 9
 10763 03b8 04309BE5 		ldr	r3, [fp, #4]
 10764 03bc 2334A0E1 		lsr	r3, r3, #8
 10765 03c0 8322A0E1 		lsl	r2, r3, #5
 10766 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10767 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10768 03cc 033082E0 		add	r3, r2, r3
 10769 03d0 10300BE5 		str	r3, [fp, #-16]
 10770 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10771 03d8 0300A0E1 		mov	r0, r3
 10772 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10773 03e0 14000BE5 		str	r0, [fp, #-20]
 10774              		.loc 1 4800 5 discriminator 1
 10775 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10776 03e8 FF3803E2 		and	r3, r3, #16711680
 10777 03ec 020853E3 		cmp	r3, #131072
 10778 03f0 0100001A 		bne	.L690
 10779              		.loc 1 4800 5 discriminator 10
 10780 03f4 0830E0E3 		mvn	r3, #8
 10781              		.loc 1 4800 5
 10782 03f8 870000EA 		b	.L668
 10783              	.L690:
 10784              		.loc 1 4800 5 discriminator 11
 10785 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10786 0400 233CA0E1 		lsr	r3, r3, #24
 10787 0404 030053E3 		cmp	r3, #3
 10788 0408 0100000A 		beq	.L691
 10789              		.loc 1 4800 5 discriminator 12
 10790 040c 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 275


 10791              		.loc 1 4800 5
 10792 0410 810000EA 		b	.L668
 10793              	.L691:
 10794              		.loc 1 4800 5 discriminator 13
 10795 0414 04309BE5 		ldr	r3, [fp, #4]
 10796 0418 7F2003E2 		and	r2, r3, #127
 10797 041c 10301BE5 		ldr	r3, [fp, #-16]
 10798 0420 143093E5 		ldr	r3, [r3, #20]
 10799 0424 030052E1 		cmp	r2, r3
 10800 0428 0100003A 		bcc	.L692
 10801              		.loc 1 4800 5 discriminator 14
 10802 042c 0230E0E3 		mvn	r3, #2
 10803              		.loc 1 4800 5
 10804 0430 790000EA 		b	.L668
 10805              	.L692:
 10806              		.loc 1 4800 5 discriminator 15
 10807 0434 04309BE5 		ldr	r3, [fp, #4]
 10808 0438 7F3003E2 		and	r3, r3, #127
 10809 043c 8322A0E1 		lsl	r2, r3, #5
 10810 0440 10301BE5 		ldr	r3, [fp, #-16]
 10811 0444 0C3093E5 		ldr	r3, [r3, #12]
 10812 0448 033082E0 		add	r3, r2, r3
 10813 044c 10300BE5 		str	r3, [fp, #-16]
 10814 0450 10301BE5 		ldr	r3, [fp, #-16]
 10815 0454 0300A0E1 		mov	r0, r3
 10816 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10817 045c 14000BE5 		str	r0, [fp, #-20]
 10818              		.loc 1 4800 5 discriminator 1
 10819 0460 14301BE5 		ldr	r3, [fp, #-20]
 10820 0464 FF3803E2 		and	r3, r3, #16711680
 10821 0468 020853E3 		cmp	r3, #131072
 10822 046c 0100001A 		bne	.L693
 10823              		.loc 1 4800 5 discriminator 16
 10824 0470 0830E0E3 		mvn	r3, #8
 10825              		.loc 1 4800 5
 10826 0474 680000EA 		b	.L668
 10827              	.L693:
 10828              		.loc 1 4800 5 discriminator 17
 10829 0478 14301BE5 		ldr	r3, [fp, #-20]
 10830 047c 233CA0E1 		lsr	r3, r3, #24
 10831 0480 040053E3 		cmp	r3, #4
 10832 0484 0100000A 		beq	.L688
 10833              		.loc 1 4800 5 discriminator 18
 10834 0488 0130E0E3 		mvn	r3, #1
 10835              		.loc 1 4800 5
 10836 048c 620000EA 		b	.L668
 10837              	.L688:
4801:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4802:../../Source/Kernel/rme_kernel.c **** #endif
4803:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4804:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10838              		.loc 1 4804 5 is_stmt 1
 10839 0490 08301BE5 		ldr	r3, [fp, #-8]
 10840 0494 083093E5 		ldr	r3, [r3, #8]
 10841 0498 013003E2 		and	r3, r3, #1
 10842 049c 000053E3 		cmp	r3, #0
 10843 04a0 0100001A 		bne	.L694
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 276


 10844              		.loc 1 4804 5 is_stmt 0 discriminator 1
 10845 04a4 0630E0E3 		mvn	r3, #6
 10846              		.loc 1 4804 5
 10847 04a8 5B0000EA 		b	.L668
 10848              	.L694:
4805:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10849              		.loc 1 4805 5 is_stmt 1
 10850 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10851 04b0 083093E5 		ldr	r3, [r3, #8]
 10852 04b4 403003E2 		and	r3, r3, #64
 10853 04b8 000053E3 		cmp	r3, #0
 10854 04bc 0100001A 		bne	.L695
 10855              		.loc 1 4805 5 is_stmt 0 discriminator 1
 10856 04c0 0630E0E3 		mvn	r3, #6
 10857              		.loc 1 4805 5
 10858 04c4 540000EA 		b	.L668
 10859              	.L695:
4806:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4807:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10860              		.loc 1 4807 5 is_stmt 1
 10861 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10862 04cc 083093E5 		ldr	r3, [r3, #8]
 10863 04d0 403003E2 		and	r3, r3, #64
 10864 04d4 000053E3 		cmp	r3, #0
 10865 04d8 0100001A 		bne	.L696
 10866              		.loc 1 4807 5 is_stmt 0 discriminator 1
 10867 04dc 0630E0E3 		mvn	r3, #6
 10868              		.loc 1 4807 5
 10869 04e0 4D0000EA 		b	.L668
 10870              	.L696:
4808:../../Source/Kernel/rme_kernel.c **** #endif
4809:../../Source/Kernel/rme_kernel.c ****     
4810:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4811:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10871              		.loc 1 4811 5 is_stmt 1
 10872 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10873 04e8 142093E5 		ldr	r2, [r3, #20]
 10874 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10875 04f0 030052E1 		cmp	r2, r3
 10876 04f4 0100008A 		bhi	.L697
 10877              		.loc 1 4811 5 is_stmt 0 discriminator 1
 10878 04f8 0230E0E3 		mvn	r3, #2
 10879              		.loc 1 4811 5
 10880 04fc 460000EA 		b	.L668
 10881              	.L697:
 10882              		.loc 1 4811 5 discriminator 2
 10883 0500 30301BE5 		ldr	r3, [fp, #-48]
 10884 0504 8322A0E1 		lsl	r2, r3, #5
 10885 0508 08301BE5 		ldr	r3, [fp, #-8]
 10886 050c 0C3093E5 		ldr	r3, [r3, #12]
 10887 0510 033082E0 		add	r3, r2, r3
 10888 0514 18300BE5 		str	r3, [fp, #-24]
4812:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4813:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10889              		.loc 1 4813 5 is_stmt 1
 10890 0518 18301BE5 		ldr	r3, [fp, #-24]
 10891 051c 0128A0E3 		mov	r2, #65536
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 277


 10892 0520 0010A0E3 		mov	r1, #0
 10893 0524 0300A0E1 		mov	r0, r3
 10894 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10895 052c 0030A0E1 		mov	r3, r0
 10896              		.loc 1 4813 5 is_stmt 0 discriminator 1
 10897 0530 000053E3 		cmp	r3, #0
 10898 0534 0100001A 		bne	.L698
 10899 0538 0430E0E3 		mvn	r3, #4
 10900              		.loc 1 4813 5
 10901 053c 360000EA 		b	.L668
 10902              	.L698:
 10903              		.loc 1 4813 5 discriminator 2
 10904 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10905 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10906 0548 002093E5 		ldr	r2, [r3]
 10907 054c 18301BE5 		ldr	r3, [fp, #-24]
 10908 0550 102083E5 		str	r2, [r3, #16]
4814:../../Source/Kernel/rme_kernel.c ****     
4815:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4816:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=0U;
 10909              		.loc 1 4816 27 is_stmt 1
 10910 0554 18301BE5 		ldr	r3, [fp, #-24]
 10911 0558 0020A0E3 		mov	r2, #0
 10912 055c 042083E5 		str	r2, [r3, #4]
4817:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10913              		.loc 1 4817 25
 10914 0560 18301BE5 		ldr	r3, [fp, #-24]
 10915 0564 0020A0E3 		mov	r2, #0
 10916 0568 0C2083E5 		str	r2, [r3, #12]
4818:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_ALL;
 10917              		.loc 1 4818 23
 10918 056c 18301BE5 		ldr	r3, [fp, #-24]
 10919 0570 0F20A0E3 		mov	r2, #15
 10920 0574 082083E5 		str	r2, [r3, #8]
4819:../../Source/Kernel/rme_kernel.c ****     
4820:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4821:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10921              		.loc 1 4821 13
 10922 0578 0C301BE5 		ldr	r3, [fp, #-12]
 10923 057c 003093E5 		ldr	r3, [r3]
 10924 0580 7330FFE6 		uxth	r3, r3
 10925 0584 000053E3 		cmp	r3, #0
 10926 0588 0200000A 		beq	.L699
 10927              		.loc 1 4821 13 is_stmt 0 discriminator 1
 10928 058c 0C301BE5 		ldr	r3, [fp, #-12]
 10929 0590 043093E5 		ldr	r3, [r3, #4]
 10930 0594 000000EA 		b	.L700
 10931              	.L699:
 10932              		.loc 1 4821 13 discriminator 2
 10933 0598 0C301BE5 		ldr	r3, [fp, #-12]
 10934              	.L700:
 10935              		.loc 1 4821 12 is_stmt 1 discriminator 4
 10936 059c 1C300BE5 		str	r3, [fp, #-28]
4822:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4823:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10937              		.loc 1 4823 13
 10938 05a0 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 278


 10939 05a4 003093E5 		ldr	r3, [r3]
 10940 05a8 7330FFE6 		uxth	r3, r3
 10941 05ac 000053E3 		cmp	r3, #0
 10942 05b0 0200000A 		beq	.L701
 10943              		.loc 1 4823 13 is_stmt 0 discriminator 1
 10944 05b4 10301BE5 		ldr	r3, [fp, #-16]
 10945 05b8 043093E5 		ldr	r3, [r3, #4]
 10946 05bc 000000EA 		b	.L702
 10947              	.L701:
 10948              		.loc 1 4823 13 discriminator 2
 10949 05c0 10301BE5 		ldr	r3, [fp, #-16]
 10950              	.L702:
 10951              		.loc 1 4823 12 is_stmt 1 discriminator 4
 10952 05c4 20300BE5 		str	r3, [fp, #-32]
4824:../../Source/Kernel/rme_kernel.c **** #endif
4825:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10953              		.loc 1 4825 17
 10954 05c8 18301BE5 		ldr	r3, [fp, #-24]
 10955 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 10956 05d0 142083E5 		str	r2, [r3, #20]
4826:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4827:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 10957              		.loc 1 4827 17
 10958 05d4 18301BE5 		ldr	r3, [fp, #-24]
 10959 05d8 20201BE5 		ldr	r2, [fp, #-32]
 10960 05dc 182083E5 		str	r2, [r3, #24]
4828:../../Source/Kernel/rme_kernel.c **** #else
4829:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4830:../../Source/Kernel/rme_kernel.c **** #endif
4831:../../Source/Kernel/rme_kernel.c ****     
4832:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4833:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10961              		.loc 1 4833 5
 10962 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 10963 05e4 043083E2 		add	r3, r3, #4
 10964 05e8 0110A0E3 		mov	r1, #1
 10965 05ec 0300A0E1 		mov	r0, r3
 10966 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4834:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4835:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10967              		.loc 1 4835 5
 10968 05f4 20301BE5 		ldr	r3, [fp, #-32]
 10969 05f8 043083E2 		add	r3, r3, #4
 10970 05fc 0110A0E3 		mov	r1, #1
 10971 0600 0300A0E1 		mov	r0, r3
 10972 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4836:../../Source/Kernel/rme_kernel.c **** #endif
4837:../../Source/Kernel/rme_kernel.c **** 
4838:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4839:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10973              		.loc 1 4839 5
 10974 0608 18301BE5 		ldr	r3, [fp, #-24]
 10975 060c 0514A0E3 		mov	r1, #83886080
 10976 0610 0300A0E1 		mov	r0, r3
 10977 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4840:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4841:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 279


4842:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4843:../../Source/Kernel/rme_kernel.c **** 
4844:../../Source/Kernel/rme_kernel.c ****     return 0;
 10978              		.loc 1 4844 12
 10979 0618 0030A0E3 		mov	r3, #0
 10980              	.L668:
4845:../../Source/Kernel/rme_kernel.c **** }
 10981              		.loc 1 4845 1
 10982 061c 0300A0E1 		mov	r0, r3
 10983 0620 04D04BE2 		sub	sp, fp, #4
 10984              		.cfi_def_cfa 13, 8
 10985              		@ sp needed
 10986 0624 0088BDE8 		pop	{fp, pc}
 10987              		.cfi_endproc
 10988              	.LFE51:
 10990              		.section	.text._RME_Prc_Del,"ax",%progbits
 10991              		.align	2
 10992              		.syntax unified
 10993              		.arm
 10995              	_RME_Prc_Del:
 10996              	.LFB52:
4846:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Crt *************************************************/
4847:../../Source/Kernel/rme_kernel.c **** 
4848:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Del ******************************************************
4849:../../Source/Kernel/rme_kernel.c **** Description : Delete a process.
4850:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
4851:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
4852:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4853:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process.
4854:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4855:../../Source/Kernel/rme_kernel.c **** Output      : None.
4856:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4857:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4858:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Del(struct RME_Cap_Cpt* Cpt,
4859:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4860:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc)
4861:../../Source/Kernel/rme_kernel.c **** {
 10997              		.loc 1 4861 1
 10998              		.cfi_startproc
 10999              		@ args = 0, pretend = 0, frame = 40
 11000              		@ frame_needed = 1, uses_anonymous_args = 0
 11001 0000 00482DE9 		push	{fp, lr}
 11002              		.cfi_def_cfa_offset 8
 11003              		.cfi_offset 11, -8
 11004              		.cfi_offset 14, -4
 11005 0004 04B08DE2 		add	fp, sp, #4
 11006              		.cfi_def_cfa 11, 4
 11007 0008 28D04DE2 		sub	sp, sp, #40
 11008 000c 20000BE5 		str	r0, [fp, #-32]
 11009 0010 24100BE5 		str	r1, [fp, #-36]
 11010 0014 28200BE5 		str	r2, [fp, #-40]
4862:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4863:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Del;
4864:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4865:../../Source/Kernel/rme_kernel.c ****     /* For deletion use */
4866:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4867:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 280


4868:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4869:../../Source/Kernel/rme_kernel.c **** #endif
4870:../../Source/Kernel/rme_kernel.c **** 
4871:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4872:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11011              		.loc 1 4872 5
 11012 0018 24301BE5 		ldr	r3, [fp, #-36]
 11013 001c 803003E2 		and	r3, r3, #128
 11014 0020 000053E3 		cmp	r3, #0
 11015 0024 1C00001A 		bne	.L704
 11016              		.loc 1 4872 5 is_stmt 0 discriminator 1
 11017 0028 20301BE5 		ldr	r3, [fp, #-32]
 11018 002c 142093E5 		ldr	r2, [r3, #20]
 11019 0030 24301BE5 		ldr	r3, [fp, #-36]
 11020 0034 030052E1 		cmp	r2, r3
 11021 0038 0100008A 		bhi	.L705
 11022              		.loc 1 4872 5 discriminator 3
 11023 003c 0230E0E3 		mvn	r3, #2
 11024              		.loc 1 4872 5
 11025 0040 AF0000EA 		b	.L706
 11026              	.L705:
 11027              		.loc 1 4872 5 discriminator 4
 11028 0044 24301BE5 		ldr	r3, [fp, #-36]
 11029 0048 8322A0E1 		lsl	r2, r3, #5
 11030 004c 20301BE5 		ldr	r3, [fp, #-32]
 11031 0050 0C3093E5 		ldr	r3, [r3, #12]
 11032 0054 033082E0 		add	r3, r2, r3
 11033 0058 08300BE5 		str	r3, [fp, #-8]
 11034 005c 08301BE5 		ldr	r3, [fp, #-8]
 11035 0060 0300A0E1 		mov	r0, r3
 11036 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11037 0068 0C000BE5 		str	r0, [fp, #-12]
 11038              		.loc 1 4872 5 discriminator 1
 11039 006c 0C301BE5 		ldr	r3, [fp, #-12]
 11040 0070 FF3803E2 		and	r3, r3, #16711680
 11041 0074 020853E3 		cmp	r3, #131072
 11042 0078 0100001A 		bne	.L707
 11043              		.loc 1 4872 5 discriminator 5
 11044 007c 0830E0E3 		mvn	r3, #8
 11045              		.loc 1 4872 5
 11046 0080 9F0000EA 		b	.L706
 11047              	.L707:
 11048              		.loc 1 4872 5 discriminator 6
 11049 0084 0C301BE5 		ldr	r3, [fp, #-12]
 11050 0088 233CA0E1 		lsr	r3, r3, #24
 11051 008c 030053E3 		cmp	r3, #3
 11052 0090 3F00000A 		beq	.L708
 11053              		.loc 1 4872 5 discriminator 7
 11054 0094 0130E0E3 		mvn	r3, #1
 11055              		.loc 1 4872 5
 11056 0098 990000EA 		b	.L706
 11057              	.L704:
 11058              		.loc 1 4872 5 discriminator 2
 11059 009c 24301BE5 		ldr	r3, [fp, #-36]
 11060 00a0 2324A0E1 		lsr	r2, r3, #8
 11061 00a4 20301BE5 		ldr	r3, [fp, #-32]
 11062 00a8 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 281


 11063 00ac 030052E1 		cmp	r2, r3
 11064 00b0 0100003A 		bcc	.L709
 11065              		.loc 1 4872 5 discriminator 8
 11066 00b4 0230E0E3 		mvn	r3, #2
 11067              		.loc 1 4872 5
 11068 00b8 910000EA 		b	.L706
 11069              	.L709:
 11070              		.loc 1 4872 5 discriminator 9
 11071 00bc 24301BE5 		ldr	r3, [fp, #-36]
 11072 00c0 2334A0E1 		lsr	r3, r3, #8
 11073 00c4 8322A0E1 		lsl	r2, r3, #5
 11074 00c8 20301BE5 		ldr	r3, [fp, #-32]
 11075 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11076 00d0 033082E0 		add	r3, r2, r3
 11077 00d4 08300BE5 		str	r3, [fp, #-8]
 11078 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11079 00dc 0300A0E1 		mov	r0, r3
 11080 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11081 00e4 0C000BE5 		str	r0, [fp, #-12]
 11082              		.loc 1 4872 5 discriminator 1
 11083 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 11084 00ec FF3803E2 		and	r3, r3, #16711680
 11085 00f0 020853E3 		cmp	r3, #131072
 11086 00f4 0100001A 		bne	.L710
 11087              		.loc 1 4872 5 discriminator 10
 11088 00f8 0830E0E3 		mvn	r3, #8
 11089              		.loc 1 4872 5
 11090 00fc 800000EA 		b	.L706
 11091              	.L710:
 11092              		.loc 1 4872 5 discriminator 11
 11093 0100 0C301BE5 		ldr	r3, [fp, #-12]
 11094 0104 233CA0E1 		lsr	r3, r3, #24
 11095 0108 030053E3 		cmp	r3, #3
 11096 010c 0100000A 		beq	.L711
 11097              		.loc 1 4872 5 discriminator 12
 11098 0110 0130E0E3 		mvn	r3, #1
 11099              		.loc 1 4872 5
 11100 0114 7A0000EA 		b	.L706
 11101              	.L711:
 11102              		.loc 1 4872 5 discriminator 13
 11103 0118 24301BE5 		ldr	r3, [fp, #-36]
 11104 011c 7F2003E2 		and	r2, r3, #127
 11105 0120 08301BE5 		ldr	r3, [fp, #-8]
 11106 0124 143093E5 		ldr	r3, [r3, #20]
 11107 0128 030052E1 		cmp	r2, r3
 11108 012c 0100003A 		bcc	.L712
 11109              		.loc 1 4872 5 discriminator 14
 11110 0130 0230E0E3 		mvn	r3, #2
 11111              		.loc 1 4872 5
 11112 0134 720000EA 		b	.L706
 11113              	.L712:
 11114              		.loc 1 4872 5 discriminator 15
 11115 0138 24301BE5 		ldr	r3, [fp, #-36]
 11116 013c 7F3003E2 		and	r3, r3, #127
 11117 0140 8322A0E1 		lsl	r2, r3, #5
 11118 0144 08301BE5 		ldr	r3, [fp, #-8]
 11119 0148 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 282


 11120 014c 033082E0 		add	r3, r2, r3
 11121 0150 08300BE5 		str	r3, [fp, #-8]
 11122 0154 08301BE5 		ldr	r3, [fp, #-8]
 11123 0158 0300A0E1 		mov	r0, r3
 11124 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11125 0160 0C000BE5 		str	r0, [fp, #-12]
 11126              		.loc 1 4872 5 discriminator 1
 11127 0164 0C301BE5 		ldr	r3, [fp, #-12]
 11128 0168 FF3803E2 		and	r3, r3, #16711680
 11129 016c 020853E3 		cmp	r3, #131072
 11130 0170 0100001A 		bne	.L713
 11131              		.loc 1 4872 5 discriminator 16
 11132 0174 0830E0E3 		mvn	r3, #8
 11133              		.loc 1 4872 5
 11134 0178 610000EA 		b	.L706
 11135              	.L713:
 11136              		.loc 1 4872 5 discriminator 17
 11137 017c 0C301BE5 		ldr	r3, [fp, #-12]
 11138 0180 233CA0E1 		lsr	r3, r3, #24
 11139 0184 030053E3 		cmp	r3, #3
 11140 0188 0100000A 		beq	.L708
 11141              		.loc 1 4872 5 discriminator 18
 11142 018c 0130E0E3 		mvn	r3, #1
 11143              		.loc 1 4872 5
 11144 0190 5B0000EA 		b	.L706
 11145              	.L708:
4873:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
4874:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4875:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 11146              		.loc 1 4875 5 is_stmt 1
 11147 0194 08301BE5 		ldr	r3, [fp, #-8]
 11148 0198 083093E5 		ldr	r3, [r3, #8]
 11149 019c 023003E2 		and	r3, r3, #2
 11150 01a0 000053E3 		cmp	r3, #0
 11151 01a4 0100001A 		bne	.L714
 11152              		.loc 1 4875 5 is_stmt 0 discriminator 1
 11153 01a8 0630E0E3 		mvn	r3, #6
 11154              		.loc 1 4875 5
 11155 01ac 540000EA 		b	.L706
 11156              	.L714:
4876:../../Source/Kernel/rme_kernel.c **** 
4877:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4878:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Prc,struct RME_Cap_Prc*,Prc_Del);
 11157              		.loc 1 4878 5 is_stmt 1
 11158 01b0 08301BE5 		ldr	r3, [fp, #-8]
 11159 01b4 142093E5 		ldr	r2, [r3, #20]
 11160 01b8 28301BE5 		ldr	r3, [fp, #-40]
 11161 01bc 030052E1 		cmp	r2, r3
 11162 01c0 0100008A 		bhi	.L715
 11163              		.loc 1 4878 5 is_stmt 0 discriminator 1
 11164 01c4 0230E0E3 		mvn	r3, #2
 11165              		.loc 1 4878 5
 11166 01c8 4D0000EA 		b	.L706
 11167              	.L715:
 11168              		.loc 1 4878 5 discriminator 2
 11169 01cc 28301BE5 		ldr	r3, [fp, #-40]
 11170 01d0 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 283


 11171 01d4 08301BE5 		ldr	r3, [fp, #-8]
 11172 01d8 0C3093E5 		ldr	r3, [r3, #12]
 11173 01dc 033082E0 		add	r3, r2, r3
 11174 01e0 10300BE5 		str	r3, [fp, #-16]
4879:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
4880:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Prc_Del,Type_Stat,RME_CAP_TYPE_PRC);
 11175              		.loc 1 4880 5 is_stmt 1
 11176 01e4 10301BE5 		ldr	r3, [fp, #-16]
 11177 01e8 0300A0E1 		mov	r0, r3
 11178 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11179 01f0 0C000BE5 		str	r0, [fp, #-12]
 11180              		.loc 1 4880 5 is_stmt 0 discriminator 1
 11181 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 11182 01f8 FF3803E2 		and	r3, r3, #16711680
 11183 01fc 020853E3 		cmp	r3, #131072
 11184 0200 0100000A 		beq	.L716
 11185 0204 0830E0E3 		mvn	r3, #8
 11186              		.loc 1 4880 5
 11187 0208 3D0000EA 		b	.L706
 11188              	.L716:
 11189              		.loc 1 4880 5 discriminator 2
 11190 020c 0C301BE5 		ldr	r3, [fp, #-12]
 11191 0210 233CA0E1 		lsr	r3, r3, #24
 11192 0214 050053E3 		cmp	r3, #5
 11193 0218 0100000A 		beq	.L717
 11194              		.loc 1 4880 5 discriminator 3
 11195 021c 0130E0E3 		mvn	r3, #1
 11196              		.loc 1 4880 5
 11197 0220 370000EA 		b	.L706
 11198              	.L717:
 11199              		.loc 1 4880 5 discriminator 6
 11200 0224 10301BE5 		ldr	r3, [fp, #-16]
 11201 0228 043093E5 		ldr	r3, [r3, #4]
 11202 022c 000053E3 		cmp	r3, #0
 11203 0230 0B00000A 		beq	.L718
 11204              		.loc 1 4880 5 discriminator 7
 11205 0234 0C301BE5 		ldr	r3, [fp, #-12]
 11206 0238 7330FFE6 		uxth	r3, r3
 11207 023c 000053E3 		cmp	r3, #0
 11208 0240 0500001A 		bne	.L719
 11209              		.loc 1 4880 5 discriminator 9
 11210 0244 10001BE5 		ldr	r0, [fp, #-16]
 11211 0248 0C301BE5 		ldr	r3, [fp, #-12]
 11212 024c FF38C3E3 		bic	r3, r3, #16711680
 11213 0250 0320A0E1 		mov	r2, r3
 11214 0254 0C101BE5 		ldr	r1, [fp, #-12]
 11215 0258 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11216              	.L719:
 11217              		.loc 1 4880 5 discriminator 11
 11218 025c 0530E0E3 		mvn	r3, #5
 11219              		.loc 1 4880 5
 11220 0260 270000EA 		b	.L706
 11221              	.L718:
 11222              		.loc 1 4880 5 discriminator 8
 11223 0264 0C301BE5 		ldr	r3, [fp, #-12]
 11224 0268 7330FFE6 		uxth	r3, r3
 11225 026c 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 284


 11226 0270 0800000A 		beq	.L720
 11227              		.loc 1 4880 5 discriminator 12
 11228 0274 003000E3 		movw	r3, #:lower16:.LC6
 11229 0278 003040E3 		movt	r3, #:upper16:.LC6
 11230 027c 002000E3 		movw	r2, #:lower16:.LC7
 11231 0280 002040E3 		movt	r2, #:upper16:.LC7
 11232 0284 101301E3 		movw	r1, #4880
 11233 0288 000000E3 		movw	r0, #:lower16:.LC8
 11234 028c 000040E3 		movt	r0, #:upper16:.LC8
 11235 0290 FEFFFFEB 		bl	RME_Log
 11236              	.L721:
 11237              		.loc 1 4880 5
 11238 0294 FEFFFFEA 		b	.L721
 11239              	.L720:
4881:../../Source/Kernel/rme_kernel.c **** 
4882:../../Source/Kernel/rme_kernel.c ****     /* Remember for deletion */
4883:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=Prc_Del->Cpt;
 11240              		.loc 1 4883 12 is_stmt 1
 11241 0298 10301BE5 		ldr	r3, [fp, #-16]
 11242 029c 143093E5 		ldr	r3, [r3, #20]
 11243 02a0 14300BE5 		str	r3, [fp, #-20]
4884:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4885:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=Prc_Del->Pgt;
 11244              		.loc 1 4885 12
 11245 02a4 10301BE5 		ldr	r3, [fp, #-16]
 11246 02a8 183093E5 		ldr	r3, [r3, #24]
 11247 02ac 18300BE5 		str	r3, [fp, #-24]
4886:../../Source/Kernel/rme_kernel.c **** #endif
4887:../../Source/Kernel/rme_kernel.c **** 
4888:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
4889:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Prc_Del,Type_Stat);
 11248              		.loc 1 4889 5
 11249 02b0 10301BE5 		ldr	r3, [fp, #-16]
 11250 02b4 0020A0E3 		mov	r2, #0
 11251 02b8 0C101BE5 		ldr	r1, [fp, #-12]
 11252 02bc 0300A0E1 		mov	r0, r3
 11253 02c0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11254 02c4 0030A0E1 		mov	r3, r0
 11255              		.loc 1 4889 5 is_stmt 0 discriminator 1
 11256 02c8 000053E3 		cmp	r3, #0
 11257 02cc 0100001A 		bne	.L722
 11258 02d0 0030E0E3 		mvn	r3, #0
 11259              		.loc 1 4889 5
 11260 02d4 0A0000EA 		b	.L706
 11261              	.L722:
4890:../../Source/Kernel/rme_kernel.c **** 
4891:../../Source/Kernel/rme_kernel.c ****     /* Dereference caps */
4892:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),-1);
 11262              		.loc 1 4892 5 is_stmt 1
 11263 02d8 14301BE5 		ldr	r3, [fp, #-20]
 11264 02dc 043083E2 		add	r3, r3, #4
 11265 02e0 0010E0E3 		mvn	r1, #0
 11266 02e4 0300A0E1 		mov	r0, r3
 11267 02e8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4893:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4894:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),-1);
 11268              		.loc 1 4894 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 285


 11269 02ec 18301BE5 		ldr	r3, [fp, #-24]
 11270 02f0 043083E2 		add	r3, r3, #4
 11271 02f4 0010E0E3 		mvn	r1, #0
 11272 02f8 0300A0E1 		mov	r0, r3
 11273 02fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
4895:../../Source/Kernel/rme_kernel.c **** #endif
4896:../../Source/Kernel/rme_kernel.c ****     
4897:../../Source/Kernel/rme_kernel.c ****     return 0;
 11274              		.loc 1 4897 12
 11275 0300 0030A0E3 		mov	r3, #0
 11276              	.L706:
4898:../../Source/Kernel/rme_kernel.c **** }
 11277              		.loc 1 4898 1
 11278 0304 0300A0E1 		mov	r0, r3
 11279 0308 04D04BE2 		sub	sp, fp, #4
 11280              		.cfi_def_cfa 13, 8
 11281              		@ sp needed
 11282 030c 0088BDE8 		pop	{fp, pc}
 11283              		.cfi_endproc
 11284              	.LFE52:
 11286              		.section	.text._RME_Prc_Cpt,"ax",%progbits
 11287              		.align	2
 11288              		.syntax unified
 11289              		.arm
 11291              	_RME_Prc_Cpt:
 11292              	.LFB53:
4899:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Del *************************************************/
4900:../../Source/Kernel/rme_kernel.c **** 
4901:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Cpt ******************************************************
4902:../../Source/Kernel/rme_kernel.c **** Description : Change a process's capability table.
4903:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4904:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4905:../../Source/Kernel/rme_kernel.c ****                                   created already.
4906:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4907:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4908:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4909:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4910:../../Source/Kernel/rme_kernel.c **** Output      : None.
4911:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4912:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4913:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Cpt(struct RME_Cap_Cpt* Cpt,
4914:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4915:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt)
4916:../../Source/Kernel/rme_kernel.c **** {
 11293              		.loc 1 4916 1
 11294              		.cfi_startproc
 11295              		@ args = 0, pretend = 0, frame = 32
 11296              		@ frame_needed = 1, uses_anonymous_args = 0
 11297 0000 00482DE9 		push	{fp, lr}
 11298              		.cfi_def_cfa_offset 8
 11299              		.cfi_offset 11, -8
 11300              		.cfi_offset 14, -4
 11301 0004 04B08DE2 		add	fp, sp, #4
 11302              		.cfi_def_cfa 11, 4
 11303 0008 20D04DE2 		sub	sp, sp, #32
 11304 000c 18000BE5 		str	r0, [fp, #-24]
 11305 0010 1C100BE5 		str	r1, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 286


 11306 0014 20200BE5 		str	r2, [fp, #-32]
4917:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4918:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_New;
4919:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Old;
4920:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4921:../../Source/Kernel/rme_kernel.c ****     
4922:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4923:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11307              		.loc 1 4923 5
 11308 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11309 001c 803003E2 		and	r3, r3, #128
 11310 0020 000053E3 		cmp	r3, #0
 11311 0024 1C00001A 		bne	.L724
 11312              		.loc 1 4923 5 is_stmt 0 discriminator 1
 11313 0028 18301BE5 		ldr	r3, [fp, #-24]
 11314 002c 142093E5 		ldr	r2, [r3, #20]
 11315 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11316 0034 030052E1 		cmp	r2, r3
 11317 0038 0100008A 		bhi	.L725
 11318              		.loc 1 4923 5 discriminator 3
 11319 003c 0230E0E3 		mvn	r3, #2
 11320              		.loc 1 4923 5
 11321 0040 E30000EA 		b	.L726
 11322              	.L725:
 11323              		.loc 1 4923 5 discriminator 4
 11324 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11325 0048 8322A0E1 		lsl	r2, r3, #5
 11326 004c 18301BE5 		ldr	r3, [fp, #-24]
 11327 0050 0C3093E5 		ldr	r3, [r3, #12]
 11328 0054 033082E0 		add	r3, r2, r3
 11329 0058 08300BE5 		str	r3, [fp, #-8]
 11330 005c 08301BE5 		ldr	r3, [fp, #-8]
 11331 0060 0300A0E1 		mov	r0, r3
 11332 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11333 0068 10000BE5 		str	r0, [fp, #-16]
 11334              		.loc 1 4923 5 discriminator 1
 11335 006c 10301BE5 		ldr	r3, [fp, #-16]
 11336 0070 FF3803E2 		and	r3, r3, #16711680
 11337 0074 020853E3 		cmp	r3, #131072
 11338 0078 0100001A 		bne	.L727
 11339              		.loc 1 4923 5 discriminator 5
 11340 007c 0830E0E3 		mvn	r3, #8
 11341              		.loc 1 4923 5
 11342 0080 D30000EA 		b	.L726
 11343              	.L727:
 11344              		.loc 1 4923 5 discriminator 6
 11345 0084 10301BE5 		ldr	r3, [fp, #-16]
 11346 0088 233CA0E1 		lsr	r3, r3, #24
 11347 008c 050053E3 		cmp	r3, #5
 11348 0090 3F00000A 		beq	.L728
 11349              		.loc 1 4923 5 discriminator 7
 11350 0094 0130E0E3 		mvn	r3, #1
 11351              		.loc 1 4923 5
 11352 0098 CD0000EA 		b	.L726
 11353              	.L724:
 11354              		.loc 1 4923 5 discriminator 2
 11355 009c 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 287


 11356 00a0 2324A0E1 		lsr	r2, r3, #8
 11357 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11358 00a8 143093E5 		ldr	r3, [r3, #20]
 11359 00ac 030052E1 		cmp	r2, r3
 11360 00b0 0100003A 		bcc	.L729
 11361              		.loc 1 4923 5 discriminator 8
 11362 00b4 0230E0E3 		mvn	r3, #2
 11363              		.loc 1 4923 5
 11364 00b8 C50000EA 		b	.L726
 11365              	.L729:
 11366              		.loc 1 4923 5 discriminator 9
 11367 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11368 00c0 2334A0E1 		lsr	r3, r3, #8
 11369 00c4 8322A0E1 		lsl	r2, r3, #5
 11370 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11371 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11372 00d0 033082E0 		add	r3, r2, r3
 11373 00d4 08300BE5 		str	r3, [fp, #-8]
 11374 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11375 00dc 0300A0E1 		mov	r0, r3
 11376 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11377 00e4 10000BE5 		str	r0, [fp, #-16]
 11378              		.loc 1 4923 5 discriminator 1
 11379 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11380 00ec FF3803E2 		and	r3, r3, #16711680
 11381 00f0 020853E3 		cmp	r3, #131072
 11382 00f4 0100001A 		bne	.L730
 11383              		.loc 1 4923 5 discriminator 10
 11384 00f8 0830E0E3 		mvn	r3, #8
 11385              		.loc 1 4923 5
 11386 00fc B40000EA 		b	.L726
 11387              	.L730:
 11388              		.loc 1 4923 5 discriminator 11
 11389 0100 10301BE5 		ldr	r3, [fp, #-16]
 11390 0104 233CA0E1 		lsr	r3, r3, #24
 11391 0108 030053E3 		cmp	r3, #3
 11392 010c 0100000A 		beq	.L731
 11393              		.loc 1 4923 5 discriminator 12
 11394 0110 0130E0E3 		mvn	r3, #1
 11395              		.loc 1 4923 5
 11396 0114 AE0000EA 		b	.L726
 11397              	.L731:
 11398              		.loc 1 4923 5 discriminator 13
 11399 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11400 011c 7F2003E2 		and	r2, r3, #127
 11401 0120 08301BE5 		ldr	r3, [fp, #-8]
 11402 0124 143093E5 		ldr	r3, [r3, #20]
 11403 0128 030052E1 		cmp	r2, r3
 11404 012c 0100003A 		bcc	.L732
 11405              		.loc 1 4923 5 discriminator 14
 11406 0130 0230E0E3 		mvn	r3, #2
 11407              		.loc 1 4923 5
 11408 0134 A60000EA 		b	.L726
 11409              	.L732:
 11410              		.loc 1 4923 5 discriminator 15
 11411 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11412 013c 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 288


 11413 0140 8322A0E1 		lsl	r2, r3, #5
 11414 0144 08301BE5 		ldr	r3, [fp, #-8]
 11415 0148 0C3093E5 		ldr	r3, [r3, #12]
 11416 014c 033082E0 		add	r3, r2, r3
 11417 0150 08300BE5 		str	r3, [fp, #-8]
 11418 0154 08301BE5 		ldr	r3, [fp, #-8]
 11419 0158 0300A0E1 		mov	r0, r3
 11420 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11421 0160 10000BE5 		str	r0, [fp, #-16]
 11422              		.loc 1 4923 5 discriminator 1
 11423 0164 10301BE5 		ldr	r3, [fp, #-16]
 11424 0168 FF3803E2 		and	r3, r3, #16711680
 11425 016c 020853E3 		cmp	r3, #131072
 11426 0170 0100001A 		bne	.L733
 11427              		.loc 1 4923 5 discriminator 16
 11428 0174 0830E0E3 		mvn	r3, #8
 11429              		.loc 1 4923 5
 11430 0178 950000EA 		b	.L726
 11431              	.L733:
 11432              		.loc 1 4923 5 discriminator 17
 11433 017c 10301BE5 		ldr	r3, [fp, #-16]
 11434 0180 233CA0E1 		lsr	r3, r3, #24
 11435 0184 050053E3 		cmp	r3, #5
 11436 0188 0100000A 		beq	.L728
 11437              		.loc 1 4923 5 discriminator 18
 11438 018c 0130E0E3 		mvn	r3, #1
 11439              		.loc 1 4923 5
 11440 0190 8F0000EA 		b	.L726
 11441              	.L728:
4924:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4925:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11442              		.loc 1 4925 5 is_stmt 1
 11443 0194 20301BE5 		ldr	r3, [fp, #-32]
 11444 0198 803003E2 		and	r3, r3, #128
 11445 019c 000053E3 		cmp	r3, #0
 11446 01a0 1C00001A 		bne	.L734
 11447              		.loc 1 4925 5 is_stmt 0 discriminator 1
 11448 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11449 01a8 142093E5 		ldr	r2, [r3, #20]
 11450 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11451 01b0 030052E1 		cmp	r2, r3
 11452 01b4 0100008A 		bhi	.L735
 11453              		.loc 1 4925 5 discriminator 3
 11454 01b8 0230E0E3 		mvn	r3, #2
 11455              		.loc 1 4925 5
 11456 01bc 840000EA 		b	.L726
 11457              	.L735:
 11458              		.loc 1 4925 5 discriminator 4
 11459 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11460 01c4 8322A0E1 		lsl	r2, r3, #5
 11461 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11462 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11463 01d0 033082E0 		add	r3, r2, r3
 11464 01d4 0C300BE5 		str	r3, [fp, #-12]
 11465 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11466 01dc 0300A0E1 		mov	r0, r3
 11467 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 289


 11468 01e4 10000BE5 		str	r0, [fp, #-16]
 11469              		.loc 1 4925 5 discriminator 1
 11470 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11471 01ec FF3803E2 		and	r3, r3, #16711680
 11472 01f0 020853E3 		cmp	r3, #131072
 11473 01f4 0100001A 		bne	.L736
 11474              		.loc 1 4925 5 discriminator 5
 11475 01f8 0830E0E3 		mvn	r3, #8
 11476              		.loc 1 4925 5
 11477 01fc 740000EA 		b	.L726
 11478              	.L736:
 11479              		.loc 1 4925 5 discriminator 6
 11480 0200 10301BE5 		ldr	r3, [fp, #-16]
 11481 0204 233CA0E1 		lsr	r3, r3, #24
 11482 0208 030053E3 		cmp	r3, #3
 11483 020c 3F00000A 		beq	.L737
 11484              		.loc 1 4925 5 discriminator 7
 11485 0210 0130E0E3 		mvn	r3, #1
 11486              		.loc 1 4925 5
 11487 0214 6E0000EA 		b	.L726
 11488              	.L734:
 11489              		.loc 1 4925 5 discriminator 2
 11490 0218 20301BE5 		ldr	r3, [fp, #-32]
 11491 021c 2324A0E1 		lsr	r2, r3, #8
 11492 0220 18301BE5 		ldr	r3, [fp, #-24]
 11493 0224 143093E5 		ldr	r3, [r3, #20]
 11494 0228 030052E1 		cmp	r2, r3
 11495 022c 0100003A 		bcc	.L738
 11496              		.loc 1 4925 5 discriminator 8
 11497 0230 0230E0E3 		mvn	r3, #2
 11498              		.loc 1 4925 5
 11499 0234 660000EA 		b	.L726
 11500              	.L738:
 11501              		.loc 1 4925 5 discriminator 9
 11502 0238 20301BE5 		ldr	r3, [fp, #-32]
 11503 023c 2334A0E1 		lsr	r3, r3, #8
 11504 0240 8322A0E1 		lsl	r2, r3, #5
 11505 0244 18301BE5 		ldr	r3, [fp, #-24]
 11506 0248 0C3093E5 		ldr	r3, [r3, #12]
 11507 024c 033082E0 		add	r3, r2, r3
 11508 0250 0C300BE5 		str	r3, [fp, #-12]
 11509 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11510 0258 0300A0E1 		mov	r0, r3
 11511 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11512 0260 10000BE5 		str	r0, [fp, #-16]
 11513              		.loc 1 4925 5 discriminator 1
 11514 0264 10301BE5 		ldr	r3, [fp, #-16]
 11515 0268 FF3803E2 		and	r3, r3, #16711680
 11516 026c 020853E3 		cmp	r3, #131072
 11517 0270 0100001A 		bne	.L739
 11518              		.loc 1 4925 5 discriminator 10
 11519 0274 0830E0E3 		mvn	r3, #8
 11520              		.loc 1 4925 5
 11521 0278 550000EA 		b	.L726
 11522              	.L739:
 11523              		.loc 1 4925 5 discriminator 11
 11524 027c 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 290


 11525 0280 233CA0E1 		lsr	r3, r3, #24
 11526 0284 030053E3 		cmp	r3, #3
 11527 0288 0100000A 		beq	.L740
 11528              		.loc 1 4925 5 discriminator 12
 11529 028c 0130E0E3 		mvn	r3, #1
 11530              		.loc 1 4925 5
 11531 0290 4F0000EA 		b	.L726
 11532              	.L740:
 11533              		.loc 1 4925 5 discriminator 13
 11534 0294 20301BE5 		ldr	r3, [fp, #-32]
 11535 0298 7F2003E2 		and	r2, r3, #127
 11536 029c 0C301BE5 		ldr	r3, [fp, #-12]
 11537 02a0 143093E5 		ldr	r3, [r3, #20]
 11538 02a4 030052E1 		cmp	r2, r3
 11539 02a8 0100003A 		bcc	.L741
 11540              		.loc 1 4925 5 discriminator 14
 11541 02ac 0230E0E3 		mvn	r3, #2
 11542              		.loc 1 4925 5
 11543 02b0 470000EA 		b	.L726
 11544              	.L741:
 11545              		.loc 1 4925 5 discriminator 15
 11546 02b4 20301BE5 		ldr	r3, [fp, #-32]
 11547 02b8 7F3003E2 		and	r3, r3, #127
 11548 02bc 8322A0E1 		lsl	r2, r3, #5
 11549 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 11550 02c4 0C3093E5 		ldr	r3, [r3, #12]
 11551 02c8 033082E0 		add	r3, r2, r3
 11552 02cc 0C300BE5 		str	r3, [fp, #-12]
 11553 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 11554 02d4 0300A0E1 		mov	r0, r3
 11555 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11556 02dc 10000BE5 		str	r0, [fp, #-16]
 11557              		.loc 1 4925 5 discriminator 1
 11558 02e0 10301BE5 		ldr	r3, [fp, #-16]
 11559 02e4 FF3803E2 		and	r3, r3, #16711680
 11560 02e8 020853E3 		cmp	r3, #131072
 11561 02ec 0100001A 		bne	.L742
 11562              		.loc 1 4925 5 discriminator 16
 11563 02f0 0830E0E3 		mvn	r3, #8
 11564              		.loc 1 4925 5
 11565 02f4 360000EA 		b	.L726
 11566              	.L742:
 11567              		.loc 1 4925 5 discriminator 17
 11568 02f8 10301BE5 		ldr	r3, [fp, #-16]
 11569 02fc 233CA0E1 		lsr	r3, r3, #24
 11570 0300 030053E3 		cmp	r3, #3
 11571 0304 0100000A 		beq	.L737
 11572              		.loc 1 4925 5 discriminator 18
 11573 0308 0130E0E3 		mvn	r3, #1
 11574              		.loc 1 4925 5
 11575 030c 300000EA 		b	.L726
 11576              	.L737:
4926:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_New,Type_Stat);     
4927:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4928:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_CPT);
 11577              		.loc 1 4928 5 is_stmt 1
 11578 0310 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 291


 11579 0314 083093E5 		ldr	r3, [r3, #8]
 11580 0318 043003E2 		and	r3, r3, #4
 11581 031c 000053E3 		cmp	r3, #0
 11582 0320 0100001A 		bne	.L743
 11583              		.loc 1 4928 5 is_stmt 0 discriminator 1
 11584 0324 0630E0E3 		mvn	r3, #6
 11585              		.loc 1 4928 5
 11586 0328 290000EA 		b	.L726
 11587              	.L743:
4929:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_New,RME_CPT_FLAG_PRC_CPT);
 11588              		.loc 1 4929 5 is_stmt 1
 11589 032c 0C301BE5 		ldr	r3, [fp, #-12]
 11590 0330 083093E5 		ldr	r3, [r3, #8]
 11591 0334 803003E2 		and	r3, r3, #128
 11592 0338 000053E3 		cmp	r3, #0
 11593 033c 0100001A 		bne	.L744
 11594              		.loc 1 4929 5 is_stmt 0 discriminator 1
 11595 0340 0630E0E3 		mvn	r3, #6
 11596              		.loc 1 4929 5
 11597 0344 220000EA 		b	.L726
 11598              	.L744:
4930:../../Source/Kernel/rme_kernel.c ****     
4931:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
4932:../../Source/Kernel/rme_kernel.c ****     Cpt_New=RME_CAP_CONV_ROOT(Cpt_New,struct RME_Cap_Cpt*);
 11599              		.loc 1 4932 13 is_stmt 1
 11600 0348 0C301BE5 		ldr	r3, [fp, #-12]
 11601 034c 003093E5 		ldr	r3, [r3]
 11602 0350 7330FFE6 		uxth	r3, r3
 11603 0354 000053E3 		cmp	r3, #0
 11604 0358 0200000A 		beq	.L745
 11605              		.loc 1 4932 13 is_stmt 0 discriminator 1
 11606 035c 0C301BE5 		ldr	r3, [fp, #-12]
 11607 0360 043093E5 		ldr	r3, [r3, #4]
 11608 0364 000000EA 		b	.L746
 11609              	.L745:
 11610              		.loc 1 4932 13 discriminator 2
 11611 0368 0C301BE5 		ldr	r3, [fp, #-12]
 11612              	.L746:
 11613              		.loc 1 4932 12 is_stmt 1 discriminator 4
 11614 036c 0C300BE5 		str	r3, [fp, #-12]
4933:../../Source/Kernel/rme_kernel.c ****     
4934:../../Source/Kernel/rme_kernel.c ****     /* Commit the change */
4935:../../Source/Kernel/rme_kernel.c ****     Cpt_Old=Prc_Op->Cpt;
 11615              		.loc 1 4935 12
 11616 0370 08301BE5 		ldr	r3, [fp, #-8]
 11617 0374 143093E5 		ldr	r3, [r3, #20]
 11618 0378 14300BE5 		str	r3, [fp, #-20]
4936:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Cpt)),
 11619              		.loc 1 4936 8
 11620 037c 08301BE5 		ldr	r3, [fp, #-8]
 11621 0380 143083E2 		add	r3, r3, #20
 11622 0384 14101BE5 		ldr	r1, [fp, #-20]
 11623 0388 0C201BE5 		ldr	r2, [fp, #-12]
 11624 038c 0300A0E1 		mov	r0, r3
 11625 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11626 0394 0030A0E1 		mov	r3, r0
 11627              		.loc 1 4936 7 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 292


 11628 0398 000053E3 		cmp	r3, #0
 11629 039c 0100001A 		bne	.L747
4937:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Cpt_Old,(rme_ptr_t)Cpt_New)==RME_CASFAIL)
4938:../../Source/Kernel/rme_kernel.c ****     {
4939:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4940:../../Source/Kernel/rme_kernel.c ****         
4941:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 11630              		.loc 1 4941 16
 11631 03a0 C930E0E3 		mvn	r3, #201
 11632 03a4 0A0000EA 		b	.L726
 11633              	.L747:
4942:../../Source/Kernel/rme_kernel.c ****     }
4943:../../Source/Kernel/rme_kernel.c ****     else
4944:../../Source/Kernel/rme_kernel.c ****     {
4945:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4946:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4947:../../Source/Kernel/rme_kernel.c ****     }
4948:../../Source/Kernel/rme_kernel.c ****     
4949:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
4950:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_New->Head.Root_Ref),1);
 11634              		.loc 1 4950 5
 11635 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 11636 03ac 043083E2 		add	r3, r3, #4
 11637 03b0 0110A0E3 		mov	r1, #1
 11638 03b4 0300A0E1 		mov	r0, r3
 11639 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4951:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_Old->Head.Root_Ref),-1);
 11640              		.loc 1 4951 5
 11641 03bc 14301BE5 		ldr	r3, [fp, #-20]
 11642 03c0 043083E2 		add	r3, r3, #4
 11643 03c4 0010E0E3 		mvn	r1, #0
 11644 03c8 0300A0E1 		mov	r0, r3
 11645 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
4952:../../Source/Kernel/rme_kernel.c **** 
4953:../../Source/Kernel/rme_kernel.c ****     return 0;
 11646              		.loc 1 4953 12
 11647 03d0 0030A0E3 		mov	r3, #0
 11648              	.L726:
4954:../../Source/Kernel/rme_kernel.c **** }
 11649              		.loc 1 4954 1
 11650 03d4 0300A0E1 		mov	r0, r3
 11651 03d8 04D04BE2 		sub	sp, fp, #4
 11652              		.cfi_def_cfa 13, 8
 11653              		@ sp needed
 11654 03dc 0088BDE8 		pop	{fp, pc}
 11655              		.cfi_endproc
 11656              	.LFE53:
 11658              		.section	.text._RME_Prc_Pgt,"ax",%progbits
 11659              		.align	2
 11660              		.syntax unified
 11661              		.arm
 11663              	_RME_Prc_Pgt:
 11664              	.LFB54:
4955:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Cpt *************************************************/
4956:../../Source/Kernel/rme_kernel.c **** 
4957:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Pgt ******************************************************
4958:../../Source/Kernel/rme_kernel.c **** Description : Change a process's page table.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 293


4959:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4960:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4961:../../Source/Kernel/rme_kernel.c ****                                   created already.
4962:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4963:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4964:../../Source/Kernel/rme_kernel.c ****                                   this process.
4965:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4966:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4967:../../Source/Kernel/rme_kernel.c ****                                   address.
4968:../../Source/Kernel/rme_kernel.c **** Output      : None.
4969:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4970:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4971:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4972:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4973:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4974:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4975:../../Source/Kernel/rme_kernel.c **** #else
4976:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4977:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4978:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4979:../../Source/Kernel/rme_kernel.c **** #endif
4980:../../Source/Kernel/rme_kernel.c **** {
 11665              		.loc 1 4980 1
 11666              		.cfi_startproc
 11667              		@ args = 0, pretend = 0, frame = 32
 11668              		@ frame_needed = 1, uses_anonymous_args = 0
 11669 0000 00482DE9 		push	{fp, lr}
 11670              		.cfi_def_cfa_offset 8
 11671              		.cfi_offset 11, -8
 11672              		.cfi_offset 14, -4
 11673 0004 04B08DE2 		add	fp, sp, #4
 11674              		.cfi_def_cfa 11, 4
 11675 0008 20D04DE2 		sub	sp, sp, #32
 11676 000c 18000BE5 		str	r0, [fp, #-24]
 11677 0010 1C100BE5 		str	r1, [fp, #-28]
 11678 0014 20200BE5 		str	r2, [fp, #-32]
4981:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4982:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4983:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4984:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Old;
4985:../../Source/Kernel/rme_kernel.c **** #else
4986:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Old;
4987:../../Source/Kernel/rme_kernel.c **** #endif
4988:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4989:../../Source/Kernel/rme_kernel.c ****     
4990:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4991:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11679              		.loc 1 4991 5
 11680 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11681 001c 803003E2 		and	r3, r3, #128
 11682 0020 000053E3 		cmp	r3, #0
 11683 0024 1C00001A 		bne	.L749
 11684              		.loc 1 4991 5 is_stmt 0 discriminator 1
 11685 0028 18301BE5 		ldr	r3, [fp, #-24]
 11686 002c 142093E5 		ldr	r2, [r3, #20]
 11687 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11688 0034 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 294


 11689 0038 0100008A 		bhi	.L750
 11690              		.loc 1 4991 5 discriminator 3
 11691 003c 0230E0E3 		mvn	r3, #2
 11692              		.loc 1 4991 5
 11693 0040 E30000EA 		b	.L751
 11694              	.L750:
 11695              		.loc 1 4991 5 discriminator 4
 11696 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11697 0048 8322A0E1 		lsl	r2, r3, #5
 11698 004c 18301BE5 		ldr	r3, [fp, #-24]
 11699 0050 0C3093E5 		ldr	r3, [r3, #12]
 11700 0054 033082E0 		add	r3, r2, r3
 11701 0058 08300BE5 		str	r3, [fp, #-8]
 11702 005c 08301BE5 		ldr	r3, [fp, #-8]
 11703 0060 0300A0E1 		mov	r0, r3
 11704 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11705 0068 10000BE5 		str	r0, [fp, #-16]
 11706              		.loc 1 4991 5 discriminator 1
 11707 006c 10301BE5 		ldr	r3, [fp, #-16]
 11708 0070 FF3803E2 		and	r3, r3, #16711680
 11709 0074 020853E3 		cmp	r3, #131072
 11710 0078 0100001A 		bne	.L752
 11711              		.loc 1 4991 5 discriminator 5
 11712 007c 0830E0E3 		mvn	r3, #8
 11713              		.loc 1 4991 5
 11714 0080 D30000EA 		b	.L751
 11715              	.L752:
 11716              		.loc 1 4991 5 discriminator 6
 11717 0084 10301BE5 		ldr	r3, [fp, #-16]
 11718 0088 233CA0E1 		lsr	r3, r3, #24
 11719 008c 050053E3 		cmp	r3, #5
 11720 0090 3F00000A 		beq	.L753
 11721              		.loc 1 4991 5 discriminator 7
 11722 0094 0130E0E3 		mvn	r3, #1
 11723              		.loc 1 4991 5
 11724 0098 CD0000EA 		b	.L751
 11725              	.L749:
 11726              		.loc 1 4991 5 discriminator 2
 11727 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11728 00a0 2324A0E1 		lsr	r2, r3, #8
 11729 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11730 00a8 143093E5 		ldr	r3, [r3, #20]
 11731 00ac 030052E1 		cmp	r2, r3
 11732 00b0 0100003A 		bcc	.L754
 11733              		.loc 1 4991 5 discriminator 8
 11734 00b4 0230E0E3 		mvn	r3, #2
 11735              		.loc 1 4991 5
 11736 00b8 C50000EA 		b	.L751
 11737              	.L754:
 11738              		.loc 1 4991 5 discriminator 9
 11739 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11740 00c0 2334A0E1 		lsr	r3, r3, #8
 11741 00c4 8322A0E1 		lsl	r2, r3, #5
 11742 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11743 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11744 00d0 033082E0 		add	r3, r2, r3
 11745 00d4 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 295


 11746 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11747 00dc 0300A0E1 		mov	r0, r3
 11748 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11749 00e4 10000BE5 		str	r0, [fp, #-16]
 11750              		.loc 1 4991 5 discriminator 1
 11751 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11752 00ec FF3803E2 		and	r3, r3, #16711680
 11753 00f0 020853E3 		cmp	r3, #131072
 11754 00f4 0100001A 		bne	.L755
 11755              		.loc 1 4991 5 discriminator 10
 11756 00f8 0830E0E3 		mvn	r3, #8
 11757              		.loc 1 4991 5
 11758 00fc B40000EA 		b	.L751
 11759              	.L755:
 11760              		.loc 1 4991 5 discriminator 11
 11761 0100 10301BE5 		ldr	r3, [fp, #-16]
 11762 0104 233CA0E1 		lsr	r3, r3, #24
 11763 0108 030053E3 		cmp	r3, #3
 11764 010c 0100000A 		beq	.L756
 11765              		.loc 1 4991 5 discriminator 12
 11766 0110 0130E0E3 		mvn	r3, #1
 11767              		.loc 1 4991 5
 11768 0114 AE0000EA 		b	.L751
 11769              	.L756:
 11770              		.loc 1 4991 5 discriminator 13
 11771 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11772 011c 7F2003E2 		and	r2, r3, #127
 11773 0120 08301BE5 		ldr	r3, [fp, #-8]
 11774 0124 143093E5 		ldr	r3, [r3, #20]
 11775 0128 030052E1 		cmp	r2, r3
 11776 012c 0100003A 		bcc	.L757
 11777              		.loc 1 4991 5 discriminator 14
 11778 0130 0230E0E3 		mvn	r3, #2
 11779              		.loc 1 4991 5
 11780 0134 A60000EA 		b	.L751
 11781              	.L757:
 11782              		.loc 1 4991 5 discriminator 15
 11783 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11784 013c 7F3003E2 		and	r3, r3, #127
 11785 0140 8322A0E1 		lsl	r2, r3, #5
 11786 0144 08301BE5 		ldr	r3, [fp, #-8]
 11787 0148 0C3093E5 		ldr	r3, [r3, #12]
 11788 014c 033082E0 		add	r3, r2, r3
 11789 0150 08300BE5 		str	r3, [fp, #-8]
 11790 0154 08301BE5 		ldr	r3, [fp, #-8]
 11791 0158 0300A0E1 		mov	r0, r3
 11792 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11793 0160 10000BE5 		str	r0, [fp, #-16]
 11794              		.loc 1 4991 5 discriminator 1
 11795 0164 10301BE5 		ldr	r3, [fp, #-16]
 11796 0168 FF3803E2 		and	r3, r3, #16711680
 11797 016c 020853E3 		cmp	r3, #131072
 11798 0170 0100001A 		bne	.L758
 11799              		.loc 1 4991 5 discriminator 16
 11800 0174 0830E0E3 		mvn	r3, #8
 11801              		.loc 1 4991 5
 11802 0178 950000EA 		b	.L751
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 296


 11803              	.L758:
 11804              		.loc 1 4991 5 discriminator 17
 11805 017c 10301BE5 		ldr	r3, [fp, #-16]
 11806 0180 233CA0E1 		lsr	r3, r3, #24
 11807 0184 050053E3 		cmp	r3, #5
 11808 0188 0100000A 		beq	.L753
 11809              		.loc 1 4991 5 discriminator 18
 11810 018c 0130E0E3 		mvn	r3, #1
 11811              		.loc 1 4991 5
 11812 0190 8F0000EA 		b	.L751
 11813              	.L753:
4992:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4993:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4994:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 11814              		.loc 1 4994 5 is_stmt 1
 11815 0194 20301BE5 		ldr	r3, [fp, #-32]
 11816 0198 803003E2 		and	r3, r3, #128
 11817 019c 000053E3 		cmp	r3, #0
 11818 01a0 1C00001A 		bne	.L759
 11819              		.loc 1 4994 5 is_stmt 0 discriminator 1
 11820 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11821 01a8 142093E5 		ldr	r2, [r3, #20]
 11822 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11823 01b0 030052E1 		cmp	r2, r3
 11824 01b4 0100008A 		bhi	.L760
 11825              		.loc 1 4994 5 discriminator 3
 11826 01b8 0230E0E3 		mvn	r3, #2
 11827              		.loc 1 4994 5
 11828 01bc 840000EA 		b	.L751
 11829              	.L760:
 11830              		.loc 1 4994 5 discriminator 4
 11831 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11832 01c4 8322A0E1 		lsl	r2, r3, #5
 11833 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11834 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11835 01d0 033082E0 		add	r3, r2, r3
 11836 01d4 0C300BE5 		str	r3, [fp, #-12]
 11837 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11838 01dc 0300A0E1 		mov	r0, r3
 11839 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11840 01e4 10000BE5 		str	r0, [fp, #-16]
 11841              		.loc 1 4994 5 discriminator 1
 11842 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11843 01ec FF3803E2 		and	r3, r3, #16711680
 11844 01f0 020853E3 		cmp	r3, #131072
 11845 01f4 0100001A 		bne	.L761
 11846              		.loc 1 4994 5 discriminator 5
 11847 01f8 0830E0E3 		mvn	r3, #8
 11848              		.loc 1 4994 5
 11849 01fc 740000EA 		b	.L751
 11850              	.L761:
 11851              		.loc 1 4994 5 discriminator 6
 11852 0200 10301BE5 		ldr	r3, [fp, #-16]
 11853 0204 233CA0E1 		lsr	r3, r3, #24
 11854 0208 040053E3 		cmp	r3, #4
 11855 020c 3F00000A 		beq	.L762
 11856              		.loc 1 4994 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 297


 11857 0210 0130E0E3 		mvn	r3, #1
 11858              		.loc 1 4994 5
 11859 0214 6E0000EA 		b	.L751
 11860              	.L759:
 11861              		.loc 1 4994 5 discriminator 2
 11862 0218 20301BE5 		ldr	r3, [fp, #-32]
 11863 021c 2324A0E1 		lsr	r2, r3, #8
 11864 0220 18301BE5 		ldr	r3, [fp, #-24]
 11865 0224 143093E5 		ldr	r3, [r3, #20]
 11866 0228 030052E1 		cmp	r2, r3
 11867 022c 0100003A 		bcc	.L763
 11868              		.loc 1 4994 5 discriminator 8
 11869 0230 0230E0E3 		mvn	r3, #2
 11870              		.loc 1 4994 5
 11871 0234 660000EA 		b	.L751
 11872              	.L763:
 11873              		.loc 1 4994 5 discriminator 9
 11874 0238 20301BE5 		ldr	r3, [fp, #-32]
 11875 023c 2334A0E1 		lsr	r3, r3, #8
 11876 0240 8322A0E1 		lsl	r2, r3, #5
 11877 0244 18301BE5 		ldr	r3, [fp, #-24]
 11878 0248 0C3093E5 		ldr	r3, [r3, #12]
 11879 024c 033082E0 		add	r3, r2, r3
 11880 0250 0C300BE5 		str	r3, [fp, #-12]
 11881 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11882 0258 0300A0E1 		mov	r0, r3
 11883 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11884 0260 10000BE5 		str	r0, [fp, #-16]
 11885              		.loc 1 4994 5 discriminator 1
 11886 0264 10301BE5 		ldr	r3, [fp, #-16]
 11887 0268 FF3803E2 		and	r3, r3, #16711680
 11888 026c 020853E3 		cmp	r3, #131072
 11889 0270 0100001A 		bne	.L764
 11890              		.loc 1 4994 5 discriminator 10
 11891 0274 0830E0E3 		mvn	r3, #8
 11892              		.loc 1 4994 5
 11893 0278 550000EA 		b	.L751
 11894              	.L764:
 11895              		.loc 1 4994 5 discriminator 11
 11896 027c 10301BE5 		ldr	r3, [fp, #-16]
 11897 0280 233CA0E1 		lsr	r3, r3, #24
 11898 0284 030053E3 		cmp	r3, #3
 11899 0288 0100000A 		beq	.L765
 11900              		.loc 1 4994 5 discriminator 12
 11901 028c 0130E0E3 		mvn	r3, #1
 11902              		.loc 1 4994 5
 11903 0290 4F0000EA 		b	.L751
 11904              	.L765:
 11905              		.loc 1 4994 5 discriminator 13
 11906 0294 20301BE5 		ldr	r3, [fp, #-32]
 11907 0298 7F2003E2 		and	r2, r3, #127
 11908 029c 0C301BE5 		ldr	r3, [fp, #-12]
 11909 02a0 143093E5 		ldr	r3, [r3, #20]
 11910 02a4 030052E1 		cmp	r2, r3
 11911 02a8 0100003A 		bcc	.L766
 11912              		.loc 1 4994 5 discriminator 14
 11913 02ac 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 298


 11914              		.loc 1 4994 5
 11915 02b0 470000EA 		b	.L751
 11916              	.L766:
 11917              		.loc 1 4994 5 discriminator 15
 11918 02b4 20301BE5 		ldr	r3, [fp, #-32]
 11919 02b8 7F3003E2 		and	r3, r3, #127
 11920 02bc 8322A0E1 		lsl	r2, r3, #5
 11921 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 11922 02c4 0C3093E5 		ldr	r3, [r3, #12]
 11923 02c8 033082E0 		add	r3, r2, r3
 11924 02cc 0C300BE5 		str	r3, [fp, #-12]
 11925 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 11926 02d4 0300A0E1 		mov	r0, r3
 11927 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11928 02dc 10000BE5 		str	r0, [fp, #-16]
 11929              		.loc 1 4994 5 discriminator 1
 11930 02e0 10301BE5 		ldr	r3, [fp, #-16]
 11931 02e4 FF3803E2 		and	r3, r3, #16711680
 11932 02e8 020853E3 		cmp	r3, #131072
 11933 02ec 0100001A 		bne	.L767
 11934              		.loc 1 4994 5 discriminator 16
 11935 02f0 0830E0E3 		mvn	r3, #8
 11936              		.loc 1 4994 5
 11937 02f4 360000EA 		b	.L751
 11938              	.L767:
 11939              		.loc 1 4994 5 discriminator 17
 11940 02f8 10301BE5 		ldr	r3, [fp, #-16]
 11941 02fc 233CA0E1 		lsr	r3, r3, #24
 11942 0300 040053E3 		cmp	r3, #4
 11943 0304 0100000A 		beq	.L762
 11944              		.loc 1 4994 5 discriminator 18
 11945 0308 0130E0E3 		mvn	r3, #1
 11946              		.loc 1 4994 5
 11947 030c 300000EA 		b	.L751
 11948              	.L762:
4995:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_New,Type_Stat);
4996:../../Source/Kernel/rme_kernel.c **** #endif
4997:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4998:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_PGT);
 11949              		.loc 1 4998 5 is_stmt 1
 11950 0310 08301BE5 		ldr	r3, [fp, #-8]
 11951 0314 083093E5 		ldr	r3, [r3, #8]
 11952 0318 083003E2 		and	r3, r3, #8
 11953 031c 000053E3 		cmp	r3, #0
 11954 0320 0100001A 		bne	.L768
 11955              		.loc 1 4998 5 is_stmt 0 discriminator 1
 11956 0324 0630E0E3 		mvn	r3, #6
 11957              		.loc 1 4998 5
 11958 0328 290000EA 		b	.L751
 11959              	.L768:
4999:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5000:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_New,RME_PGT_FLAG_PRC_PGT);
 11960              		.loc 1 5000 5 is_stmt 1
 11961 032c 0C301BE5 		ldr	r3, [fp, #-12]
 11962 0330 083093E5 		ldr	r3, [r3, #8]
 11963 0334 803003E2 		and	r3, r3, #128
 11964 0338 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 299


 11965 033c 0100001A 		bne	.L769
 11966              		.loc 1 5000 5 is_stmt 0 discriminator 1
 11967 0340 0630E0E3 		mvn	r3, #6
 11968              		.loc 1 5000 5
 11969 0344 220000EA 		b	.L751
 11970              	.L769:
5001:../../Source/Kernel/rme_kernel.c **** #endif
5002:../../Source/Kernel/rme_kernel.c ****     
5003:../../Source/Kernel/rme_kernel.c ****     Pgt_Old=Prc_Op->Pgt;
 11971              		.loc 1 5003 12 is_stmt 1
 11972 0348 08301BE5 		ldr	r3, [fp, #-8]
 11973 034c 183093E5 		ldr	r3, [r3, #24]
 11974 0350 14300BE5 		str	r3, [fp, #-20]
5004:../../Source/Kernel/rme_kernel.c ****     
5005:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5006:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
5007:../../Source/Kernel/rme_kernel.c ****     Pgt_New=RME_CAP_CONV_ROOT(Pgt_New,struct RME_Cap_Pgt*);
 11975              		.loc 1 5007 13
 11976 0354 0C301BE5 		ldr	r3, [fp, #-12]
 11977 0358 003093E5 		ldr	r3, [r3]
 11978 035c 7330FFE6 		uxth	r3, r3
 11979 0360 000053E3 		cmp	r3, #0
 11980 0364 0200000A 		beq	.L770
 11981              		.loc 1 5007 13 is_stmt 0 discriminator 1
 11982 0368 0C301BE5 		ldr	r3, [fp, #-12]
 11983 036c 043093E5 		ldr	r3, [r3, #4]
 11984 0370 000000EA 		b	.L771
 11985              	.L770:
 11986              		.loc 1 5007 13 discriminator 2
 11987 0374 0C301BE5 		ldr	r3, [fp, #-12]
 11988              	.L771:
 11989              		.loc 1 5007 12 is_stmt 1 discriminator 4
 11990 0378 0C300BE5 		str	r3, [fp, #-12]
5008:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5009:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
 11991              		.loc 1 5009 8
 11992 037c 08301BE5 		ldr	r3, [fp, #-8]
 11993 0380 183083E2 		add	r3, r3, #24
 11994 0384 14101BE5 		ldr	r1, [fp, #-20]
 11995 0388 0C201BE5 		ldr	r2, [fp, #-12]
 11996 038c 0300A0E1 		mov	r0, r3
 11997 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11998 0394 0030A0E1 		mov	r3, r0
 11999              		.loc 1 5009 7 discriminator 1
 12000 0398 000053E3 		cmp	r3, #0
 12001 039c 0100001A 		bne	.L772
5010:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5011:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_New)==RME_CASFAIL)
5012:../../Source/Kernel/rme_kernel.c **** #else
5013:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5014:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
5015:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5016:../../Source/Kernel/rme_kernel.c ****                      Raw_Pgt)==RME_CASFAIL)
5017:../../Source/Kernel/rme_kernel.c **** #endif
5018:../../Source/Kernel/rme_kernel.c ****     {
5019:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5020:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 300


5021:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 12002              		.loc 1 5021 16
 12003 03a0 C930E0E3 		mvn	r3, #201
 12004 03a4 0A0000EA 		b	.L751
 12005              	.L772:
5022:../../Source/Kernel/rme_kernel.c ****     }
5023:../../Source/Kernel/rme_kernel.c ****     else
5024:../../Source/Kernel/rme_kernel.c ****     {
5025:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5026:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5027:../../Source/Kernel/rme_kernel.c ****     }
5028:../../Source/Kernel/rme_kernel.c ****     
5029:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
5030:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5031:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_New->Head.Root_Ref),1);
 12006              		.loc 1 5031 5
 12007 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 12008 03ac 043083E2 		add	r3, r3, #4
 12009 03b0 0110A0E3 		mov	r1, #1
 12010 03b4 0300A0E1 		mov	r0, r3
 12011 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5032:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Old->Head.Root_Ref),-1);
 12012              		.loc 1 5032 5
 12013 03bc 14301BE5 		ldr	r3, [fp, #-20]
 12014 03c0 043083E2 		add	r3, r3, #4
 12015 03c4 0010E0E3 		mvn	r1, #0
 12016 03c8 0300A0E1 		mov	r0, r3
 12017 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
5033:../../Source/Kernel/rme_kernel.c **** #endif
5034:../../Source/Kernel/rme_kernel.c ****     
5035:../../Source/Kernel/rme_kernel.c ****     return 0;
 12018              		.loc 1 5035 12
 12019 03d0 0030A0E3 		mov	r3, #0
 12020              	.L751:
5036:../../Source/Kernel/rme_kernel.c **** }
 12021              		.loc 1 5036 1
 12022 03d4 0300A0E1 		mov	r0, r3
 12023 03d8 04D04BE2 		sub	sp, fp, #4
 12024              		.cfi_def_cfa 13, 8
 12025              		@ sp needed
 12026 03dc 0088BDE8 		pop	{fp, pc}
 12027              		.cfi_endproc
 12028              	.LFE54:
 12030              		.section	.text._RME_Thd_Boot_Crt,"ax",%progbits
 12031              		.align	2
 12032              		.global	_RME_Thd_Boot_Crt
 12033              		.syntax unified
 12034              		.arm
 12036              	_RME_Thd_Boot_Crt:
 12037              	.LFB55:
5037:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Pgt *************************************************/
5038:../../Source/Kernel/rme_kernel.c **** 
5039:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Boot_Crt *************************************************
5040:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time thread. The boot-time thread is per-core, and
5041:../../Source/Kernel/rme_kernel.c ****               will have infinite budget, and has no parent. This function
5042:../../Source/Kernel/rme_kernel.c ****               allows creation of a thread on behalf of other processors,
5043:../../Source/Kernel/rme_kernel.c ****               by passing a CPUID parameter. Therefore, it is recommended to
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 301


5044:../../Source/Kernel/rme_kernel.c ****               create the threads sequentially during boot-up; if you create
5045:../../Source/Kernel/rme_kernel.c ****               threads in parallel, be sure to only create the thread on your
5046:../../Source/Kernel/rme_kernel.c ****               local core.
5047:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and 
5048:../../Source/Kernel/rme_kernel.c ****               the initial threads' maximum priority will be set by the system.
5049:../../Source/Kernel/rme_kernel.c ****               This thread is a basic thread and hence always have attribute 0.
5050:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5051:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5052:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5053:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5054:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5055:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5056:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5057:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5058:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the thread.
5059:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level of the thread.
5060:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure of the
5061:../../Source/Kernel/rme_kernel.c ****                                             CPU to bind the thread to.
5062:../../Source/Kernel/rme_kernel.c **** Output      : None.
5063:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5064:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5065:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Thd_Boot_Crt(struct RME_Cap_Cpt* Cpt,
5066:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
5067:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Thd,
5068:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
5069:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
5070:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Prio,
5071:../../Source/Kernel/rme_kernel.c ****                             struct RME_CPU_Local* Local)
5072:../../Source/Kernel/rme_kernel.c **** {
 12038              		.loc 1 5072 1
 12039              		.cfi_startproc
 12040              		@ args = 12, pretend = 0, frame = 40
 12041              		@ frame_needed = 1, uses_anonymous_args = 0
 12042 0000 00482DE9 		push	{fp, lr}
 12043              		.cfi_def_cfa_offset 8
 12044              		.cfi_offset 11, -8
 12045              		.cfi_offset 14, -4
 12046 0004 04B08DE2 		add	fp, sp, #4
 12047              		.cfi_def_cfa 11, 4
 12048 0008 28D04DE2 		sub	sp, sp, #40
 12049 000c 20000BE5 		str	r0, [fp, #-32]
 12050 0010 24100BE5 		str	r1, [fp, #-36]
 12051 0014 28200BE5 		str	r2, [fp, #-40]
 12052 0018 2C300BE5 		str	r3, [fp, #-44]
5073:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5074:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5075:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5076:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5077:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5078:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5079:../../Source/Kernel/rme_kernel.c ****     
5080:../../Source/Kernel/rme_kernel.c ****     /* Check whether the priority level is allowed */
5081:../../Source/Kernel/rme_kernel.c ****     if(Prio>=RME_PREEMPT_PRIO_NUM)
 12053              		.loc 1 5081 7
 12054 001c 08309BE5 		ldr	r3, [fp, #8]
 12055 0020 1F0053E3 		cmp	r3, #31
 12056 0024 0100009A 		bls	.L774
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 302


5082:../../Source/Kernel/rme_kernel.c ****     {
5083:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5084:../../Source/Kernel/rme_kernel.c **** 
5085:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12057              		.loc 1 5085 16
 12058 0028 CC30E0E3 		mvn	r3, #204
 12059 002c 4C0100EA 		b	.L775
 12060              	.L774:
5086:../../Source/Kernel/rme_kernel.c ****     }
5087:../../Source/Kernel/rme_kernel.c ****     else
5088:../../Source/Kernel/rme_kernel.c ****     {
5089:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5090:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5091:../../Source/Kernel/rme_kernel.c ****     }
5092:../../Source/Kernel/rme_kernel.c ****     
5093:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5094:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12061              		.loc 1 5094 5
 12062 0030 24301BE5 		ldr	r3, [fp, #-36]
 12063 0034 803003E2 		and	r3, r3, #128
 12064 0038 000053E3 		cmp	r3, #0
 12065 003c 1C00001A 		bne	.L776
 12066              		.loc 1 5094 5 is_stmt 0 discriminator 1
 12067 0040 20301BE5 		ldr	r3, [fp, #-32]
 12068 0044 142093E5 		ldr	r2, [r3, #20]
 12069 0048 24301BE5 		ldr	r3, [fp, #-36]
 12070 004c 030052E1 		cmp	r2, r3
 12071 0050 0100008A 		bhi	.L777
 12072              		.loc 1 5094 5 discriminator 3
 12073 0054 0230E0E3 		mvn	r3, #2
 12074              		.loc 1 5094 5
 12075 0058 410100EA 		b	.L775
 12076              	.L777:
 12077              		.loc 1 5094 5 discriminator 4
 12078 005c 24301BE5 		ldr	r3, [fp, #-36]
 12079 0060 8322A0E1 		lsl	r2, r3, #5
 12080 0064 20301BE5 		ldr	r3, [fp, #-32]
 12081 0068 0C3093E5 		ldr	r3, [r3, #12]
 12082 006c 033082E0 		add	r3, r2, r3
 12083 0070 08300BE5 		str	r3, [fp, #-8]
 12084 0074 08301BE5 		ldr	r3, [fp, #-8]
 12085 0078 0300A0E1 		mov	r0, r3
 12086 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12087 0080 10000BE5 		str	r0, [fp, #-16]
 12088              		.loc 1 5094 5 discriminator 1
 12089 0084 10301BE5 		ldr	r3, [fp, #-16]
 12090 0088 FF3803E2 		and	r3, r3, #16711680
 12091 008c 020853E3 		cmp	r3, #131072
 12092 0090 0100001A 		bne	.L778
 12093              		.loc 1 5094 5 discriminator 5
 12094 0094 0830E0E3 		mvn	r3, #8
 12095              		.loc 1 5094 5
 12096 0098 310100EA 		b	.L775
 12097              	.L778:
 12098              		.loc 1 5094 5 discriminator 6
 12099 009c 10301BE5 		ldr	r3, [fp, #-16]
 12100 00a0 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 303


 12101 00a4 030053E3 		cmp	r3, #3
 12102 00a8 3F00000A 		beq	.L779
 12103              		.loc 1 5094 5 discriminator 7
 12104 00ac 0130E0E3 		mvn	r3, #1
 12105              		.loc 1 5094 5
 12106 00b0 2B0100EA 		b	.L775
 12107              	.L776:
 12108              		.loc 1 5094 5 discriminator 2
 12109 00b4 24301BE5 		ldr	r3, [fp, #-36]
 12110 00b8 2324A0E1 		lsr	r2, r3, #8
 12111 00bc 20301BE5 		ldr	r3, [fp, #-32]
 12112 00c0 143093E5 		ldr	r3, [r3, #20]
 12113 00c4 030052E1 		cmp	r2, r3
 12114 00c8 0100003A 		bcc	.L780
 12115              		.loc 1 5094 5 discriminator 8
 12116 00cc 0230E0E3 		mvn	r3, #2
 12117              		.loc 1 5094 5
 12118 00d0 230100EA 		b	.L775
 12119              	.L780:
 12120              		.loc 1 5094 5 discriminator 9
 12121 00d4 24301BE5 		ldr	r3, [fp, #-36]
 12122 00d8 2334A0E1 		lsr	r3, r3, #8
 12123 00dc 8322A0E1 		lsl	r2, r3, #5
 12124 00e0 20301BE5 		ldr	r3, [fp, #-32]
 12125 00e4 0C3093E5 		ldr	r3, [r3, #12]
 12126 00e8 033082E0 		add	r3, r2, r3
 12127 00ec 08300BE5 		str	r3, [fp, #-8]
 12128 00f0 08301BE5 		ldr	r3, [fp, #-8]
 12129 00f4 0300A0E1 		mov	r0, r3
 12130 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12131 00fc 10000BE5 		str	r0, [fp, #-16]
 12132              		.loc 1 5094 5 discriminator 1
 12133 0100 10301BE5 		ldr	r3, [fp, #-16]
 12134 0104 FF3803E2 		and	r3, r3, #16711680
 12135 0108 020853E3 		cmp	r3, #131072
 12136 010c 0100001A 		bne	.L781
 12137              		.loc 1 5094 5 discriminator 10
 12138 0110 0830E0E3 		mvn	r3, #8
 12139              		.loc 1 5094 5
 12140 0114 120100EA 		b	.L775
 12141              	.L781:
 12142              		.loc 1 5094 5 discriminator 11
 12143 0118 10301BE5 		ldr	r3, [fp, #-16]
 12144 011c 233CA0E1 		lsr	r3, r3, #24
 12145 0120 030053E3 		cmp	r3, #3
 12146 0124 0100000A 		beq	.L782
 12147              		.loc 1 5094 5 discriminator 12
 12148 0128 0130E0E3 		mvn	r3, #1
 12149              		.loc 1 5094 5
 12150 012c 0C0100EA 		b	.L775
 12151              	.L782:
 12152              		.loc 1 5094 5 discriminator 13
 12153 0130 24301BE5 		ldr	r3, [fp, #-36]
 12154 0134 7F2003E2 		and	r2, r3, #127
 12155 0138 08301BE5 		ldr	r3, [fp, #-8]
 12156 013c 143093E5 		ldr	r3, [r3, #20]
 12157 0140 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 304


 12158 0144 0100003A 		bcc	.L783
 12159              		.loc 1 5094 5 discriminator 14
 12160 0148 0230E0E3 		mvn	r3, #2
 12161              		.loc 1 5094 5
 12162 014c 040100EA 		b	.L775
 12163              	.L783:
 12164              		.loc 1 5094 5 discriminator 15
 12165 0150 24301BE5 		ldr	r3, [fp, #-36]
 12166 0154 7F3003E2 		and	r3, r3, #127
 12167 0158 8322A0E1 		lsl	r2, r3, #5
 12168 015c 08301BE5 		ldr	r3, [fp, #-8]
 12169 0160 0C3093E5 		ldr	r3, [r3, #12]
 12170 0164 033082E0 		add	r3, r2, r3
 12171 0168 08300BE5 		str	r3, [fp, #-8]
 12172 016c 08301BE5 		ldr	r3, [fp, #-8]
 12173 0170 0300A0E1 		mov	r0, r3
 12174 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12175 0178 10000BE5 		str	r0, [fp, #-16]
 12176              		.loc 1 5094 5 discriminator 1
 12177 017c 10301BE5 		ldr	r3, [fp, #-16]
 12178 0180 FF3803E2 		and	r3, r3, #16711680
 12179 0184 020853E3 		cmp	r3, #131072
 12180 0188 0100001A 		bne	.L784
 12181              		.loc 1 5094 5 discriminator 16
 12182 018c 0830E0E3 		mvn	r3, #8
 12183              		.loc 1 5094 5
 12184 0190 F30000EA 		b	.L775
 12185              	.L784:
 12186              		.loc 1 5094 5 discriminator 17
 12187 0194 10301BE5 		ldr	r3, [fp, #-16]
 12188 0198 233CA0E1 		lsr	r3, r3, #24
 12189 019c 030053E3 		cmp	r3, #3
 12190 01a0 0100000A 		beq	.L779
 12191              		.loc 1 5094 5 discriminator 18
 12192 01a4 0130E0E3 		mvn	r3, #1
 12193              		.loc 1 5094 5
 12194 01a8 ED0000EA 		b	.L775
 12195              	.L779:
5095:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5096:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12196              		.loc 1 5096 5 is_stmt 1
 12197 01ac 2C301BE5 		ldr	r3, [fp, #-44]
 12198 01b0 803003E2 		and	r3, r3, #128
 12199 01b4 000053E3 		cmp	r3, #0
 12200 01b8 1C00001A 		bne	.L785
 12201              		.loc 1 5096 5 is_stmt 0 discriminator 1
 12202 01bc 20301BE5 		ldr	r3, [fp, #-32]
 12203 01c0 142093E5 		ldr	r2, [r3, #20]
 12204 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 12205 01c8 030052E1 		cmp	r2, r3
 12206 01cc 0100008A 		bhi	.L786
 12207              		.loc 1 5096 5 discriminator 3
 12208 01d0 0230E0E3 		mvn	r3, #2
 12209              		.loc 1 5096 5
 12210 01d4 E20000EA 		b	.L775
 12211              	.L786:
 12212              		.loc 1 5096 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 305


 12213 01d8 2C301BE5 		ldr	r3, [fp, #-44]
 12214 01dc 8322A0E1 		lsl	r2, r3, #5
 12215 01e0 20301BE5 		ldr	r3, [fp, #-32]
 12216 01e4 0C3093E5 		ldr	r3, [r3, #12]
 12217 01e8 033082E0 		add	r3, r2, r3
 12218 01ec 0C300BE5 		str	r3, [fp, #-12]
 12219 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 12220 01f4 0300A0E1 		mov	r0, r3
 12221 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12222 01fc 10000BE5 		str	r0, [fp, #-16]
 12223              		.loc 1 5096 5 discriminator 1
 12224 0200 10301BE5 		ldr	r3, [fp, #-16]
 12225 0204 FF3803E2 		and	r3, r3, #16711680
 12226 0208 020853E3 		cmp	r3, #131072
 12227 020c 0100001A 		bne	.L787
 12228              		.loc 1 5096 5 discriminator 5
 12229 0210 0830E0E3 		mvn	r3, #8
 12230              		.loc 1 5096 5
 12231 0214 D20000EA 		b	.L775
 12232              	.L787:
 12233              		.loc 1 5096 5 discriminator 6
 12234 0218 10301BE5 		ldr	r3, [fp, #-16]
 12235 021c 233CA0E1 		lsr	r3, r3, #24
 12236 0220 050053E3 		cmp	r3, #5
 12237 0224 3F00000A 		beq	.L788
 12238              		.loc 1 5096 5 discriminator 7
 12239 0228 0130E0E3 		mvn	r3, #1
 12240              		.loc 1 5096 5
 12241 022c CC0000EA 		b	.L775
 12242              	.L785:
 12243              		.loc 1 5096 5 discriminator 2
 12244 0230 2C301BE5 		ldr	r3, [fp, #-44]
 12245 0234 2324A0E1 		lsr	r2, r3, #8
 12246 0238 20301BE5 		ldr	r3, [fp, #-32]
 12247 023c 143093E5 		ldr	r3, [r3, #20]
 12248 0240 030052E1 		cmp	r2, r3
 12249 0244 0100003A 		bcc	.L789
 12250              		.loc 1 5096 5 discriminator 8
 12251 0248 0230E0E3 		mvn	r3, #2
 12252              		.loc 1 5096 5
 12253 024c C40000EA 		b	.L775
 12254              	.L789:
 12255              		.loc 1 5096 5 discriminator 9
 12256 0250 2C301BE5 		ldr	r3, [fp, #-44]
 12257 0254 2334A0E1 		lsr	r3, r3, #8
 12258 0258 8322A0E1 		lsl	r2, r3, #5
 12259 025c 20301BE5 		ldr	r3, [fp, #-32]
 12260 0260 0C3093E5 		ldr	r3, [r3, #12]
 12261 0264 033082E0 		add	r3, r2, r3
 12262 0268 0C300BE5 		str	r3, [fp, #-12]
 12263 026c 0C301BE5 		ldr	r3, [fp, #-12]
 12264 0270 0300A0E1 		mov	r0, r3
 12265 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12266 0278 10000BE5 		str	r0, [fp, #-16]
 12267              		.loc 1 5096 5 discriminator 1
 12268 027c 10301BE5 		ldr	r3, [fp, #-16]
 12269 0280 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 306


 12270 0284 020853E3 		cmp	r3, #131072
 12271 0288 0100001A 		bne	.L790
 12272              		.loc 1 5096 5 discriminator 10
 12273 028c 0830E0E3 		mvn	r3, #8
 12274              		.loc 1 5096 5
 12275 0290 B30000EA 		b	.L775
 12276              	.L790:
 12277              		.loc 1 5096 5 discriminator 11
 12278 0294 10301BE5 		ldr	r3, [fp, #-16]
 12279 0298 233CA0E1 		lsr	r3, r3, #24
 12280 029c 030053E3 		cmp	r3, #3
 12281 02a0 0100000A 		beq	.L791
 12282              		.loc 1 5096 5 discriminator 12
 12283 02a4 0130E0E3 		mvn	r3, #1
 12284              		.loc 1 5096 5
 12285 02a8 AD0000EA 		b	.L775
 12286              	.L791:
 12287              		.loc 1 5096 5 discriminator 13
 12288 02ac 2C301BE5 		ldr	r3, [fp, #-44]
 12289 02b0 7F2003E2 		and	r2, r3, #127
 12290 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 12291 02b8 143093E5 		ldr	r3, [r3, #20]
 12292 02bc 030052E1 		cmp	r2, r3
 12293 02c0 0100003A 		bcc	.L792
 12294              		.loc 1 5096 5 discriminator 14
 12295 02c4 0230E0E3 		mvn	r3, #2
 12296              		.loc 1 5096 5
 12297 02c8 A50000EA 		b	.L775
 12298              	.L792:
 12299              		.loc 1 5096 5 discriminator 15
 12300 02cc 2C301BE5 		ldr	r3, [fp, #-44]
 12301 02d0 7F3003E2 		and	r3, r3, #127
 12302 02d4 8322A0E1 		lsl	r2, r3, #5
 12303 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 12304 02dc 0C3093E5 		ldr	r3, [r3, #12]
 12305 02e0 033082E0 		add	r3, r2, r3
 12306 02e4 0C300BE5 		str	r3, [fp, #-12]
 12307 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 12308 02ec 0300A0E1 		mov	r0, r3
 12309 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12310 02f4 10000BE5 		str	r0, [fp, #-16]
 12311              		.loc 1 5096 5 discriminator 1
 12312 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12313 02fc FF3803E2 		and	r3, r3, #16711680
 12314 0300 020853E3 		cmp	r3, #131072
 12315 0304 0100001A 		bne	.L793
 12316              		.loc 1 5096 5 discriminator 16
 12317 0308 0830E0E3 		mvn	r3, #8
 12318              		.loc 1 5096 5
 12319 030c 940000EA 		b	.L775
 12320              	.L793:
 12321              		.loc 1 5096 5 discriminator 17
 12322 0310 10301BE5 		ldr	r3, [fp, #-16]
 12323 0314 233CA0E1 		lsr	r3, r3, #24
 12324 0318 050053E3 		cmp	r3, #5
 12325 031c 0100000A 		beq	.L788
 12326              		.loc 1 5096 5 discriminator 18
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 307


 12327 0320 0130E0E3 		mvn	r3, #1
 12328              		.loc 1 5096 5
 12329 0324 8E0000EA 		b	.L775
 12330              	.L788:
5097:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);   
5098:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5099:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 12331              		.loc 1 5099 5 is_stmt 1
 12332 0328 08301BE5 		ldr	r3, [fp, #-8]
 12333 032c 083093E5 		ldr	r3, [r3, #8]
 12334 0330 013003E2 		and	r3, r3, #1
 12335 0334 000053E3 		cmp	r3, #0
 12336 0338 0100001A 		bne	.L794
 12337              		.loc 1 5099 5 is_stmt 0 discriminator 1
 12338 033c 0630E0E3 		mvn	r3, #6
 12339              		.loc 1 5099 5
 12340 0340 870000EA 		b	.L775
 12341              	.L794:
5100:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 12342              		.loc 1 5100 5 is_stmt 1
 12343 0344 0C301BE5 		ldr	r3, [fp, #-12]
 12344 0348 083093E5 		ldr	r3, [r3, #8]
 12345 034c 023003E2 		and	r3, r3, #2
 12346 0350 000053E3 		cmp	r3, #0
 12347 0354 0100001A 		bne	.L795
 12348              		.loc 1 5100 5 is_stmt 0 discriminator 1
 12349 0358 0630E0E3 		mvn	r3, #6
 12350              		.loc 1 5100 5
 12351 035c 800000EA 		b	.L775
 12352              	.L795:
5101:../../Source/Kernel/rme_kernel.c ****     
5102:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5103:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 12353              		.loc 1 5103 5 is_stmt 1
 12354 0360 08301BE5 		ldr	r3, [fp, #-8]
 12355 0364 142093E5 		ldr	r2, [r3, #20]
 12356 0368 28301BE5 		ldr	r3, [fp, #-40]
 12357 036c 030052E1 		cmp	r2, r3
 12358 0370 0100008A 		bhi	.L796
 12359              		.loc 1 5103 5 is_stmt 0 discriminator 1
 12360 0374 0230E0E3 		mvn	r3, #2
 12361              		.loc 1 5103 5
 12362 0378 790000EA 		b	.L775
 12363              	.L796:
 12364              		.loc 1 5103 5 discriminator 2
 12365 037c 28301BE5 		ldr	r3, [fp, #-40]
 12366 0380 8322A0E1 		lsl	r2, r3, #5
 12367 0384 08301BE5 		ldr	r3, [fp, #-8]
 12368 0388 0C3093E5 		ldr	r3, [r3, #12]
 12369 038c 033082E0 		add	r3, r2, r3
 12370 0390 14300BE5 		str	r3, [fp, #-20]
5104:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5105:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 12371              		.loc 1 5105 5 is_stmt 1
 12372 0394 14301BE5 		ldr	r3, [fp, #-20]
 12373 0398 0128A0E3 		mov	r2, #65536
 12374 039c 0010A0E3 		mov	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 308


 12375 03a0 0300A0E1 		mov	r0, r3
 12376 03a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12377 03a8 0030A0E1 		mov	r3, r0
 12378              		.loc 1 5105 5 is_stmt 0 discriminator 1
 12379 03ac 000053E3 		cmp	r3, #0
 12380 03b0 0100001A 		bne	.L797
 12381 03b4 0430E0E3 		mvn	r3, #4
 12382              		.loc 1 5105 5
 12383 03b8 690000EA 		b	.L775
 12384              	.L797:
 12385              		.loc 1 5105 5 discriminator 2
 12386 03bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 12387 03c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 12388 03c4 002093E5 		ldr	r2, [r3]
 12389 03c8 14301BE5 		ldr	r3, [fp, #-20]
 12390 03cc 102083E5 		str	r2, [r3, #16]
5106:../../Source/Kernel/rme_kernel.c ****      
5107:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5108:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_THD_SIZE(0U))!=0)
 12391              		.loc 1 5108 8 is_stmt 1
 12392 03d0 9C10A0E3 		mov	r1, #156
 12393 03d4 04009BE5 		ldr	r0, [fp, #4]
 12394 03d8 FEFFFFEB 		bl	_RME_Kot_Mark
 12395 03dc 0030A0E1 		mov	r3, r0
 12396              		.loc 1 5108 7 discriminator 1
 12397 03e0 000053E3 		cmp	r3, #0
 12398 03e4 0500000A 		beq	.L798
5109:../../Source/Kernel/rme_kernel.c ****     {
5110:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5111:../../Source/Kernel/rme_kernel.c **** 
5112:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 12399              		.loc 1 5112 9
 12400 03e8 14301BE5 		ldr	r3, [fp, #-20]
 12401 03ec 0010A0E3 		mov	r1, #0
 12402 03f0 0300A0E1 		mov	r0, r3
 12403 03f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5113:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 12404              		.loc 1 5113 16
 12405 03f8 0330E0E3 		mvn	r3, #3
 12406 03fc 580000EA 		b	.L775
 12407              	.L798:
5114:../../Source/Kernel/rme_kernel.c ****     }
5115:../../Source/Kernel/rme_kernel.c ****     else
5116:../../Source/Kernel/rme_kernel.c ****     {
5117:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5118:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5119:../../Source/Kernel/rme_kernel.c ****     }
5120:../../Source/Kernel/rme_kernel.c **** 
5121:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5122:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 12408              		.loc 1 5122 11
 12409 0400 04309BE5 		ldr	r3, [fp, #4]
 12410 0404 18300BE5 		str	r3, [fp, #-24]
5123:../../Source/Kernel/rme_kernel.c ****     /* The TID of these threads are by default taken care of by the kernel */
5124:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 12411              		.loc 1 5124 22
 12412 0408 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 309


 12413 040c 0020A0E3 		mov	r2, #0
 12414 0410 102083E5 		str	r2, [r3, #16]
5125:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=RME_THD_INIT_TIME;
 12415              		.loc 1 5125 24
 12416 0414 18301BE5 		ldr	r3, [fp, #-24]
 12417 0418 0221E0E3 		mvn	r2, #-2147483648
 12418 041c 182083E5 		str	r2, [r3, #24]
5126:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_READY;
 12419              		.loc 1 5126 24
 12420 0420 18301BE5 		ldr	r3, [fp, #-24]
 12421 0424 0020A0E3 		mov	r2, #0
 12422 0428 1C2083E5 		str	r2, [r3, #28]
5127:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 12423              		.loc 1 5127 14
 12424 042c 0C301BE5 		ldr	r3, [fp, #-12]
 12425 0430 003093E5 		ldr	r3, [r3]
 12426 0434 7330FFE6 		uxth	r3, r3
 12427 0438 000053E3 		cmp	r3, #0
 12428 043c 0200000A 		beq	.L799
 12429              		.loc 1 5127 14 is_stmt 0 discriminator 1
 12430 0440 0C301BE5 		ldr	r3, [fp, #-12]
 12431 0444 043093E5 		ldr	r3, [r3, #4]
 12432 0448 000000EA 		b	.L800
 12433              	.L799:
 12434              		.loc 1 5127 14 discriminator 2
 12435 044c 0C301BE5 		ldr	r3, [fp, #-12]
 12436              	.L800:
 12437              		.loc 1 5127 13 is_stmt 1 discriminator 4
 12438 0450 1C300BE5 		str	r3, [fp, #-28]
5128:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 12439              		.loc 1 5128 22
 12440 0454 18301BE5 		ldr	r3, [fp, #-24]
 12441 0458 1C201BE5 		ldr	r2, [fp, #-28]
 12442 045c 2C2083E5 		str	r2, [r3, #44]
5129:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 12443              		.loc 1 5129 25
 12444 0460 18301BE5 		ldr	r3, [fp, #-24]
 12445 0464 0020A0E3 		mov	r2, #0
 12446 0468 282083E5 		str	r2, [r3, #40]
5130:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 12447              		.loc 1 5130 23
 12448 046c 18301BE5 		ldr	r3, [fp, #-24]
 12449 0470 08209BE5 		ldr	r2, [fp, #8]
 12450 0474 202083E5 		str	r2, [r3, #32]
5131:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=RME_PREEMPT_PRIO_NUM-1U;
 12451              		.loc 1 5131 27
 12452 0478 18301BE5 		ldr	r3, [fp, #-24]
 12453 047c 1F20A0E3 		mov	r2, #31
 12454 0480 242083E5 		str	r2, [r3, #36]
5132:../../Source/Kernel/rme_kernel.c ****     /* Set scheduler reference to 1 so cannot be free */
5133:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=1U;
 12455              		.loc 1 5133 28
 12456 0484 18301BE5 		ldr	r3, [fp, #-24]
 12457 0488 0120A0E3 		mov	r2, #1
 12458 048c 302083E5 		str	r2, [r3, #48]
5134:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 12459              		.loc 1 5134 28
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 310


 12460 0490 18301BE5 		ldr	r3, [fp, #-24]
 12461 0494 0020A0E3 		mov	r2, #0
 12462 0498 382083E5 		str	r2, [r3, #56]
5135:../../Source/Kernel/rme_kernel.c ****     /* Bind the thread to the current CPU */
5136:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=Local;
 12463              		.loc 1 5136 24
 12464 049c 18301BE5 		ldr	r3, [fp, #-24]
 12465 04a0 0C209BE5 		ldr	r2, [fp, #12]
 12466 04a4 142083E5 		str	r2, [r3, #20]
5137:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5138:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 12467              		.loc 1 5138 5
 12468 04a8 18301BE5 		ldr	r3, [fp, #-24]
 12469 04ac 083083E2 		add	r3, r3, #8
 12470 04b0 0300A0E1 		mov	r0, r3
 12471 04b4 FEFFFFEB 		bl	_RME_List_Crt
5139:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 12472              		.loc 1 5139 5
 12473 04b8 18301BE5 		ldr	r3, [fp, #-24]
 12474 04bc 3C3083E2 		add	r3, r3, #60
 12475 04c0 0300A0E1 		mov	r0, r3
 12476 04c4 FEFFFFEB 		bl	_RME_List_Crt
5140:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this will never be a hypervisor thread */
5141:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Hyp_Attr=0U;
 12477              		.loc 1 5141 25
 12478 04c8 18301BE5 		ldr	r3, [fp, #-24]
 12479 04cc 0020A0E3 		mov	r2, #0
 12480 04d0 442083E5 		str	r2, [r3, #68]
5142:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 12481              		.loc 1 5142 48
 12482 04d4 04309BE5 		ldr	r3, [fp, #4]
 12483 04d8 583083E2 		add	r3, r3, #88
 12484              		.loc 1 5142 21
 12485 04dc 0320A0E1 		mov	r2, r3
 12486              		.loc 1 5142 20
 12487 04e0 18301BE5 		ldr	r3, [fp, #-24]
 12488 04e4 482083E5 		str	r2, [r3, #72]
5143:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5144:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 12489              		.loc 1 5144 5
 12490 04e8 18301BE5 		ldr	r3, [fp, #-24]
 12491 04ec 4C3083E2 		add	r3, r3, #76
 12492 04f0 0300A0E1 		mov	r0, r3
 12493 04f4 FEFFFFEB 		bl	_RME_List_Crt
5145:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 12494              		.loc 1 5145 29
 12495 04f8 18301BE5 		ldr	r3, [fp, #-24]
 12496 04fc 0020A0E3 		mov	r2, #0
 12497 0500 542083E5 		str	r2, [r3, #84]
5146:../../Source/Kernel/rme_kernel.c ****     
5147:../../Source/Kernel/rme_kernel.c ****     /* Info init */
5148:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=1U;
 12498              		.loc 1 5148 27
 12499 0504 14301BE5 		ldr	r3, [fp, #-20]
 12500 0508 0120A0E3 		mov	r2, #1
 12501 050c 042083E5 		str	r2, [r3, #4]
5149:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 311


 12502              		.loc 1 5149 25
 12503 0510 14301BE5 		ldr	r3, [fp, #-20]
 12504 0514 04209BE5 		ldr	r2, [fp, #4]
 12505 0518 0C2083E5 		str	r2, [r3, #12]
5150:../../Source/Kernel/rme_kernel.c ****     /* This can only be a parent, and not a child, and cannot be freed. Additionally,
5151:../../Source/Kernel/rme_kernel.c ****      * this should not be blocked on any endpoint. Any attempt to block this thread will fail.
5152:../../Source/Kernel/rme_kernel.c ****      * Setting execution information for this is also prohibited. */
5153:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_SCHED_PRIO|RME_THD_FLAG_SCHED_PARENT|
 12506              		.loc 1 5153 23
 12507 051c 14301BE5 		ldr	r3, [fp, #-20]
 12508 0520 7B2FA0E3 		mov	r2, #492
 12509 0524 082083E5 		str	r2, [r3, #8]
5154:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_XFER_DST|RME_THD_FLAG_XFER_SRC|
5155:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_SCHED_RCV|RME_THD_FLAG_SWT;
5156:../../Source/Kernel/rme_kernel.c **** 
5157:../../Source/Kernel/rme_kernel.c ****     /* Referece process */
5158:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 12510              		.loc 1 5158 5
 12511 0528 1C301BE5 		ldr	r3, [fp, #-28]
 12512 052c 043083E2 		add	r3, r3, #4
 12513 0530 0110A0E3 		mov	r1, #1
 12514 0534 0300A0E1 		mov	r0, r3
 12515 0538 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5159:../../Source/Kernel/rme_kernel.c ****     
5160:../../Source/Kernel/rme_kernel.c ****     /* Insert this into the runqueue, and set current thread to it */
5161:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Ins(Thread);
 12516              		.loc 1 5161 5
 12517 053c 18001BE5 		ldr	r0, [fp, #-24]
 12518 0540 FEFFFFEB 		bl	_RME_Run_Ins
5162:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thread;
 12519              		.loc 1 5162 19
 12520 0544 0C309BE5 		ldr	r3, [fp, #12]
 12521 0548 18201BE5 		ldr	r2, [fp, #-24]
 12522 054c 042083E5 		str	r2, [r3, #4]
5163:../../Source/Kernel/rme_kernel.c **** 
5164:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5165:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 12523              		.loc 1 5165 5
 12524 0550 14301BE5 		ldr	r3, [fp, #-20]
 12525 0554 0614A0E3 		mov	r1, #100663296
 12526 0558 0300A0E1 		mov	r0, r3
 12527 055c FEFFFFEB 		bl	__RME_A7A_Write_Release
5166:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5167:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5168:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5169:../../Source/Kernel/rme_kernel.c **** 
5170:../../Source/Kernel/rme_kernel.c ****     return 0;
 12528              		.loc 1 5170 12
 12529 0560 0030A0E3 		mov	r3, #0
 12530              	.L775:
5171:../../Source/Kernel/rme_kernel.c **** }
 12531              		.loc 1 5171 1
 12532 0564 0300A0E1 		mov	r0, r3
 12533 0568 04D04BE2 		sub	sp, fp, #4
 12534              		.cfi_def_cfa 13, 8
 12535              		@ sp needed
 12536 056c 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 312


 12537              		.cfi_endproc
 12538              	.LFE55:
 12540              		.section	.text._RME_Thd_Crt,"ax",%progbits
 12541              		.align	2
 12542              		.syntax unified
 12543              		.arm
 12545              	_RME_Thd_Crt:
 12546              	.LFB56:
5172:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Boot_Crt ********************************************/
5173:../../Source/Kernel/rme_kernel.c **** 
5174:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Crt ******************************************************
5175:../../Source/Kernel/rme_kernel.c **** Description : Create a thread. A thread is the minimal kernel-level execution
5176:../../Source/Kernel/rme_kernel.c ****               unit.
5177:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5178:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5179:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5180:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
5181:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5182:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5183:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5184:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5185:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5186:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5187:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio_Max - The maximum priority allowed for this
5188:../../Source/Kernel/rme_kernel.c ****                                    thread. Once set, this cannot be changed.
5189:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
5190:../../Source/Kernel/rme_kernel.c ****                                 thread kernel object.
5191:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Attr - The context attributes.
5192:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Hyp - Whether this is a hypervisor thread.
5193:../../Source/Kernel/rme_kernel.c **** Output      : None.
5194:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5195:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5196:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Crt(struct RME_Cap_Cpt* Cpt,
5197:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5198:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
5199:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
5200:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5201:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Prio_Max,
5202:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
5203:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Attr,
5204:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Hyp)
5205:../../Source/Kernel/rme_kernel.c **** {
 12547              		.loc 1 5205 1
 12548              		.cfi_startproc
 12549              		@ args = 20, pretend = 0, frame = 56
 12550              		@ frame_needed = 1, uses_anonymous_args = 0
 12551 0000 00482DE9 		push	{fp, lr}
 12552              		.cfi_def_cfa_offset 8
 12553              		.cfi_offset 11, -8
 12554              		.cfi_offset 14, -4
 12555 0004 04B08DE2 		add	fp, sp, #4
 12556              		.cfi_def_cfa 11, 4
 12557 0008 38D04DE2 		sub	sp, sp, #56
 12558 000c 30000BE5 		str	r0, [fp, #-48]
 12559 0010 34100BE5 		str	r1, [fp, #-52]
 12560 0014 38200BE5 		str	r2, [fp, #-56]
 12561 0018 3C300BE5 		str	r3, [fp, #-60]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 313


5206:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5208:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
5209:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5210:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5211:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5212:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5213:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
5214:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
5215:../../Source/Kernel/rme_kernel.c ****     
5216:../../Source/Kernel/rme_kernel.c ****     /* See if the maximum priority relationship is correct - a thread
5217:../../Source/Kernel/rme_kernel.c ****      * can never create a thread with higher maximum priority */
5218:../../Source/Kernel/rme_kernel.c ****     if((RME_CPU_LOCAL()->Thd_Cur)->Sched.Prio_Max<Prio_Max)
 12562              		.loc 1 5218 24
 12563 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 12564 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 12565 0024 043093E5 		ldr	r3, [r3, #4]
 12566              		.loc 1 5218 41
 12567 0028 243093E5 		ldr	r3, [r3, #36]
 12568              		.loc 1 5218 7
 12569 002c 08209BE5 		ldr	r2, [fp, #8]
 12570 0030 030052E1 		cmp	r2, r3
 12571 0034 0100009A 		bls	.L802
5219:../../Source/Kernel/rme_kernel.c ****     {
5220:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5221:../../Source/Kernel/rme_kernel.c **** 
5222:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12572              		.loc 1 5222 16
 12573 0038 CC30E0E3 		mvn	r3, #204
 12574 003c E10100EA 		b	.L803
 12575              	.L802:
5223:../../Source/Kernel/rme_kernel.c ****     }
5224:../../Source/Kernel/rme_kernel.c ****     else
5225:../../Source/Kernel/rme_kernel.c ****     {
5226:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5227:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5228:../../Source/Kernel/rme_kernel.c ****     }
5229:../../Source/Kernel/rme_kernel.c **** 
5230:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5231:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12576              		.loc 1 5231 5
 12577 0040 34301BE5 		ldr	r3, [fp, #-52]
 12578 0044 803003E2 		and	r3, r3, #128
 12579 0048 000053E3 		cmp	r3, #0
 12580 004c 1C00001A 		bne	.L804
 12581              		.loc 1 5231 5 is_stmt 0 discriminator 1
 12582 0050 30301BE5 		ldr	r3, [fp, #-48]
 12583 0054 142093E5 		ldr	r2, [r3, #20]
 12584 0058 34301BE5 		ldr	r3, [fp, #-52]
 12585 005c 030052E1 		cmp	r2, r3
 12586 0060 0100008A 		bhi	.L805
 12587              		.loc 1 5231 5 discriminator 3
 12588 0064 0230E0E3 		mvn	r3, #2
 12589              		.loc 1 5231 5
 12590 0068 D60100EA 		b	.L803
 12591              	.L805:
 12592              		.loc 1 5231 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 314


 12593 006c 34301BE5 		ldr	r3, [fp, #-52]
 12594 0070 8322A0E1 		lsl	r2, r3, #5
 12595 0074 30301BE5 		ldr	r3, [fp, #-48]
 12596 0078 0C3093E5 		ldr	r3, [r3, #12]
 12597 007c 033082E0 		add	r3, r2, r3
 12598 0080 08300BE5 		str	r3, [fp, #-8]
 12599 0084 08301BE5 		ldr	r3, [fp, #-8]
 12600 0088 0300A0E1 		mov	r0, r3
 12601 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12602 0090 18000BE5 		str	r0, [fp, #-24]
 12603              		.loc 1 5231 5 discriminator 1
 12604 0094 18301BE5 		ldr	r3, [fp, #-24]
 12605 0098 FF3803E2 		and	r3, r3, #16711680
 12606 009c 020853E3 		cmp	r3, #131072
 12607 00a0 0100001A 		bne	.L806
 12608              		.loc 1 5231 5 discriminator 5
 12609 00a4 0830E0E3 		mvn	r3, #8
 12610              		.loc 1 5231 5
 12611 00a8 C60100EA 		b	.L803
 12612              	.L806:
 12613              		.loc 1 5231 5 discriminator 6
 12614 00ac 18301BE5 		ldr	r3, [fp, #-24]
 12615 00b0 233CA0E1 		lsr	r3, r3, #24
 12616 00b4 030053E3 		cmp	r3, #3
 12617 00b8 3F00000A 		beq	.L807
 12618              		.loc 1 5231 5 discriminator 7
 12619 00bc 0130E0E3 		mvn	r3, #1
 12620              		.loc 1 5231 5
 12621 00c0 C00100EA 		b	.L803
 12622              	.L804:
 12623              		.loc 1 5231 5 discriminator 2
 12624 00c4 34301BE5 		ldr	r3, [fp, #-52]
 12625 00c8 2324A0E1 		lsr	r2, r3, #8
 12626 00cc 30301BE5 		ldr	r3, [fp, #-48]
 12627 00d0 143093E5 		ldr	r3, [r3, #20]
 12628 00d4 030052E1 		cmp	r2, r3
 12629 00d8 0100003A 		bcc	.L808
 12630              		.loc 1 5231 5 discriminator 8
 12631 00dc 0230E0E3 		mvn	r3, #2
 12632              		.loc 1 5231 5
 12633 00e0 B80100EA 		b	.L803
 12634              	.L808:
 12635              		.loc 1 5231 5 discriminator 9
 12636 00e4 34301BE5 		ldr	r3, [fp, #-52]
 12637 00e8 2334A0E1 		lsr	r3, r3, #8
 12638 00ec 8322A0E1 		lsl	r2, r3, #5
 12639 00f0 30301BE5 		ldr	r3, [fp, #-48]
 12640 00f4 0C3093E5 		ldr	r3, [r3, #12]
 12641 00f8 033082E0 		add	r3, r2, r3
 12642 00fc 08300BE5 		str	r3, [fp, #-8]
 12643 0100 08301BE5 		ldr	r3, [fp, #-8]
 12644 0104 0300A0E1 		mov	r0, r3
 12645 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12646 010c 18000BE5 		str	r0, [fp, #-24]
 12647              		.loc 1 5231 5 discriminator 1
 12648 0110 18301BE5 		ldr	r3, [fp, #-24]
 12649 0114 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 315


 12650 0118 020853E3 		cmp	r3, #131072
 12651 011c 0100001A 		bne	.L809
 12652              		.loc 1 5231 5 discriminator 10
 12653 0120 0830E0E3 		mvn	r3, #8
 12654              		.loc 1 5231 5
 12655 0124 A70100EA 		b	.L803
 12656              	.L809:
 12657              		.loc 1 5231 5 discriminator 11
 12658 0128 18301BE5 		ldr	r3, [fp, #-24]
 12659 012c 233CA0E1 		lsr	r3, r3, #24
 12660 0130 030053E3 		cmp	r3, #3
 12661 0134 0100000A 		beq	.L810
 12662              		.loc 1 5231 5 discriminator 12
 12663 0138 0130E0E3 		mvn	r3, #1
 12664              		.loc 1 5231 5
 12665 013c A10100EA 		b	.L803
 12666              	.L810:
 12667              		.loc 1 5231 5 discriminator 13
 12668 0140 34301BE5 		ldr	r3, [fp, #-52]
 12669 0144 7F2003E2 		and	r2, r3, #127
 12670 0148 08301BE5 		ldr	r3, [fp, #-8]
 12671 014c 143093E5 		ldr	r3, [r3, #20]
 12672 0150 030052E1 		cmp	r2, r3
 12673 0154 0100003A 		bcc	.L811
 12674              		.loc 1 5231 5 discriminator 14
 12675 0158 0230E0E3 		mvn	r3, #2
 12676              		.loc 1 5231 5
 12677 015c 990100EA 		b	.L803
 12678              	.L811:
 12679              		.loc 1 5231 5 discriminator 15
 12680 0160 34301BE5 		ldr	r3, [fp, #-52]
 12681 0164 7F3003E2 		and	r3, r3, #127
 12682 0168 8322A0E1 		lsl	r2, r3, #5
 12683 016c 08301BE5 		ldr	r3, [fp, #-8]
 12684 0170 0C3093E5 		ldr	r3, [r3, #12]
 12685 0174 033082E0 		add	r3, r2, r3
 12686 0178 08300BE5 		str	r3, [fp, #-8]
 12687 017c 08301BE5 		ldr	r3, [fp, #-8]
 12688 0180 0300A0E1 		mov	r0, r3
 12689 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12690 0188 18000BE5 		str	r0, [fp, #-24]
 12691              		.loc 1 5231 5 discriminator 1
 12692 018c 18301BE5 		ldr	r3, [fp, #-24]
 12693 0190 FF3803E2 		and	r3, r3, #16711680
 12694 0194 020853E3 		cmp	r3, #131072
 12695 0198 0100001A 		bne	.L812
 12696              		.loc 1 5231 5 discriminator 16
 12697 019c 0830E0E3 		mvn	r3, #8
 12698              		.loc 1 5231 5
 12699 01a0 880100EA 		b	.L803
 12700              	.L812:
 12701              		.loc 1 5231 5 discriminator 17
 12702 01a4 18301BE5 		ldr	r3, [fp, #-24]
 12703 01a8 233CA0E1 		lsr	r3, r3, #24
 12704 01ac 030053E3 		cmp	r3, #3
 12705 01b0 0100000A 		beq	.L807
 12706              		.loc 1 5231 5 discriminator 18
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 316


 12707 01b4 0130E0E3 		mvn	r3, #1
 12708              		.loc 1 5231 5
 12709 01b8 820100EA 		b	.L803
 12710              	.L807:
5232:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5233:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 12711              		.loc 1 5233 5 is_stmt 1
 12712 01bc 38301BE5 		ldr	r3, [fp, #-56]
 12713 01c0 803003E2 		and	r3, r3, #128
 12714 01c4 000053E3 		cmp	r3, #0
 12715 01c8 1C00001A 		bne	.L813
 12716              		.loc 1 5233 5 is_stmt 0 discriminator 1
 12717 01cc 30301BE5 		ldr	r3, [fp, #-48]
 12718 01d0 142093E5 		ldr	r2, [r3, #20]
 12719 01d4 38301BE5 		ldr	r3, [fp, #-56]
 12720 01d8 030052E1 		cmp	r2, r3
 12721 01dc 0100008A 		bhi	.L814
 12722              		.loc 1 5233 5 discriminator 3
 12723 01e0 0230E0E3 		mvn	r3, #2
 12724              		.loc 1 5233 5
 12725 01e4 770100EA 		b	.L803
 12726              	.L814:
 12727              		.loc 1 5233 5 discriminator 4
 12728 01e8 38301BE5 		ldr	r3, [fp, #-56]
 12729 01ec 8322A0E1 		lsl	r2, r3, #5
 12730 01f0 30301BE5 		ldr	r3, [fp, #-48]
 12731 01f4 0C3093E5 		ldr	r3, [r3, #12]
 12732 01f8 033082E0 		add	r3, r2, r3
 12733 01fc 10300BE5 		str	r3, [fp, #-16]
 12734 0200 10301BE5 		ldr	r3, [fp, #-16]
 12735 0204 0300A0E1 		mov	r0, r3
 12736 0208 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12737 020c 18000BE5 		str	r0, [fp, #-24]
 12738              		.loc 1 5233 5 discriminator 1
 12739 0210 18301BE5 		ldr	r3, [fp, #-24]
 12740 0214 FF3803E2 		and	r3, r3, #16711680
 12741 0218 020853E3 		cmp	r3, #131072
 12742 021c 0100001A 		bne	.L815
 12743              		.loc 1 5233 5 discriminator 5
 12744 0220 0830E0E3 		mvn	r3, #8
 12745              		.loc 1 5233 5
 12746 0224 670100EA 		b	.L803
 12747              	.L815:
 12748              		.loc 1 5233 5 discriminator 6
 12749 0228 18301BE5 		ldr	r3, [fp, #-24]
 12750 022c 233CA0E1 		lsr	r3, r3, #24
 12751 0230 020053E3 		cmp	r3, #2
 12752 0234 3F00000A 		beq	.L816
 12753              		.loc 1 5233 5 discriminator 7
 12754 0238 0130E0E3 		mvn	r3, #1
 12755              		.loc 1 5233 5
 12756 023c 610100EA 		b	.L803
 12757              	.L813:
 12758              		.loc 1 5233 5 discriminator 2
 12759 0240 38301BE5 		ldr	r3, [fp, #-56]
 12760 0244 2324A0E1 		lsr	r2, r3, #8
 12761 0248 30301BE5 		ldr	r3, [fp, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 317


 12762 024c 143093E5 		ldr	r3, [r3, #20]
 12763 0250 030052E1 		cmp	r2, r3
 12764 0254 0100003A 		bcc	.L817
 12765              		.loc 1 5233 5 discriminator 8
 12766 0258 0230E0E3 		mvn	r3, #2
 12767              		.loc 1 5233 5
 12768 025c 590100EA 		b	.L803
 12769              	.L817:
 12770              		.loc 1 5233 5 discriminator 9
 12771 0260 38301BE5 		ldr	r3, [fp, #-56]
 12772 0264 2334A0E1 		lsr	r3, r3, #8
 12773 0268 8322A0E1 		lsl	r2, r3, #5
 12774 026c 30301BE5 		ldr	r3, [fp, #-48]
 12775 0270 0C3093E5 		ldr	r3, [r3, #12]
 12776 0274 033082E0 		add	r3, r2, r3
 12777 0278 10300BE5 		str	r3, [fp, #-16]
 12778 027c 10301BE5 		ldr	r3, [fp, #-16]
 12779 0280 0300A0E1 		mov	r0, r3
 12780 0284 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12781 0288 18000BE5 		str	r0, [fp, #-24]
 12782              		.loc 1 5233 5 discriminator 1
 12783 028c 18301BE5 		ldr	r3, [fp, #-24]
 12784 0290 FF3803E2 		and	r3, r3, #16711680
 12785 0294 020853E3 		cmp	r3, #131072
 12786 0298 0100001A 		bne	.L818
 12787              		.loc 1 5233 5 discriminator 10
 12788 029c 0830E0E3 		mvn	r3, #8
 12789              		.loc 1 5233 5
 12790 02a0 480100EA 		b	.L803
 12791              	.L818:
 12792              		.loc 1 5233 5 discriminator 11
 12793 02a4 18301BE5 		ldr	r3, [fp, #-24]
 12794 02a8 233CA0E1 		lsr	r3, r3, #24
 12795 02ac 030053E3 		cmp	r3, #3
 12796 02b0 0100000A 		beq	.L819
 12797              		.loc 1 5233 5 discriminator 12
 12798 02b4 0130E0E3 		mvn	r3, #1
 12799              		.loc 1 5233 5
 12800 02b8 420100EA 		b	.L803
 12801              	.L819:
 12802              		.loc 1 5233 5 discriminator 13
 12803 02bc 38301BE5 		ldr	r3, [fp, #-56]
 12804 02c0 7F2003E2 		and	r2, r3, #127
 12805 02c4 10301BE5 		ldr	r3, [fp, #-16]
 12806 02c8 143093E5 		ldr	r3, [r3, #20]
 12807 02cc 030052E1 		cmp	r2, r3
 12808 02d0 0100003A 		bcc	.L820
 12809              		.loc 1 5233 5 discriminator 14
 12810 02d4 0230E0E3 		mvn	r3, #2
 12811              		.loc 1 5233 5
 12812 02d8 3A0100EA 		b	.L803
 12813              	.L820:
 12814              		.loc 1 5233 5 discriminator 15
 12815 02dc 38301BE5 		ldr	r3, [fp, #-56]
 12816 02e0 7F3003E2 		and	r3, r3, #127
 12817 02e4 8322A0E1 		lsl	r2, r3, #5
 12818 02e8 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 318


 12819 02ec 0C3093E5 		ldr	r3, [r3, #12]
 12820 02f0 033082E0 		add	r3, r2, r3
 12821 02f4 10300BE5 		str	r3, [fp, #-16]
 12822 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12823 02fc 0300A0E1 		mov	r0, r3
 12824 0300 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12825 0304 18000BE5 		str	r0, [fp, #-24]
 12826              		.loc 1 5233 5 discriminator 1
 12827 0308 18301BE5 		ldr	r3, [fp, #-24]
 12828 030c FF3803E2 		and	r3, r3, #16711680
 12829 0310 020853E3 		cmp	r3, #131072
 12830 0314 0100001A 		bne	.L821
 12831              		.loc 1 5233 5 discriminator 16
 12832 0318 0830E0E3 		mvn	r3, #8
 12833              		.loc 1 5233 5
 12834 031c 290100EA 		b	.L803
 12835              	.L821:
 12836              		.loc 1 5233 5 discriminator 17
 12837 0320 18301BE5 		ldr	r3, [fp, #-24]
 12838 0324 233CA0E1 		lsr	r3, r3, #24
 12839 0328 020053E3 		cmp	r3, #2
 12840 032c 0100000A 		beq	.L816
 12841              		.loc 1 5233 5 discriminator 18
 12842 0330 0130E0E3 		mvn	r3, #1
 12843              		.loc 1 5233 5
 12844 0334 230100EA 		b	.L803
 12845              	.L816:
5234:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
5235:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12846              		.loc 1 5235 5 is_stmt 1
 12847 0338 04309BE5 		ldr	r3, [fp, #4]
 12848 033c 803003E2 		and	r3, r3, #128
 12849 0340 000053E3 		cmp	r3, #0
 12850 0344 1C00001A 		bne	.L822
 12851              		.loc 1 5235 5 is_stmt 0 discriminator 1
 12852 0348 30301BE5 		ldr	r3, [fp, #-48]
 12853 034c 142093E5 		ldr	r2, [r3, #20]
 12854 0350 04309BE5 		ldr	r3, [fp, #4]
 12855 0354 030052E1 		cmp	r2, r3
 12856 0358 0100008A 		bhi	.L823
 12857              		.loc 1 5235 5 discriminator 3
 12858 035c 0230E0E3 		mvn	r3, #2
 12859              		.loc 1 5235 5
 12860 0360 180100EA 		b	.L803
 12861              	.L823:
 12862              		.loc 1 5235 5 discriminator 4
 12863 0364 04309BE5 		ldr	r3, [fp, #4]
 12864 0368 8322A0E1 		lsl	r2, r3, #5
 12865 036c 30301BE5 		ldr	r3, [fp, #-48]
 12866 0370 0C3093E5 		ldr	r3, [r3, #12]
 12867 0374 033082E0 		add	r3, r2, r3
 12868 0378 0C300BE5 		str	r3, [fp, #-12]
 12869 037c 0C301BE5 		ldr	r3, [fp, #-12]
 12870 0380 0300A0E1 		mov	r0, r3
 12871 0384 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12872 0388 18000BE5 		str	r0, [fp, #-24]
 12873              		.loc 1 5235 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 319


 12874 038c 18301BE5 		ldr	r3, [fp, #-24]
 12875 0390 FF3803E2 		and	r3, r3, #16711680
 12876 0394 020853E3 		cmp	r3, #131072
 12877 0398 0100001A 		bne	.L824
 12878              		.loc 1 5235 5 discriminator 5
 12879 039c 0830E0E3 		mvn	r3, #8
 12880              		.loc 1 5235 5
 12881 03a0 080100EA 		b	.L803
 12882              	.L824:
 12883              		.loc 1 5235 5 discriminator 6
 12884 03a4 18301BE5 		ldr	r3, [fp, #-24]
 12885 03a8 233CA0E1 		lsr	r3, r3, #24
 12886 03ac 050053E3 		cmp	r3, #5
 12887 03b0 3F00000A 		beq	.L825
 12888              		.loc 1 5235 5 discriminator 7
 12889 03b4 0130E0E3 		mvn	r3, #1
 12890              		.loc 1 5235 5
 12891 03b8 020100EA 		b	.L803
 12892              	.L822:
 12893              		.loc 1 5235 5 discriminator 2
 12894 03bc 04309BE5 		ldr	r3, [fp, #4]
 12895 03c0 2324A0E1 		lsr	r2, r3, #8
 12896 03c4 30301BE5 		ldr	r3, [fp, #-48]
 12897 03c8 143093E5 		ldr	r3, [r3, #20]
 12898 03cc 030052E1 		cmp	r2, r3
 12899 03d0 0100003A 		bcc	.L826
 12900              		.loc 1 5235 5 discriminator 8
 12901 03d4 0230E0E3 		mvn	r3, #2
 12902              		.loc 1 5235 5
 12903 03d8 FA0000EA 		b	.L803
 12904              	.L826:
 12905              		.loc 1 5235 5 discriminator 9
 12906 03dc 04309BE5 		ldr	r3, [fp, #4]
 12907 03e0 2334A0E1 		lsr	r3, r3, #8
 12908 03e4 8322A0E1 		lsl	r2, r3, #5
 12909 03e8 30301BE5 		ldr	r3, [fp, #-48]
 12910 03ec 0C3093E5 		ldr	r3, [r3, #12]
 12911 03f0 033082E0 		add	r3, r2, r3
 12912 03f4 0C300BE5 		str	r3, [fp, #-12]
 12913 03f8 0C301BE5 		ldr	r3, [fp, #-12]
 12914 03fc 0300A0E1 		mov	r0, r3
 12915 0400 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12916 0404 18000BE5 		str	r0, [fp, #-24]
 12917              		.loc 1 5235 5 discriminator 1
 12918 0408 18301BE5 		ldr	r3, [fp, #-24]
 12919 040c FF3803E2 		and	r3, r3, #16711680
 12920 0410 020853E3 		cmp	r3, #131072
 12921 0414 0100001A 		bne	.L827
 12922              		.loc 1 5235 5 discriminator 10
 12923 0418 0830E0E3 		mvn	r3, #8
 12924              		.loc 1 5235 5
 12925 041c E90000EA 		b	.L803
 12926              	.L827:
 12927              		.loc 1 5235 5 discriminator 11
 12928 0420 18301BE5 		ldr	r3, [fp, #-24]
 12929 0424 233CA0E1 		lsr	r3, r3, #24
 12930 0428 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 320


 12931 042c 0100000A 		beq	.L828
 12932              		.loc 1 5235 5 discriminator 12
 12933 0430 0130E0E3 		mvn	r3, #1
 12934              		.loc 1 5235 5
 12935 0434 E30000EA 		b	.L803
 12936              	.L828:
 12937              		.loc 1 5235 5 discriminator 13
 12938 0438 04309BE5 		ldr	r3, [fp, #4]
 12939 043c 7F2003E2 		and	r2, r3, #127
 12940 0440 0C301BE5 		ldr	r3, [fp, #-12]
 12941 0444 143093E5 		ldr	r3, [r3, #20]
 12942 0448 030052E1 		cmp	r2, r3
 12943 044c 0100003A 		bcc	.L829
 12944              		.loc 1 5235 5 discriminator 14
 12945 0450 0230E0E3 		mvn	r3, #2
 12946              		.loc 1 5235 5
 12947 0454 DB0000EA 		b	.L803
 12948              	.L829:
 12949              		.loc 1 5235 5 discriminator 15
 12950 0458 04309BE5 		ldr	r3, [fp, #4]
 12951 045c 7F3003E2 		and	r3, r3, #127
 12952 0460 8322A0E1 		lsl	r2, r3, #5
 12953 0464 0C301BE5 		ldr	r3, [fp, #-12]
 12954 0468 0C3093E5 		ldr	r3, [r3, #12]
 12955 046c 033082E0 		add	r3, r2, r3
 12956 0470 0C300BE5 		str	r3, [fp, #-12]
 12957 0474 0C301BE5 		ldr	r3, [fp, #-12]
 12958 0478 0300A0E1 		mov	r0, r3
 12959 047c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12960 0480 18000BE5 		str	r0, [fp, #-24]
 12961              		.loc 1 5235 5 discriminator 1
 12962 0484 18301BE5 		ldr	r3, [fp, #-24]
 12963 0488 FF3803E2 		and	r3, r3, #16711680
 12964 048c 020853E3 		cmp	r3, #131072
 12965 0490 0100001A 		bne	.L830
 12966              		.loc 1 5235 5 discriminator 16
 12967 0494 0830E0E3 		mvn	r3, #8
 12968              		.loc 1 5235 5
 12969 0498 CA0000EA 		b	.L803
 12970              	.L830:
 12971              		.loc 1 5235 5 discriminator 17
 12972 049c 18301BE5 		ldr	r3, [fp, #-24]
 12973 04a0 233CA0E1 		lsr	r3, r3, #24
 12974 04a4 050053E3 		cmp	r3, #5
 12975 04a8 0100000A 		beq	.L825
 12976              		.loc 1 5235 5 discriminator 18
 12977 04ac 0130E0E3 		mvn	r3, #1
 12978              		.loc 1 5235 5
 12979 04b0 C40000EA 		b	.L803
 12980              	.L825:
5236:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
5237:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5238:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 12981              		.loc 1 5238 5 is_stmt 1
 12982 04b4 08301BE5 		ldr	r3, [fp, #-8]
 12983 04b8 083093E5 		ldr	r3, [r3, #8]
 12984 04bc 013003E2 		and	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 321


 12985 04c0 000053E3 		cmp	r3, #0
 12986 04c4 0100001A 		bne	.L831
 12987              		.loc 1 5238 5 is_stmt 0 discriminator 1
 12988 04c8 0630E0E3 		mvn	r3, #6
 12989              		.loc 1 5238 5
 12990 04cc BD0000EA 		b	.L803
 12991              	.L831:
5239:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 12992              		.loc 1 5239 5 is_stmt 1
 12993 04d0 0C301BE5 		ldr	r3, [fp, #-12]
 12994 04d4 083093E5 		ldr	r3, [r3, #8]
 12995 04d8 023003E2 		and	r3, r3, #2
 12996 04dc 000053E3 		cmp	r3, #0
 12997 04e0 0100001A 		bne	.L832
 12998              		.loc 1 5239 5 is_stmt 0 discriminator 1
 12999 04e4 0630E0E3 		mvn	r3, #6
 13000              		.loc 1 5239 5
 13001 04e8 B60000EA 		b	.L803
 13002              	.L832:
5240:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
5241:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13003              		.loc 1 5241 7 is_stmt 1
 13004 04ec 14309BE5 		ldr	r3, [fp, #20]
 13005 04f0 000053E3 		cmp	r3, #0
 13006 04f4 0200001A 		bne	.L833
5242:../../Source/Kernel/rme_kernel.c ****     {
5243:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5244:../../Source/Kernel/rme_kernel.c ****         
5245:../../Source/Kernel/rme_kernel.c ****         Size=RME_THD_SIZE(Attr);
 13007              		.loc 1 5245 13
 13008 04f8 9C30A0E3 		mov	r3, #156
 13009 04fc 14300BE5 		str	r3, [fp, #-20]
 13010 0500 010000EA 		b	.L834
 13011              	.L833:
5246:../../Source/Kernel/rme_kernel.c ****     }
5247:../../Source/Kernel/rme_kernel.c ****     else
5248:../../Source/Kernel/rme_kernel.c ****     {
5249:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5250:../../Source/Kernel/rme_kernel.c ****         
5251:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_SIZE==0U)
5252:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
5253:../../Source/Kernel/rme_kernel.c **** #else
5254:../../Source/Kernel/rme_kernel.c ****         Size=RME_HYP_SIZE;
 13012              		.loc 1 5254 13
 13013 0504 5830A0E3 		mov	r3, #88
 13014 0508 14300BE5 		str	r3, [fp, #-20]
 13015              	.L834:
5255:../../Source/Kernel/rme_kernel.c **** #endif
5256:../../Source/Kernel/rme_kernel.c ****     }
5257:../../Source/Kernel/rme_kernel.c ****     
5258:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_THD,Raddr,Vaddr,Size);
 13016              		.loc 1 5258 5
 13017 050c 10301BE5 		ldr	r3, [fp, #-16]
 13018 0510 083093E5 		ldr	r3, [r3, #8]
 13019 0514 043003E2 		and	r3, r3, #4
 13020 0518 000053E3 		cmp	r3, #0
 13021 051c 0100001A 		bne	.L835
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 322


 13022              		.loc 1 5258 5 is_stmt 0 discriminator 1
 13023 0520 0630E0E3 		mvn	r3, #6
 13024              		.loc 1 5258 5
 13025 0524 A70000EA 		b	.L803
 13026              	.L835:
 13027              		.loc 1 5258 5 discriminator 2
 13028 0528 10301BE5 		ldr	r3, [fp, #-16]
 13029 052c 143093E5 		ldr	r3, [r3, #20]
 13030 0530 0C209BE5 		ldr	r2, [fp, #12]
 13031 0534 033082E0 		add	r3, r2, r3
 13032 0538 1C300BE5 		str	r3, [fp, #-28]
 13033 053c 1C201BE5 		ldr	r2, [fp, #-28]
 13034 0540 0C309BE5 		ldr	r3, [fp, #12]
 13035 0544 030052E1 		cmp	r2, r3
 13036 0548 0100002A 		bcs	.L836
 13037              		.loc 1 5258 5 discriminator 3
 13038 054c 0630E0E3 		mvn	r3, #6
 13039              		.loc 1 5258 5
 13040 0550 9C0000EA 		b	.L803
 13041              	.L836:
 13042              		.loc 1 5258 5 discriminator 4
 13043 0554 10301BE5 		ldr	r3, [fp, #-16]
 13044 0558 143093E5 		ldr	r3, [r3, #20]
 13045 055c 1C201BE5 		ldr	r2, [fp, #-28]
 13046 0560 030052E1 		cmp	r2, r3
 13047 0564 0100002A 		bcs	.L837
 13048              		.loc 1 5258 5 discriminator 5
 13049 0568 0630E0E3 		mvn	r3, #6
 13050              		.loc 1 5258 5
 13051 056c 950000EA 		b	.L803
 13052              	.L837:
 13053              		.loc 1 5258 5 discriminator 6
 13054 0570 1C201BE5 		ldr	r2, [fp, #-28]
 13055 0574 14301BE5 		ldr	r3, [fp, #-20]
 13056 0578 033082E0 		add	r3, r2, r3
 13057 057c 1C201BE5 		ldr	r2, [fp, #-28]
 13058 0580 030052E1 		cmp	r2, r3
 13059 0584 0100009A 		bls	.L838
 13060              		.loc 1 5258 5 discriminator 7
 13061 0588 0630E0E3 		mvn	r3, #6
 13062              		.loc 1 5258 5
 13063 058c 8D0000EA 		b	.L803
 13064              	.L838:
 13065              		.loc 1 5258 5 discriminator 8
 13066 0590 10301BE5 		ldr	r3, [fp, #-16]
 13067 0594 182093E5 		ldr	r2, [r3, #24]
 13068 0598 1C101BE5 		ldr	r1, [fp, #-28]
 13069 059c 14301BE5 		ldr	r3, [fp, #-20]
 13070 05a0 033081E0 		add	r3, r1, r3
 13071 05a4 013043E2 		sub	r3, r3, #1
 13072 05a8 030052E1 		cmp	r2, r3
 13073 05ac 0100002A 		bcs	.L839
 13074              		.loc 1 5258 5 discriminator 9
 13075 05b0 0630E0E3 		mvn	r3, #6
 13076              		.loc 1 5258 5
 13077 05b4 830000EA 		b	.L803
 13078              	.L839:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 323


5259:../../Source/Kernel/rme_kernel.c ****     
5260:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5261:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 13079              		.loc 1 5261 5 is_stmt 1
 13080 05b8 08301BE5 		ldr	r3, [fp, #-8]
 13081 05bc 142093E5 		ldr	r2, [r3, #20]
 13082 05c0 3C301BE5 		ldr	r3, [fp, #-60]
 13083 05c4 030052E1 		cmp	r2, r3
 13084 05c8 0100008A 		bhi	.L840
 13085              		.loc 1 5261 5 is_stmt 0 discriminator 1
 13086 05cc 0230E0E3 		mvn	r3, #2
 13087              		.loc 1 5261 5
 13088 05d0 7C0000EA 		b	.L803
 13089              	.L840:
 13090              		.loc 1 5261 5 discriminator 2
 13091 05d4 3C301BE5 		ldr	r3, [fp, #-60]
 13092 05d8 8322A0E1 		lsl	r2, r3, #5
 13093 05dc 08301BE5 		ldr	r3, [fp, #-8]
 13094 05e0 0C3093E5 		ldr	r3, [r3, #12]
 13095 05e4 033082E0 		add	r3, r2, r3
 13096 05e8 20300BE5 		str	r3, [fp, #-32]
5262:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5263:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 13097              		.loc 1 5263 5 is_stmt 1
 13098 05ec 20301BE5 		ldr	r3, [fp, #-32]
 13099 05f0 0128A0E3 		mov	r2, #65536
 13100 05f4 0010A0E3 		mov	r1, #0
 13101 05f8 0300A0E1 		mov	r0, r3
 13102 05fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13103 0600 0030A0E1 		mov	r3, r0
 13104              		.loc 1 5263 5 is_stmt 0 discriminator 1
 13105 0604 000053E3 		cmp	r3, #0
 13106 0608 0100001A 		bne	.L841
 13107 060c 0430E0E3 		mvn	r3, #4
 13108              		.loc 1 5263 5
 13109 0610 6C0000EA 		b	.L803
 13110              	.L841:
 13111              		.loc 1 5263 5 discriminator 2
 13112 0614 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13113 0618 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13114 061c 002093E5 		ldr	r2, [r3]
 13115 0620 20301BE5 		ldr	r3, [fp, #-32]
 13116 0624 102083E5 		str	r2, [r3, #16]
5264:../../Source/Kernel/rme_kernel.c ****      
5265:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5266:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Size)<0)
 13117              		.loc 1 5266 8 is_stmt 1
 13118 0628 14101BE5 		ldr	r1, [fp, #-20]
 13119 062c 1C001BE5 		ldr	r0, [fp, #-28]
 13120 0630 FEFFFFEB 		bl	_RME_Kot_Mark
 13121 0634 0030A0E1 		mov	r3, r0
 13122              		.loc 1 5266 7 discriminator 1
 13123 0638 000053E3 		cmp	r3, #0
 13124 063c 050000AA 		bge	.L842
5267:../../Source/Kernel/rme_kernel.c ****     {
5268:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5269:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 324


5270:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 13125              		.loc 1 5270 9
 13126 0640 20301BE5 		ldr	r3, [fp, #-32]
 13127 0644 0010A0E3 		mov	r1, #0
 13128 0648 0300A0E1 		mov	r0, r3
 13129 064c FEFFFFEB 		bl	__RME_A7A_Write_Release
5271:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 13130              		.loc 1 5271 16
 13131 0650 0330E0E3 		mvn	r3, #3
 13132 0654 5B0000EA 		b	.L803
 13133              	.L842:
5272:../../Source/Kernel/rme_kernel.c ****     }
5273:../../Source/Kernel/rme_kernel.c ****     else
5274:../../Source/Kernel/rme_kernel.c ****     {
5275:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5276:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5277:../../Source/Kernel/rme_kernel.c ****     }
5278:../../Source/Kernel/rme_kernel.c ****     
5279:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5280:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 13134              		.loc 1 5280 11
 13135 0658 1C301BE5 		ldr	r3, [fp, #-28]
 13136 065c 24300BE5 		str	r3, [fp, #-36]
5281:../../Source/Kernel/rme_kernel.c ****     /* These thread's TID default to 0, and have no timeslices assigned */
5282:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 13137              		.loc 1 5282 22
 13138 0660 24301BE5 		ldr	r3, [fp, #-36]
 13139 0664 0020A0E3 		mov	r2, #0
 13140 0668 102083E5 		str	r2, [r3, #16]
5283:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 13141              		.loc 1 5283 24
 13142 066c 24301BE5 		ldr	r3, [fp, #-36]
 13143 0670 0020A0E3 		mov	r2, #0
 13144 0674 182083E5 		str	r2, [r3, #24]
5284:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_TIMEOUT;
 13145              		.loc 1 5284 24
 13146 0678 24301BE5 		ldr	r3, [fp, #-36]
 13147 067c 0220A0E3 		mov	r2, #2
 13148 0680 1C2083E5 		str	r2, [r3, #28]
5285:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 13149              		.loc 1 5285 14
 13150 0684 0C301BE5 		ldr	r3, [fp, #-12]
 13151 0688 003093E5 		ldr	r3, [r3]
 13152 068c 7330FFE6 		uxth	r3, r3
 13153 0690 000053E3 		cmp	r3, #0
 13154 0694 0200000A 		beq	.L843
 13155              		.loc 1 5285 14 is_stmt 0 discriminator 1
 13156 0698 0C301BE5 		ldr	r3, [fp, #-12]
 13157 069c 043093E5 		ldr	r3, [r3, #4]
 13158 06a0 000000EA 		b	.L844
 13159              	.L843:
 13160              		.loc 1 5285 14 discriminator 2
 13161 06a4 0C301BE5 		ldr	r3, [fp, #-12]
 13162              	.L844:
 13163              		.loc 1 5285 13 is_stmt 1 discriminator 4
 13164 06a8 28300BE5 		str	r3, [fp, #-40]
5286:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 325


 13165              		.loc 1 5286 22
 13166 06ac 24301BE5 		ldr	r3, [fp, #-36]
 13167 06b0 28201BE5 		ldr	r2, [fp, #-40]
 13168 06b4 2C2083E5 		str	r2, [r3, #44]
5287:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 13169              		.loc 1 5287 25
 13170 06b8 24301BE5 		ldr	r3, [fp, #-36]
 13171 06bc 0020A0E3 		mov	r2, #0
 13172 06c0 282083E5 		str	r2, [r3, #40]
5288:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=Prio_Max;
 13173              		.loc 1 5288 27
 13174 06c4 24301BE5 		ldr	r3, [fp, #-36]
 13175 06c8 08209BE5 		ldr	r2, [fp, #8]
 13176 06cc 242083E5 		str	r2, [r3, #36]
5289:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=0U;
 13177              		.loc 1 5289 28
 13178 06d0 24301BE5 		ldr	r3, [fp, #-36]
 13179 06d4 0020A0E3 		mov	r2, #0
 13180 06d8 302083E5 		str	r2, [r3, #48]
5290:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 13181              		.loc 1 5290 28
 13182 06dc 24301BE5 		ldr	r3, [fp, #-36]
 13183 06e0 0020A0E3 		mov	r2, #0
 13184 06e4 382083E5 		str	r2, [r3, #56]
5291:../../Source/Kernel/rme_kernel.c ****     /* Currently the thread is not bound to any particular CPU */
5292:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=RME_THD_FREE;
 13185              		.loc 1 5292 24
 13186 06e8 24301BE5 		ldr	r3, [fp, #-36]
 13187 06ec 0020E0E3 		mvn	r2, #0
 13188 06f0 142083E5 		str	r2, [r3, #20]
5293:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5294:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 13189              		.loc 1 5294 5
 13190 06f4 24301BE5 		ldr	r3, [fp, #-36]
 13191 06f8 083083E2 		add	r3, r3, #8
 13192 06fc 0300A0E1 		mov	r0, r3
 13193 0700 FEFFFFEB 		bl	_RME_List_Crt
5295:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 13194              		.loc 1 5295 5
 13195 0704 24301BE5 		ldr	r3, [fp, #-36]
 13196 0708 3C3083E2 		add	r3, r3, #60
 13197 070c 0300A0E1 		mov	r0, r3
 13198 0710 FEFFFFEB 		bl	_RME_List_Crt
5296:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this is not a hypervisor thread yet */
5297:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13199              		.loc 1 5297 7
 13200 0714 14309BE5 		ldr	r3, [fp, #20]
 13201 0718 000053E3 		cmp	r3, #0
 13202 071c 0800001A 		bne	.L845
5298:../../Source/Kernel/rme_kernel.c ****     {
5299:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5300:../../Source/Kernel/rme_kernel.c ****         
5301:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr;
 13203              		.loc 1 5301 29
 13204 0720 24301BE5 		ldr	r3, [fp, #-36]
 13205 0724 10209BE5 		ldr	r2, [fp, #16]
 13206 0728 442083E5 		str	r2, [r3, #68]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 326


5302:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 13207              		.loc 1 5302 52
 13208 072c 1C301BE5 		ldr	r3, [fp, #-28]
 13209 0730 583083E2 		add	r3, r3, #88
 13210              		.loc 1 5302 25
 13211 0734 0320A0E1 		mov	r2, r3
 13212              		.loc 1 5302 24
 13213 0738 24301BE5 		ldr	r3, [fp, #-36]
 13214 073c 482083E5 		str	r2, [r3, #72]
 13215 0740 060000EA 		b	.L846
 13216              	.L845:
5303:../../Source/Kernel/rme_kernel.c ****     }
5304:../../Source/Kernel/rme_kernel.c ****     /* Default to HYP_VA_BASE for all created hypervisor threads */
5305:../../Source/Kernel/rme_kernel.c ****     else
5306:../../Source/Kernel/rme_kernel.c ****     {
5307:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5308:../../Source/Kernel/rme_kernel.c ****         
5309:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr|RME_THD_HYP_FLAG;
 13217              		.loc 1 5309 34
 13218 0744 10309BE5 		ldr	r3, [fp, #16]
 13219 0748 022183E3 		orr	r2, r3, #-2147483648
 13220              		.loc 1 5309 29
 13221 074c 24301BE5 		ldr	r3, [fp, #-36]
 13222 0750 442083E5 		str	r2, [r3, #68]
5310:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg *)RME_HYP_VA_BASE;
 13223              		.loc 1 5310 24
 13224 0754 24301BE5 		ldr	r3, [fp, #-36]
 13225 0758 0222A0E3 		mov	r2, #536870912
 13226 075c 482083E5 		str	r2, [r3, #72]
 13227              	.L846:
5311:../../Source/Kernel/rme_kernel.c ****     }
5312:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5313:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 13228              		.loc 1 5313 5
 13229 0760 24301BE5 		ldr	r3, [fp, #-36]
 13230 0764 4C3083E2 		add	r3, r3, #76
 13231 0768 0300A0E1 		mov	r0, r3
 13232 076c FEFFFFEB 		bl	_RME_List_Crt
5314:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 13233              		.loc 1 5314 29
 13234 0770 24301BE5 		ldr	r3, [fp, #-36]
 13235 0774 0020A0E3 		mov	r2, #0
 13236 0778 542083E5 		str	r2, [r3, #84]
5315:../../Source/Kernel/rme_kernel.c **** 
5316:../../Source/Kernel/rme_kernel.c ****     /* Header init */
5317:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=0U;
 13237              		.loc 1 5317 27
 13238 077c 20301BE5 		ldr	r3, [fp, #-32]
 13239 0780 0020A0E3 		mov	r2, #0
 13240 0784 042083E5 		str	r2, [r3, #4]
5318:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 13241              		.loc 1 5318 25
 13242 0788 20301BE5 		ldr	r3, [fp, #-32]
 13243 078c 1C201BE5 		ldr	r2, [fp, #-28]
 13244 0790 0C2083E5 		str	r2, [r3, #12]
5319:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_ALL;
 13245              		.loc 1 5319 23
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 327


 13246 0794 20301BE5 		ldr	r3, [fp, #-32]
 13247 0798 FF2100E3 		movw	r2, #511
 13248 079c 082083E5 		str	r2, [r3, #8]
5320:../../Source/Kernel/rme_kernel.c **** 
5321:../../Source/Kernel/rme_kernel.c ****     /* Reference process */
5322:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 13249              		.loc 1 5322 5
 13250 07a0 28301BE5 		ldr	r3, [fp, #-40]
 13251 07a4 043083E2 		add	r3, r3, #4
 13252 07a8 0110A0E3 		mov	r1, #1
 13253 07ac 0300A0E1 		mov	r0, r3
 13254 07b0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5323:../../Source/Kernel/rme_kernel.c ****     
5324:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5325:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 13255              		.loc 1 5325 5
 13256 07b4 20301BE5 		ldr	r3, [fp, #-32]
 13257 07b8 0614A0E3 		mov	r1, #100663296
 13258 07bc 0300A0E1 		mov	r0, r3
 13259 07c0 FEFFFFEB 		bl	__RME_A7A_Write_Release
5326:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5327:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5328:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5329:../../Source/Kernel/rme_kernel.c **** 
5330:../../Source/Kernel/rme_kernel.c ****     return 0;
 13260              		.loc 1 5330 12
 13261 07c4 0030A0E3 		mov	r3, #0
 13262              	.L803:
5331:../../Source/Kernel/rme_kernel.c **** }
 13263              		.loc 1 5331 1
 13264 07c8 0300A0E1 		mov	r0, r3
 13265 07cc 04D04BE2 		sub	sp, fp, #4
 13266              		.cfi_def_cfa 13, 8
 13267              		@ sp needed
 13268 07d0 0088BDE8 		pop	{fp, pc}
 13269              		.cfi_endproc
 13270              	.LFE56:
 13272              		.section	.text._RME_Thd_Del,"ax",%progbits
 13273              		.align	2
 13274              		.syntax unified
 13275              		.arm
 13277              	_RME_Thd_Del:
 13278              	.LFB57:
5332:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Crt *************************************************/
5333:../../Source/Kernel/rme_kernel.c **** 
5334:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Del ******************************************************
5335:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread.
5336:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
5337:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5338:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5339:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread in the captbl.
5340:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5341:../../Source/Kernel/rme_kernel.c **** Output      : None.
5342:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5343:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5344:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Del(struct RME_Cap_Cpt* Cpt,
5345:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 328


5346:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd)
5347:../../Source/Kernel/rme_kernel.c **** {
 13279              		.loc 1 5347 1
 13280              		.cfi_startproc
 13281              		@ args = 0, pretend = 0, frame = 40
 13282              		@ frame_needed = 1, uses_anonymous_args = 0
 13283 0000 00482DE9 		push	{fp, lr}
 13284              		.cfi_def_cfa_offset 8
 13285              		.cfi_offset 11, -8
 13286              		.cfi_offset 14, -4
 13287 0004 04B08DE2 		add	fp, sp, #4
 13288              		.cfi_def_cfa 11, 4
 13289 0008 28D04DE2 		sub	sp, sp, #40
 13290 000c 20000BE5 		str	r0, [fp, #-32]
 13291 0010 24100BE5 		str	r1, [fp, #-36]
 13292 0014 28200BE5 		str	r2, [fp, #-40]
5348:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5349:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Del;
5350:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5351:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
5352:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5353:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
5354:../../Source/Kernel/rme_kernel.c ****     
5355:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5356:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 13293              		.loc 1 5356 5
 13294 0018 24301BE5 		ldr	r3, [fp, #-36]
 13295 001c 803003E2 		and	r3, r3, #128
 13296 0020 000053E3 		cmp	r3, #0
 13297 0024 1C00001A 		bne	.L848
 13298              		.loc 1 5356 5 is_stmt 0 discriminator 1
 13299 0028 20301BE5 		ldr	r3, [fp, #-32]
 13300 002c 142093E5 		ldr	r2, [r3, #20]
 13301 0030 24301BE5 		ldr	r3, [fp, #-36]
 13302 0034 030052E1 		cmp	r2, r3
 13303 0038 0100008A 		bhi	.L849
 13304              		.loc 1 5356 5 discriminator 3
 13305 003c 0230E0E3 		mvn	r3, #2
 13306              		.loc 1 5356 5
 13307 0040 FD0000EA 		b	.L850
 13308              	.L849:
 13309              		.loc 1 5356 5 discriminator 4
 13310 0044 24301BE5 		ldr	r3, [fp, #-36]
 13311 0048 8322A0E1 		lsl	r2, r3, #5
 13312 004c 20301BE5 		ldr	r3, [fp, #-32]
 13313 0050 0C3093E5 		ldr	r3, [r3, #12]
 13314 0054 033082E0 		add	r3, r2, r3
 13315 0058 08300BE5 		str	r3, [fp, #-8]
 13316 005c 08301BE5 		ldr	r3, [fp, #-8]
 13317 0060 0300A0E1 		mov	r0, r3
 13318 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13319 0068 0C000BE5 		str	r0, [fp, #-12]
 13320              		.loc 1 5356 5 discriminator 1
 13321 006c 0C301BE5 		ldr	r3, [fp, #-12]
 13322 0070 FF3803E2 		and	r3, r3, #16711680
 13323 0074 020853E3 		cmp	r3, #131072
 13324 0078 0100001A 		bne	.L851
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 329


 13325              		.loc 1 5356 5 discriminator 5
 13326 007c 0830E0E3 		mvn	r3, #8
 13327              		.loc 1 5356 5
 13328 0080 ED0000EA 		b	.L850
 13329              	.L851:
 13330              		.loc 1 5356 5 discriminator 6
 13331 0084 0C301BE5 		ldr	r3, [fp, #-12]
 13332 0088 233CA0E1 		lsr	r3, r3, #24
 13333 008c 030053E3 		cmp	r3, #3
 13334 0090 3F00000A 		beq	.L852
 13335              		.loc 1 5356 5 discriminator 7
 13336 0094 0130E0E3 		mvn	r3, #1
 13337              		.loc 1 5356 5
 13338 0098 E70000EA 		b	.L850
 13339              	.L848:
 13340              		.loc 1 5356 5 discriminator 2
 13341 009c 24301BE5 		ldr	r3, [fp, #-36]
 13342 00a0 2324A0E1 		lsr	r2, r3, #8
 13343 00a4 20301BE5 		ldr	r3, [fp, #-32]
 13344 00a8 143093E5 		ldr	r3, [r3, #20]
 13345 00ac 030052E1 		cmp	r2, r3
 13346 00b0 0100003A 		bcc	.L853
 13347              		.loc 1 5356 5 discriminator 8
 13348 00b4 0230E0E3 		mvn	r3, #2
 13349              		.loc 1 5356 5
 13350 00b8 DF0000EA 		b	.L850
 13351              	.L853:
 13352              		.loc 1 5356 5 discriminator 9
 13353 00bc 24301BE5 		ldr	r3, [fp, #-36]
 13354 00c0 2334A0E1 		lsr	r3, r3, #8
 13355 00c4 8322A0E1 		lsl	r2, r3, #5
 13356 00c8 20301BE5 		ldr	r3, [fp, #-32]
 13357 00cc 0C3093E5 		ldr	r3, [r3, #12]
 13358 00d0 033082E0 		add	r3, r2, r3
 13359 00d4 08300BE5 		str	r3, [fp, #-8]
 13360 00d8 08301BE5 		ldr	r3, [fp, #-8]
 13361 00dc 0300A0E1 		mov	r0, r3
 13362 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13363 00e4 0C000BE5 		str	r0, [fp, #-12]
 13364              		.loc 1 5356 5 discriminator 1
 13365 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 13366 00ec FF3803E2 		and	r3, r3, #16711680
 13367 00f0 020853E3 		cmp	r3, #131072
 13368 00f4 0100001A 		bne	.L854
 13369              		.loc 1 5356 5 discriminator 10
 13370 00f8 0830E0E3 		mvn	r3, #8
 13371              		.loc 1 5356 5
 13372 00fc CE0000EA 		b	.L850
 13373              	.L854:
 13374              		.loc 1 5356 5 discriminator 11
 13375 0100 0C301BE5 		ldr	r3, [fp, #-12]
 13376 0104 233CA0E1 		lsr	r3, r3, #24
 13377 0108 030053E3 		cmp	r3, #3
 13378 010c 0100000A 		beq	.L855
 13379              		.loc 1 5356 5 discriminator 12
 13380 0110 0130E0E3 		mvn	r3, #1
 13381              		.loc 1 5356 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 330


 13382 0114 C80000EA 		b	.L850
 13383              	.L855:
 13384              		.loc 1 5356 5 discriminator 13
 13385 0118 24301BE5 		ldr	r3, [fp, #-36]
 13386 011c 7F2003E2 		and	r2, r3, #127
 13387 0120 08301BE5 		ldr	r3, [fp, #-8]
 13388 0124 143093E5 		ldr	r3, [r3, #20]
 13389 0128 030052E1 		cmp	r2, r3
 13390 012c 0100003A 		bcc	.L856
 13391              		.loc 1 5356 5 discriminator 14
 13392 0130 0230E0E3 		mvn	r3, #2
 13393              		.loc 1 5356 5
 13394 0134 C00000EA 		b	.L850
 13395              	.L856:
 13396              		.loc 1 5356 5 discriminator 15
 13397 0138 24301BE5 		ldr	r3, [fp, #-36]
 13398 013c 7F3003E2 		and	r3, r3, #127
 13399 0140 8322A0E1 		lsl	r2, r3, #5
 13400 0144 08301BE5 		ldr	r3, [fp, #-8]
 13401 0148 0C3093E5 		ldr	r3, [r3, #12]
 13402 014c 033082E0 		add	r3, r2, r3
 13403 0150 08300BE5 		str	r3, [fp, #-8]
 13404 0154 08301BE5 		ldr	r3, [fp, #-8]
 13405 0158 0300A0E1 		mov	r0, r3
 13406 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13407 0160 0C000BE5 		str	r0, [fp, #-12]
 13408              		.loc 1 5356 5 discriminator 1
 13409 0164 0C301BE5 		ldr	r3, [fp, #-12]
 13410 0168 FF3803E2 		and	r3, r3, #16711680
 13411 016c 020853E3 		cmp	r3, #131072
 13412 0170 0100001A 		bne	.L857
 13413              		.loc 1 5356 5 discriminator 16
 13414 0174 0830E0E3 		mvn	r3, #8
 13415              		.loc 1 5356 5
 13416 0178 AF0000EA 		b	.L850
 13417              	.L857:
 13418              		.loc 1 5356 5 discriminator 17
 13419 017c 0C301BE5 		ldr	r3, [fp, #-12]
 13420 0180 233CA0E1 		lsr	r3, r3, #24
 13421 0184 030053E3 		cmp	r3, #3
 13422 0188 0100000A 		beq	.L852
 13423              		.loc 1 5356 5 discriminator 18
 13424 018c 0130E0E3 		mvn	r3, #1
 13425              		.loc 1 5356 5
 13426 0190 A90000EA 		b	.L850
 13427              	.L852:
5357:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
5358:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
5359:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 13428              		.loc 1 5359 5 is_stmt 1
 13429 0194 08301BE5 		ldr	r3, [fp, #-8]
 13430 0198 083093E5 		ldr	r3, [r3, #8]
 13431 019c 023003E2 		and	r3, r3, #2
 13432 01a0 000053E3 		cmp	r3, #0
 13433 01a4 0100001A 		bne	.L858
 13434              		.loc 1 5359 5 is_stmt 0 discriminator 1
 13435 01a8 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 331


 13436              		.loc 1 5359 5
 13437 01ac A20000EA 		b	.L850
 13438              	.L858:
5360:../../Source/Kernel/rme_kernel.c ****     
5361:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5362:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Del);
 13439              		.loc 1 5362 5 is_stmt 1
 13440 01b0 08301BE5 		ldr	r3, [fp, #-8]
 13441 01b4 142093E5 		ldr	r2, [r3, #20]
 13442 01b8 28301BE5 		ldr	r3, [fp, #-40]
 13443 01bc 030052E1 		cmp	r2, r3
 13444 01c0 0100008A 		bhi	.L859
 13445              		.loc 1 5362 5 is_stmt 0 discriminator 1
 13446 01c4 0230E0E3 		mvn	r3, #2
 13447              		.loc 1 5362 5
 13448 01c8 9B0000EA 		b	.L850
 13449              	.L859:
 13450              		.loc 1 5362 5 discriminator 2
 13451 01cc 28301BE5 		ldr	r3, [fp, #-40]
 13452 01d0 8322A0E1 		lsl	r2, r3, #5
 13453 01d4 08301BE5 		ldr	r3, [fp, #-8]
 13454 01d8 0C3093E5 		ldr	r3, [r3, #12]
 13455 01dc 033082E0 		add	r3, r2, r3
 13456 01e0 10300BE5 		str	r3, [fp, #-16]
5363:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
5364:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Thd_Del,Type_Stat,RME_CAP_TYPE_THD);
 13457              		.loc 1 5364 5 is_stmt 1
 13458 01e4 10301BE5 		ldr	r3, [fp, #-16]
 13459 01e8 0300A0E1 		mov	r0, r3
 13460 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13461 01f0 0C000BE5 		str	r0, [fp, #-12]
 13462              		.loc 1 5364 5 is_stmt 0 discriminator 1
 13463 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 13464 01f8 FF3803E2 		and	r3, r3, #16711680
 13465 01fc 020853E3 		cmp	r3, #131072
 13466 0200 0100000A 		beq	.L860
 13467 0204 0830E0E3 		mvn	r3, #8
 13468              		.loc 1 5364 5
 13469 0208 8B0000EA 		b	.L850
 13470              	.L860:
 13471              		.loc 1 5364 5 discriminator 2
 13472 020c 0C301BE5 		ldr	r3, [fp, #-12]
 13473 0210 233CA0E1 		lsr	r3, r3, #24
 13474 0214 060053E3 		cmp	r3, #6
 13475 0218 0100000A 		beq	.L861
 13476              		.loc 1 5364 5 discriminator 3
 13477 021c 0130E0E3 		mvn	r3, #1
 13478              		.loc 1 5364 5
 13479 0220 850000EA 		b	.L850
 13480              	.L861:
 13481              		.loc 1 5364 5 discriminator 6
 13482 0224 10301BE5 		ldr	r3, [fp, #-16]
 13483 0228 043093E5 		ldr	r3, [r3, #4]
 13484 022c 000053E3 		cmp	r3, #0
 13485 0230 0B00000A 		beq	.L862
 13486              		.loc 1 5364 5 discriminator 7
 13487 0234 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 332


 13488 0238 7330FFE6 		uxth	r3, r3
 13489 023c 000053E3 		cmp	r3, #0
 13490 0240 0500001A 		bne	.L863
 13491              		.loc 1 5364 5 discriminator 9
 13492 0244 10001BE5 		ldr	r0, [fp, #-16]
 13493 0248 0C301BE5 		ldr	r3, [fp, #-12]
 13494 024c FF38C3E3 		bic	r3, r3, #16711680
 13495 0250 0320A0E1 		mov	r2, r3
 13496 0254 0C101BE5 		ldr	r1, [fp, #-12]
 13497 0258 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13498              	.L863:
 13499              		.loc 1 5364 5 discriminator 11
 13500 025c 0530E0E3 		mvn	r3, #5
 13501              		.loc 1 5364 5
 13502 0260 750000EA 		b	.L850
 13503              	.L862:
 13504              		.loc 1 5364 5 discriminator 8
 13505 0264 0C301BE5 		ldr	r3, [fp, #-12]
 13506 0268 7330FFE6 		uxth	r3, r3
 13507 026c 000053E3 		cmp	r3, #0
 13508 0270 0800000A 		beq	.L864
 13509              		.loc 1 5364 5 discriminator 12
 13510 0274 003000E3 		movw	r3, #:lower16:.LC6
 13511 0278 003040E3 		movt	r3, #:upper16:.LC6
 13512 027c 002000E3 		movw	r2, #:lower16:.LC7
 13513 0280 002040E3 		movt	r2, #:upper16:.LC7
 13514 0284 F41401E3 		movw	r1, #5364
 13515 0288 000000E3 		movw	r0, #:lower16:.LC8
 13516 028c 000040E3 		movt	r0, #:upper16:.LC8
 13517 0290 FEFFFFEB 		bl	RME_Log
 13518              	.L865:
 13519              		.loc 1 5364 5
 13520 0294 FEFFFFEA 		b	.L865
 13521              	.L864:
5365:../../Source/Kernel/rme_kernel.c ****     
5366:../../Source/Kernel/rme_kernel.c ****     /* Get the thread */
5367:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Del,struct RME_Thd_Struct*);
 13522              		.loc 1 5367 12 is_stmt 1
 13523 0298 10301BE5 		ldr	r3, [fp, #-16]
 13524 029c 0C3093E5 		ldr	r3, [r3, #12]
 13525              		.loc 1 5367 11
 13526 02a0 14300BE5 		str	r3, [fp, #-20]
5368:../../Source/Kernel/rme_kernel.c ****     
5369:../../Source/Kernel/rme_kernel.c ****     /* See if the thread is free. If still bound, we cannot proceed to deletion */
5370:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=RME_THD_FREE)
 13527              		.loc 1 5370 21
 13528 02a4 14301BE5 		ldr	r3, [fp, #-20]
 13529 02a8 143093E5 		ldr	r3, [r3, #20]
 13530              		.loc 1 5370 7
 13531 02ac 010073E3 		cmn	r3, #1
 13532 02b0 0700000A 		beq	.L866
5371:../../Source/Kernel/rme_kernel.c ****     {
5372:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5373:../../Source/Kernel/rme_kernel.c **** 
5374:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Thd_Del,Type_Stat);
 13533              		.loc 1 5374 9
 13534 02b4 10001BE5 		ldr	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 333


 13535 02b8 0C301BE5 		ldr	r3, [fp, #-12]
 13536 02bc FF38C3E3 		bic	r3, r3, #16711680
 13537 02c0 0320A0E1 		mov	r2, r3
 13538 02c4 0C101BE5 		ldr	r1, [fp, #-12]
 13539 02c8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
5375:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13540              		.loc 1 5375 16
 13541 02cc CB30E0E3 		mvn	r3, #203
 13542 02d0 590000EA 		b	.L850
 13543              	.L866:
5376:../../Source/Kernel/rme_kernel.c ****     }
5377:../../Source/Kernel/rme_kernel.c ****     else
5378:../../Source/Kernel/rme_kernel.c ****     {
5379:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5380:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5381:../../Source/Kernel/rme_kernel.c ****     }
5382:../../Source/Kernel/rme_kernel.c ****     
5383:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
5384:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Thd_Del,Type_Stat);
 13544              		.loc 1 5384 5
 13545 02d4 10301BE5 		ldr	r3, [fp, #-16]
 13546 02d8 0020A0E3 		mov	r2, #0
 13547 02dc 0C101BE5 		ldr	r1, [fp, #-12]
 13548 02e0 0300A0E1 		mov	r0, r3
 13549 02e4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13550 02e8 0030A0E1 		mov	r3, r0
 13551              		.loc 1 5384 5 is_stmt 0 discriminator 1
 13552 02ec 000053E3 		cmp	r3, #0
 13553 02f0 1300001A 		bne	.L868
 13554 02f4 0030E0E3 		mvn	r3, #0
 13555              		.loc 1 5384 5
 13556 02f8 4F0000EA 		b	.L850
 13557              	.L869:
5385:../../Source/Kernel/rme_kernel.c ****     
5386:../../Source/Kernel/rme_kernel.c ****     /* Is the thread using any invocation? If yes, just pop the invocation
5387:../../Source/Kernel/rme_kernel.c ****      * stack to empty, and free all the invocation stubs. This can be virtually
5388:../../Source/Kernel/rme_kernel.c ****      * unbounded if the invocation stack is just too deep. This is left to the
5389:../../Source/Kernel/rme_kernel.c ****      * user; if this is what he or she wants, be our guest. */
5390:../../Source/Kernel/rme_kernel.c ****     while(Thread->Ctx.Invstk.Next!=&(Thread->Ctx.Invstk))
5391:../../Source/Kernel/rme_kernel.c ****     {
5392:../../Source/Kernel/rme_kernel.c ****         Invocation=(struct RME_Inv_Struct*)(Thread->Ctx.Invstk.Next);
 13558              		.loc 1 5392 19 is_stmt 1
 13559 02fc 14301BE5 		ldr	r3, [fp, #-20]
 13560 0300 4C3093E5 		ldr	r3, [r3, #76]
 13561 0304 18300BE5 		str	r3, [fp, #-24]
5393:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 13562              		.loc 1 5393 9
 13563 0308 18301BE5 		ldr	r3, [fp, #-24]
 13564 030c 042093E5 		ldr	r2, [r3, #4]
 13565 0310 18301BE5 		ldr	r3, [fp, #-24]
 13566 0314 003093E5 		ldr	r3, [r3]
 13567 0318 0310A0E1 		mov	r1, r3
 13568 031c 0200A0E1 		mov	r0, r2
 13569 0320 FEFFFFEB 		bl	_RME_List_Del
5394:../../Source/Kernel/rme_kernel.c ****         Invocation->Thd_Act=0U;
 13570              		.loc 1 5394 28
 13571 0324 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 334


 13572 0328 0020A0E3 		mov	r2, #0
 13573 032c 0C2083E5 		str	r2, [r3, #12]
5395:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Invstk_Depth--;
 13574              		.loc 1 5395 20
 13575 0330 14301BE5 		ldr	r3, [fp, #-20]
 13576 0334 543093E5 		ldr	r3, [r3, #84]
 13577              		.loc 1 5395 33
 13578 0338 012043E2 		sub	r2, r3, #1
 13579 033c 14301BE5 		ldr	r3, [fp, #-20]
 13580 0340 542083E5 		str	r2, [r3, #84]
 13581              	.L868:
5390:../../Source/Kernel/rme_kernel.c ****     {
 13582              		.loc 1 5390 29
 13583 0344 14301BE5 		ldr	r3, [fp, #-20]
 13584 0348 4C2093E5 		ldr	r2, [r3, #76]
5390:../../Source/Kernel/rme_kernel.c ****     {
 13585              		.loc 1 5390 36
 13586 034c 14301BE5 		ldr	r3, [fp, #-20]
 13587 0350 4C3083E2 		add	r3, r3, #76
5390:../../Source/Kernel/rme_kernel.c ****     {
 13588              		.loc 1 5390 34
 13589 0354 030052E1 		cmp	r2, r3
 13590 0358 E7FFFF1A 		bne	.L869
5396:../../Source/Kernel/rme_kernel.c ****     }
5397:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thread->Ctx.Invstk_Depth==0U);
 13591              		.loc 1 5397 5
 13592 035c 14301BE5 		ldr	r3, [fp, #-20]
 13593 0360 543093E5 		ldr	r3, [r3, #84]
 13594 0364 000053E3 		cmp	r3, #0
 13595 0368 0800000A 		beq	.L870
 13596              		.loc 1 5397 5 is_stmt 0 discriminator 1
 13597 036c 003000E3 		movw	r3, #:lower16:.LC6
 13598 0370 003040E3 		movt	r3, #:upper16:.LC6
 13599 0374 002000E3 		movw	r2, #:lower16:.LC7
 13600 0378 002040E3 		movt	r2, #:upper16:.LC7
 13601 037c 151501E3 		movw	r1, #5397
 13602 0380 000000E3 		movw	r0, #:lower16:.LC8
 13603 0384 000040E3 		movt	r0, #:upper16:.LC8
 13604 0388 FEFFFFEB 		bl	RME_Log
 13605              	.L871:
 13606              		.loc 1 5397 5
 13607 038c FEFFFFEA 		b	.L871
 13608              	.L870:
5398:../../Source/Kernel/rme_kernel.c ****     
5399:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
5400:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Thread->Sched.Prc->Head.Root_Ref), -1);
 13609              		.loc 1 5400 5 is_stmt 1
 13610 0390 14301BE5 		ldr	r3, [fp, #-20]
 13611 0394 2C3093E5 		ldr	r3, [r3, #44]
 13612 0398 043083E2 		add	r3, r3, #4
 13613 039c 0010E0E3 		mvn	r1, #0
 13614 03a0 0300A0E1 		mov	r0, r3
 13615 03a4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5401:../../Source/Kernel/rme_kernel.c ****     
5402:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
5403:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)==0U)
 13616              		.loc 1 5403 20
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 335


 13617 03a8 14301BE5 		ldr	r3, [fp, #-20]
 13618 03ac 443093E5 		ldr	r3, [r3, #68]
 13619              		.loc 1 5403 7
 13620 03b0 000053E3 		cmp	r3, #0
 13621 03b4 0F0000BA 		blt	.L872
5404:../../Source/Kernel/rme_kernel.c ****     {
5405:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5406:../../Source/Kernel/rme_kernel.c **** 
5407:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13622              		.loc 1 5407 9
 13623 03b8 14301BE5 		ldr	r3, [fp, #-20]
 13624 03bc 9C10A0E3 		mov	r1, #156
 13625 03c0 0300A0E1 		mov	r0, r3
 13626 03c4 FEFFFFEB 		bl	_RME_Kot_Erase
 13627 03c8 0030A0E1 		mov	r3, r0
 13628              		.loc 1 5407 9 is_stmt 0 discriminator 1
 13629 03cc 000053E3 		cmp	r3, #0
 13630 03d0 1800000A 		beq	.L873
 13631 03d4 003000E3 		movw	r3, #:lower16:.LC6
 13632 03d8 003040E3 		movt	r3, #:upper16:.LC6
 13633 03dc 002000E3 		movw	r2, #:lower16:.LC7
 13634 03e0 002040E3 		movt	r2, #:upper16:.LC7
 13635 03e4 1F1501E3 		movw	r1, #5407
 13636 03e8 000000E3 		movw	r0, #:lower16:.LC8
 13637 03ec 000040E3 		movt	r0, #:upper16:.LC8
 13638 03f0 FEFFFFEB 		bl	RME_Log
 13639              	.L874:
 13640              		.loc 1 5407 9
 13641 03f4 FEFFFFEA 		b	.L874
 13642              	.L872:
5408:../../Source/Kernel/rme_kernel.c ****                                   RME_THD_SIZE(Thread->Ctx.Hyp_Attr))==0);
5409:../../Source/Kernel/rme_kernel.c ****     }
5410:../../Source/Kernel/rme_kernel.c ****     else
5411:../../Source/Kernel/rme_kernel.c ****     {
5412:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5413:../../Source/Kernel/rme_kernel.c **** 
5414:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13643              		.loc 1 5414 9 is_stmt 1
 13644 03f8 14301BE5 		ldr	r3, [fp, #-20]
 13645 03fc 5810A0E3 		mov	r1, #88
 13646 0400 0300A0E1 		mov	r0, r3
 13647 0404 FEFFFFEB 		bl	_RME_Kot_Erase
 13648 0408 0030A0E1 		mov	r3, r0
 13649              		.loc 1 5414 9 is_stmt 0 discriminator 1
 13650 040c 000053E3 		cmp	r3, #0
 13651 0410 0800000A 		beq	.L873
 13652 0414 003000E3 		movw	r3, #:lower16:.LC6
 13653 0418 003040E3 		movt	r3, #:upper16:.LC6
 13654 041c 002000E3 		movw	r2, #:lower16:.LC7
 13655 0420 002040E3 		movt	r2, #:upper16:.LC7
 13656 0424 261501E3 		movw	r1, #5414
 13657 0428 000000E3 		movw	r0, #:lower16:.LC8
 13658 042c 000040E3 		movt	r0, #:upper16:.LC8
 13659 0430 FEFFFFEB 		bl	RME_Log
 13660              	.L875:
 13661              		.loc 1 5414 9
 13662 0434 FEFFFFEA 		b	.L875
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 336


 13663              	.L873:
5415:../../Source/Kernel/rme_kernel.c ****                    RME_HYP_SIZE)==0);
5416:../../Source/Kernel/rme_kernel.c ****     }
5417:../../Source/Kernel/rme_kernel.c ****     
5418:../../Source/Kernel/rme_kernel.c ****     return 0;
 13664              		.loc 1 5418 12 is_stmt 1
 13665 0438 0030A0E3 		mov	r3, #0
 13666              	.L850:
5419:../../Source/Kernel/rme_kernel.c **** }
 13667              		.loc 1 5419 1
 13668 043c 0300A0E1 		mov	r0, r3
 13669 0440 04D04BE2 		sub	sp, fp, #4
 13670              		.cfi_def_cfa 13, 8
 13671              		@ sp needed
 13672 0444 0088BDE8 		pop	{fp, pc}
 13673              		.cfi_endproc
 13674              	.LFE57:
 13676              		.section	.text._RME_Thd_Sched_Bind,"ax",%progbits
 13677              		.align	2
 13678              		.syntax unified
 13679              		.arm
 13681              	_RME_Thd_Sched_Bind:
 13682              	.LFB58:
5420:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Del *************************************************/
5421:../../Source/Kernel/rme_kernel.c **** 
5422:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Bind ***********************************************
5423:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's priority level, and its scheduler thread. When
5424:../../Source/Kernel/rme_kernel.c ****               there are any state changes on this thread, a notification will
5425:../../Source/Kernel/rme_kernel.c ****               be sent to its scheduler thread. If the state of the thread
5426:../../Source/Kernel/rme_kernel.c ****               changes for multiple times, then only the most recent state will
5427:../../Source/Kernel/rme_kernel.c ****               be reflected in the scheduler's receive queue.
5428:../../Source/Kernel/rme_kernel.c ****               The scheduler and the threads that it schedule must be on the
5429:../../Source/Kernel/rme_kernel.c ****               same core. When a thread wants to go from one core to another,
5430:../../Source/Kernel/rme_kernel.c ****               it must be freed from that core first. 
5431:../../Source/Kernel/rme_kernel.c ****               This must be called on the same core with the Cap_Thd_Sched, and
5432:../../Source/Kernel/rme_kernel.c ****               the Cap_Thd itself must be free.
5433:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5434:../../Source/Kernel/rme_kernel.c ****               priority.
5435:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5436:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5437:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5438:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Sched - The scheduler thread.
5439:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
5440:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The signal endpoint for scheduler
5441:../../Source/Kernel/rme_kernel.c ****                                   notifications. This signal endpoint will be
5442:../../Source/Kernel/rme_kernel.c ****                                   sent to whenever this thread has a fault, or
5443:../../Source/Kernel/rme_kernel.c ****                                   timeouts. This is purely optional; if it is
5444:../../Source/Kernel/rme_kernel.c ****                                   not needed, pass in RME_CID_NULL.
5445:../../Source/Kernel/rme_kernel.c ****               rme_tid_t TID - The thread ID. This is user-supplied, and the
5446:../../Source/Kernel/rme_kernel.c ****                               kernel will not check whether there are two
5447:../../Source/Kernel/rme_kernel.c ****                               threads that have the same TID.
5448:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level, higher is more critical.
5449:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Haddr - The kernel-accessible virtual memory address
5450:../../Source/Kernel/rme_kernel.c ****                                 for this thread's register sets, only used by
5451:../../Source/Kernel/rme_kernel.c ****                                 hypervisor-managed threads. For other threads,
5452:../../Source/Kernel/rme_kernel.c ****                                 please pass in NULL instead.
5453:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 337


5454:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5455:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5456:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Bind(struct RME_Cap_Cpt* Cpt,
5457:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd,
5458:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd_Sched,
5459:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Sig,
5460:../../Source/Kernel/rme_kernel.c ****                                      rme_tid_t TID,
5461:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio,
5462:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Haddr)
5463:../../Source/Kernel/rme_kernel.c **** {
 13683              		.loc 1 5463 1
 13684              		.cfi_startproc
 13685              		@ args = 12, pretend = 0, frame = 56
 13686              		@ frame_needed = 1, uses_anonymous_args = 0
 13687 0000 00482DE9 		push	{fp, lr}
 13688              		.cfi_def_cfa_offset 8
 13689              		.cfi_offset 11, -8
 13690              		.cfi_offset 14, -4
 13691 0004 04B08DE2 		add	fp, sp, #4
 13692              		.cfi_def_cfa 11, 4
 13693 0008 38D04DE2 		sub	sp, sp, #56
 13694 000c 30000BE5 		str	r0, [fp, #-48]
 13695 0010 34100BE5 		str	r1, [fp, #-52]
 13696 0014 38200BE5 		str	r2, [fp, #-56]
 13697 0018 3C300BE5 		str	r3, [fp, #-60]
5464:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5465:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Sched;
5466:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
5467:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5468:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
5469:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_Old;
5470:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_New;
5471:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Hyp_Attr;
5473:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
5474:../../Source/Kernel/rme_kernel.c **** 
5475:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5476:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 13698              		.loc 1 5476 5
 13699 001c 34301BE5 		ldr	r3, [fp, #-52]
 13700 0020 803003E2 		and	r3, r3, #128
 13701 0024 000053E3 		cmp	r3, #0
 13702 0028 1C00001A 		bne	.L877
 13703              		.loc 1 5476 5 is_stmt 0 discriminator 1
 13704 002c 30301BE5 		ldr	r3, [fp, #-48]
 13705 0030 142093E5 		ldr	r2, [r3, #20]
 13706 0034 34301BE5 		ldr	r3, [fp, #-52]
 13707 0038 030052E1 		cmp	r2, r3
 13708 003c 0100008A 		bhi	.L878
 13709              		.loc 1 5476 5 discriminator 3
 13710 0040 0230E0E3 		mvn	r3, #2
 13711              		.loc 1 5476 5
 13712 0044 D60100EA 		b	.L879
 13713              	.L878:
 13714              		.loc 1 5476 5 discriminator 4
 13715 0048 34301BE5 		ldr	r3, [fp, #-52]
 13716 004c 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 338


 13717 0050 30301BE5 		ldr	r3, [fp, #-48]
 13718 0054 0C3093E5 		ldr	r3, [r3, #12]
 13719 0058 033082E0 		add	r3, r2, r3
 13720 005c 08300BE5 		str	r3, [fp, #-8]
 13721 0060 08301BE5 		ldr	r3, [fp, #-8]
 13722 0064 0300A0E1 		mov	r0, r3
 13723 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13724 006c 14000BE5 		str	r0, [fp, #-20]
 13725              		.loc 1 5476 5 discriminator 1
 13726 0070 14301BE5 		ldr	r3, [fp, #-20]
 13727 0074 FF3803E2 		and	r3, r3, #16711680
 13728 0078 020853E3 		cmp	r3, #131072
 13729 007c 0100001A 		bne	.L880
 13730              		.loc 1 5476 5 discriminator 5
 13731 0080 0830E0E3 		mvn	r3, #8
 13732              		.loc 1 5476 5
 13733 0084 C60100EA 		b	.L879
 13734              	.L880:
 13735              		.loc 1 5476 5 discriminator 6
 13736 0088 14301BE5 		ldr	r3, [fp, #-20]
 13737 008c 233CA0E1 		lsr	r3, r3, #24
 13738 0090 060053E3 		cmp	r3, #6
 13739 0094 3F00000A 		beq	.L881
 13740              		.loc 1 5476 5 discriminator 7
 13741 0098 0130E0E3 		mvn	r3, #1
 13742              		.loc 1 5476 5
 13743 009c C00100EA 		b	.L879
 13744              	.L877:
 13745              		.loc 1 5476 5 discriminator 2
 13746 00a0 34301BE5 		ldr	r3, [fp, #-52]
 13747 00a4 2324A0E1 		lsr	r2, r3, #8
 13748 00a8 30301BE5 		ldr	r3, [fp, #-48]
 13749 00ac 143093E5 		ldr	r3, [r3, #20]
 13750 00b0 030052E1 		cmp	r2, r3
 13751 00b4 0100003A 		bcc	.L882
 13752              		.loc 1 5476 5 discriminator 8
 13753 00b8 0230E0E3 		mvn	r3, #2
 13754              		.loc 1 5476 5
 13755 00bc B80100EA 		b	.L879
 13756              	.L882:
 13757              		.loc 1 5476 5 discriminator 9
 13758 00c0 34301BE5 		ldr	r3, [fp, #-52]
 13759 00c4 2334A0E1 		lsr	r3, r3, #8
 13760 00c8 8322A0E1 		lsl	r2, r3, #5
 13761 00cc 30301BE5 		ldr	r3, [fp, #-48]
 13762 00d0 0C3093E5 		ldr	r3, [r3, #12]
 13763 00d4 033082E0 		add	r3, r2, r3
 13764 00d8 08300BE5 		str	r3, [fp, #-8]
 13765 00dc 08301BE5 		ldr	r3, [fp, #-8]
 13766 00e0 0300A0E1 		mov	r0, r3
 13767 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13768 00e8 14000BE5 		str	r0, [fp, #-20]
 13769              		.loc 1 5476 5 discriminator 1
 13770 00ec 14301BE5 		ldr	r3, [fp, #-20]
 13771 00f0 FF3803E2 		and	r3, r3, #16711680
 13772 00f4 020853E3 		cmp	r3, #131072
 13773 00f8 0100001A 		bne	.L883
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 339


 13774              		.loc 1 5476 5 discriminator 10
 13775 00fc 0830E0E3 		mvn	r3, #8
 13776              		.loc 1 5476 5
 13777 0100 A70100EA 		b	.L879
 13778              	.L883:
 13779              		.loc 1 5476 5 discriminator 11
 13780 0104 14301BE5 		ldr	r3, [fp, #-20]
 13781 0108 233CA0E1 		lsr	r3, r3, #24
 13782 010c 030053E3 		cmp	r3, #3
 13783 0110 0100000A 		beq	.L884
 13784              		.loc 1 5476 5 discriminator 12
 13785 0114 0130E0E3 		mvn	r3, #1
 13786              		.loc 1 5476 5
 13787 0118 A10100EA 		b	.L879
 13788              	.L884:
 13789              		.loc 1 5476 5 discriminator 13
 13790 011c 34301BE5 		ldr	r3, [fp, #-52]
 13791 0120 7F2003E2 		and	r2, r3, #127
 13792 0124 08301BE5 		ldr	r3, [fp, #-8]
 13793 0128 143093E5 		ldr	r3, [r3, #20]
 13794 012c 030052E1 		cmp	r2, r3
 13795 0130 0100003A 		bcc	.L885
 13796              		.loc 1 5476 5 discriminator 14
 13797 0134 0230E0E3 		mvn	r3, #2
 13798              		.loc 1 5476 5
 13799 0138 990100EA 		b	.L879
 13800              	.L885:
 13801              		.loc 1 5476 5 discriminator 15
 13802 013c 34301BE5 		ldr	r3, [fp, #-52]
 13803 0140 7F3003E2 		and	r3, r3, #127
 13804 0144 8322A0E1 		lsl	r2, r3, #5
 13805 0148 08301BE5 		ldr	r3, [fp, #-8]
 13806 014c 0C3093E5 		ldr	r3, [r3, #12]
 13807 0150 033082E0 		add	r3, r2, r3
 13808 0154 08300BE5 		str	r3, [fp, #-8]
 13809 0158 08301BE5 		ldr	r3, [fp, #-8]
 13810 015c 0300A0E1 		mov	r0, r3
 13811 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13812 0164 14000BE5 		str	r0, [fp, #-20]
 13813              		.loc 1 5476 5 discriminator 1
 13814 0168 14301BE5 		ldr	r3, [fp, #-20]
 13815 016c FF3803E2 		and	r3, r3, #16711680
 13816 0170 020853E3 		cmp	r3, #131072
 13817 0174 0100001A 		bne	.L886
 13818              		.loc 1 5476 5 discriminator 16
 13819 0178 0830E0E3 		mvn	r3, #8
 13820              		.loc 1 5476 5
 13821 017c 880100EA 		b	.L879
 13822              	.L886:
 13823              		.loc 1 5476 5 discriminator 17
 13824 0180 14301BE5 		ldr	r3, [fp, #-20]
 13825 0184 233CA0E1 		lsr	r3, r3, #24
 13826 0188 060053E3 		cmp	r3, #6
 13827 018c 0100000A 		beq	.L881
 13828              		.loc 1 5476 5 discriminator 18
 13829 0190 0130E0E3 		mvn	r3, #1
 13830              		.loc 1 5476 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 340


 13831 0194 820100EA 		b	.L879
 13832              	.L881:
5477:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5478:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Sched,RME_CAP_TYPE_THD,
 13833              		.loc 1 5478 5 is_stmt 1
 13834 0198 38301BE5 		ldr	r3, [fp, #-56]
 13835 019c 803003E2 		and	r3, r3, #128
 13836 01a0 000053E3 		cmp	r3, #0
 13837 01a4 1C00001A 		bne	.L887
 13838              		.loc 1 5478 5 is_stmt 0 discriminator 1
 13839 01a8 30301BE5 		ldr	r3, [fp, #-48]
 13840 01ac 142093E5 		ldr	r2, [r3, #20]
 13841 01b0 38301BE5 		ldr	r3, [fp, #-56]
 13842 01b4 030052E1 		cmp	r2, r3
 13843 01b8 0100008A 		bhi	.L888
 13844              		.loc 1 5478 5 discriminator 3
 13845 01bc 0230E0E3 		mvn	r3, #2
 13846              		.loc 1 5478 5
 13847 01c0 770100EA 		b	.L879
 13848              	.L888:
 13849              		.loc 1 5478 5 discriminator 4
 13850 01c4 38301BE5 		ldr	r3, [fp, #-56]
 13851 01c8 8322A0E1 		lsl	r2, r3, #5
 13852 01cc 30301BE5 		ldr	r3, [fp, #-48]
 13853 01d0 0C3093E5 		ldr	r3, [r3, #12]
 13854 01d4 033082E0 		add	r3, r2, r3
 13855 01d8 0C300BE5 		str	r3, [fp, #-12]
 13856 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 13857 01e0 0300A0E1 		mov	r0, r3
 13858 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13859 01e8 14000BE5 		str	r0, [fp, #-20]
 13860              		.loc 1 5478 5 discriminator 1
 13861 01ec 14301BE5 		ldr	r3, [fp, #-20]
 13862 01f0 FF3803E2 		and	r3, r3, #16711680
 13863 01f4 020853E3 		cmp	r3, #131072
 13864 01f8 0100001A 		bne	.L889
 13865              		.loc 1 5478 5 discriminator 5
 13866 01fc 0830E0E3 		mvn	r3, #8
 13867              		.loc 1 5478 5
 13868 0200 670100EA 		b	.L879
 13869              	.L889:
 13870              		.loc 1 5478 5 discriminator 6
 13871 0204 14301BE5 		ldr	r3, [fp, #-20]
 13872 0208 233CA0E1 		lsr	r3, r3, #24
 13873 020c 060053E3 		cmp	r3, #6
 13874 0210 3F00000A 		beq	.L890
 13875              		.loc 1 5478 5 discriminator 7
 13876 0214 0130E0E3 		mvn	r3, #1
 13877              		.loc 1 5478 5
 13878 0218 610100EA 		b	.L879
 13879              	.L887:
 13880              		.loc 1 5478 5 discriminator 2
 13881 021c 38301BE5 		ldr	r3, [fp, #-56]
 13882 0220 2324A0E1 		lsr	r2, r3, #8
 13883 0224 30301BE5 		ldr	r3, [fp, #-48]
 13884 0228 143093E5 		ldr	r3, [r3, #20]
 13885 022c 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 341


 13886 0230 0100003A 		bcc	.L891
 13887              		.loc 1 5478 5 discriminator 8
 13888 0234 0230E0E3 		mvn	r3, #2
 13889              		.loc 1 5478 5
 13890 0238 590100EA 		b	.L879
 13891              	.L891:
 13892              		.loc 1 5478 5 discriminator 9
 13893 023c 38301BE5 		ldr	r3, [fp, #-56]
 13894 0240 2334A0E1 		lsr	r3, r3, #8
 13895 0244 8322A0E1 		lsl	r2, r3, #5
 13896 0248 30301BE5 		ldr	r3, [fp, #-48]
 13897 024c 0C3093E5 		ldr	r3, [r3, #12]
 13898 0250 033082E0 		add	r3, r2, r3
 13899 0254 0C300BE5 		str	r3, [fp, #-12]
 13900 0258 0C301BE5 		ldr	r3, [fp, #-12]
 13901 025c 0300A0E1 		mov	r0, r3
 13902 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13903 0264 14000BE5 		str	r0, [fp, #-20]
 13904              		.loc 1 5478 5 discriminator 1
 13905 0268 14301BE5 		ldr	r3, [fp, #-20]
 13906 026c FF3803E2 		and	r3, r3, #16711680
 13907 0270 020853E3 		cmp	r3, #131072
 13908 0274 0100001A 		bne	.L892
 13909              		.loc 1 5478 5 discriminator 10
 13910 0278 0830E0E3 		mvn	r3, #8
 13911              		.loc 1 5478 5
 13912 027c 480100EA 		b	.L879
 13913              	.L892:
 13914              		.loc 1 5478 5 discriminator 11
 13915 0280 14301BE5 		ldr	r3, [fp, #-20]
 13916 0284 233CA0E1 		lsr	r3, r3, #24
 13917 0288 030053E3 		cmp	r3, #3
 13918 028c 0100000A 		beq	.L893
 13919              		.loc 1 5478 5 discriminator 12
 13920 0290 0130E0E3 		mvn	r3, #1
 13921              		.loc 1 5478 5
 13922 0294 420100EA 		b	.L879
 13923              	.L893:
 13924              		.loc 1 5478 5 discriminator 13
 13925 0298 38301BE5 		ldr	r3, [fp, #-56]
 13926 029c 7F2003E2 		and	r2, r3, #127
 13927 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 13928 02a4 143093E5 		ldr	r3, [r3, #20]
 13929 02a8 030052E1 		cmp	r2, r3
 13930 02ac 0100003A 		bcc	.L894
 13931              		.loc 1 5478 5 discriminator 14
 13932 02b0 0230E0E3 		mvn	r3, #2
 13933              		.loc 1 5478 5
 13934 02b4 3A0100EA 		b	.L879
 13935              	.L894:
 13936              		.loc 1 5478 5 discriminator 15
 13937 02b8 38301BE5 		ldr	r3, [fp, #-56]
 13938 02bc 7F3003E2 		and	r3, r3, #127
 13939 02c0 8322A0E1 		lsl	r2, r3, #5
 13940 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 13941 02c8 0C3093E5 		ldr	r3, [r3, #12]
 13942 02cc 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 342


 13943 02d0 0C300BE5 		str	r3, [fp, #-12]
 13944 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 13945 02d8 0300A0E1 		mov	r0, r3
 13946 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13947 02e0 14000BE5 		str	r0, [fp, #-20]
 13948              		.loc 1 5478 5 discriminator 1
 13949 02e4 14301BE5 		ldr	r3, [fp, #-20]
 13950 02e8 FF3803E2 		and	r3, r3, #16711680
 13951 02ec 020853E3 		cmp	r3, #131072
 13952 02f0 0100001A 		bne	.L895
 13953              		.loc 1 5478 5 discriminator 16
 13954 02f4 0830E0E3 		mvn	r3, #8
 13955              		.loc 1 5478 5
 13956 02f8 290100EA 		b	.L879
 13957              	.L895:
 13958              		.loc 1 5478 5 discriminator 17
 13959 02fc 14301BE5 		ldr	r3, [fp, #-20]
 13960 0300 233CA0E1 		lsr	r3, r3, #24
 13961 0304 060053E3 		cmp	r3, #6
 13962 0308 0100000A 		beq	.L890
 13963              		.loc 1 5478 5 discriminator 18
 13964 030c 0130E0E3 		mvn	r3, #1
 13965              		.loc 1 5478 5
 13966 0310 230100EA 		b	.L879
 13967              	.L890:
5479:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Sched,Type_Stat);
5480:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5481:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_CHILD);
 13968              		.loc 1 5481 5 is_stmt 1
 13969 0314 08301BE5 		ldr	r3, [fp, #-8]
 13970 0318 083093E5 		ldr	r3, [r3, #8]
 13971 031c 023003E2 		and	r3, r3, #2
 13972 0320 000053E3 		cmp	r3, #0
 13973 0324 0100001A 		bne	.L896
 13974              		.loc 1 5481 5 is_stmt 0 discriminator 1
 13975 0328 0630E0E3 		mvn	r3, #6
 13976              		.loc 1 5481 5
 13977 032c 1C0100EA 		b	.L879
 13978              	.L896:
5482:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Sched,RME_THD_FLAG_SCHED_PARENT);
 13979              		.loc 1 5482 5 is_stmt 1
 13980 0330 0C301BE5 		ldr	r3, [fp, #-12]
 13981 0334 083093E5 		ldr	r3, [r3, #8]
 13982 0338 043003E2 		and	r3, r3, #4
 13983 033c 000053E3 		cmp	r3, #0
 13984 0340 0100001A 		bne	.L897
 13985              		.loc 1 5482 5 is_stmt 0 discriminator 1
 13986 0344 0630E0E3 		mvn	r3, #6
 13987              		.loc 1 5482 5
 13988 0348 150100EA 		b	.L879
 13989              	.L897:
5483:../../Source/Kernel/rme_kernel.c ****     
5484:../../Source/Kernel/rme_kernel.c ****     /* Check if we need the signal endpoint for this operation */
5485:../../Source/Kernel/rme_kernel.c ****     if(Cap_Sig!=RME_CID_NULL)
 13990              		.loc 1 5485 7 is_stmt 1
 13991 034c 3C301BE5 		ldr	r3, [fp, #-60]
 13992 0350 020953E3 		cmp	r3, #32768
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 343


 13993 0354 6500000A 		beq	.L898
5486:../../Source/Kernel/rme_kernel.c ****     {
5487:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5488:../../Source/Kernel/rme_kernel.c **** 
5489:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 13994              		.loc 1 5489 9
 13995 0358 3C301BE5 		ldr	r3, [fp, #-60]
 13996 035c 803003E2 		and	r3, r3, #128
 13997 0360 000053E3 		cmp	r3, #0
 13998 0364 1C00001A 		bne	.L899
 13999              		.loc 1 5489 9 is_stmt 0 discriminator 1
 14000 0368 30301BE5 		ldr	r3, [fp, #-48]
 14001 036c 142093E5 		ldr	r2, [r3, #20]
 14002 0370 3C301BE5 		ldr	r3, [fp, #-60]
 14003 0374 030052E1 		cmp	r2, r3
 14004 0378 0100008A 		bhi	.L900
 14005              		.loc 1 5489 9 discriminator 3
 14006 037c 0230E0E3 		mvn	r3, #2
 14007              		.loc 1 5489 9
 14008 0380 070100EA 		b	.L879
 14009              	.L900:
 14010              		.loc 1 5489 9 discriminator 4
 14011 0384 3C301BE5 		ldr	r3, [fp, #-60]
 14012 0388 8322A0E1 		lsl	r2, r3, #5
 14013 038c 30301BE5 		ldr	r3, [fp, #-48]
 14014 0390 0C3093E5 		ldr	r3, [r3, #12]
 14015 0394 033082E0 		add	r3, r2, r3
 14016 0398 10300BE5 		str	r3, [fp, #-16]
 14017 039c 10301BE5 		ldr	r3, [fp, #-16]
 14018 03a0 0300A0E1 		mov	r0, r3
 14019 03a4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14020 03a8 14000BE5 		str	r0, [fp, #-20]
 14021              		.loc 1 5489 9 discriminator 1
 14022 03ac 14301BE5 		ldr	r3, [fp, #-20]
 14023 03b0 FF3803E2 		and	r3, r3, #16711680
 14024 03b4 020853E3 		cmp	r3, #131072
 14025 03b8 0100001A 		bne	.L901
 14026              		.loc 1 5489 9 discriminator 5
 14027 03bc 0830E0E3 		mvn	r3, #8
 14028              		.loc 1 5489 9
 14029 03c0 F70000EA 		b	.L879
 14030              	.L901:
 14031              		.loc 1 5489 9 discriminator 6
 14032 03c4 14301BE5 		ldr	r3, [fp, #-20]
 14033 03c8 233CA0E1 		lsr	r3, r3, #24
 14034 03cc 080053E3 		cmp	r3, #8
 14035 03d0 3F00000A 		beq	.L902
 14036              		.loc 1 5489 9 discriminator 7
 14037 03d4 0130E0E3 		mvn	r3, #1
 14038              		.loc 1 5489 9
 14039 03d8 F10000EA 		b	.L879
 14040              	.L899:
 14041              		.loc 1 5489 9 discriminator 2
 14042 03dc 3C301BE5 		ldr	r3, [fp, #-60]
 14043 03e0 2324A0E1 		lsr	r2, r3, #8
 14044 03e4 30301BE5 		ldr	r3, [fp, #-48]
 14045 03e8 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 344


 14046 03ec 030052E1 		cmp	r2, r3
 14047 03f0 0100003A 		bcc	.L903
 14048              		.loc 1 5489 9 discriminator 8
 14049 03f4 0230E0E3 		mvn	r3, #2
 14050              		.loc 1 5489 9
 14051 03f8 E90000EA 		b	.L879
 14052              	.L903:
 14053              		.loc 1 5489 9 discriminator 9
 14054 03fc 3C301BE5 		ldr	r3, [fp, #-60]
 14055 0400 2334A0E1 		lsr	r3, r3, #8
 14056 0404 8322A0E1 		lsl	r2, r3, #5
 14057 0408 30301BE5 		ldr	r3, [fp, #-48]
 14058 040c 0C3093E5 		ldr	r3, [r3, #12]
 14059 0410 033082E0 		add	r3, r2, r3
 14060 0414 10300BE5 		str	r3, [fp, #-16]
 14061 0418 10301BE5 		ldr	r3, [fp, #-16]
 14062 041c 0300A0E1 		mov	r0, r3
 14063 0420 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14064 0424 14000BE5 		str	r0, [fp, #-20]
 14065              		.loc 1 5489 9 discriminator 1
 14066 0428 14301BE5 		ldr	r3, [fp, #-20]
 14067 042c FF3803E2 		and	r3, r3, #16711680
 14068 0430 020853E3 		cmp	r3, #131072
 14069 0434 0100001A 		bne	.L904
 14070              		.loc 1 5489 9 discriminator 10
 14071 0438 0830E0E3 		mvn	r3, #8
 14072              		.loc 1 5489 9
 14073 043c D80000EA 		b	.L879
 14074              	.L904:
 14075              		.loc 1 5489 9 discriminator 11
 14076 0440 14301BE5 		ldr	r3, [fp, #-20]
 14077 0444 233CA0E1 		lsr	r3, r3, #24
 14078 0448 030053E3 		cmp	r3, #3
 14079 044c 0100000A 		beq	.L905
 14080              		.loc 1 5489 9 discriminator 12
 14081 0450 0130E0E3 		mvn	r3, #1
 14082              		.loc 1 5489 9
 14083 0454 D20000EA 		b	.L879
 14084              	.L905:
 14085              		.loc 1 5489 9 discriminator 13
 14086 0458 3C301BE5 		ldr	r3, [fp, #-60]
 14087 045c 7F2003E2 		and	r2, r3, #127
 14088 0460 10301BE5 		ldr	r3, [fp, #-16]
 14089 0464 143093E5 		ldr	r3, [r3, #20]
 14090 0468 030052E1 		cmp	r2, r3
 14091 046c 0100003A 		bcc	.L906
 14092              		.loc 1 5489 9 discriminator 14
 14093 0470 0230E0E3 		mvn	r3, #2
 14094              		.loc 1 5489 9
 14095 0474 CA0000EA 		b	.L879
 14096              	.L906:
 14097              		.loc 1 5489 9 discriminator 15
 14098 0478 3C301BE5 		ldr	r3, [fp, #-60]
 14099 047c 7F3003E2 		and	r3, r3, #127
 14100 0480 8322A0E1 		lsl	r2, r3, #5
 14101 0484 10301BE5 		ldr	r3, [fp, #-16]
 14102 0488 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 345


 14103 048c 033082E0 		add	r3, r2, r3
 14104 0490 10300BE5 		str	r3, [fp, #-16]
 14105 0494 10301BE5 		ldr	r3, [fp, #-16]
 14106 0498 0300A0E1 		mov	r0, r3
 14107 049c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14108 04a0 14000BE5 		str	r0, [fp, #-20]
 14109              		.loc 1 5489 9 discriminator 1
 14110 04a4 14301BE5 		ldr	r3, [fp, #-20]
 14111 04a8 FF3803E2 		and	r3, r3, #16711680
 14112 04ac 020853E3 		cmp	r3, #131072
 14113 04b0 0100001A 		bne	.L907
 14114              		.loc 1 5489 9 discriminator 16
 14115 04b4 0830E0E3 		mvn	r3, #8
 14116              		.loc 1 5489 9
 14117 04b8 B90000EA 		b	.L879
 14118              	.L907:
 14119              		.loc 1 5489 9 discriminator 17
 14120 04bc 14301BE5 		ldr	r3, [fp, #-20]
 14121 04c0 233CA0E1 		lsr	r3, r3, #24
 14122 04c4 080053E3 		cmp	r3, #8
 14123 04c8 0100000A 		beq	.L902
 14124              		.loc 1 5489 9 discriminator 18
 14125 04cc 0130E0E3 		mvn	r3, #1
 14126              		.loc 1 5489 9
 14127 04d0 B30000EA 		b	.L879
 14128              	.L902:
5490:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Sig*,Sig_Op,Type_Stat);
5491:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SCHED);
 14129              		.loc 1 5491 9 is_stmt 1
 14130 04d4 10301BE5 		ldr	r3, [fp, #-16]
 14131 04d8 083093E5 		ldr	r3, [r3, #8]
 14132 04dc 203003E2 		and	r3, r3, #32
 14133 04e0 000053E3 		cmp	r3, #0
 14134 04e4 0300001A 		bne	.L908
 14135              		.loc 1 5491 9 is_stmt 0 discriminator 1
 14136 04e8 0630E0E3 		mvn	r3, #6
 14137              		.loc 1 5491 9
 14138 04ec AC0000EA 		b	.L879
 14139              	.L898:
5492:../../Source/Kernel/rme_kernel.c ****     }
5493:../../Source/Kernel/rme_kernel.c ****     else
5494:../../Source/Kernel/rme_kernel.c ****     {
5495:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5496:../../Source/Kernel/rme_kernel.c **** 
5497:../../Source/Kernel/rme_kernel.c ****         Sig_Op=RME_NULL;
 14140              		.loc 1 5497 15 is_stmt 1
 14141 04f0 0030A0E3 		mov	r3, #0
 14142 04f4 10300BE5 		str	r3, [fp, #-16]
 14143              	.L908:
5498:../../Source/Kernel/rme_kernel.c ****     }
5499:../../Source/Kernel/rme_kernel.c **** 
5500:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound. If yes, we just quit */
5501:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 14144              		.loc 1 5501 12
 14145 04f8 08301BE5 		ldr	r3, [fp, #-8]
 14146 04fc 0C3093E5 		ldr	r3, [r3, #12]
 14147              		.loc 1 5501 11
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 346


 14148 0500 18300BE5 		str	r3, [fp, #-24]
5502:../../Source/Kernel/rme_kernel.c ****     Local_Old=Thread->Sched.Local;
 14149              		.loc 1 5502 14
 14150 0504 18301BE5 		ldr	r3, [fp, #-24]
 14151 0508 143093E5 		ldr	r3, [r3, #20]
 14152 050c 1C300BE5 		str	r3, [fp, #-28]
5503:../../Source/Kernel/rme_kernel.c ****     if(Local_Old!=RME_THD_FREE)
 14153              		.loc 1 5503 7
 14154 0510 1C301BE5 		ldr	r3, [fp, #-28]
 14155 0514 010073E3 		cmn	r3, #1
 14156 0518 0100000A 		beq	.L909
5504:../../Source/Kernel/rme_kernel.c ****     {
5505:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5506:../../Source/Kernel/rme_kernel.c **** 
5507:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14157              		.loc 1 5507 16
 14158 051c CB30E0E3 		mvn	r3, #203
 14159 0520 9F0000EA 		b	.L879
 14160              	.L909:
5508:../../Source/Kernel/rme_kernel.c ****     }
5509:../../Source/Kernel/rme_kernel.c ****     else
5510:../../Source/Kernel/rme_kernel.c ****     {
5511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5512:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5513:../../Source/Kernel/rme_kernel.c ****     }
5514:../../Source/Kernel/rme_kernel.c ****     
5515:../../Source/Kernel/rme_kernel.c ****     /* See if the parent thread is on the same core with the current processor */
5516:../../Source/Kernel/rme_kernel.c ****     Local_New=RME_CPU_LOCAL();
 14161              		.loc 1 5516 14
 14162 0524 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14163 0528 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14164 052c 20300BE5 		str	r3, [fp, #-32]
5517:../../Source/Kernel/rme_kernel.c ****     Scheduler=RME_CAP_GETOBJ(Thd_Sched,struct RME_Thd_Struct*);
 14165              		.loc 1 5517 15
 14166 0530 0C301BE5 		ldr	r3, [fp, #-12]
 14167 0534 0C3093E5 		ldr	r3, [r3, #12]
 14168              		.loc 1 5517 14
 14169 0538 24300BE5 		str	r3, [fp, #-36]
5518:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=Local_New)
 14170              		.loc 1 5518 24
 14171 053c 24301BE5 		ldr	r3, [fp, #-36]
 14172 0540 143093E5 		ldr	r3, [r3, #20]
 14173              		.loc 1 5518 7
 14174 0544 20201BE5 		ldr	r2, [fp, #-32]
 14175 0548 030052E1 		cmp	r2, r3
 14176 054c 0100000A 		beq	.L910
5519:../../Source/Kernel/rme_kernel.c ****     {
5520:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5521:../../Source/Kernel/rme_kernel.c **** 
5522:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14177              		.loc 1 5522 16
 14178 0550 CB30E0E3 		mvn	r3, #203
 14179 0554 920000EA 		b	.L879
 14180              	.L910:
5523:../../Source/Kernel/rme_kernel.c ****     }
5524:../../Source/Kernel/rme_kernel.c ****     else
5525:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 347


5526:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5527:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5528:../../Source/Kernel/rme_kernel.c ****     }
5529:../../Source/Kernel/rme_kernel.c **** 
5530:../../Source/Kernel/rme_kernel.c ****     /* See if we are trying to bind to ourself - prohibited */
5531:../../Source/Kernel/rme_kernel.c ****     if(Thread==Scheduler)
 14181              		.loc 1 5531 7
 14182 0558 18201BE5 		ldr	r2, [fp, #-24]
 14183 055c 24301BE5 		ldr	r3, [fp, #-36]
 14184 0560 030052E1 		cmp	r2, r3
 14185 0564 0100001A 		bne	.L911
5532:../../Source/Kernel/rme_kernel.c ****     {
5533:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5534:../../Source/Kernel/rme_kernel.c **** 
5535:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 14186              		.loc 1 5535 16
 14187 0568 CE30E0E3 		mvn	r3, #206
 14188 056c 8C0000EA 		b	.L879
 14189              	.L911:
5536:../../Source/Kernel/rme_kernel.c ****     }
5537:../../Source/Kernel/rme_kernel.c ****     else
5538:../../Source/Kernel/rme_kernel.c ****     {
5539:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5540:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5541:../../Source/Kernel/rme_kernel.c ****     }
5542:../../Source/Kernel/rme_kernel.c ****     
5543:../../Source/Kernel/rme_kernel.c ****     /* See if the priority relationship is correct */
5544:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Prio_Max<Prio)
 14190              		.loc 1 5544 24
 14191 0570 24301BE5 		ldr	r3, [fp, #-36]
 14192 0574 243093E5 		ldr	r3, [r3, #36]
 14193              		.loc 1 5544 7
 14194 0578 08209BE5 		ldr	r2, [fp, #8]
 14195 057c 030052E1 		cmp	r2, r3
 14196 0580 0100009A 		bls	.L912
5545:../../Source/Kernel/rme_kernel.c ****     {
5546:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5547:../../Source/Kernel/rme_kernel.c **** 
5548:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 14197              		.loc 1 5548 16
 14198 0584 CC30E0E3 		mvn	r3, #204
 14199 0588 850000EA 		b	.L879
 14200              	.L912:
5549:../../Source/Kernel/rme_kernel.c ****     }
5550:../../Source/Kernel/rme_kernel.c ****     else
5551:../../Source/Kernel/rme_kernel.c ****     {
5552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5553:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5554:../../Source/Kernel/rme_kernel.c ****     }
5555:../../Source/Kernel/rme_kernel.c ****     
5556:../../Source/Kernel/rme_kernel.c ****     /* Check whether the coprocessor context attribute is compatible with this core */
5557:../../Source/Kernel/rme_kernel.c ****     Hyp_Attr=Thread->Ctx.Hyp_Attr;
 14201              		.loc 1 5557 13
 14202 058c 18301BE5 		ldr	r3, [fp, #-24]
 14203 0590 443093E5 		ldr	r3, [r3, #68]
 14204 0594 28300BE5 		str	r3, [fp, #-40]
5558:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 348


5559:../../Source/Kernel/rme_kernel.c ****     if(__RME_Thd_Cop_Check(RME_THD_ATTR(Hyp_Attr))<0)
5560:../../Source/Kernel/rme_kernel.c ****     {
5561:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5562:../../Source/Kernel/rme_kernel.c **** 
5563:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
5564:../../Source/Kernel/rme_kernel.c ****     }
5565:../../Source/Kernel/rme_kernel.c **** #else
5566:../../Source/Kernel/rme_kernel.c ****     if(RME_THD_ATTR(Hyp_Attr)!=0U)
 14205              		.loc 1 5566 8
 14206 0598 28301BE5 		ldr	r3, [fp, #-40]
 14207 059c 0231C3E3 		bic	r3, r3, #-2147483648
 14208              		.loc 1 5566 7
 14209 05a0 000053E3 		cmp	r3, #0
 14210 05a4 0100000A 		beq	.L913
5567:../../Source/Kernel/rme_kernel.c ****     {
5568:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5569:../../Source/Kernel/rme_kernel.c **** 
5570:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 14211              		.loc 1 5570 16
 14212 05a8 0630E0E3 		mvn	r3, #6
 14213 05ac 7C0000EA 		b	.L879
 14214              	.L913:
5571:../../Source/Kernel/rme_kernel.c ****     }
5572:../../Source/Kernel/rme_kernel.c **** #endif
5573:../../Source/Kernel/rme_kernel.c ****     else
5574:../../Source/Kernel/rme_kernel.c ****     {
5575:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5576:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5577:../../Source/Kernel/rme_kernel.c ****     }
5578:../../Source/Kernel/rme_kernel.c **** 
5579:../../Source/Kernel/rme_kernel.c ****     /* Check the hypervisor context buffer passed in to see whether it is good */
5580:../../Source/Kernel/rme_kernel.c ****     if((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U))
 14215              		.loc 1 5580 7
 14216 05b0 0C309BE5 		ldr	r3, [fp, #12]
 14217 05b4 000053E3 		cmp	r3, #0
 14218 05b8 2000000A 		beq	.L914
 14219              		.loc 1 5580 55 discriminator 1
 14220 05bc 28301BE5 		ldr	r3, [fp, #-40]
 14221              		.loc 1 5580 25 discriminator 1
 14222 05c0 000053E3 		cmp	r3, #0
 14223 05c4 1D0000AA 		bge	.L914
5581:../../Source/Kernel/rme_kernel.c ****     {
5582:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5583:../../Source/Kernel/rme_kernel.c ****         
5584:../../Source/Kernel/rme_kernel.c ****         /* Register save area must be aligned to word boundary */
5585:../../Source/Kernel/rme_kernel.c ****         if(RME_IS_ALIGNED(Haddr)!=0U)
 14224              		.loc 1 5585 12
 14225 05c8 0C309BE5 		ldr	r3, [fp, #12]
 14226 05cc 033003E2 		and	r3, r3, #3
 14227              		.loc 1 5585 33
 14228 05d0 000053E3 		cmp	r3, #0
 14229 05d4 0100001A 		bne	.L915
 14230              		.loc 1 5585 33 is_stmt 0 discriminator 1
 14231 05d8 0130A0E3 		mov	r3, #1
 14232 05dc 000000EA 		b	.L916
 14233              	.L915:
 14234              		.loc 1 5585 33 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 349


 14235 05e0 0030A0E3 		mov	r3, #0
 14236              	.L916:
 14237              		.loc 1 5585 11 is_stmt 1 discriminator 4
 14238 05e4 000053E3 		cmp	r3, #0
 14239 05e8 1200000A 		beq	.L917
5586:../../Source/Kernel/rme_kernel.c ****         {
5587:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5588:../../Source/Kernel/rme_kernel.c ****             
5589:../../Source/Kernel/rme_kernel.c ****             /* It needs to be safely accessible to the kernel as well */
5590:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5591:../../Source/Kernel/rme_kernel.c ****             if(Haddr<RME_HYP_VA_BASE)
 14240              		.loc 1 5591 15
 14241 05ec 0C309BE5 		ldr	r3, [fp, #12]
 14242 05f0 1E0273E3 		cmn	r3, #-536870911
 14243 05f4 0100008A 		bhi	.L918
5592:../../Source/Kernel/rme_kernel.c ****             {
5593:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
5594:../../Source/Kernel/rme_kernel.c **** 
5595:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PTH_HADDR;
 14244              		.loc 1 5595 24
 14245 05f8 CA30E0E3 		mvn	r3, #202
 14246 05fc 680000EA 		b	.L879
 14247              	.L918:
5596:../../Source/Kernel/rme_kernel.c ****             }
5597:../../Source/Kernel/rme_kernel.c ****             else
5598:../../Source/Kernel/rme_kernel.c ****             {
5599:../../Source/Kernel/rme_kernel.c **** #endif
5600:../../Source/Kernel/rme_kernel.c ****                 End=Haddr+RME_REG_SIZE(RME_THD_ATTR(Thread->Ctx.Hyp_Attr));
 14248              		.loc 1 5600 20
 14249 0600 0C309BE5 		ldr	r3, [fp, #12]
 14250 0604 443083E2 		add	r3, r3, #68
 14251 0608 2C300BE5 		str	r3, [fp, #-44]
5601:../../Source/Kernel/rme_kernel.c ****                 if((End<=Haddr)||(End>(RME_HYP_VA_BASE+RME_HYP_VA_SIZE)))
 14252              		.loc 1 5601 19
 14253 060c 2C201BE5 		ldr	r2, [fp, #-44]
 14254 0610 0C309BE5 		ldr	r3, [fp, #12]
 14255 0614 030052E1 		cmp	r2, r3
 14256 0618 0400009A 		bls	.L919
 14257              		.loc 1 5601 32 discriminator 1
 14258 061c 2C201BE5 		ldr	r2, [fp, #-44]
 14259 0620 0030A0E3 		mov	r3, #0
 14260 0624 023042E3 		movt	r3, 8194
 14261 0628 030052E1 		cmp	r2, r3
 14262 062c 1100009A 		bls	.L932
 14263              	.L919:
5602:../../Source/Kernel/rme_kernel.c ****                 {
5603:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5604:../../Source/Kernel/rme_kernel.c **** 
5605:../../Source/Kernel/rme_kernel.c ****                     return RME_ERR_PTH_HADDR;
 14264              		.loc 1 5605 28
 14265 0630 CA30E0E3 		mvn	r3, #202
 14266 0634 5A0000EA 		b	.L879
 14267              	.L917:
5606:../../Source/Kernel/rme_kernel.c ****                 }
5607:../../Source/Kernel/rme_kernel.c ****                 else
5608:../../Source/Kernel/rme_kernel.c ****                 {
5609:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 350


5610:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
5611:../../Source/Kernel/rme_kernel.c ****                 }
5612:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5613:../../Source/Kernel/rme_kernel.c ****             }
5614:../../Source/Kernel/rme_kernel.c **** #endif
5615:../../Source/Kernel/rme_kernel.c ****         }
5616:../../Source/Kernel/rme_kernel.c ****         /* Not aligned, exiting */
5617:../../Source/Kernel/rme_kernel.c ****         else
5618:../../Source/Kernel/rme_kernel.c ****         {
5619:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5620:../../Source/Kernel/rme_kernel.c **** 
5621:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_HADDR;
 14268              		.loc 1 5621 20
 14269 0638 CA30E0E3 		mvn	r3, #202
 14270 063c 580000EA 		b	.L879
 14271              	.L914:
5622:../../Source/Kernel/rme_kernel.c ****         }
5623:../../Source/Kernel/rme_kernel.c ****     }
5624:../../Source/Kernel/rme_kernel.c ****     /* We don't allow setting HYP addr for normal threads, nor do we allow
5625:../../Source/Kernel/rme_kernel.c ****      * setting HYP addr to NULL for hypervisor-managed threads. */
5626:../../Source/Kernel/rme_kernel.c ****     else if(((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)==0U))||
 14272              		.loc 1 5626 12
 14273 0640 0C309BE5 		ldr	r3, [fp, #12]
 14274 0644 000053E3 		cmp	r3, #0
 14275 0648 0200000A 		beq	.L922
 14276              		.loc 1 5626 61 discriminator 1
 14277 064c 28301BE5 		ldr	r3, [fp, #-40]
 14278              		.loc 1 5626 31 discriminator 1
 14279 0650 000053E3 		cmp	r3, #0
 14280 0654 050000AA 		bge	.L923
 14281              	.L922:
 14282              		.loc 1 5626 67 discriminator 3
 14283 0658 0C309BE5 		ldr	r3, [fp, #12]
 14284 065c 000053E3 		cmp	r3, #0
 14285 0660 0500001A 		bne	.L921
5627:../../Source/Kernel/rme_kernel.c ****             ((Haddr==RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U)))
 14286              		.loc 1 5627 61
 14287 0664 28301BE5 		ldr	r3, [fp, #-40]
 14288              		.loc 1 5627 31
 14289 0668 000053E3 		cmp	r3, #0
 14290 066c 020000AA 		bge	.L921
 14291              	.L923:
5628:../../Source/Kernel/rme_kernel.c ****     {
5629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5630:../../Source/Kernel/rme_kernel.c **** 
5631:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
 14292              		.loc 1 5631 16
 14293 0670 CA30E0E3 		mvn	r3, #202
 14294 0674 4A0000EA 		b	.L879
 14295              	.L932:
5585:../../Source/Kernel/rme_kernel.c ****         {
 14296              		.loc 1 5585 11
 14297 0678 00F020E3 		nop
 14298              	.L921:
5632:../../Source/Kernel/rme_kernel.c ****     }
5633:../../Source/Kernel/rme_kernel.c ****     else
5634:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 351


5635:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5636:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5637:../../Source/Kernel/rme_kernel.c ****     }
5638:../../Source/Kernel/rme_kernel.c **** 
5639:../../Source/Kernel/rme_kernel.c ****     /* Try to bind the thread */
5640:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)&(Thread->Sched.Local),
 14299              		.loc 1 5640 8
 14300 067c 18301BE5 		ldr	r3, [fp, #-24]
 14301 0680 143083E2 		add	r3, r3, #20
 14302 0684 1C101BE5 		ldr	r1, [fp, #-28]
 14303 0688 20201BE5 		ldr	r2, [fp, #-32]
 14304 068c 0300A0E1 		mov	r0, r3
 14305 0690 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 14306 0694 0030A0E1 		mov	r3, r0
 14307              		.loc 1 5640 7 discriminator 1
 14308 0698 000053E3 		cmp	r3, #0
 14309 069c 0100001A 		bne	.L924
5641:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_Old,
5642:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_New)==RME_CASFAIL)
5643:../../Source/Kernel/rme_kernel.c ****     {
5644:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5645:../../Source/Kernel/rme_kernel.c **** 
5646:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 14310              		.loc 1 5646 16
 14311 06a0 C930E0E3 		mvn	r3, #201
 14312 06a4 3E0000EA 		b	.L879
 14313              	.L924:
5647:../../Source/Kernel/rme_kernel.c ****     }
5648:../../Source/Kernel/rme_kernel.c ****     else
5649:../../Source/Kernel/rme_kernel.c ****     {
5650:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5651:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5652:../../Source/Kernel/rme_kernel.c ****     }
5653:../../Source/Kernel/rme_kernel.c ****     
5654:../../Source/Kernel/rme_kernel.c ****     /* Increase the reference count of the scheduler thread struct - same core */
5655:../../Source/Kernel/rme_kernel.c ****     Scheduler->Sched.Sched_Ref++;
 14314              		.loc 1 5655 21
 14315 06a8 24301BE5 		ldr	r3, [fp, #-36]
 14316 06ac 303093E5 		ldr	r3, [r3, #48]
 14317              		.loc 1 5655 31
 14318 06b0 012083E2 		add	r2, r3, #1
 14319 06b4 24301BE5 		ldr	r3, [fp, #-36]
 14320 06b8 302083E5 		str	r2, [r3, #48]
5656:../../Source/Kernel/rme_kernel.c ****     
5657:../../Source/Kernel/rme_kernel.c ****     /* Bind successful and finish the work off. No need to worry about other cores'
5658:../../Source/Kernel/rme_kernel.c ****      * operations on this thread because this thread is already bound to this core.
5659:../../Source/Kernel/rme_kernel.c ****      * TID is half-word parameter-wise, but is stored and returned as a full word. */
5660:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd=Scheduler;
 14321              		.loc 1 5660 28
 14322 06bc 18301BE5 		ldr	r3, [fp, #-24]
 14323 06c0 24201BE5 		ldr	r2, [fp, #-36]
 14324 06c4 342083E5 		str	r2, [r3, #52]
5661:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 14325              		.loc 1 5661 23
 14326 06c8 18301BE5 		ldr	r3, [fp, #-24]
 14327 06cc 08209BE5 		ldr	r2, [fp, #8]
 14328 06d0 202083E5 		str	r2, [r3, #32]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 352


5662:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=(rme_ptr_t)TID;
 14329              		.loc 1 5662 23
 14330 06d4 04209BE5 		ldr	r2, [fp, #4]
 14331              		.loc 1 5662 22
 14332 06d8 18301BE5 		ldr	r3, [fp, #-24]
 14333 06dc 102083E5 		str	r2, [r3, #16]
5663:../../Source/Kernel/rme_kernel.c ****     
5664:../../Source/Kernel/rme_kernel.c ****     /* The state must be TIMEOUT or EXCPEND at this point */
5665:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT((Thread->Sched.State==RME_THD_TIMEOUT)||
 14334              		.loc 1 5665 5
 14335 06e0 18301BE5 		ldr	r3, [fp, #-24]
 14336 06e4 1C3093E5 		ldr	r3, [r3, #28]
 14337 06e8 020053E3 		cmp	r3, #2
 14338 06ec 0C00000A 		beq	.L925
 14339              		.loc 1 5665 5 is_stmt 0 discriminator 1
 14340 06f0 18301BE5 		ldr	r3, [fp, #-24]
 14341 06f4 1C3093E5 		ldr	r3, [r3, #28]
 14342 06f8 030053E3 		cmp	r3, #3
 14343 06fc 0800000A 		beq	.L925
 14344              		.loc 1 5665 5 discriminator 2
 14345 0700 003000E3 		movw	r3, #:lower16:.LC6
 14346 0704 003040E3 		movt	r3, #:upper16:.LC6
 14347 0708 002000E3 		movw	r2, #:lower16:.LC7
 14348 070c 002040E3 		movt	r2, #:upper16:.LC7
 14349 0710 211601E3 		movw	r1, #5665
 14350 0714 000000E3 		movw	r0, #:lower16:.LC8
 14351 0718 000040E3 		movt	r0, #:upper16:.LC8
 14352 071c FEFFFFEB 		bl	RME_Log
 14353              	.L926:
 14354              		.loc 1 5665 5
 14355 0720 FEFFFFEA 		b	.L926
 14356              	.L925:
5666:../../Source/Kernel/rme_kernel.c ****                (Thread->Sched.State==RME_THD_EXCPEND));
5667:../../Source/Kernel/rme_kernel.c **** 
5668:../../Source/Kernel/rme_kernel.c ****     /* Tie the signal endpoint to it if not zero */
5669:../../Source/Kernel/rme_kernel.c ****     if(Sig_Op==0U)
 14357              		.loc 1 5669 7 is_stmt 1
 14358 0724 10301BE5 		ldr	r3, [fp, #-16]
 14359 0728 000053E3 		cmp	r3, #0
 14360 072c 0300001A 		bne	.L927
5670:../../Source/Kernel/rme_kernel.c ****     {
5671:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5672:../../Source/Kernel/rme_kernel.c **** 
5673:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=0U;
 14361              		.loc 1 5673 32
 14362 0730 18301BE5 		ldr	r3, [fp, #-24]
 14363 0734 0020A0E3 		mov	r2, #0
 14364 0738 382083E5 		str	r2, [r3, #56]
 14365 073c 100000EA 		b	.L928
 14366              	.L927:
5674:../../Source/Kernel/rme_kernel.c ****     }
5675:../../Source/Kernel/rme_kernel.c ****     else
5676:../../Source/Kernel/rme_kernel.c ****     {
5677:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5678:../../Source/Kernel/rme_kernel.c **** 
5679:../../Source/Kernel/rme_kernel.c ****         /* Convert to root cap */
5680:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 353


 14367              		.loc 1 5680 33
 14368 0740 10301BE5 		ldr	r3, [fp, #-16]
 14369 0744 003093E5 		ldr	r3, [r3]
 14370 0748 7330FFE6 		uxth	r3, r3
 14371 074c 000053E3 		cmp	r3, #0
 14372 0750 0200000A 		beq	.L929
 14373              		.loc 1 5680 33 is_stmt 0 discriminator 1
 14374 0754 10301BE5 		ldr	r3, [fp, #-16]
 14375 0758 043093E5 		ldr	r3, [r3, #4]
 14376 075c 000000EA 		b	.L930
 14377              	.L929:
 14378              		.loc 1 5680 33 discriminator 2
 14379 0760 10301BE5 		ldr	r3, [fp, #-16]
 14380              	.L930:
 14381              		.loc 1 5680 32 is_stmt 1 discriminator 4
 14382 0764 18201BE5 		ldr	r2, [fp, #-24]
 14383 0768 383082E5 		str	r3, [r2, #56]
5681:../../Source/Kernel/rme_kernel.c ****         
5682:../../Source/Kernel/rme_kernel.c ****         /* Increase refcnt */
5683:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),1U);
 14384              		.loc 1 5683 9
 14385 076c 18301BE5 		ldr	r3, [fp, #-24]
 14386 0770 383093E5 		ldr	r3, [r3, #56]
 14387 0774 043083E2 		add	r3, r3, #4
 14388 0778 0110A0E3 		mov	r1, #1
 14389 077c 0300A0E1 		mov	r0, r3
 14390 0780 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14391              	.L928:
5684:../../Source/Kernel/rme_kernel.c ****     }
5685:../../Source/Kernel/rme_kernel.c ****     
5686:../../Source/Kernel/rme_kernel.c ****     /* Set hypervisor context address if we're hypervisor-managed */
5687:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)!=0U)
 14392              		.loc 1 5687 20
 14393 0784 18301BE5 		ldr	r3, [fp, #-24]
 14394 0788 443093E5 		ldr	r3, [r3, #68]
 14395              		.loc 1 5687 7
 14396 078c 000053E3 		cmp	r3, #0
 14397 0790 020000AA 		bge	.L931
5688:../../Source/Kernel/rme_kernel.c ****     {
5689:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5690:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)Haddr;
 14398              		.loc 1 5690 25
 14399 0794 0C209BE5 		ldr	r2, [fp, #12]
 14400              		.loc 1 5690 24
 14401 0798 18301BE5 		ldr	r3, [fp, #-24]
 14402 079c 482083E5 		str	r2, [r3, #72]
 14403              	.L931:
5691:../../Source/Kernel/rme_kernel.c ****     }
5692:../../Source/Kernel/rme_kernel.c ****     else
5693:../../Source/Kernel/rme_kernel.c ****     {
5694:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5695:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5696:../../Source/Kernel/rme_kernel.c ****     }
5697:../../Source/Kernel/rme_kernel.c ****     
5698:../../Source/Kernel/rme_kernel.c ****     return 0;
 14404              		.loc 1 5698 12
 14405 07a0 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 354


 14406              	.L879:
5699:../../Source/Kernel/rme_kernel.c **** }
 14407              		.loc 1 5699 1
 14408 07a4 0300A0E1 		mov	r0, r3
 14409 07a8 04D04BE2 		sub	sp, fp, #4
 14410              		.cfi_def_cfa 13, 8
 14411              		@ sp needed
 14412 07ac 0088BDE8 		pop	{fp, pc}
 14413              		.cfi_endproc
 14414              	.LFE58:
 14416              		.section	.text._RME_Thd_Sched_Free,"ax",%progbits
 14417              		.align	2
 14418              		.syntax unified
 14419              		.arm
 14421              	_RME_Thd_Sched_Free:
 14422              	.LFB59:
5700:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Bind ******************************************/
5701:../../Source/Kernel/rme_kernel.c **** 
5702:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Free ***********************************************
5703:../../Source/Kernel/rme_kernel.c **** Description : Free a thread from its current processor binding. This function
5704:../../Source/Kernel/rme_kernel.c ****               can only be executed from the same core on with the thread.
5705:../../Source/Kernel/rme_kernel.c ****               To free a thread from a core, it must not be the scheduler of
5706:../../Source/Kernel/rme_kernel.c ****               someone else. It could have pending scheduler notifications to
5707:../../Source/Kernel/rme_kernel.c ****               its parent though.
5708:../../Source/Kernel/rme_kernel.c ****               This system call can cause a potential context switch.
5709:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5710:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
5711:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5712:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5713:../../Source/Kernel/rme_kernel.c **** Output      : None.
5714:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5715:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5716:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Free(struct RME_Cap_Cpt* Cpt, 
5717:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5718:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd)
5719:../../Source/Kernel/rme_kernel.c **** {
 14423              		.loc 1 5719 1
 14424              		.cfi_startproc
 14425              		@ args = 0, pretend = 0, frame = 32
 14426              		@ frame_needed = 1, uses_anonymous_args = 0
 14427 0000 00482DE9 		push	{fp, lr}
 14428              		.cfi_def_cfa_offset 8
 14429              		.cfi_offset 11, -8
 14430              		.cfi_offset 14, -4
 14431 0004 04B08DE2 		add	fp, sp, #4
 14432              		.cfi_def_cfa 11, 4
 14433 0008 20D04DE2 		sub	sp, sp, #32
 14434 000c 18000BE5 		str	r0, [fp, #-24]
 14435 0010 1C100BE5 		str	r1, [fp, #-28]
 14436 0014 20200BE5 		str	r2, [fp, #-32]
5720:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5721:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5722:../../Source/Kernel/rme_kernel.c ****     /* These are used to free the thread */
5723:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5724:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5725:../../Source/Kernel/rme_kernel.c ****     
5726:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 355


5727:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14437              		.loc 1 5727 5
 14438 0018 20301BE5 		ldr	r3, [fp, #-32]
 14439 001c 803003E2 		and	r3, r3, #128
 14440 0020 000053E3 		cmp	r3, #0
 14441 0024 1C00001A 		bne	.L934
 14442              		.loc 1 5727 5 is_stmt 0 discriminator 1
 14443 0028 18301BE5 		ldr	r3, [fp, #-24]
 14444 002c 142093E5 		ldr	r2, [r3, #20]
 14445 0030 20301BE5 		ldr	r3, [fp, #-32]
 14446 0034 030052E1 		cmp	r2, r3
 14447 0038 0100008A 		bhi	.L935
 14448              		.loc 1 5727 5 discriminator 3
 14449 003c 0230E0E3 		mvn	r3, #2
 14450              		.loc 1 5727 5
 14451 0040 D90000EA 		b	.L936
 14452              	.L935:
 14453              		.loc 1 5727 5 discriminator 4
 14454 0044 20301BE5 		ldr	r3, [fp, #-32]
 14455 0048 8322A0E1 		lsl	r2, r3, #5
 14456 004c 18301BE5 		ldr	r3, [fp, #-24]
 14457 0050 0C3093E5 		ldr	r3, [r3, #12]
 14458 0054 033082E0 		add	r3, r2, r3
 14459 0058 08300BE5 		str	r3, [fp, #-8]
 14460 005c 08301BE5 		ldr	r3, [fp, #-8]
 14461 0060 0300A0E1 		mov	r0, r3
 14462 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14463 0068 0C000BE5 		str	r0, [fp, #-12]
 14464              		.loc 1 5727 5 discriminator 1
 14465 006c 0C301BE5 		ldr	r3, [fp, #-12]
 14466 0070 FF3803E2 		and	r3, r3, #16711680
 14467 0074 020853E3 		cmp	r3, #131072
 14468 0078 0100001A 		bne	.L937
 14469              		.loc 1 5727 5 discriminator 5
 14470 007c 0830E0E3 		mvn	r3, #8
 14471              		.loc 1 5727 5
 14472 0080 C90000EA 		b	.L936
 14473              	.L937:
 14474              		.loc 1 5727 5 discriminator 6
 14475 0084 0C301BE5 		ldr	r3, [fp, #-12]
 14476 0088 233CA0E1 		lsr	r3, r3, #24
 14477 008c 060053E3 		cmp	r3, #6
 14478 0090 3F00000A 		beq	.L938
 14479              		.loc 1 5727 5 discriminator 7
 14480 0094 0130E0E3 		mvn	r3, #1
 14481              		.loc 1 5727 5
 14482 0098 C30000EA 		b	.L936
 14483              	.L934:
 14484              		.loc 1 5727 5 discriminator 2
 14485 009c 20301BE5 		ldr	r3, [fp, #-32]
 14486 00a0 2324A0E1 		lsr	r2, r3, #8
 14487 00a4 18301BE5 		ldr	r3, [fp, #-24]
 14488 00a8 143093E5 		ldr	r3, [r3, #20]
 14489 00ac 030052E1 		cmp	r2, r3
 14490 00b0 0100003A 		bcc	.L939
 14491              		.loc 1 5727 5 discriminator 8
 14492 00b4 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 356


 14493              		.loc 1 5727 5
 14494 00b8 BB0000EA 		b	.L936
 14495              	.L939:
 14496              		.loc 1 5727 5 discriminator 9
 14497 00bc 20301BE5 		ldr	r3, [fp, #-32]
 14498 00c0 2334A0E1 		lsr	r3, r3, #8
 14499 00c4 8322A0E1 		lsl	r2, r3, #5
 14500 00c8 18301BE5 		ldr	r3, [fp, #-24]
 14501 00cc 0C3093E5 		ldr	r3, [r3, #12]
 14502 00d0 033082E0 		add	r3, r2, r3
 14503 00d4 08300BE5 		str	r3, [fp, #-8]
 14504 00d8 08301BE5 		ldr	r3, [fp, #-8]
 14505 00dc 0300A0E1 		mov	r0, r3
 14506 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14507 00e4 0C000BE5 		str	r0, [fp, #-12]
 14508              		.loc 1 5727 5 discriminator 1
 14509 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 14510 00ec FF3803E2 		and	r3, r3, #16711680
 14511 00f0 020853E3 		cmp	r3, #131072
 14512 00f4 0100001A 		bne	.L940
 14513              		.loc 1 5727 5 discriminator 10
 14514 00f8 0830E0E3 		mvn	r3, #8
 14515              		.loc 1 5727 5
 14516 00fc AA0000EA 		b	.L936
 14517              	.L940:
 14518              		.loc 1 5727 5 discriminator 11
 14519 0100 0C301BE5 		ldr	r3, [fp, #-12]
 14520 0104 233CA0E1 		lsr	r3, r3, #24
 14521 0108 030053E3 		cmp	r3, #3
 14522 010c 0100000A 		beq	.L941
 14523              		.loc 1 5727 5 discriminator 12
 14524 0110 0130E0E3 		mvn	r3, #1
 14525              		.loc 1 5727 5
 14526 0114 A40000EA 		b	.L936
 14527              	.L941:
 14528              		.loc 1 5727 5 discriminator 13
 14529 0118 20301BE5 		ldr	r3, [fp, #-32]
 14530 011c 7F2003E2 		and	r2, r3, #127
 14531 0120 08301BE5 		ldr	r3, [fp, #-8]
 14532 0124 143093E5 		ldr	r3, [r3, #20]
 14533 0128 030052E1 		cmp	r2, r3
 14534 012c 0100003A 		bcc	.L942
 14535              		.loc 1 5727 5 discriminator 14
 14536 0130 0230E0E3 		mvn	r3, #2
 14537              		.loc 1 5727 5
 14538 0134 9C0000EA 		b	.L936
 14539              	.L942:
 14540              		.loc 1 5727 5 discriminator 15
 14541 0138 20301BE5 		ldr	r3, [fp, #-32]
 14542 013c 7F3003E2 		and	r3, r3, #127
 14543 0140 8322A0E1 		lsl	r2, r3, #5
 14544 0144 08301BE5 		ldr	r3, [fp, #-8]
 14545 0148 0C3093E5 		ldr	r3, [r3, #12]
 14546 014c 033082E0 		add	r3, r2, r3
 14547 0150 08300BE5 		str	r3, [fp, #-8]
 14548 0154 08301BE5 		ldr	r3, [fp, #-8]
 14549 0158 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 357


 14550 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14551 0160 0C000BE5 		str	r0, [fp, #-12]
 14552              		.loc 1 5727 5 discriminator 1
 14553 0164 0C301BE5 		ldr	r3, [fp, #-12]
 14554 0168 FF3803E2 		and	r3, r3, #16711680
 14555 016c 020853E3 		cmp	r3, #131072
 14556 0170 0100001A 		bne	.L943
 14557              		.loc 1 5727 5 discriminator 16
 14558 0174 0830E0E3 		mvn	r3, #8
 14559              		.loc 1 5727 5
 14560 0178 8B0000EA 		b	.L936
 14561              	.L943:
 14562              		.loc 1 5727 5 discriminator 17
 14563 017c 0C301BE5 		ldr	r3, [fp, #-12]
 14564 0180 233CA0E1 		lsr	r3, r3, #24
 14565 0184 060053E3 		cmp	r3, #6
 14566 0188 0100000A 		beq	.L938
 14567              		.loc 1 5727 5 discriminator 18
 14568 018c 0130E0E3 		mvn	r3, #1
 14569              		.loc 1 5727 5
 14570 0190 850000EA 		b	.L936
 14571              	.L938:
5728:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5729:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5730:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_FREE);
 14572              		.loc 1 5730 5 is_stmt 1
 14573 0194 08301BE5 		ldr	r3, [fp, #-8]
 14574 0198 083093E5 		ldr	r3, [r3, #8]
 14575 019c 103003E2 		and	r3, r3, #16
 14576 01a0 000053E3 		cmp	r3, #0
 14577 01a4 0100001A 		bne	.L944
 14578              		.loc 1 5730 5 is_stmt 0 discriminator 1
 14579 01a8 0630E0E3 		mvn	r3, #6
 14580              		.loc 1 5730 5
 14581 01ac 7E0000EA 		b	.L936
 14582              	.L944:
5731:../../Source/Kernel/rme_kernel.c ****     
5732:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound to this core */
5733:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14583              		.loc 1 5733 10 is_stmt 1
 14584 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14585 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14586 01b8 10300BE5 		str	r3, [fp, #-16]
5734:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 14587              		.loc 1 5734 48
 14588 01bc 08301BE5 		ldr	r3, [fp, #-8]
 14589 01c0 0C3093E5 		ldr	r3, [r3, #12]
 14590              		.loc 1 5734 11
 14591 01c4 14300BE5 		str	r3, [fp, #-20]
5735:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 14592              		.loc 1 5735 21
 14593 01c8 14301BE5 		ldr	r3, [fp, #-20]
 14594 01cc 143093E5 		ldr	r3, [r3, #20]
 14595              		.loc 1 5735 7
 14596 01d0 10201BE5 		ldr	r2, [fp, #-16]
 14597 01d4 030052E1 		cmp	r2, r3
 14598 01d8 0100000A 		beq	.L945
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 358


5736:../../Source/Kernel/rme_kernel.c ****     {
5737:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5738:../../Source/Kernel/rme_kernel.c **** 
5739:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14599              		.loc 1 5739 16
 14600 01dc CB30E0E3 		mvn	r3, #203
 14601 01e0 710000EA 		b	.L936
 14602              	.L945:
5740:../../Source/Kernel/rme_kernel.c ****     }
5741:../../Source/Kernel/rme_kernel.c ****     else
5742:../../Source/Kernel/rme_kernel.c ****     {
5743:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5744:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5745:../../Source/Kernel/rme_kernel.c ****     }
5746:../../Source/Kernel/rme_kernel.c ****     
5747:../../Source/Kernel/rme_kernel.c ****     /* Am I referenced by someone as a scheduler? If yes, we cannot unbind. Because
5748:../../Source/Kernel/rme_kernel.c ****      * boot-time thread's refcnt will never be 0, thus they will never pass this checking */
5749:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Ref!=0U)
 14603              		.loc 1 5749 21
 14604 01e4 14301BE5 		ldr	r3, [fp, #-20]
 14605 01e8 303093E5 		ldr	r3, [r3, #48]
 14606              		.loc 1 5749 7
 14607 01ec 000053E3 		cmp	r3, #0
 14608 01f0 0100000A 		beq	.L946
5750:../../Source/Kernel/rme_kernel.c ****     {
5751:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5752:../../Source/Kernel/rme_kernel.c **** 
5753:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_REFCNT;
 14609              		.loc 1 5753 16
 14610 01f4 CD30E0E3 		mvn	r3, #205
 14611 01f8 6B0000EA 		b	.L936
 14612              	.L946:
5754:../../Source/Kernel/rme_kernel.c ****     }
5755:../../Source/Kernel/rme_kernel.c ****     else
5756:../../Source/Kernel/rme_kernel.c ****     {
5757:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5758:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5759:../../Source/Kernel/rme_kernel.c ****     }
5760:../../Source/Kernel/rme_kernel.c **** 
5761:../../Source/Kernel/rme_kernel.c ****     /* Decrease the parent's reference count - on the same core */
5762:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd->Sched.Sched_Ref--;
 14613              		.loc 1 5762 18
 14614 01fc 14301BE5 		ldr	r3, [fp, #-20]
 14615 0200 343093E5 		ldr	r3, [r3, #52]
 14616              		.loc 1 5762 35
 14617 0204 302093E5 		ldr	r2, [r3, #48]
 14618              		.loc 1 5762 45
 14619 0208 012042E2 		sub	r2, r2, #1
 14620 020c 302083E5 		str	r2, [r3, #48]
5763:../../Source/Kernel/rme_kernel.c **** 
5764:../../Source/Kernel/rme_kernel.c ****     /* See if we have any events sent to the parent. If yes, remove that event */
5765:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Notif.Next!=&(Thread->Sched.Notif))
 14621              		.loc 1 5765 27
 14622 0210 14301BE5 		ldr	r3, [fp, #-20]
 14623 0214 082093E5 		ldr	r2, [r3, #8]
 14624              		.loc 1 5765 34
 14625 0218 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 359


 14626 021c 083083E2 		add	r3, r3, #8
 14627              		.loc 1 5765 7
 14628 0220 030052E1 		cmp	r2, r3
 14629 0224 0A00000A 		beq	.L947
5766:../../Source/Kernel/rme_kernel.c ****     {
5767:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5768:../../Source/Kernel/rme_kernel.c **** 
5769:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 14630              		.loc 1 5769 9
 14631 0228 14301BE5 		ldr	r3, [fp, #-20]
 14632 022c 0C2093E5 		ldr	r2, [r3, #12]
 14633 0230 14301BE5 		ldr	r3, [fp, #-20]
 14634 0234 083093E5 		ldr	r3, [r3, #8]
 14635 0238 0310A0E1 		mov	r1, r3
 14636 023c 0200A0E1 		mov	r0, r2
 14637 0240 FEFFFFEB 		bl	_RME_List_Del
5770:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Thread->Sched.Notif));
 14638              		.loc 1 5770 9
 14639 0244 14301BE5 		ldr	r3, [fp, #-20]
 14640 0248 083083E2 		add	r3, r3, #8
 14641 024c 0300A0E1 		mov	r0, r3
 14642 0250 FEFFFFEB 		bl	_RME_List_Crt
 14643              	.L947:
5771:../../Source/Kernel/rme_kernel.c ****     }
5772:../../Source/Kernel/rme_kernel.c ****     else
5773:../../Source/Kernel/rme_kernel.c ****     {
5774:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5775:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5776:../../Source/Kernel/rme_kernel.c ****     }
5777:../../Source/Kernel/rme_kernel.c **** 
5778:../../Source/Kernel/rme_kernel.c ****     /* If we have an scheduler event endpoint, release it */
5779:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Sig!=RME_NULL)
 14644              		.loc 1 5779 21
 14645 0254 14301BE5 		ldr	r3, [fp, #-20]
 14646 0258 383093E5 		ldr	r3, [r3, #56]
 14647              		.loc 1 5779 7
 14648 025c 000053E3 		cmp	r3, #0
 14649 0260 0500000A 		beq	.L948
5780:../../Source/Kernel/rme_kernel.c ****     {
5781:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5782:../../Source/Kernel/rme_kernel.c **** 
5783:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),-1);
 14650              		.loc 1 5783 9
 14651 0264 14301BE5 		ldr	r3, [fp, #-20]
 14652 0268 383093E5 		ldr	r3, [r3, #56]
 14653 026c 043083E2 		add	r3, r3, #4
 14654 0270 0010E0E3 		mvn	r1, #0
 14655 0274 0300A0E1 		mov	r0, r3
 14656 0278 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14657              	.L948:
5784:../../Source/Kernel/rme_kernel.c ****     }
5785:../../Source/Kernel/rme_kernel.c ****     else
5786:../../Source/Kernel/rme_kernel.c ****     {
5787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5788:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5789:../../Source/Kernel/rme_kernel.c ****     }
5790:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 360


5791:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5792:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 14658              		.loc 1 5792 5
 14659 027c 0010A0E3 		mov	r1, #0
 14660 0280 1C001BE5 		ldr	r0, [fp, #-28]
 14661 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5793:../../Source/Kernel/rme_kernel.c ****     
5794:../../Source/Kernel/rme_kernel.c ****     /* If the thread is ready, kick it out of the run queue. If it is blocked on
5795:../../Source/Kernel/rme_kernel.c ****      * some endpoint, end the blocking and set the return value to RME_ERR_SIV_FREE.
5796:../../Source/Kernel/rme_kernel.c ****      * If the thread is killed due to a fault, we will not clear the fault here, and
5797:../../Source/Kernel/rme_kernel.c ****      * we will wait for the Exec_Set to clear it. No scheduler notifications are sent
5798:../../Source/Kernel/rme_kernel.c ****      * because the thread is being freed and notifications at this point are useless. */
5799:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_READY)
 14662              		.loc 1 5799 21
 14663 0288 14301BE5 		ldr	r3, [fp, #-20]
 14664 028c 1C3093E5 		ldr	r3, [r3, #28]
 14665              		.loc 1 5799 7
 14666 0290 000053E3 		cmp	r3, #0
 14667 0294 0500001A 		bne	.L949
5800:../../Source/Kernel/rme_kernel.c ****     {
5801:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5802:../../Source/Kernel/rme_kernel.c **** 
5803:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue and timeout but don't notify parent */
5804:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thread);
 14668              		.loc 1 5804 9
 14669 0298 14001BE5 		ldr	r0, [fp, #-20]
 14670 029c FEFFFFEB 		bl	_RME_Run_Del
5805:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14671              		.loc 1 5805 28
 14672 02a0 14301BE5 		ldr	r3, [fp, #-20]
 14673 02a4 0220A0E3 		mov	r2, #2
 14674 02a8 1C2083E5 		str	r2, [r3, #28]
 14675 02ac 130000EA 		b	.L950
 14676              	.L949:
5806:../../Source/Kernel/rme_kernel.c ****     }
5807:../../Source/Kernel/rme_kernel.c ****     /* BLOCKED */
5808:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_BLOCKED)
 14677              		.loc 1 5808 26
 14678 02b0 14301BE5 		ldr	r3, [fp, #-20]
 14679 02b4 1C3093E5 		ldr	r3, [r3, #28]
 14680              		.loc 1 5808 12
 14681 02b8 010053E3 		cmp	r3, #1
 14682 02bc 0F00001A 		bne	.L950
5809:../../Source/Kernel/rme_kernel.c ****     {
5810:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5811:../../Source/Kernel/rme_kernel.c ****         
5812:../../Source/Kernel/rme_kernel.c ****         /* If it got here, the thread that is operated on cannot be the current 
5813:../../Source/Kernel/rme_kernel.c ****          * thread, so we are not overwriting the return value of the caller. */
5814:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thread->Ctx.Reg->Reg),RME_ERR_SIV_FREE);
 14683              		.loc 1 5814 43
 14684 02c0 14301BE5 		ldr	r3, [fp, #-20]
 14685 02c4 483093E5 		ldr	r3, [r3, #72]
 14686              		.loc 1 5814 9
 14687 02c8 CE1E0FE3 		movw	r1, #65230
 14688 02cc FF1F4FE3 		movt	r1, 65535
 14689 02d0 0300A0E1 		mov	r0, r3
 14690 02d4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 361


5815:../../Source/Kernel/rme_kernel.c ****         /* Release signal and thread from each other */
5816:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal->Thd=RME_NULL;
 14691              		.loc 1 5816 22
 14692 02d8 14301BE5 		ldr	r3, [fp, #-20]
 14693 02dc 283093E5 		ldr	r3, [r3, #40]
 14694              		.loc 1 5816 34
 14695 02e0 0020A0E3 		mov	r2, #0
 14696 02e4 182083E5 		str	r2, [r3, #24]
5817:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal=RME_NULL;
 14697              		.loc 1 5817 29
 14698 02e8 14301BE5 		ldr	r3, [fp, #-20]
 14699 02ec 0020A0E3 		mov	r2, #0
 14700 02f0 282083E5 		str	r2, [r3, #40]
5818:../../Source/Kernel/rme_kernel.c ****         /* Timeout but don't notify parent */
5819:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14701              		.loc 1 5819 28
 14702 02f4 14301BE5 		ldr	r3, [fp, #-20]
 14703 02f8 0220A0E3 		mov	r2, #2
 14704 02fc 1C2083E5 		str	r2, [r3, #28]
 14705              	.L950:
5820:../../Source/Kernel/rme_kernel.c ****     }
5821:../../Source/Kernel/rme_kernel.c ****     /* TIMEOUT or EXCPEND */
5822:../../Source/Kernel/rme_kernel.c ****     else
5823:../../Source/Kernel/rme_kernel.c ****     {
5824:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5825:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5826:../../Source/Kernel/rme_kernel.c ****     }
5827:../../Source/Kernel/rme_kernel.c **** 
5828:../../Source/Kernel/rme_kernel.c ****     /* Cleanup all remaining timeslices on it */
5829:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 14706              		.loc 1 5829 24
 14707 0300 14301BE5 		ldr	r3, [fp, #-20]
 14708 0304 0020A0E3 		mov	r2, #0
 14709 0308 182083E5 		str	r2, [r3, #24]
5830:../../Source/Kernel/rme_kernel.c ****     
5831:../../Source/Kernel/rme_kernel.c ****     /* Check if this thread is the current one and we may need to switch away */
5832:../../Source/Kernel/rme_kernel.c ****     if(Local->Thd_Cur==Thread)
 14710              		.loc 1 5832 13
 14711 030c 10301BE5 		ldr	r3, [fp, #-16]
 14712 0310 043093E5 		ldr	r3, [r3, #4]
 14713              		.loc 1 5832 7
 14714 0314 14201BE5 		ldr	r2, [fp, #-20]
 14715 0318 030052E1 		cmp	r2, r3
 14716 031c 1C00001A 		bne	.L951
5833:../../Source/Kernel/rme_kernel.c ****     {
5834:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5835:../../Source/Kernel/rme_kernel.c **** 
5836:../../Source/Kernel/rme_kernel.c ****         Local->Thd_Cur=_RME_Run_High(Local);
 14717              		.loc 1 5836 24
 14718 0320 10001BE5 		ldr	r0, [fp, #-16]
 14719 0324 FEFFFFEB 		bl	_RME_Run_High
 14720 0328 0020A0E1 		mov	r2, r0
 14721              		.loc 1 5836 23 discriminator 1
 14722 032c 10301BE5 		ldr	r3, [fp, #-16]
 14723 0330 042083E5 		str	r2, [r3, #4]
5837:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Local->Thd_Cur);
 14724              		.loc 1 5837 9
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 362


 14725 0334 10301BE5 		ldr	r3, [fp, #-16]
 14726 0338 043093E5 		ldr	r3, [r3, #4]
 14727 033c 0300A0E1 		mov	r0, r3
 14728 0340 FEFFFFEB 		bl	_RME_Run_Ins
5838:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Local->Thd_Cur->Sched.State==RME_THD_READY);
 14729              		.loc 1 5838 9
 14730 0344 10301BE5 		ldr	r3, [fp, #-16]
 14731 0348 043093E5 		ldr	r3, [r3, #4]
 14732 034c 1C3093E5 		ldr	r3, [r3, #28]
 14733 0350 000053E3 		cmp	r3, #0
 14734 0354 0800000A 		beq	.L952
 14735              		.loc 1 5838 9 is_stmt 0 discriminator 1
 14736 0358 003000E3 		movw	r3, #:lower16:.LC6
 14737 035c 003040E3 		movt	r3, #:upper16:.LC6
 14738 0360 002000E3 		movw	r2, #:lower16:.LC7
 14739 0364 002040E3 		movt	r2, #:upper16:.LC7
 14740 0368 CE1601E3 		movw	r1, #5838
 14741 036c 000000E3 		movw	r0, #:lower16:.LC8
 14742 0370 000040E3 		movt	r0, #:upper16:.LC8
 14743 0374 FEFFFFEB 		bl	RME_Log
 14744              	.L953:
 14745              		.loc 1 5838 9
 14746 0378 FEFFFFEA 		b	.L953
 14747              	.L952:
5839:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Swt(Reg,Thread,Local->Thd_Cur);
 14748              		.loc 1 5839 9 is_stmt 1
 14749 037c 10301BE5 		ldr	r3, [fp, #-16]
 14750 0380 043093E5 		ldr	r3, [r3, #4]
 14751 0384 0320A0E1 		mov	r2, r3
 14752 0388 14101BE5 		ldr	r1, [fp, #-20]
 14753 038c 1C001BE5 		ldr	r0, [fp, #-28]
 14754 0390 FEFFFFEB 		bl	_RME_Run_Swt
 14755              	.L951:
5840:../../Source/Kernel/rme_kernel.c ****     }
5841:../../Source/Kernel/rme_kernel.c ****     else
5842:../../Source/Kernel/rme_kernel.c ****     {
5843:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5844:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5845:../../Source/Kernel/rme_kernel.c ****     }
5846:../../Source/Kernel/rme_kernel.c ****     
5847:../../Source/Kernel/rme_kernel.c ****     /* Set the state to free so other cores can bind */
5848:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((rme_ptr_t*)&(Thread->Sched.Local),
 14756              		.loc 1 5848 5
 14757 0394 14301BE5 		ldr	r3, [fp, #-20]
 14758 0398 143083E2 		add	r3, r3, #20
 14759 039c 0010E0E3 		mvn	r1, #0
 14760 03a0 0300A0E1 		mov	r0, r3
 14761 03a4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5849:../../Source/Kernel/rme_kernel.c ****                       (rme_ptr_t)RME_THD_FREE);
5850:../../Source/Kernel/rme_kernel.c **** 
5851:../../Source/Kernel/rme_kernel.c ****     return 0;
 14762              		.loc 1 5851 12
 14763 03a8 0030A0E3 		mov	r3, #0
 14764              	.L936:
5852:../../Source/Kernel/rme_kernel.c **** }
 14765              		.loc 1 5852 1
 14766 03ac 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 363


 14767 03b0 04D04BE2 		sub	sp, fp, #4
 14768              		.cfi_def_cfa 13, 8
 14769              		@ sp needed
 14770 03b4 0088BDE8 		pop	{fp, pc}
 14771              		.cfi_endproc
 14772              	.LFE59:
 14774              		.section	.text._RME_Thd_Exec_Set,"ax",%progbits
 14775              		.align	2
 14776              		.syntax unified
 14777              		.arm
 14779              	_RME_Thd_Exec_Set:
 14780              	.LFB60:
5853:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Free ******************************************/
5854:../../Source/Kernel/rme_kernel.c **** 
5855:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Exec_Set *************************************************
5856:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's entry point and stack. The registers will be
5857:../../Source/Kernel/rme_kernel.c ****               initialized with these contents.
5858:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5859:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5860:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5861:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5862:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry address of the thread.
5863:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
5864:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter to pass to the thread.
5865:../../Source/Kernel/rme_kernel.c **** Output      : None.
5866:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5867:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5868:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Exec_Set(struct RME_Cap_Cpt* Cpt,
5869:../../Source/Kernel/rme_kernel.c ****                                    struct RME_Reg_Struct* Reg,
5870:../../Source/Kernel/rme_kernel.c ****                                    rme_cid_t Cap_Thd,
5871:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Entry,
5872:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Stack,
5873:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Param)
5874:../../Source/Kernel/rme_kernel.c **** {
 14781              		.loc 1 5874 1
 14782              		.cfi_startproc
 14783              		@ args = 8, pretend = 0, frame = 32
 14784              		@ frame_needed = 1, uses_anonymous_args = 0
 14785 0000 00482DE9 		push	{fp, lr}
 14786              		.cfi_def_cfa_offset 8
 14787              		.cfi_offset 11, -8
 14788              		.cfi_offset 14, -4
 14789 0004 04B08DE2 		add	fp, sp, #4
 14790              		.cfi_def_cfa 11, 4
 14791 0008 28D04DE2 		sub	sp, sp, #40
 14792 000c 18000BE5 		str	r0, [fp, #-24]
 14793 0010 1C100BE5 		str	r1, [fp, #-28]
 14794 0014 20200BE5 		str	r2, [fp, #-32]
 14795 0018 24300BE5 		str	r3, [fp, #-36]
5875:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5876:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5877:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5878:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5879:../../Source/Kernel/rme_kernel.c ****     
5880:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5881:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14796              		.loc 1 5881 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 364


 14797 001c 20301BE5 		ldr	r3, [fp, #-32]
 14798 0020 803003E2 		and	r3, r3, #128
 14799 0024 000053E3 		cmp	r3, #0
 14800 0028 1C00001A 		bne	.L955
 14801              		.loc 1 5881 5 is_stmt 0 discriminator 1
 14802 002c 18301BE5 		ldr	r3, [fp, #-24]
 14803 0030 142093E5 		ldr	r2, [r3, #20]
 14804 0034 20301BE5 		ldr	r3, [fp, #-32]
 14805 0038 030052E1 		cmp	r2, r3
 14806 003c 0100008A 		bhi	.L956
 14807              		.loc 1 5881 5 discriminator 3
 14808 0040 0230E0E3 		mvn	r3, #2
 14809              		.loc 1 5881 5
 14810 0044 910000EA 		b	.L957
 14811              	.L956:
 14812              		.loc 1 5881 5 discriminator 4
 14813 0048 20301BE5 		ldr	r3, [fp, #-32]
 14814 004c 8322A0E1 		lsl	r2, r3, #5
 14815 0050 18301BE5 		ldr	r3, [fp, #-24]
 14816 0054 0C3093E5 		ldr	r3, [r3, #12]
 14817 0058 033082E0 		add	r3, r2, r3
 14818 005c 08300BE5 		str	r3, [fp, #-8]
 14819 0060 08301BE5 		ldr	r3, [fp, #-8]
 14820 0064 0300A0E1 		mov	r0, r3
 14821 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14822 006c 0C000BE5 		str	r0, [fp, #-12]
 14823              		.loc 1 5881 5 discriminator 1
 14824 0070 0C301BE5 		ldr	r3, [fp, #-12]
 14825 0074 FF3803E2 		and	r3, r3, #16711680
 14826 0078 020853E3 		cmp	r3, #131072
 14827 007c 0100001A 		bne	.L958
 14828              		.loc 1 5881 5 discriminator 5
 14829 0080 0830E0E3 		mvn	r3, #8
 14830              		.loc 1 5881 5
 14831 0084 810000EA 		b	.L957
 14832              	.L958:
 14833              		.loc 1 5881 5 discriminator 6
 14834 0088 0C301BE5 		ldr	r3, [fp, #-12]
 14835 008c 233CA0E1 		lsr	r3, r3, #24
 14836 0090 060053E3 		cmp	r3, #6
 14837 0094 3F00000A 		beq	.L959
 14838              		.loc 1 5881 5 discriminator 7
 14839 0098 0130E0E3 		mvn	r3, #1
 14840              		.loc 1 5881 5
 14841 009c 7B0000EA 		b	.L957
 14842              	.L955:
 14843              		.loc 1 5881 5 discriminator 2
 14844 00a0 20301BE5 		ldr	r3, [fp, #-32]
 14845 00a4 2324A0E1 		lsr	r2, r3, #8
 14846 00a8 18301BE5 		ldr	r3, [fp, #-24]
 14847 00ac 143093E5 		ldr	r3, [r3, #20]
 14848 00b0 030052E1 		cmp	r2, r3
 14849 00b4 0100003A 		bcc	.L960
 14850              		.loc 1 5881 5 discriminator 8
 14851 00b8 0230E0E3 		mvn	r3, #2
 14852              		.loc 1 5881 5
 14853 00bc 730000EA 		b	.L957
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 365


 14854              	.L960:
 14855              		.loc 1 5881 5 discriminator 9
 14856 00c0 20301BE5 		ldr	r3, [fp, #-32]
 14857 00c4 2334A0E1 		lsr	r3, r3, #8
 14858 00c8 8322A0E1 		lsl	r2, r3, #5
 14859 00cc 18301BE5 		ldr	r3, [fp, #-24]
 14860 00d0 0C3093E5 		ldr	r3, [r3, #12]
 14861 00d4 033082E0 		add	r3, r2, r3
 14862 00d8 08300BE5 		str	r3, [fp, #-8]
 14863 00dc 08301BE5 		ldr	r3, [fp, #-8]
 14864 00e0 0300A0E1 		mov	r0, r3
 14865 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14866 00e8 0C000BE5 		str	r0, [fp, #-12]
 14867              		.loc 1 5881 5 discriminator 1
 14868 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 14869 00f0 FF3803E2 		and	r3, r3, #16711680
 14870 00f4 020853E3 		cmp	r3, #131072
 14871 00f8 0100001A 		bne	.L961
 14872              		.loc 1 5881 5 discriminator 10
 14873 00fc 0830E0E3 		mvn	r3, #8
 14874              		.loc 1 5881 5
 14875 0100 620000EA 		b	.L957
 14876              	.L961:
 14877              		.loc 1 5881 5 discriminator 11
 14878 0104 0C301BE5 		ldr	r3, [fp, #-12]
 14879 0108 233CA0E1 		lsr	r3, r3, #24
 14880 010c 030053E3 		cmp	r3, #3
 14881 0110 0100000A 		beq	.L962
 14882              		.loc 1 5881 5 discriminator 12
 14883 0114 0130E0E3 		mvn	r3, #1
 14884              		.loc 1 5881 5
 14885 0118 5C0000EA 		b	.L957
 14886              	.L962:
 14887              		.loc 1 5881 5 discriminator 13
 14888 011c 20301BE5 		ldr	r3, [fp, #-32]
 14889 0120 7F2003E2 		and	r2, r3, #127
 14890 0124 08301BE5 		ldr	r3, [fp, #-8]
 14891 0128 143093E5 		ldr	r3, [r3, #20]
 14892 012c 030052E1 		cmp	r2, r3
 14893 0130 0100003A 		bcc	.L963
 14894              		.loc 1 5881 5 discriminator 14
 14895 0134 0230E0E3 		mvn	r3, #2
 14896              		.loc 1 5881 5
 14897 0138 540000EA 		b	.L957
 14898              	.L963:
 14899              		.loc 1 5881 5 discriminator 15
 14900 013c 20301BE5 		ldr	r3, [fp, #-32]
 14901 0140 7F3003E2 		and	r3, r3, #127
 14902 0144 8322A0E1 		lsl	r2, r3, #5
 14903 0148 08301BE5 		ldr	r3, [fp, #-8]
 14904 014c 0C3093E5 		ldr	r3, [r3, #12]
 14905 0150 033082E0 		add	r3, r2, r3
 14906 0154 08300BE5 		str	r3, [fp, #-8]
 14907 0158 08301BE5 		ldr	r3, [fp, #-8]
 14908 015c 0300A0E1 		mov	r0, r3
 14909 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14910 0164 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 366


 14911              		.loc 1 5881 5 discriminator 1
 14912 0168 0C301BE5 		ldr	r3, [fp, #-12]
 14913 016c FF3803E2 		and	r3, r3, #16711680
 14914 0170 020853E3 		cmp	r3, #131072
 14915 0174 0100001A 		bne	.L964
 14916              		.loc 1 5881 5 discriminator 16
 14917 0178 0830E0E3 		mvn	r3, #8
 14918              		.loc 1 5881 5
 14919 017c 430000EA 		b	.L957
 14920              	.L964:
 14921              		.loc 1 5881 5 discriminator 17
 14922 0180 0C301BE5 		ldr	r3, [fp, #-12]
 14923 0184 233CA0E1 		lsr	r3, r3, #24
 14924 0188 060053E3 		cmp	r3, #6
 14925 018c 0100000A 		beq	.L959
 14926              		.loc 1 5881 5 discriminator 18
 14927 0190 0130E0E3 		mvn	r3, #1
 14928              		.loc 1 5881 5
 14929 0194 3D0000EA 		b	.L957
 14930              	.L959:
5882:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5883:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5884:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_EXEC_SET);
 14931              		.loc 1 5884 5 is_stmt 1
 14932 0198 08301BE5 		ldr	r3, [fp, #-8]
 14933 019c 083093E5 		ldr	r3, [r3, #8]
 14934 01a0 013003E2 		and	r3, r3, #1
 14935 01a4 000053E3 		cmp	r3, #0
 14936 01a8 0100001A 		bne	.L965
 14937              		.loc 1 5884 5 is_stmt 0 discriminator 1
 14938 01ac 0630E0E3 		mvn	r3, #6
 14939              		.loc 1 5884 5
 14940 01b0 360000EA 		b	.L957
 14941              	.L965:
5885:../../Source/Kernel/rme_kernel.c ****     
5886:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound, and quit if it is not on our core */
5887:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 14942              		.loc 1 5887 12 is_stmt 1
 14943 01b4 08301BE5 		ldr	r3, [fp, #-8]
 14944 01b8 0C3093E5 		ldr	r3, [r3, #12]
 14945              		.loc 1 5887 11
 14946 01bc 10300BE5 		str	r3, [fp, #-16]
5888:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14947              		.loc 1 5888 10
 14948 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14949 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14950 01c8 14300BE5 		str	r3, [fp, #-20]
5889:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 14951              		.loc 1 5889 21
 14952 01cc 10301BE5 		ldr	r3, [fp, #-16]
 14953 01d0 143093E5 		ldr	r3, [r3, #20]
 14954              		.loc 1 5889 7
 14955 01d4 14201BE5 		ldr	r2, [fp, #-20]
 14956 01d8 030052E1 		cmp	r2, r3
 14957 01dc 0100000A 		beq	.L966
5890:../../Source/Kernel/rme_kernel.c ****     {
5891:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 367


5892:../../Source/Kernel/rme_kernel.c **** 
5893:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14958              		.loc 1 5893 16
 14959 01e0 CB30E0E3 		mvn	r3, #203
 14960 01e4 290000EA 		b	.L957
 14961              	.L966:
5894:../../Source/Kernel/rme_kernel.c ****     }
5895:../../Source/Kernel/rme_kernel.c ****     else
5896:../../Source/Kernel/rme_kernel.c ****     {
5897:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5898:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5899:../../Source/Kernel/rme_kernel.c ****     }
5900:../../Source/Kernel/rme_kernel.c ****     
5901:../../Source/Kernel/rme_kernel.c ****     /* Commit the change if both values are non-zero. If both are zero we are just
5902:../../Source/Kernel/rme_kernel.c ****      * clearing the error flag and continue from where the exception happened. */
5903:../../Source/Kernel/rme_kernel.c ****     if((Entry!=RME_NULL)&&(Stack!=RME_NULL))
 14962              		.loc 1 5903 7
 14963 01e8 24301BE5 		ldr	r3, [fp, #-36]
 14964 01ec 000053E3 		cmp	r3, #0
 14965 01f0 0C00000A 		beq	.L967
 14966              		.loc 1 5903 25 discriminator 1
 14967 01f4 04309BE5 		ldr	r3, [fp, #4]
 14968 01f8 000053E3 		cmp	r3, #0
 14969 01fc 0900000A 		beq	.L967
5904:../../Source/Kernel/rme_kernel.c ****     {
5905:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5906:../../Source/Kernel/rme_kernel.c **** 
5907:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Reg_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr),
 14970              		.loc 1 5907 28
 14971 0200 10301BE5 		ldr	r3, [fp, #-16]
 14972 0204 443093E5 		ldr	r3, [r3, #68]
 14973              		.loc 1 5907 9
 14974 0208 0201C3E3 		bic	r0, r3, #-2147483648
5908:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 14975              		.loc 1 5908 59
 14976 020c 10301BE5 		ldr	r3, [fp, #-16]
 14977 0210 483093E5 		ldr	r3, [r3, #72]
5907:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 14978              		.loc 1 5907 9
 14979 0214 00308DE5 		str	r3, [sp]
 14980 0218 08309BE5 		ldr	r3, [fp, #8]
 14981 021c 04209BE5 		ldr	r2, [fp, #4]
 14982 0220 24101BE5 		ldr	r1, [fp, #-36]
 14983 0224 FEFFFFEB 		bl	__RME_Thd_Reg_Init
 14984              	.L967:
5909:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5910:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Cop_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr), 
5911:../../Source/Kernel/rme_kernel.c ****                            &(Thread->Ctx.Reg->Reg),&(Thread->Ctx.Reg->Cop));
5912:../../Source/Kernel/rme_kernel.c **** #endif
5913:../../Source/Kernel/rme_kernel.c ****     }
5914:../../Source/Kernel/rme_kernel.c ****     else
5915:../../Source/Kernel/rme_kernel.c ****     {
5916:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5917:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5918:../../Source/Kernel/rme_kernel.c ****     }
5919:../../Source/Kernel/rme_kernel.c ****     
5920:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 368


5921:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 14985              		.loc 1 5921 5
 14986 0228 0010A0E3 		mov	r1, #0
 14987 022c 1C001BE5 		ldr	r0, [fp, #-28]
 14988 0230 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5922:../../Source/Kernel/rme_kernel.c ****     
5923:../../Source/Kernel/rme_kernel.c ****     /* Check if there is a exception pending and clear it if there is */
5924:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 14989              		.loc 1 5924 21
 14990 0234 10301BE5 		ldr	r3, [fp, #-16]
 14991 0238 1C3093E5 		ldr	r3, [r3, #28]
 14992              		.loc 1 5924 7
 14993 023c 030053E3 		cmp	r3, #3
 14994 0240 1100001A 		bne	.L968
5925:../../Source/Kernel/rme_kernel.c ****     {
5926:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5927:../../Source/Kernel/rme_kernel.c ****         
5928:../../Source/Kernel/rme_kernel.c ****         /* Check if the thread still have timeslices. If yes, put it into the runqueue;
5929:../../Source/Kernel/rme_kernel.c ****          * if no, mark it as TIMEOUT and send scheduler notification to its parent. */
5930:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice!=0U)
 14995              		.loc 1 5930 25
 14996 0244 10301BE5 		ldr	r3, [fp, #-16]
 14997 0248 183093E5 		ldr	r3, [r3, #24]
 14998              		.loc 1 5930 11
 14999 024c 000053E3 		cmp	r3, #0
 15000 0250 0500000A 		beq	.L969
5931:../../Source/Kernel/rme_kernel.c ****         {
5932:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5933:../../Source/Kernel/rme_kernel.c ****             
5934:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
5935:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_READY;
 15001              		.loc 1 5935 32
 15002 0254 10301BE5 		ldr	r3, [fp, #-16]
 15003 0258 0020A0E3 		mov	r2, #0
 15004 025c 1C2083E5 		str	r2, [r3, #28]
5936:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread);
 15005              		.loc 1 5936 13
 15006 0260 10001BE5 		ldr	r0, [fp, #-16]
 15007 0264 FEFFFFEB 		bl	_RME_Run_Ins
 15008 0268 040000EA 		b	.L970
 15009              	.L969:
5937:../../Source/Kernel/rme_kernel.c ****         }
5938:../../Source/Kernel/rme_kernel.c ****         else
5939:../../Source/Kernel/rme_kernel.c ****         {
5940:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5941:../../Source/Kernel/rme_kernel.c ****             
5942:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
5943:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_TIMEOUT;
 15010              		.loc 1 5943 32
 15011 026c 10301BE5 		ldr	r3, [fp, #-16]
 15012 0270 0220A0E3 		mov	r2, #2
 15013 0274 1C2083E5 		str	r2, [r3, #28]
5944:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thread);
 15014              		.loc 1 5944 13
 15015 0278 10001BE5 		ldr	r0, [fp, #-16]
 15016 027c FEFFFFEB 		bl	_RME_Run_Notif
 15017              	.L970:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 369


5945:../../Source/Kernel/rme_kernel.c ****         }
5946:../../Source/Kernel/rme_kernel.c ****         
5947:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread because something unblocked */
5948:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 15018              		.loc 1 5948 9
 15019 0280 14101BE5 		ldr	r1, [fp, #-20]
 15020 0284 1C001BE5 		ldr	r0, [fp, #-28]
 15021 0288 FEFFFFEB 		bl	_RME_Kern_High
 15022              	.L968:
5949:../../Source/Kernel/rme_kernel.c ****     }
5950:../../Source/Kernel/rme_kernel.c ****     else
5951:../../Source/Kernel/rme_kernel.c ****     {
5952:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5953:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5954:../../Source/Kernel/rme_kernel.c ****     }
5955:../../Source/Kernel/rme_kernel.c ****     
5956:../../Source/Kernel/rme_kernel.c ****     return 0;
 15023              		.loc 1 5956 12
 15024 028c 0030A0E3 		mov	r3, #0
 15025              	.L957:
5957:../../Source/Kernel/rme_kernel.c **** }
 15026              		.loc 1 5957 1
 15027 0290 0300A0E1 		mov	r0, r3
 15028 0294 04D04BE2 		sub	sp, fp, #4
 15029              		.cfi_def_cfa 13, 8
 15030              		@ sp needed
 15031 0298 0088BDE8 		pop	{fp, pc}
 15032              		.cfi_endproc
 15033              	.LFE60:
 15035              		.section	.text._RME_Thd_Sched_Prio,"ax",%progbits
 15036              		.align	2
 15037              		.syntax unified
 15038              		.arm
 15040              	_RME_Thd_Sched_Prio:
 15041              	.LFB61:
5958:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Exec_Set ********************************************/
5959:../../Source/Kernel/rme_kernel.c **** 
5960:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Prio ***********************************************
5961:../../Source/Kernel/rme_kernel.c **** Description : Change a thread's priority level. This can only be called from
5962:../../Source/Kernel/rme_kernel.c ****               the core that have the thread bound. To facilitate scheduling,
5963:../../Source/Kernel/rme_kernel.c ****               this system call allows up to 3 thread's priority changes per
5964:../../Source/Kernel/rme_kernel.c ****               call. This system call can cause a potential context switch.
5965:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5966:../../Source/Kernel/rme_kernel.c ****               priority. 
5967:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5968:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5969:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Number - The number of threads to adjust priority.
5970:../../Source/Kernel/rme_kernel.c ****                                  Allowed values are 1, 2 and 3.
5971:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd0 - The capability to the first thread.
5972:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5973:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio0 - The priority level, higher is more critical.
5974:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd1 - The capability to the second thread.
5975:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5976:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio1 - The priority level, higher is more critical.
5977:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd2 - The capability to the third thread.
5978:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5979:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio2 - The priority level, higher is more critical.
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 370


5980:../../Source/Kernel/rme_kernel.c **** Output      : None.
5981:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5982:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5983:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Prio(struct RME_Cap_Cpt* Cpt,
5984:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5985:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Number,
5986:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd0,
5987:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio0,
5988:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd1,
5989:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio1,
5990:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd2,
5991:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio2)
5992:../../Source/Kernel/rme_kernel.c **** {
 15042              		.loc 1 5992 1
 15043              		.cfi_startproc
 15044              		@ args = 20, pretend = 0, frame = 80
 15045              		@ frame_needed = 1, uses_anonymous_args = 0
 15046 0000 00482DE9 		push	{fp, lr}
 15047              		.cfi_def_cfa_offset 8
 15048              		.cfi_offset 11, -8
 15049              		.cfi_offset 14, -4
 15050 0004 04B08DE2 		add	fp, sp, #4
 15051              		.cfi_def_cfa 11, 4
 15052 0008 50D04DE2 		sub	sp, sp, #80
 15053 000c 48000BE5 		str	r0, [fp, #-72]
 15054 0010 4C100BE5 		str	r1, [fp, #-76]
 15055 0014 50200BE5 		str	r2, [fp, #-80]
 15056 0018 54300BE5 		str	r3, [fp, #-84]
5993:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
5994:../../Source/Kernel/rme_kernel.c ****     rme_cid_t Cap_Thd[3];
5995:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio[3];
5996:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op[3];
5997:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread[3];
5998:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5999:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6000:../../Source/Kernel/rme_kernel.c ****     
6001:../../Source/Kernel/rme_kernel.c ****     /* Check parameter validity */
6002:../../Source/Kernel/rme_kernel.c ****     if((Number==0U)||(Number>3U))
 15057              		.loc 1 6002 7
 15058 001c 50301BE5 		ldr	r3, [fp, #-80]
 15059 0020 000053E3 		cmp	r3, #0
 15060 0024 0200000A 		beq	.L972
 15061              		.loc 1 6002 20 discriminator 1
 15062 0028 50301BE5 		ldr	r3, [fp, #-80]
 15063 002c 030053E3 		cmp	r3, #3
 15064 0030 0100009A 		bls	.L973
 15065              	.L972:
6003:../../Source/Kernel/rme_kernel.c ****     {
6004:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6005:../../Source/Kernel/rme_kernel.c **** 
6006:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15066              		.loc 1 6006 16
 15067 0034 CB30E0E3 		mvn	r3, #203
 15068 0038 260100EA 		b	.L993
 15069              	.L973:
6007:../../Source/Kernel/rme_kernel.c ****     }
6008:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 371


6009:../../Source/Kernel/rme_kernel.c ****     /* We'll use arrays in the next */
6010:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[0]=Cap_Thd0;
 15070              		.loc 1 6010 15
 15071 003c 54301BE5 		ldr	r3, [fp, #-84]
 15072 0040 1C300BE5 		str	r3, [fp, #-28]
6011:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[1]=Cap_Thd1;
 15073              		.loc 1 6011 15
 15074 0044 08309BE5 		ldr	r3, [fp, #8]
 15075 0048 18300BE5 		str	r3, [fp, #-24]
6012:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[2]=Cap_Thd2;
 15076              		.loc 1 6012 15
 15077 004c 10309BE5 		ldr	r3, [fp, #16]
 15078 0050 14300BE5 		str	r3, [fp, #-20]
6013:../../Source/Kernel/rme_kernel.c ****     Prio[0]=Prio0;
 15079              		.loc 1 6013 12
 15080 0054 04309BE5 		ldr	r3, [fp, #4]
 15081 0058 28300BE5 		str	r3, [fp, #-40]
6014:../../Source/Kernel/rme_kernel.c ****     Prio[1]=Prio1;
 15082              		.loc 1 6014 12
 15083 005c 0C309BE5 		ldr	r3, [fp, #12]
 15084 0060 24300BE5 		str	r3, [fp, #-36]
6015:../../Source/Kernel/rme_kernel.c ****     Prio[2]=Prio2;
 15085              		.loc 1 6015 12
 15086 0064 14309BE5 		ldr	r3, [fp, #20]
 15087 0068 20300BE5 		str	r3, [fp, #-32]
6016:../../Source/Kernel/rme_kernel.c **** 
6017:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15088              		.loc 1 6017 10
 15089 006c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15090 0070 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15091 0074 0C300BE5 		str	r3, [fp, #-12]
6018:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15092              		.loc 1 6018 14
 15093 0078 0030A0E3 		mov	r3, #0
 15094 007c 08300BE5 		str	r3, [fp, #-8]
 15095              		.loc 1 6018 5
 15096 0080 D20000EA 		b	.L975
 15097              	.L988:
6019:../../Source/Kernel/rme_kernel.c ****     {
6020:../../Source/Kernel/rme_kernel.c ****         /* Get the capability slot */
6021:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd[Count],RME_CAP_TYPE_THD,
 15098              		.loc 1 6021 9
 15099 0084 08301BE5 		ldr	r3, [fp, #-8]
 15100 0088 0331A0E1 		lsl	r3, r3, #2
 15101 008c 043043E2 		sub	r3, r3, #4
 15102 0090 0B3083E0 		add	r3, r3, fp
 15103 0094 183013E5 		ldr	r3, [r3, #-24]
 15104 0098 803003E2 		and	r3, r3, #128
 15105 009c 000053E3 		cmp	r3, #0
 15106 00a0 2E00001A 		bne	.L976
 15107              		.loc 1 6021 9 is_stmt 0 discriminator 1
 15108 00a4 08301BE5 		ldr	r3, [fp, #-8]
 15109 00a8 0331A0E1 		lsl	r3, r3, #2
 15110 00ac 043043E2 		sub	r3, r3, #4
 15111 00b0 0B3083E0 		add	r3, r3, fp
 15112 00b4 183013E5 		ldr	r3, [r3, #-24]
 15113 00b8 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 372


 15114 00bc 48301BE5 		ldr	r3, [fp, #-72]
 15115 00c0 143093E5 		ldr	r3, [r3, #20]
 15116 00c4 030052E1 		cmp	r2, r3
 15117 00c8 0100003A 		bcc	.L977
 15118              		.loc 1 6021 9 discriminator 3
 15119 00cc 0230E0E3 		mvn	r3, #2
 15120              		.loc 1 6021 9
 15121 00d0 000100EA 		b	.L993
 15122              	.L977:
 15123              		.loc 1 6021 9 discriminator 4
 15124 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15125 00d8 0331A0E1 		lsl	r3, r3, #2
 15126 00dc 043043E2 		sub	r3, r3, #4
 15127 00e0 0B3083E0 		add	r3, r3, fp
 15128 00e4 183013E5 		ldr	r3, [r3, #-24]
 15129 00e8 8322A0E1 		lsl	r2, r3, #5
 15130 00ec 48301BE5 		ldr	r3, [fp, #-72]
 15131 00f0 0C3093E5 		ldr	r3, [r3, #12]
 15132 00f4 033082E0 		add	r3, r2, r3
 15133 00f8 0320A0E1 		mov	r2, r3
 15134 00fc 08301BE5 		ldr	r3, [fp, #-8]
 15135 0100 0331A0E1 		lsl	r3, r3, #2
 15136 0104 043043E2 		sub	r3, r3, #4
 15137 0108 0B3083E0 		add	r3, r3, fp
 15138 010c 302003E5 		str	r2, [r3, #-48]
 15139 0110 08301BE5 		ldr	r3, [fp, #-8]
 15140 0114 0331A0E1 		lsl	r3, r3, #2
 15141 0118 043043E2 		sub	r3, r3, #4
 15142 011c 0B3083E0 		add	r3, r3, fp
 15143 0120 303013E5 		ldr	r3, [r3, #-48]
 15144 0124 0300A0E1 		mov	r0, r3
 15145 0128 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15146 012c 10000BE5 		str	r0, [fp, #-16]
 15147              		.loc 1 6021 9 discriminator 1
 15148 0130 10301BE5 		ldr	r3, [fp, #-16]
 15149 0134 FF3803E2 		and	r3, r3, #16711680
 15150 0138 020853E3 		cmp	r3, #131072
 15151 013c 0100001A 		bne	.L978
 15152              		.loc 1 6021 9 discriminator 5
 15153 0140 0830E0E3 		mvn	r3, #8
 15154              		.loc 1 6021 9
 15155 0144 E30000EA 		b	.L993
 15156              	.L978:
 15157              		.loc 1 6021 9 discriminator 6
 15158 0148 10301BE5 		ldr	r3, [fp, #-16]
 15159 014c 233CA0E1 		lsr	r3, r3, #24
 15160 0150 060053E3 		cmp	r3, #6
 15161 0154 6900000A 		beq	.L979
 15162              		.loc 1 6021 9 discriminator 7
 15163 0158 0130E0E3 		mvn	r3, #1
 15164              		.loc 1 6021 9
 15165 015c DD0000EA 		b	.L993
 15166              	.L976:
 15167              		.loc 1 6021 9 discriminator 2
 15168 0160 08301BE5 		ldr	r3, [fp, #-8]
 15169 0164 0331A0E1 		lsl	r3, r3, #2
 15170 0168 043043E2 		sub	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 373


 15171 016c 0B3083E0 		add	r3, r3, fp
 15172 0170 183013E5 		ldr	r3, [r3, #-24]
 15173 0174 2324A0E1 		lsr	r2, r3, #8
 15174 0178 48301BE5 		ldr	r3, [fp, #-72]
 15175 017c 143093E5 		ldr	r3, [r3, #20]
 15176 0180 030052E1 		cmp	r2, r3
 15177 0184 0100003A 		bcc	.L980
 15178              		.loc 1 6021 9 discriminator 8
 15179 0188 0230E0E3 		mvn	r3, #2
 15180              		.loc 1 6021 9
 15181 018c D10000EA 		b	.L993
 15182              	.L980:
 15183              		.loc 1 6021 9 discriminator 9
 15184 0190 08301BE5 		ldr	r3, [fp, #-8]
 15185 0194 0331A0E1 		lsl	r3, r3, #2
 15186 0198 043043E2 		sub	r3, r3, #4
 15187 019c 0B3083E0 		add	r3, r3, fp
 15188 01a0 183013E5 		ldr	r3, [r3, #-24]
 15189 01a4 2334A0E1 		lsr	r3, r3, #8
 15190 01a8 8322A0E1 		lsl	r2, r3, #5
 15191 01ac 48301BE5 		ldr	r3, [fp, #-72]
 15192 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15193 01b4 033082E0 		add	r3, r2, r3
 15194 01b8 0320A0E1 		mov	r2, r3
 15195 01bc 08301BE5 		ldr	r3, [fp, #-8]
 15196 01c0 0331A0E1 		lsl	r3, r3, #2
 15197 01c4 043043E2 		sub	r3, r3, #4
 15198 01c8 0B3083E0 		add	r3, r3, fp
 15199 01cc 302003E5 		str	r2, [r3, #-48]
 15200 01d0 08301BE5 		ldr	r3, [fp, #-8]
 15201 01d4 0331A0E1 		lsl	r3, r3, #2
 15202 01d8 043043E2 		sub	r3, r3, #4
 15203 01dc 0B3083E0 		add	r3, r3, fp
 15204 01e0 303013E5 		ldr	r3, [r3, #-48]
 15205 01e4 0300A0E1 		mov	r0, r3
 15206 01e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15207 01ec 10000BE5 		str	r0, [fp, #-16]
 15208              		.loc 1 6021 9 discriminator 1
 15209 01f0 10301BE5 		ldr	r3, [fp, #-16]
 15210 01f4 FF3803E2 		and	r3, r3, #16711680
 15211 01f8 020853E3 		cmp	r3, #131072
 15212 01fc 0100001A 		bne	.L981
 15213              		.loc 1 6021 9 discriminator 10
 15214 0200 0830E0E3 		mvn	r3, #8
 15215              		.loc 1 6021 9
 15216 0204 B30000EA 		b	.L993
 15217              	.L981:
 15218              		.loc 1 6021 9 discriminator 11
 15219 0208 10301BE5 		ldr	r3, [fp, #-16]
 15220 020c 233CA0E1 		lsr	r3, r3, #24
 15221 0210 030053E3 		cmp	r3, #3
 15222 0214 0100000A 		beq	.L982
 15223              		.loc 1 6021 9 discriminator 12
 15224 0218 0130E0E3 		mvn	r3, #1
 15225              		.loc 1 6021 9
 15226 021c AD0000EA 		b	.L993
 15227              	.L982:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 374


 15228              		.loc 1 6021 9 discriminator 13
 15229 0220 08301BE5 		ldr	r3, [fp, #-8]
 15230 0224 0331A0E1 		lsl	r3, r3, #2
 15231 0228 043043E2 		sub	r3, r3, #4
 15232 022c 0B3083E0 		add	r3, r3, fp
 15233 0230 183013E5 		ldr	r3, [r3, #-24]
 15234 0234 7F2003E2 		and	r2, r3, #127
 15235 0238 08301BE5 		ldr	r3, [fp, #-8]
 15236 023c 0331A0E1 		lsl	r3, r3, #2
 15237 0240 043043E2 		sub	r3, r3, #4
 15238 0244 0B3083E0 		add	r3, r3, fp
 15239 0248 303013E5 		ldr	r3, [r3, #-48]
 15240 024c 143093E5 		ldr	r3, [r3, #20]
 15241 0250 030052E1 		cmp	r2, r3
 15242 0254 0100003A 		bcc	.L983
 15243              		.loc 1 6021 9 discriminator 14
 15244 0258 0230E0E3 		mvn	r3, #2
 15245              		.loc 1 6021 9
 15246 025c 9D0000EA 		b	.L993
 15247              	.L983:
 15248              		.loc 1 6021 9 discriminator 15
 15249 0260 08301BE5 		ldr	r3, [fp, #-8]
 15250 0264 0331A0E1 		lsl	r3, r3, #2
 15251 0268 043043E2 		sub	r3, r3, #4
 15252 026c 0B3083E0 		add	r3, r3, fp
 15253 0270 183013E5 		ldr	r3, [r3, #-24]
 15254 0274 7F3003E2 		and	r3, r3, #127
 15255 0278 8322A0E1 		lsl	r2, r3, #5
 15256 027c 08301BE5 		ldr	r3, [fp, #-8]
 15257 0280 0331A0E1 		lsl	r3, r3, #2
 15258 0284 043043E2 		sub	r3, r3, #4
 15259 0288 0B3083E0 		add	r3, r3, fp
 15260 028c 303013E5 		ldr	r3, [r3, #-48]
 15261 0290 0C3093E5 		ldr	r3, [r3, #12]
 15262 0294 033082E0 		add	r3, r2, r3
 15263 0298 0320A0E1 		mov	r2, r3
 15264 029c 08301BE5 		ldr	r3, [fp, #-8]
 15265 02a0 0331A0E1 		lsl	r3, r3, #2
 15266 02a4 043043E2 		sub	r3, r3, #4
 15267 02a8 0B3083E0 		add	r3, r3, fp
 15268 02ac 302003E5 		str	r2, [r3, #-48]
 15269 02b0 08301BE5 		ldr	r3, [fp, #-8]
 15270 02b4 0331A0E1 		lsl	r3, r3, #2
 15271 02b8 043043E2 		sub	r3, r3, #4
 15272 02bc 0B3083E0 		add	r3, r3, fp
 15273 02c0 303013E5 		ldr	r3, [r3, #-48]
 15274 02c4 0300A0E1 		mov	r0, r3
 15275 02c8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15276 02cc 10000BE5 		str	r0, [fp, #-16]
 15277              		.loc 1 6021 9 discriminator 1
 15278 02d0 10301BE5 		ldr	r3, [fp, #-16]
 15279 02d4 FF3803E2 		and	r3, r3, #16711680
 15280 02d8 020853E3 		cmp	r3, #131072
 15281 02dc 0100001A 		bne	.L984
 15282              		.loc 1 6021 9 discriminator 16
 15283 02e0 0830E0E3 		mvn	r3, #8
 15284              		.loc 1 6021 9
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 375


 15285 02e4 7B0000EA 		b	.L993
 15286              	.L984:
 15287              		.loc 1 6021 9 discriminator 17
 15288 02e8 10301BE5 		ldr	r3, [fp, #-16]
 15289 02ec 233CA0E1 		lsr	r3, r3, #24
 15290 02f0 060053E3 		cmp	r3, #6
 15291 02f4 0100000A 		beq	.L979
 15292              		.loc 1 6021 9 discriminator 18
 15293 02f8 0130E0E3 		mvn	r3, #1
 15294              		.loc 1 6021 9
 15295 02fc 750000EA 		b	.L993
 15296              	.L979:
6022:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Op[Count],Type_Stat);
6023:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6024:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Op[Count],RME_THD_FLAG_SCHED_PRIO);
 15297              		.loc 1 6024 9 is_stmt 1
 15298 0300 08301BE5 		ldr	r3, [fp, #-8]
 15299 0304 0331A0E1 		lsl	r3, r3, #2
 15300 0308 043043E2 		sub	r3, r3, #4
 15301 030c 0B3083E0 		add	r3, r3, fp
 15302 0310 303013E5 		ldr	r3, [r3, #-48]
 15303 0314 083093E5 		ldr	r3, [r3, #8]
 15304 0318 083003E2 		and	r3, r3, #8
 15305 031c 000053E3 		cmp	r3, #0
 15306 0320 0100001A 		bne	.L985
 15307              		.loc 1 6024 9 is_stmt 0 discriminator 1
 15308 0324 0630E0E3 		mvn	r3, #6
 15309              		.loc 1 6024 9
 15310 0328 6A0000EA 		b	.L993
 15311              	.L985:
6025:../../Source/Kernel/rme_kernel.c ****         
6026:../../Source/Kernel/rme_kernel.c ****         /* See if the target thread is already bound to this core. If no, we just quit */
6027:../../Source/Kernel/rme_kernel.c ****         Thread[Count]=(struct RME_Thd_Struct*)(Thd_Op[Count]->Head.Object);
 15312              		.loc 1 6027 54 is_stmt 1
 15313 032c 08301BE5 		ldr	r3, [fp, #-8]
 15314 0330 0331A0E1 		lsl	r3, r3, #2
 15315 0334 043043E2 		sub	r3, r3, #4
 15316 0338 0B3083E0 		add	r3, r3, fp
 15317 033c 303013E5 		ldr	r3, [r3, #-48]
 15318              		.loc 1 6027 67
 15319 0340 0C3093E5 		ldr	r3, [r3, #12]
 15320              		.loc 1 6027 23
 15321 0344 0320A0E1 		mov	r2, r3
 15322              		.loc 1 6027 22
 15323 0348 08301BE5 		ldr	r3, [fp, #-8]
 15324 034c 0331A0E1 		lsl	r3, r3, #2
 15325 0350 043043E2 		sub	r3, r3, #4
 15326 0354 0B3083E0 		add	r3, r3, fp
 15327 0358 3C2003E5 		str	r2, [r3, #-60]
6028:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Local!=Local)
 15328              		.loc 1 6028 18
 15329 035c 08301BE5 		ldr	r3, [fp, #-8]
 15330 0360 0331A0E1 		lsl	r3, r3, #2
 15331 0364 043043E2 		sub	r3, r3, #4
 15332 0368 0B3083E0 		add	r3, r3, fp
 15333 036c 3C3013E5 		ldr	r3, [r3, #-60]
 15334              		.loc 1 6028 32
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 376


 15335 0370 143093E5 		ldr	r3, [r3, #20]
 15336              		.loc 1 6028 11
 15337 0374 0C201BE5 		ldr	r2, [fp, #-12]
 15338 0378 030052E1 		cmp	r2, r3
 15339 037c 0100000A 		beq	.L986
6029:../../Source/Kernel/rme_kernel.c ****         {
6030:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6031:../../Source/Kernel/rme_kernel.c **** 
6032:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 15340              		.loc 1 6032 20
 15341 0380 CB30E0E3 		mvn	r3, #203
 15342 0384 530000EA 		b	.L993
 15343              	.L986:
6033:../../Source/Kernel/rme_kernel.c ****         }
6034:../../Source/Kernel/rme_kernel.c ****         else
6035:../../Source/Kernel/rme_kernel.c ****         {
6036:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6037:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6038:../../Source/Kernel/rme_kernel.c ****         }
6039:../../Source/Kernel/rme_kernel.c ****         
6040:../../Source/Kernel/rme_kernel.c ****         /* See if the priority relationship is correct */
6041:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Prio_Max<Prio[Count])
 15344              		.loc 1 6041 18
 15345 0388 08301BE5 		ldr	r3, [fp, #-8]
 15346 038c 0331A0E1 		lsl	r3, r3, #2
 15347 0390 043043E2 		sub	r3, r3, #4
 15348 0394 0B3083E0 		add	r3, r3, fp
 15349 0398 3C3013E5 		ldr	r3, [r3, #-60]
 15350              		.loc 1 6041 32
 15351 039c 242093E5 		ldr	r2, [r3, #36]
 15352              		.loc 1 6041 46
 15353 03a0 08301BE5 		ldr	r3, [fp, #-8]
 15354 03a4 0331A0E1 		lsl	r3, r3, #2
 15355 03a8 043043E2 		sub	r3, r3, #4
 15356 03ac 0B3083E0 		add	r3, r3, fp
 15357 03b0 243013E5 		ldr	r3, [r3, #-36]
 15358              		.loc 1 6041 11
 15359 03b4 030052E1 		cmp	r2, r3
 15360 03b8 0100002A 		bcs	.L987
6042:../../Source/Kernel/rme_kernel.c ****         {
6043:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6044:../../Source/Kernel/rme_kernel.c **** 
6045:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 15361              		.loc 1 6045 20
 15362 03bc CC30E0E3 		mvn	r3, #204
 15363 03c0 440000EA 		b	.L993
 15364              	.L987:
6018:../../Source/Kernel/rme_kernel.c ****     {
 15365              		.loc 1 6018 36 discriminator 2
 15366 03c4 08301BE5 		ldr	r3, [fp, #-8]
 15367 03c8 013083E2 		add	r3, r3, #1
 15368 03cc 08300BE5 		str	r3, [fp, #-8]
 15369              	.L975:
6018:../../Source/Kernel/rme_kernel.c ****     {
 15370              		.loc 1 6018 23 discriminator 1
 15371 03d0 08201BE5 		ldr	r2, [fp, #-8]
 15372 03d4 50301BE5 		ldr	r3, [fp, #-80]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 377


 15373 03d8 030052E1 		cmp	r2, r3
 15374 03dc 28FFFF3A 		bcc	.L988
6046:../../Source/Kernel/rme_kernel.c ****         }
6047:../../Source/Kernel/rme_kernel.c ****         else
6048:../../Source/Kernel/rme_kernel.c ****         {
6049:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6050:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6051:../../Source/Kernel/rme_kernel.c ****         }
6052:../../Source/Kernel/rme_kernel.c ****     }
6053:../../Source/Kernel/rme_kernel.c ****     
6054:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6055:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 15375              		.loc 1 6055 5
 15376 03e0 0010A0E3 		mov	r1, #0
 15377 03e4 4C001BE5 		ldr	r0, [fp, #-76]
 15378 03e8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6056:../../Source/Kernel/rme_kernel.c ****     
6057:../../Source/Kernel/rme_kernel.c ****     /* Change priority for each thread, and we'll switch to the real highest priority
6058:../../Source/Kernel/rme_kernel.c ****      * thread after all these changes. This can help remove the excessive overhead. */
6059:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15379              		.loc 1 6059 14
 15380 03ec 0030A0E3 		mov	r3, #0
 15381 03f0 08300BE5 		str	r3, [fp, #-8]
 15382              		.loc 1 6059 5
 15383 03f4 2F0000EA 		b	.L989
 15384              	.L992:
6060:../../Source/Kernel/rme_kernel.c ****     {
6061:../../Source/Kernel/rme_kernel.c ****         /* See if this thread is currently in the runqueue */
6062:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.State==RME_THD_READY)
 15385              		.loc 1 6062 18
 15386 03f8 08301BE5 		ldr	r3, [fp, #-8]
 15387 03fc 0331A0E1 		lsl	r3, r3, #2
 15388 0400 043043E2 		sub	r3, r3, #4
 15389 0404 0B3083E0 		add	r3, r3, fp
 15390 0408 3C3013E5 		ldr	r3, [r3, #-60]
 15391              		.loc 1 6062 32
 15392 040c 1C3093E5 		ldr	r3, [r3, #28]
 15393              		.loc 1 6062 11
 15394 0410 000053E3 		cmp	r3, #0
 15395 0414 1900001A 		bne	.L990
6063:../../Source/Kernel/rme_kernel.c ****         {
6064:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6065:../../Source/Kernel/rme_kernel.c **** 
6066:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue, change priority, and add it back */
6067:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thread[Count]);
 15396              		.loc 1 6067 13
 15397 0418 08301BE5 		ldr	r3, [fp, #-8]
 15398 041c 0331A0E1 		lsl	r3, r3, #2
 15399 0420 043043E2 		sub	r3, r3, #4
 15400 0424 0B3083E0 		add	r3, r3, fp
 15401 0428 3C3013E5 		ldr	r3, [r3, #-60]
 15402 042c 0300A0E1 		mov	r0, r3
 15403 0430 FEFFFFEB 		bl	_RME_Run_Del
6068:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15404              		.loc 1 6068 19
 15405 0434 08301BE5 		ldr	r3, [fp, #-8]
 15406 0438 0331A0E1 		lsl	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 378


 15407 043c 043043E2 		sub	r3, r3, #4
 15408 0440 0B3083E0 		add	r3, r3, fp
 15409 0444 3C2013E5 		ldr	r2, [r3, #-60]
 15410              		.loc 1 6068 43
 15411 0448 08301BE5 		ldr	r3, [fp, #-8]
 15412 044c 0331A0E1 		lsl	r3, r3, #2
 15413 0450 043043E2 		sub	r3, r3, #4
 15414 0454 0B3083E0 		add	r3, r3, fp
 15415 0458 243013E5 		ldr	r3, [r3, #-36]
 15416              		.loc 1 6068 38
 15417 045c 203082E5 		str	r3, [r2, #32]
6069:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread[Count]);
 15418              		.loc 1 6069 13
 15419 0460 08301BE5 		ldr	r3, [fp, #-8]
 15420 0464 0331A0E1 		lsl	r3, r3, #2
 15421 0468 043043E2 		sub	r3, r3, #4
 15422 046c 0B3083E0 		add	r3, r3, fp
 15423 0470 3C3013E5 		ldr	r3, [r3, #-60]
 15424 0474 0300A0E1 		mov	r0, r3
 15425 0478 FEFFFFEB 		bl	_RME_Run_Ins
 15426 047c 0A0000EA 		b	.L991
 15427              	.L990:
6070:../../Source/Kernel/rme_kernel.c ****         }
6071:../../Source/Kernel/rme_kernel.c ****         /* If it is BLOCKED, TIMEOUT or EXCPEND, changing the number will suffice */
6072:../../Source/Kernel/rme_kernel.c ****         else
6073:../../Source/Kernel/rme_kernel.c ****         {
6074:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6075:../../Source/Kernel/rme_kernel.c **** 
6076:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15428              		.loc 1 6076 19
 15429 0480 08301BE5 		ldr	r3, [fp, #-8]
 15430 0484 0331A0E1 		lsl	r3, r3, #2
 15431 0488 043043E2 		sub	r3, r3, #4
 15432 048c 0B3083E0 		add	r3, r3, fp
 15433 0490 3C2013E5 		ldr	r2, [r3, #-60]
 15434              		.loc 1 6076 43
 15435 0494 08301BE5 		ldr	r3, [fp, #-8]
 15436 0498 0331A0E1 		lsl	r3, r3, #2
 15437 049c 043043E2 		sub	r3, r3, #4
 15438 04a0 0B3083E0 		add	r3, r3, fp
 15439 04a4 243013E5 		ldr	r3, [r3, #-36]
 15440              		.loc 1 6076 38
 15441 04a8 203082E5 		str	r3, [r2, #32]
 15442              	.L991:
6059:../../Source/Kernel/rme_kernel.c ****     {
 15443              		.loc 1 6059 36 discriminator 2
 15444 04ac 08301BE5 		ldr	r3, [fp, #-8]
 15445 04b0 013083E2 		add	r3, r3, #1
 15446 04b4 08300BE5 		str	r3, [fp, #-8]
 15447              	.L989:
6059:../../Source/Kernel/rme_kernel.c ****     {
 15448              		.loc 1 6059 23 discriminator 1
 15449 04b8 08201BE5 		ldr	r2, [fp, #-8]
 15450 04bc 50301BE5 		ldr	r3, [fp, #-80]
 15451 04c0 030052E1 		cmp	r2, r3
 15452 04c4 CBFFFF3A 		bcc	.L992
6077:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 379


6078:../../Source/Kernel/rme_kernel.c ****     }
6079:../../Source/Kernel/rme_kernel.c ****     
6080:../../Source/Kernel/rme_kernel.c ****     /* Pick the current highest priority thread to run */
6081:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 15453              		.loc 1 6081 5
 15454 04c8 0C101BE5 		ldr	r1, [fp, #-12]
 15455 04cc 4C001BE5 		ldr	r0, [fp, #-76]
 15456 04d0 FEFFFFEB 		bl	_RME_Kern_High
6082:../../Source/Kernel/rme_kernel.c **** 
6083:../../Source/Kernel/rme_kernel.c ****     return 0;
 15457              		.loc 1 6083 12
 15458 04d4 0030A0E3 		mov	r3, #0
 15459              	.L993:
6084:../../Source/Kernel/rme_kernel.c **** }
 15460              		.loc 1 6084 1
 15461 04d8 0300A0E1 		mov	r0, r3
 15462 04dc 04D04BE2 		sub	sp, fp, #4
 15463              		.cfi_def_cfa 13, 8
 15464              		@ sp needed
 15465 04e0 0088BDE8 		pop	{fp, pc}
 15466              		.cfi_endproc
 15467              	.LFE61:
 15469              		.section	.text._RME_Thd_Sched_Rcv,"ax",%progbits
 15470              		.align	2
 15471              		.syntax unified
 15472              		.arm
 15474              	_RME_Thd_Sched_Rcv:
 15475              	.LFB62:
6085:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Prio ******************************************/
6086:../../Source/Kernel/rme_kernel.c **** 
6087:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Rcv ************************************************
6088:../../Source/Kernel/rme_kernel.c **** Description : Try to receive a notification from the scheduler queue. This
6089:../../Source/Kernel/rme_kernel.c ****               can only be called from the same core the thread is on.
6090:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6091:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the scheduler thread. We
6092:../../Source/Kernel/rme_kernel.c ****                                   are going to get timeout or exception
6093:../../Source/Kernel/rme_kernel.c ****                                   notifications for the threads that it is
6094:../../Source/Kernel/rme_kernel.c ****                                   responsible for scheduling. This capability
6095:../../Source/Kernel/rme_kernel.c ****                                   must point to a thread on the same core.
6096:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6097:../../Source/Kernel/rme_kernel.c **** Output      : None.
6098:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the thread ID; or an error code.
6099:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6100:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Rcv(struct RME_Cap_Cpt* Cpt,
6101:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd)
6102:../../Source/Kernel/rme_kernel.c **** {
 15476              		.loc 1 6102 1
 15477              		.cfi_startproc
 15478              		@ args = 0, pretend = 0, frame = 32
 15479              		@ frame_needed = 1, uses_anonymous_args = 0
 15480 0000 00482DE9 		push	{fp, lr}
 15481              		.cfi_def_cfa_offset 8
 15482              		.cfi_offset 11, -8
 15483              		.cfi_offset 14, -4
 15484 0004 04B08DE2 		add	fp, sp, #4
 15485              		.cfi_def_cfa 11, 4
 15486 0008 20D04DE2 		sub	sp, sp, #32
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 380


 15487 000c 20000BE5 		str	r0, [fp, #-32]
 15488 0010 24100BE5 		str	r1, [fp, #-36]
6103:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
6104:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
6105:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
6106:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6107:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag;
6108:../../Source/Kernel/rme_kernel.c ****     
6109:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6110:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15489              		.loc 1 6110 5
 15490 0014 24301BE5 		ldr	r3, [fp, #-36]
 15491 0018 803003E2 		and	r3, r3, #128
 15492 001c 000053E3 		cmp	r3, #0
 15493 0020 1C00001A 		bne	.L995
 15494              		.loc 1 6110 5 is_stmt 0 discriminator 1
 15495 0024 20301BE5 		ldr	r3, [fp, #-32]
 15496 0028 142093E5 		ldr	r2, [r3, #20]
 15497 002c 24301BE5 		ldr	r3, [fp, #-36]
 15498 0030 030052E1 		cmp	r2, r3
 15499 0034 0100008A 		bhi	.L996
 15500              		.loc 1 6110 5 discriminator 3
 15501 0038 0230E0E3 		mvn	r3, #2
 15502              		.loc 1 6110 5
 15503 003c 970000EA 		b	.L997
 15504              	.L996:
 15505              		.loc 1 6110 5 discriminator 4
 15506 0040 24301BE5 		ldr	r3, [fp, #-36]
 15507 0044 8322A0E1 		lsl	r2, r3, #5
 15508 0048 20301BE5 		ldr	r3, [fp, #-32]
 15509 004c 0C3093E5 		ldr	r3, [r3, #12]
 15510 0050 033082E0 		add	r3, r2, r3
 15511 0054 08300BE5 		str	r3, [fp, #-8]
 15512 0058 08301BE5 		ldr	r3, [fp, #-8]
 15513 005c 0300A0E1 		mov	r0, r3
 15514 0060 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15515 0064 10000BE5 		str	r0, [fp, #-16]
 15516              		.loc 1 6110 5 discriminator 1
 15517 0068 10301BE5 		ldr	r3, [fp, #-16]
 15518 006c FF3803E2 		and	r3, r3, #16711680
 15519 0070 020853E3 		cmp	r3, #131072
 15520 0074 0100001A 		bne	.L998
 15521              		.loc 1 6110 5 discriminator 5
 15522 0078 0830E0E3 		mvn	r3, #8
 15523              		.loc 1 6110 5
 15524 007c 870000EA 		b	.L997
 15525              	.L998:
 15526              		.loc 1 6110 5 discriminator 6
 15527 0080 10301BE5 		ldr	r3, [fp, #-16]
 15528 0084 233CA0E1 		lsr	r3, r3, #24
 15529 0088 060053E3 		cmp	r3, #6
 15530 008c 3F00000A 		beq	.L999
 15531              		.loc 1 6110 5 discriminator 7
 15532 0090 0130E0E3 		mvn	r3, #1
 15533              		.loc 1 6110 5
 15534 0094 810000EA 		b	.L997
 15535              	.L995:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 381


 15536              		.loc 1 6110 5 discriminator 2
 15537 0098 24301BE5 		ldr	r3, [fp, #-36]
 15538 009c 2324A0E1 		lsr	r2, r3, #8
 15539 00a0 20301BE5 		ldr	r3, [fp, #-32]
 15540 00a4 143093E5 		ldr	r3, [r3, #20]
 15541 00a8 030052E1 		cmp	r2, r3
 15542 00ac 0100003A 		bcc	.L1000
 15543              		.loc 1 6110 5 discriminator 8
 15544 00b0 0230E0E3 		mvn	r3, #2
 15545              		.loc 1 6110 5
 15546 00b4 790000EA 		b	.L997
 15547              	.L1000:
 15548              		.loc 1 6110 5 discriminator 9
 15549 00b8 24301BE5 		ldr	r3, [fp, #-36]
 15550 00bc 2334A0E1 		lsr	r3, r3, #8
 15551 00c0 8322A0E1 		lsl	r2, r3, #5
 15552 00c4 20301BE5 		ldr	r3, [fp, #-32]
 15553 00c8 0C3093E5 		ldr	r3, [r3, #12]
 15554 00cc 033082E0 		add	r3, r2, r3
 15555 00d0 08300BE5 		str	r3, [fp, #-8]
 15556 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15557 00d8 0300A0E1 		mov	r0, r3
 15558 00dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15559 00e0 10000BE5 		str	r0, [fp, #-16]
 15560              		.loc 1 6110 5 discriminator 1
 15561 00e4 10301BE5 		ldr	r3, [fp, #-16]
 15562 00e8 FF3803E2 		and	r3, r3, #16711680
 15563 00ec 020853E3 		cmp	r3, #131072
 15564 00f0 0100001A 		bne	.L1001
 15565              		.loc 1 6110 5 discriminator 10
 15566 00f4 0830E0E3 		mvn	r3, #8
 15567              		.loc 1 6110 5
 15568 00f8 680000EA 		b	.L997
 15569              	.L1001:
 15570              		.loc 1 6110 5 discriminator 11
 15571 00fc 10301BE5 		ldr	r3, [fp, #-16]
 15572 0100 233CA0E1 		lsr	r3, r3, #24
 15573 0104 030053E3 		cmp	r3, #3
 15574 0108 0100000A 		beq	.L1002
 15575              		.loc 1 6110 5 discriminator 12
 15576 010c 0130E0E3 		mvn	r3, #1
 15577              		.loc 1 6110 5
 15578 0110 620000EA 		b	.L997
 15579              	.L1002:
 15580              		.loc 1 6110 5 discriminator 13
 15581 0114 24301BE5 		ldr	r3, [fp, #-36]
 15582 0118 7F2003E2 		and	r2, r3, #127
 15583 011c 08301BE5 		ldr	r3, [fp, #-8]
 15584 0120 143093E5 		ldr	r3, [r3, #20]
 15585 0124 030052E1 		cmp	r2, r3
 15586 0128 0100003A 		bcc	.L1003
 15587              		.loc 1 6110 5 discriminator 14
 15588 012c 0230E0E3 		mvn	r3, #2
 15589              		.loc 1 6110 5
 15590 0130 5A0000EA 		b	.L997
 15591              	.L1003:
 15592              		.loc 1 6110 5 discriminator 15
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 382


 15593 0134 24301BE5 		ldr	r3, [fp, #-36]
 15594 0138 7F3003E2 		and	r3, r3, #127
 15595 013c 8322A0E1 		lsl	r2, r3, #5
 15596 0140 08301BE5 		ldr	r3, [fp, #-8]
 15597 0144 0C3093E5 		ldr	r3, [r3, #12]
 15598 0148 033082E0 		add	r3, r2, r3
 15599 014c 08300BE5 		str	r3, [fp, #-8]
 15600 0150 08301BE5 		ldr	r3, [fp, #-8]
 15601 0154 0300A0E1 		mov	r0, r3
 15602 0158 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15603 015c 10000BE5 		str	r0, [fp, #-16]
 15604              		.loc 1 6110 5 discriminator 1
 15605 0160 10301BE5 		ldr	r3, [fp, #-16]
 15606 0164 FF3803E2 		and	r3, r3, #16711680
 15607 0168 020853E3 		cmp	r3, #131072
 15608 016c 0100001A 		bne	.L1004
 15609              		.loc 1 6110 5 discriminator 16
 15610 0170 0830E0E3 		mvn	r3, #8
 15611              		.loc 1 6110 5
 15612 0174 490000EA 		b	.L997
 15613              	.L1004:
 15614              		.loc 1 6110 5 discriminator 17
 15615 0178 10301BE5 		ldr	r3, [fp, #-16]
 15616 017c 233CA0E1 		lsr	r3, r3, #24
 15617 0180 060053E3 		cmp	r3, #6
 15618 0184 0100000A 		beq	.L999
 15619              		.loc 1 6110 5 discriminator 18
 15620 0188 0130E0E3 		mvn	r3, #1
 15621              		.loc 1 6110 5
 15622 018c 430000EA 		b	.L997
 15623              	.L999:
6111:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
6112:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6113:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_RCV);
 15624              		.loc 1 6113 5 is_stmt 1
 15625 0190 08301BE5 		ldr	r3, [fp, #-8]
 15626 0194 083093E5 		ldr	r3, [r3, #8]
 15627 0198 203003E2 		and	r3, r3, #32
 15628 019c 000053E3 		cmp	r3, #0
 15629 01a0 0100001A 		bne	.L1005
 15630              		.loc 1 6113 5 is_stmt 0 discriminator 1
 15631 01a4 0630E0E3 		mvn	r3, #6
 15632              		.loc 1 6113 5
 15633 01a8 3C0000EA 		b	.L997
 15634              	.L1005:
6114:../../Source/Kernel/rme_kernel.c ****     
6115:../../Source/Kernel/rme_kernel.c ****     /* Check if we are on the same core with the target thread */
6116:../../Source/Kernel/rme_kernel.c ****     Scheduler=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 15635              		.loc 1 6116 51 is_stmt 1
 15636 01ac 08301BE5 		ldr	r3, [fp, #-8]
 15637 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15638              		.loc 1 6116 14
 15639 01b4 14300BE5 		str	r3, [fp, #-20]
6117:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=RME_CPU_LOCAL())
 15640              		.loc 1 6117 24
 15641 01b8 14301BE5 		ldr	r3, [fp, #-20]
 15642 01bc 142093E5 		ldr	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 383


 15643              		.loc 1 6117 7
 15644 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15645 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15646 01c8 030052E1 		cmp	r2, r3
 15647 01cc 0100000A 		beq	.L1006
6118:../../Source/Kernel/rme_kernel.c ****     {
6119:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6120:../../Source/Kernel/rme_kernel.c **** 
6121:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15648              		.loc 1 6121 16
 15649 01d0 CB30E0E3 		mvn	r3, #203
 15650 01d4 310000EA 		b	.L997
 15651              	.L1006:
6122:../../Source/Kernel/rme_kernel.c ****     }
6123:../../Source/Kernel/rme_kernel.c ****     else
6124:../../Source/Kernel/rme_kernel.c ****     {
6125:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6126:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6127:../../Source/Kernel/rme_kernel.c ****     }
6128:../../Source/Kernel/rme_kernel.c ****     
6129:../../Source/Kernel/rme_kernel.c ****     /* Check if there are any notifications */
6130:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Event.Next==&(Scheduler->Sched.Event))
 15652              		.loc 1 6130 30
 15653 01d8 14301BE5 		ldr	r3, [fp, #-20]
 15654 01dc 3C2093E5 		ldr	r2, [r3, #60]
 15655              		.loc 1 6130 37
 15656 01e0 14301BE5 		ldr	r3, [fp, #-20]
 15657 01e4 3C3083E2 		add	r3, r3, #60
 15658              		.loc 1 6130 7
 15659 01e8 030052E1 		cmp	r2, r3
 15660 01ec 0100001A 		bne	.L1007
6131:../../Source/Kernel/rme_kernel.c ****     {
6132:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6133:../../Source/Kernel/rme_kernel.c **** 
6134:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 15661              		.loc 1 6134 16
 15662 01f0 CE30E0E3 		mvn	r3, #206
 15663 01f4 290000EA 		b	.L997
 15664              	.L1007:
6135:../../Source/Kernel/rme_kernel.c ****     }
6136:../../Source/Kernel/rme_kernel.c ****     else
6137:../../Source/Kernel/rme_kernel.c ****     {
6138:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6139:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6140:../../Source/Kernel/rme_kernel.c ****     }
6141:../../Source/Kernel/rme_kernel.c ****     
6142:../../Source/Kernel/rme_kernel.c ****     /* Return one notification and delete it from the notification list */
6143:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)(Scheduler->Sched.Event.Next-1U);
 15665              		.loc 1 6143 59
 15666 01f8 14301BE5 		ldr	r3, [fp, #-20]
 15667 01fc 3C3093E5 		ldr	r3, [r3, #60]
 15668              		.loc 1 6143 11
 15669 0200 083043E2 		sub	r3, r3, #8
 15670 0204 18300BE5 		str	r3, [fp, #-24]
6144:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 15671              		.loc 1 6144 5
 15672 0208 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 384


 15673 020c 0C2093E5 		ldr	r2, [r3, #12]
 15674 0210 18301BE5 		ldr	r3, [fp, #-24]
 15675 0214 083093E5 		ldr	r3, [r3, #8]
 15676 0218 0310A0E1 		mov	r1, r3
 15677 021c 0200A0E1 		mov	r0, r2
 15678 0220 FEFFFFEB 		bl	_RME_List_Del
6145:../../Source/Kernel/rme_kernel.c ****     /* We need to do this because we are using this to detect whether the notification is sent */
6146:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 15679              		.loc 1 6146 5
 15680 0224 18301BE5 		ldr	r3, [fp, #-24]
 15681 0228 083083E2 		add	r3, r3, #8
 15682 022c 0300A0E1 		mov	r0, r3
 15683 0230 FEFFFFEB 		bl	_RME_List_Crt
6147:../../Source/Kernel/rme_kernel.c ****     
6148:../../Source/Kernel/rme_kernel.c ****     /* Exception pending */
6149:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15684              		.loc 1 6149 21
 15685 0234 18301BE5 		ldr	r3, [fp, #-24]
 15686 0238 1C3093E5 		ldr	r3, [r3, #28]
 15687              		.loc 1 6149 7
 15688 023c 030053E3 		cmp	r3, #3
 15689 0240 0900001A 		bne	.L1008
6150:../../Source/Kernel/rme_kernel.c ****     {
6151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6152:../../Source/Kernel/rme_kernel.c ****         
6153:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_EXCPEND_FLAG;
 15690              		.loc 1 6153 13
 15691 0244 0131A0E3 		mov	r3, #1073741824
 15692 0248 0C300BE5 		str	r3, [fp, #-12]
6154:../../Source/Kernel/rme_kernel.c ****         
6155:../../Source/Kernel/rme_kernel.c ****         /* Is it also out of timeslice? */
6156:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice==0U)
 15693              		.loc 1 6156 25
 15694 024c 18301BE5 		ldr	r3, [fp, #-24]
 15695 0250 183093E5 		ldr	r3, [r3, #24]
 15696              		.loc 1 6156 11
 15697 0254 000053E3 		cmp	r3, #0
 15698 0258 0C00001A 		bne	.L1009
6157:../../Source/Kernel/rme_kernel.c ****         {
6158:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6159:../../Source/Kernel/rme_kernel.c ****             
6160:../../Source/Kernel/rme_kernel.c ****             Flag|=RME_THD_TIMEOUT_FLAG;
 15699              		.loc 1 6160 17
 15700 025c 0C301BE5 		ldr	r3, [fp, #-12]
 15701 0260 023283E3 		orr	r3, r3, #536870912
 15702 0264 0C300BE5 		str	r3, [fp, #-12]
 15703 0268 080000EA 		b	.L1009
 15704              	.L1008:
6161:../../Source/Kernel/rme_kernel.c ****         }
6162:../../Source/Kernel/rme_kernel.c ****         else
6163:../../Source/Kernel/rme_kernel.c ****         {
6164:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6165:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6166:../../Source/Kernel/rme_kernel.c ****         }
6167:../../Source/Kernel/rme_kernel.c ****     }
6168:../../Source/Kernel/rme_kernel.c ****     /* Timeout */
6169:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_TIMEOUT)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 385


 15705              		.loc 1 6169 26
 15706 026c 18301BE5 		ldr	r3, [fp, #-24]
 15707 0270 1C3093E5 		ldr	r3, [r3, #28]
 15708              		.loc 1 6169 12
 15709 0274 020053E3 		cmp	r3, #2
 15710 0278 0200001A 		bne	.L1010
6170:../../Source/Kernel/rme_kernel.c ****     {
6171:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6172:../../Source/Kernel/rme_kernel.c ****         
6173:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_TIMEOUT_FLAG;
 15711              		.loc 1 6173 13
 15712 027c 0232A0E3 		mov	r3, #536870912
 15713 0280 0C300BE5 		str	r3, [fp, #-12]
 15714 0284 010000EA 		b	.L1009
 15715              	.L1010:
6174:../../Source/Kernel/rme_kernel.c ****     }
6175:../../Source/Kernel/rme_kernel.c ****     /* Spurious notification, cause eliminated before this sched rcv */
6176:../../Source/Kernel/rme_kernel.c ****     else
6177:../../Source/Kernel/rme_kernel.c ****     {
6178:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6179:../../Source/Kernel/rme_kernel.c ****         
6180:../../Source/Kernel/rme_kernel.c ****         Flag=0U;
 15716              		.loc 1 6180 13
 15717 0288 0030A0E3 		mov	r3, #0
 15718 028c 0C300BE5 		str	r3, [fp, #-12]
 15719              	.L1009:
6181:../../Source/Kernel/rme_kernel.c ****     }
6182:../../Source/Kernel/rme_kernel.c ****     
6183:../../Source/Kernel/rme_kernel.c ****     /* Return the notification TID with the flags */
6184:../../Source/Kernel/rme_kernel.c ****     return (rme_ret_t)(Thread->Sched.TID|Flag);
 15720              		.loc 1 6184 37
 15721 0290 18301BE5 		ldr	r3, [fp, #-24]
 15722 0294 102093E5 		ldr	r2, [r3, #16]
 15723              		.loc 1 6184 41
 15724 0298 0C301BE5 		ldr	r3, [fp, #-12]
 15725 029c 033082E1 		orr	r3, r2, r3
 15726              	.L997:
6185:../../Source/Kernel/rme_kernel.c **** }
 15727              		.loc 1 6185 1
 15728 02a0 0300A0E1 		mov	r0, r3
 15729 02a4 04D04BE2 		sub	sp, fp, #4
 15730              		.cfi_def_cfa 13, 8
 15731              		@ sp needed
 15732 02a8 0088BDE8 		pop	{fp, pc}
 15733              		.cfi_endproc
 15734              	.LFE62:
 15736              		.section	.text._RME_Thd_Time_Xfer,"ax",%progbits
 15737              		.align	2
 15738              		.syntax unified
 15739              		.arm
 15741              	_RME_Thd_Time_Xfer:
 15742              	.LFB63:
6186:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Rcv *******************************************/
6187:../../Source/Kernel/rme_kernel.c **** 
6188:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Time_Xfer ************************************************
6189:../../Source/Kernel/rme_kernel.c **** Description : Transfer time from one thread to another. This can only be called
6190:../../Source/Kernel/rme_kernel.c ****               from the core that the thread is on, and the the two threads
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 386


6191:../../Source/Kernel/rme_kernel.c ****               involved in the time transfer must be on the same core.
6192:../../Source/Kernel/rme_kernel.c ****               If the time transfered is more than or equal to what the source
6193:../../Source/Kernel/rme_kernel.c ****               have, the source will be out of time or blocked. If the source is
6194:../../Source/Kernel/rme_kernel.c ****               both out of time and blocked, we do not send the notification;
6195:../../Source/Kernel/rme_kernel.c ****               Instead, we send the notification when the receive endpoint
6196:../../Source/Kernel/rme_kernel.c ****               actually receive something.
6197:../../Source/Kernel/rme_kernel.c ****               It is possible to transfer time to threads have a lower priority,
6198:../../Source/Kernel/rme_kernel.c ****               and it is also possible to transfer time to threads that have a
6199:../../Source/Kernel/rme_kernel.c ****               higher priority. In the latter case, and if the source is
6200:../../Source/Kernel/rme_kernel.c ****               currently running, a preemption will occur. However, it is not
6201:../../Source/Kernel/rme_kernel.c ****               allowed to transfer time to a thread with higher maximum priority,
6202:../../Source/Kernel/rme_kernel.c ****               and this guarantees that the quality of time can only degrade.
6203:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of threads in the system:
6204:../../Source/Kernel/rme_kernel.c ****               1. Init threads - They are created at boot-time and have infinite
6205:../../Source/Kernel/rme_kernel.c ****                                 budget.
6206:../../Source/Kernel/rme_kernel.c ****               2. Infinite threads - They are created later but have infinite
6207:../../Source/Kernel/rme_kernel.c ****                                     budget.
6208:../../Source/Kernel/rme_kernel.c ****               3. Normal threads - They are created later and have a finite
6209:../../Source/Kernel/rme_kernel.c ****                                   budget.
6210:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of transfer in the system:
6211:../../Source/Kernel/rme_kernel.c ****               1. Normal transfers - They transfer a finite budget.
6212:../../Source/Kernel/rme_kernel.c ****               2. Infinite transfers - They attempt to transfer an infinite
6213:../../Source/Kernel/rme_kernel.c ****                                       budget but will not revoke the timeslices
6214:../../Source/Kernel/rme_kernel.c ****                                       of the source if the source have infinite
6215:../../Source/Kernel/rme_kernel.c ****                                       budget.
6216:../../Source/Kernel/rme_kernel.c ****               3. Revoking transfers - They attempt to transfer an infinite
6217:../../Source/Kernel/rme_kernel.c ****                                       budget but will revoke the timeslices of
6218:../../Source/Kernel/rme_kernel.c ****                                       the source if the source is an infinite
6219:../../Source/Kernel/rme_kernel.c ****                                       thread.
6220:../../Source/Kernel/rme_kernel.c ****               Normal budget transferring rules:
6221:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6222:../../Source/Kernel/rme_kernel.c ****                 Nom   |   From   |     Init     |   Infinite   |    Normal
6223:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6224:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      T-
6225:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6226:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      T-
6227:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6228:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -A      |      -A      |      TA
6229:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6230:../../Source/Kernel/rme_kernel.c ****               Infinite budget transferring rules:
6231:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6232:../../Source/Kernel/rme_kernel.c ****                 Inf   |   From   |     Init     |   Infinite   |    Normal
6233:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6234:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      S-
6235:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6236:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      S-
6237:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6238:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      -I      |      TA
6239:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6240:../../Source/Kernel/rme_kernel.c ****               Revoking budget transferring rules:
6241:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6242:../../Source/Kernel/rme_kernel.c ****                 Rev   |   From   |     Init     |   Infinite   |    Normal
6243:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6244:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      S-      |      S-
6245:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6246:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      S-      |      S-
6247:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 387


6248:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      SI      |      TA
6249:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6250:../../Source/Kernel/rme_kernel.c ****               Notations:
6251:../../Source/Kernel/rme_kernel.c ****               -:Nothing will happen on source/destination.
6252:../../Source/Kernel/rme_kernel.c ****               T:Source timeout if all transferred.
6253:../../Source/Kernel/rme_kernel.c ****               S:Source will definitely timeout.
6254:../../Source/Kernel/rme_kernel.c ****               A:Destination accept if not overflow.
6255:../../Source/Kernel/rme_kernel.c ****               I:Destination will definitely become an infinite thread.
6256:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6257:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6258:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Dst - The destination thread.
6259:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6260:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Src - The source thread.
6261:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6262:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Time - The time to transfer, in slices.
6263:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INIT_TIME for revoking transfer.
6264:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INF_TIME for infinite trasnfer.
6265:../../Source/Kernel/rme_kernel.c **** Output      : None.
6266:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the destination time amount; or an
6267:../../Source/Kernel/rme_kernel.c ****                           error code.
6268:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6269:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Time_Xfer(struct RME_Cap_Cpt* Cpt,
6270:../../Source/Kernel/rme_kernel.c ****                                     struct RME_Reg_Struct* Reg,
6271:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Dst,
6272:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Src,
6273:../../Source/Kernel/rme_kernel.c ****                                     rme_ptr_t Time)
6274:../../Source/Kernel/rme_kernel.c **** {
 15743              		.loc 1 6274 1
 15744              		.cfi_startproc
 15745              		@ args = 4, pretend = 0, frame = 48
 15746              		@ frame_needed = 1, uses_anonymous_args = 0
 15747 0000 00482DE9 		push	{fp, lr}
 15748              		.cfi_def_cfa_offset 8
 15749              		.cfi_offset 11, -8
 15750              		.cfi_offset 14, -4
 15751 0004 04B08DE2 		add	fp, sp, #4
 15752              		.cfi_def_cfa 11, 4
 15753 0008 30D04DE2 		sub	sp, sp, #48
 15754 000c 28000BE5 		str	r0, [fp, #-40]
 15755 0010 2C100BE5 		str	r1, [fp, #-44]
 15756 0014 30200BE5 		str	r2, [fp, #-48]
 15757 0018 34300BE5 		str	r3, [fp, #-52]
6275:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Dst_Op;
6276:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Src_Op;
6277:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Dst;
6278:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Src;
6279:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6280:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Time_Xfer;
6281:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6282:../../Source/Kernel/rme_kernel.c ****     
6283:../../Source/Kernel/rme_kernel.c ****     /* We may allow transferring infinite time here */
6284:../../Source/Kernel/rme_kernel.c ****     if(Time==0U)
 15758              		.loc 1 6284 7
 15759 001c 04309BE5 		ldr	r3, [fp, #4]
 15760 0020 000053E3 		cmp	r3, #0
 15761 0024 0100001A 		bne	.L1012
6285:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 388


6286:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6287:../../Source/Kernel/rme_kernel.c **** 
6288:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15762              		.loc 1 6288 16
 15763 0028 CB30E0E3 		mvn	r3, #203
 15764 002c 770100EA 		b	.L1013
 15765              	.L1012:
6289:../../Source/Kernel/rme_kernel.c ****     }
6290:../../Source/Kernel/rme_kernel.c ****     else
6291:../../Source/Kernel/rme_kernel.c ****     {
6292:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6293:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6294:../../Source/Kernel/rme_kernel.c ****     }
6295:../../Source/Kernel/rme_kernel.c ****     
6296:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6297:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Dst,RME_CAP_TYPE_THD,
 15766              		.loc 1 6297 5
 15767 0030 30301BE5 		ldr	r3, [fp, #-48]
 15768 0034 803003E2 		and	r3, r3, #128
 15769 0038 000053E3 		cmp	r3, #0
 15770 003c 1C00001A 		bne	.L1014
 15771              		.loc 1 6297 5 is_stmt 0 discriminator 1
 15772 0040 28301BE5 		ldr	r3, [fp, #-40]
 15773 0044 142093E5 		ldr	r2, [r3, #20]
 15774 0048 30301BE5 		ldr	r3, [fp, #-48]
 15775 004c 030052E1 		cmp	r2, r3
 15776 0050 0100008A 		bhi	.L1015
 15777              		.loc 1 6297 5 discriminator 3
 15778 0054 0230E0E3 		mvn	r3, #2
 15779              		.loc 1 6297 5
 15780 0058 6C0100EA 		b	.L1013
 15781              	.L1015:
 15782              		.loc 1 6297 5 discriminator 4
 15783 005c 30301BE5 		ldr	r3, [fp, #-48]
 15784 0060 8322A0E1 		lsl	r2, r3, #5
 15785 0064 28301BE5 		ldr	r3, [fp, #-40]
 15786 0068 0C3093E5 		ldr	r3, [r3, #12]
 15787 006c 033082E0 		add	r3, r2, r3
 15788 0070 08300BE5 		str	r3, [fp, #-8]
 15789 0074 08301BE5 		ldr	r3, [fp, #-8]
 15790 0078 0300A0E1 		mov	r0, r3
 15791 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15792 0080 14000BE5 		str	r0, [fp, #-20]
 15793              		.loc 1 6297 5 discriminator 1
 15794 0084 14301BE5 		ldr	r3, [fp, #-20]
 15795 0088 FF3803E2 		and	r3, r3, #16711680
 15796 008c 020853E3 		cmp	r3, #131072
 15797 0090 0100001A 		bne	.L1016
 15798              		.loc 1 6297 5 discriminator 5
 15799 0094 0830E0E3 		mvn	r3, #8
 15800              		.loc 1 6297 5
 15801 0098 5C0100EA 		b	.L1013
 15802              	.L1016:
 15803              		.loc 1 6297 5 discriminator 6
 15804 009c 14301BE5 		ldr	r3, [fp, #-20]
 15805 00a0 233CA0E1 		lsr	r3, r3, #24
 15806 00a4 060053E3 		cmp	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 389


 15807 00a8 3F00000A 		beq	.L1017
 15808              		.loc 1 6297 5 discriminator 7
 15809 00ac 0130E0E3 		mvn	r3, #1
 15810              		.loc 1 6297 5
 15811 00b0 560100EA 		b	.L1013
 15812              	.L1014:
 15813              		.loc 1 6297 5 discriminator 2
 15814 00b4 30301BE5 		ldr	r3, [fp, #-48]
 15815 00b8 2324A0E1 		lsr	r2, r3, #8
 15816 00bc 28301BE5 		ldr	r3, [fp, #-40]
 15817 00c0 143093E5 		ldr	r3, [r3, #20]
 15818 00c4 030052E1 		cmp	r2, r3
 15819 00c8 0100003A 		bcc	.L1018
 15820              		.loc 1 6297 5 discriminator 8
 15821 00cc 0230E0E3 		mvn	r3, #2
 15822              		.loc 1 6297 5
 15823 00d0 4E0100EA 		b	.L1013
 15824              	.L1018:
 15825              		.loc 1 6297 5 discriminator 9
 15826 00d4 30301BE5 		ldr	r3, [fp, #-48]
 15827 00d8 2334A0E1 		lsr	r3, r3, #8
 15828 00dc 8322A0E1 		lsl	r2, r3, #5
 15829 00e0 28301BE5 		ldr	r3, [fp, #-40]
 15830 00e4 0C3093E5 		ldr	r3, [r3, #12]
 15831 00e8 033082E0 		add	r3, r2, r3
 15832 00ec 08300BE5 		str	r3, [fp, #-8]
 15833 00f0 08301BE5 		ldr	r3, [fp, #-8]
 15834 00f4 0300A0E1 		mov	r0, r3
 15835 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15836 00fc 14000BE5 		str	r0, [fp, #-20]
 15837              		.loc 1 6297 5 discriminator 1
 15838 0100 14301BE5 		ldr	r3, [fp, #-20]
 15839 0104 FF3803E2 		and	r3, r3, #16711680
 15840 0108 020853E3 		cmp	r3, #131072
 15841 010c 0100001A 		bne	.L1019
 15842              		.loc 1 6297 5 discriminator 10
 15843 0110 0830E0E3 		mvn	r3, #8
 15844              		.loc 1 6297 5
 15845 0114 3D0100EA 		b	.L1013
 15846              	.L1019:
 15847              		.loc 1 6297 5 discriminator 11
 15848 0118 14301BE5 		ldr	r3, [fp, #-20]
 15849 011c 233CA0E1 		lsr	r3, r3, #24
 15850 0120 030053E3 		cmp	r3, #3
 15851 0124 0100000A 		beq	.L1020
 15852              		.loc 1 6297 5 discriminator 12
 15853 0128 0130E0E3 		mvn	r3, #1
 15854              		.loc 1 6297 5
 15855 012c 370100EA 		b	.L1013
 15856              	.L1020:
 15857              		.loc 1 6297 5 discriminator 13
 15858 0130 30301BE5 		ldr	r3, [fp, #-48]
 15859 0134 7F2003E2 		and	r2, r3, #127
 15860 0138 08301BE5 		ldr	r3, [fp, #-8]
 15861 013c 143093E5 		ldr	r3, [r3, #20]
 15862 0140 030052E1 		cmp	r2, r3
 15863 0144 0100003A 		bcc	.L1021
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 390


 15864              		.loc 1 6297 5 discriminator 14
 15865 0148 0230E0E3 		mvn	r3, #2
 15866              		.loc 1 6297 5
 15867 014c 2F0100EA 		b	.L1013
 15868              	.L1021:
 15869              		.loc 1 6297 5 discriminator 15
 15870 0150 30301BE5 		ldr	r3, [fp, #-48]
 15871 0154 7F3003E2 		and	r3, r3, #127
 15872 0158 8322A0E1 		lsl	r2, r3, #5
 15873 015c 08301BE5 		ldr	r3, [fp, #-8]
 15874 0160 0C3093E5 		ldr	r3, [r3, #12]
 15875 0164 033082E0 		add	r3, r2, r3
 15876 0168 08300BE5 		str	r3, [fp, #-8]
 15877 016c 08301BE5 		ldr	r3, [fp, #-8]
 15878 0170 0300A0E1 		mov	r0, r3
 15879 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15880 0178 14000BE5 		str	r0, [fp, #-20]
 15881              		.loc 1 6297 5 discriminator 1
 15882 017c 14301BE5 		ldr	r3, [fp, #-20]
 15883 0180 FF3803E2 		and	r3, r3, #16711680
 15884 0184 020853E3 		cmp	r3, #131072
 15885 0188 0100001A 		bne	.L1022
 15886              		.loc 1 6297 5 discriminator 16
 15887 018c 0830E0E3 		mvn	r3, #8
 15888              		.loc 1 6297 5
 15889 0190 1E0100EA 		b	.L1013
 15890              	.L1022:
 15891              		.loc 1 6297 5 discriminator 17
 15892 0194 14301BE5 		ldr	r3, [fp, #-20]
 15893 0198 233CA0E1 		lsr	r3, r3, #24
 15894 019c 060053E3 		cmp	r3, #6
 15895 01a0 0100000A 		beq	.L1017
 15896              		.loc 1 6297 5 discriminator 18
 15897 01a4 0130E0E3 		mvn	r3, #1
 15898              		.loc 1 6297 5
 15899 01a8 180100EA 		b	.L1013
 15900              	.L1017:
6298:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Dst_Op,Type_Stat);
6299:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Src,RME_CAP_TYPE_THD,
 15901              		.loc 1 6299 5 is_stmt 1
 15902 01ac 34301BE5 		ldr	r3, [fp, #-52]
 15903 01b0 803003E2 		and	r3, r3, #128
 15904 01b4 000053E3 		cmp	r3, #0
 15905 01b8 1C00001A 		bne	.L1023
 15906              		.loc 1 6299 5 is_stmt 0 discriminator 1
 15907 01bc 28301BE5 		ldr	r3, [fp, #-40]
 15908 01c0 142093E5 		ldr	r2, [r3, #20]
 15909 01c4 34301BE5 		ldr	r3, [fp, #-52]
 15910 01c8 030052E1 		cmp	r2, r3
 15911 01cc 0100008A 		bhi	.L1024
 15912              		.loc 1 6299 5 discriminator 3
 15913 01d0 0230E0E3 		mvn	r3, #2
 15914              		.loc 1 6299 5
 15915 01d4 0D0100EA 		b	.L1013
 15916              	.L1024:
 15917              		.loc 1 6299 5 discriminator 4
 15918 01d8 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 391


 15919 01dc 8322A0E1 		lsl	r2, r3, #5
 15920 01e0 28301BE5 		ldr	r3, [fp, #-40]
 15921 01e4 0C3093E5 		ldr	r3, [r3, #12]
 15922 01e8 033082E0 		add	r3, r2, r3
 15923 01ec 0C300BE5 		str	r3, [fp, #-12]
 15924 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 15925 01f4 0300A0E1 		mov	r0, r3
 15926 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15927 01fc 14000BE5 		str	r0, [fp, #-20]
 15928              		.loc 1 6299 5 discriminator 1
 15929 0200 14301BE5 		ldr	r3, [fp, #-20]
 15930 0204 FF3803E2 		and	r3, r3, #16711680
 15931 0208 020853E3 		cmp	r3, #131072
 15932 020c 0100001A 		bne	.L1025
 15933              		.loc 1 6299 5 discriminator 5
 15934 0210 0830E0E3 		mvn	r3, #8
 15935              		.loc 1 6299 5
 15936 0214 FD0000EA 		b	.L1013
 15937              	.L1025:
 15938              		.loc 1 6299 5 discriminator 6
 15939 0218 14301BE5 		ldr	r3, [fp, #-20]
 15940 021c 233CA0E1 		lsr	r3, r3, #24
 15941 0220 060053E3 		cmp	r3, #6
 15942 0224 3F00000A 		beq	.L1026
 15943              		.loc 1 6299 5 discriminator 7
 15944 0228 0130E0E3 		mvn	r3, #1
 15945              		.loc 1 6299 5
 15946 022c F70000EA 		b	.L1013
 15947              	.L1023:
 15948              		.loc 1 6299 5 discriminator 2
 15949 0230 34301BE5 		ldr	r3, [fp, #-52]
 15950 0234 2324A0E1 		lsr	r2, r3, #8
 15951 0238 28301BE5 		ldr	r3, [fp, #-40]
 15952 023c 143093E5 		ldr	r3, [r3, #20]
 15953 0240 030052E1 		cmp	r2, r3
 15954 0244 0100003A 		bcc	.L1027
 15955              		.loc 1 6299 5 discriminator 8
 15956 0248 0230E0E3 		mvn	r3, #2
 15957              		.loc 1 6299 5
 15958 024c EF0000EA 		b	.L1013
 15959              	.L1027:
 15960              		.loc 1 6299 5 discriminator 9
 15961 0250 34301BE5 		ldr	r3, [fp, #-52]
 15962 0254 2334A0E1 		lsr	r3, r3, #8
 15963 0258 8322A0E1 		lsl	r2, r3, #5
 15964 025c 28301BE5 		ldr	r3, [fp, #-40]
 15965 0260 0C3093E5 		ldr	r3, [r3, #12]
 15966 0264 033082E0 		add	r3, r2, r3
 15967 0268 0C300BE5 		str	r3, [fp, #-12]
 15968 026c 0C301BE5 		ldr	r3, [fp, #-12]
 15969 0270 0300A0E1 		mov	r0, r3
 15970 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15971 0278 14000BE5 		str	r0, [fp, #-20]
 15972              		.loc 1 6299 5 discriminator 1
 15973 027c 14301BE5 		ldr	r3, [fp, #-20]
 15974 0280 FF3803E2 		and	r3, r3, #16711680
 15975 0284 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 392


 15976 0288 0100001A 		bne	.L1028
 15977              		.loc 1 6299 5 discriminator 10
 15978 028c 0830E0E3 		mvn	r3, #8
 15979              		.loc 1 6299 5
 15980 0290 DE0000EA 		b	.L1013
 15981              	.L1028:
 15982              		.loc 1 6299 5 discriminator 11
 15983 0294 14301BE5 		ldr	r3, [fp, #-20]
 15984 0298 233CA0E1 		lsr	r3, r3, #24
 15985 029c 030053E3 		cmp	r3, #3
 15986 02a0 0100000A 		beq	.L1029
 15987              		.loc 1 6299 5 discriminator 12
 15988 02a4 0130E0E3 		mvn	r3, #1
 15989              		.loc 1 6299 5
 15990 02a8 D80000EA 		b	.L1013
 15991              	.L1029:
 15992              		.loc 1 6299 5 discriminator 13
 15993 02ac 34301BE5 		ldr	r3, [fp, #-52]
 15994 02b0 7F2003E2 		and	r2, r3, #127
 15995 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 15996 02b8 143093E5 		ldr	r3, [r3, #20]
 15997 02bc 030052E1 		cmp	r2, r3
 15998 02c0 0100003A 		bcc	.L1030
 15999              		.loc 1 6299 5 discriminator 14
 16000 02c4 0230E0E3 		mvn	r3, #2
 16001              		.loc 1 6299 5
 16002 02c8 D00000EA 		b	.L1013
 16003              	.L1030:
 16004              		.loc 1 6299 5 discriminator 15
 16005 02cc 34301BE5 		ldr	r3, [fp, #-52]
 16006 02d0 7F3003E2 		and	r3, r3, #127
 16007 02d4 8322A0E1 		lsl	r2, r3, #5
 16008 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 16009 02dc 0C3093E5 		ldr	r3, [r3, #12]
 16010 02e0 033082E0 		add	r3, r2, r3
 16011 02e4 0C300BE5 		str	r3, [fp, #-12]
 16012 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 16013 02ec 0300A0E1 		mov	r0, r3
 16014 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16015 02f4 14000BE5 		str	r0, [fp, #-20]
 16016              		.loc 1 6299 5 discriminator 1
 16017 02f8 14301BE5 		ldr	r3, [fp, #-20]
 16018 02fc FF3803E2 		and	r3, r3, #16711680
 16019 0300 020853E3 		cmp	r3, #131072
 16020 0304 0100001A 		bne	.L1031
 16021              		.loc 1 6299 5 discriminator 16
 16022 0308 0830E0E3 		mvn	r3, #8
 16023              		.loc 1 6299 5
 16024 030c BF0000EA 		b	.L1013
 16025              	.L1031:
 16026              		.loc 1 6299 5 discriminator 17
 16027 0310 14301BE5 		ldr	r3, [fp, #-20]
 16028 0314 233CA0E1 		lsr	r3, r3, #24
 16029 0318 060053E3 		cmp	r3, #6
 16030 031c 0100000A 		beq	.L1026
 16031              		.loc 1 6299 5 discriminator 18
 16032 0320 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 393


 16033              		.loc 1 6299 5
 16034 0324 B90000EA 		b	.L1013
 16035              	.L1026:
6300:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Src_Op,Type_Stat);
6301:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6302:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Dst_Op,RME_THD_FLAG_XFER_DST);
 16036              		.loc 1 6302 5 is_stmt 1
 16037 0328 08301BE5 		ldr	r3, [fp, #-8]
 16038 032c 083093E5 		ldr	r3, [r3, #8]
 16039 0330 803003E2 		and	r3, r3, #128
 16040 0334 000053E3 		cmp	r3, #0
 16041 0338 0100001A 		bne	.L1032
 16042              		.loc 1 6302 5 is_stmt 0 discriminator 1
 16043 033c 0630E0E3 		mvn	r3, #6
 16044              		.loc 1 6302 5
 16045 0340 B20000EA 		b	.L1013
 16046              	.L1032:
6303:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Src_Op,RME_THD_FLAG_XFER_SRC);
 16047              		.loc 1 6303 5 is_stmt 1
 16048 0344 0C301BE5 		ldr	r3, [fp, #-12]
 16049 0348 083093E5 		ldr	r3, [r3, #8]
 16050 034c 403003E2 		and	r3, r3, #64
 16051 0350 000053E3 		cmp	r3, #0
 16052 0354 0100001A 		bne	.L1033
 16053              		.loc 1 6303 5 is_stmt 0 discriminator 1
 16054 0358 0630E0E3 		mvn	r3, #6
 16055              		.loc 1 6303 5
 16056 035c AB0000EA 		b	.L1013
 16057              	.L1033:
6304:../../Source/Kernel/rme_kernel.c **** 
6305:../../Source/Kernel/rme_kernel.c ****     /* Check if the two threads are on the core that is accordance with what we are on */
6306:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16058              		.loc 1 6306 10 is_stmt 1
 16059 0360 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16060 0364 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16061 0368 18300BE5 		str	r3, [fp, #-24]
6307:../../Source/Kernel/rme_kernel.c ****     Thd_Src=RME_CAP_GETOBJ(Thd_Src_Op,struct RME_Thd_Struct*);
 16062              		.loc 1 6307 13
 16063 036c 0C301BE5 		ldr	r3, [fp, #-12]
 16064 0370 0C3093E5 		ldr	r3, [r3, #12]
 16065              		.loc 1 6307 12
 16066 0374 1C300BE5 		str	r3, [fp, #-28]
6308:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Local!=Local)
 16067              		.loc 1 6308 22
 16068 0378 1C301BE5 		ldr	r3, [fp, #-28]
 16069 037c 143093E5 		ldr	r3, [r3, #20]
 16070              		.loc 1 6308 7
 16071 0380 18201BE5 		ldr	r2, [fp, #-24]
 16072 0384 030052E1 		cmp	r2, r3
 16073 0388 0100000A 		beq	.L1034
6309:../../Source/Kernel/rme_kernel.c ****     {
6310:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6311:../../Source/Kernel/rme_kernel.c **** 
6312:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16074              		.loc 1 6312 16
 16075 038c CB30E0E3 		mvn	r3, #203
 16076 0390 9E0000EA 		b	.L1013
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 394


 16077              	.L1034:
6313:../../Source/Kernel/rme_kernel.c ****     }
6314:../../Source/Kernel/rme_kernel.c ****     else
6315:../../Source/Kernel/rme_kernel.c ****     {
6316:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6317:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6318:../../Source/Kernel/rme_kernel.c ****     }
6319:../../Source/Kernel/rme_kernel.c ****     
6320:../../Source/Kernel/rme_kernel.c ****     /* Check if we have slices to transfer; 0 implies TIMEOUT, BLOCKED, or EXCPEND */
6321:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16078              		.loc 1 6321 22
 16079 0394 1C301BE5 		ldr	r3, [fp, #-28]
 16080 0398 183093E5 		ldr	r3, [r3, #24]
 16081              		.loc 1 6321 7
 16082 039c 000053E3 		cmp	r3, #0
 16083 03a0 0100001A 		bne	.L1035
6322:../../Source/Kernel/rme_kernel.c ****     {
6323:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6324:../../Source/Kernel/rme_kernel.c **** 
6325:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16084              		.loc 1 6325 16
 16085 03a4 CB30E0E3 		mvn	r3, #203
 16086 03a8 980000EA 		b	.L1013
 16087              	.L1035:
6326:../../Source/Kernel/rme_kernel.c ****     }
6327:../../Source/Kernel/rme_kernel.c ****     else
6328:../../Source/Kernel/rme_kernel.c ****     {
6329:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6330:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6331:../../Source/Kernel/rme_kernel.c ****     }
6332:../../Source/Kernel/rme_kernel.c ****     
6333:../../Source/Kernel/rme_kernel.c ****     Thd_Dst=RME_CAP_GETOBJ(Thd_Dst_Op,struct RME_Thd_Struct*);
 16088              		.loc 1 6333 13
 16089 03ac 08301BE5 		ldr	r3, [fp, #-8]
 16090 03b0 0C3093E5 		ldr	r3, [r3, #12]
 16091              		.loc 1 6333 12
 16092 03b4 20300BE5 		str	r3, [fp, #-32]
6334:../../Source/Kernel/rme_kernel.c ****     
6335:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.Local!=Local)
 16093              		.loc 1 6335 22
 16094 03b8 20301BE5 		ldr	r3, [fp, #-32]
 16095 03bc 143093E5 		ldr	r3, [r3, #20]
 16096              		.loc 1 6335 7
 16097 03c0 18201BE5 		ldr	r2, [fp, #-24]
 16098 03c4 030052E1 		cmp	r2, r3
 16099 03c8 0100000A 		beq	.L1036
6336:../../Source/Kernel/rme_kernel.c ****     {
6337:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6338:../../Source/Kernel/rme_kernel.c **** 
6339:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16100              		.loc 1 6339 16
 16101 03cc CB30E0E3 		mvn	r3, #203
 16102 03d0 8E0000EA 		b	.L1013
 16103              	.L1036:
6340:../../Source/Kernel/rme_kernel.c ****     }
6341:../../Source/Kernel/rme_kernel.c ****     else
6342:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 395


6343:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6344:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6345:../../Source/Kernel/rme_kernel.c ****     }
6346:../../Source/Kernel/rme_kernel.c **** 
6347:../../Source/Kernel/rme_kernel.c ****     /* The destination must never have higher maximum priority than the source,
6348:../../Source/Kernel/rme_kernel.c ****      * unless it is a init thread which could be used as a black hole */
6349:../../Source/Kernel/rme_kernel.c ****     if((Thd_Src->Sched.Prio_Max<Thd_Dst->Sched.Prio_Max)&&
 16104              		.loc 1 6349 23
 16105 03d4 1C301BE5 		ldr	r3, [fp, #-28]
 16106 03d8 242093E5 		ldr	r2, [r3, #36]
 16107              		.loc 1 6349 47
 16108 03dc 20301BE5 		ldr	r3, [fp, #-32]
 16109 03e0 243093E5 		ldr	r3, [r3, #36]
 16110              		.loc 1 6349 7
 16111 03e4 030052E1 		cmp	r2, r3
 16112 03e8 0500002A 		bcs	.L1037
6350:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16113              		.loc 1 6350 23
 16114 03ec 20301BE5 		ldr	r3, [fp, #-32]
 16115 03f0 183093E5 		ldr	r3, [r3, #24]
6349:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16116              		.loc 1 6349 57 discriminator 1
 16117 03f4 060173E3 		cmn	r3, #-2147483647
 16118 03f8 0100000A 		beq	.L1037
6351:../../Source/Kernel/rme_kernel.c ****     {
6352:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6353:../../Source/Kernel/rme_kernel.c **** 
6354:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 16119              		.loc 1 6354 16
 16120 03fc CC30E0E3 		mvn	r3, #204
 16121 0400 820000EA 		b	.L1013
 16122              	.L1037:
6355:../../Source/Kernel/rme_kernel.c ****     }
6356:../../Source/Kernel/rme_kernel.c ****     else
6357:../../Source/Kernel/rme_kernel.c ****     {
6358:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6359:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6360:../../Source/Kernel/rme_kernel.c ****     }
6361:../../Source/Kernel/rme_kernel.c ****     
6362:../../Source/Kernel/rme_kernel.c ****     /* Delegating from a normal thread */
6363:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice<RME_THD_INF_TIME)
 16123              		.loc 1 6363 22
 16124 0404 1C301BE5 		ldr	r3, [fp, #-28]
 16125 0408 183093E5 		ldr	r3, [r3, #24]
 16126              		.loc 1 6363 7
 16127 040c 0E0173E3 		cmn	r3, #-2147483645
 16128 0410 3200008A 		bhi	.L1038
6364:../../Source/Kernel/rme_kernel.c ****     {
6365:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6366:../../Source/Kernel/rme_kernel.c **** 
6367:../../Source/Kernel/rme_kernel.c ****         /* Delegate all our time */
6368:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16129              		.loc 1 6368 11
 16130 0414 04309BE5 		ldr	r3, [fp, #4]
 16131 0418 0E0173E3 		cmn	r3, #-2147483645
 16132 041c 0300009A 		bls	.L1039
6369:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 396


6370:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6371:../../Source/Kernel/rme_kernel.c **** 
6372:../../Source/Kernel/rme_kernel.c ****             Time_Xfer=Thd_Src->Sched.Slice;
 16133              		.loc 1 6372 22
 16134 0420 1C301BE5 		ldr	r3, [fp, #-28]
 16135 0424 183093E5 		ldr	r3, [r3, #24]
 16136 0428 10300BE5 		str	r3, [fp, #-16]
 16137 042c 0A0000EA 		b	.L1040
 16138              	.L1039:
6373:../../Source/Kernel/rme_kernel.c ****         }
6374:../../Source/Kernel/rme_kernel.c ****         /* Delegate some time, if not sufficient, clean up the source time */
6375:../../Source/Kernel/rme_kernel.c ****         else
6376:../../Source/Kernel/rme_kernel.c ****         {
6377:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6378:../../Source/Kernel/rme_kernel.c ****             
6379:../../Source/Kernel/rme_kernel.c ****             if(Thd_Src->Sched.Slice>Time)
 16139              		.loc 1 6379 30
 16140 0430 1C301BE5 		ldr	r3, [fp, #-28]
 16141 0434 183093E5 		ldr	r3, [r3, #24]
 16142              		.loc 1 6379 15
 16143 0438 04209BE5 		ldr	r2, [fp, #4]
 16144 043c 030052E1 		cmp	r2, r3
 16145 0440 0200002A 		bcs	.L1041
6380:../../Source/Kernel/rme_kernel.c ****             {
6381:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6382:../../Source/Kernel/rme_kernel.c **** 
6383:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Time;
 16146              		.loc 1 6383 26
 16147 0444 04309BE5 		ldr	r3, [fp, #4]
 16148 0448 10300BE5 		str	r3, [fp, #-16]
 16149 044c 020000EA 		b	.L1040
 16150              	.L1041:
6384:../../Source/Kernel/rme_kernel.c ****             }
6385:../../Source/Kernel/rme_kernel.c ****             else
6386:../../Source/Kernel/rme_kernel.c ****             {
6387:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6388:../../Source/Kernel/rme_kernel.c **** 
6389:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Thd_Src->Sched.Slice;
 16151              		.loc 1 6389 26
 16152 0450 1C301BE5 		ldr	r3, [fp, #-28]
 16153 0454 183093E5 		ldr	r3, [r3, #24]
 16154 0458 10300BE5 		str	r3, [fp, #-16]
 16155              	.L1040:
6390:../../Source/Kernel/rme_kernel.c ****             }
6391:../../Source/Kernel/rme_kernel.c ****         }
6392:../../Source/Kernel/rme_kernel.c ****         
6393:../../Source/Kernel/rme_kernel.c ****         /* See if we are transferring to an infinite budget thread. If yes, we
6394:../../Source/Kernel/rme_kernel.c ****          * are revoking timeslices; If not, this is a finite transfer */
6395:../../Source/Kernel/rme_kernel.c ****         if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16156              		.loc 1 6395 26
 16157 045c 20301BE5 		ldr	r3, [fp, #-32]
 16158 0460 183093E5 		ldr	r3, [r3, #24]
 16159              		.loc 1 6395 11
 16160 0464 0E0173E3 		cmn	r3, #-2147483645
 16161 0468 1500008A 		bhi	.L1042
6396:../../Source/Kernel/rme_kernel.c ****         {
6397:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 397


6398:../../Source/Kernel/rme_kernel.c ****             
6399:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time_Xfer);
 16162              		.loc 1 6399 13
 16163 046c 20301BE5 		ldr	r3, [fp, #-32]
 16164 0470 182093E5 		ldr	r2, [r3, #24]
 16165 0474 10301BE5 		ldr	r3, [fp, #-16]
 16166 0478 033082E0 		add	r3, r2, r3
 16167 047c 0E0173E3 		cmn	r3, #-2147483645
 16168 0480 0700008A 		bhi	.L1043
 16169              		.loc 1 6399 13 is_stmt 0 discriminator 2
 16170 0484 20301BE5 		ldr	r3, [fp, #-32]
 16171 0488 182093E5 		ldr	r2, [r3, #24]
 16172 048c 10301BE5 		ldr	r3, [fp, #-16]
 16173 0490 032082E0 		add	r2, r2, r3
 16174 0494 20301BE5 		ldr	r3, [fp, #-32]
 16175 0498 183093E5 		ldr	r3, [r3, #24]
 16176 049c 030052E1 		cmp	r2, r3
 16177 04a0 0100002A 		bcs	.L1044
 16178              	.L1043:
 16179              		.loc 1 6399 13 discriminator 3
 16180 04a4 CF30E0E3 		mvn	r3, #207
 16181              		.loc 1 6399 13
 16182 04a8 580000EA 		b	.L1013
 16183              	.L1044:
6400:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time_Xfer;
 16184              		.loc 1 6400 27 is_stmt 1
 16185 04ac 20301BE5 		ldr	r3, [fp, #-32]
 16186 04b0 182093E5 		ldr	r2, [r3, #24]
 16187              		.loc 1 6400 33
 16188 04b4 10301BE5 		ldr	r3, [fp, #-16]
 16189 04b8 032082E0 		add	r2, r2, r3
 16190 04bc 20301BE5 		ldr	r3, [fp, #-32]
 16191 04c0 182083E5 		str	r2, [r3, #24]
 16192              	.L1042:
6401:../../Source/Kernel/rme_kernel.c ****         }
6402:../../Source/Kernel/rme_kernel.c ****         else
6403:../../Source/Kernel/rme_kernel.c ****         {
6404:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6405:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6406:../../Source/Kernel/rme_kernel.c ****         }
6407:../../Source/Kernel/rme_kernel.c ****         
6408:../../Source/Kernel/rme_kernel.c ****         Thd_Src->Sched.Slice-=Time_Xfer;
 16193              		.loc 1 6408 23
 16194 04c4 1C301BE5 		ldr	r3, [fp, #-28]
 16195 04c8 182093E5 		ldr	r2, [r3, #24]
 16196              		.loc 1 6408 29
 16197 04cc 10301BE5 		ldr	r3, [fp, #-16]
 16198 04d0 032042E0 		sub	r2, r2, r3
 16199 04d4 1C301BE5 		ldr	r3, [fp, #-28]
 16200 04d8 182083E5 		str	r2, [r3, #24]
 16201 04dc 2A0000EA 		b	.L1045
 16202              	.L1038:
6409:../../Source/Kernel/rme_kernel.c ****     }
6410:../../Source/Kernel/rme_kernel.c ****     /* Delegating from init or infinite thread */
6411:../../Source/Kernel/rme_kernel.c ****     else
6412:../../Source/Kernel/rme_kernel.c ****     {
6413:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 398


6414:../../Source/Kernel/rme_kernel.c **** 
6415:../../Source/Kernel/rme_kernel.c ****         /* Infinite transfer to the destination */
6416:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16203              		.loc 1 6416 11
 16204 04e0 04309BE5 		ldr	r3, [fp, #4]
 16205 04e4 0E0173E3 		cmn	r3, #-2147483645
 16206 04e8 1100009A 		bls	.L1046
6417:../../Source/Kernel/rme_kernel.c ****         {
6418:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6419:../../Source/Kernel/rme_kernel.c **** 
6420:../../Source/Kernel/rme_kernel.c ****             /* This transfer will revoke the infinite budget */
6421:../../Source/Kernel/rme_kernel.c ****             if(Time==RME_THD_INIT_TIME)
 16207              		.loc 1 6421 15
 16208 04ec 04309BE5 		ldr	r3, [fp, #4]
 16209 04f0 060173E3 		cmn	r3, #-2147483647
 16210 04f4 0600001A 		bne	.L1047
6422:../../Source/Kernel/rme_kernel.c ****             {
6423:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6424:../../Source/Kernel/rme_kernel.c ****                 
6425:../../Source/Kernel/rme_kernel.c ****                 /* Will not revoke, source is an init thread */
6426:../../Source/Kernel/rme_kernel.c ****                 if(Thd_Src->Sched.Slice!=RME_THD_INIT_TIME)
 16211              		.loc 1 6426 34
 16212 04f8 1C301BE5 		ldr	r3, [fp, #-28]
 16213 04fc 183093E5 		ldr	r3, [r3, #24]
 16214              		.loc 1 6426 19
 16215 0500 060173E3 		cmn	r3, #-2147483647
 16216 0504 0200000A 		beq	.L1047
6427:../../Source/Kernel/rme_kernel.c ****                 {
6428:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6429:../../Source/Kernel/rme_kernel.c ****                     
6430:../../Source/Kernel/rme_kernel.c ****                     Thd_Src->Sched.Slice=0U;
 16217              		.loc 1 6430 41
 16218 0508 1C301BE5 		ldr	r3, [fp, #-28]
 16219 050c 0020A0E3 		mov	r2, #0
 16220 0510 182083E5 		str	r2, [r3, #24]
 16221              	.L1047:
6431:../../Source/Kernel/rme_kernel.c ****                 }
6432:../../Source/Kernel/rme_kernel.c ****                 else
6433:../../Source/Kernel/rme_kernel.c ****                 {
6434:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6435:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
6436:../../Source/Kernel/rme_kernel.c ****                 }
6437:../../Source/Kernel/rme_kernel.c ****             }
6438:../../Source/Kernel/rme_kernel.c ****             else
6439:../../Source/Kernel/rme_kernel.c ****             {
6440:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6441:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6442:../../Source/Kernel/rme_kernel.c ****             }
6443:../../Source/Kernel/rme_kernel.c ****             
6444:../../Source/Kernel/rme_kernel.c ****             /* Set destination to infinite if it is not an init thread */
6445:../../Source/Kernel/rme_kernel.c ****             if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16222              		.loc 1 6445 30
 16223 0514 20301BE5 		ldr	r3, [fp, #-32]
 16224 0518 183093E5 		ldr	r3, [r3, #24]
 16225              		.loc 1 6445 15
 16226 051c 0E0173E3 		cmn	r3, #-2147483645
 16227 0520 1900008A 		bhi	.L1045
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 399


6446:../../Source/Kernel/rme_kernel.c ****             {
6447:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6448:../../Source/Kernel/rme_kernel.c ****                 
6449:../../Source/Kernel/rme_kernel.c ****                 Thd_Dst->Sched.Slice=RME_THD_INF_TIME;
 16228              		.loc 1 6449 37
 16229 0524 20301BE5 		ldr	r3, [fp, #-32]
 16230 0528 0621E0E3 		mvn	r2, #-2147483647
 16231 052c 182083E5 		str	r2, [r3, #24]
 16232 0530 150000EA 		b	.L1045
 16233              	.L1046:
6450:../../Source/Kernel/rme_kernel.c ****             }
6451:../../Source/Kernel/rme_kernel.c ****             else
6452:../../Source/Kernel/rme_kernel.c ****             {
6453:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6454:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6455:../../Source/Kernel/rme_kernel.c ****             }
6456:../../Source/Kernel/rme_kernel.c ****         }
6457:../../Source/Kernel/rme_kernel.c ****         else
6458:../../Source/Kernel/rme_kernel.c ****         {
6459:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6460:../../Source/Kernel/rme_kernel.c **** 
6461:../../Source/Kernel/rme_kernel.c ****             /* Just increase the budget of the other thread - check first */
6462:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time);
 16234              		.loc 1 6462 13
 16235 0534 20301BE5 		ldr	r3, [fp, #-32]
 16236 0538 182093E5 		ldr	r2, [r3, #24]
 16237 053c 04309BE5 		ldr	r3, [fp, #4]
 16238 0540 033082E0 		add	r3, r2, r3
 16239 0544 0E0173E3 		cmn	r3, #-2147483645
 16240 0548 0700008A 		bhi	.L1048
 16241              		.loc 1 6462 13 is_stmt 0 discriminator 2
 16242 054c 20301BE5 		ldr	r3, [fp, #-32]
 16243 0550 182093E5 		ldr	r2, [r3, #24]
 16244 0554 04309BE5 		ldr	r3, [fp, #4]
 16245 0558 032082E0 		add	r2, r2, r3
 16246 055c 20301BE5 		ldr	r3, [fp, #-32]
 16247 0560 183093E5 		ldr	r3, [r3, #24]
 16248 0564 030052E1 		cmp	r2, r3
 16249 0568 0100002A 		bcs	.L1049
 16250              	.L1048:
 16251              		.loc 1 6462 13 discriminator 3
 16252 056c CF30E0E3 		mvn	r3, #207
 16253              		.loc 1 6462 13
 16254 0570 260000EA 		b	.L1013
 16255              	.L1049:
6463:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time;
 16256              		.loc 1 6463 27 is_stmt 1
 16257 0574 20301BE5 		ldr	r3, [fp, #-32]
 16258 0578 182093E5 		ldr	r2, [r3, #24]
 16259              		.loc 1 6463 33
 16260 057c 04309BE5 		ldr	r3, [fp, #4]
 16261 0580 032082E0 		add	r2, r2, r3
 16262 0584 20301BE5 		ldr	r3, [fp, #-32]
 16263 0588 182083E5 		str	r2, [r3, #24]
 16264              	.L1045:
6464:../../Source/Kernel/rme_kernel.c ****         }
6465:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 400


6466:../../Source/Kernel/rme_kernel.c **** 
6467:../../Source/Kernel/rme_kernel.c ****     /* Is the source time used up? If yes, delete it from the run queue, and notify its 
6468:../../Source/Kernel/rme_kernel.c ****      * parent. If it is not in the run queue, The state of the source must be BLOCKED. */
6469:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16265              		.loc 1 6469 22
 16266 058c 1C301BE5 		ldr	r3, [fp, #-28]
 16267 0590 183093E5 		ldr	r3, [r3, #24]
 16268              		.loc 1 6469 7
 16269 0594 000053E3 		cmp	r3, #0
 16270 0598 0A00001A 		bne	.L1050
6470:../../Source/Kernel/rme_kernel.c ****     {
6471:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6472:../../Source/Kernel/rme_kernel.c ****         
6473:../../Source/Kernel/rme_kernel.c ****         /* If it is blocked or have an exception, we neither change its state nor send
6474:../../Source/Kernel/rme_kernel.c ****          * the scheduler notification. It will be sent when the thread unblocks, or gets
6475:../../Source/Kernel/rme_kernel.c ****          * its exception handled. The rule of the thumb is, we only send scheduler 
6476:../../Source/Kernel/rme_kernel.c ****          * notifications when the thread really enter TIMEOUT or EXCPEND state. */
6477:../../Source/Kernel/rme_kernel.c ****         if(Thd_Src->Sched.State==RME_THD_READY)
 16271              		.loc 1 6477 26
 16272 059c 1C301BE5 		ldr	r3, [fp, #-28]
 16273 05a0 1C3093E5 		ldr	r3, [r3, #28]
 16274              		.loc 1 6477 11
 16275 05a4 000053E3 		cmp	r3, #0
 16276 05a8 0600001A 		bne	.L1050
6478:../../Source/Kernel/rme_kernel.c ****         {
6479:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6480:../../Source/Kernel/rme_kernel.c ****             
6481:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue */
6482:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Src);
 16277              		.loc 1 6482 13
 16278 05ac 1C001BE5 		ldr	r0, [fp, #-28]
 16279 05b0 FEFFFFEB 		bl	_RME_Run_Del
6483:../../Source/Kernel/rme_kernel.c ****             
6484:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6485:../../Source/Kernel/rme_kernel.c ****             Thd_Src->Sched.State=RME_THD_TIMEOUT;
 16280              		.loc 1 6485 33
 16281 05b4 1C301BE5 		ldr	r3, [fp, #-28]
 16282 05b8 0220A0E3 		mov	r2, #2
 16283 05bc 1C2083E5 		str	r2, [r3, #28]
6486:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Src);
 16284              		.loc 1 6486 13
 16285 05c0 1C001BE5 		ldr	r0, [fp, #-28]
 16286 05c4 FEFFFFEB 		bl	_RME_Run_Notif
 16287              	.L1050:
6487:../../Source/Kernel/rme_kernel.c ****         }
6488:../../Source/Kernel/rme_kernel.c ****         else
6489:../../Source/Kernel/rme_kernel.c ****         {
6490:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6491:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6492:../../Source/Kernel/rme_kernel.c ****         }
6493:../../Source/Kernel/rme_kernel.c ****     }
6494:../../Source/Kernel/rme_kernel.c ****     else
6495:../../Source/Kernel/rme_kernel.c ****     {
6496:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6497:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6498:../../Source/Kernel/rme_kernel.c ****     }
6499:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 401


6500:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller 
6501:../../Source/Kernel/rme_kernel.c ****      * stack - how much time the destination have now */
6502:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,(rme_ret_t)(Thd_Dst->Sched.Slice));
 16288              		.loc 1 6502 56
 16289 05c8 20301BE5 		ldr	r3, [fp, #-32]
 16290 05cc 183093E5 		ldr	r3, [r3, #24]
 16291              		.loc 1 6502 5
 16292 05d0 0310A0E1 		mov	r1, r3
 16293 05d4 2C001BE5 		ldr	r0, [fp, #-44]
 16294 05d8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6503:../../Source/Kernel/rme_kernel.c **** 
6504:../../Source/Kernel/rme_kernel.c ****     /* See what was the state of the destination thread. If it is timeout, then activate
6505:../../Source/Kernel/rme_kernel.c ****      * it. If it is BLOCKED or EXCPEND, then leave it alone, and it will be activated
6506:../../Source/Kernel/rme_kernel.c ****      * when it unblocks or when the exception is handled. */
6507:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.State==RME_THD_TIMEOUT)
 16295              		.loc 1 6507 22
 16296 05dc 20301BE5 		ldr	r3, [fp, #-32]
 16297 05e0 1C3093E5 		ldr	r3, [r3, #28]
 16298              		.loc 1 6507 7
 16299 05e4 020053E3 		cmp	r3, #2
 16300 05e8 0400001A 		bne	.L1051
6508:../../Source/Kernel/rme_kernel.c ****     {
6509:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6510:../../Source/Kernel/rme_kernel.c **** 
6511:../../Source/Kernel/rme_kernel.c ****         /* Ready and add to runqueue */
6512:../../Source/Kernel/rme_kernel.c ****         Thd_Dst->Sched.State=RME_THD_READY;
 16301              		.loc 1 6512 29
 16302 05ec 20301BE5 		ldr	r3, [fp, #-32]
 16303 05f0 0020A0E3 		mov	r2, #0
 16304 05f4 1C2083E5 		str	r2, [r3, #28]
6513:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Thd_Dst);
 16305              		.loc 1 6513 9
 16306 05f8 20001BE5 		ldr	r0, [fp, #-32]
 16307 05fc FEFFFFEB 		bl	_RME_Run_Ins
 16308              	.L1051:
6514:../../Source/Kernel/rme_kernel.c ****     }
6515:../../Source/Kernel/rme_kernel.c ****     else
6516:../../Source/Kernel/rme_kernel.c ****     {
6517:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6518:../../Source/Kernel/rme_kernel.c ****     }
6519:../../Source/Kernel/rme_kernel.c ****     
6520:../../Source/Kernel/rme_kernel.c ****     /* All possible kernel send (scheduler notifications) done,
6521:../../Source/Kernel/rme_kernel.c ****      * now pick the highest priority thread to run */
6522:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 16309              		.loc 1 6522 5
 16310 0600 18101BE5 		ldr	r1, [fp, #-24]
 16311 0604 2C001BE5 		ldr	r0, [fp, #-44]
 16312 0608 FEFFFFEB 		bl	_RME_Kern_High
6523:../../Source/Kernel/rme_kernel.c **** 
6524:../../Source/Kernel/rme_kernel.c ****     return 0;
 16313              		.loc 1 6524 12
 16314 060c 0030A0E3 		mov	r3, #0
 16315              	.L1013:
6525:../../Source/Kernel/rme_kernel.c **** }
 16316              		.loc 1 6525 1
 16317 0610 0300A0E1 		mov	r0, r3
 16318 0614 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 402


 16319              		.cfi_def_cfa 13, 8
 16320              		@ sp needed
 16321 0618 0088BDE8 		pop	{fp, pc}
 16322              		.cfi_endproc
 16323              	.LFE63:
 16325              		.section	.text._RME_Thd_Swt,"ax",%progbits
 16326              		.align	2
 16327              		.syntax unified
 16328              		.arm
 16330              	_RME_Thd_Swt:
 16331              	.LFB64:
6526:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Time_Xfer *******************************************/
6527:../../Source/Kernel/rme_kernel.c **** 
6528:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Swt ******************************************************
6529:../../Source/Kernel/rme_kernel.c **** Description : Switch to another thread. The thread to switch to must have the same
6530:../../Source/Kernel/rme_kernel.c ****               preemptive priority as this thread, and have time, and not blocked.
6531:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a higher priority thread, this is impossible
6532:../../Source/Kernel/rme_kernel.c ****               because whenever a thread with higher priority exists in the system,
6533:../../Source/Kernel/rme_kernel.c ****               the kernel wiull let it preempt the current thread. 
6534:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a lower priority thread, this is impossible
6535:../../Source/Kernel/rme_kernel.c ****               because the current thread just preempts it after the thread switch.
6536:../../Source/Kernel/rme_kernel.c ****               This syscall does not end with _RME_Kern_High because the user may
6537:../../Source/Kernel/rme_kernel.c ****               designate a specific thread rather than a random one.
6538:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
6539:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
6540:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread. If this is -1,
6541:../../Source/Kernel/rme_kernel.c ****                                   the kernel will pickup whatever thread that
6542:../../Source/Kernel/rme_kernel.c ****                                   has the highest priority and time to run. 
6543:../../Source/Kernel/rme_kernel.c ****                                   2-Level. 
6544:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Yield - This is a flag to indicate whether this
6545:../../Source/Kernel/rme_kernel.c ****                                    is a full yield. If it is, the kernel will
6546:../../Source/Kernel/rme_kernel.c ****                                    discard all the time alloted on this
6547:../../Source/Kernel/rme_kernel.c ****                                    thread. This only works for threads that
6548:../../Source/Kernel/rme_kernel.c ****                                    have a finite budget.
6549:../../Source/Kernel/rme_kernel.c **** Output      : None.
6550:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6551:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6552:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Swt(struct RME_Cap_Cpt* Cpt,
6553:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
6554:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
6555:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Yield)
6556:../../Source/Kernel/rme_kernel.c **** {
 16332              		.loc 1 6556 1
 16333              		.cfi_startproc
 16334              		@ args = 0, pretend = 0, frame = 40
 16335              		@ frame_needed = 1, uses_anonymous_args = 0
 16336 0000 00482DE9 		push	{fp, lr}
 16337              		.cfi_def_cfa_offset 8
 16338              		.cfi_offset 11, -8
 16339              		.cfi_offset 14, -4
 16340 0004 04B08DE2 		add	fp, sp, #4
 16341              		.cfi_def_cfa 11, 4
 16342 0008 28D04DE2 		sub	sp, sp, #40
 16343 000c 20000BE5 		str	r0, [fp, #-32]
 16344 0010 24100BE5 		str	r1, [fp, #-36]
 16345 0014 28200BE5 		str	r2, [fp, #-40]
 16346 0018 2C300BE5 		str	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 403


6557:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Cap_New;
6558:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6559:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_High;
6560:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6561:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6562:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6563:../../Source/Kernel/rme_kernel.c **** 
6564:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16347              		.loc 1 6564 10
 16348 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16349 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16350 0024 10300BE5 		str	r3, [fp, #-16]
6565:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 16351              		.loc 1 6565 12
 16352 0028 10301BE5 		ldr	r3, [fp, #-16]
 16353 002c 043093E5 		ldr	r3, [r3, #4]
 16354 0030 14300BE5 		str	r3, [fp, #-20]
6566:../../Source/Kernel/rme_kernel.c ****     
6567:../../Source/Kernel/rme_kernel.c ****     /* The caller have picked a thread to switch to */
6568:../../Source/Kernel/rme_kernel.c ****     if(Cap_Thd<RME_CID_NULL)
 16355              		.loc 1 6568 7
 16356 0034 28301BE5 		ldr	r3, [fp, #-40]
 16357 0038 020953E3 		cmp	r3, #32768
 16358 003c A60000AA 		bge	.L1053
6569:../../Source/Kernel/rme_kernel.c ****     {
6570:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6571:../../Source/Kernel/rme_kernel.c ****         
6572:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 16359              		.loc 1 6572 9
 16360 0040 28301BE5 		ldr	r3, [fp, #-40]
 16361 0044 803003E2 		and	r3, r3, #128
 16362 0048 000053E3 		cmp	r3, #0
 16363 004c 1C00001A 		bne	.L1054
 16364              		.loc 1 6572 9 is_stmt 0 discriminator 1
 16365 0050 20301BE5 		ldr	r3, [fp, #-32]
 16366 0054 142093E5 		ldr	r2, [r3, #20]
 16367 0058 28301BE5 		ldr	r3, [fp, #-40]
 16368 005c 030052E1 		cmp	r2, r3
 16369 0060 0100008A 		bhi	.L1055
 16370              		.loc 1 6572 9 discriminator 3
 16371 0064 0230E0E3 		mvn	r3, #2
 16372              		.loc 1 6572 9
 16373 0068 DF0000EA 		b	.L1056
 16374              	.L1055:
 16375              		.loc 1 6572 9 discriminator 4
 16376 006c 28301BE5 		ldr	r3, [fp, #-40]
 16377 0070 8322A0E1 		lsl	r2, r3, #5
 16378 0074 20301BE5 		ldr	r3, [fp, #-32]
 16379 0078 0C3093E5 		ldr	r3, [r3, #12]
 16380 007c 033082E0 		add	r3, r2, r3
 16381 0080 08300BE5 		str	r3, [fp, #-8]
 16382 0084 08301BE5 		ldr	r3, [fp, #-8]
 16383 0088 0300A0E1 		mov	r0, r3
 16384 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16385 0090 18000BE5 		str	r0, [fp, #-24]
 16386              		.loc 1 6572 9 discriminator 1
 16387 0094 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 404


 16388 0098 FF3803E2 		and	r3, r3, #16711680
 16389 009c 020853E3 		cmp	r3, #131072
 16390 00a0 0100001A 		bne	.L1057
 16391              		.loc 1 6572 9 discriminator 5
 16392 00a4 0830E0E3 		mvn	r3, #8
 16393              		.loc 1 6572 9
 16394 00a8 CF0000EA 		b	.L1056
 16395              	.L1057:
 16396              		.loc 1 6572 9 discriminator 6
 16397 00ac 18301BE5 		ldr	r3, [fp, #-24]
 16398 00b0 233CA0E1 		lsr	r3, r3, #24
 16399 00b4 060053E3 		cmp	r3, #6
 16400 00b8 3F00000A 		beq	.L1058
 16401              		.loc 1 6572 9 discriminator 7
 16402 00bc 0130E0E3 		mvn	r3, #1
 16403              		.loc 1 6572 9
 16404 00c0 C90000EA 		b	.L1056
 16405              	.L1054:
 16406              		.loc 1 6572 9 discriminator 2
 16407 00c4 28301BE5 		ldr	r3, [fp, #-40]
 16408 00c8 2324A0E1 		lsr	r2, r3, #8
 16409 00cc 20301BE5 		ldr	r3, [fp, #-32]
 16410 00d0 143093E5 		ldr	r3, [r3, #20]
 16411 00d4 030052E1 		cmp	r2, r3
 16412 00d8 0100003A 		bcc	.L1059
 16413              		.loc 1 6572 9 discriminator 8
 16414 00dc 0230E0E3 		mvn	r3, #2
 16415              		.loc 1 6572 9
 16416 00e0 C10000EA 		b	.L1056
 16417              	.L1059:
 16418              		.loc 1 6572 9 discriminator 9
 16419 00e4 28301BE5 		ldr	r3, [fp, #-40]
 16420 00e8 2334A0E1 		lsr	r3, r3, #8
 16421 00ec 8322A0E1 		lsl	r2, r3, #5
 16422 00f0 20301BE5 		ldr	r3, [fp, #-32]
 16423 00f4 0C3093E5 		ldr	r3, [r3, #12]
 16424 00f8 033082E0 		add	r3, r2, r3
 16425 00fc 08300BE5 		str	r3, [fp, #-8]
 16426 0100 08301BE5 		ldr	r3, [fp, #-8]
 16427 0104 0300A0E1 		mov	r0, r3
 16428 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16429 010c 18000BE5 		str	r0, [fp, #-24]
 16430              		.loc 1 6572 9 discriminator 1
 16431 0110 18301BE5 		ldr	r3, [fp, #-24]
 16432 0114 FF3803E2 		and	r3, r3, #16711680
 16433 0118 020853E3 		cmp	r3, #131072
 16434 011c 0100001A 		bne	.L1060
 16435              		.loc 1 6572 9 discriminator 10
 16436 0120 0830E0E3 		mvn	r3, #8
 16437              		.loc 1 6572 9
 16438 0124 B00000EA 		b	.L1056
 16439              	.L1060:
 16440              		.loc 1 6572 9 discriminator 11
 16441 0128 18301BE5 		ldr	r3, [fp, #-24]
 16442 012c 233CA0E1 		lsr	r3, r3, #24
 16443 0130 030053E3 		cmp	r3, #3
 16444 0134 0100000A 		beq	.L1061
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 405


 16445              		.loc 1 6572 9 discriminator 12
 16446 0138 0130E0E3 		mvn	r3, #1
 16447              		.loc 1 6572 9
 16448 013c AA0000EA 		b	.L1056
 16449              	.L1061:
 16450              		.loc 1 6572 9 discriminator 13
 16451 0140 28301BE5 		ldr	r3, [fp, #-40]
 16452 0144 7F2003E2 		and	r2, r3, #127
 16453 0148 08301BE5 		ldr	r3, [fp, #-8]
 16454 014c 143093E5 		ldr	r3, [r3, #20]
 16455 0150 030052E1 		cmp	r2, r3
 16456 0154 0100003A 		bcc	.L1062
 16457              		.loc 1 6572 9 discriminator 14
 16458 0158 0230E0E3 		mvn	r3, #2
 16459              		.loc 1 6572 9
 16460 015c A20000EA 		b	.L1056
 16461              	.L1062:
 16462              		.loc 1 6572 9 discriminator 15
 16463 0160 28301BE5 		ldr	r3, [fp, #-40]
 16464 0164 7F3003E2 		and	r3, r3, #127
 16465 0168 8322A0E1 		lsl	r2, r3, #5
 16466 016c 08301BE5 		ldr	r3, [fp, #-8]
 16467 0170 0C3093E5 		ldr	r3, [r3, #12]
 16468 0174 033082E0 		add	r3, r2, r3
 16469 0178 08300BE5 		str	r3, [fp, #-8]
 16470 017c 08301BE5 		ldr	r3, [fp, #-8]
 16471 0180 0300A0E1 		mov	r0, r3
 16472 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16473 0188 18000BE5 		str	r0, [fp, #-24]
 16474              		.loc 1 6572 9 discriminator 1
 16475 018c 18301BE5 		ldr	r3, [fp, #-24]
 16476 0190 FF3803E2 		and	r3, r3, #16711680
 16477 0194 020853E3 		cmp	r3, #131072
 16478 0198 0100001A 		bne	.L1063
 16479              		.loc 1 6572 9 discriminator 16
 16480 019c 0830E0E3 		mvn	r3, #8
 16481              		.loc 1 6572 9
 16482 01a0 910000EA 		b	.L1056
 16483              	.L1063:
 16484              		.loc 1 6572 9 discriminator 17
 16485 01a4 18301BE5 		ldr	r3, [fp, #-24]
 16486 01a8 233CA0E1 		lsr	r3, r3, #24
 16487 01ac 060053E3 		cmp	r3, #6
 16488 01b0 0100000A 		beq	.L1058
 16489              		.loc 1 6572 9 discriminator 18
 16490 01b4 0130E0E3 		mvn	r3, #1
 16491              		.loc 1 6572 9
 16492 01b8 8B0000EA 		b	.L1056
 16493              	.L1058:
6573:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Cap_New,Type_Stat);
6574:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6575:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Cap_New,RME_THD_FLAG_SWT);
 16494              		.loc 1 6575 9 is_stmt 1
 16495 01bc 08301BE5 		ldr	r3, [fp, #-8]
 16496 01c0 083093E5 		ldr	r3, [r3, #8]
 16497 01c4 013C03E2 		and	r3, r3, #256
 16498 01c8 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 406


 16499 01cc 0100001A 		bne	.L1064
 16500              		.loc 1 6575 9 is_stmt 0 discriminator 1
 16501 01d0 0630E0E3 		mvn	r3, #6
 16502              		.loc 1 6575 9
 16503 01d4 840000EA 		b	.L1056
 16504              	.L1064:
6576:../../Source/Kernel/rme_kernel.c ****         /* See if we can do operation on this core */
6577:../../Source/Kernel/rme_kernel.c ****         Thd_New=RME_CAP_GETOBJ(Thd_Cap_New,struct RME_Thd_Struct*);
 16505              		.loc 1 6577 17 is_stmt 1
 16506 01d8 08301BE5 		ldr	r3, [fp, #-8]
 16507 01dc 0C3093E5 		ldr	r3, [r3, #12]
 16508              		.loc 1 6577 16
 16509 01e0 0C300BE5 		str	r3, [fp, #-12]
6578:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Local!=Local)
 16510              		.loc 1 6578 26
 16511 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 16512 01e8 143093E5 		ldr	r3, [r3, #20]
 16513              		.loc 1 6578 11
 16514 01ec 10201BE5 		ldr	r2, [fp, #-16]
 16515 01f0 030052E1 		cmp	r2, r3
 16516 01f4 0100000A 		beq	.L1065
6579:../../Source/Kernel/rme_kernel.c ****         {
6580:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6581:../../Source/Kernel/rme_kernel.c **** 
6582:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16517              		.loc 1 6582 20
 16518 01f8 CB30E0E3 		mvn	r3, #203
 16519 01fc 7A0000EA 		b	.L1056
 16520              	.L1065:
6583:../../Source/Kernel/rme_kernel.c ****         }
6584:../../Source/Kernel/rme_kernel.c ****         else
6585:../../Source/Kernel/rme_kernel.c ****         {
6586:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6587:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6588:../../Source/Kernel/rme_kernel.c ****         }
6589:../../Source/Kernel/rme_kernel.c ****             
6590:../../Source/Kernel/rme_kernel.c ****         /* See if we can yield to the thread */
6591:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Prio!=Thd_New->Sched.Prio)
 16521              		.loc 1 6591 26
 16522 0200 14301BE5 		ldr	r3, [fp, #-20]
 16523 0204 202093E5 		ldr	r2, [r3, #32]
 16524              		.loc 1 6591 47
 16525 0208 0C301BE5 		ldr	r3, [fp, #-12]
 16526 020c 203093E5 		ldr	r3, [r3, #32]
 16527              		.loc 1 6591 11
 16528 0210 030052E1 		cmp	r2, r3
 16529 0214 0100000A 		beq	.L1066
6592:../../Source/Kernel/rme_kernel.c ****         {
6593:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6594:../../Source/Kernel/rme_kernel.c **** 
6595:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 16530              		.loc 1 6595 20
 16531 0218 CC30E0E3 		mvn	r3, #204
 16532 021c 720000EA 		b	.L1056
 16533              	.L1066:
6596:../../Source/Kernel/rme_kernel.c ****         }
6597:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 407


6598:../../Source/Kernel/rme_kernel.c ****         {
6599:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6600:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6601:../../Source/Kernel/rme_kernel.c ****         }
6602:../../Source/Kernel/rme_kernel.c ****             
6603:../../Source/Kernel/rme_kernel.c ****         /* Check if the target thread state is valid */
6604:../../Source/Kernel/rme_kernel.c ****         if((Thd_New->Sched.State==RME_THD_BLOCKED)||
 16534              		.loc 1 6604 27
 16535 0220 0C301BE5 		ldr	r3, [fp, #-12]
 16536 0224 1C3093E5 		ldr	r3, [r3, #28]
 16537              		.loc 1 6604 11
 16538 0228 010053E3 		cmp	r3, #1
 16539 022c 0700000A 		beq	.L1067
6605:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16540              		.loc 1 6605 27
 16541 0230 0C301BE5 		ldr	r3, [fp, #-12]
 16542 0234 1C3093E5 		ldr	r3, [r3, #28]
6604:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16543              		.loc 1 6604 51 discriminator 1
 16544 0238 020053E3 		cmp	r3, #2
 16545 023c 0300000A 		beq	.L1067
6606:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_EXCPEND))
 16546              		.loc 1 6606 27
 16547 0240 0C301BE5 		ldr	r3, [fp, #-12]
 16548 0244 1C3093E5 		ldr	r3, [r3, #28]
6605:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16549              		.loc 1 6605 51
 16550 0248 030053E3 		cmp	r3, #3
 16551 024c 0100001A 		bne	.L1068
 16552              	.L1067:
6607:../../Source/Kernel/rme_kernel.c ****         {
6608:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6609:../../Source/Kernel/rme_kernel.c **** 
6610:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16553              		.loc 1 6610 20
 16554 0250 CB30E0E3 		mvn	r3, #203
 16555 0254 640000EA 		b	.L1056
 16556              	.L1068:
6611:../../Source/Kernel/rme_kernel.c ****         }
6612:../../Source/Kernel/rme_kernel.c ****         else
6613:../../Source/Kernel/rme_kernel.c ****         {
6614:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6615:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6616:../../Source/Kernel/rme_kernel.c ****         }
6617:../../Source/Kernel/rme_kernel.c ****         
6618:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6619:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16557              		.loc 1 6619 11
 16558 0258 2C301BE5 		ldr	r3, [fp, #-44]
 16559 025c 000053E3 		cmp	r3, #0
 16560 0260 4300000A 		beq	.L1069
 16561              		.loc 1 6619 43 discriminator 1
 16562 0264 14301BE5 		ldr	r3, [fp, #-20]
 16563 0268 183093E5 		ldr	r3, [r3, #24]
 16564              		.loc 1 6619 26 discriminator 1
 16565 026c 0E0173E3 		cmn	r3, #-2147483645
 16566 0270 3F00008A 		bhi	.L1069
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 408


6620:../../Source/Kernel/rme_kernel.c ****         {
6621:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6622:../../Source/Kernel/rme_kernel.c ****             
6623:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6624:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16567              		.loc 1 6624 33
 16568 0274 14301BE5 		ldr	r3, [fp, #-20]
 16569 0278 0020A0E3 		mov	r2, #0
 16570 027c 182083E5 		str	r2, [r3, #24]
6625:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16571              		.loc 1 6625 13
 16572 0280 14001BE5 		ldr	r0, [fp, #-20]
 16573 0284 FEFFFFEB 		bl	_RME_Run_Del
6626:../../Source/Kernel/rme_kernel.c ****             
6627:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6628:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16574              		.loc 1 6628 33
 16575 0288 14301BE5 		ldr	r3, [fp, #-20]
 16576 028c 0220A0E3 		mov	r2, #2
 16577 0290 1C2083E5 		str	r2, [r3, #28]
6629:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16578              		.loc 1 6629 13
 16579 0294 14001BE5 		ldr	r0, [fp, #-20]
 16580 0298 FEFFFFEB 		bl	_RME_Run_Notif
6630:../../Source/Kernel/rme_kernel.c ****             
6631:../../Source/Kernel/rme_kernel.c ****             /* Because we have sent a notification, we could have unblocked a
6632:../../Source/Kernel/rme_kernel.c ****              * thread at higher priority. Additionally, if the new thread is
6633:../../Source/Kernel/rme_kernel.c ****              * the current thread, we are forced to switch to someone else,
6634:../../Source/Kernel/rme_kernel.c ****              * because the current thread's timeslice must be exhausted. */
6635:../../Source/Kernel/rme_kernel.c ****             Thd_High=_RME_Run_High(Local);
 16581              		.loc 1 6635 22
 16582 029c 10001BE5 		ldr	r0, [fp, #-16]
 16583 02a0 FEFFFFEB 		bl	_RME_Run_High
 16584 02a4 1C000BE5 		str	r0, [fp, #-28]
6636:../../Source/Kernel/rme_kernel.c ****             if((Thd_High->Sched.Prio>Thd_New->Sched.Prio)||(Thd_Cur==Thd_New))
 16585              		.loc 1 6636 32
 16586 02a8 1C301BE5 		ldr	r3, [fp, #-28]
 16587 02ac 202093E5 		ldr	r2, [r3, #32]
 16588              		.loc 1 6636 52
 16589 02b0 0C301BE5 		ldr	r3, [fp, #-12]
 16590 02b4 203093E5 		ldr	r3, [r3, #32]
 16591              		.loc 1 6636 15
 16592 02b8 030052E1 		cmp	r2, r3
 16593 02bc 0300008A 		bhi	.L1070
 16594              		.loc 1 6636 58 discriminator 1
 16595 02c0 14201BE5 		ldr	r2, [fp, #-20]
 16596 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 16597 02c8 030052E1 		cmp	r2, r3
 16598 02cc 2800001A 		bne	.L1069
 16599              	.L1070:
6637:../../Source/Kernel/rme_kernel.c ****             {
6638:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6639:../../Source/Kernel/rme_kernel.c **** 
6640:../../Source/Kernel/rme_kernel.c ****                 Thd_New=Thd_High;
 16600              		.loc 1 6640 24
 16601 02d0 1C301BE5 		ldr	r3, [fp, #-28]
 16602 02d4 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 409


 16603 02d8 250000EA 		b	.L1069
 16604              	.L1053:
6641:../../Source/Kernel/rme_kernel.c ****             }
6642:../../Source/Kernel/rme_kernel.c ****             else
6643:../../Source/Kernel/rme_kernel.c ****             {
6644:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6645:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6646:../../Source/Kernel/rme_kernel.c ****             }
6647:../../Source/Kernel/rme_kernel.c ****         }
6648:../../Source/Kernel/rme_kernel.c ****         else
6649:../../Source/Kernel/rme_kernel.c ****         {
6650:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6651:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6652:../../Source/Kernel/rme_kernel.c ****         }
6653:../../Source/Kernel/rme_kernel.c ****     }
6654:../../Source/Kernel/rme_kernel.c ****     /* The kernel needs to pick a thread to switch to */
6655:../../Source/Kernel/rme_kernel.c ****     else
6656:../../Source/Kernel/rme_kernel.c ****     {
6657:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6658:../../Source/Kernel/rme_kernel.c ****         
6659:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6660:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16605              		.loc 1 6660 11
 16606 02dc 2C301BE5 		ldr	r3, [fp, #-44]
 16607 02e0 000053E3 		cmp	r3, #0
 16608 02e4 0E00000A 		beq	.L1071
 16609              		.loc 1 6660 43 discriminator 1
 16610 02e8 14301BE5 		ldr	r3, [fp, #-20]
 16611 02ec 183093E5 		ldr	r3, [r3, #24]
 16612              		.loc 1 6660 26 discriminator 1
 16613 02f0 0E0173E3 		cmn	r3, #-2147483645
 16614 02f4 0A00008A 		bhi	.L1071
6661:../../Source/Kernel/rme_kernel.c ****         {
6662:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6663:../../Source/Kernel/rme_kernel.c ****             
6664:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6665:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16615              		.loc 1 6665 33
 16616 02f8 14301BE5 		ldr	r3, [fp, #-20]
 16617 02fc 0020A0E3 		mov	r2, #0
 16618 0300 182083E5 		str	r2, [r3, #24]
6666:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16619              		.loc 1 6666 13
 16620 0304 14001BE5 		ldr	r0, [fp, #-20]
 16621 0308 FEFFFFEB 		bl	_RME_Run_Del
6667:../../Source/Kernel/rme_kernel.c ****             
6668:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6669:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16622              		.loc 1 6669 33
 16623 030c 14301BE5 		ldr	r3, [fp, #-20]
 16624 0310 0220A0E3 		mov	r2, #2
 16625 0314 1C2083E5 		str	r2, [r3, #28]
6670:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16626              		.loc 1 6670 13
 16627 0318 14001BE5 		ldr	r0, [fp, #-20]
 16628 031c FEFFFFEB 		bl	_RME_Run_Notif
 16629 0320 100000EA 		b	.L1072
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 410


 16630              	.L1071:
6671:../../Source/Kernel/rme_kernel.c ****         }
6672:../../Source/Kernel/rme_kernel.c ****         else
6673:../../Source/Kernel/rme_kernel.c ****         {
6674:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6675:../../Source/Kernel/rme_kernel.c ****             
6676:../../Source/Kernel/rme_kernel.c ****             /* This operation is just to make sure that if there are any other
6677:../../Source/Kernel/rme_kernel.c ****              * thread at the same priority level, we're not switching to ourself */
6678:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 16631              		.loc 1 6678 13
 16632 0324 14301BE5 		ldr	r3, [fp, #-20]
 16633 0328 1C3093E5 		ldr	r3, [r3, #28]
 16634 032c 000053E3 		cmp	r3, #0
 16635 0330 0800000A 		beq	.L1073
 16636              		.loc 1 6678 13 is_stmt 0 discriminator 1
 16637 0334 003000E3 		movw	r3, #:lower16:.LC6
 16638 0338 003040E3 		movt	r3, #:upper16:.LC6
 16639 033c 002000E3 		movw	r2, #:lower16:.LC7
 16640 0340 002040E3 		movt	r2, #:upper16:.LC7
 16641 0344 161A01E3 		movw	r1, #6678
 16642 0348 000000E3 		movw	r0, #:lower16:.LC8
 16643 034c 000040E3 		movt	r0, #:upper16:.LC8
 16644 0350 FEFFFFEB 		bl	RME_Log
 16645              	.L1074:
 16646              		.loc 1 6678 13
 16647 0354 FEFFFFEA 		b	.L1074
 16648              	.L1073:
6679:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16649              		.loc 1 6679 13 is_stmt 1
 16650 0358 14001BE5 		ldr	r0, [fp, #-20]
 16651 035c FEFFFFEB 		bl	_RME_Run_Del
6680:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Cur);
 16652              		.loc 1 6680 13
 16653 0360 14001BE5 		ldr	r0, [fp, #-20]
 16654 0364 FEFFFFEB 		bl	_RME_Run_Ins
 16655              	.L1072:
6681:../../Source/Kernel/rme_kernel.c ****         }
6682:../../Source/Kernel/rme_kernel.c ****         
6683:../../Source/Kernel/rme_kernel.c ****         Thd_New=_RME_Run_High(Local);
 16656              		.loc 1 6683 17
 16657 0368 10001BE5 		ldr	r0, [fp, #-16]
 16658 036c FEFFFFEB 		bl	_RME_Run_High
 16659 0370 0C000BE5 		str	r0, [fp, #-12]
 16660              	.L1069:
6684:../../Source/Kernel/rme_kernel.c ****     }
6685:../../Source/Kernel/rme_kernel.c ****     
6686:../../Source/Kernel/rme_kernel.c ****     /* Now that we are successful, save the return value to the caller stack */
6687:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 16661              		.loc 1 6687 5
 16662 0374 0010A0E3 		mov	r1, #0
 16663 0378 24001BE5 		ldr	r0, [fp, #-36]
 16664 037c FEFFFFEB 		bl	__RME_Svc_Retval_Set
6688:../../Source/Kernel/rme_kernel.c **** 
6689:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 16665              		.loc 1 6689 5
 16666 0380 0C301BE5 		ldr	r3, [fp, #-12]
 16667 0384 1C3093E5 		ldr	r3, [r3, #28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 411


 16668 0388 000053E3 		cmp	r3, #0
 16669 038c 0800000A 		beq	.L1075
 16670              		.loc 1 6689 5 is_stmt 0 discriminator 1
 16671 0390 003000E3 		movw	r3, #:lower16:.LC6
 16672 0394 003040E3 		movt	r3, #:upper16:.LC6
 16673 0398 002000E3 		movw	r2, #:lower16:.LC7
 16674 039c 002040E3 		movt	r2, #:upper16:.LC7
 16675 03a0 211A01E3 		movw	r1, #6689
 16676 03a4 000000E3 		movw	r0, #:lower16:.LC8
 16677 03a8 000040E3 		movt	r0, #:upper16:.LC8
 16678 03ac FEFFFFEB 		bl	RME_Log
 16679              	.L1076:
 16680              		.loc 1 6689 5
 16681 03b0 FEFFFFEA 		b	.L1076
 16682              	.L1075:
6690:../../Source/Kernel/rme_kernel.c ****     /* We cannot call _RME_Kern_High because it picks some random thread. Instead,
6691:../../Source/Kernel/rme_kernel.c ****      * we use a manual implementation that is faster than the _RME_Kern_High. */
6692:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur==Thd_New)
 16683              		.loc 1 6692 7 is_stmt 1
 16684 03b4 14201BE5 		ldr	r2, [fp, #-20]
 16685 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 16686 03bc 030052E1 		cmp	r2, r3
 16687 03c0 0100001A 		bne	.L1077
6693:../../Source/Kernel/rme_kernel.c ****     {
6694:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6695:../../Source/Kernel/rme_kernel.c ****         
6696:../../Source/Kernel/rme_kernel.c ****         return 0;
 16688              		.loc 1 6696 16
 16689 03c4 0030A0E3 		mov	r3, #0
 16690 03c8 070000EA 		b	.L1056
 16691              	.L1077:
6697:../../Source/Kernel/rme_kernel.c ****     }
6698:../../Source/Kernel/rme_kernel.c ****     else
6699:../../Source/Kernel/rme_kernel.c ****     {
6700:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6701:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6702:../../Source/Kernel/rme_kernel.c ****     }
6703:../../Source/Kernel/rme_kernel.c ****             
6704:../../Source/Kernel/rme_kernel.c ****     /* We have a solid context switch at this point */
6705:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 16692              		.loc 1 6705 5
 16693 03cc 0C201BE5 		ldr	r2, [fp, #-12]
 16694 03d0 14101BE5 		ldr	r1, [fp, #-20]
 16695 03d4 24001BE5 		ldr	r0, [fp, #-36]
 16696 03d8 FEFFFFEB 		bl	_RME_Run_Swt
6706:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 16697              		.loc 1 6706 19
 16698 03dc 10301BE5 		ldr	r3, [fp, #-16]
 16699 03e0 0C201BE5 		ldr	r2, [fp, #-12]
 16700 03e4 042083E5 		str	r2, [r3, #4]
6707:../../Source/Kernel/rme_kernel.c **** 
6708:../../Source/Kernel/rme_kernel.c ****     return 0;
 16701              		.loc 1 6708 12
 16702 03e8 0030A0E3 		mov	r3, #0
 16703              	.L1056:
6709:../../Source/Kernel/rme_kernel.c **** }
 16704              		.loc 1 6709 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 412


 16705 03ec 0300A0E1 		mov	r0, r3
 16706 03f0 04D04BE2 		sub	sp, fp, #4
 16707              		.cfi_def_cfa 13, 8
 16708              		@ sp needed
 16709 03f4 0088BDE8 		pop	{fp, pc}
 16710              		.cfi_endproc
 16711              	.LFE64:
 16713              		.section	.text._RME_Sig_Boot_Crt,"ax",%progbits
 16714              		.align	2
 16715              		.global	_RME_Sig_Boot_Crt
 16716              		.syntax unified
 16717              		.arm
 16719              	_RME_Sig_Boot_Crt:
 16720              	.LFB65:
6710:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Swt *************************************************/
6711:../../Source/Kernel/rme_kernel.c **** 
6712:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Boot_Crt *************************************************
6713:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time kernel signal endpoint. This is only used at
6714:../../Source/Kernel/rme_kernel.c ****               boot-time to create endpoints that are related directly to 
6715:../../Source/Kernel/rme_kernel.c ****               hardware interrupts.
6716:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
6717:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6718:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6719:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6720:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6721:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6722:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6723:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6724:../../Source/Kernel/rme_kernel.c **** Output      : None.
6725:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6726:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6727:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Sig_Boot_Crt(struct RME_Cap_Cpt* Cpt,
6728:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
6729:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Sig)
6730:../../Source/Kernel/rme_kernel.c **** {
 16721              		.loc 1 6730 1
 16722              		.cfi_startproc
 16723              		@ args = 0, pretend = 0, frame = 32
 16724              		@ frame_needed = 1, uses_anonymous_args = 0
 16725 0000 00482DE9 		push	{fp, lr}
 16726              		.cfi_def_cfa_offset 8
 16727              		.cfi_offset 11, -8
 16728              		.cfi_offset 14, -4
 16729 0004 04B08DE2 		add	fp, sp, #4
 16730              		.cfi_def_cfa 11, 4
 16731 0008 20D04DE2 		sub	sp, sp, #32
 16732 000c 18000BE5 		str	r0, [fp, #-24]
 16733 0010 1C100BE5 		str	r1, [fp, #-28]
 16734 0014 20200BE5 		str	r2, [fp, #-32]
6731:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
6732:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Crt;
6733:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6734:../../Source/Kernel/rme_kernel.c ****     
6735:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6736:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 16735              		.loc 1 6736 5
 16736 0018 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 413


 16737 001c 803003E2 		and	r3, r3, #128
 16738 0020 000053E3 		cmp	r3, #0
 16739 0024 1C00001A 		bne	.L1079
 16740              		.loc 1 6736 5 is_stmt 0 discriminator 1
 16741 0028 18301BE5 		ldr	r3, [fp, #-24]
 16742 002c 142093E5 		ldr	r2, [r3, #20]
 16743 0030 1C301BE5 		ldr	r3, [fp, #-28]
 16744 0034 030052E1 		cmp	r2, r3
 16745 0038 0100008A 		bhi	.L1080
 16746              		.loc 1 6736 5 discriminator 3
 16747 003c 0230E0E3 		mvn	r3, #2
 16748              		.loc 1 6736 5
 16749 0040 8A0000EA 		b	.L1081
 16750              	.L1080:
 16751              		.loc 1 6736 5 discriminator 4
 16752 0044 1C301BE5 		ldr	r3, [fp, #-28]
 16753 0048 8322A0E1 		lsl	r2, r3, #5
 16754 004c 18301BE5 		ldr	r3, [fp, #-24]
 16755 0050 0C3093E5 		ldr	r3, [r3, #12]
 16756 0054 033082E0 		add	r3, r2, r3
 16757 0058 08300BE5 		str	r3, [fp, #-8]
 16758 005c 08301BE5 		ldr	r3, [fp, #-8]
 16759 0060 0300A0E1 		mov	r0, r3
 16760 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16761 0068 0C000BE5 		str	r0, [fp, #-12]
 16762              		.loc 1 6736 5 discriminator 1
 16763 006c 0C301BE5 		ldr	r3, [fp, #-12]
 16764 0070 FF3803E2 		and	r3, r3, #16711680
 16765 0074 020853E3 		cmp	r3, #131072
 16766 0078 0100001A 		bne	.L1082
 16767              		.loc 1 6736 5 discriminator 5
 16768 007c 0830E0E3 		mvn	r3, #8
 16769              		.loc 1 6736 5
 16770 0080 7A0000EA 		b	.L1081
 16771              	.L1082:
 16772              		.loc 1 6736 5 discriminator 6
 16773 0084 0C301BE5 		ldr	r3, [fp, #-12]
 16774 0088 233CA0E1 		lsr	r3, r3, #24
 16775 008c 030053E3 		cmp	r3, #3
 16776 0090 3F00000A 		beq	.L1083
 16777              		.loc 1 6736 5 discriminator 7
 16778 0094 0130E0E3 		mvn	r3, #1
 16779              		.loc 1 6736 5
 16780 0098 740000EA 		b	.L1081
 16781              	.L1079:
 16782              		.loc 1 6736 5 discriminator 2
 16783 009c 1C301BE5 		ldr	r3, [fp, #-28]
 16784 00a0 2324A0E1 		lsr	r2, r3, #8
 16785 00a4 18301BE5 		ldr	r3, [fp, #-24]
 16786 00a8 143093E5 		ldr	r3, [r3, #20]
 16787 00ac 030052E1 		cmp	r2, r3
 16788 00b0 0100003A 		bcc	.L1084
 16789              		.loc 1 6736 5 discriminator 8
 16790 00b4 0230E0E3 		mvn	r3, #2
 16791              		.loc 1 6736 5
 16792 00b8 6C0000EA 		b	.L1081
 16793              	.L1084:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 414


 16794              		.loc 1 6736 5 discriminator 9
 16795 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 16796 00c0 2334A0E1 		lsr	r3, r3, #8
 16797 00c4 8322A0E1 		lsl	r2, r3, #5
 16798 00c8 18301BE5 		ldr	r3, [fp, #-24]
 16799 00cc 0C3093E5 		ldr	r3, [r3, #12]
 16800 00d0 033082E0 		add	r3, r2, r3
 16801 00d4 08300BE5 		str	r3, [fp, #-8]
 16802 00d8 08301BE5 		ldr	r3, [fp, #-8]
 16803 00dc 0300A0E1 		mov	r0, r3
 16804 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16805 00e4 0C000BE5 		str	r0, [fp, #-12]
 16806              		.loc 1 6736 5 discriminator 1
 16807 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 16808 00ec FF3803E2 		and	r3, r3, #16711680
 16809 00f0 020853E3 		cmp	r3, #131072
 16810 00f4 0100001A 		bne	.L1085
 16811              		.loc 1 6736 5 discriminator 10
 16812 00f8 0830E0E3 		mvn	r3, #8
 16813              		.loc 1 6736 5
 16814 00fc 5B0000EA 		b	.L1081
 16815              	.L1085:
 16816              		.loc 1 6736 5 discriminator 11
 16817 0100 0C301BE5 		ldr	r3, [fp, #-12]
 16818 0104 233CA0E1 		lsr	r3, r3, #24
 16819 0108 030053E3 		cmp	r3, #3
 16820 010c 0100000A 		beq	.L1086
 16821              		.loc 1 6736 5 discriminator 12
 16822 0110 0130E0E3 		mvn	r3, #1
 16823              		.loc 1 6736 5
 16824 0114 550000EA 		b	.L1081
 16825              	.L1086:
 16826              		.loc 1 6736 5 discriminator 13
 16827 0118 1C301BE5 		ldr	r3, [fp, #-28]
 16828 011c 7F2003E2 		and	r2, r3, #127
 16829 0120 08301BE5 		ldr	r3, [fp, #-8]
 16830 0124 143093E5 		ldr	r3, [r3, #20]
 16831 0128 030052E1 		cmp	r2, r3
 16832 012c 0100003A 		bcc	.L1087
 16833              		.loc 1 6736 5 discriminator 14
 16834 0130 0230E0E3 		mvn	r3, #2
 16835              		.loc 1 6736 5
 16836 0134 4D0000EA 		b	.L1081
 16837              	.L1087:
 16838              		.loc 1 6736 5 discriminator 15
 16839 0138 1C301BE5 		ldr	r3, [fp, #-28]
 16840 013c 7F3003E2 		and	r3, r3, #127
 16841 0140 8322A0E1 		lsl	r2, r3, #5
 16842 0144 08301BE5 		ldr	r3, [fp, #-8]
 16843 0148 0C3093E5 		ldr	r3, [r3, #12]
 16844 014c 033082E0 		add	r3, r2, r3
 16845 0150 08300BE5 		str	r3, [fp, #-8]
 16846 0154 08301BE5 		ldr	r3, [fp, #-8]
 16847 0158 0300A0E1 		mov	r0, r3
 16848 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16849 0160 0C000BE5 		str	r0, [fp, #-12]
 16850              		.loc 1 6736 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 415


 16851 0164 0C301BE5 		ldr	r3, [fp, #-12]
 16852 0168 FF3803E2 		and	r3, r3, #16711680
 16853 016c 020853E3 		cmp	r3, #131072
 16854 0170 0100001A 		bne	.L1088
 16855              		.loc 1 6736 5 discriminator 16
 16856 0174 0830E0E3 		mvn	r3, #8
 16857              		.loc 1 6736 5
 16858 0178 3C0000EA 		b	.L1081
 16859              	.L1088:
 16860              		.loc 1 6736 5 discriminator 17
 16861 017c 0C301BE5 		ldr	r3, [fp, #-12]
 16862 0180 233CA0E1 		lsr	r3, r3, #24
 16863 0184 030053E3 		cmp	r3, #3
 16864 0188 0100000A 		beq	.L1083
 16865              		.loc 1 6736 5 discriminator 18
 16866 018c 0130E0E3 		mvn	r3, #1
 16867              		.loc 1 6736 5
 16868 0190 360000EA 		b	.L1081
 16869              	.L1083:
6737:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
6738:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6739:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 16870              		.loc 1 6739 5 is_stmt 1
 16871 0194 08301BE5 		ldr	r3, [fp, #-8]
 16872 0198 083093E5 		ldr	r3, [r3, #8]
 16873 019c 013003E2 		and	r3, r3, #1
 16874 01a0 000053E3 		cmp	r3, #0
 16875 01a4 0100001A 		bne	.L1089
 16876              		.loc 1 6739 5 is_stmt 0 discriminator 1
 16877 01a8 0630E0E3 		mvn	r3, #6
 16878              		.loc 1 6739 5
 16879 01ac 2F0000EA 		b	.L1081
 16880              	.L1089:
6740:../../Source/Kernel/rme_kernel.c ****     
6741:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6742:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 16881              		.loc 1 6742 5 is_stmt 1
 16882 01b0 08301BE5 		ldr	r3, [fp, #-8]
 16883 01b4 142093E5 		ldr	r2, [r3, #20]
 16884 01b8 20301BE5 		ldr	r3, [fp, #-32]
 16885 01bc 030052E1 		cmp	r2, r3
 16886 01c0 0100008A 		bhi	.L1090
 16887              		.loc 1 6742 5 is_stmt 0 discriminator 1
 16888 01c4 0230E0E3 		mvn	r3, #2
 16889              		.loc 1 6742 5
 16890 01c8 280000EA 		b	.L1081
 16891              	.L1090:
 16892              		.loc 1 6742 5 discriminator 2
 16893 01cc 20301BE5 		ldr	r3, [fp, #-32]
 16894 01d0 8322A0E1 		lsl	r2, r3, #5
 16895 01d4 08301BE5 		ldr	r3, [fp, #-8]
 16896 01d8 0C3093E5 		ldr	r3, [r3, #12]
 16897 01dc 033082E0 		add	r3, r2, r3
 16898 01e0 10300BE5 		str	r3, [fp, #-16]
6743:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6744:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 16899              		.loc 1 6744 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 416


 16900 01e4 10301BE5 		ldr	r3, [fp, #-16]
 16901 01e8 0128A0E3 		mov	r2, #65536
 16902 01ec 0010A0E3 		mov	r1, #0
 16903 01f0 0300A0E1 		mov	r0, r3
 16904 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 16905 01f8 0030A0E1 		mov	r3, r0
 16906              		.loc 1 6744 5 is_stmt 0 discriminator 1
 16907 01fc 000053E3 		cmp	r3, #0
 16908 0200 0100001A 		bne	.L1091
 16909 0204 0430E0E3 		mvn	r3, #4
 16910              		.loc 1 6744 5
 16911 0208 180000EA 		b	.L1081
 16912              	.L1091:
 16913              		.loc 1 6744 5 discriminator 2
 16914 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 16915 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 16916 0214 002093E5 		ldr	r2, [r3]
 16917 0218 10301BE5 		ldr	r3, [fp, #-16]
 16918 021c 102083E5 		str	r2, [r3, #16]
6745:../../Source/Kernel/rme_kernel.c **** 
6746:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6747:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=1U;
 16919              		.loc 1 6747 27 is_stmt 1
 16920 0220 10301BE5 		ldr	r3, [fp, #-16]
 16921 0224 0120A0E3 		mov	r2, #1
 16922 0228 042083E5 		str	r2, [r3, #4]
6748:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 16923              		.loc 1 6748 25
 16924 022c 10301BE5 		ldr	r3, [fp, #-16]
 16925 0230 0020A0E3 		mov	r2, #0
 16926 0234 0C2083E5 		str	r2, [r3, #12]
6749:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 16927              		.loc 1 6749 23
 16928 0238 10301BE5 		ldr	r3, [fp, #-16]
 16929 023c 3F20A0E3 		mov	r2, #63
 16930 0240 082083E5 		str	r2, [r3, #8]
6750:../../Source/Kernel/rme_kernel.c ****     
6751:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6752:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 16931              		.loc 1 6752 21
 16932 0244 10301BE5 		ldr	r3, [fp, #-16]
 16933 0248 0020A0E3 		mov	r2, #0
 16934 024c 142083E5 		str	r2, [r3, #20]
6753:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=RME_NULL;
 16935              		.loc 1 6753 17
 16936 0250 10301BE5 		ldr	r3, [fp, #-16]
 16937 0254 0020A0E3 		mov	r2, #0
 16938 0258 182083E5 		str	r2, [r3, #24]
6754:../../Source/Kernel/rme_kernel.c **** 
6755:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6756:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 16939              		.loc 1 6756 5
 16940 025c 10301BE5 		ldr	r3, [fp, #-16]
 16941 0260 0213A0E3 		mov	r1, #134217728
 16942 0264 0300A0E1 		mov	r0, r3
 16943 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6757:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 417


6758:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6759:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6760:../../Source/Kernel/rme_kernel.c **** 
6761:../../Source/Kernel/rme_kernel.c ****     return 0;
 16944              		.loc 1 6761 12
 16945 026c 0030A0E3 		mov	r3, #0
 16946              	.L1081:
6762:../../Source/Kernel/rme_kernel.c **** }
 16947              		.loc 1 6762 1
 16948 0270 0300A0E1 		mov	r0, r3
 16949 0274 04D04BE2 		sub	sp, fp, #4
 16950              		.cfi_def_cfa 13, 8
 16951              		@ sp needed
 16952 0278 0088BDE8 		pop	{fp, pc}
 16953              		.cfi_endproc
 16954              	.LFE65:
 16956              		.section	.text._RME_Sig_Crt,"ax",%progbits
 16957              		.align	2
 16958              		.syntax unified
 16959              		.arm
 16961              	_RME_Sig_Crt:
 16962              	.LFB66:
6763:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Boot_Crt ********************************************/
6764:../../Source/Kernel/rme_kernel.c **** 
6765:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Crt ******************************************************
6766:../../Source/Kernel/rme_kernel.c **** Description : Create a signal endpoint.
6767:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6768:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6769:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6770:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6771:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6772:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6773:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6774:../../Source/Kernel/rme_kernel.c **** Output      : None.
6775:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6776:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6777:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Crt(struct RME_Cap_Cpt* Cpt,
6778:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6779:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6780:../../Source/Kernel/rme_kernel.c **** {
 16963              		.loc 1 6780 1
 16964              		.cfi_startproc
 16965              		@ args = 0, pretend = 0, frame = 32
 16966              		@ frame_needed = 1, uses_anonymous_args = 0
 16967 0000 00482DE9 		push	{fp, lr}
 16968              		.cfi_def_cfa_offset 8
 16969              		.cfi_offset 11, -8
 16970              		.cfi_offset 14, -4
 16971 0004 04B08DE2 		add	fp, sp, #4
 16972              		.cfi_def_cfa 11, 4
 16973 0008 20D04DE2 		sub	sp, sp, #32
 16974 000c 18000BE5 		str	r0, [fp, #-24]
 16975 0010 1C100BE5 		str	r1, [fp, #-28]
 16976 0014 20200BE5 		str	r2, [fp, #-32]
6781:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6782:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Crt;
6783:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 418


6784:../../Source/Kernel/rme_kernel.c ****     
6785:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6786:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 16977              		.loc 1 6786 5
 16978 0018 1C301BE5 		ldr	r3, [fp, #-28]
 16979 001c 803003E2 		and	r3, r3, #128
 16980 0020 000053E3 		cmp	r3, #0
 16981 0024 1C00001A 		bne	.L1093
 16982              		.loc 1 6786 5 is_stmt 0 discriminator 1
 16983 0028 18301BE5 		ldr	r3, [fp, #-24]
 16984 002c 142093E5 		ldr	r2, [r3, #20]
 16985 0030 1C301BE5 		ldr	r3, [fp, #-28]
 16986 0034 030052E1 		cmp	r2, r3
 16987 0038 0100008A 		bhi	.L1094
 16988              		.loc 1 6786 5 discriminator 3
 16989 003c 0230E0E3 		mvn	r3, #2
 16990              		.loc 1 6786 5
 16991 0040 8A0000EA 		b	.L1095
 16992              	.L1094:
 16993              		.loc 1 6786 5 discriminator 4
 16994 0044 1C301BE5 		ldr	r3, [fp, #-28]
 16995 0048 8322A0E1 		lsl	r2, r3, #5
 16996 004c 18301BE5 		ldr	r3, [fp, #-24]
 16997 0050 0C3093E5 		ldr	r3, [r3, #12]
 16998 0054 033082E0 		add	r3, r2, r3
 16999 0058 08300BE5 		str	r3, [fp, #-8]
 17000 005c 08301BE5 		ldr	r3, [fp, #-8]
 17001 0060 0300A0E1 		mov	r0, r3
 17002 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17003 0068 0C000BE5 		str	r0, [fp, #-12]
 17004              		.loc 1 6786 5 discriminator 1
 17005 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17006 0070 FF3803E2 		and	r3, r3, #16711680
 17007 0074 020853E3 		cmp	r3, #131072
 17008 0078 0100001A 		bne	.L1096
 17009              		.loc 1 6786 5 discriminator 5
 17010 007c 0830E0E3 		mvn	r3, #8
 17011              		.loc 1 6786 5
 17012 0080 7A0000EA 		b	.L1095
 17013              	.L1096:
 17014              		.loc 1 6786 5 discriminator 6
 17015 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17016 0088 233CA0E1 		lsr	r3, r3, #24
 17017 008c 030053E3 		cmp	r3, #3
 17018 0090 3F00000A 		beq	.L1097
 17019              		.loc 1 6786 5 discriminator 7
 17020 0094 0130E0E3 		mvn	r3, #1
 17021              		.loc 1 6786 5
 17022 0098 740000EA 		b	.L1095
 17023              	.L1093:
 17024              		.loc 1 6786 5 discriminator 2
 17025 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17026 00a0 2324A0E1 		lsr	r2, r3, #8
 17027 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17028 00a8 143093E5 		ldr	r3, [r3, #20]
 17029 00ac 030052E1 		cmp	r2, r3
 17030 00b0 0100003A 		bcc	.L1098
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 419


 17031              		.loc 1 6786 5 discriminator 8
 17032 00b4 0230E0E3 		mvn	r3, #2
 17033              		.loc 1 6786 5
 17034 00b8 6C0000EA 		b	.L1095
 17035              	.L1098:
 17036              		.loc 1 6786 5 discriminator 9
 17037 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17038 00c0 2334A0E1 		lsr	r3, r3, #8
 17039 00c4 8322A0E1 		lsl	r2, r3, #5
 17040 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17041 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17042 00d0 033082E0 		add	r3, r2, r3
 17043 00d4 08300BE5 		str	r3, [fp, #-8]
 17044 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17045 00dc 0300A0E1 		mov	r0, r3
 17046 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17047 00e4 0C000BE5 		str	r0, [fp, #-12]
 17048              		.loc 1 6786 5 discriminator 1
 17049 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17050 00ec FF3803E2 		and	r3, r3, #16711680
 17051 00f0 020853E3 		cmp	r3, #131072
 17052 00f4 0100001A 		bne	.L1099
 17053              		.loc 1 6786 5 discriminator 10
 17054 00f8 0830E0E3 		mvn	r3, #8
 17055              		.loc 1 6786 5
 17056 00fc 5B0000EA 		b	.L1095
 17057              	.L1099:
 17058              		.loc 1 6786 5 discriminator 11
 17059 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17060 0104 233CA0E1 		lsr	r3, r3, #24
 17061 0108 030053E3 		cmp	r3, #3
 17062 010c 0100000A 		beq	.L1100
 17063              		.loc 1 6786 5 discriminator 12
 17064 0110 0130E0E3 		mvn	r3, #1
 17065              		.loc 1 6786 5
 17066 0114 550000EA 		b	.L1095
 17067              	.L1100:
 17068              		.loc 1 6786 5 discriminator 13
 17069 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17070 011c 7F2003E2 		and	r2, r3, #127
 17071 0120 08301BE5 		ldr	r3, [fp, #-8]
 17072 0124 143093E5 		ldr	r3, [r3, #20]
 17073 0128 030052E1 		cmp	r2, r3
 17074 012c 0100003A 		bcc	.L1101
 17075              		.loc 1 6786 5 discriminator 14
 17076 0130 0230E0E3 		mvn	r3, #2
 17077              		.loc 1 6786 5
 17078 0134 4D0000EA 		b	.L1095
 17079              	.L1101:
 17080              		.loc 1 6786 5 discriminator 15
 17081 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17082 013c 7F3003E2 		and	r3, r3, #127
 17083 0140 8322A0E1 		lsl	r2, r3, #5
 17084 0144 08301BE5 		ldr	r3, [fp, #-8]
 17085 0148 0C3093E5 		ldr	r3, [r3, #12]
 17086 014c 033082E0 		add	r3, r2, r3
 17087 0150 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 420


 17088 0154 08301BE5 		ldr	r3, [fp, #-8]
 17089 0158 0300A0E1 		mov	r0, r3
 17090 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17091 0160 0C000BE5 		str	r0, [fp, #-12]
 17092              		.loc 1 6786 5 discriminator 1
 17093 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17094 0168 FF3803E2 		and	r3, r3, #16711680
 17095 016c 020853E3 		cmp	r3, #131072
 17096 0170 0100001A 		bne	.L1102
 17097              		.loc 1 6786 5 discriminator 16
 17098 0174 0830E0E3 		mvn	r3, #8
 17099              		.loc 1 6786 5
 17100 0178 3C0000EA 		b	.L1095
 17101              	.L1102:
 17102              		.loc 1 6786 5 discriminator 17
 17103 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17104 0180 233CA0E1 		lsr	r3, r3, #24
 17105 0184 030053E3 		cmp	r3, #3
 17106 0188 0100000A 		beq	.L1097
 17107              		.loc 1 6786 5 discriminator 18
 17108 018c 0130E0E3 		mvn	r3, #1
 17109              		.loc 1 6786 5
 17110 0190 360000EA 		b	.L1095
 17111              	.L1097:
6787:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
6788:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6789:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 17112              		.loc 1 6789 5 is_stmt 1
 17113 0194 08301BE5 		ldr	r3, [fp, #-8]
 17114 0198 083093E5 		ldr	r3, [r3, #8]
 17115 019c 013003E2 		and	r3, r3, #1
 17116 01a0 000053E3 		cmp	r3, #0
 17117 01a4 0100001A 		bne	.L1103
 17118              		.loc 1 6789 5 is_stmt 0 discriminator 1
 17119 01a8 0630E0E3 		mvn	r3, #6
 17120              		.loc 1 6789 5
 17121 01ac 2F0000EA 		b	.L1095
 17122              	.L1103:
6790:../../Source/Kernel/rme_kernel.c ****     
6791:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6792:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17123              		.loc 1 6792 5 is_stmt 1
 17124 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17125 01b4 142093E5 		ldr	r2, [r3, #20]
 17126 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17127 01bc 030052E1 		cmp	r2, r3
 17128 01c0 0100008A 		bhi	.L1104
 17129              		.loc 1 6792 5 is_stmt 0 discriminator 1
 17130 01c4 0230E0E3 		mvn	r3, #2
 17131              		.loc 1 6792 5
 17132 01c8 280000EA 		b	.L1095
 17133              	.L1104:
 17134              		.loc 1 6792 5 discriminator 2
 17135 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17136 01d0 8322A0E1 		lsl	r2, r3, #5
 17137 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17138 01d8 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 421


 17139 01dc 033082E0 		add	r3, r2, r3
 17140 01e0 10300BE5 		str	r3, [fp, #-16]
6793:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6794:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17141              		.loc 1 6794 5 is_stmt 1
 17142 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17143 01e8 0128A0E3 		mov	r2, #65536
 17144 01ec 0010A0E3 		mov	r1, #0
 17145 01f0 0300A0E1 		mov	r0, r3
 17146 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17147 01f8 0030A0E1 		mov	r3, r0
 17148              		.loc 1 6794 5 is_stmt 0 discriminator 1
 17149 01fc 000053E3 		cmp	r3, #0
 17150 0200 0100001A 		bne	.L1105
 17151 0204 0430E0E3 		mvn	r3, #4
 17152              		.loc 1 6794 5
 17153 0208 180000EA 		b	.L1095
 17154              	.L1105:
 17155              		.loc 1 6794 5 discriminator 2
 17156 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17157 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17158 0214 002093E5 		ldr	r2, [r3]
 17159 0218 10301BE5 		ldr	r3, [fp, #-16]
 17160 021c 102083E5 		str	r2, [r3, #16]
6795:../../Source/Kernel/rme_kernel.c **** 
6796:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6797:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=0U;
 17161              		.loc 1 6797 27 is_stmt 1
 17162 0220 10301BE5 		ldr	r3, [fp, #-16]
 17163 0224 0020A0E3 		mov	r2, #0
 17164 0228 042083E5 		str	r2, [r3, #4]
6798:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17165              		.loc 1 6798 25
 17166 022c 10301BE5 		ldr	r3, [fp, #-16]
 17167 0230 0020A0E3 		mov	r2, #0
 17168 0234 0C2083E5 		str	r2, [r3, #12]
6799:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17169              		.loc 1 6799 23
 17170 0238 10301BE5 		ldr	r3, [fp, #-16]
 17171 023c 3F20A0E3 		mov	r2, #63
 17172 0240 082083E5 		str	r2, [r3, #8]
6800:../../Source/Kernel/rme_kernel.c ****     
6801:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6802:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17173              		.loc 1 6802 21
 17174 0244 10301BE5 		ldr	r3, [fp, #-16]
 17175 0248 0020A0E3 		mov	r2, #0
 17176 024c 142083E5 		str	r2, [r3, #20]
6803:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=0U;
 17177              		.loc 1 6803 17
 17178 0250 10301BE5 		ldr	r3, [fp, #-16]
 17179 0254 0020A0E3 		mov	r2, #0
 17180 0258 182083E5 		str	r2, [r3, #24]
6804:../../Source/Kernel/rme_kernel.c ****     
6805:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6806:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17181              		.loc 1 6806 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 422


 17182 025c 10301BE5 		ldr	r3, [fp, #-16]
 17183 0260 0213A0E3 		mov	r1, #134217728
 17184 0264 0300A0E1 		mov	r0, r3
 17185 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6807:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6808:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6809:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6810:../../Source/Kernel/rme_kernel.c **** 
6811:../../Source/Kernel/rme_kernel.c ****     return 0;
 17186              		.loc 1 6811 12
 17187 026c 0030A0E3 		mov	r3, #0
 17188              	.L1095:
6812:../../Source/Kernel/rme_kernel.c **** }
 17189              		.loc 1 6812 1
 17190 0270 0300A0E1 		mov	r0, r3
 17191 0274 04D04BE2 		sub	sp, fp, #4
 17192              		.cfi_def_cfa 13, 8
 17193              		@ sp needed
 17194 0278 0088BDE8 		pop	{fp, pc}
 17195              		.cfi_endproc
 17196              	.LFE66:
 17198              		.section	.text._RME_Sig_Del,"ax",%progbits
 17199              		.align	2
 17200              		.syntax unified
 17201              		.arm
 17203              	_RME_Sig_Del:
 17204              	.LFB67:
6813:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Crt *************************************************/
6814:../../Source/Kernel/rme_kernel.c **** 
6815:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Del ******************************************************
6816:../../Source/Kernel/rme_kernel.c **** Description : Delete a signal endpoint.
6817:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6818:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
6819:../../Source/Kernel/rme_kernel.c ****                                   delete from.
6820:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6821:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
6822:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6823:../../Source/Kernel/rme_kernel.c **** Output      : None.
6824:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6825:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6826:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Del(struct RME_Cap_Cpt* Cpt,
6827:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6828:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6829:../../Source/Kernel/rme_kernel.c **** {
 17205              		.loc 1 6829 1
 17206              		.cfi_startproc
 17207              		@ args = 0, pretend = 0, frame = 32
 17208              		@ frame_needed = 1, uses_anonymous_args = 0
 17209 0000 00482DE9 		push	{fp, lr}
 17210              		.cfi_def_cfa_offset 8
 17211              		.cfi_offset 11, -8
 17212              		.cfi_offset 14, -4
 17213 0004 04B08DE2 		add	fp, sp, #4
 17214              		.cfi_def_cfa 11, 4
 17215 0008 20D04DE2 		sub	sp, sp, #32
 17216 000c 18000BE5 		str	r0, [fp, #-24]
 17217 0010 1C100BE5 		str	r1, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 423


 17218 0014 20200BE5 		str	r2, [fp, #-32]
6830:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6831:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Del;
6832:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6833:../../Source/Kernel/rme_kernel.c ****     
6834:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6835:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17219              		.loc 1 6835 5
 17220 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17221 001c 803003E2 		and	r3, r3, #128
 17222 0020 000053E3 		cmp	r3, #0
 17223 0024 1C00001A 		bne	.L1107
 17224              		.loc 1 6835 5 is_stmt 0 discriminator 1
 17225 0028 18301BE5 		ldr	r3, [fp, #-24]
 17226 002c 142093E5 		ldr	r2, [r3, #20]
 17227 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17228 0034 030052E1 		cmp	r2, r3
 17229 0038 0100008A 		bhi	.L1108
 17230              		.loc 1 6835 5 discriminator 3
 17231 003c 0230E0E3 		mvn	r3, #2
 17232              		.loc 1 6835 5
 17233 0040 AB0000EA 		b	.L1109
 17234              	.L1108:
 17235              		.loc 1 6835 5 discriminator 4
 17236 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17237 0048 8322A0E1 		lsl	r2, r3, #5
 17238 004c 18301BE5 		ldr	r3, [fp, #-24]
 17239 0050 0C3093E5 		ldr	r3, [r3, #12]
 17240 0054 033082E0 		add	r3, r2, r3
 17241 0058 08300BE5 		str	r3, [fp, #-8]
 17242 005c 08301BE5 		ldr	r3, [fp, #-8]
 17243 0060 0300A0E1 		mov	r0, r3
 17244 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17245 0068 0C000BE5 		str	r0, [fp, #-12]
 17246              		.loc 1 6835 5 discriminator 1
 17247 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17248 0070 FF3803E2 		and	r3, r3, #16711680
 17249 0074 020853E3 		cmp	r3, #131072
 17250 0078 0100001A 		bne	.L1110
 17251              		.loc 1 6835 5 discriminator 5
 17252 007c 0830E0E3 		mvn	r3, #8
 17253              		.loc 1 6835 5
 17254 0080 9B0000EA 		b	.L1109
 17255              	.L1110:
 17256              		.loc 1 6835 5 discriminator 6
 17257 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17258 0088 233CA0E1 		lsr	r3, r3, #24
 17259 008c 030053E3 		cmp	r3, #3
 17260 0090 3F00000A 		beq	.L1111
 17261              		.loc 1 6835 5 discriminator 7
 17262 0094 0130E0E3 		mvn	r3, #1
 17263              		.loc 1 6835 5
 17264 0098 950000EA 		b	.L1109
 17265              	.L1107:
 17266              		.loc 1 6835 5 discriminator 2
 17267 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17268 00a0 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 424


 17269 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17270 00a8 143093E5 		ldr	r3, [r3, #20]
 17271 00ac 030052E1 		cmp	r2, r3
 17272 00b0 0100003A 		bcc	.L1112
 17273              		.loc 1 6835 5 discriminator 8
 17274 00b4 0230E0E3 		mvn	r3, #2
 17275              		.loc 1 6835 5
 17276 00b8 8D0000EA 		b	.L1109
 17277              	.L1112:
 17278              		.loc 1 6835 5 discriminator 9
 17279 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17280 00c0 2334A0E1 		lsr	r3, r3, #8
 17281 00c4 8322A0E1 		lsl	r2, r3, #5
 17282 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17283 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17284 00d0 033082E0 		add	r3, r2, r3
 17285 00d4 08300BE5 		str	r3, [fp, #-8]
 17286 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17287 00dc 0300A0E1 		mov	r0, r3
 17288 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17289 00e4 0C000BE5 		str	r0, [fp, #-12]
 17290              		.loc 1 6835 5 discriminator 1
 17291 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17292 00ec FF3803E2 		and	r3, r3, #16711680
 17293 00f0 020853E3 		cmp	r3, #131072
 17294 00f4 0100001A 		bne	.L1113
 17295              		.loc 1 6835 5 discriminator 10
 17296 00f8 0830E0E3 		mvn	r3, #8
 17297              		.loc 1 6835 5
 17298 00fc 7C0000EA 		b	.L1109
 17299              	.L1113:
 17300              		.loc 1 6835 5 discriminator 11
 17301 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17302 0104 233CA0E1 		lsr	r3, r3, #24
 17303 0108 030053E3 		cmp	r3, #3
 17304 010c 0100000A 		beq	.L1114
 17305              		.loc 1 6835 5 discriminator 12
 17306 0110 0130E0E3 		mvn	r3, #1
 17307              		.loc 1 6835 5
 17308 0114 760000EA 		b	.L1109
 17309              	.L1114:
 17310              		.loc 1 6835 5 discriminator 13
 17311 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17312 011c 7F2003E2 		and	r2, r3, #127
 17313 0120 08301BE5 		ldr	r3, [fp, #-8]
 17314 0124 143093E5 		ldr	r3, [r3, #20]
 17315 0128 030052E1 		cmp	r2, r3
 17316 012c 0100003A 		bcc	.L1115
 17317              		.loc 1 6835 5 discriminator 14
 17318 0130 0230E0E3 		mvn	r3, #2
 17319              		.loc 1 6835 5
 17320 0134 6E0000EA 		b	.L1109
 17321              	.L1115:
 17322              		.loc 1 6835 5 discriminator 15
 17323 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17324 013c 7F3003E2 		and	r3, r3, #127
 17325 0140 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 425


 17326 0144 08301BE5 		ldr	r3, [fp, #-8]
 17327 0148 0C3093E5 		ldr	r3, [r3, #12]
 17328 014c 033082E0 		add	r3, r2, r3
 17329 0150 08300BE5 		str	r3, [fp, #-8]
 17330 0154 08301BE5 		ldr	r3, [fp, #-8]
 17331 0158 0300A0E1 		mov	r0, r3
 17332 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17333 0160 0C000BE5 		str	r0, [fp, #-12]
 17334              		.loc 1 6835 5 discriminator 1
 17335 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17336 0168 FF3803E2 		and	r3, r3, #16711680
 17337 016c 020853E3 		cmp	r3, #131072
 17338 0170 0100001A 		bne	.L1116
 17339              		.loc 1 6835 5 discriminator 16
 17340 0174 0830E0E3 		mvn	r3, #8
 17341              		.loc 1 6835 5
 17342 0178 5D0000EA 		b	.L1109
 17343              	.L1116:
 17344              		.loc 1 6835 5 discriminator 17
 17345 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17346 0180 233CA0E1 		lsr	r3, r3, #24
 17347 0184 030053E3 		cmp	r3, #3
 17348 0188 0100000A 		beq	.L1111
 17349              		.loc 1 6835 5 discriminator 18
 17350 018c 0130E0E3 		mvn	r3, #1
 17351              		.loc 1 6835 5
 17352 0190 570000EA 		b	.L1109
 17353              	.L1111:
6836:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
6837:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
6838:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 17354              		.loc 1 6838 5 is_stmt 1
 17355 0194 08301BE5 		ldr	r3, [fp, #-8]
 17356 0198 083093E5 		ldr	r3, [r3, #8]
 17357 019c 023003E2 		and	r3, r3, #2
 17358 01a0 000053E3 		cmp	r3, #0
 17359 01a4 0100001A 		bne	.L1117
 17360              		.loc 1 6838 5 is_stmt 0 discriminator 1
 17361 01a8 0630E0E3 		mvn	r3, #6
 17362              		.loc 1 6838 5
 17363 01ac 500000EA 		b	.L1109
 17364              	.L1117:
6839:../../Source/Kernel/rme_kernel.c ****     
6840:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6841:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Del);
 17365              		.loc 1 6841 5 is_stmt 1
 17366 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17367 01b4 142093E5 		ldr	r2, [r3, #20]
 17368 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17369 01bc 030052E1 		cmp	r2, r3
 17370 01c0 0100008A 		bhi	.L1118
 17371              		.loc 1 6841 5 is_stmt 0 discriminator 1
 17372 01c4 0230E0E3 		mvn	r3, #2
 17373              		.loc 1 6841 5
 17374 01c8 490000EA 		b	.L1109
 17375              	.L1118:
 17376              		.loc 1 6841 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 426


 17377 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17378 01d0 8322A0E1 		lsl	r2, r3, #5
 17379 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17380 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17381 01dc 033082E0 		add	r3, r2, r3
 17382 01e0 10300BE5 		str	r3, [fp, #-16]
6842:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
6843:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Sig_Del,Type_Stat,RME_CAP_TYPE_SIG);
 17383              		.loc 1 6843 5 is_stmt 1
 17384 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17385 01e8 0300A0E1 		mov	r0, r3
 17386 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17387 01f0 0C000BE5 		str	r0, [fp, #-12]
 17388              		.loc 1 6843 5 is_stmt 0 discriminator 1
 17389 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 17390 01f8 FF3803E2 		and	r3, r3, #16711680
 17391 01fc 020853E3 		cmp	r3, #131072
 17392 0200 0100000A 		beq	.L1119
 17393 0204 0830E0E3 		mvn	r3, #8
 17394              		.loc 1 6843 5
 17395 0208 390000EA 		b	.L1109
 17396              	.L1119:
 17397              		.loc 1 6843 5 discriminator 2
 17398 020c 0C301BE5 		ldr	r3, [fp, #-12]
 17399 0210 233CA0E1 		lsr	r3, r3, #24
 17400 0214 080053E3 		cmp	r3, #8
 17401 0218 0100000A 		beq	.L1120
 17402              		.loc 1 6843 5 discriminator 3
 17403 021c 0130E0E3 		mvn	r3, #1
 17404              		.loc 1 6843 5
 17405 0220 330000EA 		b	.L1109
 17406              	.L1120:
 17407              		.loc 1 6843 5 discriminator 6
 17408 0224 10301BE5 		ldr	r3, [fp, #-16]
 17409 0228 043093E5 		ldr	r3, [r3, #4]
 17410 022c 000053E3 		cmp	r3, #0
 17411 0230 0B00000A 		beq	.L1121
 17412              		.loc 1 6843 5 discriminator 7
 17413 0234 0C301BE5 		ldr	r3, [fp, #-12]
 17414 0238 7330FFE6 		uxth	r3, r3
 17415 023c 000053E3 		cmp	r3, #0
 17416 0240 0500001A 		bne	.L1122
 17417              		.loc 1 6843 5 discriminator 9
 17418 0244 10001BE5 		ldr	r0, [fp, #-16]
 17419 0248 0C301BE5 		ldr	r3, [fp, #-12]
 17420 024c FF38C3E3 		bic	r3, r3, #16711680
 17421 0250 0320A0E1 		mov	r2, r3
 17422 0254 0C101BE5 		ldr	r1, [fp, #-12]
 17423 0258 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17424              	.L1122:
 17425              		.loc 1 6843 5 discriminator 11
 17426 025c 0530E0E3 		mvn	r3, #5
 17427              		.loc 1 6843 5
 17428 0260 230000EA 		b	.L1109
 17429              	.L1121:
 17430              		.loc 1 6843 5 discriminator 8
 17431 0264 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 427


 17432 0268 7330FFE6 		uxth	r3, r3
 17433 026c 000053E3 		cmp	r3, #0
 17434 0270 0800000A 		beq	.L1123
 17435              		.loc 1 6843 5 discriminator 12
 17436 0274 003000E3 		movw	r3, #:lower16:.LC6
 17437 0278 003040E3 		movt	r3, #:upper16:.LC6
 17438 027c 002000E3 		movw	r2, #:lower16:.LC7
 17439 0280 002040E3 		movt	r2, #:upper16:.LC7
 17440 0284 BB1A01E3 		movw	r1, #6843
 17441 0288 000000E3 		movw	r0, #:lower16:.LC8
 17442 028c 000040E3 		movt	r0, #:upper16:.LC8
 17443 0290 FEFFFFEB 		bl	RME_Log
 17444              	.L1124:
 17445              		.loc 1 6843 5
 17446 0294 FEFFFFEA 		b	.L1124
 17447              	.L1123:
6844:../../Source/Kernel/rme_kernel.c **** 
6845:../../Source/Kernel/rme_kernel.c ****     /* Check if the signal endpoint is currently used and cannot be deleted */
6846:../../Source/Kernel/rme_kernel.c ****     if(Sig_Del->Thd!=0U)
 17448              		.loc 1 6846 15 is_stmt 1
 17449 0298 10301BE5 		ldr	r3, [fp, #-16]
 17450 029c 183093E5 		ldr	r3, [r3, #24]
 17451              		.loc 1 6846 7
 17452 02a0 000053E3 		cmp	r3, #0
 17453 02a4 0700000A 		beq	.L1125
6847:../../Source/Kernel/rme_kernel.c ****     {
6848:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6849:../../Source/Kernel/rme_kernel.c **** 
6850:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Sig_Del,Type_Stat);
 17454              		.loc 1 6850 9
 17455 02a8 10001BE5 		ldr	r0, [fp, #-16]
 17456 02ac 0C301BE5 		ldr	r3, [fp, #-12]
 17457 02b0 FF38C3E3 		bic	r3, r3, #16711680
 17458 02b4 0320A0E1 		mov	r2, r3
 17459 02b8 0C101BE5 		ldr	r1, [fp, #-12]
 17460 02bc FEFFFFEB 		bl	_RME_Comp_Swap_Single
6851:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 17461              		.loc 1 6851 16
 17462 02c0 4B3FE0E3 		mvn	r3, #300
 17463 02c4 0A0000EA 		b	.L1109
 17464              	.L1125:
6852:../../Source/Kernel/rme_kernel.c ****     }
6853:../../Source/Kernel/rme_kernel.c ****     else
6854:../../Source/Kernel/rme_kernel.c ****     {
6855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6856:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6857:../../Source/Kernel/rme_kernel.c ****     }
6858:../../Source/Kernel/rme_kernel.c ****     
6859:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
6860:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Sig_Del,Type_Stat);
 17465              		.loc 1 6860 5
 17466 02c8 10301BE5 		ldr	r3, [fp, #-16]
 17467 02cc 0020A0E3 		mov	r2, #0
 17468 02d0 0C101BE5 		ldr	r1, [fp, #-12]
 17469 02d4 0300A0E1 		mov	r0, r3
 17470 02d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17471 02dc 0030A0E1 		mov	r3, r0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 428


 17472              		.loc 1 6860 5 is_stmt 0 discriminator 1
 17473 02e0 000053E3 		cmp	r3, #0
 17474 02e4 0100001A 		bne	.L1126
 17475 02e8 0030E0E3 		mvn	r3, #0
 17476              		.loc 1 6860 5
 17477 02ec 000000EA 		b	.L1109
 17478              	.L1126:
6861:../../Source/Kernel/rme_kernel.c ****     
6862:../../Source/Kernel/rme_kernel.c ****     return 0;
 17479              		.loc 1 6862 12 is_stmt 1
 17480 02f0 0030A0E3 		mov	r3, #0
 17481              	.L1109:
6863:../../Source/Kernel/rme_kernel.c **** }
 17482              		.loc 1 6863 1
 17483 02f4 0300A0E1 		mov	r0, r3
 17484 02f8 04D04BE2 		sub	sp, fp, #4
 17485              		.cfi_def_cfa 13, 8
 17486              		@ sp needed
 17487 02fc 0088BDE8 		pop	{fp, pc}
 17488              		.cfi_endproc
 17489              	.LFE67:
 17491              		.section	.text._RME_Kern_High,"ax",%progbits
 17492              		.align	2
 17493              		.global	_RME_Kern_High
 17494              		.syntax unified
 17495              		.arm
 17497              	_RME_Kern_High:
 17498              	.LFB68:
6864:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Del *************************************************/
6865:../../Source/Kernel/rme_kernel.c **** 
6866:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_High ****************************************************
6867:../../Source/Kernel/rme_kernel.c **** Description : Pick the thread with the highest priority to run. Always call
6868:../../Source/Kernel/rme_kernel.c ****               this after you finish all your kernel sending stuff in the
6869:../../Source/Kernel/rme_kernel.c ****               interrupt handler, or the kernel send will not be correct.
6870:../../Source/Kernel/rme_kernel.c ****               This function is also used by system calls to pick a random
6871:../../Source/Kernel/rme_kernel.c ****               highest priority thread.
6872:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
6873:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure.
6874:../../Source/Kernel/rme_kernel.c **** Output      : volatile struct RME_Reg_Struct* Reg - The updated register set.
6875:../../Source/Kernel/rme_kernel.c **** Return      : None.
6876:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6877:../../Source/Kernel/rme_kernel.c **** void _RME_Kern_High(struct RME_Reg_Struct* Reg,
6878:../../Source/Kernel/rme_kernel.c ****                     struct RME_CPU_Local* Local)
6879:../../Source/Kernel/rme_kernel.c **** {
 17499              		.loc 1 6879 1
 17500              		.cfi_startproc
 17501              		@ args = 0, pretend = 0, frame = 16
 17502              		@ frame_needed = 1, uses_anonymous_args = 0
 17503 0000 00482DE9 		push	{fp, lr}
 17504              		.cfi_def_cfa_offset 8
 17505              		.cfi_offset 11, -8
 17506              		.cfi_offset 14, -4
 17507 0004 04B08DE2 		add	fp, sp, #4
 17508              		.cfi_def_cfa 11, 4
 17509 0008 10D04DE2 		sub	sp, sp, #16
 17510 000c 10000BE5 		str	r0, [fp, #-16]
 17511 0010 14100BE5 		str	r1, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 429


6880:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6881:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6882:../../Source/Kernel/rme_kernel.c **** 
6883:../../Source/Kernel/rme_kernel.c ****     Thd_New=_RME_Run_High(Local);
 17512              		.loc 1 6883 13
 17513 0014 14001BE5 		ldr	r0, [fp, #-20]
 17514 0018 FEFFFFEB 		bl	_RME_Run_High
 17515 001c 08000BE5 		str	r0, [fp, #-8]
6884:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New!=RME_NULL);
 17516              		.loc 1 6884 5
 17517 0020 08301BE5 		ldr	r3, [fp, #-8]
 17518 0024 000053E3 		cmp	r3, #0
 17519 0028 0800001A 		bne	.L1128
 17520              		.loc 1 6884 5 is_stmt 0 discriminator 1
 17521 002c 003000E3 		movw	r3, #:lower16:.LC6
 17522 0030 003040E3 		movt	r3, #:upper16:.LC6
 17523 0034 002000E3 		movw	r2, #:lower16:.LC7
 17524 0038 002040E3 		movt	r2, #:upper16:.LC7
 17525 003c E41A01E3 		movw	r1, #6884
 17526 0040 000000E3 		movw	r0, #:lower16:.LC8
 17527 0044 000040E3 		movt	r0, #:upper16:.LC8
 17528 0048 FEFFFFEB 		bl	RME_Log
 17529              	.L1129:
 17530              		.loc 1 6884 5
 17531 004c FEFFFFEA 		b	.L1129
 17532              	.L1128:
6885:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 17533              		.loc 1 6885 12 is_stmt 1
 17534 0050 14301BE5 		ldr	r3, [fp, #-20]
 17535 0054 043093E5 		ldr	r3, [r3, #4]
 17536 0058 0C300BE5 		str	r3, [fp, #-12]
6886:../../Source/Kernel/rme_kernel.c **** 
6887:../../Source/Kernel/rme_kernel.c ****     /* Are these two threads the same? */
6888:../../Source/Kernel/rme_kernel.c ****     if(Thd_New==Thd_Cur)
 17537              		.loc 1 6888 7
 17538 005c 08201BE5 		ldr	r2, [fp, #-8]
 17539 0060 0C301BE5 		ldr	r3, [fp, #-12]
 17540 0064 030052E1 		cmp	r2, r3
 17541 0068 1E00000A 		beq	.L1135
6889:../../Source/Kernel/rme_kernel.c ****     {
6890:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6891:../../Source/Kernel/rme_kernel.c **** 
6892:../../Source/Kernel/rme_kernel.c ****         return;
6893:../../Source/Kernel/rme_kernel.c ****     }
6894:../../Source/Kernel/rme_kernel.c ****     else
6895:../../Source/Kernel/rme_kernel.c ****     {
6896:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6897:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6898:../../Source/Kernel/rme_kernel.c ****     }
6899:../../Source/Kernel/rme_kernel.c **** 
6900:../../Source/Kernel/rme_kernel.c ****     /* Check if we need to do the context switch regardless of priority
6901:../../Source/Kernel/rme_kernel.c ****      * because the current thread is not ready yet. */
6902:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.State==RME_THD_READY)
 17542              		.loc 1 6902 22
 17543 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17544 0070 1C3093E5 		ldr	r3, [r3, #28]
 17545              		.loc 1 6902 7
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 430


 17546 0074 000053E3 		cmp	r3, #0
 17547 0078 0500001A 		bne	.L1132
6903:../../Source/Kernel/rme_kernel.c ****     {
6904:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6905:../../Source/Kernel/rme_kernel.c **** 
6906:../../Source/Kernel/rme_kernel.c ****         /* Check priority to see if the switch is necessary */
6907:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Prio<=Thd_Cur->Sched.Prio)
 17548              		.loc 1 6907 26
 17549 007c 08301BE5 		ldr	r3, [fp, #-8]
 17550 0080 202093E5 		ldr	r2, [r3, #32]
 17551              		.loc 1 6907 47
 17552 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17553 0088 203093E5 		ldr	r3, [r3, #32]
 17554              		.loc 1 6907 11
 17555 008c 030052E1 		cmp	r2, r3
 17556 0090 1600009A 		bls	.L1136
 17557              	.L1132:
6908:../../Source/Kernel/rme_kernel.c ****         {
6909:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6910:../../Source/Kernel/rme_kernel.c **** 
6911:../../Source/Kernel/rme_kernel.c ****             return;
6912:../../Source/Kernel/rme_kernel.c ****         }
6913:../../Source/Kernel/rme_kernel.c ****         else
6914:../../Source/Kernel/rme_kernel.c ****         {
6915:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6916:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6917:../../Source/Kernel/rme_kernel.c ****         }
6918:../../Source/Kernel/rme_kernel.c ****     }
6919:../../Source/Kernel/rme_kernel.c ****     else
6920:../../Source/Kernel/rme_kernel.c ****     {
6921:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6922:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6923:../../Source/Kernel/rme_kernel.c ****     }
6924:../../Source/Kernel/rme_kernel.c **** 
6925:../../Source/Kernel/rme_kernel.c ****     /* We will have a solid context switch on this point. The current 
6926:../../Source/Kernel/rme_kernel.c ****      * thread is not necessarily READY, it could be EXCPEND as well. */
6927:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 17558              		.loc 1 6927 5
 17559 0094 08301BE5 		ldr	r3, [fp, #-8]
 17560 0098 1C3093E5 		ldr	r3, [r3, #28]
 17561 009c 000053E3 		cmp	r3, #0
 17562 00a0 0800000A 		beq	.L1133
 17563              		.loc 1 6927 5 is_stmt 0 discriminator 1
 17564 00a4 003000E3 		movw	r3, #:lower16:.LC6
 17565 00a8 003040E3 		movt	r3, #:upper16:.LC6
 17566 00ac 002000E3 		movw	r2, #:lower16:.LC7
 17567 00b0 002040E3 		movt	r2, #:upper16:.LC7
 17568 00b4 0F1B01E3 		movw	r1, #6927
 17569 00b8 000000E3 		movw	r0, #:lower16:.LC8
 17570 00bc 000040E3 		movt	r0, #:upper16:.LC8
 17571 00c0 FEFFFFEB 		bl	RME_Log
 17572              	.L1134:
 17573              		.loc 1 6927 5
 17574 00c4 FEFFFFEA 		b	.L1134
 17575              	.L1133:
6928:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 17576              		.loc 1 6928 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 431


 17577 00c8 08201BE5 		ldr	r2, [fp, #-8]
 17578 00cc 0C101BE5 		ldr	r1, [fp, #-12]
 17579 00d0 10001BE5 		ldr	r0, [fp, #-16]
 17580 00d4 FEFFFFEB 		bl	_RME_Run_Swt
6929:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 17581              		.loc 1 6929 19
 17582 00d8 14301BE5 		ldr	r3, [fp, #-20]
 17583 00dc 08201BE5 		ldr	r2, [fp, #-8]
 17584 00e0 042083E5 		str	r2, [r3, #4]
 17585 00e4 020000EA 		b	.L1127
 17586              	.L1135:
6892:../../Source/Kernel/rme_kernel.c ****     }
 17587              		.loc 1 6892 9
 17588 00e8 00F020E3 		nop
 17589 00ec 000000EA 		b	.L1127
 17590              	.L1136:
6911:../../Source/Kernel/rme_kernel.c ****         }
 17591              		.loc 1 6911 13
 17592 00f0 00F020E3 		nop
 17593              	.L1127:
6930:../../Source/Kernel/rme_kernel.c **** }
 17594              		.loc 1 6930 1
 17595 00f4 04D04BE2 		sub	sp, fp, #4
 17596              		.cfi_def_cfa 13, 8
 17597              		@ sp needed
 17598 00f8 0088BDE8 		pop	{fp, pc}
 17599              		.cfi_endproc
 17600              	.LFE68:
 17602              		.section	.text._RME_Kern_Snd,"ax",%progbits
 17603              		.align	2
 17604              		.global	_RME_Kern_Snd
 17605              		.syntax unified
 17606              		.arm
 17608              	_RME_Kern_Snd:
 17609              	.LFB69:
6931:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_High ***********************************************/
6932:../../Source/Kernel/rme_kernel.c **** 
6933:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_Snd *****************************************************
6934:../../Source/Kernel/rme_kernel.c **** Description : Try to send a signal to an endpoint from kernel. This is intended
6935:../../Source/Kernel/rme_kernel.c ****               to be called in the interrupt routines in the kernel, and this is
6936:../../Source/Kernel/rme_kernel.c ****               not a system call. The capability passed in must be the root
6937:../../Source/Kernel/rme_kernel.c ****               capability, and this function will not check whether it really is.
6938:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Sig* Cap_Sig - The signal root capability.
6939:../../Source/Kernel/rme_kernel.c **** Output      : None.
6940:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
6941:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6942:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kern_Snd(struct RME_Cap_Sig* Cap_Sig)
6943:../../Source/Kernel/rme_kernel.c **** {
 17610              		.loc 1 6943 1
 17611              		.cfi_startproc
 17612              		@ args = 0, pretend = 0, frame = 16
 17613              		@ frame_needed = 1, uses_anonymous_args = 0
 17614 0000 00482DE9 		push	{fp, lr}
 17615              		.cfi_def_cfa_offset 8
 17616              		.cfi_offset 11, -8
 17617              		.cfi_offset 14, -4
 17618 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 432


 17619              		.cfi_def_cfa 11, 4
 17620 0008 10D04DE2 		sub	sp, sp, #16
 17621 000c 10000BE5 		str	r0, [fp, #-16]
6944:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
6945:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Sig;
6946:../../Source/Kernel/rme_kernel.c ****     
6947:../../Source/Kernel/rme_kernel.c ****     Thd_Sig=Cap_Sig->Thd;
 17622              		.loc 1 6947 12
 17623 0010 10301BE5 		ldr	r3, [fp, #-16]
 17624 0014 183093E5 		ldr	r3, [r3, #24]
 17625 0018 0C300BE5 		str	r3, [fp, #-12]
6948:../../Source/Kernel/rme_kernel.c ****     
6949:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
6950:../../Source/Kernel/rme_kernel.c ****     if(Thd_Sig!=RME_NULL)
 17626              		.loc 1 6950 7
 17627 001c 0C301BE5 		ldr	r3, [fp, #-12]
 17628 0020 000053E3 		cmp	r3, #0
 17629 0024 0B00000A 		beq	.L1138
6951:../../Source/Kernel/rme_kernel.c ****     {
6952:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6953:../../Source/Kernel/rme_kernel.c **** 
6954:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Local==RME_CPU_LOCAL())
 17630              		.loc 1 6954 26
 17631 0028 0C301BE5 		ldr	r3, [fp, #-12]
 17632 002c 142093E5 		ldr	r2, [r3, #20]
 17633              		.loc 1 6954 11
 17634 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 17635 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 17636 0038 030052E1 		cmp	r2, r3
 17637 003c 0200001A 		bne	.L1139
6955:../../Source/Kernel/rme_kernel.c ****         {
6956:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6957:../../Source/Kernel/rme_kernel.c **** 
6958:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 17638              		.loc 1 6958 20
 17639 0040 0130A0E3 		mov	r3, #1
 17640 0044 08300BE5 		str	r3, [fp, #-8]
 17641 0048 040000EA 		b	.L1140
 17642              	.L1139:
6959:../../Source/Kernel/rme_kernel.c ****         }
6960:../../Source/Kernel/rme_kernel.c ****         else
6961:../../Source/Kernel/rme_kernel.c ****         {
6962:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6963:../../Source/Kernel/rme_kernel.c **** 
6964:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 17643              		.loc 1 6964 20
 17644 004c 0030A0E3 		mov	r3, #0
 17645 0050 08300BE5 		str	r3, [fp, #-8]
 17646 0054 010000EA 		b	.L1140
 17647              	.L1138:
6965:../../Source/Kernel/rme_kernel.c ****         }
6966:../../Source/Kernel/rme_kernel.c ****     }
6967:../../Source/Kernel/rme_kernel.c ****     else
6968:../../Source/Kernel/rme_kernel.c ****     {
6969:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6970:../../Source/Kernel/rme_kernel.c **** 
6971:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 433


 17648              		.loc 1 6971 16
 17649 0058 0030A0E3 		mov	r3, #0
 17650 005c 08300BE5 		str	r3, [fp, #-8]
 17651              	.L1140:
6972:../../Source/Kernel/rme_kernel.c ****     }
6973:../../Source/Kernel/rme_kernel.c **** 
6974:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 17652              		.loc 1 6974 7
 17653 0060 08301BE5 		ldr	r3, [fp, #-8]
 17654 0064 000053E3 		cmp	r3, #0
 17655 0068 1700000A 		beq	.L1141
6975:../../Source/Kernel/rme_kernel.c ****     {
6976:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6977:../../Source/Kernel/rme_kernel.c **** 
6978:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
6979:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
6980:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
6981:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
6982:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Sig->Ctx.Reg->Reg),1);
 17656              		.loc 1 6982 44
 17657 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17658 0070 483093E5 		ldr	r3, [r3, #72]
 17659              		.loc 1 6982 9
 17660 0074 0110A0E3 		mov	r1, #1
 17661 0078 0300A0E1 		mov	r0, r3
 17662 007c FEFFFFEB 		bl	__RME_Svc_Retval_Set
6983:../../Source/Kernel/rme_kernel.c ****         
6984:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
6985:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Slice!=0U)
 17663              		.loc 1 6985 26
 17664 0080 0C301BE5 		ldr	r3, [fp, #-12]
 17665 0084 183093E5 		ldr	r3, [r3, #24]
 17666              		.loc 1 6985 11
 17667 0088 000053E3 		cmp	r3, #0
 17668 008c 0500000A 		beq	.L1142
6986:../../Source/Kernel/rme_kernel.c ****         {
6987:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6988:../../Source/Kernel/rme_kernel.c **** 
6989:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
6990:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_READY;
 17669              		.loc 1 6990 33
 17670 0090 0C301BE5 		ldr	r3, [fp, #-12]
 17671 0094 0020A0E3 		mov	r2, #0
 17672 0098 1C2083E5 		str	r2, [r3, #28]
6991:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Sig);
 17673              		.loc 1 6991 13
 17674 009c 0C001BE5 		ldr	r0, [fp, #-12]
 17675 00a0 FEFFFFEB 		bl	_RME_Run_Ins
 17676 00a4 040000EA 		b	.L1143
 17677              	.L1142:
6992:../../Source/Kernel/rme_kernel.c ****         }
6993:../../Source/Kernel/rme_kernel.c ****         else
6994:../../Source/Kernel/rme_kernel.c ****         {
6995:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6996:../../Source/Kernel/rme_kernel.c **** 
6997:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6998:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_TIMEOUT;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 434


 17678              		.loc 1 6998 33
 17679 00a8 0C301BE5 		ldr	r3, [fp, #-12]
 17680 00ac 0220A0E3 		mov	r2, #2
 17681 00b0 1C2083E5 		str	r2, [r3, #28]
6999:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Sig);
 17682              		.loc 1 6999 13
 17683 00b4 0C001BE5 		ldr	r0, [fp, #-12]
 17684 00b8 FEFFFFEB 		bl	_RME_Run_Notif
 17685              	.L1143:
7000:../../Source/Kernel/rme_kernel.c ****         }
7001:../../Source/Kernel/rme_kernel.c ****         
7002:../../Source/Kernel/rme_kernel.c ****         /* We will not pick the highest priority thread here immediately, 
7003:../../Source/Kernel/rme_kernel.c ****          * because we may send to a myriad of endpoints in one interrupt, and
7004:../../Source/Kernel/rme_kernel.c ****          * we hope to perform the context switch only once when exiting that
7005:../../Source/Kernel/rme_kernel.c ****          * handler. Also note that the current thread could be EXCPEND as well;
7006:../../Source/Kernel/rme_kernel.c ****          * this is different from the normal signal sending system call. */
7007:../../Source/Kernel/rme_kernel.c ****         
7008:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7009:../../Source/Kernel/rme_kernel.c ****         Cap_Sig->Thd=RME_NULL;
 17686              		.loc 1 7009 21
 17687 00bc 10301BE5 		ldr	r3, [fp, #-16]
 17688 00c0 0020A0E3 		mov	r2, #0
 17689 00c4 182083E5 		str	r2, [r3, #24]
 17690 00c8 0F0000EA 		b	.L1144
 17691              	.L1141:
7010:../../Source/Kernel/rme_kernel.c ****     }
7011:../../Source/Kernel/rme_kernel.c ****     else
7012:../../Source/Kernel/rme_kernel.c ****     {
7013:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7014:../../Source/Kernel/rme_kernel.c **** 
7015:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, or nobody blocked.
7016:../../Source/Kernel/rme_kernel.c ****          * We just faa the counter value and return. */
7017:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Cap_Sig->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 17692              		.loc 1 7017 12
 17693 00cc 10301BE5 		ldr	r3, [fp, #-16]
 17694 00d0 143083E2 		add	r3, r3, #20
 17695 00d4 0110A0E3 		mov	r1, #1
 17696 00d8 0300A0E1 		mov	r0, r3
 17697 00dc FEFFFFEB 		bl	_RME_Fetch_Add_Single
 17698 00e0 0030A0E1 		mov	r3, r0
 17699              		.loc 1 7017 11 discriminator 1
 17700 00e4 0A0173E3 		cmn	r3, #-2147483646
 17701 00e8 0700009A 		bls	.L1144
7018:../../Source/Kernel/rme_kernel.c ****         {
7019:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7020:../../Source/Kernel/rme_kernel.c **** 
7021:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Cap_Sig->Sig_Num),-1);
 17702              		.loc 1 7021 13
 17703 00ec 10301BE5 		ldr	r3, [fp, #-16]
 17704 00f0 143083E2 		add	r3, r3, #20
 17705 00f4 0010E0E3 		mvn	r1, #0
 17706 00f8 0300A0E1 		mov	r0, r3
 17707 00fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
7022:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 17708              		.loc 1 7022 20
 17709 0100 D13E0FE3 		movw	r3, #65233
 17710 0104 FF3F4FE3 		movt	r3, 65535
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 435


 17711 0108 000000EA 		b	.L1145
 17712              	.L1144:
7023:../../Source/Kernel/rme_kernel.c ****         }
7024:../../Source/Kernel/rme_kernel.c ****         else
7025:../../Source/Kernel/rme_kernel.c ****         {
7026:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7027:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7028:../../Source/Kernel/rme_kernel.c ****         }
7029:../../Source/Kernel/rme_kernel.c ****     }
7030:../../Source/Kernel/rme_kernel.c **** 
7031:../../Source/Kernel/rme_kernel.c ****     return 0;
 17713              		.loc 1 7031 12
 17714 010c 0030A0E3 		mov	r3, #0
 17715              	.L1145:
7032:../../Source/Kernel/rme_kernel.c **** }
 17716              		.loc 1 7032 1
 17717 0110 0300A0E1 		mov	r0, r3
 17718 0114 04D04BE2 		sub	sp, fp, #4
 17719              		.cfi_def_cfa 13, 8
 17720              		@ sp needed
 17721 0118 0088BDE8 		pop	{fp, pc}
 17722              		.cfi_endproc
 17723              	.LFE69:
 17725              		.section	.text._RME_Sig_Snd,"ax",%progbits
 17726              		.align	2
 17727              		.syntax unified
 17728              		.arm
 17730              	_RME_Sig_Snd:
 17731              	.LFB70:
7033:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_Snd ************************************************/
7034:../../Source/Kernel/rme_kernel.c **** 
7035:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Snd ******************************************************
7036:../../Source/Kernel/rme_kernel.c **** Description : Try to send to a signal endpoint. This system call can cause
7037:../../Source/Kernel/rme_kernel.c ****               a potential context switch.
7038:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7039:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7040:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7041:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7042:../../Source/Kernel/rme_kernel.c **** Output      : None.
7043:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7044:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7045:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Snd(struct RME_Cap_Cpt* Cpt, 
7046:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7047:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
7048:../../Source/Kernel/rme_kernel.c **** {
 17732              		.loc 1 7048 1
 17733              		.cfi_startproc
 17734              		@ args = 0, pretend = 0, frame = 40
 17735              		@ frame_needed = 1, uses_anonymous_args = 0
 17736 0000 00482DE9 		push	{fp, lr}
 17737              		.cfi_def_cfa_offset 8
 17738              		.cfi_offset 11, -8
 17739              		.cfi_offset 14, -4
 17740 0004 04B08DE2 		add	fp, sp, #4
 17741              		.cfi_def_cfa 11, 4
 17742 0008 28D04DE2 		sub	sp, sp, #40
 17743 000c 20000BE5 		str	r0, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 436


 17744 0010 24100BE5 		str	r1, [fp, #-36]
 17745 0014 28200BE5 		str	r2, [fp, #-40]
7049:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7050:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7051:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Rcv;
7052:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7054:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7055:../../Source/Kernel/rme_kernel.c ****     
7056:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7057:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 17746              		.loc 1 7057 5
 17747 0018 28301BE5 		ldr	r3, [fp, #-40]
 17748 001c 803003E2 		and	r3, r3, #128
 17749 0020 000053E3 		cmp	r3, #0
 17750 0024 1C00001A 		bne	.L1147
 17751              		.loc 1 7057 5 is_stmt 0 discriminator 1
 17752 0028 20301BE5 		ldr	r3, [fp, #-32]
 17753 002c 142093E5 		ldr	r2, [r3, #20]
 17754 0030 28301BE5 		ldr	r3, [fp, #-40]
 17755 0034 030052E1 		cmp	r2, r3
 17756 0038 0100008A 		bhi	.L1148
 17757              		.loc 1 7057 5 discriminator 3
 17758 003c 0230E0E3 		mvn	r3, #2
 17759              		.loc 1 7057 5
 17760 0040 AF0000EA 		b	.L1149
 17761              	.L1148:
 17762              		.loc 1 7057 5 discriminator 4
 17763 0044 28301BE5 		ldr	r3, [fp, #-40]
 17764 0048 8322A0E1 		lsl	r2, r3, #5
 17765 004c 20301BE5 		ldr	r3, [fp, #-32]
 17766 0050 0C3093E5 		ldr	r3, [r3, #12]
 17767 0054 033082E0 		add	r3, r2, r3
 17768 0058 08300BE5 		str	r3, [fp, #-8]
 17769 005c 08301BE5 		ldr	r3, [fp, #-8]
 17770 0060 0300A0E1 		mov	r0, r3
 17771 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17772 0068 10000BE5 		str	r0, [fp, #-16]
 17773              		.loc 1 7057 5 discriminator 1
 17774 006c 10301BE5 		ldr	r3, [fp, #-16]
 17775 0070 FF3803E2 		and	r3, r3, #16711680
 17776 0074 020853E3 		cmp	r3, #131072
 17777 0078 0100001A 		bne	.L1150
 17778              		.loc 1 7057 5 discriminator 5
 17779 007c 0830E0E3 		mvn	r3, #8
 17780              		.loc 1 7057 5
 17781 0080 9F0000EA 		b	.L1149
 17782              	.L1150:
 17783              		.loc 1 7057 5 discriminator 6
 17784 0084 10301BE5 		ldr	r3, [fp, #-16]
 17785 0088 233CA0E1 		lsr	r3, r3, #24
 17786 008c 080053E3 		cmp	r3, #8
 17787 0090 3F00000A 		beq	.L1151
 17788              		.loc 1 7057 5 discriminator 7
 17789 0094 0130E0E3 		mvn	r3, #1
 17790              		.loc 1 7057 5
 17791 0098 990000EA 		b	.L1149
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 437


 17792              	.L1147:
 17793              		.loc 1 7057 5 discriminator 2
 17794 009c 28301BE5 		ldr	r3, [fp, #-40]
 17795 00a0 2324A0E1 		lsr	r2, r3, #8
 17796 00a4 20301BE5 		ldr	r3, [fp, #-32]
 17797 00a8 143093E5 		ldr	r3, [r3, #20]
 17798 00ac 030052E1 		cmp	r2, r3
 17799 00b0 0100003A 		bcc	.L1152
 17800              		.loc 1 7057 5 discriminator 8
 17801 00b4 0230E0E3 		mvn	r3, #2
 17802              		.loc 1 7057 5
 17803 00b8 910000EA 		b	.L1149
 17804              	.L1152:
 17805              		.loc 1 7057 5 discriminator 9
 17806 00bc 28301BE5 		ldr	r3, [fp, #-40]
 17807 00c0 2334A0E1 		lsr	r3, r3, #8
 17808 00c4 8322A0E1 		lsl	r2, r3, #5
 17809 00c8 20301BE5 		ldr	r3, [fp, #-32]
 17810 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17811 00d0 033082E0 		add	r3, r2, r3
 17812 00d4 08300BE5 		str	r3, [fp, #-8]
 17813 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17814 00dc 0300A0E1 		mov	r0, r3
 17815 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17816 00e4 10000BE5 		str	r0, [fp, #-16]
 17817              		.loc 1 7057 5 discriminator 1
 17818 00e8 10301BE5 		ldr	r3, [fp, #-16]
 17819 00ec FF3803E2 		and	r3, r3, #16711680
 17820 00f0 020853E3 		cmp	r3, #131072
 17821 00f4 0100001A 		bne	.L1153
 17822              		.loc 1 7057 5 discriminator 10
 17823 00f8 0830E0E3 		mvn	r3, #8
 17824              		.loc 1 7057 5
 17825 00fc 800000EA 		b	.L1149
 17826              	.L1153:
 17827              		.loc 1 7057 5 discriminator 11
 17828 0100 10301BE5 		ldr	r3, [fp, #-16]
 17829 0104 233CA0E1 		lsr	r3, r3, #24
 17830 0108 030053E3 		cmp	r3, #3
 17831 010c 0100000A 		beq	.L1154
 17832              		.loc 1 7057 5 discriminator 12
 17833 0110 0130E0E3 		mvn	r3, #1
 17834              		.loc 1 7057 5
 17835 0114 7A0000EA 		b	.L1149
 17836              	.L1154:
 17837              		.loc 1 7057 5 discriminator 13
 17838 0118 28301BE5 		ldr	r3, [fp, #-40]
 17839 011c 7F2003E2 		and	r2, r3, #127
 17840 0120 08301BE5 		ldr	r3, [fp, #-8]
 17841 0124 143093E5 		ldr	r3, [r3, #20]
 17842 0128 030052E1 		cmp	r2, r3
 17843 012c 0100003A 		bcc	.L1155
 17844              		.loc 1 7057 5 discriminator 14
 17845 0130 0230E0E3 		mvn	r3, #2
 17846              		.loc 1 7057 5
 17847 0134 720000EA 		b	.L1149
 17848              	.L1155:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 438


 17849              		.loc 1 7057 5 discriminator 15
 17850 0138 28301BE5 		ldr	r3, [fp, #-40]
 17851 013c 7F3003E2 		and	r3, r3, #127
 17852 0140 8322A0E1 		lsl	r2, r3, #5
 17853 0144 08301BE5 		ldr	r3, [fp, #-8]
 17854 0148 0C3093E5 		ldr	r3, [r3, #12]
 17855 014c 033082E0 		add	r3, r2, r3
 17856 0150 08300BE5 		str	r3, [fp, #-8]
 17857 0154 08301BE5 		ldr	r3, [fp, #-8]
 17858 0158 0300A0E1 		mov	r0, r3
 17859 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17860 0160 10000BE5 		str	r0, [fp, #-16]
 17861              		.loc 1 7057 5 discriminator 1
 17862 0164 10301BE5 		ldr	r3, [fp, #-16]
 17863 0168 FF3803E2 		and	r3, r3, #16711680
 17864 016c 020853E3 		cmp	r3, #131072
 17865 0170 0100001A 		bne	.L1156
 17866              		.loc 1 7057 5 discriminator 16
 17867 0174 0830E0E3 		mvn	r3, #8
 17868              		.loc 1 7057 5
 17869 0178 610000EA 		b	.L1149
 17870              	.L1156:
 17871              		.loc 1 7057 5 discriminator 17
 17872 017c 10301BE5 		ldr	r3, [fp, #-16]
 17873 0180 233CA0E1 		lsr	r3, r3, #24
 17874 0184 080053E3 		cmp	r3, #8
 17875 0188 0100000A 		beq	.L1151
 17876              		.loc 1 7057 5 discriminator 18
 17877 018c 0130E0E3 		mvn	r3, #1
 17878              		.loc 1 7057 5
 17879 0190 5B0000EA 		b	.L1149
 17880              	.L1151:
7058:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7059:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7060:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SND);
 17881              		.loc 1 7060 5 is_stmt 1
 17882 0194 08301BE5 		ldr	r3, [fp, #-8]
 17883 0198 083093E5 		ldr	r3, [r3, #8]
 17884 019c 013003E2 		and	r3, r3, #1
 17885 01a0 000053E3 		cmp	r3, #0
 17886 01a4 0100001A 		bne	.L1157
 17887              		.loc 1 7060 5 is_stmt 0 discriminator 1
 17888 01a8 0630E0E3 		mvn	r3, #6
 17889              		.loc 1 7060 5
 17890 01ac 540000EA 		b	.L1149
 17891              	.L1157:
7061:../../Source/Kernel/rme_kernel.c ****     
7062:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 17892              		.loc 1 7062 10 is_stmt 1
 17893 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 17894 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 17895 01b8 14300BE5 		str	r3, [fp, #-20]
7063:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 17896              		.loc 1 7063 14
 17897 01bc 08301BE5 		ldr	r3, [fp, #-8]
 17898 01c0 003093E5 		ldr	r3, [r3]
 17899 01c4 7330FFE6 		uxth	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 439


 17900 01c8 000053E3 		cmp	r3, #0
 17901 01cc 0200000A 		beq	.L1158
 17902              		.loc 1 7063 14 is_stmt 0 discriminator 1
 17903 01d0 08301BE5 		ldr	r3, [fp, #-8]
 17904 01d4 043093E5 		ldr	r3, [r3, #4]
 17905 01d8 000000EA 		b	.L1159
 17906              	.L1158:
 17907              		.loc 1 7063 14 discriminator 2
 17908 01dc 08301BE5 		ldr	r3, [fp, #-8]
 17909              	.L1159:
 17910              		.loc 1 7063 13 is_stmt 1 discriminator 4
 17911 01e0 18300BE5 		str	r3, [fp, #-24]
7064:../../Source/Kernel/rme_kernel.c ****     Thd_Rcv=Sig_Root->Thd;
 17912              		.loc 1 7064 12
 17913 01e4 18301BE5 		ldr	r3, [fp, #-24]
 17914 01e8 183093E5 		ldr	r3, [r3, #24]
 17915 01ec 1C300BE5 		str	r3, [fp, #-28]
7065:../../Source/Kernel/rme_kernel.c **** 
7066:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7067:../../Source/Kernel/rme_kernel.c ****     if(Thd_Rcv!=RME_NULL)
 17916              		.loc 1 7067 7
 17917 01f0 1C301BE5 		ldr	r3, [fp, #-28]
 17918 01f4 000053E3 		cmp	r3, #0
 17919 01f8 0A00000A 		beq	.L1160
7068:../../Source/Kernel/rme_kernel.c ****     {
7069:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7070:../../Source/Kernel/rme_kernel.c **** 
7071:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Local==Local)
 17920              		.loc 1 7071 26
 17921 01fc 1C301BE5 		ldr	r3, [fp, #-28]
 17922 0200 143093E5 		ldr	r3, [r3, #20]
 17923              		.loc 1 7071 11
 17924 0204 14201BE5 		ldr	r2, [fp, #-20]
 17925 0208 030052E1 		cmp	r2, r3
 17926 020c 0200001A 		bne	.L1161
7072:../../Source/Kernel/rme_kernel.c ****         {
7073:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7074:../../Source/Kernel/rme_kernel.c **** 
7075:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 17927              		.loc 1 7075 20
 17928 0210 0130A0E3 		mov	r3, #1
 17929 0214 0C300BE5 		str	r3, [fp, #-12]
 17930 0218 040000EA 		b	.L1162
 17931              	.L1161:
7076:../../Source/Kernel/rme_kernel.c ****         }
7077:../../Source/Kernel/rme_kernel.c ****         else
7078:../../Source/Kernel/rme_kernel.c ****         {
7079:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7080:../../Source/Kernel/rme_kernel.c **** 
7081:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 17932              		.loc 1 7081 20
 17933 021c 0030A0E3 		mov	r3, #0
 17934 0220 0C300BE5 		str	r3, [fp, #-12]
 17935 0224 010000EA 		b	.L1162
 17936              	.L1160:
7082:../../Source/Kernel/rme_kernel.c ****         }
7083:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 440


7084:../../Source/Kernel/rme_kernel.c ****     else
7085:../../Source/Kernel/rme_kernel.c ****     {
7086:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7087:../../Source/Kernel/rme_kernel.c **** 
7088:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 17937              		.loc 1 7088 16
 17938 0228 0030A0E3 		mov	r3, #0
 17939 022c 0C300BE5 		str	r3, [fp, #-12]
 17940              	.L1162:
7089:../../Source/Kernel/rme_kernel.c ****     }
7090:../../Source/Kernel/rme_kernel.c ****     
7091:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 17941              		.loc 1 7091 7
 17942 0230 0C301BE5 		ldr	r3, [fp, #-12]
 17943 0234 000053E3 		cmp	r3, #0
 17944 0238 1D00000A 		beq	.L1163
7092:../../Source/Kernel/rme_kernel.c ****     {
7093:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7094:../../Source/Kernel/rme_kernel.c **** 
7095:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7096:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 17945              		.loc 1 7096 9
 17946 023c 0010A0E3 		mov	r1, #0
 17947 0240 24001BE5 		ldr	r0, [fp, #-36]
 17948 0244 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7097:../../Source/Kernel/rme_kernel.c ****         
7098:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7099:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7100:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7101:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7102:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Rcv->Ctx.Reg->Reg),1);
 17949              		.loc 1 7102 44
 17950 0248 1C301BE5 		ldr	r3, [fp, #-28]
 17951 024c 483093E5 		ldr	r3, [r3, #72]
 17952              		.loc 1 7102 9
 17953 0250 0110A0E3 		mov	r1, #1
 17954 0254 0300A0E1 		mov	r0, r3
 17955 0258 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7103:../../Source/Kernel/rme_kernel.c ****         
7104:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7105:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Slice!=0U)
 17956              		.loc 1 7105 26
 17957 025c 1C301BE5 		ldr	r3, [fp, #-28]
 17958 0260 183093E5 		ldr	r3, [r3, #24]
 17959              		.loc 1 7105 11
 17960 0264 000053E3 		cmp	r3, #0
 17961 0268 0500000A 		beq	.L1164
7106:../../Source/Kernel/rme_kernel.c ****         {
7107:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7108:../../Source/Kernel/rme_kernel.c **** 
7109:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7110:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_READY;
 17962              		.loc 1 7110 33
 17963 026c 1C301BE5 		ldr	r3, [fp, #-28]
 17964 0270 0020A0E3 		mov	r2, #0
 17965 0274 1C2083E5 		str	r2, [r3, #28]
7111:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Rcv);
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 441


 17966              		.loc 1 7111 13
 17967 0278 1C001BE5 		ldr	r0, [fp, #-28]
 17968 027c FEFFFFEB 		bl	_RME_Run_Ins
 17969 0280 040000EA 		b	.L1165
 17970              	.L1164:
7112:../../Source/Kernel/rme_kernel.c ****         }
7113:../../Source/Kernel/rme_kernel.c ****         else
7114:../../Source/Kernel/rme_kernel.c ****         {
7115:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7116:../../Source/Kernel/rme_kernel.c **** 
7117:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7118:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_TIMEOUT;
 17971              		.loc 1 7118 33
 17972 0284 1C301BE5 		ldr	r3, [fp, #-28]
 17973 0288 0220A0E3 		mov	r2, #2
 17974 028c 1C2083E5 		str	r2, [r3, #28]
7119:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Rcv);
 17975              		.loc 1 7119 13
 17976 0290 1C001BE5 		ldr	r0, [fp, #-28]
 17977 0294 FEFFFFEB 		bl	_RME_Run_Notif
 17978              	.L1165:
7120:../../Source/Kernel/rme_kernel.c ****         }
7121:../../Source/Kernel/rme_kernel.c ****         
7122:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread to run */
7123:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 17979              		.loc 1 7123 9
 17980 0298 14101BE5 		ldr	r1, [fp, #-20]
 17981 029c 24001BE5 		ldr	r0, [fp, #-36]
 17982 02a0 FEFFFFEB 		bl	_RME_Kern_High
7124:../../Source/Kernel/rme_kernel.c ****         
7125:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7126:../../Source/Kernel/rme_kernel.c ****         Sig_Root->Thd=RME_NULL;
 17983              		.loc 1 7126 22
 17984 02a4 18301BE5 		ldr	r3, [fp, #-24]
 17985 02a8 0020A0E3 		mov	r2, #0
 17986 02ac 182083E5 		str	r2, [r3, #24]
 17987 02b0 120000EA 		b	.L1166
 17988              	.L1163:
7127:../../Source/Kernel/rme_kernel.c ****     }
7128:../../Source/Kernel/rme_kernel.c ****     else
7129:../../Source/Kernel/rme_kernel.c ****     {
7130:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7131:../../Source/Kernel/rme_kernel.c **** 
7132:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, we just faa and return */
7133:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Sig_Root->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 17989              		.loc 1 7133 12
 17990 02b4 18301BE5 		ldr	r3, [fp, #-24]
 17991 02b8 143083E2 		add	r3, r3, #20
 17992 02bc 0110A0E3 		mov	r1, #1
 17993 02c0 0300A0E1 		mov	r0, r3
 17994 02c4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 17995 02c8 0030A0E1 		mov	r3, r0
 17996              		.loc 1 7133 11 discriminator 1
 17997 02cc 0A0173E3 		cmn	r3, #-2147483646
 17998 02d0 0700009A 		bls	.L1167
7134:../../Source/Kernel/rme_kernel.c ****         {
7135:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 442


7136:../../Source/Kernel/rme_kernel.c **** 
7137:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Sig_Root->Sig_Num),-1);
 17999              		.loc 1 7137 13
 18000 02d4 18301BE5 		ldr	r3, [fp, #-24]
 18001 02d8 143083E2 		add	r3, r3, #20
 18002 02dc 0010E0E3 		mvn	r1, #0
 18003 02e0 0300A0E1 		mov	r0, r3
 18004 02e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7138:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 18005              		.loc 1 7138 20
 18006 02e8 D13E0FE3 		movw	r3, #65233
 18007 02ec FF3F4FE3 		movt	r3, 65535
 18008 02f0 030000EA 		b	.L1149
 18009              	.L1167:
7139:../../Source/Kernel/rme_kernel.c ****         }
7140:../../Source/Kernel/rme_kernel.c ****         else
7141:../../Source/Kernel/rme_kernel.c ****         {
7142:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7143:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7144:../../Source/Kernel/rme_kernel.c ****         }
7145:../../Source/Kernel/rme_kernel.c ****         
7146:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7147:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18010              		.loc 1 7147 9
 18011 02f4 0010A0E3 		mov	r1, #0
 18012 02f8 24001BE5 		ldr	r0, [fp, #-36]
 18013 02fc FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18014              	.L1166:
7148:../../Source/Kernel/rme_kernel.c ****     }
7149:../../Source/Kernel/rme_kernel.c **** 
7150:../../Source/Kernel/rme_kernel.c ****     return 0;
 18015              		.loc 1 7150 12
 18016 0300 0030A0E3 		mov	r3, #0
 18017              	.L1149:
7151:../../Source/Kernel/rme_kernel.c **** }
 18018              		.loc 1 7151 1
 18019 0304 0300A0E1 		mov	r0, r3
 18020 0308 04D04BE2 		sub	sp, fp, #4
 18021              		.cfi_def_cfa 13, 8
 18022              		@ sp needed
 18023 030c 0088BDE8 		pop	{fp, pc}
 18024              		.cfi_endproc
 18025              	.LFE70:
 18027              		.section	.text._RME_Sig_Rcv,"ax",%progbits
 18028              		.align	2
 18029              		.syntax unified
 18030              		.arm
 18032              	_RME_Sig_Rcv:
 18033              	.LFB71:
7152:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Snd *************************************************/
7153:../../Source/Kernel/rme_kernel.c **** 
7154:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Rcv ******************************************************
7155:../../Source/Kernel/rme_kernel.c **** Description : Try to receive from a signal endpoint. The rules for signal
7156:../../Source/Kernel/rme_kernel.c ****               endpoint receive is:
7157:../../Source/Kernel/rme_kernel.c ****               1.If a receive endpoint have many send endpoints, everyone can
7158:../../Source/Kernel/rme_kernel.c ****                 send to it, and sending to it will increase the count by 1.
7159:../../Source/Kernel/rme_kernel.c ****               2.If some thread blocks on a receive endpoint, the wakeup is only
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 443


7160:../../Source/Kernel/rme_kernel.c ****                 possible from the same core that thread is on.
7161:../../Source/Kernel/rme_kernel.c ****               3.It is not recommended to let 2 cores operate on the rcv endpoint
7162:../../Source/Kernel/rme_kernel.c ****                 simutaneously.
7163:../../Source/Kernel/rme_kernel.c ****               This system call can potentially trigger a context switch.
7164:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7165:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
7166:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7167:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7168:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Option - The receive option.
7169:../../Source/Kernel/rme_kernel.c **** Output      : None.
7170:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, a non-negative number containing the 
7171:../../Source/Kernel/rme_kernel.c ****                           number of signals received; or an error code.
7172:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7173:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Rcv(struct RME_Cap_Cpt* Cpt,
7174:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7175:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig,
7176:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Option)
7177:../../Source/Kernel/rme_kernel.c **** {
 18034              		.loc 1 7177 1
 18035              		.cfi_startproc
 18036              		@ args = 0, pretend = 0, frame = 40
 18037              		@ frame_needed = 1, uses_anonymous_args = 0
 18038 0000 00482DE9 		push	{fp, lr}
 18039              		.cfi_def_cfa_offset 8
 18040              		.cfi_offset 11, -8
 18041              		.cfi_offset 14, -4
 18042 0004 04B08DE2 		add	fp, sp, #4
 18043              		.cfi_def_cfa 11, 4
 18044 0008 28D04DE2 		sub	sp, sp, #40
 18045 000c 20000BE5 		str	r0, [fp, #-32]
 18046 0010 24100BE5 		str	r1, [fp, #-36]
 18047 0014 28200BE5 		str	r2, [fp, #-40]
 18048 0018 2C300BE5 		str	r3, [fp, #-44]
7178:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7179:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7180:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7181:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7182:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Value;
7183:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7184:../../Source/Kernel/rme_kernel.c ****     
7185:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7186:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 18049              		.loc 1 7186 5
 18050 001c 28301BE5 		ldr	r3, [fp, #-40]
 18051 0020 803003E2 		and	r3, r3, #128
 18052 0024 000053E3 		cmp	r3, #0
 18053 0028 1C00001A 		bne	.L1169
 18054              		.loc 1 7186 5 is_stmt 0 discriminator 1
 18055 002c 20301BE5 		ldr	r3, [fp, #-32]
 18056 0030 142093E5 		ldr	r2, [r3, #20]
 18057 0034 28301BE5 		ldr	r3, [fp, #-40]
 18058 0038 030052E1 		cmp	r2, r3
 18059 003c 0100008A 		bhi	.L1170
 18060              		.loc 1 7186 5 discriminator 3
 18061 0040 0230E0E3 		mvn	r3, #2
 18062              		.loc 1 7186 5
 18063 0044 F60000EA 		b	.L1171
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 444


 18064              	.L1170:
 18065              		.loc 1 7186 5 discriminator 4
 18066 0048 28301BE5 		ldr	r3, [fp, #-40]
 18067 004c 8322A0E1 		lsl	r2, r3, #5
 18068 0050 20301BE5 		ldr	r3, [fp, #-32]
 18069 0054 0C3093E5 		ldr	r3, [r3, #12]
 18070 0058 033082E0 		add	r3, r2, r3
 18071 005c 08300BE5 		str	r3, [fp, #-8]
 18072 0060 08301BE5 		ldr	r3, [fp, #-8]
 18073 0064 0300A0E1 		mov	r0, r3
 18074 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18075 006c 0C000BE5 		str	r0, [fp, #-12]
 18076              		.loc 1 7186 5 discriminator 1
 18077 0070 0C301BE5 		ldr	r3, [fp, #-12]
 18078 0074 FF3803E2 		and	r3, r3, #16711680
 18079 0078 020853E3 		cmp	r3, #131072
 18080 007c 0100001A 		bne	.L1172
 18081              		.loc 1 7186 5 discriminator 5
 18082 0080 0830E0E3 		mvn	r3, #8
 18083              		.loc 1 7186 5
 18084 0084 E60000EA 		b	.L1171
 18085              	.L1172:
 18086              		.loc 1 7186 5 discriminator 6
 18087 0088 0C301BE5 		ldr	r3, [fp, #-12]
 18088 008c 233CA0E1 		lsr	r3, r3, #24
 18089 0090 080053E3 		cmp	r3, #8
 18090 0094 3F00000A 		beq	.L1173
 18091              		.loc 1 7186 5 discriminator 7
 18092 0098 0130E0E3 		mvn	r3, #1
 18093              		.loc 1 7186 5
 18094 009c E00000EA 		b	.L1171
 18095              	.L1169:
 18096              		.loc 1 7186 5 discriminator 2
 18097 00a0 28301BE5 		ldr	r3, [fp, #-40]
 18098 00a4 2324A0E1 		lsr	r2, r3, #8
 18099 00a8 20301BE5 		ldr	r3, [fp, #-32]
 18100 00ac 143093E5 		ldr	r3, [r3, #20]
 18101 00b0 030052E1 		cmp	r2, r3
 18102 00b4 0100003A 		bcc	.L1174
 18103              		.loc 1 7186 5 discriminator 8
 18104 00b8 0230E0E3 		mvn	r3, #2
 18105              		.loc 1 7186 5
 18106 00bc D80000EA 		b	.L1171
 18107              	.L1174:
 18108              		.loc 1 7186 5 discriminator 9
 18109 00c0 28301BE5 		ldr	r3, [fp, #-40]
 18110 00c4 2334A0E1 		lsr	r3, r3, #8
 18111 00c8 8322A0E1 		lsl	r2, r3, #5
 18112 00cc 20301BE5 		ldr	r3, [fp, #-32]
 18113 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18114 00d4 033082E0 		add	r3, r2, r3
 18115 00d8 08300BE5 		str	r3, [fp, #-8]
 18116 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18117 00e0 0300A0E1 		mov	r0, r3
 18118 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18119 00e8 0C000BE5 		str	r0, [fp, #-12]
 18120              		.loc 1 7186 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 445


 18121 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 18122 00f0 FF3803E2 		and	r3, r3, #16711680
 18123 00f4 020853E3 		cmp	r3, #131072
 18124 00f8 0100001A 		bne	.L1175
 18125              		.loc 1 7186 5 discriminator 10
 18126 00fc 0830E0E3 		mvn	r3, #8
 18127              		.loc 1 7186 5
 18128 0100 C70000EA 		b	.L1171
 18129              	.L1175:
 18130              		.loc 1 7186 5 discriminator 11
 18131 0104 0C301BE5 		ldr	r3, [fp, #-12]
 18132 0108 233CA0E1 		lsr	r3, r3, #24
 18133 010c 030053E3 		cmp	r3, #3
 18134 0110 0100000A 		beq	.L1176
 18135              		.loc 1 7186 5 discriminator 12
 18136 0114 0130E0E3 		mvn	r3, #1
 18137              		.loc 1 7186 5
 18138 0118 C10000EA 		b	.L1171
 18139              	.L1176:
 18140              		.loc 1 7186 5 discriminator 13
 18141 011c 28301BE5 		ldr	r3, [fp, #-40]
 18142 0120 7F2003E2 		and	r2, r3, #127
 18143 0124 08301BE5 		ldr	r3, [fp, #-8]
 18144 0128 143093E5 		ldr	r3, [r3, #20]
 18145 012c 030052E1 		cmp	r2, r3
 18146 0130 0100003A 		bcc	.L1177
 18147              		.loc 1 7186 5 discriminator 14
 18148 0134 0230E0E3 		mvn	r3, #2
 18149              		.loc 1 7186 5
 18150 0138 B90000EA 		b	.L1171
 18151              	.L1177:
 18152              		.loc 1 7186 5 discriminator 15
 18153 013c 28301BE5 		ldr	r3, [fp, #-40]
 18154 0140 7F3003E2 		and	r3, r3, #127
 18155 0144 8322A0E1 		lsl	r2, r3, #5
 18156 0148 08301BE5 		ldr	r3, [fp, #-8]
 18157 014c 0C3093E5 		ldr	r3, [r3, #12]
 18158 0150 033082E0 		add	r3, r2, r3
 18159 0154 08300BE5 		str	r3, [fp, #-8]
 18160 0158 08301BE5 		ldr	r3, [fp, #-8]
 18161 015c 0300A0E1 		mov	r0, r3
 18162 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18163 0164 0C000BE5 		str	r0, [fp, #-12]
 18164              		.loc 1 7186 5 discriminator 1
 18165 0168 0C301BE5 		ldr	r3, [fp, #-12]
 18166 016c FF3803E2 		and	r3, r3, #16711680
 18167 0170 020853E3 		cmp	r3, #131072
 18168 0174 0100001A 		bne	.L1178
 18169              		.loc 1 7186 5 discriminator 16
 18170 0178 0830E0E3 		mvn	r3, #8
 18171              		.loc 1 7186 5
 18172 017c A80000EA 		b	.L1171
 18173              	.L1178:
 18174              		.loc 1 7186 5 discriminator 17
 18175 0180 0C301BE5 		ldr	r3, [fp, #-12]
 18176 0184 233CA0E1 		lsr	r3, r3, #24
 18177 0188 080053E3 		cmp	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 446


 18178 018c 0100000A 		beq	.L1173
 18179              		.loc 1 7186 5 discriminator 18
 18180 0190 0130E0E3 		mvn	r3, #1
 18181              		.loc 1 7186 5
 18182 0194 A20000EA 		b	.L1171
 18183              	.L1173:
7187:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7188:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7189:../../Source/Kernel/rme_kernel.c ****     switch(Option)
 18184              		.loc 1 7189 5 is_stmt 1
 18185 0198 2C201BE5 		ldr	r2, [fp, #-44]
 18186 019c 8C329FE5 		ldr	r3, .L1210
 18187 01a0 030052E3 		cmp	r2, #3
 18188 01a4 1D00008A 		bhi	.L1179
 18189 01a8 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 18190              	.Lrtx1181:
 18191 01ac 00F020E3 		nop
 18192              		.section	.rodata._RME_Sig_Rcv,"a",%progbits
 18193              		.align	2
 18194              	.L1181:
 18195 0000 B0010000 		.word	.L1184
 18196 0004 CC010000 		.word	.L1183
 18197 0008 E8010000 		.word	.L1182
 18198 000c 04020000 		.word	.L1180
 18199              		.section	.text._RME_Sig_Rcv
 18200              		.p2align 2
 18201              	.L1184:
7190:../../Source/Kernel/rme_kernel.c ****     {
7191:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BS:
7192:../../Source/Kernel/rme_kernel.c ****         {
7193:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7194:../../Source/Kernel/rme_kernel.c **** 
7195:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BS);
 18202              		.loc 1 7195 13
 18203 01b0 08301BE5 		ldr	r3, [fp, #-8]
 18204 01b4 083093E5 		ldr	r3, [r3, #8]
 18205 01b8 023003E2 		and	r3, r3, #2
 18206 01bc 000053E3 		cmp	r3, #0
 18207 01c0 1800001A 		bne	.L1206
 18208              		.loc 1 7195 13 is_stmt 0 discriminator 1
 18209 01c4 0630E0E3 		mvn	r3, #6
 18210              		.loc 1 7195 13
 18211 01c8 950000EA 		b	.L1171
 18212              	.L1183:
7196:../../Source/Kernel/rme_kernel.c ****             break;
7197:../../Source/Kernel/rme_kernel.c ****         }
7198:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BM:
7199:../../Source/Kernel/rme_kernel.c ****         {
7200:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7201:../../Source/Kernel/rme_kernel.c ****             
7202:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BM);
 18213              		.loc 1 7202 13 is_stmt 1
 18214 01cc 08301BE5 		ldr	r3, [fp, #-8]
 18215 01d0 083093E5 		ldr	r3, [r3, #8]
 18216 01d4 043003E2 		and	r3, r3, #4
 18217 01d8 000053E3 		cmp	r3, #0
 18218 01dc 1300001A 		bne	.L1207
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 447


 18219              		.loc 1 7202 13 is_stmt 0 discriminator 1
 18220 01e0 0630E0E3 		mvn	r3, #6
 18221              		.loc 1 7202 13
 18222 01e4 8E0000EA 		b	.L1171
 18223              	.L1182:
7203:../../Source/Kernel/rme_kernel.c ****             break;
7204:../../Source/Kernel/rme_kernel.c ****         }
7205:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NS:
7206:../../Source/Kernel/rme_kernel.c ****         {
7207:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7208:../../Source/Kernel/rme_kernel.c ****             
7209:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NS);
 18224              		.loc 1 7209 13 is_stmt 1
 18225 01e8 08301BE5 		ldr	r3, [fp, #-8]
 18226 01ec 083093E5 		ldr	r3, [r3, #8]
 18227 01f0 083003E2 		and	r3, r3, #8
 18228 01f4 000053E3 		cmp	r3, #0
 18229 01f8 0E00001A 		bne	.L1208
 18230              		.loc 1 7209 13 is_stmt 0 discriminator 1
 18231 01fc 0630E0E3 		mvn	r3, #6
 18232              		.loc 1 7209 13
 18233 0200 870000EA 		b	.L1171
 18234              	.L1180:
7210:../../Source/Kernel/rme_kernel.c ****             break;
7211:../../Source/Kernel/rme_kernel.c ****         }
7212:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NM:
7213:../../Source/Kernel/rme_kernel.c ****         {
7214:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7215:../../Source/Kernel/rme_kernel.c ****             
7216:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NM);
 18235              		.loc 1 7216 13 is_stmt 1
 18236 0204 08301BE5 		ldr	r3, [fp, #-8]
 18237 0208 083093E5 		ldr	r3, [r3, #8]
 18238 020c 103003E2 		and	r3, r3, #16
 18239 0210 000053E3 		cmp	r3, #0
 18240 0214 0900001A 		bne	.L1209
 18241              		.loc 1 7216 13 is_stmt 0 discriminator 1
 18242 0218 0630E0E3 		mvn	r3, #6
 18243              		.loc 1 7216 13
 18244 021c 800000EA 		b	.L1171
 18245              	.L1179:
7217:../../Source/Kernel/rme_kernel.c ****             break;
7218:../../Source/Kernel/rme_kernel.c ****         }
7219:../../Source/Kernel/rme_kernel.c ****         default:
7220:../../Source/Kernel/rme_kernel.c ****         {
7221:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7222:../../Source/Kernel/rme_kernel.c ****             
7223:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_ACT;
 18246              		.loc 1 7223 20 is_stmt 1
 18247 0220 4B3FE0E3 		mvn	r3, #300
 18248 0224 7E0000EA 		b	.L1171
 18249              	.L1206:
7196:../../Source/Kernel/rme_kernel.c ****         }
 18250              		.loc 1 7196 13
 18251 0228 00F020E3 		nop
 18252 022c 040000EA 		b	.L1186
 18253              	.L1207:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 448


7203:../../Source/Kernel/rme_kernel.c ****         }
 18254              		.loc 1 7203 13
 18255 0230 00F020E3 		nop
 18256 0234 020000EA 		b	.L1186
 18257              	.L1208:
7210:../../Source/Kernel/rme_kernel.c ****         }
 18258              		.loc 1 7210 13
 18259 0238 00F020E3 		nop
 18260 023c 000000EA 		b	.L1186
 18261              	.L1209:
7217:../../Source/Kernel/rme_kernel.c ****         }
 18262              		.loc 1 7217 13
 18263 0240 00F020E3 		nop
 18264              	.L1186:
7224:../../Source/Kernel/rme_kernel.c ****         }
7225:../../Source/Kernel/rme_kernel.c ****     }
7226:../../Source/Kernel/rme_kernel.c ****     
7227:../../Source/Kernel/rme_kernel.c ****     /* Convert to root cap */
7228:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18265              		.loc 1 7228 14
 18266 0244 08301BE5 		ldr	r3, [fp, #-8]
 18267 0248 003093E5 		ldr	r3, [r3]
 18268 024c 7330FFE6 		uxth	r3, r3
 18269 0250 000053E3 		cmp	r3, #0
 18270 0254 0200000A 		beq	.L1190
 18271              		.loc 1 7228 14 is_stmt 0 discriminator 1
 18272 0258 08301BE5 		ldr	r3, [fp, #-8]
 18273 025c 043093E5 		ldr	r3, [r3, #4]
 18274 0260 000000EA 		b	.L1191
 18275              	.L1190:
 18276              		.loc 1 7228 14 discriminator 2
 18277 0264 08301BE5 		ldr	r3, [fp, #-8]
 18278              	.L1191:
 18279              		.loc 1 7228 13 is_stmt 1 discriminator 4
 18280 0268 10300BE5 		str	r3, [fp, #-16]
7229:../../Source/Kernel/rme_kernel.c ****     
7230:../../Source/Kernel/rme_kernel.c ****     /* See if we can receive on that endpoint - if someone blocks on it, we 
7231:../../Source/Kernel/rme_kernel.c ****      * must wait for it to unblock before we can proceed. */
7232:../../Source/Kernel/rme_kernel.c ****     if(Sig_Root->Thd!=RME_NULL)
 18281              		.loc 1 7232 16
 18282 026c 10301BE5 		ldr	r3, [fp, #-16]
 18283 0270 183093E5 		ldr	r3, [r3, #24]
 18284              		.loc 1 7232 7
 18285 0274 000053E3 		cmp	r3, #0
 18286 0278 0100000A 		beq	.L1192
7233:../../Source/Kernel/rme_kernel.c ****     {
7234:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7235:../../Source/Kernel/rme_kernel.c **** 
7236:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 18287              		.loc 1 7236 16
 18288 027c 4B3FE0E3 		mvn	r3, #300
 18289 0280 670000EA 		b	.L1171
 18290              	.L1192:
7237:../../Source/Kernel/rme_kernel.c ****     }
7238:../../Source/Kernel/rme_kernel.c ****     else
7239:../../Source/Kernel/rme_kernel.c ****     {
7240:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 449


7241:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7242:../../Source/Kernel/rme_kernel.c ****     }
7243:../../Source/Kernel/rme_kernel.c ****     
7244:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18291              		.loc 1 7244 10
 18292 0284 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18293 0288 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18294 028c 14300BE5 		str	r3, [fp, #-20]
7245:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 18295              		.loc 1 7245 12
 18296 0290 14301BE5 		ldr	r3, [fp, #-20]
 18297 0294 043093E5 		ldr	r3, [r3, #4]
 18298 0298 18300BE5 		str	r3, [fp, #-24]
7246:../../Source/Kernel/rme_kernel.c ****     
7247:../../Source/Kernel/rme_kernel.c ****     /* Check if we trying to let a boot-time thread block on a signal, which is
7248:../../Source/Kernel/rme_kernel.c ****      * disallowed. Additionally, if the current thread have no timeslice left
7249:../../Source/Kernel/rme_kernel.c ****      * (which shouldn't happen under any circumstances), we assert and die. */
7250:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_Cur->Sched.Slice!=0U);
 18299              		.loc 1 7250 5
 18300 029c 18301BE5 		ldr	r3, [fp, #-24]
 18301 02a0 183093E5 		ldr	r3, [r3, #24]
 18302 02a4 000053E3 		cmp	r3, #0
 18303 02a8 0800001A 		bne	.L1193
 18304              		.loc 1 7250 5 is_stmt 0 discriminator 1
 18305 02ac 003000E3 		movw	r3, #:lower16:.LC6
 18306 02b0 003040E3 		movt	r3, #:upper16:.LC6
 18307 02b4 002000E3 		movw	r2, #:lower16:.LC7
 18308 02b8 002040E3 		movt	r2, #:upper16:.LC7
 18309 02bc 521C01E3 		movw	r1, #7250
 18310 02c0 000000E3 		movw	r0, #:lower16:.LC8
 18311 02c4 000040E3 		movt	r0, #:upper16:.LC8
 18312 02c8 FEFFFFEB 		bl	RME_Log
 18313              	.L1194:
 18314              		.loc 1 7250 5
 18315 02cc FEFFFFEA 		b	.L1194
 18316              	.L1193:
7251:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 18317              		.loc 1 7251 22 is_stmt 1
 18318 02d0 18301BE5 		ldr	r3, [fp, #-24]
 18319 02d4 183093E5 		ldr	r3, [r3, #24]
 18320              		.loc 1 7251 7
 18321 02d8 060173E3 		cmn	r3, #-2147483647
 18322 02dc 0200001A 		bne	.L1195
7252:../../Source/Kernel/rme_kernel.c ****     {
7253:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7254:../../Source/Kernel/rme_kernel.c **** 
7255:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_BOOT;
 18323              		.loc 1 7255 16
 18324 02e0 CD3E0FE3 		movw	r3, #65229
 18325 02e4 FF3F4FE3 		movt	r3, 65535
 18326 02e8 4D0000EA 		b	.L1171
 18327              	.L1195:
7256:../../Source/Kernel/rme_kernel.c ****     }
7257:../../Source/Kernel/rme_kernel.c ****     else
7258:../../Source/Kernel/rme_kernel.c ****     {
7259:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7260:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 450


7261:../../Source/Kernel/rme_kernel.c ****     }
7262:../../Source/Kernel/rme_kernel.c **** 
7263:../../Source/Kernel/rme_kernel.c ****     /* Check if there are signals available */
7264:../../Source/Kernel/rme_kernel.c ****     Old_Value=Sig_Root->Sig_Num;
 18328              		.loc 1 7264 14
 18329 02ec 10301BE5 		ldr	r3, [fp, #-16]
 18330 02f0 143093E5 		ldr	r3, [r3, #20]
 18331 02f4 1C300BE5 		str	r3, [fp, #-28]
7265:../../Source/Kernel/rme_kernel.c ****     if(Old_Value>0U)
 18332              		.loc 1 7265 7
 18333 02f8 1C301BE5 		ldr	r3, [fp, #-28]
 18334 02fc 000053E3 		cmp	r3, #0
 18335 0300 2600000A 		beq	.L1196
7266:../../Source/Kernel/rme_kernel.c ****     {
7267:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7268:../../Source/Kernel/rme_kernel.c **** 
7269:../../Source/Kernel/rme_kernel.c ****         /* Can't use faa, other cores may reduce count to zero in the meantime */
7270:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_NS))
 18336              		.loc 1 7270 11
 18337 0304 2C301BE5 		ldr	r3, [fp, #-44]
 18338 0308 000053E3 		cmp	r3, #0
 18339 030c 0200000A 		beq	.L1197
 18340              		.loc 1 7270 32 discriminator 1
 18341 0310 2C301BE5 		ldr	r3, [fp, #-44]
 18342 0314 020053E3 		cmp	r3, #2
 18343 0318 0F00001A 		bne	.L1198
 18344              	.L1197:
7271:../../Source/Kernel/rme_kernel.c ****         {
7272:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7273:../../Source/Kernel/rme_kernel.c **** 
7274:../../Source/Kernel/rme_kernel.c ****             /* Try to take one */
7275:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18345              		.loc 1 7275 16
 18346 031c 10301BE5 		ldr	r3, [fp, #-16]
 18347 0320 140083E2 		add	r0, r3, #20
 18348 0324 1C301BE5 		ldr	r3, [fp, #-28]
 18349 0328 013043E2 		sub	r3, r3, #1
 18350 032c 0320A0E1 		mov	r2, r3
 18351 0330 1C101BE5 		ldr	r1, [fp, #-28]
 18352 0334 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18353 0338 0030A0E1 		mov	r3, r0
 18354              		.loc 1 7275 15 discriminator 1
 18355 033c 000053E3 		cmp	r3, #0
 18356 0340 0100001A 		bne	.L1199
7276:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7277:../../Source/Kernel/rme_kernel.c ****                              Old_Value-1U)==RME_CASFAIL)
7278:../../Source/Kernel/rme_kernel.c ****             {
7279:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7280:../../Source/Kernel/rme_kernel.c **** 
7281:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18357              		.loc 1 7281 24
 18358 0344 133EE0E3 		mvn	r3, #304
 18359 0348 350000EA 		b	.L1171
 18360              	.L1199:
7282:../../Source/Kernel/rme_kernel.c ****             }
7283:../../Source/Kernel/rme_kernel.c ****             else
7284:../../Source/Kernel/rme_kernel.c ****             {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 451


7285:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7286:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7287:../../Source/Kernel/rme_kernel.c ****             }
7288:../../Source/Kernel/rme_kernel.c ****             
7289:../../Source/Kernel/rme_kernel.c ****             /* We have taken it, now return what we have taken */
7290:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,1);
 18361              		.loc 1 7290 13
 18362 034c 0110A0E3 		mov	r1, #1
 18363 0350 24001BE5 		ldr	r0, [fp, #-36]
 18364 0354 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18365 0358 0E0000EA 		b	.L1200
 18366              	.L1198:
7291:../../Source/Kernel/rme_kernel.c ****         }
7292:../../Source/Kernel/rme_kernel.c ****         else
7293:../../Source/Kernel/rme_kernel.c ****         {
7294:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7295:../../Source/Kernel/rme_kernel.c **** 
7296:../../Source/Kernel/rme_kernel.c ****             /* Try to take all */
7297:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18367              		.loc 1 7297 16
 18368 035c 10301BE5 		ldr	r3, [fp, #-16]
 18369 0360 143083E2 		add	r3, r3, #20
 18370 0364 0020A0E3 		mov	r2, #0
 18371 0368 1C101BE5 		ldr	r1, [fp, #-28]
 18372 036c 0300A0E1 		mov	r0, r3
 18373 0370 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18374 0374 0030A0E1 		mov	r3, r0
 18375              		.loc 1 7297 15 discriminator 1
 18376 0378 000053E3 		cmp	r3, #0
 18377 037c 0100001A 		bne	.L1201
7298:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7299:../../Source/Kernel/rme_kernel.c ****                              0U)==RME_CASFAIL)
7300:../../Source/Kernel/rme_kernel.c ****             {
7301:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7302:../../Source/Kernel/rme_kernel.c **** 
7303:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18378              		.loc 1 7303 24
 18379 0380 133EE0E3 		mvn	r3, #304
 18380 0384 260000EA 		b	.L1171
 18381              	.L1201:
7304:../../Source/Kernel/rme_kernel.c ****             }
7305:../../Source/Kernel/rme_kernel.c ****             else
7306:../../Source/Kernel/rme_kernel.c ****             {
7307:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7308:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7309:../../Source/Kernel/rme_kernel.c ****             }
7310:../../Source/Kernel/rme_kernel.c ****             
7311:../../Source/Kernel/rme_kernel.c ****             /* We have taken all, now return what we have taken */
7312:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,(rme_ret_t)Old_Value);
 18382              		.loc 1 7312 13
 18383 0388 1C301BE5 		ldr	r3, [fp, #-28]
 18384 038c 0310A0E1 		mov	r1, r3
 18385 0390 24001BE5 		ldr	r0, [fp, #-36]
 18386 0394 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18387              	.L1200:
7313:../../Source/Kernel/rme_kernel.c ****         }
7314:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 452


7315:../../Source/Kernel/rme_kernel.c ****         return 0;
 18388              		.loc 1 7315 16
 18389 0398 0030A0E3 		mov	r3, #0
 18390 039c 200000EA 		b	.L1171
 18391              	.L1196:
7316:../../Source/Kernel/rme_kernel.c ****     }
7317:../../Source/Kernel/rme_kernel.c ****     else
7318:../../Source/Kernel/rme_kernel.c ****     {
7319:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7320:../../Source/Kernel/rme_kernel.c **** 
7321:../../Source/Kernel/rme_kernel.c ****         /* There's no value, try to block */
7322:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_BM))
 18392              		.loc 1 7322 11
 18393 03a0 2C301BE5 		ldr	r3, [fp, #-44]
 18394 03a4 000053E3 		cmp	r3, #0
 18395 03a8 0200000A 		beq	.L1202
 18396              		.loc 1 7322 32 discriminator 1
 18397 03ac 2C301BE5 		ldr	r3, [fp, #-44]
 18398 03b0 010053E3 		cmp	r3, #1
 18399 03b4 1600001A 		bne	.L1203
 18400              	.L1202:
7323:../../Source/Kernel/rme_kernel.c ****         {
7324:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7325:../../Source/Kernel/rme_kernel.c **** 
7326:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP((rme_ptr_t*)&(Sig_Root->Thd),
 18401              		.loc 1 7326 16
 18402 03b8 10301BE5 		ldr	r3, [fp, #-16]
 18403 03bc 183083E2 		add	r3, r3, #24
 18404 03c0 18201BE5 		ldr	r2, [fp, #-24]
 18405 03c4 0010A0E3 		mov	r1, #0
 18406 03c8 0300A0E1 		mov	r0, r3
 18407 03cc FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18408 03d0 0030A0E1 		mov	r3, r0
 18409              		.loc 1 7326 15 discriminator 1
 18410 03d4 000053E3 		cmp	r3, #0
 18411 03d8 0100001A 		bne	.L1204
7327:../../Source/Kernel/rme_kernel.c ****                              RME_NULL,
7328:../../Source/Kernel/rme_kernel.c ****                              (rme_ptr_t)Thd_Cur)==RME_CASFAIL)
7329:../../Source/Kernel/rme_kernel.c ****             {
7330:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7331:../../Source/Kernel/rme_kernel.c **** 
7332:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18412              		.loc 1 7332 24
 18413 03dc 133EE0E3 		mvn	r3, #304
 18414 03e0 0F0000EA 		b	.L1171
 18415              	.L1204:
7333:../../Source/Kernel/rme_kernel.c ****             }
7334:../../Source/Kernel/rme_kernel.c ****             else
7335:../../Source/Kernel/rme_kernel.c ****             {
7336:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7337:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7338:../../Source/Kernel/rme_kernel.c ****             }
7339:../../Source/Kernel/rme_kernel.c **** 
7340:../../Source/Kernel/rme_kernel.c ****             /* Now we block our current thread. No need to set any return value
7341:../../Source/Kernel/rme_kernel.c ****              * to the register set here, because we do not yet know how many
7342:../../Source/Kernel/rme_kernel.c ****              * signals will be there when the thread unblocks. The unblocking
7343:../../Source/Kernel/rme_kernel.c ****              * does not need an option so we don't keep that; we always treat
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 453


7344:../../Source/Kernel/rme_kernel.c ****              * it as single receive when we unblock anyway. */
7345:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Signal=Sig_Root;
 18416              		.loc 1 7345 34
 18417 03e4 18301BE5 		ldr	r3, [fp, #-24]
 18418 03e8 10201BE5 		ldr	r2, [fp, #-16]
 18419 03ec 282083E5 		str	r2, [r3, #40]
7346:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_BLOCKED;
 18420              		.loc 1 7346 33
 18421 03f0 18301BE5 		ldr	r3, [fp, #-24]
 18422 03f4 0120A0E3 		mov	r2, #1
 18423 03f8 1C2083E5 		str	r2, [r3, #28]
7347:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 18424              		.loc 1 7347 13
 18425 03fc 18001BE5 		ldr	r0, [fp, #-24]
 18426 0400 FEFFFFEB 		bl	_RME_Run_Del
7348:../../Source/Kernel/rme_kernel.c ****             
7349:../../Source/Kernel/rme_kernel.c ****             /* Pick the highest priority thread to run */
7350:../../Source/Kernel/rme_kernel.c ****             _RME_Kern_High(Reg,Local);
 18427              		.loc 1 7350 13
 18428 0404 14101BE5 		ldr	r1, [fp, #-20]
 18429 0408 24001BE5 		ldr	r0, [fp, #-36]
 18430 040c FEFFFFEB 		bl	_RME_Kern_High
 18431 0410 020000EA 		b	.L1205
 18432              	.L1203:
7351:../../Source/Kernel/rme_kernel.c ****         }
7352:../../Source/Kernel/rme_kernel.c ****         else
7353:../../Source/Kernel/rme_kernel.c ****         {
7354:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7355:../../Source/Kernel/rme_kernel.c **** 
7356:../../Source/Kernel/rme_kernel.c ****             /* We have taken nothing but the system call is successful anyway */
7357:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,0);
 18433              		.loc 1 7357 13
 18434 0414 0010A0E3 		mov	r1, #0
 18435 0418 24001BE5 		ldr	r0, [fp, #-36]
 18436 041c FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18437              	.L1205:
7358:../../Source/Kernel/rme_kernel.c ****         }
7359:../../Source/Kernel/rme_kernel.c ****     }
7360:../../Source/Kernel/rme_kernel.c ****     
7361:../../Source/Kernel/rme_kernel.c ****     return 0;
 18438              		.loc 1 7361 12
 18439 0420 0030A0E3 		mov	r3, #0
 18440              	.L1171:
7362:../../Source/Kernel/rme_kernel.c **** }
 18441              		.loc 1 7362 1
 18442 0424 0300A0E1 		mov	r0, r3
 18443 0428 04D04BE2 		sub	sp, fp, #4
 18444              		.cfi_def_cfa 13, 8
 18445              		@ sp needed
 18446 042c 0088BDE8 		pop	{fp, pc}
 18447              	.L1211:
 18448              		.align	2
 18449              	.L1210:
 18450 0430 00000000 		.word	.L1181
 18451              		.cfi_endproc
 18452              	.LFE71:
 18454              		.section	.text._RME_Inv_Crt,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 454


 18455              		.align	2
 18456              		.syntax unified
 18457              		.arm
 18459              	_RME_Inv_Crt:
 18460              	.LFB72:
7363:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Rcv *************************************************/
7364:../../Source/Kernel/rme_kernel.c **** 
7365:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Crt ******************************************************
7366:../../Source/Kernel/rme_kernel.c **** Description : Create an invocation stub.
7367:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7368:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
7369:../../Source/Kernel/rme_kernel.c ****                                   for this process.
7370:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7371:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability slot that you want this newly
7372:../../Source/Kernel/rme_kernel.c ****                                   created invocation capability to be in.
7373:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7374:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
7375:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7376:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
7377:../../Source/Kernel/rme_kernel.c ****                                 invocation port kernel object.
7378:../../Source/Kernel/rme_kernel.c **** Output      : None.
7379:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7380:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7381:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Crt(struct RME_Cap_Cpt* Cpt,
7382:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7383:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
7384:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7385:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
7386:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr)
7387:../../Source/Kernel/rme_kernel.c **** {
 18461              		.loc 1 7387 1
 18462              		.cfi_startproc
 18463              		@ args = 8, pretend = 0, frame = 48
 18464              		@ frame_needed = 1, uses_anonymous_args = 0
 18465 0000 00482DE9 		push	{fp, lr}
 18466              		.cfi_def_cfa_offset 8
 18467              		.cfi_offset 11, -8
 18468              		.cfi_offset 14, -4
 18469 0004 04B08DE2 		add	fp, sp, #4
 18470              		.cfi_def_cfa 11, 4
 18471 0008 30D04DE2 		sub	sp, sp, #48
 18472 000c 28000BE5 		str	r0, [fp, #-40]
 18473 0010 2C100BE5 		str	r1, [fp, #-44]
 18474 0014 30200BE5 		str	r2, [fp, #-48]
 18475 0018 34300BE5 		str	r3, [fp, #-52]
7388:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7389:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
7390:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
7391:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Crt;
7392:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
7393:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7394:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7395:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
7396:../../Source/Kernel/rme_kernel.c ****     
7397:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
7398:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 18476              		.loc 1 7398 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 455


 18477 001c 2C301BE5 		ldr	r3, [fp, #-44]
 18478 0020 803003E2 		and	r3, r3, #128
 18479 0024 000053E3 		cmp	r3, #0
 18480 0028 1C00001A 		bne	.L1213
 18481              		.loc 1 7398 5 is_stmt 0 discriminator 1
 18482 002c 28301BE5 		ldr	r3, [fp, #-40]
 18483 0030 142093E5 		ldr	r2, [r3, #20]
 18484 0034 2C301BE5 		ldr	r3, [fp, #-44]
 18485 0038 030052E1 		cmp	r2, r3
 18486 003c 0100008A 		bhi	.L1214
 18487              		.loc 1 7398 5 discriminator 3
 18488 0040 0230E0E3 		mvn	r3, #2
 18489              		.loc 1 7398 5
 18490 0044 950100EA 		b	.L1215
 18491              	.L1214:
 18492              		.loc 1 7398 5 discriminator 4
 18493 0048 2C301BE5 		ldr	r3, [fp, #-44]
 18494 004c 8322A0E1 		lsl	r2, r3, #5
 18495 0050 28301BE5 		ldr	r3, [fp, #-40]
 18496 0054 0C3093E5 		ldr	r3, [r3, #12]
 18497 0058 033082E0 		add	r3, r2, r3
 18498 005c 08300BE5 		str	r3, [fp, #-8]
 18499 0060 08301BE5 		ldr	r3, [fp, #-8]
 18500 0064 0300A0E1 		mov	r0, r3
 18501 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18502 006c 14000BE5 		str	r0, [fp, #-20]
 18503              		.loc 1 7398 5 discriminator 1
 18504 0070 14301BE5 		ldr	r3, [fp, #-20]
 18505 0074 FF3803E2 		and	r3, r3, #16711680
 18506 0078 020853E3 		cmp	r3, #131072
 18507 007c 0100001A 		bne	.L1216
 18508              		.loc 1 7398 5 discriminator 5
 18509 0080 0830E0E3 		mvn	r3, #8
 18510              		.loc 1 7398 5
 18511 0084 850100EA 		b	.L1215
 18512              	.L1216:
 18513              		.loc 1 7398 5 discriminator 6
 18514 0088 14301BE5 		ldr	r3, [fp, #-20]
 18515 008c 233CA0E1 		lsr	r3, r3, #24
 18516 0090 030053E3 		cmp	r3, #3
 18517 0094 3F00000A 		beq	.L1217
 18518              		.loc 1 7398 5 discriminator 7
 18519 0098 0130E0E3 		mvn	r3, #1
 18520              		.loc 1 7398 5
 18521 009c 7F0100EA 		b	.L1215
 18522              	.L1213:
 18523              		.loc 1 7398 5 discriminator 2
 18524 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 18525 00a4 2324A0E1 		lsr	r2, r3, #8
 18526 00a8 28301BE5 		ldr	r3, [fp, #-40]
 18527 00ac 143093E5 		ldr	r3, [r3, #20]
 18528 00b0 030052E1 		cmp	r2, r3
 18529 00b4 0100003A 		bcc	.L1218
 18530              		.loc 1 7398 5 discriminator 8
 18531 00b8 0230E0E3 		mvn	r3, #2
 18532              		.loc 1 7398 5
 18533 00bc 770100EA 		b	.L1215
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 456


 18534              	.L1218:
 18535              		.loc 1 7398 5 discriminator 9
 18536 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 18537 00c4 2334A0E1 		lsr	r3, r3, #8
 18538 00c8 8322A0E1 		lsl	r2, r3, #5
 18539 00cc 28301BE5 		ldr	r3, [fp, #-40]
 18540 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18541 00d4 033082E0 		add	r3, r2, r3
 18542 00d8 08300BE5 		str	r3, [fp, #-8]
 18543 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18544 00e0 0300A0E1 		mov	r0, r3
 18545 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18546 00e8 14000BE5 		str	r0, [fp, #-20]
 18547              		.loc 1 7398 5 discriminator 1
 18548 00ec 14301BE5 		ldr	r3, [fp, #-20]
 18549 00f0 FF3803E2 		and	r3, r3, #16711680
 18550 00f4 020853E3 		cmp	r3, #131072
 18551 00f8 0100001A 		bne	.L1219
 18552              		.loc 1 7398 5 discriminator 10
 18553 00fc 0830E0E3 		mvn	r3, #8
 18554              		.loc 1 7398 5
 18555 0100 660100EA 		b	.L1215
 18556              	.L1219:
 18557              		.loc 1 7398 5 discriminator 11
 18558 0104 14301BE5 		ldr	r3, [fp, #-20]
 18559 0108 233CA0E1 		lsr	r3, r3, #24
 18560 010c 030053E3 		cmp	r3, #3
 18561 0110 0100000A 		beq	.L1220
 18562              		.loc 1 7398 5 discriminator 12
 18563 0114 0130E0E3 		mvn	r3, #1
 18564              		.loc 1 7398 5
 18565 0118 600100EA 		b	.L1215
 18566              	.L1220:
 18567              		.loc 1 7398 5 discriminator 13
 18568 011c 2C301BE5 		ldr	r3, [fp, #-44]
 18569 0120 7F2003E2 		and	r2, r3, #127
 18570 0124 08301BE5 		ldr	r3, [fp, #-8]
 18571 0128 143093E5 		ldr	r3, [r3, #20]
 18572 012c 030052E1 		cmp	r2, r3
 18573 0130 0100003A 		bcc	.L1221
 18574              		.loc 1 7398 5 discriminator 14
 18575 0134 0230E0E3 		mvn	r3, #2
 18576              		.loc 1 7398 5
 18577 0138 580100EA 		b	.L1215
 18578              	.L1221:
 18579              		.loc 1 7398 5 discriminator 15
 18580 013c 2C301BE5 		ldr	r3, [fp, #-44]
 18581 0140 7F3003E2 		and	r3, r3, #127
 18582 0144 8322A0E1 		lsl	r2, r3, #5
 18583 0148 08301BE5 		ldr	r3, [fp, #-8]
 18584 014c 0C3093E5 		ldr	r3, [r3, #12]
 18585 0150 033082E0 		add	r3, r2, r3
 18586 0154 08300BE5 		str	r3, [fp, #-8]
 18587 0158 08301BE5 		ldr	r3, [fp, #-8]
 18588 015c 0300A0E1 		mov	r0, r3
 18589 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18590 0164 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 457


 18591              		.loc 1 7398 5 discriminator 1
 18592 0168 14301BE5 		ldr	r3, [fp, #-20]
 18593 016c FF3803E2 		and	r3, r3, #16711680
 18594 0170 020853E3 		cmp	r3, #131072
 18595 0174 0100001A 		bne	.L1222
 18596              		.loc 1 7398 5 discriminator 16
 18597 0178 0830E0E3 		mvn	r3, #8
 18598              		.loc 1 7398 5
 18599 017c 470100EA 		b	.L1215
 18600              	.L1222:
 18601              		.loc 1 7398 5 discriminator 17
 18602 0180 14301BE5 		ldr	r3, [fp, #-20]
 18603 0184 233CA0E1 		lsr	r3, r3, #24
 18604 0188 030053E3 		cmp	r3, #3
 18605 018c 0100000A 		beq	.L1217
 18606              		.loc 1 7398 5 discriminator 18
 18607 0190 0130E0E3 		mvn	r3, #1
 18608              		.loc 1 7398 5
 18609 0194 410100EA 		b	.L1215
 18610              	.L1217:
7399:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7400:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 18611              		.loc 1 7400 5 is_stmt 1
 18612 0198 04309BE5 		ldr	r3, [fp, #4]
 18613 019c 803003E2 		and	r3, r3, #128
 18614 01a0 000053E3 		cmp	r3, #0
 18615 01a4 1C00001A 		bne	.L1223
 18616              		.loc 1 7400 5 is_stmt 0 discriminator 1
 18617 01a8 28301BE5 		ldr	r3, [fp, #-40]
 18618 01ac 142093E5 		ldr	r2, [r3, #20]
 18619 01b0 04309BE5 		ldr	r3, [fp, #4]
 18620 01b4 030052E1 		cmp	r2, r3
 18621 01b8 0100008A 		bhi	.L1224
 18622              		.loc 1 7400 5 discriminator 3
 18623 01bc 0230E0E3 		mvn	r3, #2
 18624              		.loc 1 7400 5
 18625 01c0 360100EA 		b	.L1215
 18626              	.L1224:
 18627              		.loc 1 7400 5 discriminator 4
 18628 01c4 04309BE5 		ldr	r3, [fp, #4]
 18629 01c8 8322A0E1 		lsl	r2, r3, #5
 18630 01cc 28301BE5 		ldr	r3, [fp, #-40]
 18631 01d0 0C3093E5 		ldr	r3, [r3, #12]
 18632 01d4 033082E0 		add	r3, r2, r3
 18633 01d8 0C300BE5 		str	r3, [fp, #-12]
 18634 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 18635 01e0 0300A0E1 		mov	r0, r3
 18636 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18637 01e8 14000BE5 		str	r0, [fp, #-20]
 18638              		.loc 1 7400 5 discriminator 1
 18639 01ec 14301BE5 		ldr	r3, [fp, #-20]
 18640 01f0 FF3803E2 		and	r3, r3, #16711680
 18641 01f4 020853E3 		cmp	r3, #131072
 18642 01f8 0100001A 		bne	.L1225
 18643              		.loc 1 7400 5 discriminator 5
 18644 01fc 0830E0E3 		mvn	r3, #8
 18645              		.loc 1 7400 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 458


 18646 0200 260100EA 		b	.L1215
 18647              	.L1225:
 18648              		.loc 1 7400 5 discriminator 6
 18649 0204 14301BE5 		ldr	r3, [fp, #-20]
 18650 0208 233CA0E1 		lsr	r3, r3, #24
 18651 020c 050053E3 		cmp	r3, #5
 18652 0210 3F00000A 		beq	.L1226
 18653              		.loc 1 7400 5 discriminator 7
 18654 0214 0130E0E3 		mvn	r3, #1
 18655              		.loc 1 7400 5
 18656 0218 200100EA 		b	.L1215
 18657              	.L1223:
 18658              		.loc 1 7400 5 discriminator 2
 18659 021c 04309BE5 		ldr	r3, [fp, #4]
 18660 0220 2324A0E1 		lsr	r2, r3, #8
 18661 0224 28301BE5 		ldr	r3, [fp, #-40]
 18662 0228 143093E5 		ldr	r3, [r3, #20]
 18663 022c 030052E1 		cmp	r2, r3
 18664 0230 0100003A 		bcc	.L1227
 18665              		.loc 1 7400 5 discriminator 8
 18666 0234 0230E0E3 		mvn	r3, #2
 18667              		.loc 1 7400 5
 18668 0238 180100EA 		b	.L1215
 18669              	.L1227:
 18670              		.loc 1 7400 5 discriminator 9
 18671 023c 04309BE5 		ldr	r3, [fp, #4]
 18672 0240 2334A0E1 		lsr	r3, r3, #8
 18673 0244 8322A0E1 		lsl	r2, r3, #5
 18674 0248 28301BE5 		ldr	r3, [fp, #-40]
 18675 024c 0C3093E5 		ldr	r3, [r3, #12]
 18676 0250 033082E0 		add	r3, r2, r3
 18677 0254 0C300BE5 		str	r3, [fp, #-12]
 18678 0258 0C301BE5 		ldr	r3, [fp, #-12]
 18679 025c 0300A0E1 		mov	r0, r3
 18680 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18681 0264 14000BE5 		str	r0, [fp, #-20]
 18682              		.loc 1 7400 5 discriminator 1
 18683 0268 14301BE5 		ldr	r3, [fp, #-20]
 18684 026c FF3803E2 		and	r3, r3, #16711680
 18685 0270 020853E3 		cmp	r3, #131072
 18686 0274 0100001A 		bne	.L1228
 18687              		.loc 1 7400 5 discriminator 10
 18688 0278 0830E0E3 		mvn	r3, #8
 18689              		.loc 1 7400 5
 18690 027c 070100EA 		b	.L1215
 18691              	.L1228:
 18692              		.loc 1 7400 5 discriminator 11
 18693 0280 14301BE5 		ldr	r3, [fp, #-20]
 18694 0284 233CA0E1 		lsr	r3, r3, #24
 18695 0288 030053E3 		cmp	r3, #3
 18696 028c 0100000A 		beq	.L1229
 18697              		.loc 1 7400 5 discriminator 12
 18698 0290 0130E0E3 		mvn	r3, #1
 18699              		.loc 1 7400 5
 18700 0294 010100EA 		b	.L1215
 18701              	.L1229:
 18702              		.loc 1 7400 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 459


 18703 0298 04309BE5 		ldr	r3, [fp, #4]
 18704 029c 7F2003E2 		and	r2, r3, #127
 18705 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 18706 02a4 143093E5 		ldr	r3, [r3, #20]
 18707 02a8 030052E1 		cmp	r2, r3
 18708 02ac 0100003A 		bcc	.L1230
 18709              		.loc 1 7400 5 discriminator 14
 18710 02b0 0230E0E3 		mvn	r3, #2
 18711              		.loc 1 7400 5
 18712 02b4 F90000EA 		b	.L1215
 18713              	.L1230:
 18714              		.loc 1 7400 5 discriminator 15
 18715 02b8 04309BE5 		ldr	r3, [fp, #4]
 18716 02bc 7F3003E2 		and	r3, r3, #127
 18717 02c0 8322A0E1 		lsl	r2, r3, #5
 18718 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 18719 02c8 0C3093E5 		ldr	r3, [r3, #12]
 18720 02cc 033082E0 		add	r3, r2, r3
 18721 02d0 0C300BE5 		str	r3, [fp, #-12]
 18722 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 18723 02d8 0300A0E1 		mov	r0, r3
 18724 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18725 02e0 14000BE5 		str	r0, [fp, #-20]
 18726              		.loc 1 7400 5 discriminator 1
 18727 02e4 14301BE5 		ldr	r3, [fp, #-20]
 18728 02e8 FF3803E2 		and	r3, r3, #16711680
 18729 02ec 020853E3 		cmp	r3, #131072
 18730 02f0 0100001A 		bne	.L1231
 18731              		.loc 1 7400 5 discriminator 16
 18732 02f4 0830E0E3 		mvn	r3, #8
 18733              		.loc 1 7400 5
 18734 02f8 E80000EA 		b	.L1215
 18735              	.L1231:
 18736              		.loc 1 7400 5 discriminator 17
 18737 02fc 14301BE5 		ldr	r3, [fp, #-20]
 18738 0300 233CA0E1 		lsr	r3, r3, #24
 18739 0304 050053E3 		cmp	r3, #5
 18740 0308 0100000A 		beq	.L1226
 18741              		.loc 1 7400 5 discriminator 18
 18742 030c 0130E0E3 		mvn	r3, #1
 18743              		.loc 1 7400 5
 18744 0310 E20000EA 		b	.L1215
 18745              	.L1226:
7401:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
7402:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 18746              		.loc 1 7402 5 is_stmt 1
 18747 0314 30301BE5 		ldr	r3, [fp, #-48]
 18748 0318 803003E2 		and	r3, r3, #128
 18749 031c 000053E3 		cmp	r3, #0
 18750 0320 1C00001A 		bne	.L1232
 18751              		.loc 1 7402 5 is_stmt 0 discriminator 1
 18752 0324 28301BE5 		ldr	r3, [fp, #-40]
 18753 0328 142093E5 		ldr	r2, [r3, #20]
 18754 032c 30301BE5 		ldr	r3, [fp, #-48]
 18755 0330 030052E1 		cmp	r2, r3
 18756 0334 0100008A 		bhi	.L1233
 18757              		.loc 1 7402 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 460


 18758 0338 0230E0E3 		mvn	r3, #2
 18759              		.loc 1 7402 5
 18760 033c D70000EA 		b	.L1215
 18761              	.L1233:
 18762              		.loc 1 7402 5 discriminator 4
 18763 0340 30301BE5 		ldr	r3, [fp, #-48]
 18764 0344 8322A0E1 		lsl	r2, r3, #5
 18765 0348 28301BE5 		ldr	r3, [fp, #-40]
 18766 034c 0C3093E5 		ldr	r3, [r3, #12]
 18767 0350 033082E0 		add	r3, r2, r3
 18768 0354 10300BE5 		str	r3, [fp, #-16]
 18769 0358 10301BE5 		ldr	r3, [fp, #-16]
 18770 035c 0300A0E1 		mov	r0, r3
 18771 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18772 0364 14000BE5 		str	r0, [fp, #-20]
 18773              		.loc 1 7402 5 discriminator 1
 18774 0368 14301BE5 		ldr	r3, [fp, #-20]
 18775 036c FF3803E2 		and	r3, r3, #16711680
 18776 0370 020853E3 		cmp	r3, #131072
 18777 0374 0100001A 		bne	.L1234
 18778              		.loc 1 7402 5 discriminator 5
 18779 0378 0830E0E3 		mvn	r3, #8
 18780              		.loc 1 7402 5
 18781 037c C70000EA 		b	.L1215
 18782              	.L1234:
 18783              		.loc 1 7402 5 discriminator 6
 18784 0380 14301BE5 		ldr	r3, [fp, #-20]
 18785 0384 233CA0E1 		lsr	r3, r3, #24
 18786 0388 020053E3 		cmp	r3, #2
 18787 038c 3F00000A 		beq	.L1235
 18788              		.loc 1 7402 5 discriminator 7
 18789 0390 0130E0E3 		mvn	r3, #1
 18790              		.loc 1 7402 5
 18791 0394 C10000EA 		b	.L1215
 18792              	.L1232:
 18793              		.loc 1 7402 5 discriminator 2
 18794 0398 30301BE5 		ldr	r3, [fp, #-48]
 18795 039c 2324A0E1 		lsr	r2, r3, #8
 18796 03a0 28301BE5 		ldr	r3, [fp, #-40]
 18797 03a4 143093E5 		ldr	r3, [r3, #20]
 18798 03a8 030052E1 		cmp	r2, r3
 18799 03ac 0100003A 		bcc	.L1236
 18800              		.loc 1 7402 5 discriminator 8
 18801 03b0 0230E0E3 		mvn	r3, #2
 18802              		.loc 1 7402 5
 18803 03b4 B90000EA 		b	.L1215
 18804              	.L1236:
 18805              		.loc 1 7402 5 discriminator 9
 18806 03b8 30301BE5 		ldr	r3, [fp, #-48]
 18807 03bc 2334A0E1 		lsr	r3, r3, #8
 18808 03c0 8322A0E1 		lsl	r2, r3, #5
 18809 03c4 28301BE5 		ldr	r3, [fp, #-40]
 18810 03c8 0C3093E5 		ldr	r3, [r3, #12]
 18811 03cc 033082E0 		add	r3, r2, r3
 18812 03d0 10300BE5 		str	r3, [fp, #-16]
 18813 03d4 10301BE5 		ldr	r3, [fp, #-16]
 18814 03d8 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 461


 18815 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18816 03e0 14000BE5 		str	r0, [fp, #-20]
 18817              		.loc 1 7402 5 discriminator 1
 18818 03e4 14301BE5 		ldr	r3, [fp, #-20]
 18819 03e8 FF3803E2 		and	r3, r3, #16711680
 18820 03ec 020853E3 		cmp	r3, #131072
 18821 03f0 0100001A 		bne	.L1237
 18822              		.loc 1 7402 5 discriminator 10
 18823 03f4 0830E0E3 		mvn	r3, #8
 18824              		.loc 1 7402 5
 18825 03f8 A80000EA 		b	.L1215
 18826              	.L1237:
 18827              		.loc 1 7402 5 discriminator 11
 18828 03fc 14301BE5 		ldr	r3, [fp, #-20]
 18829 0400 233CA0E1 		lsr	r3, r3, #24
 18830 0404 030053E3 		cmp	r3, #3
 18831 0408 0100000A 		beq	.L1238
 18832              		.loc 1 7402 5 discriminator 12
 18833 040c 0130E0E3 		mvn	r3, #1
 18834              		.loc 1 7402 5
 18835 0410 A20000EA 		b	.L1215
 18836              	.L1238:
 18837              		.loc 1 7402 5 discriminator 13
 18838 0414 30301BE5 		ldr	r3, [fp, #-48]
 18839 0418 7F2003E2 		and	r2, r3, #127
 18840 041c 10301BE5 		ldr	r3, [fp, #-16]
 18841 0420 143093E5 		ldr	r3, [r3, #20]
 18842 0424 030052E1 		cmp	r2, r3
 18843 0428 0100003A 		bcc	.L1239
 18844              		.loc 1 7402 5 discriminator 14
 18845 042c 0230E0E3 		mvn	r3, #2
 18846              		.loc 1 7402 5
 18847 0430 9A0000EA 		b	.L1215
 18848              	.L1239:
 18849              		.loc 1 7402 5 discriminator 15
 18850 0434 30301BE5 		ldr	r3, [fp, #-48]
 18851 0438 7F3003E2 		and	r3, r3, #127
 18852 043c 8322A0E1 		lsl	r2, r3, #5
 18853 0440 10301BE5 		ldr	r3, [fp, #-16]
 18854 0444 0C3093E5 		ldr	r3, [r3, #12]
 18855 0448 033082E0 		add	r3, r2, r3
 18856 044c 10300BE5 		str	r3, [fp, #-16]
 18857 0450 10301BE5 		ldr	r3, [fp, #-16]
 18858 0454 0300A0E1 		mov	r0, r3
 18859 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18860 045c 14000BE5 		str	r0, [fp, #-20]
 18861              		.loc 1 7402 5 discriminator 1
 18862 0460 14301BE5 		ldr	r3, [fp, #-20]
 18863 0464 FF3803E2 		and	r3, r3, #16711680
 18864 0468 020853E3 		cmp	r3, #131072
 18865 046c 0100001A 		bne	.L1240
 18866              		.loc 1 7402 5 discriminator 16
 18867 0470 0830E0E3 		mvn	r3, #8
 18868              		.loc 1 7402 5
 18869 0474 890000EA 		b	.L1215
 18870              	.L1240:
 18871              		.loc 1 7402 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 462


 18872 0478 14301BE5 		ldr	r3, [fp, #-20]
 18873 047c 233CA0E1 		lsr	r3, r3, #24
 18874 0480 020053E3 		cmp	r3, #2
 18875 0484 0100000A 		beq	.L1235
 18876              		.loc 1 7402 5 discriminator 18
 18877 0488 0130E0E3 		mvn	r3, #1
 18878              		.loc 1 7402 5
 18879 048c 830000EA 		b	.L1215
 18880              	.L1235:
7403:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
7404:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
7405:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 18881              		.loc 1 7405 5 is_stmt 1
 18882 0490 08301BE5 		ldr	r3, [fp, #-8]
 18883 0494 083093E5 		ldr	r3, [r3, #8]
 18884 0498 013003E2 		and	r3, r3, #1
 18885 049c 000053E3 		cmp	r3, #0
 18886 04a0 0100001A 		bne	.L1241
 18887              		.loc 1 7405 5 is_stmt 0 discriminator 1
 18888 04a4 0630E0E3 		mvn	r3, #6
 18889              		.loc 1 7405 5
 18890 04a8 7C0000EA 		b	.L1215
 18891              	.L1241:
7406:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_INV);
 18892              		.loc 1 7406 5 is_stmt 1
 18893 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 18894 04b0 083093E5 		ldr	r3, [r3, #8]
 18895 04b4 013003E2 		and	r3, r3, #1
 18896 04b8 000053E3 		cmp	r3, #0
 18897 04bc 0100001A 		bne	.L1242
 18898              		.loc 1 7406 5 is_stmt 0 discriminator 1
 18899 04c0 0630E0E3 		mvn	r3, #6
 18900              		.loc 1 7406 5
 18901 04c4 750000EA 		b	.L1215
 18902              	.L1242:
7407:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
7408:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_INV,Raddr,Vaddr,RME_INV_SIZE);
 18903              		.loc 1 7408 5 is_stmt 1
 18904 04c8 10301BE5 		ldr	r3, [fp, #-16]
 18905 04cc 083093E5 		ldr	r3, [r3, #8]
 18906 04d0 083003E2 		and	r3, r3, #8
 18907 04d4 000053E3 		cmp	r3, #0
 18908 04d8 0100001A 		bne	.L1243
 18909              		.loc 1 7408 5 is_stmt 0 discriminator 1
 18910 04dc 0630E0E3 		mvn	r3, #6
 18911              		.loc 1 7408 5
 18912 04e0 6E0000EA 		b	.L1215
 18913              	.L1243:
 18914              		.loc 1 7408 5 discriminator 2
 18915 04e4 10301BE5 		ldr	r3, [fp, #-16]
 18916 04e8 143093E5 		ldr	r3, [r3, #20]
 18917 04ec 08209BE5 		ldr	r2, [fp, #8]
 18918 04f0 033082E0 		add	r3, r2, r3
 18919 04f4 18300BE5 		str	r3, [fp, #-24]
 18920 04f8 18201BE5 		ldr	r2, [fp, #-24]
 18921 04fc 08309BE5 		ldr	r3, [fp, #8]
 18922 0500 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 463


 18923 0504 0100002A 		bcs	.L1244
 18924              		.loc 1 7408 5 discriminator 3
 18925 0508 0630E0E3 		mvn	r3, #6
 18926              		.loc 1 7408 5
 18927 050c 630000EA 		b	.L1215
 18928              	.L1244:
 18929              		.loc 1 7408 5 discriminator 4
 18930 0510 10301BE5 		ldr	r3, [fp, #-16]
 18931 0514 143093E5 		ldr	r3, [r3, #20]
 18932 0518 18201BE5 		ldr	r2, [fp, #-24]
 18933 051c 030052E1 		cmp	r2, r3
 18934 0520 0100002A 		bcs	.L1245
 18935              		.loc 1 7408 5 discriminator 5
 18936 0524 0630E0E3 		mvn	r3, #6
 18937              		.loc 1 7408 5
 18938 0528 5C0000EA 		b	.L1215
 18939              	.L1245:
 18940              		.loc 1 7408 5 discriminator 6
 18941 052c 18301BE5 		ldr	r3, [fp, #-24]
 18942 0530 250073E3 		cmn	r3, #37
 18943 0534 0100009A 		bls	.L1246
 18944              		.loc 1 7408 5 discriminator 7
 18945 0538 0630E0E3 		mvn	r3, #6
 18946              		.loc 1 7408 5
 18947 053c 570000EA 		b	.L1215
 18948              	.L1246:
 18949              		.loc 1 7408 5 discriminator 8
 18950 0540 10301BE5 		ldr	r3, [fp, #-16]
 18951 0544 182093E5 		ldr	r2, [r3, #24]
 18952 0548 18301BE5 		ldr	r3, [fp, #-24]
 18953 054c 233083E2 		add	r3, r3, #35
 18954 0550 030052E1 		cmp	r2, r3
 18955 0554 0100002A 		bcs	.L1247
 18956              		.loc 1 7408 5 discriminator 9
 18957 0558 0630E0E3 		mvn	r3, #6
 18958              		.loc 1 7408 5
 18959 055c 4F0000EA 		b	.L1215
 18960              	.L1247:
7409:../../Source/Kernel/rme_kernel.c ****     
7410:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7411:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Crt);
 18961              		.loc 1 7411 5 is_stmt 1
 18962 0560 08301BE5 		ldr	r3, [fp, #-8]
 18963 0564 142093E5 		ldr	r2, [r3, #20]
 18964 0568 34301BE5 		ldr	r3, [fp, #-52]
 18965 056c 030052E1 		cmp	r2, r3
 18966 0570 0100008A 		bhi	.L1248
 18967              		.loc 1 7411 5 is_stmt 0 discriminator 1
 18968 0574 0230E0E3 		mvn	r3, #2
 18969              		.loc 1 7411 5
 18970 0578 480000EA 		b	.L1215
 18971              	.L1248:
 18972              		.loc 1 7411 5 discriminator 2
 18973 057c 34301BE5 		ldr	r3, [fp, #-52]
 18974 0580 8322A0E1 		lsl	r2, r3, #5
 18975 0584 08301BE5 		ldr	r3, [fp, #-8]
 18976 0588 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 464


 18977 058c 033082E0 		add	r3, r2, r3
 18978 0590 1C300BE5 		str	r3, [fp, #-28]
7412:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7413:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Inv_Crt);
 18979              		.loc 1 7413 5 is_stmt 1
 18980 0594 1C301BE5 		ldr	r3, [fp, #-28]
 18981 0598 0128A0E3 		mov	r2, #65536
 18982 059c 0010A0E3 		mov	r1, #0
 18983 05a0 0300A0E1 		mov	r0, r3
 18984 05a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18985 05a8 0030A0E1 		mov	r3, r0
 18986              		.loc 1 7413 5 is_stmt 0 discriminator 1
 18987 05ac 000053E3 		cmp	r3, #0
 18988 05b0 0100001A 		bne	.L1249
 18989 05b4 0430E0E3 		mvn	r3, #4
 18990              		.loc 1 7413 5
 18991 05b8 380000EA 		b	.L1215
 18992              	.L1249:
 18993              		.loc 1 7413 5 discriminator 2
 18994 05bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 18995 05c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 18996 05c4 002093E5 		ldr	r2, [r3]
 18997 05c8 1C301BE5 		ldr	r3, [fp, #-28]
 18998 05cc 102083E5 		str	r2, [r3, #16]
7414:../../Source/Kernel/rme_kernel.c ****     
7415:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
7416:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_INV_SIZE)!=0)
 18999              		.loc 1 7416 8 is_stmt 1
 19000 05d0 2410A0E3 		mov	r1, #36
 19001 05d4 18001BE5 		ldr	r0, [fp, #-24]
 19002 05d8 FEFFFFEB 		bl	_RME_Kot_Mark
 19003 05dc 0030A0E1 		mov	r3, r0
 19004              		.loc 1 7416 7 discriminator 1
 19005 05e0 000053E3 		cmp	r3, #0
 19006 05e4 0500000A 		beq	.L1250
7417:../../Source/Kernel/rme_kernel.c ****     {
7418:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7419:../../Source/Kernel/rme_kernel.c **** 
7420:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),0U);
 19007              		.loc 1 7420 9
 19008 05e8 1C301BE5 		ldr	r3, [fp, #-28]
 19009 05ec 0010A0E3 		mov	r1, #0
 19010 05f0 0300A0E1 		mov	r0, r3
 19011 05f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
7421:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 19012              		.loc 1 7421 16
 19013 05f8 0330E0E3 		mvn	r3, #3
 19014 05fc 270000EA 		b	.L1215
 19015              	.L1250:
7422:../../Source/Kernel/rme_kernel.c ****     }
7423:../../Source/Kernel/rme_kernel.c ****     else
7424:../../Source/Kernel/rme_kernel.c ****     {
7425:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7426:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7427:../../Source/Kernel/rme_kernel.c ****     }
7428:../../Source/Kernel/rme_kernel.c ****     
7429:../../Source/Kernel/rme_kernel.c ****     /* Object init */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 465


7430:../../Source/Kernel/rme_kernel.c ****     Invocation=(struct RME_Inv_Struct*)Vaddr;
 19016              		.loc 1 7430 15
 19017 0600 18301BE5 		ldr	r3, [fp, #-24]
 19018 0604 20300BE5 		str	r3, [fp, #-32]
7431:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 19019              		.loc 1 7431 14
 19020 0608 0C301BE5 		ldr	r3, [fp, #-12]
 19021 060c 003093E5 		ldr	r3, [r3]
 19022 0610 7330FFE6 		uxth	r3, r3
 19023 0614 000053E3 		cmp	r3, #0
 19024 0618 0200000A 		beq	.L1251
 19025              		.loc 1 7431 14 is_stmt 0 discriminator 1
 19026 061c 0C301BE5 		ldr	r3, [fp, #-12]
 19027 0620 043093E5 		ldr	r3, [r3, #4]
 19028 0624 000000EA 		b	.L1252
 19029              	.L1251:
 19030              		.loc 1 7431 14 discriminator 2
 19031 0628 0C301BE5 		ldr	r3, [fp, #-12]
 19032              	.L1252:
 19033              		.loc 1 7431 13 is_stmt 1 discriminator 4
 19034 062c 24300BE5 		str	r3, [fp, #-36]
7432:../../Source/Kernel/rme_kernel.c ****     Invocation->Prc=Prc_Root;
 19035              		.loc 1 7432 20
 19036 0630 20301BE5 		ldr	r3, [fp, #-32]
 19037 0634 24201BE5 		ldr	r2, [fp, #-36]
 19038 0638 082083E5 		str	r2, [r3, #8]
7433:../../Source/Kernel/rme_kernel.c ****     Invocation->Thd_Act=RME_NULL;
 19039              		.loc 1 7433 24
 19040 063c 20301BE5 		ldr	r3, [fp, #-32]
 19041 0640 0020A0E3 		mov	r2, #0
 19042 0644 0C2083E5 		str	r2, [r3, #12]
7434:../../Source/Kernel/rme_kernel.c ****     /* By default we do not return on exception */
7435:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=0U;
 19043              		.loc 1 7435 27
 19044 0648 20301BE5 		ldr	r3, [fp, #-32]
 19045 064c 0020A0E3 		mov	r2, #0
 19046 0650 182083E5 		str	r2, [r3, #24]
7436:../../Source/Kernel/rme_kernel.c ****     
7437:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7438:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Root_Ref=0U;
 19047              		.loc 1 7438 27
 19048 0654 1C301BE5 		ldr	r3, [fp, #-28]
 19049 0658 0020A0E3 		mov	r2, #0
 19050 065c 042083E5 		str	r2, [r3, #4]
7439:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Object=Vaddr;
 19051              		.loc 1 7439 25
 19052 0660 1C301BE5 		ldr	r3, [fp, #-28]
 19053 0664 18201BE5 		ldr	r2, [fp, #-24]
 19054 0668 0C2083E5 		str	r2, [r3, #12]
7440:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Flag=RME_INV_FLAG_ALL;
 19055              		.loc 1 7440 23
 19056 066c 1C301BE5 		ldr	r3, [fp, #-28]
 19057 0670 0320A0E3 		mov	r2, #3
 19058 0674 082083E5 		str	r2, [r3, #8]
7441:../../Source/Kernel/rme_kernel.c ****     
7442:../../Source/Kernel/rme_kernel.c ****     /* Reference object */
7443:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref),1U);
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 466


 19059              		.loc 1 7443 5
 19060 0678 24301BE5 		ldr	r3, [fp, #-36]
 19061 067c 043083E2 		add	r3, r3, #4
 19062 0680 0110A0E3 		mov	r1, #1
 19063 0684 0300A0E1 		mov	r0, r3
 19064 0688 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7444:../../Source/Kernel/rme_kernel.c ****     
7445:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7446:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),
 19065              		.loc 1 7446 5
 19066 068c 1C301BE5 		ldr	r3, [fp, #-28]
 19067 0690 0714A0E3 		mov	r1, #117440512
 19068 0694 0300A0E1 		mov	r0, r3
 19069 0698 FEFFFFEB 		bl	__RME_A7A_Write_Release
7447:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_INV,
7448:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7449:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7450:../../Source/Kernel/rme_kernel.c **** 
7451:../../Source/Kernel/rme_kernel.c ****     return 0;
 19070              		.loc 1 7451 12
 19071 069c 0030A0E3 		mov	r3, #0
 19072              	.L1215:
7452:../../Source/Kernel/rme_kernel.c **** }
 19073              		.loc 1 7452 1
 19074 06a0 0300A0E1 		mov	r0, r3
 19075 06a4 04D04BE2 		sub	sp, fp, #4
 19076              		.cfi_def_cfa 13, 8
 19077              		@ sp needed
 19078 06a8 0088BDE8 		pop	{fp, pc}
 19079              		.cfi_endproc
 19080              	.LFE72:
 19082              		.section	.text._RME_Inv_Del,"ax",%progbits
 19083              		.align	2
 19084              		.syntax unified
 19085              		.arm
 19087              	_RME_Inv_Del:
 19088              	.LFB73:
7453:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Crt *************************************************/
7454:../../Source/Kernel/rme_kernel.c **** 
7455:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Del ******************************************************
7456:../../Source/Kernel/rme_kernel.c **** Description : Delete an invocation stub.
7457:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7458:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
7459:../../Source/Kernel/rme_kernel.c ****                                   delete from.
7460:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7461:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7462:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7463:../../Source/Kernel/rme_kernel.c **** Output      : None.
7464:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7465:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7466:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Del(struct RME_Cap_Cpt* Cpt,
7467:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7468:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv)
7469:../../Source/Kernel/rme_kernel.c **** {
 19089              		.loc 1 7469 1
 19090              		.cfi_startproc
 19091              		@ args = 0, pretend = 0, frame = 32
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 467


 19092              		@ frame_needed = 1, uses_anonymous_args = 0
 19093 0000 00482DE9 		push	{fp, lr}
 19094              		.cfi_def_cfa_offset 8
 19095              		.cfi_offset 11, -8
 19096              		.cfi_offset 14, -4
 19097 0004 04B08DE2 		add	fp, sp, #4
 19098              		.cfi_def_cfa 11, 4
 19099 0008 20D04DE2 		sub	sp, sp, #32
 19100 000c 18000BE5 		str	r0, [fp, #-24]
 19101 0010 1C100BE5 		str	r1, [fp, #-28]
 19102 0014 20200BE5 		str	r2, [fp, #-32]
7470:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7471:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Del;
7472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7473:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
7474:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7475:../../Source/Kernel/rme_kernel.c ****     
7476:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7477:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 19103              		.loc 1 7477 5
 19104 0018 1C301BE5 		ldr	r3, [fp, #-28]
 19105 001c 803003E2 		and	r3, r3, #128
 19106 0020 000053E3 		cmp	r3, #0
 19107 0024 1C00001A 		bne	.L1254
 19108              		.loc 1 7477 5 is_stmt 0 discriminator 1
 19109 0028 18301BE5 		ldr	r3, [fp, #-24]
 19110 002c 142093E5 		ldr	r2, [r3, #20]
 19111 0030 1C301BE5 		ldr	r3, [fp, #-28]
 19112 0034 030052E1 		cmp	r2, r3
 19113 0038 0100008A 		bhi	.L1255
 19114              		.loc 1 7477 5 discriminator 3
 19115 003c 0230E0E3 		mvn	r3, #2
 19116              		.loc 1 7477 5
 19117 0040 C40000EA 		b	.L1256
 19118              	.L1255:
 19119              		.loc 1 7477 5 discriminator 4
 19120 0044 1C301BE5 		ldr	r3, [fp, #-28]
 19121 0048 8322A0E1 		lsl	r2, r3, #5
 19122 004c 18301BE5 		ldr	r3, [fp, #-24]
 19123 0050 0C3093E5 		ldr	r3, [r3, #12]
 19124 0054 033082E0 		add	r3, r2, r3
 19125 0058 08300BE5 		str	r3, [fp, #-8]
 19126 005c 08301BE5 		ldr	r3, [fp, #-8]
 19127 0060 0300A0E1 		mov	r0, r3
 19128 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19129 0068 0C000BE5 		str	r0, [fp, #-12]
 19130              		.loc 1 7477 5 discriminator 1
 19131 006c 0C301BE5 		ldr	r3, [fp, #-12]
 19132 0070 FF3803E2 		and	r3, r3, #16711680
 19133 0074 020853E3 		cmp	r3, #131072
 19134 0078 0100001A 		bne	.L1257
 19135              		.loc 1 7477 5 discriminator 5
 19136 007c 0830E0E3 		mvn	r3, #8
 19137              		.loc 1 7477 5
 19138 0080 B40000EA 		b	.L1256
 19139              	.L1257:
 19140              		.loc 1 7477 5 discriminator 6
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 468


 19141 0084 0C301BE5 		ldr	r3, [fp, #-12]
 19142 0088 233CA0E1 		lsr	r3, r3, #24
 19143 008c 030053E3 		cmp	r3, #3
 19144 0090 3F00000A 		beq	.L1258
 19145              		.loc 1 7477 5 discriminator 7
 19146 0094 0130E0E3 		mvn	r3, #1
 19147              		.loc 1 7477 5
 19148 0098 AE0000EA 		b	.L1256
 19149              	.L1254:
 19150              		.loc 1 7477 5 discriminator 2
 19151 009c 1C301BE5 		ldr	r3, [fp, #-28]
 19152 00a0 2324A0E1 		lsr	r2, r3, #8
 19153 00a4 18301BE5 		ldr	r3, [fp, #-24]
 19154 00a8 143093E5 		ldr	r3, [r3, #20]
 19155 00ac 030052E1 		cmp	r2, r3
 19156 00b0 0100003A 		bcc	.L1259
 19157              		.loc 1 7477 5 discriminator 8
 19158 00b4 0230E0E3 		mvn	r3, #2
 19159              		.loc 1 7477 5
 19160 00b8 A60000EA 		b	.L1256
 19161              	.L1259:
 19162              		.loc 1 7477 5 discriminator 9
 19163 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 19164 00c0 2334A0E1 		lsr	r3, r3, #8
 19165 00c4 8322A0E1 		lsl	r2, r3, #5
 19166 00c8 18301BE5 		ldr	r3, [fp, #-24]
 19167 00cc 0C3093E5 		ldr	r3, [r3, #12]
 19168 00d0 033082E0 		add	r3, r2, r3
 19169 00d4 08300BE5 		str	r3, [fp, #-8]
 19170 00d8 08301BE5 		ldr	r3, [fp, #-8]
 19171 00dc 0300A0E1 		mov	r0, r3
 19172 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19173 00e4 0C000BE5 		str	r0, [fp, #-12]
 19174              		.loc 1 7477 5 discriminator 1
 19175 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 19176 00ec FF3803E2 		and	r3, r3, #16711680
 19177 00f0 020853E3 		cmp	r3, #131072
 19178 00f4 0100001A 		bne	.L1260
 19179              		.loc 1 7477 5 discriminator 10
 19180 00f8 0830E0E3 		mvn	r3, #8
 19181              		.loc 1 7477 5
 19182 00fc 950000EA 		b	.L1256
 19183              	.L1260:
 19184              		.loc 1 7477 5 discriminator 11
 19185 0100 0C301BE5 		ldr	r3, [fp, #-12]
 19186 0104 233CA0E1 		lsr	r3, r3, #24
 19187 0108 030053E3 		cmp	r3, #3
 19188 010c 0100000A 		beq	.L1261
 19189              		.loc 1 7477 5 discriminator 12
 19190 0110 0130E0E3 		mvn	r3, #1
 19191              		.loc 1 7477 5
 19192 0114 8F0000EA 		b	.L1256
 19193              	.L1261:
 19194              		.loc 1 7477 5 discriminator 13
 19195 0118 1C301BE5 		ldr	r3, [fp, #-28]
 19196 011c 7F2003E2 		and	r2, r3, #127
 19197 0120 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 469


 19198 0124 143093E5 		ldr	r3, [r3, #20]
 19199 0128 030052E1 		cmp	r2, r3
 19200 012c 0100003A 		bcc	.L1262
 19201              		.loc 1 7477 5 discriminator 14
 19202 0130 0230E0E3 		mvn	r3, #2
 19203              		.loc 1 7477 5
 19204 0134 870000EA 		b	.L1256
 19205              	.L1262:
 19206              		.loc 1 7477 5 discriminator 15
 19207 0138 1C301BE5 		ldr	r3, [fp, #-28]
 19208 013c 7F3003E2 		and	r3, r3, #127
 19209 0140 8322A0E1 		lsl	r2, r3, #5
 19210 0144 08301BE5 		ldr	r3, [fp, #-8]
 19211 0148 0C3093E5 		ldr	r3, [r3, #12]
 19212 014c 033082E0 		add	r3, r2, r3
 19213 0150 08300BE5 		str	r3, [fp, #-8]
 19214 0154 08301BE5 		ldr	r3, [fp, #-8]
 19215 0158 0300A0E1 		mov	r0, r3
 19216 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19217 0160 0C000BE5 		str	r0, [fp, #-12]
 19218              		.loc 1 7477 5 discriminator 1
 19219 0164 0C301BE5 		ldr	r3, [fp, #-12]
 19220 0168 FF3803E2 		and	r3, r3, #16711680
 19221 016c 020853E3 		cmp	r3, #131072
 19222 0170 0100001A 		bne	.L1263
 19223              		.loc 1 7477 5 discriminator 16
 19224 0174 0830E0E3 		mvn	r3, #8
 19225              		.loc 1 7477 5
 19226 0178 760000EA 		b	.L1256
 19227              	.L1263:
 19228              		.loc 1 7477 5 discriminator 17
 19229 017c 0C301BE5 		ldr	r3, [fp, #-12]
 19230 0180 233CA0E1 		lsr	r3, r3, #24
 19231 0184 030053E3 		cmp	r3, #3
 19232 0188 0100000A 		beq	.L1258
 19233              		.loc 1 7477 5 discriminator 18
 19234 018c 0130E0E3 		mvn	r3, #1
 19235              		.loc 1 7477 5
 19236 0190 700000EA 		b	.L1256
 19237              	.L1258:
7478:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
7479:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7480:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 19238              		.loc 1 7480 5 is_stmt 1
 19239 0194 08301BE5 		ldr	r3, [fp, #-8]
 19240 0198 083093E5 		ldr	r3, [r3, #8]
 19241 019c 023003E2 		and	r3, r3, #2
 19242 01a0 000053E3 		cmp	r3, #0
 19243 01a4 0100001A 		bne	.L1264
 19244              		.loc 1 7480 5 is_stmt 0 discriminator 1
 19245 01a8 0630E0E3 		mvn	r3, #6
 19246              		.loc 1 7480 5
 19247 01ac 690000EA 		b	.L1256
 19248              	.L1264:
7481:../../Source/Kernel/rme_kernel.c ****     
7482:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7483:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Del);
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 470


 19249              		.loc 1 7483 5 is_stmt 1
 19250 01b0 08301BE5 		ldr	r3, [fp, #-8]
 19251 01b4 142093E5 		ldr	r2, [r3, #20]
 19252 01b8 20301BE5 		ldr	r3, [fp, #-32]
 19253 01bc 030052E1 		cmp	r2, r3
 19254 01c0 0100008A 		bhi	.L1265
 19255              		.loc 1 7483 5 is_stmt 0 discriminator 1
 19256 01c4 0230E0E3 		mvn	r3, #2
 19257              		.loc 1 7483 5
 19258 01c8 620000EA 		b	.L1256
 19259              	.L1265:
 19260              		.loc 1 7483 5 discriminator 2
 19261 01cc 20301BE5 		ldr	r3, [fp, #-32]
 19262 01d0 8322A0E1 		lsl	r2, r3, #5
 19263 01d4 08301BE5 		ldr	r3, [fp, #-8]
 19264 01d8 0C3093E5 		ldr	r3, [r3, #12]
 19265 01dc 033082E0 		add	r3, r2, r3
 19266 01e0 10300BE5 		str	r3, [fp, #-16]
7484:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
7485:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Inv_Del,Type_Stat,RME_CAP_TYPE_INV);
 19267              		.loc 1 7485 5 is_stmt 1
 19268 01e4 10301BE5 		ldr	r3, [fp, #-16]
 19269 01e8 0300A0E1 		mov	r0, r3
 19270 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19271 01f0 0C000BE5 		str	r0, [fp, #-12]
 19272              		.loc 1 7485 5 is_stmt 0 discriminator 1
 19273 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 19274 01f8 FF3803E2 		and	r3, r3, #16711680
 19275 01fc 020853E3 		cmp	r3, #131072
 19276 0200 0100000A 		beq	.L1266
 19277 0204 0830E0E3 		mvn	r3, #8
 19278              		.loc 1 7485 5
 19279 0208 520000EA 		b	.L1256
 19280              	.L1266:
 19281              		.loc 1 7485 5 discriminator 2
 19282 020c 0C301BE5 		ldr	r3, [fp, #-12]
 19283 0210 233CA0E1 		lsr	r3, r3, #24
 19284 0214 070053E3 		cmp	r3, #7
 19285 0218 0100000A 		beq	.L1267
 19286              		.loc 1 7485 5 discriminator 3
 19287 021c 0130E0E3 		mvn	r3, #1
 19288              		.loc 1 7485 5
 19289 0220 4C0000EA 		b	.L1256
 19290              	.L1267:
 19291              		.loc 1 7485 5 discriminator 6
 19292 0224 10301BE5 		ldr	r3, [fp, #-16]
 19293 0228 043093E5 		ldr	r3, [r3, #4]
 19294 022c 000053E3 		cmp	r3, #0
 19295 0230 0B00000A 		beq	.L1268
 19296              		.loc 1 7485 5 discriminator 7
 19297 0234 0C301BE5 		ldr	r3, [fp, #-12]
 19298 0238 7330FFE6 		uxth	r3, r3
 19299 023c 000053E3 		cmp	r3, #0
 19300 0240 0500001A 		bne	.L1269
 19301              		.loc 1 7485 5 discriminator 9
 19302 0244 10001BE5 		ldr	r0, [fp, #-16]
 19303 0248 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 471


 19304 024c FF38C3E3 		bic	r3, r3, #16711680
 19305 0250 0320A0E1 		mov	r2, r3
 19306 0254 0C101BE5 		ldr	r1, [fp, #-12]
 19307 0258 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19308              	.L1269:
 19309              		.loc 1 7485 5 discriminator 11
 19310 025c 0530E0E3 		mvn	r3, #5
 19311              		.loc 1 7485 5
 19312 0260 3C0000EA 		b	.L1256
 19313              	.L1268:
 19314              		.loc 1 7485 5 discriminator 8
 19315 0264 0C301BE5 		ldr	r3, [fp, #-12]
 19316 0268 7330FFE6 		uxth	r3, r3
 19317 026c 000053E3 		cmp	r3, #0
 19318 0270 0800000A 		beq	.L1270
 19319              		.loc 1 7485 5 discriminator 12
 19320 0274 003000E3 		movw	r3, #:lower16:.LC6
 19321 0278 003040E3 		movt	r3, #:upper16:.LC6
 19322 027c 002000E3 		movw	r2, #:lower16:.LC7
 19323 0280 002040E3 		movt	r2, #:upper16:.LC7
 19324 0284 3D1D01E3 		movw	r1, #7485
 19325 0288 000000E3 		movw	r0, #:lower16:.LC8
 19326 028c 000040E3 		movt	r0, #:upper16:.LC8
 19327 0290 FEFFFFEB 		bl	RME_Log
 19328              	.L1271:
 19329              		.loc 1 7485 5
 19330 0294 FEFFFFEA 		b	.L1271
 19331              	.L1270:
7486:../../Source/Kernel/rme_kernel.c ****     
7487:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation */
7488:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Del,struct RME_Inv_Struct*);
 19332              		.loc 1 7488 16 is_stmt 1
 19333 0298 10301BE5 		ldr	r3, [fp, #-16]
 19334 029c 0C3093E5 		ldr	r3, [r3, #12]
 19335              		.loc 1 7488 15
 19336 02a0 14300BE5 		str	r3, [fp, #-20]
7489:../../Source/Kernel/rme_kernel.c ****     
7490:../../Source/Kernel/rme_kernel.c ****     /* See if the invocation is currently being used. If yes, we cannot delete it */
7491:../../Source/Kernel/rme_kernel.c ****     if(Invocation->Thd_Act!=RME_NULL)
 19337              		.loc 1 7491 18
 19338 02a4 14301BE5 		ldr	r3, [fp, #-20]
 19339 02a8 0C3093E5 		ldr	r3, [r3, #12]
 19340              		.loc 1 7491 7
 19341 02ac 000053E3 		cmp	r3, #0
 19342 02b0 0700000A 		beq	.L1272
7492:../../Source/Kernel/rme_kernel.c ****     {
7493:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7494:../../Source/Kernel/rme_kernel.c **** 
7495:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Inv_Del,Type_Stat);
 19343              		.loc 1 7495 9
 19344 02b4 10001BE5 		ldr	r0, [fp, #-16]
 19345 02b8 0C301BE5 		ldr	r3, [fp, #-12]
 19346 02bc FF38C3E3 		bic	r3, r3, #16711680
 19347 02c0 0320A0E1 		mov	r2, r3
 19348 02c4 0C101BE5 		ldr	r1, [fp, #-12]
 19349 02c8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
7496:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 472


 19350              		.loc 1 7496 16
 19351 02cc 4B3FE0E3 		mvn	r3, #300
 19352 02d0 200000EA 		b	.L1256
 19353              	.L1272:
7497:../../Source/Kernel/rme_kernel.c ****     }
7498:../../Source/Kernel/rme_kernel.c ****     else
7499:../../Source/Kernel/rme_kernel.c ****     {
7500:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7501:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7502:../../Source/Kernel/rme_kernel.c ****     }
7503:../../Source/Kernel/rme_kernel.c ****     
7504:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
7505:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Inv_Del,Type_Stat);
 19354              		.loc 1 7505 5
 19355 02d4 10301BE5 		ldr	r3, [fp, #-16]
 19356 02d8 0020A0E3 		mov	r2, #0
 19357 02dc 0C101BE5 		ldr	r1, [fp, #-12]
 19358 02e0 0300A0E1 		mov	r0, r3
 19359 02e4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19360 02e8 0030A0E1 		mov	r3, r0
 19361              		.loc 1 7505 5 is_stmt 0 discriminator 1
 19362 02ec 000053E3 		cmp	r3, #0
 19363 02f0 0100001A 		bne	.L1273
 19364 02f4 0030E0E3 		mvn	r3, #0
 19365              		.loc 1 7505 5
 19366 02f8 160000EA 		b	.L1256
 19367              	.L1273:
7506:../../Source/Kernel/rme_kernel.c ****     
7507:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
7508:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Invocation->Prc->Head.Root_Ref), -1);
 19368              		.loc 1 7508 5 is_stmt 1
 19369 02fc 14301BE5 		ldr	r3, [fp, #-20]
 19370 0300 083093E5 		ldr	r3, [r3, #8]
 19371 0304 043083E2 		add	r3, r3, #4
 19372 0308 0010E0E3 		mvn	r1, #0
 19373 030c 0300A0E1 		mov	r0, r3
 19374 0310 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7509:../../Source/Kernel/rme_kernel.c ****     
7510:../../Source/Kernel/rme_kernel.c ****     /* Try to clear the area - this must be successful */
7511:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Invocation,RME_INV_SIZE)==0);
 19375              		.loc 1 7511 5
 19376 0314 14301BE5 		ldr	r3, [fp, #-20]
 19377 0318 2410A0E3 		mov	r1, #36
 19378 031c 0300A0E1 		mov	r0, r3
 19379 0320 FEFFFFEB 		bl	_RME_Kot_Erase
 19380 0324 0030A0E1 		mov	r3, r0
 19381              		.loc 1 7511 5 is_stmt 0 discriminator 1
 19382 0328 000053E3 		cmp	r3, #0
 19383 032c 0800000A 		beq	.L1274
 19384 0330 003000E3 		movw	r3, #:lower16:.LC6
 19385 0334 003040E3 		movt	r3, #:upper16:.LC6
 19386 0338 002000E3 		movw	r2, #:lower16:.LC7
 19387 033c 002040E3 		movt	r2, #:upper16:.LC7
 19388 0340 571D01E3 		movw	r1, #7511
 19389 0344 000000E3 		movw	r0, #:lower16:.LC8
 19390 0348 000040E3 		movt	r0, #:upper16:.LC8
 19391 034c FEFFFFEB 		bl	RME_Log
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 473


 19392              	.L1275:
 19393              		.loc 1 7511 5
 19394 0350 FEFFFFEA 		b	.L1275
 19395              	.L1274:
7512:../../Source/Kernel/rme_kernel.c ****     
7513:../../Source/Kernel/rme_kernel.c ****     return 0;
 19396              		.loc 1 7513 12 is_stmt 1
 19397 0354 0030A0E3 		mov	r3, #0
 19398              	.L1256:
7514:../../Source/Kernel/rme_kernel.c **** }
 19399              		.loc 1 7514 1
 19400 0358 0300A0E1 		mov	r0, r3
 19401 035c 04D04BE2 		sub	sp, fp, #4
 19402              		.cfi_def_cfa 13, 8
 19403              		@ sp needed
 19404 0360 0088BDE8 		pop	{fp, pc}
 19405              		.cfi_endproc
 19406              	.LFE73:
 19408              		.section	.text._RME_Inv_Set,"ax",%progbits
 19409              		.align	2
 19410              		.syntax unified
 19411              		.arm
 19413              	_RME_Inv_Set:
 19414              	.LFB74:
7515:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Del *************************************************/
7516:../../Source/Kernel/rme_kernel.c **** 
7517:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Set ******************************************************
7518:../../Source/Kernel/rme_kernel.c **** Description : Set an invocation stub's entry point and stack. The registers will
7519:../../Source/Kernel/rme_kernel.c ****               be initialized with these contents.
7520:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7521:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7522:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7523:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry of the thread.
7524:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
7525:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc_Ret - If there is an exception in this
7526:../../Source/Kernel/rme_kernel.c ****                                      invocation, return immediately, or wait
7527:../../Source/Kernel/rme_kernel.c ****                                      for fault handling?
7528:../../Source/Kernel/rme_kernel.c ****                                      If 1, we return directly on fault.
7529:../../Source/Kernel/rme_kernel.c **** Output      : None.
7530:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7531:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7532:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Set(struct RME_Cap_Cpt* Cpt,
7533:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7534:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry,
7535:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Stack,
7536:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc_Ret)
7537:../../Source/Kernel/rme_kernel.c **** {
 19415              		.loc 1 7537 1
 19416              		.cfi_startproc
 19417              		@ args = 4, pretend = 0, frame = 32
 19418              		@ frame_needed = 1, uses_anonymous_args = 0
 19419 0000 00482DE9 		push	{fp, lr}
 19420              		.cfi_def_cfa_offset 8
 19421              		.cfi_offset 11, -8
 19422              		.cfi_offset 14, -4
 19423 0004 04B08DE2 		add	fp, sp, #4
 19424              		.cfi_def_cfa 11, 4
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 474


 19425 0008 20D04DE2 		sub	sp, sp, #32
 19426 000c 18000BE5 		str	r0, [fp, #-24]
 19427 0010 1C100BE5 		str	r1, [fp, #-28]
 19428 0014 20200BE5 		str	r2, [fp, #-32]
 19429 0018 24300BE5 		str	r3, [fp, #-36]
7538:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7539:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Inv_Struct* Invocation;
7540:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7541:../../Source/Kernel/rme_kernel.c ****     
7542:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7543:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19430              		.loc 1 7543 5
 19431 001c 1C301BE5 		ldr	r3, [fp, #-28]
 19432 0020 803003E2 		and	r3, r3, #128
 19433 0024 000053E3 		cmp	r3, #0
 19434 0028 1C00001A 		bne	.L1277
 19435              		.loc 1 7543 5 is_stmt 0 discriminator 1
 19436 002c 18301BE5 		ldr	r3, [fp, #-24]
 19437 0030 142093E5 		ldr	r2, [r3, #20]
 19438 0034 1C301BE5 		ldr	r3, [fp, #-28]
 19439 0038 030052E1 		cmp	r2, r3
 19440 003c 0100008A 		bhi	.L1278
 19441              		.loc 1 7543 5 discriminator 3
 19442 0040 0230E0E3 		mvn	r3, #2
 19443              		.loc 1 7543 5
 19444 0044 670000EA 		b	.L1279
 19445              	.L1278:
 19446              		.loc 1 7543 5 discriminator 4
 19447 0048 1C301BE5 		ldr	r3, [fp, #-28]
 19448 004c 8322A0E1 		lsl	r2, r3, #5
 19449 0050 18301BE5 		ldr	r3, [fp, #-24]
 19450 0054 0C3093E5 		ldr	r3, [r3, #12]
 19451 0058 033082E0 		add	r3, r2, r3
 19452 005c 08300BE5 		str	r3, [fp, #-8]
 19453 0060 08301BE5 		ldr	r3, [fp, #-8]
 19454 0064 0300A0E1 		mov	r0, r3
 19455 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19456 006c 0C000BE5 		str	r0, [fp, #-12]
 19457              		.loc 1 7543 5 discriminator 1
 19458 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19459 0074 FF3803E2 		and	r3, r3, #16711680
 19460 0078 020853E3 		cmp	r3, #131072
 19461 007c 0100001A 		bne	.L1280
 19462              		.loc 1 7543 5 discriminator 5
 19463 0080 0830E0E3 		mvn	r3, #8
 19464              		.loc 1 7543 5
 19465 0084 570000EA 		b	.L1279
 19466              	.L1280:
 19467              		.loc 1 7543 5 discriminator 6
 19468 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19469 008c 233CA0E1 		lsr	r3, r3, #24
 19470 0090 070053E3 		cmp	r3, #7
 19471 0094 3F00000A 		beq	.L1281
 19472              		.loc 1 7543 5 discriminator 7
 19473 0098 0130E0E3 		mvn	r3, #1
 19474              		.loc 1 7543 5
 19475 009c 510000EA 		b	.L1279
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 475


 19476              	.L1277:
 19477              		.loc 1 7543 5 discriminator 2
 19478 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 19479 00a4 2324A0E1 		lsr	r2, r3, #8
 19480 00a8 18301BE5 		ldr	r3, [fp, #-24]
 19481 00ac 143093E5 		ldr	r3, [r3, #20]
 19482 00b0 030052E1 		cmp	r2, r3
 19483 00b4 0100003A 		bcc	.L1282
 19484              		.loc 1 7543 5 discriminator 8
 19485 00b8 0230E0E3 		mvn	r3, #2
 19486              		.loc 1 7543 5
 19487 00bc 490000EA 		b	.L1279
 19488              	.L1282:
 19489              		.loc 1 7543 5 discriminator 9
 19490 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 19491 00c4 2334A0E1 		lsr	r3, r3, #8
 19492 00c8 8322A0E1 		lsl	r2, r3, #5
 19493 00cc 18301BE5 		ldr	r3, [fp, #-24]
 19494 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19495 00d4 033082E0 		add	r3, r2, r3
 19496 00d8 08300BE5 		str	r3, [fp, #-8]
 19497 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19498 00e0 0300A0E1 		mov	r0, r3
 19499 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19500 00e8 0C000BE5 		str	r0, [fp, #-12]
 19501              		.loc 1 7543 5 discriminator 1
 19502 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19503 00f0 FF3803E2 		and	r3, r3, #16711680
 19504 00f4 020853E3 		cmp	r3, #131072
 19505 00f8 0100001A 		bne	.L1283
 19506              		.loc 1 7543 5 discriminator 10
 19507 00fc 0830E0E3 		mvn	r3, #8
 19508              		.loc 1 7543 5
 19509 0100 380000EA 		b	.L1279
 19510              	.L1283:
 19511              		.loc 1 7543 5 discriminator 11
 19512 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19513 0108 233CA0E1 		lsr	r3, r3, #24
 19514 010c 030053E3 		cmp	r3, #3
 19515 0110 0100000A 		beq	.L1284
 19516              		.loc 1 7543 5 discriminator 12
 19517 0114 0130E0E3 		mvn	r3, #1
 19518              		.loc 1 7543 5
 19519 0118 320000EA 		b	.L1279
 19520              	.L1284:
 19521              		.loc 1 7543 5 discriminator 13
 19522 011c 1C301BE5 		ldr	r3, [fp, #-28]
 19523 0120 7F2003E2 		and	r2, r3, #127
 19524 0124 08301BE5 		ldr	r3, [fp, #-8]
 19525 0128 143093E5 		ldr	r3, [r3, #20]
 19526 012c 030052E1 		cmp	r2, r3
 19527 0130 0100003A 		bcc	.L1285
 19528              		.loc 1 7543 5 discriminator 14
 19529 0134 0230E0E3 		mvn	r3, #2
 19530              		.loc 1 7543 5
 19531 0138 2A0000EA 		b	.L1279
 19532              	.L1285:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 476


 19533              		.loc 1 7543 5 discriminator 15
 19534 013c 1C301BE5 		ldr	r3, [fp, #-28]
 19535 0140 7F3003E2 		and	r3, r3, #127
 19536 0144 8322A0E1 		lsl	r2, r3, #5
 19537 0148 08301BE5 		ldr	r3, [fp, #-8]
 19538 014c 0C3093E5 		ldr	r3, [r3, #12]
 19539 0150 033082E0 		add	r3, r2, r3
 19540 0154 08300BE5 		str	r3, [fp, #-8]
 19541 0158 08301BE5 		ldr	r3, [fp, #-8]
 19542 015c 0300A0E1 		mov	r0, r3
 19543 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19544 0164 0C000BE5 		str	r0, [fp, #-12]
 19545              		.loc 1 7543 5 discriminator 1
 19546 0168 0C301BE5 		ldr	r3, [fp, #-12]
 19547 016c FF3803E2 		and	r3, r3, #16711680
 19548 0170 020853E3 		cmp	r3, #131072
 19549 0174 0100001A 		bne	.L1286
 19550              		.loc 1 7543 5 discriminator 16
 19551 0178 0830E0E3 		mvn	r3, #8
 19552              		.loc 1 7543 5
 19553 017c 190000EA 		b	.L1279
 19554              	.L1286:
 19555              		.loc 1 7543 5 discriminator 17
 19556 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19557 0184 233CA0E1 		lsr	r3, r3, #24
 19558 0188 070053E3 		cmp	r3, #7
 19559 018c 0100000A 		beq	.L1281
 19560              		.loc 1 7543 5 discriminator 18
 19561 0190 0130E0E3 		mvn	r3, #1
 19562              		.loc 1 7543 5
 19563 0194 130000EA 		b	.L1279
 19564              	.L1281:
7544:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7545:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7546:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_SET);
 19565              		.loc 1 7546 5 is_stmt 1
 19566 0198 08301BE5 		ldr	r3, [fp, #-8]
 19567 019c 083093E5 		ldr	r3, [r3, #8]
 19568 01a0 013003E2 		and	r3, r3, #1
 19569 01a4 000053E3 		cmp	r3, #0
 19570 01a8 0100001A 		bne	.L1287
 19571              		.loc 1 7546 5 is_stmt 0 discriminator 1
 19572 01ac 0630E0E3 		mvn	r3, #6
 19573              		.loc 1 7546 5
 19574 01b0 0C0000EA 		b	.L1279
 19575              	.L1287:
7547:../../Source/Kernel/rme_kernel.c ****     
7548:../../Source/Kernel/rme_kernel.c ****     /* Commit the change - we do not care if the invocation is in use, it is
7549:../../Source/Kernel/rme_kernel.c ****      * the user's responsibility to guarantee the integrity of applications */
7550:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19576              		.loc 1 7550 16 is_stmt 1
 19577 01b4 08301BE5 		ldr	r3, [fp, #-8]
 19578 01b8 0C3093E5 		ldr	r3, [r3, #12]
 19579              		.loc 1 7550 15
 19580 01bc 10300BE5 		str	r3, [fp, #-16]
7551:../../Source/Kernel/rme_kernel.c ****     Invocation->Entry=Entry;
 19581              		.loc 1 7551 22
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 477


 19582 01c0 10301BE5 		ldr	r3, [fp, #-16]
 19583 01c4 20201BE5 		ldr	r2, [fp, #-32]
 19584 01c8 102083E5 		str	r2, [r3, #16]
7552:../../Source/Kernel/rme_kernel.c ****     Invocation->Stack=Stack;
 19585              		.loc 1 7552 22
 19586 01cc 10301BE5 		ldr	r3, [fp, #-16]
 19587 01d0 24201BE5 		ldr	r2, [fp, #-36]
 19588 01d4 142083E5 		str	r2, [r3, #20]
7553:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=Is_Exc_Ret;
 19589              		.loc 1 7553 27
 19590 01d8 10301BE5 		ldr	r3, [fp, #-16]
 19591 01dc 04209BE5 		ldr	r2, [fp, #4]
 19592 01e0 182083E5 		str	r2, [r3, #24]
7554:../../Source/Kernel/rme_kernel.c ****     
7555:../../Source/Kernel/rme_kernel.c ****     return 0;
 19593              		.loc 1 7555 12
 19594 01e4 0030A0E3 		mov	r3, #0
 19595              	.L1279:
7556:../../Source/Kernel/rme_kernel.c **** }
 19596              		.loc 1 7556 1
 19597 01e8 0300A0E1 		mov	r0, r3
 19598 01ec 04D04BE2 		sub	sp, fp, #4
 19599              		.cfi_def_cfa 13, 8
 19600              		@ sp needed
 19601 01f0 0088BDE8 		pop	{fp, pc}
 19602              		.cfi_endproc
 19603              	.LFE74:
 19605              		.section	.text._RME_Inv_Act,"ax",%progbits
 19606              		.align	2
 19607              		.syntax unified
 19608              		.arm
 19610              	_RME_Inv_Act:
 19611              	.LFB75:
7557:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Set *************************************************/
7558:../../Source/Kernel/rme_kernel.c **** 
7559:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Act ******************************************************
7560:../../Source/Kernel/rme_kernel.c **** Description : Call the invocation stub. One parameter is guaranteed; however, 
7561:../../Source/Kernel/rme_kernel.c ****               some platforms may provide more than that.
7562:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7563:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7564:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The invocation stub.
7565:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7566:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter for the call.
7567:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7568:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7569:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Act(struct RME_Cap_Cpt* Cpt, 
7570:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7571:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7572:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param)
7573:../../Source/Kernel/rme_kernel.c **** {
 19612              		.loc 1 7573 1
 19613              		.cfi_startproc
 19614              		@ args = 0, pretend = 0, frame = 40
 19615              		@ frame_needed = 1, uses_anonymous_args = 0
 19616 0000 00482DE9 		push	{fp, lr}
 19617              		.cfi_def_cfa_offset 8
 19618              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 478


 19619              		.cfi_offset 14, -4
 19620 0004 04B08DE2 		add	fp, sp, #4
 19621              		.cfi_def_cfa 11, 4
 19622 0008 30D04DE2 		sub	sp, sp, #48
 19623 000c 20000BE5 		str	r0, [fp, #-32]
 19624 0010 24100BE5 		str	r1, [fp, #-36]
 19625 0014 28200BE5 		str	r2, [fp, #-40]
 19626 0018 2C300BE5 		str	r3, [fp, #-44]
7574:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7575:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7576:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7577:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Act;
7578:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7579:../../Source/Kernel/rme_kernel.c ****     
7580:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
7581:../../Source/Kernel/rme_kernel.c ****     /* Check if the current invocation stack has reached its limit */
7582:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
7583:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Ctx.Invstk_Depth>=RME_INV_DEPTH_MAX)
7584:../../Source/Kernel/rme_kernel.c ****     {
7585:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7586:../../Source/Kernel/rme_kernel.c **** 
7587:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
7588:../../Source/Kernel/rme_kernel.c ****     }
7589:../../Source/Kernel/rme_kernel.c ****     else
7590:../../Source/Kernel/rme_kernel.c ****     {
7591:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7592:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7593:../../Source/Kernel/rme_kernel.c ****     }
7594:../../Source/Kernel/rme_kernel.c **** #endif
7595:../../Source/Kernel/rme_kernel.c **** 
7596:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7597:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19627              		.loc 1 7597 5
 19628 001c 28301BE5 		ldr	r3, [fp, #-40]
 19629 0020 803003E2 		and	r3, r3, #128
 19630 0024 000053E3 		cmp	r3, #0
 19631 0028 1C00001A 		bne	.L1289
 19632              		.loc 1 7597 5 is_stmt 0 discriminator 1
 19633 002c 20301BE5 		ldr	r3, [fp, #-32]
 19634 0030 142093E5 		ldr	r2, [r3, #20]
 19635 0034 28301BE5 		ldr	r3, [fp, #-40]
 19636 0038 030052E1 		cmp	r2, r3
 19637 003c 0100008A 		bhi	.L1290
 19638              		.loc 1 7597 5 discriminator 3
 19639 0040 0230E0E3 		mvn	r3, #2
 19640              		.loc 1 7597 5
 19641 0044 A60000EA 		b	.L1291
 19642              	.L1290:
 19643              		.loc 1 7597 5 discriminator 4
 19644 0048 28301BE5 		ldr	r3, [fp, #-40]
 19645 004c 8322A0E1 		lsl	r2, r3, #5
 19646 0050 20301BE5 		ldr	r3, [fp, #-32]
 19647 0054 0C3093E5 		ldr	r3, [r3, #12]
 19648 0058 033082E0 		add	r3, r2, r3
 19649 005c 08300BE5 		str	r3, [fp, #-8]
 19650 0060 08301BE5 		ldr	r3, [fp, #-8]
 19651 0064 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 479


 19652 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19653 006c 0C000BE5 		str	r0, [fp, #-12]
 19654              		.loc 1 7597 5 discriminator 1
 19655 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19656 0074 FF3803E2 		and	r3, r3, #16711680
 19657 0078 020853E3 		cmp	r3, #131072
 19658 007c 0100001A 		bne	.L1292
 19659              		.loc 1 7597 5 discriminator 5
 19660 0080 0830E0E3 		mvn	r3, #8
 19661              		.loc 1 7597 5
 19662 0084 960000EA 		b	.L1291
 19663              	.L1292:
 19664              		.loc 1 7597 5 discriminator 6
 19665 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19666 008c 233CA0E1 		lsr	r3, r3, #24
 19667 0090 070053E3 		cmp	r3, #7
 19668 0094 3F00000A 		beq	.L1293
 19669              		.loc 1 7597 5 discriminator 7
 19670 0098 0130E0E3 		mvn	r3, #1
 19671              		.loc 1 7597 5
 19672 009c 900000EA 		b	.L1291
 19673              	.L1289:
 19674              		.loc 1 7597 5 discriminator 2
 19675 00a0 28301BE5 		ldr	r3, [fp, #-40]
 19676 00a4 2324A0E1 		lsr	r2, r3, #8
 19677 00a8 20301BE5 		ldr	r3, [fp, #-32]
 19678 00ac 143093E5 		ldr	r3, [r3, #20]
 19679 00b0 030052E1 		cmp	r2, r3
 19680 00b4 0100003A 		bcc	.L1294
 19681              		.loc 1 7597 5 discriminator 8
 19682 00b8 0230E0E3 		mvn	r3, #2
 19683              		.loc 1 7597 5
 19684 00bc 880000EA 		b	.L1291
 19685              	.L1294:
 19686              		.loc 1 7597 5 discriminator 9
 19687 00c0 28301BE5 		ldr	r3, [fp, #-40]
 19688 00c4 2334A0E1 		lsr	r3, r3, #8
 19689 00c8 8322A0E1 		lsl	r2, r3, #5
 19690 00cc 20301BE5 		ldr	r3, [fp, #-32]
 19691 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19692 00d4 033082E0 		add	r3, r2, r3
 19693 00d8 08300BE5 		str	r3, [fp, #-8]
 19694 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19695 00e0 0300A0E1 		mov	r0, r3
 19696 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19697 00e8 0C000BE5 		str	r0, [fp, #-12]
 19698              		.loc 1 7597 5 discriminator 1
 19699 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19700 00f0 FF3803E2 		and	r3, r3, #16711680
 19701 00f4 020853E3 		cmp	r3, #131072
 19702 00f8 0100001A 		bne	.L1295
 19703              		.loc 1 7597 5 discriminator 10
 19704 00fc 0830E0E3 		mvn	r3, #8
 19705              		.loc 1 7597 5
 19706 0100 770000EA 		b	.L1291
 19707              	.L1295:
 19708              		.loc 1 7597 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 480


 19709 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19710 0108 233CA0E1 		lsr	r3, r3, #24
 19711 010c 030053E3 		cmp	r3, #3
 19712 0110 0100000A 		beq	.L1296
 19713              		.loc 1 7597 5 discriminator 12
 19714 0114 0130E0E3 		mvn	r3, #1
 19715              		.loc 1 7597 5
 19716 0118 710000EA 		b	.L1291
 19717              	.L1296:
 19718              		.loc 1 7597 5 discriminator 13
 19719 011c 28301BE5 		ldr	r3, [fp, #-40]
 19720 0120 7F2003E2 		and	r2, r3, #127
 19721 0124 08301BE5 		ldr	r3, [fp, #-8]
 19722 0128 143093E5 		ldr	r3, [r3, #20]
 19723 012c 030052E1 		cmp	r2, r3
 19724 0130 0100003A 		bcc	.L1297
 19725              		.loc 1 7597 5 discriminator 14
 19726 0134 0230E0E3 		mvn	r3, #2
 19727              		.loc 1 7597 5
 19728 0138 690000EA 		b	.L1291
 19729              	.L1297:
 19730              		.loc 1 7597 5 discriminator 15
 19731 013c 28301BE5 		ldr	r3, [fp, #-40]
 19732 0140 7F3003E2 		and	r3, r3, #127
 19733 0144 8322A0E1 		lsl	r2, r3, #5
 19734 0148 08301BE5 		ldr	r3, [fp, #-8]
 19735 014c 0C3093E5 		ldr	r3, [r3, #12]
 19736 0150 033082E0 		add	r3, r2, r3
 19737 0154 08300BE5 		str	r3, [fp, #-8]
 19738 0158 08301BE5 		ldr	r3, [fp, #-8]
 19739 015c 0300A0E1 		mov	r0, r3
 19740 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19741 0164 0C000BE5 		str	r0, [fp, #-12]
 19742              		.loc 1 7597 5 discriminator 1
 19743 0168 0C301BE5 		ldr	r3, [fp, #-12]
 19744 016c FF3803E2 		and	r3, r3, #16711680
 19745 0170 020853E3 		cmp	r3, #131072
 19746 0174 0100001A 		bne	.L1298
 19747              		.loc 1 7597 5 discriminator 16
 19748 0178 0830E0E3 		mvn	r3, #8
 19749              		.loc 1 7597 5
 19750 017c 580000EA 		b	.L1291
 19751              	.L1298:
 19752              		.loc 1 7597 5 discriminator 17
 19753 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19754 0184 233CA0E1 		lsr	r3, r3, #24
 19755 0188 070053E3 		cmp	r3, #7
 19756 018c 0100000A 		beq	.L1293
 19757              		.loc 1 7597 5 discriminator 18
 19758 0190 0130E0E3 		mvn	r3, #1
 19759              		.loc 1 7597 5
 19760 0194 520000EA 		b	.L1291
 19761              	.L1293:
7598:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7599:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7600:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_ACT);
 19762              		.loc 1 7600 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 481


 19763 0198 08301BE5 		ldr	r3, [fp, #-8]
 19764 019c 083093E5 		ldr	r3, [r3, #8]
 19765 01a0 023003E2 		and	r3, r3, #2
 19766 01a4 000053E3 		cmp	r3, #0
 19767 01a8 0100001A 		bne	.L1299
 19768              		.loc 1 7600 5 is_stmt 0 discriminator 1
 19769 01ac 0630E0E3 		mvn	r3, #6
 19770              		.loc 1 7600 5
 19771 01b0 4B0000EA 		b	.L1291
 19772              	.L1299:
7601:../../Source/Kernel/rme_kernel.c **** 
7602:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation struct */
7603:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19773              		.loc 1 7603 16 is_stmt 1
 19774 01b4 08301BE5 		ldr	r3, [fp, #-8]
 19775 01b8 0C3093E5 		ldr	r3, [r3, #12]
 19776              		.loc 1 7603 15
 19777 01bc 10300BE5 		str	r3, [fp, #-16]
7604:../../Source/Kernel/rme_kernel.c ****     /* Check if this invocation port is already active */
7605:../../Source/Kernel/rme_kernel.c ****     Thd_Act=Invocation->Thd_Act;
 19778              		.loc 1 7605 12
 19779 01c0 10301BE5 		ldr	r3, [fp, #-16]
 19780 01c4 0C3093E5 		ldr	r3, [r3, #12]
 19781 01c8 14300BE5 		str	r3, [fp, #-20]
7606:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Thd_Act!=0U))
 19782              		.loc 1 7606 7
 19783 01cc 14301BE5 		ldr	r3, [fp, #-20]
 19784 01d0 000053E3 		cmp	r3, #0
 19785 01d4 0100000A 		beq	.L1300
7607:../../Source/Kernel/rme_kernel.c ****     {
7608:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7609:../../Source/Kernel/rme_kernel.c **** 
7610:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19786              		.loc 1 7610 16
 19787 01d8 4B3FE0E3 		mvn	r3, #300
 19788 01dc 400000EA 		b	.L1291
 19789              	.L1300:
7611:../../Source/Kernel/rme_kernel.c ****     }
7612:../../Source/Kernel/rme_kernel.c ****     else
7613:../../Source/Kernel/rme_kernel.c ****     {
7614:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7615:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7616:../../Source/Kernel/rme_kernel.c ****     }
7617:../../Source/Kernel/rme_kernel.c **** 
7618:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX==0U)
7619:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 19790              		.loc 1 7619 12
 19791 01e0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 19792 01e4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 19793 01e8 043093E5 		ldr	r3, [r3, #4]
 19794 01ec 18300BE5 		str	r3, [fp, #-24]
7620:../../Source/Kernel/rme_kernel.c **** #endif
7621:../../Source/Kernel/rme_kernel.c ****     
7622:../../Source/Kernel/rme_kernel.c ****     /* Try to do CAS and activate this port */
7623:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_COMP_SWAP((volatile rme_ptr_t*)&(Invocation->Thd_Act),
 19795              		.loc 1 7623 8
 19796 01f0 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 482


 19797 01f4 0C3083E2 		add	r3, r3, #12
 19798 01f8 14101BE5 		ldr	r1, [fp, #-20]
 19799 01fc 18201BE5 		ldr	r2, [fp, #-24]
 19800 0200 0300A0E1 		mov	r0, r3
 19801 0204 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19802 0208 0030A0E1 		mov	r3, r0
 19803              		.loc 1 7623 7 discriminator 1
 19804 020c 000053E3 		cmp	r3, #0
 19805 0210 0100001A 		bne	.L1301
7624:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Act,
7625:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Cur)==RME_CASFAIL))
7626:../../Source/Kernel/rme_kernel.c ****     {
7627:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7628:../../Source/Kernel/rme_kernel.c **** 
7629:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19806              		.loc 1 7629 16
 19807 0214 4B3FE0E3 		mvn	r3, #300
 19808 0218 310000EA 		b	.L1291
 19809              	.L1301:
7630:../../Source/Kernel/rme_kernel.c ****     }
7631:../../Source/Kernel/rme_kernel.c ****     else
7632:../../Source/Kernel/rme_kernel.c ****     {
7633:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7634:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7635:../../Source/Kernel/rme_kernel.c ****     }
7636:../../Source/Kernel/rme_kernel.c **** 
7637:../../Source/Kernel/rme_kernel.c ****     /* Save whatever is needed to return to the point - normally only SP and IP needed
7638:../../Source/Kernel/rme_kernel.c ****      * because all other registers, including the coprocessor registers, are saved at
7639:../../Source/Kernel/rme_kernel.c ****      * user-level. We do not set the return value because it will be set by Inv_Ret.
7640:../../Source/Kernel/rme_kernel.c ****      * The coprocessor state will be consistent across the call */
7641:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Save(&(Invocation->Ret),Reg);
 19810              		.loc 1 7641 5
 19811 021c 10301BE5 		ldr	r3, [fp, #-16]
 19812 0220 1C3083E2 		add	r3, r3, #28
 19813 0224 24101BE5 		ldr	r1, [fp, #-36]
 19814 0228 0300A0E1 		mov	r0, r3
 19815 022c FEFFFFEB 		bl	__RME_Inv_Reg_Save
7642:../../Source/Kernel/rme_kernel.c ****     /* Push this into the stack: insert after the thread list header */
7643:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Invocation->Head),
 19816              		.loc 1 7643 5
 19817 0230 10001BE5 		ldr	r0, [fp, #-16]
 19818 0234 18301BE5 		ldr	r3, [fp, #-24]
 19819 0238 4C1083E2 		add	r1, r3, #76
 19820 023c 18301BE5 		ldr	r3, [fp, #-24]
 19821 0240 4C3093E5 		ldr	r3, [r3, #76]
 19822 0244 0320A0E1 		mov	r2, r3
 19823 0248 FEFFFFEB 		bl	_RME_List_Ins
7644:../../Source/Kernel/rme_kernel.c ****                   &(Thd_Cur->Ctx.Invstk),
7645:../../Source/Kernel/rme_kernel.c ****                   Thd_Cur->Ctx.Invstk.Next);
7646:../../Source/Kernel/rme_kernel.c ****     /* Increase invocation depth - no atomic operation needed */
7647:../../Source/Kernel/rme_kernel.c ****     Thd_Cur->Ctx.Invstk_Depth++;
 19824              		.loc 1 7647 17
 19825 024c 18301BE5 		ldr	r3, [fp, #-24]
 19826 0250 543093E5 		ldr	r3, [r3, #84]
 19827              		.loc 1 7647 30
 19828 0254 012083E2 		add	r2, r3, #1
 19829 0258 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 483


 19830 025c 542083E5 		str	r2, [r3, #84]
7648:../../Source/Kernel/rme_kernel.c ****     /* Setup the register contents, and do the invocation */
7649:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Init(RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
 19831              		.loc 1 7649 24
 19832 0260 18301BE5 		ldr	r3, [fp, #-24]
 19833 0264 443093E5 		ldr	r3, [r3, #68]
 19834              		.loc 1 7649 5
 19835 0268 0201C3E3 		bic	r0, r3, #-2147483648
 19836 026c 10301BE5 		ldr	r3, [fp, #-16]
 19837 0270 101093E5 		ldr	r1, [r3, #16]
 19838 0274 10301BE5 		ldr	r3, [fp, #-16]
 19839 0278 142093E5 		ldr	r2, [r3, #20]
 19840 027c 24301BE5 		ldr	r3, [fp, #-36]
 19841 0280 00308DE5 		str	r3, [sp]
 19842 0284 2C301BE5 		ldr	r3, [fp, #-44]
 19843 0288 FEFFFFEB 		bl	__RME_Thd_Reg_Init
7650:../../Source/Kernel/rme_kernel.c ****                        Invocation->Entry,
7651:../../Source/Kernel/rme_kernel.c ****                        Invocation->Stack,
7652:../../Source/Kernel/rme_kernel.c ****                        Param,Reg);
7653:../../Source/Kernel/rme_kernel.c ****     
7654:../../Source/Kernel/rme_kernel.c ****     
7655:../../Source/Kernel/rme_kernel.c ****     /* We are assuming that we are always invoking into a new process (why use synchronous
7656:../../Source/Kernel/rme_kernel.c ****      * invocation if you don't do so?). So we always switch page tables regardless. */
7657:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7658:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 19844              		.loc 1 7658 5
 19845 028c 10301BE5 		ldr	r3, [fp, #-16]
 19846 0290 083093E5 		ldr	r3, [r3, #8]
 19847 0294 183093E5 		ldr	r3, [r3, #24]
 19848 0298 003093E5 		ldr	r3, [r3]
 19849 029c 7330FFE6 		uxth	r3, r3
 19850 02a0 000053E3 		cmp	r3, #0
 19851 02a4 0800000A 		beq	.L1302
 19852              		.loc 1 7658 5 is_stmt 0 discriminator 1
 19853 02a8 003000E3 		movw	r3, #:lower16:.LC6
 19854 02ac 003040E3 		movt	r3, #:upper16:.LC6
 19855 02b0 002000E3 		movw	r2, #:lower16:.LC7
 19856 02b4 002040E3 		movt	r2, #:upper16:.LC7
 19857 02b8 EA1D01E3 		movw	r1, #7658
 19858 02bc 000000E3 		movw	r0, #:lower16:.LC8
 19859 02c0 000040E3 		movt	r0, #:upper16:.LC8
 19860 02c4 FEFFFFEB 		bl	RME_Log
 19861              	.L1303:
 19862              		.loc 1 7658 5
 19863 02c8 FEFFFFEA 		b	.L1303
 19864              	.L1302:
7659:../../Source/Kernel/rme_kernel.c **** #endif
7660:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Set(Invocation->Prc->Pgt);
 19865              		.loc 1 7660 29 is_stmt 1
 19866 02cc 10301BE5 		ldr	r3, [fp, #-16]
 19867 02d0 083093E5 		ldr	r3, [r3, #8]
 19868              		.loc 1 7660 5
 19869 02d4 183093E5 		ldr	r3, [r3, #24]
 19870 02d8 0300A0E1 		mov	r0, r3
 19871 02dc FEFFFFEB 		bl	__RME_Pgt_Set
7661:../../Source/Kernel/rme_kernel.c ****     
7662:../../Source/Kernel/rme_kernel.c ****     return 0;
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 484


 19872              		.loc 1 7662 12
 19873 02e0 0030A0E3 		mov	r3, #0
 19874              	.L1291:
7663:../../Source/Kernel/rme_kernel.c **** }
 19875              		.loc 1 7663 1
 19876 02e4 0300A0E1 		mov	r0, r3
 19877 02e8 04D04BE2 		sub	sp, fp, #4
 19878              		.cfi_def_cfa 13, 8
 19879              		@ sp needed
 19880 02ec 0088BDE8 		pop	{fp, pc}
 19881              		.cfi_endproc
 19882              	.LFE75:
 19884              		.section	.text._RME_Inv_Ret,"ax",%progbits
 19885              		.align	2
 19886              		.syntax unified
 19887              		.arm
 19889              	_RME_Inv_Ret:
 19890              	.LFB76:
7664:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Act *************************************************/
7665:../../Source/Kernel/rme_kernel.c **** 
7666:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Ret ******************************************************
7667:../../Source/Kernel/rme_kernel.c **** Description : Return from the invocation function, and set the return value to
7668:../../Source/Kernel/rme_kernel.c ****               the old register set. This function does not need a capability
7669:../../Source/Kernel/rme_kernel.c ****               table to work.
7670:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
7671:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Retval - The return value of this synchronous invocation.
7672:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc - Are we attempting a return from exception?
7673:../../Source/Kernel/rme_kernel.c **** Output      : None.
7674:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7675:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7676:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Ret(struct RME_Reg_Struct* Reg,
7677:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Retval,
7678:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc)
7679:../../Source/Kernel/rme_kernel.c **** {
 19891              		.loc 1 7679 1
 19892              		.cfi_startproc
 19893              		@ args = 0, pretend = 0, frame = 24
 19894              		@ frame_needed = 1, uses_anonymous_args = 0
 19895 0000 00482DE9 		push	{fp, lr}
 19896              		.cfi_def_cfa_offset 8
 19897              		.cfi_offset 11, -8
 19898              		.cfi_offset 14, -4
 19899 0004 04B08DE2 		add	fp, sp, #4
 19900              		.cfi_def_cfa 11, 4
 19901 0008 18D04DE2 		sub	sp, sp, #24
 19902 000c 10000BE5 		str	r0, [fp, #-16]
 19903 0010 14100BE5 		str	r1, [fp, #-20]
 19904 0014 18200BE5 		str	r2, [fp, #-24]
7680:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
7681:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7682:../../Source/Kernel/rme_kernel.c **** 
7683:../../Source/Kernel/rme_kernel.c ****     /* See if we can return; If we can, get the structure */
7684:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CPU_LOCAL()->Thd_Cur;
 19905              		.loc 1 7684 11
 19906 0018 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 19907 001c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 19908 0020 043093E5 		ldr	r3, [r3, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 485


 19909 0024 08300BE5 		str	r3, [fp, #-8]
7685:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 19910              		.loc 1 7685 16
 19911 0028 08301BE5 		ldr	r3, [fp, #-8]
 19912 002c 4C2093E5 		ldr	r2, [r3, #76]
 19913 0030 08301BE5 		ldr	r3, [fp, #-8]
 19914 0034 4C3083E2 		add	r3, r3, #76
 19915 0038 030052E1 		cmp	r2, r3
 19916 003c 0200000A 		beq	.L1305
 19917              		.loc 1 7685 16 is_stmt 0 discriminator 1
 19918 0040 08301BE5 		ldr	r3, [fp, #-8]
 19919 0044 4C3093E5 		ldr	r3, [r3, #76]
 19920 0048 000000EA 		b	.L1306
 19921              	.L1305:
 19922              		.loc 1 7685 16 discriminator 2
 19923 004c 0030A0E3 		mov	r3, #0
 19924              	.L1306:
 19925              		.loc 1 7685 15 is_stmt 1 discriminator 4
 19926 0050 0C300BE5 		str	r3, [fp, #-12]
7686:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Invocation==RME_NULL))
 19927              		.loc 1 7686 7
 19928 0054 0C301BE5 		ldr	r3, [fp, #-12]
 19929 0058 000053E3 		cmp	r3, #0
 19930 005c 0200001A 		bne	.L1307
7687:../../Source/Kernel/rme_kernel.c ****     {
7688:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7689:../../Source/Kernel/rme_kernel.c **** 
7690:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_EMPTY;
 19931              		.loc 1 7690 16
 19932 0060 D03E0FE3 		movw	r3, #65232
 19933 0064 FF3F4FE3 		movt	r3, 65535
 19934 0068 680000EA 		b	.L1308
 19935              	.L1307:
7691:../../Source/Kernel/rme_kernel.c ****     }
7692:../../Source/Kernel/rme_kernel.c ****     else
7693:../../Source/Kernel/rme_kernel.c ****     {
7694:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7695:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7696:../../Source/Kernel/rme_kernel.c ****     }
7697:../../Source/Kernel/rme_kernel.c **** 
7698:../../Source/Kernel/rme_kernel.c ****     /* See if this port allows return-on-fault */
7699:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Is_Exc!=0U)&&(Invocation->Is_Exc_Ret==0U)))
 19936              		.loc 1 7699 7
 19937 006c 18301BE5 		ldr	r3, [fp, #-24]
 19938 0070 000053E3 		cmp	r3, #0
 19939 0074 0600000A 		beq	.L1309
 19940              		.loc 1 7699 8 discriminator 1
 19941 0078 0C301BE5 		ldr	r3, [fp, #-12]
 19942 007c 183093E5 		ldr	r3, [r3, #24]
 19943 0080 000053E3 		cmp	r3, #0
 19944 0084 0200001A 		bne	.L1309
7700:../../Source/Kernel/rme_kernel.c ****     {
7701:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7702:../../Source/Kernel/rme_kernel.c **** 
7703:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_FAULT;
 19945              		.loc 1 7703 16
 19946 0088 D23E0FE3 		movw	r3, #65234
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 486


 19947 008c FF3F4FE3 		movt	r3, 65535
 19948 0090 5E0000EA 		b	.L1308
 19949              	.L1309:
7704:../../Source/Kernel/rme_kernel.c ****     }
7705:../../Source/Kernel/rme_kernel.c ****     else
7706:../../Source/Kernel/rme_kernel.c ****     {
7707:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7708:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7709:../../Source/Kernel/rme_kernel.c ****     }
7710:../../Source/Kernel/rme_kernel.c **** 
7711:../../Source/Kernel/rme_kernel.c ****     /* Pop it from the stack */
7712:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 19950              		.loc 1 7712 5
 19951 0094 0C301BE5 		ldr	r3, [fp, #-12]
 19952 0098 042093E5 		ldr	r2, [r3, #4]
 19953 009c 0C301BE5 		ldr	r3, [fp, #-12]
 19954 00a0 003093E5 		ldr	r3, [r3]
 19955 00a4 0310A0E1 		mov	r1, r3
 19956 00a8 0200A0E1 		mov	r0, r2
 19957 00ac FEFFFFEB 		bl	_RME_List_Del
7713:../../Source/Kernel/rme_kernel.c ****     /* Decrease invocation depth - no atomic operation needed */
7714:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth--;
 19958              		.loc 1 7714 16
 19959 00b0 08301BE5 		ldr	r3, [fp, #-8]
 19960 00b4 543093E5 		ldr	r3, [r3, #84]
 19961              		.loc 1 7714 29
 19962 00b8 012043E2 		sub	r2, r3, #1
 19963 00bc 08301BE5 		ldr	r3, [fp, #-8]
 19964 00c0 542083E5 		str	r2, [r3, #84]
7715:../../Source/Kernel/rme_kernel.c **** 
7716:../../Source/Kernel/rme_kernel.c ****     /* Restore the register contents, and set return value. We need to set
7717:../../Source/Kernel/rme_kernel.c ****      * the return value of the invocation system call itself as well. */
7718:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Restore(Reg,&(Invocation->Ret));
 19965              		.loc 1 7718 5
 19966 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 19967 00c8 1C3083E2 		add	r3, r3, #28
 19968 00cc 0310A0E1 		mov	r1, r3
 19969 00d0 10001BE5 		ldr	r0, [fp, #-16]
 19970 00d4 FEFFFFEB 		bl	__RME_Inv_Reg_Restore
7719:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Retval_Set(Reg,(rme_ret_t)Retval);
 19971              		.loc 1 7719 5
 19972 00d8 14301BE5 		ldr	r3, [fp, #-20]
 19973 00dc 0310A0E1 		mov	r1, r3
 19974 00e0 10001BE5 		ldr	r0, [fp, #-16]
 19975 00e4 FEFFFFEB 		bl	__RME_Inv_Retval_Set
7720:../../Source/Kernel/rme_kernel.c **** 
7721:../../Source/Kernel/rme_kernel.c ****     /* We have successfully returned, set the invocation as inactive. We need
7722:../../Source/Kernel/rme_kernel.c ****      * a barrier here to avoid potential destruction of the return value. */
7723:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((volatile rme_ptr_t*)&(Invocation->Thd_Act),0U);
 19976              		.loc 1 7723 5
 19977 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 19978 00ec 0C3083E2 		add	r3, r3, #12
 19979 00f0 0010A0E3 		mov	r1, #0
 19980 00f4 0300A0E1 		mov	r0, r3
 19981 00f8 FEFFFFEB 		bl	__RME_A7A_Write_Release
7724:../../Source/Kernel/rme_kernel.c **** 
7725:../../Source/Kernel/rme_kernel.c ****     /* Decide the system call's return value */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 487


7726:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Is_Exc!=0U))
 19982              		.loc 1 7726 7
 19983 00fc 18301BE5 		ldr	r3, [fp, #-24]
 19984 0100 000053E3 		cmp	r3, #0
 19985 0104 0400000A 		beq	.L1310
7727:../../Source/Kernel/rme_kernel.c ****     {
7728:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7729:../../Source/Kernel/rme_kernel.c **** 
7730:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg, RME_ERR_SIV_FAULT);
 19986              		.loc 1 7730 9
 19987 0108 D21E0FE3 		movw	r1, #65234
 19988 010c FF1F4FE3 		movt	r1, 65535
 19989 0110 10001BE5 		ldr	r0, [fp, #-16]
 19990 0114 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 19991 0118 020000EA 		b	.L1311
 19992              	.L1310:
7731:../../Source/Kernel/rme_kernel.c ****     }
7732:../../Source/Kernel/rme_kernel.c ****     else
7733:../../Source/Kernel/rme_kernel.c ****     {
7734:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7735:../../Source/Kernel/rme_kernel.c **** 
7736:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 19993              		.loc 1 7736 9
 19994 011c 0010A0E3 		mov	r1, #0
 19995 0120 10001BE5 		ldr	r0, [fp, #-16]
 19996 0124 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 19997              	.L1311:
7737:../../Source/Kernel/rme_kernel.c ****     }
7738:../../Source/Kernel/rme_kernel.c **** 
7739:../../Source/Kernel/rme_kernel.c ****     /* Same assumptions as in invocation activation */
7740:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 19998              		.loc 1 7740 16
 19999 0128 08301BE5 		ldr	r3, [fp, #-8]
 20000 012c 4C2093E5 		ldr	r2, [r3, #76]
 20001 0130 08301BE5 		ldr	r3, [fp, #-8]
 20002 0134 4C3083E2 		add	r3, r3, #76
 20003 0138 030052E1 		cmp	r2, r3
 20004 013c 0200000A 		beq	.L1312
 20005              		.loc 1 7740 16 is_stmt 0 discriminator 1
 20006 0140 08301BE5 		ldr	r3, [fp, #-8]
 20007 0144 4C3093E5 		ldr	r3, [r3, #76]
 20008 0148 000000EA 		b	.L1313
 20009              	.L1312:
 20010              		.loc 1 7740 16 discriminator 2
 20011 014c 0030A0E3 		mov	r3, #0
 20012              	.L1313:
 20013              		.loc 1 7740 15 is_stmt 1 discriminator 4
 20014 0150 0C300BE5 		str	r3, [fp, #-12]
7741:../../Source/Kernel/rme_kernel.c ****     if(Invocation!=RME_NULL)
 20015              		.loc 1 7741 7
 20016 0154 0C301BE5 		ldr	r3, [fp, #-12]
 20017 0158 000053E3 		cmp	r3, #0
 20018 015c 1500000A 		beq	.L1314
7742:../../Source/Kernel/rme_kernel.c ****     {
7743:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7744:../../Source/Kernel/rme_kernel.c ****         
7745:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 488


7746:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20019              		.loc 1 7746 9
 20020 0160 0C301BE5 		ldr	r3, [fp, #-12]
 20021 0164 083093E5 		ldr	r3, [r3, #8]
 20022 0168 183093E5 		ldr	r3, [r3, #24]
 20023 016c 003093E5 		ldr	r3, [r3]
 20024 0170 7330FFE6 		uxth	r3, r3
 20025 0174 000053E3 		cmp	r3, #0
 20026 0178 0800000A 		beq	.L1315
 20027              		.loc 1 7746 9 is_stmt 0 discriminator 1
 20028 017c 003000E3 		movw	r3, #:lower16:.LC6
 20029 0180 003040E3 		movt	r3, #:upper16:.LC6
 20030 0184 002000E3 		movw	r2, #:lower16:.LC7
 20031 0188 002040E3 		movt	r2, #:upper16:.LC7
 20032 018c 421E01E3 		movw	r1, #7746
 20033 0190 000000E3 		movw	r0, #:lower16:.LC8
 20034 0194 000040E3 		movt	r0, #:upper16:.LC8
 20035 0198 FEFFFFEB 		bl	RME_Log
 20036              	.L1316:
 20037              		.loc 1 7746 9
 20038 019c FEFFFFEA 		b	.L1316
 20039              	.L1315:
7747:../../Source/Kernel/rme_kernel.c **** #endif
7748:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Invocation->Prc->Pgt);
 20040              		.loc 1 7748 33 is_stmt 1
 20041 01a0 0C301BE5 		ldr	r3, [fp, #-12]
 20042 01a4 083093E5 		ldr	r3, [r3, #8]
 20043              		.loc 1 7748 9
 20044 01a8 183093E5 		ldr	r3, [r3, #24]
 20045 01ac 0300A0E1 		mov	r0, r3
 20046 01b0 FEFFFFEB 		bl	__RME_Pgt_Set
 20047 01b4 140000EA 		b	.L1317
 20048              	.L1314:
7749:../../Source/Kernel/rme_kernel.c ****     }
7750:../../Source/Kernel/rme_kernel.c ****     else
7751:../../Source/Kernel/rme_kernel.c ****     {
7752:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7753:../../Source/Kernel/rme_kernel.c ****         
7754:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7755:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Thread->Sched.Prc->Pgt)!=0U);
 20049              		.loc 1 7755 9
 20050 01b8 08301BE5 		ldr	r3, [fp, #-8]
 20051 01bc 2C3093E5 		ldr	r3, [r3, #44]
 20052 01c0 183093E5 		ldr	r3, [r3, #24]
 20053 01c4 003093E5 		ldr	r3, [r3]
 20054 01c8 7330FFE6 		uxth	r3, r3
 20055 01cc 000053E3 		cmp	r3, #0
 20056 01d0 0800000A 		beq	.L1318
 20057              		.loc 1 7755 9 is_stmt 0 discriminator 1
 20058 01d4 003000E3 		movw	r3, #:lower16:.LC6
 20059 01d8 003040E3 		movt	r3, #:upper16:.LC6
 20060 01dc 002000E3 		movw	r2, #:lower16:.LC7
 20061 01e0 002040E3 		movt	r2, #:upper16:.LC7
 20062 01e4 4B1E01E3 		movw	r1, #7755
 20063 01e8 000000E3 		movw	r0, #:lower16:.LC8
 20064 01ec 000040E3 		movt	r0, #:upper16:.LC8
 20065 01f0 FEFFFFEB 		bl	RME_Log
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 489


 20066              	.L1319:
 20067              		.loc 1 7755 9
 20068 01f4 FEFFFFEA 		b	.L1319
 20069              	.L1318:
7756:../../Source/Kernel/rme_kernel.c **** #endif
7757:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Thread->Sched.Prc->Pgt);
 20070              		.loc 1 7757 36 is_stmt 1
 20071 01f8 08301BE5 		ldr	r3, [fp, #-8]
 20072 01fc 2C3093E5 		ldr	r3, [r3, #44]
 20073              		.loc 1 7757 9
 20074 0200 183093E5 		ldr	r3, [r3, #24]
 20075 0204 0300A0E1 		mov	r0, r3
 20076 0208 FEFFFFEB 		bl	__RME_Pgt_Set
 20077              	.L1317:
7758:../../Source/Kernel/rme_kernel.c ****     }
7759:../../Source/Kernel/rme_kernel.c ****     
7760:../../Source/Kernel/rme_kernel.c ****     return 0;
 20078              		.loc 1 7760 12
 20079 020c 0030A0E3 		mov	r3, #0
 20080              	.L1308:
7761:../../Source/Kernel/rme_kernel.c **** }
 20081              		.loc 1 7761 1
 20082 0210 0300A0E1 		mov	r0, r3
 20083 0214 04D04BE2 		sub	sp, fp, #4
 20084              		.cfi_def_cfa 13, 8
 20085              		@ sp needed
 20086 0218 0088BDE8 		pop	{fp, pc}
 20087              		.cfi_endproc
 20088              	.LFE76:
 20090              		.section	.text._RME_Kfn_Boot_Crt,"ax",%progbits
 20091              		.align	2
 20092              		.global	_RME_Kfn_Boot_Crt
 20093              		.syntax unified
 20094              		.arm
 20096              	_RME_Kfn_Boot_Crt:
 20097              	.LFB77:
7762:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Ret *************************************************/
7763:../../Source/Kernel/rme_kernel.c **** 
7764:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Boot_Crt *************************************************
7765:../../Source/Kernel/rme_kernel.c **** Description : This function is used to create boot-time kernel call capability.
7766:../../Source/Kernel/rme_kernel.c ****               This kind of capability that does not have a kernel object.
7767:../../Source/Kernel/rme_kernel.c ****               Kernel function capabilities allow you to execute user-defined 
7768:../../Source/Kernel/rme_kernel.c ****               functions in kernel mode. These functions must be defined in the
7769:../../Source/Kernel/rme_kernel.c ****               platform extensions.
7770:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7771:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
7772:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
7773:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7774:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel function.
7775:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7776:../../Source/Kernel/rme_kernel.c **** Output      : None.
7777:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or error code.
7778:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7779:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kfn_Boot_Crt(struct RME_Cap_Cpt* Cpt,
7780:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
7781:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kfn)
7782:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 490


 20098              		.loc 1 7782 1
 20099              		.cfi_startproc
 20100              		@ args = 0, pretend = 0, frame = 32
 20101              		@ frame_needed = 1, uses_anonymous_args = 0
 20102 0000 00482DE9 		push	{fp, lr}
 20103              		.cfi_def_cfa_offset 8
 20104              		.cfi_offset 11, -8
 20105              		.cfi_offset 14, -4
 20106 0004 04B08DE2 		add	fp, sp, #4
 20107              		.cfi_def_cfa 11, 4
 20108 0008 20D04DE2 		sub	sp, sp, #32
 20109 000c 18000BE5 		str	r0, [fp, #-24]
 20110 0010 1C100BE5 		str	r1, [fp, #-28]
 20111 0014 20200BE5 		str	r2, [fp, #-32]
7783:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7784:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kfn* Kfn_Crt;
7785:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7786:../../Source/Kernel/rme_kernel.c ****     
7787:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
7788:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 20112              		.loc 1 7788 5
 20113 0018 1C301BE5 		ldr	r3, [fp, #-28]
 20114 001c 803003E2 		and	r3, r3, #128
 20115 0020 000053E3 		cmp	r3, #0
 20116 0024 1C00001A 		bne	.L1321
 20117              		.loc 1 7788 5 is_stmt 0 discriminator 1
 20118 0028 18301BE5 		ldr	r3, [fp, #-24]
 20119 002c 142093E5 		ldr	r2, [r3, #20]
 20120 0030 1C301BE5 		ldr	r3, [fp, #-28]
 20121 0034 030052E1 		cmp	r2, r3
 20122 0038 0100008A 		bhi	.L1322
 20123              		.loc 1 7788 5 discriminator 3
 20124 003c 0230E0E3 		mvn	r3, #2
 20125              		.loc 1 7788 5
 20126 0040 850000EA 		b	.L1323
 20127              	.L1322:
 20128              		.loc 1 7788 5 discriminator 4
 20129 0044 1C301BE5 		ldr	r3, [fp, #-28]
 20130 0048 8322A0E1 		lsl	r2, r3, #5
 20131 004c 18301BE5 		ldr	r3, [fp, #-24]
 20132 0050 0C3093E5 		ldr	r3, [r3, #12]
 20133 0054 033082E0 		add	r3, r2, r3
 20134 0058 08300BE5 		str	r3, [fp, #-8]
 20135 005c 08301BE5 		ldr	r3, [fp, #-8]
 20136 0060 0300A0E1 		mov	r0, r3
 20137 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20138 0068 0C000BE5 		str	r0, [fp, #-12]
 20139              		.loc 1 7788 5 discriminator 1
 20140 006c 0C301BE5 		ldr	r3, [fp, #-12]
 20141 0070 FF3803E2 		and	r3, r3, #16711680
 20142 0074 020853E3 		cmp	r3, #131072
 20143 0078 0100001A 		bne	.L1324
 20144              		.loc 1 7788 5 discriminator 5
 20145 007c 0830E0E3 		mvn	r3, #8
 20146              		.loc 1 7788 5
 20147 0080 750000EA 		b	.L1323
 20148              	.L1324:
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 491


 20149              		.loc 1 7788 5 discriminator 6
 20150 0084 0C301BE5 		ldr	r3, [fp, #-12]
 20151 0088 233CA0E1 		lsr	r3, r3, #24
 20152 008c 030053E3 		cmp	r3, #3
 20153 0090 3F00000A 		beq	.L1325
 20154              		.loc 1 7788 5 discriminator 7
 20155 0094 0130E0E3 		mvn	r3, #1
 20156              		.loc 1 7788 5
 20157 0098 6F0000EA 		b	.L1323
 20158              	.L1321:
 20159              		.loc 1 7788 5 discriminator 2
 20160 009c 1C301BE5 		ldr	r3, [fp, #-28]
 20161 00a0 2324A0E1 		lsr	r2, r3, #8
 20162 00a4 18301BE5 		ldr	r3, [fp, #-24]
 20163 00a8 143093E5 		ldr	r3, [r3, #20]
 20164 00ac 030052E1 		cmp	r2, r3
 20165 00b0 0100003A 		bcc	.L1326
 20166              		.loc 1 7788 5 discriminator 8
 20167 00b4 0230E0E3 		mvn	r3, #2
 20168              		.loc 1 7788 5
 20169 00b8 670000EA 		b	.L1323
 20170              	.L1326:
 20171              		.loc 1 7788 5 discriminator 9
 20172 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 20173 00c0 2334A0E1 		lsr	r3, r3, #8
 20174 00c4 8322A0E1 		lsl	r2, r3, #5
 20175 00c8 18301BE5 		ldr	r3, [fp, #-24]
 20176 00cc 0C3093E5 		ldr	r3, [r3, #12]
 20177 00d0 033082E0 		add	r3, r2, r3
 20178 00d4 08300BE5 		str	r3, [fp, #-8]
 20179 00d8 08301BE5 		ldr	r3, [fp, #-8]
 20180 00dc 0300A0E1 		mov	r0, r3
 20181 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20182 00e4 0C000BE5 		str	r0, [fp, #-12]
 20183              		.loc 1 7788 5 discriminator 1
 20184 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20185 00ec FF3803E2 		and	r3, r3, #16711680
 20186 00f0 020853E3 		cmp	r3, #131072
 20187 00f4 0100001A 		bne	.L1327
 20188              		.loc 1 7788 5 discriminator 10
 20189 00f8 0830E0E3 		mvn	r3, #8
 20190              		.loc 1 7788 5
 20191 00fc 560000EA 		b	.L1323
 20192              	.L1327:
 20193              		.loc 1 7788 5 discriminator 11
 20194 0100 0C301BE5 		ldr	r3, [fp, #-12]
 20195 0104 233CA0E1 		lsr	r3, r3, #24
 20196 0108 030053E3 		cmp	r3, #3
 20197 010c 0100000A 		beq	.L1328
 20198              		.loc 1 7788 5 discriminator 12
 20199 0110 0130E0E3 		mvn	r3, #1
 20200              		.loc 1 7788 5
 20201 0114 500000EA 		b	.L1323
 20202              	.L1328:
 20203              		.loc 1 7788 5 discriminator 13
 20204 0118 1C301BE5 		ldr	r3, [fp, #-28]
 20205 011c 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 492


 20206 0120 08301BE5 		ldr	r3, [fp, #-8]
 20207 0124 143093E5 		ldr	r3, [r3, #20]
 20208 0128 030052E1 		cmp	r2, r3
 20209 012c 0100003A 		bcc	.L1329
 20210              		.loc 1 7788 5 discriminator 14
 20211 0130 0230E0E3 		mvn	r3, #2
 20212              		.loc 1 7788 5
 20213 0134 480000EA 		b	.L1323
 20214              	.L1329:
 20215              		.loc 1 7788 5 discriminator 15
 20216 0138 1C301BE5 		ldr	r3, [fp, #-28]
 20217 013c 7F3003E2 		and	r3, r3, #127
 20218 0140 8322A0E1 		lsl	r2, r3, #5
 20219 0144 08301BE5 		ldr	r3, [fp, #-8]
 20220 0148 0C3093E5 		ldr	r3, [r3, #12]
 20221 014c 033082E0 		add	r3, r2, r3
 20222 0150 08300BE5 		str	r3, [fp, #-8]
 20223 0154 08301BE5 		ldr	r3, [fp, #-8]
 20224 0158 0300A0E1 		mov	r0, r3
 20225 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20226 0160 0C000BE5 		str	r0, [fp, #-12]
 20227              		.loc 1 7788 5 discriminator 1
 20228 0164 0C301BE5 		ldr	r3, [fp, #-12]
 20229 0168 FF3803E2 		and	r3, r3, #16711680
 20230 016c 020853E3 		cmp	r3, #131072
 20231 0170 0100001A 		bne	.L1330
 20232              		.loc 1 7788 5 discriminator 16
 20233 0174 0830E0E3 		mvn	r3, #8
 20234              		.loc 1 7788 5
 20235 0178 370000EA 		b	.L1323
 20236              	.L1330:
 20237              		.loc 1 7788 5 discriminator 17
 20238 017c 0C301BE5 		ldr	r3, [fp, #-12]
 20239 0180 233CA0E1 		lsr	r3, r3, #24
 20240 0184 030053E3 		cmp	r3, #3
 20241 0188 0100000A 		beq	.L1325
 20242              		.loc 1 7788 5 discriminator 18
 20243 018c 0130E0E3 		mvn	r3, #1
 20244              		.loc 1 7788 5
 20245 0190 310000EA 		b	.L1323
 20246              	.L1325:
7789:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7790:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7791:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 20247              		.loc 1 7791 5 is_stmt 1
 20248 0194 08301BE5 		ldr	r3, [fp, #-8]
 20249 0198 083093E5 		ldr	r3, [r3, #8]
 20250 019c 013003E2 		and	r3, r3, #1
 20251 01a0 000053E3 		cmp	r3, #0
 20252 01a4 0100001A 		bne	.L1331
 20253              		.loc 1 7791 5 is_stmt 0 discriminator 1
 20254 01a8 0630E0E3 		mvn	r3, #6
 20255              		.loc 1 7791 5
 20256 01ac 2A0000EA 		b	.L1323
 20257              	.L1331:
7792:../../Source/Kernel/rme_kernel.c ****     
7793:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 493


7794:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kfn,struct RME_Cap_Kfn*,Kfn_Crt);
 20258              		.loc 1 7794 5 is_stmt 1
 20259 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20260 01b4 142093E5 		ldr	r2, [r3, #20]
 20261 01b8 20301BE5 		ldr	r3, [fp, #-32]
 20262 01bc 030052E1 		cmp	r2, r3
 20263 01c0 0100008A 		bhi	.L1332
 20264              		.loc 1 7794 5 is_stmt 0 discriminator 1
 20265 01c4 0230E0E3 		mvn	r3, #2
 20266              		.loc 1 7794 5
 20267 01c8 230000EA 		b	.L1323
 20268              	.L1332:
 20269              		.loc 1 7794 5 discriminator 2
 20270 01cc 20301BE5 		ldr	r3, [fp, #-32]
 20271 01d0 8322A0E1 		lsl	r2, r3, #5
 20272 01d4 08301BE5 		ldr	r3, [fp, #-8]
 20273 01d8 0C3093E5 		ldr	r3, [r3, #12]
 20274 01dc 033082E0 		add	r3, r2, r3
 20275 01e0 10300BE5 		str	r3, [fp, #-16]
7795:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7796:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kfn_Crt);
 20276              		.loc 1 7796 5 is_stmt 1
 20277 01e4 10301BE5 		ldr	r3, [fp, #-16]
 20278 01e8 0128A0E3 		mov	r2, #65536
 20279 01ec 0010A0E3 		mov	r1, #0
 20280 01f0 0300A0E1 		mov	r0, r3
 20281 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20282 01f8 0030A0E1 		mov	r3, r0
 20283              		.loc 1 7796 5 is_stmt 0 discriminator 1
 20284 01fc 000053E3 		cmp	r3, #0
 20285 0200 0100001A 		bne	.L1333
 20286 0204 0430E0E3 		mvn	r3, #4
 20287              		.loc 1 7796 5
 20288 0208 130000EA 		b	.L1323
 20289              	.L1333:
 20290              		.loc 1 7796 5 discriminator 2
 20291 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 20292 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 20293 0214 002093E5 		ldr	r2, [r3]
 20294 0218 10301BE5 		ldr	r3, [fp, #-16]
 20295 021c 102083E5 		str	r2, [r3, #16]
7797:../../Source/Kernel/rme_kernel.c ****     
7798:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7799:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Root_Ref=1U;
 20296              		.loc 1 7799 27 is_stmt 1
 20297 0220 10301BE5 		ldr	r3, [fp, #-16]
 20298 0224 0120A0E3 		mov	r2, #1
 20299 0228 042083E5 		str	r2, [r3, #4]
7800:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Object=0U;
 20300              		.loc 1 7800 25
 20301 022c 10301BE5 		ldr	r3, [fp, #-16]
 20302 0230 0020A0E3 		mov	r2, #0
 20303 0234 0C2083E5 		str	r2, [r3, #12]
7801:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Flag=RME_KFN_FLAG_FULL_RANGE;
 20304              		.loc 1 7801 23
 20305 0238 10201BE5 		ldr	r2, [fp, #-16]
 20306 023c 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 494


 20307 0240 FF3F4FE3 		movt	r3, 65535
 20308 0244 083082E5 		str	r3, [r2, #8]
7802:../../Source/Kernel/rme_kernel.c ****     
7803:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7804:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kfn_Crt->Head.Type_Stat),
 20309              		.loc 1 7804 5
 20310 0248 10301BE5 		ldr	r3, [fp, #-16]
 20311 024c 0114A0E3 		mov	r1, #16777216
 20312 0250 0300A0E1 		mov	r0, r3
 20313 0254 FEFFFFEB 		bl	__RME_A7A_Write_Release
7805:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KFN,
7806:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7807:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7808:../../Source/Kernel/rme_kernel.c **** 
7809:../../Source/Kernel/rme_kernel.c ****     return 0;
 20314              		.loc 1 7809 12
 20315 0258 0030A0E3 		mov	r3, #0
 20316              	.L1323:
7810:../../Source/Kernel/rme_kernel.c **** }
 20317              		.loc 1 7810 1
 20318 025c 0300A0E1 		mov	r0, r3
 20319 0260 04D04BE2 		sub	sp, fp, #4
 20320              		.cfi_def_cfa 13, 8
 20321              		@ sp needed
 20322 0264 0088BDE8 		pop	{fp, pc}
 20323              		.cfi_endproc
 20324              	.LFE77:
 20326              		.section	.text._RME_Kfn_Act,"ax",%progbits
 20327              		.align	2
 20328              		.syntax unified
 20329              		.arm
 20331              	_RME_Kfn_Act:
 20332              	.LFB78:
7811:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kfn_Boot_Crt ********************************************/
7812:../../Source/Kernel/rme_kernel.c **** 
7813:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Act ******************************************************
7814:../../Source/Kernel/rme_kernel.c **** Description : Activate a kernel function.
7815:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7816:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7817:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel capability.
7818:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7819:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Func_ID - The function ID to invoke.
7820:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Sub_ID - The subfunction ID to invoke.
7821:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param1 - The first parameter.
7822:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param2 - The second parameter.
7823:../../Source/Kernel/rme_kernel.c **** Output      : None.
7824:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the call is successful, it will return whatever
7825:../../Source/Kernel/rme_kernel.c ****                           the 
7826:../../Source/Kernel/rme_kernel.c ****                           function returned (It is expected that they shall
7827:../../Source/Kernel/rme_kernel.c ****                           never return an negative value); or an error code.
7828:../../Source/Kernel/rme_kernel.c ****                           If the kernel function ever causes a context switch,
7829:../../Source/Kernel/rme_kernel.c ****                           it is responsible for setting the return value. On 
7830:../../Source/Kernel/rme_kernel.c ****                           failure, no context switch is allowed.
7831:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7832:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Kfn_Act(struct RME_Cap_Cpt* Cpt,
7833:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7834:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kfn,
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 495


7835:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Func_ID,
7836:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Sub_ID,
7837:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param1,
7838:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param2)
7839:../../Source/Kernel/rme_kernel.c **** {
 20333              		.loc 1 7839 1
 20334              		.cfi_startproc
 20335              		@ args = 12, pretend = 0, frame = 24
 20336              		@ frame_needed = 1, uses_anonymous_args = 0
 20337 0000 00482DE9 		push	{fp, lr}
 20338              		.cfi_def_cfa_offset 8
 20339              		.cfi_offset 11, -8
 20340              		.cfi_offset 14, -4
 20341 0004 04B08DE2 		add	fp, sp, #4
 20342              		.cfi_def_cfa 11, 4
 20343 0008 20D04DE2 		sub	sp, sp, #32
 20344 000c 10000BE5 		str	r0, [fp, #-16]
 20345 0010 14100BE5 		str	r1, [fp, #-20]
 20346 0014 18200BE5 		str	r2, [fp, #-24]
 20347 0018 1C300BE5 		str	r3, [fp, #-28]
7840:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kfn* Kfn_Op;
7841:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7842:../../Source/Kernel/rme_kernel.c ****     
7843:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7844:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kfn,RME_CAP_TYPE_KFN,
 20348              		.loc 1 7844 5
 20349 001c 18301BE5 		ldr	r3, [fp, #-24]
 20350 0020 803003E2 		and	r3, r3, #128
 20351 0024 000053E3 		cmp	r3, #0
 20352 0028 1C00001A 		bne	.L1335
 20353              		.loc 1 7844 5 is_stmt 0 discriminator 1
 20354 002c 10301BE5 		ldr	r3, [fp, #-16]
 20355 0030 142093E5 		ldr	r2, [r3, #20]
 20356 0034 18301BE5 		ldr	r3, [fp, #-24]
 20357 0038 030052E1 		cmp	r2, r3
 20358 003c 0100008A 		bhi	.L1336
 20359              		.loc 1 7844 5 discriminator 3
 20360 0040 0230E0E3 		mvn	r3, #2
 20361              		.loc 1 7844 5
 20362 0044 6B0000EA 		b	.L1337
 20363              	.L1336:
 20364              		.loc 1 7844 5 discriminator 4
 20365 0048 18301BE5 		ldr	r3, [fp, #-24]
 20366 004c 8322A0E1 		lsl	r2, r3, #5
 20367 0050 10301BE5 		ldr	r3, [fp, #-16]
 20368 0054 0C3093E5 		ldr	r3, [r3, #12]
 20369 0058 033082E0 		add	r3, r2, r3
 20370 005c 08300BE5 		str	r3, [fp, #-8]
 20371 0060 08301BE5 		ldr	r3, [fp, #-8]
 20372 0064 0300A0E1 		mov	r0, r3
 20373 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20374 006c 0C000BE5 		str	r0, [fp, #-12]
 20375              		.loc 1 7844 5 discriminator 1
 20376 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20377 0074 FF3803E2 		and	r3, r3, #16711680
 20378 0078 020853E3 		cmp	r3, #131072
 20379 007c 0100001A 		bne	.L1338
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 496


 20380              		.loc 1 7844 5 discriminator 5
 20381 0080 0830E0E3 		mvn	r3, #8
 20382              		.loc 1 7844 5
 20383 0084 5B0000EA 		b	.L1337
 20384              	.L1338:
 20385              		.loc 1 7844 5 discriminator 6
 20386 0088 0C301BE5 		ldr	r3, [fp, #-12]
 20387 008c 233CA0E1 		lsr	r3, r3, #24
 20388 0090 010053E3 		cmp	r3, #1
 20389 0094 3F00000A 		beq	.L1339
 20390              		.loc 1 7844 5 discriminator 7
 20391 0098 0130E0E3 		mvn	r3, #1
 20392              		.loc 1 7844 5
 20393 009c 550000EA 		b	.L1337
 20394              	.L1335:
 20395              		.loc 1 7844 5 discriminator 2
 20396 00a0 18301BE5 		ldr	r3, [fp, #-24]
 20397 00a4 2324A0E1 		lsr	r2, r3, #8
 20398 00a8 10301BE5 		ldr	r3, [fp, #-16]
 20399 00ac 143093E5 		ldr	r3, [r3, #20]
 20400 00b0 030052E1 		cmp	r2, r3
 20401 00b4 0100003A 		bcc	.L1340
 20402              		.loc 1 7844 5 discriminator 8
 20403 00b8 0230E0E3 		mvn	r3, #2
 20404              		.loc 1 7844 5
 20405 00bc 4D0000EA 		b	.L1337
 20406              	.L1340:
 20407              		.loc 1 7844 5 discriminator 9
 20408 00c0 18301BE5 		ldr	r3, [fp, #-24]
 20409 00c4 2334A0E1 		lsr	r3, r3, #8
 20410 00c8 8322A0E1 		lsl	r2, r3, #5
 20411 00cc 10301BE5 		ldr	r3, [fp, #-16]
 20412 00d0 0C3093E5 		ldr	r3, [r3, #12]
 20413 00d4 033082E0 		add	r3, r2, r3
 20414 00d8 08300BE5 		str	r3, [fp, #-8]
 20415 00dc 08301BE5 		ldr	r3, [fp, #-8]
 20416 00e0 0300A0E1 		mov	r0, r3
 20417 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20418 00e8 0C000BE5 		str	r0, [fp, #-12]
 20419              		.loc 1 7844 5 discriminator 1
 20420 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 20421 00f0 FF3803E2 		and	r3, r3, #16711680
 20422 00f4 020853E3 		cmp	r3, #131072
 20423 00f8 0100001A 		bne	.L1341
 20424              		.loc 1 7844 5 discriminator 10
 20425 00fc 0830E0E3 		mvn	r3, #8
 20426              		.loc 1 7844 5
 20427 0100 3C0000EA 		b	.L1337
 20428              	.L1341:
 20429              		.loc 1 7844 5 discriminator 11
 20430 0104 0C301BE5 		ldr	r3, [fp, #-12]
 20431 0108 233CA0E1 		lsr	r3, r3, #24
 20432 010c 030053E3 		cmp	r3, #3
 20433 0110 0100000A 		beq	.L1342
 20434              		.loc 1 7844 5 discriminator 12
 20435 0114 0130E0E3 		mvn	r3, #1
 20436              		.loc 1 7844 5
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 497


 20437 0118 360000EA 		b	.L1337
 20438              	.L1342:
 20439              		.loc 1 7844 5 discriminator 13
 20440 011c 18301BE5 		ldr	r3, [fp, #-24]
 20441 0120 7F2003E2 		and	r2, r3, #127
 20442 0124 08301BE5 		ldr	r3, [fp, #-8]
 20443 0128 143093E5 		ldr	r3, [r3, #20]
 20444 012c 030052E1 		cmp	r2, r3
 20445 0130 0100003A 		bcc	.L1343
 20446              		.loc 1 7844 5 discriminator 14
 20447 0134 0230E0E3 		mvn	r3, #2
 20448              		.loc 1 7844 5
 20449 0138 2E0000EA 		b	.L1337
 20450              	.L1343:
 20451              		.loc 1 7844 5 discriminator 15
 20452 013c 18301BE5 		ldr	r3, [fp, #-24]
 20453 0140 7F3003E2 		and	r3, r3, #127
 20454 0144 8322A0E1 		lsl	r2, r3, #5
 20455 0148 08301BE5 		ldr	r3, [fp, #-8]
 20456 014c 0C3093E5 		ldr	r3, [r3, #12]
 20457 0150 033082E0 		add	r3, r2, r3
 20458 0154 08300BE5 		str	r3, [fp, #-8]
 20459 0158 08301BE5 		ldr	r3, [fp, #-8]
 20460 015c 0300A0E1 		mov	r0, r3
 20461 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20462 0164 0C000BE5 		str	r0, [fp, #-12]
 20463              		.loc 1 7844 5 discriminator 1
 20464 0168 0C301BE5 		ldr	r3, [fp, #-12]
 20465 016c FF3803E2 		and	r3, r3, #16711680
 20466 0170 020853E3 		cmp	r3, #131072
 20467 0174 0100001A 		bne	.L1344
 20468              		.loc 1 7844 5 discriminator 16
 20469 0178 0830E0E3 		mvn	r3, #8
 20470              		.loc 1 7844 5
 20471 017c 1D0000EA 		b	.L1337
 20472              	.L1344:
 20473              		.loc 1 7844 5 discriminator 17
 20474 0180 0C301BE5 		ldr	r3, [fp, #-12]
 20475 0184 233CA0E1 		lsr	r3, r3, #24
 20476 0188 010053E3 		cmp	r3, #1
 20477 018c 0100000A 		beq	.L1339
 20478              		.loc 1 7844 5 discriminator 18
 20479 0190 0130E0E3 		mvn	r3, #1
 20480              		.loc 1 7844 5
 20481 0194 170000EA 		b	.L1337
 20482              	.L1339:
7845:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kfn*,Kfn_Op,Type_Stat);    
7846:../../Source/Kernel/rme_kernel.c **** 
7847:../../Source/Kernel/rme_kernel.c ****     /* Check if the range of calling is allowed - kernel function specific */
7848:../../Source/Kernel/rme_kernel.c ****     if((Func_ID>RME_KFN_FLAG_HIGH(Kfn_Op->Head.Flag))||
 20483              		.loc 1 7848 17 is_stmt 1
 20484 0198 08301BE5 		ldr	r3, [fp, #-8]
 20485 019c 083093E5 		ldr	r3, [r3, #8]
 20486 01a0 2338A0E1 		lsr	r3, r3, #16
 20487              		.loc 1 7848 7
 20488 01a4 1C201BE5 		ldr	r2, [fp, #-28]
 20489 01a8 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 498


 20490 01ac 0500008A 		bhi	.L1345
7849:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20491              		.loc 1 7849 17
 20492 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20493 01b4 083093E5 		ldr	r3, [r3, #8]
 20494 01b8 7330FFE6 		uxth	r3, r3
7848:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20495              		.loc 1 7848 54 discriminator 1
 20496 01bc 1C201BE5 		ldr	r2, [fp, #-28]
 20497 01c0 030052E1 		cmp	r2, r3
 20498 01c4 0100002A 		bcs	.L1346
 20499              	.L1345:
7850:../../Source/Kernel/rme_kernel.c ****     {
7851:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7852:../../Source/Kernel/rme_kernel.c **** 
7853:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 20500              		.loc 1 7853 16
 20501 01c8 0630E0E3 		mvn	r3, #6
 20502 01cc 090000EA 		b	.L1337
 20503              	.L1346:
7854:../../Source/Kernel/rme_kernel.c ****     }
7855:../../Source/Kernel/rme_kernel.c ****     else
7856:../../Source/Kernel/rme_kernel.c ****     {
7857:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7858:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7859:../../Source/Kernel/rme_kernel.c ****     }
7860:../../Source/Kernel/rme_kernel.c **** 
7861:../../Source/Kernel/rme_kernel.c ****     /* Return whatever the function returns */
7862:../../Source/Kernel/rme_kernel.c ****     return __RME_Kfn_Handler(Cpt,Reg,Func_ID,Sub_ID,Param1,Param2);
 20504              		.loc 1 7862 12
 20505 01d0 0C309BE5 		ldr	r3, [fp, #12]
 20506 01d4 04308DE5 		str	r3, [sp, #4]
 20507 01d8 08309BE5 		ldr	r3, [fp, #8]
 20508 01dc 00308DE5 		str	r3, [sp]
 20509 01e0 04309BE5 		ldr	r3, [fp, #4]
 20510 01e4 1C201BE5 		ldr	r2, [fp, #-28]
 20511 01e8 14101BE5 		ldr	r1, [fp, #-20]
 20512 01ec 10001BE5 		ldr	r0, [fp, #-16]
 20513 01f0 FEFFFFEB 		bl	__RME_Kfn_Handler
 20514 01f4 0030A0E1 		mov	r3, r0
 20515              	.L1337:
7863:../../Source/Kernel/rme_kernel.c **** }
 20516              		.loc 1 7863 1
 20517 01f8 0300A0E1 		mov	r0, r3
 20518 01fc 04D04BE2 		sub	sp, fp, #4
 20519              		.cfi_def_cfa 13, 8
 20520              		@ sp needed
 20521 0200 0088BDE8 		pop	{fp, pc}
 20522              		.cfi_endproc
 20523              	.LFE78:
 20525              		.section	.rodata.Table.1,"a"
 20526              		.align	2
 20529              	Table.1:
 20530 0000 00000101 		.ascii	"\000\000\001\001\002\002\002\002\003\003\003\003\003"
 20530      02020202 
 20530      03030303 
 20530      03
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 499


 20531 000d 03030304 		.ascii	"\003\003\003\004\004\004\004\004\004\004\004\004\004"
 20531      04040404 
 20531      04040404 
 20531      04
 20532 001a 04040404 		.ascii	"\004\004\004\004\004\004\005\005\005\005\005\005\005"
 20532      04040505 
 20532      05050505 
 20532      05
 20533 0027 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\005"
 20533      05050505 
 20533      05050505 
 20533      05
 20534 0034 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\006"
 20534      05050505 
 20534      05050505 
 20534      06
 20535 0041 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20535      06060606 
 20535      06060606 
 20535      06
 20536 004e 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20536      06060606 
 20536      06060606 
 20536      06
 20537 005b 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20537      06060606 
 20537      06060606 
 20537      06
 20538 0068 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20538      06060606 
 20538      06060606 
 20538      06
 20539 0075 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\007\007"
 20539      06060606 
 20539      06060607 
 20539      07
 20540 0082 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20540      07070707 
 20540      07070707 
 20540      07
 20541 008f 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20541      07070707 
 20541      07070707 
 20541      07
 20542 009c 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20542      07070707 
 20542      07070707 
 20542      07
 20543 00a9 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20543      07070707 
 20543      07070707 
 20543      07
 20544 00b6 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20544      07070707 
 20544      07070707 
 20544      07
 20545 00c3 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 500


 20545      07070707 
 20545      07070707 
 20545      07
 20546 00d0 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20546      07070707 
 20546      07070707 
 20546      07
 20547 00dd 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20547      07070707 
 20547      07070707 
 20547      07
 20548 00ea 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20548      07070707 
 20548      07070707 
 20548      07
 20549 00f7 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007"
 20549      07070707 
 20549      07
 20550              		.section	.rodata.Table.0,"a"
 20551              		.align	2
 20554              	Table.0:
 20555 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 20555      02000100 
 20555      03000100 
 20555      02
 20556 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 20556      00010002 
 20556      00010003 
 20556      00
 20557 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 20557      01000500 
 20557      01000200 
 20557      01
 20558 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 20558      00020001 
 20558      00040001 
 20558      00
 20559 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 20559      03000100 
 20559      02000100 
 20559      06
 20560 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 20560      00010003 
 20560      00010002 
 20560      00
 20561 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 20561      01000200 
 20561      01000300 
 20561      01
 20562 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 20562      00050001 
 20562      00020001 
 20562      00
 20563 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 20563      02000100 
 20563      04000100 
 20563      02
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 501


 20564 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 20564      00010002 
 20564      00010007 
 20564      00
 20565 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 20565      01000300 
 20565      01000200 
 20565      01
 20566 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 20566      00020001 
 20566      00030001 
 20566      00
 20567 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 20567      05000100 
 20567      02000100 
 20567      03
 20568 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 20568      00010004 
 20568      00010002 
 20568      00
 20569 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 20569      01000200 
 20569      01000600 
 20569      01
 20570 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 20570      00030001 
 20570      00020001 
 20570      00
 20571 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 20571      02000100 
 20571      03000100 
 20571      02
 20572 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 20572      00010002 
 20572      00010003 
 20572      00
 20573 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 20573      01000400 
 20573      01000200 
 20573      01
 20574 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 20574      00020001 
 20574      00
 20575              		.text
 20576              	.Letext0:
 20577              		.file 2 "../../Include/Platform/A7A/rme_platform_a7a.h"
 20578              		.file 3 "../../Include/Kernel/rme_kernel.h"
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 502


DEFINED SYMBOLS
                            *ABS*:00000000 rme_kernel.c
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:21     .text.RME_Int_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:26     .text.RME_Int_Print:00000000 RME_Int_Print
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:176    .text.RME_Hex_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:181    .text.RME_Hex_Print:00000000 RME_Hex_Print
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:297    .text.RME_Str_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:302    .text.RME_Str_Print:00000000 RME_Str_Print
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:364    .rodata:00000000 $d
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:365    .rodata:00000000 .LC0
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:369    .rodata:00000028 .LC1
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:372    .rodata:00000034 .LC2
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:375    .rodata:00000038 .LC3
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:378    .text.RME_Log:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:383    .text.RME_Log:00000000 RME_Log
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:442    .text._RME_MSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:447    .text._RME_MSB_Generic:00000000 _RME_MSB_Generic
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:20529  .rodata.Table.1:00000000 Table.1
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:517    .text._RME_LSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:522    .text._RME_LSB_Generic:00000000 _RME_LSB_Generic
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:20554  .rodata.Table.0:00000000 Table.0
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:601    .text._RME_Comp_Swap_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:606    .text._RME_Comp_Swap_Single:00000000 _RME_Comp_Swap_Single
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:653    .text._RME_Fetch_Add_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:658    .text._RME_Fetch_Add_Single:00000000 _RME_Fetch_Add_Single
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:702    .text._RME_Fetch_And_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:707    .text._RME_Fetch_And_Single:00000000 _RME_Fetch_And_Single
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:748    .text._RME_List_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:753    .text._RME_List_Crt:00000000 _RME_List_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:788    .text._RME_List_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:793    .text._RME_List_Del:00000000 _RME_List_Del
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:829    .text._RME_List_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:834    .text._RME_List_Ins:00000000 _RME_List_Ins
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:879    .text._RME_Clear:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:884    .text._RME_Clear:00000000 _RME_Clear
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:936    .text._RME_Memcmp:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:941    .text._RME_Memcmp:00000000 _RME_Memcmp
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1023   .text._RME_Memcpy:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1028   .text._RME_Memcpy:00000000 _RME_Memcpy
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1087   .text._RME_Diff:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1092   .text._RME_Diff:00000000 _RME_Diff
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1142   .text.RME_Kmain:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1147   .text.RME_Kmain:00000000 RME_Kmain
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1185   .text._RME_Lowlvl_Check:00000000 _RME_Lowlvl_Check
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:8257   .text._RME_Kot_Init:00000000 _RME_Kot_Init
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1181   .text._RME_Lowlvl_Check:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1212   .text._RME_Svc_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1217   .text._RME_Svc_Handler:00000000 _RME_Svc_Handler
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:19889  .text._RME_Inv_Ret:00000000 _RME_Inv_Ret
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:19610  .text._RME_Inv_Act:00000000 _RME_Inv_Act
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:1341   .rodata._RME_Svc_Handler:00000000 $d
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:17730  .text._RME_Sig_Snd:00000000 _RME_Sig_Snd
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:18032  .text._RME_Sig_Rcv:00000000 _RME_Sig_Rcv
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:20331  .text._RME_Kfn_Act:00000000 _RME_Kfn_Act
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:14421  .text._RME_Thd_Sched_Free:00000000 _RME_Thd_Sched_Free
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:14779  .text._RME_Thd_Exec_Set:00000000 _RME_Thd_Exec_Set
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:15040  .text._RME_Thd_Sched_Prio:00000000 _RME_Thd_Sched_Prio
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 503


C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:15741  .text._RME_Thd_Time_Xfer:00000000 _RME_Thd_Time_Xfer
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:16330  .text._RME_Thd_Swt:00000000 _RME_Thd_Swt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2709   .text._RME_Cpt_Crt:00000000 _RME_Cpt_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3214   .text._RME_Cpt_Del:00000000 _RME_Cpt_Del
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3566   .text._RME_Cpt_Frz:00000000 _RME_Cpt_Frz
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3818   .text._RME_Cpt_Add:00000000 _RME_Cpt_Add
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:4606   .text._RME_Cpt_Rem:00000000 _RME_Cpt_Rem
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:5839   .text._RME_Pgt_Crt:00000000 _RME_Pgt_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:6367   .text._RME_Pgt_Del:00000000 _RME_Pgt_Del
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:6697   .text._RME_Pgt_Add:00000000 _RME_Pgt_Add
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:7171   .text._RME_Pgt_Rem:00000000 _RME_Pgt_Rem
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:7390   .text._RME_Pgt_Con:00000000 _RME_Pgt_Con
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:7837   .text._RME_Pgt_Des:00000000 _RME_Pgt_Des
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:10416  .text._RME_Prc_Crt:00000000 _RME_Prc_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:10995  .text._RME_Prc_Del:00000000 _RME_Prc_Del
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:11291  .text._RME_Prc_Cpt:00000000 _RME_Prc_Cpt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:11663  .text._RME_Prc_Pgt:00000000 _RME_Prc_Pgt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:12545  .text._RME_Thd_Crt:00000000 _RME_Thd_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:13277  .text._RME_Thd_Del:00000000 _RME_Thd_Del
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:13681  .text._RME_Thd_Sched_Bind:00000000 _RME_Thd_Sched_Bind
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:15474  .text._RME_Thd_Sched_Rcv:00000000 _RME_Thd_Sched_Rcv
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:16961  .text._RME_Sig_Crt:00000000 _RME_Sig_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:17203  .text._RME_Sig_Del:00000000 _RME_Sig_Del
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:18459  .text._RME_Inv_Crt:00000000 _RME_Inv_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:19087  .text._RME_Inv_Del:00000000 _RME_Inv_Del
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:19413  .text._RME_Inv_Set:00000000 _RME_Inv_Set
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2103   .text._RME_Svc_Handler:000008b0 $d
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2109   .text._RME_Tim_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2114   .text._RME_Tim_Handler:00000000 _RME_Tim_Handler
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9407   .text._RME_Run_Del:00000000 _RME_Run_Del
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9598   .text._RME_Run_Notif:00000000 _RME_Run_Notif
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:17608  .text._RME_Kern_Snd:00000000 _RME_Kern_Snd
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:17497  .text._RME_Kern_High:00000000 _RME_Kern_High
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2194   .text._RME_Tim_Elapse:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2199   .text._RME_Tim_Elapse:00000000 _RME_Tim_Elapse
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2260   .text._RME_Tim_Future:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2265   .text._RME_Tim_Future:00000000 _RME_Tim_Future
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2296   .text._RME_Cpt_Boot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2301   .text._RME_Cpt_Boot_Init:00000000 _RME_Cpt_Boot_Init
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:8322   .text._RME_Kot_Mark:00000000 _RME_Kot_Mark
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2409   .text._RME_Cpt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2414   .text._RME_Cpt_Boot_Crt:00000000 _RME_Cpt_Boot_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:2705   .text._RME_Cpt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3201   .rodata:0000003c .LC6
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3204   .rodata:00000048 .LC7
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3207   .rodata:00000054 .LC8
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3210   .text._RME_Cpt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:8629   .text._RME_Kot_Erase:00000000 _RME_Kot_Erase
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3562   .text._RME_Cpt_Frz:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:3814   .text._RME_Cpt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:4602   .text._RME_Cpt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:4876   .text._RME_Pgt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:4881   .text._RME_Pgt_Boot_Crt:00000000 _RME_Pgt_Boot_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:5215   .text._RME_Pgt_Boot_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:5220   .text._RME_Pgt_Boot_Add:00000000 _RME_Pgt_Boot_Add
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:5431   .text._RME_Pgt_Boot_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:5436   .text._RME_Pgt_Boot_Con:00000000 _RME_Pgt_Boot_Con
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 504


C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:5835   .text._RME_Pgt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:6363   .text._RME_Pgt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:6693   .text._RME_Pgt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:7167   .text._RME_Pgt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:7386   .text._RME_Pgt_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:7833   .text._RME_Pgt_Des:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:8252   .text._RME_Kot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:8317   .text._RME_Kot_Mark:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:8624   .text._RME_Kot_Erase:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:8858   .text._RME_Kom_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:8863   .text._RME_Kom_Boot_Crt:00000000 _RME_Kom_Boot_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9133   .text._RME_CPU_Local_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9138   .text._RME_CPU_Local_Init:00000000 _RME_CPU_Local_Init
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9213   .rodata:00000078 .LC9
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9216   .text._RME_Thd_Fatal:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9221   .text._RME_Thd_Fatal:00000000 _RME_Thd_Fatal
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9318   .text._RME_Run_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9322   .text._RME_Run_Ins:00000000 _RME_Run_Ins
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9403   .text._RME_Run_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9499   .text._RME_Run_High:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9503   .text._RME_Run_High:00000000 _RME_Run_High
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9594   .text._RME_Run_Notif:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9657   .text._RME_Thd_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9662   .text._RME_Thd_Pgt:00000000 _RME_Thd_Pgt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9723   .text._RME_Run_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9727   .text._RME_Run_Swt:00000000 _RME_Run_Swt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9832   .text._RME_Prc_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:9837   .text._RME_Prc_Boot_Crt:00000000 _RME_Prc_Boot_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:10412  .text._RME_Prc_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:10991  .text._RME_Prc_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:11287  .text._RME_Prc_Cpt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:11659  .text._RME_Prc_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:12031  .text._RME_Thd_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:12036  .text._RME_Thd_Boot_Crt:00000000 _RME_Thd_Boot_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:12541  .text._RME_Thd_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:13273  .text._RME_Thd_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:13677  .text._RME_Thd_Sched_Bind:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:14417  .text._RME_Thd_Sched_Free:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:14775  .text._RME_Thd_Exec_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:15036  .text._RME_Thd_Sched_Prio:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:15470  .text._RME_Thd_Sched_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:15737  .text._RME_Thd_Time_Xfer:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:16326  .text._RME_Thd_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:16714  .text._RME_Sig_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:16719  .text._RME_Sig_Boot_Crt:00000000 _RME_Sig_Boot_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:16957  .text._RME_Sig_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:17199  .text._RME_Sig_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:17492  .text._RME_Kern_High:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:17603  .text._RME_Kern_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:17726  .text._RME_Sig_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:18028  .text._RME_Sig_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:18193  .rodata._RME_Sig_Rcv:00000000 $d
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:18450  .text._RME_Sig_Rcv:00000430 $d
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:18455  .text._RME_Inv_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:19083  .text._RME_Inv_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:19409  .text._RME_Inv_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:19606  .text._RME_Inv_Act:00000000 $a
ARM GAS  C:\Users\even\AppData\Local\Temp\cc2EqbOA.s 			page 505


C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:19885  .text._RME_Inv_Ret:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:20091  .text._RME_Kfn_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:20096  .text._RME_Kfn_Boot_Crt:00000000 _RME_Kfn_Boot_Crt
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:20327  .text._RME_Kfn_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:20526  .rodata.Table.1:00000000 $d
C:\Users\even\AppData\Local\Temp\cc2EqbOA.s:20551  .rodata.Table.0:00000000 $d
                           .group:00000000 wm4.0.3b9f63523dc4e8d86e863c7e7e762be7
                           .group:00000000 wm4.rme_platform_a7a.h.12.4ea7c3e7cd5be5689682b56f61920b43
                           .group:00000000 wm4.rme_platform_xc7z020.h.15.439a86713387cac48fb920c2c501913e
                           .group:00000000 wm4.rme_platform_a7a.h.136.4a0faa042aee30814e6d83fdc3818dd9
                           .group:00000000 wm4.rme_kernel.h.27.716340edb41bad57d522729bf2b8a38a
                           .group:00000000 wm4.rme.h.11.9832b5e30070a0fa5589a615f357d92d
                           .group:00000000 wm4.rme_kernel.h.185.3974182bb1c1d44bb740025d2e899ec7
                           .group:00000000 wm4.rme_platform_a7a.h.393.7eab80424ec01c7c054622820ea1dfa1
                           .group:00000000 wm4.rme_kernel.h.679.5cba0ca852965e732f79ab9e9cae51eb
                           .group:00000000 wm4.rme_kernel.h.931.195a8d5e67b80e684597a8ab796ee2a0
                           .group:00000000 wm4.rme_platform_a7a.h.509.b93141b5f0c7ef8d63e60646ec4b272e

UNDEFINED SYMBOLS
__RME_Putchar
__aeabi_idiv
__aeabi_idivmod
__RME_Int_Disable
__RME_Lowlvl_Init
__RME_Pgt_Kom_Init
__RME_Boot
__RME_Svc_Param_Get
__RME_Svc_Retval_Set
RME_A7A_Local
__RME_A7A_Write_Release
__RME_A7A_Read_Acquire
RME_A7A_Timestamp
__RME_Pgt_Check
__RME_Pgt_Init
__RME_Pgt_Page_Map
__RME_Pgt_Pgdir_Map
__RME_Pgt_Del_Check
__RME_Pgt_Lookup
__RME_Pgt_Page_Unmap
__RME_Pgt_Pgdir_Unmap
RME_A7A_Kot
__RME_A7A_MSB_Get
__RME_Thd_Reg_Copy
__RME_Pgt_Set
__RME_Thd_Reg_Init
__RME_Inv_Reg_Save
__RME_Inv_Reg_Restore
__RME_Inv_Retval_Set
__RME_Kfn_Handler
