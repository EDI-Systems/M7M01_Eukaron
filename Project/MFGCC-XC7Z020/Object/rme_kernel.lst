ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 1


   1              		.cpu cortex-a9
   2              		.arch armv7-a
   3              		.fpu neon-fp16
   4              		.arch_extension mp
   5              		.arch_extension sec
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"rme_kernel.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	__aeabi_idiv
  20              		.global	__aeabi_idivmod
  21              		.section	.text.RME_Int_Print,"ax",%progbits
  22              		.align	2
  23              		.global	RME_Int_Print
  24              		.syntax unified
  25              		.arm
  27              	RME_Int_Print:
  28              	.LFB0:
  29              		.file 1 "../../Source/Kernel/rme_kernel.c"
   1:../../Source/Kernel/rme_kernel.c **** /******************************************************************************
   2:../../Source/Kernel/rme_kernel.c **** Filename    : rme_kernel.c
   3:../../Source/Kernel/rme_kernel.c **** Author      : pry
   4:../../Source/Kernel/rme_kernel.c **** Date        : 23/03/2017
   5:../../Source/Kernel/rme_kernel.c **** Licence     : The Unlicense; see LICENSE for details.
   6:../../Source/Kernel/rme_kernel.c **** Description : The system call processing path, debugging primitives and kernel
   7:../../Source/Kernel/rme_kernel.c ****               capability implementation for the RME system.
   8:../../Source/Kernel/rme_kernel.c **** 
   9:../../Source/Kernel/rme_kernel.c **** * Capability Table ************************************************************
  10:../../Source/Kernel/rme_kernel.c **** This section of code might be confusing if the underlying principles
  11:../../Source/Kernel/rme_kernel.c **** of capability-based systems is not well understood. 
  12:../../Source/Kernel/rme_kernel.c **** 1. Owning a capability means you have the power to use the function
  13:../../Source/Kernel/rme_kernel.c ****    represented by that capability.
  14:../../Source/Kernel/rme_kernel.c **** 2. Capabilities have an field called flags, which denotes what operations
  15:../../Source/Kernel/rme_kernel.c ****    is allowed on that captbl.
  16:../../Source/Kernel/rme_kernel.c **** 3. Owning a capability to a capability table means that you have the
  17:../../Source/Kernel/rme_kernel.c ****    power to modify the capability table's contents.
  18:../../Source/Kernel/rme_kernel.c **** 4. Creation and deletion of kernel objects is an operation on capability
  19:../../Source/Kernel/rme_kernel.c ****    table, thus requiring the capability to the capability table.
  20:../../Source/Kernel/rme_kernel.c **** 
  21:../../Source/Kernel/rme_kernel.c **** Remember we do not check our master table to see if it is frozen, or if it is
  22:../../Source/Kernel/rme_kernel.c **** captbl, or something, because if the master table's cap is not explicitly 
  23:../../Source/Kernel/rme_kernel.c **** passed in, we do not operate on it at all; If it is explicitly passed in, it
  24:../../Source/Kernel/rme_kernel.c **** will be checked.
  25:../../Source/Kernel/rme_kernel.c **** 
  26:../../Source/Kernel/rme_kernel.c **** There are 4 basic types of operations, as listed below:
  27:../../Source/Kernel/rme_kernel.c **** Operation                     What it does
  28:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  29:../../Source/Kernel/rme_kernel.c **** Create/Add-Dst                CAS the slot to CREATING state.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 2


  30:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  31:../../Source/Kernel/rme_kernel.c ****                               Create kernel object.
  32:../../Source/Kernel/rme_kernel.c ****                               Atomically update header to complete creation.
  33:../../Source/Kernel/rme_kernel.c **** Use/Add-Src                   Use the kernel object, have a WCET.
  34:../../Source/Kernel/rme_kernel.c **** Freeze                        Check timestamp for create-freeze QUIESCENCE.
  35:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  36:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to FROZEN state.
  37:../../Source/Kernel/rme_kernel.c **** Delete/Removal                Check FROZEN.
  38:../../Source/Kernel/rme_kernel.c ****                               Check timestamp for freeze-delete QUIESCENCE.
  39:../../Source/Kernel/rme_kernel.c ****                               Check REFCNT (delete only).
  40:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to empty.
  41:../../Source/Kernel/rme_kernel.c ****                               Delete the kernel object (delete only).
  42:../../Source/Kernel/rme_kernel.c **** 
  43:../../Source/Kernel/rme_kernel.c **** Hazard Table: (Operation 2 follows Operation 1)
  44:../../Source/Kernel/rme_kernel.c **** Operation 1    Operation 2    Reason why it is safe
  45:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  46:../../Source/Kernel/rme_kernel.c **** Create         Create         Only one creation will be successful, because 
  47:../../Source/Kernel/rme_kernel.c ****                               CREATING slot is done by CAS.
  48:../../Source/Kernel/rme_kernel.c **** Create         Delete         Create only set the CREATING. Delete will require
  49:../../Source/Kernel/rme_kernel.c ****                               a TYPE data, which will only be set after the 
  50:../../Source/Kernel/rme_kernel.c ****                               creation completes. ABA problem cannot occur
  51:../../Source/Kernel/rme_kernel.c ****                               because of create-freeze quiescence.
  52:../../Source/Kernel/rme_kernel.c ****                               If there is no quiescence between Create-Freeze, 
  53:../../Source/Kernel/rme_kernel.c ****                               the following may occur:
  54:../../Source/Kernel/rme_kernel.c ****                               T1: Check ---------------------------- Delete(CAS)
  55:../../Source/Kernel/rme_kernel.c ****                               T2: Check - Delete - Create - Freeze -------------
  56:../../Source/Kernel/rme_kernel.c ****                               In this case, thread 1 will perform a wrong 
  57:../../Source/Kernel/rme_kernel.c ****                               deletion on the new capability (the CAS will be
  58:../../Source/Kernel/rme_kernel.c ****                               successful), but this cap is actually a new cap 
  59:../../Source/Kernel/rme_kernel.c ****                               created by the thread 2 at the same location, not
  60:../../Source/Kernel/rme_kernel.c ****                               the old cap, and its quiescence may not be satisfied.
  61:../../Source/Kernel/rme_kernel.c **** Create         Freeze         OCCUPY only set the FROZEN. FROZEN will require
  62:../../Source/Kernel/rme_kernel.c ****                               that bit not set.
  63:../../Source/Kernel/rme_kernel.c **** Create         Add-Src        Add-Src will require a TYPE data, which will only
  64:../../Source/Kernel/rme_kernel.c ****                               be set after the creation completes.
  65:../../Source/Kernel/rme_kernel.c **** Create         Add-Dst        Only one creation will be successful, because 
  66:../../Source/Kernel/rme_kernel.c ****                               OCCUPY slot is done by CAS.
  67:../../Source/Kernel/rme_kernel.c **** Create         Remove         OCCUPY only set the FROZEN. Remove will require a
  68:../../Source/Kernel/rme_kernel.c ****                               TYPE data, which will only be set after the
  69:../../Source/Kernel/rme_kernel.c ****                               creation completes. See Create-Delete for details.
  70:../../Source/Kernel/rme_kernel.c **** Create         Use            OCCUPY only set the FROZEN. Use the cap will 
  71:../../Source/Kernel/rme_kernel.c ****                               require a TYPE data, which will only be set after
  72:../../Source/Kernel/rme_kernel.c ****                               the creation completes.
  73:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  74:../../Source/Kernel/rme_kernel.c **** Delete         Delete         Actual deletion done by CAS so only one deletion
  75:../../Source/Kernel/rme_kernel.c ****                               will be successful.
  76:../../Source/Kernel/rme_kernel.c **** Delete         Freeze         If the deletion fails and clears the FROZEN flag,
  77:../../Source/Kernel/rme_kernel.c ****                               nothing will be done;
  78:../../Source/Kernel/rme_kernel.c ****                               If it does not fail, then the cap will be erased,
  79:../../Source/Kernel/rme_kernel.c ****                               and the FREEZE CAS will not succeed.
  80:../../Source/Kernel/rme_kernel.c **** Delete         Remove         Only one will be successful because only the root
  81:../../Source/Kernel/rme_kernel.c ****                               can be DELETED.
  82:../../Source/Kernel/rme_kernel.c **** Delete         Others         Banned by the FROZEN flag before deletion. 
  83:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  84:../../Source/Kernel/rme_kernel.c **** Freeze         Create         Create fails because slot is still OCCUPY.
  85:../../Source/Kernel/rme_kernel.c **** Freeze         Delete         Delete fails if not FROZEN, or not QUIESCENT.
  86:../../Source/Kernel/rme_kernel.c **** Freeze         Remove         Remove fails if not FROZEN, or not QUIESCENT.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 3


  87:../../Source/Kernel/rme_kernel.c **** Freeze         Freeze         Freeze done by CAS, and only one will be successful.
  88:../../Source/Kernel/rme_kernel.c **** Freeze         Others         Freeze bans them if they attempt after FROZEN set.
  89:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  90:../../Source/Kernel/rme_kernel.c **** Add-Src        Create         Impossible because something in that slot.
  91:../../Source/Kernel/rme_kernel.c **** Add-Src        Freeze         Cannot freeze if already increased REFCNT. If they
  92:../../Source/Kernel/rme_kernel.c ****                               increase REFCNT just after FROZEN set, let it be.
  93:../../Source/Kernel/rme_kernel.c ****                               The cap can't be deleted because of non-zero REFCNT.
  94:../../Source/Kernel/rme_kernel.c **** Add-Src        Delete         Impossible because cap not FROZEN.
  95:../../Source/Kernel/rme_kernel.c **** Add-Src        Remove         Impossible because cap not FROZEN.
  96:../../Source/Kernel/rme_kernel.c **** Add-Src        Others         These operations can be parallel, which is fine.
  97:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  98:../../Source/Kernel/rme_kernel.c **** Add-Dst         ...           Conclusion same as Create operation.
  99:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 100:../../Source/Kernel/rme_kernel.c **** Remove          ...           Conclusion same as Delete operation.
 101:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 102:../../Source/Kernel/rme_kernel.c **** Use            Create         Impossible because something in that slot.
 103:../../Source/Kernel/rme_kernel.c **** Use            Delete         Impossible because not FROZEN. The use can't be
 104:../../Source/Kernel/rme_kernel.c ****                               from leaf caps as well because deletion will check
 105:../../Source/Kernel/rme_kernel.c ****                               the REFCNT, and if the REFCNT is 0, then the only
 106:../../Source/Kernel/rme_kernel.c ****                               case where an unsettled use can happen is that it
 107:../../Source/Kernel/rme_kernel.c ****                               happens within WCET time to REFCNT check time. This
 108:../../Source/Kernel/rme_kernel.c ****                               unsettled use must come from a leaf cap, as the use
 109:../../Source/Kernel/rme_kernel.c ****                               happened after the root gets FROZEN. This leaf cap
 110:../../Source/Kernel/rme_kernel.c ****                               itself, will set the REFCNT to 1, and it have no
 111:../../Source/Kernel/rme_kernel.c ****                               chance to freeze then remove itself before a WCET.
 112:../../Source/Kernel/rme_kernel.c ****                               The unsettled use case is thus impossible and there
 113:../../Source/Kernel/rme_kernel.c ****                               is no race. As long as all new reference to caps
 114:../../Source/Kernel/rme_kernel.c ****                               require an active cap passed in, there is no such
 115:../../Source/Kernel/rme_kernel.c ****                               race. Also, for cap creation, the header create step 
 116:../../Source/Kernel/rme_kernel.c ****                               must be the last step (after refcnt can be seen on
 117:../../Source/Kernel/rme_kernel.c ****                               all cores as we use write release semantics), and
 118:../../Source/Kernel/rme_kernel.c ****                               this ensures that no new leaf caps will be available
 119:../../Source/Kernel/rme_kernel.c ****                               for use before REFCNT is seen by all cores.
 120:../../Source/Kernel/rme_kernel.c **** Use            Freeze         It is fine.
 121:../../Source/Kernel/rme_kernel.c **** Use            Add-Src        It is fine.
 122:../../Source/Kernel/rme_kernel.c **** Use            Add-Dst        Impossible because something in that slot.
 123:../../Source/Kernel/rme_kernel.c **** Use            Remove         Impossible because not FROZEN.
 124:../../Source/Kernel/rme_kernel.c **** Use            Use            It is fine.
 125:../../Source/Kernel/rme_kernel.c **** 
 126:../../Source/Kernel/rme_kernel.c **** * Page Table ******************************************************************
 127:../../Source/Kernel/rme_kernel.c **** Different from most large-scale operating systems, RME requires the page tables
 128:../../Source/Kernel/rme_kernel.c **** to be constructed by the user-level rather than kernel logic. Yet, RME provided
 129:../../Source/Kernel/rme_kernel.c **** sufficient utilities for the user to conduct the necessary paging operations:
 130:../../Source/Kernel/rme_kernel.c **** 1. Creating page directories;
 131:../../Source/Kernel/rme_kernel.c **** 2. Deletiing page directories;
 132:../../Source/Kernel/rme_kernel.c **** 3. Adding(mapping) pages into page directories;
 133:../../Source/Kernel/rme_kernel.c **** 4. Deleting(unmapping) pages from page directories.
 134:../../Source/Kernel/rme_kernel.c **** 5. Constructing hierachical page tables;
 135:../../Source/Kernel/rme_kernel.c **** 6. Destructing hierachical page tables.
 136:../../Source/Kernel/rme_kernel.c **** 
 137:../../Source/Kernel/rme_kernel.c **** * Kernel Memory ***************************************************************
 138:../../Source/Kernel/rme_kernel.c **** Different seL4 and Composite, RME applys a principle that resembles Fiasco.OC's
 139:../../Source/Kernel/rme_kernel.c **** kernel object factory. However, this is simplified very much in RME - just a table
 140:../../Source/Kernel/rme_kernel.c **** for registering kernel memory usage! Some may think that this prohibits retyping;
 141:../../Source/Kernel/rme_kernel.c **** this is not true because we can implement it with a trusted user-level proxy.
 142:../../Source/Kernel/rme_kernel.c **** 
 143:../../Source/Kernel/rme_kernel.c **** * Process and Thread **********************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 4


 144:../../Source/Kernel/rme_kernel.c **** RME provided process as a light-weight virtual machine/container abstraction, 
 145:../../Source/Kernel/rme_kernel.c **** and a versatile thread abstraction. Processes enforce isolation, while threads
 146:../../Source/Kernel/rme_kernel.c **** carry out the task.
 147:../../Source/Kernel/rme_kernel.c **** There is no bind-bind race because bind is done using CAS.
 148:../../Source/Kernel/rme_kernel.c **** There is no bind-unbind race for scheduler thread because all are core-local.
 149:../../Source/Kernel/rme_kernel.c **** 
 150:../../Source/Kernel/rme_kernel.c **** * Signal and Invocation *******************************************************
 151:../../Source/Kernel/rme_kernel.c **** RME employs simple signal endpoints for interrupt passing, inter-core interrupt
 152:../../Source/Kernel/rme_kernel.c **** and asynchronous communication. Different from most operating systems, it employs
 153:../../Source/Kernel/rme_kernel.c **** thread migration model for cross-boundary synchronous communication rather than
 154:../../Source/Kernel/rme_kernel.c **** simple blockpoints. This invocation design have many benefits in many facets.
 155:../../Source/Kernel/rme_kernel.c **** 
 156:../../Source/Kernel/rme_kernel.c **** * Kernel Function *************************************************************
 157:../../Source/Kernel/rme_kernel.c **** There's no perfect operating system for a particular hardware. A hardware may
 158:../../Source/Kernel/rme_kernel.c **** have its own idiosyncrasies that needs extra hacks. RME's kernel function utility
 159:../../Source/Kernel/rme_kernel.c **** provides a disciplined way of making such hacks, in case you need to add new 
 160:../../Source/Kernel/rme_kernel.c **** system calls or directly manipulate hardware.
 161:../../Source/Kernel/rme_kernel.c **** 
 162:../../Source/Kernel/rme_kernel.c **** * The Use of 'volatile' *******************************************************
 163:../../Source/Kernel/rme_kernel.c **** 'volatile' is not needed in the kernel because the syscall interface acts as a
 164:../../Source/Kernel/rme_kernel.c **** natural compiler barrier. We're safe to assume that, during one syscall, data
 165:../../Source/Kernel/rme_kernel.c **** in memory remains unchanged. If anything changes, it has been dealt with the 
 166:../../Source/Kernel/rme_kernel.c **** dedicated assembly atomics. If LTO has been enabled, there are three cases:
 167:../../Source/Kernel/rme_kernel.c **** (1) Uniprocessor with C-implemented "atomics" with no real atomic support.
 168:../../Source/Kernel/rme_kernel.c ****     In this case, compiler barriers are not needed due to no kernel concurrency.
 169:../../Source/Kernel/rme_kernel.c **** (2) Multiprocessor with assembly-implemented atomics, but the compiler LTO does
 170:../../Source/Kernel/rme_kernel.c ****     not honor the assembly functions; instead it thinks that they are opaque.
 171:../../Source/Kernel/rme_kernel.c ****     In this case, the opaque function call itself is a full compiler barrier.
 172:../../Source/Kernel/rme_kernel.c **** (3) Multiprocessor with assembly-implemented atomics, and the compiler LTO does
 173:../../Source/Kernel/rme_kernel.c ****     honor the assembly functions.
 174:../../Source/Kernel/rme_kernel.c ****     In this case, the compiler should be aware of the semantics of the assembly,
 175:../../Source/Kernel/rme_kernel.c ****     and produce correct code.
 176:../../Source/Kernel/rme_kernel.c **** * Function Name Rules *********************************************************
 177:../../Source/Kernel/rme_kernel.c **** (1) No "_": OS entry function RME_Kmain and C entry "main".
 178:../../Source/Kernel/rme_kernel.c **** (2) "_"   : Kernel functions that are be called by kernel.
 179:../../Source/Kernel/rme_kernel.c **** (3) "__"  : HAL functions that are called by kernel.
 180:../../Source/Kernel/rme_kernel.c **** (4) "___" : HAL functions that should only be called by HAL.
 181:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 182:../../Source/Kernel/rme_kernel.c **** 
 183:../../Source/Kernel/rme_kernel.c **** /* Include *******************************************************************/
 184:../../Source/Kernel/rme_kernel.c **** #define __HDR_DEF__
 185:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 186:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 187:../../Source/Kernel/rme_kernel.c **** #undef __HDR_DEF__
 188:../../Source/Kernel/rme_kernel.c **** 
 189:../../Source/Kernel/rme_kernel.c **** #define __HDR_STRUCT__
 190:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 191:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 192:../../Source/Kernel/rme_kernel.c **** #undef __HDR_STRUCT__
 193:../../Source/Kernel/rme_kernel.c **** 
 194:../../Source/Kernel/rme_kernel.c **** /* Private include */
 195:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 196:../../Source/Kernel/rme_kernel.c **** 
 197:../../Source/Kernel/rme_kernel.c **** #define __HDR_PUBLIC__
 198:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 199:../../Source/Kernel/rme_kernel.c **** #undef __HDR_PUBLIC__
 200:../../Source/Kernel/rme_kernel.c **** /* End Include ***************************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 5


 201:../../Source/Kernel/rme_kernel.c **** 
 202:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Int_Print *****************************************************
 203:../../Source/Kernel/rme_kernel.c **** Description : Print a signed integer on the debugging console. This integer is
 204:../../Source/Kernel/rme_kernel.c ****               printed as decimal with sign.
 205:../../Source/Kernel/rme_kernel.c **** Input       : rme_cnt_t Int - The integer to print.
 206:../../Source/Kernel/rme_kernel.c **** Output      : None.
 207:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 208:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 209:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 210:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Int_Print(rme_cnt_t Int)
 211:../../Source/Kernel/rme_kernel.c **** {
  30              		.loc 1 211 1
  31              		.cfi_startproc
  32              		@ args = 0, pretend = 0, frame = 32
  33              		@ frame_needed = 1, uses_anonymous_args = 0
  34 0000 00482DE9 		push	{fp, lr}
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 11, -8
  37              		.cfi_offset 14, -4
  38 0004 04B08DE2 		add	fp, sp, #4
  39              		.cfi_def_cfa 11, 4
  40 0008 20D04DE2 		sub	sp, sp, #32
  41 000c 20000BE5 		str	r0, [fp, #-32]
 212:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Num;
 213:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Abs;
 214:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Iter;
 215:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
 216:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Div;
 217:../../Source/Kernel/rme_kernel.c ****     
 218:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 219:../../Source/Kernel/rme_kernel.c ****     if(Int==0)
  42              		.loc 1 219 7
  43 0010 20301BE5 		ldr	r3, [fp, #-32]
  44 0014 000053E3 		cmp	r3, #0
  45 0018 0100001A 		bne	.L2
 220:../../Source/Kernel/rme_kernel.c ****     {
 221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 222:../../Source/Kernel/rme_kernel.c **** 
 223:../../Source/Kernel/rme_kernel.c ****         return 1;
  46              		.loc 1 223 16
  47 001c 0130A0E3 		mov	r3, #1
  48 0020 500000EA 		b	.L3
  49              	.L2:
 224:../../Source/Kernel/rme_kernel.c ****     }
 225:../../Source/Kernel/rme_kernel.c ****     else
 226:../../Source/Kernel/rme_kernel.c ****     {
 227:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 228:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 229:../../Source/Kernel/rme_kernel.c ****     }
 230:../../Source/Kernel/rme_kernel.c **** 
 231:../../Source/Kernel/rme_kernel.c **** 
 232:../../Source/Kernel/rme_kernel.c ****     /* Correct all negatives into positives */
 233:../../Source/Kernel/rme_kernel.c ****     if(Int<0)
  50              		.loc 1 233 7
  51 0024 20301BE5 		ldr	r3, [fp, #-32]
  52 0028 000053E3 		cmp	r3, #0
  53 002c 070000AA 		bge	.L4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 6


 234:../../Source/Kernel/rme_kernel.c ****     {
 235:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 236:../../Source/Kernel/rme_kernel.c **** 
 237:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('-');
  54              		.loc 1 237 9
  55 0030 2D00A0E3 		mov	r0, #45
  56 0034 FEFFFFEB 		bl	__RME_Putchar
 238:../../Source/Kernel/rme_kernel.c ****         Abs=-Int;
  57              		.loc 1 238 12
  58 0038 20301BE5 		ldr	r3, [fp, #-32]
  59 003c 003063E2 		rsb	r3, r3, #0
  60 0040 0C300BE5 		str	r3, [fp, #-12]
 239:../../Source/Kernel/rme_kernel.c ****         Num=1;
  61              		.loc 1 239 12
  62 0044 0130A0E3 		mov	r3, #1
  63 0048 08300BE5 		str	r3, [fp, #-8]
  64 004c 030000EA 		b	.L5
  65              	.L4:
 240:../../Source/Kernel/rme_kernel.c ****     }
 241:../../Source/Kernel/rme_kernel.c ****     else
 242:../../Source/Kernel/rme_kernel.c ****     {
 243:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 244:../../Source/Kernel/rme_kernel.c **** 
 245:../../Source/Kernel/rme_kernel.c ****         Abs=Int;
  66              		.loc 1 245 12
  67 0050 20301BE5 		ldr	r3, [fp, #-32]
  68 0054 0C300BE5 		str	r3, [fp, #-12]
 246:../../Source/Kernel/rme_kernel.c ****         Num=0;
  69              		.loc 1 246 12
  70 0058 0030A0E3 		mov	r3, #0
  71 005c 08300BE5 		str	r3, [fp, #-8]
  72              	.L5:
 247:../../Source/Kernel/rme_kernel.c ****     }
 248:../../Source/Kernel/rme_kernel.c **** 
 249:../../Source/Kernel/rme_kernel.c ****     /* How many digits are there? */
 250:../../Source/Kernel/rme_kernel.c ****     Count=0;
  73              		.loc 1 250 10
  74 0060 0030A0E3 		mov	r3, #0
  75 0064 14300BE5 		str	r3, [fp, #-20]
 251:../../Source/Kernel/rme_kernel.c ****     Div=1;
  76              		.loc 1 251 8
  77 0068 0130A0E3 		mov	r3, #1
  78 006c 18300BE5 		str	r3, [fp, #-24]
 252:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
  79              		.loc 1 252 9
  80 0070 0C301BE5 		ldr	r3, [fp, #-12]
  81 0074 10300BE5 		str	r3, [fp, #-16]
  82              	.L9:
 253:../../Source/Kernel/rme_kernel.c ****     while(1U)
 254:../../Source/Kernel/rme_kernel.c ****     {
 255:../../Source/Kernel/rme_kernel.c ****         Iter/=10;
  83              		.loc 1 255 13
  84 0078 10201BE5 		ldr	r2, [fp, #-16]
  85 007c 673606E3 		movw	r3, #26215
  86 0080 663646E3 		movt	r3, 26214
  87 0084 9312C3E0 		smull	r1, r3, r3, r2
  88 0088 4311A0E1 		asr	r1, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 7


  89 008c C23FA0E1 		asr	r3, r2, #31
  90 0090 033041E0 		sub	r3, r1, r3
  91 0094 10300BE5 		str	r3, [fp, #-16]
 256:../../Source/Kernel/rme_kernel.c ****         Count++;
  92              		.loc 1 256 14
  93 0098 14301BE5 		ldr	r3, [fp, #-20]
  94 009c 013083E2 		add	r3, r3, #1
  95 00a0 14300BE5 		str	r3, [fp, #-20]
 257:../../Source/Kernel/rme_kernel.c ****         if(Iter!=0)
  96              		.loc 1 257 11
  97 00a4 10301BE5 		ldr	r3, [fp, #-16]
  98 00a8 000053E3 		cmp	r3, #0
  99 00ac 0600000A 		beq	.L12
 258:../../Source/Kernel/rme_kernel.c ****         {
 259:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 260:../../Source/Kernel/rme_kernel.c **** 
 261:../../Source/Kernel/rme_kernel.c ****             Div*=10;
 100              		.loc 1 261 16
 101 00b0 18201BE5 		ldr	r2, [fp, #-24]
 102 00b4 0230A0E1 		mov	r3, r2
 103 00b8 0331A0E1 		lsl	r3, r3, #2
 104 00bc 023083E0 		add	r3, r3, r2
 105 00c0 8330A0E1 		lsl	r3, r3, #1
 106 00c4 18300BE5 		str	r3, [fp, #-24]
 255:../../Source/Kernel/rme_kernel.c ****         Count++;
 107              		.loc 1 255 13
 108 00c8 EAFFFFEA 		b	.L9
 109              	.L12:
 262:../../Source/Kernel/rme_kernel.c ****         }
 263:../../Source/Kernel/rme_kernel.c ****         else
 264:../../Source/Kernel/rme_kernel.c ****         {
 265:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 266:../../Source/Kernel/rme_kernel.c **** 
 267:../../Source/Kernel/rme_kernel.c ****             break;
 110              		.loc 1 267 13
 111 00cc 00F020E3 		nop
 268:../../Source/Kernel/rme_kernel.c ****         }
 269:../../Source/Kernel/rme_kernel.c ****     }
 270:../../Source/Kernel/rme_kernel.c ****     Num+=Count;
 112              		.loc 1 270 8
 113 00d0 08201BE5 		ldr	r2, [fp, #-8]
 114 00d4 14301BE5 		ldr	r3, [fp, #-20]
 115 00d8 033082E0 		add	r3, r2, r3
 116 00dc 08300BE5 		str	r3, [fp, #-8]
 271:../../Source/Kernel/rme_kernel.c **** 
 272:../../Source/Kernel/rme_kernel.c ****     /* Print the integer */
 273:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
 117              		.loc 1 273 9
 118 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 119 00e4 10300BE5 		str	r3, [fp, #-16]
 274:../../Source/Kernel/rme_kernel.c **** 
 275:../../Source/Kernel/rme_kernel.c ****     while(Count>0)
 120              		.loc 1 275 10
 121 00e8 1A0000EA 		b	.L10
 122              	.L11:
 276:../../Source/Kernel/rme_kernel.c ****     {
 277:../../Source/Kernel/rme_kernel.c ****         Count--;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 8


 123              		.loc 1 277 14
 124 00ec 14301BE5 		ldr	r3, [fp, #-20]
 125 00f0 013043E2 		sub	r3, r3, #1
 126 00f4 14300BE5 		str	r3, [fp, #-20]
 278:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar((rme_s8_t)(Iter/Div)+'0');
 127              		.loc 1 278 38
 128 00f8 18101BE5 		ldr	r1, [fp, #-24]
 129 00fc 10001BE5 		ldr	r0, [fp, #-16]
 130 0100 FEFFFFEB 		bl	__aeabi_idiv
 131 0104 0030A0E1 		mov	r3, r0
 132              		.loc 1 278 23
 133 0108 7330EFE6 		uxtb	r3, r3
 134              		.loc 1 278 43
 135 010c 303083E2 		add	r3, r3, #48
 136 0110 7330EFE6 		uxtb	r3, r3
 137              		.loc 1 278 9
 138 0114 7330AFE6 		sxtb	r3, r3
 139 0118 0300A0E1 		mov	r0, r3
 140 011c FEFFFFEB 		bl	__RME_Putchar
 279:../../Source/Kernel/rme_kernel.c ****         Iter=Iter%Div;
 141              		.loc 1 279 13
 142 0120 10301BE5 		ldr	r3, [fp, #-16]
 143 0124 18101BE5 		ldr	r1, [fp, #-24]
 144 0128 0300A0E1 		mov	r0, r3
 145 012c FEFFFFEB 		bl	__aeabi_idivmod
 146 0130 0130A0E1 		mov	r3, r1
 147 0134 10300BE5 		str	r3, [fp, #-16]
 280:../../Source/Kernel/rme_kernel.c ****         Div/=10;
 148              		.loc 1 280 12
 149 0138 18201BE5 		ldr	r2, [fp, #-24]
 150 013c 673606E3 		movw	r3, #26215
 151 0140 663646E3 		movt	r3, 26214
 152 0144 9312C3E0 		smull	r1, r3, r3, r2
 153 0148 4311A0E1 		asr	r1, r3, #2
 154 014c C23FA0E1 		asr	r3, r2, #31
 155 0150 033041E0 		sub	r3, r1, r3
 156 0154 18300BE5 		str	r3, [fp, #-24]
 157              	.L10:
 275:../../Source/Kernel/rme_kernel.c ****     {
 158              		.loc 1 275 10
 159 0158 14301BE5 		ldr	r3, [fp, #-20]
 160 015c 000053E3 		cmp	r3, #0
 161 0160 E1FFFFCA 		bgt	.L11
 281:../../Source/Kernel/rme_kernel.c ****     }
 282:../../Source/Kernel/rme_kernel.c ****     
 283:../../Source/Kernel/rme_kernel.c ****     return Num;
 162              		.loc 1 283 12
 163 0164 08301BE5 		ldr	r3, [fp, #-8]
 164              	.L3:
 284:../../Source/Kernel/rme_kernel.c **** }
 165              		.loc 1 284 1
 166 0168 0300A0E1 		mov	r0, r3
 167 016c 04D04BE2 		sub	sp, fp, #4
 168              		.cfi_def_cfa 13, 8
 169              		@ sp needed
 170 0170 0088BDE8 		pop	{fp, pc}
 171              		.cfi_endproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 9


 172              	.LFE0:
 174              		.section	.text.RME_Hex_Print,"ax",%progbits
 175              		.align	2
 176              		.global	RME_Hex_Print
 177              		.syntax unified
 178              		.arm
 180              	RME_Hex_Print:
 181              	.LFB1:
 285:../../Source/Kernel/rme_kernel.c **** #endif
 286:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Int_Print ************************************************/
 287:../../Source/Kernel/rme_kernel.c **** 
 288:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Hex_Print *****************************************************
 289:../../Source/Kernel/rme_kernel.c **** Description : Print a unsigned integer on the debugging console. This integer is
 290:../../Source/Kernel/rme_kernel.c ****               printed as hexadecimal.
 291:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Uint - The unsigned integer to print.
 292:../../Source/Kernel/rme_kernel.c **** Output      : None.
 293:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 294:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 295:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 296:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Hex_Print(rme_ptr_t Uint)
 297:../../Source/Kernel/rme_kernel.c **** {
 182              		.loc 1 297 1
 183              		.cfi_startproc
 184              		@ args = 0, pretend = 0, frame = 24
 185              		@ frame_needed = 1, uses_anonymous_args = 0
 186 0000 00482DE9 		push	{fp, lr}
 187              		.cfi_def_cfa_offset 8
 188              		.cfi_offset 11, -8
 189              		.cfi_offset 14, -4
 190 0004 04B08DE2 		add	fp, sp, #4
 191              		.cfi_def_cfa 11, 4
 192 0008 18D04DE2 		sub	sp, sp, #24
 193 000c 18000BE5 		str	r0, [fp, #-24]
 298:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Iter;
 299:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 300:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Num;
 301:../../Source/Kernel/rme_kernel.c ****     
 302:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 303:../../Source/Kernel/rme_kernel.c ****     if(Uint==0U)
 194              		.loc 1 303 7
 195 0010 18301BE5 		ldr	r3, [fp, #-24]
 196 0014 000053E3 		cmp	r3, #0
 197 0018 0300001A 		bne	.L14
 304:../../Source/Kernel/rme_kernel.c ****     {
 305:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 306:../../Source/Kernel/rme_kernel.c ****         
 307:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
 198              		.loc 1 307 9
 199 001c 3000A0E3 		mov	r0, #48
 200 0020 FEFFFFEB 		bl	__RME_Putchar
 308:../../Source/Kernel/rme_kernel.c ****         return 1;
 201              		.loc 1 308 16
 202 0024 0130A0E3 		mov	r3, #1
 203 0028 330000EA 		b	.L15
 204              	.L14:
 309:../../Source/Kernel/rme_kernel.c ****     }
 310:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 10


 311:../../Source/Kernel/rme_kernel.c ****     {
 312:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 313:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 314:../../Source/Kernel/rme_kernel.c ****     }
 315:../../Source/Kernel/rme_kernel.c **** 
 316:../../Source/Kernel/rme_kernel.c ****     /* Filter out all the zeroes */
 317:../../Source/Kernel/rme_kernel.c ****     Count=0U;
 205              		.loc 1 317 10
 206 002c 0030A0E3 		mov	r3, #0
 207 0030 0C300BE5 		str	r3, [fp, #-12]
 318:../../Source/Kernel/rme_kernel.c ****     Iter=Uint;
 208              		.loc 1 318 9
 209 0034 18301BE5 		ldr	r3, [fp, #-24]
 210 0038 08300BE5 		str	r3, [fp, #-8]
 319:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 211              		.loc 1 319 10
 212 003c 050000EA 		b	.L16
 213              	.L17:
 320:../../Source/Kernel/rme_kernel.c ****     {
 321:../../Source/Kernel/rme_kernel.c ****         Iter<<=4;
 214              		.loc 1 321 13
 215 0040 08301BE5 		ldr	r3, [fp, #-8]
 216 0044 0332A0E1 		lsl	r3, r3, #4
 217 0048 08300BE5 		str	r3, [fp, #-8]
 322:../../Source/Kernel/rme_kernel.c ****         Count++;
 218              		.loc 1 322 14
 219 004c 0C301BE5 		ldr	r3, [fp, #-12]
 220 0050 013083E2 		add	r3, r3, #1
 221 0054 0C300BE5 		str	r3, [fp, #-12]
 222              	.L16:
 319:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 223              		.loc 1 319 16
 224 0058 08301BE5 		ldr	r3, [fp, #-8]
 225 005c 233EA0E1 		lsr	r3, r3, #28
 319:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 226              		.loc 1 319 10
 227 0060 000053E3 		cmp	r3, #0
 228 0064 F5FFFF0A 		beq	.L17
 323:../../Source/Kernel/rme_kernel.c ****     }
 324:../../Source/Kernel/rme_kernel.c ****     
 325:../../Source/Kernel/rme_kernel.c ****     /* Count is the number of pts to print */
 326:../../Source/Kernel/rme_kernel.c ****     Count=RME_POW2(RME_WORD_ORDER-2U)-Count;
 229              		.loc 1 326 10
 230 0068 0C301BE5 		ldr	r3, [fp, #-12]
 231 006c 083063E2 		rsb	r3, r3, #8
 232 0070 0C300BE5 		str	r3, [fp, #-12]
 327:../../Source/Kernel/rme_kernel.c ****     Num=Count;
 233              		.loc 1 327 8
 234 0074 0C301BE5 		ldr	r3, [fp, #-12]
 235 0078 10300BE5 		str	r3, [fp, #-16]
 328:../../Source/Kernel/rme_kernel.c ****     while(Count>0U)
 236              		.loc 1 328 10
 237 007c 1A0000EA 		b	.L18
 238              	.L20:
 329:../../Source/Kernel/rme_kernel.c ****     {
 330:../../Source/Kernel/rme_kernel.c ****         Count--;
 239              		.loc 1 330 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 11


 240 0080 0C301BE5 		ldr	r3, [fp, #-12]
 241 0084 013043E2 		sub	r3, r3, #1
 242 0088 0C300BE5 		str	r3, [fp, #-12]
 331:../../Source/Kernel/rme_kernel.c ****         Iter=(Uint>>(Count<<2U))&0x0FU;
 243              		.loc 1 331 27
 244 008c 0C301BE5 		ldr	r3, [fp, #-12]
 245 0090 0331A0E1 		lsl	r3, r3, #2
 246              		.loc 1 331 19
 247 0094 18201BE5 		ldr	r2, [fp, #-24]
 248 0098 3233A0E1 		lsr	r3, r2, r3
 249              		.loc 1 331 13
 250 009c 0F3003E2 		and	r3, r3, #15
 251 00a0 08300BE5 		str	r3, [fp, #-8]
 332:../../Source/Kernel/rme_kernel.c ****         if(Iter<10U)
 252              		.loc 1 332 11
 253 00a4 08301BE5 		ldr	r3, [fp, #-8]
 254 00a8 090053E3 		cmp	r3, #9
 255 00ac 0700008A 		bhi	.L19
 333:../../Source/Kernel/rme_kernel.c ****         {
 334:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 335:../../Source/Kernel/rme_kernel.c ****             
 336:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'0');
 256              		.loc 1 336 27
 257 00b0 08301BE5 		ldr	r3, [fp, #-8]
 258 00b4 7330EFE6 		uxtb	r3, r3
 259              		.loc 1 336 41
 260 00b8 303083E2 		add	r3, r3, #48
 261 00bc 7330EFE6 		uxtb	r3, r3
 262              		.loc 1 336 13
 263 00c0 7330AFE6 		sxtb	r3, r3
 264 00c4 0300A0E1 		mov	r0, r3
 265 00c8 FEFFFFEB 		bl	__RME_Putchar
 266 00cc 060000EA 		b	.L18
 267              	.L19:
 337:../../Source/Kernel/rme_kernel.c ****         }
 338:../../Source/Kernel/rme_kernel.c ****         else
 339:../../Source/Kernel/rme_kernel.c ****         {
 340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 341:../../Source/Kernel/rme_kernel.c ****             
 342:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'A'-10);
 268              		.loc 1 342 27
 269 00d0 08301BE5 		ldr	r3, [fp, #-8]
 270 00d4 7330EFE6 		uxtb	r3, r3
 271              		.loc 1 342 45
 272 00d8 373083E2 		add	r3, r3, #55
 273 00dc 7330EFE6 		uxtb	r3, r3
 274              		.loc 1 342 13
 275 00e0 7330AFE6 		sxtb	r3, r3
 276 00e4 0300A0E1 		mov	r0, r3
 277 00e8 FEFFFFEB 		bl	__RME_Putchar
 278              	.L18:
 328:../../Source/Kernel/rme_kernel.c ****     {
 279              		.loc 1 328 10
 280 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 281 00f0 000053E3 		cmp	r3, #0
 282 00f4 E1FFFF1A 		bne	.L20
 343:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 12


 344:../../Source/Kernel/rme_kernel.c ****     }
 345:../../Source/Kernel/rme_kernel.c ****     
 346:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Num;
 283              		.loc 1 346 12
 284 00f8 10301BE5 		ldr	r3, [fp, #-16]
 285              	.L15:
 347:../../Source/Kernel/rme_kernel.c **** }
 286              		.loc 1 347 1
 287 00fc 0300A0E1 		mov	r0, r3
 288 0100 04D04BE2 		sub	sp, fp, #4
 289              		.cfi_def_cfa 13, 8
 290              		@ sp needed
 291 0104 0088BDE8 		pop	{fp, pc}
 292              		.cfi_endproc
 293              	.LFE1:
 295              		.section	.text.RME_Str_Print,"ax",%progbits
 296              		.align	2
 297              		.global	RME_Str_Print
 298              		.syntax unified
 299              		.arm
 301              	RME_Str_Print:
 302              	.LFB2:
 348:../../Source/Kernel/rme_kernel.c **** #endif
 349:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Hex_Print ************************************************/
 350:../../Source/Kernel/rme_kernel.c **** 
 351:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Str_Print *****************************************************
 352:../../Source/Kernel/rme_kernel.c **** Description : Print a string the kernel console.
 353:../../Source/Kernel/rme_kernel.c ****               This is only used for kernel-level debugging.
 354:../../Source/Kernel/rme_kernel.c **** Input       : const rme_s8_t* String - The string to print
 355:../../Source/Kernel/rme_kernel.c **** Output      : None.
 356:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed, the '\0' is not included.
 357:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 358:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 359:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Str_Print(const rme_s8_t* String)
 360:../../Source/Kernel/rme_kernel.c **** {
 303              		.loc 1 360 1
 304              		.cfi_startproc
 305              		@ args = 0, pretend = 0, frame = 16
 306              		@ frame_needed = 1, uses_anonymous_args = 0
 307 0000 00482DE9 		push	{fp, lr}
 308              		.cfi_def_cfa_offset 8
 309              		.cfi_offset 11, -8
 310              		.cfi_offset 14, -4
 311 0004 04B08DE2 		add	fp, sp, #4
 312              		.cfi_def_cfa 11, 4
 313 0008 10D04DE2 		sub	sp, sp, #16
 314 000c 10000BE5 		str	r0, [fp, #-16]
 361:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 362:../../Source/Kernel/rme_kernel.c ****     
 363:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_DBGLOG_MAX;Count++)
 315              		.loc 1 363 14
 316 0010 0030A0E3 		mov	r3, #0
 317 0014 08300BE5 		str	r3, [fp, #-8]
 318              		.loc 1 363 5
 319 0018 0E0000EA 		b	.L22
 320              	.L25:
 364:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 13


 365:../../Source/Kernel/rme_kernel.c ****         if(String[Count]==(rme_s8_t)'\0')
 321              		.loc 1 365 18
 322 001c 10201BE5 		ldr	r2, [fp, #-16]
 323 0020 08301BE5 		ldr	r3, [fp, #-8]
 324 0024 033082E0 		add	r3, r2, r3
 325 0028 D030D3E1 		ldrsb	r3, [r3]
 326              		.loc 1 365 11
 327 002c 000053E3 		cmp	r3, #0
 328 0030 0C00000A 		beq	.L27
 366:../../Source/Kernel/rme_kernel.c ****         {
 367:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 368:../../Source/Kernel/rme_kernel.c ****             
 369:../../Source/Kernel/rme_kernel.c ****             break;
 370:../../Source/Kernel/rme_kernel.c ****         }
 371:../../Source/Kernel/rme_kernel.c ****         else
 372:../../Source/Kernel/rme_kernel.c ****         {
 373:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 374:../../Source/Kernel/rme_kernel.c ****             /* No action required */
 375:../../Source/Kernel/rme_kernel.c ****         }
 376:../../Source/Kernel/rme_kernel.c ****         
 377:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar(String[Count]);
 329              		.loc 1 377 29 discriminator 2
 330 0034 10201BE5 		ldr	r2, [fp, #-16]
 331 0038 08301BE5 		ldr	r3, [fp, #-8]
 332 003c 033082E0 		add	r3, r2, r3
 333              		.loc 1 377 9 discriminator 2
 334 0040 D030D3E1 		ldrsb	r3, [r3]
 335 0044 0300A0E1 		mov	r0, r3
 336 0048 FEFFFFEB 		bl	__RME_Putchar
 363:../../Source/Kernel/rme_kernel.c ****     {
 337              		.loc 1 363 44 discriminator 2
 338 004c 08301BE5 		ldr	r3, [fp, #-8]
 339 0050 013083E2 		add	r3, r3, #1
 340 0054 08300BE5 		str	r3, [fp, #-8]
 341              	.L22:
 363:../../Source/Kernel/rme_kernel.c ****     {
 342              		.loc 1 363 5 discriminator 1
 343 0058 08301BE5 		ldr	r3, [fp, #-8]
 344 005c FE0053E3 		cmp	r3, #254
 345 0060 EDFFFF9A 		bls	.L25
 346 0064 000000EA 		b	.L24
 347              	.L27:
 369:../../Source/Kernel/rme_kernel.c ****         }
 348              		.loc 1 369 13
 349 0068 00F020E3 		nop
 350              	.L24:
 378:../../Source/Kernel/rme_kernel.c ****     }
 379:../../Source/Kernel/rme_kernel.c ****     
 380:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Count;
 351              		.loc 1 380 12
 352 006c 08301BE5 		ldr	r3, [fp, #-8]
 381:../../Source/Kernel/rme_kernel.c **** }
 353              		.loc 1 381 1
 354 0070 0300A0E1 		mov	r0, r3
 355 0074 04D04BE2 		sub	sp, fp, #4
 356              		.cfi_def_cfa 13, 8
 357              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 14


 358 0078 0088BDE8 		pop	{fp, pc}
 359              		.cfi_endproc
 360              	.LFE2:
 362              		.section	.rodata
 363              		.align	2
 364              	.LC0:
 365 0000 0D0A2A2A 		.ascii	"\015\012***\015\012Kernel panic - not syncing :\015"
 365      2A0D0A4B 
 365      65726E65 
 365      6C207061 
 365      6E696320 
 366 0024 0A00     		.ascii	"\012\000"
 367 0026 0000     		.align	2
 368              	.LC1:
 369 0028 202C204C 		.ascii	" , Line \000"
 369      696E6520 
 369      00
 370 0031 000000   		.align	2
 371              	.LC2:
 372 0034 0D0A00   		.ascii	"\015\012\000"
 373 0037 00       		.align	2
 374              	.LC3:
 375 0038 202C2000 		.ascii	" , \000"
 376              		.section	.text.RME_Log,"ax",%progbits
 377              		.align	2
 378              		.global	RME_Log
 379              		.syntax unified
 380              		.arm
 382              	RME_Log:
 383              	.LFB3:
 382:../../Source/Kernel/rme_kernel.c **** #endif
 383:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Str_Print ************************************************/
 384:../../Source/Kernel/rme_kernel.c **** 
 385:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Log ***********************************************************
 386:../../Source/Kernel/rme_kernel.c **** Description : Default logging function, will be used when the user does not 
 387:../../Source/Kernel/rme_kernel.c ****               supply one. This will only be called when the kernel panics.
 388:../../Source/Kernel/rme_kernel.c **** Input       : const char* File - The filename.
 389:../../Source/Kernel/rme_kernel.c ****               long Line - The line number.
 390:../../Source/Kernel/rme_kernel.c ****               const char* Date - The compilation date.
 391:../../Source/Kernel/rme_kernel.c ****               const char* Time - The compilation time.
 392:../../Source/Kernel/rme_kernel.c **** Output      : None.
 393:../../Source/Kernel/rme_kernel.c **** Return      : None.
 394:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 395:../../Source/Kernel/rme_kernel.c **** #ifndef RME_LOG
 396:../../Source/Kernel/rme_kernel.c **** void RME_Log(const char* File,
 397:../../Source/Kernel/rme_kernel.c ****              long Line,
 398:../../Source/Kernel/rme_kernel.c ****              const char* Date,
 399:../../Source/Kernel/rme_kernel.c ****              const char* Time)
 400:../../Source/Kernel/rme_kernel.c **** {
 384              		.loc 1 400 1
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 16
 387              		@ frame_needed = 1, uses_anonymous_args = 0
 388 0000 00482DE9 		push	{fp, lr}
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 11, -8
 391              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 15


 392 0004 04B08DE2 		add	fp, sp, #4
 393              		.cfi_def_cfa 11, 4
 394 0008 10D04DE2 		sub	sp, sp, #16
 395 000c 08000BE5 		str	r0, [fp, #-8]
 396 0010 0C100BE5 		str	r1, [fp, #-12]
 397 0014 10200BE5 		str	r2, [fp, #-16]
 398 0018 14300BE5 		str	r3, [fp, #-20]
 401:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n***\r\nKernel panic - not syncing :\r\n"); \
 399              		.loc 1 401 5
 400 001c 000000E3 		movw	r0, #:lower16:.LC0
 401 0020 000040E3 		movt	r0, #:upper16:.LC0
 402 0024 FEFFFFEB 		bl	RME_Str_Print
 402:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(File); \
 403              		.loc 1 402 5
 404 0028 08001BE5 		ldr	r0, [fp, #-8]
 405 002c FEFFFFEB 		bl	RME_Str_Print
 403:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , Line "); \
 406              		.loc 1 403 5
 407 0030 000000E3 		movw	r0, #:lower16:.LC1
 408 0034 000040E3 		movt	r0, #:upper16:.LC1
 409 0038 FEFFFFEB 		bl	RME_Str_Print
 404:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Line); \
 410              		.loc 1 404 5
 411 003c 0C001BE5 		ldr	r0, [fp, #-12]
 412 0040 FEFFFFEB 		bl	RME_Int_Print
 405:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 413              		.loc 1 405 5
 414 0044 000000E3 		movw	r0, #:lower16:.LC2
 415 0048 000040E3 		movt	r0, #:upper16:.LC2
 416 004c FEFFFFEB 		bl	RME_Str_Print
 406:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Date); \
 417              		.loc 1 406 5
 418 0050 10001BE5 		ldr	r0, [fp, #-16]
 419 0054 FEFFFFEB 		bl	RME_Str_Print
 407:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , "); \
 420              		.loc 1 407 5
 421 0058 000000E3 		movw	r0, #:lower16:.LC3
 422 005c 000040E3 		movt	r0, #:upper16:.LC3
 423 0060 FEFFFFEB 		bl	RME_Str_Print
 408:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Time); \
 424              		.loc 1 408 5
 425 0064 14001BE5 		ldr	r0, [fp, #-20]
 426 0068 FEFFFFEB 		bl	RME_Str_Print
 409:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 427              		.loc 1 409 5
 428 006c 000000E3 		movw	r0, #:lower16:.LC2
 429 0070 000040E3 		movt	r0, #:upper16:.LC2
 430 0074 FEFFFFEB 		bl	RME_Str_Print
 410:../../Source/Kernel/rme_kernel.c **** }
 431              		.loc 1 410 1
 432 0078 00F020E3 		nop
 433 007c 04D04BE2 		sub	sp, fp, #4
 434              		.cfi_def_cfa 13, 8
 435              		@ sp needed
 436 0080 0088BDE8 		pop	{fp, pc}
 437              		.cfi_endproc
 438              	.LFE3:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 16


 440              		.section	.text._RME_MSB_Generic,"ax",%progbits
 441              		.align	2
 442              		.global	_RME_MSB_Generic
 443              		.syntax unified
 444              		.arm
 446              	_RME_MSB_Generic:
 447              	.LFB4:
 411:../../Source/Kernel/rme_kernel.c **** #endif
 412:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Log ******************************************************/
 413:../../Source/Kernel/rme_kernel.c **** 
 414:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Cov_Print *****************************************************
 415:../../Source/Kernel/rme_kernel.c **** Description : The coverage data printer. Should always be disabled for all cases
 416:../../Source/Kernel/rme_kernel.c ****               except where a kernel coverage test is needed. This should never
 417:../../Source/Kernel/rme_kernel.c ****               be called any any user application; for coverage testing only.
 418:../../Source/Kernel/rme_kernel.c **** Input       : None.
 419:../../Source/Kernel/rme_kernel.c **** Output      : None.
 420:../../Source/Kernel/rme_kernel.c **** Return      : None.
 421:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 422:../../Source/Kernel/rme_kernel.c **** #ifdef RME_COV_LINE_NUM
 423:../../Source/Kernel/rme_kernel.c **** void RME_Cov_Print(void)
 424:../../Source/Kernel/rme_kernel.c **** {
 425:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Count;
 426:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Next;
 427:../../Source/Kernel/rme_kernel.c ****     
 428:../../Source/Kernel/rme_kernel.c ****     Next=0U;
 429:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_COV_LINE_NUM;Count++)
 430:../../Source/Kernel/rme_kernel.c ****     {
 431:../../Source/Kernel/rme_kernel.c ****         if(RME_BITMAP_IS_SET(RME_Cov,Count))
 432:../../Source/Kernel/rme_kernel.c ****         {
 433:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 434:../../Source/Kernel/rme_kernel.c ****             RME_DBG_I(Count);
 435:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S(",");
 436:../../Source/Kernel/rme_kernel.c ****             /* We put 12 markers on a single line */
 437:../../Source/Kernel/rme_kernel.c ****             Next++;
 438:../../Source/Kernel/rme_kernel.c ****             if(Next>11U)
 439:../../Source/Kernel/rme_kernel.c ****             {
 440:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 441:../../Source/Kernel/rme_kernel.c ****                 
 442:../../Source/Kernel/rme_kernel.c ****                 Next=0U;
 443:../../Source/Kernel/rme_kernel.c ****                 RME_DBG_S("\r\n");
 444:../../Source/Kernel/rme_kernel.c ****             }
 445:../../Source/Kernel/rme_kernel.c ****             else
 446:../../Source/Kernel/rme_kernel.c ****             {
 447:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 448:../../Source/Kernel/rme_kernel.c ****                 /* No action needed */
 449:../../Source/Kernel/rme_kernel.c ****             }
 450:../../Source/Kernel/rme_kernel.c ****         }
 451:../../Source/Kernel/rme_kernel.c ****         else
 452:../../Source/Kernel/rme_kernel.c ****         {
 453:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 454:../../Source/Kernel/rme_kernel.c ****             /* No action needed */
 455:../../Source/Kernel/rme_kernel.c ****         }
 456:../../Source/Kernel/rme_kernel.c ****     }
 457:../../Source/Kernel/rme_kernel.c **** }
 458:../../Source/Kernel/rme_kernel.c **** #endif
 459:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Cov_Print ************************************************/
 460:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 17


 461:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_MSB_Generic **************************************************
 462:../../Source/Kernel/rme_kernel.c **** Description : Find the MSB's position. This is a portable solution for all
 463:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 464:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 465:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to compute for.
 466:../../Source/Kernel/rme_kernel.c **** Output      : None.
 467:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 468:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 469:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_MSB_Generic(rme_ptr_t Value)
 470:../../Source/Kernel/rme_kernel.c **** {
 448              		.loc 1 470 1
 449              		.cfi_startproc
 450              		@ args = 0, pretend = 0, frame = 16
 451              		@ frame_needed = 1, uses_anonymous_args = 0
 452              		@ link register save eliminated.
 453 0000 04B02DE5 		str	fp, [sp, #-4]!
 454              		.cfi_def_cfa_offset 4
 455              		.cfi_offset 11, -4
 456 0004 00B08DE2 		add	fp, sp, #0
 457              		.cfi_def_cfa_register 11
 458 0008 14D04DE2 		sub	sp, sp, #20
 459 000c 10000BE5 		str	r0, [fp, #-16]
 471:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 472:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 473:../../Source/Kernel/rme_kernel.c ****     {
 474:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,1U,2U,2U,2U,2U,3U,3U,3U,3U,3U,3U,3U,3U,
 475:../../Source/Kernel/rme_kernel.c ****         4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,
 476:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 477:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 478:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 479:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 480:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 481:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 482:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 483:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 484:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 485:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 486:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 487:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 488:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 489:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U
 490:../../Source/Kernel/rme_kernel.c ****     };
 491:../../Source/Kernel/rme_kernel.c **** 
 492:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 493:../../Source/Kernel/rme_kernel.c ****     /* 15-8 */
 494:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(8U))
 495:../../Source/Kernel/rme_kernel.c ****     {
 496:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 497:../../Source/Kernel/rme_kernel.c ****         
 498:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 499:../../Source/Kernel/rme_kernel.c ****     }
 500:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 501:../../Source/Kernel/rme_kernel.c ****     else
 502:../../Source/Kernel/rme_kernel.c ****     {
 503:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 504:../../Source/Kernel/rme_kernel.c ****         
 505:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 18


 506:../../Source/Kernel/rme_kernel.c ****     }
 507:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 508:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 509:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(16U))
 460              		.loc 1 509 7
 461 0010 10301BE5 		ldr	r3, [fp, #-16]
 462 0014 010853E3 		cmp	r3, #65536
 463 0018 0800003A 		bcc	.L30
 510:../../Source/Kernel/rme_kernel.c ****     {
 511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 512:../../Source/Kernel/rme_kernel.c ****         
 513:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 514:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(24U))
 464              		.loc 1 514 11
 465 001c 10301BE5 		ldr	r3, [fp, #-16]
 466 0020 010453E3 		cmp	r3, #16777216
 467 0024 0200003A 		bcc	.L31
 515:../../Source/Kernel/rme_kernel.c ****         {
 516:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 517:../../Source/Kernel/rme_kernel.c ****             
 518:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 468              		.loc 1 518 16
 469 0028 1830A0E3 		mov	r3, #24
 470 002c 08300BE5 		str	r3, [fp, #-8]
 471 0030 0A0000EA 		b	.L32
 472              	.L31:
 519:../../Source/Kernel/rme_kernel.c ****         }
 520:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 521:../../Source/Kernel/rme_kernel.c ****         else
 522:../../Source/Kernel/rme_kernel.c ****         {
 523:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 524:../../Source/Kernel/rme_kernel.c ****             
 525:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 473              		.loc 1 525 16
 474 0034 1030A0E3 		mov	r3, #16
 475 0038 08300BE5 		str	r3, [fp, #-8]
 476 003c 070000EA 		b	.L32
 477              	.L30:
 526:../../Source/Kernel/rme_kernel.c ****         }
 527:../../Source/Kernel/rme_kernel.c ****     }
 528:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 529:../../Source/Kernel/rme_kernel.c ****     else
 530:../../Source/Kernel/rme_kernel.c ****     {
 531:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 532:../../Source/Kernel/rme_kernel.c ****         
 533:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 534:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(8U))
 478              		.loc 1 534 11
 479 0040 10301BE5 		ldr	r3, [fp, #-16]
 480 0044 FF0053E3 		cmp	r3, #255
 481 0048 0200009A 		bls	.L33
 535:../../Source/Kernel/rme_kernel.c ****         {
 536:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 537:../../Source/Kernel/rme_kernel.c ****             
 538:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 482              		.loc 1 538 16
 483 004c 0830A0E3 		mov	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 19


 484 0050 08300BE5 		str	r3, [fp, #-8]
 485 0054 010000EA 		b	.L32
 486              	.L33:
 539:../../Source/Kernel/rme_kernel.c ****         }
 540:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 541:../../Source/Kernel/rme_kernel.c ****         else
 542:../../Source/Kernel/rme_kernel.c ****         {
 543:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 544:../../Source/Kernel/rme_kernel.c ****             
 545:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 487              		.loc 1 545 16
 488 0058 0030A0E3 		mov	r3, #0
 489 005c 08300BE5 		str	r3, [fp, #-8]
 490              	.L32:
 546:../../Source/Kernel/rme_kernel.c ****         }
 547:../../Source/Kernel/rme_kernel.c ****     }
 548:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 549:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 550:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(32U))
 551:../../Source/Kernel/rme_kernel.c ****     {
 552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 553:../../Source/Kernel/rme_kernel.c ****         
 554:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 555:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(48U))
 556:../../Source/Kernel/rme_kernel.c ****         {
 557:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 558:../../Source/Kernel/rme_kernel.c ****             
 559:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 560:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(56U))
 561:../../Source/Kernel/rme_kernel.c ****             {
 562:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 563:../../Source/Kernel/rme_kernel.c ****                 
 564:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 565:../../Source/Kernel/rme_kernel.c ****             }
 566:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 567:../../Source/Kernel/rme_kernel.c ****             else
 568:../../Source/Kernel/rme_kernel.c ****             {
 569:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 570:../../Source/Kernel/rme_kernel.c ****                 
 571:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 572:../../Source/Kernel/rme_kernel.c ****             }
 573:../../Source/Kernel/rme_kernel.c ****         }
 574:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 575:../../Source/Kernel/rme_kernel.c ****         else
 576:../../Source/Kernel/rme_kernel.c ****         {
 577:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 578:../../Source/Kernel/rme_kernel.c ****             
 579:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 580:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(40U))
 581:../../Source/Kernel/rme_kernel.c ****             {
 582:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 583:../../Source/Kernel/rme_kernel.c ****                 
 584:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 585:../../Source/Kernel/rme_kernel.c ****             }
 586:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 587:../../Source/Kernel/rme_kernel.c ****             else
 588:../../Source/Kernel/rme_kernel.c ****             {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 20


 589:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 590:../../Source/Kernel/rme_kernel.c ****                 
 591:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 592:../../Source/Kernel/rme_kernel.c ****             }
 593:../../Source/Kernel/rme_kernel.c ****         }
 594:../../Source/Kernel/rme_kernel.c ****     }
 595:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 596:../../Source/Kernel/rme_kernel.c ****     else
 597:../../Source/Kernel/rme_kernel.c ****     {
 598:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 599:../../Source/Kernel/rme_kernel.c ****         
 600:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 601:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(16U))
 602:../../Source/Kernel/rme_kernel.c ****         {
 603:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 604:../../Source/Kernel/rme_kernel.c ****             
 605:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 606:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(24U))
 607:../../Source/Kernel/rme_kernel.c ****             {
 608:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 609:../../Source/Kernel/rme_kernel.c ****                 
 610:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 611:../../Source/Kernel/rme_kernel.c ****             }
 612:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 613:../../Source/Kernel/rme_kernel.c ****             else
 614:../../Source/Kernel/rme_kernel.c ****             {
 615:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 616:../../Source/Kernel/rme_kernel.c ****                 
 617:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 618:../../Source/Kernel/rme_kernel.c ****             }
 619:../../Source/Kernel/rme_kernel.c ****         }
 620:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 621:../../Source/Kernel/rme_kernel.c ****         else
 622:../../Source/Kernel/rme_kernel.c ****         {
 623:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 624:../../Source/Kernel/rme_kernel.c ****             
 625:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 626:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(8U))
 627:../../Source/Kernel/rme_kernel.c ****             {
 628:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 629:../../Source/Kernel/rme_kernel.c ****                 
 630:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 631:../../Source/Kernel/rme_kernel.c ****             }
 632:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 633:../../Source/Kernel/rme_kernel.c ****             else
 634:../../Source/Kernel/rme_kernel.c ****             {
 635:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 636:../../Source/Kernel/rme_kernel.c ****                 
 637:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 638:../../Source/Kernel/rme_kernel.c ****             }
 639:../../Source/Kernel/rme_kernel.c ****         }
 640:../../Source/Kernel/rme_kernel.c ****     }
 641:../../Source/Kernel/rme_kernel.c **** #else
 642:../../Source/Kernel/rme_kernel.c **** #error Generic MSB for 128-bits & above are not implemented.
 643:../../Source/Kernel/rme_kernel.c **** #endif
 644:../../Source/Kernel/rme_kernel.c **** 
 645:../../Source/Kernel/rme_kernel.c ****     return Table[Value>>Bit]+Bit;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 21


 491              		.loc 1 645 23
 492 0060 10201BE5 		ldr	r2, [fp, #-16]
 493 0064 08301BE5 		ldr	r3, [fp, #-8]
 494 0068 3223A0E1 		lsr	r2, r2, r3
 495              		.loc 1 645 17
 496 006c 003000E3 		movw	r3, #:lower16:Table.1
 497 0070 003040E3 		movt	r3, #:upper16:Table.1
 498 0074 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 499 0078 0320A0E1 		mov	r2, r3
 500              		.loc 1 645 29
 501 007c 08301BE5 		ldr	r3, [fp, #-8]
 502 0080 033082E0 		add	r3, r2, r3
 646:../../Source/Kernel/rme_kernel.c **** }
 503              		.loc 1 646 1
 504 0084 0300A0E1 		mov	r0, r3
 505 0088 00D08BE2 		add	sp, fp, #0
 506              		.cfi_def_cfa_register 13
 507              		@ sp needed
 508 008c 04B09DE4 		ldr	fp, [sp], #4
 509              		.cfi_restore 11
 510              		.cfi_def_cfa_offset 0
 511 0090 1EFF2FE1 		bx	lr
 512              		.cfi_endproc
 513              	.LFE4:
 515              		.section	.text._RME_LSB_Generic,"ax",%progbits
 516              		.align	2
 517              		.global	_RME_LSB_Generic
 518              		.syntax unified
 519              		.arm
 521              	_RME_LSB_Generic:
 522              	.LFB5:
 647:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_MSB_Generic *********************************************/
 648:../../Source/Kernel/rme_kernel.c **** 
 649:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_LSB_Generic **************************************************
 650:../../Source/Kernel/rme_kernel.c **** Description : Find the LSB's position. This is a portable solution for all
 651:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 652:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 653:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to count.
 654:../../Source/Kernel/rme_kernel.c **** Output      : None.
 655:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 656:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 657:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_LSB_Generic(rme_ptr_t Value)
 658:../../Source/Kernel/rme_kernel.c **** {
 523              		.loc 1 658 1
 524              		.cfi_startproc
 525              		@ args = 0, pretend = 0, frame = 16
 526              		@ frame_needed = 1, uses_anonymous_args = 0
 527              		@ link register save eliminated.
 528 0000 04B02DE5 		str	fp, [sp, #-4]!
 529              		.cfi_def_cfa_offset 4
 530              		.cfi_offset 11, -4
 531 0004 00B08DE2 		add	fp, sp, #0
 532              		.cfi_def_cfa_register 11
 533 0008 14D04DE2 		sub	sp, sp, #20
 534 000c 10000BE5 		str	r0, [fp, #-16]
 659:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 660:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 22


 661:../../Source/Kernel/rme_kernel.c ****     {
 662:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 663:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 664:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 665:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 666:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 667:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 668:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 669:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 670:../../Source/Kernel/rme_kernel.c ****         7U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 671:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 672:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 673:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 674:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 675:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 676:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 677:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U
 678:../../Source/Kernel/rme_kernel.c ****     };
 679:../../Source/Kernel/rme_kernel.c ****     
 680:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 681:../../Source/Kernel/rme_kernel.c ****     /* 16-8 */
 682:../../Source/Kernel/rme_kernel.c ****     if((Value<<8U)==0U)
 683:../../Source/Kernel/rme_kernel.c ****     {
 684:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 685:../../Source/Kernel/rme_kernel.c ****         
 686:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 687:../../Source/Kernel/rme_kernel.c ****     }
 688:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 689:../../Source/Kernel/rme_kernel.c ****     else
 690:../../Source/Kernel/rme_kernel.c ****     {
 691:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 692:../../Source/Kernel/rme_kernel.c ****         
 693:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 694:../../Source/Kernel/rme_kernel.c ****     }
 695:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 696:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 697:../../Source/Kernel/rme_kernel.c ****     if((Value<<16U)==0U)
 535              		.loc 1 697 14
 536 0010 10301BE5 		ldr	r3, [fp, #-16]
 537 0014 0338A0E1 		lsl	r3, r3, #16
 538              		.loc 1 697 7
 539 0018 000053E3 		cmp	r3, #0
 540 001c 0900001A 		bne	.L36
 698:../../Source/Kernel/rme_kernel.c ****     {
 699:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 700:../../Source/Kernel/rme_kernel.c ****         
 701:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 702:../../Source/Kernel/rme_kernel.c ****         if((Value<<8U)==0U)
 541              		.loc 1 702 18
 542 0020 10301BE5 		ldr	r3, [fp, #-16]
 543 0024 0334A0E1 		lsl	r3, r3, #8
 544              		.loc 1 702 11
 545 0028 000053E3 		cmp	r3, #0
 546 002c 0200001A 		bne	.L37
 703:../../Source/Kernel/rme_kernel.c ****         {
 704:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 705:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 23


 706:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 547              		.loc 1 706 16
 548 0030 1830A0E3 		mov	r3, #24
 549 0034 08300BE5 		str	r3, [fp, #-8]
 550 0038 0B0000EA 		b	.L38
 551              	.L37:
 707:../../Source/Kernel/rme_kernel.c ****         }
 708:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 709:../../Source/Kernel/rme_kernel.c ****         else
 710:../../Source/Kernel/rme_kernel.c ****         {
 711:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 712:../../Source/Kernel/rme_kernel.c ****             
 713:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 552              		.loc 1 713 16
 553 003c 1030A0E3 		mov	r3, #16
 554 0040 08300BE5 		str	r3, [fp, #-8]
 555 0044 080000EA 		b	.L38
 556              	.L36:
 714:../../Source/Kernel/rme_kernel.c ****         }
 715:../../Source/Kernel/rme_kernel.c ****     }
 716:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 717:../../Source/Kernel/rme_kernel.c ****     else
 718:../../Source/Kernel/rme_kernel.c ****     {
 719:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 720:../../Source/Kernel/rme_kernel.c ****         
 721:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 722:../../Source/Kernel/rme_kernel.c ****         if((Value<<24U)==0U)
 557              		.loc 1 722 18
 558 0048 10301BE5 		ldr	r3, [fp, #-16]
 559 004c 033CA0E1 		lsl	r3, r3, #24
 560              		.loc 1 722 11
 561 0050 000053E3 		cmp	r3, #0
 562 0054 0200001A 		bne	.L39
 723:../../Source/Kernel/rme_kernel.c ****         {
 724:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 725:../../Source/Kernel/rme_kernel.c ****             
 726:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 563              		.loc 1 726 16
 564 0058 0830A0E3 		mov	r3, #8
 565 005c 08300BE5 		str	r3, [fp, #-8]
 566 0060 010000EA 		b	.L38
 567              	.L39:
 727:../../Source/Kernel/rme_kernel.c ****         }
 728:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 729:../../Source/Kernel/rme_kernel.c ****         else
 730:../../Source/Kernel/rme_kernel.c ****         {
 731:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 732:../../Source/Kernel/rme_kernel.c ****             
 733:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 568              		.loc 1 733 16
 569 0064 0030A0E3 		mov	r3, #0
 570 0068 08300BE5 		str	r3, [fp, #-8]
 571              	.L38:
 734:../../Source/Kernel/rme_kernel.c ****         }
 735:../../Source/Kernel/rme_kernel.c ****     }
 736:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 737:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 24


 738:../../Source/Kernel/rme_kernel.c ****     if((Value<<32U)==0U)
 739:../../Source/Kernel/rme_kernel.c ****     {
 740:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 741:../../Source/Kernel/rme_kernel.c ****         
 742:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 743:../../Source/Kernel/rme_kernel.c ****         if((Value<<16U)==0U)
 744:../../Source/Kernel/rme_kernel.c ****         {
 745:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 746:../../Source/Kernel/rme_kernel.c ****             
 747:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 748:../../Source/Kernel/rme_kernel.c ****             if((Value<<8U)==0U)
 749:../../Source/Kernel/rme_kernel.c ****             {
 750:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 751:../../Source/Kernel/rme_kernel.c ****                 
 752:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 753:../../Source/Kernel/rme_kernel.c ****             }
 754:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 755:../../Source/Kernel/rme_kernel.c ****             else
 756:../../Source/Kernel/rme_kernel.c ****             {
 757:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 758:../../Source/Kernel/rme_kernel.c ****                 
 759:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 760:../../Source/Kernel/rme_kernel.c ****             }
 761:../../Source/Kernel/rme_kernel.c ****         }
 762:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 763:../../Source/Kernel/rme_kernel.c ****         else
 764:../../Source/Kernel/rme_kernel.c ****         {
 765:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 766:../../Source/Kernel/rme_kernel.c ****             
 767:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 768:../../Source/Kernel/rme_kernel.c ****             if((Value<<24U)==0U)
 769:../../Source/Kernel/rme_kernel.c ****             {
 770:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 771:../../Source/Kernel/rme_kernel.c ****                 
 772:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 773:../../Source/Kernel/rme_kernel.c ****             }
 774:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 775:../../Source/Kernel/rme_kernel.c ****             else
 776:../../Source/Kernel/rme_kernel.c ****             {
 777:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 778:../../Source/Kernel/rme_kernel.c ****                 
 779:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 780:../../Source/Kernel/rme_kernel.c ****             }
 781:../../Source/Kernel/rme_kernel.c ****         }
 782:../../Source/Kernel/rme_kernel.c ****     }
 783:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 784:../../Source/Kernel/rme_kernel.c ****     else
 785:../../Source/Kernel/rme_kernel.c ****     {
 786:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 787:../../Source/Kernel/rme_kernel.c ****         
 788:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 789:../../Source/Kernel/rme_kernel.c ****         if((Value<<48U)==0U)
 790:../../Source/Kernel/rme_kernel.c ****         {
 791:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 792:../../Source/Kernel/rme_kernel.c ****             
 793:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 794:../../Source/Kernel/rme_kernel.c ****             if((Value<<40U)==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 25


 795:../../Source/Kernel/rme_kernel.c ****             {
 796:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 797:../../Source/Kernel/rme_kernel.c ****                 
 798:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 799:../../Source/Kernel/rme_kernel.c ****             }
 800:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 801:../../Source/Kernel/rme_kernel.c ****             else
 802:../../Source/Kernel/rme_kernel.c ****             {
 803:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 804:../../Source/Kernel/rme_kernel.c ****                 
 805:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 806:../../Source/Kernel/rme_kernel.c ****             }
 807:../../Source/Kernel/rme_kernel.c ****         }
 808:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 809:../../Source/Kernel/rme_kernel.c ****         else
 810:../../Source/Kernel/rme_kernel.c ****         {
 811:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 812:../../Source/Kernel/rme_kernel.c ****             
 813:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 814:../../Source/Kernel/rme_kernel.c ****             if((Value<<56U)==0U)
 815:../../Source/Kernel/rme_kernel.c ****             {
 816:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 817:../../Source/Kernel/rme_kernel.c ****                 
 818:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 819:../../Source/Kernel/rme_kernel.c ****             }
 820:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 821:../../Source/Kernel/rme_kernel.c ****             else
 822:../../Source/Kernel/rme_kernel.c ****             {
 823:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 824:../../Source/Kernel/rme_kernel.c ****                 
 825:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 826:../../Source/Kernel/rme_kernel.c ****             }
 827:../../Source/Kernel/rme_kernel.c ****         }
 828:../../Source/Kernel/rme_kernel.c ****     }
 829:../../Source/Kernel/rme_kernel.c **** #else
 830:../../Source/Kernel/rme_kernel.c **** #error Generic LSB for 128-bits & above are not implemented.
 831:../../Source/Kernel/rme_kernel.c **** #endif
 832:../../Source/Kernel/rme_kernel.c **** 
 833:../../Source/Kernel/rme_kernel.c ****     return Table[(rme_u8_t)(Value>>Bit)]+Bit;
 572              		.loc 1 833 34
 573 006c 10201BE5 		ldr	r2, [fp, #-16]
 574 0070 08301BE5 		ldr	r3, [fp, #-8]
 575 0074 3233A0E1 		lsr	r3, r2, r3
 576              		.loc 1 833 18
 577 0078 7330EFE6 		uxtb	r3, r3
 578 007c 0320A0E1 		mov	r2, r3
 579              		.loc 1 833 17
 580 0080 003000E3 		movw	r3, #:lower16:Table.0
 581 0084 003040E3 		movt	r3, #:upper16:Table.0
 582 0088 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 583 008c 0320A0E1 		mov	r2, r3
 584              		.loc 1 833 41
 585 0090 08301BE5 		ldr	r3, [fp, #-8]
 586 0094 033082E0 		add	r3, r2, r3
 834:../../Source/Kernel/rme_kernel.c **** }
 587              		.loc 1 834 1
 588 0098 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 26


 589 009c 00D08BE2 		add	sp, fp, #0
 590              		.cfi_def_cfa_register 13
 591              		@ sp needed
 592 00a0 04B09DE4 		ldr	fp, [sp], #4
 593              		.cfi_restore 11
 594              		.cfi_def_cfa_offset 0
 595 00a4 1EFF2FE1 		bx	lr
 596              		.cfi_endproc
 597              	.LFE5:
 599              		.section	.text._RME_Comp_Swap_Single,"ax",%progbits
 600              		.align	2
 601              		.global	_RME_Comp_Swap_Single
 602              		.syntax unified
 603              		.arm
 605              	_RME_Comp_Swap_Single:
 606              	.LFB6:
 835:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_LSB_Generic *********************************************/
 836:../../Source/Kernel/rme_kernel.c **** 
 837:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Comp_Swap_Single *********************************************
 838:../../Source/Kernel/rme_kernel.c **** Description : The compare-and-swap atomic instruction. If the Old value is
 839:../../Source/Kernel/rme_kernel.c ****               equal to *Ptr, then set the *Ptr as New and return 1; else return
 840:../../Source/Kernel/rme_kernel.c ****               0.
 841:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 842:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 843:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Old - The old value.
 844:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t New - The new value.
 845:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 846:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - If successful, 1; else 0.
 847:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 848:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Comp_Swap_Single(volatile rme_ptr_t* Ptr,
 849:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Old,
 850:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t New)
 851:../../Source/Kernel/rme_kernel.c **** {
 607              		.loc 1 851 1
 608              		.cfi_startproc
 609              		@ args = 0, pretend = 0, frame = 16
 610              		@ frame_needed = 1, uses_anonymous_args = 0
 611              		@ link register save eliminated.
 612 0000 04B02DE5 		str	fp, [sp, #-4]!
 613              		.cfi_def_cfa_offset 4
 614              		.cfi_offset 11, -4
 615 0004 00B08DE2 		add	fp, sp, #0
 616              		.cfi_def_cfa_register 11
 617 0008 14D04DE2 		sub	sp, sp, #20
 618 000c 08000BE5 		str	r0, [fp, #-8]
 619 0010 0C100BE5 		str	r1, [fp, #-12]
 620 0014 10200BE5 		str	r2, [fp, #-16]
 852:../../Source/Kernel/rme_kernel.c ****     if(*Ptr==Old)
 621              		.loc 1 852 8
 622 0018 08301BE5 		ldr	r3, [fp, #-8]
 623 001c 003093E5 		ldr	r3, [r3]
 624              		.loc 1 852 7
 625 0020 0C201BE5 		ldr	r2, [fp, #-12]
 626 0024 030052E1 		cmp	r2, r3
 627 0028 0400001A 		bne	.L42
 853:../../Source/Kernel/rme_kernel.c ****     {
 854:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 27


 855:../../Source/Kernel/rme_kernel.c ****         
 856:../../Source/Kernel/rme_kernel.c ****         *Ptr=New;
 628              		.loc 1 856 13
 629 002c 08301BE5 		ldr	r3, [fp, #-8]
 630 0030 10201BE5 		ldr	r2, [fp, #-16]
 631 0034 002083E5 		str	r2, [r3]
 857:../../Source/Kernel/rme_kernel.c ****         return 1U;
 632              		.loc 1 857 16
 633 0038 0130A0E3 		mov	r3, #1
 634 003c 000000EA 		b	.L43
 635              	.L42:
 858:../../Source/Kernel/rme_kernel.c ****     }
 859:../../Source/Kernel/rme_kernel.c ****     else
 860:../../Source/Kernel/rme_kernel.c ****     {
 861:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 862:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 863:../../Source/Kernel/rme_kernel.c ****     }
 864:../../Source/Kernel/rme_kernel.c **** 
 865:../../Source/Kernel/rme_kernel.c ****     return 0U;
 636              		.loc 1 865 12
 637 0040 0030A0E3 		mov	r3, #0
 638              	.L43:
 866:../../Source/Kernel/rme_kernel.c **** }
 639              		.loc 1 866 1
 640 0044 0300A0E1 		mov	r0, r3
 641 0048 00D08BE2 		add	sp, fp, #0
 642              		.cfi_def_cfa_register 13
 643              		@ sp needed
 644 004c 04B09DE4 		ldr	fp, [sp], #4
 645              		.cfi_restore 11
 646              		.cfi_def_cfa_offset 0
 647 0050 1EFF2FE1 		bx	lr
 648              		.cfi_endproc
 649              	.LFE6:
 651              		.section	.text._RME_Fetch_Add_Single,"ax",%progbits
 652              		.align	2
 653              		.global	_RME_Fetch_Add_Single
 654              		.syntax unified
 655              		.arm
 657              	_RME_Fetch_Add_Single:
 658              	.LFB7:
 867:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Comp_Swap_Single ****************************************/
 868:../../Source/Kernel/rme_kernel.c **** 
 869:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_Add_Single *********************************************
 870:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-add atomic instruction. Increase the value that is
 871:../../Source/Kernel/rme_kernel.c ****               pointed to by the pointer, and return the value before addition.
 872:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 873:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 874:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Addend - The number to add.
 875:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 876:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the addition.
 877:../../Source/Kernel/rme_kernel.c **** *******************************************************************************/
 878:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_Add_Single(volatile rme_ptr_t* Ptr,
 879:../../Source/Kernel/rme_kernel.c ****                                 rme_cnt_t Addend)
 880:../../Source/Kernel/rme_kernel.c **** {
 659              		.loc 1 880 1
 660              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 28


 661              		@ args = 0, pretend = 0, frame = 16
 662              		@ frame_needed = 1, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664 0000 04B02DE5 		str	fp, [sp, #-4]!
 665              		.cfi_def_cfa_offset 4
 666              		.cfi_offset 11, -4
 667 0004 00B08DE2 		add	fp, sp, #0
 668              		.cfi_def_cfa_register 11
 669 0008 14D04DE2 		sub	sp, sp, #20
 670 000c 10000BE5 		str	r0, [fp, #-16]
 671 0010 14100BE5 		str	r1, [fp, #-20]
 881:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Old;
 882:../../Source/Kernel/rme_kernel.c **** 
 883:../../Source/Kernel/rme_kernel.c ****     Old=(rme_cnt_t)(*Ptr);
 672              		.loc 1 883 21
 673 0014 10301BE5 		ldr	r3, [fp, #-16]
 674 0018 003093E5 		ldr	r3, [r3]
 675              		.loc 1 883 8
 676 001c 08300BE5 		str	r3, [fp, #-8]
 884:../../Source/Kernel/rme_kernel.c ****     *Ptr=(rme_ptr_t)(Old+Addend);
 677              		.loc 1 884 25
 678 0020 08201BE5 		ldr	r2, [fp, #-8]
 679 0024 14301BE5 		ldr	r3, [fp, #-20]
 680 0028 033082E0 		add	r3, r2, r3
 681              		.loc 1 884 10
 682 002c 0320A0E1 		mov	r2, r3
 683              		.loc 1 884 9
 684 0030 10301BE5 		ldr	r3, [fp, #-16]
 685 0034 002083E5 		str	r2, [r3]
 885:../../Source/Kernel/rme_kernel.c **** 
 886:../../Source/Kernel/rme_kernel.c ****     return (rme_ptr_t)Old;
 686              		.loc 1 886 12
 687 0038 08301BE5 		ldr	r3, [fp, #-8]
 887:../../Source/Kernel/rme_kernel.c **** }
 688              		.loc 1 887 1
 689 003c 0300A0E1 		mov	r0, r3
 690 0040 00D08BE2 		add	sp, fp, #0
 691              		.cfi_def_cfa_register 13
 692              		@ sp needed
 693 0044 04B09DE4 		ldr	fp, [sp], #4
 694              		.cfi_restore 11
 695              		.cfi_def_cfa_offset 0
 696 0048 1EFF2FE1 		bx	lr
 697              		.cfi_endproc
 698              	.LFE7:
 700              		.section	.text._RME_Fetch_And_Single,"ax",%progbits
 701              		.align	2
 702              		.global	_RME_Fetch_And_Single
 703              		.syntax unified
 704              		.arm
 706              	_RME_Fetch_And_Single:
 707              	.LFB8:
 888:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_Add_Single ****************************************/
 889:../../Source/Kernel/rme_kernel.c **** 
 890:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_And_Single *********************************************
 891:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-logic-and atomic instruction. Logic AND the pointer
 892:../../Source/Kernel/rme_kernel.c ****               value with the operand, and return the value before logic AND.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 29


 893:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 894:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 895:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Operand - The number to logic AND with the destination.
 896:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 897:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the AND operation.
 898:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 899:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_And_Single(volatile rme_ptr_t* Ptr,
 900:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Operand)
 901:../../Source/Kernel/rme_kernel.c **** {
 708              		.loc 1 901 1
 709              		.cfi_startproc
 710              		@ args = 0, pretend = 0, frame = 16
 711              		@ frame_needed = 1, uses_anonymous_args = 0
 712              		@ link register save eliminated.
 713 0000 04B02DE5 		str	fp, [sp, #-4]!
 714              		.cfi_def_cfa_offset 4
 715              		.cfi_offset 11, -4
 716 0004 00B08DE2 		add	fp, sp, #0
 717              		.cfi_def_cfa_register 11
 718 0008 14D04DE2 		sub	sp, sp, #20
 719 000c 10000BE5 		str	r0, [fp, #-16]
 720 0010 14100BE5 		str	r1, [fp, #-20]
 902:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old;
 903:../../Source/Kernel/rme_kernel.c **** 
 904:../../Source/Kernel/rme_kernel.c ****     Old=*Ptr;
 721              		.loc 1 904 8
 722 0014 10301BE5 		ldr	r3, [fp, #-16]
 723 0018 003093E5 		ldr	r3, [r3]
 724 001c 08300BE5 		str	r3, [fp, #-8]
 905:../../Source/Kernel/rme_kernel.c ****     *Ptr=Old&Operand;
 725              		.loc 1 905 13
 726 0020 08201BE5 		ldr	r2, [fp, #-8]
 727 0024 14301BE5 		ldr	r3, [fp, #-20]
 728 0028 032002E0 		and	r2, r2, r3
 729              		.loc 1 905 9
 730 002c 10301BE5 		ldr	r3, [fp, #-16]
 731 0030 002083E5 		str	r2, [r3]
 906:../../Source/Kernel/rme_kernel.c **** 
 907:../../Source/Kernel/rme_kernel.c ****     return Old;
 732              		.loc 1 907 12
 733 0034 08301BE5 		ldr	r3, [fp, #-8]
 908:../../Source/Kernel/rme_kernel.c **** }
 734              		.loc 1 908 1
 735 0038 0300A0E1 		mov	r0, r3
 736 003c 00D08BE2 		add	sp, fp, #0
 737              		.cfi_def_cfa_register 13
 738              		@ sp needed
 739 0040 04B09DE4 		ldr	fp, [sp], #4
 740              		.cfi_restore 11
 741              		.cfi_def_cfa_offset 0
 742 0044 1EFF2FE1 		bx	lr
 743              		.cfi_endproc
 744              	.LFE8:
 746              		.section	.text._RME_List_Crt,"ax",%progbits
 747              		.align	2
 748              		.global	_RME_List_Crt
 749              		.syntax unified
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 30


 750              		.arm
 752              	_RME_List_Crt:
 753              	.LFB9:
 909:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_And_Single ****************************************/
 910:../../Source/Kernel/rme_kernel.c **** 
 911:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Crt *****************************************************
 912:../../Source/Kernel/rme_kernel.c **** Description : Create a doubly linked list.
 913:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Head - The pointer to the list head.
 914:../../Source/Kernel/rme_kernel.c **** Output      : None.
 915:../../Source/Kernel/rme_kernel.c **** Return      : None.
 916:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 917:../../Source/Kernel/rme_kernel.c **** void _RME_List_Crt(struct RME_List* Head)
 918:../../Source/Kernel/rme_kernel.c **** {
 754              		.loc 1 918 1
 755              		.cfi_startproc
 756              		@ args = 0, pretend = 0, frame = 8
 757              		@ frame_needed = 1, uses_anonymous_args = 0
 758              		@ link register save eliminated.
 759 0000 04B02DE5 		str	fp, [sp, #-4]!
 760              		.cfi_def_cfa_offset 4
 761              		.cfi_offset 11, -4
 762 0004 00B08DE2 		add	fp, sp, #0
 763              		.cfi_def_cfa_register 11
 764 0008 0CD04DE2 		sub	sp, sp, #12
 765 000c 08000BE5 		str	r0, [fp, #-8]
 919:../../Source/Kernel/rme_kernel.c ****     Head->Prev=Head;
 766              		.loc 1 919 15
 767 0010 08301BE5 		ldr	r3, [fp, #-8]
 768 0014 08201BE5 		ldr	r2, [fp, #-8]
 769 0018 042083E5 		str	r2, [r3, #4]
 920:../../Source/Kernel/rme_kernel.c ****     Head->Next=Head;
 770              		.loc 1 920 15
 771 001c 08301BE5 		ldr	r3, [fp, #-8]
 772 0020 08201BE5 		ldr	r2, [fp, #-8]
 773 0024 002083E5 		str	r2, [r3]
 921:../../Source/Kernel/rme_kernel.c **** }
 774              		.loc 1 921 1
 775 0028 00F020E3 		nop
 776 002c 00D08BE2 		add	sp, fp, #0
 777              		.cfi_def_cfa_register 13
 778              		@ sp needed
 779 0030 04B09DE4 		ldr	fp, [sp], #4
 780              		.cfi_restore 11
 781              		.cfi_def_cfa_offset 0
 782 0034 1EFF2FE1 		bx	lr
 783              		.cfi_endproc
 784              	.LFE9:
 786              		.section	.text._RME_List_Del,"ax",%progbits
 787              		.align	2
 788              		.global	_RME_List_Del
 789              		.syntax unified
 790              		.arm
 792              	_RME_List_Del:
 793              	.LFB10:
 922:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Crt ************************************************/
 923:../../Source/Kernel/rme_kernel.c **** 
 924:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Del *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 31


 925:../../Source/Kernel/rme_kernel.c **** Description : Delete a node from the doubly-linked list.
 926:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Prev - The previous node.
 927:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 928:../../Source/Kernel/rme_kernel.c **** Output      : None.
 929:../../Source/Kernel/rme_kernel.c **** Return      : None.
 930:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 931:../../Source/Kernel/rme_kernel.c **** void _RME_List_Del(struct RME_List* Prev,
 932:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 933:../../Source/Kernel/rme_kernel.c **** {
 794              		.loc 1 933 1
 795              		.cfi_startproc
 796              		@ args = 0, pretend = 0, frame = 8
 797              		@ frame_needed = 1, uses_anonymous_args = 0
 798              		@ link register save eliminated.
 799 0000 04B02DE5 		str	fp, [sp, #-4]!
 800              		.cfi_def_cfa_offset 4
 801              		.cfi_offset 11, -4
 802 0004 00B08DE2 		add	fp, sp, #0
 803              		.cfi_def_cfa_register 11
 804 0008 0CD04DE2 		sub	sp, sp, #12
 805 000c 08000BE5 		str	r0, [fp, #-8]
 806 0010 0C100BE5 		str	r1, [fp, #-12]
 934:../../Source/Kernel/rme_kernel.c ****     Next->Prev=Prev;
 807              		.loc 1 934 15
 808 0014 0C301BE5 		ldr	r3, [fp, #-12]
 809 0018 08201BE5 		ldr	r2, [fp, #-8]
 810 001c 042083E5 		str	r2, [r3, #4]
 935:../../Source/Kernel/rme_kernel.c ****     Prev->Next=Next;
 811              		.loc 1 935 15
 812 0020 08301BE5 		ldr	r3, [fp, #-8]
 813 0024 0C201BE5 		ldr	r2, [fp, #-12]
 814 0028 002083E5 		str	r2, [r3]
 936:../../Source/Kernel/rme_kernel.c **** }
 815              		.loc 1 936 1
 816 002c 00F020E3 		nop
 817 0030 00D08BE2 		add	sp, fp, #0
 818              		.cfi_def_cfa_register 13
 819              		@ sp needed
 820 0034 04B09DE4 		ldr	fp, [sp], #4
 821              		.cfi_restore 11
 822              		.cfi_def_cfa_offset 0
 823 0038 1EFF2FE1 		bx	lr
 824              		.cfi_endproc
 825              	.LFE10:
 827              		.section	.text._RME_List_Ins,"ax",%progbits
 828              		.align	2
 829              		.global	_RME_List_Ins
 830              		.syntax unified
 831              		.arm
 833              	_RME_List_Ins:
 834              	.LFB11:
 937:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Del ************************************************/
 938:../../Source/Kernel/rme_kernel.c **** 
 939:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Ins *****************************************************
 940:../../Source/Kernel/rme_kernel.c **** Description : Insert a node to the doubly-linked list.
 941:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* New - The new node to insert.
 942:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Prev - The previous node.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 32


 943:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 944:../../Source/Kernel/rme_kernel.c **** Output      : None.
 945:../../Source/Kernel/rme_kernel.c **** Return      : None.
 946:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 947:../../Source/Kernel/rme_kernel.c **** void _RME_List_Ins(struct RME_List* New,
 948:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Prev,
 949:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 950:../../Source/Kernel/rme_kernel.c **** {
 835              		.loc 1 950 1
 836              		.cfi_startproc
 837              		@ args = 0, pretend = 0, frame = 16
 838              		@ frame_needed = 1, uses_anonymous_args = 0
 839              		@ link register save eliminated.
 840 0000 04B02DE5 		str	fp, [sp, #-4]!
 841              		.cfi_def_cfa_offset 4
 842              		.cfi_offset 11, -4
 843 0004 00B08DE2 		add	fp, sp, #0
 844              		.cfi_def_cfa_register 11
 845 0008 14D04DE2 		sub	sp, sp, #20
 846 000c 08000BE5 		str	r0, [fp, #-8]
 847 0010 0C100BE5 		str	r1, [fp, #-12]
 848 0014 10200BE5 		str	r2, [fp, #-16]
 951:../../Source/Kernel/rme_kernel.c ****     Next->Prev=New;
 849              		.loc 1 951 15
 850 0018 10301BE5 		ldr	r3, [fp, #-16]
 851 001c 08201BE5 		ldr	r2, [fp, #-8]
 852 0020 042083E5 		str	r2, [r3, #4]
 952:../../Source/Kernel/rme_kernel.c ****     New->Next=Next;
 853              		.loc 1 952 14
 854 0024 08301BE5 		ldr	r3, [fp, #-8]
 855 0028 10201BE5 		ldr	r2, [fp, #-16]
 856 002c 002083E5 		str	r2, [r3]
 953:../../Source/Kernel/rme_kernel.c ****     New->Prev=Prev;
 857              		.loc 1 953 14
 858 0030 08301BE5 		ldr	r3, [fp, #-8]
 859 0034 0C201BE5 		ldr	r2, [fp, #-12]
 860 0038 042083E5 		str	r2, [r3, #4]
 954:../../Source/Kernel/rme_kernel.c ****     Prev->Next=New;
 861              		.loc 1 954 15
 862 003c 0C301BE5 		ldr	r3, [fp, #-12]
 863 0040 08201BE5 		ldr	r2, [fp, #-8]
 864 0044 002083E5 		str	r2, [r3]
 955:../../Source/Kernel/rme_kernel.c **** }
 865              		.loc 1 955 1
 866 0048 00F020E3 		nop
 867 004c 00D08BE2 		add	sp, fp, #0
 868              		.cfi_def_cfa_register 13
 869              		@ sp needed
 870 0050 04B09DE4 		ldr	fp, [sp], #4
 871              		.cfi_restore 11
 872              		.cfi_def_cfa_offset 0
 873 0054 1EFF2FE1 		bx	lr
 874              		.cfi_endproc
 875              	.LFE11:
 877              		.section	.text._RME_Clear,"ax",%progbits
 878              		.align	2
 879              		.global	_RME_Clear
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 33


 880              		.syntax unified
 881              		.arm
 883              	_RME_Clear:
 884              	.LFB12:
 956:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Ins ************************************************/
 957:../../Source/Kernel/rme_kernel.c **** 
 958:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Clear ********************************************************
 959:../../Source/Kernel/rme_kernel.c **** Description : Memset a memory area to zero. This is not fast due to byte operations;
 960:../../Source/Kernel/rme_kernel.c ****               this is not meant for large memory. However, it is indeed secure.
 961:../../Source/Kernel/rme_kernel.c **** Input       : void* Addr - The address to clear.
 962:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
 963:../../Source/Kernel/rme_kernel.c **** Output      : None.
 964:../../Source/Kernel/rme_kernel.c **** Return      : None.
 965:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 966:../../Source/Kernel/rme_kernel.c **** void _RME_Clear(void* Addr,
 967:../../Source/Kernel/rme_kernel.c ****                 rme_ptr_t Size)
 968:../../Source/Kernel/rme_kernel.c **** {
 885              		.loc 1 968 1
 886              		.cfi_startproc
 887              		@ args = 0, pretend = 0, frame = 16
 888              		@ frame_needed = 1, uses_anonymous_args = 0
 889              		@ link register save eliminated.
 890 0000 04B02DE5 		str	fp, [sp, #-4]!
 891              		.cfi_def_cfa_offset 4
 892              		.cfi_offset 11, -4
 893 0004 00B08DE2 		add	fp, sp, #0
 894              		.cfi_def_cfa_register 11
 895 0008 14D04DE2 		sub	sp, sp, #20
 896 000c 10000BE5 		str	r0, [fp, #-16]
 897 0010 14100BE5 		str	r1, [fp, #-20]
 969:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 970:../../Source/Kernel/rme_kernel.c **** 
 971:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Size;Count++)
 898              		.loc 1 971 14
 899 0014 0030A0E3 		mov	r3, #0
 900 0018 08300BE5 		str	r3, [fp, #-8]
 901              		.loc 1 971 5
 902 001c 070000EA 		b	.L52
 903              	.L53:
 972:../../Source/Kernel/rme_kernel.c ****     {
 973:../../Source/Kernel/rme_kernel.c ****         ((rme_u8_t*)Addr)[Count]=0U;
 904              		.loc 1 973 26 discriminator 3
 905 0020 10201BE5 		ldr	r2, [fp, #-16]
 906 0024 08301BE5 		ldr	r3, [fp, #-8]
 907 0028 033082E0 		add	r3, r2, r3
 908              		.loc 1 973 33 discriminator 3
 909 002c 0020A0E3 		mov	r2, #0
 910 0030 0020C3E5 		strb	r2, [r3]
 971:../../Source/Kernel/rme_kernel.c ****     {
 911              		.loc 1 971 34 discriminator 3
 912 0034 08301BE5 		ldr	r3, [fp, #-8]
 913 0038 013083E2 		add	r3, r3, #1
 914 003c 08300BE5 		str	r3, [fp, #-8]
 915              	.L52:
 971:../../Source/Kernel/rme_kernel.c ****     {
 916              		.loc 1 971 5 discriminator 1
 917 0040 08201BE5 		ldr	r2, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 34


 918 0044 14301BE5 		ldr	r3, [fp, #-20]
 919 0048 030052E1 		cmp	r2, r3
 920 004c F3FFFF3A 		bcc	.L53
 974:../../Source/Kernel/rme_kernel.c ****     }
 975:../../Source/Kernel/rme_kernel.c **** }
 921              		.loc 1 975 1
 922 0050 00F020E3 		nop
 923 0054 00F020E3 		nop
 924 0058 00D08BE2 		add	sp, fp, #0
 925              		.cfi_def_cfa_register 13
 926              		@ sp needed
 927 005c 04B09DE4 		ldr	fp, [sp], #4
 928              		.cfi_restore 11
 929              		.cfi_def_cfa_offset 0
 930 0060 1EFF2FE1 		bx	lr
 931              		.cfi_endproc
 932              	.LFE12:
 934              		.section	.text._RME_Memcmp,"ax",%progbits
 935              		.align	2
 936              		.global	_RME_Memcmp
 937              		.syntax unified
 938              		.arm
 940              	_RME_Memcmp:
 941              	.LFB13:
 976:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Clear ***************************************************/
 977:../../Source/Kernel/rme_kernel.c **** 
 978:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcmp *******************************************************
 979:../../Source/Kernel/rme_kernel.c **** Description : Compare two memory segments to see if they are equal. This is not
 980:../../Source/Kernel/rme_kernel.c ****               fast due to byte operations; this is not meant for large memory.
 981:../../Source/Kernel/rme_kernel.c **** Input       : const void* Ptr1 - The first memory region.
 982:../../Source/Kernel/rme_kernel.c ****               const void* Ptr2 - The second memory region.
 983:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
 984:../../Source/Kernel/rme_kernel.c **** Output      : None.
 985:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If Ptr1>Ptr2, then return a positive value; else a negative
 986:../../Source/Kernel/rme_kernel.c ****                           value. If Ptr1==Ptr2, then return 0;
 987:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 988:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Memcmp(const void* Ptr1,
 989:../../Source/Kernel/rme_kernel.c ****                       const void* Ptr2,
 990:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Num)
 991:../../Source/Kernel/rme_kernel.c **** {
 942              		.loc 1 991 1
 943              		.cfi_startproc
 944              		@ args = 0, pretend = 0, frame = 32
 945              		@ frame_needed = 1, uses_anonymous_args = 0
 946              		@ link register save eliminated.
 947 0000 04B02DE5 		str	fp, [sp, #-4]!
 948              		.cfi_def_cfa_offset 4
 949              		.cfi_offset 11, -4
 950 0004 00B08DE2 		add	fp, sp, #0
 951              		.cfi_def_cfa_register 11
 952 0008 24D04DE2 		sub	sp, sp, #36
 953 000c 18000BE5 		str	r0, [fp, #-24]
 954 0010 1C100BE5 		str	r1, [fp, #-28]
 955 0014 20200BE5 		str	r2, [fp, #-32]
 992:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Dst;
 993:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Src;
 994:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 35


 995:../../Source/Kernel/rme_kernel.c **** 
 996:../../Source/Kernel/rme_kernel.c ****     Dst=(const rme_s8_t*)Ptr1;
 956              		.loc 1 996 8
 957 0018 18301BE5 		ldr	r3, [fp, #-24]
 958 001c 0C300BE5 		str	r3, [fp, #-12]
 997:../../Source/Kernel/rme_kernel.c ****     Src=(const rme_s8_t*)Ptr2;
 959              		.loc 1 997 8
 960 0020 1C301BE5 		ldr	r3, [fp, #-28]
 961 0024 10300BE5 		str	r3, [fp, #-16]
 998:../../Source/Kernel/rme_kernel.c **** 
 999:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 962              		.loc 1 999 14
 963 0028 0030A0E3 		mov	r3, #0
 964 002c 08300BE5 		str	r3, [fp, #-8]
 965              		.loc 1 999 5
 966 0030 170000EA 		b	.L55
 967              	.L58:
1000:../../Source/Kernel/rme_kernel.c ****     {
1001:../../Source/Kernel/rme_kernel.c ****         if(Dst[Count]!=Src[Count])
 968              		.loc 1 1001 15
 969 0034 0C201BE5 		ldr	r2, [fp, #-12]
 970 0038 08301BE5 		ldr	r3, [fp, #-8]
 971 003c 033082E0 		add	r3, r2, r3
 972 0040 D020D3E1 		ldrsb	r2, [r3]
 973              		.loc 1 1001 27
 974 0044 10101BE5 		ldr	r1, [fp, #-16]
 975 0048 08301BE5 		ldr	r3, [fp, #-8]
 976 004c 033081E0 		add	r3, r1, r3
 977 0050 D030D3E1 		ldrsb	r3, [r3]
 978              		.loc 1 1001 11
 979 0054 030052E1 		cmp	r2, r3
 980 0058 0A00000A 		beq	.L56
1002:../../Source/Kernel/rme_kernel.c ****         {
1003:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1004:../../Source/Kernel/rme_kernel.c ****             
1005:../../Source/Kernel/rme_kernel.c ****             return Dst[Count]-Src[Count];
 981              		.loc 1 1005 23
 982 005c 0C201BE5 		ldr	r2, [fp, #-12]
 983 0060 08301BE5 		ldr	r3, [fp, #-8]
 984 0064 033082E0 		add	r3, r2, r3
 985 0068 D030D3E1 		ldrsb	r3, [r3]
 986 006c 0310A0E1 		mov	r1, r3
 987              		.loc 1 1005 34
 988 0070 10201BE5 		ldr	r2, [fp, #-16]
 989 0074 08301BE5 		ldr	r3, [fp, #-8]
 990 0078 033082E0 		add	r3, r2, r3
 991 007c D030D3E1 		ldrsb	r3, [r3]
 992              		.loc 1 1005 30
 993 0080 033041E0 		sub	r3, r1, r3
 994 0084 070000EA 		b	.L57
 995              	.L56:
 999:../../Source/Kernel/rme_kernel.c ****     {
 996              		.loc 1 999 33 discriminator 2
 997 0088 08301BE5 		ldr	r3, [fp, #-8]
 998 008c 013083E2 		add	r3, r3, #1
 999 0090 08300BE5 		str	r3, [fp, #-8]
 1000              	.L55:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 36


 999:../../Source/Kernel/rme_kernel.c ****     {
 1001              		.loc 1 999 5 discriminator 1
 1002 0094 08201BE5 		ldr	r2, [fp, #-8]
 1003 0098 20301BE5 		ldr	r3, [fp, #-32]
 1004 009c 030052E1 		cmp	r2, r3
 1005 00a0 E3FFFF3A 		bcc	.L58
1006:../../Source/Kernel/rme_kernel.c ****         }
1007:../../Source/Kernel/rme_kernel.c ****         else
1008:../../Source/Kernel/rme_kernel.c ****         {
1009:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1010:../../Source/Kernel/rme_kernel.c ****             /* No action required */
1011:../../Source/Kernel/rme_kernel.c ****         }
1012:../../Source/Kernel/rme_kernel.c ****     }
1013:../../Source/Kernel/rme_kernel.c **** 
1014:../../Source/Kernel/rme_kernel.c ****     return 0;
 1006              		.loc 1 1014 12
 1007 00a4 0030A0E3 		mov	r3, #0
 1008              	.L57:
1015:../../Source/Kernel/rme_kernel.c **** }
 1009              		.loc 1 1015 1
 1010 00a8 0300A0E1 		mov	r0, r3
 1011 00ac 00D08BE2 		add	sp, fp, #0
 1012              		.cfi_def_cfa_register 13
 1013              		@ sp needed
 1014 00b0 04B09DE4 		ldr	fp, [sp], #4
 1015              		.cfi_restore 11
 1016              		.cfi_def_cfa_offset 0
 1017 00b4 1EFF2FE1 		bx	lr
 1018              		.cfi_endproc
 1019              	.LFE13:
 1021              		.section	.text._RME_Memcpy,"ax",%progbits
 1022              		.align	2
 1023              		.global	_RME_Memcpy
 1024              		.syntax unified
 1025              		.arm
 1027              	_RME_Memcpy:
 1028              	.LFB14:
1016:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcmp **************************************************/
1017:../../Source/Kernel/rme_kernel.c **** 
1018:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcpy *******************************************************
1019:../../Source/Kernel/rme_kernel.c **** Description : Copy one segment of memory to another segment. This is not fast
1020:../../Source/Kernel/rme_kernel.c ****               due to byte operations; this is not meant for large memory.
1021:../../Source/Kernel/rme_kernel.c **** Input       : volatile void* Dst - The first memory region.
1022:../../Source/Kernel/rme_kernel.c ****               volatile void* Src - The second memory region.
1023:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
1024:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
1025:../../Source/Kernel/rme_kernel.c **** Output      : None.
1026:../../Source/Kernel/rme_kernel.c **** Return      : None.
1027:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1028:../../Source/Kernel/rme_kernel.c **** void _RME_Memcpy(void* Dst,
1029:../../Source/Kernel/rme_kernel.c ****                  void* Src,
1030:../../Source/Kernel/rme_kernel.c ****                  rme_ptr_t Num)
1031:../../Source/Kernel/rme_kernel.c **** {
 1029              		.loc 1 1031 1
 1030              		.cfi_startproc
 1031              		@ args = 0, pretend = 0, frame = 24
 1032              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 37


 1033              		@ link register save eliminated.
 1034 0000 04B02DE5 		str	fp, [sp, #-4]!
 1035              		.cfi_def_cfa_offset 4
 1036              		.cfi_offset 11, -4
 1037 0004 00B08DE2 		add	fp, sp, #0
 1038              		.cfi_def_cfa_register 11
 1039 0008 1CD04DE2 		sub	sp, sp, #28
 1040 000c 10000BE5 		str	r0, [fp, #-16]
 1041 0010 14100BE5 		str	r1, [fp, #-20]
 1042 0014 18200BE5 		str	r2, [fp, #-24]
1032:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1033:../../Source/Kernel/rme_kernel.c **** 
1034:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 1043              		.loc 1 1034 14
 1044 0018 0030A0E3 		mov	r3, #0
 1045 001c 08300BE5 		str	r3, [fp, #-8]
 1046              		.loc 1 1034 5
 1047 0020 0B0000EA 		b	.L60
 1048              	.L61:
1035:../../Source/Kernel/rme_kernel.c ****     {
1036:../../Source/Kernel/rme_kernel.c ****         ((volatile rme_u8_t*)Dst)[Count]=((volatile rme_u8_t*)Src)[Count];
 1049              		.loc 1 1036 67 discriminator 3
 1050 0024 14201BE5 		ldr	r2, [fp, #-20]
 1051 0028 08301BE5 		ldr	r3, [fp, #-8]
 1052 002c 032082E0 		add	r2, r2, r3
 1053              		.loc 1 1036 34 discriminator 3
 1054 0030 10101BE5 		ldr	r1, [fp, #-16]
 1055 0034 08301BE5 		ldr	r3, [fp, #-8]
 1056 0038 033081E0 		add	r3, r1, r3
 1057              		.loc 1 1036 67 discriminator 3
 1058 003c 0020D2E5 		ldrb	r2, [r2]
 1059 0040 7220EFE6 		uxtb	r2, r2
 1060              		.loc 1 1036 41 discriminator 3
 1061 0044 0020C3E5 		strb	r2, [r3]
1034:../../Source/Kernel/rme_kernel.c ****     {
 1062              		.loc 1 1034 33 discriminator 3
 1063 0048 08301BE5 		ldr	r3, [fp, #-8]
 1064 004c 013083E2 		add	r3, r3, #1
 1065 0050 08300BE5 		str	r3, [fp, #-8]
 1066              	.L60:
1034:../../Source/Kernel/rme_kernel.c ****     {
 1067              		.loc 1 1034 5 discriminator 1
 1068 0054 08201BE5 		ldr	r2, [fp, #-8]
 1069 0058 18301BE5 		ldr	r3, [fp, #-24]
 1070 005c 030052E1 		cmp	r2, r3
 1071 0060 EFFFFF3A 		bcc	.L61
1037:../../Source/Kernel/rme_kernel.c ****     }
1038:../../Source/Kernel/rme_kernel.c **** }
 1072              		.loc 1 1038 1
 1073 0064 00F020E3 		nop
 1074 0068 00F020E3 		nop
 1075 006c 00D08BE2 		add	sp, fp, #0
 1076              		.cfi_def_cfa_register 13
 1077              		@ sp needed
 1078 0070 04B09DE4 		ldr	fp, [sp], #4
 1079              		.cfi_restore 11
 1080              		.cfi_def_cfa_offset 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 38


 1081 0074 1EFF2FE1 		bx	lr
 1082              		.cfi_endproc
 1083              	.LFE14:
 1085              		.section	.text._RME_Diff,"ax",%progbits
 1086              		.align	2
 1087              		.global	_RME_Diff
 1088              		.syntax unified
 1089              		.arm
 1091              	_RME_Diff:
 1092              	.LFB15:
1039:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcpy **************************************************/
1040:../../Source/Kernel/rme_kernel.c **** 
1041:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Diff *********************************************************
1042:../../Source/Kernel/rme_kernel.c **** Description : Compute the absolute difference between two numbers, when integer
1043:../../Source/Kernel/rme_kernel.c ****               wraparound is considered.
1044:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Num1 - The first number.
1045:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num2 - The second number.
1046:../../Source/Kernel/rme_kernel.c **** Output      : None.
1047:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The distance.
1048:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1049:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Diff(rme_ptr_t Num1,
1050:../../Source/Kernel/rme_kernel.c ****                     rme_ptr_t Num2)
1051:../../Source/Kernel/rme_kernel.c **** {
 1093              		.loc 1 1051 1
 1094              		.cfi_startproc
 1095              		@ args = 0, pretend = 0, frame = 16
 1096              		@ frame_needed = 1, uses_anonymous_args = 0
 1097              		@ link register save eliminated.
 1098 0000 04B02DE5 		str	fp, [sp, #-4]!
 1099              		.cfi_def_cfa_offset 4
 1100              		.cfi_offset 11, -4
 1101 0004 00B08DE2 		add	fp, sp, #0
 1102              		.cfi_def_cfa_register 11
 1103 0008 14D04DE2 		sub	sp, sp, #20
 1104 000c 10000BE5 		str	r0, [fp, #-16]
 1105 0010 14100BE5 		str	r1, [fp, #-20]
1052:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff1;
1053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff2;
1054:../../Source/Kernel/rme_kernel.c ****     
1055:../../Source/Kernel/rme_kernel.c ****     Diff1=Num1-Num2;
 1106              		.loc 1 1055 10
 1107 0014 10201BE5 		ldr	r2, [fp, #-16]
 1108 0018 14301BE5 		ldr	r3, [fp, #-20]
 1109 001c 033042E0 		sub	r3, r2, r3
 1110 0020 08300BE5 		str	r3, [fp, #-8]
1056:../../Source/Kernel/rme_kernel.c ****     Diff2=Num2-Num1;
 1111              		.loc 1 1056 10
 1112 0024 14201BE5 		ldr	r2, [fp, #-20]
 1113 0028 10301BE5 		ldr	r3, [fp, #-16]
 1114 002c 033042E0 		sub	r3, r2, r3
 1115 0030 0C300BE5 		str	r3, [fp, #-12]
1057:../../Source/Kernel/rme_kernel.c ****     
1058:../../Source/Kernel/rme_kernel.c ****     if(Diff1>Diff2)
 1116              		.loc 1 1058 7
 1117 0034 08201BE5 		ldr	r2, [fp, #-8]
 1118 0038 0C301BE5 		ldr	r3, [fp, #-12]
 1119 003c 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 39


 1120 0040 0100009A 		bls	.L63
1059:../../Source/Kernel/rme_kernel.c ****     {
1060:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1061:../../Source/Kernel/rme_kernel.c ****         
1062:../../Source/Kernel/rme_kernel.c ****         return Diff2;
 1121              		.loc 1 1062 16
 1122 0044 0C301BE5 		ldr	r3, [fp, #-12]
 1123 0048 000000EA 		b	.L64
 1124              	.L63:
1063:../../Source/Kernel/rme_kernel.c ****     }
1064:../../Source/Kernel/rme_kernel.c ****     else
1065:../../Source/Kernel/rme_kernel.c ****     {
1066:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1067:../../Source/Kernel/rme_kernel.c ****         
1068:../../Source/Kernel/rme_kernel.c ****         return Diff1;
 1125              		.loc 1 1068 16
 1126 004c 08301BE5 		ldr	r3, [fp, #-8]
 1127              	.L64:
1069:../../Source/Kernel/rme_kernel.c ****     }
1070:../../Source/Kernel/rme_kernel.c **** }
 1128              		.loc 1 1070 1
 1129 0050 0300A0E1 		mov	r0, r3
 1130 0054 00D08BE2 		add	sp, fp, #0
 1131              		.cfi_def_cfa_register 13
 1132              		@ sp needed
 1133 0058 04B09DE4 		ldr	fp, [sp], #4
 1134              		.cfi_restore 11
 1135              		.cfi_def_cfa_offset 0
 1136 005c 1EFF2FE1 		bx	lr
 1137              		.cfi_endproc
 1138              	.LFE15:
 1140              		.section	.text.RME_Kmain,"ax",%progbits
 1141              		.align	2
 1142              		.global	RME_Kmain
 1143              		.syntax unified
 1144              		.arm
 1146              	RME_Kmain:
 1147              	.LFB16:
1071:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Diff ****************************************************/
1072:../../Source/Kernel/rme_kernel.c **** 
1073:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Kmain *********************************************************
1074:../../Source/Kernel/rme_kernel.c **** Description : The entry of the operating system.
1075:../../Source/Kernel/rme_kernel.c **** Input       : None.
1076:../../Source/Kernel/rme_kernel.c **** Output      : None.
1077:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - This function never returns.
1078:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1079:../../Source/Kernel/rme_kernel.c **** rme_ret_t RME_Kmain(void)
1080:../../Source/Kernel/rme_kernel.c **** {
 1148              		.loc 1 1080 1
 1149              		.cfi_startproc
 1150              		@ args = 0, pretend = 0, frame = 0
 1151              		@ frame_needed = 1, uses_anonymous_args = 0
 1152 0000 00482DE9 		push	{fp, lr}
 1153              		.cfi_def_cfa_offset 8
 1154              		.cfi_offset 11, -8
 1155              		.cfi_offset 14, -4
 1156 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 40


 1157              		.cfi_def_cfa 11, 4
1081:../../Source/Kernel/rme_kernel.c ****     /* Disable all interrupts first */
1082:../../Source/Kernel/rme_kernel.c ****     __RME_Int_Disable();
 1158              		.loc 1 1082 5
 1159 0008 FEFFFFEB 		bl	__RME_Int_Disable
1083:../../Source/Kernel/rme_kernel.c ****     /* Some low-level kernel assertions */
1084:../../Source/Kernel/rme_kernel.c ****     _RME_Lowlvl_Check();
 1160              		.loc 1 1084 5
 1161 000c FEFFFFEB 		bl	_RME_Lowlvl_Check
1085:../../Source/Kernel/rme_kernel.c ****     /* Hardware low-level init */
1086:../../Source/Kernel/rme_kernel.c ****     __RME_Lowlvl_Init();
 1162              		.loc 1 1086 5
 1163 0010 FEFFFFEB 		bl	__RME_Lowlvl_Init
1087:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel page tables or memory mappings */
1088:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Kom_Init();
 1164              		.loc 1 1088 5
 1165 0014 FEFFFFEB 		bl	__RME_Pgt_Kom_Init
1089:../../Source/Kernel/rme_kernel.c ****     
1090:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel object allocation table - default init */
1091:../../Source/Kernel/rme_kernel.c ****     _RME_Kot_Init(RME_KOT_WORD_NUM);
 1166              		.loc 1 1091 5
 1167 0018 0206A0E3 		mov	r0, #2097152
 1168 001c FEFFFFEB 		bl	_RME_Kot_Init
1092:../../Source/Kernel/rme_kernel.c ****     
1093:../../Source/Kernel/rme_kernel.c ****     /* Boot into the first process */
1094:../../Source/Kernel/rme_kernel.c ****     __RME_Boot();
 1169              		.loc 1 1094 5
 1170 0020 FEFFFFEB 		bl	__RME_Boot
1095:../../Source/Kernel/rme_kernel.c ****     
1096:../../Source/Kernel/rme_kernel.c ****     /* Should never reach here */
1097:../../Source/Kernel/rme_kernel.c ****     return 0;
 1171              		.loc 1 1097 12
 1172 0024 0030A0E3 		mov	r3, #0
1098:../../Source/Kernel/rme_kernel.c **** }
 1173              		.loc 1 1098 1
 1174 0028 0300A0E1 		mov	r0, r3
 1175 002c 0088BDE8 		pop	{fp, pc}
 1176              		.cfi_endproc
 1177              	.LFE16:
 1179              		.section	.text._RME_Lowlvl_Check,"ax",%progbits
 1180              		.align	2
 1181              		.syntax unified
 1182              		.arm
 1184              	_RME_Lowlvl_Check:
 1185              	.LFB17:
1099:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Kmain ****************************************************/
1100:../../Source/Kernel/rme_kernel.c **** 
1101:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Lowlvl_Check *************************************************
1102:../../Source/Kernel/rme_kernel.c **** Description : Do some low-level checking for the operating system.
1103:../../Source/Kernel/rme_kernel.c **** Input       : None.
1104:../../Source/Kernel/rme_kernel.c **** Output      : None.
1105:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
1106:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1107:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Lowlvl_Check(void)
1108:../../Source/Kernel/rme_kernel.c **** {
 1186              		.loc 1 1108 1
 1187              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 41


 1188              		@ args = 0, pretend = 0, frame = 0
 1189              		@ frame_needed = 1, uses_anonymous_args = 0
 1190              		@ link register save eliminated.
 1191 0000 04B02DE5 		str	fp, [sp, #-4]!
 1192              		.cfi_def_cfa_offset 4
 1193              		.cfi_offset 11, -4
 1194 0004 00B08DE2 		add	fp, sp, #0
 1195              		.cfi_def_cfa_register 11
1109:../../Source/Kernel/rme_kernel.c ****     /* Make sure the machine is at least 32-bit */
1110:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_ORDER>=5U);
1111:../../Source/Kernel/rme_kernel.c ****     /* Check if the word order setting is correct */
1112:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_BIT==RME_POW2(RME_WORD_ORDER));
1113:../../Source/Kernel/rme_kernel.c ****     /* Check if the struct sizes are correct */
1114:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Struct)==RME_CAP_SIZE);
1115:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Cpt)==RME_CAP_SIZE);
1116:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1117:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Pgt)==RME_CAP_SIZE);
1118:../../Source/Kernel/rme_kernel.c **** #endif
1119:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Prc)==RME_CAP_SIZE);
1120:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Thd)==RME_CAP_SIZE);
1121:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Sig)==RME_CAP_SIZE);
1122:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Inv)==RME_CAP_SIZE);
1123:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kfn)==RME_CAP_SIZE);
1124:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kom)==RME_CAP_SIZE);
1125:../../Source/Kernel/rme_kernel.c ****     /* Check if the other configurations are correct */
1126:../../Source/Kernel/rme_kernel.c ****     /* Kernel memory allocation minimal size aligned to word boundary */
1127:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_KOM_SLOT_ORDER>=RME_WORD_ORDER-3U);
1128:../../Source/Kernel/rme_kernel.c ****     /* Make sure the number of priorities do not exceed half-word boundary */
1129:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_PREEMPT_PRIO_NUM<=RME_POW2(RME_WORD_BIT>>1));
1130:../../Source/Kernel/rme_kernel.c ****     
1131:../../Source/Kernel/rme_kernel.c ****     return 0;
 1196              		.loc 1 1131 12
 1197 0008 0030A0E3 		mov	r3, #0
1132:../../Source/Kernel/rme_kernel.c **** }
 1198              		.loc 1 1132 1
 1199 000c 0300A0E1 		mov	r0, r3
 1200 0010 00D08BE2 		add	sp, fp, #0
 1201              		.cfi_def_cfa_register 13
 1202              		@ sp needed
 1203 0014 04B09DE4 		ldr	fp, [sp], #4
 1204              		.cfi_restore 11
 1205              		.cfi_def_cfa_offset 0
 1206 0018 1EFF2FE1 		bx	lr
 1207              		.cfi_endproc
 1208              	.LFE17:
 1210              		.section	.text._RME_Svc_Handler,"ax",%progbits
 1211              		.align	2
 1212              		.global	_RME_Svc_Handler
 1213              		.syntax unified
 1214              		.arm
 1216              	_RME_Svc_Handler:
 1217              	.LFB18:
1133:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Lowlvl_Check ********************************************/
1134:../../Source/Kernel/rme_kernel.c **** 
1135:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Svc_Handler **************************************************
1136:../../Source/Kernel/rme_kernel.c **** Description : The system call handler of the operating system. The register set 
1137:../../Source/Kernel/rme_kernel.c ****               of the current thread shall be passed in as a parameter.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 42


1138:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1139:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1140:../../Source/Kernel/rme_kernel.c **** Return      : None.
1141:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1142:../../Source/Kernel/rme_kernel.c **** void _RME_Svc_Handler(struct RME_Reg_Struct* Reg)
1143:../../Source/Kernel/rme_kernel.c **** {
 1218              		.loc 1 1143 1
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 48
 1221              		@ frame_needed = 1, uses_anonymous_args = 0
 1222 0000 30482DE9 		push	{r4, r5, fp, lr}
 1223              		.cfi_def_cfa_offset 16
 1224              		.cfi_offset 4, -16
 1225              		.cfi_offset 5, -12
 1226              		.cfi_offset 11, -8
 1227              		.cfi_offset 14, -4
 1228 0004 0CB08DE2 		add	fp, sp, #12
 1229              		.cfi_def_cfa 11, 4
 1230 0008 48D04DE2 		sub	sp, sp, #72
 1231 000c 38000BE5 		str	r0, [fp, #-56]
1144:../../Source/Kernel/rme_kernel.c ****     /* What's the system call number and major capability ID? */
1145:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc;
1146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Cid;
1147:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Param[3];
1148:../../Source/Kernel/rme_kernel.c ****     rme_ret_t Retval;
1149:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc_Num;
1150:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1151:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
1152:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1153:../../Source/Kernel/rme_kernel.c **** 
1154:../../Source/Kernel/rme_kernel.c ****     /* Get the system call parameters from the system call */
1155:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Param_Get(Reg, &Svc, &Cid, Param);
 1232              		.loc 1 1155 5
 1233 0010 34304BE2 		sub	r3, fp, #52
 1234 0014 28204BE2 		sub	r2, fp, #40
 1235 0018 24104BE2 		sub	r1, fp, #36
 1236 001c 38001BE5 		ldr	r0, [fp, #-56]
 1237 0020 FEFFFFEB 		bl	__RME_Svc_Param_Get
1156:../../Source/Kernel/rme_kernel.c ****     /* System call number takes [5:0] bits */
1157:../../Source/Kernel/rme_kernel.c ****     Svc_Num=Svc&RME_MASK_END(5U);
 1238              		.loc 1 1157 16
 1239 0024 24301BE5 		ldr	r3, [fp, #-36]
 1240              		.loc 1 1157 12
 1241 0028 3F3003E2 		and	r3, r3, #63
 1242 002c 18300BE5 		str	r3, [fp, #-24]
1158:../../Source/Kernel/rme_kernel.c ****     
1159:../../Source/Kernel/rme_kernel.c ****     /* Ultra-fast path - synchronous invocation returning */
1160:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_RET)
 1243              		.loc 1 1160 7
 1244 0030 18301BE5 		ldr	r3, [fp, #-24]
 1245 0034 000053E3 		cmp	r3, #0
 1246 0038 0C00001A 		bne	.L70
1161:../../Source/Kernel/rme_kernel.c ****     {
1162:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1163:../../Source/Kernel/rme_kernel.c ****         
1164:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Ret(Reg,                                            /* volatile struct RME_
 1247              		.loc 1 1164 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 43


 1248 003c 34301BE5 		ldr	r3, [fp, #-52]
 1249 0040 0020A0E3 		mov	r2, #0
 1250 0044 0310A0E1 		mov	r1, r3
 1251 0048 38001BE5 		ldr	r0, [fp, #-56]
 1252 004c FEFFFFEB 		bl	_RME_Inv_Ret
 1253 0050 10000BE5 		str	r0, [fp, #-16]
1165:../../Source/Kernel/rme_kernel.c ****                             Param[0],                                       /* rme_ptr_t Retval */
1166:../../Source/Kernel/rme_kernel.c ****                             0U);                                            /* rme_ptr_t Is_Exc */
1167:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg, Retval);
 1254              		.loc 1 1167 9
 1255 0054 10301BE5 		ldr	r3, [fp, #-16]
 1256 0058 000053E3 		cmp	r3, #0
 1257 005c 2E0200AA 		bge	.L126
 1258              		.loc 1 1167 9 is_stmt 0 discriminator 1
 1259 0060 10101BE5 		ldr	r1, [fp, #-16]
 1260 0064 38001BE5 		ldr	r0, [fp, #-56]
 1261 0068 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1262 006c 2A0200EA 		b	.L126
 1263              	.L70:
1168:../../Source/Kernel/rme_kernel.c ****     }
1169:../../Source/Kernel/rme_kernel.c ****     else
1170:../../Source/Kernel/rme_kernel.c ****     {
1171:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1172:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1173:../../Source/Kernel/rme_kernel.c ****     }
1174:../../Source/Kernel/rme_kernel.c ****     
1175:../../Source/Kernel/rme_kernel.c ****     /* Get our current capability table. No need to check whether it is frozen
1176:../../Source/Kernel/rme_kernel.c ****      * because it can't be deleted anyway */
1177:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 1264              		.loc 1 1177 12 is_stmt 1
 1265 0070 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 1266 0074 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 1267 0078 043093E5 		ldr	r3, [r3, #4]
 1268 007c 1C300BE5 		str	r3, [fp, #-28]
1178:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd_Cur);
 1269              		.loc 1 1178 13
 1270 0080 1C301BE5 		ldr	r3, [fp, #-28]
 1271 0084 4C2093E5 		ldr	r2, [r3, #76]
 1272 0088 1C301BE5 		ldr	r3, [fp, #-28]
 1273 008c 4C3083E2 		add	r3, r3, #76
 1274 0090 030052E1 		cmp	r2, r3
 1275 0094 0200000A 		beq	.L73
 1276              		.loc 1 1178 13 is_stmt 0 discriminator 1
 1277 0098 1C301BE5 		ldr	r3, [fp, #-28]
 1278 009c 4C3093E5 		ldr	r3, [r3, #76]
 1279 00a0 000000EA 		b	.L74
 1280              	.L73:
 1281              		.loc 1 1178 13 discriminator 2
 1282 00a4 0030A0E3 		mov	r3, #0
 1283              	.L74:
 1284              		.loc 1 1178 12 is_stmt 1 discriminator 4
 1285 00a8 20300BE5 		str	r3, [fp, #-32]
1179:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 1286              		.loc 1 1179 7 discriminator 4
 1287 00ac 20301BE5 		ldr	r3, [fp, #-32]
 1288 00b0 000053E3 		cmp	r3, #0
 1289 00b4 0400001A 		bne	.L75
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 44


1180:../../Source/Kernel/rme_kernel.c ****     {
1181:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1182:../../Source/Kernel/rme_kernel.c ****         
1183:../../Source/Kernel/rme_kernel.c ****         Cpt=Thd_Cur->Sched.Prc->Cpt;
 1290              		.loc 1 1183 27
 1291 00b8 1C301BE5 		ldr	r3, [fp, #-28]
 1292 00bc 2C3093E5 		ldr	r3, [r3, #44]
 1293              		.loc 1 1183 12
 1294 00c0 143093E5 		ldr	r3, [r3, #20]
 1295 00c4 14300BE5 		str	r3, [fp, #-20]
 1296 00c8 030000EA 		b	.L76
 1297              	.L75:
1184:../../Source/Kernel/rme_kernel.c ****     }
1185:../../Source/Kernel/rme_kernel.c ****     else
1186:../../Source/Kernel/rme_kernel.c ****     {
1187:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1188:../../Source/Kernel/rme_kernel.c ****         
1189:../../Source/Kernel/rme_kernel.c ****         Cpt=Inv_Top->Prc->Cpt;
 1298              		.loc 1 1189 20
 1299 00cc 20301BE5 		ldr	r3, [fp, #-32]
 1300 00d0 083093E5 		ldr	r3, [r3, #8]
 1301              		.loc 1 1189 12
 1302 00d4 143093E5 		ldr	r3, [r3, #20]
 1303 00d8 14300BE5 		str	r3, [fp, #-20]
 1304              	.L76:
1190:../../Source/Kernel/rme_kernel.c ****     }
1191:../../Source/Kernel/rme_kernel.c **** 
1192:../../Source/Kernel/rme_kernel.c ****     /* Fast path - synchronous invocation activation */
1193:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_ACT)
 1305              		.loc 1 1193 7
 1306 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1307 00e0 010053E3 		cmp	r3, #1
 1308 00e4 0D00001A 		bne	.L77
1194:../../Source/Kernel/rme_kernel.c ****     {
1195:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1196:../../Source/Kernel/rme_kernel.c ****         
1197:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Act(Cpt,
1198:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
1199:../../Source/Kernel/rme_kernel.c ****                             (rme_cid_t)Param[0],                            /* rme_cid_t Cap_Inv */
 1309              		.loc 1 1199 45
 1310 00e8 34301BE5 		ldr	r3, [fp, #-52]
1197:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
 1311              		.loc 1 1197 16
 1312 00ec 0320A0E1 		mov	r2, r3
 1313 00f0 30301BE5 		ldr	r3, [fp, #-48]
 1314 00f4 38101BE5 		ldr	r1, [fp, #-56]
 1315 00f8 14001BE5 		ldr	r0, [fp, #-20]
 1316 00fc FEFFFFEB 		bl	_RME_Inv_Act
 1317 0100 10000BE5 		str	r0, [fp, #-16]
1200:../../Source/Kernel/rme_kernel.c ****                             Param[1]);                                      /* rme_ptr_t Param */
1201:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg,Retval);
 1318              		.loc 1 1201 9
 1319 0104 10301BE5 		ldr	r3, [fp, #-16]
 1320 0108 000053E3 		cmp	r3, #0
 1321 010c 040200AA 		bge	.L127
 1322              		.loc 1 1201 9 is_stmt 0 discriminator 1
 1323 0110 10101BE5 		ldr	r1, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 45


 1324 0114 38001BE5 		ldr	r0, [fp, #-56]
 1325 0118 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1326 011c 000200EA 		b	.L127
 1327              	.L77:
1202:../../Source/Kernel/rme_kernel.c ****     }
1203:../../Source/Kernel/rme_kernel.c ****     else
1204:../../Source/Kernel/rme_kernel.c ****     {
1205:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1206:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1207:../../Source/Kernel/rme_kernel.c ****     }
1208:../../Source/Kernel/rme_kernel.c **** 
1209:../../Source/Kernel/rme_kernel.c ****     /* See if this operation can potentially cause a context switch. All the 
1210:../../Source/Kernel/rme_kernel.c ****      * functions that may cause a context switch is listed here. The behavior
1211:../../Source/Kernel/rme_kernel.c ****      * of these functions shall be: If the function is successful, they shall
1212:../../Source/Kernel/rme_kernel.c ****      * perform the return value saving on proper register stacks by themselves;
1213:../../Source/Kernel/rme_kernel.c ****      * if the function fails, it should not conduct such return value saving.
1214:../../Source/Kernel/rme_kernel.c ****      * These paths are less optimized than synchronous invocation, but are still
1215:../../Source/Kernel/rme_kernel.c ****      * optimized anyway. */
1216:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1328              		.loc 1 1216 5 is_stmt 1
 1329 0120 18301BE5 		ldr	r3, [fp, #-24]
 1330 0124 023043E2 		sub	r3, r3, #2
 1331 0128 070053E3 		cmp	r3, #7
 1332 012c 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1333 0130 9A0000EA 		b	.L128
 1334              	.L81:
 1335 0134 54010000 		.word	.L88
 1336 0138 88010000 		.word	.L87
 1337 013c C0010000 		.word	.L86
 1338 0140 20020000 		.word	.L85
 1339 0144 54020000 		.word	.L84
 1340 0148 A4020000 		.word	.L83
 1341 014c 20030000 		.word	.L82
 1342 0150 68030000 		.word	.L80
 1343              	.L88:
1217:../../Source/Kernel/rme_kernel.c ****     {
1218:../../Source/Kernel/rme_kernel.c ****         /* Send to a signal endpoint */
1219:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_SND:
1220:../../Source/Kernel/rme_kernel.c ****         {
1221:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1222:../../Source/Kernel/rme_kernel.c ****             
1223:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Snd(Cpt,
1224:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1225:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1344              		.loc 1 1225 49
 1345 0154 34301BE5 		ldr	r3, [fp, #-52]
1223:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1346              		.loc 1 1223 20
 1347 0158 0320A0E1 		mov	r2, r3
 1348 015c 38101BE5 		ldr	r1, [fp, #-56]
 1349 0160 14001BE5 		ldr	r0, [fp, #-20]
 1350 0164 FEFFFFEB 		bl	_RME_Sig_Snd
 1351 0168 10000BE5 		str	r0, [fp, #-16]
1226:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1352              		.loc 1 1226 13
 1353 016c 10301BE5 		ldr	r3, [fp, #-16]
 1354 0170 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 46


 1355 0174 EC0100AA 		bge	.L129
 1356              		.loc 1 1226 13 is_stmt 0 discriminator 1
 1357 0178 10101BE5 		ldr	r1, [fp, #-16]
 1358 017c 38001BE5 		ldr	r0, [fp, #-56]
 1359 0180 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1360 0184 E80100EA 		b	.L129
 1361              	.L87:
1227:../../Source/Kernel/rme_kernel.c ****         }
1228:../../Source/Kernel/rme_kernel.c ****         /* Receive from a signal endpoint */
1229:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_RCV:
1230:../../Source/Kernel/rme_kernel.c ****         {
1231:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1232:../../Source/Kernel/rme_kernel.c ****             
1233:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Rcv(Cpt,
1234:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1235:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Sig */
 1362              		.loc 1 1235 49 is_stmt 1
 1363 0188 34301BE5 		ldr	r3, [fp, #-52]
1233:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1364              		.loc 1 1233 20
 1365 018c 0320A0E1 		mov	r2, r3
 1366 0190 30301BE5 		ldr	r3, [fp, #-48]
 1367 0194 38101BE5 		ldr	r1, [fp, #-56]
 1368 0198 14001BE5 		ldr	r0, [fp, #-20]
 1369 019c FEFFFFEB 		bl	_RME_Sig_Rcv
 1370 01a0 10000BE5 		str	r0, [fp, #-16]
1236:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Option */
1237:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1371              		.loc 1 1237 13
 1372 01a4 10301BE5 		ldr	r3, [fp, #-16]
 1373 01a8 000053E3 		cmp	r3, #0
 1374 01ac E00100AA 		bge	.L130
 1375              		.loc 1 1237 13 is_stmt 0 discriminator 1
 1376 01b0 10101BE5 		ldr	r1, [fp, #-16]
 1377 01b4 38001BE5 		ldr	r0, [fp, #-56]
 1378 01b8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1379 01bc DC0100EA 		b	.L130
 1380              	.L86:
1238:../../Source/Kernel/rme_kernel.c ****         }
1239:../../Source/Kernel/rme_kernel.c ****         /* Call kernel functions */
1240:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_KFN:
1241:../../Source/Kernel/rme_kernel.c ****         {
1242:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1243:../../Source/Kernel/rme_kernel.c ****             
1244:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Kfn_Act(Cpt,
 1381              		.loc 1 1244 20 is_stmt 1
 1382 01c0 28301BE5 		ldr	r3, [fp, #-40]
 1383 01c4 03C0A0E1 		mov	ip, r3
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1246:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Kfn */
1247:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Func_ID */
 1384              		.loc 1 1247 33
 1385 01c8 34301BE5 		ldr	r3, [fp, #-52]
1244:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1386              		.loc 1 1244 20
 1387 01cc 7300FFE6 		uxth	r0, r3
1248:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]),                     /* rme_ptr_t Sub_ID */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 47


 1388              		.loc 1 1248 33
 1389 01d0 34301BE5 		ldr	r3, [fp, #-52]
1244:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1390              		.loc 1 1244 20
 1391 01d4 2338A0E1 		lsr	r3, r3, #16
 1392 01d8 30201BE5 		ldr	r2, [fp, #-48]
 1393 01dc 2C101BE5 		ldr	r1, [fp, #-44]
 1394 01e0 08108DE5 		str	r1, [sp, #8]
 1395 01e4 04208DE5 		str	r2, [sp, #4]
 1396 01e8 00308DE5 		str	r3, [sp]
 1397 01ec 0030A0E1 		mov	r3, r0
 1398 01f0 0C20A0E1 		mov	r2, ip
 1399 01f4 38101BE5 		ldr	r1, [fp, #-56]
 1400 01f8 14001BE5 		ldr	r0, [fp, #-20]
 1401 01fc FEFFFFEB 		bl	_RME_Kfn_Act
 1402 0200 10000BE5 		str	r0, [fp, #-16]
1249:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Param1 */
1250:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Param2 */
1251:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg, Retval);
 1403              		.loc 1 1251 13
 1404 0204 10301BE5 		ldr	r3, [fp, #-16]
 1405 0208 000053E3 		cmp	r3, #0
 1406 020c CA0100AA 		bge	.L131
 1407              		.loc 1 1251 13 is_stmt 0 discriminator 1
 1408 0210 10101BE5 		ldr	r1, [fp, #-16]
 1409 0214 38001BE5 		ldr	r0, [fp, #-56]
 1410 0218 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1411 021c C60100EA 		b	.L131
 1412              	.L85:
1252:../../Source/Kernel/rme_kernel.c ****         }
1253:../../Source/Kernel/rme_kernel.c ****         /* Free a thread from some core */
1254:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_FREE:
1255:../../Source/Kernel/rme_kernel.c ****         {
1256:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1257:../../Source/Kernel/rme_kernel.c ****             
1258:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Free(Cpt,
1259:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1260:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Param[0]);                /* rme_cid_t Cap_Thd */
 1413              		.loc 1 1260 56 is_stmt 1
 1414 0220 34301BE5 		ldr	r3, [fp, #-52]
1258:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1415              		.loc 1 1258 20
 1416 0224 0320A0E1 		mov	r2, r3
 1417 0228 38101BE5 		ldr	r1, [fp, #-56]
 1418 022c 14001BE5 		ldr	r0, [fp, #-20]
 1419 0230 FEFFFFEB 		bl	_RME_Thd_Sched_Free
 1420 0234 10000BE5 		str	r0, [fp, #-16]
1261:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1421              		.loc 1 1261 13
 1422 0238 10301BE5 		ldr	r3, [fp, #-16]
 1423 023c 000053E3 		cmp	r3, #0
 1424 0240 BF0100AA 		bge	.L132
 1425              		.loc 1 1261 13 is_stmt 0 discriminator 1
 1426 0244 10101BE5 		ldr	r1, [fp, #-16]
 1427 0248 38001BE5 		ldr	r0, [fp, #-56]
 1428 024c FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1429 0250 BB0100EA 		b	.L132
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 48


 1430              	.L84:
1262:../../Source/Kernel/rme_kernel.c ****         }
1263:../../Source/Kernel/rme_kernel.c ****         /* Changing thread execution context */
1264:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_EXEC_SET:
1265:../../Source/Kernel/rme_kernel.c ****         {
1266:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1267:../../Source/Kernel/rme_kernel.c ****             
1268:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Exec_Set(Cpt,
 1431              		.loc 1 1268 20 is_stmt 1
 1432 0254 28301BE5 		ldr	r3, [fp, #-40]
 1433 0258 0300A0E1 		mov	r0, r3
 1434 025c 34101BE5 		ldr	r1, [fp, #-52]
 1435 0260 30301BE5 		ldr	r3, [fp, #-48]
 1436 0264 2C201BE5 		ldr	r2, [fp, #-44]
 1437 0268 04208DE5 		str	r2, [sp, #4]
 1438 026c 00308DE5 		str	r3, [sp]
 1439 0270 0130A0E1 		mov	r3, r1
 1440 0274 0020A0E1 		mov	r2, r0
 1441 0278 38101BE5 		ldr	r1, [fp, #-56]
 1442 027c 14001BE5 		ldr	r0, [fp, #-20]
 1443 0280 FEFFFFEB 		bl	_RME_Thd_Exec_Set
 1444 0284 10000BE5 		str	r0, [fp, #-16]
1269:../../Source/Kernel/rme_kernel.c ****                                      Reg,                                   /* volatile struct RME_
1270:../../Source/Kernel/rme_kernel.c ****                                      (rme_cid_t)Cid,                        /* rme_cid_t Cap_Thd */
1271:../../Source/Kernel/rme_kernel.c ****                                      Param[0],                              /* rme_ptr_t Entry */
1272:../../Source/Kernel/rme_kernel.c ****                                      Param[1],                              /* rme_ptr_t Stack */
1273:../../Source/Kernel/rme_kernel.c ****                                      Param[2]);                             /* rme_ptr_t Param */
1274:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1445              		.loc 1 1274 13
 1446 0288 10301BE5 		ldr	r3, [fp, #-16]
 1447 028c 000053E3 		cmp	r3, #0
 1448 0290 AD0100AA 		bge	.L133
 1449              		.loc 1 1274 13 is_stmt 0 discriminator 1
 1450 0294 10101BE5 		ldr	r1, [fp, #-16]
 1451 0298 38001BE5 		ldr	r0, [fp, #-56]
 1452 029c FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1453 02a0 A90100EA 		b	.L133
 1454              	.L83:
1275:../../Source/Kernel/rme_kernel.c ****         }
1276:../../Source/Kernel/rme_kernel.c ****         /* Changing thread priority (up to three threads at once) */
1277:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_PRIO:
1278:../../Source/Kernel/rme_kernel.c ****         {
1279:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1280:../../Source/Kernel/rme_kernel.c ****             
1281:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Prio(Cpt,
 1455              		.loc 1 1281 20 is_stmt 1
 1456 02a4 28E01BE5 		ldr	lr, [fp, #-40]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1283:../../Source/Kernel/rme_kernel.c ****                                        Cid,                                 /* rme_ptr_t Number */
1284:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Thd0 *
 1457              		.loc 1 1284 51
 1458 02a8 34301BE5 		ldr	r3, [fp, #-52]
1281:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1459              		.loc 1 1281 20
 1460 02ac 7340FFE6 		uxth	r4, r3
1285:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[0]),              /* rme_ptr_t Prio0 */
 1461              		.loc 1 1285 40
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 49


 1462 02b0 34301BE5 		ldr	r3, [fp, #-52]
1281:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1463              		.loc 1 1281 20
 1464 02b4 2338A0E1 		lsr	r3, r3, #16
1286:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[1]),   /* rme_cid_t Cap_Thd1 *
 1465              		.loc 1 1286 51
 1466 02b8 30201BE5 		ldr	r2, [fp, #-48]
1281:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1467              		.loc 1 1281 20
 1468 02bc 7220FFE6 		uxth	r2, r2
1287:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[1]),              /* rme_ptr_t Prio1 */
 1469              		.loc 1 1287 40
 1470 02c0 30101BE5 		ldr	r1, [fp, #-48]
1281:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1471              		.loc 1 1281 20
 1472 02c4 2118A0E1 		lsr	r1, r1, #16
1288:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[2]),   /* rme_cid_t Cap_Thd2 *
 1473              		.loc 1 1288 51
 1474 02c8 2C001BE5 		ldr	r0, [fp, #-44]
1281:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1475              		.loc 1 1281 20
 1476 02cc 7000FFE6 		uxth	r0, r0
1289:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[2]));             /* rme_ptr_t Prio2 */
 1477              		.loc 1 1289 40
 1478 02d0 2CC01BE5 		ldr	ip, [fp, #-44]
1281:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1479              		.loc 1 1281 20
 1480 02d4 2CC8A0E1 		lsr	ip, ip, #16
 1481 02d8 10C08DE5 		str	ip, [sp, #16]
 1482 02dc 0C008DE5 		str	r0, [sp, #12]
 1483 02e0 08108DE5 		str	r1, [sp, #8]
 1484 02e4 04208DE5 		str	r2, [sp, #4]
 1485 02e8 00308DE5 		str	r3, [sp]
 1486 02ec 0430A0E1 		mov	r3, r4
 1487 02f0 0E20A0E1 		mov	r2, lr
 1488 02f4 38101BE5 		ldr	r1, [fp, #-56]
 1489 02f8 14001BE5 		ldr	r0, [fp, #-20]
 1490 02fc FEFFFFEB 		bl	_RME_Thd_Sched_Prio
 1491 0300 10000BE5 		str	r0, [fp, #-16]
1290:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1492              		.loc 1 1290 13
 1493 0304 10301BE5 		ldr	r3, [fp, #-16]
 1494 0308 000053E3 		cmp	r3, #0
 1495 030c 900100AA 		bge	.L134
 1496              		.loc 1 1290 13 is_stmt 0 discriminator 1
 1497 0310 10101BE5 		ldr	r1, [fp, #-16]
 1498 0314 38001BE5 		ldr	r0, [fp, #-56]
 1499 0318 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1500 031c 8C0100EA 		b	.L134
 1501              	.L82:
1291:../../Source/Kernel/rme_kernel.c ****         }
1292:../../Source/Kernel/rme_kernel.c ****         /* Transfer time to a thread */
1293:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_TIME_XFER:
1294:../../Source/Kernel/rme_kernel.c ****         {
1295:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1296:../../Source/Kernel/rme_kernel.c ****             
1297:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Time_Xfer(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 50


1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
1299:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0],                  /* rme_cid_t Cap_Thd_Ds
 1502              		.loc 1 1299 55 is_stmt 1
 1503 0320 34301BE5 		ldr	r3, [fp, #-52]
1297:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1504              		.loc 1 1297 20
 1505 0324 0320A0E1 		mov	r2, r3
1300:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[1],                  /* rme_cid_t Cap_Thd_Sr
 1506              		.loc 1 1300 55
 1507 0328 30301BE5 		ldr	r3, [fp, #-48]
1297:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1508              		.loc 1 1297 20
 1509 032c 0310A0E1 		mov	r1, r3
 1510 0330 2C301BE5 		ldr	r3, [fp, #-44]
 1511 0334 00308DE5 		str	r3, [sp]
 1512 0338 0130A0E1 		mov	r3, r1
 1513 033c 38101BE5 		ldr	r1, [fp, #-56]
 1514 0340 14001BE5 		ldr	r0, [fp, #-20]
 1515 0344 FEFFFFEB 		bl	_RME_Thd_Time_Xfer
 1516 0348 10000BE5 		str	r0, [fp, #-16]
1301:../../Source/Kernel/rme_kernel.c ****                                       Param[2]);                            /* rme_ptr_t Time */
1302:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1517              		.loc 1 1302 13
 1518 034c 10301BE5 		ldr	r3, [fp, #-16]
 1519 0350 000053E3 		cmp	r3, #0
 1520 0354 800100AA 		bge	.L135
 1521              		.loc 1 1302 13 is_stmt 0 discriminator 1
 1522 0358 10101BE5 		ldr	r1, [fp, #-16]
 1523 035c 38001BE5 		ldr	r0, [fp, #-56]
 1524 0360 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1525 0364 7C0100EA 		b	.L135
 1526              	.L80:
1303:../../Source/Kernel/rme_kernel.c ****         }
1304:../../Source/Kernel/rme_kernel.c ****         /* Switch to another thread */
1305:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SWT:
1306:../../Source/Kernel/rme_kernel.c ****         {
1307:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1308:../../Source/Kernel/rme_kernel.c ****             
1309:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Swt(Cpt,
1310:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1311:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Thd */
 1527              		.loc 1 1311 49 is_stmt 1
 1528 0368 34301BE5 		ldr	r3, [fp, #-52]
1309:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1529              		.loc 1 1309 20
 1530 036c 0320A0E1 		mov	r2, r3
 1531 0370 30301BE5 		ldr	r3, [fp, #-48]
 1532 0374 38101BE5 		ldr	r1, [fp, #-56]
 1533 0378 14001BE5 		ldr	r0, [fp, #-20]
 1534 037c FEFFFFEB 		bl	_RME_Thd_Swt
 1535 0380 10000BE5 		str	r0, [fp, #-16]
1312:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Full_Yield
1313:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1536              		.loc 1 1313 13
 1537 0384 10301BE5 		ldr	r3, [fp, #-16]
 1538 0388 000053E3 		cmp	r3, #0
 1539 038c 740100AA 		bge	.L136
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 51


 1540              		.loc 1 1313 13 is_stmt 0 discriminator 1
 1541 0390 10101BE5 		ldr	r1, [fp, #-16]
 1542 0394 38001BE5 		ldr	r0, [fp, #-56]
 1543 0398 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1544 039c 700100EA 		b	.L136
 1545              	.L128:
1314:../../Source/Kernel/rme_kernel.c ****         }
1315:../../Source/Kernel/rme_kernel.c ****         default:
1316:../../Source/Kernel/rme_kernel.c ****         {
1317:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1318:../../Source/Kernel/rme_kernel.c ****             break;
 1546              		.loc 1 1318 13 is_stmt 1
 1547 03a0 00F020E3 		nop
1319:../../Source/Kernel/rme_kernel.c ****         }
1320:../../Source/Kernel/rme_kernel.c ****     } 
1321:../../Source/Kernel/rme_kernel.c **** 
1322:../../Source/Kernel/rme_kernel.c ****     /* It is guaranteed that these functions will never cause a context switch */
1323:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1548              		.loc 1 1323 5
 1549 03a4 18301BE5 		ldr	r3, [fp, #-24]
 1550 03a8 0A3043E2 		sub	r3, r3, #10
 1551 03ac 170053E3 		cmp	r3, #23
 1552 03b0 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1553 03b4 510100EA 		b	.L97
 1554              	.L99:
 1555 03b8 18040000 		.word	.L122
 1556 03bc 60040000 		.word	.L121
 1557 03c0 80040000 		.word	.L120
 1558 03c4 A0040000 		.word	.L119
 1559 03c8 04050000 		.word	.L118
 1560 03cc 24050000 		.word	.L117
 1561 03d0 98050000 		.word	.L116
 1562 03d4 B8050000 		.word	.L115
 1563 03d8 10060000 		.word	.L114
 1564 03dc 30060000 		.word	.L113
 1565 03e0 68060000 		.word	.L112
 1566 03e4 88060000 		.word	.L111
 1567 03e8 BC060000 		.word	.L110
 1568 03ec DC060000 		.word	.L109
 1569 03f0 FC060000 		.word	.L108
 1570 03f4 1C070000 		.word	.L107
 1571 03f8 90070000 		.word	.L106
 1572 03fc B0070000 		.word	.L105
 1573 0400 0C080000 		.word	.L104
 1574 0404 24080000 		.word	.L103
 1575 0408 44080000 		.word	.L102
 1576 040c 64080000 		.word	.L101
 1577 0410 B0080000 		.word	.L100
 1578 0414 D0080000 		.word	.L98
 1579              	.L122:
1324:../../Source/Kernel/rme_kernel.c ****     {
1325:../../Source/Kernel/rme_kernel.c ****         /* Capability table */
1326:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_CRT:
1327:../../Source/Kernel/rme_kernel.c ****         {
1328:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1329:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Crt(Cpt,
 1580              		.loc 1 1329 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 52


 1581 0418 28301BE5 		ldr	r3, [fp, #-40]
 1582 041c 0300A0E1 		mov	r0, r3
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1331:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1583              		.loc 1 1331 44
 1584 0420 34301BE5 		ldr	r3, [fp, #-52]
 1585 0424 2338A0E1 		lsr	r3, r3, #16
1329:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1586              		.loc 1 1329 20
 1587 0428 03C0A0E1 		mov	ip, r3
1332:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Crt */
 1588              		.loc 1 1332 44
 1589 042c 34301BE5 		ldr	r3, [fp, #-52]
1329:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1590              		.loc 1 1329 20
 1591 0430 7310FFE6 		uxth	r1, r3
 1592 0434 30301BE5 		ldr	r3, [fp, #-48]
 1593 0438 2C201BE5 		ldr	r2, [fp, #-44]
 1594 043c 04208DE5 		str	r2, [sp, #4]
 1595 0440 00308DE5 		str	r3, [sp]
 1596 0444 0130A0E1 		mov	r3, r1
 1597 0448 0C20A0E1 		mov	r2, ip
 1598 044c 0010A0E1 		mov	r1, r0
 1599 0450 14001BE5 		ldr	r0, [fp, #-20]
 1600 0454 FEFFFFEB 		bl	_RME_Cpt_Crt
 1601 0458 10000BE5 		str	r0, [fp, #-16]
1333:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1334:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Entry_Num 
1335:../../Source/Kernel/rme_kernel.c ****             break;
 1602              		.loc 1 1335 13
 1603 045c 2A0100EA 		b	.L123
 1604              	.L121:
1336:../../Source/Kernel/rme_kernel.c ****         }
1337:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_DEL:
1338:../../Source/Kernel/rme_kernel.c ****         {
1339:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1340:../../Source/Kernel/rme_kernel.c ****             
1341:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Del(Cpt,
 1605              		.loc 1 1341 20
 1606 0460 28301BE5 		ldr	r3, [fp, #-40]
 1607 0464 0310A0E1 		mov	r1, r3
1342:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
1343:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Cpt */
 1608              		.loc 1 1343 49
 1609 0468 34301BE5 		ldr	r3, [fp, #-52]
1341:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
 1610              		.loc 1 1341 20
 1611 046c 0320A0E1 		mov	r2, r3
 1612 0470 14001BE5 		ldr	r0, [fp, #-20]
 1613 0474 FEFFFFEB 		bl	_RME_Cpt_Del
 1614 0478 10000BE5 		str	r0, [fp, #-16]
1344:../../Source/Kernel/rme_kernel.c ****             break;
 1615              		.loc 1 1344 13
 1616 047c 220100EA 		b	.L123
 1617              	.L120:
1345:../../Source/Kernel/rme_kernel.c ****         }
1346:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_FRZ:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 53


1347:../../Source/Kernel/rme_kernel.c ****         {
1348:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1349:../../Source/Kernel/rme_kernel.c ****             
1350:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Frz(Cpt,
 1618              		.loc 1 1350 20
 1619 0480 28301BE5 		ldr	r3, [fp, #-40]
 1620 0484 0310A0E1 		mov	r1, r3
1351:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
1352:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Frz */
 1621              		.loc 1 1352 49
 1622 0488 34301BE5 		ldr	r3, [fp, #-52]
1350:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
 1623              		.loc 1 1350 20
 1624 048c 0320A0E1 		mov	r2, r3
 1625 0490 14001BE5 		ldr	r0, [fp, #-20]
 1626 0494 FEFFFFEB 		bl	_RME_Cpt_Frz
 1627 0498 10000BE5 		str	r0, [fp, #-16]
1353:../../Source/Kernel/rme_kernel.c ****             break;
 1628              		.loc 1 1353 13
 1629 049c 1A0100EA 		b	.L123
 1630              	.L119:
1354:../../Source/Kernel/rme_kernel.c ****         }
1355:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_ADD:
1356:../../Source/Kernel/rme_kernel.c ****         {
1357:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1358:../../Source/Kernel/rme_kernel.c ****             
1359:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Add(Cpt,
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1631              		.loc 1 1360 44
 1632 04a0 34301BE5 		ldr	r3, [fp, #-52]
 1633 04a4 2338A0E1 		lsr	r3, r3, #16
1359:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1634              		.loc 1 1359 20
 1635 04a8 03E0A0E1 		mov	lr, r3
1361:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Dst */
 1636              		.loc 1 1361 44
 1637 04ac 34301BE5 		ldr	r3, [fp, #-52]
1359:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1638              		.loc 1 1359 20
 1639 04b0 73C0FFE6 		uxth	ip, r3
1362:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Cpt_Sr
 1640              		.loc 1 1362 44
 1641 04b4 30301BE5 		ldr	r3, [fp, #-48]
 1642 04b8 2338A0E1 		lsr	r3, r3, #16
1359:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1643              		.loc 1 1359 20
 1644 04bc 0340A0E1 		mov	r4, r3
1363:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[1]),          /* rme_cid_t Cap_Src */
 1645              		.loc 1 1363 44
 1646 04c0 30301BE5 		ldr	r3, [fp, #-48]
1359:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1647              		.loc 1 1359 20
 1648 04c4 7330FFE6 		uxth	r3, r3
 1649 04c8 2C201BE5 		ldr	r2, [fp, #-44]
1364:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Flag */
1365:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_KM(Svc,Cid));                     /* rme_ptr_t Ext_Flag *
 1650              		.loc 1 1365 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 54


 1651 04cc 24101BE5 		ldr	r1, [fp, #-36]
 1652 04d0 0108A0E1 		lsl	r0, r1, #16
1359:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1653              		.loc 1 1359 20
 1654 04d4 28101BE5 		ldr	r1, [fp, #-40]
 1655 04d8 011080E1 		orr	r1, r0, r1
 1656 04dc 08108DE5 		str	r1, [sp, #8]
 1657 04e0 04208DE5 		str	r2, [sp, #4]
 1658 04e4 00308DE5 		str	r3, [sp]
 1659 04e8 0430A0E1 		mov	r3, r4
 1660 04ec 0C20A0E1 		mov	r2, ip
 1661 04f0 0E10A0E1 		mov	r1, lr
 1662 04f4 14001BE5 		ldr	r0, [fp, #-20]
 1663 04f8 FEFFFFEB 		bl	_RME_Cpt_Add
 1664 04fc 10000BE5 		str	r0, [fp, #-16]
1366:../../Source/Kernel/rme_kernel.c ****             break;
 1665              		.loc 1 1366 13
 1666 0500 010100EA 		b	.L123
 1667              	.L118:
1367:../../Source/Kernel/rme_kernel.c ****         }
1368:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_REM:
1369:../../Source/Kernel/rme_kernel.c ****         {
1370:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1371:../../Source/Kernel/rme_kernel.c ****             
1372:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Rem(Cpt,
 1668              		.loc 1 1372 20
 1669 0504 28301BE5 		ldr	r3, [fp, #-40]
 1670 0508 0310A0E1 		mov	r1, r3
1373:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
1374:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Rem */
 1671              		.loc 1 1374 49
 1672 050c 34301BE5 		ldr	r3, [fp, #-52]
1372:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
 1673              		.loc 1 1372 20
 1674 0510 0320A0E1 		mov	r2, r3
 1675 0514 14001BE5 		ldr	r0, [fp, #-20]
 1676 0518 FEFFFFEB 		bl	_RME_Cpt_Rem
 1677 051c 10000BE5 		str	r0, [fp, #-16]
1375:../../Source/Kernel/rme_kernel.c ****             break;
 1678              		.loc 1 1375 13
 1679 0520 F90000EA 		b	.L123
 1680              	.L117:
1376:../../Source/Kernel/rme_kernel.c ****         }
1377:../../Source/Kernel/rme_kernel.c ****         
1378:../../Source/Kernel/rme_kernel.c ****         /* Page table */
1379:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1380:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CRT:
1381:../../Source/Kernel/rme_kernel.c ****         {
1382:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1383:../../Source/Kernel/rme_kernel.c ****             
1384:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Crt(Cpt,
 1681              		.loc 1 1384 20
 1682 0524 28301BE5 		ldr	r3, [fp, #-40]
 1683 0528 0340A0E1 		mov	r4, r3
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1386:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1684              		.loc 1 1386 44
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 55


 1685 052c 34301BE5 		ldr	r3, [fp, #-52]
 1686 0530 2338A0E1 		lsr	r3, r3, #16
1384:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1687              		.loc 1 1384 20
 1688 0534 0350A0E1 		mov	r5, r3
1387:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_Q1(Param[0]),          /* rme_cid_t Cap_Pgt */
 1689              		.loc 1 1387 44
 1690 0538 34301BE5 		ldr	r3, [fp, #-52]
 1691 053c 2334A0E1 		lsr	r3, r3, #8
1384:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1692              		.loc 1 1384 20
 1693 0540 73E0EFE6 		uxtb	lr, r3
 1694 0544 30301BE5 		ldr	r3, [fp, #-48]
1388:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1389:../../Source/Kernel/rme_kernel.c ****                                 Param[2]&RME_MASK_BEGIN(1U),                /* rme_ptr_t Base */
 1695              		.loc 1 1389 38
 1696 0548 2C201BE5 		ldr	r2, [fp, #-44]
1384:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1697              		.loc 1 1384 20
 1698 054c 0120C2E3 		bic	r2, r2, #1
1390:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PT(Param[2]),                     /* rme_ptr_t Is_Top */
 1699              		.loc 1 1390 33
 1700 0550 2C101BE5 		ldr	r1, [fp, #-44]
1384:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1701              		.loc 1 1384 20
 1702 0554 011001E2 		and	r1, r1, #1
1391:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_Q0(Param[0]),                     /* rme_ptr_t Size_Order
 1703              		.loc 1 1391 33
 1704 0558 34001BE5 		ldr	r0, [fp, #-52]
1384:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1705              		.loc 1 1384 20
 1706 055c 7000EFE6 		uxtb	r0, r0
 1707 0560 24C01BE5 		ldr	ip, [fp, #-36]
 1708 0564 2CC4A0E1 		lsr	ip, ip, #8
 1709 0568 10C08DE5 		str	ip, [sp, #16]
 1710 056c 0C008DE5 		str	r0, [sp, #12]
 1711 0570 08108DE5 		str	r1, [sp, #8]
 1712 0574 04208DE5 		str	r2, [sp, #4]
 1713 0578 00308DE5 		str	r3, [sp]
 1714 057c 0E30A0E1 		mov	r3, lr
 1715 0580 0520A0E1 		mov	r2, r5
 1716 0584 0410A0E1 		mov	r1, r4
 1717 0588 14001BE5 		ldr	r0, [fp, #-20]
 1718 058c FEFFFFEB 		bl	_RME_Pgt_Crt
 1719 0590 10000BE5 		str	r0, [fp, #-16]
1392:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PC(Svc));                         /* rme_ptr_t Num_Order 
1393:../../Source/Kernel/rme_kernel.c ****             break;
 1720              		.loc 1 1393 13
 1721 0594 DC0000EA 		b	.L123
 1722              	.L116:
1394:../../Source/Kernel/rme_kernel.c ****         }
1395:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DEL:
1396:../../Source/Kernel/rme_kernel.c ****         {
1397:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1398:../../Source/Kernel/rme_kernel.c ****             
1399:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Del(Cpt,
 1723              		.loc 1 1399 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 56


 1724 0598 28301BE5 		ldr	r3, [fp, #-40]
 1725 059c 0310A0E1 		mov	r1, r3
1400:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1401:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Pgt */
 1726              		.loc 1 1401 49
 1727 05a0 34301BE5 		ldr	r3, [fp, #-52]
1399:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1728              		.loc 1 1399 20
 1729 05a4 0320A0E1 		mov	r2, r3
 1730 05a8 14001BE5 		ldr	r0, [fp, #-20]
 1731 05ac FEFFFFEB 		bl	_RME_Pgt_Del
 1732 05b0 10000BE5 		str	r0, [fp, #-16]
1402:../../Source/Kernel/rme_kernel.c ****             break;
 1733              		.loc 1 1402 13
 1734 05b4 D40000EA 		b	.L123
 1735              	.L115:
1403:../../Source/Kernel/rme_kernel.c ****         }
1404:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_ADD:
1405:../../Source/Kernel/rme_kernel.c ****         {
1406:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1407:../../Source/Kernel/rme_kernel.c ****             
1408:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Add(Cpt,
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1736              		.loc 1 1409 44
 1737 05b8 34301BE5 		ldr	r3, [fp, #-52]
 1738 05bc 2338A0E1 		lsr	r3, r3, #16
1408:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1739              		.loc 1 1408 20
 1740 05c0 03E0A0E1 		mov	lr, r3
1410:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Pos_Dst */
 1741              		.loc 1 1410 33
 1742 05c4 34301BE5 		ldr	r3, [fp, #-52]
1408:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1743              		.loc 1 1408 20
 1744 05c8 7310FFE6 		uxth	r1, r3
 1745 05cc 28001BE5 		ldr	r0, [fp, #-40]
1411:../../Source/Kernel/rme_kernel.c ****                                 Cid,                                        /* rme_ptr_t Flag_Dst *
1412:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Pgt_Sr
 1746              		.loc 1 1412 44
 1747 05d0 30301BE5 		ldr	r3, [fp, #-48]
 1748 05d4 2338A0E1 		lsr	r3, r3, #16
1408:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1749              		.loc 1 1408 20
 1750 05d8 03C0A0E1 		mov	ip, r3
1413:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Pos_Src */
 1751              		.loc 1 1413 33
 1752 05dc 30301BE5 		ldr	r3, [fp, #-48]
1408:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1753              		.loc 1 1408 20
 1754 05e0 7330FFE6 		uxth	r3, r3
 1755 05e4 2C201BE5 		ldr	r2, [fp, #-44]
 1756 05e8 08208DE5 		str	r2, [sp, #8]
 1757 05ec 04308DE5 		str	r3, [sp, #4]
 1758 05f0 00C08DE5 		str	ip, [sp]
 1759 05f4 0030A0E1 		mov	r3, r0
 1760 05f8 0120A0E1 		mov	r2, r1
 1761 05fc 0E10A0E1 		mov	r1, lr
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 57


 1762 0600 14001BE5 		ldr	r0, [fp, #-20]
 1763 0604 FEFFFFEB 		bl	_RME_Pgt_Add
 1764 0608 10000BE5 		str	r0, [fp, #-16]
1414:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Index */
1415:../../Source/Kernel/rme_kernel.c ****             break;
 1765              		.loc 1 1415 13
 1766 060c BE0000EA 		b	.L123
 1767              	.L114:
1416:../../Source/Kernel/rme_kernel.c ****         }
1417:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_REM:
1418:../../Source/Kernel/rme_kernel.c ****         {
1419:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1420:../../Source/Kernel/rme_kernel.c ****             
1421:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Rem(Cpt,
1422:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1768              		.loc 1 1422 49
 1769 0610 34301BE5 		ldr	r3, [fp, #-52]
1421:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1770              		.loc 1 1421 20
 1771 0614 0310A0E1 		mov	r1, r3
 1772 0618 30301BE5 		ldr	r3, [fp, #-48]
 1773 061c 0320A0E1 		mov	r2, r3
 1774 0620 14001BE5 		ldr	r0, [fp, #-20]
 1775 0624 FEFFFFEB 		bl	_RME_Pgt_Rem
 1776 0628 10000BE5 		str	r0, [fp, #-16]
1423:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Pos */
1424:../../Source/Kernel/rme_kernel.c ****             break;
 1777              		.loc 1 1424 13
 1778 062c B60000EA 		b	.L123
 1779              	.L113:
1425:../../Source/Kernel/rme_kernel.c ****         }
1426:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CON:
1427:../../Source/Kernel/rme_kernel.c ****         {
1428:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1429:../../Source/Kernel/rme_kernel.c ****             
1430:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Con(Cpt,
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1780              		.loc 1 1431 44
 1781 0630 34301BE5 		ldr	r3, [fp, #-52]
 1782 0634 2338A0E1 		lsr	r3, r3, #16
1430:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1783              		.loc 1 1430 20
 1784 0638 0300A0E1 		mov	r0, r3
 1785 063c 30201BE5 		ldr	r2, [fp, #-48]
1432:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1433:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Pgt_Ch
 1786              		.loc 1 1433 44
 1787 0640 34301BE5 		ldr	r3, [fp, #-52]
1430:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1788              		.loc 1 1430 20
 1789 0644 7310FFE6 		uxth	r1, r3
 1790 0648 2C301BE5 		ldr	r3, [fp, #-44]
 1791 064c 00308DE5 		str	r3, [sp]
 1792 0650 0130A0E1 		mov	r3, r1
 1793 0654 0010A0E1 		mov	r1, r0
 1794 0658 14001BE5 		ldr	r0, [fp, #-20]
 1795 065c FEFFFFEB 		bl	_RME_Pgt_Con
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 58


 1796 0660 10000BE5 		str	r0, [fp, #-16]
1434:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Flag_Child
1435:../../Source/Kernel/rme_kernel.c ****             break;
 1797              		.loc 1 1435 13
 1798 0664 A80000EA 		b	.L123
 1799              	.L112:
1436:../../Source/Kernel/rme_kernel.c ****         }
1437:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DES:
1438:../../Source/Kernel/rme_kernel.c ****         {
1439:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1440:../../Source/Kernel/rme_kernel.c ****             
1441:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Des(Cpt,
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1800              		.loc 1 1442 49
 1801 0668 34301BE5 		ldr	r3, [fp, #-52]
1441:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1802              		.loc 1 1441 20
 1803 066c 0310A0E1 		mov	r1, r3
 1804 0670 30201BE5 		ldr	r2, [fp, #-48]
1443:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1444:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt_Ch
 1805              		.loc 1 1444 49
 1806 0674 2C301BE5 		ldr	r3, [fp, #-44]
1441:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1807              		.loc 1 1441 20
 1808 0678 14001BE5 		ldr	r0, [fp, #-20]
 1809 067c FEFFFFEB 		bl	_RME_Pgt_Des
 1810 0680 10000BE5 		str	r0, [fp, #-16]
1445:../../Source/Kernel/rme_kernel.c ****             break;
 1811              		.loc 1 1445 13
 1812 0684 A00000EA 		b	.L123
 1813              	.L111:
1446:../../Source/Kernel/rme_kernel.c ****         }
1447:../../Source/Kernel/rme_kernel.c **** #endif
1448:../../Source/Kernel/rme_kernel.c ****         /* Process */
1449:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CRT:
1450:../../Source/Kernel/rme_kernel.c ****         {
1451:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1452:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
 1814              		.loc 1 1452 20
 1815 0688 28301BE5 		ldr	r3, [fp, #-40]
 1816 068c 0310A0E1 		mov	r1, r3
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1454:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1817              		.loc 1 1454 49
 1818 0690 34301BE5 		ldr	r3, [fp, #-52]
1452:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1819              		.loc 1 1452 20
 1820 0694 0320A0E1 		mov	r2, r3
1455:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
 1821              		.loc 1 1455 49
 1822 0698 30301BE5 		ldr	r3, [fp, #-48]
1452:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1823              		.loc 1 1452 20
 1824 069c 0300A0E1 		mov	r0, r3
1456:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt */
 1825              		.loc 1 1456 49
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 59


 1826 06a0 2C301BE5 		ldr	r3, [fp, #-44]
1452:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1827              		.loc 1 1452 20
 1828 06a4 00308DE5 		str	r3, [sp]
 1829 06a8 0030A0E1 		mov	r3, r0
 1830 06ac 14001BE5 		ldr	r0, [fp, #-20]
 1831 06b0 FEFFFFEB 		bl	_RME_Prc_Crt
 1832 06b4 10000BE5 		str	r0, [fp, #-16]
1457:../../Source/Kernel/rme_kernel.c **** #else
1458:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
1459:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1460:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
1462:../../Source/Kernel/rme_kernel.c ****                                 (rme_ptr_t)Param[2]);                       /* rme_ptr_t Raw_Pgt */
1463:../../Source/Kernel/rme_kernel.c **** #endif
1464:../../Source/Kernel/rme_kernel.c ****             break;
 1833              		.loc 1 1464 13
 1834 06b8 930000EA 		b	.L123
 1835              	.L110:
1465:../../Source/Kernel/rme_kernel.c ****         }
1466:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_DEL:
1467:../../Source/Kernel/rme_kernel.c ****         {
1468:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1469:../../Source/Kernel/rme_kernel.c ****             
1470:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Del(Cpt,
 1836              		.loc 1 1470 20
 1837 06bc 28301BE5 		ldr	r3, [fp, #-40]
 1838 06c0 0310A0E1 		mov	r1, r3
1471:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1472:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Prc */
 1839              		.loc 1 1472 49
 1840 06c4 34301BE5 		ldr	r3, [fp, #-52]
1470:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1841              		.loc 1 1470 20
 1842 06c8 0320A0E1 		mov	r2, r3
 1843 06cc 14001BE5 		ldr	r0, [fp, #-20]
 1844 06d0 FEFFFFEB 		bl	_RME_Prc_Del
 1845 06d4 10000BE5 		str	r0, [fp, #-16]
1473:../../Source/Kernel/rme_kernel.c ****             break;
 1846              		.loc 1 1473 13
 1847 06d8 8B0000EA 		b	.L123
 1848              	.L109:
1474:../../Source/Kernel/rme_kernel.c ****         }
1475:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CPT:
1476:../../Source/Kernel/rme_kernel.c ****         {
1477:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1478:../../Source/Kernel/rme_kernel.c ****             
1479:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Cpt(Cpt,
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1849              		.loc 1 1480 49
 1850 06dc 34301BE5 		ldr	r3, [fp, #-52]
1479:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1851              		.loc 1 1479 20
 1852 06e0 0310A0E1 		mov	r1, r3
1481:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Cpt */
 1853              		.loc 1 1481 49
 1854 06e4 30301BE5 		ldr	r3, [fp, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 60


1479:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1855              		.loc 1 1479 20
 1856 06e8 0320A0E1 		mov	r2, r3
 1857 06ec 14001BE5 		ldr	r0, [fp, #-20]
 1858 06f0 FEFFFFEB 		bl	_RME_Prc_Cpt
 1859 06f4 10000BE5 		str	r0, [fp, #-16]
1482:../../Source/Kernel/rme_kernel.c ****             break;
 1860              		.loc 1 1482 13
 1861 06f8 830000EA 		b	.L123
 1862              	.L108:
1483:../../Source/Kernel/rme_kernel.c ****         }
1484:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_PGT:
1485:../../Source/Kernel/rme_kernel.c ****         {
1486:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1487:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1488:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1863              		.loc 1 1489 49
 1864 06fc 34301BE5 		ldr	r3, [fp, #-52]
1488:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1865              		.loc 1 1488 20
 1866 0700 0310A0E1 		mov	r1, r3
1490:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Pgt */
 1867              		.loc 1 1490 49
 1868 0704 30301BE5 		ldr	r3, [fp, #-48]
1488:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1869              		.loc 1 1488 20
 1870 0708 0320A0E1 		mov	r2, r3
 1871 070c 14001BE5 		ldr	r0, [fp, #-20]
 1872 0710 FEFFFFEB 		bl	_RME_Prc_Pgt
 1873 0714 10000BE5 		str	r0, [fp, #-16]
1491:../../Source/Kernel/rme_kernel.c **** #else
1492:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1493:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1494:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Raw_Pgt */
1495:../../Source/Kernel/rme_kernel.c **** #endif
1496:../../Source/Kernel/rme_kernel.c ****             break;
 1874              		.loc 1 1496 13
 1875 0718 7B0000EA 		b	.L123
 1876              	.L107:
1497:../../Source/Kernel/rme_kernel.c ****         }
1498:../../Source/Kernel/rme_kernel.c ****         
1499:../../Source/Kernel/rme_kernel.c ****         /* Thread */
1500:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_CRT:
1501:../../Source/Kernel/rme_kernel.c ****         {
1502:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1503:../../Source/Kernel/rme_kernel.c ****             
1504:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Crt(Cpt,
 1877              		.loc 1 1504 20
 1878 071c 28301BE5 		ldr	r3, [fp, #-40]
 1879 0720 0340A0E1 		mov	r4, r3
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1506:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1880              		.loc 1 1506 44
 1881 0724 34301BE5 		ldr	r3, [fp, #-52]
 1882 0728 2338A0E1 		lsr	r3, r3, #16
1504:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 61


 1883              		.loc 1 1504 20
 1884 072c 0350A0E1 		mov	r5, r3
1507:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Thd */
 1885              		.loc 1 1507 44
 1886 0730 34301BE5 		ldr	r3, [fp, #-52]
1504:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1887              		.loc 1 1504 20
 1888 0734 73C0FFE6 		uxth	ip, r3
1508:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Prc */
 1889              		.loc 1 1508 44
 1890 0738 30301BE5 		ldr	r3, [fp, #-48]
 1891 073c 2338A0E1 		lsr	r3, r3, #16
1504:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1892              		.loc 1 1504 20
 1893 0740 03E0A0E1 		mov	lr, r3
1509:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Prio_Max *
 1894              		.loc 1 1509 33
 1895 0744 30301BE5 		ldr	r3, [fp, #-48]
1504:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1896              		.loc 1 1504 20
 1897 0748 7330FFE6 		uxth	r3, r3
 1898 074c 2C201BE5 		ldr	r2, [fp, #-44]
 1899 0750 24101BE5 		ldr	r1, [fp, #-36]
 1900 0754 A113A0E1 		lsr	r1, r1, #7
 1901 0758 24001BE5 		ldr	r0, [fp, #-36]
 1902 075c 400000E2 		and	r0, r0, #64
 1903 0760 10008DE5 		str	r0, [sp, #16]
 1904 0764 0C108DE5 		str	r1, [sp, #12]
 1905 0768 08208DE5 		str	r2, [sp, #8]
 1906 076c 04308DE5 		str	r3, [sp, #4]
 1907 0770 00E08DE5 		str	lr, [sp]
 1908 0774 0C30A0E1 		mov	r3, ip
 1909 0778 0520A0E1 		mov	r2, r5
 1910 077c 0410A0E1 		mov	r1, r4
 1911 0780 14001BE5 		ldr	r0, [fp, #-20]
 1912 0784 FEFFFFEB 		bl	_RME_Thd_Crt
 1913 0788 10000BE5 		str	r0, [fp, #-16]
1510:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Raddr */
1511:../../Source/Kernel/rme_kernel.c ****                                 Svc>>7,                                     /* rme_ptr_t Attr */
1512:../../Source/Kernel/rme_kernel.c ****                                 Svc&0x40U);                                 /* rme_ptr_t Is_Hyp */
1513:../../Source/Kernel/rme_kernel.c ****             break;
 1914              		.loc 1 1513 13
 1915 078c 5E0000EA 		b	.L123
 1916              	.L106:
1514:../../Source/Kernel/rme_kernel.c ****         }
1515:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_DEL:
1516:../../Source/Kernel/rme_kernel.c ****         {
1517:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1518:../../Source/Kernel/rme_kernel.c ****             
1519:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Del(Cpt,
 1917              		.loc 1 1519 20
 1918 0790 28301BE5 		ldr	r3, [fp, #-40]
 1919 0794 0310A0E1 		mov	r1, r3
1520:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1521:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Thd */
 1920              		.loc 1 1521 49
 1921 0798 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 62


1519:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1922              		.loc 1 1519 20
 1923 079c 0320A0E1 		mov	r2, r3
 1924 07a0 14001BE5 		ldr	r0, [fp, #-20]
 1925 07a4 FEFFFFEB 		bl	_RME_Thd_Del
 1926 07a8 10000BE5 		str	r0, [fp, #-16]
1522:../../Source/Kernel/rme_kernel.c ****             break;
 1927              		.loc 1 1522 13
 1928 07ac 560000EA 		b	.L123
 1929              	.L105:
1523:../../Source/Kernel/rme_kernel.c ****         }
1524:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_BIND:
1525:../../Source/Kernel/rme_kernel.c ****         {
1526:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1527:../../Source/Kernel/rme_kernel.c ****             
1528:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Bind(Cpt,
 1930              		.loc 1 1528 20
 1931 07b0 28301BE5 		ldr	r3, [fp, #-40]
 1932 07b4 03C0A0E1 		mov	ip, r3
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
1530:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D1(Param[0]),   /* rme_cid_t Cap_Thd_Sc
 1933              		.loc 1 1530 51
 1934 07b8 34301BE5 		ldr	r3, [fp, #-52]
 1935 07bc 2338A0E1 		lsr	r3, r3, #16
1528:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1936              		.loc 1 1528 20
 1937 07c0 03E0A0E1 		mov	lr, r3
1531:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Sig */
 1938              		.loc 1 1531 51
 1939 07c4 34301BE5 		ldr	r3, [fp, #-52]
1528:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1940              		.loc 1 1528 20
 1941 07c8 7310FFE6 		uxth	r1, r3
1532:../../Source/Kernel/rme_kernel.c ****                                        (rme_tid_t)RME_PARAM_D1(Param[1]),   /* rme_tid_t TID */
 1942              		.loc 1 1532 51
 1943 07cc 30301BE5 		ldr	r3, [fp, #-48]
 1944 07d0 2338A0E1 		lsr	r3, r3, #16
1528:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1945              		.loc 1 1528 20
 1946 07d4 0300A0E1 		mov	r0, r3
1533:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D0(Param[1]),              /* rme_ptr_t Prio */
 1947              		.loc 1 1533 40
 1948 07d8 30301BE5 		ldr	r3, [fp, #-48]
1528:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1949              		.loc 1 1528 20
 1950 07dc 7330FFE6 		uxth	r3, r3
 1951 07e0 2C201BE5 		ldr	r2, [fp, #-44]
 1952 07e4 08208DE5 		str	r2, [sp, #8]
 1953 07e8 04308DE5 		str	r3, [sp, #4]
 1954 07ec 00008DE5 		str	r0, [sp]
 1955 07f0 0130A0E1 		mov	r3, r1
 1956 07f4 0E20A0E1 		mov	r2, lr
 1957 07f8 0C10A0E1 		mov	r1, ip
 1958 07fc 14001BE5 		ldr	r0, [fp, #-20]
 1959 0800 FEFFFFEB 		bl	_RME_Thd_Sched_Bind
 1960 0804 10000BE5 		str	r0, [fp, #-16]
1534:../../Source/Kernel/rme_kernel.c ****                                        Param[2]);                           /* rme_ptr_t Haddr */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 63


1535:../../Source/Kernel/rme_kernel.c ****             break;
 1961              		.loc 1 1535 13
 1962 0808 3F0000EA 		b	.L123
 1963              	.L104:
1536:../../Source/Kernel/rme_kernel.c ****         }
1537:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_RCV:
1538:../../Source/Kernel/rme_kernel.c ****         {
1539:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1540:../../Source/Kernel/rme_kernel.c ****             
1541:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Rcv(Cpt,
1542:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1964              		.loc 1 1542 55
 1965 080c 34301BE5 		ldr	r3, [fp, #-52]
1541:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1966              		.loc 1 1541 20
 1967 0810 0310A0E1 		mov	r1, r3
 1968 0814 14001BE5 		ldr	r0, [fp, #-20]
 1969 0818 FEFFFFEB 		bl	_RME_Thd_Sched_Rcv
 1970 081c 10000BE5 		str	r0, [fp, #-16]
1543:../../Source/Kernel/rme_kernel.c ****             break;
 1971              		.loc 1 1543 13
 1972 0820 390000EA 		b	.L123
 1973              	.L103:
1544:../../Source/Kernel/rme_kernel.c ****         }
1545:../../Source/Kernel/rme_kernel.c ****         
1546:../../Source/Kernel/rme_kernel.c ****         /* Signal */
1547:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_CRT:
1548:../../Source/Kernel/rme_kernel.c ****         {
1549:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1550:../../Source/Kernel/rme_kernel.c ****             
1551:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Crt(Cpt,
 1974              		.loc 1 1551 20
 1975 0824 28301BE5 		ldr	r3, [fp, #-40]
 1976 0828 0310A0E1 		mov	r1, r3
1552:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1553:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1977              		.loc 1 1553 49
 1978 082c 34301BE5 		ldr	r3, [fp, #-52]
1551:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1979              		.loc 1 1551 20
 1980 0830 0320A0E1 		mov	r2, r3
 1981 0834 14001BE5 		ldr	r0, [fp, #-20]
 1982 0838 FEFFFFEB 		bl	_RME_Sig_Crt
 1983 083c 10000BE5 		str	r0, [fp, #-16]
1554:../../Source/Kernel/rme_kernel.c ****             break;
 1984              		.loc 1 1554 13
 1985 0840 310000EA 		b	.L123
 1986              	.L102:
1555:../../Source/Kernel/rme_kernel.c ****         }
1556:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_DEL:
1557:../../Source/Kernel/rme_kernel.c ****         {
1558:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1559:../../Source/Kernel/rme_kernel.c ****             
1560:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Del(Cpt,
 1987              		.loc 1 1560 20
 1988 0844 28301BE5 		ldr	r3, [fp, #-40]
 1989 0848 0310A0E1 		mov	r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 64


1561:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1562:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1990              		.loc 1 1562 49
 1991 084c 34301BE5 		ldr	r3, [fp, #-52]
1560:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1992              		.loc 1 1560 20
 1993 0850 0320A0E1 		mov	r2, r3
 1994 0854 14001BE5 		ldr	r0, [fp, #-20]
 1995 0858 FEFFFFEB 		bl	_RME_Sig_Del
 1996 085c 10000BE5 		str	r0, [fp, #-16]
1563:../../Source/Kernel/rme_kernel.c ****             break;
 1997              		.loc 1 1563 13
 1998 0860 290000EA 		b	.L123
 1999              	.L101:
1564:../../Source/Kernel/rme_kernel.c ****         }
1565:../../Source/Kernel/rme_kernel.c ****         
1566:../../Source/Kernel/rme_kernel.c ****         /* Invocation */
1567:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_CRT:
1568:../../Source/Kernel/rme_kernel.c ****         {
1569:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1570:../../Source/Kernel/rme_kernel.c ****             
1571:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Crt(Cpt,
 2000              		.loc 1 1571 20
 2001 0864 28301BE5 		ldr	r3, [fp, #-40]
 2002 0868 0300A0E1 		mov	r0, r3
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1573:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 2003              		.loc 1 1573 44
 2004 086c 34301BE5 		ldr	r3, [fp, #-52]
 2005 0870 2338A0E1 		lsr	r3, r3, #16
1571:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2006              		.loc 1 1571 20
 2007 0874 03C0A0E1 		mov	ip, r3
1574:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2008              		.loc 1 1574 44
 2009 0878 34301BE5 		ldr	r3, [fp, #-52]
1571:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2010              		.loc 1 1571 20
 2011 087c 7320FFE6 		uxth	r2, r3
1575:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Prc */
 2012              		.loc 1 1575 49
 2013 0880 30301BE5 		ldr	r3, [fp, #-48]
1571:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2014              		.loc 1 1571 20
 2015 0884 0310A0E1 		mov	r1, r3
 2016 0888 2C301BE5 		ldr	r3, [fp, #-44]
 2017 088c 04308DE5 		str	r3, [sp, #4]
 2018 0890 00108DE5 		str	r1, [sp]
 2019 0894 0230A0E1 		mov	r3, r2
 2020 0898 0C20A0E1 		mov	r2, ip
 2021 089c 0010A0E1 		mov	r1, r0
 2022 08a0 14001BE5 		ldr	r0, [fp, #-20]
 2023 08a4 FEFFFFEB 		bl	_RME_Inv_Crt
 2024 08a8 10000BE5 		str	r0, [fp, #-16]
1576:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Raddr */
1577:../../Source/Kernel/rme_kernel.c ****             break;
 2025              		.loc 1 1577 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 65


 2026 08ac 160000EA 		b	.L123
 2027              	.L100:
1578:../../Source/Kernel/rme_kernel.c ****         }
1579:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_DEL:
1580:../../Source/Kernel/rme_kernel.c ****         {
1581:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1582:../../Source/Kernel/rme_kernel.c ****             
1583:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Del(Cpt,
 2028              		.loc 1 1583 20
 2029 08b0 28301BE5 		ldr	r3, [fp, #-40]
 2030 08b4 0310A0E1 		mov	r1, r3
1584:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1585:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Inv */
 2031              		.loc 1 1585 49
 2032 08b8 34301BE5 		ldr	r3, [fp, #-52]
1583:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2033              		.loc 1 1583 20
 2034 08bc 0320A0E1 		mov	r2, r3
 2035 08c0 14001BE5 		ldr	r0, [fp, #-20]
 2036 08c4 FEFFFFEB 		bl	_RME_Inv_Del
 2037 08c8 10000BE5 		str	r0, [fp, #-16]
1586:../../Source/Kernel/rme_kernel.c ****             break;
 2038              		.loc 1 1586 13
 2039 08cc 0E0000EA 		b	.L123
 2040              	.L98:
1587:../../Source/Kernel/rme_kernel.c ****         }
1588:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_SET:
1589:../../Source/Kernel/rme_kernel.c ****         {
1590:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1591:../../Source/Kernel/rme_kernel.c ****             
1592:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Set(Cpt,
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2041              		.loc 1 1593 44
 2042 08d0 34301BE5 		ldr	r3, [fp, #-52]
1592:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2043              		.loc 1 1592 20
 2044 08d4 7310FFE6 		uxth	r1, r3
 2045 08d8 30201BE5 		ldr	r2, [fp, #-48]
 2046 08dc 2C001BE5 		ldr	r0, [fp, #-44]
1594:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Entry */
1595:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Stack */
1596:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]));                    /* rme_ptr_t Is_Exc_Ret
 2047              		.loc 1 1596 33
 2048 08e0 34301BE5 		ldr	r3, [fp, #-52]
1592:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2049              		.loc 1 1592 20
 2050 08e4 2338A0E1 		lsr	r3, r3, #16
 2051 08e8 00308DE5 		str	r3, [sp]
 2052 08ec 0030A0E1 		mov	r3, r0
 2053 08f0 14001BE5 		ldr	r0, [fp, #-20]
 2054 08f4 FEFFFFEB 		bl	_RME_Inv_Set
 2055 08f8 10000BE5 		str	r0, [fp, #-16]
1597:../../Source/Kernel/rme_kernel.c ****             break;
 2056              		.loc 1 1597 13
 2057 08fc 020000EA 		b	.L123
 2058              	.L97:
1598:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 66


1599:../../Source/Kernel/rme_kernel.c ****         /* This is an error */
1600:../../Source/Kernel/rme_kernel.c ****         default: 
1601:../../Source/Kernel/rme_kernel.c ****         {
1602:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1603:../../Source/Kernel/rme_kernel.c ****             
1604:../../Source/Kernel/rme_kernel.c ****             Retval=RME_ERR_CPT_NULL;
 2059              		.loc 1 1604 19
 2060 0900 0030E0E3 		mvn	r3, #0
 2061 0904 10300BE5 		str	r3, [fp, #-16]
1605:../../Source/Kernel/rme_kernel.c ****             break;
 2062              		.loc 1 1605 13
 2063 0908 00F020E3 		nop
 2064              	.L123:
1606:../../Source/Kernel/rme_kernel.c ****         }
1607:../../Source/Kernel/rme_kernel.c ****     }
1608:../../Source/Kernel/rme_kernel.c ****     
1609:../../Source/Kernel/rme_kernel.c ****     /* We set the registers and return */
1610:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,Retval);
 2065              		.loc 1 1610 5
 2066 090c 10101BE5 		ldr	r1, [fp, #-16]
 2067 0910 38001BE5 		ldr	r0, [fp, #-56]
 2068 0914 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 2069 0918 120000EA 		b	.L69
 2070              	.L126:
1167:../../Source/Kernel/rme_kernel.c ****     }
 2071              		.loc 1 1167 9
 2072 091c 00F020E3 		nop
 2073 0920 100000EA 		b	.L69
 2074              	.L127:
1201:../../Source/Kernel/rme_kernel.c ****     }
 2075              		.loc 1 1201 9
 2076 0924 00F020E3 		nop
 2077 0928 0E0000EA 		b	.L69
 2078              	.L129:
1226:../../Source/Kernel/rme_kernel.c ****         }
 2079              		.loc 1 1226 13
 2080 092c 00F020E3 		nop
 2081 0930 0C0000EA 		b	.L69
 2082              	.L130:
1237:../../Source/Kernel/rme_kernel.c ****         }
 2083              		.loc 1 1237 13
 2084 0934 00F020E3 		nop
 2085 0938 0A0000EA 		b	.L69
 2086              	.L131:
1251:../../Source/Kernel/rme_kernel.c ****         }
 2087              		.loc 1 1251 13
 2088 093c 00F020E3 		nop
 2089 0940 080000EA 		b	.L69
 2090              	.L132:
1261:../../Source/Kernel/rme_kernel.c ****         }
 2091              		.loc 1 1261 13
 2092 0944 00F020E3 		nop
 2093 0948 060000EA 		b	.L69
 2094              	.L133:
1274:../../Source/Kernel/rme_kernel.c ****         }
 2095              		.loc 1 1274 13
 2096 094c 00F020E3 		nop
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 67


 2097 0950 040000EA 		b	.L69
 2098              	.L134:
1290:../../Source/Kernel/rme_kernel.c ****         }
 2099              		.loc 1 1290 13
 2100 0954 00F020E3 		nop
 2101 0958 020000EA 		b	.L69
 2102              	.L135:
1302:../../Source/Kernel/rme_kernel.c ****         }
 2103              		.loc 1 1302 13
 2104 095c 00F020E3 		nop
 2105 0960 000000EA 		b	.L69
 2106              	.L136:
1313:../../Source/Kernel/rme_kernel.c ****         }
 2107              		.loc 1 1313 13
 2108 0964 00F020E3 		nop
 2109              	.L69:
1611:../../Source/Kernel/rme_kernel.c **** }
 2110              		.loc 1 1611 1
 2111 0968 0CD04BE2 		sub	sp, fp, #12
 2112              		.cfi_def_cfa 13, 16
 2113              		@ sp needed
 2114 096c 3088BDE8 		pop	{r4, r5, fp, pc}
 2115              		.cfi_endproc
 2116              	.LFE18:
 2118              		.section	.text._RME_Tim_Handler,"ax",%progbits
 2119              		.align	2
 2120              		.global	_RME_Tim_Handler
 2121              		.syntax unified
 2122              		.arm
 2124              	_RME_Tim_Handler:
 2125              	.LFB19:
1612:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Svc_Handler *********************************************/
1613:../../Source/Kernel/rme_kernel.c **** 
1614:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Handler **************************************************
1615:../../Source/Kernel/rme_kernel.c **** Description : The system tick timer handler of RME.
1616:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1617:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Slice - Number of slices passed since last call of
1618:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1619:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1620:../../Source/Kernel/rme_kernel.c **** Return      : None.
1621:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1622:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Handler(struct RME_Reg_Struct* Reg,
1623:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Slice)
1624:../../Source/Kernel/rme_kernel.c **** {
 2126              		.loc 1 1624 1
 2127              		.cfi_startproc
 2128              		@ args = 0, pretend = 0, frame = 16
 2129              		@ frame_needed = 1, uses_anonymous_args = 0
 2130 0000 00482DE9 		push	{fp, lr}
 2131              		.cfi_def_cfa_offset 8
 2132              		.cfi_offset 11, -8
 2133              		.cfi_offset 14, -4
 2134 0004 04B08DE2 		add	fp, sp, #4
 2135              		.cfi_def_cfa 11, 4
 2136 0008 10D04DE2 		sub	sp, sp, #16
 2137 000c 10000BE5 		str	r0, [fp, #-16]
 2138 0010 14100BE5 		str	r1, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 68


1625:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
1626:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1627:../../Source/Kernel/rme_kernel.c ****     
1628:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 2139              		.loc 1 1628 10
 2140 0014 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2141 0018 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2142 001c 08300BE5 		str	r3, [fp, #-8]
1629:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 2143              		.loc 1 1629 12
 2144 0020 08301BE5 		ldr	r3, [fp, #-8]
 2145 0024 043093E5 		ldr	r3, [r3, #4]
 2146 0028 0C300BE5 		str	r3, [fp, #-12]
1630:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2147              		.loc 1 1630 22
 2148 002c 0C301BE5 		ldr	r3, [fp, #-12]
 2149 0030 183093E5 		ldr	r3, [r3, #24]
 2150              		.loc 1 1630 7
 2151 0034 0E0173E3 		cmn	r3, #-2147483645
 2152 0038 1500008A 		bhi	.L138
1631:../../Source/Kernel/rme_kernel.c ****     {
1632:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1633:../../Source/Kernel/rme_kernel.c **** 
1634:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, and see if the timeslice is used up */
1635:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2153              		.loc 1 1635 32
 2154 003c 0C301BE5 		ldr	r3, [fp, #-12]
 2155 0040 183093E5 		ldr	r3, [r3, #24]
 2156              		.loc 1 1635 11
 2157 0044 14201BE5 		ldr	r2, [fp, #-20]
 2158 0048 030052E1 		cmp	r2, r3
 2159 004c 0600002A 		bcs	.L139
1636:../../Source/Kernel/rme_kernel.c ****         {
1637:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1638:../../Source/Kernel/rme_kernel.c ****             
1639:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2160              		.loc 1 1639 33
 2161 0050 0C301BE5 		ldr	r3, [fp, #-12]
 2162 0054 182093E5 		ldr	r2, [r3, #24]
 2163 0058 14301BE5 		ldr	r3, [fp, #-20]
 2164 005c 032042E0 		sub	r2, r2, r3
 2165 0060 0C301BE5 		ldr	r3, [fp, #-12]
 2166 0064 182083E5 		str	r2, [r3, #24]
 2167 0068 090000EA 		b	.L138
 2168              	.L139:
1640:../../Source/Kernel/rme_kernel.c ****         }
1641:../../Source/Kernel/rme_kernel.c ****         else
1642:../../Source/Kernel/rme_kernel.c ****         {
1643:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1644:../../Source/Kernel/rme_kernel.c **** 
1645:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
1646:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 2169              		.loc 1 1646 33
 2170 006c 0C301BE5 		ldr	r3, [fp, #-12]
 2171 0070 0020A0E3 		mov	r2, #0
 2172 0074 182083E5 		str	r2, [r3, #24]
1647:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 69


 2173              		.loc 1 1647 13
 2174 0078 0C001BE5 		ldr	r0, [fp, #-12]
 2175 007c FEFFFFEB 		bl	_RME_Run_Del
1648:../../Source/Kernel/rme_kernel.c ****             
1649:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
1650:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 2176              		.loc 1 1650 33
 2177 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2178 0084 0220A0E3 		mov	r2, #2
 2179 0088 1C2083E5 		str	r2, [r3, #28]
1651:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 2180              		.loc 1 1651 13
 2181 008c 0C001BE5 		ldr	r0, [fp, #-12]
 2182 0090 FEFFFFEB 		bl	_RME_Run_Notif
 2183              	.L138:
1652:../../Source/Kernel/rme_kernel.c ****         }
1653:../../Source/Kernel/rme_kernel.c ****     }
1654:../../Source/Kernel/rme_kernel.c ****     else
1655:../../Source/Kernel/rme_kernel.c ****     {
1656:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1657:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1658:../../Source/Kernel/rme_kernel.c ****     }
1659:../../Source/Kernel/rme_kernel.c **** 
1660:../../Source/Kernel/rme_kernel.c ****     /* Send to the system tick timer endpoint. This endpoint is per-core */
1661:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_Snd(Local->Sig_Tim);
 2184              		.loc 1 1661 5
 2185 0094 08301BE5 		ldr	r3, [fp, #-8]
 2186 0098 083093E5 		ldr	r3, [r3, #8]
 2187 009c 0300A0E1 		mov	r0, r3
 2188 00a0 FEFFFFEB 		bl	_RME_Kern_Snd
1662:../../Source/Kernel/rme_kernel.c **** 
1663:../../Source/Kernel/rme_kernel.c ****     /* All kernel send complete, now pick the highest priority thread to run */
1664:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 2189              		.loc 1 1664 5
 2190 00a4 08101BE5 		ldr	r1, [fp, #-8]
 2191 00a8 10001BE5 		ldr	r0, [fp, #-16]
 2192 00ac FEFFFFEB 		bl	_RME_Kern_High
1665:../../Source/Kernel/rme_kernel.c **** }
 2193              		.loc 1 1665 1
 2194 00b0 00F020E3 		nop
 2195 00b4 04D04BE2 		sub	sp, fp, #4
 2196              		.cfi_def_cfa 13, 8
 2197              		@ sp needed
 2198 00b8 0088BDE8 		pop	{fp, pc}
 2199              		.cfi_endproc
 2200              	.LFE19:
 2202              		.section	.text._RME_Tim_Elapse,"ax",%progbits
 2203              		.align	2
 2204              		.global	_RME_Tim_Elapse
 2205              		.syntax unified
 2206              		.arm
 2208              	_RME_Tim_Elapse:
 2209              	.LFB20:
1666:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Handler *********************************************/
1667:../../Source/Kernel/rme_kernel.c **** 
1668:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Elapse ***************************************************
1669:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 70


1670:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Slice - Number of slices passed since last call of
1671:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1672:../../Source/Kernel/rme_kernel.c **** Output      : None.
1673:../../Source/Kernel/rme_kernel.c **** Return      : None.
1674:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1675:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Elapse(rme_ptr_t Slice)
1676:../../Source/Kernel/rme_kernel.c **** {
 2210              		.loc 1 1676 1
 2211              		.cfi_startproc
 2212              		@ args = 0, pretend = 0, frame = 16
 2213              		@ frame_needed = 1, uses_anonymous_args = 0
 2214              		@ link register save eliminated.
 2215 0000 04B02DE5 		str	fp, [sp, #-4]!
 2216              		.cfi_def_cfa_offset 4
 2217              		.cfi_offset 11, -4
 2218 0004 00B08DE2 		add	fp, sp, #0
 2219              		.cfi_def_cfa_register 11
 2220 0008 14D04DE2 		sub	sp, sp, #20
 2221 000c 10000BE5 		str	r0, [fp, #-16]
1677:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1678:../../Source/Kernel/rme_kernel.c ****     
1679:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 2222              		.loc 1 1679 12
 2223 0010 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2224 0014 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2225 0018 043093E5 		ldr	r3, [r3, #4]
 2226 001c 08300BE5 		str	r3, [fp, #-8]
1680:../../Source/Kernel/rme_kernel.c ****     
1681:../../Source/Kernel/rme_kernel.c ****     /* We don't want the slices less than 1 because we want to keep the kernel
1682:../../Source/Kernel/rme_kernel.c ****      * SVC invariants - the current thread must still be running after this */
1683:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2227              		.loc 1 1683 22
 2228 0020 08301BE5 		ldr	r3, [fp, #-8]
 2229 0024 183093E5 		ldr	r3, [r3, #24]
 2230              		.loc 1 1683 7
 2231 0028 0E0173E3 		cmn	r3, #-2147483645
 2232 002c 0E00008A 		bhi	.L143
1684:../../Source/Kernel/rme_kernel.c ****     {
1685:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1686:../../Source/Kernel/rme_kernel.c **** 
1687:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, but no less than 1, so the thread is
1688:../../Source/Kernel/rme_kernel.c ****          * always running, which keeps the invariant of the kernel */
1689:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2233              		.loc 1 1689 32
 2234 0030 08301BE5 		ldr	r3, [fp, #-8]
 2235 0034 183093E5 		ldr	r3, [r3, #24]
 2236              		.loc 1 1689 11
 2237 0038 10201BE5 		ldr	r2, [fp, #-16]
 2238 003c 030052E1 		cmp	r2, r3
 2239 0040 0600002A 		bcs	.L142
1690:../../Source/Kernel/rme_kernel.c ****         {
1691:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1692:../../Source/Kernel/rme_kernel.c ****             
1693:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2240              		.loc 1 1693 33
 2241 0044 08301BE5 		ldr	r3, [fp, #-8]
 2242 0048 182093E5 		ldr	r2, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 71


 2243 004c 10301BE5 		ldr	r3, [fp, #-16]
 2244 0050 032042E0 		sub	r2, r2, r3
 2245 0054 08301BE5 		ldr	r3, [fp, #-8]
 2246 0058 182083E5 		str	r2, [r3, #24]
1694:../../Source/Kernel/rme_kernel.c ****         }
1695:../../Source/Kernel/rme_kernel.c ****         else
1696:../../Source/Kernel/rme_kernel.c ****         {
1697:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1698:../../Source/Kernel/rme_kernel.c ****             
1699:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=1U;
1700:../../Source/Kernel/rme_kernel.c ****         }
1701:../../Source/Kernel/rme_kernel.c ****     }
1702:../../Source/Kernel/rme_kernel.c ****     else
1703:../../Source/Kernel/rme_kernel.c ****     {
1704:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1705:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1706:../../Source/Kernel/rme_kernel.c ****     }
1707:../../Source/Kernel/rme_kernel.c **** }
 2247              		.loc 1 1707 1
 2248 005c 020000EA 		b	.L143
 2249              	.L142:
1699:../../Source/Kernel/rme_kernel.c ****         }
 2250              		.loc 1 1699 33
 2251 0060 08301BE5 		ldr	r3, [fp, #-8]
 2252 0064 0120A0E3 		mov	r2, #1
 2253 0068 182083E5 		str	r2, [r3, #24]
 2254              	.L143:
 2255              		.loc 1 1707 1
 2256 006c 00F020E3 		nop
 2257 0070 00D08BE2 		add	sp, fp, #0
 2258              		.cfi_def_cfa_register 13
 2259              		@ sp needed
 2260 0074 04B09DE4 		ldr	fp, [sp], #4
 2261              		.cfi_restore 11
 2262              		.cfi_def_cfa_offset 0
 2263 0078 1EFF2FE1 		bx	lr
 2264              		.cfi_endproc
 2265              	.LFE20:
 2267              		.section	.text._RME_Tim_Future,"ax",%progbits
 2268              		.align	2
 2269              		.global	_RME_Tim_Future
 2270              		.syntax unified
 2271              		.arm
 2273              	_RME_Tim_Future:
 2274              	.LFB21:
1708:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Elapse **********************************************/
1709:../../Source/Kernel/rme_kernel.c **** 
1710:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Future ***************************************************
1711:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1712:../../Source/Kernel/rme_kernel.c **** Input       : None.
1713:../../Source/Kernel/rme_kernel.c **** Output      : None.
1714:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - How many slices to program until the next timeout.
1715:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1716:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Tim_Future(void)
1717:../../Source/Kernel/rme_kernel.c **** {
 2275              		.loc 1 1717 1
 2276              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 72


 2277              		@ args = 0, pretend = 0, frame = 0
 2278              		@ frame_needed = 1, uses_anonymous_args = 0
 2279              		@ link register save eliminated.
 2280 0000 04B02DE5 		str	fp, [sp, #-4]!
 2281              		.cfi_def_cfa_offset 4
 2282              		.cfi_offset 11, -4
 2283 0004 00B08DE2 		add	fp, sp, #0
 2284              		.cfi_def_cfa_register 11
1718:../../Source/Kernel/rme_kernel.c ****     /* If we're running an infinite thread, just program infinite time,
1719:../../Source/Kernel/rme_kernel.c ****      * these values are very large so that's fine */
1720:../../Source/Kernel/rme_kernel.c ****     return RME_CPU_LOCAL()->Thd_Cur->Sched.Slice;
 2285              		.loc 1 1720 27
 2286 0008 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2287 000c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2288 0010 043093E5 		ldr	r3, [r3, #4]
 2289              		.loc 1 1720 43
 2290 0014 183093E5 		ldr	r3, [r3, #24]
1721:../../Source/Kernel/rme_kernel.c **** }
 2291              		.loc 1 1721 1
 2292 0018 0300A0E1 		mov	r0, r3
 2293 001c 00D08BE2 		add	sp, fp, #0
 2294              		.cfi_def_cfa_register 13
 2295              		@ sp needed
 2296 0020 04B09DE4 		ldr	fp, [sp], #4
 2297              		.cfi_restore 11
 2298              		.cfi_def_cfa_offset 0
 2299 0024 1EFF2FE1 		bx	lr
 2300              		.cfi_endproc
 2301              	.LFE21:
 2303              		.section	.text._RME_Cpt_Boot_Init,"ax",%progbits
 2304              		.align	2
 2305              		.global	_RME_Cpt_Boot_Init
 2306              		.syntax unified
 2307              		.arm
 2309              	_RME_Cpt_Boot_Init:
 2310              	.LFB22:
1722:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Future **********************************************/
1723:../../Source/Kernel/rme_kernel.c **** 
1724:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Init ************************************************
1725:../../Source/Kernel/rme_kernel.c **** Description : Create the first capability table in the system, at boot-time. 
1726:../../Source/Kernel/rme_kernel.c ****               This function must be called at system startup before setting up
1727:../../Source/Kernel/rme_kernel.c ****               any other kernel objects.
1728:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
1729:../../Source/Kernel/rme_kernel.c **** Input       : rme_cid_t Cap_Cpt - The capability slot that you want this newly
1730:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1731:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1732:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the
1733:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1734:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capability entries in the
1735:../../Source/Kernel/rme_kernel.c ****                                     capability table.
1736:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1737:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1738:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Init(rme_cid_t Cap_Cpt,
1739:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Vaddr,
1740:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Entry_Num)
1741:../../Source/Kernel/rme_kernel.c **** {
 2311              		.loc 1 1741 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 73


 2312              		.cfi_startproc
 2313              		@ args = 0, pretend = 0, frame = 24
 2314              		@ frame_needed = 1, uses_anonymous_args = 0
 2315 0000 00482DE9 		push	{fp, lr}
 2316              		.cfi_def_cfa_offset 8
 2317              		.cfi_offset 11, -8
 2318              		.cfi_offset 14, -4
 2319 0004 04B08DE2 		add	fp, sp, #4
 2320              		.cfi_def_cfa 11, 4
 2321 0008 18D04DE2 		sub	sp, sp, #24
 2322 000c 10000BE5 		str	r0, [fp, #-16]
 2323 0010 14100BE5 		str	r1, [fp, #-20]
 2324 0014 18200BE5 		str	r2, [fp, #-24]
1742:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1743:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1744:../../Source/Kernel/rme_kernel.c **** 
1745:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1746:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2325              		.loc 1 1746 7
 2326 0018 18301BE5 		ldr	r3, [fp, #-24]
 2327 001c 000053E3 		cmp	r3, #0
 2328 0020 0200000A 		beq	.L147
 2329              		.loc 1 1746 23 discriminator 1
 2330 0024 18301BE5 		ldr	r3, [fp, #-24]
 2331 0028 800053E3 		cmp	r3, #128
 2332 002c 0100009A 		bls	.L148
 2333              	.L147:
1747:../../Source/Kernel/rme_kernel.c ****     {
1748:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1749:../../Source/Kernel/rme_kernel.c ****         
1750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2334              		.loc 1 1750 16
 2335 0030 0230E0E3 		mvn	r3, #2
 2336 0034 300000EA 		b	.L149
 2337              	.L148:
1751:../../Source/Kernel/rme_kernel.c ****     }
1752:../../Source/Kernel/rme_kernel.c ****     else
1753:../../Source/Kernel/rme_kernel.c ****     {
1754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1756:../../Source/Kernel/rme_kernel.c ****     }
1757:../../Source/Kernel/rme_kernel.c ****     
1758:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
1759:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2338              		.loc 1 1759 8
 2339 0038 18301BE5 		ldr	r3, [fp, #-24]
 2340 003c 8332A0E1 		lsl	r3, r3, #5
 2341 0040 0310A0E1 		mov	r1, r3
 2342 0044 14001BE5 		ldr	r0, [fp, #-20]
 2343 0048 FEFFFFEB 		bl	_RME_Kot_Mark
 2344 004c 0030A0E1 		mov	r3, r0
 2345              		.loc 1 1759 7
 2346 0050 000053E3 		cmp	r3, #0
 2347 0054 0100000A 		beq	.L150
1760:../../Source/Kernel/rme_kernel.c ****     {
1761:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1762:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 74


1763:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2348              		.loc 1 1763 16
 2349 0058 0330E0E3 		mvn	r3, #3
 2350 005c 260000EA 		b	.L149
 2351              	.L150:
1764:../../Source/Kernel/rme_kernel.c ****     }
1765:../../Source/Kernel/rme_kernel.c ****     else
1766:../../Source/Kernel/rme_kernel.c ****     {
1767:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1768:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1769:../../Source/Kernel/rme_kernel.c ****     }
1770:../../Source/Kernel/rme_kernel.c **** 
1771:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1772:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2352              		.loc 1 1772 14
 2353 0060 0030A0E3 		mov	r3, #0
 2354 0064 08300BE5 		str	r3, [fp, #-8]
 2355              		.loc 1 1772 5
 2356 0068 090000EA 		b	.L151
 2357              	.L152:
1773:../../Source/Kernel/rme_kernel.c ****     {
1774:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2358              		.loc 1 1774 9 discriminator 3
 2359 006c 08301BE5 		ldr	r3, [fp, #-8]
 2360 0070 8322A0E1 		lsl	r2, r3, #5
 2361 0074 14301BE5 		ldr	r3, [fp, #-20]
 2362 0078 033082E0 		add	r3, r2, r3
 2363 007c 0320A0E1 		mov	r2, r3
 2364 0080 0030A0E3 		mov	r3, #0
 2365 0084 003082E5 		str	r3, [r2]
1772:../../Source/Kernel/rme_kernel.c ****     {
 2366              		.loc 1 1772 39 discriminator 3
 2367 0088 08301BE5 		ldr	r3, [fp, #-8]
 2368 008c 013083E2 		add	r3, r3, #1
 2369 0090 08300BE5 		str	r3, [fp, #-8]
 2370              	.L151:
1772:../../Source/Kernel/rme_kernel.c ****     {
 2371              		.loc 1 1772 5 discriminator 1
 2372 0094 08201BE5 		ldr	r2, [fp, #-8]
 2373 0098 18301BE5 		ldr	r3, [fp, #-24]
 2374 009c 030052E1 		cmp	r2, r3
 2375 00a0 F1FFFF3A 		bcc	.L152
1775:../../Source/Kernel/rme_kernel.c ****     }
1776:../../Source/Kernel/rme_kernel.c **** 
1777:../../Source/Kernel/rme_kernel.c ****     Cpt=&(((struct RME_Cap_Cpt*)Vaddr)[Cap_Cpt]);
 2376              		.loc 1 1777 39
 2377 00a4 10301BE5 		ldr	r3, [fp, #-16]
 2378 00a8 8322A0E1 		lsl	r2, r3, #5
 2379 00ac 14301BE5 		ldr	r3, [fp, #-20]
 2380 00b0 033082E0 		add	r3, r2, r3
 2381              		.loc 1 1777 8
 2382 00b4 0C300BE5 		str	r3, [fp, #-12]
1778:../../Source/Kernel/rme_kernel.c ****     
1779:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1780:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Root_Ref=1U;
 2383              		.loc 1 1780 23
 2384 00b8 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 75


 2385 00bc 0120A0E3 		mov	r2, #1
 2386 00c0 042083E5 		str	r2, [r3, #4]
1781:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Object=Vaddr;
 2387              		.loc 1 1781 21
 2388 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 2389 00c8 14201BE5 		ldr	r2, [fp, #-20]
 2390 00cc 0C2083E5 		str	r2, [r3, #12]
1782:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Flag=RME_CPT_FLAG_ALL;
 2391              		.loc 1 1782 19
 2392 00d0 0C301BE5 		ldr	r3, [fp, #-12]
 2393 00d4 FF20A0E3 		mov	r2, #255
 2394 00d8 082083E5 		str	r2, [r3, #8]
1783:../../Source/Kernel/rme_kernel.c ****     
1784:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1785:../../Source/Kernel/rme_kernel.c ****     Cpt->Entry_Num=Entry_Num;
 2395              		.loc 1 1785 19
 2396 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 2397 00e0 18201BE5 		ldr	r2, [fp, #-24]
 2398 00e4 142083E5 		str	r2, [r3, #20]
1786:../../Source/Kernel/rme_kernel.c **** 
1787:../../Source/Kernel/rme_kernel.c ****     /* At last, write into slot the correct information, and set status to VALID */
1788:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt->Head.Type_Stat),
 2399              		.loc 1 1788 5
 2400 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 2401 00ec 0314A0E3 		mov	r1, #50331648
 2402 00f0 0300A0E1 		mov	r0, r3
 2403 00f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
1789:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1790:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1792:../../Source/Kernel/rme_kernel.c **** 
1793:../../Source/Kernel/rme_kernel.c ****     return Cap_Cpt;
 2404              		.loc 1 1793 12
 2405 00f8 10301BE5 		ldr	r3, [fp, #-16]
 2406              	.L149:
1794:../../Source/Kernel/rme_kernel.c **** }
 2407              		.loc 1 1794 1
 2408 00fc 0300A0E1 		mov	r0, r3
 2409 0100 04D04BE2 		sub	sp, fp, #4
 2410              		.cfi_def_cfa 13, 8
 2411              		@ sp needed
 2412 0104 0088BDE8 		pop	{fp, pc}
 2413              		.cfi_endproc
 2414              	.LFE22:
 2416              		.section	.text._RME_Cpt_Boot_Crt,"ax",%progbits
 2417              		.align	2
 2418              		.global	_RME_Cpt_Boot_Crt
 2419              		.syntax unified
 2420              		.arm
 2422              	_RME_Cpt_Boot_Crt:
 2423              	.LFB23:
1795:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Init *******************************************/
1796:../../Source/Kernel/rme_kernel.c **** 
1797:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Crt *************************************************
1798:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time capability table at the designated memory
1799:../../Source/Kernel/rme_kernel.c ****               address.
1800:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 76


1801:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1802:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1803:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1804:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1805:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1806:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1807:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the 
1808:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1809:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capabilities in the capability table.
1810:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1811:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1812:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
1813:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
1814:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Crt,
1815:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
1816:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Entry_Num)
1817:../../Source/Kernel/rme_kernel.c **** {
 2424              		.loc 1 1817 1
 2425              		.cfi_startproc
 2426              		@ args = 4, pretend = 0, frame = 32
 2427              		@ frame_needed = 1, uses_anonymous_args = 0
 2428 0000 00482DE9 		push	{fp, lr}
 2429              		.cfi_def_cfa_offset 8
 2430              		.cfi_offset 11, -8
 2431              		.cfi_offset 14, -4
 2432 0004 04B08DE2 		add	fp, sp, #4
 2433              		.cfi_def_cfa 11, 4
 2434 0008 20D04DE2 		sub	sp, sp, #32
 2435 000c 18000BE5 		str	r0, [fp, #-24]
 2436 0010 1C100BE5 		str	r1, [fp, #-28]
 2437 0014 20200BE5 		str	r2, [fp, #-32]
 2438 0018 24300BE5 		str	r3, [fp, #-36]
1818:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1819:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1820:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1821:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1822:../../Source/Kernel/rme_kernel.c ****     
1823:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big - this is not restricted by RME_CPT_ENTRY_MAX */
1824:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2439              		.loc 1 1824 7
 2440 001c 04309BE5 		ldr	r3, [fp, #4]
 2441 0020 000053E3 		cmp	r3, #0
 2442 0024 0200000A 		beq	.L154
 2443              		.loc 1 1824 23 discriminator 1
 2444 0028 04309BE5 		ldr	r3, [fp, #4]
 2445 002c 800053E3 		cmp	r3, #128
 2446 0030 0100009A 		bls	.L155
 2447              	.L154:
1825:../../Source/Kernel/rme_kernel.c ****     {
1826:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1827:../../Source/Kernel/rme_kernel.c ****         
1828:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2448              		.loc 1 1828 16
 2449 0034 0230E0E3 		mvn	r3, #2
 2450 0038 B40000EA 		b	.L156
 2451              	.L155:
1829:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 77


1830:../../Source/Kernel/rme_kernel.c ****     else
1831:../../Source/Kernel/rme_kernel.c ****     {
1832:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1833:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1834:../../Source/Kernel/rme_kernel.c ****     }
1835:../../Source/Kernel/rme_kernel.c **** 
1836:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1837:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,
 2452              		.loc 1 1837 5
 2453 003c 1C301BE5 		ldr	r3, [fp, #-28]
 2454 0040 803003E2 		and	r3, r3, #128
 2455 0044 000053E3 		cmp	r3, #0
 2456 0048 1D00001A 		bne	.L157
 2457              		.loc 1 1837 5 is_stmt 0 discriminator 1
 2458 004c 18301BE5 		ldr	r3, [fp, #-24]
 2459 0050 142093E5 		ldr	r2, [r3, #20]
 2460 0054 1C301BE5 		ldr	r3, [fp, #-28]
 2461 0058 030052E1 		cmp	r2, r3
 2462 005c 0100008A 		bhi	.L158
 2463              		.loc 1 1837 5 discriminator 3
 2464 0060 0230E0E3 		mvn	r3, #2
 2465 0064 A90000EA 		b	.L156
 2466              	.L158:
 2467              		.loc 1 1837 5 discriminator 4
 2468 0068 1C301BE5 		ldr	r3, [fp, #-28]
 2469 006c 8322A0E1 		lsl	r2, r3, #5
 2470 0070 18301BE5 		ldr	r3, [fp, #-24]
 2471 0074 0C3093E5 		ldr	r3, [r3, #12]
 2472 0078 033082E0 		add	r3, r2, r3
 2473 007c 0C300BE5 		str	r3, [fp, #-12]
 2474 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2475 0084 0300A0E1 		mov	r0, r3
 2476 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2477 008c 10000BE5 		str	r0, [fp, #-16]
 2478 0090 10301BE5 		ldr	r3, [fp, #-16]
 2479 0094 2338A0E1 		lsr	r3, r3, #16
 2480 0098 7330EFE6 		uxtb	r3, r3
 2481 009c 020053E3 		cmp	r3, #2
 2482 00a0 0100001A 		bne	.L159
 2483              		.loc 1 1837 5 discriminator 5
 2484 00a4 0830E0E3 		mvn	r3, #8
 2485 00a8 980000EA 		b	.L156
 2486              	.L159:
 2487              		.loc 1 1837 5 discriminator 6
 2488 00ac 10301BE5 		ldr	r3, [fp, #-16]
 2489 00b0 233CA0E1 		lsr	r3, r3, #24
 2490 00b4 030053E3 		cmp	r3, #3
 2491 00b8 4100000A 		beq	.L160
 2492              		.loc 1 1837 5 discriminator 7
 2493 00bc 0130E0E3 		mvn	r3, #1
 2494 00c0 920000EA 		b	.L156
 2495              	.L157:
 2496              		.loc 1 1837 5 discriminator 2
 2497 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 2498 00c8 2324A0E1 		lsr	r2, r3, #8
 2499 00cc 18301BE5 		ldr	r3, [fp, #-24]
 2500 00d0 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 78


 2501 00d4 030052E1 		cmp	r2, r3
 2502 00d8 0100003A 		bcc	.L161
 2503              		.loc 1 1837 5 discriminator 8
 2504 00dc 0230E0E3 		mvn	r3, #2
 2505 00e0 8A0000EA 		b	.L156
 2506              	.L161:
 2507              		.loc 1 1837 5 discriminator 9
 2508 00e4 1C301BE5 		ldr	r3, [fp, #-28]
 2509 00e8 2334A0E1 		lsr	r3, r3, #8
 2510 00ec 8322A0E1 		lsl	r2, r3, #5
 2511 00f0 18301BE5 		ldr	r3, [fp, #-24]
 2512 00f4 0C3093E5 		ldr	r3, [r3, #12]
 2513 00f8 033082E0 		add	r3, r2, r3
 2514 00fc 0C300BE5 		str	r3, [fp, #-12]
 2515 0100 0C301BE5 		ldr	r3, [fp, #-12]
 2516 0104 0300A0E1 		mov	r0, r3
 2517 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2518 010c 10000BE5 		str	r0, [fp, #-16]
 2519 0110 10301BE5 		ldr	r3, [fp, #-16]
 2520 0114 2338A0E1 		lsr	r3, r3, #16
 2521 0118 7330EFE6 		uxtb	r3, r3
 2522 011c 020053E3 		cmp	r3, #2
 2523 0120 0100001A 		bne	.L162
 2524              		.loc 1 1837 5 discriminator 10
 2525 0124 0830E0E3 		mvn	r3, #8
 2526 0128 780000EA 		b	.L156
 2527              	.L162:
 2528              		.loc 1 1837 5 discriminator 11
 2529 012c 10301BE5 		ldr	r3, [fp, #-16]
 2530 0130 233CA0E1 		lsr	r3, r3, #24
 2531 0134 030053E3 		cmp	r3, #3
 2532 0138 0100000A 		beq	.L163
 2533              		.loc 1 1837 5 discriminator 12
 2534 013c 0130E0E3 		mvn	r3, #1
 2535 0140 720000EA 		b	.L156
 2536              	.L163:
 2537              		.loc 1 1837 5 discriminator 13
 2538 0144 1C301BE5 		ldr	r3, [fp, #-28]
 2539 0148 7F2003E2 		and	r2, r3, #127
 2540 014c 0C301BE5 		ldr	r3, [fp, #-12]
 2541 0150 143093E5 		ldr	r3, [r3, #20]
 2542 0154 030052E1 		cmp	r2, r3
 2543 0158 0100003A 		bcc	.L164
 2544              		.loc 1 1837 5 discriminator 14
 2545 015c 0230E0E3 		mvn	r3, #2
 2546 0160 6A0000EA 		b	.L156
 2547              	.L164:
 2548              		.loc 1 1837 5 discriminator 15
 2549 0164 1C301BE5 		ldr	r3, [fp, #-28]
 2550 0168 7F3003E2 		and	r3, r3, #127
 2551 016c 8322A0E1 		lsl	r2, r3, #5
 2552 0170 0C301BE5 		ldr	r3, [fp, #-12]
 2553 0174 0C3093E5 		ldr	r3, [r3, #12]
 2554 0178 033082E0 		add	r3, r2, r3
 2555 017c 0C300BE5 		str	r3, [fp, #-12]
 2556 0180 0C301BE5 		ldr	r3, [fp, #-12]
 2557 0184 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 79


 2558 0188 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2559 018c 10000BE5 		str	r0, [fp, #-16]
 2560 0190 10301BE5 		ldr	r3, [fp, #-16]
 2561 0194 2338A0E1 		lsr	r3, r3, #16
 2562 0198 7330EFE6 		uxtb	r3, r3
 2563 019c 020053E3 		cmp	r3, #2
 2564 01a0 0100001A 		bne	.L165
 2565              		.loc 1 1837 5 discriminator 16
 2566 01a4 0830E0E3 		mvn	r3, #8
 2567 01a8 580000EA 		b	.L156
 2568              	.L165:
 2569              		.loc 1 1837 5 discriminator 17
 2570 01ac 10301BE5 		ldr	r3, [fp, #-16]
 2571 01b0 233CA0E1 		lsr	r3, r3, #24
 2572 01b4 030053E3 		cmp	r3, #3
 2573 01b8 0100000A 		beq	.L160
 2574              		.loc 1 1837 5 discriminator 18
 2575 01bc 0130E0E3 		mvn	r3, #1
 2576 01c0 520000EA 		b	.L156
 2577              	.L160:
1838:../../Source/Kernel/rme_kernel.c ****                    Cap_Cpt_Crt,
1839:../../Source/Kernel/rme_kernel.c ****                    RME_CAP_TYPE_CPT,
1840:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,
1841:../../Source/Kernel/rme_kernel.c ****                    Cpt_Op,
1842:../../Source/Kernel/rme_kernel.c ****                    Type_Stat);
1843:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1844:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2578              		.loc 1 1844 5 is_stmt 1
 2579 01c4 0C301BE5 		ldr	r3, [fp, #-12]
 2580 01c8 083093E5 		ldr	r3, [r3, #8]
 2581 01cc 013003E2 		and	r3, r3, #1
 2582 01d0 000053E3 		cmp	r3, #0
 2583 01d4 0100001A 		bne	.L166
 2584              		.loc 1 1844 5 is_stmt 0 discriminator 1
 2585 01d8 0630E0E3 		mvn	r3, #6
 2586 01dc 4B0000EA 		b	.L156
 2587              	.L166:
1845:../../Source/Kernel/rme_kernel.c **** 
1846:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1847:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 2588              		.loc 1 1847 5 is_stmt 1
 2589 01e0 0C301BE5 		ldr	r3, [fp, #-12]
 2590 01e4 142093E5 		ldr	r2, [r3, #20]
 2591 01e8 20301BE5 		ldr	r3, [fp, #-32]
 2592 01ec 030052E1 		cmp	r2, r3
 2593 01f0 0100008A 		bhi	.L167
 2594              		.loc 1 1847 5 is_stmt 0 discriminator 1
 2595 01f4 0230E0E3 		mvn	r3, #2
 2596 01f8 440000EA 		b	.L156
 2597              	.L167:
 2598              		.loc 1 1847 5 discriminator 2
 2599 01fc 20301BE5 		ldr	r3, [fp, #-32]
 2600 0200 8322A0E1 		lsl	r2, r3, #5
 2601 0204 0C301BE5 		ldr	r3, [fp, #-12]
 2602 0208 0C3093E5 		ldr	r3, [r3, #12]
 2603 020c 033082E0 		add	r3, r2, r3
 2604 0210 14300BE5 		str	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 80


1848:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1849:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 2605              		.loc 1 1849 5 is_stmt 1 discriminator 2
 2606 0214 14301BE5 		ldr	r3, [fp, #-20]
 2607 0218 0128A0E3 		mov	r2, #65536
 2608 021c 0010A0E3 		mov	r1, #0
 2609 0220 0300A0E1 		mov	r0, r3
 2610 0224 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 2611 0228 0030A0E1 		mov	r3, r0
 2612 022c 000053E3 		cmp	r3, #0
 2613 0230 0100001A 		bne	.L168
 2614              		.loc 1 1849 5 is_stmt 0 discriminator 1
 2615 0234 0430E0E3 		mvn	r3, #4
 2616 0238 340000EA 		b	.L156
 2617              	.L168:
 2618              		.loc 1 1849 5 discriminator 2
 2619 023c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 2620 0240 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 2621 0244 002093E5 		ldr	r2, [r3]
 2622 0248 14301BE5 		ldr	r3, [fp, #-20]
 2623 024c 102083E5 		str	r2, [r3, #16]
1850:../../Source/Kernel/rme_kernel.c **** 
1851:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1852:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2624              		.loc 1 1852 8 is_stmt 1 discriminator 2
 2625 0250 04309BE5 		ldr	r3, [fp, #4]
 2626 0254 8332A0E1 		lsl	r3, r3, #5
 2627 0258 0310A0E1 		mov	r1, r3
 2628 025c 24001BE5 		ldr	r0, [fp, #-36]
 2629 0260 FEFFFFEB 		bl	_RME_Kot_Mark
 2630 0264 0030A0E1 		mov	r3, r0
 2631              		.loc 1 1852 7 discriminator 2
 2632 0268 000053E3 		cmp	r3, #0
 2633 026c 0500000A 		beq	.L169
1853:../../Source/Kernel/rme_kernel.c ****     {
1854:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1855:../../Source/Kernel/rme_kernel.c ****         
1856:../../Source/Kernel/rme_kernel.c ****         /* Abort the creation process */
1857:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 2634              		.loc 1 1857 9
 2635 0270 14301BE5 		ldr	r3, [fp, #-20]
 2636 0274 0010A0E3 		mov	r1, #0
 2637 0278 0300A0E1 		mov	r0, r3
 2638 027c FEFFFFEB 		bl	__RME_A7A_Write_Release
1858:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2639              		.loc 1 1858 16
 2640 0280 0330E0E3 		mvn	r3, #3
 2641 0284 210000EA 		b	.L156
 2642              	.L169:
1859:../../Source/Kernel/rme_kernel.c ****     }
1860:../../Source/Kernel/rme_kernel.c ****     else
1861:../../Source/Kernel/rme_kernel.c ****     {
1862:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1863:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1864:../../Source/Kernel/rme_kernel.c ****     }
1865:../../Source/Kernel/rme_kernel.c **** 
1866:../../Source/Kernel/rme_kernel.c ****     /* Object init */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 81


1867:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2643              		.loc 1 1867 14
 2644 0288 0030A0E3 		mov	r3, #0
 2645 028c 08300BE5 		str	r3, [fp, #-8]
 2646              		.loc 1 1867 5
 2647 0290 090000EA 		b	.L170
 2648              	.L171:
1868:../../Source/Kernel/rme_kernel.c ****     {
1869:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2649              		.loc 1 1869 9 discriminator 3
 2650 0294 08301BE5 		ldr	r3, [fp, #-8]
 2651 0298 8322A0E1 		lsl	r2, r3, #5
 2652 029c 24301BE5 		ldr	r3, [fp, #-36]
 2653 02a0 033082E0 		add	r3, r2, r3
 2654 02a4 0320A0E1 		mov	r2, r3
 2655 02a8 0030A0E3 		mov	r3, #0
 2656 02ac 003082E5 		str	r3, [r2]
1867:../../Source/Kernel/rme_kernel.c ****     {
 2657              		.loc 1 1867 39 discriminator 3
 2658 02b0 08301BE5 		ldr	r3, [fp, #-8]
 2659 02b4 013083E2 		add	r3, r3, #1
 2660 02b8 08300BE5 		str	r3, [fp, #-8]
 2661              	.L170:
1867:../../Source/Kernel/rme_kernel.c ****     {
 2662              		.loc 1 1867 5 discriminator 1
 2663 02bc 08201BE5 		ldr	r2, [fp, #-8]
 2664 02c0 04309BE5 		ldr	r3, [fp, #4]
 2665 02c4 030052E1 		cmp	r2, r3
 2666 02c8 F1FFFF3A 		bcc	.L171
1870:../../Source/Kernel/rme_kernel.c ****     }
1871:../../Source/Kernel/rme_kernel.c **** 
1872:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1873:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 2667              		.loc 1 1873 27
 2668 02cc 14301BE5 		ldr	r3, [fp, #-20]
 2669 02d0 0020A0E3 		mov	r2, #0
 2670 02d4 042083E5 		str	r2, [r3, #4]
1874:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 2671              		.loc 1 1874 25
 2672 02d8 14301BE5 		ldr	r3, [fp, #-20]
 2673 02dc 24201BE5 		ldr	r2, [fp, #-36]
 2674 02e0 0C2083E5 		str	r2, [r3, #12]
1875:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 2675              		.loc 1 1875 23
 2676 02e4 14301BE5 		ldr	r3, [fp, #-20]
 2677 02e8 FF20A0E3 		mov	r2, #255
 2678 02ec 082083E5 		str	r2, [r3, #8]
1876:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1877:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 2679              		.loc 1 1877 23
 2680 02f0 14301BE5 		ldr	r3, [fp, #-20]
 2681 02f4 04209BE5 		ldr	r2, [fp, #4]
 2682 02f8 142083E5 		str	r2, [r3, #20]
1878:../../Source/Kernel/rme_kernel.c **** 
1879:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1880:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 2683              		.loc 1 1880 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 82


 2684 02fc 14301BE5 		ldr	r3, [fp, #-20]
 2685 0300 0314A0E3 		mov	r1, #50331648
 2686 0304 0300A0E1 		mov	r0, r3
 2687 0308 FEFFFFEB 		bl	__RME_A7A_Write_Release
1881:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1882:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1883:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1884:../../Source/Kernel/rme_kernel.c **** 
1885:../../Source/Kernel/rme_kernel.c ****     return 0;
 2688              		.loc 1 1885 12
 2689 030c 0030A0E3 		mov	r3, #0
 2690              	.L156:
1886:../../Source/Kernel/rme_kernel.c **** }
 2691              		.loc 1 1886 1
 2692 0310 0300A0E1 		mov	r0, r3
 2693 0314 04D04BE2 		sub	sp, fp, #4
 2694              		.cfi_def_cfa 13, 8
 2695              		@ sp needed
 2696 0318 0088BDE8 		pop	{fp, pc}
 2697              		.cfi_endproc
 2698              	.LFE23:
 2700              		.section	.text._RME_Cpt_Crt,"ax",%progbits
 2701              		.align	2
 2702              		.syntax unified
 2703              		.arm
 2705              	_RME_Cpt_Crt:
 2706              	.LFB24:
1887:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Crt ********************************************/
1888:../../Source/Kernel/rme_kernel.c **** 
1889:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Crt ******************************************************
1890:../../Source/Kernel/rme_kernel.c **** Description : Create a capability table.
1891:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1892:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1893:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1894:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1895:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
1896:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
1897:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1898:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1899:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1900:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the 
1901:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1902:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of entries in that capability
1903:../../Source/Kernel/rme_kernel.c ****                                     table.
1904:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1905:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1906:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Crt(struct RME_Cap_Cpt* Cpt,
1907:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
1908:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
1909:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Crt,
1910:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
1911:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry_Num)
1912:../../Source/Kernel/rme_kernel.c **** {
 2707              		.loc 1 1912 1
 2708              		.cfi_startproc
 2709              		@ args = 8, pretend = 0, frame = 40
 2710              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 83


 2711 0000 00482DE9 		push	{fp, lr}
 2712              		.cfi_def_cfa_offset 8
 2713              		.cfi_offset 11, -8
 2714              		.cfi_offset 14, -4
 2715 0004 04B08DE2 		add	fp, sp, #4
 2716              		.cfi_def_cfa 11, 4
 2717 0008 28D04DE2 		sub	sp, sp, #40
 2718 000c 20000BE5 		str	r0, [fp, #-32]
 2719 0010 24100BE5 		str	r1, [fp, #-36]
 2720 0014 28200BE5 		str	r2, [fp, #-40]
 2721 0018 2C300BE5 		str	r3, [fp, #-44]
1913:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1914:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1915:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
1916:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1917:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1918:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
1919:../../Source/Kernel/rme_kernel.c **** 
1920:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1921:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2722              		.loc 1 1921 7
 2723 001c 08309BE5 		ldr	r3, [fp, #8]
 2724 0020 000053E3 		cmp	r3, #0
 2725 0024 0200000A 		beq	.L173
 2726              		.loc 1 1921 23 discriminator 1
 2727 0028 08309BE5 		ldr	r3, [fp, #8]
 2728 002c 800053E3 		cmp	r3, #128
 2729 0030 0100009A 		bls	.L174
 2730              	.L173:
1922:../../Source/Kernel/rme_kernel.c ****     {
1923:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1924:../../Source/Kernel/rme_kernel.c ****         
1925:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2731              		.loc 1 1925 16
 2732 0034 0230E0E3 		mvn	r3, #2
 2733 0038 430100EA 		b	.L175
 2734              	.L174:
1926:../../Source/Kernel/rme_kernel.c ****     }
1927:../../Source/Kernel/rme_kernel.c ****     else
1928:../../Source/Kernel/rme_kernel.c ****     {
1929:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1930:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1931:../../Source/Kernel/rme_kernel.c ****     }
1932:../../Source/Kernel/rme_kernel.c **** 
1933:../../Source/Kernel/rme_kernel.c ****     /* Are we overrunning the size limit? */
1934:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
1935:../../Source/Kernel/rme_kernel.c ****     if(Entry_Num>RME_CPT_ENTRY_MAX)
1936:../../Source/Kernel/rme_kernel.c ****     {
1937:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1938:../../Source/Kernel/rme_kernel.c ****         
1939:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
1940:../../Source/Kernel/rme_kernel.c ****     }
1941:../../Source/Kernel/rme_kernel.c ****     else
1942:../../Source/Kernel/rme_kernel.c ****     {
1943:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1944:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1945:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 84


1946:../../Source/Kernel/rme_kernel.c **** #endif
1947:../../Source/Kernel/rme_kernel.c **** 
1948:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1949:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 2735              		.loc 1 1949 5
 2736 003c 24301BE5 		ldr	r3, [fp, #-36]
 2737 0040 803003E2 		and	r3, r3, #128
 2738 0044 000053E3 		cmp	r3, #0
 2739 0048 1D00001A 		bne	.L176
 2740              		.loc 1 1949 5 is_stmt 0 discriminator 1
 2741 004c 20301BE5 		ldr	r3, [fp, #-32]
 2742 0050 142093E5 		ldr	r2, [r3, #20]
 2743 0054 24301BE5 		ldr	r3, [fp, #-36]
 2744 0058 030052E1 		cmp	r2, r3
 2745 005c 0100008A 		bhi	.L177
 2746              		.loc 1 1949 5 discriminator 3
 2747 0060 0230E0E3 		mvn	r3, #2
 2748 0064 380100EA 		b	.L175
 2749              	.L177:
 2750              		.loc 1 1949 5 discriminator 4
 2751 0068 24301BE5 		ldr	r3, [fp, #-36]
 2752 006c 8322A0E1 		lsl	r2, r3, #5
 2753 0070 20301BE5 		ldr	r3, [fp, #-32]
 2754 0074 0C3093E5 		ldr	r3, [r3, #12]
 2755 0078 033082E0 		add	r3, r2, r3
 2756 007c 0C300BE5 		str	r3, [fp, #-12]
 2757 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2758 0084 0300A0E1 		mov	r0, r3
 2759 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2760 008c 14000BE5 		str	r0, [fp, #-20]
 2761 0090 14301BE5 		ldr	r3, [fp, #-20]
 2762 0094 2338A0E1 		lsr	r3, r3, #16
 2763 0098 7330EFE6 		uxtb	r3, r3
 2764 009c 020053E3 		cmp	r3, #2
 2765 00a0 0100001A 		bne	.L178
 2766              		.loc 1 1949 5 discriminator 5
 2767 00a4 0830E0E3 		mvn	r3, #8
 2768 00a8 270100EA 		b	.L175
 2769              	.L178:
 2770              		.loc 1 1949 5 discriminator 6
 2771 00ac 14301BE5 		ldr	r3, [fp, #-20]
 2772 00b0 233CA0E1 		lsr	r3, r3, #24
 2773 00b4 030053E3 		cmp	r3, #3
 2774 00b8 4100000A 		beq	.L179
 2775              		.loc 1 1949 5 discriminator 7
 2776 00bc 0130E0E3 		mvn	r3, #1
 2777 00c0 210100EA 		b	.L175
 2778              	.L176:
 2779              		.loc 1 1949 5 discriminator 2
 2780 00c4 24301BE5 		ldr	r3, [fp, #-36]
 2781 00c8 2324A0E1 		lsr	r2, r3, #8
 2782 00cc 20301BE5 		ldr	r3, [fp, #-32]
 2783 00d0 143093E5 		ldr	r3, [r3, #20]
 2784 00d4 030052E1 		cmp	r2, r3
 2785 00d8 0100003A 		bcc	.L180
 2786              		.loc 1 1949 5 discriminator 8
 2787 00dc 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 85


 2788 00e0 190100EA 		b	.L175
 2789              	.L180:
 2790              		.loc 1 1949 5 discriminator 9
 2791 00e4 24301BE5 		ldr	r3, [fp, #-36]
 2792 00e8 2334A0E1 		lsr	r3, r3, #8
 2793 00ec 8322A0E1 		lsl	r2, r3, #5
 2794 00f0 20301BE5 		ldr	r3, [fp, #-32]
 2795 00f4 0C3093E5 		ldr	r3, [r3, #12]
 2796 00f8 033082E0 		add	r3, r2, r3
 2797 00fc 0C300BE5 		str	r3, [fp, #-12]
 2798 0100 0C301BE5 		ldr	r3, [fp, #-12]
 2799 0104 0300A0E1 		mov	r0, r3
 2800 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2801 010c 14000BE5 		str	r0, [fp, #-20]
 2802 0110 14301BE5 		ldr	r3, [fp, #-20]
 2803 0114 2338A0E1 		lsr	r3, r3, #16
 2804 0118 7330EFE6 		uxtb	r3, r3
 2805 011c 020053E3 		cmp	r3, #2
 2806 0120 0100001A 		bne	.L181
 2807              		.loc 1 1949 5 discriminator 10
 2808 0124 0830E0E3 		mvn	r3, #8
 2809 0128 070100EA 		b	.L175
 2810              	.L181:
 2811              		.loc 1 1949 5 discriminator 11
 2812 012c 14301BE5 		ldr	r3, [fp, #-20]
 2813 0130 233CA0E1 		lsr	r3, r3, #24
 2814 0134 030053E3 		cmp	r3, #3
 2815 0138 0100000A 		beq	.L182
 2816              		.loc 1 1949 5 discriminator 12
 2817 013c 0130E0E3 		mvn	r3, #1
 2818 0140 010100EA 		b	.L175
 2819              	.L182:
 2820              		.loc 1 1949 5 discriminator 13
 2821 0144 24301BE5 		ldr	r3, [fp, #-36]
 2822 0148 7F2003E2 		and	r2, r3, #127
 2823 014c 0C301BE5 		ldr	r3, [fp, #-12]
 2824 0150 143093E5 		ldr	r3, [r3, #20]
 2825 0154 030052E1 		cmp	r2, r3
 2826 0158 0100003A 		bcc	.L183
 2827              		.loc 1 1949 5 discriminator 14
 2828 015c 0230E0E3 		mvn	r3, #2
 2829 0160 F90000EA 		b	.L175
 2830              	.L183:
 2831              		.loc 1 1949 5 discriminator 15
 2832 0164 24301BE5 		ldr	r3, [fp, #-36]
 2833 0168 7F3003E2 		and	r3, r3, #127
 2834 016c 8322A0E1 		lsl	r2, r3, #5
 2835 0170 0C301BE5 		ldr	r3, [fp, #-12]
 2836 0174 0C3093E5 		ldr	r3, [r3, #12]
 2837 0178 033082E0 		add	r3, r2, r3
 2838 017c 0C300BE5 		str	r3, [fp, #-12]
 2839 0180 0C301BE5 		ldr	r3, [fp, #-12]
 2840 0184 0300A0E1 		mov	r0, r3
 2841 0188 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2842 018c 14000BE5 		str	r0, [fp, #-20]
 2843 0190 14301BE5 		ldr	r3, [fp, #-20]
 2844 0194 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 86


 2845 0198 7330EFE6 		uxtb	r3, r3
 2846 019c 020053E3 		cmp	r3, #2
 2847 01a0 0100001A 		bne	.L184
 2848              		.loc 1 1949 5 discriminator 16
 2849 01a4 0830E0E3 		mvn	r3, #8
 2850 01a8 E70000EA 		b	.L175
 2851              	.L184:
 2852              		.loc 1 1949 5 discriminator 17
 2853 01ac 14301BE5 		ldr	r3, [fp, #-20]
 2854 01b0 233CA0E1 		lsr	r3, r3, #24
 2855 01b4 030053E3 		cmp	r3, #3
 2856 01b8 0100000A 		beq	.L179
 2857              		.loc 1 1949 5 discriminator 18
 2858 01bc 0130E0E3 		mvn	r3, #1
 2859 01c0 E10000EA 		b	.L175
 2860              	.L179:
1950:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
1951:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 2861              		.loc 1 1951 5 is_stmt 1
 2862 01c4 28301BE5 		ldr	r3, [fp, #-40]
 2863 01c8 803003E2 		and	r3, r3, #128
 2864 01cc 000053E3 		cmp	r3, #0
 2865 01d0 1D00001A 		bne	.L185
 2866              		.loc 1 1951 5 is_stmt 0 discriminator 1
 2867 01d4 20301BE5 		ldr	r3, [fp, #-32]
 2868 01d8 142093E5 		ldr	r2, [r3, #20]
 2869 01dc 28301BE5 		ldr	r3, [fp, #-40]
 2870 01e0 030052E1 		cmp	r2, r3
 2871 01e4 0100008A 		bhi	.L186
 2872              		.loc 1 1951 5 discriminator 3
 2873 01e8 0230E0E3 		mvn	r3, #2
 2874 01ec D60000EA 		b	.L175
 2875              	.L186:
 2876              		.loc 1 1951 5 discriminator 4
 2877 01f0 28301BE5 		ldr	r3, [fp, #-40]
 2878 01f4 8322A0E1 		lsl	r2, r3, #5
 2879 01f8 20301BE5 		ldr	r3, [fp, #-32]
 2880 01fc 0C3093E5 		ldr	r3, [r3, #12]
 2881 0200 033082E0 		add	r3, r2, r3
 2882 0204 10300BE5 		str	r3, [fp, #-16]
 2883 0208 10301BE5 		ldr	r3, [fp, #-16]
 2884 020c 0300A0E1 		mov	r0, r3
 2885 0210 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2886 0214 14000BE5 		str	r0, [fp, #-20]
 2887 0218 14301BE5 		ldr	r3, [fp, #-20]
 2888 021c 2338A0E1 		lsr	r3, r3, #16
 2889 0220 7330EFE6 		uxtb	r3, r3
 2890 0224 020053E3 		cmp	r3, #2
 2891 0228 0100001A 		bne	.L187
 2892              		.loc 1 1951 5 discriminator 5
 2893 022c 0830E0E3 		mvn	r3, #8
 2894 0230 C50000EA 		b	.L175
 2895              	.L187:
 2896              		.loc 1 1951 5 discriminator 6
 2897 0234 14301BE5 		ldr	r3, [fp, #-20]
 2898 0238 233CA0E1 		lsr	r3, r3, #24
 2899 023c 020053E3 		cmp	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 87


 2900 0240 4100000A 		beq	.L188
 2901              		.loc 1 1951 5 discriminator 7
 2902 0244 0130E0E3 		mvn	r3, #1
 2903 0248 BF0000EA 		b	.L175
 2904              	.L185:
 2905              		.loc 1 1951 5 discriminator 2
 2906 024c 28301BE5 		ldr	r3, [fp, #-40]
 2907 0250 2324A0E1 		lsr	r2, r3, #8
 2908 0254 20301BE5 		ldr	r3, [fp, #-32]
 2909 0258 143093E5 		ldr	r3, [r3, #20]
 2910 025c 030052E1 		cmp	r2, r3
 2911 0260 0100003A 		bcc	.L189
 2912              		.loc 1 1951 5 discriminator 8
 2913 0264 0230E0E3 		mvn	r3, #2
 2914 0268 B70000EA 		b	.L175
 2915              	.L189:
 2916              		.loc 1 1951 5 discriminator 9
 2917 026c 28301BE5 		ldr	r3, [fp, #-40]
 2918 0270 2334A0E1 		lsr	r3, r3, #8
 2919 0274 8322A0E1 		lsl	r2, r3, #5
 2920 0278 20301BE5 		ldr	r3, [fp, #-32]
 2921 027c 0C3093E5 		ldr	r3, [r3, #12]
 2922 0280 033082E0 		add	r3, r2, r3
 2923 0284 10300BE5 		str	r3, [fp, #-16]
 2924 0288 10301BE5 		ldr	r3, [fp, #-16]
 2925 028c 0300A0E1 		mov	r0, r3
 2926 0290 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2927 0294 14000BE5 		str	r0, [fp, #-20]
 2928 0298 14301BE5 		ldr	r3, [fp, #-20]
 2929 029c 2338A0E1 		lsr	r3, r3, #16
 2930 02a0 7330EFE6 		uxtb	r3, r3
 2931 02a4 020053E3 		cmp	r3, #2
 2932 02a8 0100001A 		bne	.L190
 2933              		.loc 1 1951 5 discriminator 10
 2934 02ac 0830E0E3 		mvn	r3, #8
 2935 02b0 A50000EA 		b	.L175
 2936              	.L190:
 2937              		.loc 1 1951 5 discriminator 11
 2938 02b4 14301BE5 		ldr	r3, [fp, #-20]
 2939 02b8 233CA0E1 		lsr	r3, r3, #24
 2940 02bc 030053E3 		cmp	r3, #3
 2941 02c0 0100000A 		beq	.L191
 2942              		.loc 1 1951 5 discriminator 12
 2943 02c4 0130E0E3 		mvn	r3, #1
 2944 02c8 9F0000EA 		b	.L175
 2945              	.L191:
 2946              		.loc 1 1951 5 discriminator 13
 2947 02cc 28301BE5 		ldr	r3, [fp, #-40]
 2948 02d0 7F2003E2 		and	r2, r3, #127
 2949 02d4 10301BE5 		ldr	r3, [fp, #-16]
 2950 02d8 143093E5 		ldr	r3, [r3, #20]
 2951 02dc 030052E1 		cmp	r2, r3
 2952 02e0 0100003A 		bcc	.L192
 2953              		.loc 1 1951 5 discriminator 14
 2954 02e4 0230E0E3 		mvn	r3, #2
 2955 02e8 970000EA 		b	.L175
 2956              	.L192:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 88


 2957              		.loc 1 1951 5 discriminator 15
 2958 02ec 28301BE5 		ldr	r3, [fp, #-40]
 2959 02f0 7F3003E2 		and	r3, r3, #127
 2960 02f4 8322A0E1 		lsl	r2, r3, #5
 2961 02f8 10301BE5 		ldr	r3, [fp, #-16]
 2962 02fc 0C3093E5 		ldr	r3, [r3, #12]
 2963 0300 033082E0 		add	r3, r2, r3
 2964 0304 10300BE5 		str	r3, [fp, #-16]
 2965 0308 10301BE5 		ldr	r3, [fp, #-16]
 2966 030c 0300A0E1 		mov	r0, r3
 2967 0310 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2968 0314 14000BE5 		str	r0, [fp, #-20]
 2969 0318 14301BE5 		ldr	r3, [fp, #-20]
 2970 031c 2338A0E1 		lsr	r3, r3, #16
 2971 0320 7330EFE6 		uxtb	r3, r3
 2972 0324 020053E3 		cmp	r3, #2
 2973 0328 0100001A 		bne	.L193
 2974              		.loc 1 1951 5 discriminator 16
 2975 032c 0830E0E3 		mvn	r3, #8
 2976 0330 850000EA 		b	.L175
 2977              	.L193:
 2978              		.loc 1 1951 5 discriminator 17
 2979 0334 14301BE5 		ldr	r3, [fp, #-20]
 2980 0338 233CA0E1 		lsr	r3, r3, #24
 2981 033c 020053E3 		cmp	r3, #2
 2982 0340 0100000A 		beq	.L188
 2983              		.loc 1 1951 5 discriminator 18
 2984 0344 0130E0E3 		mvn	r3, #1
 2985 0348 7F0000EA 		b	.L175
 2986              	.L188:
1952:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
1953:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1954:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2987              		.loc 1 1954 5 is_stmt 1
 2988 034c 0C301BE5 		ldr	r3, [fp, #-12]
 2989 0350 083093E5 		ldr	r3, [r3, #8]
 2990 0354 013003E2 		and	r3, r3, #1
 2991 0358 000053E3 		cmp	r3, #0
 2992 035c 0100001A 		bne	.L194
 2993              		.loc 1 1954 5 is_stmt 0 discriminator 1
 2994 0360 0630E0E3 		mvn	r3, #6
 2995 0364 780000EA 		b	.L175
 2996              	.L194:
1955:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
1956:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_CPT,Raddr,Vaddr,RME_CPT_SIZE(Entry_Num));
 2997              		.loc 1 1956 5 is_stmt 1
 2998 0368 10301BE5 		ldr	r3, [fp, #-16]
 2999 036c 083093E5 		ldr	r3, [r3, #8]
 3000 0370 013003E2 		and	r3, r3, #1
 3001 0374 000053E3 		cmp	r3, #0
 3002 0378 0100001A 		bne	.L195
 3003              		.loc 1 1956 5 is_stmt 0 discriminator 1
 3004 037c 0630E0E3 		mvn	r3, #6
 3005 0380 710000EA 		b	.L175
 3006              	.L195:
 3007              		.loc 1 1956 5 discriminator 2
 3008 0384 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 89


 3009 0388 143093E5 		ldr	r3, [r3, #20]
 3010 038c 04209BE5 		ldr	r2, [fp, #4]
 3011 0390 033082E0 		add	r3, r2, r3
 3012 0394 18300BE5 		str	r3, [fp, #-24]
 3013 0398 18201BE5 		ldr	r2, [fp, #-24]
 3014 039c 04309BE5 		ldr	r3, [fp, #4]
 3015 03a0 030052E1 		cmp	r2, r3
 3016 03a4 0100002A 		bcs	.L196
 3017              		.loc 1 1956 5 discriminator 3
 3018 03a8 0630E0E3 		mvn	r3, #6
 3019 03ac 660000EA 		b	.L175
 3020              	.L196:
 3021              		.loc 1 1956 5 discriminator 4
 3022 03b0 10301BE5 		ldr	r3, [fp, #-16]
 3023 03b4 143093E5 		ldr	r3, [r3, #20]
 3024 03b8 18201BE5 		ldr	r2, [fp, #-24]
 3025 03bc 030052E1 		cmp	r2, r3
 3026 03c0 0100002A 		bcs	.L197
 3027              		.loc 1 1956 5 discriminator 5
 3028 03c4 0630E0E3 		mvn	r3, #6
 3029 03c8 5F0000EA 		b	.L175
 3030              	.L197:
 3031              		.loc 1 1956 5 discriminator 6
 3032 03cc 08309BE5 		ldr	r3, [fp, #8]
 3033 03d0 8322A0E1 		lsl	r2, r3, #5
 3034 03d4 18301BE5 		ldr	r3, [fp, #-24]
 3035 03d8 033082E0 		add	r3, r2, r3
 3036 03dc 18201BE5 		ldr	r2, [fp, #-24]
 3037 03e0 030052E1 		cmp	r2, r3
 3038 03e4 0100009A 		bls	.L198
 3039              		.loc 1 1956 5 discriminator 7
 3040 03e8 0630E0E3 		mvn	r3, #6
 3041 03ec 560000EA 		b	.L175
 3042              	.L198:
 3043              		.loc 1 1956 5 discriminator 8
 3044 03f0 10301BE5 		ldr	r3, [fp, #-16]
 3045 03f4 182093E5 		ldr	r2, [r3, #24]
 3046 03f8 08309BE5 		ldr	r3, [fp, #8]
 3047 03fc 8312A0E1 		lsl	r1, r3, #5
 3048 0400 18301BE5 		ldr	r3, [fp, #-24]
 3049 0404 033081E0 		add	r3, r1, r3
 3050 0408 013043E2 		sub	r3, r3, #1
 3051 040c 030052E1 		cmp	r2, r3
 3052 0410 0100002A 		bcs	.L199
 3053              		.loc 1 1956 5 discriminator 9
 3054 0414 0630E0E3 		mvn	r3, #6
 3055 0418 4B0000EA 		b	.L175
 3056              	.L199:
1957:../../Source/Kernel/rme_kernel.c **** 
1958:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1959:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 3057              		.loc 1 1959 5 is_stmt 1
 3058 041c 0C301BE5 		ldr	r3, [fp, #-12]
 3059 0420 142093E5 		ldr	r2, [r3, #20]
 3060 0424 2C301BE5 		ldr	r3, [fp, #-44]
 3061 0428 030052E1 		cmp	r2, r3
 3062 042c 0100008A 		bhi	.L200
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 90


 3063              		.loc 1 1959 5 is_stmt 0 discriminator 1
 3064 0430 0230E0E3 		mvn	r3, #2
 3065 0434 440000EA 		b	.L175
 3066              	.L200:
 3067              		.loc 1 1959 5 discriminator 2
 3068 0438 2C301BE5 		ldr	r3, [fp, #-44]
 3069 043c 8322A0E1 		lsl	r2, r3, #5
 3070 0440 0C301BE5 		ldr	r3, [fp, #-12]
 3071 0444 0C3093E5 		ldr	r3, [r3, #12]
 3072 0448 033082E0 		add	r3, r2, r3
 3073 044c 1C300BE5 		str	r3, [fp, #-28]
1960:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1961:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 3074              		.loc 1 1961 5 is_stmt 1 discriminator 2
 3075 0450 1C301BE5 		ldr	r3, [fp, #-28]
 3076 0454 0128A0E3 		mov	r2, #65536
 3077 0458 0010A0E3 		mov	r1, #0
 3078 045c 0300A0E1 		mov	r0, r3
 3079 0460 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3080 0464 0030A0E1 		mov	r3, r0
 3081 0468 000053E3 		cmp	r3, #0
 3082 046c 0100001A 		bne	.L201
 3083              		.loc 1 1961 5 is_stmt 0 discriminator 1
 3084 0470 0430E0E3 		mvn	r3, #4
 3085 0474 340000EA 		b	.L175
 3086              	.L201:
 3087              		.loc 1 1961 5 discriminator 2
 3088 0478 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3089 047c 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3090 0480 002093E5 		ldr	r2, [r3]
 3091 0484 1C301BE5 		ldr	r3, [fp, #-28]
 3092 0488 102083E5 		str	r2, [r3, #16]
1962:../../Source/Kernel/rme_kernel.c **** 
1963:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1964:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))<0)
 3093              		.loc 1 1964 8 is_stmt 1 discriminator 2
 3094 048c 08309BE5 		ldr	r3, [fp, #8]
 3095 0490 8332A0E1 		lsl	r3, r3, #5
 3096 0494 0310A0E1 		mov	r1, r3
 3097 0498 18001BE5 		ldr	r0, [fp, #-24]
 3098 049c FEFFFFEB 		bl	_RME_Kot_Mark
 3099 04a0 0030A0E1 		mov	r3, r0
 3100              		.loc 1 1964 7 discriminator 2
 3101 04a4 000053E3 		cmp	r3, #0
 3102 04a8 050000AA 		bge	.L202
1965:../../Source/Kernel/rme_kernel.c ****     {
1966:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1967:../../Source/Kernel/rme_kernel.c ****         
1968:../../Source/Kernel/rme_kernel.c ****         /* Failure. Set the Type_Stat back to 0 and abort the creation process */
1969:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 3103              		.loc 1 1969 9
 3104 04ac 1C301BE5 		ldr	r3, [fp, #-28]
 3105 04b0 0010A0E3 		mov	r1, #0
 3106 04b4 0300A0E1 		mov	r0, r3
 3107 04b8 FEFFFFEB 		bl	__RME_A7A_Write_Release
1970:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 3108              		.loc 1 1970 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 91


 3109 04bc 0330E0E3 		mvn	r3, #3
 3110 04c0 210000EA 		b	.L175
 3111              	.L202:
1971:../../Source/Kernel/rme_kernel.c ****     }
1972:../../Source/Kernel/rme_kernel.c ****     else
1973:../../Source/Kernel/rme_kernel.c ****     {
1974:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1975:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1976:../../Source/Kernel/rme_kernel.c ****     }
1977:../../Source/Kernel/rme_kernel.c **** 
1978:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1979:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3112              		.loc 1 1979 14
 3113 04c4 0030A0E3 		mov	r3, #0
 3114 04c8 08300BE5 		str	r3, [fp, #-8]
 3115              		.loc 1 1979 5
 3116 04cc 090000EA 		b	.L203
 3117              	.L204:
1980:../../Source/Kernel/rme_kernel.c ****     {
1981:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 3118              		.loc 1 1981 9 discriminator 3
 3119 04d0 08301BE5 		ldr	r3, [fp, #-8]
 3120 04d4 8322A0E1 		lsl	r2, r3, #5
 3121 04d8 18301BE5 		ldr	r3, [fp, #-24]
 3122 04dc 033082E0 		add	r3, r2, r3
 3123 04e0 0320A0E1 		mov	r2, r3
 3124 04e4 0030A0E3 		mov	r3, #0
 3125 04e8 003082E5 		str	r3, [r2]
1979:../../Source/Kernel/rme_kernel.c ****     {
 3126              		.loc 1 1979 39 discriminator 3
 3127 04ec 08301BE5 		ldr	r3, [fp, #-8]
 3128 04f0 013083E2 		add	r3, r3, #1
 3129 04f4 08300BE5 		str	r3, [fp, #-8]
 3130              	.L203:
1979:../../Source/Kernel/rme_kernel.c ****     {
 3131              		.loc 1 1979 5 discriminator 1
 3132 04f8 08201BE5 		ldr	r2, [fp, #-8]
 3133 04fc 08309BE5 		ldr	r3, [fp, #8]
 3134 0500 030052E1 		cmp	r2, r3
 3135 0504 F1FFFF3A 		bcc	.L204
1982:../../Source/Kernel/rme_kernel.c ****     }
1983:../../Source/Kernel/rme_kernel.c **** 
1984:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1985:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 3136              		.loc 1 1985 27
 3137 0508 1C301BE5 		ldr	r3, [fp, #-28]
 3138 050c 0020A0E3 		mov	r2, #0
 3139 0510 042083E5 		str	r2, [r3, #4]
1986:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 3140              		.loc 1 1986 25
 3141 0514 1C301BE5 		ldr	r3, [fp, #-28]
 3142 0518 18201BE5 		ldr	r2, [fp, #-24]
 3143 051c 0C2083E5 		str	r2, [r3, #12]
1987:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 3144              		.loc 1 1987 23
 3145 0520 1C301BE5 		ldr	r3, [fp, #-28]
 3146 0524 FF20A0E3 		mov	r2, #255
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 92


 3147 0528 082083E5 		str	r2, [r3, #8]
1988:../../Source/Kernel/rme_kernel.c ****     
1989:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1990:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 3148              		.loc 1 1990 23
 3149 052c 1C301BE5 		ldr	r3, [fp, #-28]
 3150 0530 08209BE5 		ldr	r2, [fp, #8]
 3151 0534 142083E5 		str	r2, [r3, #20]
1991:../../Source/Kernel/rme_kernel.c **** 
1992:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1993:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 3152              		.loc 1 1993 5
 3153 0538 1C301BE5 		ldr	r3, [fp, #-28]
 3154 053c 0314A0E3 		mov	r1, #50331648
 3155 0540 0300A0E1 		mov	r0, r3
 3156 0544 FEFFFFEB 		bl	__RME_A7A_Write_Release
1994:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1995:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1996:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1997:../../Source/Kernel/rme_kernel.c **** 
1998:../../Source/Kernel/rme_kernel.c ****     return 0;
 3157              		.loc 1 1998 12
 3158 0548 0030A0E3 		mov	r3, #0
 3159              	.L175:
1999:../../Source/Kernel/rme_kernel.c **** }
 3160              		.loc 1 1999 1
 3161 054c 0300A0E1 		mov	r0, r3
 3162 0550 04D04BE2 		sub	sp, fp, #4
 3163              		.cfi_def_cfa 13, 8
 3164              		@ sp needed
 3165 0554 0088BDE8 		pop	{fp, pc}
 3166              		.cfi_endproc
 3167              	.LFE24:
 3169              		.section	.rodata
 3170              		.align	2
 3171              	.LC4:
 3172 003c 30303A34 		.ascii	"00:46:18\000"
 3172      363A3138 
 3172      00
 3173 0045 000000   		.align	2
 3174              	.LC5:
 3175 0048 46656220 		.ascii	"Feb 27 2025\000"
 3175      32372032 
 3175      30323500 
 3176              		.align	2
 3177              	.LC6:
 3178 0054 2E2E2F2E 		.ascii	"../../Source/Kernel/rme_kernel.c\000"
 3178      2E2F536F 
 3178      75726365 
 3178      2F4B6572 
 3178      6E656C2F 
 3179              		.section	.text._RME_Cpt_Del,"ax",%progbits
 3180              		.align	2
 3181              		.syntax unified
 3182              		.arm
 3184              	_RME_Cpt_Del:
 3185              	.LFB25:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 93


2000:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Crt *************************************************/
2001:../../Source/Kernel/rme_kernel.c **** 
2002:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Del ******************************************************
2003:../../Source/Kernel/rme_kernel.c **** Description : Delete a layer of capability table.
2004:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2005:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Del - The capability table that contains the
2006:../../Source/Kernel/rme_kernel.c ****                                       cap to captbl.
2007:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2008:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Del - The capability to the capability table to be
2009:../../Source/Kernel/rme_kernel.c ****                                   deleted.
2010:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2011:../../Source/Kernel/rme_kernel.c **** Output      : None.
2012:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2013:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2014:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Del(struct RME_Cap_Cpt* Cpt,
2015:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Del,
2016:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Del)
2017:../../Source/Kernel/rme_kernel.c **** {
 3186              		.loc 1 2017 1
 3187              		.cfi_startproc
 3188              		@ args = 0, pretend = 0, frame = 48
 3189              		@ frame_needed = 1, uses_anonymous_args = 0
 3190 0000 00482DE9 		push	{fp, lr}
 3191              		.cfi_def_cfa_offset 8
 3192              		.cfi_offset 11, -8
 3193              		.cfi_offset 14, -4
 3194 0004 04B08DE2 		add	fp, sp, #4
 3195              		.cfi_def_cfa 11, 4
 3196 0008 30D04DE2 		sub	sp, sp, #48
 3197 000c 28000BE5 		str	r0, [fp, #-40]
 3198 0010 2C100BE5 		str	r1, [fp, #-44]
 3199 0014 30200BE5 		str	r2, [fp, #-48]
2018:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
2019:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Entry_Num;
2020:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2021:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Del;
2022:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Struct* Table;
2023:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2024:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
2025:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
2026:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
2027:../../Source/Kernel/rme_kernel.c ****     
2028:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2029:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Del,RME_CAP_TYPE_CPT,
 3200              		.loc 1 2029 5
 3201 0018 2C301BE5 		ldr	r3, [fp, #-44]
 3202 001c 803003E2 		and	r3, r3, #128
 3203 0020 000053E3 		cmp	r3, #0
 3204 0024 1D00001A 		bne	.L206
 3205              		.loc 1 2029 5 is_stmt 0 discriminator 1
 3206 0028 28301BE5 		ldr	r3, [fp, #-40]
 3207 002c 142093E5 		ldr	r2, [r3, #20]
 3208 0030 2C301BE5 		ldr	r3, [fp, #-44]
 3209 0034 030052E1 		cmp	r2, r3
 3210 0038 0100008A 		bhi	.L207
 3211              		.loc 1 2029 5 discriminator 3
 3212 003c 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 94


 3213 0040 D80000EA 		b	.L208
 3214              	.L207:
 3215              		.loc 1 2029 5 discriminator 4
 3216 0044 2C301BE5 		ldr	r3, [fp, #-44]
 3217 0048 8322A0E1 		lsl	r2, r3, #5
 3218 004c 28301BE5 		ldr	r3, [fp, #-40]
 3219 0050 0C3093E5 		ldr	r3, [r3, #12]
 3220 0054 033082E0 		add	r3, r2, r3
 3221 0058 0C300BE5 		str	r3, [fp, #-12]
 3222 005c 0C301BE5 		ldr	r3, [fp, #-12]
 3223 0060 0300A0E1 		mov	r0, r3
 3224 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3225 0068 10000BE5 		str	r0, [fp, #-16]
 3226 006c 10301BE5 		ldr	r3, [fp, #-16]
 3227 0070 2338A0E1 		lsr	r3, r3, #16
 3228 0074 7330EFE6 		uxtb	r3, r3
 3229 0078 020053E3 		cmp	r3, #2
 3230 007c 0100001A 		bne	.L209
 3231              		.loc 1 2029 5 discriminator 5
 3232 0080 0830E0E3 		mvn	r3, #8
 3233 0084 C70000EA 		b	.L208
 3234              	.L209:
 3235              		.loc 1 2029 5 discriminator 6
 3236 0088 10301BE5 		ldr	r3, [fp, #-16]
 3237 008c 233CA0E1 		lsr	r3, r3, #24
 3238 0090 030053E3 		cmp	r3, #3
 3239 0094 4100000A 		beq	.L210
 3240              		.loc 1 2029 5 discriminator 7
 3241 0098 0130E0E3 		mvn	r3, #1
 3242 009c C10000EA 		b	.L208
 3243              	.L206:
 3244              		.loc 1 2029 5 discriminator 2
 3245 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 3246 00a4 2324A0E1 		lsr	r2, r3, #8
 3247 00a8 28301BE5 		ldr	r3, [fp, #-40]
 3248 00ac 143093E5 		ldr	r3, [r3, #20]
 3249 00b0 030052E1 		cmp	r2, r3
 3250 00b4 0100003A 		bcc	.L211
 3251              		.loc 1 2029 5 discriminator 8
 3252 00b8 0230E0E3 		mvn	r3, #2
 3253 00bc B90000EA 		b	.L208
 3254              	.L211:
 3255              		.loc 1 2029 5 discriminator 9
 3256 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 3257 00c4 2334A0E1 		lsr	r3, r3, #8
 3258 00c8 8322A0E1 		lsl	r2, r3, #5
 3259 00cc 28301BE5 		ldr	r3, [fp, #-40]
 3260 00d0 0C3093E5 		ldr	r3, [r3, #12]
 3261 00d4 033082E0 		add	r3, r2, r3
 3262 00d8 0C300BE5 		str	r3, [fp, #-12]
 3263 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 3264 00e0 0300A0E1 		mov	r0, r3
 3265 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3266 00e8 10000BE5 		str	r0, [fp, #-16]
 3267 00ec 10301BE5 		ldr	r3, [fp, #-16]
 3268 00f0 2338A0E1 		lsr	r3, r3, #16
 3269 00f4 7330EFE6 		uxtb	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 95


 3270 00f8 020053E3 		cmp	r3, #2
 3271 00fc 0100001A 		bne	.L212
 3272              		.loc 1 2029 5 discriminator 10
 3273 0100 0830E0E3 		mvn	r3, #8
 3274 0104 A70000EA 		b	.L208
 3275              	.L212:
 3276              		.loc 1 2029 5 discriminator 11
 3277 0108 10301BE5 		ldr	r3, [fp, #-16]
 3278 010c 233CA0E1 		lsr	r3, r3, #24
 3279 0110 030053E3 		cmp	r3, #3
 3280 0114 0100000A 		beq	.L213
 3281              		.loc 1 2029 5 discriminator 12
 3282 0118 0130E0E3 		mvn	r3, #1
 3283 011c A10000EA 		b	.L208
 3284              	.L213:
 3285              		.loc 1 2029 5 discriminator 13
 3286 0120 2C301BE5 		ldr	r3, [fp, #-44]
 3287 0124 7F2003E2 		and	r2, r3, #127
 3288 0128 0C301BE5 		ldr	r3, [fp, #-12]
 3289 012c 143093E5 		ldr	r3, [r3, #20]
 3290 0130 030052E1 		cmp	r2, r3
 3291 0134 0100003A 		bcc	.L214
 3292              		.loc 1 2029 5 discriminator 14
 3293 0138 0230E0E3 		mvn	r3, #2
 3294 013c 990000EA 		b	.L208
 3295              	.L214:
 3296              		.loc 1 2029 5 discriminator 15
 3297 0140 2C301BE5 		ldr	r3, [fp, #-44]
 3298 0144 7F3003E2 		and	r3, r3, #127
 3299 0148 8322A0E1 		lsl	r2, r3, #5
 3300 014c 0C301BE5 		ldr	r3, [fp, #-12]
 3301 0150 0C3093E5 		ldr	r3, [r3, #12]
 3302 0154 033082E0 		add	r3, r2, r3
 3303 0158 0C300BE5 		str	r3, [fp, #-12]
 3304 015c 0C301BE5 		ldr	r3, [fp, #-12]
 3305 0160 0300A0E1 		mov	r0, r3
 3306 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3307 0168 10000BE5 		str	r0, [fp, #-16]
 3308 016c 10301BE5 		ldr	r3, [fp, #-16]
 3309 0170 2338A0E1 		lsr	r3, r3, #16
 3310 0174 7330EFE6 		uxtb	r3, r3
 3311 0178 020053E3 		cmp	r3, #2
 3312 017c 0100001A 		bne	.L215
 3313              		.loc 1 2029 5 discriminator 16
 3314 0180 0830E0E3 		mvn	r3, #8
 3315 0184 870000EA 		b	.L208
 3316              	.L215:
 3317              		.loc 1 2029 5 discriminator 17
 3318 0188 10301BE5 		ldr	r3, [fp, #-16]
 3319 018c 233CA0E1 		lsr	r3, r3, #24
 3320 0190 030053E3 		cmp	r3, #3
 3321 0194 0100000A 		beq	.L210
 3322              		.loc 1 2029 5 discriminator 18
 3323 0198 0130E0E3 		mvn	r3, #1
 3324 019c 810000EA 		b	.L208
 3325              	.L210:
2030:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 96


2031:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2032:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 3326              		.loc 1 2032 5 is_stmt 1
 3327 01a0 0C301BE5 		ldr	r3, [fp, #-12]
 3328 01a4 083093E5 		ldr	r3, [r3, #8]
 3329 01a8 023003E2 		and	r3, r3, #2
 3330 01ac 000053E3 		cmp	r3, #0
 3331 01b0 0100001A 		bne	.L216
 3332              		.loc 1 2032 5 is_stmt 0 discriminator 1
 3333 01b4 0630E0E3 		mvn	r3, #6
 3334 01b8 7A0000EA 		b	.L208
 3335              	.L216:
2033:../../Source/Kernel/rme_kernel.c ****     
2034:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2035:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Del,struct RME_Cap_Cpt*,Cpt_Del);
 3336              		.loc 1 2035 5 is_stmt 1
 3337 01bc 0C301BE5 		ldr	r3, [fp, #-12]
 3338 01c0 142093E5 		ldr	r2, [r3, #20]
 3339 01c4 30301BE5 		ldr	r3, [fp, #-48]
 3340 01c8 030052E1 		cmp	r2, r3
 3341 01cc 0100008A 		bhi	.L217
 3342              		.loc 1 2035 5 is_stmt 0 discriminator 1
 3343 01d0 0230E0E3 		mvn	r3, #2
 3344 01d4 730000EA 		b	.L208
 3345              	.L217:
 3346              		.loc 1 2035 5 discriminator 2
 3347 01d8 30301BE5 		ldr	r3, [fp, #-48]
 3348 01dc 8322A0E1 		lsl	r2, r3, #5
 3349 01e0 0C301BE5 		ldr	r3, [fp, #-12]
 3350 01e4 0C3093E5 		ldr	r3, [r3, #12]
 3351 01e8 033082E0 		add	r3, r2, r3
 3352 01ec 14300BE5 		str	r3, [fp, #-20]
2036:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
2037:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Cpt_Del,Type_Stat,RME_CAP_TYPE_CPT);
 3353              		.loc 1 2037 5 is_stmt 1 discriminator 2
 3354 01f0 14301BE5 		ldr	r3, [fp, #-20]
 3355 01f4 0300A0E1 		mov	r0, r3
 3356 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3357 01fc 10000BE5 		str	r0, [fp, #-16]
 3358 0200 10301BE5 		ldr	r3, [fp, #-16]
 3359 0204 2338A0E1 		lsr	r3, r3, #16
 3360 0208 7330EFE6 		uxtb	r3, r3
 3361 020c 020053E3 		cmp	r3, #2
 3362 0210 0100000A 		beq	.L218
 3363              		.loc 1 2037 5 is_stmt 0 discriminator 1
 3364 0214 0830E0E3 		mvn	r3, #8
 3365 0218 620000EA 		b	.L208
 3366              	.L218:
 3367              		.loc 1 2037 5 discriminator 2
 3368 021c 10301BE5 		ldr	r3, [fp, #-16]
 3369 0220 233CA0E1 		lsr	r3, r3, #24
 3370 0224 030053E3 		cmp	r3, #3
 3371 0228 0100000A 		beq	.L219
 3372              		.loc 1 2037 5 discriminator 3
 3373 022c 0130E0E3 		mvn	r3, #1
 3374 0230 5C0000EA 		b	.L208
 3375              	.L219:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 97


 3376              		.loc 1 2037 5 discriminator 6
 3377 0234 14301BE5 		ldr	r3, [fp, #-20]
 3378 0238 043093E5 		ldr	r3, [r3, #4]
 3379 023c 000053E3 		cmp	r3, #0
 3380 0240 0B00000A 		beq	.L220
 3381              		.loc 1 2037 5 discriminator 7
 3382 0244 10301BE5 		ldr	r3, [fp, #-16]
 3383 0248 7330FFE6 		uxth	r3, r3
 3384 024c 000053E3 		cmp	r3, #0
 3385 0250 0500001A 		bne	.L221
 3386              		.loc 1 2037 5 discriminator 9
 3387 0254 14001BE5 		ldr	r0, [fp, #-20]
 3388 0258 10301BE5 		ldr	r3, [fp, #-16]
 3389 025c FF38C3E3 		bic	r3, r3, #16711680
 3390 0260 0320A0E1 		mov	r2, r3
 3391 0264 10101BE5 		ldr	r1, [fp, #-16]
 3392 0268 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3393              	.L221:
 3394              		.loc 1 2037 5 discriminator 11
 3395 026c 0530E0E3 		mvn	r3, #5
 3396 0270 4C0000EA 		b	.L208
 3397              	.L220:
 3398              		.loc 1 2037 5 discriminator 8
 3399 0274 10301BE5 		ldr	r3, [fp, #-16]
 3400 0278 7330FFE6 		uxth	r3, r3
 3401 027c 000053E3 		cmp	r3, #0
 3402 0280 0800000A 		beq	.L222
 3403              		.loc 1 2037 5 discriminator 12
 3404 0284 003000E3 		movw	r3, #:lower16:.LC4
 3405 0288 003040E3 		movt	r3, #:upper16:.LC4
 3406 028c 002000E3 		movw	r2, #:lower16:.LC5
 3407 0290 002040E3 		movt	r2, #:upper16:.LC5
 3408 0294 F51700E3 		movw	r1, #2037
 3409 0298 000000E3 		movw	r0, #:lower16:.LC6
 3410 029c 000040E3 		movt	r0, #:upper16:.LC6
 3411 02a0 FEFFFFEB 		bl	RME_Log
 3412              	.L223:
 3413              		.loc 1 2037 5 discriminator 1
 3414 02a4 FEFFFFEA 		b	.L223
 3415              	.L222:
2038:../../Source/Kernel/rme_kernel.c ****     
2039:../../Source/Kernel/rme_kernel.c ****     /* Is there any capability in this capability table? If yes, we cannot destroy it.
2040:../../Source/Kernel/rme_kernel.c ****      * We will check every slot to make sure nothing is there. This is surely,
2041:../../Source/Kernel/rme_kernel.c ****      * predictable but not so perfect. So, if the time of such operations is to be 
2042:../../Source/Kernel/rme_kernel.c ****      * bounded, the user must control the maximum number of entries in the table
2043:../../Source/Kernel/rme_kernel.c ****      * by configuring RME_CPT_ENTRY_MAX to a non-zero value. */
2044:../../Source/Kernel/rme_kernel.c ****     Table=RME_CAP_GETOBJ(Cpt_Del,struct RME_Cap_Struct*);
 3416              		.loc 1 2044 11 is_stmt 1
 3417 02a8 14301BE5 		ldr	r3, [fp, #-20]
 3418 02ac 0C3093E5 		ldr	r3, [r3, #12]
 3419              		.loc 1 2044 10
 3420 02b0 18300BE5 		str	r3, [fp, #-24]
2045:../../Source/Kernel/rme_kernel.c ****     Entry_Num=Cpt_Del->Entry_Num;
 3421              		.loc 1 2045 14
 3422 02b4 14301BE5 		ldr	r3, [fp, #-20]
 3423 02b8 143093E5 		ldr	r3, [r3, #20]
 3424 02bc 1C300BE5 		str	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 98


2046:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3425              		.loc 1 2046 14
 3426 02c0 0030A0E3 		mov	r3, #0
 3427 02c4 08300BE5 		str	r3, [fp, #-8]
 3428              		.loc 1 2046 5
 3429 02c8 110000EA 		b	.L224
 3430              	.L226:
2047:../../Source/Kernel/rme_kernel.c ****     {
2048:../../Source/Kernel/rme_kernel.c ****         if(Table[Count].Head.Type_Stat!=0U)
 3431              		.loc 1 2048 17
 3432 02cc 08301BE5 		ldr	r3, [fp, #-8]
 3433 02d0 8332A0E1 		lsl	r3, r3, #5
 3434 02d4 18201BE5 		ldr	r2, [fp, #-24]
 3435 02d8 033082E0 		add	r3, r2, r3
 3436              		.loc 1 2048 29
 3437 02dc 003093E5 		ldr	r3, [r3]
 3438              		.loc 1 2048 11
 3439 02e0 000053E3 		cmp	r3, #0
 3440 02e4 0700000A 		beq	.L225
2049:../../Source/Kernel/rme_kernel.c ****         {
2050:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2051:../../Source/Kernel/rme_kernel.c ****             
2052:../../Source/Kernel/rme_kernel.c ****             RME_CAP_DEFROST(Cpt_Del,Type_Stat);
 3441              		.loc 1 2052 13
 3442 02e8 14001BE5 		ldr	r0, [fp, #-20]
 3443 02ec 10301BE5 		ldr	r3, [fp, #-16]
 3444 02f0 FF38C3E3 		bic	r3, r3, #16711680
 3445 02f4 0320A0E1 		mov	r2, r3
 3446 02f8 10101BE5 		ldr	r1, [fp, #-16]
 3447 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
2053:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_EXIST;
 3448              		.loc 1 2053 20
 3449 0300 0430E0E3 		mvn	r3, #4
 3450 0304 270000EA 		b	.L208
 3451              	.L225:
2046:../../Source/Kernel/rme_kernel.c ****     {
 3452              		.loc 1 2046 39 discriminator 2
 3453 0308 08301BE5 		ldr	r3, [fp, #-8]
 3454 030c 013083E2 		add	r3, r3, #1
 3455 0310 08300BE5 		str	r3, [fp, #-8]
 3456              	.L224:
2046:../../Source/Kernel/rme_kernel.c ****     {
 3457              		.loc 1 2046 5 discriminator 1
 3458 0314 08201BE5 		ldr	r2, [fp, #-8]
 3459 0318 1C301BE5 		ldr	r3, [fp, #-28]
 3460 031c 030052E1 		cmp	r2, r3
 3461 0320 E9FFFF3A 		bcc	.L226
2054:../../Source/Kernel/rme_kernel.c ****         }
2055:../../Source/Kernel/rme_kernel.c ****         else
2056:../../Source/Kernel/rme_kernel.c ****         {
2057:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2058:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2059:../../Source/Kernel/rme_kernel.c ****         }
2060:../../Source/Kernel/rme_kernel.c ****     }
2061:../../Source/Kernel/rme_kernel.c ****     
2062:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
2063:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Cpt_Del,rme_ptr_t);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 99


 3462              		.loc 1 2063 11
 3463 0324 14301BE5 		ldr	r3, [fp, #-20]
 3464 0328 0C3093E5 		ldr	r3, [r3, #12]
 3465 032c 20300BE5 		str	r3, [fp, #-32]
2064:../../Source/Kernel/rme_kernel.c ****     Size=RME_CPT_SIZE(Cpt_Del->Entry_Num);
 3466              		.loc 1 2064 10
 3467 0330 14301BE5 		ldr	r3, [fp, #-20]
 3468 0334 143093E5 		ldr	r3, [r3, #20]
 3469              		.loc 1 2064 9
 3470 0338 8332A0E1 		lsl	r3, r3, #5
 3471 033c 24300BE5 		str	r3, [fp, #-36]
2065:../../Source/Kernel/rme_kernel.c **** 
2066:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
2067:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Cpt_Del,Type_Stat);
 3472              		.loc 1 2067 5
 3473 0340 14301BE5 		ldr	r3, [fp, #-20]
 3474 0344 0020A0E3 		mov	r2, #0
 3475 0348 10101BE5 		ldr	r1, [fp, #-16]
 3476 034c 0300A0E1 		mov	r0, r3
 3477 0350 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3478 0354 0030A0E1 		mov	r3, r0
 3479 0358 000053E3 		cmp	r3, #0
 3480 035c 0100001A 		bne	.L227
 3481              		.loc 1 2067 5 is_stmt 0 discriminator 1
 3482 0360 0030E0E3 		mvn	r3, #0
 3483 0364 0F0000EA 		b	.L208
 3484              	.L227:
2068:../../Source/Kernel/rme_kernel.c **** 
2069:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
2070:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Size)==0);
 3485              		.loc 1 2070 5 is_stmt 1
 3486 0368 24101BE5 		ldr	r1, [fp, #-36]
 3487 036c 20001BE5 		ldr	r0, [fp, #-32]
 3488 0370 FEFFFFEB 		bl	_RME_Kot_Erase
 3489 0374 0030A0E1 		mov	r3, r0
 3490 0378 000053E3 		cmp	r3, #0
 3491 037c 0800000A 		beq	.L228
 3492              		.loc 1 2070 5 is_stmt 0 discriminator 1
 3493 0380 003000E3 		movw	r3, #:lower16:.LC4
 3494 0384 003040E3 		movt	r3, #:upper16:.LC4
 3495 0388 002000E3 		movw	r2, #:lower16:.LC5
 3496 038c 002040E3 		movt	r2, #:upper16:.LC5
 3497 0390 161800E3 		movw	r1, #2070
 3498 0394 000000E3 		movw	r0, #:lower16:.LC6
 3499 0398 000040E3 		movt	r0, #:upper16:.LC6
 3500 039c FEFFFFEB 		bl	RME_Log
 3501              	.L229:
 3502              		.loc 1 2070 5 discriminator 2
 3503 03a0 FEFFFFEA 		b	.L229
 3504              	.L228:
2071:../../Source/Kernel/rme_kernel.c ****     
2072:../../Source/Kernel/rme_kernel.c ****     return 0;
 3505              		.loc 1 2072 12 is_stmt 1
 3506 03a4 0030A0E3 		mov	r3, #0
 3507              	.L208:
2073:../../Source/Kernel/rme_kernel.c **** }
 3508              		.loc 1 2073 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 100


 3509 03a8 0300A0E1 		mov	r0, r3
 3510 03ac 04D04BE2 		sub	sp, fp, #4
 3511              		.cfi_def_cfa 13, 8
 3512              		@ sp needed
 3513 03b0 0088BDE8 		pop	{fp, pc}
 3514              		.cfi_endproc
 3515              	.LFE25:
 3517              		.section	.text._RME_Cpt_Frz,"ax",%progbits
 3518              		.align	2
 3519              		.syntax unified
 3520              		.arm
 3522              	_RME_Cpt_Frz:
 3523              	.LFB26:
2074:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Del *************************************************/
2075:../../Source/Kernel/rme_kernel.c **** 
2076:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Frz ******************************************************
2077:../../Source/Kernel/rme_kernel.c **** Description : Freeze a capability in the capability table.
2078:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2079:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Frz  - The capability table containing the cap
2080:../../Source/Kernel/rme_kernel.c ****                                        to captbl for this operation.
2081:../../Source/Kernel/rme_kernel.c ****                                        2-Level.
2082:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Frz - The cap to the kernel object being freezed.
2083:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2084:../../Source/Kernel/rme_kernel.c **** Output      : None.
2085:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2086:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2087:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Frz(struct RME_Cap_Cpt* Cpt,
2088:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Frz,
2089:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Frz)
2090:../../Source/Kernel/rme_kernel.c **** {
 3524              		.loc 1 2090 1
 3525              		.cfi_startproc
 3526              		@ args = 0, pretend = 0, frame = 32
 3527              		@ frame_needed = 1, uses_anonymous_args = 0
 3528 0000 00482DE9 		push	{fp, lr}
 3529              		.cfi_def_cfa_offset 8
 3530              		.cfi_offset 11, -8
 3531              		.cfi_offset 14, -4
 3532 0004 04B08DE2 		add	fp, sp, #4
 3533              		.cfi_def_cfa 11, 4
 3534 0008 20D04DE2 		sub	sp, sp, #32
 3535 000c 18000BE5 		str	r0, [fp, #-24]
 3536 0010 1C100BE5 		str	r1, [fp, #-28]
 3537 0014 20200BE5 		str	r2, [fp, #-32]
2091:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2092:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Frz;
2093:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2094:../../Source/Kernel/rme_kernel.c ****     
2095:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2096:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Frz,RME_CAP_TYPE_CPT,
 3538              		.loc 1 2096 5
 3539 0018 1C301BE5 		ldr	r3, [fp, #-28]
 3540 001c 803003E2 		and	r3, r3, #128
 3541 0020 000053E3 		cmp	r3, #0
 3542 0024 1D00001A 		bne	.L231
 3543              		.loc 1 2096 5 is_stmt 0 discriminator 1
 3544 0028 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 101


 3545 002c 142093E5 		ldr	r2, [r3, #20]
 3546 0030 1C301BE5 		ldr	r3, [fp, #-28]
 3547 0034 030052E1 		cmp	r2, r3
 3548 0038 0100008A 		bhi	.L232
 3549              		.loc 1 2096 5 discriminator 3
 3550 003c 0230E0E3 		mvn	r3, #2
 3551 0040 920000EA 		b	.L233
 3552              	.L232:
 3553              		.loc 1 2096 5 discriminator 4
 3554 0044 1C301BE5 		ldr	r3, [fp, #-28]
 3555 0048 8322A0E1 		lsl	r2, r3, #5
 3556 004c 18301BE5 		ldr	r3, [fp, #-24]
 3557 0050 0C3093E5 		ldr	r3, [r3, #12]
 3558 0054 033082E0 		add	r3, r2, r3
 3559 0058 08300BE5 		str	r3, [fp, #-8]
 3560 005c 08301BE5 		ldr	r3, [fp, #-8]
 3561 0060 0300A0E1 		mov	r0, r3
 3562 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3563 0068 0C000BE5 		str	r0, [fp, #-12]
 3564 006c 0C301BE5 		ldr	r3, [fp, #-12]
 3565 0070 2338A0E1 		lsr	r3, r3, #16
 3566 0074 7330EFE6 		uxtb	r3, r3
 3567 0078 020053E3 		cmp	r3, #2
 3568 007c 0100001A 		bne	.L234
 3569              		.loc 1 2096 5 discriminator 5
 3570 0080 0830E0E3 		mvn	r3, #8
 3571 0084 810000EA 		b	.L233
 3572              	.L234:
 3573              		.loc 1 2096 5 discriminator 6
 3574 0088 0C301BE5 		ldr	r3, [fp, #-12]
 3575 008c 233CA0E1 		lsr	r3, r3, #24
 3576 0090 030053E3 		cmp	r3, #3
 3577 0094 4100000A 		beq	.L235
 3578              		.loc 1 2096 5 discriminator 7
 3579 0098 0130E0E3 		mvn	r3, #1
 3580 009c 7B0000EA 		b	.L233
 3581              	.L231:
 3582              		.loc 1 2096 5 discriminator 2
 3583 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 3584 00a4 2324A0E1 		lsr	r2, r3, #8
 3585 00a8 18301BE5 		ldr	r3, [fp, #-24]
 3586 00ac 143093E5 		ldr	r3, [r3, #20]
 3587 00b0 030052E1 		cmp	r2, r3
 3588 00b4 0100003A 		bcc	.L236
 3589              		.loc 1 2096 5 discriminator 8
 3590 00b8 0230E0E3 		mvn	r3, #2
 3591 00bc 730000EA 		b	.L233
 3592              	.L236:
 3593              		.loc 1 2096 5 discriminator 9
 3594 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 3595 00c4 2334A0E1 		lsr	r3, r3, #8
 3596 00c8 8322A0E1 		lsl	r2, r3, #5
 3597 00cc 18301BE5 		ldr	r3, [fp, #-24]
 3598 00d0 0C3093E5 		ldr	r3, [r3, #12]
 3599 00d4 033082E0 		add	r3, r2, r3
 3600 00d8 08300BE5 		str	r3, [fp, #-8]
 3601 00dc 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 102


 3602 00e0 0300A0E1 		mov	r0, r3
 3603 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3604 00e8 0C000BE5 		str	r0, [fp, #-12]
 3605 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 3606 00f0 2338A0E1 		lsr	r3, r3, #16
 3607 00f4 7330EFE6 		uxtb	r3, r3
 3608 00f8 020053E3 		cmp	r3, #2
 3609 00fc 0100001A 		bne	.L237
 3610              		.loc 1 2096 5 discriminator 10
 3611 0100 0830E0E3 		mvn	r3, #8
 3612 0104 610000EA 		b	.L233
 3613              	.L237:
 3614              		.loc 1 2096 5 discriminator 11
 3615 0108 0C301BE5 		ldr	r3, [fp, #-12]
 3616 010c 233CA0E1 		lsr	r3, r3, #24
 3617 0110 030053E3 		cmp	r3, #3
 3618 0114 0100000A 		beq	.L238
 3619              		.loc 1 2096 5 discriminator 12
 3620 0118 0130E0E3 		mvn	r3, #1
 3621 011c 5B0000EA 		b	.L233
 3622              	.L238:
 3623              		.loc 1 2096 5 discriminator 13
 3624 0120 1C301BE5 		ldr	r3, [fp, #-28]
 3625 0124 7F2003E2 		and	r2, r3, #127
 3626 0128 08301BE5 		ldr	r3, [fp, #-8]
 3627 012c 143093E5 		ldr	r3, [r3, #20]
 3628 0130 030052E1 		cmp	r2, r3
 3629 0134 0100003A 		bcc	.L239
 3630              		.loc 1 2096 5 discriminator 14
 3631 0138 0230E0E3 		mvn	r3, #2
 3632 013c 530000EA 		b	.L233
 3633              	.L239:
 3634              		.loc 1 2096 5 discriminator 15
 3635 0140 1C301BE5 		ldr	r3, [fp, #-28]
 3636 0144 7F3003E2 		and	r3, r3, #127
 3637 0148 8322A0E1 		lsl	r2, r3, #5
 3638 014c 08301BE5 		ldr	r3, [fp, #-8]
 3639 0150 0C3093E5 		ldr	r3, [r3, #12]
 3640 0154 033082E0 		add	r3, r2, r3
 3641 0158 08300BE5 		str	r3, [fp, #-8]
 3642 015c 08301BE5 		ldr	r3, [fp, #-8]
 3643 0160 0300A0E1 		mov	r0, r3
 3644 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3645 0168 0C000BE5 		str	r0, [fp, #-12]
 3646 016c 0C301BE5 		ldr	r3, [fp, #-12]
 3647 0170 2338A0E1 		lsr	r3, r3, #16
 3648 0174 7330EFE6 		uxtb	r3, r3
 3649 0178 020053E3 		cmp	r3, #2
 3650 017c 0100001A 		bne	.L240
 3651              		.loc 1 2096 5 discriminator 16
 3652 0180 0830E0E3 		mvn	r3, #8
 3653 0184 410000EA 		b	.L233
 3654              	.L240:
 3655              		.loc 1 2096 5 discriminator 17
 3656 0188 0C301BE5 		ldr	r3, [fp, #-12]
 3657 018c 233CA0E1 		lsr	r3, r3, #24
 3658 0190 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 103


 3659 0194 0100000A 		beq	.L235
 3660              		.loc 1 2096 5 discriminator 18
 3661 0198 0130E0E3 		mvn	r3, #1
 3662 019c 3B0000EA 		b	.L233
 3663              	.L235:
2097:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2098:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2099:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_FRZ);
 3664              		.loc 1 2099 5 is_stmt 1
 3665 01a0 08301BE5 		ldr	r3, [fp, #-8]
 3666 01a4 083093E5 		ldr	r3, [r3, #8]
 3667 01a8 043003E2 		and	r3, r3, #4
 3668 01ac 000053E3 		cmp	r3, #0
 3669 01b0 0100001A 		bne	.L241
 3670              		.loc 1 2099 5 is_stmt 0 discriminator 1
 3671 01b4 0630E0E3 		mvn	r3, #6
 3672 01b8 340000EA 		b	.L233
 3673              	.L241:
2100:../../Source/Kernel/rme_kernel.c ****     
2101:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2102:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Frz,struct RME_Cap_Struct*,Capobj_Frz);
 3674              		.loc 1 2102 5 is_stmt 1
 3675 01bc 08301BE5 		ldr	r3, [fp, #-8]
 3676 01c0 142093E5 		ldr	r2, [r3, #20]
 3677 01c4 20301BE5 		ldr	r3, [fp, #-32]
 3678 01c8 030052E1 		cmp	r2, r3
 3679 01cc 0100008A 		bhi	.L242
 3680              		.loc 1 2102 5 is_stmt 0 discriminator 1
 3681 01d0 0230E0E3 		mvn	r3, #2
 3682 01d4 2D0000EA 		b	.L233
 3683              	.L242:
 3684              		.loc 1 2102 5 discriminator 2
 3685 01d8 20301BE5 		ldr	r3, [fp, #-32]
 3686 01dc 8322A0E1 		lsl	r2, r3, #5
 3687 01e0 08301BE5 		ldr	r3, [fp, #-8]
 3688 01e4 0C3093E5 		ldr	r3, [r3, #12]
 3689 01e8 033082E0 		add	r3, r2, r3
 3690 01ec 10300BE5 		str	r3, [fp, #-16]
2103:../../Source/Kernel/rme_kernel.c ****     
2104:../../Source/Kernel/rme_kernel.c ****     /* Check if anything is there. If nothing there, the Type_Stat must be 0. 
2105:../../Source/Kernel/rme_kernel.c ****      * Need a read acquire barrier here to avoid stale reads below. */
2106:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Frz->Head.Type_Stat));
 3691              		.loc 1 2106 15 is_stmt 1 discriminator 2
 3692 01f0 10301BE5 		ldr	r3, [fp, #-16]
 3693 01f4 0300A0E1 		mov	r0, r3
 3694 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3695 01fc 0C000BE5 		str	r0, [fp, #-12]
2107:../../Source/Kernel/rme_kernel.c ****     /* See if there is a cap */
2108:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_TYPE(Type_Stat)==RME_CAP_TYPE_NOP)
 3696              		.loc 1 2108 8 discriminator 2
 3697 0200 0C301BE5 		ldr	r3, [fp, #-12]
 3698 0204 233CA0E1 		lsr	r3, r3, #24
 3699              		.loc 1 2108 7 discriminator 2
 3700 0208 000053E3 		cmp	r3, #0
 3701 020c 0100001A 		bne	.L243
2109:../../Source/Kernel/rme_kernel.c ****     {
2110:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 104


2111:../../Source/Kernel/rme_kernel.c ****         
2112:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 3702              		.loc 1 2112 16
 3703 0210 0030E0E3 		mvn	r3, #0
 3704 0214 1D0000EA 		b	.L233
 3705              	.L243:
2113:../../Source/Kernel/rme_kernel.c ****     }
2114:../../Source/Kernel/rme_kernel.c ****     else
2115:../../Source/Kernel/rme_kernel.c ****     {
2116:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2117:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2118:../../Source/Kernel/rme_kernel.c ****     }
2119:../../Source/Kernel/rme_kernel.c ****     
2120:../../Source/Kernel/rme_kernel.c ****     /* If this is a root capability, check if the reference count allows freezing */
2121:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_ATTR(Type_Stat)==RME_CAP_ATTR_ROOT)
 3706              		.loc 1 2121 8
 3707 0218 0C301BE5 		ldr	r3, [fp, #-12]
 3708 021c 7330FFE6 		uxth	r3, r3
 3709              		.loc 1 2121 7
 3710 0220 000053E3 		cmp	r3, #0
 3711 0224 0500001A 		bne	.L244
2122:../../Source/Kernel/rme_kernel.c ****     {
2123:../../Source/Kernel/rme_kernel.c ****         if(Capobj_Frz->Head.Root_Ref!=0U)
 3712              		.loc 1 2123 28
 3713 0228 10301BE5 		ldr	r3, [fp, #-16]
 3714 022c 043093E5 		ldr	r3, [r3, #4]
 3715              		.loc 1 2123 11
 3716 0230 000053E3 		cmp	r3, #0
 3717 0234 0100000A 		beq	.L244
2124:../../Source/Kernel/rme_kernel.c ****         {
2125:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2126:../../Source/Kernel/rme_kernel.c ****             
2127:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_REFCNT;
 3718              		.loc 1 2127 20
 3719 0238 0530E0E3 		mvn	r3, #5
 3720 023c 130000EA 		b	.L233
 3721              	.L244:
2128:../../Source/Kernel/rme_kernel.c ****         }
2129:../../Source/Kernel/rme_kernel.c ****         else
2130:../../Source/Kernel/rme_kernel.c ****         {
2131:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2132:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2133:../../Source/Kernel/rme_kernel.c ****         }
2134:../../Source/Kernel/rme_kernel.c ****     }
2135:../../Source/Kernel/rme_kernel.c ****     else
2136:../../Source/Kernel/rme_kernel.c ****     {
2137:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2138:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2139:../../Source/Kernel/rme_kernel.c ****     }
2140:../../Source/Kernel/rme_kernel.c ****     
2141:../../Source/Kernel/rme_kernel.c ****     /* The capability is already frozen - why do it again? */
2142:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 3722              		.loc 1 2142 8
 3723 0240 0C301BE5 		ldr	r3, [fp, #-12]
 3724 0244 2338A0E1 		lsr	r3, r3, #16
 3725 0248 7330EFE6 		uxtb	r3, r3
 3726              		.loc 1 2142 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 105


 3727 024c 020053E3 		cmp	r3, #2
 3728 0250 0100001A 		bne	.L245
2143:../../Source/Kernel/rme_kernel.c ****     {
2144:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2145:../../Source/Kernel/rme_kernel.c ****         
2146:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 3729              		.loc 1 2146 16
 3730 0254 0830E0E3 		mvn	r3, #8
 3731 0258 0C0000EA 		b	.L233
 3732              	.L245:
2147:../../Source/Kernel/rme_kernel.c ****     }
2148:../../Source/Kernel/rme_kernel.c ****     else
2149:../../Source/Kernel/rme_kernel.c ****     {
2150:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2151:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2152:../../Source/Kernel/rme_kernel.c ****     }
2153:../../Source/Kernel/rme_kernel.c ****     
2154:../../Source/Kernel/rme_kernel.c ****     /* See if the slot is quiescent */
2155:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_CAP_QUIE(Capobj_Frz->Head.Timestamp)==0U))
2156:../../Source/Kernel/rme_kernel.c ****     {
2157:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2158:../../Source/Kernel/rme_kernel.c ****         
2159:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_QUIE;
2160:../../Source/Kernel/rme_kernel.c ****     }
2161:../../Source/Kernel/rme_kernel.c ****     else
2162:../../Source/Kernel/rme_kernel.c ****     {
2163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2164:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2165:../../Source/Kernel/rme_kernel.c ****     }
2166:../../Source/Kernel/rme_kernel.c **** 
2167:../../Source/Kernel/rme_kernel.c ****     /* Update the timestamp */
2168:../../Source/Kernel/rme_kernel.c ****     Capobj_Frz->Head.Timestamp=RME_TIMESTAMP;
 3733              		.loc 1 2168 31
 3734 025c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3735 0260 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3736 0264 002093E5 		ldr	r2, [r3]
 3737 0268 10301BE5 		ldr	r3, [fp, #-16]
 3738 026c 102083E5 		str	r2, [r3, #16]
2169:../../Source/Kernel/rme_kernel.c ****     
2170:../../Source/Kernel/rme_kernel.c ****     /* Finally, freeze it. We do not report error here because if we CASFAIL someone must have help
2171:../../Source/Kernel/rme_kernel.c ****     RME_COMP_SWAP(&(Capobj_Frz->Head.Type_Stat),Type_Stat,
 3739              		.loc 1 2171 5
 3740 0270 10001BE5 		ldr	r0, [fp, #-16]
 3741 0274 0C301BE5 		ldr	r3, [fp, #-12]
 3742 0278 FF38C3E3 		bic	r3, r3, #16711680
 3743 027c 023883E3 		orr	r3, r3, #131072
 3744 0280 0320A0E1 		mov	r2, r3
 3745 0284 0C101BE5 		ldr	r1, [fp, #-12]
 3746 0288 FEFFFFEB 		bl	_RME_Comp_Swap_Single
2172:../../Source/Kernel/rme_kernel.c ****                   RME_CAP_TYPE_STAT(RME_CAP_TYPE(Type_Stat),
2173:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_STAT_FROZEN,
2174:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_ATTR(Type_Stat)));
2175:../../Source/Kernel/rme_kernel.c **** 
2176:../../Source/Kernel/rme_kernel.c ****     return 0;
 3747              		.loc 1 2176 12
 3748 028c 0030A0E3 		mov	r3, #0
 3749              	.L233:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 106


2177:../../Source/Kernel/rme_kernel.c **** }
 3750              		.loc 1 2177 1
 3751 0290 0300A0E1 		mov	r0, r3
 3752 0294 04D04BE2 		sub	sp, fp, #4
 3753              		.cfi_def_cfa 13, 8
 3754              		@ sp needed
 3755 0298 0088BDE8 		pop	{fp, pc}
 3756              		.cfi_endproc
 3757              	.LFE26:
 3759              		.section	.text._RME_Cpt_Add,"ax",%progbits
 3760              		.align	2
 3761              		.syntax unified
 3762              		.arm
 3764              	_RME_Cpt_Add:
 3765              	.LFB27:
2178:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Frz *************************************************/
2179:../../Source/Kernel/rme_kernel.c **** 
2180:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Add ******************************************************
2181:../../Source/Kernel/rme_kernel.c **** Description : Delegate capability from one capability table to another.
2182:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2183:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Dst - The capability to the destination 
2184:../../Source/Kernel/rme_kernel.c ****                                       capability table.
2185:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2186:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Dst - The capability slot you want to add to.
2187:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2188:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Src - The capability to the source capability
2189:../../Source/Kernel/rme_kernel.c ****                                       table.
2190:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2191:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Src - The capability in the source capability table
2192:../../Source/Kernel/rme_kernel.c ****                                   to delegate.
2193:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2194:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the capability.
2195:../../Source/Kernel/rme_kernel.c **** Output      : None.
2196:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2197:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2198:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Add(struct RME_Cap_Cpt* Cpt,
2199:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Dst,
2200:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Dst, 
2201:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Src,
2202:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Src,
2203:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag,
2204:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Ext_Flag)
2205:../../Source/Kernel/rme_kernel.c **** {
 3766              		.loc 1 2205 1
 3767              		.cfi_startproc
 3768              		@ args = 12, pretend = 0, frame = 56
 3769              		@ frame_needed = 1, uses_anonymous_args = 0
 3770 0000 00482DE9 		push	{fp, lr}
 3771              		.cfi_def_cfa_offset 8
 3772              		.cfi_offset 11, -8
 3773              		.cfi_offset 14, -4
 3774 0004 04B08DE2 		add	fp, sp, #4
 3775              		.cfi_def_cfa 11, 4
 3776 0008 38D04DE2 		sub	sp, sp, #56
 3777 000c 30000BE5 		str	r0, [fp, #-48]
 3778 0010 34100BE5 		str	r1, [fp, #-52]
 3779 0014 38200BE5 		str	r2, [fp, #-56]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 107


 3780 0018 3C300BE5 		str	r3, [fp, #-60]
2206:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Dst;
2207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Src;
2208:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Dst;
2209:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Src;
2210:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2211:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Src_Type;
2212:../../Source/Kernel/rme_kernel.c ****     
2213:../../Source/Kernel/rme_kernel.c ****     /* These variables are only used for kernel memory checks */
2214:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
2215:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
2216:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Flag;
2217:../../Source/Kernel/rme_kernel.c **** 
2218:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2219:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Dst,RME_CAP_TYPE_CPT,
 3781              		.loc 1 2219 5
 3782 001c 34301BE5 		ldr	r3, [fp, #-52]
 3783 0020 803003E2 		and	r3, r3, #128
 3784 0024 000053E3 		cmp	r3, #0
 3785 0028 1D00001A 		bne	.L247
 3786              		.loc 1 2219 5 is_stmt 0 discriminator 1
 3787 002c 30301BE5 		ldr	r3, [fp, #-48]
 3788 0030 142093E5 		ldr	r2, [r3, #20]
 3789 0034 34301BE5 		ldr	r3, [fp, #-52]
 3790 0038 030052E1 		cmp	r2, r3
 3791 003c 0100008A 		bhi	.L248
 3792              		.loc 1 2219 5 discriminator 3
 3793 0040 0230E0E3 		mvn	r3, #2
 3794 0044 090200EA 		b	.L249
 3795              	.L248:
 3796              		.loc 1 2219 5 discriminator 4
 3797 0048 34301BE5 		ldr	r3, [fp, #-52]
 3798 004c 8322A0E1 		lsl	r2, r3, #5
 3799 0050 30301BE5 		ldr	r3, [fp, #-48]
 3800 0054 0C3093E5 		ldr	r3, [r3, #12]
 3801 0058 033082E0 		add	r3, r2, r3
 3802 005c 08300BE5 		str	r3, [fp, #-8]
 3803 0060 08301BE5 		ldr	r3, [fp, #-8]
 3804 0064 0300A0E1 		mov	r0, r3
 3805 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3806 006c 1C000BE5 		str	r0, [fp, #-28]
 3807 0070 1C301BE5 		ldr	r3, [fp, #-28]
 3808 0074 2338A0E1 		lsr	r3, r3, #16
 3809 0078 7330EFE6 		uxtb	r3, r3
 3810 007c 020053E3 		cmp	r3, #2
 3811 0080 0100001A 		bne	.L250
 3812              		.loc 1 2219 5 discriminator 5
 3813 0084 0830E0E3 		mvn	r3, #8
 3814 0088 F80100EA 		b	.L249
 3815              	.L250:
 3816              		.loc 1 2219 5 discriminator 6
 3817 008c 1C301BE5 		ldr	r3, [fp, #-28]
 3818 0090 233CA0E1 		lsr	r3, r3, #24
 3819 0094 030053E3 		cmp	r3, #3
 3820 0098 4100000A 		beq	.L251
 3821              		.loc 1 2219 5 discriminator 7
 3822 009c 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 108


 3823 00a0 F20100EA 		b	.L249
 3824              	.L247:
 3825              		.loc 1 2219 5 discriminator 2
 3826 00a4 34301BE5 		ldr	r3, [fp, #-52]
 3827 00a8 2324A0E1 		lsr	r2, r3, #8
 3828 00ac 30301BE5 		ldr	r3, [fp, #-48]
 3829 00b0 143093E5 		ldr	r3, [r3, #20]
 3830 00b4 030052E1 		cmp	r2, r3
 3831 00b8 0100003A 		bcc	.L252
 3832              		.loc 1 2219 5 discriminator 8
 3833 00bc 0230E0E3 		mvn	r3, #2
 3834 00c0 EA0100EA 		b	.L249
 3835              	.L252:
 3836              		.loc 1 2219 5 discriminator 9
 3837 00c4 34301BE5 		ldr	r3, [fp, #-52]
 3838 00c8 2334A0E1 		lsr	r3, r3, #8
 3839 00cc 8322A0E1 		lsl	r2, r3, #5
 3840 00d0 30301BE5 		ldr	r3, [fp, #-48]
 3841 00d4 0C3093E5 		ldr	r3, [r3, #12]
 3842 00d8 033082E0 		add	r3, r2, r3
 3843 00dc 08300BE5 		str	r3, [fp, #-8]
 3844 00e0 08301BE5 		ldr	r3, [fp, #-8]
 3845 00e4 0300A0E1 		mov	r0, r3
 3846 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3847 00ec 1C000BE5 		str	r0, [fp, #-28]
 3848 00f0 1C301BE5 		ldr	r3, [fp, #-28]
 3849 00f4 2338A0E1 		lsr	r3, r3, #16
 3850 00f8 7330EFE6 		uxtb	r3, r3
 3851 00fc 020053E3 		cmp	r3, #2
 3852 0100 0100001A 		bne	.L253
 3853              		.loc 1 2219 5 discriminator 10
 3854 0104 0830E0E3 		mvn	r3, #8
 3855 0108 D80100EA 		b	.L249
 3856              	.L253:
 3857              		.loc 1 2219 5 discriminator 11
 3858 010c 1C301BE5 		ldr	r3, [fp, #-28]
 3859 0110 233CA0E1 		lsr	r3, r3, #24
 3860 0114 030053E3 		cmp	r3, #3
 3861 0118 0100000A 		beq	.L254
 3862              		.loc 1 2219 5 discriminator 12
 3863 011c 0130E0E3 		mvn	r3, #1
 3864 0120 D20100EA 		b	.L249
 3865              	.L254:
 3866              		.loc 1 2219 5 discriminator 13
 3867 0124 34301BE5 		ldr	r3, [fp, #-52]
 3868 0128 7F2003E2 		and	r2, r3, #127
 3869 012c 08301BE5 		ldr	r3, [fp, #-8]
 3870 0130 143093E5 		ldr	r3, [r3, #20]
 3871 0134 030052E1 		cmp	r2, r3
 3872 0138 0100003A 		bcc	.L255
 3873              		.loc 1 2219 5 discriminator 14
 3874 013c 0230E0E3 		mvn	r3, #2
 3875 0140 CA0100EA 		b	.L249
 3876              	.L255:
 3877              		.loc 1 2219 5 discriminator 15
 3878 0144 34301BE5 		ldr	r3, [fp, #-52]
 3879 0148 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 109


 3880 014c 8322A0E1 		lsl	r2, r3, #5
 3881 0150 08301BE5 		ldr	r3, [fp, #-8]
 3882 0154 0C3093E5 		ldr	r3, [r3, #12]
 3883 0158 033082E0 		add	r3, r2, r3
 3884 015c 08300BE5 		str	r3, [fp, #-8]
 3885 0160 08301BE5 		ldr	r3, [fp, #-8]
 3886 0164 0300A0E1 		mov	r0, r3
 3887 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3888 016c 1C000BE5 		str	r0, [fp, #-28]
 3889 0170 1C301BE5 		ldr	r3, [fp, #-28]
 3890 0174 2338A0E1 		lsr	r3, r3, #16
 3891 0178 7330EFE6 		uxtb	r3, r3
 3892 017c 020053E3 		cmp	r3, #2
 3893 0180 0100001A 		bne	.L256
 3894              		.loc 1 2219 5 discriminator 16
 3895 0184 0830E0E3 		mvn	r3, #8
 3896 0188 B80100EA 		b	.L249
 3897              	.L256:
 3898              		.loc 1 2219 5 discriminator 17
 3899 018c 1C301BE5 		ldr	r3, [fp, #-28]
 3900 0190 233CA0E1 		lsr	r3, r3, #24
 3901 0194 030053E3 		cmp	r3, #3
 3902 0198 0100000A 		beq	.L251
 3903              		.loc 1 2219 5 discriminator 18
 3904 019c 0130E0E3 		mvn	r3, #1
 3905 01a0 B20100EA 		b	.L249
 3906              	.L251:
2220:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Dst,Type_Stat);
2221:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Src,RME_CAP_TYPE_CPT,
 3907              		.loc 1 2221 5 is_stmt 1
 3908 01a4 3C301BE5 		ldr	r3, [fp, #-60]
 3909 01a8 803003E2 		and	r3, r3, #128
 3910 01ac 000053E3 		cmp	r3, #0
 3911 01b0 1D00001A 		bne	.L257
 3912              		.loc 1 2221 5 is_stmt 0 discriminator 1
 3913 01b4 30301BE5 		ldr	r3, [fp, #-48]
 3914 01b8 142093E5 		ldr	r2, [r3, #20]
 3915 01bc 3C301BE5 		ldr	r3, [fp, #-60]
 3916 01c0 030052E1 		cmp	r2, r3
 3917 01c4 0100008A 		bhi	.L258
 3918              		.loc 1 2221 5 discriminator 3
 3919 01c8 0230E0E3 		mvn	r3, #2
 3920 01cc A70100EA 		b	.L249
 3921              	.L258:
 3922              		.loc 1 2221 5 discriminator 4
 3923 01d0 3C301BE5 		ldr	r3, [fp, #-60]
 3924 01d4 8322A0E1 		lsl	r2, r3, #5
 3925 01d8 30301BE5 		ldr	r3, [fp, #-48]
 3926 01dc 0C3093E5 		ldr	r3, [r3, #12]
 3927 01e0 033082E0 		add	r3, r2, r3
 3928 01e4 0C300BE5 		str	r3, [fp, #-12]
 3929 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 3930 01ec 0300A0E1 		mov	r0, r3
 3931 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3932 01f4 1C000BE5 		str	r0, [fp, #-28]
 3933 01f8 1C301BE5 		ldr	r3, [fp, #-28]
 3934 01fc 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 110


 3935 0200 7330EFE6 		uxtb	r3, r3
 3936 0204 020053E3 		cmp	r3, #2
 3937 0208 0100001A 		bne	.L259
 3938              		.loc 1 2221 5 discriminator 5
 3939 020c 0830E0E3 		mvn	r3, #8
 3940 0210 960100EA 		b	.L249
 3941              	.L259:
 3942              		.loc 1 2221 5 discriminator 6
 3943 0214 1C301BE5 		ldr	r3, [fp, #-28]
 3944 0218 233CA0E1 		lsr	r3, r3, #24
 3945 021c 030053E3 		cmp	r3, #3
 3946 0220 4100000A 		beq	.L260
 3947              		.loc 1 2221 5 discriminator 7
 3948 0224 0130E0E3 		mvn	r3, #1
 3949 0228 900100EA 		b	.L249
 3950              	.L257:
 3951              		.loc 1 2221 5 discriminator 2
 3952 022c 3C301BE5 		ldr	r3, [fp, #-60]
 3953 0230 2324A0E1 		lsr	r2, r3, #8
 3954 0234 30301BE5 		ldr	r3, [fp, #-48]
 3955 0238 143093E5 		ldr	r3, [r3, #20]
 3956 023c 030052E1 		cmp	r2, r3
 3957 0240 0100003A 		bcc	.L261
 3958              		.loc 1 2221 5 discriminator 8
 3959 0244 0230E0E3 		mvn	r3, #2
 3960 0248 880100EA 		b	.L249
 3961              	.L261:
 3962              		.loc 1 2221 5 discriminator 9
 3963 024c 3C301BE5 		ldr	r3, [fp, #-60]
 3964 0250 2334A0E1 		lsr	r3, r3, #8
 3965 0254 8322A0E1 		lsl	r2, r3, #5
 3966 0258 30301BE5 		ldr	r3, [fp, #-48]
 3967 025c 0C3093E5 		ldr	r3, [r3, #12]
 3968 0260 033082E0 		add	r3, r2, r3
 3969 0264 0C300BE5 		str	r3, [fp, #-12]
 3970 0268 0C301BE5 		ldr	r3, [fp, #-12]
 3971 026c 0300A0E1 		mov	r0, r3
 3972 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3973 0274 1C000BE5 		str	r0, [fp, #-28]
 3974 0278 1C301BE5 		ldr	r3, [fp, #-28]
 3975 027c 2338A0E1 		lsr	r3, r3, #16
 3976 0280 7330EFE6 		uxtb	r3, r3
 3977 0284 020053E3 		cmp	r3, #2
 3978 0288 0100001A 		bne	.L262
 3979              		.loc 1 2221 5 discriminator 10
 3980 028c 0830E0E3 		mvn	r3, #8
 3981 0290 760100EA 		b	.L249
 3982              	.L262:
 3983              		.loc 1 2221 5 discriminator 11
 3984 0294 1C301BE5 		ldr	r3, [fp, #-28]
 3985 0298 233CA0E1 		lsr	r3, r3, #24
 3986 029c 030053E3 		cmp	r3, #3
 3987 02a0 0100000A 		beq	.L263
 3988              		.loc 1 2221 5 discriminator 12
 3989 02a4 0130E0E3 		mvn	r3, #1
 3990 02a8 700100EA 		b	.L249
 3991              	.L263:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 111


 3992              		.loc 1 2221 5 discriminator 13
 3993 02ac 3C301BE5 		ldr	r3, [fp, #-60]
 3994 02b0 7F2003E2 		and	r2, r3, #127
 3995 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 3996 02b8 143093E5 		ldr	r3, [r3, #20]
 3997 02bc 030052E1 		cmp	r2, r3
 3998 02c0 0100003A 		bcc	.L264
 3999              		.loc 1 2221 5 discriminator 14
 4000 02c4 0230E0E3 		mvn	r3, #2
 4001 02c8 680100EA 		b	.L249
 4002              	.L264:
 4003              		.loc 1 2221 5 discriminator 15
 4004 02cc 3C301BE5 		ldr	r3, [fp, #-60]
 4005 02d0 7F3003E2 		and	r3, r3, #127
 4006 02d4 8322A0E1 		lsl	r2, r3, #5
 4007 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 4008 02dc 0C3093E5 		ldr	r3, [r3, #12]
 4009 02e0 033082E0 		add	r3, r2, r3
 4010 02e4 0C300BE5 		str	r3, [fp, #-12]
 4011 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 4012 02ec 0300A0E1 		mov	r0, r3
 4013 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4014 02f4 1C000BE5 		str	r0, [fp, #-28]
 4015 02f8 1C301BE5 		ldr	r3, [fp, #-28]
 4016 02fc 2338A0E1 		lsr	r3, r3, #16
 4017 0300 7330EFE6 		uxtb	r3, r3
 4018 0304 020053E3 		cmp	r3, #2
 4019 0308 0100001A 		bne	.L265
 4020              		.loc 1 2221 5 discriminator 16
 4021 030c 0830E0E3 		mvn	r3, #8
 4022 0310 560100EA 		b	.L249
 4023              	.L265:
 4024              		.loc 1 2221 5 discriminator 17
 4025 0314 1C301BE5 		ldr	r3, [fp, #-28]
 4026 0318 233CA0E1 		lsr	r3, r3, #24
 4027 031c 030053E3 		cmp	r3, #3
 4028 0320 0100000A 		beq	.L260
 4029              		.loc 1 2221 5 discriminator 18
 4030 0324 0130E0E3 		mvn	r3, #1
 4031 0328 500100EA 		b	.L249
 4032              	.L260:
2222:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Src,Type_Stat);
2223:../../Source/Kernel/rme_kernel.c ****     /* Check if both captbls are not frozen and allows such operations */
2224:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Dst,RME_CPT_FLAG_ADD_DST);
 4033              		.loc 1 2224 5 is_stmt 1
 4034 032c 08301BE5 		ldr	r3, [fp, #-8]
 4035 0330 083093E5 		ldr	r3, [r3, #8]
 4036 0334 103003E2 		and	r3, r3, #16
 4037 0338 000053E3 		cmp	r3, #0
 4038 033c 0100001A 		bne	.L266
 4039              		.loc 1 2224 5 is_stmt 0 discriminator 1
 4040 0340 0630E0E3 		mvn	r3, #6
 4041 0344 490100EA 		b	.L249
 4042              	.L266:
2225:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Src,RME_CPT_FLAG_ADD_SRC);
 4043              		.loc 1 2225 5 is_stmt 1
 4044 0348 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 112


 4045 034c 083093E5 		ldr	r3, [r3, #8]
 4046 0350 083003E2 		and	r3, r3, #8
 4047 0354 000053E3 		cmp	r3, #0
 4048 0358 0100001A 		bne	.L267
 4049              		.loc 1 2225 5 is_stmt 0 discriminator 1
 4050 035c 0630E0E3 		mvn	r3, #6
 4051 0360 420100EA 		b	.L249
 4052              	.L267:
2226:../../Source/Kernel/rme_kernel.c ****     
2227:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slots */
2228:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Dst,Cap_Dst,struct RME_Cap_Struct*,Capobj_Dst);
 4053              		.loc 1 2228 5 is_stmt 1
 4054 0364 08301BE5 		ldr	r3, [fp, #-8]
 4055 0368 142093E5 		ldr	r2, [r3, #20]
 4056 036c 38301BE5 		ldr	r3, [fp, #-56]
 4057 0370 030052E1 		cmp	r2, r3
 4058 0374 0100008A 		bhi	.L268
 4059              		.loc 1 2228 5 is_stmt 0 discriminator 1
 4060 0378 0230E0E3 		mvn	r3, #2
 4061 037c 3B0100EA 		b	.L249
 4062              	.L268:
 4063              		.loc 1 2228 5 discriminator 2
 4064 0380 38301BE5 		ldr	r3, [fp, #-56]
 4065 0384 8322A0E1 		lsl	r2, r3, #5
 4066 0388 08301BE5 		ldr	r3, [fp, #-8]
 4067 038c 0C3093E5 		ldr	r3, [r3, #12]
 4068 0390 033082E0 		add	r3, r2, r3
 4069 0394 20300BE5 		str	r3, [fp, #-32]
2229:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Src,Cap_Src,struct RME_Cap_Struct*,Capobj_Src);
 4070              		.loc 1 2229 5 is_stmt 1 discriminator 2
 4071 0398 0C301BE5 		ldr	r3, [fp, #-12]
 4072 039c 142093E5 		ldr	r2, [r3, #20]
 4073 03a0 04309BE5 		ldr	r3, [fp, #4]
 4074 03a4 030052E1 		cmp	r2, r3
 4075 03a8 0100008A 		bhi	.L269
 4076              		.loc 1 2229 5 is_stmt 0 discriminator 1
 4077 03ac 0230E0E3 		mvn	r3, #2
 4078 03b0 2E0100EA 		b	.L249
 4079              	.L269:
 4080              		.loc 1 2229 5 discriminator 2
 4081 03b4 04309BE5 		ldr	r3, [fp, #4]
 4082 03b8 8322A0E1 		lsl	r2, r3, #5
 4083 03bc 0C301BE5 		ldr	r3, [fp, #-12]
 4084 03c0 0C3093E5 		ldr	r3, [r3, #12]
 4085 03c4 033082E0 		add	r3, r2, r3
 4086 03c8 24300BE5 		str	r3, [fp, #-36]
2230:../../Source/Kernel/rme_kernel.c ****     
2231:../../Source/Kernel/rme_kernel.c ****     /* Atomic read - Read barrier to avoid premature checking of the rest */
2232:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Src->Head.Type_Stat));
 4087              		.loc 1 2232 15 is_stmt 1 discriminator 2
 4088 03cc 24301BE5 		ldr	r3, [fp, #-36]
 4089 03d0 0300A0E1 		mov	r0, r3
 4090 03d4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4091 03d8 1C000BE5 		str	r0, [fp, #-28]
2233:../../Source/Kernel/rme_kernel.c ****     /* Is the source cap frozen? */
2234:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 4092              		.loc 1 2234 8 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 113


 4093 03dc 1C301BE5 		ldr	r3, [fp, #-28]
 4094 03e0 2338A0E1 		lsr	r3, r3, #16
 4095 03e4 7330EFE6 		uxtb	r3, r3
 4096              		.loc 1 2234 7 discriminator 2
 4097 03e8 020053E3 		cmp	r3, #2
 4098 03ec 0100001A 		bne	.L270
2235:../../Source/Kernel/rme_kernel.c ****     {
2236:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2237:../../Source/Kernel/rme_kernel.c ****         
2238:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 4099              		.loc 1 2238 16
 4100 03f0 0830E0E3 		mvn	r3, #8
 4101 03f4 1D0100EA 		b	.L249
 4102              	.L270:
2239:../../Source/Kernel/rme_kernel.c ****     }
2240:../../Source/Kernel/rme_kernel.c ****     else
2241:../../Source/Kernel/rme_kernel.c ****     {
2242:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2243:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2244:../../Source/Kernel/rme_kernel.c ****     }
2245:../../Source/Kernel/rme_kernel.c ****     
2246:../../Source/Kernel/rme_kernel.c ****     /* Does the source cap exist at all? */
2247:../../Source/Kernel/rme_kernel.c ****     if(Type_Stat==0U)
 4103              		.loc 1 2247 7
 4104 03f8 1C301BE5 		ldr	r3, [fp, #-28]
 4105 03fc 000053E3 		cmp	r3, #0
 4106 0400 0100001A 		bne	.L271
2248:../../Source/Kernel/rme_kernel.c ****     {
2249:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2250:../../Source/Kernel/rme_kernel.c ****         
2251:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 4107              		.loc 1 2251 16
 4108 0404 0030E0E3 		mvn	r3, #0
 4109 0408 180100EA 		b	.L249
 4110              	.L271:
2252:../../Source/Kernel/rme_kernel.c ****     }
2253:../../Source/Kernel/rme_kernel.c ****     else
2254:../../Source/Kernel/rme_kernel.c ****     {
2255:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2256:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2257:../../Source/Kernel/rme_kernel.c ****     }
2258:../../Source/Kernel/rme_kernel.c **** 
2259:../../Source/Kernel/rme_kernel.c ****     /* Dewarn some compilers that complain about uninitialized variables */
2260:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=0U;
 4111              		.loc 1 2260 14
 4112 040c 0030A0E3 		mov	r3, #0
 4113 0410 10300BE5 		str	r3, [fp, #-16]
2261:../../Source/Kernel/rme_kernel.c ****     Kom_End=0U;
 4114              		.loc 1 2261 12
 4115 0414 0030A0E3 		mov	r3, #0
 4116 0418 14300BE5 		str	r3, [fp, #-20]
2262:../../Source/Kernel/rme_kernel.c ****     Kom_Flag=0U;
 4117              		.loc 1 2262 13
 4118 041c 0030A0E3 		mov	r3, #0
 4119 0420 18300BE5 		str	r3, [fp, #-24]
2263:../../Source/Kernel/rme_kernel.c ****     
2264:../../Source/Kernel/rme_kernel.c ****     /* Is there a flag conflict? - For page tables, we have different checking mechanisms */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 114


2265:../../Source/Kernel/rme_kernel.c ****     Src_Type=RME_CAP_TYPE(Type_Stat);
 4120              		.loc 1 2265 13
 4121 0424 1C301BE5 		ldr	r3, [fp, #-28]
 4122 0428 233CA0E1 		lsr	r3, r3, #24
 4123 042c 28300BE5 		str	r3, [fp, #-40]
2266:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_PGT)
 4124              		.loc 1 2266 7
 4125 0430 28301BE5 		ldr	r3, [fp, #-40]
 4126 0434 040053E3 		cmp	r3, #4
 4127 0438 2D00001A 		bne	.L272
2267:../../Source/Kernel/rme_kernel.c ****     {
2268:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2269:../../Source/Kernel/rme_kernel.c ****         
2270:../../Source/Kernel/rme_kernel.c ****         /* Check the delegation range */
2271:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)>RME_PGT_FLAG_HIGH(Capobj_Src->Head.Flag))
 4128              		.loc 1 2271 12
 4129 043c 08309BE5 		ldr	r3, [fp, #8]
 4130 0440 232AA0E1 		lsr	r2, r3, #20
 4131              		.loc 1 2271 36
 4132 0444 24301BE5 		ldr	r3, [fp, #-36]
 4133 0448 083093E5 		ldr	r3, [r3, #8]
 4134 044c 233AA0E1 		lsr	r3, r3, #20
 4135              		.loc 1 2271 11
 4136 0450 030052E1 		cmp	r2, r3
 4137 0454 0100009A 		bls	.L273
2272:../../Source/Kernel/rme_kernel.c ****         {
2273:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2274:../../Source/Kernel/rme_kernel.c ****         
2275:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4138              		.loc 1 2275 20
 4139 0458 0630E0E3 		mvn	r3, #6
 4140 045c 030100EA 		b	.L249
 4141              	.L273:
2276:../../Source/Kernel/rme_kernel.c ****         }
2277:../../Source/Kernel/rme_kernel.c ****         else
2278:../../Source/Kernel/rme_kernel.c ****         {
2279:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2280:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2281:../../Source/Kernel/rme_kernel.c ****         }
2282:../../Source/Kernel/rme_kernel.c ****         
2283:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_LOW(Flag)<RME_PGT_FLAG_LOW(Capobj_Src->Head.Flag))
 4142              		.loc 1 2283 12
 4143 0460 08309BE5 		ldr	r3, [fp, #8]
 4144 0464 2334A0E1 		lsr	r3, r3, #8
 4145 0468 5320EBE7 		ubfx	r2, r3, #0, #12
 4146              		.loc 1 2283 35
 4147 046c 24301BE5 		ldr	r3, [fp, #-36]
 4148 0470 083093E5 		ldr	r3, [r3, #8]
 4149 0474 2334A0E1 		lsr	r3, r3, #8
 4150 0478 5330EBE7 		ubfx	r3, r3, #0, #12
 4151              		.loc 1 2283 11
 4152 047c 030052E1 		cmp	r2, r3
 4153 0480 0100002A 		bcs	.L274
2284:../../Source/Kernel/rme_kernel.c ****         {
2285:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2286:../../Source/Kernel/rme_kernel.c ****             
2287:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 115


 4154              		.loc 1 2287 20
 4155 0484 0630E0E3 		mvn	r3, #6
 4156 0488 F80000EA 		b	.L249
 4157              	.L274:
2288:../../Source/Kernel/rme_kernel.c ****         }
2289:../../Source/Kernel/rme_kernel.c ****         else
2290:../../Source/Kernel/rme_kernel.c ****         {
2291:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2292:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2293:../../Source/Kernel/rme_kernel.c ****         }
2294:../../Source/Kernel/rme_kernel.c ****         
2295:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)<RME_PGT_FLAG_LOW(Flag))
 4158              		.loc 1 2295 12
 4159 048c 08309BE5 		ldr	r3, [fp, #8]
 4160 0490 232AA0E1 		lsr	r2, r3, #20
 4161              		.loc 1 2295 36
 4162 0494 08309BE5 		ldr	r3, [fp, #8]
 4163 0498 2334A0E1 		lsr	r3, r3, #8
 4164 049c 5330EBE7 		ubfx	r3, r3, #0, #12
 4165              		.loc 1 2295 11
 4166 04a0 030052E1 		cmp	r2, r3
 4167 04a4 0100002A 		bcs	.L275
2296:../../Source/Kernel/rme_kernel.c ****         {
2297:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2298:../../Source/Kernel/rme_kernel.c ****             
2299:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4168              		.loc 1 2299 20
 4169 04a8 0630E0E3 		mvn	r3, #6
 4170 04ac EF0000EA 		b	.L249
 4171              	.L275:
2300:../../Source/Kernel/rme_kernel.c ****         }
2301:../../Source/Kernel/rme_kernel.c ****         else
2302:../../Source/Kernel/rme_kernel.c ****         {
2303:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2304:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2305:../../Source/Kernel/rme_kernel.c ****         }
2306:../../Source/Kernel/rme_kernel.c ****         
2307:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2308:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_FLAG(Flag)==0U)
 4172              		.loc 1 2308 12
 4173 04b0 08309BE5 		ldr	r3, [fp, #8]
 4174 04b4 7330EFE6 		uxtb	r3, r3
 4175              		.loc 1 2308 11
 4176 04b8 000053E3 		cmp	r3, #0
 4177 04bc 0100001A 		bne	.L276
2309:../../Source/Kernel/rme_kernel.c ****         {
2310:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2311:../../Source/Kernel/rme_kernel.c ****             
2312:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4178              		.loc 1 2312 20
 4179 04c0 0630E0E3 		mvn	r3, #6
 4180 04c4 E90000EA 		b	.L249
 4181              	.L276:
2313:../../Source/Kernel/rme_kernel.c ****         }
2314:../../Source/Kernel/rme_kernel.c ****         else
2315:../../Source/Kernel/rme_kernel.c ****         {
2316:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 116


2317:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2318:../../Source/Kernel/rme_kernel.c ****         }
2319:../../Source/Kernel/rme_kernel.c ****         
2320:../../Source/Kernel/rme_kernel.c ****         if((RME_PGT_FLAG_FLAG(Flag)&(~RME_PGT_FLAG_FLAG(Capobj_Src->Head.Flag)))!=0U)
 4182              		.loc 1 2320 39
 4183 04c8 24301BE5 		ldr	r3, [fp, #-36]
 4184 04cc 083093E5 		ldr	r3, [r3, #8]
 4185 04d0 7330EFE6 		uxtb	r3, r3
 4186              		.loc 1 2320 38
 4187 04d4 0320E0E1 		mvn	r2, r3
 4188              		.loc 1 2320 36
 4189 04d8 08309BE5 		ldr	r3, [fp, #8]
 4190 04dc 023003E0 		and	r3, r3, r2
 4191 04e0 7330EFE6 		uxtb	r3, r3
 4192              		.loc 1 2320 11
 4193 04e4 000053E3 		cmp	r3, #0
 4194 04e8 7700000A 		beq	.L277
2321:../../Source/Kernel/rme_kernel.c ****         {
2322:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2323:../../Source/Kernel/rme_kernel.c ****             
2324:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4195              		.loc 1 2324 20
 4196 04ec 0630E0E3 		mvn	r3, #6
 4197 04f0 DE0000EA 		b	.L249
 4198              	.L272:
2325:../../Source/Kernel/rme_kernel.c ****         }
2326:../../Source/Kernel/rme_kernel.c ****         else
2327:../../Source/Kernel/rme_kernel.c ****         {
2328:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2329:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2330:../../Source/Kernel/rme_kernel.c ****         }
2331:../../Source/Kernel/rme_kernel.c ****     }
2332:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KFN)
 4199              		.loc 1 2332 12
 4200 04f4 28301BE5 		ldr	r3, [fp, #-40]
 4201 04f8 010053E3 		cmp	r3, #1
 4202 04fc 1900001A 		bne	.L278
2333:../../Source/Kernel/rme_kernel.c ****     {
2334:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2335:../../Source/Kernel/rme_kernel.c ****         
2336:../../Source/Kernel/rme_kernel.c ****         /* Kernel funcrions only have ranges, no flags - check the delegation range */
2337:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)>RME_KFN_FLAG_HIGH(Capobj_Src->Head.Flag))
 4203              		.loc 1 2337 12
 4204 0500 08309BE5 		ldr	r3, [fp, #8]
 4205 0504 2328A0E1 		lsr	r2, r3, #16
 4206              		.loc 1 2337 36
 4207 0508 24301BE5 		ldr	r3, [fp, #-36]
 4208 050c 083093E5 		ldr	r3, [r3, #8]
 4209 0510 2338A0E1 		lsr	r3, r3, #16
 4210              		.loc 1 2337 11
 4211 0514 030052E1 		cmp	r2, r3
 4212 0518 0100009A 		bls	.L279
2338:../../Source/Kernel/rme_kernel.c ****         {
2339:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2340:../../Source/Kernel/rme_kernel.c ****             
2341:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4213              		.loc 1 2341 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 117


 4214 051c 0630E0E3 		mvn	r3, #6
 4215 0520 D20000EA 		b	.L249
 4216              	.L279:
2342:../../Source/Kernel/rme_kernel.c ****         }
2343:../../Source/Kernel/rme_kernel.c ****         else
2344:../../Source/Kernel/rme_kernel.c ****         {
2345:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2346:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2347:../../Source/Kernel/rme_kernel.c ****         }
2348:../../Source/Kernel/rme_kernel.c ****         
2349:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_LOW(Flag)<RME_KFN_FLAG_LOW(Capobj_Src->Head.Flag))
 4217              		.loc 1 2349 12
 4218 0524 08309BE5 		ldr	r3, [fp, #8]
 4219 0528 7320FFE6 		uxth	r2, r3
 4220              		.loc 1 2349 35
 4221 052c 24301BE5 		ldr	r3, [fp, #-36]
 4222 0530 083093E5 		ldr	r3, [r3, #8]
 4223 0534 7330FFE6 		uxth	r3, r3
 4224              		.loc 1 2349 11
 4225 0538 030052E1 		cmp	r2, r3
 4226 053c 0100002A 		bcs	.L280
2350:../../Source/Kernel/rme_kernel.c ****         {
2351:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2352:../../Source/Kernel/rme_kernel.c ****             
2353:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4227              		.loc 1 2353 20
 4228 0540 0630E0E3 		mvn	r3, #6
 4229 0544 C90000EA 		b	.L249
 4230              	.L280:
2354:../../Source/Kernel/rme_kernel.c ****         }
2355:../../Source/Kernel/rme_kernel.c ****         else
2356:../../Source/Kernel/rme_kernel.c ****         {
2357:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2358:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2359:../../Source/Kernel/rme_kernel.c ****         }
2360:../../Source/Kernel/rme_kernel.c ****         
2361:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)<RME_KFN_FLAG_LOW(Flag))
 4231              		.loc 1 2361 12
 4232 0548 08309BE5 		ldr	r3, [fp, #8]
 4233 054c 2328A0E1 		lsr	r2, r3, #16
 4234              		.loc 1 2361 36
 4235 0550 08309BE5 		ldr	r3, [fp, #8]
 4236 0554 7330FFE6 		uxth	r3, r3
 4237              		.loc 1 2361 11
 4238 0558 030052E1 		cmp	r2, r3
 4239 055c 5A00002A 		bcs	.L277
2362:../../Source/Kernel/rme_kernel.c ****         {
2363:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2364:../../Source/Kernel/rme_kernel.c ****             
2365:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4240              		.loc 1 2365 20
 4241 0560 0630E0E3 		mvn	r3, #6
 4242 0564 C10000EA 		b	.L249
 4243              	.L278:
2366:../../Source/Kernel/rme_kernel.c ****         }
2367:../../Source/Kernel/rme_kernel.c ****         else
2368:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 118


2369:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2370:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2371:../../Source/Kernel/rme_kernel.c ****         }
2372:../../Source/Kernel/rme_kernel.c ****     }
2373:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KOM)
 4244              		.loc 1 2373 12
 4245 0568 28301BE5 		ldr	r3, [fp, #-40]
 4246 056c 020053E3 		cmp	r3, #2
 4247 0570 4700001A 		bne	.L281
2374:../../Source/Kernel/rme_kernel.c ****     {
2375:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2376:../../Source/Kernel/rme_kernel.c ****         
2377:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End here is exclusive */
2378:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_KOM_FLAG_LOW(Flag,Ext_Flag);
 4248              		.loc 1 2378 18
 4249 0574 08309BE5 		ldr	r3, [fp, #8]
 4250 0578 0338A0E1 		lsl	r3, r3, #16
 4251 057c 10300BE5 		str	r3, [fp, #-16]
2379:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_KOM_FLAG_HIGH(Flag,Ext_Flag);
 4252              		.loc 1 2379 17
 4253 0580 08309BE5 		ldr	r3, [fp, #8]
 4254 0584 2338A0E1 		lsr	r3, r3, #16
 4255 0588 0338A0E1 		lsl	r3, r3, #16
 4256 058c 0C209BE5 		ldr	r2, [fp, #12]
 4257 0590 2228A0E1 		lsr	r2, r2, #16
 4258 0594 3F20C2E3 		bic	r2, r2, #63
 4259              		.loc 1 2379 16
 4260 0598 023083E1 		orr	r3, r3, r2
 4261 059c 14300BE5 		str	r3, [fp, #-20]
2380:../../Source/Kernel/rme_kernel.c ****         Kom_Flag=RME_KOM_FLAG_KOM(Ext_Flag);
 4262              		.loc 1 2380 17
 4263 05a0 0030A0E3 		mov	r3, #0
 4264 05a4 18300BE5 		str	r3, [fp, #-24]
2381:../../Source/Kernel/rme_kernel.c ****         
2382:../../Source/Kernel/rme_kernel.c ****         /* Round start and end to the slot boundary, if we are using slots bigger than 64 bytes */
2383:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
2384:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_ROUND_DOWN(Kom_End,RME_KOM_SLOT_ORDER);
2385:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_ROUND_UP(Kom_Begin,RME_KOM_SLOT_ORDER);
2386:../../Source/Kernel/rme_kernel.c **** #endif
2387:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<=Kom_Begin)
 4265              		.loc 1 2387 11
 4266 05a8 14201BE5 		ldr	r2, [fp, #-20]
 4267 05ac 10301BE5 		ldr	r3, [fp, #-16]
 4268 05b0 030052E1 		cmp	r2, r3
 4269 05b4 0100008A 		bhi	.L282
2388:../../Source/Kernel/rme_kernel.c ****         {
2389:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2390:../../Source/Kernel/rme_kernel.c ****             
2391:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4270              		.loc 1 2391 20
 4271 05b8 0630E0E3 		mvn	r3, #6
 4272 05bc AB0000EA 		b	.L249
 4273              	.L282:
2392:../../Source/Kernel/rme_kernel.c ****         }
2393:../../Source/Kernel/rme_kernel.c ****         else
2394:../../Source/Kernel/rme_kernel.c ****         {
2395:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 119


2396:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2397:../../Source/Kernel/rme_kernel.c ****         }
2398:../../Source/Kernel/rme_kernel.c **** 
2399:../../Source/Kernel/rme_kernel.c ****         /* Convert relative addresses to absolute addresses and check for overflow */
2400:../../Source/Kernel/rme_kernel.c ****         Kom_Begin+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4274              		.loc 1 2400 62
 4275 05c0 24301BE5 		ldr	r3, [fp, #-36]
 4276 05c4 143093E5 		ldr	r3, [r3, #20]
 4277              		.loc 1 2400 18
 4278 05c8 10201BE5 		ldr	r2, [fp, #-16]
 4279 05cc 033082E0 		add	r3, r2, r3
 4280 05d0 10300BE5 		str	r3, [fp, #-16]
2401:../../Source/Kernel/rme_kernel.c ****         if(Kom_Begin<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4281              		.loc 1 2401 64
 4282 05d4 24301BE5 		ldr	r3, [fp, #-36]
 4283 05d8 143093E5 		ldr	r3, [r3, #20]
 4284              		.loc 1 2401 11
 4285 05dc 10201BE5 		ldr	r2, [fp, #-16]
 4286 05e0 030052E1 		cmp	r2, r3
 4287 05e4 0100002A 		bcs	.L283
2402:../../Source/Kernel/rme_kernel.c ****         {
2403:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2404:../../Source/Kernel/rme_kernel.c ****             
2405:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4288              		.loc 1 2405 20
 4289 05e8 0630E0E3 		mvn	r3, #6
 4290 05ec 9F0000EA 		b	.L249
 4291              	.L283:
2406:../../Source/Kernel/rme_kernel.c ****         }
2407:../../Source/Kernel/rme_kernel.c ****         else
2408:../../Source/Kernel/rme_kernel.c ****         {
2409:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2410:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2411:../../Source/Kernel/rme_kernel.c ****         }
2412:../../Source/Kernel/rme_kernel.c ****         
2413:../../Source/Kernel/rme_kernel.c ****         Kom_End+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4292              		.loc 1 2413 60
 4293 05f0 24301BE5 		ldr	r3, [fp, #-36]
 4294 05f4 143093E5 		ldr	r3, [r3, #20]
 4295              		.loc 1 2413 16
 4296 05f8 14201BE5 		ldr	r2, [fp, #-20]
 4297 05fc 033082E0 		add	r3, r2, r3
 4298 0600 14300BE5 		str	r3, [fp, #-20]
2414:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4299              		.loc 1 2414 62
 4300 0604 24301BE5 		ldr	r3, [fp, #-36]
 4301 0608 143093E5 		ldr	r3, [r3, #20]
 4302              		.loc 1 2414 11
 4303 060c 14201BE5 		ldr	r2, [fp, #-20]
 4304 0610 030052E1 		cmp	r2, r3
 4305 0614 0100002A 		bcs	.L284
2415:../../Source/Kernel/rme_kernel.c ****         {
2416:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2417:../../Source/Kernel/rme_kernel.c ****             
2418:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4306              		.loc 1 2418 20
 4307 0618 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 120


 4308 061c 930000EA 		b	.L249
 4309              	.L284:
2419:../../Source/Kernel/rme_kernel.c ****         }
2420:../../Source/Kernel/rme_kernel.c ****         else
2421:../../Source/Kernel/rme_kernel.c ****         {
2422:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2423:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2424:../../Source/Kernel/rme_kernel.c ****         }
2425:../../Source/Kernel/rme_kernel.c **** 
2426:../../Source/Kernel/rme_kernel.c ****         /* Check the ranges of kernel memory */
2427:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin>Kom_Begin)
 4310              		.loc 1 2427 54
 4311 0620 24301BE5 		ldr	r3, [fp, #-36]
 4312 0624 143093E5 		ldr	r3, [r3, #20]
 4313              		.loc 1 2427 11
 4314 0628 10201BE5 		ldr	r2, [fp, #-16]
 4315 062c 030052E1 		cmp	r2, r3
 4316 0630 0100002A 		bcs	.L285
2428:../../Source/Kernel/rme_kernel.c ****         {
2429:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2430:../../Source/Kernel/rme_kernel.c ****             
2431:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4317              		.loc 1 2431 20
 4318 0634 0630E0E3 		mvn	r3, #6
 4319 0638 8C0000EA 		b	.L249
 4320              	.L285:
2432:../../Source/Kernel/rme_kernel.c ****         }
2433:../../Source/Kernel/rme_kernel.c ****         else
2434:../../Source/Kernel/rme_kernel.c ****         {
2435:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2436:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2437:../../Source/Kernel/rme_kernel.c ****         }
2438:../../Source/Kernel/rme_kernel.c ****         
2439:../../Source/Kernel/rme_kernel.c ****         /* Internal encoding of 'end' is inclusive */
2440:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->End<(Kom_End-1U))
 4321              		.loc 1 2440 54
 4322 063c 24301BE5 		ldr	r3, [fp, #-36]
 4323 0640 182093E5 		ldr	r2, [r3, #24]
 4324              		.loc 1 2440 68
 4325 0644 14301BE5 		ldr	r3, [fp, #-20]
 4326 0648 013043E2 		sub	r3, r3, #1
 4327              		.loc 1 2440 11
 4328 064c 030052E1 		cmp	r2, r3
 4329 0650 0100002A 		bcs	.L286
2441:../../Source/Kernel/rme_kernel.c ****         {
2442:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2443:../../Source/Kernel/rme_kernel.c ****             
2444:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4330              		.loc 1 2444 20
 4331 0654 0630E0E3 		mvn	r3, #6
 4332 0658 840000EA 		b	.L249
 4333              	.L286:
2445:../../Source/Kernel/rme_kernel.c ****         }
2446:../../Source/Kernel/rme_kernel.c ****         else
2447:../../Source/Kernel/rme_kernel.c ****         {
2448:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2449:../../Source/Kernel/rme_kernel.c ****             /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 121


2450:../../Source/Kernel/rme_kernel.c ****         }
2451:../../Source/Kernel/rme_kernel.c ****         
2452:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2453:../../Source/Kernel/rme_kernel.c ****         if(Kom_Flag==0U)
 4334              		.loc 1 2453 11
 4335 065c 18301BE5 		ldr	r3, [fp, #-24]
 4336 0660 000053E3 		cmp	r3, #0
 4337 0664 0100001A 		bne	.L287
2454:../../Source/Kernel/rme_kernel.c ****         {
2455:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2456:../../Source/Kernel/rme_kernel.c ****             
2457:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4338              		.loc 1 2457 20
 4339 0668 0630E0E3 		mvn	r3, #6
 4340 066c 7F0000EA 		b	.L249
 4341              	.L287:
2458:../../Source/Kernel/rme_kernel.c ****         }
2459:../../Source/Kernel/rme_kernel.c ****         else
2460:../../Source/Kernel/rme_kernel.c ****         {
2461:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2462:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2463:../../Source/Kernel/rme_kernel.c ****         }
2464:../../Source/Kernel/rme_kernel.c ****         
2465:../../Source/Kernel/rme_kernel.c ****         if((Kom_Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4342              		.loc 1 2465 41
 4343 0670 24301BE5 		ldr	r3, [fp, #-36]
 4344 0674 083093E5 		ldr	r3, [r3, #8]
 4345              		.loc 1 2465 23
 4346 0678 0320E0E1 		mvn	r2, r3
 4347              		.loc 1 2465 21
 4348 067c 18301BE5 		ldr	r3, [fp, #-24]
 4349 0680 023003E0 		and	r3, r3, r2
 4350              		.loc 1 2465 11
 4351 0684 000053E3 		cmp	r3, #0
 4352 0688 0F00000A 		beq	.L277
2466:../../Source/Kernel/rme_kernel.c ****         {
2467:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2468:../../Source/Kernel/rme_kernel.c ****             
2469:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4353              		.loc 1 2469 20
 4354 068c 0630E0E3 		mvn	r3, #6
 4355 0690 760000EA 		b	.L249
 4356              	.L281:
2470:../../Source/Kernel/rme_kernel.c ****         }
2471:../../Source/Kernel/rme_kernel.c ****         else
2472:../../Source/Kernel/rme_kernel.c ****         {
2473:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2474:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2475:../../Source/Kernel/rme_kernel.c ****         }
2476:../../Source/Kernel/rme_kernel.c ****     }
2477:../../Source/Kernel/rme_kernel.c ****     /* All other caps */
2478:../../Source/Kernel/rme_kernel.c ****     else
2479:../../Source/Kernel/rme_kernel.c ****     {
2480:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2481:../../Source/Kernel/rme_kernel.c ****         
2482:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2483:../../Source/Kernel/rme_kernel.c ****         if(Flag==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 122


 4357              		.loc 1 2483 11
 4358 0694 08309BE5 		ldr	r3, [fp, #8]
 4359 0698 000053E3 		cmp	r3, #0
 4360 069c 0100001A 		bne	.L288
2484:../../Source/Kernel/rme_kernel.c ****         {
2485:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2486:../../Source/Kernel/rme_kernel.c ****             
2487:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4361              		.loc 1 2487 20
 4362 06a0 0630E0E3 		mvn	r3, #6
 4363 06a4 710000EA 		b	.L249
 4364              	.L288:
2488:../../Source/Kernel/rme_kernel.c ****         }
2489:../../Source/Kernel/rme_kernel.c ****         else
2490:../../Source/Kernel/rme_kernel.c ****         {
2491:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2492:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2493:../../Source/Kernel/rme_kernel.c ****         }
2494:../../Source/Kernel/rme_kernel.c ****         if((Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4365              		.loc 1 2494 37
 4366 06a8 24301BE5 		ldr	r3, [fp, #-36]
 4367 06ac 083093E5 		ldr	r3, [r3, #8]
 4368              		.loc 1 2494 19
 4369 06b0 0320E0E1 		mvn	r2, r3
 4370              		.loc 1 2494 17
 4371 06b4 08309BE5 		ldr	r3, [fp, #8]
 4372 06b8 023003E0 		and	r3, r3, r2
 4373              		.loc 1 2494 11
 4374 06bc 000053E3 		cmp	r3, #0
 4375 06c0 0100000A 		beq	.L277
2495:../../Source/Kernel/rme_kernel.c ****         {
2496:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2497:../../Source/Kernel/rme_kernel.c ****             
2498:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4376              		.loc 1 2498 20
 4377 06c4 0630E0E3 		mvn	r3, #6
 4378 06c8 680000EA 		b	.L249
 4379              	.L277:
2499:../../Source/Kernel/rme_kernel.c ****         }
2500:../../Source/Kernel/rme_kernel.c ****         else
2501:../../Source/Kernel/rme_kernel.c ****         {
2502:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2503:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2504:../../Source/Kernel/rme_kernel.c ****         }
2505:../../Source/Kernel/rme_kernel.c ****     }
2506:../../Source/Kernel/rme_kernel.c ****     
2507:../../Source/Kernel/rme_kernel.c ****     /* Is the destination slot unoccupied? */
2508:../../Source/Kernel/rme_kernel.c ****     if(Capobj_Dst->Head.Type_Stat!=0U)
 4380              		.loc 1 2508 24
 4381 06cc 20301BE5 		ldr	r3, [fp, #-32]
 4382 06d0 003093E5 		ldr	r3, [r3]
 4383              		.loc 1 2508 7
 4384 06d4 000053E3 		cmp	r3, #0
 4385 06d8 0100000A 		beq	.L289
2509:../../Source/Kernel/rme_kernel.c ****     {
2510:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2511:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 123


2512:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_EXIST;
 4386              		.loc 1 2512 16
 4387 06dc 0430E0E3 		mvn	r3, #4
 4388 06e0 620000EA 		b	.L249
 4389              	.L289:
2513:../../Source/Kernel/rme_kernel.c ****     }
2514:../../Source/Kernel/rme_kernel.c ****     else
2515:../../Source/Kernel/rme_kernel.c ****     {
2516:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2517:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2518:../../Source/Kernel/rme_kernel.c ****     }
2519:../../Source/Kernel/rme_kernel.c ****     
2520:../../Source/Kernel/rme_kernel.c ****     /* Try to take the empty slot */
2521:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Capobj_Dst);
 4390              		.loc 1 2521 5
 4391 06e4 20301BE5 		ldr	r3, [fp, #-32]
 4392 06e8 0128A0E3 		mov	r2, #65536
 4393 06ec 0010A0E3 		mov	r1, #0
 4394 06f0 0300A0E1 		mov	r0, r3
 4395 06f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4396 06f8 0030A0E1 		mov	r3, r0
 4397 06fc 000053E3 		cmp	r3, #0
 4398 0700 0100001A 		bne	.L290
 4399              		.loc 1 2521 5 is_stmt 0 discriminator 1
 4400 0704 0430E0E3 		mvn	r3, #4
 4401 0708 580000EA 		b	.L249
 4402              	.L290:
 4403              		.loc 1 2521 5 discriminator 2
 4404 070c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4405 0710 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4406 0714 002093E5 		ldr	r2, [r3]
 4407 0718 20301BE5 		ldr	r3, [fp, #-32]
 4408 071c 102083E5 		str	r2, [r3, #16]
2522:../../Source/Kernel/rme_kernel.c ****     
2523:../../Source/Kernel/rme_kernel.c ****     /* All done, we replicate the cap with flags */
2524:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_KOM)
 4409              		.loc 1 2524 7 is_stmt 1 discriminator 2
 4410 0720 28301BE5 		ldr	r3, [fp, #-40]
 4411 0724 020053E3 		cmp	r3, #2
 4412 0728 1A00001A 		bne	.L291
2525:../../Source/Kernel/rme_kernel.c ****     {
2526:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2527:../../Source/Kernel/rme_kernel.c ****             
2528:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Kom_Flag);
 4413              		.loc 1 2528 9
 4414 072c 20301BE5 		ldr	r3, [fp, #-32]
 4415 0730 18201BE5 		ldr	r2, [fp, #-24]
 4416 0734 082083E5 		str	r2, [r3, #8]
 4417 0738 24301BE5 		ldr	r3, [fp, #-36]
 4418 073c 0C2093E5 		ldr	r2, [r3, #12]
 4419 0740 20301BE5 		ldr	r3, [fp, #-32]
 4420 0744 0C2083E5 		str	r2, [r3, #12]
 4421 0748 24301BE5 		ldr	r3, [fp, #-36]
 4422 074c 142093E5 		ldr	r2, [r3, #20]
 4423 0750 20301BE5 		ldr	r3, [fp, #-32]
 4424 0754 142083E5 		str	r2, [r3, #20]
 4425 0758 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 124


 4426 075c 182093E5 		ldr	r2, [r3, #24]
 4427 0760 20301BE5 		ldr	r3, [fp, #-32]
 4428 0764 182083E5 		str	r2, [r3, #24]
 4429 0768 24301BE5 		ldr	r3, [fp, #-36]
 4430 076c 1C2093E5 		ldr	r2, [r3, #28]
 4431 0770 20301BE5 		ldr	r3, [fp, #-32]
 4432 0774 1C2083E5 		str	r2, [r3, #28]
2529:../../Source/Kernel/rme_kernel.c ****         /* Write absolute range information for kernel memory caps */
2530:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->Begin=Kom_Begin;
 4433              		.loc 1 2530 58
 4434 0778 20301BE5 		ldr	r3, [fp, #-32]
 4435 077c 10201BE5 		ldr	r2, [fp, #-16]
 4436 0780 142083E5 		str	r2, [r3, #20]
2531:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End encoded inclusively to avoid overflow at max address */
2532:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->End=Kom_End-1U;
 4437              		.loc 1 2532 64
 4438 0784 14301BE5 		ldr	r3, [fp, #-20]
 4439 0788 012043E2 		sub	r2, r3, #1
 4440              		.loc 1 2532 56
 4441 078c 20301BE5 		ldr	r3, [fp, #-32]
 4442 0790 182083E5 		str	r2, [r3, #24]
 4443 0794 120000EA 		b	.L292
 4444              	.L291:
2533:../../Source/Kernel/rme_kernel.c ****     }
2534:../../Source/Kernel/rme_kernel.c ****     else
2535:../../Source/Kernel/rme_kernel.c ****     {
2536:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2537:../../Source/Kernel/rme_kernel.c ****         
2538:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Flag);
 4445              		.loc 1 2538 9
 4446 0798 20301BE5 		ldr	r3, [fp, #-32]
 4447 079c 08209BE5 		ldr	r2, [fp, #8]
 4448 07a0 082083E5 		str	r2, [r3, #8]
 4449 07a4 24301BE5 		ldr	r3, [fp, #-36]
 4450 07a8 0C2093E5 		ldr	r2, [r3, #12]
 4451 07ac 20301BE5 		ldr	r3, [fp, #-32]
 4452 07b0 0C2083E5 		str	r2, [r3, #12]
 4453 07b4 24301BE5 		ldr	r3, [fp, #-36]
 4454 07b8 142093E5 		ldr	r2, [r3, #20]
 4455 07bc 20301BE5 		ldr	r3, [fp, #-32]
 4456 07c0 142083E5 		str	r2, [r3, #20]
 4457 07c4 24301BE5 		ldr	r3, [fp, #-36]
 4458 07c8 182093E5 		ldr	r2, [r3, #24]
 4459 07cc 20301BE5 		ldr	r3, [fp, #-32]
 4460 07d0 182083E5 		str	r2, [r3, #24]
 4461 07d4 24301BE5 		ldr	r3, [fp, #-36]
 4462 07d8 1C2093E5 		ldr	r2, [r3, #28]
 4463 07dc 20301BE5 		ldr	r3, [fp, #-32]
 4464 07e0 1C2083E5 		str	r2, [r3, #28]
 4465              	.L292:
2539:../../Source/Kernel/rme_kernel.c ****     }
2540:../../Source/Kernel/rme_kernel.c ****     
2541:../../Source/Kernel/rme_kernel.c ****     /* Set the parent and increase reference count - if this is actually needed.
2542:../../Source/Kernel/rme_kernel.c ****      * The only two cases where this is not needed are KFN and KOM. These two
2543:../../Source/Kernel/rme_kernel.c ****      * capability types are standalone on their own and do not need to reference
2544:../../Source/Kernel/rme_kernel.c ****      * their parent, nor will they update the parent's reference count. This
2545:../../Source/Kernel/rme_kernel.c ****      * design decision comes from the fact that these two capability types are
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 125


2546:../../Source/Kernel/rme_kernel.c ****      * always created on boot and delegated everywhere, and they don't actually
2547:../../Source/Kernel/rme_kernel.c ****      * have an object. If we use refcnt on these, we may cause scalability 
2548:../../Source/Kernel/rme_kernel.c ****      * issues. The parent cap can't be deleted anyway, so this is fine. */
2549:../../Source/Kernel/rme_kernel.c ****     if((Src_Type!=RME_CAP_TYPE_KOM)&&(Src_Type!=RME_CAP_TYPE_KFN))
 4466              		.loc 1 2549 7
 4467 07e4 28301BE5 		ldr	r3, [fp, #-40]
 4468 07e8 020053E3 		cmp	r3, #2
 4469 07ec 1400000A 		beq	.L293
 4470              		.loc 1 2549 36 discriminator 1
 4471 07f0 28301BE5 		ldr	r3, [fp, #-40]
 4472 07f4 010053E3 		cmp	r3, #1
 4473 07f8 1100000A 		beq	.L293
2550:../../Source/Kernel/rme_kernel.c ****     {
2551:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2552:../../Source/Kernel/rme_kernel.c ****         
2553:../../Source/Kernel/rme_kernel.c ****         /* Register root */
2554:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=RME_CAP_CONV_ROOT(Capobj_Src,rme_ptr_t);
 4474              		.loc 1 2554 35
 4475 07fc 24301BE5 		ldr	r3, [fp, #-36]
 4476 0800 003093E5 		ldr	r3, [r3]
 4477 0804 7330FFE6 		uxth	r3, r3
 4478 0808 000053E3 		cmp	r3, #0
 4479 080c 0200000A 		beq	.L294
 4480              		.loc 1 2554 35 is_stmt 0 discriminator 1
 4481 0810 24301BE5 		ldr	r3, [fp, #-36]
 4482 0814 043093E5 		ldr	r3, [r3, #4]
 4483 0818 000000EA 		b	.L295
 4484              	.L294:
 4485              		.loc 1 2554 35 discriminator 2
 4486 081c 24301BE5 		ldr	r3, [fp, #-36]
 4487              	.L295:
 4488              		.loc 1 2554 34 is_stmt 1 discriminator 4
 4489 0820 20201BE5 		ldr	r2, [fp, #-32]
 4490 0824 043082E5 		str	r3, [r2, #4]
2555:../../Source/Kernel/rme_kernel.c ****     
2556:../../Source/Kernel/rme_kernel.c ****         /* Increase the parent's refcnt - never overflows, guaranteed by field size */
2557:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(((volatile struct RME_Cap_Struct*)
 4491              		.loc 1 2557 9 discriminator 4
 4492 0828 20301BE5 		ldr	r3, [fp, #-32]
 4493 082c 043093E5 		ldr	r3, [r3, #4]
 4494 0830 043083E2 		add	r3, r3, #4
 4495 0834 0110A0E3 		mov	r1, #1
 4496 0838 0300A0E1 		mov	r0, r3
 4497 083c FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4498 0840 020000EA 		b	.L296
 4499              	.L293:
2558:../../Source/Kernel/rme_kernel.c ****                         (Capobj_Dst->Head.Root_Ref))->Head.Root_Ref),1U);
2559:../../Source/Kernel/rme_kernel.c ****     }
2560:../../Source/Kernel/rme_kernel.c ****     else
2561:../../Source/Kernel/rme_kernel.c ****     {
2562:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2563:../../Source/Kernel/rme_kernel.c ****         
2564:../../Source/Kernel/rme_kernel.c ****         /* No root for KOM and KFN */
2565:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=0U;
 4500              		.loc 1 2565 34
 4501 0844 20301BE5 		ldr	r3, [fp, #-32]
 4502 0848 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 126


 4503 084c 042083E5 		str	r2, [r3, #4]
 4504              	.L296:
2566:../../Source/Kernel/rme_kernel.c ****     }
2567:../../Source/Kernel/rme_kernel.c **** 
2568:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2569:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Capobj_Dst->Head.Type_Stat),
 4505              		.loc 1 2569 5
 4506 0850 20201BE5 		ldr	r2, [fp, #-32]
 4507 0854 28301BE5 		ldr	r3, [fp, #-40]
 4508 0858 033CA0E1 		lsl	r3, r3, #24
 4509 085c 013083E3 		orr	r3, r3, #1
 4510 0860 0310A0E1 		mov	r1, r3
 4511 0864 0200A0E1 		mov	r0, r2
 4512 0868 FEFFFFEB 		bl	__RME_A7A_Write_Release
2570:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(Src_Type,
2571:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2572:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_LEAF));
2573:../../Source/Kernel/rme_kernel.c **** 
2574:../../Source/Kernel/rme_kernel.c ****     return 0;
 4513              		.loc 1 2574 12
 4514 086c 0030A0E3 		mov	r3, #0
 4515              	.L249:
2575:../../Source/Kernel/rme_kernel.c **** }
 4516              		.loc 1 2575 1
 4517 0870 0300A0E1 		mov	r0, r3
 4518 0874 04D04BE2 		sub	sp, fp, #4
 4519              		.cfi_def_cfa 13, 8
 4520              		@ sp needed
 4521 0878 0088BDE8 		pop	{fp, pc}
 4522              		.cfi_endproc
 4523              	.LFE27:
 4525              		.section	.text._RME_Cpt_Rem,"ax",%progbits
 4526              		.align	2
 4527              		.syntax unified
 4528              		.arm
 4530              	_RME_Cpt_Rem:
 4531              	.LFB28:
2576:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Add *************************************************/
2577:../../Source/Kernel/rme_kernel.c **** 
2578:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Rem ******************************************************
2579:../../Source/Kernel/rme_kernel.c **** Description : Remove one capability from the capability table. This function
2580:../../Source/Kernel/rme_kernel.c ****               reverts the delegation.
2581:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2582:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Rem - The capability to the capability table to
2583:../../Source/Kernel/rme_kernel.c ****                                       remove from.
2584:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2585:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Rem - The capability slot you want to remove.
2586:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2587:../../Source/Kernel/rme_kernel.c **** Output      : None.
2588:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2589:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2590:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Rem(struct RME_Cap_Cpt* Cpt,
2591:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Rem,
2592:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Rem)
2593:../../Source/Kernel/rme_kernel.c **** {
 4532              		.loc 1 2593 1
 4533              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 127


 4534              		@ args = 0, pretend = 0, frame = 40
 4535              		@ frame_needed = 1, uses_anonymous_args = 0
 4536 0000 00482DE9 		push	{fp, lr}
 4537              		.cfi_def_cfa_offset 8
 4538              		.cfi_offset 11, -8
 4539              		.cfi_offset 14, -4
 4540 0004 04B08DE2 		add	fp, sp, #4
 4541              		.cfi_def_cfa 11, 4
 4542 0008 28D04DE2 		sub	sp, sp, #40
 4543 000c 20000BE5 		str	r0, [fp, #-32]
 4544 0010 24100BE5 		str	r1, [fp, #-36]
 4545 0014 28200BE5 		str	r2, [fp, #-40]
2594:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2595:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Rem;
2596:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2597:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Rem_Type;
2598:../../Source/Kernel/rme_kernel.c ****     /* This is used for removal */
2599:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Root;
2600:../../Source/Kernel/rme_kernel.c ****     
2601:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2602:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Rem,RME_CAP_TYPE_CPT,
 4546              		.loc 1 2602 5
 4547 0018 24301BE5 		ldr	r3, [fp, #-36]
 4548 001c 803003E2 		and	r3, r3, #128
 4549 0020 000053E3 		cmp	r3, #0
 4550 0024 1D00001A 		bne	.L298
 4551              		.loc 1 2602 5 is_stmt 0 discriminator 1
 4552 0028 20301BE5 		ldr	r3, [fp, #-32]
 4553 002c 142093E5 		ldr	r2, [r3, #20]
 4554 0030 24301BE5 		ldr	r3, [fp, #-36]
 4555 0034 030052E1 		cmp	r2, r3
 4556 0038 0100008A 		bhi	.L299
 4557              		.loc 1 2602 5 discriminator 3
 4558 003c 0230E0E3 		mvn	r3, #2
 4559 0040 A20000EA 		b	.L300
 4560              	.L299:
 4561              		.loc 1 2602 5 discriminator 4
 4562 0044 24301BE5 		ldr	r3, [fp, #-36]
 4563 0048 8322A0E1 		lsl	r2, r3, #5
 4564 004c 20301BE5 		ldr	r3, [fp, #-32]
 4565 0050 0C3093E5 		ldr	r3, [r3, #12]
 4566 0054 033082E0 		add	r3, r2, r3
 4567 0058 08300BE5 		str	r3, [fp, #-8]
 4568 005c 08301BE5 		ldr	r3, [fp, #-8]
 4569 0060 0300A0E1 		mov	r0, r3
 4570 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4571 0068 0C000BE5 		str	r0, [fp, #-12]
 4572 006c 0C301BE5 		ldr	r3, [fp, #-12]
 4573 0070 2338A0E1 		lsr	r3, r3, #16
 4574 0074 7330EFE6 		uxtb	r3, r3
 4575 0078 020053E3 		cmp	r3, #2
 4576 007c 0100001A 		bne	.L301
 4577              		.loc 1 2602 5 discriminator 5
 4578 0080 0830E0E3 		mvn	r3, #8
 4579 0084 910000EA 		b	.L300
 4580              	.L301:
 4581              		.loc 1 2602 5 discriminator 6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 128


 4582 0088 0C301BE5 		ldr	r3, [fp, #-12]
 4583 008c 233CA0E1 		lsr	r3, r3, #24
 4584 0090 030053E3 		cmp	r3, #3
 4585 0094 4100000A 		beq	.L302
 4586              		.loc 1 2602 5 discriminator 7
 4587 0098 0130E0E3 		mvn	r3, #1
 4588 009c 8B0000EA 		b	.L300
 4589              	.L298:
 4590              		.loc 1 2602 5 discriminator 2
 4591 00a0 24301BE5 		ldr	r3, [fp, #-36]
 4592 00a4 2324A0E1 		lsr	r2, r3, #8
 4593 00a8 20301BE5 		ldr	r3, [fp, #-32]
 4594 00ac 143093E5 		ldr	r3, [r3, #20]
 4595 00b0 030052E1 		cmp	r2, r3
 4596 00b4 0100003A 		bcc	.L303
 4597              		.loc 1 2602 5 discriminator 8
 4598 00b8 0230E0E3 		mvn	r3, #2
 4599 00bc 830000EA 		b	.L300
 4600              	.L303:
 4601              		.loc 1 2602 5 discriminator 9
 4602 00c0 24301BE5 		ldr	r3, [fp, #-36]
 4603 00c4 2334A0E1 		lsr	r3, r3, #8
 4604 00c8 8322A0E1 		lsl	r2, r3, #5
 4605 00cc 20301BE5 		ldr	r3, [fp, #-32]
 4606 00d0 0C3093E5 		ldr	r3, [r3, #12]
 4607 00d4 033082E0 		add	r3, r2, r3
 4608 00d8 08300BE5 		str	r3, [fp, #-8]
 4609 00dc 08301BE5 		ldr	r3, [fp, #-8]
 4610 00e0 0300A0E1 		mov	r0, r3
 4611 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4612 00e8 0C000BE5 		str	r0, [fp, #-12]
 4613 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 4614 00f0 2338A0E1 		lsr	r3, r3, #16
 4615 00f4 7330EFE6 		uxtb	r3, r3
 4616 00f8 020053E3 		cmp	r3, #2
 4617 00fc 0100001A 		bne	.L304
 4618              		.loc 1 2602 5 discriminator 10
 4619 0100 0830E0E3 		mvn	r3, #8
 4620 0104 710000EA 		b	.L300
 4621              	.L304:
 4622              		.loc 1 2602 5 discriminator 11
 4623 0108 0C301BE5 		ldr	r3, [fp, #-12]
 4624 010c 233CA0E1 		lsr	r3, r3, #24
 4625 0110 030053E3 		cmp	r3, #3
 4626 0114 0100000A 		beq	.L305
 4627              		.loc 1 2602 5 discriminator 12
 4628 0118 0130E0E3 		mvn	r3, #1
 4629 011c 6B0000EA 		b	.L300
 4630              	.L305:
 4631              		.loc 1 2602 5 discriminator 13
 4632 0120 24301BE5 		ldr	r3, [fp, #-36]
 4633 0124 7F2003E2 		and	r2, r3, #127
 4634 0128 08301BE5 		ldr	r3, [fp, #-8]
 4635 012c 143093E5 		ldr	r3, [r3, #20]
 4636 0130 030052E1 		cmp	r2, r3
 4637 0134 0100003A 		bcc	.L306
 4638              		.loc 1 2602 5 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 129


 4639 0138 0230E0E3 		mvn	r3, #2
 4640 013c 630000EA 		b	.L300
 4641              	.L306:
 4642              		.loc 1 2602 5 discriminator 15
 4643 0140 24301BE5 		ldr	r3, [fp, #-36]
 4644 0144 7F3003E2 		and	r3, r3, #127
 4645 0148 8322A0E1 		lsl	r2, r3, #5
 4646 014c 08301BE5 		ldr	r3, [fp, #-8]
 4647 0150 0C3093E5 		ldr	r3, [r3, #12]
 4648 0154 033082E0 		add	r3, r2, r3
 4649 0158 08300BE5 		str	r3, [fp, #-8]
 4650 015c 08301BE5 		ldr	r3, [fp, #-8]
 4651 0160 0300A0E1 		mov	r0, r3
 4652 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4653 0168 0C000BE5 		str	r0, [fp, #-12]
 4654 016c 0C301BE5 		ldr	r3, [fp, #-12]
 4655 0170 2338A0E1 		lsr	r3, r3, #16
 4656 0174 7330EFE6 		uxtb	r3, r3
 4657 0178 020053E3 		cmp	r3, #2
 4658 017c 0100001A 		bne	.L307
 4659              		.loc 1 2602 5 discriminator 16
 4660 0180 0830E0E3 		mvn	r3, #8
 4661 0184 510000EA 		b	.L300
 4662              	.L307:
 4663              		.loc 1 2602 5 discriminator 17
 4664 0188 0C301BE5 		ldr	r3, [fp, #-12]
 4665 018c 233CA0E1 		lsr	r3, r3, #24
 4666 0190 030053E3 		cmp	r3, #3
 4667 0194 0100000A 		beq	.L302
 4668              		.loc 1 2602 5 discriminator 18
 4669 0198 0130E0E3 		mvn	r3, #1
 4670 019c 4B0000EA 		b	.L300
 4671              	.L302:
2603:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2604:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2605:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_REM);
 4672              		.loc 1 2605 5 is_stmt 1
 4673 01a0 08301BE5 		ldr	r3, [fp, #-8]
 4674 01a4 083093E5 		ldr	r3, [r3, #8]
 4675 01a8 203003E2 		and	r3, r3, #32
 4676 01ac 000053E3 		cmp	r3, #0
 4677 01b0 0100001A 		bne	.L308
 4678              		.loc 1 2605 5 is_stmt 0 discriminator 1
 4679 01b4 0630E0E3 		mvn	r3, #6
 4680 01b8 440000EA 		b	.L300
 4681              	.L308:
2606:../../Source/Kernel/rme_kernel.c ****     
2607:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2608:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Rem,struct RME_Cap_Struct*,Capobj_Rem);
 4682              		.loc 1 2608 5 is_stmt 1
 4683 01bc 08301BE5 		ldr	r3, [fp, #-8]
 4684 01c0 142093E5 		ldr	r2, [r3, #20]
 4685 01c4 28301BE5 		ldr	r3, [fp, #-40]
 4686 01c8 030052E1 		cmp	r2, r3
 4687 01cc 0100008A 		bhi	.L309
 4688              		.loc 1 2608 5 is_stmt 0 discriminator 1
 4689 01d0 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 130


 4690 01d4 3D0000EA 		b	.L300
 4691              	.L309:
 4692              		.loc 1 2608 5 discriminator 2
 4693 01d8 28301BE5 		ldr	r3, [fp, #-40]
 4694 01dc 8322A0E1 		lsl	r2, r3, #5
 4695 01e0 08301BE5 		ldr	r3, [fp, #-8]
 4696 01e4 0C3093E5 		ldr	r3, [r3, #12]
 4697 01e8 033082E0 		add	r3, r2, r3
 4698 01ec 10300BE5 		str	r3, [fp, #-16]
2609:../../Source/Kernel/rme_kernel.c ****     /* Removal check */
2610:../../Source/Kernel/rme_kernel.c ****     RME_CAP_REM_CHECK(Capobj_Rem,Type_Stat);
 4699              		.loc 1 2610 5 is_stmt 1 discriminator 2
 4700 01f0 10301BE5 		ldr	r3, [fp, #-16]
 4701 01f4 0300A0E1 		mov	r0, r3
 4702 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4703 01fc 0C000BE5 		str	r0, [fp, #-12]
 4704 0200 0C301BE5 		ldr	r3, [fp, #-12]
 4705 0204 2338A0E1 		lsr	r3, r3, #16
 4706 0208 7330EFE6 		uxtb	r3, r3
 4707 020c 020053E3 		cmp	r3, #2
 4708 0210 0100000A 		beq	.L310
 4709              		.loc 1 2610 5 is_stmt 0 discriminator 1
 4710 0214 0830E0E3 		mvn	r3, #8
 4711 0218 2C0000EA 		b	.L300
 4712              	.L310:
 4713              		.loc 1 2610 5 discriminator 4
 4714 021c 0C301BE5 		ldr	r3, [fp, #-12]
 4715 0220 7330FFE6 		uxth	r3, r3
 4716 0224 000053E3 		cmp	r3, #0
 4717 0228 0100001A 		bne	.L311
 4718              		.loc 1 2610 5 discriminator 5
 4719 022c 0930E0E3 		mvn	r3, #9
 4720 0230 260000EA 		b	.L300
 4721              	.L311:
2611:../../Source/Kernel/rme_kernel.c ****     
2612:../../Source/Kernel/rme_kernel.c ****     /* If we are KFN or KOM, we don't care about parent or refcnt */
2613:../../Source/Kernel/rme_kernel.c ****     Rem_Type=RME_CAP_TYPE(Type_Stat);
 4722              		.loc 1 2613 13 is_stmt 1
 4723 0234 0C301BE5 		ldr	r3, [fp, #-12]
 4724 0238 233CA0E1 		lsr	r3, r3, #24
 4725 023c 14300BE5 		str	r3, [fp, #-20]
2614:../../Source/Kernel/rme_kernel.c ****     if((Rem_Type!=RME_CAP_TYPE_KOM)&&(Rem_Type!=RME_CAP_TYPE_KFN))
 4726              		.loc 1 2614 7
 4727 0240 14301BE5 		ldr	r3, [fp, #-20]
 4728 0244 020053E3 		cmp	r3, #2
 4729 0248 1500000A 		beq	.L312
 4730              		.loc 1 2614 36 discriminator 1
 4731 024c 14301BE5 		ldr	r3, [fp, #-20]
 4732 0250 010053E3 		cmp	r3, #1
 4733 0254 1200000A 		beq	.L312
2615:../../Source/Kernel/rme_kernel.c ****     {
2616:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2617:../../Source/Kernel/rme_kernel.c ****         
2618:../../Source/Kernel/rme_kernel.c ****         /* Remember this for refcnt operations */
2619:../../Source/Kernel/rme_kernel.c ****         Capobj_Root=(struct RME_Cap_Struct*)(Capobj_Rem->Head.Root_Ref);
 4734              		.loc 1 2619 62
 4735 0258 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 131


 4736 025c 043093E5 		ldr	r3, [r3, #4]
 4737              		.loc 1 2619 20
 4738 0260 18300BE5 		str	r3, [fp, #-24]
2620:../../Source/Kernel/rme_kernel.c ****         
2621:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4739              		.loc 1 2621 9
 4740 0264 10301BE5 		ldr	r3, [fp, #-16]
 4741 0268 0020A0E3 		mov	r2, #0
 4742 026c 0C101BE5 		ldr	r1, [fp, #-12]
 4743 0270 0300A0E1 		mov	r0, r3
 4744 0274 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4745 0278 0030A0E1 		mov	r3, r0
 4746 027c 000053E3 		cmp	r3, #0
 4747 0280 0100001A 		bne	.L313
 4748              		.loc 1 2621 9 is_stmt 0 discriminator 1
 4749 0284 0030E0E3 		mvn	r3, #0
 4750 0288 100000EA 		b	.L300
 4751              	.L313:
2622:../../Source/Kernel/rme_kernel.c **** 
2623:../../Source/Kernel/rme_kernel.c ****         /* Check done, decrease its parent's refcnt. This must be done at last */
2624:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Capobj_Root->Head.Root_Ref),-1);
 4752              		.loc 1 2624 9 is_stmt 1
 4753 028c 18301BE5 		ldr	r3, [fp, #-24]
 4754 0290 043083E2 		add	r3, r3, #4
 4755 0294 0010E0E3 		mvn	r1, #0
 4756 0298 0300A0E1 		mov	r0, r3
 4757 029c FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4758 02a0 090000EA 		b	.L314
 4759              	.L312:
2625:../../Source/Kernel/rme_kernel.c ****     }
2626:../../Source/Kernel/rme_kernel.c ****     else
2627:../../Source/Kernel/rme_kernel.c ****     {
2628:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2629:../../Source/Kernel/rme_kernel.c **** 
2630:../../Source/Kernel/rme_kernel.c ****         /* Helping also applies here */
2631:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4760              		.loc 1 2631 9
 4761 02a4 10301BE5 		ldr	r3, [fp, #-16]
 4762 02a8 0020A0E3 		mov	r2, #0
 4763 02ac 0C101BE5 		ldr	r1, [fp, #-12]
 4764 02b0 0300A0E1 		mov	r0, r3
 4765 02b4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4766 02b8 0030A0E1 		mov	r3, r0
 4767 02bc 000053E3 		cmp	r3, #0
 4768 02c0 0100001A 		bne	.L314
 4769              		.loc 1 2631 9 is_stmt 0 discriminator 1
 4770 02c4 0030E0E3 		mvn	r3, #0
 4771 02c8 000000EA 		b	.L300
 4772              	.L314:
2632:../../Source/Kernel/rme_kernel.c ****     }
2633:../../Source/Kernel/rme_kernel.c ****     
2634:../../Source/Kernel/rme_kernel.c ****     return 0;
 4773              		.loc 1 2634 12 is_stmt 1
 4774 02cc 0030A0E3 		mov	r3, #0
 4775              	.L300:
2635:../../Source/Kernel/rme_kernel.c **** }
 4776              		.loc 1 2635 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 132


 4777 02d0 0300A0E1 		mov	r0, r3
 4778 02d4 04D04BE2 		sub	sp, fp, #4
 4779              		.cfi_def_cfa 13, 8
 4780              		@ sp needed
 4781 02d8 0088BDE8 		pop	{fp, pc}
 4782              		.cfi_endproc
 4783              	.LFE28:
 4785              		.section	.text._RME_Pgt_Boot_Crt,"ax",%progbits
 4786              		.align	2
 4787              		.global	_RME_Pgt_Boot_Crt
 4788              		.syntax unified
 4789              		.arm
 4791              	_RME_Pgt_Boot_Crt:
 4792              	.LFB29:
2636:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Rem *************************************************/
2637:../../Source/Kernel/rme_kernel.c **** 
2638:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Crt *************************************************
2639:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time page table.
2640:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
2641:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2642:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
2643:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
2644:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2645:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
2646:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
2647:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2648:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the page table.
2649:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
2650:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
2651:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
2652:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
2653:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page
2654:../../Source/Kernel/rme_kernel.c ****                                  directories into it.
2655:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
2656:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the
2657:../../Source/Kernel/rme_kernel.c ****                                      page directory.
2658:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the page
2659:../../Source/Kernel/rme_kernel.c ****                                     table.
2660:../../Source/Kernel/rme_kernel.c **** Output      : None.
2661:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2662:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2663:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2664:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
2665:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
2666:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt,
2667:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
2668:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Base,
2669:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Is_Top,
2670:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Size_Order,
2671:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Num_Order)
2672:../../Source/Kernel/rme_kernel.c **** {
 4793              		.loc 1 2672 1
 4794              		.cfi_startproc
 4795              		@ args = 16, pretend = 0, frame = 32
 4796              		@ frame_needed = 1, uses_anonymous_args = 0
 4797 0000 00482DE9 		push	{fp, lr}
 4798              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 133


 4799              		.cfi_offset 11, -8
 4800              		.cfi_offset 14, -4
 4801 0004 04B08DE2 		add	fp, sp, #4
 4802              		.cfi_def_cfa 11, 4
 4803 0008 28D04DE2 		sub	sp, sp, #40
 4804 000c 18000BE5 		str	r0, [fp, #-24]
 4805 0010 1C100BE5 		str	r1, [fp, #-28]
 4806 0014 20200BE5 		str	r2, [fp, #-32]
 4807 0018 24300BE5 		str	r3, [fp, #-36]
2673:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2674:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
2675:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2676:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
2677:../../Source/Kernel/rme_kernel.c ****     
2678:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
2679:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
2680:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 4808              		.loc 1 2680 19
 4809 001c 0C209BE5 		ldr	r2, [fp, #12]
 4810 0020 10309BE5 		ldr	r3, [fp, #16]
 4811 0024 033082E0 		add	r3, r2, r3
 4812              		.loc 1 2680 7
 4813 0028 200053E3 		cmp	r3, #32
 4814 002c 0100009A 		bls	.L316
2681:../../Source/Kernel/rme_kernel.c ****     {
2682:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2683:../../Source/Kernel/rme_kernel.c ****         
2684:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4815              		.loc 1 2684 16
 4816 0030 6630E0E3 		mvn	r3, #102
 4817 0034 D30000EA 		b	.L317
 4818              	.L316:
2685:../../Source/Kernel/rme_kernel.c ****     }
2686:../../Source/Kernel/rme_kernel.c ****     else
2687:../../Source/Kernel/rme_kernel.c ****     {
2688:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2689:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2690:../../Source/Kernel/rme_kernel.c ****     }
2691:../../Source/Kernel/rme_kernel.c **** 
2692:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
2693:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 4819              		.loc 1 2693 5
 4820 0038 1C301BE5 		ldr	r3, [fp, #-28]
 4821 003c 803003E2 		and	r3, r3, #128
 4822 0040 000053E3 		cmp	r3, #0
 4823 0044 1D00001A 		bne	.L318
 4824              		.loc 1 2693 5 is_stmt 0 discriminator 1
 4825 0048 18301BE5 		ldr	r3, [fp, #-24]
 4826 004c 142093E5 		ldr	r2, [r3, #20]
 4827 0050 1C301BE5 		ldr	r3, [fp, #-28]
 4828 0054 030052E1 		cmp	r2, r3
 4829 0058 0100008A 		bhi	.L319
 4830              		.loc 1 2693 5 discriminator 3
 4831 005c 0230E0E3 		mvn	r3, #2
 4832 0060 C80000EA 		b	.L317
 4833              	.L319:
 4834              		.loc 1 2693 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 134


 4835 0064 1C301BE5 		ldr	r3, [fp, #-28]
 4836 0068 8322A0E1 		lsl	r2, r3, #5
 4837 006c 18301BE5 		ldr	r3, [fp, #-24]
 4838 0070 0C3093E5 		ldr	r3, [r3, #12]
 4839 0074 033082E0 		add	r3, r2, r3
 4840 0078 0C300BE5 		str	r3, [fp, #-12]
 4841 007c 0C301BE5 		ldr	r3, [fp, #-12]
 4842 0080 0300A0E1 		mov	r0, r3
 4843 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4844 0088 10000BE5 		str	r0, [fp, #-16]
 4845 008c 10301BE5 		ldr	r3, [fp, #-16]
 4846 0090 2338A0E1 		lsr	r3, r3, #16
 4847 0094 7330EFE6 		uxtb	r3, r3
 4848 0098 020053E3 		cmp	r3, #2
 4849 009c 0100001A 		bne	.L320
 4850              		.loc 1 2693 5 discriminator 5
 4851 00a0 0830E0E3 		mvn	r3, #8
 4852 00a4 B70000EA 		b	.L317
 4853              	.L320:
 4854              		.loc 1 2693 5 discriminator 6
 4855 00a8 10301BE5 		ldr	r3, [fp, #-16]
 4856 00ac 233CA0E1 		lsr	r3, r3, #24
 4857 00b0 030053E3 		cmp	r3, #3
 4858 00b4 4100000A 		beq	.L321
 4859              		.loc 1 2693 5 discriminator 7
 4860 00b8 0130E0E3 		mvn	r3, #1
 4861 00bc B10000EA 		b	.L317
 4862              	.L318:
 4863              		.loc 1 2693 5 discriminator 2
 4864 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 4865 00c4 2324A0E1 		lsr	r2, r3, #8
 4866 00c8 18301BE5 		ldr	r3, [fp, #-24]
 4867 00cc 143093E5 		ldr	r3, [r3, #20]
 4868 00d0 030052E1 		cmp	r2, r3
 4869 00d4 0100003A 		bcc	.L322
 4870              		.loc 1 2693 5 discriminator 8
 4871 00d8 0230E0E3 		mvn	r3, #2
 4872 00dc A90000EA 		b	.L317
 4873              	.L322:
 4874              		.loc 1 2693 5 discriminator 9
 4875 00e0 1C301BE5 		ldr	r3, [fp, #-28]
 4876 00e4 2334A0E1 		lsr	r3, r3, #8
 4877 00e8 8322A0E1 		lsl	r2, r3, #5
 4878 00ec 18301BE5 		ldr	r3, [fp, #-24]
 4879 00f0 0C3093E5 		ldr	r3, [r3, #12]
 4880 00f4 033082E0 		add	r3, r2, r3
 4881 00f8 0C300BE5 		str	r3, [fp, #-12]
 4882 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 4883 0100 0300A0E1 		mov	r0, r3
 4884 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4885 0108 10000BE5 		str	r0, [fp, #-16]
 4886 010c 10301BE5 		ldr	r3, [fp, #-16]
 4887 0110 2338A0E1 		lsr	r3, r3, #16
 4888 0114 7330EFE6 		uxtb	r3, r3
 4889 0118 020053E3 		cmp	r3, #2
 4890 011c 0100001A 		bne	.L323
 4891              		.loc 1 2693 5 discriminator 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 135


 4892 0120 0830E0E3 		mvn	r3, #8
 4893 0124 970000EA 		b	.L317
 4894              	.L323:
 4895              		.loc 1 2693 5 discriminator 11
 4896 0128 10301BE5 		ldr	r3, [fp, #-16]
 4897 012c 233CA0E1 		lsr	r3, r3, #24
 4898 0130 030053E3 		cmp	r3, #3
 4899 0134 0100000A 		beq	.L324
 4900              		.loc 1 2693 5 discriminator 12
 4901 0138 0130E0E3 		mvn	r3, #1
 4902 013c 910000EA 		b	.L317
 4903              	.L324:
 4904              		.loc 1 2693 5 discriminator 13
 4905 0140 1C301BE5 		ldr	r3, [fp, #-28]
 4906 0144 7F2003E2 		and	r2, r3, #127
 4907 0148 0C301BE5 		ldr	r3, [fp, #-12]
 4908 014c 143093E5 		ldr	r3, [r3, #20]
 4909 0150 030052E1 		cmp	r2, r3
 4910 0154 0100003A 		bcc	.L325
 4911              		.loc 1 2693 5 discriminator 14
 4912 0158 0230E0E3 		mvn	r3, #2
 4913 015c 890000EA 		b	.L317
 4914              	.L325:
 4915              		.loc 1 2693 5 discriminator 15
 4916 0160 1C301BE5 		ldr	r3, [fp, #-28]
 4917 0164 7F3003E2 		and	r3, r3, #127
 4918 0168 8322A0E1 		lsl	r2, r3, #5
 4919 016c 0C301BE5 		ldr	r3, [fp, #-12]
 4920 0170 0C3093E5 		ldr	r3, [r3, #12]
 4921 0174 033082E0 		add	r3, r2, r3
 4922 0178 0C300BE5 		str	r3, [fp, #-12]
 4923 017c 0C301BE5 		ldr	r3, [fp, #-12]
 4924 0180 0300A0E1 		mov	r0, r3
 4925 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4926 0188 10000BE5 		str	r0, [fp, #-16]
 4927 018c 10301BE5 		ldr	r3, [fp, #-16]
 4928 0190 2338A0E1 		lsr	r3, r3, #16
 4929 0194 7330EFE6 		uxtb	r3, r3
 4930 0198 020053E3 		cmp	r3, #2
 4931 019c 0100001A 		bne	.L326
 4932              		.loc 1 2693 5 discriminator 16
 4933 01a0 0830E0E3 		mvn	r3, #8
 4934 01a4 770000EA 		b	.L317
 4935              	.L326:
 4936              		.loc 1 2693 5 discriminator 17
 4937 01a8 10301BE5 		ldr	r3, [fp, #-16]
 4938 01ac 233CA0E1 		lsr	r3, r3, #24
 4939 01b0 030053E3 		cmp	r3, #3
 4940 01b4 0100000A 		beq	.L321
 4941              		.loc 1 2693 5 discriminator 18
 4942 01b8 0130E0E3 		mvn	r3, #1
 4943 01bc 710000EA 		b	.L317
 4944              	.L321:
2694:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
2695:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2696:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 4945              		.loc 1 2696 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 136


 4946 01c0 0C301BE5 		ldr	r3, [fp, #-12]
 4947 01c4 083093E5 		ldr	r3, [r3, #8]
 4948 01c8 013003E2 		and	r3, r3, #1
 4949 01cc 000053E3 		cmp	r3, #0
 4950 01d0 0100001A 		bne	.L327
 4951              		.loc 1 2696 5 is_stmt 0 discriminator 1
 4952 01d4 0630E0E3 		mvn	r3, #6
 4953 01d8 6A0000EA 		b	.L317
 4954              	.L327:
2697:../../Source/Kernel/rme_kernel.c ****     
2698:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
2699:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)!=0)
 4955              		.loc 1 2699 8 is_stmt 1
 4956 01dc 24301BE5 		ldr	r3, [fp, #-36]
 4957 01e0 00308DE5 		str	r3, [sp]
 4958 01e4 10309BE5 		ldr	r3, [fp, #16]
 4959 01e8 0C209BE5 		ldr	r2, [fp, #12]
 4960 01ec 08109BE5 		ldr	r1, [fp, #8]
 4961 01f0 04009BE5 		ldr	r0, [fp, #4]
 4962 01f4 FEFFFFEB 		bl	__RME_Pgt_Check
 4963 01f8 0030A0E1 		mov	r3, r0
 4964              		.loc 1 2699 7
 4965 01fc 000053E3 		cmp	r3, #0
 4966 0200 0100000A 		beq	.L328
2700:../../Source/Kernel/rme_kernel.c ****     {
2701:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2702:../../Source/Kernel/rme_kernel.c ****         
2703:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4967              		.loc 1 2703 16
 4968 0204 6630E0E3 		mvn	r3, #102
 4969 0208 5E0000EA 		b	.L317
 4970              	.L328:
2704:../../Source/Kernel/rme_kernel.c ****     }
2705:../../Source/Kernel/rme_kernel.c ****     else
2706:../../Source/Kernel/rme_kernel.c ****     {
2707:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2708:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2709:../../Source/Kernel/rme_kernel.c ****     }
2710:../../Source/Kernel/rme_kernel.c ****     
2711:../../Source/Kernel/rme_kernel.c ****     /* Check if the base address is properly aligned to the total order of the page table */
2712:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 4971              		.loc 1 2712 14
 4972 020c 0C209BE5 		ldr	r2, [fp, #12]
 4973 0210 10309BE5 		ldr	r3, [fp, #16]
 4974 0214 033082E0 		add	r3, r2, r3
 4975 0218 203063E2 		rsb	r3, r3, #32
 4976 021c 0020E0E3 		mvn	r2, #0
 4977 0220 3223A0E1 		lsr	r2, r2, r3
 4978              		.loc 1 2712 13
 4979 0224 04309BE5 		ldr	r3, [fp, #4]
 4980 0228 023003E0 		and	r3, r3, r2
 4981              		.loc 1 2712 7
 4982 022c 000053E3 		cmp	r3, #0
 4983 0230 0100000A 		beq	.L329
2713:../../Source/Kernel/rme_kernel.c ****     {
2714:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2715:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 137


2716:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4984              		.loc 1 2716 16
 4985 0234 6630E0E3 		mvn	r3, #102
 4986 0238 520000EA 		b	.L317
 4987              	.L329:
2717:../../Source/Kernel/rme_kernel.c ****     }
2718:../../Source/Kernel/rme_kernel.c ****     else
2719:../../Source/Kernel/rme_kernel.c ****     {
2720:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2721:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2722:../../Source/Kernel/rme_kernel.c ****     }
2723:../../Source/Kernel/rme_kernel.c **** 
2724:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2725:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 4988              		.loc 1 2725 5
 4989 023c 0C301BE5 		ldr	r3, [fp, #-12]
 4990 0240 142093E5 		ldr	r2, [r3, #20]
 4991 0244 20301BE5 		ldr	r3, [fp, #-32]
 4992 0248 030052E1 		cmp	r2, r3
 4993 024c 0100008A 		bhi	.L330
 4994              		.loc 1 2725 5 is_stmt 0 discriminator 1
 4995 0250 0230E0E3 		mvn	r3, #2
 4996 0254 4B0000EA 		b	.L317
 4997              	.L330:
 4998              		.loc 1 2725 5 discriminator 2
 4999 0258 20301BE5 		ldr	r3, [fp, #-32]
 5000 025c 8322A0E1 		lsl	r2, r3, #5
 5001 0260 0C301BE5 		ldr	r3, [fp, #-12]
 5002 0264 0C3093E5 		ldr	r3, [r3, #12]
 5003 0268 033082E0 		add	r3, r2, r3
 5004 026c 14300BE5 		str	r3, [fp, #-20]
2726:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
2727:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 5005              		.loc 1 2727 5 is_stmt 1 discriminator 2
 5006 0270 14301BE5 		ldr	r3, [fp, #-20]
 5007 0274 0128A0E3 		mov	r2, #65536
 5008 0278 0010A0E3 		mov	r1, #0
 5009 027c 0300A0E1 		mov	r0, r3
 5010 0280 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 5011 0284 0030A0E1 		mov	r3, r0
 5012 0288 000053E3 		cmp	r3, #0
 5013 028c 0100001A 		bne	.L331
 5014              		.loc 1 2727 5 is_stmt 0 discriminator 1
 5015 0290 0430E0E3 		mvn	r3, #4
 5016 0294 3B0000EA 		b	.L317
 5017              	.L331:
 5018              		.loc 1 2727 5 discriminator 2
 5019 0298 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 5020 029c 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 5021 02a0 002093E5 		ldr	r2, [r3]
 5022 02a4 14301BE5 		ldr	r3, [fp, #-20]
 5023 02a8 102083E5 		str	r2, [r3, #16]
2728:../../Source/Kernel/rme_kernel.c **** 
2729:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top level? */
2730:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 5024              		.loc 1 2730 7 is_stmt 1 discriminator 2
 5025 02ac 08309BE5 		ldr	r3, [fp, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 138


 5026 02b0 000053E3 		cmp	r3, #0
 5027 02b4 0400000A 		beq	.L332
2731:../../Source/Kernel/rme_kernel.c ****     {
2732:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2733:../../Source/Kernel/rme_kernel.c ****         
2734:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 5028              		.loc 1 2734 20
 5029 02b8 0120A0E3 		mov	r2, #1
 5030 02bc 10309BE5 		ldr	r3, [fp, #16]
 5031 02c0 1233A0E1 		lsl	r3, r2, r3
 5032              		.loc 1 2734 19
 5033 02c4 08300BE5 		str	r3, [fp, #-8]
 5034 02c8 030000EA 		b	.L333
 5035              	.L332:
2735:../../Source/Kernel/rme_kernel.c ****     }
2736:../../Source/Kernel/rme_kernel.c ****     else
2737:../../Source/Kernel/rme_kernel.c ****     {
2738:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2739:../../Source/Kernel/rme_kernel.c ****         
2740:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 5036              		.loc 1 2740 20
 5037 02cc 0120A0E3 		mov	r2, #1
 5038 02d0 10309BE5 		ldr	r3, [fp, #16]
 5039 02d4 1233A0E1 		lsl	r3, r2, r3
 5040              		.loc 1 2740 19
 5041 02d8 08300BE5 		str	r3, [fp, #-8]
 5042              	.L333:
2741:../../Source/Kernel/rme_kernel.c ****     }
2742:../../Source/Kernel/rme_kernel.c ****     
2743:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
2744:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr, Table_Size)!=0)
 5043              		.loc 1 2744 8
 5044 02dc 08101BE5 		ldr	r1, [fp, #-8]
 5045 02e0 24001BE5 		ldr	r0, [fp, #-36]
 5046 02e4 FEFFFFEB 		bl	_RME_Kot_Mark
 5047 02e8 0030A0E1 		mov	r3, r0
 5048              		.loc 1 2744 7
 5049 02ec 000053E3 		cmp	r3, #0
 5050 02f0 0500000A 		beq	.L334
2745:../../Source/Kernel/rme_kernel.c ****     {
2746:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2747:../../Source/Kernel/rme_kernel.c ****     
2748:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 5051              		.loc 1 2748 9
 5052 02f4 14301BE5 		ldr	r3, [fp, #-20]
 5053 02f8 0010A0E3 		mov	r1, #0
 5054 02fc 0300A0E1 		mov	r0, r3
 5055 0300 FEFFFFEB 		bl	__RME_A7A_Write_Release
2749:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 5056              		.loc 1 2749 16
 5057 0304 0330E0E3 		mvn	r3, #3
 5058 0308 1E0000EA 		b	.L317
 5059              	.L334:
2750:../../Source/Kernel/rme_kernel.c ****     }
2751:../../Source/Kernel/rme_kernel.c ****     else
2752:../../Source/Kernel/rme_kernel.c ****     {
2753:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 139


2754:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2755:../../Source/Kernel/rme_kernel.c ****     }
2756:../../Source/Kernel/rme_kernel.c ****     
2757:../../Source/Kernel/rme_kernel.c ****     /* Header init */
2758:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 5060              		.loc 1 2758 27
 5061 030c 14301BE5 		ldr	r3, [fp, #-20]
 5062 0310 0020A0E3 		mov	r2, #0
 5063 0314 042083E5 		str	r2, [r3, #4]
2759:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 5064              		.loc 1 2759 25
 5065 0318 14301BE5 		ldr	r3, [fp, #-20]
 5066 031c 24201BE5 		ldr	r2, [fp, #-36]
 5067 0320 0C2083E5 		str	r2, [r3, #12]
2760:../../Source/Kernel/rme_kernel.c ****     /* Set the property of the page table to only act as source and creating process */
2761:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ADD_SRC|
 5068              		.loc 1 2761 23
 5069 0324 14201BE5 		ldr	r2, [fp, #-20]
 5070 0328 C130A0E3 		mov	r3, #193
 5071 032c F03F4FE3 		movt	r3, 65520
 5072 0330 083082E5 		str	r3, [r2, #8]
2762:../../Source/Kernel/rme_kernel.c ****                        RME_PGT_FLAG_PRC_CRT|RME_PGT_FLAG_PRC_PGT;
2763:../../Source/Kernel/rme_kernel.c ****     
2764:../../Source/Kernel/rme_kernel.c ****     /* Info init */
2765:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 5073              		.loc 1 2765 23
 5074 0334 04209BE5 		ldr	r2, [fp, #4]
 5075 0338 08309BE5 		ldr	r3, [fp, #8]
 5076 033c 032082E1 		orr	r2, r2, r3
 5077              		.loc 1 2765 18
 5078 0340 14301BE5 		ldr	r3, [fp, #-20]
 5079 0344 182083E5 		str	r2, [r3, #24]
2766:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 5080              		.loc 1 2766 20
 5081 0348 0C309BE5 		ldr	r3, [fp, #12]
 5082 034c 0328A0E1 		lsl	r2, r3, #16
 5083 0350 10309BE5 		ldr	r3, [fp, #16]
 5084 0354 032082E1 		orr	r2, r2, r3
 5085              		.loc 1 2766 19
 5086 0358 14301BE5 		ldr	r3, [fp, #-20]
 5087 035c 142083E5 		str	r2, [r3, #20]
2767:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 5088              		.loc 1 2767 18
 5089 0360 14301BE5 		ldr	r3, [fp, #-20]
 5090 0364 0020A0E3 		mov	r2, #0
 5091 0368 1C2083E5 		str	r2, [r3, #28]
2768:../../Source/Kernel/rme_kernel.c **** 
2769:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
2770:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 5092              		.loc 1 2770 8
 5093 036c 14001BE5 		ldr	r0, [fp, #-20]
 5094 0370 FEFFFFEB 		bl	__RME_Pgt_Init
2771:../../Source/Kernel/rme_kernel.c ****     {
2772:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2773:../../Source/Kernel/rme_kernel.c ****         
2774:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
2775:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr, Table_Size)==0);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 140


2776:../../Source/Kernel/rme_kernel.c **** 
2777:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
2778:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
2779:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
2780:../../Source/Kernel/rme_kernel.c ****     }
2781:../../Source/Kernel/rme_kernel.c ****     else
2782:../../Source/Kernel/rme_kernel.c ****     {
2783:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2784:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2785:../../Source/Kernel/rme_kernel.c ****     }
2786:../../Source/Kernel/rme_kernel.c **** 
2787:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2788:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 5095              		.loc 1 2788 5
 5096 0374 14301BE5 		ldr	r3, [fp, #-20]
 5097 0378 0113A0E3 		mov	r1, #67108864
 5098 037c 0300A0E1 		mov	r0, r3
 5099 0380 FEFFFFEB 		bl	__RME_A7A_Write_Release
2789:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
2790:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
2792:../../Source/Kernel/rme_kernel.c **** 
2793:../../Source/Kernel/rme_kernel.c ****     return 0;
 5100              		.loc 1 2793 12
 5101 0384 0030A0E3 		mov	r3, #0
 5102              	.L317:
2794:../../Source/Kernel/rme_kernel.c **** }
 5103              		.loc 1 2794 1
 5104 0388 0300A0E1 		mov	r0, r3
 5105 038c 04D04BE2 		sub	sp, fp, #4
 5106              		.cfi_def_cfa 13, 8
 5107              		@ sp needed
 5108 0390 0088BDE8 		pop	{fp, pc}
 5109              		.cfi_endproc
 5110              	.LFE29:
 5112              		.section	.text._RME_Pgt_Boot_Add,"ax",%progbits
 5113              		.align	2
 5114              		.global	_RME_Pgt_Boot_Add
 5115              		.syntax unified
 5116              		.arm
 5118              	_RME_Pgt_Boot_Add:
 5119              	.LFB30:
2795:../../Source/Kernel/rme_kernel.c **** #endif
2796:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Crt ********************************************/
2797:../../Source/Kernel/rme_kernel.c **** 
2798:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Add *************************************************
2799:../../Source/Kernel/rme_kernel.c **** Description : This function is exclusively used to set up the Init process's
2800:../../Source/Kernel/rme_kernel.c ****               memory mappings in the booting process. When the system has
2801:../../Source/Kernel/rme_kernel.c ****               booted, it won't possible to fabricate pages like this.
2802:../../Source/Kernel/rme_kernel.c ****               Additionally, this function will set the cap to page table's 
2803:../../Source/Kernel/rme_kernel.c ****               property as unremovable. This means that it is not allowed to
2804:../../Source/Kernel/rme_kernel.c ****               remove any pages in the directory. It will set the reference
2805:../../Source/Kernel/rme_kernel.c ****               count of the capability as 1, thus making the capability to the
2806:../../Source/Kernel/rme_kernel.c ****               initial page table undeletable.
2807:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2808:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
2809:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 141


2810:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Paddr - The physical address to map from.
2811:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to map to.
2812:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the user page.
2813:../../Source/Kernel/rme_kernel.c **** Output      : None.
2814:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2815:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2816:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2817:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Add(struct RME_Cap_Cpt* Cpt,
2818:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt, 
2819:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Paddr,
2820:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2821:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
2822:../../Source/Kernel/rme_kernel.c **** {
 5120              		.loc 1 2822 1
 5121              		.cfi_startproc
 5122              		@ args = 4, pretend = 0, frame = 32
 5123              		@ frame_needed = 1, uses_anonymous_args = 0
 5124 0000 00482DE9 		push	{fp, lr}
 5125              		.cfi_def_cfa_offset 8
 5126              		.cfi_offset 11, -8
 5127              		.cfi_offset 14, -4
 5128 0004 04B08DE2 		add	fp, sp, #4
 5129              		.cfi_def_cfa 11, 4
 5130 0008 20D04DE2 		sub	sp, sp, #32
 5131 000c 18000BE5 		str	r0, [fp, #-24]
 5132 0010 1C100BE5 		str	r1, [fp, #-28]
 5133 0014 20200BE5 		str	r2, [fp, #-32]
 5134 0018 24300BE5 		str	r3, [fp, #-36]
2823:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
2824:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2825:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord;
2826:../../Source/Kernel/rme_kernel.c ****     
2827:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2828:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 5135              		.loc 1 2828 5
 5136 001c 1C301BE5 		ldr	r3, [fp, #-28]
 5137 0020 803003E2 		and	r3, r3, #128
 5138 0024 000053E3 		cmp	r3, #0
 5139 0028 1D00001A 		bne	.L336
 5140              		.loc 1 2828 5 is_stmt 0 discriminator 1
 5141 002c 18301BE5 		ldr	r3, [fp, #-24]
 5142 0030 142093E5 		ldr	r2, [r3, #20]
 5143 0034 1C301BE5 		ldr	r3, [fp, #-28]
 5144 0038 030052E1 		cmp	r2, r3
 5145 003c 0100008A 		bhi	.L337
 5146              		.loc 1 2828 5 discriminator 3
 5147 0040 0230E0E3 		mvn	r3, #2
 5148 0044 760000EA 		b	.L338
 5149              	.L337:
 5150              		.loc 1 2828 5 discriminator 4
 5151 0048 1C301BE5 		ldr	r3, [fp, #-28]
 5152 004c 8322A0E1 		lsl	r2, r3, #5
 5153 0050 18301BE5 		ldr	r3, [fp, #-24]
 5154 0054 0C3093E5 		ldr	r3, [r3, #12]
 5155 0058 033082E0 		add	r3, r2, r3
 5156 005c 08300BE5 		str	r3, [fp, #-8]
 5157 0060 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 142


 5158 0064 0300A0E1 		mov	r0, r3
 5159 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5160 006c 0C000BE5 		str	r0, [fp, #-12]
 5161 0070 0C301BE5 		ldr	r3, [fp, #-12]
 5162 0074 2338A0E1 		lsr	r3, r3, #16
 5163 0078 7330EFE6 		uxtb	r3, r3
 5164 007c 020053E3 		cmp	r3, #2
 5165 0080 0100001A 		bne	.L339
 5166              		.loc 1 2828 5 discriminator 5
 5167 0084 0830E0E3 		mvn	r3, #8
 5168 0088 650000EA 		b	.L338
 5169              	.L339:
 5170              		.loc 1 2828 5 discriminator 6
 5171 008c 0C301BE5 		ldr	r3, [fp, #-12]
 5172 0090 233CA0E1 		lsr	r3, r3, #24
 5173 0094 040053E3 		cmp	r3, #4
 5174 0098 4100000A 		beq	.L340
 5175              		.loc 1 2828 5 discriminator 7
 5176 009c 0130E0E3 		mvn	r3, #1
 5177 00a0 5F0000EA 		b	.L338
 5178              	.L336:
 5179              		.loc 1 2828 5 discriminator 2
 5180 00a4 1C301BE5 		ldr	r3, [fp, #-28]
 5181 00a8 2324A0E1 		lsr	r2, r3, #8
 5182 00ac 18301BE5 		ldr	r3, [fp, #-24]
 5183 00b0 143093E5 		ldr	r3, [r3, #20]
 5184 00b4 030052E1 		cmp	r2, r3
 5185 00b8 0100003A 		bcc	.L341
 5186              		.loc 1 2828 5 discriminator 8
 5187 00bc 0230E0E3 		mvn	r3, #2
 5188 00c0 570000EA 		b	.L338
 5189              	.L341:
 5190              		.loc 1 2828 5 discriminator 9
 5191 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 5192 00c8 2334A0E1 		lsr	r3, r3, #8
 5193 00cc 8322A0E1 		lsl	r2, r3, #5
 5194 00d0 18301BE5 		ldr	r3, [fp, #-24]
 5195 00d4 0C3093E5 		ldr	r3, [r3, #12]
 5196 00d8 033082E0 		add	r3, r2, r3
 5197 00dc 08300BE5 		str	r3, [fp, #-8]
 5198 00e0 08301BE5 		ldr	r3, [fp, #-8]
 5199 00e4 0300A0E1 		mov	r0, r3
 5200 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5201 00ec 0C000BE5 		str	r0, [fp, #-12]
 5202 00f0 0C301BE5 		ldr	r3, [fp, #-12]
 5203 00f4 2338A0E1 		lsr	r3, r3, #16
 5204 00f8 7330EFE6 		uxtb	r3, r3
 5205 00fc 020053E3 		cmp	r3, #2
 5206 0100 0100001A 		bne	.L342
 5207              		.loc 1 2828 5 discriminator 10
 5208 0104 0830E0E3 		mvn	r3, #8
 5209 0108 450000EA 		b	.L338
 5210              	.L342:
 5211              		.loc 1 2828 5 discriminator 11
 5212 010c 0C301BE5 		ldr	r3, [fp, #-12]
 5213 0110 233CA0E1 		lsr	r3, r3, #24
 5214 0114 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 143


 5215 0118 0100000A 		beq	.L343
 5216              		.loc 1 2828 5 discriminator 12
 5217 011c 0130E0E3 		mvn	r3, #1
 5218 0120 3F0000EA 		b	.L338
 5219              	.L343:
 5220              		.loc 1 2828 5 discriminator 13
 5221 0124 1C301BE5 		ldr	r3, [fp, #-28]
 5222 0128 7F2003E2 		and	r2, r3, #127
 5223 012c 08301BE5 		ldr	r3, [fp, #-8]
 5224 0130 143093E5 		ldr	r3, [r3, #20]
 5225 0134 030052E1 		cmp	r2, r3
 5226 0138 0100003A 		bcc	.L344
 5227              		.loc 1 2828 5 discriminator 14
 5228 013c 0230E0E3 		mvn	r3, #2
 5229 0140 370000EA 		b	.L338
 5230              	.L344:
 5231              		.loc 1 2828 5 discriminator 15
 5232 0144 1C301BE5 		ldr	r3, [fp, #-28]
 5233 0148 7F3003E2 		and	r3, r3, #127
 5234 014c 8322A0E1 		lsl	r2, r3, #5
 5235 0150 08301BE5 		ldr	r3, [fp, #-8]
 5236 0154 0C3093E5 		ldr	r3, [r3, #12]
 5237 0158 033082E0 		add	r3, r2, r3
 5238 015c 08300BE5 		str	r3, [fp, #-8]
 5239 0160 08301BE5 		ldr	r3, [fp, #-8]
 5240 0164 0300A0E1 		mov	r0, r3
 5241 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5242 016c 0C000BE5 		str	r0, [fp, #-12]
 5243 0170 0C301BE5 		ldr	r3, [fp, #-12]
 5244 0174 2338A0E1 		lsr	r3, r3, #16
 5245 0178 7330EFE6 		uxtb	r3, r3
 5246 017c 020053E3 		cmp	r3, #2
 5247 0180 0100001A 		bne	.L345
 5248              		.loc 1 2828 5 discriminator 16
 5249 0184 0830E0E3 		mvn	r3, #8
 5250 0188 250000EA 		b	.L338
 5251              	.L345:
 5252              		.loc 1 2828 5 discriminator 17
 5253 018c 0C301BE5 		ldr	r3, [fp, #-12]
 5254 0190 233CA0E1 		lsr	r3, r3, #24
 5255 0194 040053E3 		cmp	r3, #4
 5256 0198 0100000A 		beq	.L340
 5257              		.loc 1 2828 5 discriminator 18
 5258 019c 0130E0E3 		mvn	r3, #1
 5259 01a0 1F0000EA 		b	.L338
 5260              	.L340:
2829:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);    
2830:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen, but don't check their properties */
2831:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,0U);
2832:../../Source/Kernel/rme_kernel.c **** 
2833:../../Source/Kernel/rme_kernel.c ****     Szord=RME_PGT_SZORD(Pgt_Op->Order);
 5261              		.loc 1 2833 11 is_stmt 1
 5262 01a4 08301BE5 		ldr	r3, [fp, #-8]
 5263 01a8 143093E5 		ldr	r3, [r3, #20]
 5264              		.loc 1 2833 10
 5265 01ac 2338A0E1 		lsr	r3, r3, #16
 5266 01b0 10300BE5 		str	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 144


2834:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2835:../../Source/Kernel/rme_kernel.c ****     /* Check if we force identical mapping */
2836:../../Source/Kernel/rme_kernel.c ****     if(Szord==RME_WORD_BIT)
2837:../../Source/Kernel/rme_kernel.c ****     {
2838:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2839:../../Source/Kernel/rme_kernel.c ****         
2840:../../Source/Kernel/rme_kernel.c ****         if((Paddr!=0U)||(Pos!=0U))
2841:../../Source/Kernel/rme_kernel.c ****         {
2842:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2843:../../Source/Kernel/rme_kernel.c ****             
2844:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2845:../../Source/Kernel/rme_kernel.c ****         }
2846:../../Source/Kernel/rme_kernel.c ****         else
2847:../../Source/Kernel/rme_kernel.c ****         {
2848:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2849:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2850:../../Source/Kernel/rme_kernel.c ****         }
2851:../../Source/Kernel/rme_kernel.c ****     }
2852:../../Source/Kernel/rme_kernel.c ****     else if(Paddr!=(RME_PGT_BASE(Pgt_Op->Base)+(Pos<<Szord)))
2853:../../Source/Kernel/rme_kernel.c ****     {
2854:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2855:../../Source/Kernel/rme_kernel.c ****         
2856:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
2857:../../Source/Kernel/rme_kernel.c ****     }
2858:../../Source/Kernel/rme_kernel.c ****     else
2859:../../Source/Kernel/rme_kernel.c ****     {
2860:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2861:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2862:../../Source/Kernel/rme_kernel.c ****     }
2863:../../Source/Kernel/rme_kernel.c **** #endif
2864:../../Source/Kernel/rme_kernel.c **** 
2865:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range and the granularity is allowed */
2866:../../Source/Kernel/rme_kernel.c ****     if(((Pos>>RME_PGT_NMORD(Pgt_Op->Order))!=0U)||
 5267              		.loc 1 2866 15
 5268 01b4 08301BE5 		ldr	r3, [fp, #-8]
 5269 01b8 143093E5 		ldr	r3, [r3, #20]
 5270 01bc 7330FFE6 		uxth	r3, r3
 5271              		.loc 1 2866 13
 5272 01c0 24201BE5 		ldr	r2, [fp, #-36]
 5273 01c4 3233A0E1 		lsr	r3, r2, r3
 5274              		.loc 1 2866 7
 5275 01c8 000053E3 		cmp	r3, #0
 5276 01cc 0700001A 		bne	.L346
2867:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5277              		.loc 1 2867 16 discriminator 1
 5278 01d0 10301BE5 		ldr	r3, [fp, #-16]
 5279 01d4 203063E2 		rsb	r3, r3, #32
 5280 01d8 0020E0E3 		mvn	r2, #0
 5281 01dc 3223A0E1 		lsr	r2, r2, r3
 5282              		.loc 1 2867 15 discriminator 1
 5283 01e0 20301BE5 		ldr	r3, [fp, #-32]
 5284 01e4 023003E0 		and	r3, r3, r2
2866:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5285              		.loc 1 2866 49 discriminator 1
 5286 01e8 000053E3 		cmp	r3, #0
 5287 01ec 0100000A 		beq	.L347
 5288              	.L346:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 145


2868:../../Source/Kernel/rme_kernel.c ****     {
2869:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2870:../../Source/Kernel/rme_kernel.c ****         
2871:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5289              		.loc 1 2871 16
 5290 01f0 6430E0E3 		mvn	r3, #100
 5291 01f4 0A0000EA 		b	.L338
 5292              	.L347:
2872:../../Source/Kernel/rme_kernel.c ****     }
2873:../../Source/Kernel/rme_kernel.c ****     else
2874:../../Source/Kernel/rme_kernel.c ****     {
2875:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2876:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2877:../../Source/Kernel/rme_kernel.c ****     }
2878:../../Source/Kernel/rme_kernel.c **** 
2879:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
2880:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
2881:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag)!=0)
 5293              		.loc 1 2881 8
 5294 01f8 04309BE5 		ldr	r3, [fp, #4]
 5295 01fc 24201BE5 		ldr	r2, [fp, #-36]
 5296 0200 20101BE5 		ldr	r1, [fp, #-32]
 5297 0204 08001BE5 		ldr	r0, [fp, #-8]
 5298 0208 FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5299 020c 0030A0E1 		mov	r3, r0
 5300              		.loc 1 2881 7
 5301 0210 000053E3 		cmp	r3, #0
 5302 0214 0100000A 		beq	.L348
2882:../../Source/Kernel/rme_kernel.c ****     {
2883:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2884:../../Source/Kernel/rme_kernel.c ****         
2885:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 5303              		.loc 1 2885 16
 5304 0218 6530E0E3 		mvn	r3, #101
 5305 021c 000000EA 		b	.L338
 5306              	.L348:
2886:../../Source/Kernel/rme_kernel.c ****     }
2887:../../Source/Kernel/rme_kernel.c ****     else
2888:../../Source/Kernel/rme_kernel.c ****     {
2889:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2890:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2891:../../Source/Kernel/rme_kernel.c ****     }
2892:../../Source/Kernel/rme_kernel.c **** 
2893:../../Source/Kernel/rme_kernel.c ****     return 0;
 5307              		.loc 1 2893 12
 5308 0220 0030A0E3 		mov	r3, #0
 5309              	.L338:
2894:../../Source/Kernel/rme_kernel.c **** }
 5310              		.loc 1 2894 1
 5311 0224 0300A0E1 		mov	r0, r3
 5312 0228 04D04BE2 		sub	sp, fp, #4
 5313              		.cfi_def_cfa 13, 8
 5314              		@ sp needed
 5315 022c 0088BDE8 		pop	{fp, pc}
 5316              		.cfi_endproc
 5317              	.LFE30:
 5319              		.section	.text._RME_Pgt_Boot_Con,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 146


 5320              		.align	2
 5321              		.global	_RME_Pgt_Boot_Con
 5322              		.syntax unified
 5323              		.arm
 5325              	_RME_Pgt_Boot_Con:
 5326              	.LFB31:
2895:../../Source/Kernel/rme_kernel.c **** #endif
2896:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Add ********************************************/
2897:../../Source/Kernel/rme_kernel.c **** 
2898:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Con *************************************************
2899:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table from the parent page table at boot-time.
2900:../../Source/Kernel/rme_kernel.c ****               This does not check flags.
2901:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2902:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
2903:../../Source/Kernel/rme_kernel.c ****                                          table.
2904:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
2905:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
2906:../../Source/Kernel/rme_kernel.c ****                               page table to.
2907:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
2908:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
2909:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
2910:../../Source/Kernel/rme_kernel.c **** Output      : None.
2911:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2912:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2913:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2914:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Con(struct RME_Cap_Cpt* Cpt,
2915:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Parent,
2916:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2917:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Child,
2918:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag_Child)
2919:../../Source/Kernel/rme_kernel.c **** {
 5327              		.loc 1 2919 1
 5328              		.cfi_startproc
 5329              		@ args = 4, pretend = 0, frame = 40
 5330              		@ frame_needed = 1, uses_anonymous_args = 0
 5331 0000 00482DE9 		push	{fp, lr}
 5332              		.cfi_def_cfa_offset 8
 5333              		.cfi_offset 11, -8
 5334              		.cfi_offset 14, -4
 5335 0004 04B08DE2 		add	fp, sp, #4
 5336              		.cfi_def_cfa 11, 4
 5337 0008 28D04DE2 		sub	sp, sp, #40
 5338 000c 20000BE5 		str	r0, [fp, #-32]
 5339 0010 24100BE5 		str	r1, [fp, #-36]
 5340 0014 28200BE5 		str	r2, [fp, #-40]
 5341 0018 2C300BE5 		str	r3, [fp, #-44]
2920:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
2921:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
2922:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
2923:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2924:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
2925:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
2926:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2927:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
2928:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
2929:../../Source/Kernel/rme_kernel.c **** #endif
2930:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 147


2931:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2932:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 5342              		.loc 1 2932 5
 5343 001c 24301BE5 		ldr	r3, [fp, #-36]
 5344 0020 803003E2 		and	r3, r3, #128
 5345 0024 000053E3 		cmp	r3, #0
 5346 0028 1D00001A 		bne	.L350
 5347              		.loc 1 2932 5 is_stmt 0 discriminator 1
 5348 002c 20301BE5 		ldr	r3, [fp, #-32]
 5349 0030 142093E5 		ldr	r2, [r3, #20]
 5350 0034 24301BE5 		ldr	r3, [fp, #-36]
 5351 0038 030052E1 		cmp	r2, r3
 5352 003c 0100008A 		bhi	.L351
 5353              		.loc 1 2932 5 discriminator 3
 5354 0040 0230E0E3 		mvn	r3, #2
 5355 0044 FD0000EA 		b	.L352
 5356              	.L351:
 5357              		.loc 1 2932 5 discriminator 4
 5358 0048 24301BE5 		ldr	r3, [fp, #-36]
 5359 004c 8322A0E1 		lsl	r2, r3, #5
 5360 0050 20301BE5 		ldr	r3, [fp, #-32]
 5361 0054 0C3093E5 		ldr	r3, [r3, #12]
 5362 0058 033082E0 		add	r3, r2, r3
 5363 005c 08300BE5 		str	r3, [fp, #-8]
 5364 0060 08301BE5 		ldr	r3, [fp, #-8]
 5365 0064 0300A0E1 		mov	r0, r3
 5366 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5367 006c 10000BE5 		str	r0, [fp, #-16]
 5368 0070 10301BE5 		ldr	r3, [fp, #-16]
 5369 0074 2338A0E1 		lsr	r3, r3, #16
 5370 0078 7330EFE6 		uxtb	r3, r3
 5371 007c 020053E3 		cmp	r3, #2
 5372 0080 0100001A 		bne	.L353
 5373              		.loc 1 2932 5 discriminator 5
 5374 0084 0830E0E3 		mvn	r3, #8
 5375 0088 EC0000EA 		b	.L352
 5376              	.L353:
 5377              		.loc 1 2932 5 discriminator 6
 5378 008c 10301BE5 		ldr	r3, [fp, #-16]
 5379 0090 233CA0E1 		lsr	r3, r3, #24
 5380 0094 040053E3 		cmp	r3, #4
 5381 0098 4100000A 		beq	.L354
 5382              		.loc 1 2932 5 discriminator 7
 5383 009c 0130E0E3 		mvn	r3, #1
 5384 00a0 E60000EA 		b	.L352
 5385              	.L350:
 5386              		.loc 1 2932 5 discriminator 2
 5387 00a4 24301BE5 		ldr	r3, [fp, #-36]
 5388 00a8 2324A0E1 		lsr	r2, r3, #8
 5389 00ac 20301BE5 		ldr	r3, [fp, #-32]
 5390 00b0 143093E5 		ldr	r3, [r3, #20]
 5391 00b4 030052E1 		cmp	r2, r3
 5392 00b8 0100003A 		bcc	.L355
 5393              		.loc 1 2932 5 discriminator 8
 5394 00bc 0230E0E3 		mvn	r3, #2
 5395 00c0 DE0000EA 		b	.L352
 5396              	.L355:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 148


 5397              		.loc 1 2932 5 discriminator 9
 5398 00c4 24301BE5 		ldr	r3, [fp, #-36]
 5399 00c8 2334A0E1 		lsr	r3, r3, #8
 5400 00cc 8322A0E1 		lsl	r2, r3, #5
 5401 00d0 20301BE5 		ldr	r3, [fp, #-32]
 5402 00d4 0C3093E5 		ldr	r3, [r3, #12]
 5403 00d8 033082E0 		add	r3, r2, r3
 5404 00dc 08300BE5 		str	r3, [fp, #-8]
 5405 00e0 08301BE5 		ldr	r3, [fp, #-8]
 5406 00e4 0300A0E1 		mov	r0, r3
 5407 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5408 00ec 10000BE5 		str	r0, [fp, #-16]
 5409 00f0 10301BE5 		ldr	r3, [fp, #-16]
 5410 00f4 2338A0E1 		lsr	r3, r3, #16
 5411 00f8 7330EFE6 		uxtb	r3, r3
 5412 00fc 020053E3 		cmp	r3, #2
 5413 0100 0100001A 		bne	.L356
 5414              		.loc 1 2932 5 discriminator 10
 5415 0104 0830E0E3 		mvn	r3, #8
 5416 0108 CC0000EA 		b	.L352
 5417              	.L356:
 5418              		.loc 1 2932 5 discriminator 11
 5419 010c 10301BE5 		ldr	r3, [fp, #-16]
 5420 0110 233CA0E1 		lsr	r3, r3, #24
 5421 0114 030053E3 		cmp	r3, #3
 5422 0118 0100000A 		beq	.L357
 5423              		.loc 1 2932 5 discriminator 12
 5424 011c 0130E0E3 		mvn	r3, #1
 5425 0120 C60000EA 		b	.L352
 5426              	.L357:
 5427              		.loc 1 2932 5 discriminator 13
 5428 0124 24301BE5 		ldr	r3, [fp, #-36]
 5429 0128 7F2003E2 		and	r2, r3, #127
 5430 012c 08301BE5 		ldr	r3, [fp, #-8]
 5431 0130 143093E5 		ldr	r3, [r3, #20]
 5432 0134 030052E1 		cmp	r2, r3
 5433 0138 0100003A 		bcc	.L358
 5434              		.loc 1 2932 5 discriminator 14
 5435 013c 0230E0E3 		mvn	r3, #2
 5436 0140 BE0000EA 		b	.L352
 5437              	.L358:
 5438              		.loc 1 2932 5 discriminator 15
 5439 0144 24301BE5 		ldr	r3, [fp, #-36]
 5440 0148 7F3003E2 		and	r3, r3, #127
 5441 014c 8322A0E1 		lsl	r2, r3, #5
 5442 0150 08301BE5 		ldr	r3, [fp, #-8]
 5443 0154 0C3093E5 		ldr	r3, [r3, #12]
 5444 0158 033082E0 		add	r3, r2, r3
 5445 015c 08300BE5 		str	r3, [fp, #-8]
 5446 0160 08301BE5 		ldr	r3, [fp, #-8]
 5447 0164 0300A0E1 		mov	r0, r3
 5448 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5449 016c 10000BE5 		str	r0, [fp, #-16]
 5450 0170 10301BE5 		ldr	r3, [fp, #-16]
 5451 0174 2338A0E1 		lsr	r3, r3, #16
 5452 0178 7330EFE6 		uxtb	r3, r3
 5453 017c 020053E3 		cmp	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 149


 5454 0180 0100001A 		bne	.L359
 5455              		.loc 1 2932 5 discriminator 16
 5456 0184 0830E0E3 		mvn	r3, #8
 5457 0188 AC0000EA 		b	.L352
 5458              	.L359:
 5459              		.loc 1 2932 5 discriminator 17
 5460 018c 10301BE5 		ldr	r3, [fp, #-16]
 5461 0190 233CA0E1 		lsr	r3, r3, #24
 5462 0194 040053E3 		cmp	r3, #4
 5463 0198 0100000A 		beq	.L354
 5464              		.loc 1 2932 5 discriminator 18
 5465 019c 0130E0E3 		mvn	r3, #1
 5466 01a0 A60000EA 		b	.L352
 5467              	.L354:
2933:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
2934:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 5468              		.loc 1 2934 5 is_stmt 1
 5469 01a4 2C301BE5 		ldr	r3, [fp, #-44]
 5470 01a8 803003E2 		and	r3, r3, #128
 5471 01ac 000053E3 		cmp	r3, #0
 5472 01b0 1D00001A 		bne	.L360
 5473              		.loc 1 2934 5 is_stmt 0 discriminator 1
 5474 01b4 20301BE5 		ldr	r3, [fp, #-32]
 5475 01b8 142093E5 		ldr	r2, [r3, #20]
 5476 01bc 2C301BE5 		ldr	r3, [fp, #-44]
 5477 01c0 030052E1 		cmp	r2, r3
 5478 01c4 0100008A 		bhi	.L361
 5479              		.loc 1 2934 5 discriminator 3
 5480 01c8 0230E0E3 		mvn	r3, #2
 5481 01cc 9B0000EA 		b	.L352
 5482              	.L361:
 5483              		.loc 1 2934 5 discriminator 4
 5484 01d0 2C301BE5 		ldr	r3, [fp, #-44]
 5485 01d4 8322A0E1 		lsl	r2, r3, #5
 5486 01d8 20301BE5 		ldr	r3, [fp, #-32]
 5487 01dc 0C3093E5 		ldr	r3, [r3, #12]
 5488 01e0 033082E0 		add	r3, r2, r3
 5489 01e4 0C300BE5 		str	r3, [fp, #-12]
 5490 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 5491 01ec 0300A0E1 		mov	r0, r3
 5492 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5493 01f4 10000BE5 		str	r0, [fp, #-16]
 5494 01f8 10301BE5 		ldr	r3, [fp, #-16]
 5495 01fc 2338A0E1 		lsr	r3, r3, #16
 5496 0200 7330EFE6 		uxtb	r3, r3
 5497 0204 020053E3 		cmp	r3, #2
 5498 0208 0100001A 		bne	.L362
 5499              		.loc 1 2934 5 discriminator 5
 5500 020c 0830E0E3 		mvn	r3, #8
 5501 0210 8A0000EA 		b	.L352
 5502              	.L362:
 5503              		.loc 1 2934 5 discriminator 6
 5504 0214 10301BE5 		ldr	r3, [fp, #-16]
 5505 0218 233CA0E1 		lsr	r3, r3, #24
 5506 021c 040053E3 		cmp	r3, #4
 5507 0220 4100000A 		beq	.L363
 5508              		.loc 1 2934 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 150


 5509 0224 0130E0E3 		mvn	r3, #1
 5510 0228 840000EA 		b	.L352
 5511              	.L360:
 5512              		.loc 1 2934 5 discriminator 2
 5513 022c 2C301BE5 		ldr	r3, [fp, #-44]
 5514 0230 2324A0E1 		lsr	r2, r3, #8
 5515 0234 20301BE5 		ldr	r3, [fp, #-32]
 5516 0238 143093E5 		ldr	r3, [r3, #20]
 5517 023c 030052E1 		cmp	r2, r3
 5518 0240 0100003A 		bcc	.L364
 5519              		.loc 1 2934 5 discriminator 8
 5520 0244 0230E0E3 		mvn	r3, #2
 5521 0248 7C0000EA 		b	.L352
 5522              	.L364:
 5523              		.loc 1 2934 5 discriminator 9
 5524 024c 2C301BE5 		ldr	r3, [fp, #-44]
 5525 0250 2334A0E1 		lsr	r3, r3, #8
 5526 0254 8322A0E1 		lsl	r2, r3, #5
 5527 0258 20301BE5 		ldr	r3, [fp, #-32]
 5528 025c 0C3093E5 		ldr	r3, [r3, #12]
 5529 0260 033082E0 		add	r3, r2, r3
 5530 0264 0C300BE5 		str	r3, [fp, #-12]
 5531 0268 0C301BE5 		ldr	r3, [fp, #-12]
 5532 026c 0300A0E1 		mov	r0, r3
 5533 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5534 0274 10000BE5 		str	r0, [fp, #-16]
 5535 0278 10301BE5 		ldr	r3, [fp, #-16]
 5536 027c 2338A0E1 		lsr	r3, r3, #16
 5537 0280 7330EFE6 		uxtb	r3, r3
 5538 0284 020053E3 		cmp	r3, #2
 5539 0288 0100001A 		bne	.L365
 5540              		.loc 1 2934 5 discriminator 10
 5541 028c 0830E0E3 		mvn	r3, #8
 5542 0290 6A0000EA 		b	.L352
 5543              	.L365:
 5544              		.loc 1 2934 5 discriminator 11
 5545 0294 10301BE5 		ldr	r3, [fp, #-16]
 5546 0298 233CA0E1 		lsr	r3, r3, #24
 5547 029c 030053E3 		cmp	r3, #3
 5548 02a0 0100000A 		beq	.L366
 5549              		.loc 1 2934 5 discriminator 12
 5550 02a4 0130E0E3 		mvn	r3, #1
 5551 02a8 640000EA 		b	.L352
 5552              	.L366:
 5553              		.loc 1 2934 5 discriminator 13
 5554 02ac 2C301BE5 		ldr	r3, [fp, #-44]
 5555 02b0 7F2003E2 		and	r2, r3, #127
 5556 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 5557 02b8 143093E5 		ldr	r3, [r3, #20]
 5558 02bc 030052E1 		cmp	r2, r3
 5559 02c0 0100003A 		bcc	.L367
 5560              		.loc 1 2934 5 discriminator 14
 5561 02c4 0230E0E3 		mvn	r3, #2
 5562 02c8 5C0000EA 		b	.L352
 5563              	.L367:
 5564              		.loc 1 2934 5 discriminator 15
 5565 02cc 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 151


 5566 02d0 7F3003E2 		and	r3, r3, #127
 5567 02d4 8322A0E1 		lsl	r2, r3, #5
 5568 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 5569 02dc 0C3093E5 		ldr	r3, [r3, #12]
 5570 02e0 033082E0 		add	r3, r2, r3
 5571 02e4 0C300BE5 		str	r3, [fp, #-12]
 5572 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 5573 02ec 0300A0E1 		mov	r0, r3
 5574 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5575 02f4 10000BE5 		str	r0, [fp, #-16]
 5576 02f8 10301BE5 		ldr	r3, [fp, #-16]
 5577 02fc 2338A0E1 		lsr	r3, r3, #16
 5578 0300 7330EFE6 		uxtb	r3, r3
 5579 0304 020053E3 		cmp	r3, #2
 5580 0308 0100001A 		bne	.L368
 5581              		.loc 1 2934 5 discriminator 16
 5582 030c 0830E0E3 		mvn	r3, #8
 5583 0310 4A0000EA 		b	.L352
 5584              	.L368:
 5585              		.loc 1 2934 5 discriminator 17
 5586 0314 10301BE5 		ldr	r3, [fp, #-16]
 5587 0318 233CA0E1 		lsr	r3, r3, #24
 5588 031c 040053E3 		cmp	r3, #4
 5589 0320 0100000A 		beq	.L363
 5590              		.loc 1 2934 5 discriminator 18
 5591 0324 0130E0E3 		mvn	r3, #1
 5592 0328 440000EA 		b	.L352
 5593              	.L363:
2935:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
2936:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen but don't check flags */
2937:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent,0U);
2938:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child,0U);
2939:../../Source/Kernel/rme_kernel.c ****     
2940:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
2941:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 5594              		.loc 1 2941 14 is_stmt 1
 5595 032c 08301BE5 		ldr	r3, [fp, #-8]
 5596 0330 143093E5 		ldr	r3, [r3, #20]
 5597 0334 7330FFE6 		uxth	r3, r3
 5598              		.loc 1 2941 12
 5599 0338 28201BE5 		ldr	r2, [fp, #-40]
 5600 033c 3233A0E1 		lsr	r3, r2, r3
 5601              		.loc 1 2941 7
 5602 0340 000053E3 		cmp	r3, #0
 5603 0344 0100000A 		beq	.L369
2942:../../Source/Kernel/rme_kernel.c ****     {
2943:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2944:../../Source/Kernel/rme_kernel.c ****         
2945:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5604              		.loc 1 2945 16
 5605 0348 6430E0E3 		mvn	r3, #100
 5606 034c 3B0000EA 		b	.L352
 5607              	.L369:
2946:../../Source/Kernel/rme_kernel.c ****     }
2947:../../Source/Kernel/rme_kernel.c ****     else
2948:../../Source/Kernel/rme_kernel.c ****     {
2949:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 152


2950:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2951:../../Source/Kernel/rme_kernel.c ****     }
2952:../../Source/Kernel/rme_kernel.c ****     
2953:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
2954:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 5608              		.loc 1 2954 17
 5609 0350 0C301BE5 		ldr	r3, [fp, #-12]
 5610 0354 143093E5 		ldr	r3, [r3, #20]
 5611 0358 7320FFE6 		uxth	r2, r3
 5612              		.loc 1 2954 49
 5613 035c 0C301BE5 		ldr	r3, [fp, #-12]
 5614 0360 143093E5 		ldr	r3, [r3, #20]
 5615 0364 2338A0E1 		lsr	r3, r3, #16
 5616              		.loc 1 2954 16
 5617 0368 033082E0 		add	r3, r2, r3
 5618 036c 14300BE5 		str	r3, [fp, #-20]
2955:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 5619              		.loc 1 2955 18
 5620 0370 08301BE5 		ldr	r3, [fp, #-8]
 5621 0374 143093E5 		ldr	r3, [r3, #20]
 5622              		.loc 1 2955 17
 5623 0378 2338A0E1 		lsr	r3, r3, #16
 5624 037c 18300BE5 		str	r3, [fp, #-24]
2956:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 5625              		.loc 1 2956 7
 5626 0380 18201BE5 		ldr	r2, [fp, #-24]
 5627 0384 14301BE5 		ldr	r3, [fp, #-20]
 5628 0388 030052E1 		cmp	r2, r3
 5629 038c 0100002A 		bcs	.L370
2957:../../Source/Kernel/rme_kernel.c ****     {
2958:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2959:../../Source/Kernel/rme_kernel.c ****         
2960:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5630              		.loc 1 2960 16
 5631 0390 6430E0E3 		mvn	r3, #100
 5632 0394 290000EA 		b	.L352
 5633              	.L370:
2961:../../Source/Kernel/rme_kernel.c ****     }
2962:../../Source/Kernel/rme_kernel.c ****     else
2963:../../Source/Kernel/rme_kernel.c ****     {
2964:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2965:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2966:../../Source/Kernel/rme_kernel.c ****     }
2967:../../Source/Kernel/rme_kernel.c **** 
2968:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2969:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
2970:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
2971:../../Source/Kernel/rme_kernel.c ****     {
2972:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2973:../../Source/Kernel/rme_kernel.c ****         
2974:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
2975:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
2976:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
2977:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
2978:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
2979:../../Source/Kernel/rme_kernel.c ****         {
2980:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 153


2981:../../Source/Kernel/rme_kernel.c ****             
2982:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2983:../../Source/Kernel/rme_kernel.c ****         }
2984:../../Source/Kernel/rme_kernel.c ****         else
2985:../../Source/Kernel/rme_kernel.c ****         {
2986:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2987:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2988:../../Source/Kernel/rme_kernel.c ****         }
2989:../../Source/Kernel/rme_kernel.c ****         
2990:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
2991:../../Source/Kernel/rme_kernel.c ****         
2992:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
2993:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
2994:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
2995:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
2996:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
2997:../../Source/Kernel/rme_kernel.c ****         {
2998:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2999:../../Source/Kernel/rme_kernel.c ****             
3000:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3001:../../Source/Kernel/rme_kernel.c ****             {
3002:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3003:../../Source/Kernel/rme_kernel.c **** 
3004:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3005:../../Source/Kernel/rme_kernel.c ****             }
3006:../../Source/Kernel/rme_kernel.c ****             else
3007:../../Source/Kernel/rme_kernel.c ****             {
3008:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3009:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3010:../../Source/Kernel/rme_kernel.c ****             }
3011:../../Source/Kernel/rme_kernel.c ****         }
3012:../../Source/Kernel/rme_kernel.c ****         else
3013:../../Source/Kernel/rme_kernel.c ****         {
3014:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3015:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3016:../../Source/Kernel/rme_kernel.c ****         }
3017:../../Source/Kernel/rme_kernel.c ****     }
3018:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, no need to check */
3019:../../Source/Kernel/rme_kernel.c ****     else
3020:../../Source/Kernel/rme_kernel.c ****     {
3021:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3022:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3023:../../Source/Kernel/rme_kernel.c ****     }
3024:../../Source/Kernel/rme_kernel.c **** #else
3025:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3026:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 5634              		.loc 1 3026 7
 5635 0398 18201BE5 		ldr	r2, [fp, #-24]
 5636 039c 14301BE5 		ldr	r3, [fp, #-20]
 5637 03a0 030052E1 		cmp	r2, r3
 5638 03a4 0100000A 		beq	.L371
3027:../../Source/Kernel/rme_kernel.c ****     {
3028:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3029:../../Source/Kernel/rme_kernel.c **** 
3030:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5639              		.loc 1 3030 16
 5640 03a8 6430E0E3 		mvn	r3, #100
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 154


 5641 03ac 230000EA 		b	.L352
 5642              	.L371:
3031:../../Source/Kernel/rme_kernel.c ****     }
3032:../../Source/Kernel/rme_kernel.c ****     else
3033:../../Source/Kernel/rme_kernel.c ****     {
3034:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3035:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3036:../../Source/Kernel/rme_kernel.c ****     }
3037:../../Source/Kernel/rme_kernel.c **** #endif
3038:../../Source/Kernel/rme_kernel.c **** 
3039:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3040:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3041:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 5643              		.loc 1 3041 8
 5644 03b0 04309BE5 		ldr	r3, [fp, #4]
 5645 03b4 0C201BE5 		ldr	r2, [fp, #-12]
 5646 03b8 28101BE5 		ldr	r1, [fp, #-40]
 5647 03bc 08001BE5 		ldr	r0, [fp, #-8]
 5648 03c0 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3042:../../Source/Kernel/rme_kernel.c ****     {
3043:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3044:../../Source/Kernel/rme_kernel.c **** 
3045:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3046:../../Source/Kernel/rme_kernel.c ****     }
3047:../../Source/Kernel/rme_kernel.c ****     else
3048:../../Source/Kernel/rme_kernel.c ****     {
3049:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3050:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3051:../../Source/Kernel/rme_kernel.c ****     }
3052:../../Source/Kernel/rme_kernel.c ****     
3053:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3054:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 5649              		.loc 1 3054 14
 5650 03c4 08301BE5 		ldr	r3, [fp, #-8]
 5651 03c8 003093E5 		ldr	r3, [r3]
 5652 03cc 7330FFE6 		uxth	r3, r3
 5653 03d0 000053E3 		cmp	r3, #0
 5654 03d4 0200000A 		beq	.L372
 5655              		.loc 1 3054 14 is_stmt 0 discriminator 1
 5656 03d8 08301BE5 		ldr	r3, [fp, #-8]
 5657 03dc 043093E5 		ldr	r3, [r3, #4]
 5658 03e0 000000EA 		b	.L373
 5659              	.L372:
 5660              		.loc 1 3054 14 discriminator 2
 5661 03e4 08301BE5 		ldr	r3, [fp, #-8]
 5662              	.L373:
 5663              		.loc 1 3054 13 is_stmt 1 discriminator 4
 5664 03e8 1C300BE5 		str	r3, [fp, #-28]
3055:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5665              		.loc 1 3055 5 discriminator 4
 5666 03ec 1C301BE5 		ldr	r3, [fp, #-28]
 5667 03f0 043083E2 		add	r3, r3, #4
 5668 03f4 0110A0E3 		mov	r1, #1
 5669 03f8 0300A0E1 		mov	r0, r3
 5670 03fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
3056:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 5671              		.loc 1 3056 14 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 155


 5672 0400 0C301BE5 		ldr	r3, [fp, #-12]
 5673 0404 003093E5 		ldr	r3, [r3]
 5674 0408 7330FFE6 		uxth	r3, r3
 5675 040c 000053E3 		cmp	r3, #0
 5676 0410 0200000A 		beq	.L374
 5677              		.loc 1 3056 14 is_stmt 0 discriminator 1
 5678 0414 0C301BE5 		ldr	r3, [fp, #-12]
 5679 0418 043093E5 		ldr	r3, [r3, #4]
 5680 041c 000000EA 		b	.L375
 5681              	.L374:
 5682              		.loc 1 3056 14 discriminator 2
 5683 0420 0C301BE5 		ldr	r3, [fp, #-12]
 5684              	.L375:
 5685              		.loc 1 3056 13 is_stmt 1 discriminator 4
 5686 0424 1C300BE5 		str	r3, [fp, #-28]
3057:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5687              		.loc 1 3057 5 discriminator 4
 5688 0428 1C301BE5 		ldr	r3, [fp, #-28]
 5689 042c 043083E2 		add	r3, r3, #4
 5690 0430 0110A0E3 		mov	r1, #1
 5691 0434 0300A0E1 		mov	r0, r3
 5692 0438 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3058:../../Source/Kernel/rme_kernel.c **** 
3059:../../Source/Kernel/rme_kernel.c ****     return 0;
 5693              		.loc 1 3059 12 discriminator 4
 5694 043c 0030A0E3 		mov	r3, #0
 5695              	.L352:
3060:../../Source/Kernel/rme_kernel.c **** }
 5696              		.loc 1 3060 1
 5697 0440 0300A0E1 		mov	r0, r3
 5698 0444 04D04BE2 		sub	sp, fp, #4
 5699              		.cfi_def_cfa 13, 8
 5700              		@ sp needed
 5701 0448 0088BDE8 		pop	{fp, pc}
 5702              		.cfi_endproc
 5703              	.LFE31:
 5705              		.section	.text._RME_Pgt_Crt,"ax",%progbits
 5706              		.align	2
 5707              		.syntax unified
 5708              		.arm
 5710              	_RME_Pgt_Crt:
 5711              	.LFB32:
3061:../../Source/Kernel/rme_kernel.c **** #endif
3062:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Con ********************************************/
3063:../../Source/Kernel/rme_kernel.c **** 
3064:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Crt ******************************************************
3065:../../Source/Kernel/rme_kernel.c **** Description : Create a page table.
3066:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3067:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
3068:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
3069:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3070:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
3071:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3072:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3073:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3074:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3075:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the page
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 156


3076:../../Source/Kernel/rme_kernel.c ****                                 table kernel object.
3077:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
3078:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
3079:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
3080:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
3081:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page 
3082:../../Source/Kernel/rme_kernel.c ****                                  directories into this one.
3083:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
3084:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the 
3085:../../Source/Kernel/rme_kernel.c ****                                      page directory.
3086:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the table.
3087:../../Source/Kernel/rme_kernel.c **** Output      : None.
3088:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3089:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3090:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3091:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Crt(struct RME_Cap_Cpt* Cpt,
3092:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3093:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
3094:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3095:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
3096:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Base,
3097:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Top,
3098:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Size_Order,
3099:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Num_Order)
3100:../../Source/Kernel/rme_kernel.c **** {
 5712              		.loc 1 3100 1
 5713              		.cfi_startproc
 5714              		@ args = 20, pretend = 0, frame = 40
 5715              		@ frame_needed = 1, uses_anonymous_args = 0
 5716 0000 00482DE9 		push	{fp, lr}
 5717              		.cfi_def_cfa_offset 8
 5718              		.cfi_offset 11, -8
 5719              		.cfi_offset 14, -4
 5720 0004 04B08DE2 		add	fp, sp, #4
 5721              		.cfi_def_cfa 11, 4
 5722 0008 30D04DE2 		sub	sp, sp, #48
 5723 000c 20000BE5 		str	r0, [fp, #-32]
 5724 0010 24100BE5 		str	r1, [fp, #-36]
 5725 0014 28200BE5 		str	r2, [fp, #-40]
 5726 0018 2C300BE5 		str	r3, [fp, #-44]
3101:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3102:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
3103:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
3104:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3105:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
3106:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3107:../../Source/Kernel/rme_kernel.c ****     
3108:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
3109:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
3110:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 5727              		.loc 1 3110 19
 5728 001c 10209BE5 		ldr	r2, [fp, #16]
 5729 0020 14309BE5 		ldr	r3, [fp, #20]
 5730 0024 033082E0 		add	r3, r2, r3
 5731              		.loc 1 3110 7
 5732 0028 200053E3 		cmp	r3, #32
 5733 002c 0100009A 		bls	.L377
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 157


3111:../../Source/Kernel/rme_kernel.c ****     {
3112:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3113:../../Source/Kernel/rme_kernel.c ****         
3114:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5734              		.loc 1 3114 16
 5735 0030 6630E0E3 		mvn	r3, #102
 5736 0034 5B0100EA 		b	.L378
 5737              	.L377:
3115:../../Source/Kernel/rme_kernel.c ****     }
3116:../../Source/Kernel/rme_kernel.c ****     else
3117:../../Source/Kernel/rme_kernel.c ****     {
3118:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3119:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3120:../../Source/Kernel/rme_kernel.c ****     }
3121:../../Source/Kernel/rme_kernel.c ****     
3122:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3123:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 5738              		.loc 1 3123 5
 5739 0038 24301BE5 		ldr	r3, [fp, #-36]
 5740 003c 803003E2 		and	r3, r3, #128
 5741 0040 000053E3 		cmp	r3, #0
 5742 0044 1D00001A 		bne	.L379
 5743              		.loc 1 3123 5 is_stmt 0 discriminator 1
 5744 0048 20301BE5 		ldr	r3, [fp, #-32]
 5745 004c 142093E5 		ldr	r2, [r3, #20]
 5746 0050 24301BE5 		ldr	r3, [fp, #-36]
 5747 0054 030052E1 		cmp	r2, r3
 5748 0058 0100008A 		bhi	.L380
 5749              		.loc 1 3123 5 discriminator 3
 5750 005c 0230E0E3 		mvn	r3, #2
 5751 0060 500100EA 		b	.L378
 5752              	.L380:
 5753              		.loc 1 3123 5 discriminator 4
 5754 0064 24301BE5 		ldr	r3, [fp, #-36]
 5755 0068 8322A0E1 		lsl	r2, r3, #5
 5756 006c 20301BE5 		ldr	r3, [fp, #-32]
 5757 0070 0C3093E5 		ldr	r3, [r3, #12]
 5758 0074 033082E0 		add	r3, r2, r3
 5759 0078 0C300BE5 		str	r3, [fp, #-12]
 5760 007c 0C301BE5 		ldr	r3, [fp, #-12]
 5761 0080 0300A0E1 		mov	r0, r3
 5762 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5763 0088 14000BE5 		str	r0, [fp, #-20]
 5764 008c 14301BE5 		ldr	r3, [fp, #-20]
 5765 0090 2338A0E1 		lsr	r3, r3, #16
 5766 0094 7330EFE6 		uxtb	r3, r3
 5767 0098 020053E3 		cmp	r3, #2
 5768 009c 0100001A 		bne	.L381
 5769              		.loc 1 3123 5 discriminator 5
 5770 00a0 0830E0E3 		mvn	r3, #8
 5771 00a4 3F0100EA 		b	.L378
 5772              	.L381:
 5773              		.loc 1 3123 5 discriminator 6
 5774 00a8 14301BE5 		ldr	r3, [fp, #-20]
 5775 00ac 233CA0E1 		lsr	r3, r3, #24
 5776 00b0 030053E3 		cmp	r3, #3
 5777 00b4 4100000A 		beq	.L382
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 158


 5778              		.loc 1 3123 5 discriminator 7
 5779 00b8 0130E0E3 		mvn	r3, #1
 5780 00bc 390100EA 		b	.L378
 5781              	.L379:
 5782              		.loc 1 3123 5 discriminator 2
 5783 00c0 24301BE5 		ldr	r3, [fp, #-36]
 5784 00c4 2324A0E1 		lsr	r2, r3, #8
 5785 00c8 20301BE5 		ldr	r3, [fp, #-32]
 5786 00cc 143093E5 		ldr	r3, [r3, #20]
 5787 00d0 030052E1 		cmp	r2, r3
 5788 00d4 0100003A 		bcc	.L383
 5789              		.loc 1 3123 5 discriminator 8
 5790 00d8 0230E0E3 		mvn	r3, #2
 5791 00dc 310100EA 		b	.L378
 5792              	.L383:
 5793              		.loc 1 3123 5 discriminator 9
 5794 00e0 24301BE5 		ldr	r3, [fp, #-36]
 5795 00e4 2334A0E1 		lsr	r3, r3, #8
 5796 00e8 8322A0E1 		lsl	r2, r3, #5
 5797 00ec 20301BE5 		ldr	r3, [fp, #-32]
 5798 00f0 0C3093E5 		ldr	r3, [r3, #12]
 5799 00f4 033082E0 		add	r3, r2, r3
 5800 00f8 0C300BE5 		str	r3, [fp, #-12]
 5801 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 5802 0100 0300A0E1 		mov	r0, r3
 5803 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5804 0108 14000BE5 		str	r0, [fp, #-20]
 5805 010c 14301BE5 		ldr	r3, [fp, #-20]
 5806 0110 2338A0E1 		lsr	r3, r3, #16
 5807 0114 7330EFE6 		uxtb	r3, r3
 5808 0118 020053E3 		cmp	r3, #2
 5809 011c 0100001A 		bne	.L384
 5810              		.loc 1 3123 5 discriminator 10
 5811 0120 0830E0E3 		mvn	r3, #8
 5812 0124 1F0100EA 		b	.L378
 5813              	.L384:
 5814              		.loc 1 3123 5 discriminator 11
 5815 0128 14301BE5 		ldr	r3, [fp, #-20]
 5816 012c 233CA0E1 		lsr	r3, r3, #24
 5817 0130 030053E3 		cmp	r3, #3
 5818 0134 0100000A 		beq	.L385
 5819              		.loc 1 3123 5 discriminator 12
 5820 0138 0130E0E3 		mvn	r3, #1
 5821 013c 190100EA 		b	.L378
 5822              	.L385:
 5823              		.loc 1 3123 5 discriminator 13
 5824 0140 24301BE5 		ldr	r3, [fp, #-36]
 5825 0144 7F2003E2 		and	r2, r3, #127
 5826 0148 0C301BE5 		ldr	r3, [fp, #-12]
 5827 014c 143093E5 		ldr	r3, [r3, #20]
 5828 0150 030052E1 		cmp	r2, r3
 5829 0154 0100003A 		bcc	.L386
 5830              		.loc 1 3123 5 discriminator 14
 5831 0158 0230E0E3 		mvn	r3, #2
 5832 015c 110100EA 		b	.L378
 5833              	.L386:
 5834              		.loc 1 3123 5 discriminator 15
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 159


 5835 0160 24301BE5 		ldr	r3, [fp, #-36]
 5836 0164 7F3003E2 		and	r3, r3, #127
 5837 0168 8322A0E1 		lsl	r2, r3, #5
 5838 016c 0C301BE5 		ldr	r3, [fp, #-12]
 5839 0170 0C3093E5 		ldr	r3, [r3, #12]
 5840 0174 033082E0 		add	r3, r2, r3
 5841 0178 0C300BE5 		str	r3, [fp, #-12]
 5842 017c 0C301BE5 		ldr	r3, [fp, #-12]
 5843 0180 0300A0E1 		mov	r0, r3
 5844 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5845 0188 14000BE5 		str	r0, [fp, #-20]
 5846 018c 14301BE5 		ldr	r3, [fp, #-20]
 5847 0190 2338A0E1 		lsr	r3, r3, #16
 5848 0194 7330EFE6 		uxtb	r3, r3
 5849 0198 020053E3 		cmp	r3, #2
 5850 019c 0100001A 		bne	.L387
 5851              		.loc 1 3123 5 discriminator 16
 5852 01a0 0830E0E3 		mvn	r3, #8
 5853 01a4 FF0000EA 		b	.L378
 5854              	.L387:
 5855              		.loc 1 3123 5 discriminator 17
 5856 01a8 14301BE5 		ldr	r3, [fp, #-20]
 5857 01ac 233CA0E1 		lsr	r3, r3, #24
 5858 01b0 030053E3 		cmp	r3, #3
 5859 01b4 0100000A 		beq	.L382
 5860              		.loc 1 3123 5 discriminator 18
 5861 01b8 0130E0E3 		mvn	r3, #1
 5862 01bc F90000EA 		b	.L378
 5863              	.L382:
3124:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3125:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 5864              		.loc 1 3125 5 is_stmt 1
 5865 01c0 28301BE5 		ldr	r3, [fp, #-40]
 5866 01c4 803003E2 		and	r3, r3, #128
 5867 01c8 000053E3 		cmp	r3, #0
 5868 01cc 1D00001A 		bne	.L388
 5869              		.loc 1 3125 5 is_stmt 0 discriminator 1
 5870 01d0 20301BE5 		ldr	r3, [fp, #-32]
 5871 01d4 142093E5 		ldr	r2, [r3, #20]
 5872 01d8 28301BE5 		ldr	r3, [fp, #-40]
 5873 01dc 030052E1 		cmp	r2, r3
 5874 01e0 0100008A 		bhi	.L389
 5875              		.loc 1 3125 5 discriminator 3
 5876 01e4 0230E0E3 		mvn	r3, #2
 5877 01e8 EE0000EA 		b	.L378
 5878              	.L389:
 5879              		.loc 1 3125 5 discriminator 4
 5880 01ec 28301BE5 		ldr	r3, [fp, #-40]
 5881 01f0 8322A0E1 		lsl	r2, r3, #5
 5882 01f4 20301BE5 		ldr	r3, [fp, #-32]
 5883 01f8 0C3093E5 		ldr	r3, [r3, #12]
 5884 01fc 033082E0 		add	r3, r2, r3
 5885 0200 08300BE5 		str	r3, [fp, #-8]
 5886 0204 08301BE5 		ldr	r3, [fp, #-8]
 5887 0208 0300A0E1 		mov	r0, r3
 5888 020c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5889 0210 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 160


 5890 0214 14301BE5 		ldr	r3, [fp, #-20]
 5891 0218 2338A0E1 		lsr	r3, r3, #16
 5892 021c 7330EFE6 		uxtb	r3, r3
 5893 0220 020053E3 		cmp	r3, #2
 5894 0224 0100001A 		bne	.L390
 5895              		.loc 1 3125 5 discriminator 5
 5896 0228 0830E0E3 		mvn	r3, #8
 5897 022c DD0000EA 		b	.L378
 5898              	.L390:
 5899              		.loc 1 3125 5 discriminator 6
 5900 0230 14301BE5 		ldr	r3, [fp, #-20]
 5901 0234 233CA0E1 		lsr	r3, r3, #24
 5902 0238 020053E3 		cmp	r3, #2
 5903 023c 4100000A 		beq	.L391
 5904              		.loc 1 3125 5 discriminator 7
 5905 0240 0130E0E3 		mvn	r3, #1
 5906 0244 D70000EA 		b	.L378
 5907              	.L388:
 5908              		.loc 1 3125 5 discriminator 2
 5909 0248 28301BE5 		ldr	r3, [fp, #-40]
 5910 024c 2324A0E1 		lsr	r2, r3, #8
 5911 0250 20301BE5 		ldr	r3, [fp, #-32]
 5912 0254 143093E5 		ldr	r3, [r3, #20]
 5913 0258 030052E1 		cmp	r2, r3
 5914 025c 0100003A 		bcc	.L392
 5915              		.loc 1 3125 5 discriminator 8
 5916 0260 0230E0E3 		mvn	r3, #2
 5917 0264 CF0000EA 		b	.L378
 5918              	.L392:
 5919              		.loc 1 3125 5 discriminator 9
 5920 0268 28301BE5 		ldr	r3, [fp, #-40]
 5921 026c 2334A0E1 		lsr	r3, r3, #8
 5922 0270 8322A0E1 		lsl	r2, r3, #5
 5923 0274 20301BE5 		ldr	r3, [fp, #-32]
 5924 0278 0C3093E5 		ldr	r3, [r3, #12]
 5925 027c 033082E0 		add	r3, r2, r3
 5926 0280 08300BE5 		str	r3, [fp, #-8]
 5927 0284 08301BE5 		ldr	r3, [fp, #-8]
 5928 0288 0300A0E1 		mov	r0, r3
 5929 028c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5930 0290 14000BE5 		str	r0, [fp, #-20]
 5931 0294 14301BE5 		ldr	r3, [fp, #-20]
 5932 0298 2338A0E1 		lsr	r3, r3, #16
 5933 029c 7330EFE6 		uxtb	r3, r3
 5934 02a0 020053E3 		cmp	r3, #2
 5935 02a4 0100001A 		bne	.L393
 5936              		.loc 1 3125 5 discriminator 10
 5937 02a8 0830E0E3 		mvn	r3, #8
 5938 02ac BD0000EA 		b	.L378
 5939              	.L393:
 5940              		.loc 1 3125 5 discriminator 11
 5941 02b0 14301BE5 		ldr	r3, [fp, #-20]
 5942 02b4 233CA0E1 		lsr	r3, r3, #24
 5943 02b8 030053E3 		cmp	r3, #3
 5944 02bc 0100000A 		beq	.L394
 5945              		.loc 1 3125 5 discriminator 12
 5946 02c0 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 161


 5947 02c4 B70000EA 		b	.L378
 5948              	.L394:
 5949              		.loc 1 3125 5 discriminator 13
 5950 02c8 28301BE5 		ldr	r3, [fp, #-40]
 5951 02cc 7F2003E2 		and	r2, r3, #127
 5952 02d0 08301BE5 		ldr	r3, [fp, #-8]
 5953 02d4 143093E5 		ldr	r3, [r3, #20]
 5954 02d8 030052E1 		cmp	r2, r3
 5955 02dc 0100003A 		bcc	.L395
 5956              		.loc 1 3125 5 discriminator 14
 5957 02e0 0230E0E3 		mvn	r3, #2
 5958 02e4 AF0000EA 		b	.L378
 5959              	.L395:
 5960              		.loc 1 3125 5 discriminator 15
 5961 02e8 28301BE5 		ldr	r3, [fp, #-40]
 5962 02ec 7F3003E2 		and	r3, r3, #127
 5963 02f0 8322A0E1 		lsl	r2, r3, #5
 5964 02f4 08301BE5 		ldr	r3, [fp, #-8]
 5965 02f8 0C3093E5 		ldr	r3, [r3, #12]
 5966 02fc 033082E0 		add	r3, r2, r3
 5967 0300 08300BE5 		str	r3, [fp, #-8]
 5968 0304 08301BE5 		ldr	r3, [fp, #-8]
 5969 0308 0300A0E1 		mov	r0, r3
 5970 030c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5971 0310 14000BE5 		str	r0, [fp, #-20]
 5972 0314 14301BE5 		ldr	r3, [fp, #-20]
 5973 0318 2338A0E1 		lsr	r3, r3, #16
 5974 031c 7330EFE6 		uxtb	r3, r3
 5975 0320 020053E3 		cmp	r3, #2
 5976 0324 0100001A 		bne	.L396
 5977              		.loc 1 3125 5 discriminator 16
 5978 0328 0830E0E3 		mvn	r3, #8
 5979 032c 9D0000EA 		b	.L378
 5980              	.L396:
 5981              		.loc 1 3125 5 discriminator 17
 5982 0330 14301BE5 		ldr	r3, [fp, #-20]
 5983 0334 233CA0E1 		lsr	r3, r3, #24
 5984 0338 020053E3 		cmp	r3, #2
 5985 033c 0100000A 		beq	.L391
 5986              		.loc 1 3125 5 discriminator 18
 5987 0340 0130E0E3 		mvn	r3, #1
 5988 0344 970000EA 		b	.L378
 5989              	.L391:
3126:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
3127:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3128:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op, RME_CPT_FLAG_CRT);
 5990              		.loc 1 3128 5 is_stmt 1
 5991 0348 0C301BE5 		ldr	r3, [fp, #-12]
 5992 034c 083093E5 		ldr	r3, [r3, #8]
 5993 0350 013003E2 		and	r3, r3, #1
 5994 0354 000053E3 		cmp	r3, #0
 5995 0358 0100001A 		bne	.L397
 5996              		.loc 1 3128 5 is_stmt 0 discriminator 1
 5997 035c 0630E0E3 		mvn	r3, #6
 5998 0360 900000EA 		b	.L378
 5999              	.L397:
3129:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 162


3130:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top-level? */
3131:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 6000              		.loc 1 3131 7 is_stmt 1
 6001 0364 0C309BE5 		ldr	r3, [fp, #12]
 6002 0368 000053E3 		cmp	r3, #0
 6003 036c 0400000A 		beq	.L398
3132:../../Source/Kernel/rme_kernel.c ****     {
3133:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3134:../../Source/Kernel/rme_kernel.c **** 
3135:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 6004              		.loc 1 3135 20
 6005 0370 0120A0E3 		mov	r2, #1
 6006 0374 14309BE5 		ldr	r3, [fp, #20]
 6007 0378 1233A0E1 		lsl	r3, r2, r3
 6008              		.loc 1 3135 19
 6009 037c 10300BE5 		str	r3, [fp, #-16]
 6010 0380 030000EA 		b	.L399
 6011              	.L398:
3136:../../Source/Kernel/rme_kernel.c ****     }
3137:../../Source/Kernel/rme_kernel.c ****     else
3138:../../Source/Kernel/rme_kernel.c ****     {
3139:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3140:../../Source/Kernel/rme_kernel.c **** 
3141:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 6012              		.loc 1 3141 20
 6013 0384 0120A0E3 		mov	r2, #1
 6014 0388 14309BE5 		ldr	r3, [fp, #20]
 6015 038c 1233A0E1 		lsl	r3, r2, r3
 6016              		.loc 1 3141 19
 6017 0390 10300BE5 		str	r3, [fp, #-16]
 6018              	.L399:
3142:../../Source/Kernel/rme_kernel.c ****     }
3143:../../Source/Kernel/rme_kernel.c ****     
3144:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
3145:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_PGT,Raddr,Vaddr,Table_Size);
 6019              		.loc 1 3145 5
 6020 0394 08301BE5 		ldr	r3, [fp, #-8]
 6021 0398 083093E5 		ldr	r3, [r3, #8]
 6022 039c 023003E2 		and	r3, r3, #2
 6023 03a0 000053E3 		cmp	r3, #0
 6024 03a4 0100001A 		bne	.L400
 6025              		.loc 1 3145 5 is_stmt 0 discriminator 1
 6026 03a8 0630E0E3 		mvn	r3, #6
 6027 03ac 7D0000EA 		b	.L378
 6028              	.L400:
 6029              		.loc 1 3145 5 discriminator 2
 6030 03b0 08301BE5 		ldr	r3, [fp, #-8]
 6031 03b4 143093E5 		ldr	r3, [r3, #20]
 6032 03b8 04209BE5 		ldr	r2, [fp, #4]
 6033 03bc 033082E0 		add	r3, r2, r3
 6034 03c0 18300BE5 		str	r3, [fp, #-24]
 6035 03c4 18201BE5 		ldr	r2, [fp, #-24]
 6036 03c8 04309BE5 		ldr	r3, [fp, #4]
 6037 03cc 030052E1 		cmp	r2, r3
 6038 03d0 0100002A 		bcs	.L401
 6039              		.loc 1 3145 5 discriminator 3
 6040 03d4 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 163


 6041 03d8 720000EA 		b	.L378
 6042              	.L401:
 6043              		.loc 1 3145 5 discriminator 4
 6044 03dc 08301BE5 		ldr	r3, [fp, #-8]
 6045 03e0 143093E5 		ldr	r3, [r3, #20]
 6046 03e4 18201BE5 		ldr	r2, [fp, #-24]
 6047 03e8 030052E1 		cmp	r2, r3
 6048 03ec 0100002A 		bcs	.L402
 6049              		.loc 1 3145 5 discriminator 5
 6050 03f0 0630E0E3 		mvn	r3, #6
 6051 03f4 6B0000EA 		b	.L378
 6052              	.L402:
 6053              		.loc 1 3145 5 discriminator 6
 6054 03f8 18201BE5 		ldr	r2, [fp, #-24]
 6055 03fc 10301BE5 		ldr	r3, [fp, #-16]
 6056 0400 033082E0 		add	r3, r2, r3
 6057 0404 18201BE5 		ldr	r2, [fp, #-24]
 6058 0408 030052E1 		cmp	r2, r3
 6059 040c 0100009A 		bls	.L403
 6060              		.loc 1 3145 5 discriminator 7
 6061 0410 0630E0E3 		mvn	r3, #6
 6062 0414 630000EA 		b	.L378
 6063              	.L403:
 6064              		.loc 1 3145 5 discriminator 8
 6065 0418 08301BE5 		ldr	r3, [fp, #-8]
 6066 041c 182093E5 		ldr	r2, [r3, #24]
 6067 0420 18101BE5 		ldr	r1, [fp, #-24]
 6068 0424 10301BE5 		ldr	r3, [fp, #-16]
 6069 0428 033081E0 		add	r3, r1, r3
 6070 042c 013043E2 		sub	r3, r3, #1
 6071 0430 030052E1 		cmp	r2, r3
 6072 0434 0100002A 		bcs	.L404
 6073              		.loc 1 3145 5 discriminator 9
 6074 0438 0630E0E3 		mvn	r3, #6
 6075 043c 590000EA 		b	.L378
 6076              	.L404:
3146:../../Source/Kernel/rme_kernel.c **** 
3147:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
3148:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)<0)
 6077              		.loc 1 3148 8 is_stmt 1
 6078 0440 18301BE5 		ldr	r3, [fp, #-24]
 6079 0444 00308DE5 		str	r3, [sp]
 6080 0448 14309BE5 		ldr	r3, [fp, #20]
 6081 044c 10209BE5 		ldr	r2, [fp, #16]
 6082 0450 0C109BE5 		ldr	r1, [fp, #12]
 6083 0454 08009BE5 		ldr	r0, [fp, #8]
 6084 0458 FEFFFFEB 		bl	__RME_Pgt_Check
3149:../../Source/Kernel/rme_kernel.c ****     {
3150:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3151:../../Source/Kernel/rme_kernel.c **** 
3152:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3153:../../Source/Kernel/rme_kernel.c ****     }
3154:../../Source/Kernel/rme_kernel.c ****     else
3155:../../Source/Kernel/rme_kernel.c ****     {
3156:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3157:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3158:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 164


3159:../../Source/Kernel/rme_kernel.c **** 
3160:../../Source/Kernel/rme_kernel.c ****     /* Check if the start address is properly aligned to the total order of the page table */
3161:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 6085              		.loc 1 3161 14
 6086 045c 10209BE5 		ldr	r2, [fp, #16]
 6087 0460 14309BE5 		ldr	r3, [fp, #20]
 6088 0464 033082E0 		add	r3, r2, r3
 6089 0468 203063E2 		rsb	r3, r3, #32
 6090 046c 0020E0E3 		mvn	r2, #0
 6091 0470 3223A0E1 		lsr	r2, r2, r3
 6092              		.loc 1 3161 13
 6093 0474 08309BE5 		ldr	r3, [fp, #8]
 6094 0478 023003E0 		and	r3, r3, r2
 6095              		.loc 1 3161 7
 6096 047c 000053E3 		cmp	r3, #0
 6097 0480 0100000A 		beq	.L405
3162:../../Source/Kernel/rme_kernel.c ****     {
3163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3164:../../Source/Kernel/rme_kernel.c **** 
3165:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 6098              		.loc 1 3165 16
 6099 0484 6630E0E3 		mvn	r3, #102
 6100 0488 460000EA 		b	.L378
 6101              	.L405:
3166:../../Source/Kernel/rme_kernel.c ****     }
3167:../../Source/Kernel/rme_kernel.c ****     else
3168:../../Source/Kernel/rme_kernel.c ****     {
3169:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3170:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3171:../../Source/Kernel/rme_kernel.c ****     }
3172:../../Source/Kernel/rme_kernel.c **** 
3173:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3174:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 6102              		.loc 1 3174 5
 6103 048c 0C301BE5 		ldr	r3, [fp, #-12]
 6104 0490 142093E5 		ldr	r2, [r3, #20]
 6105 0494 2C301BE5 		ldr	r3, [fp, #-44]
 6106 0498 030052E1 		cmp	r2, r3
 6107 049c 0100008A 		bhi	.L406
 6108              		.loc 1 3174 5 is_stmt 0 discriminator 1
 6109 04a0 0230E0E3 		mvn	r3, #2
 6110 04a4 3F0000EA 		b	.L378
 6111              	.L406:
 6112              		.loc 1 3174 5 discriminator 2
 6113 04a8 2C301BE5 		ldr	r3, [fp, #-44]
 6114 04ac 8322A0E1 		lsl	r2, r3, #5
 6115 04b0 0C301BE5 		ldr	r3, [fp, #-12]
 6116 04b4 0C3093E5 		ldr	r3, [r3, #12]
 6117 04b8 033082E0 		add	r3, r2, r3
 6118 04bc 1C300BE5 		str	r3, [fp, #-28]
3175:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
3176:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 6119              		.loc 1 3176 5 is_stmt 1 discriminator 2
 6120 04c0 1C301BE5 		ldr	r3, [fp, #-28]
 6121 04c4 0128A0E3 		mov	r2, #65536
 6122 04c8 0010A0E3 		mov	r1, #0
 6123 04cc 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 165


 6124 04d0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6125 04d4 0030A0E1 		mov	r3, r0
 6126 04d8 000053E3 		cmp	r3, #0
 6127 04dc 0100001A 		bne	.L407
 6128              		.loc 1 3176 5 is_stmt 0 discriminator 1
 6129 04e0 0430E0E3 		mvn	r3, #4
 6130 04e4 2F0000EA 		b	.L378
 6131              	.L407:
 6132              		.loc 1 3176 5 discriminator 2
 6133 04e8 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6134 04ec 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6135 04f0 002093E5 		ldr	r2, [r3]
 6136 04f4 1C301BE5 		ldr	r3, [fp, #-28]
 6137 04f8 102083E5 		str	r2, [r3, #16]
3177:../../Source/Kernel/rme_kernel.c **** 
3178:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
3179:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Table_Size)!=0)
 6138              		.loc 1 3179 8 is_stmt 1 discriminator 2
 6139 04fc 10101BE5 		ldr	r1, [fp, #-16]
 6140 0500 18001BE5 		ldr	r0, [fp, #-24]
 6141 0504 FEFFFFEB 		bl	_RME_Kot_Mark
 6142 0508 0030A0E1 		mov	r3, r0
 6143              		.loc 1 3179 7 discriminator 2
 6144 050c 000053E3 		cmp	r3, #0
 6145 0510 0500000A 		beq	.L408
3180:../../Source/Kernel/rme_kernel.c ****     {
3181:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3182:../../Source/Kernel/rme_kernel.c **** 
3183:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 6146              		.loc 1 3183 9
 6147 0514 1C301BE5 		ldr	r3, [fp, #-28]
 6148 0518 0010A0E3 		mov	r1, #0
 6149 051c 0300A0E1 		mov	r0, r3
 6150 0520 FEFFFFEB 		bl	__RME_A7A_Write_Release
3184:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 6151              		.loc 1 3184 16
 6152 0524 0330E0E3 		mvn	r3, #3
 6153 0528 1E0000EA 		b	.L378
 6154              	.L408:
3185:../../Source/Kernel/rme_kernel.c ****     }
3186:../../Source/Kernel/rme_kernel.c ****     else
3187:../../Source/Kernel/rme_kernel.c ****     {
3188:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3189:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3190:../../Source/Kernel/rme_kernel.c ****     }
3191:../../Source/Kernel/rme_kernel.c ****     
3192:../../Source/Kernel/rme_kernel.c ****     /* Header init */
3193:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 6155              		.loc 1 3193 27
 6156 052c 1C301BE5 		ldr	r3, [fp, #-28]
 6157 0530 0020A0E3 		mov	r2, #0
 6158 0534 042083E5 		str	r2, [r3, #4]
3194:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 6159              		.loc 1 3194 25
 6160 0538 1C301BE5 		ldr	r3, [fp, #-28]
 6161 053c 18201BE5 		ldr	r2, [fp, #-24]
 6162 0540 0C2083E5 		str	r2, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 166


3195:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ALL;
 6163              		.loc 1 3195 23
 6164 0544 1C201BE5 		ldr	r2, [fp, #-28]
 6165 0548 FF30A0E3 		mov	r3, #255
 6166 054c F03F4FE3 		movt	r3, 65520
 6167 0550 083082E5 		str	r3, [r2, #8]
3196:../../Source/Kernel/rme_kernel.c ****     
3197:../../Source/Kernel/rme_kernel.c ****     /* Info init */
3198:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 6168              		.loc 1 3198 23
 6169 0554 08209BE5 		ldr	r2, [fp, #8]
 6170 0558 0C309BE5 		ldr	r3, [fp, #12]
 6171 055c 032082E1 		orr	r2, r2, r3
 6172              		.loc 1 3198 18
 6173 0560 1C301BE5 		ldr	r3, [fp, #-28]
 6174 0564 182083E5 		str	r2, [r3, #24]
3199:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 6175              		.loc 1 3199 20
 6176 0568 10309BE5 		ldr	r3, [fp, #16]
 6177 056c 0328A0E1 		lsl	r2, r3, #16
 6178 0570 14309BE5 		ldr	r3, [fp, #20]
 6179 0574 032082E1 		orr	r2, r2, r3
 6180              		.loc 1 3199 19
 6181 0578 1C301BE5 		ldr	r3, [fp, #-28]
 6182 057c 142083E5 		str	r2, [r3, #20]
3200:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 6183              		.loc 1 3200 18
 6184 0580 1C301BE5 		ldr	r3, [fp, #-28]
 6185 0584 0020A0E3 		mov	r2, #0
 6186 0588 1C2083E5 		str	r2, [r3, #28]
3201:../../Source/Kernel/rme_kernel.c ****     
3202:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
3203:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 6187              		.loc 1 3203 8
 6188 058c 1C001BE5 		ldr	r0, [fp, #-28]
 6189 0590 FEFFFFEB 		bl	__RME_Pgt_Init
3204:../../Source/Kernel/rme_kernel.c ****     {
3205:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3206:../../Source/Kernel/rme_kernel.c **** 
3207:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
3208:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr,Table_Size)==0);
3209:../../Source/Kernel/rme_kernel.c ****         
3210:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
3211:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
3212:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3213:../../Source/Kernel/rme_kernel.c ****     }
3214:../../Source/Kernel/rme_kernel.c ****     else
3215:../../Source/Kernel/rme_kernel.c ****     {
3216:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3217:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3218:../../Source/Kernel/rme_kernel.c ****     }
3219:../../Source/Kernel/rme_kernel.c **** 
3220:../../Source/Kernel/rme_kernel.c ****     /* Creation complete */
3221:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 6190              		.loc 1 3221 5
 6191 0594 1C301BE5 		ldr	r3, [fp, #-28]
 6192 0598 0113A0E3 		mov	r1, #67108864
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 167


 6193 059c 0300A0E1 		mov	r0, r3
 6194 05a0 FEFFFFEB 		bl	__RME_A7A_Write_Release
3222:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
3223:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
3224:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
3225:../../Source/Kernel/rme_kernel.c **** 
3226:../../Source/Kernel/rme_kernel.c ****     return 0;
 6195              		.loc 1 3226 12
 6196 05a4 0030A0E3 		mov	r3, #0
 6197              	.L378:
3227:../../Source/Kernel/rme_kernel.c **** }
 6198              		.loc 1 3227 1
 6199 05a8 0300A0E1 		mov	r0, r3
 6200 05ac 04D04BE2 		sub	sp, fp, #4
 6201              		.cfi_def_cfa 13, 8
 6202              		@ sp needed
 6203 05b0 0088BDE8 		pop	{fp, pc}
 6204              		.cfi_endproc
 6205              	.LFE32:
 6207              		.section	.text._RME_Pgt_Del,"ax",%progbits
 6208              		.align	2
 6209              		.syntax unified
 6210              		.arm
 6212              	_RME_Pgt_Del:
 6213              	.LFB33:
3228:../../Source/Kernel/rme_kernel.c **** #endif
3229:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Crt *************************************************/
3230:../../Source/Kernel/rme_kernel.c **** 
3231:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Del ******************************************************
3232:../../Source/Kernel/rme_kernel.c **** Description : Delete a page table.
3233:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3234:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
3235:../../Source/Kernel/rme_kernel.c ****                                   the cap to new captbl.
3236:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3237:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3238:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3239:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3240:../../Source/Kernel/rme_kernel.c **** Output      : None.
3241:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3242:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3243:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3244:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Del(struct RME_Cap_Cpt* Cpt,
3245:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3246:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
3247:../../Source/Kernel/rme_kernel.c **** {
 6214              		.loc 1 3247 1
 6215              		.cfi_startproc
 6216              		@ args = 0, pretend = 0, frame = 40
 6217              		@ frame_needed = 1, uses_anonymous_args = 0
 6218 0000 00482DE9 		push	{fp, lr}
 6219              		.cfi_def_cfa_offset 8
 6220              		.cfi_offset 11, -8
 6221              		.cfi_offset 14, -4
 6222 0004 04B08DE2 		add	fp, sp, #4
 6223              		.cfi_def_cfa 11, 4
 6224 0008 28D04DE2 		sub	sp, sp, #40
 6225 000c 20000BE5 		str	r0, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 168


 6226 0010 24100BE5 		str	r1, [fp, #-36]
 6227 0014 28200BE5 		str	r2, [fp, #-40]
3248:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3249:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Del;
3250:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3251:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
3252:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
3253:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3254:../../Source/Kernel/rme_kernel.c ****     
3255:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3256:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 6228              		.loc 1 3256 5
 6229 0018 24301BE5 		ldr	r3, [fp, #-36]
 6230 001c 803003E2 		and	r3, r3, #128
 6231 0020 000053E3 		cmp	r3, #0
 6232 0024 1D00001A 		bne	.L410
 6233              		.loc 1 3256 5 is_stmt 0 discriminator 1
 6234 0028 20301BE5 		ldr	r3, [fp, #-32]
 6235 002c 142093E5 		ldr	r2, [r3, #20]
 6236 0030 24301BE5 		ldr	r3, [fp, #-36]
 6237 0034 030052E1 		cmp	r2, r3
 6238 0038 0100008A 		bhi	.L411
 6239              		.loc 1 3256 5 discriminator 3
 6240 003c 0230E0E3 		mvn	r3, #2
 6241 0040 C90000EA 		b	.L412
 6242              	.L411:
 6243              		.loc 1 3256 5 discriminator 4
 6244 0044 24301BE5 		ldr	r3, [fp, #-36]
 6245 0048 8322A0E1 		lsl	r2, r3, #5
 6246 004c 20301BE5 		ldr	r3, [fp, #-32]
 6247 0050 0C3093E5 		ldr	r3, [r3, #12]
 6248 0054 033082E0 		add	r3, r2, r3
 6249 0058 08300BE5 		str	r3, [fp, #-8]
 6250 005c 08301BE5 		ldr	r3, [fp, #-8]
 6251 0060 0300A0E1 		mov	r0, r3
 6252 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6253 0068 10000BE5 		str	r0, [fp, #-16]
 6254 006c 10301BE5 		ldr	r3, [fp, #-16]
 6255 0070 2338A0E1 		lsr	r3, r3, #16
 6256 0074 7330EFE6 		uxtb	r3, r3
 6257 0078 020053E3 		cmp	r3, #2
 6258 007c 0100001A 		bne	.L413
 6259              		.loc 1 3256 5 discriminator 5
 6260 0080 0830E0E3 		mvn	r3, #8
 6261 0084 B80000EA 		b	.L412
 6262              	.L413:
 6263              		.loc 1 3256 5 discriminator 6
 6264 0088 10301BE5 		ldr	r3, [fp, #-16]
 6265 008c 233CA0E1 		lsr	r3, r3, #24
 6266 0090 030053E3 		cmp	r3, #3
 6267 0094 4100000A 		beq	.L414
 6268              		.loc 1 3256 5 discriminator 7
 6269 0098 0130E0E3 		mvn	r3, #1
 6270 009c B20000EA 		b	.L412
 6271              	.L410:
 6272              		.loc 1 3256 5 discriminator 2
 6273 00a0 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 169


 6274 00a4 2324A0E1 		lsr	r2, r3, #8
 6275 00a8 20301BE5 		ldr	r3, [fp, #-32]
 6276 00ac 143093E5 		ldr	r3, [r3, #20]
 6277 00b0 030052E1 		cmp	r2, r3
 6278 00b4 0100003A 		bcc	.L415
 6279              		.loc 1 3256 5 discriminator 8
 6280 00b8 0230E0E3 		mvn	r3, #2
 6281 00bc AA0000EA 		b	.L412
 6282              	.L415:
 6283              		.loc 1 3256 5 discriminator 9
 6284 00c0 24301BE5 		ldr	r3, [fp, #-36]
 6285 00c4 2334A0E1 		lsr	r3, r3, #8
 6286 00c8 8322A0E1 		lsl	r2, r3, #5
 6287 00cc 20301BE5 		ldr	r3, [fp, #-32]
 6288 00d0 0C3093E5 		ldr	r3, [r3, #12]
 6289 00d4 033082E0 		add	r3, r2, r3
 6290 00d8 08300BE5 		str	r3, [fp, #-8]
 6291 00dc 08301BE5 		ldr	r3, [fp, #-8]
 6292 00e0 0300A0E1 		mov	r0, r3
 6293 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6294 00e8 10000BE5 		str	r0, [fp, #-16]
 6295 00ec 10301BE5 		ldr	r3, [fp, #-16]
 6296 00f0 2338A0E1 		lsr	r3, r3, #16
 6297 00f4 7330EFE6 		uxtb	r3, r3
 6298 00f8 020053E3 		cmp	r3, #2
 6299 00fc 0100001A 		bne	.L416
 6300              		.loc 1 3256 5 discriminator 10
 6301 0100 0830E0E3 		mvn	r3, #8
 6302 0104 980000EA 		b	.L412
 6303              	.L416:
 6304              		.loc 1 3256 5 discriminator 11
 6305 0108 10301BE5 		ldr	r3, [fp, #-16]
 6306 010c 233CA0E1 		lsr	r3, r3, #24
 6307 0110 030053E3 		cmp	r3, #3
 6308 0114 0100000A 		beq	.L417
 6309              		.loc 1 3256 5 discriminator 12
 6310 0118 0130E0E3 		mvn	r3, #1
 6311 011c 920000EA 		b	.L412
 6312              	.L417:
 6313              		.loc 1 3256 5 discriminator 13
 6314 0120 24301BE5 		ldr	r3, [fp, #-36]
 6315 0124 7F2003E2 		and	r2, r3, #127
 6316 0128 08301BE5 		ldr	r3, [fp, #-8]
 6317 012c 143093E5 		ldr	r3, [r3, #20]
 6318 0130 030052E1 		cmp	r2, r3
 6319 0134 0100003A 		bcc	.L418
 6320              		.loc 1 3256 5 discriminator 14
 6321 0138 0230E0E3 		mvn	r3, #2
 6322 013c 8A0000EA 		b	.L412
 6323              	.L418:
 6324              		.loc 1 3256 5 discriminator 15
 6325 0140 24301BE5 		ldr	r3, [fp, #-36]
 6326 0144 7F3003E2 		and	r3, r3, #127
 6327 0148 8322A0E1 		lsl	r2, r3, #5
 6328 014c 08301BE5 		ldr	r3, [fp, #-8]
 6329 0150 0C3093E5 		ldr	r3, [r3, #12]
 6330 0154 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 170


 6331 0158 08300BE5 		str	r3, [fp, #-8]
 6332 015c 08301BE5 		ldr	r3, [fp, #-8]
 6333 0160 0300A0E1 		mov	r0, r3
 6334 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6335 0168 10000BE5 		str	r0, [fp, #-16]
 6336 016c 10301BE5 		ldr	r3, [fp, #-16]
 6337 0170 2338A0E1 		lsr	r3, r3, #16
 6338 0174 7330EFE6 		uxtb	r3, r3
 6339 0178 020053E3 		cmp	r3, #2
 6340 017c 0100001A 		bne	.L419
 6341              		.loc 1 3256 5 discriminator 16
 6342 0180 0830E0E3 		mvn	r3, #8
 6343 0184 780000EA 		b	.L412
 6344              	.L419:
 6345              		.loc 1 3256 5 discriminator 17
 6346 0188 10301BE5 		ldr	r3, [fp, #-16]
 6347 018c 233CA0E1 		lsr	r3, r3, #24
 6348 0190 030053E3 		cmp	r3, #3
 6349 0194 0100000A 		beq	.L414
 6350              		.loc 1 3256 5 discriminator 18
 6351 0198 0130E0E3 		mvn	r3, #1
 6352 019c 720000EA 		b	.L412
 6353              	.L414:
3257:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3258:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3259:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 6354              		.loc 1 3259 5 is_stmt 1
 6355 01a0 08301BE5 		ldr	r3, [fp, #-8]
 6356 01a4 083093E5 		ldr	r3, [r3, #8]
 6357 01a8 023003E2 		and	r3, r3, #2
 6358 01ac 000053E3 		cmp	r3, #0
 6359 01b0 0100001A 		bne	.L420
 6360              		.loc 1 3259 5 is_stmt 0 discriminator 1
 6361 01b4 0630E0E3 		mvn	r3, #6
 6362 01b8 6B0000EA 		b	.L412
 6363              	.L420:
3260:../../Source/Kernel/rme_kernel.c ****     
3261:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3262:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Del);
 6364              		.loc 1 3262 5 is_stmt 1
 6365 01bc 08301BE5 		ldr	r3, [fp, #-8]
 6366 01c0 142093E5 		ldr	r2, [r3, #20]
 6367 01c4 28301BE5 		ldr	r3, [fp, #-40]
 6368 01c8 030052E1 		cmp	r2, r3
 6369 01cc 0100008A 		bhi	.L421
 6370              		.loc 1 3262 5 is_stmt 0 discriminator 1
 6371 01d0 0230E0E3 		mvn	r3, #2
 6372 01d4 640000EA 		b	.L412
 6373              	.L421:
 6374              		.loc 1 3262 5 discriminator 2
 6375 01d8 28301BE5 		ldr	r3, [fp, #-40]
 6376 01dc 8322A0E1 		lsl	r2, r3, #5
 6377 01e0 08301BE5 		ldr	r3, [fp, #-8]
 6378 01e4 0C3093E5 		ldr	r3, [r3, #12]
 6379 01e8 033082E0 		add	r3, r2, r3
 6380 01ec 14300BE5 		str	r3, [fp, #-20]
3263:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 171


3264:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Pgt_Del,Type_Stat,RME_CAP_TYPE_PGT);
 6381              		.loc 1 3264 5 is_stmt 1 discriminator 2
 6382 01f0 14301BE5 		ldr	r3, [fp, #-20]
 6383 01f4 0300A0E1 		mov	r0, r3
 6384 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6385 01fc 10000BE5 		str	r0, [fp, #-16]
 6386 0200 10301BE5 		ldr	r3, [fp, #-16]
 6387 0204 2338A0E1 		lsr	r3, r3, #16
 6388 0208 7330EFE6 		uxtb	r3, r3
 6389 020c 020053E3 		cmp	r3, #2
 6390 0210 0100000A 		beq	.L422
 6391              		.loc 1 3264 5 is_stmt 0 discriminator 1
 6392 0214 0830E0E3 		mvn	r3, #8
 6393 0218 530000EA 		b	.L412
 6394              	.L422:
 6395              		.loc 1 3264 5 discriminator 2
 6396 021c 10301BE5 		ldr	r3, [fp, #-16]
 6397 0220 233CA0E1 		lsr	r3, r3, #24
 6398 0224 040053E3 		cmp	r3, #4
 6399 0228 0100000A 		beq	.L423
 6400              		.loc 1 3264 5 discriminator 3
 6401 022c 0130E0E3 		mvn	r3, #1
 6402 0230 4D0000EA 		b	.L412
 6403              	.L423:
 6404              		.loc 1 3264 5 discriminator 6
 6405 0234 14301BE5 		ldr	r3, [fp, #-20]
 6406 0238 043093E5 		ldr	r3, [r3, #4]
 6407 023c 000053E3 		cmp	r3, #0
 6408 0240 0B00000A 		beq	.L424
 6409              		.loc 1 3264 5 discriminator 7
 6410 0244 10301BE5 		ldr	r3, [fp, #-16]
 6411 0248 7330FFE6 		uxth	r3, r3
 6412 024c 000053E3 		cmp	r3, #0
 6413 0250 0500001A 		bne	.L425
 6414              		.loc 1 3264 5 discriminator 9
 6415 0254 14001BE5 		ldr	r0, [fp, #-20]
 6416 0258 10301BE5 		ldr	r3, [fp, #-16]
 6417 025c FF38C3E3 		bic	r3, r3, #16711680
 6418 0260 0320A0E1 		mov	r2, r3
 6419 0264 10101BE5 		ldr	r1, [fp, #-16]
 6420 0268 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6421              	.L425:
 6422              		.loc 1 3264 5 discriminator 11
 6423 026c 0530E0E3 		mvn	r3, #5
 6424 0270 3D0000EA 		b	.L412
 6425              	.L424:
 6426              		.loc 1 3264 5 discriminator 8
 6427 0274 10301BE5 		ldr	r3, [fp, #-16]
 6428 0278 7330FFE6 		uxth	r3, r3
 6429 027c 000053E3 		cmp	r3, #0
 6430 0280 0800000A 		beq	.L426
 6431              		.loc 1 3264 5 discriminator 12
 6432 0284 003000E3 		movw	r3, #:lower16:.LC4
 6433 0288 003040E3 		movt	r3, #:upper16:.LC4
 6434 028c 002000E3 		movw	r2, #:lower16:.LC5
 6435 0290 002040E3 		movt	r2, #:upper16:.LC5
 6436 0294 331DA0E3 		mov	r1, #3264
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 172


 6437 0298 000000E3 		movw	r0, #:lower16:.LC6
 6438 029c 000040E3 		movt	r0, #:upper16:.LC6
 6439 02a0 FEFFFFEB 		bl	RME_Log
 6440              	.L427:
 6441              		.loc 1 3264 5 discriminator 1
 6442 02a4 FEFFFFEA 		b	.L427
 6443              	.L426:
3265:../../Source/Kernel/rme_kernel.c ****     
3266:../../Source/Kernel/rme_kernel.c ****     /* Hardware related deletion check passed down to the HAL. The driver should make
3267:../../Source/Kernel/rme_kernel.c ****      * sure that it does not reference any lower level tables. If the driver layer does
3268:../../Source/Kernel/rme_kernel.c ****      * not conform to this, the deletion of page table is not guaranteed to main kernel
3269:../../Source/Kernel/rme_kernel.c ****      * consistency, and such consistency must be maintained by the user-level. It is 
3270:../../Source/Kernel/rme_kernel.c ****      * recommended that the driver layer enforce such consistency. */
3271:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Del_Check(Pgt_Del)<0)
 6444              		.loc 1 3271 8 is_stmt 1
 6445 02a8 14001BE5 		ldr	r0, [fp, #-20]
 6446 02ac FEFFFFEB 		bl	__RME_Pgt_Del_Check
3272:../../Source/Kernel/rme_kernel.c ****     {
3273:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3274:../../Source/Kernel/rme_kernel.c **** 
3275:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Pgt_Del,Type_Stat);
3276:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3277:../../Source/Kernel/rme_kernel.c ****     }
3278:../../Source/Kernel/rme_kernel.c ****     else
3279:../../Source/Kernel/rme_kernel.c ****     {
3280:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3281:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3282:../../Source/Kernel/rme_kernel.c ****     }
3283:../../Source/Kernel/rme_kernel.c ****     
3284:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
3285:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Pgt_Del,rme_ptr_t);
 6447              		.loc 1 3285 11
 6448 02b0 14301BE5 		ldr	r3, [fp, #-20]
 6449 02b4 0C3093E5 		ldr	r3, [r3, #12]
 6450 02b8 18300BE5 		str	r3, [fp, #-24]
3286:../../Source/Kernel/rme_kernel.c ****     if(((Pgt_Del->Base)&RME_PGT_TOP)!=0U)
 6451              		.loc 1 3286 17
 6452 02bc 14301BE5 		ldr	r3, [fp, #-20]
 6453 02c0 183093E5 		ldr	r3, [r3, #24]
 6454              		.loc 1 3286 24
 6455 02c4 013003E2 		and	r3, r3, #1
 6456              		.loc 1 3286 7
 6457 02c8 000053E3 		cmp	r3, #0
 6458 02cc 0600000A 		beq	.L428
3287:../../Source/Kernel/rme_kernel.c ****     {
3288:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3289:../../Source/Kernel/rme_kernel.c **** 
3290:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(RME_PGT_NMORD(Pgt_Del->Order));
 6459              		.loc 1 3290 20
 6460 02d0 14301BE5 		ldr	r3, [fp, #-20]
 6461 02d4 143093E5 		ldr	r3, [r3, #20]
 6462 02d8 7330FFE6 		uxth	r3, r3
 6463 02dc 0120A0E3 		mov	r2, #1
 6464 02e0 1233A0E1 		lsl	r3, r2, r3
 6465              		.loc 1 3290 19
 6466 02e4 0C300BE5 		str	r3, [fp, #-12]
 6467 02e8 050000EA 		b	.L429
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 173


 6468              	.L428:
3291:../../Source/Kernel/rme_kernel.c ****     }
3292:../../Source/Kernel/rme_kernel.c ****     else
3293:../../Source/Kernel/rme_kernel.c ****     {
3294:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3295:../../Source/Kernel/rme_kernel.c **** 
3296:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(RME_PGT_NMORD(Pgt_Del->Order));
 6469              		.loc 1 3296 20
 6470 02ec 14301BE5 		ldr	r3, [fp, #-20]
 6471 02f0 143093E5 		ldr	r3, [r3, #20]
 6472 02f4 7330FFE6 		uxth	r3, r3
 6473 02f8 0120A0E3 		mov	r2, #1
 6474 02fc 1233A0E1 		lsl	r3, r2, r3
 6475              		.loc 1 3296 19
 6476 0300 0C300BE5 		str	r3, [fp, #-12]
 6477              	.L429:
3297:../../Source/Kernel/rme_kernel.c ****     }
3298:../../Source/Kernel/rme_kernel.c ****     
3299:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
3300:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Pgt_Del,Type_Stat);
 6478              		.loc 1 3300 5
 6479 0304 14301BE5 		ldr	r3, [fp, #-20]
 6480 0308 0020A0E3 		mov	r2, #0
 6481 030c 10101BE5 		ldr	r1, [fp, #-16]
 6482 0310 0300A0E1 		mov	r0, r3
 6483 0314 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6484 0318 0030A0E1 		mov	r3, r0
 6485 031c 000053E3 		cmp	r3, #0
 6486 0320 0100001A 		bne	.L430
 6487              		.loc 1 3300 5 is_stmt 0 discriminator 1
 6488 0324 0030E0E3 		mvn	r3, #0
 6489 0328 0F0000EA 		b	.L412
 6490              	.L430:
3301:../../Source/Kernel/rme_kernel.c **** 
3302:../../Source/Kernel/rme_kernel.c ****     /* Try to erase the area - This must be successful */
3303:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Table_Size)==0);
 6491              		.loc 1 3303 5 is_stmt 1
 6492 032c 0C101BE5 		ldr	r1, [fp, #-12]
 6493 0330 18001BE5 		ldr	r0, [fp, #-24]
 6494 0334 FEFFFFEB 		bl	_RME_Kot_Erase
 6495 0338 0030A0E1 		mov	r3, r0
 6496 033c 000053E3 		cmp	r3, #0
 6497 0340 0800000A 		beq	.L431
 6498              		.loc 1 3303 5 is_stmt 0 discriminator 1
 6499 0344 003000E3 		movw	r3, #:lower16:.LC4
 6500 0348 003040E3 		movt	r3, #:upper16:.LC4
 6501 034c 002000E3 		movw	r2, #:lower16:.LC5
 6502 0350 002040E3 		movt	r2, #:upper16:.LC5
 6503 0354 E71C00E3 		movw	r1, #3303
 6504 0358 000000E3 		movw	r0, #:lower16:.LC6
 6505 035c 000040E3 		movt	r0, #:upper16:.LC6
 6506 0360 FEFFFFEB 		bl	RME_Log
 6507              	.L432:
 6508              		.loc 1 3303 5 discriminator 2
 6509 0364 FEFFFFEA 		b	.L432
 6510              	.L431:
3304:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 174


3305:../../Source/Kernel/rme_kernel.c ****     return 0;
 6511              		.loc 1 3305 12 is_stmt 1
 6512 0368 0030A0E3 		mov	r3, #0
 6513              	.L412:
3306:../../Source/Kernel/rme_kernel.c **** }
 6514              		.loc 1 3306 1
 6515 036c 0300A0E1 		mov	r0, r3
 6516 0370 04D04BE2 		sub	sp, fp, #4
 6517              		.cfi_def_cfa 13, 8
 6518              		@ sp needed
 6519 0374 0088BDE8 		pop	{fp, pc}
 6520              		.cfi_endproc
 6521              	.LFE33:
 6523              		.section	.text._RME_Pgt_Add,"ax",%progbits
 6524              		.align	2
 6525              		.syntax unified
 6526              		.arm
 6528              	_RME_Pgt_Add:
 6529              	.LFB34:
3307:../../Source/Kernel/rme_kernel.c **** #endif
3308:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Del *************************************************/
3309:../../Source/Kernel/rme_kernel.c **** 
3310:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Add ******************************************************
3311:../../Source/Kernel/rme_kernel.c **** Description : Delegate a page from one page table to another. This is the only
3312:../../Source/Kernel/rme_kernel.c ****               way to add pages to new page tables after the system boots.
3313:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3314:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Dst - The capability to the destination page
3315:../../Source/Kernel/rme_kernel.c ****                                       directory.
3316:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3317:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate to in the
3318:../../Source/Kernel/rme_kernel.c ****                                   destination page directory.
3319:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Dst - The page access permission for the
3320:../../Source/Kernel/rme_kernel.c ****                                    destination page.
3321:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Src - The capability to the source page 
3322:../../Source/Kernel/rme_kernel.c ****                                       directory.
3323:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3324:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate from in the source
3325:../../Source/Kernel/rme_kernel.c ****                                   page directory.
3326:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Index - The index of the physical address frame to
3327:../../Source/Kernel/rme_kernel.c ****                                 delegate. For example, if the destination
3328:../../Source/Kernel/rme_kernel.c ****                                 directory's page size is 1/4 of that of the
3329:../../Source/Kernel/rme_kernel.c ****                                 source directory, index=0 will delegate the
3330:../../Source/Kernel/rme_kernel.c ****                                 first 1/4, index=1 will delegate the second
3331:../../Source/Kernel/rme_kernel.c ****                                 1/4, index=2 will delegate the third 1/4, and
3332:../../Source/Kernel/rme_kernel.c ****                                 index=3 will delegate the last 1/4.
3333:../../Source/Kernel/rme_kernel.c ****                                 All other index values are illegal.
3334:../../Source/Kernel/rme_kernel.c **** Output      : None.
3335:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3336:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3337:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3338:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Add(struct RME_Cap_Cpt* Cpt, 
3339:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Dst,
3340:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Dst,
3341:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Dst,
3342:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Src,
3343:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Src,
3344:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Index)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 175


3345:../../Source/Kernel/rme_kernel.c **** {
 6530              		.loc 1 3345 1
 6531              		.cfi_startproc
 6532              		@ args = 12, pretend = 0, frame = 48
 6533              		@ frame_needed = 1, uses_anonymous_args = 0
 6534 0000 00482DE9 		push	{fp, lr}
 6535              		.cfi_def_cfa_offset 8
 6536              		.cfi_offset 11, -8
 6537              		.cfi_offset 14, -4
 6538 0004 04B08DE2 		add	fp, sp, #4
 6539              		.cfi_def_cfa 11, 4
 6540 0008 30D04DE2 		sub	sp, sp, #48
 6541 000c 28000BE5 		str	r0, [fp, #-40]
 6542 0010 2C100BE5 		str	r1, [fp, #-44]
 6543 0014 30200BE5 		str	r2, [fp, #-48]
 6544 0018 34300BE5 		str	r3, [fp, #-52]
3346:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Src;
3347:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Dst;
3348:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Dst;
3349:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Src;
3350:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag_Src;
3351:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3352:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Src;
3353:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Dst;
3354:../../Source/Kernel/rme_kernel.c **** 
3355:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3356:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Dst,RME_CAP_TYPE_PGT,
 6545              		.loc 1 3356 5
 6546 001c 2C301BE5 		ldr	r3, [fp, #-44]
 6547 0020 803003E2 		and	r3, r3, #128
 6548 0024 000053E3 		cmp	r3, #0
 6549 0028 1D00001A 		bne	.L434
 6550              		.loc 1 3356 5 is_stmt 0 discriminator 1
 6551 002c 28301BE5 		ldr	r3, [fp, #-40]
 6552 0030 142093E5 		ldr	r2, [r3, #20]
 6553 0034 2C301BE5 		ldr	r3, [fp, #-44]
 6554 0038 030052E1 		cmp	r2, r3
 6555 003c 0100008A 		bhi	.L435
 6556              		.loc 1 3356 5 discriminator 3
 6557 0040 0230E0E3 		mvn	r3, #2
 6558 0044 2C0100EA 		b	.L464
 6559              	.L435:
 6560              		.loc 1 3356 5 discriminator 4
 6561 0048 2C301BE5 		ldr	r3, [fp, #-44]
 6562 004c 8322A0E1 		lsl	r2, r3, #5
 6563 0050 28301BE5 		ldr	r3, [fp, #-40]
 6564 0054 0C3093E5 		ldr	r3, [r3, #12]
 6565 0058 033082E0 		add	r3, r2, r3
 6566 005c 0C300BE5 		str	r3, [fp, #-12]
 6567 0060 0C301BE5 		ldr	r3, [fp, #-12]
 6568 0064 0300A0E1 		mov	r0, r3
 6569 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6570 006c 14000BE5 		str	r0, [fp, #-20]
 6571 0070 14301BE5 		ldr	r3, [fp, #-20]
 6572 0074 2338A0E1 		lsr	r3, r3, #16
 6573 0078 7330EFE6 		uxtb	r3, r3
 6574 007c 020053E3 		cmp	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 176


 6575 0080 0100001A 		bne	.L437
 6576              		.loc 1 3356 5 discriminator 5
 6577 0084 0830E0E3 		mvn	r3, #8
 6578 0088 1B0100EA 		b	.L464
 6579              	.L437:
 6580              		.loc 1 3356 5 discriminator 6
 6581 008c 14301BE5 		ldr	r3, [fp, #-20]
 6582 0090 233CA0E1 		lsr	r3, r3, #24
 6583 0094 040053E3 		cmp	r3, #4
 6584 0098 4100000A 		beq	.L438
 6585              		.loc 1 3356 5 discriminator 7
 6586 009c 0130E0E3 		mvn	r3, #1
 6587 00a0 150100EA 		b	.L464
 6588              	.L434:
 6589              		.loc 1 3356 5 discriminator 2
 6590 00a4 2C301BE5 		ldr	r3, [fp, #-44]
 6591 00a8 2324A0E1 		lsr	r2, r3, #8
 6592 00ac 28301BE5 		ldr	r3, [fp, #-40]
 6593 00b0 143093E5 		ldr	r3, [r3, #20]
 6594 00b4 030052E1 		cmp	r2, r3
 6595 00b8 0100003A 		bcc	.L439
 6596              		.loc 1 3356 5 discriminator 8
 6597 00bc 0230E0E3 		mvn	r3, #2
 6598 00c0 0D0100EA 		b	.L464
 6599              	.L439:
 6600              		.loc 1 3356 5 discriminator 9
 6601 00c4 2C301BE5 		ldr	r3, [fp, #-44]
 6602 00c8 2334A0E1 		lsr	r3, r3, #8
 6603 00cc 8322A0E1 		lsl	r2, r3, #5
 6604 00d0 28301BE5 		ldr	r3, [fp, #-40]
 6605 00d4 0C3093E5 		ldr	r3, [r3, #12]
 6606 00d8 033082E0 		add	r3, r2, r3
 6607 00dc 0C300BE5 		str	r3, [fp, #-12]
 6608 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 6609 00e4 0300A0E1 		mov	r0, r3
 6610 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6611 00ec 14000BE5 		str	r0, [fp, #-20]
 6612 00f0 14301BE5 		ldr	r3, [fp, #-20]
 6613 00f4 2338A0E1 		lsr	r3, r3, #16
 6614 00f8 7330EFE6 		uxtb	r3, r3
 6615 00fc 020053E3 		cmp	r3, #2
 6616 0100 0100001A 		bne	.L440
 6617              		.loc 1 3356 5 discriminator 10
 6618 0104 0830E0E3 		mvn	r3, #8
 6619 0108 FB0000EA 		b	.L464
 6620              	.L440:
 6621              		.loc 1 3356 5 discriminator 11
 6622 010c 14301BE5 		ldr	r3, [fp, #-20]
 6623 0110 233CA0E1 		lsr	r3, r3, #24
 6624 0114 030053E3 		cmp	r3, #3
 6625 0118 0100000A 		beq	.L441
 6626              		.loc 1 3356 5 discriminator 12
 6627 011c 0130E0E3 		mvn	r3, #1
 6628 0120 F50000EA 		b	.L464
 6629              	.L441:
 6630              		.loc 1 3356 5 discriminator 13
 6631 0124 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 177


 6632 0128 7F2003E2 		and	r2, r3, #127
 6633 012c 0C301BE5 		ldr	r3, [fp, #-12]
 6634 0130 143093E5 		ldr	r3, [r3, #20]
 6635 0134 030052E1 		cmp	r2, r3
 6636 0138 0100003A 		bcc	.L442
 6637              		.loc 1 3356 5 discriminator 14
 6638 013c 0230E0E3 		mvn	r3, #2
 6639 0140 ED0000EA 		b	.L464
 6640              	.L442:
 6641              		.loc 1 3356 5 discriminator 15
 6642 0144 2C301BE5 		ldr	r3, [fp, #-44]
 6643 0148 7F3003E2 		and	r3, r3, #127
 6644 014c 8322A0E1 		lsl	r2, r3, #5
 6645 0150 0C301BE5 		ldr	r3, [fp, #-12]
 6646 0154 0C3093E5 		ldr	r3, [r3, #12]
 6647 0158 033082E0 		add	r3, r2, r3
 6648 015c 0C300BE5 		str	r3, [fp, #-12]
 6649 0160 0C301BE5 		ldr	r3, [fp, #-12]
 6650 0164 0300A0E1 		mov	r0, r3
 6651 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6652 016c 14000BE5 		str	r0, [fp, #-20]
 6653 0170 14301BE5 		ldr	r3, [fp, #-20]
 6654 0174 2338A0E1 		lsr	r3, r3, #16
 6655 0178 7330EFE6 		uxtb	r3, r3
 6656 017c 020053E3 		cmp	r3, #2
 6657 0180 0100001A 		bne	.L443
 6658              		.loc 1 3356 5 discriminator 16
 6659 0184 0830E0E3 		mvn	r3, #8
 6660 0188 DB0000EA 		b	.L464
 6661              	.L443:
 6662              		.loc 1 3356 5 discriminator 17
 6663 018c 14301BE5 		ldr	r3, [fp, #-20]
 6664 0190 233CA0E1 		lsr	r3, r3, #24
 6665 0194 040053E3 		cmp	r3, #4
 6666 0198 0100000A 		beq	.L438
 6667              		.loc 1 3356 5 discriminator 18
 6668 019c 0130E0E3 		mvn	r3, #1
 6669 01a0 D50000EA 		b	.L464
 6670              	.L438:
3357:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Dst,Type_Stat);
3358:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Src,RME_CAP_TYPE_PGT,
 6671              		.loc 1 3358 5 is_stmt 1
 6672 01a4 04309BE5 		ldr	r3, [fp, #4]
 6673 01a8 803003E2 		and	r3, r3, #128
 6674 01ac 000053E3 		cmp	r3, #0
 6675 01b0 1D00001A 		bne	.L444
 6676              		.loc 1 3358 5 is_stmt 0 discriminator 1
 6677 01b4 28301BE5 		ldr	r3, [fp, #-40]
 6678 01b8 142093E5 		ldr	r2, [r3, #20]
 6679 01bc 04309BE5 		ldr	r3, [fp, #4]
 6680 01c0 030052E1 		cmp	r2, r3
 6681 01c4 0100008A 		bhi	.L445
 6682              		.loc 1 3358 5 discriminator 3
 6683 01c8 0230E0E3 		mvn	r3, #2
 6684 01cc CA0000EA 		b	.L464
 6685              	.L445:
 6686              		.loc 1 3358 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 178


 6687 01d0 04309BE5 		ldr	r3, [fp, #4]
 6688 01d4 8322A0E1 		lsl	r2, r3, #5
 6689 01d8 28301BE5 		ldr	r3, [fp, #-40]
 6690 01dc 0C3093E5 		ldr	r3, [r3, #12]
 6691 01e0 033082E0 		add	r3, r2, r3
 6692 01e4 08300BE5 		str	r3, [fp, #-8]
 6693 01e8 08301BE5 		ldr	r3, [fp, #-8]
 6694 01ec 0300A0E1 		mov	r0, r3
 6695 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6696 01f4 14000BE5 		str	r0, [fp, #-20]
 6697 01f8 14301BE5 		ldr	r3, [fp, #-20]
 6698 01fc 2338A0E1 		lsr	r3, r3, #16
 6699 0200 7330EFE6 		uxtb	r3, r3
 6700 0204 020053E3 		cmp	r3, #2
 6701 0208 0100001A 		bne	.L446
 6702              		.loc 1 3358 5 discriminator 5
 6703 020c 0830E0E3 		mvn	r3, #8
 6704 0210 B90000EA 		b	.L464
 6705              	.L446:
 6706              		.loc 1 3358 5 discriminator 6
 6707 0214 14301BE5 		ldr	r3, [fp, #-20]
 6708 0218 233CA0E1 		lsr	r3, r3, #24
 6709 021c 040053E3 		cmp	r3, #4
 6710 0220 4100000A 		beq	.L447
 6711              		.loc 1 3358 5 discriminator 7
 6712 0224 0130E0E3 		mvn	r3, #1
 6713 0228 B30000EA 		b	.L464
 6714              	.L444:
 6715              		.loc 1 3358 5 discriminator 2
 6716 022c 04309BE5 		ldr	r3, [fp, #4]
 6717 0230 2324A0E1 		lsr	r2, r3, #8
 6718 0234 28301BE5 		ldr	r3, [fp, #-40]
 6719 0238 143093E5 		ldr	r3, [r3, #20]
 6720 023c 030052E1 		cmp	r2, r3
 6721 0240 0100003A 		bcc	.L448
 6722              		.loc 1 3358 5 discriminator 8
 6723 0244 0230E0E3 		mvn	r3, #2
 6724 0248 AB0000EA 		b	.L464
 6725              	.L448:
 6726              		.loc 1 3358 5 discriminator 9
 6727 024c 04309BE5 		ldr	r3, [fp, #4]
 6728 0250 2334A0E1 		lsr	r3, r3, #8
 6729 0254 8322A0E1 		lsl	r2, r3, #5
 6730 0258 28301BE5 		ldr	r3, [fp, #-40]
 6731 025c 0C3093E5 		ldr	r3, [r3, #12]
 6732 0260 033082E0 		add	r3, r2, r3
 6733 0264 08300BE5 		str	r3, [fp, #-8]
 6734 0268 08301BE5 		ldr	r3, [fp, #-8]
 6735 026c 0300A0E1 		mov	r0, r3
 6736 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6737 0274 14000BE5 		str	r0, [fp, #-20]
 6738 0278 14301BE5 		ldr	r3, [fp, #-20]
 6739 027c 2338A0E1 		lsr	r3, r3, #16
 6740 0280 7330EFE6 		uxtb	r3, r3
 6741 0284 020053E3 		cmp	r3, #2
 6742 0288 0100001A 		bne	.L449
 6743              		.loc 1 3358 5 discriminator 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 179


 6744 028c 0830E0E3 		mvn	r3, #8
 6745 0290 990000EA 		b	.L464
 6746              	.L449:
 6747              		.loc 1 3358 5 discriminator 11
 6748 0294 14301BE5 		ldr	r3, [fp, #-20]
 6749 0298 233CA0E1 		lsr	r3, r3, #24
 6750 029c 030053E3 		cmp	r3, #3
 6751 02a0 0100000A 		beq	.L450
 6752              		.loc 1 3358 5 discriminator 12
 6753 02a4 0130E0E3 		mvn	r3, #1
 6754 02a8 930000EA 		b	.L464
 6755              	.L450:
 6756              		.loc 1 3358 5 discriminator 13
 6757 02ac 04309BE5 		ldr	r3, [fp, #4]
 6758 02b0 7F2003E2 		and	r2, r3, #127
 6759 02b4 08301BE5 		ldr	r3, [fp, #-8]
 6760 02b8 143093E5 		ldr	r3, [r3, #20]
 6761 02bc 030052E1 		cmp	r2, r3
 6762 02c0 0100003A 		bcc	.L451
 6763              		.loc 1 3358 5 discriminator 14
 6764 02c4 0230E0E3 		mvn	r3, #2
 6765 02c8 8B0000EA 		b	.L464
 6766              	.L451:
 6767              		.loc 1 3358 5 discriminator 15
 6768 02cc 04309BE5 		ldr	r3, [fp, #4]
 6769 02d0 7F3003E2 		and	r3, r3, #127
 6770 02d4 8322A0E1 		lsl	r2, r3, #5
 6771 02d8 08301BE5 		ldr	r3, [fp, #-8]
 6772 02dc 0C3093E5 		ldr	r3, [r3, #12]
 6773 02e0 033082E0 		add	r3, r2, r3
 6774 02e4 08300BE5 		str	r3, [fp, #-8]
 6775 02e8 08301BE5 		ldr	r3, [fp, #-8]
 6776 02ec 0300A0E1 		mov	r0, r3
 6777 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6778 02f4 14000BE5 		str	r0, [fp, #-20]
 6779 02f8 14301BE5 		ldr	r3, [fp, #-20]
 6780 02fc 2338A0E1 		lsr	r3, r3, #16
 6781 0300 7330EFE6 		uxtb	r3, r3
 6782 0304 020053E3 		cmp	r3, #2
 6783 0308 0100001A 		bne	.L452
 6784              		.loc 1 3358 5 discriminator 16
 6785 030c 0830E0E3 		mvn	r3, #8
 6786 0310 790000EA 		b	.L464
 6787              	.L452:
 6788              		.loc 1 3358 5 discriminator 17
 6789 0314 14301BE5 		ldr	r3, [fp, #-20]
 6790 0318 233CA0E1 		lsr	r3, r3, #24
 6791 031c 040053E3 		cmp	r3, #4
 6792 0320 0100000A 		beq	.L447
 6793              		.loc 1 3358 5 discriminator 18
 6794 0324 0130E0E3 		mvn	r3, #1
 6795 0328 730000EA 		b	.L464
 6796              	.L447:
3359:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Src,Type_Stat);
3360:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3361:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Dst,RME_PGT_FLAG_ADD_DST);
 6797              		.loc 1 3361 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 180


 6798 032c 0C301BE5 		ldr	r3, [fp, #-12]
 6799 0330 083093E5 		ldr	r3, [r3, #8]
 6800 0334 023003E2 		and	r3, r3, #2
 6801 0338 000053E3 		cmp	r3, #0
 6802 033c 0100001A 		bne	.L453
 6803              		.loc 1 3361 5 is_stmt 0 discriminator 1
 6804 0340 0630E0E3 		mvn	r3, #6
 6805 0344 6C0000EA 		b	.L464
 6806              	.L453:
3362:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Src,RME_PGT_FLAG_ADD_SRC);
 6807              		.loc 1 3362 5 is_stmt 1
 6808 0348 08301BE5 		ldr	r3, [fp, #-8]
 6809 034c 083093E5 		ldr	r3, [r3, #8]
 6810 0350 013003E2 		and	r3, r3, #1
 6811 0354 000053E3 		cmp	r3, #0
 6812 0358 0100001A 		bne	.L454
 6813              		.loc 1 3362 5 is_stmt 0 discriminator 1
 6814 035c 0630E0E3 		mvn	r3, #6
 6815 0360 650000EA 		b	.L464
 6816              	.L454:
3363:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3364:../../Source/Kernel/rme_kernel.c ****     if((Pos_Dst>RME_PGT_FLAG_HIGH(Pgt_Dst->Head.Flag))||
 6817              		.loc 1 3364 17 is_stmt 1
 6818 0364 0C301BE5 		ldr	r3, [fp, #-12]
 6819 0368 083093E5 		ldr	r3, [r3, #8]
 6820 036c 233AA0E1 		lsr	r3, r3, #20
 6821              		.loc 1 3364 7
 6822 0370 30201BE5 		ldr	r2, [fp, #-48]
 6823 0374 030052E1 		cmp	r2, r3
 6824 0378 1300008A 		bhi	.L455
3365:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 6825              		.loc 1 3365 17 discriminator 1
 6826 037c 0C301BE5 		ldr	r3, [fp, #-12]
 6827 0380 083093E5 		ldr	r3, [r3, #8]
 6828 0384 2334A0E1 		lsr	r3, r3, #8
 6829 0388 5330EBE7 		ubfx	r3, r3, #0, #12
3364:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 6830              		.loc 1 3364 55 discriminator 1
 6831 038c 30201BE5 		ldr	r2, [fp, #-48]
 6832 0390 030052E1 		cmp	r2, r3
 6833 0394 0C00003A 		bcc	.L455
3366:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 6834              		.loc 1 3366 17
 6835 0398 08301BE5 		ldr	r3, [fp, #-8]
 6836 039c 083093E5 		ldr	r3, [r3, #8]
 6837 03a0 233AA0E1 		lsr	r3, r3, #20
3365:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 6838              		.loc 1 3365 54
 6839 03a4 08209BE5 		ldr	r2, [fp, #8]
 6840 03a8 030052E1 		cmp	r2, r3
 6841 03ac 0600008A 		bhi	.L455
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Src<RME_PGT_FLAG_LOW(Pgt_Src->Head.Flag)))
 6842              		.loc 1 3367 17
 6843 03b0 08301BE5 		ldr	r3, [fp, #-8]
 6844 03b4 083093E5 		ldr	r3, [r3, #8]
 6845 03b8 2334A0E1 		lsr	r3, r3, #8
 6846 03bc 5330EBE7 		ubfx	r3, r3, #0, #12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 181


3366:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 6847              		.loc 1 3366 55
 6848 03c0 08209BE5 		ldr	r2, [fp, #8]
 6849 03c4 030052E1 		cmp	r2, r3
 6850 03c8 0100002A 		bcs	.L456
 6851              	.L455:
3368:../../Source/Kernel/rme_kernel.c ****     {
3369:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3370:../../Source/Kernel/rme_kernel.c **** 
3371:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 6852              		.loc 1 3371 16
 6853 03cc 0630E0E3 		mvn	r3, #6
 6854 03d0 490000EA 		b	.L464
 6855              	.L456:
3372:../../Source/Kernel/rme_kernel.c ****     }
3373:../../Source/Kernel/rme_kernel.c ****     else
3374:../../Source/Kernel/rme_kernel.c ****     {
3375:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3376:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3377:../../Source/Kernel/rme_kernel.c ****     }
3378:../../Source/Kernel/rme_kernel.c **** 
3379:../../Source/Kernel/rme_kernel.c ****     /* See if the size order relationship is correct */
3380:../../Source/Kernel/rme_kernel.c ****     Szord_Dst=RME_PGT_SZORD(Pgt_Dst->Order);
 6856              		.loc 1 3380 15
 6857 03d4 0C301BE5 		ldr	r3, [fp, #-12]
 6858 03d8 143093E5 		ldr	r3, [r3, #20]
 6859              		.loc 1 3380 14
 6860 03dc 2338A0E1 		lsr	r3, r3, #16
 6861 03e0 18300BE5 		str	r3, [fp, #-24]
3381:../../Source/Kernel/rme_kernel.c ****     Szord_Src=RME_PGT_SZORD(Pgt_Src->Order);
 6862              		.loc 1 3381 15
 6863 03e4 08301BE5 		ldr	r3, [fp, #-8]
 6864 03e8 143093E5 		ldr	r3, [r3, #20]
 6865              		.loc 1 3381 14
 6866 03ec 2338A0E1 		lsr	r3, r3, #16
 6867 03f0 1C300BE5 		str	r3, [fp, #-28]
3382:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst>Szord_Src)
 6868              		.loc 1 3382 7
 6869 03f4 18201BE5 		ldr	r2, [fp, #-24]
 6870 03f8 1C301BE5 		ldr	r3, [fp, #-28]
 6871 03fc 030052E1 		cmp	r2, r3
 6872 0400 0100009A 		bls	.L457
3383:../../Source/Kernel/rme_kernel.c ****     {
3384:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3385:../../Source/Kernel/rme_kernel.c **** 
3386:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 6873              		.loc 1 3386 16
 6874 0404 6430E0E3 		mvn	r3, #100
 6875 0408 3B0000EA 		b	.L464
 6876              	.L457:
3387:../../Source/Kernel/rme_kernel.c ****     }
3388:../../Source/Kernel/rme_kernel.c ****     else
3389:../../Source/Kernel/rme_kernel.c ****     {
3390:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3391:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3392:../../Source/Kernel/rme_kernel.c ****     }
3393:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 182


3394:../../Source/Kernel/rme_kernel.c ****     /* See if the positions are out of range - NMORD is restricted, no UB */
3395:../../Source/Kernel/rme_kernel.c ****     if(((Pos_Dst>>RME_PGT_NMORD(Pgt_Dst->Order))!=0U)||
 6877              		.loc 1 3395 19
 6878 040c 0C301BE5 		ldr	r3, [fp, #-12]
 6879 0410 143093E5 		ldr	r3, [r3, #20]
 6880 0414 7330FFE6 		uxth	r3, r3
 6881              		.loc 1 3395 17
 6882 0418 30201BE5 		ldr	r2, [fp, #-48]
 6883 041c 3233A0E1 		lsr	r3, r2, r3
 6884              		.loc 1 3395 7
 6885 0420 000053E3 		cmp	r3, #0
 6886 0424 0600001A 		bne	.L458
3396:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 6887              		.loc 1 3396 19 discriminator 1
 6888 0428 08301BE5 		ldr	r3, [fp, #-8]
 6889 042c 143093E5 		ldr	r3, [r3, #20]
 6890 0430 7330FFE6 		uxth	r3, r3
 6891              		.loc 1 3396 17 discriminator 1
 6892 0434 08209BE5 		ldr	r2, [fp, #8]
 6893 0438 3233A0E1 		lsr	r3, r2, r3
3395:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 6894              		.loc 1 3395 54 discriminator 1
 6895 043c 000053E3 		cmp	r3, #0
 6896 0440 0100000A 		beq	.L459
 6897              	.L458:
3397:../../Source/Kernel/rme_kernel.c ****     {
3398:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3399:../../Source/Kernel/rme_kernel.c **** 
3400:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 6898              		.loc 1 3400 16
 6899 0444 6430E0E3 		mvn	r3, #100
 6900 0448 2B0000EA 		b	.L464
 6901              	.L459:
3401:../../Source/Kernel/rme_kernel.c ****     }
3402:../../Source/Kernel/rme_kernel.c ****     else
3403:../../Source/Kernel/rme_kernel.c ****     {
3404:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3405:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3406:../../Source/Kernel/rme_kernel.c ****     }
3407:../../Source/Kernel/rme_kernel.c **** 
3408:../../Source/Kernel/rme_kernel.c ****     /* See if the source subposition is out of range - avoid UB */
3409:../../Source/Kernel/rme_kernel.c ****     if(Szord_Src<RME_WORD_BIT)
 6902              		.loc 1 3409 7
 6903 044c 1C301BE5 		ldr	r3, [fp, #-28]
 6904 0450 1F0053E3 		cmp	r3, #31
 6905 0454 0900008A 		bhi	.L460
3410:../../Source/Kernel/rme_kernel.c ****     {
3411:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3412:../../Source/Kernel/rme_kernel.c ****         
3413:../../Source/Kernel/rme_kernel.c ****         /* No UB because Szord_Dst<=Szord_Src */
3414:../../Source/Kernel/rme_kernel.c ****         if(RME_POW2(Szord_Src)<=(Index<<Szord_Dst))
 6906              		.loc 1 3414 12
 6907 0458 0120A0E3 		mov	r2, #1
 6908 045c 1C301BE5 		ldr	r3, [fp, #-28]
 6909 0460 1223A0E1 		lsl	r2, r2, r3
 6910              		.loc 1 3414 39
 6911 0464 0C109BE5 		ldr	r1, [fp, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 183


 6912 0468 18301BE5 		ldr	r3, [fp, #-24]
 6913 046c 1133A0E1 		lsl	r3, r1, r3
 6914              		.loc 1 3414 11
 6915 0470 030052E1 		cmp	r2, r3
 6916 0474 0100008A 		bhi	.L460
3415:../../Source/Kernel/rme_kernel.c ****         {
3416:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3417:../../Source/Kernel/rme_kernel.c **** 
3418:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
 6917              		.loc 1 3418 20
 6918 0478 6430E0E3 		mvn	r3, #100
 6919 047c 1E0000EA 		b	.L464
 6920              	.L460:
3419:../../Source/Kernel/rme_kernel.c ****         }
3420:../../Source/Kernel/rme_kernel.c ****         else
3421:../../Source/Kernel/rme_kernel.c ****         {
3422:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3423:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3424:../../Source/Kernel/rme_kernel.c ****         }
3425:../../Source/Kernel/rme_kernel.c ****     }
3426:../../Source/Kernel/rme_kernel.c ****     else
3427:../../Source/Kernel/rme_kernel.c ****     {
3428:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3429:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3430:../../Source/Kernel/rme_kernel.c ****     }
3431:../../Source/Kernel/rme_kernel.c **** 
3432:../../Source/Kernel/rme_kernel.c ****     /* Get the physical address and RME standard flags of that source page */
3433:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Lookup(Pgt_Src,Pos_Src,&Paddr_Src,&Flag_Src)<0)
 6921              		.loc 1 3433 8
 6922 0480 24304BE2 		sub	r3, fp, #36
 6923 0484 20204BE2 		sub	r2, fp, #32
 6924 0488 08109BE5 		ldr	r1, [fp, #8]
 6925 048c 08001BE5 		ldr	r0, [fp, #-8]
 6926 0490 FEFFFFEB 		bl	__RME_Pgt_Lookup
3434:../../Source/Kernel/rme_kernel.c ****     {
3435:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3436:../../Source/Kernel/rme_kernel.c **** 
3437:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3438:../../Source/Kernel/rme_kernel.c ****     }
3439:../../Source/Kernel/rme_kernel.c ****     else
3440:../../Source/Kernel/rme_kernel.c ****     {
3441:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3442:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3443:../../Source/Kernel/rme_kernel.c ****     }
3444:../../Source/Kernel/rme_kernel.c **** 
3445:../../Source/Kernel/rme_kernel.c ****     /* Calculate the destination physical address - avoid UB */
3446:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst<RME_WORD_BIT)
 6927              		.loc 1 3446 7
 6928 0494 18301BE5 		ldr	r3, [fp, #-24]
 6929 0498 1F0053E3 		cmp	r3, #31
 6930 049c 0600008A 		bhi	.L461
3447:../../Source/Kernel/rme_kernel.c ****     {
3448:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3449:../../Source/Kernel/rme_kernel.c ****         
3450:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src+(Index<<Szord_Dst);
 6931              		.loc 1 3450 35
 6932 04a0 0C209BE5 		ldr	r2, [fp, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 184


 6933 04a4 18301BE5 		ldr	r3, [fp, #-24]
 6934 04a8 1223A0E1 		lsl	r2, r2, r3
 6935              		.loc 1 3450 28
 6936 04ac 20301BE5 		ldr	r3, [fp, #-32]
 6937              		.loc 1 3450 18
 6938 04b0 033082E0 		add	r3, r2, r3
 6939 04b4 10300BE5 		str	r3, [fp, #-16]
 6940 04b8 010000EA 		b	.L462
 6941              	.L461:
3451:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3452:../../Source/Kernel/rme_kernel.c ****         /* Check if we force identical mapping */
3453:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=(RME_PGT_BASE(Pgt_Dst->Base)+(Pos_Dst<<Szord_Dst)))
3454:../../Source/Kernel/rme_kernel.c ****         {
3455:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3456:../../Source/Kernel/rme_kernel.c **** 
3457:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3458:../../Source/Kernel/rme_kernel.c ****         }
3459:../../Source/Kernel/rme_kernel.c ****         else
3460:../../Source/Kernel/rme_kernel.c ****         {
3461:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3462:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3463:../../Source/Kernel/rme_kernel.c ****         }
3464:../../Source/Kernel/rme_kernel.c **** #endif
3465:../../Source/Kernel/rme_kernel.c ****     }
3466:../../Source/Kernel/rme_kernel.c ****     /* The destination is also full range */
3467:../../Source/Kernel/rme_kernel.c ****     else
3468:../../Source/Kernel/rme_kernel.c ****     {
3469:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3470:../../Source/Kernel/rme_kernel.c ****         
3471:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src;
 6942              		.loc 1 3471 18
 6943 04bc 20301BE5 		ldr	r3, [fp, #-32]
 6944 04c0 10300BE5 		str	r3, [fp, #-16]
 6945              	.L462:
3472:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3473:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=RME_PGT_BASE(Pgt_Dst->Base))
3474:../../Source/Kernel/rme_kernel.c ****         {
3475:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3476:../../Source/Kernel/rme_kernel.c **** 
3477:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3478:../../Source/Kernel/rme_kernel.c ****         }
3479:../../Source/Kernel/rme_kernel.c ****         else
3480:../../Source/Kernel/rme_kernel.c ****         {
3481:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3482:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3483:../../Source/Kernel/rme_kernel.c ****         }
3484:../../Source/Kernel/rme_kernel.c **** #endif
3485:../../Source/Kernel/rme_kernel.c ****     }
3486:../../Source/Kernel/rme_kernel.c ****     
3487:../../Source/Kernel/rme_kernel.c ****     /* Analyze the flags - we do not allow expansion of access permissions */
3488:../../Source/Kernel/rme_kernel.c ****     if(((Flag_Dst)&(~Flag_Src))!=0U)
 6946              		.loc 1 3488 21
 6947 04c4 24301BE5 		ldr	r3, [fp, #-36]
 6948 04c8 0320E0E1 		mvn	r2, r3
 6949              		.loc 1 3488 19
 6950 04cc 34301BE5 		ldr	r3, [fp, #-52]
 6951 04d0 023003E0 		and	r3, r3, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 185


 6952              		.loc 1 3488 7
 6953 04d4 000053E3 		cmp	r3, #0
 6954 04d8 0100000A 		beq	.L463
3489:../../Source/Kernel/rme_kernel.c ****     {
3490:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3491:../../Source/Kernel/rme_kernel.c **** 
3492:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_PERM;
 6955              		.loc 1 3492 16
 6956 04dc 6730E0E3 		mvn	r3, #103
 6957 04e0 050000EA 		b	.L464
 6958              	.L463:
3493:../../Source/Kernel/rme_kernel.c ****     }
3494:../../Source/Kernel/rme_kernel.c ****     else
3495:../../Source/Kernel/rme_kernel.c ****     {
3496:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3497:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3498:../../Source/Kernel/rme_kernel.c ****     }
3499:../../Source/Kernel/rme_kernel.c **** 
3500:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3501:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3502:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Dst,Paddr_Dst,Pos_Dst,Flag_Dst)<0)
 6959              		.loc 1 3502 8
 6960 04e4 34301BE5 		ldr	r3, [fp, #-52]
 6961 04e8 30201BE5 		ldr	r2, [fp, #-48]
 6962 04ec 10101BE5 		ldr	r1, [fp, #-16]
 6963 04f0 0C001BE5 		ldr	r0, [fp, #-12]
 6964 04f4 FEFFFFEB 		bl	__RME_Pgt_Page_Map
3503:../../Source/Kernel/rme_kernel.c ****     {
3504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3505:../../Source/Kernel/rme_kernel.c **** 
3506:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3507:../../Source/Kernel/rme_kernel.c ****     }
3508:../../Source/Kernel/rme_kernel.c ****     else
3509:../../Source/Kernel/rme_kernel.c ****     {
3510:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3511:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3512:../../Source/Kernel/rme_kernel.c ****     }
3513:../../Source/Kernel/rme_kernel.c **** 
3514:../../Source/Kernel/rme_kernel.c ****     return 0;
 6965              		.loc 1 3514 12
 6966 04f8 0030A0E3 		mov	r3, #0
 6967              	.L464:
3515:../../Source/Kernel/rme_kernel.c **** }
 6968              		.loc 1 3515 1 discriminator 1
 6969 04fc 0300A0E1 		mov	r0, r3
 6970 0500 04D04BE2 		sub	sp, fp, #4
 6971              		.cfi_def_cfa 13, 8
 6972              		@ sp needed
 6973 0504 0088BDE8 		pop	{fp, pc}
 6974              		.cfi_endproc
 6975              	.LFE34:
 6977              		.section	.text._RME_Pgt_Rem,"ax",%progbits
 6978              		.align	2
 6979              		.syntax unified
 6980              		.arm
 6982              	_RME_Pgt_Rem:
 6983              	.LFB35:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 186


3516:../../Source/Kernel/rme_kernel.c **** #endif
3517:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Add *************************************************/
3518:../../Source/Kernel/rme_kernel.c **** 
3519:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Rem ******************************************************
3520:../../Source/Kernel/rme_kernel.c **** Description : Remove a page from the page table. We are doing unmapping of a
3521:../../Source/Kernel/rme_kernel.c ****               page.
3522:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3523:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
3524:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3525:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to unmap from.
3526:../../Source/Kernel/rme_kernel.c **** Output      : None.
3527:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3528:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3529:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3530:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Rem(struct RME_Cap_Cpt* Cpt,
3531:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3532:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos)
3533:../../Source/Kernel/rme_kernel.c **** {
 6984              		.loc 1 3533 1
 6985              		.cfi_startproc
 6986              		@ args = 0, pretend = 0, frame = 24
 6987              		@ frame_needed = 1, uses_anonymous_args = 0
 6988 0000 00482DE9 		push	{fp, lr}
 6989              		.cfi_def_cfa_offset 8
 6990              		.cfi_offset 11, -8
 6991              		.cfi_offset 14, -4
 6992 0004 04B08DE2 		add	fp, sp, #4
 6993              		.cfi_def_cfa 11, 4
 6994 0008 18D04DE2 		sub	sp, sp, #24
 6995 000c 10000BE5 		str	r0, [fp, #-16]
 6996 0010 14100BE5 		str	r1, [fp, #-20]
 6997 0014 18200BE5 		str	r2, [fp, #-24]
3534:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Rem;
3535:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3536:../../Source/Kernel/rme_kernel.c ****     
3537:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3538:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_CPT,
 6998              		.loc 1 3538 5
 6999 0018 14301BE5 		ldr	r3, [fp, #-20]
 7000 001c 803003E2 		and	r3, r3, #128
 7001 0020 000053E3 		cmp	r3, #0
 7002 0024 1D00001A 		bne	.L466
 7003              		.loc 1 3538 5 is_stmt 0 discriminator 1
 7004 0028 10301BE5 		ldr	r3, [fp, #-16]
 7005 002c 142093E5 		ldr	r2, [r3, #20]
 7006 0030 14301BE5 		ldr	r3, [fp, #-20]
 7007 0034 030052E1 		cmp	r2, r3
 7008 0038 0100008A 		bhi	.L467
 7009              		.loc 1 3538 5 discriminator 3
 7010 003c 0230E0E3 		mvn	r3, #2
 7011 0040 790000EA 		b	.L468
 7012              	.L467:
 7013              		.loc 1 3538 5 discriminator 4
 7014 0044 14301BE5 		ldr	r3, [fp, #-20]
 7015 0048 8322A0E1 		lsl	r2, r3, #5
 7016 004c 10301BE5 		ldr	r3, [fp, #-16]
 7017 0050 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 187


 7018 0054 033082E0 		add	r3, r2, r3
 7019 0058 08300BE5 		str	r3, [fp, #-8]
 7020 005c 08301BE5 		ldr	r3, [fp, #-8]
 7021 0060 0300A0E1 		mov	r0, r3
 7022 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7023 0068 0C000BE5 		str	r0, [fp, #-12]
 7024 006c 0C301BE5 		ldr	r3, [fp, #-12]
 7025 0070 2338A0E1 		lsr	r3, r3, #16
 7026 0074 7330EFE6 		uxtb	r3, r3
 7027 0078 020053E3 		cmp	r3, #2
 7028 007c 0100001A 		bne	.L469
 7029              		.loc 1 3538 5 discriminator 5
 7030 0080 0830E0E3 		mvn	r3, #8
 7031 0084 680000EA 		b	.L468
 7032              	.L469:
 7033              		.loc 1 3538 5 discriminator 6
 7034 0088 0C301BE5 		ldr	r3, [fp, #-12]
 7035 008c 233CA0E1 		lsr	r3, r3, #24
 7036 0090 030053E3 		cmp	r3, #3
 7037 0094 4100000A 		beq	.L470
 7038              		.loc 1 3538 5 discriminator 7
 7039 0098 0130E0E3 		mvn	r3, #1
 7040 009c 620000EA 		b	.L468
 7041              	.L466:
 7042              		.loc 1 3538 5 discriminator 2
 7043 00a0 14301BE5 		ldr	r3, [fp, #-20]
 7044 00a4 2324A0E1 		lsr	r2, r3, #8
 7045 00a8 10301BE5 		ldr	r3, [fp, #-16]
 7046 00ac 143093E5 		ldr	r3, [r3, #20]
 7047 00b0 030052E1 		cmp	r2, r3
 7048 00b4 0100003A 		bcc	.L471
 7049              		.loc 1 3538 5 discriminator 8
 7050 00b8 0230E0E3 		mvn	r3, #2
 7051 00bc 5A0000EA 		b	.L468
 7052              	.L471:
 7053              		.loc 1 3538 5 discriminator 9
 7054 00c0 14301BE5 		ldr	r3, [fp, #-20]
 7055 00c4 2334A0E1 		lsr	r3, r3, #8
 7056 00c8 8322A0E1 		lsl	r2, r3, #5
 7057 00cc 10301BE5 		ldr	r3, [fp, #-16]
 7058 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7059 00d4 033082E0 		add	r3, r2, r3
 7060 00d8 08300BE5 		str	r3, [fp, #-8]
 7061 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7062 00e0 0300A0E1 		mov	r0, r3
 7063 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7064 00e8 0C000BE5 		str	r0, [fp, #-12]
 7065 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 7066 00f0 2338A0E1 		lsr	r3, r3, #16
 7067 00f4 7330EFE6 		uxtb	r3, r3
 7068 00f8 020053E3 		cmp	r3, #2
 7069 00fc 0100001A 		bne	.L472
 7070              		.loc 1 3538 5 discriminator 10
 7071 0100 0830E0E3 		mvn	r3, #8
 7072 0104 480000EA 		b	.L468
 7073              	.L472:
 7074              		.loc 1 3538 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 188


 7075 0108 0C301BE5 		ldr	r3, [fp, #-12]
 7076 010c 233CA0E1 		lsr	r3, r3, #24
 7077 0110 030053E3 		cmp	r3, #3
 7078 0114 0100000A 		beq	.L473
 7079              		.loc 1 3538 5 discriminator 12
 7080 0118 0130E0E3 		mvn	r3, #1
 7081 011c 420000EA 		b	.L468
 7082              	.L473:
 7083              		.loc 1 3538 5 discriminator 13
 7084 0120 14301BE5 		ldr	r3, [fp, #-20]
 7085 0124 7F2003E2 		and	r2, r3, #127
 7086 0128 08301BE5 		ldr	r3, [fp, #-8]
 7087 012c 143093E5 		ldr	r3, [r3, #20]
 7088 0130 030052E1 		cmp	r2, r3
 7089 0134 0100003A 		bcc	.L474
 7090              		.loc 1 3538 5 discriminator 14
 7091 0138 0230E0E3 		mvn	r3, #2
 7092 013c 3A0000EA 		b	.L468
 7093              	.L474:
 7094              		.loc 1 3538 5 discriminator 15
 7095 0140 14301BE5 		ldr	r3, [fp, #-20]
 7096 0144 7F3003E2 		and	r3, r3, #127
 7097 0148 8322A0E1 		lsl	r2, r3, #5
 7098 014c 08301BE5 		ldr	r3, [fp, #-8]
 7099 0150 0C3093E5 		ldr	r3, [r3, #12]
 7100 0154 033082E0 		add	r3, r2, r3
 7101 0158 08300BE5 		str	r3, [fp, #-8]
 7102 015c 08301BE5 		ldr	r3, [fp, #-8]
 7103 0160 0300A0E1 		mov	r0, r3
 7104 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7105 0168 0C000BE5 		str	r0, [fp, #-12]
 7106 016c 0C301BE5 		ldr	r3, [fp, #-12]
 7107 0170 2338A0E1 		lsr	r3, r3, #16
 7108 0174 7330EFE6 		uxtb	r3, r3
 7109 0178 020053E3 		cmp	r3, #2
 7110 017c 0100001A 		bne	.L475
 7111              		.loc 1 3538 5 discriminator 16
 7112 0180 0830E0E3 		mvn	r3, #8
 7113 0184 280000EA 		b	.L468
 7114              	.L475:
 7115              		.loc 1 3538 5 discriminator 17
 7116 0188 0C301BE5 		ldr	r3, [fp, #-12]
 7117 018c 233CA0E1 		lsr	r3, r3, #24
 7118 0190 030053E3 		cmp	r3, #3
 7119 0194 0100000A 		beq	.L470
 7120              		.loc 1 3538 5 discriminator 18
 7121 0198 0130E0E3 		mvn	r3, #1
 7122 019c 220000EA 		b	.L468
 7123              	.L470:
3539:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Rem,Type_Stat);
3540:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3541:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Rem,RME_PGT_FLAG_REM);
 7124              		.loc 1 3541 5 is_stmt 1
 7125 01a0 08301BE5 		ldr	r3, [fp, #-8]
 7126 01a4 083093E5 		ldr	r3, [r3, #8]
 7127 01a8 043003E2 		and	r3, r3, #4
 7128 01ac 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 189


 7129 01b0 0100001A 		bne	.L476
 7130              		.loc 1 3541 5 is_stmt 0 discriminator 1
 7131 01b4 0630E0E3 		mvn	r3, #6
 7132 01b8 1B0000EA 		b	.L468
 7133              	.L476:
3542:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3543:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Rem->Head.Flag))||
 7134              		.loc 1 3543 13 is_stmt 1
 7135 01bc 08301BE5 		ldr	r3, [fp, #-8]
 7136 01c0 083093E5 		ldr	r3, [r3, #8]
 7137 01c4 233AA0E1 		lsr	r3, r3, #20
 7138              		.loc 1 3543 7
 7139 01c8 18201BE5 		ldr	r2, [fp, #-24]
 7140 01cc 030052E1 		cmp	r2, r3
 7141 01d0 0600008A 		bhi	.L477
3544:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7142              		.loc 1 3544 13 discriminator 1
 7143 01d4 08301BE5 		ldr	r3, [fp, #-8]
 7144 01d8 083093E5 		ldr	r3, [r3, #8]
 7145 01dc 2334A0E1 		lsr	r3, r3, #8
 7146 01e0 5330EBE7 		ubfx	r3, r3, #0, #12
3543:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7147              		.loc 1 3543 51 discriminator 1
 7148 01e4 18201BE5 		ldr	r2, [fp, #-24]
 7149 01e8 030052E1 		cmp	r2, r3
 7150 01ec 0100002A 		bcs	.L478
 7151              	.L477:
3545:../../Source/Kernel/rme_kernel.c ****     {
3546:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3547:../../Source/Kernel/rme_kernel.c **** 
3548:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7152              		.loc 1 3548 16
 7153 01f0 0630E0E3 		mvn	r3, #6
 7154 01f4 0C0000EA 		b	.L468
 7155              	.L478:
3549:../../Source/Kernel/rme_kernel.c ****     }
3550:../../Source/Kernel/rme_kernel.c ****     else
3551:../../Source/Kernel/rme_kernel.c ****     {
3552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3553:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3554:../../Source/Kernel/rme_kernel.c ****     }
3555:../../Source/Kernel/rme_kernel.c **** 
3556:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3557:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Rem->Order))!=0U)
 7156              		.loc 1 3557 14
 7157 01f8 08301BE5 		ldr	r3, [fp, #-8]
 7158 01fc 143093E5 		ldr	r3, [r3, #20]
 7159 0200 7330FFE6 		uxth	r3, r3
 7160              		.loc 1 3557 12
 7161 0204 18201BE5 		ldr	r2, [fp, #-24]
 7162 0208 3233A0E1 		lsr	r3, r2, r3
 7163              		.loc 1 3557 7
 7164 020c 000053E3 		cmp	r3, #0
 7165 0210 0100000A 		beq	.L479
3558:../../Source/Kernel/rme_kernel.c ****     {
3559:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3560:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 190


3561:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7166              		.loc 1 3561 16
 7167 0214 6430E0E3 		mvn	r3, #100
 7168 0218 030000EA 		b	.L468
 7169              	.L479:
3562:../../Source/Kernel/rme_kernel.c ****     }
3563:../../Source/Kernel/rme_kernel.c ****     else
3564:../../Source/Kernel/rme_kernel.c ****     {
3565:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3566:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3567:../../Source/Kernel/rme_kernel.c ****     }
3568:../../Source/Kernel/rme_kernel.c **** 
3569:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3570:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3571:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Unmap(Pgt_Rem,Pos)<0)
 7170              		.loc 1 3571 8
 7171 021c 18101BE5 		ldr	r1, [fp, #-24]
 7172 0220 08001BE5 		ldr	r0, [fp, #-8]
 7173 0224 FEFFFFEB 		bl	__RME_Pgt_Page_Unmap
3572:../../Source/Kernel/rme_kernel.c ****     {
3573:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3574:../../Source/Kernel/rme_kernel.c **** 
3575:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3576:../../Source/Kernel/rme_kernel.c ****     }
3577:../../Source/Kernel/rme_kernel.c ****     else
3578:../../Source/Kernel/rme_kernel.c ****     {
3579:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3580:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3581:../../Source/Kernel/rme_kernel.c ****     }
3582:../../Source/Kernel/rme_kernel.c **** 
3583:../../Source/Kernel/rme_kernel.c ****     return 0;
 7174              		.loc 1 3583 12
 7175 0228 0030A0E3 		mov	r3, #0
 7176              	.L468:
3584:../../Source/Kernel/rme_kernel.c **** }
 7177              		.loc 1 3584 1
 7178 022c 0300A0E1 		mov	r0, r3
 7179 0230 04D04BE2 		sub	sp, fp, #4
 7180              		.cfi_def_cfa 13, 8
 7181              		@ sp needed
 7182 0234 0088BDE8 		pop	{fp, pc}
 7183              		.cfi_endproc
 7184              	.LFE35:
 7186              		.section	.text._RME_Pgt_Con,"ax",%progbits
 7187              		.align	2
 7188              		.syntax unified
 7189              		.arm
 7191              	_RME_Pgt_Con:
 7192              	.LFB36:
3585:../../Source/Kernel/rme_kernel.c **** #endif
3586:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Rem *************************************************/
3587:../../Source/Kernel/rme_kernel.c **** 
3588:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Con ******************************************************
3589:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table into the parent page table, to construct
3590:../../Source/Kernel/rme_kernel.c ****               an address space tree.
3591:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3592:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 191


3593:../../Source/Kernel/rme_kernel.c ****                                          table.
3594:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3595:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
3596:../../Source/Kernel/rme_kernel.c ****                               page table to.
3597:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3598:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3599:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
3600:../../Source/Kernel/rme_kernel.c **** Output      : None.
3601:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3602:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3603:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3604:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Con(struct RME_Cap_Cpt* Cpt,
3605:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3606:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3607:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child,
3608:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Child)
3609:../../Source/Kernel/rme_kernel.c **** {
 7193              		.loc 1 3609 1
 7194              		.cfi_startproc
 7195              		@ args = 4, pretend = 0, frame = 40
 7196              		@ frame_needed = 1, uses_anonymous_args = 0
 7197 0000 00482DE9 		push	{fp, lr}
 7198              		.cfi_def_cfa_offset 8
 7199              		.cfi_offset 11, -8
 7200              		.cfi_offset 14, -4
 7201 0004 04B08DE2 		add	fp, sp, #4
 7202              		.cfi_def_cfa 11, 4
 7203 0008 28D04DE2 		sub	sp, sp, #40
 7204 000c 20000BE5 		str	r0, [fp, #-32]
 7205 0010 24100BE5 		str	r1, [fp, #-36]
 7206 0014 28200BE5 		str	r2, [fp, #-40]
 7207 0018 2C300BE5 		str	r3, [fp, #-44]
3610:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3611:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3612:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
3613:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
3614:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
3615:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3616:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
3617:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
3618:../../Source/Kernel/rme_kernel.c **** #endif
3619:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3620:../../Source/Kernel/rme_kernel.c ****     
3621:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3622:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 7208              		.loc 1 3622 5
 7209 001c 24301BE5 		ldr	r3, [fp, #-36]
 7210 0020 803003E2 		and	r3, r3, #128
 7211 0024 000053E3 		cmp	r3, #0
 7212 0028 1D00001A 		bne	.L481
 7213              		.loc 1 3622 5 is_stmt 0 discriminator 1
 7214 002c 20301BE5 		ldr	r3, [fp, #-32]
 7215 0030 142093E5 		ldr	r2, [r3, #20]
 7216 0034 24301BE5 		ldr	r3, [fp, #-36]
 7217 0038 030052E1 		cmp	r2, r3
 7218 003c 0100008A 		bhi	.L482
 7219              		.loc 1 3622 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 192


 7220 0040 0230E0E3 		mvn	r3, #2
 7221 0044 1A0100EA 		b	.L483
 7222              	.L482:
 7223              		.loc 1 3622 5 discriminator 4
 7224 0048 24301BE5 		ldr	r3, [fp, #-36]
 7225 004c 8322A0E1 		lsl	r2, r3, #5
 7226 0050 20301BE5 		ldr	r3, [fp, #-32]
 7227 0054 0C3093E5 		ldr	r3, [r3, #12]
 7228 0058 033082E0 		add	r3, r2, r3
 7229 005c 08300BE5 		str	r3, [fp, #-8]
 7230 0060 08301BE5 		ldr	r3, [fp, #-8]
 7231 0064 0300A0E1 		mov	r0, r3
 7232 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7233 006c 10000BE5 		str	r0, [fp, #-16]
 7234 0070 10301BE5 		ldr	r3, [fp, #-16]
 7235 0074 2338A0E1 		lsr	r3, r3, #16
 7236 0078 7330EFE6 		uxtb	r3, r3
 7237 007c 020053E3 		cmp	r3, #2
 7238 0080 0100001A 		bne	.L484
 7239              		.loc 1 3622 5 discriminator 5
 7240 0084 0830E0E3 		mvn	r3, #8
 7241 0088 090100EA 		b	.L483
 7242              	.L484:
 7243              		.loc 1 3622 5 discriminator 6
 7244 008c 10301BE5 		ldr	r3, [fp, #-16]
 7245 0090 233CA0E1 		lsr	r3, r3, #24
 7246 0094 040053E3 		cmp	r3, #4
 7247 0098 4100000A 		beq	.L485
 7248              		.loc 1 3622 5 discriminator 7
 7249 009c 0130E0E3 		mvn	r3, #1
 7250 00a0 030100EA 		b	.L483
 7251              	.L481:
 7252              		.loc 1 3622 5 discriminator 2
 7253 00a4 24301BE5 		ldr	r3, [fp, #-36]
 7254 00a8 2324A0E1 		lsr	r2, r3, #8
 7255 00ac 20301BE5 		ldr	r3, [fp, #-32]
 7256 00b0 143093E5 		ldr	r3, [r3, #20]
 7257 00b4 030052E1 		cmp	r2, r3
 7258 00b8 0100003A 		bcc	.L486
 7259              		.loc 1 3622 5 discriminator 8
 7260 00bc 0230E0E3 		mvn	r3, #2
 7261 00c0 FB0000EA 		b	.L483
 7262              	.L486:
 7263              		.loc 1 3622 5 discriminator 9
 7264 00c4 24301BE5 		ldr	r3, [fp, #-36]
 7265 00c8 2334A0E1 		lsr	r3, r3, #8
 7266 00cc 8322A0E1 		lsl	r2, r3, #5
 7267 00d0 20301BE5 		ldr	r3, [fp, #-32]
 7268 00d4 0C3093E5 		ldr	r3, [r3, #12]
 7269 00d8 033082E0 		add	r3, r2, r3
 7270 00dc 08300BE5 		str	r3, [fp, #-8]
 7271 00e0 08301BE5 		ldr	r3, [fp, #-8]
 7272 00e4 0300A0E1 		mov	r0, r3
 7273 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7274 00ec 10000BE5 		str	r0, [fp, #-16]
 7275 00f0 10301BE5 		ldr	r3, [fp, #-16]
 7276 00f4 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 193


 7277 00f8 7330EFE6 		uxtb	r3, r3
 7278 00fc 020053E3 		cmp	r3, #2
 7279 0100 0100001A 		bne	.L487
 7280              		.loc 1 3622 5 discriminator 10
 7281 0104 0830E0E3 		mvn	r3, #8
 7282 0108 E90000EA 		b	.L483
 7283              	.L487:
 7284              		.loc 1 3622 5 discriminator 11
 7285 010c 10301BE5 		ldr	r3, [fp, #-16]
 7286 0110 233CA0E1 		lsr	r3, r3, #24
 7287 0114 030053E3 		cmp	r3, #3
 7288 0118 0100000A 		beq	.L488
 7289              		.loc 1 3622 5 discriminator 12
 7290 011c 0130E0E3 		mvn	r3, #1
 7291 0120 E30000EA 		b	.L483
 7292              	.L488:
 7293              		.loc 1 3622 5 discriminator 13
 7294 0124 24301BE5 		ldr	r3, [fp, #-36]
 7295 0128 7F2003E2 		and	r2, r3, #127
 7296 012c 08301BE5 		ldr	r3, [fp, #-8]
 7297 0130 143093E5 		ldr	r3, [r3, #20]
 7298 0134 030052E1 		cmp	r2, r3
 7299 0138 0100003A 		bcc	.L489
 7300              		.loc 1 3622 5 discriminator 14
 7301 013c 0230E0E3 		mvn	r3, #2
 7302 0140 DB0000EA 		b	.L483
 7303              	.L489:
 7304              		.loc 1 3622 5 discriminator 15
 7305 0144 24301BE5 		ldr	r3, [fp, #-36]
 7306 0148 7F3003E2 		and	r3, r3, #127
 7307 014c 8322A0E1 		lsl	r2, r3, #5
 7308 0150 08301BE5 		ldr	r3, [fp, #-8]
 7309 0154 0C3093E5 		ldr	r3, [r3, #12]
 7310 0158 033082E0 		add	r3, r2, r3
 7311 015c 08300BE5 		str	r3, [fp, #-8]
 7312 0160 08301BE5 		ldr	r3, [fp, #-8]
 7313 0164 0300A0E1 		mov	r0, r3
 7314 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7315 016c 10000BE5 		str	r0, [fp, #-16]
 7316 0170 10301BE5 		ldr	r3, [fp, #-16]
 7317 0174 2338A0E1 		lsr	r3, r3, #16
 7318 0178 7330EFE6 		uxtb	r3, r3
 7319 017c 020053E3 		cmp	r3, #2
 7320 0180 0100001A 		bne	.L490
 7321              		.loc 1 3622 5 discriminator 16
 7322 0184 0830E0E3 		mvn	r3, #8
 7323 0188 C90000EA 		b	.L483
 7324              	.L490:
 7325              		.loc 1 3622 5 discriminator 17
 7326 018c 10301BE5 		ldr	r3, [fp, #-16]
 7327 0190 233CA0E1 		lsr	r3, r3, #24
 7328 0194 040053E3 		cmp	r3, #4
 7329 0198 0100000A 		beq	.L485
 7330              		.loc 1 3622 5 discriminator 18
 7331 019c 0130E0E3 		mvn	r3, #1
 7332 01a0 C30000EA 		b	.L483
 7333              	.L485:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 194


3623:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3624:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 7334              		.loc 1 3624 5 is_stmt 1
 7335 01a4 2C301BE5 		ldr	r3, [fp, #-44]
 7336 01a8 803003E2 		and	r3, r3, #128
 7337 01ac 000053E3 		cmp	r3, #0
 7338 01b0 1D00001A 		bne	.L491
 7339              		.loc 1 3624 5 is_stmt 0 discriminator 1
 7340 01b4 20301BE5 		ldr	r3, [fp, #-32]
 7341 01b8 142093E5 		ldr	r2, [r3, #20]
 7342 01bc 2C301BE5 		ldr	r3, [fp, #-44]
 7343 01c0 030052E1 		cmp	r2, r3
 7344 01c4 0100008A 		bhi	.L492
 7345              		.loc 1 3624 5 discriminator 3
 7346 01c8 0230E0E3 		mvn	r3, #2
 7347 01cc B80000EA 		b	.L483
 7348              	.L492:
 7349              		.loc 1 3624 5 discriminator 4
 7350 01d0 2C301BE5 		ldr	r3, [fp, #-44]
 7351 01d4 8322A0E1 		lsl	r2, r3, #5
 7352 01d8 20301BE5 		ldr	r3, [fp, #-32]
 7353 01dc 0C3093E5 		ldr	r3, [r3, #12]
 7354 01e0 033082E0 		add	r3, r2, r3
 7355 01e4 0C300BE5 		str	r3, [fp, #-12]
 7356 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 7357 01ec 0300A0E1 		mov	r0, r3
 7358 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7359 01f4 10000BE5 		str	r0, [fp, #-16]
 7360 01f8 10301BE5 		ldr	r3, [fp, #-16]
 7361 01fc 2338A0E1 		lsr	r3, r3, #16
 7362 0200 7330EFE6 		uxtb	r3, r3
 7363 0204 020053E3 		cmp	r3, #2
 7364 0208 0100001A 		bne	.L493
 7365              		.loc 1 3624 5 discriminator 5
 7366 020c 0830E0E3 		mvn	r3, #8
 7367 0210 A70000EA 		b	.L483
 7368              	.L493:
 7369              		.loc 1 3624 5 discriminator 6
 7370 0214 10301BE5 		ldr	r3, [fp, #-16]
 7371 0218 233CA0E1 		lsr	r3, r3, #24
 7372 021c 040053E3 		cmp	r3, #4
 7373 0220 4100000A 		beq	.L494
 7374              		.loc 1 3624 5 discriminator 7
 7375 0224 0130E0E3 		mvn	r3, #1
 7376 0228 A10000EA 		b	.L483
 7377              	.L491:
 7378              		.loc 1 3624 5 discriminator 2
 7379 022c 2C301BE5 		ldr	r3, [fp, #-44]
 7380 0230 2324A0E1 		lsr	r2, r3, #8
 7381 0234 20301BE5 		ldr	r3, [fp, #-32]
 7382 0238 143093E5 		ldr	r3, [r3, #20]
 7383 023c 030052E1 		cmp	r2, r3
 7384 0240 0100003A 		bcc	.L495
 7385              		.loc 1 3624 5 discriminator 8
 7386 0244 0230E0E3 		mvn	r3, #2
 7387 0248 990000EA 		b	.L483
 7388              	.L495:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 195


 7389              		.loc 1 3624 5 discriminator 9
 7390 024c 2C301BE5 		ldr	r3, [fp, #-44]
 7391 0250 2334A0E1 		lsr	r3, r3, #8
 7392 0254 8322A0E1 		lsl	r2, r3, #5
 7393 0258 20301BE5 		ldr	r3, [fp, #-32]
 7394 025c 0C3093E5 		ldr	r3, [r3, #12]
 7395 0260 033082E0 		add	r3, r2, r3
 7396 0264 0C300BE5 		str	r3, [fp, #-12]
 7397 0268 0C301BE5 		ldr	r3, [fp, #-12]
 7398 026c 0300A0E1 		mov	r0, r3
 7399 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7400 0274 10000BE5 		str	r0, [fp, #-16]
 7401 0278 10301BE5 		ldr	r3, [fp, #-16]
 7402 027c 2338A0E1 		lsr	r3, r3, #16
 7403 0280 7330EFE6 		uxtb	r3, r3
 7404 0284 020053E3 		cmp	r3, #2
 7405 0288 0100001A 		bne	.L496
 7406              		.loc 1 3624 5 discriminator 10
 7407 028c 0830E0E3 		mvn	r3, #8
 7408 0290 870000EA 		b	.L483
 7409              	.L496:
 7410              		.loc 1 3624 5 discriminator 11
 7411 0294 10301BE5 		ldr	r3, [fp, #-16]
 7412 0298 233CA0E1 		lsr	r3, r3, #24
 7413 029c 030053E3 		cmp	r3, #3
 7414 02a0 0100000A 		beq	.L497
 7415              		.loc 1 3624 5 discriminator 12
 7416 02a4 0130E0E3 		mvn	r3, #1
 7417 02a8 810000EA 		b	.L483
 7418              	.L497:
 7419              		.loc 1 3624 5 discriminator 13
 7420 02ac 2C301BE5 		ldr	r3, [fp, #-44]
 7421 02b0 7F2003E2 		and	r2, r3, #127
 7422 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 7423 02b8 143093E5 		ldr	r3, [r3, #20]
 7424 02bc 030052E1 		cmp	r2, r3
 7425 02c0 0100003A 		bcc	.L498
 7426              		.loc 1 3624 5 discriminator 14
 7427 02c4 0230E0E3 		mvn	r3, #2
 7428 02c8 790000EA 		b	.L483
 7429              	.L498:
 7430              		.loc 1 3624 5 discriminator 15
 7431 02cc 2C301BE5 		ldr	r3, [fp, #-44]
 7432 02d0 7F3003E2 		and	r3, r3, #127
 7433 02d4 8322A0E1 		lsl	r2, r3, #5
 7434 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 7435 02dc 0C3093E5 		ldr	r3, [r3, #12]
 7436 02e0 033082E0 		add	r3, r2, r3
 7437 02e4 0C300BE5 		str	r3, [fp, #-12]
 7438 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 7439 02ec 0300A0E1 		mov	r0, r3
 7440 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7441 02f4 10000BE5 		str	r0, [fp, #-16]
 7442 02f8 10301BE5 		ldr	r3, [fp, #-16]
 7443 02fc 2338A0E1 		lsr	r3, r3, #16
 7444 0300 7330EFE6 		uxtb	r3, r3
 7445 0304 020053E3 		cmp	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 196


 7446 0308 0100001A 		bne	.L499
 7447              		.loc 1 3624 5 discriminator 16
 7448 030c 0830E0E3 		mvn	r3, #8
 7449 0310 670000EA 		b	.L483
 7450              	.L499:
 7451              		.loc 1 3624 5 discriminator 17
 7452 0314 10301BE5 		ldr	r3, [fp, #-16]
 7453 0318 233CA0E1 		lsr	r3, r3, #24
 7454 031c 040053E3 		cmp	r3, #4
 7455 0320 0100000A 		beq	.L494
 7456              		.loc 1 3624 5 discriminator 18
 7457 0324 0130E0E3 		mvn	r3, #1
 7458 0328 610000EA 		b	.L483
 7459              	.L494:
3625:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3626:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3627:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_CON_PARENT);
 7460              		.loc 1 3627 5 is_stmt 1
 7461 032c 08301BE5 		ldr	r3, [fp, #-8]
 7462 0330 083093E5 		ldr	r3, [r3, #8]
 7463 0334 103003E2 		and	r3, r3, #16
 7464 0338 000053E3 		cmp	r3, #0
 7465 033c 0100001A 		bne	.L500
 7466              		.loc 1 3627 5 is_stmt 0 discriminator 1
 7467 0340 0630E0E3 		mvn	r3, #6
 7468 0344 5A0000EA 		b	.L483
 7469              	.L500:
3628:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 7470              		.loc 1 3628 5 is_stmt 1
 7471 0348 0C301BE5 		ldr	r3, [fp, #-12]
 7472 034c 083093E5 		ldr	r3, [r3, #8]
 7473 0350 083003E2 		and	r3, r3, #8
 7474 0354 000053E3 		cmp	r3, #0
 7475 0358 0100001A 		bne	.L501
 7476              		.loc 1 3628 5 is_stmt 0 discriminator 1
 7477 035c 0630E0E3 		mvn	r3, #6
 7478 0360 530000EA 		b	.L483
 7479              	.L501:
3629:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3630:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 7480              		.loc 1 3630 13 is_stmt 1
 7481 0364 08301BE5 		ldr	r3, [fp, #-8]
 7482 0368 083093E5 		ldr	r3, [r3, #8]
 7483 036c 233AA0E1 		lsr	r3, r3, #20
 7484              		.loc 1 3630 7
 7485 0370 28201BE5 		ldr	r2, [fp, #-40]
 7486 0374 030052E1 		cmp	r2, r3
 7487 0378 0600008A 		bhi	.L502
3631:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7488              		.loc 1 3631 13 discriminator 1
 7489 037c 08301BE5 		ldr	r3, [fp, #-8]
 7490 0380 083093E5 		ldr	r3, [r3, #8]
 7491 0384 2334A0E1 		lsr	r3, r3, #8
 7492 0388 5330EBE7 		ubfx	r3, r3, #0, #12
3630:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7493              		.loc 1 3630 54 discriminator 1
 7494 038c 28201BE5 		ldr	r2, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 197


 7495 0390 030052E1 		cmp	r2, r3
 7496 0394 0100002A 		bcs	.L503
 7497              	.L502:
3632:../../Source/Kernel/rme_kernel.c ****     {
3633:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3634:../../Source/Kernel/rme_kernel.c **** 
3635:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7498              		.loc 1 3635 16
 7499 0398 0630E0E3 		mvn	r3, #6
 7500 039c 440000EA 		b	.L483
 7501              	.L503:
3636:../../Source/Kernel/rme_kernel.c ****     }
3637:../../Source/Kernel/rme_kernel.c ****     else
3638:../../Source/Kernel/rme_kernel.c ****     {
3639:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3640:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3641:../../Source/Kernel/rme_kernel.c ****     }
3642:../../Source/Kernel/rme_kernel.c ****     
3643:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
3644:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 7502              		.loc 1 3644 14
 7503 03a0 08301BE5 		ldr	r3, [fp, #-8]
 7504 03a4 143093E5 		ldr	r3, [r3, #20]
 7505 03a8 7330FFE6 		uxth	r3, r3
 7506              		.loc 1 3644 12
 7507 03ac 28201BE5 		ldr	r2, [fp, #-40]
 7508 03b0 3233A0E1 		lsr	r3, r2, r3
 7509              		.loc 1 3644 7
 7510 03b4 000053E3 		cmp	r3, #0
 7511 03b8 0100000A 		beq	.L504
3645:../../Source/Kernel/rme_kernel.c ****     {
3646:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3647:../../Source/Kernel/rme_kernel.c **** 
3648:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7512              		.loc 1 3648 16
 7513 03bc 6430E0E3 		mvn	r3, #100
 7514 03c0 3B0000EA 		b	.L483
 7515              	.L504:
3649:../../Source/Kernel/rme_kernel.c ****     }
3650:../../Source/Kernel/rme_kernel.c ****     else
3651:../../Source/Kernel/rme_kernel.c ****     {
3652:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3653:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3654:../../Source/Kernel/rme_kernel.c ****     }
3655:../../Source/Kernel/rme_kernel.c ****     
3656:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
3657:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 7516              		.loc 1 3657 17
 7517 03c4 0C301BE5 		ldr	r3, [fp, #-12]
 7518 03c8 143093E5 		ldr	r3, [r3, #20]
 7519 03cc 7320FFE6 		uxth	r2, r3
 7520              		.loc 1 3657 49
 7521 03d0 0C301BE5 		ldr	r3, [fp, #-12]
 7522 03d4 143093E5 		ldr	r3, [r3, #20]
 7523 03d8 2338A0E1 		lsr	r3, r3, #16
 7524              		.loc 1 3657 16
 7525 03dc 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 198


 7526 03e0 14300BE5 		str	r3, [fp, #-20]
3658:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 7527              		.loc 1 3658 18
 7528 03e4 08301BE5 		ldr	r3, [fp, #-8]
 7529 03e8 143093E5 		ldr	r3, [r3, #20]
 7530              		.loc 1 3658 17
 7531 03ec 2338A0E1 		lsr	r3, r3, #16
 7532 03f0 18300BE5 		str	r3, [fp, #-24]
3659:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 7533              		.loc 1 3659 7
 7534 03f4 18201BE5 		ldr	r2, [fp, #-24]
 7535 03f8 14301BE5 		ldr	r3, [fp, #-20]
 7536 03fc 030052E1 		cmp	r2, r3
 7537 0400 0100002A 		bcs	.L505
3660:../../Source/Kernel/rme_kernel.c ****     {
3661:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3662:../../Source/Kernel/rme_kernel.c ****         
3663:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7538              		.loc 1 3663 16
 7539 0404 6430E0E3 		mvn	r3, #100
 7540 0408 290000EA 		b	.L483
 7541              	.L505:
3664:../../Source/Kernel/rme_kernel.c ****     }
3665:../../Source/Kernel/rme_kernel.c ****     else
3666:../../Source/Kernel/rme_kernel.c ****     {
3667:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3668:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3669:../../Source/Kernel/rme_kernel.c ****     }
3670:../../Source/Kernel/rme_kernel.c **** 
3671:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3672:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
3673:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
3674:../../Source/Kernel/rme_kernel.c ****     {
3675:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3676:../../Source/Kernel/rme_kernel.c ****         
3677:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
3678:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
3679:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
3680:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
3681:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
3682:../../Source/Kernel/rme_kernel.c ****         {
3683:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3684:../../Source/Kernel/rme_kernel.c ****             
3685:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3686:../../Source/Kernel/rme_kernel.c ****         }
3687:../../Source/Kernel/rme_kernel.c ****         else
3688:../../Source/Kernel/rme_kernel.c ****         {
3689:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3690:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3691:../../Source/Kernel/rme_kernel.c ****         }
3692:../../Source/Kernel/rme_kernel.c ****         
3693:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
3694:../../Source/Kernel/rme_kernel.c ****         
3695:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
3696:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
3697:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
3698:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 199


3699:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
3700:../../Source/Kernel/rme_kernel.c ****         {
3701:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3702:../../Source/Kernel/rme_kernel.c ****             
3703:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3704:../../Source/Kernel/rme_kernel.c ****             {
3705:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3706:../../Source/Kernel/rme_kernel.c **** 
3707:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3708:../../Source/Kernel/rme_kernel.c ****             }
3709:../../Source/Kernel/rme_kernel.c ****             else
3710:../../Source/Kernel/rme_kernel.c ****             {
3711:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3712:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3713:../../Source/Kernel/rme_kernel.c ****             }
3714:../../Source/Kernel/rme_kernel.c ****         }
3715:../../Source/Kernel/rme_kernel.c ****         else
3716:../../Source/Kernel/rme_kernel.c ****         {
3717:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3718:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3719:../../Source/Kernel/rme_kernel.c ****         }
3720:../../Source/Kernel/rme_kernel.c ****     }
3721:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, check exempt */
3722:../../Source/Kernel/rme_kernel.c ****     else
3723:../../Source/Kernel/rme_kernel.c ****     {
3724:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3725:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3726:../../Source/Kernel/rme_kernel.c ****     }
3727:../../Source/Kernel/rme_kernel.c **** #else
3728:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3729:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 7542              		.loc 1 3729 7
 7543 040c 18201BE5 		ldr	r2, [fp, #-24]
 7544 0410 14301BE5 		ldr	r3, [fp, #-20]
 7545 0414 030052E1 		cmp	r2, r3
 7546 0418 0100000A 		beq	.L506
3730:../../Source/Kernel/rme_kernel.c ****     {
3731:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3732:../../Source/Kernel/rme_kernel.c **** 
3733:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7547              		.loc 1 3733 16
 7548 041c 6430E0E3 		mvn	r3, #100
 7549 0420 230000EA 		b	.L483
 7550              	.L506:
3734:../../Source/Kernel/rme_kernel.c ****     }
3735:../../Source/Kernel/rme_kernel.c ****     else
3736:../../Source/Kernel/rme_kernel.c ****     {
3737:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3738:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3739:../../Source/Kernel/rme_kernel.c ****     }
3740:../../Source/Kernel/rme_kernel.c **** #endif
3741:../../Source/Kernel/rme_kernel.c **** 
3742:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3743:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3744:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 7551              		.loc 1 3744 8
 7552 0424 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 200


 7553 0428 0C201BE5 		ldr	r2, [fp, #-12]
 7554 042c 28101BE5 		ldr	r1, [fp, #-40]
 7555 0430 08001BE5 		ldr	r0, [fp, #-8]
 7556 0434 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3745:../../Source/Kernel/rme_kernel.c ****     {
3746:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3747:../../Source/Kernel/rme_kernel.c **** 
3748:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3749:../../Source/Kernel/rme_kernel.c ****     }
3750:../../Source/Kernel/rme_kernel.c ****     else
3751:../../Source/Kernel/rme_kernel.c ****     {
3752:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3753:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3754:../../Source/Kernel/rme_kernel.c ****     }
3755:../../Source/Kernel/rme_kernel.c ****     
3756:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3757:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 7557              		.loc 1 3757 14
 7558 0438 08301BE5 		ldr	r3, [fp, #-8]
 7559 043c 003093E5 		ldr	r3, [r3]
 7560 0440 7330FFE6 		uxth	r3, r3
 7561 0444 000053E3 		cmp	r3, #0
 7562 0448 0200000A 		beq	.L507
 7563              		.loc 1 3757 14 is_stmt 0 discriminator 1
 7564 044c 08301BE5 		ldr	r3, [fp, #-8]
 7565 0450 043093E5 		ldr	r3, [r3, #4]
 7566 0454 000000EA 		b	.L508
 7567              	.L507:
 7568              		.loc 1 3757 14 discriminator 2
 7569 0458 08301BE5 		ldr	r3, [fp, #-8]
 7570              	.L508:
 7571              		.loc 1 3757 13 is_stmt 1 discriminator 4
 7572 045c 1C300BE5 		str	r3, [fp, #-28]
3758:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7573              		.loc 1 3758 5 discriminator 4
 7574 0460 1C301BE5 		ldr	r3, [fp, #-28]
 7575 0464 043083E2 		add	r3, r3, #4
 7576 0468 0110A0E3 		mov	r1, #1
 7577 046c 0300A0E1 		mov	r0, r3
 7578 0470 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3759:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 7579              		.loc 1 3759 14 discriminator 4
 7580 0474 0C301BE5 		ldr	r3, [fp, #-12]
 7581 0478 003093E5 		ldr	r3, [r3]
 7582 047c 7330FFE6 		uxth	r3, r3
 7583 0480 000053E3 		cmp	r3, #0
 7584 0484 0200000A 		beq	.L509
 7585              		.loc 1 3759 14 is_stmt 0 discriminator 1
 7586 0488 0C301BE5 		ldr	r3, [fp, #-12]
 7587 048c 043093E5 		ldr	r3, [r3, #4]
 7588 0490 000000EA 		b	.L510
 7589              	.L509:
 7590              		.loc 1 3759 14 discriminator 2
 7591 0494 0C301BE5 		ldr	r3, [fp, #-12]
 7592              	.L510:
 7593              		.loc 1 3759 13 is_stmt 1 discriminator 4
 7594 0498 1C300BE5 		str	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 201


3760:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7595              		.loc 1 3760 5 discriminator 4
 7596 049c 1C301BE5 		ldr	r3, [fp, #-28]
 7597 04a0 043083E2 		add	r3, r3, #4
 7598 04a4 0110A0E3 		mov	r1, #1
 7599 04a8 0300A0E1 		mov	r0, r3
 7600 04ac FEFFFFEB 		bl	_RME_Fetch_Add_Single
3761:../../Source/Kernel/rme_kernel.c **** 
3762:../../Source/Kernel/rme_kernel.c ****     return 0;
 7601              		.loc 1 3762 12 discriminator 4
 7602 04b0 0030A0E3 		mov	r3, #0
 7603              	.L483:
3763:../../Source/Kernel/rme_kernel.c **** }
 7604              		.loc 1 3763 1
 7605 04b4 0300A0E1 		mov	r0, r3
 7606 04b8 04D04BE2 		sub	sp, fp, #4
 7607              		.cfi_def_cfa 13, 8
 7608              		@ sp needed
 7609 04bc 0088BDE8 		pop	{fp, pc}
 7610              		.cfi_endproc
 7611              	.LFE36:
 7613              		.section	.text._RME_Pgt_Des,"ax",%progbits
 7614              		.align	2
 7615              		.syntax unified
 7616              		.arm
 7618              	_RME_Pgt_Des:
 7619              	.LFB37:
3764:../../Source/Kernel/rme_kernel.c **** #endif
3765:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Con *************************************************/
3766:../../Source/Kernel/rme_kernel.c **** 
3767:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Des ******************************************************
3768:../../Source/Kernel/rme_kernel.c **** Description : Unmap a child page table from the parent page table, destructing
3769:../../Source/Kernel/rme_kernel.c ****               the address space tree.
3770:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3771:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page
3772:../../Source/Kernel/rme_kernel.c ****                                          table.
3773:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3774:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to position unmap
3775:../../Source/Kernel/rme_kernel.c ****                               the child page table from. The child page table
3776:../../Source/Kernel/rme_kernel.c ****                               must be there for the destruction to succeed.
3777:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3778:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3779:../../Source/Kernel/rme_kernel.c **** Output      : None.
3780:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3781:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3782:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3783:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Des(struct RME_Cap_Cpt* Cpt, 
3784:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3785:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3786:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child)
3787:../../Source/Kernel/rme_kernel.c **** {
 7620              		.loc 1 3787 1
 7621              		.cfi_startproc
 7622              		@ args = 0, pretend = 0, frame = 32
 7623              		@ frame_needed = 1, uses_anonymous_args = 0
 7624 0000 00482DE9 		push	{fp, lr}
 7625              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 202


 7626              		.cfi_offset 11, -8
 7627              		.cfi_offset 14, -4
 7628 0004 04B08DE2 		add	fp, sp, #4
 7629              		.cfi_def_cfa 11, 4
 7630 0008 20D04DE2 		sub	sp, sp, #32
 7631 000c 18000BE5 		str	r0, [fp, #-24]
 7632 0010 1C100BE5 		str	r1, [fp, #-28]
 7633 0014 20200BE5 		str	r2, [fp, #-32]
 7634 0018 24300BE5 		str	r3, [fp, #-36]
3788:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3789:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3790:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Root;
3791:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3792:../../Source/Kernel/rme_kernel.c ****     
3793:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3794:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_CPT,
 7635              		.loc 1 3794 5
 7636 001c 1C301BE5 		ldr	r3, [fp, #-28]
 7637 0020 803003E2 		and	r3, r3, #128
 7638 0024 000053E3 		cmp	r3, #0
 7639 0028 1D00001A 		bne	.L512
 7640              		.loc 1 3794 5 is_stmt 0 discriminator 1
 7641 002c 18301BE5 		ldr	r3, [fp, #-24]
 7642 0030 142093E5 		ldr	r2, [r3, #20]
 7643 0034 1C301BE5 		ldr	r3, [fp, #-28]
 7644 0038 030052E1 		cmp	r2, r3
 7645 003c 0100008A 		bhi	.L513
 7646              		.loc 1 3794 5 discriminator 3
 7647 0040 0230E0E3 		mvn	r3, #2
 7648 0044 060100EA 		b	.L514
 7649              	.L513:
 7650              		.loc 1 3794 5 discriminator 4
 7651 0048 1C301BE5 		ldr	r3, [fp, #-28]
 7652 004c 8322A0E1 		lsl	r2, r3, #5
 7653 0050 18301BE5 		ldr	r3, [fp, #-24]
 7654 0054 0C3093E5 		ldr	r3, [r3, #12]
 7655 0058 033082E0 		add	r3, r2, r3
 7656 005c 08300BE5 		str	r3, [fp, #-8]
 7657 0060 08301BE5 		ldr	r3, [fp, #-8]
 7658 0064 0300A0E1 		mov	r0, r3
 7659 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7660 006c 10000BE5 		str	r0, [fp, #-16]
 7661 0070 10301BE5 		ldr	r3, [fp, #-16]
 7662 0074 2338A0E1 		lsr	r3, r3, #16
 7663 0078 7330EFE6 		uxtb	r3, r3
 7664 007c 020053E3 		cmp	r3, #2
 7665 0080 0100001A 		bne	.L515
 7666              		.loc 1 3794 5 discriminator 5
 7667 0084 0830E0E3 		mvn	r3, #8
 7668 0088 F50000EA 		b	.L514
 7669              	.L515:
 7670              		.loc 1 3794 5 discriminator 6
 7671 008c 10301BE5 		ldr	r3, [fp, #-16]
 7672 0090 233CA0E1 		lsr	r3, r3, #24
 7673 0094 030053E3 		cmp	r3, #3
 7674 0098 4100000A 		beq	.L516
 7675              		.loc 1 3794 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 203


 7676 009c 0130E0E3 		mvn	r3, #1
 7677 00a0 EF0000EA 		b	.L514
 7678              	.L512:
 7679              		.loc 1 3794 5 discriminator 2
 7680 00a4 1C301BE5 		ldr	r3, [fp, #-28]
 7681 00a8 2324A0E1 		lsr	r2, r3, #8
 7682 00ac 18301BE5 		ldr	r3, [fp, #-24]
 7683 00b0 143093E5 		ldr	r3, [r3, #20]
 7684 00b4 030052E1 		cmp	r2, r3
 7685 00b8 0100003A 		bcc	.L517
 7686              		.loc 1 3794 5 discriminator 8
 7687 00bc 0230E0E3 		mvn	r3, #2
 7688 00c0 E70000EA 		b	.L514
 7689              	.L517:
 7690              		.loc 1 3794 5 discriminator 9
 7691 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 7692 00c8 2334A0E1 		lsr	r3, r3, #8
 7693 00cc 8322A0E1 		lsl	r2, r3, #5
 7694 00d0 18301BE5 		ldr	r3, [fp, #-24]
 7695 00d4 0C3093E5 		ldr	r3, [r3, #12]
 7696 00d8 033082E0 		add	r3, r2, r3
 7697 00dc 08300BE5 		str	r3, [fp, #-8]
 7698 00e0 08301BE5 		ldr	r3, [fp, #-8]
 7699 00e4 0300A0E1 		mov	r0, r3
 7700 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7701 00ec 10000BE5 		str	r0, [fp, #-16]
 7702 00f0 10301BE5 		ldr	r3, [fp, #-16]
 7703 00f4 2338A0E1 		lsr	r3, r3, #16
 7704 00f8 7330EFE6 		uxtb	r3, r3
 7705 00fc 020053E3 		cmp	r3, #2
 7706 0100 0100001A 		bne	.L518
 7707              		.loc 1 3794 5 discriminator 10
 7708 0104 0830E0E3 		mvn	r3, #8
 7709 0108 D50000EA 		b	.L514
 7710              	.L518:
 7711              		.loc 1 3794 5 discriminator 11
 7712 010c 10301BE5 		ldr	r3, [fp, #-16]
 7713 0110 233CA0E1 		lsr	r3, r3, #24
 7714 0114 030053E3 		cmp	r3, #3
 7715 0118 0100000A 		beq	.L519
 7716              		.loc 1 3794 5 discriminator 12
 7717 011c 0130E0E3 		mvn	r3, #1
 7718 0120 CF0000EA 		b	.L514
 7719              	.L519:
 7720              		.loc 1 3794 5 discriminator 13
 7721 0124 1C301BE5 		ldr	r3, [fp, #-28]
 7722 0128 7F2003E2 		and	r2, r3, #127
 7723 012c 08301BE5 		ldr	r3, [fp, #-8]
 7724 0130 143093E5 		ldr	r3, [r3, #20]
 7725 0134 030052E1 		cmp	r2, r3
 7726 0138 0100003A 		bcc	.L520
 7727              		.loc 1 3794 5 discriminator 14
 7728 013c 0230E0E3 		mvn	r3, #2
 7729 0140 C70000EA 		b	.L514
 7730              	.L520:
 7731              		.loc 1 3794 5 discriminator 15
 7732 0144 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 204


 7733 0148 7F3003E2 		and	r3, r3, #127
 7734 014c 8322A0E1 		lsl	r2, r3, #5
 7735 0150 08301BE5 		ldr	r3, [fp, #-8]
 7736 0154 0C3093E5 		ldr	r3, [r3, #12]
 7737 0158 033082E0 		add	r3, r2, r3
 7738 015c 08300BE5 		str	r3, [fp, #-8]
 7739 0160 08301BE5 		ldr	r3, [fp, #-8]
 7740 0164 0300A0E1 		mov	r0, r3
 7741 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7742 016c 10000BE5 		str	r0, [fp, #-16]
 7743 0170 10301BE5 		ldr	r3, [fp, #-16]
 7744 0174 2338A0E1 		lsr	r3, r3, #16
 7745 0178 7330EFE6 		uxtb	r3, r3
 7746 017c 020053E3 		cmp	r3, #2
 7747 0180 0100001A 		bne	.L521
 7748              		.loc 1 3794 5 discriminator 16
 7749 0184 0830E0E3 		mvn	r3, #8
 7750 0188 B50000EA 		b	.L514
 7751              	.L521:
 7752              		.loc 1 3794 5 discriminator 17
 7753 018c 10301BE5 		ldr	r3, [fp, #-16]
 7754 0190 233CA0E1 		lsr	r3, r3, #24
 7755 0194 030053E3 		cmp	r3, #3
 7756 0198 0100000A 		beq	.L516
 7757              		.loc 1 3794 5 discriminator 18
 7758 019c 0130E0E3 		mvn	r3, #1
 7759 01a0 AF0000EA 		b	.L514
 7760              	.L516:
3795:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3796:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_CPT,
 7761              		.loc 1 3796 5 is_stmt 1
 7762 01a4 24301BE5 		ldr	r3, [fp, #-36]
 7763 01a8 803003E2 		and	r3, r3, #128
 7764 01ac 000053E3 		cmp	r3, #0
 7765 01b0 1D00001A 		bne	.L522
 7766              		.loc 1 3796 5 is_stmt 0 discriminator 1
 7767 01b4 18301BE5 		ldr	r3, [fp, #-24]
 7768 01b8 142093E5 		ldr	r2, [r3, #20]
 7769 01bc 24301BE5 		ldr	r3, [fp, #-36]
 7770 01c0 030052E1 		cmp	r2, r3
 7771 01c4 0100008A 		bhi	.L523
 7772              		.loc 1 3796 5 discriminator 3
 7773 01c8 0230E0E3 		mvn	r3, #2
 7774 01cc A40000EA 		b	.L514
 7775              	.L523:
 7776              		.loc 1 3796 5 discriminator 4
 7777 01d0 24301BE5 		ldr	r3, [fp, #-36]
 7778 01d4 8322A0E1 		lsl	r2, r3, #5
 7779 01d8 18301BE5 		ldr	r3, [fp, #-24]
 7780 01dc 0C3093E5 		ldr	r3, [r3, #12]
 7781 01e0 033082E0 		add	r3, r2, r3
 7782 01e4 0C300BE5 		str	r3, [fp, #-12]
 7783 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 7784 01ec 0300A0E1 		mov	r0, r3
 7785 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7786 01f4 10000BE5 		str	r0, [fp, #-16]
 7787 01f8 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 205


 7788 01fc 2338A0E1 		lsr	r3, r3, #16
 7789 0200 7330EFE6 		uxtb	r3, r3
 7790 0204 020053E3 		cmp	r3, #2
 7791 0208 0100001A 		bne	.L524
 7792              		.loc 1 3796 5 discriminator 5
 7793 020c 0830E0E3 		mvn	r3, #8
 7794 0210 930000EA 		b	.L514
 7795              	.L524:
 7796              		.loc 1 3796 5 discriminator 6
 7797 0214 10301BE5 		ldr	r3, [fp, #-16]
 7798 0218 233CA0E1 		lsr	r3, r3, #24
 7799 021c 030053E3 		cmp	r3, #3
 7800 0220 4100000A 		beq	.L525
 7801              		.loc 1 3796 5 discriminator 7
 7802 0224 0130E0E3 		mvn	r3, #1
 7803 0228 8D0000EA 		b	.L514
 7804              	.L522:
 7805              		.loc 1 3796 5 discriminator 2
 7806 022c 24301BE5 		ldr	r3, [fp, #-36]
 7807 0230 2324A0E1 		lsr	r2, r3, #8
 7808 0234 18301BE5 		ldr	r3, [fp, #-24]
 7809 0238 143093E5 		ldr	r3, [r3, #20]
 7810 023c 030052E1 		cmp	r2, r3
 7811 0240 0100003A 		bcc	.L526
 7812              		.loc 1 3796 5 discriminator 8
 7813 0244 0230E0E3 		mvn	r3, #2
 7814 0248 850000EA 		b	.L514
 7815              	.L526:
 7816              		.loc 1 3796 5 discriminator 9
 7817 024c 24301BE5 		ldr	r3, [fp, #-36]
 7818 0250 2334A0E1 		lsr	r3, r3, #8
 7819 0254 8322A0E1 		lsl	r2, r3, #5
 7820 0258 18301BE5 		ldr	r3, [fp, #-24]
 7821 025c 0C3093E5 		ldr	r3, [r3, #12]
 7822 0260 033082E0 		add	r3, r2, r3
 7823 0264 0C300BE5 		str	r3, [fp, #-12]
 7824 0268 0C301BE5 		ldr	r3, [fp, #-12]
 7825 026c 0300A0E1 		mov	r0, r3
 7826 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7827 0274 10000BE5 		str	r0, [fp, #-16]
 7828 0278 10301BE5 		ldr	r3, [fp, #-16]
 7829 027c 2338A0E1 		lsr	r3, r3, #16
 7830 0280 7330EFE6 		uxtb	r3, r3
 7831 0284 020053E3 		cmp	r3, #2
 7832 0288 0100001A 		bne	.L527
 7833              		.loc 1 3796 5 discriminator 10
 7834 028c 0830E0E3 		mvn	r3, #8
 7835 0290 730000EA 		b	.L514
 7836              	.L527:
 7837              		.loc 1 3796 5 discriminator 11
 7838 0294 10301BE5 		ldr	r3, [fp, #-16]
 7839 0298 233CA0E1 		lsr	r3, r3, #24
 7840 029c 030053E3 		cmp	r3, #3
 7841 02a0 0100000A 		beq	.L528
 7842              		.loc 1 3796 5 discriminator 12
 7843 02a4 0130E0E3 		mvn	r3, #1
 7844 02a8 6D0000EA 		b	.L514
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 206


 7845              	.L528:
 7846              		.loc 1 3796 5 discriminator 13
 7847 02ac 24301BE5 		ldr	r3, [fp, #-36]
 7848 02b0 7F2003E2 		and	r2, r3, #127
 7849 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 7850 02b8 143093E5 		ldr	r3, [r3, #20]
 7851 02bc 030052E1 		cmp	r2, r3
 7852 02c0 0100003A 		bcc	.L529
 7853              		.loc 1 3796 5 discriminator 14
 7854 02c4 0230E0E3 		mvn	r3, #2
 7855 02c8 650000EA 		b	.L514
 7856              	.L529:
 7857              		.loc 1 3796 5 discriminator 15
 7858 02cc 24301BE5 		ldr	r3, [fp, #-36]
 7859 02d0 7F3003E2 		and	r3, r3, #127
 7860 02d4 8322A0E1 		lsl	r2, r3, #5
 7861 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 7862 02dc 0C3093E5 		ldr	r3, [r3, #12]
 7863 02e0 033082E0 		add	r3, r2, r3
 7864 02e4 0C300BE5 		str	r3, [fp, #-12]
 7865 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 7866 02ec 0300A0E1 		mov	r0, r3
 7867 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7868 02f4 10000BE5 		str	r0, [fp, #-16]
 7869 02f8 10301BE5 		ldr	r3, [fp, #-16]
 7870 02fc 2338A0E1 		lsr	r3, r3, #16
 7871 0300 7330EFE6 		uxtb	r3, r3
 7872 0304 020053E3 		cmp	r3, #2
 7873 0308 0100001A 		bne	.L530
 7874              		.loc 1 3796 5 discriminator 16
 7875 030c 0830E0E3 		mvn	r3, #8
 7876 0310 530000EA 		b	.L514
 7877              	.L530:
 7878              		.loc 1 3796 5 discriminator 17
 7879 0314 10301BE5 		ldr	r3, [fp, #-16]
 7880 0318 233CA0E1 		lsr	r3, r3, #24
 7881 031c 030053E3 		cmp	r3, #3
 7882 0320 0100000A 		beq	.L525
 7883              		.loc 1 3796 5 discriminator 18
 7884 0324 0130E0E3 		mvn	r3, #1
 7885 0328 4D0000EA 		b	.L514
 7886              	.L525:
3797:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3798:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3799:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_DES_PARENT);
 7887              		.loc 1 3799 5 is_stmt 1
 7888 032c 08301BE5 		ldr	r3, [fp, #-8]
 7889 0330 083093E5 		ldr	r3, [r3, #8]
 7890 0334 203003E2 		and	r3, r3, #32
 7891 0338 000053E3 		cmp	r3, #0
 7892 033c 0100001A 		bne	.L531
 7893              		.loc 1 3799 5 is_stmt 0 discriminator 1
 7894 0340 0630E0E3 		mvn	r3, #6
 7895 0344 460000EA 		b	.L514
 7896              	.L531:
3800:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 7897              		.loc 1 3800 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 207


 7898 0348 0C301BE5 		ldr	r3, [fp, #-12]
 7899 034c 083093E5 		ldr	r3, [r3, #8]
 7900 0350 083003E2 		and	r3, r3, #8
 7901 0354 000053E3 		cmp	r3, #0
 7902 0358 0100001A 		bne	.L532
 7903              		.loc 1 3800 5 is_stmt 0 discriminator 1
 7904 035c 0630E0E3 		mvn	r3, #6
 7905 0360 3F0000EA 		b	.L514
 7906              	.L532:
3801:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3802:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 7907              		.loc 1 3802 13 is_stmt 1
 7908 0364 08301BE5 		ldr	r3, [fp, #-8]
 7909 0368 083093E5 		ldr	r3, [r3, #8]
 7910 036c 233AA0E1 		lsr	r3, r3, #20
 7911              		.loc 1 3802 7
 7912 0370 20201BE5 		ldr	r2, [fp, #-32]
 7913 0374 030052E1 		cmp	r2, r3
 7914 0378 0600008A 		bhi	.L533
3803:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7915              		.loc 1 3803 13 discriminator 1
 7916 037c 08301BE5 		ldr	r3, [fp, #-8]
 7917 0380 083093E5 		ldr	r3, [r3, #8]
 7918 0384 2334A0E1 		lsr	r3, r3, #8
 7919 0388 5330EBE7 		ubfx	r3, r3, #0, #12
3802:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7920              		.loc 1 3802 54 discriminator 1
 7921 038c 20201BE5 		ldr	r2, [fp, #-32]
 7922 0390 030052E1 		cmp	r2, r3
 7923 0394 0100002A 		bcs	.L534
 7924              	.L533:
3804:../../Source/Kernel/rme_kernel.c ****     {
3805:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3806:../../Source/Kernel/rme_kernel.c **** 
3807:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7925              		.loc 1 3807 16
 7926 0398 0630E0E3 		mvn	r3, #6
 7927 039c 300000EA 		b	.L514
 7928              	.L534:
3808:../../Source/Kernel/rme_kernel.c ****     }
3809:../../Source/Kernel/rme_kernel.c ****     else
3810:../../Source/Kernel/rme_kernel.c ****     {
3811:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3812:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3813:../../Source/Kernel/rme_kernel.c ****     }
3814:../../Source/Kernel/rme_kernel.c **** 
3815:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3816:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 7929              		.loc 1 3816 14
 7930 03a0 08301BE5 		ldr	r3, [fp, #-8]
 7931 03a4 143093E5 		ldr	r3, [r3, #20]
 7932 03a8 7330FFE6 		uxth	r3, r3
 7933              		.loc 1 3816 12
 7934 03ac 20201BE5 		ldr	r2, [fp, #-32]
 7935 03b0 3233A0E1 		lsr	r3, r2, r3
 7936              		.loc 1 3816 7
 7937 03b4 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 208


 7938 03b8 0100000A 		beq	.L535
3817:../../Source/Kernel/rme_kernel.c ****     {
3818:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3819:../../Source/Kernel/rme_kernel.c **** 
3820:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7939              		.loc 1 3820 16
 7940 03bc 6430E0E3 		mvn	r3, #100
 7941 03c0 270000EA 		b	.L514
 7942              	.L535:
3821:../../Source/Kernel/rme_kernel.c ****     }
3822:../../Source/Kernel/rme_kernel.c ****     else
3823:../../Source/Kernel/rme_kernel.c ****     {
3824:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3825:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3826:../../Source/Kernel/rme_kernel.c ****     }
3827:../../Source/Kernel/rme_kernel.c **** 
3828:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3829:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict. Also,
3830:../../Source/Kernel/rme_kernel.c ****      * the HAL needs to guarantee that the Child is actually mapped there,
3831:../../Source/Kernel/rme_kernel.c ****      * and use that as the old value in CAS */
3832:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Unmap(Pgt_Parent,Pos,Pgt_Child)<0)
 7943              		.loc 1 3832 8
 7944 03c4 0C201BE5 		ldr	r2, [fp, #-12]
 7945 03c8 20101BE5 		ldr	r1, [fp, #-32]
 7946 03cc 08001BE5 		ldr	r0, [fp, #-8]
 7947 03d0 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Unmap
 7948 03d4 0030A0E1 		mov	r3, r0
 7949              		.loc 1 3832 7
 7950 03d8 000053E3 		cmp	r3, #0
 7951 03dc 010000AA 		bge	.L536
3833:../../Source/Kernel/rme_kernel.c ****     {
3834:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3835:../../Source/Kernel/rme_kernel.c **** 
3836:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 7952              		.loc 1 3836 16
 7953 03e0 6530E0E3 		mvn	r3, #101
 7954 03e4 1E0000EA 		b	.L514
 7955              	.L536:
3837:../../Source/Kernel/rme_kernel.c ****     }
3838:../../Source/Kernel/rme_kernel.c ****     else
3839:../../Source/Kernel/rme_kernel.c ****     {
3840:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3841:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3842:../../Source/Kernel/rme_kernel.c ****     }
3843:../../Source/Kernel/rme_kernel.c ****     
3844:../../Source/Kernel/rme_kernel.c ****     /* Decrease refcnt for both parent/child */
3845:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 7956              		.loc 1 3845 14
 7957 03e8 08301BE5 		ldr	r3, [fp, #-8]
 7958 03ec 003093E5 		ldr	r3, [r3]
 7959 03f0 7330FFE6 		uxth	r3, r3
 7960 03f4 000053E3 		cmp	r3, #0
 7961 03f8 0200000A 		beq	.L537
 7962              		.loc 1 3845 14 is_stmt 0 discriminator 1
 7963 03fc 08301BE5 		ldr	r3, [fp, #-8]
 7964 0400 043093E5 		ldr	r3, [r3, #4]
 7965 0404 000000EA 		b	.L538
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 209


 7966              	.L537:
 7967              		.loc 1 3845 14 discriminator 2
 7968 0408 08301BE5 		ldr	r3, [fp, #-8]
 7969              	.L538:
 7970              		.loc 1 3845 13 is_stmt 1 discriminator 4
 7971 040c 14300BE5 		str	r3, [fp, #-20]
3846:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 7972              		.loc 1 3846 5 discriminator 4
 7973 0410 14301BE5 		ldr	r3, [fp, #-20]
 7974 0414 043083E2 		add	r3, r3, #4
 7975 0418 0010E0E3 		mvn	r1, #0
 7976 041c 0300A0E1 		mov	r0, r3
 7977 0420 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3847:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 7978              		.loc 1 3847 14 discriminator 4
 7979 0424 0C301BE5 		ldr	r3, [fp, #-12]
 7980 0428 003093E5 		ldr	r3, [r3]
 7981 042c 7330FFE6 		uxth	r3, r3
 7982 0430 000053E3 		cmp	r3, #0
 7983 0434 0200000A 		beq	.L539
 7984              		.loc 1 3847 14 is_stmt 0 discriminator 1
 7985 0438 0C301BE5 		ldr	r3, [fp, #-12]
 7986 043c 043093E5 		ldr	r3, [r3, #4]
 7987 0440 000000EA 		b	.L540
 7988              	.L539:
 7989              		.loc 1 3847 14 discriminator 2
 7990 0444 0C301BE5 		ldr	r3, [fp, #-12]
 7991              	.L540:
 7992              		.loc 1 3847 13 is_stmt 1 discriminator 4
 7993 0448 14300BE5 		str	r3, [fp, #-20]
3848:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 7994              		.loc 1 3848 5 discriminator 4
 7995 044c 14301BE5 		ldr	r3, [fp, #-20]
 7996 0450 043083E2 		add	r3, r3, #4
 7997 0454 0010E0E3 		mvn	r1, #0
 7998 0458 0300A0E1 		mov	r0, r3
 7999 045c FEFFFFEB 		bl	_RME_Fetch_Add_Single
3849:../../Source/Kernel/rme_kernel.c **** 
3850:../../Source/Kernel/rme_kernel.c ****     return 0;
 8000              		.loc 1 3850 12 discriminator 4
 8001 0460 0030A0E3 		mov	r3, #0
 8002              	.L514:
3851:../../Source/Kernel/rme_kernel.c **** }
 8003              		.loc 1 3851 1
 8004 0464 0300A0E1 		mov	r0, r3
 8005 0468 04D04BE2 		sub	sp, fp, #4
 8006              		.cfi_def_cfa 13, 8
 8007              		@ sp needed
 8008 046c 0088BDE8 		pop	{fp, pc}
 8009              		.cfi_endproc
 8010              	.LFE37:
 8012              		.section	.text._RME_Kot_Init,"ax",%progbits
 8013              		.align	2
 8014              		.global	_RME_Kot_Init
 8015              		.syntax unified
 8016              		.arm
 8018              	_RME_Kot_Init:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 210


 8019              	.LFB38:
3852:../../Source/Kernel/rme_kernel.c **** #endif
3853:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Des *************************************************/
3854:../../Source/Kernel/rme_kernel.c **** 
3855:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Init *****************************************************
3856:../../Source/Kernel/rme_kernel.c **** Description : Initialize the kernel object table according to the total kernel
3857:../../Source/Kernel/rme_kernel.c ****               memory size, which decides the number of words in the table.
3858:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Words - the number of words in the table.
3859:../../Source/Kernel/rme_kernel.c **** Output      : None.
3860:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the number of words are is not sufficient to hold 
3861:../../Source/Kernel/rme_kernel.c ****                           all kernel memory, -1; else 0.
3862:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3863:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Init(rme_ptr_t Word)
3864:../../Source/Kernel/rme_kernel.c **** {
 8020              		.loc 1 3864 1
 8021              		.cfi_startproc
 8022              		@ args = 0, pretend = 0, frame = 16
 8023              		@ frame_needed = 1, uses_anonymous_args = 0
 8024              		@ link register save eliminated.
 8025 0000 04B02DE5 		str	fp, [sp, #-4]!
 8026              		.cfi_def_cfa_offset 4
 8027              		.cfi_offset 11, -4
 8028 0004 00B08DE2 		add	fp, sp, #0
 8029              		.cfi_def_cfa_register 11
 8030 0008 14D04DE2 		sub	sp, sp, #20
 8031 000c 10000BE5 		str	r0, [fp, #-16]
3865:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3866:../../Source/Kernel/rme_kernel.c ****     
3867:../../Source/Kernel/rme_kernel.c ****     if(Word<RME_KOT_WORD_NUM)
 8032              		.loc 1 3867 7
 8033 0010 10301BE5 		ldr	r3, [fp, #-16]
 8034 0014 020653E3 		cmp	r3, #2097152
 8035 0018 0100002A 		bcs	.L542
3868:../../Source/Kernel/rme_kernel.c ****     {
3869:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3870:../../Source/Kernel/rme_kernel.c **** 
3871:../../Source/Kernel/rme_kernel.c ****         return -1;
 8036              		.loc 1 3871 16
 8037 001c 0030E0E3 		mvn	r3, #0
 8038 0020 0F0000EA 		b	.L543
 8039              	.L542:
3872:../../Source/Kernel/rme_kernel.c ****     }
3873:../../Source/Kernel/rme_kernel.c ****     else
3874:../../Source/Kernel/rme_kernel.c ****     {
3875:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3876:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3877:../../Source/Kernel/rme_kernel.c ****     }
3878:../../Source/Kernel/rme_kernel.c **** 
3879:../../Source/Kernel/rme_kernel.c ****     /* Zero out the whole table */
3880:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Word;Count++)
 8040              		.loc 1 3880 14
 8041 0024 0030A0E3 		mov	r3, #0
 8042 0028 08300BE5 		str	r3, [fp, #-8]
 8043              		.loc 1 3880 5
 8044 002c 070000EA 		b	.L544
 8045              	.L545:
3881:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 211


3882:../../Source/Kernel/rme_kernel.c ****         RME_KOT_VA_BASE[Count]=0U;
 8046              		.loc 1 3882 31 discriminator 3
 8047 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8048 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8049 0038 08201BE5 		ldr	r2, [fp, #-8]
 8050 003c 0010A0E3 		mov	r1, #0
 8051 0040 021183E7 		str	r1, [r3, r2, lsl #2]
3880:../../Source/Kernel/rme_kernel.c ****     {
 8052              		.loc 1 3880 34 discriminator 3
 8053 0044 08301BE5 		ldr	r3, [fp, #-8]
 8054 0048 013083E2 		add	r3, r3, #1
 8055 004c 08300BE5 		str	r3, [fp, #-8]
 8056              	.L544:
3880:../../Source/Kernel/rme_kernel.c ****     {
 8057              		.loc 1 3880 5 discriminator 1
 8058 0050 08201BE5 		ldr	r2, [fp, #-8]
 8059 0054 10301BE5 		ldr	r3, [fp, #-16]
 8060 0058 030052E1 		cmp	r2, r3
 8061 005c F3FFFF3A 		bcc	.L545
3883:../../Source/Kernel/rme_kernel.c ****     }
3884:../../Source/Kernel/rme_kernel.c **** 
3885:../../Source/Kernel/rme_kernel.c ****     return 0;
 8062              		.loc 1 3885 12
 8063 0060 0030A0E3 		mov	r3, #0
 8064              	.L543:
3886:../../Source/Kernel/rme_kernel.c **** }
 8065              		.loc 1 3886 1
 8066 0064 0300A0E1 		mov	r0, r3
 8067 0068 00D08BE2 		add	sp, fp, #0
 8068              		.cfi_def_cfa_register 13
 8069              		@ sp needed
 8070 006c 04B09DE4 		ldr	fp, [sp], #4
 8071              		.cfi_restore 11
 8072              		.cfi_def_cfa_offset 0
 8073 0070 1EFF2FE1 		bx	lr
 8074              		.cfi_endproc
 8075              	.LFE38:
 8077              		.section	.text._RME_Kot_Mark,"ax",%progbits
 8078              		.align	2
 8079              		.global	_RME_Kot_Mark
 8080              		.syntax unified
 8081              		.arm
 8083              	_RME_Kot_Mark:
 8084              	.LFB39:
3887:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Init ************************************************/
3888:../../Source/Kernel/rme_kernel.c **** 
3889:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Mark *****************************************************
3890:../../Source/Kernel/rme_kernel.c **** Description : Populate the kernel object bitmap contiguously.
3891:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
3892:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to populate.
3893:../../Source/Kernel/rme_kernel.c **** Output      : None.
3894:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3895:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3896:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Mark(rme_ptr_t Kaddr,
3897:../../Source/Kernel/rme_kernel.c ****                         rme_ptr_t Size)
3898:../../Source/Kernel/rme_kernel.c **** {
 8085              		.loc 1 3898 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 212


 8086              		.cfi_startproc
 8087              		@ args = 0, pretend = 0, frame = 40
 8088              		@ frame_needed = 1, uses_anonymous_args = 0
 8089 0000 00482DE9 		push	{fp, lr}
 8090              		.cfi_def_cfa_offset 8
 8091              		.cfi_offset 11, -8
 8092              		.cfi_offset 14, -4
 8093 0004 04B08DE2 		add	fp, sp, #4
 8094              		.cfi_def_cfa 11, 4
 8095 0008 28D04DE2 		sub	sp, sp, #40
 8096 000c 28000BE5 		str	r0, [fp, #-40]
 8097 0010 2C100BE5 		str	r1, [fp, #-44]
3899:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3900:../../Source/Kernel/rme_kernel.c ****     /* The old value */
3901:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Val;
3902:../../Source/Kernel/rme_kernel.c ****     /* Whether we need to undo our operations because of CAS failure */
3903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Undo;
3904:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
3905:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
3906:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
3907:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
3908:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
3909:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
3910:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
3911:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
3912:../../Source/Kernel/rme_kernel.c **** 
3913:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
3914:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8098              		.loc 1 3914 14
 8099 0014 28301BE5 		ldr	r3, [fp, #-40]
 8100 0018 0F3003E2 		and	r3, r3, #15
 8101              		.loc 1 3914 7
 8102 001c 000053E3 		cmp	r3, #0
 8103 0020 0100000A 		beq	.L547
3915:../../Source/Kernel/rme_kernel.c ****     {
3916:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3917:../../Source/Kernel/rme_kernel.c **** 
3918:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8104              		.loc 1 3918 16
 8105 0024 0030E0E3 		mvn	r3, #0
 8106 0028 C20000EA 		b	.L548
 8107              	.L547:
3919:../../Source/Kernel/rme_kernel.c ****     }
3920:../../Source/Kernel/rme_kernel.c ****     else
3921:../../Source/Kernel/rme_kernel.c ****     {
3922:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3923:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3924:../../Source/Kernel/rme_kernel.c ****     }
3925:../../Source/Kernel/rme_kernel.c ****     
3926:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
3927:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8108              		.loc 1 3927 17
 8109 002c 28301BE5 		ldr	r3, [fp, #-40]
 8110 0030 7F3483E2 		add	r3, r3, #2130706432
 8111              		.loc 1 3927 10
 8112 0034 2332A0E1 		lsr	r3, r3, #4
 8113 0038 10300BE5 		str	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 213


3928:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8114              		.loc 1 3928 16
 8115 003c 10301BE5 		ldr	r3, [fp, #-16]
 8116 0040 1F3003E2 		and	r3, r3, #31
 8117              		.loc 1 3928 15
 8118 0044 0020E0E3 		mvn	r2, #0
 8119 0048 1233A0E1 		lsl	r3, r2, r3
 8120 004c 14300BE5 		str	r3, [fp, #-20]
3929:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8121              		.loc 1 3929 10
 8122 0050 10301BE5 		ldr	r3, [fp, #-16]
 8123 0054 A332A0E1 		lsr	r3, r3, #5
 8124 0058 10300BE5 		str	r3, [fp, #-16]
3930:../../Source/Kernel/rme_kernel.c ****     
3931:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8125              		.loc 1 3931 15
 8126 005c 28201BE5 		ldr	r2, [fp, #-40]
 8127 0060 2C301BE5 		ldr	r3, [fp, #-44]
 8128 0064 033082E0 		add	r3, r2, r3
 8129              		.loc 1 3931 23
 8130 0068 7F3483E2 		add	r3, r3, #2130706432
 8131 006c 013043E2 		sub	r3, r3, #1
 8132              		.loc 1 3931 8
 8133 0070 2332A0E1 		lsr	r3, r3, #4
 8134 0074 18300BE5 		str	r3, [fp, #-24]
3932:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8135              		.loc 1 3932 14
 8136 0078 18301BE5 		ldr	r3, [fp, #-24]
 8137 007c 0330E0E1 		mvn	r3, r3
 8138 0080 1F3003E2 		and	r3, r3, #31
 8139              		.loc 1 3932 13
 8140 0084 0020E0E3 		mvn	r2, #0
 8141 0088 3233A0E1 		lsr	r3, r2, r3
 8142 008c 1C300BE5 		str	r3, [fp, #-28]
3933:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8143              		.loc 1 3933 8
 8144 0090 18301BE5 		ldr	r3, [fp, #-24]
 8145 0094 A332A0E1 		lsr	r3, r3, #5
 8146 0098 18300BE5 		str	r3, [fp, #-24]
3934:../../Source/Kernel/rme_kernel.c ****     
3935:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
3936:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8147              		.loc 1 3936 7
 8148 009c 10201BE5 		ldr	r2, [fp, #-16]
 8149 00a0 18301BE5 		ldr	r3, [fp, #-24]
 8150 00a4 030052E1 		cmp	r2, r3
 8151 00a8 1F00001A 		bne	.L549
3937:../../Source/Kernel/rme_kernel.c ****     {
3938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3939:../../Source/Kernel/rme_kernel.c **** 
3940:../../Source/Kernel/rme_kernel.c ****         /* Someone already populated something here */
3941:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8152              		.loc 1 3941 16
 8153 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8154 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8155 00b4 10201BE5 		ldr	r2, [fp, #-16]
 8156 00b8 023193E7 		ldr	r3, [r3, r2, lsl #2]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 214


 8157 00bc 20300BE5 		str	r3, [fp, #-32]
3942:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&(Mask_Begin&Mask_End))!=0U)
 8158              		.loc 1 3942 32
 8159 00c0 14201BE5 		ldr	r2, [fp, #-20]
 8160 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 8161 00c8 032002E0 		and	r2, r2, r3
 8162              		.loc 1 3942 20
 8163 00cc 20301BE5 		ldr	r3, [fp, #-32]
 8164 00d0 023003E0 		and	r3, r3, r2
 8165              		.loc 1 3942 11
 8166 00d4 000053E3 		cmp	r3, #0
 8167 00d8 0100000A 		beq	.L550
3943:../../Source/Kernel/rme_kernel.c ****         {
3944:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3945:../../Source/Kernel/rme_kernel.c **** 
3946:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8168              		.loc 1 3946 20
 8169 00dc 0030E0E3 		mvn	r3, #0
 8170 00e0 940000EA 		b	.L548
 8171              	.L550:
3947:../../Source/Kernel/rme_kernel.c ****         }
3948:../../Source/Kernel/rme_kernel.c ****         else
3949:../../Source/Kernel/rme_kernel.c ****         {
3950:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3951:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3952:../../Source/Kernel/rme_kernel.c ****         }
3953:../../Source/Kernel/rme_kernel.c ****         
3954:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the marking with CAS */
3955:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8172              		.loc 1 3955 12
 8173 00e4 10301BE5 		ldr	r3, [fp, #-16]
 8174 00e8 0321A0E1 		lsl	r2, r3, #2
 8175 00ec 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8176 00f0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8177 00f4 030082E0 		add	r0, r2, r3
 8178 00f8 14201BE5 		ldr	r2, [fp, #-20]
 8179 00fc 1C301BE5 		ldr	r3, [fp, #-28]
 8180 0100 032002E0 		and	r2, r2, r3
 8181 0104 20301BE5 		ldr	r3, [fp, #-32]
 8182 0108 033082E1 		orr	r3, r2, r3
 8183 010c 0320A0E1 		mov	r2, r3
 8184 0110 20101BE5 		ldr	r1, [fp, #-32]
 8185 0114 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8186 0118 0030A0E1 		mov	r3, r0
 8187              		.loc 1 3955 11
 8188 011c 000053E3 		cmp	r3, #0
 8189 0120 8300001A 		bne	.L551
3956:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3957:../../Source/Kernel/rme_kernel.c ****                          Old_Val|(Mask_Begin&Mask_End))==RME_CASFAIL)
3958:../../Source/Kernel/rme_kernel.c ****         {
3959:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3960:../../Source/Kernel/rme_kernel.c **** 
3961:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8190              		.loc 1 3961 20
 8191 0124 0030E0E3 		mvn	r3, #0
 8192 0128 820000EA 		b	.L548
 8193              	.L549:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 215


3962:../../Source/Kernel/rme_kernel.c ****         }
3963:../../Source/Kernel/rme_kernel.c ****         else
3964:../../Source/Kernel/rme_kernel.c ****         {
3965:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3966:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3967:../../Source/Kernel/rme_kernel.c ****         }
3968:../../Source/Kernel/rme_kernel.c ****     }
3969:../../Source/Kernel/rme_kernel.c ****     else
3970:../../Source/Kernel/rme_kernel.c ****     {
3971:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3972:../../Source/Kernel/rme_kernel.c ****         
3973:../../Source/Kernel/rme_kernel.c ****         Undo=0U;
 8194              		.loc 1 3973 13
 8195 012c 0030A0E3 		mov	r3, #0
 8196 0130 0C300BE5 		str	r3, [fp, #-12]
3974:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the start */
3975:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8197              		.loc 1 3975 16
 8198 0134 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8199 0138 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8200 013c 10201BE5 		ldr	r2, [fp, #-16]
 8201 0140 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8202 0144 20300BE5 		str	r3, [fp, #-32]
3976:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&Mask_Begin)!=0U)
 8203              		.loc 1 3976 20
 8204 0148 20201BE5 		ldr	r2, [fp, #-32]
 8205 014c 14301BE5 		ldr	r3, [fp, #-20]
 8206 0150 023003E0 		and	r3, r3, r2
 8207              		.loc 1 3976 11
 8208 0154 000053E3 		cmp	r3, #0
 8209 0158 0100000A 		beq	.L552
3977:../../Source/Kernel/rme_kernel.c ****         {
3978:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3979:../../Source/Kernel/rme_kernel.c **** 
3980:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8210              		.loc 1 3980 20
 8211 015c 0030E0E3 		mvn	r3, #0
 8212 0160 740000EA 		b	.L548
 8213              	.L552:
3981:../../Source/Kernel/rme_kernel.c ****         }
3982:../../Source/Kernel/rme_kernel.c ****         else
3983:../../Source/Kernel/rme_kernel.c ****         {
3984:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3985:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3986:../../Source/Kernel/rme_kernel.c ****         }
3987:../../Source/Kernel/rme_kernel.c ****         
3988:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8214              		.loc 1 3988 12
 8215 0164 10301BE5 		ldr	r3, [fp, #-16]
 8216 0168 0321A0E1 		lsl	r2, r3, #2
 8217 016c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8218 0170 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8219 0174 030082E0 		add	r0, r2, r3
 8220 0178 20201BE5 		ldr	r2, [fp, #-32]
 8221 017c 14301BE5 		ldr	r3, [fp, #-20]
 8222 0180 033082E1 		orr	r3, r2, r3
 8223 0184 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 216


 8224 0188 20101BE5 		ldr	r1, [fp, #-32]
 8225 018c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8226 0190 0030A0E1 		mov	r3, r0
 8227              		.loc 1 3988 11
 8228 0194 000053E3 		cmp	r3, #0
 8229 0198 0100001A 		bne	.L553
3989:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3990:../../Source/Kernel/rme_kernel.c ****                          Old_Val|Mask_Begin)==RME_CASFAIL)
3991:../../Source/Kernel/rme_kernel.c ****         {
3992:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3993:../../Source/Kernel/rme_kernel.c **** 
3994:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8230              		.loc 1 3994 20
 8231 019c 0030E0E3 		mvn	r3, #0
 8232 01a0 640000EA 		b	.L548
 8233              	.L553:
3995:../../Source/Kernel/rme_kernel.c ****         }
3996:../../Source/Kernel/rme_kernel.c ****         else
3997:../../Source/Kernel/rme_kernel.c ****         {
3998:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3999:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4000:../../Source/Kernel/rme_kernel.c ****         }
4001:../../Source/Kernel/rme_kernel.c ****         
4002:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the middle */
4003:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End;Count++)
 8234              		.loc 1 4003 18
 8235 01a4 10301BE5 		ldr	r3, [fp, #-16]
 8236 01a8 013083E2 		add	r3, r3, #1
 8237 01ac 08300BE5 		str	r3, [fp, #-8]
 8238              		.loc 1 4003 9
 8239 01b0 1C0000EA 		b	.L554
 8240              	.L558:
4004:../../Source/Kernel/rme_kernel.c ****         {
4005:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[Count];
 8241              		.loc 1 4005 20
 8242 01b4 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8243 01b8 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8244 01bc 08201BE5 		ldr	r2, [fp, #-8]
 8245 01c0 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8246 01c4 20300BE5 		str	r3, [fp, #-32]
4006:../../Source/Kernel/rme_kernel.c ****             if(Old_Val!=0U)
 8247              		.loc 1 4006 15
 8248 01c8 20301BE5 		ldr	r3, [fp, #-32]
 8249 01cc 000053E3 		cmp	r3, #0
 8250 01d0 0200000A 		beq	.L555
4007:../../Source/Kernel/rme_kernel.c ****             {
4008:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4009:../../Source/Kernel/rme_kernel.c **** 
4010:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8251              		.loc 1 4010 21
 8252 01d4 0130A0E3 		mov	r3, #1
 8253 01d8 0C300BE5 		str	r3, [fp, #-12]
4011:../../Source/Kernel/rme_kernel.c ****                 break;
 8254              		.loc 1 4011 17
 8255 01dc 150000EA 		b	.L556
 8256              	.L555:
4012:../../Source/Kernel/rme_kernel.c ****             }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 217


4013:../../Source/Kernel/rme_kernel.c ****             else
4014:../../Source/Kernel/rme_kernel.c ****             {
4015:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4016:../../Source/Kernel/rme_kernel.c ****                 
4017:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Count],
 8257              		.loc 1 4017 20
 8258 01e0 08301BE5 		ldr	r3, [fp, #-8]
 8259 01e4 0321A0E1 		lsl	r2, r3, #2
 8260 01e8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8261 01ec 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8262 01f0 033082E0 		add	r3, r2, r3
 8263 01f4 0020E0E3 		mvn	r2, #0
 8264 01f8 20101BE5 		ldr	r1, [fp, #-32]
 8265 01fc 0300A0E1 		mov	r0, r3
 8266 0200 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8267 0204 0030A0E1 		mov	r3, r0
 8268              		.loc 1 4017 19
 8269 0208 000053E3 		cmp	r3, #0
 8270 020c 0200001A 		bne	.L557
4018:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4019:../../Source/Kernel/rme_kernel.c ****                                  RME_MASK_FULL)==RME_CASFAIL)
4020:../../Source/Kernel/rme_kernel.c ****                 {
4021:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4022:../../Source/Kernel/rme_kernel.c ****                     
4023:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8271              		.loc 1 4023 25
 8272 0210 0130A0E3 		mov	r3, #1
 8273 0214 0C300BE5 		str	r3, [fp, #-12]
4024:../../Source/Kernel/rme_kernel.c ****                     break;
 8274              		.loc 1 4024 21
 8275 0218 060000EA 		b	.L556
 8276              	.L557:
4003:../../Source/Kernel/rme_kernel.c ****         {
 8277              		.loc 1 4003 43 discriminator 2
 8278 021c 08301BE5 		ldr	r3, [fp, #-8]
 8279 0220 013083E2 		add	r3, r3, #1
 8280 0224 08300BE5 		str	r3, [fp, #-8]
 8281              	.L554:
4003:../../Source/Kernel/rme_kernel.c ****         {
 8282              		.loc 1 4003 9 discriminator 1
 8283 0228 08201BE5 		ldr	r2, [fp, #-8]
 8284 022c 18301BE5 		ldr	r3, [fp, #-24]
 8285 0230 030052E1 		cmp	r2, r3
 8286 0234 DEFFFF3A 		bcc	.L558
 8287              	.L556:
4025:../../Source/Kernel/rme_kernel.c ****                 }
4026:../../Source/Kernel/rme_kernel.c ****                 else
4027:../../Source/Kernel/rme_kernel.c ****                 {
4028:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4029:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4030:../../Source/Kernel/rme_kernel.c ****                 }
4031:../../Source/Kernel/rme_kernel.c ****             }
4032:../../Source/Kernel/rme_kernel.c ****         }
4033:../../Source/Kernel/rme_kernel.c ****         
4034:../../Source/Kernel/rme_kernel.c ****         /* See if the middle part failed. If yes, we skip the end marking */
4035:../../Source/Kernel/rme_kernel.c ****         if(Undo==0U)
 8288              		.loc 1 4035 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 218


 8289 0238 0C301BE5 		ldr	r3, [fp, #-12]
 8290 023c 000053E3 		cmp	r3, #0
 8291 0240 1C00001A 		bne	.L559
4036:../../Source/Kernel/rme_kernel.c ****         {
4037:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4038:../../Source/Kernel/rme_kernel.c **** 
4039:../../Source/Kernel/rme_kernel.c ****             /* Check&Mark the end */
4040:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[End];
 8292              		.loc 1 4040 20
 8293 0244 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8294 0248 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8295 024c 18201BE5 		ldr	r2, [fp, #-24]
 8296 0250 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8297 0254 20300BE5 		str	r3, [fp, #-32]
4041:../../Source/Kernel/rme_kernel.c ****             if((Old_Val&Mask_End)!=0U)
 8298              		.loc 1 4041 24
 8299 0258 20201BE5 		ldr	r2, [fp, #-32]
 8300 025c 1C301BE5 		ldr	r3, [fp, #-28]
 8301 0260 023003E0 		and	r3, r3, r2
 8302              		.loc 1 4041 15
 8303 0264 000053E3 		cmp	r3, #0
 8304 0268 0200000A 		beq	.L560
4042:../../Source/Kernel/rme_kernel.c ****             {
4043:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4044:../../Source/Kernel/rme_kernel.c **** 
4045:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8305              		.loc 1 4045 21
 8306 026c 0130A0E3 		mov	r3, #1
 8307 0270 0C300BE5 		str	r3, [fp, #-12]
 8308 0274 0F0000EA 		b	.L559
 8309              	.L560:
4046:../../Source/Kernel/rme_kernel.c ****             }
4047:../../Source/Kernel/rme_kernel.c ****             else
4048:../../Source/Kernel/rme_kernel.c ****             {
4049:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4050:../../Source/Kernel/rme_kernel.c **** 
4051:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[End],
 8310              		.loc 1 4051 20
 8311 0278 18301BE5 		ldr	r3, [fp, #-24]
 8312 027c 0321A0E1 		lsl	r2, r3, #2
 8313 0280 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8314 0284 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8315 0288 030082E0 		add	r0, r2, r3
 8316 028c 20201BE5 		ldr	r2, [fp, #-32]
 8317 0290 1C301BE5 		ldr	r3, [fp, #-28]
 8318 0294 033082E1 		orr	r3, r2, r3
 8319 0298 0320A0E1 		mov	r2, r3
 8320 029c 20101BE5 		ldr	r1, [fp, #-32]
 8321 02a0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8322 02a4 0030A0E1 		mov	r3, r0
 8323              		.loc 1 4051 19
 8324 02a8 000053E3 		cmp	r3, #0
 8325 02ac 0100001A 		bne	.L559
4052:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4053:../../Source/Kernel/rme_kernel.c ****                                  Old_Val|Mask_End)==RME_CASFAIL)
4054:../../Source/Kernel/rme_kernel.c ****                 {
4055:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 219


4056:../../Source/Kernel/rme_kernel.c **** 
4057:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8326              		.loc 1 4057 25
 8327 02b0 0130A0E3 		mov	r3, #1
 8328 02b4 0C300BE5 		str	r3, [fp, #-12]
 8329              	.L559:
4058:../../Source/Kernel/rme_kernel.c ****                 }
4059:../../Source/Kernel/rme_kernel.c ****                 else
4060:../../Source/Kernel/rme_kernel.c ****                 {
4061:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4062:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4063:../../Source/Kernel/rme_kernel.c ****                 }
4064:../../Source/Kernel/rme_kernel.c ****             }
4065:../../Source/Kernel/rme_kernel.c ****         }
4066:../../Source/Kernel/rme_kernel.c ****         else
4067:../../Source/Kernel/rme_kernel.c ****         {
4068:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4069:../../Source/Kernel/rme_kernel.c ****         }
4070:../../Source/Kernel/rme_kernel.c ****         
4071:../../Source/Kernel/rme_kernel.c ****         /* See if we need to undo. If yes, proceed to unroll and return error */
4072:../../Source/Kernel/rme_kernel.c ****         if(Undo!=0U)
 8330              		.loc 1 4072 11
 8331 02b8 0C301BE5 		ldr	r3, [fp, #-12]
 8332 02bc 000053E3 		cmp	r3, #0
 8333 02c0 1B00000A 		beq	.L551
4073:../../Source/Kernel/rme_kernel.c ****         {
4074:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4075:../../Source/Kernel/rme_kernel.c **** 
4076:../../Source/Kernel/rme_kernel.c ****             /* Undo the middle part - no CAS neeeded, write back is always atomic */
4077:../../Source/Kernel/rme_kernel.c ****             for(Count--;Count>Start;Count--)
 8334              		.loc 1 4077 22
 8335 02c4 08301BE5 		ldr	r3, [fp, #-8]
 8336 02c8 013043E2 		sub	r3, r3, #1
 8337 02cc 08300BE5 		str	r3, [fp, #-8]
 8338              		.loc 1 4077 13
 8339 02d0 070000EA 		b	.L561
 8340              	.L562:
4078:../../Source/Kernel/rme_kernel.c ****             {
4079:../../Source/Kernel/rme_kernel.c ****                 RME_KOT_VA_BASE[Count]=0U;
 8341              		.loc 1 4079 39 discriminator 3
 8342 02d4 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8343 02d8 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8344 02dc 08201BE5 		ldr	r2, [fp, #-8]
 8345 02e0 0010A0E3 		mov	r1, #0
 8346 02e4 021183E7 		str	r1, [r3, r2, lsl #2]
4077:../../Source/Kernel/rme_kernel.c ****             {
 8347              		.loc 1 4077 42 discriminator 3
 8348 02e8 08301BE5 		ldr	r3, [fp, #-8]
 8349 02ec 013043E2 		sub	r3, r3, #1
 8350 02f0 08300BE5 		str	r3, [fp, #-8]
 8351              	.L561:
4077:../../Source/Kernel/rme_kernel.c ****             {
 8352              		.loc 1 4077 13 discriminator 1
 8353 02f4 08201BE5 		ldr	r2, [fp, #-8]
 8354 02f8 10301BE5 		ldr	r3, [fp, #-16]
 8355 02fc 030052E1 		cmp	r2, r3
 8356 0300 F3FFFF8A 		bhi	.L562
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 220


4080:../../Source/Kernel/rme_kernel.c ****             }
4081:../../Source/Kernel/rme_kernel.c ****             /* Undo the first word - need atomic instructions */
4082:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8357              		.loc 1 4082 13
 8358 0304 10301BE5 		ldr	r3, [fp, #-16]
 8359 0308 0321A0E1 		lsl	r2, r3, #2
 8360 030c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8361 0310 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8362 0314 032082E0 		add	r2, r2, r3
 8363 0318 14301BE5 		ldr	r3, [fp, #-20]
 8364 031c 0330E0E1 		mvn	r3, r3
 8365 0320 0310A0E1 		mov	r1, r3
 8366 0324 0200A0E1 		mov	r0, r2
 8367 0328 FEFFFFEB 		bl	_RME_Fetch_And_Single
4083:../../Source/Kernel/rme_kernel.c ****             /* Return failure */
4084:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8368              		.loc 1 4084 20
 8369 032c 0030E0E3 		mvn	r3, #0
 8370 0330 000000EA 		b	.L548
 8371              	.L551:
4085:../../Source/Kernel/rme_kernel.c ****         }
4086:../../Source/Kernel/rme_kernel.c ****         else
4087:../../Source/Kernel/rme_kernel.c ****         {
4088:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4089:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4090:../../Source/Kernel/rme_kernel.c ****         }
4091:../../Source/Kernel/rme_kernel.c ****     }
4092:../../Source/Kernel/rme_kernel.c **** 
4093:../../Source/Kernel/rme_kernel.c ****     return 0;
 8372              		.loc 1 4093 12
 8373 0334 0030A0E3 		mov	r3, #0
 8374              	.L548:
4094:../../Source/Kernel/rme_kernel.c **** }
 8375              		.loc 1 4094 1
 8376 0338 0300A0E1 		mov	r0, r3
 8377 033c 04D04BE2 		sub	sp, fp, #4
 8378              		.cfi_def_cfa 13, 8
 8379              		@ sp needed
 8380 0340 0088BDE8 		pop	{fp, pc}
 8381              		.cfi_endproc
 8382              	.LFE39:
 8384              		.section	.text._RME_Kot_Erase,"ax",%progbits
 8385              		.align	2
 8386              		.global	_RME_Kot_Erase
 8387              		.syntax unified
 8388              		.arm
 8390              	_RME_Kot_Erase:
 8391              	.LFB40:
4095:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Mark ************************************************/
4096:../../Source/Kernel/rme_kernel.c **** 
4097:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Erase ****************************************************
4098:../../Source/Kernel/rme_kernel.c **** Description : Depopulate the kernel object bitmap contiguously. We do not need 
4099:../../Source/Kernel/rme_kernel.c ****               CAS on erasure operations.
4100:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
4101:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to depopulate.
4102:../../Source/Kernel/rme_kernel.c **** Output      : None.
4103:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 221


4104:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4105:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Erase(rme_ptr_t Kaddr,
4106:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t Size)
4107:../../Source/Kernel/rme_kernel.c **** {
 8392              		.loc 1 4107 1
 8393              		.cfi_startproc
 8394              		@ args = 0, pretend = 0, frame = 32
 8395              		@ frame_needed = 1, uses_anonymous_args = 0
 8396 0000 00482DE9 		push	{fp, lr}
 8397              		.cfi_def_cfa_offset 8
 8398              		.cfi_offset 11, -8
 8399              		.cfi_offset 14, -4
 8400 0004 04B08DE2 		add	fp, sp, #4
 8401              		.cfi_def_cfa 11, 4
 8402 0008 20D04DE2 		sub	sp, sp, #32
 8403 000c 20000BE5 		str	r0, [fp, #-32]
 8404 0010 24100BE5 		str	r1, [fp, #-36]
4108:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
4109:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
4110:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
4111:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
4112:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
4113:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
4114:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
4115:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
4116:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
4117:../../Source/Kernel/rme_kernel.c **** 
4118:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
4119:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8405              		.loc 1 4119 14
 8406 0014 20301BE5 		ldr	r3, [fp, #-32]
 8407 0018 0F3003E2 		and	r3, r3, #15
 8408              		.loc 1 4119 7
 8409 001c 000053E3 		cmp	r3, #0
 8410 0020 0100000A 		beq	.L564
4120:../../Source/Kernel/rme_kernel.c ****     {
4121:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4122:../../Source/Kernel/rme_kernel.c **** 
4123:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8411              		.loc 1 4123 16
 8412 0024 0030E0E3 		mvn	r3, #0
 8413 0028 8A0000EA 		b	.L565
 8414              	.L564:
4124:../../Source/Kernel/rme_kernel.c ****     }
4125:../../Source/Kernel/rme_kernel.c ****     else
4126:../../Source/Kernel/rme_kernel.c ****     {
4127:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4128:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4129:../../Source/Kernel/rme_kernel.c ****     }
4130:../../Source/Kernel/rme_kernel.c ****     
4131:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
4132:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8415              		.loc 1 4132 17
 8416 002c 20301BE5 		ldr	r3, [fp, #-32]
 8417 0030 7F3483E2 		add	r3, r3, #2130706432
 8418              		.loc 1 4132 10
 8419 0034 2332A0E1 		lsr	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 222


 8420 0038 0C300BE5 		str	r3, [fp, #-12]
4133:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8421              		.loc 1 4133 16
 8422 003c 0C301BE5 		ldr	r3, [fp, #-12]
 8423 0040 1F3003E2 		and	r3, r3, #31
 8424              		.loc 1 4133 15
 8425 0044 0020E0E3 		mvn	r2, #0
 8426 0048 1233A0E1 		lsl	r3, r2, r3
 8427 004c 10300BE5 		str	r3, [fp, #-16]
4134:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8428              		.loc 1 4134 10
 8429 0050 0C301BE5 		ldr	r3, [fp, #-12]
 8430 0054 A332A0E1 		lsr	r3, r3, #5
 8431 0058 0C300BE5 		str	r3, [fp, #-12]
4135:../../Source/Kernel/rme_kernel.c ****     
4136:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8432              		.loc 1 4136 15
 8433 005c 20201BE5 		ldr	r2, [fp, #-32]
 8434 0060 24301BE5 		ldr	r3, [fp, #-36]
 8435 0064 033082E0 		add	r3, r2, r3
 8436              		.loc 1 4136 23
 8437 0068 7F3483E2 		add	r3, r3, #2130706432
 8438 006c 013043E2 		sub	r3, r3, #1
 8439              		.loc 1 4136 8
 8440 0070 2332A0E1 		lsr	r3, r3, #4
 8441 0074 14300BE5 		str	r3, [fp, #-20]
4137:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8442              		.loc 1 4137 14
 8443 0078 14301BE5 		ldr	r3, [fp, #-20]
 8444 007c 0330E0E1 		mvn	r3, r3
 8445 0080 1F3003E2 		and	r3, r3, #31
 8446              		.loc 1 4137 13
 8447 0084 0020E0E3 		mvn	r2, #0
 8448 0088 3233A0E1 		lsr	r3, r2, r3
 8449 008c 18300BE5 		str	r3, [fp, #-24]
4138:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8450              		.loc 1 4138 8
 8451 0090 14301BE5 		ldr	r3, [fp, #-20]
 8452 0094 A332A0E1 		lsr	r3, r3, #5
 8453 0098 14300BE5 		str	r3, [fp, #-20]
4139:../../Source/Kernel/rme_kernel.c ****     
4140:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
4141:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8454              		.loc 1 4141 7
 8455 009c 0C201BE5 		ldr	r2, [fp, #-12]
 8456 00a0 14301BE5 		ldr	r3, [fp, #-20]
 8457 00a4 030052E1 		cmp	r2, r3
 8458 00a8 1A00001A 		bne	.L566
4142:../../Source/Kernel/rme_kernel.c ****     {
4143:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4144:../../Source/Kernel/rme_kernel.c **** 
4145:../../Source/Kernel/rme_kernel.c ****         /* This address range is not fully populated */
4146:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&(Mask_Begin&Mask_End))!=(Mask_Begin&Mask_End))
 8459              		.loc 1 4146 28
 8460 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8461 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8462 00b4 0C201BE5 		ldr	r2, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 223


 8463 00b8 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8464              		.loc 1 4146 47
 8465 00bc 10101BE5 		ldr	r1, [fp, #-16]
 8466 00c0 18301BE5 		ldr	r3, [fp, #-24]
 8467 00c4 013003E0 		and	r3, r3, r1
 8468              		.loc 1 4146 35
 8469 00c8 032002E0 		and	r2, r2, r3
 8470              		.loc 1 4146 71
 8471 00cc 10101BE5 		ldr	r1, [fp, #-16]
 8472 00d0 18301BE5 		ldr	r3, [fp, #-24]
 8473 00d4 013003E0 		and	r3, r3, r1
 8474              		.loc 1 4146 11
 8475 00d8 030052E1 		cmp	r2, r3
 8476 00dc 0100000A 		beq	.L567
4147:../../Source/Kernel/rme_kernel.c ****         {
4148:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4149:../../Source/Kernel/rme_kernel.c **** 
4150:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8477              		.loc 1 4150 20
 8478 00e0 0030E0E3 		mvn	r3, #0
 8479 00e4 5B0000EA 		b	.L565
 8480              	.L567:
4151:../../Source/Kernel/rme_kernel.c ****         }
4152:../../Source/Kernel/rme_kernel.c ****         else
4153:../../Source/Kernel/rme_kernel.c ****         {
4154:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4155:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4156:../../Source/Kernel/rme_kernel.c ****         }
4157:../../Source/Kernel/rme_kernel.c **** 
4158:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the unmarking - need atomic operations */
4159:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~(Mask_Begin&Mask_End));
 8481              		.loc 1 4159 9
 8482 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 8483 00ec 0321A0E1 		lsl	r2, r3, #2
 8484 00f0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8485 00f4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8486 00f8 030082E0 		add	r0, r2, r3
 8487 00fc 10201BE5 		ldr	r2, [fp, #-16]
 8488 0100 18301BE5 		ldr	r3, [fp, #-24]
 8489 0104 023003E0 		and	r3, r3, r2
 8490 0108 0330E0E1 		mvn	r3, r3
 8491 010c 0310A0E1 		mov	r1, r3
 8492 0110 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8493 0114 4E0000EA 		b	.L568
 8494              	.L566:
4160:../../Source/Kernel/rme_kernel.c ****     }
4161:../../Source/Kernel/rme_kernel.c ****     else
4162:../../Source/Kernel/rme_kernel.c ****     {
4163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4164:../../Source/Kernel/rme_kernel.c **** 
4165:../../Source/Kernel/rme_kernel.c ****         /* Check the start */
4166:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&Mask_Begin)!=Mask_Begin)
 8495              		.loc 1 4166 28
 8496 0118 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8497 011c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8498 0120 0C201BE5 		ldr	r2, [fp, #-12]
 8499 0124 022193E7 		ldr	r2, [r3, r2, lsl #2]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 224


 8500              		.loc 1 4166 35
 8501 0128 10301BE5 		ldr	r3, [fp, #-16]
 8502 012c 023003E0 		and	r3, r3, r2
 8503              		.loc 1 4166 11
 8504 0130 10201BE5 		ldr	r2, [fp, #-16]
 8505 0134 030052E1 		cmp	r2, r3
 8506 0138 0100000A 		beq	.L569
4167:../../Source/Kernel/rme_kernel.c ****         {
4168:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4169:../../Source/Kernel/rme_kernel.c **** 
4170:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8507              		.loc 1 4170 20
 8508 013c 0030E0E3 		mvn	r3, #0
 8509 0140 440000EA 		b	.L565
 8510              	.L569:
4171:../../Source/Kernel/rme_kernel.c ****         }
4172:../../Source/Kernel/rme_kernel.c ****         else
4173:../../Source/Kernel/rme_kernel.c ****         {
4174:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4175:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4176:../../Source/Kernel/rme_kernel.c ****         }
4177:../../Source/Kernel/rme_kernel.c ****         
4178:../../Source/Kernel/rme_kernel.c ****         /* Check the middle */
4179:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8511              		.loc 1 4179 18
 8512 0144 0C301BE5 		ldr	r3, [fp, #-12]
 8513 0148 013083E2 		add	r3, r3, #1
 8514 014c 08300BE5 		str	r3, [fp, #-8]
 8515              		.loc 1 4179 9
 8516 0150 0A0000EA 		b	.L570
 8517              	.L572:
4180:../../Source/Kernel/rme_kernel.c ****         {
4181:../../Source/Kernel/rme_kernel.c ****             if(RME_KOT_VA_BASE[Count]!=RME_MASK_FULL)
 8518              		.loc 1 4181 31
 8519 0154 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8520 0158 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8521 015c 08201BE5 		ldr	r2, [fp, #-8]
 8522 0160 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8523              		.loc 1 4181 15
 8524 0164 010073E3 		cmn	r3, #1
 8525 0168 0100000A 		beq	.L571
4182:../../Source/Kernel/rme_kernel.c ****             {
4183:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4184:../../Source/Kernel/rme_kernel.c **** 
4185:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_KOT_BMP;
 8526              		.loc 1 4185 24
 8527 016c 0030E0E3 		mvn	r3, #0
 8528 0170 380000EA 		b	.L565
 8529              	.L571:
4179:../../Source/Kernel/rme_kernel.c ****         {
 8530              		.loc 1 4179 46 discriminator 2
 8531 0174 08301BE5 		ldr	r3, [fp, #-8]
 8532 0178 013083E2 		add	r3, r3, #1
 8533 017c 08300BE5 		str	r3, [fp, #-8]
 8534              	.L570:
4179:../../Source/Kernel/rme_kernel.c ****         {
 8535              		.loc 1 4179 37 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 225


 8536 0180 14301BE5 		ldr	r3, [fp, #-20]
 8537 0184 013043E2 		sub	r3, r3, #1
4179:../../Source/Kernel/rme_kernel.c ****         {
 8538              		.loc 1 4179 9 discriminator 1
 8539 0188 08201BE5 		ldr	r2, [fp, #-8]
 8540 018c 030052E1 		cmp	r2, r3
 8541 0190 EFFFFF3A 		bcc	.L572
4186:../../Source/Kernel/rme_kernel.c ****             }
4187:../../Source/Kernel/rme_kernel.c ****             else
4188:../../Source/Kernel/rme_kernel.c ****             {
4189:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4190:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
4191:../../Source/Kernel/rme_kernel.c ****             }
4192:../../Source/Kernel/rme_kernel.c ****         }
4193:../../Source/Kernel/rme_kernel.c **** 
4194:../../Source/Kernel/rme_kernel.c ****         /* Check the end */
4195:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[End]&Mask_End)!=Mask_End)
 8542              		.loc 1 4195 28
 8543 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8544 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8545 019c 14201BE5 		ldr	r2, [fp, #-20]
 8546 01a0 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8547              		.loc 1 4195 33
 8548 01a4 18301BE5 		ldr	r3, [fp, #-24]
 8549 01a8 023003E0 		and	r3, r3, r2
 8550              		.loc 1 4195 11
 8551 01ac 18201BE5 		ldr	r2, [fp, #-24]
 8552 01b0 030052E1 		cmp	r2, r3
 8553 01b4 0100000A 		beq	.L573
4196:../../Source/Kernel/rme_kernel.c ****         {
4197:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4198:../../Source/Kernel/rme_kernel.c **** 
4199:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8554              		.loc 1 4199 20
 8555 01b8 0030E0E3 		mvn	r3, #0
 8556 01bc 250000EA 		b	.L565
 8557              	.L573:
4200:../../Source/Kernel/rme_kernel.c ****         }
4201:../../Source/Kernel/rme_kernel.c ****         else
4202:../../Source/Kernel/rme_kernel.c ****         {
4203:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4204:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4205:../../Source/Kernel/rme_kernel.c ****         }
4206:../../Source/Kernel/rme_kernel.c ****         
4207:../../Source/Kernel/rme_kernel.c ****         /* Erase the start - make it atomic */
4208:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8558              		.loc 1 4208 9
 8559 01c0 0C301BE5 		ldr	r3, [fp, #-12]
 8560 01c4 0321A0E1 		lsl	r2, r3, #2
 8561 01c8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8562 01cc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8563 01d0 032082E0 		add	r2, r2, r3
 8564 01d4 10301BE5 		ldr	r3, [fp, #-16]
 8565 01d8 0330E0E1 		mvn	r3, r3
 8566 01dc 0310A0E1 		mov	r1, r3
 8567 01e0 0200A0E1 		mov	r0, r2
 8568 01e4 FEFFFFEB 		bl	_RME_Fetch_And_Single
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 226


4209:../../Source/Kernel/rme_kernel.c ****         /* Erase the middle - do not need atomics here */
4210:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8569              		.loc 1 4210 18
 8570 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 8571 01ec 013083E2 		add	r3, r3, #1
 8572 01f0 08300BE5 		str	r3, [fp, #-8]
 8573              		.loc 1 4210 9
 8574 01f4 070000EA 		b	.L574
 8575              	.L575:
4211:../../Source/Kernel/rme_kernel.c ****         {
4212:../../Source/Kernel/rme_kernel.c ****             RME_KOT_VA_BASE[Count]=0U;
 8576              		.loc 1 4212 35 discriminator 3
 8577 01f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8578 01fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8579 0200 08201BE5 		ldr	r2, [fp, #-8]
 8580 0204 0010A0E3 		mov	r1, #0
 8581 0208 021183E7 		str	r1, [r3, r2, lsl #2]
4210:../../Source/Kernel/rme_kernel.c ****         {
 8582              		.loc 1 4210 46 discriminator 3
 8583 020c 08301BE5 		ldr	r3, [fp, #-8]
 8584 0210 013083E2 		add	r3, r3, #1
 8585 0214 08300BE5 		str	r3, [fp, #-8]
 8586              	.L574:
4210:../../Source/Kernel/rme_kernel.c ****         {
 8587              		.loc 1 4210 37 discriminator 1
 8588 0218 14301BE5 		ldr	r3, [fp, #-20]
 8589 021c 013043E2 		sub	r3, r3, #1
4210:../../Source/Kernel/rme_kernel.c ****         {
 8590              		.loc 1 4210 9 discriminator 1
 8591 0220 08201BE5 		ldr	r2, [fp, #-8]
 8592 0224 030052E1 		cmp	r2, r3
 8593 0228 F2FFFF3A 		bcc	.L575
4213:../../Source/Kernel/rme_kernel.c ****         }
4214:../../Source/Kernel/rme_kernel.c ****         /* Erase the end - make it atomic */
4215:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[End]),~Mask_End);
 8594              		.loc 1 4215 9
 8595 022c 14301BE5 		ldr	r3, [fp, #-20]
 8596 0230 0321A0E1 		lsl	r2, r3, #2
 8597 0234 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8598 0238 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8599 023c 032082E0 		add	r2, r2, r3
 8600 0240 18301BE5 		ldr	r3, [fp, #-24]
 8601 0244 0330E0E1 		mvn	r3, r3
 8602 0248 0310A0E1 		mov	r1, r3
 8603 024c 0200A0E1 		mov	r0, r2
 8604 0250 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8605              	.L568:
4216:../../Source/Kernel/rme_kernel.c ****     }
4217:../../Source/Kernel/rme_kernel.c **** 
4218:../../Source/Kernel/rme_kernel.c ****     return 0;
 8606              		.loc 1 4218 12
 8607 0254 0030A0E3 		mov	r3, #0
 8608              	.L565:
4219:../../Source/Kernel/rme_kernel.c **** }
 8609              		.loc 1 4219 1
 8610 0258 0300A0E1 		mov	r0, r3
 8611 025c 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 227


 8612              		.cfi_def_cfa 13, 8
 8613              		@ sp needed
 8614 0260 0088BDE8 		pop	{fp, pc}
 8615              		.cfi_endproc
 8616              	.LFE40:
 8618              		.section	.text._RME_Kom_Boot_Crt,"ax",%progbits
 8619              		.align	2
 8620              		.global	_RME_Kom_Boot_Crt
 8621              		.syntax unified
 8622              		.arm
 8624              	_RME_Kom_Boot_Crt:
 8625              	.LFB41:
4220:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Erase ***********************************************/
4221:../../Source/Kernel/rme_kernel.c **** 
4222:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kom_Boot_Crt *************************************************
4223:../../Source/Kernel/rme_kernel.c **** Description : Create boot-time kernel memory capability. Kernel memory allow
4224:../../Source/Kernel/rme_kernel.c ****               you to create specific types of kernel objects in a specific 
4225:../../Source/Kernel/rme_kernel.c ****               kernel memory range. The initial kernel memory capability's
4226:../../Source/Kernel/rme_kernel.c ****               content is supplied by the kernel according to config.
4227:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4228:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
4229:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
4230:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4231:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The capability to the kernel memory.
4232:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4233:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Begin - The begin address of the kernel memory, aligned
4234:../../Source/Kernel/rme_kernel.c ****                                 to kotbl granularity.
4235:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t End - The end address of the kernel memory, aligned to
4236:../../Source/Kernel/rme_kernel.c ****                               kotbl granularity, then -1.
4237:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The operation flags for this kernel memory. Set
4238:../../Source/Kernel/rme_kernel.c ****                                acoording to your needs.
4239:../../Source/Kernel/rme_kernel.c **** Output      : None.
4240:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4241:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4242:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kom_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4243:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4244:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kom,
4245:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Begin,
4246:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t End,
4247:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
4248:../../Source/Kernel/rme_kernel.c **** {
 8626              		.loc 1 4248 1
 8627              		.cfi_startproc
 8628              		@ args = 8, pretend = 0, frame = 40
 8629              		@ frame_needed = 1, uses_anonymous_args = 0
 8630 0000 00482DE9 		push	{fp, lr}
 8631              		.cfi_def_cfa_offset 8
 8632              		.cfi_offset 11, -8
 8633              		.cfi_offset 14, -4
 8634 0004 04B08DE2 		add	fp, sp, #4
 8635              		.cfi_def_cfa 11, 4
 8636 0008 28D04DE2 		sub	sp, sp, #40
 8637 000c 20000BE5 		str	r0, [fp, #-32]
 8638 0010 24100BE5 		str	r1, [fp, #-36]
 8639 0014 28200BE5 		str	r2, [fp, #-40]
 8640 0018 2C300BE5 		str	r3, [fp, #-44]
4249:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 228


4250:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kom* Kom_Crt;
4251:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
4252:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
4253:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4254:../../Source/Kernel/rme_kernel.c ****     
4255:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
4256:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 8641              		.loc 1 4256 5
 8642 001c 24301BE5 		ldr	r3, [fp, #-36]
 8643 0020 803003E2 		and	r3, r3, #128
 8644 0024 000053E3 		cmp	r3, #0
 8645 0028 1D00001A 		bne	.L577
 8646              		.loc 1 4256 5 is_stmt 0 discriminator 1
 8647 002c 20301BE5 		ldr	r3, [fp, #-32]
 8648 0030 142093E5 		ldr	r2, [r3, #20]
 8649 0034 24301BE5 		ldr	r3, [fp, #-36]
 8650 0038 030052E1 		cmp	r2, r3
 8651 003c 0100008A 		bhi	.L578
 8652              		.loc 1 4256 5 discriminator 3
 8653 0040 0230E0E3 		mvn	r3, #2
 8654 0044 A20000EA 		b	.L579
 8655              	.L578:
 8656              		.loc 1 4256 5 discriminator 4
 8657 0048 24301BE5 		ldr	r3, [fp, #-36]
 8658 004c 8322A0E1 		lsl	r2, r3, #5
 8659 0050 20301BE5 		ldr	r3, [fp, #-32]
 8660 0054 0C3093E5 		ldr	r3, [r3, #12]
 8661 0058 033082E0 		add	r3, r2, r3
 8662 005c 08300BE5 		str	r3, [fp, #-8]
 8663 0060 08301BE5 		ldr	r3, [fp, #-8]
 8664 0064 0300A0E1 		mov	r0, r3
 8665 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8666 006c 0C000BE5 		str	r0, [fp, #-12]
 8667 0070 0C301BE5 		ldr	r3, [fp, #-12]
 8668 0074 2338A0E1 		lsr	r3, r3, #16
 8669 0078 7330EFE6 		uxtb	r3, r3
 8670 007c 020053E3 		cmp	r3, #2
 8671 0080 0100001A 		bne	.L580
 8672              		.loc 1 4256 5 discriminator 5
 8673 0084 0830E0E3 		mvn	r3, #8
 8674 0088 910000EA 		b	.L579
 8675              	.L580:
 8676              		.loc 1 4256 5 discriminator 6
 8677 008c 0C301BE5 		ldr	r3, [fp, #-12]
 8678 0090 233CA0E1 		lsr	r3, r3, #24
 8679 0094 030053E3 		cmp	r3, #3
 8680 0098 4100000A 		beq	.L581
 8681              		.loc 1 4256 5 discriminator 7
 8682 009c 0130E0E3 		mvn	r3, #1
 8683 00a0 8B0000EA 		b	.L579
 8684              	.L577:
 8685              		.loc 1 4256 5 discriminator 2
 8686 00a4 24301BE5 		ldr	r3, [fp, #-36]
 8687 00a8 2324A0E1 		lsr	r2, r3, #8
 8688 00ac 20301BE5 		ldr	r3, [fp, #-32]
 8689 00b0 143093E5 		ldr	r3, [r3, #20]
 8690 00b4 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 229


 8691 00b8 0100003A 		bcc	.L582
 8692              		.loc 1 4256 5 discriminator 8
 8693 00bc 0230E0E3 		mvn	r3, #2
 8694 00c0 830000EA 		b	.L579
 8695              	.L582:
 8696              		.loc 1 4256 5 discriminator 9
 8697 00c4 24301BE5 		ldr	r3, [fp, #-36]
 8698 00c8 2334A0E1 		lsr	r3, r3, #8
 8699 00cc 8322A0E1 		lsl	r2, r3, #5
 8700 00d0 20301BE5 		ldr	r3, [fp, #-32]
 8701 00d4 0C3093E5 		ldr	r3, [r3, #12]
 8702 00d8 033082E0 		add	r3, r2, r3
 8703 00dc 08300BE5 		str	r3, [fp, #-8]
 8704 00e0 08301BE5 		ldr	r3, [fp, #-8]
 8705 00e4 0300A0E1 		mov	r0, r3
 8706 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8707 00ec 0C000BE5 		str	r0, [fp, #-12]
 8708 00f0 0C301BE5 		ldr	r3, [fp, #-12]
 8709 00f4 2338A0E1 		lsr	r3, r3, #16
 8710 00f8 7330EFE6 		uxtb	r3, r3
 8711 00fc 020053E3 		cmp	r3, #2
 8712 0100 0100001A 		bne	.L583
 8713              		.loc 1 4256 5 discriminator 10
 8714 0104 0830E0E3 		mvn	r3, #8
 8715 0108 710000EA 		b	.L579
 8716              	.L583:
 8717              		.loc 1 4256 5 discriminator 11
 8718 010c 0C301BE5 		ldr	r3, [fp, #-12]
 8719 0110 233CA0E1 		lsr	r3, r3, #24
 8720 0114 030053E3 		cmp	r3, #3
 8721 0118 0100000A 		beq	.L584
 8722              		.loc 1 4256 5 discriminator 12
 8723 011c 0130E0E3 		mvn	r3, #1
 8724 0120 6B0000EA 		b	.L579
 8725              	.L584:
 8726              		.loc 1 4256 5 discriminator 13
 8727 0124 24301BE5 		ldr	r3, [fp, #-36]
 8728 0128 7F2003E2 		and	r2, r3, #127
 8729 012c 08301BE5 		ldr	r3, [fp, #-8]
 8730 0130 143093E5 		ldr	r3, [r3, #20]
 8731 0134 030052E1 		cmp	r2, r3
 8732 0138 0100003A 		bcc	.L585
 8733              		.loc 1 4256 5 discriminator 14
 8734 013c 0230E0E3 		mvn	r3, #2
 8735 0140 630000EA 		b	.L579
 8736              	.L585:
 8737              		.loc 1 4256 5 discriminator 15
 8738 0144 24301BE5 		ldr	r3, [fp, #-36]
 8739 0148 7F3003E2 		and	r3, r3, #127
 8740 014c 8322A0E1 		lsl	r2, r3, #5
 8741 0150 08301BE5 		ldr	r3, [fp, #-8]
 8742 0154 0C3093E5 		ldr	r3, [r3, #12]
 8743 0158 033082E0 		add	r3, r2, r3
 8744 015c 08300BE5 		str	r3, [fp, #-8]
 8745 0160 08301BE5 		ldr	r3, [fp, #-8]
 8746 0164 0300A0E1 		mov	r0, r3
 8747 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 230


 8748 016c 0C000BE5 		str	r0, [fp, #-12]
 8749 0170 0C301BE5 		ldr	r3, [fp, #-12]
 8750 0174 2338A0E1 		lsr	r3, r3, #16
 8751 0178 7330EFE6 		uxtb	r3, r3
 8752 017c 020053E3 		cmp	r3, #2
 8753 0180 0100001A 		bne	.L586
 8754              		.loc 1 4256 5 discriminator 16
 8755 0184 0830E0E3 		mvn	r3, #8
 8756 0188 510000EA 		b	.L579
 8757              	.L586:
 8758              		.loc 1 4256 5 discriminator 17
 8759 018c 0C301BE5 		ldr	r3, [fp, #-12]
 8760 0190 233CA0E1 		lsr	r3, r3, #24
 8761 0194 030053E3 		cmp	r3, #3
 8762 0198 0100000A 		beq	.L581
 8763              		.loc 1 4256 5 discriminator 18
 8764 019c 0130E0E3 		mvn	r3, #1
 8765 01a0 4B0000EA 		b	.L579
 8766              	.L581:
4257:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4258:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4259:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 8767              		.loc 1 4259 5 is_stmt 1
 8768 01a4 08301BE5 		ldr	r3, [fp, #-8]
 8769 01a8 083093E5 		ldr	r3, [r3, #8]
 8770 01ac 013003E2 		and	r3, r3, #1
 8771 01b0 000053E3 		cmp	r3, #0
 8772 01b4 0100001A 		bne	.L587
 8773              		.loc 1 4259 5 is_stmt 0 discriminator 1
 8774 01b8 0630E0E3 		mvn	r3, #6
 8775 01bc 440000EA 		b	.L579
 8776              	.L587:
4260:../../Source/Kernel/rme_kernel.c ****     
4261:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4262:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kom,struct RME_Cap_Kom*,Kom_Crt);
 8777              		.loc 1 4262 5 is_stmt 1
 8778 01c0 08301BE5 		ldr	r3, [fp, #-8]
 8779 01c4 142093E5 		ldr	r2, [r3, #20]
 8780 01c8 28301BE5 		ldr	r3, [fp, #-40]
 8781 01cc 030052E1 		cmp	r2, r3
 8782 01d0 0100008A 		bhi	.L588
 8783              		.loc 1 4262 5 is_stmt 0 discriminator 1
 8784 01d4 0230E0E3 		mvn	r3, #2
 8785 01d8 3D0000EA 		b	.L579
 8786              	.L588:
 8787              		.loc 1 4262 5 discriminator 2
 8788 01dc 28301BE5 		ldr	r3, [fp, #-40]
 8789 01e0 8322A0E1 		lsl	r2, r3, #5
 8790 01e4 08301BE5 		ldr	r3, [fp, #-8]
 8791 01e8 0C3093E5 		ldr	r3, [r3, #12]
 8792 01ec 033082E0 		add	r3, r2, r3
 8793 01f0 10300BE5 		str	r3, [fp, #-16]
4263:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4264:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kom_Crt);
 8794              		.loc 1 4264 5 is_stmt 1 discriminator 2
 8795 01f4 10301BE5 		ldr	r3, [fp, #-16]
 8796 01f8 0128A0E3 		mov	r2, #65536
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 231


 8797 01fc 0010A0E3 		mov	r1, #0
 8798 0200 0300A0E1 		mov	r0, r3
 8799 0204 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8800 0208 0030A0E1 		mov	r3, r0
 8801 020c 000053E3 		cmp	r3, #0
 8802 0210 0100001A 		bne	.L589
 8803              		.loc 1 4264 5 is_stmt 0 discriminator 1
 8804 0214 0430E0E3 		mvn	r3, #4
 8805 0218 2D0000EA 		b	.L579
 8806              	.L589:
 8807              		.loc 1 4264 5 discriminator 2
 8808 021c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 8809 0220 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 8810 0224 002093E5 		ldr	r2, [r3]
 8811 0228 10301BE5 		ldr	r3, [fp, #-16]
 8812 022c 102083E5 		str	r2, [r3, #16]
4265:../../Source/Kernel/rme_kernel.c ****     
4266:../../Source/Kernel/rme_kernel.c ****     /* Align addresses */
4267:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
4268:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,RME_KOM_SLOT_ORDER);
4269:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Start,RME_KOM_SLOT_ORDER);
4270:../../Source/Kernel/rme_kernel.c **** #else
4271:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,6U);
 8813              		.loc 1 4271 13 is_stmt 1 discriminator 2
 8814 0230 04309BE5 		ldr	r3, [fp, #4]
 8815 0234 013083E2 		add	r3, r3, #1
 8816              		.loc 1 4271 12 discriminator 2
 8817 0238 3F30C3E3 		bic	r3, r3, #63
 8818 023c 14300BE5 		str	r3, [fp, #-20]
4272:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Begin,6U);
 8819              		.loc 1 4272 15 discriminator 2
 8820 0240 2C301BE5 		ldr	r3, [fp, #-44]
 8821 0244 3F3083E2 		add	r3, r3, #63
 8822              		.loc 1 4272 14 discriminator 2
 8823 0248 3F30C3E3 		bic	r3, r3, #63
 8824 024c 18300BE5 		str	r3, [fp, #-24]
4273:../../Source/Kernel/rme_kernel.c **** #endif
4274:../../Source/Kernel/rme_kernel.c **** 
4275:../../Source/Kernel/rme_kernel.c ****     /* Must at least allow creation of something */
4276:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Flag!=0U);
 8825              		.loc 1 4276 5 discriminator 2
 8826 0250 08309BE5 		ldr	r3, [fp, #8]
 8827 0254 000053E3 		cmp	r3, #0
 8828 0258 0800001A 		bne	.L590
 8829              		.loc 1 4276 5 is_stmt 0 discriminator 1
 8830 025c 003000E3 		movw	r3, #:lower16:.LC4
 8831 0260 003040E3 		movt	r3, #:upper16:.LC4
 8832 0264 002000E3 		movw	r2, #:lower16:.LC5
 8833 0268 002040E3 		movt	r2, #:upper16:.LC5
 8834 026c B41001E3 		movw	r1, #4276
 8835 0270 000000E3 		movw	r0, #:lower16:.LC6
 8836 0274 000040E3 		movt	r0, #:upper16:.LC6
 8837 0278 FEFFFFEB 		bl	RME_Log
 8838              	.L591:
 8839 027c FEFFFFEA 		b	.L591
 8840              	.L590:
4277:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 232


4278:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4279:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Root_Ref=1U;
 8841              		.loc 1 4279 27 is_stmt 1
 8842 0280 10301BE5 		ldr	r3, [fp, #-16]
 8843 0284 0120A0E3 		mov	r2, #1
 8844 0288 042083E5 		str	r2, [r3, #4]
4280:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Object=0U;
 8845              		.loc 1 4280 25
 8846 028c 10301BE5 		ldr	r3, [fp, #-16]
 8847 0290 0020A0E3 		mov	r2, #0
 8848 0294 0C2083E5 		str	r2, [r3, #12]
4281:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Flag=Flag;
 8849              		.loc 1 4281 23
 8850 0298 10301BE5 		ldr	r3, [fp, #-16]
 8851 029c 08209BE5 		ldr	r2, [fp, #8]
 8852 02a0 082083E5 		str	r2, [r3, #8]
4282:../../Source/Kernel/rme_kernel.c ****     
4283:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4284:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Begin=Kom_Begin;
 8853              		.loc 1 4284 19
 8854 02a4 10301BE5 		ldr	r3, [fp, #-16]
 8855 02a8 18201BE5 		ldr	r2, [fp, #-24]
 8856 02ac 142083E5 		str	r2, [r3, #20]
4285:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->End=Kom_End-1U;
 8857              		.loc 1 4285 25
 8858 02b0 14301BE5 		ldr	r3, [fp, #-20]
 8859 02b4 012043E2 		sub	r2, r3, #1
 8860              		.loc 1 4285 17
 8861 02b8 10301BE5 		ldr	r3, [fp, #-16]
 8862 02bc 182083E5 		str	r2, [r3, #24]
4286:../../Source/Kernel/rme_kernel.c **** 
4287:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4288:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kom_Crt->Head.Type_Stat),
 8863              		.loc 1 4288 5
 8864 02c0 10301BE5 		ldr	r3, [fp, #-16]
 8865 02c4 0214A0E3 		mov	r1, #33554432
 8866 02c8 0300A0E1 		mov	r0, r3
 8867 02cc FEFFFFEB 		bl	__RME_A7A_Write_Release
4289:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KOM,
4290:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4291:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4292:../../Source/Kernel/rme_kernel.c **** 
4293:../../Source/Kernel/rme_kernel.c ****     return 0;
 8868              		.loc 1 4293 12
 8869 02d0 0030A0E3 		mov	r3, #0
 8870              	.L579:
4294:../../Source/Kernel/rme_kernel.c **** }
 8871              		.loc 1 4294 1
 8872 02d4 0300A0E1 		mov	r0, r3
 8873 02d8 04D04BE2 		sub	sp, fp, #4
 8874              		.cfi_def_cfa 13, 8
 8875              		@ sp needed
 8876 02dc 0088BDE8 		pop	{fp, pc}
 8877              		.cfi_endproc
 8878              	.LFE41:
 8880              		.section	.text._RME_CPU_Local_Init,"ax",%progbits
 8881              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 233


 8882              		.global	_RME_CPU_Local_Init
 8883              		.syntax unified
 8884              		.arm
 8886              	_RME_CPU_Local_Init:
 8887              	.LFB42:
4295:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kom_Boot_Crt ********************************************/
4296:../../Source/Kernel/rme_kernel.c **** 
4297:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_CPU_Local_Init ***********************************************
4298:../../Source/Kernel/rme_kernel.c **** Description : Initialize the CPU-local data structure.
4299:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The pointer to the per-CPU values.
4300:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The CPUID of the CPU.
4301:../../Source/Kernel/rme_kernel.c **** Output      : None.
4302:../../Source/Kernel/rme_kernel.c **** Return      : None.
4303:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4304:../../Source/Kernel/rme_kernel.c **** void _RME_CPU_Local_Init(struct RME_CPU_Local* Local,
4305:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t CPUID)
4306:../../Source/Kernel/rme_kernel.c **** {
 8888              		.loc 1 4306 1
 8889              		.cfi_startproc
 8890              		@ args = 0, pretend = 0, frame = 16
 8891              		@ frame_needed = 1, uses_anonymous_args = 0
 8892 0000 00482DE9 		push	{fp, lr}
 8893              		.cfi_def_cfa_offset 8
 8894              		.cfi_offset 11, -8
 8895              		.cfi_offset 14, -4
 8896 0004 04B08DE2 		add	fp, sp, #4
 8897              		.cfi_def_cfa 11, 4
 8898 0008 10D04DE2 		sub	sp, sp, #16
 8899 000c 10000BE5 		str	r0, [fp, #-16]
 8900 0010 14100BE5 		str	r1, [fp, #-20]
4307:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio_Cnt;
4308:../../Source/Kernel/rme_kernel.c ****     
4309:../../Source/Kernel/rme_kernel.c ****     Local->CPUID=CPUID;
 8901              		.loc 1 4309 17
 8902 0014 10301BE5 		ldr	r3, [fp, #-16]
 8903 0018 14201BE5 		ldr	r2, [fp, #-20]
 8904 001c 002083E5 		str	r2, [r3]
4310:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=RME_NULL;
 8905              		.loc 1 4310 19
 8906 0020 10301BE5 		ldr	r3, [fp, #-16]
 8907 0024 0020A0E3 		mov	r2, #0
 8908 0028 042083E5 		str	r2, [r3, #4]
4311:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Vct=RME_NULL;
 8909              		.loc 1 4311 19
 8910 002c 10301BE5 		ldr	r3, [fp, #-16]
 8911 0030 0020A0E3 		mov	r2, #0
 8912 0034 0C2083E5 		str	r2, [r3, #12]
4312:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Tim=RME_NULL;
 8913              		.loc 1 4312 19
 8914 0038 10301BE5 		ldr	r3, [fp, #-16]
 8915 003c 0020A0E3 		mov	r2, #0
 8916 0040 082083E5 		str	r2, [r3, #8]
4313:../../Source/Kernel/rme_kernel.c ****     
4314:../../Source/Kernel/rme_kernel.c ****     /* Initialize the run-queue and bitmap */
4315:../../Source/Kernel/rme_kernel.c ****     for(Prio_Cnt=0U;Prio_Cnt<RME_PREEMPT_PRIO_NUM;Prio_Cnt++)
 8917              		.loc 1 4315 17
 8918 0044 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 234


 8919 0048 08300BE5 		str	r3, [fp, #-8]
 8920              		.loc 1 4315 5
 8921 004c 100000EA 		b	.L593
 8922              	.L594:
4316:../../Source/Kernel/rme_kernel.c ****     {
4317:../../Source/Kernel/rme_kernel.c ****         Local->Run.Bitmap[Prio_Cnt>>RME_WORD_ORDER]=0U;
 8923              		.loc 1 4317 35 discriminator 3
 8924 0050 08301BE5 		ldr	r3, [fp, #-8]
 8925 0054 A322A0E1 		lsr	r2, r3, #5
 8926              		.loc 1 4317 52 discriminator 3
 8927 0058 10301BE5 		ldr	r3, [fp, #-16]
 8928 005c 042082E2 		add	r2, r2, #4
 8929 0060 0010A0E3 		mov	r1, #0
 8930 0064 021183E7 		str	r1, [r3, r2, lsl #2]
4318:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Local->Run.List[Prio_Cnt]));
 8931              		.loc 1 4318 9 discriminator 3
 8932 0068 08301BE5 		ldr	r3, [fp, #-8]
 8933 006c 023083E2 		add	r3, r3, #2
 8934 0070 8331A0E1 		lsl	r3, r3, #3
 8935 0074 10201BE5 		ldr	r2, [fp, #-16]
 8936 0078 033082E0 		add	r3, r2, r3
 8937 007c 043083E2 		add	r3, r3, #4
 8938 0080 0300A0E1 		mov	r0, r3
 8939 0084 FEFFFFEB 		bl	_RME_List_Crt
4315:../../Source/Kernel/rme_kernel.c ****     {
 8940              		.loc 1 4315 59 discriminator 3
 8941 0088 08301BE5 		ldr	r3, [fp, #-8]
 8942 008c 013083E2 		add	r3, r3, #1
 8943 0090 08300BE5 		str	r3, [fp, #-8]
 8944              	.L593:
4315:../../Source/Kernel/rme_kernel.c ****     {
 8945              		.loc 1 4315 5 discriminator 1
 8946 0094 08301BE5 		ldr	r3, [fp, #-8]
 8947 0098 1F0053E3 		cmp	r3, #31
 8948 009c EBFFFF9A 		bls	.L594
4319:../../Source/Kernel/rme_kernel.c ****     }
4320:../../Source/Kernel/rme_kernel.c **** }
 8949              		.loc 1 4320 1
 8950 00a0 00F020E3 		nop
 8951 00a4 00F020E3 		nop
 8952 00a8 04D04BE2 		sub	sp, fp, #4
 8953              		.cfi_def_cfa 13, 8
 8954              		@ sp needed
 8955 00ac 0088BDE8 		pop	{fp, pc}
 8956              		.cfi_endproc
 8957              	.LFE42:
 8959              		.section	.rodata
 8960 0075 000000   		.align	2
 8961              	.LC7:
 8962 0078 41747465 		.ascii	"Attempted to kill init thread.\000"
 8962      6D707465 
 8962      6420746F 
 8962      206B696C 
 8962      6C20696E 
 8963              		.section	.text._RME_Thd_Fatal,"ax",%progbits
 8964              		.align	2
 8965              		.global	_RME_Thd_Fatal
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 235


 8966              		.syntax unified
 8967              		.arm
 8969              	_RME_Thd_Fatal:
 8970              	.LFB43:
4321:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_CPU_Local_Init ******************************************/
4322:../../Source/Kernel/rme_kernel.c **** 
4323:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Fatal ***************************************************
4324:../../Source/Kernel/rme_kernel.c **** Description : The fatal fault handler of RME. This handler will be called by
4325:../../Source/Kernel/rme_kernel.c ****               the ISR that handles the exceptions. This indicates that a fatal
4326:../../Source/Kernel/rme_kernel.c ****               exception has happened and we need to see if this thread is in a
4327:../../Source/Kernel/rme_kernel.c ****               synchronous invocation. If yes, we stop the invocation, and
4328:../../Source/Kernel/rme_kernel.c ****               possibly return a fault value to the old register set. If not, we
4329:../../Source/Kernel/rme_kernel.c ****               just kill the thread. If the thread is killed, a notification
4330:../../Source/Kernel/rme_kernel.c ****               will be sent to its scheduler. An Exec_Set is required to clear
4331:../../Source/Kernel/rme_kernel.c ****               the exception pending status of the thread.
4332:../../Source/Kernel/rme_kernel.c ****               Some processors may raise some exceptions that are difficult to
4333:../../Source/Kernel/rme_kernel.c ****               attribute to a particular thread, either due to the fact that
4334:../../Source/Kernel/rme_kernel.c ****               they are asynchronous, or they are derived from exception entry.
4335:../../Source/Kernel/rme_kernel.c ****               A good example is ARMv7-M: its autostacking feature derives fault
4336:../../Source/Kernel/rme_kernel.c ****               from exception entry, and some of its bus faults are asynchronous
4337:../../Source/Kernel/rme_kernel.c ****               and can cross context boundaries. RME requires that all these
4338:../../Source/Kernel/rme_kernel.c ****               exceptions be dropped rather than handled; or there will be 
4339:../../Source/Kernel/rme_kernel.c ****               integrity and availability compromises.
4340:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4341:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
4342:../../Source/Kernel/rme_kernel.c **** Return      : None.
4343:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4344:../../Source/Kernel/rme_kernel.c **** void _RME_Thd_Fatal(struct RME_Reg_Struct* Reg)
4345:../../Source/Kernel/rme_kernel.c **** {
 8971              		.loc 1 4345 1
 8972              		.cfi_startproc
 8973              		@ args = 0, pretend = 0, frame = 16
 8974              		@ frame_needed = 1, uses_anonymous_args = 0
 8975 0000 00482DE9 		push	{fp, lr}
 8976              		.cfi_def_cfa_offset 8
 8977              		.cfi_offset 11, -8
 8978              		.cfi_offset 14, -4
 8979 0004 04B08DE2 		add	fp, sp, #4
 8980              		.cfi_def_cfa 11, 4
 8981 0008 10D04DE2 		sub	sp, sp, #16
 8982 000c 10000BE5 		str	r0, [fp, #-16]
4346:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4347:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
4348:../../Source/Kernel/rme_kernel.c ****     
4349:../../Source/Kernel/rme_kernel.c ****     /* Attempt to return from the invocation, from fault */
4350:../../Source/Kernel/rme_kernel.c ****     if(_RME_Inv_Ret(Reg,0U,1U)!=0)
 8983              		.loc 1 4350 8
 8984 0010 0120A0E3 		mov	r2, #1
 8985 0014 0010A0E3 		mov	r1, #0
 8986 0018 10001BE5 		ldr	r0, [fp, #-16]
 8987 001c FEFFFFEB 		bl	_RME_Inv_Ret
 8988 0020 0030A0E1 		mov	r3, r0
 8989              		.loc 1 4350 7
 8990 0024 000053E3 		cmp	r3, #0
 8991 0028 2C00000A 		beq	.L601
4351:../../Source/Kernel/rme_kernel.c ****     {
4352:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 236


4353:../../Source/Kernel/rme_kernel.c **** 
4354:../../Source/Kernel/rme_kernel.c ****         /* Return failure - report the exception */
4355:../../Source/Kernel/rme_kernel.c ****         Local=RME_CPU_LOCAL();
 8992              		.loc 1 4355 14
 8993 002c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 8994 0030 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 8995 0034 08300BE5 		str	r3, [fp, #-8]
4356:../../Source/Kernel/rme_kernel.c ****         Thd_Cur=Local->Thd_Cur;
 8996              		.loc 1 4356 16
 8997 0038 08301BE5 		ldr	r3, [fp, #-8]
 8998 003c 043093E5 		ldr	r3, [r3, #4]
 8999 0040 0C300BE5 		str	r3, [fp, #-12]
4357:../../Source/Kernel/rme_kernel.c ****         
4358:../../Source/Kernel/rme_kernel.c ****         /* Init thread shall never have exceptions */
4359:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 9000              		.loc 1 4359 26
 9001 0044 0C301BE5 		ldr	r3, [fp, #-12]
 9002 0048 183093E5 		ldr	r3, [r3, #24]
 9003              		.loc 1 4359 11
 9004 004c 060173E3 		cmn	r3, #-2147483647
 9005 0050 0B00001A 		bne	.L597
4360:../../Source/Kernel/rme_kernel.c ****         {
4361:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4362:../../Source/Kernel/rme_kernel.c ****             
4363:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("Attempted to kill init thread.");
 9006              		.loc 1 4363 13
 9007 0054 000000E3 		movw	r0, #:lower16:.LC7
 9008 0058 000040E3 		movt	r0, #:upper16:.LC7
 9009 005c FEFFFFEB 		bl	RME_Str_Print
4364:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(0U);
 9010              		.loc 1 4364 13
 9011 0060 003000E3 		movw	r3, #:lower16:.LC4
 9012 0064 003040E3 		movt	r3, #:upper16:.LC4
 9013 0068 002000E3 		movw	r2, #:lower16:.LC5
 9014 006c 002040E3 		movt	r2, #:upper16:.LC5
 9015 0070 0C1101E3 		movw	r1, #4364
 9016 0074 000000E3 		movw	r0, #:lower16:.LC6
 9017 0078 000040E3 		movt	r0, #:upper16:.LC6
 9018 007c FEFFFFEB 		bl	RME_Log
 9019              	.L598:
 9020              		.loc 1 4364 13 is_stmt 0 discriminator 1
 9021 0080 FEFFFFEA 		b	.L598
 9022              	.L597:
4365:../../Source/Kernel/rme_kernel.c ****         }
4366:../../Source/Kernel/rme_kernel.c ****         else
4367:../../Source/Kernel/rme_kernel.c ****         {
4368:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4369:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4370:../../Source/Kernel/rme_kernel.c ****         }
4371:../../Source/Kernel/rme_kernel.c ****         
4372:../../Source/Kernel/rme_kernel.c ****         /* We must be running at this point to trigger a synchronous exception */
4373:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 9023              		.loc 1 4373 9 is_stmt 1
 9024 0084 0C301BE5 		ldr	r3, [fp, #-12]
 9025 0088 1C3093E5 		ldr	r3, [r3, #28]
 9026 008c 000053E3 		cmp	r3, #0
 9027 0090 0800000A 		beq	.L599
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 237


 9028              		.loc 1 4373 9 is_stmt 0 discriminator 1
 9029 0094 003000E3 		movw	r3, #:lower16:.LC4
 9030 0098 003040E3 		movt	r3, #:upper16:.LC4
 9031 009c 002000E3 		movw	r2, #:lower16:.LC5
 9032 00a0 002040E3 		movt	r2, #:upper16:.LC5
 9033 00a4 151101E3 		movw	r1, #4373
 9034 00a8 000000E3 		movw	r0, #:lower16:.LC6
 9035 00ac 000040E3 		movt	r0, #:upper16:.LC6
 9036 00b0 FEFFFFEB 		bl	RME_Log
 9037              	.L600:
 9038              		.loc 1 4373 9 discriminator 2
 9039 00b4 FEFFFFEA 		b	.L600
 9040              	.L599:
4374:../../Source/Kernel/rme_kernel.c ****         
4375:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue */
4376:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thd_Cur);
 9041              		.loc 1 4376 9 is_stmt 1
 9042 00b8 0C001BE5 		ldr	r0, [fp, #-12]
 9043 00bc FEFFFFEB 		bl	_RME_Run_Del
4377:../../Source/Kernel/rme_kernel.c ****         
4378:../../Source/Kernel/rme_kernel.c ****         /* Exception pending and notify parent */
4379:../../Source/Kernel/rme_kernel.c ****         Thd_Cur->Sched.State=RME_THD_EXCPEND;
 9044              		.loc 1 4379 29
 9045 00c0 0C301BE5 		ldr	r3, [fp, #-12]
 9046 00c4 0320A0E3 		mov	r2, #3
 9047 00c8 1C2083E5 		str	r2, [r3, #28]
4380:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Notif(Thd_Cur);
 9048              		.loc 1 4380 9
 9049 00cc 0C001BE5 		ldr	r0, [fp, #-12]
 9050 00d0 FEFFFFEB 		bl	_RME_Run_Notif
4381:../../Source/Kernel/rme_kernel.c ****         
4382:../../Source/Kernel/rme_kernel.c ****         /* All kernel send complete, now pick the highest priority thread to run */
4383:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 9051              		.loc 1 4383 9
 9052 00d4 08101BE5 		ldr	r1, [fp, #-8]
 9053 00d8 10001BE5 		ldr	r0, [fp, #-16]
 9054 00dc FEFFFFEB 		bl	_RME_Kern_High
 9055              	.L601:
4384:../../Source/Kernel/rme_kernel.c ****     }
4385:../../Source/Kernel/rme_kernel.c ****     else
4386:../../Source/Kernel/rme_kernel.c ****     {
4387:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4388:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4389:../../Source/Kernel/rme_kernel.c ****     }
4390:../../Source/Kernel/rme_kernel.c **** }
 9056              		.loc 1 4390 1
 9057 00e0 00F020E3 		nop
 9058 00e4 04D04BE2 		sub	sp, fp, #4
 9059              		.cfi_def_cfa 13, 8
 9060              		@ sp needed
 9061 00e8 0088BDE8 		pop	{fp, pc}
 9062              		.cfi_endproc
 9063              	.LFE43:
 9065              		.section	.text._RME_Run_Ins,"ax",%progbits
 9066              		.align	2
 9067              		.syntax unified
 9068              		.arm
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 238


 9070              	_RME_Run_Ins:
 9071              	.LFB44:
4391:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Fatal ***********************************************/
4392:../../Source/Kernel/rme_kernel.c **** 
4393:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Ins ******************************************************
4394:../../Source/Kernel/rme_kernel.c **** Description : Insert a thread into the runqueue. In this function we do not
4395:../../Source/Kernel/rme_kernel.c ****               check if the thread is on the current core, or is runnable,
4396:../../Source/Kernel/rme_kernel.c ****               because it should have been checked by someone else.
4397:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to insert.
4398:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The cpu to consult.
4399:../../Source/Kernel/rme_kernel.c **** Output      : None.
4400:../../Source/Kernel/rme_kernel.c **** Return      : None.
4401:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4402:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Ins(struct RME_Thd_Struct* Thd)
4403:../../Source/Kernel/rme_kernel.c **** {
 9072              		.loc 1 4403 1
 9073              		.cfi_startproc
 9074              		@ args = 0, pretend = 0, frame = 16
 9075              		@ frame_needed = 1, uses_anonymous_args = 0
 9076 0000 00482DE9 		push	{fp, lr}
 9077              		.cfi_def_cfa_offset 8
 9078              		.cfi_offset 11, -8
 9079              		.cfi_offset 14, -4
 9080 0004 04B08DE2 		add	fp, sp, #4
 9081              		.cfi_def_cfa 11, 4
 9082 0008 10D04DE2 		sub	sp, sp, #16
 9083 000c 10000BE5 		str	r0, [fp, #-16]
4404:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4405:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4406:../../Source/Kernel/rme_kernel.c ****     
4407:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9084              		.loc 1 4407 9
 9085 0010 10301BE5 		ldr	r3, [fp, #-16]
 9086 0014 203093E5 		ldr	r3, [r3, #32]
 9087 0018 08300BE5 		str	r3, [fp, #-8]
4408:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9088              		.loc 1 4408 10
 9089 001c 10301BE5 		ldr	r3, [fp, #-16]
 9090 0020 143093E5 		ldr	r3, [r3, #20]
 9091 0024 0C300BE5 		str	r3, [fp, #-12]
4409:../../Source/Kernel/rme_kernel.c ****     
4410:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4411:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9092              		.loc 1 4411 5
 9093 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9094 002c 010073E3 		cmn	r3, #1
 9095 0030 0800001A 		bne	.L603
 9096              		.loc 1 4411 5 is_stmt 0 discriminator 1
 9097 0034 003000E3 		movw	r3, #:lower16:.LC4
 9098 0038 003040E3 		movt	r3, #:upper16:.LC4
 9099 003c 002000E3 		movw	r2, #:lower16:.LC5
 9100 0040 002040E3 		movt	r2, #:upper16:.LC5
 9101 0044 3B1101E3 		movw	r1, #4411
 9102 0048 000000E3 		movw	r0, #:lower16:.LC6
 9103 004c 000040E3 		movt	r0, #:upper16:.LC6
 9104 0050 FEFFFFEB 		bl	RME_Log
 9105              	.L604:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 239


 9106 0054 FEFFFFEA 		b	.L604
 9107              	.L603:
4412:../../Source/Kernel/rme_kernel.c ****     
4413:../../Source/Kernel/rme_kernel.c ****     /* Insert this thread into the runqueue */
4414:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Thd->Sched.Run),
 9108              		.loc 1 4414 5 is_stmt 1
 9109 0058 10001BE5 		ldr	r0, [fp, #-16]
 9110 005c 0C201BE5 		ldr	r2, [fp, #-12]
 9111 0060 08301BE5 		ldr	r3, [fp, #-8]
 9112 0064 023083E2 		add	r3, r3, #2
 9113 0068 8331A0E1 		lsl	r3, r3, #3
 9114 006c 033082E0 		add	r3, r2, r3
 9115 0070 081093E5 		ldr	r1, [r3, #8]
 9116 0074 08301BE5 		ldr	r3, [fp, #-8]
 9117 0078 023083E2 		add	r3, r3, #2
 9118 007c 8331A0E1 		lsl	r3, r3, #3
 9119 0080 0C201BE5 		ldr	r2, [fp, #-12]
 9120 0084 033082E0 		add	r3, r2, r3
 9121 0088 043083E2 		add	r3, r3, #4
 9122 008c 0320A0E1 		mov	r2, r3
 9123 0090 FEFFFFEB 		bl	_RME_List_Ins
4415:../../Source/Kernel/rme_kernel.c ****                   Local->Run.List[Prio].Prev,
4416:../../Source/Kernel/rme_kernel.c ****                   &(Local->Run.List[Prio]));
4417:../../Source/Kernel/rme_kernel.c ****     
4418:../../Source/Kernel/rme_kernel.c ****     /* Set the bit in the bitmap */
4419:../../Source/Kernel/rme_kernel.c ****     RME_BITMAP_SET(Local->Run.Bitmap,Prio);
 9124              		.loc 1 4419 5
 9125 0094 08301BE5 		ldr	r3, [fp, #-8]
 9126 0098 A322A0E1 		lsr	r2, r3, #5
 9127 009c 0C301BE5 		ldr	r3, [fp, #-12]
 9128 00a0 042082E2 		add	r2, r2, #4
 9129 00a4 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9130 00a8 08301BE5 		ldr	r3, [fp, #-8]
 9131 00ac 1F3003E2 		and	r3, r3, #31
 9132 00b0 0120A0E3 		mov	r2, #1
 9133 00b4 1233A0E1 		lsl	r3, r2, r3
 9134 00b8 08201BE5 		ldr	r2, [fp, #-8]
 9135 00bc A222A0E1 		lsr	r2, r2, #5
 9136 00c0 031081E1 		orr	r1, r1, r3
 9137 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 9138 00c8 042082E2 		add	r2, r2, #4
 9139 00cc 021183E7 		str	r1, [r3, r2, lsl #2]
4420:../../Source/Kernel/rme_kernel.c **** }
 9140              		.loc 1 4420 1
 9141 00d0 00F020E3 		nop
 9142 00d4 04D04BE2 		sub	sp, fp, #4
 9143              		.cfi_def_cfa 13, 8
 9144              		@ sp needed
 9145 00d8 0088BDE8 		pop	{fp, pc}
 9146              		.cfi_endproc
 9147              	.LFE44:
 9149              		.section	.text._RME_Run_Del,"ax",%progbits
 9150              		.align	2
 9151              		.syntax unified
 9152              		.arm
 9154              	_RME_Run_Del:
 9155              	.LFB45:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 240


4421:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Ins *************************************************/
4422:../../Source/Kernel/rme_kernel.c **** 
4423:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Del ******************************************************
4424:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread from the runqueue.
4425:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to delete.
4426:../../Source/Kernel/rme_kernel.c **** Output      : None.
4427:../../Source/Kernel/rme_kernel.c **** Return      : None.
4428:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4429:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Del(struct RME_Thd_Struct* Thd)
4430:../../Source/Kernel/rme_kernel.c **** {
 9156              		.loc 1 4430 1
 9157              		.cfi_startproc
 9158              		@ args = 0, pretend = 0, frame = 16
 9159              		@ frame_needed = 1, uses_anonymous_args = 0
 9160 0000 00482DE9 		push	{fp, lr}
 9161              		.cfi_def_cfa_offset 8
 9162              		.cfi_offset 11, -8
 9163              		.cfi_offset 14, -4
 9164 0004 04B08DE2 		add	fp, sp, #4
 9165              		.cfi_def_cfa 11, 4
 9166 0008 10D04DE2 		sub	sp, sp, #16
 9167 000c 10000BE5 		str	r0, [fp, #-16]
4431:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4432:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4433:../../Source/Kernel/rme_kernel.c ****     
4434:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9168              		.loc 1 4434 9
 9169 0010 10301BE5 		ldr	r3, [fp, #-16]
 9170 0014 203093E5 		ldr	r3, [r3, #32]
 9171 0018 08300BE5 		str	r3, [fp, #-8]
4435:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9172              		.loc 1 4435 10
 9173 001c 10301BE5 		ldr	r3, [fp, #-16]
 9174 0020 143093E5 		ldr	r3, [r3, #20]
 9175 0024 0C300BE5 		str	r3, [fp, #-12]
4436:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4437:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9176              		.loc 1 4437 5
 9177 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9178 002c 010073E3 		cmn	r3, #1
 9179 0030 0800001A 		bne	.L606
 9180              		.loc 1 4437 5 is_stmt 0 discriminator 1
 9181 0034 003000E3 		movw	r3, #:lower16:.LC4
 9182 0038 003040E3 		movt	r3, #:upper16:.LC4
 9183 003c 002000E3 		movw	r2, #:lower16:.LC5
 9184 0040 002040E3 		movt	r2, #:upper16:.LC5
 9185 0044 551101E3 		movw	r1, #4437
 9186 0048 000000E3 		movw	r0, #:lower16:.LC6
 9187 004c 000040E3 		movt	r0, #:upper16:.LC6
 9188 0050 FEFFFFEB 		bl	RME_Log
 9189              	.L607:
 9190 0054 FEFFFFEA 		b	.L607
 9191              	.L606:
4438:../../Source/Kernel/rme_kernel.c ****     
4439:../../Source/Kernel/rme_kernel.c ****     /* Delete this thread from the runqueue */
4440:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thd->Sched.Run.Prev,Thd->Sched.Run.Next);
 9192              		.loc 1 4440 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 241


 9193 0058 10301BE5 		ldr	r3, [fp, #-16]
 9194 005c 042093E5 		ldr	r2, [r3, #4]
 9195 0060 10301BE5 		ldr	r3, [fp, #-16]
 9196 0064 003093E5 		ldr	r3, [r3]
 9197 0068 0310A0E1 		mov	r1, r3
 9198 006c 0200A0E1 		mov	r0, r2
 9199 0070 FEFFFFEB 		bl	_RME_List_Del
4441:../../Source/Kernel/rme_kernel.c ****     
4442:../../Source/Kernel/rme_kernel.c ****     /* See if there are any thread on this priority level */
4443:../../Source/Kernel/rme_kernel.c ****     if(Local->Run.List[Prio].Next==&(Local->Run.List[Prio]))
 9200              		.loc 1 4443 29
 9201 0074 0C201BE5 		ldr	r2, [fp, #-12]
 9202 0078 08301BE5 		ldr	r3, [fp, #-8]
 9203 007c 023083E2 		add	r3, r3, #2
 9204 0080 8331A0E1 		lsl	r3, r3, #3
 9205 0084 033082E0 		add	r3, r2, r3
 9206 0088 042093E5 		ldr	r2, [r3, #4]
 9207              		.loc 1 4443 36
 9208 008c 08301BE5 		ldr	r3, [fp, #-8]
 9209 0090 023083E2 		add	r3, r3, #2
 9210 0094 8331A0E1 		lsl	r3, r3, #3
 9211 0098 0C101BE5 		ldr	r1, [fp, #-12]
 9212 009c 033081E0 		add	r3, r1, r3
 9213 00a0 043083E2 		add	r3, r3, #4
 9214              		.loc 1 4443 7
 9215 00a4 030052E1 		cmp	r2, r3
 9216 00a8 0F00001A 		bne	.L609
4444:../../Source/Kernel/rme_kernel.c ****     {
4445:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4446:../../Source/Kernel/rme_kernel.c **** 
4447:../../Source/Kernel/rme_kernel.c ****         /* Nothing running, clear the bit in the bitmap */
4448:../../Source/Kernel/rme_kernel.c ****         RME_BITMAP_CLR(Local->Run.Bitmap,Prio);
 9217              		.loc 1 4448 9
 9218 00ac 08301BE5 		ldr	r3, [fp, #-8]
 9219 00b0 A322A0E1 		lsr	r2, r3, #5
 9220 00b4 0C301BE5 		ldr	r3, [fp, #-12]
 9221 00b8 042082E2 		add	r2, r2, #4
 9222 00bc 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9223 00c0 08301BE5 		ldr	r3, [fp, #-8]
 9224 00c4 1F3003E2 		and	r3, r3, #31
 9225 00c8 0120A0E3 		mov	r2, #1
 9226 00cc 1233A0E1 		lsl	r3, r2, r3
 9227 00d0 0330E0E1 		mvn	r3, r3
 9228 00d4 08201BE5 		ldr	r2, [fp, #-8]
 9229 00d8 A222A0E1 		lsr	r2, r2, #5
 9230 00dc 031001E0 		and	r1, r1, r3
 9231 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 9232 00e4 042082E2 		add	r2, r2, #4
 9233 00e8 021183E7 		str	r1, [r3, r2, lsl #2]
 9234              	.L609:
4449:../../Source/Kernel/rme_kernel.c ****     }
4450:../../Source/Kernel/rme_kernel.c ****     else
4451:../../Source/Kernel/rme_kernel.c ****     {
4452:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4453:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4454:../../Source/Kernel/rme_kernel.c ****     }
4455:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 242


 9235              		.loc 1 4455 1
 9236 00ec 00F020E3 		nop
 9237 00f0 04D04BE2 		sub	sp, fp, #4
 9238              		.cfi_def_cfa 13, 8
 9239              		@ sp needed
 9240 00f4 0088BDE8 		pop	{fp, pc}
 9241              		.cfi_endproc
 9242              	.LFE45:
 9244              		.section	.text._RME_Run_High,"ax",%progbits
 9245              		.align	2
 9246              		.syntax unified
 9247              		.arm
 9249              	_RME_Run_High:
 9250              	.LFB46:
4456:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Del *************************************************/
4457:../../Source/Kernel/rme_kernel.c **** 
4458:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_High *****************************************************
4459:../../Source/Kernel/rme_kernel.c **** Description : Find the thread with the highest priority on the core.
4460:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The CPU-local data structure.
4461:../../Source/Kernel/rme_kernel.c **** Output      : None.
4462:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Thd_Struct* - The thread returned.
4463:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4464:../../Source/Kernel/rme_kernel.c **** static struct RME_Thd_Struct* _RME_Run_High(struct RME_CPU_Local* Local)
4465:../../Source/Kernel/rme_kernel.c **** {
 9251              		.loc 1 4465 1
 9252              		.cfi_startproc
 9253              		@ args = 0, pretend = 0, frame = 16
 9254              		@ frame_needed = 1, uses_anonymous_args = 0
 9255 0000 00482DE9 		push	{fp, lr}
 9256              		.cfi_def_cfa_offset 8
 9257              		.cfi_offset 11, -8
 9258              		.cfi_offset 14, -4
 9259 0004 04B08DE2 		add	fp, sp, #4
 9260              		.cfi_def_cfa 11, 4
 9261 0008 10D04DE2 		sub	sp, sp, #16
 9262 000c 10000BE5 		str	r0, [fp, #-16]
4466:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
4467:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4468:../../Source/Kernel/rme_kernel.c ****     
4469:../../Source/Kernel/rme_kernel.c ****     /* We start looking for preemption priority levels from the highest */
4470:../../Source/Kernel/rme_kernel.c ****     for(Count=(rme_cnt_t)(RME_PRIO_WORD_NUM-1U);Count>=0;Count--)
 9263              		.loc 1 4470 14
 9264 0010 0030A0E3 		mov	r3, #0
 9265 0014 08300BE5 		str	r3, [fp, #-8]
 9266              		.loc 1 4470 5
 9267 0018 080000EA 		b	.L611
 9268              	.L614:
4471:../../Source/Kernel/rme_kernel.c ****     {
4472:../../Source/Kernel/rme_kernel.c ****         if(Local->Run.Bitmap[Count]!=0U)
 9269              		.loc 1 4472 29
 9270 001c 10301BE5 		ldr	r3, [fp, #-16]
 9271 0020 08201BE5 		ldr	r2, [fp, #-8]
 9272 0024 042082E2 		add	r2, r2, #4
 9273 0028 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9274              		.loc 1 4472 11
 9275 002c 000053E3 		cmp	r3, #0
 9276 0030 0600001A 		bne	.L618
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 243


4470:../../Source/Kernel/rme_kernel.c ****     {
 9277              		.loc 1 4470 63 discriminator 2
 9278 0034 08301BE5 		ldr	r3, [fp, #-8]
 9279 0038 013043E2 		sub	r3, r3, #1
 9280 003c 08300BE5 		str	r3, [fp, #-8]
 9281              	.L611:
4470:../../Source/Kernel/rme_kernel.c ****     {
 9282              		.loc 1 4470 5 discriminator 1
 9283 0040 08301BE5 		ldr	r3, [fp, #-8]
 9284 0044 000053E3 		cmp	r3, #0
 9285 0048 F3FFFFAA 		bge	.L614
 9286 004c 000000EA 		b	.L613
 9287              	.L618:
4473:../../Source/Kernel/rme_kernel.c ****         {
4474:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4475:../../Source/Kernel/rme_kernel.c ****             
4476:../../Source/Kernel/rme_kernel.c ****             break;
 9288              		.loc 1 4476 13
 9289 0050 00F020E3 		nop
 9290              	.L613:
4477:../../Source/Kernel/rme_kernel.c ****         }
4478:../../Source/Kernel/rme_kernel.c ****         else
4479:../../Source/Kernel/rme_kernel.c ****         {
4480:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4481:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4482:../../Source/Kernel/rme_kernel.c ****         }
4483:../../Source/Kernel/rme_kernel.c ****     }
4484:../../Source/Kernel/rme_kernel.c ****     
4485:../../Source/Kernel/rme_kernel.c ****     /* It must be possible to find one thread per core */
4486:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Count>=0);
 9291              		.loc 1 4486 5
 9292 0054 08301BE5 		ldr	r3, [fp, #-8]
 9293 0058 000053E3 		cmp	r3, #0
 9294 005c 080000AA 		bge	.L615
 9295              		.loc 1 4486 5 is_stmt 0 discriminator 1
 9296 0060 003000E3 		movw	r3, #:lower16:.LC4
 9297 0064 003040E3 		movt	r3, #:upper16:.LC4
 9298 0068 002000E3 		movw	r2, #:lower16:.LC5
 9299 006c 002040E3 		movt	r2, #:upper16:.LC5
 9300 0070 861101E3 		movw	r1, #4486
 9301 0074 000000E3 		movw	r0, #:lower16:.LC6
 9302 0078 000040E3 		movt	r0, #:upper16:.LC6
 9303 007c FEFFFFEB 		bl	RME_Log
 9304              	.L616:
 9305 0080 FEFFFFEA 		b	.L616
 9306              	.L615:
4487:../../Source/Kernel/rme_kernel.c **** 
4488:../../Source/Kernel/rme_kernel.c ****     /* Get the first "1"'s position in the word */
4489:../../Source/Kernel/rme_kernel.c ****     Prio=RME_MSB_GET(Local->Run.Bitmap[Count]);
 9307              		.loc 1 4489 10 is_stmt 1
 9308 0084 10301BE5 		ldr	r3, [fp, #-16]
 9309 0088 08201BE5 		ldr	r2, [fp, #-8]
 9310 008c 042082E2 		add	r2, r2, #4
 9311 0090 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9312 0094 0300A0E1 		mov	r0, r3
 9313 0098 FEFFFFEB 		bl	__RME_A7A_MSB_Get
 9314 009c 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 244


4490:../../Source/Kernel/rme_kernel.c ****     Prio+=((rme_ptr_t)Count)<<RME_WORD_ORDER;
 9315              		.loc 1 4490 12
 9316 00a0 08301BE5 		ldr	r3, [fp, #-8]
 9317              		.loc 1 4490 29
 9318 00a4 8332A0E1 		lsl	r3, r3, #5
 9319              		.loc 1 4490 9
 9320 00a8 0C201BE5 		ldr	r2, [fp, #-12]
 9321 00ac 033082E0 		add	r3, r2, r3
 9322 00b0 0C300BE5 		str	r3, [fp, #-12]
4491:../../Source/Kernel/rme_kernel.c **** 
4492:../../Source/Kernel/rme_kernel.c ****     /* Now there is something at this priority level. Get it and start to run */
4493:../../Source/Kernel/rme_kernel.c ****     return (struct RME_Thd_Struct*)(Local->Run.List[Prio].Next);
 9323              		.loc 1 4493 12
 9324 00b4 10201BE5 		ldr	r2, [fp, #-16]
 9325 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 9326 00bc 023083E2 		add	r3, r3, #2
 9327 00c0 8331A0E1 		lsl	r3, r3, #3
 9328 00c4 033082E0 		add	r3, r2, r3
 9329 00c8 043093E5 		ldr	r3, [r3, #4]
4494:../../Source/Kernel/rme_kernel.c **** }
 9330              		.loc 1 4494 1
 9331 00cc 0300A0E1 		mov	r0, r3
 9332 00d0 04D04BE2 		sub	sp, fp, #4
 9333              		.cfi_def_cfa 13, 8
 9334              		@ sp needed
 9335 00d4 0088BDE8 		pop	{fp, pc}
 9336              		.cfi_endproc
 9337              	.LFE46:
 9339              		.section	.text._RME_Run_Notif,"ax",%progbits
 9340              		.align	2
 9341              		.syntax unified
 9342              		.arm
 9344              	_RME_Run_Notif:
 9345              	.LFB47:
4495:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_High ************************************************/
4496:../../Source/Kernel/rme_kernel.c **** 
4497:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Notif ****************************************************
4498:../../Source/Kernel/rme_kernel.c **** Description : Send a notification to the thread's parent, to notify that this 
4499:../../Source/Kernel/rme_kernel.c ****               thread is currently out of time, or have a fault.
4500:../../Source/Kernel/rme_kernel.c ****               This function includes kernel send, so we need to call 
4501:../../Source/Kernel/rme_kernel.c ****               _RME_Kern_High after this. The only exception being the
4502:../../Source/Kernel/rme_kernel.c ****               _RME_Thd_Swt system call, which we use a more optimized routine.
4503:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to send notification for.
4504:../../Source/Kernel/rme_kernel.c **** Output      : None.
4505:../../Source/Kernel/rme_kernel.c **** Return      : None.
4506:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4507:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Notif(struct RME_Thd_Struct* Thd)
4508:../../Source/Kernel/rme_kernel.c **** {
 9346              		.loc 1 4508 1
 9347              		.cfi_startproc
 9348              		@ args = 0, pretend = 0, frame = 16
 9349              		@ frame_needed = 1, uses_anonymous_args = 0
 9350 0000 00482DE9 		push	{fp, lr}
 9351              		.cfi_def_cfa_offset 8
 9352              		.cfi_offset 11, -8
 9353              		.cfi_offset 14, -4
 9354 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 245


 9355              		.cfi_def_cfa 11, 4
 9356 0008 10D04DE2 		sub	sp, sp, #16
 9357 000c 10000BE5 		str	r0, [fp, #-16]
4509:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Sched_Thd;
4510:../../Source/Kernel/rme_kernel.c ****     
4511:../../Source/Kernel/rme_kernel.c ****     Sched_Thd=Thd->Sched.Sched_Thd;
 9358              		.loc 1 4511 14
 9359 0010 10301BE5 		ldr	r3, [fp, #-16]
 9360 0014 343093E5 		ldr	r3, [r3, #52]
 9361 0018 08300BE5 		str	r3, [fp, #-8]
4512:../../Source/Kernel/rme_kernel.c ****     
4513:../../Source/Kernel/rme_kernel.c ****     /* See if there is already a notification. If yes, do not do the send again */
4514:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Notif.Next==&(Thd->Sched.Notif))
 9362              		.loc 1 4514 24
 9363 001c 10301BE5 		ldr	r3, [fp, #-16]
 9364 0020 082093E5 		ldr	r2, [r3, #8]
 9365              		.loc 1 4514 31
 9366 0024 10301BE5 		ldr	r3, [fp, #-16]
 9367 0028 083083E2 		add	r3, r3, #8
 9368              		.loc 1 4514 7
 9369 002c 030052E1 		cmp	r2, r3
 9370 0030 0700001A 		bne	.L620
4515:../../Source/Kernel/rme_kernel.c ****     {
4516:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4517:../../Source/Kernel/rme_kernel.c **** 
4518:../../Source/Kernel/rme_kernel.c ****         _RME_List_Ins(&(Thd->Sched.Notif), 
 9371              		.loc 1 4518 9
 9372 0034 10301BE5 		ldr	r3, [fp, #-16]
 9373 0038 080083E2 		add	r0, r3, #8
 9374 003c 08301BE5 		ldr	r3, [fp, #-8]
 9375 0040 401093E5 		ldr	r1, [r3, #64]
 9376 0044 08301BE5 		ldr	r3, [fp, #-8]
 9377 0048 3C3083E2 		add	r3, r3, #60
 9378 004c 0320A0E1 		mov	r2, r3
 9379 0050 FEFFFFEB 		bl	_RME_List_Ins
 9380              	.L620:
4519:../../Source/Kernel/rme_kernel.c ****                       Sched_Thd->Sched.Event.Prev,&(Sched_Thd->Sched.Event));
4520:../../Source/Kernel/rme_kernel.c ****     }
4521:../../Source/Kernel/rme_kernel.c ****     else
4522:../../Source/Kernel/rme_kernel.c ****     {
4523:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4524:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4525:../../Source/Kernel/rme_kernel.c ****     }
4526:../../Source/Kernel/rme_kernel.c **** 
4527:../../Source/Kernel/rme_kernel.c ****     /* If this guy have an endpoint, send to it */
4528:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Sched_Sig!=0U)
 9381              		.loc 1 4528 18
 9382 0054 10301BE5 		ldr	r3, [fp, #-16]
 9383 0058 383093E5 		ldr	r3, [r3, #56]
 9384              		.loc 1 4528 7
 9385 005c 000053E3 		cmp	r3, #0
 9386 0060 0300000A 		beq	.L622
4529:../../Source/Kernel/rme_kernel.c ****     {
4530:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4531:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_Snd(Thd->Sched.Sched_Sig);
 9387              		.loc 1 4531 9
 9388 0064 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 246


 9389 0068 383093E5 		ldr	r3, [r3, #56]
 9390 006c 0300A0E1 		mov	r0, r3
 9391 0070 FEFFFFEB 		bl	_RME_Kern_Snd
 9392              	.L622:
4532:../../Source/Kernel/rme_kernel.c ****     }
4533:../../Source/Kernel/rme_kernel.c ****     else
4534:../../Source/Kernel/rme_kernel.c ****     {
4535:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4536:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4537:../../Source/Kernel/rme_kernel.c ****     }
4538:../../Source/Kernel/rme_kernel.c **** }
 9393              		.loc 1 4538 1
 9394 0074 00F020E3 		nop
 9395 0078 04D04BE2 		sub	sp, fp, #4
 9396              		.cfi_def_cfa 13, 8
 9397              		@ sp needed
 9398 007c 0088BDE8 		pop	{fp, pc}
 9399              		.cfi_endproc
 9400              	.LFE47:
 9402              		.section	.text._RME_Thd_Pgt,"ax",%progbits
 9403              		.align	2
 9404              		.global	_RME_Thd_Pgt
 9405              		.syntax unified
 9406              		.arm
 9408              	_RME_Thd_Pgt:
 9409              	.LFB48:
4539:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Notif ***********************************************/
4540:../../Source/Kernel/rme_kernel.c **** 
4541:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Pgt ******************************************************
4542:../../Source/Kernel/rme_kernel.c **** Description : Get a thread's page table. 
4543:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread.
4544:../../Source/Kernel/rme_kernel.c **** Output      : None.
4545:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Cap_Pgt* / rme_ptr_t - The page table.
4546:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4547:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4548:../../Source/Kernel/rme_kernel.c **** struct RME_Cap_Pgt* _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4549:../../Source/Kernel/rme_kernel.c **** #else
4550:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4551:../../Source/Kernel/rme_kernel.c **** #endif
4552:../../Source/Kernel/rme_kernel.c **** {
 9410              		.loc 1 4552 1
 9411              		.cfi_startproc
 9412              		@ args = 0, pretend = 0, frame = 16
 9413              		@ frame_needed = 1, uses_anonymous_args = 0
 9414              		@ link register save eliminated.
 9415 0000 04B02DE5 		str	fp, [sp, #-4]!
 9416              		.cfi_def_cfa_offset 4
 9417              		.cfi_offset 11, -4
 9418 0004 00B08DE2 		add	fp, sp, #0
 9419              		.cfi_def_cfa_register 11
 9420 0008 14D04DE2 		sub	sp, sp, #20
 9421 000c 10000BE5 		str	r0, [fp, #-16]
4553:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
4554:../../Source/Kernel/rme_kernel.c ****     
4555:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd);
 9422              		.loc 1 4555 13
 9423 0010 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 247


 9424 0014 4C2093E5 		ldr	r2, [r3, #76]
 9425 0018 10301BE5 		ldr	r3, [fp, #-16]
 9426 001c 4C3083E2 		add	r3, r3, #76
 9427 0020 030052E1 		cmp	r2, r3
 9428 0024 0200000A 		beq	.L624
 9429              		.loc 1 4555 13 is_stmt 0 discriminator 1
 9430 0028 10301BE5 		ldr	r3, [fp, #-16]
 9431 002c 4C3093E5 		ldr	r3, [r3, #76]
 9432 0030 000000EA 		b	.L625
 9433              	.L624:
 9434              		.loc 1 4555 13 discriminator 2
 9435 0034 0030A0E3 		mov	r3, #0
 9436              	.L625:
 9437              		.loc 1 4555 12 is_stmt 1 discriminator 4
 9438 0038 08300BE5 		str	r3, [fp, #-8]
4556:../../Source/Kernel/rme_kernel.c ****     
4557:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 9439              		.loc 1 4557 7 discriminator 4
 9440 003c 08301BE5 		ldr	r3, [fp, #-8]
 9441 0040 000053E3 		cmp	r3, #0
 9442 0044 0300001A 		bne	.L626
4558:../../Source/Kernel/rme_kernel.c ****     {
4559:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4560:../../Source/Kernel/rme_kernel.c **** 
4561:../../Source/Kernel/rme_kernel.c ****         return Thd->Sched.Prc->Pgt;
 9443              		.loc 1 4561 26
 9444 0048 10301BE5 		ldr	r3, [fp, #-16]
 9445 004c 2C3093E5 		ldr	r3, [r3, #44]
 9446              		.loc 1 4561 30
 9447 0050 183093E5 		ldr	r3, [r3, #24]
 9448 0054 020000EA 		b	.L627
 9449              	.L626:
4562:../../Source/Kernel/rme_kernel.c ****     }
4563:../../Source/Kernel/rme_kernel.c ****     else
4564:../../Source/Kernel/rme_kernel.c ****     {
4565:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4566:../../Source/Kernel/rme_kernel.c **** 
4567:../../Source/Kernel/rme_kernel.c ****         return Inv_Top->Prc->Pgt;
 9450              		.loc 1 4567 23
 9451 0058 08301BE5 		ldr	r3, [fp, #-8]
 9452 005c 083093E5 		ldr	r3, [r3, #8]
 9453              		.loc 1 4567 28
 9454 0060 183093E5 		ldr	r3, [r3, #24]
 9455              	.L627:
4568:../../Source/Kernel/rme_kernel.c ****     }
4569:../../Source/Kernel/rme_kernel.c **** }
 9456              		.loc 1 4569 1
 9457 0064 0300A0E1 		mov	r0, r3
 9458 0068 00D08BE2 		add	sp, fp, #0
 9459              		.cfi_def_cfa_register 13
 9460              		@ sp needed
 9461 006c 04B09DE4 		ldr	fp, [sp], #4
 9462              		.cfi_restore 11
 9463              		.cfi_def_cfa_offset 0
 9464 0070 1EFF2FE1 		bx	lr
 9465              		.cfi_endproc
 9466              	.LFE48:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 248


 9468              		.section	.text._RME_Run_Swt,"ax",%progbits
 9469              		.align	2
 9470              		.syntax unified
 9471              		.arm
 9473              	_RME_Run_Swt:
 9474              	.LFB49:
4570:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Pgt *************************************************/
4571:../../Source/Kernel/rme_kernel.c **** 
4572:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Swt ******************************************************
4573:../../Source/Kernel/rme_kernel.c **** Description : Switch the register set and page table to another thread. 
4574:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4575:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_Cur - The current thread.
4576:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_New - The next thread.
4577:../../Source/Kernel/rme_kernel.c **** Output      : None.
4578:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
4579:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4580:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Run_Swt(struct RME_Reg_Struct* Reg,
4581:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_Cur, 
4582:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_New)
4583:../../Source/Kernel/rme_kernel.c **** {
 9475              		.loc 1 4583 1
 9476              		.cfi_startproc
 9477              		@ args = 0, pretend = 0, frame = 32
 9478              		@ frame_needed = 1, uses_anonymous_args = 0
 9479 0000 00482DE9 		push	{fp, lr}
 9480              		.cfi_def_cfa_offset 8
 9481              		.cfi_offset 11, -8
 9482              		.cfi_offset 14, -4
 9483 0004 04B08DE2 		add	fp, sp, #4
 9484              		.cfi_def_cfa 11, 4
 9485 0008 20D04DE2 		sub	sp, sp, #32
 9486 000c 18000BE5 		str	r0, [fp, #-24]
 9487 0010 1C100BE5 		str	r1, [fp, #-28]
 9488 0014 20200BE5 		str	r2, [fp, #-32]
4584:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4585:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Cur;
4586:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4587:../../Source/Kernel/rme_kernel.c **** #else
4588:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Cur;
4589:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_New;
4590:../../Source/Kernel/rme_kernel.c **** #endif
4591:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_Cur;
4592:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_New;
4593:../../Source/Kernel/rme_kernel.c ****     
4594:../../Source/Kernel/rme_kernel.c ****     Reg_Cur=&(Thd_Cur->Ctx.Reg->Reg);
 9489              		.loc 1 4594 27
 9490 0018 1C301BE5 		ldr	r3, [fp, #-28]
 9491 001c 483093E5 		ldr	r3, [r3, #72]
 9492              		.loc 1 4594 12
 9493 0020 08300BE5 		str	r3, [fp, #-8]
4595:../../Source/Kernel/rme_kernel.c ****     Reg_New=&(Thd_New->Ctx.Reg->Reg);
 9494              		.loc 1 4595 27
 9495 0024 20301BE5 		ldr	r3, [fp, #-32]
 9496 0028 483093E5 		ldr	r3, [r3, #72]
 9497              		.loc 1 4595 12
 9498 002c 0C300BE5 		str	r3, [fp, #-12]
4596:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 249


4597:../../Source/Kernel/rme_kernel.c ****     /* Save register context */
4598:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg_Cur,Reg);
 9499              		.loc 1 4598 5
 9500 0030 18101BE5 		ldr	r1, [fp, #-24]
 9501 0034 08001BE5 		ldr	r0, [fp, #-8]
 9502 0038 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4599:../../Source/Kernel/rme_kernel.c ****     
4600:../../Source/Kernel/rme_kernel.c ****     /* If coprocessor is enabled, handle coprocessor context as well */
4601:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
4602:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Cop_Swap(RME_THD_ATTR(Thd_New->Ctx.Hyp_Attr),
4603:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_New->Ctx.Hyp_Attr),
4604:../../Source/Kernel/rme_kernel.c ****                        Reg_New,Thd_New->Ctx.Reg->Cop,
4605:../../Source/Kernel/rme_kernel.c ****                        RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
4606:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_Cur->Ctx.Hyp_Attr),
4607:../../Source/Kernel/rme_kernel.c ****                        Reg_Cur,Thd_Cur->Ctx.Reg->Cop);
4608:../../Source/Kernel/rme_kernel.c **** #endif
4609:../../Source/Kernel/rme_kernel.c **** 
4610:../../Source/Kernel/rme_kernel.c ****     /* Load register context */
4611:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg,Reg_New);
 9503              		.loc 1 4611 5
 9504 003c 0C101BE5 		ldr	r1, [fp, #-12]
 9505 0040 18001BE5 		ldr	r0, [fp, #-24]
 9506 0044 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4612:../../Source/Kernel/rme_kernel.c **** 
4613:../../Source/Kernel/rme_kernel.c ****     /* Are we going to switch page tables? If yes, we change it now */
4614:../../Source/Kernel/rme_kernel.c ****     Pgt_Cur=_RME_Thd_Pgt(Thd_Cur);
 9507              		.loc 1 4614 13
 9508 0048 1C001BE5 		ldr	r0, [fp, #-28]
 9509 004c FEFFFFEB 		bl	_RME_Thd_Pgt
 9510 0050 10000BE5 		str	r0, [fp, #-16]
4615:../../Source/Kernel/rme_kernel.c ****     Pgt_New=_RME_Thd_Pgt(Thd_New);
 9511              		.loc 1 4615 13
 9512 0054 20001BE5 		ldr	r0, [fp, #-32]
 9513 0058 FEFFFFEB 		bl	_RME_Thd_Pgt
 9514 005c 14000BE5 		str	r0, [fp, #-20]
4616:../../Source/Kernel/rme_kernel.c ****     
4617:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4618:../../Source/Kernel/rme_kernel.c ****     /* The page tables here must be root cap */
4619:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_Cur)!=0U);
 9515              		.loc 1 4619 5
 9516 0060 10301BE5 		ldr	r3, [fp, #-16]
 9517 0064 003093E5 		ldr	r3, [r3]
 9518 0068 7330FFE6 		uxth	r3, r3
 9519 006c 000053E3 		cmp	r3, #0
 9520 0070 0800000A 		beq	.L629
 9521              		.loc 1 4619 5 is_stmt 0 discriminator 1
 9522 0074 003000E3 		movw	r3, #:lower16:.LC4
 9523 0078 003040E3 		movt	r3, #:upper16:.LC4
 9524 007c 002000E3 		movw	r2, #:lower16:.LC5
 9525 0080 002040E3 		movt	r2, #:upper16:.LC5
 9526 0084 0B1201E3 		movw	r1, #4619
 9527 0088 000000E3 		movw	r0, #:lower16:.LC6
 9528 008c 000040E3 		movt	r0, #:upper16:.LC6
 9529 0090 FEFFFFEB 		bl	RME_Log
 9530              	.L630:
 9531 0094 FEFFFFEA 		b	.L630
 9532              	.L629:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 250


4620:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_New)!=0U);
 9533              		.loc 1 4620 5 is_stmt 1
 9534 0098 14301BE5 		ldr	r3, [fp, #-20]
 9535 009c 003093E5 		ldr	r3, [r3]
 9536 00a0 7330FFE6 		uxth	r3, r3
 9537 00a4 000053E3 		cmp	r3, #0
 9538 00a8 0800000A 		beq	.L631
 9539              		.loc 1 4620 5 is_stmt 0 discriminator 1
 9540 00ac 003000E3 		movw	r3, #:lower16:.LC4
 9541 00b0 003040E3 		movt	r3, #:upper16:.LC4
 9542 00b4 002000E3 		movw	r2, #:lower16:.LC5
 9543 00b8 002040E3 		movt	r2, #:upper16:.LC5
 9544 00bc 0C1201E3 		movw	r1, #4620
 9545 00c0 000000E3 		movw	r0, #:lower16:.LC6
 9546 00c4 000040E3 		movt	r0, #:upper16:.LC6
 9547 00c8 FEFFFFEB 		bl	RME_Log
 9548              	.L632:
 9549              		.loc 1 4620 5 discriminator 2
 9550 00cc FEFFFFEA 		b	.L632
 9551              	.L631:
4621:../../Source/Kernel/rme_kernel.c **** #endif
4622:../../Source/Kernel/rme_kernel.c ****     
4623:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4624:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_GETOBJ(Pgt_Cur,rme_ptr_t)!=RME_CAP_GETOBJ(Pgt_New,rme_ptr_t))
 9552              		.loc 1 4624 8 is_stmt 1
 9553 00d0 10301BE5 		ldr	r3, [fp, #-16]
 9554 00d4 0C2093E5 		ldr	r2, [r3, #12]
 9555              		.loc 1 4624 43
 9556 00d8 14301BE5 		ldr	r3, [fp, #-20]
 9557 00dc 0C3093E5 		ldr	r3, [r3, #12]
 9558              		.loc 1 4624 7
 9559 00e0 030052E1 		cmp	r2, r3
 9560 00e4 0200000A 		beq	.L633
4625:../../Source/Kernel/rme_kernel.c **** #else
4626:../../Source/Kernel/rme_kernel.c ****     if(Pgt_Cur!=Pgt_New)
4627:../../Source/Kernel/rme_kernel.c **** #endif
4628:../../Source/Kernel/rme_kernel.c ****     {
4629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4630:../../Source/Kernel/rme_kernel.c ****         
4631:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Pgt_New);
 9561              		.loc 1 4631 9
 9562 00e8 14301BE5 		ldr	r3, [fp, #-20]
 9563 00ec 0300A0E1 		mov	r0, r3
 9564 00f0 FEFFFFEB 		bl	__RME_Pgt_Set
 9565              	.L633:
4632:../../Source/Kernel/rme_kernel.c ****     }
4633:../../Source/Kernel/rme_kernel.c ****     else
4634:../../Source/Kernel/rme_kernel.c ****     {
4635:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4636:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4637:../../Source/Kernel/rme_kernel.c ****     }
4638:../../Source/Kernel/rme_kernel.c **** 
4639:../../Source/Kernel/rme_kernel.c ****     return 0;
 9566              		.loc 1 4639 12
 9567 00f4 0030A0E3 		mov	r3, #0
4640:../../Source/Kernel/rme_kernel.c **** }
 9568              		.loc 1 4640 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 251


 9569 00f8 0300A0E1 		mov	r0, r3
 9570 00fc 04D04BE2 		sub	sp, fp, #4
 9571              		.cfi_def_cfa 13, 8
 9572              		@ sp needed
 9573 0100 0088BDE8 		pop	{fp, pc}
 9574              		.cfi_endproc
 9575              	.LFE49:
 9577              		.section	.text._RME_Prc_Boot_Crt,"ax",%progbits
 9578              		.align	2
 9579              		.global	_RME_Prc_Boot_Crt
 9580              		.syntax unified
 9581              		.arm
 9583              	_RME_Prc_Boot_Crt:
 9584              	.LFB50:
4641:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Swt *************************************************/
4642:../../Source/Kernel/rme_kernel.c **** 
4643:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Boot_Crt *************************************************
4644:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4645:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4646:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and is
4647:../../Source/Kernel/rme_kernel.c ****               only used to create the first process at boot-time.
4648:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4649:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4650:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4651:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4652:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4653:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4654:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4655:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4656:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4657:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4658:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4659:../../Source/Kernel/rme_kernel.c ****                                   this process.
4660:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4661:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4662:../../Source/Kernel/rme_kernel.c ****                                   address.
4663:../../Source/Kernel/rme_kernel.c **** Output      : None.
4664:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4665:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4666:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4667:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4668:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4669:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4670:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4671:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt)
4672:../../Source/Kernel/rme_kernel.c **** #else
4673:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4674:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4675:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4676:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4677:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Raw_Pgt)
4678:../../Source/Kernel/rme_kernel.c **** #endif
4679:../../Source/Kernel/rme_kernel.c **** {
 9585              		.loc 1 4679 1
 9586              		.cfi_startproc
 9587              		@ args = 4, pretend = 0, frame = 48
 9588              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 252


 9589 0000 00482DE9 		push	{fp, lr}
 9590              		.cfi_def_cfa_offset 8
 9591              		.cfi_offset 11, -8
 9592              		.cfi_offset 14, -4
 9593 0004 04B08DE2 		add	fp, sp, #4
 9594              		.cfi_def_cfa 11, 4
 9595 0008 30D04DE2 		sub	sp, sp, #48
 9596 000c 28000BE5 		str	r0, [fp, #-40]
 9597 0010 2C100BE5 		str	r1, [fp, #-44]
 9598 0014 30200BE5 		str	r2, [fp, #-48]
 9599 0018 34300BE5 		str	r3, [fp, #-52]
4680:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4681:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4682:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4683:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4684:../../Source/Kernel/rme_kernel.c **** #endif
4685:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4686:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4687:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4688:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4689:../../Source/Kernel/rme_kernel.c **** #endif
4690:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4691:../../Source/Kernel/rme_kernel.c ****     
4692:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4693:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 9600              		.loc 1 4693 5
 9601 001c 2C301BE5 		ldr	r3, [fp, #-44]
 9602 0020 803003E2 		and	r3, r3, #128
 9603 0024 000053E3 		cmp	r3, #0
 9604 0028 1D00001A 		bne	.L636
 9605              		.loc 1 4693 5 is_stmt 0 discriminator 1
 9606 002c 28301BE5 		ldr	r3, [fp, #-40]
 9607 0030 142093E5 		ldr	r2, [r3, #20]
 9608 0034 2C301BE5 		ldr	r3, [fp, #-44]
 9609 0038 030052E1 		cmp	r2, r3
 9610 003c 0100008A 		bhi	.L637
 9611              		.loc 1 4693 5 discriminator 3
 9612 0040 0230E0E3 		mvn	r3, #2
 9613 0044 7D0100EA 		b	.L638
 9614              	.L637:
 9615              		.loc 1 4693 5 discriminator 4
 9616 0048 2C301BE5 		ldr	r3, [fp, #-44]
 9617 004c 8322A0E1 		lsl	r2, r3, #5
 9618 0050 28301BE5 		ldr	r3, [fp, #-40]
 9619 0054 0C3093E5 		ldr	r3, [r3, #12]
 9620 0058 033082E0 		add	r3, r2, r3
 9621 005c 08300BE5 		str	r3, [fp, #-8]
 9622 0060 08301BE5 		ldr	r3, [fp, #-8]
 9623 0064 0300A0E1 		mov	r0, r3
 9624 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9625 006c 14000BE5 		str	r0, [fp, #-20]
 9626 0070 14301BE5 		ldr	r3, [fp, #-20]
 9627 0074 2338A0E1 		lsr	r3, r3, #16
 9628 0078 7330EFE6 		uxtb	r3, r3
 9629 007c 020053E3 		cmp	r3, #2
 9630 0080 0100001A 		bne	.L639
 9631              		.loc 1 4693 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 253


 9632 0084 0830E0E3 		mvn	r3, #8
 9633 0088 6C0100EA 		b	.L638
 9634              	.L639:
 9635              		.loc 1 4693 5 discriminator 6
 9636 008c 14301BE5 		ldr	r3, [fp, #-20]
 9637 0090 233CA0E1 		lsr	r3, r3, #24
 9638 0094 030053E3 		cmp	r3, #3
 9639 0098 4100000A 		beq	.L640
 9640              		.loc 1 4693 5 discriminator 7
 9641 009c 0130E0E3 		mvn	r3, #1
 9642 00a0 660100EA 		b	.L638
 9643              	.L636:
 9644              		.loc 1 4693 5 discriminator 2
 9645 00a4 2C301BE5 		ldr	r3, [fp, #-44]
 9646 00a8 2324A0E1 		lsr	r2, r3, #8
 9647 00ac 28301BE5 		ldr	r3, [fp, #-40]
 9648 00b0 143093E5 		ldr	r3, [r3, #20]
 9649 00b4 030052E1 		cmp	r2, r3
 9650 00b8 0100003A 		bcc	.L641
 9651              		.loc 1 4693 5 discriminator 8
 9652 00bc 0230E0E3 		mvn	r3, #2
 9653 00c0 5E0100EA 		b	.L638
 9654              	.L641:
 9655              		.loc 1 4693 5 discriminator 9
 9656 00c4 2C301BE5 		ldr	r3, [fp, #-44]
 9657 00c8 2334A0E1 		lsr	r3, r3, #8
 9658 00cc 8322A0E1 		lsl	r2, r3, #5
 9659 00d0 28301BE5 		ldr	r3, [fp, #-40]
 9660 00d4 0C3093E5 		ldr	r3, [r3, #12]
 9661 00d8 033082E0 		add	r3, r2, r3
 9662 00dc 08300BE5 		str	r3, [fp, #-8]
 9663 00e0 08301BE5 		ldr	r3, [fp, #-8]
 9664 00e4 0300A0E1 		mov	r0, r3
 9665 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9666 00ec 14000BE5 		str	r0, [fp, #-20]
 9667 00f0 14301BE5 		ldr	r3, [fp, #-20]
 9668 00f4 2338A0E1 		lsr	r3, r3, #16
 9669 00f8 7330EFE6 		uxtb	r3, r3
 9670 00fc 020053E3 		cmp	r3, #2
 9671 0100 0100001A 		bne	.L642
 9672              		.loc 1 4693 5 discriminator 10
 9673 0104 0830E0E3 		mvn	r3, #8
 9674 0108 4C0100EA 		b	.L638
 9675              	.L642:
 9676              		.loc 1 4693 5 discriminator 11
 9677 010c 14301BE5 		ldr	r3, [fp, #-20]
 9678 0110 233CA0E1 		lsr	r3, r3, #24
 9679 0114 030053E3 		cmp	r3, #3
 9680 0118 0100000A 		beq	.L643
 9681              		.loc 1 4693 5 discriminator 12
 9682 011c 0130E0E3 		mvn	r3, #1
 9683 0120 460100EA 		b	.L638
 9684              	.L643:
 9685              		.loc 1 4693 5 discriminator 13
 9686 0124 2C301BE5 		ldr	r3, [fp, #-44]
 9687 0128 7F2003E2 		and	r2, r3, #127
 9688 012c 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 254


 9689 0130 143093E5 		ldr	r3, [r3, #20]
 9690 0134 030052E1 		cmp	r2, r3
 9691 0138 0100003A 		bcc	.L644
 9692              		.loc 1 4693 5 discriminator 14
 9693 013c 0230E0E3 		mvn	r3, #2
 9694 0140 3E0100EA 		b	.L638
 9695              	.L644:
 9696              		.loc 1 4693 5 discriminator 15
 9697 0144 2C301BE5 		ldr	r3, [fp, #-44]
 9698 0148 7F3003E2 		and	r3, r3, #127
 9699 014c 8322A0E1 		lsl	r2, r3, #5
 9700 0150 08301BE5 		ldr	r3, [fp, #-8]
 9701 0154 0C3093E5 		ldr	r3, [r3, #12]
 9702 0158 033082E0 		add	r3, r2, r3
 9703 015c 08300BE5 		str	r3, [fp, #-8]
 9704 0160 08301BE5 		ldr	r3, [fp, #-8]
 9705 0164 0300A0E1 		mov	r0, r3
 9706 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9707 016c 14000BE5 		str	r0, [fp, #-20]
 9708 0170 14301BE5 		ldr	r3, [fp, #-20]
 9709 0174 2338A0E1 		lsr	r3, r3, #16
 9710 0178 7330EFE6 		uxtb	r3, r3
 9711 017c 020053E3 		cmp	r3, #2
 9712 0180 0100001A 		bne	.L645
 9713              		.loc 1 4693 5 discriminator 16
 9714 0184 0830E0E3 		mvn	r3, #8
 9715 0188 2C0100EA 		b	.L638
 9716              	.L645:
 9717              		.loc 1 4693 5 discriminator 17
 9718 018c 14301BE5 		ldr	r3, [fp, #-20]
 9719 0190 233CA0E1 		lsr	r3, r3, #24
 9720 0194 030053E3 		cmp	r3, #3
 9721 0198 0100000A 		beq	.L640
 9722              		.loc 1 4693 5 discriminator 18
 9723 019c 0130E0E3 		mvn	r3, #1
 9724 01a0 260100EA 		b	.L638
 9725              	.L640:
4694:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4695:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 9726              		.loc 1 4695 5 is_stmt 1
 9727 01a4 34301BE5 		ldr	r3, [fp, #-52]
 9728 01a8 803003E2 		and	r3, r3, #128
 9729 01ac 000053E3 		cmp	r3, #0
 9730 01b0 1D00001A 		bne	.L646
 9731              		.loc 1 4695 5 is_stmt 0 discriminator 1
 9732 01b4 28301BE5 		ldr	r3, [fp, #-40]
 9733 01b8 142093E5 		ldr	r2, [r3, #20]
 9734 01bc 34301BE5 		ldr	r3, [fp, #-52]
 9735 01c0 030052E1 		cmp	r2, r3
 9736 01c4 0100008A 		bhi	.L647
 9737              		.loc 1 4695 5 discriminator 3
 9738 01c8 0230E0E3 		mvn	r3, #2
 9739 01cc 1B0100EA 		b	.L638
 9740              	.L647:
 9741              		.loc 1 4695 5 discriminator 4
 9742 01d0 34301BE5 		ldr	r3, [fp, #-52]
 9743 01d4 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 255


 9744 01d8 28301BE5 		ldr	r3, [fp, #-40]
 9745 01dc 0C3093E5 		ldr	r3, [r3, #12]
 9746 01e0 033082E0 		add	r3, r2, r3
 9747 01e4 0C300BE5 		str	r3, [fp, #-12]
 9748 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 9749 01ec 0300A0E1 		mov	r0, r3
 9750 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9751 01f4 14000BE5 		str	r0, [fp, #-20]
 9752 01f8 14301BE5 		ldr	r3, [fp, #-20]
 9753 01fc 2338A0E1 		lsr	r3, r3, #16
 9754 0200 7330EFE6 		uxtb	r3, r3
 9755 0204 020053E3 		cmp	r3, #2
 9756 0208 0100001A 		bne	.L648
 9757              		.loc 1 4695 5 discriminator 5
 9758 020c 0830E0E3 		mvn	r3, #8
 9759 0210 0A0100EA 		b	.L638
 9760              	.L648:
 9761              		.loc 1 4695 5 discriminator 6
 9762 0214 14301BE5 		ldr	r3, [fp, #-20]
 9763 0218 233CA0E1 		lsr	r3, r3, #24
 9764 021c 030053E3 		cmp	r3, #3
 9765 0220 4100000A 		beq	.L649
 9766              		.loc 1 4695 5 discriminator 7
 9767 0224 0130E0E3 		mvn	r3, #1
 9768 0228 040100EA 		b	.L638
 9769              	.L646:
 9770              		.loc 1 4695 5 discriminator 2
 9771 022c 34301BE5 		ldr	r3, [fp, #-52]
 9772 0230 2324A0E1 		lsr	r2, r3, #8
 9773 0234 28301BE5 		ldr	r3, [fp, #-40]
 9774 0238 143093E5 		ldr	r3, [r3, #20]
 9775 023c 030052E1 		cmp	r2, r3
 9776 0240 0100003A 		bcc	.L650
 9777              		.loc 1 4695 5 discriminator 8
 9778 0244 0230E0E3 		mvn	r3, #2
 9779 0248 FC0000EA 		b	.L638
 9780              	.L650:
 9781              		.loc 1 4695 5 discriminator 9
 9782 024c 34301BE5 		ldr	r3, [fp, #-52]
 9783 0250 2334A0E1 		lsr	r3, r3, #8
 9784 0254 8322A0E1 		lsl	r2, r3, #5
 9785 0258 28301BE5 		ldr	r3, [fp, #-40]
 9786 025c 0C3093E5 		ldr	r3, [r3, #12]
 9787 0260 033082E0 		add	r3, r2, r3
 9788 0264 0C300BE5 		str	r3, [fp, #-12]
 9789 0268 0C301BE5 		ldr	r3, [fp, #-12]
 9790 026c 0300A0E1 		mov	r0, r3
 9791 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9792 0274 14000BE5 		str	r0, [fp, #-20]
 9793 0278 14301BE5 		ldr	r3, [fp, #-20]
 9794 027c 2338A0E1 		lsr	r3, r3, #16
 9795 0280 7330EFE6 		uxtb	r3, r3
 9796 0284 020053E3 		cmp	r3, #2
 9797 0288 0100001A 		bne	.L651
 9798              		.loc 1 4695 5 discriminator 10
 9799 028c 0830E0E3 		mvn	r3, #8
 9800 0290 EA0000EA 		b	.L638
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 256


 9801              	.L651:
 9802              		.loc 1 4695 5 discriminator 11
 9803 0294 14301BE5 		ldr	r3, [fp, #-20]
 9804 0298 233CA0E1 		lsr	r3, r3, #24
 9805 029c 030053E3 		cmp	r3, #3
 9806 02a0 0100000A 		beq	.L652
 9807              		.loc 1 4695 5 discriminator 12
 9808 02a4 0130E0E3 		mvn	r3, #1
 9809 02a8 E40000EA 		b	.L638
 9810              	.L652:
 9811              		.loc 1 4695 5 discriminator 13
 9812 02ac 34301BE5 		ldr	r3, [fp, #-52]
 9813 02b0 7F2003E2 		and	r2, r3, #127
 9814 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 9815 02b8 143093E5 		ldr	r3, [r3, #20]
 9816 02bc 030052E1 		cmp	r2, r3
 9817 02c0 0100003A 		bcc	.L653
 9818              		.loc 1 4695 5 discriminator 14
 9819 02c4 0230E0E3 		mvn	r3, #2
 9820 02c8 DC0000EA 		b	.L638
 9821              	.L653:
 9822              		.loc 1 4695 5 discriminator 15
 9823 02cc 34301BE5 		ldr	r3, [fp, #-52]
 9824 02d0 7F3003E2 		and	r3, r3, #127
 9825 02d4 8322A0E1 		lsl	r2, r3, #5
 9826 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 9827 02dc 0C3093E5 		ldr	r3, [r3, #12]
 9828 02e0 033082E0 		add	r3, r2, r3
 9829 02e4 0C300BE5 		str	r3, [fp, #-12]
 9830 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 9831 02ec 0300A0E1 		mov	r0, r3
 9832 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9833 02f4 14000BE5 		str	r0, [fp, #-20]
 9834 02f8 14301BE5 		ldr	r3, [fp, #-20]
 9835 02fc 2338A0E1 		lsr	r3, r3, #16
 9836 0300 7330EFE6 		uxtb	r3, r3
 9837 0304 020053E3 		cmp	r3, #2
 9838 0308 0100001A 		bne	.L654
 9839              		.loc 1 4695 5 discriminator 16
 9840 030c 0830E0E3 		mvn	r3, #8
 9841 0310 CA0000EA 		b	.L638
 9842              	.L654:
 9843              		.loc 1 4695 5 discriminator 17
 9844 0314 14301BE5 		ldr	r3, [fp, #-20]
 9845 0318 233CA0E1 		lsr	r3, r3, #24
 9846 031c 030053E3 		cmp	r3, #3
 9847 0320 0100000A 		beq	.L649
 9848              		.loc 1 4695 5 discriminator 18
 9849 0324 0130E0E3 		mvn	r3, #1
 9850 0328 C40000EA 		b	.L638
 9851              	.L649:
4696:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4697:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4698:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 9852              		.loc 1 4698 5 is_stmt 1
 9853 032c 04309BE5 		ldr	r3, [fp, #4]
 9854 0330 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 257


 9855 0334 000053E3 		cmp	r3, #0
 9856 0338 1D00001A 		bne	.L655
 9857              		.loc 1 4698 5 is_stmt 0 discriminator 1
 9858 033c 28301BE5 		ldr	r3, [fp, #-40]
 9859 0340 142093E5 		ldr	r2, [r3, #20]
 9860 0344 04309BE5 		ldr	r3, [fp, #4]
 9861 0348 030052E1 		cmp	r2, r3
 9862 034c 0100008A 		bhi	.L656
 9863              		.loc 1 4698 5 discriminator 3
 9864 0350 0230E0E3 		mvn	r3, #2
 9865 0354 B90000EA 		b	.L638
 9866              	.L656:
 9867              		.loc 1 4698 5 discriminator 4
 9868 0358 04309BE5 		ldr	r3, [fp, #4]
 9869 035c 8322A0E1 		lsl	r2, r3, #5
 9870 0360 28301BE5 		ldr	r3, [fp, #-40]
 9871 0364 0C3093E5 		ldr	r3, [r3, #12]
 9872 0368 033082E0 		add	r3, r2, r3
 9873 036c 10300BE5 		str	r3, [fp, #-16]
 9874 0370 10301BE5 		ldr	r3, [fp, #-16]
 9875 0374 0300A0E1 		mov	r0, r3
 9876 0378 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9877 037c 14000BE5 		str	r0, [fp, #-20]
 9878 0380 14301BE5 		ldr	r3, [fp, #-20]
 9879 0384 2338A0E1 		lsr	r3, r3, #16
 9880 0388 7330EFE6 		uxtb	r3, r3
 9881 038c 020053E3 		cmp	r3, #2
 9882 0390 0100001A 		bne	.L657
 9883              		.loc 1 4698 5 discriminator 5
 9884 0394 0830E0E3 		mvn	r3, #8
 9885 0398 A80000EA 		b	.L638
 9886              	.L657:
 9887              		.loc 1 4698 5 discriminator 6
 9888 039c 14301BE5 		ldr	r3, [fp, #-20]
 9889 03a0 233CA0E1 		lsr	r3, r3, #24
 9890 03a4 040053E3 		cmp	r3, #4
 9891 03a8 4100000A 		beq	.L658
 9892              		.loc 1 4698 5 discriminator 7
 9893 03ac 0130E0E3 		mvn	r3, #1
 9894 03b0 A20000EA 		b	.L638
 9895              	.L655:
 9896              		.loc 1 4698 5 discriminator 2
 9897 03b4 04309BE5 		ldr	r3, [fp, #4]
 9898 03b8 2324A0E1 		lsr	r2, r3, #8
 9899 03bc 28301BE5 		ldr	r3, [fp, #-40]
 9900 03c0 143093E5 		ldr	r3, [r3, #20]
 9901 03c4 030052E1 		cmp	r2, r3
 9902 03c8 0100003A 		bcc	.L659
 9903              		.loc 1 4698 5 discriminator 8
 9904 03cc 0230E0E3 		mvn	r3, #2
 9905 03d0 9A0000EA 		b	.L638
 9906              	.L659:
 9907              		.loc 1 4698 5 discriminator 9
 9908 03d4 04309BE5 		ldr	r3, [fp, #4]
 9909 03d8 2334A0E1 		lsr	r3, r3, #8
 9910 03dc 8322A0E1 		lsl	r2, r3, #5
 9911 03e0 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 258


 9912 03e4 0C3093E5 		ldr	r3, [r3, #12]
 9913 03e8 033082E0 		add	r3, r2, r3
 9914 03ec 10300BE5 		str	r3, [fp, #-16]
 9915 03f0 10301BE5 		ldr	r3, [fp, #-16]
 9916 03f4 0300A0E1 		mov	r0, r3
 9917 03f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9918 03fc 14000BE5 		str	r0, [fp, #-20]
 9919 0400 14301BE5 		ldr	r3, [fp, #-20]
 9920 0404 2338A0E1 		lsr	r3, r3, #16
 9921 0408 7330EFE6 		uxtb	r3, r3
 9922 040c 020053E3 		cmp	r3, #2
 9923 0410 0100001A 		bne	.L660
 9924              		.loc 1 4698 5 discriminator 10
 9925 0414 0830E0E3 		mvn	r3, #8
 9926 0418 880000EA 		b	.L638
 9927              	.L660:
 9928              		.loc 1 4698 5 discriminator 11
 9929 041c 14301BE5 		ldr	r3, [fp, #-20]
 9930 0420 233CA0E1 		lsr	r3, r3, #24
 9931 0424 030053E3 		cmp	r3, #3
 9932 0428 0100000A 		beq	.L661
 9933              		.loc 1 4698 5 discriminator 12
 9934 042c 0130E0E3 		mvn	r3, #1
 9935 0430 820000EA 		b	.L638
 9936              	.L661:
 9937              		.loc 1 4698 5 discriminator 13
 9938 0434 04309BE5 		ldr	r3, [fp, #4]
 9939 0438 7F2003E2 		and	r2, r3, #127
 9940 043c 10301BE5 		ldr	r3, [fp, #-16]
 9941 0440 143093E5 		ldr	r3, [r3, #20]
 9942 0444 030052E1 		cmp	r2, r3
 9943 0448 0100003A 		bcc	.L662
 9944              		.loc 1 4698 5 discriminator 14
 9945 044c 0230E0E3 		mvn	r3, #2
 9946 0450 7A0000EA 		b	.L638
 9947              	.L662:
 9948              		.loc 1 4698 5 discriminator 15
 9949 0454 04309BE5 		ldr	r3, [fp, #4]
 9950 0458 7F3003E2 		and	r3, r3, #127
 9951 045c 8322A0E1 		lsl	r2, r3, #5
 9952 0460 10301BE5 		ldr	r3, [fp, #-16]
 9953 0464 0C3093E5 		ldr	r3, [r3, #12]
 9954 0468 033082E0 		add	r3, r2, r3
 9955 046c 10300BE5 		str	r3, [fp, #-16]
 9956 0470 10301BE5 		ldr	r3, [fp, #-16]
 9957 0474 0300A0E1 		mov	r0, r3
 9958 0478 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9959 047c 14000BE5 		str	r0, [fp, #-20]
 9960 0480 14301BE5 		ldr	r3, [fp, #-20]
 9961 0484 2338A0E1 		lsr	r3, r3, #16
 9962 0488 7330EFE6 		uxtb	r3, r3
 9963 048c 020053E3 		cmp	r3, #2
 9964 0490 0100001A 		bne	.L663
 9965              		.loc 1 4698 5 discriminator 16
 9966 0494 0830E0E3 		mvn	r3, #8
 9967 0498 680000EA 		b	.L638
 9968              	.L663:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 259


 9969              		.loc 1 4698 5 discriminator 17
 9970 049c 14301BE5 		ldr	r3, [fp, #-20]
 9971 04a0 233CA0E1 		lsr	r3, r3, #24
 9972 04a4 040053E3 		cmp	r3, #4
 9973 04a8 0100000A 		beq	.L658
 9974              		.loc 1 4698 5 discriminator 18
 9975 04ac 0130E0E3 		mvn	r3, #1
 9976 04b0 620000EA 		b	.L638
 9977              	.L658:
4699:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4700:../../Source/Kernel/rme_kernel.c **** #endif
4701:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4702:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 9978              		.loc 1 4702 5 is_stmt 1
 9979 04b4 08301BE5 		ldr	r3, [fp, #-8]
 9980 04b8 083093E5 		ldr	r3, [r3, #8]
 9981 04bc 013003E2 		and	r3, r3, #1
 9982 04c0 000053E3 		cmp	r3, #0
 9983 04c4 0100001A 		bne	.L664
 9984              		.loc 1 4702 5 is_stmt 0 discriminator 1
 9985 04c8 0630E0E3 		mvn	r3, #6
 9986 04cc 5B0000EA 		b	.L638
 9987              	.L664:
4703:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 9988              		.loc 1 4703 5 is_stmt 1
 9989 04d0 0C301BE5 		ldr	r3, [fp, #-12]
 9990 04d4 083093E5 		ldr	r3, [r3, #8]
 9991 04d8 403003E2 		and	r3, r3, #64
 9992 04dc 000053E3 		cmp	r3, #0
 9993 04e0 0100001A 		bne	.L665
 9994              		.loc 1 4703 5 is_stmt 0 discriminator 1
 9995 04e4 0630E0E3 		mvn	r3, #6
 9996 04e8 540000EA 		b	.L638
 9997              	.L665:
4704:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4705:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 9998              		.loc 1 4705 5 is_stmt 1
 9999 04ec 10301BE5 		ldr	r3, [fp, #-16]
 10000 04f0 083093E5 		ldr	r3, [r3, #8]
 10001 04f4 403003E2 		and	r3, r3, #64
 10002 04f8 000053E3 		cmp	r3, #0
 10003 04fc 0100001A 		bne	.L666
 10004              		.loc 1 4705 5 is_stmt 0 discriminator 1
 10005 0500 0630E0E3 		mvn	r3, #6
 10006 0504 4D0000EA 		b	.L638
 10007              	.L666:
4706:../../Source/Kernel/rme_kernel.c **** #endif
4707:../../Source/Kernel/rme_kernel.c ****     
4708:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4709:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10008              		.loc 1 4709 5 is_stmt 1
 10009 0508 08301BE5 		ldr	r3, [fp, #-8]
 10010 050c 142093E5 		ldr	r2, [r3, #20]
 10011 0510 30301BE5 		ldr	r3, [fp, #-48]
 10012 0514 030052E1 		cmp	r2, r3
 10013 0518 0100008A 		bhi	.L667
 10014              		.loc 1 4709 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 260


 10015 051c 0230E0E3 		mvn	r3, #2
 10016 0520 460000EA 		b	.L638
 10017              	.L667:
 10018              		.loc 1 4709 5 discriminator 2
 10019 0524 30301BE5 		ldr	r3, [fp, #-48]
 10020 0528 8322A0E1 		lsl	r2, r3, #5
 10021 052c 08301BE5 		ldr	r3, [fp, #-8]
 10022 0530 0C3093E5 		ldr	r3, [r3, #12]
 10023 0534 033082E0 		add	r3, r2, r3
 10024 0538 18300BE5 		str	r3, [fp, #-24]
4710:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4711:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10025              		.loc 1 4711 5 is_stmt 1 discriminator 2
 10026 053c 18301BE5 		ldr	r3, [fp, #-24]
 10027 0540 0128A0E3 		mov	r2, #65536
 10028 0544 0010A0E3 		mov	r1, #0
 10029 0548 0300A0E1 		mov	r0, r3
 10030 054c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10031 0550 0030A0E1 		mov	r3, r0
 10032 0554 000053E3 		cmp	r3, #0
 10033 0558 0100001A 		bne	.L668
 10034              		.loc 1 4711 5 is_stmt 0 discriminator 1
 10035 055c 0430E0E3 		mvn	r3, #4
 10036 0560 360000EA 		b	.L638
 10037              	.L668:
 10038              		.loc 1 4711 5 discriminator 2
 10039 0564 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10040 0568 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10041 056c 002093E5 		ldr	r2, [r3]
 10042 0570 18301BE5 		ldr	r3, [fp, #-24]
 10043 0574 102083E5 		str	r2, [r3, #16]
4712:../../Source/Kernel/rme_kernel.c **** 
4713:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4714:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=1U;
 10044              		.loc 1 4714 27 is_stmt 1 discriminator 2
 10045 0578 18301BE5 		ldr	r3, [fp, #-24]
 10046 057c 0120A0E3 		mov	r2, #1
 10047 0580 042083E5 		str	r2, [r3, #4]
4715:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10048              		.loc 1 4715 25 discriminator 2
 10049 0584 18301BE5 		ldr	r3, [fp, #-24]
 10050 0588 0020A0E3 		mov	r2, #0
 10051 058c 0C2083E5 		str	r2, [r3, #12]
4716:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_INV|RME_PRC_FLAG_THD;
 10052              		.loc 1 4716 23 discriminator 2
 10053 0590 18301BE5 		ldr	r3, [fp, #-24]
 10054 0594 0320A0E3 		mov	r2, #3
 10055 0598 082083E5 		str	r2, [r3, #8]
4717:../../Source/Kernel/rme_kernel.c **** 
4718:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4719:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10056              		.loc 1 4719 13 discriminator 2
 10057 059c 0C301BE5 		ldr	r3, [fp, #-12]
 10058 05a0 003093E5 		ldr	r3, [r3]
 10059 05a4 7330FFE6 		uxth	r3, r3
 10060 05a8 000053E3 		cmp	r3, #0
 10061 05ac 0200000A 		beq	.L669
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 261


 10062              		.loc 1 4719 13 is_stmt 0 discriminator 1
 10063 05b0 0C301BE5 		ldr	r3, [fp, #-12]
 10064 05b4 043093E5 		ldr	r3, [r3, #4]
 10065 05b8 000000EA 		b	.L670
 10066              	.L669:
 10067              		.loc 1 4719 13 discriminator 2
 10068 05bc 0C301BE5 		ldr	r3, [fp, #-12]
 10069              	.L670:
 10070              		.loc 1 4719 12 is_stmt 1 discriminator 4
 10071 05c0 1C300BE5 		str	r3, [fp, #-28]
4720:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4721:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10072              		.loc 1 4721 13 discriminator 4
 10073 05c4 10301BE5 		ldr	r3, [fp, #-16]
 10074 05c8 003093E5 		ldr	r3, [r3]
 10075 05cc 7330FFE6 		uxth	r3, r3
 10076 05d0 000053E3 		cmp	r3, #0
 10077 05d4 0200000A 		beq	.L671
 10078              		.loc 1 4721 13 is_stmt 0 discriminator 1
 10079 05d8 10301BE5 		ldr	r3, [fp, #-16]
 10080 05dc 043093E5 		ldr	r3, [r3, #4]
 10081 05e0 000000EA 		b	.L672
 10082              	.L671:
 10083              		.loc 1 4721 13 discriminator 2
 10084 05e4 10301BE5 		ldr	r3, [fp, #-16]
 10085              	.L672:
 10086              		.loc 1 4721 12 is_stmt 1 discriminator 4
 10087 05e8 20300BE5 		str	r3, [fp, #-32]
4722:../../Source/Kernel/rme_kernel.c **** #endif
4723:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10088              		.loc 1 4723 17 discriminator 4
 10089 05ec 18301BE5 		ldr	r3, [fp, #-24]
 10090 05f0 1C201BE5 		ldr	r2, [fp, #-28]
 10091 05f4 142083E5 		str	r2, [r3, #20]
4724:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4725:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 10092              		.loc 1 4725 17 discriminator 4
 10093 05f8 18301BE5 		ldr	r3, [fp, #-24]
 10094 05fc 20201BE5 		ldr	r2, [fp, #-32]
 10095 0600 182083E5 		str	r2, [r3, #24]
4726:../../Source/Kernel/rme_kernel.c **** #else
4727:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4728:../../Source/Kernel/rme_kernel.c **** #endif
4729:../../Source/Kernel/rme_kernel.c ****     
4730:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4731:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10096              		.loc 1 4731 5 discriminator 4
 10097 0604 1C301BE5 		ldr	r3, [fp, #-28]
 10098 0608 043083E2 		add	r3, r3, #4
 10099 060c 0110A0E3 		mov	r1, #1
 10100 0610 0300A0E1 		mov	r0, r3
 10101 0614 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4732:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4733:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10102              		.loc 1 4733 5 discriminator 4
 10103 0618 20301BE5 		ldr	r3, [fp, #-32]
 10104 061c 043083E2 		add	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 262


 10105 0620 0110A0E3 		mov	r1, #1
 10106 0624 0300A0E1 		mov	r0, r3
 10107 0628 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4734:../../Source/Kernel/rme_kernel.c **** #endif
4735:../../Source/Kernel/rme_kernel.c **** 
4736:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4737:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10108              		.loc 1 4737 5 discriminator 4
 10109 062c 18301BE5 		ldr	r3, [fp, #-24]
 10110 0630 0514A0E3 		mov	r1, #83886080
 10111 0634 0300A0E1 		mov	r0, r3
 10112 0638 FEFFFFEB 		bl	__RME_A7A_Write_Release
4738:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4739:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4740:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4741:../../Source/Kernel/rme_kernel.c **** 
4742:../../Source/Kernel/rme_kernel.c ****     return 0;
 10113              		.loc 1 4742 12 discriminator 4
 10114 063c 0030A0E3 		mov	r3, #0
 10115              	.L638:
4743:../../Source/Kernel/rme_kernel.c **** }
 10116              		.loc 1 4743 1
 10117 0640 0300A0E1 		mov	r0, r3
 10118 0644 04D04BE2 		sub	sp, fp, #4
 10119              		.cfi_def_cfa 13, 8
 10120              		@ sp needed
 10121 0648 0088BDE8 		pop	{fp, pc}
 10122              		.cfi_endproc
 10123              	.LFE50:
 10125              		.section	.text._RME_Prc_Crt,"ax",%progbits
 10126              		.align	2
 10127              		.syntax unified
 10128              		.arm
 10130              	_RME_Prc_Crt:
 10131              	.LFB51:
4744:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Boot_Crt ********************************************/
4745:../../Source/Kernel/rme_kernel.c **** 
4746:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Crt ******************************************************
4747:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4748:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4749:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4750:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4751:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4752:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4753:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4754:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4755:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4756:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4757:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4758:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4759:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4760:../../Source/Kernel/rme_kernel.c ****                                   this process.
4761:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4762:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4763:../../Source/Kernel/rme_kernel.c ****                                   address.
4764:../../Source/Kernel/rme_kernel.c **** Output      : None.
4765:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 263


4766:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4767:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4768:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4769:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4770:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4771:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4772:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4773:../../Source/Kernel/rme_kernel.c **** #else
4774:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4775:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4776:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4777:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4778:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4779:../../Source/Kernel/rme_kernel.c **** #endif
4780:../../Source/Kernel/rme_kernel.c **** {
 10132              		.loc 1 4780 1
 10133              		.cfi_startproc
 10134              		@ args = 4, pretend = 0, frame = 48
 10135              		@ frame_needed = 1, uses_anonymous_args = 0
 10136 0000 00482DE9 		push	{fp, lr}
 10137              		.cfi_def_cfa_offset 8
 10138              		.cfi_offset 11, -8
 10139              		.cfi_offset 14, -4
 10140 0004 04B08DE2 		add	fp, sp, #4
 10141              		.cfi_def_cfa 11, 4
 10142 0008 30D04DE2 		sub	sp, sp, #48
 10143 000c 28000BE5 		str	r0, [fp, #-40]
 10144 0010 2C100BE5 		str	r1, [fp, #-44]
 10145 0014 30200BE5 		str	r2, [fp, #-48]
 10146 0018 34300BE5 		str	r3, [fp, #-52]
4781:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4782:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4783:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4784:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4785:../../Source/Kernel/rme_kernel.c **** #endif
4786:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4787:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4788:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4789:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4790:../../Source/Kernel/rme_kernel.c **** #endif
4791:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4792:../../Source/Kernel/rme_kernel.c ****     
4793:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4794:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10147              		.loc 1 4794 5
 10148 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10149 0020 803003E2 		and	r3, r3, #128
 10150 0024 000053E3 		cmp	r3, #0
 10151 0028 1D00001A 		bne	.L674
 10152              		.loc 1 4794 5 is_stmt 0 discriminator 1
 10153 002c 28301BE5 		ldr	r3, [fp, #-40]
 10154 0030 142093E5 		ldr	r2, [r3, #20]
 10155 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10156 0038 030052E1 		cmp	r2, r3
 10157 003c 0100008A 		bhi	.L675
 10158              		.loc 1 4794 5 discriminator 3
 10159 0040 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 264


 10160 0044 7D0100EA 		b	.L676
 10161              	.L675:
 10162              		.loc 1 4794 5 discriminator 4
 10163 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10164 004c 8322A0E1 		lsl	r2, r3, #5
 10165 0050 28301BE5 		ldr	r3, [fp, #-40]
 10166 0054 0C3093E5 		ldr	r3, [r3, #12]
 10167 0058 033082E0 		add	r3, r2, r3
 10168 005c 08300BE5 		str	r3, [fp, #-8]
 10169 0060 08301BE5 		ldr	r3, [fp, #-8]
 10170 0064 0300A0E1 		mov	r0, r3
 10171 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10172 006c 14000BE5 		str	r0, [fp, #-20]
 10173 0070 14301BE5 		ldr	r3, [fp, #-20]
 10174 0074 2338A0E1 		lsr	r3, r3, #16
 10175 0078 7330EFE6 		uxtb	r3, r3
 10176 007c 020053E3 		cmp	r3, #2
 10177 0080 0100001A 		bne	.L677
 10178              		.loc 1 4794 5 discriminator 5
 10179 0084 0830E0E3 		mvn	r3, #8
 10180 0088 6C0100EA 		b	.L676
 10181              	.L677:
 10182              		.loc 1 4794 5 discriminator 6
 10183 008c 14301BE5 		ldr	r3, [fp, #-20]
 10184 0090 233CA0E1 		lsr	r3, r3, #24
 10185 0094 030053E3 		cmp	r3, #3
 10186 0098 4100000A 		beq	.L678
 10187              		.loc 1 4794 5 discriminator 7
 10188 009c 0130E0E3 		mvn	r3, #1
 10189 00a0 660100EA 		b	.L676
 10190              	.L674:
 10191              		.loc 1 4794 5 discriminator 2
 10192 00a4 2C301BE5 		ldr	r3, [fp, #-44]
 10193 00a8 2324A0E1 		lsr	r2, r3, #8
 10194 00ac 28301BE5 		ldr	r3, [fp, #-40]
 10195 00b0 143093E5 		ldr	r3, [r3, #20]
 10196 00b4 030052E1 		cmp	r2, r3
 10197 00b8 0100003A 		bcc	.L679
 10198              		.loc 1 4794 5 discriminator 8
 10199 00bc 0230E0E3 		mvn	r3, #2
 10200 00c0 5E0100EA 		b	.L676
 10201              	.L679:
 10202              		.loc 1 4794 5 discriminator 9
 10203 00c4 2C301BE5 		ldr	r3, [fp, #-44]
 10204 00c8 2334A0E1 		lsr	r3, r3, #8
 10205 00cc 8322A0E1 		lsl	r2, r3, #5
 10206 00d0 28301BE5 		ldr	r3, [fp, #-40]
 10207 00d4 0C3093E5 		ldr	r3, [r3, #12]
 10208 00d8 033082E0 		add	r3, r2, r3
 10209 00dc 08300BE5 		str	r3, [fp, #-8]
 10210 00e0 08301BE5 		ldr	r3, [fp, #-8]
 10211 00e4 0300A0E1 		mov	r0, r3
 10212 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10213 00ec 14000BE5 		str	r0, [fp, #-20]
 10214 00f0 14301BE5 		ldr	r3, [fp, #-20]
 10215 00f4 2338A0E1 		lsr	r3, r3, #16
 10216 00f8 7330EFE6 		uxtb	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 265


 10217 00fc 020053E3 		cmp	r3, #2
 10218 0100 0100001A 		bne	.L680
 10219              		.loc 1 4794 5 discriminator 10
 10220 0104 0830E0E3 		mvn	r3, #8
 10221 0108 4C0100EA 		b	.L676
 10222              	.L680:
 10223              		.loc 1 4794 5 discriminator 11
 10224 010c 14301BE5 		ldr	r3, [fp, #-20]
 10225 0110 233CA0E1 		lsr	r3, r3, #24
 10226 0114 030053E3 		cmp	r3, #3
 10227 0118 0100000A 		beq	.L681
 10228              		.loc 1 4794 5 discriminator 12
 10229 011c 0130E0E3 		mvn	r3, #1
 10230 0120 460100EA 		b	.L676
 10231              	.L681:
 10232              		.loc 1 4794 5 discriminator 13
 10233 0124 2C301BE5 		ldr	r3, [fp, #-44]
 10234 0128 7F2003E2 		and	r2, r3, #127
 10235 012c 08301BE5 		ldr	r3, [fp, #-8]
 10236 0130 143093E5 		ldr	r3, [r3, #20]
 10237 0134 030052E1 		cmp	r2, r3
 10238 0138 0100003A 		bcc	.L682
 10239              		.loc 1 4794 5 discriminator 14
 10240 013c 0230E0E3 		mvn	r3, #2
 10241 0140 3E0100EA 		b	.L676
 10242              	.L682:
 10243              		.loc 1 4794 5 discriminator 15
 10244 0144 2C301BE5 		ldr	r3, [fp, #-44]
 10245 0148 7F3003E2 		and	r3, r3, #127
 10246 014c 8322A0E1 		lsl	r2, r3, #5
 10247 0150 08301BE5 		ldr	r3, [fp, #-8]
 10248 0154 0C3093E5 		ldr	r3, [r3, #12]
 10249 0158 033082E0 		add	r3, r2, r3
 10250 015c 08300BE5 		str	r3, [fp, #-8]
 10251 0160 08301BE5 		ldr	r3, [fp, #-8]
 10252 0164 0300A0E1 		mov	r0, r3
 10253 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10254 016c 14000BE5 		str	r0, [fp, #-20]
 10255 0170 14301BE5 		ldr	r3, [fp, #-20]
 10256 0174 2338A0E1 		lsr	r3, r3, #16
 10257 0178 7330EFE6 		uxtb	r3, r3
 10258 017c 020053E3 		cmp	r3, #2
 10259 0180 0100001A 		bne	.L683
 10260              		.loc 1 4794 5 discriminator 16
 10261 0184 0830E0E3 		mvn	r3, #8
 10262 0188 2C0100EA 		b	.L676
 10263              	.L683:
 10264              		.loc 1 4794 5 discriminator 17
 10265 018c 14301BE5 		ldr	r3, [fp, #-20]
 10266 0190 233CA0E1 		lsr	r3, r3, #24
 10267 0194 030053E3 		cmp	r3, #3
 10268 0198 0100000A 		beq	.L678
 10269              		.loc 1 4794 5 discriminator 18
 10270 019c 0130E0E3 		mvn	r3, #1
 10271 01a0 260100EA 		b	.L676
 10272              	.L678:
4795:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 266


4796:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10273              		.loc 1 4796 5 is_stmt 1
 10274 01a4 34301BE5 		ldr	r3, [fp, #-52]
 10275 01a8 803003E2 		and	r3, r3, #128
 10276 01ac 000053E3 		cmp	r3, #0
 10277 01b0 1D00001A 		bne	.L684
 10278              		.loc 1 4796 5 is_stmt 0 discriminator 1
 10279 01b4 28301BE5 		ldr	r3, [fp, #-40]
 10280 01b8 142093E5 		ldr	r2, [r3, #20]
 10281 01bc 34301BE5 		ldr	r3, [fp, #-52]
 10282 01c0 030052E1 		cmp	r2, r3
 10283 01c4 0100008A 		bhi	.L685
 10284              		.loc 1 4796 5 discriminator 3
 10285 01c8 0230E0E3 		mvn	r3, #2
 10286 01cc 1B0100EA 		b	.L676
 10287              	.L685:
 10288              		.loc 1 4796 5 discriminator 4
 10289 01d0 34301BE5 		ldr	r3, [fp, #-52]
 10290 01d4 8322A0E1 		lsl	r2, r3, #5
 10291 01d8 28301BE5 		ldr	r3, [fp, #-40]
 10292 01dc 0C3093E5 		ldr	r3, [r3, #12]
 10293 01e0 033082E0 		add	r3, r2, r3
 10294 01e4 0C300BE5 		str	r3, [fp, #-12]
 10295 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 10296 01ec 0300A0E1 		mov	r0, r3
 10297 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10298 01f4 14000BE5 		str	r0, [fp, #-20]
 10299 01f8 14301BE5 		ldr	r3, [fp, #-20]
 10300 01fc 2338A0E1 		lsr	r3, r3, #16
 10301 0200 7330EFE6 		uxtb	r3, r3
 10302 0204 020053E3 		cmp	r3, #2
 10303 0208 0100001A 		bne	.L686
 10304              		.loc 1 4796 5 discriminator 5
 10305 020c 0830E0E3 		mvn	r3, #8
 10306 0210 0A0100EA 		b	.L676
 10307              	.L686:
 10308              		.loc 1 4796 5 discriminator 6
 10309 0214 14301BE5 		ldr	r3, [fp, #-20]
 10310 0218 233CA0E1 		lsr	r3, r3, #24
 10311 021c 030053E3 		cmp	r3, #3
 10312 0220 4100000A 		beq	.L687
 10313              		.loc 1 4796 5 discriminator 7
 10314 0224 0130E0E3 		mvn	r3, #1
 10315 0228 040100EA 		b	.L676
 10316              	.L684:
 10317              		.loc 1 4796 5 discriminator 2
 10318 022c 34301BE5 		ldr	r3, [fp, #-52]
 10319 0230 2324A0E1 		lsr	r2, r3, #8
 10320 0234 28301BE5 		ldr	r3, [fp, #-40]
 10321 0238 143093E5 		ldr	r3, [r3, #20]
 10322 023c 030052E1 		cmp	r2, r3
 10323 0240 0100003A 		bcc	.L688
 10324              		.loc 1 4796 5 discriminator 8
 10325 0244 0230E0E3 		mvn	r3, #2
 10326 0248 FC0000EA 		b	.L676
 10327              	.L688:
 10328              		.loc 1 4796 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 267


 10329 024c 34301BE5 		ldr	r3, [fp, #-52]
 10330 0250 2334A0E1 		lsr	r3, r3, #8
 10331 0254 8322A0E1 		lsl	r2, r3, #5
 10332 0258 28301BE5 		ldr	r3, [fp, #-40]
 10333 025c 0C3093E5 		ldr	r3, [r3, #12]
 10334 0260 033082E0 		add	r3, r2, r3
 10335 0264 0C300BE5 		str	r3, [fp, #-12]
 10336 0268 0C301BE5 		ldr	r3, [fp, #-12]
 10337 026c 0300A0E1 		mov	r0, r3
 10338 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10339 0274 14000BE5 		str	r0, [fp, #-20]
 10340 0278 14301BE5 		ldr	r3, [fp, #-20]
 10341 027c 2338A0E1 		lsr	r3, r3, #16
 10342 0280 7330EFE6 		uxtb	r3, r3
 10343 0284 020053E3 		cmp	r3, #2
 10344 0288 0100001A 		bne	.L689
 10345              		.loc 1 4796 5 discriminator 10
 10346 028c 0830E0E3 		mvn	r3, #8
 10347 0290 EA0000EA 		b	.L676
 10348              	.L689:
 10349              		.loc 1 4796 5 discriminator 11
 10350 0294 14301BE5 		ldr	r3, [fp, #-20]
 10351 0298 233CA0E1 		lsr	r3, r3, #24
 10352 029c 030053E3 		cmp	r3, #3
 10353 02a0 0100000A 		beq	.L690
 10354              		.loc 1 4796 5 discriminator 12
 10355 02a4 0130E0E3 		mvn	r3, #1
 10356 02a8 E40000EA 		b	.L676
 10357              	.L690:
 10358              		.loc 1 4796 5 discriminator 13
 10359 02ac 34301BE5 		ldr	r3, [fp, #-52]
 10360 02b0 7F2003E2 		and	r2, r3, #127
 10361 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 10362 02b8 143093E5 		ldr	r3, [r3, #20]
 10363 02bc 030052E1 		cmp	r2, r3
 10364 02c0 0100003A 		bcc	.L691
 10365              		.loc 1 4796 5 discriminator 14
 10366 02c4 0230E0E3 		mvn	r3, #2
 10367 02c8 DC0000EA 		b	.L676
 10368              	.L691:
 10369              		.loc 1 4796 5 discriminator 15
 10370 02cc 34301BE5 		ldr	r3, [fp, #-52]
 10371 02d0 7F3003E2 		and	r3, r3, #127
 10372 02d4 8322A0E1 		lsl	r2, r3, #5
 10373 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 10374 02dc 0C3093E5 		ldr	r3, [r3, #12]
 10375 02e0 033082E0 		add	r3, r2, r3
 10376 02e4 0C300BE5 		str	r3, [fp, #-12]
 10377 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 10378 02ec 0300A0E1 		mov	r0, r3
 10379 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10380 02f4 14000BE5 		str	r0, [fp, #-20]
 10381 02f8 14301BE5 		ldr	r3, [fp, #-20]
 10382 02fc 2338A0E1 		lsr	r3, r3, #16
 10383 0300 7330EFE6 		uxtb	r3, r3
 10384 0304 020053E3 		cmp	r3, #2
 10385 0308 0100001A 		bne	.L692
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 268


 10386              		.loc 1 4796 5 discriminator 16
 10387 030c 0830E0E3 		mvn	r3, #8
 10388 0310 CA0000EA 		b	.L676
 10389              	.L692:
 10390              		.loc 1 4796 5 discriminator 17
 10391 0314 14301BE5 		ldr	r3, [fp, #-20]
 10392 0318 233CA0E1 		lsr	r3, r3, #24
 10393 031c 030053E3 		cmp	r3, #3
 10394 0320 0100000A 		beq	.L687
 10395              		.loc 1 4796 5 discriminator 18
 10396 0324 0130E0E3 		mvn	r3, #1
 10397 0328 C40000EA 		b	.L676
 10398              	.L687:
4797:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4798:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4799:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10399              		.loc 1 4799 5 is_stmt 1
 10400 032c 04309BE5 		ldr	r3, [fp, #4]
 10401 0330 803003E2 		and	r3, r3, #128
 10402 0334 000053E3 		cmp	r3, #0
 10403 0338 1D00001A 		bne	.L693
 10404              		.loc 1 4799 5 is_stmt 0 discriminator 1
 10405 033c 28301BE5 		ldr	r3, [fp, #-40]
 10406 0340 142093E5 		ldr	r2, [r3, #20]
 10407 0344 04309BE5 		ldr	r3, [fp, #4]
 10408 0348 030052E1 		cmp	r2, r3
 10409 034c 0100008A 		bhi	.L694
 10410              		.loc 1 4799 5 discriminator 3
 10411 0350 0230E0E3 		mvn	r3, #2
 10412 0354 B90000EA 		b	.L676
 10413              	.L694:
 10414              		.loc 1 4799 5 discriminator 4
 10415 0358 04309BE5 		ldr	r3, [fp, #4]
 10416 035c 8322A0E1 		lsl	r2, r3, #5
 10417 0360 28301BE5 		ldr	r3, [fp, #-40]
 10418 0364 0C3093E5 		ldr	r3, [r3, #12]
 10419 0368 033082E0 		add	r3, r2, r3
 10420 036c 10300BE5 		str	r3, [fp, #-16]
 10421 0370 10301BE5 		ldr	r3, [fp, #-16]
 10422 0374 0300A0E1 		mov	r0, r3
 10423 0378 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10424 037c 14000BE5 		str	r0, [fp, #-20]
 10425 0380 14301BE5 		ldr	r3, [fp, #-20]
 10426 0384 2338A0E1 		lsr	r3, r3, #16
 10427 0388 7330EFE6 		uxtb	r3, r3
 10428 038c 020053E3 		cmp	r3, #2
 10429 0390 0100001A 		bne	.L695
 10430              		.loc 1 4799 5 discriminator 5
 10431 0394 0830E0E3 		mvn	r3, #8
 10432 0398 A80000EA 		b	.L676
 10433              	.L695:
 10434              		.loc 1 4799 5 discriminator 6
 10435 039c 14301BE5 		ldr	r3, [fp, #-20]
 10436 03a0 233CA0E1 		lsr	r3, r3, #24
 10437 03a4 040053E3 		cmp	r3, #4
 10438 03a8 4100000A 		beq	.L696
 10439              		.loc 1 4799 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 269


 10440 03ac 0130E0E3 		mvn	r3, #1
 10441 03b0 A20000EA 		b	.L676
 10442              	.L693:
 10443              		.loc 1 4799 5 discriminator 2
 10444 03b4 04309BE5 		ldr	r3, [fp, #4]
 10445 03b8 2324A0E1 		lsr	r2, r3, #8
 10446 03bc 28301BE5 		ldr	r3, [fp, #-40]
 10447 03c0 143093E5 		ldr	r3, [r3, #20]
 10448 03c4 030052E1 		cmp	r2, r3
 10449 03c8 0100003A 		bcc	.L697
 10450              		.loc 1 4799 5 discriminator 8
 10451 03cc 0230E0E3 		mvn	r3, #2
 10452 03d0 9A0000EA 		b	.L676
 10453              	.L697:
 10454              		.loc 1 4799 5 discriminator 9
 10455 03d4 04309BE5 		ldr	r3, [fp, #4]
 10456 03d8 2334A0E1 		lsr	r3, r3, #8
 10457 03dc 8322A0E1 		lsl	r2, r3, #5
 10458 03e0 28301BE5 		ldr	r3, [fp, #-40]
 10459 03e4 0C3093E5 		ldr	r3, [r3, #12]
 10460 03e8 033082E0 		add	r3, r2, r3
 10461 03ec 10300BE5 		str	r3, [fp, #-16]
 10462 03f0 10301BE5 		ldr	r3, [fp, #-16]
 10463 03f4 0300A0E1 		mov	r0, r3
 10464 03f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10465 03fc 14000BE5 		str	r0, [fp, #-20]
 10466 0400 14301BE5 		ldr	r3, [fp, #-20]
 10467 0404 2338A0E1 		lsr	r3, r3, #16
 10468 0408 7330EFE6 		uxtb	r3, r3
 10469 040c 020053E3 		cmp	r3, #2
 10470 0410 0100001A 		bne	.L698
 10471              		.loc 1 4799 5 discriminator 10
 10472 0414 0830E0E3 		mvn	r3, #8
 10473 0418 880000EA 		b	.L676
 10474              	.L698:
 10475              		.loc 1 4799 5 discriminator 11
 10476 041c 14301BE5 		ldr	r3, [fp, #-20]
 10477 0420 233CA0E1 		lsr	r3, r3, #24
 10478 0424 030053E3 		cmp	r3, #3
 10479 0428 0100000A 		beq	.L699
 10480              		.loc 1 4799 5 discriminator 12
 10481 042c 0130E0E3 		mvn	r3, #1
 10482 0430 820000EA 		b	.L676
 10483              	.L699:
 10484              		.loc 1 4799 5 discriminator 13
 10485 0434 04309BE5 		ldr	r3, [fp, #4]
 10486 0438 7F2003E2 		and	r2, r3, #127
 10487 043c 10301BE5 		ldr	r3, [fp, #-16]
 10488 0440 143093E5 		ldr	r3, [r3, #20]
 10489 0444 030052E1 		cmp	r2, r3
 10490 0448 0100003A 		bcc	.L700
 10491              		.loc 1 4799 5 discriminator 14
 10492 044c 0230E0E3 		mvn	r3, #2
 10493 0450 7A0000EA 		b	.L676
 10494              	.L700:
 10495              		.loc 1 4799 5 discriminator 15
 10496 0454 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 270


 10497 0458 7F3003E2 		and	r3, r3, #127
 10498 045c 8322A0E1 		lsl	r2, r3, #5
 10499 0460 10301BE5 		ldr	r3, [fp, #-16]
 10500 0464 0C3093E5 		ldr	r3, [r3, #12]
 10501 0468 033082E0 		add	r3, r2, r3
 10502 046c 10300BE5 		str	r3, [fp, #-16]
 10503 0470 10301BE5 		ldr	r3, [fp, #-16]
 10504 0474 0300A0E1 		mov	r0, r3
 10505 0478 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10506 047c 14000BE5 		str	r0, [fp, #-20]
 10507 0480 14301BE5 		ldr	r3, [fp, #-20]
 10508 0484 2338A0E1 		lsr	r3, r3, #16
 10509 0488 7330EFE6 		uxtb	r3, r3
 10510 048c 020053E3 		cmp	r3, #2
 10511 0490 0100001A 		bne	.L701
 10512              		.loc 1 4799 5 discriminator 16
 10513 0494 0830E0E3 		mvn	r3, #8
 10514 0498 680000EA 		b	.L676
 10515              	.L701:
 10516              		.loc 1 4799 5 discriminator 17
 10517 049c 14301BE5 		ldr	r3, [fp, #-20]
 10518 04a0 233CA0E1 		lsr	r3, r3, #24
 10519 04a4 040053E3 		cmp	r3, #4
 10520 04a8 0100000A 		beq	.L696
 10521              		.loc 1 4799 5 discriminator 18
 10522 04ac 0130E0E3 		mvn	r3, #1
 10523 04b0 620000EA 		b	.L676
 10524              	.L696:
4800:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4801:../../Source/Kernel/rme_kernel.c **** #endif
4802:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4803:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10525              		.loc 1 4803 5 is_stmt 1
 10526 04b4 08301BE5 		ldr	r3, [fp, #-8]
 10527 04b8 083093E5 		ldr	r3, [r3, #8]
 10528 04bc 013003E2 		and	r3, r3, #1
 10529 04c0 000053E3 		cmp	r3, #0
 10530 04c4 0100001A 		bne	.L702
 10531              		.loc 1 4803 5 is_stmt 0 discriminator 1
 10532 04c8 0630E0E3 		mvn	r3, #6
 10533 04cc 5B0000EA 		b	.L676
 10534              	.L702:
4804:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10535              		.loc 1 4804 5 is_stmt 1
 10536 04d0 0C301BE5 		ldr	r3, [fp, #-12]
 10537 04d4 083093E5 		ldr	r3, [r3, #8]
 10538 04d8 403003E2 		and	r3, r3, #64
 10539 04dc 000053E3 		cmp	r3, #0
 10540 04e0 0100001A 		bne	.L703
 10541              		.loc 1 4804 5 is_stmt 0 discriminator 1
 10542 04e4 0630E0E3 		mvn	r3, #6
 10543 04e8 540000EA 		b	.L676
 10544              	.L703:
4805:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4806:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10545              		.loc 1 4806 5 is_stmt 1
 10546 04ec 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 271


 10547 04f0 083093E5 		ldr	r3, [r3, #8]
 10548 04f4 403003E2 		and	r3, r3, #64
 10549 04f8 000053E3 		cmp	r3, #0
 10550 04fc 0100001A 		bne	.L704
 10551              		.loc 1 4806 5 is_stmt 0 discriminator 1
 10552 0500 0630E0E3 		mvn	r3, #6
 10553 0504 4D0000EA 		b	.L676
 10554              	.L704:
4807:../../Source/Kernel/rme_kernel.c **** #endif
4808:../../Source/Kernel/rme_kernel.c ****     
4809:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4810:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10555              		.loc 1 4810 5 is_stmt 1
 10556 0508 08301BE5 		ldr	r3, [fp, #-8]
 10557 050c 142093E5 		ldr	r2, [r3, #20]
 10558 0510 30301BE5 		ldr	r3, [fp, #-48]
 10559 0514 030052E1 		cmp	r2, r3
 10560 0518 0100008A 		bhi	.L705
 10561              		.loc 1 4810 5 is_stmt 0 discriminator 1
 10562 051c 0230E0E3 		mvn	r3, #2
 10563 0520 460000EA 		b	.L676
 10564              	.L705:
 10565              		.loc 1 4810 5 discriminator 2
 10566 0524 30301BE5 		ldr	r3, [fp, #-48]
 10567 0528 8322A0E1 		lsl	r2, r3, #5
 10568 052c 08301BE5 		ldr	r3, [fp, #-8]
 10569 0530 0C3093E5 		ldr	r3, [r3, #12]
 10570 0534 033082E0 		add	r3, r2, r3
 10571 0538 18300BE5 		str	r3, [fp, #-24]
4811:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4812:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10572              		.loc 1 4812 5 is_stmt 1 discriminator 2
 10573 053c 18301BE5 		ldr	r3, [fp, #-24]
 10574 0540 0128A0E3 		mov	r2, #65536
 10575 0544 0010A0E3 		mov	r1, #0
 10576 0548 0300A0E1 		mov	r0, r3
 10577 054c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10578 0550 0030A0E1 		mov	r3, r0
 10579 0554 000053E3 		cmp	r3, #0
 10580 0558 0100001A 		bne	.L706
 10581              		.loc 1 4812 5 is_stmt 0 discriminator 1
 10582 055c 0430E0E3 		mvn	r3, #4
 10583 0560 360000EA 		b	.L676
 10584              	.L706:
 10585              		.loc 1 4812 5 discriminator 2
 10586 0564 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10587 0568 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10588 056c 002093E5 		ldr	r2, [r3]
 10589 0570 18301BE5 		ldr	r3, [fp, #-24]
 10590 0574 102083E5 		str	r2, [r3, #16]
4813:../../Source/Kernel/rme_kernel.c ****     
4814:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4815:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=0U;
 10591              		.loc 1 4815 27 is_stmt 1 discriminator 2
 10592 0578 18301BE5 		ldr	r3, [fp, #-24]
 10593 057c 0020A0E3 		mov	r2, #0
 10594 0580 042083E5 		str	r2, [r3, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 272


4816:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10595              		.loc 1 4816 25 discriminator 2
 10596 0584 18301BE5 		ldr	r3, [fp, #-24]
 10597 0588 0020A0E3 		mov	r2, #0
 10598 058c 0C2083E5 		str	r2, [r3, #12]
4817:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_ALL;
 10599              		.loc 1 4817 23 discriminator 2
 10600 0590 18301BE5 		ldr	r3, [fp, #-24]
 10601 0594 0F20A0E3 		mov	r2, #15
 10602 0598 082083E5 		str	r2, [r3, #8]
4818:../../Source/Kernel/rme_kernel.c ****     
4819:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4820:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10603              		.loc 1 4820 13 discriminator 2
 10604 059c 0C301BE5 		ldr	r3, [fp, #-12]
 10605 05a0 003093E5 		ldr	r3, [r3]
 10606 05a4 7330FFE6 		uxth	r3, r3
 10607 05a8 000053E3 		cmp	r3, #0
 10608 05ac 0200000A 		beq	.L707
 10609              		.loc 1 4820 13 is_stmt 0 discriminator 1
 10610 05b0 0C301BE5 		ldr	r3, [fp, #-12]
 10611 05b4 043093E5 		ldr	r3, [r3, #4]
 10612 05b8 000000EA 		b	.L708
 10613              	.L707:
 10614              		.loc 1 4820 13 discriminator 2
 10615 05bc 0C301BE5 		ldr	r3, [fp, #-12]
 10616              	.L708:
 10617              		.loc 1 4820 12 is_stmt 1 discriminator 4
 10618 05c0 1C300BE5 		str	r3, [fp, #-28]
4821:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4822:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10619              		.loc 1 4822 13 discriminator 4
 10620 05c4 10301BE5 		ldr	r3, [fp, #-16]
 10621 05c8 003093E5 		ldr	r3, [r3]
 10622 05cc 7330FFE6 		uxth	r3, r3
 10623 05d0 000053E3 		cmp	r3, #0
 10624 05d4 0200000A 		beq	.L709
 10625              		.loc 1 4822 13 is_stmt 0 discriminator 1
 10626 05d8 10301BE5 		ldr	r3, [fp, #-16]
 10627 05dc 043093E5 		ldr	r3, [r3, #4]
 10628 05e0 000000EA 		b	.L710
 10629              	.L709:
 10630              		.loc 1 4822 13 discriminator 2
 10631 05e4 10301BE5 		ldr	r3, [fp, #-16]
 10632              	.L710:
 10633              		.loc 1 4822 12 is_stmt 1 discriminator 4
 10634 05e8 20300BE5 		str	r3, [fp, #-32]
4823:../../Source/Kernel/rme_kernel.c **** #endif
4824:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10635              		.loc 1 4824 17 discriminator 4
 10636 05ec 18301BE5 		ldr	r3, [fp, #-24]
 10637 05f0 1C201BE5 		ldr	r2, [fp, #-28]
 10638 05f4 142083E5 		str	r2, [r3, #20]
4825:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4826:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 10639              		.loc 1 4826 17 discriminator 4
 10640 05f8 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 273


 10641 05fc 20201BE5 		ldr	r2, [fp, #-32]
 10642 0600 182083E5 		str	r2, [r3, #24]
4827:../../Source/Kernel/rme_kernel.c **** #else
4828:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4829:../../Source/Kernel/rme_kernel.c **** #endif
4830:../../Source/Kernel/rme_kernel.c ****     
4831:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4832:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10643              		.loc 1 4832 5 discriminator 4
 10644 0604 1C301BE5 		ldr	r3, [fp, #-28]
 10645 0608 043083E2 		add	r3, r3, #4
 10646 060c 0110A0E3 		mov	r1, #1
 10647 0610 0300A0E1 		mov	r0, r3
 10648 0614 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4833:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4834:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10649              		.loc 1 4834 5 discriminator 4
 10650 0618 20301BE5 		ldr	r3, [fp, #-32]
 10651 061c 043083E2 		add	r3, r3, #4
 10652 0620 0110A0E3 		mov	r1, #1
 10653 0624 0300A0E1 		mov	r0, r3
 10654 0628 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4835:../../Source/Kernel/rme_kernel.c **** #endif
4836:../../Source/Kernel/rme_kernel.c **** 
4837:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4838:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10655              		.loc 1 4838 5 discriminator 4
 10656 062c 18301BE5 		ldr	r3, [fp, #-24]
 10657 0630 0514A0E3 		mov	r1, #83886080
 10658 0634 0300A0E1 		mov	r0, r3
 10659 0638 FEFFFFEB 		bl	__RME_A7A_Write_Release
4839:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4840:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4841:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4842:../../Source/Kernel/rme_kernel.c **** 
4843:../../Source/Kernel/rme_kernel.c ****     return 0;
 10660              		.loc 1 4843 12 discriminator 4
 10661 063c 0030A0E3 		mov	r3, #0
 10662              	.L676:
4844:../../Source/Kernel/rme_kernel.c **** }
 10663              		.loc 1 4844 1
 10664 0640 0300A0E1 		mov	r0, r3
 10665 0644 04D04BE2 		sub	sp, fp, #4
 10666              		.cfi_def_cfa 13, 8
 10667              		@ sp needed
 10668 0648 0088BDE8 		pop	{fp, pc}
 10669              		.cfi_endproc
 10670              	.LFE51:
 10672              		.section	.text._RME_Prc_Del,"ax",%progbits
 10673              		.align	2
 10674              		.syntax unified
 10675              		.arm
 10677              	_RME_Prc_Del:
 10678              	.LFB52:
4845:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Crt *************************************************/
4846:../../Source/Kernel/rme_kernel.c **** 
4847:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Del ******************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 274


4848:../../Source/Kernel/rme_kernel.c **** Description : Delete a process.
4849:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
4850:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
4851:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4852:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process.
4853:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4854:../../Source/Kernel/rme_kernel.c **** Output      : None.
4855:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4856:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4857:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Del(struct RME_Cap_Cpt* Cpt,
4858:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4859:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc)
4860:../../Source/Kernel/rme_kernel.c **** {
 10679              		.loc 1 4860 1
 10680              		.cfi_startproc
 10681              		@ args = 0, pretend = 0, frame = 40
 10682              		@ frame_needed = 1, uses_anonymous_args = 0
 10683 0000 00482DE9 		push	{fp, lr}
 10684              		.cfi_def_cfa_offset 8
 10685              		.cfi_offset 11, -8
 10686              		.cfi_offset 14, -4
 10687 0004 04B08DE2 		add	fp, sp, #4
 10688              		.cfi_def_cfa 11, 4
 10689 0008 28D04DE2 		sub	sp, sp, #40
 10690 000c 20000BE5 		str	r0, [fp, #-32]
 10691 0010 24100BE5 		str	r1, [fp, #-36]
 10692 0014 28200BE5 		str	r2, [fp, #-40]
4861:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4862:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Del;
4863:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4864:../../Source/Kernel/rme_kernel.c ****     /* For deletion use */
4865:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4866:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4867:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4868:../../Source/Kernel/rme_kernel.c **** #endif
4869:../../Source/Kernel/rme_kernel.c **** 
4870:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4871:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10693              		.loc 1 4871 5
 10694 0018 24301BE5 		ldr	r3, [fp, #-36]
 10695 001c 803003E2 		and	r3, r3, #128
 10696 0020 000053E3 		cmp	r3, #0
 10697 0024 1D00001A 		bne	.L712
 10698              		.loc 1 4871 5 is_stmt 0 discriminator 1
 10699 0028 20301BE5 		ldr	r3, [fp, #-32]
 10700 002c 142093E5 		ldr	r2, [r3, #20]
 10701 0030 24301BE5 		ldr	r3, [fp, #-36]
 10702 0034 030052E1 		cmp	r2, r3
 10703 0038 0100008A 		bhi	.L713
 10704              		.loc 1 4871 5 discriminator 3
 10705 003c 0230E0E3 		mvn	r3, #2
 10706 0040 B30000EA 		b	.L714
 10707              	.L713:
 10708              		.loc 1 4871 5 discriminator 4
 10709 0044 24301BE5 		ldr	r3, [fp, #-36]
 10710 0048 8322A0E1 		lsl	r2, r3, #5
 10711 004c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 275


 10712 0050 0C3093E5 		ldr	r3, [r3, #12]
 10713 0054 033082E0 		add	r3, r2, r3
 10714 0058 08300BE5 		str	r3, [fp, #-8]
 10715 005c 08301BE5 		ldr	r3, [fp, #-8]
 10716 0060 0300A0E1 		mov	r0, r3
 10717 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10718 0068 0C000BE5 		str	r0, [fp, #-12]
 10719 006c 0C301BE5 		ldr	r3, [fp, #-12]
 10720 0070 2338A0E1 		lsr	r3, r3, #16
 10721 0074 7330EFE6 		uxtb	r3, r3
 10722 0078 020053E3 		cmp	r3, #2
 10723 007c 0100001A 		bne	.L715
 10724              		.loc 1 4871 5 discriminator 5
 10725 0080 0830E0E3 		mvn	r3, #8
 10726 0084 A20000EA 		b	.L714
 10727              	.L715:
 10728              		.loc 1 4871 5 discriminator 6
 10729 0088 0C301BE5 		ldr	r3, [fp, #-12]
 10730 008c 233CA0E1 		lsr	r3, r3, #24
 10731 0090 030053E3 		cmp	r3, #3
 10732 0094 4100000A 		beq	.L716
 10733              		.loc 1 4871 5 discriminator 7
 10734 0098 0130E0E3 		mvn	r3, #1
 10735 009c 9C0000EA 		b	.L714
 10736              	.L712:
 10737              		.loc 1 4871 5 discriminator 2
 10738 00a0 24301BE5 		ldr	r3, [fp, #-36]
 10739 00a4 2324A0E1 		lsr	r2, r3, #8
 10740 00a8 20301BE5 		ldr	r3, [fp, #-32]
 10741 00ac 143093E5 		ldr	r3, [r3, #20]
 10742 00b0 030052E1 		cmp	r2, r3
 10743 00b4 0100003A 		bcc	.L717
 10744              		.loc 1 4871 5 discriminator 8
 10745 00b8 0230E0E3 		mvn	r3, #2
 10746 00bc 940000EA 		b	.L714
 10747              	.L717:
 10748              		.loc 1 4871 5 discriminator 9
 10749 00c0 24301BE5 		ldr	r3, [fp, #-36]
 10750 00c4 2334A0E1 		lsr	r3, r3, #8
 10751 00c8 8322A0E1 		lsl	r2, r3, #5
 10752 00cc 20301BE5 		ldr	r3, [fp, #-32]
 10753 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10754 00d4 033082E0 		add	r3, r2, r3
 10755 00d8 08300BE5 		str	r3, [fp, #-8]
 10756 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10757 00e0 0300A0E1 		mov	r0, r3
 10758 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10759 00e8 0C000BE5 		str	r0, [fp, #-12]
 10760 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 10761 00f0 2338A0E1 		lsr	r3, r3, #16
 10762 00f4 7330EFE6 		uxtb	r3, r3
 10763 00f8 020053E3 		cmp	r3, #2
 10764 00fc 0100001A 		bne	.L718
 10765              		.loc 1 4871 5 discriminator 10
 10766 0100 0830E0E3 		mvn	r3, #8
 10767 0104 820000EA 		b	.L714
 10768              	.L718:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 276


 10769              		.loc 1 4871 5 discriminator 11
 10770 0108 0C301BE5 		ldr	r3, [fp, #-12]
 10771 010c 233CA0E1 		lsr	r3, r3, #24
 10772 0110 030053E3 		cmp	r3, #3
 10773 0114 0100000A 		beq	.L719
 10774              		.loc 1 4871 5 discriminator 12
 10775 0118 0130E0E3 		mvn	r3, #1
 10776 011c 7C0000EA 		b	.L714
 10777              	.L719:
 10778              		.loc 1 4871 5 discriminator 13
 10779 0120 24301BE5 		ldr	r3, [fp, #-36]
 10780 0124 7F2003E2 		and	r2, r3, #127
 10781 0128 08301BE5 		ldr	r3, [fp, #-8]
 10782 012c 143093E5 		ldr	r3, [r3, #20]
 10783 0130 030052E1 		cmp	r2, r3
 10784 0134 0100003A 		bcc	.L720
 10785              		.loc 1 4871 5 discriminator 14
 10786 0138 0230E0E3 		mvn	r3, #2
 10787 013c 740000EA 		b	.L714
 10788              	.L720:
 10789              		.loc 1 4871 5 discriminator 15
 10790 0140 24301BE5 		ldr	r3, [fp, #-36]
 10791 0144 7F3003E2 		and	r3, r3, #127
 10792 0148 8322A0E1 		lsl	r2, r3, #5
 10793 014c 08301BE5 		ldr	r3, [fp, #-8]
 10794 0150 0C3093E5 		ldr	r3, [r3, #12]
 10795 0154 033082E0 		add	r3, r2, r3
 10796 0158 08300BE5 		str	r3, [fp, #-8]
 10797 015c 08301BE5 		ldr	r3, [fp, #-8]
 10798 0160 0300A0E1 		mov	r0, r3
 10799 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10800 0168 0C000BE5 		str	r0, [fp, #-12]
 10801 016c 0C301BE5 		ldr	r3, [fp, #-12]
 10802 0170 2338A0E1 		lsr	r3, r3, #16
 10803 0174 7330EFE6 		uxtb	r3, r3
 10804 0178 020053E3 		cmp	r3, #2
 10805 017c 0100001A 		bne	.L721
 10806              		.loc 1 4871 5 discriminator 16
 10807 0180 0830E0E3 		mvn	r3, #8
 10808 0184 620000EA 		b	.L714
 10809              	.L721:
 10810              		.loc 1 4871 5 discriminator 17
 10811 0188 0C301BE5 		ldr	r3, [fp, #-12]
 10812 018c 233CA0E1 		lsr	r3, r3, #24
 10813 0190 030053E3 		cmp	r3, #3
 10814 0194 0100000A 		beq	.L716
 10815              		.loc 1 4871 5 discriminator 18
 10816 0198 0130E0E3 		mvn	r3, #1
 10817 019c 5C0000EA 		b	.L714
 10818              	.L716:
4872:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
4873:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4874:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 10819              		.loc 1 4874 5 is_stmt 1
 10820 01a0 08301BE5 		ldr	r3, [fp, #-8]
 10821 01a4 083093E5 		ldr	r3, [r3, #8]
 10822 01a8 023003E2 		and	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 277


 10823 01ac 000053E3 		cmp	r3, #0
 10824 01b0 0100001A 		bne	.L722
 10825              		.loc 1 4874 5 is_stmt 0 discriminator 1
 10826 01b4 0630E0E3 		mvn	r3, #6
 10827 01b8 550000EA 		b	.L714
 10828              	.L722:
4875:../../Source/Kernel/rme_kernel.c **** 
4876:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4877:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Prc,struct RME_Cap_Prc*,Prc_Del);
 10829              		.loc 1 4877 5 is_stmt 1
 10830 01bc 08301BE5 		ldr	r3, [fp, #-8]
 10831 01c0 142093E5 		ldr	r2, [r3, #20]
 10832 01c4 28301BE5 		ldr	r3, [fp, #-40]
 10833 01c8 030052E1 		cmp	r2, r3
 10834 01cc 0100008A 		bhi	.L723
 10835              		.loc 1 4877 5 is_stmt 0 discriminator 1
 10836 01d0 0230E0E3 		mvn	r3, #2
 10837 01d4 4E0000EA 		b	.L714
 10838              	.L723:
 10839              		.loc 1 4877 5 discriminator 2
 10840 01d8 28301BE5 		ldr	r3, [fp, #-40]
 10841 01dc 8322A0E1 		lsl	r2, r3, #5
 10842 01e0 08301BE5 		ldr	r3, [fp, #-8]
 10843 01e4 0C3093E5 		ldr	r3, [r3, #12]
 10844 01e8 033082E0 		add	r3, r2, r3
 10845 01ec 10300BE5 		str	r3, [fp, #-16]
4878:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
4879:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Prc_Del,Type_Stat,RME_CAP_TYPE_PRC);
 10846              		.loc 1 4879 5 is_stmt 1 discriminator 2
 10847 01f0 10301BE5 		ldr	r3, [fp, #-16]
 10848 01f4 0300A0E1 		mov	r0, r3
 10849 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10850 01fc 0C000BE5 		str	r0, [fp, #-12]
 10851 0200 0C301BE5 		ldr	r3, [fp, #-12]
 10852 0204 2338A0E1 		lsr	r3, r3, #16
 10853 0208 7330EFE6 		uxtb	r3, r3
 10854 020c 020053E3 		cmp	r3, #2
 10855 0210 0100000A 		beq	.L724
 10856              		.loc 1 4879 5 is_stmt 0 discriminator 1
 10857 0214 0830E0E3 		mvn	r3, #8
 10858 0218 3D0000EA 		b	.L714
 10859              	.L724:
 10860              		.loc 1 4879 5 discriminator 2
 10861 021c 0C301BE5 		ldr	r3, [fp, #-12]
 10862 0220 233CA0E1 		lsr	r3, r3, #24
 10863 0224 050053E3 		cmp	r3, #5
 10864 0228 0100000A 		beq	.L725
 10865              		.loc 1 4879 5 discriminator 3
 10866 022c 0130E0E3 		mvn	r3, #1
 10867 0230 370000EA 		b	.L714
 10868              	.L725:
 10869              		.loc 1 4879 5 discriminator 6
 10870 0234 10301BE5 		ldr	r3, [fp, #-16]
 10871 0238 043093E5 		ldr	r3, [r3, #4]
 10872 023c 000053E3 		cmp	r3, #0
 10873 0240 0B00000A 		beq	.L726
 10874              		.loc 1 4879 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 278


 10875 0244 0C301BE5 		ldr	r3, [fp, #-12]
 10876 0248 7330FFE6 		uxth	r3, r3
 10877 024c 000053E3 		cmp	r3, #0
 10878 0250 0500001A 		bne	.L727
 10879              		.loc 1 4879 5 discriminator 9
 10880 0254 10001BE5 		ldr	r0, [fp, #-16]
 10881 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10882 025c FF38C3E3 		bic	r3, r3, #16711680
 10883 0260 0320A0E1 		mov	r2, r3
 10884 0264 0C101BE5 		ldr	r1, [fp, #-12]
 10885 0268 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10886              	.L727:
 10887              		.loc 1 4879 5 discriminator 11
 10888 026c 0530E0E3 		mvn	r3, #5
 10889 0270 270000EA 		b	.L714
 10890              	.L726:
 10891              		.loc 1 4879 5 discriminator 8
 10892 0274 0C301BE5 		ldr	r3, [fp, #-12]
 10893 0278 7330FFE6 		uxth	r3, r3
 10894 027c 000053E3 		cmp	r3, #0
 10895 0280 0800000A 		beq	.L728
 10896              		.loc 1 4879 5 discriminator 12
 10897 0284 003000E3 		movw	r3, #:lower16:.LC4
 10898 0288 003040E3 		movt	r3, #:upper16:.LC4
 10899 028c 002000E3 		movw	r2, #:lower16:.LC5
 10900 0290 002040E3 		movt	r2, #:upper16:.LC5
 10901 0294 0F1301E3 		movw	r1, #4879
 10902 0298 000000E3 		movw	r0, #:lower16:.LC6
 10903 029c 000040E3 		movt	r0, #:upper16:.LC6
 10904 02a0 FEFFFFEB 		bl	RME_Log
 10905              	.L729:
 10906              		.loc 1 4879 5 discriminator 1
 10907 02a4 FEFFFFEA 		b	.L729
 10908              	.L728:
4880:../../Source/Kernel/rme_kernel.c **** 
4881:../../Source/Kernel/rme_kernel.c ****     /* Remember for deletion */
4882:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=Prc_Del->Cpt;
 10909              		.loc 1 4882 12 is_stmt 1
 10910 02a8 10301BE5 		ldr	r3, [fp, #-16]
 10911 02ac 143093E5 		ldr	r3, [r3, #20]
 10912 02b0 14300BE5 		str	r3, [fp, #-20]
4883:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4884:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=Prc_Del->Pgt;
 10913              		.loc 1 4884 12
 10914 02b4 10301BE5 		ldr	r3, [fp, #-16]
 10915 02b8 183093E5 		ldr	r3, [r3, #24]
 10916 02bc 18300BE5 		str	r3, [fp, #-24]
4885:../../Source/Kernel/rme_kernel.c **** #endif
4886:../../Source/Kernel/rme_kernel.c **** 
4887:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
4888:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Prc_Del,Type_Stat);
 10917              		.loc 1 4888 5
 10918 02c0 10301BE5 		ldr	r3, [fp, #-16]
 10919 02c4 0020A0E3 		mov	r2, #0
 10920 02c8 0C101BE5 		ldr	r1, [fp, #-12]
 10921 02cc 0300A0E1 		mov	r0, r3
 10922 02d0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 279


 10923 02d4 0030A0E1 		mov	r3, r0
 10924 02d8 000053E3 		cmp	r3, #0
 10925 02dc 0100001A 		bne	.L730
 10926              		.loc 1 4888 5 is_stmt 0 discriminator 1
 10927 02e0 0030E0E3 		mvn	r3, #0
 10928 02e4 0A0000EA 		b	.L714
 10929              	.L730:
4889:../../Source/Kernel/rme_kernel.c **** 
4890:../../Source/Kernel/rme_kernel.c ****     /* Dereference caps */
4891:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),-1);
 10930              		.loc 1 4891 5 is_stmt 1
 10931 02e8 14301BE5 		ldr	r3, [fp, #-20]
 10932 02ec 043083E2 		add	r3, r3, #4
 10933 02f0 0010E0E3 		mvn	r1, #0
 10934 02f4 0300A0E1 		mov	r0, r3
 10935 02f8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4892:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4893:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),-1);
 10936              		.loc 1 4893 5
 10937 02fc 18301BE5 		ldr	r3, [fp, #-24]
 10938 0300 043083E2 		add	r3, r3, #4
 10939 0304 0010E0E3 		mvn	r1, #0
 10940 0308 0300A0E1 		mov	r0, r3
 10941 030c FEFFFFEB 		bl	_RME_Fetch_Add_Single
4894:../../Source/Kernel/rme_kernel.c **** #endif
4895:../../Source/Kernel/rme_kernel.c ****     
4896:../../Source/Kernel/rme_kernel.c ****     return 0;
 10942              		.loc 1 4896 12
 10943 0310 0030A0E3 		mov	r3, #0
 10944              	.L714:
4897:../../Source/Kernel/rme_kernel.c **** }
 10945              		.loc 1 4897 1
 10946 0314 0300A0E1 		mov	r0, r3
 10947 0318 04D04BE2 		sub	sp, fp, #4
 10948              		.cfi_def_cfa 13, 8
 10949              		@ sp needed
 10950 031c 0088BDE8 		pop	{fp, pc}
 10951              		.cfi_endproc
 10952              	.LFE52:
 10954              		.section	.text._RME_Prc_Cpt,"ax",%progbits
 10955              		.align	2
 10956              		.syntax unified
 10957              		.arm
 10959              	_RME_Prc_Cpt:
 10960              	.LFB53:
4898:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Del *************************************************/
4899:../../Source/Kernel/rme_kernel.c **** 
4900:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Cpt ******************************************************
4901:../../Source/Kernel/rme_kernel.c **** Description : Change a process's capability table.
4902:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4903:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4904:../../Source/Kernel/rme_kernel.c ****                                   created already.
4905:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4906:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4907:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4908:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4909:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 280


4910:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4911:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4912:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Cpt(struct RME_Cap_Cpt* Cpt,
4913:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4914:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt)
4915:../../Source/Kernel/rme_kernel.c **** {
 10961              		.loc 1 4915 1
 10962              		.cfi_startproc
 10963              		@ args = 0, pretend = 0, frame = 32
 10964              		@ frame_needed = 1, uses_anonymous_args = 0
 10965 0000 00482DE9 		push	{fp, lr}
 10966              		.cfi_def_cfa_offset 8
 10967              		.cfi_offset 11, -8
 10968              		.cfi_offset 14, -4
 10969 0004 04B08DE2 		add	fp, sp, #4
 10970              		.cfi_def_cfa 11, 4
 10971 0008 20D04DE2 		sub	sp, sp, #32
 10972 000c 18000BE5 		str	r0, [fp, #-24]
 10973 0010 1C100BE5 		str	r1, [fp, #-28]
 10974 0014 20200BE5 		str	r2, [fp, #-32]
4916:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4917:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_New;
4918:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Old;
4919:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4920:../../Source/Kernel/rme_kernel.c ****     
4921:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4922:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 10975              		.loc 1 4922 5
 10976 0018 1C301BE5 		ldr	r3, [fp, #-28]
 10977 001c 803003E2 		and	r3, r3, #128
 10978 0020 000053E3 		cmp	r3, #0
 10979 0024 1D00001A 		bne	.L732
 10980              		.loc 1 4922 5 is_stmt 0 discriminator 1
 10981 0028 18301BE5 		ldr	r3, [fp, #-24]
 10982 002c 142093E5 		ldr	r2, [r3, #20]
 10983 0030 1C301BE5 		ldr	r3, [fp, #-28]
 10984 0034 030052E1 		cmp	r2, r3
 10985 0038 0100008A 		bhi	.L733
 10986              		.loc 1 4922 5 discriminator 3
 10987 003c 0230E0E3 		mvn	r3, #2
 10988 0040 E90000EA 		b	.L734
 10989              	.L733:
 10990              		.loc 1 4922 5 discriminator 4
 10991 0044 1C301BE5 		ldr	r3, [fp, #-28]
 10992 0048 8322A0E1 		lsl	r2, r3, #5
 10993 004c 18301BE5 		ldr	r3, [fp, #-24]
 10994 0050 0C3093E5 		ldr	r3, [r3, #12]
 10995 0054 033082E0 		add	r3, r2, r3
 10996 0058 08300BE5 		str	r3, [fp, #-8]
 10997 005c 08301BE5 		ldr	r3, [fp, #-8]
 10998 0060 0300A0E1 		mov	r0, r3
 10999 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11000 0068 10000BE5 		str	r0, [fp, #-16]
 11001 006c 10301BE5 		ldr	r3, [fp, #-16]
 11002 0070 2338A0E1 		lsr	r3, r3, #16
 11003 0074 7330EFE6 		uxtb	r3, r3
 11004 0078 020053E3 		cmp	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 281


 11005 007c 0100001A 		bne	.L735
 11006              		.loc 1 4922 5 discriminator 5
 11007 0080 0830E0E3 		mvn	r3, #8
 11008 0084 D80000EA 		b	.L734
 11009              	.L735:
 11010              		.loc 1 4922 5 discriminator 6
 11011 0088 10301BE5 		ldr	r3, [fp, #-16]
 11012 008c 233CA0E1 		lsr	r3, r3, #24
 11013 0090 050053E3 		cmp	r3, #5
 11014 0094 4100000A 		beq	.L736
 11015              		.loc 1 4922 5 discriminator 7
 11016 0098 0130E0E3 		mvn	r3, #1
 11017 009c D20000EA 		b	.L734
 11018              	.L732:
 11019              		.loc 1 4922 5 discriminator 2
 11020 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 11021 00a4 2324A0E1 		lsr	r2, r3, #8
 11022 00a8 18301BE5 		ldr	r3, [fp, #-24]
 11023 00ac 143093E5 		ldr	r3, [r3, #20]
 11024 00b0 030052E1 		cmp	r2, r3
 11025 00b4 0100003A 		bcc	.L737
 11026              		.loc 1 4922 5 discriminator 8
 11027 00b8 0230E0E3 		mvn	r3, #2
 11028 00bc CA0000EA 		b	.L734
 11029              	.L737:
 11030              		.loc 1 4922 5 discriminator 9
 11031 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 11032 00c4 2334A0E1 		lsr	r3, r3, #8
 11033 00c8 8322A0E1 		lsl	r2, r3, #5
 11034 00cc 18301BE5 		ldr	r3, [fp, #-24]
 11035 00d0 0C3093E5 		ldr	r3, [r3, #12]
 11036 00d4 033082E0 		add	r3, r2, r3
 11037 00d8 08300BE5 		str	r3, [fp, #-8]
 11038 00dc 08301BE5 		ldr	r3, [fp, #-8]
 11039 00e0 0300A0E1 		mov	r0, r3
 11040 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11041 00e8 10000BE5 		str	r0, [fp, #-16]
 11042 00ec 10301BE5 		ldr	r3, [fp, #-16]
 11043 00f0 2338A0E1 		lsr	r3, r3, #16
 11044 00f4 7330EFE6 		uxtb	r3, r3
 11045 00f8 020053E3 		cmp	r3, #2
 11046 00fc 0100001A 		bne	.L738
 11047              		.loc 1 4922 5 discriminator 10
 11048 0100 0830E0E3 		mvn	r3, #8
 11049 0104 B80000EA 		b	.L734
 11050              	.L738:
 11051              		.loc 1 4922 5 discriminator 11
 11052 0108 10301BE5 		ldr	r3, [fp, #-16]
 11053 010c 233CA0E1 		lsr	r3, r3, #24
 11054 0110 030053E3 		cmp	r3, #3
 11055 0114 0100000A 		beq	.L739
 11056              		.loc 1 4922 5 discriminator 12
 11057 0118 0130E0E3 		mvn	r3, #1
 11058 011c B20000EA 		b	.L734
 11059              	.L739:
 11060              		.loc 1 4922 5 discriminator 13
 11061 0120 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 282


 11062 0124 7F2003E2 		and	r2, r3, #127
 11063 0128 08301BE5 		ldr	r3, [fp, #-8]
 11064 012c 143093E5 		ldr	r3, [r3, #20]
 11065 0130 030052E1 		cmp	r2, r3
 11066 0134 0100003A 		bcc	.L740
 11067              		.loc 1 4922 5 discriminator 14
 11068 0138 0230E0E3 		mvn	r3, #2
 11069 013c AA0000EA 		b	.L734
 11070              	.L740:
 11071              		.loc 1 4922 5 discriminator 15
 11072 0140 1C301BE5 		ldr	r3, [fp, #-28]
 11073 0144 7F3003E2 		and	r3, r3, #127
 11074 0148 8322A0E1 		lsl	r2, r3, #5
 11075 014c 08301BE5 		ldr	r3, [fp, #-8]
 11076 0150 0C3093E5 		ldr	r3, [r3, #12]
 11077 0154 033082E0 		add	r3, r2, r3
 11078 0158 08300BE5 		str	r3, [fp, #-8]
 11079 015c 08301BE5 		ldr	r3, [fp, #-8]
 11080 0160 0300A0E1 		mov	r0, r3
 11081 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11082 0168 10000BE5 		str	r0, [fp, #-16]
 11083 016c 10301BE5 		ldr	r3, [fp, #-16]
 11084 0170 2338A0E1 		lsr	r3, r3, #16
 11085 0174 7330EFE6 		uxtb	r3, r3
 11086 0178 020053E3 		cmp	r3, #2
 11087 017c 0100001A 		bne	.L741
 11088              		.loc 1 4922 5 discriminator 16
 11089 0180 0830E0E3 		mvn	r3, #8
 11090 0184 980000EA 		b	.L734
 11091              	.L741:
 11092              		.loc 1 4922 5 discriminator 17
 11093 0188 10301BE5 		ldr	r3, [fp, #-16]
 11094 018c 233CA0E1 		lsr	r3, r3, #24
 11095 0190 050053E3 		cmp	r3, #5
 11096 0194 0100000A 		beq	.L736
 11097              		.loc 1 4922 5 discriminator 18
 11098 0198 0130E0E3 		mvn	r3, #1
 11099 019c 920000EA 		b	.L734
 11100              	.L736:
4923:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4924:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11101              		.loc 1 4924 5 is_stmt 1
 11102 01a0 20301BE5 		ldr	r3, [fp, #-32]
 11103 01a4 803003E2 		and	r3, r3, #128
 11104 01a8 000053E3 		cmp	r3, #0
 11105 01ac 1D00001A 		bne	.L742
 11106              		.loc 1 4924 5 is_stmt 0 discriminator 1
 11107 01b0 18301BE5 		ldr	r3, [fp, #-24]
 11108 01b4 142093E5 		ldr	r2, [r3, #20]
 11109 01b8 20301BE5 		ldr	r3, [fp, #-32]
 11110 01bc 030052E1 		cmp	r2, r3
 11111 01c0 0100008A 		bhi	.L743
 11112              		.loc 1 4924 5 discriminator 3
 11113 01c4 0230E0E3 		mvn	r3, #2
 11114 01c8 870000EA 		b	.L734
 11115              	.L743:
 11116              		.loc 1 4924 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 283


 11117 01cc 20301BE5 		ldr	r3, [fp, #-32]
 11118 01d0 8322A0E1 		lsl	r2, r3, #5
 11119 01d4 18301BE5 		ldr	r3, [fp, #-24]
 11120 01d8 0C3093E5 		ldr	r3, [r3, #12]
 11121 01dc 033082E0 		add	r3, r2, r3
 11122 01e0 0C300BE5 		str	r3, [fp, #-12]
 11123 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 11124 01e8 0300A0E1 		mov	r0, r3
 11125 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11126 01f0 10000BE5 		str	r0, [fp, #-16]
 11127 01f4 10301BE5 		ldr	r3, [fp, #-16]
 11128 01f8 2338A0E1 		lsr	r3, r3, #16
 11129 01fc 7330EFE6 		uxtb	r3, r3
 11130 0200 020053E3 		cmp	r3, #2
 11131 0204 0100001A 		bne	.L744
 11132              		.loc 1 4924 5 discriminator 5
 11133 0208 0830E0E3 		mvn	r3, #8
 11134 020c 760000EA 		b	.L734
 11135              	.L744:
 11136              		.loc 1 4924 5 discriminator 6
 11137 0210 10301BE5 		ldr	r3, [fp, #-16]
 11138 0214 233CA0E1 		lsr	r3, r3, #24
 11139 0218 030053E3 		cmp	r3, #3
 11140 021c 4100000A 		beq	.L745
 11141              		.loc 1 4924 5 discriminator 7
 11142 0220 0130E0E3 		mvn	r3, #1
 11143 0224 700000EA 		b	.L734
 11144              	.L742:
 11145              		.loc 1 4924 5 discriminator 2
 11146 0228 20301BE5 		ldr	r3, [fp, #-32]
 11147 022c 2324A0E1 		lsr	r2, r3, #8
 11148 0230 18301BE5 		ldr	r3, [fp, #-24]
 11149 0234 143093E5 		ldr	r3, [r3, #20]
 11150 0238 030052E1 		cmp	r2, r3
 11151 023c 0100003A 		bcc	.L746
 11152              		.loc 1 4924 5 discriminator 8
 11153 0240 0230E0E3 		mvn	r3, #2
 11154 0244 680000EA 		b	.L734
 11155              	.L746:
 11156              		.loc 1 4924 5 discriminator 9
 11157 0248 20301BE5 		ldr	r3, [fp, #-32]
 11158 024c 2334A0E1 		lsr	r3, r3, #8
 11159 0250 8322A0E1 		lsl	r2, r3, #5
 11160 0254 18301BE5 		ldr	r3, [fp, #-24]
 11161 0258 0C3093E5 		ldr	r3, [r3, #12]
 11162 025c 033082E0 		add	r3, r2, r3
 11163 0260 0C300BE5 		str	r3, [fp, #-12]
 11164 0264 0C301BE5 		ldr	r3, [fp, #-12]
 11165 0268 0300A0E1 		mov	r0, r3
 11166 026c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11167 0270 10000BE5 		str	r0, [fp, #-16]
 11168 0274 10301BE5 		ldr	r3, [fp, #-16]
 11169 0278 2338A0E1 		lsr	r3, r3, #16
 11170 027c 7330EFE6 		uxtb	r3, r3
 11171 0280 020053E3 		cmp	r3, #2
 11172 0284 0100001A 		bne	.L747
 11173              		.loc 1 4924 5 discriminator 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 284


 11174 0288 0830E0E3 		mvn	r3, #8
 11175 028c 560000EA 		b	.L734
 11176              	.L747:
 11177              		.loc 1 4924 5 discriminator 11
 11178 0290 10301BE5 		ldr	r3, [fp, #-16]
 11179 0294 233CA0E1 		lsr	r3, r3, #24
 11180 0298 030053E3 		cmp	r3, #3
 11181 029c 0100000A 		beq	.L748
 11182              		.loc 1 4924 5 discriminator 12
 11183 02a0 0130E0E3 		mvn	r3, #1
 11184 02a4 500000EA 		b	.L734
 11185              	.L748:
 11186              		.loc 1 4924 5 discriminator 13
 11187 02a8 20301BE5 		ldr	r3, [fp, #-32]
 11188 02ac 7F2003E2 		and	r2, r3, #127
 11189 02b0 0C301BE5 		ldr	r3, [fp, #-12]
 11190 02b4 143093E5 		ldr	r3, [r3, #20]
 11191 02b8 030052E1 		cmp	r2, r3
 11192 02bc 0100003A 		bcc	.L749
 11193              		.loc 1 4924 5 discriminator 14
 11194 02c0 0230E0E3 		mvn	r3, #2
 11195 02c4 480000EA 		b	.L734
 11196              	.L749:
 11197              		.loc 1 4924 5 discriminator 15
 11198 02c8 20301BE5 		ldr	r3, [fp, #-32]
 11199 02cc 7F3003E2 		and	r3, r3, #127
 11200 02d0 8322A0E1 		lsl	r2, r3, #5
 11201 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 11202 02d8 0C3093E5 		ldr	r3, [r3, #12]
 11203 02dc 033082E0 		add	r3, r2, r3
 11204 02e0 0C300BE5 		str	r3, [fp, #-12]
 11205 02e4 0C301BE5 		ldr	r3, [fp, #-12]
 11206 02e8 0300A0E1 		mov	r0, r3
 11207 02ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11208 02f0 10000BE5 		str	r0, [fp, #-16]
 11209 02f4 10301BE5 		ldr	r3, [fp, #-16]
 11210 02f8 2338A0E1 		lsr	r3, r3, #16
 11211 02fc 7330EFE6 		uxtb	r3, r3
 11212 0300 020053E3 		cmp	r3, #2
 11213 0304 0100001A 		bne	.L750
 11214              		.loc 1 4924 5 discriminator 16
 11215 0308 0830E0E3 		mvn	r3, #8
 11216 030c 360000EA 		b	.L734
 11217              	.L750:
 11218              		.loc 1 4924 5 discriminator 17
 11219 0310 10301BE5 		ldr	r3, [fp, #-16]
 11220 0314 233CA0E1 		lsr	r3, r3, #24
 11221 0318 030053E3 		cmp	r3, #3
 11222 031c 0100000A 		beq	.L745
 11223              		.loc 1 4924 5 discriminator 18
 11224 0320 0130E0E3 		mvn	r3, #1
 11225 0324 300000EA 		b	.L734
 11226              	.L745:
4925:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_New,Type_Stat);     
4926:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4927:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_CPT);
 11227              		.loc 1 4927 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 285


 11228 0328 08301BE5 		ldr	r3, [fp, #-8]
 11229 032c 083093E5 		ldr	r3, [r3, #8]
 11230 0330 043003E2 		and	r3, r3, #4
 11231 0334 000053E3 		cmp	r3, #0
 11232 0338 0100001A 		bne	.L751
 11233              		.loc 1 4927 5 is_stmt 0 discriminator 1
 11234 033c 0630E0E3 		mvn	r3, #6
 11235 0340 290000EA 		b	.L734
 11236              	.L751:
4928:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_New,RME_CPT_FLAG_PRC_CPT);
 11237              		.loc 1 4928 5 is_stmt 1
 11238 0344 0C301BE5 		ldr	r3, [fp, #-12]
 11239 0348 083093E5 		ldr	r3, [r3, #8]
 11240 034c 803003E2 		and	r3, r3, #128
 11241 0350 000053E3 		cmp	r3, #0
 11242 0354 0100001A 		bne	.L752
 11243              		.loc 1 4928 5 is_stmt 0 discriminator 1
 11244 0358 0630E0E3 		mvn	r3, #6
 11245 035c 220000EA 		b	.L734
 11246              	.L752:
4929:../../Source/Kernel/rme_kernel.c ****     
4930:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
4931:../../Source/Kernel/rme_kernel.c ****     Cpt_New=RME_CAP_CONV_ROOT(Cpt_New,struct RME_Cap_Cpt*);
 11247              		.loc 1 4931 13 is_stmt 1
 11248 0360 0C301BE5 		ldr	r3, [fp, #-12]
 11249 0364 003093E5 		ldr	r3, [r3]
 11250 0368 7330FFE6 		uxth	r3, r3
 11251 036c 000053E3 		cmp	r3, #0
 11252 0370 0200000A 		beq	.L753
 11253              		.loc 1 4931 13 is_stmt 0 discriminator 1
 11254 0374 0C301BE5 		ldr	r3, [fp, #-12]
 11255 0378 043093E5 		ldr	r3, [r3, #4]
 11256 037c 000000EA 		b	.L754
 11257              	.L753:
 11258              		.loc 1 4931 13 discriminator 2
 11259 0380 0C301BE5 		ldr	r3, [fp, #-12]
 11260              	.L754:
 11261              		.loc 1 4931 12 is_stmt 1 discriminator 4
 11262 0384 0C300BE5 		str	r3, [fp, #-12]
4932:../../Source/Kernel/rme_kernel.c ****     
4933:../../Source/Kernel/rme_kernel.c ****     /* Commit the change */
4934:../../Source/Kernel/rme_kernel.c ****     Cpt_Old=Prc_Op->Cpt;
 11263              		.loc 1 4934 12 discriminator 4
 11264 0388 08301BE5 		ldr	r3, [fp, #-8]
 11265 038c 143093E5 		ldr	r3, [r3, #20]
 11266 0390 14300BE5 		str	r3, [fp, #-20]
4935:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Cpt)),
 11267              		.loc 1 4935 8 discriminator 4
 11268 0394 08301BE5 		ldr	r3, [fp, #-8]
 11269 0398 143083E2 		add	r3, r3, #20
 11270 039c 14101BE5 		ldr	r1, [fp, #-20]
 11271 03a0 0C201BE5 		ldr	r2, [fp, #-12]
 11272 03a4 0300A0E1 		mov	r0, r3
 11273 03a8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11274 03ac 0030A0E1 		mov	r3, r0
 11275              		.loc 1 4935 7 discriminator 4
 11276 03b0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 286


 11277 03b4 0100001A 		bne	.L755
4936:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Cpt_Old,(rme_ptr_t)Cpt_New)==RME_CASFAIL)
4937:../../Source/Kernel/rme_kernel.c ****     {
4938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4939:../../Source/Kernel/rme_kernel.c ****         
4940:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 11278              		.loc 1 4940 16
 11279 03b8 C930E0E3 		mvn	r3, #201
 11280 03bc 0A0000EA 		b	.L734
 11281              	.L755:
4941:../../Source/Kernel/rme_kernel.c ****     }
4942:../../Source/Kernel/rme_kernel.c ****     else
4943:../../Source/Kernel/rme_kernel.c ****     {
4944:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4945:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4946:../../Source/Kernel/rme_kernel.c ****     }
4947:../../Source/Kernel/rme_kernel.c ****     
4948:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
4949:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_New->Head.Root_Ref),1);
 11282              		.loc 1 4949 5
 11283 03c0 0C301BE5 		ldr	r3, [fp, #-12]
 11284 03c4 043083E2 		add	r3, r3, #4
 11285 03c8 0110A0E3 		mov	r1, #1
 11286 03cc 0300A0E1 		mov	r0, r3
 11287 03d0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4950:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_Old->Head.Root_Ref),-1);
 11288              		.loc 1 4950 5
 11289 03d4 14301BE5 		ldr	r3, [fp, #-20]
 11290 03d8 043083E2 		add	r3, r3, #4
 11291 03dc 0010E0E3 		mvn	r1, #0
 11292 03e0 0300A0E1 		mov	r0, r3
 11293 03e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4951:../../Source/Kernel/rme_kernel.c **** 
4952:../../Source/Kernel/rme_kernel.c ****     return 0;
 11294              		.loc 1 4952 12
 11295 03e8 0030A0E3 		mov	r3, #0
 11296              	.L734:
4953:../../Source/Kernel/rme_kernel.c **** }
 11297              		.loc 1 4953 1
 11298 03ec 0300A0E1 		mov	r0, r3
 11299 03f0 04D04BE2 		sub	sp, fp, #4
 11300              		.cfi_def_cfa 13, 8
 11301              		@ sp needed
 11302 03f4 0088BDE8 		pop	{fp, pc}
 11303              		.cfi_endproc
 11304              	.LFE53:
 11306              		.section	.text._RME_Prc_Pgt,"ax",%progbits
 11307              		.align	2
 11308              		.syntax unified
 11309              		.arm
 11311              	_RME_Prc_Pgt:
 11312              	.LFB54:
4954:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Cpt *************************************************/
4955:../../Source/Kernel/rme_kernel.c **** 
4956:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Pgt ******************************************************
4957:../../Source/Kernel/rme_kernel.c **** Description : Change a process's page table.
4958:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 287


4959:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4960:../../Source/Kernel/rme_kernel.c ****                                   created already.
4961:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4962:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4963:../../Source/Kernel/rme_kernel.c ****                                   this process.
4964:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4965:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4966:../../Source/Kernel/rme_kernel.c ****                                   address.
4967:../../Source/Kernel/rme_kernel.c **** Output      : None.
4968:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4969:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4970:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4971:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4972:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4973:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4974:../../Source/Kernel/rme_kernel.c **** #else
4975:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4976:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4977:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4978:../../Source/Kernel/rme_kernel.c **** #endif
4979:../../Source/Kernel/rme_kernel.c **** {
 11313              		.loc 1 4979 1
 11314              		.cfi_startproc
 11315              		@ args = 0, pretend = 0, frame = 32
 11316              		@ frame_needed = 1, uses_anonymous_args = 0
 11317 0000 00482DE9 		push	{fp, lr}
 11318              		.cfi_def_cfa_offset 8
 11319              		.cfi_offset 11, -8
 11320              		.cfi_offset 14, -4
 11321 0004 04B08DE2 		add	fp, sp, #4
 11322              		.cfi_def_cfa 11, 4
 11323 0008 20D04DE2 		sub	sp, sp, #32
 11324 000c 18000BE5 		str	r0, [fp, #-24]
 11325 0010 1C100BE5 		str	r1, [fp, #-28]
 11326 0014 20200BE5 		str	r2, [fp, #-32]
4980:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4981:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4982:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4983:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Old;
4984:../../Source/Kernel/rme_kernel.c **** #else
4985:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Old;
4986:../../Source/Kernel/rme_kernel.c **** #endif
4987:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4988:../../Source/Kernel/rme_kernel.c ****     
4989:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4990:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11327              		.loc 1 4990 5
 11328 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11329 001c 803003E2 		and	r3, r3, #128
 11330 0020 000053E3 		cmp	r3, #0
 11331 0024 1D00001A 		bne	.L757
 11332              		.loc 1 4990 5 is_stmt 0 discriminator 1
 11333 0028 18301BE5 		ldr	r3, [fp, #-24]
 11334 002c 142093E5 		ldr	r2, [r3, #20]
 11335 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11336 0034 030052E1 		cmp	r2, r3
 11337 0038 0100008A 		bhi	.L758
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 288


 11338              		.loc 1 4990 5 discriminator 3
 11339 003c 0230E0E3 		mvn	r3, #2
 11340 0040 E90000EA 		b	.L759
 11341              	.L758:
 11342              		.loc 1 4990 5 discriminator 4
 11343 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11344 0048 8322A0E1 		lsl	r2, r3, #5
 11345 004c 18301BE5 		ldr	r3, [fp, #-24]
 11346 0050 0C3093E5 		ldr	r3, [r3, #12]
 11347 0054 033082E0 		add	r3, r2, r3
 11348 0058 08300BE5 		str	r3, [fp, #-8]
 11349 005c 08301BE5 		ldr	r3, [fp, #-8]
 11350 0060 0300A0E1 		mov	r0, r3
 11351 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11352 0068 10000BE5 		str	r0, [fp, #-16]
 11353 006c 10301BE5 		ldr	r3, [fp, #-16]
 11354 0070 2338A0E1 		lsr	r3, r3, #16
 11355 0074 7330EFE6 		uxtb	r3, r3
 11356 0078 020053E3 		cmp	r3, #2
 11357 007c 0100001A 		bne	.L760
 11358              		.loc 1 4990 5 discriminator 5
 11359 0080 0830E0E3 		mvn	r3, #8
 11360 0084 D80000EA 		b	.L759
 11361              	.L760:
 11362              		.loc 1 4990 5 discriminator 6
 11363 0088 10301BE5 		ldr	r3, [fp, #-16]
 11364 008c 233CA0E1 		lsr	r3, r3, #24
 11365 0090 050053E3 		cmp	r3, #5
 11366 0094 4100000A 		beq	.L761
 11367              		.loc 1 4990 5 discriminator 7
 11368 0098 0130E0E3 		mvn	r3, #1
 11369 009c D20000EA 		b	.L759
 11370              	.L757:
 11371              		.loc 1 4990 5 discriminator 2
 11372 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 11373 00a4 2324A0E1 		lsr	r2, r3, #8
 11374 00a8 18301BE5 		ldr	r3, [fp, #-24]
 11375 00ac 143093E5 		ldr	r3, [r3, #20]
 11376 00b0 030052E1 		cmp	r2, r3
 11377 00b4 0100003A 		bcc	.L762
 11378              		.loc 1 4990 5 discriminator 8
 11379 00b8 0230E0E3 		mvn	r3, #2
 11380 00bc CA0000EA 		b	.L759
 11381              	.L762:
 11382              		.loc 1 4990 5 discriminator 9
 11383 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 11384 00c4 2334A0E1 		lsr	r3, r3, #8
 11385 00c8 8322A0E1 		lsl	r2, r3, #5
 11386 00cc 18301BE5 		ldr	r3, [fp, #-24]
 11387 00d0 0C3093E5 		ldr	r3, [r3, #12]
 11388 00d4 033082E0 		add	r3, r2, r3
 11389 00d8 08300BE5 		str	r3, [fp, #-8]
 11390 00dc 08301BE5 		ldr	r3, [fp, #-8]
 11391 00e0 0300A0E1 		mov	r0, r3
 11392 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11393 00e8 10000BE5 		str	r0, [fp, #-16]
 11394 00ec 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 289


 11395 00f0 2338A0E1 		lsr	r3, r3, #16
 11396 00f4 7330EFE6 		uxtb	r3, r3
 11397 00f8 020053E3 		cmp	r3, #2
 11398 00fc 0100001A 		bne	.L763
 11399              		.loc 1 4990 5 discriminator 10
 11400 0100 0830E0E3 		mvn	r3, #8
 11401 0104 B80000EA 		b	.L759
 11402              	.L763:
 11403              		.loc 1 4990 5 discriminator 11
 11404 0108 10301BE5 		ldr	r3, [fp, #-16]
 11405 010c 233CA0E1 		lsr	r3, r3, #24
 11406 0110 030053E3 		cmp	r3, #3
 11407 0114 0100000A 		beq	.L764
 11408              		.loc 1 4990 5 discriminator 12
 11409 0118 0130E0E3 		mvn	r3, #1
 11410 011c B20000EA 		b	.L759
 11411              	.L764:
 11412              		.loc 1 4990 5 discriminator 13
 11413 0120 1C301BE5 		ldr	r3, [fp, #-28]
 11414 0124 7F2003E2 		and	r2, r3, #127
 11415 0128 08301BE5 		ldr	r3, [fp, #-8]
 11416 012c 143093E5 		ldr	r3, [r3, #20]
 11417 0130 030052E1 		cmp	r2, r3
 11418 0134 0100003A 		bcc	.L765
 11419              		.loc 1 4990 5 discriminator 14
 11420 0138 0230E0E3 		mvn	r3, #2
 11421 013c AA0000EA 		b	.L759
 11422              	.L765:
 11423              		.loc 1 4990 5 discriminator 15
 11424 0140 1C301BE5 		ldr	r3, [fp, #-28]
 11425 0144 7F3003E2 		and	r3, r3, #127
 11426 0148 8322A0E1 		lsl	r2, r3, #5
 11427 014c 08301BE5 		ldr	r3, [fp, #-8]
 11428 0150 0C3093E5 		ldr	r3, [r3, #12]
 11429 0154 033082E0 		add	r3, r2, r3
 11430 0158 08300BE5 		str	r3, [fp, #-8]
 11431 015c 08301BE5 		ldr	r3, [fp, #-8]
 11432 0160 0300A0E1 		mov	r0, r3
 11433 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11434 0168 10000BE5 		str	r0, [fp, #-16]
 11435 016c 10301BE5 		ldr	r3, [fp, #-16]
 11436 0170 2338A0E1 		lsr	r3, r3, #16
 11437 0174 7330EFE6 		uxtb	r3, r3
 11438 0178 020053E3 		cmp	r3, #2
 11439 017c 0100001A 		bne	.L766
 11440              		.loc 1 4990 5 discriminator 16
 11441 0180 0830E0E3 		mvn	r3, #8
 11442 0184 980000EA 		b	.L759
 11443              	.L766:
 11444              		.loc 1 4990 5 discriminator 17
 11445 0188 10301BE5 		ldr	r3, [fp, #-16]
 11446 018c 233CA0E1 		lsr	r3, r3, #24
 11447 0190 050053E3 		cmp	r3, #5
 11448 0194 0100000A 		beq	.L761
 11449              		.loc 1 4990 5 discriminator 18
 11450 0198 0130E0E3 		mvn	r3, #1
 11451 019c 920000EA 		b	.L759
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 290


 11452              	.L761:
4991:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4992:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4993:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 11453              		.loc 1 4993 5 is_stmt 1
 11454 01a0 20301BE5 		ldr	r3, [fp, #-32]
 11455 01a4 803003E2 		and	r3, r3, #128
 11456 01a8 000053E3 		cmp	r3, #0
 11457 01ac 1D00001A 		bne	.L767
 11458              		.loc 1 4993 5 is_stmt 0 discriminator 1
 11459 01b0 18301BE5 		ldr	r3, [fp, #-24]
 11460 01b4 142093E5 		ldr	r2, [r3, #20]
 11461 01b8 20301BE5 		ldr	r3, [fp, #-32]
 11462 01bc 030052E1 		cmp	r2, r3
 11463 01c0 0100008A 		bhi	.L768
 11464              		.loc 1 4993 5 discriminator 3
 11465 01c4 0230E0E3 		mvn	r3, #2
 11466 01c8 870000EA 		b	.L759
 11467              	.L768:
 11468              		.loc 1 4993 5 discriminator 4
 11469 01cc 20301BE5 		ldr	r3, [fp, #-32]
 11470 01d0 8322A0E1 		lsl	r2, r3, #5
 11471 01d4 18301BE5 		ldr	r3, [fp, #-24]
 11472 01d8 0C3093E5 		ldr	r3, [r3, #12]
 11473 01dc 033082E0 		add	r3, r2, r3
 11474 01e0 0C300BE5 		str	r3, [fp, #-12]
 11475 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 11476 01e8 0300A0E1 		mov	r0, r3
 11477 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11478 01f0 10000BE5 		str	r0, [fp, #-16]
 11479 01f4 10301BE5 		ldr	r3, [fp, #-16]
 11480 01f8 2338A0E1 		lsr	r3, r3, #16
 11481 01fc 7330EFE6 		uxtb	r3, r3
 11482 0200 020053E3 		cmp	r3, #2
 11483 0204 0100001A 		bne	.L769
 11484              		.loc 1 4993 5 discriminator 5
 11485 0208 0830E0E3 		mvn	r3, #8
 11486 020c 760000EA 		b	.L759
 11487              	.L769:
 11488              		.loc 1 4993 5 discriminator 6
 11489 0210 10301BE5 		ldr	r3, [fp, #-16]
 11490 0214 233CA0E1 		lsr	r3, r3, #24
 11491 0218 040053E3 		cmp	r3, #4
 11492 021c 4100000A 		beq	.L770
 11493              		.loc 1 4993 5 discriminator 7
 11494 0220 0130E0E3 		mvn	r3, #1
 11495 0224 700000EA 		b	.L759
 11496              	.L767:
 11497              		.loc 1 4993 5 discriminator 2
 11498 0228 20301BE5 		ldr	r3, [fp, #-32]
 11499 022c 2324A0E1 		lsr	r2, r3, #8
 11500 0230 18301BE5 		ldr	r3, [fp, #-24]
 11501 0234 143093E5 		ldr	r3, [r3, #20]
 11502 0238 030052E1 		cmp	r2, r3
 11503 023c 0100003A 		bcc	.L771
 11504              		.loc 1 4993 5 discriminator 8
 11505 0240 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 291


 11506 0244 680000EA 		b	.L759
 11507              	.L771:
 11508              		.loc 1 4993 5 discriminator 9
 11509 0248 20301BE5 		ldr	r3, [fp, #-32]
 11510 024c 2334A0E1 		lsr	r3, r3, #8
 11511 0250 8322A0E1 		lsl	r2, r3, #5
 11512 0254 18301BE5 		ldr	r3, [fp, #-24]
 11513 0258 0C3093E5 		ldr	r3, [r3, #12]
 11514 025c 033082E0 		add	r3, r2, r3
 11515 0260 0C300BE5 		str	r3, [fp, #-12]
 11516 0264 0C301BE5 		ldr	r3, [fp, #-12]
 11517 0268 0300A0E1 		mov	r0, r3
 11518 026c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11519 0270 10000BE5 		str	r0, [fp, #-16]
 11520 0274 10301BE5 		ldr	r3, [fp, #-16]
 11521 0278 2338A0E1 		lsr	r3, r3, #16
 11522 027c 7330EFE6 		uxtb	r3, r3
 11523 0280 020053E3 		cmp	r3, #2
 11524 0284 0100001A 		bne	.L772
 11525              		.loc 1 4993 5 discriminator 10
 11526 0288 0830E0E3 		mvn	r3, #8
 11527 028c 560000EA 		b	.L759
 11528              	.L772:
 11529              		.loc 1 4993 5 discriminator 11
 11530 0290 10301BE5 		ldr	r3, [fp, #-16]
 11531 0294 233CA0E1 		lsr	r3, r3, #24
 11532 0298 030053E3 		cmp	r3, #3
 11533 029c 0100000A 		beq	.L773
 11534              		.loc 1 4993 5 discriminator 12
 11535 02a0 0130E0E3 		mvn	r3, #1
 11536 02a4 500000EA 		b	.L759
 11537              	.L773:
 11538              		.loc 1 4993 5 discriminator 13
 11539 02a8 20301BE5 		ldr	r3, [fp, #-32]
 11540 02ac 7F2003E2 		and	r2, r3, #127
 11541 02b0 0C301BE5 		ldr	r3, [fp, #-12]
 11542 02b4 143093E5 		ldr	r3, [r3, #20]
 11543 02b8 030052E1 		cmp	r2, r3
 11544 02bc 0100003A 		bcc	.L774
 11545              		.loc 1 4993 5 discriminator 14
 11546 02c0 0230E0E3 		mvn	r3, #2
 11547 02c4 480000EA 		b	.L759
 11548              	.L774:
 11549              		.loc 1 4993 5 discriminator 15
 11550 02c8 20301BE5 		ldr	r3, [fp, #-32]
 11551 02cc 7F3003E2 		and	r3, r3, #127
 11552 02d0 8322A0E1 		lsl	r2, r3, #5
 11553 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 11554 02d8 0C3093E5 		ldr	r3, [r3, #12]
 11555 02dc 033082E0 		add	r3, r2, r3
 11556 02e0 0C300BE5 		str	r3, [fp, #-12]
 11557 02e4 0C301BE5 		ldr	r3, [fp, #-12]
 11558 02e8 0300A0E1 		mov	r0, r3
 11559 02ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11560 02f0 10000BE5 		str	r0, [fp, #-16]
 11561 02f4 10301BE5 		ldr	r3, [fp, #-16]
 11562 02f8 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 292


 11563 02fc 7330EFE6 		uxtb	r3, r3
 11564 0300 020053E3 		cmp	r3, #2
 11565 0304 0100001A 		bne	.L775
 11566              		.loc 1 4993 5 discriminator 16
 11567 0308 0830E0E3 		mvn	r3, #8
 11568 030c 360000EA 		b	.L759
 11569              	.L775:
 11570              		.loc 1 4993 5 discriminator 17
 11571 0310 10301BE5 		ldr	r3, [fp, #-16]
 11572 0314 233CA0E1 		lsr	r3, r3, #24
 11573 0318 040053E3 		cmp	r3, #4
 11574 031c 0100000A 		beq	.L770
 11575              		.loc 1 4993 5 discriminator 18
 11576 0320 0130E0E3 		mvn	r3, #1
 11577 0324 300000EA 		b	.L759
 11578              	.L770:
4994:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_New,Type_Stat);
4995:../../Source/Kernel/rme_kernel.c **** #endif
4996:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4997:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_PGT);
 11579              		.loc 1 4997 5 is_stmt 1
 11580 0328 08301BE5 		ldr	r3, [fp, #-8]
 11581 032c 083093E5 		ldr	r3, [r3, #8]
 11582 0330 083003E2 		and	r3, r3, #8
 11583 0334 000053E3 		cmp	r3, #0
 11584 0338 0100001A 		bne	.L776
 11585              		.loc 1 4997 5 is_stmt 0 discriminator 1
 11586 033c 0630E0E3 		mvn	r3, #6
 11587 0340 290000EA 		b	.L759
 11588              	.L776:
4998:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4999:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_New,RME_PGT_FLAG_PRC_PGT);
 11589              		.loc 1 4999 5 is_stmt 1
 11590 0344 0C301BE5 		ldr	r3, [fp, #-12]
 11591 0348 083093E5 		ldr	r3, [r3, #8]
 11592 034c 803003E2 		and	r3, r3, #128
 11593 0350 000053E3 		cmp	r3, #0
 11594 0354 0100001A 		bne	.L777
 11595              		.loc 1 4999 5 is_stmt 0 discriminator 1
 11596 0358 0630E0E3 		mvn	r3, #6
 11597 035c 220000EA 		b	.L759
 11598              	.L777:
5000:../../Source/Kernel/rme_kernel.c **** #endif
5001:../../Source/Kernel/rme_kernel.c ****     
5002:../../Source/Kernel/rme_kernel.c ****     Pgt_Old=Prc_Op->Pgt;
 11599              		.loc 1 5002 12 is_stmt 1
 11600 0360 08301BE5 		ldr	r3, [fp, #-8]
 11601 0364 183093E5 		ldr	r3, [r3, #24]
 11602 0368 14300BE5 		str	r3, [fp, #-20]
5003:../../Source/Kernel/rme_kernel.c ****     
5004:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5005:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
5006:../../Source/Kernel/rme_kernel.c ****     Pgt_New=RME_CAP_CONV_ROOT(Pgt_New,struct RME_Cap_Pgt*);
 11603              		.loc 1 5006 13
 11604 036c 0C301BE5 		ldr	r3, [fp, #-12]
 11605 0370 003093E5 		ldr	r3, [r3]
 11606 0374 7330FFE6 		uxth	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 293


 11607 0378 000053E3 		cmp	r3, #0
 11608 037c 0200000A 		beq	.L778
 11609              		.loc 1 5006 13 is_stmt 0 discriminator 1
 11610 0380 0C301BE5 		ldr	r3, [fp, #-12]
 11611 0384 043093E5 		ldr	r3, [r3, #4]
 11612 0388 000000EA 		b	.L779
 11613              	.L778:
 11614              		.loc 1 5006 13 discriminator 2
 11615 038c 0C301BE5 		ldr	r3, [fp, #-12]
 11616              	.L779:
 11617              		.loc 1 5006 12 is_stmt 1 discriminator 4
 11618 0390 0C300BE5 		str	r3, [fp, #-12]
5007:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5008:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
 11619              		.loc 1 5008 8 discriminator 4
 11620 0394 08301BE5 		ldr	r3, [fp, #-8]
 11621 0398 183083E2 		add	r3, r3, #24
 11622 039c 14101BE5 		ldr	r1, [fp, #-20]
 11623 03a0 0C201BE5 		ldr	r2, [fp, #-12]
 11624 03a4 0300A0E1 		mov	r0, r3
 11625 03a8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11626 03ac 0030A0E1 		mov	r3, r0
 11627              		.loc 1 5008 7 discriminator 4
 11628 03b0 000053E3 		cmp	r3, #0
 11629 03b4 0100001A 		bne	.L780
5009:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5010:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_New)==RME_CASFAIL)
5011:../../Source/Kernel/rme_kernel.c **** #else
5012:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5013:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
5014:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5015:../../Source/Kernel/rme_kernel.c ****                      Raw_Pgt)==RME_CASFAIL)
5016:../../Source/Kernel/rme_kernel.c **** #endif
5017:../../Source/Kernel/rme_kernel.c ****     {
5018:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5019:../../Source/Kernel/rme_kernel.c ****         
5020:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 11630              		.loc 1 5020 16
 11631 03b8 C930E0E3 		mvn	r3, #201
 11632 03bc 0A0000EA 		b	.L759
 11633              	.L780:
5021:../../Source/Kernel/rme_kernel.c ****     }
5022:../../Source/Kernel/rme_kernel.c ****     else
5023:../../Source/Kernel/rme_kernel.c ****     {
5024:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5025:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5026:../../Source/Kernel/rme_kernel.c ****     }
5027:../../Source/Kernel/rme_kernel.c ****     
5028:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
5029:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5030:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_New->Head.Root_Ref),1);
 11634              		.loc 1 5030 5
 11635 03c0 0C301BE5 		ldr	r3, [fp, #-12]
 11636 03c4 043083E2 		add	r3, r3, #4
 11637 03c8 0110A0E3 		mov	r1, #1
 11638 03cc 0300A0E1 		mov	r0, r3
 11639 03d0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 294


5031:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Old->Head.Root_Ref),-1);
 11640              		.loc 1 5031 5
 11641 03d4 14301BE5 		ldr	r3, [fp, #-20]
 11642 03d8 043083E2 		add	r3, r3, #4
 11643 03dc 0010E0E3 		mvn	r1, #0
 11644 03e0 0300A0E1 		mov	r0, r3
 11645 03e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5032:../../Source/Kernel/rme_kernel.c **** #endif
5033:../../Source/Kernel/rme_kernel.c ****     
5034:../../Source/Kernel/rme_kernel.c ****     return 0;
 11646              		.loc 1 5034 12
 11647 03e8 0030A0E3 		mov	r3, #0
 11648              	.L759:
5035:../../Source/Kernel/rme_kernel.c **** }
 11649              		.loc 1 5035 1
 11650 03ec 0300A0E1 		mov	r0, r3
 11651 03f0 04D04BE2 		sub	sp, fp, #4
 11652              		.cfi_def_cfa 13, 8
 11653              		@ sp needed
 11654 03f4 0088BDE8 		pop	{fp, pc}
 11655              		.cfi_endproc
 11656              	.LFE54:
 11658              		.section	.text._RME_Thd_Boot_Crt,"ax",%progbits
 11659              		.align	2
 11660              		.global	_RME_Thd_Boot_Crt
 11661              		.syntax unified
 11662              		.arm
 11664              	_RME_Thd_Boot_Crt:
 11665              	.LFB55:
5036:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Pgt *************************************************/
5037:../../Source/Kernel/rme_kernel.c **** 
5038:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Boot_Crt *************************************************
5039:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time thread. The boot-time thread is per-core, and
5040:../../Source/Kernel/rme_kernel.c ****               will have infinite budget, and has no parent. This function
5041:../../Source/Kernel/rme_kernel.c ****               allows creation of a thread on behalf of other processors,
5042:../../Source/Kernel/rme_kernel.c ****               by passing a CPUID parameter. Therefore, it is recommended to
5043:../../Source/Kernel/rme_kernel.c ****               create the threads sequentially during boot-up; if you create
5044:../../Source/Kernel/rme_kernel.c ****               threads in parallel, be sure to only create the thread on your
5045:../../Source/Kernel/rme_kernel.c ****               local core.
5046:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and 
5047:../../Source/Kernel/rme_kernel.c ****               the initial threads' maximum priority will be set by the system.
5048:../../Source/Kernel/rme_kernel.c ****               This thread is a basic thread and hence always have attribute 0.
5049:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5050:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5051:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5052:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5053:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5054:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5055:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5056:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5057:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the thread.
5058:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level of the thread.
5059:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure of the
5060:../../Source/Kernel/rme_kernel.c ****                                             CPU to bind the thread to.
5061:../../Source/Kernel/rme_kernel.c **** Output      : None.
5062:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5063:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 295


5064:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Thd_Boot_Crt(struct RME_Cap_Cpt* Cpt,
5065:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
5066:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Thd,
5067:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
5068:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
5069:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Prio,
5070:../../Source/Kernel/rme_kernel.c ****                             struct RME_CPU_Local* Local)
5071:../../Source/Kernel/rme_kernel.c **** {
 11666              		.loc 1 5071 1
 11667              		.cfi_startproc
 11668              		@ args = 12, pretend = 0, frame = 40
 11669              		@ frame_needed = 1, uses_anonymous_args = 0
 11670 0000 00482DE9 		push	{fp, lr}
 11671              		.cfi_def_cfa_offset 8
 11672              		.cfi_offset 11, -8
 11673              		.cfi_offset 14, -4
 11674 0004 04B08DE2 		add	fp, sp, #4
 11675              		.cfi_def_cfa 11, 4
 11676 0008 28D04DE2 		sub	sp, sp, #40
 11677 000c 20000BE5 		str	r0, [fp, #-32]
 11678 0010 24100BE5 		str	r1, [fp, #-36]
 11679 0014 28200BE5 		str	r2, [fp, #-40]
 11680 0018 2C300BE5 		str	r3, [fp, #-44]
5072:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5073:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5074:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5075:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5076:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5077:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5078:../../Source/Kernel/rme_kernel.c ****     
5079:../../Source/Kernel/rme_kernel.c ****     /* Check whether the priority level is allowed */
5080:../../Source/Kernel/rme_kernel.c ****     if(Prio>=RME_PREEMPT_PRIO_NUM)
 11681              		.loc 1 5080 7
 11682 001c 08309BE5 		ldr	r3, [fp, #8]
 11683 0020 1F0053E3 		cmp	r3, #31
 11684 0024 0100009A 		bls	.L782
5081:../../Source/Kernel/rme_kernel.c ****     {
5082:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5083:../../Source/Kernel/rme_kernel.c **** 
5084:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 11685              		.loc 1 5084 16
 11686 0028 CC30E0E3 		mvn	r3, #204
 11687 002c 520100EA 		b	.L783
 11688              	.L782:
5085:../../Source/Kernel/rme_kernel.c ****     }
5086:../../Source/Kernel/rme_kernel.c ****     else
5087:../../Source/Kernel/rme_kernel.c ****     {
5088:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5089:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5090:../../Source/Kernel/rme_kernel.c ****     }
5091:../../Source/Kernel/rme_kernel.c ****     
5092:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5093:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11689              		.loc 1 5093 5
 11690 0030 24301BE5 		ldr	r3, [fp, #-36]
 11691 0034 803003E2 		and	r3, r3, #128
 11692 0038 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 296


 11693 003c 1D00001A 		bne	.L784
 11694              		.loc 1 5093 5 is_stmt 0 discriminator 1
 11695 0040 20301BE5 		ldr	r3, [fp, #-32]
 11696 0044 142093E5 		ldr	r2, [r3, #20]
 11697 0048 24301BE5 		ldr	r3, [fp, #-36]
 11698 004c 030052E1 		cmp	r2, r3
 11699 0050 0100008A 		bhi	.L785
 11700              		.loc 1 5093 5 discriminator 3
 11701 0054 0230E0E3 		mvn	r3, #2
 11702 0058 470100EA 		b	.L783
 11703              	.L785:
 11704              		.loc 1 5093 5 discriminator 4
 11705 005c 24301BE5 		ldr	r3, [fp, #-36]
 11706 0060 8322A0E1 		lsl	r2, r3, #5
 11707 0064 20301BE5 		ldr	r3, [fp, #-32]
 11708 0068 0C3093E5 		ldr	r3, [r3, #12]
 11709 006c 033082E0 		add	r3, r2, r3
 11710 0070 08300BE5 		str	r3, [fp, #-8]
 11711 0074 08301BE5 		ldr	r3, [fp, #-8]
 11712 0078 0300A0E1 		mov	r0, r3
 11713 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11714 0080 10000BE5 		str	r0, [fp, #-16]
 11715 0084 10301BE5 		ldr	r3, [fp, #-16]
 11716 0088 2338A0E1 		lsr	r3, r3, #16
 11717 008c 7330EFE6 		uxtb	r3, r3
 11718 0090 020053E3 		cmp	r3, #2
 11719 0094 0100001A 		bne	.L786
 11720              		.loc 1 5093 5 discriminator 5
 11721 0098 0830E0E3 		mvn	r3, #8
 11722 009c 360100EA 		b	.L783
 11723              	.L786:
 11724              		.loc 1 5093 5 discriminator 6
 11725 00a0 10301BE5 		ldr	r3, [fp, #-16]
 11726 00a4 233CA0E1 		lsr	r3, r3, #24
 11727 00a8 030053E3 		cmp	r3, #3
 11728 00ac 4100000A 		beq	.L787
 11729              		.loc 1 5093 5 discriminator 7
 11730 00b0 0130E0E3 		mvn	r3, #1
 11731 00b4 300100EA 		b	.L783
 11732              	.L784:
 11733              		.loc 1 5093 5 discriminator 2
 11734 00b8 24301BE5 		ldr	r3, [fp, #-36]
 11735 00bc 2324A0E1 		lsr	r2, r3, #8
 11736 00c0 20301BE5 		ldr	r3, [fp, #-32]
 11737 00c4 143093E5 		ldr	r3, [r3, #20]
 11738 00c8 030052E1 		cmp	r2, r3
 11739 00cc 0100003A 		bcc	.L788
 11740              		.loc 1 5093 5 discriminator 8
 11741 00d0 0230E0E3 		mvn	r3, #2
 11742 00d4 280100EA 		b	.L783
 11743              	.L788:
 11744              		.loc 1 5093 5 discriminator 9
 11745 00d8 24301BE5 		ldr	r3, [fp, #-36]
 11746 00dc 2334A0E1 		lsr	r3, r3, #8
 11747 00e0 8322A0E1 		lsl	r2, r3, #5
 11748 00e4 20301BE5 		ldr	r3, [fp, #-32]
 11749 00e8 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 297


 11750 00ec 033082E0 		add	r3, r2, r3
 11751 00f0 08300BE5 		str	r3, [fp, #-8]
 11752 00f4 08301BE5 		ldr	r3, [fp, #-8]
 11753 00f8 0300A0E1 		mov	r0, r3
 11754 00fc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11755 0100 10000BE5 		str	r0, [fp, #-16]
 11756 0104 10301BE5 		ldr	r3, [fp, #-16]
 11757 0108 2338A0E1 		lsr	r3, r3, #16
 11758 010c 7330EFE6 		uxtb	r3, r3
 11759 0110 020053E3 		cmp	r3, #2
 11760 0114 0100001A 		bne	.L789
 11761              		.loc 1 5093 5 discriminator 10
 11762 0118 0830E0E3 		mvn	r3, #8
 11763 011c 160100EA 		b	.L783
 11764              	.L789:
 11765              		.loc 1 5093 5 discriminator 11
 11766 0120 10301BE5 		ldr	r3, [fp, #-16]
 11767 0124 233CA0E1 		lsr	r3, r3, #24
 11768 0128 030053E3 		cmp	r3, #3
 11769 012c 0100000A 		beq	.L790
 11770              		.loc 1 5093 5 discriminator 12
 11771 0130 0130E0E3 		mvn	r3, #1
 11772 0134 100100EA 		b	.L783
 11773              	.L790:
 11774              		.loc 1 5093 5 discriminator 13
 11775 0138 24301BE5 		ldr	r3, [fp, #-36]
 11776 013c 7F2003E2 		and	r2, r3, #127
 11777 0140 08301BE5 		ldr	r3, [fp, #-8]
 11778 0144 143093E5 		ldr	r3, [r3, #20]
 11779 0148 030052E1 		cmp	r2, r3
 11780 014c 0100003A 		bcc	.L791
 11781              		.loc 1 5093 5 discriminator 14
 11782 0150 0230E0E3 		mvn	r3, #2
 11783 0154 080100EA 		b	.L783
 11784              	.L791:
 11785              		.loc 1 5093 5 discriminator 15
 11786 0158 24301BE5 		ldr	r3, [fp, #-36]
 11787 015c 7F3003E2 		and	r3, r3, #127
 11788 0160 8322A0E1 		lsl	r2, r3, #5
 11789 0164 08301BE5 		ldr	r3, [fp, #-8]
 11790 0168 0C3093E5 		ldr	r3, [r3, #12]
 11791 016c 033082E0 		add	r3, r2, r3
 11792 0170 08300BE5 		str	r3, [fp, #-8]
 11793 0174 08301BE5 		ldr	r3, [fp, #-8]
 11794 0178 0300A0E1 		mov	r0, r3
 11795 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11796 0180 10000BE5 		str	r0, [fp, #-16]
 11797 0184 10301BE5 		ldr	r3, [fp, #-16]
 11798 0188 2338A0E1 		lsr	r3, r3, #16
 11799 018c 7330EFE6 		uxtb	r3, r3
 11800 0190 020053E3 		cmp	r3, #2
 11801 0194 0100001A 		bne	.L792
 11802              		.loc 1 5093 5 discriminator 16
 11803 0198 0830E0E3 		mvn	r3, #8
 11804 019c F60000EA 		b	.L783
 11805              	.L792:
 11806              		.loc 1 5093 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 298


 11807 01a0 10301BE5 		ldr	r3, [fp, #-16]
 11808 01a4 233CA0E1 		lsr	r3, r3, #24
 11809 01a8 030053E3 		cmp	r3, #3
 11810 01ac 0100000A 		beq	.L787
 11811              		.loc 1 5093 5 discriminator 18
 11812 01b0 0130E0E3 		mvn	r3, #1
 11813 01b4 F00000EA 		b	.L783
 11814              	.L787:
5094:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5095:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11815              		.loc 1 5095 5 is_stmt 1
 11816 01b8 2C301BE5 		ldr	r3, [fp, #-44]
 11817 01bc 803003E2 		and	r3, r3, #128
 11818 01c0 000053E3 		cmp	r3, #0
 11819 01c4 1D00001A 		bne	.L793
 11820              		.loc 1 5095 5 is_stmt 0 discriminator 1
 11821 01c8 20301BE5 		ldr	r3, [fp, #-32]
 11822 01cc 142093E5 		ldr	r2, [r3, #20]
 11823 01d0 2C301BE5 		ldr	r3, [fp, #-44]
 11824 01d4 030052E1 		cmp	r2, r3
 11825 01d8 0100008A 		bhi	.L794
 11826              		.loc 1 5095 5 discriminator 3
 11827 01dc 0230E0E3 		mvn	r3, #2
 11828 01e0 E50000EA 		b	.L783
 11829              	.L794:
 11830              		.loc 1 5095 5 discriminator 4
 11831 01e4 2C301BE5 		ldr	r3, [fp, #-44]
 11832 01e8 8322A0E1 		lsl	r2, r3, #5
 11833 01ec 20301BE5 		ldr	r3, [fp, #-32]
 11834 01f0 0C3093E5 		ldr	r3, [r3, #12]
 11835 01f4 033082E0 		add	r3, r2, r3
 11836 01f8 0C300BE5 		str	r3, [fp, #-12]
 11837 01fc 0C301BE5 		ldr	r3, [fp, #-12]
 11838 0200 0300A0E1 		mov	r0, r3
 11839 0204 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11840 0208 10000BE5 		str	r0, [fp, #-16]
 11841 020c 10301BE5 		ldr	r3, [fp, #-16]
 11842 0210 2338A0E1 		lsr	r3, r3, #16
 11843 0214 7330EFE6 		uxtb	r3, r3
 11844 0218 020053E3 		cmp	r3, #2
 11845 021c 0100001A 		bne	.L795
 11846              		.loc 1 5095 5 discriminator 5
 11847 0220 0830E0E3 		mvn	r3, #8
 11848 0224 D40000EA 		b	.L783
 11849              	.L795:
 11850              		.loc 1 5095 5 discriminator 6
 11851 0228 10301BE5 		ldr	r3, [fp, #-16]
 11852 022c 233CA0E1 		lsr	r3, r3, #24
 11853 0230 050053E3 		cmp	r3, #5
 11854 0234 4100000A 		beq	.L796
 11855              		.loc 1 5095 5 discriminator 7
 11856 0238 0130E0E3 		mvn	r3, #1
 11857 023c CE0000EA 		b	.L783
 11858              	.L793:
 11859              		.loc 1 5095 5 discriminator 2
 11860 0240 2C301BE5 		ldr	r3, [fp, #-44]
 11861 0244 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 299


 11862 0248 20301BE5 		ldr	r3, [fp, #-32]
 11863 024c 143093E5 		ldr	r3, [r3, #20]
 11864 0250 030052E1 		cmp	r2, r3
 11865 0254 0100003A 		bcc	.L797
 11866              		.loc 1 5095 5 discriminator 8
 11867 0258 0230E0E3 		mvn	r3, #2
 11868 025c C60000EA 		b	.L783
 11869              	.L797:
 11870              		.loc 1 5095 5 discriminator 9
 11871 0260 2C301BE5 		ldr	r3, [fp, #-44]
 11872 0264 2334A0E1 		lsr	r3, r3, #8
 11873 0268 8322A0E1 		lsl	r2, r3, #5
 11874 026c 20301BE5 		ldr	r3, [fp, #-32]
 11875 0270 0C3093E5 		ldr	r3, [r3, #12]
 11876 0274 033082E0 		add	r3, r2, r3
 11877 0278 0C300BE5 		str	r3, [fp, #-12]
 11878 027c 0C301BE5 		ldr	r3, [fp, #-12]
 11879 0280 0300A0E1 		mov	r0, r3
 11880 0284 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11881 0288 10000BE5 		str	r0, [fp, #-16]
 11882 028c 10301BE5 		ldr	r3, [fp, #-16]
 11883 0290 2338A0E1 		lsr	r3, r3, #16
 11884 0294 7330EFE6 		uxtb	r3, r3
 11885 0298 020053E3 		cmp	r3, #2
 11886 029c 0100001A 		bne	.L798
 11887              		.loc 1 5095 5 discriminator 10
 11888 02a0 0830E0E3 		mvn	r3, #8
 11889 02a4 B40000EA 		b	.L783
 11890              	.L798:
 11891              		.loc 1 5095 5 discriminator 11
 11892 02a8 10301BE5 		ldr	r3, [fp, #-16]
 11893 02ac 233CA0E1 		lsr	r3, r3, #24
 11894 02b0 030053E3 		cmp	r3, #3
 11895 02b4 0100000A 		beq	.L799
 11896              		.loc 1 5095 5 discriminator 12
 11897 02b8 0130E0E3 		mvn	r3, #1
 11898 02bc AE0000EA 		b	.L783
 11899              	.L799:
 11900              		.loc 1 5095 5 discriminator 13
 11901 02c0 2C301BE5 		ldr	r3, [fp, #-44]
 11902 02c4 7F2003E2 		and	r2, r3, #127
 11903 02c8 0C301BE5 		ldr	r3, [fp, #-12]
 11904 02cc 143093E5 		ldr	r3, [r3, #20]
 11905 02d0 030052E1 		cmp	r2, r3
 11906 02d4 0100003A 		bcc	.L800
 11907              		.loc 1 5095 5 discriminator 14
 11908 02d8 0230E0E3 		mvn	r3, #2
 11909 02dc A60000EA 		b	.L783
 11910              	.L800:
 11911              		.loc 1 5095 5 discriminator 15
 11912 02e0 2C301BE5 		ldr	r3, [fp, #-44]
 11913 02e4 7F3003E2 		and	r3, r3, #127
 11914 02e8 8322A0E1 		lsl	r2, r3, #5
 11915 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 11916 02f0 0C3093E5 		ldr	r3, [r3, #12]
 11917 02f4 033082E0 		add	r3, r2, r3
 11918 02f8 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 300


 11919 02fc 0C301BE5 		ldr	r3, [fp, #-12]
 11920 0300 0300A0E1 		mov	r0, r3
 11921 0304 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11922 0308 10000BE5 		str	r0, [fp, #-16]
 11923 030c 10301BE5 		ldr	r3, [fp, #-16]
 11924 0310 2338A0E1 		lsr	r3, r3, #16
 11925 0314 7330EFE6 		uxtb	r3, r3
 11926 0318 020053E3 		cmp	r3, #2
 11927 031c 0100001A 		bne	.L801
 11928              		.loc 1 5095 5 discriminator 16
 11929 0320 0830E0E3 		mvn	r3, #8
 11930 0324 940000EA 		b	.L783
 11931              	.L801:
 11932              		.loc 1 5095 5 discriminator 17
 11933 0328 10301BE5 		ldr	r3, [fp, #-16]
 11934 032c 233CA0E1 		lsr	r3, r3, #24
 11935 0330 050053E3 		cmp	r3, #5
 11936 0334 0100000A 		beq	.L796
 11937              		.loc 1 5095 5 discriminator 18
 11938 0338 0130E0E3 		mvn	r3, #1
 11939 033c 8E0000EA 		b	.L783
 11940              	.L796:
5096:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);   
5097:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5098:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 11941              		.loc 1 5098 5 is_stmt 1
 11942 0340 08301BE5 		ldr	r3, [fp, #-8]
 11943 0344 083093E5 		ldr	r3, [r3, #8]
 11944 0348 013003E2 		and	r3, r3, #1
 11945 034c 000053E3 		cmp	r3, #0
 11946 0350 0100001A 		bne	.L802
 11947              		.loc 1 5098 5 is_stmt 0 discriminator 1
 11948 0354 0630E0E3 		mvn	r3, #6
 11949 0358 870000EA 		b	.L783
 11950              	.L802:
5099:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 11951              		.loc 1 5099 5 is_stmt 1
 11952 035c 0C301BE5 		ldr	r3, [fp, #-12]
 11953 0360 083093E5 		ldr	r3, [r3, #8]
 11954 0364 023003E2 		and	r3, r3, #2
 11955 0368 000053E3 		cmp	r3, #0
 11956 036c 0100001A 		bne	.L803
 11957              		.loc 1 5099 5 is_stmt 0 discriminator 1
 11958 0370 0630E0E3 		mvn	r3, #6
 11959 0374 800000EA 		b	.L783
 11960              	.L803:
5100:../../Source/Kernel/rme_kernel.c ****     
5101:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5102:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 11961              		.loc 1 5102 5 is_stmt 1
 11962 0378 08301BE5 		ldr	r3, [fp, #-8]
 11963 037c 142093E5 		ldr	r2, [r3, #20]
 11964 0380 28301BE5 		ldr	r3, [fp, #-40]
 11965 0384 030052E1 		cmp	r2, r3
 11966 0388 0100008A 		bhi	.L804
 11967              		.loc 1 5102 5 is_stmt 0 discriminator 1
 11968 038c 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 301


 11969 0390 790000EA 		b	.L783
 11970              	.L804:
 11971              		.loc 1 5102 5 discriminator 2
 11972 0394 28301BE5 		ldr	r3, [fp, #-40]
 11973 0398 8322A0E1 		lsl	r2, r3, #5
 11974 039c 08301BE5 		ldr	r3, [fp, #-8]
 11975 03a0 0C3093E5 		ldr	r3, [r3, #12]
 11976 03a4 033082E0 		add	r3, r2, r3
 11977 03a8 14300BE5 		str	r3, [fp, #-20]
5103:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5104:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 11978              		.loc 1 5104 5 is_stmt 1 discriminator 2
 11979 03ac 14301BE5 		ldr	r3, [fp, #-20]
 11980 03b0 0128A0E3 		mov	r2, #65536
 11981 03b4 0010A0E3 		mov	r1, #0
 11982 03b8 0300A0E1 		mov	r0, r3
 11983 03bc FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11984 03c0 0030A0E1 		mov	r3, r0
 11985 03c4 000053E3 		cmp	r3, #0
 11986 03c8 0100001A 		bne	.L805
 11987              		.loc 1 5104 5 is_stmt 0 discriminator 1
 11988 03cc 0430E0E3 		mvn	r3, #4
 11989 03d0 690000EA 		b	.L783
 11990              	.L805:
 11991              		.loc 1 5104 5 discriminator 2
 11992 03d4 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 11993 03d8 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 11994 03dc 002093E5 		ldr	r2, [r3]
 11995 03e0 14301BE5 		ldr	r3, [fp, #-20]
 11996 03e4 102083E5 		str	r2, [r3, #16]
5105:../../Source/Kernel/rme_kernel.c ****      
5106:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5107:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_THD_SIZE(0U))!=0)
 11997              		.loc 1 5107 8 is_stmt 1 discriminator 2
 11998 03e8 9C10A0E3 		mov	r1, #156
 11999 03ec 04009BE5 		ldr	r0, [fp, #4]
 12000 03f0 FEFFFFEB 		bl	_RME_Kot_Mark
 12001 03f4 0030A0E1 		mov	r3, r0
 12002              		.loc 1 5107 7 discriminator 2
 12003 03f8 000053E3 		cmp	r3, #0
 12004 03fc 0500000A 		beq	.L806
5108:../../Source/Kernel/rme_kernel.c ****     {
5109:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5110:../../Source/Kernel/rme_kernel.c **** 
5111:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 12005              		.loc 1 5111 9
 12006 0400 14301BE5 		ldr	r3, [fp, #-20]
 12007 0404 0010A0E3 		mov	r1, #0
 12008 0408 0300A0E1 		mov	r0, r3
 12009 040c FEFFFFEB 		bl	__RME_A7A_Write_Release
5112:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 12010              		.loc 1 5112 16
 12011 0410 0330E0E3 		mvn	r3, #3
 12012 0414 580000EA 		b	.L783
 12013              	.L806:
5113:../../Source/Kernel/rme_kernel.c ****     }
5114:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 302


5115:../../Source/Kernel/rme_kernel.c ****     {
5116:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5117:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5118:../../Source/Kernel/rme_kernel.c ****     }
5119:../../Source/Kernel/rme_kernel.c **** 
5120:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5121:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 12014              		.loc 1 5121 11
 12015 0418 04309BE5 		ldr	r3, [fp, #4]
 12016 041c 18300BE5 		str	r3, [fp, #-24]
5122:../../Source/Kernel/rme_kernel.c ****     /* The TID of these threads are by default taken care of by the kernel */
5123:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 12017              		.loc 1 5123 22
 12018 0420 18301BE5 		ldr	r3, [fp, #-24]
 12019 0424 0020A0E3 		mov	r2, #0
 12020 0428 102083E5 		str	r2, [r3, #16]
5124:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=RME_THD_INIT_TIME;
 12021              		.loc 1 5124 24
 12022 042c 18301BE5 		ldr	r3, [fp, #-24]
 12023 0430 0221E0E3 		mvn	r2, #-2147483648
 12024 0434 182083E5 		str	r2, [r3, #24]
5125:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_READY;
 12025              		.loc 1 5125 24
 12026 0438 18301BE5 		ldr	r3, [fp, #-24]
 12027 043c 0020A0E3 		mov	r2, #0
 12028 0440 1C2083E5 		str	r2, [r3, #28]
5126:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 12029              		.loc 1 5126 14
 12030 0444 0C301BE5 		ldr	r3, [fp, #-12]
 12031 0448 003093E5 		ldr	r3, [r3]
 12032 044c 7330FFE6 		uxth	r3, r3
 12033 0450 000053E3 		cmp	r3, #0
 12034 0454 0200000A 		beq	.L807
 12035              		.loc 1 5126 14 is_stmt 0 discriminator 1
 12036 0458 0C301BE5 		ldr	r3, [fp, #-12]
 12037 045c 043093E5 		ldr	r3, [r3, #4]
 12038 0460 000000EA 		b	.L808
 12039              	.L807:
 12040              		.loc 1 5126 14 discriminator 2
 12041 0464 0C301BE5 		ldr	r3, [fp, #-12]
 12042              	.L808:
 12043              		.loc 1 5126 13 is_stmt 1 discriminator 4
 12044 0468 1C300BE5 		str	r3, [fp, #-28]
5127:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 12045              		.loc 1 5127 22 discriminator 4
 12046 046c 18301BE5 		ldr	r3, [fp, #-24]
 12047 0470 1C201BE5 		ldr	r2, [fp, #-28]
 12048 0474 2C2083E5 		str	r2, [r3, #44]
5128:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 12049              		.loc 1 5128 25 discriminator 4
 12050 0478 18301BE5 		ldr	r3, [fp, #-24]
 12051 047c 0020A0E3 		mov	r2, #0
 12052 0480 282083E5 		str	r2, [r3, #40]
5129:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 12053              		.loc 1 5129 23 discriminator 4
 12054 0484 18301BE5 		ldr	r3, [fp, #-24]
 12055 0488 08209BE5 		ldr	r2, [fp, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 303


 12056 048c 202083E5 		str	r2, [r3, #32]
5130:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=RME_PREEMPT_PRIO_NUM-1U;
 12057              		.loc 1 5130 27 discriminator 4
 12058 0490 18301BE5 		ldr	r3, [fp, #-24]
 12059 0494 1F20A0E3 		mov	r2, #31
 12060 0498 242083E5 		str	r2, [r3, #36]
5131:../../Source/Kernel/rme_kernel.c ****     /* Set scheduler reference to 1 so cannot be free */
5132:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=1U;
 12061              		.loc 1 5132 28 discriminator 4
 12062 049c 18301BE5 		ldr	r3, [fp, #-24]
 12063 04a0 0120A0E3 		mov	r2, #1
 12064 04a4 302083E5 		str	r2, [r3, #48]
5133:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 12065              		.loc 1 5133 28 discriminator 4
 12066 04a8 18301BE5 		ldr	r3, [fp, #-24]
 12067 04ac 0020A0E3 		mov	r2, #0
 12068 04b0 382083E5 		str	r2, [r3, #56]
5134:../../Source/Kernel/rme_kernel.c ****     /* Bind the thread to the current CPU */
5135:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=Local;
 12069              		.loc 1 5135 24 discriminator 4
 12070 04b4 18301BE5 		ldr	r3, [fp, #-24]
 12071 04b8 0C209BE5 		ldr	r2, [fp, #12]
 12072 04bc 142083E5 		str	r2, [r3, #20]
5136:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5137:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 12073              		.loc 1 5137 5 discriminator 4
 12074 04c0 18301BE5 		ldr	r3, [fp, #-24]
 12075 04c4 083083E2 		add	r3, r3, #8
 12076 04c8 0300A0E1 		mov	r0, r3
 12077 04cc FEFFFFEB 		bl	_RME_List_Crt
5138:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 12078              		.loc 1 5138 5 discriminator 4
 12079 04d0 18301BE5 		ldr	r3, [fp, #-24]
 12080 04d4 3C3083E2 		add	r3, r3, #60
 12081 04d8 0300A0E1 		mov	r0, r3
 12082 04dc FEFFFFEB 		bl	_RME_List_Crt
5139:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this will never be a hypervisor thread */
5140:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Hyp_Attr=0U;
 12083              		.loc 1 5140 25 discriminator 4
 12084 04e0 18301BE5 		ldr	r3, [fp, #-24]
 12085 04e4 0020A0E3 		mov	r2, #0
 12086 04e8 442083E5 		str	r2, [r3, #68]
5141:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 12087              		.loc 1 5141 48 discriminator 4
 12088 04ec 04309BE5 		ldr	r3, [fp, #4]
 12089 04f0 583083E2 		add	r3, r3, #88
 12090              		.loc 1 5141 21 discriminator 4
 12091 04f4 0320A0E1 		mov	r2, r3
 12092              		.loc 1 5141 20 discriminator 4
 12093 04f8 18301BE5 		ldr	r3, [fp, #-24]
 12094 04fc 482083E5 		str	r2, [r3, #72]
5142:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5143:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 12095              		.loc 1 5143 5 discriminator 4
 12096 0500 18301BE5 		ldr	r3, [fp, #-24]
 12097 0504 4C3083E2 		add	r3, r3, #76
 12098 0508 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 304


 12099 050c FEFFFFEB 		bl	_RME_List_Crt
5144:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 12100              		.loc 1 5144 29 discriminator 4
 12101 0510 18301BE5 		ldr	r3, [fp, #-24]
 12102 0514 0020A0E3 		mov	r2, #0
 12103 0518 542083E5 		str	r2, [r3, #84]
5145:../../Source/Kernel/rme_kernel.c ****     
5146:../../Source/Kernel/rme_kernel.c ****     /* Info init */
5147:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=1U;
 12104              		.loc 1 5147 27 discriminator 4
 12105 051c 14301BE5 		ldr	r3, [fp, #-20]
 12106 0520 0120A0E3 		mov	r2, #1
 12107 0524 042083E5 		str	r2, [r3, #4]
5148:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 12108              		.loc 1 5148 25 discriminator 4
 12109 0528 14301BE5 		ldr	r3, [fp, #-20]
 12110 052c 04209BE5 		ldr	r2, [fp, #4]
 12111 0530 0C2083E5 		str	r2, [r3, #12]
5149:../../Source/Kernel/rme_kernel.c ****     /* This can only be a parent, and not a child, and cannot be freed. Additionally,
5150:../../Source/Kernel/rme_kernel.c ****      * this should not be blocked on any endpoint. Any attempt to block this thread will fail.
5151:../../Source/Kernel/rme_kernel.c ****      * Setting execution information for this is also prohibited. */
5152:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_SCHED_PRIO|RME_THD_FLAG_SCHED_PARENT|
 12112              		.loc 1 5152 23 discriminator 4
 12113 0534 14301BE5 		ldr	r3, [fp, #-20]
 12114 0538 7B2FA0E3 		mov	r2, #492
 12115 053c 082083E5 		str	r2, [r3, #8]
5153:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_XFER_DST|RME_THD_FLAG_XFER_SRC|
5154:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_SCHED_RCV|RME_THD_FLAG_SWT;
5155:../../Source/Kernel/rme_kernel.c **** 
5156:../../Source/Kernel/rme_kernel.c ****     /* Referece process */
5157:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 12116              		.loc 1 5157 5 discriminator 4
 12117 0540 1C301BE5 		ldr	r3, [fp, #-28]
 12118 0544 043083E2 		add	r3, r3, #4
 12119 0548 0110A0E3 		mov	r1, #1
 12120 054c 0300A0E1 		mov	r0, r3
 12121 0550 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5158:../../Source/Kernel/rme_kernel.c ****     
5159:../../Source/Kernel/rme_kernel.c ****     /* Insert this into the runqueue, and set current thread to it */
5160:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Ins(Thread);
 12122              		.loc 1 5160 5 discriminator 4
 12123 0554 18001BE5 		ldr	r0, [fp, #-24]
 12124 0558 FEFFFFEB 		bl	_RME_Run_Ins
5161:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thread;
 12125              		.loc 1 5161 19 discriminator 4
 12126 055c 0C309BE5 		ldr	r3, [fp, #12]
 12127 0560 18201BE5 		ldr	r2, [fp, #-24]
 12128 0564 042083E5 		str	r2, [r3, #4]
5162:../../Source/Kernel/rme_kernel.c **** 
5163:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5164:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 12129              		.loc 1 5164 5 discriminator 4
 12130 0568 14301BE5 		ldr	r3, [fp, #-20]
 12131 056c 0614A0E3 		mov	r1, #100663296
 12132 0570 0300A0E1 		mov	r0, r3
 12133 0574 FEFFFFEB 		bl	__RME_A7A_Write_Release
5165:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 305


5166:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5167:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5168:../../Source/Kernel/rme_kernel.c **** 
5169:../../Source/Kernel/rme_kernel.c ****     return 0;
 12134              		.loc 1 5169 12 discriminator 4
 12135 0578 0030A0E3 		mov	r3, #0
 12136              	.L783:
5170:../../Source/Kernel/rme_kernel.c **** }
 12137              		.loc 1 5170 1
 12138 057c 0300A0E1 		mov	r0, r3
 12139 0580 04D04BE2 		sub	sp, fp, #4
 12140              		.cfi_def_cfa 13, 8
 12141              		@ sp needed
 12142 0584 0088BDE8 		pop	{fp, pc}
 12143              		.cfi_endproc
 12144              	.LFE55:
 12146              		.section	.text._RME_Thd_Crt,"ax",%progbits
 12147              		.align	2
 12148              		.syntax unified
 12149              		.arm
 12151              	_RME_Thd_Crt:
 12152              	.LFB56:
5171:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Boot_Crt ********************************************/
5172:../../Source/Kernel/rme_kernel.c **** 
5173:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Crt ******************************************************
5174:../../Source/Kernel/rme_kernel.c **** Description : Create a thread. A thread is the minimal kernel-level execution
5175:../../Source/Kernel/rme_kernel.c ****               unit.
5176:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5177:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5178:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5179:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
5180:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5181:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5182:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5183:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5184:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5185:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5186:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio_Max - The maximum priority allowed for this
5187:../../Source/Kernel/rme_kernel.c ****                                    thread. Once set, this cannot be changed.
5188:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
5189:../../Source/Kernel/rme_kernel.c ****                                 thread kernel object.
5190:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Attr - The context attributes.
5191:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Hyp - Whether this is a hypervisor thread.
5192:../../Source/Kernel/rme_kernel.c **** Output      : None.
5193:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5194:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5195:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Crt(struct RME_Cap_Cpt* Cpt,
5196:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5197:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
5198:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
5199:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5200:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Prio_Max,
5201:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
5202:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Attr,
5203:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Hyp)
5204:../../Source/Kernel/rme_kernel.c **** {
 12153              		.loc 1 5204 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 306


 12154              		.cfi_startproc
 12155              		@ args = 20, pretend = 0, frame = 56
 12156              		@ frame_needed = 1, uses_anonymous_args = 0
 12157 0000 00482DE9 		push	{fp, lr}
 12158              		.cfi_def_cfa_offset 8
 12159              		.cfi_offset 11, -8
 12160              		.cfi_offset 14, -4
 12161 0004 04B08DE2 		add	fp, sp, #4
 12162              		.cfi_def_cfa 11, 4
 12163 0008 38D04DE2 		sub	sp, sp, #56
 12164 000c 30000BE5 		str	r0, [fp, #-48]
 12165 0010 34100BE5 		str	r1, [fp, #-52]
 12166 0014 38200BE5 		str	r2, [fp, #-56]
 12167 0018 3C300BE5 		str	r3, [fp, #-60]
5205:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5206:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
5208:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5209:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5210:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5211:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5212:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
5213:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
5214:../../Source/Kernel/rme_kernel.c ****     
5215:../../Source/Kernel/rme_kernel.c ****     /* See if the maximum priority relationship is correct - a thread
5216:../../Source/Kernel/rme_kernel.c ****      * can never create a thread with higher maximum priority */
5217:../../Source/Kernel/rme_kernel.c ****     if((RME_CPU_LOCAL()->Thd_Cur)->Sched.Prio_Max<Prio_Max)
 12168              		.loc 1 5217 24
 12169 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 12170 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 12171 0024 043093E5 		ldr	r3, [r3, #4]
 12172              		.loc 1 5217 41
 12173 0028 243093E5 		ldr	r3, [r3, #36]
 12174              		.loc 1 5217 7
 12175 002c 08209BE5 		ldr	r2, [fp, #8]
 12176 0030 030052E1 		cmp	r2, r3
 12177 0034 0100009A 		bls	.L810
5218:../../Source/Kernel/rme_kernel.c ****     {
5219:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5220:../../Source/Kernel/rme_kernel.c **** 
5221:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12178              		.loc 1 5221 16
 12179 0038 CC30E0E3 		mvn	r3, #204
 12180 003c EA0100EA 		b	.L811
 12181              	.L810:
5222:../../Source/Kernel/rme_kernel.c ****     }
5223:../../Source/Kernel/rme_kernel.c ****     else
5224:../../Source/Kernel/rme_kernel.c ****     {
5225:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5226:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5227:../../Source/Kernel/rme_kernel.c ****     }
5228:../../Source/Kernel/rme_kernel.c **** 
5229:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5230:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12182              		.loc 1 5230 5
 12183 0040 34301BE5 		ldr	r3, [fp, #-52]
 12184 0044 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 307


 12185 0048 000053E3 		cmp	r3, #0
 12186 004c 1D00001A 		bne	.L812
 12187              		.loc 1 5230 5 is_stmt 0 discriminator 1
 12188 0050 30301BE5 		ldr	r3, [fp, #-48]
 12189 0054 142093E5 		ldr	r2, [r3, #20]
 12190 0058 34301BE5 		ldr	r3, [fp, #-52]
 12191 005c 030052E1 		cmp	r2, r3
 12192 0060 0100008A 		bhi	.L813
 12193              		.loc 1 5230 5 discriminator 3
 12194 0064 0230E0E3 		mvn	r3, #2
 12195 0068 DF0100EA 		b	.L811
 12196              	.L813:
 12197              		.loc 1 5230 5 discriminator 4
 12198 006c 34301BE5 		ldr	r3, [fp, #-52]
 12199 0070 8322A0E1 		lsl	r2, r3, #5
 12200 0074 30301BE5 		ldr	r3, [fp, #-48]
 12201 0078 0C3093E5 		ldr	r3, [r3, #12]
 12202 007c 033082E0 		add	r3, r2, r3
 12203 0080 08300BE5 		str	r3, [fp, #-8]
 12204 0084 08301BE5 		ldr	r3, [fp, #-8]
 12205 0088 0300A0E1 		mov	r0, r3
 12206 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12207 0090 18000BE5 		str	r0, [fp, #-24]
 12208 0094 18301BE5 		ldr	r3, [fp, #-24]
 12209 0098 2338A0E1 		lsr	r3, r3, #16
 12210 009c 7330EFE6 		uxtb	r3, r3
 12211 00a0 020053E3 		cmp	r3, #2
 12212 00a4 0100001A 		bne	.L814
 12213              		.loc 1 5230 5 discriminator 5
 12214 00a8 0830E0E3 		mvn	r3, #8
 12215 00ac CE0100EA 		b	.L811
 12216              	.L814:
 12217              		.loc 1 5230 5 discriminator 6
 12218 00b0 18301BE5 		ldr	r3, [fp, #-24]
 12219 00b4 233CA0E1 		lsr	r3, r3, #24
 12220 00b8 030053E3 		cmp	r3, #3
 12221 00bc 4100000A 		beq	.L815
 12222              		.loc 1 5230 5 discriminator 7
 12223 00c0 0130E0E3 		mvn	r3, #1
 12224 00c4 C80100EA 		b	.L811
 12225              	.L812:
 12226              		.loc 1 5230 5 discriminator 2
 12227 00c8 34301BE5 		ldr	r3, [fp, #-52]
 12228 00cc 2324A0E1 		lsr	r2, r3, #8
 12229 00d0 30301BE5 		ldr	r3, [fp, #-48]
 12230 00d4 143093E5 		ldr	r3, [r3, #20]
 12231 00d8 030052E1 		cmp	r2, r3
 12232 00dc 0100003A 		bcc	.L816
 12233              		.loc 1 5230 5 discriminator 8
 12234 00e0 0230E0E3 		mvn	r3, #2
 12235 00e4 C00100EA 		b	.L811
 12236              	.L816:
 12237              		.loc 1 5230 5 discriminator 9
 12238 00e8 34301BE5 		ldr	r3, [fp, #-52]
 12239 00ec 2334A0E1 		lsr	r3, r3, #8
 12240 00f0 8322A0E1 		lsl	r2, r3, #5
 12241 00f4 30301BE5 		ldr	r3, [fp, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 308


 12242 00f8 0C3093E5 		ldr	r3, [r3, #12]
 12243 00fc 033082E0 		add	r3, r2, r3
 12244 0100 08300BE5 		str	r3, [fp, #-8]
 12245 0104 08301BE5 		ldr	r3, [fp, #-8]
 12246 0108 0300A0E1 		mov	r0, r3
 12247 010c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12248 0110 18000BE5 		str	r0, [fp, #-24]
 12249 0114 18301BE5 		ldr	r3, [fp, #-24]
 12250 0118 2338A0E1 		lsr	r3, r3, #16
 12251 011c 7330EFE6 		uxtb	r3, r3
 12252 0120 020053E3 		cmp	r3, #2
 12253 0124 0100001A 		bne	.L817
 12254              		.loc 1 5230 5 discriminator 10
 12255 0128 0830E0E3 		mvn	r3, #8
 12256 012c AE0100EA 		b	.L811
 12257              	.L817:
 12258              		.loc 1 5230 5 discriminator 11
 12259 0130 18301BE5 		ldr	r3, [fp, #-24]
 12260 0134 233CA0E1 		lsr	r3, r3, #24
 12261 0138 030053E3 		cmp	r3, #3
 12262 013c 0100000A 		beq	.L818
 12263              		.loc 1 5230 5 discriminator 12
 12264 0140 0130E0E3 		mvn	r3, #1
 12265 0144 A80100EA 		b	.L811
 12266              	.L818:
 12267              		.loc 1 5230 5 discriminator 13
 12268 0148 34301BE5 		ldr	r3, [fp, #-52]
 12269 014c 7F2003E2 		and	r2, r3, #127
 12270 0150 08301BE5 		ldr	r3, [fp, #-8]
 12271 0154 143093E5 		ldr	r3, [r3, #20]
 12272 0158 030052E1 		cmp	r2, r3
 12273 015c 0100003A 		bcc	.L819
 12274              		.loc 1 5230 5 discriminator 14
 12275 0160 0230E0E3 		mvn	r3, #2
 12276 0164 A00100EA 		b	.L811
 12277              	.L819:
 12278              		.loc 1 5230 5 discriminator 15
 12279 0168 34301BE5 		ldr	r3, [fp, #-52]
 12280 016c 7F3003E2 		and	r3, r3, #127
 12281 0170 8322A0E1 		lsl	r2, r3, #5
 12282 0174 08301BE5 		ldr	r3, [fp, #-8]
 12283 0178 0C3093E5 		ldr	r3, [r3, #12]
 12284 017c 033082E0 		add	r3, r2, r3
 12285 0180 08300BE5 		str	r3, [fp, #-8]
 12286 0184 08301BE5 		ldr	r3, [fp, #-8]
 12287 0188 0300A0E1 		mov	r0, r3
 12288 018c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12289 0190 18000BE5 		str	r0, [fp, #-24]
 12290 0194 18301BE5 		ldr	r3, [fp, #-24]
 12291 0198 2338A0E1 		lsr	r3, r3, #16
 12292 019c 7330EFE6 		uxtb	r3, r3
 12293 01a0 020053E3 		cmp	r3, #2
 12294 01a4 0100001A 		bne	.L820
 12295              		.loc 1 5230 5 discriminator 16
 12296 01a8 0830E0E3 		mvn	r3, #8
 12297 01ac 8E0100EA 		b	.L811
 12298              	.L820:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 309


 12299              		.loc 1 5230 5 discriminator 17
 12300 01b0 18301BE5 		ldr	r3, [fp, #-24]
 12301 01b4 233CA0E1 		lsr	r3, r3, #24
 12302 01b8 030053E3 		cmp	r3, #3
 12303 01bc 0100000A 		beq	.L815
 12304              		.loc 1 5230 5 discriminator 18
 12305 01c0 0130E0E3 		mvn	r3, #1
 12306 01c4 880100EA 		b	.L811
 12307              	.L815:
5231:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5232:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 12308              		.loc 1 5232 5 is_stmt 1
 12309 01c8 38301BE5 		ldr	r3, [fp, #-56]
 12310 01cc 803003E2 		and	r3, r3, #128
 12311 01d0 000053E3 		cmp	r3, #0
 12312 01d4 1D00001A 		bne	.L821
 12313              		.loc 1 5232 5 is_stmt 0 discriminator 1
 12314 01d8 30301BE5 		ldr	r3, [fp, #-48]
 12315 01dc 142093E5 		ldr	r2, [r3, #20]
 12316 01e0 38301BE5 		ldr	r3, [fp, #-56]
 12317 01e4 030052E1 		cmp	r2, r3
 12318 01e8 0100008A 		bhi	.L822
 12319              		.loc 1 5232 5 discriminator 3
 12320 01ec 0230E0E3 		mvn	r3, #2
 12321 01f0 7D0100EA 		b	.L811
 12322              	.L822:
 12323              		.loc 1 5232 5 discriminator 4
 12324 01f4 38301BE5 		ldr	r3, [fp, #-56]
 12325 01f8 8322A0E1 		lsl	r2, r3, #5
 12326 01fc 30301BE5 		ldr	r3, [fp, #-48]
 12327 0200 0C3093E5 		ldr	r3, [r3, #12]
 12328 0204 033082E0 		add	r3, r2, r3
 12329 0208 10300BE5 		str	r3, [fp, #-16]
 12330 020c 10301BE5 		ldr	r3, [fp, #-16]
 12331 0210 0300A0E1 		mov	r0, r3
 12332 0214 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12333 0218 18000BE5 		str	r0, [fp, #-24]
 12334 021c 18301BE5 		ldr	r3, [fp, #-24]
 12335 0220 2338A0E1 		lsr	r3, r3, #16
 12336 0224 7330EFE6 		uxtb	r3, r3
 12337 0228 020053E3 		cmp	r3, #2
 12338 022c 0100001A 		bne	.L823
 12339              		.loc 1 5232 5 discriminator 5
 12340 0230 0830E0E3 		mvn	r3, #8
 12341 0234 6C0100EA 		b	.L811
 12342              	.L823:
 12343              		.loc 1 5232 5 discriminator 6
 12344 0238 18301BE5 		ldr	r3, [fp, #-24]
 12345 023c 233CA0E1 		lsr	r3, r3, #24
 12346 0240 020053E3 		cmp	r3, #2
 12347 0244 4100000A 		beq	.L824
 12348              		.loc 1 5232 5 discriminator 7
 12349 0248 0130E0E3 		mvn	r3, #1
 12350 024c 660100EA 		b	.L811
 12351              	.L821:
 12352              		.loc 1 5232 5 discriminator 2
 12353 0250 38301BE5 		ldr	r3, [fp, #-56]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 310


 12354 0254 2324A0E1 		lsr	r2, r3, #8
 12355 0258 30301BE5 		ldr	r3, [fp, #-48]
 12356 025c 143093E5 		ldr	r3, [r3, #20]
 12357 0260 030052E1 		cmp	r2, r3
 12358 0264 0100003A 		bcc	.L825
 12359              		.loc 1 5232 5 discriminator 8
 12360 0268 0230E0E3 		mvn	r3, #2
 12361 026c 5E0100EA 		b	.L811
 12362              	.L825:
 12363              		.loc 1 5232 5 discriminator 9
 12364 0270 38301BE5 		ldr	r3, [fp, #-56]
 12365 0274 2334A0E1 		lsr	r3, r3, #8
 12366 0278 8322A0E1 		lsl	r2, r3, #5
 12367 027c 30301BE5 		ldr	r3, [fp, #-48]
 12368 0280 0C3093E5 		ldr	r3, [r3, #12]
 12369 0284 033082E0 		add	r3, r2, r3
 12370 0288 10300BE5 		str	r3, [fp, #-16]
 12371 028c 10301BE5 		ldr	r3, [fp, #-16]
 12372 0290 0300A0E1 		mov	r0, r3
 12373 0294 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12374 0298 18000BE5 		str	r0, [fp, #-24]
 12375 029c 18301BE5 		ldr	r3, [fp, #-24]
 12376 02a0 2338A0E1 		lsr	r3, r3, #16
 12377 02a4 7330EFE6 		uxtb	r3, r3
 12378 02a8 020053E3 		cmp	r3, #2
 12379 02ac 0100001A 		bne	.L826
 12380              		.loc 1 5232 5 discriminator 10
 12381 02b0 0830E0E3 		mvn	r3, #8
 12382 02b4 4C0100EA 		b	.L811
 12383              	.L826:
 12384              		.loc 1 5232 5 discriminator 11
 12385 02b8 18301BE5 		ldr	r3, [fp, #-24]
 12386 02bc 233CA0E1 		lsr	r3, r3, #24
 12387 02c0 030053E3 		cmp	r3, #3
 12388 02c4 0100000A 		beq	.L827
 12389              		.loc 1 5232 5 discriminator 12
 12390 02c8 0130E0E3 		mvn	r3, #1
 12391 02cc 460100EA 		b	.L811
 12392              	.L827:
 12393              		.loc 1 5232 5 discriminator 13
 12394 02d0 38301BE5 		ldr	r3, [fp, #-56]
 12395 02d4 7F2003E2 		and	r2, r3, #127
 12396 02d8 10301BE5 		ldr	r3, [fp, #-16]
 12397 02dc 143093E5 		ldr	r3, [r3, #20]
 12398 02e0 030052E1 		cmp	r2, r3
 12399 02e4 0100003A 		bcc	.L828
 12400              		.loc 1 5232 5 discriminator 14
 12401 02e8 0230E0E3 		mvn	r3, #2
 12402 02ec 3E0100EA 		b	.L811
 12403              	.L828:
 12404              		.loc 1 5232 5 discriminator 15
 12405 02f0 38301BE5 		ldr	r3, [fp, #-56]
 12406 02f4 7F3003E2 		and	r3, r3, #127
 12407 02f8 8322A0E1 		lsl	r2, r3, #5
 12408 02fc 10301BE5 		ldr	r3, [fp, #-16]
 12409 0300 0C3093E5 		ldr	r3, [r3, #12]
 12410 0304 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 311


 12411 0308 10300BE5 		str	r3, [fp, #-16]
 12412 030c 10301BE5 		ldr	r3, [fp, #-16]
 12413 0310 0300A0E1 		mov	r0, r3
 12414 0314 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12415 0318 18000BE5 		str	r0, [fp, #-24]
 12416 031c 18301BE5 		ldr	r3, [fp, #-24]
 12417 0320 2338A0E1 		lsr	r3, r3, #16
 12418 0324 7330EFE6 		uxtb	r3, r3
 12419 0328 020053E3 		cmp	r3, #2
 12420 032c 0100001A 		bne	.L829
 12421              		.loc 1 5232 5 discriminator 16
 12422 0330 0830E0E3 		mvn	r3, #8
 12423 0334 2C0100EA 		b	.L811
 12424              	.L829:
 12425              		.loc 1 5232 5 discriminator 17
 12426 0338 18301BE5 		ldr	r3, [fp, #-24]
 12427 033c 233CA0E1 		lsr	r3, r3, #24
 12428 0340 020053E3 		cmp	r3, #2
 12429 0344 0100000A 		beq	.L824
 12430              		.loc 1 5232 5 discriminator 18
 12431 0348 0130E0E3 		mvn	r3, #1
 12432 034c 260100EA 		b	.L811
 12433              	.L824:
5233:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
5234:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12434              		.loc 1 5234 5 is_stmt 1
 12435 0350 04309BE5 		ldr	r3, [fp, #4]
 12436 0354 803003E2 		and	r3, r3, #128
 12437 0358 000053E3 		cmp	r3, #0
 12438 035c 1D00001A 		bne	.L830
 12439              		.loc 1 5234 5 is_stmt 0 discriminator 1
 12440 0360 30301BE5 		ldr	r3, [fp, #-48]
 12441 0364 142093E5 		ldr	r2, [r3, #20]
 12442 0368 04309BE5 		ldr	r3, [fp, #4]
 12443 036c 030052E1 		cmp	r2, r3
 12444 0370 0100008A 		bhi	.L831
 12445              		.loc 1 5234 5 discriminator 3
 12446 0374 0230E0E3 		mvn	r3, #2
 12447 0378 1B0100EA 		b	.L811
 12448              	.L831:
 12449              		.loc 1 5234 5 discriminator 4
 12450 037c 04309BE5 		ldr	r3, [fp, #4]
 12451 0380 8322A0E1 		lsl	r2, r3, #5
 12452 0384 30301BE5 		ldr	r3, [fp, #-48]
 12453 0388 0C3093E5 		ldr	r3, [r3, #12]
 12454 038c 033082E0 		add	r3, r2, r3
 12455 0390 0C300BE5 		str	r3, [fp, #-12]
 12456 0394 0C301BE5 		ldr	r3, [fp, #-12]
 12457 0398 0300A0E1 		mov	r0, r3
 12458 039c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12459 03a0 18000BE5 		str	r0, [fp, #-24]
 12460 03a4 18301BE5 		ldr	r3, [fp, #-24]
 12461 03a8 2338A0E1 		lsr	r3, r3, #16
 12462 03ac 7330EFE6 		uxtb	r3, r3
 12463 03b0 020053E3 		cmp	r3, #2
 12464 03b4 0100001A 		bne	.L832
 12465              		.loc 1 5234 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 312


 12466 03b8 0830E0E3 		mvn	r3, #8
 12467 03bc 0A0100EA 		b	.L811
 12468              	.L832:
 12469              		.loc 1 5234 5 discriminator 6
 12470 03c0 18301BE5 		ldr	r3, [fp, #-24]
 12471 03c4 233CA0E1 		lsr	r3, r3, #24
 12472 03c8 050053E3 		cmp	r3, #5
 12473 03cc 4100000A 		beq	.L833
 12474              		.loc 1 5234 5 discriminator 7
 12475 03d0 0130E0E3 		mvn	r3, #1
 12476 03d4 040100EA 		b	.L811
 12477              	.L830:
 12478              		.loc 1 5234 5 discriminator 2
 12479 03d8 04309BE5 		ldr	r3, [fp, #4]
 12480 03dc 2324A0E1 		lsr	r2, r3, #8
 12481 03e0 30301BE5 		ldr	r3, [fp, #-48]
 12482 03e4 143093E5 		ldr	r3, [r3, #20]
 12483 03e8 030052E1 		cmp	r2, r3
 12484 03ec 0100003A 		bcc	.L834
 12485              		.loc 1 5234 5 discriminator 8
 12486 03f0 0230E0E3 		mvn	r3, #2
 12487 03f4 FC0000EA 		b	.L811
 12488              	.L834:
 12489              		.loc 1 5234 5 discriminator 9
 12490 03f8 04309BE5 		ldr	r3, [fp, #4]
 12491 03fc 2334A0E1 		lsr	r3, r3, #8
 12492 0400 8322A0E1 		lsl	r2, r3, #5
 12493 0404 30301BE5 		ldr	r3, [fp, #-48]
 12494 0408 0C3093E5 		ldr	r3, [r3, #12]
 12495 040c 033082E0 		add	r3, r2, r3
 12496 0410 0C300BE5 		str	r3, [fp, #-12]
 12497 0414 0C301BE5 		ldr	r3, [fp, #-12]
 12498 0418 0300A0E1 		mov	r0, r3
 12499 041c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12500 0420 18000BE5 		str	r0, [fp, #-24]
 12501 0424 18301BE5 		ldr	r3, [fp, #-24]
 12502 0428 2338A0E1 		lsr	r3, r3, #16
 12503 042c 7330EFE6 		uxtb	r3, r3
 12504 0430 020053E3 		cmp	r3, #2
 12505 0434 0100001A 		bne	.L835
 12506              		.loc 1 5234 5 discriminator 10
 12507 0438 0830E0E3 		mvn	r3, #8
 12508 043c EA0000EA 		b	.L811
 12509              	.L835:
 12510              		.loc 1 5234 5 discriminator 11
 12511 0440 18301BE5 		ldr	r3, [fp, #-24]
 12512 0444 233CA0E1 		lsr	r3, r3, #24
 12513 0448 030053E3 		cmp	r3, #3
 12514 044c 0100000A 		beq	.L836
 12515              		.loc 1 5234 5 discriminator 12
 12516 0450 0130E0E3 		mvn	r3, #1
 12517 0454 E40000EA 		b	.L811
 12518              	.L836:
 12519              		.loc 1 5234 5 discriminator 13
 12520 0458 04309BE5 		ldr	r3, [fp, #4]
 12521 045c 7F2003E2 		and	r2, r3, #127
 12522 0460 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 313


 12523 0464 143093E5 		ldr	r3, [r3, #20]
 12524 0468 030052E1 		cmp	r2, r3
 12525 046c 0100003A 		bcc	.L837
 12526              		.loc 1 5234 5 discriminator 14
 12527 0470 0230E0E3 		mvn	r3, #2
 12528 0474 DC0000EA 		b	.L811
 12529              	.L837:
 12530              		.loc 1 5234 5 discriminator 15
 12531 0478 04309BE5 		ldr	r3, [fp, #4]
 12532 047c 7F3003E2 		and	r3, r3, #127
 12533 0480 8322A0E1 		lsl	r2, r3, #5
 12534 0484 0C301BE5 		ldr	r3, [fp, #-12]
 12535 0488 0C3093E5 		ldr	r3, [r3, #12]
 12536 048c 033082E0 		add	r3, r2, r3
 12537 0490 0C300BE5 		str	r3, [fp, #-12]
 12538 0494 0C301BE5 		ldr	r3, [fp, #-12]
 12539 0498 0300A0E1 		mov	r0, r3
 12540 049c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12541 04a0 18000BE5 		str	r0, [fp, #-24]
 12542 04a4 18301BE5 		ldr	r3, [fp, #-24]
 12543 04a8 2338A0E1 		lsr	r3, r3, #16
 12544 04ac 7330EFE6 		uxtb	r3, r3
 12545 04b0 020053E3 		cmp	r3, #2
 12546 04b4 0100001A 		bne	.L838
 12547              		.loc 1 5234 5 discriminator 16
 12548 04b8 0830E0E3 		mvn	r3, #8
 12549 04bc CA0000EA 		b	.L811
 12550              	.L838:
 12551              		.loc 1 5234 5 discriminator 17
 12552 04c0 18301BE5 		ldr	r3, [fp, #-24]
 12553 04c4 233CA0E1 		lsr	r3, r3, #24
 12554 04c8 050053E3 		cmp	r3, #5
 12555 04cc 0100000A 		beq	.L833
 12556              		.loc 1 5234 5 discriminator 18
 12557 04d0 0130E0E3 		mvn	r3, #1
 12558 04d4 C40000EA 		b	.L811
 12559              	.L833:
5235:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
5236:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5237:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 12560              		.loc 1 5237 5 is_stmt 1
 12561 04d8 08301BE5 		ldr	r3, [fp, #-8]
 12562 04dc 083093E5 		ldr	r3, [r3, #8]
 12563 04e0 013003E2 		and	r3, r3, #1
 12564 04e4 000053E3 		cmp	r3, #0
 12565 04e8 0100001A 		bne	.L839
 12566              		.loc 1 5237 5 is_stmt 0 discriminator 1
 12567 04ec 0630E0E3 		mvn	r3, #6
 12568 04f0 BD0000EA 		b	.L811
 12569              	.L839:
5238:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 12570              		.loc 1 5238 5 is_stmt 1
 12571 04f4 0C301BE5 		ldr	r3, [fp, #-12]
 12572 04f8 083093E5 		ldr	r3, [r3, #8]
 12573 04fc 023003E2 		and	r3, r3, #2
 12574 0500 000053E3 		cmp	r3, #0
 12575 0504 0100001A 		bne	.L840
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 314


 12576              		.loc 1 5238 5 is_stmt 0 discriminator 1
 12577 0508 0630E0E3 		mvn	r3, #6
 12578 050c B60000EA 		b	.L811
 12579              	.L840:
5239:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
5240:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 12580              		.loc 1 5240 7 is_stmt 1
 12581 0510 14309BE5 		ldr	r3, [fp, #20]
 12582 0514 000053E3 		cmp	r3, #0
 12583 0518 0200001A 		bne	.L841
5241:../../Source/Kernel/rme_kernel.c ****     {
5242:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5243:../../Source/Kernel/rme_kernel.c ****         
5244:../../Source/Kernel/rme_kernel.c ****         Size=RME_THD_SIZE(Attr);
 12584              		.loc 1 5244 13
 12585 051c 9C30A0E3 		mov	r3, #156
 12586 0520 14300BE5 		str	r3, [fp, #-20]
 12587 0524 010000EA 		b	.L842
 12588              	.L841:
5245:../../Source/Kernel/rme_kernel.c ****     }
5246:../../Source/Kernel/rme_kernel.c ****     else
5247:../../Source/Kernel/rme_kernel.c ****     {
5248:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5249:../../Source/Kernel/rme_kernel.c ****         
5250:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_SIZE==0U)
5251:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
5252:../../Source/Kernel/rme_kernel.c **** #else
5253:../../Source/Kernel/rme_kernel.c ****         Size=RME_HYP_SIZE;
 12589              		.loc 1 5253 13
 12590 0528 5830A0E3 		mov	r3, #88
 12591 052c 14300BE5 		str	r3, [fp, #-20]
 12592              	.L842:
5254:../../Source/Kernel/rme_kernel.c **** #endif
5255:../../Source/Kernel/rme_kernel.c ****     }
5256:../../Source/Kernel/rme_kernel.c ****     
5257:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_THD,Raddr,Vaddr,Size);
 12593              		.loc 1 5257 5
 12594 0530 10301BE5 		ldr	r3, [fp, #-16]
 12595 0534 083093E5 		ldr	r3, [r3, #8]
 12596 0538 043003E2 		and	r3, r3, #4
 12597 053c 000053E3 		cmp	r3, #0
 12598 0540 0100001A 		bne	.L843
 12599              		.loc 1 5257 5 is_stmt 0 discriminator 1
 12600 0544 0630E0E3 		mvn	r3, #6
 12601 0548 A70000EA 		b	.L811
 12602              	.L843:
 12603              		.loc 1 5257 5 discriminator 2
 12604 054c 10301BE5 		ldr	r3, [fp, #-16]
 12605 0550 143093E5 		ldr	r3, [r3, #20]
 12606 0554 0C209BE5 		ldr	r2, [fp, #12]
 12607 0558 033082E0 		add	r3, r2, r3
 12608 055c 1C300BE5 		str	r3, [fp, #-28]
 12609 0560 1C201BE5 		ldr	r2, [fp, #-28]
 12610 0564 0C309BE5 		ldr	r3, [fp, #12]
 12611 0568 030052E1 		cmp	r2, r3
 12612 056c 0100002A 		bcs	.L844
 12613              		.loc 1 5257 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 315


 12614 0570 0630E0E3 		mvn	r3, #6
 12615 0574 9C0000EA 		b	.L811
 12616              	.L844:
 12617              		.loc 1 5257 5 discriminator 4
 12618 0578 10301BE5 		ldr	r3, [fp, #-16]
 12619 057c 143093E5 		ldr	r3, [r3, #20]
 12620 0580 1C201BE5 		ldr	r2, [fp, #-28]
 12621 0584 030052E1 		cmp	r2, r3
 12622 0588 0100002A 		bcs	.L845
 12623              		.loc 1 5257 5 discriminator 5
 12624 058c 0630E0E3 		mvn	r3, #6
 12625 0590 950000EA 		b	.L811
 12626              	.L845:
 12627              		.loc 1 5257 5 discriminator 6
 12628 0594 1C201BE5 		ldr	r2, [fp, #-28]
 12629 0598 14301BE5 		ldr	r3, [fp, #-20]
 12630 059c 033082E0 		add	r3, r2, r3
 12631 05a0 1C201BE5 		ldr	r2, [fp, #-28]
 12632 05a4 030052E1 		cmp	r2, r3
 12633 05a8 0100009A 		bls	.L846
 12634              		.loc 1 5257 5 discriminator 7
 12635 05ac 0630E0E3 		mvn	r3, #6
 12636 05b0 8D0000EA 		b	.L811
 12637              	.L846:
 12638              		.loc 1 5257 5 discriminator 8
 12639 05b4 10301BE5 		ldr	r3, [fp, #-16]
 12640 05b8 182093E5 		ldr	r2, [r3, #24]
 12641 05bc 1C101BE5 		ldr	r1, [fp, #-28]
 12642 05c0 14301BE5 		ldr	r3, [fp, #-20]
 12643 05c4 033081E0 		add	r3, r1, r3
 12644 05c8 013043E2 		sub	r3, r3, #1
 12645 05cc 030052E1 		cmp	r2, r3
 12646 05d0 0100002A 		bcs	.L847
 12647              		.loc 1 5257 5 discriminator 9
 12648 05d4 0630E0E3 		mvn	r3, #6
 12649 05d8 830000EA 		b	.L811
 12650              	.L847:
5258:../../Source/Kernel/rme_kernel.c ****     
5259:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5260:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 12651              		.loc 1 5260 5 is_stmt 1
 12652 05dc 08301BE5 		ldr	r3, [fp, #-8]
 12653 05e0 142093E5 		ldr	r2, [r3, #20]
 12654 05e4 3C301BE5 		ldr	r3, [fp, #-60]
 12655 05e8 030052E1 		cmp	r2, r3
 12656 05ec 0100008A 		bhi	.L848
 12657              		.loc 1 5260 5 is_stmt 0 discriminator 1
 12658 05f0 0230E0E3 		mvn	r3, #2
 12659 05f4 7C0000EA 		b	.L811
 12660              	.L848:
 12661              		.loc 1 5260 5 discriminator 2
 12662 05f8 3C301BE5 		ldr	r3, [fp, #-60]
 12663 05fc 8322A0E1 		lsl	r2, r3, #5
 12664 0600 08301BE5 		ldr	r3, [fp, #-8]
 12665 0604 0C3093E5 		ldr	r3, [r3, #12]
 12666 0608 033082E0 		add	r3, r2, r3
 12667 060c 20300BE5 		str	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 316


5261:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5262:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 12668              		.loc 1 5262 5 is_stmt 1 discriminator 2
 12669 0610 20301BE5 		ldr	r3, [fp, #-32]
 12670 0614 0128A0E3 		mov	r2, #65536
 12671 0618 0010A0E3 		mov	r1, #0
 12672 061c 0300A0E1 		mov	r0, r3
 12673 0620 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12674 0624 0030A0E1 		mov	r3, r0
 12675 0628 000053E3 		cmp	r3, #0
 12676 062c 0100001A 		bne	.L849
 12677              		.loc 1 5262 5 is_stmt 0 discriminator 1
 12678 0630 0430E0E3 		mvn	r3, #4
 12679 0634 6C0000EA 		b	.L811
 12680              	.L849:
 12681              		.loc 1 5262 5 discriminator 2
 12682 0638 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 12683 063c 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 12684 0640 002093E5 		ldr	r2, [r3]
 12685 0644 20301BE5 		ldr	r3, [fp, #-32]
 12686 0648 102083E5 		str	r2, [r3, #16]
5263:../../Source/Kernel/rme_kernel.c ****      
5264:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5265:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Size)<0)
 12687              		.loc 1 5265 8 is_stmt 1 discriminator 2
 12688 064c 14101BE5 		ldr	r1, [fp, #-20]
 12689 0650 1C001BE5 		ldr	r0, [fp, #-28]
 12690 0654 FEFFFFEB 		bl	_RME_Kot_Mark
 12691 0658 0030A0E1 		mov	r3, r0
 12692              		.loc 1 5265 7 discriminator 2
 12693 065c 000053E3 		cmp	r3, #0
 12694 0660 050000AA 		bge	.L850
5266:../../Source/Kernel/rme_kernel.c ****     {
5267:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5268:../../Source/Kernel/rme_kernel.c **** 
5269:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 12695              		.loc 1 5269 9
 12696 0664 20301BE5 		ldr	r3, [fp, #-32]
 12697 0668 0010A0E3 		mov	r1, #0
 12698 066c 0300A0E1 		mov	r0, r3
 12699 0670 FEFFFFEB 		bl	__RME_A7A_Write_Release
5270:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 12700              		.loc 1 5270 16
 12701 0674 0330E0E3 		mvn	r3, #3
 12702 0678 5B0000EA 		b	.L811
 12703              	.L850:
5271:../../Source/Kernel/rme_kernel.c ****     }
5272:../../Source/Kernel/rme_kernel.c ****     else
5273:../../Source/Kernel/rme_kernel.c ****     {
5274:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5275:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5276:../../Source/Kernel/rme_kernel.c ****     }
5277:../../Source/Kernel/rme_kernel.c ****     
5278:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5279:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 12704              		.loc 1 5279 11
 12705 067c 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 317


 12706 0680 24300BE5 		str	r3, [fp, #-36]
5280:../../Source/Kernel/rme_kernel.c ****     /* These thread's TID default to 0, and have no timeslices assigned */
5281:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 12707              		.loc 1 5281 22
 12708 0684 24301BE5 		ldr	r3, [fp, #-36]
 12709 0688 0020A0E3 		mov	r2, #0
 12710 068c 102083E5 		str	r2, [r3, #16]
5282:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 12711              		.loc 1 5282 24
 12712 0690 24301BE5 		ldr	r3, [fp, #-36]
 12713 0694 0020A0E3 		mov	r2, #0
 12714 0698 182083E5 		str	r2, [r3, #24]
5283:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_TIMEOUT;
 12715              		.loc 1 5283 24
 12716 069c 24301BE5 		ldr	r3, [fp, #-36]
 12717 06a0 0220A0E3 		mov	r2, #2
 12718 06a4 1C2083E5 		str	r2, [r3, #28]
5284:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 12719              		.loc 1 5284 14
 12720 06a8 0C301BE5 		ldr	r3, [fp, #-12]
 12721 06ac 003093E5 		ldr	r3, [r3]
 12722 06b0 7330FFE6 		uxth	r3, r3
 12723 06b4 000053E3 		cmp	r3, #0
 12724 06b8 0200000A 		beq	.L851
 12725              		.loc 1 5284 14 is_stmt 0 discriminator 1
 12726 06bc 0C301BE5 		ldr	r3, [fp, #-12]
 12727 06c0 043093E5 		ldr	r3, [r3, #4]
 12728 06c4 000000EA 		b	.L852
 12729              	.L851:
 12730              		.loc 1 5284 14 discriminator 2
 12731 06c8 0C301BE5 		ldr	r3, [fp, #-12]
 12732              	.L852:
 12733              		.loc 1 5284 13 is_stmt 1 discriminator 4
 12734 06cc 28300BE5 		str	r3, [fp, #-40]
5285:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 12735              		.loc 1 5285 22 discriminator 4
 12736 06d0 24301BE5 		ldr	r3, [fp, #-36]
 12737 06d4 28201BE5 		ldr	r2, [fp, #-40]
 12738 06d8 2C2083E5 		str	r2, [r3, #44]
5286:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 12739              		.loc 1 5286 25 discriminator 4
 12740 06dc 24301BE5 		ldr	r3, [fp, #-36]
 12741 06e0 0020A0E3 		mov	r2, #0
 12742 06e4 282083E5 		str	r2, [r3, #40]
5287:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=Prio_Max;
 12743              		.loc 1 5287 27 discriminator 4
 12744 06e8 24301BE5 		ldr	r3, [fp, #-36]
 12745 06ec 08209BE5 		ldr	r2, [fp, #8]
 12746 06f0 242083E5 		str	r2, [r3, #36]
5288:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=0U;
 12747              		.loc 1 5288 28 discriminator 4
 12748 06f4 24301BE5 		ldr	r3, [fp, #-36]
 12749 06f8 0020A0E3 		mov	r2, #0
 12750 06fc 302083E5 		str	r2, [r3, #48]
5289:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 12751              		.loc 1 5289 28 discriminator 4
 12752 0700 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 318


 12753 0704 0020A0E3 		mov	r2, #0
 12754 0708 382083E5 		str	r2, [r3, #56]
5290:../../Source/Kernel/rme_kernel.c ****     /* Currently the thread is not bound to any particular CPU */
5291:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=RME_THD_FREE;
 12755              		.loc 1 5291 24 discriminator 4
 12756 070c 24301BE5 		ldr	r3, [fp, #-36]
 12757 0710 0020E0E3 		mvn	r2, #0
 12758 0714 142083E5 		str	r2, [r3, #20]
5292:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5293:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 12759              		.loc 1 5293 5 discriminator 4
 12760 0718 24301BE5 		ldr	r3, [fp, #-36]
 12761 071c 083083E2 		add	r3, r3, #8
 12762 0720 0300A0E1 		mov	r0, r3
 12763 0724 FEFFFFEB 		bl	_RME_List_Crt
5294:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 12764              		.loc 1 5294 5 discriminator 4
 12765 0728 24301BE5 		ldr	r3, [fp, #-36]
 12766 072c 3C3083E2 		add	r3, r3, #60
 12767 0730 0300A0E1 		mov	r0, r3
 12768 0734 FEFFFFEB 		bl	_RME_List_Crt
5295:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this is not a hypervisor thread yet */
5296:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 12769              		.loc 1 5296 7 discriminator 4
 12770 0738 14309BE5 		ldr	r3, [fp, #20]
 12771 073c 000053E3 		cmp	r3, #0
 12772 0740 0800001A 		bne	.L853
5297:../../Source/Kernel/rme_kernel.c ****     {
5298:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5299:../../Source/Kernel/rme_kernel.c ****         
5300:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr;
 12773              		.loc 1 5300 29
 12774 0744 24301BE5 		ldr	r3, [fp, #-36]
 12775 0748 10209BE5 		ldr	r2, [fp, #16]
 12776 074c 442083E5 		str	r2, [r3, #68]
5301:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 12777              		.loc 1 5301 52
 12778 0750 1C301BE5 		ldr	r3, [fp, #-28]
 12779 0754 583083E2 		add	r3, r3, #88
 12780              		.loc 1 5301 25
 12781 0758 0320A0E1 		mov	r2, r3
 12782              		.loc 1 5301 24
 12783 075c 24301BE5 		ldr	r3, [fp, #-36]
 12784 0760 482083E5 		str	r2, [r3, #72]
 12785 0764 060000EA 		b	.L854
 12786              	.L853:
5302:../../Source/Kernel/rme_kernel.c ****     }
5303:../../Source/Kernel/rme_kernel.c ****     /* Default to HYP_VA_BASE for all created hypervisor threads */
5304:../../Source/Kernel/rme_kernel.c ****     else
5305:../../Source/Kernel/rme_kernel.c ****     {
5306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5307:../../Source/Kernel/rme_kernel.c ****         
5308:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr|RME_THD_HYP_FLAG;
 12787              		.loc 1 5308 34
 12788 0768 10309BE5 		ldr	r3, [fp, #16]
 12789 076c 022183E3 		orr	r2, r3, #-2147483648
 12790              		.loc 1 5308 29
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 319


 12791 0770 24301BE5 		ldr	r3, [fp, #-36]
 12792 0774 442083E5 		str	r2, [r3, #68]
5309:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=RME_HYP_VA_BASE;
 12793              		.loc 1 5309 24
 12794 0778 24301BE5 		ldr	r3, [fp, #-36]
 12795 077c 0222A0E3 		mov	r2, #536870912
 12796 0780 482083E5 		str	r2, [r3, #72]
 12797              	.L854:
5310:../../Source/Kernel/rme_kernel.c ****     }
5311:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5312:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 12798              		.loc 1 5312 5
 12799 0784 24301BE5 		ldr	r3, [fp, #-36]
 12800 0788 4C3083E2 		add	r3, r3, #76
 12801 078c 0300A0E1 		mov	r0, r3
 12802 0790 FEFFFFEB 		bl	_RME_List_Crt
5313:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 12803              		.loc 1 5313 29
 12804 0794 24301BE5 		ldr	r3, [fp, #-36]
 12805 0798 0020A0E3 		mov	r2, #0
 12806 079c 542083E5 		str	r2, [r3, #84]
5314:../../Source/Kernel/rme_kernel.c **** 
5315:../../Source/Kernel/rme_kernel.c ****     /* Header init */
5316:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=0U;
 12807              		.loc 1 5316 27
 12808 07a0 20301BE5 		ldr	r3, [fp, #-32]
 12809 07a4 0020A0E3 		mov	r2, #0
 12810 07a8 042083E5 		str	r2, [r3, #4]
5317:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 12811              		.loc 1 5317 25
 12812 07ac 20301BE5 		ldr	r3, [fp, #-32]
 12813 07b0 1C201BE5 		ldr	r2, [fp, #-28]
 12814 07b4 0C2083E5 		str	r2, [r3, #12]
5318:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_ALL;
 12815              		.loc 1 5318 23
 12816 07b8 20301BE5 		ldr	r3, [fp, #-32]
 12817 07bc FF2100E3 		movw	r2, #511
 12818 07c0 082083E5 		str	r2, [r3, #8]
5319:../../Source/Kernel/rme_kernel.c **** 
5320:../../Source/Kernel/rme_kernel.c ****     /* Reference process */
5321:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 12819              		.loc 1 5321 5
 12820 07c4 28301BE5 		ldr	r3, [fp, #-40]
 12821 07c8 043083E2 		add	r3, r3, #4
 12822 07cc 0110A0E3 		mov	r1, #1
 12823 07d0 0300A0E1 		mov	r0, r3
 12824 07d4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5322:../../Source/Kernel/rme_kernel.c ****     
5323:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5324:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 12825              		.loc 1 5324 5
 12826 07d8 20301BE5 		ldr	r3, [fp, #-32]
 12827 07dc 0614A0E3 		mov	r1, #100663296
 12828 07e0 0300A0E1 		mov	r0, r3
 12829 07e4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5325:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5326:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 320


5327:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5328:../../Source/Kernel/rme_kernel.c **** 
5329:../../Source/Kernel/rme_kernel.c ****     return 0;
 12830              		.loc 1 5329 12
 12831 07e8 0030A0E3 		mov	r3, #0
 12832              	.L811:
5330:../../Source/Kernel/rme_kernel.c **** }
 12833              		.loc 1 5330 1
 12834 07ec 0300A0E1 		mov	r0, r3
 12835 07f0 04D04BE2 		sub	sp, fp, #4
 12836              		.cfi_def_cfa 13, 8
 12837              		@ sp needed
 12838 07f4 0088BDE8 		pop	{fp, pc}
 12839              		.cfi_endproc
 12840              	.LFE56:
 12842              		.section	.text._RME_Thd_Del,"ax",%progbits
 12843              		.align	2
 12844              		.syntax unified
 12845              		.arm
 12847              	_RME_Thd_Del:
 12848              	.LFB57:
5331:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Crt *************************************************/
5332:../../Source/Kernel/rme_kernel.c **** 
5333:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Del ******************************************************
5334:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread.
5335:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
5336:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5337:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5338:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread in the captbl.
5339:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5340:../../Source/Kernel/rme_kernel.c **** Output      : None.
5341:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5342:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5343:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Del(struct RME_Cap_Cpt* Cpt,
5344:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5345:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd)
5346:../../Source/Kernel/rme_kernel.c **** {
 12849              		.loc 1 5346 1
 12850              		.cfi_startproc
 12851              		@ args = 0, pretend = 0, frame = 40
 12852              		@ frame_needed = 1, uses_anonymous_args = 0
 12853 0000 00482DE9 		push	{fp, lr}
 12854              		.cfi_def_cfa_offset 8
 12855              		.cfi_offset 11, -8
 12856              		.cfi_offset 14, -4
 12857 0004 04B08DE2 		add	fp, sp, #4
 12858              		.cfi_def_cfa 11, 4
 12859 0008 28D04DE2 		sub	sp, sp, #40
 12860 000c 20000BE5 		str	r0, [fp, #-32]
 12861 0010 24100BE5 		str	r1, [fp, #-36]
 12862 0014 28200BE5 		str	r2, [fp, #-40]
5347:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5348:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Del;
5349:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5350:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
5351:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5352:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 321


5353:../../Source/Kernel/rme_kernel.c ****     
5354:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5355:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12863              		.loc 1 5355 5
 12864 0018 24301BE5 		ldr	r3, [fp, #-36]
 12865 001c 803003E2 		and	r3, r3, #128
 12866 0020 000053E3 		cmp	r3, #0
 12867 0024 1D00001A 		bne	.L856
 12868              		.loc 1 5355 5 is_stmt 0 discriminator 1
 12869 0028 20301BE5 		ldr	r3, [fp, #-32]
 12870 002c 142093E5 		ldr	r2, [r3, #20]
 12871 0030 24301BE5 		ldr	r3, [fp, #-36]
 12872 0034 030052E1 		cmp	r2, r3
 12873 0038 0100008A 		bhi	.L857
 12874              		.loc 1 5355 5 discriminator 3
 12875 003c 0230E0E3 		mvn	r3, #2
 12876 0040 010100EA 		b	.L858
 12877              	.L857:
 12878              		.loc 1 5355 5 discriminator 4
 12879 0044 24301BE5 		ldr	r3, [fp, #-36]
 12880 0048 8322A0E1 		lsl	r2, r3, #5
 12881 004c 20301BE5 		ldr	r3, [fp, #-32]
 12882 0050 0C3093E5 		ldr	r3, [r3, #12]
 12883 0054 033082E0 		add	r3, r2, r3
 12884 0058 08300BE5 		str	r3, [fp, #-8]
 12885 005c 08301BE5 		ldr	r3, [fp, #-8]
 12886 0060 0300A0E1 		mov	r0, r3
 12887 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12888 0068 0C000BE5 		str	r0, [fp, #-12]
 12889 006c 0C301BE5 		ldr	r3, [fp, #-12]
 12890 0070 2338A0E1 		lsr	r3, r3, #16
 12891 0074 7330EFE6 		uxtb	r3, r3
 12892 0078 020053E3 		cmp	r3, #2
 12893 007c 0100001A 		bne	.L859
 12894              		.loc 1 5355 5 discriminator 5
 12895 0080 0830E0E3 		mvn	r3, #8
 12896 0084 F00000EA 		b	.L858
 12897              	.L859:
 12898              		.loc 1 5355 5 discriminator 6
 12899 0088 0C301BE5 		ldr	r3, [fp, #-12]
 12900 008c 233CA0E1 		lsr	r3, r3, #24
 12901 0090 030053E3 		cmp	r3, #3
 12902 0094 4100000A 		beq	.L860
 12903              		.loc 1 5355 5 discriminator 7
 12904 0098 0130E0E3 		mvn	r3, #1
 12905 009c EA0000EA 		b	.L858
 12906              	.L856:
 12907              		.loc 1 5355 5 discriminator 2
 12908 00a0 24301BE5 		ldr	r3, [fp, #-36]
 12909 00a4 2324A0E1 		lsr	r2, r3, #8
 12910 00a8 20301BE5 		ldr	r3, [fp, #-32]
 12911 00ac 143093E5 		ldr	r3, [r3, #20]
 12912 00b0 030052E1 		cmp	r2, r3
 12913 00b4 0100003A 		bcc	.L861
 12914              		.loc 1 5355 5 discriminator 8
 12915 00b8 0230E0E3 		mvn	r3, #2
 12916 00bc E20000EA 		b	.L858
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 322


 12917              	.L861:
 12918              		.loc 1 5355 5 discriminator 9
 12919 00c0 24301BE5 		ldr	r3, [fp, #-36]
 12920 00c4 2334A0E1 		lsr	r3, r3, #8
 12921 00c8 8322A0E1 		lsl	r2, r3, #5
 12922 00cc 20301BE5 		ldr	r3, [fp, #-32]
 12923 00d0 0C3093E5 		ldr	r3, [r3, #12]
 12924 00d4 033082E0 		add	r3, r2, r3
 12925 00d8 08300BE5 		str	r3, [fp, #-8]
 12926 00dc 08301BE5 		ldr	r3, [fp, #-8]
 12927 00e0 0300A0E1 		mov	r0, r3
 12928 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12929 00e8 0C000BE5 		str	r0, [fp, #-12]
 12930 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 12931 00f0 2338A0E1 		lsr	r3, r3, #16
 12932 00f4 7330EFE6 		uxtb	r3, r3
 12933 00f8 020053E3 		cmp	r3, #2
 12934 00fc 0100001A 		bne	.L862
 12935              		.loc 1 5355 5 discriminator 10
 12936 0100 0830E0E3 		mvn	r3, #8
 12937 0104 D00000EA 		b	.L858
 12938              	.L862:
 12939              		.loc 1 5355 5 discriminator 11
 12940 0108 0C301BE5 		ldr	r3, [fp, #-12]
 12941 010c 233CA0E1 		lsr	r3, r3, #24
 12942 0110 030053E3 		cmp	r3, #3
 12943 0114 0100000A 		beq	.L863
 12944              		.loc 1 5355 5 discriminator 12
 12945 0118 0130E0E3 		mvn	r3, #1
 12946 011c CA0000EA 		b	.L858
 12947              	.L863:
 12948              		.loc 1 5355 5 discriminator 13
 12949 0120 24301BE5 		ldr	r3, [fp, #-36]
 12950 0124 7F2003E2 		and	r2, r3, #127
 12951 0128 08301BE5 		ldr	r3, [fp, #-8]
 12952 012c 143093E5 		ldr	r3, [r3, #20]
 12953 0130 030052E1 		cmp	r2, r3
 12954 0134 0100003A 		bcc	.L864
 12955              		.loc 1 5355 5 discriminator 14
 12956 0138 0230E0E3 		mvn	r3, #2
 12957 013c C20000EA 		b	.L858
 12958              	.L864:
 12959              		.loc 1 5355 5 discriminator 15
 12960 0140 24301BE5 		ldr	r3, [fp, #-36]
 12961 0144 7F3003E2 		and	r3, r3, #127
 12962 0148 8322A0E1 		lsl	r2, r3, #5
 12963 014c 08301BE5 		ldr	r3, [fp, #-8]
 12964 0150 0C3093E5 		ldr	r3, [r3, #12]
 12965 0154 033082E0 		add	r3, r2, r3
 12966 0158 08300BE5 		str	r3, [fp, #-8]
 12967 015c 08301BE5 		ldr	r3, [fp, #-8]
 12968 0160 0300A0E1 		mov	r0, r3
 12969 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12970 0168 0C000BE5 		str	r0, [fp, #-12]
 12971 016c 0C301BE5 		ldr	r3, [fp, #-12]
 12972 0170 2338A0E1 		lsr	r3, r3, #16
 12973 0174 7330EFE6 		uxtb	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 323


 12974 0178 020053E3 		cmp	r3, #2
 12975 017c 0100001A 		bne	.L865
 12976              		.loc 1 5355 5 discriminator 16
 12977 0180 0830E0E3 		mvn	r3, #8
 12978 0184 B00000EA 		b	.L858
 12979              	.L865:
 12980              		.loc 1 5355 5 discriminator 17
 12981 0188 0C301BE5 		ldr	r3, [fp, #-12]
 12982 018c 233CA0E1 		lsr	r3, r3, #24
 12983 0190 030053E3 		cmp	r3, #3
 12984 0194 0100000A 		beq	.L860
 12985              		.loc 1 5355 5 discriminator 18
 12986 0198 0130E0E3 		mvn	r3, #1
 12987 019c AA0000EA 		b	.L858
 12988              	.L860:
5356:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
5357:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
5358:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 12989              		.loc 1 5358 5 is_stmt 1
 12990 01a0 08301BE5 		ldr	r3, [fp, #-8]
 12991 01a4 083093E5 		ldr	r3, [r3, #8]
 12992 01a8 023003E2 		and	r3, r3, #2
 12993 01ac 000053E3 		cmp	r3, #0
 12994 01b0 0100001A 		bne	.L866
 12995              		.loc 1 5358 5 is_stmt 0 discriminator 1
 12996 01b4 0630E0E3 		mvn	r3, #6
 12997 01b8 A30000EA 		b	.L858
 12998              	.L866:
5359:../../Source/Kernel/rme_kernel.c ****     
5360:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5361:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Del);
 12999              		.loc 1 5361 5 is_stmt 1
 13000 01bc 08301BE5 		ldr	r3, [fp, #-8]
 13001 01c0 142093E5 		ldr	r2, [r3, #20]
 13002 01c4 28301BE5 		ldr	r3, [fp, #-40]
 13003 01c8 030052E1 		cmp	r2, r3
 13004 01cc 0100008A 		bhi	.L867
 13005              		.loc 1 5361 5 is_stmt 0 discriminator 1
 13006 01d0 0230E0E3 		mvn	r3, #2
 13007 01d4 9C0000EA 		b	.L858
 13008              	.L867:
 13009              		.loc 1 5361 5 discriminator 2
 13010 01d8 28301BE5 		ldr	r3, [fp, #-40]
 13011 01dc 8322A0E1 		lsl	r2, r3, #5
 13012 01e0 08301BE5 		ldr	r3, [fp, #-8]
 13013 01e4 0C3093E5 		ldr	r3, [r3, #12]
 13014 01e8 033082E0 		add	r3, r2, r3
 13015 01ec 10300BE5 		str	r3, [fp, #-16]
5362:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
5363:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Thd_Del,Type_Stat,RME_CAP_TYPE_THD);
 13016              		.loc 1 5363 5 is_stmt 1 discriminator 2
 13017 01f0 10301BE5 		ldr	r3, [fp, #-16]
 13018 01f4 0300A0E1 		mov	r0, r3
 13019 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13020 01fc 0C000BE5 		str	r0, [fp, #-12]
 13021 0200 0C301BE5 		ldr	r3, [fp, #-12]
 13022 0204 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 324


 13023 0208 7330EFE6 		uxtb	r3, r3
 13024 020c 020053E3 		cmp	r3, #2
 13025 0210 0100000A 		beq	.L868
 13026              		.loc 1 5363 5 is_stmt 0 discriminator 1
 13027 0214 0830E0E3 		mvn	r3, #8
 13028 0218 8B0000EA 		b	.L858
 13029              	.L868:
 13030              		.loc 1 5363 5 discriminator 2
 13031 021c 0C301BE5 		ldr	r3, [fp, #-12]
 13032 0220 233CA0E1 		lsr	r3, r3, #24
 13033 0224 060053E3 		cmp	r3, #6
 13034 0228 0100000A 		beq	.L869
 13035              		.loc 1 5363 5 discriminator 3
 13036 022c 0130E0E3 		mvn	r3, #1
 13037 0230 850000EA 		b	.L858
 13038              	.L869:
 13039              		.loc 1 5363 5 discriminator 6
 13040 0234 10301BE5 		ldr	r3, [fp, #-16]
 13041 0238 043093E5 		ldr	r3, [r3, #4]
 13042 023c 000053E3 		cmp	r3, #0
 13043 0240 0B00000A 		beq	.L870
 13044              		.loc 1 5363 5 discriminator 7
 13045 0244 0C301BE5 		ldr	r3, [fp, #-12]
 13046 0248 7330FFE6 		uxth	r3, r3
 13047 024c 000053E3 		cmp	r3, #0
 13048 0250 0500001A 		bne	.L871
 13049              		.loc 1 5363 5 discriminator 9
 13050 0254 10001BE5 		ldr	r0, [fp, #-16]
 13051 0258 0C301BE5 		ldr	r3, [fp, #-12]
 13052 025c FF38C3E3 		bic	r3, r3, #16711680
 13053 0260 0320A0E1 		mov	r2, r3
 13054 0264 0C101BE5 		ldr	r1, [fp, #-12]
 13055 0268 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13056              	.L871:
 13057              		.loc 1 5363 5 discriminator 11
 13058 026c 0530E0E3 		mvn	r3, #5
 13059 0270 750000EA 		b	.L858
 13060              	.L870:
 13061              		.loc 1 5363 5 discriminator 8
 13062 0274 0C301BE5 		ldr	r3, [fp, #-12]
 13063 0278 7330FFE6 		uxth	r3, r3
 13064 027c 000053E3 		cmp	r3, #0
 13065 0280 0800000A 		beq	.L872
 13066              		.loc 1 5363 5 discriminator 12
 13067 0284 003000E3 		movw	r3, #:lower16:.LC4
 13068 0288 003040E3 		movt	r3, #:upper16:.LC4
 13069 028c 002000E3 		movw	r2, #:lower16:.LC5
 13070 0290 002040E3 		movt	r2, #:upper16:.LC5
 13071 0294 F31401E3 		movw	r1, #5363
 13072 0298 000000E3 		movw	r0, #:lower16:.LC6
 13073 029c 000040E3 		movt	r0, #:upper16:.LC6
 13074 02a0 FEFFFFEB 		bl	RME_Log
 13075              	.L873:
 13076              		.loc 1 5363 5 discriminator 1
 13077 02a4 FEFFFFEA 		b	.L873
 13078              	.L872:
5364:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 325


5365:../../Source/Kernel/rme_kernel.c ****     /* Get the thread */
5366:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Del,struct RME_Thd_Struct*);
 13079              		.loc 1 5366 12 is_stmt 1
 13080 02a8 10301BE5 		ldr	r3, [fp, #-16]
 13081 02ac 0C3093E5 		ldr	r3, [r3, #12]
 13082              		.loc 1 5366 11
 13083 02b0 14300BE5 		str	r3, [fp, #-20]
5367:../../Source/Kernel/rme_kernel.c ****     
5368:../../Source/Kernel/rme_kernel.c ****     /* See if the thread is free. If still bound, we cannot proceed to deletion */
5369:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=RME_THD_FREE)
 13084              		.loc 1 5369 21
 13085 02b4 14301BE5 		ldr	r3, [fp, #-20]
 13086 02b8 143093E5 		ldr	r3, [r3, #20]
 13087              		.loc 1 5369 7
 13088 02bc 010073E3 		cmn	r3, #1
 13089 02c0 0700000A 		beq	.L874
5370:../../Source/Kernel/rme_kernel.c ****     {
5371:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5372:../../Source/Kernel/rme_kernel.c **** 
5373:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Thd_Del,Type_Stat);
 13090              		.loc 1 5373 9
 13091 02c4 10001BE5 		ldr	r0, [fp, #-16]
 13092 02c8 0C301BE5 		ldr	r3, [fp, #-12]
 13093 02cc FF38C3E3 		bic	r3, r3, #16711680
 13094 02d0 0320A0E1 		mov	r2, r3
 13095 02d4 0C101BE5 		ldr	r1, [fp, #-12]
 13096 02d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
5374:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13097              		.loc 1 5374 16
 13098 02dc CB30E0E3 		mvn	r3, #203
 13099 02e0 590000EA 		b	.L858
 13100              	.L874:
5375:../../Source/Kernel/rme_kernel.c ****     }
5376:../../Source/Kernel/rme_kernel.c ****     else
5377:../../Source/Kernel/rme_kernel.c ****     {
5378:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5379:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5380:../../Source/Kernel/rme_kernel.c ****     }
5381:../../Source/Kernel/rme_kernel.c ****     
5382:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
5383:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Thd_Del,Type_Stat);
 13101              		.loc 1 5383 5
 13102 02e4 10301BE5 		ldr	r3, [fp, #-16]
 13103 02e8 0020A0E3 		mov	r2, #0
 13104 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 13105 02f0 0300A0E1 		mov	r0, r3
 13106 02f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13107 02f8 0030A0E1 		mov	r3, r0
 13108 02fc 000053E3 		cmp	r3, #0
 13109 0300 1300001A 		bne	.L876
 13110              		.loc 1 5383 5 is_stmt 0 discriminator 1
 13111 0304 0030E0E3 		mvn	r3, #0
 13112 0308 4F0000EA 		b	.L858
 13113              	.L877:
5384:../../Source/Kernel/rme_kernel.c ****     
5385:../../Source/Kernel/rme_kernel.c ****     /* Is the thread using any invocation? If yes, just pop the invocation
5386:../../Source/Kernel/rme_kernel.c ****      * stack to empty, and free all the invocation stubs. This can be virtually
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 326


5387:../../Source/Kernel/rme_kernel.c ****      * unbounded if the invocation stack is just too deep. This is left to the
5388:../../Source/Kernel/rme_kernel.c ****      * user; if this is what he or she wants, be our guest. */
5389:../../Source/Kernel/rme_kernel.c ****     while(Thread->Ctx.Invstk.Next!=&(Thread->Ctx.Invstk))
5390:../../Source/Kernel/rme_kernel.c ****     {
5391:../../Source/Kernel/rme_kernel.c ****         Invocation=(struct RME_Inv_Struct*)(Thread->Ctx.Invstk.Next);
 13114              		.loc 1 5391 19 is_stmt 1
 13115 030c 14301BE5 		ldr	r3, [fp, #-20]
 13116 0310 4C3093E5 		ldr	r3, [r3, #76]
 13117 0314 18300BE5 		str	r3, [fp, #-24]
5392:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 13118              		.loc 1 5392 9
 13119 0318 18301BE5 		ldr	r3, [fp, #-24]
 13120 031c 042093E5 		ldr	r2, [r3, #4]
 13121 0320 18301BE5 		ldr	r3, [fp, #-24]
 13122 0324 003093E5 		ldr	r3, [r3]
 13123 0328 0310A0E1 		mov	r1, r3
 13124 032c 0200A0E1 		mov	r0, r2
 13125 0330 FEFFFFEB 		bl	_RME_List_Del
5393:../../Source/Kernel/rme_kernel.c ****         Invocation->Thd_Act=0U;
 13126              		.loc 1 5393 28
 13127 0334 18301BE5 		ldr	r3, [fp, #-24]
 13128 0338 0020A0E3 		mov	r2, #0
 13129 033c 0C2083E5 		str	r2, [r3, #12]
5394:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Invstk_Depth--;
 13130              		.loc 1 5394 20
 13131 0340 14301BE5 		ldr	r3, [fp, #-20]
 13132 0344 543093E5 		ldr	r3, [r3, #84]
 13133              		.loc 1 5394 33
 13134 0348 012043E2 		sub	r2, r3, #1
 13135 034c 14301BE5 		ldr	r3, [fp, #-20]
 13136 0350 542083E5 		str	r2, [r3, #84]
 13137              	.L876:
5389:../../Source/Kernel/rme_kernel.c ****     {
 13138              		.loc 1 5389 29
 13139 0354 14301BE5 		ldr	r3, [fp, #-20]
 13140 0358 4C2093E5 		ldr	r2, [r3, #76]
5389:../../Source/Kernel/rme_kernel.c ****     {
 13141              		.loc 1 5389 36
 13142 035c 14301BE5 		ldr	r3, [fp, #-20]
 13143 0360 4C3083E2 		add	r3, r3, #76
5389:../../Source/Kernel/rme_kernel.c ****     {
 13144              		.loc 1 5389 10
 13145 0364 030052E1 		cmp	r2, r3
 13146 0368 E7FFFF1A 		bne	.L877
5395:../../Source/Kernel/rme_kernel.c ****     }
5396:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thread->Ctx.Invstk_Depth==0U);
 13147              		.loc 1 5396 5
 13148 036c 14301BE5 		ldr	r3, [fp, #-20]
 13149 0370 543093E5 		ldr	r3, [r3, #84]
 13150 0374 000053E3 		cmp	r3, #0
 13151 0378 0800000A 		beq	.L878
 13152              		.loc 1 5396 5 is_stmt 0 discriminator 1
 13153 037c 003000E3 		movw	r3, #:lower16:.LC4
 13154 0380 003040E3 		movt	r3, #:upper16:.LC4
 13155 0384 002000E3 		movw	r2, #:lower16:.LC5
 13156 0388 002040E3 		movt	r2, #:upper16:.LC5
 13157 038c 141501E3 		movw	r1, #5396
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 327


 13158 0390 000000E3 		movw	r0, #:lower16:.LC6
 13159 0394 000040E3 		movt	r0, #:upper16:.LC6
 13160 0398 FEFFFFEB 		bl	RME_Log
 13161              	.L879:
 13162              		.loc 1 5396 5 discriminator 2
 13163 039c FEFFFFEA 		b	.L879
 13164              	.L878:
5397:../../Source/Kernel/rme_kernel.c ****     
5398:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
5399:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Thread->Sched.Prc->Head.Root_Ref), -1);
 13165              		.loc 1 5399 5 is_stmt 1
 13166 03a0 14301BE5 		ldr	r3, [fp, #-20]
 13167 03a4 2C3093E5 		ldr	r3, [r3, #44]
 13168 03a8 043083E2 		add	r3, r3, #4
 13169 03ac 0010E0E3 		mvn	r1, #0
 13170 03b0 0300A0E1 		mov	r0, r3
 13171 03b4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5400:../../Source/Kernel/rme_kernel.c ****     
5401:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
5402:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)==0U)
 13172              		.loc 1 5402 20
 13173 03b8 14301BE5 		ldr	r3, [fp, #-20]
 13174 03bc 443093E5 		ldr	r3, [r3, #68]
 13175              		.loc 1 5402 7
 13176 03c0 000053E3 		cmp	r3, #0
 13177 03c4 0F0000BA 		blt	.L880
5403:../../Source/Kernel/rme_kernel.c ****     {
5404:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5405:../../Source/Kernel/rme_kernel.c **** 
5406:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13178              		.loc 1 5406 9
 13179 03c8 14301BE5 		ldr	r3, [fp, #-20]
 13180 03cc 9C10A0E3 		mov	r1, #156
 13181 03d0 0300A0E1 		mov	r0, r3
 13182 03d4 FEFFFFEB 		bl	_RME_Kot_Erase
 13183 03d8 0030A0E1 		mov	r3, r0
 13184 03dc 000053E3 		cmp	r3, #0
 13185 03e0 1800000A 		beq	.L881
 13186              		.loc 1 5406 9 is_stmt 0 discriminator 1
 13187 03e4 003000E3 		movw	r3, #:lower16:.LC4
 13188 03e8 003040E3 		movt	r3, #:upper16:.LC4
 13189 03ec 002000E3 		movw	r2, #:lower16:.LC5
 13190 03f0 002040E3 		movt	r2, #:upper16:.LC5
 13191 03f4 1E1501E3 		movw	r1, #5406
 13192 03f8 000000E3 		movw	r0, #:lower16:.LC6
 13193 03fc 000040E3 		movt	r0, #:upper16:.LC6
 13194 0400 FEFFFFEB 		bl	RME_Log
 13195              	.L882:
 13196              		.loc 1 5406 9 discriminator 3
 13197 0404 FEFFFFEA 		b	.L882
 13198              	.L880:
5407:../../Source/Kernel/rme_kernel.c ****                                   RME_THD_SIZE(Thread->Ctx.Hyp_Attr))==0);
5408:../../Source/Kernel/rme_kernel.c ****     }
5409:../../Source/Kernel/rme_kernel.c ****     else
5410:../../Source/Kernel/rme_kernel.c ****     {
5411:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5412:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 328


5413:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 13199              		.loc 1 5413 9 is_stmt 1
 13200 0408 14301BE5 		ldr	r3, [fp, #-20]
 13201 040c 5810A0E3 		mov	r1, #88
 13202 0410 0300A0E1 		mov	r0, r3
 13203 0414 FEFFFFEB 		bl	_RME_Kot_Erase
 13204 0418 0030A0E1 		mov	r3, r0
 13205 041c 000053E3 		cmp	r3, #0
 13206 0420 0800000A 		beq	.L881
 13207              		.loc 1 5413 9 is_stmt 0 discriminator 1
 13208 0424 003000E3 		movw	r3, #:lower16:.LC4
 13209 0428 003040E3 		movt	r3, #:upper16:.LC4
 13210 042c 002000E3 		movw	r2, #:lower16:.LC5
 13211 0430 002040E3 		movt	r2, #:upper16:.LC5
 13212 0434 251501E3 		movw	r1, #5413
 13213 0438 000000E3 		movw	r0, #:lower16:.LC6
 13214 043c 000040E3 		movt	r0, #:upper16:.LC6
 13215 0440 FEFFFFEB 		bl	RME_Log
 13216              	.L883:
 13217              		.loc 1 5413 9 discriminator 4
 13218 0444 FEFFFFEA 		b	.L883
 13219              	.L881:
5414:../../Source/Kernel/rme_kernel.c ****                    RME_HYP_SIZE)==0);
5415:../../Source/Kernel/rme_kernel.c ****     }
5416:../../Source/Kernel/rme_kernel.c ****     
5417:../../Source/Kernel/rme_kernel.c ****     return 0;
 13220              		.loc 1 5417 12 is_stmt 1
 13221 0448 0030A0E3 		mov	r3, #0
 13222              	.L858:
5418:../../Source/Kernel/rme_kernel.c **** }
 13223              		.loc 1 5418 1
 13224 044c 0300A0E1 		mov	r0, r3
 13225 0450 04D04BE2 		sub	sp, fp, #4
 13226              		.cfi_def_cfa 13, 8
 13227              		@ sp needed
 13228 0454 0088BDE8 		pop	{fp, pc}
 13229              		.cfi_endproc
 13230              	.LFE57:
 13232              		.section	.text._RME_Thd_Sched_Bind,"ax",%progbits
 13233              		.align	2
 13234              		.syntax unified
 13235              		.arm
 13237              	_RME_Thd_Sched_Bind:
 13238              	.LFB58:
5419:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Del *************************************************/
5420:../../Source/Kernel/rme_kernel.c **** 
5421:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Bind ***********************************************
5422:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's priority level, and its scheduler thread. When
5423:../../Source/Kernel/rme_kernel.c ****               there are any state changes on this thread, a notification will
5424:../../Source/Kernel/rme_kernel.c ****               be sent to its scheduler thread. If the state of the thread
5425:../../Source/Kernel/rme_kernel.c ****               changes for multiple times, then only the most recent state will
5426:../../Source/Kernel/rme_kernel.c ****               be reflected in the scheduler's receive queue.
5427:../../Source/Kernel/rme_kernel.c ****               The scheduler and the threads that it schedule must be on the
5428:../../Source/Kernel/rme_kernel.c ****               same core. When a thread wants to go from one core to another,
5429:../../Source/Kernel/rme_kernel.c ****               it must be freed from that core first. 
5430:../../Source/Kernel/rme_kernel.c ****               This must be called on the same core with the Cap_Thd_Sched, and
5431:../../Source/Kernel/rme_kernel.c ****               the Cap_Thd itself must be free.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 329


5432:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5433:../../Source/Kernel/rme_kernel.c ****               priority.
5434:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5435:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5436:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5437:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Sched - The scheduler thread.
5438:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
5439:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The signal endpoint for scheduler
5440:../../Source/Kernel/rme_kernel.c ****                                   notifications. This signal endpoint will be
5441:../../Source/Kernel/rme_kernel.c ****                                   sent to whenever this thread has a fault, or
5442:../../Source/Kernel/rme_kernel.c ****                                   timeouts. This is purely optional; if it is
5443:../../Source/Kernel/rme_kernel.c ****                                   not needed, pass in RME_CID_NULL.
5444:../../Source/Kernel/rme_kernel.c ****               rme_tid_t TID - The thread ID. This is user-supplied, and the
5445:../../Source/Kernel/rme_kernel.c ****                               kernel will not check whether there are two
5446:../../Source/Kernel/rme_kernel.c ****                               threads that have the same TID.
5447:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level, higher is more critical.
5448:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Haddr - The kernel-accessible virtual memory address
5449:../../Source/Kernel/rme_kernel.c ****                                 for this thread's register sets, only used by
5450:../../Source/Kernel/rme_kernel.c ****                                 hypervisor-managed threads. For other threads,
5451:../../Source/Kernel/rme_kernel.c ****                                 please pass in NULL instead.
5452:../../Source/Kernel/rme_kernel.c **** Output      : None.
5453:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5454:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5455:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Bind(struct RME_Cap_Cpt* Cpt,
5456:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd,
5457:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd_Sched,
5458:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Sig,
5459:../../Source/Kernel/rme_kernel.c ****                                      rme_tid_t TID,
5460:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio,
5461:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Haddr)
5462:../../Source/Kernel/rme_kernel.c **** {
 13239              		.loc 1 5462 1
 13240              		.cfi_startproc
 13241              		@ args = 12, pretend = 0, frame = 56
 13242              		@ frame_needed = 1, uses_anonymous_args = 0
 13243 0000 00482DE9 		push	{fp, lr}
 13244              		.cfi_def_cfa_offset 8
 13245              		.cfi_offset 11, -8
 13246              		.cfi_offset 14, -4
 13247 0004 04B08DE2 		add	fp, sp, #4
 13248              		.cfi_def_cfa 11, 4
 13249 0008 38D04DE2 		sub	sp, sp, #56
 13250 000c 30000BE5 		str	r0, [fp, #-48]
 13251 0010 34100BE5 		str	r1, [fp, #-52]
 13252 0014 38200BE5 		str	r2, [fp, #-56]
 13253 0018 3C300BE5 		str	r3, [fp, #-60]
5463:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5464:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Sched;
5465:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
5466:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5467:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
5468:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_Old;
5469:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_New;
5470:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5471:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Hyp_Attr;
5472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
5473:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 330


5474:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5475:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 13254              		.loc 1 5475 5
 13255 001c 34301BE5 		ldr	r3, [fp, #-52]
 13256 0020 803003E2 		and	r3, r3, #128
 13257 0024 000053E3 		cmp	r3, #0
 13258 0028 1D00001A 		bne	.L885
 13259              		.loc 1 5475 5 is_stmt 0 discriminator 1
 13260 002c 30301BE5 		ldr	r3, [fp, #-48]
 13261 0030 142093E5 		ldr	r2, [r3, #20]
 13262 0034 34301BE5 		ldr	r3, [fp, #-52]
 13263 0038 030052E1 		cmp	r2, r3
 13264 003c 0100008A 		bhi	.L886
 13265              		.loc 1 5475 5 discriminator 3
 13266 0040 0230E0E3 		mvn	r3, #2
 13267 0044 DF0100EA 		b	.L887
 13268              	.L886:
 13269              		.loc 1 5475 5 discriminator 4
 13270 0048 34301BE5 		ldr	r3, [fp, #-52]
 13271 004c 8322A0E1 		lsl	r2, r3, #5
 13272 0050 30301BE5 		ldr	r3, [fp, #-48]
 13273 0054 0C3093E5 		ldr	r3, [r3, #12]
 13274 0058 033082E0 		add	r3, r2, r3
 13275 005c 08300BE5 		str	r3, [fp, #-8]
 13276 0060 08301BE5 		ldr	r3, [fp, #-8]
 13277 0064 0300A0E1 		mov	r0, r3
 13278 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13279 006c 14000BE5 		str	r0, [fp, #-20]
 13280 0070 14301BE5 		ldr	r3, [fp, #-20]
 13281 0074 2338A0E1 		lsr	r3, r3, #16
 13282 0078 7330EFE6 		uxtb	r3, r3
 13283 007c 020053E3 		cmp	r3, #2
 13284 0080 0100001A 		bne	.L888
 13285              		.loc 1 5475 5 discriminator 5
 13286 0084 0830E0E3 		mvn	r3, #8
 13287 0088 CE0100EA 		b	.L887
 13288              	.L888:
 13289              		.loc 1 5475 5 discriminator 6
 13290 008c 14301BE5 		ldr	r3, [fp, #-20]
 13291 0090 233CA0E1 		lsr	r3, r3, #24
 13292 0094 060053E3 		cmp	r3, #6
 13293 0098 4100000A 		beq	.L889
 13294              		.loc 1 5475 5 discriminator 7
 13295 009c 0130E0E3 		mvn	r3, #1
 13296 00a0 C80100EA 		b	.L887
 13297              	.L885:
 13298              		.loc 1 5475 5 discriminator 2
 13299 00a4 34301BE5 		ldr	r3, [fp, #-52]
 13300 00a8 2324A0E1 		lsr	r2, r3, #8
 13301 00ac 30301BE5 		ldr	r3, [fp, #-48]
 13302 00b0 143093E5 		ldr	r3, [r3, #20]
 13303 00b4 030052E1 		cmp	r2, r3
 13304 00b8 0100003A 		bcc	.L890
 13305              		.loc 1 5475 5 discriminator 8
 13306 00bc 0230E0E3 		mvn	r3, #2
 13307 00c0 C00100EA 		b	.L887
 13308              	.L890:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 331


 13309              		.loc 1 5475 5 discriminator 9
 13310 00c4 34301BE5 		ldr	r3, [fp, #-52]
 13311 00c8 2334A0E1 		lsr	r3, r3, #8
 13312 00cc 8322A0E1 		lsl	r2, r3, #5
 13313 00d0 30301BE5 		ldr	r3, [fp, #-48]
 13314 00d4 0C3093E5 		ldr	r3, [r3, #12]
 13315 00d8 033082E0 		add	r3, r2, r3
 13316 00dc 08300BE5 		str	r3, [fp, #-8]
 13317 00e0 08301BE5 		ldr	r3, [fp, #-8]
 13318 00e4 0300A0E1 		mov	r0, r3
 13319 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13320 00ec 14000BE5 		str	r0, [fp, #-20]
 13321 00f0 14301BE5 		ldr	r3, [fp, #-20]
 13322 00f4 2338A0E1 		lsr	r3, r3, #16
 13323 00f8 7330EFE6 		uxtb	r3, r3
 13324 00fc 020053E3 		cmp	r3, #2
 13325 0100 0100001A 		bne	.L891
 13326              		.loc 1 5475 5 discriminator 10
 13327 0104 0830E0E3 		mvn	r3, #8
 13328 0108 AE0100EA 		b	.L887
 13329              	.L891:
 13330              		.loc 1 5475 5 discriminator 11
 13331 010c 14301BE5 		ldr	r3, [fp, #-20]
 13332 0110 233CA0E1 		lsr	r3, r3, #24
 13333 0114 030053E3 		cmp	r3, #3
 13334 0118 0100000A 		beq	.L892
 13335              		.loc 1 5475 5 discriminator 12
 13336 011c 0130E0E3 		mvn	r3, #1
 13337 0120 A80100EA 		b	.L887
 13338              	.L892:
 13339              		.loc 1 5475 5 discriminator 13
 13340 0124 34301BE5 		ldr	r3, [fp, #-52]
 13341 0128 7F2003E2 		and	r2, r3, #127
 13342 012c 08301BE5 		ldr	r3, [fp, #-8]
 13343 0130 143093E5 		ldr	r3, [r3, #20]
 13344 0134 030052E1 		cmp	r2, r3
 13345 0138 0100003A 		bcc	.L893
 13346              		.loc 1 5475 5 discriminator 14
 13347 013c 0230E0E3 		mvn	r3, #2
 13348 0140 A00100EA 		b	.L887
 13349              	.L893:
 13350              		.loc 1 5475 5 discriminator 15
 13351 0144 34301BE5 		ldr	r3, [fp, #-52]
 13352 0148 7F3003E2 		and	r3, r3, #127
 13353 014c 8322A0E1 		lsl	r2, r3, #5
 13354 0150 08301BE5 		ldr	r3, [fp, #-8]
 13355 0154 0C3093E5 		ldr	r3, [r3, #12]
 13356 0158 033082E0 		add	r3, r2, r3
 13357 015c 08300BE5 		str	r3, [fp, #-8]
 13358 0160 08301BE5 		ldr	r3, [fp, #-8]
 13359 0164 0300A0E1 		mov	r0, r3
 13360 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13361 016c 14000BE5 		str	r0, [fp, #-20]
 13362 0170 14301BE5 		ldr	r3, [fp, #-20]
 13363 0174 2338A0E1 		lsr	r3, r3, #16
 13364 0178 7330EFE6 		uxtb	r3, r3
 13365 017c 020053E3 		cmp	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 332


 13366 0180 0100001A 		bne	.L894
 13367              		.loc 1 5475 5 discriminator 16
 13368 0184 0830E0E3 		mvn	r3, #8
 13369 0188 8E0100EA 		b	.L887
 13370              	.L894:
 13371              		.loc 1 5475 5 discriminator 17
 13372 018c 14301BE5 		ldr	r3, [fp, #-20]
 13373 0190 233CA0E1 		lsr	r3, r3, #24
 13374 0194 060053E3 		cmp	r3, #6
 13375 0198 0100000A 		beq	.L889
 13376              		.loc 1 5475 5 discriminator 18
 13377 019c 0130E0E3 		mvn	r3, #1
 13378 01a0 880100EA 		b	.L887
 13379              	.L889:
5476:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5477:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Sched,RME_CAP_TYPE_THD,
 13380              		.loc 1 5477 5 is_stmt 1
 13381 01a4 38301BE5 		ldr	r3, [fp, #-56]
 13382 01a8 803003E2 		and	r3, r3, #128
 13383 01ac 000053E3 		cmp	r3, #0
 13384 01b0 1D00001A 		bne	.L895
 13385              		.loc 1 5477 5 is_stmt 0 discriminator 1
 13386 01b4 30301BE5 		ldr	r3, [fp, #-48]
 13387 01b8 142093E5 		ldr	r2, [r3, #20]
 13388 01bc 38301BE5 		ldr	r3, [fp, #-56]
 13389 01c0 030052E1 		cmp	r2, r3
 13390 01c4 0100008A 		bhi	.L896
 13391              		.loc 1 5477 5 discriminator 3
 13392 01c8 0230E0E3 		mvn	r3, #2
 13393 01cc 7D0100EA 		b	.L887
 13394              	.L896:
 13395              		.loc 1 5477 5 discriminator 4
 13396 01d0 38301BE5 		ldr	r3, [fp, #-56]
 13397 01d4 8322A0E1 		lsl	r2, r3, #5
 13398 01d8 30301BE5 		ldr	r3, [fp, #-48]
 13399 01dc 0C3093E5 		ldr	r3, [r3, #12]
 13400 01e0 033082E0 		add	r3, r2, r3
 13401 01e4 0C300BE5 		str	r3, [fp, #-12]
 13402 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 13403 01ec 0300A0E1 		mov	r0, r3
 13404 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13405 01f4 14000BE5 		str	r0, [fp, #-20]
 13406 01f8 14301BE5 		ldr	r3, [fp, #-20]
 13407 01fc 2338A0E1 		lsr	r3, r3, #16
 13408 0200 7330EFE6 		uxtb	r3, r3
 13409 0204 020053E3 		cmp	r3, #2
 13410 0208 0100001A 		bne	.L897
 13411              		.loc 1 5477 5 discriminator 5
 13412 020c 0830E0E3 		mvn	r3, #8
 13413 0210 6C0100EA 		b	.L887
 13414              	.L897:
 13415              		.loc 1 5477 5 discriminator 6
 13416 0214 14301BE5 		ldr	r3, [fp, #-20]
 13417 0218 233CA0E1 		lsr	r3, r3, #24
 13418 021c 060053E3 		cmp	r3, #6
 13419 0220 4100000A 		beq	.L898
 13420              		.loc 1 5477 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 333


 13421 0224 0130E0E3 		mvn	r3, #1
 13422 0228 660100EA 		b	.L887
 13423              	.L895:
 13424              		.loc 1 5477 5 discriminator 2
 13425 022c 38301BE5 		ldr	r3, [fp, #-56]
 13426 0230 2324A0E1 		lsr	r2, r3, #8
 13427 0234 30301BE5 		ldr	r3, [fp, #-48]
 13428 0238 143093E5 		ldr	r3, [r3, #20]
 13429 023c 030052E1 		cmp	r2, r3
 13430 0240 0100003A 		bcc	.L899
 13431              		.loc 1 5477 5 discriminator 8
 13432 0244 0230E0E3 		mvn	r3, #2
 13433 0248 5E0100EA 		b	.L887
 13434              	.L899:
 13435              		.loc 1 5477 5 discriminator 9
 13436 024c 38301BE5 		ldr	r3, [fp, #-56]
 13437 0250 2334A0E1 		lsr	r3, r3, #8
 13438 0254 8322A0E1 		lsl	r2, r3, #5
 13439 0258 30301BE5 		ldr	r3, [fp, #-48]
 13440 025c 0C3093E5 		ldr	r3, [r3, #12]
 13441 0260 033082E0 		add	r3, r2, r3
 13442 0264 0C300BE5 		str	r3, [fp, #-12]
 13443 0268 0C301BE5 		ldr	r3, [fp, #-12]
 13444 026c 0300A0E1 		mov	r0, r3
 13445 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13446 0274 14000BE5 		str	r0, [fp, #-20]
 13447 0278 14301BE5 		ldr	r3, [fp, #-20]
 13448 027c 2338A0E1 		lsr	r3, r3, #16
 13449 0280 7330EFE6 		uxtb	r3, r3
 13450 0284 020053E3 		cmp	r3, #2
 13451 0288 0100001A 		bne	.L900
 13452              		.loc 1 5477 5 discriminator 10
 13453 028c 0830E0E3 		mvn	r3, #8
 13454 0290 4C0100EA 		b	.L887
 13455              	.L900:
 13456              		.loc 1 5477 5 discriminator 11
 13457 0294 14301BE5 		ldr	r3, [fp, #-20]
 13458 0298 233CA0E1 		lsr	r3, r3, #24
 13459 029c 030053E3 		cmp	r3, #3
 13460 02a0 0100000A 		beq	.L901
 13461              		.loc 1 5477 5 discriminator 12
 13462 02a4 0130E0E3 		mvn	r3, #1
 13463 02a8 460100EA 		b	.L887
 13464              	.L901:
 13465              		.loc 1 5477 5 discriminator 13
 13466 02ac 38301BE5 		ldr	r3, [fp, #-56]
 13467 02b0 7F2003E2 		and	r2, r3, #127
 13468 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 13469 02b8 143093E5 		ldr	r3, [r3, #20]
 13470 02bc 030052E1 		cmp	r2, r3
 13471 02c0 0100003A 		bcc	.L902
 13472              		.loc 1 5477 5 discriminator 14
 13473 02c4 0230E0E3 		mvn	r3, #2
 13474 02c8 3E0100EA 		b	.L887
 13475              	.L902:
 13476              		.loc 1 5477 5 discriminator 15
 13477 02cc 38301BE5 		ldr	r3, [fp, #-56]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 334


 13478 02d0 7F3003E2 		and	r3, r3, #127
 13479 02d4 8322A0E1 		lsl	r2, r3, #5
 13480 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 13481 02dc 0C3093E5 		ldr	r3, [r3, #12]
 13482 02e0 033082E0 		add	r3, r2, r3
 13483 02e4 0C300BE5 		str	r3, [fp, #-12]
 13484 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 13485 02ec 0300A0E1 		mov	r0, r3
 13486 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13487 02f4 14000BE5 		str	r0, [fp, #-20]
 13488 02f8 14301BE5 		ldr	r3, [fp, #-20]
 13489 02fc 2338A0E1 		lsr	r3, r3, #16
 13490 0300 7330EFE6 		uxtb	r3, r3
 13491 0304 020053E3 		cmp	r3, #2
 13492 0308 0100001A 		bne	.L903
 13493              		.loc 1 5477 5 discriminator 16
 13494 030c 0830E0E3 		mvn	r3, #8
 13495 0310 2C0100EA 		b	.L887
 13496              	.L903:
 13497              		.loc 1 5477 5 discriminator 17
 13498 0314 14301BE5 		ldr	r3, [fp, #-20]
 13499 0318 233CA0E1 		lsr	r3, r3, #24
 13500 031c 060053E3 		cmp	r3, #6
 13501 0320 0100000A 		beq	.L898
 13502              		.loc 1 5477 5 discriminator 18
 13503 0324 0130E0E3 		mvn	r3, #1
 13504 0328 260100EA 		b	.L887
 13505              	.L898:
5478:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Sched,Type_Stat);
5479:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5480:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_CHILD);
 13506              		.loc 1 5480 5 is_stmt 1
 13507 032c 08301BE5 		ldr	r3, [fp, #-8]
 13508 0330 083093E5 		ldr	r3, [r3, #8]
 13509 0334 023003E2 		and	r3, r3, #2
 13510 0338 000053E3 		cmp	r3, #0
 13511 033c 0100001A 		bne	.L904
 13512              		.loc 1 5480 5 is_stmt 0 discriminator 1
 13513 0340 0630E0E3 		mvn	r3, #6
 13514 0344 1F0100EA 		b	.L887
 13515              	.L904:
5481:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Sched,RME_THD_FLAG_SCHED_PARENT);
 13516              		.loc 1 5481 5 is_stmt 1
 13517 0348 0C301BE5 		ldr	r3, [fp, #-12]
 13518 034c 083093E5 		ldr	r3, [r3, #8]
 13519 0350 043003E2 		and	r3, r3, #4
 13520 0354 000053E3 		cmp	r3, #0
 13521 0358 0100001A 		bne	.L905
 13522              		.loc 1 5481 5 is_stmt 0 discriminator 1
 13523 035c 0630E0E3 		mvn	r3, #6
 13524 0360 180100EA 		b	.L887
 13525              	.L905:
5482:../../Source/Kernel/rme_kernel.c ****     
5483:../../Source/Kernel/rme_kernel.c ****     /* Check if we need the signal endpoint for this operation */
5484:../../Source/Kernel/rme_kernel.c ****     if(Cap_Sig!=RME_CID_NULL)
 13526              		.loc 1 5484 7 is_stmt 1
 13527 0364 3C301BE5 		ldr	r3, [fp, #-60]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 335


 13528 0368 020953E3 		cmp	r3, #32768
 13529 036c 6800000A 		beq	.L906
5485:../../Source/Kernel/rme_kernel.c ****     {
5486:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5487:../../Source/Kernel/rme_kernel.c **** 
5488:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 13530              		.loc 1 5488 9
 13531 0370 3C301BE5 		ldr	r3, [fp, #-60]
 13532 0374 803003E2 		and	r3, r3, #128
 13533 0378 000053E3 		cmp	r3, #0
 13534 037c 1D00001A 		bne	.L907
 13535              		.loc 1 5488 9 is_stmt 0 discriminator 1
 13536 0380 30301BE5 		ldr	r3, [fp, #-48]
 13537 0384 142093E5 		ldr	r2, [r3, #20]
 13538 0388 3C301BE5 		ldr	r3, [fp, #-60]
 13539 038c 030052E1 		cmp	r2, r3
 13540 0390 0100008A 		bhi	.L908
 13541              		.loc 1 5488 9 discriminator 3
 13542 0394 0230E0E3 		mvn	r3, #2
 13543 0398 0A0100EA 		b	.L887
 13544              	.L908:
 13545              		.loc 1 5488 9 discriminator 4
 13546 039c 3C301BE5 		ldr	r3, [fp, #-60]
 13547 03a0 8322A0E1 		lsl	r2, r3, #5
 13548 03a4 30301BE5 		ldr	r3, [fp, #-48]
 13549 03a8 0C3093E5 		ldr	r3, [r3, #12]
 13550 03ac 033082E0 		add	r3, r2, r3
 13551 03b0 10300BE5 		str	r3, [fp, #-16]
 13552 03b4 10301BE5 		ldr	r3, [fp, #-16]
 13553 03b8 0300A0E1 		mov	r0, r3
 13554 03bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13555 03c0 14000BE5 		str	r0, [fp, #-20]
 13556 03c4 14301BE5 		ldr	r3, [fp, #-20]
 13557 03c8 2338A0E1 		lsr	r3, r3, #16
 13558 03cc 7330EFE6 		uxtb	r3, r3
 13559 03d0 020053E3 		cmp	r3, #2
 13560 03d4 0100001A 		bne	.L909
 13561              		.loc 1 5488 9 discriminator 5
 13562 03d8 0830E0E3 		mvn	r3, #8
 13563 03dc F90000EA 		b	.L887
 13564              	.L909:
 13565              		.loc 1 5488 9 discriminator 6
 13566 03e0 14301BE5 		ldr	r3, [fp, #-20]
 13567 03e4 233CA0E1 		lsr	r3, r3, #24
 13568 03e8 080053E3 		cmp	r3, #8
 13569 03ec 4100000A 		beq	.L910
 13570              		.loc 1 5488 9 discriminator 7
 13571 03f0 0130E0E3 		mvn	r3, #1
 13572 03f4 F30000EA 		b	.L887
 13573              	.L907:
 13574              		.loc 1 5488 9 discriminator 2
 13575 03f8 3C301BE5 		ldr	r3, [fp, #-60]
 13576 03fc 2324A0E1 		lsr	r2, r3, #8
 13577 0400 30301BE5 		ldr	r3, [fp, #-48]
 13578 0404 143093E5 		ldr	r3, [r3, #20]
 13579 0408 030052E1 		cmp	r2, r3
 13580 040c 0100003A 		bcc	.L911
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 336


 13581              		.loc 1 5488 9 discriminator 8
 13582 0410 0230E0E3 		mvn	r3, #2
 13583 0414 EB0000EA 		b	.L887
 13584              	.L911:
 13585              		.loc 1 5488 9 discriminator 9
 13586 0418 3C301BE5 		ldr	r3, [fp, #-60]
 13587 041c 2334A0E1 		lsr	r3, r3, #8
 13588 0420 8322A0E1 		lsl	r2, r3, #5
 13589 0424 30301BE5 		ldr	r3, [fp, #-48]
 13590 0428 0C3093E5 		ldr	r3, [r3, #12]
 13591 042c 033082E0 		add	r3, r2, r3
 13592 0430 10300BE5 		str	r3, [fp, #-16]
 13593 0434 10301BE5 		ldr	r3, [fp, #-16]
 13594 0438 0300A0E1 		mov	r0, r3
 13595 043c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13596 0440 14000BE5 		str	r0, [fp, #-20]
 13597 0444 14301BE5 		ldr	r3, [fp, #-20]
 13598 0448 2338A0E1 		lsr	r3, r3, #16
 13599 044c 7330EFE6 		uxtb	r3, r3
 13600 0450 020053E3 		cmp	r3, #2
 13601 0454 0100001A 		bne	.L912
 13602              		.loc 1 5488 9 discriminator 10
 13603 0458 0830E0E3 		mvn	r3, #8
 13604 045c D90000EA 		b	.L887
 13605              	.L912:
 13606              		.loc 1 5488 9 discriminator 11
 13607 0460 14301BE5 		ldr	r3, [fp, #-20]
 13608 0464 233CA0E1 		lsr	r3, r3, #24
 13609 0468 030053E3 		cmp	r3, #3
 13610 046c 0100000A 		beq	.L913
 13611              		.loc 1 5488 9 discriminator 12
 13612 0470 0130E0E3 		mvn	r3, #1
 13613 0474 D30000EA 		b	.L887
 13614              	.L913:
 13615              		.loc 1 5488 9 discriminator 13
 13616 0478 3C301BE5 		ldr	r3, [fp, #-60]
 13617 047c 7F2003E2 		and	r2, r3, #127
 13618 0480 10301BE5 		ldr	r3, [fp, #-16]
 13619 0484 143093E5 		ldr	r3, [r3, #20]
 13620 0488 030052E1 		cmp	r2, r3
 13621 048c 0100003A 		bcc	.L914
 13622              		.loc 1 5488 9 discriminator 14
 13623 0490 0230E0E3 		mvn	r3, #2
 13624 0494 CB0000EA 		b	.L887
 13625              	.L914:
 13626              		.loc 1 5488 9 discriminator 15
 13627 0498 3C301BE5 		ldr	r3, [fp, #-60]
 13628 049c 7F3003E2 		and	r3, r3, #127
 13629 04a0 8322A0E1 		lsl	r2, r3, #5
 13630 04a4 10301BE5 		ldr	r3, [fp, #-16]
 13631 04a8 0C3093E5 		ldr	r3, [r3, #12]
 13632 04ac 033082E0 		add	r3, r2, r3
 13633 04b0 10300BE5 		str	r3, [fp, #-16]
 13634 04b4 10301BE5 		ldr	r3, [fp, #-16]
 13635 04b8 0300A0E1 		mov	r0, r3
 13636 04bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13637 04c0 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 337


 13638 04c4 14301BE5 		ldr	r3, [fp, #-20]
 13639 04c8 2338A0E1 		lsr	r3, r3, #16
 13640 04cc 7330EFE6 		uxtb	r3, r3
 13641 04d0 020053E3 		cmp	r3, #2
 13642 04d4 0100001A 		bne	.L915
 13643              		.loc 1 5488 9 discriminator 16
 13644 04d8 0830E0E3 		mvn	r3, #8
 13645 04dc B90000EA 		b	.L887
 13646              	.L915:
 13647              		.loc 1 5488 9 discriminator 17
 13648 04e0 14301BE5 		ldr	r3, [fp, #-20]
 13649 04e4 233CA0E1 		lsr	r3, r3, #24
 13650 04e8 080053E3 		cmp	r3, #8
 13651 04ec 0100000A 		beq	.L910
 13652              		.loc 1 5488 9 discriminator 18
 13653 04f0 0130E0E3 		mvn	r3, #1
 13654 04f4 B30000EA 		b	.L887
 13655              	.L910:
5489:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Sig*,Sig_Op,Type_Stat);
5490:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SCHED);
 13656              		.loc 1 5490 9 is_stmt 1
 13657 04f8 10301BE5 		ldr	r3, [fp, #-16]
 13658 04fc 083093E5 		ldr	r3, [r3, #8]
 13659 0500 203003E2 		and	r3, r3, #32
 13660 0504 000053E3 		cmp	r3, #0
 13661 0508 0300001A 		bne	.L916
 13662              		.loc 1 5490 9 is_stmt 0 discriminator 1
 13663 050c 0630E0E3 		mvn	r3, #6
 13664 0510 AC0000EA 		b	.L887
 13665              	.L906:
5491:../../Source/Kernel/rme_kernel.c ****     }
5492:../../Source/Kernel/rme_kernel.c ****     else
5493:../../Source/Kernel/rme_kernel.c ****     {
5494:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5495:../../Source/Kernel/rme_kernel.c **** 
5496:../../Source/Kernel/rme_kernel.c ****         Sig_Op=RME_NULL;
 13666              		.loc 1 5496 15 is_stmt 1
 13667 0514 0030A0E3 		mov	r3, #0
 13668 0518 10300BE5 		str	r3, [fp, #-16]
 13669              	.L916:
5497:../../Source/Kernel/rme_kernel.c ****     }
5498:../../Source/Kernel/rme_kernel.c **** 
5499:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound. If yes, we just quit */
5500:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 13670              		.loc 1 5500 12
 13671 051c 08301BE5 		ldr	r3, [fp, #-8]
 13672 0520 0C3093E5 		ldr	r3, [r3, #12]
 13673              		.loc 1 5500 11
 13674 0524 18300BE5 		str	r3, [fp, #-24]
5501:../../Source/Kernel/rme_kernel.c ****     Local_Old=Thread->Sched.Local;
 13675              		.loc 1 5501 14
 13676 0528 18301BE5 		ldr	r3, [fp, #-24]
 13677 052c 143093E5 		ldr	r3, [r3, #20]
 13678 0530 1C300BE5 		str	r3, [fp, #-28]
5502:../../Source/Kernel/rme_kernel.c ****     if(Local_Old!=RME_THD_FREE)
 13679              		.loc 1 5502 7
 13680 0534 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 338


 13681 0538 010073E3 		cmn	r3, #1
 13682 053c 0100000A 		beq	.L917
5503:../../Source/Kernel/rme_kernel.c ****     {
5504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5505:../../Source/Kernel/rme_kernel.c **** 
5506:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13683              		.loc 1 5506 16
 13684 0540 CB30E0E3 		mvn	r3, #203
 13685 0544 9F0000EA 		b	.L887
 13686              	.L917:
5507:../../Source/Kernel/rme_kernel.c ****     }
5508:../../Source/Kernel/rme_kernel.c ****     else
5509:../../Source/Kernel/rme_kernel.c ****     {
5510:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5511:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5512:../../Source/Kernel/rme_kernel.c ****     }
5513:../../Source/Kernel/rme_kernel.c ****     
5514:../../Source/Kernel/rme_kernel.c ****     /* See if the parent thread is on the same core with the current processor */
5515:../../Source/Kernel/rme_kernel.c ****     Local_New=RME_CPU_LOCAL();
 13687              		.loc 1 5515 14
 13688 0548 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 13689 054c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 13690 0550 20300BE5 		str	r3, [fp, #-32]
5516:../../Source/Kernel/rme_kernel.c ****     Scheduler=RME_CAP_GETOBJ(Thd_Sched,struct RME_Thd_Struct*);
 13691              		.loc 1 5516 15
 13692 0554 0C301BE5 		ldr	r3, [fp, #-12]
 13693 0558 0C3093E5 		ldr	r3, [r3, #12]
 13694              		.loc 1 5516 14
 13695 055c 24300BE5 		str	r3, [fp, #-36]
5517:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=Local_New)
 13696              		.loc 1 5517 24
 13697 0560 24301BE5 		ldr	r3, [fp, #-36]
 13698 0564 143093E5 		ldr	r3, [r3, #20]
 13699              		.loc 1 5517 7
 13700 0568 20201BE5 		ldr	r2, [fp, #-32]
 13701 056c 030052E1 		cmp	r2, r3
 13702 0570 0100000A 		beq	.L918
5518:../../Source/Kernel/rme_kernel.c ****     {
5519:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5520:../../Source/Kernel/rme_kernel.c **** 
5521:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13703              		.loc 1 5521 16
 13704 0574 CB30E0E3 		mvn	r3, #203
 13705 0578 920000EA 		b	.L887
 13706              	.L918:
5522:../../Source/Kernel/rme_kernel.c ****     }
5523:../../Source/Kernel/rme_kernel.c ****     else
5524:../../Source/Kernel/rme_kernel.c ****     {
5525:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5526:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5527:../../Source/Kernel/rme_kernel.c ****     }
5528:../../Source/Kernel/rme_kernel.c **** 
5529:../../Source/Kernel/rme_kernel.c ****     /* See if we are trying to bind to ourself - prohibited */
5530:../../Source/Kernel/rme_kernel.c ****     if(Thread==Scheduler)
 13707              		.loc 1 5530 7
 13708 057c 18201BE5 		ldr	r2, [fp, #-24]
 13709 0580 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 339


 13710 0584 030052E1 		cmp	r2, r3
 13711 0588 0100001A 		bne	.L919
5531:../../Source/Kernel/rme_kernel.c ****     {
5532:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5533:../../Source/Kernel/rme_kernel.c **** 
5534:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 13712              		.loc 1 5534 16
 13713 058c CE30E0E3 		mvn	r3, #206
 13714 0590 8C0000EA 		b	.L887
 13715              	.L919:
5535:../../Source/Kernel/rme_kernel.c ****     }
5536:../../Source/Kernel/rme_kernel.c ****     else
5537:../../Source/Kernel/rme_kernel.c ****     {
5538:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5539:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5540:../../Source/Kernel/rme_kernel.c ****     }
5541:../../Source/Kernel/rme_kernel.c ****     
5542:../../Source/Kernel/rme_kernel.c ****     /* See if the priority relationship is correct */
5543:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Prio_Max<Prio)
 13716              		.loc 1 5543 24
 13717 0594 24301BE5 		ldr	r3, [fp, #-36]
 13718 0598 243093E5 		ldr	r3, [r3, #36]
 13719              		.loc 1 5543 7
 13720 059c 08209BE5 		ldr	r2, [fp, #8]
 13721 05a0 030052E1 		cmp	r2, r3
 13722 05a4 0100009A 		bls	.L920
5544:../../Source/Kernel/rme_kernel.c ****     {
5545:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5546:../../Source/Kernel/rme_kernel.c **** 
5547:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 13723              		.loc 1 5547 16
 13724 05a8 CC30E0E3 		mvn	r3, #204
 13725 05ac 850000EA 		b	.L887
 13726              	.L920:
5548:../../Source/Kernel/rme_kernel.c ****     }
5549:../../Source/Kernel/rme_kernel.c ****     else
5550:../../Source/Kernel/rme_kernel.c ****     {
5551:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5552:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5553:../../Source/Kernel/rme_kernel.c ****     }
5554:../../Source/Kernel/rme_kernel.c ****     
5555:../../Source/Kernel/rme_kernel.c ****     /* Check whether the coprocessor context attribute is compatible with this core */
5556:../../Source/Kernel/rme_kernel.c ****     Hyp_Attr=Thread->Ctx.Hyp_Attr;
 13727              		.loc 1 5556 13
 13728 05b0 18301BE5 		ldr	r3, [fp, #-24]
 13729 05b4 443093E5 		ldr	r3, [r3, #68]
 13730 05b8 28300BE5 		str	r3, [fp, #-40]
5557:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5558:../../Source/Kernel/rme_kernel.c ****     if(__RME_Thd_Cop_Check(RME_THD_ATTR(Hyp_Attr))<0)
5559:../../Source/Kernel/rme_kernel.c ****     {
5560:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5561:../../Source/Kernel/rme_kernel.c **** 
5562:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
5563:../../Source/Kernel/rme_kernel.c ****     }
5564:../../Source/Kernel/rme_kernel.c **** #else
5565:../../Source/Kernel/rme_kernel.c ****     if(RME_THD_ATTR(Hyp_Attr)!=0U)
 13731              		.loc 1 5565 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 340


 13732 05bc 28301BE5 		ldr	r3, [fp, #-40]
 13733 05c0 0231C3E3 		bic	r3, r3, #-2147483648
 13734              		.loc 1 5565 7
 13735 05c4 000053E3 		cmp	r3, #0
 13736 05c8 0100000A 		beq	.L921
5566:../../Source/Kernel/rme_kernel.c ****     {
5567:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5568:../../Source/Kernel/rme_kernel.c **** 
5569:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 13737              		.loc 1 5569 16
 13738 05cc 0630E0E3 		mvn	r3, #6
 13739 05d0 7C0000EA 		b	.L887
 13740              	.L921:
5570:../../Source/Kernel/rme_kernel.c ****     }
5571:../../Source/Kernel/rme_kernel.c **** #endif
5572:../../Source/Kernel/rme_kernel.c ****     else
5573:../../Source/Kernel/rme_kernel.c ****     {
5574:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5575:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5576:../../Source/Kernel/rme_kernel.c ****     }
5577:../../Source/Kernel/rme_kernel.c **** 
5578:../../Source/Kernel/rme_kernel.c ****     /* Check the hypervisor context buffer passed in to see whether it is good */
5579:../../Source/Kernel/rme_kernel.c ****     if((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U))
 13741              		.loc 1 5579 7
 13742 05d4 0C309BE5 		ldr	r3, [fp, #12]
 13743 05d8 000053E3 		cmp	r3, #0
 13744 05dc 2000000A 		beq	.L922
 13745              		.loc 1 5579 55 discriminator 1
 13746 05e0 28301BE5 		ldr	r3, [fp, #-40]
 13747              		.loc 1 5579 25 discriminator 1
 13748 05e4 000053E3 		cmp	r3, #0
 13749 05e8 1D0000AA 		bge	.L922
5580:../../Source/Kernel/rme_kernel.c ****     {
5581:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5582:../../Source/Kernel/rme_kernel.c ****         
5583:../../Source/Kernel/rme_kernel.c ****         /* Register save area must be aligned to word boundary */
5584:../../Source/Kernel/rme_kernel.c ****         if(RME_IS_ALIGNED(Haddr)!=0U)
 13750              		.loc 1 5584 12
 13751 05ec 0C309BE5 		ldr	r3, [fp, #12]
 13752 05f0 033003E2 		and	r3, r3, #3
 13753              		.loc 1 5584 33
 13754 05f4 000053E3 		cmp	r3, #0
 13755 05f8 0100001A 		bne	.L923
 13756              		.loc 1 5584 33 is_stmt 0 discriminator 1
 13757 05fc 0130A0E3 		mov	r3, #1
 13758 0600 000000EA 		b	.L924
 13759              	.L923:
 13760              		.loc 1 5584 33 discriminator 2
 13761 0604 0030A0E3 		mov	r3, #0
 13762              	.L924:
 13763              		.loc 1 5584 11 is_stmt 1 discriminator 4
 13764 0608 000053E3 		cmp	r3, #0
 13765 060c 1200000A 		beq	.L925
5585:../../Source/Kernel/rme_kernel.c ****         {
5586:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5587:../../Source/Kernel/rme_kernel.c ****             
5588:../../Source/Kernel/rme_kernel.c ****             /* It needs to be safely accessible to the kernel as well */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 341


5589:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5590:../../Source/Kernel/rme_kernel.c ****             if(Haddr<RME_HYP_VA_BASE)
 13766              		.loc 1 5590 15
 13767 0610 0C309BE5 		ldr	r3, [fp, #12]
 13768 0614 1E0273E3 		cmn	r3, #-536870911
 13769 0618 0100008A 		bhi	.L926
5591:../../Source/Kernel/rme_kernel.c ****             {
5592:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
5593:../../Source/Kernel/rme_kernel.c **** 
5594:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PTH_HADDR;
 13770              		.loc 1 5594 24
 13771 061c CA30E0E3 		mvn	r3, #202
 13772 0620 680000EA 		b	.L887
 13773              	.L926:
5595:../../Source/Kernel/rme_kernel.c ****             }
5596:../../Source/Kernel/rme_kernel.c ****             else
5597:../../Source/Kernel/rme_kernel.c ****             {
5598:../../Source/Kernel/rme_kernel.c **** #endif
5599:../../Source/Kernel/rme_kernel.c ****                 End=Haddr+RME_REG_SIZE(RME_THD_ATTR(Thread->Ctx.Hyp_Attr));
 13774              		.loc 1 5599 20
 13775 0624 0C309BE5 		ldr	r3, [fp, #12]
 13776 0628 443083E2 		add	r3, r3, #68
 13777 062c 2C300BE5 		str	r3, [fp, #-44]
5600:../../Source/Kernel/rme_kernel.c ****                 if((End<=Haddr)||(End>(RME_HYP_VA_BASE+RME_HYP_VA_SIZE)))
 13778              		.loc 1 5600 19
 13779 0630 2C201BE5 		ldr	r2, [fp, #-44]
 13780 0634 0C309BE5 		ldr	r3, [fp, #12]
 13781 0638 030052E1 		cmp	r2, r3
 13782 063c 0400009A 		bls	.L927
 13783              		.loc 1 5600 32 discriminator 1
 13784 0640 2C201BE5 		ldr	r2, [fp, #-44]
 13785 0644 0030A0E3 		mov	r3, #0
 13786 0648 023042E3 		movt	r3, 8194
 13787 064c 030052E1 		cmp	r2, r3
 13788 0650 1100009A 		bls	.L940
 13789              	.L927:
5601:../../Source/Kernel/rme_kernel.c ****                 {
5602:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5603:../../Source/Kernel/rme_kernel.c **** 
5604:../../Source/Kernel/rme_kernel.c ****                     return RME_ERR_PTH_HADDR;
 13790              		.loc 1 5604 28
 13791 0654 CA30E0E3 		mvn	r3, #202
 13792 0658 5A0000EA 		b	.L887
 13793              	.L925:
5605:../../Source/Kernel/rme_kernel.c ****                 }
5606:../../Source/Kernel/rme_kernel.c ****                 else
5607:../../Source/Kernel/rme_kernel.c ****                 {
5608:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5609:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
5610:../../Source/Kernel/rme_kernel.c ****                 }
5611:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5612:../../Source/Kernel/rme_kernel.c ****             }
5613:../../Source/Kernel/rme_kernel.c **** #endif
5614:../../Source/Kernel/rme_kernel.c ****         }
5615:../../Source/Kernel/rme_kernel.c ****         /* Not aligned, exiting */
5616:../../Source/Kernel/rme_kernel.c ****         else
5617:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 342


5618:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5619:../../Source/Kernel/rme_kernel.c **** 
5620:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_HADDR;
 13794              		.loc 1 5620 20
 13795 065c CA30E0E3 		mvn	r3, #202
 13796 0660 580000EA 		b	.L887
 13797              	.L922:
5621:../../Source/Kernel/rme_kernel.c ****         }
5622:../../Source/Kernel/rme_kernel.c ****     }
5623:../../Source/Kernel/rme_kernel.c ****     /* We don't allow setting HYP addr for normal threads, nor do we allow
5624:../../Source/Kernel/rme_kernel.c ****      * setting HYP addr to NULL for hypervisor-managed threads. */
5625:../../Source/Kernel/rme_kernel.c ****     else if(((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)==0U))||
 13798              		.loc 1 5625 12
 13799 0664 0C309BE5 		ldr	r3, [fp, #12]
 13800 0668 000053E3 		cmp	r3, #0
 13801 066c 0200000A 		beq	.L930
 13802              		.loc 1 5625 61 discriminator 1
 13803 0670 28301BE5 		ldr	r3, [fp, #-40]
 13804              		.loc 1 5625 31 discriminator 1
 13805 0674 000053E3 		cmp	r3, #0
 13806 0678 050000AA 		bge	.L931
 13807              	.L930:
 13808              		.loc 1 5625 67 discriminator 3
 13809 067c 0C309BE5 		ldr	r3, [fp, #12]
 13810 0680 000053E3 		cmp	r3, #0
 13811 0684 0500001A 		bne	.L929
5626:../../Source/Kernel/rme_kernel.c ****             ((Haddr==RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U)))
 13812              		.loc 1 5626 61
 13813 0688 28301BE5 		ldr	r3, [fp, #-40]
 13814              		.loc 1 5626 31
 13815 068c 000053E3 		cmp	r3, #0
 13816 0690 020000AA 		bge	.L929
 13817              	.L931:
5627:../../Source/Kernel/rme_kernel.c ****     {
5628:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5629:../../Source/Kernel/rme_kernel.c **** 
5630:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
 13818              		.loc 1 5630 16
 13819 0694 CA30E0E3 		mvn	r3, #202
 13820 0698 4A0000EA 		b	.L887
 13821              	.L940:
5584:../../Source/Kernel/rme_kernel.c ****         {
 13822              		.loc 1 5584 11
 13823 069c 00F020E3 		nop
 13824              	.L929:
5631:../../Source/Kernel/rme_kernel.c ****     }
5632:../../Source/Kernel/rme_kernel.c ****     else
5633:../../Source/Kernel/rme_kernel.c ****     {
5634:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5635:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5636:../../Source/Kernel/rme_kernel.c ****     }
5637:../../Source/Kernel/rme_kernel.c **** 
5638:../../Source/Kernel/rme_kernel.c ****     /* Try to bind the thread */
5639:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)&(Thread->Sched.Local),
 13825              		.loc 1 5639 8
 13826 06a0 18301BE5 		ldr	r3, [fp, #-24]
 13827 06a4 143083E2 		add	r3, r3, #20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 343


 13828 06a8 1C101BE5 		ldr	r1, [fp, #-28]
 13829 06ac 20201BE5 		ldr	r2, [fp, #-32]
 13830 06b0 0300A0E1 		mov	r0, r3
 13831 06b4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13832 06b8 0030A0E1 		mov	r3, r0
 13833              		.loc 1 5639 7
 13834 06bc 000053E3 		cmp	r3, #0
 13835 06c0 0100001A 		bne	.L932
5640:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_Old,
5641:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_New)==RME_CASFAIL)
5642:../../Source/Kernel/rme_kernel.c ****     {
5643:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5644:../../Source/Kernel/rme_kernel.c **** 
5645:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 13836              		.loc 1 5645 16
 13837 06c4 C930E0E3 		mvn	r3, #201
 13838 06c8 3E0000EA 		b	.L887
 13839              	.L932:
5646:../../Source/Kernel/rme_kernel.c ****     }
5647:../../Source/Kernel/rme_kernel.c ****     else
5648:../../Source/Kernel/rme_kernel.c ****     {
5649:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5650:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5651:../../Source/Kernel/rme_kernel.c ****     }
5652:../../Source/Kernel/rme_kernel.c ****     
5653:../../Source/Kernel/rme_kernel.c ****     /* Increase the reference count of the scheduler thread struct - same core */
5654:../../Source/Kernel/rme_kernel.c ****     Scheduler->Sched.Sched_Ref++;
 13840              		.loc 1 5654 21
 13841 06cc 24301BE5 		ldr	r3, [fp, #-36]
 13842 06d0 303093E5 		ldr	r3, [r3, #48]
 13843              		.loc 1 5654 31
 13844 06d4 012083E2 		add	r2, r3, #1
 13845 06d8 24301BE5 		ldr	r3, [fp, #-36]
 13846 06dc 302083E5 		str	r2, [r3, #48]
5655:../../Source/Kernel/rme_kernel.c ****     
5656:../../Source/Kernel/rme_kernel.c ****     /* Bind successful and finish the work off. No need to worry about other cores'
5657:../../Source/Kernel/rme_kernel.c ****      * operations on this thread because this thread is already bound to this core.
5658:../../Source/Kernel/rme_kernel.c ****      * TID is half-word parameter-wise, but is stored and returned as a full word. */
5659:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd=Scheduler;
 13847              		.loc 1 5659 28
 13848 06e0 18301BE5 		ldr	r3, [fp, #-24]
 13849 06e4 24201BE5 		ldr	r2, [fp, #-36]
 13850 06e8 342083E5 		str	r2, [r3, #52]
5660:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 13851              		.loc 1 5660 23
 13852 06ec 18301BE5 		ldr	r3, [fp, #-24]
 13853 06f0 08209BE5 		ldr	r2, [fp, #8]
 13854 06f4 202083E5 		str	r2, [r3, #32]
5661:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=(rme_ptr_t)TID;
 13855              		.loc 1 5661 23
 13856 06f8 04209BE5 		ldr	r2, [fp, #4]
 13857              		.loc 1 5661 22
 13858 06fc 18301BE5 		ldr	r3, [fp, #-24]
 13859 0700 102083E5 		str	r2, [r3, #16]
5662:../../Source/Kernel/rme_kernel.c ****     
5663:../../Source/Kernel/rme_kernel.c ****     /* The state must be TIMEOUT or EXCPEND at this point */
5664:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT((Thread->Sched.State==RME_THD_TIMEOUT)||
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 344


 13860              		.loc 1 5664 5
 13861 0704 18301BE5 		ldr	r3, [fp, #-24]
 13862 0708 1C3093E5 		ldr	r3, [r3, #28]
 13863 070c 020053E3 		cmp	r3, #2
 13864 0710 0C00000A 		beq	.L933
 13865              		.loc 1 5664 5 is_stmt 0 discriminator 1
 13866 0714 18301BE5 		ldr	r3, [fp, #-24]
 13867 0718 1C3093E5 		ldr	r3, [r3, #28]
 13868 071c 030053E3 		cmp	r3, #3
 13869 0720 0800000A 		beq	.L933
 13870              		.loc 1 5664 5 discriminator 2
 13871 0724 003000E3 		movw	r3, #:lower16:.LC4
 13872 0728 003040E3 		movt	r3, #:upper16:.LC4
 13873 072c 002000E3 		movw	r2, #:lower16:.LC5
 13874 0730 002040E3 		movt	r2, #:upper16:.LC5
 13875 0734 201601E3 		movw	r1, #5664
 13876 0738 000000E3 		movw	r0, #:lower16:.LC6
 13877 073c 000040E3 		movt	r0, #:upper16:.LC6
 13878 0740 FEFFFFEB 		bl	RME_Log
 13879              	.L934:
 13880 0744 FEFFFFEA 		b	.L934
 13881              	.L933:
5665:../../Source/Kernel/rme_kernel.c ****                (Thread->Sched.State==RME_THD_EXCPEND));
5666:../../Source/Kernel/rme_kernel.c **** 
5667:../../Source/Kernel/rme_kernel.c ****     /* Tie the signal endpoint to it if not zero */
5668:../../Source/Kernel/rme_kernel.c ****     if(Sig_Op==0U)
 13882              		.loc 1 5668 7 is_stmt 1
 13883 0748 10301BE5 		ldr	r3, [fp, #-16]
 13884 074c 000053E3 		cmp	r3, #0
 13885 0750 0300001A 		bne	.L935
5669:../../Source/Kernel/rme_kernel.c ****     {
5670:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5671:../../Source/Kernel/rme_kernel.c **** 
5672:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=0U;
 13886              		.loc 1 5672 32
 13887 0754 18301BE5 		ldr	r3, [fp, #-24]
 13888 0758 0020A0E3 		mov	r2, #0
 13889 075c 382083E5 		str	r2, [r3, #56]
 13890 0760 100000EA 		b	.L936
 13891              	.L935:
5673:../../Source/Kernel/rme_kernel.c ****     }
5674:../../Source/Kernel/rme_kernel.c ****     else
5675:../../Source/Kernel/rme_kernel.c ****     {
5676:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5677:../../Source/Kernel/rme_kernel.c **** 
5678:../../Source/Kernel/rme_kernel.c ****         /* Convert to root cap */
5679:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 13892              		.loc 1 5679 33
 13893 0764 10301BE5 		ldr	r3, [fp, #-16]
 13894 0768 003093E5 		ldr	r3, [r3]
 13895 076c 7330FFE6 		uxth	r3, r3
 13896 0770 000053E3 		cmp	r3, #0
 13897 0774 0200000A 		beq	.L937
 13898              		.loc 1 5679 33 is_stmt 0 discriminator 1
 13899 0778 10301BE5 		ldr	r3, [fp, #-16]
 13900 077c 043093E5 		ldr	r3, [r3, #4]
 13901 0780 000000EA 		b	.L938
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 345


 13902              	.L937:
 13903              		.loc 1 5679 33 discriminator 2
 13904 0784 10301BE5 		ldr	r3, [fp, #-16]
 13905              	.L938:
 13906              		.loc 1 5679 32 is_stmt 1 discriminator 4
 13907 0788 18201BE5 		ldr	r2, [fp, #-24]
 13908 078c 383082E5 		str	r3, [r2, #56]
5680:../../Source/Kernel/rme_kernel.c ****         
5681:../../Source/Kernel/rme_kernel.c ****         /* Increase refcnt */
5682:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),1U);
 13909              		.loc 1 5682 9 discriminator 4
 13910 0790 18301BE5 		ldr	r3, [fp, #-24]
 13911 0794 383093E5 		ldr	r3, [r3, #56]
 13912 0798 043083E2 		add	r3, r3, #4
 13913 079c 0110A0E3 		mov	r1, #1
 13914 07a0 0300A0E1 		mov	r0, r3
 13915 07a4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 13916              	.L936:
5683:../../Source/Kernel/rme_kernel.c ****     }
5684:../../Source/Kernel/rme_kernel.c ****     
5685:../../Source/Kernel/rme_kernel.c ****     /* Set hypervisor context address if we're hypervisor-managed */
5686:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)!=0U)
 13917              		.loc 1 5686 20
 13918 07a8 18301BE5 		ldr	r3, [fp, #-24]
 13919 07ac 443093E5 		ldr	r3, [r3, #68]
 13920              		.loc 1 5686 7
 13921 07b0 000053E3 		cmp	r3, #0
 13922 07b4 020000AA 		bge	.L939
5687:../../Source/Kernel/rme_kernel.c ****     {
5688:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5689:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)Haddr;
 13923              		.loc 1 5689 25
 13924 07b8 0C209BE5 		ldr	r2, [fp, #12]
 13925              		.loc 1 5689 24
 13926 07bc 18301BE5 		ldr	r3, [fp, #-24]
 13927 07c0 482083E5 		str	r2, [r3, #72]
 13928              	.L939:
5690:../../Source/Kernel/rme_kernel.c ****     }
5691:../../Source/Kernel/rme_kernel.c ****     else
5692:../../Source/Kernel/rme_kernel.c ****     {
5693:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5694:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5695:../../Source/Kernel/rme_kernel.c ****     }
5696:../../Source/Kernel/rme_kernel.c ****     
5697:../../Source/Kernel/rme_kernel.c ****     return 0;
 13929              		.loc 1 5697 12
 13930 07c4 0030A0E3 		mov	r3, #0
 13931              	.L887:
5698:../../Source/Kernel/rme_kernel.c **** }
 13932              		.loc 1 5698 1
 13933 07c8 0300A0E1 		mov	r0, r3
 13934 07cc 04D04BE2 		sub	sp, fp, #4
 13935              		.cfi_def_cfa 13, 8
 13936              		@ sp needed
 13937 07d0 0088BDE8 		pop	{fp, pc}
 13938              		.cfi_endproc
 13939              	.LFE58:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 346


 13941              		.section	.text._RME_Thd_Sched_Free,"ax",%progbits
 13942              		.align	2
 13943              		.syntax unified
 13944              		.arm
 13946              	_RME_Thd_Sched_Free:
 13947              	.LFB59:
5699:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Bind ******************************************/
5700:../../Source/Kernel/rme_kernel.c **** 
5701:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Free ***********************************************
5702:../../Source/Kernel/rme_kernel.c **** Description : Free a thread from its current processor binding. This function
5703:../../Source/Kernel/rme_kernel.c ****               can only be executed from the same core on with the thread.
5704:../../Source/Kernel/rme_kernel.c ****               To free a thread from a core, it must not be the scheduler of
5705:../../Source/Kernel/rme_kernel.c ****               someone else. It could have pending scheduler notifications to
5706:../../Source/Kernel/rme_kernel.c ****               its parent though.
5707:../../Source/Kernel/rme_kernel.c ****               This system call can cause a potential context switch.
5708:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5709:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
5710:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5711:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5712:../../Source/Kernel/rme_kernel.c **** Output      : None.
5713:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5714:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5715:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Free(struct RME_Cap_Cpt* Cpt, 
5716:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5717:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd)
5718:../../Source/Kernel/rme_kernel.c **** {
 13948              		.loc 1 5718 1
 13949              		.cfi_startproc
 13950              		@ args = 0, pretend = 0, frame = 32
 13951              		@ frame_needed = 1, uses_anonymous_args = 0
 13952 0000 00482DE9 		push	{fp, lr}
 13953              		.cfi_def_cfa_offset 8
 13954              		.cfi_offset 11, -8
 13955              		.cfi_offset 14, -4
 13956 0004 04B08DE2 		add	fp, sp, #4
 13957              		.cfi_def_cfa 11, 4
 13958 0008 20D04DE2 		sub	sp, sp, #32
 13959 000c 18000BE5 		str	r0, [fp, #-24]
 13960 0010 1C100BE5 		str	r1, [fp, #-28]
 13961 0014 20200BE5 		str	r2, [fp, #-32]
5719:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5720:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5721:../../Source/Kernel/rme_kernel.c ****     /* These are used to free the thread */
5722:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5723:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5724:../../Source/Kernel/rme_kernel.c ****     
5725:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5726:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 13962              		.loc 1 5726 5
 13963 0018 20301BE5 		ldr	r3, [fp, #-32]
 13964 001c 803003E2 		and	r3, r3, #128
 13965 0020 000053E3 		cmp	r3, #0
 13966 0024 1D00001A 		bne	.L942
 13967              		.loc 1 5726 5 is_stmt 0 discriminator 1
 13968 0028 18301BE5 		ldr	r3, [fp, #-24]
 13969 002c 142093E5 		ldr	r2, [r3, #20]
 13970 0030 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 347


 13971 0034 030052E1 		cmp	r2, r3
 13972 0038 0100008A 		bhi	.L943
 13973              		.loc 1 5726 5 discriminator 3
 13974 003c 0230E0E3 		mvn	r3, #2
 13975 0040 DC0000EA 		b	.L944
 13976              	.L943:
 13977              		.loc 1 5726 5 discriminator 4
 13978 0044 20301BE5 		ldr	r3, [fp, #-32]
 13979 0048 8322A0E1 		lsl	r2, r3, #5
 13980 004c 18301BE5 		ldr	r3, [fp, #-24]
 13981 0050 0C3093E5 		ldr	r3, [r3, #12]
 13982 0054 033082E0 		add	r3, r2, r3
 13983 0058 08300BE5 		str	r3, [fp, #-8]
 13984 005c 08301BE5 		ldr	r3, [fp, #-8]
 13985 0060 0300A0E1 		mov	r0, r3
 13986 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13987 0068 0C000BE5 		str	r0, [fp, #-12]
 13988 006c 0C301BE5 		ldr	r3, [fp, #-12]
 13989 0070 2338A0E1 		lsr	r3, r3, #16
 13990 0074 7330EFE6 		uxtb	r3, r3
 13991 0078 020053E3 		cmp	r3, #2
 13992 007c 0100001A 		bne	.L945
 13993              		.loc 1 5726 5 discriminator 5
 13994 0080 0830E0E3 		mvn	r3, #8
 13995 0084 CB0000EA 		b	.L944
 13996              	.L945:
 13997              		.loc 1 5726 5 discriminator 6
 13998 0088 0C301BE5 		ldr	r3, [fp, #-12]
 13999 008c 233CA0E1 		lsr	r3, r3, #24
 14000 0090 060053E3 		cmp	r3, #6
 14001 0094 4100000A 		beq	.L946
 14002              		.loc 1 5726 5 discriminator 7
 14003 0098 0130E0E3 		mvn	r3, #1
 14004 009c C50000EA 		b	.L944
 14005              	.L942:
 14006              		.loc 1 5726 5 discriminator 2
 14007 00a0 20301BE5 		ldr	r3, [fp, #-32]
 14008 00a4 2324A0E1 		lsr	r2, r3, #8
 14009 00a8 18301BE5 		ldr	r3, [fp, #-24]
 14010 00ac 143093E5 		ldr	r3, [r3, #20]
 14011 00b0 030052E1 		cmp	r2, r3
 14012 00b4 0100003A 		bcc	.L947
 14013              		.loc 1 5726 5 discriminator 8
 14014 00b8 0230E0E3 		mvn	r3, #2
 14015 00bc BD0000EA 		b	.L944
 14016              	.L947:
 14017              		.loc 1 5726 5 discriminator 9
 14018 00c0 20301BE5 		ldr	r3, [fp, #-32]
 14019 00c4 2334A0E1 		lsr	r3, r3, #8
 14020 00c8 8322A0E1 		lsl	r2, r3, #5
 14021 00cc 18301BE5 		ldr	r3, [fp, #-24]
 14022 00d0 0C3093E5 		ldr	r3, [r3, #12]
 14023 00d4 033082E0 		add	r3, r2, r3
 14024 00d8 08300BE5 		str	r3, [fp, #-8]
 14025 00dc 08301BE5 		ldr	r3, [fp, #-8]
 14026 00e0 0300A0E1 		mov	r0, r3
 14027 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 348


 14028 00e8 0C000BE5 		str	r0, [fp, #-12]
 14029 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 14030 00f0 2338A0E1 		lsr	r3, r3, #16
 14031 00f4 7330EFE6 		uxtb	r3, r3
 14032 00f8 020053E3 		cmp	r3, #2
 14033 00fc 0100001A 		bne	.L948
 14034              		.loc 1 5726 5 discriminator 10
 14035 0100 0830E0E3 		mvn	r3, #8
 14036 0104 AB0000EA 		b	.L944
 14037              	.L948:
 14038              		.loc 1 5726 5 discriminator 11
 14039 0108 0C301BE5 		ldr	r3, [fp, #-12]
 14040 010c 233CA0E1 		lsr	r3, r3, #24
 14041 0110 030053E3 		cmp	r3, #3
 14042 0114 0100000A 		beq	.L949
 14043              		.loc 1 5726 5 discriminator 12
 14044 0118 0130E0E3 		mvn	r3, #1
 14045 011c A50000EA 		b	.L944
 14046              	.L949:
 14047              		.loc 1 5726 5 discriminator 13
 14048 0120 20301BE5 		ldr	r3, [fp, #-32]
 14049 0124 7F2003E2 		and	r2, r3, #127
 14050 0128 08301BE5 		ldr	r3, [fp, #-8]
 14051 012c 143093E5 		ldr	r3, [r3, #20]
 14052 0130 030052E1 		cmp	r2, r3
 14053 0134 0100003A 		bcc	.L950
 14054              		.loc 1 5726 5 discriminator 14
 14055 0138 0230E0E3 		mvn	r3, #2
 14056 013c 9D0000EA 		b	.L944
 14057              	.L950:
 14058              		.loc 1 5726 5 discriminator 15
 14059 0140 20301BE5 		ldr	r3, [fp, #-32]
 14060 0144 7F3003E2 		and	r3, r3, #127
 14061 0148 8322A0E1 		lsl	r2, r3, #5
 14062 014c 08301BE5 		ldr	r3, [fp, #-8]
 14063 0150 0C3093E5 		ldr	r3, [r3, #12]
 14064 0154 033082E0 		add	r3, r2, r3
 14065 0158 08300BE5 		str	r3, [fp, #-8]
 14066 015c 08301BE5 		ldr	r3, [fp, #-8]
 14067 0160 0300A0E1 		mov	r0, r3
 14068 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14069 0168 0C000BE5 		str	r0, [fp, #-12]
 14070 016c 0C301BE5 		ldr	r3, [fp, #-12]
 14071 0170 2338A0E1 		lsr	r3, r3, #16
 14072 0174 7330EFE6 		uxtb	r3, r3
 14073 0178 020053E3 		cmp	r3, #2
 14074 017c 0100001A 		bne	.L951
 14075              		.loc 1 5726 5 discriminator 16
 14076 0180 0830E0E3 		mvn	r3, #8
 14077 0184 8B0000EA 		b	.L944
 14078              	.L951:
 14079              		.loc 1 5726 5 discriminator 17
 14080 0188 0C301BE5 		ldr	r3, [fp, #-12]
 14081 018c 233CA0E1 		lsr	r3, r3, #24
 14082 0190 060053E3 		cmp	r3, #6
 14083 0194 0100000A 		beq	.L946
 14084              		.loc 1 5726 5 discriminator 18
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 349


 14085 0198 0130E0E3 		mvn	r3, #1
 14086 019c 850000EA 		b	.L944
 14087              	.L946:
5727:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5728:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5729:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_FREE);
 14088              		.loc 1 5729 5 is_stmt 1
 14089 01a0 08301BE5 		ldr	r3, [fp, #-8]
 14090 01a4 083093E5 		ldr	r3, [r3, #8]
 14091 01a8 103003E2 		and	r3, r3, #16
 14092 01ac 000053E3 		cmp	r3, #0
 14093 01b0 0100001A 		bne	.L952
 14094              		.loc 1 5729 5 is_stmt 0 discriminator 1
 14095 01b4 0630E0E3 		mvn	r3, #6
 14096 01b8 7E0000EA 		b	.L944
 14097              	.L952:
5730:../../Source/Kernel/rme_kernel.c ****     
5731:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound to this core */
5732:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14098              		.loc 1 5732 10 is_stmt 1
 14099 01bc 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14100 01c0 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14101 01c4 10300BE5 		str	r3, [fp, #-16]
5733:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 14102              		.loc 1 5733 48
 14103 01c8 08301BE5 		ldr	r3, [fp, #-8]
 14104 01cc 0C3093E5 		ldr	r3, [r3, #12]
 14105              		.loc 1 5733 11
 14106 01d0 14300BE5 		str	r3, [fp, #-20]
5734:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 14107              		.loc 1 5734 21
 14108 01d4 14301BE5 		ldr	r3, [fp, #-20]
 14109 01d8 143093E5 		ldr	r3, [r3, #20]
 14110              		.loc 1 5734 7
 14111 01dc 10201BE5 		ldr	r2, [fp, #-16]
 14112 01e0 030052E1 		cmp	r2, r3
 14113 01e4 0100000A 		beq	.L953
5735:../../Source/Kernel/rme_kernel.c ****     {
5736:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5737:../../Source/Kernel/rme_kernel.c **** 
5738:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14114              		.loc 1 5738 16
 14115 01e8 CB30E0E3 		mvn	r3, #203
 14116 01ec 710000EA 		b	.L944
 14117              	.L953:
5739:../../Source/Kernel/rme_kernel.c ****     }
5740:../../Source/Kernel/rme_kernel.c ****     else
5741:../../Source/Kernel/rme_kernel.c ****     {
5742:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5743:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5744:../../Source/Kernel/rme_kernel.c ****     }
5745:../../Source/Kernel/rme_kernel.c ****     
5746:../../Source/Kernel/rme_kernel.c ****     /* Am I referenced by someone as a scheduler? If yes, we cannot unbind. Because
5747:../../Source/Kernel/rme_kernel.c ****      * boot-time thread's refcnt will never be 0, thus they will never pass this checking */
5748:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Ref!=0U)
 14118              		.loc 1 5748 21
 14119 01f0 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 350


 14120 01f4 303093E5 		ldr	r3, [r3, #48]
 14121              		.loc 1 5748 7
 14122 01f8 000053E3 		cmp	r3, #0
 14123 01fc 0100000A 		beq	.L954
5749:../../Source/Kernel/rme_kernel.c ****     {
5750:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5751:../../Source/Kernel/rme_kernel.c **** 
5752:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_REFCNT;
 14124              		.loc 1 5752 16
 14125 0200 CD30E0E3 		mvn	r3, #205
 14126 0204 6B0000EA 		b	.L944
 14127              	.L954:
5753:../../Source/Kernel/rme_kernel.c ****     }
5754:../../Source/Kernel/rme_kernel.c ****     else
5755:../../Source/Kernel/rme_kernel.c ****     {
5756:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5757:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5758:../../Source/Kernel/rme_kernel.c ****     }
5759:../../Source/Kernel/rme_kernel.c **** 
5760:../../Source/Kernel/rme_kernel.c ****     /* Decrease the parent's reference count - on the same core */
5761:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd->Sched.Sched_Ref--;
 14128              		.loc 1 5761 18
 14129 0208 14301BE5 		ldr	r3, [fp, #-20]
 14130 020c 343093E5 		ldr	r3, [r3, #52]
 14131              		.loc 1 5761 35
 14132 0210 302093E5 		ldr	r2, [r3, #48]
 14133              		.loc 1 5761 45
 14134 0214 012042E2 		sub	r2, r2, #1
 14135 0218 302083E5 		str	r2, [r3, #48]
5762:../../Source/Kernel/rme_kernel.c **** 
5763:../../Source/Kernel/rme_kernel.c ****     /* See if we have any events sent to the parent. If yes, remove that event */
5764:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Notif.Next!=&(Thread->Sched.Notif))
 14136              		.loc 1 5764 27
 14137 021c 14301BE5 		ldr	r3, [fp, #-20]
 14138 0220 082093E5 		ldr	r2, [r3, #8]
 14139              		.loc 1 5764 34
 14140 0224 14301BE5 		ldr	r3, [fp, #-20]
 14141 0228 083083E2 		add	r3, r3, #8
 14142              		.loc 1 5764 7
 14143 022c 030052E1 		cmp	r2, r3
 14144 0230 0A00000A 		beq	.L955
5765:../../Source/Kernel/rme_kernel.c ****     {
5766:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5767:../../Source/Kernel/rme_kernel.c **** 
5768:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 14145              		.loc 1 5768 9
 14146 0234 14301BE5 		ldr	r3, [fp, #-20]
 14147 0238 0C2093E5 		ldr	r2, [r3, #12]
 14148 023c 14301BE5 		ldr	r3, [fp, #-20]
 14149 0240 083093E5 		ldr	r3, [r3, #8]
 14150 0244 0310A0E1 		mov	r1, r3
 14151 0248 0200A0E1 		mov	r0, r2
 14152 024c FEFFFFEB 		bl	_RME_List_Del
5769:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Thread->Sched.Notif));
 14153              		.loc 1 5769 9
 14154 0250 14301BE5 		ldr	r3, [fp, #-20]
 14155 0254 083083E2 		add	r3, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 351


 14156 0258 0300A0E1 		mov	r0, r3
 14157 025c FEFFFFEB 		bl	_RME_List_Crt
 14158              	.L955:
5770:../../Source/Kernel/rme_kernel.c ****     }
5771:../../Source/Kernel/rme_kernel.c ****     else
5772:../../Source/Kernel/rme_kernel.c ****     {
5773:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5774:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5775:../../Source/Kernel/rme_kernel.c ****     }
5776:../../Source/Kernel/rme_kernel.c **** 
5777:../../Source/Kernel/rme_kernel.c ****     /* If we have an scheduler event endpoint, release it */
5778:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Sig!=RME_NULL)
 14159              		.loc 1 5778 21
 14160 0260 14301BE5 		ldr	r3, [fp, #-20]
 14161 0264 383093E5 		ldr	r3, [r3, #56]
 14162              		.loc 1 5778 7
 14163 0268 000053E3 		cmp	r3, #0
 14164 026c 0500000A 		beq	.L956
5779:../../Source/Kernel/rme_kernel.c ****     {
5780:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5781:../../Source/Kernel/rme_kernel.c **** 
5782:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),-1);
 14165              		.loc 1 5782 9
 14166 0270 14301BE5 		ldr	r3, [fp, #-20]
 14167 0274 383093E5 		ldr	r3, [r3, #56]
 14168 0278 043083E2 		add	r3, r3, #4
 14169 027c 0010E0E3 		mvn	r1, #0
 14170 0280 0300A0E1 		mov	r0, r3
 14171 0284 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14172              	.L956:
5783:../../Source/Kernel/rme_kernel.c ****     }
5784:../../Source/Kernel/rme_kernel.c ****     else
5785:../../Source/Kernel/rme_kernel.c ****     {
5786:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5787:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5788:../../Source/Kernel/rme_kernel.c ****     }
5789:../../Source/Kernel/rme_kernel.c **** 
5790:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5791:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 14173              		.loc 1 5791 5
 14174 0288 0010A0E3 		mov	r1, #0
 14175 028c 1C001BE5 		ldr	r0, [fp, #-28]
 14176 0290 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5792:../../Source/Kernel/rme_kernel.c ****     
5793:../../Source/Kernel/rme_kernel.c ****     /* If the thread is ready, kick it out of the run queue. If it is blocked on
5794:../../Source/Kernel/rme_kernel.c ****      * some endpoint, end the blocking and set the return value to RME_ERR_SIV_FREE.
5795:../../Source/Kernel/rme_kernel.c ****      * If the thread is killed due to a fault, we will not clear the fault here, and
5796:../../Source/Kernel/rme_kernel.c ****      * we will wait for the Exec_Set to clear it. No scheduler notifications are sent
5797:../../Source/Kernel/rme_kernel.c ****      * because the thread is being freed and notifications at this point are useless. */
5798:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_READY)
 14177              		.loc 1 5798 21
 14178 0294 14301BE5 		ldr	r3, [fp, #-20]
 14179 0298 1C3093E5 		ldr	r3, [r3, #28]
 14180              		.loc 1 5798 7
 14181 029c 000053E3 		cmp	r3, #0
 14182 02a0 0500001A 		bne	.L957
5799:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 352


5800:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5801:../../Source/Kernel/rme_kernel.c **** 
5802:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue and timeout but don't notify parent */
5803:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thread);
 14183              		.loc 1 5803 9
 14184 02a4 14001BE5 		ldr	r0, [fp, #-20]
 14185 02a8 FEFFFFEB 		bl	_RME_Run_Del
5804:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14186              		.loc 1 5804 28
 14187 02ac 14301BE5 		ldr	r3, [fp, #-20]
 14188 02b0 0220A0E3 		mov	r2, #2
 14189 02b4 1C2083E5 		str	r2, [r3, #28]
 14190 02b8 130000EA 		b	.L958
 14191              	.L957:
5805:../../Source/Kernel/rme_kernel.c ****     }
5806:../../Source/Kernel/rme_kernel.c ****     /* BLOCKED */
5807:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_BLOCKED)
 14192              		.loc 1 5807 26
 14193 02bc 14301BE5 		ldr	r3, [fp, #-20]
 14194 02c0 1C3093E5 		ldr	r3, [r3, #28]
 14195              		.loc 1 5807 12
 14196 02c4 010053E3 		cmp	r3, #1
 14197 02c8 0F00001A 		bne	.L958
5808:../../Source/Kernel/rme_kernel.c ****     {
5809:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5810:../../Source/Kernel/rme_kernel.c ****         
5811:../../Source/Kernel/rme_kernel.c ****         /* If it got here, the thread that is operated on cannot be the current 
5812:../../Source/Kernel/rme_kernel.c ****          * thread, so we are not overwriting the return value of the caller. */
5813:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thread->Ctx.Reg->Reg),RME_ERR_SIV_FREE);
 14198              		.loc 1 5813 43
 14199 02cc 14301BE5 		ldr	r3, [fp, #-20]
 14200 02d0 483093E5 		ldr	r3, [r3, #72]
 14201              		.loc 1 5813 9
 14202 02d4 CE1E0FE3 		movw	r1, #65230
 14203 02d8 FF1F4FE3 		movt	r1, 65535
 14204 02dc 0300A0E1 		mov	r0, r3
 14205 02e0 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5814:../../Source/Kernel/rme_kernel.c ****         /* Release signal and thread from each other */
5815:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal->Thd=RME_NULL;
 14206              		.loc 1 5815 22
 14207 02e4 14301BE5 		ldr	r3, [fp, #-20]
 14208 02e8 283093E5 		ldr	r3, [r3, #40]
 14209              		.loc 1 5815 34
 14210 02ec 0020A0E3 		mov	r2, #0
 14211 02f0 182083E5 		str	r2, [r3, #24]
5816:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal=RME_NULL;
 14212              		.loc 1 5816 29
 14213 02f4 14301BE5 		ldr	r3, [fp, #-20]
 14214 02f8 0020A0E3 		mov	r2, #0
 14215 02fc 282083E5 		str	r2, [r3, #40]
5817:../../Source/Kernel/rme_kernel.c ****         /* Timeout but don't notify parent */
5818:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 14216              		.loc 1 5818 28
 14217 0300 14301BE5 		ldr	r3, [fp, #-20]
 14218 0304 0220A0E3 		mov	r2, #2
 14219 0308 1C2083E5 		str	r2, [r3, #28]
 14220              	.L958:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 353


5819:../../Source/Kernel/rme_kernel.c ****     }
5820:../../Source/Kernel/rme_kernel.c ****     /* TIMEOUT or EXCPEND */
5821:../../Source/Kernel/rme_kernel.c ****     else
5822:../../Source/Kernel/rme_kernel.c ****     {
5823:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5824:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5825:../../Source/Kernel/rme_kernel.c ****     }
5826:../../Source/Kernel/rme_kernel.c **** 
5827:../../Source/Kernel/rme_kernel.c ****     /* Cleanup all remaining timeslices on it */
5828:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 14221              		.loc 1 5828 24
 14222 030c 14301BE5 		ldr	r3, [fp, #-20]
 14223 0310 0020A0E3 		mov	r2, #0
 14224 0314 182083E5 		str	r2, [r3, #24]
5829:../../Source/Kernel/rme_kernel.c ****     
5830:../../Source/Kernel/rme_kernel.c ****     /* Check if this thread is the current one and we may need to switch away */
5831:../../Source/Kernel/rme_kernel.c ****     if(Local->Thd_Cur==Thread)
 14225              		.loc 1 5831 13
 14226 0318 10301BE5 		ldr	r3, [fp, #-16]
 14227 031c 043093E5 		ldr	r3, [r3, #4]
 14228              		.loc 1 5831 7
 14229 0320 14201BE5 		ldr	r2, [fp, #-20]
 14230 0324 030052E1 		cmp	r2, r3
 14231 0328 1C00001A 		bne	.L959
5832:../../Source/Kernel/rme_kernel.c ****     {
5833:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5834:../../Source/Kernel/rme_kernel.c **** 
5835:../../Source/Kernel/rme_kernel.c ****         Local->Thd_Cur=_RME_Run_High(Local);
 14232              		.loc 1 5835 24
 14233 032c 10001BE5 		ldr	r0, [fp, #-16]
 14234 0330 FEFFFFEB 		bl	_RME_Run_High
 14235 0334 0020A0E1 		mov	r2, r0
 14236              		.loc 1 5835 23
 14237 0338 10301BE5 		ldr	r3, [fp, #-16]
 14238 033c 042083E5 		str	r2, [r3, #4]
5836:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Local->Thd_Cur);
 14239              		.loc 1 5836 9
 14240 0340 10301BE5 		ldr	r3, [fp, #-16]
 14241 0344 043093E5 		ldr	r3, [r3, #4]
 14242 0348 0300A0E1 		mov	r0, r3
 14243 034c FEFFFFEB 		bl	_RME_Run_Ins
5837:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Local->Thd_Cur->Sched.State==RME_THD_READY);
 14244              		.loc 1 5837 9
 14245 0350 10301BE5 		ldr	r3, [fp, #-16]
 14246 0354 043093E5 		ldr	r3, [r3, #4]
 14247 0358 1C3093E5 		ldr	r3, [r3, #28]
 14248 035c 000053E3 		cmp	r3, #0
 14249 0360 0800000A 		beq	.L960
 14250              		.loc 1 5837 9 is_stmt 0 discriminator 1
 14251 0364 003000E3 		movw	r3, #:lower16:.LC4
 14252 0368 003040E3 		movt	r3, #:upper16:.LC4
 14253 036c 002000E3 		movw	r2, #:lower16:.LC5
 14254 0370 002040E3 		movt	r2, #:upper16:.LC5
 14255 0374 CD1601E3 		movw	r1, #5837
 14256 0378 000000E3 		movw	r0, #:lower16:.LC6
 14257 037c 000040E3 		movt	r0, #:upper16:.LC6
 14258 0380 FEFFFFEB 		bl	RME_Log
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 354


 14259              	.L961:
 14260 0384 FEFFFFEA 		b	.L961
 14261              	.L960:
5838:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Swt(Reg,Thread,Local->Thd_Cur);
 14262              		.loc 1 5838 9 is_stmt 1
 14263 0388 10301BE5 		ldr	r3, [fp, #-16]
 14264 038c 043093E5 		ldr	r3, [r3, #4]
 14265 0390 0320A0E1 		mov	r2, r3
 14266 0394 14101BE5 		ldr	r1, [fp, #-20]
 14267 0398 1C001BE5 		ldr	r0, [fp, #-28]
 14268 039c FEFFFFEB 		bl	_RME_Run_Swt
 14269              	.L959:
5839:../../Source/Kernel/rme_kernel.c ****     }
5840:../../Source/Kernel/rme_kernel.c ****     else
5841:../../Source/Kernel/rme_kernel.c ****     {
5842:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5843:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5844:../../Source/Kernel/rme_kernel.c ****     }
5845:../../Source/Kernel/rme_kernel.c ****     
5846:../../Source/Kernel/rme_kernel.c ****     /* Set the state to free so other cores can bind */
5847:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((rme_ptr_t*)&(Thread->Sched.Local),
 14270              		.loc 1 5847 5
 14271 03a0 14301BE5 		ldr	r3, [fp, #-20]
 14272 03a4 143083E2 		add	r3, r3, #20
 14273 03a8 0010E0E3 		mvn	r1, #0
 14274 03ac 0300A0E1 		mov	r0, r3
 14275 03b0 FEFFFFEB 		bl	__RME_A7A_Write_Release
5848:../../Source/Kernel/rme_kernel.c ****                       (rme_ptr_t)RME_THD_FREE);
5849:../../Source/Kernel/rme_kernel.c **** 
5850:../../Source/Kernel/rme_kernel.c ****     return 0;
 14276              		.loc 1 5850 12
 14277 03b4 0030A0E3 		mov	r3, #0
 14278              	.L944:
5851:../../Source/Kernel/rme_kernel.c **** }
 14279              		.loc 1 5851 1
 14280 03b8 0300A0E1 		mov	r0, r3
 14281 03bc 04D04BE2 		sub	sp, fp, #4
 14282              		.cfi_def_cfa 13, 8
 14283              		@ sp needed
 14284 03c0 0088BDE8 		pop	{fp, pc}
 14285              		.cfi_endproc
 14286              	.LFE59:
 14288              		.section	.text._RME_Thd_Exec_Set,"ax",%progbits
 14289              		.align	2
 14290              		.syntax unified
 14291              		.arm
 14293              	_RME_Thd_Exec_Set:
 14294              	.LFB60:
5852:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Free ******************************************/
5853:../../Source/Kernel/rme_kernel.c **** 
5854:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Exec_Set *************************************************
5855:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's entry point and stack. The registers will be
5856:../../Source/Kernel/rme_kernel.c ****               initialized with these contents.
5857:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5858:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5859:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5860:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 355


5861:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry address of the thread.
5862:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
5863:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter to pass to the thread.
5864:../../Source/Kernel/rme_kernel.c **** Output      : None.
5865:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5866:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5867:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Exec_Set(struct RME_Cap_Cpt* Cpt,
5868:../../Source/Kernel/rme_kernel.c ****                                    struct RME_Reg_Struct* Reg,
5869:../../Source/Kernel/rme_kernel.c ****                                    rme_cid_t Cap_Thd,
5870:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Entry,
5871:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Stack,
5872:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Param)
5873:../../Source/Kernel/rme_kernel.c **** {
 14295              		.loc 1 5873 1
 14296              		.cfi_startproc
 14297              		@ args = 8, pretend = 0, frame = 32
 14298              		@ frame_needed = 1, uses_anonymous_args = 0
 14299 0000 00482DE9 		push	{fp, lr}
 14300              		.cfi_def_cfa_offset 8
 14301              		.cfi_offset 11, -8
 14302              		.cfi_offset 14, -4
 14303 0004 04B08DE2 		add	fp, sp, #4
 14304              		.cfi_def_cfa 11, 4
 14305 0008 28D04DE2 		sub	sp, sp, #40
 14306 000c 18000BE5 		str	r0, [fp, #-24]
 14307 0010 1C100BE5 		str	r1, [fp, #-28]
 14308 0014 20200BE5 		str	r2, [fp, #-32]
 14309 0018 24300BE5 		str	r3, [fp, #-36]
5874:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5875:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5876:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5877:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5878:../../Source/Kernel/rme_kernel.c ****     
5879:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5880:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14310              		.loc 1 5880 5
 14311 001c 20301BE5 		ldr	r3, [fp, #-32]
 14312 0020 803003E2 		and	r3, r3, #128
 14313 0024 000053E3 		cmp	r3, #0
 14314 0028 1D00001A 		bne	.L963
 14315              		.loc 1 5880 5 is_stmt 0 discriminator 1
 14316 002c 18301BE5 		ldr	r3, [fp, #-24]
 14317 0030 142093E5 		ldr	r2, [r3, #20]
 14318 0034 20301BE5 		ldr	r3, [fp, #-32]
 14319 0038 030052E1 		cmp	r2, r3
 14320 003c 0100008A 		bhi	.L964
 14321              		.loc 1 5880 5 discriminator 3
 14322 0040 0230E0E3 		mvn	r3, #2
 14323 0044 940000EA 		b	.L965
 14324              	.L964:
 14325              		.loc 1 5880 5 discriminator 4
 14326 0048 20301BE5 		ldr	r3, [fp, #-32]
 14327 004c 8322A0E1 		lsl	r2, r3, #5
 14328 0050 18301BE5 		ldr	r3, [fp, #-24]
 14329 0054 0C3093E5 		ldr	r3, [r3, #12]
 14330 0058 033082E0 		add	r3, r2, r3
 14331 005c 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 356


 14332 0060 08301BE5 		ldr	r3, [fp, #-8]
 14333 0064 0300A0E1 		mov	r0, r3
 14334 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14335 006c 0C000BE5 		str	r0, [fp, #-12]
 14336 0070 0C301BE5 		ldr	r3, [fp, #-12]
 14337 0074 2338A0E1 		lsr	r3, r3, #16
 14338 0078 7330EFE6 		uxtb	r3, r3
 14339 007c 020053E3 		cmp	r3, #2
 14340 0080 0100001A 		bne	.L966
 14341              		.loc 1 5880 5 discriminator 5
 14342 0084 0830E0E3 		mvn	r3, #8
 14343 0088 830000EA 		b	.L965
 14344              	.L966:
 14345              		.loc 1 5880 5 discriminator 6
 14346 008c 0C301BE5 		ldr	r3, [fp, #-12]
 14347 0090 233CA0E1 		lsr	r3, r3, #24
 14348 0094 060053E3 		cmp	r3, #6
 14349 0098 4100000A 		beq	.L967
 14350              		.loc 1 5880 5 discriminator 7
 14351 009c 0130E0E3 		mvn	r3, #1
 14352 00a0 7D0000EA 		b	.L965
 14353              	.L963:
 14354              		.loc 1 5880 5 discriminator 2
 14355 00a4 20301BE5 		ldr	r3, [fp, #-32]
 14356 00a8 2324A0E1 		lsr	r2, r3, #8
 14357 00ac 18301BE5 		ldr	r3, [fp, #-24]
 14358 00b0 143093E5 		ldr	r3, [r3, #20]
 14359 00b4 030052E1 		cmp	r2, r3
 14360 00b8 0100003A 		bcc	.L968
 14361              		.loc 1 5880 5 discriminator 8
 14362 00bc 0230E0E3 		mvn	r3, #2
 14363 00c0 750000EA 		b	.L965
 14364              	.L968:
 14365              		.loc 1 5880 5 discriminator 9
 14366 00c4 20301BE5 		ldr	r3, [fp, #-32]
 14367 00c8 2334A0E1 		lsr	r3, r3, #8
 14368 00cc 8322A0E1 		lsl	r2, r3, #5
 14369 00d0 18301BE5 		ldr	r3, [fp, #-24]
 14370 00d4 0C3093E5 		ldr	r3, [r3, #12]
 14371 00d8 033082E0 		add	r3, r2, r3
 14372 00dc 08300BE5 		str	r3, [fp, #-8]
 14373 00e0 08301BE5 		ldr	r3, [fp, #-8]
 14374 00e4 0300A0E1 		mov	r0, r3
 14375 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14376 00ec 0C000BE5 		str	r0, [fp, #-12]
 14377 00f0 0C301BE5 		ldr	r3, [fp, #-12]
 14378 00f4 2338A0E1 		lsr	r3, r3, #16
 14379 00f8 7330EFE6 		uxtb	r3, r3
 14380 00fc 020053E3 		cmp	r3, #2
 14381 0100 0100001A 		bne	.L969
 14382              		.loc 1 5880 5 discriminator 10
 14383 0104 0830E0E3 		mvn	r3, #8
 14384 0108 630000EA 		b	.L965
 14385              	.L969:
 14386              		.loc 1 5880 5 discriminator 11
 14387 010c 0C301BE5 		ldr	r3, [fp, #-12]
 14388 0110 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 357


 14389 0114 030053E3 		cmp	r3, #3
 14390 0118 0100000A 		beq	.L970
 14391              		.loc 1 5880 5 discriminator 12
 14392 011c 0130E0E3 		mvn	r3, #1
 14393 0120 5D0000EA 		b	.L965
 14394              	.L970:
 14395              		.loc 1 5880 5 discriminator 13
 14396 0124 20301BE5 		ldr	r3, [fp, #-32]
 14397 0128 7F2003E2 		and	r2, r3, #127
 14398 012c 08301BE5 		ldr	r3, [fp, #-8]
 14399 0130 143093E5 		ldr	r3, [r3, #20]
 14400 0134 030052E1 		cmp	r2, r3
 14401 0138 0100003A 		bcc	.L971
 14402              		.loc 1 5880 5 discriminator 14
 14403 013c 0230E0E3 		mvn	r3, #2
 14404 0140 550000EA 		b	.L965
 14405              	.L971:
 14406              		.loc 1 5880 5 discriminator 15
 14407 0144 20301BE5 		ldr	r3, [fp, #-32]
 14408 0148 7F3003E2 		and	r3, r3, #127
 14409 014c 8322A0E1 		lsl	r2, r3, #5
 14410 0150 08301BE5 		ldr	r3, [fp, #-8]
 14411 0154 0C3093E5 		ldr	r3, [r3, #12]
 14412 0158 033082E0 		add	r3, r2, r3
 14413 015c 08300BE5 		str	r3, [fp, #-8]
 14414 0160 08301BE5 		ldr	r3, [fp, #-8]
 14415 0164 0300A0E1 		mov	r0, r3
 14416 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14417 016c 0C000BE5 		str	r0, [fp, #-12]
 14418 0170 0C301BE5 		ldr	r3, [fp, #-12]
 14419 0174 2338A0E1 		lsr	r3, r3, #16
 14420 0178 7330EFE6 		uxtb	r3, r3
 14421 017c 020053E3 		cmp	r3, #2
 14422 0180 0100001A 		bne	.L972
 14423              		.loc 1 5880 5 discriminator 16
 14424 0184 0830E0E3 		mvn	r3, #8
 14425 0188 430000EA 		b	.L965
 14426              	.L972:
 14427              		.loc 1 5880 5 discriminator 17
 14428 018c 0C301BE5 		ldr	r3, [fp, #-12]
 14429 0190 233CA0E1 		lsr	r3, r3, #24
 14430 0194 060053E3 		cmp	r3, #6
 14431 0198 0100000A 		beq	.L967
 14432              		.loc 1 5880 5 discriminator 18
 14433 019c 0130E0E3 		mvn	r3, #1
 14434 01a0 3D0000EA 		b	.L965
 14435              	.L967:
5881:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5882:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5883:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_EXEC_SET);
 14436              		.loc 1 5883 5 is_stmt 1
 14437 01a4 08301BE5 		ldr	r3, [fp, #-8]
 14438 01a8 083093E5 		ldr	r3, [r3, #8]
 14439 01ac 013003E2 		and	r3, r3, #1
 14440 01b0 000053E3 		cmp	r3, #0
 14441 01b4 0100001A 		bne	.L973
 14442              		.loc 1 5883 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 358


 14443 01b8 0630E0E3 		mvn	r3, #6
 14444 01bc 360000EA 		b	.L965
 14445              	.L973:
5884:../../Source/Kernel/rme_kernel.c ****     
5885:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound, and quit if it is not on our core */
5886:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 14446              		.loc 1 5886 12 is_stmt 1
 14447 01c0 08301BE5 		ldr	r3, [fp, #-8]
 14448 01c4 0C3093E5 		ldr	r3, [r3, #12]
 14449              		.loc 1 5886 11
 14450 01c8 10300BE5 		str	r3, [fp, #-16]
5887:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14451              		.loc 1 5887 10
 14452 01cc 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14453 01d0 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14454 01d4 14300BE5 		str	r3, [fp, #-20]
5888:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 14455              		.loc 1 5888 21
 14456 01d8 10301BE5 		ldr	r3, [fp, #-16]
 14457 01dc 143093E5 		ldr	r3, [r3, #20]
 14458              		.loc 1 5888 7
 14459 01e0 14201BE5 		ldr	r2, [fp, #-20]
 14460 01e4 030052E1 		cmp	r2, r3
 14461 01e8 0100000A 		beq	.L974
5889:../../Source/Kernel/rme_kernel.c ****     {
5890:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5891:../../Source/Kernel/rme_kernel.c **** 
5892:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14462              		.loc 1 5892 16
 14463 01ec CB30E0E3 		mvn	r3, #203
 14464 01f0 290000EA 		b	.L965
 14465              	.L974:
5893:../../Source/Kernel/rme_kernel.c ****     }
5894:../../Source/Kernel/rme_kernel.c ****     else
5895:../../Source/Kernel/rme_kernel.c ****     {
5896:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5897:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5898:../../Source/Kernel/rme_kernel.c ****     }
5899:../../Source/Kernel/rme_kernel.c ****     
5900:../../Source/Kernel/rme_kernel.c ****     /* Commit the change if both values are non-zero. If both are zero we are just
5901:../../Source/Kernel/rme_kernel.c ****      * clearing the error flag and continue from where the exception happened. */
5902:../../Source/Kernel/rme_kernel.c ****     if((Entry!=RME_NULL)&&(Stack!=RME_NULL))
 14466              		.loc 1 5902 7
 14467 01f4 24301BE5 		ldr	r3, [fp, #-36]
 14468 01f8 000053E3 		cmp	r3, #0
 14469 01fc 0C00000A 		beq	.L975
 14470              		.loc 1 5902 25 discriminator 1
 14471 0200 04309BE5 		ldr	r3, [fp, #4]
 14472 0204 000053E3 		cmp	r3, #0
 14473 0208 0900000A 		beq	.L975
5903:../../Source/Kernel/rme_kernel.c ****     {
5904:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5905:../../Source/Kernel/rme_kernel.c **** 
5906:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Reg_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr),
 14474              		.loc 1 5906 28
 14475 020c 10301BE5 		ldr	r3, [fp, #-16]
 14476 0210 443093E5 		ldr	r3, [r3, #68]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 359


 14477              		.loc 1 5906 9
 14478 0214 0201C3E3 		bic	r0, r3, #-2147483648
5907:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 14479              		.loc 1 5907 59
 14480 0218 10301BE5 		ldr	r3, [fp, #-16]
 14481 021c 483093E5 		ldr	r3, [r3, #72]
5906:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 14482              		.loc 1 5906 9
 14483 0220 00308DE5 		str	r3, [sp]
 14484 0224 08309BE5 		ldr	r3, [fp, #8]
 14485 0228 04209BE5 		ldr	r2, [fp, #4]
 14486 022c 24101BE5 		ldr	r1, [fp, #-36]
 14487 0230 FEFFFFEB 		bl	__RME_Thd_Reg_Init
 14488              	.L975:
5908:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5909:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Cop_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr), 
5910:../../Source/Kernel/rme_kernel.c ****                            &(Thread->Ctx.Reg->Reg),&(Thread->Ctx.Reg->Cop));
5911:../../Source/Kernel/rme_kernel.c **** #endif
5912:../../Source/Kernel/rme_kernel.c ****     }
5913:../../Source/Kernel/rme_kernel.c ****     else
5914:../../Source/Kernel/rme_kernel.c ****     {
5915:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5916:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5917:../../Source/Kernel/rme_kernel.c ****     }
5918:../../Source/Kernel/rme_kernel.c ****     
5919:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5920:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 14489              		.loc 1 5920 5
 14490 0234 0010A0E3 		mov	r1, #0
 14491 0238 1C001BE5 		ldr	r0, [fp, #-28]
 14492 023c FEFFFFEB 		bl	__RME_Svc_Retval_Set
5921:../../Source/Kernel/rme_kernel.c ****     
5922:../../Source/Kernel/rme_kernel.c ****     /* Check if there is a exception pending and clear it if there is */
5923:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 14493              		.loc 1 5923 21
 14494 0240 10301BE5 		ldr	r3, [fp, #-16]
 14495 0244 1C3093E5 		ldr	r3, [r3, #28]
 14496              		.loc 1 5923 7
 14497 0248 030053E3 		cmp	r3, #3
 14498 024c 1100001A 		bne	.L976
5924:../../Source/Kernel/rme_kernel.c ****     {
5925:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5926:../../Source/Kernel/rme_kernel.c ****         
5927:../../Source/Kernel/rme_kernel.c ****         /* Check if the thread still have timeslices. If yes, put it into the runqueue;
5928:../../Source/Kernel/rme_kernel.c ****          * if no, mark it as TIMEOUT and send scheduler notification to its parent. */
5929:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice!=0U)
 14499              		.loc 1 5929 25
 14500 0250 10301BE5 		ldr	r3, [fp, #-16]
 14501 0254 183093E5 		ldr	r3, [r3, #24]
 14502              		.loc 1 5929 11
 14503 0258 000053E3 		cmp	r3, #0
 14504 025c 0500000A 		beq	.L977
5930:../../Source/Kernel/rme_kernel.c ****         {
5931:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5932:../../Source/Kernel/rme_kernel.c ****             
5933:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
5934:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_READY;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 360


 14505              		.loc 1 5934 32
 14506 0260 10301BE5 		ldr	r3, [fp, #-16]
 14507 0264 0020A0E3 		mov	r2, #0
 14508 0268 1C2083E5 		str	r2, [r3, #28]
5935:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread);
 14509              		.loc 1 5935 13
 14510 026c 10001BE5 		ldr	r0, [fp, #-16]
 14511 0270 FEFFFFEB 		bl	_RME_Run_Ins
 14512 0274 040000EA 		b	.L978
 14513              	.L977:
5936:../../Source/Kernel/rme_kernel.c ****         }
5937:../../Source/Kernel/rme_kernel.c ****         else
5938:../../Source/Kernel/rme_kernel.c ****         {
5939:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5940:../../Source/Kernel/rme_kernel.c ****             
5941:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
5942:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_TIMEOUT;
 14514              		.loc 1 5942 32
 14515 0278 10301BE5 		ldr	r3, [fp, #-16]
 14516 027c 0220A0E3 		mov	r2, #2
 14517 0280 1C2083E5 		str	r2, [r3, #28]
5943:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thread);
 14518              		.loc 1 5943 13
 14519 0284 10001BE5 		ldr	r0, [fp, #-16]
 14520 0288 FEFFFFEB 		bl	_RME_Run_Notif
 14521              	.L978:
5944:../../Source/Kernel/rme_kernel.c ****         }
5945:../../Source/Kernel/rme_kernel.c ****         
5946:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread because something unblocked */
5947:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 14522              		.loc 1 5947 9
 14523 028c 14101BE5 		ldr	r1, [fp, #-20]
 14524 0290 1C001BE5 		ldr	r0, [fp, #-28]
 14525 0294 FEFFFFEB 		bl	_RME_Kern_High
 14526              	.L976:
5948:../../Source/Kernel/rme_kernel.c ****     }
5949:../../Source/Kernel/rme_kernel.c ****     else
5950:../../Source/Kernel/rme_kernel.c ****     {
5951:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5952:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5953:../../Source/Kernel/rme_kernel.c ****     }
5954:../../Source/Kernel/rme_kernel.c ****     
5955:../../Source/Kernel/rme_kernel.c ****     return 0;
 14527              		.loc 1 5955 12
 14528 0298 0030A0E3 		mov	r3, #0
 14529              	.L965:
5956:../../Source/Kernel/rme_kernel.c **** }
 14530              		.loc 1 5956 1
 14531 029c 0300A0E1 		mov	r0, r3
 14532 02a0 04D04BE2 		sub	sp, fp, #4
 14533              		.cfi_def_cfa 13, 8
 14534              		@ sp needed
 14535 02a4 0088BDE8 		pop	{fp, pc}
 14536              		.cfi_endproc
 14537              	.LFE60:
 14539              		.section	.text._RME_Thd_Sched_Prio,"ax",%progbits
 14540              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 361


 14541              		.syntax unified
 14542              		.arm
 14544              	_RME_Thd_Sched_Prio:
 14545              	.LFB61:
5957:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Exec_Set ********************************************/
5958:../../Source/Kernel/rme_kernel.c **** 
5959:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Prio ***********************************************
5960:../../Source/Kernel/rme_kernel.c **** Description : Change a thread's priority level. This can only be called from
5961:../../Source/Kernel/rme_kernel.c ****               the core that have the thread bound. To facilitate scheduling,
5962:../../Source/Kernel/rme_kernel.c ****               this system call allows up to 3 thread's priority changes per
5963:../../Source/Kernel/rme_kernel.c ****               call. This system call can cause a potential context switch.
5964:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5965:../../Source/Kernel/rme_kernel.c ****               priority. 
5966:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5967:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5968:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Number - The number of threads to adjust priority.
5969:../../Source/Kernel/rme_kernel.c ****                                  Allowed values are 1, 2 and 3.
5970:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd0 - The capability to the first thread.
5971:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5972:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio0 - The priority level, higher is more critical.
5973:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd1 - The capability to the second thread.
5974:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5975:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio1 - The priority level, higher is more critical.
5976:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd2 - The capability to the third thread.
5977:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
5978:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio2 - The priority level, higher is more critical.
5979:../../Source/Kernel/rme_kernel.c **** Output      : None.
5980:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5981:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5982:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Prio(struct RME_Cap_Cpt* Cpt,
5983:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5984:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Number,
5985:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd0,
5986:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio0,
5987:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd1,
5988:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio1,
5989:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd2,
5990:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio2)
5991:../../Source/Kernel/rme_kernel.c **** {
 14546              		.loc 1 5991 1
 14547              		.cfi_startproc
 14548              		@ args = 20, pretend = 0, frame = 80
 14549              		@ frame_needed = 1, uses_anonymous_args = 0
 14550 0000 00482DE9 		push	{fp, lr}
 14551              		.cfi_def_cfa_offset 8
 14552              		.cfi_offset 11, -8
 14553              		.cfi_offset 14, -4
 14554 0004 04B08DE2 		add	fp, sp, #4
 14555              		.cfi_def_cfa 11, 4
 14556 0008 50D04DE2 		sub	sp, sp, #80
 14557 000c 48000BE5 		str	r0, [fp, #-72]
 14558 0010 4C100BE5 		str	r1, [fp, #-76]
 14559 0014 50200BE5 		str	r2, [fp, #-80]
 14560 0018 54300BE5 		str	r3, [fp, #-84]
5992:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
5993:../../Source/Kernel/rme_kernel.c ****     rme_cid_t Cap_Thd[3];
5994:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio[3];
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 362


5995:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op[3];
5996:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread[3];
5997:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5998:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5999:../../Source/Kernel/rme_kernel.c ****     
6000:../../Source/Kernel/rme_kernel.c ****     /* Check parameter validity */
6001:../../Source/Kernel/rme_kernel.c ****     if((Number==0U)||(Number>3U))
 14561              		.loc 1 6001 7
 14562 001c 50301BE5 		ldr	r3, [fp, #-80]
 14563 0020 000053E3 		cmp	r3, #0
 14564 0024 0200000A 		beq	.L980
 14565              		.loc 1 6001 20 discriminator 1
 14566 0028 50301BE5 		ldr	r3, [fp, #-80]
 14567 002c 030053E3 		cmp	r3, #3
 14568 0030 0100009A 		bls	.L981
 14569              	.L980:
6002:../../Source/Kernel/rme_kernel.c ****     {
6003:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6004:../../Source/Kernel/rme_kernel.c **** 
6005:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14570              		.loc 1 6005 16
 14571 0034 CB30E0E3 		mvn	r3, #203
 14572 0038 290100EA 		b	.L1001
 14573              	.L981:
6006:../../Source/Kernel/rme_kernel.c ****     }
6007:../../Source/Kernel/rme_kernel.c ****     
6008:../../Source/Kernel/rme_kernel.c ****     /* We'll use arrays in the next */
6009:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[0]=Cap_Thd0;
 14574              		.loc 1 6009 15
 14575 003c 54301BE5 		ldr	r3, [fp, #-84]
 14576 0040 1C300BE5 		str	r3, [fp, #-28]
6010:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[1]=Cap_Thd1;
 14577              		.loc 1 6010 15
 14578 0044 08309BE5 		ldr	r3, [fp, #8]
 14579 0048 18300BE5 		str	r3, [fp, #-24]
6011:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[2]=Cap_Thd2;
 14580              		.loc 1 6011 15
 14581 004c 10309BE5 		ldr	r3, [fp, #16]
 14582 0050 14300BE5 		str	r3, [fp, #-20]
6012:../../Source/Kernel/rme_kernel.c ****     Prio[0]=Prio0;
 14583              		.loc 1 6012 12
 14584 0054 04309BE5 		ldr	r3, [fp, #4]
 14585 0058 28300BE5 		str	r3, [fp, #-40]
6013:../../Source/Kernel/rme_kernel.c ****     Prio[1]=Prio1;
 14586              		.loc 1 6013 12
 14587 005c 0C309BE5 		ldr	r3, [fp, #12]
 14588 0060 24300BE5 		str	r3, [fp, #-36]
6014:../../Source/Kernel/rme_kernel.c ****     Prio[2]=Prio2;
 14589              		.loc 1 6014 12
 14590 0064 14309BE5 		ldr	r3, [fp, #20]
 14591 0068 20300BE5 		str	r3, [fp, #-32]
6015:../../Source/Kernel/rme_kernel.c **** 
6016:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14592              		.loc 1 6016 10
 14593 006c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14594 0070 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14595 0074 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 363


6017:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 14596              		.loc 1 6017 14
 14597 0078 0030A0E3 		mov	r3, #0
 14598 007c 08300BE5 		str	r3, [fp, #-8]
 14599              		.loc 1 6017 5
 14600 0080 D50000EA 		b	.L983
 14601              	.L996:
6018:../../Source/Kernel/rme_kernel.c ****     {
6019:../../Source/Kernel/rme_kernel.c ****         /* Get the capability slot */
6020:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd[Count],RME_CAP_TYPE_THD,
 14602              		.loc 1 6020 9
 14603 0084 08301BE5 		ldr	r3, [fp, #-8]
 14604 0088 0331A0E1 		lsl	r3, r3, #2
 14605 008c 043043E2 		sub	r3, r3, #4
 14606 0090 0B3083E0 		add	r3, r3, fp
 14607 0094 183013E5 		ldr	r3, [r3, #-24]
 14608 0098 803003E2 		and	r3, r3, #128
 14609 009c 000053E3 		cmp	r3, #0
 14610 00a0 2F00001A 		bne	.L984
 14611              		.loc 1 6020 9 is_stmt 0 discriminator 1
 14612 00a4 08301BE5 		ldr	r3, [fp, #-8]
 14613 00a8 0331A0E1 		lsl	r3, r3, #2
 14614 00ac 043043E2 		sub	r3, r3, #4
 14615 00b0 0B3083E0 		add	r3, r3, fp
 14616 00b4 183013E5 		ldr	r3, [r3, #-24]
 14617 00b8 0320A0E1 		mov	r2, r3
 14618 00bc 48301BE5 		ldr	r3, [fp, #-72]
 14619 00c0 143093E5 		ldr	r3, [r3, #20]
 14620 00c4 030052E1 		cmp	r2, r3
 14621 00c8 0100003A 		bcc	.L985
 14622              		.loc 1 6020 9 discriminator 3
 14623 00cc 0230E0E3 		mvn	r3, #2
 14624 00d0 030100EA 		b	.L1001
 14625              	.L985:
 14626              		.loc 1 6020 9 discriminator 4
 14627 00d4 08301BE5 		ldr	r3, [fp, #-8]
 14628 00d8 0331A0E1 		lsl	r3, r3, #2
 14629 00dc 043043E2 		sub	r3, r3, #4
 14630 00e0 0B3083E0 		add	r3, r3, fp
 14631 00e4 183013E5 		ldr	r3, [r3, #-24]
 14632 00e8 8322A0E1 		lsl	r2, r3, #5
 14633 00ec 48301BE5 		ldr	r3, [fp, #-72]
 14634 00f0 0C3093E5 		ldr	r3, [r3, #12]
 14635 00f4 033082E0 		add	r3, r2, r3
 14636 00f8 0320A0E1 		mov	r2, r3
 14637 00fc 08301BE5 		ldr	r3, [fp, #-8]
 14638 0100 0331A0E1 		lsl	r3, r3, #2
 14639 0104 043043E2 		sub	r3, r3, #4
 14640 0108 0B3083E0 		add	r3, r3, fp
 14641 010c 302003E5 		str	r2, [r3, #-48]
 14642 0110 08301BE5 		ldr	r3, [fp, #-8]
 14643 0114 0331A0E1 		lsl	r3, r3, #2
 14644 0118 043043E2 		sub	r3, r3, #4
 14645 011c 0B3083E0 		add	r3, r3, fp
 14646 0120 303013E5 		ldr	r3, [r3, #-48]
 14647 0124 0300A0E1 		mov	r0, r3
 14648 0128 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 364


 14649 012c 10000BE5 		str	r0, [fp, #-16]
 14650 0130 10301BE5 		ldr	r3, [fp, #-16]
 14651 0134 2338A0E1 		lsr	r3, r3, #16
 14652 0138 7330EFE6 		uxtb	r3, r3
 14653 013c 020053E3 		cmp	r3, #2
 14654 0140 0100001A 		bne	.L986
 14655              		.loc 1 6020 9 discriminator 5
 14656 0144 0830E0E3 		mvn	r3, #8
 14657 0148 E50000EA 		b	.L1001
 14658              	.L986:
 14659              		.loc 1 6020 9 discriminator 6
 14660 014c 10301BE5 		ldr	r3, [fp, #-16]
 14661 0150 233CA0E1 		lsr	r3, r3, #24
 14662 0154 060053E3 		cmp	r3, #6
 14663 0158 6B00000A 		beq	.L987
 14664              		.loc 1 6020 9 discriminator 7
 14665 015c 0130E0E3 		mvn	r3, #1
 14666 0160 DF0000EA 		b	.L1001
 14667              	.L984:
 14668              		.loc 1 6020 9 discriminator 2
 14669 0164 08301BE5 		ldr	r3, [fp, #-8]
 14670 0168 0331A0E1 		lsl	r3, r3, #2
 14671 016c 043043E2 		sub	r3, r3, #4
 14672 0170 0B3083E0 		add	r3, r3, fp
 14673 0174 183013E5 		ldr	r3, [r3, #-24]
 14674 0178 2324A0E1 		lsr	r2, r3, #8
 14675 017c 48301BE5 		ldr	r3, [fp, #-72]
 14676 0180 143093E5 		ldr	r3, [r3, #20]
 14677 0184 030052E1 		cmp	r2, r3
 14678 0188 0100003A 		bcc	.L988
 14679              		.loc 1 6020 9 discriminator 8
 14680 018c 0230E0E3 		mvn	r3, #2
 14681 0190 D30000EA 		b	.L1001
 14682              	.L988:
 14683              		.loc 1 6020 9 discriminator 9
 14684 0194 08301BE5 		ldr	r3, [fp, #-8]
 14685 0198 0331A0E1 		lsl	r3, r3, #2
 14686 019c 043043E2 		sub	r3, r3, #4
 14687 01a0 0B3083E0 		add	r3, r3, fp
 14688 01a4 183013E5 		ldr	r3, [r3, #-24]
 14689 01a8 2334A0E1 		lsr	r3, r3, #8
 14690 01ac 8322A0E1 		lsl	r2, r3, #5
 14691 01b0 48301BE5 		ldr	r3, [fp, #-72]
 14692 01b4 0C3093E5 		ldr	r3, [r3, #12]
 14693 01b8 033082E0 		add	r3, r2, r3
 14694 01bc 0320A0E1 		mov	r2, r3
 14695 01c0 08301BE5 		ldr	r3, [fp, #-8]
 14696 01c4 0331A0E1 		lsl	r3, r3, #2
 14697 01c8 043043E2 		sub	r3, r3, #4
 14698 01cc 0B3083E0 		add	r3, r3, fp
 14699 01d0 302003E5 		str	r2, [r3, #-48]
 14700 01d4 08301BE5 		ldr	r3, [fp, #-8]
 14701 01d8 0331A0E1 		lsl	r3, r3, #2
 14702 01dc 043043E2 		sub	r3, r3, #4
 14703 01e0 0B3083E0 		add	r3, r3, fp
 14704 01e4 303013E5 		ldr	r3, [r3, #-48]
 14705 01e8 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 365


 14706 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14707 01f0 10000BE5 		str	r0, [fp, #-16]
 14708 01f4 10301BE5 		ldr	r3, [fp, #-16]
 14709 01f8 2338A0E1 		lsr	r3, r3, #16
 14710 01fc 7330EFE6 		uxtb	r3, r3
 14711 0200 020053E3 		cmp	r3, #2
 14712 0204 0100001A 		bne	.L989
 14713              		.loc 1 6020 9 discriminator 10
 14714 0208 0830E0E3 		mvn	r3, #8
 14715 020c B40000EA 		b	.L1001
 14716              	.L989:
 14717              		.loc 1 6020 9 discriminator 11
 14718 0210 10301BE5 		ldr	r3, [fp, #-16]
 14719 0214 233CA0E1 		lsr	r3, r3, #24
 14720 0218 030053E3 		cmp	r3, #3
 14721 021c 0100000A 		beq	.L990
 14722              		.loc 1 6020 9 discriminator 12
 14723 0220 0130E0E3 		mvn	r3, #1
 14724 0224 AE0000EA 		b	.L1001
 14725              	.L990:
 14726              		.loc 1 6020 9 discriminator 13
 14727 0228 08301BE5 		ldr	r3, [fp, #-8]
 14728 022c 0331A0E1 		lsl	r3, r3, #2
 14729 0230 043043E2 		sub	r3, r3, #4
 14730 0234 0B3083E0 		add	r3, r3, fp
 14731 0238 183013E5 		ldr	r3, [r3, #-24]
 14732 023c 7F2003E2 		and	r2, r3, #127
 14733 0240 08301BE5 		ldr	r3, [fp, #-8]
 14734 0244 0331A0E1 		lsl	r3, r3, #2
 14735 0248 043043E2 		sub	r3, r3, #4
 14736 024c 0B3083E0 		add	r3, r3, fp
 14737 0250 303013E5 		ldr	r3, [r3, #-48]
 14738 0254 143093E5 		ldr	r3, [r3, #20]
 14739 0258 030052E1 		cmp	r2, r3
 14740 025c 0100003A 		bcc	.L991
 14741              		.loc 1 6020 9 discriminator 14
 14742 0260 0230E0E3 		mvn	r3, #2
 14743 0264 9E0000EA 		b	.L1001
 14744              	.L991:
 14745              		.loc 1 6020 9 discriminator 15
 14746 0268 08301BE5 		ldr	r3, [fp, #-8]
 14747 026c 0331A0E1 		lsl	r3, r3, #2
 14748 0270 043043E2 		sub	r3, r3, #4
 14749 0274 0B3083E0 		add	r3, r3, fp
 14750 0278 183013E5 		ldr	r3, [r3, #-24]
 14751 027c 7F3003E2 		and	r3, r3, #127
 14752 0280 8322A0E1 		lsl	r2, r3, #5
 14753 0284 08301BE5 		ldr	r3, [fp, #-8]
 14754 0288 0331A0E1 		lsl	r3, r3, #2
 14755 028c 043043E2 		sub	r3, r3, #4
 14756 0290 0B3083E0 		add	r3, r3, fp
 14757 0294 303013E5 		ldr	r3, [r3, #-48]
 14758 0298 0C3093E5 		ldr	r3, [r3, #12]
 14759 029c 033082E0 		add	r3, r2, r3
 14760 02a0 0320A0E1 		mov	r2, r3
 14761 02a4 08301BE5 		ldr	r3, [fp, #-8]
 14762 02a8 0331A0E1 		lsl	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 366


 14763 02ac 043043E2 		sub	r3, r3, #4
 14764 02b0 0B3083E0 		add	r3, r3, fp
 14765 02b4 302003E5 		str	r2, [r3, #-48]
 14766 02b8 08301BE5 		ldr	r3, [fp, #-8]
 14767 02bc 0331A0E1 		lsl	r3, r3, #2
 14768 02c0 043043E2 		sub	r3, r3, #4
 14769 02c4 0B3083E0 		add	r3, r3, fp
 14770 02c8 303013E5 		ldr	r3, [r3, #-48]
 14771 02cc 0300A0E1 		mov	r0, r3
 14772 02d0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14773 02d4 10000BE5 		str	r0, [fp, #-16]
 14774 02d8 10301BE5 		ldr	r3, [fp, #-16]
 14775 02dc 2338A0E1 		lsr	r3, r3, #16
 14776 02e0 7330EFE6 		uxtb	r3, r3
 14777 02e4 020053E3 		cmp	r3, #2
 14778 02e8 0100001A 		bne	.L992
 14779              		.loc 1 6020 9 discriminator 16
 14780 02ec 0830E0E3 		mvn	r3, #8
 14781 02f0 7B0000EA 		b	.L1001
 14782              	.L992:
 14783              		.loc 1 6020 9 discriminator 17
 14784 02f4 10301BE5 		ldr	r3, [fp, #-16]
 14785 02f8 233CA0E1 		lsr	r3, r3, #24
 14786 02fc 060053E3 		cmp	r3, #6
 14787 0300 0100000A 		beq	.L987
 14788              		.loc 1 6020 9 discriminator 18
 14789 0304 0130E0E3 		mvn	r3, #1
 14790 0308 750000EA 		b	.L1001
 14791              	.L987:
6021:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Op[Count],Type_Stat);
6022:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6023:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Op[Count],RME_THD_FLAG_SCHED_PRIO);
 14792              		.loc 1 6023 9 is_stmt 1
 14793 030c 08301BE5 		ldr	r3, [fp, #-8]
 14794 0310 0331A0E1 		lsl	r3, r3, #2
 14795 0314 043043E2 		sub	r3, r3, #4
 14796 0318 0B3083E0 		add	r3, r3, fp
 14797 031c 303013E5 		ldr	r3, [r3, #-48]
 14798 0320 083093E5 		ldr	r3, [r3, #8]
 14799 0324 083003E2 		and	r3, r3, #8
 14800 0328 000053E3 		cmp	r3, #0
 14801 032c 0100001A 		bne	.L993
 14802              		.loc 1 6023 9 is_stmt 0 discriminator 1
 14803 0330 0630E0E3 		mvn	r3, #6
 14804 0334 6A0000EA 		b	.L1001
 14805              	.L993:
6024:../../Source/Kernel/rme_kernel.c ****         
6025:../../Source/Kernel/rme_kernel.c ****         /* See if the target thread is already bound to this core. If no, we just quit */
6026:../../Source/Kernel/rme_kernel.c ****         Thread[Count]=(struct RME_Thd_Struct*)(Thd_Op[Count]->Head.Object);
 14806              		.loc 1 6026 54 is_stmt 1
 14807 0338 08301BE5 		ldr	r3, [fp, #-8]
 14808 033c 0331A0E1 		lsl	r3, r3, #2
 14809 0340 043043E2 		sub	r3, r3, #4
 14810 0344 0B3083E0 		add	r3, r3, fp
 14811 0348 303013E5 		ldr	r3, [r3, #-48]
 14812              		.loc 1 6026 67
 14813 034c 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 367


 14814              		.loc 1 6026 23
 14815 0350 0320A0E1 		mov	r2, r3
 14816              		.loc 1 6026 22
 14817 0354 08301BE5 		ldr	r3, [fp, #-8]
 14818 0358 0331A0E1 		lsl	r3, r3, #2
 14819 035c 043043E2 		sub	r3, r3, #4
 14820 0360 0B3083E0 		add	r3, r3, fp
 14821 0364 3C2003E5 		str	r2, [r3, #-60]
6027:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Local!=Local)
 14822              		.loc 1 6027 18
 14823 0368 08301BE5 		ldr	r3, [fp, #-8]
 14824 036c 0331A0E1 		lsl	r3, r3, #2
 14825 0370 043043E2 		sub	r3, r3, #4
 14826 0374 0B3083E0 		add	r3, r3, fp
 14827 0378 3C3013E5 		ldr	r3, [r3, #-60]
 14828              		.loc 1 6027 32
 14829 037c 143093E5 		ldr	r3, [r3, #20]
 14830              		.loc 1 6027 11
 14831 0380 0C201BE5 		ldr	r2, [fp, #-12]
 14832 0384 030052E1 		cmp	r2, r3
 14833 0388 0100000A 		beq	.L994
6028:../../Source/Kernel/rme_kernel.c ****         {
6029:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6030:../../Source/Kernel/rme_kernel.c **** 
6031:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 14834              		.loc 1 6031 20
 14835 038c CB30E0E3 		mvn	r3, #203
 14836 0390 530000EA 		b	.L1001
 14837              	.L994:
6032:../../Source/Kernel/rme_kernel.c ****         }
6033:../../Source/Kernel/rme_kernel.c ****         else
6034:../../Source/Kernel/rme_kernel.c ****         {
6035:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6036:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6037:../../Source/Kernel/rme_kernel.c ****         }
6038:../../Source/Kernel/rme_kernel.c ****         
6039:../../Source/Kernel/rme_kernel.c ****         /* See if the priority relationship is correct */
6040:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Prio_Max<Prio[Count])
 14838              		.loc 1 6040 18
 14839 0394 08301BE5 		ldr	r3, [fp, #-8]
 14840 0398 0331A0E1 		lsl	r3, r3, #2
 14841 039c 043043E2 		sub	r3, r3, #4
 14842 03a0 0B3083E0 		add	r3, r3, fp
 14843 03a4 3C3013E5 		ldr	r3, [r3, #-60]
 14844              		.loc 1 6040 32
 14845 03a8 242093E5 		ldr	r2, [r3, #36]
 14846              		.loc 1 6040 46
 14847 03ac 08301BE5 		ldr	r3, [fp, #-8]
 14848 03b0 0331A0E1 		lsl	r3, r3, #2
 14849 03b4 043043E2 		sub	r3, r3, #4
 14850 03b8 0B3083E0 		add	r3, r3, fp
 14851 03bc 243013E5 		ldr	r3, [r3, #-36]
 14852              		.loc 1 6040 11
 14853 03c0 030052E1 		cmp	r2, r3
 14854 03c4 0100002A 		bcs	.L995
6041:../../Source/Kernel/rme_kernel.c ****         {
6042:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 368


6043:../../Source/Kernel/rme_kernel.c **** 
6044:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 14855              		.loc 1 6044 20
 14856 03c8 CC30E0E3 		mvn	r3, #204
 14857 03cc 440000EA 		b	.L1001
 14858              	.L995:
6017:../../Source/Kernel/rme_kernel.c ****     {
 14859              		.loc 1 6017 36 discriminator 2
 14860 03d0 08301BE5 		ldr	r3, [fp, #-8]
 14861 03d4 013083E2 		add	r3, r3, #1
 14862 03d8 08300BE5 		str	r3, [fp, #-8]
 14863              	.L983:
6017:../../Source/Kernel/rme_kernel.c ****     {
 14864              		.loc 1 6017 5 discriminator 1
 14865 03dc 08201BE5 		ldr	r2, [fp, #-8]
 14866 03e0 50301BE5 		ldr	r3, [fp, #-80]
 14867 03e4 030052E1 		cmp	r2, r3
 14868 03e8 25FFFF3A 		bcc	.L996
6045:../../Source/Kernel/rme_kernel.c ****         }
6046:../../Source/Kernel/rme_kernel.c ****         else
6047:../../Source/Kernel/rme_kernel.c ****         {
6048:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6049:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6050:../../Source/Kernel/rme_kernel.c ****         }
6051:../../Source/Kernel/rme_kernel.c ****     }
6052:../../Source/Kernel/rme_kernel.c ****     
6053:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6054:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 14869              		.loc 1 6054 5
 14870 03ec 0010A0E3 		mov	r1, #0
 14871 03f0 4C001BE5 		ldr	r0, [fp, #-76]
 14872 03f4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6055:../../Source/Kernel/rme_kernel.c ****     
6056:../../Source/Kernel/rme_kernel.c ****     /* Change priority for each thread, and we'll switch to the real highest priority
6057:../../Source/Kernel/rme_kernel.c ****      * thread after all these changes. This can help remove the excessive overhead. */
6058:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 14873              		.loc 1 6058 14
 14874 03f8 0030A0E3 		mov	r3, #0
 14875 03fc 08300BE5 		str	r3, [fp, #-8]
 14876              		.loc 1 6058 5
 14877 0400 2F0000EA 		b	.L997
 14878              	.L1000:
6059:../../Source/Kernel/rme_kernel.c ****     {
6060:../../Source/Kernel/rme_kernel.c ****         /* See if this thread is currently in the runqueue */
6061:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.State==RME_THD_READY)
 14879              		.loc 1 6061 18
 14880 0404 08301BE5 		ldr	r3, [fp, #-8]
 14881 0408 0331A0E1 		lsl	r3, r3, #2
 14882 040c 043043E2 		sub	r3, r3, #4
 14883 0410 0B3083E0 		add	r3, r3, fp
 14884 0414 3C3013E5 		ldr	r3, [r3, #-60]
 14885              		.loc 1 6061 32
 14886 0418 1C3093E5 		ldr	r3, [r3, #28]
 14887              		.loc 1 6061 11
 14888 041c 000053E3 		cmp	r3, #0
 14889 0420 1900001A 		bne	.L998
6062:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 369


6063:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6064:../../Source/Kernel/rme_kernel.c **** 
6065:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue, change priority, and add it back */
6066:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thread[Count]);
 14890              		.loc 1 6066 13
 14891 0424 08301BE5 		ldr	r3, [fp, #-8]
 14892 0428 0331A0E1 		lsl	r3, r3, #2
 14893 042c 043043E2 		sub	r3, r3, #4
 14894 0430 0B3083E0 		add	r3, r3, fp
 14895 0434 3C3013E5 		ldr	r3, [r3, #-60]
 14896 0438 0300A0E1 		mov	r0, r3
 14897 043c FEFFFFEB 		bl	_RME_Run_Del
6067:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 14898              		.loc 1 6067 19
 14899 0440 08301BE5 		ldr	r3, [fp, #-8]
 14900 0444 0331A0E1 		lsl	r3, r3, #2
 14901 0448 043043E2 		sub	r3, r3, #4
 14902 044c 0B3083E0 		add	r3, r3, fp
 14903 0450 3C2013E5 		ldr	r2, [r3, #-60]
 14904              		.loc 1 6067 43
 14905 0454 08301BE5 		ldr	r3, [fp, #-8]
 14906 0458 0331A0E1 		lsl	r3, r3, #2
 14907 045c 043043E2 		sub	r3, r3, #4
 14908 0460 0B3083E0 		add	r3, r3, fp
 14909 0464 243013E5 		ldr	r3, [r3, #-36]
 14910              		.loc 1 6067 38
 14911 0468 203082E5 		str	r3, [r2, #32]
6068:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread[Count]);
 14912              		.loc 1 6068 13
 14913 046c 08301BE5 		ldr	r3, [fp, #-8]
 14914 0470 0331A0E1 		lsl	r3, r3, #2
 14915 0474 043043E2 		sub	r3, r3, #4
 14916 0478 0B3083E0 		add	r3, r3, fp
 14917 047c 3C3013E5 		ldr	r3, [r3, #-60]
 14918 0480 0300A0E1 		mov	r0, r3
 14919 0484 FEFFFFEB 		bl	_RME_Run_Ins
 14920 0488 0A0000EA 		b	.L999
 14921              	.L998:
6069:../../Source/Kernel/rme_kernel.c ****         }
6070:../../Source/Kernel/rme_kernel.c ****         /* If it is BLOCKED, TIMEOUT or EXCPEND, changing the number will suffice */
6071:../../Source/Kernel/rme_kernel.c ****         else
6072:../../Source/Kernel/rme_kernel.c ****         {
6073:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6074:../../Source/Kernel/rme_kernel.c **** 
6075:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 14922              		.loc 1 6075 19
 14923 048c 08301BE5 		ldr	r3, [fp, #-8]
 14924 0490 0331A0E1 		lsl	r3, r3, #2
 14925 0494 043043E2 		sub	r3, r3, #4
 14926 0498 0B3083E0 		add	r3, r3, fp
 14927 049c 3C2013E5 		ldr	r2, [r3, #-60]
 14928              		.loc 1 6075 43
 14929 04a0 08301BE5 		ldr	r3, [fp, #-8]
 14930 04a4 0331A0E1 		lsl	r3, r3, #2
 14931 04a8 043043E2 		sub	r3, r3, #4
 14932 04ac 0B3083E0 		add	r3, r3, fp
 14933 04b0 243013E5 		ldr	r3, [r3, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 370


 14934              		.loc 1 6075 38
 14935 04b4 203082E5 		str	r3, [r2, #32]
 14936              	.L999:
6058:../../Source/Kernel/rme_kernel.c ****     {
 14937              		.loc 1 6058 36 discriminator 2
 14938 04b8 08301BE5 		ldr	r3, [fp, #-8]
 14939 04bc 013083E2 		add	r3, r3, #1
 14940 04c0 08300BE5 		str	r3, [fp, #-8]
 14941              	.L997:
6058:../../Source/Kernel/rme_kernel.c ****     {
 14942              		.loc 1 6058 5 discriminator 1
 14943 04c4 08201BE5 		ldr	r2, [fp, #-8]
 14944 04c8 50301BE5 		ldr	r3, [fp, #-80]
 14945 04cc 030052E1 		cmp	r2, r3
 14946 04d0 CBFFFF3A 		bcc	.L1000
6076:../../Source/Kernel/rme_kernel.c ****         }
6077:../../Source/Kernel/rme_kernel.c ****     }
6078:../../Source/Kernel/rme_kernel.c ****     
6079:../../Source/Kernel/rme_kernel.c ****     /* Pick the current highest priority thread to run */
6080:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 14947              		.loc 1 6080 5
 14948 04d4 0C101BE5 		ldr	r1, [fp, #-12]
 14949 04d8 4C001BE5 		ldr	r0, [fp, #-76]
 14950 04dc FEFFFFEB 		bl	_RME_Kern_High
6081:../../Source/Kernel/rme_kernel.c **** 
6082:../../Source/Kernel/rme_kernel.c ****     return 0;
 14951              		.loc 1 6082 12
 14952 04e0 0030A0E3 		mov	r3, #0
 14953              	.L1001:
6083:../../Source/Kernel/rme_kernel.c **** }
 14954              		.loc 1 6083 1 discriminator 1
 14955 04e4 0300A0E1 		mov	r0, r3
 14956 04e8 04D04BE2 		sub	sp, fp, #4
 14957              		.cfi_def_cfa 13, 8
 14958              		@ sp needed
 14959 04ec 0088BDE8 		pop	{fp, pc}
 14960              		.cfi_endproc
 14961              	.LFE61:
 14963              		.section	.text._RME_Thd_Sched_Rcv,"ax",%progbits
 14964              		.align	2
 14965              		.syntax unified
 14966              		.arm
 14968              	_RME_Thd_Sched_Rcv:
 14969              	.LFB62:
6084:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Prio ******************************************/
6085:../../Source/Kernel/rme_kernel.c **** 
6086:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Rcv ************************************************
6087:../../Source/Kernel/rme_kernel.c **** Description : Try to receive a notification from the scheduler queue. This
6088:../../Source/Kernel/rme_kernel.c ****               can only be called from the same core the thread is on.
6089:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6090:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the scheduler thread. We
6091:../../Source/Kernel/rme_kernel.c ****                                   are going to get timeout or exception
6092:../../Source/Kernel/rme_kernel.c ****                                   notifications for the threads that it is
6093:../../Source/Kernel/rme_kernel.c ****                                   responsible for scheduling. This capability
6094:../../Source/Kernel/rme_kernel.c ****                                   must point to a thread on the same core.
6095:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6096:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 371


6097:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the thread ID; or an error code.
6098:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6099:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Rcv(struct RME_Cap_Cpt* Cpt,
6100:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd)
6101:../../Source/Kernel/rme_kernel.c **** {
 14970              		.loc 1 6101 1
 14971              		.cfi_startproc
 14972              		@ args = 0, pretend = 0, frame = 32
 14973              		@ frame_needed = 1, uses_anonymous_args = 0
 14974 0000 00482DE9 		push	{fp, lr}
 14975              		.cfi_def_cfa_offset 8
 14976              		.cfi_offset 11, -8
 14977              		.cfi_offset 14, -4
 14978 0004 04B08DE2 		add	fp, sp, #4
 14979              		.cfi_def_cfa 11, 4
 14980 0008 20D04DE2 		sub	sp, sp, #32
 14981 000c 20000BE5 		str	r0, [fp, #-32]
 14982 0010 24100BE5 		str	r1, [fp, #-36]
6102:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
6103:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
6104:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
6105:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6106:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag;
6107:../../Source/Kernel/rme_kernel.c ****     
6108:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6109:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14983              		.loc 1 6109 5
 14984 0014 24301BE5 		ldr	r3, [fp, #-36]
 14985 0018 803003E2 		and	r3, r3, #128
 14986 001c 000053E3 		cmp	r3, #0
 14987 0020 1D00001A 		bne	.L1003
 14988              		.loc 1 6109 5 is_stmt 0 discriminator 1
 14989 0024 20301BE5 		ldr	r3, [fp, #-32]
 14990 0028 142093E5 		ldr	r2, [r3, #20]
 14991 002c 24301BE5 		ldr	r3, [fp, #-36]
 14992 0030 030052E1 		cmp	r2, r3
 14993 0034 0100008A 		bhi	.L1004
 14994              		.loc 1 6109 5 discriminator 3
 14995 0038 0230E0E3 		mvn	r3, #2
 14996 003c 9A0000EA 		b	.L1005
 14997              	.L1004:
 14998              		.loc 1 6109 5 discriminator 4
 14999 0040 24301BE5 		ldr	r3, [fp, #-36]
 15000 0044 8322A0E1 		lsl	r2, r3, #5
 15001 0048 20301BE5 		ldr	r3, [fp, #-32]
 15002 004c 0C3093E5 		ldr	r3, [r3, #12]
 15003 0050 033082E0 		add	r3, r2, r3
 15004 0054 08300BE5 		str	r3, [fp, #-8]
 15005 0058 08301BE5 		ldr	r3, [fp, #-8]
 15006 005c 0300A0E1 		mov	r0, r3
 15007 0060 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15008 0064 10000BE5 		str	r0, [fp, #-16]
 15009 0068 10301BE5 		ldr	r3, [fp, #-16]
 15010 006c 2338A0E1 		lsr	r3, r3, #16
 15011 0070 7330EFE6 		uxtb	r3, r3
 15012 0074 020053E3 		cmp	r3, #2
 15013 0078 0100001A 		bne	.L1006
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 372


 15014              		.loc 1 6109 5 discriminator 5
 15015 007c 0830E0E3 		mvn	r3, #8
 15016 0080 890000EA 		b	.L1005
 15017              	.L1006:
 15018              		.loc 1 6109 5 discriminator 6
 15019 0084 10301BE5 		ldr	r3, [fp, #-16]
 15020 0088 233CA0E1 		lsr	r3, r3, #24
 15021 008c 060053E3 		cmp	r3, #6
 15022 0090 4100000A 		beq	.L1007
 15023              		.loc 1 6109 5 discriminator 7
 15024 0094 0130E0E3 		mvn	r3, #1
 15025 0098 830000EA 		b	.L1005
 15026              	.L1003:
 15027              		.loc 1 6109 5 discriminator 2
 15028 009c 24301BE5 		ldr	r3, [fp, #-36]
 15029 00a0 2324A0E1 		lsr	r2, r3, #8
 15030 00a4 20301BE5 		ldr	r3, [fp, #-32]
 15031 00a8 143093E5 		ldr	r3, [r3, #20]
 15032 00ac 030052E1 		cmp	r2, r3
 15033 00b0 0100003A 		bcc	.L1008
 15034              		.loc 1 6109 5 discriminator 8
 15035 00b4 0230E0E3 		mvn	r3, #2
 15036 00b8 7B0000EA 		b	.L1005
 15037              	.L1008:
 15038              		.loc 1 6109 5 discriminator 9
 15039 00bc 24301BE5 		ldr	r3, [fp, #-36]
 15040 00c0 2334A0E1 		lsr	r3, r3, #8
 15041 00c4 8322A0E1 		lsl	r2, r3, #5
 15042 00c8 20301BE5 		ldr	r3, [fp, #-32]
 15043 00cc 0C3093E5 		ldr	r3, [r3, #12]
 15044 00d0 033082E0 		add	r3, r2, r3
 15045 00d4 08300BE5 		str	r3, [fp, #-8]
 15046 00d8 08301BE5 		ldr	r3, [fp, #-8]
 15047 00dc 0300A0E1 		mov	r0, r3
 15048 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15049 00e4 10000BE5 		str	r0, [fp, #-16]
 15050 00e8 10301BE5 		ldr	r3, [fp, #-16]
 15051 00ec 2338A0E1 		lsr	r3, r3, #16
 15052 00f0 7330EFE6 		uxtb	r3, r3
 15053 00f4 020053E3 		cmp	r3, #2
 15054 00f8 0100001A 		bne	.L1009
 15055              		.loc 1 6109 5 discriminator 10
 15056 00fc 0830E0E3 		mvn	r3, #8
 15057 0100 690000EA 		b	.L1005
 15058              	.L1009:
 15059              		.loc 1 6109 5 discriminator 11
 15060 0104 10301BE5 		ldr	r3, [fp, #-16]
 15061 0108 233CA0E1 		lsr	r3, r3, #24
 15062 010c 030053E3 		cmp	r3, #3
 15063 0110 0100000A 		beq	.L1010
 15064              		.loc 1 6109 5 discriminator 12
 15065 0114 0130E0E3 		mvn	r3, #1
 15066 0118 630000EA 		b	.L1005
 15067              	.L1010:
 15068              		.loc 1 6109 5 discriminator 13
 15069 011c 24301BE5 		ldr	r3, [fp, #-36]
 15070 0120 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 373


 15071 0124 08301BE5 		ldr	r3, [fp, #-8]
 15072 0128 143093E5 		ldr	r3, [r3, #20]
 15073 012c 030052E1 		cmp	r2, r3
 15074 0130 0100003A 		bcc	.L1011
 15075              		.loc 1 6109 5 discriminator 14
 15076 0134 0230E0E3 		mvn	r3, #2
 15077 0138 5B0000EA 		b	.L1005
 15078              	.L1011:
 15079              		.loc 1 6109 5 discriminator 15
 15080 013c 24301BE5 		ldr	r3, [fp, #-36]
 15081 0140 7F3003E2 		and	r3, r3, #127
 15082 0144 8322A0E1 		lsl	r2, r3, #5
 15083 0148 08301BE5 		ldr	r3, [fp, #-8]
 15084 014c 0C3093E5 		ldr	r3, [r3, #12]
 15085 0150 033082E0 		add	r3, r2, r3
 15086 0154 08300BE5 		str	r3, [fp, #-8]
 15087 0158 08301BE5 		ldr	r3, [fp, #-8]
 15088 015c 0300A0E1 		mov	r0, r3
 15089 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15090 0164 10000BE5 		str	r0, [fp, #-16]
 15091 0168 10301BE5 		ldr	r3, [fp, #-16]
 15092 016c 2338A0E1 		lsr	r3, r3, #16
 15093 0170 7330EFE6 		uxtb	r3, r3
 15094 0174 020053E3 		cmp	r3, #2
 15095 0178 0100001A 		bne	.L1012
 15096              		.loc 1 6109 5 discriminator 16
 15097 017c 0830E0E3 		mvn	r3, #8
 15098 0180 490000EA 		b	.L1005
 15099              	.L1012:
 15100              		.loc 1 6109 5 discriminator 17
 15101 0184 10301BE5 		ldr	r3, [fp, #-16]
 15102 0188 233CA0E1 		lsr	r3, r3, #24
 15103 018c 060053E3 		cmp	r3, #6
 15104 0190 0100000A 		beq	.L1007
 15105              		.loc 1 6109 5 discriminator 18
 15106 0194 0130E0E3 		mvn	r3, #1
 15107 0198 430000EA 		b	.L1005
 15108              	.L1007:
6110:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
6111:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6112:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_RCV);
 15109              		.loc 1 6112 5 is_stmt 1
 15110 019c 08301BE5 		ldr	r3, [fp, #-8]
 15111 01a0 083093E5 		ldr	r3, [r3, #8]
 15112 01a4 203003E2 		and	r3, r3, #32
 15113 01a8 000053E3 		cmp	r3, #0
 15114 01ac 0100001A 		bne	.L1013
 15115              		.loc 1 6112 5 is_stmt 0 discriminator 1
 15116 01b0 0630E0E3 		mvn	r3, #6
 15117 01b4 3C0000EA 		b	.L1005
 15118              	.L1013:
6113:../../Source/Kernel/rme_kernel.c ****     
6114:../../Source/Kernel/rme_kernel.c ****     /* Check if we are on the same core with the target thread */
6115:../../Source/Kernel/rme_kernel.c ****     Scheduler=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 15119              		.loc 1 6115 51 is_stmt 1
 15120 01b8 08301BE5 		ldr	r3, [fp, #-8]
 15121 01bc 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 374


 15122              		.loc 1 6115 14
 15123 01c0 14300BE5 		str	r3, [fp, #-20]
6116:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=RME_CPU_LOCAL())
 15124              		.loc 1 6116 24
 15125 01c4 14301BE5 		ldr	r3, [fp, #-20]
 15126 01c8 142093E5 		ldr	r2, [r3, #20]
 15127              		.loc 1 6116 7
 15128 01cc 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15129 01d0 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15130 01d4 030052E1 		cmp	r2, r3
 15131 01d8 0100000A 		beq	.L1014
6117:../../Source/Kernel/rme_kernel.c ****     {
6118:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6119:../../Source/Kernel/rme_kernel.c **** 
6120:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15132              		.loc 1 6120 16
 15133 01dc CB30E0E3 		mvn	r3, #203
 15134 01e0 310000EA 		b	.L1005
 15135              	.L1014:
6121:../../Source/Kernel/rme_kernel.c ****     }
6122:../../Source/Kernel/rme_kernel.c ****     else
6123:../../Source/Kernel/rme_kernel.c ****     {
6124:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6125:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6126:../../Source/Kernel/rme_kernel.c ****     }
6127:../../Source/Kernel/rme_kernel.c ****     
6128:../../Source/Kernel/rme_kernel.c ****     /* Check if there are any notifications */
6129:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Event.Next==&(Scheduler->Sched.Event))
 15136              		.loc 1 6129 30
 15137 01e4 14301BE5 		ldr	r3, [fp, #-20]
 15138 01e8 3C2093E5 		ldr	r2, [r3, #60]
 15139              		.loc 1 6129 37
 15140 01ec 14301BE5 		ldr	r3, [fp, #-20]
 15141 01f0 3C3083E2 		add	r3, r3, #60
 15142              		.loc 1 6129 7
 15143 01f4 030052E1 		cmp	r2, r3
 15144 01f8 0100001A 		bne	.L1015
6130:../../Source/Kernel/rme_kernel.c ****     {
6131:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6132:../../Source/Kernel/rme_kernel.c **** 
6133:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 15145              		.loc 1 6133 16
 15146 01fc CE30E0E3 		mvn	r3, #206
 15147 0200 290000EA 		b	.L1005
 15148              	.L1015:
6134:../../Source/Kernel/rme_kernel.c ****     }
6135:../../Source/Kernel/rme_kernel.c ****     else
6136:../../Source/Kernel/rme_kernel.c ****     {
6137:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6138:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6139:../../Source/Kernel/rme_kernel.c ****     }
6140:../../Source/Kernel/rme_kernel.c ****     
6141:../../Source/Kernel/rme_kernel.c ****     /* Return one notification and delete it from the notification list */
6142:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)(Scheduler->Sched.Event.Next-1U);
 15149              		.loc 1 6142 59
 15150 0204 14301BE5 		ldr	r3, [fp, #-20]
 15151 0208 3C3093E5 		ldr	r3, [r3, #60]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 375


 15152              		.loc 1 6142 11
 15153 020c 083043E2 		sub	r3, r3, #8
 15154 0210 18300BE5 		str	r3, [fp, #-24]
6143:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 15155              		.loc 1 6143 5
 15156 0214 18301BE5 		ldr	r3, [fp, #-24]
 15157 0218 0C2093E5 		ldr	r2, [r3, #12]
 15158 021c 18301BE5 		ldr	r3, [fp, #-24]
 15159 0220 083093E5 		ldr	r3, [r3, #8]
 15160 0224 0310A0E1 		mov	r1, r3
 15161 0228 0200A0E1 		mov	r0, r2
 15162 022c FEFFFFEB 		bl	_RME_List_Del
6144:../../Source/Kernel/rme_kernel.c ****     /* We need to do this because we are using this to detect whether the notification is sent */
6145:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 15163              		.loc 1 6145 5
 15164 0230 18301BE5 		ldr	r3, [fp, #-24]
 15165 0234 083083E2 		add	r3, r3, #8
 15166 0238 0300A0E1 		mov	r0, r3
 15167 023c FEFFFFEB 		bl	_RME_List_Crt
6146:../../Source/Kernel/rme_kernel.c ****     
6147:../../Source/Kernel/rme_kernel.c ****     /* Exception pending */
6148:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15168              		.loc 1 6148 21
 15169 0240 18301BE5 		ldr	r3, [fp, #-24]
 15170 0244 1C3093E5 		ldr	r3, [r3, #28]
 15171              		.loc 1 6148 7
 15172 0248 030053E3 		cmp	r3, #3
 15173 024c 0900001A 		bne	.L1016
6149:../../Source/Kernel/rme_kernel.c ****     {
6150:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6151:../../Source/Kernel/rme_kernel.c ****         
6152:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_EXCPEND_FLAG;
 15174              		.loc 1 6152 13
 15175 0250 0131A0E3 		mov	r3, #1073741824
 15176 0254 0C300BE5 		str	r3, [fp, #-12]
6153:../../Source/Kernel/rme_kernel.c ****         
6154:../../Source/Kernel/rme_kernel.c ****         /* Is it also out of timeslice? */
6155:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice==0U)
 15177              		.loc 1 6155 25
 15178 0258 18301BE5 		ldr	r3, [fp, #-24]
 15179 025c 183093E5 		ldr	r3, [r3, #24]
 15180              		.loc 1 6155 11
 15181 0260 000053E3 		cmp	r3, #0
 15182 0264 0C00001A 		bne	.L1017
6156:../../Source/Kernel/rme_kernel.c ****         {
6157:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6158:../../Source/Kernel/rme_kernel.c ****             
6159:../../Source/Kernel/rme_kernel.c ****             Flag|=RME_THD_TIMEOUT_FLAG;
 15183              		.loc 1 6159 17
 15184 0268 0C301BE5 		ldr	r3, [fp, #-12]
 15185 026c 023283E3 		orr	r3, r3, #536870912
 15186 0270 0C300BE5 		str	r3, [fp, #-12]
 15187 0274 080000EA 		b	.L1017
 15188              	.L1016:
6160:../../Source/Kernel/rme_kernel.c ****         }
6161:../../Source/Kernel/rme_kernel.c ****         else
6162:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 376


6163:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6164:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6165:../../Source/Kernel/rme_kernel.c ****         }
6166:../../Source/Kernel/rme_kernel.c ****     }
6167:../../Source/Kernel/rme_kernel.c ****     /* Timeout */
6168:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_TIMEOUT)
 15189              		.loc 1 6168 26
 15190 0278 18301BE5 		ldr	r3, [fp, #-24]
 15191 027c 1C3093E5 		ldr	r3, [r3, #28]
 15192              		.loc 1 6168 12
 15193 0280 020053E3 		cmp	r3, #2
 15194 0284 0200001A 		bne	.L1018
6169:../../Source/Kernel/rme_kernel.c ****     {
6170:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6171:../../Source/Kernel/rme_kernel.c ****         
6172:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_TIMEOUT_FLAG;
 15195              		.loc 1 6172 13
 15196 0288 0232A0E3 		mov	r3, #536870912
 15197 028c 0C300BE5 		str	r3, [fp, #-12]
 15198 0290 010000EA 		b	.L1017
 15199              	.L1018:
6173:../../Source/Kernel/rme_kernel.c ****     }
6174:../../Source/Kernel/rme_kernel.c ****     /* Spurious notification, cause eliminated before this sched rcv */
6175:../../Source/Kernel/rme_kernel.c ****     else
6176:../../Source/Kernel/rme_kernel.c ****     {
6177:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6178:../../Source/Kernel/rme_kernel.c ****         
6179:../../Source/Kernel/rme_kernel.c ****         Flag=0U;
 15200              		.loc 1 6179 13
 15201 0294 0030A0E3 		mov	r3, #0
 15202 0298 0C300BE5 		str	r3, [fp, #-12]
 15203              	.L1017:
6180:../../Source/Kernel/rme_kernel.c ****     }
6181:../../Source/Kernel/rme_kernel.c ****     
6182:../../Source/Kernel/rme_kernel.c ****     /* Return the notification TID with the flags */
6183:../../Source/Kernel/rme_kernel.c ****     return (rme_ret_t)(Thread->Sched.TID|Flag);
 15204              		.loc 1 6183 37
 15205 029c 18301BE5 		ldr	r3, [fp, #-24]
 15206 02a0 102093E5 		ldr	r2, [r3, #16]
 15207              		.loc 1 6183 41
 15208 02a4 0C301BE5 		ldr	r3, [fp, #-12]
 15209 02a8 033082E1 		orr	r3, r2, r3
 15210              	.L1005:
6184:../../Source/Kernel/rme_kernel.c **** }
 15211              		.loc 1 6184 1
 15212 02ac 0300A0E1 		mov	r0, r3
 15213 02b0 04D04BE2 		sub	sp, fp, #4
 15214              		.cfi_def_cfa 13, 8
 15215              		@ sp needed
 15216 02b4 0088BDE8 		pop	{fp, pc}
 15217              		.cfi_endproc
 15218              	.LFE62:
 15220              		.section	.text._RME_Thd_Time_Xfer,"ax",%progbits
 15221              		.align	2
 15222              		.syntax unified
 15223              		.arm
 15225              	_RME_Thd_Time_Xfer:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 377


 15226              	.LFB63:
6185:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Rcv *******************************************/
6186:../../Source/Kernel/rme_kernel.c **** 
6187:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Time_Xfer ************************************************
6188:../../Source/Kernel/rme_kernel.c **** Description : Transfer time from one thread to another. This can only be called
6189:../../Source/Kernel/rme_kernel.c ****               from the core that the thread is on, and the the two threads
6190:../../Source/Kernel/rme_kernel.c ****               involved in the time transfer must be on the same core.
6191:../../Source/Kernel/rme_kernel.c ****               If the time transfered is more than or equal to what the source
6192:../../Source/Kernel/rme_kernel.c ****               have, the source will be out of time or blocked. If the source is
6193:../../Source/Kernel/rme_kernel.c ****               both out of time and blocked, we do not send the notification;
6194:../../Source/Kernel/rme_kernel.c ****               Instead, we send the notification when the receive endpoint
6195:../../Source/Kernel/rme_kernel.c ****               actually receive something.
6196:../../Source/Kernel/rme_kernel.c ****               It is possible to transfer time to threads have a lower priority,
6197:../../Source/Kernel/rme_kernel.c ****               and it is also possible to transfer time to threads that have a
6198:../../Source/Kernel/rme_kernel.c ****               higher priority. In the latter case, and if the source is
6199:../../Source/Kernel/rme_kernel.c ****               currently running, a preemption will occur. However, it is not
6200:../../Source/Kernel/rme_kernel.c ****               allowed to transfer time to a thread with higher maximum priority,
6201:../../Source/Kernel/rme_kernel.c ****               and this guarantees that the quality of time can only degrade.
6202:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of threads in the system:
6203:../../Source/Kernel/rme_kernel.c ****               1. Init threads - They are created at boot-time and have infinite
6204:../../Source/Kernel/rme_kernel.c ****                                 budget.
6205:../../Source/Kernel/rme_kernel.c ****               2. Infinite threads - They are created later but have infinite
6206:../../Source/Kernel/rme_kernel.c ****                                     budget.
6207:../../Source/Kernel/rme_kernel.c ****               3. Normal threads - They are created later and have a finite
6208:../../Source/Kernel/rme_kernel.c ****                                   budget.
6209:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of transfer in the system:
6210:../../Source/Kernel/rme_kernel.c ****               1. Normal transfers - They transfer a finite budget.
6211:../../Source/Kernel/rme_kernel.c ****               2. Infinite transfers - They attempt to transfer an infinite
6212:../../Source/Kernel/rme_kernel.c ****                                       budget but will not revoke the timeslices
6213:../../Source/Kernel/rme_kernel.c ****                                       of the source if the source have infinite
6214:../../Source/Kernel/rme_kernel.c ****                                       budget.
6215:../../Source/Kernel/rme_kernel.c ****               3. Revoking transfers - They attempt to transfer an infinite
6216:../../Source/Kernel/rme_kernel.c ****                                       budget but will revoke the timeslices of
6217:../../Source/Kernel/rme_kernel.c ****                                       the source if the source is an infinite
6218:../../Source/Kernel/rme_kernel.c ****                                       thread.
6219:../../Source/Kernel/rme_kernel.c ****               Normal budget transferring rules:
6220:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6221:../../Source/Kernel/rme_kernel.c ****                 Nom   |   From   |     Init     |   Infinite   |    Normal
6222:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6223:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      T-
6224:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6225:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      T-
6226:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6227:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -A      |      -A      |      TA
6228:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6229:../../Source/Kernel/rme_kernel.c ****               Infinite budget transferring rules:
6230:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6231:../../Source/Kernel/rme_kernel.c ****                 Inf   |   From   |     Init     |   Infinite   |    Normal
6232:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6233:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      S-
6234:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6235:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      S-
6236:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6237:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      -I      |      TA
6238:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6239:../../Source/Kernel/rme_kernel.c ****               Revoking budget transferring rules:
6240:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 378


6241:../../Source/Kernel/rme_kernel.c ****                 Rev   |   From   |     Init     |   Infinite   |    Normal
6242:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6243:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      S-      |      S-
6244:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6245:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      S-      |      S-
6246:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6247:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      SI      |      TA
6248:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6249:../../Source/Kernel/rme_kernel.c ****               Notations:
6250:../../Source/Kernel/rme_kernel.c ****               -:Nothing will happen on source/destination.
6251:../../Source/Kernel/rme_kernel.c ****               T:Source timeout if all transferred.
6252:../../Source/Kernel/rme_kernel.c ****               S:Source will definitely timeout.
6253:../../Source/Kernel/rme_kernel.c ****               A:Destination accept if not overflow.
6254:../../Source/Kernel/rme_kernel.c ****               I:Destination will definitely become an infinite thread.
6255:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6256:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6257:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Dst - The destination thread.
6258:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6259:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Src - The source thread.
6260:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6261:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Time - The time to transfer, in slices.
6262:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INIT_TIME for revoking transfer.
6263:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INF_TIME for infinite trasnfer.
6264:../../Source/Kernel/rme_kernel.c **** Output      : None.
6265:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the destination time amount; or an
6266:../../Source/Kernel/rme_kernel.c ****                           error code.
6267:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6268:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Time_Xfer(struct RME_Cap_Cpt* Cpt,
6269:../../Source/Kernel/rme_kernel.c ****                                     struct RME_Reg_Struct* Reg,
6270:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Dst,
6271:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Src,
6272:../../Source/Kernel/rme_kernel.c ****                                     rme_ptr_t Time)
6273:../../Source/Kernel/rme_kernel.c **** {
 15227              		.loc 1 6273 1
 15228              		.cfi_startproc
 15229              		@ args = 4, pretend = 0, frame = 48
 15230              		@ frame_needed = 1, uses_anonymous_args = 0
 15231 0000 00482DE9 		push	{fp, lr}
 15232              		.cfi_def_cfa_offset 8
 15233              		.cfi_offset 11, -8
 15234              		.cfi_offset 14, -4
 15235 0004 04B08DE2 		add	fp, sp, #4
 15236              		.cfi_def_cfa 11, 4
 15237 0008 30D04DE2 		sub	sp, sp, #48
 15238 000c 28000BE5 		str	r0, [fp, #-40]
 15239 0010 2C100BE5 		str	r1, [fp, #-44]
 15240 0014 30200BE5 		str	r2, [fp, #-48]
 15241 0018 34300BE5 		str	r3, [fp, #-52]
6274:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Dst_Op;
6275:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Src_Op;
6276:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Dst;
6277:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Src;
6278:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6279:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Time_Xfer;
6280:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6281:../../Source/Kernel/rme_kernel.c ****     
6282:../../Source/Kernel/rme_kernel.c ****     /* We may allow transferring infinite time here */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 379


6283:../../Source/Kernel/rme_kernel.c ****     if(Time==0U)
 15242              		.loc 1 6283 7
 15243 001c 04309BE5 		ldr	r3, [fp, #4]
 15244 0020 000053E3 		cmp	r3, #0
 15245 0024 0100001A 		bne	.L1020
6284:../../Source/Kernel/rme_kernel.c ****     {
6285:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6286:../../Source/Kernel/rme_kernel.c **** 
6287:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15246              		.loc 1 6287 16
 15247 0028 CB30E0E3 		mvn	r3, #203
 15248 002c 7D0100EA 		b	.L1021
 15249              	.L1020:
6288:../../Source/Kernel/rme_kernel.c ****     }
6289:../../Source/Kernel/rme_kernel.c ****     else
6290:../../Source/Kernel/rme_kernel.c ****     {
6291:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6292:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6293:../../Source/Kernel/rme_kernel.c ****     }
6294:../../Source/Kernel/rme_kernel.c ****     
6295:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6296:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Dst,RME_CAP_TYPE_THD,
 15250              		.loc 1 6296 5
 15251 0030 30301BE5 		ldr	r3, [fp, #-48]
 15252 0034 803003E2 		and	r3, r3, #128
 15253 0038 000053E3 		cmp	r3, #0
 15254 003c 1D00001A 		bne	.L1022
 15255              		.loc 1 6296 5 is_stmt 0 discriminator 1
 15256 0040 28301BE5 		ldr	r3, [fp, #-40]
 15257 0044 142093E5 		ldr	r2, [r3, #20]
 15258 0048 30301BE5 		ldr	r3, [fp, #-48]
 15259 004c 030052E1 		cmp	r2, r3
 15260 0050 0100008A 		bhi	.L1023
 15261              		.loc 1 6296 5 discriminator 3
 15262 0054 0230E0E3 		mvn	r3, #2
 15263 0058 720100EA 		b	.L1021
 15264              	.L1023:
 15265              		.loc 1 6296 5 discriminator 4
 15266 005c 30301BE5 		ldr	r3, [fp, #-48]
 15267 0060 8322A0E1 		lsl	r2, r3, #5
 15268 0064 28301BE5 		ldr	r3, [fp, #-40]
 15269 0068 0C3093E5 		ldr	r3, [r3, #12]
 15270 006c 033082E0 		add	r3, r2, r3
 15271 0070 08300BE5 		str	r3, [fp, #-8]
 15272 0074 08301BE5 		ldr	r3, [fp, #-8]
 15273 0078 0300A0E1 		mov	r0, r3
 15274 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15275 0080 14000BE5 		str	r0, [fp, #-20]
 15276 0084 14301BE5 		ldr	r3, [fp, #-20]
 15277 0088 2338A0E1 		lsr	r3, r3, #16
 15278 008c 7330EFE6 		uxtb	r3, r3
 15279 0090 020053E3 		cmp	r3, #2
 15280 0094 0100001A 		bne	.L1024
 15281              		.loc 1 6296 5 discriminator 5
 15282 0098 0830E0E3 		mvn	r3, #8
 15283 009c 610100EA 		b	.L1021
 15284              	.L1024:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 380


 15285              		.loc 1 6296 5 discriminator 6
 15286 00a0 14301BE5 		ldr	r3, [fp, #-20]
 15287 00a4 233CA0E1 		lsr	r3, r3, #24
 15288 00a8 060053E3 		cmp	r3, #6
 15289 00ac 4100000A 		beq	.L1025
 15290              		.loc 1 6296 5 discriminator 7
 15291 00b0 0130E0E3 		mvn	r3, #1
 15292 00b4 5B0100EA 		b	.L1021
 15293              	.L1022:
 15294              		.loc 1 6296 5 discriminator 2
 15295 00b8 30301BE5 		ldr	r3, [fp, #-48]
 15296 00bc 2324A0E1 		lsr	r2, r3, #8
 15297 00c0 28301BE5 		ldr	r3, [fp, #-40]
 15298 00c4 143093E5 		ldr	r3, [r3, #20]
 15299 00c8 030052E1 		cmp	r2, r3
 15300 00cc 0100003A 		bcc	.L1026
 15301              		.loc 1 6296 5 discriminator 8
 15302 00d0 0230E0E3 		mvn	r3, #2
 15303 00d4 530100EA 		b	.L1021
 15304              	.L1026:
 15305              		.loc 1 6296 5 discriminator 9
 15306 00d8 30301BE5 		ldr	r3, [fp, #-48]
 15307 00dc 2334A0E1 		lsr	r3, r3, #8
 15308 00e0 8322A0E1 		lsl	r2, r3, #5
 15309 00e4 28301BE5 		ldr	r3, [fp, #-40]
 15310 00e8 0C3093E5 		ldr	r3, [r3, #12]
 15311 00ec 033082E0 		add	r3, r2, r3
 15312 00f0 08300BE5 		str	r3, [fp, #-8]
 15313 00f4 08301BE5 		ldr	r3, [fp, #-8]
 15314 00f8 0300A0E1 		mov	r0, r3
 15315 00fc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15316 0100 14000BE5 		str	r0, [fp, #-20]
 15317 0104 14301BE5 		ldr	r3, [fp, #-20]
 15318 0108 2338A0E1 		lsr	r3, r3, #16
 15319 010c 7330EFE6 		uxtb	r3, r3
 15320 0110 020053E3 		cmp	r3, #2
 15321 0114 0100001A 		bne	.L1027
 15322              		.loc 1 6296 5 discriminator 10
 15323 0118 0830E0E3 		mvn	r3, #8
 15324 011c 410100EA 		b	.L1021
 15325              	.L1027:
 15326              		.loc 1 6296 5 discriminator 11
 15327 0120 14301BE5 		ldr	r3, [fp, #-20]
 15328 0124 233CA0E1 		lsr	r3, r3, #24
 15329 0128 030053E3 		cmp	r3, #3
 15330 012c 0100000A 		beq	.L1028
 15331              		.loc 1 6296 5 discriminator 12
 15332 0130 0130E0E3 		mvn	r3, #1
 15333 0134 3B0100EA 		b	.L1021
 15334              	.L1028:
 15335              		.loc 1 6296 5 discriminator 13
 15336 0138 30301BE5 		ldr	r3, [fp, #-48]
 15337 013c 7F2003E2 		and	r2, r3, #127
 15338 0140 08301BE5 		ldr	r3, [fp, #-8]
 15339 0144 143093E5 		ldr	r3, [r3, #20]
 15340 0148 030052E1 		cmp	r2, r3
 15341 014c 0100003A 		bcc	.L1029
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 381


 15342              		.loc 1 6296 5 discriminator 14
 15343 0150 0230E0E3 		mvn	r3, #2
 15344 0154 330100EA 		b	.L1021
 15345              	.L1029:
 15346              		.loc 1 6296 5 discriminator 15
 15347 0158 30301BE5 		ldr	r3, [fp, #-48]
 15348 015c 7F3003E2 		and	r3, r3, #127
 15349 0160 8322A0E1 		lsl	r2, r3, #5
 15350 0164 08301BE5 		ldr	r3, [fp, #-8]
 15351 0168 0C3093E5 		ldr	r3, [r3, #12]
 15352 016c 033082E0 		add	r3, r2, r3
 15353 0170 08300BE5 		str	r3, [fp, #-8]
 15354 0174 08301BE5 		ldr	r3, [fp, #-8]
 15355 0178 0300A0E1 		mov	r0, r3
 15356 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15357 0180 14000BE5 		str	r0, [fp, #-20]
 15358 0184 14301BE5 		ldr	r3, [fp, #-20]
 15359 0188 2338A0E1 		lsr	r3, r3, #16
 15360 018c 7330EFE6 		uxtb	r3, r3
 15361 0190 020053E3 		cmp	r3, #2
 15362 0194 0100001A 		bne	.L1030
 15363              		.loc 1 6296 5 discriminator 16
 15364 0198 0830E0E3 		mvn	r3, #8
 15365 019c 210100EA 		b	.L1021
 15366              	.L1030:
 15367              		.loc 1 6296 5 discriminator 17
 15368 01a0 14301BE5 		ldr	r3, [fp, #-20]
 15369 01a4 233CA0E1 		lsr	r3, r3, #24
 15370 01a8 060053E3 		cmp	r3, #6
 15371 01ac 0100000A 		beq	.L1025
 15372              		.loc 1 6296 5 discriminator 18
 15373 01b0 0130E0E3 		mvn	r3, #1
 15374 01b4 1B0100EA 		b	.L1021
 15375              	.L1025:
6297:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Dst_Op,Type_Stat);
6298:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Src,RME_CAP_TYPE_THD,
 15376              		.loc 1 6298 5 is_stmt 1
 15377 01b8 34301BE5 		ldr	r3, [fp, #-52]
 15378 01bc 803003E2 		and	r3, r3, #128
 15379 01c0 000053E3 		cmp	r3, #0
 15380 01c4 1D00001A 		bne	.L1031
 15381              		.loc 1 6298 5 is_stmt 0 discriminator 1
 15382 01c8 28301BE5 		ldr	r3, [fp, #-40]
 15383 01cc 142093E5 		ldr	r2, [r3, #20]
 15384 01d0 34301BE5 		ldr	r3, [fp, #-52]
 15385 01d4 030052E1 		cmp	r2, r3
 15386 01d8 0100008A 		bhi	.L1032
 15387              		.loc 1 6298 5 discriminator 3
 15388 01dc 0230E0E3 		mvn	r3, #2
 15389 01e0 100100EA 		b	.L1021
 15390              	.L1032:
 15391              		.loc 1 6298 5 discriminator 4
 15392 01e4 34301BE5 		ldr	r3, [fp, #-52]
 15393 01e8 8322A0E1 		lsl	r2, r3, #5
 15394 01ec 28301BE5 		ldr	r3, [fp, #-40]
 15395 01f0 0C3093E5 		ldr	r3, [r3, #12]
 15396 01f4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 382


 15397 01f8 0C300BE5 		str	r3, [fp, #-12]
 15398 01fc 0C301BE5 		ldr	r3, [fp, #-12]
 15399 0200 0300A0E1 		mov	r0, r3
 15400 0204 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15401 0208 14000BE5 		str	r0, [fp, #-20]
 15402 020c 14301BE5 		ldr	r3, [fp, #-20]
 15403 0210 2338A0E1 		lsr	r3, r3, #16
 15404 0214 7330EFE6 		uxtb	r3, r3
 15405 0218 020053E3 		cmp	r3, #2
 15406 021c 0100001A 		bne	.L1033
 15407              		.loc 1 6298 5 discriminator 5
 15408 0220 0830E0E3 		mvn	r3, #8
 15409 0224 FF0000EA 		b	.L1021
 15410              	.L1033:
 15411              		.loc 1 6298 5 discriminator 6
 15412 0228 14301BE5 		ldr	r3, [fp, #-20]
 15413 022c 233CA0E1 		lsr	r3, r3, #24
 15414 0230 060053E3 		cmp	r3, #6
 15415 0234 4100000A 		beq	.L1034
 15416              		.loc 1 6298 5 discriminator 7
 15417 0238 0130E0E3 		mvn	r3, #1
 15418 023c F90000EA 		b	.L1021
 15419              	.L1031:
 15420              		.loc 1 6298 5 discriminator 2
 15421 0240 34301BE5 		ldr	r3, [fp, #-52]
 15422 0244 2324A0E1 		lsr	r2, r3, #8
 15423 0248 28301BE5 		ldr	r3, [fp, #-40]
 15424 024c 143093E5 		ldr	r3, [r3, #20]
 15425 0250 030052E1 		cmp	r2, r3
 15426 0254 0100003A 		bcc	.L1035
 15427              		.loc 1 6298 5 discriminator 8
 15428 0258 0230E0E3 		mvn	r3, #2
 15429 025c F10000EA 		b	.L1021
 15430              	.L1035:
 15431              		.loc 1 6298 5 discriminator 9
 15432 0260 34301BE5 		ldr	r3, [fp, #-52]
 15433 0264 2334A0E1 		lsr	r3, r3, #8
 15434 0268 8322A0E1 		lsl	r2, r3, #5
 15435 026c 28301BE5 		ldr	r3, [fp, #-40]
 15436 0270 0C3093E5 		ldr	r3, [r3, #12]
 15437 0274 033082E0 		add	r3, r2, r3
 15438 0278 0C300BE5 		str	r3, [fp, #-12]
 15439 027c 0C301BE5 		ldr	r3, [fp, #-12]
 15440 0280 0300A0E1 		mov	r0, r3
 15441 0284 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15442 0288 14000BE5 		str	r0, [fp, #-20]
 15443 028c 14301BE5 		ldr	r3, [fp, #-20]
 15444 0290 2338A0E1 		lsr	r3, r3, #16
 15445 0294 7330EFE6 		uxtb	r3, r3
 15446 0298 020053E3 		cmp	r3, #2
 15447 029c 0100001A 		bne	.L1036
 15448              		.loc 1 6298 5 discriminator 10
 15449 02a0 0830E0E3 		mvn	r3, #8
 15450 02a4 DF0000EA 		b	.L1021
 15451              	.L1036:
 15452              		.loc 1 6298 5 discriminator 11
 15453 02a8 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 383


 15454 02ac 233CA0E1 		lsr	r3, r3, #24
 15455 02b0 030053E3 		cmp	r3, #3
 15456 02b4 0100000A 		beq	.L1037
 15457              		.loc 1 6298 5 discriminator 12
 15458 02b8 0130E0E3 		mvn	r3, #1
 15459 02bc D90000EA 		b	.L1021
 15460              	.L1037:
 15461              		.loc 1 6298 5 discriminator 13
 15462 02c0 34301BE5 		ldr	r3, [fp, #-52]
 15463 02c4 7F2003E2 		and	r2, r3, #127
 15464 02c8 0C301BE5 		ldr	r3, [fp, #-12]
 15465 02cc 143093E5 		ldr	r3, [r3, #20]
 15466 02d0 030052E1 		cmp	r2, r3
 15467 02d4 0100003A 		bcc	.L1038
 15468              		.loc 1 6298 5 discriminator 14
 15469 02d8 0230E0E3 		mvn	r3, #2
 15470 02dc D10000EA 		b	.L1021
 15471              	.L1038:
 15472              		.loc 1 6298 5 discriminator 15
 15473 02e0 34301BE5 		ldr	r3, [fp, #-52]
 15474 02e4 7F3003E2 		and	r3, r3, #127
 15475 02e8 8322A0E1 		lsl	r2, r3, #5
 15476 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 15477 02f0 0C3093E5 		ldr	r3, [r3, #12]
 15478 02f4 033082E0 		add	r3, r2, r3
 15479 02f8 0C300BE5 		str	r3, [fp, #-12]
 15480 02fc 0C301BE5 		ldr	r3, [fp, #-12]
 15481 0300 0300A0E1 		mov	r0, r3
 15482 0304 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15483 0308 14000BE5 		str	r0, [fp, #-20]
 15484 030c 14301BE5 		ldr	r3, [fp, #-20]
 15485 0310 2338A0E1 		lsr	r3, r3, #16
 15486 0314 7330EFE6 		uxtb	r3, r3
 15487 0318 020053E3 		cmp	r3, #2
 15488 031c 0100001A 		bne	.L1039
 15489              		.loc 1 6298 5 discriminator 16
 15490 0320 0830E0E3 		mvn	r3, #8
 15491 0324 BF0000EA 		b	.L1021
 15492              	.L1039:
 15493              		.loc 1 6298 5 discriminator 17
 15494 0328 14301BE5 		ldr	r3, [fp, #-20]
 15495 032c 233CA0E1 		lsr	r3, r3, #24
 15496 0330 060053E3 		cmp	r3, #6
 15497 0334 0100000A 		beq	.L1034
 15498              		.loc 1 6298 5 discriminator 18
 15499 0338 0130E0E3 		mvn	r3, #1
 15500 033c B90000EA 		b	.L1021
 15501              	.L1034:
6299:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Src_Op,Type_Stat);
6300:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6301:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Dst_Op,RME_THD_FLAG_XFER_DST);
 15502              		.loc 1 6301 5 is_stmt 1
 15503 0340 08301BE5 		ldr	r3, [fp, #-8]
 15504 0344 083093E5 		ldr	r3, [r3, #8]
 15505 0348 803003E2 		and	r3, r3, #128
 15506 034c 000053E3 		cmp	r3, #0
 15507 0350 0100001A 		bne	.L1040
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 384


 15508              		.loc 1 6301 5 is_stmt 0 discriminator 1
 15509 0354 0630E0E3 		mvn	r3, #6
 15510 0358 B20000EA 		b	.L1021
 15511              	.L1040:
6302:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Src_Op,RME_THD_FLAG_XFER_SRC);
 15512              		.loc 1 6302 5 is_stmt 1
 15513 035c 0C301BE5 		ldr	r3, [fp, #-12]
 15514 0360 083093E5 		ldr	r3, [r3, #8]
 15515 0364 403003E2 		and	r3, r3, #64
 15516 0368 000053E3 		cmp	r3, #0
 15517 036c 0100001A 		bne	.L1041
 15518              		.loc 1 6302 5 is_stmt 0 discriminator 1
 15519 0370 0630E0E3 		mvn	r3, #6
 15520 0374 AB0000EA 		b	.L1021
 15521              	.L1041:
6303:../../Source/Kernel/rme_kernel.c **** 
6304:../../Source/Kernel/rme_kernel.c ****     /* Check if the two threads are on the core that is accordance with what we are on */
6305:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15522              		.loc 1 6305 10 is_stmt 1
 15523 0378 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15524 037c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15525 0380 18300BE5 		str	r3, [fp, #-24]
6306:../../Source/Kernel/rme_kernel.c ****     Thd_Src=RME_CAP_GETOBJ(Thd_Src_Op,struct RME_Thd_Struct*);
 15526              		.loc 1 6306 13
 15527 0384 0C301BE5 		ldr	r3, [fp, #-12]
 15528 0388 0C3093E5 		ldr	r3, [r3, #12]
 15529              		.loc 1 6306 12
 15530 038c 1C300BE5 		str	r3, [fp, #-28]
6307:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Local!=Local)
 15531              		.loc 1 6307 22
 15532 0390 1C301BE5 		ldr	r3, [fp, #-28]
 15533 0394 143093E5 		ldr	r3, [r3, #20]
 15534              		.loc 1 6307 7
 15535 0398 18201BE5 		ldr	r2, [fp, #-24]
 15536 039c 030052E1 		cmp	r2, r3
 15537 03a0 0100000A 		beq	.L1042
6308:../../Source/Kernel/rme_kernel.c ****     {
6309:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6310:../../Source/Kernel/rme_kernel.c **** 
6311:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15538              		.loc 1 6311 16
 15539 03a4 CB30E0E3 		mvn	r3, #203
 15540 03a8 9E0000EA 		b	.L1021
 15541              	.L1042:
6312:../../Source/Kernel/rme_kernel.c ****     }
6313:../../Source/Kernel/rme_kernel.c ****     else
6314:../../Source/Kernel/rme_kernel.c ****     {
6315:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6316:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6317:../../Source/Kernel/rme_kernel.c ****     }
6318:../../Source/Kernel/rme_kernel.c ****     
6319:../../Source/Kernel/rme_kernel.c ****     /* Check if we have slices to transfer; 0 implies TIMEOUT, BLOCKED, or EXCPEND */
6320:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 15542              		.loc 1 6320 22
 15543 03ac 1C301BE5 		ldr	r3, [fp, #-28]
 15544 03b0 183093E5 		ldr	r3, [r3, #24]
 15545              		.loc 1 6320 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 385


 15546 03b4 000053E3 		cmp	r3, #0
 15547 03b8 0100001A 		bne	.L1043
6321:../../Source/Kernel/rme_kernel.c ****     {
6322:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6323:../../Source/Kernel/rme_kernel.c **** 
6324:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15548              		.loc 1 6324 16
 15549 03bc CB30E0E3 		mvn	r3, #203
 15550 03c0 980000EA 		b	.L1021
 15551              	.L1043:
6325:../../Source/Kernel/rme_kernel.c ****     }
6326:../../Source/Kernel/rme_kernel.c ****     else
6327:../../Source/Kernel/rme_kernel.c ****     {
6328:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6329:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6330:../../Source/Kernel/rme_kernel.c ****     }
6331:../../Source/Kernel/rme_kernel.c ****     
6332:../../Source/Kernel/rme_kernel.c ****     Thd_Dst=RME_CAP_GETOBJ(Thd_Dst_Op,struct RME_Thd_Struct*);
 15552              		.loc 1 6332 13
 15553 03c4 08301BE5 		ldr	r3, [fp, #-8]
 15554 03c8 0C3093E5 		ldr	r3, [r3, #12]
 15555              		.loc 1 6332 12
 15556 03cc 20300BE5 		str	r3, [fp, #-32]
6333:../../Source/Kernel/rme_kernel.c ****     
6334:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.Local!=Local)
 15557              		.loc 1 6334 22
 15558 03d0 20301BE5 		ldr	r3, [fp, #-32]
 15559 03d4 143093E5 		ldr	r3, [r3, #20]
 15560              		.loc 1 6334 7
 15561 03d8 18201BE5 		ldr	r2, [fp, #-24]
 15562 03dc 030052E1 		cmp	r2, r3
 15563 03e0 0100000A 		beq	.L1044
6335:../../Source/Kernel/rme_kernel.c ****     {
6336:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6337:../../Source/Kernel/rme_kernel.c **** 
6338:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15564              		.loc 1 6338 16
 15565 03e4 CB30E0E3 		mvn	r3, #203
 15566 03e8 8E0000EA 		b	.L1021
 15567              	.L1044:
6339:../../Source/Kernel/rme_kernel.c ****     }
6340:../../Source/Kernel/rme_kernel.c ****     else
6341:../../Source/Kernel/rme_kernel.c ****     {
6342:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6343:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6344:../../Source/Kernel/rme_kernel.c ****     }
6345:../../Source/Kernel/rme_kernel.c **** 
6346:../../Source/Kernel/rme_kernel.c ****     /* The destination must never have higher maximum priority than the source,
6347:../../Source/Kernel/rme_kernel.c ****      * unless it is a init thread which could be used as a black hole */
6348:../../Source/Kernel/rme_kernel.c ****     if((Thd_Src->Sched.Prio_Max<Thd_Dst->Sched.Prio_Max)&&
 15568              		.loc 1 6348 23
 15569 03ec 1C301BE5 		ldr	r3, [fp, #-28]
 15570 03f0 242093E5 		ldr	r2, [r3, #36]
 15571              		.loc 1 6348 47
 15572 03f4 20301BE5 		ldr	r3, [fp, #-32]
 15573 03f8 243093E5 		ldr	r3, [r3, #36]
 15574              		.loc 1 6348 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 386


 15575 03fc 030052E1 		cmp	r2, r3
 15576 0400 0500002A 		bcs	.L1045
6349:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 15577              		.loc 1 6349 23 discriminator 1
 15578 0404 20301BE5 		ldr	r3, [fp, #-32]
 15579 0408 183093E5 		ldr	r3, [r3, #24]
6348:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 15580              		.loc 1 6348 57 discriminator 1
 15581 040c 060173E3 		cmn	r3, #-2147483647
 15582 0410 0100000A 		beq	.L1045
6350:../../Source/Kernel/rme_kernel.c ****     {
6351:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6352:../../Source/Kernel/rme_kernel.c **** 
6353:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 15583              		.loc 1 6353 16
 15584 0414 CC30E0E3 		mvn	r3, #204
 15585 0418 820000EA 		b	.L1021
 15586              	.L1045:
6354:../../Source/Kernel/rme_kernel.c ****     }
6355:../../Source/Kernel/rme_kernel.c ****     else
6356:../../Source/Kernel/rme_kernel.c ****     {
6357:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6358:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6359:../../Source/Kernel/rme_kernel.c ****     }
6360:../../Source/Kernel/rme_kernel.c ****     
6361:../../Source/Kernel/rme_kernel.c ****     /* Delegating from a normal thread */
6362:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice<RME_THD_INF_TIME)
 15587              		.loc 1 6362 22
 15588 041c 1C301BE5 		ldr	r3, [fp, #-28]
 15589 0420 183093E5 		ldr	r3, [r3, #24]
 15590              		.loc 1 6362 7
 15591 0424 0E0173E3 		cmn	r3, #-2147483645
 15592 0428 3200008A 		bhi	.L1046
6363:../../Source/Kernel/rme_kernel.c ****     {
6364:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6365:../../Source/Kernel/rme_kernel.c **** 
6366:../../Source/Kernel/rme_kernel.c ****         /* Delegate all our time */
6367:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 15593              		.loc 1 6367 11
 15594 042c 04309BE5 		ldr	r3, [fp, #4]
 15595 0430 0E0173E3 		cmn	r3, #-2147483645
 15596 0434 0300009A 		bls	.L1047
6368:../../Source/Kernel/rme_kernel.c ****         {
6369:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6370:../../Source/Kernel/rme_kernel.c **** 
6371:../../Source/Kernel/rme_kernel.c ****             Time_Xfer=Thd_Src->Sched.Slice;
 15597              		.loc 1 6371 22
 15598 0438 1C301BE5 		ldr	r3, [fp, #-28]
 15599 043c 183093E5 		ldr	r3, [r3, #24]
 15600 0440 10300BE5 		str	r3, [fp, #-16]
 15601 0444 0A0000EA 		b	.L1048
 15602              	.L1047:
6372:../../Source/Kernel/rme_kernel.c ****         }
6373:../../Source/Kernel/rme_kernel.c ****         /* Delegate some time, if not sufficient, clean up the source time */
6374:../../Source/Kernel/rme_kernel.c ****         else
6375:../../Source/Kernel/rme_kernel.c ****         {
6376:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 387


6377:../../Source/Kernel/rme_kernel.c ****             
6378:../../Source/Kernel/rme_kernel.c ****             if(Thd_Src->Sched.Slice>Time)
 15603              		.loc 1 6378 30
 15604 0448 1C301BE5 		ldr	r3, [fp, #-28]
 15605 044c 183093E5 		ldr	r3, [r3, #24]
 15606              		.loc 1 6378 15
 15607 0450 04209BE5 		ldr	r2, [fp, #4]
 15608 0454 030052E1 		cmp	r2, r3
 15609 0458 0200002A 		bcs	.L1049
6379:../../Source/Kernel/rme_kernel.c ****             {
6380:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6381:../../Source/Kernel/rme_kernel.c **** 
6382:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Time;
 15610              		.loc 1 6382 26
 15611 045c 04309BE5 		ldr	r3, [fp, #4]
 15612 0460 10300BE5 		str	r3, [fp, #-16]
 15613 0464 020000EA 		b	.L1048
 15614              	.L1049:
6383:../../Source/Kernel/rme_kernel.c ****             }
6384:../../Source/Kernel/rme_kernel.c ****             else
6385:../../Source/Kernel/rme_kernel.c ****             {
6386:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6387:../../Source/Kernel/rme_kernel.c **** 
6388:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Thd_Src->Sched.Slice;
 15615              		.loc 1 6388 26
 15616 0468 1C301BE5 		ldr	r3, [fp, #-28]
 15617 046c 183093E5 		ldr	r3, [r3, #24]
 15618 0470 10300BE5 		str	r3, [fp, #-16]
 15619              	.L1048:
6389:../../Source/Kernel/rme_kernel.c ****             }
6390:../../Source/Kernel/rme_kernel.c ****         }
6391:../../Source/Kernel/rme_kernel.c ****         
6392:../../Source/Kernel/rme_kernel.c ****         /* See if we are transferring to an infinite budget thread. If yes, we
6393:../../Source/Kernel/rme_kernel.c ****          * are revoking timeslices; If not, this is a finite transfer */
6394:../../Source/Kernel/rme_kernel.c ****         if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 15620              		.loc 1 6394 26
 15621 0474 20301BE5 		ldr	r3, [fp, #-32]
 15622 0478 183093E5 		ldr	r3, [r3, #24]
 15623              		.loc 1 6394 11
 15624 047c 0E0173E3 		cmn	r3, #-2147483645
 15625 0480 1500008A 		bhi	.L1050
6395:../../Source/Kernel/rme_kernel.c ****         {
6396:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6397:../../Source/Kernel/rme_kernel.c ****             
6398:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time_Xfer);
 15626              		.loc 1 6398 13
 15627 0484 20301BE5 		ldr	r3, [fp, #-32]
 15628 0488 182093E5 		ldr	r2, [r3, #24]
 15629 048c 10301BE5 		ldr	r3, [fp, #-16]
 15630 0490 033082E0 		add	r3, r2, r3
 15631 0494 0E0173E3 		cmn	r3, #-2147483645
 15632 0498 0700008A 		bhi	.L1051
 15633              		.loc 1 6398 13 is_stmt 0 discriminator 2
 15634 049c 20301BE5 		ldr	r3, [fp, #-32]
 15635 04a0 182093E5 		ldr	r2, [r3, #24]
 15636 04a4 10301BE5 		ldr	r3, [fp, #-16]
 15637 04a8 032082E0 		add	r2, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 388


 15638 04ac 20301BE5 		ldr	r3, [fp, #-32]
 15639 04b0 183093E5 		ldr	r3, [r3, #24]
 15640 04b4 030052E1 		cmp	r2, r3
 15641 04b8 0100002A 		bcs	.L1052
 15642              	.L1051:
 15643              		.loc 1 6398 13 discriminator 3
 15644 04bc CF30E0E3 		mvn	r3, #207
 15645 04c0 580000EA 		b	.L1021
 15646              	.L1052:
6399:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time_Xfer;
 15647              		.loc 1 6399 33 is_stmt 1
 15648 04c4 20301BE5 		ldr	r3, [fp, #-32]
 15649 04c8 182093E5 		ldr	r2, [r3, #24]
 15650 04cc 10301BE5 		ldr	r3, [fp, #-16]
 15651 04d0 032082E0 		add	r2, r2, r3
 15652 04d4 20301BE5 		ldr	r3, [fp, #-32]
 15653 04d8 182083E5 		str	r2, [r3, #24]
 15654              	.L1050:
6400:../../Source/Kernel/rme_kernel.c ****         }
6401:../../Source/Kernel/rme_kernel.c ****         else
6402:../../Source/Kernel/rme_kernel.c ****         {
6403:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6404:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6405:../../Source/Kernel/rme_kernel.c ****         }
6406:../../Source/Kernel/rme_kernel.c ****         
6407:../../Source/Kernel/rme_kernel.c ****         Thd_Src->Sched.Slice-=Time_Xfer;
 15655              		.loc 1 6407 29
 15656 04dc 1C301BE5 		ldr	r3, [fp, #-28]
 15657 04e0 182093E5 		ldr	r2, [r3, #24]
 15658 04e4 10301BE5 		ldr	r3, [fp, #-16]
 15659 04e8 032042E0 		sub	r2, r2, r3
 15660 04ec 1C301BE5 		ldr	r3, [fp, #-28]
 15661 04f0 182083E5 		str	r2, [r3, #24]
 15662 04f4 2A0000EA 		b	.L1053
 15663              	.L1046:
6408:../../Source/Kernel/rme_kernel.c ****     }
6409:../../Source/Kernel/rme_kernel.c ****     /* Delegating from init or infinite thread */
6410:../../Source/Kernel/rme_kernel.c ****     else
6411:../../Source/Kernel/rme_kernel.c ****     {
6412:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6413:../../Source/Kernel/rme_kernel.c **** 
6414:../../Source/Kernel/rme_kernel.c ****         /* Infinite transfer to the destination */
6415:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 15664              		.loc 1 6415 11
 15665 04f8 04309BE5 		ldr	r3, [fp, #4]
 15666 04fc 0E0173E3 		cmn	r3, #-2147483645
 15667 0500 1100009A 		bls	.L1054
6416:../../Source/Kernel/rme_kernel.c ****         {
6417:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6418:../../Source/Kernel/rme_kernel.c **** 
6419:../../Source/Kernel/rme_kernel.c ****             /* This transfer will revoke the infinite budget */
6420:../../Source/Kernel/rme_kernel.c ****             if(Time==RME_THD_INIT_TIME)
 15668              		.loc 1 6420 15
 15669 0504 04309BE5 		ldr	r3, [fp, #4]
 15670 0508 060173E3 		cmn	r3, #-2147483647
 15671 050c 0600001A 		bne	.L1055
6421:../../Source/Kernel/rme_kernel.c ****             {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 389


6422:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6423:../../Source/Kernel/rme_kernel.c ****                 
6424:../../Source/Kernel/rme_kernel.c ****                 /* Will not revoke, source is an init thread */
6425:../../Source/Kernel/rme_kernel.c ****                 if(Thd_Src->Sched.Slice!=RME_THD_INIT_TIME)
 15672              		.loc 1 6425 34
 15673 0510 1C301BE5 		ldr	r3, [fp, #-28]
 15674 0514 183093E5 		ldr	r3, [r3, #24]
 15675              		.loc 1 6425 19
 15676 0518 060173E3 		cmn	r3, #-2147483647
 15677 051c 0200000A 		beq	.L1055
6426:../../Source/Kernel/rme_kernel.c ****                 {
6427:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6428:../../Source/Kernel/rme_kernel.c ****                     
6429:../../Source/Kernel/rme_kernel.c ****                     Thd_Src->Sched.Slice=0U;
 15678              		.loc 1 6429 41
 15679 0520 1C301BE5 		ldr	r3, [fp, #-28]
 15680 0524 0020A0E3 		mov	r2, #0
 15681 0528 182083E5 		str	r2, [r3, #24]
 15682              	.L1055:
6430:../../Source/Kernel/rme_kernel.c ****                 }
6431:../../Source/Kernel/rme_kernel.c ****                 else
6432:../../Source/Kernel/rme_kernel.c ****                 {
6433:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6434:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
6435:../../Source/Kernel/rme_kernel.c ****                 }
6436:../../Source/Kernel/rme_kernel.c ****             }
6437:../../Source/Kernel/rme_kernel.c ****             else
6438:../../Source/Kernel/rme_kernel.c ****             {
6439:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6440:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6441:../../Source/Kernel/rme_kernel.c ****             }
6442:../../Source/Kernel/rme_kernel.c ****             
6443:../../Source/Kernel/rme_kernel.c ****             /* Set destination to infinite if it is not an init thread */
6444:../../Source/Kernel/rme_kernel.c ****             if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 15683              		.loc 1 6444 30
 15684 052c 20301BE5 		ldr	r3, [fp, #-32]
 15685 0530 183093E5 		ldr	r3, [r3, #24]
 15686              		.loc 1 6444 15
 15687 0534 0E0173E3 		cmn	r3, #-2147483645
 15688 0538 1900008A 		bhi	.L1053
6445:../../Source/Kernel/rme_kernel.c ****             {
6446:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6447:../../Source/Kernel/rme_kernel.c ****                 
6448:../../Source/Kernel/rme_kernel.c ****                 Thd_Dst->Sched.Slice=RME_THD_INF_TIME;
 15689              		.loc 1 6448 37
 15690 053c 20301BE5 		ldr	r3, [fp, #-32]
 15691 0540 0621E0E3 		mvn	r2, #-2147483647
 15692 0544 182083E5 		str	r2, [r3, #24]
 15693 0548 150000EA 		b	.L1053
 15694              	.L1054:
6449:../../Source/Kernel/rme_kernel.c ****             }
6450:../../Source/Kernel/rme_kernel.c ****             else
6451:../../Source/Kernel/rme_kernel.c ****             {
6452:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6453:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6454:../../Source/Kernel/rme_kernel.c ****             }
6455:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 390


6456:../../Source/Kernel/rme_kernel.c ****         else
6457:../../Source/Kernel/rme_kernel.c ****         {
6458:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6459:../../Source/Kernel/rme_kernel.c **** 
6460:../../Source/Kernel/rme_kernel.c ****             /* Just increase the budget of the other thread - check first */
6461:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time);
 15695              		.loc 1 6461 13
 15696 054c 20301BE5 		ldr	r3, [fp, #-32]
 15697 0550 182093E5 		ldr	r2, [r3, #24]
 15698 0554 04309BE5 		ldr	r3, [fp, #4]
 15699 0558 033082E0 		add	r3, r2, r3
 15700 055c 0E0173E3 		cmn	r3, #-2147483645
 15701 0560 0700008A 		bhi	.L1056
 15702              		.loc 1 6461 13 is_stmt 0 discriminator 2
 15703 0564 20301BE5 		ldr	r3, [fp, #-32]
 15704 0568 182093E5 		ldr	r2, [r3, #24]
 15705 056c 04309BE5 		ldr	r3, [fp, #4]
 15706 0570 032082E0 		add	r2, r2, r3
 15707 0574 20301BE5 		ldr	r3, [fp, #-32]
 15708 0578 183093E5 		ldr	r3, [r3, #24]
 15709 057c 030052E1 		cmp	r2, r3
 15710 0580 0100002A 		bcs	.L1057
 15711              	.L1056:
 15712              		.loc 1 6461 13 discriminator 3
 15713 0584 CF30E0E3 		mvn	r3, #207
 15714 0588 260000EA 		b	.L1021
 15715              	.L1057:
6462:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time;
 15716              		.loc 1 6462 33 is_stmt 1
 15717 058c 20301BE5 		ldr	r3, [fp, #-32]
 15718 0590 182093E5 		ldr	r2, [r3, #24]
 15719 0594 04309BE5 		ldr	r3, [fp, #4]
 15720 0598 032082E0 		add	r2, r2, r3
 15721 059c 20301BE5 		ldr	r3, [fp, #-32]
 15722 05a0 182083E5 		str	r2, [r3, #24]
 15723              	.L1053:
6463:../../Source/Kernel/rme_kernel.c ****         }
6464:../../Source/Kernel/rme_kernel.c ****     }
6465:../../Source/Kernel/rme_kernel.c **** 
6466:../../Source/Kernel/rme_kernel.c ****     /* Is the source time used up? If yes, delete it from the run queue, and notify its 
6467:../../Source/Kernel/rme_kernel.c ****      * parent. If it is not in the run queue, The state of the source must be BLOCKED. */
6468:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 15724              		.loc 1 6468 22
 15725 05a4 1C301BE5 		ldr	r3, [fp, #-28]
 15726 05a8 183093E5 		ldr	r3, [r3, #24]
 15727              		.loc 1 6468 7
 15728 05ac 000053E3 		cmp	r3, #0
 15729 05b0 0A00001A 		bne	.L1058
6469:../../Source/Kernel/rme_kernel.c ****     {
6470:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6471:../../Source/Kernel/rme_kernel.c ****         
6472:../../Source/Kernel/rme_kernel.c ****         /* If it is blocked or have an exception, we neither change its state nor send
6473:../../Source/Kernel/rme_kernel.c ****          * the scheduler notification. It will be sent when the thread unblocks, or gets
6474:../../Source/Kernel/rme_kernel.c ****          * its exception handled. The rule of the thumb is, we only send scheduler 
6475:../../Source/Kernel/rme_kernel.c ****          * notifications when the thread really enter TIMEOUT or EXCPEND state. */
6476:../../Source/Kernel/rme_kernel.c ****         if(Thd_Src->Sched.State==RME_THD_READY)
 15730              		.loc 1 6476 26
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 391


 15731 05b4 1C301BE5 		ldr	r3, [fp, #-28]
 15732 05b8 1C3093E5 		ldr	r3, [r3, #28]
 15733              		.loc 1 6476 11
 15734 05bc 000053E3 		cmp	r3, #0
 15735 05c0 0600001A 		bne	.L1058
6477:../../Source/Kernel/rme_kernel.c ****         {
6478:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6479:../../Source/Kernel/rme_kernel.c ****             
6480:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue */
6481:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Src);
 15736              		.loc 1 6481 13
 15737 05c4 1C001BE5 		ldr	r0, [fp, #-28]
 15738 05c8 FEFFFFEB 		bl	_RME_Run_Del
6482:../../Source/Kernel/rme_kernel.c ****             
6483:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6484:../../Source/Kernel/rme_kernel.c ****             Thd_Src->Sched.State=RME_THD_TIMEOUT;
 15739              		.loc 1 6484 33
 15740 05cc 1C301BE5 		ldr	r3, [fp, #-28]
 15741 05d0 0220A0E3 		mov	r2, #2
 15742 05d4 1C2083E5 		str	r2, [r3, #28]
6485:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Src);
 15743              		.loc 1 6485 13
 15744 05d8 1C001BE5 		ldr	r0, [fp, #-28]
 15745 05dc FEFFFFEB 		bl	_RME_Run_Notif
 15746              	.L1058:
6486:../../Source/Kernel/rme_kernel.c ****         }
6487:../../Source/Kernel/rme_kernel.c ****         else
6488:../../Source/Kernel/rme_kernel.c ****         {
6489:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6490:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6491:../../Source/Kernel/rme_kernel.c ****         }
6492:../../Source/Kernel/rme_kernel.c ****     }
6493:../../Source/Kernel/rme_kernel.c ****     else
6494:../../Source/Kernel/rme_kernel.c ****     {
6495:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6496:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6497:../../Source/Kernel/rme_kernel.c ****     }
6498:../../Source/Kernel/rme_kernel.c **** 
6499:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller 
6500:../../Source/Kernel/rme_kernel.c ****      * stack - how much time the destination have now */
6501:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,(rme_ret_t)(Thd_Dst->Sched.Slice));
 15747              		.loc 1 6501 56
 15748 05e0 20301BE5 		ldr	r3, [fp, #-32]
 15749 05e4 183093E5 		ldr	r3, [r3, #24]
 15750              		.loc 1 6501 5
 15751 05e8 0310A0E1 		mov	r1, r3
 15752 05ec 2C001BE5 		ldr	r0, [fp, #-44]
 15753 05f0 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6502:../../Source/Kernel/rme_kernel.c **** 
6503:../../Source/Kernel/rme_kernel.c ****     /* See what was the state of the destination thread. If it is timeout, then activate
6504:../../Source/Kernel/rme_kernel.c ****      * it. If it is BLOCKED or EXCPEND, then leave it alone, and it will be activated
6505:../../Source/Kernel/rme_kernel.c ****      * when it unblocks or when the exception is handled. */
6506:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.State==RME_THD_TIMEOUT)
 15754              		.loc 1 6506 22
 15755 05f4 20301BE5 		ldr	r3, [fp, #-32]
 15756 05f8 1C3093E5 		ldr	r3, [r3, #28]
 15757              		.loc 1 6506 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 392


 15758 05fc 020053E3 		cmp	r3, #2
 15759 0600 0400001A 		bne	.L1059
6507:../../Source/Kernel/rme_kernel.c ****     {
6508:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6509:../../Source/Kernel/rme_kernel.c **** 
6510:../../Source/Kernel/rme_kernel.c ****         /* Ready and add to runqueue */
6511:../../Source/Kernel/rme_kernel.c ****         Thd_Dst->Sched.State=RME_THD_READY;
 15760              		.loc 1 6511 29
 15761 0604 20301BE5 		ldr	r3, [fp, #-32]
 15762 0608 0020A0E3 		mov	r2, #0
 15763 060c 1C2083E5 		str	r2, [r3, #28]
6512:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Thd_Dst);
 15764              		.loc 1 6512 9
 15765 0610 20001BE5 		ldr	r0, [fp, #-32]
 15766 0614 FEFFFFEB 		bl	_RME_Run_Ins
 15767              	.L1059:
6513:../../Source/Kernel/rme_kernel.c ****     }
6514:../../Source/Kernel/rme_kernel.c ****     else
6515:../../Source/Kernel/rme_kernel.c ****     {
6516:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6517:../../Source/Kernel/rme_kernel.c ****     }
6518:../../Source/Kernel/rme_kernel.c ****     
6519:../../Source/Kernel/rme_kernel.c ****     /* All possible kernel send (scheduler notifications) done,
6520:../../Source/Kernel/rme_kernel.c ****      * now pick the highest priority thread to run */
6521:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 15768              		.loc 1 6521 5
 15769 0618 18101BE5 		ldr	r1, [fp, #-24]
 15770 061c 2C001BE5 		ldr	r0, [fp, #-44]
 15771 0620 FEFFFFEB 		bl	_RME_Kern_High
6522:../../Source/Kernel/rme_kernel.c **** 
6523:../../Source/Kernel/rme_kernel.c ****     return 0;
 15772              		.loc 1 6523 12
 15773 0624 0030A0E3 		mov	r3, #0
 15774              	.L1021:
6524:../../Source/Kernel/rme_kernel.c **** }
 15775              		.loc 1 6524 1
 15776 0628 0300A0E1 		mov	r0, r3
 15777 062c 04D04BE2 		sub	sp, fp, #4
 15778              		.cfi_def_cfa 13, 8
 15779              		@ sp needed
 15780 0630 0088BDE8 		pop	{fp, pc}
 15781              		.cfi_endproc
 15782              	.LFE63:
 15784              		.section	.text._RME_Thd_Swt,"ax",%progbits
 15785              		.align	2
 15786              		.syntax unified
 15787              		.arm
 15789              	_RME_Thd_Swt:
 15790              	.LFB64:
6525:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Time_Xfer *******************************************/
6526:../../Source/Kernel/rme_kernel.c **** 
6527:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Swt ******************************************************
6528:../../Source/Kernel/rme_kernel.c **** Description : Switch to another thread. The thread to switch to must have the same
6529:../../Source/Kernel/rme_kernel.c ****               preemptive priority as this thread, and have time, and not blocked.
6530:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a higher priority thread, this is impossible
6531:../../Source/Kernel/rme_kernel.c ****               because whenever a thread with higher priority exists in the system,
6532:../../Source/Kernel/rme_kernel.c ****               the kernel wiull let it preempt the current thread. 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 393


6533:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a lower priority thread, this is impossible
6534:../../Source/Kernel/rme_kernel.c ****               because the current thread just preempts it after the thread switch.
6535:../../Source/Kernel/rme_kernel.c ****               This syscall does not end with _RME_Kern_High because the user may
6536:../../Source/Kernel/rme_kernel.c ****               designate a specific thread rather than a random one.
6537:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
6538:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
6539:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread. If this is -1,
6540:../../Source/Kernel/rme_kernel.c ****                                   the kernel will pickup whatever thread that
6541:../../Source/Kernel/rme_kernel.c ****                                   has the highest priority and time to run. 
6542:../../Source/Kernel/rme_kernel.c ****                                   2-Level. 
6543:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Yield - This is a flag to indicate whether this
6544:../../Source/Kernel/rme_kernel.c ****                                    is a full yield. If it is, the kernel will
6545:../../Source/Kernel/rme_kernel.c ****                                    discard all the time alloted on this
6546:../../Source/Kernel/rme_kernel.c ****                                    thread. This only works for threads that
6547:../../Source/Kernel/rme_kernel.c ****                                    have a finite budget.
6548:../../Source/Kernel/rme_kernel.c **** Output      : None.
6549:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6550:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6551:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Swt(struct RME_Cap_Cpt* Cpt,
6552:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
6553:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
6554:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Yield)
6555:../../Source/Kernel/rme_kernel.c **** {
 15791              		.loc 1 6555 1
 15792              		.cfi_startproc
 15793              		@ args = 0, pretend = 0, frame = 40
 15794              		@ frame_needed = 1, uses_anonymous_args = 0
 15795 0000 00482DE9 		push	{fp, lr}
 15796              		.cfi_def_cfa_offset 8
 15797              		.cfi_offset 11, -8
 15798              		.cfi_offset 14, -4
 15799 0004 04B08DE2 		add	fp, sp, #4
 15800              		.cfi_def_cfa 11, 4
 15801 0008 28D04DE2 		sub	sp, sp, #40
 15802 000c 20000BE5 		str	r0, [fp, #-32]
 15803 0010 24100BE5 		str	r1, [fp, #-36]
 15804 0014 28200BE5 		str	r2, [fp, #-40]
 15805 0018 2C300BE5 		str	r3, [fp, #-44]
6556:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Cap_New;
6557:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6558:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_High;
6559:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6560:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6561:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6562:../../Source/Kernel/rme_kernel.c **** 
6563:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15806              		.loc 1 6563 10
 15807 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15808 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15809 0024 10300BE5 		str	r3, [fp, #-16]
6564:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 15810              		.loc 1 6564 12
 15811 0028 10301BE5 		ldr	r3, [fp, #-16]
 15812 002c 043093E5 		ldr	r3, [r3, #4]
 15813 0030 14300BE5 		str	r3, [fp, #-20]
6565:../../Source/Kernel/rme_kernel.c ****     
6566:../../Source/Kernel/rme_kernel.c ****     /* The caller have picked a thread to switch to */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 394


6567:../../Source/Kernel/rme_kernel.c ****     if(Cap_Thd<RME_CID_NULL)
 15814              		.loc 1 6567 7
 15815 0034 28301BE5 		ldr	r3, [fp, #-40]
 15816 0038 020953E3 		cmp	r3, #32768
 15817 003c A90000AA 		bge	.L1061
6568:../../Source/Kernel/rme_kernel.c ****     {
6569:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6570:../../Source/Kernel/rme_kernel.c ****         
6571:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15818              		.loc 1 6571 9
 15819 0040 28301BE5 		ldr	r3, [fp, #-40]
 15820 0044 803003E2 		and	r3, r3, #128
 15821 0048 000053E3 		cmp	r3, #0
 15822 004c 1D00001A 		bne	.L1062
 15823              		.loc 1 6571 9 is_stmt 0 discriminator 1
 15824 0050 20301BE5 		ldr	r3, [fp, #-32]
 15825 0054 142093E5 		ldr	r2, [r3, #20]
 15826 0058 28301BE5 		ldr	r3, [fp, #-40]
 15827 005c 030052E1 		cmp	r2, r3
 15828 0060 0100008A 		bhi	.L1063
 15829              		.loc 1 6571 9 discriminator 3
 15830 0064 0230E0E3 		mvn	r3, #2
 15831 0068 E20000EA 		b	.L1064
 15832              	.L1063:
 15833              		.loc 1 6571 9 discriminator 4
 15834 006c 28301BE5 		ldr	r3, [fp, #-40]
 15835 0070 8322A0E1 		lsl	r2, r3, #5
 15836 0074 20301BE5 		ldr	r3, [fp, #-32]
 15837 0078 0C3093E5 		ldr	r3, [r3, #12]
 15838 007c 033082E0 		add	r3, r2, r3
 15839 0080 08300BE5 		str	r3, [fp, #-8]
 15840 0084 08301BE5 		ldr	r3, [fp, #-8]
 15841 0088 0300A0E1 		mov	r0, r3
 15842 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15843 0090 18000BE5 		str	r0, [fp, #-24]
 15844 0094 18301BE5 		ldr	r3, [fp, #-24]
 15845 0098 2338A0E1 		lsr	r3, r3, #16
 15846 009c 7330EFE6 		uxtb	r3, r3
 15847 00a0 020053E3 		cmp	r3, #2
 15848 00a4 0100001A 		bne	.L1065
 15849              		.loc 1 6571 9 discriminator 5
 15850 00a8 0830E0E3 		mvn	r3, #8
 15851 00ac D10000EA 		b	.L1064
 15852              	.L1065:
 15853              		.loc 1 6571 9 discriminator 6
 15854 00b0 18301BE5 		ldr	r3, [fp, #-24]
 15855 00b4 233CA0E1 		lsr	r3, r3, #24
 15856 00b8 060053E3 		cmp	r3, #6
 15857 00bc 4100000A 		beq	.L1066
 15858              		.loc 1 6571 9 discriminator 7
 15859 00c0 0130E0E3 		mvn	r3, #1
 15860 00c4 CB0000EA 		b	.L1064
 15861              	.L1062:
 15862              		.loc 1 6571 9 discriminator 2
 15863 00c8 28301BE5 		ldr	r3, [fp, #-40]
 15864 00cc 2324A0E1 		lsr	r2, r3, #8
 15865 00d0 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 395


 15866 00d4 143093E5 		ldr	r3, [r3, #20]
 15867 00d8 030052E1 		cmp	r2, r3
 15868 00dc 0100003A 		bcc	.L1067
 15869              		.loc 1 6571 9 discriminator 8
 15870 00e0 0230E0E3 		mvn	r3, #2
 15871 00e4 C30000EA 		b	.L1064
 15872              	.L1067:
 15873              		.loc 1 6571 9 discriminator 9
 15874 00e8 28301BE5 		ldr	r3, [fp, #-40]
 15875 00ec 2334A0E1 		lsr	r3, r3, #8
 15876 00f0 8322A0E1 		lsl	r2, r3, #5
 15877 00f4 20301BE5 		ldr	r3, [fp, #-32]
 15878 00f8 0C3093E5 		ldr	r3, [r3, #12]
 15879 00fc 033082E0 		add	r3, r2, r3
 15880 0100 08300BE5 		str	r3, [fp, #-8]
 15881 0104 08301BE5 		ldr	r3, [fp, #-8]
 15882 0108 0300A0E1 		mov	r0, r3
 15883 010c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15884 0110 18000BE5 		str	r0, [fp, #-24]
 15885 0114 18301BE5 		ldr	r3, [fp, #-24]
 15886 0118 2338A0E1 		lsr	r3, r3, #16
 15887 011c 7330EFE6 		uxtb	r3, r3
 15888 0120 020053E3 		cmp	r3, #2
 15889 0124 0100001A 		bne	.L1068
 15890              		.loc 1 6571 9 discriminator 10
 15891 0128 0830E0E3 		mvn	r3, #8
 15892 012c B10000EA 		b	.L1064
 15893              	.L1068:
 15894              		.loc 1 6571 9 discriminator 11
 15895 0130 18301BE5 		ldr	r3, [fp, #-24]
 15896 0134 233CA0E1 		lsr	r3, r3, #24
 15897 0138 030053E3 		cmp	r3, #3
 15898 013c 0100000A 		beq	.L1069
 15899              		.loc 1 6571 9 discriminator 12
 15900 0140 0130E0E3 		mvn	r3, #1
 15901 0144 AB0000EA 		b	.L1064
 15902              	.L1069:
 15903              		.loc 1 6571 9 discriminator 13
 15904 0148 28301BE5 		ldr	r3, [fp, #-40]
 15905 014c 7F2003E2 		and	r2, r3, #127
 15906 0150 08301BE5 		ldr	r3, [fp, #-8]
 15907 0154 143093E5 		ldr	r3, [r3, #20]
 15908 0158 030052E1 		cmp	r2, r3
 15909 015c 0100003A 		bcc	.L1070
 15910              		.loc 1 6571 9 discriminator 14
 15911 0160 0230E0E3 		mvn	r3, #2
 15912 0164 A30000EA 		b	.L1064
 15913              	.L1070:
 15914              		.loc 1 6571 9 discriminator 15
 15915 0168 28301BE5 		ldr	r3, [fp, #-40]
 15916 016c 7F3003E2 		and	r3, r3, #127
 15917 0170 8322A0E1 		lsl	r2, r3, #5
 15918 0174 08301BE5 		ldr	r3, [fp, #-8]
 15919 0178 0C3093E5 		ldr	r3, [r3, #12]
 15920 017c 033082E0 		add	r3, r2, r3
 15921 0180 08300BE5 		str	r3, [fp, #-8]
 15922 0184 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 396


 15923 0188 0300A0E1 		mov	r0, r3
 15924 018c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15925 0190 18000BE5 		str	r0, [fp, #-24]
 15926 0194 18301BE5 		ldr	r3, [fp, #-24]
 15927 0198 2338A0E1 		lsr	r3, r3, #16
 15928 019c 7330EFE6 		uxtb	r3, r3
 15929 01a0 020053E3 		cmp	r3, #2
 15930 01a4 0100001A 		bne	.L1071
 15931              		.loc 1 6571 9 discriminator 16
 15932 01a8 0830E0E3 		mvn	r3, #8
 15933 01ac 910000EA 		b	.L1064
 15934              	.L1071:
 15935              		.loc 1 6571 9 discriminator 17
 15936 01b0 18301BE5 		ldr	r3, [fp, #-24]
 15937 01b4 233CA0E1 		lsr	r3, r3, #24
 15938 01b8 060053E3 		cmp	r3, #6
 15939 01bc 0100000A 		beq	.L1066
 15940              		.loc 1 6571 9 discriminator 18
 15941 01c0 0130E0E3 		mvn	r3, #1
 15942 01c4 8B0000EA 		b	.L1064
 15943              	.L1066:
6572:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Cap_New,Type_Stat);
6573:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6574:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Cap_New,RME_THD_FLAG_SWT);
 15944              		.loc 1 6574 9 is_stmt 1
 15945 01c8 08301BE5 		ldr	r3, [fp, #-8]
 15946 01cc 083093E5 		ldr	r3, [r3, #8]
 15947 01d0 013C03E2 		and	r3, r3, #256
 15948 01d4 000053E3 		cmp	r3, #0
 15949 01d8 0100001A 		bne	.L1072
 15950              		.loc 1 6574 9 is_stmt 0 discriminator 1
 15951 01dc 0630E0E3 		mvn	r3, #6
 15952 01e0 840000EA 		b	.L1064
 15953              	.L1072:
6575:../../Source/Kernel/rme_kernel.c ****         /* See if we can do operation on this core */
6576:../../Source/Kernel/rme_kernel.c ****         Thd_New=RME_CAP_GETOBJ(Thd_Cap_New,struct RME_Thd_Struct*);
 15954              		.loc 1 6576 17 is_stmt 1
 15955 01e4 08301BE5 		ldr	r3, [fp, #-8]
 15956 01e8 0C3093E5 		ldr	r3, [r3, #12]
 15957              		.loc 1 6576 16
 15958 01ec 0C300BE5 		str	r3, [fp, #-12]
6577:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Local!=Local)
 15959              		.loc 1 6577 26
 15960 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 15961 01f4 143093E5 		ldr	r3, [r3, #20]
 15962              		.loc 1 6577 11
 15963 01f8 10201BE5 		ldr	r2, [fp, #-16]
 15964 01fc 030052E1 		cmp	r2, r3
 15965 0200 0100000A 		beq	.L1073
6578:../../Source/Kernel/rme_kernel.c ****         {
6579:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6580:../../Source/Kernel/rme_kernel.c **** 
6581:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 15966              		.loc 1 6581 20
 15967 0204 CB30E0E3 		mvn	r3, #203
 15968 0208 7A0000EA 		b	.L1064
 15969              	.L1073:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 397


6582:../../Source/Kernel/rme_kernel.c ****         }
6583:../../Source/Kernel/rme_kernel.c ****         else
6584:../../Source/Kernel/rme_kernel.c ****         {
6585:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6586:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6587:../../Source/Kernel/rme_kernel.c ****         }
6588:../../Source/Kernel/rme_kernel.c ****             
6589:../../Source/Kernel/rme_kernel.c ****         /* See if we can yield to the thread */
6590:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Prio!=Thd_New->Sched.Prio)
 15970              		.loc 1 6590 26
 15971 020c 14301BE5 		ldr	r3, [fp, #-20]
 15972 0210 202093E5 		ldr	r2, [r3, #32]
 15973              		.loc 1 6590 47
 15974 0214 0C301BE5 		ldr	r3, [fp, #-12]
 15975 0218 203093E5 		ldr	r3, [r3, #32]
 15976              		.loc 1 6590 11
 15977 021c 030052E1 		cmp	r2, r3
 15978 0220 0100000A 		beq	.L1074
6591:../../Source/Kernel/rme_kernel.c ****         {
6592:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6593:../../Source/Kernel/rme_kernel.c **** 
6594:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 15979              		.loc 1 6594 20
 15980 0224 CC30E0E3 		mvn	r3, #204
 15981 0228 720000EA 		b	.L1064
 15982              	.L1074:
6595:../../Source/Kernel/rme_kernel.c ****         }
6596:../../Source/Kernel/rme_kernel.c ****         else
6597:../../Source/Kernel/rme_kernel.c ****         {
6598:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6599:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6600:../../Source/Kernel/rme_kernel.c ****         }
6601:../../Source/Kernel/rme_kernel.c ****             
6602:../../Source/Kernel/rme_kernel.c ****         /* Check if the target thread state is valid */
6603:../../Source/Kernel/rme_kernel.c ****         if((Thd_New->Sched.State==RME_THD_BLOCKED)||
 15983              		.loc 1 6603 27
 15984 022c 0C301BE5 		ldr	r3, [fp, #-12]
 15985 0230 1C3093E5 		ldr	r3, [r3, #28]
 15986              		.loc 1 6603 11
 15987 0234 010053E3 		cmp	r3, #1
 15988 0238 0700000A 		beq	.L1075
6604:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 15989              		.loc 1 6604 27 discriminator 1
 15990 023c 0C301BE5 		ldr	r3, [fp, #-12]
 15991 0240 1C3093E5 		ldr	r3, [r3, #28]
6603:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 15992              		.loc 1 6603 51 discriminator 1
 15993 0244 020053E3 		cmp	r3, #2
 15994 0248 0300000A 		beq	.L1075
6605:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_EXCPEND))
 15995              		.loc 1 6605 27
 15996 024c 0C301BE5 		ldr	r3, [fp, #-12]
 15997 0250 1C3093E5 		ldr	r3, [r3, #28]
6604:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 15998              		.loc 1 6604 51
 15999 0254 030053E3 		cmp	r3, #3
 16000 0258 0100001A 		bne	.L1076
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 398


 16001              	.L1075:
6606:../../Source/Kernel/rme_kernel.c ****         {
6607:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6608:../../Source/Kernel/rme_kernel.c **** 
6609:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16002              		.loc 1 6609 20
 16003 025c CB30E0E3 		mvn	r3, #203
 16004 0260 640000EA 		b	.L1064
 16005              	.L1076:
6610:../../Source/Kernel/rme_kernel.c ****         }
6611:../../Source/Kernel/rme_kernel.c ****         else
6612:../../Source/Kernel/rme_kernel.c ****         {
6613:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6614:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6615:../../Source/Kernel/rme_kernel.c ****         }
6616:../../Source/Kernel/rme_kernel.c ****         
6617:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6618:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16006              		.loc 1 6618 11
 16007 0264 2C301BE5 		ldr	r3, [fp, #-44]
 16008 0268 000053E3 		cmp	r3, #0
 16009 026c 4300000A 		beq	.L1077
 16010              		.loc 1 6618 43 discriminator 1
 16011 0270 14301BE5 		ldr	r3, [fp, #-20]
 16012 0274 183093E5 		ldr	r3, [r3, #24]
 16013              		.loc 1 6618 26 discriminator 1
 16014 0278 0E0173E3 		cmn	r3, #-2147483645
 16015 027c 3F00008A 		bhi	.L1077
6619:../../Source/Kernel/rme_kernel.c ****         {
6620:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6621:../../Source/Kernel/rme_kernel.c ****             
6622:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6623:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16016              		.loc 1 6623 33
 16017 0280 14301BE5 		ldr	r3, [fp, #-20]
 16018 0284 0020A0E3 		mov	r2, #0
 16019 0288 182083E5 		str	r2, [r3, #24]
6624:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16020              		.loc 1 6624 13
 16021 028c 14001BE5 		ldr	r0, [fp, #-20]
 16022 0290 FEFFFFEB 		bl	_RME_Run_Del
6625:../../Source/Kernel/rme_kernel.c ****             
6626:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6627:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16023              		.loc 1 6627 33
 16024 0294 14301BE5 		ldr	r3, [fp, #-20]
 16025 0298 0220A0E3 		mov	r2, #2
 16026 029c 1C2083E5 		str	r2, [r3, #28]
6628:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16027              		.loc 1 6628 13
 16028 02a0 14001BE5 		ldr	r0, [fp, #-20]
 16029 02a4 FEFFFFEB 		bl	_RME_Run_Notif
6629:../../Source/Kernel/rme_kernel.c ****             
6630:../../Source/Kernel/rme_kernel.c ****             /* Because we have sent a notification, we could have unblocked a
6631:../../Source/Kernel/rme_kernel.c ****              * thread at higher priority. Additionally, if the new thread is
6632:../../Source/Kernel/rme_kernel.c ****              * the current thread, we are forced to switch to someone else,
6633:../../Source/Kernel/rme_kernel.c ****              * because the current thread's timeslice must be exhausted. */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 399


6634:../../Source/Kernel/rme_kernel.c ****             Thd_High=_RME_Run_High(Local);
 16030              		.loc 1 6634 22
 16031 02a8 10001BE5 		ldr	r0, [fp, #-16]
 16032 02ac FEFFFFEB 		bl	_RME_Run_High
 16033 02b0 1C000BE5 		str	r0, [fp, #-28]
6635:../../Source/Kernel/rme_kernel.c ****             if((Thd_High->Sched.Prio>Thd_New->Sched.Prio)||(Thd_Cur==Thd_New))
 16034              		.loc 1 6635 32
 16035 02b4 1C301BE5 		ldr	r3, [fp, #-28]
 16036 02b8 202093E5 		ldr	r2, [r3, #32]
 16037              		.loc 1 6635 52
 16038 02bc 0C301BE5 		ldr	r3, [fp, #-12]
 16039 02c0 203093E5 		ldr	r3, [r3, #32]
 16040              		.loc 1 6635 15
 16041 02c4 030052E1 		cmp	r2, r3
 16042 02c8 0300008A 		bhi	.L1078
 16043              		.loc 1 6635 58 discriminator 1
 16044 02cc 14201BE5 		ldr	r2, [fp, #-20]
 16045 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 16046 02d4 030052E1 		cmp	r2, r3
 16047 02d8 2800001A 		bne	.L1077
 16048              	.L1078:
6636:../../Source/Kernel/rme_kernel.c ****             {
6637:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6638:../../Source/Kernel/rme_kernel.c **** 
6639:../../Source/Kernel/rme_kernel.c ****                 Thd_New=Thd_High;
 16049              		.loc 1 6639 24
 16050 02dc 1C301BE5 		ldr	r3, [fp, #-28]
 16051 02e0 0C300BE5 		str	r3, [fp, #-12]
 16052 02e4 250000EA 		b	.L1077
 16053              	.L1061:
6640:../../Source/Kernel/rme_kernel.c ****             }
6641:../../Source/Kernel/rme_kernel.c ****             else
6642:../../Source/Kernel/rme_kernel.c ****             {
6643:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6644:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6645:../../Source/Kernel/rme_kernel.c ****             }
6646:../../Source/Kernel/rme_kernel.c ****         }
6647:../../Source/Kernel/rme_kernel.c ****         else
6648:../../Source/Kernel/rme_kernel.c ****         {
6649:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6650:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6651:../../Source/Kernel/rme_kernel.c ****         }
6652:../../Source/Kernel/rme_kernel.c ****     }
6653:../../Source/Kernel/rme_kernel.c ****     /* The kernel needs to pick a thread to switch to */
6654:../../Source/Kernel/rme_kernel.c ****     else
6655:../../Source/Kernel/rme_kernel.c ****     {
6656:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6657:../../Source/Kernel/rme_kernel.c ****         
6658:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6659:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16054              		.loc 1 6659 11
 16055 02e8 2C301BE5 		ldr	r3, [fp, #-44]
 16056 02ec 000053E3 		cmp	r3, #0
 16057 02f0 0E00000A 		beq	.L1079
 16058              		.loc 1 6659 43 discriminator 1
 16059 02f4 14301BE5 		ldr	r3, [fp, #-20]
 16060 02f8 183093E5 		ldr	r3, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 400


 16061              		.loc 1 6659 26 discriminator 1
 16062 02fc 0E0173E3 		cmn	r3, #-2147483645
 16063 0300 0A00008A 		bhi	.L1079
6660:../../Source/Kernel/rme_kernel.c ****         {
6661:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6662:../../Source/Kernel/rme_kernel.c ****             
6663:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6664:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16064              		.loc 1 6664 33
 16065 0304 14301BE5 		ldr	r3, [fp, #-20]
 16066 0308 0020A0E3 		mov	r2, #0
 16067 030c 182083E5 		str	r2, [r3, #24]
6665:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16068              		.loc 1 6665 13
 16069 0310 14001BE5 		ldr	r0, [fp, #-20]
 16070 0314 FEFFFFEB 		bl	_RME_Run_Del
6666:../../Source/Kernel/rme_kernel.c ****             
6667:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6668:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16071              		.loc 1 6668 33
 16072 0318 14301BE5 		ldr	r3, [fp, #-20]
 16073 031c 0220A0E3 		mov	r2, #2
 16074 0320 1C2083E5 		str	r2, [r3, #28]
6669:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16075              		.loc 1 6669 13
 16076 0324 14001BE5 		ldr	r0, [fp, #-20]
 16077 0328 FEFFFFEB 		bl	_RME_Run_Notif
 16078 032c 100000EA 		b	.L1080
 16079              	.L1079:
6670:../../Source/Kernel/rme_kernel.c ****         }
6671:../../Source/Kernel/rme_kernel.c ****         else
6672:../../Source/Kernel/rme_kernel.c ****         {
6673:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6674:../../Source/Kernel/rme_kernel.c ****             
6675:../../Source/Kernel/rme_kernel.c ****             /* This operation is just to make sure that if there are any other
6676:../../Source/Kernel/rme_kernel.c ****              * thread at the same priority level, we're not switching to ourself */
6677:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 16080              		.loc 1 6677 13
 16081 0330 14301BE5 		ldr	r3, [fp, #-20]
 16082 0334 1C3093E5 		ldr	r3, [r3, #28]
 16083 0338 000053E3 		cmp	r3, #0
 16084 033c 0800000A 		beq	.L1081
 16085              		.loc 1 6677 13 is_stmt 0 discriminator 1
 16086 0340 003000E3 		movw	r3, #:lower16:.LC4
 16087 0344 003040E3 		movt	r3, #:upper16:.LC4
 16088 0348 002000E3 		movw	r2, #:lower16:.LC5
 16089 034c 002040E3 		movt	r2, #:upper16:.LC5
 16090 0350 151A01E3 		movw	r1, #6677
 16091 0354 000000E3 		movw	r0, #:lower16:.LC6
 16092 0358 000040E3 		movt	r0, #:upper16:.LC6
 16093 035c FEFFFFEB 		bl	RME_Log
 16094              	.L1082:
 16095              		.loc 1 6677 13 discriminator 2
 16096 0360 FEFFFFEA 		b	.L1082
 16097              	.L1081:
6678:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16098              		.loc 1 6678 13 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 401


 16099 0364 14001BE5 		ldr	r0, [fp, #-20]
 16100 0368 FEFFFFEB 		bl	_RME_Run_Del
6679:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Cur);
 16101              		.loc 1 6679 13
 16102 036c 14001BE5 		ldr	r0, [fp, #-20]
 16103 0370 FEFFFFEB 		bl	_RME_Run_Ins
 16104              	.L1080:
6680:../../Source/Kernel/rme_kernel.c ****         }
6681:../../Source/Kernel/rme_kernel.c ****         
6682:../../Source/Kernel/rme_kernel.c ****         Thd_New=_RME_Run_High(Local);
 16105              		.loc 1 6682 17
 16106 0374 10001BE5 		ldr	r0, [fp, #-16]
 16107 0378 FEFFFFEB 		bl	_RME_Run_High
 16108 037c 0C000BE5 		str	r0, [fp, #-12]
 16109              	.L1077:
6683:../../Source/Kernel/rme_kernel.c ****     }
6684:../../Source/Kernel/rme_kernel.c ****     
6685:../../Source/Kernel/rme_kernel.c ****     /* Now that we are successful, save the return value to the caller stack */
6686:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 16110              		.loc 1 6686 5
 16111 0380 0010A0E3 		mov	r1, #0
 16112 0384 24001BE5 		ldr	r0, [fp, #-36]
 16113 0388 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6687:../../Source/Kernel/rme_kernel.c **** 
6688:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 16114              		.loc 1 6688 5
 16115 038c 0C301BE5 		ldr	r3, [fp, #-12]
 16116 0390 1C3093E5 		ldr	r3, [r3, #28]
 16117 0394 000053E3 		cmp	r3, #0
 16118 0398 0800000A 		beq	.L1083
 16119              		.loc 1 6688 5 is_stmt 0 discriminator 1
 16120 039c 003000E3 		movw	r3, #:lower16:.LC4
 16121 03a0 003040E3 		movt	r3, #:upper16:.LC4
 16122 03a4 002000E3 		movw	r2, #:lower16:.LC5
 16123 03a8 002040E3 		movt	r2, #:upper16:.LC5
 16124 03ac 201A01E3 		movw	r1, #6688
 16125 03b0 000000E3 		movw	r0, #:lower16:.LC6
 16126 03b4 000040E3 		movt	r0, #:upper16:.LC6
 16127 03b8 FEFFFFEB 		bl	RME_Log
 16128              	.L1084:
 16129              		.loc 1 6688 5 discriminator 3
 16130 03bc FEFFFFEA 		b	.L1084
 16131              	.L1083:
6689:../../Source/Kernel/rme_kernel.c ****     /* We cannot call _RME_Kern_High because it picks some random thread. Instead,
6690:../../Source/Kernel/rme_kernel.c ****      * we use a manual implementation that is faster than the _RME_Kern_High. */
6691:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur==Thd_New)
 16132              		.loc 1 6691 7 is_stmt 1
 16133 03c0 14201BE5 		ldr	r2, [fp, #-20]
 16134 03c4 0C301BE5 		ldr	r3, [fp, #-12]
 16135 03c8 030052E1 		cmp	r2, r3
 16136 03cc 0100001A 		bne	.L1085
6692:../../Source/Kernel/rme_kernel.c ****     {
6693:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6694:../../Source/Kernel/rme_kernel.c ****         
6695:../../Source/Kernel/rme_kernel.c ****         return 0;
 16137              		.loc 1 6695 16
 16138 03d0 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 402


 16139 03d4 070000EA 		b	.L1064
 16140              	.L1085:
6696:../../Source/Kernel/rme_kernel.c ****     }
6697:../../Source/Kernel/rme_kernel.c ****     else
6698:../../Source/Kernel/rme_kernel.c ****     {
6699:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6700:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6701:../../Source/Kernel/rme_kernel.c ****     }
6702:../../Source/Kernel/rme_kernel.c ****             
6703:../../Source/Kernel/rme_kernel.c ****     /* We have a solid context switch at this point */
6704:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 16141              		.loc 1 6704 5
 16142 03d8 0C201BE5 		ldr	r2, [fp, #-12]
 16143 03dc 14101BE5 		ldr	r1, [fp, #-20]
 16144 03e0 24001BE5 		ldr	r0, [fp, #-36]
 16145 03e4 FEFFFFEB 		bl	_RME_Run_Swt
6705:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 16146              		.loc 1 6705 19
 16147 03e8 10301BE5 		ldr	r3, [fp, #-16]
 16148 03ec 0C201BE5 		ldr	r2, [fp, #-12]
 16149 03f0 042083E5 		str	r2, [r3, #4]
6706:../../Source/Kernel/rme_kernel.c **** 
6707:../../Source/Kernel/rme_kernel.c ****     return 0;
 16150              		.loc 1 6707 12
 16151 03f4 0030A0E3 		mov	r3, #0
 16152              	.L1064:
6708:../../Source/Kernel/rme_kernel.c **** }
 16153              		.loc 1 6708 1
 16154 03f8 0300A0E1 		mov	r0, r3
 16155 03fc 04D04BE2 		sub	sp, fp, #4
 16156              		.cfi_def_cfa 13, 8
 16157              		@ sp needed
 16158 0400 0088BDE8 		pop	{fp, pc}
 16159              		.cfi_endproc
 16160              	.LFE64:
 16162              		.section	.text._RME_Sig_Boot_Crt,"ax",%progbits
 16163              		.align	2
 16164              		.global	_RME_Sig_Boot_Crt
 16165              		.syntax unified
 16166              		.arm
 16168              	_RME_Sig_Boot_Crt:
 16169              	.LFB65:
6709:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Swt *************************************************/
6710:../../Source/Kernel/rme_kernel.c **** 
6711:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Boot_Crt *************************************************
6712:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time kernel signal endpoint. This is only used at
6713:../../Source/Kernel/rme_kernel.c ****               boot-time to create endpoints that are related directly to 
6714:../../Source/Kernel/rme_kernel.c ****               hardware interrupts.
6715:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
6716:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6717:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6718:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6719:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6720:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6721:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6722:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6723:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 403


6724:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6725:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6726:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Sig_Boot_Crt(struct RME_Cap_Cpt* Cpt,
6727:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
6728:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Sig)
6729:../../Source/Kernel/rme_kernel.c **** {
 16170              		.loc 1 6729 1
 16171              		.cfi_startproc
 16172              		@ args = 0, pretend = 0, frame = 32
 16173              		@ frame_needed = 1, uses_anonymous_args = 0
 16174 0000 00482DE9 		push	{fp, lr}
 16175              		.cfi_def_cfa_offset 8
 16176              		.cfi_offset 11, -8
 16177              		.cfi_offset 14, -4
 16178 0004 04B08DE2 		add	fp, sp, #4
 16179              		.cfi_def_cfa 11, 4
 16180 0008 20D04DE2 		sub	sp, sp, #32
 16181 000c 18000BE5 		str	r0, [fp, #-24]
 16182 0010 1C100BE5 		str	r1, [fp, #-28]
 16183 0014 20200BE5 		str	r2, [fp, #-32]
6730:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
6731:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Crt;
6732:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6733:../../Source/Kernel/rme_kernel.c ****     
6734:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6735:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 16184              		.loc 1 6735 5
 16185 0018 1C301BE5 		ldr	r3, [fp, #-28]
 16186 001c 803003E2 		and	r3, r3, #128
 16187 0020 000053E3 		cmp	r3, #0
 16188 0024 1D00001A 		bne	.L1087
 16189              		.loc 1 6735 5 is_stmt 0 discriminator 1
 16190 0028 18301BE5 		ldr	r3, [fp, #-24]
 16191 002c 142093E5 		ldr	r2, [r3, #20]
 16192 0030 1C301BE5 		ldr	r3, [fp, #-28]
 16193 0034 030052E1 		cmp	r2, r3
 16194 0038 0100008A 		bhi	.L1088
 16195              		.loc 1 6735 5 discriminator 3
 16196 003c 0230E0E3 		mvn	r3, #2
 16197 0040 8D0000EA 		b	.L1089
 16198              	.L1088:
 16199              		.loc 1 6735 5 discriminator 4
 16200 0044 1C301BE5 		ldr	r3, [fp, #-28]
 16201 0048 8322A0E1 		lsl	r2, r3, #5
 16202 004c 18301BE5 		ldr	r3, [fp, #-24]
 16203 0050 0C3093E5 		ldr	r3, [r3, #12]
 16204 0054 033082E0 		add	r3, r2, r3
 16205 0058 08300BE5 		str	r3, [fp, #-8]
 16206 005c 08301BE5 		ldr	r3, [fp, #-8]
 16207 0060 0300A0E1 		mov	r0, r3
 16208 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16209 0068 0C000BE5 		str	r0, [fp, #-12]
 16210 006c 0C301BE5 		ldr	r3, [fp, #-12]
 16211 0070 2338A0E1 		lsr	r3, r3, #16
 16212 0074 7330EFE6 		uxtb	r3, r3
 16213 0078 020053E3 		cmp	r3, #2
 16214 007c 0100001A 		bne	.L1090
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 404


 16215              		.loc 1 6735 5 discriminator 5
 16216 0080 0830E0E3 		mvn	r3, #8
 16217 0084 7C0000EA 		b	.L1089
 16218              	.L1090:
 16219              		.loc 1 6735 5 discriminator 6
 16220 0088 0C301BE5 		ldr	r3, [fp, #-12]
 16221 008c 233CA0E1 		lsr	r3, r3, #24
 16222 0090 030053E3 		cmp	r3, #3
 16223 0094 4100000A 		beq	.L1091
 16224              		.loc 1 6735 5 discriminator 7
 16225 0098 0130E0E3 		mvn	r3, #1
 16226 009c 760000EA 		b	.L1089
 16227              	.L1087:
 16228              		.loc 1 6735 5 discriminator 2
 16229 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 16230 00a4 2324A0E1 		lsr	r2, r3, #8
 16231 00a8 18301BE5 		ldr	r3, [fp, #-24]
 16232 00ac 143093E5 		ldr	r3, [r3, #20]
 16233 00b0 030052E1 		cmp	r2, r3
 16234 00b4 0100003A 		bcc	.L1092
 16235              		.loc 1 6735 5 discriminator 8
 16236 00b8 0230E0E3 		mvn	r3, #2
 16237 00bc 6E0000EA 		b	.L1089
 16238              	.L1092:
 16239              		.loc 1 6735 5 discriminator 9
 16240 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 16241 00c4 2334A0E1 		lsr	r3, r3, #8
 16242 00c8 8322A0E1 		lsl	r2, r3, #5
 16243 00cc 18301BE5 		ldr	r3, [fp, #-24]
 16244 00d0 0C3093E5 		ldr	r3, [r3, #12]
 16245 00d4 033082E0 		add	r3, r2, r3
 16246 00d8 08300BE5 		str	r3, [fp, #-8]
 16247 00dc 08301BE5 		ldr	r3, [fp, #-8]
 16248 00e0 0300A0E1 		mov	r0, r3
 16249 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16250 00e8 0C000BE5 		str	r0, [fp, #-12]
 16251 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 16252 00f0 2338A0E1 		lsr	r3, r3, #16
 16253 00f4 7330EFE6 		uxtb	r3, r3
 16254 00f8 020053E3 		cmp	r3, #2
 16255 00fc 0100001A 		bne	.L1093
 16256              		.loc 1 6735 5 discriminator 10
 16257 0100 0830E0E3 		mvn	r3, #8
 16258 0104 5C0000EA 		b	.L1089
 16259              	.L1093:
 16260              		.loc 1 6735 5 discriminator 11
 16261 0108 0C301BE5 		ldr	r3, [fp, #-12]
 16262 010c 233CA0E1 		lsr	r3, r3, #24
 16263 0110 030053E3 		cmp	r3, #3
 16264 0114 0100000A 		beq	.L1094
 16265              		.loc 1 6735 5 discriminator 12
 16266 0118 0130E0E3 		mvn	r3, #1
 16267 011c 560000EA 		b	.L1089
 16268              	.L1094:
 16269              		.loc 1 6735 5 discriminator 13
 16270 0120 1C301BE5 		ldr	r3, [fp, #-28]
 16271 0124 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 405


 16272 0128 08301BE5 		ldr	r3, [fp, #-8]
 16273 012c 143093E5 		ldr	r3, [r3, #20]
 16274 0130 030052E1 		cmp	r2, r3
 16275 0134 0100003A 		bcc	.L1095
 16276              		.loc 1 6735 5 discriminator 14
 16277 0138 0230E0E3 		mvn	r3, #2
 16278 013c 4E0000EA 		b	.L1089
 16279              	.L1095:
 16280              		.loc 1 6735 5 discriminator 15
 16281 0140 1C301BE5 		ldr	r3, [fp, #-28]
 16282 0144 7F3003E2 		and	r3, r3, #127
 16283 0148 8322A0E1 		lsl	r2, r3, #5
 16284 014c 08301BE5 		ldr	r3, [fp, #-8]
 16285 0150 0C3093E5 		ldr	r3, [r3, #12]
 16286 0154 033082E0 		add	r3, r2, r3
 16287 0158 08300BE5 		str	r3, [fp, #-8]
 16288 015c 08301BE5 		ldr	r3, [fp, #-8]
 16289 0160 0300A0E1 		mov	r0, r3
 16290 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16291 0168 0C000BE5 		str	r0, [fp, #-12]
 16292 016c 0C301BE5 		ldr	r3, [fp, #-12]
 16293 0170 2338A0E1 		lsr	r3, r3, #16
 16294 0174 7330EFE6 		uxtb	r3, r3
 16295 0178 020053E3 		cmp	r3, #2
 16296 017c 0100001A 		bne	.L1096
 16297              		.loc 1 6735 5 discriminator 16
 16298 0180 0830E0E3 		mvn	r3, #8
 16299 0184 3C0000EA 		b	.L1089
 16300              	.L1096:
 16301              		.loc 1 6735 5 discriminator 17
 16302 0188 0C301BE5 		ldr	r3, [fp, #-12]
 16303 018c 233CA0E1 		lsr	r3, r3, #24
 16304 0190 030053E3 		cmp	r3, #3
 16305 0194 0100000A 		beq	.L1091
 16306              		.loc 1 6735 5 discriminator 18
 16307 0198 0130E0E3 		mvn	r3, #1
 16308 019c 360000EA 		b	.L1089
 16309              	.L1091:
6736:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
6737:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6738:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 16310              		.loc 1 6738 5 is_stmt 1
 16311 01a0 08301BE5 		ldr	r3, [fp, #-8]
 16312 01a4 083093E5 		ldr	r3, [r3, #8]
 16313 01a8 013003E2 		and	r3, r3, #1
 16314 01ac 000053E3 		cmp	r3, #0
 16315 01b0 0100001A 		bne	.L1097
 16316              		.loc 1 6738 5 is_stmt 0 discriminator 1
 16317 01b4 0630E0E3 		mvn	r3, #6
 16318 01b8 2F0000EA 		b	.L1089
 16319              	.L1097:
6739:../../Source/Kernel/rme_kernel.c ****     
6740:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6741:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 16320              		.loc 1 6741 5 is_stmt 1
 16321 01bc 08301BE5 		ldr	r3, [fp, #-8]
 16322 01c0 142093E5 		ldr	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 406


 16323 01c4 20301BE5 		ldr	r3, [fp, #-32]
 16324 01c8 030052E1 		cmp	r2, r3
 16325 01cc 0100008A 		bhi	.L1098
 16326              		.loc 1 6741 5 is_stmt 0 discriminator 1
 16327 01d0 0230E0E3 		mvn	r3, #2
 16328 01d4 280000EA 		b	.L1089
 16329              	.L1098:
 16330              		.loc 1 6741 5 discriminator 2
 16331 01d8 20301BE5 		ldr	r3, [fp, #-32]
 16332 01dc 8322A0E1 		lsl	r2, r3, #5
 16333 01e0 08301BE5 		ldr	r3, [fp, #-8]
 16334 01e4 0C3093E5 		ldr	r3, [r3, #12]
 16335 01e8 033082E0 		add	r3, r2, r3
 16336 01ec 10300BE5 		str	r3, [fp, #-16]
6742:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6743:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 16337              		.loc 1 6743 5 is_stmt 1 discriminator 2
 16338 01f0 10301BE5 		ldr	r3, [fp, #-16]
 16339 01f4 0128A0E3 		mov	r2, #65536
 16340 01f8 0010A0E3 		mov	r1, #0
 16341 01fc 0300A0E1 		mov	r0, r3
 16342 0200 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 16343 0204 0030A0E1 		mov	r3, r0
 16344 0208 000053E3 		cmp	r3, #0
 16345 020c 0100001A 		bne	.L1099
 16346              		.loc 1 6743 5 is_stmt 0 discriminator 1
 16347 0210 0430E0E3 		mvn	r3, #4
 16348 0214 180000EA 		b	.L1089
 16349              	.L1099:
 16350              		.loc 1 6743 5 discriminator 2
 16351 0218 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 16352 021c 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 16353 0220 002093E5 		ldr	r2, [r3]
 16354 0224 10301BE5 		ldr	r3, [fp, #-16]
 16355 0228 102083E5 		str	r2, [r3, #16]
6744:../../Source/Kernel/rme_kernel.c **** 
6745:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6746:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=1U;
 16356              		.loc 1 6746 27 is_stmt 1 discriminator 2
 16357 022c 10301BE5 		ldr	r3, [fp, #-16]
 16358 0230 0120A0E3 		mov	r2, #1
 16359 0234 042083E5 		str	r2, [r3, #4]
6747:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 16360              		.loc 1 6747 25 discriminator 2
 16361 0238 10301BE5 		ldr	r3, [fp, #-16]
 16362 023c 0020A0E3 		mov	r2, #0
 16363 0240 0C2083E5 		str	r2, [r3, #12]
6748:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 16364              		.loc 1 6748 23 discriminator 2
 16365 0244 10301BE5 		ldr	r3, [fp, #-16]
 16366 0248 3F20A0E3 		mov	r2, #63
 16367 024c 082083E5 		str	r2, [r3, #8]
6749:../../Source/Kernel/rme_kernel.c ****     
6750:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6751:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 16368              		.loc 1 6751 21 discriminator 2
 16369 0250 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 407


 16370 0254 0020A0E3 		mov	r2, #0
 16371 0258 142083E5 		str	r2, [r3, #20]
6752:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=RME_NULL;
 16372              		.loc 1 6752 17 discriminator 2
 16373 025c 10301BE5 		ldr	r3, [fp, #-16]
 16374 0260 0020A0E3 		mov	r2, #0
 16375 0264 182083E5 		str	r2, [r3, #24]
6753:../../Source/Kernel/rme_kernel.c **** 
6754:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6755:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 16376              		.loc 1 6755 5 discriminator 2
 16377 0268 10301BE5 		ldr	r3, [fp, #-16]
 16378 026c 0213A0E3 		mov	r1, #134217728
 16379 0270 0300A0E1 		mov	r0, r3
 16380 0274 FEFFFFEB 		bl	__RME_A7A_Write_Release
6756:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6757:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6758:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6759:../../Source/Kernel/rme_kernel.c **** 
6760:../../Source/Kernel/rme_kernel.c ****     return 0;
 16381              		.loc 1 6760 12 discriminator 2
 16382 0278 0030A0E3 		mov	r3, #0
 16383              	.L1089:
6761:../../Source/Kernel/rme_kernel.c **** }
 16384              		.loc 1 6761 1
 16385 027c 0300A0E1 		mov	r0, r3
 16386 0280 04D04BE2 		sub	sp, fp, #4
 16387              		.cfi_def_cfa 13, 8
 16388              		@ sp needed
 16389 0284 0088BDE8 		pop	{fp, pc}
 16390              		.cfi_endproc
 16391              	.LFE65:
 16393              		.section	.text._RME_Sig_Crt,"ax",%progbits
 16394              		.align	2
 16395              		.syntax unified
 16396              		.arm
 16398              	_RME_Sig_Crt:
 16399              	.LFB66:
6762:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Boot_Crt ********************************************/
6763:../../Source/Kernel/rme_kernel.c **** 
6764:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Crt ******************************************************
6765:../../Source/Kernel/rme_kernel.c **** Description : Create a signal endpoint.
6766:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6767:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6768:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6769:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6770:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6771:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6772:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6773:../../Source/Kernel/rme_kernel.c **** Output      : None.
6774:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6775:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6776:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Crt(struct RME_Cap_Cpt* Cpt,
6777:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6778:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6779:../../Source/Kernel/rme_kernel.c **** {
 16400              		.loc 1 6779 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 408


 16401              		.cfi_startproc
 16402              		@ args = 0, pretend = 0, frame = 32
 16403              		@ frame_needed = 1, uses_anonymous_args = 0
 16404 0000 00482DE9 		push	{fp, lr}
 16405              		.cfi_def_cfa_offset 8
 16406              		.cfi_offset 11, -8
 16407              		.cfi_offset 14, -4
 16408 0004 04B08DE2 		add	fp, sp, #4
 16409              		.cfi_def_cfa 11, 4
 16410 0008 20D04DE2 		sub	sp, sp, #32
 16411 000c 18000BE5 		str	r0, [fp, #-24]
 16412 0010 1C100BE5 		str	r1, [fp, #-28]
 16413 0014 20200BE5 		str	r2, [fp, #-32]
6780:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6781:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Crt;
6782:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6783:../../Source/Kernel/rme_kernel.c ****     
6784:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6785:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 16414              		.loc 1 6785 5
 16415 0018 1C301BE5 		ldr	r3, [fp, #-28]
 16416 001c 803003E2 		and	r3, r3, #128
 16417 0020 000053E3 		cmp	r3, #0
 16418 0024 1D00001A 		bne	.L1101
 16419              		.loc 1 6785 5 is_stmt 0 discriminator 1
 16420 0028 18301BE5 		ldr	r3, [fp, #-24]
 16421 002c 142093E5 		ldr	r2, [r3, #20]
 16422 0030 1C301BE5 		ldr	r3, [fp, #-28]
 16423 0034 030052E1 		cmp	r2, r3
 16424 0038 0100008A 		bhi	.L1102
 16425              		.loc 1 6785 5 discriminator 3
 16426 003c 0230E0E3 		mvn	r3, #2
 16427 0040 8D0000EA 		b	.L1103
 16428              	.L1102:
 16429              		.loc 1 6785 5 discriminator 4
 16430 0044 1C301BE5 		ldr	r3, [fp, #-28]
 16431 0048 8322A0E1 		lsl	r2, r3, #5
 16432 004c 18301BE5 		ldr	r3, [fp, #-24]
 16433 0050 0C3093E5 		ldr	r3, [r3, #12]
 16434 0054 033082E0 		add	r3, r2, r3
 16435 0058 08300BE5 		str	r3, [fp, #-8]
 16436 005c 08301BE5 		ldr	r3, [fp, #-8]
 16437 0060 0300A0E1 		mov	r0, r3
 16438 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16439 0068 0C000BE5 		str	r0, [fp, #-12]
 16440 006c 0C301BE5 		ldr	r3, [fp, #-12]
 16441 0070 2338A0E1 		lsr	r3, r3, #16
 16442 0074 7330EFE6 		uxtb	r3, r3
 16443 0078 020053E3 		cmp	r3, #2
 16444 007c 0100001A 		bne	.L1104
 16445              		.loc 1 6785 5 discriminator 5
 16446 0080 0830E0E3 		mvn	r3, #8
 16447 0084 7C0000EA 		b	.L1103
 16448              	.L1104:
 16449              		.loc 1 6785 5 discriminator 6
 16450 0088 0C301BE5 		ldr	r3, [fp, #-12]
 16451 008c 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 409


 16452 0090 030053E3 		cmp	r3, #3
 16453 0094 4100000A 		beq	.L1105
 16454              		.loc 1 6785 5 discriminator 7
 16455 0098 0130E0E3 		mvn	r3, #1
 16456 009c 760000EA 		b	.L1103
 16457              	.L1101:
 16458              		.loc 1 6785 5 discriminator 2
 16459 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 16460 00a4 2324A0E1 		lsr	r2, r3, #8
 16461 00a8 18301BE5 		ldr	r3, [fp, #-24]
 16462 00ac 143093E5 		ldr	r3, [r3, #20]
 16463 00b0 030052E1 		cmp	r2, r3
 16464 00b4 0100003A 		bcc	.L1106
 16465              		.loc 1 6785 5 discriminator 8
 16466 00b8 0230E0E3 		mvn	r3, #2
 16467 00bc 6E0000EA 		b	.L1103
 16468              	.L1106:
 16469              		.loc 1 6785 5 discriminator 9
 16470 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 16471 00c4 2334A0E1 		lsr	r3, r3, #8
 16472 00c8 8322A0E1 		lsl	r2, r3, #5
 16473 00cc 18301BE5 		ldr	r3, [fp, #-24]
 16474 00d0 0C3093E5 		ldr	r3, [r3, #12]
 16475 00d4 033082E0 		add	r3, r2, r3
 16476 00d8 08300BE5 		str	r3, [fp, #-8]
 16477 00dc 08301BE5 		ldr	r3, [fp, #-8]
 16478 00e0 0300A0E1 		mov	r0, r3
 16479 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16480 00e8 0C000BE5 		str	r0, [fp, #-12]
 16481 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 16482 00f0 2338A0E1 		lsr	r3, r3, #16
 16483 00f4 7330EFE6 		uxtb	r3, r3
 16484 00f8 020053E3 		cmp	r3, #2
 16485 00fc 0100001A 		bne	.L1107
 16486              		.loc 1 6785 5 discriminator 10
 16487 0100 0830E0E3 		mvn	r3, #8
 16488 0104 5C0000EA 		b	.L1103
 16489              	.L1107:
 16490              		.loc 1 6785 5 discriminator 11
 16491 0108 0C301BE5 		ldr	r3, [fp, #-12]
 16492 010c 233CA0E1 		lsr	r3, r3, #24
 16493 0110 030053E3 		cmp	r3, #3
 16494 0114 0100000A 		beq	.L1108
 16495              		.loc 1 6785 5 discriminator 12
 16496 0118 0130E0E3 		mvn	r3, #1
 16497 011c 560000EA 		b	.L1103
 16498              	.L1108:
 16499              		.loc 1 6785 5 discriminator 13
 16500 0120 1C301BE5 		ldr	r3, [fp, #-28]
 16501 0124 7F2003E2 		and	r2, r3, #127
 16502 0128 08301BE5 		ldr	r3, [fp, #-8]
 16503 012c 143093E5 		ldr	r3, [r3, #20]
 16504 0130 030052E1 		cmp	r2, r3
 16505 0134 0100003A 		bcc	.L1109
 16506              		.loc 1 6785 5 discriminator 14
 16507 0138 0230E0E3 		mvn	r3, #2
 16508 013c 4E0000EA 		b	.L1103
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 410


 16509              	.L1109:
 16510              		.loc 1 6785 5 discriminator 15
 16511 0140 1C301BE5 		ldr	r3, [fp, #-28]
 16512 0144 7F3003E2 		and	r3, r3, #127
 16513 0148 8322A0E1 		lsl	r2, r3, #5
 16514 014c 08301BE5 		ldr	r3, [fp, #-8]
 16515 0150 0C3093E5 		ldr	r3, [r3, #12]
 16516 0154 033082E0 		add	r3, r2, r3
 16517 0158 08300BE5 		str	r3, [fp, #-8]
 16518 015c 08301BE5 		ldr	r3, [fp, #-8]
 16519 0160 0300A0E1 		mov	r0, r3
 16520 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16521 0168 0C000BE5 		str	r0, [fp, #-12]
 16522 016c 0C301BE5 		ldr	r3, [fp, #-12]
 16523 0170 2338A0E1 		lsr	r3, r3, #16
 16524 0174 7330EFE6 		uxtb	r3, r3
 16525 0178 020053E3 		cmp	r3, #2
 16526 017c 0100001A 		bne	.L1110
 16527              		.loc 1 6785 5 discriminator 16
 16528 0180 0830E0E3 		mvn	r3, #8
 16529 0184 3C0000EA 		b	.L1103
 16530              	.L1110:
 16531              		.loc 1 6785 5 discriminator 17
 16532 0188 0C301BE5 		ldr	r3, [fp, #-12]
 16533 018c 233CA0E1 		lsr	r3, r3, #24
 16534 0190 030053E3 		cmp	r3, #3
 16535 0194 0100000A 		beq	.L1105
 16536              		.loc 1 6785 5 discriminator 18
 16537 0198 0130E0E3 		mvn	r3, #1
 16538 019c 360000EA 		b	.L1103
 16539              	.L1105:
6786:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
6787:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6788:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 16540              		.loc 1 6788 5 is_stmt 1
 16541 01a0 08301BE5 		ldr	r3, [fp, #-8]
 16542 01a4 083093E5 		ldr	r3, [r3, #8]
 16543 01a8 013003E2 		and	r3, r3, #1
 16544 01ac 000053E3 		cmp	r3, #0
 16545 01b0 0100001A 		bne	.L1111
 16546              		.loc 1 6788 5 is_stmt 0 discriminator 1
 16547 01b4 0630E0E3 		mvn	r3, #6
 16548 01b8 2F0000EA 		b	.L1103
 16549              	.L1111:
6789:../../Source/Kernel/rme_kernel.c ****     
6790:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6791:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 16550              		.loc 1 6791 5 is_stmt 1
 16551 01bc 08301BE5 		ldr	r3, [fp, #-8]
 16552 01c0 142093E5 		ldr	r2, [r3, #20]
 16553 01c4 20301BE5 		ldr	r3, [fp, #-32]
 16554 01c8 030052E1 		cmp	r2, r3
 16555 01cc 0100008A 		bhi	.L1112
 16556              		.loc 1 6791 5 is_stmt 0 discriminator 1
 16557 01d0 0230E0E3 		mvn	r3, #2
 16558 01d4 280000EA 		b	.L1103
 16559              	.L1112:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 411


 16560              		.loc 1 6791 5 discriminator 2
 16561 01d8 20301BE5 		ldr	r3, [fp, #-32]
 16562 01dc 8322A0E1 		lsl	r2, r3, #5
 16563 01e0 08301BE5 		ldr	r3, [fp, #-8]
 16564 01e4 0C3093E5 		ldr	r3, [r3, #12]
 16565 01e8 033082E0 		add	r3, r2, r3
 16566 01ec 10300BE5 		str	r3, [fp, #-16]
6792:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6793:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 16567              		.loc 1 6793 5 is_stmt 1 discriminator 2
 16568 01f0 10301BE5 		ldr	r3, [fp, #-16]
 16569 01f4 0128A0E3 		mov	r2, #65536
 16570 01f8 0010A0E3 		mov	r1, #0
 16571 01fc 0300A0E1 		mov	r0, r3
 16572 0200 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 16573 0204 0030A0E1 		mov	r3, r0
 16574 0208 000053E3 		cmp	r3, #0
 16575 020c 0100001A 		bne	.L1113
 16576              		.loc 1 6793 5 is_stmt 0 discriminator 1
 16577 0210 0430E0E3 		mvn	r3, #4
 16578 0214 180000EA 		b	.L1103
 16579              	.L1113:
 16580              		.loc 1 6793 5 discriminator 2
 16581 0218 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 16582 021c 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 16583 0220 002093E5 		ldr	r2, [r3]
 16584 0224 10301BE5 		ldr	r3, [fp, #-16]
 16585 0228 102083E5 		str	r2, [r3, #16]
6794:../../Source/Kernel/rme_kernel.c **** 
6795:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6796:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=0U;
 16586              		.loc 1 6796 27 is_stmt 1 discriminator 2
 16587 022c 10301BE5 		ldr	r3, [fp, #-16]
 16588 0230 0020A0E3 		mov	r2, #0
 16589 0234 042083E5 		str	r2, [r3, #4]
6797:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 16590              		.loc 1 6797 25 discriminator 2
 16591 0238 10301BE5 		ldr	r3, [fp, #-16]
 16592 023c 0020A0E3 		mov	r2, #0
 16593 0240 0C2083E5 		str	r2, [r3, #12]
6798:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 16594              		.loc 1 6798 23 discriminator 2
 16595 0244 10301BE5 		ldr	r3, [fp, #-16]
 16596 0248 3F20A0E3 		mov	r2, #63
 16597 024c 082083E5 		str	r2, [r3, #8]
6799:../../Source/Kernel/rme_kernel.c ****     
6800:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6801:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 16598              		.loc 1 6801 21 discriminator 2
 16599 0250 10301BE5 		ldr	r3, [fp, #-16]
 16600 0254 0020A0E3 		mov	r2, #0
 16601 0258 142083E5 		str	r2, [r3, #20]
6802:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=0U;
 16602              		.loc 1 6802 17 discriminator 2
 16603 025c 10301BE5 		ldr	r3, [fp, #-16]
 16604 0260 0020A0E3 		mov	r2, #0
 16605 0264 182083E5 		str	r2, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 412


6803:../../Source/Kernel/rme_kernel.c ****     
6804:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6805:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 16606              		.loc 1 6805 5 discriminator 2
 16607 0268 10301BE5 		ldr	r3, [fp, #-16]
 16608 026c 0213A0E3 		mov	r1, #134217728
 16609 0270 0300A0E1 		mov	r0, r3
 16610 0274 FEFFFFEB 		bl	__RME_A7A_Write_Release
6806:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6807:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6808:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6809:../../Source/Kernel/rme_kernel.c **** 
6810:../../Source/Kernel/rme_kernel.c ****     return 0;
 16611              		.loc 1 6810 12 discriminator 2
 16612 0278 0030A0E3 		mov	r3, #0
 16613              	.L1103:
6811:../../Source/Kernel/rme_kernel.c **** }
 16614              		.loc 1 6811 1
 16615 027c 0300A0E1 		mov	r0, r3
 16616 0280 04D04BE2 		sub	sp, fp, #4
 16617              		.cfi_def_cfa 13, 8
 16618              		@ sp needed
 16619 0284 0088BDE8 		pop	{fp, pc}
 16620              		.cfi_endproc
 16621              	.LFE66:
 16623              		.section	.text._RME_Sig_Del,"ax",%progbits
 16624              		.align	2
 16625              		.syntax unified
 16626              		.arm
 16628              	_RME_Sig_Del:
 16629              	.LFB67:
6812:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Crt *************************************************/
6813:../../Source/Kernel/rme_kernel.c **** 
6814:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Del ******************************************************
6815:../../Source/Kernel/rme_kernel.c **** Description : Delete a signal endpoint.
6816:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6817:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
6818:../../Source/Kernel/rme_kernel.c ****                                   delete from.
6819:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6820:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
6821:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6822:../../Source/Kernel/rme_kernel.c **** Output      : None.
6823:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6824:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6825:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Del(struct RME_Cap_Cpt* Cpt,
6826:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6827:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6828:../../Source/Kernel/rme_kernel.c **** {
 16630              		.loc 1 6828 1
 16631              		.cfi_startproc
 16632              		@ args = 0, pretend = 0, frame = 32
 16633              		@ frame_needed = 1, uses_anonymous_args = 0
 16634 0000 00482DE9 		push	{fp, lr}
 16635              		.cfi_def_cfa_offset 8
 16636              		.cfi_offset 11, -8
 16637              		.cfi_offset 14, -4
 16638 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 413


 16639              		.cfi_def_cfa 11, 4
 16640 0008 20D04DE2 		sub	sp, sp, #32
 16641 000c 18000BE5 		str	r0, [fp, #-24]
 16642 0010 1C100BE5 		str	r1, [fp, #-28]
 16643 0014 20200BE5 		str	r2, [fp, #-32]
6829:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6830:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Del;
6831:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6832:../../Source/Kernel/rme_kernel.c ****     
6833:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6834:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 16644              		.loc 1 6834 5
 16645 0018 1C301BE5 		ldr	r3, [fp, #-28]
 16646 001c 803003E2 		and	r3, r3, #128
 16647 0020 000053E3 		cmp	r3, #0
 16648 0024 1D00001A 		bne	.L1115
 16649              		.loc 1 6834 5 is_stmt 0 discriminator 1
 16650 0028 18301BE5 		ldr	r3, [fp, #-24]
 16651 002c 142093E5 		ldr	r2, [r3, #20]
 16652 0030 1C301BE5 		ldr	r3, [fp, #-28]
 16653 0034 030052E1 		cmp	r2, r3
 16654 0038 0100008A 		bhi	.L1116
 16655              		.loc 1 6834 5 discriminator 3
 16656 003c 0230E0E3 		mvn	r3, #2
 16657 0040 AF0000EA 		b	.L1117
 16658              	.L1116:
 16659              		.loc 1 6834 5 discriminator 4
 16660 0044 1C301BE5 		ldr	r3, [fp, #-28]
 16661 0048 8322A0E1 		lsl	r2, r3, #5
 16662 004c 18301BE5 		ldr	r3, [fp, #-24]
 16663 0050 0C3093E5 		ldr	r3, [r3, #12]
 16664 0054 033082E0 		add	r3, r2, r3
 16665 0058 08300BE5 		str	r3, [fp, #-8]
 16666 005c 08301BE5 		ldr	r3, [fp, #-8]
 16667 0060 0300A0E1 		mov	r0, r3
 16668 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16669 0068 0C000BE5 		str	r0, [fp, #-12]
 16670 006c 0C301BE5 		ldr	r3, [fp, #-12]
 16671 0070 2338A0E1 		lsr	r3, r3, #16
 16672 0074 7330EFE6 		uxtb	r3, r3
 16673 0078 020053E3 		cmp	r3, #2
 16674 007c 0100001A 		bne	.L1118
 16675              		.loc 1 6834 5 discriminator 5
 16676 0080 0830E0E3 		mvn	r3, #8
 16677 0084 9E0000EA 		b	.L1117
 16678              	.L1118:
 16679              		.loc 1 6834 5 discriminator 6
 16680 0088 0C301BE5 		ldr	r3, [fp, #-12]
 16681 008c 233CA0E1 		lsr	r3, r3, #24
 16682 0090 030053E3 		cmp	r3, #3
 16683 0094 4100000A 		beq	.L1119
 16684              		.loc 1 6834 5 discriminator 7
 16685 0098 0130E0E3 		mvn	r3, #1
 16686 009c 980000EA 		b	.L1117
 16687              	.L1115:
 16688              		.loc 1 6834 5 discriminator 2
 16689 00a0 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 414


 16690 00a4 2324A0E1 		lsr	r2, r3, #8
 16691 00a8 18301BE5 		ldr	r3, [fp, #-24]
 16692 00ac 143093E5 		ldr	r3, [r3, #20]
 16693 00b0 030052E1 		cmp	r2, r3
 16694 00b4 0100003A 		bcc	.L1120
 16695              		.loc 1 6834 5 discriminator 8
 16696 00b8 0230E0E3 		mvn	r3, #2
 16697 00bc 900000EA 		b	.L1117
 16698              	.L1120:
 16699              		.loc 1 6834 5 discriminator 9
 16700 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 16701 00c4 2334A0E1 		lsr	r3, r3, #8
 16702 00c8 8322A0E1 		lsl	r2, r3, #5
 16703 00cc 18301BE5 		ldr	r3, [fp, #-24]
 16704 00d0 0C3093E5 		ldr	r3, [r3, #12]
 16705 00d4 033082E0 		add	r3, r2, r3
 16706 00d8 08300BE5 		str	r3, [fp, #-8]
 16707 00dc 08301BE5 		ldr	r3, [fp, #-8]
 16708 00e0 0300A0E1 		mov	r0, r3
 16709 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16710 00e8 0C000BE5 		str	r0, [fp, #-12]
 16711 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 16712 00f0 2338A0E1 		lsr	r3, r3, #16
 16713 00f4 7330EFE6 		uxtb	r3, r3
 16714 00f8 020053E3 		cmp	r3, #2
 16715 00fc 0100001A 		bne	.L1121
 16716              		.loc 1 6834 5 discriminator 10
 16717 0100 0830E0E3 		mvn	r3, #8
 16718 0104 7E0000EA 		b	.L1117
 16719              	.L1121:
 16720              		.loc 1 6834 5 discriminator 11
 16721 0108 0C301BE5 		ldr	r3, [fp, #-12]
 16722 010c 233CA0E1 		lsr	r3, r3, #24
 16723 0110 030053E3 		cmp	r3, #3
 16724 0114 0100000A 		beq	.L1122
 16725              		.loc 1 6834 5 discriminator 12
 16726 0118 0130E0E3 		mvn	r3, #1
 16727 011c 780000EA 		b	.L1117
 16728              	.L1122:
 16729              		.loc 1 6834 5 discriminator 13
 16730 0120 1C301BE5 		ldr	r3, [fp, #-28]
 16731 0124 7F2003E2 		and	r2, r3, #127
 16732 0128 08301BE5 		ldr	r3, [fp, #-8]
 16733 012c 143093E5 		ldr	r3, [r3, #20]
 16734 0130 030052E1 		cmp	r2, r3
 16735 0134 0100003A 		bcc	.L1123
 16736              		.loc 1 6834 5 discriminator 14
 16737 0138 0230E0E3 		mvn	r3, #2
 16738 013c 700000EA 		b	.L1117
 16739              	.L1123:
 16740              		.loc 1 6834 5 discriminator 15
 16741 0140 1C301BE5 		ldr	r3, [fp, #-28]
 16742 0144 7F3003E2 		and	r3, r3, #127
 16743 0148 8322A0E1 		lsl	r2, r3, #5
 16744 014c 08301BE5 		ldr	r3, [fp, #-8]
 16745 0150 0C3093E5 		ldr	r3, [r3, #12]
 16746 0154 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 415


 16747 0158 08300BE5 		str	r3, [fp, #-8]
 16748 015c 08301BE5 		ldr	r3, [fp, #-8]
 16749 0160 0300A0E1 		mov	r0, r3
 16750 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16751 0168 0C000BE5 		str	r0, [fp, #-12]
 16752 016c 0C301BE5 		ldr	r3, [fp, #-12]
 16753 0170 2338A0E1 		lsr	r3, r3, #16
 16754 0174 7330EFE6 		uxtb	r3, r3
 16755 0178 020053E3 		cmp	r3, #2
 16756 017c 0100001A 		bne	.L1124
 16757              		.loc 1 6834 5 discriminator 16
 16758 0180 0830E0E3 		mvn	r3, #8
 16759 0184 5E0000EA 		b	.L1117
 16760              	.L1124:
 16761              		.loc 1 6834 5 discriminator 17
 16762 0188 0C301BE5 		ldr	r3, [fp, #-12]
 16763 018c 233CA0E1 		lsr	r3, r3, #24
 16764 0190 030053E3 		cmp	r3, #3
 16765 0194 0100000A 		beq	.L1119
 16766              		.loc 1 6834 5 discriminator 18
 16767 0198 0130E0E3 		mvn	r3, #1
 16768 019c 580000EA 		b	.L1117
 16769              	.L1119:
6835:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
6836:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
6837:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 16770              		.loc 1 6837 5 is_stmt 1
 16771 01a0 08301BE5 		ldr	r3, [fp, #-8]
 16772 01a4 083093E5 		ldr	r3, [r3, #8]
 16773 01a8 023003E2 		and	r3, r3, #2
 16774 01ac 000053E3 		cmp	r3, #0
 16775 01b0 0100001A 		bne	.L1125
 16776              		.loc 1 6837 5 is_stmt 0 discriminator 1
 16777 01b4 0630E0E3 		mvn	r3, #6
 16778 01b8 510000EA 		b	.L1117
 16779              	.L1125:
6838:../../Source/Kernel/rme_kernel.c ****     
6839:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6840:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Del);
 16780              		.loc 1 6840 5 is_stmt 1
 16781 01bc 08301BE5 		ldr	r3, [fp, #-8]
 16782 01c0 142093E5 		ldr	r2, [r3, #20]
 16783 01c4 20301BE5 		ldr	r3, [fp, #-32]
 16784 01c8 030052E1 		cmp	r2, r3
 16785 01cc 0100008A 		bhi	.L1126
 16786              		.loc 1 6840 5 is_stmt 0 discriminator 1
 16787 01d0 0230E0E3 		mvn	r3, #2
 16788 01d4 4A0000EA 		b	.L1117
 16789              	.L1126:
 16790              		.loc 1 6840 5 discriminator 2
 16791 01d8 20301BE5 		ldr	r3, [fp, #-32]
 16792 01dc 8322A0E1 		lsl	r2, r3, #5
 16793 01e0 08301BE5 		ldr	r3, [fp, #-8]
 16794 01e4 0C3093E5 		ldr	r3, [r3, #12]
 16795 01e8 033082E0 		add	r3, r2, r3
 16796 01ec 10300BE5 		str	r3, [fp, #-16]
6841:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 416


6842:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Sig_Del,Type_Stat,RME_CAP_TYPE_SIG);
 16797              		.loc 1 6842 5 is_stmt 1 discriminator 2
 16798 01f0 10301BE5 		ldr	r3, [fp, #-16]
 16799 01f4 0300A0E1 		mov	r0, r3
 16800 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16801 01fc 0C000BE5 		str	r0, [fp, #-12]
 16802 0200 0C301BE5 		ldr	r3, [fp, #-12]
 16803 0204 2338A0E1 		lsr	r3, r3, #16
 16804 0208 7330EFE6 		uxtb	r3, r3
 16805 020c 020053E3 		cmp	r3, #2
 16806 0210 0100000A 		beq	.L1127
 16807              		.loc 1 6842 5 is_stmt 0 discriminator 1
 16808 0214 0830E0E3 		mvn	r3, #8
 16809 0218 390000EA 		b	.L1117
 16810              	.L1127:
 16811              		.loc 1 6842 5 discriminator 2
 16812 021c 0C301BE5 		ldr	r3, [fp, #-12]
 16813 0220 233CA0E1 		lsr	r3, r3, #24
 16814 0224 080053E3 		cmp	r3, #8
 16815 0228 0100000A 		beq	.L1128
 16816              		.loc 1 6842 5 discriminator 3
 16817 022c 0130E0E3 		mvn	r3, #1
 16818 0230 330000EA 		b	.L1117
 16819              	.L1128:
 16820              		.loc 1 6842 5 discriminator 6
 16821 0234 10301BE5 		ldr	r3, [fp, #-16]
 16822 0238 043093E5 		ldr	r3, [r3, #4]
 16823 023c 000053E3 		cmp	r3, #0
 16824 0240 0B00000A 		beq	.L1129
 16825              		.loc 1 6842 5 discriminator 7
 16826 0244 0C301BE5 		ldr	r3, [fp, #-12]
 16827 0248 7330FFE6 		uxth	r3, r3
 16828 024c 000053E3 		cmp	r3, #0
 16829 0250 0500001A 		bne	.L1130
 16830              		.loc 1 6842 5 discriminator 9
 16831 0254 10001BE5 		ldr	r0, [fp, #-16]
 16832 0258 0C301BE5 		ldr	r3, [fp, #-12]
 16833 025c FF38C3E3 		bic	r3, r3, #16711680
 16834 0260 0320A0E1 		mov	r2, r3
 16835 0264 0C101BE5 		ldr	r1, [fp, #-12]
 16836 0268 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 16837              	.L1130:
 16838              		.loc 1 6842 5 discriminator 11
 16839 026c 0530E0E3 		mvn	r3, #5
 16840 0270 230000EA 		b	.L1117
 16841              	.L1129:
 16842              		.loc 1 6842 5 discriminator 8
 16843 0274 0C301BE5 		ldr	r3, [fp, #-12]
 16844 0278 7330FFE6 		uxth	r3, r3
 16845 027c 000053E3 		cmp	r3, #0
 16846 0280 0800000A 		beq	.L1131
 16847              		.loc 1 6842 5 discriminator 12
 16848 0284 003000E3 		movw	r3, #:lower16:.LC4
 16849 0288 003040E3 		movt	r3, #:upper16:.LC4
 16850 028c 002000E3 		movw	r2, #:lower16:.LC5
 16851 0290 002040E3 		movt	r2, #:upper16:.LC5
 16852 0294 BA1A01E3 		movw	r1, #6842
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 417


 16853 0298 000000E3 		movw	r0, #:lower16:.LC6
 16854 029c 000040E3 		movt	r0, #:upper16:.LC6
 16855 02a0 FEFFFFEB 		bl	RME_Log
 16856              	.L1132:
 16857              		.loc 1 6842 5 discriminator 1
 16858 02a4 FEFFFFEA 		b	.L1132
 16859              	.L1131:
6843:../../Source/Kernel/rme_kernel.c **** 
6844:../../Source/Kernel/rme_kernel.c ****     /* Check if the signal endpoint is currently used and cannot be deleted */
6845:../../Source/Kernel/rme_kernel.c ****     if(Sig_Del->Thd!=0U)
 16860              		.loc 1 6845 15 is_stmt 1
 16861 02a8 10301BE5 		ldr	r3, [fp, #-16]
 16862 02ac 183093E5 		ldr	r3, [r3, #24]
 16863              		.loc 1 6845 7
 16864 02b0 000053E3 		cmp	r3, #0
 16865 02b4 0700000A 		beq	.L1133
6846:../../Source/Kernel/rme_kernel.c ****     {
6847:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6848:../../Source/Kernel/rme_kernel.c **** 
6849:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Sig_Del,Type_Stat);
 16866              		.loc 1 6849 9
 16867 02b8 10001BE5 		ldr	r0, [fp, #-16]
 16868 02bc 0C301BE5 		ldr	r3, [fp, #-12]
 16869 02c0 FF38C3E3 		bic	r3, r3, #16711680
 16870 02c4 0320A0E1 		mov	r2, r3
 16871 02c8 0C101BE5 		ldr	r1, [fp, #-12]
 16872 02cc FEFFFFEB 		bl	_RME_Comp_Swap_Single
6850:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 16873              		.loc 1 6850 16
 16874 02d0 4B3FE0E3 		mvn	r3, #300
 16875 02d4 0A0000EA 		b	.L1117
 16876              	.L1133:
6851:../../Source/Kernel/rme_kernel.c ****     }
6852:../../Source/Kernel/rme_kernel.c ****     else
6853:../../Source/Kernel/rme_kernel.c ****     {
6854:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6855:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6856:../../Source/Kernel/rme_kernel.c ****     }
6857:../../Source/Kernel/rme_kernel.c ****     
6858:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
6859:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Sig_Del,Type_Stat);
 16877              		.loc 1 6859 5
 16878 02d8 10301BE5 		ldr	r3, [fp, #-16]
 16879 02dc 0020A0E3 		mov	r2, #0
 16880 02e0 0C101BE5 		ldr	r1, [fp, #-12]
 16881 02e4 0300A0E1 		mov	r0, r3
 16882 02e8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 16883 02ec 0030A0E1 		mov	r3, r0
 16884 02f0 000053E3 		cmp	r3, #0
 16885 02f4 0100001A 		bne	.L1134
 16886              		.loc 1 6859 5 is_stmt 0 discriminator 1
 16887 02f8 0030E0E3 		mvn	r3, #0
 16888 02fc 000000EA 		b	.L1117
 16889              	.L1134:
6860:../../Source/Kernel/rme_kernel.c ****     
6861:../../Source/Kernel/rme_kernel.c ****     return 0;
 16890              		.loc 1 6861 12 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 418


 16891 0300 0030A0E3 		mov	r3, #0
 16892              	.L1117:
6862:../../Source/Kernel/rme_kernel.c **** }
 16893              		.loc 1 6862 1
 16894 0304 0300A0E1 		mov	r0, r3
 16895 0308 04D04BE2 		sub	sp, fp, #4
 16896              		.cfi_def_cfa 13, 8
 16897              		@ sp needed
 16898 030c 0088BDE8 		pop	{fp, pc}
 16899              		.cfi_endproc
 16900              	.LFE67:
 16902              		.section	.text._RME_Kern_High,"ax",%progbits
 16903              		.align	2
 16904              		.global	_RME_Kern_High
 16905              		.syntax unified
 16906              		.arm
 16908              	_RME_Kern_High:
 16909              	.LFB68:
6863:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Del *************************************************/
6864:../../Source/Kernel/rme_kernel.c **** 
6865:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_High ****************************************************
6866:../../Source/Kernel/rme_kernel.c **** Description : Pick the thread with the highest priority to run. Always call
6867:../../Source/Kernel/rme_kernel.c ****               this after you finish all your kernel sending stuff in the
6868:../../Source/Kernel/rme_kernel.c ****               interrupt handler, or the kernel send will not be correct.
6869:../../Source/Kernel/rme_kernel.c ****               This function is also used by system calls to pick a random
6870:../../Source/Kernel/rme_kernel.c ****               highest priority thread.
6871:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
6872:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure.
6873:../../Source/Kernel/rme_kernel.c **** Output      : volatile struct RME_Reg_Struct* Reg - The updated register set.
6874:../../Source/Kernel/rme_kernel.c **** Return      : None.
6875:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6876:../../Source/Kernel/rme_kernel.c **** void _RME_Kern_High(struct RME_Reg_Struct* Reg,
6877:../../Source/Kernel/rme_kernel.c ****                     struct RME_CPU_Local* Local)
6878:../../Source/Kernel/rme_kernel.c **** {
 16910              		.loc 1 6878 1
 16911              		.cfi_startproc
 16912              		@ args = 0, pretend = 0, frame = 16
 16913              		@ frame_needed = 1, uses_anonymous_args = 0
 16914 0000 00482DE9 		push	{fp, lr}
 16915              		.cfi_def_cfa_offset 8
 16916              		.cfi_offset 11, -8
 16917              		.cfi_offset 14, -4
 16918 0004 04B08DE2 		add	fp, sp, #4
 16919              		.cfi_def_cfa 11, 4
 16920 0008 10D04DE2 		sub	sp, sp, #16
 16921 000c 10000BE5 		str	r0, [fp, #-16]
 16922 0010 14100BE5 		str	r1, [fp, #-20]
6879:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6880:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6881:../../Source/Kernel/rme_kernel.c **** 
6882:../../Source/Kernel/rme_kernel.c ****     Thd_New=_RME_Run_High(Local);
 16923              		.loc 1 6882 13
 16924 0014 14001BE5 		ldr	r0, [fp, #-20]
 16925 0018 FEFFFFEB 		bl	_RME_Run_High
 16926 001c 08000BE5 		str	r0, [fp, #-8]
6883:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New!=RME_NULL);
 16927              		.loc 1 6883 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 419


 16928 0020 08301BE5 		ldr	r3, [fp, #-8]
 16929 0024 000053E3 		cmp	r3, #0
 16930 0028 0800001A 		bne	.L1136
 16931              		.loc 1 6883 5 is_stmt 0 discriminator 1
 16932 002c 003000E3 		movw	r3, #:lower16:.LC4
 16933 0030 003040E3 		movt	r3, #:upper16:.LC4
 16934 0034 002000E3 		movw	r2, #:lower16:.LC5
 16935 0038 002040E3 		movt	r2, #:upper16:.LC5
 16936 003c E31A01E3 		movw	r1, #6883
 16937 0040 000000E3 		movw	r0, #:lower16:.LC6
 16938 0044 000040E3 		movt	r0, #:upper16:.LC6
 16939 0048 FEFFFFEB 		bl	RME_Log
 16940              	.L1137:
 16941 004c FEFFFFEA 		b	.L1137
 16942              	.L1136:
6884:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 16943              		.loc 1 6884 12 is_stmt 1
 16944 0050 14301BE5 		ldr	r3, [fp, #-20]
 16945 0054 043093E5 		ldr	r3, [r3, #4]
 16946 0058 0C300BE5 		str	r3, [fp, #-12]
6885:../../Source/Kernel/rme_kernel.c **** 
6886:../../Source/Kernel/rme_kernel.c ****     /* Are these two threads the same? */
6887:../../Source/Kernel/rme_kernel.c ****     if(Thd_New==Thd_Cur)
 16947              		.loc 1 6887 7
 16948 005c 08201BE5 		ldr	r2, [fp, #-8]
 16949 0060 0C301BE5 		ldr	r3, [fp, #-12]
 16950 0064 030052E1 		cmp	r2, r3
 16951 0068 1E00000A 		beq	.L1143
6888:../../Source/Kernel/rme_kernel.c ****     {
6889:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6890:../../Source/Kernel/rme_kernel.c **** 
6891:../../Source/Kernel/rme_kernel.c ****         return;
6892:../../Source/Kernel/rme_kernel.c ****     }
6893:../../Source/Kernel/rme_kernel.c ****     else
6894:../../Source/Kernel/rme_kernel.c ****     {
6895:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6896:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6897:../../Source/Kernel/rme_kernel.c ****     }
6898:../../Source/Kernel/rme_kernel.c **** 
6899:../../Source/Kernel/rme_kernel.c ****     /* Check if we need to do the context switch regardless of priority
6900:../../Source/Kernel/rme_kernel.c ****      * because the current thread is not ready yet. */
6901:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.State==RME_THD_READY)
 16952              		.loc 1 6901 22
 16953 006c 0C301BE5 		ldr	r3, [fp, #-12]
 16954 0070 1C3093E5 		ldr	r3, [r3, #28]
 16955              		.loc 1 6901 7
 16956 0074 000053E3 		cmp	r3, #0
 16957 0078 0500001A 		bne	.L1140
6902:../../Source/Kernel/rme_kernel.c ****     {
6903:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6904:../../Source/Kernel/rme_kernel.c **** 
6905:../../Source/Kernel/rme_kernel.c ****         /* Check priority to see if the switch is necessary */
6906:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Prio<=Thd_Cur->Sched.Prio)
 16958              		.loc 1 6906 26
 16959 007c 08301BE5 		ldr	r3, [fp, #-8]
 16960 0080 202093E5 		ldr	r2, [r3, #32]
 16961              		.loc 1 6906 47
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 420


 16962 0084 0C301BE5 		ldr	r3, [fp, #-12]
 16963 0088 203093E5 		ldr	r3, [r3, #32]
 16964              		.loc 1 6906 11
 16965 008c 030052E1 		cmp	r2, r3
 16966 0090 1600009A 		bls	.L1144
 16967              	.L1140:
6907:../../Source/Kernel/rme_kernel.c ****         {
6908:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6909:../../Source/Kernel/rme_kernel.c **** 
6910:../../Source/Kernel/rme_kernel.c ****             return;
6911:../../Source/Kernel/rme_kernel.c ****         }
6912:../../Source/Kernel/rme_kernel.c ****         else
6913:../../Source/Kernel/rme_kernel.c ****         {
6914:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6915:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6916:../../Source/Kernel/rme_kernel.c ****         }
6917:../../Source/Kernel/rme_kernel.c ****     }
6918:../../Source/Kernel/rme_kernel.c ****     else
6919:../../Source/Kernel/rme_kernel.c ****     {
6920:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6921:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6922:../../Source/Kernel/rme_kernel.c ****     }
6923:../../Source/Kernel/rme_kernel.c **** 
6924:../../Source/Kernel/rme_kernel.c ****     /* We will have a solid context switch on this point. The current 
6925:../../Source/Kernel/rme_kernel.c ****      * thread is not necessarily READY, it could be EXCPEND as well. */
6926:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 16968              		.loc 1 6926 5
 16969 0094 08301BE5 		ldr	r3, [fp, #-8]
 16970 0098 1C3093E5 		ldr	r3, [r3, #28]
 16971 009c 000053E3 		cmp	r3, #0
 16972 00a0 0800000A 		beq	.L1141
 16973              		.loc 1 6926 5 is_stmt 0 discriminator 1
 16974 00a4 003000E3 		movw	r3, #:lower16:.LC4
 16975 00a8 003040E3 		movt	r3, #:upper16:.LC4
 16976 00ac 002000E3 		movw	r2, #:lower16:.LC5
 16977 00b0 002040E3 		movt	r2, #:upper16:.LC5
 16978 00b4 0E1B01E3 		movw	r1, #6926
 16979 00b8 000000E3 		movw	r0, #:lower16:.LC6
 16980 00bc 000040E3 		movt	r0, #:upper16:.LC6
 16981 00c0 FEFFFFEB 		bl	RME_Log
 16982              	.L1142:
 16983              		.loc 1 6926 5 discriminator 2
 16984 00c4 FEFFFFEA 		b	.L1142
 16985              	.L1141:
6927:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 16986              		.loc 1 6927 5 is_stmt 1
 16987 00c8 08201BE5 		ldr	r2, [fp, #-8]
 16988 00cc 0C101BE5 		ldr	r1, [fp, #-12]
 16989 00d0 10001BE5 		ldr	r0, [fp, #-16]
 16990 00d4 FEFFFFEB 		bl	_RME_Run_Swt
6928:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 16991              		.loc 1 6928 19
 16992 00d8 14301BE5 		ldr	r3, [fp, #-20]
 16993 00dc 08201BE5 		ldr	r2, [fp, #-8]
 16994 00e0 042083E5 		str	r2, [r3, #4]
 16995 00e4 020000EA 		b	.L1135
 16996              	.L1143:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 421


6891:../../Source/Kernel/rme_kernel.c ****     }
 16997              		.loc 1 6891 9
 16998 00e8 00F020E3 		nop
 16999 00ec 000000EA 		b	.L1135
 17000              	.L1144:
6910:../../Source/Kernel/rme_kernel.c ****         }
 17001              		.loc 1 6910 13
 17002 00f0 00F020E3 		nop
 17003              	.L1135:
6929:../../Source/Kernel/rme_kernel.c **** }
 17004              		.loc 1 6929 1
 17005 00f4 04D04BE2 		sub	sp, fp, #4
 17006              		.cfi_def_cfa 13, 8
 17007              		@ sp needed
 17008 00f8 0088BDE8 		pop	{fp, pc}
 17009              		.cfi_endproc
 17010              	.LFE68:
 17012              		.section	.text._RME_Kern_Snd,"ax",%progbits
 17013              		.align	2
 17014              		.global	_RME_Kern_Snd
 17015              		.syntax unified
 17016              		.arm
 17018              	_RME_Kern_Snd:
 17019              	.LFB69:
6930:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_High ***********************************************/
6931:../../Source/Kernel/rme_kernel.c **** 
6932:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_Snd *****************************************************
6933:../../Source/Kernel/rme_kernel.c **** Description : Try to send a signal to an endpoint from kernel. This is intended
6934:../../Source/Kernel/rme_kernel.c ****               to be called in the interrupt routines in the kernel, and this is
6935:../../Source/Kernel/rme_kernel.c ****               not a system call. The capability passed in must be the root
6936:../../Source/Kernel/rme_kernel.c ****               capability, and this function will not check whether it really is.
6937:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Sig* Cap_Sig - The signal root capability.
6938:../../Source/Kernel/rme_kernel.c **** Output      : None.
6939:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
6940:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6941:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kern_Snd(struct RME_Cap_Sig* Cap_Sig)
6942:../../Source/Kernel/rme_kernel.c **** {
 17020              		.loc 1 6942 1
 17021              		.cfi_startproc
 17022              		@ args = 0, pretend = 0, frame = 16
 17023              		@ frame_needed = 1, uses_anonymous_args = 0
 17024 0000 00482DE9 		push	{fp, lr}
 17025              		.cfi_def_cfa_offset 8
 17026              		.cfi_offset 11, -8
 17027              		.cfi_offset 14, -4
 17028 0004 04B08DE2 		add	fp, sp, #4
 17029              		.cfi_def_cfa 11, 4
 17030 0008 10D04DE2 		sub	sp, sp, #16
 17031 000c 10000BE5 		str	r0, [fp, #-16]
6943:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
6944:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Sig;
6945:../../Source/Kernel/rme_kernel.c ****     
6946:../../Source/Kernel/rme_kernel.c ****     Thd_Sig=Cap_Sig->Thd;
 17032              		.loc 1 6946 12
 17033 0010 10301BE5 		ldr	r3, [fp, #-16]
 17034 0014 183093E5 		ldr	r3, [r3, #24]
 17035 0018 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 422


6947:../../Source/Kernel/rme_kernel.c ****     
6948:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
6949:../../Source/Kernel/rme_kernel.c ****     if(Thd_Sig!=RME_NULL)
 17036              		.loc 1 6949 7
 17037 001c 0C301BE5 		ldr	r3, [fp, #-12]
 17038 0020 000053E3 		cmp	r3, #0
 17039 0024 0B00000A 		beq	.L1146
6950:../../Source/Kernel/rme_kernel.c ****     {
6951:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6952:../../Source/Kernel/rme_kernel.c **** 
6953:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Local==RME_CPU_LOCAL())
 17040              		.loc 1 6953 26
 17041 0028 0C301BE5 		ldr	r3, [fp, #-12]
 17042 002c 142093E5 		ldr	r2, [r3, #20]
 17043              		.loc 1 6953 11
 17044 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 17045 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 17046 0038 030052E1 		cmp	r2, r3
 17047 003c 0200001A 		bne	.L1147
6954:../../Source/Kernel/rme_kernel.c ****         {
6955:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6956:../../Source/Kernel/rme_kernel.c **** 
6957:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 17048              		.loc 1 6957 20
 17049 0040 0130A0E3 		mov	r3, #1
 17050 0044 08300BE5 		str	r3, [fp, #-8]
 17051 0048 040000EA 		b	.L1148
 17052              	.L1147:
6958:../../Source/Kernel/rme_kernel.c ****         }
6959:../../Source/Kernel/rme_kernel.c ****         else
6960:../../Source/Kernel/rme_kernel.c ****         {
6961:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6962:../../Source/Kernel/rme_kernel.c **** 
6963:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 17053              		.loc 1 6963 20
 17054 004c 0030A0E3 		mov	r3, #0
 17055 0050 08300BE5 		str	r3, [fp, #-8]
 17056 0054 010000EA 		b	.L1148
 17057              	.L1146:
6964:../../Source/Kernel/rme_kernel.c ****         }
6965:../../Source/Kernel/rme_kernel.c ****     }
6966:../../Source/Kernel/rme_kernel.c ****     else
6967:../../Source/Kernel/rme_kernel.c ****     {
6968:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6969:../../Source/Kernel/rme_kernel.c **** 
6970:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 17058              		.loc 1 6970 16
 17059 0058 0030A0E3 		mov	r3, #0
 17060 005c 08300BE5 		str	r3, [fp, #-8]
 17061              	.L1148:
6971:../../Source/Kernel/rme_kernel.c ****     }
6972:../../Source/Kernel/rme_kernel.c **** 
6973:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 17062              		.loc 1 6973 7
 17063 0060 08301BE5 		ldr	r3, [fp, #-8]
 17064 0064 000053E3 		cmp	r3, #0
 17065 0068 1700000A 		beq	.L1149
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 423


6974:../../Source/Kernel/rme_kernel.c ****     {
6975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6976:../../Source/Kernel/rme_kernel.c **** 
6977:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
6978:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
6979:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
6980:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
6981:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Sig->Ctx.Reg->Reg),1);
 17066              		.loc 1 6981 44
 17067 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17068 0070 483093E5 		ldr	r3, [r3, #72]
 17069              		.loc 1 6981 9
 17070 0074 0110A0E3 		mov	r1, #1
 17071 0078 0300A0E1 		mov	r0, r3
 17072 007c FEFFFFEB 		bl	__RME_Svc_Retval_Set
6982:../../Source/Kernel/rme_kernel.c ****         
6983:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
6984:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Slice!=0U)
 17073              		.loc 1 6984 26
 17074 0080 0C301BE5 		ldr	r3, [fp, #-12]
 17075 0084 183093E5 		ldr	r3, [r3, #24]
 17076              		.loc 1 6984 11
 17077 0088 000053E3 		cmp	r3, #0
 17078 008c 0500000A 		beq	.L1150
6985:../../Source/Kernel/rme_kernel.c ****         {
6986:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6987:../../Source/Kernel/rme_kernel.c **** 
6988:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
6989:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_READY;
 17079              		.loc 1 6989 33
 17080 0090 0C301BE5 		ldr	r3, [fp, #-12]
 17081 0094 0020A0E3 		mov	r2, #0
 17082 0098 1C2083E5 		str	r2, [r3, #28]
6990:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Sig);
 17083              		.loc 1 6990 13
 17084 009c 0C001BE5 		ldr	r0, [fp, #-12]
 17085 00a0 FEFFFFEB 		bl	_RME_Run_Ins
 17086 00a4 040000EA 		b	.L1151
 17087              	.L1150:
6991:../../Source/Kernel/rme_kernel.c ****         }
6992:../../Source/Kernel/rme_kernel.c ****         else
6993:../../Source/Kernel/rme_kernel.c ****         {
6994:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6995:../../Source/Kernel/rme_kernel.c **** 
6996:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6997:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_TIMEOUT;
 17088              		.loc 1 6997 33
 17089 00a8 0C301BE5 		ldr	r3, [fp, #-12]
 17090 00ac 0220A0E3 		mov	r2, #2
 17091 00b0 1C2083E5 		str	r2, [r3, #28]
6998:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Sig);
 17092              		.loc 1 6998 13
 17093 00b4 0C001BE5 		ldr	r0, [fp, #-12]
 17094 00b8 FEFFFFEB 		bl	_RME_Run_Notif
 17095              	.L1151:
6999:../../Source/Kernel/rme_kernel.c ****         }
7000:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 424


7001:../../Source/Kernel/rme_kernel.c ****         /* We will not pick the highest priority thread here immediately, 
7002:../../Source/Kernel/rme_kernel.c ****          * because we may send to a myriad of endpoints in one interrupt, and
7003:../../Source/Kernel/rme_kernel.c ****          * we hope to perform the context switch only once when exiting that
7004:../../Source/Kernel/rme_kernel.c ****          * handler. Also note that the current thread could be EXCPEND as well;
7005:../../Source/Kernel/rme_kernel.c ****          * this is different from the normal signal sending system call. */
7006:../../Source/Kernel/rme_kernel.c ****         
7007:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7008:../../Source/Kernel/rme_kernel.c ****         Cap_Sig->Thd=RME_NULL;
 17096              		.loc 1 7008 21
 17097 00bc 10301BE5 		ldr	r3, [fp, #-16]
 17098 00c0 0020A0E3 		mov	r2, #0
 17099 00c4 182083E5 		str	r2, [r3, #24]
 17100 00c8 0F0000EA 		b	.L1152
 17101              	.L1149:
7009:../../Source/Kernel/rme_kernel.c ****     }
7010:../../Source/Kernel/rme_kernel.c ****     else
7011:../../Source/Kernel/rme_kernel.c ****     {
7012:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7013:../../Source/Kernel/rme_kernel.c **** 
7014:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, or nobody blocked.
7015:../../Source/Kernel/rme_kernel.c ****          * We just faa the counter value and return. */
7016:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Cap_Sig->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 17102              		.loc 1 7016 12
 17103 00cc 10301BE5 		ldr	r3, [fp, #-16]
 17104 00d0 143083E2 		add	r3, r3, #20
 17105 00d4 0110A0E3 		mov	r1, #1
 17106 00d8 0300A0E1 		mov	r0, r3
 17107 00dc FEFFFFEB 		bl	_RME_Fetch_Add_Single
 17108 00e0 0030A0E1 		mov	r3, r0
 17109              		.loc 1 7016 11
 17110 00e4 0A0173E3 		cmn	r3, #-2147483646
 17111 00e8 0700009A 		bls	.L1152
7017:../../Source/Kernel/rme_kernel.c ****         {
7018:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7019:../../Source/Kernel/rme_kernel.c **** 
7020:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Cap_Sig->Sig_Num),-1);
 17112              		.loc 1 7020 13
 17113 00ec 10301BE5 		ldr	r3, [fp, #-16]
 17114 00f0 143083E2 		add	r3, r3, #20
 17115 00f4 0010E0E3 		mvn	r1, #0
 17116 00f8 0300A0E1 		mov	r0, r3
 17117 00fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
7021:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 17118              		.loc 1 7021 20
 17119 0100 D13E0FE3 		movw	r3, #65233
 17120 0104 FF3F4FE3 		movt	r3, 65535
 17121 0108 000000EA 		b	.L1153
 17122              	.L1152:
7022:../../Source/Kernel/rme_kernel.c ****         }
7023:../../Source/Kernel/rme_kernel.c ****         else
7024:../../Source/Kernel/rme_kernel.c ****         {
7025:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7026:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7027:../../Source/Kernel/rme_kernel.c ****         }
7028:../../Source/Kernel/rme_kernel.c ****     }
7029:../../Source/Kernel/rme_kernel.c **** 
7030:../../Source/Kernel/rme_kernel.c ****     return 0;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 425


 17123              		.loc 1 7030 12
 17124 010c 0030A0E3 		mov	r3, #0
 17125              	.L1153:
7031:../../Source/Kernel/rme_kernel.c **** }
 17126              		.loc 1 7031 1
 17127 0110 0300A0E1 		mov	r0, r3
 17128 0114 04D04BE2 		sub	sp, fp, #4
 17129              		.cfi_def_cfa 13, 8
 17130              		@ sp needed
 17131 0118 0088BDE8 		pop	{fp, pc}
 17132              		.cfi_endproc
 17133              	.LFE69:
 17135              		.section	.text._RME_Sig_Snd,"ax",%progbits
 17136              		.align	2
 17137              		.syntax unified
 17138              		.arm
 17140              	_RME_Sig_Snd:
 17141              	.LFB70:
7032:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_Snd ************************************************/
7033:../../Source/Kernel/rme_kernel.c **** 
7034:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Snd ******************************************************
7035:../../Source/Kernel/rme_kernel.c **** Description : Try to send to a signal endpoint. This system call can cause
7036:../../Source/Kernel/rme_kernel.c ****               a potential context switch.
7037:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7038:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7039:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7040:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7041:../../Source/Kernel/rme_kernel.c **** Output      : None.
7042:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7043:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7044:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Snd(struct RME_Cap_Cpt* Cpt, 
7045:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7046:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
7047:../../Source/Kernel/rme_kernel.c **** {
 17142              		.loc 1 7047 1
 17143              		.cfi_startproc
 17144              		@ args = 0, pretend = 0, frame = 40
 17145              		@ frame_needed = 1, uses_anonymous_args = 0
 17146 0000 00482DE9 		push	{fp, lr}
 17147              		.cfi_def_cfa_offset 8
 17148              		.cfi_offset 11, -8
 17149              		.cfi_offset 14, -4
 17150 0004 04B08DE2 		add	fp, sp, #4
 17151              		.cfi_def_cfa 11, 4
 17152 0008 28D04DE2 		sub	sp, sp, #40
 17153 000c 20000BE5 		str	r0, [fp, #-32]
 17154 0010 24100BE5 		str	r1, [fp, #-36]
 17155 0014 28200BE5 		str	r2, [fp, #-40]
7048:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7049:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7050:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Rcv;
7051:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7052:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7054:../../Source/Kernel/rme_kernel.c ****     
7055:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7056:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 426


 17156              		.loc 1 7056 5
 17157 0018 28301BE5 		ldr	r3, [fp, #-40]
 17158 001c 803003E2 		and	r3, r3, #128
 17159 0020 000053E3 		cmp	r3, #0
 17160 0024 1D00001A 		bne	.L1155
 17161              		.loc 1 7056 5 is_stmt 0 discriminator 1
 17162 0028 20301BE5 		ldr	r3, [fp, #-32]
 17163 002c 142093E5 		ldr	r2, [r3, #20]
 17164 0030 28301BE5 		ldr	r3, [fp, #-40]
 17165 0034 030052E1 		cmp	r2, r3
 17166 0038 0100008A 		bhi	.L1156
 17167              		.loc 1 7056 5 discriminator 3
 17168 003c 0230E0E3 		mvn	r3, #2
 17169 0040 B20000EA 		b	.L1157
 17170              	.L1156:
 17171              		.loc 1 7056 5 discriminator 4
 17172 0044 28301BE5 		ldr	r3, [fp, #-40]
 17173 0048 8322A0E1 		lsl	r2, r3, #5
 17174 004c 20301BE5 		ldr	r3, [fp, #-32]
 17175 0050 0C3093E5 		ldr	r3, [r3, #12]
 17176 0054 033082E0 		add	r3, r2, r3
 17177 0058 08300BE5 		str	r3, [fp, #-8]
 17178 005c 08301BE5 		ldr	r3, [fp, #-8]
 17179 0060 0300A0E1 		mov	r0, r3
 17180 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17181 0068 10000BE5 		str	r0, [fp, #-16]
 17182 006c 10301BE5 		ldr	r3, [fp, #-16]
 17183 0070 2338A0E1 		lsr	r3, r3, #16
 17184 0074 7330EFE6 		uxtb	r3, r3
 17185 0078 020053E3 		cmp	r3, #2
 17186 007c 0100001A 		bne	.L1158
 17187              		.loc 1 7056 5 discriminator 5
 17188 0080 0830E0E3 		mvn	r3, #8
 17189 0084 A10000EA 		b	.L1157
 17190              	.L1158:
 17191              		.loc 1 7056 5 discriminator 6
 17192 0088 10301BE5 		ldr	r3, [fp, #-16]
 17193 008c 233CA0E1 		lsr	r3, r3, #24
 17194 0090 080053E3 		cmp	r3, #8
 17195 0094 4100000A 		beq	.L1159
 17196              		.loc 1 7056 5 discriminator 7
 17197 0098 0130E0E3 		mvn	r3, #1
 17198 009c 9B0000EA 		b	.L1157
 17199              	.L1155:
 17200              		.loc 1 7056 5 discriminator 2
 17201 00a0 28301BE5 		ldr	r3, [fp, #-40]
 17202 00a4 2324A0E1 		lsr	r2, r3, #8
 17203 00a8 20301BE5 		ldr	r3, [fp, #-32]
 17204 00ac 143093E5 		ldr	r3, [r3, #20]
 17205 00b0 030052E1 		cmp	r2, r3
 17206 00b4 0100003A 		bcc	.L1160
 17207              		.loc 1 7056 5 discriminator 8
 17208 00b8 0230E0E3 		mvn	r3, #2
 17209 00bc 930000EA 		b	.L1157
 17210              	.L1160:
 17211              		.loc 1 7056 5 discriminator 9
 17212 00c0 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 427


 17213 00c4 2334A0E1 		lsr	r3, r3, #8
 17214 00c8 8322A0E1 		lsl	r2, r3, #5
 17215 00cc 20301BE5 		ldr	r3, [fp, #-32]
 17216 00d0 0C3093E5 		ldr	r3, [r3, #12]
 17217 00d4 033082E0 		add	r3, r2, r3
 17218 00d8 08300BE5 		str	r3, [fp, #-8]
 17219 00dc 08301BE5 		ldr	r3, [fp, #-8]
 17220 00e0 0300A0E1 		mov	r0, r3
 17221 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17222 00e8 10000BE5 		str	r0, [fp, #-16]
 17223 00ec 10301BE5 		ldr	r3, [fp, #-16]
 17224 00f0 2338A0E1 		lsr	r3, r3, #16
 17225 00f4 7330EFE6 		uxtb	r3, r3
 17226 00f8 020053E3 		cmp	r3, #2
 17227 00fc 0100001A 		bne	.L1161
 17228              		.loc 1 7056 5 discriminator 10
 17229 0100 0830E0E3 		mvn	r3, #8
 17230 0104 810000EA 		b	.L1157
 17231              	.L1161:
 17232              		.loc 1 7056 5 discriminator 11
 17233 0108 10301BE5 		ldr	r3, [fp, #-16]
 17234 010c 233CA0E1 		lsr	r3, r3, #24
 17235 0110 030053E3 		cmp	r3, #3
 17236 0114 0100000A 		beq	.L1162
 17237              		.loc 1 7056 5 discriminator 12
 17238 0118 0130E0E3 		mvn	r3, #1
 17239 011c 7B0000EA 		b	.L1157
 17240              	.L1162:
 17241              		.loc 1 7056 5 discriminator 13
 17242 0120 28301BE5 		ldr	r3, [fp, #-40]
 17243 0124 7F2003E2 		and	r2, r3, #127
 17244 0128 08301BE5 		ldr	r3, [fp, #-8]
 17245 012c 143093E5 		ldr	r3, [r3, #20]
 17246 0130 030052E1 		cmp	r2, r3
 17247 0134 0100003A 		bcc	.L1163
 17248              		.loc 1 7056 5 discriminator 14
 17249 0138 0230E0E3 		mvn	r3, #2
 17250 013c 730000EA 		b	.L1157
 17251              	.L1163:
 17252              		.loc 1 7056 5 discriminator 15
 17253 0140 28301BE5 		ldr	r3, [fp, #-40]
 17254 0144 7F3003E2 		and	r3, r3, #127
 17255 0148 8322A0E1 		lsl	r2, r3, #5
 17256 014c 08301BE5 		ldr	r3, [fp, #-8]
 17257 0150 0C3093E5 		ldr	r3, [r3, #12]
 17258 0154 033082E0 		add	r3, r2, r3
 17259 0158 08300BE5 		str	r3, [fp, #-8]
 17260 015c 08301BE5 		ldr	r3, [fp, #-8]
 17261 0160 0300A0E1 		mov	r0, r3
 17262 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17263 0168 10000BE5 		str	r0, [fp, #-16]
 17264 016c 10301BE5 		ldr	r3, [fp, #-16]
 17265 0170 2338A0E1 		lsr	r3, r3, #16
 17266 0174 7330EFE6 		uxtb	r3, r3
 17267 0178 020053E3 		cmp	r3, #2
 17268 017c 0100001A 		bne	.L1164
 17269              		.loc 1 7056 5 discriminator 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 428


 17270 0180 0830E0E3 		mvn	r3, #8
 17271 0184 610000EA 		b	.L1157
 17272              	.L1164:
 17273              		.loc 1 7056 5 discriminator 17
 17274 0188 10301BE5 		ldr	r3, [fp, #-16]
 17275 018c 233CA0E1 		lsr	r3, r3, #24
 17276 0190 080053E3 		cmp	r3, #8
 17277 0194 0100000A 		beq	.L1159
 17278              		.loc 1 7056 5 discriminator 18
 17279 0198 0130E0E3 		mvn	r3, #1
 17280 019c 5B0000EA 		b	.L1157
 17281              	.L1159:
7057:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7058:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7059:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SND);
 17282              		.loc 1 7059 5 is_stmt 1
 17283 01a0 08301BE5 		ldr	r3, [fp, #-8]
 17284 01a4 083093E5 		ldr	r3, [r3, #8]
 17285 01a8 013003E2 		and	r3, r3, #1
 17286 01ac 000053E3 		cmp	r3, #0
 17287 01b0 0100001A 		bne	.L1165
 17288              		.loc 1 7059 5 is_stmt 0 discriminator 1
 17289 01b4 0630E0E3 		mvn	r3, #6
 17290 01b8 540000EA 		b	.L1157
 17291              	.L1165:
7060:../../Source/Kernel/rme_kernel.c ****     
7061:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 17292              		.loc 1 7061 10 is_stmt 1
 17293 01bc 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 17294 01c0 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 17295 01c4 14300BE5 		str	r3, [fp, #-20]
7062:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 17296              		.loc 1 7062 14
 17297 01c8 08301BE5 		ldr	r3, [fp, #-8]
 17298 01cc 003093E5 		ldr	r3, [r3]
 17299 01d0 7330FFE6 		uxth	r3, r3
 17300 01d4 000053E3 		cmp	r3, #0
 17301 01d8 0200000A 		beq	.L1166
 17302              		.loc 1 7062 14 is_stmt 0 discriminator 1
 17303 01dc 08301BE5 		ldr	r3, [fp, #-8]
 17304 01e0 043093E5 		ldr	r3, [r3, #4]
 17305 01e4 000000EA 		b	.L1167
 17306              	.L1166:
 17307              		.loc 1 7062 14 discriminator 2
 17308 01e8 08301BE5 		ldr	r3, [fp, #-8]
 17309              	.L1167:
 17310              		.loc 1 7062 13 is_stmt 1 discriminator 4
 17311 01ec 18300BE5 		str	r3, [fp, #-24]
7063:../../Source/Kernel/rme_kernel.c ****     Thd_Rcv=Sig_Root->Thd;
 17312              		.loc 1 7063 12 discriminator 4
 17313 01f0 18301BE5 		ldr	r3, [fp, #-24]
 17314 01f4 183093E5 		ldr	r3, [r3, #24]
 17315 01f8 1C300BE5 		str	r3, [fp, #-28]
7064:../../Source/Kernel/rme_kernel.c **** 
7065:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7066:../../Source/Kernel/rme_kernel.c ****     if(Thd_Rcv!=RME_NULL)
 17316              		.loc 1 7066 7 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 429


 17317 01fc 1C301BE5 		ldr	r3, [fp, #-28]
 17318 0200 000053E3 		cmp	r3, #0
 17319 0204 0A00000A 		beq	.L1168
7067:../../Source/Kernel/rme_kernel.c ****     {
7068:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7069:../../Source/Kernel/rme_kernel.c **** 
7070:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Local==Local)
 17320              		.loc 1 7070 26
 17321 0208 1C301BE5 		ldr	r3, [fp, #-28]
 17322 020c 143093E5 		ldr	r3, [r3, #20]
 17323              		.loc 1 7070 11
 17324 0210 14201BE5 		ldr	r2, [fp, #-20]
 17325 0214 030052E1 		cmp	r2, r3
 17326 0218 0200001A 		bne	.L1169
7071:../../Source/Kernel/rme_kernel.c ****         {
7072:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7073:../../Source/Kernel/rme_kernel.c **** 
7074:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 17327              		.loc 1 7074 20
 17328 021c 0130A0E3 		mov	r3, #1
 17329 0220 0C300BE5 		str	r3, [fp, #-12]
 17330 0224 040000EA 		b	.L1170
 17331              	.L1169:
7075:../../Source/Kernel/rme_kernel.c ****         }
7076:../../Source/Kernel/rme_kernel.c ****         else
7077:../../Source/Kernel/rme_kernel.c ****         {
7078:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7079:../../Source/Kernel/rme_kernel.c **** 
7080:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 17332              		.loc 1 7080 20
 17333 0228 0030A0E3 		mov	r3, #0
 17334 022c 0C300BE5 		str	r3, [fp, #-12]
 17335 0230 010000EA 		b	.L1170
 17336              	.L1168:
7081:../../Source/Kernel/rme_kernel.c ****         }
7082:../../Source/Kernel/rme_kernel.c ****     }
7083:../../Source/Kernel/rme_kernel.c ****     else
7084:../../Source/Kernel/rme_kernel.c ****     {
7085:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7086:../../Source/Kernel/rme_kernel.c **** 
7087:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 17337              		.loc 1 7087 16
 17338 0234 0030A0E3 		mov	r3, #0
 17339 0238 0C300BE5 		str	r3, [fp, #-12]
 17340              	.L1170:
7088:../../Source/Kernel/rme_kernel.c ****     }
7089:../../Source/Kernel/rme_kernel.c ****     
7090:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 17341              		.loc 1 7090 7
 17342 023c 0C301BE5 		ldr	r3, [fp, #-12]
 17343 0240 000053E3 		cmp	r3, #0
 17344 0244 1D00000A 		beq	.L1171
7091:../../Source/Kernel/rme_kernel.c ****     {
7092:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7093:../../Source/Kernel/rme_kernel.c **** 
7094:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7095:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 430


 17345              		.loc 1 7095 9
 17346 0248 0010A0E3 		mov	r1, #0
 17347 024c 24001BE5 		ldr	r0, [fp, #-36]
 17348 0250 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7096:../../Source/Kernel/rme_kernel.c ****         
7097:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7098:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7099:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7100:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7101:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Rcv->Ctx.Reg->Reg),1);
 17349              		.loc 1 7101 44
 17350 0254 1C301BE5 		ldr	r3, [fp, #-28]
 17351 0258 483093E5 		ldr	r3, [r3, #72]
 17352              		.loc 1 7101 9
 17353 025c 0110A0E3 		mov	r1, #1
 17354 0260 0300A0E1 		mov	r0, r3
 17355 0264 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7102:../../Source/Kernel/rme_kernel.c ****         
7103:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7104:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Slice!=0U)
 17356              		.loc 1 7104 26
 17357 0268 1C301BE5 		ldr	r3, [fp, #-28]
 17358 026c 183093E5 		ldr	r3, [r3, #24]
 17359              		.loc 1 7104 11
 17360 0270 000053E3 		cmp	r3, #0
 17361 0274 0500000A 		beq	.L1172
7105:../../Source/Kernel/rme_kernel.c ****         {
7106:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7107:../../Source/Kernel/rme_kernel.c **** 
7108:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7109:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_READY;
 17362              		.loc 1 7109 33
 17363 0278 1C301BE5 		ldr	r3, [fp, #-28]
 17364 027c 0020A0E3 		mov	r2, #0
 17365 0280 1C2083E5 		str	r2, [r3, #28]
7110:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Rcv);
 17366              		.loc 1 7110 13
 17367 0284 1C001BE5 		ldr	r0, [fp, #-28]
 17368 0288 FEFFFFEB 		bl	_RME_Run_Ins
 17369 028c 040000EA 		b	.L1173
 17370              	.L1172:
7111:../../Source/Kernel/rme_kernel.c ****         }
7112:../../Source/Kernel/rme_kernel.c ****         else
7113:../../Source/Kernel/rme_kernel.c ****         {
7114:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7115:../../Source/Kernel/rme_kernel.c **** 
7116:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7117:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_TIMEOUT;
 17371              		.loc 1 7117 33
 17372 0290 1C301BE5 		ldr	r3, [fp, #-28]
 17373 0294 0220A0E3 		mov	r2, #2
 17374 0298 1C2083E5 		str	r2, [r3, #28]
7118:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Rcv);
 17375              		.loc 1 7118 13
 17376 029c 1C001BE5 		ldr	r0, [fp, #-28]
 17377 02a0 FEFFFFEB 		bl	_RME_Run_Notif
 17378              	.L1173:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 431


7119:../../Source/Kernel/rme_kernel.c ****         }
7120:../../Source/Kernel/rme_kernel.c ****         
7121:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread to run */
7122:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 17379              		.loc 1 7122 9
 17380 02a4 14101BE5 		ldr	r1, [fp, #-20]
 17381 02a8 24001BE5 		ldr	r0, [fp, #-36]
 17382 02ac FEFFFFEB 		bl	_RME_Kern_High
7123:../../Source/Kernel/rme_kernel.c ****         
7124:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7125:../../Source/Kernel/rme_kernel.c ****         Sig_Root->Thd=RME_NULL;
 17383              		.loc 1 7125 22
 17384 02b0 18301BE5 		ldr	r3, [fp, #-24]
 17385 02b4 0020A0E3 		mov	r2, #0
 17386 02b8 182083E5 		str	r2, [r3, #24]
 17387 02bc 120000EA 		b	.L1174
 17388              	.L1171:
7126:../../Source/Kernel/rme_kernel.c ****     }
7127:../../Source/Kernel/rme_kernel.c ****     else
7128:../../Source/Kernel/rme_kernel.c ****     {
7129:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7130:../../Source/Kernel/rme_kernel.c **** 
7131:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, we just faa and return */
7132:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Sig_Root->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 17389              		.loc 1 7132 12
 17390 02c0 18301BE5 		ldr	r3, [fp, #-24]
 17391 02c4 143083E2 		add	r3, r3, #20
 17392 02c8 0110A0E3 		mov	r1, #1
 17393 02cc 0300A0E1 		mov	r0, r3
 17394 02d0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 17395 02d4 0030A0E1 		mov	r3, r0
 17396              		.loc 1 7132 11
 17397 02d8 0A0173E3 		cmn	r3, #-2147483646
 17398 02dc 0700009A 		bls	.L1175
7133:../../Source/Kernel/rme_kernel.c ****         {
7134:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7135:../../Source/Kernel/rme_kernel.c **** 
7136:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Sig_Root->Sig_Num),-1);
 17399              		.loc 1 7136 13
 17400 02e0 18301BE5 		ldr	r3, [fp, #-24]
 17401 02e4 143083E2 		add	r3, r3, #20
 17402 02e8 0010E0E3 		mvn	r1, #0
 17403 02ec 0300A0E1 		mov	r0, r3
 17404 02f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7137:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 17405              		.loc 1 7137 20
 17406 02f4 D13E0FE3 		movw	r3, #65233
 17407 02f8 FF3F4FE3 		movt	r3, 65535
 17408 02fc 030000EA 		b	.L1157
 17409              	.L1175:
7138:../../Source/Kernel/rme_kernel.c ****         }
7139:../../Source/Kernel/rme_kernel.c ****         else
7140:../../Source/Kernel/rme_kernel.c ****         {
7141:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7142:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7143:../../Source/Kernel/rme_kernel.c ****         }
7144:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 432


7145:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7146:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 17410              		.loc 1 7146 9
 17411 0300 0010A0E3 		mov	r1, #0
 17412 0304 24001BE5 		ldr	r0, [fp, #-36]
 17413 0308 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 17414              	.L1174:
7147:../../Source/Kernel/rme_kernel.c ****     }
7148:../../Source/Kernel/rme_kernel.c **** 
7149:../../Source/Kernel/rme_kernel.c ****     return 0;
 17415              		.loc 1 7149 12
 17416 030c 0030A0E3 		mov	r3, #0
 17417              	.L1157:
7150:../../Source/Kernel/rme_kernel.c **** }
 17418              		.loc 1 7150 1
 17419 0310 0300A0E1 		mov	r0, r3
 17420 0314 04D04BE2 		sub	sp, fp, #4
 17421              		.cfi_def_cfa 13, 8
 17422              		@ sp needed
 17423 0318 0088BDE8 		pop	{fp, pc}
 17424              		.cfi_endproc
 17425              	.LFE70:
 17427              		.section	.text._RME_Sig_Rcv,"ax",%progbits
 17428              		.align	2
 17429              		.syntax unified
 17430              		.arm
 17432              	_RME_Sig_Rcv:
 17433              	.LFB71:
7151:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Snd *************************************************/
7152:../../Source/Kernel/rme_kernel.c **** 
7153:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Rcv ******************************************************
7154:../../Source/Kernel/rme_kernel.c **** Description : Try to receive from a signal endpoint. The rules for signal
7155:../../Source/Kernel/rme_kernel.c ****               endpoint receive is:
7156:../../Source/Kernel/rme_kernel.c ****               1.If a receive endpoint have many send endpoints, everyone can
7157:../../Source/Kernel/rme_kernel.c ****                 send to it, and sending to it will increase the count by 1.
7158:../../Source/Kernel/rme_kernel.c ****               2.If some thread blocks on a receive endpoint, the wakeup is only
7159:../../Source/Kernel/rme_kernel.c ****                 possible from the same core that thread is on.
7160:../../Source/Kernel/rme_kernel.c ****               3.It is not recommended to let 2 cores operate on the rcv endpoint
7161:../../Source/Kernel/rme_kernel.c ****                 simutaneously.
7162:../../Source/Kernel/rme_kernel.c ****               This system call can potentially trigger a context switch.
7163:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7164:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
7165:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7166:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7167:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Option - The receive option.
7168:../../Source/Kernel/rme_kernel.c **** Output      : None.
7169:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, a non-negative number containing the 
7170:../../Source/Kernel/rme_kernel.c ****                           number of signals received; or an error code.
7171:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7172:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Rcv(struct RME_Cap_Cpt* Cpt,
7173:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7174:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig,
7175:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Option)
7176:../../Source/Kernel/rme_kernel.c **** {
 17434              		.loc 1 7176 1
 17435              		.cfi_startproc
 17436              		@ args = 0, pretend = 0, frame = 40
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 433


 17437              		@ frame_needed = 1, uses_anonymous_args = 0
 17438 0000 00482DE9 		push	{fp, lr}
 17439              		.cfi_def_cfa_offset 8
 17440              		.cfi_offset 11, -8
 17441              		.cfi_offset 14, -4
 17442 0004 04B08DE2 		add	fp, sp, #4
 17443              		.cfi_def_cfa 11, 4
 17444 0008 28D04DE2 		sub	sp, sp, #40
 17445 000c 20000BE5 		str	r0, [fp, #-32]
 17446 0010 24100BE5 		str	r1, [fp, #-36]
 17447 0014 28200BE5 		str	r2, [fp, #-40]
 17448 0018 2C300BE5 		str	r3, [fp, #-44]
7177:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7178:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7179:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7180:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7181:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Value;
7182:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7183:../../Source/Kernel/rme_kernel.c ****     
7184:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7185:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 17449              		.loc 1 7185 5
 17450 001c 28301BE5 		ldr	r3, [fp, #-40]
 17451 0020 803003E2 		and	r3, r3, #128
 17452 0024 000053E3 		cmp	r3, #0
 17453 0028 1D00001A 		bne	.L1177
 17454              		.loc 1 7185 5 is_stmt 0 discriminator 1
 17455 002c 20301BE5 		ldr	r3, [fp, #-32]
 17456 0030 142093E5 		ldr	r2, [r3, #20]
 17457 0034 28301BE5 		ldr	r3, [fp, #-40]
 17458 0038 030052E1 		cmp	r2, r3
 17459 003c 0100008A 		bhi	.L1178
 17460              		.loc 1 7185 5 discriminator 3
 17461 0040 0230E0E3 		mvn	r3, #2
 17462 0044 FB0000EA 		b	.L1179
 17463              	.L1178:
 17464              		.loc 1 7185 5 discriminator 4
 17465 0048 28301BE5 		ldr	r3, [fp, #-40]
 17466 004c 8322A0E1 		lsl	r2, r3, #5
 17467 0050 20301BE5 		ldr	r3, [fp, #-32]
 17468 0054 0C3093E5 		ldr	r3, [r3, #12]
 17469 0058 033082E0 		add	r3, r2, r3
 17470 005c 08300BE5 		str	r3, [fp, #-8]
 17471 0060 08301BE5 		ldr	r3, [fp, #-8]
 17472 0064 0300A0E1 		mov	r0, r3
 17473 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17474 006c 0C000BE5 		str	r0, [fp, #-12]
 17475 0070 0C301BE5 		ldr	r3, [fp, #-12]
 17476 0074 2338A0E1 		lsr	r3, r3, #16
 17477 0078 7330EFE6 		uxtb	r3, r3
 17478 007c 020053E3 		cmp	r3, #2
 17479 0080 0100001A 		bne	.L1180
 17480              		.loc 1 7185 5 discriminator 5
 17481 0084 0830E0E3 		mvn	r3, #8
 17482 0088 EA0000EA 		b	.L1179
 17483              	.L1180:
 17484              		.loc 1 7185 5 discriminator 6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 434


 17485 008c 0C301BE5 		ldr	r3, [fp, #-12]
 17486 0090 233CA0E1 		lsr	r3, r3, #24
 17487 0094 080053E3 		cmp	r3, #8
 17488 0098 4100000A 		beq	.L1181
 17489              		.loc 1 7185 5 discriminator 7
 17490 009c 0130E0E3 		mvn	r3, #1
 17491 00a0 E40000EA 		b	.L1179
 17492              	.L1177:
 17493              		.loc 1 7185 5 discriminator 2
 17494 00a4 28301BE5 		ldr	r3, [fp, #-40]
 17495 00a8 2324A0E1 		lsr	r2, r3, #8
 17496 00ac 20301BE5 		ldr	r3, [fp, #-32]
 17497 00b0 143093E5 		ldr	r3, [r3, #20]
 17498 00b4 030052E1 		cmp	r2, r3
 17499 00b8 0100003A 		bcc	.L1182
 17500              		.loc 1 7185 5 discriminator 8
 17501 00bc 0230E0E3 		mvn	r3, #2
 17502 00c0 DC0000EA 		b	.L1179
 17503              	.L1182:
 17504              		.loc 1 7185 5 discriminator 9
 17505 00c4 28301BE5 		ldr	r3, [fp, #-40]
 17506 00c8 2334A0E1 		lsr	r3, r3, #8
 17507 00cc 8322A0E1 		lsl	r2, r3, #5
 17508 00d0 20301BE5 		ldr	r3, [fp, #-32]
 17509 00d4 0C3093E5 		ldr	r3, [r3, #12]
 17510 00d8 033082E0 		add	r3, r2, r3
 17511 00dc 08300BE5 		str	r3, [fp, #-8]
 17512 00e0 08301BE5 		ldr	r3, [fp, #-8]
 17513 00e4 0300A0E1 		mov	r0, r3
 17514 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17515 00ec 0C000BE5 		str	r0, [fp, #-12]
 17516 00f0 0C301BE5 		ldr	r3, [fp, #-12]
 17517 00f4 2338A0E1 		lsr	r3, r3, #16
 17518 00f8 7330EFE6 		uxtb	r3, r3
 17519 00fc 020053E3 		cmp	r3, #2
 17520 0100 0100001A 		bne	.L1183
 17521              		.loc 1 7185 5 discriminator 10
 17522 0104 0830E0E3 		mvn	r3, #8
 17523 0108 CA0000EA 		b	.L1179
 17524              	.L1183:
 17525              		.loc 1 7185 5 discriminator 11
 17526 010c 0C301BE5 		ldr	r3, [fp, #-12]
 17527 0110 233CA0E1 		lsr	r3, r3, #24
 17528 0114 030053E3 		cmp	r3, #3
 17529 0118 0100000A 		beq	.L1184
 17530              		.loc 1 7185 5 discriminator 12
 17531 011c 0130E0E3 		mvn	r3, #1
 17532 0120 C40000EA 		b	.L1179
 17533              	.L1184:
 17534              		.loc 1 7185 5 discriminator 13
 17535 0124 28301BE5 		ldr	r3, [fp, #-40]
 17536 0128 7F2003E2 		and	r2, r3, #127
 17537 012c 08301BE5 		ldr	r3, [fp, #-8]
 17538 0130 143093E5 		ldr	r3, [r3, #20]
 17539 0134 030052E1 		cmp	r2, r3
 17540 0138 0100003A 		bcc	.L1185
 17541              		.loc 1 7185 5 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 435


 17542 013c 0230E0E3 		mvn	r3, #2
 17543 0140 BC0000EA 		b	.L1179
 17544              	.L1185:
 17545              		.loc 1 7185 5 discriminator 15
 17546 0144 28301BE5 		ldr	r3, [fp, #-40]
 17547 0148 7F3003E2 		and	r3, r3, #127
 17548 014c 8322A0E1 		lsl	r2, r3, #5
 17549 0150 08301BE5 		ldr	r3, [fp, #-8]
 17550 0154 0C3093E5 		ldr	r3, [r3, #12]
 17551 0158 033082E0 		add	r3, r2, r3
 17552 015c 08300BE5 		str	r3, [fp, #-8]
 17553 0160 08301BE5 		ldr	r3, [fp, #-8]
 17554 0164 0300A0E1 		mov	r0, r3
 17555 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17556 016c 0C000BE5 		str	r0, [fp, #-12]
 17557 0170 0C301BE5 		ldr	r3, [fp, #-12]
 17558 0174 2338A0E1 		lsr	r3, r3, #16
 17559 0178 7330EFE6 		uxtb	r3, r3
 17560 017c 020053E3 		cmp	r3, #2
 17561 0180 0100001A 		bne	.L1186
 17562              		.loc 1 7185 5 discriminator 16
 17563 0184 0830E0E3 		mvn	r3, #8
 17564 0188 AA0000EA 		b	.L1179
 17565              	.L1186:
 17566              		.loc 1 7185 5 discriminator 17
 17567 018c 0C301BE5 		ldr	r3, [fp, #-12]
 17568 0190 233CA0E1 		lsr	r3, r3, #24
 17569 0194 080053E3 		cmp	r3, #8
 17570 0198 0100000A 		beq	.L1181
 17571              		.loc 1 7185 5 discriminator 18
 17572 019c 0130E0E3 		mvn	r3, #1
 17573 01a0 A40000EA 		b	.L1179
 17574              	.L1181:
7186:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7187:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7188:../../Source/Kernel/rme_kernel.c ****     switch(Option)
 17575              		.loc 1 7188 5 is_stmt 1
 17576 01a4 2C301BE5 		ldr	r3, [fp, #-44]
 17577 01a8 030053E3 		cmp	r3, #3
 17578 01ac 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 17579 01b0 1F0000EA 		b	.L1187
 17580              	.L1189:
 17581 01b4 C4010000 		.word	.L1192
 17582 01b8 E0010000 		.word	.L1191
 17583 01bc FC010000 		.word	.L1190
 17584 01c0 18020000 		.word	.L1188
 17585              	.L1192:
7189:../../Source/Kernel/rme_kernel.c ****     {
7190:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BS:
7191:../../Source/Kernel/rme_kernel.c ****         {
7192:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7193:../../Source/Kernel/rme_kernel.c **** 
7194:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BS);
 17586              		.loc 1 7194 13
 17587 01c4 08301BE5 		ldr	r3, [fp, #-8]
 17588 01c8 083093E5 		ldr	r3, [r3, #8]
 17589 01cc 023003E2 		and	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 436


 17590 01d0 000053E3 		cmp	r3, #0
 17591 01d4 1800001A 		bne	.L1214
 17592              		.loc 1 7194 13 is_stmt 0 discriminator 1
 17593 01d8 0630E0E3 		mvn	r3, #6
 17594 01dc 950000EA 		b	.L1179
 17595              	.L1191:
7195:../../Source/Kernel/rme_kernel.c ****             break;
7196:../../Source/Kernel/rme_kernel.c ****         }
7197:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BM:
7198:../../Source/Kernel/rme_kernel.c ****         {
7199:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7200:../../Source/Kernel/rme_kernel.c ****             
7201:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BM);
 17596              		.loc 1 7201 13 is_stmt 1
 17597 01e0 08301BE5 		ldr	r3, [fp, #-8]
 17598 01e4 083093E5 		ldr	r3, [r3, #8]
 17599 01e8 043003E2 		and	r3, r3, #4
 17600 01ec 000053E3 		cmp	r3, #0
 17601 01f0 1300001A 		bne	.L1215
 17602              		.loc 1 7201 13 is_stmt 0 discriminator 1
 17603 01f4 0630E0E3 		mvn	r3, #6
 17604 01f8 8E0000EA 		b	.L1179
 17605              	.L1190:
7202:../../Source/Kernel/rme_kernel.c ****             break;
7203:../../Source/Kernel/rme_kernel.c ****         }
7204:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NS:
7205:../../Source/Kernel/rme_kernel.c ****         {
7206:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7207:../../Source/Kernel/rme_kernel.c ****             
7208:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NS);
 17606              		.loc 1 7208 13 is_stmt 1
 17607 01fc 08301BE5 		ldr	r3, [fp, #-8]
 17608 0200 083093E5 		ldr	r3, [r3, #8]
 17609 0204 083003E2 		and	r3, r3, #8
 17610 0208 000053E3 		cmp	r3, #0
 17611 020c 0E00001A 		bne	.L1216
 17612              		.loc 1 7208 13 is_stmt 0 discriminator 1
 17613 0210 0630E0E3 		mvn	r3, #6
 17614 0214 870000EA 		b	.L1179
 17615              	.L1188:
7209:../../Source/Kernel/rme_kernel.c ****             break;
7210:../../Source/Kernel/rme_kernel.c ****         }
7211:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NM:
7212:../../Source/Kernel/rme_kernel.c ****         {
7213:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7214:../../Source/Kernel/rme_kernel.c ****             
7215:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NM);
 17616              		.loc 1 7215 13 is_stmt 1
 17617 0218 08301BE5 		ldr	r3, [fp, #-8]
 17618 021c 083093E5 		ldr	r3, [r3, #8]
 17619 0220 103003E2 		and	r3, r3, #16
 17620 0224 000053E3 		cmp	r3, #0
 17621 0228 0900001A 		bne	.L1217
 17622              		.loc 1 7215 13 is_stmt 0 discriminator 1
 17623 022c 0630E0E3 		mvn	r3, #6
 17624 0230 800000EA 		b	.L1179
 17625              	.L1187:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 437


7216:../../Source/Kernel/rme_kernel.c ****             break;
7217:../../Source/Kernel/rme_kernel.c ****         }
7218:../../Source/Kernel/rme_kernel.c ****         default:
7219:../../Source/Kernel/rme_kernel.c ****         {
7220:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7221:../../Source/Kernel/rme_kernel.c ****             
7222:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_ACT;
 17626              		.loc 1 7222 20 is_stmt 1
 17627 0234 4B3FE0E3 		mvn	r3, #300
 17628 0238 7E0000EA 		b	.L1179
 17629              	.L1214:
7195:../../Source/Kernel/rme_kernel.c ****         }
 17630              		.loc 1 7195 13
 17631 023c 00F020E3 		nop
 17632 0240 040000EA 		b	.L1194
 17633              	.L1215:
7202:../../Source/Kernel/rme_kernel.c ****         }
 17634              		.loc 1 7202 13
 17635 0244 00F020E3 		nop
 17636 0248 020000EA 		b	.L1194
 17637              	.L1216:
7209:../../Source/Kernel/rme_kernel.c ****         }
 17638              		.loc 1 7209 13
 17639 024c 00F020E3 		nop
 17640 0250 000000EA 		b	.L1194
 17641              	.L1217:
7216:../../Source/Kernel/rme_kernel.c ****         }
 17642              		.loc 1 7216 13
 17643 0254 00F020E3 		nop
 17644              	.L1194:
7223:../../Source/Kernel/rme_kernel.c ****         }
7224:../../Source/Kernel/rme_kernel.c ****     }
7225:../../Source/Kernel/rme_kernel.c ****     
7226:../../Source/Kernel/rme_kernel.c ****     /* Convert to root cap */
7227:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 17645              		.loc 1 7227 14
 17646 0258 08301BE5 		ldr	r3, [fp, #-8]
 17647 025c 003093E5 		ldr	r3, [r3]
 17648 0260 7330FFE6 		uxth	r3, r3
 17649 0264 000053E3 		cmp	r3, #0
 17650 0268 0200000A 		beq	.L1198
 17651              		.loc 1 7227 14 is_stmt 0 discriminator 1
 17652 026c 08301BE5 		ldr	r3, [fp, #-8]
 17653 0270 043093E5 		ldr	r3, [r3, #4]
 17654 0274 000000EA 		b	.L1199
 17655              	.L1198:
 17656              		.loc 1 7227 14 discriminator 2
 17657 0278 08301BE5 		ldr	r3, [fp, #-8]
 17658              	.L1199:
 17659              		.loc 1 7227 13 is_stmt 1 discriminator 4
 17660 027c 10300BE5 		str	r3, [fp, #-16]
7228:../../Source/Kernel/rme_kernel.c ****     
7229:../../Source/Kernel/rme_kernel.c ****     /* See if we can receive on that endpoint - if someone blocks on it, we 
7230:../../Source/Kernel/rme_kernel.c ****      * must wait for it to unblock before we can proceed. */
7231:../../Source/Kernel/rme_kernel.c ****     if(Sig_Root->Thd!=RME_NULL)
 17661              		.loc 1 7231 16 discriminator 4
 17662 0280 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 438


 17663 0284 183093E5 		ldr	r3, [r3, #24]
 17664              		.loc 1 7231 7 discriminator 4
 17665 0288 000053E3 		cmp	r3, #0
 17666 028c 0100000A 		beq	.L1200
7232:../../Source/Kernel/rme_kernel.c ****     {
7233:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7234:../../Source/Kernel/rme_kernel.c **** 
7235:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 17667              		.loc 1 7235 16
 17668 0290 4B3FE0E3 		mvn	r3, #300
 17669 0294 670000EA 		b	.L1179
 17670              	.L1200:
7236:../../Source/Kernel/rme_kernel.c ****     }
7237:../../Source/Kernel/rme_kernel.c ****     else
7238:../../Source/Kernel/rme_kernel.c ****     {
7239:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7240:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7241:../../Source/Kernel/rme_kernel.c ****     }
7242:../../Source/Kernel/rme_kernel.c ****     
7243:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 17671              		.loc 1 7243 10
 17672 0298 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 17673 029c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 17674 02a0 14300BE5 		str	r3, [fp, #-20]
7244:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 17675              		.loc 1 7244 12
 17676 02a4 14301BE5 		ldr	r3, [fp, #-20]
 17677 02a8 043093E5 		ldr	r3, [r3, #4]
 17678 02ac 18300BE5 		str	r3, [fp, #-24]
7245:../../Source/Kernel/rme_kernel.c ****     
7246:../../Source/Kernel/rme_kernel.c ****     /* Check if we trying to let a boot-time thread block on a signal, which is
7247:../../Source/Kernel/rme_kernel.c ****      * disallowed. Additionally, if the current thread have no timeslice left
7248:../../Source/Kernel/rme_kernel.c ****      * (which shouldn't happen under any circumstances), we assert and die. */
7249:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_Cur->Sched.Slice!=0U);
 17679              		.loc 1 7249 5
 17680 02b0 18301BE5 		ldr	r3, [fp, #-24]
 17681 02b4 183093E5 		ldr	r3, [r3, #24]
 17682 02b8 000053E3 		cmp	r3, #0
 17683 02bc 0800001A 		bne	.L1201
 17684              		.loc 1 7249 5 is_stmt 0 discriminator 1
 17685 02c0 003000E3 		movw	r3, #:lower16:.LC4
 17686 02c4 003040E3 		movt	r3, #:upper16:.LC4
 17687 02c8 002000E3 		movw	r2, #:lower16:.LC5
 17688 02cc 002040E3 		movt	r2, #:upper16:.LC5
 17689 02d0 511C01E3 		movw	r1, #7249
 17690 02d4 000000E3 		movw	r0, #:lower16:.LC6
 17691 02d8 000040E3 		movt	r0, #:upper16:.LC6
 17692 02dc FEFFFFEB 		bl	RME_Log
 17693              	.L1202:
 17694 02e0 FEFFFFEA 		b	.L1202
 17695              	.L1201:
7250:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 17696              		.loc 1 7250 22 is_stmt 1
 17697 02e4 18301BE5 		ldr	r3, [fp, #-24]
 17698 02e8 183093E5 		ldr	r3, [r3, #24]
 17699              		.loc 1 7250 7
 17700 02ec 060173E3 		cmn	r3, #-2147483647
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 439


 17701 02f0 0200001A 		bne	.L1203
7251:../../Source/Kernel/rme_kernel.c ****     {
7252:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7253:../../Source/Kernel/rme_kernel.c **** 
7254:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_BOOT;
 17702              		.loc 1 7254 16
 17703 02f4 CD3E0FE3 		movw	r3, #65229
 17704 02f8 FF3F4FE3 		movt	r3, 65535
 17705 02fc 4D0000EA 		b	.L1179
 17706              	.L1203:
7255:../../Source/Kernel/rme_kernel.c ****     }
7256:../../Source/Kernel/rme_kernel.c ****     else
7257:../../Source/Kernel/rme_kernel.c ****     {
7258:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7259:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7260:../../Source/Kernel/rme_kernel.c ****     }
7261:../../Source/Kernel/rme_kernel.c **** 
7262:../../Source/Kernel/rme_kernel.c ****     /* Check if there are signals available */
7263:../../Source/Kernel/rme_kernel.c ****     Old_Value=Sig_Root->Sig_Num;
 17707              		.loc 1 7263 14
 17708 0300 10301BE5 		ldr	r3, [fp, #-16]
 17709 0304 143093E5 		ldr	r3, [r3, #20]
 17710 0308 1C300BE5 		str	r3, [fp, #-28]
7264:../../Source/Kernel/rme_kernel.c ****     if(Old_Value>0U)
 17711              		.loc 1 7264 7
 17712 030c 1C301BE5 		ldr	r3, [fp, #-28]
 17713 0310 000053E3 		cmp	r3, #0
 17714 0314 2600000A 		beq	.L1204
7265:../../Source/Kernel/rme_kernel.c ****     {
7266:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7267:../../Source/Kernel/rme_kernel.c **** 
7268:../../Source/Kernel/rme_kernel.c ****         /* Can't use faa, other cores may reduce count to zero in the meantime */
7269:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_NS))
 17715              		.loc 1 7269 11
 17716 0318 2C301BE5 		ldr	r3, [fp, #-44]
 17717 031c 000053E3 		cmp	r3, #0
 17718 0320 0200000A 		beq	.L1205
 17719              		.loc 1 7269 32 discriminator 1
 17720 0324 2C301BE5 		ldr	r3, [fp, #-44]
 17721 0328 020053E3 		cmp	r3, #2
 17722 032c 0F00001A 		bne	.L1206
 17723              	.L1205:
7270:../../Source/Kernel/rme_kernel.c ****         {
7271:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7272:../../Source/Kernel/rme_kernel.c **** 
7273:../../Source/Kernel/rme_kernel.c ****             /* Try to take one */
7274:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 17724              		.loc 1 7274 16
 17725 0330 10301BE5 		ldr	r3, [fp, #-16]
 17726 0334 140083E2 		add	r0, r3, #20
 17727 0338 1C301BE5 		ldr	r3, [fp, #-28]
 17728 033c 013043E2 		sub	r3, r3, #1
 17729 0340 0320A0E1 		mov	r2, r3
 17730 0344 1C101BE5 		ldr	r1, [fp, #-28]
 17731 0348 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17732 034c 0030A0E1 		mov	r3, r0
 17733              		.loc 1 7274 15
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 440


 17734 0350 000053E3 		cmp	r3, #0
 17735 0354 0100001A 		bne	.L1207
7275:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7276:../../Source/Kernel/rme_kernel.c ****                              Old_Value-1U)==RME_CASFAIL)
7277:../../Source/Kernel/rme_kernel.c ****             {
7278:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7279:../../Source/Kernel/rme_kernel.c **** 
7280:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 17736              		.loc 1 7280 24
 17737 0358 133EE0E3 		mvn	r3, #304
 17738 035c 350000EA 		b	.L1179
 17739              	.L1207:
7281:../../Source/Kernel/rme_kernel.c ****             }
7282:../../Source/Kernel/rme_kernel.c ****             else
7283:../../Source/Kernel/rme_kernel.c ****             {
7284:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7285:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7286:../../Source/Kernel/rme_kernel.c ****             }
7287:../../Source/Kernel/rme_kernel.c ****             
7288:../../Source/Kernel/rme_kernel.c ****             /* We have taken it, now return what we have taken */
7289:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,1);
 17740              		.loc 1 7289 13
 17741 0360 0110A0E3 		mov	r1, #1
 17742 0364 24001BE5 		ldr	r0, [fp, #-36]
 17743 0368 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 17744 036c 0E0000EA 		b	.L1208
 17745              	.L1206:
7290:../../Source/Kernel/rme_kernel.c ****         }
7291:../../Source/Kernel/rme_kernel.c ****         else
7292:../../Source/Kernel/rme_kernel.c ****         {
7293:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7294:../../Source/Kernel/rme_kernel.c **** 
7295:../../Source/Kernel/rme_kernel.c ****             /* Try to take all */
7296:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 17746              		.loc 1 7296 16
 17747 0370 10301BE5 		ldr	r3, [fp, #-16]
 17748 0374 143083E2 		add	r3, r3, #20
 17749 0378 0020A0E3 		mov	r2, #0
 17750 037c 1C101BE5 		ldr	r1, [fp, #-28]
 17751 0380 0300A0E1 		mov	r0, r3
 17752 0384 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17753 0388 0030A0E1 		mov	r3, r0
 17754              		.loc 1 7296 15
 17755 038c 000053E3 		cmp	r3, #0
 17756 0390 0100001A 		bne	.L1209
7297:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7298:../../Source/Kernel/rme_kernel.c ****                              0U)==RME_CASFAIL)
7299:../../Source/Kernel/rme_kernel.c ****             {
7300:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7301:../../Source/Kernel/rme_kernel.c **** 
7302:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 17757              		.loc 1 7302 24
 17758 0394 133EE0E3 		mvn	r3, #304
 17759 0398 260000EA 		b	.L1179
 17760              	.L1209:
7303:../../Source/Kernel/rme_kernel.c ****             }
7304:../../Source/Kernel/rme_kernel.c ****             else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 441


7305:../../Source/Kernel/rme_kernel.c ****             {
7306:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7307:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7308:../../Source/Kernel/rme_kernel.c ****             }
7309:../../Source/Kernel/rme_kernel.c ****             
7310:../../Source/Kernel/rme_kernel.c ****             /* We have taken all, now return what we have taken */
7311:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,(rme_ret_t)Old_Value);
 17761              		.loc 1 7311 13
 17762 039c 1C301BE5 		ldr	r3, [fp, #-28]
 17763 03a0 0310A0E1 		mov	r1, r3
 17764 03a4 24001BE5 		ldr	r0, [fp, #-36]
 17765 03a8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 17766              	.L1208:
7312:../../Source/Kernel/rme_kernel.c ****         }
7313:../../Source/Kernel/rme_kernel.c ****         
7314:../../Source/Kernel/rme_kernel.c ****         return 0;
 17767              		.loc 1 7314 16
 17768 03ac 0030A0E3 		mov	r3, #0
 17769 03b0 200000EA 		b	.L1179
 17770              	.L1204:
7315:../../Source/Kernel/rme_kernel.c ****     }
7316:../../Source/Kernel/rme_kernel.c ****     else
7317:../../Source/Kernel/rme_kernel.c ****     {
7318:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7319:../../Source/Kernel/rme_kernel.c **** 
7320:../../Source/Kernel/rme_kernel.c ****         /* There's no value, try to block */
7321:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_BM))
 17771              		.loc 1 7321 11
 17772 03b4 2C301BE5 		ldr	r3, [fp, #-44]
 17773 03b8 000053E3 		cmp	r3, #0
 17774 03bc 0200000A 		beq	.L1210
 17775              		.loc 1 7321 32 discriminator 1
 17776 03c0 2C301BE5 		ldr	r3, [fp, #-44]
 17777 03c4 010053E3 		cmp	r3, #1
 17778 03c8 1600001A 		bne	.L1211
 17779              	.L1210:
7322:../../Source/Kernel/rme_kernel.c ****         {
7323:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7324:../../Source/Kernel/rme_kernel.c **** 
7325:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP((rme_ptr_t*)&(Sig_Root->Thd),
 17780              		.loc 1 7325 16
 17781 03cc 10301BE5 		ldr	r3, [fp, #-16]
 17782 03d0 183083E2 		add	r3, r3, #24
 17783 03d4 18201BE5 		ldr	r2, [fp, #-24]
 17784 03d8 0010A0E3 		mov	r1, #0
 17785 03dc 0300A0E1 		mov	r0, r3
 17786 03e0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17787 03e4 0030A0E1 		mov	r3, r0
 17788              		.loc 1 7325 15
 17789 03e8 000053E3 		cmp	r3, #0
 17790 03ec 0100001A 		bne	.L1212
7326:../../Source/Kernel/rme_kernel.c ****                              RME_NULL,
7327:../../Source/Kernel/rme_kernel.c ****                              (rme_ptr_t)Thd_Cur)==RME_CASFAIL)
7328:../../Source/Kernel/rme_kernel.c ****             {
7329:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7330:../../Source/Kernel/rme_kernel.c **** 
7331:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 442


 17791              		.loc 1 7331 24
 17792 03f0 133EE0E3 		mvn	r3, #304
 17793 03f4 0F0000EA 		b	.L1179
 17794              	.L1212:
7332:../../Source/Kernel/rme_kernel.c ****             }
7333:../../Source/Kernel/rme_kernel.c ****             else
7334:../../Source/Kernel/rme_kernel.c ****             {
7335:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7336:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7337:../../Source/Kernel/rme_kernel.c ****             }
7338:../../Source/Kernel/rme_kernel.c **** 
7339:../../Source/Kernel/rme_kernel.c ****             /* Now we block our current thread. No need to set any return value
7340:../../Source/Kernel/rme_kernel.c ****              * to the register set here, because we do not yet know how many
7341:../../Source/Kernel/rme_kernel.c ****              * signals will be there when the thread unblocks. The unblocking
7342:../../Source/Kernel/rme_kernel.c ****              * does not need an option so we don't keep that; we always treat
7343:../../Source/Kernel/rme_kernel.c ****              * it as single receive when we unblock anyway. */
7344:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Signal=Sig_Root;
 17795              		.loc 1 7344 34
 17796 03f8 18301BE5 		ldr	r3, [fp, #-24]
 17797 03fc 10201BE5 		ldr	r2, [fp, #-16]
 17798 0400 282083E5 		str	r2, [r3, #40]
7345:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_BLOCKED;
 17799              		.loc 1 7345 33
 17800 0404 18301BE5 		ldr	r3, [fp, #-24]
 17801 0408 0120A0E3 		mov	r2, #1
 17802 040c 1C2083E5 		str	r2, [r3, #28]
7346:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 17803              		.loc 1 7346 13
 17804 0410 18001BE5 		ldr	r0, [fp, #-24]
 17805 0414 FEFFFFEB 		bl	_RME_Run_Del
7347:../../Source/Kernel/rme_kernel.c ****             
7348:../../Source/Kernel/rme_kernel.c ****             /* Pick the highest priority thread to run */
7349:../../Source/Kernel/rme_kernel.c ****             _RME_Kern_High(Reg,Local);
 17806              		.loc 1 7349 13
 17807 0418 14101BE5 		ldr	r1, [fp, #-20]
 17808 041c 24001BE5 		ldr	r0, [fp, #-36]
 17809 0420 FEFFFFEB 		bl	_RME_Kern_High
 17810 0424 020000EA 		b	.L1213
 17811              	.L1211:
7350:../../Source/Kernel/rme_kernel.c ****         }
7351:../../Source/Kernel/rme_kernel.c ****         else
7352:../../Source/Kernel/rme_kernel.c ****         {
7353:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7354:../../Source/Kernel/rme_kernel.c **** 
7355:../../Source/Kernel/rme_kernel.c ****             /* We have taken nothing but the system call is successful anyway */
7356:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,0);
 17812              		.loc 1 7356 13
 17813 0428 0010A0E3 		mov	r1, #0
 17814 042c 24001BE5 		ldr	r0, [fp, #-36]
 17815 0430 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 17816              	.L1213:
7357:../../Source/Kernel/rme_kernel.c ****         }
7358:../../Source/Kernel/rme_kernel.c ****     }
7359:../../Source/Kernel/rme_kernel.c ****     
7360:../../Source/Kernel/rme_kernel.c ****     return 0;
 17817              		.loc 1 7360 12
 17818 0434 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 443


 17819              	.L1179:
7361:../../Source/Kernel/rme_kernel.c **** }
 17820              		.loc 1 7361 1
 17821 0438 0300A0E1 		mov	r0, r3
 17822 043c 04D04BE2 		sub	sp, fp, #4
 17823              		.cfi_def_cfa 13, 8
 17824              		@ sp needed
 17825 0440 0088BDE8 		pop	{fp, pc}
 17826              		.cfi_endproc
 17827              	.LFE71:
 17829              		.section	.text._RME_Inv_Crt,"ax",%progbits
 17830              		.align	2
 17831              		.syntax unified
 17832              		.arm
 17834              	_RME_Inv_Crt:
 17835              	.LFB72:
7362:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Rcv *************************************************/
7363:../../Source/Kernel/rme_kernel.c **** 
7364:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Crt ******************************************************
7365:../../Source/Kernel/rme_kernel.c **** Description : Create an invocation stub.
7366:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7367:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
7368:../../Source/Kernel/rme_kernel.c ****                                   for this process.
7369:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7370:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability slot that you want this newly
7371:../../Source/Kernel/rme_kernel.c ****                                   created invocation capability to be in.
7372:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7373:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
7374:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7375:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
7376:../../Source/Kernel/rme_kernel.c ****                                 invocation port kernel object.
7377:../../Source/Kernel/rme_kernel.c **** Output      : None.
7378:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7379:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7380:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Crt(struct RME_Cap_Cpt* Cpt,
7381:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7382:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
7383:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7384:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
7385:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr)
7386:../../Source/Kernel/rme_kernel.c **** {
 17836              		.loc 1 7386 1
 17837              		.cfi_startproc
 17838              		@ args = 8, pretend = 0, frame = 48
 17839              		@ frame_needed = 1, uses_anonymous_args = 0
 17840 0000 00482DE9 		push	{fp, lr}
 17841              		.cfi_def_cfa_offset 8
 17842              		.cfi_offset 11, -8
 17843              		.cfi_offset 14, -4
 17844 0004 04B08DE2 		add	fp, sp, #4
 17845              		.cfi_def_cfa 11, 4
 17846 0008 30D04DE2 		sub	sp, sp, #48
 17847 000c 28000BE5 		str	r0, [fp, #-40]
 17848 0010 2C100BE5 		str	r1, [fp, #-44]
 17849 0014 30200BE5 		str	r2, [fp, #-48]
 17850 0018 34300BE5 		str	r3, [fp, #-52]
7387:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 444


7388:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
7389:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
7390:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Crt;
7391:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
7392:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7393:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7394:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
7395:../../Source/Kernel/rme_kernel.c ****     
7396:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
7397:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17851              		.loc 1 7397 5
 17852 001c 2C301BE5 		ldr	r3, [fp, #-44]
 17853 0020 803003E2 		and	r3, r3, #128
 17854 0024 000053E3 		cmp	r3, #0
 17855 0028 1D00001A 		bne	.L1219
 17856              		.loc 1 7397 5 is_stmt 0 discriminator 1
 17857 002c 28301BE5 		ldr	r3, [fp, #-40]
 17858 0030 142093E5 		ldr	r2, [r3, #20]
 17859 0034 2C301BE5 		ldr	r3, [fp, #-44]
 17860 0038 030052E1 		cmp	r2, r3
 17861 003c 0100008A 		bhi	.L1220
 17862              		.loc 1 7397 5 discriminator 3
 17863 0040 0230E0E3 		mvn	r3, #2
 17864 0044 9E0100EA 		b	.L1221
 17865              	.L1220:
 17866              		.loc 1 7397 5 discriminator 4
 17867 0048 2C301BE5 		ldr	r3, [fp, #-44]
 17868 004c 8322A0E1 		lsl	r2, r3, #5
 17869 0050 28301BE5 		ldr	r3, [fp, #-40]
 17870 0054 0C3093E5 		ldr	r3, [r3, #12]
 17871 0058 033082E0 		add	r3, r2, r3
 17872 005c 08300BE5 		str	r3, [fp, #-8]
 17873 0060 08301BE5 		ldr	r3, [fp, #-8]
 17874 0064 0300A0E1 		mov	r0, r3
 17875 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17876 006c 14000BE5 		str	r0, [fp, #-20]
 17877 0070 14301BE5 		ldr	r3, [fp, #-20]
 17878 0074 2338A0E1 		lsr	r3, r3, #16
 17879 0078 7330EFE6 		uxtb	r3, r3
 17880 007c 020053E3 		cmp	r3, #2
 17881 0080 0100001A 		bne	.L1222
 17882              		.loc 1 7397 5 discriminator 5
 17883 0084 0830E0E3 		mvn	r3, #8
 17884 0088 8D0100EA 		b	.L1221
 17885              	.L1222:
 17886              		.loc 1 7397 5 discriminator 6
 17887 008c 14301BE5 		ldr	r3, [fp, #-20]
 17888 0090 233CA0E1 		lsr	r3, r3, #24
 17889 0094 030053E3 		cmp	r3, #3
 17890 0098 4100000A 		beq	.L1223
 17891              		.loc 1 7397 5 discriminator 7
 17892 009c 0130E0E3 		mvn	r3, #1
 17893 00a0 870100EA 		b	.L1221
 17894              	.L1219:
 17895              		.loc 1 7397 5 discriminator 2
 17896 00a4 2C301BE5 		ldr	r3, [fp, #-44]
 17897 00a8 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 445


 17898 00ac 28301BE5 		ldr	r3, [fp, #-40]
 17899 00b0 143093E5 		ldr	r3, [r3, #20]
 17900 00b4 030052E1 		cmp	r2, r3
 17901 00b8 0100003A 		bcc	.L1224
 17902              		.loc 1 7397 5 discriminator 8
 17903 00bc 0230E0E3 		mvn	r3, #2
 17904 00c0 7F0100EA 		b	.L1221
 17905              	.L1224:
 17906              		.loc 1 7397 5 discriminator 9
 17907 00c4 2C301BE5 		ldr	r3, [fp, #-44]
 17908 00c8 2334A0E1 		lsr	r3, r3, #8
 17909 00cc 8322A0E1 		lsl	r2, r3, #5
 17910 00d0 28301BE5 		ldr	r3, [fp, #-40]
 17911 00d4 0C3093E5 		ldr	r3, [r3, #12]
 17912 00d8 033082E0 		add	r3, r2, r3
 17913 00dc 08300BE5 		str	r3, [fp, #-8]
 17914 00e0 08301BE5 		ldr	r3, [fp, #-8]
 17915 00e4 0300A0E1 		mov	r0, r3
 17916 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17917 00ec 14000BE5 		str	r0, [fp, #-20]
 17918 00f0 14301BE5 		ldr	r3, [fp, #-20]
 17919 00f4 2338A0E1 		lsr	r3, r3, #16
 17920 00f8 7330EFE6 		uxtb	r3, r3
 17921 00fc 020053E3 		cmp	r3, #2
 17922 0100 0100001A 		bne	.L1225
 17923              		.loc 1 7397 5 discriminator 10
 17924 0104 0830E0E3 		mvn	r3, #8
 17925 0108 6D0100EA 		b	.L1221
 17926              	.L1225:
 17927              		.loc 1 7397 5 discriminator 11
 17928 010c 14301BE5 		ldr	r3, [fp, #-20]
 17929 0110 233CA0E1 		lsr	r3, r3, #24
 17930 0114 030053E3 		cmp	r3, #3
 17931 0118 0100000A 		beq	.L1226
 17932              		.loc 1 7397 5 discriminator 12
 17933 011c 0130E0E3 		mvn	r3, #1
 17934 0120 670100EA 		b	.L1221
 17935              	.L1226:
 17936              		.loc 1 7397 5 discriminator 13
 17937 0124 2C301BE5 		ldr	r3, [fp, #-44]
 17938 0128 7F2003E2 		and	r2, r3, #127
 17939 012c 08301BE5 		ldr	r3, [fp, #-8]
 17940 0130 143093E5 		ldr	r3, [r3, #20]
 17941 0134 030052E1 		cmp	r2, r3
 17942 0138 0100003A 		bcc	.L1227
 17943              		.loc 1 7397 5 discriminator 14
 17944 013c 0230E0E3 		mvn	r3, #2
 17945 0140 5F0100EA 		b	.L1221
 17946              	.L1227:
 17947              		.loc 1 7397 5 discriminator 15
 17948 0144 2C301BE5 		ldr	r3, [fp, #-44]
 17949 0148 7F3003E2 		and	r3, r3, #127
 17950 014c 8322A0E1 		lsl	r2, r3, #5
 17951 0150 08301BE5 		ldr	r3, [fp, #-8]
 17952 0154 0C3093E5 		ldr	r3, [r3, #12]
 17953 0158 033082E0 		add	r3, r2, r3
 17954 015c 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 446


 17955 0160 08301BE5 		ldr	r3, [fp, #-8]
 17956 0164 0300A0E1 		mov	r0, r3
 17957 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17958 016c 14000BE5 		str	r0, [fp, #-20]
 17959 0170 14301BE5 		ldr	r3, [fp, #-20]
 17960 0174 2338A0E1 		lsr	r3, r3, #16
 17961 0178 7330EFE6 		uxtb	r3, r3
 17962 017c 020053E3 		cmp	r3, #2
 17963 0180 0100001A 		bne	.L1228
 17964              		.loc 1 7397 5 discriminator 16
 17965 0184 0830E0E3 		mvn	r3, #8
 17966 0188 4D0100EA 		b	.L1221
 17967              	.L1228:
 17968              		.loc 1 7397 5 discriminator 17
 17969 018c 14301BE5 		ldr	r3, [fp, #-20]
 17970 0190 233CA0E1 		lsr	r3, r3, #24
 17971 0194 030053E3 		cmp	r3, #3
 17972 0198 0100000A 		beq	.L1223
 17973              		.loc 1 7397 5 discriminator 18
 17974 019c 0130E0E3 		mvn	r3, #1
 17975 01a0 470100EA 		b	.L1221
 17976              	.L1223:
7398:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7399:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 17977              		.loc 1 7399 5 is_stmt 1
 17978 01a4 04309BE5 		ldr	r3, [fp, #4]
 17979 01a8 803003E2 		and	r3, r3, #128
 17980 01ac 000053E3 		cmp	r3, #0
 17981 01b0 1D00001A 		bne	.L1229
 17982              		.loc 1 7399 5 is_stmt 0 discriminator 1
 17983 01b4 28301BE5 		ldr	r3, [fp, #-40]
 17984 01b8 142093E5 		ldr	r2, [r3, #20]
 17985 01bc 04309BE5 		ldr	r3, [fp, #4]
 17986 01c0 030052E1 		cmp	r2, r3
 17987 01c4 0100008A 		bhi	.L1230
 17988              		.loc 1 7399 5 discriminator 3
 17989 01c8 0230E0E3 		mvn	r3, #2
 17990 01cc 3C0100EA 		b	.L1221
 17991              	.L1230:
 17992              		.loc 1 7399 5 discriminator 4
 17993 01d0 04309BE5 		ldr	r3, [fp, #4]
 17994 01d4 8322A0E1 		lsl	r2, r3, #5
 17995 01d8 28301BE5 		ldr	r3, [fp, #-40]
 17996 01dc 0C3093E5 		ldr	r3, [r3, #12]
 17997 01e0 033082E0 		add	r3, r2, r3
 17998 01e4 0C300BE5 		str	r3, [fp, #-12]
 17999 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 18000 01ec 0300A0E1 		mov	r0, r3
 18001 01f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18002 01f4 14000BE5 		str	r0, [fp, #-20]
 18003 01f8 14301BE5 		ldr	r3, [fp, #-20]
 18004 01fc 2338A0E1 		lsr	r3, r3, #16
 18005 0200 7330EFE6 		uxtb	r3, r3
 18006 0204 020053E3 		cmp	r3, #2
 18007 0208 0100001A 		bne	.L1231
 18008              		.loc 1 7399 5 discriminator 5
 18009 020c 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 447


 18010 0210 2B0100EA 		b	.L1221
 18011              	.L1231:
 18012              		.loc 1 7399 5 discriminator 6
 18013 0214 14301BE5 		ldr	r3, [fp, #-20]
 18014 0218 233CA0E1 		lsr	r3, r3, #24
 18015 021c 050053E3 		cmp	r3, #5
 18016 0220 4100000A 		beq	.L1232
 18017              		.loc 1 7399 5 discriminator 7
 18018 0224 0130E0E3 		mvn	r3, #1
 18019 0228 250100EA 		b	.L1221
 18020              	.L1229:
 18021              		.loc 1 7399 5 discriminator 2
 18022 022c 04309BE5 		ldr	r3, [fp, #4]
 18023 0230 2324A0E1 		lsr	r2, r3, #8
 18024 0234 28301BE5 		ldr	r3, [fp, #-40]
 18025 0238 143093E5 		ldr	r3, [r3, #20]
 18026 023c 030052E1 		cmp	r2, r3
 18027 0240 0100003A 		bcc	.L1233
 18028              		.loc 1 7399 5 discriminator 8
 18029 0244 0230E0E3 		mvn	r3, #2
 18030 0248 1D0100EA 		b	.L1221
 18031              	.L1233:
 18032              		.loc 1 7399 5 discriminator 9
 18033 024c 04309BE5 		ldr	r3, [fp, #4]
 18034 0250 2334A0E1 		lsr	r3, r3, #8
 18035 0254 8322A0E1 		lsl	r2, r3, #5
 18036 0258 28301BE5 		ldr	r3, [fp, #-40]
 18037 025c 0C3093E5 		ldr	r3, [r3, #12]
 18038 0260 033082E0 		add	r3, r2, r3
 18039 0264 0C300BE5 		str	r3, [fp, #-12]
 18040 0268 0C301BE5 		ldr	r3, [fp, #-12]
 18041 026c 0300A0E1 		mov	r0, r3
 18042 0270 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18043 0274 14000BE5 		str	r0, [fp, #-20]
 18044 0278 14301BE5 		ldr	r3, [fp, #-20]
 18045 027c 2338A0E1 		lsr	r3, r3, #16
 18046 0280 7330EFE6 		uxtb	r3, r3
 18047 0284 020053E3 		cmp	r3, #2
 18048 0288 0100001A 		bne	.L1234
 18049              		.loc 1 7399 5 discriminator 10
 18050 028c 0830E0E3 		mvn	r3, #8
 18051 0290 0B0100EA 		b	.L1221
 18052              	.L1234:
 18053              		.loc 1 7399 5 discriminator 11
 18054 0294 14301BE5 		ldr	r3, [fp, #-20]
 18055 0298 233CA0E1 		lsr	r3, r3, #24
 18056 029c 030053E3 		cmp	r3, #3
 18057 02a0 0100000A 		beq	.L1235
 18058              		.loc 1 7399 5 discriminator 12
 18059 02a4 0130E0E3 		mvn	r3, #1
 18060 02a8 050100EA 		b	.L1221
 18061              	.L1235:
 18062              		.loc 1 7399 5 discriminator 13
 18063 02ac 04309BE5 		ldr	r3, [fp, #4]
 18064 02b0 7F2003E2 		and	r2, r3, #127
 18065 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 18066 02b8 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 448


 18067 02bc 030052E1 		cmp	r2, r3
 18068 02c0 0100003A 		bcc	.L1236
 18069              		.loc 1 7399 5 discriminator 14
 18070 02c4 0230E0E3 		mvn	r3, #2
 18071 02c8 FD0000EA 		b	.L1221
 18072              	.L1236:
 18073              		.loc 1 7399 5 discriminator 15
 18074 02cc 04309BE5 		ldr	r3, [fp, #4]
 18075 02d0 7F3003E2 		and	r3, r3, #127
 18076 02d4 8322A0E1 		lsl	r2, r3, #5
 18077 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 18078 02dc 0C3093E5 		ldr	r3, [r3, #12]
 18079 02e0 033082E0 		add	r3, r2, r3
 18080 02e4 0C300BE5 		str	r3, [fp, #-12]
 18081 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 18082 02ec 0300A0E1 		mov	r0, r3
 18083 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18084 02f4 14000BE5 		str	r0, [fp, #-20]
 18085 02f8 14301BE5 		ldr	r3, [fp, #-20]
 18086 02fc 2338A0E1 		lsr	r3, r3, #16
 18087 0300 7330EFE6 		uxtb	r3, r3
 18088 0304 020053E3 		cmp	r3, #2
 18089 0308 0100001A 		bne	.L1237
 18090              		.loc 1 7399 5 discriminator 16
 18091 030c 0830E0E3 		mvn	r3, #8
 18092 0310 EB0000EA 		b	.L1221
 18093              	.L1237:
 18094              		.loc 1 7399 5 discriminator 17
 18095 0314 14301BE5 		ldr	r3, [fp, #-20]
 18096 0318 233CA0E1 		lsr	r3, r3, #24
 18097 031c 050053E3 		cmp	r3, #5
 18098 0320 0100000A 		beq	.L1232
 18099              		.loc 1 7399 5 discriminator 18
 18100 0324 0130E0E3 		mvn	r3, #1
 18101 0328 E50000EA 		b	.L1221
 18102              	.L1232:
7400:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
7401:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 18103              		.loc 1 7401 5 is_stmt 1
 18104 032c 30301BE5 		ldr	r3, [fp, #-48]
 18105 0330 803003E2 		and	r3, r3, #128
 18106 0334 000053E3 		cmp	r3, #0
 18107 0338 1D00001A 		bne	.L1238
 18108              		.loc 1 7401 5 is_stmt 0 discriminator 1
 18109 033c 28301BE5 		ldr	r3, [fp, #-40]
 18110 0340 142093E5 		ldr	r2, [r3, #20]
 18111 0344 30301BE5 		ldr	r3, [fp, #-48]
 18112 0348 030052E1 		cmp	r2, r3
 18113 034c 0100008A 		bhi	.L1239
 18114              		.loc 1 7401 5 discriminator 3
 18115 0350 0230E0E3 		mvn	r3, #2
 18116 0354 DA0000EA 		b	.L1221
 18117              	.L1239:
 18118              		.loc 1 7401 5 discriminator 4
 18119 0358 30301BE5 		ldr	r3, [fp, #-48]
 18120 035c 8322A0E1 		lsl	r2, r3, #5
 18121 0360 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 449


 18122 0364 0C3093E5 		ldr	r3, [r3, #12]
 18123 0368 033082E0 		add	r3, r2, r3
 18124 036c 10300BE5 		str	r3, [fp, #-16]
 18125 0370 10301BE5 		ldr	r3, [fp, #-16]
 18126 0374 0300A0E1 		mov	r0, r3
 18127 0378 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18128 037c 14000BE5 		str	r0, [fp, #-20]
 18129 0380 14301BE5 		ldr	r3, [fp, #-20]
 18130 0384 2338A0E1 		lsr	r3, r3, #16
 18131 0388 7330EFE6 		uxtb	r3, r3
 18132 038c 020053E3 		cmp	r3, #2
 18133 0390 0100001A 		bne	.L1240
 18134              		.loc 1 7401 5 discriminator 5
 18135 0394 0830E0E3 		mvn	r3, #8
 18136 0398 C90000EA 		b	.L1221
 18137              	.L1240:
 18138              		.loc 1 7401 5 discriminator 6
 18139 039c 14301BE5 		ldr	r3, [fp, #-20]
 18140 03a0 233CA0E1 		lsr	r3, r3, #24
 18141 03a4 020053E3 		cmp	r3, #2
 18142 03a8 4100000A 		beq	.L1241
 18143              		.loc 1 7401 5 discriminator 7
 18144 03ac 0130E0E3 		mvn	r3, #1
 18145 03b0 C30000EA 		b	.L1221
 18146              	.L1238:
 18147              		.loc 1 7401 5 discriminator 2
 18148 03b4 30301BE5 		ldr	r3, [fp, #-48]
 18149 03b8 2324A0E1 		lsr	r2, r3, #8
 18150 03bc 28301BE5 		ldr	r3, [fp, #-40]
 18151 03c0 143093E5 		ldr	r3, [r3, #20]
 18152 03c4 030052E1 		cmp	r2, r3
 18153 03c8 0100003A 		bcc	.L1242
 18154              		.loc 1 7401 5 discriminator 8
 18155 03cc 0230E0E3 		mvn	r3, #2
 18156 03d0 BB0000EA 		b	.L1221
 18157              	.L1242:
 18158              		.loc 1 7401 5 discriminator 9
 18159 03d4 30301BE5 		ldr	r3, [fp, #-48]
 18160 03d8 2334A0E1 		lsr	r3, r3, #8
 18161 03dc 8322A0E1 		lsl	r2, r3, #5
 18162 03e0 28301BE5 		ldr	r3, [fp, #-40]
 18163 03e4 0C3093E5 		ldr	r3, [r3, #12]
 18164 03e8 033082E0 		add	r3, r2, r3
 18165 03ec 10300BE5 		str	r3, [fp, #-16]
 18166 03f0 10301BE5 		ldr	r3, [fp, #-16]
 18167 03f4 0300A0E1 		mov	r0, r3
 18168 03f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18169 03fc 14000BE5 		str	r0, [fp, #-20]
 18170 0400 14301BE5 		ldr	r3, [fp, #-20]
 18171 0404 2338A0E1 		lsr	r3, r3, #16
 18172 0408 7330EFE6 		uxtb	r3, r3
 18173 040c 020053E3 		cmp	r3, #2
 18174 0410 0100001A 		bne	.L1243
 18175              		.loc 1 7401 5 discriminator 10
 18176 0414 0830E0E3 		mvn	r3, #8
 18177 0418 A90000EA 		b	.L1221
 18178              	.L1243:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 450


 18179              		.loc 1 7401 5 discriminator 11
 18180 041c 14301BE5 		ldr	r3, [fp, #-20]
 18181 0420 233CA0E1 		lsr	r3, r3, #24
 18182 0424 030053E3 		cmp	r3, #3
 18183 0428 0100000A 		beq	.L1244
 18184              		.loc 1 7401 5 discriminator 12
 18185 042c 0130E0E3 		mvn	r3, #1
 18186 0430 A30000EA 		b	.L1221
 18187              	.L1244:
 18188              		.loc 1 7401 5 discriminator 13
 18189 0434 30301BE5 		ldr	r3, [fp, #-48]
 18190 0438 7F2003E2 		and	r2, r3, #127
 18191 043c 10301BE5 		ldr	r3, [fp, #-16]
 18192 0440 143093E5 		ldr	r3, [r3, #20]
 18193 0444 030052E1 		cmp	r2, r3
 18194 0448 0100003A 		bcc	.L1245
 18195              		.loc 1 7401 5 discriminator 14
 18196 044c 0230E0E3 		mvn	r3, #2
 18197 0450 9B0000EA 		b	.L1221
 18198              	.L1245:
 18199              		.loc 1 7401 5 discriminator 15
 18200 0454 30301BE5 		ldr	r3, [fp, #-48]
 18201 0458 7F3003E2 		and	r3, r3, #127
 18202 045c 8322A0E1 		lsl	r2, r3, #5
 18203 0460 10301BE5 		ldr	r3, [fp, #-16]
 18204 0464 0C3093E5 		ldr	r3, [r3, #12]
 18205 0468 033082E0 		add	r3, r2, r3
 18206 046c 10300BE5 		str	r3, [fp, #-16]
 18207 0470 10301BE5 		ldr	r3, [fp, #-16]
 18208 0474 0300A0E1 		mov	r0, r3
 18209 0478 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18210 047c 14000BE5 		str	r0, [fp, #-20]
 18211 0480 14301BE5 		ldr	r3, [fp, #-20]
 18212 0484 2338A0E1 		lsr	r3, r3, #16
 18213 0488 7330EFE6 		uxtb	r3, r3
 18214 048c 020053E3 		cmp	r3, #2
 18215 0490 0100001A 		bne	.L1246
 18216              		.loc 1 7401 5 discriminator 16
 18217 0494 0830E0E3 		mvn	r3, #8
 18218 0498 890000EA 		b	.L1221
 18219              	.L1246:
 18220              		.loc 1 7401 5 discriminator 17
 18221 049c 14301BE5 		ldr	r3, [fp, #-20]
 18222 04a0 233CA0E1 		lsr	r3, r3, #24
 18223 04a4 020053E3 		cmp	r3, #2
 18224 04a8 0100000A 		beq	.L1241
 18225              		.loc 1 7401 5 discriminator 18
 18226 04ac 0130E0E3 		mvn	r3, #1
 18227 04b0 830000EA 		b	.L1221
 18228              	.L1241:
7402:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
7403:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
7404:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 18229              		.loc 1 7404 5 is_stmt 1
 18230 04b4 08301BE5 		ldr	r3, [fp, #-8]
 18231 04b8 083093E5 		ldr	r3, [r3, #8]
 18232 04bc 013003E2 		and	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 451


 18233 04c0 000053E3 		cmp	r3, #0
 18234 04c4 0100001A 		bne	.L1247
 18235              		.loc 1 7404 5 is_stmt 0 discriminator 1
 18236 04c8 0630E0E3 		mvn	r3, #6
 18237 04cc 7C0000EA 		b	.L1221
 18238              	.L1247:
7405:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_INV);
 18239              		.loc 1 7405 5 is_stmt 1
 18240 04d0 0C301BE5 		ldr	r3, [fp, #-12]
 18241 04d4 083093E5 		ldr	r3, [r3, #8]
 18242 04d8 013003E2 		and	r3, r3, #1
 18243 04dc 000053E3 		cmp	r3, #0
 18244 04e0 0100001A 		bne	.L1248
 18245              		.loc 1 7405 5 is_stmt 0 discriminator 1
 18246 04e4 0630E0E3 		mvn	r3, #6
 18247 04e8 750000EA 		b	.L1221
 18248              	.L1248:
7406:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
7407:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_INV,Raddr,Vaddr,RME_INV_SIZE);
 18249              		.loc 1 7407 5 is_stmt 1
 18250 04ec 10301BE5 		ldr	r3, [fp, #-16]
 18251 04f0 083093E5 		ldr	r3, [r3, #8]
 18252 04f4 083003E2 		and	r3, r3, #8
 18253 04f8 000053E3 		cmp	r3, #0
 18254 04fc 0100001A 		bne	.L1249
 18255              		.loc 1 7407 5 is_stmt 0 discriminator 1
 18256 0500 0630E0E3 		mvn	r3, #6
 18257 0504 6E0000EA 		b	.L1221
 18258              	.L1249:
 18259              		.loc 1 7407 5 discriminator 2
 18260 0508 10301BE5 		ldr	r3, [fp, #-16]
 18261 050c 143093E5 		ldr	r3, [r3, #20]
 18262 0510 08209BE5 		ldr	r2, [fp, #8]
 18263 0514 033082E0 		add	r3, r2, r3
 18264 0518 18300BE5 		str	r3, [fp, #-24]
 18265 051c 18201BE5 		ldr	r2, [fp, #-24]
 18266 0520 08309BE5 		ldr	r3, [fp, #8]
 18267 0524 030052E1 		cmp	r2, r3
 18268 0528 0100002A 		bcs	.L1250
 18269              		.loc 1 7407 5 discriminator 3
 18270 052c 0630E0E3 		mvn	r3, #6
 18271 0530 630000EA 		b	.L1221
 18272              	.L1250:
 18273              		.loc 1 7407 5 discriminator 4
 18274 0534 10301BE5 		ldr	r3, [fp, #-16]
 18275 0538 143093E5 		ldr	r3, [r3, #20]
 18276 053c 18201BE5 		ldr	r2, [fp, #-24]
 18277 0540 030052E1 		cmp	r2, r3
 18278 0544 0100002A 		bcs	.L1251
 18279              		.loc 1 7407 5 discriminator 5
 18280 0548 0630E0E3 		mvn	r3, #6
 18281 054c 5C0000EA 		b	.L1221
 18282              	.L1251:
 18283              		.loc 1 7407 5 discriminator 6
 18284 0550 18301BE5 		ldr	r3, [fp, #-24]
 18285 0554 250073E3 		cmn	r3, #37
 18286 0558 0100009A 		bls	.L1252
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 452


 18287              		.loc 1 7407 5 discriminator 7
 18288 055c 0630E0E3 		mvn	r3, #6
 18289 0560 570000EA 		b	.L1221
 18290              	.L1252:
 18291              		.loc 1 7407 5 discriminator 8
 18292 0564 10301BE5 		ldr	r3, [fp, #-16]
 18293 0568 182093E5 		ldr	r2, [r3, #24]
 18294 056c 18301BE5 		ldr	r3, [fp, #-24]
 18295 0570 233083E2 		add	r3, r3, #35
 18296 0574 030052E1 		cmp	r2, r3
 18297 0578 0100002A 		bcs	.L1253
 18298              		.loc 1 7407 5 discriminator 9
 18299 057c 0630E0E3 		mvn	r3, #6
 18300 0580 4F0000EA 		b	.L1221
 18301              	.L1253:
7408:../../Source/Kernel/rme_kernel.c ****     
7409:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7410:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Crt);
 18302              		.loc 1 7410 5 is_stmt 1
 18303 0584 08301BE5 		ldr	r3, [fp, #-8]
 18304 0588 142093E5 		ldr	r2, [r3, #20]
 18305 058c 34301BE5 		ldr	r3, [fp, #-52]
 18306 0590 030052E1 		cmp	r2, r3
 18307 0594 0100008A 		bhi	.L1254
 18308              		.loc 1 7410 5 is_stmt 0 discriminator 1
 18309 0598 0230E0E3 		mvn	r3, #2
 18310 059c 480000EA 		b	.L1221
 18311              	.L1254:
 18312              		.loc 1 7410 5 discriminator 2
 18313 05a0 34301BE5 		ldr	r3, [fp, #-52]
 18314 05a4 8322A0E1 		lsl	r2, r3, #5
 18315 05a8 08301BE5 		ldr	r3, [fp, #-8]
 18316 05ac 0C3093E5 		ldr	r3, [r3, #12]
 18317 05b0 033082E0 		add	r3, r2, r3
 18318 05b4 1C300BE5 		str	r3, [fp, #-28]
7411:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7412:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Inv_Crt);
 18319              		.loc 1 7412 5 is_stmt 1 discriminator 2
 18320 05b8 1C301BE5 		ldr	r3, [fp, #-28]
 18321 05bc 0128A0E3 		mov	r2, #65536
 18322 05c0 0010A0E3 		mov	r1, #0
 18323 05c4 0300A0E1 		mov	r0, r3
 18324 05c8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18325 05cc 0030A0E1 		mov	r3, r0
 18326 05d0 000053E3 		cmp	r3, #0
 18327 05d4 0100001A 		bne	.L1255
 18328              		.loc 1 7412 5 is_stmt 0 discriminator 1
 18329 05d8 0430E0E3 		mvn	r3, #4
 18330 05dc 380000EA 		b	.L1221
 18331              	.L1255:
 18332              		.loc 1 7412 5 discriminator 2
 18333 05e0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 18334 05e4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 18335 05e8 002093E5 		ldr	r2, [r3]
 18336 05ec 1C301BE5 		ldr	r3, [fp, #-28]
 18337 05f0 102083E5 		str	r2, [r3, #16]
7413:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 453


7414:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
7415:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_INV_SIZE)!=0)
 18338              		.loc 1 7415 8 is_stmt 1 discriminator 2
 18339 05f4 2410A0E3 		mov	r1, #36
 18340 05f8 18001BE5 		ldr	r0, [fp, #-24]
 18341 05fc FEFFFFEB 		bl	_RME_Kot_Mark
 18342 0600 0030A0E1 		mov	r3, r0
 18343              		.loc 1 7415 7 discriminator 2
 18344 0604 000053E3 		cmp	r3, #0
 18345 0608 0500000A 		beq	.L1256
7416:../../Source/Kernel/rme_kernel.c ****     {
7417:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7418:../../Source/Kernel/rme_kernel.c **** 
7419:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),0U);
 18346              		.loc 1 7419 9
 18347 060c 1C301BE5 		ldr	r3, [fp, #-28]
 18348 0610 0010A0E3 		mov	r1, #0
 18349 0614 0300A0E1 		mov	r0, r3
 18350 0618 FEFFFFEB 		bl	__RME_A7A_Write_Release
7420:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 18351              		.loc 1 7420 16
 18352 061c 0330E0E3 		mvn	r3, #3
 18353 0620 270000EA 		b	.L1221
 18354              	.L1256:
7421:../../Source/Kernel/rme_kernel.c ****     }
7422:../../Source/Kernel/rme_kernel.c ****     else
7423:../../Source/Kernel/rme_kernel.c ****     {
7424:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7425:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7426:../../Source/Kernel/rme_kernel.c ****     }
7427:../../Source/Kernel/rme_kernel.c ****     
7428:../../Source/Kernel/rme_kernel.c ****     /* Object init */
7429:../../Source/Kernel/rme_kernel.c ****     Invocation=(struct RME_Inv_Struct*)Vaddr;
 18355              		.loc 1 7429 15
 18356 0624 18301BE5 		ldr	r3, [fp, #-24]
 18357 0628 20300BE5 		str	r3, [fp, #-32]
7430:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 18358              		.loc 1 7430 14
 18359 062c 0C301BE5 		ldr	r3, [fp, #-12]
 18360 0630 003093E5 		ldr	r3, [r3]
 18361 0634 7330FFE6 		uxth	r3, r3
 18362 0638 000053E3 		cmp	r3, #0
 18363 063c 0200000A 		beq	.L1257
 18364              		.loc 1 7430 14 is_stmt 0 discriminator 1
 18365 0640 0C301BE5 		ldr	r3, [fp, #-12]
 18366 0644 043093E5 		ldr	r3, [r3, #4]
 18367 0648 000000EA 		b	.L1258
 18368              	.L1257:
 18369              		.loc 1 7430 14 discriminator 2
 18370 064c 0C301BE5 		ldr	r3, [fp, #-12]
 18371              	.L1258:
 18372              		.loc 1 7430 13 is_stmt 1 discriminator 4
 18373 0650 24300BE5 		str	r3, [fp, #-36]
7431:../../Source/Kernel/rme_kernel.c ****     Invocation->Prc=Prc_Root;
 18374              		.loc 1 7431 20 discriminator 4
 18375 0654 20301BE5 		ldr	r3, [fp, #-32]
 18376 0658 24201BE5 		ldr	r2, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 454


 18377 065c 082083E5 		str	r2, [r3, #8]
7432:../../Source/Kernel/rme_kernel.c ****     Invocation->Thd_Act=RME_NULL;
 18378              		.loc 1 7432 24 discriminator 4
 18379 0660 20301BE5 		ldr	r3, [fp, #-32]
 18380 0664 0020A0E3 		mov	r2, #0
 18381 0668 0C2083E5 		str	r2, [r3, #12]
7433:../../Source/Kernel/rme_kernel.c ****     /* By default we do not return on exception */
7434:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=0U;
 18382              		.loc 1 7434 27 discriminator 4
 18383 066c 20301BE5 		ldr	r3, [fp, #-32]
 18384 0670 0020A0E3 		mov	r2, #0
 18385 0674 182083E5 		str	r2, [r3, #24]
7435:../../Source/Kernel/rme_kernel.c ****     
7436:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7437:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Root_Ref=0U;
 18386              		.loc 1 7437 27 discriminator 4
 18387 0678 1C301BE5 		ldr	r3, [fp, #-28]
 18388 067c 0020A0E3 		mov	r2, #0
 18389 0680 042083E5 		str	r2, [r3, #4]
7438:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Object=Vaddr;
 18390              		.loc 1 7438 25 discriminator 4
 18391 0684 1C301BE5 		ldr	r3, [fp, #-28]
 18392 0688 18201BE5 		ldr	r2, [fp, #-24]
 18393 068c 0C2083E5 		str	r2, [r3, #12]
7439:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Flag=RME_INV_FLAG_ALL;
 18394              		.loc 1 7439 23 discriminator 4
 18395 0690 1C301BE5 		ldr	r3, [fp, #-28]
 18396 0694 0320A0E3 		mov	r2, #3
 18397 0698 082083E5 		str	r2, [r3, #8]
7440:../../Source/Kernel/rme_kernel.c ****     
7441:../../Source/Kernel/rme_kernel.c ****     /* Reference object */
7442:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref),1U);
 18398              		.loc 1 7442 5 discriminator 4
 18399 069c 24301BE5 		ldr	r3, [fp, #-36]
 18400 06a0 043083E2 		add	r3, r3, #4
 18401 06a4 0110A0E3 		mov	r1, #1
 18402 06a8 0300A0E1 		mov	r0, r3
 18403 06ac FEFFFFEB 		bl	_RME_Fetch_Add_Single
7443:../../Source/Kernel/rme_kernel.c ****     
7444:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7445:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),
 18404              		.loc 1 7445 5 discriminator 4
 18405 06b0 1C301BE5 		ldr	r3, [fp, #-28]
 18406 06b4 0714A0E3 		mov	r1, #117440512
 18407 06b8 0300A0E1 		mov	r0, r3
 18408 06bc FEFFFFEB 		bl	__RME_A7A_Write_Release
7446:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_INV,
7447:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7448:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7449:../../Source/Kernel/rme_kernel.c **** 
7450:../../Source/Kernel/rme_kernel.c ****     return 0;
 18409              		.loc 1 7450 12 discriminator 4
 18410 06c0 0030A0E3 		mov	r3, #0
 18411              	.L1221:
7451:../../Source/Kernel/rme_kernel.c **** }
 18412              		.loc 1 7451 1
 18413 06c4 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 455


 18414 06c8 04D04BE2 		sub	sp, fp, #4
 18415              		.cfi_def_cfa 13, 8
 18416              		@ sp needed
 18417 06cc 0088BDE8 		pop	{fp, pc}
 18418              		.cfi_endproc
 18419              	.LFE72:
 18421              		.section	.text._RME_Inv_Del,"ax",%progbits
 18422              		.align	2
 18423              		.syntax unified
 18424              		.arm
 18426              	_RME_Inv_Del:
 18427              	.LFB73:
7452:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Crt *************************************************/
7453:../../Source/Kernel/rme_kernel.c **** 
7454:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Del ******************************************************
7455:../../Source/Kernel/rme_kernel.c **** Description : Delete an invocation stub.
7456:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7457:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
7458:../../Source/Kernel/rme_kernel.c ****                                   delete from.
7459:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7460:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7461:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7462:../../Source/Kernel/rme_kernel.c **** Output      : None.
7463:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7464:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7465:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Del(struct RME_Cap_Cpt* Cpt,
7466:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7467:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv)
7468:../../Source/Kernel/rme_kernel.c **** {
 18428              		.loc 1 7468 1
 18429              		.cfi_startproc
 18430              		@ args = 0, pretend = 0, frame = 32
 18431              		@ frame_needed = 1, uses_anonymous_args = 0
 18432 0000 00482DE9 		push	{fp, lr}
 18433              		.cfi_def_cfa_offset 8
 18434              		.cfi_offset 11, -8
 18435              		.cfi_offset 14, -4
 18436 0004 04B08DE2 		add	fp, sp, #4
 18437              		.cfi_def_cfa 11, 4
 18438 0008 20D04DE2 		sub	sp, sp, #32
 18439 000c 18000BE5 		str	r0, [fp, #-24]
 18440 0010 1C100BE5 		str	r1, [fp, #-28]
 18441 0014 20200BE5 		str	r2, [fp, #-32]
7469:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7470:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Del;
7471:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7472:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
7473:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7474:../../Source/Kernel/rme_kernel.c ****     
7475:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7476:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 18442              		.loc 1 7476 5
 18443 0018 1C301BE5 		ldr	r3, [fp, #-28]
 18444 001c 803003E2 		and	r3, r3, #128
 18445 0020 000053E3 		cmp	r3, #0
 18446 0024 1D00001A 		bne	.L1260
 18447              		.loc 1 7476 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 456


 18448 0028 18301BE5 		ldr	r3, [fp, #-24]
 18449 002c 142093E5 		ldr	r2, [r3, #20]
 18450 0030 1C301BE5 		ldr	r3, [fp, #-28]
 18451 0034 030052E1 		cmp	r2, r3
 18452 0038 0100008A 		bhi	.L1261
 18453              		.loc 1 7476 5 discriminator 3
 18454 003c 0230E0E3 		mvn	r3, #2
 18455 0040 C80000EA 		b	.L1262
 18456              	.L1261:
 18457              		.loc 1 7476 5 discriminator 4
 18458 0044 1C301BE5 		ldr	r3, [fp, #-28]
 18459 0048 8322A0E1 		lsl	r2, r3, #5
 18460 004c 18301BE5 		ldr	r3, [fp, #-24]
 18461 0050 0C3093E5 		ldr	r3, [r3, #12]
 18462 0054 033082E0 		add	r3, r2, r3
 18463 0058 08300BE5 		str	r3, [fp, #-8]
 18464 005c 08301BE5 		ldr	r3, [fp, #-8]
 18465 0060 0300A0E1 		mov	r0, r3
 18466 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18467 0068 0C000BE5 		str	r0, [fp, #-12]
 18468 006c 0C301BE5 		ldr	r3, [fp, #-12]
 18469 0070 2338A0E1 		lsr	r3, r3, #16
 18470 0074 7330EFE6 		uxtb	r3, r3
 18471 0078 020053E3 		cmp	r3, #2
 18472 007c 0100001A 		bne	.L1263
 18473              		.loc 1 7476 5 discriminator 5
 18474 0080 0830E0E3 		mvn	r3, #8
 18475 0084 B70000EA 		b	.L1262
 18476              	.L1263:
 18477              		.loc 1 7476 5 discriminator 6
 18478 0088 0C301BE5 		ldr	r3, [fp, #-12]
 18479 008c 233CA0E1 		lsr	r3, r3, #24
 18480 0090 030053E3 		cmp	r3, #3
 18481 0094 4100000A 		beq	.L1264
 18482              		.loc 1 7476 5 discriminator 7
 18483 0098 0130E0E3 		mvn	r3, #1
 18484 009c B10000EA 		b	.L1262
 18485              	.L1260:
 18486              		.loc 1 7476 5 discriminator 2
 18487 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 18488 00a4 2324A0E1 		lsr	r2, r3, #8
 18489 00a8 18301BE5 		ldr	r3, [fp, #-24]
 18490 00ac 143093E5 		ldr	r3, [r3, #20]
 18491 00b0 030052E1 		cmp	r2, r3
 18492 00b4 0100003A 		bcc	.L1265
 18493              		.loc 1 7476 5 discriminator 8
 18494 00b8 0230E0E3 		mvn	r3, #2
 18495 00bc A90000EA 		b	.L1262
 18496              	.L1265:
 18497              		.loc 1 7476 5 discriminator 9
 18498 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 18499 00c4 2334A0E1 		lsr	r3, r3, #8
 18500 00c8 8322A0E1 		lsl	r2, r3, #5
 18501 00cc 18301BE5 		ldr	r3, [fp, #-24]
 18502 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18503 00d4 033082E0 		add	r3, r2, r3
 18504 00d8 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 457


 18505 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18506 00e0 0300A0E1 		mov	r0, r3
 18507 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18508 00e8 0C000BE5 		str	r0, [fp, #-12]
 18509 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 18510 00f0 2338A0E1 		lsr	r3, r3, #16
 18511 00f4 7330EFE6 		uxtb	r3, r3
 18512 00f8 020053E3 		cmp	r3, #2
 18513 00fc 0100001A 		bne	.L1266
 18514              		.loc 1 7476 5 discriminator 10
 18515 0100 0830E0E3 		mvn	r3, #8
 18516 0104 970000EA 		b	.L1262
 18517              	.L1266:
 18518              		.loc 1 7476 5 discriminator 11
 18519 0108 0C301BE5 		ldr	r3, [fp, #-12]
 18520 010c 233CA0E1 		lsr	r3, r3, #24
 18521 0110 030053E3 		cmp	r3, #3
 18522 0114 0100000A 		beq	.L1267
 18523              		.loc 1 7476 5 discriminator 12
 18524 0118 0130E0E3 		mvn	r3, #1
 18525 011c 910000EA 		b	.L1262
 18526              	.L1267:
 18527              		.loc 1 7476 5 discriminator 13
 18528 0120 1C301BE5 		ldr	r3, [fp, #-28]
 18529 0124 7F2003E2 		and	r2, r3, #127
 18530 0128 08301BE5 		ldr	r3, [fp, #-8]
 18531 012c 143093E5 		ldr	r3, [r3, #20]
 18532 0130 030052E1 		cmp	r2, r3
 18533 0134 0100003A 		bcc	.L1268
 18534              		.loc 1 7476 5 discriminator 14
 18535 0138 0230E0E3 		mvn	r3, #2
 18536 013c 890000EA 		b	.L1262
 18537              	.L1268:
 18538              		.loc 1 7476 5 discriminator 15
 18539 0140 1C301BE5 		ldr	r3, [fp, #-28]
 18540 0144 7F3003E2 		and	r3, r3, #127
 18541 0148 8322A0E1 		lsl	r2, r3, #5
 18542 014c 08301BE5 		ldr	r3, [fp, #-8]
 18543 0150 0C3093E5 		ldr	r3, [r3, #12]
 18544 0154 033082E0 		add	r3, r2, r3
 18545 0158 08300BE5 		str	r3, [fp, #-8]
 18546 015c 08301BE5 		ldr	r3, [fp, #-8]
 18547 0160 0300A0E1 		mov	r0, r3
 18548 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18549 0168 0C000BE5 		str	r0, [fp, #-12]
 18550 016c 0C301BE5 		ldr	r3, [fp, #-12]
 18551 0170 2338A0E1 		lsr	r3, r3, #16
 18552 0174 7330EFE6 		uxtb	r3, r3
 18553 0178 020053E3 		cmp	r3, #2
 18554 017c 0100001A 		bne	.L1269
 18555              		.loc 1 7476 5 discriminator 16
 18556 0180 0830E0E3 		mvn	r3, #8
 18557 0184 770000EA 		b	.L1262
 18558              	.L1269:
 18559              		.loc 1 7476 5 discriminator 17
 18560 0188 0C301BE5 		ldr	r3, [fp, #-12]
 18561 018c 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 458


 18562 0190 030053E3 		cmp	r3, #3
 18563 0194 0100000A 		beq	.L1264
 18564              		.loc 1 7476 5 discriminator 18
 18565 0198 0130E0E3 		mvn	r3, #1
 18566 019c 710000EA 		b	.L1262
 18567              	.L1264:
7477:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
7478:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7479:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 18568              		.loc 1 7479 5 is_stmt 1
 18569 01a0 08301BE5 		ldr	r3, [fp, #-8]
 18570 01a4 083093E5 		ldr	r3, [r3, #8]
 18571 01a8 023003E2 		and	r3, r3, #2
 18572 01ac 000053E3 		cmp	r3, #0
 18573 01b0 0100001A 		bne	.L1270
 18574              		.loc 1 7479 5 is_stmt 0 discriminator 1
 18575 01b4 0630E0E3 		mvn	r3, #6
 18576 01b8 6A0000EA 		b	.L1262
 18577              	.L1270:
7480:../../Source/Kernel/rme_kernel.c ****     
7481:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7482:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Del);
 18578              		.loc 1 7482 5 is_stmt 1
 18579 01bc 08301BE5 		ldr	r3, [fp, #-8]
 18580 01c0 142093E5 		ldr	r2, [r3, #20]
 18581 01c4 20301BE5 		ldr	r3, [fp, #-32]
 18582 01c8 030052E1 		cmp	r2, r3
 18583 01cc 0100008A 		bhi	.L1271
 18584              		.loc 1 7482 5 is_stmt 0 discriminator 1
 18585 01d0 0230E0E3 		mvn	r3, #2
 18586 01d4 630000EA 		b	.L1262
 18587              	.L1271:
 18588              		.loc 1 7482 5 discriminator 2
 18589 01d8 20301BE5 		ldr	r3, [fp, #-32]
 18590 01dc 8322A0E1 		lsl	r2, r3, #5
 18591 01e0 08301BE5 		ldr	r3, [fp, #-8]
 18592 01e4 0C3093E5 		ldr	r3, [r3, #12]
 18593 01e8 033082E0 		add	r3, r2, r3
 18594 01ec 10300BE5 		str	r3, [fp, #-16]
7483:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
7484:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Inv_Del,Type_Stat,RME_CAP_TYPE_INV);
 18595              		.loc 1 7484 5 is_stmt 1 discriminator 2
 18596 01f0 10301BE5 		ldr	r3, [fp, #-16]
 18597 01f4 0300A0E1 		mov	r0, r3
 18598 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18599 01fc 0C000BE5 		str	r0, [fp, #-12]
 18600 0200 0C301BE5 		ldr	r3, [fp, #-12]
 18601 0204 2338A0E1 		lsr	r3, r3, #16
 18602 0208 7330EFE6 		uxtb	r3, r3
 18603 020c 020053E3 		cmp	r3, #2
 18604 0210 0100000A 		beq	.L1272
 18605              		.loc 1 7484 5 is_stmt 0 discriminator 1
 18606 0214 0830E0E3 		mvn	r3, #8
 18607 0218 520000EA 		b	.L1262
 18608              	.L1272:
 18609              		.loc 1 7484 5 discriminator 2
 18610 021c 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 459


 18611 0220 233CA0E1 		lsr	r3, r3, #24
 18612 0224 070053E3 		cmp	r3, #7
 18613 0228 0100000A 		beq	.L1273
 18614              		.loc 1 7484 5 discriminator 3
 18615 022c 0130E0E3 		mvn	r3, #1
 18616 0230 4C0000EA 		b	.L1262
 18617              	.L1273:
 18618              		.loc 1 7484 5 discriminator 6
 18619 0234 10301BE5 		ldr	r3, [fp, #-16]
 18620 0238 043093E5 		ldr	r3, [r3, #4]
 18621 023c 000053E3 		cmp	r3, #0
 18622 0240 0B00000A 		beq	.L1274
 18623              		.loc 1 7484 5 discriminator 7
 18624 0244 0C301BE5 		ldr	r3, [fp, #-12]
 18625 0248 7330FFE6 		uxth	r3, r3
 18626 024c 000053E3 		cmp	r3, #0
 18627 0250 0500001A 		bne	.L1275
 18628              		.loc 1 7484 5 discriminator 9
 18629 0254 10001BE5 		ldr	r0, [fp, #-16]
 18630 0258 0C301BE5 		ldr	r3, [fp, #-12]
 18631 025c FF38C3E3 		bic	r3, r3, #16711680
 18632 0260 0320A0E1 		mov	r2, r3
 18633 0264 0C101BE5 		ldr	r1, [fp, #-12]
 18634 0268 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18635              	.L1275:
 18636              		.loc 1 7484 5 discriminator 11
 18637 026c 0530E0E3 		mvn	r3, #5
 18638 0270 3C0000EA 		b	.L1262
 18639              	.L1274:
 18640              		.loc 1 7484 5 discriminator 8
 18641 0274 0C301BE5 		ldr	r3, [fp, #-12]
 18642 0278 7330FFE6 		uxth	r3, r3
 18643 027c 000053E3 		cmp	r3, #0
 18644 0280 0800000A 		beq	.L1276
 18645              		.loc 1 7484 5 discriminator 12
 18646 0284 003000E3 		movw	r3, #:lower16:.LC4
 18647 0288 003040E3 		movt	r3, #:upper16:.LC4
 18648 028c 002000E3 		movw	r2, #:lower16:.LC5
 18649 0290 002040E3 		movt	r2, #:upper16:.LC5
 18650 0294 3C1D01E3 		movw	r1, #7484
 18651 0298 000000E3 		movw	r0, #:lower16:.LC6
 18652 029c 000040E3 		movt	r0, #:upper16:.LC6
 18653 02a0 FEFFFFEB 		bl	RME_Log
 18654              	.L1277:
 18655              		.loc 1 7484 5 discriminator 1
 18656 02a4 FEFFFFEA 		b	.L1277
 18657              	.L1276:
7485:../../Source/Kernel/rme_kernel.c ****     
7486:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation */
7487:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Del,struct RME_Inv_Struct*);
 18658              		.loc 1 7487 16 is_stmt 1
 18659 02a8 10301BE5 		ldr	r3, [fp, #-16]
 18660 02ac 0C3093E5 		ldr	r3, [r3, #12]
 18661              		.loc 1 7487 15
 18662 02b0 14300BE5 		str	r3, [fp, #-20]
7488:../../Source/Kernel/rme_kernel.c ****     
7489:../../Source/Kernel/rme_kernel.c ****     /* See if the invocation is currently being used. If yes, we cannot delete it */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 460


7490:../../Source/Kernel/rme_kernel.c ****     if(Invocation->Thd_Act!=RME_NULL)
 18663              		.loc 1 7490 18
 18664 02b4 14301BE5 		ldr	r3, [fp, #-20]
 18665 02b8 0C3093E5 		ldr	r3, [r3, #12]
 18666              		.loc 1 7490 7
 18667 02bc 000053E3 		cmp	r3, #0
 18668 02c0 0700000A 		beq	.L1278
7491:../../Source/Kernel/rme_kernel.c ****     {
7492:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7493:../../Source/Kernel/rme_kernel.c **** 
7494:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Inv_Del,Type_Stat);
 18669              		.loc 1 7494 9
 18670 02c4 10001BE5 		ldr	r0, [fp, #-16]
 18671 02c8 0C301BE5 		ldr	r3, [fp, #-12]
 18672 02cc FF38C3E3 		bic	r3, r3, #16711680
 18673 02d0 0320A0E1 		mov	r2, r3
 18674 02d4 0C101BE5 		ldr	r1, [fp, #-12]
 18675 02d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
7495:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 18676              		.loc 1 7495 16
 18677 02dc 4B3FE0E3 		mvn	r3, #300
 18678 02e0 200000EA 		b	.L1262
 18679              	.L1278:
7496:../../Source/Kernel/rme_kernel.c ****     }
7497:../../Source/Kernel/rme_kernel.c ****     else
7498:../../Source/Kernel/rme_kernel.c ****     {
7499:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7500:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7501:../../Source/Kernel/rme_kernel.c ****     }
7502:../../Source/Kernel/rme_kernel.c ****     
7503:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
7504:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Inv_Del,Type_Stat);
 18680              		.loc 1 7504 5
 18681 02e4 10301BE5 		ldr	r3, [fp, #-16]
 18682 02e8 0020A0E3 		mov	r2, #0
 18683 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 18684 02f0 0300A0E1 		mov	r0, r3
 18685 02f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18686 02f8 0030A0E1 		mov	r3, r0
 18687 02fc 000053E3 		cmp	r3, #0
 18688 0300 0100001A 		bne	.L1279
 18689              		.loc 1 7504 5 is_stmt 0 discriminator 1
 18690 0304 0030E0E3 		mvn	r3, #0
 18691 0308 160000EA 		b	.L1262
 18692              	.L1279:
7505:../../Source/Kernel/rme_kernel.c ****     
7506:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
7507:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Invocation->Prc->Head.Root_Ref), -1);
 18693              		.loc 1 7507 5 is_stmt 1
 18694 030c 14301BE5 		ldr	r3, [fp, #-20]
 18695 0310 083093E5 		ldr	r3, [r3, #8]
 18696 0314 043083E2 		add	r3, r3, #4
 18697 0318 0010E0E3 		mvn	r1, #0
 18698 031c 0300A0E1 		mov	r0, r3
 18699 0320 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7508:../../Source/Kernel/rme_kernel.c ****     
7509:../../Source/Kernel/rme_kernel.c ****     /* Try to clear the area - this must be successful */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 461


7510:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Invocation,RME_INV_SIZE)==0);
 18700              		.loc 1 7510 5
 18701 0324 14301BE5 		ldr	r3, [fp, #-20]
 18702 0328 2410A0E3 		mov	r1, #36
 18703 032c 0300A0E1 		mov	r0, r3
 18704 0330 FEFFFFEB 		bl	_RME_Kot_Erase
 18705 0334 0030A0E1 		mov	r3, r0
 18706 0338 000053E3 		cmp	r3, #0
 18707 033c 0800000A 		beq	.L1280
 18708              		.loc 1 7510 5 is_stmt 0 discriminator 1
 18709 0340 003000E3 		movw	r3, #:lower16:.LC4
 18710 0344 003040E3 		movt	r3, #:upper16:.LC4
 18711 0348 002000E3 		movw	r2, #:lower16:.LC5
 18712 034c 002040E3 		movt	r2, #:upper16:.LC5
 18713 0350 561D01E3 		movw	r1, #7510
 18714 0354 000000E3 		movw	r0, #:lower16:.LC6
 18715 0358 000040E3 		movt	r0, #:upper16:.LC6
 18716 035c FEFFFFEB 		bl	RME_Log
 18717              	.L1281:
 18718              		.loc 1 7510 5 discriminator 2
 18719 0360 FEFFFFEA 		b	.L1281
 18720              	.L1280:
7511:../../Source/Kernel/rme_kernel.c ****     
7512:../../Source/Kernel/rme_kernel.c ****     return 0;
 18721              		.loc 1 7512 12 is_stmt 1
 18722 0364 0030A0E3 		mov	r3, #0
 18723              	.L1262:
7513:../../Source/Kernel/rme_kernel.c **** }
 18724              		.loc 1 7513 1
 18725 0368 0300A0E1 		mov	r0, r3
 18726 036c 04D04BE2 		sub	sp, fp, #4
 18727              		.cfi_def_cfa 13, 8
 18728              		@ sp needed
 18729 0370 0088BDE8 		pop	{fp, pc}
 18730              		.cfi_endproc
 18731              	.LFE73:
 18733              		.section	.text._RME_Inv_Set,"ax",%progbits
 18734              		.align	2
 18735              		.syntax unified
 18736              		.arm
 18738              	_RME_Inv_Set:
 18739              	.LFB74:
7514:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Del *************************************************/
7515:../../Source/Kernel/rme_kernel.c **** 
7516:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Set ******************************************************
7517:../../Source/Kernel/rme_kernel.c **** Description : Set an invocation stub's entry point and stack. The registers will
7518:../../Source/Kernel/rme_kernel.c ****               be initialized with these contents.
7519:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7520:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7521:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7522:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry of the thread.
7523:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
7524:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc_Ret - If there is an exception in this
7525:../../Source/Kernel/rme_kernel.c ****                                      invocation, return immediately, or wait
7526:../../Source/Kernel/rme_kernel.c ****                                      for fault handling?
7527:../../Source/Kernel/rme_kernel.c ****                                      If 1, we return directly on fault.
7528:../../Source/Kernel/rme_kernel.c **** Output      : None.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 462


7529:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7530:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7531:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Set(struct RME_Cap_Cpt* Cpt,
7532:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7533:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry,
7534:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Stack,
7535:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc_Ret)
7536:../../Source/Kernel/rme_kernel.c **** {
 18740              		.loc 1 7536 1
 18741              		.cfi_startproc
 18742              		@ args = 4, pretend = 0, frame = 32
 18743              		@ frame_needed = 1, uses_anonymous_args = 0
 18744 0000 00482DE9 		push	{fp, lr}
 18745              		.cfi_def_cfa_offset 8
 18746              		.cfi_offset 11, -8
 18747              		.cfi_offset 14, -4
 18748 0004 04B08DE2 		add	fp, sp, #4
 18749              		.cfi_def_cfa 11, 4
 18750 0008 20D04DE2 		sub	sp, sp, #32
 18751 000c 18000BE5 		str	r0, [fp, #-24]
 18752 0010 1C100BE5 		str	r1, [fp, #-28]
 18753 0014 20200BE5 		str	r2, [fp, #-32]
 18754 0018 24300BE5 		str	r3, [fp, #-36]
7537:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7538:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Inv_Struct* Invocation;
7539:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7540:../../Source/Kernel/rme_kernel.c ****     
7541:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7542:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 18755              		.loc 1 7542 5
 18756 001c 1C301BE5 		ldr	r3, [fp, #-28]
 18757 0020 803003E2 		and	r3, r3, #128
 18758 0024 000053E3 		cmp	r3, #0
 18759 0028 1D00001A 		bne	.L1283
 18760              		.loc 1 7542 5 is_stmt 0 discriminator 1
 18761 002c 18301BE5 		ldr	r3, [fp, #-24]
 18762 0030 142093E5 		ldr	r2, [r3, #20]
 18763 0034 1C301BE5 		ldr	r3, [fp, #-28]
 18764 0038 030052E1 		cmp	r2, r3
 18765 003c 0100008A 		bhi	.L1284
 18766              		.loc 1 7542 5 discriminator 3
 18767 0040 0230E0E3 		mvn	r3, #2
 18768 0044 6A0000EA 		b	.L1285
 18769              	.L1284:
 18770              		.loc 1 7542 5 discriminator 4
 18771 0048 1C301BE5 		ldr	r3, [fp, #-28]
 18772 004c 8322A0E1 		lsl	r2, r3, #5
 18773 0050 18301BE5 		ldr	r3, [fp, #-24]
 18774 0054 0C3093E5 		ldr	r3, [r3, #12]
 18775 0058 033082E0 		add	r3, r2, r3
 18776 005c 08300BE5 		str	r3, [fp, #-8]
 18777 0060 08301BE5 		ldr	r3, [fp, #-8]
 18778 0064 0300A0E1 		mov	r0, r3
 18779 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18780 006c 0C000BE5 		str	r0, [fp, #-12]
 18781 0070 0C301BE5 		ldr	r3, [fp, #-12]
 18782 0074 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 463


 18783 0078 7330EFE6 		uxtb	r3, r3
 18784 007c 020053E3 		cmp	r3, #2
 18785 0080 0100001A 		bne	.L1286
 18786              		.loc 1 7542 5 discriminator 5
 18787 0084 0830E0E3 		mvn	r3, #8
 18788 0088 590000EA 		b	.L1285
 18789              	.L1286:
 18790              		.loc 1 7542 5 discriminator 6
 18791 008c 0C301BE5 		ldr	r3, [fp, #-12]
 18792 0090 233CA0E1 		lsr	r3, r3, #24
 18793 0094 070053E3 		cmp	r3, #7
 18794 0098 4100000A 		beq	.L1287
 18795              		.loc 1 7542 5 discriminator 7
 18796 009c 0130E0E3 		mvn	r3, #1
 18797 00a0 530000EA 		b	.L1285
 18798              	.L1283:
 18799              		.loc 1 7542 5 discriminator 2
 18800 00a4 1C301BE5 		ldr	r3, [fp, #-28]
 18801 00a8 2324A0E1 		lsr	r2, r3, #8
 18802 00ac 18301BE5 		ldr	r3, [fp, #-24]
 18803 00b0 143093E5 		ldr	r3, [r3, #20]
 18804 00b4 030052E1 		cmp	r2, r3
 18805 00b8 0100003A 		bcc	.L1288
 18806              		.loc 1 7542 5 discriminator 8
 18807 00bc 0230E0E3 		mvn	r3, #2
 18808 00c0 4B0000EA 		b	.L1285
 18809              	.L1288:
 18810              		.loc 1 7542 5 discriminator 9
 18811 00c4 1C301BE5 		ldr	r3, [fp, #-28]
 18812 00c8 2334A0E1 		lsr	r3, r3, #8
 18813 00cc 8322A0E1 		lsl	r2, r3, #5
 18814 00d0 18301BE5 		ldr	r3, [fp, #-24]
 18815 00d4 0C3093E5 		ldr	r3, [r3, #12]
 18816 00d8 033082E0 		add	r3, r2, r3
 18817 00dc 08300BE5 		str	r3, [fp, #-8]
 18818 00e0 08301BE5 		ldr	r3, [fp, #-8]
 18819 00e4 0300A0E1 		mov	r0, r3
 18820 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18821 00ec 0C000BE5 		str	r0, [fp, #-12]
 18822 00f0 0C301BE5 		ldr	r3, [fp, #-12]
 18823 00f4 2338A0E1 		lsr	r3, r3, #16
 18824 00f8 7330EFE6 		uxtb	r3, r3
 18825 00fc 020053E3 		cmp	r3, #2
 18826 0100 0100001A 		bne	.L1289
 18827              		.loc 1 7542 5 discriminator 10
 18828 0104 0830E0E3 		mvn	r3, #8
 18829 0108 390000EA 		b	.L1285
 18830              	.L1289:
 18831              		.loc 1 7542 5 discriminator 11
 18832 010c 0C301BE5 		ldr	r3, [fp, #-12]
 18833 0110 233CA0E1 		lsr	r3, r3, #24
 18834 0114 030053E3 		cmp	r3, #3
 18835 0118 0100000A 		beq	.L1290
 18836              		.loc 1 7542 5 discriminator 12
 18837 011c 0130E0E3 		mvn	r3, #1
 18838 0120 330000EA 		b	.L1285
 18839              	.L1290:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 464


 18840              		.loc 1 7542 5 discriminator 13
 18841 0124 1C301BE5 		ldr	r3, [fp, #-28]
 18842 0128 7F2003E2 		and	r2, r3, #127
 18843 012c 08301BE5 		ldr	r3, [fp, #-8]
 18844 0130 143093E5 		ldr	r3, [r3, #20]
 18845 0134 030052E1 		cmp	r2, r3
 18846 0138 0100003A 		bcc	.L1291
 18847              		.loc 1 7542 5 discriminator 14
 18848 013c 0230E0E3 		mvn	r3, #2
 18849 0140 2B0000EA 		b	.L1285
 18850              	.L1291:
 18851              		.loc 1 7542 5 discriminator 15
 18852 0144 1C301BE5 		ldr	r3, [fp, #-28]
 18853 0148 7F3003E2 		and	r3, r3, #127
 18854 014c 8322A0E1 		lsl	r2, r3, #5
 18855 0150 08301BE5 		ldr	r3, [fp, #-8]
 18856 0154 0C3093E5 		ldr	r3, [r3, #12]
 18857 0158 033082E0 		add	r3, r2, r3
 18858 015c 08300BE5 		str	r3, [fp, #-8]
 18859 0160 08301BE5 		ldr	r3, [fp, #-8]
 18860 0164 0300A0E1 		mov	r0, r3
 18861 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18862 016c 0C000BE5 		str	r0, [fp, #-12]
 18863 0170 0C301BE5 		ldr	r3, [fp, #-12]
 18864 0174 2338A0E1 		lsr	r3, r3, #16
 18865 0178 7330EFE6 		uxtb	r3, r3
 18866 017c 020053E3 		cmp	r3, #2
 18867 0180 0100001A 		bne	.L1292
 18868              		.loc 1 7542 5 discriminator 16
 18869 0184 0830E0E3 		mvn	r3, #8
 18870 0188 190000EA 		b	.L1285
 18871              	.L1292:
 18872              		.loc 1 7542 5 discriminator 17
 18873 018c 0C301BE5 		ldr	r3, [fp, #-12]
 18874 0190 233CA0E1 		lsr	r3, r3, #24
 18875 0194 070053E3 		cmp	r3, #7
 18876 0198 0100000A 		beq	.L1287
 18877              		.loc 1 7542 5 discriminator 18
 18878 019c 0130E0E3 		mvn	r3, #1
 18879 01a0 130000EA 		b	.L1285
 18880              	.L1287:
7543:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7544:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7545:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_SET);
 18881              		.loc 1 7545 5 is_stmt 1
 18882 01a4 08301BE5 		ldr	r3, [fp, #-8]
 18883 01a8 083093E5 		ldr	r3, [r3, #8]
 18884 01ac 013003E2 		and	r3, r3, #1
 18885 01b0 000053E3 		cmp	r3, #0
 18886 01b4 0100001A 		bne	.L1293
 18887              		.loc 1 7545 5 is_stmt 0 discriminator 1
 18888 01b8 0630E0E3 		mvn	r3, #6
 18889 01bc 0C0000EA 		b	.L1285
 18890              	.L1293:
7546:../../Source/Kernel/rme_kernel.c ****     
7547:../../Source/Kernel/rme_kernel.c ****     /* Commit the change - we do not care if the invocation is in use, it is
7548:../../Source/Kernel/rme_kernel.c ****      * the user's responsibility to guarantee the integrity of applications */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 465


7549:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 18891              		.loc 1 7549 16 is_stmt 1
 18892 01c0 08301BE5 		ldr	r3, [fp, #-8]
 18893 01c4 0C3093E5 		ldr	r3, [r3, #12]
 18894              		.loc 1 7549 15
 18895 01c8 10300BE5 		str	r3, [fp, #-16]
7550:../../Source/Kernel/rme_kernel.c ****     Invocation->Entry=Entry;
 18896              		.loc 1 7550 22
 18897 01cc 10301BE5 		ldr	r3, [fp, #-16]
 18898 01d0 20201BE5 		ldr	r2, [fp, #-32]
 18899 01d4 102083E5 		str	r2, [r3, #16]
7551:../../Source/Kernel/rme_kernel.c ****     Invocation->Stack=Stack;
 18900              		.loc 1 7551 22
 18901 01d8 10301BE5 		ldr	r3, [fp, #-16]
 18902 01dc 24201BE5 		ldr	r2, [fp, #-36]
 18903 01e0 142083E5 		str	r2, [r3, #20]
7552:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=Is_Exc_Ret;
 18904              		.loc 1 7552 27
 18905 01e4 10301BE5 		ldr	r3, [fp, #-16]
 18906 01e8 04209BE5 		ldr	r2, [fp, #4]
 18907 01ec 182083E5 		str	r2, [r3, #24]
7553:../../Source/Kernel/rme_kernel.c ****     
7554:../../Source/Kernel/rme_kernel.c ****     return 0;
 18908              		.loc 1 7554 12
 18909 01f0 0030A0E3 		mov	r3, #0
 18910              	.L1285:
7555:../../Source/Kernel/rme_kernel.c **** }
 18911              		.loc 1 7555 1
 18912 01f4 0300A0E1 		mov	r0, r3
 18913 01f8 04D04BE2 		sub	sp, fp, #4
 18914              		.cfi_def_cfa 13, 8
 18915              		@ sp needed
 18916 01fc 0088BDE8 		pop	{fp, pc}
 18917              		.cfi_endproc
 18918              	.LFE74:
 18920              		.section	.text._RME_Inv_Act,"ax",%progbits
 18921              		.align	2
 18922              		.syntax unified
 18923              		.arm
 18925              	_RME_Inv_Act:
 18926              	.LFB75:
7556:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Set *************************************************/
7557:../../Source/Kernel/rme_kernel.c **** 
7558:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Act ******************************************************
7559:../../Source/Kernel/rme_kernel.c **** Description : Call the invocation stub. One parameter is guaranteed; however, 
7560:../../Source/Kernel/rme_kernel.c ****               some platforms may provide more than that.
7561:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7562:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7563:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The invocation stub.
7564:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7565:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter for the call.
7566:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7567:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7568:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Act(struct RME_Cap_Cpt* Cpt, 
7569:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7570:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7571:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 466


7572:../../Source/Kernel/rme_kernel.c **** {
 18927              		.loc 1 7572 1
 18928              		.cfi_startproc
 18929              		@ args = 0, pretend = 0, frame = 40
 18930              		@ frame_needed = 1, uses_anonymous_args = 0
 18931 0000 00482DE9 		push	{fp, lr}
 18932              		.cfi_def_cfa_offset 8
 18933              		.cfi_offset 11, -8
 18934              		.cfi_offset 14, -4
 18935 0004 04B08DE2 		add	fp, sp, #4
 18936              		.cfi_def_cfa 11, 4
 18937 0008 30D04DE2 		sub	sp, sp, #48
 18938 000c 20000BE5 		str	r0, [fp, #-32]
 18939 0010 24100BE5 		str	r1, [fp, #-36]
 18940 0014 28200BE5 		str	r2, [fp, #-40]
 18941 0018 2C300BE5 		str	r3, [fp, #-44]
7573:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7574:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7575:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7576:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Act;
7577:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7578:../../Source/Kernel/rme_kernel.c ****     
7579:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
7580:../../Source/Kernel/rme_kernel.c ****     /* Check if the current invocation stack has reached its limit */
7581:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
7582:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Ctx.Invstk_Depth>=RME_INV_DEPTH_MAX)
7583:../../Source/Kernel/rme_kernel.c ****     {
7584:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7585:../../Source/Kernel/rme_kernel.c **** 
7586:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
7587:../../Source/Kernel/rme_kernel.c ****     }
7588:../../Source/Kernel/rme_kernel.c ****     else
7589:../../Source/Kernel/rme_kernel.c ****     {
7590:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7591:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7592:../../Source/Kernel/rme_kernel.c ****     }
7593:../../Source/Kernel/rme_kernel.c **** #endif
7594:../../Source/Kernel/rme_kernel.c **** 
7595:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7596:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 18942              		.loc 1 7596 5
 18943 001c 28301BE5 		ldr	r3, [fp, #-40]
 18944 0020 803003E2 		and	r3, r3, #128
 18945 0024 000053E3 		cmp	r3, #0
 18946 0028 1D00001A 		bne	.L1295
 18947              		.loc 1 7596 5 is_stmt 0 discriminator 1
 18948 002c 20301BE5 		ldr	r3, [fp, #-32]
 18949 0030 142093E5 		ldr	r2, [r3, #20]
 18950 0034 28301BE5 		ldr	r3, [fp, #-40]
 18951 0038 030052E1 		cmp	r2, r3
 18952 003c 0100008A 		bhi	.L1296
 18953              		.loc 1 7596 5 discriminator 3
 18954 0040 0230E0E3 		mvn	r3, #2
 18955 0044 A90000EA 		b	.L1297
 18956              	.L1296:
 18957              		.loc 1 7596 5 discriminator 4
 18958 0048 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 467


 18959 004c 8322A0E1 		lsl	r2, r3, #5
 18960 0050 20301BE5 		ldr	r3, [fp, #-32]
 18961 0054 0C3093E5 		ldr	r3, [r3, #12]
 18962 0058 033082E0 		add	r3, r2, r3
 18963 005c 08300BE5 		str	r3, [fp, #-8]
 18964 0060 08301BE5 		ldr	r3, [fp, #-8]
 18965 0064 0300A0E1 		mov	r0, r3
 18966 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18967 006c 0C000BE5 		str	r0, [fp, #-12]
 18968 0070 0C301BE5 		ldr	r3, [fp, #-12]
 18969 0074 2338A0E1 		lsr	r3, r3, #16
 18970 0078 7330EFE6 		uxtb	r3, r3
 18971 007c 020053E3 		cmp	r3, #2
 18972 0080 0100001A 		bne	.L1298
 18973              		.loc 1 7596 5 discriminator 5
 18974 0084 0830E0E3 		mvn	r3, #8
 18975 0088 980000EA 		b	.L1297
 18976              	.L1298:
 18977              		.loc 1 7596 5 discriminator 6
 18978 008c 0C301BE5 		ldr	r3, [fp, #-12]
 18979 0090 233CA0E1 		lsr	r3, r3, #24
 18980 0094 070053E3 		cmp	r3, #7
 18981 0098 4100000A 		beq	.L1299
 18982              		.loc 1 7596 5 discriminator 7
 18983 009c 0130E0E3 		mvn	r3, #1
 18984 00a0 920000EA 		b	.L1297
 18985              	.L1295:
 18986              		.loc 1 7596 5 discriminator 2
 18987 00a4 28301BE5 		ldr	r3, [fp, #-40]
 18988 00a8 2324A0E1 		lsr	r2, r3, #8
 18989 00ac 20301BE5 		ldr	r3, [fp, #-32]
 18990 00b0 143093E5 		ldr	r3, [r3, #20]
 18991 00b4 030052E1 		cmp	r2, r3
 18992 00b8 0100003A 		bcc	.L1300
 18993              		.loc 1 7596 5 discriminator 8
 18994 00bc 0230E0E3 		mvn	r3, #2
 18995 00c0 8A0000EA 		b	.L1297
 18996              	.L1300:
 18997              		.loc 1 7596 5 discriminator 9
 18998 00c4 28301BE5 		ldr	r3, [fp, #-40]
 18999 00c8 2334A0E1 		lsr	r3, r3, #8
 19000 00cc 8322A0E1 		lsl	r2, r3, #5
 19001 00d0 20301BE5 		ldr	r3, [fp, #-32]
 19002 00d4 0C3093E5 		ldr	r3, [r3, #12]
 19003 00d8 033082E0 		add	r3, r2, r3
 19004 00dc 08300BE5 		str	r3, [fp, #-8]
 19005 00e0 08301BE5 		ldr	r3, [fp, #-8]
 19006 00e4 0300A0E1 		mov	r0, r3
 19007 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19008 00ec 0C000BE5 		str	r0, [fp, #-12]
 19009 00f0 0C301BE5 		ldr	r3, [fp, #-12]
 19010 00f4 2338A0E1 		lsr	r3, r3, #16
 19011 00f8 7330EFE6 		uxtb	r3, r3
 19012 00fc 020053E3 		cmp	r3, #2
 19013 0100 0100001A 		bne	.L1301
 19014              		.loc 1 7596 5 discriminator 10
 19015 0104 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 468


 19016 0108 780000EA 		b	.L1297
 19017              	.L1301:
 19018              		.loc 1 7596 5 discriminator 11
 19019 010c 0C301BE5 		ldr	r3, [fp, #-12]
 19020 0110 233CA0E1 		lsr	r3, r3, #24
 19021 0114 030053E3 		cmp	r3, #3
 19022 0118 0100000A 		beq	.L1302
 19023              		.loc 1 7596 5 discriminator 12
 19024 011c 0130E0E3 		mvn	r3, #1
 19025 0120 720000EA 		b	.L1297
 19026              	.L1302:
 19027              		.loc 1 7596 5 discriminator 13
 19028 0124 28301BE5 		ldr	r3, [fp, #-40]
 19029 0128 7F2003E2 		and	r2, r3, #127
 19030 012c 08301BE5 		ldr	r3, [fp, #-8]
 19031 0130 143093E5 		ldr	r3, [r3, #20]
 19032 0134 030052E1 		cmp	r2, r3
 19033 0138 0100003A 		bcc	.L1303
 19034              		.loc 1 7596 5 discriminator 14
 19035 013c 0230E0E3 		mvn	r3, #2
 19036 0140 6A0000EA 		b	.L1297
 19037              	.L1303:
 19038              		.loc 1 7596 5 discriminator 15
 19039 0144 28301BE5 		ldr	r3, [fp, #-40]
 19040 0148 7F3003E2 		and	r3, r3, #127
 19041 014c 8322A0E1 		lsl	r2, r3, #5
 19042 0150 08301BE5 		ldr	r3, [fp, #-8]
 19043 0154 0C3093E5 		ldr	r3, [r3, #12]
 19044 0158 033082E0 		add	r3, r2, r3
 19045 015c 08300BE5 		str	r3, [fp, #-8]
 19046 0160 08301BE5 		ldr	r3, [fp, #-8]
 19047 0164 0300A0E1 		mov	r0, r3
 19048 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19049 016c 0C000BE5 		str	r0, [fp, #-12]
 19050 0170 0C301BE5 		ldr	r3, [fp, #-12]
 19051 0174 2338A0E1 		lsr	r3, r3, #16
 19052 0178 7330EFE6 		uxtb	r3, r3
 19053 017c 020053E3 		cmp	r3, #2
 19054 0180 0100001A 		bne	.L1304
 19055              		.loc 1 7596 5 discriminator 16
 19056 0184 0830E0E3 		mvn	r3, #8
 19057 0188 580000EA 		b	.L1297
 19058              	.L1304:
 19059              		.loc 1 7596 5 discriminator 17
 19060 018c 0C301BE5 		ldr	r3, [fp, #-12]
 19061 0190 233CA0E1 		lsr	r3, r3, #24
 19062 0194 070053E3 		cmp	r3, #7
 19063 0198 0100000A 		beq	.L1299
 19064              		.loc 1 7596 5 discriminator 18
 19065 019c 0130E0E3 		mvn	r3, #1
 19066 01a0 520000EA 		b	.L1297
 19067              	.L1299:
7597:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7598:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7599:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_ACT);
 19068              		.loc 1 7599 5 is_stmt 1
 19069 01a4 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 469


 19070 01a8 083093E5 		ldr	r3, [r3, #8]
 19071 01ac 023003E2 		and	r3, r3, #2
 19072 01b0 000053E3 		cmp	r3, #0
 19073 01b4 0100001A 		bne	.L1305
 19074              		.loc 1 7599 5 is_stmt 0 discriminator 1
 19075 01b8 0630E0E3 		mvn	r3, #6
 19076 01bc 4B0000EA 		b	.L1297
 19077              	.L1305:
7600:../../Source/Kernel/rme_kernel.c **** 
7601:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation struct */
7602:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 19078              		.loc 1 7602 16 is_stmt 1
 19079 01c0 08301BE5 		ldr	r3, [fp, #-8]
 19080 01c4 0C3093E5 		ldr	r3, [r3, #12]
 19081              		.loc 1 7602 15
 19082 01c8 10300BE5 		str	r3, [fp, #-16]
7603:../../Source/Kernel/rme_kernel.c ****     /* Check if this invocation port is already active */
7604:../../Source/Kernel/rme_kernel.c ****     Thd_Act=Invocation->Thd_Act;
 19083              		.loc 1 7604 12
 19084 01cc 10301BE5 		ldr	r3, [fp, #-16]
 19085 01d0 0C3093E5 		ldr	r3, [r3, #12]
 19086 01d4 14300BE5 		str	r3, [fp, #-20]
7605:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Thd_Act!=0U))
 19087              		.loc 1 7605 7
 19088 01d8 14301BE5 		ldr	r3, [fp, #-20]
 19089 01dc 000053E3 		cmp	r3, #0
 19090 01e0 0100000A 		beq	.L1306
7606:../../Source/Kernel/rme_kernel.c ****     {
7607:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7608:../../Source/Kernel/rme_kernel.c **** 
7609:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19091              		.loc 1 7609 16
 19092 01e4 4B3FE0E3 		mvn	r3, #300
 19093 01e8 400000EA 		b	.L1297
 19094              	.L1306:
7610:../../Source/Kernel/rme_kernel.c ****     }
7611:../../Source/Kernel/rme_kernel.c ****     else
7612:../../Source/Kernel/rme_kernel.c ****     {
7613:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7614:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7615:../../Source/Kernel/rme_kernel.c ****     }
7616:../../Source/Kernel/rme_kernel.c **** 
7617:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX==0U)
7618:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 19095              		.loc 1 7618 12
 19096 01ec 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 19097 01f0 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 19098 01f4 043093E5 		ldr	r3, [r3, #4]
 19099 01f8 18300BE5 		str	r3, [fp, #-24]
7619:../../Source/Kernel/rme_kernel.c **** #endif
7620:../../Source/Kernel/rme_kernel.c ****     
7621:../../Source/Kernel/rme_kernel.c ****     /* Try to do CAS and activate this port */
7622:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_COMP_SWAP((volatile rme_ptr_t*)&(Invocation->Thd_Act),
 19100              		.loc 1 7622 8
 19101 01fc 10301BE5 		ldr	r3, [fp, #-16]
 19102 0200 0C3083E2 		add	r3, r3, #12
 19103 0204 14101BE5 		ldr	r1, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 470


 19104 0208 18201BE5 		ldr	r2, [fp, #-24]
 19105 020c 0300A0E1 		mov	r0, r3
 19106 0210 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19107 0214 0030A0E1 		mov	r3, r0
 19108              		.loc 1 7622 7
 19109 0218 000053E3 		cmp	r3, #0
 19110 021c 0100001A 		bne	.L1307
7623:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Act,
7624:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Cur)==RME_CASFAIL))
7625:../../Source/Kernel/rme_kernel.c ****     {
7626:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7627:../../Source/Kernel/rme_kernel.c **** 
7628:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19111              		.loc 1 7628 16
 19112 0220 4B3FE0E3 		mvn	r3, #300
 19113 0224 310000EA 		b	.L1297
 19114              	.L1307:
7629:../../Source/Kernel/rme_kernel.c ****     }
7630:../../Source/Kernel/rme_kernel.c ****     else
7631:../../Source/Kernel/rme_kernel.c ****     {
7632:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7633:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7634:../../Source/Kernel/rme_kernel.c ****     }
7635:../../Source/Kernel/rme_kernel.c **** 
7636:../../Source/Kernel/rme_kernel.c ****     /* Save whatever is needed to return to the point - normally only SP and IP needed
7637:../../Source/Kernel/rme_kernel.c ****      * because all other registers, including the coprocessor registers, are saved at
7638:../../Source/Kernel/rme_kernel.c ****      * user-level. We do not set the return value because it will be set by Inv_Ret.
7639:../../Source/Kernel/rme_kernel.c ****      * The coprocessor state will be consistent across the call */
7640:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Save(&(Invocation->Ret),Reg);
 19115              		.loc 1 7640 5
 19116 0228 10301BE5 		ldr	r3, [fp, #-16]
 19117 022c 1C3083E2 		add	r3, r3, #28
 19118 0230 24101BE5 		ldr	r1, [fp, #-36]
 19119 0234 0300A0E1 		mov	r0, r3
 19120 0238 FEFFFFEB 		bl	__RME_Inv_Reg_Save
7641:../../Source/Kernel/rme_kernel.c ****     /* Push this into the stack: insert after the thread list header */
7642:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Invocation->Head),
 19121              		.loc 1 7642 5
 19122 023c 10001BE5 		ldr	r0, [fp, #-16]
 19123 0240 18301BE5 		ldr	r3, [fp, #-24]
 19124 0244 4C1083E2 		add	r1, r3, #76
 19125 0248 18301BE5 		ldr	r3, [fp, #-24]
 19126 024c 4C3093E5 		ldr	r3, [r3, #76]
 19127 0250 0320A0E1 		mov	r2, r3
 19128 0254 FEFFFFEB 		bl	_RME_List_Ins
7643:../../Source/Kernel/rme_kernel.c ****                   &(Thd_Cur->Ctx.Invstk),
7644:../../Source/Kernel/rme_kernel.c ****                   Thd_Cur->Ctx.Invstk.Next);
7645:../../Source/Kernel/rme_kernel.c ****     /* Increase invocation depth - no atomic operation needed */
7646:../../Source/Kernel/rme_kernel.c ****     Thd_Cur->Ctx.Invstk_Depth++;
 19129              		.loc 1 7646 17
 19130 0258 18301BE5 		ldr	r3, [fp, #-24]
 19131 025c 543093E5 		ldr	r3, [r3, #84]
 19132              		.loc 1 7646 30
 19133 0260 012083E2 		add	r2, r3, #1
 19134 0264 18301BE5 		ldr	r3, [fp, #-24]
 19135 0268 542083E5 		str	r2, [r3, #84]
7647:../../Source/Kernel/rme_kernel.c ****     /* Setup the register contents, and do the invocation */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 471


7648:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Init(RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
 19136              		.loc 1 7648 24
 19137 026c 18301BE5 		ldr	r3, [fp, #-24]
 19138 0270 443093E5 		ldr	r3, [r3, #68]
 19139              		.loc 1 7648 5
 19140 0274 0201C3E3 		bic	r0, r3, #-2147483648
 19141 0278 10301BE5 		ldr	r3, [fp, #-16]
 19142 027c 101093E5 		ldr	r1, [r3, #16]
 19143 0280 10301BE5 		ldr	r3, [fp, #-16]
 19144 0284 142093E5 		ldr	r2, [r3, #20]
 19145 0288 24301BE5 		ldr	r3, [fp, #-36]
 19146 028c 00308DE5 		str	r3, [sp]
 19147 0290 2C301BE5 		ldr	r3, [fp, #-44]
 19148 0294 FEFFFFEB 		bl	__RME_Thd_Reg_Init
7649:../../Source/Kernel/rme_kernel.c ****                        Invocation->Entry,
7650:../../Source/Kernel/rme_kernel.c ****                        Invocation->Stack,
7651:../../Source/Kernel/rme_kernel.c ****                        Param,Reg);
7652:../../Source/Kernel/rme_kernel.c ****     
7653:../../Source/Kernel/rme_kernel.c ****     
7654:../../Source/Kernel/rme_kernel.c ****     /* We are assuming that we are always invoking into a new process (why use synchronous
7655:../../Source/Kernel/rme_kernel.c ****      * invocation if you don't do so?). So we always switch page tables regardless. */
7656:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7657:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 19149              		.loc 1 7657 5
 19150 0298 10301BE5 		ldr	r3, [fp, #-16]
 19151 029c 083093E5 		ldr	r3, [r3, #8]
 19152 02a0 183093E5 		ldr	r3, [r3, #24]
 19153 02a4 003093E5 		ldr	r3, [r3]
 19154 02a8 7330FFE6 		uxth	r3, r3
 19155 02ac 000053E3 		cmp	r3, #0
 19156 02b0 0800000A 		beq	.L1308
 19157              		.loc 1 7657 5 is_stmt 0 discriminator 1
 19158 02b4 003000E3 		movw	r3, #:lower16:.LC4
 19159 02b8 003040E3 		movt	r3, #:upper16:.LC4
 19160 02bc 002000E3 		movw	r2, #:lower16:.LC5
 19161 02c0 002040E3 		movt	r2, #:upper16:.LC5
 19162 02c4 E91D01E3 		movw	r1, #7657
 19163 02c8 000000E3 		movw	r0, #:lower16:.LC6
 19164 02cc 000040E3 		movt	r0, #:upper16:.LC6
 19165 02d0 FEFFFFEB 		bl	RME_Log
 19166              	.L1309:
 19167 02d4 FEFFFFEA 		b	.L1309
 19168              	.L1308:
7658:../../Source/Kernel/rme_kernel.c **** #endif
7659:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Set(Invocation->Prc->Pgt);
 19169              		.loc 1 7659 29 is_stmt 1
 19170 02d8 10301BE5 		ldr	r3, [fp, #-16]
 19171 02dc 083093E5 		ldr	r3, [r3, #8]
 19172              		.loc 1 7659 34
 19173 02e0 183093E5 		ldr	r3, [r3, #24]
 19174              		.loc 1 7659 5
 19175 02e4 0300A0E1 		mov	r0, r3
 19176 02e8 FEFFFFEB 		bl	__RME_Pgt_Set
7660:../../Source/Kernel/rme_kernel.c ****     
7661:../../Source/Kernel/rme_kernel.c ****     return 0;
 19177              		.loc 1 7661 12
 19178 02ec 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 472


 19179              	.L1297:
7662:../../Source/Kernel/rme_kernel.c **** }
 19180              		.loc 1 7662 1
 19181 02f0 0300A0E1 		mov	r0, r3
 19182 02f4 04D04BE2 		sub	sp, fp, #4
 19183              		.cfi_def_cfa 13, 8
 19184              		@ sp needed
 19185 02f8 0088BDE8 		pop	{fp, pc}
 19186              		.cfi_endproc
 19187              	.LFE75:
 19189              		.section	.text._RME_Inv_Ret,"ax",%progbits
 19190              		.align	2
 19191              		.syntax unified
 19192              		.arm
 19194              	_RME_Inv_Ret:
 19195              	.LFB76:
7663:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Act *************************************************/
7664:../../Source/Kernel/rme_kernel.c **** 
7665:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Ret ******************************************************
7666:../../Source/Kernel/rme_kernel.c **** Description : Return from the invocation function, and set the return value to
7667:../../Source/Kernel/rme_kernel.c ****               the old register set. This function does not need a capability
7668:../../Source/Kernel/rme_kernel.c ****               table to work.
7669:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
7670:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Retval - The return value of this synchronous invocation.
7671:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc - Are we attempting a return from exception?
7672:../../Source/Kernel/rme_kernel.c **** Output      : None.
7673:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7674:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7675:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Ret(struct RME_Reg_Struct* Reg,
7676:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Retval,
7677:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc)
7678:../../Source/Kernel/rme_kernel.c **** {
 19196              		.loc 1 7678 1
 19197              		.cfi_startproc
 19198              		@ args = 0, pretend = 0, frame = 24
 19199              		@ frame_needed = 1, uses_anonymous_args = 0
 19200 0000 00482DE9 		push	{fp, lr}
 19201              		.cfi_def_cfa_offset 8
 19202              		.cfi_offset 11, -8
 19203              		.cfi_offset 14, -4
 19204 0004 04B08DE2 		add	fp, sp, #4
 19205              		.cfi_def_cfa 11, 4
 19206 0008 18D04DE2 		sub	sp, sp, #24
 19207 000c 10000BE5 		str	r0, [fp, #-16]
 19208 0010 14100BE5 		str	r1, [fp, #-20]
 19209 0014 18200BE5 		str	r2, [fp, #-24]
7679:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
7680:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7681:../../Source/Kernel/rme_kernel.c **** 
7682:../../Source/Kernel/rme_kernel.c ****     /* See if we can return; If we can, get the structure */
7683:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CPU_LOCAL()->Thd_Cur;
 19210              		.loc 1 7683 11
 19211 0018 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 19212 001c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 19213 0020 043093E5 		ldr	r3, [r3, #4]
 19214 0024 08300BE5 		str	r3, [fp, #-8]
7684:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 473


 19215              		.loc 1 7684 16
 19216 0028 08301BE5 		ldr	r3, [fp, #-8]
 19217 002c 4C2093E5 		ldr	r2, [r3, #76]
 19218 0030 08301BE5 		ldr	r3, [fp, #-8]
 19219 0034 4C3083E2 		add	r3, r3, #76
 19220 0038 030052E1 		cmp	r2, r3
 19221 003c 0200000A 		beq	.L1311
 19222              		.loc 1 7684 16 is_stmt 0 discriminator 1
 19223 0040 08301BE5 		ldr	r3, [fp, #-8]
 19224 0044 4C3093E5 		ldr	r3, [r3, #76]
 19225 0048 000000EA 		b	.L1312
 19226              	.L1311:
 19227              		.loc 1 7684 16 discriminator 2
 19228 004c 0030A0E3 		mov	r3, #0
 19229              	.L1312:
 19230              		.loc 1 7684 15 is_stmt 1 discriminator 4
 19231 0050 0C300BE5 		str	r3, [fp, #-12]
7685:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Invocation==RME_NULL))
 19232              		.loc 1 7685 7 discriminator 4
 19233 0054 0C301BE5 		ldr	r3, [fp, #-12]
 19234 0058 000053E3 		cmp	r3, #0
 19235 005c 0200001A 		bne	.L1313
7686:../../Source/Kernel/rme_kernel.c ****     {
7687:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7688:../../Source/Kernel/rme_kernel.c **** 
7689:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_EMPTY;
 19236              		.loc 1 7689 16
 19237 0060 D03E0FE3 		movw	r3, #65232
 19238 0064 FF3F4FE3 		movt	r3, 65535
 19239 0068 680000EA 		b	.L1314
 19240              	.L1313:
7690:../../Source/Kernel/rme_kernel.c ****     }
7691:../../Source/Kernel/rme_kernel.c ****     else
7692:../../Source/Kernel/rme_kernel.c ****     {
7693:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7694:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7695:../../Source/Kernel/rme_kernel.c ****     }
7696:../../Source/Kernel/rme_kernel.c **** 
7697:../../Source/Kernel/rme_kernel.c ****     /* See if this port allows return-on-fault */
7698:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Is_Exc!=0U)&&(Invocation->Is_Exc_Ret==0U)))
 19241              		.loc 1 7698 7
 19242 006c 18301BE5 		ldr	r3, [fp, #-24]
 19243 0070 000053E3 		cmp	r3, #0
 19244 0074 0600000A 		beq	.L1315
 19245              		.loc 1 7698 8 discriminator 1
 19246 0078 0C301BE5 		ldr	r3, [fp, #-12]
 19247 007c 183093E5 		ldr	r3, [r3, #24]
 19248 0080 000053E3 		cmp	r3, #0
 19249 0084 0200001A 		bne	.L1315
7699:../../Source/Kernel/rme_kernel.c ****     {
7700:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7701:../../Source/Kernel/rme_kernel.c **** 
7702:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_FAULT;
 19250              		.loc 1 7702 16
 19251 0088 D23E0FE3 		movw	r3, #65234
 19252 008c FF3F4FE3 		movt	r3, 65535
 19253 0090 5E0000EA 		b	.L1314
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 474


 19254              	.L1315:
7703:../../Source/Kernel/rme_kernel.c ****     }
7704:../../Source/Kernel/rme_kernel.c ****     else
7705:../../Source/Kernel/rme_kernel.c ****     {
7706:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7707:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7708:../../Source/Kernel/rme_kernel.c ****     }
7709:../../Source/Kernel/rme_kernel.c **** 
7710:../../Source/Kernel/rme_kernel.c ****     /* Pop it from the stack */
7711:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 19255              		.loc 1 7711 5
 19256 0094 0C301BE5 		ldr	r3, [fp, #-12]
 19257 0098 042093E5 		ldr	r2, [r3, #4]
 19258 009c 0C301BE5 		ldr	r3, [fp, #-12]
 19259 00a0 003093E5 		ldr	r3, [r3]
 19260 00a4 0310A0E1 		mov	r1, r3
 19261 00a8 0200A0E1 		mov	r0, r2
 19262 00ac FEFFFFEB 		bl	_RME_List_Del
7712:../../Source/Kernel/rme_kernel.c ****     /* Decrease invocation depth - no atomic operation needed */
7713:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth--;
 19263              		.loc 1 7713 16
 19264 00b0 08301BE5 		ldr	r3, [fp, #-8]
 19265 00b4 543093E5 		ldr	r3, [r3, #84]
 19266              		.loc 1 7713 29
 19267 00b8 012043E2 		sub	r2, r3, #1
 19268 00bc 08301BE5 		ldr	r3, [fp, #-8]
 19269 00c0 542083E5 		str	r2, [r3, #84]
7714:../../Source/Kernel/rme_kernel.c **** 
7715:../../Source/Kernel/rme_kernel.c ****     /* Restore the register contents, and set return value. We need to set
7716:../../Source/Kernel/rme_kernel.c ****      * the return value of the invocation system call itself as well. */
7717:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Restore(Reg,&(Invocation->Ret));
 19270              		.loc 1 7717 5
 19271 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 19272 00c8 1C3083E2 		add	r3, r3, #28
 19273 00cc 0310A0E1 		mov	r1, r3
 19274 00d0 10001BE5 		ldr	r0, [fp, #-16]
 19275 00d4 FEFFFFEB 		bl	__RME_Inv_Reg_Restore
7718:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Retval_Set(Reg,(rme_ret_t)Retval);
 19276              		.loc 1 7718 5
 19277 00d8 14301BE5 		ldr	r3, [fp, #-20]
 19278 00dc 0310A0E1 		mov	r1, r3
 19279 00e0 10001BE5 		ldr	r0, [fp, #-16]
 19280 00e4 FEFFFFEB 		bl	__RME_Inv_Retval_Set
7719:../../Source/Kernel/rme_kernel.c **** 
7720:../../Source/Kernel/rme_kernel.c ****     /* We have successfully returned, set the invocation as inactive. We need
7721:../../Source/Kernel/rme_kernel.c ****      * a barrier here to avoid potential destruction of the return value. */
7722:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Invocation->Thd_Act),0U);
 19281              		.loc 1 7722 5
 19282 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 19283 00ec 0C3083E2 		add	r3, r3, #12
 19284 00f0 0010A0E3 		mov	r1, #0
 19285 00f4 0300A0E1 		mov	r0, r3
 19286 00f8 FEFFFFEB 		bl	__RME_A7A_Write_Release
7723:../../Source/Kernel/rme_kernel.c **** 
7724:../../Source/Kernel/rme_kernel.c ****     /* Decide the system call's return value */
7725:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Is_Exc!=0U))
 19287              		.loc 1 7725 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 475


 19288 00fc 18301BE5 		ldr	r3, [fp, #-24]
 19289 0100 000053E3 		cmp	r3, #0
 19290 0104 0400000A 		beq	.L1316
7726:../../Source/Kernel/rme_kernel.c ****     {
7727:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7728:../../Source/Kernel/rme_kernel.c **** 
7729:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg, RME_ERR_SIV_FAULT);
 19291              		.loc 1 7729 9
 19292 0108 D21E0FE3 		movw	r1, #65234
 19293 010c FF1F4FE3 		movt	r1, 65535
 19294 0110 10001BE5 		ldr	r0, [fp, #-16]
 19295 0114 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 19296 0118 020000EA 		b	.L1317
 19297              	.L1316:
7730:../../Source/Kernel/rme_kernel.c ****     }
7731:../../Source/Kernel/rme_kernel.c ****     else
7732:../../Source/Kernel/rme_kernel.c ****     {
7733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7734:../../Source/Kernel/rme_kernel.c **** 
7735:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 19298              		.loc 1 7735 9
 19299 011c 0010A0E3 		mov	r1, #0
 19300 0120 10001BE5 		ldr	r0, [fp, #-16]
 19301 0124 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 19302              	.L1317:
7736:../../Source/Kernel/rme_kernel.c ****     }
7737:../../Source/Kernel/rme_kernel.c **** 
7738:../../Source/Kernel/rme_kernel.c ****     /* Same assumptions as in invocation activation */
7739:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 19303              		.loc 1 7739 16
 19304 0128 08301BE5 		ldr	r3, [fp, #-8]
 19305 012c 4C2093E5 		ldr	r2, [r3, #76]
 19306 0130 08301BE5 		ldr	r3, [fp, #-8]
 19307 0134 4C3083E2 		add	r3, r3, #76
 19308 0138 030052E1 		cmp	r2, r3
 19309 013c 0200000A 		beq	.L1318
 19310              		.loc 1 7739 16 is_stmt 0 discriminator 1
 19311 0140 08301BE5 		ldr	r3, [fp, #-8]
 19312 0144 4C3093E5 		ldr	r3, [r3, #76]
 19313 0148 000000EA 		b	.L1319
 19314              	.L1318:
 19315              		.loc 1 7739 16 discriminator 2
 19316 014c 0030A0E3 		mov	r3, #0
 19317              	.L1319:
 19318              		.loc 1 7739 15 is_stmt 1 discriminator 4
 19319 0150 0C300BE5 		str	r3, [fp, #-12]
7740:../../Source/Kernel/rme_kernel.c ****     if(Invocation!=RME_NULL)
 19320              		.loc 1 7740 7 discriminator 4
 19321 0154 0C301BE5 		ldr	r3, [fp, #-12]
 19322 0158 000053E3 		cmp	r3, #0
 19323 015c 1500000A 		beq	.L1320
7741:../../Source/Kernel/rme_kernel.c ****     {
7742:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7743:../../Source/Kernel/rme_kernel.c ****         
7744:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7745:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 19324              		.loc 1 7745 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 476


 19325 0160 0C301BE5 		ldr	r3, [fp, #-12]
 19326 0164 083093E5 		ldr	r3, [r3, #8]
 19327 0168 183093E5 		ldr	r3, [r3, #24]
 19328 016c 003093E5 		ldr	r3, [r3]
 19329 0170 7330FFE6 		uxth	r3, r3
 19330 0174 000053E3 		cmp	r3, #0
 19331 0178 0800000A 		beq	.L1321
 19332              		.loc 1 7745 9 is_stmt 0 discriminator 1
 19333 017c 003000E3 		movw	r3, #:lower16:.LC4
 19334 0180 003040E3 		movt	r3, #:upper16:.LC4
 19335 0184 002000E3 		movw	r2, #:lower16:.LC5
 19336 0188 002040E3 		movt	r2, #:upper16:.LC5
 19337 018c 411E01E3 		movw	r1, #7745
 19338 0190 000000E3 		movw	r0, #:lower16:.LC6
 19339 0194 000040E3 		movt	r0, #:upper16:.LC6
 19340 0198 FEFFFFEB 		bl	RME_Log
 19341              	.L1322:
 19342 019c FEFFFFEA 		b	.L1322
 19343              	.L1321:
7746:../../Source/Kernel/rme_kernel.c **** #endif
7747:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Invocation->Prc->Pgt);
 19344              		.loc 1 7747 33 is_stmt 1
 19345 01a0 0C301BE5 		ldr	r3, [fp, #-12]
 19346 01a4 083093E5 		ldr	r3, [r3, #8]
 19347              		.loc 1 7747 38
 19348 01a8 183093E5 		ldr	r3, [r3, #24]
 19349              		.loc 1 7747 9
 19350 01ac 0300A0E1 		mov	r0, r3
 19351 01b0 FEFFFFEB 		bl	__RME_Pgt_Set
 19352 01b4 140000EA 		b	.L1323
 19353              	.L1320:
7748:../../Source/Kernel/rme_kernel.c ****     }
7749:../../Source/Kernel/rme_kernel.c ****     else
7750:../../Source/Kernel/rme_kernel.c ****     {
7751:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7752:../../Source/Kernel/rme_kernel.c ****         
7753:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7754:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Thread->Sched.Prc->Pgt)!=0U);
 19354              		.loc 1 7754 9
 19355 01b8 08301BE5 		ldr	r3, [fp, #-8]
 19356 01bc 2C3093E5 		ldr	r3, [r3, #44]
 19357 01c0 183093E5 		ldr	r3, [r3, #24]
 19358 01c4 003093E5 		ldr	r3, [r3]
 19359 01c8 7330FFE6 		uxth	r3, r3
 19360 01cc 000053E3 		cmp	r3, #0
 19361 01d0 0800000A 		beq	.L1324
 19362              		.loc 1 7754 9 is_stmt 0 discriminator 1
 19363 01d4 003000E3 		movw	r3, #:lower16:.LC4
 19364 01d8 003040E3 		movt	r3, #:upper16:.LC4
 19365 01dc 002000E3 		movw	r2, #:lower16:.LC5
 19366 01e0 002040E3 		movt	r2, #:upper16:.LC5
 19367 01e4 4A1E01E3 		movw	r1, #7754
 19368 01e8 000000E3 		movw	r0, #:lower16:.LC6
 19369 01ec 000040E3 		movt	r0, #:upper16:.LC6
 19370 01f0 FEFFFFEB 		bl	RME_Log
 19371              	.L1325:
 19372              		.loc 1 7754 9 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 477


 19373 01f4 FEFFFFEA 		b	.L1325
 19374              	.L1324:
7755:../../Source/Kernel/rme_kernel.c **** #endif
7756:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Thread->Sched.Prc->Pgt);
 19375              		.loc 1 7756 36 is_stmt 1
 19376 01f8 08301BE5 		ldr	r3, [fp, #-8]
 19377 01fc 2C3093E5 		ldr	r3, [r3, #44]
 19378              		.loc 1 7756 40
 19379 0200 183093E5 		ldr	r3, [r3, #24]
 19380              		.loc 1 7756 9
 19381 0204 0300A0E1 		mov	r0, r3
 19382 0208 FEFFFFEB 		bl	__RME_Pgt_Set
 19383              	.L1323:
7757:../../Source/Kernel/rme_kernel.c ****     }
7758:../../Source/Kernel/rme_kernel.c ****     
7759:../../Source/Kernel/rme_kernel.c ****     return 0;
 19384              		.loc 1 7759 12
 19385 020c 0030A0E3 		mov	r3, #0
 19386              	.L1314:
7760:../../Source/Kernel/rme_kernel.c **** }
 19387              		.loc 1 7760 1
 19388 0210 0300A0E1 		mov	r0, r3
 19389 0214 04D04BE2 		sub	sp, fp, #4
 19390              		.cfi_def_cfa 13, 8
 19391              		@ sp needed
 19392 0218 0088BDE8 		pop	{fp, pc}
 19393              		.cfi_endproc
 19394              	.LFE76:
 19396              		.section	.text._RME_Kfn_Boot_Crt,"ax",%progbits
 19397              		.align	2
 19398              		.global	_RME_Kfn_Boot_Crt
 19399              		.syntax unified
 19400              		.arm
 19402              	_RME_Kfn_Boot_Crt:
 19403              	.LFB77:
7761:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Ret *************************************************/
7762:../../Source/Kernel/rme_kernel.c **** 
7763:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Boot_Crt *************************************************
7764:../../Source/Kernel/rme_kernel.c **** Description : This function is used to create boot-time kernel call capability.
7765:../../Source/Kernel/rme_kernel.c ****               This kind of capability that does not have a kernel object.
7766:../../Source/Kernel/rme_kernel.c ****               Kernel function capabilities allow you to execute user-defined 
7767:../../Source/Kernel/rme_kernel.c ****               functions in kernel mode. These functions must be defined in the
7768:../../Source/Kernel/rme_kernel.c ****               platform extensions.
7769:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7770:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
7771:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
7772:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7773:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel function.
7774:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7775:../../Source/Kernel/rme_kernel.c **** Output      : None.
7776:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or error code.
7777:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7778:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kfn_Boot_Crt(struct RME_Cap_Cpt* Cpt,
7779:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
7780:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kfn)
7781:../../Source/Kernel/rme_kernel.c **** {
 19404              		.loc 1 7781 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 478


 19405              		.cfi_startproc
 19406              		@ args = 0, pretend = 0, frame = 32
 19407              		@ frame_needed = 1, uses_anonymous_args = 0
 19408 0000 00482DE9 		push	{fp, lr}
 19409              		.cfi_def_cfa_offset 8
 19410              		.cfi_offset 11, -8
 19411              		.cfi_offset 14, -4
 19412 0004 04B08DE2 		add	fp, sp, #4
 19413              		.cfi_def_cfa 11, 4
 19414 0008 20D04DE2 		sub	sp, sp, #32
 19415 000c 18000BE5 		str	r0, [fp, #-24]
 19416 0010 1C100BE5 		str	r1, [fp, #-28]
 19417 0014 20200BE5 		str	r2, [fp, #-32]
7782:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7783:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kfn* Kfn_Crt;
7784:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7785:../../Source/Kernel/rme_kernel.c ****     
7786:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
7787:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 19418              		.loc 1 7787 5
 19419 0018 1C301BE5 		ldr	r3, [fp, #-28]
 19420 001c 803003E2 		and	r3, r3, #128
 19421 0020 000053E3 		cmp	r3, #0
 19422 0024 1D00001A 		bne	.L1327
 19423              		.loc 1 7787 5 is_stmt 0 discriminator 1
 19424 0028 18301BE5 		ldr	r3, [fp, #-24]
 19425 002c 142093E5 		ldr	r2, [r3, #20]
 19426 0030 1C301BE5 		ldr	r3, [fp, #-28]
 19427 0034 030052E1 		cmp	r2, r3
 19428 0038 0100008A 		bhi	.L1328
 19429              		.loc 1 7787 5 discriminator 3
 19430 003c 0230E0E3 		mvn	r3, #2
 19431 0040 880000EA 		b	.L1329
 19432              	.L1328:
 19433              		.loc 1 7787 5 discriminator 4
 19434 0044 1C301BE5 		ldr	r3, [fp, #-28]
 19435 0048 8322A0E1 		lsl	r2, r3, #5
 19436 004c 18301BE5 		ldr	r3, [fp, #-24]
 19437 0050 0C3093E5 		ldr	r3, [r3, #12]
 19438 0054 033082E0 		add	r3, r2, r3
 19439 0058 08300BE5 		str	r3, [fp, #-8]
 19440 005c 08301BE5 		ldr	r3, [fp, #-8]
 19441 0060 0300A0E1 		mov	r0, r3
 19442 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19443 0068 0C000BE5 		str	r0, [fp, #-12]
 19444 006c 0C301BE5 		ldr	r3, [fp, #-12]
 19445 0070 2338A0E1 		lsr	r3, r3, #16
 19446 0074 7330EFE6 		uxtb	r3, r3
 19447 0078 020053E3 		cmp	r3, #2
 19448 007c 0100001A 		bne	.L1330
 19449              		.loc 1 7787 5 discriminator 5
 19450 0080 0830E0E3 		mvn	r3, #8
 19451 0084 770000EA 		b	.L1329
 19452              	.L1330:
 19453              		.loc 1 7787 5 discriminator 6
 19454 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19455 008c 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 479


 19456 0090 030053E3 		cmp	r3, #3
 19457 0094 4100000A 		beq	.L1331
 19458              		.loc 1 7787 5 discriminator 7
 19459 0098 0130E0E3 		mvn	r3, #1
 19460 009c 710000EA 		b	.L1329
 19461              	.L1327:
 19462              		.loc 1 7787 5 discriminator 2
 19463 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 19464 00a4 2324A0E1 		lsr	r2, r3, #8
 19465 00a8 18301BE5 		ldr	r3, [fp, #-24]
 19466 00ac 143093E5 		ldr	r3, [r3, #20]
 19467 00b0 030052E1 		cmp	r2, r3
 19468 00b4 0100003A 		bcc	.L1332
 19469              		.loc 1 7787 5 discriminator 8
 19470 00b8 0230E0E3 		mvn	r3, #2
 19471 00bc 690000EA 		b	.L1329
 19472              	.L1332:
 19473              		.loc 1 7787 5 discriminator 9
 19474 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 19475 00c4 2334A0E1 		lsr	r3, r3, #8
 19476 00c8 8322A0E1 		lsl	r2, r3, #5
 19477 00cc 18301BE5 		ldr	r3, [fp, #-24]
 19478 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19479 00d4 033082E0 		add	r3, r2, r3
 19480 00d8 08300BE5 		str	r3, [fp, #-8]
 19481 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19482 00e0 0300A0E1 		mov	r0, r3
 19483 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19484 00e8 0C000BE5 		str	r0, [fp, #-12]
 19485 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19486 00f0 2338A0E1 		lsr	r3, r3, #16
 19487 00f4 7330EFE6 		uxtb	r3, r3
 19488 00f8 020053E3 		cmp	r3, #2
 19489 00fc 0100001A 		bne	.L1333
 19490              		.loc 1 7787 5 discriminator 10
 19491 0100 0830E0E3 		mvn	r3, #8
 19492 0104 570000EA 		b	.L1329
 19493              	.L1333:
 19494              		.loc 1 7787 5 discriminator 11
 19495 0108 0C301BE5 		ldr	r3, [fp, #-12]
 19496 010c 233CA0E1 		lsr	r3, r3, #24
 19497 0110 030053E3 		cmp	r3, #3
 19498 0114 0100000A 		beq	.L1334
 19499              		.loc 1 7787 5 discriminator 12
 19500 0118 0130E0E3 		mvn	r3, #1
 19501 011c 510000EA 		b	.L1329
 19502              	.L1334:
 19503              		.loc 1 7787 5 discriminator 13
 19504 0120 1C301BE5 		ldr	r3, [fp, #-28]
 19505 0124 7F2003E2 		and	r2, r3, #127
 19506 0128 08301BE5 		ldr	r3, [fp, #-8]
 19507 012c 143093E5 		ldr	r3, [r3, #20]
 19508 0130 030052E1 		cmp	r2, r3
 19509 0134 0100003A 		bcc	.L1335
 19510              		.loc 1 7787 5 discriminator 14
 19511 0138 0230E0E3 		mvn	r3, #2
 19512 013c 490000EA 		b	.L1329
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 480


 19513              	.L1335:
 19514              		.loc 1 7787 5 discriminator 15
 19515 0140 1C301BE5 		ldr	r3, [fp, #-28]
 19516 0144 7F3003E2 		and	r3, r3, #127
 19517 0148 8322A0E1 		lsl	r2, r3, #5
 19518 014c 08301BE5 		ldr	r3, [fp, #-8]
 19519 0150 0C3093E5 		ldr	r3, [r3, #12]
 19520 0154 033082E0 		add	r3, r2, r3
 19521 0158 08300BE5 		str	r3, [fp, #-8]
 19522 015c 08301BE5 		ldr	r3, [fp, #-8]
 19523 0160 0300A0E1 		mov	r0, r3
 19524 0164 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19525 0168 0C000BE5 		str	r0, [fp, #-12]
 19526 016c 0C301BE5 		ldr	r3, [fp, #-12]
 19527 0170 2338A0E1 		lsr	r3, r3, #16
 19528 0174 7330EFE6 		uxtb	r3, r3
 19529 0178 020053E3 		cmp	r3, #2
 19530 017c 0100001A 		bne	.L1336
 19531              		.loc 1 7787 5 discriminator 16
 19532 0180 0830E0E3 		mvn	r3, #8
 19533 0184 370000EA 		b	.L1329
 19534              	.L1336:
 19535              		.loc 1 7787 5 discriminator 17
 19536 0188 0C301BE5 		ldr	r3, [fp, #-12]
 19537 018c 233CA0E1 		lsr	r3, r3, #24
 19538 0190 030053E3 		cmp	r3, #3
 19539 0194 0100000A 		beq	.L1331
 19540              		.loc 1 7787 5 discriminator 18
 19541 0198 0130E0E3 		mvn	r3, #1
 19542 019c 310000EA 		b	.L1329
 19543              	.L1331:
7788:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7789:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7790:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 19544              		.loc 1 7790 5 is_stmt 1
 19545 01a0 08301BE5 		ldr	r3, [fp, #-8]
 19546 01a4 083093E5 		ldr	r3, [r3, #8]
 19547 01a8 013003E2 		and	r3, r3, #1
 19548 01ac 000053E3 		cmp	r3, #0
 19549 01b0 0100001A 		bne	.L1337
 19550              		.loc 1 7790 5 is_stmt 0 discriminator 1
 19551 01b4 0630E0E3 		mvn	r3, #6
 19552 01b8 2A0000EA 		b	.L1329
 19553              	.L1337:
7791:../../Source/Kernel/rme_kernel.c ****     
7792:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7793:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kfn,struct RME_Cap_Kfn*,Kfn_Crt);
 19554              		.loc 1 7793 5 is_stmt 1
 19555 01bc 08301BE5 		ldr	r3, [fp, #-8]
 19556 01c0 142093E5 		ldr	r2, [r3, #20]
 19557 01c4 20301BE5 		ldr	r3, [fp, #-32]
 19558 01c8 030052E1 		cmp	r2, r3
 19559 01cc 0100008A 		bhi	.L1338
 19560              		.loc 1 7793 5 is_stmt 0 discriminator 1
 19561 01d0 0230E0E3 		mvn	r3, #2
 19562 01d4 230000EA 		b	.L1329
 19563              	.L1338:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 481


 19564              		.loc 1 7793 5 discriminator 2
 19565 01d8 20301BE5 		ldr	r3, [fp, #-32]
 19566 01dc 8322A0E1 		lsl	r2, r3, #5
 19567 01e0 08301BE5 		ldr	r3, [fp, #-8]
 19568 01e4 0C3093E5 		ldr	r3, [r3, #12]
 19569 01e8 033082E0 		add	r3, r2, r3
 19570 01ec 10300BE5 		str	r3, [fp, #-16]
7794:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7795:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kfn_Crt);
 19571              		.loc 1 7795 5 is_stmt 1 discriminator 2
 19572 01f0 10301BE5 		ldr	r3, [fp, #-16]
 19573 01f4 0128A0E3 		mov	r2, #65536
 19574 01f8 0010A0E3 		mov	r1, #0
 19575 01fc 0300A0E1 		mov	r0, r3
 19576 0200 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19577 0204 0030A0E1 		mov	r3, r0
 19578 0208 000053E3 		cmp	r3, #0
 19579 020c 0100001A 		bne	.L1339
 19580              		.loc 1 7795 5 is_stmt 0 discriminator 1
 19581 0210 0430E0E3 		mvn	r3, #4
 19582 0214 130000EA 		b	.L1329
 19583              	.L1339:
 19584              		.loc 1 7795 5 discriminator 2
 19585 0218 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19586 021c 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19587 0220 002093E5 		ldr	r2, [r3]
 19588 0224 10301BE5 		ldr	r3, [fp, #-16]
 19589 0228 102083E5 		str	r2, [r3, #16]
7796:../../Source/Kernel/rme_kernel.c ****     
7797:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7798:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Root_Ref=1U;
 19590              		.loc 1 7798 27 is_stmt 1 discriminator 2
 19591 022c 10301BE5 		ldr	r3, [fp, #-16]
 19592 0230 0120A0E3 		mov	r2, #1
 19593 0234 042083E5 		str	r2, [r3, #4]
7799:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Object=0U;
 19594              		.loc 1 7799 25 discriminator 2
 19595 0238 10301BE5 		ldr	r3, [fp, #-16]
 19596 023c 0020A0E3 		mov	r2, #0
 19597 0240 0C2083E5 		str	r2, [r3, #12]
7800:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Flag=RME_KFN_FLAG_FULL_RANGE;
 19598              		.loc 1 7800 23 discriminator 2
 19599 0244 10201BE5 		ldr	r2, [fp, #-16]
 19600 0248 0030A0E3 		mov	r3, #0
 19601 024c FF3F4FE3 		movt	r3, 65535
 19602 0250 083082E5 		str	r3, [r2, #8]
7801:../../Source/Kernel/rme_kernel.c ****     
7802:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7803:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kfn_Crt->Head.Type_Stat),
 19603              		.loc 1 7803 5 discriminator 2
 19604 0254 10301BE5 		ldr	r3, [fp, #-16]
 19605 0258 0114A0E3 		mov	r1, #16777216
 19606 025c 0300A0E1 		mov	r0, r3
 19607 0260 FEFFFFEB 		bl	__RME_A7A_Write_Release
7804:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KFN,
7805:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7806:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 482


7807:../../Source/Kernel/rme_kernel.c **** 
7808:../../Source/Kernel/rme_kernel.c ****     return 0;
 19608              		.loc 1 7808 12 discriminator 2
 19609 0264 0030A0E3 		mov	r3, #0
 19610              	.L1329:
7809:../../Source/Kernel/rme_kernel.c **** }
 19611              		.loc 1 7809 1
 19612 0268 0300A0E1 		mov	r0, r3
 19613 026c 04D04BE2 		sub	sp, fp, #4
 19614              		.cfi_def_cfa 13, 8
 19615              		@ sp needed
 19616 0270 0088BDE8 		pop	{fp, pc}
 19617              		.cfi_endproc
 19618              	.LFE77:
 19620              		.section	.text._RME_Kfn_Act,"ax",%progbits
 19621              		.align	2
 19622              		.syntax unified
 19623              		.arm
 19625              	_RME_Kfn_Act:
 19626              	.LFB78:
7810:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kfn_Boot_Crt ********************************************/
7811:../../Source/Kernel/rme_kernel.c **** 
7812:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Act ******************************************************
7813:../../Source/Kernel/rme_kernel.c **** Description : Activate a kernel function.
7814:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7815:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7816:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel capability.
7817:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7818:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Func_ID - The function ID to invoke.
7819:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Sub_ID - The subfunction ID to invoke.
7820:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param1 - The first parameter.
7821:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param2 - The second parameter.
7822:../../Source/Kernel/rme_kernel.c **** Output      : None.
7823:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the call is successful, it will return whatever
7824:../../Source/Kernel/rme_kernel.c ****                           the 
7825:../../Source/Kernel/rme_kernel.c ****                           function returned (It is expected that they shall
7826:../../Source/Kernel/rme_kernel.c ****                           never return an negative value); or an error code.
7827:../../Source/Kernel/rme_kernel.c ****                           If the kernel function ever causes a context switch,
7828:../../Source/Kernel/rme_kernel.c ****                           it is responsible for setting the return value. On 
7829:../../Source/Kernel/rme_kernel.c ****                           failure, no context switch is allowed.
7830:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7831:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Kfn_Act(struct RME_Cap_Cpt* Cpt,
7832:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7833:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kfn,
7834:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Func_ID,
7835:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Sub_ID,
7836:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param1,
7837:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param2)
7838:../../Source/Kernel/rme_kernel.c **** {
 19627              		.loc 1 7838 1
 19628              		.cfi_startproc
 19629              		@ args = 12, pretend = 0, frame = 24
 19630              		@ frame_needed = 1, uses_anonymous_args = 0
 19631 0000 00482DE9 		push	{fp, lr}
 19632              		.cfi_def_cfa_offset 8
 19633              		.cfi_offset 11, -8
 19634              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 483


 19635 0004 04B08DE2 		add	fp, sp, #4
 19636              		.cfi_def_cfa 11, 4
 19637 0008 20D04DE2 		sub	sp, sp, #32
 19638 000c 10000BE5 		str	r0, [fp, #-16]
 19639 0010 14100BE5 		str	r1, [fp, #-20]
 19640 0014 18200BE5 		str	r2, [fp, #-24]
 19641 0018 1C300BE5 		str	r3, [fp, #-28]
7839:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kfn* Kfn_Op;
7840:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7841:../../Source/Kernel/rme_kernel.c ****     
7842:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7843:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kfn,RME_CAP_TYPE_KFN,
 19642              		.loc 1 7843 5
 19643 001c 18301BE5 		ldr	r3, [fp, #-24]
 19644 0020 803003E2 		and	r3, r3, #128
 19645 0024 000053E3 		cmp	r3, #0
 19646 0028 1D00001A 		bne	.L1341
 19647              		.loc 1 7843 5 is_stmt 0 discriminator 1
 19648 002c 10301BE5 		ldr	r3, [fp, #-16]
 19649 0030 142093E5 		ldr	r2, [r3, #20]
 19650 0034 18301BE5 		ldr	r3, [fp, #-24]
 19651 0038 030052E1 		cmp	r2, r3
 19652 003c 0100008A 		bhi	.L1342
 19653              		.loc 1 7843 5 discriminator 3
 19654 0040 0230E0E3 		mvn	r3, #2
 19655 0044 6E0000EA 		b	.L1343
 19656              	.L1342:
 19657              		.loc 1 7843 5 discriminator 4
 19658 0048 18301BE5 		ldr	r3, [fp, #-24]
 19659 004c 8322A0E1 		lsl	r2, r3, #5
 19660 0050 10301BE5 		ldr	r3, [fp, #-16]
 19661 0054 0C3093E5 		ldr	r3, [r3, #12]
 19662 0058 033082E0 		add	r3, r2, r3
 19663 005c 08300BE5 		str	r3, [fp, #-8]
 19664 0060 08301BE5 		ldr	r3, [fp, #-8]
 19665 0064 0300A0E1 		mov	r0, r3
 19666 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19667 006c 0C000BE5 		str	r0, [fp, #-12]
 19668 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19669 0074 2338A0E1 		lsr	r3, r3, #16
 19670 0078 7330EFE6 		uxtb	r3, r3
 19671 007c 020053E3 		cmp	r3, #2
 19672 0080 0100001A 		bne	.L1344
 19673              		.loc 1 7843 5 discriminator 5
 19674 0084 0830E0E3 		mvn	r3, #8
 19675 0088 5D0000EA 		b	.L1343
 19676              	.L1344:
 19677              		.loc 1 7843 5 discriminator 6
 19678 008c 0C301BE5 		ldr	r3, [fp, #-12]
 19679 0090 233CA0E1 		lsr	r3, r3, #24
 19680 0094 010053E3 		cmp	r3, #1
 19681 0098 4100000A 		beq	.L1345
 19682              		.loc 1 7843 5 discriminator 7
 19683 009c 0130E0E3 		mvn	r3, #1
 19684 00a0 570000EA 		b	.L1343
 19685              	.L1341:
 19686              		.loc 1 7843 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 484


 19687 00a4 18301BE5 		ldr	r3, [fp, #-24]
 19688 00a8 2324A0E1 		lsr	r2, r3, #8
 19689 00ac 10301BE5 		ldr	r3, [fp, #-16]
 19690 00b0 143093E5 		ldr	r3, [r3, #20]
 19691 00b4 030052E1 		cmp	r2, r3
 19692 00b8 0100003A 		bcc	.L1346
 19693              		.loc 1 7843 5 discriminator 8
 19694 00bc 0230E0E3 		mvn	r3, #2
 19695 00c0 4F0000EA 		b	.L1343
 19696              	.L1346:
 19697              		.loc 1 7843 5 discriminator 9
 19698 00c4 18301BE5 		ldr	r3, [fp, #-24]
 19699 00c8 2334A0E1 		lsr	r3, r3, #8
 19700 00cc 8322A0E1 		lsl	r2, r3, #5
 19701 00d0 10301BE5 		ldr	r3, [fp, #-16]
 19702 00d4 0C3093E5 		ldr	r3, [r3, #12]
 19703 00d8 033082E0 		add	r3, r2, r3
 19704 00dc 08300BE5 		str	r3, [fp, #-8]
 19705 00e0 08301BE5 		ldr	r3, [fp, #-8]
 19706 00e4 0300A0E1 		mov	r0, r3
 19707 00e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19708 00ec 0C000BE5 		str	r0, [fp, #-12]
 19709 00f0 0C301BE5 		ldr	r3, [fp, #-12]
 19710 00f4 2338A0E1 		lsr	r3, r3, #16
 19711 00f8 7330EFE6 		uxtb	r3, r3
 19712 00fc 020053E3 		cmp	r3, #2
 19713 0100 0100001A 		bne	.L1347
 19714              		.loc 1 7843 5 discriminator 10
 19715 0104 0830E0E3 		mvn	r3, #8
 19716 0108 3D0000EA 		b	.L1343
 19717              	.L1347:
 19718              		.loc 1 7843 5 discriminator 11
 19719 010c 0C301BE5 		ldr	r3, [fp, #-12]
 19720 0110 233CA0E1 		lsr	r3, r3, #24
 19721 0114 030053E3 		cmp	r3, #3
 19722 0118 0100000A 		beq	.L1348
 19723              		.loc 1 7843 5 discriminator 12
 19724 011c 0130E0E3 		mvn	r3, #1
 19725 0120 370000EA 		b	.L1343
 19726              	.L1348:
 19727              		.loc 1 7843 5 discriminator 13
 19728 0124 18301BE5 		ldr	r3, [fp, #-24]
 19729 0128 7F2003E2 		and	r2, r3, #127
 19730 012c 08301BE5 		ldr	r3, [fp, #-8]
 19731 0130 143093E5 		ldr	r3, [r3, #20]
 19732 0134 030052E1 		cmp	r2, r3
 19733 0138 0100003A 		bcc	.L1349
 19734              		.loc 1 7843 5 discriminator 14
 19735 013c 0230E0E3 		mvn	r3, #2
 19736 0140 2F0000EA 		b	.L1343
 19737              	.L1349:
 19738              		.loc 1 7843 5 discriminator 15
 19739 0144 18301BE5 		ldr	r3, [fp, #-24]
 19740 0148 7F3003E2 		and	r3, r3, #127
 19741 014c 8322A0E1 		lsl	r2, r3, #5
 19742 0150 08301BE5 		ldr	r3, [fp, #-8]
 19743 0154 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 485


 19744 0158 033082E0 		add	r3, r2, r3
 19745 015c 08300BE5 		str	r3, [fp, #-8]
 19746 0160 08301BE5 		ldr	r3, [fp, #-8]
 19747 0164 0300A0E1 		mov	r0, r3
 19748 0168 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19749 016c 0C000BE5 		str	r0, [fp, #-12]
 19750 0170 0C301BE5 		ldr	r3, [fp, #-12]
 19751 0174 2338A0E1 		lsr	r3, r3, #16
 19752 0178 7330EFE6 		uxtb	r3, r3
 19753 017c 020053E3 		cmp	r3, #2
 19754 0180 0100001A 		bne	.L1350
 19755              		.loc 1 7843 5 discriminator 16
 19756 0184 0830E0E3 		mvn	r3, #8
 19757 0188 1D0000EA 		b	.L1343
 19758              	.L1350:
 19759              		.loc 1 7843 5 discriminator 17
 19760 018c 0C301BE5 		ldr	r3, [fp, #-12]
 19761 0190 233CA0E1 		lsr	r3, r3, #24
 19762 0194 010053E3 		cmp	r3, #1
 19763 0198 0100000A 		beq	.L1345
 19764              		.loc 1 7843 5 discriminator 18
 19765 019c 0130E0E3 		mvn	r3, #1
 19766 01a0 170000EA 		b	.L1343
 19767              	.L1345:
7844:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kfn*,Kfn_Op,Type_Stat);    
7845:../../Source/Kernel/rme_kernel.c **** 
7846:../../Source/Kernel/rme_kernel.c ****     /* Check if the range of calling is allowed - kernel function specific */
7847:../../Source/Kernel/rme_kernel.c ****     if((Func_ID>RME_KFN_FLAG_HIGH(Kfn_Op->Head.Flag))||
 19768              		.loc 1 7847 17 is_stmt 1
 19769 01a4 08301BE5 		ldr	r3, [fp, #-8]
 19770 01a8 083093E5 		ldr	r3, [r3, #8]
 19771 01ac 2338A0E1 		lsr	r3, r3, #16
 19772              		.loc 1 7847 7
 19773 01b0 1C201BE5 		ldr	r2, [fp, #-28]
 19774 01b4 030052E1 		cmp	r2, r3
 19775 01b8 0500008A 		bhi	.L1351
7848:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 19776              		.loc 1 7848 17 discriminator 1
 19777 01bc 08301BE5 		ldr	r3, [fp, #-8]
 19778 01c0 083093E5 		ldr	r3, [r3, #8]
 19779 01c4 7330FFE6 		uxth	r3, r3
7847:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 19780              		.loc 1 7847 54 discriminator 1
 19781 01c8 1C201BE5 		ldr	r2, [fp, #-28]
 19782 01cc 030052E1 		cmp	r2, r3
 19783 01d0 0100002A 		bcs	.L1352
 19784              	.L1351:
7849:../../Source/Kernel/rme_kernel.c ****     {
7850:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7851:../../Source/Kernel/rme_kernel.c **** 
7852:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 19785              		.loc 1 7852 16
 19786 01d4 0630E0E3 		mvn	r3, #6
 19787 01d8 090000EA 		b	.L1343
 19788              	.L1352:
7853:../../Source/Kernel/rme_kernel.c ****     }
7854:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 486


7855:../../Source/Kernel/rme_kernel.c ****     {
7856:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7857:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7858:../../Source/Kernel/rme_kernel.c ****     }
7859:../../Source/Kernel/rme_kernel.c **** 
7860:../../Source/Kernel/rme_kernel.c ****     /* Return whatever the function returns */
7861:../../Source/Kernel/rme_kernel.c ****     return __RME_Kfn_Handler(Cpt,Reg,Func_ID,Sub_ID,Param1,Param2);
 19789              		.loc 1 7861 12
 19790 01dc 0C309BE5 		ldr	r3, [fp, #12]
 19791 01e0 04308DE5 		str	r3, [sp, #4]
 19792 01e4 08309BE5 		ldr	r3, [fp, #8]
 19793 01e8 00308DE5 		str	r3, [sp]
 19794 01ec 04309BE5 		ldr	r3, [fp, #4]
 19795 01f0 1C201BE5 		ldr	r2, [fp, #-28]
 19796 01f4 14101BE5 		ldr	r1, [fp, #-20]
 19797 01f8 10001BE5 		ldr	r0, [fp, #-16]
 19798 01fc FEFFFFEB 		bl	__RME_Kfn_Handler
 19799 0200 0030A0E1 		mov	r3, r0
 19800              	.L1343:
7862:../../Source/Kernel/rme_kernel.c **** }
 19801              		.loc 1 7862 1
 19802 0204 0300A0E1 		mov	r0, r3
 19803 0208 04D04BE2 		sub	sp, fp, #4
 19804              		.cfi_def_cfa 13, 8
 19805              		@ sp needed
 19806 020c 0088BDE8 		pop	{fp, pc}
 19807              		.cfi_endproc
 19808              	.LFE78:
 19810              		.section	.rodata.Table.1,"a"
 19811              		.align	2
 19814              	Table.1:
 19815 0000 00000101 		.ascii	"\000\000\001\001\002\002\002\002\003\003\003\003\003"
 19815      02020202 
 19815      03030303 
 19815      03
 19816 000d 03030304 		.ascii	"\003\003\003\004\004\004\004\004\004\004\004\004\004"
 19816      04040404 
 19816      04040404 
 19816      04
 19817 001a 04040404 		.ascii	"\004\004\004\004\004\004\005\005\005\005\005\005\005"
 19817      04040505 
 19817      05050505 
 19817      05
 19818 0027 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\005"
 19818      05050505 
 19818      05050505 
 19818      05
 19819 0034 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\006"
 19819      05050505 
 19819      05050505 
 19819      06
 19820 0041 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 19820      06060606 
 19820      06060606 
 19820      06
 19821 004e 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 19821      06060606 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 487


 19821      06060606 
 19821      06
 19822 005b 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 19822      06060606 
 19822      06060606 
 19822      06
 19823 0068 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 19823      06060606 
 19823      06060606 
 19823      06
 19824 0075 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\007\007"
 19824      06060606 
 19824      06060607 
 19824      07
 19825 0082 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19825      07070707 
 19825      07070707 
 19825      07
 19826 008f 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19826      07070707 
 19826      07070707 
 19826      07
 19827 009c 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19827      07070707 
 19827      07070707 
 19827      07
 19828 00a9 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19828      07070707 
 19828      07070707 
 19828      07
 19829 00b6 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19829      07070707 
 19829      07070707 
 19829      07
 19830 00c3 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19830      07070707 
 19830      07070707 
 19830      07
 19831 00d0 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19831      07070707 
 19831      07070707 
 19831      07
 19832 00dd 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19832      07070707 
 19832      07070707 
 19832      07
 19833 00ea 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 19833      07070707 
 19833      07070707 
 19833      07
 19834 00f7 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007"
 19834      07070707 
 19834      07
 19835              		.section	.rodata.Table.0,"a"
 19836              		.align	2
 19839              	Table.0:
 19840 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 488


 19840      02000100 
 19840      03000100 
 19840      02
 19841 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 19841      00010002 
 19841      00010003 
 19841      00
 19842 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 19842      01000500 
 19842      01000200 
 19842      01
 19843 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 19843      00020001 
 19843      00040001 
 19843      00
 19844 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 19844      03000100 
 19844      02000100 
 19844      06
 19845 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 19845      00010003 
 19845      00010002 
 19845      00
 19846 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 19846      01000200 
 19846      01000300 
 19846      01
 19847 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 19847      00050001 
 19847      00020001 
 19847      00
 19848 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 19848      02000100 
 19848      04000100 
 19848      02
 19849 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 19849      00010002 
 19849      00010007 
 19849      00
 19850 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 19850      01000300 
 19850      01000200 
 19850      01
 19851 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 19851      00020001 
 19851      00030001 
 19851      00
 19852 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 19852      05000100 
 19852      02000100 
 19852      03
 19853 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 19853      00010004 
 19853      00010002 
 19853      00
 19854 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 19854      01000200 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 489


 19854      01000600 
 19854      01
 19855 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 19855      00030001 
 19855      00020001 
 19855      00
 19856 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 19856      02000100 
 19856      03000100 
 19856      02
 19857 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 19857      00010002 
 19857      00010003 
 19857      00
 19858 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 19858      01000400 
 19858      01000200 
 19858      01
 19859 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 19859      00020001 
 19859      00
 19860              		.text
 19861              	.Letext0:
 19862              		.file 2 "../../Include/Platform/A7A/rme_platform_a7a.h"
 19863              		.file 3 "../../Include/Kernel/rme_kernel.h"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 490


DEFINED SYMBOLS
                            *ABS*:00000000 rme_kernel.c
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:22     .text.RME_Int_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:27     .text.RME_Int_Print:00000000 RME_Int_Print
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:175    .text.RME_Hex_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:180    .text.RME_Hex_Print:00000000 RME_Hex_Print
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:296    .text.RME_Str_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:301    .text.RME_Str_Print:00000000 RME_Str_Print
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:363    .rodata:00000000 $d
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:364    .rodata:00000000 .LC0
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:368    .rodata:00000028 .LC1
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:371    .rodata:00000034 .LC2
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:374    .rodata:00000038 .LC3
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:377    .text.RME_Log:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:382    .text.RME_Log:00000000 RME_Log
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:441    .text._RME_MSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:446    .text._RME_MSB_Generic:00000000 _RME_MSB_Generic
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19814  .rodata.Table.1:00000000 Table.1
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:516    .text._RME_LSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:521    .text._RME_LSB_Generic:00000000 _RME_LSB_Generic
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19839  .rodata.Table.0:00000000 Table.0
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:600    .text._RME_Comp_Swap_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:605    .text._RME_Comp_Swap_Single:00000000 _RME_Comp_Swap_Single
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:652    .text._RME_Fetch_Add_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:657    .text._RME_Fetch_Add_Single:00000000 _RME_Fetch_Add_Single
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:701    .text._RME_Fetch_And_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:706    .text._RME_Fetch_And_Single:00000000 _RME_Fetch_And_Single
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:747    .text._RME_List_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:752    .text._RME_List_Crt:00000000 _RME_List_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:787    .text._RME_List_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:792    .text._RME_List_Del:00000000 _RME_List_Del
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:828    .text._RME_List_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:833    .text._RME_List_Ins:00000000 _RME_List_Ins
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:878    .text._RME_Clear:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:883    .text._RME_Clear:00000000 _RME_Clear
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:935    .text._RME_Memcmp:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:940    .text._RME_Memcmp:00000000 _RME_Memcmp
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1022   .text._RME_Memcpy:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1027   .text._RME_Memcpy:00000000 _RME_Memcpy
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1086   .text._RME_Diff:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1091   .text._RME_Diff:00000000 _RME_Diff
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1141   .text.RME_Kmain:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1146   .text.RME_Kmain:00000000 RME_Kmain
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1184   .text._RME_Lowlvl_Check:00000000 _RME_Lowlvl_Check
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8018   .text._RME_Kot_Init:00000000 _RME_Kot_Init
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1180   .text._RME_Lowlvl_Check:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1211   .text._RME_Svc_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1216   .text._RME_Svc_Handler:00000000 _RME_Svc_Handler
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19194  .text._RME_Inv_Ret:00000000 _RME_Inv_Ret
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:18925  .text._RME_Inv_Act:00000000 _RME_Inv_Act
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1335   .text._RME_Svc_Handler:00000134 $d
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1345   .text._RME_Svc_Handler:00000154 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17140  .text._RME_Sig_Snd:00000000 _RME_Sig_Snd
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17432  .text._RME_Sig_Rcv:00000000 _RME_Sig_Rcv
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19625  .text._RME_Kfn_Act:00000000 _RME_Kfn_Act
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:13946  .text._RME_Thd_Sched_Free:00000000 _RME_Thd_Sched_Free
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:14293  .text._RME_Thd_Exec_Set:00000000 _RME_Thd_Exec_Set
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 491


C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:14544  .text._RME_Thd_Sched_Prio:00000000 _RME_Thd_Sched_Prio
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:15225  .text._RME_Thd_Time_Xfer:00000000 _RME_Thd_Time_Xfer
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:15789  .text._RME_Thd_Swt:00000000 _RME_Thd_Swt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1555   .text._RME_Svc_Handler:000003b8 $d
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:1581   .text._RME_Svc_Handler:00000418 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2705   .text._RME_Cpt_Crt:00000000 _RME_Cpt_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3184   .text._RME_Cpt_Del:00000000 _RME_Cpt_Del
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3522   .text._RME_Cpt_Frz:00000000 _RME_Cpt_Frz
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3764   .text._RME_Cpt_Add:00000000 _RME_Cpt_Add
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:4530   .text._RME_Cpt_Rem:00000000 _RME_Cpt_Rem
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:5710   .text._RME_Pgt_Crt:00000000 _RME_Pgt_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:6212   .text._RME_Pgt_Del:00000000 _RME_Pgt_Del
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:6528   .text._RME_Pgt_Add:00000000 _RME_Pgt_Add
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:6982   .text._RME_Pgt_Rem:00000000 _RME_Pgt_Rem
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:7191   .text._RME_Pgt_Con:00000000 _RME_Pgt_Con
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:7618   .text._RME_Pgt_Des:00000000 _RME_Pgt_Des
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:10130  .text._RME_Prc_Crt:00000000 _RME_Prc_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:10677  .text._RME_Prc_Del:00000000 _RME_Prc_Del
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:10959  .text._RME_Prc_Cpt:00000000 _RME_Prc_Cpt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:11311  .text._RME_Prc_Pgt:00000000 _RME_Prc_Pgt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:12151  .text._RME_Thd_Crt:00000000 _RME_Thd_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:12847  .text._RME_Thd_Del:00000000 _RME_Thd_Del
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:13237  .text._RME_Thd_Sched_Bind:00000000 _RME_Thd_Sched_Bind
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:14968  .text._RME_Thd_Sched_Rcv:00000000 _RME_Thd_Sched_Rcv
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:16398  .text._RME_Sig_Crt:00000000 _RME_Sig_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:16628  .text._RME_Sig_Del:00000000 _RME_Sig_Del
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17834  .text._RME_Inv_Crt:00000000 _RME_Inv_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:18426  .text._RME_Inv_Del:00000000 _RME_Inv_Del
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:18738  .text._RME_Inv_Set:00000000 _RME_Inv_Set
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2119   .text._RME_Tim_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2124   .text._RME_Tim_Handler:00000000 _RME_Tim_Handler
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9154   .text._RME_Run_Del:00000000 _RME_Run_Del
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9344   .text._RME_Run_Notif:00000000 _RME_Run_Notif
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17018  .text._RME_Kern_Snd:00000000 _RME_Kern_Snd
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:16908  .text._RME_Kern_High:00000000 _RME_Kern_High
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2203   .text._RME_Tim_Elapse:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2208   .text._RME_Tim_Elapse:00000000 _RME_Tim_Elapse
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2268   .text._RME_Tim_Future:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2273   .text._RME_Tim_Future:00000000 _RME_Tim_Future
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2304   .text._RME_Cpt_Boot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2309   .text._RME_Cpt_Boot_Init:00000000 _RME_Cpt_Boot_Init
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8083   .text._RME_Kot_Mark:00000000 _RME_Kot_Mark
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2417   .text._RME_Cpt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2422   .text._RME_Cpt_Boot_Crt:00000000 _RME_Cpt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:2701   .text._RME_Cpt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3171   .rodata:0000003c .LC4
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3174   .rodata:00000048 .LC5
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3177   .rodata:00000054 .LC6
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3180   .text._RME_Cpt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8390   .text._RME_Kot_Erase:00000000 _RME_Kot_Erase
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3518   .text._RME_Cpt_Frz:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:3760   .text._RME_Cpt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:4526   .text._RME_Cpt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:4786   .text._RME_Pgt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:4791   .text._RME_Pgt_Boot_Crt:00000000 _RME_Pgt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:5113   .text._RME_Pgt_Boot_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:5118   .text._RME_Pgt_Boot_Add:00000000 _RME_Pgt_Boot_Add
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 492


C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:5320   .text._RME_Pgt_Boot_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:5325   .text._RME_Pgt_Boot_Con:00000000 _RME_Pgt_Boot_Con
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:5706   .text._RME_Pgt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:6208   .text._RME_Pgt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:6524   .text._RME_Pgt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:6978   .text._RME_Pgt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:7187   .text._RME_Pgt_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:7614   .text._RME_Pgt_Des:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8013   .text._RME_Kot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8078   .text._RME_Kot_Mark:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8385   .text._RME_Kot_Erase:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8619   .text._RME_Kom_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8624   .text._RME_Kom_Boot_Crt:00000000 _RME_Kom_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8881   .text._RME_CPU_Local_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8886   .text._RME_CPU_Local_Init:00000000 _RME_CPU_Local_Init
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8961   .rodata:00000078 .LC7
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8964   .text._RME_Thd_Fatal:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:8969   .text._RME_Thd_Fatal:00000000 _RME_Thd_Fatal
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9066   .text._RME_Run_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9070   .text._RME_Run_Ins:00000000 _RME_Run_Ins
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9150   .text._RME_Run_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9245   .text._RME_Run_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9249   .text._RME_Run_High:00000000 _RME_Run_High
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9340   .text._RME_Run_Notif:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9403   .text._RME_Thd_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9408   .text._RME_Thd_Pgt:00000000 _RME_Thd_Pgt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9469   .text._RME_Run_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9473   .text._RME_Run_Swt:00000000 _RME_Run_Swt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9578   .text._RME_Prc_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:9583   .text._RME_Prc_Boot_Crt:00000000 _RME_Prc_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:10126  .text._RME_Prc_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:10673  .text._RME_Prc_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:10955  .text._RME_Prc_Cpt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:11307  .text._RME_Prc_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:11659  .text._RME_Thd_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:11664  .text._RME_Thd_Boot_Crt:00000000 _RME_Thd_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:12147  .text._RME_Thd_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:12843  .text._RME_Thd_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:13233  .text._RME_Thd_Sched_Bind:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:13942  .text._RME_Thd_Sched_Free:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:14289  .text._RME_Thd_Exec_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:14540  .text._RME_Thd_Sched_Prio:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:14964  .text._RME_Thd_Sched_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:15221  .text._RME_Thd_Time_Xfer:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:15785  .text._RME_Thd_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:16163  .text._RME_Sig_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:16168  .text._RME_Sig_Boot_Crt:00000000 _RME_Sig_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:16394  .text._RME_Sig_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:16624  .text._RME_Sig_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:16903  .text._RME_Kern_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17013  .text._RME_Kern_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17136  .text._RME_Sig_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17428  .text._RME_Sig_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17581  .text._RME_Sig_Rcv:000001b4 $d
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17587  .text._RME_Sig_Rcv:000001c4 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:17830  .text._RME_Inv_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:18422  .text._RME_Inv_Del:00000000 $a
ARM GAS  C:\Users\even\AppData\Local\Temp\ccEYR6pl.s 			page 493


C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:18734  .text._RME_Inv_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:18921  .text._RME_Inv_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19190  .text._RME_Inv_Ret:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19397  .text._RME_Kfn_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19402  .text._RME_Kfn_Boot_Crt:00000000 _RME_Kfn_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19621  .text._RME_Kfn_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19811  .rodata.Table.1:00000000 $d
C:\Users\even\AppData\Local\Temp\ccEYR6pl.s:19836  .rodata.Table.0:00000000 $d
                           .group:00000000 wm4.0.cbcd577d9d448c52ea0a91d4889f53b3
                           .group:00000000 wm4.rme_platform_a7a.h.12.4ea7c3e7cd5be5689682b56f61920b43
                           .group:00000000 wm4.rme_platform_xc7z020.h.15.439a86713387cac48fb920c2c501913e
                           .group:00000000 wm4.rme_platform_a7a.h.136.4a0faa042aee30814e6d83fdc3818dd9
                           .group:00000000 wm4.rme_kernel.h.27.716340edb41bad57d522729bf2b8a38a
                           .group:00000000 wm4.rme.h.11.9832b5e30070a0fa5589a615f357d92d
                           .group:00000000 wm4.rme_kernel.h.185.3974182bb1c1d44bb740025d2e899ec7
                           .group:00000000 wm4.rme_platform_a7a.h.393.7eab80424ec01c7c054622820ea1dfa1
                           .group:00000000 wm4.rme_kernel.h.679.5cba0ca852965e732f79ab9e9cae51eb
                           .group:00000000 wm4.rme_kernel.h.931.195a8d5e67b80e684597a8ab796ee2a0
                           .group:00000000 wm4.rme_platform_a7a.h.509.b93141b5f0c7ef8d63e60646ec4b272e

UNDEFINED SYMBOLS
__aeabi_idiv
__aeabi_idivmod
__RME_Putchar
__RME_Int_Disable
__RME_Lowlvl_Init
__RME_Pgt_Kom_Init
__RME_Boot
__RME_Svc_Param_Get
__RME_Svc_Retval_Set
RME_A7A_Local
__RME_A7A_Write_Release
__RME_A7A_Read_Acquire
RME_A7A_Timestamp
__RME_Pgt_Check
__RME_Pgt_Init
__RME_Pgt_Page_Map
__RME_Pgt_Pgdir_Map
__RME_Pgt_Del_Check
__RME_Pgt_Lookup
__RME_Pgt_Page_Unmap
__RME_Pgt_Pgdir_Unmap
RME_A7A_Kot
__RME_A7A_MSB_Get
__RME_Thd_Reg_Copy
__RME_Pgt_Set
__RME_Thd_Reg_Init
__RME_Inv_Reg_Save
__RME_Inv_Reg_Restore
__RME_Inv_Retval_Set
__RME_Kfn_Handler
