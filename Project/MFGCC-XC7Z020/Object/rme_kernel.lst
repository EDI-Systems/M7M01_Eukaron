ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 1


   1              		.cpu cortex-a9
   2              		.arch armv7-a
   3              		.fpu neon-fp16
   4              		.arch_extension mp
   5              		.arch_extension sec
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"rme_kernel.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../../Source/Kernel/rme_kernel.c"
  20              		.section	.text.RME_Int_Print,"ax",%progbits
  21              		.align	2
  22              		.global	RME_Int_Print
  23              		.syntax unified
  24              		.arm
  26              	RME_Int_Print:
  27              	.LFB0:
   1:../../Source/Kernel/rme_kernel.c **** /******************************************************************************
   2:../../Source/Kernel/rme_kernel.c **** Filename    : rme_kernel.c
   3:../../Source/Kernel/rme_kernel.c **** Author      : pry
   4:../../Source/Kernel/rme_kernel.c **** Date        : 23/03/2017
   5:../../Source/Kernel/rme_kernel.c **** Licence     : The Unlicense; see LICENSE for details.
   6:../../Source/Kernel/rme_kernel.c **** Description : The system call processing path, debugging primitives and kernel
   7:../../Source/Kernel/rme_kernel.c ****               capability implementation for the RME system.
   8:../../Source/Kernel/rme_kernel.c **** 
   9:../../Source/Kernel/rme_kernel.c **** * Capability Table ************************************************************
  10:../../Source/Kernel/rme_kernel.c **** This section of code might be confusing if the underlying principles
  11:../../Source/Kernel/rme_kernel.c **** of capability-based systems is not well understood. 
  12:../../Source/Kernel/rme_kernel.c **** 1. Owning a capability means you have the power to use the function
  13:../../Source/Kernel/rme_kernel.c ****    represented by that capability.
  14:../../Source/Kernel/rme_kernel.c **** 2. Capabilities have an field called flags, which denotes what operations
  15:../../Source/Kernel/rme_kernel.c ****    is allowed on that captbl.
  16:../../Source/Kernel/rme_kernel.c **** 3. Owning a capability to a capability table means that you have the
  17:../../Source/Kernel/rme_kernel.c ****    power to modify the capability table's contents.
  18:../../Source/Kernel/rme_kernel.c **** 4. Creation and deletion of kernel objects is an operation on capability
  19:../../Source/Kernel/rme_kernel.c ****    table, thus requiring the capability to the capability table.
  20:../../Source/Kernel/rme_kernel.c **** 
  21:../../Source/Kernel/rme_kernel.c **** Remember we do not check our master table to see if it is frozen, or if it is
  22:../../Source/Kernel/rme_kernel.c **** captbl, or something, because if the master table's cap is not explicitly 
  23:../../Source/Kernel/rme_kernel.c **** passed in, we do not operate on it at all; If it is explicitly passed in, it
  24:../../Source/Kernel/rme_kernel.c **** will be checked.
  25:../../Source/Kernel/rme_kernel.c **** 
  26:../../Source/Kernel/rme_kernel.c **** There are 4 basic types of operations, as listed below:
  27:../../Source/Kernel/rme_kernel.c **** Operation                     What it does
  28:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  29:../../Source/Kernel/rme_kernel.c **** Create/Add-Dst                CAS the slot to CREATING state.
  30:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  31:../../Source/Kernel/rme_kernel.c ****                               Create kernel object.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 2


  32:../../Source/Kernel/rme_kernel.c ****                               Atomically update header to complete creation.
  33:../../Source/Kernel/rme_kernel.c **** Use/Add-Src                   Use the kernel object, have a WCET.
  34:../../Source/Kernel/rme_kernel.c **** Freeze                        Check timestamp for create-freeze QUIESCENCE.
  35:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  36:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to FROZEN state.
  37:../../Source/Kernel/rme_kernel.c **** Delete/Removal                Check FROZEN.
  38:../../Source/Kernel/rme_kernel.c ****                               Check timestamp for freeze-delete QUIESCENCE.
  39:../../Source/Kernel/rme_kernel.c ****                               Check REFCNT (delete only).
  40:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to empty.
  41:../../Source/Kernel/rme_kernel.c ****                               Delete the kernel object (delete only).
  42:../../Source/Kernel/rme_kernel.c **** 
  43:../../Source/Kernel/rme_kernel.c **** Hazard Table: (Operation 2 follows Operation 1)
  44:../../Source/Kernel/rme_kernel.c **** Operation 1    Operation 2    Reason why it is safe
  45:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  46:../../Source/Kernel/rme_kernel.c **** Create         Create         Only one creation will be successful, because 
  47:../../Source/Kernel/rme_kernel.c ****                               CREATING slot is done by CAS.
  48:../../Source/Kernel/rme_kernel.c **** Create         Delete         Create only set the CREATING. Delete will require
  49:../../Source/Kernel/rme_kernel.c ****                               a TYPE data, which will only be set after the 
  50:../../Source/Kernel/rme_kernel.c ****                               creation completes. ABA problem cannot occur
  51:../../Source/Kernel/rme_kernel.c ****                               because of create-freeze quiescence.
  52:../../Source/Kernel/rme_kernel.c ****                               If there is no quiescence between Create-Freeze, 
  53:../../Source/Kernel/rme_kernel.c ****                               the following may occur:
  54:../../Source/Kernel/rme_kernel.c ****                               T1: Check ---------------------------- Delete(CAS)
  55:../../Source/Kernel/rme_kernel.c ****                               T2: Check - Delete - Create - Freeze -------------
  56:../../Source/Kernel/rme_kernel.c ****                               In this case, thread 1 will perform a wrong 
  57:../../Source/Kernel/rme_kernel.c ****                               deletion on the new capability (the CAS will be
  58:../../Source/Kernel/rme_kernel.c ****                               successful), but this cap is actually a new cap 
  59:../../Source/Kernel/rme_kernel.c ****                               created by the thread 2 at the same location, not
  60:../../Source/Kernel/rme_kernel.c ****                               the old cap, and its quiescence may not be satisfied.
  61:../../Source/Kernel/rme_kernel.c **** Create         Freeze         OCCUPY only set the FROZEN. FROZEN will require
  62:../../Source/Kernel/rme_kernel.c ****                               that bit not set.
  63:../../Source/Kernel/rme_kernel.c **** Create         Add-Src        Add-Src will require a TYPE data, which will only
  64:../../Source/Kernel/rme_kernel.c ****                               be set after the creation completes.
  65:../../Source/Kernel/rme_kernel.c **** Create         Add-Dst        Only one creation will be successful, because 
  66:../../Source/Kernel/rme_kernel.c ****                               OCCUPY slot is done by CAS.
  67:../../Source/Kernel/rme_kernel.c **** Create         Remove         OCCUPY only set the FROZEN. Remove will require a
  68:../../Source/Kernel/rme_kernel.c ****                               TYPE data, which will only be set after the
  69:../../Source/Kernel/rme_kernel.c ****                               creation completes. See Create-Delete for details.
  70:../../Source/Kernel/rme_kernel.c **** Create         Use            OCCUPY only set the FROZEN. Use the cap will 
  71:../../Source/Kernel/rme_kernel.c ****                               require a TYPE data, which will only be set after
  72:../../Source/Kernel/rme_kernel.c ****                               the creation completes.
  73:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  74:../../Source/Kernel/rme_kernel.c **** Delete         Delete         Actual deletion done by CAS so only one deletion
  75:../../Source/Kernel/rme_kernel.c ****                               will be successful.
  76:../../Source/Kernel/rme_kernel.c **** Delete         Freeze         If the deletion fails and clears the FROZEN flag,
  77:../../Source/Kernel/rme_kernel.c ****                               nothing will be done;
  78:../../Source/Kernel/rme_kernel.c ****                               If it does not fail, then the cap will be erased,
  79:../../Source/Kernel/rme_kernel.c ****                               and the FREEZE CAS will not succeed.
  80:../../Source/Kernel/rme_kernel.c **** Delete         Remove         Only one will be successful because only the root
  81:../../Source/Kernel/rme_kernel.c ****                               can be DELETED.
  82:../../Source/Kernel/rme_kernel.c **** Delete         Others         Banned by the FROZEN flag before deletion. 
  83:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  84:../../Source/Kernel/rme_kernel.c **** Freeze         Create         Create fails because slot is still OCCUPY.
  85:../../Source/Kernel/rme_kernel.c **** Freeze         Delete         Delete fails if not FROZEN, or not QUIESCENT.
  86:../../Source/Kernel/rme_kernel.c **** Freeze         Remove         Remove fails if not FROZEN, or not QUIESCENT.
  87:../../Source/Kernel/rme_kernel.c **** Freeze         Freeze         Freeze done by CAS, and only one will be successful.
  88:../../Source/Kernel/rme_kernel.c **** Freeze         Others         Freeze bans them if they attempt after FROZEN set.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 3


  89:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  90:../../Source/Kernel/rme_kernel.c **** Add-Src        Create         Impossible because something in that slot.
  91:../../Source/Kernel/rme_kernel.c **** Add-Src        Freeze         Cannot freeze if already increased REFCNT. If they
  92:../../Source/Kernel/rme_kernel.c ****                               increase REFCNT just after FROZEN set, let it be.
  93:../../Source/Kernel/rme_kernel.c ****                               The cap can't be deleted because of non-zero REFCNT.
  94:../../Source/Kernel/rme_kernel.c **** Add-Src        Delete         Impossible because cap not FROZEN.
  95:../../Source/Kernel/rme_kernel.c **** Add-Src        Remove         Impossible because cap not FROZEN.
  96:../../Source/Kernel/rme_kernel.c **** Add-Src        Others         These operations can be parallel, which is fine.
  97:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  98:../../Source/Kernel/rme_kernel.c **** Add-Dst         ...           Conclusion same as Create operation.
  99:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 100:../../Source/Kernel/rme_kernel.c **** Remove          ...           Conclusion same as Delete operation.
 101:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 102:../../Source/Kernel/rme_kernel.c **** Use            Create         Impossible because something in that slot.
 103:../../Source/Kernel/rme_kernel.c **** Use            Delete         Impossible because not FROZEN. The use can't be
 104:../../Source/Kernel/rme_kernel.c ****                               from leaf caps as well because deletion will check
 105:../../Source/Kernel/rme_kernel.c ****                               the REFCNT, and if the REFCNT is 0, then the only
 106:../../Source/Kernel/rme_kernel.c ****                               case where an unsettled use can happen is that it
 107:../../Source/Kernel/rme_kernel.c ****                               happens within WCET time to REFCNT check time. This
 108:../../Source/Kernel/rme_kernel.c ****                               unsettled use must come from a leaf cap, as the use
 109:../../Source/Kernel/rme_kernel.c ****                               happened after the root gets FROZEN. This leaf cap
 110:../../Source/Kernel/rme_kernel.c ****                               itself, will set the REFCNT to 1, and it have no
 111:../../Source/Kernel/rme_kernel.c ****                               chance to freeze then remove itself before a WCET.
 112:../../Source/Kernel/rme_kernel.c ****                               The unsettled use case is thus impossible and there
 113:../../Source/Kernel/rme_kernel.c ****                               is no race. As long as all new reference to caps
 114:../../Source/Kernel/rme_kernel.c ****                               require an active cap passed in, there is no such
 115:../../Source/Kernel/rme_kernel.c ****                               race. Also, for cap creation, the header create step 
 116:../../Source/Kernel/rme_kernel.c ****                               must be the last step (after refcnt can be seen on
 117:../../Source/Kernel/rme_kernel.c ****                               all cores as we use write release semantics), and
 118:../../Source/Kernel/rme_kernel.c ****                               this ensures that no new leaf caps will be available
 119:../../Source/Kernel/rme_kernel.c ****                               for use before REFCNT is seen by all cores.
 120:../../Source/Kernel/rme_kernel.c **** Use            Freeze         It is fine.
 121:../../Source/Kernel/rme_kernel.c **** Use            Add-Src        It is fine.
 122:../../Source/Kernel/rme_kernel.c **** Use            Add-Dst        Impossible because something in that slot.
 123:../../Source/Kernel/rme_kernel.c **** Use            Remove         Impossible because not FROZEN.
 124:../../Source/Kernel/rme_kernel.c **** Use            Use            It is fine.
 125:../../Source/Kernel/rme_kernel.c **** 
 126:../../Source/Kernel/rme_kernel.c **** * Page Table ******************************************************************
 127:../../Source/Kernel/rme_kernel.c **** Different from most large-scale operating systems, RME requires the page tables
 128:../../Source/Kernel/rme_kernel.c **** to be constructed by the user-level rather than kernel logic. Yet, RME provided
 129:../../Source/Kernel/rme_kernel.c **** sufficient utilities for the user to conduct the necessary paging operations:
 130:../../Source/Kernel/rme_kernel.c **** 1. Creating page directories;
 131:../../Source/Kernel/rme_kernel.c **** 2. Deletiing page directories;
 132:../../Source/Kernel/rme_kernel.c **** 3. Adding(mapping) pages into page directories;
 133:../../Source/Kernel/rme_kernel.c **** 4. Deleting(unmapping) pages from page directories.
 134:../../Source/Kernel/rme_kernel.c **** 5. Constructing hierachical page tables;
 135:../../Source/Kernel/rme_kernel.c **** 6. Destructing hierachical page tables.
 136:../../Source/Kernel/rme_kernel.c **** 
 137:../../Source/Kernel/rme_kernel.c **** * Kernel Memory ***************************************************************
 138:../../Source/Kernel/rme_kernel.c **** Different seL4 and Composite, RME applys a principle that resembles Fiasco.OC's
 139:../../Source/Kernel/rme_kernel.c **** kernel object factory. However, this is simplified very much in RME - just a table
 140:../../Source/Kernel/rme_kernel.c **** for registering kernel memory usage! Some may think that this prohibits retyping;
 141:../../Source/Kernel/rme_kernel.c **** this is not true because we can implement it with a trusted user-level proxy.
 142:../../Source/Kernel/rme_kernel.c **** 
 143:../../Source/Kernel/rme_kernel.c **** * Process and Thread **********************************************************
 144:../../Source/Kernel/rme_kernel.c **** RME provided process as a light-weight virtual machine/container abstraction, 
 145:../../Source/Kernel/rme_kernel.c **** and a versatile thread abstraction. Processes enforce isolation, while threads
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 4


 146:../../Source/Kernel/rme_kernel.c **** carry out the task.
 147:../../Source/Kernel/rme_kernel.c **** There is no bind-bind race because bind is done using CAS.
 148:../../Source/Kernel/rme_kernel.c **** There is no bind-unbind race for scheduler thread because all are core-local.
 149:../../Source/Kernel/rme_kernel.c **** 
 150:../../Source/Kernel/rme_kernel.c **** * Signal and Invocation *******************************************************
 151:../../Source/Kernel/rme_kernel.c **** RME employs simple signal endpoints for interrupt passing, inter-core interrupt
 152:../../Source/Kernel/rme_kernel.c **** and asynchronous communication. Different from most operating systems, it employs
 153:../../Source/Kernel/rme_kernel.c **** thread migration model for cross-boundary synchronous communication rather than
 154:../../Source/Kernel/rme_kernel.c **** simple blockpoints. This invocation design have many benefits in many facets.
 155:../../Source/Kernel/rme_kernel.c **** 
 156:../../Source/Kernel/rme_kernel.c **** * Kernel Function *************************************************************
 157:../../Source/Kernel/rme_kernel.c **** There's no perfect operating system for a particular hardware. A hardware may
 158:../../Source/Kernel/rme_kernel.c **** have its own idiosyncrasies that needs extra hacks. RME's kernel function utility
 159:../../Source/Kernel/rme_kernel.c **** provides a disciplined way of making such hacks, in case you need to add new 
 160:../../Source/Kernel/rme_kernel.c **** system calls or directly manipulate hardware.
 161:../../Source/Kernel/rme_kernel.c **** 
 162:../../Source/Kernel/rme_kernel.c **** * The Use of 'volatile' *******************************************************
 163:../../Source/Kernel/rme_kernel.c **** 'volatile' is not needed in the kernel because the syscall interface acts as a
 164:../../Source/Kernel/rme_kernel.c **** natural compiler barrier. We're safe to assume that, during one syscall, data
 165:../../Source/Kernel/rme_kernel.c **** in memory remains unchanged. If anything changes, it has been dealt with the 
 166:../../Source/Kernel/rme_kernel.c **** dedicated assembly atomics. If LTO has been enabled, there are three cases:
 167:../../Source/Kernel/rme_kernel.c **** (1) Uniprocessor with C-implemented "atomics" with no real atomic support.
 168:../../Source/Kernel/rme_kernel.c ****     In this case, compiler barriers are not needed due to no kernel concurrency.
 169:../../Source/Kernel/rme_kernel.c **** (2) Multiprocessor with assembly-implemented atomics, but the compiler LTO does
 170:../../Source/Kernel/rme_kernel.c ****     not honor the assembly functions; instead it thinks that they are opaque.
 171:../../Source/Kernel/rme_kernel.c ****     In this case, the opaque function call itself is a full compiler barrier.
 172:../../Source/Kernel/rme_kernel.c **** (3) Multiprocessor with assembly-implemented atomics, and the compiler LTO does
 173:../../Source/Kernel/rme_kernel.c ****     honor the assembly functions.
 174:../../Source/Kernel/rme_kernel.c ****     In this case, the compiler should be aware of the semantics of the assembly,
 175:../../Source/Kernel/rme_kernel.c ****     and produce correct code.
 176:../../Source/Kernel/rme_kernel.c **** * Function Name Rules *********************************************************
 177:../../Source/Kernel/rme_kernel.c **** (1) No "_": OS entry function RME_Kmain and C entry "main".
 178:../../Source/Kernel/rme_kernel.c **** (2) "_"   : Kernel functions that are be called by kernel.
 179:../../Source/Kernel/rme_kernel.c **** (3) "__"  : HAL functions that are called by kernel.
 180:../../Source/Kernel/rme_kernel.c **** (4) "___" : HAL functions that should only be called by HAL.
 181:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 182:../../Source/Kernel/rme_kernel.c **** 
 183:../../Source/Kernel/rme_kernel.c **** /* Include *******************************************************************/
 184:../../Source/Kernel/rme_kernel.c **** #define __HDR_DEF__
 185:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 186:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 187:../../Source/Kernel/rme_kernel.c **** #undef __HDR_DEF__
 188:../../Source/Kernel/rme_kernel.c **** 
 189:../../Source/Kernel/rme_kernel.c **** #define __HDR_STRUCT__
 190:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 191:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 192:../../Source/Kernel/rme_kernel.c **** #undef __HDR_STRUCT__
 193:../../Source/Kernel/rme_kernel.c **** 
 194:../../Source/Kernel/rme_kernel.c **** /* Private include */
 195:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 196:../../Source/Kernel/rme_kernel.c **** 
 197:../../Source/Kernel/rme_kernel.c **** #define __HDR_PUBLIC__
 198:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 199:../../Source/Kernel/rme_kernel.c **** #undef __HDR_PUBLIC__
 200:../../Source/Kernel/rme_kernel.c **** /* End Include ***************************************************************/
 201:../../Source/Kernel/rme_kernel.c **** 
 202:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Int_Print *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 5


 203:../../Source/Kernel/rme_kernel.c **** Description : Print a signed integer on the debugging console. This integer is
 204:../../Source/Kernel/rme_kernel.c ****               printed as decimal with sign.
 205:../../Source/Kernel/rme_kernel.c **** Input       : rme_cnt_t Int - The integer to print.
 206:../../Source/Kernel/rme_kernel.c **** Output      : None.
 207:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 208:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 209:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 210:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Int_Print(rme_cnt_t Int)
 211:../../Source/Kernel/rme_kernel.c **** {
  28              		.loc 1 211 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 00482DE9 		push	{fp, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 11, -8
  35              		.cfi_offset 14, -4
  36 0004 04B08DE2 		add	fp, sp, #4
  37              		.cfi_def_cfa 11, 4
  38 0008 20D04DE2 		sub	sp, sp, #32
  39 000c 20000BE5 		str	r0, [fp, #-32]
 212:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Num;
 213:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Abs;
 214:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Iter;
 215:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
 216:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Div;
 217:../../Source/Kernel/rme_kernel.c ****     
 218:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 219:../../Source/Kernel/rme_kernel.c ****     if(Int==0)
  40              		.loc 1 219 7
  41 0010 20301BE5 		ldr	r3, [fp, #-32]
  42 0014 000053E3 		cmp	r3, #0
  43 0018 0300001A 		bne	.L2
 220:../../Source/Kernel/rme_kernel.c ****     {
 221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 222:../../Source/Kernel/rme_kernel.c **** 
 223:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
  44              		.loc 1 223 9
  45 001c 3000A0E3 		mov	r0, #48
  46 0020 FEFFFFEB 		bl	__RME_Putchar
 224:../../Source/Kernel/rme_kernel.c ****         return 1;
  47              		.loc 1 224 16
  48 0024 0130A0E3 		mov	r3, #1
  49 0028 500000EA 		b	.L3
  50              	.L2:
 225:../../Source/Kernel/rme_kernel.c ****     }
 226:../../Source/Kernel/rme_kernel.c ****     else
 227:../../Source/Kernel/rme_kernel.c ****     {
 228:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 229:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 230:../../Source/Kernel/rme_kernel.c ****     }
 231:../../Source/Kernel/rme_kernel.c **** 
 232:../../Source/Kernel/rme_kernel.c **** 
 233:../../Source/Kernel/rme_kernel.c ****     /* Correct all negatives into positives */
 234:../../Source/Kernel/rme_kernel.c ****     if(Int<0)
  51              		.loc 1 234 7
  52 002c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 6


  53 0030 000053E3 		cmp	r3, #0
  54 0034 070000AA 		bge	.L4
 235:../../Source/Kernel/rme_kernel.c ****     {
 236:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 237:../../Source/Kernel/rme_kernel.c **** 
 238:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('-');
  55              		.loc 1 238 9
  56 0038 2D00A0E3 		mov	r0, #45
  57 003c FEFFFFEB 		bl	__RME_Putchar
 239:../../Source/Kernel/rme_kernel.c ****         Abs=-Int;
  58              		.loc 1 239 12
  59 0040 20301BE5 		ldr	r3, [fp, #-32]
  60 0044 003063E2 		rsb	r3, r3, #0
  61 0048 0C300BE5 		str	r3, [fp, #-12]
 240:../../Source/Kernel/rme_kernel.c ****         Num=1;
  62              		.loc 1 240 12
  63 004c 0130A0E3 		mov	r3, #1
  64 0050 08300BE5 		str	r3, [fp, #-8]
  65 0054 030000EA 		b	.L5
  66              	.L4:
 241:../../Source/Kernel/rme_kernel.c ****     }
 242:../../Source/Kernel/rme_kernel.c ****     else
 243:../../Source/Kernel/rme_kernel.c ****     {
 244:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 245:../../Source/Kernel/rme_kernel.c **** 
 246:../../Source/Kernel/rme_kernel.c ****         Abs=Int;
  67              		.loc 1 246 12
  68 0058 20301BE5 		ldr	r3, [fp, #-32]
  69 005c 0C300BE5 		str	r3, [fp, #-12]
 247:../../Source/Kernel/rme_kernel.c ****         Num=0;
  70              		.loc 1 247 12
  71 0060 0030A0E3 		mov	r3, #0
  72 0064 08300BE5 		str	r3, [fp, #-8]
  73              	.L5:
 248:../../Source/Kernel/rme_kernel.c ****     }
 249:../../Source/Kernel/rme_kernel.c **** 
 250:../../Source/Kernel/rme_kernel.c ****     /* How many digits are there? */
 251:../../Source/Kernel/rme_kernel.c ****     Count=0;
  74              		.loc 1 251 10
  75 0068 0030A0E3 		mov	r3, #0
  76 006c 14300BE5 		str	r3, [fp, #-20]
 252:../../Source/Kernel/rme_kernel.c ****     Div=1;
  77              		.loc 1 252 8
  78 0070 0130A0E3 		mov	r3, #1
  79 0074 18300BE5 		str	r3, [fp, #-24]
 253:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
  80              		.loc 1 253 9
  81 0078 0C301BE5 		ldr	r3, [fp, #-12]
  82 007c 10300BE5 		str	r3, [fp, #-16]
  83              	.L9:
 254:../../Source/Kernel/rme_kernel.c ****     while(1U)
 255:../../Source/Kernel/rme_kernel.c ****     {
 256:../../Source/Kernel/rme_kernel.c ****         Iter/=10;
  84              		.loc 1 256 13
  85 0080 10201BE5 		ldr	r2, [fp, #-16]
  86 0084 673606E3 		movw	r3, #26215
  87 0088 663646E3 		movt	r3, 26214
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 7


  88 008c 9312C3E0 		smull	r1, r3, r3, r2
  89 0090 4311A0E1 		asr	r1, r3, #2
  90 0094 C23FA0E1 		asr	r3, r2, #31
  91 0098 033041E0 		sub	r3, r1, r3
  92 009c 10300BE5 		str	r3, [fp, #-16]
 257:../../Source/Kernel/rme_kernel.c ****         Count++;
  93              		.loc 1 257 14
  94 00a0 14301BE5 		ldr	r3, [fp, #-20]
  95 00a4 013083E2 		add	r3, r3, #1
  96 00a8 14300BE5 		str	r3, [fp, #-20]
 258:../../Source/Kernel/rme_kernel.c ****         if(Iter!=0)
  97              		.loc 1 258 11
  98 00ac 10301BE5 		ldr	r3, [fp, #-16]
  99 00b0 000053E3 		cmp	r3, #0
 100 00b4 0600000A 		beq	.L12
 259:../../Source/Kernel/rme_kernel.c ****         {
 260:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 261:../../Source/Kernel/rme_kernel.c **** 
 262:../../Source/Kernel/rme_kernel.c ****             Div*=10;
 101              		.loc 1 262 16
 102 00b8 18201BE5 		ldr	r2, [fp, #-24]
 103 00bc 0230A0E1 		mov	r3, r2
 104 00c0 0331A0E1 		lsl	r3, r3, #2
 105 00c4 023083E0 		add	r3, r3, r2
 106 00c8 8330A0E1 		lsl	r3, r3, #1
 107 00cc 18300BE5 		str	r3, [fp, #-24]
 256:../../Source/Kernel/rme_kernel.c ****         Count++;
 108              		.loc 1 256 13
 109 00d0 EAFFFFEA 		b	.L9
 110              	.L12:
 263:../../Source/Kernel/rme_kernel.c ****         }
 264:../../Source/Kernel/rme_kernel.c ****         else
 265:../../Source/Kernel/rme_kernel.c ****         {
 266:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 267:../../Source/Kernel/rme_kernel.c **** 
 268:../../Source/Kernel/rme_kernel.c ****             break;
 111              		.loc 1 268 13
 112 00d4 00F020E3 		nop
 269:../../Source/Kernel/rme_kernel.c ****         }
 270:../../Source/Kernel/rme_kernel.c ****     }
 271:../../Source/Kernel/rme_kernel.c ****     Num+=Count;
 113              		.loc 1 271 8
 114 00d8 08201BE5 		ldr	r2, [fp, #-8]
 115 00dc 14301BE5 		ldr	r3, [fp, #-20]
 116 00e0 033082E0 		add	r3, r2, r3
 117 00e4 08300BE5 		str	r3, [fp, #-8]
 272:../../Source/Kernel/rme_kernel.c **** 
 273:../../Source/Kernel/rme_kernel.c ****     /* Print the integer */
 274:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
 118              		.loc 1 274 9
 119 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 120 00ec 10300BE5 		str	r3, [fp, #-16]
 275:../../Source/Kernel/rme_kernel.c **** 
 276:../../Source/Kernel/rme_kernel.c ****     while(Count>0)
 121              		.loc 1 276 10
 122 00f0 1A0000EA 		b	.L10
 123              	.L11:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 8


 277:../../Source/Kernel/rme_kernel.c ****     {
 278:../../Source/Kernel/rme_kernel.c ****         Count--;
 124              		.loc 1 278 14
 125 00f4 14301BE5 		ldr	r3, [fp, #-20]
 126 00f8 013043E2 		sub	r3, r3, #1
 127 00fc 14300BE5 		str	r3, [fp, #-20]
 279:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar((rme_s8_t)(Iter/Div)+'0');
 128              		.loc 1 279 38
 129 0100 18101BE5 		ldr	r1, [fp, #-24]
 130 0104 10001BE5 		ldr	r0, [fp, #-16]
 131 0108 FEFFFFEB 		bl	__aeabi_idiv
 132 010c 0030A0E1 		mov	r3, r0
 133              		.loc 1 279 23
 134 0110 7330EFE6 		uxtb	r3, r3
 135              		.loc 1 279 43
 136 0114 303083E2 		add	r3, r3, #48
 137 0118 7330EFE6 		uxtb	r3, r3
 138              		.loc 1 279 9
 139 011c 7330AFE6 		sxtb	r3, r3
 140 0120 0300A0E1 		mov	r0, r3
 141 0124 FEFFFFEB 		bl	__RME_Putchar
 280:../../Source/Kernel/rme_kernel.c ****         Iter=Iter%Div;
 142              		.loc 1 280 13
 143 0128 10301BE5 		ldr	r3, [fp, #-16]
 144 012c 18101BE5 		ldr	r1, [fp, #-24]
 145 0130 0300A0E1 		mov	r0, r3
 146 0134 FEFFFFEB 		bl	__aeabi_idivmod
 147 0138 0130A0E1 		mov	r3, r1
 148 013c 10300BE5 		str	r3, [fp, #-16]
 281:../../Source/Kernel/rme_kernel.c ****         Div/=10;
 149              		.loc 1 281 12
 150 0140 18201BE5 		ldr	r2, [fp, #-24]
 151 0144 673606E3 		movw	r3, #26215
 152 0148 663646E3 		movt	r3, 26214
 153 014c 9312C3E0 		smull	r1, r3, r3, r2
 154 0150 4311A0E1 		asr	r1, r3, #2
 155 0154 C23FA0E1 		asr	r3, r2, #31
 156 0158 033041E0 		sub	r3, r1, r3
 157 015c 18300BE5 		str	r3, [fp, #-24]
 158              	.L10:
 276:../../Source/Kernel/rme_kernel.c ****     {
 159              		.loc 1 276 16
 160 0160 14301BE5 		ldr	r3, [fp, #-20]
 161 0164 000053E3 		cmp	r3, #0
 162 0168 E1FFFFCA 		bgt	.L11
 282:../../Source/Kernel/rme_kernel.c ****     }
 283:../../Source/Kernel/rme_kernel.c ****     
 284:../../Source/Kernel/rme_kernel.c ****     return Num;
 163              		.loc 1 284 12
 164 016c 08301BE5 		ldr	r3, [fp, #-8]
 165              	.L3:
 285:../../Source/Kernel/rme_kernel.c **** }
 166              		.loc 1 285 1
 167 0170 0300A0E1 		mov	r0, r3
 168 0174 04D04BE2 		sub	sp, fp, #4
 169              		.cfi_def_cfa 13, 8
 170              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 9


 171 0178 0088BDE8 		pop	{fp, pc}
 172              		.cfi_endproc
 173              	.LFE0:
 175              		.section	.text.RME_Hex_Print,"ax",%progbits
 176              		.align	2
 177              		.global	RME_Hex_Print
 178              		.syntax unified
 179              		.arm
 181              	RME_Hex_Print:
 182              	.LFB1:
 286:../../Source/Kernel/rme_kernel.c **** #endif
 287:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Int_Print ************************************************/
 288:../../Source/Kernel/rme_kernel.c **** 
 289:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Hex_Print *****************************************************
 290:../../Source/Kernel/rme_kernel.c **** Description : Print a unsigned integer on the debugging console. This integer is
 291:../../Source/Kernel/rme_kernel.c ****               printed as hexadecimal.
 292:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Uint - The unsigned integer to print.
 293:../../Source/Kernel/rme_kernel.c **** Output      : None.
 294:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 295:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 296:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 297:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Hex_Print(rme_ptr_t Uint)
 298:../../Source/Kernel/rme_kernel.c **** {
 183              		.loc 1 298 1
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 24
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 00482DE9 		push	{fp, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 11, -8
 190              		.cfi_offset 14, -4
 191 0004 04B08DE2 		add	fp, sp, #4
 192              		.cfi_def_cfa 11, 4
 193 0008 18D04DE2 		sub	sp, sp, #24
 194 000c 18000BE5 		str	r0, [fp, #-24]
 299:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Iter;
 300:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 301:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Num;
 302:../../Source/Kernel/rme_kernel.c ****     
 303:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 304:../../Source/Kernel/rme_kernel.c ****     if(Uint==0U)
 195              		.loc 1 304 7
 196 0010 18301BE5 		ldr	r3, [fp, #-24]
 197 0014 000053E3 		cmp	r3, #0
 198 0018 0300001A 		bne	.L14
 305:../../Source/Kernel/rme_kernel.c ****     {
 306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 307:../../Source/Kernel/rme_kernel.c ****         
 308:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
 199              		.loc 1 308 9
 200 001c 3000A0E3 		mov	r0, #48
 201 0020 FEFFFFEB 		bl	__RME_Putchar
 309:../../Source/Kernel/rme_kernel.c ****         return 1;
 202              		.loc 1 309 16
 203 0024 0130A0E3 		mov	r3, #1
 204 0028 330000EA 		b	.L15
 205              	.L14:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 10


 310:../../Source/Kernel/rme_kernel.c ****     }
 311:../../Source/Kernel/rme_kernel.c ****     else
 312:../../Source/Kernel/rme_kernel.c ****     {
 313:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 314:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 315:../../Source/Kernel/rme_kernel.c ****     }
 316:../../Source/Kernel/rme_kernel.c **** 
 317:../../Source/Kernel/rme_kernel.c ****     /* Filter out all the zeroes */
 318:../../Source/Kernel/rme_kernel.c ****     Count=0U;
 206              		.loc 1 318 10
 207 002c 0030A0E3 		mov	r3, #0
 208 0030 0C300BE5 		str	r3, [fp, #-12]
 319:../../Source/Kernel/rme_kernel.c ****     Iter=Uint;
 209              		.loc 1 319 9
 210 0034 18301BE5 		ldr	r3, [fp, #-24]
 211 0038 08300BE5 		str	r3, [fp, #-8]
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 212              		.loc 1 320 10
 213 003c 050000EA 		b	.L16
 214              	.L17:
 321:../../Source/Kernel/rme_kernel.c ****     {
 322:../../Source/Kernel/rme_kernel.c ****         Iter<<=4;
 215              		.loc 1 322 13
 216 0040 08301BE5 		ldr	r3, [fp, #-8]
 217 0044 0332A0E1 		lsl	r3, r3, #4
 218 0048 08300BE5 		str	r3, [fp, #-8]
 323:../../Source/Kernel/rme_kernel.c ****         Count++;
 219              		.loc 1 323 14
 220 004c 0C301BE5 		ldr	r3, [fp, #-12]
 221 0050 013083E2 		add	r3, r3, #1
 222 0054 0C300BE5 		str	r3, [fp, #-12]
 223              	.L16:
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 224              		.loc 1 320 16
 225 0058 08301BE5 		ldr	r3, [fp, #-8]
 226 005c 233EA0E1 		lsr	r3, r3, #28
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 227              		.loc 1 320 36
 228 0060 000053E3 		cmp	r3, #0
 229 0064 F5FFFF0A 		beq	.L17
 324:../../Source/Kernel/rme_kernel.c ****     }
 325:../../Source/Kernel/rme_kernel.c ****     
 326:../../Source/Kernel/rme_kernel.c ****     /* Count is the number of pts to print */
 327:../../Source/Kernel/rme_kernel.c ****     Count=RME_POW2(RME_WORD_ORDER-2U)-Count;
 230              		.loc 1 327 10
 231 0068 0C301BE5 		ldr	r3, [fp, #-12]
 232 006c 083063E2 		rsb	r3, r3, #8
 233 0070 0C300BE5 		str	r3, [fp, #-12]
 328:../../Source/Kernel/rme_kernel.c ****     Num=Count;
 234              		.loc 1 328 8
 235 0074 0C301BE5 		ldr	r3, [fp, #-12]
 236 0078 10300BE5 		str	r3, [fp, #-16]
 329:../../Source/Kernel/rme_kernel.c ****     while(Count>0U)
 237              		.loc 1 329 10
 238 007c 1A0000EA 		b	.L18
 239              	.L20:
 330:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 11


 331:../../Source/Kernel/rme_kernel.c ****         Count--;
 240              		.loc 1 331 14
 241 0080 0C301BE5 		ldr	r3, [fp, #-12]
 242 0084 013043E2 		sub	r3, r3, #1
 243 0088 0C300BE5 		str	r3, [fp, #-12]
 332:../../Source/Kernel/rme_kernel.c ****         Iter=(Uint>>(Count<<2U))&0x0FU;
 244              		.loc 1 332 27
 245 008c 0C301BE5 		ldr	r3, [fp, #-12]
 246 0090 0331A0E1 		lsl	r3, r3, #2
 247              		.loc 1 332 19
 248 0094 18201BE5 		ldr	r2, [fp, #-24]
 249 0098 3233A0E1 		lsr	r3, r2, r3
 250              		.loc 1 332 13
 251 009c 0F3003E2 		and	r3, r3, #15
 252 00a0 08300BE5 		str	r3, [fp, #-8]
 333:../../Source/Kernel/rme_kernel.c ****         if(Iter<10U)
 253              		.loc 1 333 11
 254 00a4 08301BE5 		ldr	r3, [fp, #-8]
 255 00a8 090053E3 		cmp	r3, #9
 256 00ac 0700008A 		bhi	.L19
 334:../../Source/Kernel/rme_kernel.c ****         {
 335:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 336:../../Source/Kernel/rme_kernel.c ****             
 337:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'0');
 257              		.loc 1 337 27
 258 00b0 08301BE5 		ldr	r3, [fp, #-8]
 259 00b4 7330EFE6 		uxtb	r3, r3
 260              		.loc 1 337 41
 261 00b8 303083E2 		add	r3, r3, #48
 262 00bc 7330EFE6 		uxtb	r3, r3
 263              		.loc 1 337 13
 264 00c0 7330AFE6 		sxtb	r3, r3
 265 00c4 0300A0E1 		mov	r0, r3
 266 00c8 FEFFFFEB 		bl	__RME_Putchar
 267 00cc 060000EA 		b	.L18
 268              	.L19:
 338:../../Source/Kernel/rme_kernel.c ****         }
 339:../../Source/Kernel/rme_kernel.c ****         else
 340:../../Source/Kernel/rme_kernel.c ****         {
 341:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 342:../../Source/Kernel/rme_kernel.c ****             
 343:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'A'-10);
 269              		.loc 1 343 27
 270 00d0 08301BE5 		ldr	r3, [fp, #-8]
 271 00d4 7330EFE6 		uxtb	r3, r3
 272              		.loc 1 343 45
 273 00d8 373083E2 		add	r3, r3, #55
 274 00dc 7330EFE6 		uxtb	r3, r3
 275              		.loc 1 343 13
 276 00e0 7330AFE6 		sxtb	r3, r3
 277 00e4 0300A0E1 		mov	r0, r3
 278 00e8 FEFFFFEB 		bl	__RME_Putchar
 279              	.L18:
 329:../../Source/Kernel/rme_kernel.c ****     {
 280              		.loc 1 329 16
 281 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 282 00f0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 12


 283 00f4 E1FFFF1A 		bne	.L20
 344:../../Source/Kernel/rme_kernel.c ****         }
 345:../../Source/Kernel/rme_kernel.c ****     }
 346:../../Source/Kernel/rme_kernel.c ****     
 347:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Num;
 284              		.loc 1 347 12
 285 00f8 10301BE5 		ldr	r3, [fp, #-16]
 286              	.L15:
 348:../../Source/Kernel/rme_kernel.c **** }
 287              		.loc 1 348 1
 288 00fc 0300A0E1 		mov	r0, r3
 289 0100 04D04BE2 		sub	sp, fp, #4
 290              		.cfi_def_cfa 13, 8
 291              		@ sp needed
 292 0104 0088BDE8 		pop	{fp, pc}
 293              		.cfi_endproc
 294              	.LFE1:
 296              		.section	.text.RME_Str_Print,"ax",%progbits
 297              		.align	2
 298              		.global	RME_Str_Print
 299              		.syntax unified
 300              		.arm
 302              	RME_Str_Print:
 303              	.LFB2:
 349:../../Source/Kernel/rme_kernel.c **** #endif
 350:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Hex_Print ************************************************/
 351:../../Source/Kernel/rme_kernel.c **** 
 352:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Str_Print *****************************************************
 353:../../Source/Kernel/rme_kernel.c **** Description : Print a string the kernel console.
 354:../../Source/Kernel/rme_kernel.c ****               This is only used for kernel-level debugging.
 355:../../Source/Kernel/rme_kernel.c **** Input       : const rme_s8_t* String - The string to print
 356:../../Source/Kernel/rme_kernel.c **** Output      : None.
 357:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed, the '\0' is not included.
 358:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 359:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 360:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Str_Print(const rme_s8_t* String)
 361:../../Source/Kernel/rme_kernel.c **** {
 304              		.loc 1 361 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 00482DE9 		push	{fp, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 11, -8
 311              		.cfi_offset 14, -4
 312 0004 04B08DE2 		add	fp, sp, #4
 313              		.cfi_def_cfa 11, 4
 314 0008 10D04DE2 		sub	sp, sp, #16
 315 000c 10000BE5 		str	r0, [fp, #-16]
 362:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 363:../../Source/Kernel/rme_kernel.c ****     
 364:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_DBGLOG_MAX;Count++)
 316              		.loc 1 364 14
 317 0010 0030A0E3 		mov	r3, #0
 318 0014 08300BE5 		str	r3, [fp, #-8]
 319              		.loc 1 364 5
 320 0018 0E0000EA 		b	.L22
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 13


 321              	.L25:
 365:../../Source/Kernel/rme_kernel.c ****     {
 366:../../Source/Kernel/rme_kernel.c ****         if(String[Count]==(rme_s8_t)'\0')
 322              		.loc 1 366 18
 323 001c 10201BE5 		ldr	r2, [fp, #-16]
 324 0020 08301BE5 		ldr	r3, [fp, #-8]
 325 0024 033082E0 		add	r3, r2, r3
 326 0028 D030D3E1 		ldrsb	r3, [r3]
 327              		.loc 1 366 11
 328 002c 000053E3 		cmp	r3, #0
 329 0030 0C00000A 		beq	.L27
 367:../../Source/Kernel/rme_kernel.c ****         {
 368:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 369:../../Source/Kernel/rme_kernel.c ****             
 370:../../Source/Kernel/rme_kernel.c ****             break;
 371:../../Source/Kernel/rme_kernel.c ****         }
 372:../../Source/Kernel/rme_kernel.c ****         else
 373:../../Source/Kernel/rme_kernel.c ****         {
 374:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 375:../../Source/Kernel/rme_kernel.c ****             /* No action required */
 376:../../Source/Kernel/rme_kernel.c ****         }
 377:../../Source/Kernel/rme_kernel.c ****         
 378:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar(String[Count]);
 330              		.loc 1 378 29
 331 0034 10201BE5 		ldr	r2, [fp, #-16]
 332 0038 08301BE5 		ldr	r3, [fp, #-8]
 333 003c 033082E0 		add	r3, r2, r3
 334              		.loc 1 378 9
 335 0040 D030D3E1 		ldrsb	r3, [r3]
 336 0044 0300A0E1 		mov	r0, r3
 337 0048 FEFFFFEB 		bl	__RME_Putchar
 364:../../Source/Kernel/rme_kernel.c ****     {
 338              		.loc 1 364 44 discriminator 2
 339 004c 08301BE5 		ldr	r3, [fp, #-8]
 340 0050 013083E2 		add	r3, r3, #1
 341 0054 08300BE5 		str	r3, [fp, #-8]
 342              	.L22:
 364:../../Source/Kernel/rme_kernel.c ****     {
 343              		.loc 1 364 23 discriminator 1
 344 0058 08301BE5 		ldr	r3, [fp, #-8]
 345 005c FE0053E3 		cmp	r3, #254
 346 0060 EDFFFF9A 		bls	.L25
 347 0064 000000EA 		b	.L24
 348              	.L27:
 370:../../Source/Kernel/rme_kernel.c ****         }
 349              		.loc 1 370 13
 350 0068 00F020E3 		nop
 351              	.L24:
 379:../../Source/Kernel/rme_kernel.c ****     }
 380:../../Source/Kernel/rme_kernel.c ****     
 381:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Count;
 352              		.loc 1 381 12
 353 006c 08301BE5 		ldr	r3, [fp, #-8]
 382:../../Source/Kernel/rme_kernel.c **** }
 354              		.loc 1 382 1
 355 0070 0300A0E1 		mov	r0, r3
 356 0074 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 14


 357              		.cfi_def_cfa 13, 8
 358              		@ sp needed
 359 0078 0088BDE8 		pop	{fp, pc}
 360              		.cfi_endproc
 361              	.LFE2:
 363              		.section	.rodata
 364              		.align	2
 365              	.LC0:
 366 0000 0D0A2A2A 		.ascii	"\015\012***\015\012Kernel panic - not syncing :\015"
 366      2A0D0A4B 
 366      65726E65 
 366      6C207061 
 366      6E696320 
 367 0024 0A00     		.ascii	"\012\000"
 368 0026 0000     		.align	2
 369              	.LC1:
 370 0028 202C204C 		.ascii	" , Line \000"
 370      696E6520 
 370      00
 371 0031 000000   		.align	2
 372              	.LC2:
 373 0034 0D0A00   		.ascii	"\015\012\000"
 374 0037 00       		.align	2
 375              	.LC3:
 376 0038 202C2000 		.ascii	" , \000"
 377              		.section	.text.RME_Log,"ax",%progbits
 378              		.align	2
 379              		.global	RME_Log
 380              		.syntax unified
 381              		.arm
 383              	RME_Log:
 384              	.LFB3:
 383:../../Source/Kernel/rme_kernel.c **** #endif
 384:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Str_Print ************************************************/
 385:../../Source/Kernel/rme_kernel.c **** 
 386:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Log ***********************************************************
 387:../../Source/Kernel/rme_kernel.c **** Description : Default logging function, will be used when the user does not 
 388:../../Source/Kernel/rme_kernel.c ****               supply one. This will only be called when the kernel panics.
 389:../../Source/Kernel/rme_kernel.c **** Input       : const char* File - The filename.
 390:../../Source/Kernel/rme_kernel.c ****               long Line - The line number.
 391:../../Source/Kernel/rme_kernel.c ****               const char* Date - The compilation date.
 392:../../Source/Kernel/rme_kernel.c ****               const char* Time - The compilation time.
 393:../../Source/Kernel/rme_kernel.c **** Output      : None.
 394:../../Source/Kernel/rme_kernel.c **** Return      : None.
 395:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 396:../../Source/Kernel/rme_kernel.c **** #ifndef RME_LOG
 397:../../Source/Kernel/rme_kernel.c **** void RME_Log(const char* File,
 398:../../Source/Kernel/rme_kernel.c ****              long Line,
 399:../../Source/Kernel/rme_kernel.c ****              const char* Date,
 400:../../Source/Kernel/rme_kernel.c ****              const char* Time)
 401:../../Source/Kernel/rme_kernel.c **** {
 385              		.loc 1 401 1
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 00482DE9 		push	{fp, lr}
 390              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 15


 391              		.cfi_offset 11, -8
 392              		.cfi_offset 14, -4
 393 0004 04B08DE2 		add	fp, sp, #4
 394              		.cfi_def_cfa 11, 4
 395 0008 10D04DE2 		sub	sp, sp, #16
 396 000c 08000BE5 		str	r0, [fp, #-8]
 397 0010 0C100BE5 		str	r1, [fp, #-12]
 398 0014 10200BE5 		str	r2, [fp, #-16]
 399 0018 14300BE5 		str	r3, [fp, #-20]
 402:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n***\r\nKernel panic - not syncing :\r\n"); \
 400              		.loc 1 402 5
 401 001c 000000E3 		movw	r0, #:lower16:.LC0
 402 0020 000040E3 		movt	r0, #:upper16:.LC0
 403 0024 FEFFFFEB 		bl	RME_Str_Print
 403:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(File); \
 404              		.loc 1 403 5
 405 0028 08001BE5 		ldr	r0, [fp, #-8]
 406 002c FEFFFFEB 		bl	RME_Str_Print
 404:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , Line "); \
 407              		.loc 1 404 5
 408 0030 000000E3 		movw	r0, #:lower16:.LC1
 409 0034 000040E3 		movt	r0, #:upper16:.LC1
 410 0038 FEFFFFEB 		bl	RME_Str_Print
 405:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Line); \
 411              		.loc 1 405 5
 412 003c 0C001BE5 		ldr	r0, [fp, #-12]
 413 0040 FEFFFFEB 		bl	RME_Int_Print
 406:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 414              		.loc 1 406 5
 415 0044 000000E3 		movw	r0, #:lower16:.LC2
 416 0048 000040E3 		movt	r0, #:upper16:.LC2
 417 004c FEFFFFEB 		bl	RME_Str_Print
 407:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Date); \
 418              		.loc 1 407 5
 419 0050 10001BE5 		ldr	r0, [fp, #-16]
 420 0054 FEFFFFEB 		bl	RME_Str_Print
 408:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , "); \
 421              		.loc 1 408 5
 422 0058 000000E3 		movw	r0, #:lower16:.LC3
 423 005c 000040E3 		movt	r0, #:upper16:.LC3
 424 0060 FEFFFFEB 		bl	RME_Str_Print
 409:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Time); \
 425              		.loc 1 409 5
 426 0064 14001BE5 		ldr	r0, [fp, #-20]
 427 0068 FEFFFFEB 		bl	RME_Str_Print
 410:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 428              		.loc 1 410 5
 429 006c 000000E3 		movw	r0, #:lower16:.LC2
 430 0070 000040E3 		movt	r0, #:upper16:.LC2
 431 0074 FEFFFFEB 		bl	RME_Str_Print
 411:../../Source/Kernel/rme_kernel.c **** }
 432              		.loc 1 411 1
 433 0078 00F020E3 		nop
 434 007c 04D04BE2 		sub	sp, fp, #4
 435              		.cfi_def_cfa 13, 8
 436              		@ sp needed
 437 0080 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 16


 438              		.cfi_endproc
 439              	.LFE3:
 441              		.section	.text._RME_MSB_Generic,"ax",%progbits
 442              		.align	2
 443              		.global	_RME_MSB_Generic
 444              		.syntax unified
 445              		.arm
 447              	_RME_MSB_Generic:
 448              	.LFB4:
 412:../../Source/Kernel/rme_kernel.c **** #endif
 413:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Log ******************************************************/
 414:../../Source/Kernel/rme_kernel.c **** 
 415:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Cov_Print *****************************************************
 416:../../Source/Kernel/rme_kernel.c **** Description : The coverage data printer. Should always be disabled for all cases
 417:../../Source/Kernel/rme_kernel.c ****               except where a kernel coverage test is needed. This should never
 418:../../Source/Kernel/rme_kernel.c ****               be called any any user application; for coverage testing only.
 419:../../Source/Kernel/rme_kernel.c **** Input       : None.
 420:../../Source/Kernel/rme_kernel.c **** Output      : None.
 421:../../Source/Kernel/rme_kernel.c **** Return      : None.
 422:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 423:../../Source/Kernel/rme_kernel.c **** #ifdef RME_COV_LINE_NUM
 424:../../Source/Kernel/rme_kernel.c **** void RME_Cov_Print(void)
 425:../../Source/Kernel/rme_kernel.c **** {
 426:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Count;
 427:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Next;
 428:../../Source/Kernel/rme_kernel.c ****     
 429:../../Source/Kernel/rme_kernel.c ****     Next=0U;
 430:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_COV_LINE_NUM;Count++)
 431:../../Source/Kernel/rme_kernel.c ****     {
 432:../../Source/Kernel/rme_kernel.c ****         if(RME_BITMAP_IS_SET(RME_Cov,Count))
 433:../../Source/Kernel/rme_kernel.c ****         {
 434:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 435:../../Source/Kernel/rme_kernel.c ****             RME_DBG_I(Count);
 436:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S(",");
 437:../../Source/Kernel/rme_kernel.c ****             /* We put 12 markers on a single line */
 438:../../Source/Kernel/rme_kernel.c ****             Next++;
 439:../../Source/Kernel/rme_kernel.c ****             if(Next>11U)
 440:../../Source/Kernel/rme_kernel.c ****             {
 441:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 442:../../Source/Kernel/rme_kernel.c ****                 
 443:../../Source/Kernel/rme_kernel.c ****                 Next=0U;
 444:../../Source/Kernel/rme_kernel.c ****                 RME_DBG_S("\r\n");
 445:../../Source/Kernel/rme_kernel.c ****             }
 446:../../Source/Kernel/rme_kernel.c ****             else
 447:../../Source/Kernel/rme_kernel.c ****             {
 448:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 449:../../Source/Kernel/rme_kernel.c ****                 /* No action needed */
 450:../../Source/Kernel/rme_kernel.c ****             }
 451:../../Source/Kernel/rme_kernel.c ****         }
 452:../../Source/Kernel/rme_kernel.c ****         else
 453:../../Source/Kernel/rme_kernel.c ****         {
 454:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 455:../../Source/Kernel/rme_kernel.c ****             /* No action needed */
 456:../../Source/Kernel/rme_kernel.c ****         }
 457:../../Source/Kernel/rme_kernel.c ****     }
 458:../../Source/Kernel/rme_kernel.c **** }
 459:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 17


 460:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Cov_Print ************************************************/
 461:../../Source/Kernel/rme_kernel.c **** 
 462:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_MSB_Generic **************************************************
 463:../../Source/Kernel/rme_kernel.c **** Description : Find the MSB's position. This is a portable solution for all
 464:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 465:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 466:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to compute for.
 467:../../Source/Kernel/rme_kernel.c **** Output      : None.
 468:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 469:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 470:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_MSB_Generic(rme_ptr_t Value)
 471:../../Source/Kernel/rme_kernel.c **** {
 449              		.loc 1 471 1
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 16
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 04B02DE5 		str	fp, [sp, #-4]!
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 11, -4
 457 0004 00B08DE2 		add	fp, sp, #0
 458              		.cfi_def_cfa_register 11
 459 0008 14D04DE2 		sub	sp, sp, #20
 460 000c 10000BE5 		str	r0, [fp, #-16]
 472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 473:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 474:../../Source/Kernel/rme_kernel.c ****     {
 475:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,1U,2U,2U,2U,2U,3U,3U,3U,3U,3U,3U,3U,3U,
 476:../../Source/Kernel/rme_kernel.c ****         4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,
 477:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 478:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 479:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 480:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 481:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 482:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 483:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 484:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 485:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 486:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 487:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 488:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 489:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 490:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U
 491:../../Source/Kernel/rme_kernel.c ****     };
 492:../../Source/Kernel/rme_kernel.c **** 
 493:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 494:../../Source/Kernel/rme_kernel.c ****     /* 15-8 */
 495:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(8U))
 496:../../Source/Kernel/rme_kernel.c ****     {
 497:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 498:../../Source/Kernel/rme_kernel.c ****         
 499:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 500:../../Source/Kernel/rme_kernel.c ****     }
 501:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 502:../../Source/Kernel/rme_kernel.c ****     else
 503:../../Source/Kernel/rme_kernel.c ****     {
 504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 18


 505:../../Source/Kernel/rme_kernel.c ****         
 506:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 507:../../Source/Kernel/rme_kernel.c ****     }
 508:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 509:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 510:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(16U))
 461              		.loc 1 510 7
 462 0010 10301BE5 		ldr	r3, [fp, #-16]
 463 0014 010853E3 		cmp	r3, #65536
 464 0018 0800003A 		bcc	.L30
 511:../../Source/Kernel/rme_kernel.c ****     {
 512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 513:../../Source/Kernel/rme_kernel.c ****         
 514:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 515:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(24U))
 465              		.loc 1 515 11
 466 001c 10301BE5 		ldr	r3, [fp, #-16]
 467 0020 010453E3 		cmp	r3, #16777216
 468 0024 0200003A 		bcc	.L31
 516:../../Source/Kernel/rme_kernel.c ****         {
 517:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 518:../../Source/Kernel/rme_kernel.c ****             
 519:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 469              		.loc 1 519 16
 470 0028 1830A0E3 		mov	r3, #24
 471 002c 08300BE5 		str	r3, [fp, #-8]
 472 0030 0A0000EA 		b	.L32
 473              	.L31:
 520:../../Source/Kernel/rme_kernel.c ****         }
 521:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 522:../../Source/Kernel/rme_kernel.c ****         else
 523:../../Source/Kernel/rme_kernel.c ****         {
 524:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 525:../../Source/Kernel/rme_kernel.c ****             
 526:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 474              		.loc 1 526 16
 475 0034 1030A0E3 		mov	r3, #16
 476 0038 08300BE5 		str	r3, [fp, #-8]
 477 003c 070000EA 		b	.L32
 478              	.L30:
 527:../../Source/Kernel/rme_kernel.c ****         }
 528:../../Source/Kernel/rme_kernel.c ****     }
 529:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 530:../../Source/Kernel/rme_kernel.c ****     else
 531:../../Source/Kernel/rme_kernel.c ****     {
 532:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 533:../../Source/Kernel/rme_kernel.c ****         
 534:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 535:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(8U))
 479              		.loc 1 535 11
 480 0040 10301BE5 		ldr	r3, [fp, #-16]
 481 0044 FF0053E3 		cmp	r3, #255
 482 0048 0200009A 		bls	.L33
 536:../../Source/Kernel/rme_kernel.c ****         {
 537:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 538:../../Source/Kernel/rme_kernel.c ****             
 539:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 19


 483              		.loc 1 539 16
 484 004c 0830A0E3 		mov	r3, #8
 485 0050 08300BE5 		str	r3, [fp, #-8]
 486 0054 010000EA 		b	.L32
 487              	.L33:
 540:../../Source/Kernel/rme_kernel.c ****         }
 541:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 542:../../Source/Kernel/rme_kernel.c ****         else
 543:../../Source/Kernel/rme_kernel.c ****         {
 544:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 545:../../Source/Kernel/rme_kernel.c ****             
 546:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 488              		.loc 1 546 16
 489 0058 0030A0E3 		mov	r3, #0
 490 005c 08300BE5 		str	r3, [fp, #-8]
 491              	.L32:
 547:../../Source/Kernel/rme_kernel.c ****         }
 548:../../Source/Kernel/rme_kernel.c ****     }
 549:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 550:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 551:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(32U))
 552:../../Source/Kernel/rme_kernel.c ****     {
 553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 554:../../Source/Kernel/rme_kernel.c ****         
 555:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 556:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(48U))
 557:../../Source/Kernel/rme_kernel.c ****         {
 558:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 559:../../Source/Kernel/rme_kernel.c ****             
 560:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 561:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(56U))
 562:../../Source/Kernel/rme_kernel.c ****             {
 563:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 564:../../Source/Kernel/rme_kernel.c ****                 
 565:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 566:../../Source/Kernel/rme_kernel.c ****             }
 567:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 568:../../Source/Kernel/rme_kernel.c ****             else
 569:../../Source/Kernel/rme_kernel.c ****             {
 570:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 571:../../Source/Kernel/rme_kernel.c ****                 
 572:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 573:../../Source/Kernel/rme_kernel.c ****             }
 574:../../Source/Kernel/rme_kernel.c ****         }
 575:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 576:../../Source/Kernel/rme_kernel.c ****         else
 577:../../Source/Kernel/rme_kernel.c ****         {
 578:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 579:../../Source/Kernel/rme_kernel.c ****             
 580:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 581:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(40U))
 582:../../Source/Kernel/rme_kernel.c ****             {
 583:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 584:../../Source/Kernel/rme_kernel.c ****                 
 585:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 586:../../Source/Kernel/rme_kernel.c ****             }
 587:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 20


 588:../../Source/Kernel/rme_kernel.c ****             else
 589:../../Source/Kernel/rme_kernel.c ****             {
 590:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 591:../../Source/Kernel/rme_kernel.c ****                 
 592:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 593:../../Source/Kernel/rme_kernel.c ****             }
 594:../../Source/Kernel/rme_kernel.c ****         }
 595:../../Source/Kernel/rme_kernel.c ****     }
 596:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 597:../../Source/Kernel/rme_kernel.c ****     else
 598:../../Source/Kernel/rme_kernel.c ****     {
 599:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 600:../../Source/Kernel/rme_kernel.c ****         
 601:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 602:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(16U))
 603:../../Source/Kernel/rme_kernel.c ****         {
 604:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 605:../../Source/Kernel/rme_kernel.c ****             
 606:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 607:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(24U))
 608:../../Source/Kernel/rme_kernel.c ****             {
 609:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 610:../../Source/Kernel/rme_kernel.c ****                 
 611:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 612:../../Source/Kernel/rme_kernel.c ****             }
 613:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 614:../../Source/Kernel/rme_kernel.c ****             else
 615:../../Source/Kernel/rme_kernel.c ****             {
 616:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 617:../../Source/Kernel/rme_kernel.c ****                 
 618:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 619:../../Source/Kernel/rme_kernel.c ****             }
 620:../../Source/Kernel/rme_kernel.c ****         }
 621:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 622:../../Source/Kernel/rme_kernel.c ****         else
 623:../../Source/Kernel/rme_kernel.c ****         {
 624:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 625:../../Source/Kernel/rme_kernel.c ****             
 626:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 627:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(8U))
 628:../../Source/Kernel/rme_kernel.c ****             {
 629:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 630:../../Source/Kernel/rme_kernel.c ****                 
 631:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 632:../../Source/Kernel/rme_kernel.c ****             }
 633:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 634:../../Source/Kernel/rme_kernel.c ****             else
 635:../../Source/Kernel/rme_kernel.c ****             {
 636:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 637:../../Source/Kernel/rme_kernel.c ****                 
 638:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 639:../../Source/Kernel/rme_kernel.c ****             }
 640:../../Source/Kernel/rme_kernel.c ****         }
 641:../../Source/Kernel/rme_kernel.c ****     }
 642:../../Source/Kernel/rme_kernel.c **** #else
 643:../../Source/Kernel/rme_kernel.c **** #error Generic MSB for 128-bits & above are not implemented.
 644:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 21


 645:../../Source/Kernel/rme_kernel.c **** 
 646:../../Source/Kernel/rme_kernel.c ****     return Table[Value>>Bit]+Bit;
 492              		.loc 1 646 23
 493 0060 10201BE5 		ldr	r2, [fp, #-16]
 494 0064 08301BE5 		ldr	r3, [fp, #-8]
 495 0068 3223A0E1 		lsr	r2, r2, r3
 496              		.loc 1 646 17
 497 006c 003000E3 		movw	r3, #:lower16:Table.1
 498 0070 003040E3 		movt	r3, #:upper16:Table.1
 499 0074 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 500 0078 0320A0E1 		mov	r2, r3
 501              		.loc 1 646 29
 502 007c 08301BE5 		ldr	r3, [fp, #-8]
 503 0080 033082E0 		add	r3, r2, r3
 647:../../Source/Kernel/rme_kernel.c **** }
 504              		.loc 1 647 1
 505 0084 0300A0E1 		mov	r0, r3
 506 0088 00D08BE2 		add	sp, fp, #0
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 008c 04B09DE4 		ldr	fp, [sp], #4
 510              		.cfi_restore 11
 511              		.cfi_def_cfa_offset 0
 512 0090 1EFF2FE1 		bx	lr
 513              		.cfi_endproc
 514              	.LFE4:
 516              		.section	.text._RME_LSB_Generic,"ax",%progbits
 517              		.align	2
 518              		.global	_RME_LSB_Generic
 519              		.syntax unified
 520              		.arm
 522              	_RME_LSB_Generic:
 523              	.LFB5:
 648:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_MSB_Generic *********************************************/
 649:../../Source/Kernel/rme_kernel.c **** 
 650:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_LSB_Generic **************************************************
 651:../../Source/Kernel/rme_kernel.c **** Description : Find the LSB's position. This is a portable solution for all
 652:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 653:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 654:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to count.
 655:../../Source/Kernel/rme_kernel.c **** Output      : None.
 656:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 657:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 658:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_LSB_Generic(rme_ptr_t Value)
 659:../../Source/Kernel/rme_kernel.c **** {
 524              		.loc 1 659 1
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529 0000 04B02DE5 		str	fp, [sp, #-4]!
 530              		.cfi_def_cfa_offset 4
 531              		.cfi_offset 11, -4
 532 0004 00B08DE2 		add	fp, sp, #0
 533              		.cfi_def_cfa_register 11
 534 0008 14D04DE2 		sub	sp, sp, #20
 535 000c 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 22


 660:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 661:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 662:../../Source/Kernel/rme_kernel.c ****     {
 663:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 664:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 665:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 666:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 667:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 668:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 669:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 670:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 671:../../Source/Kernel/rme_kernel.c ****         7U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 672:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 673:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 674:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 675:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 676:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 677:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 678:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U
 679:../../Source/Kernel/rme_kernel.c ****     };
 680:../../Source/Kernel/rme_kernel.c ****     
 681:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 682:../../Source/Kernel/rme_kernel.c ****     /* 16-8 */
 683:../../Source/Kernel/rme_kernel.c ****     if((Value<<8U)==0U)
 684:../../Source/Kernel/rme_kernel.c ****     {
 685:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 686:../../Source/Kernel/rme_kernel.c ****         
 687:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 688:../../Source/Kernel/rme_kernel.c ****     }
 689:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 690:../../Source/Kernel/rme_kernel.c ****     else
 691:../../Source/Kernel/rme_kernel.c ****     {
 692:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 693:../../Source/Kernel/rme_kernel.c ****         
 694:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 695:../../Source/Kernel/rme_kernel.c ****     }
 696:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 697:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 698:../../Source/Kernel/rme_kernel.c ****     if((Value<<16U)==0U)
 536              		.loc 1 698 14
 537 0010 10301BE5 		ldr	r3, [fp, #-16]
 538 0014 0338A0E1 		lsl	r3, r3, #16
 539              		.loc 1 698 7
 540 0018 000053E3 		cmp	r3, #0
 541 001c 0900001A 		bne	.L36
 699:../../Source/Kernel/rme_kernel.c ****     {
 700:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 701:../../Source/Kernel/rme_kernel.c ****         
 702:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 703:../../Source/Kernel/rme_kernel.c ****         if((Value<<8U)==0U)
 542              		.loc 1 703 18
 543 0020 10301BE5 		ldr	r3, [fp, #-16]
 544 0024 0334A0E1 		lsl	r3, r3, #8
 545              		.loc 1 703 11
 546 0028 000053E3 		cmp	r3, #0
 547 002c 0200001A 		bne	.L37
 704:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 23


 705:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 706:../../Source/Kernel/rme_kernel.c ****             
 707:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 548              		.loc 1 707 16
 549 0030 1830A0E3 		mov	r3, #24
 550 0034 08300BE5 		str	r3, [fp, #-8]
 551 0038 0B0000EA 		b	.L38
 552              	.L37:
 708:../../Source/Kernel/rme_kernel.c ****         }
 709:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 710:../../Source/Kernel/rme_kernel.c ****         else
 711:../../Source/Kernel/rme_kernel.c ****         {
 712:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 713:../../Source/Kernel/rme_kernel.c ****             
 714:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 553              		.loc 1 714 16
 554 003c 1030A0E3 		mov	r3, #16
 555 0040 08300BE5 		str	r3, [fp, #-8]
 556 0044 080000EA 		b	.L38
 557              	.L36:
 715:../../Source/Kernel/rme_kernel.c ****         }
 716:../../Source/Kernel/rme_kernel.c ****     }
 717:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 718:../../Source/Kernel/rme_kernel.c ****     else
 719:../../Source/Kernel/rme_kernel.c ****     {
 720:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 721:../../Source/Kernel/rme_kernel.c ****         
 722:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 723:../../Source/Kernel/rme_kernel.c ****         if((Value<<24U)==0U)
 558              		.loc 1 723 18
 559 0048 10301BE5 		ldr	r3, [fp, #-16]
 560 004c 033CA0E1 		lsl	r3, r3, #24
 561              		.loc 1 723 11
 562 0050 000053E3 		cmp	r3, #0
 563 0054 0200001A 		bne	.L39
 724:../../Source/Kernel/rme_kernel.c ****         {
 725:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 726:../../Source/Kernel/rme_kernel.c ****             
 727:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 564              		.loc 1 727 16
 565 0058 0830A0E3 		mov	r3, #8
 566 005c 08300BE5 		str	r3, [fp, #-8]
 567 0060 010000EA 		b	.L38
 568              	.L39:
 728:../../Source/Kernel/rme_kernel.c ****         }
 729:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 730:../../Source/Kernel/rme_kernel.c ****         else
 731:../../Source/Kernel/rme_kernel.c ****         {
 732:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 733:../../Source/Kernel/rme_kernel.c ****             
 734:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 569              		.loc 1 734 16
 570 0064 0030A0E3 		mov	r3, #0
 571 0068 08300BE5 		str	r3, [fp, #-8]
 572              	.L38:
 735:../../Source/Kernel/rme_kernel.c ****         }
 736:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 24


 737:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 738:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 739:../../Source/Kernel/rme_kernel.c ****     if((Value<<32U)==0U)
 740:../../Source/Kernel/rme_kernel.c ****     {
 741:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 742:../../Source/Kernel/rme_kernel.c ****         
 743:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 744:../../Source/Kernel/rme_kernel.c ****         if((Value<<16U)==0U)
 745:../../Source/Kernel/rme_kernel.c ****         {
 746:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 747:../../Source/Kernel/rme_kernel.c ****             
 748:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 749:../../Source/Kernel/rme_kernel.c ****             if((Value<<8U)==0U)
 750:../../Source/Kernel/rme_kernel.c ****             {
 751:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 752:../../Source/Kernel/rme_kernel.c ****                 
 753:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 754:../../Source/Kernel/rme_kernel.c ****             }
 755:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 756:../../Source/Kernel/rme_kernel.c ****             else
 757:../../Source/Kernel/rme_kernel.c ****             {
 758:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 759:../../Source/Kernel/rme_kernel.c ****                 
 760:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 761:../../Source/Kernel/rme_kernel.c ****             }
 762:../../Source/Kernel/rme_kernel.c ****         }
 763:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 764:../../Source/Kernel/rme_kernel.c ****         else
 765:../../Source/Kernel/rme_kernel.c ****         {
 766:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 767:../../Source/Kernel/rme_kernel.c ****             
 768:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 769:../../Source/Kernel/rme_kernel.c ****             if((Value<<24U)==0U)
 770:../../Source/Kernel/rme_kernel.c ****             {
 771:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 772:../../Source/Kernel/rme_kernel.c ****                 
 773:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 774:../../Source/Kernel/rme_kernel.c ****             }
 775:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 776:../../Source/Kernel/rme_kernel.c ****             else
 777:../../Source/Kernel/rme_kernel.c ****             {
 778:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 779:../../Source/Kernel/rme_kernel.c ****                 
 780:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 781:../../Source/Kernel/rme_kernel.c ****             }
 782:../../Source/Kernel/rme_kernel.c ****         }
 783:../../Source/Kernel/rme_kernel.c ****     }
 784:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 785:../../Source/Kernel/rme_kernel.c ****     else
 786:../../Source/Kernel/rme_kernel.c ****     {
 787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 788:../../Source/Kernel/rme_kernel.c ****         
 789:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 790:../../Source/Kernel/rme_kernel.c ****         if((Value<<48U)==0U)
 791:../../Source/Kernel/rme_kernel.c ****         {
 792:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 793:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 25


 794:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 795:../../Source/Kernel/rme_kernel.c ****             if((Value<<40U)==0U)
 796:../../Source/Kernel/rme_kernel.c ****             {
 797:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 798:../../Source/Kernel/rme_kernel.c ****                 
 799:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 800:../../Source/Kernel/rme_kernel.c ****             }
 801:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 802:../../Source/Kernel/rme_kernel.c ****             else
 803:../../Source/Kernel/rme_kernel.c ****             {
 804:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 805:../../Source/Kernel/rme_kernel.c ****                 
 806:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 807:../../Source/Kernel/rme_kernel.c ****             }
 808:../../Source/Kernel/rme_kernel.c ****         }
 809:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 810:../../Source/Kernel/rme_kernel.c ****         else
 811:../../Source/Kernel/rme_kernel.c ****         {
 812:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 813:../../Source/Kernel/rme_kernel.c ****             
 814:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 815:../../Source/Kernel/rme_kernel.c ****             if((Value<<56U)==0U)
 816:../../Source/Kernel/rme_kernel.c ****             {
 817:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 818:../../Source/Kernel/rme_kernel.c ****                 
 819:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 820:../../Source/Kernel/rme_kernel.c ****             }
 821:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 822:../../Source/Kernel/rme_kernel.c ****             else
 823:../../Source/Kernel/rme_kernel.c ****             {
 824:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 825:../../Source/Kernel/rme_kernel.c ****                 
 826:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 827:../../Source/Kernel/rme_kernel.c ****             }
 828:../../Source/Kernel/rme_kernel.c ****         }
 829:../../Source/Kernel/rme_kernel.c ****     }
 830:../../Source/Kernel/rme_kernel.c **** #else
 831:../../Source/Kernel/rme_kernel.c **** #error Generic LSB for 128-bits & above are not implemented.
 832:../../Source/Kernel/rme_kernel.c **** #endif
 833:../../Source/Kernel/rme_kernel.c **** 
 834:../../Source/Kernel/rme_kernel.c ****     return Table[(rme_u8_t)(Value>>Bit)]+Bit;
 573              		.loc 1 834 34
 574 006c 10201BE5 		ldr	r2, [fp, #-16]
 575 0070 08301BE5 		ldr	r3, [fp, #-8]
 576 0074 3233A0E1 		lsr	r3, r2, r3
 577              		.loc 1 834 18
 578 0078 7330EFE6 		uxtb	r3, r3
 579 007c 0320A0E1 		mov	r2, r3
 580              		.loc 1 834 17
 581 0080 003000E3 		movw	r3, #:lower16:Table.0
 582 0084 003040E3 		movt	r3, #:upper16:Table.0
 583 0088 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 584 008c 0320A0E1 		mov	r2, r3
 585              		.loc 1 834 41
 586 0090 08301BE5 		ldr	r3, [fp, #-8]
 587 0094 033082E0 		add	r3, r2, r3
 835:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 26


 588              		.loc 1 835 1
 589 0098 0300A0E1 		mov	r0, r3
 590 009c 00D08BE2 		add	sp, fp, #0
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 00a0 04B09DE4 		ldr	fp, [sp], #4
 594              		.cfi_restore 11
 595              		.cfi_def_cfa_offset 0
 596 00a4 1EFF2FE1 		bx	lr
 597              		.cfi_endproc
 598              	.LFE5:
 600              		.section	.text._RME_Comp_Swap_Single,"ax",%progbits
 601              		.align	2
 602              		.global	_RME_Comp_Swap_Single
 603              		.syntax unified
 604              		.arm
 606              	_RME_Comp_Swap_Single:
 607              	.LFB6:
 836:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_LSB_Generic *********************************************/
 837:../../Source/Kernel/rme_kernel.c **** 
 838:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Comp_Swap_Single *********************************************
 839:../../Source/Kernel/rme_kernel.c **** Description : The compare-and-swap atomic instruction. If the Old value is
 840:../../Source/Kernel/rme_kernel.c ****               equal to *Ptr, then set the *Ptr as New and return 1; else return
 841:../../Source/Kernel/rme_kernel.c ****               0.
 842:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 843:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 844:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Old - The old value.
 845:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t New - The new value.
 846:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 847:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - If successful, 1; else 0.
 848:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 849:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Comp_Swap_Single(volatile rme_ptr_t* Ptr,
 850:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Old,
 851:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t New)
 852:../../Source/Kernel/rme_kernel.c **** {
 608              		.loc 1 852 1
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 16
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613 0000 04B02DE5 		str	fp, [sp, #-4]!
 614              		.cfi_def_cfa_offset 4
 615              		.cfi_offset 11, -4
 616 0004 00B08DE2 		add	fp, sp, #0
 617              		.cfi_def_cfa_register 11
 618 0008 14D04DE2 		sub	sp, sp, #20
 619 000c 08000BE5 		str	r0, [fp, #-8]
 620 0010 0C100BE5 		str	r1, [fp, #-12]
 621 0014 10200BE5 		str	r2, [fp, #-16]
 853:../../Source/Kernel/rme_kernel.c ****     if(*Ptr==Old)
 622              		.loc 1 853 8
 623 0018 08301BE5 		ldr	r3, [fp, #-8]
 624 001c 003093E5 		ldr	r3, [r3]
 625              		.loc 1 853 7
 626 0020 0C201BE5 		ldr	r2, [fp, #-12]
 627 0024 030052E1 		cmp	r2, r3
 628 0028 0400001A 		bne	.L42
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 27


 854:../../Source/Kernel/rme_kernel.c ****     {
 855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 856:../../Source/Kernel/rme_kernel.c ****         
 857:../../Source/Kernel/rme_kernel.c ****         *Ptr=New;
 629              		.loc 1 857 13
 630 002c 08301BE5 		ldr	r3, [fp, #-8]
 631 0030 10201BE5 		ldr	r2, [fp, #-16]
 632 0034 002083E5 		str	r2, [r3]
 858:../../Source/Kernel/rme_kernel.c ****         return 1U;
 633              		.loc 1 858 16
 634 0038 0130A0E3 		mov	r3, #1
 635 003c 000000EA 		b	.L43
 636              	.L42:
 859:../../Source/Kernel/rme_kernel.c ****     }
 860:../../Source/Kernel/rme_kernel.c ****     else
 861:../../Source/Kernel/rme_kernel.c ****     {
 862:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 863:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 864:../../Source/Kernel/rme_kernel.c ****     }
 865:../../Source/Kernel/rme_kernel.c **** 
 866:../../Source/Kernel/rme_kernel.c ****     return 0U;
 637              		.loc 1 866 12
 638 0040 0030A0E3 		mov	r3, #0
 639              	.L43:
 867:../../Source/Kernel/rme_kernel.c **** }
 640              		.loc 1 867 1
 641 0044 0300A0E1 		mov	r0, r3
 642 0048 00D08BE2 		add	sp, fp, #0
 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 004c 04B09DE4 		ldr	fp, [sp], #4
 646              		.cfi_restore 11
 647              		.cfi_def_cfa_offset 0
 648 0050 1EFF2FE1 		bx	lr
 649              		.cfi_endproc
 650              	.LFE6:
 652              		.section	.text._RME_Fetch_Add_Single,"ax",%progbits
 653              		.align	2
 654              		.global	_RME_Fetch_Add_Single
 655              		.syntax unified
 656              		.arm
 658              	_RME_Fetch_Add_Single:
 659              	.LFB7:
 868:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Comp_Swap_Single ****************************************/
 869:../../Source/Kernel/rme_kernel.c **** 
 870:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_Add_Single *********************************************
 871:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-add atomic instruction. Increase the value that is
 872:../../Source/Kernel/rme_kernel.c ****               pointed to by the pointer, and return the value before addition.
 873:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 874:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 875:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Addend - The number to add.
 876:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 877:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the addition.
 878:../../Source/Kernel/rme_kernel.c **** *******************************************************************************/
 879:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_Add_Single(volatile rme_ptr_t* Ptr,
 880:../../Source/Kernel/rme_kernel.c ****                                 rme_cnt_t Addend)
 881:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 28


 660              		.loc 1 881 1
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 16
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 04B02DE5 		str	fp, [sp, #-4]!
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 11, -4
 668 0004 00B08DE2 		add	fp, sp, #0
 669              		.cfi_def_cfa_register 11
 670 0008 14D04DE2 		sub	sp, sp, #20
 671 000c 10000BE5 		str	r0, [fp, #-16]
 672 0010 14100BE5 		str	r1, [fp, #-20]
 882:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Old;
 883:../../Source/Kernel/rme_kernel.c **** 
 884:../../Source/Kernel/rme_kernel.c ****     Old=(rme_cnt_t)(*Ptr);
 673              		.loc 1 884 21
 674 0014 10301BE5 		ldr	r3, [fp, #-16]
 675 0018 003093E5 		ldr	r3, [r3]
 676              		.loc 1 884 8
 677 001c 08300BE5 		str	r3, [fp, #-8]
 885:../../Source/Kernel/rme_kernel.c ****     *Ptr=(rme_ptr_t)(Old+Addend);
 678              		.loc 1 885 25
 679 0020 08201BE5 		ldr	r2, [fp, #-8]
 680 0024 14301BE5 		ldr	r3, [fp, #-20]
 681 0028 033082E0 		add	r3, r2, r3
 682              		.loc 1 885 10
 683 002c 0320A0E1 		mov	r2, r3
 684              		.loc 1 885 9
 685 0030 10301BE5 		ldr	r3, [fp, #-16]
 686 0034 002083E5 		str	r2, [r3]
 886:../../Source/Kernel/rme_kernel.c **** 
 887:../../Source/Kernel/rme_kernel.c ****     return (rme_ptr_t)Old;
 687              		.loc 1 887 12
 688 0038 08301BE5 		ldr	r3, [fp, #-8]
 888:../../Source/Kernel/rme_kernel.c **** }
 689              		.loc 1 888 1
 690 003c 0300A0E1 		mov	r0, r3
 691 0040 00D08BE2 		add	sp, fp, #0
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 0044 04B09DE4 		ldr	fp, [sp], #4
 695              		.cfi_restore 11
 696              		.cfi_def_cfa_offset 0
 697 0048 1EFF2FE1 		bx	lr
 698              		.cfi_endproc
 699              	.LFE7:
 701              		.section	.text._RME_Fetch_And_Single,"ax",%progbits
 702              		.align	2
 703              		.global	_RME_Fetch_And_Single
 704              		.syntax unified
 705              		.arm
 707              	_RME_Fetch_And_Single:
 708              	.LFB8:
 889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_Add_Single ****************************************/
 890:../../Source/Kernel/rme_kernel.c **** 
 891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_And_Single *********************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 29


 892:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-logic-and atomic instruction. Logic AND the pointer
 893:../../Source/Kernel/rme_kernel.c ****               value with the operand, and return the value before logic AND.
 894:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 895:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 896:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Operand - The number to logic AND with the destination.
 897:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 898:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the AND operation.
 899:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 900:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_And_Single(volatile rme_ptr_t* Ptr,
 901:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Operand)
 902:../../Source/Kernel/rme_kernel.c **** {
 709              		.loc 1 902 1
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 16
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 04B02DE5 		str	fp, [sp, #-4]!
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 11, -4
 717 0004 00B08DE2 		add	fp, sp, #0
 718              		.cfi_def_cfa_register 11
 719 0008 14D04DE2 		sub	sp, sp, #20
 720 000c 10000BE5 		str	r0, [fp, #-16]
 721 0010 14100BE5 		str	r1, [fp, #-20]
 903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old;
 904:../../Source/Kernel/rme_kernel.c **** 
 905:../../Source/Kernel/rme_kernel.c ****     Old=*Ptr;
 722              		.loc 1 905 8
 723 0014 10301BE5 		ldr	r3, [fp, #-16]
 724 0018 003093E5 		ldr	r3, [r3]
 725 001c 08300BE5 		str	r3, [fp, #-8]
 906:../../Source/Kernel/rme_kernel.c ****     *Ptr=Old&Operand;
 726              		.loc 1 906 13
 727 0020 08201BE5 		ldr	r2, [fp, #-8]
 728 0024 14301BE5 		ldr	r3, [fp, #-20]
 729 0028 032002E0 		and	r2, r2, r3
 730              		.loc 1 906 9
 731 002c 10301BE5 		ldr	r3, [fp, #-16]
 732 0030 002083E5 		str	r2, [r3]
 907:../../Source/Kernel/rme_kernel.c **** 
 908:../../Source/Kernel/rme_kernel.c ****     return Old;
 733              		.loc 1 908 12
 734 0034 08301BE5 		ldr	r3, [fp, #-8]
 909:../../Source/Kernel/rme_kernel.c **** }
 735              		.loc 1 909 1
 736 0038 0300A0E1 		mov	r0, r3
 737 003c 00D08BE2 		add	sp, fp, #0
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0040 04B09DE4 		ldr	fp, [sp], #4
 741              		.cfi_restore 11
 742              		.cfi_def_cfa_offset 0
 743 0044 1EFF2FE1 		bx	lr
 744              		.cfi_endproc
 745              	.LFE8:
 747              		.section	.text._RME_List_Crt,"ax",%progbits
 748              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 30


 749              		.global	_RME_List_Crt
 750              		.syntax unified
 751              		.arm
 753              	_RME_List_Crt:
 754              	.LFB9:
 910:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_And_Single ****************************************/
 911:../../Source/Kernel/rme_kernel.c **** 
 912:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Crt *****************************************************
 913:../../Source/Kernel/rme_kernel.c **** Description : Create a doubly linked list.
 914:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Head - The pointer to the list head.
 915:../../Source/Kernel/rme_kernel.c **** Output      : None.
 916:../../Source/Kernel/rme_kernel.c **** Return      : None.
 917:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 918:../../Source/Kernel/rme_kernel.c **** void _RME_List_Crt(struct RME_List* Head)
 919:../../Source/Kernel/rme_kernel.c **** {
 755              		.loc 1 919 1
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760 0000 04B02DE5 		str	fp, [sp, #-4]!
 761              		.cfi_def_cfa_offset 4
 762              		.cfi_offset 11, -4
 763 0004 00B08DE2 		add	fp, sp, #0
 764              		.cfi_def_cfa_register 11
 765 0008 0CD04DE2 		sub	sp, sp, #12
 766 000c 08000BE5 		str	r0, [fp, #-8]
 920:../../Source/Kernel/rme_kernel.c ****     Head->Prev=Head;
 767              		.loc 1 920 15
 768 0010 08301BE5 		ldr	r3, [fp, #-8]
 769 0014 08201BE5 		ldr	r2, [fp, #-8]
 770 0018 042083E5 		str	r2, [r3, #4]
 921:../../Source/Kernel/rme_kernel.c ****     Head->Next=Head;
 771              		.loc 1 921 15
 772 001c 08301BE5 		ldr	r3, [fp, #-8]
 773 0020 08201BE5 		ldr	r2, [fp, #-8]
 774 0024 002083E5 		str	r2, [r3]
 922:../../Source/Kernel/rme_kernel.c **** }
 775              		.loc 1 922 1
 776 0028 00F020E3 		nop
 777 002c 00D08BE2 		add	sp, fp, #0
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 0030 04B09DE4 		ldr	fp, [sp], #4
 781              		.cfi_restore 11
 782              		.cfi_def_cfa_offset 0
 783 0034 1EFF2FE1 		bx	lr
 784              		.cfi_endproc
 785              	.LFE9:
 787              		.section	.text._RME_List_Del,"ax",%progbits
 788              		.align	2
 789              		.global	_RME_List_Del
 790              		.syntax unified
 791              		.arm
 793              	_RME_List_Del:
 794              	.LFB10:
 923:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Crt ************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 31


 924:../../Source/Kernel/rme_kernel.c **** 
 925:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Del *****************************************************
 926:../../Source/Kernel/rme_kernel.c **** Description : Delete a node from the doubly-linked list.
 927:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Prev - The previous node.
 928:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 929:../../Source/Kernel/rme_kernel.c **** Output      : None.
 930:../../Source/Kernel/rme_kernel.c **** Return      : None.
 931:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 932:../../Source/Kernel/rme_kernel.c **** void _RME_List_Del(struct RME_List* Prev,
 933:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 934:../../Source/Kernel/rme_kernel.c **** {
 795              		.loc 1 934 1
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 8
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0000 04B02DE5 		str	fp, [sp, #-4]!
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 11, -4
 803 0004 00B08DE2 		add	fp, sp, #0
 804              		.cfi_def_cfa_register 11
 805 0008 0CD04DE2 		sub	sp, sp, #12
 806 000c 08000BE5 		str	r0, [fp, #-8]
 807 0010 0C100BE5 		str	r1, [fp, #-12]
 935:../../Source/Kernel/rme_kernel.c ****     Next->Prev=Prev;
 808              		.loc 1 935 15
 809 0014 0C301BE5 		ldr	r3, [fp, #-12]
 810 0018 08201BE5 		ldr	r2, [fp, #-8]
 811 001c 042083E5 		str	r2, [r3, #4]
 936:../../Source/Kernel/rme_kernel.c ****     Prev->Next=Next;
 812              		.loc 1 936 15
 813 0020 08301BE5 		ldr	r3, [fp, #-8]
 814 0024 0C201BE5 		ldr	r2, [fp, #-12]
 815 0028 002083E5 		str	r2, [r3]
 937:../../Source/Kernel/rme_kernel.c **** }
 816              		.loc 1 937 1
 817 002c 00F020E3 		nop
 818 0030 00D08BE2 		add	sp, fp, #0
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 0034 04B09DE4 		ldr	fp, [sp], #4
 822              		.cfi_restore 11
 823              		.cfi_def_cfa_offset 0
 824 0038 1EFF2FE1 		bx	lr
 825              		.cfi_endproc
 826              	.LFE10:
 828              		.section	.text._RME_List_Ins,"ax",%progbits
 829              		.align	2
 830              		.global	_RME_List_Ins
 831              		.syntax unified
 832              		.arm
 834              	_RME_List_Ins:
 835              	.LFB11:
 938:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Del ************************************************/
 939:../../Source/Kernel/rme_kernel.c **** 
 940:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Ins *****************************************************
 941:../../Source/Kernel/rme_kernel.c **** Description : Insert a node to the doubly-linked list.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 32


 942:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* New - The new node to insert.
 943:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Prev - The previous node.
 944:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 945:../../Source/Kernel/rme_kernel.c **** Output      : None.
 946:../../Source/Kernel/rme_kernel.c **** Return      : None.
 947:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 948:../../Source/Kernel/rme_kernel.c **** void _RME_List_Ins(struct RME_List* New,
 949:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Prev,
 950:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 951:../../Source/Kernel/rme_kernel.c **** {
 836              		.loc 1 951 1
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 16
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 04B02DE5 		str	fp, [sp, #-4]!
 842              		.cfi_def_cfa_offset 4
 843              		.cfi_offset 11, -4
 844 0004 00B08DE2 		add	fp, sp, #0
 845              		.cfi_def_cfa_register 11
 846 0008 14D04DE2 		sub	sp, sp, #20
 847 000c 08000BE5 		str	r0, [fp, #-8]
 848 0010 0C100BE5 		str	r1, [fp, #-12]
 849 0014 10200BE5 		str	r2, [fp, #-16]
 952:../../Source/Kernel/rme_kernel.c ****     Next->Prev=New;
 850              		.loc 1 952 15
 851 0018 10301BE5 		ldr	r3, [fp, #-16]
 852 001c 08201BE5 		ldr	r2, [fp, #-8]
 853 0020 042083E5 		str	r2, [r3, #4]
 953:../../Source/Kernel/rme_kernel.c ****     New->Next=Next;
 854              		.loc 1 953 14
 855 0024 08301BE5 		ldr	r3, [fp, #-8]
 856 0028 10201BE5 		ldr	r2, [fp, #-16]
 857 002c 002083E5 		str	r2, [r3]
 954:../../Source/Kernel/rme_kernel.c ****     New->Prev=Prev;
 858              		.loc 1 954 14
 859 0030 08301BE5 		ldr	r3, [fp, #-8]
 860 0034 0C201BE5 		ldr	r2, [fp, #-12]
 861 0038 042083E5 		str	r2, [r3, #4]
 955:../../Source/Kernel/rme_kernel.c ****     Prev->Next=New;
 862              		.loc 1 955 15
 863 003c 0C301BE5 		ldr	r3, [fp, #-12]
 864 0040 08201BE5 		ldr	r2, [fp, #-8]
 865 0044 002083E5 		str	r2, [r3]
 956:../../Source/Kernel/rme_kernel.c **** }
 866              		.loc 1 956 1
 867 0048 00F020E3 		nop
 868 004c 00D08BE2 		add	sp, fp, #0
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 0050 04B09DE4 		ldr	fp, [sp], #4
 872              		.cfi_restore 11
 873              		.cfi_def_cfa_offset 0
 874 0054 1EFF2FE1 		bx	lr
 875              		.cfi_endproc
 876              	.LFE11:
 878              		.section	.text._RME_Clear,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 33


 879              		.align	2
 880              		.global	_RME_Clear
 881              		.syntax unified
 882              		.arm
 884              	_RME_Clear:
 885              	.LFB12:
 957:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Ins ************************************************/
 958:../../Source/Kernel/rme_kernel.c **** 
 959:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Clear ********************************************************
 960:../../Source/Kernel/rme_kernel.c **** Description : Memset a memory area to zero. This is not fast due to byte operations;
 961:../../Source/Kernel/rme_kernel.c ****               this is not meant for large memory. However, it is indeed secure.
 962:../../Source/Kernel/rme_kernel.c **** Input       : void* Addr - The address to clear.
 963:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
 964:../../Source/Kernel/rme_kernel.c **** Output      : None.
 965:../../Source/Kernel/rme_kernel.c **** Return      : None.
 966:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 967:../../Source/Kernel/rme_kernel.c **** void _RME_Clear(void* Addr,
 968:../../Source/Kernel/rme_kernel.c ****                 rme_ptr_t Size)
 969:../../Source/Kernel/rme_kernel.c **** {
 886              		.loc 1 969 1
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 16
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 04B02DE5 		str	fp, [sp, #-4]!
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 11, -4
 894 0004 00B08DE2 		add	fp, sp, #0
 895              		.cfi_def_cfa_register 11
 896 0008 14D04DE2 		sub	sp, sp, #20
 897 000c 10000BE5 		str	r0, [fp, #-16]
 898 0010 14100BE5 		str	r1, [fp, #-20]
 970:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 971:../../Source/Kernel/rme_kernel.c **** 
 972:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Size;Count++)
 899              		.loc 1 972 14
 900 0014 0030A0E3 		mov	r3, #0
 901 0018 08300BE5 		str	r3, [fp, #-8]
 902              		.loc 1 972 5
 903 001c 070000EA 		b	.L52
 904              	.L53:
 973:../../Source/Kernel/rme_kernel.c ****     {
 974:../../Source/Kernel/rme_kernel.c ****         ((rme_u8_t*)Addr)[Count]=0U;
 905              		.loc 1 974 26
 906 0020 10201BE5 		ldr	r2, [fp, #-16]
 907 0024 08301BE5 		ldr	r3, [fp, #-8]
 908 0028 033082E0 		add	r3, r2, r3
 909              		.loc 1 974 33
 910 002c 0020A0E3 		mov	r2, #0
 911 0030 0020C3E5 		strb	r2, [r3]
 972:../../Source/Kernel/rme_kernel.c ****     {
 912              		.loc 1 972 34 discriminator 3
 913 0034 08301BE5 		ldr	r3, [fp, #-8]
 914 0038 013083E2 		add	r3, r3, #1
 915 003c 08300BE5 		str	r3, [fp, #-8]
 916              	.L52:
 972:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 34


 917              		.loc 1 972 23 discriminator 1
 918 0040 08201BE5 		ldr	r2, [fp, #-8]
 919 0044 14301BE5 		ldr	r3, [fp, #-20]
 920 0048 030052E1 		cmp	r2, r3
 921 004c F3FFFF3A 		bcc	.L53
 975:../../Source/Kernel/rme_kernel.c ****     }
 976:../../Source/Kernel/rme_kernel.c **** }
 922              		.loc 1 976 1
 923 0050 00F020E3 		nop
 924 0054 00F020E3 		nop
 925 0058 00D08BE2 		add	sp, fp, #0
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 005c 04B09DE4 		ldr	fp, [sp], #4
 929              		.cfi_restore 11
 930              		.cfi_def_cfa_offset 0
 931 0060 1EFF2FE1 		bx	lr
 932              		.cfi_endproc
 933              	.LFE12:
 935              		.section	.text._RME_Memcmp,"ax",%progbits
 936              		.align	2
 937              		.global	_RME_Memcmp
 938              		.syntax unified
 939              		.arm
 941              	_RME_Memcmp:
 942              	.LFB13:
 977:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Clear ***************************************************/
 978:../../Source/Kernel/rme_kernel.c **** 
 979:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcmp *******************************************************
 980:../../Source/Kernel/rme_kernel.c **** Description : Compare two memory segments to see if they are equal. This is not
 981:../../Source/Kernel/rme_kernel.c ****               fast due to byte operations; this is not meant for large memory.
 982:../../Source/Kernel/rme_kernel.c **** Input       : const void* Ptr1 - The first memory region.
 983:../../Source/Kernel/rme_kernel.c ****               const void* Ptr2 - The second memory region.
 984:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
 985:../../Source/Kernel/rme_kernel.c **** Output      : None.
 986:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If Ptr1>Ptr2, then return a positive value; else a negative
 987:../../Source/Kernel/rme_kernel.c ****                           value. If Ptr1==Ptr2, then return 0;
 988:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 989:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Memcmp(const void* Ptr1,
 990:../../Source/Kernel/rme_kernel.c ****                       const void* Ptr2,
 991:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Num)
 992:../../Source/Kernel/rme_kernel.c **** {
 943              		.loc 1 992 1
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 32
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948 0000 04B02DE5 		str	fp, [sp, #-4]!
 949              		.cfi_def_cfa_offset 4
 950              		.cfi_offset 11, -4
 951 0004 00B08DE2 		add	fp, sp, #0
 952              		.cfi_def_cfa_register 11
 953 0008 24D04DE2 		sub	sp, sp, #36
 954 000c 18000BE5 		str	r0, [fp, #-24]
 955 0010 1C100BE5 		str	r1, [fp, #-28]
 956 0014 20200BE5 		str	r2, [fp, #-32]
 993:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Dst;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 35


 994:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Src;
 995:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 996:../../Source/Kernel/rme_kernel.c **** 
 997:../../Source/Kernel/rme_kernel.c ****     Dst=(const rme_s8_t*)Ptr1;
 957              		.loc 1 997 8
 958 0018 18301BE5 		ldr	r3, [fp, #-24]
 959 001c 0C300BE5 		str	r3, [fp, #-12]
 998:../../Source/Kernel/rme_kernel.c ****     Src=(const rme_s8_t*)Ptr2;
 960              		.loc 1 998 8
 961 0020 1C301BE5 		ldr	r3, [fp, #-28]
 962 0024 10300BE5 		str	r3, [fp, #-16]
 999:../../Source/Kernel/rme_kernel.c **** 
1000:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 963              		.loc 1 1000 14
 964 0028 0030A0E3 		mov	r3, #0
 965 002c 08300BE5 		str	r3, [fp, #-8]
 966              		.loc 1 1000 5
 967 0030 170000EA 		b	.L55
 968              	.L58:
1001:../../Source/Kernel/rme_kernel.c ****     {
1002:../../Source/Kernel/rme_kernel.c ****         if(Dst[Count]!=Src[Count])
 969              		.loc 1 1002 15
 970 0034 0C201BE5 		ldr	r2, [fp, #-12]
 971 0038 08301BE5 		ldr	r3, [fp, #-8]
 972 003c 033082E0 		add	r3, r2, r3
 973 0040 D020D3E1 		ldrsb	r2, [r3]
 974              		.loc 1 1002 27
 975 0044 10101BE5 		ldr	r1, [fp, #-16]
 976 0048 08301BE5 		ldr	r3, [fp, #-8]
 977 004c 033081E0 		add	r3, r1, r3
 978 0050 D030D3E1 		ldrsb	r3, [r3]
 979              		.loc 1 1002 11
 980 0054 030052E1 		cmp	r2, r3
 981 0058 0A00000A 		beq	.L56
1003:../../Source/Kernel/rme_kernel.c ****         {
1004:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1005:../../Source/Kernel/rme_kernel.c ****             
1006:../../Source/Kernel/rme_kernel.c ****             return Dst[Count]-Src[Count];
 982              		.loc 1 1006 23
 983 005c 0C201BE5 		ldr	r2, [fp, #-12]
 984 0060 08301BE5 		ldr	r3, [fp, #-8]
 985 0064 033082E0 		add	r3, r2, r3
 986 0068 D030D3E1 		ldrsb	r3, [r3]
 987 006c 0310A0E1 		mov	r1, r3
 988              		.loc 1 1006 34
 989 0070 10201BE5 		ldr	r2, [fp, #-16]
 990 0074 08301BE5 		ldr	r3, [fp, #-8]
 991 0078 033082E0 		add	r3, r2, r3
 992 007c D030D3E1 		ldrsb	r3, [r3]
 993              		.loc 1 1006 30
 994 0080 033041E0 		sub	r3, r1, r3
 995 0084 070000EA 		b	.L57
 996              	.L56:
1000:../../Source/Kernel/rme_kernel.c ****     {
 997              		.loc 1 1000 33 discriminator 2
 998 0088 08301BE5 		ldr	r3, [fp, #-8]
 999 008c 013083E2 		add	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 36


 1000 0090 08300BE5 		str	r3, [fp, #-8]
 1001              	.L55:
1000:../../Source/Kernel/rme_kernel.c ****     {
 1002              		.loc 1 1000 23 discriminator 1
 1003 0094 08201BE5 		ldr	r2, [fp, #-8]
 1004 0098 20301BE5 		ldr	r3, [fp, #-32]
 1005 009c 030052E1 		cmp	r2, r3
 1006 00a0 E3FFFF3A 		bcc	.L58
1007:../../Source/Kernel/rme_kernel.c ****         }
1008:../../Source/Kernel/rme_kernel.c ****         else
1009:../../Source/Kernel/rme_kernel.c ****         {
1010:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1011:../../Source/Kernel/rme_kernel.c ****             /* No action required */
1012:../../Source/Kernel/rme_kernel.c ****         }
1013:../../Source/Kernel/rme_kernel.c ****     }
1014:../../Source/Kernel/rme_kernel.c **** 
1015:../../Source/Kernel/rme_kernel.c ****     return 0;
 1007              		.loc 1 1015 12
 1008 00a4 0030A0E3 		mov	r3, #0
 1009              	.L57:
1016:../../Source/Kernel/rme_kernel.c **** }
 1010              		.loc 1 1016 1
 1011 00a8 0300A0E1 		mov	r0, r3
 1012 00ac 00D08BE2 		add	sp, fp, #0
 1013              		.cfi_def_cfa_register 13
 1014              		@ sp needed
 1015 00b0 04B09DE4 		ldr	fp, [sp], #4
 1016              		.cfi_restore 11
 1017              		.cfi_def_cfa_offset 0
 1018 00b4 1EFF2FE1 		bx	lr
 1019              		.cfi_endproc
 1020              	.LFE13:
 1022              		.section	.text._RME_Memcpy,"ax",%progbits
 1023              		.align	2
 1024              		.global	_RME_Memcpy
 1025              		.syntax unified
 1026              		.arm
 1028              	_RME_Memcpy:
 1029              	.LFB14:
1017:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcmp **************************************************/
1018:../../Source/Kernel/rme_kernel.c **** 
1019:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcpy *******************************************************
1020:../../Source/Kernel/rme_kernel.c **** Description : Copy one segment of memory to another segment. This is not fast
1021:../../Source/Kernel/rme_kernel.c ****               due to byte operations; this is not meant for large memory.
1022:../../Source/Kernel/rme_kernel.c **** Input       : volatile void* Dst - The first memory region.
1023:../../Source/Kernel/rme_kernel.c ****               volatile void* Src - The second memory region.
1024:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
1025:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
1026:../../Source/Kernel/rme_kernel.c **** Output      : None.
1027:../../Source/Kernel/rme_kernel.c **** Return      : None.
1028:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1029:../../Source/Kernel/rme_kernel.c **** void _RME_Memcpy(void* Dst,
1030:../../Source/Kernel/rme_kernel.c ****                  void* Src,
1031:../../Source/Kernel/rme_kernel.c ****                  rme_ptr_t Num)
1032:../../Source/Kernel/rme_kernel.c **** {
 1030              		.loc 1 1032 1
 1031              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 37


 1032              		@ args = 0, pretend = 0, frame = 24
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035 0000 04B02DE5 		str	fp, [sp, #-4]!
 1036              		.cfi_def_cfa_offset 4
 1037              		.cfi_offset 11, -4
 1038 0004 00B08DE2 		add	fp, sp, #0
 1039              		.cfi_def_cfa_register 11
 1040 0008 1CD04DE2 		sub	sp, sp, #28
 1041 000c 10000BE5 		str	r0, [fp, #-16]
 1042 0010 14100BE5 		str	r1, [fp, #-20]
 1043 0014 18200BE5 		str	r2, [fp, #-24]
1033:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1034:../../Source/Kernel/rme_kernel.c **** 
1035:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 1044              		.loc 1 1035 14
 1045 0018 0030A0E3 		mov	r3, #0
 1046 001c 08300BE5 		str	r3, [fp, #-8]
 1047              		.loc 1 1035 5
 1048 0020 0B0000EA 		b	.L60
 1049              	.L61:
1036:../../Source/Kernel/rme_kernel.c ****     {
1037:../../Source/Kernel/rme_kernel.c ****         ((volatile rme_u8_t*)Dst)[Count]=((volatile rme_u8_t*)Src)[Count];
 1050              		.loc 1 1037 67
 1051 0024 14201BE5 		ldr	r2, [fp, #-20]
 1052 0028 08301BE5 		ldr	r3, [fp, #-8]
 1053 002c 032082E0 		add	r2, r2, r3
 1054              		.loc 1 1037 34
 1055 0030 10101BE5 		ldr	r1, [fp, #-16]
 1056 0034 08301BE5 		ldr	r3, [fp, #-8]
 1057 0038 033081E0 		add	r3, r1, r3
 1058              		.loc 1 1037 67
 1059 003c 0020D2E5 		ldrb	r2, [r2]
 1060 0040 7220EFE6 		uxtb	r2, r2
 1061              		.loc 1 1037 41
 1062 0044 0020C3E5 		strb	r2, [r3]
1035:../../Source/Kernel/rme_kernel.c ****     {
 1063              		.loc 1 1035 33 discriminator 3
 1064 0048 08301BE5 		ldr	r3, [fp, #-8]
 1065 004c 013083E2 		add	r3, r3, #1
 1066 0050 08300BE5 		str	r3, [fp, #-8]
 1067              	.L60:
1035:../../Source/Kernel/rme_kernel.c ****     {
 1068              		.loc 1 1035 23 discriminator 1
 1069 0054 08201BE5 		ldr	r2, [fp, #-8]
 1070 0058 18301BE5 		ldr	r3, [fp, #-24]
 1071 005c 030052E1 		cmp	r2, r3
 1072 0060 EFFFFF3A 		bcc	.L61
1038:../../Source/Kernel/rme_kernel.c ****     }
1039:../../Source/Kernel/rme_kernel.c **** }
 1073              		.loc 1 1039 1
 1074 0064 00F020E3 		nop
 1075 0068 00F020E3 		nop
 1076 006c 00D08BE2 		add	sp, fp, #0
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 0070 04B09DE4 		ldr	fp, [sp], #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 38


 1080              		.cfi_restore 11
 1081              		.cfi_def_cfa_offset 0
 1082 0074 1EFF2FE1 		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE14:
 1086              		.section	.text._RME_Diff,"ax",%progbits
 1087              		.align	2
 1088              		.global	_RME_Diff
 1089              		.syntax unified
 1090              		.arm
 1092              	_RME_Diff:
 1093              	.LFB15:
1040:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcpy **************************************************/
1041:../../Source/Kernel/rme_kernel.c **** 
1042:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Diff *********************************************************
1043:../../Source/Kernel/rme_kernel.c **** Description : Compute the absolute difference between two numbers, when integer
1044:../../Source/Kernel/rme_kernel.c ****               wraparound is considered.
1045:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Num1 - The first number.
1046:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num2 - The second number.
1047:../../Source/Kernel/rme_kernel.c **** Output      : None.
1048:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The distance.
1049:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1050:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Diff(rme_ptr_t Num1,
1051:../../Source/Kernel/rme_kernel.c ****                     rme_ptr_t Num2)
1052:../../Source/Kernel/rme_kernel.c **** {
 1094              		.loc 1 1052 1
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 16
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0000 04B02DE5 		str	fp, [sp, #-4]!
 1100              		.cfi_def_cfa_offset 4
 1101              		.cfi_offset 11, -4
 1102 0004 00B08DE2 		add	fp, sp, #0
 1103              		.cfi_def_cfa_register 11
 1104 0008 14D04DE2 		sub	sp, sp, #20
 1105 000c 10000BE5 		str	r0, [fp, #-16]
 1106 0010 14100BE5 		str	r1, [fp, #-20]
1053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff1;
1054:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff2;
1055:../../Source/Kernel/rme_kernel.c ****     
1056:../../Source/Kernel/rme_kernel.c ****     Diff1=Num1-Num2;
 1107              		.loc 1 1056 10
 1108 0014 10201BE5 		ldr	r2, [fp, #-16]
 1109 0018 14301BE5 		ldr	r3, [fp, #-20]
 1110 001c 033042E0 		sub	r3, r2, r3
 1111 0020 08300BE5 		str	r3, [fp, #-8]
1057:../../Source/Kernel/rme_kernel.c ****     Diff2=Num2-Num1;
 1112              		.loc 1 1057 10
 1113 0024 14201BE5 		ldr	r2, [fp, #-20]
 1114 0028 10301BE5 		ldr	r3, [fp, #-16]
 1115 002c 033042E0 		sub	r3, r2, r3
 1116 0030 0C300BE5 		str	r3, [fp, #-12]
1058:../../Source/Kernel/rme_kernel.c ****     
1059:../../Source/Kernel/rme_kernel.c ****     if(Diff1>Diff2)
 1117              		.loc 1 1059 7
 1118 0034 08201BE5 		ldr	r2, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 39


 1119 0038 0C301BE5 		ldr	r3, [fp, #-12]
 1120 003c 030052E1 		cmp	r2, r3
 1121 0040 0100009A 		bls	.L63
1060:../../Source/Kernel/rme_kernel.c ****     {
1061:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1062:../../Source/Kernel/rme_kernel.c ****         
1063:../../Source/Kernel/rme_kernel.c ****         return Diff2;
 1122              		.loc 1 1063 16
 1123 0044 0C301BE5 		ldr	r3, [fp, #-12]
 1124 0048 000000EA 		b	.L64
 1125              	.L63:
1064:../../Source/Kernel/rme_kernel.c ****     }
1065:../../Source/Kernel/rme_kernel.c ****     else
1066:../../Source/Kernel/rme_kernel.c ****     {
1067:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1068:../../Source/Kernel/rme_kernel.c ****         
1069:../../Source/Kernel/rme_kernel.c ****         return Diff1;
 1126              		.loc 1 1069 16
 1127 004c 08301BE5 		ldr	r3, [fp, #-8]
 1128              	.L64:
1070:../../Source/Kernel/rme_kernel.c ****     }
1071:../../Source/Kernel/rme_kernel.c **** }
 1129              		.loc 1 1071 1
 1130 0050 0300A0E1 		mov	r0, r3
 1131 0054 00D08BE2 		add	sp, fp, #0
 1132              		.cfi_def_cfa_register 13
 1133              		@ sp needed
 1134 0058 04B09DE4 		ldr	fp, [sp], #4
 1135              		.cfi_restore 11
 1136              		.cfi_def_cfa_offset 0
 1137 005c 1EFF2FE1 		bx	lr
 1138              		.cfi_endproc
 1139              	.LFE15:
 1141              		.section	.text.RME_Kmain,"ax",%progbits
 1142              		.align	2
 1143              		.global	RME_Kmain
 1144              		.syntax unified
 1145              		.arm
 1147              	RME_Kmain:
 1148              	.LFB16:
1072:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Diff ****************************************************/
1073:../../Source/Kernel/rme_kernel.c **** 
1074:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Kmain *********************************************************
1075:../../Source/Kernel/rme_kernel.c **** Description : The entry of the operating system.
1076:../../Source/Kernel/rme_kernel.c **** Input       : None.
1077:../../Source/Kernel/rme_kernel.c **** Output      : None.
1078:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - This function never returns.
1079:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1080:../../Source/Kernel/rme_kernel.c **** rme_ret_t RME_Kmain(void)
1081:../../Source/Kernel/rme_kernel.c **** {
 1149              		.loc 1 1081 1
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 00482DE9 		push	{fp, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 40


 1156              		.cfi_offset 14, -4
 1157 0004 04B08DE2 		add	fp, sp, #4
 1158              		.cfi_def_cfa 11, 4
1082:../../Source/Kernel/rme_kernel.c ****     /* Disable all interrupts first */
1083:../../Source/Kernel/rme_kernel.c ****     __RME_Int_Disable();
 1159              		.loc 1 1083 5
 1160 0008 FEFFFFEB 		bl	__RME_Int_Disable
1084:../../Source/Kernel/rme_kernel.c ****     /* Some low-level kernel assertions */
1085:../../Source/Kernel/rme_kernel.c ****     _RME_Lowlvl_Check();
 1161              		.loc 1 1085 5
 1162 000c FEFFFFEB 		bl	_RME_Lowlvl_Check
1086:../../Source/Kernel/rme_kernel.c ****     /* Hardware low-level init */
1087:../../Source/Kernel/rme_kernel.c ****     __RME_Lowlvl_Init();
 1163              		.loc 1 1087 5
 1164 0010 FEFFFFEB 		bl	__RME_Lowlvl_Init
1088:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel page tables or memory mappings */
1089:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Kom_Init();
 1165              		.loc 1 1089 5
 1166 0014 FEFFFFEB 		bl	__RME_Pgt_Kom_Init
1090:../../Source/Kernel/rme_kernel.c ****     
1091:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel object allocation table - default init */
1092:../../Source/Kernel/rme_kernel.c ****     _RME_Kot_Init(RME_KOT_WORD_NUM);
 1167              		.loc 1 1092 5
 1168 0018 0209A0E3 		mov	r0, #32768
 1169 001c FEFFFFEB 		bl	_RME_Kot_Init
1093:../../Source/Kernel/rme_kernel.c ****     
1094:../../Source/Kernel/rme_kernel.c ****     /* Boot into the first process */
1095:../../Source/Kernel/rme_kernel.c ****     __RME_Boot();
 1170              		.loc 1 1095 5
 1171 0020 FEFFFFEB 		bl	__RME_Boot
1096:../../Source/Kernel/rme_kernel.c ****     
1097:../../Source/Kernel/rme_kernel.c ****     /* Should never reach here */
1098:../../Source/Kernel/rme_kernel.c ****     return 0;
 1172              		.loc 1 1098 12
 1173 0024 0030A0E3 		mov	r3, #0
1099:../../Source/Kernel/rme_kernel.c **** }
 1174              		.loc 1 1099 1
 1175 0028 0300A0E1 		mov	r0, r3
 1176 002c 0088BDE8 		pop	{fp, pc}
 1177              		.cfi_endproc
 1178              	.LFE16:
 1180              		.section	.text._RME_Lowlvl_Check,"ax",%progbits
 1181              		.align	2
 1182              		.syntax unified
 1183              		.arm
 1185              	_RME_Lowlvl_Check:
 1186              	.LFB17:
1100:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Kmain ****************************************************/
1101:../../Source/Kernel/rme_kernel.c **** 
1102:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Lowlvl_Check *************************************************
1103:../../Source/Kernel/rme_kernel.c **** Description : Do some low-level checking for the operating system.
1104:../../Source/Kernel/rme_kernel.c **** Input       : None.
1105:../../Source/Kernel/rme_kernel.c **** Output      : None.
1106:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
1107:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1108:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Lowlvl_Check(void)
1109:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 41


 1187              		.loc 1 1109 1
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192 0000 04B02DE5 		str	fp, [sp, #-4]!
 1193              		.cfi_def_cfa_offset 4
 1194              		.cfi_offset 11, -4
 1195 0004 00B08DE2 		add	fp, sp, #0
 1196              		.cfi_def_cfa_register 11
1110:../../Source/Kernel/rme_kernel.c ****     /* Make sure the machine is at least 32-bit */
1111:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_ORDER>=5U);
1112:../../Source/Kernel/rme_kernel.c ****     /* Check if the word order setting is correct */
1113:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_BIT==RME_POW2(RME_WORD_ORDER));
1114:../../Source/Kernel/rme_kernel.c ****     /* Check if the struct sizes are correct */
1115:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Struct)==RME_CAP_SIZE);
1116:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Cpt)==RME_CAP_SIZE);
1117:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1118:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Pgt)==RME_CAP_SIZE);
1119:../../Source/Kernel/rme_kernel.c **** #endif
1120:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Prc)==RME_CAP_SIZE);
1121:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Thd)==RME_CAP_SIZE);
1122:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Sig)==RME_CAP_SIZE);
1123:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Inv)==RME_CAP_SIZE);
1124:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kfn)==RME_CAP_SIZE);
1125:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kom)==RME_CAP_SIZE);
1126:../../Source/Kernel/rme_kernel.c ****     /* Check if the other configurations are correct */
1127:../../Source/Kernel/rme_kernel.c ****     /* Kernel memory allocation minimal size aligned to word boundary */
1128:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_KOM_SLOT_ORDER>=RME_WORD_ORDER-3U);
1129:../../Source/Kernel/rme_kernel.c ****     /* Make sure the number of priorities do not exceed half-word boundary */
1130:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_PREEMPT_PRIO_NUM<=RME_POW2(RME_WORD_BIT>>1));
1131:../../Source/Kernel/rme_kernel.c ****     
1132:../../Source/Kernel/rme_kernel.c ****     return 0;
 1197              		.loc 1 1132 12
 1198 0008 0030A0E3 		mov	r3, #0
1133:../../Source/Kernel/rme_kernel.c **** }
 1199              		.loc 1 1133 1
 1200 000c 0300A0E1 		mov	r0, r3
 1201 0010 00D08BE2 		add	sp, fp, #0
 1202              		.cfi_def_cfa_register 13
 1203              		@ sp needed
 1204 0014 04B09DE4 		ldr	fp, [sp], #4
 1205              		.cfi_restore 11
 1206              		.cfi_def_cfa_offset 0
 1207 0018 1EFF2FE1 		bx	lr
 1208              		.cfi_endproc
 1209              	.LFE17:
 1211              		.section	.text._RME_Svc_Handler,"ax",%progbits
 1212              		.align	2
 1213              		.global	_RME_Svc_Handler
 1214              		.syntax unified
 1215              		.arm
 1217              	_RME_Svc_Handler:
 1218              	.LFB18:
1134:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Lowlvl_Check ********************************************/
1135:../../Source/Kernel/rme_kernel.c **** 
1136:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Svc_Handler **************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 42


1137:../../Source/Kernel/rme_kernel.c **** Description : The system call handler of the operating system. The register set 
1138:../../Source/Kernel/rme_kernel.c ****               of the current thread shall be passed in as a parameter.
1139:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1140:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1141:../../Source/Kernel/rme_kernel.c **** Return      : None.
1142:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1143:../../Source/Kernel/rme_kernel.c **** void _RME_Svc_Handler(struct RME_Reg_Struct* Reg)
1144:../../Source/Kernel/rme_kernel.c **** {
 1219              		.loc 1 1144 1
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 48
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 30482DE9 		push	{r4, r5, fp, lr}
 1224              		.cfi_def_cfa_offset 16
 1225              		.cfi_offset 4, -16
 1226              		.cfi_offset 5, -12
 1227              		.cfi_offset 11, -8
 1228              		.cfi_offset 14, -4
 1229 0004 0CB08DE2 		add	fp, sp, #12
 1230              		.cfi_def_cfa 11, 4
 1231 0008 48D04DE2 		sub	sp, sp, #72
 1232 000c 38000BE5 		str	r0, [fp, #-56]
1145:../../Source/Kernel/rme_kernel.c ****     /* What's the system call number and major capability ID? */
1146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc;
1147:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Cid;
1148:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Param[3];
1149:../../Source/Kernel/rme_kernel.c ****     rme_ret_t Retval;
1150:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc_Num;
1151:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1152:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
1153:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1154:../../Source/Kernel/rme_kernel.c **** 
1155:../../Source/Kernel/rme_kernel.c ****     /* Get the system call parameters from the system call */
1156:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Param_Get(Reg, &Svc, &Cid, Param);
 1233              		.loc 1 1156 5
 1234 0010 34304BE2 		sub	r3, fp, #52
 1235 0014 28204BE2 		sub	r2, fp, #40
 1236 0018 24104BE2 		sub	r1, fp, #36
 1237 001c 38001BE5 		ldr	r0, [fp, #-56]
 1238 0020 FEFFFFEB 		bl	__RME_Svc_Param_Get
1157:../../Source/Kernel/rme_kernel.c ****     /* System call number takes [5:0] bits */
1158:../../Source/Kernel/rme_kernel.c ****     Svc_Num=Svc&RME_MASK_END(5U);
 1239              		.loc 1 1158 16
 1240 0024 24301BE5 		ldr	r3, [fp, #-36]
 1241              		.loc 1 1158 12
 1242 0028 3F3003E2 		and	r3, r3, #63
 1243 002c 18300BE5 		str	r3, [fp, #-24]
1159:../../Source/Kernel/rme_kernel.c ****     
1160:../../Source/Kernel/rme_kernel.c ****     /* Ultra-fast path - synchronous invocation returning */
1161:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_RET)
 1244              		.loc 1 1161 7
 1245 0030 18301BE5 		ldr	r3, [fp, #-24]
 1246 0034 000053E3 		cmp	r3, #0
 1247 0038 0C00001A 		bne	.L70
1162:../../Source/Kernel/rme_kernel.c ****     {
1163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1164:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 43


1165:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Ret(Reg,                                            /* volatile struct RME_
 1248              		.loc 1 1165 16
 1249 003c 34301BE5 		ldr	r3, [fp, #-52]
 1250 0040 0020A0E3 		mov	r2, #0
 1251 0044 0310A0E1 		mov	r1, r3
 1252 0048 38001BE5 		ldr	r0, [fp, #-56]
 1253 004c FEFFFFEB 		bl	_RME_Inv_Ret
 1254 0050 10000BE5 		str	r0, [fp, #-16]
1166:../../Source/Kernel/rme_kernel.c ****                             Param[0],                                       /* rme_ptr_t Retval */
1167:../../Source/Kernel/rme_kernel.c ****                             0U);                                            /* rme_ptr_t Is_Exc */
1168:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg, Retval);
 1255              		.loc 1 1168 9
 1256 0054 10301BE5 		ldr	r3, [fp, #-16]
 1257 0058 000053E3 		cmp	r3, #0
 1258 005c 110200AA 		bge	.L69
 1259              		.loc 1 1168 9 is_stmt 0 discriminator 1
 1260 0060 10101BE5 		ldr	r1, [fp, #-16]
 1261 0064 38001BE5 		ldr	r0, [fp, #-56]
 1262 0068 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1263              		.loc 1 1168 9
 1264 006c 0D0200EA 		b	.L69
 1265              	.L70:
1169:../../Source/Kernel/rme_kernel.c ****     }
1170:../../Source/Kernel/rme_kernel.c ****     else
1171:../../Source/Kernel/rme_kernel.c ****     {
1172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1173:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1174:../../Source/Kernel/rme_kernel.c ****     }
1175:../../Source/Kernel/rme_kernel.c ****     
1176:../../Source/Kernel/rme_kernel.c ****     /* Get our current capability table. No need to check whether it is frozen
1177:../../Source/Kernel/rme_kernel.c ****      * because it can't be deleted anyway */
1178:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 1266              		.loc 1 1178 12 is_stmt 1
 1267 0070 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 1268 0074 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 1269 0078 043093E5 		ldr	r3, [r3, #4]
 1270 007c 1C300BE5 		str	r3, [fp, #-28]
1179:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd_Cur);
 1271              		.loc 1 1179 13
 1272 0080 1C301BE5 		ldr	r3, [fp, #-28]
 1273 0084 4C2093E5 		ldr	r2, [r3, #76]
 1274 0088 1C301BE5 		ldr	r3, [fp, #-28]
 1275 008c 4C3083E2 		add	r3, r3, #76
 1276 0090 030052E1 		cmp	r2, r3
 1277 0094 0200000A 		beq	.L73
 1278              		.loc 1 1179 13 is_stmt 0 discriminator 1
 1279 0098 1C301BE5 		ldr	r3, [fp, #-28]
 1280 009c 4C3093E5 		ldr	r3, [r3, #76]
 1281 00a0 000000EA 		b	.L74
 1282              	.L73:
 1283              		.loc 1 1179 13 discriminator 2
 1284 00a4 0030A0E3 		mov	r3, #0
 1285              	.L74:
 1286              		.loc 1 1179 12 is_stmt 1 discriminator 4
 1287 00a8 20300BE5 		str	r3, [fp, #-32]
1180:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 1288              		.loc 1 1180 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 44


 1289 00ac 20301BE5 		ldr	r3, [fp, #-32]
 1290 00b0 000053E3 		cmp	r3, #0
 1291 00b4 0400001A 		bne	.L75
1181:../../Source/Kernel/rme_kernel.c ****     {
1182:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1183:../../Source/Kernel/rme_kernel.c ****         
1184:../../Source/Kernel/rme_kernel.c ****         Cpt=Thd_Cur->Sched.Prc->Cpt;
 1292              		.loc 1 1184 27
 1293 00b8 1C301BE5 		ldr	r3, [fp, #-28]
 1294 00bc 2C3093E5 		ldr	r3, [r3, #44]
 1295              		.loc 1 1184 12
 1296 00c0 143093E5 		ldr	r3, [r3, #20]
 1297 00c4 14300BE5 		str	r3, [fp, #-20]
 1298 00c8 030000EA 		b	.L76
 1299              	.L75:
1185:../../Source/Kernel/rme_kernel.c ****     }
1186:../../Source/Kernel/rme_kernel.c ****     else
1187:../../Source/Kernel/rme_kernel.c ****     {
1188:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1189:../../Source/Kernel/rme_kernel.c ****         
1190:../../Source/Kernel/rme_kernel.c ****         Cpt=Inv_Top->Prc->Cpt;
 1300              		.loc 1 1190 20
 1301 00cc 20301BE5 		ldr	r3, [fp, #-32]
 1302 00d0 083093E5 		ldr	r3, [r3, #8]
 1303              		.loc 1 1190 12
 1304 00d4 143093E5 		ldr	r3, [r3, #20]
 1305 00d8 14300BE5 		str	r3, [fp, #-20]
 1306              	.L76:
1191:../../Source/Kernel/rme_kernel.c ****     }
1192:../../Source/Kernel/rme_kernel.c **** 
1193:../../Source/Kernel/rme_kernel.c ****     /* Fast path - synchronous invocation activation */
1194:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_ACT)
 1307              		.loc 1 1194 7
 1308 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1309 00e0 010053E3 		cmp	r3, #1
 1310 00e4 0D00001A 		bne	.L77
1195:../../Source/Kernel/rme_kernel.c ****     {
1196:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1197:../../Source/Kernel/rme_kernel.c ****         
1198:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Act(Cpt,
1199:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
1200:../../Source/Kernel/rme_kernel.c ****                             (rme_cid_t)Param[0],                            /* rme_cid_t Cap_Inv */
 1311              		.loc 1 1200 45
 1312 00e8 34301BE5 		ldr	r3, [fp, #-52]
1198:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
 1313              		.loc 1 1198 16
 1314 00ec 0320A0E1 		mov	r2, r3
 1315 00f0 30301BE5 		ldr	r3, [fp, #-48]
 1316 00f4 38101BE5 		ldr	r1, [fp, #-56]
 1317 00f8 14001BE5 		ldr	r0, [fp, #-20]
 1318 00fc FEFFFFEB 		bl	_RME_Inv_Act
 1319 0100 10000BE5 		str	r0, [fp, #-16]
1201:../../Source/Kernel/rme_kernel.c ****                             Param[1]);                                      /* rme_ptr_t Param */
1202:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg,Retval);
 1320              		.loc 1 1202 9
 1321 0104 10301BE5 		ldr	r3, [fp, #-16]
 1322 0108 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 45


 1323 010c E50100AA 		bge	.L69
 1324              		.loc 1 1202 9 is_stmt 0 discriminator 1
 1325 0110 10101BE5 		ldr	r1, [fp, #-16]
 1326 0114 38001BE5 		ldr	r0, [fp, #-56]
 1327 0118 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1328              		.loc 1 1202 9
 1329 011c E10100EA 		b	.L69
 1330              	.L77:
1203:../../Source/Kernel/rme_kernel.c ****     }
1204:../../Source/Kernel/rme_kernel.c ****     else
1205:../../Source/Kernel/rme_kernel.c ****     {
1206:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1207:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1208:../../Source/Kernel/rme_kernel.c ****     }
1209:../../Source/Kernel/rme_kernel.c **** 
1210:../../Source/Kernel/rme_kernel.c ****     /* See if this operation can potentially cause a context switch. All the 
1211:../../Source/Kernel/rme_kernel.c ****      * functions that may cause a context switch is listed here. The behavior
1212:../../Source/Kernel/rme_kernel.c ****      * of these functions shall be: If the function is successful, they shall
1213:../../Source/Kernel/rme_kernel.c ****      * perform the return value saving on proper register stacks by themselves;
1214:../../Source/Kernel/rme_kernel.c ****      * if the function fails, it should not conduct such return value saving.
1215:../../Source/Kernel/rme_kernel.c ****      * These paths are less optimized than synchronous invocation, but are still
1216:../../Source/Kernel/rme_kernel.c ****      * optimized anyway. */
1217:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1331              		.loc 1 1217 5 is_stmt 1
 1332 0120 18301BE5 		ldr	r3, [fp, #-24]
 1333 0124 022043E2 		sub	r2, r3, #2
 1334 0128 80379FE5 		ldr	r3, .L127
 1335 012c 070052E3 		cmp	r2, #7
 1336 0130 9400008A 		bhi	.L126
 1337 0134 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1338              	.Lrtx81:
 1339 0138 00F020E3 		nop
 1340              		.section	.rodata._RME_Svc_Handler,"a",%progbits
 1341              		.align	2
 1342              	.L81:
 1343 0000 3C010000 		.word	.L88
 1344 0004 70010000 		.word	.L87
 1345 0008 A8010000 		.word	.L86
 1346 000c 08020000 		.word	.L85
 1347 0010 3C020000 		.word	.L84
 1348 0014 8C020000 		.word	.L83
 1349 0018 08030000 		.word	.L82
 1350 001c 50030000 		.word	.L80
 1351              		.section	.text._RME_Svc_Handler
 1352              		.p2align 2
 1353              	.L88:
1218:../../Source/Kernel/rme_kernel.c ****     {
1219:../../Source/Kernel/rme_kernel.c ****         /* Send to a signal endpoint */
1220:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_SND:
1221:../../Source/Kernel/rme_kernel.c ****         {
1222:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1223:../../Source/Kernel/rme_kernel.c ****             
1224:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Snd(Cpt,
1225:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1226:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1354              		.loc 1 1226 49
 1355 013c 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 46


1224:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1356              		.loc 1 1224 20
 1357 0140 0320A0E1 		mov	r2, r3
 1358 0144 38101BE5 		ldr	r1, [fp, #-56]
 1359 0148 14001BE5 		ldr	r0, [fp, #-20]
 1360 014c FEFFFFEB 		bl	_RME_Sig_Snd
 1361 0150 10000BE5 		str	r0, [fp, #-16]
1227:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1362              		.loc 1 1227 13
 1363 0154 10301BE5 		ldr	r3, [fp, #-16]
 1364 0158 000053E3 		cmp	r3, #0
 1365 015c D10100AA 		bge	.L69
 1366              		.loc 1 1227 13 is_stmt 0 discriminator 1
 1367 0160 10101BE5 		ldr	r1, [fp, #-16]
 1368 0164 38001BE5 		ldr	r0, [fp, #-56]
 1369 0168 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1370              		.loc 1 1227 13
 1371 016c CD0100EA 		b	.L69
 1372              	.L87:
1228:../../Source/Kernel/rme_kernel.c ****         }
1229:../../Source/Kernel/rme_kernel.c ****         /* Receive from a signal endpoint */
1230:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_RCV:
1231:../../Source/Kernel/rme_kernel.c ****         {
1232:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1233:../../Source/Kernel/rme_kernel.c ****             
1234:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Rcv(Cpt,
1235:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1236:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Sig */
 1373              		.loc 1 1236 49 is_stmt 1
 1374 0170 34301BE5 		ldr	r3, [fp, #-52]
1234:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1375              		.loc 1 1234 20
 1376 0174 0320A0E1 		mov	r2, r3
 1377 0178 30301BE5 		ldr	r3, [fp, #-48]
 1378 017c 38101BE5 		ldr	r1, [fp, #-56]
 1379 0180 14001BE5 		ldr	r0, [fp, #-20]
 1380 0184 FEFFFFEB 		bl	_RME_Sig_Rcv
 1381 0188 10000BE5 		str	r0, [fp, #-16]
1237:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Option */
1238:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1382              		.loc 1 1238 13
 1383 018c 10301BE5 		ldr	r3, [fp, #-16]
 1384 0190 000053E3 		cmp	r3, #0
 1385 0194 C30100AA 		bge	.L69
 1386              		.loc 1 1238 13 is_stmt 0 discriminator 1
 1387 0198 10101BE5 		ldr	r1, [fp, #-16]
 1388 019c 38001BE5 		ldr	r0, [fp, #-56]
 1389 01a0 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1390              		.loc 1 1238 13
 1391 01a4 BF0100EA 		b	.L69
 1392              	.L86:
1239:../../Source/Kernel/rme_kernel.c ****         }
1240:../../Source/Kernel/rme_kernel.c ****         /* Call kernel functions */
1241:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_KFN:
1242:../../Source/Kernel/rme_kernel.c ****         {
1243:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1244:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 47


1245:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Kfn_Act(Cpt,
 1393              		.loc 1 1245 20 is_stmt 1
 1394 01a8 28301BE5 		ldr	r3, [fp, #-40]
 1395 01ac 03C0A0E1 		mov	ip, r3
1246:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1247:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Kfn */
1248:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Func_ID */
 1396              		.loc 1 1248 33
 1397 01b0 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1398              		.loc 1 1245 20
 1399 01b4 7300FFE6 		uxth	r0, r3
1249:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]),                     /* rme_ptr_t Sub_ID */
 1400              		.loc 1 1249 33
 1401 01b8 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1402              		.loc 1 1245 20
 1403 01bc 2338A0E1 		lsr	r3, r3, #16
 1404 01c0 30201BE5 		ldr	r2, [fp, #-48]
 1405 01c4 2C101BE5 		ldr	r1, [fp, #-44]
 1406 01c8 08108DE5 		str	r1, [sp, #8]
 1407 01cc 04208DE5 		str	r2, [sp, #4]
 1408 01d0 00308DE5 		str	r3, [sp]
 1409 01d4 0030A0E1 		mov	r3, r0
 1410 01d8 0C20A0E1 		mov	r2, ip
 1411 01dc 38101BE5 		ldr	r1, [fp, #-56]
 1412 01e0 14001BE5 		ldr	r0, [fp, #-20]
 1413 01e4 FEFFFFEB 		bl	_RME_Kfn_Act
 1414 01e8 10000BE5 		str	r0, [fp, #-16]
1250:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Param1 */
1251:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Param2 */
1252:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg, Retval);
 1415              		.loc 1 1252 13
 1416 01ec 10301BE5 		ldr	r3, [fp, #-16]
 1417 01f0 000053E3 		cmp	r3, #0
 1418 01f4 AB0100AA 		bge	.L69
 1419              		.loc 1 1252 13 is_stmt 0 discriminator 1
 1420 01f8 10101BE5 		ldr	r1, [fp, #-16]
 1421 01fc 38001BE5 		ldr	r0, [fp, #-56]
 1422 0200 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1423              		.loc 1 1252 13
 1424 0204 A70100EA 		b	.L69
 1425              	.L85:
1253:../../Source/Kernel/rme_kernel.c ****         }
1254:../../Source/Kernel/rme_kernel.c ****         /* Free a thread from some core */
1255:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_FREE:
1256:../../Source/Kernel/rme_kernel.c ****         {
1257:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1258:../../Source/Kernel/rme_kernel.c ****             
1259:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Free(Cpt,
1260:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1261:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Param[0]);                /* rme_cid_t Cap_Thd */
 1426              		.loc 1 1261 56 is_stmt 1
 1427 0208 34301BE5 		ldr	r3, [fp, #-52]
1259:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1428              		.loc 1 1259 20
 1429 020c 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 48


 1430 0210 38101BE5 		ldr	r1, [fp, #-56]
 1431 0214 14001BE5 		ldr	r0, [fp, #-20]
 1432 0218 FEFFFFEB 		bl	_RME_Thd_Sched_Free
 1433 021c 10000BE5 		str	r0, [fp, #-16]
1262:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1434              		.loc 1 1262 13
 1435 0220 10301BE5 		ldr	r3, [fp, #-16]
 1436 0224 000053E3 		cmp	r3, #0
 1437 0228 9E0100AA 		bge	.L69
 1438              		.loc 1 1262 13 is_stmt 0 discriminator 1
 1439 022c 10101BE5 		ldr	r1, [fp, #-16]
 1440 0230 38001BE5 		ldr	r0, [fp, #-56]
 1441 0234 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1442              		.loc 1 1262 13
 1443 0238 9A0100EA 		b	.L69
 1444              	.L84:
1263:../../Source/Kernel/rme_kernel.c ****         }
1264:../../Source/Kernel/rme_kernel.c ****         /* Changing thread execution context */
1265:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_EXEC_SET:
1266:../../Source/Kernel/rme_kernel.c ****         {
1267:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1268:../../Source/Kernel/rme_kernel.c ****             
1269:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Exec_Set(Cpt,
 1445              		.loc 1 1269 20 is_stmt 1
 1446 023c 28301BE5 		ldr	r3, [fp, #-40]
 1447 0240 0300A0E1 		mov	r0, r3
 1448 0244 34101BE5 		ldr	r1, [fp, #-52]
 1449 0248 30301BE5 		ldr	r3, [fp, #-48]
 1450 024c 2C201BE5 		ldr	r2, [fp, #-44]
 1451 0250 04208DE5 		str	r2, [sp, #4]
 1452 0254 00308DE5 		str	r3, [sp]
 1453 0258 0130A0E1 		mov	r3, r1
 1454 025c 0020A0E1 		mov	r2, r0
 1455 0260 38101BE5 		ldr	r1, [fp, #-56]
 1456 0264 14001BE5 		ldr	r0, [fp, #-20]
 1457 0268 FEFFFFEB 		bl	_RME_Thd_Exec_Set
 1458 026c 10000BE5 		str	r0, [fp, #-16]
1270:../../Source/Kernel/rme_kernel.c ****                                      Reg,                                   /* volatile struct RME_
1271:../../Source/Kernel/rme_kernel.c ****                                      (rme_cid_t)Cid,                        /* rme_cid_t Cap_Thd */
1272:../../Source/Kernel/rme_kernel.c ****                                      Param[0],                              /* rme_ptr_t Entry */
1273:../../Source/Kernel/rme_kernel.c ****                                      Param[1],                              /* rme_ptr_t Stack */
1274:../../Source/Kernel/rme_kernel.c ****                                      Param[2]);                             /* rme_ptr_t Param */
1275:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1459              		.loc 1 1275 13
 1460 0270 10301BE5 		ldr	r3, [fp, #-16]
 1461 0274 000053E3 		cmp	r3, #0
 1462 0278 8A0100AA 		bge	.L69
 1463              		.loc 1 1275 13 is_stmt 0 discriminator 1
 1464 027c 10101BE5 		ldr	r1, [fp, #-16]
 1465 0280 38001BE5 		ldr	r0, [fp, #-56]
 1466 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1467              		.loc 1 1275 13
 1468 0288 860100EA 		b	.L69
 1469              	.L83:
1276:../../Source/Kernel/rme_kernel.c ****         }
1277:../../Source/Kernel/rme_kernel.c ****         /* Changing thread priority (up to three threads at once) */
1278:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_PRIO:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 49


1279:../../Source/Kernel/rme_kernel.c ****         {
1280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1281:../../Source/Kernel/rme_kernel.c ****             
1282:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Prio(Cpt,
 1470              		.loc 1 1282 20 is_stmt 1
 1471 028c 28E01BE5 		ldr	lr, [fp, #-40]
1283:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1284:../../Source/Kernel/rme_kernel.c ****                                        Cid,                                 /* rme_ptr_t Number */
1285:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Thd0 *
 1472              		.loc 1 1285 51
 1473 0290 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1474              		.loc 1 1282 20
 1475 0294 7340FFE6 		uxth	r4, r3
1286:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[0]),              /* rme_ptr_t Prio0 */
 1476              		.loc 1 1286 40
 1477 0298 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1478              		.loc 1 1282 20
 1479 029c 2338A0E1 		lsr	r3, r3, #16
1287:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[1]),   /* rme_cid_t Cap_Thd1 *
 1480              		.loc 1 1287 51
 1481 02a0 30201BE5 		ldr	r2, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1482              		.loc 1 1282 20
 1483 02a4 7220FFE6 		uxth	r2, r2
1288:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[1]),              /* rme_ptr_t Prio1 */
 1484              		.loc 1 1288 40
 1485 02a8 30101BE5 		ldr	r1, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1486              		.loc 1 1282 20
 1487 02ac 2118A0E1 		lsr	r1, r1, #16
1289:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[2]),   /* rme_cid_t Cap_Thd2 *
 1488              		.loc 1 1289 51
 1489 02b0 2C001BE5 		ldr	r0, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1490              		.loc 1 1282 20
 1491 02b4 7000FFE6 		uxth	r0, r0
1290:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[2]));             /* rme_ptr_t Prio2 */
 1492              		.loc 1 1290 40
 1493 02b8 2CC01BE5 		ldr	ip, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1494              		.loc 1 1282 20
 1495 02bc 2CC8A0E1 		lsr	ip, ip, #16
 1496 02c0 10C08DE5 		str	ip, [sp, #16]
 1497 02c4 0C008DE5 		str	r0, [sp, #12]
 1498 02c8 08108DE5 		str	r1, [sp, #8]
 1499 02cc 04208DE5 		str	r2, [sp, #4]
 1500 02d0 00308DE5 		str	r3, [sp]
 1501 02d4 0430A0E1 		mov	r3, r4
 1502 02d8 0E20A0E1 		mov	r2, lr
 1503 02dc 38101BE5 		ldr	r1, [fp, #-56]
 1504 02e0 14001BE5 		ldr	r0, [fp, #-20]
 1505 02e4 FEFFFFEB 		bl	_RME_Thd_Sched_Prio
 1506 02e8 10000BE5 		str	r0, [fp, #-16]
1291:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1507              		.loc 1 1291 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 50


 1508 02ec 10301BE5 		ldr	r3, [fp, #-16]
 1509 02f0 000053E3 		cmp	r3, #0
 1510 02f4 6B0100AA 		bge	.L69
 1511              		.loc 1 1291 13 is_stmt 0 discriminator 1
 1512 02f8 10101BE5 		ldr	r1, [fp, #-16]
 1513 02fc 38001BE5 		ldr	r0, [fp, #-56]
 1514 0300 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1515              		.loc 1 1291 13
 1516 0304 670100EA 		b	.L69
 1517              	.L82:
1292:../../Source/Kernel/rme_kernel.c ****         }
1293:../../Source/Kernel/rme_kernel.c ****         /* Transfer time to a thread */
1294:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_TIME_XFER:
1295:../../Source/Kernel/rme_kernel.c ****         {
1296:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1297:../../Source/Kernel/rme_kernel.c ****             
1298:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Time_Xfer(Cpt,
1299:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
1300:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0],                  /* rme_cid_t Cap_Thd_Ds
 1518              		.loc 1 1300 55 is_stmt 1
 1519 0308 34301BE5 		ldr	r3, [fp, #-52]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1520              		.loc 1 1298 20
 1521 030c 0320A0E1 		mov	r2, r3
1301:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[1],                  /* rme_cid_t Cap_Thd_Sr
 1522              		.loc 1 1301 55
 1523 0310 30301BE5 		ldr	r3, [fp, #-48]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1524              		.loc 1 1298 20
 1525 0314 0310A0E1 		mov	r1, r3
 1526 0318 2C301BE5 		ldr	r3, [fp, #-44]
 1527 031c 00308DE5 		str	r3, [sp]
 1528 0320 0130A0E1 		mov	r3, r1
 1529 0324 38101BE5 		ldr	r1, [fp, #-56]
 1530 0328 14001BE5 		ldr	r0, [fp, #-20]
 1531 032c FEFFFFEB 		bl	_RME_Thd_Time_Xfer
 1532 0330 10000BE5 		str	r0, [fp, #-16]
1302:../../Source/Kernel/rme_kernel.c ****                                       Param[2]);                            /* rme_ptr_t Time */
1303:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1533              		.loc 1 1303 13
 1534 0334 10301BE5 		ldr	r3, [fp, #-16]
 1535 0338 000053E3 		cmp	r3, #0
 1536 033c 590100AA 		bge	.L69
 1537              		.loc 1 1303 13 is_stmt 0 discriminator 1
 1538 0340 10101BE5 		ldr	r1, [fp, #-16]
 1539 0344 38001BE5 		ldr	r0, [fp, #-56]
 1540 0348 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1541              		.loc 1 1303 13
 1542 034c 550100EA 		b	.L69
 1543              	.L80:
1304:../../Source/Kernel/rme_kernel.c ****         }
1305:../../Source/Kernel/rme_kernel.c ****         /* Switch to another thread */
1306:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SWT:
1307:../../Source/Kernel/rme_kernel.c ****         {
1308:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1309:../../Source/Kernel/rme_kernel.c ****             
1310:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Swt(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 51


1311:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1312:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Thd */
 1544              		.loc 1 1312 49 is_stmt 1
 1545 0350 34301BE5 		ldr	r3, [fp, #-52]
1310:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1546              		.loc 1 1310 20
 1547 0354 0320A0E1 		mov	r2, r3
 1548 0358 30301BE5 		ldr	r3, [fp, #-48]
 1549 035c 38101BE5 		ldr	r1, [fp, #-56]
 1550 0360 14001BE5 		ldr	r0, [fp, #-20]
 1551 0364 FEFFFFEB 		bl	_RME_Thd_Swt
 1552 0368 10000BE5 		str	r0, [fp, #-16]
1313:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Full_Yield
1314:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1553              		.loc 1 1314 13
 1554 036c 10301BE5 		ldr	r3, [fp, #-16]
 1555 0370 000053E3 		cmp	r3, #0
 1556 0374 4B0100AA 		bge	.L69
 1557              		.loc 1 1314 13 is_stmt 0 discriminator 1
 1558 0378 10101BE5 		ldr	r1, [fp, #-16]
 1559 037c 38001BE5 		ldr	r0, [fp, #-56]
 1560 0380 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1561              		.loc 1 1314 13
 1562 0384 470100EA 		b	.L69
 1563              	.L126:
1315:../../Source/Kernel/rme_kernel.c ****         }
1316:../../Source/Kernel/rme_kernel.c ****         default:
1317:../../Source/Kernel/rme_kernel.c ****         {
1318:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1319:../../Source/Kernel/rme_kernel.c ****             break;
 1564              		.loc 1 1319 13 is_stmt 1
 1565 0388 00F020E3 		nop
1320:../../Source/Kernel/rme_kernel.c ****         }
1321:../../Source/Kernel/rme_kernel.c ****     } 
1322:../../Source/Kernel/rme_kernel.c **** 
1323:../../Source/Kernel/rme_kernel.c ****     /* It is guaranteed that these functions will never cause a context switch */
1324:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1566              		.loc 1 1324 5
 1567 038c 18301BE5 		ldr	r3, [fp, #-24]
 1568 0390 0A2043E2 		sub	r2, r3, #10
 1569 0394 18359FE5 		ldr	r3, .L127+4
 1570 0398 170052E3 		cmp	r2, #23
 1571 039c 3B01008A 		bhi	.L97
 1572 03a0 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1573              	.Lrtx99:
 1574 03a4 00F020E3 		nop
 1575              		.section	.rodata._RME_Svc_Handler
 1576              		.align	2
 1577              	.L99:
 1578 0020 A8030000 		.word	.L122
 1579 0024 F0030000 		.word	.L121
 1580 0028 10040000 		.word	.L120
 1581 002c 30040000 		.word	.L119
 1582 0030 94040000 		.word	.L118
 1583 0034 B4040000 		.word	.L117
 1584 0038 28050000 		.word	.L116
 1585 003c 48050000 		.word	.L115
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 52


 1586 0040 A0050000 		.word	.L114
 1587 0044 C0050000 		.word	.L113
 1588 0048 F8050000 		.word	.L112
 1589 004c 18060000 		.word	.L111
 1590 0050 4C060000 		.word	.L110
 1591 0054 6C060000 		.word	.L109
 1592 0058 8C060000 		.word	.L108
 1593 005c AC060000 		.word	.L107
 1594 0060 20070000 		.word	.L106
 1595 0064 40070000 		.word	.L105
 1596 0068 9C070000 		.word	.L104
 1597 006c B4070000 		.word	.L103
 1598 0070 D4070000 		.word	.L102
 1599 0074 F4070000 		.word	.L101
 1600 0078 40080000 		.word	.L100
 1601 007c 60080000 		.word	.L98
 1602              		.section	.text._RME_Svc_Handler
 1603              		.p2align 2
 1604              	.L122:
1325:../../Source/Kernel/rme_kernel.c ****     {
1326:../../Source/Kernel/rme_kernel.c ****         /* Capability table */
1327:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_CRT:
1328:../../Source/Kernel/rme_kernel.c ****         {
1329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1330:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Crt(Cpt,
 1605              		.loc 1 1330 20
 1606 03a8 28301BE5 		ldr	r3, [fp, #-40]
 1607 03ac 0300A0E1 		mov	r0, r3
1331:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1332:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1608              		.loc 1 1332 44
 1609 03b0 34301BE5 		ldr	r3, [fp, #-52]
 1610 03b4 2338A0E1 		lsr	r3, r3, #16
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1611              		.loc 1 1330 20
 1612 03b8 03C0A0E1 		mov	ip, r3
1333:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Crt */
 1613              		.loc 1 1333 44
 1614 03bc 34301BE5 		ldr	r3, [fp, #-52]
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1615              		.loc 1 1330 20
 1616 03c0 7310FFE6 		uxth	r1, r3
 1617 03c4 30301BE5 		ldr	r3, [fp, #-48]
 1618 03c8 2C201BE5 		ldr	r2, [fp, #-44]
 1619 03cc 04208DE5 		str	r2, [sp, #4]
 1620 03d0 00308DE5 		str	r3, [sp]
 1621 03d4 0130A0E1 		mov	r3, r1
 1622 03d8 0C20A0E1 		mov	r2, ip
 1623 03dc 0010A0E1 		mov	r1, r0
 1624 03e0 14001BE5 		ldr	r0, [fp, #-20]
 1625 03e4 FEFFFFEB 		bl	_RME_Cpt_Crt
 1626 03e8 10000BE5 		str	r0, [fp, #-16]
1334:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1335:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Entry_Num 
1336:../../Source/Kernel/rme_kernel.c ****             break;
 1627              		.loc 1 1336 13
 1628 03ec 2A0100EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 53


 1629              	.L121:
1337:../../Source/Kernel/rme_kernel.c ****         }
1338:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_DEL:
1339:../../Source/Kernel/rme_kernel.c ****         {
1340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1341:../../Source/Kernel/rme_kernel.c ****             
1342:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Del(Cpt,
 1630              		.loc 1 1342 20
 1631 03f0 28301BE5 		ldr	r3, [fp, #-40]
 1632 03f4 0310A0E1 		mov	r1, r3
1343:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
1344:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Cpt */
 1633              		.loc 1 1344 49
 1634 03f8 34301BE5 		ldr	r3, [fp, #-52]
1342:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
 1635              		.loc 1 1342 20
 1636 03fc 0320A0E1 		mov	r2, r3
 1637 0400 14001BE5 		ldr	r0, [fp, #-20]
 1638 0404 FEFFFFEB 		bl	_RME_Cpt_Del
 1639 0408 10000BE5 		str	r0, [fp, #-16]
1345:../../Source/Kernel/rme_kernel.c ****             break;
 1640              		.loc 1 1345 13
 1641 040c 220100EA 		b	.L123
 1642              	.L120:
1346:../../Source/Kernel/rme_kernel.c ****         }
1347:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_FRZ:
1348:../../Source/Kernel/rme_kernel.c ****         {
1349:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1350:../../Source/Kernel/rme_kernel.c ****             
1351:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Frz(Cpt,
 1643              		.loc 1 1351 20
 1644 0410 28301BE5 		ldr	r3, [fp, #-40]
 1645 0414 0310A0E1 		mov	r1, r3
1352:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
1353:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Frz */
 1646              		.loc 1 1353 49
 1647 0418 34301BE5 		ldr	r3, [fp, #-52]
1351:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
 1648              		.loc 1 1351 20
 1649 041c 0320A0E1 		mov	r2, r3
 1650 0420 14001BE5 		ldr	r0, [fp, #-20]
 1651 0424 FEFFFFEB 		bl	_RME_Cpt_Frz
 1652 0428 10000BE5 		str	r0, [fp, #-16]
1354:../../Source/Kernel/rme_kernel.c ****             break;
 1653              		.loc 1 1354 13
 1654 042c 1A0100EA 		b	.L123
 1655              	.L119:
1355:../../Source/Kernel/rme_kernel.c ****         }
1356:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_ADD:
1357:../../Source/Kernel/rme_kernel.c ****         {
1358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1359:../../Source/Kernel/rme_kernel.c ****             
1360:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Add(Cpt,
1361:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1656              		.loc 1 1361 44
 1657 0430 34301BE5 		ldr	r3, [fp, #-52]
 1658 0434 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 54


1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1659              		.loc 1 1360 20
 1660 0438 03E0A0E1 		mov	lr, r3
1362:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Dst */
 1661              		.loc 1 1362 44
 1662 043c 34301BE5 		ldr	r3, [fp, #-52]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1663              		.loc 1 1360 20
 1664 0440 73C0FFE6 		uxth	ip, r3
1363:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Cpt_Sr
 1665              		.loc 1 1363 44
 1666 0444 30301BE5 		ldr	r3, [fp, #-48]
 1667 0448 2338A0E1 		lsr	r3, r3, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1668              		.loc 1 1360 20
 1669 044c 0340A0E1 		mov	r4, r3
1364:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[1]),          /* rme_cid_t Cap_Src */
 1670              		.loc 1 1364 44
 1671 0450 30301BE5 		ldr	r3, [fp, #-48]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1672              		.loc 1 1360 20
 1673 0454 7330FFE6 		uxth	r3, r3
 1674 0458 2C201BE5 		ldr	r2, [fp, #-44]
1365:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Flag */
1366:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_KM(Svc,Cid));                     /* rme_ptr_t Ext_Flag *
 1675              		.loc 1 1366 33
 1676 045c 24101BE5 		ldr	r1, [fp, #-36]
 1677 0460 0108A0E1 		lsl	r0, r1, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1678              		.loc 1 1360 20
 1679 0464 28101BE5 		ldr	r1, [fp, #-40]
 1680 0468 011080E1 		orr	r1, r0, r1
 1681 046c 08108DE5 		str	r1, [sp, #8]
 1682 0470 04208DE5 		str	r2, [sp, #4]
 1683 0474 00308DE5 		str	r3, [sp]
 1684 0478 0430A0E1 		mov	r3, r4
 1685 047c 0C20A0E1 		mov	r2, ip
 1686 0480 0E10A0E1 		mov	r1, lr
 1687 0484 14001BE5 		ldr	r0, [fp, #-20]
 1688 0488 FEFFFFEB 		bl	_RME_Cpt_Add
 1689 048c 10000BE5 		str	r0, [fp, #-16]
1367:../../Source/Kernel/rme_kernel.c ****             break;
 1690              		.loc 1 1367 13
 1691 0490 010100EA 		b	.L123
 1692              	.L118:
1368:../../Source/Kernel/rme_kernel.c ****         }
1369:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_REM:
1370:../../Source/Kernel/rme_kernel.c ****         {
1371:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1372:../../Source/Kernel/rme_kernel.c ****             
1373:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Rem(Cpt,
 1693              		.loc 1 1373 20
 1694 0494 28301BE5 		ldr	r3, [fp, #-40]
 1695 0498 0310A0E1 		mov	r1, r3
1374:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
1375:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Rem */
 1696              		.loc 1 1375 49
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 55


 1697 049c 34301BE5 		ldr	r3, [fp, #-52]
1373:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
 1698              		.loc 1 1373 20
 1699 04a0 0320A0E1 		mov	r2, r3
 1700 04a4 14001BE5 		ldr	r0, [fp, #-20]
 1701 04a8 FEFFFFEB 		bl	_RME_Cpt_Rem
 1702 04ac 10000BE5 		str	r0, [fp, #-16]
1376:../../Source/Kernel/rme_kernel.c ****             break;
 1703              		.loc 1 1376 13
 1704 04b0 F90000EA 		b	.L123
 1705              	.L117:
1377:../../Source/Kernel/rme_kernel.c ****         }
1378:../../Source/Kernel/rme_kernel.c ****         
1379:../../Source/Kernel/rme_kernel.c ****         /* Page table */
1380:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1381:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CRT:
1382:../../Source/Kernel/rme_kernel.c ****         {
1383:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1384:../../Source/Kernel/rme_kernel.c ****             
1385:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Crt(Cpt,
 1706              		.loc 1 1385 20
 1707 04b4 28301BE5 		ldr	r3, [fp, #-40]
 1708 04b8 0340A0E1 		mov	r4, r3
1386:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1387:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1709              		.loc 1 1387 44
 1710 04bc 34301BE5 		ldr	r3, [fp, #-52]
 1711 04c0 2338A0E1 		lsr	r3, r3, #16
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1712              		.loc 1 1385 20
 1713 04c4 0350A0E1 		mov	r5, r3
1388:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_Q1(Param[0]),          /* rme_cid_t Cap_Pgt */
 1714              		.loc 1 1388 44
 1715 04c8 34301BE5 		ldr	r3, [fp, #-52]
 1716 04cc 2334A0E1 		lsr	r3, r3, #8
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1717              		.loc 1 1385 20
 1718 04d0 73E0EFE6 		uxtb	lr, r3
 1719 04d4 30301BE5 		ldr	r3, [fp, #-48]
1389:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1390:../../Source/Kernel/rme_kernel.c ****                                 Param[2]&RME_MASK_BEGIN(1U),                /* rme_ptr_t Base */
 1720              		.loc 1 1390 38
 1721 04d8 2C201BE5 		ldr	r2, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1722              		.loc 1 1385 20
 1723 04dc 0120C2E3 		bic	r2, r2, #1
1391:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PT(Param[2]),                     /* rme_ptr_t Is_Top */
 1724              		.loc 1 1391 33
 1725 04e0 2C101BE5 		ldr	r1, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1726              		.loc 1 1385 20
 1727 04e4 011001E2 		and	r1, r1, #1
1392:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_Q0(Param[0]),                     /* rme_ptr_t Size_Order
 1728              		.loc 1 1392 33
 1729 04e8 34001BE5 		ldr	r0, [fp, #-52]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1730              		.loc 1 1385 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 56


 1731 04ec 7000EFE6 		uxtb	r0, r0
 1732 04f0 24C01BE5 		ldr	ip, [fp, #-36]
 1733 04f4 2CC4A0E1 		lsr	ip, ip, #8
 1734 04f8 10C08DE5 		str	ip, [sp, #16]
 1735 04fc 0C008DE5 		str	r0, [sp, #12]
 1736 0500 08108DE5 		str	r1, [sp, #8]
 1737 0504 04208DE5 		str	r2, [sp, #4]
 1738 0508 00308DE5 		str	r3, [sp]
 1739 050c 0E30A0E1 		mov	r3, lr
 1740 0510 0520A0E1 		mov	r2, r5
 1741 0514 0410A0E1 		mov	r1, r4
 1742 0518 14001BE5 		ldr	r0, [fp, #-20]
 1743 051c FEFFFFEB 		bl	_RME_Pgt_Crt
 1744 0520 10000BE5 		str	r0, [fp, #-16]
1393:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PC(Svc));                         /* rme_ptr_t Num_Order 
1394:../../Source/Kernel/rme_kernel.c ****             break;
 1745              		.loc 1 1394 13
 1746 0524 DC0000EA 		b	.L123
 1747              	.L116:
1395:../../Source/Kernel/rme_kernel.c ****         }
1396:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DEL:
1397:../../Source/Kernel/rme_kernel.c ****         {
1398:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1399:../../Source/Kernel/rme_kernel.c ****             
1400:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Del(Cpt,
 1748              		.loc 1 1400 20
 1749 0528 28301BE5 		ldr	r3, [fp, #-40]
 1750 052c 0310A0E1 		mov	r1, r3
1401:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1402:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Pgt */
 1751              		.loc 1 1402 49
 1752 0530 34301BE5 		ldr	r3, [fp, #-52]
1400:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1753              		.loc 1 1400 20
 1754 0534 0320A0E1 		mov	r2, r3
 1755 0538 14001BE5 		ldr	r0, [fp, #-20]
 1756 053c FEFFFFEB 		bl	_RME_Pgt_Del
 1757 0540 10000BE5 		str	r0, [fp, #-16]
1403:../../Source/Kernel/rme_kernel.c ****             break;
 1758              		.loc 1 1403 13
 1759 0544 D40000EA 		b	.L123
 1760              	.L115:
1404:../../Source/Kernel/rme_kernel.c ****         }
1405:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_ADD:
1406:../../Source/Kernel/rme_kernel.c ****         {
1407:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1408:../../Source/Kernel/rme_kernel.c ****             
1409:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Add(Cpt,
1410:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1761              		.loc 1 1410 44
 1762 0548 34301BE5 		ldr	r3, [fp, #-52]
 1763 054c 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1764              		.loc 1 1409 20
 1765 0550 03E0A0E1 		mov	lr, r3
1411:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Pos_Dst */
 1766              		.loc 1 1411 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 57


 1767 0554 34301BE5 		ldr	r3, [fp, #-52]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1768              		.loc 1 1409 20
 1769 0558 7310FFE6 		uxth	r1, r3
 1770 055c 28001BE5 		ldr	r0, [fp, #-40]
1412:../../Source/Kernel/rme_kernel.c ****                                 Cid,                                        /* rme_ptr_t Flag_Dst *
1413:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Pgt_Sr
 1771              		.loc 1 1413 44
 1772 0560 30301BE5 		ldr	r3, [fp, #-48]
 1773 0564 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1774              		.loc 1 1409 20
 1775 0568 03C0A0E1 		mov	ip, r3
1414:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Pos_Src */
 1776              		.loc 1 1414 33
 1777 056c 30301BE5 		ldr	r3, [fp, #-48]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1778              		.loc 1 1409 20
 1779 0570 7330FFE6 		uxth	r3, r3
 1780 0574 2C201BE5 		ldr	r2, [fp, #-44]
 1781 0578 08208DE5 		str	r2, [sp, #8]
 1782 057c 04308DE5 		str	r3, [sp, #4]
 1783 0580 00C08DE5 		str	ip, [sp]
 1784 0584 0030A0E1 		mov	r3, r0
 1785 0588 0120A0E1 		mov	r2, r1
 1786 058c 0E10A0E1 		mov	r1, lr
 1787 0590 14001BE5 		ldr	r0, [fp, #-20]
 1788 0594 FEFFFFEB 		bl	_RME_Pgt_Add
 1789 0598 10000BE5 		str	r0, [fp, #-16]
1415:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Index */
1416:../../Source/Kernel/rme_kernel.c ****             break;
 1790              		.loc 1 1416 13
 1791 059c BE0000EA 		b	.L123
 1792              	.L114:
1417:../../Source/Kernel/rme_kernel.c ****         }
1418:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_REM:
1419:../../Source/Kernel/rme_kernel.c ****         {
1420:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1421:../../Source/Kernel/rme_kernel.c ****             
1422:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Rem(Cpt,
1423:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1793              		.loc 1 1423 49
 1794 05a0 34301BE5 		ldr	r3, [fp, #-52]
1422:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1795              		.loc 1 1422 20
 1796 05a4 0310A0E1 		mov	r1, r3
 1797 05a8 30301BE5 		ldr	r3, [fp, #-48]
 1798 05ac 0320A0E1 		mov	r2, r3
 1799 05b0 14001BE5 		ldr	r0, [fp, #-20]
 1800 05b4 FEFFFFEB 		bl	_RME_Pgt_Rem
 1801 05b8 10000BE5 		str	r0, [fp, #-16]
1424:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Pos */
1425:../../Source/Kernel/rme_kernel.c ****             break;
 1802              		.loc 1 1425 13
 1803 05bc B60000EA 		b	.L123
 1804              	.L113:
1426:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 58


1427:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CON:
1428:../../Source/Kernel/rme_kernel.c ****         {
1429:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1430:../../Source/Kernel/rme_kernel.c ****             
1431:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Con(Cpt,
1432:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1805              		.loc 1 1432 44
 1806 05c0 34301BE5 		ldr	r3, [fp, #-52]
 1807 05c4 2338A0E1 		lsr	r3, r3, #16
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1808              		.loc 1 1431 20
 1809 05c8 0300A0E1 		mov	r0, r3
 1810 05cc 30201BE5 		ldr	r2, [fp, #-48]
1433:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1434:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Pgt_Ch
 1811              		.loc 1 1434 44
 1812 05d0 34301BE5 		ldr	r3, [fp, #-52]
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1813              		.loc 1 1431 20
 1814 05d4 7310FFE6 		uxth	r1, r3
 1815 05d8 2C301BE5 		ldr	r3, [fp, #-44]
 1816 05dc 00308DE5 		str	r3, [sp]
 1817 05e0 0130A0E1 		mov	r3, r1
 1818 05e4 0010A0E1 		mov	r1, r0
 1819 05e8 14001BE5 		ldr	r0, [fp, #-20]
 1820 05ec FEFFFFEB 		bl	_RME_Pgt_Con
 1821 05f0 10000BE5 		str	r0, [fp, #-16]
1435:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Flag_Child
1436:../../Source/Kernel/rme_kernel.c ****             break;
 1822              		.loc 1 1436 13
 1823 05f4 A80000EA 		b	.L123
 1824              	.L112:
1437:../../Source/Kernel/rme_kernel.c ****         }
1438:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DES:
1439:../../Source/Kernel/rme_kernel.c ****         {
1440:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1441:../../Source/Kernel/rme_kernel.c ****             
1442:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Des(Cpt,
1443:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1825              		.loc 1 1443 49
 1826 05f8 34301BE5 		ldr	r3, [fp, #-52]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1827              		.loc 1 1442 20
 1828 05fc 0310A0E1 		mov	r1, r3
 1829 0600 30201BE5 		ldr	r2, [fp, #-48]
1444:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1445:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt_Ch
 1830              		.loc 1 1445 49
 1831 0604 2C301BE5 		ldr	r3, [fp, #-44]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1832              		.loc 1 1442 20
 1833 0608 14001BE5 		ldr	r0, [fp, #-20]
 1834 060c FEFFFFEB 		bl	_RME_Pgt_Des
 1835 0610 10000BE5 		str	r0, [fp, #-16]
1446:../../Source/Kernel/rme_kernel.c ****             break;
 1836              		.loc 1 1446 13
 1837 0614 A00000EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 59


 1838              	.L111:
1447:../../Source/Kernel/rme_kernel.c ****         }
1448:../../Source/Kernel/rme_kernel.c **** #endif
1449:../../Source/Kernel/rme_kernel.c ****         /* Process */
1450:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CRT:
1451:../../Source/Kernel/rme_kernel.c ****         {
1452:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1453:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
 1839              		.loc 1 1453 20
 1840 0618 28301BE5 		ldr	r3, [fp, #-40]
 1841 061c 0310A0E1 		mov	r1, r3
1454:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1455:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1842              		.loc 1 1455 49
 1843 0620 34301BE5 		ldr	r3, [fp, #-52]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1844              		.loc 1 1453 20
 1845 0624 0320A0E1 		mov	r2, r3
1456:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
 1846              		.loc 1 1456 49
 1847 0628 30301BE5 		ldr	r3, [fp, #-48]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1848              		.loc 1 1453 20
 1849 062c 0300A0E1 		mov	r0, r3
1457:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt */
 1850              		.loc 1 1457 49
 1851 0630 2C301BE5 		ldr	r3, [fp, #-44]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1852              		.loc 1 1453 20
 1853 0634 00308DE5 		str	r3, [sp]
 1854 0638 0030A0E1 		mov	r3, r0
 1855 063c 14001BE5 		ldr	r0, [fp, #-20]
 1856 0640 FEFFFFEB 		bl	_RME_Prc_Crt
 1857 0644 10000BE5 		str	r0, [fp, #-16]
1458:../../Source/Kernel/rme_kernel.c **** #else
1459:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
1460:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1462:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
1463:../../Source/Kernel/rme_kernel.c ****                                 (rme_ptr_t)Param[2]);                       /* rme_ptr_t Raw_Pgt */
1464:../../Source/Kernel/rme_kernel.c **** #endif
1465:../../Source/Kernel/rme_kernel.c ****             break;
 1858              		.loc 1 1465 13
 1859 0648 930000EA 		b	.L123
 1860              	.L110:
1466:../../Source/Kernel/rme_kernel.c ****         }
1467:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_DEL:
1468:../../Source/Kernel/rme_kernel.c ****         {
1469:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1470:../../Source/Kernel/rme_kernel.c ****             
1471:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Del(Cpt,
 1861              		.loc 1 1471 20
 1862 064c 28301BE5 		ldr	r3, [fp, #-40]
 1863 0650 0310A0E1 		mov	r1, r3
1472:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1473:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Prc */
 1864              		.loc 1 1473 49
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 60


 1865 0654 34301BE5 		ldr	r3, [fp, #-52]
1471:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1866              		.loc 1 1471 20
 1867 0658 0320A0E1 		mov	r2, r3
 1868 065c 14001BE5 		ldr	r0, [fp, #-20]
 1869 0660 FEFFFFEB 		bl	_RME_Prc_Del
 1870 0664 10000BE5 		str	r0, [fp, #-16]
1474:../../Source/Kernel/rme_kernel.c ****             break;
 1871              		.loc 1 1474 13
 1872 0668 8B0000EA 		b	.L123
 1873              	.L109:
1475:../../Source/Kernel/rme_kernel.c ****         }
1476:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CPT:
1477:../../Source/Kernel/rme_kernel.c ****         {
1478:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1479:../../Source/Kernel/rme_kernel.c ****             
1480:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Cpt(Cpt,
1481:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1874              		.loc 1 1481 49
 1875 066c 34301BE5 		ldr	r3, [fp, #-52]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1876              		.loc 1 1480 20
 1877 0670 0310A0E1 		mov	r1, r3
1482:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Cpt */
 1878              		.loc 1 1482 49
 1879 0674 30301BE5 		ldr	r3, [fp, #-48]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1880              		.loc 1 1480 20
 1881 0678 0320A0E1 		mov	r2, r3
 1882 067c 14001BE5 		ldr	r0, [fp, #-20]
 1883 0680 FEFFFFEB 		bl	_RME_Prc_Cpt
 1884 0684 10000BE5 		str	r0, [fp, #-16]
1483:../../Source/Kernel/rme_kernel.c ****             break;
 1885              		.loc 1 1483 13
 1886 0688 830000EA 		b	.L123
 1887              	.L108:
1484:../../Source/Kernel/rme_kernel.c ****         }
1485:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_PGT:
1486:../../Source/Kernel/rme_kernel.c ****         {
1487:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1488:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1489:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1490:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1888              		.loc 1 1490 49
 1889 068c 34301BE5 		ldr	r3, [fp, #-52]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1890              		.loc 1 1489 20
 1891 0690 0310A0E1 		mov	r1, r3
1491:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Pgt */
 1892              		.loc 1 1491 49
 1893 0694 30301BE5 		ldr	r3, [fp, #-48]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1894              		.loc 1 1489 20
 1895 0698 0320A0E1 		mov	r2, r3
 1896 069c 14001BE5 		ldr	r0, [fp, #-20]
 1897 06a0 FEFFFFEB 		bl	_RME_Prc_Pgt
 1898 06a4 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 61


1492:../../Source/Kernel/rme_kernel.c **** #else
1493:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1494:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1495:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Raw_Pgt */
1496:../../Source/Kernel/rme_kernel.c **** #endif
1497:../../Source/Kernel/rme_kernel.c ****             break;
 1899              		.loc 1 1497 13
 1900 06a8 7B0000EA 		b	.L123
 1901              	.L107:
1498:../../Source/Kernel/rme_kernel.c ****         }
1499:../../Source/Kernel/rme_kernel.c ****         
1500:../../Source/Kernel/rme_kernel.c ****         /* Thread */
1501:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_CRT:
1502:../../Source/Kernel/rme_kernel.c ****         {
1503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1504:../../Source/Kernel/rme_kernel.c **** 
1505:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Crt(Cpt,
 1902              		.loc 1 1505 20
 1903 06ac 28301BE5 		ldr	r3, [fp, #-40]
 1904 06b0 0340A0E1 		mov	r4, r3
1506:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1507:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1905              		.loc 1 1507 44
 1906 06b4 34301BE5 		ldr	r3, [fp, #-52]
 1907 06b8 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1908              		.loc 1 1505 20
 1909 06bc 0350A0E1 		mov	r5, r3
1508:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Thd */
 1910              		.loc 1 1508 44
 1911 06c0 34301BE5 		ldr	r3, [fp, #-52]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1912              		.loc 1 1505 20
 1913 06c4 73C0FFE6 		uxth	ip, r3
1509:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Prc */
 1914              		.loc 1 1509 44
 1915 06c8 30301BE5 		ldr	r3, [fp, #-48]
 1916 06cc 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1917              		.loc 1 1505 20
 1918 06d0 03E0A0E1 		mov	lr, r3
1510:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Prio_Max *
 1919              		.loc 1 1510 33
 1920 06d4 30301BE5 		ldr	r3, [fp, #-48]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1921              		.loc 1 1505 20
 1922 06d8 7330FFE6 		uxth	r3, r3
 1923 06dc 2C201BE5 		ldr	r2, [fp, #-44]
 1924 06e0 24101BE5 		ldr	r1, [fp, #-36]
 1925 06e4 A113A0E1 		lsr	r1, r1, #7
 1926 06e8 24001BE5 		ldr	r0, [fp, #-36]
 1927 06ec 400000E2 		and	r0, r0, #64
 1928 06f0 10008DE5 		str	r0, [sp, #16]
 1929 06f4 0C108DE5 		str	r1, [sp, #12]
 1930 06f8 08208DE5 		str	r2, [sp, #8]
 1931 06fc 04308DE5 		str	r3, [sp, #4]
 1932 0700 00E08DE5 		str	lr, [sp]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 62


 1933 0704 0C30A0E1 		mov	r3, ip
 1934 0708 0520A0E1 		mov	r2, r5
 1935 070c 0410A0E1 		mov	r1, r4
 1936 0710 14001BE5 		ldr	r0, [fp, #-20]
 1937 0714 FEFFFFEB 		bl	_RME_Thd_Crt
 1938 0718 10000BE5 		str	r0, [fp, #-16]
1511:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Raddr */
1512:../../Source/Kernel/rme_kernel.c ****                                 Svc>>7,                                     /* rme_ptr_t Attr */
1513:../../Source/Kernel/rme_kernel.c ****                                 Svc&0x40U);                                 /* rme_ptr_t Is_Hyp */
1514:../../Source/Kernel/rme_kernel.c ****             break;
 1939              		.loc 1 1514 13
 1940 071c 5E0000EA 		b	.L123
 1941              	.L106:
1515:../../Source/Kernel/rme_kernel.c ****         }
1516:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_DEL:
1517:../../Source/Kernel/rme_kernel.c ****         {
1518:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1519:../../Source/Kernel/rme_kernel.c ****             
1520:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Del(Cpt,
 1942              		.loc 1 1520 20
 1943 0720 28301BE5 		ldr	r3, [fp, #-40]
 1944 0724 0310A0E1 		mov	r1, r3
1521:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1522:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Thd */
 1945              		.loc 1 1522 49
 1946 0728 34301BE5 		ldr	r3, [fp, #-52]
1520:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1947              		.loc 1 1520 20
 1948 072c 0320A0E1 		mov	r2, r3
 1949 0730 14001BE5 		ldr	r0, [fp, #-20]
 1950 0734 FEFFFFEB 		bl	_RME_Thd_Del
 1951 0738 10000BE5 		str	r0, [fp, #-16]
1523:../../Source/Kernel/rme_kernel.c ****             break;
 1952              		.loc 1 1523 13
 1953 073c 560000EA 		b	.L123
 1954              	.L105:
1524:../../Source/Kernel/rme_kernel.c ****         }
1525:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_BIND:
1526:../../Source/Kernel/rme_kernel.c ****         {
1527:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1528:../../Source/Kernel/rme_kernel.c ****             
1529:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Bind(Cpt,
 1955              		.loc 1 1529 20
 1956 0740 28301BE5 		ldr	r3, [fp, #-40]
 1957 0744 03C0A0E1 		mov	ip, r3
1530:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
1531:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D1(Param[0]),   /* rme_cid_t Cap_Thd_Sc
 1958              		.loc 1 1531 51
 1959 0748 34301BE5 		ldr	r3, [fp, #-52]
 1960 074c 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1961              		.loc 1 1529 20
 1962 0750 03E0A0E1 		mov	lr, r3
1532:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Sig */
 1963              		.loc 1 1532 51
 1964 0754 34301BE5 		ldr	r3, [fp, #-52]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 63


 1965              		.loc 1 1529 20
 1966 0758 7310FFE6 		uxth	r1, r3
1533:../../Source/Kernel/rme_kernel.c ****                                        (rme_tid_t)RME_PARAM_D1(Param[1]),   /* rme_tid_t TID */
 1967              		.loc 1 1533 51
 1968 075c 30301BE5 		ldr	r3, [fp, #-48]
 1969 0760 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1970              		.loc 1 1529 20
 1971 0764 0300A0E1 		mov	r0, r3
1534:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D0(Param[1]),              /* rme_ptr_t Prio */
 1972              		.loc 1 1534 40
 1973 0768 30301BE5 		ldr	r3, [fp, #-48]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1974              		.loc 1 1529 20
 1975 076c 7330FFE6 		uxth	r3, r3
 1976 0770 2C201BE5 		ldr	r2, [fp, #-44]
 1977 0774 08208DE5 		str	r2, [sp, #8]
 1978 0778 04308DE5 		str	r3, [sp, #4]
 1979 077c 00008DE5 		str	r0, [sp]
 1980 0780 0130A0E1 		mov	r3, r1
 1981 0784 0E20A0E1 		mov	r2, lr
 1982 0788 0C10A0E1 		mov	r1, ip
 1983 078c 14001BE5 		ldr	r0, [fp, #-20]
 1984 0790 FEFFFFEB 		bl	_RME_Thd_Sched_Bind
 1985 0794 10000BE5 		str	r0, [fp, #-16]
1535:../../Source/Kernel/rme_kernel.c ****                                        Param[2]);                           /* rme_ptr_t Haddr */
1536:../../Source/Kernel/rme_kernel.c ****             break;
 1986              		.loc 1 1536 13
 1987 0798 3F0000EA 		b	.L123
 1988              	.L104:
1537:../../Source/Kernel/rme_kernel.c ****         }
1538:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_RCV:
1539:../../Source/Kernel/rme_kernel.c ****         {
1540:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1541:../../Source/Kernel/rme_kernel.c ****             
1542:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Rcv(Cpt,
1543:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1989              		.loc 1 1543 55
 1990 079c 34301BE5 		ldr	r3, [fp, #-52]
1542:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1991              		.loc 1 1542 20
 1992 07a0 0310A0E1 		mov	r1, r3
 1993 07a4 14001BE5 		ldr	r0, [fp, #-20]
 1994 07a8 FEFFFFEB 		bl	_RME_Thd_Sched_Rcv
 1995 07ac 10000BE5 		str	r0, [fp, #-16]
1544:../../Source/Kernel/rme_kernel.c ****             break;
 1996              		.loc 1 1544 13
 1997 07b0 390000EA 		b	.L123
 1998              	.L103:
1545:../../Source/Kernel/rme_kernel.c ****         }
1546:../../Source/Kernel/rme_kernel.c ****         
1547:../../Source/Kernel/rme_kernel.c ****         /* Signal */
1548:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_CRT:
1549:../../Source/Kernel/rme_kernel.c ****         {
1550:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1551:../../Source/Kernel/rme_kernel.c ****             
1552:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Crt(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 64


 1999              		.loc 1 1552 20
 2000 07b4 28301BE5 		ldr	r3, [fp, #-40]
 2001 07b8 0310A0E1 		mov	r1, r3
1553:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1554:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2002              		.loc 1 1554 49
 2003 07bc 34301BE5 		ldr	r3, [fp, #-52]
1552:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2004              		.loc 1 1552 20
 2005 07c0 0320A0E1 		mov	r2, r3
 2006 07c4 14001BE5 		ldr	r0, [fp, #-20]
 2007 07c8 FEFFFFEB 		bl	_RME_Sig_Crt
 2008 07cc 10000BE5 		str	r0, [fp, #-16]
1555:../../Source/Kernel/rme_kernel.c ****             break;
 2009              		.loc 1 1555 13
 2010 07d0 310000EA 		b	.L123
 2011              	.L102:
1556:../../Source/Kernel/rme_kernel.c ****         }
1557:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_DEL:
1558:../../Source/Kernel/rme_kernel.c ****         {
1559:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1560:../../Source/Kernel/rme_kernel.c ****             
1561:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Del(Cpt,
 2012              		.loc 1 1561 20
 2013 07d4 28301BE5 		ldr	r3, [fp, #-40]
 2014 07d8 0310A0E1 		mov	r1, r3
1562:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1563:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2015              		.loc 1 1563 49
 2016 07dc 34301BE5 		ldr	r3, [fp, #-52]
1561:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2017              		.loc 1 1561 20
 2018 07e0 0320A0E1 		mov	r2, r3
 2019 07e4 14001BE5 		ldr	r0, [fp, #-20]
 2020 07e8 FEFFFFEB 		bl	_RME_Sig_Del
 2021 07ec 10000BE5 		str	r0, [fp, #-16]
1564:../../Source/Kernel/rme_kernel.c ****             break;
 2022              		.loc 1 1564 13
 2023 07f0 290000EA 		b	.L123
 2024              	.L101:
1565:../../Source/Kernel/rme_kernel.c ****         }
1566:../../Source/Kernel/rme_kernel.c ****         
1567:../../Source/Kernel/rme_kernel.c ****         /* Invocation */
1568:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_CRT:
1569:../../Source/Kernel/rme_kernel.c ****         {
1570:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1571:../../Source/Kernel/rme_kernel.c ****             
1572:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Crt(Cpt,
 2025              		.loc 1 1572 20
 2026 07f4 28301BE5 		ldr	r3, [fp, #-40]
 2027 07f8 0300A0E1 		mov	r0, r3
1573:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1574:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 2028              		.loc 1 1574 44
 2029 07fc 34301BE5 		ldr	r3, [fp, #-52]
 2030 0800 2338A0E1 		lsr	r3, r3, #16
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 65


 2031              		.loc 1 1572 20
 2032 0804 03C0A0E1 		mov	ip, r3
1575:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2033              		.loc 1 1575 44
 2034 0808 34301BE5 		ldr	r3, [fp, #-52]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2035              		.loc 1 1572 20
 2036 080c 7320FFE6 		uxth	r2, r3
1576:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Prc */
 2037              		.loc 1 1576 49
 2038 0810 30301BE5 		ldr	r3, [fp, #-48]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2039              		.loc 1 1572 20
 2040 0814 0310A0E1 		mov	r1, r3
 2041 0818 2C301BE5 		ldr	r3, [fp, #-44]
 2042 081c 04308DE5 		str	r3, [sp, #4]
 2043 0820 00108DE5 		str	r1, [sp]
 2044 0824 0230A0E1 		mov	r3, r2
 2045 0828 0C20A0E1 		mov	r2, ip
 2046 082c 0010A0E1 		mov	r1, r0
 2047 0830 14001BE5 		ldr	r0, [fp, #-20]
 2048 0834 FEFFFFEB 		bl	_RME_Inv_Crt
 2049 0838 10000BE5 		str	r0, [fp, #-16]
1577:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Raddr */
1578:../../Source/Kernel/rme_kernel.c ****             break;
 2050              		.loc 1 1578 13
 2051 083c 160000EA 		b	.L123
 2052              	.L100:
1579:../../Source/Kernel/rme_kernel.c ****         }
1580:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_DEL:
1581:../../Source/Kernel/rme_kernel.c ****         {
1582:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1583:../../Source/Kernel/rme_kernel.c ****             
1584:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Del(Cpt,
 2053              		.loc 1 1584 20
 2054 0840 28301BE5 		ldr	r3, [fp, #-40]
 2055 0844 0310A0E1 		mov	r1, r3
1585:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1586:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Inv */
 2056              		.loc 1 1586 49
 2057 0848 34301BE5 		ldr	r3, [fp, #-52]
1584:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2058              		.loc 1 1584 20
 2059 084c 0320A0E1 		mov	r2, r3
 2060 0850 14001BE5 		ldr	r0, [fp, #-20]
 2061 0854 FEFFFFEB 		bl	_RME_Inv_Del
 2062 0858 10000BE5 		str	r0, [fp, #-16]
1587:../../Source/Kernel/rme_kernel.c ****             break;
 2063              		.loc 1 1587 13
 2064 085c 0E0000EA 		b	.L123
 2065              	.L98:
1588:../../Source/Kernel/rme_kernel.c ****         }
1589:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_SET:
1590:../../Source/Kernel/rme_kernel.c ****         {
1591:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1592:../../Source/Kernel/rme_kernel.c ****             
1593:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Set(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 66


1594:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2066              		.loc 1 1594 44
 2067 0860 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2068              		.loc 1 1593 20
 2069 0864 7310FFE6 		uxth	r1, r3
 2070 0868 30201BE5 		ldr	r2, [fp, #-48]
 2071 086c 2C001BE5 		ldr	r0, [fp, #-44]
1595:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Entry */
1596:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Stack */
1597:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]));                    /* rme_ptr_t Is_Exc_Ret
 2072              		.loc 1 1597 33
 2073 0870 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2074              		.loc 1 1593 20
 2075 0874 2338A0E1 		lsr	r3, r3, #16
 2076 0878 00308DE5 		str	r3, [sp]
 2077 087c 0030A0E1 		mov	r3, r0
 2078 0880 14001BE5 		ldr	r0, [fp, #-20]
 2079 0884 FEFFFFEB 		bl	_RME_Inv_Set
 2080 0888 10000BE5 		str	r0, [fp, #-16]
1598:../../Source/Kernel/rme_kernel.c ****             break;
 2081              		.loc 1 1598 13
 2082 088c 020000EA 		b	.L123
 2083              	.L97:
1599:../../Source/Kernel/rme_kernel.c ****         }
1600:../../Source/Kernel/rme_kernel.c ****         /* This is an error */
1601:../../Source/Kernel/rme_kernel.c ****         default: 
1602:../../Source/Kernel/rme_kernel.c ****         {
1603:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1604:../../Source/Kernel/rme_kernel.c ****             
1605:../../Source/Kernel/rme_kernel.c ****             Retval=RME_ERR_CPT_NULL;
 2084              		.loc 1 1605 19
 2085 0890 0030E0E3 		mvn	r3, #0
 2086 0894 10300BE5 		str	r3, [fp, #-16]
1606:../../Source/Kernel/rme_kernel.c ****             break;
 2087              		.loc 1 1606 13
 2088 0898 00F020E3 		nop
 2089              	.L123:
1607:../../Source/Kernel/rme_kernel.c ****         }
1608:../../Source/Kernel/rme_kernel.c ****     }
1609:../../Source/Kernel/rme_kernel.c ****     
1610:../../Source/Kernel/rme_kernel.c ****     /* We set the registers and return */
1611:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,Retval);
 2090              		.loc 1 1611 5
 2091 089c 10101BE5 		ldr	r1, [fp, #-16]
 2092 08a0 38001BE5 		ldr	r0, [fp, #-56]
 2093 08a4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 2094              	.L69:
1612:../../Source/Kernel/rme_kernel.c **** }
 2095              		.loc 1 1612 1
 2096 08a8 0CD04BE2 		sub	sp, fp, #12
 2097              		.cfi_def_cfa 13, 16
 2098              		@ sp needed
 2099 08ac 3088BDE8 		pop	{r4, r5, fp, pc}
 2100              	.L128:
 2101              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 67


 2102              	.L127:
 2103 08b0 00000000 		.word	.L81
 2104 08b4 20000000 		.word	.L99
 2105              		.cfi_endproc
 2106              	.LFE18:
 2108              		.section	.text._RME_Tim_Handler,"ax",%progbits
 2109              		.align	2
 2110              		.global	_RME_Tim_Handler
 2111              		.syntax unified
 2112              		.arm
 2114              	_RME_Tim_Handler:
 2115              	.LFB19:
1613:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Svc_Handler *********************************************/
1614:../../Source/Kernel/rme_kernel.c **** 
1615:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Handler **************************************************
1616:../../Source/Kernel/rme_kernel.c **** Description : The system tick timer handler of RME.
1617:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1618:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Slice - Number of slices passed since last call of
1619:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1620:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1621:../../Source/Kernel/rme_kernel.c **** Return      : None.
1622:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1623:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Handler(struct RME_Reg_Struct* Reg,
1624:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Slice)
1625:../../Source/Kernel/rme_kernel.c **** {
 2116              		.loc 1 1625 1
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 16
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0000 00482DE9 		push	{fp, lr}
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 11, -8
 2123              		.cfi_offset 14, -4
 2124 0004 04B08DE2 		add	fp, sp, #4
 2125              		.cfi_def_cfa 11, 4
 2126 0008 10D04DE2 		sub	sp, sp, #16
 2127 000c 10000BE5 		str	r0, [fp, #-16]
 2128 0010 14100BE5 		str	r1, [fp, #-20]
1626:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
1627:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1628:../../Source/Kernel/rme_kernel.c ****     
1629:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 2129              		.loc 1 1629 10
 2130 0014 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2131 0018 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2132 001c 08300BE5 		str	r3, [fp, #-8]
1630:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 2133              		.loc 1 1630 12
 2134 0020 08301BE5 		ldr	r3, [fp, #-8]
 2135 0024 043093E5 		ldr	r3, [r3, #4]
 2136 0028 0C300BE5 		str	r3, [fp, #-12]
1631:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2137              		.loc 1 1631 22
 2138 002c 0C301BE5 		ldr	r3, [fp, #-12]
 2139 0030 183093E5 		ldr	r3, [r3, #24]
 2140              		.loc 1 1631 7
 2141 0034 0E0173E3 		cmn	r3, #-2147483645
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 68


 2142 0038 1500008A 		bhi	.L130
1632:../../Source/Kernel/rme_kernel.c ****     {
1633:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1634:../../Source/Kernel/rme_kernel.c **** 
1635:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, and see if the timeslice is used up */
1636:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2143              		.loc 1 1636 32
 2144 003c 0C301BE5 		ldr	r3, [fp, #-12]
 2145 0040 183093E5 		ldr	r3, [r3, #24]
 2146              		.loc 1 1636 11
 2147 0044 14201BE5 		ldr	r2, [fp, #-20]
 2148 0048 030052E1 		cmp	r2, r3
 2149 004c 0600002A 		bcs	.L131
1637:../../Source/Kernel/rme_kernel.c ****         {
1638:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1639:../../Source/Kernel/rme_kernel.c ****             
1640:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2150              		.loc 1 1640 27
 2151 0050 0C301BE5 		ldr	r3, [fp, #-12]
 2152 0054 182093E5 		ldr	r2, [r3, #24]
 2153              		.loc 1 1640 33
 2154 0058 14301BE5 		ldr	r3, [fp, #-20]
 2155 005c 032042E0 		sub	r2, r2, r3
 2156 0060 0C301BE5 		ldr	r3, [fp, #-12]
 2157 0064 182083E5 		str	r2, [r3, #24]
 2158 0068 090000EA 		b	.L130
 2159              	.L131:
1641:../../Source/Kernel/rme_kernel.c ****         }
1642:../../Source/Kernel/rme_kernel.c ****         else
1643:../../Source/Kernel/rme_kernel.c ****         {
1644:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1645:../../Source/Kernel/rme_kernel.c **** 
1646:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
1647:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 2160              		.loc 1 1647 33
 2161 006c 0C301BE5 		ldr	r3, [fp, #-12]
 2162 0070 0020A0E3 		mov	r2, #0
 2163 0074 182083E5 		str	r2, [r3, #24]
1648:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 2164              		.loc 1 1648 13
 2165 0078 0C001BE5 		ldr	r0, [fp, #-12]
 2166 007c FEFFFFEB 		bl	_RME_Run_Del
1649:../../Source/Kernel/rme_kernel.c ****             
1650:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
1651:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 2167              		.loc 1 1651 33
 2168 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2169 0084 0220A0E3 		mov	r2, #2
 2170 0088 1C2083E5 		str	r2, [r3, #28]
1652:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 2171              		.loc 1 1652 13
 2172 008c 0C001BE5 		ldr	r0, [fp, #-12]
 2173 0090 FEFFFFEB 		bl	_RME_Run_Notif
 2174              	.L130:
1653:../../Source/Kernel/rme_kernel.c ****         }
1654:../../Source/Kernel/rme_kernel.c ****     }
1655:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 69


1656:../../Source/Kernel/rme_kernel.c ****     {
1657:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1658:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1659:../../Source/Kernel/rme_kernel.c ****     }
1660:../../Source/Kernel/rme_kernel.c **** 
1661:../../Source/Kernel/rme_kernel.c ****     /* Send to the system tick timer endpoint. This endpoint is per-core */
1662:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_Snd(Local->Sig_Tim);
 2175              		.loc 1 1662 5
 2176 0094 08301BE5 		ldr	r3, [fp, #-8]
 2177 0098 083093E5 		ldr	r3, [r3, #8]
 2178 009c 0300A0E1 		mov	r0, r3
 2179 00a0 FEFFFFEB 		bl	_RME_Kern_Snd
1663:../../Source/Kernel/rme_kernel.c **** 
1664:../../Source/Kernel/rme_kernel.c ****     /* All kernel send complete, now pick the highest priority thread to run */
1665:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 2180              		.loc 1 1665 5
 2181 00a4 08101BE5 		ldr	r1, [fp, #-8]
 2182 00a8 10001BE5 		ldr	r0, [fp, #-16]
 2183 00ac FEFFFFEB 		bl	_RME_Kern_High
1666:../../Source/Kernel/rme_kernel.c **** }
 2184              		.loc 1 1666 1
 2185 00b0 00F020E3 		nop
 2186 00b4 04D04BE2 		sub	sp, fp, #4
 2187              		.cfi_def_cfa 13, 8
 2188              		@ sp needed
 2189 00b8 0088BDE8 		pop	{fp, pc}
 2190              		.cfi_endproc
 2191              	.LFE19:
 2193              		.section	.text._RME_Tim_Elapse,"ax",%progbits
 2194              		.align	2
 2195              		.global	_RME_Tim_Elapse
 2196              		.syntax unified
 2197              		.arm
 2199              	_RME_Tim_Elapse:
 2200              	.LFB20:
1667:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Handler *********************************************/
1668:../../Source/Kernel/rme_kernel.c **** 
1669:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Elapse ***************************************************
1670:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1671:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Slice - Number of slices passed since last call of
1672:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1673:../../Source/Kernel/rme_kernel.c **** Output      : None.
1674:../../Source/Kernel/rme_kernel.c **** Return      : None.
1675:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1676:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Elapse(rme_ptr_t Slice)
1677:../../Source/Kernel/rme_kernel.c **** {
 2201              		.loc 1 1677 1
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 16
 2204              		@ frame_needed = 1, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
 2206 0000 04B02DE5 		str	fp, [sp, #-4]!
 2207              		.cfi_def_cfa_offset 4
 2208              		.cfi_offset 11, -4
 2209 0004 00B08DE2 		add	fp, sp, #0
 2210              		.cfi_def_cfa_register 11
 2211 0008 14D04DE2 		sub	sp, sp, #20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 70


 2212 000c 10000BE5 		str	r0, [fp, #-16]
1678:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1679:../../Source/Kernel/rme_kernel.c ****     
1680:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 2213              		.loc 1 1680 12
 2214 0010 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2215 0014 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2216 0018 043093E5 		ldr	r3, [r3, #4]
 2217 001c 08300BE5 		str	r3, [fp, #-8]
1681:../../Source/Kernel/rme_kernel.c ****     
1682:../../Source/Kernel/rme_kernel.c ****     /* We don't want the slices less than 1 because we want to keep the kernel
1683:../../Source/Kernel/rme_kernel.c ****      * SVC invariants - the current thread must still be running after this */
1684:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2218              		.loc 1 1684 22
 2219 0020 08301BE5 		ldr	r3, [fp, #-8]
 2220 0024 183093E5 		ldr	r3, [r3, #24]
 2221              		.loc 1 1684 7
 2222 0028 0E0173E3 		cmn	r3, #-2147483645
 2223 002c 0E00008A 		bhi	.L135
1685:../../Source/Kernel/rme_kernel.c ****     {
1686:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1687:../../Source/Kernel/rme_kernel.c **** 
1688:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, but no less than 1, so the thread is
1689:../../Source/Kernel/rme_kernel.c ****          * always running, which keeps the invariant of the kernel */
1690:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2224              		.loc 1 1690 32
 2225 0030 08301BE5 		ldr	r3, [fp, #-8]
 2226 0034 183093E5 		ldr	r3, [r3, #24]
 2227              		.loc 1 1690 11
 2228 0038 10201BE5 		ldr	r2, [fp, #-16]
 2229 003c 030052E1 		cmp	r2, r3
 2230 0040 0600002A 		bcs	.L134
1691:../../Source/Kernel/rme_kernel.c ****         {
1692:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1693:../../Source/Kernel/rme_kernel.c ****             
1694:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2231              		.loc 1 1694 27
 2232 0044 08301BE5 		ldr	r3, [fp, #-8]
 2233 0048 182093E5 		ldr	r2, [r3, #24]
 2234              		.loc 1 1694 33
 2235 004c 10301BE5 		ldr	r3, [fp, #-16]
 2236 0050 032042E0 		sub	r2, r2, r3
 2237 0054 08301BE5 		ldr	r3, [fp, #-8]
 2238 0058 182083E5 		str	r2, [r3, #24]
1695:../../Source/Kernel/rme_kernel.c ****         }
1696:../../Source/Kernel/rme_kernel.c ****         else
1697:../../Source/Kernel/rme_kernel.c ****         {
1698:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1699:../../Source/Kernel/rme_kernel.c ****             
1700:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=1U;
1701:../../Source/Kernel/rme_kernel.c ****         }
1702:../../Source/Kernel/rme_kernel.c ****     }
1703:../../Source/Kernel/rme_kernel.c ****     else
1704:../../Source/Kernel/rme_kernel.c ****     {
1705:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1706:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1707:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 71


1708:../../Source/Kernel/rme_kernel.c **** }
 2239              		.loc 1 1708 1
 2240 005c 020000EA 		b	.L135
 2241              	.L134:
1700:../../Source/Kernel/rme_kernel.c ****         }
 2242              		.loc 1 1700 33
 2243 0060 08301BE5 		ldr	r3, [fp, #-8]
 2244 0064 0120A0E3 		mov	r2, #1
 2245 0068 182083E5 		str	r2, [r3, #24]
 2246              	.L135:
 2247              		.loc 1 1708 1
 2248 006c 00F020E3 		nop
 2249 0070 00D08BE2 		add	sp, fp, #0
 2250              		.cfi_def_cfa_register 13
 2251              		@ sp needed
 2252 0074 04B09DE4 		ldr	fp, [sp], #4
 2253              		.cfi_restore 11
 2254              		.cfi_def_cfa_offset 0
 2255 0078 1EFF2FE1 		bx	lr
 2256              		.cfi_endproc
 2257              	.LFE20:
 2259              		.section	.text._RME_Tim_Future,"ax",%progbits
 2260              		.align	2
 2261              		.global	_RME_Tim_Future
 2262              		.syntax unified
 2263              		.arm
 2265              	_RME_Tim_Future:
 2266              	.LFB21:
1709:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Elapse **********************************************/
1710:../../Source/Kernel/rme_kernel.c **** 
1711:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Future ***************************************************
1712:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1713:../../Source/Kernel/rme_kernel.c **** Input       : None.
1714:../../Source/Kernel/rme_kernel.c **** Output      : None.
1715:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - How many slices to program until the next timeout.
1716:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1717:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Tim_Future(void)
1718:../../Source/Kernel/rme_kernel.c **** {
 2267              		.loc 1 1718 1
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 1, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
 2272 0000 04B02DE5 		str	fp, [sp, #-4]!
 2273              		.cfi_def_cfa_offset 4
 2274              		.cfi_offset 11, -4
 2275 0004 00B08DE2 		add	fp, sp, #0
 2276              		.cfi_def_cfa_register 11
1719:../../Source/Kernel/rme_kernel.c ****     /* If we're running an infinite thread, just program infinite time,
1720:../../Source/Kernel/rme_kernel.c ****      * these values are very large so that's fine */
1721:../../Source/Kernel/rme_kernel.c ****     return RME_CPU_LOCAL()->Thd_Cur->Sched.Slice;
 2277              		.loc 1 1721 27
 2278 0008 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2279 000c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2280 0010 043093E5 		ldr	r3, [r3, #4]
 2281              		.loc 1 1721 43
 2282 0014 183093E5 		ldr	r3, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 72


1722:../../Source/Kernel/rme_kernel.c **** }
 2283              		.loc 1 1722 1
 2284 0018 0300A0E1 		mov	r0, r3
 2285 001c 00D08BE2 		add	sp, fp, #0
 2286              		.cfi_def_cfa_register 13
 2287              		@ sp needed
 2288 0020 04B09DE4 		ldr	fp, [sp], #4
 2289              		.cfi_restore 11
 2290              		.cfi_def_cfa_offset 0
 2291 0024 1EFF2FE1 		bx	lr
 2292              		.cfi_endproc
 2293              	.LFE21:
 2295              		.section	.text._RME_Cpt_Boot_Init,"ax",%progbits
 2296              		.align	2
 2297              		.global	_RME_Cpt_Boot_Init
 2298              		.syntax unified
 2299              		.arm
 2301              	_RME_Cpt_Boot_Init:
 2302              	.LFB22:
1723:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Future **********************************************/
1724:../../Source/Kernel/rme_kernel.c **** 
1725:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Init ************************************************
1726:../../Source/Kernel/rme_kernel.c **** Description : Create the first capability table in the system, at boot-time. 
1727:../../Source/Kernel/rme_kernel.c ****               This function must be called at system startup before setting up
1728:../../Source/Kernel/rme_kernel.c ****               any other kernel objects.
1729:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
1730:../../Source/Kernel/rme_kernel.c **** Input       : rme_cid_t Cap_Cpt - The capability slot that you want this newly
1731:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1732:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1733:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the
1734:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1735:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capability entries in the
1736:../../Source/Kernel/rme_kernel.c ****                                     capability table.
1737:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1738:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1739:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Init(rme_cid_t Cap_Cpt,
1740:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Vaddr,
1741:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Entry_Num)
1742:../../Source/Kernel/rme_kernel.c **** {
 2303              		.loc 1 1742 1
 2304              		.cfi_startproc
 2305              		@ args = 0, pretend = 0, frame = 24
 2306              		@ frame_needed = 1, uses_anonymous_args = 0
 2307 0000 00482DE9 		push	{fp, lr}
 2308              		.cfi_def_cfa_offset 8
 2309              		.cfi_offset 11, -8
 2310              		.cfi_offset 14, -4
 2311 0004 04B08DE2 		add	fp, sp, #4
 2312              		.cfi_def_cfa 11, 4
 2313 0008 18D04DE2 		sub	sp, sp, #24
 2314 000c 10000BE5 		str	r0, [fp, #-16]
 2315 0010 14100BE5 		str	r1, [fp, #-20]
 2316 0014 18200BE5 		str	r2, [fp, #-24]
1743:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1744:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1745:../../Source/Kernel/rme_kernel.c **** 
1746:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 73


1747:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2317              		.loc 1 1747 7
 2318 0018 18301BE5 		ldr	r3, [fp, #-24]
 2319 001c 000053E3 		cmp	r3, #0
 2320 0020 0200000A 		beq	.L139
 2321              		.loc 1 1747 23 discriminator 1
 2322 0024 18301BE5 		ldr	r3, [fp, #-24]
 2323 0028 800053E3 		cmp	r3, #128
 2324 002c 0100009A 		bls	.L140
 2325              	.L139:
1748:../../Source/Kernel/rme_kernel.c ****     {
1749:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1750:../../Source/Kernel/rme_kernel.c ****         
1751:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2326              		.loc 1 1751 16
 2327 0030 0230E0E3 		mvn	r3, #2
 2328 0034 300000EA 		b	.L141
 2329              	.L140:
1752:../../Source/Kernel/rme_kernel.c ****     }
1753:../../Source/Kernel/rme_kernel.c ****     else
1754:../../Source/Kernel/rme_kernel.c ****     {
1755:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1756:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1757:../../Source/Kernel/rme_kernel.c ****     }
1758:../../Source/Kernel/rme_kernel.c ****     
1759:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
1760:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2330              		.loc 1 1760 8
 2331 0038 18301BE5 		ldr	r3, [fp, #-24]
 2332 003c 8332A0E1 		lsl	r3, r3, #5
 2333 0040 0310A0E1 		mov	r1, r3
 2334 0044 14001BE5 		ldr	r0, [fp, #-20]
 2335 0048 FEFFFFEB 		bl	_RME_Kot_Mark
 2336 004c 0030A0E1 		mov	r3, r0
 2337              		.loc 1 1760 7 discriminator 1
 2338 0050 000053E3 		cmp	r3, #0
 2339 0054 0100000A 		beq	.L142
1761:../../Source/Kernel/rme_kernel.c ****     {
1762:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1763:../../Source/Kernel/rme_kernel.c ****         
1764:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2340              		.loc 1 1764 16
 2341 0058 0330E0E3 		mvn	r3, #3
 2342 005c 260000EA 		b	.L141
 2343              	.L142:
1765:../../Source/Kernel/rme_kernel.c ****     }
1766:../../Source/Kernel/rme_kernel.c ****     else
1767:../../Source/Kernel/rme_kernel.c ****     {
1768:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1769:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1770:../../Source/Kernel/rme_kernel.c ****     }
1771:../../Source/Kernel/rme_kernel.c **** 
1772:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1773:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2344              		.loc 1 1773 14
 2345 0060 0030A0E3 		mov	r3, #0
 2346 0064 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 74


 2347              		.loc 1 1773 5
 2348 0068 090000EA 		b	.L143
 2349              	.L144:
1774:../../Source/Kernel/rme_kernel.c ****     {
1775:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2350              		.loc 1 1775 9
 2351 006c 08301BE5 		ldr	r3, [fp, #-8]
 2352 0070 8322A0E1 		lsl	r2, r3, #5
 2353 0074 14301BE5 		ldr	r3, [fp, #-20]
 2354 0078 033082E0 		add	r3, r2, r3
 2355 007c 0320A0E1 		mov	r2, r3
 2356 0080 0030A0E3 		mov	r3, #0
 2357 0084 003082E5 		str	r3, [r2]
1773:../../Source/Kernel/rme_kernel.c ****     {
 2358              		.loc 1 1773 39 discriminator 3
 2359 0088 08301BE5 		ldr	r3, [fp, #-8]
 2360 008c 013083E2 		add	r3, r3, #1
 2361 0090 08300BE5 		str	r3, [fp, #-8]
 2362              	.L143:
1773:../../Source/Kernel/rme_kernel.c ****     {
 2363              		.loc 1 1773 23 discriminator 1
 2364 0094 08201BE5 		ldr	r2, [fp, #-8]
 2365 0098 18301BE5 		ldr	r3, [fp, #-24]
 2366 009c 030052E1 		cmp	r2, r3
 2367 00a0 F1FFFF3A 		bcc	.L144
1776:../../Source/Kernel/rme_kernel.c ****     }
1777:../../Source/Kernel/rme_kernel.c **** 
1778:../../Source/Kernel/rme_kernel.c ****     Cpt=&(((struct RME_Cap_Cpt*)Vaddr)[Cap_Cpt]);
 2368              		.loc 1 1778 39
 2369 00a4 10301BE5 		ldr	r3, [fp, #-16]
 2370 00a8 8322A0E1 		lsl	r2, r3, #5
 2371 00ac 14301BE5 		ldr	r3, [fp, #-20]
 2372 00b0 033082E0 		add	r3, r2, r3
 2373              		.loc 1 1778 8
 2374 00b4 0C300BE5 		str	r3, [fp, #-12]
1779:../../Source/Kernel/rme_kernel.c ****     
1780:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1781:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Root_Ref=1U;
 2375              		.loc 1 1781 23
 2376 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 2377 00bc 0120A0E3 		mov	r2, #1
 2378 00c0 042083E5 		str	r2, [r3, #4]
1782:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Object=Vaddr;
 2379              		.loc 1 1782 21
 2380 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 2381 00c8 14201BE5 		ldr	r2, [fp, #-20]
 2382 00cc 0C2083E5 		str	r2, [r3, #12]
1783:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Flag=RME_CPT_FLAG_ALL;
 2383              		.loc 1 1783 19
 2384 00d0 0C301BE5 		ldr	r3, [fp, #-12]
 2385 00d4 FF20A0E3 		mov	r2, #255
 2386 00d8 082083E5 		str	r2, [r3, #8]
1784:../../Source/Kernel/rme_kernel.c ****     
1785:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1786:../../Source/Kernel/rme_kernel.c ****     Cpt->Entry_Num=Entry_Num;
 2387              		.loc 1 1786 19
 2388 00dc 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 75


 2389 00e0 18201BE5 		ldr	r2, [fp, #-24]
 2390 00e4 142083E5 		str	r2, [r3, #20]
1787:../../Source/Kernel/rme_kernel.c **** 
1788:../../Source/Kernel/rme_kernel.c ****     /* At last, write into slot the correct information, and set status to VALID */
1789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt->Head.Type_Stat),
 2391              		.loc 1 1789 5
 2392 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 2393 00ec 0314A0E3 		mov	r1, #50331648
 2394 00f0 0300A0E1 		mov	r0, r3
 2395 00f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
1790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1793:../../Source/Kernel/rme_kernel.c **** 
1794:../../Source/Kernel/rme_kernel.c ****     return Cap_Cpt;
 2396              		.loc 1 1794 12
 2397 00f8 10301BE5 		ldr	r3, [fp, #-16]
 2398              	.L141:
1795:../../Source/Kernel/rme_kernel.c **** }
 2399              		.loc 1 1795 1
 2400 00fc 0300A0E1 		mov	r0, r3
 2401 0100 04D04BE2 		sub	sp, fp, #4
 2402              		.cfi_def_cfa 13, 8
 2403              		@ sp needed
 2404 0104 0088BDE8 		pop	{fp, pc}
 2405              		.cfi_endproc
 2406              	.LFE22:
 2408              		.section	.text._RME_Cpt_Boot_Crt,"ax",%progbits
 2409              		.align	2
 2410              		.global	_RME_Cpt_Boot_Crt
 2411              		.syntax unified
 2412              		.arm
 2414              	_RME_Cpt_Boot_Crt:
 2415              	.LFB23:
1796:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Init *******************************************/
1797:../../Source/Kernel/rme_kernel.c **** 
1798:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Crt *************************************************
1799:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time capability table at the designated memory
1800:../../Source/Kernel/rme_kernel.c ****               address.
1801:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1802:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1803:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1804:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1805:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1806:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1807:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1808:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the 
1809:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1810:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capabilities in the capability table.
1811:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1812:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1813:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
1814:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
1815:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Crt,
1816:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
1817:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Entry_Num)
1818:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 76


 2416              		.loc 1 1818 1
 2417              		.cfi_startproc
 2418              		@ args = 4, pretend = 0, frame = 32
 2419              		@ frame_needed = 1, uses_anonymous_args = 0
 2420 0000 00482DE9 		push	{fp, lr}
 2421              		.cfi_def_cfa_offset 8
 2422              		.cfi_offset 11, -8
 2423              		.cfi_offset 14, -4
 2424 0004 04B08DE2 		add	fp, sp, #4
 2425              		.cfi_def_cfa 11, 4
 2426 0008 20D04DE2 		sub	sp, sp, #32
 2427 000c 18000BE5 		str	r0, [fp, #-24]
 2428 0010 1C100BE5 		str	r1, [fp, #-28]
 2429 0014 20200BE5 		str	r2, [fp, #-32]
 2430 0018 24300BE5 		str	r3, [fp, #-36]
1819:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1820:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1821:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1822:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1823:../../Source/Kernel/rme_kernel.c ****     
1824:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big - this is not restricted by RME_CPT_ENTRY_MAX */
1825:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2431              		.loc 1 1825 7
 2432 001c 04309BE5 		ldr	r3, [fp, #4]
 2433 0020 000053E3 		cmp	r3, #0
 2434 0024 0200000A 		beq	.L146
 2435              		.loc 1 1825 23 discriminator 1
 2436 0028 04309BE5 		ldr	r3, [fp, #4]
 2437 002c 800053E3 		cmp	r3, #128
 2438 0030 0100009A 		bls	.L147
 2439              	.L146:
1826:../../Source/Kernel/rme_kernel.c ****     {
1827:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1828:../../Source/Kernel/rme_kernel.c ****         
1829:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2440              		.loc 1 1829 16
 2441 0034 0230E0E3 		mvn	r3, #2
 2442 0038 B10000EA 		b	.L148
 2443              	.L147:
1830:../../Source/Kernel/rme_kernel.c ****     }
1831:../../Source/Kernel/rme_kernel.c ****     else
1832:../../Source/Kernel/rme_kernel.c ****     {
1833:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1834:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1835:../../Source/Kernel/rme_kernel.c ****     }
1836:../../Source/Kernel/rme_kernel.c **** 
1837:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1838:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,
 2444              		.loc 1 1838 5
 2445 003c 1C301BE5 		ldr	r3, [fp, #-28]
 2446 0040 803003E2 		and	r3, r3, #128
 2447 0044 000053E3 		cmp	r3, #0
 2448 0048 1C00001A 		bne	.L149
 2449              		.loc 1 1838 5 is_stmt 0 discriminator 1
 2450 004c 18301BE5 		ldr	r3, [fp, #-24]
 2451 0050 142093E5 		ldr	r2, [r3, #20]
 2452 0054 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 77


 2453 0058 030052E1 		cmp	r2, r3
 2454 005c 0100008A 		bhi	.L150
 2455              		.loc 1 1838 5 discriminator 3
 2456 0060 0230E0E3 		mvn	r3, #2
 2457              		.loc 1 1838 5
 2458 0064 A60000EA 		b	.L148
 2459              	.L150:
 2460              		.loc 1 1838 5 discriminator 4
 2461 0068 1C301BE5 		ldr	r3, [fp, #-28]
 2462 006c 8322A0E1 		lsl	r2, r3, #5
 2463 0070 18301BE5 		ldr	r3, [fp, #-24]
 2464 0074 0C3093E5 		ldr	r3, [r3, #12]
 2465 0078 033082E0 		add	r3, r2, r3
 2466 007c 0C300BE5 		str	r3, [fp, #-12]
 2467 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2468 0084 0300A0E1 		mov	r0, r3
 2469 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2470 008c 10000BE5 		str	r0, [fp, #-16]
 2471              		.loc 1 1838 5 discriminator 1
 2472 0090 10301BE5 		ldr	r3, [fp, #-16]
 2473 0094 FF3803E2 		and	r3, r3, #16711680
 2474 0098 020853E3 		cmp	r3, #131072
 2475 009c 0100001A 		bne	.L151
 2476              		.loc 1 1838 5 discriminator 5
 2477 00a0 0830E0E3 		mvn	r3, #8
 2478              		.loc 1 1838 5
 2479 00a4 960000EA 		b	.L148
 2480              	.L151:
 2481              		.loc 1 1838 5 discriminator 6
 2482 00a8 10301BE5 		ldr	r3, [fp, #-16]
 2483 00ac 233CA0E1 		lsr	r3, r3, #24
 2484 00b0 030053E3 		cmp	r3, #3
 2485 00b4 3F00000A 		beq	.L152
 2486              		.loc 1 1838 5 discriminator 7
 2487 00b8 0130E0E3 		mvn	r3, #1
 2488              		.loc 1 1838 5
 2489 00bc 900000EA 		b	.L148
 2490              	.L149:
 2491              		.loc 1 1838 5 discriminator 2
 2492 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 2493 00c4 2324A0E1 		lsr	r2, r3, #8
 2494 00c8 18301BE5 		ldr	r3, [fp, #-24]
 2495 00cc 143093E5 		ldr	r3, [r3, #20]
 2496 00d0 030052E1 		cmp	r2, r3
 2497 00d4 0100003A 		bcc	.L153
 2498              		.loc 1 1838 5 discriminator 8
 2499 00d8 0230E0E3 		mvn	r3, #2
 2500              		.loc 1 1838 5
 2501 00dc 880000EA 		b	.L148
 2502              	.L153:
 2503              		.loc 1 1838 5 discriminator 9
 2504 00e0 1C301BE5 		ldr	r3, [fp, #-28]
 2505 00e4 2334A0E1 		lsr	r3, r3, #8
 2506 00e8 8322A0E1 		lsl	r2, r3, #5
 2507 00ec 18301BE5 		ldr	r3, [fp, #-24]
 2508 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2509 00f4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 78


 2510 00f8 0C300BE5 		str	r3, [fp, #-12]
 2511 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2512 0100 0300A0E1 		mov	r0, r3
 2513 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2514 0108 10000BE5 		str	r0, [fp, #-16]
 2515              		.loc 1 1838 5 discriminator 1
 2516 010c 10301BE5 		ldr	r3, [fp, #-16]
 2517 0110 FF3803E2 		and	r3, r3, #16711680
 2518 0114 020853E3 		cmp	r3, #131072
 2519 0118 0100001A 		bne	.L154
 2520              		.loc 1 1838 5 discriminator 10
 2521 011c 0830E0E3 		mvn	r3, #8
 2522              		.loc 1 1838 5
 2523 0120 770000EA 		b	.L148
 2524              	.L154:
 2525              		.loc 1 1838 5 discriminator 11
 2526 0124 10301BE5 		ldr	r3, [fp, #-16]
 2527 0128 233CA0E1 		lsr	r3, r3, #24
 2528 012c 030053E3 		cmp	r3, #3
 2529 0130 0100000A 		beq	.L155
 2530              		.loc 1 1838 5 discriminator 12
 2531 0134 0130E0E3 		mvn	r3, #1
 2532              		.loc 1 1838 5
 2533 0138 710000EA 		b	.L148
 2534              	.L155:
 2535              		.loc 1 1838 5 discriminator 13
 2536 013c 1C301BE5 		ldr	r3, [fp, #-28]
 2537 0140 7F2003E2 		and	r2, r3, #127
 2538 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2539 0148 143093E5 		ldr	r3, [r3, #20]
 2540 014c 030052E1 		cmp	r2, r3
 2541 0150 0100003A 		bcc	.L156
 2542              		.loc 1 1838 5 discriminator 14
 2543 0154 0230E0E3 		mvn	r3, #2
 2544              		.loc 1 1838 5
 2545 0158 690000EA 		b	.L148
 2546              	.L156:
 2547              		.loc 1 1838 5 discriminator 15
 2548 015c 1C301BE5 		ldr	r3, [fp, #-28]
 2549 0160 7F3003E2 		and	r3, r3, #127
 2550 0164 8322A0E1 		lsl	r2, r3, #5
 2551 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2552 016c 0C3093E5 		ldr	r3, [r3, #12]
 2553 0170 033082E0 		add	r3, r2, r3
 2554 0174 0C300BE5 		str	r3, [fp, #-12]
 2555 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2556 017c 0300A0E1 		mov	r0, r3
 2557 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2558 0184 10000BE5 		str	r0, [fp, #-16]
 2559              		.loc 1 1838 5 discriminator 1
 2560 0188 10301BE5 		ldr	r3, [fp, #-16]
 2561 018c FF3803E2 		and	r3, r3, #16711680
 2562 0190 020853E3 		cmp	r3, #131072
 2563 0194 0100001A 		bne	.L157
 2564              		.loc 1 1838 5 discriminator 16
 2565 0198 0830E0E3 		mvn	r3, #8
 2566              		.loc 1 1838 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 79


 2567 019c 580000EA 		b	.L148
 2568              	.L157:
 2569              		.loc 1 1838 5 discriminator 17
 2570 01a0 10301BE5 		ldr	r3, [fp, #-16]
 2571 01a4 233CA0E1 		lsr	r3, r3, #24
 2572 01a8 030053E3 		cmp	r3, #3
 2573 01ac 0100000A 		beq	.L152
 2574              		.loc 1 1838 5 discriminator 18
 2575 01b0 0130E0E3 		mvn	r3, #1
 2576              		.loc 1 1838 5
 2577 01b4 520000EA 		b	.L148
 2578              	.L152:
1839:../../Source/Kernel/rme_kernel.c ****                    Cap_Cpt_Crt,
1840:../../Source/Kernel/rme_kernel.c ****                    RME_CAP_TYPE_CPT,
1841:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,
1842:../../Source/Kernel/rme_kernel.c ****                    Cpt_Op,
1843:../../Source/Kernel/rme_kernel.c ****                    Type_Stat);
1844:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1845:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2579              		.loc 1 1845 5 is_stmt 1
 2580 01b8 0C301BE5 		ldr	r3, [fp, #-12]
 2581 01bc 083093E5 		ldr	r3, [r3, #8]
 2582 01c0 013003E2 		and	r3, r3, #1
 2583 01c4 000053E3 		cmp	r3, #0
 2584 01c8 0100001A 		bne	.L158
 2585              		.loc 1 1845 5 is_stmt 0 discriminator 1
 2586 01cc 0630E0E3 		mvn	r3, #6
 2587              		.loc 1 1845 5
 2588 01d0 4B0000EA 		b	.L148
 2589              	.L158:
1846:../../Source/Kernel/rme_kernel.c **** 
1847:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1848:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 2590              		.loc 1 1848 5 is_stmt 1
 2591 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 2592 01d8 142093E5 		ldr	r2, [r3, #20]
 2593 01dc 20301BE5 		ldr	r3, [fp, #-32]
 2594 01e0 030052E1 		cmp	r2, r3
 2595 01e4 0100008A 		bhi	.L159
 2596              		.loc 1 1848 5 is_stmt 0 discriminator 1
 2597 01e8 0230E0E3 		mvn	r3, #2
 2598              		.loc 1 1848 5
 2599 01ec 440000EA 		b	.L148
 2600              	.L159:
 2601              		.loc 1 1848 5 discriminator 2
 2602 01f0 20301BE5 		ldr	r3, [fp, #-32]
 2603 01f4 8322A0E1 		lsl	r2, r3, #5
 2604 01f8 0C301BE5 		ldr	r3, [fp, #-12]
 2605 01fc 0C3093E5 		ldr	r3, [r3, #12]
 2606 0200 033082E0 		add	r3, r2, r3
 2607 0204 14300BE5 		str	r3, [fp, #-20]
1849:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1850:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 2608              		.loc 1 1850 5 is_stmt 1
 2609 0208 14301BE5 		ldr	r3, [fp, #-20]
 2610 020c 0128A0E3 		mov	r2, #65536
 2611 0210 0010A0E3 		mov	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 80


 2612 0214 0300A0E1 		mov	r0, r3
 2613 0218 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 2614 021c 0030A0E1 		mov	r3, r0
 2615              		.loc 1 1850 5 is_stmt 0 discriminator 1
 2616 0220 000053E3 		cmp	r3, #0
 2617 0224 0100001A 		bne	.L160
 2618 0228 0430E0E3 		mvn	r3, #4
 2619              		.loc 1 1850 5
 2620 022c 340000EA 		b	.L148
 2621              	.L160:
 2622              		.loc 1 1850 5 discriminator 2
 2623 0230 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 2624 0234 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 2625 0238 002093E5 		ldr	r2, [r3]
 2626 023c 14301BE5 		ldr	r3, [fp, #-20]
 2627 0240 102083E5 		str	r2, [r3, #16]
1851:../../Source/Kernel/rme_kernel.c **** 
1852:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1853:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2628              		.loc 1 1853 8 is_stmt 1
 2629 0244 04309BE5 		ldr	r3, [fp, #4]
 2630 0248 8332A0E1 		lsl	r3, r3, #5
 2631 024c 0310A0E1 		mov	r1, r3
 2632 0250 24001BE5 		ldr	r0, [fp, #-36]
 2633 0254 FEFFFFEB 		bl	_RME_Kot_Mark
 2634 0258 0030A0E1 		mov	r3, r0
 2635              		.loc 1 1853 7 discriminator 1
 2636 025c 000053E3 		cmp	r3, #0
 2637 0260 0500000A 		beq	.L161
1854:../../Source/Kernel/rme_kernel.c ****     {
1855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1856:../../Source/Kernel/rme_kernel.c ****         
1857:../../Source/Kernel/rme_kernel.c ****         /* Abort the creation process */
1858:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 2638              		.loc 1 1858 9
 2639 0264 14301BE5 		ldr	r3, [fp, #-20]
 2640 0268 0010A0E3 		mov	r1, #0
 2641 026c 0300A0E1 		mov	r0, r3
 2642 0270 FEFFFFEB 		bl	__RME_A7A_Write_Release
1859:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2643              		.loc 1 1859 16
 2644 0274 0330E0E3 		mvn	r3, #3
 2645 0278 210000EA 		b	.L148
 2646              	.L161:
1860:../../Source/Kernel/rme_kernel.c ****     }
1861:../../Source/Kernel/rme_kernel.c ****     else
1862:../../Source/Kernel/rme_kernel.c ****     {
1863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1864:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1865:../../Source/Kernel/rme_kernel.c ****     }
1866:../../Source/Kernel/rme_kernel.c **** 
1867:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1868:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2647              		.loc 1 1868 14
 2648 027c 0030A0E3 		mov	r3, #0
 2649 0280 08300BE5 		str	r3, [fp, #-8]
 2650              		.loc 1 1868 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 81


 2651 0284 090000EA 		b	.L162
 2652              	.L163:
1869:../../Source/Kernel/rme_kernel.c ****     {
1870:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2653              		.loc 1 1870 9
 2654 0288 08301BE5 		ldr	r3, [fp, #-8]
 2655 028c 8322A0E1 		lsl	r2, r3, #5
 2656 0290 24301BE5 		ldr	r3, [fp, #-36]
 2657 0294 033082E0 		add	r3, r2, r3
 2658 0298 0320A0E1 		mov	r2, r3
 2659 029c 0030A0E3 		mov	r3, #0
 2660 02a0 003082E5 		str	r3, [r2]
1868:../../Source/Kernel/rme_kernel.c ****     {
 2661              		.loc 1 1868 39 discriminator 3
 2662 02a4 08301BE5 		ldr	r3, [fp, #-8]
 2663 02a8 013083E2 		add	r3, r3, #1
 2664 02ac 08300BE5 		str	r3, [fp, #-8]
 2665              	.L162:
1868:../../Source/Kernel/rme_kernel.c ****     {
 2666              		.loc 1 1868 23 discriminator 1
 2667 02b0 08201BE5 		ldr	r2, [fp, #-8]
 2668 02b4 04309BE5 		ldr	r3, [fp, #4]
 2669 02b8 030052E1 		cmp	r2, r3
 2670 02bc F1FFFF3A 		bcc	.L163
1871:../../Source/Kernel/rme_kernel.c ****     }
1872:../../Source/Kernel/rme_kernel.c **** 
1873:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1874:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 2671              		.loc 1 1874 27
 2672 02c0 14301BE5 		ldr	r3, [fp, #-20]
 2673 02c4 0020A0E3 		mov	r2, #0
 2674 02c8 042083E5 		str	r2, [r3, #4]
1875:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 2675              		.loc 1 1875 25
 2676 02cc 14301BE5 		ldr	r3, [fp, #-20]
 2677 02d0 24201BE5 		ldr	r2, [fp, #-36]
 2678 02d4 0C2083E5 		str	r2, [r3, #12]
1876:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 2679              		.loc 1 1876 23
 2680 02d8 14301BE5 		ldr	r3, [fp, #-20]
 2681 02dc FF20A0E3 		mov	r2, #255
 2682 02e0 082083E5 		str	r2, [r3, #8]
1877:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1878:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 2683              		.loc 1 1878 23
 2684 02e4 14301BE5 		ldr	r3, [fp, #-20]
 2685 02e8 04209BE5 		ldr	r2, [fp, #4]
 2686 02ec 142083E5 		str	r2, [r3, #20]
1879:../../Source/Kernel/rme_kernel.c **** 
1880:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1881:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 2687              		.loc 1 1881 5
 2688 02f0 14301BE5 		ldr	r3, [fp, #-20]
 2689 02f4 0314A0E3 		mov	r1, #50331648
 2690 02f8 0300A0E1 		mov	r0, r3
 2691 02fc FEFFFFEB 		bl	__RME_A7A_Write_Release
1882:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 82


1883:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1884:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1885:../../Source/Kernel/rme_kernel.c **** 
1886:../../Source/Kernel/rme_kernel.c ****     return 0;
 2692              		.loc 1 1886 12
 2693 0300 0030A0E3 		mov	r3, #0
 2694              	.L148:
1887:../../Source/Kernel/rme_kernel.c **** }
 2695              		.loc 1 1887 1
 2696 0304 0300A0E1 		mov	r0, r3
 2697 0308 04D04BE2 		sub	sp, fp, #4
 2698              		.cfi_def_cfa 13, 8
 2699              		@ sp needed
 2700 030c 0088BDE8 		pop	{fp, pc}
 2701              		.cfi_endproc
 2702              	.LFE23:
 2704              		.section	.text._RME_Cpt_Crt,"ax",%progbits
 2705              		.align	2
 2706              		.syntax unified
 2707              		.arm
 2709              	_RME_Cpt_Crt:
 2710              	.LFB24:
1888:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Crt ********************************************/
1889:../../Source/Kernel/rme_kernel.c **** 
1890:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Crt ******************************************************
1891:../../Source/Kernel/rme_kernel.c **** Description : Create a capability table.
1892:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1893:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1894:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1895:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1896:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
1897:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
1898:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1899:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1900:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1901:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the 
1902:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1903:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of entries in that capability
1904:../../Source/Kernel/rme_kernel.c ****                                     table.
1905:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1906:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1907:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Crt(struct RME_Cap_Cpt* Cpt,
1908:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
1909:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
1910:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Crt,
1911:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
1912:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry_Num)
1913:../../Source/Kernel/rme_kernel.c **** {
 2711              		.loc 1 1913 1
 2712              		.cfi_startproc
 2713              		@ args = 8, pretend = 0, frame = 40
 2714              		@ frame_needed = 1, uses_anonymous_args = 0
 2715 0000 00482DE9 		push	{fp, lr}
 2716              		.cfi_def_cfa_offset 8
 2717              		.cfi_offset 11, -8
 2718              		.cfi_offset 14, -4
 2719 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 83


 2720              		.cfi_def_cfa 11, 4
 2721 0008 28D04DE2 		sub	sp, sp, #40
 2722 000c 20000BE5 		str	r0, [fp, #-32]
 2723 0010 24100BE5 		str	r1, [fp, #-36]
 2724 0014 28200BE5 		str	r2, [fp, #-40]
 2725 0018 2C300BE5 		str	r3, [fp, #-44]
1914:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1915:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1916:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
1917:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1918:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1919:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
1920:../../Source/Kernel/rme_kernel.c **** 
1921:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1922:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2726              		.loc 1 1922 7
 2727 001c 08309BE5 		ldr	r3, [fp, #8]
 2728 0020 000053E3 		cmp	r3, #0
 2729 0024 0200000A 		beq	.L165
 2730              		.loc 1 1922 23 discriminator 1
 2731 0028 08309BE5 		ldr	r3, [fp, #8]
 2732 002c 800053E3 		cmp	r3, #128
 2733 0030 0100009A 		bls	.L166
 2734              	.L165:
1923:../../Source/Kernel/rme_kernel.c ****     {
1924:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1925:../../Source/Kernel/rme_kernel.c ****         
1926:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2735              		.loc 1 1926 16
 2736 0034 0230E0E3 		mvn	r3, #2
 2737 0038 3D0100EA 		b	.L167
 2738              	.L166:
1927:../../Source/Kernel/rme_kernel.c ****     }
1928:../../Source/Kernel/rme_kernel.c ****     else
1929:../../Source/Kernel/rme_kernel.c ****     {
1930:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1931:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1932:../../Source/Kernel/rme_kernel.c ****     }
1933:../../Source/Kernel/rme_kernel.c **** 
1934:../../Source/Kernel/rme_kernel.c ****     /* Are we overrunning the size limit? */
1935:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
1936:../../Source/Kernel/rme_kernel.c ****     if(Entry_Num>RME_CPT_ENTRY_MAX)
1937:../../Source/Kernel/rme_kernel.c ****     {
1938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1939:../../Source/Kernel/rme_kernel.c ****         
1940:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
1941:../../Source/Kernel/rme_kernel.c ****     }
1942:../../Source/Kernel/rme_kernel.c ****     else
1943:../../Source/Kernel/rme_kernel.c ****     {
1944:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1945:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1946:../../Source/Kernel/rme_kernel.c ****     }
1947:../../Source/Kernel/rme_kernel.c **** #endif
1948:../../Source/Kernel/rme_kernel.c **** 
1949:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1950:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 2739              		.loc 1 1950 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 84


 2740 003c 24301BE5 		ldr	r3, [fp, #-36]
 2741 0040 803003E2 		and	r3, r3, #128
 2742 0044 000053E3 		cmp	r3, #0
 2743 0048 1C00001A 		bne	.L168
 2744              		.loc 1 1950 5 is_stmt 0 discriminator 1
 2745 004c 20301BE5 		ldr	r3, [fp, #-32]
 2746 0050 142093E5 		ldr	r2, [r3, #20]
 2747 0054 24301BE5 		ldr	r3, [fp, #-36]
 2748 0058 030052E1 		cmp	r2, r3
 2749 005c 0100008A 		bhi	.L169
 2750              		.loc 1 1950 5 discriminator 3
 2751 0060 0230E0E3 		mvn	r3, #2
 2752              		.loc 1 1950 5
 2753 0064 320100EA 		b	.L167
 2754              	.L169:
 2755              		.loc 1 1950 5 discriminator 4
 2756 0068 24301BE5 		ldr	r3, [fp, #-36]
 2757 006c 8322A0E1 		lsl	r2, r3, #5
 2758 0070 20301BE5 		ldr	r3, [fp, #-32]
 2759 0074 0C3093E5 		ldr	r3, [r3, #12]
 2760 0078 033082E0 		add	r3, r2, r3
 2761 007c 0C300BE5 		str	r3, [fp, #-12]
 2762 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2763 0084 0300A0E1 		mov	r0, r3
 2764 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2765 008c 14000BE5 		str	r0, [fp, #-20]
 2766              		.loc 1 1950 5 discriminator 1
 2767 0090 14301BE5 		ldr	r3, [fp, #-20]
 2768 0094 FF3803E2 		and	r3, r3, #16711680
 2769 0098 020853E3 		cmp	r3, #131072
 2770 009c 0100001A 		bne	.L170
 2771              		.loc 1 1950 5 discriminator 5
 2772 00a0 0830E0E3 		mvn	r3, #8
 2773              		.loc 1 1950 5
 2774 00a4 220100EA 		b	.L167
 2775              	.L170:
 2776              		.loc 1 1950 5 discriminator 6
 2777 00a8 14301BE5 		ldr	r3, [fp, #-20]
 2778 00ac 233CA0E1 		lsr	r3, r3, #24
 2779 00b0 030053E3 		cmp	r3, #3
 2780 00b4 3F00000A 		beq	.L171
 2781              		.loc 1 1950 5 discriminator 7
 2782 00b8 0130E0E3 		mvn	r3, #1
 2783              		.loc 1 1950 5
 2784 00bc 1C0100EA 		b	.L167
 2785              	.L168:
 2786              		.loc 1 1950 5 discriminator 2
 2787 00c0 24301BE5 		ldr	r3, [fp, #-36]
 2788 00c4 2324A0E1 		lsr	r2, r3, #8
 2789 00c8 20301BE5 		ldr	r3, [fp, #-32]
 2790 00cc 143093E5 		ldr	r3, [r3, #20]
 2791 00d0 030052E1 		cmp	r2, r3
 2792 00d4 0100003A 		bcc	.L172
 2793              		.loc 1 1950 5 discriminator 8
 2794 00d8 0230E0E3 		mvn	r3, #2
 2795              		.loc 1 1950 5
 2796 00dc 140100EA 		b	.L167
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 85


 2797              	.L172:
 2798              		.loc 1 1950 5 discriminator 9
 2799 00e0 24301BE5 		ldr	r3, [fp, #-36]
 2800 00e4 2334A0E1 		lsr	r3, r3, #8
 2801 00e8 8322A0E1 		lsl	r2, r3, #5
 2802 00ec 20301BE5 		ldr	r3, [fp, #-32]
 2803 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2804 00f4 033082E0 		add	r3, r2, r3
 2805 00f8 0C300BE5 		str	r3, [fp, #-12]
 2806 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2807 0100 0300A0E1 		mov	r0, r3
 2808 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2809 0108 14000BE5 		str	r0, [fp, #-20]
 2810              		.loc 1 1950 5 discriminator 1
 2811 010c 14301BE5 		ldr	r3, [fp, #-20]
 2812 0110 FF3803E2 		and	r3, r3, #16711680
 2813 0114 020853E3 		cmp	r3, #131072
 2814 0118 0100001A 		bne	.L173
 2815              		.loc 1 1950 5 discriminator 10
 2816 011c 0830E0E3 		mvn	r3, #8
 2817              		.loc 1 1950 5
 2818 0120 030100EA 		b	.L167
 2819              	.L173:
 2820              		.loc 1 1950 5 discriminator 11
 2821 0124 14301BE5 		ldr	r3, [fp, #-20]
 2822 0128 233CA0E1 		lsr	r3, r3, #24
 2823 012c 030053E3 		cmp	r3, #3
 2824 0130 0100000A 		beq	.L174
 2825              		.loc 1 1950 5 discriminator 12
 2826 0134 0130E0E3 		mvn	r3, #1
 2827              		.loc 1 1950 5
 2828 0138 FD0000EA 		b	.L167
 2829              	.L174:
 2830              		.loc 1 1950 5 discriminator 13
 2831 013c 24301BE5 		ldr	r3, [fp, #-36]
 2832 0140 7F2003E2 		and	r2, r3, #127
 2833 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2834 0148 143093E5 		ldr	r3, [r3, #20]
 2835 014c 030052E1 		cmp	r2, r3
 2836 0150 0100003A 		bcc	.L175
 2837              		.loc 1 1950 5 discriminator 14
 2838 0154 0230E0E3 		mvn	r3, #2
 2839              		.loc 1 1950 5
 2840 0158 F50000EA 		b	.L167
 2841              	.L175:
 2842              		.loc 1 1950 5 discriminator 15
 2843 015c 24301BE5 		ldr	r3, [fp, #-36]
 2844 0160 7F3003E2 		and	r3, r3, #127
 2845 0164 8322A0E1 		lsl	r2, r3, #5
 2846 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2847 016c 0C3093E5 		ldr	r3, [r3, #12]
 2848 0170 033082E0 		add	r3, r2, r3
 2849 0174 0C300BE5 		str	r3, [fp, #-12]
 2850 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2851 017c 0300A0E1 		mov	r0, r3
 2852 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2853 0184 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 86


 2854              		.loc 1 1950 5 discriminator 1
 2855 0188 14301BE5 		ldr	r3, [fp, #-20]
 2856 018c FF3803E2 		and	r3, r3, #16711680
 2857 0190 020853E3 		cmp	r3, #131072
 2858 0194 0100001A 		bne	.L176
 2859              		.loc 1 1950 5 discriminator 16
 2860 0198 0830E0E3 		mvn	r3, #8
 2861              		.loc 1 1950 5
 2862 019c E40000EA 		b	.L167
 2863              	.L176:
 2864              		.loc 1 1950 5 discriminator 17
 2865 01a0 14301BE5 		ldr	r3, [fp, #-20]
 2866 01a4 233CA0E1 		lsr	r3, r3, #24
 2867 01a8 030053E3 		cmp	r3, #3
 2868 01ac 0100000A 		beq	.L171
 2869              		.loc 1 1950 5 discriminator 18
 2870 01b0 0130E0E3 		mvn	r3, #1
 2871              		.loc 1 1950 5
 2872 01b4 DE0000EA 		b	.L167
 2873              	.L171:
1951:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
1952:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 2874              		.loc 1 1952 5 is_stmt 1
 2875 01b8 28301BE5 		ldr	r3, [fp, #-40]
 2876 01bc 803003E2 		and	r3, r3, #128
 2877 01c0 000053E3 		cmp	r3, #0
 2878 01c4 1C00001A 		bne	.L177
 2879              		.loc 1 1952 5 is_stmt 0 discriminator 1
 2880 01c8 20301BE5 		ldr	r3, [fp, #-32]
 2881 01cc 142093E5 		ldr	r2, [r3, #20]
 2882 01d0 28301BE5 		ldr	r3, [fp, #-40]
 2883 01d4 030052E1 		cmp	r2, r3
 2884 01d8 0100008A 		bhi	.L178
 2885              		.loc 1 1952 5 discriminator 3
 2886 01dc 0230E0E3 		mvn	r3, #2
 2887              		.loc 1 1952 5
 2888 01e0 D30000EA 		b	.L167
 2889              	.L178:
 2890              		.loc 1 1952 5 discriminator 4
 2891 01e4 28301BE5 		ldr	r3, [fp, #-40]
 2892 01e8 8322A0E1 		lsl	r2, r3, #5
 2893 01ec 20301BE5 		ldr	r3, [fp, #-32]
 2894 01f0 0C3093E5 		ldr	r3, [r3, #12]
 2895 01f4 033082E0 		add	r3, r2, r3
 2896 01f8 10300BE5 		str	r3, [fp, #-16]
 2897 01fc 10301BE5 		ldr	r3, [fp, #-16]
 2898 0200 0300A0E1 		mov	r0, r3
 2899 0204 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2900 0208 14000BE5 		str	r0, [fp, #-20]
 2901              		.loc 1 1952 5 discriminator 1
 2902 020c 14301BE5 		ldr	r3, [fp, #-20]
 2903 0210 FF3803E2 		and	r3, r3, #16711680
 2904 0214 020853E3 		cmp	r3, #131072
 2905 0218 0100001A 		bne	.L179
 2906              		.loc 1 1952 5 discriminator 5
 2907 021c 0830E0E3 		mvn	r3, #8
 2908              		.loc 1 1952 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 87


 2909 0220 C30000EA 		b	.L167
 2910              	.L179:
 2911              		.loc 1 1952 5 discriminator 6
 2912 0224 14301BE5 		ldr	r3, [fp, #-20]
 2913 0228 233CA0E1 		lsr	r3, r3, #24
 2914 022c 020053E3 		cmp	r3, #2
 2915 0230 3F00000A 		beq	.L180
 2916              		.loc 1 1952 5 discriminator 7
 2917 0234 0130E0E3 		mvn	r3, #1
 2918              		.loc 1 1952 5
 2919 0238 BD0000EA 		b	.L167
 2920              	.L177:
 2921              		.loc 1 1952 5 discriminator 2
 2922 023c 28301BE5 		ldr	r3, [fp, #-40]
 2923 0240 2324A0E1 		lsr	r2, r3, #8
 2924 0244 20301BE5 		ldr	r3, [fp, #-32]
 2925 0248 143093E5 		ldr	r3, [r3, #20]
 2926 024c 030052E1 		cmp	r2, r3
 2927 0250 0100003A 		bcc	.L181
 2928              		.loc 1 1952 5 discriminator 8
 2929 0254 0230E0E3 		mvn	r3, #2
 2930              		.loc 1 1952 5
 2931 0258 B50000EA 		b	.L167
 2932              	.L181:
 2933              		.loc 1 1952 5 discriminator 9
 2934 025c 28301BE5 		ldr	r3, [fp, #-40]
 2935 0260 2334A0E1 		lsr	r3, r3, #8
 2936 0264 8322A0E1 		lsl	r2, r3, #5
 2937 0268 20301BE5 		ldr	r3, [fp, #-32]
 2938 026c 0C3093E5 		ldr	r3, [r3, #12]
 2939 0270 033082E0 		add	r3, r2, r3
 2940 0274 10300BE5 		str	r3, [fp, #-16]
 2941 0278 10301BE5 		ldr	r3, [fp, #-16]
 2942 027c 0300A0E1 		mov	r0, r3
 2943 0280 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2944 0284 14000BE5 		str	r0, [fp, #-20]
 2945              		.loc 1 1952 5 discriminator 1
 2946 0288 14301BE5 		ldr	r3, [fp, #-20]
 2947 028c FF3803E2 		and	r3, r3, #16711680
 2948 0290 020853E3 		cmp	r3, #131072
 2949 0294 0100001A 		bne	.L182
 2950              		.loc 1 1952 5 discriminator 10
 2951 0298 0830E0E3 		mvn	r3, #8
 2952              		.loc 1 1952 5
 2953 029c A40000EA 		b	.L167
 2954              	.L182:
 2955              		.loc 1 1952 5 discriminator 11
 2956 02a0 14301BE5 		ldr	r3, [fp, #-20]
 2957 02a4 233CA0E1 		lsr	r3, r3, #24
 2958 02a8 030053E3 		cmp	r3, #3
 2959 02ac 0100000A 		beq	.L183
 2960              		.loc 1 1952 5 discriminator 12
 2961 02b0 0130E0E3 		mvn	r3, #1
 2962              		.loc 1 1952 5
 2963 02b4 9E0000EA 		b	.L167
 2964              	.L183:
 2965              		.loc 1 1952 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 88


 2966 02b8 28301BE5 		ldr	r3, [fp, #-40]
 2967 02bc 7F2003E2 		and	r2, r3, #127
 2968 02c0 10301BE5 		ldr	r3, [fp, #-16]
 2969 02c4 143093E5 		ldr	r3, [r3, #20]
 2970 02c8 030052E1 		cmp	r2, r3
 2971 02cc 0100003A 		bcc	.L184
 2972              		.loc 1 1952 5 discriminator 14
 2973 02d0 0230E0E3 		mvn	r3, #2
 2974              		.loc 1 1952 5
 2975 02d4 960000EA 		b	.L167
 2976              	.L184:
 2977              		.loc 1 1952 5 discriminator 15
 2978 02d8 28301BE5 		ldr	r3, [fp, #-40]
 2979 02dc 7F3003E2 		and	r3, r3, #127
 2980 02e0 8322A0E1 		lsl	r2, r3, #5
 2981 02e4 10301BE5 		ldr	r3, [fp, #-16]
 2982 02e8 0C3093E5 		ldr	r3, [r3, #12]
 2983 02ec 033082E0 		add	r3, r2, r3
 2984 02f0 10300BE5 		str	r3, [fp, #-16]
 2985 02f4 10301BE5 		ldr	r3, [fp, #-16]
 2986 02f8 0300A0E1 		mov	r0, r3
 2987 02fc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2988 0300 14000BE5 		str	r0, [fp, #-20]
 2989              		.loc 1 1952 5 discriminator 1
 2990 0304 14301BE5 		ldr	r3, [fp, #-20]
 2991 0308 FF3803E2 		and	r3, r3, #16711680
 2992 030c 020853E3 		cmp	r3, #131072
 2993 0310 0100001A 		bne	.L185
 2994              		.loc 1 1952 5 discriminator 16
 2995 0314 0830E0E3 		mvn	r3, #8
 2996              		.loc 1 1952 5
 2997 0318 850000EA 		b	.L167
 2998              	.L185:
 2999              		.loc 1 1952 5 discriminator 17
 3000 031c 14301BE5 		ldr	r3, [fp, #-20]
 3001 0320 233CA0E1 		lsr	r3, r3, #24
 3002 0324 020053E3 		cmp	r3, #2
 3003 0328 0100000A 		beq	.L180
 3004              		.loc 1 1952 5 discriminator 18
 3005 032c 0130E0E3 		mvn	r3, #1
 3006              		.loc 1 1952 5
 3007 0330 7F0000EA 		b	.L167
 3008              	.L180:
1953:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
1954:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1955:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 3009              		.loc 1 1955 5 is_stmt 1
 3010 0334 0C301BE5 		ldr	r3, [fp, #-12]
 3011 0338 083093E5 		ldr	r3, [r3, #8]
 3012 033c 013003E2 		and	r3, r3, #1
 3013 0340 000053E3 		cmp	r3, #0
 3014 0344 0100001A 		bne	.L186
 3015              		.loc 1 1955 5 is_stmt 0 discriminator 1
 3016 0348 0630E0E3 		mvn	r3, #6
 3017              		.loc 1 1955 5
 3018 034c 780000EA 		b	.L167
 3019              	.L186:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 89


1956:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
1957:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_CPT,Raddr,Vaddr,RME_CPT_SIZE(Entry_Num));
 3020              		.loc 1 1957 5 is_stmt 1
 3021 0350 10301BE5 		ldr	r3, [fp, #-16]
 3022 0354 083093E5 		ldr	r3, [r3, #8]
 3023 0358 013003E2 		and	r3, r3, #1
 3024 035c 000053E3 		cmp	r3, #0
 3025 0360 0100001A 		bne	.L187
 3026              		.loc 1 1957 5 is_stmt 0 discriminator 1
 3027 0364 0630E0E3 		mvn	r3, #6
 3028              		.loc 1 1957 5
 3029 0368 710000EA 		b	.L167
 3030              	.L187:
 3031              		.loc 1 1957 5 discriminator 2
 3032 036c 10301BE5 		ldr	r3, [fp, #-16]
 3033 0370 143093E5 		ldr	r3, [r3, #20]
 3034 0374 04209BE5 		ldr	r2, [fp, #4]
 3035 0378 033082E0 		add	r3, r2, r3
 3036 037c 18300BE5 		str	r3, [fp, #-24]
 3037 0380 18201BE5 		ldr	r2, [fp, #-24]
 3038 0384 04309BE5 		ldr	r3, [fp, #4]
 3039 0388 030052E1 		cmp	r2, r3
 3040 038c 0100002A 		bcs	.L188
 3041              		.loc 1 1957 5 discriminator 3
 3042 0390 0630E0E3 		mvn	r3, #6
 3043              		.loc 1 1957 5
 3044 0394 660000EA 		b	.L167
 3045              	.L188:
 3046              		.loc 1 1957 5 discriminator 4
 3047 0398 10301BE5 		ldr	r3, [fp, #-16]
 3048 039c 143093E5 		ldr	r3, [r3, #20]
 3049 03a0 18201BE5 		ldr	r2, [fp, #-24]
 3050 03a4 030052E1 		cmp	r2, r3
 3051 03a8 0100002A 		bcs	.L189
 3052              		.loc 1 1957 5 discriminator 5
 3053 03ac 0630E0E3 		mvn	r3, #6
 3054              		.loc 1 1957 5
 3055 03b0 5F0000EA 		b	.L167
 3056              	.L189:
 3057              		.loc 1 1957 5 discriminator 6
 3058 03b4 08309BE5 		ldr	r3, [fp, #8]
 3059 03b8 8322A0E1 		lsl	r2, r3, #5
 3060 03bc 18301BE5 		ldr	r3, [fp, #-24]
 3061 03c0 033082E0 		add	r3, r2, r3
 3062 03c4 18201BE5 		ldr	r2, [fp, #-24]
 3063 03c8 030052E1 		cmp	r2, r3
 3064 03cc 0100009A 		bls	.L190
 3065              		.loc 1 1957 5 discriminator 7
 3066 03d0 0630E0E3 		mvn	r3, #6
 3067              		.loc 1 1957 5
 3068 03d4 560000EA 		b	.L167
 3069              	.L190:
 3070              		.loc 1 1957 5 discriminator 8
 3071 03d8 10301BE5 		ldr	r3, [fp, #-16]
 3072 03dc 182093E5 		ldr	r2, [r3, #24]
 3073 03e0 08309BE5 		ldr	r3, [fp, #8]
 3074 03e4 8312A0E1 		lsl	r1, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 90


 3075 03e8 18301BE5 		ldr	r3, [fp, #-24]
 3076 03ec 033081E0 		add	r3, r1, r3
 3077 03f0 013043E2 		sub	r3, r3, #1
 3078 03f4 030052E1 		cmp	r2, r3
 3079 03f8 0100002A 		bcs	.L191
 3080              		.loc 1 1957 5 discriminator 9
 3081 03fc 0630E0E3 		mvn	r3, #6
 3082              		.loc 1 1957 5
 3083 0400 4B0000EA 		b	.L167
 3084              	.L191:
1958:../../Source/Kernel/rme_kernel.c **** 
1959:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1960:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 3085              		.loc 1 1960 5 is_stmt 1
 3086 0404 0C301BE5 		ldr	r3, [fp, #-12]
 3087 0408 142093E5 		ldr	r2, [r3, #20]
 3088 040c 2C301BE5 		ldr	r3, [fp, #-44]
 3089 0410 030052E1 		cmp	r2, r3
 3090 0414 0100008A 		bhi	.L192
 3091              		.loc 1 1960 5 is_stmt 0 discriminator 1
 3092 0418 0230E0E3 		mvn	r3, #2
 3093              		.loc 1 1960 5
 3094 041c 440000EA 		b	.L167
 3095              	.L192:
 3096              		.loc 1 1960 5 discriminator 2
 3097 0420 2C301BE5 		ldr	r3, [fp, #-44]
 3098 0424 8322A0E1 		lsl	r2, r3, #5
 3099 0428 0C301BE5 		ldr	r3, [fp, #-12]
 3100 042c 0C3093E5 		ldr	r3, [r3, #12]
 3101 0430 033082E0 		add	r3, r2, r3
 3102 0434 1C300BE5 		str	r3, [fp, #-28]
1961:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1962:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 3103              		.loc 1 1962 5 is_stmt 1
 3104 0438 1C301BE5 		ldr	r3, [fp, #-28]
 3105 043c 0128A0E3 		mov	r2, #65536
 3106 0440 0010A0E3 		mov	r1, #0
 3107 0444 0300A0E1 		mov	r0, r3
 3108 0448 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3109 044c 0030A0E1 		mov	r3, r0
 3110              		.loc 1 1962 5 is_stmt 0 discriminator 1
 3111 0450 000053E3 		cmp	r3, #0
 3112 0454 0100001A 		bne	.L193
 3113 0458 0430E0E3 		mvn	r3, #4
 3114              		.loc 1 1962 5
 3115 045c 340000EA 		b	.L167
 3116              	.L193:
 3117              		.loc 1 1962 5 discriminator 2
 3118 0460 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3119 0464 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3120 0468 002093E5 		ldr	r2, [r3]
 3121 046c 1C301BE5 		ldr	r3, [fp, #-28]
 3122 0470 102083E5 		str	r2, [r3, #16]
1963:../../Source/Kernel/rme_kernel.c **** 
1964:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1965:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))<0)
 3123              		.loc 1 1965 8 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 91


 3124 0474 08309BE5 		ldr	r3, [fp, #8]
 3125 0478 8332A0E1 		lsl	r3, r3, #5
 3126 047c 0310A0E1 		mov	r1, r3
 3127 0480 18001BE5 		ldr	r0, [fp, #-24]
 3128 0484 FEFFFFEB 		bl	_RME_Kot_Mark
 3129 0488 0030A0E1 		mov	r3, r0
 3130              		.loc 1 1965 7 discriminator 1
 3131 048c 000053E3 		cmp	r3, #0
 3132 0490 050000AA 		bge	.L194
1966:../../Source/Kernel/rme_kernel.c ****     {
1967:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1968:../../Source/Kernel/rme_kernel.c ****         
1969:../../Source/Kernel/rme_kernel.c ****         /* Failure. Set the Type_Stat back to 0 and abort the creation process */
1970:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 3133              		.loc 1 1970 9
 3134 0494 1C301BE5 		ldr	r3, [fp, #-28]
 3135 0498 0010A0E3 		mov	r1, #0
 3136 049c 0300A0E1 		mov	r0, r3
 3137 04a0 FEFFFFEB 		bl	__RME_A7A_Write_Release
1971:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 3138              		.loc 1 1971 16
 3139 04a4 0330E0E3 		mvn	r3, #3
 3140 04a8 210000EA 		b	.L167
 3141              	.L194:
1972:../../Source/Kernel/rme_kernel.c ****     }
1973:../../Source/Kernel/rme_kernel.c ****     else
1974:../../Source/Kernel/rme_kernel.c ****     {
1975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1976:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1977:../../Source/Kernel/rme_kernel.c ****     }
1978:../../Source/Kernel/rme_kernel.c **** 
1979:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1980:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3142              		.loc 1 1980 14
 3143 04ac 0030A0E3 		mov	r3, #0
 3144 04b0 08300BE5 		str	r3, [fp, #-8]
 3145              		.loc 1 1980 5
 3146 04b4 090000EA 		b	.L195
 3147              	.L196:
1981:../../Source/Kernel/rme_kernel.c ****     {
1982:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 3148              		.loc 1 1982 9
 3149 04b8 08301BE5 		ldr	r3, [fp, #-8]
 3150 04bc 8322A0E1 		lsl	r2, r3, #5
 3151 04c0 18301BE5 		ldr	r3, [fp, #-24]
 3152 04c4 033082E0 		add	r3, r2, r3
 3153 04c8 0320A0E1 		mov	r2, r3
 3154 04cc 0030A0E3 		mov	r3, #0
 3155 04d0 003082E5 		str	r3, [r2]
1980:../../Source/Kernel/rme_kernel.c ****     {
 3156              		.loc 1 1980 39 discriminator 3
 3157 04d4 08301BE5 		ldr	r3, [fp, #-8]
 3158 04d8 013083E2 		add	r3, r3, #1
 3159 04dc 08300BE5 		str	r3, [fp, #-8]
 3160              	.L195:
1980:../../Source/Kernel/rme_kernel.c ****     {
 3161              		.loc 1 1980 23 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 92


 3162 04e0 08201BE5 		ldr	r2, [fp, #-8]
 3163 04e4 08309BE5 		ldr	r3, [fp, #8]
 3164 04e8 030052E1 		cmp	r2, r3
 3165 04ec F1FFFF3A 		bcc	.L196
1983:../../Source/Kernel/rme_kernel.c ****     }
1984:../../Source/Kernel/rme_kernel.c **** 
1985:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1986:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 3166              		.loc 1 1986 27
 3167 04f0 1C301BE5 		ldr	r3, [fp, #-28]
 3168 04f4 0020A0E3 		mov	r2, #0
 3169 04f8 042083E5 		str	r2, [r3, #4]
1987:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 3170              		.loc 1 1987 25
 3171 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 3172 0500 18201BE5 		ldr	r2, [fp, #-24]
 3173 0504 0C2083E5 		str	r2, [r3, #12]
1988:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 3174              		.loc 1 1988 23
 3175 0508 1C301BE5 		ldr	r3, [fp, #-28]
 3176 050c FF20A0E3 		mov	r2, #255
 3177 0510 082083E5 		str	r2, [r3, #8]
1989:../../Source/Kernel/rme_kernel.c ****     
1990:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1991:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 3178              		.loc 1 1991 23
 3179 0514 1C301BE5 		ldr	r3, [fp, #-28]
 3180 0518 08209BE5 		ldr	r2, [fp, #8]
 3181 051c 142083E5 		str	r2, [r3, #20]
1992:../../Source/Kernel/rme_kernel.c **** 
1993:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1994:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 3182              		.loc 1 1994 5
 3183 0520 1C301BE5 		ldr	r3, [fp, #-28]
 3184 0524 0314A0E3 		mov	r1, #50331648
 3185 0528 0300A0E1 		mov	r0, r3
 3186 052c FEFFFFEB 		bl	__RME_A7A_Write_Release
1995:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1996:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1997:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1998:../../Source/Kernel/rme_kernel.c **** 
1999:../../Source/Kernel/rme_kernel.c ****     return 0;
 3187              		.loc 1 1999 12
 3188 0530 0030A0E3 		mov	r3, #0
 3189              	.L167:
2000:../../Source/Kernel/rme_kernel.c **** }
 3190              		.loc 1 2000 1
 3191 0534 0300A0E1 		mov	r0, r3
 3192 0538 04D04BE2 		sub	sp, fp, #4
 3193              		.cfi_def_cfa 13, 8
 3194              		@ sp needed
 3195 053c 0088BDE8 		pop	{fp, pc}
 3196              		.cfi_endproc
 3197              	.LFE24:
 3199              		.section	.rodata
 3200              		.align	2
 3201              	.LC6:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 93


 3202 003c 32333A34 		.ascii	"23:43:57\000"
 3202      333A3537 
 3202      00
 3203 0045 000000   		.align	2
 3204              	.LC7:
 3205 0048 4D617220 		.ascii	"Mar 17 2025\000"
 3205      31372032 
 3205      30323500 
 3206              		.align	2
 3207              	.LC8:
 3208 0054 2E2E2F2E 		.ascii	"../../Source/Kernel/rme_kernel.c\000"
 3208      2E2F536F 
 3208      75726365 
 3208      2F4B6572 
 3208      6E656C2F 
 3209              		.section	.text._RME_Cpt_Del,"ax",%progbits
 3210              		.align	2
 3211              		.syntax unified
 3212              		.arm
 3214              	_RME_Cpt_Del:
 3215              	.LFB25:
2001:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Crt *************************************************/
2002:../../Source/Kernel/rme_kernel.c **** 
2003:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Del ******************************************************
2004:../../Source/Kernel/rme_kernel.c **** Description : Delete a layer of capability table.
2005:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2006:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Del - The capability table that contains the
2007:../../Source/Kernel/rme_kernel.c ****                                       cap to captbl.
2008:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2009:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Del - The capability to the capability table to be
2010:../../Source/Kernel/rme_kernel.c ****                                   deleted.
2011:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2012:../../Source/Kernel/rme_kernel.c **** Output      : None.
2013:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2014:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2015:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Del(struct RME_Cap_Cpt* Cpt,
2016:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Del,
2017:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Del)
2018:../../Source/Kernel/rme_kernel.c **** {
 3216              		.loc 1 2018 1
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 48
 3219              		@ frame_needed = 1, uses_anonymous_args = 0
 3220 0000 00482DE9 		push	{fp, lr}
 3221              		.cfi_def_cfa_offset 8
 3222              		.cfi_offset 11, -8
 3223              		.cfi_offset 14, -4
 3224 0004 04B08DE2 		add	fp, sp, #4
 3225              		.cfi_def_cfa 11, 4
 3226 0008 30D04DE2 		sub	sp, sp, #48
 3227 000c 28000BE5 		str	r0, [fp, #-40]
 3228 0010 2C100BE5 		str	r1, [fp, #-44]
 3229 0014 30200BE5 		str	r2, [fp, #-48]
2019:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
2020:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Entry_Num;
2021:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2022:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Del;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 94


2023:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Struct* Table;
2024:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2025:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
2026:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
2027:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
2028:../../Source/Kernel/rme_kernel.c ****     
2029:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2030:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Del,RME_CAP_TYPE_CPT,
 3230              		.loc 1 2030 5
 3231 0018 2C301BE5 		ldr	r3, [fp, #-44]
 3232 001c 803003E2 		and	r3, r3, #128
 3233 0020 000053E3 		cmp	r3, #0
 3234 0024 1C00001A 		bne	.L198
 3235              		.loc 1 2030 5 is_stmt 0 discriminator 1
 3236 0028 28301BE5 		ldr	r3, [fp, #-40]
 3237 002c 142093E5 		ldr	r2, [r3, #20]
 3238 0030 2C301BE5 		ldr	r3, [fp, #-44]
 3239 0034 030052E1 		cmp	r2, r3
 3240 0038 0100008A 		bhi	.L199
 3241              		.loc 1 2030 5 discriminator 3
 3242 003c 0230E0E3 		mvn	r3, #2
 3243              		.loc 1 2030 5
 3244 0040 E10000EA 		b	.L200
 3245              	.L199:
 3246              		.loc 1 2030 5 discriminator 4
 3247 0044 2C301BE5 		ldr	r3, [fp, #-44]
 3248 0048 8322A0E1 		lsl	r2, r3, #5
 3249 004c 28301BE5 		ldr	r3, [fp, #-40]
 3250 0050 0C3093E5 		ldr	r3, [r3, #12]
 3251 0054 033082E0 		add	r3, r2, r3
 3252 0058 0C300BE5 		str	r3, [fp, #-12]
 3253 005c 0C301BE5 		ldr	r3, [fp, #-12]
 3254 0060 0300A0E1 		mov	r0, r3
 3255 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3256 0068 10000BE5 		str	r0, [fp, #-16]
 3257              		.loc 1 2030 5 discriminator 1
 3258 006c 10301BE5 		ldr	r3, [fp, #-16]
 3259 0070 FF3803E2 		and	r3, r3, #16711680
 3260 0074 020853E3 		cmp	r3, #131072
 3261 0078 0100001A 		bne	.L201
 3262              		.loc 1 2030 5 discriminator 5
 3263 007c 0830E0E3 		mvn	r3, #8
 3264              		.loc 1 2030 5
 3265 0080 D10000EA 		b	.L200
 3266              	.L201:
 3267              		.loc 1 2030 5 discriminator 6
 3268 0084 10301BE5 		ldr	r3, [fp, #-16]
 3269 0088 233CA0E1 		lsr	r3, r3, #24
 3270 008c 030053E3 		cmp	r3, #3
 3271 0090 3F00000A 		beq	.L202
 3272              		.loc 1 2030 5 discriminator 7
 3273 0094 0130E0E3 		mvn	r3, #1
 3274              		.loc 1 2030 5
 3275 0098 CB0000EA 		b	.L200
 3276              	.L198:
 3277              		.loc 1 2030 5 discriminator 2
 3278 009c 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 95


 3279 00a0 2324A0E1 		lsr	r2, r3, #8
 3280 00a4 28301BE5 		ldr	r3, [fp, #-40]
 3281 00a8 143093E5 		ldr	r3, [r3, #20]
 3282 00ac 030052E1 		cmp	r2, r3
 3283 00b0 0100003A 		bcc	.L203
 3284              		.loc 1 2030 5 discriminator 8
 3285 00b4 0230E0E3 		mvn	r3, #2
 3286              		.loc 1 2030 5
 3287 00b8 C30000EA 		b	.L200
 3288              	.L203:
 3289              		.loc 1 2030 5 discriminator 9
 3290 00bc 2C301BE5 		ldr	r3, [fp, #-44]
 3291 00c0 2334A0E1 		lsr	r3, r3, #8
 3292 00c4 8322A0E1 		lsl	r2, r3, #5
 3293 00c8 28301BE5 		ldr	r3, [fp, #-40]
 3294 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3295 00d0 033082E0 		add	r3, r2, r3
 3296 00d4 0C300BE5 		str	r3, [fp, #-12]
 3297 00d8 0C301BE5 		ldr	r3, [fp, #-12]
 3298 00dc 0300A0E1 		mov	r0, r3
 3299 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3300 00e4 10000BE5 		str	r0, [fp, #-16]
 3301              		.loc 1 2030 5 discriminator 1
 3302 00e8 10301BE5 		ldr	r3, [fp, #-16]
 3303 00ec FF3803E2 		and	r3, r3, #16711680
 3304 00f0 020853E3 		cmp	r3, #131072
 3305 00f4 0100001A 		bne	.L204
 3306              		.loc 1 2030 5 discriminator 10
 3307 00f8 0830E0E3 		mvn	r3, #8
 3308              		.loc 1 2030 5
 3309 00fc B20000EA 		b	.L200
 3310              	.L204:
 3311              		.loc 1 2030 5 discriminator 11
 3312 0100 10301BE5 		ldr	r3, [fp, #-16]
 3313 0104 233CA0E1 		lsr	r3, r3, #24
 3314 0108 030053E3 		cmp	r3, #3
 3315 010c 0100000A 		beq	.L205
 3316              		.loc 1 2030 5 discriminator 12
 3317 0110 0130E0E3 		mvn	r3, #1
 3318              		.loc 1 2030 5
 3319 0114 AC0000EA 		b	.L200
 3320              	.L205:
 3321              		.loc 1 2030 5 discriminator 13
 3322 0118 2C301BE5 		ldr	r3, [fp, #-44]
 3323 011c 7F2003E2 		and	r2, r3, #127
 3324 0120 0C301BE5 		ldr	r3, [fp, #-12]
 3325 0124 143093E5 		ldr	r3, [r3, #20]
 3326 0128 030052E1 		cmp	r2, r3
 3327 012c 0100003A 		bcc	.L206
 3328              		.loc 1 2030 5 discriminator 14
 3329 0130 0230E0E3 		mvn	r3, #2
 3330              		.loc 1 2030 5
 3331 0134 A40000EA 		b	.L200
 3332              	.L206:
 3333              		.loc 1 2030 5 discriminator 15
 3334 0138 2C301BE5 		ldr	r3, [fp, #-44]
 3335 013c 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 96


 3336 0140 8322A0E1 		lsl	r2, r3, #5
 3337 0144 0C301BE5 		ldr	r3, [fp, #-12]
 3338 0148 0C3093E5 		ldr	r3, [r3, #12]
 3339 014c 033082E0 		add	r3, r2, r3
 3340 0150 0C300BE5 		str	r3, [fp, #-12]
 3341 0154 0C301BE5 		ldr	r3, [fp, #-12]
 3342 0158 0300A0E1 		mov	r0, r3
 3343 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3344 0160 10000BE5 		str	r0, [fp, #-16]
 3345              		.loc 1 2030 5 discriminator 1
 3346 0164 10301BE5 		ldr	r3, [fp, #-16]
 3347 0168 FF3803E2 		and	r3, r3, #16711680
 3348 016c 020853E3 		cmp	r3, #131072
 3349 0170 0100001A 		bne	.L207
 3350              		.loc 1 2030 5 discriminator 16
 3351 0174 0830E0E3 		mvn	r3, #8
 3352              		.loc 1 2030 5
 3353 0178 930000EA 		b	.L200
 3354              	.L207:
 3355              		.loc 1 2030 5 discriminator 17
 3356 017c 10301BE5 		ldr	r3, [fp, #-16]
 3357 0180 233CA0E1 		lsr	r3, r3, #24
 3358 0184 030053E3 		cmp	r3, #3
 3359 0188 0100000A 		beq	.L202
 3360              		.loc 1 2030 5 discriminator 18
 3361 018c 0130E0E3 		mvn	r3, #1
 3362              		.loc 1 2030 5
 3363 0190 8D0000EA 		b	.L200
 3364              	.L202:
2031:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2032:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2033:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 3365              		.loc 1 2033 5 is_stmt 1
 3366 0194 0C301BE5 		ldr	r3, [fp, #-12]
 3367 0198 083093E5 		ldr	r3, [r3, #8]
 3368 019c 023003E2 		and	r3, r3, #2
 3369 01a0 000053E3 		cmp	r3, #0
 3370 01a4 0100001A 		bne	.L208
 3371              		.loc 1 2033 5 is_stmt 0 discriminator 1
 3372 01a8 0630E0E3 		mvn	r3, #6
 3373              		.loc 1 2033 5
 3374 01ac 860000EA 		b	.L200
 3375              	.L208:
2034:../../Source/Kernel/rme_kernel.c ****     
2035:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2036:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Del,struct RME_Cap_Cpt*,Cpt_Del);
 3376              		.loc 1 2036 5 is_stmt 1
 3377 01b0 0C301BE5 		ldr	r3, [fp, #-12]
 3378 01b4 142093E5 		ldr	r2, [r3, #20]
 3379 01b8 30301BE5 		ldr	r3, [fp, #-48]
 3380 01bc 030052E1 		cmp	r2, r3
 3381 01c0 0100008A 		bhi	.L209
 3382              		.loc 1 2036 5 is_stmt 0 discriminator 1
 3383 01c4 0230E0E3 		mvn	r3, #2
 3384              		.loc 1 2036 5
 3385 01c8 7F0000EA 		b	.L200
 3386              	.L209:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 97


 3387              		.loc 1 2036 5 discriminator 2
 3388 01cc 30301BE5 		ldr	r3, [fp, #-48]
 3389 01d0 8322A0E1 		lsl	r2, r3, #5
 3390 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 3391 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3392 01dc 033082E0 		add	r3, r2, r3
 3393 01e0 14300BE5 		str	r3, [fp, #-20]
2037:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
2038:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Cpt_Del,Type_Stat,RME_CAP_TYPE_CPT);
 3394              		.loc 1 2038 5 is_stmt 1
 3395 01e4 14301BE5 		ldr	r3, [fp, #-20]
 3396 01e8 0300A0E1 		mov	r0, r3
 3397 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3398 01f0 10000BE5 		str	r0, [fp, #-16]
 3399              		.loc 1 2038 5 is_stmt 0 discriminator 1
 3400 01f4 10301BE5 		ldr	r3, [fp, #-16]
 3401 01f8 FF3803E2 		and	r3, r3, #16711680
 3402 01fc 020853E3 		cmp	r3, #131072
 3403 0200 0100000A 		beq	.L210
 3404 0204 0830E0E3 		mvn	r3, #8
 3405              		.loc 1 2038 5
 3406 0208 6F0000EA 		b	.L200
 3407              	.L210:
 3408              		.loc 1 2038 5 discriminator 2
 3409 020c 10301BE5 		ldr	r3, [fp, #-16]
 3410 0210 233CA0E1 		lsr	r3, r3, #24
 3411 0214 030053E3 		cmp	r3, #3
 3412 0218 0100000A 		beq	.L211
 3413              		.loc 1 2038 5 discriminator 3
 3414 021c 0130E0E3 		mvn	r3, #1
 3415              		.loc 1 2038 5
 3416 0220 690000EA 		b	.L200
 3417              	.L211:
 3418              		.loc 1 2038 5 discriminator 4
 3419 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3420 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3421 022c 002093E5 		ldr	r2, [r3]
 3422 0230 14301BE5 		ldr	r3, [fp, #-20]
 3423 0234 103093E5 		ldr	r3, [r3, #16]
 3424 0238 0310A0E1 		mov	r1, r3
 3425 023c 0200A0E1 		mov	r0, r2
 3426 0240 FEFFFFEB 		bl	_RME_Diff
 3427 0244 0030A0E1 		mov	r3, r0
 3428              		.loc 1 2038 5 discriminator 1
 3429 0248 0A0053E3 		cmp	r3, #10
 3430 024c 0100008A 		bhi	.L212
 3431              		.loc 1 2038 5 discriminator 5
 3432 0250 0730E0E3 		mvn	r3, #7
 3433              		.loc 1 2038 5
 3434 0254 5C0000EA 		b	.L200
 3435              	.L212:
 3436              		.loc 1 2038 5 discriminator 6
 3437 0258 14301BE5 		ldr	r3, [fp, #-20]
 3438 025c 043093E5 		ldr	r3, [r3, #4]
 3439 0260 000053E3 		cmp	r3, #0
 3440 0264 0B00000A 		beq	.L213
 3441              		.loc 1 2038 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 98


 3442 0268 10301BE5 		ldr	r3, [fp, #-16]
 3443 026c 7330FFE6 		uxth	r3, r3
 3444 0270 000053E3 		cmp	r3, #0
 3445 0274 0500001A 		bne	.L214
 3446              		.loc 1 2038 5 discriminator 9
 3447 0278 14001BE5 		ldr	r0, [fp, #-20]
 3448 027c 10301BE5 		ldr	r3, [fp, #-16]
 3449 0280 FF38C3E3 		bic	r3, r3, #16711680
 3450 0284 0320A0E1 		mov	r2, r3
 3451 0288 10101BE5 		ldr	r1, [fp, #-16]
 3452 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3453              	.L214:
 3454              		.loc 1 2038 5 discriminator 11
 3455 0290 0530E0E3 		mvn	r3, #5
 3456              		.loc 1 2038 5
 3457 0294 4C0000EA 		b	.L200
 3458              	.L213:
 3459              		.loc 1 2038 5 discriminator 8
 3460 0298 10301BE5 		ldr	r3, [fp, #-16]
 3461 029c 7330FFE6 		uxth	r3, r3
 3462 02a0 000053E3 		cmp	r3, #0
 3463 02a4 0800000A 		beq	.L215
 3464              		.loc 1 2038 5 discriminator 12
 3465 02a8 003000E3 		movw	r3, #:lower16:.LC6
 3466 02ac 003040E3 		movt	r3, #:upper16:.LC6
 3467 02b0 002000E3 		movw	r2, #:lower16:.LC7
 3468 02b4 002040E3 		movt	r2, #:upper16:.LC7
 3469 02b8 F61700E3 		movw	r1, #2038
 3470 02bc 000000E3 		movw	r0, #:lower16:.LC8
 3471 02c0 000040E3 		movt	r0, #:upper16:.LC8
 3472 02c4 FEFFFFEB 		bl	RME_Log
 3473              	.L216:
 3474              		.loc 1 2038 5
 3475 02c8 FEFFFFEA 		b	.L216
 3476              	.L215:
2039:../../Source/Kernel/rme_kernel.c ****     
2040:../../Source/Kernel/rme_kernel.c ****     /* Is there any capability in this capability table? If yes, we cannot destroy it.
2041:../../Source/Kernel/rme_kernel.c ****      * We will check every slot to make sure nothing is there. This is surely,
2042:../../Source/Kernel/rme_kernel.c ****      * predictable but not so perfect. So, if the time of such operations is to be 
2043:../../Source/Kernel/rme_kernel.c ****      * bounded, the user must control the maximum number of entries in the table
2044:../../Source/Kernel/rme_kernel.c ****      * by configuring RME_CPT_ENTRY_MAX to a non-zero value. */
2045:../../Source/Kernel/rme_kernel.c ****     Table=RME_CAP_GETOBJ(Cpt_Del,struct RME_Cap_Struct*);
 3477              		.loc 1 2045 11 is_stmt 1
 3478 02cc 14301BE5 		ldr	r3, [fp, #-20]
 3479 02d0 0C3093E5 		ldr	r3, [r3, #12]
 3480              		.loc 1 2045 10
 3481 02d4 18300BE5 		str	r3, [fp, #-24]
2046:../../Source/Kernel/rme_kernel.c ****     Entry_Num=Cpt_Del->Entry_Num;
 3482              		.loc 1 2046 14
 3483 02d8 14301BE5 		ldr	r3, [fp, #-20]
 3484 02dc 143093E5 		ldr	r3, [r3, #20]
 3485 02e0 1C300BE5 		str	r3, [fp, #-28]
2047:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3486              		.loc 1 2047 14
 3487 02e4 0030A0E3 		mov	r3, #0
 3488 02e8 08300BE5 		str	r3, [fp, #-8]
 3489              		.loc 1 2047 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 99


 3490 02ec 110000EA 		b	.L217
 3491              	.L219:
2048:../../Source/Kernel/rme_kernel.c ****     {
2049:../../Source/Kernel/rme_kernel.c ****         if(Table[Count].Head.Type_Stat!=0U)
 3492              		.loc 1 2049 17
 3493 02f0 08301BE5 		ldr	r3, [fp, #-8]
 3494 02f4 8332A0E1 		lsl	r3, r3, #5
 3495 02f8 18201BE5 		ldr	r2, [fp, #-24]
 3496 02fc 033082E0 		add	r3, r2, r3
 3497              		.loc 1 2049 29
 3498 0300 003093E5 		ldr	r3, [r3]
 3499              		.loc 1 2049 11
 3500 0304 000053E3 		cmp	r3, #0
 3501 0308 0700000A 		beq	.L218
2050:../../Source/Kernel/rme_kernel.c ****         {
2051:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2052:../../Source/Kernel/rme_kernel.c ****             
2053:../../Source/Kernel/rme_kernel.c ****             RME_CAP_DEFROST(Cpt_Del,Type_Stat);
 3502              		.loc 1 2053 13
 3503 030c 14001BE5 		ldr	r0, [fp, #-20]
 3504 0310 10301BE5 		ldr	r3, [fp, #-16]
 3505 0314 FF38C3E3 		bic	r3, r3, #16711680
 3506 0318 0320A0E1 		mov	r2, r3
 3507 031c 10101BE5 		ldr	r1, [fp, #-16]
 3508 0320 FEFFFFEB 		bl	_RME_Comp_Swap_Single
2054:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_EXIST;
 3509              		.loc 1 2054 20
 3510 0324 0430E0E3 		mvn	r3, #4
 3511 0328 270000EA 		b	.L200
 3512              	.L218:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3513              		.loc 1 2047 39 discriminator 2
 3514 032c 08301BE5 		ldr	r3, [fp, #-8]
 3515 0330 013083E2 		add	r3, r3, #1
 3516 0334 08300BE5 		str	r3, [fp, #-8]
 3517              	.L217:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3518              		.loc 1 2047 23 discriminator 1
 3519 0338 08201BE5 		ldr	r2, [fp, #-8]
 3520 033c 1C301BE5 		ldr	r3, [fp, #-28]
 3521 0340 030052E1 		cmp	r2, r3
 3522 0344 E9FFFF3A 		bcc	.L219
2055:../../Source/Kernel/rme_kernel.c ****         }
2056:../../Source/Kernel/rme_kernel.c ****         else
2057:../../Source/Kernel/rme_kernel.c ****         {
2058:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2059:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2060:../../Source/Kernel/rme_kernel.c ****         }
2061:../../Source/Kernel/rme_kernel.c ****     }
2062:../../Source/Kernel/rme_kernel.c ****     
2063:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
2064:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Cpt_Del,rme_ptr_t);
 3523              		.loc 1 2064 11
 3524 0348 14301BE5 		ldr	r3, [fp, #-20]
 3525 034c 0C3093E5 		ldr	r3, [r3, #12]
 3526 0350 20300BE5 		str	r3, [fp, #-32]
2065:../../Source/Kernel/rme_kernel.c ****     Size=RME_CPT_SIZE(Cpt_Del->Entry_Num);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 100


 3527              		.loc 1 2065 10
 3528 0354 14301BE5 		ldr	r3, [fp, #-20]
 3529 0358 143093E5 		ldr	r3, [r3, #20]
 3530              		.loc 1 2065 9
 3531 035c 8332A0E1 		lsl	r3, r3, #5
 3532 0360 24300BE5 		str	r3, [fp, #-36]
2066:../../Source/Kernel/rme_kernel.c **** 
2067:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
2068:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Cpt_Del,Type_Stat);
 3533              		.loc 1 2068 5
 3534 0364 14301BE5 		ldr	r3, [fp, #-20]
 3535 0368 0020A0E3 		mov	r2, #0
 3536 036c 10101BE5 		ldr	r1, [fp, #-16]
 3537 0370 0300A0E1 		mov	r0, r3
 3538 0374 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3539 0378 0030A0E1 		mov	r3, r0
 3540              		.loc 1 2068 5 is_stmt 0 discriminator 1
 3541 037c 000053E3 		cmp	r3, #0
 3542 0380 0100001A 		bne	.L220
 3543 0384 0030E0E3 		mvn	r3, #0
 3544              		.loc 1 2068 5
 3545 0388 0F0000EA 		b	.L200
 3546              	.L220:
2069:../../Source/Kernel/rme_kernel.c **** 
2070:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
2071:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Size)==0);
 3547              		.loc 1 2071 5 is_stmt 1
 3548 038c 24101BE5 		ldr	r1, [fp, #-36]
 3549 0390 20001BE5 		ldr	r0, [fp, #-32]
 3550 0394 FEFFFFEB 		bl	_RME_Kot_Erase
 3551 0398 0030A0E1 		mov	r3, r0
 3552              		.loc 1 2071 5 is_stmt 0 discriminator 1
 3553 039c 000053E3 		cmp	r3, #0
 3554 03a0 0800000A 		beq	.L221
 3555 03a4 003000E3 		movw	r3, #:lower16:.LC6
 3556 03a8 003040E3 		movt	r3, #:upper16:.LC6
 3557 03ac 002000E3 		movw	r2, #:lower16:.LC7
 3558 03b0 002040E3 		movt	r2, #:upper16:.LC7
 3559 03b4 171800E3 		movw	r1, #2071
 3560 03b8 000000E3 		movw	r0, #:lower16:.LC8
 3561 03bc 000040E3 		movt	r0, #:upper16:.LC8
 3562 03c0 FEFFFFEB 		bl	RME_Log
 3563              	.L222:
 3564              		.loc 1 2071 5
 3565 03c4 FEFFFFEA 		b	.L222
 3566              	.L221:
2072:../../Source/Kernel/rme_kernel.c ****     
2073:../../Source/Kernel/rme_kernel.c ****     return 0;
 3567              		.loc 1 2073 12 is_stmt 1
 3568 03c8 0030A0E3 		mov	r3, #0
 3569              	.L200:
2074:../../Source/Kernel/rme_kernel.c **** }
 3570              		.loc 1 2074 1
 3571 03cc 0300A0E1 		mov	r0, r3
 3572 03d0 04D04BE2 		sub	sp, fp, #4
 3573              		.cfi_def_cfa 13, 8
 3574              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 101


 3575 03d4 0088BDE8 		pop	{fp, pc}
 3576              		.cfi_endproc
 3577              	.LFE25:
 3579              		.section	.text._RME_Cpt_Frz,"ax",%progbits
 3580              		.align	2
 3581              		.syntax unified
 3582              		.arm
 3584              	_RME_Cpt_Frz:
 3585              	.LFB26:
2075:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Del *************************************************/
2076:../../Source/Kernel/rme_kernel.c **** 
2077:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Frz ******************************************************
2078:../../Source/Kernel/rme_kernel.c **** Description : Freeze a capability in the capability table.
2079:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2080:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Frz  - The capability table containing the cap
2081:../../Source/Kernel/rme_kernel.c ****                                        to captbl for this operation.
2082:../../Source/Kernel/rme_kernel.c ****                                        2-Level.
2083:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Frz - The cap to the kernel object being freezed.
2084:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2085:../../Source/Kernel/rme_kernel.c **** Output      : None.
2086:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2087:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2088:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Frz(struct RME_Cap_Cpt* Cpt,
2089:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Frz,
2090:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Frz)
2091:../../Source/Kernel/rme_kernel.c **** {
 3586              		.loc 1 2091 1
 3587              		.cfi_startproc
 3588              		@ args = 0, pretend = 0, frame = 32
 3589              		@ frame_needed = 1, uses_anonymous_args = 0
 3590 0000 00482DE9 		push	{fp, lr}
 3591              		.cfi_def_cfa_offset 8
 3592              		.cfi_offset 11, -8
 3593              		.cfi_offset 14, -4
 3594 0004 04B08DE2 		add	fp, sp, #4
 3595              		.cfi_def_cfa 11, 4
 3596 0008 20D04DE2 		sub	sp, sp, #32
 3597 000c 18000BE5 		str	r0, [fp, #-24]
 3598 0010 1C100BE5 		str	r1, [fp, #-28]
 3599 0014 20200BE5 		str	r2, [fp, #-32]
2092:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2093:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Frz;
2094:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2095:../../Source/Kernel/rme_kernel.c ****     
2096:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2097:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Frz,RME_CAP_TYPE_CPT,
 3600              		.loc 1 2097 5
 3601 0018 1C301BE5 		ldr	r3, [fp, #-28]
 3602 001c 803003E2 		and	r3, r3, #128
 3603 0020 000053E3 		cmp	r3, #0
 3604 0024 1C00001A 		bne	.L224
 3605              		.loc 1 2097 5 is_stmt 0 discriminator 1
 3606 0028 18301BE5 		ldr	r3, [fp, #-24]
 3607 002c 142093E5 		ldr	r2, [r3, #20]
 3608 0030 1C301BE5 		ldr	r3, [fp, #-28]
 3609 0034 030052E1 		cmp	r2, r3
 3610 0038 0100008A 		bhi	.L225
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 102


 3611              		.loc 1 2097 5 discriminator 3
 3612 003c 0230E0E3 		mvn	r3, #2
 3613              		.loc 1 2097 5
 3614 0040 9B0000EA 		b	.L226
 3615              	.L225:
 3616              		.loc 1 2097 5 discriminator 4
 3617 0044 1C301BE5 		ldr	r3, [fp, #-28]
 3618 0048 8322A0E1 		lsl	r2, r3, #5
 3619 004c 18301BE5 		ldr	r3, [fp, #-24]
 3620 0050 0C3093E5 		ldr	r3, [r3, #12]
 3621 0054 033082E0 		add	r3, r2, r3
 3622 0058 08300BE5 		str	r3, [fp, #-8]
 3623 005c 08301BE5 		ldr	r3, [fp, #-8]
 3624 0060 0300A0E1 		mov	r0, r3
 3625 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3626 0068 0C000BE5 		str	r0, [fp, #-12]
 3627              		.loc 1 2097 5 discriminator 1
 3628 006c 0C301BE5 		ldr	r3, [fp, #-12]
 3629 0070 FF3803E2 		and	r3, r3, #16711680
 3630 0074 020853E3 		cmp	r3, #131072
 3631 0078 0100001A 		bne	.L227
 3632              		.loc 1 2097 5 discriminator 5
 3633 007c 0830E0E3 		mvn	r3, #8
 3634              		.loc 1 2097 5
 3635 0080 8B0000EA 		b	.L226
 3636              	.L227:
 3637              		.loc 1 2097 5 discriminator 6
 3638 0084 0C301BE5 		ldr	r3, [fp, #-12]
 3639 0088 233CA0E1 		lsr	r3, r3, #24
 3640 008c 030053E3 		cmp	r3, #3
 3641 0090 3F00000A 		beq	.L228
 3642              		.loc 1 2097 5 discriminator 7
 3643 0094 0130E0E3 		mvn	r3, #1
 3644              		.loc 1 2097 5
 3645 0098 850000EA 		b	.L226
 3646              	.L224:
 3647              		.loc 1 2097 5 discriminator 2
 3648 009c 1C301BE5 		ldr	r3, [fp, #-28]
 3649 00a0 2324A0E1 		lsr	r2, r3, #8
 3650 00a4 18301BE5 		ldr	r3, [fp, #-24]
 3651 00a8 143093E5 		ldr	r3, [r3, #20]
 3652 00ac 030052E1 		cmp	r2, r3
 3653 00b0 0100003A 		bcc	.L229
 3654              		.loc 1 2097 5 discriminator 8
 3655 00b4 0230E0E3 		mvn	r3, #2
 3656              		.loc 1 2097 5
 3657 00b8 7D0000EA 		b	.L226
 3658              	.L229:
 3659              		.loc 1 2097 5 discriminator 9
 3660 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 3661 00c0 2334A0E1 		lsr	r3, r3, #8
 3662 00c4 8322A0E1 		lsl	r2, r3, #5
 3663 00c8 18301BE5 		ldr	r3, [fp, #-24]
 3664 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3665 00d0 033082E0 		add	r3, r2, r3
 3666 00d4 08300BE5 		str	r3, [fp, #-8]
 3667 00d8 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 103


 3668 00dc 0300A0E1 		mov	r0, r3
 3669 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3670 00e4 0C000BE5 		str	r0, [fp, #-12]
 3671              		.loc 1 2097 5 discriminator 1
 3672 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 3673 00ec FF3803E2 		and	r3, r3, #16711680
 3674 00f0 020853E3 		cmp	r3, #131072
 3675 00f4 0100001A 		bne	.L230
 3676              		.loc 1 2097 5 discriminator 10
 3677 00f8 0830E0E3 		mvn	r3, #8
 3678              		.loc 1 2097 5
 3679 00fc 6C0000EA 		b	.L226
 3680              	.L230:
 3681              		.loc 1 2097 5 discriminator 11
 3682 0100 0C301BE5 		ldr	r3, [fp, #-12]
 3683 0104 233CA0E1 		lsr	r3, r3, #24
 3684 0108 030053E3 		cmp	r3, #3
 3685 010c 0100000A 		beq	.L231
 3686              		.loc 1 2097 5 discriminator 12
 3687 0110 0130E0E3 		mvn	r3, #1
 3688              		.loc 1 2097 5
 3689 0114 660000EA 		b	.L226
 3690              	.L231:
 3691              		.loc 1 2097 5 discriminator 13
 3692 0118 1C301BE5 		ldr	r3, [fp, #-28]
 3693 011c 7F2003E2 		and	r2, r3, #127
 3694 0120 08301BE5 		ldr	r3, [fp, #-8]
 3695 0124 143093E5 		ldr	r3, [r3, #20]
 3696 0128 030052E1 		cmp	r2, r3
 3697 012c 0100003A 		bcc	.L232
 3698              		.loc 1 2097 5 discriminator 14
 3699 0130 0230E0E3 		mvn	r3, #2
 3700              		.loc 1 2097 5
 3701 0134 5E0000EA 		b	.L226
 3702              	.L232:
 3703              		.loc 1 2097 5 discriminator 15
 3704 0138 1C301BE5 		ldr	r3, [fp, #-28]
 3705 013c 7F3003E2 		and	r3, r3, #127
 3706 0140 8322A0E1 		lsl	r2, r3, #5
 3707 0144 08301BE5 		ldr	r3, [fp, #-8]
 3708 0148 0C3093E5 		ldr	r3, [r3, #12]
 3709 014c 033082E0 		add	r3, r2, r3
 3710 0150 08300BE5 		str	r3, [fp, #-8]
 3711 0154 08301BE5 		ldr	r3, [fp, #-8]
 3712 0158 0300A0E1 		mov	r0, r3
 3713 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3714 0160 0C000BE5 		str	r0, [fp, #-12]
 3715              		.loc 1 2097 5 discriminator 1
 3716 0164 0C301BE5 		ldr	r3, [fp, #-12]
 3717 0168 FF3803E2 		and	r3, r3, #16711680
 3718 016c 020853E3 		cmp	r3, #131072
 3719 0170 0100001A 		bne	.L233
 3720              		.loc 1 2097 5 discriminator 16
 3721 0174 0830E0E3 		mvn	r3, #8
 3722              		.loc 1 2097 5
 3723 0178 4D0000EA 		b	.L226
 3724              	.L233:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 104


 3725              		.loc 1 2097 5 discriminator 17
 3726 017c 0C301BE5 		ldr	r3, [fp, #-12]
 3727 0180 233CA0E1 		lsr	r3, r3, #24
 3728 0184 030053E3 		cmp	r3, #3
 3729 0188 0100000A 		beq	.L228
 3730              		.loc 1 2097 5 discriminator 18
 3731 018c 0130E0E3 		mvn	r3, #1
 3732              		.loc 1 2097 5
 3733 0190 470000EA 		b	.L226
 3734              	.L228:
2098:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2099:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2100:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_FRZ);
 3735              		.loc 1 2100 5 is_stmt 1
 3736 0194 08301BE5 		ldr	r3, [fp, #-8]
 3737 0198 083093E5 		ldr	r3, [r3, #8]
 3738 019c 043003E2 		and	r3, r3, #4
 3739 01a0 000053E3 		cmp	r3, #0
 3740 01a4 0100001A 		bne	.L234
 3741              		.loc 1 2100 5 is_stmt 0 discriminator 1
 3742 01a8 0630E0E3 		mvn	r3, #6
 3743              		.loc 1 2100 5
 3744 01ac 400000EA 		b	.L226
 3745              	.L234:
2101:../../Source/Kernel/rme_kernel.c ****     
2102:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2103:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Frz,struct RME_Cap_Struct*,Capobj_Frz);
 3746              		.loc 1 2103 5 is_stmt 1
 3747 01b0 08301BE5 		ldr	r3, [fp, #-8]
 3748 01b4 142093E5 		ldr	r2, [r3, #20]
 3749 01b8 20301BE5 		ldr	r3, [fp, #-32]
 3750 01bc 030052E1 		cmp	r2, r3
 3751 01c0 0100008A 		bhi	.L235
 3752              		.loc 1 2103 5 is_stmt 0 discriminator 1
 3753 01c4 0230E0E3 		mvn	r3, #2
 3754              		.loc 1 2103 5
 3755 01c8 390000EA 		b	.L226
 3756              	.L235:
 3757              		.loc 1 2103 5 discriminator 2
 3758 01cc 20301BE5 		ldr	r3, [fp, #-32]
 3759 01d0 8322A0E1 		lsl	r2, r3, #5
 3760 01d4 08301BE5 		ldr	r3, [fp, #-8]
 3761 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3762 01dc 033082E0 		add	r3, r2, r3
 3763 01e0 10300BE5 		str	r3, [fp, #-16]
2104:../../Source/Kernel/rme_kernel.c ****     
2105:../../Source/Kernel/rme_kernel.c ****     /* Check if anything is there. If nothing there, the Type_Stat must be 0. 
2106:../../Source/Kernel/rme_kernel.c ****      * Need a read acquire barrier here to avoid stale reads below. */
2107:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Frz->Head.Type_Stat));
 3764              		.loc 1 2107 15 is_stmt 1
 3765 01e4 10301BE5 		ldr	r3, [fp, #-16]
 3766 01e8 0300A0E1 		mov	r0, r3
 3767 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3768 01f0 0C000BE5 		str	r0, [fp, #-12]
2108:../../Source/Kernel/rme_kernel.c ****     /* See if there is a cap */
2109:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_TYPE(Type_Stat)==RME_CAP_TYPE_NOP)
 3769              		.loc 1 2109 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 105


 3770 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 3771 01f8 233CA0E1 		lsr	r3, r3, #24
 3772              		.loc 1 2109 7
 3773 01fc 000053E3 		cmp	r3, #0
 3774 0200 0100001A 		bne	.L236
2110:../../Source/Kernel/rme_kernel.c ****     {
2111:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2112:../../Source/Kernel/rme_kernel.c ****         
2113:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 3775              		.loc 1 2113 16
 3776 0204 0030E0E3 		mvn	r3, #0
 3777 0208 290000EA 		b	.L226
 3778              	.L236:
2114:../../Source/Kernel/rme_kernel.c ****     }
2115:../../Source/Kernel/rme_kernel.c ****     else
2116:../../Source/Kernel/rme_kernel.c ****     {
2117:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2118:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2119:../../Source/Kernel/rme_kernel.c ****     }
2120:../../Source/Kernel/rme_kernel.c ****     
2121:../../Source/Kernel/rme_kernel.c ****     /* If this is a root capability, check if the reference count allows freezing */
2122:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_ATTR(Type_Stat)==RME_CAP_ATTR_ROOT)
 3779              		.loc 1 2122 8
 3780 020c 0C301BE5 		ldr	r3, [fp, #-12]
 3781 0210 7330FFE6 		uxth	r3, r3
 3782              		.loc 1 2122 7
 3783 0214 000053E3 		cmp	r3, #0
 3784 0218 0500001A 		bne	.L237
2123:../../Source/Kernel/rme_kernel.c ****     {
2124:../../Source/Kernel/rme_kernel.c ****         if(Capobj_Frz->Head.Root_Ref!=0U)
 3785              		.loc 1 2124 28
 3786 021c 10301BE5 		ldr	r3, [fp, #-16]
 3787 0220 043093E5 		ldr	r3, [r3, #4]
 3788              		.loc 1 2124 11
 3789 0224 000053E3 		cmp	r3, #0
 3790 0228 0100000A 		beq	.L237
2125:../../Source/Kernel/rme_kernel.c ****         {
2126:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2127:../../Source/Kernel/rme_kernel.c ****             
2128:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_REFCNT;
 3791              		.loc 1 2128 20
 3792 022c 0530E0E3 		mvn	r3, #5
 3793 0230 1F0000EA 		b	.L226
 3794              	.L237:
2129:../../Source/Kernel/rme_kernel.c ****         }
2130:../../Source/Kernel/rme_kernel.c ****         else
2131:../../Source/Kernel/rme_kernel.c ****         {
2132:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2133:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2134:../../Source/Kernel/rme_kernel.c ****         }
2135:../../Source/Kernel/rme_kernel.c ****     }
2136:../../Source/Kernel/rme_kernel.c ****     else
2137:../../Source/Kernel/rme_kernel.c ****     {
2138:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2139:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2140:../../Source/Kernel/rme_kernel.c ****     }
2141:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 106


2142:../../Source/Kernel/rme_kernel.c ****     /* The capability is already frozen - why do it again? */
2143:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 3795              		.loc 1 2143 31
 3796 0234 0C301BE5 		ldr	r3, [fp, #-12]
 3797 0238 FF3803E2 		and	r3, r3, #16711680
 3798              		.loc 1 2143 7
 3799 023c 020853E3 		cmp	r3, #131072
 3800 0240 0100001A 		bne	.L238
2144:../../Source/Kernel/rme_kernel.c ****     {
2145:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2146:../../Source/Kernel/rme_kernel.c ****         
2147:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 3801              		.loc 1 2147 16
 3802 0244 0830E0E3 		mvn	r3, #8
 3803 0248 190000EA 		b	.L226
 3804              	.L238:
2148:../../Source/Kernel/rme_kernel.c ****     }
2149:../../Source/Kernel/rme_kernel.c ****     else
2150:../../Source/Kernel/rme_kernel.c ****     {
2151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2152:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2153:../../Source/Kernel/rme_kernel.c ****     }
2154:../../Source/Kernel/rme_kernel.c ****     
2155:../../Source/Kernel/rme_kernel.c ****     /* See if the slot is quiescent */
2156:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_CAP_QUIE(Capobj_Frz->Head.Timestamp)==0U))
 3805              		.loc 1 2156 8
 3806 024c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3807 0250 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3808 0254 002093E5 		ldr	r2, [r3]
 3809 0258 10301BE5 		ldr	r3, [fp, #-16]
 3810 025c 103093E5 		ldr	r3, [r3, #16]
 3811 0260 0310A0E1 		mov	r1, r3
 3812 0264 0200A0E1 		mov	r0, r2
 3813 0268 FEFFFFEB 		bl	_RME_Diff
 3814 026c 0030A0E1 		mov	r3, r0
 3815              		.loc 1 2156 7 discriminator 1
 3816 0270 0A0053E3 		cmp	r3, #10
 3817 0274 0100008A 		bhi	.L239
2157:../../Source/Kernel/rme_kernel.c ****     {
2158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2159:../../Source/Kernel/rme_kernel.c ****         
2160:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_QUIE;
 3818              		.loc 1 2160 16
 3819 0278 0730E0E3 		mvn	r3, #7
 3820 027c 0C0000EA 		b	.L226
 3821              	.L239:
2161:../../Source/Kernel/rme_kernel.c ****     }
2162:../../Source/Kernel/rme_kernel.c ****     else
2163:../../Source/Kernel/rme_kernel.c ****     {
2164:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2165:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2166:../../Source/Kernel/rme_kernel.c ****     }
2167:../../Source/Kernel/rme_kernel.c **** 
2168:../../Source/Kernel/rme_kernel.c ****     /* Update the timestamp */
2169:../../Source/Kernel/rme_kernel.c ****     Capobj_Frz->Head.Timestamp=RME_TIMESTAMP;
 3822              		.loc 1 2169 31
 3823 0280 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 107


 3824 0284 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3825 0288 002093E5 		ldr	r2, [r3]
 3826 028c 10301BE5 		ldr	r3, [fp, #-16]
 3827 0290 102083E5 		str	r2, [r3, #16]
2170:../../Source/Kernel/rme_kernel.c ****     
2171:../../Source/Kernel/rme_kernel.c ****     /* Finally, freeze it. We do not report error here because if we CASFAIL someone must have help
2172:../../Source/Kernel/rme_kernel.c ****     RME_COMP_SWAP(&(Capobj_Frz->Head.Type_Stat),Type_Stat,
 3828              		.loc 1 2172 5
 3829 0294 10001BE5 		ldr	r0, [fp, #-16]
 3830 0298 0C301BE5 		ldr	r3, [fp, #-12]
 3831 029c FF38C3E3 		bic	r3, r3, #16711680
 3832 02a0 023883E3 		orr	r3, r3, #131072
 3833 02a4 0320A0E1 		mov	r2, r3
 3834 02a8 0C101BE5 		ldr	r1, [fp, #-12]
 3835 02ac FEFFFFEB 		bl	_RME_Comp_Swap_Single
2173:../../Source/Kernel/rme_kernel.c ****                   RME_CAP_TYPE_STAT(RME_CAP_TYPE(Type_Stat),
2174:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_STAT_FROZEN,
2175:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_ATTR(Type_Stat)));
2176:../../Source/Kernel/rme_kernel.c **** 
2177:../../Source/Kernel/rme_kernel.c ****     return 0;
 3836              		.loc 1 2177 12
 3837 02b0 0030A0E3 		mov	r3, #0
 3838              	.L226:
2178:../../Source/Kernel/rme_kernel.c **** }
 3839              		.loc 1 2178 1
 3840 02b4 0300A0E1 		mov	r0, r3
 3841 02b8 04D04BE2 		sub	sp, fp, #4
 3842              		.cfi_def_cfa 13, 8
 3843              		@ sp needed
 3844 02bc 0088BDE8 		pop	{fp, pc}
 3845              		.cfi_endproc
 3846              	.LFE26:
 3848              		.section	.text._RME_Cpt_Add,"ax",%progbits
 3849              		.align	2
 3850              		.syntax unified
 3851              		.arm
 3853              	_RME_Cpt_Add:
 3854              	.LFB27:
2179:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Frz *************************************************/
2180:../../Source/Kernel/rme_kernel.c **** 
2181:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Add ******************************************************
2182:../../Source/Kernel/rme_kernel.c **** Description : Delegate capability from one capability table to another.
2183:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2184:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Dst - The capability to the destination 
2185:../../Source/Kernel/rme_kernel.c ****                                       capability table.
2186:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2187:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Dst - The capability slot you want to add to.
2188:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2189:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Src - The capability to the source capability
2190:../../Source/Kernel/rme_kernel.c ****                                       table.
2191:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2192:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Src - The capability in the source capability table
2193:../../Source/Kernel/rme_kernel.c ****                                   to delegate.
2194:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2195:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the capability.
2196:../../Source/Kernel/rme_kernel.c **** Output      : None.
2197:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 108


2198:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2199:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Add(struct RME_Cap_Cpt* Cpt,
2200:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Dst,
2201:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Dst, 
2202:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Src,
2203:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Src,
2204:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag,
2205:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Ext_Flag)
2206:../../Source/Kernel/rme_kernel.c **** {
 3855              		.loc 1 2206 1
 3856              		.cfi_startproc
 3857              		@ args = 12, pretend = 0, frame = 56
 3858              		@ frame_needed = 1, uses_anonymous_args = 0
 3859 0000 00482DE9 		push	{fp, lr}
 3860              		.cfi_def_cfa_offset 8
 3861              		.cfi_offset 11, -8
 3862              		.cfi_offset 14, -4
 3863 0004 04B08DE2 		add	fp, sp, #4
 3864              		.cfi_def_cfa 11, 4
 3865 0008 38D04DE2 		sub	sp, sp, #56
 3866 000c 30000BE5 		str	r0, [fp, #-48]
 3867 0010 34100BE5 		str	r1, [fp, #-52]
 3868 0014 38200BE5 		str	r2, [fp, #-56]
 3869 0018 3C300BE5 		str	r3, [fp, #-60]
2207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Dst;
2208:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Src;
2209:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Dst;
2210:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Src;
2211:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2212:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Src_Type;
2213:../../Source/Kernel/rme_kernel.c ****     
2214:../../Source/Kernel/rme_kernel.c ****     /* These variables are only used for kernel memory checks */
2215:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
2216:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
2217:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Flag;
2218:../../Source/Kernel/rme_kernel.c **** 
2219:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2220:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Dst,RME_CAP_TYPE_CPT,
 3870              		.loc 1 2220 5
 3871 001c 34301BE5 		ldr	r3, [fp, #-52]
 3872 0020 803003E2 		and	r3, r3, #128
 3873 0024 000053E3 		cmp	r3, #0
 3874 0028 1C00001A 		bne	.L241
 3875              		.loc 1 2220 5 is_stmt 0 discriminator 1
 3876 002c 30301BE5 		ldr	r3, [fp, #-48]
 3877 0030 142093E5 		ldr	r2, [r3, #20]
 3878 0034 34301BE5 		ldr	r3, [fp, #-52]
 3879 0038 030052E1 		cmp	r2, r3
 3880 003c 0100008A 		bhi	.L242
 3881              		.loc 1 2220 5 discriminator 3
 3882 0040 0230E0E3 		mvn	r3, #2
 3883              		.loc 1 2220 5
 3884 0044 020200EA 		b	.L243
 3885              	.L242:
 3886              		.loc 1 2220 5 discriminator 4
 3887 0048 34301BE5 		ldr	r3, [fp, #-52]
 3888 004c 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 109


 3889 0050 30301BE5 		ldr	r3, [fp, #-48]
 3890 0054 0C3093E5 		ldr	r3, [r3, #12]
 3891 0058 033082E0 		add	r3, r2, r3
 3892 005c 08300BE5 		str	r3, [fp, #-8]
 3893 0060 08301BE5 		ldr	r3, [fp, #-8]
 3894 0064 0300A0E1 		mov	r0, r3
 3895 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3896 006c 1C000BE5 		str	r0, [fp, #-28]
 3897              		.loc 1 2220 5 discriminator 1
 3898 0070 1C301BE5 		ldr	r3, [fp, #-28]
 3899 0074 FF3803E2 		and	r3, r3, #16711680
 3900 0078 020853E3 		cmp	r3, #131072
 3901 007c 0100001A 		bne	.L244
 3902              		.loc 1 2220 5 discriminator 5
 3903 0080 0830E0E3 		mvn	r3, #8
 3904              		.loc 1 2220 5
 3905 0084 F20100EA 		b	.L243
 3906              	.L244:
 3907              		.loc 1 2220 5 discriminator 6
 3908 0088 1C301BE5 		ldr	r3, [fp, #-28]
 3909 008c 233CA0E1 		lsr	r3, r3, #24
 3910 0090 030053E3 		cmp	r3, #3
 3911 0094 3F00000A 		beq	.L245
 3912              		.loc 1 2220 5 discriminator 7
 3913 0098 0130E0E3 		mvn	r3, #1
 3914              		.loc 1 2220 5
 3915 009c EC0100EA 		b	.L243
 3916              	.L241:
 3917              		.loc 1 2220 5 discriminator 2
 3918 00a0 34301BE5 		ldr	r3, [fp, #-52]
 3919 00a4 2324A0E1 		lsr	r2, r3, #8
 3920 00a8 30301BE5 		ldr	r3, [fp, #-48]
 3921 00ac 143093E5 		ldr	r3, [r3, #20]
 3922 00b0 030052E1 		cmp	r2, r3
 3923 00b4 0100003A 		bcc	.L246
 3924              		.loc 1 2220 5 discriminator 8
 3925 00b8 0230E0E3 		mvn	r3, #2
 3926              		.loc 1 2220 5
 3927 00bc E40100EA 		b	.L243
 3928              	.L246:
 3929              		.loc 1 2220 5 discriminator 9
 3930 00c0 34301BE5 		ldr	r3, [fp, #-52]
 3931 00c4 2334A0E1 		lsr	r3, r3, #8
 3932 00c8 8322A0E1 		lsl	r2, r3, #5
 3933 00cc 30301BE5 		ldr	r3, [fp, #-48]
 3934 00d0 0C3093E5 		ldr	r3, [r3, #12]
 3935 00d4 033082E0 		add	r3, r2, r3
 3936 00d8 08300BE5 		str	r3, [fp, #-8]
 3937 00dc 08301BE5 		ldr	r3, [fp, #-8]
 3938 00e0 0300A0E1 		mov	r0, r3
 3939 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3940 00e8 1C000BE5 		str	r0, [fp, #-28]
 3941              		.loc 1 2220 5 discriminator 1
 3942 00ec 1C301BE5 		ldr	r3, [fp, #-28]
 3943 00f0 FF3803E2 		and	r3, r3, #16711680
 3944 00f4 020853E3 		cmp	r3, #131072
 3945 00f8 0100001A 		bne	.L247
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 110


 3946              		.loc 1 2220 5 discriminator 10
 3947 00fc 0830E0E3 		mvn	r3, #8
 3948              		.loc 1 2220 5
 3949 0100 D30100EA 		b	.L243
 3950              	.L247:
 3951              		.loc 1 2220 5 discriminator 11
 3952 0104 1C301BE5 		ldr	r3, [fp, #-28]
 3953 0108 233CA0E1 		lsr	r3, r3, #24
 3954 010c 030053E3 		cmp	r3, #3
 3955 0110 0100000A 		beq	.L248
 3956              		.loc 1 2220 5 discriminator 12
 3957 0114 0130E0E3 		mvn	r3, #1
 3958              		.loc 1 2220 5
 3959 0118 CD0100EA 		b	.L243
 3960              	.L248:
 3961              		.loc 1 2220 5 discriminator 13
 3962 011c 34301BE5 		ldr	r3, [fp, #-52]
 3963 0120 7F2003E2 		and	r2, r3, #127
 3964 0124 08301BE5 		ldr	r3, [fp, #-8]
 3965 0128 143093E5 		ldr	r3, [r3, #20]
 3966 012c 030052E1 		cmp	r2, r3
 3967 0130 0100003A 		bcc	.L249
 3968              		.loc 1 2220 5 discriminator 14
 3969 0134 0230E0E3 		mvn	r3, #2
 3970              		.loc 1 2220 5
 3971 0138 C50100EA 		b	.L243
 3972              	.L249:
 3973              		.loc 1 2220 5 discriminator 15
 3974 013c 34301BE5 		ldr	r3, [fp, #-52]
 3975 0140 7F3003E2 		and	r3, r3, #127
 3976 0144 8322A0E1 		lsl	r2, r3, #5
 3977 0148 08301BE5 		ldr	r3, [fp, #-8]
 3978 014c 0C3093E5 		ldr	r3, [r3, #12]
 3979 0150 033082E0 		add	r3, r2, r3
 3980 0154 08300BE5 		str	r3, [fp, #-8]
 3981 0158 08301BE5 		ldr	r3, [fp, #-8]
 3982 015c 0300A0E1 		mov	r0, r3
 3983 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3984 0164 1C000BE5 		str	r0, [fp, #-28]
 3985              		.loc 1 2220 5 discriminator 1
 3986 0168 1C301BE5 		ldr	r3, [fp, #-28]
 3987 016c FF3803E2 		and	r3, r3, #16711680
 3988 0170 020853E3 		cmp	r3, #131072
 3989 0174 0100001A 		bne	.L250
 3990              		.loc 1 2220 5 discriminator 16
 3991 0178 0830E0E3 		mvn	r3, #8
 3992              		.loc 1 2220 5
 3993 017c B40100EA 		b	.L243
 3994              	.L250:
 3995              		.loc 1 2220 5 discriminator 17
 3996 0180 1C301BE5 		ldr	r3, [fp, #-28]
 3997 0184 233CA0E1 		lsr	r3, r3, #24
 3998 0188 030053E3 		cmp	r3, #3
 3999 018c 0100000A 		beq	.L245
 4000              		.loc 1 2220 5 discriminator 18
 4001 0190 0130E0E3 		mvn	r3, #1
 4002              		.loc 1 2220 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 111


 4003 0194 AE0100EA 		b	.L243
 4004              	.L245:
2221:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Dst,Type_Stat);
2222:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Src,RME_CAP_TYPE_CPT,
 4005              		.loc 1 2222 5 is_stmt 1
 4006 0198 3C301BE5 		ldr	r3, [fp, #-60]
 4007 019c 803003E2 		and	r3, r3, #128
 4008 01a0 000053E3 		cmp	r3, #0
 4009 01a4 1C00001A 		bne	.L251
 4010              		.loc 1 2222 5 is_stmt 0 discriminator 1
 4011 01a8 30301BE5 		ldr	r3, [fp, #-48]
 4012 01ac 142093E5 		ldr	r2, [r3, #20]
 4013 01b0 3C301BE5 		ldr	r3, [fp, #-60]
 4014 01b4 030052E1 		cmp	r2, r3
 4015 01b8 0100008A 		bhi	.L252
 4016              		.loc 1 2222 5 discriminator 3
 4017 01bc 0230E0E3 		mvn	r3, #2
 4018              		.loc 1 2222 5
 4019 01c0 A30100EA 		b	.L243
 4020              	.L252:
 4021              		.loc 1 2222 5 discriminator 4
 4022 01c4 3C301BE5 		ldr	r3, [fp, #-60]
 4023 01c8 8322A0E1 		lsl	r2, r3, #5
 4024 01cc 30301BE5 		ldr	r3, [fp, #-48]
 4025 01d0 0C3093E5 		ldr	r3, [r3, #12]
 4026 01d4 033082E0 		add	r3, r2, r3
 4027 01d8 0C300BE5 		str	r3, [fp, #-12]
 4028 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 4029 01e0 0300A0E1 		mov	r0, r3
 4030 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4031 01e8 1C000BE5 		str	r0, [fp, #-28]
 4032              		.loc 1 2222 5 discriminator 1
 4033 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 4034 01f0 FF3803E2 		and	r3, r3, #16711680
 4035 01f4 020853E3 		cmp	r3, #131072
 4036 01f8 0100001A 		bne	.L253
 4037              		.loc 1 2222 5 discriminator 5
 4038 01fc 0830E0E3 		mvn	r3, #8
 4039              		.loc 1 2222 5
 4040 0200 930100EA 		b	.L243
 4041              	.L253:
 4042              		.loc 1 2222 5 discriminator 6
 4043 0204 1C301BE5 		ldr	r3, [fp, #-28]
 4044 0208 233CA0E1 		lsr	r3, r3, #24
 4045 020c 030053E3 		cmp	r3, #3
 4046 0210 3F00000A 		beq	.L254
 4047              		.loc 1 2222 5 discriminator 7
 4048 0214 0130E0E3 		mvn	r3, #1
 4049              		.loc 1 2222 5
 4050 0218 8D0100EA 		b	.L243
 4051              	.L251:
 4052              		.loc 1 2222 5 discriminator 2
 4053 021c 3C301BE5 		ldr	r3, [fp, #-60]
 4054 0220 2324A0E1 		lsr	r2, r3, #8
 4055 0224 30301BE5 		ldr	r3, [fp, #-48]
 4056 0228 143093E5 		ldr	r3, [r3, #20]
 4057 022c 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 112


 4058 0230 0100003A 		bcc	.L255
 4059              		.loc 1 2222 5 discriminator 8
 4060 0234 0230E0E3 		mvn	r3, #2
 4061              		.loc 1 2222 5
 4062 0238 850100EA 		b	.L243
 4063              	.L255:
 4064              		.loc 1 2222 5 discriminator 9
 4065 023c 3C301BE5 		ldr	r3, [fp, #-60]
 4066 0240 2334A0E1 		lsr	r3, r3, #8
 4067 0244 8322A0E1 		lsl	r2, r3, #5
 4068 0248 30301BE5 		ldr	r3, [fp, #-48]
 4069 024c 0C3093E5 		ldr	r3, [r3, #12]
 4070 0250 033082E0 		add	r3, r2, r3
 4071 0254 0C300BE5 		str	r3, [fp, #-12]
 4072 0258 0C301BE5 		ldr	r3, [fp, #-12]
 4073 025c 0300A0E1 		mov	r0, r3
 4074 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4075 0264 1C000BE5 		str	r0, [fp, #-28]
 4076              		.loc 1 2222 5 discriminator 1
 4077 0268 1C301BE5 		ldr	r3, [fp, #-28]
 4078 026c FF3803E2 		and	r3, r3, #16711680
 4079 0270 020853E3 		cmp	r3, #131072
 4080 0274 0100001A 		bne	.L256
 4081              		.loc 1 2222 5 discriminator 10
 4082 0278 0830E0E3 		mvn	r3, #8
 4083              		.loc 1 2222 5
 4084 027c 740100EA 		b	.L243
 4085              	.L256:
 4086              		.loc 1 2222 5 discriminator 11
 4087 0280 1C301BE5 		ldr	r3, [fp, #-28]
 4088 0284 233CA0E1 		lsr	r3, r3, #24
 4089 0288 030053E3 		cmp	r3, #3
 4090 028c 0100000A 		beq	.L257
 4091              		.loc 1 2222 5 discriminator 12
 4092 0290 0130E0E3 		mvn	r3, #1
 4093              		.loc 1 2222 5
 4094 0294 6E0100EA 		b	.L243
 4095              	.L257:
 4096              		.loc 1 2222 5 discriminator 13
 4097 0298 3C301BE5 		ldr	r3, [fp, #-60]
 4098 029c 7F2003E2 		and	r2, r3, #127
 4099 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 4100 02a4 143093E5 		ldr	r3, [r3, #20]
 4101 02a8 030052E1 		cmp	r2, r3
 4102 02ac 0100003A 		bcc	.L258
 4103              		.loc 1 2222 5 discriminator 14
 4104 02b0 0230E0E3 		mvn	r3, #2
 4105              		.loc 1 2222 5
 4106 02b4 660100EA 		b	.L243
 4107              	.L258:
 4108              		.loc 1 2222 5 discriminator 15
 4109 02b8 3C301BE5 		ldr	r3, [fp, #-60]
 4110 02bc 7F3003E2 		and	r3, r3, #127
 4111 02c0 8322A0E1 		lsl	r2, r3, #5
 4112 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 4113 02c8 0C3093E5 		ldr	r3, [r3, #12]
 4114 02cc 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 113


 4115 02d0 0C300BE5 		str	r3, [fp, #-12]
 4116 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 4117 02d8 0300A0E1 		mov	r0, r3
 4118 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4119 02e0 1C000BE5 		str	r0, [fp, #-28]
 4120              		.loc 1 2222 5 discriminator 1
 4121 02e4 1C301BE5 		ldr	r3, [fp, #-28]
 4122 02e8 FF3803E2 		and	r3, r3, #16711680
 4123 02ec 020853E3 		cmp	r3, #131072
 4124 02f0 0100001A 		bne	.L259
 4125              		.loc 1 2222 5 discriminator 16
 4126 02f4 0830E0E3 		mvn	r3, #8
 4127              		.loc 1 2222 5
 4128 02f8 550100EA 		b	.L243
 4129              	.L259:
 4130              		.loc 1 2222 5 discriminator 17
 4131 02fc 1C301BE5 		ldr	r3, [fp, #-28]
 4132 0300 233CA0E1 		lsr	r3, r3, #24
 4133 0304 030053E3 		cmp	r3, #3
 4134 0308 0100000A 		beq	.L254
 4135              		.loc 1 2222 5 discriminator 18
 4136 030c 0130E0E3 		mvn	r3, #1
 4137              		.loc 1 2222 5
 4138 0310 4F0100EA 		b	.L243
 4139              	.L254:
2223:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Src,Type_Stat);
2224:../../Source/Kernel/rme_kernel.c ****     /* Check if both captbls are not frozen and allows such operations */
2225:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Dst,RME_CPT_FLAG_ADD_DST);
 4140              		.loc 1 2225 5 is_stmt 1
 4141 0314 08301BE5 		ldr	r3, [fp, #-8]
 4142 0318 083093E5 		ldr	r3, [r3, #8]
 4143 031c 103003E2 		and	r3, r3, #16
 4144 0320 000053E3 		cmp	r3, #0
 4145 0324 0100001A 		bne	.L260
 4146              		.loc 1 2225 5 is_stmt 0 discriminator 1
 4147 0328 0630E0E3 		mvn	r3, #6
 4148              		.loc 1 2225 5
 4149 032c 480100EA 		b	.L243
 4150              	.L260:
2226:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Src,RME_CPT_FLAG_ADD_SRC);
 4151              		.loc 1 2226 5 is_stmt 1
 4152 0330 0C301BE5 		ldr	r3, [fp, #-12]
 4153 0334 083093E5 		ldr	r3, [r3, #8]
 4154 0338 083003E2 		and	r3, r3, #8
 4155 033c 000053E3 		cmp	r3, #0
 4156 0340 0100001A 		bne	.L261
 4157              		.loc 1 2226 5 is_stmt 0 discriminator 1
 4158 0344 0630E0E3 		mvn	r3, #6
 4159              		.loc 1 2226 5
 4160 0348 410100EA 		b	.L243
 4161              	.L261:
2227:../../Source/Kernel/rme_kernel.c ****     
2228:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slots */
2229:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Dst,Cap_Dst,struct RME_Cap_Struct*,Capobj_Dst);
 4162              		.loc 1 2229 5 is_stmt 1
 4163 034c 08301BE5 		ldr	r3, [fp, #-8]
 4164 0350 142093E5 		ldr	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 114


 4165 0354 38301BE5 		ldr	r3, [fp, #-56]
 4166 0358 030052E1 		cmp	r2, r3
 4167 035c 0100008A 		bhi	.L262
 4168              		.loc 1 2229 5 is_stmt 0 discriminator 1
 4169 0360 0230E0E3 		mvn	r3, #2
 4170              		.loc 1 2229 5
 4171 0364 3A0100EA 		b	.L243
 4172              	.L262:
 4173              		.loc 1 2229 5 discriminator 2
 4174 0368 38301BE5 		ldr	r3, [fp, #-56]
 4175 036c 8322A0E1 		lsl	r2, r3, #5
 4176 0370 08301BE5 		ldr	r3, [fp, #-8]
 4177 0374 0C3093E5 		ldr	r3, [r3, #12]
 4178 0378 033082E0 		add	r3, r2, r3
 4179 037c 20300BE5 		str	r3, [fp, #-32]
2230:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Src,Cap_Src,struct RME_Cap_Struct*,Capobj_Src);
 4180              		.loc 1 2230 5 is_stmt 1
 4181 0380 0C301BE5 		ldr	r3, [fp, #-12]
 4182 0384 142093E5 		ldr	r2, [r3, #20]
 4183 0388 04309BE5 		ldr	r3, [fp, #4]
 4184 038c 030052E1 		cmp	r2, r3
 4185 0390 0100008A 		bhi	.L263
 4186              		.loc 1 2230 5 is_stmt 0 discriminator 1
 4187 0394 0230E0E3 		mvn	r3, #2
 4188              		.loc 1 2230 5
 4189 0398 2D0100EA 		b	.L243
 4190              	.L263:
 4191              		.loc 1 2230 5 discriminator 2
 4192 039c 04309BE5 		ldr	r3, [fp, #4]
 4193 03a0 8322A0E1 		lsl	r2, r3, #5
 4194 03a4 0C301BE5 		ldr	r3, [fp, #-12]
 4195 03a8 0C3093E5 		ldr	r3, [r3, #12]
 4196 03ac 033082E0 		add	r3, r2, r3
 4197 03b0 24300BE5 		str	r3, [fp, #-36]
2231:../../Source/Kernel/rme_kernel.c ****     
2232:../../Source/Kernel/rme_kernel.c ****     /* Atomic read - Read barrier to avoid premature checking of the rest */
2233:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Src->Head.Type_Stat));
 4198              		.loc 1 2233 15 is_stmt 1
 4199 03b4 24301BE5 		ldr	r3, [fp, #-36]
 4200 03b8 0300A0E1 		mov	r0, r3
 4201 03bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4202 03c0 1C000BE5 		str	r0, [fp, #-28]
2234:../../Source/Kernel/rme_kernel.c ****     /* Is the source cap frozen? */
2235:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 4203              		.loc 1 2235 31
 4204 03c4 1C301BE5 		ldr	r3, [fp, #-28]
 4205 03c8 FF3803E2 		and	r3, r3, #16711680
 4206              		.loc 1 2235 7
 4207 03cc 020853E3 		cmp	r3, #131072
 4208 03d0 0100001A 		bne	.L264
2236:../../Source/Kernel/rme_kernel.c ****     {
2237:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2238:../../Source/Kernel/rme_kernel.c ****         
2239:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 4209              		.loc 1 2239 16
 4210 03d4 0830E0E3 		mvn	r3, #8
 4211 03d8 1D0100EA 		b	.L243
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 115


 4212              	.L264:
2240:../../Source/Kernel/rme_kernel.c ****     }
2241:../../Source/Kernel/rme_kernel.c ****     else
2242:../../Source/Kernel/rme_kernel.c ****     {
2243:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2244:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2245:../../Source/Kernel/rme_kernel.c ****     }
2246:../../Source/Kernel/rme_kernel.c ****     
2247:../../Source/Kernel/rme_kernel.c ****     /* Does the source cap exist at all? */
2248:../../Source/Kernel/rme_kernel.c ****     if(Type_Stat==0U)
 4213              		.loc 1 2248 7
 4214 03dc 1C301BE5 		ldr	r3, [fp, #-28]
 4215 03e0 000053E3 		cmp	r3, #0
 4216 03e4 0100001A 		bne	.L265
2249:../../Source/Kernel/rme_kernel.c ****     {
2250:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2251:../../Source/Kernel/rme_kernel.c ****         
2252:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 4217              		.loc 1 2252 16
 4218 03e8 0030E0E3 		mvn	r3, #0
 4219 03ec 180100EA 		b	.L243
 4220              	.L265:
2253:../../Source/Kernel/rme_kernel.c ****     }
2254:../../Source/Kernel/rme_kernel.c ****     else
2255:../../Source/Kernel/rme_kernel.c ****     {
2256:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2257:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2258:../../Source/Kernel/rme_kernel.c ****     }
2259:../../Source/Kernel/rme_kernel.c **** 
2260:../../Source/Kernel/rme_kernel.c ****     /* Dewarn some compilers that complain about uninitialized variables */
2261:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=0U;
 4221              		.loc 1 2261 14
 4222 03f0 0030A0E3 		mov	r3, #0
 4223 03f4 10300BE5 		str	r3, [fp, #-16]
2262:../../Source/Kernel/rme_kernel.c ****     Kom_End=0U;
 4224              		.loc 1 2262 12
 4225 03f8 0030A0E3 		mov	r3, #0
 4226 03fc 14300BE5 		str	r3, [fp, #-20]
2263:../../Source/Kernel/rme_kernel.c ****     Kom_Flag=0U;
 4227              		.loc 1 2263 13
 4228 0400 0030A0E3 		mov	r3, #0
 4229 0404 18300BE5 		str	r3, [fp, #-24]
2264:../../Source/Kernel/rme_kernel.c ****     
2265:../../Source/Kernel/rme_kernel.c ****     /* Is there a flag conflict? - For page tables, we have different checking mechanisms */
2266:../../Source/Kernel/rme_kernel.c ****     Src_Type=RME_CAP_TYPE(Type_Stat);
 4230              		.loc 1 2266 13
 4231 0408 1C301BE5 		ldr	r3, [fp, #-28]
 4232 040c 233CA0E1 		lsr	r3, r3, #24
 4233 0410 28300BE5 		str	r3, [fp, #-40]
2267:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_PGT)
 4234              		.loc 1 2267 7
 4235 0414 28301BE5 		ldr	r3, [fp, #-40]
 4236 0418 040053E3 		cmp	r3, #4
 4237 041c 2D00001A 		bne	.L266
2268:../../Source/Kernel/rme_kernel.c ****     {
2269:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2270:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 116


2271:../../Source/Kernel/rme_kernel.c ****         /* Check the delegation range */
2272:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)>RME_PGT_FLAG_HIGH(Capobj_Src->Head.Flag))
 4238              		.loc 1 2272 12
 4239 0420 08309BE5 		ldr	r3, [fp, #8]
 4240 0424 232AA0E1 		lsr	r2, r3, #20
 4241              		.loc 1 2272 36
 4242 0428 24301BE5 		ldr	r3, [fp, #-36]
 4243 042c 083093E5 		ldr	r3, [r3, #8]
 4244 0430 233AA0E1 		lsr	r3, r3, #20
 4245              		.loc 1 2272 11
 4246 0434 030052E1 		cmp	r2, r3
 4247 0438 0100009A 		bls	.L267
2273:../../Source/Kernel/rme_kernel.c ****         {
2274:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2275:../../Source/Kernel/rme_kernel.c ****         
2276:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4248              		.loc 1 2276 20
 4249 043c 0630E0E3 		mvn	r3, #6
 4250 0440 030100EA 		b	.L243
 4251              	.L267:
2277:../../Source/Kernel/rme_kernel.c ****         }
2278:../../Source/Kernel/rme_kernel.c ****         else
2279:../../Source/Kernel/rme_kernel.c ****         {
2280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2281:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2282:../../Source/Kernel/rme_kernel.c ****         }
2283:../../Source/Kernel/rme_kernel.c ****         
2284:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_LOW(Flag)<RME_PGT_FLAG_LOW(Capobj_Src->Head.Flag))
 4252              		.loc 1 2284 12
 4253 0444 08309BE5 		ldr	r3, [fp, #8]
 4254 0448 2334A0E1 		lsr	r3, r3, #8
 4255 044c 5320EBE7 		ubfx	r2, r3, #0, #12
 4256              		.loc 1 2284 35
 4257 0450 24301BE5 		ldr	r3, [fp, #-36]
 4258 0454 083093E5 		ldr	r3, [r3, #8]
 4259 0458 2334A0E1 		lsr	r3, r3, #8
 4260 045c 5330EBE7 		ubfx	r3, r3, #0, #12
 4261              		.loc 1 2284 11
 4262 0460 030052E1 		cmp	r2, r3
 4263 0464 0100002A 		bcs	.L268
2285:../../Source/Kernel/rme_kernel.c ****         {
2286:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2287:../../Source/Kernel/rme_kernel.c ****             
2288:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4264              		.loc 1 2288 20
 4265 0468 0630E0E3 		mvn	r3, #6
 4266 046c F80000EA 		b	.L243
 4267              	.L268:
2289:../../Source/Kernel/rme_kernel.c ****         }
2290:../../Source/Kernel/rme_kernel.c ****         else
2291:../../Source/Kernel/rme_kernel.c ****         {
2292:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2293:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2294:../../Source/Kernel/rme_kernel.c ****         }
2295:../../Source/Kernel/rme_kernel.c ****         
2296:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)<RME_PGT_FLAG_LOW(Flag))
 4268              		.loc 1 2296 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 117


 4269 0470 08309BE5 		ldr	r3, [fp, #8]
 4270 0474 232AA0E1 		lsr	r2, r3, #20
 4271              		.loc 1 2296 36
 4272 0478 08309BE5 		ldr	r3, [fp, #8]
 4273 047c 2334A0E1 		lsr	r3, r3, #8
 4274 0480 5330EBE7 		ubfx	r3, r3, #0, #12
 4275              		.loc 1 2296 11
 4276 0484 030052E1 		cmp	r2, r3
 4277 0488 0100002A 		bcs	.L269
2297:../../Source/Kernel/rme_kernel.c ****         {
2298:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2299:../../Source/Kernel/rme_kernel.c ****             
2300:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4278              		.loc 1 2300 20
 4279 048c 0630E0E3 		mvn	r3, #6
 4280 0490 EF0000EA 		b	.L243
 4281              	.L269:
2301:../../Source/Kernel/rme_kernel.c ****         }
2302:../../Source/Kernel/rme_kernel.c ****         else
2303:../../Source/Kernel/rme_kernel.c ****         {
2304:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2305:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2306:../../Source/Kernel/rme_kernel.c ****         }
2307:../../Source/Kernel/rme_kernel.c ****         
2308:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2309:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_FLAG(Flag)==0U)
 4282              		.loc 1 2309 12
 4283 0494 08309BE5 		ldr	r3, [fp, #8]
 4284 0498 7330EFE6 		uxtb	r3, r3
 4285              		.loc 1 2309 11
 4286 049c 000053E3 		cmp	r3, #0
 4287 04a0 0100001A 		bne	.L270
2310:../../Source/Kernel/rme_kernel.c ****         {
2311:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2312:../../Source/Kernel/rme_kernel.c ****             
2313:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4288              		.loc 1 2313 20
 4289 04a4 0630E0E3 		mvn	r3, #6
 4290 04a8 E90000EA 		b	.L243
 4291              	.L270:
2314:../../Source/Kernel/rme_kernel.c ****         }
2315:../../Source/Kernel/rme_kernel.c ****         else
2316:../../Source/Kernel/rme_kernel.c ****         {
2317:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2318:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2319:../../Source/Kernel/rme_kernel.c ****         }
2320:../../Source/Kernel/rme_kernel.c ****         
2321:../../Source/Kernel/rme_kernel.c ****         if((RME_PGT_FLAG_FLAG(Flag)&(~RME_PGT_FLAG_FLAG(Capobj_Src->Head.Flag)))!=0U)
 4292              		.loc 1 2321 39
 4293 04ac 24301BE5 		ldr	r3, [fp, #-36]
 4294 04b0 083093E5 		ldr	r3, [r3, #8]
 4295 04b4 7330EFE6 		uxtb	r3, r3
 4296              		.loc 1 2321 38
 4297 04b8 0320E0E1 		mvn	r2, r3
 4298              		.loc 1 2321 36
 4299 04bc 08309BE5 		ldr	r3, [fp, #8]
 4300 04c0 023003E0 		and	r3, r3, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 118


 4301 04c4 7330EFE6 		uxtb	r3, r3
 4302              		.loc 1 2321 11
 4303 04c8 000053E3 		cmp	r3, #0
 4304 04cc 7700000A 		beq	.L271
2322:../../Source/Kernel/rme_kernel.c ****         {
2323:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2324:../../Source/Kernel/rme_kernel.c ****             
2325:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4305              		.loc 1 2325 20
 4306 04d0 0630E0E3 		mvn	r3, #6
 4307 04d4 DE0000EA 		b	.L243
 4308              	.L266:
2326:../../Source/Kernel/rme_kernel.c ****         }
2327:../../Source/Kernel/rme_kernel.c ****         else
2328:../../Source/Kernel/rme_kernel.c ****         {
2329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2330:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2331:../../Source/Kernel/rme_kernel.c ****         }
2332:../../Source/Kernel/rme_kernel.c ****     }
2333:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KFN)
 4309              		.loc 1 2333 12
 4310 04d8 28301BE5 		ldr	r3, [fp, #-40]
 4311 04dc 010053E3 		cmp	r3, #1
 4312 04e0 1900001A 		bne	.L272
2334:../../Source/Kernel/rme_kernel.c ****     {
2335:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2336:../../Source/Kernel/rme_kernel.c ****         
2337:../../Source/Kernel/rme_kernel.c ****         /* Kernel funcrions only have ranges, no flags - check the delegation range */
2338:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)>RME_KFN_FLAG_HIGH(Capobj_Src->Head.Flag))
 4313              		.loc 1 2338 12
 4314 04e4 08309BE5 		ldr	r3, [fp, #8]
 4315 04e8 2328A0E1 		lsr	r2, r3, #16
 4316              		.loc 1 2338 36
 4317 04ec 24301BE5 		ldr	r3, [fp, #-36]
 4318 04f0 083093E5 		ldr	r3, [r3, #8]
 4319 04f4 2338A0E1 		lsr	r3, r3, #16
 4320              		.loc 1 2338 11
 4321 04f8 030052E1 		cmp	r2, r3
 4322 04fc 0100009A 		bls	.L273
2339:../../Source/Kernel/rme_kernel.c ****         {
2340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2341:../../Source/Kernel/rme_kernel.c ****             
2342:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4323              		.loc 1 2342 20
 4324 0500 0630E0E3 		mvn	r3, #6
 4325 0504 D20000EA 		b	.L243
 4326              	.L273:
2343:../../Source/Kernel/rme_kernel.c ****         }
2344:../../Source/Kernel/rme_kernel.c ****         else
2345:../../Source/Kernel/rme_kernel.c ****         {
2346:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2347:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2348:../../Source/Kernel/rme_kernel.c ****         }
2349:../../Source/Kernel/rme_kernel.c ****         
2350:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_LOW(Flag)<RME_KFN_FLAG_LOW(Capobj_Src->Head.Flag))
 4327              		.loc 1 2350 12
 4328 0508 08309BE5 		ldr	r3, [fp, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 119


 4329 050c 7320FFE6 		uxth	r2, r3
 4330              		.loc 1 2350 35
 4331 0510 24301BE5 		ldr	r3, [fp, #-36]
 4332 0514 083093E5 		ldr	r3, [r3, #8]
 4333 0518 7330FFE6 		uxth	r3, r3
 4334              		.loc 1 2350 11
 4335 051c 030052E1 		cmp	r2, r3
 4336 0520 0100002A 		bcs	.L274
2351:../../Source/Kernel/rme_kernel.c ****         {
2352:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2353:../../Source/Kernel/rme_kernel.c ****             
2354:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4337              		.loc 1 2354 20
 4338 0524 0630E0E3 		mvn	r3, #6
 4339 0528 C90000EA 		b	.L243
 4340              	.L274:
2355:../../Source/Kernel/rme_kernel.c ****         }
2356:../../Source/Kernel/rme_kernel.c ****         else
2357:../../Source/Kernel/rme_kernel.c ****         {
2358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2359:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2360:../../Source/Kernel/rme_kernel.c ****         }
2361:../../Source/Kernel/rme_kernel.c ****         
2362:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)<RME_KFN_FLAG_LOW(Flag))
 4341              		.loc 1 2362 12
 4342 052c 08309BE5 		ldr	r3, [fp, #8]
 4343 0530 2328A0E1 		lsr	r2, r3, #16
 4344              		.loc 1 2362 36
 4345 0534 08309BE5 		ldr	r3, [fp, #8]
 4346 0538 7330FFE6 		uxth	r3, r3
 4347              		.loc 1 2362 11
 4348 053c 030052E1 		cmp	r2, r3
 4349 0540 5A00002A 		bcs	.L271
2363:../../Source/Kernel/rme_kernel.c ****         {
2364:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2365:../../Source/Kernel/rme_kernel.c ****             
2366:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4350              		.loc 1 2366 20
 4351 0544 0630E0E3 		mvn	r3, #6
 4352 0548 C10000EA 		b	.L243
 4353              	.L272:
2367:../../Source/Kernel/rme_kernel.c ****         }
2368:../../Source/Kernel/rme_kernel.c ****         else
2369:../../Source/Kernel/rme_kernel.c ****         {
2370:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2371:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2372:../../Source/Kernel/rme_kernel.c ****         }
2373:../../Source/Kernel/rme_kernel.c ****     }
2374:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KOM)
 4354              		.loc 1 2374 12
 4355 054c 28301BE5 		ldr	r3, [fp, #-40]
 4356 0550 020053E3 		cmp	r3, #2
 4357 0554 4700001A 		bne	.L275
2375:../../Source/Kernel/rme_kernel.c ****     {
2376:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2377:../../Source/Kernel/rme_kernel.c ****         
2378:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End here is exclusive */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 120


2379:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_KOM_FLAG_LOW(Flag,Ext_Flag);
 4358              		.loc 1 2379 18
 4359 0558 08309BE5 		ldr	r3, [fp, #8]
 4360 055c 0338A0E1 		lsl	r3, r3, #16
 4361 0560 10300BE5 		str	r3, [fp, #-16]
2380:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_KOM_FLAG_HIGH(Flag,Ext_Flag);
 4362              		.loc 1 2380 17
 4363 0564 08309BE5 		ldr	r3, [fp, #8]
 4364 0568 2338A0E1 		lsr	r3, r3, #16
 4365 056c 0338A0E1 		lsl	r3, r3, #16
 4366 0570 0C209BE5 		ldr	r2, [fp, #12]
 4367 0574 2228A0E1 		lsr	r2, r2, #16
 4368 0578 3F20C2E3 		bic	r2, r2, #63
 4369              		.loc 1 2380 16
 4370 057c 023083E1 		orr	r3, r3, r2
 4371 0580 14300BE5 		str	r3, [fp, #-20]
2381:../../Source/Kernel/rme_kernel.c ****         Kom_Flag=RME_KOM_FLAG_KOM(Ext_Flag);
 4372              		.loc 1 2381 17
 4373 0584 0030A0E3 		mov	r3, #0
 4374 0588 18300BE5 		str	r3, [fp, #-24]
2382:../../Source/Kernel/rme_kernel.c ****         
2383:../../Source/Kernel/rme_kernel.c ****         /* Round start and end to the slot boundary, if we are using slots bigger than 64 bytes */
2384:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
2385:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_ROUND_DOWN(Kom_End,RME_KOM_SLOT_ORDER);
2386:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_ROUND_UP(Kom_Begin,RME_KOM_SLOT_ORDER);
2387:../../Source/Kernel/rme_kernel.c **** #endif
2388:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<=Kom_Begin)
 4375              		.loc 1 2388 11
 4376 058c 14201BE5 		ldr	r2, [fp, #-20]
 4377 0590 10301BE5 		ldr	r3, [fp, #-16]
 4378 0594 030052E1 		cmp	r2, r3
 4379 0598 0100008A 		bhi	.L276
2389:../../Source/Kernel/rme_kernel.c ****         {
2390:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2391:../../Source/Kernel/rme_kernel.c ****             
2392:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4380              		.loc 1 2392 20
 4381 059c 0630E0E3 		mvn	r3, #6
 4382 05a0 AB0000EA 		b	.L243
 4383              	.L276:
2393:../../Source/Kernel/rme_kernel.c ****         }
2394:../../Source/Kernel/rme_kernel.c ****         else
2395:../../Source/Kernel/rme_kernel.c ****         {
2396:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2397:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2398:../../Source/Kernel/rme_kernel.c ****         }
2399:../../Source/Kernel/rme_kernel.c **** 
2400:../../Source/Kernel/rme_kernel.c ****         /* Convert relative addresses to absolute addresses and check for overflow */
2401:../../Source/Kernel/rme_kernel.c ****         Kom_Begin+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4384              		.loc 1 2401 62
 4385 05a4 24301BE5 		ldr	r3, [fp, #-36]
 4386 05a8 143093E5 		ldr	r3, [r3, #20]
 4387              		.loc 1 2401 18
 4388 05ac 10201BE5 		ldr	r2, [fp, #-16]
 4389 05b0 033082E0 		add	r3, r2, r3
 4390 05b4 10300BE5 		str	r3, [fp, #-16]
2402:../../Source/Kernel/rme_kernel.c ****         if(Kom_Begin<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 121


 4391              		.loc 1 2402 64
 4392 05b8 24301BE5 		ldr	r3, [fp, #-36]
 4393 05bc 143093E5 		ldr	r3, [r3, #20]
 4394              		.loc 1 2402 11
 4395 05c0 10201BE5 		ldr	r2, [fp, #-16]
 4396 05c4 030052E1 		cmp	r2, r3
 4397 05c8 0100002A 		bcs	.L277
2403:../../Source/Kernel/rme_kernel.c ****         {
2404:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2405:../../Source/Kernel/rme_kernel.c ****             
2406:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4398              		.loc 1 2406 20
 4399 05cc 0630E0E3 		mvn	r3, #6
 4400 05d0 9F0000EA 		b	.L243
 4401              	.L277:
2407:../../Source/Kernel/rme_kernel.c ****         }
2408:../../Source/Kernel/rme_kernel.c ****         else
2409:../../Source/Kernel/rme_kernel.c ****         {
2410:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2411:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2412:../../Source/Kernel/rme_kernel.c ****         }
2413:../../Source/Kernel/rme_kernel.c ****         
2414:../../Source/Kernel/rme_kernel.c ****         Kom_End+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4402              		.loc 1 2414 60
 4403 05d4 24301BE5 		ldr	r3, [fp, #-36]
 4404 05d8 143093E5 		ldr	r3, [r3, #20]
 4405              		.loc 1 2414 16
 4406 05dc 14201BE5 		ldr	r2, [fp, #-20]
 4407 05e0 033082E0 		add	r3, r2, r3
 4408 05e4 14300BE5 		str	r3, [fp, #-20]
2415:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4409              		.loc 1 2415 62
 4410 05e8 24301BE5 		ldr	r3, [fp, #-36]
 4411 05ec 143093E5 		ldr	r3, [r3, #20]
 4412              		.loc 1 2415 11
 4413 05f0 14201BE5 		ldr	r2, [fp, #-20]
 4414 05f4 030052E1 		cmp	r2, r3
 4415 05f8 0100002A 		bcs	.L278
2416:../../Source/Kernel/rme_kernel.c ****         {
2417:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2418:../../Source/Kernel/rme_kernel.c ****             
2419:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4416              		.loc 1 2419 20
 4417 05fc 0630E0E3 		mvn	r3, #6
 4418 0600 930000EA 		b	.L243
 4419              	.L278:
2420:../../Source/Kernel/rme_kernel.c ****         }
2421:../../Source/Kernel/rme_kernel.c ****         else
2422:../../Source/Kernel/rme_kernel.c ****         {
2423:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2424:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2425:../../Source/Kernel/rme_kernel.c ****         }
2426:../../Source/Kernel/rme_kernel.c **** 
2427:../../Source/Kernel/rme_kernel.c ****         /* Check the ranges of kernel memory */
2428:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin>Kom_Begin)
 4420              		.loc 1 2428 54
 4421 0604 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 122


 4422 0608 143093E5 		ldr	r3, [r3, #20]
 4423              		.loc 1 2428 11
 4424 060c 10201BE5 		ldr	r2, [fp, #-16]
 4425 0610 030052E1 		cmp	r2, r3
 4426 0614 0100002A 		bcs	.L279
2429:../../Source/Kernel/rme_kernel.c ****         {
2430:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2431:../../Source/Kernel/rme_kernel.c ****             
2432:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4427              		.loc 1 2432 20
 4428 0618 0630E0E3 		mvn	r3, #6
 4429 061c 8C0000EA 		b	.L243
 4430              	.L279:
2433:../../Source/Kernel/rme_kernel.c ****         }
2434:../../Source/Kernel/rme_kernel.c ****         else
2435:../../Source/Kernel/rme_kernel.c ****         {
2436:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2437:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2438:../../Source/Kernel/rme_kernel.c ****         }
2439:../../Source/Kernel/rme_kernel.c ****         
2440:../../Source/Kernel/rme_kernel.c ****         /* Internal encoding of 'end' is inclusive */
2441:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->End<(Kom_End-1U))
 4431              		.loc 1 2441 54
 4432 0620 24301BE5 		ldr	r3, [fp, #-36]
 4433 0624 182093E5 		ldr	r2, [r3, #24]
 4434              		.loc 1 2441 68
 4435 0628 14301BE5 		ldr	r3, [fp, #-20]
 4436 062c 013043E2 		sub	r3, r3, #1
 4437              		.loc 1 2441 11
 4438 0630 030052E1 		cmp	r2, r3
 4439 0634 0100002A 		bcs	.L280
2442:../../Source/Kernel/rme_kernel.c ****         {
2443:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2444:../../Source/Kernel/rme_kernel.c ****             
2445:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4440              		.loc 1 2445 20
 4441 0638 0630E0E3 		mvn	r3, #6
 4442 063c 840000EA 		b	.L243
 4443              	.L280:
2446:../../Source/Kernel/rme_kernel.c ****         }
2447:../../Source/Kernel/rme_kernel.c ****         else
2448:../../Source/Kernel/rme_kernel.c ****         {
2449:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2450:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2451:../../Source/Kernel/rme_kernel.c ****         }
2452:../../Source/Kernel/rme_kernel.c ****         
2453:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2454:../../Source/Kernel/rme_kernel.c ****         if(Kom_Flag==0U)
 4444              		.loc 1 2454 11
 4445 0640 18301BE5 		ldr	r3, [fp, #-24]
 4446 0644 000053E3 		cmp	r3, #0
 4447 0648 0100001A 		bne	.L281
2455:../../Source/Kernel/rme_kernel.c ****         {
2456:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2457:../../Source/Kernel/rme_kernel.c ****             
2458:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4448              		.loc 1 2458 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 123


 4449 064c 0630E0E3 		mvn	r3, #6
 4450 0650 7F0000EA 		b	.L243
 4451              	.L281:
2459:../../Source/Kernel/rme_kernel.c ****         }
2460:../../Source/Kernel/rme_kernel.c ****         else
2461:../../Source/Kernel/rme_kernel.c ****         {
2462:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2463:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2464:../../Source/Kernel/rme_kernel.c ****         }
2465:../../Source/Kernel/rme_kernel.c ****         
2466:../../Source/Kernel/rme_kernel.c ****         if((Kom_Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4452              		.loc 1 2466 41
 4453 0654 24301BE5 		ldr	r3, [fp, #-36]
 4454 0658 083093E5 		ldr	r3, [r3, #8]
 4455              		.loc 1 2466 23
 4456 065c 0320E0E1 		mvn	r2, r3
 4457              		.loc 1 2466 21
 4458 0660 18301BE5 		ldr	r3, [fp, #-24]
 4459 0664 023003E0 		and	r3, r3, r2
 4460              		.loc 1 2466 11
 4461 0668 000053E3 		cmp	r3, #0
 4462 066c 0F00000A 		beq	.L271
2467:../../Source/Kernel/rme_kernel.c ****         {
2468:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2469:../../Source/Kernel/rme_kernel.c ****             
2470:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4463              		.loc 1 2470 20
 4464 0670 0630E0E3 		mvn	r3, #6
 4465 0674 760000EA 		b	.L243
 4466              	.L275:
2471:../../Source/Kernel/rme_kernel.c ****         }
2472:../../Source/Kernel/rme_kernel.c ****         else
2473:../../Source/Kernel/rme_kernel.c ****         {
2474:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2475:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2476:../../Source/Kernel/rme_kernel.c ****         }
2477:../../Source/Kernel/rme_kernel.c ****     }
2478:../../Source/Kernel/rme_kernel.c ****     /* All other caps */
2479:../../Source/Kernel/rme_kernel.c ****     else
2480:../../Source/Kernel/rme_kernel.c ****     {
2481:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2482:../../Source/Kernel/rme_kernel.c ****         
2483:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2484:../../Source/Kernel/rme_kernel.c ****         if(Flag==0U)
 4467              		.loc 1 2484 11
 4468 0678 08309BE5 		ldr	r3, [fp, #8]
 4469 067c 000053E3 		cmp	r3, #0
 4470 0680 0100001A 		bne	.L282
2485:../../Source/Kernel/rme_kernel.c ****         {
2486:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2487:../../Source/Kernel/rme_kernel.c ****             
2488:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4471              		.loc 1 2488 20
 4472 0684 0630E0E3 		mvn	r3, #6
 4473 0688 710000EA 		b	.L243
 4474              	.L282:
2489:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 124


2490:../../Source/Kernel/rme_kernel.c ****         else
2491:../../Source/Kernel/rme_kernel.c ****         {
2492:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2493:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2494:../../Source/Kernel/rme_kernel.c ****         }
2495:../../Source/Kernel/rme_kernel.c ****         if((Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4475              		.loc 1 2495 37
 4476 068c 24301BE5 		ldr	r3, [fp, #-36]
 4477 0690 083093E5 		ldr	r3, [r3, #8]
 4478              		.loc 1 2495 19
 4479 0694 0320E0E1 		mvn	r2, r3
 4480              		.loc 1 2495 17
 4481 0698 08309BE5 		ldr	r3, [fp, #8]
 4482 069c 023003E0 		and	r3, r3, r2
 4483              		.loc 1 2495 11
 4484 06a0 000053E3 		cmp	r3, #0
 4485 06a4 0100000A 		beq	.L271
2496:../../Source/Kernel/rme_kernel.c ****         {
2497:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2498:../../Source/Kernel/rme_kernel.c ****             
2499:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4486              		.loc 1 2499 20
 4487 06a8 0630E0E3 		mvn	r3, #6
 4488 06ac 680000EA 		b	.L243
 4489              	.L271:
2500:../../Source/Kernel/rme_kernel.c ****         }
2501:../../Source/Kernel/rme_kernel.c ****         else
2502:../../Source/Kernel/rme_kernel.c ****         {
2503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2504:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2505:../../Source/Kernel/rme_kernel.c ****         }
2506:../../Source/Kernel/rme_kernel.c ****     }
2507:../../Source/Kernel/rme_kernel.c ****     
2508:../../Source/Kernel/rme_kernel.c ****     /* Is the destination slot unoccupied? */
2509:../../Source/Kernel/rme_kernel.c ****     if(Capobj_Dst->Head.Type_Stat!=0U)
 4490              		.loc 1 2509 24
 4491 06b0 20301BE5 		ldr	r3, [fp, #-32]
 4492 06b4 003093E5 		ldr	r3, [r3]
 4493              		.loc 1 2509 7
 4494 06b8 000053E3 		cmp	r3, #0
 4495 06bc 0100000A 		beq	.L283
2510:../../Source/Kernel/rme_kernel.c ****     {
2511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2512:../../Source/Kernel/rme_kernel.c ****             
2513:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_EXIST;
 4496              		.loc 1 2513 16
 4497 06c0 0430E0E3 		mvn	r3, #4
 4498 06c4 620000EA 		b	.L243
 4499              	.L283:
2514:../../Source/Kernel/rme_kernel.c ****     }
2515:../../Source/Kernel/rme_kernel.c ****     else
2516:../../Source/Kernel/rme_kernel.c ****     {
2517:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2518:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2519:../../Source/Kernel/rme_kernel.c ****     }
2520:../../Source/Kernel/rme_kernel.c ****     
2521:../../Source/Kernel/rme_kernel.c ****     /* Try to take the empty slot */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 125


2522:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Capobj_Dst);
 4500              		.loc 1 2522 5
 4501 06c8 20301BE5 		ldr	r3, [fp, #-32]
 4502 06cc 0128A0E3 		mov	r2, #65536
 4503 06d0 0010A0E3 		mov	r1, #0
 4504 06d4 0300A0E1 		mov	r0, r3
 4505 06d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4506 06dc 0030A0E1 		mov	r3, r0
 4507              		.loc 1 2522 5 is_stmt 0 discriminator 1
 4508 06e0 000053E3 		cmp	r3, #0
 4509 06e4 0100001A 		bne	.L284
 4510 06e8 0430E0E3 		mvn	r3, #4
 4511              		.loc 1 2522 5
 4512 06ec 580000EA 		b	.L243
 4513              	.L284:
 4514              		.loc 1 2522 5 discriminator 2
 4515 06f0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4516 06f4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4517 06f8 002093E5 		ldr	r2, [r3]
 4518 06fc 20301BE5 		ldr	r3, [fp, #-32]
 4519 0700 102083E5 		str	r2, [r3, #16]
2523:../../Source/Kernel/rme_kernel.c ****     
2524:../../Source/Kernel/rme_kernel.c ****     /* All done, we replicate the cap with flags */
2525:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_KOM)
 4520              		.loc 1 2525 7 is_stmt 1
 4521 0704 28301BE5 		ldr	r3, [fp, #-40]
 4522 0708 020053E3 		cmp	r3, #2
 4523 070c 1A00001A 		bne	.L285
2526:../../Source/Kernel/rme_kernel.c ****     {
2527:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2528:../../Source/Kernel/rme_kernel.c ****             
2529:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Kom_Flag);
 4524              		.loc 1 2529 9
 4525 0710 20301BE5 		ldr	r3, [fp, #-32]
 4526 0714 18201BE5 		ldr	r2, [fp, #-24]
 4527 0718 082083E5 		str	r2, [r3, #8]
 4528 071c 24301BE5 		ldr	r3, [fp, #-36]
 4529 0720 0C2093E5 		ldr	r2, [r3, #12]
 4530 0724 20301BE5 		ldr	r3, [fp, #-32]
 4531 0728 0C2083E5 		str	r2, [r3, #12]
 4532 072c 24301BE5 		ldr	r3, [fp, #-36]
 4533 0730 142093E5 		ldr	r2, [r3, #20]
 4534 0734 20301BE5 		ldr	r3, [fp, #-32]
 4535 0738 142083E5 		str	r2, [r3, #20]
 4536 073c 24301BE5 		ldr	r3, [fp, #-36]
 4537 0740 182093E5 		ldr	r2, [r3, #24]
 4538 0744 20301BE5 		ldr	r3, [fp, #-32]
 4539 0748 182083E5 		str	r2, [r3, #24]
 4540 074c 24301BE5 		ldr	r3, [fp, #-36]
 4541 0750 1C2093E5 		ldr	r2, [r3, #28]
 4542 0754 20301BE5 		ldr	r3, [fp, #-32]
 4543 0758 1C2083E5 		str	r2, [r3, #28]
2530:../../Source/Kernel/rme_kernel.c ****         /* Write absolute range information for kernel memory caps */
2531:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->Begin=Kom_Begin;
 4544              		.loc 1 2531 58
 4545 075c 20301BE5 		ldr	r3, [fp, #-32]
 4546 0760 10201BE5 		ldr	r2, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 126


 4547 0764 142083E5 		str	r2, [r3, #20]
2532:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End encoded inclusively to avoid overflow at max address */
2533:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->End=Kom_End-1U;
 4548              		.loc 1 2533 64
 4549 0768 14301BE5 		ldr	r3, [fp, #-20]
 4550 076c 012043E2 		sub	r2, r3, #1
 4551              		.loc 1 2533 56
 4552 0770 20301BE5 		ldr	r3, [fp, #-32]
 4553 0774 182083E5 		str	r2, [r3, #24]
 4554 0778 120000EA 		b	.L286
 4555              	.L285:
2534:../../Source/Kernel/rme_kernel.c ****     }
2535:../../Source/Kernel/rme_kernel.c ****     else
2536:../../Source/Kernel/rme_kernel.c ****     {
2537:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2538:../../Source/Kernel/rme_kernel.c ****         
2539:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Flag);
 4556              		.loc 1 2539 9
 4557 077c 20301BE5 		ldr	r3, [fp, #-32]
 4558 0780 08209BE5 		ldr	r2, [fp, #8]
 4559 0784 082083E5 		str	r2, [r3, #8]
 4560 0788 24301BE5 		ldr	r3, [fp, #-36]
 4561 078c 0C2093E5 		ldr	r2, [r3, #12]
 4562 0790 20301BE5 		ldr	r3, [fp, #-32]
 4563 0794 0C2083E5 		str	r2, [r3, #12]
 4564 0798 24301BE5 		ldr	r3, [fp, #-36]
 4565 079c 142093E5 		ldr	r2, [r3, #20]
 4566 07a0 20301BE5 		ldr	r3, [fp, #-32]
 4567 07a4 142083E5 		str	r2, [r3, #20]
 4568 07a8 24301BE5 		ldr	r3, [fp, #-36]
 4569 07ac 182093E5 		ldr	r2, [r3, #24]
 4570 07b0 20301BE5 		ldr	r3, [fp, #-32]
 4571 07b4 182083E5 		str	r2, [r3, #24]
 4572 07b8 24301BE5 		ldr	r3, [fp, #-36]
 4573 07bc 1C2093E5 		ldr	r2, [r3, #28]
 4574 07c0 20301BE5 		ldr	r3, [fp, #-32]
 4575 07c4 1C2083E5 		str	r2, [r3, #28]
 4576              	.L286:
2540:../../Source/Kernel/rme_kernel.c ****     }
2541:../../Source/Kernel/rme_kernel.c ****     
2542:../../Source/Kernel/rme_kernel.c ****     /* Set the parent and increase reference count - if this is actually needed.
2543:../../Source/Kernel/rme_kernel.c ****      * The only two cases where this is not needed are KFN and KOM. These two
2544:../../Source/Kernel/rme_kernel.c ****      * capability types are standalone on their own and do not need to reference
2545:../../Source/Kernel/rme_kernel.c ****      * their parent, nor will they update the parent's reference count. This
2546:../../Source/Kernel/rme_kernel.c ****      * design decision comes from the fact that these two capability types are
2547:../../Source/Kernel/rme_kernel.c ****      * always created on boot and delegated everywhere, and they don't actually
2548:../../Source/Kernel/rme_kernel.c ****      * have an object. If we use refcnt on these, we may cause scalability 
2549:../../Source/Kernel/rme_kernel.c ****      * issues. The parent cap can't be deleted anyway, so this is fine. */
2550:../../Source/Kernel/rme_kernel.c ****     if((Src_Type!=RME_CAP_TYPE_KOM)&&(Src_Type!=RME_CAP_TYPE_KFN))
 4577              		.loc 1 2550 7
 4578 07c8 28301BE5 		ldr	r3, [fp, #-40]
 4579 07cc 020053E3 		cmp	r3, #2
 4580 07d0 1400000A 		beq	.L287
 4581              		.loc 1 2550 36 discriminator 1
 4582 07d4 28301BE5 		ldr	r3, [fp, #-40]
 4583 07d8 010053E3 		cmp	r3, #1
 4584 07dc 1100000A 		beq	.L287
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 127


2551:../../Source/Kernel/rme_kernel.c ****     {
2552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2553:../../Source/Kernel/rme_kernel.c ****         
2554:../../Source/Kernel/rme_kernel.c ****         /* Register root */
2555:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=RME_CAP_CONV_ROOT(Capobj_Src,rme_ptr_t);
 4585              		.loc 1 2555 35
 4586 07e0 24301BE5 		ldr	r3, [fp, #-36]
 4587 07e4 003093E5 		ldr	r3, [r3]
 4588 07e8 7330FFE6 		uxth	r3, r3
 4589 07ec 000053E3 		cmp	r3, #0
 4590 07f0 0200000A 		beq	.L288
 4591              		.loc 1 2555 35 is_stmt 0 discriminator 1
 4592 07f4 24301BE5 		ldr	r3, [fp, #-36]
 4593 07f8 043093E5 		ldr	r3, [r3, #4]
 4594 07fc 000000EA 		b	.L289
 4595              	.L288:
 4596              		.loc 1 2555 35 discriminator 2
 4597 0800 24301BE5 		ldr	r3, [fp, #-36]
 4598              	.L289:
 4599              		.loc 1 2555 34 is_stmt 1 discriminator 4
 4600 0804 20201BE5 		ldr	r2, [fp, #-32]
 4601 0808 043082E5 		str	r3, [r2, #4]
2556:../../Source/Kernel/rme_kernel.c ****     
2557:../../Source/Kernel/rme_kernel.c ****         /* Increase the parent's refcnt - never overflows, guaranteed by field size */
2558:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(((volatile struct RME_Cap_Struct*)
 4602              		.loc 1 2558 9
 4603 080c 20301BE5 		ldr	r3, [fp, #-32]
 4604 0810 043093E5 		ldr	r3, [r3, #4]
 4605 0814 043083E2 		add	r3, r3, #4
 4606 0818 0110A0E3 		mov	r1, #1
 4607 081c 0300A0E1 		mov	r0, r3
 4608 0820 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4609 0824 020000EA 		b	.L290
 4610              	.L287:
2559:../../Source/Kernel/rme_kernel.c ****                         (Capobj_Dst->Head.Root_Ref))->Head.Root_Ref),1U);
2560:../../Source/Kernel/rme_kernel.c ****     }
2561:../../Source/Kernel/rme_kernel.c ****     else
2562:../../Source/Kernel/rme_kernel.c ****     {
2563:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2564:../../Source/Kernel/rme_kernel.c ****         
2565:../../Source/Kernel/rme_kernel.c ****         /* No root for KOM and KFN */
2566:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=0U;
 4611              		.loc 1 2566 34
 4612 0828 20301BE5 		ldr	r3, [fp, #-32]
 4613 082c 0020A0E3 		mov	r2, #0
 4614 0830 042083E5 		str	r2, [r3, #4]
 4615              	.L290:
2567:../../Source/Kernel/rme_kernel.c ****     }
2568:../../Source/Kernel/rme_kernel.c **** 
2569:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2570:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Capobj_Dst->Head.Type_Stat),
 4616              		.loc 1 2570 5
 4617 0834 20201BE5 		ldr	r2, [fp, #-32]
 4618 0838 28301BE5 		ldr	r3, [fp, #-40]
 4619 083c 033CA0E1 		lsl	r3, r3, #24
 4620 0840 013083E3 		orr	r3, r3, #1
 4621 0844 0310A0E1 		mov	r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 128


 4622 0848 0200A0E1 		mov	r0, r2
 4623 084c FEFFFFEB 		bl	__RME_A7A_Write_Release
2571:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(Src_Type,
2572:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2573:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_LEAF));
2574:../../Source/Kernel/rme_kernel.c **** 
2575:../../Source/Kernel/rme_kernel.c ****     return 0;
 4624              		.loc 1 2575 12
 4625 0850 0030A0E3 		mov	r3, #0
 4626              	.L243:
2576:../../Source/Kernel/rme_kernel.c **** }
 4627              		.loc 1 2576 1
 4628 0854 0300A0E1 		mov	r0, r3
 4629 0858 04D04BE2 		sub	sp, fp, #4
 4630              		.cfi_def_cfa 13, 8
 4631              		@ sp needed
 4632 085c 0088BDE8 		pop	{fp, pc}
 4633              		.cfi_endproc
 4634              	.LFE27:
 4636              		.section	.text._RME_Cpt_Rem,"ax",%progbits
 4637              		.align	2
 4638              		.syntax unified
 4639              		.arm
 4641              	_RME_Cpt_Rem:
 4642              	.LFB28:
2577:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Add *************************************************/
2578:../../Source/Kernel/rme_kernel.c **** 
2579:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Rem ******************************************************
2580:../../Source/Kernel/rme_kernel.c **** Description : Remove one capability from the capability table. This function
2581:../../Source/Kernel/rme_kernel.c ****               reverts the delegation.
2582:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2583:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Rem - The capability to the capability table to
2584:../../Source/Kernel/rme_kernel.c ****                                       remove from.
2585:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2586:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Rem - The capability slot you want to remove.
2587:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2588:../../Source/Kernel/rme_kernel.c **** Output      : None.
2589:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2590:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2591:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Rem(struct RME_Cap_Cpt* Cpt,
2592:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Rem,
2593:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Rem)
2594:../../Source/Kernel/rme_kernel.c **** {
 4643              		.loc 1 2594 1
 4644              		.cfi_startproc
 4645              		@ args = 0, pretend = 0, frame = 40
 4646              		@ frame_needed = 1, uses_anonymous_args = 0
 4647 0000 00482DE9 		push	{fp, lr}
 4648              		.cfi_def_cfa_offset 8
 4649              		.cfi_offset 11, -8
 4650              		.cfi_offset 14, -4
 4651 0004 04B08DE2 		add	fp, sp, #4
 4652              		.cfi_def_cfa 11, 4
 4653 0008 28D04DE2 		sub	sp, sp, #40
 4654 000c 20000BE5 		str	r0, [fp, #-32]
 4655 0010 24100BE5 		str	r1, [fp, #-36]
 4656 0014 28200BE5 		str	r2, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 129


2595:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2596:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Rem;
2597:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2598:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Rem_Type;
2599:../../Source/Kernel/rme_kernel.c ****     /* This is used for removal */
2600:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Root;
2601:../../Source/Kernel/rme_kernel.c ****     
2602:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2603:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Rem,RME_CAP_TYPE_CPT,
 4657              		.loc 1 2603 5
 4658 0018 24301BE5 		ldr	r3, [fp, #-36]
 4659 001c 803003E2 		and	r3, r3, #128
 4660 0020 000053E3 		cmp	r3, #0
 4661 0024 1C00001A 		bne	.L292
 4662              		.loc 1 2603 5 is_stmt 0 discriminator 1
 4663 0028 20301BE5 		ldr	r3, [fp, #-32]
 4664 002c 142093E5 		ldr	r2, [r3, #20]
 4665 0030 24301BE5 		ldr	r3, [fp, #-36]
 4666 0034 030052E1 		cmp	r2, r3
 4667 0038 0100008A 		bhi	.L293
 4668              		.loc 1 2603 5 discriminator 3
 4669 003c 0230E0E3 		mvn	r3, #2
 4670              		.loc 1 2603 5
 4671 0040 AB0000EA 		b	.L294
 4672              	.L293:
 4673              		.loc 1 2603 5 discriminator 4
 4674 0044 24301BE5 		ldr	r3, [fp, #-36]
 4675 0048 8322A0E1 		lsl	r2, r3, #5
 4676 004c 20301BE5 		ldr	r3, [fp, #-32]
 4677 0050 0C3093E5 		ldr	r3, [r3, #12]
 4678 0054 033082E0 		add	r3, r2, r3
 4679 0058 08300BE5 		str	r3, [fp, #-8]
 4680 005c 08301BE5 		ldr	r3, [fp, #-8]
 4681 0060 0300A0E1 		mov	r0, r3
 4682 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4683 0068 0C000BE5 		str	r0, [fp, #-12]
 4684              		.loc 1 2603 5 discriminator 1
 4685 006c 0C301BE5 		ldr	r3, [fp, #-12]
 4686 0070 FF3803E2 		and	r3, r3, #16711680
 4687 0074 020853E3 		cmp	r3, #131072
 4688 0078 0100001A 		bne	.L295
 4689              		.loc 1 2603 5 discriminator 5
 4690 007c 0830E0E3 		mvn	r3, #8
 4691              		.loc 1 2603 5
 4692 0080 9B0000EA 		b	.L294
 4693              	.L295:
 4694              		.loc 1 2603 5 discriminator 6
 4695 0084 0C301BE5 		ldr	r3, [fp, #-12]
 4696 0088 233CA0E1 		lsr	r3, r3, #24
 4697 008c 030053E3 		cmp	r3, #3
 4698 0090 3F00000A 		beq	.L296
 4699              		.loc 1 2603 5 discriminator 7
 4700 0094 0130E0E3 		mvn	r3, #1
 4701              		.loc 1 2603 5
 4702 0098 950000EA 		b	.L294
 4703              	.L292:
 4704              		.loc 1 2603 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 130


 4705 009c 24301BE5 		ldr	r3, [fp, #-36]
 4706 00a0 2324A0E1 		lsr	r2, r3, #8
 4707 00a4 20301BE5 		ldr	r3, [fp, #-32]
 4708 00a8 143093E5 		ldr	r3, [r3, #20]
 4709 00ac 030052E1 		cmp	r2, r3
 4710 00b0 0100003A 		bcc	.L297
 4711              		.loc 1 2603 5 discriminator 8
 4712 00b4 0230E0E3 		mvn	r3, #2
 4713              		.loc 1 2603 5
 4714 00b8 8D0000EA 		b	.L294
 4715              	.L297:
 4716              		.loc 1 2603 5 discriminator 9
 4717 00bc 24301BE5 		ldr	r3, [fp, #-36]
 4718 00c0 2334A0E1 		lsr	r3, r3, #8
 4719 00c4 8322A0E1 		lsl	r2, r3, #5
 4720 00c8 20301BE5 		ldr	r3, [fp, #-32]
 4721 00cc 0C3093E5 		ldr	r3, [r3, #12]
 4722 00d0 033082E0 		add	r3, r2, r3
 4723 00d4 08300BE5 		str	r3, [fp, #-8]
 4724 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4725 00dc 0300A0E1 		mov	r0, r3
 4726 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4727 00e4 0C000BE5 		str	r0, [fp, #-12]
 4728              		.loc 1 2603 5 discriminator 1
 4729 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 4730 00ec FF3803E2 		and	r3, r3, #16711680
 4731 00f0 020853E3 		cmp	r3, #131072
 4732 00f4 0100001A 		bne	.L298
 4733              		.loc 1 2603 5 discriminator 10
 4734 00f8 0830E0E3 		mvn	r3, #8
 4735              		.loc 1 2603 5
 4736 00fc 7C0000EA 		b	.L294
 4737              	.L298:
 4738              		.loc 1 2603 5 discriminator 11
 4739 0100 0C301BE5 		ldr	r3, [fp, #-12]
 4740 0104 233CA0E1 		lsr	r3, r3, #24
 4741 0108 030053E3 		cmp	r3, #3
 4742 010c 0100000A 		beq	.L299
 4743              		.loc 1 2603 5 discriminator 12
 4744 0110 0130E0E3 		mvn	r3, #1
 4745              		.loc 1 2603 5
 4746 0114 760000EA 		b	.L294
 4747              	.L299:
 4748              		.loc 1 2603 5 discriminator 13
 4749 0118 24301BE5 		ldr	r3, [fp, #-36]
 4750 011c 7F2003E2 		and	r2, r3, #127
 4751 0120 08301BE5 		ldr	r3, [fp, #-8]
 4752 0124 143093E5 		ldr	r3, [r3, #20]
 4753 0128 030052E1 		cmp	r2, r3
 4754 012c 0100003A 		bcc	.L300
 4755              		.loc 1 2603 5 discriminator 14
 4756 0130 0230E0E3 		mvn	r3, #2
 4757              		.loc 1 2603 5
 4758 0134 6E0000EA 		b	.L294
 4759              	.L300:
 4760              		.loc 1 2603 5 discriminator 15
 4761 0138 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 131


 4762 013c 7F3003E2 		and	r3, r3, #127
 4763 0140 8322A0E1 		lsl	r2, r3, #5
 4764 0144 08301BE5 		ldr	r3, [fp, #-8]
 4765 0148 0C3093E5 		ldr	r3, [r3, #12]
 4766 014c 033082E0 		add	r3, r2, r3
 4767 0150 08300BE5 		str	r3, [fp, #-8]
 4768 0154 08301BE5 		ldr	r3, [fp, #-8]
 4769 0158 0300A0E1 		mov	r0, r3
 4770 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4771 0160 0C000BE5 		str	r0, [fp, #-12]
 4772              		.loc 1 2603 5 discriminator 1
 4773 0164 0C301BE5 		ldr	r3, [fp, #-12]
 4774 0168 FF3803E2 		and	r3, r3, #16711680
 4775 016c 020853E3 		cmp	r3, #131072
 4776 0170 0100001A 		bne	.L301
 4777              		.loc 1 2603 5 discriminator 16
 4778 0174 0830E0E3 		mvn	r3, #8
 4779              		.loc 1 2603 5
 4780 0178 5D0000EA 		b	.L294
 4781              	.L301:
 4782              		.loc 1 2603 5 discriminator 17
 4783 017c 0C301BE5 		ldr	r3, [fp, #-12]
 4784 0180 233CA0E1 		lsr	r3, r3, #24
 4785 0184 030053E3 		cmp	r3, #3
 4786 0188 0100000A 		beq	.L296
 4787              		.loc 1 2603 5 discriminator 18
 4788 018c 0130E0E3 		mvn	r3, #1
 4789              		.loc 1 2603 5
 4790 0190 570000EA 		b	.L294
 4791              	.L296:
2604:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2605:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2606:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_REM);
 4792              		.loc 1 2606 5 is_stmt 1
 4793 0194 08301BE5 		ldr	r3, [fp, #-8]
 4794 0198 083093E5 		ldr	r3, [r3, #8]
 4795 019c 203003E2 		and	r3, r3, #32
 4796 01a0 000053E3 		cmp	r3, #0
 4797 01a4 0100001A 		bne	.L302
 4798              		.loc 1 2606 5 is_stmt 0 discriminator 1
 4799 01a8 0630E0E3 		mvn	r3, #6
 4800              		.loc 1 2606 5
 4801 01ac 500000EA 		b	.L294
 4802              	.L302:
2607:../../Source/Kernel/rme_kernel.c ****     
2608:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2609:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Rem,struct RME_Cap_Struct*,Capobj_Rem);
 4803              		.loc 1 2609 5 is_stmt 1
 4804 01b0 08301BE5 		ldr	r3, [fp, #-8]
 4805 01b4 142093E5 		ldr	r2, [r3, #20]
 4806 01b8 28301BE5 		ldr	r3, [fp, #-40]
 4807 01bc 030052E1 		cmp	r2, r3
 4808 01c0 0100008A 		bhi	.L303
 4809              		.loc 1 2609 5 is_stmt 0 discriminator 1
 4810 01c4 0230E0E3 		mvn	r3, #2
 4811              		.loc 1 2609 5
 4812 01c8 490000EA 		b	.L294
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 132


 4813              	.L303:
 4814              		.loc 1 2609 5 discriminator 2
 4815 01cc 28301BE5 		ldr	r3, [fp, #-40]
 4816 01d0 8322A0E1 		lsl	r2, r3, #5
 4817 01d4 08301BE5 		ldr	r3, [fp, #-8]
 4818 01d8 0C3093E5 		ldr	r3, [r3, #12]
 4819 01dc 033082E0 		add	r3, r2, r3
 4820 01e0 10300BE5 		str	r3, [fp, #-16]
2610:../../Source/Kernel/rme_kernel.c ****     /* Removal check */
2611:../../Source/Kernel/rme_kernel.c ****     RME_CAP_REM_CHECK(Capobj_Rem,Type_Stat);
 4821              		.loc 1 2611 5 is_stmt 1
 4822 01e4 10301BE5 		ldr	r3, [fp, #-16]
 4823 01e8 0300A0E1 		mov	r0, r3
 4824 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4825 01f0 0C000BE5 		str	r0, [fp, #-12]
 4826              		.loc 1 2611 5 is_stmt 0 discriminator 1
 4827 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 4828 01f8 FF3803E2 		and	r3, r3, #16711680
 4829 01fc 020853E3 		cmp	r3, #131072
 4830 0200 0100000A 		beq	.L304
 4831 0204 0830E0E3 		mvn	r3, #8
 4832              		.loc 1 2611 5
 4833 0208 390000EA 		b	.L294
 4834              	.L304:
 4835              		.loc 1 2611 5 discriminator 2
 4836 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4837 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4838 0214 002093E5 		ldr	r2, [r3]
 4839 0218 10301BE5 		ldr	r3, [fp, #-16]
 4840 021c 103093E5 		ldr	r3, [r3, #16]
 4841 0220 0310A0E1 		mov	r1, r3
 4842 0224 0200A0E1 		mov	r0, r2
 4843 0228 FEFFFFEB 		bl	_RME_Diff
 4844 022c 0030A0E1 		mov	r3, r0
 4845              		.loc 1 2611 5 discriminator 1
 4846 0230 0A0053E3 		cmp	r3, #10
 4847 0234 0100008A 		bhi	.L305
 4848              		.loc 1 2611 5 discriminator 3
 4849 0238 0730E0E3 		mvn	r3, #7
 4850              		.loc 1 2611 5
 4851 023c 2C0000EA 		b	.L294
 4852              	.L305:
 4853              		.loc 1 2611 5 discriminator 4
 4854 0240 0C301BE5 		ldr	r3, [fp, #-12]
 4855 0244 7330FFE6 		uxth	r3, r3
 4856 0248 000053E3 		cmp	r3, #0
 4857 024c 0100001A 		bne	.L306
 4858              		.loc 1 2611 5 discriminator 5
 4859 0250 0930E0E3 		mvn	r3, #9
 4860              		.loc 1 2611 5
 4861 0254 260000EA 		b	.L294
 4862              	.L306:
2612:../../Source/Kernel/rme_kernel.c ****     
2613:../../Source/Kernel/rme_kernel.c ****     /* If we are KFN or KOM, we don't care about parent or refcnt */
2614:../../Source/Kernel/rme_kernel.c ****     Rem_Type=RME_CAP_TYPE(Type_Stat);
 4863              		.loc 1 2614 13 is_stmt 1
 4864 0258 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 133


 4865 025c 233CA0E1 		lsr	r3, r3, #24
 4866 0260 14300BE5 		str	r3, [fp, #-20]
2615:../../Source/Kernel/rme_kernel.c ****     if((Rem_Type!=RME_CAP_TYPE_KOM)&&(Rem_Type!=RME_CAP_TYPE_KFN))
 4867              		.loc 1 2615 7
 4868 0264 14301BE5 		ldr	r3, [fp, #-20]
 4869 0268 020053E3 		cmp	r3, #2
 4870 026c 1500000A 		beq	.L307
 4871              		.loc 1 2615 36 discriminator 1
 4872 0270 14301BE5 		ldr	r3, [fp, #-20]
 4873 0274 010053E3 		cmp	r3, #1
 4874 0278 1200000A 		beq	.L307
2616:../../Source/Kernel/rme_kernel.c ****     {
2617:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2618:../../Source/Kernel/rme_kernel.c ****         
2619:../../Source/Kernel/rme_kernel.c ****         /* Remember this for refcnt operations */
2620:../../Source/Kernel/rme_kernel.c ****         Capobj_Root=(struct RME_Cap_Struct*)(Capobj_Rem->Head.Root_Ref);
 4875              		.loc 1 2620 62
 4876 027c 10301BE5 		ldr	r3, [fp, #-16]
 4877 0280 043093E5 		ldr	r3, [r3, #4]
 4878              		.loc 1 2620 20
 4879 0284 18300BE5 		str	r3, [fp, #-24]
2621:../../Source/Kernel/rme_kernel.c ****         
2622:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4880              		.loc 1 2622 9
 4881 0288 10301BE5 		ldr	r3, [fp, #-16]
 4882 028c 0020A0E3 		mov	r2, #0
 4883 0290 0C101BE5 		ldr	r1, [fp, #-12]
 4884 0294 0300A0E1 		mov	r0, r3
 4885 0298 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4886 029c 0030A0E1 		mov	r3, r0
 4887              		.loc 1 2622 9 is_stmt 0 discriminator 1
 4888 02a0 000053E3 		cmp	r3, #0
 4889 02a4 0100001A 		bne	.L308
 4890 02a8 0030E0E3 		mvn	r3, #0
 4891              		.loc 1 2622 9
 4892 02ac 100000EA 		b	.L294
 4893              	.L308:
2623:../../Source/Kernel/rme_kernel.c **** 
2624:../../Source/Kernel/rme_kernel.c ****         /* Check done, decrease its parent's refcnt. This must be done at last */
2625:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Capobj_Root->Head.Root_Ref),-1);
 4894              		.loc 1 2625 9 is_stmt 1
 4895 02b0 18301BE5 		ldr	r3, [fp, #-24]
 4896 02b4 043083E2 		add	r3, r3, #4
 4897 02b8 0010E0E3 		mvn	r1, #0
 4898 02bc 0300A0E1 		mov	r0, r3
 4899 02c0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4900 02c4 090000EA 		b	.L309
 4901              	.L307:
2626:../../Source/Kernel/rme_kernel.c ****     }
2627:../../Source/Kernel/rme_kernel.c ****     else
2628:../../Source/Kernel/rme_kernel.c ****     {
2629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2630:../../Source/Kernel/rme_kernel.c **** 
2631:../../Source/Kernel/rme_kernel.c ****         /* Helping also applies here */
2632:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4902              		.loc 1 2632 9
 4903 02c8 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 134


 4904 02cc 0020A0E3 		mov	r2, #0
 4905 02d0 0C101BE5 		ldr	r1, [fp, #-12]
 4906 02d4 0300A0E1 		mov	r0, r3
 4907 02d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4908 02dc 0030A0E1 		mov	r3, r0
 4909              		.loc 1 2632 9 is_stmt 0 discriminator 1
 4910 02e0 000053E3 		cmp	r3, #0
 4911 02e4 0100001A 		bne	.L309
 4912 02e8 0030E0E3 		mvn	r3, #0
 4913              		.loc 1 2632 9
 4914 02ec 000000EA 		b	.L294
 4915              	.L309:
2633:../../Source/Kernel/rme_kernel.c ****     }
2634:../../Source/Kernel/rme_kernel.c ****     
2635:../../Source/Kernel/rme_kernel.c ****     return 0;
 4916              		.loc 1 2635 12 is_stmt 1
 4917 02f0 0030A0E3 		mov	r3, #0
 4918              	.L294:
2636:../../Source/Kernel/rme_kernel.c **** }
 4919              		.loc 1 2636 1
 4920 02f4 0300A0E1 		mov	r0, r3
 4921 02f8 04D04BE2 		sub	sp, fp, #4
 4922              		.cfi_def_cfa 13, 8
 4923              		@ sp needed
 4924 02fc 0088BDE8 		pop	{fp, pc}
 4925              		.cfi_endproc
 4926              	.LFE28:
 4928              		.section	.text._RME_Pgt_Boot_Crt,"ax",%progbits
 4929              		.align	2
 4930              		.global	_RME_Pgt_Boot_Crt
 4931              		.syntax unified
 4932              		.arm
 4934              	_RME_Pgt_Boot_Crt:
 4935              	.LFB29:
2637:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Rem *************************************************/
2638:../../Source/Kernel/rme_kernel.c **** 
2639:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Crt *************************************************
2640:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time page table.
2641:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
2642:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2643:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
2644:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
2645:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2646:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
2647:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
2648:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2649:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the page table.
2650:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
2651:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
2652:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
2653:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
2654:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page
2655:../../Source/Kernel/rme_kernel.c ****                                  directories into it.
2656:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
2657:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the
2658:../../Source/Kernel/rme_kernel.c ****                                      page directory.
2659:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the page
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 135


2660:../../Source/Kernel/rme_kernel.c ****                                     table.
2661:../../Source/Kernel/rme_kernel.c **** Output      : None.
2662:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2663:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2664:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2665:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
2666:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
2667:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt,
2668:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
2669:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Base,
2670:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Is_Top,
2671:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Size_Order,
2672:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Num_Order)
2673:../../Source/Kernel/rme_kernel.c **** {
 4936              		.loc 1 2673 1
 4937              		.cfi_startproc
 4938              		@ args = 16, pretend = 0, frame = 32
 4939              		@ frame_needed = 1, uses_anonymous_args = 0
 4940 0000 00482DE9 		push	{fp, lr}
 4941              		.cfi_def_cfa_offset 8
 4942              		.cfi_offset 11, -8
 4943              		.cfi_offset 14, -4
 4944 0004 04B08DE2 		add	fp, sp, #4
 4945              		.cfi_def_cfa 11, 4
 4946 0008 28D04DE2 		sub	sp, sp, #40
 4947 000c 18000BE5 		str	r0, [fp, #-24]
 4948 0010 1C100BE5 		str	r1, [fp, #-28]
 4949 0014 20200BE5 		str	r2, [fp, #-32]
 4950 0018 24300BE5 		str	r3, [fp, #-36]
2674:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2675:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
2676:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2677:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
2678:../../Source/Kernel/rme_kernel.c ****     
2679:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
2680:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
2681:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 4951              		.loc 1 2681 19
 4952 001c 0C209BE5 		ldr	r2, [fp, #12]
 4953 0020 10309BE5 		ldr	r3, [fp, #16]
 4954 0024 033082E0 		add	r3, r2, r3
 4955              		.loc 1 2681 7
 4956 0028 200053E3 		cmp	r3, #32
 4957 002c 0100009A 		bls	.L311
2682:../../Source/Kernel/rme_kernel.c ****     {
2683:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2684:../../Source/Kernel/rme_kernel.c **** 
2685:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4958              		.loc 1 2685 16
 4959 0030 6630E0E3 		mvn	r3, #102
 4960 0034 D00000EA 		b	.L312
 4961              	.L311:
2686:../../Source/Kernel/rme_kernel.c ****     }
2687:../../Source/Kernel/rme_kernel.c ****     else
2688:../../Source/Kernel/rme_kernel.c ****     {
2689:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2690:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 136


2691:../../Source/Kernel/rme_kernel.c ****     }
2692:../../Source/Kernel/rme_kernel.c **** 
2693:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
2694:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 4962              		.loc 1 2694 5
 4963 0038 1C301BE5 		ldr	r3, [fp, #-28]
 4964 003c 803003E2 		and	r3, r3, #128
 4965 0040 000053E3 		cmp	r3, #0
 4966 0044 1C00001A 		bne	.L313
 4967              		.loc 1 2694 5 is_stmt 0 discriminator 1
 4968 0048 18301BE5 		ldr	r3, [fp, #-24]
 4969 004c 142093E5 		ldr	r2, [r3, #20]
 4970 0050 1C301BE5 		ldr	r3, [fp, #-28]
 4971 0054 030052E1 		cmp	r2, r3
 4972 0058 0100008A 		bhi	.L314
 4973              		.loc 1 2694 5 discriminator 3
 4974 005c 0230E0E3 		mvn	r3, #2
 4975              		.loc 1 2694 5
 4976 0060 C50000EA 		b	.L312
 4977              	.L314:
 4978              		.loc 1 2694 5 discriminator 4
 4979 0064 1C301BE5 		ldr	r3, [fp, #-28]
 4980 0068 8322A0E1 		lsl	r2, r3, #5
 4981 006c 18301BE5 		ldr	r3, [fp, #-24]
 4982 0070 0C3093E5 		ldr	r3, [r3, #12]
 4983 0074 033082E0 		add	r3, r2, r3
 4984 0078 0C300BE5 		str	r3, [fp, #-12]
 4985 007c 0C301BE5 		ldr	r3, [fp, #-12]
 4986 0080 0300A0E1 		mov	r0, r3
 4987 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4988 0088 10000BE5 		str	r0, [fp, #-16]
 4989              		.loc 1 2694 5 discriminator 1
 4990 008c 10301BE5 		ldr	r3, [fp, #-16]
 4991 0090 FF3803E2 		and	r3, r3, #16711680
 4992 0094 020853E3 		cmp	r3, #131072
 4993 0098 0100001A 		bne	.L315
 4994              		.loc 1 2694 5 discriminator 5
 4995 009c 0830E0E3 		mvn	r3, #8
 4996              		.loc 1 2694 5
 4997 00a0 B50000EA 		b	.L312
 4998              	.L315:
 4999              		.loc 1 2694 5 discriminator 6
 5000 00a4 10301BE5 		ldr	r3, [fp, #-16]
 5001 00a8 233CA0E1 		lsr	r3, r3, #24
 5002 00ac 030053E3 		cmp	r3, #3
 5003 00b0 3F00000A 		beq	.L316
 5004              		.loc 1 2694 5 discriminator 7
 5005 00b4 0130E0E3 		mvn	r3, #1
 5006              		.loc 1 2694 5
 5007 00b8 AF0000EA 		b	.L312
 5008              	.L313:
 5009              		.loc 1 2694 5 discriminator 2
 5010 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 5011 00c0 2324A0E1 		lsr	r2, r3, #8
 5012 00c4 18301BE5 		ldr	r3, [fp, #-24]
 5013 00c8 143093E5 		ldr	r3, [r3, #20]
 5014 00cc 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 137


 5015 00d0 0100003A 		bcc	.L317
 5016              		.loc 1 2694 5 discriminator 8
 5017 00d4 0230E0E3 		mvn	r3, #2
 5018              		.loc 1 2694 5
 5019 00d8 A70000EA 		b	.L312
 5020              	.L317:
 5021              		.loc 1 2694 5 discriminator 9
 5022 00dc 1C301BE5 		ldr	r3, [fp, #-28]
 5023 00e0 2334A0E1 		lsr	r3, r3, #8
 5024 00e4 8322A0E1 		lsl	r2, r3, #5
 5025 00e8 18301BE5 		ldr	r3, [fp, #-24]
 5026 00ec 0C3093E5 		ldr	r3, [r3, #12]
 5027 00f0 033082E0 		add	r3, r2, r3
 5028 00f4 0C300BE5 		str	r3, [fp, #-12]
 5029 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 5030 00fc 0300A0E1 		mov	r0, r3
 5031 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5032 0104 10000BE5 		str	r0, [fp, #-16]
 5033              		.loc 1 2694 5 discriminator 1
 5034 0108 10301BE5 		ldr	r3, [fp, #-16]
 5035 010c FF3803E2 		and	r3, r3, #16711680
 5036 0110 020853E3 		cmp	r3, #131072
 5037 0114 0100001A 		bne	.L318
 5038              		.loc 1 2694 5 discriminator 10
 5039 0118 0830E0E3 		mvn	r3, #8
 5040              		.loc 1 2694 5
 5041 011c 960000EA 		b	.L312
 5042              	.L318:
 5043              		.loc 1 2694 5 discriminator 11
 5044 0120 10301BE5 		ldr	r3, [fp, #-16]
 5045 0124 233CA0E1 		lsr	r3, r3, #24
 5046 0128 030053E3 		cmp	r3, #3
 5047 012c 0100000A 		beq	.L319
 5048              		.loc 1 2694 5 discriminator 12
 5049 0130 0130E0E3 		mvn	r3, #1
 5050              		.loc 1 2694 5
 5051 0134 900000EA 		b	.L312
 5052              	.L319:
 5053              		.loc 1 2694 5 discriminator 13
 5054 0138 1C301BE5 		ldr	r3, [fp, #-28]
 5055 013c 7F2003E2 		and	r2, r3, #127
 5056 0140 0C301BE5 		ldr	r3, [fp, #-12]
 5057 0144 143093E5 		ldr	r3, [r3, #20]
 5058 0148 030052E1 		cmp	r2, r3
 5059 014c 0100003A 		bcc	.L320
 5060              		.loc 1 2694 5 discriminator 14
 5061 0150 0230E0E3 		mvn	r3, #2
 5062              		.loc 1 2694 5
 5063 0154 880000EA 		b	.L312
 5064              	.L320:
 5065              		.loc 1 2694 5 discriminator 15
 5066 0158 1C301BE5 		ldr	r3, [fp, #-28]
 5067 015c 7F3003E2 		and	r3, r3, #127
 5068 0160 8322A0E1 		lsl	r2, r3, #5
 5069 0164 0C301BE5 		ldr	r3, [fp, #-12]
 5070 0168 0C3093E5 		ldr	r3, [r3, #12]
 5071 016c 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 138


 5072 0170 0C300BE5 		str	r3, [fp, #-12]
 5073 0174 0C301BE5 		ldr	r3, [fp, #-12]
 5074 0178 0300A0E1 		mov	r0, r3
 5075 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5076 0180 10000BE5 		str	r0, [fp, #-16]
 5077              		.loc 1 2694 5 discriminator 1
 5078 0184 10301BE5 		ldr	r3, [fp, #-16]
 5079 0188 FF3803E2 		and	r3, r3, #16711680
 5080 018c 020853E3 		cmp	r3, #131072
 5081 0190 0100001A 		bne	.L321
 5082              		.loc 1 2694 5 discriminator 16
 5083 0194 0830E0E3 		mvn	r3, #8
 5084              		.loc 1 2694 5
 5085 0198 770000EA 		b	.L312
 5086              	.L321:
 5087              		.loc 1 2694 5 discriminator 17
 5088 019c 10301BE5 		ldr	r3, [fp, #-16]
 5089 01a0 233CA0E1 		lsr	r3, r3, #24
 5090 01a4 030053E3 		cmp	r3, #3
 5091 01a8 0100000A 		beq	.L316
 5092              		.loc 1 2694 5 discriminator 18
 5093 01ac 0130E0E3 		mvn	r3, #1
 5094              		.loc 1 2694 5
 5095 01b0 710000EA 		b	.L312
 5096              	.L316:
2695:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
2696:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2697:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 5097              		.loc 1 2697 5 is_stmt 1
 5098 01b4 0C301BE5 		ldr	r3, [fp, #-12]
 5099 01b8 083093E5 		ldr	r3, [r3, #8]
 5100 01bc 013003E2 		and	r3, r3, #1
 5101 01c0 000053E3 		cmp	r3, #0
 5102 01c4 0100001A 		bne	.L322
 5103              		.loc 1 2697 5 is_stmt 0 discriminator 1
 5104 01c8 0630E0E3 		mvn	r3, #6
 5105              		.loc 1 2697 5
 5106 01cc 6A0000EA 		b	.L312
 5107              	.L322:
2698:../../Source/Kernel/rme_kernel.c ****     
2699:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
2700:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)!=0)
 5108              		.loc 1 2700 8 is_stmt 1
 5109 01d0 24301BE5 		ldr	r3, [fp, #-36]
 5110 01d4 00308DE5 		str	r3, [sp]
 5111 01d8 10309BE5 		ldr	r3, [fp, #16]
 5112 01dc 0C209BE5 		ldr	r2, [fp, #12]
 5113 01e0 08109BE5 		ldr	r1, [fp, #8]
 5114 01e4 04009BE5 		ldr	r0, [fp, #4]
 5115 01e8 FEFFFFEB 		bl	__RME_Pgt_Check
 5116 01ec 0030A0E1 		mov	r3, r0
 5117              		.loc 1 2700 7 discriminator 1
 5118 01f0 000053E3 		cmp	r3, #0
 5119 01f4 0100000A 		beq	.L323
2701:../../Source/Kernel/rme_kernel.c ****     {
2702:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2703:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 139


2704:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5120              		.loc 1 2704 16
 5121 01f8 6630E0E3 		mvn	r3, #102
 5122 01fc 5E0000EA 		b	.L312
 5123              	.L323:
2705:../../Source/Kernel/rme_kernel.c ****     }
2706:../../Source/Kernel/rme_kernel.c ****     else
2707:../../Source/Kernel/rme_kernel.c ****     {
2708:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2709:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2710:../../Source/Kernel/rme_kernel.c ****     }
2711:../../Source/Kernel/rme_kernel.c ****     
2712:../../Source/Kernel/rme_kernel.c ****     /* Check if the base address is properly aligned to the total order of the page table */
2713:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 5124              		.loc 1 2713 14
 5125 0200 0C209BE5 		ldr	r2, [fp, #12]
 5126 0204 10309BE5 		ldr	r3, [fp, #16]
 5127 0208 033082E0 		add	r3, r2, r3
 5128 020c 203063E2 		rsb	r3, r3, #32
 5129 0210 0020E0E3 		mvn	r2, #0
 5130 0214 3223A0E1 		lsr	r2, r2, r3
 5131              		.loc 1 2713 13
 5132 0218 04309BE5 		ldr	r3, [fp, #4]
 5133 021c 023003E0 		and	r3, r3, r2
 5134              		.loc 1 2713 7
 5135 0220 000053E3 		cmp	r3, #0
 5136 0224 0100000A 		beq	.L324
2714:../../Source/Kernel/rme_kernel.c ****     {
2715:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2716:../../Source/Kernel/rme_kernel.c **** 
2717:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5137              		.loc 1 2717 16
 5138 0228 6630E0E3 		mvn	r3, #102
 5139 022c 520000EA 		b	.L312
 5140              	.L324:
2718:../../Source/Kernel/rme_kernel.c ****     }
2719:../../Source/Kernel/rme_kernel.c ****     else
2720:../../Source/Kernel/rme_kernel.c ****     {
2721:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2722:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2723:../../Source/Kernel/rme_kernel.c ****     }
2724:../../Source/Kernel/rme_kernel.c **** 
2725:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2726:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 5141              		.loc 1 2726 5
 5142 0230 0C301BE5 		ldr	r3, [fp, #-12]
 5143 0234 142093E5 		ldr	r2, [r3, #20]
 5144 0238 20301BE5 		ldr	r3, [fp, #-32]
 5145 023c 030052E1 		cmp	r2, r3
 5146 0240 0100008A 		bhi	.L325
 5147              		.loc 1 2726 5 is_stmt 0 discriminator 1
 5148 0244 0230E0E3 		mvn	r3, #2
 5149              		.loc 1 2726 5
 5150 0248 4B0000EA 		b	.L312
 5151              	.L325:
 5152              		.loc 1 2726 5 discriminator 2
 5153 024c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 140


 5154 0250 8322A0E1 		lsl	r2, r3, #5
 5155 0254 0C301BE5 		ldr	r3, [fp, #-12]
 5156 0258 0C3093E5 		ldr	r3, [r3, #12]
 5157 025c 033082E0 		add	r3, r2, r3
 5158 0260 14300BE5 		str	r3, [fp, #-20]
2727:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
2728:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 5159              		.loc 1 2728 5 is_stmt 1
 5160 0264 14301BE5 		ldr	r3, [fp, #-20]
 5161 0268 0128A0E3 		mov	r2, #65536
 5162 026c 0010A0E3 		mov	r1, #0
 5163 0270 0300A0E1 		mov	r0, r3
 5164 0274 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 5165 0278 0030A0E1 		mov	r3, r0
 5166              		.loc 1 2728 5 is_stmt 0 discriminator 1
 5167 027c 000053E3 		cmp	r3, #0
 5168 0280 0100001A 		bne	.L326
 5169 0284 0430E0E3 		mvn	r3, #4
 5170              		.loc 1 2728 5
 5171 0288 3B0000EA 		b	.L312
 5172              	.L326:
 5173              		.loc 1 2728 5 discriminator 2
 5174 028c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 5175 0290 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 5176 0294 002093E5 		ldr	r2, [r3]
 5177 0298 14301BE5 		ldr	r3, [fp, #-20]
 5178 029c 102083E5 		str	r2, [r3, #16]
2729:../../Source/Kernel/rme_kernel.c **** 
2730:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top level? */
2731:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 5179              		.loc 1 2731 7 is_stmt 1
 5180 02a0 08309BE5 		ldr	r3, [fp, #8]
 5181 02a4 000053E3 		cmp	r3, #0
 5182 02a8 0400000A 		beq	.L327
2732:../../Source/Kernel/rme_kernel.c ****     {
2733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2734:../../Source/Kernel/rme_kernel.c ****         
2735:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 5183              		.loc 1 2735 19
 5184 02ac 0420A0E3 		mov	r2, #4
 5185 02b0 10309BE5 		ldr	r3, [fp, #16]
 5186 02b4 1233A0E1 		lsl	r3, r2, r3
 5187 02b8 08300BE5 		str	r3, [fp, #-8]
 5188 02bc 030000EA 		b	.L328
 5189              	.L327:
2736:../../Source/Kernel/rme_kernel.c ****     }
2737:../../Source/Kernel/rme_kernel.c ****     else
2738:../../Source/Kernel/rme_kernel.c ****     {
2739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2740:../../Source/Kernel/rme_kernel.c ****         
2741:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 5190              		.loc 1 2741 19
 5191 02c0 0420A0E3 		mov	r2, #4
 5192 02c4 10309BE5 		ldr	r3, [fp, #16]
 5193 02c8 1233A0E1 		lsl	r3, r2, r3
 5194 02cc 08300BE5 		str	r3, [fp, #-8]
 5195              	.L328:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 141


2742:../../Source/Kernel/rme_kernel.c ****     }
2743:../../Source/Kernel/rme_kernel.c ****     
2744:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
2745:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr, Table_Size)!=0)
 5196              		.loc 1 2745 8
 5197 02d0 08101BE5 		ldr	r1, [fp, #-8]
 5198 02d4 24001BE5 		ldr	r0, [fp, #-36]
 5199 02d8 FEFFFFEB 		bl	_RME_Kot_Mark
 5200 02dc 0030A0E1 		mov	r3, r0
 5201              		.loc 1 2745 7 discriminator 1
 5202 02e0 000053E3 		cmp	r3, #0
 5203 02e4 0500000A 		beq	.L329
2746:../../Source/Kernel/rme_kernel.c ****     {
2747:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2748:../../Source/Kernel/rme_kernel.c ****     
2749:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 5204              		.loc 1 2749 9
 5205 02e8 14301BE5 		ldr	r3, [fp, #-20]
 5206 02ec 0010A0E3 		mov	r1, #0
 5207 02f0 0300A0E1 		mov	r0, r3
 5208 02f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
2750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 5209              		.loc 1 2750 16
 5210 02f8 0330E0E3 		mvn	r3, #3
 5211 02fc 1E0000EA 		b	.L312
 5212              	.L329:
2751:../../Source/Kernel/rme_kernel.c ****     }
2752:../../Source/Kernel/rme_kernel.c ****     else
2753:../../Source/Kernel/rme_kernel.c ****     {
2754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2756:../../Source/Kernel/rme_kernel.c ****     }
2757:../../Source/Kernel/rme_kernel.c ****     
2758:../../Source/Kernel/rme_kernel.c ****     /* Header init */
2759:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 5213              		.loc 1 2759 27
 5214 0300 14301BE5 		ldr	r3, [fp, #-20]
 5215 0304 0020A0E3 		mov	r2, #0
 5216 0308 042083E5 		str	r2, [r3, #4]
2760:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 5217              		.loc 1 2760 25
 5218 030c 14301BE5 		ldr	r3, [fp, #-20]
 5219 0310 24201BE5 		ldr	r2, [fp, #-36]
 5220 0314 0C2083E5 		str	r2, [r3, #12]
2761:../../Source/Kernel/rme_kernel.c ****     /* Set the property of the page table to only act as source and creating process */
2762:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ADD_SRC|
 5221              		.loc 1 2762 23
 5222 0318 14201BE5 		ldr	r2, [fp, #-20]
 5223 031c C130A0E3 		mov	r3, #193
 5224 0320 F03F4FE3 		movt	r3, 65520
 5225 0324 083082E5 		str	r3, [r2, #8]
2763:../../Source/Kernel/rme_kernel.c ****                        RME_PGT_FLAG_PRC_CRT|RME_PGT_FLAG_PRC_PGT;
2764:../../Source/Kernel/rme_kernel.c ****     
2765:../../Source/Kernel/rme_kernel.c ****     /* Info init */
2766:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 5226              		.loc 1 2766 23
 5227 0328 04209BE5 		ldr	r2, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 142


 5228 032c 08309BE5 		ldr	r3, [fp, #8]
 5229 0330 032082E1 		orr	r2, r2, r3
 5230              		.loc 1 2766 18
 5231 0334 14301BE5 		ldr	r3, [fp, #-20]
 5232 0338 182083E5 		str	r2, [r3, #24]
2767:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 5233              		.loc 1 2767 20
 5234 033c 0C309BE5 		ldr	r3, [fp, #12]
 5235 0340 0328A0E1 		lsl	r2, r3, #16
 5236 0344 10309BE5 		ldr	r3, [fp, #16]
 5237 0348 032082E1 		orr	r2, r2, r3
 5238              		.loc 1 2767 19
 5239 034c 14301BE5 		ldr	r3, [fp, #-20]
 5240 0350 142083E5 		str	r2, [r3, #20]
2768:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 5241              		.loc 1 2768 18
 5242 0354 14301BE5 		ldr	r3, [fp, #-20]
 5243 0358 0020A0E3 		mov	r2, #0
 5244 035c 1C2083E5 		str	r2, [r3, #28]
2769:../../Source/Kernel/rme_kernel.c **** 
2770:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
2771:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 5245              		.loc 1 2771 8
 5246 0360 14001BE5 		ldr	r0, [fp, #-20]
 5247 0364 FEFFFFEB 		bl	__RME_Pgt_Init
2772:../../Source/Kernel/rme_kernel.c ****     {
2773:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2774:../../Source/Kernel/rme_kernel.c ****         
2775:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
2776:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr, Table_Size)==0);
2777:../../Source/Kernel/rme_kernel.c **** 
2778:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
2779:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
2780:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
2781:../../Source/Kernel/rme_kernel.c ****     }
2782:../../Source/Kernel/rme_kernel.c ****     else
2783:../../Source/Kernel/rme_kernel.c ****     {
2784:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2785:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2786:../../Source/Kernel/rme_kernel.c ****     }
2787:../../Source/Kernel/rme_kernel.c **** 
2788:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 5248              		.loc 1 2789 5
 5249 0368 14301BE5 		ldr	r3, [fp, #-20]
 5250 036c 0113A0E3 		mov	r1, #67108864
 5251 0370 0300A0E1 		mov	r0, r3
 5252 0374 FEFFFFEB 		bl	__RME_A7A_Write_Release
2790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
2791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
2793:../../Source/Kernel/rme_kernel.c **** 
2794:../../Source/Kernel/rme_kernel.c ****     return 0;
 5253              		.loc 1 2794 12
 5254 0378 0030A0E3 		mov	r3, #0
 5255              	.L312:
2795:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 143


 5256              		.loc 1 2795 1
 5257 037c 0300A0E1 		mov	r0, r3
 5258 0380 04D04BE2 		sub	sp, fp, #4
 5259              		.cfi_def_cfa 13, 8
 5260              		@ sp needed
 5261 0384 0088BDE8 		pop	{fp, pc}
 5262              		.cfi_endproc
 5263              	.LFE29:
 5265              		.section	.rodata
 5266 0075 000000   		.align	2
 5267              	.LC9:
 5268 0078 0D0A6D61 		.ascii	"\015\012mapping range and the granularity is not al"
 5268      7070696E 
 5268      67207261 
 5268      6E676520 
 5268      616E6420 
 5269 00a5 6C6F7765 		.ascii	"lowed \000"
 5269      642000
 5270              		.align	2
 5271              	.LC10:
 5272 00ac 0D0A5468 		.ascii	"\015\012This work is not passed down to the HAL \000"
 5272      69732077 
 5272      6F726B20 
 5272      6973206E 
 5272      6F742070 
 5273              		.section	.text._RME_Pgt_Boot_Add,"ax",%progbits
 5274              		.align	2
 5275              		.global	_RME_Pgt_Boot_Add
 5276              		.syntax unified
 5277              		.arm
 5279              	_RME_Pgt_Boot_Add:
 5280              	.LFB30:
2796:../../Source/Kernel/rme_kernel.c **** #endif
2797:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Crt ********************************************/
2798:../../Source/Kernel/rme_kernel.c **** 
2799:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Add *************************************************
2800:../../Source/Kernel/rme_kernel.c **** Description : This function is exclusively used to set up the Init process's
2801:../../Source/Kernel/rme_kernel.c ****               memory mappings in the booting process. When the system has
2802:../../Source/Kernel/rme_kernel.c ****               booted, it won't possible to fabricate pages like this.
2803:../../Source/Kernel/rme_kernel.c ****               Additionally, this function will set the cap to page table's 
2804:../../Source/Kernel/rme_kernel.c ****               property as unremovable. This means that it is not allowed to
2805:../../Source/Kernel/rme_kernel.c ****               remove any pages in the directory. It will set the reference
2806:../../Source/Kernel/rme_kernel.c ****               count of the capability as 1, thus making the capability to the
2807:../../Source/Kernel/rme_kernel.c ****               initial page table undeletable.
2808:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2809:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
2810:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2811:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Paddr - The physical address to map from.
2812:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to map to.
2813:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the user page.
2814:../../Source/Kernel/rme_kernel.c **** Output      : None.
2815:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2816:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2817:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2818:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Add(struct RME_Cap_Cpt* Cpt,
2819:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt, 
2820:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Paddr,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 144


2821:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2822:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
2823:../../Source/Kernel/rme_kernel.c **** {
 5281              		.loc 1 2823 1
 5282              		.cfi_startproc
 5283              		@ args = 4, pretend = 0, frame = 32
 5284              		@ frame_needed = 1, uses_anonymous_args = 0
 5285 0000 00482DE9 		push	{fp, lr}
 5286              		.cfi_def_cfa_offset 8
 5287              		.cfi_offset 11, -8
 5288              		.cfi_offset 14, -4
 5289 0004 04B08DE2 		add	fp, sp, #4
 5290              		.cfi_def_cfa 11, 4
 5291 0008 20D04DE2 		sub	sp, sp, #32
 5292 000c 18000BE5 		str	r0, [fp, #-24]
 5293 0010 1C100BE5 		str	r1, [fp, #-28]
 5294 0014 20200BE5 		str	r2, [fp, #-32]
 5295 0018 24300BE5 		str	r3, [fp, #-36]
2824:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
2825:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2826:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord;
2827:../../Source/Kernel/rme_kernel.c ****     
2828:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2829:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 5296              		.loc 1 2829 5
 5297 001c 1C301BE5 		ldr	r3, [fp, #-28]
 5298 0020 803003E2 		and	r3, r3, #128
 5299 0024 000053E3 		cmp	r3, #0
 5300 0028 1C00001A 		bne	.L331
 5301              		.loc 1 2829 5 is_stmt 0 discriminator 1
 5302 002c 18301BE5 		ldr	r3, [fp, #-24]
 5303 0030 142093E5 		ldr	r2, [r3, #20]
 5304 0034 1C301BE5 		ldr	r3, [fp, #-28]
 5305 0038 030052E1 		cmp	r2, r3
 5306 003c 0100008A 		bhi	.L332
 5307              		.loc 1 2829 5 discriminator 3
 5308 0040 0230E0E3 		mvn	r3, #2
 5309              		.loc 1 2829 5
 5310 0044 800000EA 		b	.L333
 5311              	.L332:
 5312              		.loc 1 2829 5 discriminator 4
 5313 0048 1C301BE5 		ldr	r3, [fp, #-28]
 5314 004c 8322A0E1 		lsl	r2, r3, #5
 5315 0050 18301BE5 		ldr	r3, [fp, #-24]
 5316 0054 0C3093E5 		ldr	r3, [r3, #12]
 5317 0058 033082E0 		add	r3, r2, r3
 5318 005c 08300BE5 		str	r3, [fp, #-8]
 5319 0060 08301BE5 		ldr	r3, [fp, #-8]
 5320 0064 0300A0E1 		mov	r0, r3
 5321 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5322 006c 0C000BE5 		str	r0, [fp, #-12]
 5323              		.loc 1 2829 5 discriminator 1
 5324 0070 0C301BE5 		ldr	r3, [fp, #-12]
 5325 0074 FF3803E2 		and	r3, r3, #16711680
 5326 0078 020853E3 		cmp	r3, #131072
 5327 007c 0100001A 		bne	.L334
 5328              		.loc 1 2829 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 145


 5329 0080 0830E0E3 		mvn	r3, #8
 5330              		.loc 1 2829 5
 5331 0084 700000EA 		b	.L333
 5332              	.L334:
 5333              		.loc 1 2829 5 discriminator 6
 5334 0088 0C301BE5 		ldr	r3, [fp, #-12]
 5335 008c 233CA0E1 		lsr	r3, r3, #24
 5336 0090 040053E3 		cmp	r3, #4
 5337 0094 3F00000A 		beq	.L335
 5338              		.loc 1 2829 5 discriminator 7
 5339 0098 0130E0E3 		mvn	r3, #1
 5340              		.loc 1 2829 5
 5341 009c 6A0000EA 		b	.L333
 5342              	.L331:
 5343              		.loc 1 2829 5 discriminator 2
 5344 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 5345 00a4 2324A0E1 		lsr	r2, r3, #8
 5346 00a8 18301BE5 		ldr	r3, [fp, #-24]
 5347 00ac 143093E5 		ldr	r3, [r3, #20]
 5348 00b0 030052E1 		cmp	r2, r3
 5349 00b4 0100003A 		bcc	.L336
 5350              		.loc 1 2829 5 discriminator 8
 5351 00b8 0230E0E3 		mvn	r3, #2
 5352              		.loc 1 2829 5
 5353 00bc 620000EA 		b	.L333
 5354              	.L336:
 5355              		.loc 1 2829 5 discriminator 9
 5356 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 5357 00c4 2334A0E1 		lsr	r3, r3, #8
 5358 00c8 8322A0E1 		lsl	r2, r3, #5
 5359 00cc 18301BE5 		ldr	r3, [fp, #-24]
 5360 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5361 00d4 033082E0 		add	r3, r2, r3
 5362 00d8 08300BE5 		str	r3, [fp, #-8]
 5363 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5364 00e0 0300A0E1 		mov	r0, r3
 5365 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5366 00e8 0C000BE5 		str	r0, [fp, #-12]
 5367              		.loc 1 2829 5 discriminator 1
 5368 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 5369 00f0 FF3803E2 		and	r3, r3, #16711680
 5370 00f4 020853E3 		cmp	r3, #131072
 5371 00f8 0100001A 		bne	.L337
 5372              		.loc 1 2829 5 discriminator 10
 5373 00fc 0830E0E3 		mvn	r3, #8
 5374              		.loc 1 2829 5
 5375 0100 510000EA 		b	.L333
 5376              	.L337:
 5377              		.loc 1 2829 5 discriminator 11
 5378 0104 0C301BE5 		ldr	r3, [fp, #-12]
 5379 0108 233CA0E1 		lsr	r3, r3, #24
 5380 010c 030053E3 		cmp	r3, #3
 5381 0110 0100000A 		beq	.L338
 5382              		.loc 1 2829 5 discriminator 12
 5383 0114 0130E0E3 		mvn	r3, #1
 5384              		.loc 1 2829 5
 5385 0118 4B0000EA 		b	.L333
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 146


 5386              	.L338:
 5387              		.loc 1 2829 5 discriminator 13
 5388 011c 1C301BE5 		ldr	r3, [fp, #-28]
 5389 0120 7F2003E2 		and	r2, r3, #127
 5390 0124 08301BE5 		ldr	r3, [fp, #-8]
 5391 0128 143093E5 		ldr	r3, [r3, #20]
 5392 012c 030052E1 		cmp	r2, r3
 5393 0130 0100003A 		bcc	.L339
 5394              		.loc 1 2829 5 discriminator 14
 5395 0134 0230E0E3 		mvn	r3, #2
 5396              		.loc 1 2829 5
 5397 0138 430000EA 		b	.L333
 5398              	.L339:
 5399              		.loc 1 2829 5 discriminator 15
 5400 013c 1C301BE5 		ldr	r3, [fp, #-28]
 5401 0140 7F3003E2 		and	r3, r3, #127
 5402 0144 8322A0E1 		lsl	r2, r3, #5
 5403 0148 08301BE5 		ldr	r3, [fp, #-8]
 5404 014c 0C3093E5 		ldr	r3, [r3, #12]
 5405 0150 033082E0 		add	r3, r2, r3
 5406 0154 08300BE5 		str	r3, [fp, #-8]
 5407 0158 08301BE5 		ldr	r3, [fp, #-8]
 5408 015c 0300A0E1 		mov	r0, r3
 5409 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5410 0164 0C000BE5 		str	r0, [fp, #-12]
 5411              		.loc 1 2829 5 discriminator 1
 5412 0168 0C301BE5 		ldr	r3, [fp, #-12]
 5413 016c FF3803E2 		and	r3, r3, #16711680
 5414 0170 020853E3 		cmp	r3, #131072
 5415 0174 0100001A 		bne	.L340
 5416              		.loc 1 2829 5 discriminator 16
 5417 0178 0830E0E3 		mvn	r3, #8
 5418              		.loc 1 2829 5
 5419 017c 320000EA 		b	.L333
 5420              	.L340:
 5421              		.loc 1 2829 5 discriminator 17
 5422 0180 0C301BE5 		ldr	r3, [fp, #-12]
 5423 0184 233CA0E1 		lsr	r3, r3, #24
 5424 0188 040053E3 		cmp	r3, #4
 5425 018c 0100000A 		beq	.L335
 5426              		.loc 1 2829 5 discriminator 18
 5427 0190 0130E0E3 		mvn	r3, #1
 5428              		.loc 1 2829 5
 5429 0194 2C0000EA 		b	.L333
 5430              	.L335:
2830:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);    
2831:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen, but don't check their properties */
2832:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,0U);
2833:../../Source/Kernel/rme_kernel.c **** 
2834:../../Source/Kernel/rme_kernel.c ****     Szord=RME_PGT_SZORD(Pgt_Op->Order);
 5431              		.loc 1 2834 11 is_stmt 1
 5432 0198 08301BE5 		ldr	r3, [fp, #-8]
 5433 019c 143093E5 		ldr	r3, [r3, #20]
 5434              		.loc 1 2834 10
 5435 01a0 2338A0E1 		lsr	r3, r3, #16
 5436 01a4 10300BE5 		str	r3, [fp, #-16]
2835:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 147


2836:../../Source/Kernel/rme_kernel.c ****     /* Check if we force identical mapping */
2837:../../Source/Kernel/rme_kernel.c ****     if(Szord==RME_WORD_BIT)
2838:../../Source/Kernel/rme_kernel.c ****     {
2839:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2840:../../Source/Kernel/rme_kernel.c ****         
2841:../../Source/Kernel/rme_kernel.c ****         if((Paddr!=0U)||(Pos!=0U))
2842:../../Source/Kernel/rme_kernel.c ****         {
2843:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2844:../../Source/Kernel/rme_kernel.c ****             
2845:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2846:../../Source/Kernel/rme_kernel.c ****         }
2847:../../Source/Kernel/rme_kernel.c ****         else
2848:../../Source/Kernel/rme_kernel.c ****         {
2849:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2850:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2851:../../Source/Kernel/rme_kernel.c ****         }
2852:../../Source/Kernel/rme_kernel.c ****     }
2853:../../Source/Kernel/rme_kernel.c ****     else if(Paddr!=(RME_PGT_BASE(Pgt_Op->Base)+(Pos<<Szord)))
2854:../../Source/Kernel/rme_kernel.c ****     {
2855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2856:../../Source/Kernel/rme_kernel.c ****         
2857:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
2858:../../Source/Kernel/rme_kernel.c ****     }
2859:../../Source/Kernel/rme_kernel.c ****     else
2860:../../Source/Kernel/rme_kernel.c ****     {
2861:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2862:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2863:../../Source/Kernel/rme_kernel.c ****     }
2864:../../Source/Kernel/rme_kernel.c **** #endif
2865:../../Source/Kernel/rme_kernel.c **** 
2866:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range and the granularity is allowed */
2867:../../Source/Kernel/rme_kernel.c ****     if(((Pos>>RME_PGT_NMORD(Pgt_Op->Order))!=0U)||
 5437              		.loc 1 2867 15
 5438 01a8 08301BE5 		ldr	r3, [fp, #-8]
 5439 01ac 143093E5 		ldr	r3, [r3, #20]
 5440 01b0 7330FFE6 		uxth	r3, r3
 5441              		.loc 1 2867 13
 5442 01b4 24201BE5 		ldr	r2, [fp, #-36]
 5443 01b8 3233A0E1 		lsr	r3, r2, r3
 5444              		.loc 1 2867 7
 5445 01bc 000053E3 		cmp	r3, #0
 5446 01c0 0700001A 		bne	.L341
2868:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5447              		.loc 1 2868 16
 5448 01c4 10301BE5 		ldr	r3, [fp, #-16]
 5449 01c8 203063E2 		rsb	r3, r3, #32
 5450 01cc 0020E0E3 		mvn	r2, #0
 5451 01d0 3223A0E1 		lsr	r2, r2, r3
 5452              		.loc 1 2868 15
 5453 01d4 20301BE5 		ldr	r3, [fp, #-32]
 5454 01d8 023003E0 		and	r3, r3, r2
2867:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5455              		.loc 1 2867 49 discriminator 1
 5456 01dc 000053E3 		cmp	r3, #0
 5457 01e0 0400000A 		beq	.L342
 5458              	.L341:
2869:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 148


2870:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2871:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nmapping range and the granularity is not allowed ");
 5459              		.loc 1 2871 9
 5460 01e4 000000E3 		movw	r0, #:lower16:.LC9
 5461 01e8 000040E3 		movt	r0, #:upper16:.LC9
 5462 01ec FEFFFFEB 		bl	RME_Str_Print
2872:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5463              		.loc 1 2872 16
 5464 01f0 6430E0E3 		mvn	r3, #100
 5465 01f4 140000EA 		b	.L333
 5466              	.L342:
2873:../../Source/Kernel/rme_kernel.c ****     }
2874:../../Source/Kernel/rme_kernel.c ****     else
2875:../../Source/Kernel/rme_kernel.c ****     {
2876:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2877:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2878:../../Source/Kernel/rme_kernel.c ****     }
2879:../../Source/Kernel/rme_kernel.c **** 
2880:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
2881:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
2882:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag)!=0)
 5467              		.loc 1 2882 8
 5468 01f8 04309BE5 		ldr	r3, [fp, #4]
 5469 01fc 24201BE5 		ldr	r2, [fp, #-36]
 5470 0200 20101BE5 		ldr	r1, [fp, #-32]
 5471 0204 08001BE5 		ldr	r0, [fp, #-8]
 5472 0208 FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5473 020c 0030A0E1 		mov	r3, r0
 5474              		.loc 1 2882 7 discriminator 1
 5475 0210 000053E3 		cmp	r3, #0
 5476 0214 0B00000A 		beq	.L343
 5477              	.LBB2:
2883:../../Source/Kernel/rme_kernel.c ****     {
2884:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2885:../../Source/Kernel/rme_kernel.c ****         int a=__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag);
 5478              		.loc 1 2885 15
 5479 0218 04309BE5 		ldr	r3, [fp, #4]
 5480 021c 24201BE5 		ldr	r2, [fp, #-36]
 5481 0220 20101BE5 		ldr	r1, [fp, #-32]
 5482 0224 08001BE5 		ldr	r0, [fp, #-8]
 5483 0228 FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5484 022c 0030A0E1 		mov	r3, r0
 5485              		.loc 1 2885 13 discriminator 1
 5486 0230 14300BE5 		str	r3, [fp, #-20]
2886:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nThis work is not passed down to the HAL ");
 5487              		.loc 1 2886 9
 5488 0234 000000E3 		movw	r0, #:lower16:.LC10
 5489 0238 000040E3 		movt	r0, #:upper16:.LC10
 5490 023c FEFFFFEB 		bl	RME_Str_Print
2887:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 5491              		.loc 1 2887 16
 5492 0240 6530E0E3 		mvn	r3, #101
 5493 0244 000000EA 		b	.L333
 5494              	.L343:
 5495              	.LBE2:
2888:../../Source/Kernel/rme_kernel.c ****     }
2889:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 149


2890:../../Source/Kernel/rme_kernel.c ****     {
2891:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2892:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2893:../../Source/Kernel/rme_kernel.c ****     }
2894:../../Source/Kernel/rme_kernel.c **** 
2895:../../Source/Kernel/rme_kernel.c ****     return 0;
 5496              		.loc 1 2895 12
 5497 0248 0030A0E3 		mov	r3, #0
 5498              	.L333:
2896:../../Source/Kernel/rme_kernel.c **** }
 5499              		.loc 1 2896 1
 5500 024c 0300A0E1 		mov	r0, r3
 5501 0250 04D04BE2 		sub	sp, fp, #4
 5502              		.cfi_def_cfa 13, 8
 5503              		@ sp needed
 5504 0254 0088BDE8 		pop	{fp, pc}
 5505              		.cfi_endproc
 5506              	.LFE30:
 5508              		.section	.text._RME_Pgt_Boot_Con,"ax",%progbits
 5509              		.align	2
 5510              		.global	_RME_Pgt_Boot_Con
 5511              		.syntax unified
 5512              		.arm
 5514              	_RME_Pgt_Boot_Con:
 5515              	.LFB31:
2897:../../Source/Kernel/rme_kernel.c **** #endif
2898:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Add ********************************************/
2899:../../Source/Kernel/rme_kernel.c **** 
2900:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Con *************************************************
2901:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table from the parent page table at boot-time.
2902:../../Source/Kernel/rme_kernel.c ****               This does not check flags.
2903:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2904:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
2905:../../Source/Kernel/rme_kernel.c ****                                          table.
2906:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
2907:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
2908:../../Source/Kernel/rme_kernel.c ****                               page table to.
2909:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
2910:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
2911:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
2912:../../Source/Kernel/rme_kernel.c **** Output      : None.
2913:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2914:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2915:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2916:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Con(struct RME_Cap_Cpt* Cpt,
2917:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Parent,
2918:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2919:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Child,
2920:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag_Child)
2921:../../Source/Kernel/rme_kernel.c **** {
 5516              		.loc 1 2921 1
 5517              		.cfi_startproc
 5518              		@ args = 4, pretend = 0, frame = 40
 5519              		@ frame_needed = 1, uses_anonymous_args = 0
 5520 0000 00482DE9 		push	{fp, lr}
 5521              		.cfi_def_cfa_offset 8
 5522              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 150


 5523              		.cfi_offset 14, -4
 5524 0004 04B08DE2 		add	fp, sp, #4
 5525              		.cfi_def_cfa 11, 4
 5526 0008 28D04DE2 		sub	sp, sp, #40
 5527 000c 20000BE5 		str	r0, [fp, #-32]
 5528 0010 24100BE5 		str	r1, [fp, #-36]
 5529 0014 28200BE5 		str	r2, [fp, #-40]
 5530 0018 2C300BE5 		str	r3, [fp, #-44]
2922:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
2923:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
2924:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
2925:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2926:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
2927:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
2928:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2929:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
2930:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
2931:../../Source/Kernel/rme_kernel.c **** #endif
2932:../../Source/Kernel/rme_kernel.c ****     
2933:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2934:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 5531              		.loc 1 2934 5
 5532 001c 24301BE5 		ldr	r3, [fp, #-36]
 5533 0020 803003E2 		and	r3, r3, #128
 5534 0024 000053E3 		cmp	r3, #0
 5535 0028 1C00001A 		bne	.L345
 5536              		.loc 1 2934 5 is_stmt 0 discriminator 1
 5537 002c 20301BE5 		ldr	r3, [fp, #-32]
 5538 0030 142093E5 		ldr	r2, [r3, #20]
 5539 0034 24301BE5 		ldr	r3, [fp, #-36]
 5540 0038 030052E1 		cmp	r2, r3
 5541 003c 0100008A 		bhi	.L346
 5542              		.loc 1 2934 5 discriminator 3
 5543 0040 0230E0E3 		mvn	r3, #2
 5544              		.loc 1 2934 5
 5545 0044 F70000EA 		b	.L347
 5546              	.L346:
 5547              		.loc 1 2934 5 discriminator 4
 5548 0048 24301BE5 		ldr	r3, [fp, #-36]
 5549 004c 8322A0E1 		lsl	r2, r3, #5
 5550 0050 20301BE5 		ldr	r3, [fp, #-32]
 5551 0054 0C3093E5 		ldr	r3, [r3, #12]
 5552 0058 033082E0 		add	r3, r2, r3
 5553 005c 08300BE5 		str	r3, [fp, #-8]
 5554 0060 08301BE5 		ldr	r3, [fp, #-8]
 5555 0064 0300A0E1 		mov	r0, r3
 5556 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5557 006c 10000BE5 		str	r0, [fp, #-16]
 5558              		.loc 1 2934 5 discriminator 1
 5559 0070 10301BE5 		ldr	r3, [fp, #-16]
 5560 0074 FF3803E2 		and	r3, r3, #16711680
 5561 0078 020853E3 		cmp	r3, #131072
 5562 007c 0100001A 		bne	.L348
 5563              		.loc 1 2934 5 discriminator 5
 5564 0080 0830E0E3 		mvn	r3, #8
 5565              		.loc 1 2934 5
 5566 0084 E70000EA 		b	.L347
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 151


 5567              	.L348:
 5568              		.loc 1 2934 5 discriminator 6
 5569 0088 10301BE5 		ldr	r3, [fp, #-16]
 5570 008c 233CA0E1 		lsr	r3, r3, #24
 5571 0090 040053E3 		cmp	r3, #4
 5572 0094 3F00000A 		beq	.L349
 5573              		.loc 1 2934 5 discriminator 7
 5574 0098 0130E0E3 		mvn	r3, #1
 5575              		.loc 1 2934 5
 5576 009c E10000EA 		b	.L347
 5577              	.L345:
 5578              		.loc 1 2934 5 discriminator 2
 5579 00a0 24301BE5 		ldr	r3, [fp, #-36]
 5580 00a4 2324A0E1 		lsr	r2, r3, #8
 5581 00a8 20301BE5 		ldr	r3, [fp, #-32]
 5582 00ac 143093E5 		ldr	r3, [r3, #20]
 5583 00b0 030052E1 		cmp	r2, r3
 5584 00b4 0100003A 		bcc	.L350
 5585              		.loc 1 2934 5 discriminator 8
 5586 00b8 0230E0E3 		mvn	r3, #2
 5587              		.loc 1 2934 5
 5588 00bc D90000EA 		b	.L347
 5589              	.L350:
 5590              		.loc 1 2934 5 discriminator 9
 5591 00c0 24301BE5 		ldr	r3, [fp, #-36]
 5592 00c4 2334A0E1 		lsr	r3, r3, #8
 5593 00c8 8322A0E1 		lsl	r2, r3, #5
 5594 00cc 20301BE5 		ldr	r3, [fp, #-32]
 5595 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5596 00d4 033082E0 		add	r3, r2, r3
 5597 00d8 08300BE5 		str	r3, [fp, #-8]
 5598 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5599 00e0 0300A0E1 		mov	r0, r3
 5600 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5601 00e8 10000BE5 		str	r0, [fp, #-16]
 5602              		.loc 1 2934 5 discriminator 1
 5603 00ec 10301BE5 		ldr	r3, [fp, #-16]
 5604 00f0 FF3803E2 		and	r3, r3, #16711680
 5605 00f4 020853E3 		cmp	r3, #131072
 5606 00f8 0100001A 		bne	.L351
 5607              		.loc 1 2934 5 discriminator 10
 5608 00fc 0830E0E3 		mvn	r3, #8
 5609              		.loc 1 2934 5
 5610 0100 C80000EA 		b	.L347
 5611              	.L351:
 5612              		.loc 1 2934 5 discriminator 11
 5613 0104 10301BE5 		ldr	r3, [fp, #-16]
 5614 0108 233CA0E1 		lsr	r3, r3, #24
 5615 010c 030053E3 		cmp	r3, #3
 5616 0110 0100000A 		beq	.L352
 5617              		.loc 1 2934 5 discriminator 12
 5618 0114 0130E0E3 		mvn	r3, #1
 5619              		.loc 1 2934 5
 5620 0118 C20000EA 		b	.L347
 5621              	.L352:
 5622              		.loc 1 2934 5 discriminator 13
 5623 011c 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 152


 5624 0120 7F2003E2 		and	r2, r3, #127
 5625 0124 08301BE5 		ldr	r3, [fp, #-8]
 5626 0128 143093E5 		ldr	r3, [r3, #20]
 5627 012c 030052E1 		cmp	r2, r3
 5628 0130 0100003A 		bcc	.L353
 5629              		.loc 1 2934 5 discriminator 14
 5630 0134 0230E0E3 		mvn	r3, #2
 5631              		.loc 1 2934 5
 5632 0138 BA0000EA 		b	.L347
 5633              	.L353:
 5634              		.loc 1 2934 5 discriminator 15
 5635 013c 24301BE5 		ldr	r3, [fp, #-36]
 5636 0140 7F3003E2 		and	r3, r3, #127
 5637 0144 8322A0E1 		lsl	r2, r3, #5
 5638 0148 08301BE5 		ldr	r3, [fp, #-8]
 5639 014c 0C3093E5 		ldr	r3, [r3, #12]
 5640 0150 033082E0 		add	r3, r2, r3
 5641 0154 08300BE5 		str	r3, [fp, #-8]
 5642 0158 08301BE5 		ldr	r3, [fp, #-8]
 5643 015c 0300A0E1 		mov	r0, r3
 5644 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5645 0164 10000BE5 		str	r0, [fp, #-16]
 5646              		.loc 1 2934 5 discriminator 1
 5647 0168 10301BE5 		ldr	r3, [fp, #-16]
 5648 016c FF3803E2 		and	r3, r3, #16711680
 5649 0170 020853E3 		cmp	r3, #131072
 5650 0174 0100001A 		bne	.L354
 5651              		.loc 1 2934 5 discriminator 16
 5652 0178 0830E0E3 		mvn	r3, #8
 5653              		.loc 1 2934 5
 5654 017c A90000EA 		b	.L347
 5655              	.L354:
 5656              		.loc 1 2934 5 discriminator 17
 5657 0180 10301BE5 		ldr	r3, [fp, #-16]
 5658 0184 233CA0E1 		lsr	r3, r3, #24
 5659 0188 040053E3 		cmp	r3, #4
 5660 018c 0100000A 		beq	.L349
 5661              		.loc 1 2934 5 discriminator 18
 5662 0190 0130E0E3 		mvn	r3, #1
 5663              		.loc 1 2934 5
 5664 0194 A30000EA 		b	.L347
 5665              	.L349:
2935:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
2936:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 5666              		.loc 1 2936 5 is_stmt 1
 5667 0198 2C301BE5 		ldr	r3, [fp, #-44]
 5668 019c 803003E2 		and	r3, r3, #128
 5669 01a0 000053E3 		cmp	r3, #0
 5670 01a4 1C00001A 		bne	.L355
 5671              		.loc 1 2936 5 is_stmt 0 discriminator 1
 5672 01a8 20301BE5 		ldr	r3, [fp, #-32]
 5673 01ac 142093E5 		ldr	r2, [r3, #20]
 5674 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 5675 01b4 030052E1 		cmp	r2, r3
 5676 01b8 0100008A 		bhi	.L356
 5677              		.loc 1 2936 5 discriminator 3
 5678 01bc 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 153


 5679              		.loc 1 2936 5
 5680 01c0 980000EA 		b	.L347
 5681              	.L356:
 5682              		.loc 1 2936 5 discriminator 4
 5683 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 5684 01c8 8322A0E1 		lsl	r2, r3, #5
 5685 01cc 20301BE5 		ldr	r3, [fp, #-32]
 5686 01d0 0C3093E5 		ldr	r3, [r3, #12]
 5687 01d4 033082E0 		add	r3, r2, r3
 5688 01d8 0C300BE5 		str	r3, [fp, #-12]
 5689 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 5690 01e0 0300A0E1 		mov	r0, r3
 5691 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5692 01e8 10000BE5 		str	r0, [fp, #-16]
 5693              		.loc 1 2936 5 discriminator 1
 5694 01ec 10301BE5 		ldr	r3, [fp, #-16]
 5695 01f0 FF3803E2 		and	r3, r3, #16711680
 5696 01f4 020853E3 		cmp	r3, #131072
 5697 01f8 0100001A 		bne	.L357
 5698              		.loc 1 2936 5 discriminator 5
 5699 01fc 0830E0E3 		mvn	r3, #8
 5700              		.loc 1 2936 5
 5701 0200 880000EA 		b	.L347
 5702              	.L357:
 5703              		.loc 1 2936 5 discriminator 6
 5704 0204 10301BE5 		ldr	r3, [fp, #-16]
 5705 0208 233CA0E1 		lsr	r3, r3, #24
 5706 020c 040053E3 		cmp	r3, #4
 5707 0210 3F00000A 		beq	.L358
 5708              		.loc 1 2936 5 discriminator 7
 5709 0214 0130E0E3 		mvn	r3, #1
 5710              		.loc 1 2936 5
 5711 0218 820000EA 		b	.L347
 5712              	.L355:
 5713              		.loc 1 2936 5 discriminator 2
 5714 021c 2C301BE5 		ldr	r3, [fp, #-44]
 5715 0220 2324A0E1 		lsr	r2, r3, #8
 5716 0224 20301BE5 		ldr	r3, [fp, #-32]
 5717 0228 143093E5 		ldr	r3, [r3, #20]
 5718 022c 030052E1 		cmp	r2, r3
 5719 0230 0100003A 		bcc	.L359
 5720              		.loc 1 2936 5 discriminator 8
 5721 0234 0230E0E3 		mvn	r3, #2
 5722              		.loc 1 2936 5
 5723 0238 7A0000EA 		b	.L347
 5724              	.L359:
 5725              		.loc 1 2936 5 discriminator 9
 5726 023c 2C301BE5 		ldr	r3, [fp, #-44]
 5727 0240 2334A0E1 		lsr	r3, r3, #8
 5728 0244 8322A0E1 		lsl	r2, r3, #5
 5729 0248 20301BE5 		ldr	r3, [fp, #-32]
 5730 024c 0C3093E5 		ldr	r3, [r3, #12]
 5731 0250 033082E0 		add	r3, r2, r3
 5732 0254 0C300BE5 		str	r3, [fp, #-12]
 5733 0258 0C301BE5 		ldr	r3, [fp, #-12]
 5734 025c 0300A0E1 		mov	r0, r3
 5735 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 154


 5736 0264 10000BE5 		str	r0, [fp, #-16]
 5737              		.loc 1 2936 5 discriminator 1
 5738 0268 10301BE5 		ldr	r3, [fp, #-16]
 5739 026c FF3803E2 		and	r3, r3, #16711680
 5740 0270 020853E3 		cmp	r3, #131072
 5741 0274 0100001A 		bne	.L360
 5742              		.loc 1 2936 5 discriminator 10
 5743 0278 0830E0E3 		mvn	r3, #8
 5744              		.loc 1 2936 5
 5745 027c 690000EA 		b	.L347
 5746              	.L360:
 5747              		.loc 1 2936 5 discriminator 11
 5748 0280 10301BE5 		ldr	r3, [fp, #-16]
 5749 0284 233CA0E1 		lsr	r3, r3, #24
 5750 0288 030053E3 		cmp	r3, #3
 5751 028c 0100000A 		beq	.L361
 5752              		.loc 1 2936 5 discriminator 12
 5753 0290 0130E0E3 		mvn	r3, #1
 5754              		.loc 1 2936 5
 5755 0294 630000EA 		b	.L347
 5756              	.L361:
 5757              		.loc 1 2936 5 discriminator 13
 5758 0298 2C301BE5 		ldr	r3, [fp, #-44]
 5759 029c 7F2003E2 		and	r2, r3, #127
 5760 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 5761 02a4 143093E5 		ldr	r3, [r3, #20]
 5762 02a8 030052E1 		cmp	r2, r3
 5763 02ac 0100003A 		bcc	.L362
 5764              		.loc 1 2936 5 discriminator 14
 5765 02b0 0230E0E3 		mvn	r3, #2
 5766              		.loc 1 2936 5
 5767 02b4 5B0000EA 		b	.L347
 5768              	.L362:
 5769              		.loc 1 2936 5 discriminator 15
 5770 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 5771 02bc 7F3003E2 		and	r3, r3, #127
 5772 02c0 8322A0E1 		lsl	r2, r3, #5
 5773 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 5774 02c8 0C3093E5 		ldr	r3, [r3, #12]
 5775 02cc 033082E0 		add	r3, r2, r3
 5776 02d0 0C300BE5 		str	r3, [fp, #-12]
 5777 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 5778 02d8 0300A0E1 		mov	r0, r3
 5779 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5780 02e0 10000BE5 		str	r0, [fp, #-16]
 5781              		.loc 1 2936 5 discriminator 1
 5782 02e4 10301BE5 		ldr	r3, [fp, #-16]
 5783 02e8 FF3803E2 		and	r3, r3, #16711680
 5784 02ec 020853E3 		cmp	r3, #131072
 5785 02f0 0100001A 		bne	.L363
 5786              		.loc 1 2936 5 discriminator 16
 5787 02f4 0830E0E3 		mvn	r3, #8
 5788              		.loc 1 2936 5
 5789 02f8 4A0000EA 		b	.L347
 5790              	.L363:
 5791              		.loc 1 2936 5 discriminator 17
 5792 02fc 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 155


 5793 0300 233CA0E1 		lsr	r3, r3, #24
 5794 0304 040053E3 		cmp	r3, #4
 5795 0308 0100000A 		beq	.L358
 5796              		.loc 1 2936 5 discriminator 18
 5797 030c 0130E0E3 		mvn	r3, #1
 5798              		.loc 1 2936 5
 5799 0310 440000EA 		b	.L347
 5800              	.L358:
2937:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
2938:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen but don't check flags */
2939:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent,0U);
2940:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child,0U);
2941:../../Source/Kernel/rme_kernel.c ****     
2942:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
2943:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 5801              		.loc 1 2943 14 is_stmt 1
 5802 0314 08301BE5 		ldr	r3, [fp, #-8]
 5803 0318 143093E5 		ldr	r3, [r3, #20]
 5804 031c 7330FFE6 		uxth	r3, r3
 5805              		.loc 1 2943 12
 5806 0320 28201BE5 		ldr	r2, [fp, #-40]
 5807 0324 3233A0E1 		lsr	r3, r2, r3
 5808              		.loc 1 2943 7
 5809 0328 000053E3 		cmp	r3, #0
 5810 032c 0100000A 		beq	.L364
2944:../../Source/Kernel/rme_kernel.c ****     {
2945:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2946:../../Source/Kernel/rme_kernel.c ****         
2947:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5811              		.loc 1 2947 16
 5812 0330 6430E0E3 		mvn	r3, #100
 5813 0334 3B0000EA 		b	.L347
 5814              	.L364:
2948:../../Source/Kernel/rme_kernel.c ****     }
2949:../../Source/Kernel/rme_kernel.c ****     else
2950:../../Source/Kernel/rme_kernel.c ****     {
2951:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2952:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2953:../../Source/Kernel/rme_kernel.c ****     }
2954:../../Source/Kernel/rme_kernel.c ****     
2955:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
2956:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 5815              		.loc 1 2956 17
 5816 0338 0C301BE5 		ldr	r3, [fp, #-12]
 5817 033c 143093E5 		ldr	r3, [r3, #20]
 5818 0340 7320FFE6 		uxth	r2, r3
 5819              		.loc 1 2956 49
 5820 0344 0C301BE5 		ldr	r3, [fp, #-12]
 5821 0348 143093E5 		ldr	r3, [r3, #20]
 5822 034c 2338A0E1 		lsr	r3, r3, #16
 5823              		.loc 1 2956 16
 5824 0350 033082E0 		add	r3, r2, r3
 5825 0354 14300BE5 		str	r3, [fp, #-20]
2957:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 5826              		.loc 1 2957 18
 5827 0358 08301BE5 		ldr	r3, [fp, #-8]
 5828 035c 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 156


 5829              		.loc 1 2957 17
 5830 0360 2338A0E1 		lsr	r3, r3, #16
 5831 0364 18300BE5 		str	r3, [fp, #-24]
2958:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 5832              		.loc 1 2958 7
 5833 0368 18201BE5 		ldr	r2, [fp, #-24]
 5834 036c 14301BE5 		ldr	r3, [fp, #-20]
 5835 0370 030052E1 		cmp	r2, r3
 5836 0374 0100002A 		bcs	.L365
2959:../../Source/Kernel/rme_kernel.c ****     {
2960:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2961:../../Source/Kernel/rme_kernel.c ****         
2962:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5837              		.loc 1 2962 16
 5838 0378 6430E0E3 		mvn	r3, #100
 5839 037c 290000EA 		b	.L347
 5840              	.L365:
2963:../../Source/Kernel/rme_kernel.c ****     }
2964:../../Source/Kernel/rme_kernel.c ****     else
2965:../../Source/Kernel/rme_kernel.c ****     {
2966:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2967:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2968:../../Source/Kernel/rme_kernel.c ****     }
2969:../../Source/Kernel/rme_kernel.c **** 
2970:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2971:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
2972:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
2973:../../Source/Kernel/rme_kernel.c ****     {
2974:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2975:../../Source/Kernel/rme_kernel.c ****         
2976:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
2977:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
2978:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
2979:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
2980:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
2981:../../Source/Kernel/rme_kernel.c ****         {
2982:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2983:../../Source/Kernel/rme_kernel.c ****             
2984:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2985:../../Source/Kernel/rme_kernel.c ****         }
2986:../../Source/Kernel/rme_kernel.c ****         else
2987:../../Source/Kernel/rme_kernel.c ****         {
2988:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2989:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2990:../../Source/Kernel/rme_kernel.c ****         }
2991:../../Source/Kernel/rme_kernel.c ****         
2992:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
2993:../../Source/Kernel/rme_kernel.c ****         
2994:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
2995:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
2996:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
2997:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
2998:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
2999:../../Source/Kernel/rme_kernel.c ****         {
3000:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3001:../../Source/Kernel/rme_kernel.c ****             
3002:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 157


3003:../../Source/Kernel/rme_kernel.c ****             {
3004:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3005:../../Source/Kernel/rme_kernel.c **** 
3006:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3007:../../Source/Kernel/rme_kernel.c ****             }
3008:../../Source/Kernel/rme_kernel.c ****             else
3009:../../Source/Kernel/rme_kernel.c ****             {
3010:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3011:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3012:../../Source/Kernel/rme_kernel.c ****             }
3013:../../Source/Kernel/rme_kernel.c ****         }
3014:../../Source/Kernel/rme_kernel.c ****         else
3015:../../Source/Kernel/rme_kernel.c ****         {
3016:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3017:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3018:../../Source/Kernel/rme_kernel.c ****         }
3019:../../Source/Kernel/rme_kernel.c ****     }
3020:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, no need to check */
3021:../../Source/Kernel/rme_kernel.c ****     else
3022:../../Source/Kernel/rme_kernel.c ****     {
3023:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3024:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3025:../../Source/Kernel/rme_kernel.c ****     }
3026:../../Source/Kernel/rme_kernel.c **** #else
3027:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3028:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 5841              		.loc 1 3028 7
 5842 0380 18201BE5 		ldr	r2, [fp, #-24]
 5843 0384 14301BE5 		ldr	r3, [fp, #-20]
 5844 0388 030052E1 		cmp	r2, r3
 5845 038c 0100000A 		beq	.L366
3029:../../Source/Kernel/rme_kernel.c ****     {
3030:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3031:../../Source/Kernel/rme_kernel.c **** 
3032:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5846              		.loc 1 3032 16
 5847 0390 6430E0E3 		mvn	r3, #100
 5848 0394 230000EA 		b	.L347
 5849              	.L366:
3033:../../Source/Kernel/rme_kernel.c ****     }
3034:../../Source/Kernel/rme_kernel.c ****     else
3035:../../Source/Kernel/rme_kernel.c ****     {
3036:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3037:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3038:../../Source/Kernel/rme_kernel.c ****     }
3039:../../Source/Kernel/rme_kernel.c **** #endif
3040:../../Source/Kernel/rme_kernel.c **** 
3041:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3042:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3043:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 5850              		.loc 1 3043 8
 5851 0398 04309BE5 		ldr	r3, [fp, #4]
 5852 039c 0C201BE5 		ldr	r2, [fp, #-12]
 5853 03a0 28101BE5 		ldr	r1, [fp, #-40]
 5854 03a4 08001BE5 		ldr	r0, [fp, #-8]
 5855 03a8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3044:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 158


3045:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3046:../../Source/Kernel/rme_kernel.c **** 
3047:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3048:../../Source/Kernel/rme_kernel.c ****     }
3049:../../Source/Kernel/rme_kernel.c ****     else
3050:../../Source/Kernel/rme_kernel.c ****     {
3051:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3052:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3053:../../Source/Kernel/rme_kernel.c ****     }
3054:../../Source/Kernel/rme_kernel.c ****     
3055:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3056:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 5856              		.loc 1 3056 14
 5857 03ac 08301BE5 		ldr	r3, [fp, #-8]
 5858 03b0 003093E5 		ldr	r3, [r3]
 5859 03b4 7330FFE6 		uxth	r3, r3
 5860 03b8 000053E3 		cmp	r3, #0
 5861 03bc 0200000A 		beq	.L367
 5862              		.loc 1 3056 14 is_stmt 0 discriminator 1
 5863 03c0 08301BE5 		ldr	r3, [fp, #-8]
 5864 03c4 043093E5 		ldr	r3, [r3, #4]
 5865 03c8 000000EA 		b	.L368
 5866              	.L367:
 5867              		.loc 1 3056 14 discriminator 2
 5868 03cc 08301BE5 		ldr	r3, [fp, #-8]
 5869              	.L368:
 5870              		.loc 1 3056 13 is_stmt 1 discriminator 4
 5871 03d0 1C300BE5 		str	r3, [fp, #-28]
3057:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5872              		.loc 1 3057 5
 5873 03d4 1C301BE5 		ldr	r3, [fp, #-28]
 5874 03d8 043083E2 		add	r3, r3, #4
 5875 03dc 0110A0E3 		mov	r1, #1
 5876 03e0 0300A0E1 		mov	r0, r3
 5877 03e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3058:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 5878              		.loc 1 3058 14
 5879 03e8 0C301BE5 		ldr	r3, [fp, #-12]
 5880 03ec 003093E5 		ldr	r3, [r3]
 5881 03f0 7330FFE6 		uxth	r3, r3
 5882 03f4 000053E3 		cmp	r3, #0
 5883 03f8 0200000A 		beq	.L369
 5884              		.loc 1 3058 14 is_stmt 0 discriminator 1
 5885 03fc 0C301BE5 		ldr	r3, [fp, #-12]
 5886 0400 043093E5 		ldr	r3, [r3, #4]
 5887 0404 000000EA 		b	.L370
 5888              	.L369:
 5889              		.loc 1 3058 14 discriminator 2
 5890 0408 0C301BE5 		ldr	r3, [fp, #-12]
 5891              	.L370:
 5892              		.loc 1 3058 13 is_stmt 1 discriminator 4
 5893 040c 1C300BE5 		str	r3, [fp, #-28]
3059:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5894              		.loc 1 3059 5
 5895 0410 1C301BE5 		ldr	r3, [fp, #-28]
 5896 0414 043083E2 		add	r3, r3, #4
 5897 0418 0110A0E3 		mov	r1, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 159


 5898 041c 0300A0E1 		mov	r0, r3
 5899 0420 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3060:../../Source/Kernel/rme_kernel.c **** 
3061:../../Source/Kernel/rme_kernel.c ****     return 0;
 5900              		.loc 1 3061 12
 5901 0424 0030A0E3 		mov	r3, #0
 5902              	.L347:
3062:../../Source/Kernel/rme_kernel.c **** }
 5903              		.loc 1 3062 1
 5904 0428 0300A0E1 		mov	r0, r3
 5905 042c 04D04BE2 		sub	sp, fp, #4
 5906              		.cfi_def_cfa 13, 8
 5907              		@ sp needed
 5908 0430 0088BDE8 		pop	{fp, pc}
 5909              		.cfi_endproc
 5910              	.LFE31:
 5912              		.section	.text._RME_Pgt_Crt,"ax",%progbits
 5913              		.align	2
 5914              		.syntax unified
 5915              		.arm
 5917              	_RME_Pgt_Crt:
 5918              	.LFB32:
3063:../../Source/Kernel/rme_kernel.c **** #endif
3064:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Con ********************************************/
3065:../../Source/Kernel/rme_kernel.c **** 
3066:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Crt ******************************************************
3067:../../Source/Kernel/rme_kernel.c **** Description : Create a page table.
3068:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3069:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
3070:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
3071:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3072:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
3073:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3074:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3075:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3076:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3077:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the page
3078:../../Source/Kernel/rme_kernel.c ****                                 table kernel object.
3079:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
3080:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
3081:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
3082:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
3083:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page 
3084:../../Source/Kernel/rme_kernel.c ****                                  directories into this one.
3085:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
3086:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the 
3087:../../Source/Kernel/rme_kernel.c ****                                      page directory.
3088:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the table.
3089:../../Source/Kernel/rme_kernel.c **** Output      : None.
3090:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3091:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3092:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3093:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Crt(struct RME_Cap_Cpt* Cpt,
3094:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3095:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
3096:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3097:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 160


3098:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Base,
3099:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Top,
3100:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Size_Order,
3101:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Num_Order)
3102:../../Source/Kernel/rme_kernel.c **** {
 5919              		.loc 1 3102 1
 5920              		.cfi_startproc
 5921              		@ args = 20, pretend = 0, frame = 40
 5922              		@ frame_needed = 1, uses_anonymous_args = 0
 5923 0000 00482DE9 		push	{fp, lr}
 5924              		.cfi_def_cfa_offset 8
 5925              		.cfi_offset 11, -8
 5926              		.cfi_offset 14, -4
 5927 0004 04B08DE2 		add	fp, sp, #4
 5928              		.cfi_def_cfa 11, 4
 5929 0008 30D04DE2 		sub	sp, sp, #48
 5930 000c 20000BE5 		str	r0, [fp, #-32]
 5931 0010 24100BE5 		str	r1, [fp, #-36]
 5932 0014 28200BE5 		str	r2, [fp, #-40]
 5933 0018 2C300BE5 		str	r3, [fp, #-44]
3103:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3104:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
3105:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
3106:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3107:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
3108:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3109:../../Source/Kernel/rme_kernel.c ****     
3110:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
3111:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
3112:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 5934              		.loc 1 3112 19
 5935 001c 10209BE5 		ldr	r2, [fp, #16]
 5936 0020 14309BE5 		ldr	r3, [fp, #20]
 5937 0024 033082E0 		add	r3, r2, r3
 5938              		.loc 1 3112 7
 5939 0028 200053E3 		cmp	r3, #32
 5940 002c 0100009A 		bls	.L372
3113:../../Source/Kernel/rme_kernel.c ****     {
3114:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3115:../../Source/Kernel/rme_kernel.c ****         
3116:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5941              		.loc 1 3116 16
 5942 0030 6630E0E3 		mvn	r3, #102
 5943 0034 550100EA 		b	.L373
 5944              	.L372:
3117:../../Source/Kernel/rme_kernel.c ****     }
3118:../../Source/Kernel/rme_kernel.c ****     else
3119:../../Source/Kernel/rme_kernel.c ****     {
3120:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3121:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3122:../../Source/Kernel/rme_kernel.c ****     }
3123:../../Source/Kernel/rme_kernel.c ****     
3124:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3125:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 5945              		.loc 1 3125 5
 5946 0038 24301BE5 		ldr	r3, [fp, #-36]
 5947 003c 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 161


 5948 0040 000053E3 		cmp	r3, #0
 5949 0044 1C00001A 		bne	.L374
 5950              		.loc 1 3125 5 is_stmt 0 discriminator 1
 5951 0048 20301BE5 		ldr	r3, [fp, #-32]
 5952 004c 142093E5 		ldr	r2, [r3, #20]
 5953 0050 24301BE5 		ldr	r3, [fp, #-36]
 5954 0054 030052E1 		cmp	r2, r3
 5955 0058 0100008A 		bhi	.L375
 5956              		.loc 1 3125 5 discriminator 3
 5957 005c 0230E0E3 		mvn	r3, #2
 5958              		.loc 1 3125 5
 5959 0060 4A0100EA 		b	.L373
 5960              	.L375:
 5961              		.loc 1 3125 5 discriminator 4
 5962 0064 24301BE5 		ldr	r3, [fp, #-36]
 5963 0068 8322A0E1 		lsl	r2, r3, #5
 5964 006c 20301BE5 		ldr	r3, [fp, #-32]
 5965 0070 0C3093E5 		ldr	r3, [r3, #12]
 5966 0074 033082E0 		add	r3, r2, r3
 5967 0078 0C300BE5 		str	r3, [fp, #-12]
 5968 007c 0C301BE5 		ldr	r3, [fp, #-12]
 5969 0080 0300A0E1 		mov	r0, r3
 5970 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5971 0088 14000BE5 		str	r0, [fp, #-20]
 5972              		.loc 1 3125 5 discriminator 1
 5973 008c 14301BE5 		ldr	r3, [fp, #-20]
 5974 0090 FF3803E2 		and	r3, r3, #16711680
 5975 0094 020853E3 		cmp	r3, #131072
 5976 0098 0100001A 		bne	.L376
 5977              		.loc 1 3125 5 discriminator 5
 5978 009c 0830E0E3 		mvn	r3, #8
 5979              		.loc 1 3125 5
 5980 00a0 3A0100EA 		b	.L373
 5981              	.L376:
 5982              		.loc 1 3125 5 discriminator 6
 5983 00a4 14301BE5 		ldr	r3, [fp, #-20]
 5984 00a8 233CA0E1 		lsr	r3, r3, #24
 5985 00ac 030053E3 		cmp	r3, #3
 5986 00b0 3F00000A 		beq	.L377
 5987              		.loc 1 3125 5 discriminator 7
 5988 00b4 0130E0E3 		mvn	r3, #1
 5989              		.loc 1 3125 5
 5990 00b8 340100EA 		b	.L373
 5991              	.L374:
 5992              		.loc 1 3125 5 discriminator 2
 5993 00bc 24301BE5 		ldr	r3, [fp, #-36]
 5994 00c0 2324A0E1 		lsr	r2, r3, #8
 5995 00c4 20301BE5 		ldr	r3, [fp, #-32]
 5996 00c8 143093E5 		ldr	r3, [r3, #20]
 5997 00cc 030052E1 		cmp	r2, r3
 5998 00d0 0100003A 		bcc	.L378
 5999              		.loc 1 3125 5 discriminator 8
 6000 00d4 0230E0E3 		mvn	r3, #2
 6001              		.loc 1 3125 5
 6002 00d8 2C0100EA 		b	.L373
 6003              	.L378:
 6004              		.loc 1 3125 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 162


 6005 00dc 24301BE5 		ldr	r3, [fp, #-36]
 6006 00e0 2334A0E1 		lsr	r3, r3, #8
 6007 00e4 8322A0E1 		lsl	r2, r3, #5
 6008 00e8 20301BE5 		ldr	r3, [fp, #-32]
 6009 00ec 0C3093E5 		ldr	r3, [r3, #12]
 6010 00f0 033082E0 		add	r3, r2, r3
 6011 00f4 0C300BE5 		str	r3, [fp, #-12]
 6012 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 6013 00fc 0300A0E1 		mov	r0, r3
 6014 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6015 0104 14000BE5 		str	r0, [fp, #-20]
 6016              		.loc 1 3125 5 discriminator 1
 6017 0108 14301BE5 		ldr	r3, [fp, #-20]
 6018 010c FF3803E2 		and	r3, r3, #16711680
 6019 0110 020853E3 		cmp	r3, #131072
 6020 0114 0100001A 		bne	.L379
 6021              		.loc 1 3125 5 discriminator 10
 6022 0118 0830E0E3 		mvn	r3, #8
 6023              		.loc 1 3125 5
 6024 011c 1B0100EA 		b	.L373
 6025              	.L379:
 6026              		.loc 1 3125 5 discriminator 11
 6027 0120 14301BE5 		ldr	r3, [fp, #-20]
 6028 0124 233CA0E1 		lsr	r3, r3, #24
 6029 0128 030053E3 		cmp	r3, #3
 6030 012c 0100000A 		beq	.L380
 6031              		.loc 1 3125 5 discriminator 12
 6032 0130 0130E0E3 		mvn	r3, #1
 6033              		.loc 1 3125 5
 6034 0134 150100EA 		b	.L373
 6035              	.L380:
 6036              		.loc 1 3125 5 discriminator 13
 6037 0138 24301BE5 		ldr	r3, [fp, #-36]
 6038 013c 7F2003E2 		and	r2, r3, #127
 6039 0140 0C301BE5 		ldr	r3, [fp, #-12]
 6040 0144 143093E5 		ldr	r3, [r3, #20]
 6041 0148 030052E1 		cmp	r2, r3
 6042 014c 0100003A 		bcc	.L381
 6043              		.loc 1 3125 5 discriminator 14
 6044 0150 0230E0E3 		mvn	r3, #2
 6045              		.loc 1 3125 5
 6046 0154 0D0100EA 		b	.L373
 6047              	.L381:
 6048              		.loc 1 3125 5 discriminator 15
 6049 0158 24301BE5 		ldr	r3, [fp, #-36]
 6050 015c 7F3003E2 		and	r3, r3, #127
 6051 0160 8322A0E1 		lsl	r2, r3, #5
 6052 0164 0C301BE5 		ldr	r3, [fp, #-12]
 6053 0168 0C3093E5 		ldr	r3, [r3, #12]
 6054 016c 033082E0 		add	r3, r2, r3
 6055 0170 0C300BE5 		str	r3, [fp, #-12]
 6056 0174 0C301BE5 		ldr	r3, [fp, #-12]
 6057 0178 0300A0E1 		mov	r0, r3
 6058 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6059 0180 14000BE5 		str	r0, [fp, #-20]
 6060              		.loc 1 3125 5 discriminator 1
 6061 0184 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 163


 6062 0188 FF3803E2 		and	r3, r3, #16711680
 6063 018c 020853E3 		cmp	r3, #131072
 6064 0190 0100001A 		bne	.L382
 6065              		.loc 1 3125 5 discriminator 16
 6066 0194 0830E0E3 		mvn	r3, #8
 6067              		.loc 1 3125 5
 6068 0198 FC0000EA 		b	.L373
 6069              	.L382:
 6070              		.loc 1 3125 5 discriminator 17
 6071 019c 14301BE5 		ldr	r3, [fp, #-20]
 6072 01a0 233CA0E1 		lsr	r3, r3, #24
 6073 01a4 030053E3 		cmp	r3, #3
 6074 01a8 0100000A 		beq	.L377
 6075              		.loc 1 3125 5 discriminator 18
 6076 01ac 0130E0E3 		mvn	r3, #1
 6077              		.loc 1 3125 5
 6078 01b0 F60000EA 		b	.L373
 6079              	.L377:
3126:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3127:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 6080              		.loc 1 3127 5 is_stmt 1
 6081 01b4 28301BE5 		ldr	r3, [fp, #-40]
 6082 01b8 803003E2 		and	r3, r3, #128
 6083 01bc 000053E3 		cmp	r3, #0
 6084 01c0 1C00001A 		bne	.L383
 6085              		.loc 1 3127 5 is_stmt 0 discriminator 1
 6086 01c4 20301BE5 		ldr	r3, [fp, #-32]
 6087 01c8 142093E5 		ldr	r2, [r3, #20]
 6088 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6089 01d0 030052E1 		cmp	r2, r3
 6090 01d4 0100008A 		bhi	.L384
 6091              		.loc 1 3127 5 discriminator 3
 6092 01d8 0230E0E3 		mvn	r3, #2
 6093              		.loc 1 3127 5
 6094 01dc EB0000EA 		b	.L373
 6095              	.L384:
 6096              		.loc 1 3127 5 discriminator 4
 6097 01e0 28301BE5 		ldr	r3, [fp, #-40]
 6098 01e4 8322A0E1 		lsl	r2, r3, #5
 6099 01e8 20301BE5 		ldr	r3, [fp, #-32]
 6100 01ec 0C3093E5 		ldr	r3, [r3, #12]
 6101 01f0 033082E0 		add	r3, r2, r3
 6102 01f4 08300BE5 		str	r3, [fp, #-8]
 6103 01f8 08301BE5 		ldr	r3, [fp, #-8]
 6104 01fc 0300A0E1 		mov	r0, r3
 6105 0200 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6106 0204 14000BE5 		str	r0, [fp, #-20]
 6107              		.loc 1 3127 5 discriminator 1
 6108 0208 14301BE5 		ldr	r3, [fp, #-20]
 6109 020c FF3803E2 		and	r3, r3, #16711680
 6110 0210 020853E3 		cmp	r3, #131072
 6111 0214 0100001A 		bne	.L385
 6112              		.loc 1 3127 5 discriminator 5
 6113 0218 0830E0E3 		mvn	r3, #8
 6114              		.loc 1 3127 5
 6115 021c DB0000EA 		b	.L373
 6116              	.L385:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 164


 6117              		.loc 1 3127 5 discriminator 6
 6118 0220 14301BE5 		ldr	r3, [fp, #-20]
 6119 0224 233CA0E1 		lsr	r3, r3, #24
 6120 0228 020053E3 		cmp	r3, #2
 6121 022c 3F00000A 		beq	.L386
 6122              		.loc 1 3127 5 discriminator 7
 6123 0230 0130E0E3 		mvn	r3, #1
 6124              		.loc 1 3127 5
 6125 0234 D50000EA 		b	.L373
 6126              	.L383:
 6127              		.loc 1 3127 5 discriminator 2
 6128 0238 28301BE5 		ldr	r3, [fp, #-40]
 6129 023c 2324A0E1 		lsr	r2, r3, #8
 6130 0240 20301BE5 		ldr	r3, [fp, #-32]
 6131 0244 143093E5 		ldr	r3, [r3, #20]
 6132 0248 030052E1 		cmp	r2, r3
 6133 024c 0100003A 		bcc	.L387
 6134              		.loc 1 3127 5 discriminator 8
 6135 0250 0230E0E3 		mvn	r3, #2
 6136              		.loc 1 3127 5
 6137 0254 CD0000EA 		b	.L373
 6138              	.L387:
 6139              		.loc 1 3127 5 discriminator 9
 6140 0258 28301BE5 		ldr	r3, [fp, #-40]
 6141 025c 2334A0E1 		lsr	r3, r3, #8
 6142 0260 8322A0E1 		lsl	r2, r3, #5
 6143 0264 20301BE5 		ldr	r3, [fp, #-32]
 6144 0268 0C3093E5 		ldr	r3, [r3, #12]
 6145 026c 033082E0 		add	r3, r2, r3
 6146 0270 08300BE5 		str	r3, [fp, #-8]
 6147 0274 08301BE5 		ldr	r3, [fp, #-8]
 6148 0278 0300A0E1 		mov	r0, r3
 6149 027c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6150 0280 14000BE5 		str	r0, [fp, #-20]
 6151              		.loc 1 3127 5 discriminator 1
 6152 0284 14301BE5 		ldr	r3, [fp, #-20]
 6153 0288 FF3803E2 		and	r3, r3, #16711680
 6154 028c 020853E3 		cmp	r3, #131072
 6155 0290 0100001A 		bne	.L388
 6156              		.loc 1 3127 5 discriminator 10
 6157 0294 0830E0E3 		mvn	r3, #8
 6158              		.loc 1 3127 5
 6159 0298 BC0000EA 		b	.L373
 6160              	.L388:
 6161              		.loc 1 3127 5 discriminator 11
 6162 029c 14301BE5 		ldr	r3, [fp, #-20]
 6163 02a0 233CA0E1 		lsr	r3, r3, #24
 6164 02a4 030053E3 		cmp	r3, #3
 6165 02a8 0100000A 		beq	.L389
 6166              		.loc 1 3127 5 discriminator 12
 6167 02ac 0130E0E3 		mvn	r3, #1
 6168              		.loc 1 3127 5
 6169 02b0 B60000EA 		b	.L373
 6170              	.L389:
 6171              		.loc 1 3127 5 discriminator 13
 6172 02b4 28301BE5 		ldr	r3, [fp, #-40]
 6173 02b8 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 165


 6174 02bc 08301BE5 		ldr	r3, [fp, #-8]
 6175 02c0 143093E5 		ldr	r3, [r3, #20]
 6176 02c4 030052E1 		cmp	r2, r3
 6177 02c8 0100003A 		bcc	.L390
 6178              		.loc 1 3127 5 discriminator 14
 6179 02cc 0230E0E3 		mvn	r3, #2
 6180              		.loc 1 3127 5
 6181 02d0 AE0000EA 		b	.L373
 6182              	.L390:
 6183              		.loc 1 3127 5 discriminator 15
 6184 02d4 28301BE5 		ldr	r3, [fp, #-40]
 6185 02d8 7F3003E2 		and	r3, r3, #127
 6186 02dc 8322A0E1 		lsl	r2, r3, #5
 6187 02e0 08301BE5 		ldr	r3, [fp, #-8]
 6188 02e4 0C3093E5 		ldr	r3, [r3, #12]
 6189 02e8 033082E0 		add	r3, r2, r3
 6190 02ec 08300BE5 		str	r3, [fp, #-8]
 6191 02f0 08301BE5 		ldr	r3, [fp, #-8]
 6192 02f4 0300A0E1 		mov	r0, r3
 6193 02f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6194 02fc 14000BE5 		str	r0, [fp, #-20]
 6195              		.loc 1 3127 5 discriminator 1
 6196 0300 14301BE5 		ldr	r3, [fp, #-20]
 6197 0304 FF3803E2 		and	r3, r3, #16711680
 6198 0308 020853E3 		cmp	r3, #131072
 6199 030c 0100001A 		bne	.L391
 6200              		.loc 1 3127 5 discriminator 16
 6201 0310 0830E0E3 		mvn	r3, #8
 6202              		.loc 1 3127 5
 6203 0314 9D0000EA 		b	.L373
 6204              	.L391:
 6205              		.loc 1 3127 5 discriminator 17
 6206 0318 14301BE5 		ldr	r3, [fp, #-20]
 6207 031c 233CA0E1 		lsr	r3, r3, #24
 6208 0320 020053E3 		cmp	r3, #2
 6209 0324 0100000A 		beq	.L386
 6210              		.loc 1 3127 5 discriminator 18
 6211 0328 0130E0E3 		mvn	r3, #1
 6212              		.loc 1 3127 5
 6213 032c 970000EA 		b	.L373
 6214              	.L386:
3128:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
3129:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3130:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op, RME_CPT_FLAG_CRT);
 6215              		.loc 1 3130 5 is_stmt 1
 6216 0330 0C301BE5 		ldr	r3, [fp, #-12]
 6217 0334 083093E5 		ldr	r3, [r3, #8]
 6218 0338 013003E2 		and	r3, r3, #1
 6219 033c 000053E3 		cmp	r3, #0
 6220 0340 0100001A 		bne	.L392
 6221              		.loc 1 3130 5 is_stmt 0 discriminator 1
 6222 0344 0630E0E3 		mvn	r3, #6
 6223              		.loc 1 3130 5
 6224 0348 900000EA 		b	.L373
 6225              	.L392:
3131:../../Source/Kernel/rme_kernel.c ****     
3132:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top-level? */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 166


3133:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 6226              		.loc 1 3133 7 is_stmt 1
 6227 034c 0C309BE5 		ldr	r3, [fp, #12]
 6228 0350 000053E3 		cmp	r3, #0
 6229 0354 0400000A 		beq	.L393
3134:../../Source/Kernel/rme_kernel.c ****     {
3135:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3136:../../Source/Kernel/rme_kernel.c **** 
3137:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 6230              		.loc 1 3137 19
 6231 0358 0420A0E3 		mov	r2, #4
 6232 035c 14309BE5 		ldr	r3, [fp, #20]
 6233 0360 1233A0E1 		lsl	r3, r2, r3
 6234 0364 10300BE5 		str	r3, [fp, #-16]
 6235 0368 030000EA 		b	.L394
 6236              	.L393:
3138:../../Source/Kernel/rme_kernel.c ****     }
3139:../../Source/Kernel/rme_kernel.c ****     else
3140:../../Source/Kernel/rme_kernel.c ****     {
3141:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3142:../../Source/Kernel/rme_kernel.c **** 
3143:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 6237              		.loc 1 3143 19
 6238 036c 0420A0E3 		mov	r2, #4
 6239 0370 14309BE5 		ldr	r3, [fp, #20]
 6240 0374 1233A0E1 		lsl	r3, r2, r3
 6241 0378 10300BE5 		str	r3, [fp, #-16]
 6242              	.L394:
3144:../../Source/Kernel/rme_kernel.c ****     }
3145:../../Source/Kernel/rme_kernel.c ****     
3146:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
3147:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_PGT,Raddr,Vaddr,Table_Size);
 6243              		.loc 1 3147 5
 6244 037c 08301BE5 		ldr	r3, [fp, #-8]
 6245 0380 083093E5 		ldr	r3, [r3, #8]
 6246 0384 023003E2 		and	r3, r3, #2
 6247 0388 000053E3 		cmp	r3, #0
 6248 038c 0100001A 		bne	.L395
 6249              		.loc 1 3147 5 is_stmt 0 discriminator 1
 6250 0390 0630E0E3 		mvn	r3, #6
 6251              		.loc 1 3147 5
 6252 0394 7D0000EA 		b	.L373
 6253              	.L395:
 6254              		.loc 1 3147 5 discriminator 2
 6255 0398 08301BE5 		ldr	r3, [fp, #-8]
 6256 039c 143093E5 		ldr	r3, [r3, #20]
 6257 03a0 04209BE5 		ldr	r2, [fp, #4]
 6258 03a4 033082E0 		add	r3, r2, r3
 6259 03a8 18300BE5 		str	r3, [fp, #-24]
 6260 03ac 18201BE5 		ldr	r2, [fp, #-24]
 6261 03b0 04309BE5 		ldr	r3, [fp, #4]
 6262 03b4 030052E1 		cmp	r2, r3
 6263 03b8 0100002A 		bcs	.L396
 6264              		.loc 1 3147 5 discriminator 3
 6265 03bc 0630E0E3 		mvn	r3, #6
 6266              		.loc 1 3147 5
 6267 03c0 720000EA 		b	.L373
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 167


 6268              	.L396:
 6269              		.loc 1 3147 5 discriminator 4
 6270 03c4 08301BE5 		ldr	r3, [fp, #-8]
 6271 03c8 143093E5 		ldr	r3, [r3, #20]
 6272 03cc 18201BE5 		ldr	r2, [fp, #-24]
 6273 03d0 030052E1 		cmp	r2, r3
 6274 03d4 0100002A 		bcs	.L397
 6275              		.loc 1 3147 5 discriminator 5
 6276 03d8 0630E0E3 		mvn	r3, #6
 6277              		.loc 1 3147 5
 6278 03dc 6B0000EA 		b	.L373
 6279              	.L397:
 6280              		.loc 1 3147 5 discriminator 6
 6281 03e0 18201BE5 		ldr	r2, [fp, #-24]
 6282 03e4 10301BE5 		ldr	r3, [fp, #-16]
 6283 03e8 033082E0 		add	r3, r2, r3
 6284 03ec 18201BE5 		ldr	r2, [fp, #-24]
 6285 03f0 030052E1 		cmp	r2, r3
 6286 03f4 0100009A 		bls	.L398
 6287              		.loc 1 3147 5 discriminator 7
 6288 03f8 0630E0E3 		mvn	r3, #6
 6289              		.loc 1 3147 5
 6290 03fc 630000EA 		b	.L373
 6291              	.L398:
 6292              		.loc 1 3147 5 discriminator 8
 6293 0400 08301BE5 		ldr	r3, [fp, #-8]
 6294 0404 182093E5 		ldr	r2, [r3, #24]
 6295 0408 18101BE5 		ldr	r1, [fp, #-24]
 6296 040c 10301BE5 		ldr	r3, [fp, #-16]
 6297 0410 033081E0 		add	r3, r1, r3
 6298 0414 013043E2 		sub	r3, r3, #1
 6299 0418 030052E1 		cmp	r2, r3
 6300 041c 0100002A 		bcs	.L399
 6301              		.loc 1 3147 5 discriminator 9
 6302 0420 0630E0E3 		mvn	r3, #6
 6303              		.loc 1 3147 5
 6304 0424 590000EA 		b	.L373
 6305              	.L399:
3148:../../Source/Kernel/rme_kernel.c **** 
3149:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
3150:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)<0)
 6306              		.loc 1 3150 8 is_stmt 1
 6307 0428 18301BE5 		ldr	r3, [fp, #-24]
 6308 042c 00308DE5 		str	r3, [sp]
 6309 0430 14309BE5 		ldr	r3, [fp, #20]
 6310 0434 10209BE5 		ldr	r2, [fp, #16]
 6311 0438 0C109BE5 		ldr	r1, [fp, #12]
 6312 043c 08009BE5 		ldr	r0, [fp, #8]
 6313 0440 FEFFFFEB 		bl	__RME_Pgt_Check
3151:../../Source/Kernel/rme_kernel.c ****     {
3152:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3153:../../Source/Kernel/rme_kernel.c **** 
3154:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3155:../../Source/Kernel/rme_kernel.c ****     }
3156:../../Source/Kernel/rme_kernel.c ****     else
3157:../../Source/Kernel/rme_kernel.c ****     {
3158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 168


3159:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3160:../../Source/Kernel/rme_kernel.c ****     }
3161:../../Source/Kernel/rme_kernel.c **** 
3162:../../Source/Kernel/rme_kernel.c ****     /* Check if the start address is properly aligned to the total order of the page table */
3163:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 6314              		.loc 1 3163 14
 6315 0444 10209BE5 		ldr	r2, [fp, #16]
 6316 0448 14309BE5 		ldr	r3, [fp, #20]
 6317 044c 033082E0 		add	r3, r2, r3
 6318 0450 203063E2 		rsb	r3, r3, #32
 6319 0454 0020E0E3 		mvn	r2, #0
 6320 0458 3223A0E1 		lsr	r2, r2, r3
 6321              		.loc 1 3163 13
 6322 045c 08309BE5 		ldr	r3, [fp, #8]
 6323 0460 023003E0 		and	r3, r3, r2
 6324              		.loc 1 3163 7
 6325 0464 000053E3 		cmp	r3, #0
 6326 0468 0100000A 		beq	.L400
3164:../../Source/Kernel/rme_kernel.c ****     {
3165:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3166:../../Source/Kernel/rme_kernel.c **** 
3167:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 6327              		.loc 1 3167 16
 6328 046c 6630E0E3 		mvn	r3, #102
 6329 0470 460000EA 		b	.L373
 6330              	.L400:
3168:../../Source/Kernel/rme_kernel.c ****     }
3169:../../Source/Kernel/rme_kernel.c ****     else
3170:../../Source/Kernel/rme_kernel.c ****     {
3171:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3172:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3173:../../Source/Kernel/rme_kernel.c ****     }
3174:../../Source/Kernel/rme_kernel.c **** 
3175:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3176:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 6331              		.loc 1 3176 5
 6332 0474 0C301BE5 		ldr	r3, [fp, #-12]
 6333 0478 142093E5 		ldr	r2, [r3, #20]
 6334 047c 2C301BE5 		ldr	r3, [fp, #-44]
 6335 0480 030052E1 		cmp	r2, r3
 6336 0484 0100008A 		bhi	.L401
 6337              		.loc 1 3176 5 is_stmt 0 discriminator 1
 6338 0488 0230E0E3 		mvn	r3, #2
 6339              		.loc 1 3176 5
 6340 048c 3F0000EA 		b	.L373
 6341              	.L401:
 6342              		.loc 1 3176 5 discriminator 2
 6343 0490 2C301BE5 		ldr	r3, [fp, #-44]
 6344 0494 8322A0E1 		lsl	r2, r3, #5
 6345 0498 0C301BE5 		ldr	r3, [fp, #-12]
 6346 049c 0C3093E5 		ldr	r3, [r3, #12]
 6347 04a0 033082E0 		add	r3, r2, r3
 6348 04a4 1C300BE5 		str	r3, [fp, #-28]
3177:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
3178:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 6349              		.loc 1 3178 5 is_stmt 1
 6350 04a8 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 169


 6351 04ac 0128A0E3 		mov	r2, #65536
 6352 04b0 0010A0E3 		mov	r1, #0
 6353 04b4 0300A0E1 		mov	r0, r3
 6354 04b8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6355 04bc 0030A0E1 		mov	r3, r0
 6356              		.loc 1 3178 5 is_stmt 0 discriminator 1
 6357 04c0 000053E3 		cmp	r3, #0
 6358 04c4 0100001A 		bne	.L402
 6359 04c8 0430E0E3 		mvn	r3, #4
 6360              		.loc 1 3178 5
 6361 04cc 2F0000EA 		b	.L373
 6362              	.L402:
 6363              		.loc 1 3178 5 discriminator 2
 6364 04d0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6365 04d4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6366 04d8 002093E5 		ldr	r2, [r3]
 6367 04dc 1C301BE5 		ldr	r3, [fp, #-28]
 6368 04e0 102083E5 		str	r2, [r3, #16]
3179:../../Source/Kernel/rme_kernel.c **** 
3180:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
3181:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Table_Size)!=0)
 6369              		.loc 1 3181 8 is_stmt 1
 6370 04e4 10101BE5 		ldr	r1, [fp, #-16]
 6371 04e8 18001BE5 		ldr	r0, [fp, #-24]
 6372 04ec FEFFFFEB 		bl	_RME_Kot_Mark
 6373 04f0 0030A0E1 		mov	r3, r0
 6374              		.loc 1 3181 7 discriminator 1
 6375 04f4 000053E3 		cmp	r3, #0
 6376 04f8 0500000A 		beq	.L403
3182:../../Source/Kernel/rme_kernel.c ****     {
3183:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3184:../../Source/Kernel/rme_kernel.c **** 
3185:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 6377              		.loc 1 3185 9
 6378 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 6379 0500 0010A0E3 		mov	r1, #0
 6380 0504 0300A0E1 		mov	r0, r3
 6381 0508 FEFFFFEB 		bl	__RME_A7A_Write_Release
3186:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 6382              		.loc 1 3186 16
 6383 050c 0330E0E3 		mvn	r3, #3
 6384 0510 1E0000EA 		b	.L373
 6385              	.L403:
3187:../../Source/Kernel/rme_kernel.c ****     }
3188:../../Source/Kernel/rme_kernel.c ****     else
3189:../../Source/Kernel/rme_kernel.c ****     {
3190:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3191:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3192:../../Source/Kernel/rme_kernel.c ****     }
3193:../../Source/Kernel/rme_kernel.c ****     
3194:../../Source/Kernel/rme_kernel.c ****     /* Header init */
3195:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 6386              		.loc 1 3195 27
 6387 0514 1C301BE5 		ldr	r3, [fp, #-28]
 6388 0518 0020A0E3 		mov	r2, #0
 6389 051c 042083E5 		str	r2, [r3, #4]
3196:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 170


 6390              		.loc 1 3196 25
 6391 0520 1C301BE5 		ldr	r3, [fp, #-28]
 6392 0524 18201BE5 		ldr	r2, [fp, #-24]
 6393 0528 0C2083E5 		str	r2, [r3, #12]
3197:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ALL;
 6394              		.loc 1 3197 23
 6395 052c 1C201BE5 		ldr	r2, [fp, #-28]
 6396 0530 FF30A0E3 		mov	r3, #255
 6397 0534 F03F4FE3 		movt	r3, 65520
 6398 0538 083082E5 		str	r3, [r2, #8]
3198:../../Source/Kernel/rme_kernel.c ****     
3199:../../Source/Kernel/rme_kernel.c ****     /* Info init */
3200:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 6399              		.loc 1 3200 23
 6400 053c 08209BE5 		ldr	r2, [fp, #8]
 6401 0540 0C309BE5 		ldr	r3, [fp, #12]
 6402 0544 032082E1 		orr	r2, r2, r3
 6403              		.loc 1 3200 18
 6404 0548 1C301BE5 		ldr	r3, [fp, #-28]
 6405 054c 182083E5 		str	r2, [r3, #24]
3201:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 6406              		.loc 1 3201 20
 6407 0550 10309BE5 		ldr	r3, [fp, #16]
 6408 0554 0328A0E1 		lsl	r2, r3, #16
 6409 0558 14309BE5 		ldr	r3, [fp, #20]
 6410 055c 032082E1 		orr	r2, r2, r3
 6411              		.loc 1 3201 19
 6412 0560 1C301BE5 		ldr	r3, [fp, #-28]
 6413 0564 142083E5 		str	r2, [r3, #20]
3202:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 6414              		.loc 1 3202 18
 6415 0568 1C301BE5 		ldr	r3, [fp, #-28]
 6416 056c 0020A0E3 		mov	r2, #0
 6417 0570 1C2083E5 		str	r2, [r3, #28]
3203:../../Source/Kernel/rme_kernel.c ****     
3204:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
3205:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 6418              		.loc 1 3205 8
 6419 0574 1C001BE5 		ldr	r0, [fp, #-28]
 6420 0578 FEFFFFEB 		bl	__RME_Pgt_Init
3206:../../Source/Kernel/rme_kernel.c ****     {
3207:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3208:../../Source/Kernel/rme_kernel.c **** 
3209:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
3210:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr,Table_Size)==0);
3211:../../Source/Kernel/rme_kernel.c ****         
3212:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
3213:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
3214:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3215:../../Source/Kernel/rme_kernel.c ****     }
3216:../../Source/Kernel/rme_kernel.c ****     else
3217:../../Source/Kernel/rme_kernel.c ****     {
3218:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3219:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3220:../../Source/Kernel/rme_kernel.c ****     }
3221:../../Source/Kernel/rme_kernel.c **** 
3222:../../Source/Kernel/rme_kernel.c ****     /* Creation complete */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 171


3223:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 6421              		.loc 1 3223 5
 6422 057c 1C301BE5 		ldr	r3, [fp, #-28]
 6423 0580 0113A0E3 		mov	r1, #67108864
 6424 0584 0300A0E1 		mov	r0, r3
 6425 0588 FEFFFFEB 		bl	__RME_A7A_Write_Release
3224:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
3225:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
3226:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
3227:../../Source/Kernel/rme_kernel.c **** 
3228:../../Source/Kernel/rme_kernel.c ****     return 0;
 6426              		.loc 1 3228 12
 6427 058c 0030A0E3 		mov	r3, #0
 6428              	.L373:
3229:../../Source/Kernel/rme_kernel.c **** }
 6429              		.loc 1 3229 1
 6430 0590 0300A0E1 		mov	r0, r3
 6431 0594 04D04BE2 		sub	sp, fp, #4
 6432              		.cfi_def_cfa 13, 8
 6433              		@ sp needed
 6434 0598 0088BDE8 		pop	{fp, pc}
 6435              		.cfi_endproc
 6436              	.LFE32:
 6438              		.section	.text._RME_Pgt_Del,"ax",%progbits
 6439              		.align	2
 6440              		.syntax unified
 6441              		.arm
 6443              	_RME_Pgt_Del:
 6444              	.LFB33:
3230:../../Source/Kernel/rme_kernel.c **** #endif
3231:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Crt *************************************************/
3232:../../Source/Kernel/rme_kernel.c **** 
3233:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Del ******************************************************
3234:../../Source/Kernel/rme_kernel.c **** Description : Delete a page table.
3235:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3236:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
3237:../../Source/Kernel/rme_kernel.c ****                                   the cap to new captbl.
3238:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3239:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3240:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3241:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3242:../../Source/Kernel/rme_kernel.c **** Output      : None.
3243:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3244:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3245:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3246:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Del(struct RME_Cap_Cpt* Cpt,
3247:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3248:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
3249:../../Source/Kernel/rme_kernel.c **** {
 6445              		.loc 1 3249 1
 6446              		.cfi_startproc
 6447              		@ args = 0, pretend = 0, frame = 40
 6448              		@ frame_needed = 1, uses_anonymous_args = 0
 6449 0000 00482DE9 		push	{fp, lr}
 6450              		.cfi_def_cfa_offset 8
 6451              		.cfi_offset 11, -8
 6452              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 172


 6453 0004 04B08DE2 		add	fp, sp, #4
 6454              		.cfi_def_cfa 11, 4
 6455 0008 28D04DE2 		sub	sp, sp, #40
 6456 000c 20000BE5 		str	r0, [fp, #-32]
 6457 0010 24100BE5 		str	r1, [fp, #-36]
 6458 0014 28200BE5 		str	r2, [fp, #-40]
3250:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3251:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Del;
3252:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3253:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
3254:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
3255:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3256:../../Source/Kernel/rme_kernel.c ****     
3257:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3258:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 6459              		.loc 1 3258 5
 6460 0018 24301BE5 		ldr	r3, [fp, #-36]
 6461 001c 803003E2 		and	r3, r3, #128
 6462 0020 000053E3 		cmp	r3, #0
 6463 0024 1C00001A 		bne	.L405
 6464              		.loc 1 3258 5 is_stmt 0 discriminator 1
 6465 0028 20301BE5 		ldr	r3, [fp, #-32]
 6466 002c 142093E5 		ldr	r2, [r3, #20]
 6467 0030 24301BE5 		ldr	r3, [fp, #-36]
 6468 0034 030052E1 		cmp	r2, r3
 6469 0038 0100008A 		bhi	.L406
 6470              		.loc 1 3258 5 discriminator 3
 6471 003c 0230E0E3 		mvn	r3, #2
 6472              		.loc 1 3258 5
 6473 0040 D20000EA 		b	.L407
 6474              	.L406:
 6475              		.loc 1 3258 5 discriminator 4
 6476 0044 24301BE5 		ldr	r3, [fp, #-36]
 6477 0048 8322A0E1 		lsl	r2, r3, #5
 6478 004c 20301BE5 		ldr	r3, [fp, #-32]
 6479 0050 0C3093E5 		ldr	r3, [r3, #12]
 6480 0054 033082E0 		add	r3, r2, r3
 6481 0058 08300BE5 		str	r3, [fp, #-8]
 6482 005c 08301BE5 		ldr	r3, [fp, #-8]
 6483 0060 0300A0E1 		mov	r0, r3
 6484 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6485 0068 10000BE5 		str	r0, [fp, #-16]
 6486              		.loc 1 3258 5 discriminator 1
 6487 006c 10301BE5 		ldr	r3, [fp, #-16]
 6488 0070 FF3803E2 		and	r3, r3, #16711680
 6489 0074 020853E3 		cmp	r3, #131072
 6490 0078 0100001A 		bne	.L408
 6491              		.loc 1 3258 5 discriminator 5
 6492 007c 0830E0E3 		mvn	r3, #8
 6493              		.loc 1 3258 5
 6494 0080 C20000EA 		b	.L407
 6495              	.L408:
 6496              		.loc 1 3258 5 discriminator 6
 6497 0084 10301BE5 		ldr	r3, [fp, #-16]
 6498 0088 233CA0E1 		lsr	r3, r3, #24
 6499 008c 030053E3 		cmp	r3, #3
 6500 0090 3F00000A 		beq	.L409
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 173


 6501              		.loc 1 3258 5 discriminator 7
 6502 0094 0130E0E3 		mvn	r3, #1
 6503              		.loc 1 3258 5
 6504 0098 BC0000EA 		b	.L407
 6505              	.L405:
 6506              		.loc 1 3258 5 discriminator 2
 6507 009c 24301BE5 		ldr	r3, [fp, #-36]
 6508 00a0 2324A0E1 		lsr	r2, r3, #8
 6509 00a4 20301BE5 		ldr	r3, [fp, #-32]
 6510 00a8 143093E5 		ldr	r3, [r3, #20]
 6511 00ac 030052E1 		cmp	r2, r3
 6512 00b0 0100003A 		bcc	.L410
 6513              		.loc 1 3258 5 discriminator 8
 6514 00b4 0230E0E3 		mvn	r3, #2
 6515              		.loc 1 3258 5
 6516 00b8 B40000EA 		b	.L407
 6517              	.L410:
 6518              		.loc 1 3258 5 discriminator 9
 6519 00bc 24301BE5 		ldr	r3, [fp, #-36]
 6520 00c0 2334A0E1 		lsr	r3, r3, #8
 6521 00c4 8322A0E1 		lsl	r2, r3, #5
 6522 00c8 20301BE5 		ldr	r3, [fp, #-32]
 6523 00cc 0C3093E5 		ldr	r3, [r3, #12]
 6524 00d0 033082E0 		add	r3, r2, r3
 6525 00d4 08300BE5 		str	r3, [fp, #-8]
 6526 00d8 08301BE5 		ldr	r3, [fp, #-8]
 6527 00dc 0300A0E1 		mov	r0, r3
 6528 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6529 00e4 10000BE5 		str	r0, [fp, #-16]
 6530              		.loc 1 3258 5 discriminator 1
 6531 00e8 10301BE5 		ldr	r3, [fp, #-16]
 6532 00ec FF3803E2 		and	r3, r3, #16711680
 6533 00f0 020853E3 		cmp	r3, #131072
 6534 00f4 0100001A 		bne	.L411
 6535              		.loc 1 3258 5 discriminator 10
 6536 00f8 0830E0E3 		mvn	r3, #8
 6537              		.loc 1 3258 5
 6538 00fc A30000EA 		b	.L407
 6539              	.L411:
 6540              		.loc 1 3258 5 discriminator 11
 6541 0100 10301BE5 		ldr	r3, [fp, #-16]
 6542 0104 233CA0E1 		lsr	r3, r3, #24
 6543 0108 030053E3 		cmp	r3, #3
 6544 010c 0100000A 		beq	.L412
 6545              		.loc 1 3258 5 discriminator 12
 6546 0110 0130E0E3 		mvn	r3, #1
 6547              		.loc 1 3258 5
 6548 0114 9D0000EA 		b	.L407
 6549              	.L412:
 6550              		.loc 1 3258 5 discriminator 13
 6551 0118 24301BE5 		ldr	r3, [fp, #-36]
 6552 011c 7F2003E2 		and	r2, r3, #127
 6553 0120 08301BE5 		ldr	r3, [fp, #-8]
 6554 0124 143093E5 		ldr	r3, [r3, #20]
 6555 0128 030052E1 		cmp	r2, r3
 6556 012c 0100003A 		bcc	.L413
 6557              		.loc 1 3258 5 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 174


 6558 0130 0230E0E3 		mvn	r3, #2
 6559              		.loc 1 3258 5
 6560 0134 950000EA 		b	.L407
 6561              	.L413:
 6562              		.loc 1 3258 5 discriminator 15
 6563 0138 24301BE5 		ldr	r3, [fp, #-36]
 6564 013c 7F3003E2 		and	r3, r3, #127
 6565 0140 8322A0E1 		lsl	r2, r3, #5
 6566 0144 08301BE5 		ldr	r3, [fp, #-8]
 6567 0148 0C3093E5 		ldr	r3, [r3, #12]
 6568 014c 033082E0 		add	r3, r2, r3
 6569 0150 08300BE5 		str	r3, [fp, #-8]
 6570 0154 08301BE5 		ldr	r3, [fp, #-8]
 6571 0158 0300A0E1 		mov	r0, r3
 6572 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6573 0160 10000BE5 		str	r0, [fp, #-16]
 6574              		.loc 1 3258 5 discriminator 1
 6575 0164 10301BE5 		ldr	r3, [fp, #-16]
 6576 0168 FF3803E2 		and	r3, r3, #16711680
 6577 016c 020853E3 		cmp	r3, #131072
 6578 0170 0100001A 		bne	.L414
 6579              		.loc 1 3258 5 discriminator 16
 6580 0174 0830E0E3 		mvn	r3, #8
 6581              		.loc 1 3258 5
 6582 0178 840000EA 		b	.L407
 6583              	.L414:
 6584              		.loc 1 3258 5 discriminator 17
 6585 017c 10301BE5 		ldr	r3, [fp, #-16]
 6586 0180 233CA0E1 		lsr	r3, r3, #24
 6587 0184 030053E3 		cmp	r3, #3
 6588 0188 0100000A 		beq	.L409
 6589              		.loc 1 3258 5 discriminator 18
 6590 018c 0130E0E3 		mvn	r3, #1
 6591              		.loc 1 3258 5
 6592 0190 7E0000EA 		b	.L407
 6593              	.L409:
3259:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3260:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3261:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 6594              		.loc 1 3261 5 is_stmt 1
 6595 0194 08301BE5 		ldr	r3, [fp, #-8]
 6596 0198 083093E5 		ldr	r3, [r3, #8]
 6597 019c 023003E2 		and	r3, r3, #2
 6598 01a0 000053E3 		cmp	r3, #0
 6599 01a4 0100001A 		bne	.L415
 6600              		.loc 1 3261 5 is_stmt 0 discriminator 1
 6601 01a8 0630E0E3 		mvn	r3, #6
 6602              		.loc 1 3261 5
 6603 01ac 770000EA 		b	.L407
 6604              	.L415:
3262:../../Source/Kernel/rme_kernel.c ****     
3263:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3264:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Del);
 6605              		.loc 1 3264 5 is_stmt 1
 6606 01b0 08301BE5 		ldr	r3, [fp, #-8]
 6607 01b4 142093E5 		ldr	r2, [r3, #20]
 6608 01b8 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 175


 6609 01bc 030052E1 		cmp	r2, r3
 6610 01c0 0100008A 		bhi	.L416
 6611              		.loc 1 3264 5 is_stmt 0 discriminator 1
 6612 01c4 0230E0E3 		mvn	r3, #2
 6613              		.loc 1 3264 5
 6614 01c8 700000EA 		b	.L407
 6615              	.L416:
 6616              		.loc 1 3264 5 discriminator 2
 6617 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6618 01d0 8322A0E1 		lsl	r2, r3, #5
 6619 01d4 08301BE5 		ldr	r3, [fp, #-8]
 6620 01d8 0C3093E5 		ldr	r3, [r3, #12]
 6621 01dc 033082E0 		add	r3, r2, r3
 6622 01e0 14300BE5 		str	r3, [fp, #-20]
3265:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
3266:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Pgt_Del,Type_Stat,RME_CAP_TYPE_PGT);
 6623              		.loc 1 3266 5 is_stmt 1
 6624 01e4 14301BE5 		ldr	r3, [fp, #-20]
 6625 01e8 0300A0E1 		mov	r0, r3
 6626 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6627 01f0 10000BE5 		str	r0, [fp, #-16]
 6628              		.loc 1 3266 5 is_stmt 0 discriminator 1
 6629 01f4 10301BE5 		ldr	r3, [fp, #-16]
 6630 01f8 FF3803E2 		and	r3, r3, #16711680
 6631 01fc 020853E3 		cmp	r3, #131072
 6632 0200 0100000A 		beq	.L417
 6633 0204 0830E0E3 		mvn	r3, #8
 6634              		.loc 1 3266 5
 6635 0208 600000EA 		b	.L407
 6636              	.L417:
 6637              		.loc 1 3266 5 discriminator 2
 6638 020c 10301BE5 		ldr	r3, [fp, #-16]
 6639 0210 233CA0E1 		lsr	r3, r3, #24
 6640 0214 040053E3 		cmp	r3, #4
 6641 0218 0100000A 		beq	.L418
 6642              		.loc 1 3266 5 discriminator 3
 6643 021c 0130E0E3 		mvn	r3, #1
 6644              		.loc 1 3266 5
 6645 0220 5A0000EA 		b	.L407
 6646              	.L418:
 6647              		.loc 1 3266 5 discriminator 4
 6648 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6649 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6650 022c 002093E5 		ldr	r2, [r3]
 6651 0230 14301BE5 		ldr	r3, [fp, #-20]
 6652 0234 103093E5 		ldr	r3, [r3, #16]
 6653 0238 0310A0E1 		mov	r1, r3
 6654 023c 0200A0E1 		mov	r0, r2
 6655 0240 FEFFFFEB 		bl	_RME_Diff
 6656 0244 0030A0E1 		mov	r3, r0
 6657              		.loc 1 3266 5 discriminator 1
 6658 0248 0A0053E3 		cmp	r3, #10
 6659 024c 0100008A 		bhi	.L419
 6660              		.loc 1 3266 5 discriminator 5
 6661 0250 0730E0E3 		mvn	r3, #7
 6662              		.loc 1 3266 5
 6663 0254 4D0000EA 		b	.L407
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 176


 6664              	.L419:
 6665              		.loc 1 3266 5 discriminator 6
 6666 0258 14301BE5 		ldr	r3, [fp, #-20]
 6667 025c 043093E5 		ldr	r3, [r3, #4]
 6668 0260 000053E3 		cmp	r3, #0
 6669 0264 0B00000A 		beq	.L420
 6670              		.loc 1 3266 5 discriminator 7
 6671 0268 10301BE5 		ldr	r3, [fp, #-16]
 6672 026c 7330FFE6 		uxth	r3, r3
 6673 0270 000053E3 		cmp	r3, #0
 6674 0274 0500001A 		bne	.L421
 6675              		.loc 1 3266 5 discriminator 9
 6676 0278 14001BE5 		ldr	r0, [fp, #-20]
 6677 027c 10301BE5 		ldr	r3, [fp, #-16]
 6678 0280 FF38C3E3 		bic	r3, r3, #16711680
 6679 0284 0320A0E1 		mov	r2, r3
 6680 0288 10101BE5 		ldr	r1, [fp, #-16]
 6681 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6682              	.L421:
 6683              		.loc 1 3266 5 discriminator 11
 6684 0290 0530E0E3 		mvn	r3, #5
 6685              		.loc 1 3266 5
 6686 0294 3D0000EA 		b	.L407
 6687              	.L420:
 6688              		.loc 1 3266 5 discriminator 8
 6689 0298 10301BE5 		ldr	r3, [fp, #-16]
 6690 029c 7330FFE6 		uxth	r3, r3
 6691 02a0 000053E3 		cmp	r3, #0
 6692 02a4 0800000A 		beq	.L422
 6693              		.loc 1 3266 5 discriminator 12
 6694 02a8 003000E3 		movw	r3, #:lower16:.LC6
 6695 02ac 003040E3 		movt	r3, #:upper16:.LC6
 6696 02b0 002000E3 		movw	r2, #:lower16:.LC7
 6697 02b4 002040E3 		movt	r2, #:upper16:.LC7
 6698 02b8 C21C00E3 		movw	r1, #3266
 6699 02bc 000000E3 		movw	r0, #:lower16:.LC8
 6700 02c0 000040E3 		movt	r0, #:upper16:.LC8
 6701 02c4 FEFFFFEB 		bl	RME_Log
 6702              	.L423:
 6703              		.loc 1 3266 5
 6704 02c8 FEFFFFEA 		b	.L423
 6705              	.L422:
3267:../../Source/Kernel/rme_kernel.c ****     
3268:../../Source/Kernel/rme_kernel.c ****     /* Hardware related deletion check passed down to the HAL. The driver should make
3269:../../Source/Kernel/rme_kernel.c ****      * sure that it does not reference any lower level tables. If the driver layer does
3270:../../Source/Kernel/rme_kernel.c ****      * not conform to this, the deletion of page table is not guaranteed to main kernel
3271:../../Source/Kernel/rme_kernel.c ****      * consistency, and such consistency must be maintained by the user-level. It is 
3272:../../Source/Kernel/rme_kernel.c ****      * recommended that the driver layer enforce such consistency. */
3273:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Del_Check(Pgt_Del)<0)
 6706              		.loc 1 3273 8 is_stmt 1
 6707 02cc 14001BE5 		ldr	r0, [fp, #-20]
 6708 02d0 FEFFFFEB 		bl	__RME_Pgt_Del_Check
3274:../../Source/Kernel/rme_kernel.c ****     {
3275:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3276:../../Source/Kernel/rme_kernel.c **** 
3277:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Pgt_Del,Type_Stat);
3278:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 177


3279:../../Source/Kernel/rme_kernel.c ****     }
3280:../../Source/Kernel/rme_kernel.c ****     else
3281:../../Source/Kernel/rme_kernel.c ****     {
3282:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3283:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3284:../../Source/Kernel/rme_kernel.c ****     }
3285:../../Source/Kernel/rme_kernel.c ****     
3286:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
3287:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Pgt_Del,rme_ptr_t);
 6709              		.loc 1 3287 11
 6710 02d4 14301BE5 		ldr	r3, [fp, #-20]
 6711 02d8 0C3093E5 		ldr	r3, [r3, #12]
 6712 02dc 18300BE5 		str	r3, [fp, #-24]
3288:../../Source/Kernel/rme_kernel.c ****     if(((Pgt_Del->Base)&RME_PGT_TOP)!=0U)
 6713              		.loc 1 3288 17
 6714 02e0 14301BE5 		ldr	r3, [fp, #-20]
 6715 02e4 183093E5 		ldr	r3, [r3, #24]
 6716              		.loc 1 3288 24
 6717 02e8 013003E2 		and	r3, r3, #1
 6718              		.loc 1 3288 7
 6719 02ec 000053E3 		cmp	r3, #0
 6720 02f0 0600000A 		beq	.L424
3289:../../Source/Kernel/rme_kernel.c ****     {
3290:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3291:../../Source/Kernel/rme_kernel.c **** 
3292:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(RME_PGT_NMORD(Pgt_Del->Order));
 6721              		.loc 1 3292 20
 6722 02f4 14301BE5 		ldr	r3, [fp, #-20]
 6723 02f8 143093E5 		ldr	r3, [r3, #20]
 6724 02fc 7330FFE6 		uxth	r3, r3
 6725              		.loc 1 3292 19
 6726 0300 0420A0E3 		mov	r2, #4
 6727 0304 1233A0E1 		lsl	r3, r2, r3
 6728 0308 0C300BE5 		str	r3, [fp, #-12]
 6729 030c 050000EA 		b	.L425
 6730              	.L424:
3293:../../Source/Kernel/rme_kernel.c ****     }
3294:../../Source/Kernel/rme_kernel.c ****     else
3295:../../Source/Kernel/rme_kernel.c ****     {
3296:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3297:../../Source/Kernel/rme_kernel.c **** 
3298:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(RME_PGT_NMORD(Pgt_Del->Order));
 6731              		.loc 1 3298 20
 6732 0310 14301BE5 		ldr	r3, [fp, #-20]
 6733 0314 143093E5 		ldr	r3, [r3, #20]
 6734 0318 7330FFE6 		uxth	r3, r3
 6735              		.loc 1 3298 19
 6736 031c 0420A0E3 		mov	r2, #4
 6737 0320 1233A0E1 		lsl	r3, r2, r3
 6738 0324 0C300BE5 		str	r3, [fp, #-12]
 6739              	.L425:
3299:../../Source/Kernel/rme_kernel.c ****     }
3300:../../Source/Kernel/rme_kernel.c ****     
3301:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
3302:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Pgt_Del,Type_Stat);
 6740              		.loc 1 3302 5
 6741 0328 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 178


 6742 032c 0020A0E3 		mov	r2, #0
 6743 0330 10101BE5 		ldr	r1, [fp, #-16]
 6744 0334 0300A0E1 		mov	r0, r3
 6745 0338 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6746 033c 0030A0E1 		mov	r3, r0
 6747              		.loc 1 3302 5 is_stmt 0 discriminator 1
 6748 0340 000053E3 		cmp	r3, #0
 6749 0344 0100001A 		bne	.L426
 6750 0348 0030E0E3 		mvn	r3, #0
 6751              		.loc 1 3302 5
 6752 034c 0F0000EA 		b	.L407
 6753              	.L426:
3303:../../Source/Kernel/rme_kernel.c **** 
3304:../../Source/Kernel/rme_kernel.c ****     /* Try to erase the area - This must be successful */
3305:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Table_Size)==0);
 6754              		.loc 1 3305 5 is_stmt 1
 6755 0350 0C101BE5 		ldr	r1, [fp, #-12]
 6756 0354 18001BE5 		ldr	r0, [fp, #-24]
 6757 0358 FEFFFFEB 		bl	_RME_Kot_Erase
 6758 035c 0030A0E1 		mov	r3, r0
 6759              		.loc 1 3305 5 is_stmt 0 discriminator 1
 6760 0360 000053E3 		cmp	r3, #0
 6761 0364 0800000A 		beq	.L427
 6762 0368 003000E3 		movw	r3, #:lower16:.LC6
 6763 036c 003040E3 		movt	r3, #:upper16:.LC6
 6764 0370 002000E3 		movw	r2, #:lower16:.LC7
 6765 0374 002040E3 		movt	r2, #:upper16:.LC7
 6766 0378 E91C00E3 		movw	r1, #3305
 6767 037c 000000E3 		movw	r0, #:lower16:.LC8
 6768 0380 000040E3 		movt	r0, #:upper16:.LC8
 6769 0384 FEFFFFEB 		bl	RME_Log
 6770              	.L428:
 6771              		.loc 1 3305 5
 6772 0388 FEFFFFEA 		b	.L428
 6773              	.L427:
3306:../../Source/Kernel/rme_kernel.c **** 
3307:../../Source/Kernel/rme_kernel.c ****     return 0;
 6774              		.loc 1 3307 12 is_stmt 1
 6775 038c 0030A0E3 		mov	r3, #0
 6776              	.L407:
3308:../../Source/Kernel/rme_kernel.c **** }
 6777              		.loc 1 3308 1
 6778 0390 0300A0E1 		mov	r0, r3
 6779 0394 04D04BE2 		sub	sp, fp, #4
 6780              		.cfi_def_cfa 13, 8
 6781              		@ sp needed
 6782 0398 0088BDE8 		pop	{fp, pc}
 6783              		.cfi_endproc
 6784              	.LFE33:
 6786              		.section	.text._RME_Pgt_Add,"ax",%progbits
 6787              		.align	2
 6788              		.syntax unified
 6789              		.arm
 6791              	_RME_Pgt_Add:
 6792              	.LFB34:
3309:../../Source/Kernel/rme_kernel.c **** #endif
3310:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Del *************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 179


3311:../../Source/Kernel/rme_kernel.c **** 
3312:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Add ******************************************************
3313:../../Source/Kernel/rme_kernel.c **** Description : Delegate a page from one page table to another. This is the only
3314:../../Source/Kernel/rme_kernel.c ****               way to add pages to new page tables after the system boots.
3315:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3316:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Dst - The capability to the destination page
3317:../../Source/Kernel/rme_kernel.c ****                                       directory.
3318:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3319:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate to in the
3320:../../Source/Kernel/rme_kernel.c ****                                   destination page directory.
3321:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Dst - The page access permission for the
3322:../../Source/Kernel/rme_kernel.c ****                                    destination page.
3323:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Src - The capability to the source page 
3324:../../Source/Kernel/rme_kernel.c ****                                       directory.
3325:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3326:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate from in the source
3327:../../Source/Kernel/rme_kernel.c ****                                   page directory.
3328:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Index - The index of the physical address frame to
3329:../../Source/Kernel/rme_kernel.c ****                                 delegate. For example, if the destination
3330:../../Source/Kernel/rme_kernel.c ****                                 directory's page size is 1/4 of that of the
3331:../../Source/Kernel/rme_kernel.c ****                                 source directory, index=0 will delegate the
3332:../../Source/Kernel/rme_kernel.c ****                                 first 1/4, index=1 will delegate the second
3333:../../Source/Kernel/rme_kernel.c ****                                 1/4, index=2 will delegate the third 1/4, and
3334:../../Source/Kernel/rme_kernel.c ****                                 index=3 will delegate the last 1/4.
3335:../../Source/Kernel/rme_kernel.c ****                                 All other index values are illegal.
3336:../../Source/Kernel/rme_kernel.c **** Output      : None.
3337:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3338:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3339:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3340:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Add(struct RME_Cap_Cpt* Cpt, 
3341:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Dst,
3342:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Dst,
3343:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Dst,
3344:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Src,
3345:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Src,
3346:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Index)
3347:../../Source/Kernel/rme_kernel.c **** {
 6793              		.loc 1 3347 1
 6794              		.cfi_startproc
 6795              		@ args = 12, pretend = 0, frame = 48
 6796              		@ frame_needed = 1, uses_anonymous_args = 0
 6797 0000 00482DE9 		push	{fp, lr}
 6798              		.cfi_def_cfa_offset 8
 6799              		.cfi_offset 11, -8
 6800              		.cfi_offset 14, -4
 6801 0004 04B08DE2 		add	fp, sp, #4
 6802              		.cfi_def_cfa 11, 4
 6803 0008 30D04DE2 		sub	sp, sp, #48
 6804 000c 28000BE5 		str	r0, [fp, #-40]
 6805 0010 2C100BE5 		str	r1, [fp, #-44]
 6806 0014 30200BE5 		str	r2, [fp, #-48]
 6807 0018 34300BE5 		str	r3, [fp, #-52]
3348:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Src;
3349:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Dst;
3350:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Dst;
3351:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Src;
3352:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag_Src;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 180


3353:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3354:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Src;
3355:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Dst;
3356:../../Source/Kernel/rme_kernel.c **** 
3357:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3358:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Dst,RME_CAP_TYPE_PGT,
 6808              		.loc 1 3358 5
 6809 001c 2C301BE5 		ldr	r3, [fp, #-44]
 6810 0020 803003E2 		and	r3, r3, #128
 6811 0024 000053E3 		cmp	r3, #0
 6812 0028 1C00001A 		bne	.L430
 6813              		.loc 1 3358 5 is_stmt 0 discriminator 1
 6814 002c 28301BE5 		ldr	r3, [fp, #-40]
 6815 0030 142093E5 		ldr	r2, [r3, #20]
 6816 0034 2C301BE5 		ldr	r3, [fp, #-44]
 6817 0038 030052E1 		cmp	r2, r3
 6818 003c 0100008A 		bhi	.L431
 6819              		.loc 1 3358 5 discriminator 3
 6820 0040 0230E0E3 		mvn	r3, #2
 6821              		.loc 1 3358 5
 6822 0044 260100EA 		b	.L460
 6823              	.L431:
 6824              		.loc 1 3358 5 discriminator 4
 6825 0048 2C301BE5 		ldr	r3, [fp, #-44]
 6826 004c 8322A0E1 		lsl	r2, r3, #5
 6827 0050 28301BE5 		ldr	r3, [fp, #-40]
 6828 0054 0C3093E5 		ldr	r3, [r3, #12]
 6829 0058 033082E0 		add	r3, r2, r3
 6830 005c 0C300BE5 		str	r3, [fp, #-12]
 6831 0060 0C301BE5 		ldr	r3, [fp, #-12]
 6832 0064 0300A0E1 		mov	r0, r3
 6833 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6834 006c 14000BE5 		str	r0, [fp, #-20]
 6835              		.loc 1 3358 5 discriminator 1
 6836 0070 14301BE5 		ldr	r3, [fp, #-20]
 6837 0074 FF3803E2 		and	r3, r3, #16711680
 6838 0078 020853E3 		cmp	r3, #131072
 6839 007c 0100001A 		bne	.L433
 6840              		.loc 1 3358 5 discriminator 5
 6841 0080 0830E0E3 		mvn	r3, #8
 6842              		.loc 1 3358 5
 6843 0084 160100EA 		b	.L460
 6844              	.L433:
 6845              		.loc 1 3358 5 discriminator 6
 6846 0088 14301BE5 		ldr	r3, [fp, #-20]
 6847 008c 233CA0E1 		lsr	r3, r3, #24
 6848 0090 040053E3 		cmp	r3, #4
 6849 0094 3F00000A 		beq	.L434
 6850              		.loc 1 3358 5 discriminator 7
 6851 0098 0130E0E3 		mvn	r3, #1
 6852              		.loc 1 3358 5
 6853 009c 100100EA 		b	.L460
 6854              	.L430:
 6855              		.loc 1 3358 5 discriminator 2
 6856 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 6857 00a4 2324A0E1 		lsr	r2, r3, #8
 6858 00a8 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 181


 6859 00ac 143093E5 		ldr	r3, [r3, #20]
 6860 00b0 030052E1 		cmp	r2, r3
 6861 00b4 0100003A 		bcc	.L435
 6862              		.loc 1 3358 5 discriminator 8
 6863 00b8 0230E0E3 		mvn	r3, #2
 6864              		.loc 1 3358 5
 6865 00bc 080100EA 		b	.L460
 6866              	.L435:
 6867              		.loc 1 3358 5 discriminator 9
 6868 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 6869 00c4 2334A0E1 		lsr	r3, r3, #8
 6870 00c8 8322A0E1 		lsl	r2, r3, #5
 6871 00cc 28301BE5 		ldr	r3, [fp, #-40]
 6872 00d0 0C3093E5 		ldr	r3, [r3, #12]
 6873 00d4 033082E0 		add	r3, r2, r3
 6874 00d8 0C300BE5 		str	r3, [fp, #-12]
 6875 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 6876 00e0 0300A0E1 		mov	r0, r3
 6877 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6878 00e8 14000BE5 		str	r0, [fp, #-20]
 6879              		.loc 1 3358 5 discriminator 1
 6880 00ec 14301BE5 		ldr	r3, [fp, #-20]
 6881 00f0 FF3803E2 		and	r3, r3, #16711680
 6882 00f4 020853E3 		cmp	r3, #131072
 6883 00f8 0100001A 		bne	.L436
 6884              		.loc 1 3358 5 discriminator 10
 6885 00fc 0830E0E3 		mvn	r3, #8
 6886              		.loc 1 3358 5
 6887 0100 F70000EA 		b	.L460
 6888              	.L436:
 6889              		.loc 1 3358 5 discriminator 11
 6890 0104 14301BE5 		ldr	r3, [fp, #-20]
 6891 0108 233CA0E1 		lsr	r3, r3, #24
 6892 010c 030053E3 		cmp	r3, #3
 6893 0110 0100000A 		beq	.L437
 6894              		.loc 1 3358 5 discriminator 12
 6895 0114 0130E0E3 		mvn	r3, #1
 6896              		.loc 1 3358 5
 6897 0118 F10000EA 		b	.L460
 6898              	.L437:
 6899              		.loc 1 3358 5 discriminator 13
 6900 011c 2C301BE5 		ldr	r3, [fp, #-44]
 6901 0120 7F2003E2 		and	r2, r3, #127
 6902 0124 0C301BE5 		ldr	r3, [fp, #-12]
 6903 0128 143093E5 		ldr	r3, [r3, #20]
 6904 012c 030052E1 		cmp	r2, r3
 6905 0130 0100003A 		bcc	.L438
 6906              		.loc 1 3358 5 discriminator 14
 6907 0134 0230E0E3 		mvn	r3, #2
 6908              		.loc 1 3358 5
 6909 0138 E90000EA 		b	.L460
 6910              	.L438:
 6911              		.loc 1 3358 5 discriminator 15
 6912 013c 2C301BE5 		ldr	r3, [fp, #-44]
 6913 0140 7F3003E2 		and	r3, r3, #127
 6914 0144 8322A0E1 		lsl	r2, r3, #5
 6915 0148 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 182


 6916 014c 0C3093E5 		ldr	r3, [r3, #12]
 6917 0150 033082E0 		add	r3, r2, r3
 6918 0154 0C300BE5 		str	r3, [fp, #-12]
 6919 0158 0C301BE5 		ldr	r3, [fp, #-12]
 6920 015c 0300A0E1 		mov	r0, r3
 6921 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6922 0164 14000BE5 		str	r0, [fp, #-20]
 6923              		.loc 1 3358 5 discriminator 1
 6924 0168 14301BE5 		ldr	r3, [fp, #-20]
 6925 016c FF3803E2 		and	r3, r3, #16711680
 6926 0170 020853E3 		cmp	r3, #131072
 6927 0174 0100001A 		bne	.L439
 6928              		.loc 1 3358 5 discriminator 16
 6929 0178 0830E0E3 		mvn	r3, #8
 6930              		.loc 1 3358 5
 6931 017c D80000EA 		b	.L460
 6932              	.L439:
 6933              		.loc 1 3358 5 discriminator 17
 6934 0180 14301BE5 		ldr	r3, [fp, #-20]
 6935 0184 233CA0E1 		lsr	r3, r3, #24
 6936 0188 040053E3 		cmp	r3, #4
 6937 018c 0100000A 		beq	.L434
 6938              		.loc 1 3358 5 discriminator 18
 6939 0190 0130E0E3 		mvn	r3, #1
 6940              		.loc 1 3358 5
 6941 0194 D20000EA 		b	.L460
 6942              	.L434:
3359:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Dst,Type_Stat);
3360:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Src,RME_CAP_TYPE_PGT,
 6943              		.loc 1 3360 5 is_stmt 1
 6944 0198 04309BE5 		ldr	r3, [fp, #4]
 6945 019c 803003E2 		and	r3, r3, #128
 6946 01a0 000053E3 		cmp	r3, #0
 6947 01a4 1C00001A 		bne	.L440
 6948              		.loc 1 3360 5 is_stmt 0 discriminator 1
 6949 01a8 28301BE5 		ldr	r3, [fp, #-40]
 6950 01ac 142093E5 		ldr	r2, [r3, #20]
 6951 01b0 04309BE5 		ldr	r3, [fp, #4]
 6952 01b4 030052E1 		cmp	r2, r3
 6953 01b8 0100008A 		bhi	.L441
 6954              		.loc 1 3360 5 discriminator 3
 6955 01bc 0230E0E3 		mvn	r3, #2
 6956              		.loc 1 3360 5
 6957 01c0 C70000EA 		b	.L460
 6958              	.L441:
 6959              		.loc 1 3360 5 discriminator 4
 6960 01c4 04309BE5 		ldr	r3, [fp, #4]
 6961 01c8 8322A0E1 		lsl	r2, r3, #5
 6962 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6963 01d0 0C3093E5 		ldr	r3, [r3, #12]
 6964 01d4 033082E0 		add	r3, r2, r3
 6965 01d8 08300BE5 		str	r3, [fp, #-8]
 6966 01dc 08301BE5 		ldr	r3, [fp, #-8]
 6967 01e0 0300A0E1 		mov	r0, r3
 6968 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6969 01e8 14000BE5 		str	r0, [fp, #-20]
 6970              		.loc 1 3360 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 183


 6971 01ec 14301BE5 		ldr	r3, [fp, #-20]
 6972 01f0 FF3803E2 		and	r3, r3, #16711680
 6973 01f4 020853E3 		cmp	r3, #131072
 6974 01f8 0100001A 		bne	.L442
 6975              		.loc 1 3360 5 discriminator 5
 6976 01fc 0830E0E3 		mvn	r3, #8
 6977              		.loc 1 3360 5
 6978 0200 B70000EA 		b	.L460
 6979              	.L442:
 6980              		.loc 1 3360 5 discriminator 6
 6981 0204 14301BE5 		ldr	r3, [fp, #-20]
 6982 0208 233CA0E1 		lsr	r3, r3, #24
 6983 020c 040053E3 		cmp	r3, #4
 6984 0210 3F00000A 		beq	.L443
 6985              		.loc 1 3360 5 discriminator 7
 6986 0214 0130E0E3 		mvn	r3, #1
 6987              		.loc 1 3360 5
 6988 0218 B10000EA 		b	.L460
 6989              	.L440:
 6990              		.loc 1 3360 5 discriminator 2
 6991 021c 04309BE5 		ldr	r3, [fp, #4]
 6992 0220 2324A0E1 		lsr	r2, r3, #8
 6993 0224 28301BE5 		ldr	r3, [fp, #-40]
 6994 0228 143093E5 		ldr	r3, [r3, #20]
 6995 022c 030052E1 		cmp	r2, r3
 6996 0230 0100003A 		bcc	.L444
 6997              		.loc 1 3360 5 discriminator 8
 6998 0234 0230E0E3 		mvn	r3, #2
 6999              		.loc 1 3360 5
 7000 0238 A90000EA 		b	.L460
 7001              	.L444:
 7002              		.loc 1 3360 5 discriminator 9
 7003 023c 04309BE5 		ldr	r3, [fp, #4]
 7004 0240 2334A0E1 		lsr	r3, r3, #8
 7005 0244 8322A0E1 		lsl	r2, r3, #5
 7006 0248 28301BE5 		ldr	r3, [fp, #-40]
 7007 024c 0C3093E5 		ldr	r3, [r3, #12]
 7008 0250 033082E0 		add	r3, r2, r3
 7009 0254 08300BE5 		str	r3, [fp, #-8]
 7010 0258 08301BE5 		ldr	r3, [fp, #-8]
 7011 025c 0300A0E1 		mov	r0, r3
 7012 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7013 0264 14000BE5 		str	r0, [fp, #-20]
 7014              		.loc 1 3360 5 discriminator 1
 7015 0268 14301BE5 		ldr	r3, [fp, #-20]
 7016 026c FF3803E2 		and	r3, r3, #16711680
 7017 0270 020853E3 		cmp	r3, #131072
 7018 0274 0100001A 		bne	.L445
 7019              		.loc 1 3360 5 discriminator 10
 7020 0278 0830E0E3 		mvn	r3, #8
 7021              		.loc 1 3360 5
 7022 027c 980000EA 		b	.L460
 7023              	.L445:
 7024              		.loc 1 3360 5 discriminator 11
 7025 0280 14301BE5 		ldr	r3, [fp, #-20]
 7026 0284 233CA0E1 		lsr	r3, r3, #24
 7027 0288 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 184


 7028 028c 0100000A 		beq	.L446
 7029              		.loc 1 3360 5 discriminator 12
 7030 0290 0130E0E3 		mvn	r3, #1
 7031              		.loc 1 3360 5
 7032 0294 920000EA 		b	.L460
 7033              	.L446:
 7034              		.loc 1 3360 5 discriminator 13
 7035 0298 04309BE5 		ldr	r3, [fp, #4]
 7036 029c 7F2003E2 		and	r2, r3, #127
 7037 02a0 08301BE5 		ldr	r3, [fp, #-8]
 7038 02a4 143093E5 		ldr	r3, [r3, #20]
 7039 02a8 030052E1 		cmp	r2, r3
 7040 02ac 0100003A 		bcc	.L447
 7041              		.loc 1 3360 5 discriminator 14
 7042 02b0 0230E0E3 		mvn	r3, #2
 7043              		.loc 1 3360 5
 7044 02b4 8A0000EA 		b	.L460
 7045              	.L447:
 7046              		.loc 1 3360 5 discriminator 15
 7047 02b8 04309BE5 		ldr	r3, [fp, #4]
 7048 02bc 7F3003E2 		and	r3, r3, #127
 7049 02c0 8322A0E1 		lsl	r2, r3, #5
 7050 02c4 08301BE5 		ldr	r3, [fp, #-8]
 7051 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7052 02cc 033082E0 		add	r3, r2, r3
 7053 02d0 08300BE5 		str	r3, [fp, #-8]
 7054 02d4 08301BE5 		ldr	r3, [fp, #-8]
 7055 02d8 0300A0E1 		mov	r0, r3
 7056 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7057 02e0 14000BE5 		str	r0, [fp, #-20]
 7058              		.loc 1 3360 5 discriminator 1
 7059 02e4 14301BE5 		ldr	r3, [fp, #-20]
 7060 02e8 FF3803E2 		and	r3, r3, #16711680
 7061 02ec 020853E3 		cmp	r3, #131072
 7062 02f0 0100001A 		bne	.L448
 7063              		.loc 1 3360 5 discriminator 16
 7064 02f4 0830E0E3 		mvn	r3, #8
 7065              		.loc 1 3360 5
 7066 02f8 790000EA 		b	.L460
 7067              	.L448:
 7068              		.loc 1 3360 5 discriminator 17
 7069 02fc 14301BE5 		ldr	r3, [fp, #-20]
 7070 0300 233CA0E1 		lsr	r3, r3, #24
 7071 0304 040053E3 		cmp	r3, #4
 7072 0308 0100000A 		beq	.L443
 7073              		.loc 1 3360 5 discriminator 18
 7074 030c 0130E0E3 		mvn	r3, #1
 7075              		.loc 1 3360 5
 7076 0310 730000EA 		b	.L460
 7077              	.L443:
3361:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Src,Type_Stat);
3362:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3363:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Dst,RME_PGT_FLAG_ADD_DST);
 7078              		.loc 1 3363 5 is_stmt 1
 7079 0314 0C301BE5 		ldr	r3, [fp, #-12]
 7080 0318 083093E5 		ldr	r3, [r3, #8]
 7081 031c 023003E2 		and	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 185


 7082 0320 000053E3 		cmp	r3, #0
 7083 0324 0100001A 		bne	.L449
 7084              		.loc 1 3363 5 is_stmt 0 discriminator 1
 7085 0328 0630E0E3 		mvn	r3, #6
 7086              		.loc 1 3363 5
 7087 032c 6C0000EA 		b	.L460
 7088              	.L449:
3364:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Src,RME_PGT_FLAG_ADD_SRC);
 7089              		.loc 1 3364 5 is_stmt 1
 7090 0330 08301BE5 		ldr	r3, [fp, #-8]
 7091 0334 083093E5 		ldr	r3, [r3, #8]
 7092 0338 013003E2 		and	r3, r3, #1
 7093 033c 000053E3 		cmp	r3, #0
 7094 0340 0100001A 		bne	.L450
 7095              		.loc 1 3364 5 is_stmt 0 discriminator 1
 7096 0344 0630E0E3 		mvn	r3, #6
 7097              		.loc 1 3364 5
 7098 0348 650000EA 		b	.L460
 7099              	.L450:
3365:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3366:../../Source/Kernel/rme_kernel.c ****     if((Pos_Dst>RME_PGT_FLAG_HIGH(Pgt_Dst->Head.Flag))||
 7100              		.loc 1 3366 17 is_stmt 1
 7101 034c 0C301BE5 		ldr	r3, [fp, #-12]
 7102 0350 083093E5 		ldr	r3, [r3, #8]
 7103 0354 233AA0E1 		lsr	r3, r3, #20
 7104              		.loc 1 3366 7
 7105 0358 30201BE5 		ldr	r2, [fp, #-48]
 7106 035c 030052E1 		cmp	r2, r3
 7107 0360 1300008A 		bhi	.L451
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7108              		.loc 1 3367 17
 7109 0364 0C301BE5 		ldr	r3, [fp, #-12]
 7110 0368 083093E5 		ldr	r3, [r3, #8]
 7111 036c 2334A0E1 		lsr	r3, r3, #8
 7112 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3366:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7113              		.loc 1 3366 55 discriminator 1
 7114 0374 30201BE5 		ldr	r2, [fp, #-48]
 7115 0378 030052E1 		cmp	r2, r3
 7116 037c 0C00003A 		bcc	.L451
3368:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 7117              		.loc 1 3368 17
 7118 0380 08301BE5 		ldr	r3, [fp, #-8]
 7119 0384 083093E5 		ldr	r3, [r3, #8]
 7120 0388 233AA0E1 		lsr	r3, r3, #20
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7121              		.loc 1 3367 54
 7122 038c 08209BE5 		ldr	r2, [fp, #8]
 7123 0390 030052E1 		cmp	r2, r3
 7124 0394 0600008A 		bhi	.L451
3369:../../Source/Kernel/rme_kernel.c ****        (Pos_Src<RME_PGT_FLAG_LOW(Pgt_Src->Head.Flag)))
 7125              		.loc 1 3369 17
 7126 0398 08301BE5 		ldr	r3, [fp, #-8]
 7127 039c 083093E5 		ldr	r3, [r3, #8]
 7128 03a0 2334A0E1 		lsr	r3, r3, #8
 7129 03a4 5330EBE7 		ubfx	r3, r3, #0, #12
3368:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 186


 7130              		.loc 1 3368 55
 7131 03a8 08209BE5 		ldr	r2, [fp, #8]
 7132 03ac 030052E1 		cmp	r2, r3
 7133 03b0 0100002A 		bcs	.L452
 7134              	.L451:
3370:../../Source/Kernel/rme_kernel.c ****     {
3371:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3372:../../Source/Kernel/rme_kernel.c **** 
3373:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7135              		.loc 1 3373 16
 7136 03b4 0630E0E3 		mvn	r3, #6
 7137 03b8 490000EA 		b	.L460
 7138              	.L452:
3374:../../Source/Kernel/rme_kernel.c ****     }
3375:../../Source/Kernel/rme_kernel.c ****     else
3376:../../Source/Kernel/rme_kernel.c ****     {
3377:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3378:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3379:../../Source/Kernel/rme_kernel.c ****     }
3380:../../Source/Kernel/rme_kernel.c **** 
3381:../../Source/Kernel/rme_kernel.c ****     /* See if the size order relationship is correct */
3382:../../Source/Kernel/rme_kernel.c ****     Szord_Dst=RME_PGT_SZORD(Pgt_Dst->Order);
 7139              		.loc 1 3382 15
 7140 03bc 0C301BE5 		ldr	r3, [fp, #-12]
 7141 03c0 143093E5 		ldr	r3, [r3, #20]
 7142              		.loc 1 3382 14
 7143 03c4 2338A0E1 		lsr	r3, r3, #16
 7144 03c8 18300BE5 		str	r3, [fp, #-24]
3383:../../Source/Kernel/rme_kernel.c ****     Szord_Src=RME_PGT_SZORD(Pgt_Src->Order);
 7145              		.loc 1 3383 15
 7146 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7147 03d0 143093E5 		ldr	r3, [r3, #20]
 7148              		.loc 1 3383 14
 7149 03d4 2338A0E1 		lsr	r3, r3, #16
 7150 03d8 1C300BE5 		str	r3, [fp, #-28]
3384:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst>Szord_Src)
 7151              		.loc 1 3384 7
 7152 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7153 03e0 1C301BE5 		ldr	r3, [fp, #-28]
 7154 03e4 030052E1 		cmp	r2, r3
 7155 03e8 0100009A 		bls	.L453
3385:../../Source/Kernel/rme_kernel.c ****     {
3386:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3387:../../Source/Kernel/rme_kernel.c **** 
3388:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7156              		.loc 1 3388 16
 7157 03ec 6430E0E3 		mvn	r3, #100
 7158 03f0 3B0000EA 		b	.L460
 7159              	.L453:
3389:../../Source/Kernel/rme_kernel.c ****     }
3390:../../Source/Kernel/rme_kernel.c ****     else
3391:../../Source/Kernel/rme_kernel.c ****     {
3392:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3393:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3394:../../Source/Kernel/rme_kernel.c ****     }
3395:../../Source/Kernel/rme_kernel.c **** 
3396:../../Source/Kernel/rme_kernel.c ****     /* See if the positions are out of range - NMORD is restricted, no UB */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 187


3397:../../Source/Kernel/rme_kernel.c ****     if(((Pos_Dst>>RME_PGT_NMORD(Pgt_Dst->Order))!=0U)||
 7160              		.loc 1 3397 19
 7161 03f4 0C301BE5 		ldr	r3, [fp, #-12]
 7162 03f8 143093E5 		ldr	r3, [r3, #20]
 7163 03fc 7330FFE6 		uxth	r3, r3
 7164              		.loc 1 3397 17
 7165 0400 30201BE5 		ldr	r2, [fp, #-48]
 7166 0404 3233A0E1 		lsr	r3, r2, r3
 7167              		.loc 1 3397 7
 7168 0408 000053E3 		cmp	r3, #0
 7169 040c 0600001A 		bne	.L454
3398:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7170              		.loc 1 3398 19
 7171 0410 08301BE5 		ldr	r3, [fp, #-8]
 7172 0414 143093E5 		ldr	r3, [r3, #20]
 7173 0418 7330FFE6 		uxth	r3, r3
 7174              		.loc 1 3398 17
 7175 041c 08209BE5 		ldr	r2, [fp, #8]
 7176 0420 3233A0E1 		lsr	r3, r2, r3
3397:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7177              		.loc 1 3397 54 discriminator 1
 7178 0424 000053E3 		cmp	r3, #0
 7179 0428 0100000A 		beq	.L455
 7180              	.L454:
3399:../../Source/Kernel/rme_kernel.c ****     {
3400:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3401:../../Source/Kernel/rme_kernel.c **** 
3402:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7181              		.loc 1 3402 16
 7182 042c 6430E0E3 		mvn	r3, #100
 7183 0430 2B0000EA 		b	.L460
 7184              	.L455:
3403:../../Source/Kernel/rme_kernel.c ****     }
3404:../../Source/Kernel/rme_kernel.c ****     else
3405:../../Source/Kernel/rme_kernel.c ****     {
3406:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3407:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3408:../../Source/Kernel/rme_kernel.c ****     }
3409:../../Source/Kernel/rme_kernel.c **** 
3410:../../Source/Kernel/rme_kernel.c ****     /* See if the source subposition is out of range - avoid UB */
3411:../../Source/Kernel/rme_kernel.c ****     if(Szord_Src<RME_WORD_BIT)
 7185              		.loc 1 3411 7
 7186 0434 1C301BE5 		ldr	r3, [fp, #-28]
 7187 0438 1F0053E3 		cmp	r3, #31
 7188 043c 0900008A 		bhi	.L456
3412:../../Source/Kernel/rme_kernel.c ****     {
3413:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3414:../../Source/Kernel/rme_kernel.c ****         
3415:../../Source/Kernel/rme_kernel.c ****         /* No UB because Szord_Dst<=Szord_Src */
3416:../../Source/Kernel/rme_kernel.c ****         if(RME_POW2(Szord_Src)<=(Index<<Szord_Dst))
 7189              		.loc 1 3416 12
 7190 0440 0120A0E3 		mov	r2, #1
 7191 0444 1C301BE5 		ldr	r3, [fp, #-28]
 7192 0448 1223A0E1 		lsl	r2, r2, r3
 7193              		.loc 1 3416 39
 7194 044c 0C109BE5 		ldr	r1, [fp, #12]
 7195 0450 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 188


 7196 0454 1133A0E1 		lsl	r3, r1, r3
 7197              		.loc 1 3416 11
 7198 0458 030052E1 		cmp	r2, r3
 7199 045c 0100008A 		bhi	.L456
3417:../../Source/Kernel/rme_kernel.c ****         {
3418:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3419:../../Source/Kernel/rme_kernel.c **** 
3420:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
 7200              		.loc 1 3420 20
 7201 0460 6430E0E3 		mvn	r3, #100
 7202 0464 1E0000EA 		b	.L460
 7203              	.L456:
3421:../../Source/Kernel/rme_kernel.c ****         }
3422:../../Source/Kernel/rme_kernel.c ****         else
3423:../../Source/Kernel/rme_kernel.c ****         {
3424:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3425:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3426:../../Source/Kernel/rme_kernel.c ****         }
3427:../../Source/Kernel/rme_kernel.c ****     }
3428:../../Source/Kernel/rme_kernel.c ****     else
3429:../../Source/Kernel/rme_kernel.c ****     {
3430:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3431:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3432:../../Source/Kernel/rme_kernel.c ****     }
3433:../../Source/Kernel/rme_kernel.c **** 
3434:../../Source/Kernel/rme_kernel.c ****     /* Get the physical address and RME standard flags of that source page */
3435:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Lookup(Pgt_Src,Pos_Src,&Paddr_Src,&Flag_Src)<0)
 7204              		.loc 1 3435 8
 7205 0468 24304BE2 		sub	r3, fp, #36
 7206 046c 20204BE2 		sub	r2, fp, #32
 7207 0470 08109BE5 		ldr	r1, [fp, #8]
 7208 0474 08001BE5 		ldr	r0, [fp, #-8]
 7209 0478 FEFFFFEB 		bl	__RME_Pgt_Lookup
3436:../../Source/Kernel/rme_kernel.c ****     {
3437:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3438:../../Source/Kernel/rme_kernel.c **** 
3439:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3440:../../Source/Kernel/rme_kernel.c ****     }
3441:../../Source/Kernel/rme_kernel.c ****     else
3442:../../Source/Kernel/rme_kernel.c ****     {
3443:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3444:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3445:../../Source/Kernel/rme_kernel.c ****     }
3446:../../Source/Kernel/rme_kernel.c **** 
3447:../../Source/Kernel/rme_kernel.c ****     /* Calculate the destination physical address - avoid UB */
3448:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst<RME_WORD_BIT)
 7210              		.loc 1 3448 7
 7211 047c 18301BE5 		ldr	r3, [fp, #-24]
 7212 0480 1F0053E3 		cmp	r3, #31
 7213 0484 0600008A 		bhi	.L457
3449:../../Source/Kernel/rme_kernel.c ****     {
3450:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3451:../../Source/Kernel/rme_kernel.c ****         
3452:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src+(Index<<Szord_Dst);
 7214              		.loc 1 3452 35
 7215 0488 0C209BE5 		ldr	r2, [fp, #12]
 7216 048c 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 189


 7217 0490 1223A0E1 		lsl	r2, r2, r3
 7218              		.loc 1 3452 28
 7219 0494 20301BE5 		ldr	r3, [fp, #-32]
 7220              		.loc 1 3452 18
 7221 0498 033082E0 		add	r3, r2, r3
 7222 049c 10300BE5 		str	r3, [fp, #-16]
 7223 04a0 010000EA 		b	.L458
 7224              	.L457:
3453:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3454:../../Source/Kernel/rme_kernel.c ****         /* Check if we force identical mapping */
3455:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=(RME_PGT_BASE(Pgt_Dst->Base)+(Pos_Dst<<Szord_Dst)))
3456:../../Source/Kernel/rme_kernel.c ****         {
3457:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3458:../../Source/Kernel/rme_kernel.c **** 
3459:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3460:../../Source/Kernel/rme_kernel.c ****         }
3461:../../Source/Kernel/rme_kernel.c ****         else
3462:../../Source/Kernel/rme_kernel.c ****         {
3463:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3464:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3465:../../Source/Kernel/rme_kernel.c ****         }
3466:../../Source/Kernel/rme_kernel.c **** #endif
3467:../../Source/Kernel/rme_kernel.c ****     }
3468:../../Source/Kernel/rme_kernel.c ****     /* The destination is also full range */
3469:../../Source/Kernel/rme_kernel.c ****     else
3470:../../Source/Kernel/rme_kernel.c ****     {
3471:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3472:../../Source/Kernel/rme_kernel.c ****         
3473:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src;
 7225              		.loc 1 3473 18
 7226 04a4 20301BE5 		ldr	r3, [fp, #-32]
 7227 04a8 10300BE5 		str	r3, [fp, #-16]
 7228              	.L458:
3474:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3475:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=RME_PGT_BASE(Pgt_Dst->Base))
3476:../../Source/Kernel/rme_kernel.c ****         {
3477:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3478:../../Source/Kernel/rme_kernel.c **** 
3479:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3480:../../Source/Kernel/rme_kernel.c ****         }
3481:../../Source/Kernel/rme_kernel.c ****         else
3482:../../Source/Kernel/rme_kernel.c ****         {
3483:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3484:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3485:../../Source/Kernel/rme_kernel.c ****         }
3486:../../Source/Kernel/rme_kernel.c **** #endif
3487:../../Source/Kernel/rme_kernel.c ****     }
3488:../../Source/Kernel/rme_kernel.c ****     
3489:../../Source/Kernel/rme_kernel.c ****     /* Analyze the flags - we do not allow expansion of access permissions */
3490:../../Source/Kernel/rme_kernel.c ****     if(((Flag_Dst)&(~Flag_Src))!=0U)
 7229              		.loc 1 3490 21
 7230 04ac 24301BE5 		ldr	r3, [fp, #-36]
 7231 04b0 0320E0E1 		mvn	r2, r3
 7232              		.loc 1 3490 19
 7233 04b4 34301BE5 		ldr	r3, [fp, #-52]
 7234 04b8 023003E0 		and	r3, r3, r2
 7235              		.loc 1 3490 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 190


 7236 04bc 000053E3 		cmp	r3, #0
 7237 04c0 0100000A 		beq	.L459
3491:../../Source/Kernel/rme_kernel.c ****     {
3492:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3493:../../Source/Kernel/rme_kernel.c **** 
3494:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_PERM;
 7238              		.loc 1 3494 16
 7239 04c4 6730E0E3 		mvn	r3, #103
 7240 04c8 050000EA 		b	.L460
 7241              	.L459:
3495:../../Source/Kernel/rme_kernel.c ****     }
3496:../../Source/Kernel/rme_kernel.c ****     else
3497:../../Source/Kernel/rme_kernel.c ****     {
3498:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3499:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3500:../../Source/Kernel/rme_kernel.c ****     }
3501:../../Source/Kernel/rme_kernel.c **** 
3502:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3503:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3504:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Dst,Paddr_Dst,Pos_Dst,Flag_Dst)<0)
 7242              		.loc 1 3504 8
 7243 04cc 34301BE5 		ldr	r3, [fp, #-52]
 7244 04d0 30201BE5 		ldr	r2, [fp, #-48]
 7245 04d4 10101BE5 		ldr	r1, [fp, #-16]
 7246 04d8 0C001BE5 		ldr	r0, [fp, #-12]
 7247 04dc FEFFFFEB 		bl	__RME_Pgt_Page_Map
3505:../../Source/Kernel/rme_kernel.c ****     {
3506:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3507:../../Source/Kernel/rme_kernel.c **** 
3508:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3509:../../Source/Kernel/rme_kernel.c ****     }
3510:../../Source/Kernel/rme_kernel.c ****     else
3511:../../Source/Kernel/rme_kernel.c ****     {
3512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3513:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3514:../../Source/Kernel/rme_kernel.c ****     }
3515:../../Source/Kernel/rme_kernel.c **** 
3516:../../Source/Kernel/rme_kernel.c ****     return 0;
 7248              		.loc 1 3516 12
 7249 04e0 0030A0E3 		mov	r3, #0
 7250              	.L460:
3517:../../Source/Kernel/rme_kernel.c **** }
 7251              		.loc 1 3517 1
 7252 04e4 0300A0E1 		mov	r0, r3
 7253 04e8 04D04BE2 		sub	sp, fp, #4
 7254              		.cfi_def_cfa 13, 8
 7255              		@ sp needed
 7256 04ec 0088BDE8 		pop	{fp, pc}
 7257              		.cfi_endproc
 7258              	.LFE34:
 7260              		.section	.text._RME_Pgt_Rem,"ax",%progbits
 7261              		.align	2
 7262              		.syntax unified
 7263              		.arm
 7265              	_RME_Pgt_Rem:
 7266              	.LFB35:
3518:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 191


3519:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Add *************************************************/
3520:../../Source/Kernel/rme_kernel.c **** 
3521:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Rem ******************************************************
3522:../../Source/Kernel/rme_kernel.c **** Description : Remove a page from the page table. We are doing unmapping of a
3523:../../Source/Kernel/rme_kernel.c ****               page.
3524:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3525:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
3526:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3527:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to unmap from.
3528:../../Source/Kernel/rme_kernel.c **** Output      : None.
3529:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3530:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3531:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3532:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Rem(struct RME_Cap_Cpt* Cpt,
3533:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3534:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos)
3535:../../Source/Kernel/rme_kernel.c **** {
 7267              		.loc 1 3535 1
 7268              		.cfi_startproc
 7269              		@ args = 0, pretend = 0, frame = 24
 7270              		@ frame_needed = 1, uses_anonymous_args = 0
 7271 0000 00482DE9 		push	{fp, lr}
 7272              		.cfi_def_cfa_offset 8
 7273              		.cfi_offset 11, -8
 7274              		.cfi_offset 14, -4
 7275 0004 04B08DE2 		add	fp, sp, #4
 7276              		.cfi_def_cfa 11, 4
 7277 0008 18D04DE2 		sub	sp, sp, #24
 7278 000c 10000BE5 		str	r0, [fp, #-16]
 7279 0010 14100BE5 		str	r1, [fp, #-20]
 7280 0014 18200BE5 		str	r2, [fp, #-24]
3536:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Rem;
3537:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3538:../../Source/Kernel/rme_kernel.c ****     
3539:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3540:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_CPT,
 7281              		.loc 1 3540 5
 7282 0018 14301BE5 		ldr	r3, [fp, #-20]
 7283 001c 803003E2 		and	r3, r3, #128
 7284 0020 000053E3 		cmp	r3, #0
 7285 0024 1C00001A 		bne	.L462
 7286              		.loc 1 3540 5 is_stmt 0 discriminator 1
 7287 0028 10301BE5 		ldr	r3, [fp, #-16]
 7288 002c 142093E5 		ldr	r2, [r3, #20]
 7289 0030 14301BE5 		ldr	r3, [fp, #-20]
 7290 0034 030052E1 		cmp	r2, r3
 7291 0038 0100008A 		bhi	.L463
 7292              		.loc 1 3540 5 discriminator 3
 7293 003c 0230E0E3 		mvn	r3, #2
 7294              		.loc 1 3540 5
 7295 0040 760000EA 		b	.L464
 7296              	.L463:
 7297              		.loc 1 3540 5 discriminator 4
 7298 0044 14301BE5 		ldr	r3, [fp, #-20]
 7299 0048 8322A0E1 		lsl	r2, r3, #5
 7300 004c 10301BE5 		ldr	r3, [fp, #-16]
 7301 0050 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 192


 7302 0054 033082E0 		add	r3, r2, r3
 7303 0058 08300BE5 		str	r3, [fp, #-8]
 7304 005c 08301BE5 		ldr	r3, [fp, #-8]
 7305 0060 0300A0E1 		mov	r0, r3
 7306 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7307 0068 0C000BE5 		str	r0, [fp, #-12]
 7308              		.loc 1 3540 5 discriminator 1
 7309 006c 0C301BE5 		ldr	r3, [fp, #-12]
 7310 0070 FF3803E2 		and	r3, r3, #16711680
 7311 0074 020853E3 		cmp	r3, #131072
 7312 0078 0100001A 		bne	.L465
 7313              		.loc 1 3540 5 discriminator 5
 7314 007c 0830E0E3 		mvn	r3, #8
 7315              		.loc 1 3540 5
 7316 0080 660000EA 		b	.L464
 7317              	.L465:
 7318              		.loc 1 3540 5 discriminator 6
 7319 0084 0C301BE5 		ldr	r3, [fp, #-12]
 7320 0088 233CA0E1 		lsr	r3, r3, #24
 7321 008c 030053E3 		cmp	r3, #3
 7322 0090 3F00000A 		beq	.L466
 7323              		.loc 1 3540 5 discriminator 7
 7324 0094 0130E0E3 		mvn	r3, #1
 7325              		.loc 1 3540 5
 7326 0098 600000EA 		b	.L464
 7327              	.L462:
 7328              		.loc 1 3540 5 discriminator 2
 7329 009c 14301BE5 		ldr	r3, [fp, #-20]
 7330 00a0 2324A0E1 		lsr	r2, r3, #8
 7331 00a4 10301BE5 		ldr	r3, [fp, #-16]
 7332 00a8 143093E5 		ldr	r3, [r3, #20]
 7333 00ac 030052E1 		cmp	r2, r3
 7334 00b0 0100003A 		bcc	.L467
 7335              		.loc 1 3540 5 discriminator 8
 7336 00b4 0230E0E3 		mvn	r3, #2
 7337              		.loc 1 3540 5
 7338 00b8 580000EA 		b	.L464
 7339              	.L467:
 7340              		.loc 1 3540 5 discriminator 9
 7341 00bc 14301BE5 		ldr	r3, [fp, #-20]
 7342 00c0 2334A0E1 		lsr	r3, r3, #8
 7343 00c4 8322A0E1 		lsl	r2, r3, #5
 7344 00c8 10301BE5 		ldr	r3, [fp, #-16]
 7345 00cc 0C3093E5 		ldr	r3, [r3, #12]
 7346 00d0 033082E0 		add	r3, r2, r3
 7347 00d4 08300BE5 		str	r3, [fp, #-8]
 7348 00d8 08301BE5 		ldr	r3, [fp, #-8]
 7349 00dc 0300A0E1 		mov	r0, r3
 7350 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7351 00e4 0C000BE5 		str	r0, [fp, #-12]
 7352              		.loc 1 3540 5 discriminator 1
 7353 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 7354 00ec FF3803E2 		and	r3, r3, #16711680
 7355 00f0 020853E3 		cmp	r3, #131072
 7356 00f4 0100001A 		bne	.L468
 7357              		.loc 1 3540 5 discriminator 10
 7358 00f8 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 193


 7359              		.loc 1 3540 5
 7360 00fc 470000EA 		b	.L464
 7361              	.L468:
 7362              		.loc 1 3540 5 discriminator 11
 7363 0100 0C301BE5 		ldr	r3, [fp, #-12]
 7364 0104 233CA0E1 		lsr	r3, r3, #24
 7365 0108 030053E3 		cmp	r3, #3
 7366 010c 0100000A 		beq	.L469
 7367              		.loc 1 3540 5 discriminator 12
 7368 0110 0130E0E3 		mvn	r3, #1
 7369              		.loc 1 3540 5
 7370 0114 410000EA 		b	.L464
 7371              	.L469:
 7372              		.loc 1 3540 5 discriminator 13
 7373 0118 14301BE5 		ldr	r3, [fp, #-20]
 7374 011c 7F2003E2 		and	r2, r3, #127
 7375 0120 08301BE5 		ldr	r3, [fp, #-8]
 7376 0124 143093E5 		ldr	r3, [r3, #20]
 7377 0128 030052E1 		cmp	r2, r3
 7378 012c 0100003A 		bcc	.L470
 7379              		.loc 1 3540 5 discriminator 14
 7380 0130 0230E0E3 		mvn	r3, #2
 7381              		.loc 1 3540 5
 7382 0134 390000EA 		b	.L464
 7383              	.L470:
 7384              		.loc 1 3540 5 discriminator 15
 7385 0138 14301BE5 		ldr	r3, [fp, #-20]
 7386 013c 7F3003E2 		and	r3, r3, #127
 7387 0140 8322A0E1 		lsl	r2, r3, #5
 7388 0144 08301BE5 		ldr	r3, [fp, #-8]
 7389 0148 0C3093E5 		ldr	r3, [r3, #12]
 7390 014c 033082E0 		add	r3, r2, r3
 7391 0150 08300BE5 		str	r3, [fp, #-8]
 7392 0154 08301BE5 		ldr	r3, [fp, #-8]
 7393 0158 0300A0E1 		mov	r0, r3
 7394 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7395 0160 0C000BE5 		str	r0, [fp, #-12]
 7396              		.loc 1 3540 5 discriminator 1
 7397 0164 0C301BE5 		ldr	r3, [fp, #-12]
 7398 0168 FF3803E2 		and	r3, r3, #16711680
 7399 016c 020853E3 		cmp	r3, #131072
 7400 0170 0100001A 		bne	.L471
 7401              		.loc 1 3540 5 discriminator 16
 7402 0174 0830E0E3 		mvn	r3, #8
 7403              		.loc 1 3540 5
 7404 0178 280000EA 		b	.L464
 7405              	.L471:
 7406              		.loc 1 3540 5 discriminator 17
 7407 017c 0C301BE5 		ldr	r3, [fp, #-12]
 7408 0180 233CA0E1 		lsr	r3, r3, #24
 7409 0184 030053E3 		cmp	r3, #3
 7410 0188 0100000A 		beq	.L466
 7411              		.loc 1 3540 5 discriminator 18
 7412 018c 0130E0E3 		mvn	r3, #1
 7413              		.loc 1 3540 5
 7414 0190 220000EA 		b	.L464
 7415              	.L466:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 194


3541:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Rem,Type_Stat);
3542:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3543:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Rem,RME_PGT_FLAG_REM);
 7416              		.loc 1 3543 5 is_stmt 1
 7417 0194 08301BE5 		ldr	r3, [fp, #-8]
 7418 0198 083093E5 		ldr	r3, [r3, #8]
 7419 019c 043003E2 		and	r3, r3, #4
 7420 01a0 000053E3 		cmp	r3, #0
 7421 01a4 0100001A 		bne	.L472
 7422              		.loc 1 3543 5 is_stmt 0 discriminator 1
 7423 01a8 0630E0E3 		mvn	r3, #6
 7424              		.loc 1 3543 5
 7425 01ac 1B0000EA 		b	.L464
 7426              	.L472:
3544:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3545:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Rem->Head.Flag))||
 7427              		.loc 1 3545 13 is_stmt 1
 7428 01b0 08301BE5 		ldr	r3, [fp, #-8]
 7429 01b4 083093E5 		ldr	r3, [r3, #8]
 7430 01b8 233AA0E1 		lsr	r3, r3, #20
 7431              		.loc 1 3545 7
 7432 01bc 18201BE5 		ldr	r2, [fp, #-24]
 7433 01c0 030052E1 		cmp	r2, r3
 7434 01c4 0600008A 		bhi	.L473
3546:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7435              		.loc 1 3546 13
 7436 01c8 08301BE5 		ldr	r3, [fp, #-8]
 7437 01cc 083093E5 		ldr	r3, [r3, #8]
 7438 01d0 2334A0E1 		lsr	r3, r3, #8
 7439 01d4 5330EBE7 		ubfx	r3, r3, #0, #12
3545:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7440              		.loc 1 3545 51 discriminator 1
 7441 01d8 18201BE5 		ldr	r2, [fp, #-24]
 7442 01dc 030052E1 		cmp	r2, r3
 7443 01e0 0100002A 		bcs	.L474
 7444              	.L473:
3547:../../Source/Kernel/rme_kernel.c ****     {
3548:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3549:../../Source/Kernel/rme_kernel.c **** 
3550:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7445              		.loc 1 3550 16
 7446 01e4 0630E0E3 		mvn	r3, #6
 7447 01e8 0C0000EA 		b	.L464
 7448              	.L474:
3551:../../Source/Kernel/rme_kernel.c ****     }
3552:../../Source/Kernel/rme_kernel.c ****     else
3553:../../Source/Kernel/rme_kernel.c ****     {
3554:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3555:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3556:../../Source/Kernel/rme_kernel.c ****     }
3557:../../Source/Kernel/rme_kernel.c **** 
3558:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3559:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Rem->Order))!=0U)
 7449              		.loc 1 3559 14
 7450 01ec 08301BE5 		ldr	r3, [fp, #-8]
 7451 01f0 143093E5 		ldr	r3, [r3, #20]
 7452 01f4 7330FFE6 		uxth	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 195


 7453              		.loc 1 3559 12
 7454 01f8 18201BE5 		ldr	r2, [fp, #-24]
 7455 01fc 3233A0E1 		lsr	r3, r2, r3
 7456              		.loc 1 3559 7
 7457 0200 000053E3 		cmp	r3, #0
 7458 0204 0100000A 		beq	.L475
3560:../../Source/Kernel/rme_kernel.c ****     {
3561:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3562:../../Source/Kernel/rme_kernel.c **** 
3563:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7459              		.loc 1 3563 16
 7460 0208 6430E0E3 		mvn	r3, #100
 7461 020c 030000EA 		b	.L464
 7462              	.L475:
3564:../../Source/Kernel/rme_kernel.c ****     }
3565:../../Source/Kernel/rme_kernel.c ****     else
3566:../../Source/Kernel/rme_kernel.c ****     {
3567:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3568:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3569:../../Source/Kernel/rme_kernel.c ****     }
3570:../../Source/Kernel/rme_kernel.c **** 
3571:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3572:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3573:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Unmap(Pgt_Rem,Pos)<0)
 7463              		.loc 1 3573 8
 7464 0210 18101BE5 		ldr	r1, [fp, #-24]
 7465 0214 08001BE5 		ldr	r0, [fp, #-8]
 7466 0218 FEFFFFEB 		bl	__RME_Pgt_Page_Unmap
3574:../../Source/Kernel/rme_kernel.c ****     {
3575:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3576:../../Source/Kernel/rme_kernel.c **** 
3577:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3578:../../Source/Kernel/rme_kernel.c ****     }
3579:../../Source/Kernel/rme_kernel.c ****     else
3580:../../Source/Kernel/rme_kernel.c ****     {
3581:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3582:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3583:../../Source/Kernel/rme_kernel.c ****     }
3584:../../Source/Kernel/rme_kernel.c **** 
3585:../../Source/Kernel/rme_kernel.c ****     return 0;
 7467              		.loc 1 3585 12
 7468 021c 0030A0E3 		mov	r3, #0
 7469              	.L464:
3586:../../Source/Kernel/rme_kernel.c **** }
 7470              		.loc 1 3586 1
 7471 0220 0300A0E1 		mov	r0, r3
 7472 0224 04D04BE2 		sub	sp, fp, #4
 7473              		.cfi_def_cfa 13, 8
 7474              		@ sp needed
 7475 0228 0088BDE8 		pop	{fp, pc}
 7476              		.cfi_endproc
 7477              	.LFE35:
 7479              		.section	.text._RME_Pgt_Con,"ax",%progbits
 7480              		.align	2
 7481              		.syntax unified
 7482              		.arm
 7484              	_RME_Pgt_Con:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 196


 7485              	.LFB36:
3587:../../Source/Kernel/rme_kernel.c **** #endif
3588:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Rem *************************************************/
3589:../../Source/Kernel/rme_kernel.c **** 
3590:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Con ******************************************************
3591:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table into the parent page table, to construct
3592:../../Source/Kernel/rme_kernel.c ****               an address space tree.
3593:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3594:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
3595:../../Source/Kernel/rme_kernel.c ****                                          table.
3596:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3597:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
3598:../../Source/Kernel/rme_kernel.c ****                               page table to.
3599:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3600:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3601:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
3602:../../Source/Kernel/rme_kernel.c **** Output      : None.
3603:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3604:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3605:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3606:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Con(struct RME_Cap_Cpt* Cpt,
3607:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3608:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3609:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child,
3610:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Child)
3611:../../Source/Kernel/rme_kernel.c **** {
 7486              		.loc 1 3611 1
 7487              		.cfi_startproc
 7488              		@ args = 4, pretend = 0, frame = 40
 7489              		@ frame_needed = 1, uses_anonymous_args = 0
 7490 0000 00482DE9 		push	{fp, lr}
 7491              		.cfi_def_cfa_offset 8
 7492              		.cfi_offset 11, -8
 7493              		.cfi_offset 14, -4
 7494 0004 04B08DE2 		add	fp, sp, #4
 7495              		.cfi_def_cfa 11, 4
 7496 0008 28D04DE2 		sub	sp, sp, #40
 7497 000c 20000BE5 		str	r0, [fp, #-32]
 7498 0010 24100BE5 		str	r1, [fp, #-36]
 7499 0014 28200BE5 		str	r2, [fp, #-40]
 7500 0018 2C300BE5 		str	r3, [fp, #-44]
3612:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3613:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3614:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
3615:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
3616:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
3617:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3618:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
3619:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
3620:../../Source/Kernel/rme_kernel.c **** #endif
3621:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3622:../../Source/Kernel/rme_kernel.c ****     
3623:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3624:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 7501              		.loc 1 3624 5
 7502 001c 24301BE5 		ldr	r3, [fp, #-36]
 7503 0020 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 197


 7504 0024 000053E3 		cmp	r3, #0
 7505 0028 1C00001A 		bne	.L477
 7506              		.loc 1 3624 5 is_stmt 0 discriminator 1
 7507 002c 20301BE5 		ldr	r3, [fp, #-32]
 7508 0030 142093E5 		ldr	r2, [r3, #20]
 7509 0034 24301BE5 		ldr	r3, [fp, #-36]
 7510 0038 030052E1 		cmp	r2, r3
 7511 003c 0100008A 		bhi	.L478
 7512              		.loc 1 3624 5 discriminator 3
 7513 0040 0230E0E3 		mvn	r3, #2
 7514              		.loc 1 3624 5
 7515 0044 140100EA 		b	.L479
 7516              	.L478:
 7517              		.loc 1 3624 5 discriminator 4
 7518 0048 24301BE5 		ldr	r3, [fp, #-36]
 7519 004c 8322A0E1 		lsl	r2, r3, #5
 7520 0050 20301BE5 		ldr	r3, [fp, #-32]
 7521 0054 0C3093E5 		ldr	r3, [r3, #12]
 7522 0058 033082E0 		add	r3, r2, r3
 7523 005c 08300BE5 		str	r3, [fp, #-8]
 7524 0060 08301BE5 		ldr	r3, [fp, #-8]
 7525 0064 0300A0E1 		mov	r0, r3
 7526 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7527 006c 10000BE5 		str	r0, [fp, #-16]
 7528              		.loc 1 3624 5 discriminator 1
 7529 0070 10301BE5 		ldr	r3, [fp, #-16]
 7530 0074 FF3803E2 		and	r3, r3, #16711680
 7531 0078 020853E3 		cmp	r3, #131072
 7532 007c 0100001A 		bne	.L480
 7533              		.loc 1 3624 5 discriminator 5
 7534 0080 0830E0E3 		mvn	r3, #8
 7535              		.loc 1 3624 5
 7536 0084 040100EA 		b	.L479
 7537              	.L480:
 7538              		.loc 1 3624 5 discriminator 6
 7539 0088 10301BE5 		ldr	r3, [fp, #-16]
 7540 008c 233CA0E1 		lsr	r3, r3, #24
 7541 0090 040053E3 		cmp	r3, #4
 7542 0094 3F00000A 		beq	.L481
 7543              		.loc 1 3624 5 discriminator 7
 7544 0098 0130E0E3 		mvn	r3, #1
 7545              		.loc 1 3624 5
 7546 009c FE0000EA 		b	.L479
 7547              	.L477:
 7548              		.loc 1 3624 5 discriminator 2
 7549 00a0 24301BE5 		ldr	r3, [fp, #-36]
 7550 00a4 2324A0E1 		lsr	r2, r3, #8
 7551 00a8 20301BE5 		ldr	r3, [fp, #-32]
 7552 00ac 143093E5 		ldr	r3, [r3, #20]
 7553 00b0 030052E1 		cmp	r2, r3
 7554 00b4 0100003A 		bcc	.L482
 7555              		.loc 1 3624 5 discriminator 8
 7556 00b8 0230E0E3 		mvn	r3, #2
 7557              		.loc 1 3624 5
 7558 00bc F60000EA 		b	.L479
 7559              	.L482:
 7560              		.loc 1 3624 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 198


 7561 00c0 24301BE5 		ldr	r3, [fp, #-36]
 7562 00c4 2334A0E1 		lsr	r3, r3, #8
 7563 00c8 8322A0E1 		lsl	r2, r3, #5
 7564 00cc 20301BE5 		ldr	r3, [fp, #-32]
 7565 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7566 00d4 033082E0 		add	r3, r2, r3
 7567 00d8 08300BE5 		str	r3, [fp, #-8]
 7568 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7569 00e0 0300A0E1 		mov	r0, r3
 7570 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7571 00e8 10000BE5 		str	r0, [fp, #-16]
 7572              		.loc 1 3624 5 discriminator 1
 7573 00ec 10301BE5 		ldr	r3, [fp, #-16]
 7574 00f0 FF3803E2 		and	r3, r3, #16711680
 7575 00f4 020853E3 		cmp	r3, #131072
 7576 00f8 0100001A 		bne	.L483
 7577              		.loc 1 3624 5 discriminator 10
 7578 00fc 0830E0E3 		mvn	r3, #8
 7579              		.loc 1 3624 5
 7580 0100 E50000EA 		b	.L479
 7581              	.L483:
 7582              		.loc 1 3624 5 discriminator 11
 7583 0104 10301BE5 		ldr	r3, [fp, #-16]
 7584 0108 233CA0E1 		lsr	r3, r3, #24
 7585 010c 030053E3 		cmp	r3, #3
 7586 0110 0100000A 		beq	.L484
 7587              		.loc 1 3624 5 discriminator 12
 7588 0114 0130E0E3 		mvn	r3, #1
 7589              		.loc 1 3624 5
 7590 0118 DF0000EA 		b	.L479
 7591              	.L484:
 7592              		.loc 1 3624 5 discriminator 13
 7593 011c 24301BE5 		ldr	r3, [fp, #-36]
 7594 0120 7F2003E2 		and	r2, r3, #127
 7595 0124 08301BE5 		ldr	r3, [fp, #-8]
 7596 0128 143093E5 		ldr	r3, [r3, #20]
 7597 012c 030052E1 		cmp	r2, r3
 7598 0130 0100003A 		bcc	.L485
 7599              		.loc 1 3624 5 discriminator 14
 7600 0134 0230E0E3 		mvn	r3, #2
 7601              		.loc 1 3624 5
 7602 0138 D70000EA 		b	.L479
 7603              	.L485:
 7604              		.loc 1 3624 5 discriminator 15
 7605 013c 24301BE5 		ldr	r3, [fp, #-36]
 7606 0140 7F3003E2 		and	r3, r3, #127
 7607 0144 8322A0E1 		lsl	r2, r3, #5
 7608 0148 08301BE5 		ldr	r3, [fp, #-8]
 7609 014c 0C3093E5 		ldr	r3, [r3, #12]
 7610 0150 033082E0 		add	r3, r2, r3
 7611 0154 08300BE5 		str	r3, [fp, #-8]
 7612 0158 08301BE5 		ldr	r3, [fp, #-8]
 7613 015c 0300A0E1 		mov	r0, r3
 7614 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7615 0164 10000BE5 		str	r0, [fp, #-16]
 7616              		.loc 1 3624 5 discriminator 1
 7617 0168 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 199


 7618 016c FF3803E2 		and	r3, r3, #16711680
 7619 0170 020853E3 		cmp	r3, #131072
 7620 0174 0100001A 		bne	.L486
 7621              		.loc 1 3624 5 discriminator 16
 7622 0178 0830E0E3 		mvn	r3, #8
 7623              		.loc 1 3624 5
 7624 017c C60000EA 		b	.L479
 7625              	.L486:
 7626              		.loc 1 3624 5 discriminator 17
 7627 0180 10301BE5 		ldr	r3, [fp, #-16]
 7628 0184 233CA0E1 		lsr	r3, r3, #24
 7629 0188 040053E3 		cmp	r3, #4
 7630 018c 0100000A 		beq	.L481
 7631              		.loc 1 3624 5 discriminator 18
 7632 0190 0130E0E3 		mvn	r3, #1
 7633              		.loc 1 3624 5
 7634 0194 C00000EA 		b	.L479
 7635              	.L481:
3625:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3626:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 7636              		.loc 1 3626 5 is_stmt 1
 7637 0198 2C301BE5 		ldr	r3, [fp, #-44]
 7638 019c 803003E2 		and	r3, r3, #128
 7639 01a0 000053E3 		cmp	r3, #0
 7640 01a4 1C00001A 		bne	.L487
 7641              		.loc 1 3626 5 is_stmt 0 discriminator 1
 7642 01a8 20301BE5 		ldr	r3, [fp, #-32]
 7643 01ac 142093E5 		ldr	r2, [r3, #20]
 7644 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 7645 01b4 030052E1 		cmp	r2, r3
 7646 01b8 0100008A 		bhi	.L488
 7647              		.loc 1 3626 5 discriminator 3
 7648 01bc 0230E0E3 		mvn	r3, #2
 7649              		.loc 1 3626 5
 7650 01c0 B50000EA 		b	.L479
 7651              	.L488:
 7652              		.loc 1 3626 5 discriminator 4
 7653 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 7654 01c8 8322A0E1 		lsl	r2, r3, #5
 7655 01cc 20301BE5 		ldr	r3, [fp, #-32]
 7656 01d0 0C3093E5 		ldr	r3, [r3, #12]
 7657 01d4 033082E0 		add	r3, r2, r3
 7658 01d8 0C300BE5 		str	r3, [fp, #-12]
 7659 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 7660 01e0 0300A0E1 		mov	r0, r3
 7661 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7662 01e8 10000BE5 		str	r0, [fp, #-16]
 7663              		.loc 1 3626 5 discriminator 1
 7664 01ec 10301BE5 		ldr	r3, [fp, #-16]
 7665 01f0 FF3803E2 		and	r3, r3, #16711680
 7666 01f4 020853E3 		cmp	r3, #131072
 7667 01f8 0100001A 		bne	.L489
 7668              		.loc 1 3626 5 discriminator 5
 7669 01fc 0830E0E3 		mvn	r3, #8
 7670              		.loc 1 3626 5
 7671 0200 A50000EA 		b	.L479
 7672              	.L489:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 200


 7673              		.loc 1 3626 5 discriminator 6
 7674 0204 10301BE5 		ldr	r3, [fp, #-16]
 7675 0208 233CA0E1 		lsr	r3, r3, #24
 7676 020c 040053E3 		cmp	r3, #4
 7677 0210 3F00000A 		beq	.L490
 7678              		.loc 1 3626 5 discriminator 7
 7679 0214 0130E0E3 		mvn	r3, #1
 7680              		.loc 1 3626 5
 7681 0218 9F0000EA 		b	.L479
 7682              	.L487:
 7683              		.loc 1 3626 5 discriminator 2
 7684 021c 2C301BE5 		ldr	r3, [fp, #-44]
 7685 0220 2324A0E1 		lsr	r2, r3, #8
 7686 0224 20301BE5 		ldr	r3, [fp, #-32]
 7687 0228 143093E5 		ldr	r3, [r3, #20]
 7688 022c 030052E1 		cmp	r2, r3
 7689 0230 0100003A 		bcc	.L491
 7690              		.loc 1 3626 5 discriminator 8
 7691 0234 0230E0E3 		mvn	r3, #2
 7692              		.loc 1 3626 5
 7693 0238 970000EA 		b	.L479
 7694              	.L491:
 7695              		.loc 1 3626 5 discriminator 9
 7696 023c 2C301BE5 		ldr	r3, [fp, #-44]
 7697 0240 2334A0E1 		lsr	r3, r3, #8
 7698 0244 8322A0E1 		lsl	r2, r3, #5
 7699 0248 20301BE5 		ldr	r3, [fp, #-32]
 7700 024c 0C3093E5 		ldr	r3, [r3, #12]
 7701 0250 033082E0 		add	r3, r2, r3
 7702 0254 0C300BE5 		str	r3, [fp, #-12]
 7703 0258 0C301BE5 		ldr	r3, [fp, #-12]
 7704 025c 0300A0E1 		mov	r0, r3
 7705 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7706 0264 10000BE5 		str	r0, [fp, #-16]
 7707              		.loc 1 3626 5 discriminator 1
 7708 0268 10301BE5 		ldr	r3, [fp, #-16]
 7709 026c FF3803E2 		and	r3, r3, #16711680
 7710 0270 020853E3 		cmp	r3, #131072
 7711 0274 0100001A 		bne	.L492
 7712              		.loc 1 3626 5 discriminator 10
 7713 0278 0830E0E3 		mvn	r3, #8
 7714              		.loc 1 3626 5
 7715 027c 860000EA 		b	.L479
 7716              	.L492:
 7717              		.loc 1 3626 5 discriminator 11
 7718 0280 10301BE5 		ldr	r3, [fp, #-16]
 7719 0284 233CA0E1 		lsr	r3, r3, #24
 7720 0288 030053E3 		cmp	r3, #3
 7721 028c 0100000A 		beq	.L493
 7722              		.loc 1 3626 5 discriminator 12
 7723 0290 0130E0E3 		mvn	r3, #1
 7724              		.loc 1 3626 5
 7725 0294 800000EA 		b	.L479
 7726              	.L493:
 7727              		.loc 1 3626 5 discriminator 13
 7728 0298 2C301BE5 		ldr	r3, [fp, #-44]
 7729 029c 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 201


 7730 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 7731 02a4 143093E5 		ldr	r3, [r3, #20]
 7732 02a8 030052E1 		cmp	r2, r3
 7733 02ac 0100003A 		bcc	.L494
 7734              		.loc 1 3626 5 discriminator 14
 7735 02b0 0230E0E3 		mvn	r3, #2
 7736              		.loc 1 3626 5
 7737 02b4 780000EA 		b	.L479
 7738              	.L494:
 7739              		.loc 1 3626 5 discriminator 15
 7740 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 7741 02bc 7F3003E2 		and	r3, r3, #127
 7742 02c0 8322A0E1 		lsl	r2, r3, #5
 7743 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 7744 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7745 02cc 033082E0 		add	r3, r2, r3
 7746 02d0 0C300BE5 		str	r3, [fp, #-12]
 7747 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 7748 02d8 0300A0E1 		mov	r0, r3
 7749 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7750 02e0 10000BE5 		str	r0, [fp, #-16]
 7751              		.loc 1 3626 5 discriminator 1
 7752 02e4 10301BE5 		ldr	r3, [fp, #-16]
 7753 02e8 FF3803E2 		and	r3, r3, #16711680
 7754 02ec 020853E3 		cmp	r3, #131072
 7755 02f0 0100001A 		bne	.L495
 7756              		.loc 1 3626 5 discriminator 16
 7757 02f4 0830E0E3 		mvn	r3, #8
 7758              		.loc 1 3626 5
 7759 02f8 670000EA 		b	.L479
 7760              	.L495:
 7761              		.loc 1 3626 5 discriminator 17
 7762 02fc 10301BE5 		ldr	r3, [fp, #-16]
 7763 0300 233CA0E1 		lsr	r3, r3, #24
 7764 0304 040053E3 		cmp	r3, #4
 7765 0308 0100000A 		beq	.L490
 7766              		.loc 1 3626 5 discriminator 18
 7767 030c 0130E0E3 		mvn	r3, #1
 7768              		.loc 1 3626 5
 7769 0310 610000EA 		b	.L479
 7770              	.L490:
3627:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3628:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3629:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_CON_PARENT);
 7771              		.loc 1 3629 5 is_stmt 1
 7772 0314 08301BE5 		ldr	r3, [fp, #-8]
 7773 0318 083093E5 		ldr	r3, [r3, #8]
 7774 031c 103003E2 		and	r3, r3, #16
 7775 0320 000053E3 		cmp	r3, #0
 7776 0324 0100001A 		bne	.L496
 7777              		.loc 1 3629 5 is_stmt 0 discriminator 1
 7778 0328 0630E0E3 		mvn	r3, #6
 7779              		.loc 1 3629 5
 7780 032c 5A0000EA 		b	.L479
 7781              	.L496:
3630:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 7782              		.loc 1 3630 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 202


 7783 0330 0C301BE5 		ldr	r3, [fp, #-12]
 7784 0334 083093E5 		ldr	r3, [r3, #8]
 7785 0338 083003E2 		and	r3, r3, #8
 7786 033c 000053E3 		cmp	r3, #0
 7787 0340 0100001A 		bne	.L497
 7788              		.loc 1 3630 5 is_stmt 0 discriminator 1
 7789 0344 0630E0E3 		mvn	r3, #6
 7790              		.loc 1 3630 5
 7791 0348 530000EA 		b	.L479
 7792              	.L497:
3631:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3632:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 7793              		.loc 1 3632 13 is_stmt 1
 7794 034c 08301BE5 		ldr	r3, [fp, #-8]
 7795 0350 083093E5 		ldr	r3, [r3, #8]
 7796 0354 233AA0E1 		lsr	r3, r3, #20
 7797              		.loc 1 3632 7
 7798 0358 28201BE5 		ldr	r2, [fp, #-40]
 7799 035c 030052E1 		cmp	r2, r3
 7800 0360 0600008A 		bhi	.L498
3633:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7801              		.loc 1 3633 13
 7802 0364 08301BE5 		ldr	r3, [fp, #-8]
 7803 0368 083093E5 		ldr	r3, [r3, #8]
 7804 036c 2334A0E1 		lsr	r3, r3, #8
 7805 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3632:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7806              		.loc 1 3632 54 discriminator 1
 7807 0374 28201BE5 		ldr	r2, [fp, #-40]
 7808 0378 030052E1 		cmp	r2, r3
 7809 037c 0100002A 		bcs	.L499
 7810              	.L498:
3634:../../Source/Kernel/rme_kernel.c ****     {
3635:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3636:../../Source/Kernel/rme_kernel.c **** 
3637:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7811              		.loc 1 3637 16
 7812 0380 0630E0E3 		mvn	r3, #6
 7813 0384 440000EA 		b	.L479
 7814              	.L499:
3638:../../Source/Kernel/rme_kernel.c ****     }
3639:../../Source/Kernel/rme_kernel.c ****     else
3640:../../Source/Kernel/rme_kernel.c ****     {
3641:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3642:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3643:../../Source/Kernel/rme_kernel.c ****     }
3644:../../Source/Kernel/rme_kernel.c ****     
3645:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
3646:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 7815              		.loc 1 3646 14
 7816 0388 08301BE5 		ldr	r3, [fp, #-8]
 7817 038c 143093E5 		ldr	r3, [r3, #20]
 7818 0390 7330FFE6 		uxth	r3, r3
 7819              		.loc 1 3646 12
 7820 0394 28201BE5 		ldr	r2, [fp, #-40]
 7821 0398 3233A0E1 		lsr	r3, r2, r3
 7822              		.loc 1 3646 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 203


 7823 039c 000053E3 		cmp	r3, #0
 7824 03a0 0100000A 		beq	.L500
3647:../../Source/Kernel/rme_kernel.c ****     {
3648:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3649:../../Source/Kernel/rme_kernel.c **** 
3650:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7825              		.loc 1 3650 16
 7826 03a4 6430E0E3 		mvn	r3, #100
 7827 03a8 3B0000EA 		b	.L479
 7828              	.L500:
3651:../../Source/Kernel/rme_kernel.c ****     }
3652:../../Source/Kernel/rme_kernel.c ****     else
3653:../../Source/Kernel/rme_kernel.c ****     {
3654:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3655:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3656:../../Source/Kernel/rme_kernel.c ****     }
3657:../../Source/Kernel/rme_kernel.c ****     
3658:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
3659:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 7829              		.loc 1 3659 17
 7830 03ac 0C301BE5 		ldr	r3, [fp, #-12]
 7831 03b0 143093E5 		ldr	r3, [r3, #20]
 7832 03b4 7320FFE6 		uxth	r2, r3
 7833              		.loc 1 3659 49
 7834 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 7835 03bc 143093E5 		ldr	r3, [r3, #20]
 7836 03c0 2338A0E1 		lsr	r3, r3, #16
 7837              		.loc 1 3659 16
 7838 03c4 033082E0 		add	r3, r2, r3
 7839 03c8 14300BE5 		str	r3, [fp, #-20]
3660:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 7840              		.loc 1 3660 18
 7841 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7842 03d0 143093E5 		ldr	r3, [r3, #20]
 7843              		.loc 1 3660 17
 7844 03d4 2338A0E1 		lsr	r3, r3, #16
 7845 03d8 18300BE5 		str	r3, [fp, #-24]
3661:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 7846              		.loc 1 3661 7
 7847 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7848 03e0 14301BE5 		ldr	r3, [fp, #-20]
 7849 03e4 030052E1 		cmp	r2, r3
 7850 03e8 0100002A 		bcs	.L501
3662:../../Source/Kernel/rme_kernel.c ****     {
3663:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3664:../../Source/Kernel/rme_kernel.c ****         
3665:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7851              		.loc 1 3665 16
 7852 03ec 6430E0E3 		mvn	r3, #100
 7853 03f0 290000EA 		b	.L479
 7854              	.L501:
3666:../../Source/Kernel/rme_kernel.c ****     }
3667:../../Source/Kernel/rme_kernel.c ****     else
3668:../../Source/Kernel/rme_kernel.c ****     {
3669:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3670:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3671:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 204


3672:../../Source/Kernel/rme_kernel.c **** 
3673:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3674:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
3675:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
3676:../../Source/Kernel/rme_kernel.c ****     {
3677:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3678:../../Source/Kernel/rme_kernel.c ****         
3679:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
3680:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
3681:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
3682:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
3683:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
3684:../../Source/Kernel/rme_kernel.c ****         {
3685:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3686:../../Source/Kernel/rme_kernel.c ****             
3687:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3688:../../Source/Kernel/rme_kernel.c ****         }
3689:../../Source/Kernel/rme_kernel.c ****         else
3690:../../Source/Kernel/rme_kernel.c ****         {
3691:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3692:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3693:../../Source/Kernel/rme_kernel.c ****         }
3694:../../Source/Kernel/rme_kernel.c ****         
3695:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
3696:../../Source/Kernel/rme_kernel.c ****         
3697:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
3698:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
3699:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
3700:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
3701:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
3702:../../Source/Kernel/rme_kernel.c ****         {
3703:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3704:../../Source/Kernel/rme_kernel.c ****             
3705:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3706:../../Source/Kernel/rme_kernel.c ****             {
3707:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3708:../../Source/Kernel/rme_kernel.c **** 
3709:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3710:../../Source/Kernel/rme_kernel.c ****             }
3711:../../Source/Kernel/rme_kernel.c ****             else
3712:../../Source/Kernel/rme_kernel.c ****             {
3713:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3714:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3715:../../Source/Kernel/rme_kernel.c ****             }
3716:../../Source/Kernel/rme_kernel.c ****         }
3717:../../Source/Kernel/rme_kernel.c ****         else
3718:../../Source/Kernel/rme_kernel.c ****         {
3719:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3720:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3721:../../Source/Kernel/rme_kernel.c ****         }
3722:../../Source/Kernel/rme_kernel.c ****     }
3723:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, check exempt */
3724:../../Source/Kernel/rme_kernel.c ****     else
3725:../../Source/Kernel/rme_kernel.c ****     {
3726:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3727:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3728:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 205


3729:../../Source/Kernel/rme_kernel.c **** #else
3730:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3731:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 7855              		.loc 1 3731 7
 7856 03f4 18201BE5 		ldr	r2, [fp, #-24]
 7857 03f8 14301BE5 		ldr	r3, [fp, #-20]
 7858 03fc 030052E1 		cmp	r2, r3
 7859 0400 0100000A 		beq	.L502
3732:../../Source/Kernel/rme_kernel.c ****     {
3733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3734:../../Source/Kernel/rme_kernel.c **** 
3735:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7860              		.loc 1 3735 16
 7861 0404 6430E0E3 		mvn	r3, #100
 7862 0408 230000EA 		b	.L479
 7863              	.L502:
3736:../../Source/Kernel/rme_kernel.c ****     }
3737:../../Source/Kernel/rme_kernel.c ****     else
3738:../../Source/Kernel/rme_kernel.c ****     {
3739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3740:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3741:../../Source/Kernel/rme_kernel.c ****     }
3742:../../Source/Kernel/rme_kernel.c **** #endif
3743:../../Source/Kernel/rme_kernel.c **** 
3744:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3745:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3746:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 7864              		.loc 1 3746 8
 7865 040c 04309BE5 		ldr	r3, [fp, #4]
 7866 0410 0C201BE5 		ldr	r2, [fp, #-12]
 7867 0414 28101BE5 		ldr	r1, [fp, #-40]
 7868 0418 08001BE5 		ldr	r0, [fp, #-8]
 7869 041c FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3747:../../Source/Kernel/rme_kernel.c ****     {
3748:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3749:../../Source/Kernel/rme_kernel.c **** 
3750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3751:../../Source/Kernel/rme_kernel.c ****     }
3752:../../Source/Kernel/rme_kernel.c ****     else
3753:../../Source/Kernel/rme_kernel.c ****     {
3754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3756:../../Source/Kernel/rme_kernel.c ****     }
3757:../../Source/Kernel/rme_kernel.c ****     
3758:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3759:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 7870              		.loc 1 3759 14
 7871 0420 08301BE5 		ldr	r3, [fp, #-8]
 7872 0424 003093E5 		ldr	r3, [r3]
 7873 0428 7330FFE6 		uxth	r3, r3
 7874 042c 000053E3 		cmp	r3, #0
 7875 0430 0200000A 		beq	.L503
 7876              		.loc 1 3759 14 is_stmt 0 discriminator 1
 7877 0434 08301BE5 		ldr	r3, [fp, #-8]
 7878 0438 043093E5 		ldr	r3, [r3, #4]
 7879 043c 000000EA 		b	.L504
 7880              	.L503:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 206


 7881              		.loc 1 3759 14 discriminator 2
 7882 0440 08301BE5 		ldr	r3, [fp, #-8]
 7883              	.L504:
 7884              		.loc 1 3759 13 is_stmt 1 discriminator 4
 7885 0444 1C300BE5 		str	r3, [fp, #-28]
3760:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7886              		.loc 1 3760 5
 7887 0448 1C301BE5 		ldr	r3, [fp, #-28]
 7888 044c 043083E2 		add	r3, r3, #4
 7889 0450 0110A0E3 		mov	r1, #1
 7890 0454 0300A0E1 		mov	r0, r3
 7891 0458 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3761:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 7892              		.loc 1 3761 14
 7893 045c 0C301BE5 		ldr	r3, [fp, #-12]
 7894 0460 003093E5 		ldr	r3, [r3]
 7895 0464 7330FFE6 		uxth	r3, r3
 7896 0468 000053E3 		cmp	r3, #0
 7897 046c 0200000A 		beq	.L505
 7898              		.loc 1 3761 14 is_stmt 0 discriminator 1
 7899 0470 0C301BE5 		ldr	r3, [fp, #-12]
 7900 0474 043093E5 		ldr	r3, [r3, #4]
 7901 0478 000000EA 		b	.L506
 7902              	.L505:
 7903              		.loc 1 3761 14 discriminator 2
 7904 047c 0C301BE5 		ldr	r3, [fp, #-12]
 7905              	.L506:
 7906              		.loc 1 3761 13 is_stmt 1 discriminator 4
 7907 0480 1C300BE5 		str	r3, [fp, #-28]
3762:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7908              		.loc 1 3762 5
 7909 0484 1C301BE5 		ldr	r3, [fp, #-28]
 7910 0488 043083E2 		add	r3, r3, #4
 7911 048c 0110A0E3 		mov	r1, #1
 7912 0490 0300A0E1 		mov	r0, r3
 7913 0494 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3763:../../Source/Kernel/rme_kernel.c **** 
3764:../../Source/Kernel/rme_kernel.c ****     return 0;
 7914              		.loc 1 3764 12
 7915 0498 0030A0E3 		mov	r3, #0
 7916              	.L479:
3765:../../Source/Kernel/rme_kernel.c **** }
 7917              		.loc 1 3765 1
 7918 049c 0300A0E1 		mov	r0, r3
 7919 04a0 04D04BE2 		sub	sp, fp, #4
 7920              		.cfi_def_cfa 13, 8
 7921              		@ sp needed
 7922 04a4 0088BDE8 		pop	{fp, pc}
 7923              		.cfi_endproc
 7924              	.LFE36:
 7926              		.section	.text._RME_Pgt_Des,"ax",%progbits
 7927              		.align	2
 7928              		.syntax unified
 7929              		.arm
 7931              	_RME_Pgt_Des:
 7932              	.LFB37:
3766:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 207


3767:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Con *************************************************/
3768:../../Source/Kernel/rme_kernel.c **** 
3769:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Des ******************************************************
3770:../../Source/Kernel/rme_kernel.c **** Description : Unmap a child page table from the parent page table, destructing
3771:../../Source/Kernel/rme_kernel.c ****               the address space tree.
3772:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3773:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page
3774:../../Source/Kernel/rme_kernel.c ****                                          table.
3775:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3776:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to position unmap
3777:../../Source/Kernel/rme_kernel.c ****                               the child page table from. The child page table
3778:../../Source/Kernel/rme_kernel.c ****                               must be there for the destruction to succeed.
3779:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3780:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3781:../../Source/Kernel/rme_kernel.c **** Output      : None.
3782:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3783:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3784:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3785:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Des(struct RME_Cap_Cpt* Cpt, 
3786:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3787:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3788:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child)
3789:../../Source/Kernel/rme_kernel.c **** {
 7933              		.loc 1 3789 1
 7934              		.cfi_startproc
 7935              		@ args = 0, pretend = 0, frame = 32
 7936              		@ frame_needed = 1, uses_anonymous_args = 0
 7937 0000 00482DE9 		push	{fp, lr}
 7938              		.cfi_def_cfa_offset 8
 7939              		.cfi_offset 11, -8
 7940              		.cfi_offset 14, -4
 7941 0004 04B08DE2 		add	fp, sp, #4
 7942              		.cfi_def_cfa 11, 4
 7943 0008 20D04DE2 		sub	sp, sp, #32
 7944 000c 18000BE5 		str	r0, [fp, #-24]
 7945 0010 1C100BE5 		str	r1, [fp, #-28]
 7946 0014 20200BE5 		str	r2, [fp, #-32]
 7947 0018 24300BE5 		str	r3, [fp, #-36]
3790:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3791:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3792:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Root;
3793:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3794:../../Source/Kernel/rme_kernel.c ****     
3795:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3796:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_CPT,
 7948              		.loc 1 3796 5
 7949 001c 1C301BE5 		ldr	r3, [fp, #-28]
 7950 0020 803003E2 		and	r3, r3, #128
 7951 0024 000053E3 		cmp	r3, #0
 7952 0028 1C00001A 		bne	.L508
 7953              		.loc 1 3796 5 is_stmt 0 discriminator 1
 7954 002c 18301BE5 		ldr	r3, [fp, #-24]
 7955 0030 142093E5 		ldr	r2, [r3, #20]
 7956 0034 1C301BE5 		ldr	r3, [fp, #-28]
 7957 0038 030052E1 		cmp	r2, r3
 7958 003c 0100008A 		bhi	.L509
 7959              		.loc 1 3796 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 208


 7960 0040 0230E0E3 		mvn	r3, #2
 7961              		.loc 1 3796 5
 7962 0044 000100EA 		b	.L510
 7963              	.L509:
 7964              		.loc 1 3796 5 discriminator 4
 7965 0048 1C301BE5 		ldr	r3, [fp, #-28]
 7966 004c 8322A0E1 		lsl	r2, r3, #5
 7967 0050 18301BE5 		ldr	r3, [fp, #-24]
 7968 0054 0C3093E5 		ldr	r3, [r3, #12]
 7969 0058 033082E0 		add	r3, r2, r3
 7970 005c 08300BE5 		str	r3, [fp, #-8]
 7971 0060 08301BE5 		ldr	r3, [fp, #-8]
 7972 0064 0300A0E1 		mov	r0, r3
 7973 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7974 006c 10000BE5 		str	r0, [fp, #-16]
 7975              		.loc 1 3796 5 discriminator 1
 7976 0070 10301BE5 		ldr	r3, [fp, #-16]
 7977 0074 FF3803E2 		and	r3, r3, #16711680
 7978 0078 020853E3 		cmp	r3, #131072
 7979 007c 0100001A 		bne	.L511
 7980              		.loc 1 3796 5 discriminator 5
 7981 0080 0830E0E3 		mvn	r3, #8
 7982              		.loc 1 3796 5
 7983 0084 F00000EA 		b	.L510
 7984              	.L511:
 7985              		.loc 1 3796 5 discriminator 6
 7986 0088 10301BE5 		ldr	r3, [fp, #-16]
 7987 008c 233CA0E1 		lsr	r3, r3, #24
 7988 0090 030053E3 		cmp	r3, #3
 7989 0094 3F00000A 		beq	.L512
 7990              		.loc 1 3796 5 discriminator 7
 7991 0098 0130E0E3 		mvn	r3, #1
 7992              		.loc 1 3796 5
 7993 009c EA0000EA 		b	.L510
 7994              	.L508:
 7995              		.loc 1 3796 5 discriminator 2
 7996 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 7997 00a4 2324A0E1 		lsr	r2, r3, #8
 7998 00a8 18301BE5 		ldr	r3, [fp, #-24]
 7999 00ac 143093E5 		ldr	r3, [r3, #20]
 8000 00b0 030052E1 		cmp	r2, r3
 8001 00b4 0100003A 		bcc	.L513
 8002              		.loc 1 3796 5 discriminator 8
 8003 00b8 0230E0E3 		mvn	r3, #2
 8004              		.loc 1 3796 5
 8005 00bc E20000EA 		b	.L510
 8006              	.L513:
 8007              		.loc 1 3796 5 discriminator 9
 8008 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 8009 00c4 2334A0E1 		lsr	r3, r3, #8
 8010 00c8 8322A0E1 		lsl	r2, r3, #5
 8011 00cc 18301BE5 		ldr	r3, [fp, #-24]
 8012 00d0 0C3093E5 		ldr	r3, [r3, #12]
 8013 00d4 033082E0 		add	r3, r2, r3
 8014 00d8 08300BE5 		str	r3, [fp, #-8]
 8015 00dc 08301BE5 		ldr	r3, [fp, #-8]
 8016 00e0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 209


 8017 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8018 00e8 10000BE5 		str	r0, [fp, #-16]
 8019              		.loc 1 3796 5 discriminator 1
 8020 00ec 10301BE5 		ldr	r3, [fp, #-16]
 8021 00f0 FF3803E2 		and	r3, r3, #16711680
 8022 00f4 020853E3 		cmp	r3, #131072
 8023 00f8 0100001A 		bne	.L514
 8024              		.loc 1 3796 5 discriminator 10
 8025 00fc 0830E0E3 		mvn	r3, #8
 8026              		.loc 1 3796 5
 8027 0100 D10000EA 		b	.L510
 8028              	.L514:
 8029              		.loc 1 3796 5 discriminator 11
 8030 0104 10301BE5 		ldr	r3, [fp, #-16]
 8031 0108 233CA0E1 		lsr	r3, r3, #24
 8032 010c 030053E3 		cmp	r3, #3
 8033 0110 0100000A 		beq	.L515
 8034              		.loc 1 3796 5 discriminator 12
 8035 0114 0130E0E3 		mvn	r3, #1
 8036              		.loc 1 3796 5
 8037 0118 CB0000EA 		b	.L510
 8038              	.L515:
 8039              		.loc 1 3796 5 discriminator 13
 8040 011c 1C301BE5 		ldr	r3, [fp, #-28]
 8041 0120 7F2003E2 		and	r2, r3, #127
 8042 0124 08301BE5 		ldr	r3, [fp, #-8]
 8043 0128 143093E5 		ldr	r3, [r3, #20]
 8044 012c 030052E1 		cmp	r2, r3
 8045 0130 0100003A 		bcc	.L516
 8046              		.loc 1 3796 5 discriminator 14
 8047 0134 0230E0E3 		mvn	r3, #2
 8048              		.loc 1 3796 5
 8049 0138 C30000EA 		b	.L510
 8050              	.L516:
 8051              		.loc 1 3796 5 discriminator 15
 8052 013c 1C301BE5 		ldr	r3, [fp, #-28]
 8053 0140 7F3003E2 		and	r3, r3, #127
 8054 0144 8322A0E1 		lsl	r2, r3, #5
 8055 0148 08301BE5 		ldr	r3, [fp, #-8]
 8056 014c 0C3093E5 		ldr	r3, [r3, #12]
 8057 0150 033082E0 		add	r3, r2, r3
 8058 0154 08300BE5 		str	r3, [fp, #-8]
 8059 0158 08301BE5 		ldr	r3, [fp, #-8]
 8060 015c 0300A0E1 		mov	r0, r3
 8061 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8062 0164 10000BE5 		str	r0, [fp, #-16]
 8063              		.loc 1 3796 5 discriminator 1
 8064 0168 10301BE5 		ldr	r3, [fp, #-16]
 8065 016c FF3803E2 		and	r3, r3, #16711680
 8066 0170 020853E3 		cmp	r3, #131072
 8067 0174 0100001A 		bne	.L517
 8068              		.loc 1 3796 5 discriminator 16
 8069 0178 0830E0E3 		mvn	r3, #8
 8070              		.loc 1 3796 5
 8071 017c B20000EA 		b	.L510
 8072              	.L517:
 8073              		.loc 1 3796 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 210


 8074 0180 10301BE5 		ldr	r3, [fp, #-16]
 8075 0184 233CA0E1 		lsr	r3, r3, #24
 8076 0188 030053E3 		cmp	r3, #3
 8077 018c 0100000A 		beq	.L512
 8078              		.loc 1 3796 5 discriminator 18
 8079 0190 0130E0E3 		mvn	r3, #1
 8080              		.loc 1 3796 5
 8081 0194 AC0000EA 		b	.L510
 8082              	.L512:
3797:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3798:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_CPT,
 8083              		.loc 1 3798 5 is_stmt 1
 8084 0198 24301BE5 		ldr	r3, [fp, #-36]
 8085 019c 803003E2 		and	r3, r3, #128
 8086 01a0 000053E3 		cmp	r3, #0
 8087 01a4 1C00001A 		bne	.L518
 8088              		.loc 1 3798 5 is_stmt 0 discriminator 1
 8089 01a8 18301BE5 		ldr	r3, [fp, #-24]
 8090 01ac 142093E5 		ldr	r2, [r3, #20]
 8091 01b0 24301BE5 		ldr	r3, [fp, #-36]
 8092 01b4 030052E1 		cmp	r2, r3
 8093 01b8 0100008A 		bhi	.L519
 8094              		.loc 1 3798 5 discriminator 3
 8095 01bc 0230E0E3 		mvn	r3, #2
 8096              		.loc 1 3798 5
 8097 01c0 A10000EA 		b	.L510
 8098              	.L519:
 8099              		.loc 1 3798 5 discriminator 4
 8100 01c4 24301BE5 		ldr	r3, [fp, #-36]
 8101 01c8 8322A0E1 		lsl	r2, r3, #5
 8102 01cc 18301BE5 		ldr	r3, [fp, #-24]
 8103 01d0 0C3093E5 		ldr	r3, [r3, #12]
 8104 01d4 033082E0 		add	r3, r2, r3
 8105 01d8 0C300BE5 		str	r3, [fp, #-12]
 8106 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 8107 01e0 0300A0E1 		mov	r0, r3
 8108 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8109 01e8 10000BE5 		str	r0, [fp, #-16]
 8110              		.loc 1 3798 5 discriminator 1
 8111 01ec 10301BE5 		ldr	r3, [fp, #-16]
 8112 01f0 FF3803E2 		and	r3, r3, #16711680
 8113 01f4 020853E3 		cmp	r3, #131072
 8114 01f8 0100001A 		bne	.L520
 8115              		.loc 1 3798 5 discriminator 5
 8116 01fc 0830E0E3 		mvn	r3, #8
 8117              		.loc 1 3798 5
 8118 0200 910000EA 		b	.L510
 8119              	.L520:
 8120              		.loc 1 3798 5 discriminator 6
 8121 0204 10301BE5 		ldr	r3, [fp, #-16]
 8122 0208 233CA0E1 		lsr	r3, r3, #24
 8123 020c 030053E3 		cmp	r3, #3
 8124 0210 3F00000A 		beq	.L521
 8125              		.loc 1 3798 5 discriminator 7
 8126 0214 0130E0E3 		mvn	r3, #1
 8127              		.loc 1 3798 5
 8128 0218 8B0000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 211


 8129              	.L518:
 8130              		.loc 1 3798 5 discriminator 2
 8131 021c 24301BE5 		ldr	r3, [fp, #-36]
 8132 0220 2324A0E1 		lsr	r2, r3, #8
 8133 0224 18301BE5 		ldr	r3, [fp, #-24]
 8134 0228 143093E5 		ldr	r3, [r3, #20]
 8135 022c 030052E1 		cmp	r2, r3
 8136 0230 0100003A 		bcc	.L522
 8137              		.loc 1 3798 5 discriminator 8
 8138 0234 0230E0E3 		mvn	r3, #2
 8139              		.loc 1 3798 5
 8140 0238 830000EA 		b	.L510
 8141              	.L522:
 8142              		.loc 1 3798 5 discriminator 9
 8143 023c 24301BE5 		ldr	r3, [fp, #-36]
 8144 0240 2334A0E1 		lsr	r3, r3, #8
 8145 0244 8322A0E1 		lsl	r2, r3, #5
 8146 0248 18301BE5 		ldr	r3, [fp, #-24]
 8147 024c 0C3093E5 		ldr	r3, [r3, #12]
 8148 0250 033082E0 		add	r3, r2, r3
 8149 0254 0C300BE5 		str	r3, [fp, #-12]
 8150 0258 0C301BE5 		ldr	r3, [fp, #-12]
 8151 025c 0300A0E1 		mov	r0, r3
 8152 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8153 0264 10000BE5 		str	r0, [fp, #-16]
 8154              		.loc 1 3798 5 discriminator 1
 8155 0268 10301BE5 		ldr	r3, [fp, #-16]
 8156 026c FF3803E2 		and	r3, r3, #16711680
 8157 0270 020853E3 		cmp	r3, #131072
 8158 0274 0100001A 		bne	.L523
 8159              		.loc 1 3798 5 discriminator 10
 8160 0278 0830E0E3 		mvn	r3, #8
 8161              		.loc 1 3798 5
 8162 027c 720000EA 		b	.L510
 8163              	.L523:
 8164              		.loc 1 3798 5 discriminator 11
 8165 0280 10301BE5 		ldr	r3, [fp, #-16]
 8166 0284 233CA0E1 		lsr	r3, r3, #24
 8167 0288 030053E3 		cmp	r3, #3
 8168 028c 0100000A 		beq	.L524
 8169              		.loc 1 3798 5 discriminator 12
 8170 0290 0130E0E3 		mvn	r3, #1
 8171              		.loc 1 3798 5
 8172 0294 6C0000EA 		b	.L510
 8173              	.L524:
 8174              		.loc 1 3798 5 discriminator 13
 8175 0298 24301BE5 		ldr	r3, [fp, #-36]
 8176 029c 7F2003E2 		and	r2, r3, #127
 8177 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 8178 02a4 143093E5 		ldr	r3, [r3, #20]
 8179 02a8 030052E1 		cmp	r2, r3
 8180 02ac 0100003A 		bcc	.L525
 8181              		.loc 1 3798 5 discriminator 14
 8182 02b0 0230E0E3 		mvn	r3, #2
 8183              		.loc 1 3798 5
 8184 02b4 640000EA 		b	.L510
 8185              	.L525:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 212


 8186              		.loc 1 3798 5 discriminator 15
 8187 02b8 24301BE5 		ldr	r3, [fp, #-36]
 8188 02bc 7F3003E2 		and	r3, r3, #127
 8189 02c0 8322A0E1 		lsl	r2, r3, #5
 8190 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 8191 02c8 0C3093E5 		ldr	r3, [r3, #12]
 8192 02cc 033082E0 		add	r3, r2, r3
 8193 02d0 0C300BE5 		str	r3, [fp, #-12]
 8194 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 8195 02d8 0300A0E1 		mov	r0, r3
 8196 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8197 02e0 10000BE5 		str	r0, [fp, #-16]
 8198              		.loc 1 3798 5 discriminator 1
 8199 02e4 10301BE5 		ldr	r3, [fp, #-16]
 8200 02e8 FF3803E2 		and	r3, r3, #16711680
 8201 02ec 020853E3 		cmp	r3, #131072
 8202 02f0 0100001A 		bne	.L526
 8203              		.loc 1 3798 5 discriminator 16
 8204 02f4 0830E0E3 		mvn	r3, #8
 8205              		.loc 1 3798 5
 8206 02f8 530000EA 		b	.L510
 8207              	.L526:
 8208              		.loc 1 3798 5 discriminator 17
 8209 02fc 10301BE5 		ldr	r3, [fp, #-16]
 8210 0300 233CA0E1 		lsr	r3, r3, #24
 8211 0304 030053E3 		cmp	r3, #3
 8212 0308 0100000A 		beq	.L521
 8213              		.loc 1 3798 5 discriminator 18
 8214 030c 0130E0E3 		mvn	r3, #1
 8215              		.loc 1 3798 5
 8216 0310 4D0000EA 		b	.L510
 8217              	.L521:
3799:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3800:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3801:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_DES_PARENT);
 8218              		.loc 1 3801 5 is_stmt 1
 8219 0314 08301BE5 		ldr	r3, [fp, #-8]
 8220 0318 083093E5 		ldr	r3, [r3, #8]
 8221 031c 203003E2 		and	r3, r3, #32
 8222 0320 000053E3 		cmp	r3, #0
 8223 0324 0100001A 		bne	.L527
 8224              		.loc 1 3801 5 is_stmt 0 discriminator 1
 8225 0328 0630E0E3 		mvn	r3, #6
 8226              		.loc 1 3801 5
 8227 032c 460000EA 		b	.L510
 8228              	.L527:
3802:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 8229              		.loc 1 3802 5 is_stmt 1
 8230 0330 0C301BE5 		ldr	r3, [fp, #-12]
 8231 0334 083093E5 		ldr	r3, [r3, #8]
 8232 0338 083003E2 		and	r3, r3, #8
 8233 033c 000053E3 		cmp	r3, #0
 8234 0340 0100001A 		bne	.L528
 8235              		.loc 1 3802 5 is_stmt 0 discriminator 1
 8236 0344 0630E0E3 		mvn	r3, #6
 8237              		.loc 1 3802 5
 8238 0348 3F0000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 213


 8239              	.L528:
3803:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3804:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 8240              		.loc 1 3804 13 is_stmt 1
 8241 034c 08301BE5 		ldr	r3, [fp, #-8]
 8242 0350 083093E5 		ldr	r3, [r3, #8]
 8243 0354 233AA0E1 		lsr	r3, r3, #20
 8244              		.loc 1 3804 7
 8245 0358 20201BE5 		ldr	r2, [fp, #-32]
 8246 035c 030052E1 		cmp	r2, r3
 8247 0360 0600008A 		bhi	.L529
3805:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8248              		.loc 1 3805 13
 8249 0364 08301BE5 		ldr	r3, [fp, #-8]
 8250 0368 083093E5 		ldr	r3, [r3, #8]
 8251 036c 2334A0E1 		lsr	r3, r3, #8
 8252 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3804:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8253              		.loc 1 3804 54 discriminator 1
 8254 0374 20201BE5 		ldr	r2, [fp, #-32]
 8255 0378 030052E1 		cmp	r2, r3
 8256 037c 0100002A 		bcs	.L530
 8257              	.L529:
3806:../../Source/Kernel/rme_kernel.c ****     {
3807:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3808:../../Source/Kernel/rme_kernel.c **** 
3809:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 8258              		.loc 1 3809 16
 8259 0380 0630E0E3 		mvn	r3, #6
 8260 0384 300000EA 		b	.L510
 8261              	.L530:
3810:../../Source/Kernel/rme_kernel.c ****     }
3811:../../Source/Kernel/rme_kernel.c ****     else
3812:../../Source/Kernel/rme_kernel.c ****     {
3813:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3814:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3815:../../Source/Kernel/rme_kernel.c ****     }
3816:../../Source/Kernel/rme_kernel.c **** 
3817:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3818:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 8262              		.loc 1 3818 14
 8263 0388 08301BE5 		ldr	r3, [fp, #-8]
 8264 038c 143093E5 		ldr	r3, [r3, #20]
 8265 0390 7330FFE6 		uxth	r3, r3
 8266              		.loc 1 3818 12
 8267 0394 20201BE5 		ldr	r2, [fp, #-32]
 8268 0398 3233A0E1 		lsr	r3, r2, r3
 8269              		.loc 1 3818 7
 8270 039c 000053E3 		cmp	r3, #0
 8271 03a0 0100000A 		beq	.L531
3819:../../Source/Kernel/rme_kernel.c ****     {
3820:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3821:../../Source/Kernel/rme_kernel.c **** 
3822:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 8272              		.loc 1 3822 16
 8273 03a4 6430E0E3 		mvn	r3, #100
 8274 03a8 270000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 214


 8275              	.L531:
3823:../../Source/Kernel/rme_kernel.c ****     }
3824:../../Source/Kernel/rme_kernel.c ****     else
3825:../../Source/Kernel/rme_kernel.c ****     {
3826:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3827:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3828:../../Source/Kernel/rme_kernel.c ****     }
3829:../../Source/Kernel/rme_kernel.c **** 
3830:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3831:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict. Also,
3832:../../Source/Kernel/rme_kernel.c ****      * the HAL needs to guarantee that the Child is actually mapped there,
3833:../../Source/Kernel/rme_kernel.c ****      * and use that as the old value in CAS */
3834:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Unmap(Pgt_Parent,Pos,Pgt_Child)<0)
 8276              		.loc 1 3834 8
 8277 03ac 0C201BE5 		ldr	r2, [fp, #-12]
 8278 03b0 20101BE5 		ldr	r1, [fp, #-32]
 8279 03b4 08001BE5 		ldr	r0, [fp, #-8]
 8280 03b8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Unmap
 8281 03bc 0030A0E1 		mov	r3, r0
 8282              		.loc 1 3834 7 discriminator 1
 8283 03c0 000053E3 		cmp	r3, #0
 8284 03c4 010000AA 		bge	.L532
3835:../../Source/Kernel/rme_kernel.c ****     {
3836:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3837:../../Source/Kernel/rme_kernel.c **** 
3838:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 8285              		.loc 1 3838 16
 8286 03c8 6530E0E3 		mvn	r3, #101
 8287 03cc 1E0000EA 		b	.L510
 8288              	.L532:
3839:../../Source/Kernel/rme_kernel.c ****     }
3840:../../Source/Kernel/rme_kernel.c ****     else
3841:../../Source/Kernel/rme_kernel.c ****     {
3842:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3843:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3844:../../Source/Kernel/rme_kernel.c ****     }
3845:../../Source/Kernel/rme_kernel.c ****     
3846:../../Source/Kernel/rme_kernel.c ****     /* Decrease refcnt for both parent/child */
3847:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 8289              		.loc 1 3847 14
 8290 03d0 08301BE5 		ldr	r3, [fp, #-8]
 8291 03d4 003093E5 		ldr	r3, [r3]
 8292 03d8 7330FFE6 		uxth	r3, r3
 8293 03dc 000053E3 		cmp	r3, #0
 8294 03e0 0200000A 		beq	.L533
 8295              		.loc 1 3847 14 is_stmt 0 discriminator 1
 8296 03e4 08301BE5 		ldr	r3, [fp, #-8]
 8297 03e8 043093E5 		ldr	r3, [r3, #4]
 8298 03ec 000000EA 		b	.L534
 8299              	.L533:
 8300              		.loc 1 3847 14 discriminator 2
 8301 03f0 08301BE5 		ldr	r3, [fp, #-8]
 8302              	.L534:
 8303              		.loc 1 3847 13 is_stmt 1 discriminator 4
 8304 03f4 14300BE5 		str	r3, [fp, #-20]
3848:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8305              		.loc 1 3848 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 215


 8306 03f8 14301BE5 		ldr	r3, [fp, #-20]
 8307 03fc 043083E2 		add	r3, r3, #4
 8308 0400 0010E0E3 		mvn	r1, #0
 8309 0404 0300A0E1 		mov	r0, r3
 8310 0408 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3849:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 8311              		.loc 1 3849 14
 8312 040c 0C301BE5 		ldr	r3, [fp, #-12]
 8313 0410 003093E5 		ldr	r3, [r3]
 8314 0414 7330FFE6 		uxth	r3, r3
 8315 0418 000053E3 		cmp	r3, #0
 8316 041c 0200000A 		beq	.L535
 8317              		.loc 1 3849 14 is_stmt 0 discriminator 1
 8318 0420 0C301BE5 		ldr	r3, [fp, #-12]
 8319 0424 043093E5 		ldr	r3, [r3, #4]
 8320 0428 000000EA 		b	.L536
 8321              	.L535:
 8322              		.loc 1 3849 14 discriminator 2
 8323 042c 0C301BE5 		ldr	r3, [fp, #-12]
 8324              	.L536:
 8325              		.loc 1 3849 13 is_stmt 1 discriminator 4
 8326 0430 14300BE5 		str	r3, [fp, #-20]
3850:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8327              		.loc 1 3850 5
 8328 0434 14301BE5 		ldr	r3, [fp, #-20]
 8329 0438 043083E2 		add	r3, r3, #4
 8330 043c 0010E0E3 		mvn	r1, #0
 8331 0440 0300A0E1 		mov	r0, r3
 8332 0444 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3851:../../Source/Kernel/rme_kernel.c **** 
3852:../../Source/Kernel/rme_kernel.c ****     return 0;
 8333              		.loc 1 3852 12
 8334 0448 0030A0E3 		mov	r3, #0
 8335              	.L510:
3853:../../Source/Kernel/rme_kernel.c **** }
 8336              		.loc 1 3853 1
 8337 044c 0300A0E1 		mov	r0, r3
 8338 0450 04D04BE2 		sub	sp, fp, #4
 8339              		.cfi_def_cfa 13, 8
 8340              		@ sp needed
 8341 0454 0088BDE8 		pop	{fp, pc}
 8342              		.cfi_endproc
 8343              	.LFE37:
 8345              		.section	.text._RME_Kot_Init,"ax",%progbits
 8346              		.align	2
 8347              		.global	_RME_Kot_Init
 8348              		.syntax unified
 8349              		.arm
 8351              	_RME_Kot_Init:
 8352              	.LFB38:
3854:../../Source/Kernel/rme_kernel.c **** #endif
3855:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Des *************************************************/
3856:../../Source/Kernel/rme_kernel.c **** 
3857:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Init *****************************************************
3858:../../Source/Kernel/rme_kernel.c **** Description : Initialize the kernel object table according to the total kernel
3859:../../Source/Kernel/rme_kernel.c ****               memory size, which decides the number of words in the table.
3860:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Words - the number of words in the table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 216


3861:../../Source/Kernel/rme_kernel.c **** Output      : None.
3862:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the number of words are is not sufficient to hold 
3863:../../Source/Kernel/rme_kernel.c ****                           all kernel memory, -1; else 0.
3864:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3865:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Init(rme_ptr_t Word)
3866:../../Source/Kernel/rme_kernel.c **** {
 8353              		.loc 1 3866 1
 8354              		.cfi_startproc
 8355              		@ args = 0, pretend = 0, frame = 16
 8356              		@ frame_needed = 1, uses_anonymous_args = 0
 8357              		@ link register save eliminated.
 8358 0000 04B02DE5 		str	fp, [sp, #-4]!
 8359              		.cfi_def_cfa_offset 4
 8360              		.cfi_offset 11, -4
 8361 0004 00B08DE2 		add	fp, sp, #0
 8362              		.cfi_def_cfa_register 11
 8363 0008 14D04DE2 		sub	sp, sp, #20
 8364 000c 10000BE5 		str	r0, [fp, #-16]
3867:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3868:../../Source/Kernel/rme_kernel.c ****     
3869:../../Source/Kernel/rme_kernel.c ****     if(Word<RME_KOT_WORD_NUM)
 8365              		.loc 1 3869 7
 8366 0010 10301BE5 		ldr	r3, [fp, #-16]
 8367 0014 020953E3 		cmp	r3, #32768
 8368 0018 0100002A 		bcs	.L538
3870:../../Source/Kernel/rme_kernel.c ****     {
3871:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3872:../../Source/Kernel/rme_kernel.c **** 
3873:../../Source/Kernel/rme_kernel.c ****         return -1;
 8369              		.loc 1 3873 16
 8370 001c 0030E0E3 		mvn	r3, #0
 8371 0020 0F0000EA 		b	.L539
 8372              	.L538:
3874:../../Source/Kernel/rme_kernel.c ****     }
3875:../../Source/Kernel/rme_kernel.c ****     else
3876:../../Source/Kernel/rme_kernel.c ****     {
3877:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3878:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3879:../../Source/Kernel/rme_kernel.c ****     }
3880:../../Source/Kernel/rme_kernel.c **** 
3881:../../Source/Kernel/rme_kernel.c ****     /* Zero out the whole table */
3882:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Word;Count++)
 8373              		.loc 1 3882 14
 8374 0024 0030A0E3 		mov	r3, #0
 8375 0028 08300BE5 		str	r3, [fp, #-8]
 8376              		.loc 1 3882 5
 8377 002c 070000EA 		b	.L540
 8378              	.L541:
3883:../../Source/Kernel/rme_kernel.c ****     {
3884:../../Source/Kernel/rme_kernel.c ****         RME_KOT_VA_BASE[Count]=0U;
 8379              		.loc 1 3884 31
 8380 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8381 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8382 0038 08201BE5 		ldr	r2, [fp, #-8]
 8383 003c 0010A0E3 		mov	r1, #0
 8384 0040 021183E7 		str	r1, [r3, r2, lsl #2]
3882:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 217


 8385              		.loc 1 3882 34 discriminator 3
 8386 0044 08301BE5 		ldr	r3, [fp, #-8]
 8387 0048 013083E2 		add	r3, r3, #1
 8388 004c 08300BE5 		str	r3, [fp, #-8]
 8389              	.L540:
3882:../../Source/Kernel/rme_kernel.c ****     {
 8390              		.loc 1 3882 23 discriminator 1
 8391 0050 08201BE5 		ldr	r2, [fp, #-8]
 8392 0054 10301BE5 		ldr	r3, [fp, #-16]
 8393 0058 030052E1 		cmp	r2, r3
 8394 005c F3FFFF3A 		bcc	.L541
3885:../../Source/Kernel/rme_kernel.c ****     }
3886:../../Source/Kernel/rme_kernel.c **** 
3887:../../Source/Kernel/rme_kernel.c ****     return 0;
 8395              		.loc 1 3887 12
 8396 0060 0030A0E3 		mov	r3, #0
 8397              	.L539:
3888:../../Source/Kernel/rme_kernel.c **** }
 8398              		.loc 1 3888 1
 8399 0064 0300A0E1 		mov	r0, r3
 8400 0068 00D08BE2 		add	sp, fp, #0
 8401              		.cfi_def_cfa_register 13
 8402              		@ sp needed
 8403 006c 04B09DE4 		ldr	fp, [sp], #4
 8404              		.cfi_restore 11
 8405              		.cfi_def_cfa_offset 0
 8406 0070 1EFF2FE1 		bx	lr
 8407              		.cfi_endproc
 8408              	.LFE38:
 8410              		.section	.rodata
 8411 00d7 00       		.align	2
 8412              	.LC11:
 8413 00d8 0D0A4368 		.ascii	"\015\012Check if the marking is well aligned\000"
 8413      65636B20 
 8413      69662074 
 8413      6865206D 
 8413      61726B69 
 8414 00ff 00       		.align	2
 8415              	.LC12:
 8416 0100 0D0A536F 		.ascii	"\015\012Someone already populated something here\000"
 8416      6D656F6E 
 8416      6520616C 
 8416      72656164 
 8416      7920706F 
 8417 012b 00       		.align	2
 8418              	.LC13:
 8419 012c 0D0A4F6C 		.ascii	"\015\012Old_Val \000"
 8419      645F5661 
 8419      6C2000
 8420 0137 00       		.align	2
 8421              	.LC14:
 8422 0138 0D0A4D61 		.ascii	"\015\012Mask_Begin \000"
 8422      736B5F42 
 8422      6567696E 
 8422      2000
 8423 0146 0000     		.align	2
 8424              	.LC15:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 218


 8425 0148 0D0A4D61 		.ascii	"\015\012Mask_End \000"
 8425      736B5F45 
 8425      6E642000 
 8426              		.align	2
 8427              	.LC16:
 8428 0154 0D0A4368 		.ascii	"\015\012Check done, do the marking with CAS\000"
 8428      65636B20 
 8428      646F6E65 
 8428      2C20646F 
 8428      20746865 
 8429 017a 0000     		.align	2
 8430              	.LC17:
 8431 017c 0D0A4368 		.ascii	"\015\012Check&Mark the start\000"
 8431      65636B26 
 8431      4D61726B 
 8431      20746865 
 8431      20737461 
 8432 0193 00       		.align	2
 8433              	.LC18:
 8434 0194 0D0A524D 		.ascii	"\015\012RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],\000"
 8434      455F434F 
 8434      4D505F53 
 8434      57415028 
 8434      26524D45 
 8435              		.section	.text._RME_Kot_Mark,"ax",%progbits
 8436              		.align	2
 8437              		.global	_RME_Kot_Mark
 8438              		.syntax unified
 8439              		.arm
 8441              	_RME_Kot_Mark:
 8442              	.LFB39:
3889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Init ************************************************/
3890:../../Source/Kernel/rme_kernel.c **** 
3891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Mark *****************************************************
3892:../../Source/Kernel/rme_kernel.c **** Description : Populate the kernel object bitmap contiguously.
3893:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
3894:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to populate.
3895:../../Source/Kernel/rme_kernel.c **** Output      : None.
3896:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3897:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3898:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Mark(rme_ptr_t Kaddr,
3899:../../Source/Kernel/rme_kernel.c ****                         rme_ptr_t Size)
3900:../../Source/Kernel/rme_kernel.c **** {
 8443              		.loc 1 3900 1
 8444              		.cfi_startproc
 8445              		@ args = 0, pretend = 0, frame = 40
 8446              		@ frame_needed = 1, uses_anonymous_args = 0
 8447 0000 00482DE9 		push	{fp, lr}
 8448              		.cfi_def_cfa_offset 8
 8449              		.cfi_offset 11, -8
 8450              		.cfi_offset 14, -4
 8451 0004 04B08DE2 		add	fp, sp, #4
 8452              		.cfi_def_cfa 11, 4
 8453 0008 28D04DE2 		sub	sp, sp, #40
 8454 000c 28000BE5 		str	r0, [fp, #-40]
 8455 0010 2C100BE5 		str	r1, [fp, #-44]
3901:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 219


3902:../../Source/Kernel/rme_kernel.c ****     /* The old value */
3903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Val;
3904:../../Source/Kernel/rme_kernel.c ****     /* Whether we need to undo our operations because of CAS failure */
3905:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Undo;
3906:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
3907:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
3908:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
3909:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
3910:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
3911:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
3912:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
3913:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
3914:../../Source/Kernel/rme_kernel.c **** 
3915:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
3916:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8456              		.loc 1 3916 14
 8457 0014 28301BE5 		ldr	r3, [fp, #-40]
 8458 0018 0F3003E2 		and	r3, r3, #15
 8459              		.loc 1 3916 7
 8460 001c 000053E3 		cmp	r3, #0
 8461 0020 0400000A 		beq	.L543
3917:../../Source/Kernel/rme_kernel.c ****     {
3918:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3919:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nCheck if the marking is well aligned");
 8462              		.loc 1 3919 9
 8463 0024 000000E3 		movw	r0, #:lower16:.LC11
 8464 0028 000040E3 		movt	r0, #:upper16:.LC11
 8465 002c FEFFFFEB 		bl	RME_Str_Print
3920:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8466              		.loc 1 3920 16
 8467 0030 0030E0E3 		mvn	r3, #0
 8468 0034 DD0000EA 		b	.L544
 8469              	.L543:
3921:../../Source/Kernel/rme_kernel.c ****     }
3922:../../Source/Kernel/rme_kernel.c ****     else
3923:../../Source/Kernel/rme_kernel.c ****     {
3924:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3925:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3926:../../Source/Kernel/rme_kernel.c ****     }
3927:../../Source/Kernel/rme_kernel.c ****     
3928:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
3929:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8470              		.loc 1 3929 17
 8471 0038 28301BE5 		ldr	r3, [fp, #-40]
 8472 003c 7F3483E2 		add	r3, r3, #2130706432
 8473              		.loc 1 3929 10
 8474 0040 2332A0E1 		lsr	r3, r3, #4
 8475 0044 10300BE5 		str	r3, [fp, #-16]
3930:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8476              		.loc 1 3930 16
 8477 0048 10301BE5 		ldr	r3, [fp, #-16]
 8478 004c 1F3003E2 		and	r3, r3, #31
 8479              		.loc 1 3930 15
 8480 0050 0020E0E3 		mvn	r2, #0
 8481 0054 1233A0E1 		lsl	r3, r2, r3
 8482 0058 14300BE5 		str	r3, [fp, #-20]
3931:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 220


 8483              		.loc 1 3931 10
 8484 005c 10301BE5 		ldr	r3, [fp, #-16]
 8485 0060 A332A0E1 		lsr	r3, r3, #5
 8486 0064 10300BE5 		str	r3, [fp, #-16]
3932:../../Source/Kernel/rme_kernel.c ****     
3933:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8487              		.loc 1 3933 15
 8488 0068 28201BE5 		ldr	r2, [fp, #-40]
 8489 006c 2C301BE5 		ldr	r3, [fp, #-44]
 8490 0070 033082E0 		add	r3, r2, r3
 8491              		.loc 1 3933 23
 8492 0074 7F3483E2 		add	r3, r3, #2130706432
 8493 0078 013043E2 		sub	r3, r3, #1
 8494              		.loc 1 3933 8
 8495 007c 2332A0E1 		lsr	r3, r3, #4
 8496 0080 18300BE5 		str	r3, [fp, #-24]
3934:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8497              		.loc 1 3934 14
 8498 0084 18301BE5 		ldr	r3, [fp, #-24]
 8499 0088 0330E0E1 		mvn	r3, r3
 8500 008c 1F3003E2 		and	r3, r3, #31
 8501              		.loc 1 3934 13
 8502 0090 0020E0E3 		mvn	r2, #0
 8503 0094 3233A0E1 		lsr	r3, r2, r3
 8504 0098 1C300BE5 		str	r3, [fp, #-28]
3935:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8505              		.loc 1 3935 8
 8506 009c 18301BE5 		ldr	r3, [fp, #-24]
 8507 00a0 A332A0E1 		lsr	r3, r3, #5
 8508 00a4 18300BE5 		str	r3, [fp, #-24]
3936:../../Source/Kernel/rme_kernel.c ****     
3937:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
3938:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8509              		.loc 1 3938 7
 8510 00a8 10201BE5 		ldr	r2, [fp, #-16]
 8511 00ac 18301BE5 		ldr	r3, [fp, #-24]
 8512 00b0 030052E1 		cmp	r2, r3
 8513 00b4 3400001A 		bne	.L545
3939:../../Source/Kernel/rme_kernel.c ****     {
3940:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3941:../../Source/Kernel/rme_kernel.c ****         
3942:../../Source/Kernel/rme_kernel.c ****         /* Someone already populated something here */
3943:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8514              		.loc 1 3943 16
 8515 00b8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8516 00bc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8517 00c0 10201BE5 		ldr	r2, [fp, #-16]
 8518 00c4 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8519 00c8 20300BE5 		str	r3, [fp, #-32]
3944:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&(Mask_Begin&Mask_End))!=0U)
 8520              		.loc 1 3944 32
 8521 00cc 14201BE5 		ldr	r2, [fp, #-20]
 8522 00d0 1C301BE5 		ldr	r3, [fp, #-28]
 8523 00d4 032002E0 		and	r2, r2, r3
 8524              		.loc 1 3944 20
 8525 00d8 20301BE5 		ldr	r3, [fp, #-32]
 8526 00dc 023003E0 		and	r3, r3, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 221


 8527              		.loc 1 3944 11
 8528 00e0 000053E3 		cmp	r3, #0
 8529 00e4 1300000A 		beq	.L546
3945:../../Source/Kernel/rme_kernel.c ****         {
3946:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3947:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nSomeone already populated something here");
 8530              		.loc 1 3947 13
 8531 00e8 000000E3 		movw	r0, #:lower16:.LC12
 8532 00ec 000040E3 		movt	r0, #:upper16:.LC12
 8533 00f0 FEFFFFEB 		bl	RME_Str_Print
3948:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nOld_Val ");
 8534              		.loc 1 3948 13
 8535 00f4 000000E3 		movw	r0, #:lower16:.LC13
 8536 00f8 000040E3 		movt	r0, #:upper16:.LC13
 8537 00fc FEFFFFEB 		bl	RME_Str_Print
3949:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Old_Val);
 8538              		.loc 1 3949 13
 8539 0100 20001BE5 		ldr	r0, [fp, #-32]
 8540 0104 FEFFFFEB 		bl	RME_Hex_Print
3950:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nMask_Begin ");
 8541              		.loc 1 3950 13
 8542 0108 000000E3 		movw	r0, #:lower16:.LC14
 8543 010c 000040E3 		movt	r0, #:upper16:.LC14
 8544 0110 FEFFFFEB 		bl	RME_Str_Print
3951:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Mask_Begin);
 8545              		.loc 1 3951 13
 8546 0114 14001BE5 		ldr	r0, [fp, #-20]
 8547 0118 FEFFFFEB 		bl	RME_Hex_Print
3952:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nMask_End ");
 8548              		.loc 1 3952 13
 8549 011c 000000E3 		movw	r0, #:lower16:.LC15
 8550 0120 000040E3 		movt	r0, #:upper16:.LC15
 8551 0124 FEFFFFEB 		bl	RME_Str_Print
3953:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Mask_End);
 8552              		.loc 1 3953 13
 8553 0128 1C001BE5 		ldr	r0, [fp, #-28]
 8554 012c FEFFFFEB 		bl	RME_Hex_Print
3954:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8555              		.loc 1 3954 20
 8556 0130 0030E0E3 		mvn	r3, #0
 8557 0134 9D0000EA 		b	.L544
 8558              	.L546:
3955:../../Source/Kernel/rme_kernel.c ****         }
3956:../../Source/Kernel/rme_kernel.c ****         else
3957:../../Source/Kernel/rme_kernel.c ****         {
3958:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3959:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3960:../../Source/Kernel/rme_kernel.c ****         }
3961:../../Source/Kernel/rme_kernel.c ****         
3962:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the marking with CAS */
3963:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8559              		.loc 1 3963 12
 8560 0138 10301BE5 		ldr	r3, [fp, #-16]
 8561 013c 0321A0E1 		lsl	r2, r3, #2
 8562 0140 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8563 0144 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8564 0148 030082E0 		add	r0, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 222


 8565 014c 14201BE5 		ldr	r2, [fp, #-20]
 8566 0150 1C301BE5 		ldr	r3, [fp, #-28]
 8567 0154 032002E0 		and	r2, r2, r3
 8568 0158 20301BE5 		ldr	r3, [fp, #-32]
 8569 015c 033082E1 		orr	r3, r2, r3
 8570 0160 0320A0E1 		mov	r2, r3
 8571 0164 20101BE5 		ldr	r1, [fp, #-32]
 8572 0168 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8573 016c 0030A0E1 		mov	r3, r0
 8574              		.loc 1 3963 11 discriminator 1
 8575 0170 000053E3 		cmp	r3, #0
 8576 0174 8C00001A 		bne	.L547
3964:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3965:../../Source/Kernel/rme_kernel.c ****                          Old_Val|(Mask_Begin&Mask_End))==RME_CASFAIL)
3966:../../Source/Kernel/rme_kernel.c ****         {
3967:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3968:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nCheck done, do the marking with CAS");
 8577              		.loc 1 3968 13
 8578 0178 000000E3 		movw	r0, #:lower16:.LC16
 8579 017c 000040E3 		movt	r0, #:upper16:.LC16
 8580 0180 FEFFFFEB 		bl	RME_Str_Print
3969:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8581              		.loc 1 3969 20
 8582 0184 0030E0E3 		mvn	r3, #0
 8583 0188 880000EA 		b	.L544
 8584              	.L545:
3970:../../Source/Kernel/rme_kernel.c ****         }
3971:../../Source/Kernel/rme_kernel.c ****         else
3972:../../Source/Kernel/rme_kernel.c ****         {
3973:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3974:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3975:../../Source/Kernel/rme_kernel.c ****         }
3976:../../Source/Kernel/rme_kernel.c ****     }
3977:../../Source/Kernel/rme_kernel.c ****     else
3978:../../Source/Kernel/rme_kernel.c ****     {
3979:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3980:../../Source/Kernel/rme_kernel.c ****         
3981:../../Source/Kernel/rme_kernel.c ****         Undo=0U;
 8585              		.loc 1 3981 13
 8586 018c 0030A0E3 		mov	r3, #0
 8587 0190 0C300BE5 		str	r3, [fp, #-12]
3982:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the start */
3983:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8588              		.loc 1 3983 16
 8589 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8590 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8591 019c 10201BE5 		ldr	r2, [fp, #-16]
 8592 01a0 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8593 01a4 20300BE5 		str	r3, [fp, #-32]
3984:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&Mask_Begin)!=0U)
 8594              		.loc 1 3984 20
 8595 01a8 20201BE5 		ldr	r2, [fp, #-32]
 8596 01ac 14301BE5 		ldr	r3, [fp, #-20]
 8597 01b0 023003E0 		and	r3, r3, r2
 8598              		.loc 1 3984 11
 8599 01b4 000053E3 		cmp	r3, #0
 8600 01b8 0400000A 		beq	.L548
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 223


3985:../../Source/Kernel/rme_kernel.c ****         {
3986:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3987:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nCheck&Mark the start");
 8601              		.loc 1 3987 13
 8602 01bc 000000E3 		movw	r0, #:lower16:.LC17
 8603 01c0 000040E3 		movt	r0, #:upper16:.LC17
 8604 01c4 FEFFFFEB 		bl	RME_Str_Print
3988:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8605              		.loc 1 3988 20
 8606 01c8 0030E0E3 		mvn	r3, #0
 8607 01cc 770000EA 		b	.L544
 8608              	.L548:
3989:../../Source/Kernel/rme_kernel.c ****         }
3990:../../Source/Kernel/rme_kernel.c ****         else
3991:../../Source/Kernel/rme_kernel.c ****         {
3992:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3993:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3994:../../Source/Kernel/rme_kernel.c ****         }
3995:../../Source/Kernel/rme_kernel.c ****         
3996:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8609              		.loc 1 3996 12
 8610 01d0 10301BE5 		ldr	r3, [fp, #-16]
 8611 01d4 0321A0E1 		lsl	r2, r3, #2
 8612 01d8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8613 01dc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8614 01e0 030082E0 		add	r0, r2, r3
 8615 01e4 20201BE5 		ldr	r2, [fp, #-32]
 8616 01e8 14301BE5 		ldr	r3, [fp, #-20]
 8617 01ec 033082E1 		orr	r3, r2, r3
 8618 01f0 0320A0E1 		mov	r2, r3
 8619 01f4 20101BE5 		ldr	r1, [fp, #-32]
 8620 01f8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8621 01fc 0030A0E1 		mov	r3, r0
 8622              		.loc 1 3996 11 discriminator 1
 8623 0200 000053E3 		cmp	r3, #0
 8624 0204 0400001A 		bne	.L549
3997:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3998:../../Source/Kernel/rme_kernel.c ****                          Old_Val|Mask_Begin)==RME_CASFAIL)
3999:../../Source/Kernel/rme_kernel.c ****         {
4000:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4001:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nRME_COMP_SWAP(&RME_KOT_VA_BASE[Start],");
 8625              		.loc 1 4001 13
 8626 0208 000000E3 		movw	r0, #:lower16:.LC18
 8627 020c 000040E3 		movt	r0, #:upper16:.LC18
 8628 0210 FEFFFFEB 		bl	RME_Str_Print
4002:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8629              		.loc 1 4002 20
 8630 0214 0030E0E3 		mvn	r3, #0
 8631 0218 640000EA 		b	.L544
 8632              	.L549:
4003:../../Source/Kernel/rme_kernel.c ****         }
4004:../../Source/Kernel/rme_kernel.c ****         else
4005:../../Source/Kernel/rme_kernel.c ****         {
4006:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4007:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4008:../../Source/Kernel/rme_kernel.c ****         }
4009:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 224


4010:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the middle */
4011:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End;Count++)
 8633              		.loc 1 4011 18
 8634 021c 10301BE5 		ldr	r3, [fp, #-16]
 8635 0220 013083E2 		add	r3, r3, #1
 8636 0224 08300BE5 		str	r3, [fp, #-8]
 8637              		.loc 1 4011 9
 8638 0228 1C0000EA 		b	.L550
 8639              	.L554:
4012:../../Source/Kernel/rme_kernel.c ****         {
4013:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[Count];
 8640              		.loc 1 4013 20
 8641 022c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8642 0230 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8643 0234 08201BE5 		ldr	r2, [fp, #-8]
 8644 0238 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8645 023c 20300BE5 		str	r3, [fp, #-32]
4014:../../Source/Kernel/rme_kernel.c ****             if(Old_Val!=0U)
 8646              		.loc 1 4014 15
 8647 0240 20301BE5 		ldr	r3, [fp, #-32]
 8648 0244 000053E3 		cmp	r3, #0
 8649 0248 0200000A 		beq	.L551
4015:../../Source/Kernel/rme_kernel.c ****             {
4016:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4017:../../Source/Kernel/rme_kernel.c **** 
4018:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8650              		.loc 1 4018 21
 8651 024c 0130A0E3 		mov	r3, #1
 8652 0250 0C300BE5 		str	r3, [fp, #-12]
4019:../../Source/Kernel/rme_kernel.c ****                 break;
 8653              		.loc 1 4019 17
 8654 0254 150000EA 		b	.L552
 8655              	.L551:
4020:../../Source/Kernel/rme_kernel.c ****             }
4021:../../Source/Kernel/rme_kernel.c ****             else
4022:../../Source/Kernel/rme_kernel.c ****             {
4023:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4024:../../Source/Kernel/rme_kernel.c ****                 
4025:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Count],
 8656              		.loc 1 4025 20
 8657 0258 08301BE5 		ldr	r3, [fp, #-8]
 8658 025c 0321A0E1 		lsl	r2, r3, #2
 8659 0260 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8660 0264 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8661 0268 033082E0 		add	r3, r2, r3
 8662 026c 0020E0E3 		mvn	r2, #0
 8663 0270 20101BE5 		ldr	r1, [fp, #-32]
 8664 0274 0300A0E1 		mov	r0, r3
 8665 0278 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8666 027c 0030A0E1 		mov	r3, r0
 8667              		.loc 1 4025 19 discriminator 1
 8668 0280 000053E3 		cmp	r3, #0
 8669 0284 0200001A 		bne	.L553
4026:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4027:../../Source/Kernel/rme_kernel.c ****                                  RME_MASK_FULL)==RME_CASFAIL)
4028:../../Source/Kernel/rme_kernel.c ****                 {
4029:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 225


4030:../../Source/Kernel/rme_kernel.c ****                     
4031:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8670              		.loc 1 4031 25
 8671 0288 0130A0E3 		mov	r3, #1
 8672 028c 0C300BE5 		str	r3, [fp, #-12]
4032:../../Source/Kernel/rme_kernel.c ****                     break;
 8673              		.loc 1 4032 21
 8674 0290 060000EA 		b	.L552
 8675              	.L553:
4011:../../Source/Kernel/rme_kernel.c ****         {
 8676              		.loc 1 4011 43 discriminator 2
 8677 0294 08301BE5 		ldr	r3, [fp, #-8]
 8678 0298 013083E2 		add	r3, r3, #1
 8679 029c 08300BE5 		str	r3, [fp, #-8]
 8680              	.L550:
4011:../../Source/Kernel/rme_kernel.c ****         {
 8681              		.loc 1 4011 33 discriminator 1
 8682 02a0 08201BE5 		ldr	r2, [fp, #-8]
 8683 02a4 18301BE5 		ldr	r3, [fp, #-24]
 8684 02a8 030052E1 		cmp	r2, r3
 8685 02ac DEFFFF3A 		bcc	.L554
 8686              	.L552:
4033:../../Source/Kernel/rme_kernel.c ****                 }
4034:../../Source/Kernel/rme_kernel.c ****                 else
4035:../../Source/Kernel/rme_kernel.c ****                 {
4036:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4037:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4038:../../Source/Kernel/rme_kernel.c ****                 }
4039:../../Source/Kernel/rme_kernel.c ****             }
4040:../../Source/Kernel/rme_kernel.c ****         }
4041:../../Source/Kernel/rme_kernel.c ****         
4042:../../Source/Kernel/rme_kernel.c ****         /* See if the middle part failed. If yes, we skip the end marking */
4043:../../Source/Kernel/rme_kernel.c ****         if(Undo==0U)
 8687              		.loc 1 4043 11
 8688 02b0 0C301BE5 		ldr	r3, [fp, #-12]
 8689 02b4 000053E3 		cmp	r3, #0
 8690 02b8 1C00001A 		bne	.L555
4044:../../Source/Kernel/rme_kernel.c ****         {
4045:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4046:../../Source/Kernel/rme_kernel.c **** 
4047:../../Source/Kernel/rme_kernel.c ****             /* Check&Mark the end */
4048:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[End];
 8691              		.loc 1 4048 20
 8692 02bc 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8693 02c0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8694 02c4 18201BE5 		ldr	r2, [fp, #-24]
 8695 02c8 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8696 02cc 20300BE5 		str	r3, [fp, #-32]
4049:../../Source/Kernel/rme_kernel.c ****             if((Old_Val&Mask_End)!=0U)
 8697              		.loc 1 4049 24
 8698 02d0 20201BE5 		ldr	r2, [fp, #-32]
 8699 02d4 1C301BE5 		ldr	r3, [fp, #-28]
 8700 02d8 023003E0 		and	r3, r3, r2
 8701              		.loc 1 4049 15
 8702 02dc 000053E3 		cmp	r3, #0
 8703 02e0 0200000A 		beq	.L556
4050:../../Source/Kernel/rme_kernel.c ****             {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 226


4051:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4052:../../Source/Kernel/rme_kernel.c **** 
4053:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8704              		.loc 1 4053 21
 8705 02e4 0130A0E3 		mov	r3, #1
 8706 02e8 0C300BE5 		str	r3, [fp, #-12]
 8707 02ec 0F0000EA 		b	.L555
 8708              	.L556:
4054:../../Source/Kernel/rme_kernel.c ****             }
4055:../../Source/Kernel/rme_kernel.c ****             else
4056:../../Source/Kernel/rme_kernel.c ****             {
4057:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4058:../../Source/Kernel/rme_kernel.c **** 
4059:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[End],
 8709              		.loc 1 4059 20
 8710 02f0 18301BE5 		ldr	r3, [fp, #-24]
 8711 02f4 0321A0E1 		lsl	r2, r3, #2
 8712 02f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8713 02fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8714 0300 030082E0 		add	r0, r2, r3
 8715 0304 20201BE5 		ldr	r2, [fp, #-32]
 8716 0308 1C301BE5 		ldr	r3, [fp, #-28]
 8717 030c 033082E1 		orr	r3, r2, r3
 8718 0310 0320A0E1 		mov	r2, r3
 8719 0314 20101BE5 		ldr	r1, [fp, #-32]
 8720 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8721 031c 0030A0E1 		mov	r3, r0
 8722              		.loc 1 4059 19 discriminator 1
 8723 0320 000053E3 		cmp	r3, #0
 8724 0324 0100001A 		bne	.L555
4060:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4061:../../Source/Kernel/rme_kernel.c ****                                  Old_Val|Mask_End)==RME_CASFAIL)
4062:../../Source/Kernel/rme_kernel.c ****                 {
4063:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4064:../../Source/Kernel/rme_kernel.c **** 
4065:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8725              		.loc 1 4065 25
 8726 0328 0130A0E3 		mov	r3, #1
 8727 032c 0C300BE5 		str	r3, [fp, #-12]
 8728              	.L555:
4066:../../Source/Kernel/rme_kernel.c ****                 }
4067:../../Source/Kernel/rme_kernel.c ****                 else
4068:../../Source/Kernel/rme_kernel.c ****                 {
4069:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4070:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4071:../../Source/Kernel/rme_kernel.c ****                 }
4072:../../Source/Kernel/rme_kernel.c ****             }
4073:../../Source/Kernel/rme_kernel.c ****         }
4074:../../Source/Kernel/rme_kernel.c ****         else
4075:../../Source/Kernel/rme_kernel.c ****         {
4076:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4077:../../Source/Kernel/rme_kernel.c ****         }
4078:../../Source/Kernel/rme_kernel.c ****         
4079:../../Source/Kernel/rme_kernel.c ****         /* See if we need to undo. If yes, proceed to unroll and return error */
4080:../../Source/Kernel/rme_kernel.c ****         if(Undo!=0U)
 8729              		.loc 1 4080 11
 8730 0330 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 227


 8731 0334 000053E3 		cmp	r3, #0
 8732 0338 1B00000A 		beq	.L547
4081:../../Source/Kernel/rme_kernel.c ****         {
4082:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4083:../../Source/Kernel/rme_kernel.c **** 
4084:../../Source/Kernel/rme_kernel.c ****             /* Undo the middle part - no CAS neeeded, write back is always atomic */
4085:../../Source/Kernel/rme_kernel.c ****             for(Count--;Count>Start;Count--)
 8733              		.loc 1 4085 22
 8734 033c 08301BE5 		ldr	r3, [fp, #-8]
 8735 0340 013043E2 		sub	r3, r3, #1
 8736 0344 08300BE5 		str	r3, [fp, #-8]
 8737              		.loc 1 4085 13
 8738 0348 070000EA 		b	.L557
 8739              	.L558:
4086:../../Source/Kernel/rme_kernel.c ****             {
4087:../../Source/Kernel/rme_kernel.c ****                 RME_KOT_VA_BASE[Count]=0U;
 8740              		.loc 1 4087 39
 8741 034c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8742 0350 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8743 0354 08201BE5 		ldr	r2, [fp, #-8]
 8744 0358 0010A0E3 		mov	r1, #0
 8745 035c 021183E7 		str	r1, [r3, r2, lsl #2]
4085:../../Source/Kernel/rme_kernel.c ****             {
 8746              		.loc 1 4085 42 discriminator 3
 8747 0360 08301BE5 		ldr	r3, [fp, #-8]
 8748 0364 013043E2 		sub	r3, r3, #1
 8749 0368 08300BE5 		str	r3, [fp, #-8]
 8750              	.L557:
4085:../../Source/Kernel/rme_kernel.c ****             {
 8751              		.loc 1 4085 30 discriminator 1
 8752 036c 08201BE5 		ldr	r2, [fp, #-8]
 8753 0370 10301BE5 		ldr	r3, [fp, #-16]
 8754 0374 030052E1 		cmp	r2, r3
 8755 0378 F3FFFF8A 		bhi	.L558
4088:../../Source/Kernel/rme_kernel.c ****             }
4089:../../Source/Kernel/rme_kernel.c ****             /* Undo the first word - need atomic instructions */
4090:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8756              		.loc 1 4090 13
 8757 037c 10301BE5 		ldr	r3, [fp, #-16]
 8758 0380 0321A0E1 		lsl	r2, r3, #2
 8759 0384 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8760 0388 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8761 038c 032082E0 		add	r2, r2, r3
 8762 0390 14301BE5 		ldr	r3, [fp, #-20]
 8763 0394 0330E0E1 		mvn	r3, r3
 8764 0398 0310A0E1 		mov	r1, r3
 8765 039c 0200A0E1 		mov	r0, r2
 8766 03a0 FEFFFFEB 		bl	_RME_Fetch_And_Single
4091:../../Source/Kernel/rme_kernel.c ****             /* Return failure */
4092:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8767              		.loc 1 4092 20
 8768 03a4 0030E0E3 		mvn	r3, #0
 8769 03a8 000000EA 		b	.L544
 8770              	.L547:
4093:../../Source/Kernel/rme_kernel.c ****         }
4094:../../Source/Kernel/rme_kernel.c ****         else
4095:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 228


4096:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4097:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4098:../../Source/Kernel/rme_kernel.c ****         }
4099:../../Source/Kernel/rme_kernel.c ****     }
4100:../../Source/Kernel/rme_kernel.c **** 
4101:../../Source/Kernel/rme_kernel.c ****     return 0;
 8771              		.loc 1 4101 12
 8772 03ac 0030A0E3 		mov	r3, #0
 8773              	.L544:
4102:../../Source/Kernel/rme_kernel.c **** }
 8774              		.loc 1 4102 1
 8775 03b0 0300A0E1 		mov	r0, r3
 8776 03b4 04D04BE2 		sub	sp, fp, #4
 8777              		.cfi_def_cfa 13, 8
 8778              		@ sp needed
 8779 03b8 0088BDE8 		pop	{fp, pc}
 8780              		.cfi_endproc
 8781              	.LFE39:
 8783              		.section	.text._RME_Kot_Erase,"ax",%progbits
 8784              		.align	2
 8785              		.global	_RME_Kot_Erase
 8786              		.syntax unified
 8787              		.arm
 8789              	_RME_Kot_Erase:
 8790              	.LFB40:
4103:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Mark ************************************************/
4104:../../Source/Kernel/rme_kernel.c **** 
4105:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Erase ****************************************************
4106:../../Source/Kernel/rme_kernel.c **** Description : Depopulate the kernel object bitmap contiguously. We do not need 
4107:../../Source/Kernel/rme_kernel.c ****               CAS on erasure operations.
4108:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
4109:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to depopulate.
4110:../../Source/Kernel/rme_kernel.c **** Output      : None.
4111:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4112:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4113:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Erase(rme_ptr_t Kaddr,
4114:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t Size)
4115:../../Source/Kernel/rme_kernel.c **** {
 8791              		.loc 1 4115 1
 8792              		.cfi_startproc
 8793              		@ args = 0, pretend = 0, frame = 32
 8794              		@ frame_needed = 1, uses_anonymous_args = 0
 8795 0000 00482DE9 		push	{fp, lr}
 8796              		.cfi_def_cfa_offset 8
 8797              		.cfi_offset 11, -8
 8798              		.cfi_offset 14, -4
 8799 0004 04B08DE2 		add	fp, sp, #4
 8800              		.cfi_def_cfa 11, 4
 8801 0008 20D04DE2 		sub	sp, sp, #32
 8802 000c 20000BE5 		str	r0, [fp, #-32]
 8803 0010 24100BE5 		str	r1, [fp, #-36]
4116:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
4117:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
4118:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
4119:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
4120:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
4121:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 229


4122:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
4123:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
4124:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
4125:../../Source/Kernel/rme_kernel.c **** 
4126:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
4127:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8804              		.loc 1 4127 14
 8805 0014 20301BE5 		ldr	r3, [fp, #-32]
 8806 0018 0F3003E2 		and	r3, r3, #15
 8807              		.loc 1 4127 7
 8808 001c 000053E3 		cmp	r3, #0
 8809 0020 0100000A 		beq	.L560
4128:../../Source/Kernel/rme_kernel.c ****     {
4129:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4130:../../Source/Kernel/rme_kernel.c **** 
4131:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8810              		.loc 1 4131 16
 8811 0024 0030E0E3 		mvn	r3, #0
 8812 0028 8A0000EA 		b	.L561
 8813              	.L560:
4132:../../Source/Kernel/rme_kernel.c ****     }
4133:../../Source/Kernel/rme_kernel.c ****     else
4134:../../Source/Kernel/rme_kernel.c ****     {
4135:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4136:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4137:../../Source/Kernel/rme_kernel.c ****     }
4138:../../Source/Kernel/rme_kernel.c ****     
4139:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
4140:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8814              		.loc 1 4140 17
 8815 002c 20301BE5 		ldr	r3, [fp, #-32]
 8816 0030 7F3483E2 		add	r3, r3, #2130706432
 8817              		.loc 1 4140 10
 8818 0034 2332A0E1 		lsr	r3, r3, #4
 8819 0038 0C300BE5 		str	r3, [fp, #-12]
4141:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8820              		.loc 1 4141 16
 8821 003c 0C301BE5 		ldr	r3, [fp, #-12]
 8822 0040 1F3003E2 		and	r3, r3, #31
 8823              		.loc 1 4141 15
 8824 0044 0020E0E3 		mvn	r2, #0
 8825 0048 1233A0E1 		lsl	r3, r2, r3
 8826 004c 10300BE5 		str	r3, [fp, #-16]
4142:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8827              		.loc 1 4142 10
 8828 0050 0C301BE5 		ldr	r3, [fp, #-12]
 8829 0054 A332A0E1 		lsr	r3, r3, #5
 8830 0058 0C300BE5 		str	r3, [fp, #-12]
4143:../../Source/Kernel/rme_kernel.c ****     
4144:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8831              		.loc 1 4144 15
 8832 005c 20201BE5 		ldr	r2, [fp, #-32]
 8833 0060 24301BE5 		ldr	r3, [fp, #-36]
 8834 0064 033082E0 		add	r3, r2, r3
 8835              		.loc 1 4144 23
 8836 0068 7F3483E2 		add	r3, r3, #2130706432
 8837 006c 013043E2 		sub	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 230


 8838              		.loc 1 4144 8
 8839 0070 2332A0E1 		lsr	r3, r3, #4
 8840 0074 14300BE5 		str	r3, [fp, #-20]
4145:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8841              		.loc 1 4145 14
 8842 0078 14301BE5 		ldr	r3, [fp, #-20]
 8843 007c 0330E0E1 		mvn	r3, r3
 8844 0080 1F3003E2 		and	r3, r3, #31
 8845              		.loc 1 4145 13
 8846 0084 0020E0E3 		mvn	r2, #0
 8847 0088 3233A0E1 		lsr	r3, r2, r3
 8848 008c 18300BE5 		str	r3, [fp, #-24]
4146:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8849              		.loc 1 4146 8
 8850 0090 14301BE5 		ldr	r3, [fp, #-20]
 8851 0094 A332A0E1 		lsr	r3, r3, #5
 8852 0098 14300BE5 		str	r3, [fp, #-20]
4147:../../Source/Kernel/rme_kernel.c ****     
4148:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
4149:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8853              		.loc 1 4149 7
 8854 009c 0C201BE5 		ldr	r2, [fp, #-12]
 8855 00a0 14301BE5 		ldr	r3, [fp, #-20]
 8856 00a4 030052E1 		cmp	r2, r3
 8857 00a8 1A00001A 		bne	.L562
4150:../../Source/Kernel/rme_kernel.c ****     {
4151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4152:../../Source/Kernel/rme_kernel.c **** 
4153:../../Source/Kernel/rme_kernel.c ****         /* This address range is not fully populated */
4154:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&(Mask_Begin&Mask_End))!=(Mask_Begin&Mask_End))
 8858              		.loc 1 4154 28
 8859 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8860 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8861 00b4 0C201BE5 		ldr	r2, [fp, #-12]
 8862 00b8 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8863              		.loc 1 4154 47
 8864 00bc 10101BE5 		ldr	r1, [fp, #-16]
 8865 00c0 18301BE5 		ldr	r3, [fp, #-24]
 8866 00c4 013003E0 		and	r3, r3, r1
 8867              		.loc 1 4154 35
 8868 00c8 032002E0 		and	r2, r2, r3
 8869              		.loc 1 4154 71
 8870 00cc 10101BE5 		ldr	r1, [fp, #-16]
 8871 00d0 18301BE5 		ldr	r3, [fp, #-24]
 8872 00d4 013003E0 		and	r3, r3, r1
 8873              		.loc 1 4154 11
 8874 00d8 030052E1 		cmp	r2, r3
 8875 00dc 0100000A 		beq	.L563
4155:../../Source/Kernel/rme_kernel.c ****         {
4156:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4157:../../Source/Kernel/rme_kernel.c **** 
4158:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8876              		.loc 1 4158 20
 8877 00e0 0030E0E3 		mvn	r3, #0
 8878 00e4 5B0000EA 		b	.L561
 8879              	.L563:
4159:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 231


4160:../../Source/Kernel/rme_kernel.c ****         else
4161:../../Source/Kernel/rme_kernel.c ****         {
4162:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4163:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4164:../../Source/Kernel/rme_kernel.c ****         }
4165:../../Source/Kernel/rme_kernel.c **** 
4166:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the unmarking - need atomic operations */
4167:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~(Mask_Begin&Mask_End));
 8880              		.loc 1 4167 9
 8881 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 8882 00ec 0321A0E1 		lsl	r2, r3, #2
 8883 00f0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8884 00f4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8885 00f8 030082E0 		add	r0, r2, r3
 8886 00fc 10201BE5 		ldr	r2, [fp, #-16]
 8887 0100 18301BE5 		ldr	r3, [fp, #-24]
 8888 0104 023003E0 		and	r3, r3, r2
 8889 0108 0330E0E1 		mvn	r3, r3
 8890 010c 0310A0E1 		mov	r1, r3
 8891 0110 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8892 0114 4E0000EA 		b	.L564
 8893              	.L562:
4168:../../Source/Kernel/rme_kernel.c ****     }
4169:../../Source/Kernel/rme_kernel.c ****     else
4170:../../Source/Kernel/rme_kernel.c ****     {
4171:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4172:../../Source/Kernel/rme_kernel.c **** 
4173:../../Source/Kernel/rme_kernel.c ****         /* Check the start */
4174:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&Mask_Begin)!=Mask_Begin)
 8894              		.loc 1 4174 28
 8895 0118 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8896 011c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8897 0120 0C201BE5 		ldr	r2, [fp, #-12]
 8898 0124 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8899              		.loc 1 4174 35
 8900 0128 10301BE5 		ldr	r3, [fp, #-16]
 8901 012c 023003E0 		and	r3, r3, r2
 8902              		.loc 1 4174 11
 8903 0130 10201BE5 		ldr	r2, [fp, #-16]
 8904 0134 030052E1 		cmp	r2, r3
 8905 0138 0100000A 		beq	.L565
4175:../../Source/Kernel/rme_kernel.c ****         {
4176:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4177:../../Source/Kernel/rme_kernel.c **** 
4178:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8906              		.loc 1 4178 20
 8907 013c 0030E0E3 		mvn	r3, #0
 8908 0140 440000EA 		b	.L561
 8909              	.L565:
4179:../../Source/Kernel/rme_kernel.c ****         }
4180:../../Source/Kernel/rme_kernel.c ****         else
4181:../../Source/Kernel/rme_kernel.c ****         {
4182:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4183:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4184:../../Source/Kernel/rme_kernel.c ****         }
4185:../../Source/Kernel/rme_kernel.c ****         
4186:../../Source/Kernel/rme_kernel.c ****         /* Check the middle */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 232


4187:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8910              		.loc 1 4187 18
 8911 0144 0C301BE5 		ldr	r3, [fp, #-12]
 8912 0148 013083E2 		add	r3, r3, #1
 8913 014c 08300BE5 		str	r3, [fp, #-8]
 8914              		.loc 1 4187 9
 8915 0150 0A0000EA 		b	.L566
 8916              	.L568:
4188:../../Source/Kernel/rme_kernel.c ****         {
4189:../../Source/Kernel/rme_kernel.c ****             if(RME_KOT_VA_BASE[Count]!=RME_MASK_FULL)
 8917              		.loc 1 4189 31
 8918 0154 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8919 0158 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8920 015c 08201BE5 		ldr	r2, [fp, #-8]
 8921 0160 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8922              		.loc 1 4189 15
 8923 0164 010073E3 		cmn	r3, #1
 8924 0168 0100000A 		beq	.L567
4190:../../Source/Kernel/rme_kernel.c ****             {
4191:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4192:../../Source/Kernel/rme_kernel.c **** 
4193:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_KOT_BMP;
 8925              		.loc 1 4193 24
 8926 016c 0030E0E3 		mvn	r3, #0
 8927 0170 380000EA 		b	.L561
 8928              	.L567:
4187:../../Source/Kernel/rme_kernel.c ****         {
 8929              		.loc 1 4187 46 discriminator 2
 8930 0174 08301BE5 		ldr	r3, [fp, #-8]
 8931 0178 013083E2 		add	r3, r3, #1
 8932 017c 08300BE5 		str	r3, [fp, #-8]
 8933              	.L566:
4187:../../Source/Kernel/rme_kernel.c ****         {
 8934              		.loc 1 4187 37 discriminator 1
 8935 0180 14301BE5 		ldr	r3, [fp, #-20]
 8936 0184 013043E2 		sub	r3, r3, #1
4187:../../Source/Kernel/rme_kernel.c ****         {
 8937              		.loc 1 4187 33 discriminator 1
 8938 0188 08201BE5 		ldr	r2, [fp, #-8]
 8939 018c 030052E1 		cmp	r2, r3
 8940 0190 EFFFFF3A 		bcc	.L568
4194:../../Source/Kernel/rme_kernel.c ****             }
4195:../../Source/Kernel/rme_kernel.c ****             else
4196:../../Source/Kernel/rme_kernel.c ****             {
4197:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4198:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
4199:../../Source/Kernel/rme_kernel.c ****             }
4200:../../Source/Kernel/rme_kernel.c ****         }
4201:../../Source/Kernel/rme_kernel.c **** 
4202:../../Source/Kernel/rme_kernel.c ****         /* Check the end */
4203:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[End]&Mask_End)!=Mask_End)
 8941              		.loc 1 4203 28
 8942 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8943 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8944 019c 14201BE5 		ldr	r2, [fp, #-20]
 8945 01a0 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8946              		.loc 1 4203 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 233


 8947 01a4 18301BE5 		ldr	r3, [fp, #-24]
 8948 01a8 023003E0 		and	r3, r3, r2
 8949              		.loc 1 4203 11
 8950 01ac 18201BE5 		ldr	r2, [fp, #-24]
 8951 01b0 030052E1 		cmp	r2, r3
 8952 01b4 0100000A 		beq	.L569
4204:../../Source/Kernel/rme_kernel.c ****         {
4205:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4206:../../Source/Kernel/rme_kernel.c **** 
4207:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8953              		.loc 1 4207 20
 8954 01b8 0030E0E3 		mvn	r3, #0
 8955 01bc 250000EA 		b	.L561
 8956              	.L569:
4208:../../Source/Kernel/rme_kernel.c ****         }
4209:../../Source/Kernel/rme_kernel.c ****         else
4210:../../Source/Kernel/rme_kernel.c ****         {
4211:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4212:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4213:../../Source/Kernel/rme_kernel.c ****         }
4214:../../Source/Kernel/rme_kernel.c ****         
4215:../../Source/Kernel/rme_kernel.c ****         /* Erase the start - make it atomic */
4216:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8957              		.loc 1 4216 9
 8958 01c0 0C301BE5 		ldr	r3, [fp, #-12]
 8959 01c4 0321A0E1 		lsl	r2, r3, #2
 8960 01c8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8961 01cc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8962 01d0 032082E0 		add	r2, r2, r3
 8963 01d4 10301BE5 		ldr	r3, [fp, #-16]
 8964 01d8 0330E0E1 		mvn	r3, r3
 8965 01dc 0310A0E1 		mov	r1, r3
 8966 01e0 0200A0E1 		mov	r0, r2
 8967 01e4 FEFFFFEB 		bl	_RME_Fetch_And_Single
4217:../../Source/Kernel/rme_kernel.c ****         /* Erase the middle - do not need atomics here */
4218:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8968              		.loc 1 4218 18
 8969 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 8970 01ec 013083E2 		add	r3, r3, #1
 8971 01f0 08300BE5 		str	r3, [fp, #-8]
 8972              		.loc 1 4218 9
 8973 01f4 070000EA 		b	.L570
 8974              	.L571:
4219:../../Source/Kernel/rme_kernel.c ****         {
4220:../../Source/Kernel/rme_kernel.c ****             RME_KOT_VA_BASE[Count]=0U;
 8975              		.loc 1 4220 35
 8976 01f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8977 01fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8978 0200 08201BE5 		ldr	r2, [fp, #-8]
 8979 0204 0010A0E3 		mov	r1, #0
 8980 0208 021183E7 		str	r1, [r3, r2, lsl #2]
4218:../../Source/Kernel/rme_kernel.c ****         {
 8981              		.loc 1 4218 46 discriminator 3
 8982 020c 08301BE5 		ldr	r3, [fp, #-8]
 8983 0210 013083E2 		add	r3, r3, #1
 8984 0214 08300BE5 		str	r3, [fp, #-8]
 8985              	.L570:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 234


4218:../../Source/Kernel/rme_kernel.c ****         {
 8986              		.loc 1 4218 37 discriminator 1
 8987 0218 14301BE5 		ldr	r3, [fp, #-20]
 8988 021c 013043E2 		sub	r3, r3, #1
4218:../../Source/Kernel/rme_kernel.c ****         {
 8989              		.loc 1 4218 33 discriminator 1
 8990 0220 08201BE5 		ldr	r2, [fp, #-8]
 8991 0224 030052E1 		cmp	r2, r3
 8992 0228 F2FFFF3A 		bcc	.L571
4221:../../Source/Kernel/rme_kernel.c ****         }
4222:../../Source/Kernel/rme_kernel.c ****         /* Erase the end - make it atomic */
4223:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[End]),~Mask_End);
 8993              		.loc 1 4223 9
 8994 022c 14301BE5 		ldr	r3, [fp, #-20]
 8995 0230 0321A0E1 		lsl	r2, r3, #2
 8996 0234 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8997 0238 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8998 023c 032082E0 		add	r2, r2, r3
 8999 0240 18301BE5 		ldr	r3, [fp, #-24]
 9000 0244 0330E0E1 		mvn	r3, r3
 9001 0248 0310A0E1 		mov	r1, r3
 9002 024c 0200A0E1 		mov	r0, r2
 9003 0250 FEFFFFEB 		bl	_RME_Fetch_And_Single
 9004              	.L564:
4224:../../Source/Kernel/rme_kernel.c ****     }
4225:../../Source/Kernel/rme_kernel.c **** 
4226:../../Source/Kernel/rme_kernel.c ****     return 0;
 9005              		.loc 1 4226 12
 9006 0254 0030A0E3 		mov	r3, #0
 9007              	.L561:
4227:../../Source/Kernel/rme_kernel.c **** }
 9008              		.loc 1 4227 1
 9009 0258 0300A0E1 		mov	r0, r3
 9010 025c 04D04BE2 		sub	sp, fp, #4
 9011              		.cfi_def_cfa 13, 8
 9012              		@ sp needed
 9013 0260 0088BDE8 		pop	{fp, pc}
 9014              		.cfi_endproc
 9015              	.LFE40:
 9017              		.section	.text._RME_Kom_Boot_Crt,"ax",%progbits
 9018              		.align	2
 9019              		.global	_RME_Kom_Boot_Crt
 9020              		.syntax unified
 9021              		.arm
 9023              	_RME_Kom_Boot_Crt:
 9024              	.LFB41:
4228:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Erase ***********************************************/
4229:../../Source/Kernel/rme_kernel.c **** 
4230:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kom_Boot_Crt *************************************************
4231:../../Source/Kernel/rme_kernel.c **** Description : Create boot-time kernel memory capability. Kernel memory allow
4232:../../Source/Kernel/rme_kernel.c ****               you to create specific types of kernel objects in a specific 
4233:../../Source/Kernel/rme_kernel.c ****               kernel memory range. The initial kernel memory capability's
4234:../../Source/Kernel/rme_kernel.c ****               content is supplied by the kernel according to config.
4235:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4236:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
4237:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
4238:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 235


4239:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The capability to the kernel memory.
4240:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4241:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Begin - The begin address of the kernel memory, aligned
4242:../../Source/Kernel/rme_kernel.c ****                                 to kotbl granularity.
4243:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t End - The end address of the kernel memory, aligned to
4244:../../Source/Kernel/rme_kernel.c ****                               kotbl granularity, then -1.
4245:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The operation flags for this kernel memory. Set
4246:../../Source/Kernel/rme_kernel.c ****                                acoording to your needs.
4247:../../Source/Kernel/rme_kernel.c **** Output      : None.
4248:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4249:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4250:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kom_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4251:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4252:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kom,
4253:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Begin,
4254:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t End,
4255:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
4256:../../Source/Kernel/rme_kernel.c **** {
 9025              		.loc 1 4256 1
 9026              		.cfi_startproc
 9027              		@ args = 8, pretend = 0, frame = 40
 9028              		@ frame_needed = 1, uses_anonymous_args = 0
 9029 0000 00482DE9 		push	{fp, lr}
 9030              		.cfi_def_cfa_offset 8
 9031              		.cfi_offset 11, -8
 9032              		.cfi_offset 14, -4
 9033 0004 04B08DE2 		add	fp, sp, #4
 9034              		.cfi_def_cfa 11, 4
 9035 0008 28D04DE2 		sub	sp, sp, #40
 9036 000c 20000BE5 		str	r0, [fp, #-32]
 9037 0010 24100BE5 		str	r1, [fp, #-36]
 9038 0014 28200BE5 		str	r2, [fp, #-40]
 9039 0018 2C300BE5 		str	r3, [fp, #-44]
4257:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4258:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kom* Kom_Crt;
4259:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
4260:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
4261:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4262:../../Source/Kernel/rme_kernel.c ****     
4263:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
4264:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 9040              		.loc 1 4264 5
 9041 001c 24301BE5 		ldr	r3, [fp, #-36]
 9042 0020 803003E2 		and	r3, r3, #128
 9043 0024 000053E3 		cmp	r3, #0
 9044 0028 1C00001A 		bne	.L573
 9045              		.loc 1 4264 5 is_stmt 0 discriminator 1
 9046 002c 20301BE5 		ldr	r3, [fp, #-32]
 9047 0030 142093E5 		ldr	r2, [r3, #20]
 9048 0034 24301BE5 		ldr	r3, [fp, #-36]
 9049 0038 030052E1 		cmp	r2, r3
 9050 003c 0100008A 		bhi	.L574
 9051              		.loc 1 4264 5 discriminator 3
 9052 0040 0230E0E3 		mvn	r3, #2
 9053              		.loc 1 4264 5
 9054 0044 9F0000EA 		b	.L575
 9055              	.L574:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 236


 9056              		.loc 1 4264 5 discriminator 4
 9057 0048 24301BE5 		ldr	r3, [fp, #-36]
 9058 004c 8322A0E1 		lsl	r2, r3, #5
 9059 0050 20301BE5 		ldr	r3, [fp, #-32]
 9060 0054 0C3093E5 		ldr	r3, [r3, #12]
 9061 0058 033082E0 		add	r3, r2, r3
 9062 005c 08300BE5 		str	r3, [fp, #-8]
 9063 0060 08301BE5 		ldr	r3, [fp, #-8]
 9064 0064 0300A0E1 		mov	r0, r3
 9065 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9066 006c 0C000BE5 		str	r0, [fp, #-12]
 9067              		.loc 1 4264 5 discriminator 1
 9068 0070 0C301BE5 		ldr	r3, [fp, #-12]
 9069 0074 FF3803E2 		and	r3, r3, #16711680
 9070 0078 020853E3 		cmp	r3, #131072
 9071 007c 0100001A 		bne	.L576
 9072              		.loc 1 4264 5 discriminator 5
 9073 0080 0830E0E3 		mvn	r3, #8
 9074              		.loc 1 4264 5
 9075 0084 8F0000EA 		b	.L575
 9076              	.L576:
 9077              		.loc 1 4264 5 discriminator 6
 9078 0088 0C301BE5 		ldr	r3, [fp, #-12]
 9079 008c 233CA0E1 		lsr	r3, r3, #24
 9080 0090 030053E3 		cmp	r3, #3
 9081 0094 3F00000A 		beq	.L577
 9082              		.loc 1 4264 5 discriminator 7
 9083 0098 0130E0E3 		mvn	r3, #1
 9084              		.loc 1 4264 5
 9085 009c 890000EA 		b	.L575
 9086              	.L573:
 9087              		.loc 1 4264 5 discriminator 2
 9088 00a0 24301BE5 		ldr	r3, [fp, #-36]
 9089 00a4 2324A0E1 		lsr	r2, r3, #8
 9090 00a8 20301BE5 		ldr	r3, [fp, #-32]
 9091 00ac 143093E5 		ldr	r3, [r3, #20]
 9092 00b0 030052E1 		cmp	r2, r3
 9093 00b4 0100003A 		bcc	.L578
 9094              		.loc 1 4264 5 discriminator 8
 9095 00b8 0230E0E3 		mvn	r3, #2
 9096              		.loc 1 4264 5
 9097 00bc 810000EA 		b	.L575
 9098              	.L578:
 9099              		.loc 1 4264 5 discriminator 9
 9100 00c0 24301BE5 		ldr	r3, [fp, #-36]
 9101 00c4 2334A0E1 		lsr	r3, r3, #8
 9102 00c8 8322A0E1 		lsl	r2, r3, #5
 9103 00cc 20301BE5 		ldr	r3, [fp, #-32]
 9104 00d0 0C3093E5 		ldr	r3, [r3, #12]
 9105 00d4 033082E0 		add	r3, r2, r3
 9106 00d8 08300BE5 		str	r3, [fp, #-8]
 9107 00dc 08301BE5 		ldr	r3, [fp, #-8]
 9108 00e0 0300A0E1 		mov	r0, r3
 9109 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9110 00e8 0C000BE5 		str	r0, [fp, #-12]
 9111              		.loc 1 4264 5 discriminator 1
 9112 00ec 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 237


 9113 00f0 FF3803E2 		and	r3, r3, #16711680
 9114 00f4 020853E3 		cmp	r3, #131072
 9115 00f8 0100001A 		bne	.L579
 9116              		.loc 1 4264 5 discriminator 10
 9117 00fc 0830E0E3 		mvn	r3, #8
 9118              		.loc 1 4264 5
 9119 0100 700000EA 		b	.L575
 9120              	.L579:
 9121              		.loc 1 4264 5 discriminator 11
 9122 0104 0C301BE5 		ldr	r3, [fp, #-12]
 9123 0108 233CA0E1 		lsr	r3, r3, #24
 9124 010c 030053E3 		cmp	r3, #3
 9125 0110 0100000A 		beq	.L580
 9126              		.loc 1 4264 5 discriminator 12
 9127 0114 0130E0E3 		mvn	r3, #1
 9128              		.loc 1 4264 5
 9129 0118 6A0000EA 		b	.L575
 9130              	.L580:
 9131              		.loc 1 4264 5 discriminator 13
 9132 011c 24301BE5 		ldr	r3, [fp, #-36]
 9133 0120 7F2003E2 		and	r2, r3, #127
 9134 0124 08301BE5 		ldr	r3, [fp, #-8]
 9135 0128 143093E5 		ldr	r3, [r3, #20]
 9136 012c 030052E1 		cmp	r2, r3
 9137 0130 0100003A 		bcc	.L581
 9138              		.loc 1 4264 5 discriminator 14
 9139 0134 0230E0E3 		mvn	r3, #2
 9140              		.loc 1 4264 5
 9141 0138 620000EA 		b	.L575
 9142              	.L581:
 9143              		.loc 1 4264 5 discriminator 15
 9144 013c 24301BE5 		ldr	r3, [fp, #-36]
 9145 0140 7F3003E2 		and	r3, r3, #127
 9146 0144 8322A0E1 		lsl	r2, r3, #5
 9147 0148 08301BE5 		ldr	r3, [fp, #-8]
 9148 014c 0C3093E5 		ldr	r3, [r3, #12]
 9149 0150 033082E0 		add	r3, r2, r3
 9150 0154 08300BE5 		str	r3, [fp, #-8]
 9151 0158 08301BE5 		ldr	r3, [fp, #-8]
 9152 015c 0300A0E1 		mov	r0, r3
 9153 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9154 0164 0C000BE5 		str	r0, [fp, #-12]
 9155              		.loc 1 4264 5 discriminator 1
 9156 0168 0C301BE5 		ldr	r3, [fp, #-12]
 9157 016c FF3803E2 		and	r3, r3, #16711680
 9158 0170 020853E3 		cmp	r3, #131072
 9159 0174 0100001A 		bne	.L582
 9160              		.loc 1 4264 5 discriminator 16
 9161 0178 0830E0E3 		mvn	r3, #8
 9162              		.loc 1 4264 5
 9163 017c 510000EA 		b	.L575
 9164              	.L582:
 9165              		.loc 1 4264 5 discriminator 17
 9166 0180 0C301BE5 		ldr	r3, [fp, #-12]
 9167 0184 233CA0E1 		lsr	r3, r3, #24
 9168 0188 030053E3 		cmp	r3, #3
 9169 018c 0100000A 		beq	.L577
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 238


 9170              		.loc 1 4264 5 discriminator 18
 9171 0190 0130E0E3 		mvn	r3, #1
 9172              		.loc 1 4264 5
 9173 0194 4B0000EA 		b	.L575
 9174              	.L577:
4265:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4266:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4267:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 9175              		.loc 1 4267 5 is_stmt 1
 9176 0198 08301BE5 		ldr	r3, [fp, #-8]
 9177 019c 083093E5 		ldr	r3, [r3, #8]
 9178 01a0 013003E2 		and	r3, r3, #1
 9179 01a4 000053E3 		cmp	r3, #0
 9180 01a8 0100001A 		bne	.L583
 9181              		.loc 1 4267 5 is_stmt 0 discriminator 1
 9182 01ac 0630E0E3 		mvn	r3, #6
 9183              		.loc 1 4267 5
 9184 01b0 440000EA 		b	.L575
 9185              	.L583:
4268:../../Source/Kernel/rme_kernel.c **** 
4269:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4270:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kom,struct RME_Cap_Kom*,Kom_Crt);
 9186              		.loc 1 4270 5 is_stmt 1
 9187 01b4 08301BE5 		ldr	r3, [fp, #-8]
 9188 01b8 142093E5 		ldr	r2, [r3, #20]
 9189 01bc 28301BE5 		ldr	r3, [fp, #-40]
 9190 01c0 030052E1 		cmp	r2, r3
 9191 01c4 0100008A 		bhi	.L584
 9192              		.loc 1 4270 5 is_stmt 0 discriminator 1
 9193 01c8 0230E0E3 		mvn	r3, #2
 9194              		.loc 1 4270 5
 9195 01cc 3D0000EA 		b	.L575
 9196              	.L584:
 9197              		.loc 1 4270 5 discriminator 2
 9198 01d0 28301BE5 		ldr	r3, [fp, #-40]
 9199 01d4 8322A0E1 		lsl	r2, r3, #5
 9200 01d8 08301BE5 		ldr	r3, [fp, #-8]
 9201 01dc 0C3093E5 		ldr	r3, [r3, #12]
 9202 01e0 033082E0 		add	r3, r2, r3
 9203 01e4 10300BE5 		str	r3, [fp, #-16]
4271:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4272:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kom_Crt);
 9204              		.loc 1 4272 5 is_stmt 1
 9205 01e8 10301BE5 		ldr	r3, [fp, #-16]
 9206 01ec 0128A0E3 		mov	r2, #65536
 9207 01f0 0010A0E3 		mov	r1, #0
 9208 01f4 0300A0E1 		mov	r0, r3
 9209 01f8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 9210 01fc 0030A0E1 		mov	r3, r0
 9211              		.loc 1 4272 5 is_stmt 0 discriminator 1
 9212 0200 000053E3 		cmp	r3, #0
 9213 0204 0100001A 		bne	.L585
 9214 0208 0430E0E3 		mvn	r3, #4
 9215              		.loc 1 4272 5
 9216 020c 2D0000EA 		b	.L575
 9217              	.L585:
 9218              		.loc 1 4272 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 239


 9219 0210 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 9220 0214 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 9221 0218 002093E5 		ldr	r2, [r3]
 9222 021c 10301BE5 		ldr	r3, [fp, #-16]
 9223 0220 102083E5 		str	r2, [r3, #16]
4273:../../Source/Kernel/rme_kernel.c ****     
4274:../../Source/Kernel/rme_kernel.c ****     /* Align addresses */
4275:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
4276:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,RME_KOM_SLOT_ORDER);
4277:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Start,RME_KOM_SLOT_ORDER);
4278:../../Source/Kernel/rme_kernel.c **** #else
4279:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,6U);
 9224              		.loc 1 4279 13 is_stmt 1
 9225 0224 04309BE5 		ldr	r3, [fp, #4]
 9226 0228 013083E2 		add	r3, r3, #1
 9227              		.loc 1 4279 12
 9228 022c 3F30C3E3 		bic	r3, r3, #63
 9229 0230 14300BE5 		str	r3, [fp, #-20]
4280:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Begin,6U);
 9230              		.loc 1 4280 15
 9231 0234 2C301BE5 		ldr	r3, [fp, #-44]
 9232 0238 3F3083E2 		add	r3, r3, #63
 9233              		.loc 1 4280 14
 9234 023c 3F30C3E3 		bic	r3, r3, #63
 9235 0240 18300BE5 		str	r3, [fp, #-24]
4281:../../Source/Kernel/rme_kernel.c **** #endif
4282:../../Source/Kernel/rme_kernel.c **** 
4283:../../Source/Kernel/rme_kernel.c ****     /* Must at least allow creation of something */
4284:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Flag!=0U);
 9236              		.loc 1 4284 5
 9237 0244 08309BE5 		ldr	r3, [fp, #8]
 9238 0248 000053E3 		cmp	r3, #0
 9239 024c 0800001A 		bne	.L586
 9240              		.loc 1 4284 5 is_stmt 0 discriminator 1
 9241 0250 003000E3 		movw	r3, #:lower16:.LC6
 9242 0254 003040E3 		movt	r3, #:upper16:.LC6
 9243 0258 002000E3 		movw	r2, #:lower16:.LC7
 9244 025c 002040E3 		movt	r2, #:upper16:.LC7
 9245 0260 BC1001E3 		movw	r1, #4284
 9246 0264 000000E3 		movw	r0, #:lower16:.LC8
 9247 0268 000040E3 		movt	r0, #:upper16:.LC8
 9248 026c FEFFFFEB 		bl	RME_Log
 9249              	.L587:
 9250              		.loc 1 4284 5
 9251 0270 FEFFFFEA 		b	.L587
 9252              	.L586:
4285:../../Source/Kernel/rme_kernel.c **** 
4286:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4287:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Root_Ref=1U;
 9253              		.loc 1 4287 27 is_stmt 1
 9254 0274 10301BE5 		ldr	r3, [fp, #-16]
 9255 0278 0120A0E3 		mov	r2, #1
 9256 027c 042083E5 		str	r2, [r3, #4]
4288:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Object=0U;
 9257              		.loc 1 4288 25
 9258 0280 10301BE5 		ldr	r3, [fp, #-16]
 9259 0284 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 240


 9260 0288 0C2083E5 		str	r2, [r3, #12]
4289:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Flag=Flag;
 9261              		.loc 1 4289 23
 9262 028c 10301BE5 		ldr	r3, [fp, #-16]
 9263 0290 08209BE5 		ldr	r2, [fp, #8]
 9264 0294 082083E5 		str	r2, [r3, #8]
4290:../../Source/Kernel/rme_kernel.c ****     
4291:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4292:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Begin=Kom_Begin;
 9265              		.loc 1 4292 19
 9266 0298 10301BE5 		ldr	r3, [fp, #-16]
 9267 029c 18201BE5 		ldr	r2, [fp, #-24]
 9268 02a0 142083E5 		str	r2, [r3, #20]
4293:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->End=Kom_End-1U;
 9269              		.loc 1 4293 25
 9270 02a4 14301BE5 		ldr	r3, [fp, #-20]
 9271 02a8 012043E2 		sub	r2, r3, #1
 9272              		.loc 1 4293 17
 9273 02ac 10301BE5 		ldr	r3, [fp, #-16]
 9274 02b0 182083E5 		str	r2, [r3, #24]
4294:../../Source/Kernel/rme_kernel.c **** 
4295:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4296:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kom_Crt->Head.Type_Stat),
 9275              		.loc 1 4296 5
 9276 02b4 10301BE5 		ldr	r3, [fp, #-16]
 9277 02b8 0214A0E3 		mov	r1, #33554432
 9278 02bc 0300A0E1 		mov	r0, r3
 9279 02c0 FEFFFFEB 		bl	__RME_A7A_Write_Release
4297:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KOM,
4298:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4299:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4300:../../Source/Kernel/rme_kernel.c **** 
4301:../../Source/Kernel/rme_kernel.c ****     return 0;
 9280              		.loc 1 4301 12
 9281 02c4 0030A0E3 		mov	r3, #0
 9282              	.L575:
4302:../../Source/Kernel/rme_kernel.c **** }
 9283              		.loc 1 4302 1
 9284 02c8 0300A0E1 		mov	r0, r3
 9285 02cc 04D04BE2 		sub	sp, fp, #4
 9286              		.cfi_def_cfa 13, 8
 9287              		@ sp needed
 9288 02d0 0088BDE8 		pop	{fp, pc}
 9289              		.cfi_endproc
 9290              	.LFE41:
 9292              		.section	.text._RME_CPU_Local_Init,"ax",%progbits
 9293              		.align	2
 9294              		.global	_RME_CPU_Local_Init
 9295              		.syntax unified
 9296              		.arm
 9298              	_RME_CPU_Local_Init:
 9299              	.LFB42:
4303:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kom_Boot_Crt ********************************************/
4304:../../Source/Kernel/rme_kernel.c **** 
4305:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_CPU_Local_Init ***********************************************
4306:../../Source/Kernel/rme_kernel.c **** Description : Initialize the CPU-local data structure.
4307:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The pointer to the per-CPU values.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 241


4308:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The CPUID of the CPU.
4309:../../Source/Kernel/rme_kernel.c **** Output      : None.
4310:../../Source/Kernel/rme_kernel.c **** Return      : None.
4311:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4312:../../Source/Kernel/rme_kernel.c **** void _RME_CPU_Local_Init(struct RME_CPU_Local* Local,
4313:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t CPUID)
4314:../../Source/Kernel/rme_kernel.c **** {
 9300              		.loc 1 4314 1
 9301              		.cfi_startproc
 9302              		@ args = 0, pretend = 0, frame = 16
 9303              		@ frame_needed = 1, uses_anonymous_args = 0
 9304 0000 00482DE9 		push	{fp, lr}
 9305              		.cfi_def_cfa_offset 8
 9306              		.cfi_offset 11, -8
 9307              		.cfi_offset 14, -4
 9308 0004 04B08DE2 		add	fp, sp, #4
 9309              		.cfi_def_cfa 11, 4
 9310 0008 10D04DE2 		sub	sp, sp, #16
 9311 000c 10000BE5 		str	r0, [fp, #-16]
 9312 0010 14100BE5 		str	r1, [fp, #-20]
4315:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio_Cnt;
4316:../../Source/Kernel/rme_kernel.c ****     
4317:../../Source/Kernel/rme_kernel.c ****     Local->CPUID=CPUID;
 9313              		.loc 1 4317 17
 9314 0014 10301BE5 		ldr	r3, [fp, #-16]
 9315 0018 14201BE5 		ldr	r2, [fp, #-20]
 9316 001c 002083E5 		str	r2, [r3]
4318:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=RME_NULL;
 9317              		.loc 1 4318 19
 9318 0020 10301BE5 		ldr	r3, [fp, #-16]
 9319 0024 0020A0E3 		mov	r2, #0
 9320 0028 042083E5 		str	r2, [r3, #4]
4319:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Vct=RME_NULL;
 9321              		.loc 1 4319 19
 9322 002c 10301BE5 		ldr	r3, [fp, #-16]
 9323 0030 0020A0E3 		mov	r2, #0
 9324 0034 0C2083E5 		str	r2, [r3, #12]
4320:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Tim=RME_NULL;
 9325              		.loc 1 4320 19
 9326 0038 10301BE5 		ldr	r3, [fp, #-16]
 9327 003c 0020A0E3 		mov	r2, #0
 9328 0040 082083E5 		str	r2, [r3, #8]
4321:../../Source/Kernel/rme_kernel.c ****     
4322:../../Source/Kernel/rme_kernel.c ****     /* Initialize the run-queue and bitmap */
4323:../../Source/Kernel/rme_kernel.c ****     for(Prio_Cnt=0U;Prio_Cnt<RME_PREEMPT_PRIO_NUM;Prio_Cnt++)
 9329              		.loc 1 4323 17
 9330 0044 0030A0E3 		mov	r3, #0
 9331 0048 08300BE5 		str	r3, [fp, #-8]
 9332              		.loc 1 4323 5
 9333 004c 100000EA 		b	.L589
 9334              	.L590:
4324:../../Source/Kernel/rme_kernel.c ****     {
4325:../../Source/Kernel/rme_kernel.c ****         Local->Run.Bitmap[Prio_Cnt>>RME_WORD_ORDER]=0U;
 9335              		.loc 1 4325 35
 9336 0050 08301BE5 		ldr	r3, [fp, #-8]
 9337 0054 A322A0E1 		lsr	r2, r3, #5
 9338              		.loc 1 4325 52
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 242


 9339 0058 10301BE5 		ldr	r3, [fp, #-16]
 9340 005c 042082E2 		add	r2, r2, #4
 9341 0060 0010A0E3 		mov	r1, #0
 9342 0064 021183E7 		str	r1, [r3, r2, lsl #2]
4326:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Local->Run.List[Prio_Cnt]));
 9343              		.loc 1 4326 9
 9344 0068 08301BE5 		ldr	r3, [fp, #-8]
 9345 006c 023083E2 		add	r3, r3, #2
 9346 0070 8331A0E1 		lsl	r3, r3, #3
 9347 0074 10201BE5 		ldr	r2, [fp, #-16]
 9348 0078 033082E0 		add	r3, r2, r3
 9349 007c 043083E2 		add	r3, r3, #4
 9350 0080 0300A0E1 		mov	r0, r3
 9351 0084 FEFFFFEB 		bl	_RME_List_Crt
4323:../../Source/Kernel/rme_kernel.c ****     {
 9352              		.loc 1 4323 59 discriminator 3
 9353 0088 08301BE5 		ldr	r3, [fp, #-8]
 9354 008c 013083E2 		add	r3, r3, #1
 9355 0090 08300BE5 		str	r3, [fp, #-8]
 9356              	.L589:
4323:../../Source/Kernel/rme_kernel.c ****     {
 9357              		.loc 1 4323 29 discriminator 1
 9358 0094 08301BE5 		ldr	r3, [fp, #-8]
 9359 0098 1F0053E3 		cmp	r3, #31
 9360 009c EBFFFF9A 		bls	.L590
4327:../../Source/Kernel/rme_kernel.c ****     }
4328:../../Source/Kernel/rme_kernel.c **** }
 9361              		.loc 1 4328 1
 9362 00a0 00F020E3 		nop
 9363 00a4 00F020E3 		nop
 9364 00a8 04D04BE2 		sub	sp, fp, #4
 9365              		.cfi_def_cfa 13, 8
 9366              		@ sp needed
 9367 00ac 0088BDE8 		pop	{fp, pc}
 9368              		.cfi_endproc
 9369              	.LFE42:
 9371              		.section	.rodata
 9372 01bd 000000   		.align	2
 9373              	.LC19:
 9374 01c0 41747465 		.ascii	"Attempted to kill init thread.\000"
 9374      6D707465 
 9374      6420746F 
 9374      206B696C 
 9374      6C20696E 
 9375              		.section	.text._RME_Thd_Fatal,"ax",%progbits
 9376              		.align	2
 9377              		.global	_RME_Thd_Fatal
 9378              		.syntax unified
 9379              		.arm
 9381              	_RME_Thd_Fatal:
 9382              	.LFB43:
4329:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_CPU_Local_Init ******************************************/
4330:../../Source/Kernel/rme_kernel.c **** 
4331:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Fatal ***************************************************
4332:../../Source/Kernel/rme_kernel.c **** Description : The fatal fault handler of RME. This handler will be called by
4333:../../Source/Kernel/rme_kernel.c ****               the ISR that handles the exceptions. This indicates that a fatal
4334:../../Source/Kernel/rme_kernel.c ****               exception has happened and we need to see if this thread is in a
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 243


4335:../../Source/Kernel/rme_kernel.c ****               synchronous invocation. If yes, we stop the invocation, and
4336:../../Source/Kernel/rme_kernel.c ****               possibly return a fault value to the old register set. If not, we
4337:../../Source/Kernel/rme_kernel.c ****               just kill the thread. If the thread is killed, a notification
4338:../../Source/Kernel/rme_kernel.c ****               will be sent to its scheduler. An Exec_Set is required to clear
4339:../../Source/Kernel/rme_kernel.c ****               the exception pending status of the thread.
4340:../../Source/Kernel/rme_kernel.c ****               Some processors may raise some exceptions that are difficult to
4341:../../Source/Kernel/rme_kernel.c ****               attribute to a particular thread, either due to the fact that
4342:../../Source/Kernel/rme_kernel.c ****               they are asynchronous, or they are derived from exception entry.
4343:../../Source/Kernel/rme_kernel.c ****               A good example is ARMv7-M: its autostacking feature derives fault
4344:../../Source/Kernel/rme_kernel.c ****               from exception entry, and some of its bus faults are asynchronous
4345:../../Source/Kernel/rme_kernel.c ****               and can cross context boundaries. RME requires that all these
4346:../../Source/Kernel/rme_kernel.c ****               exceptions be dropped rather than handled; or there will be 
4347:../../Source/Kernel/rme_kernel.c ****               integrity and availability compromises.
4348:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4349:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
4350:../../Source/Kernel/rme_kernel.c **** Return      : None.
4351:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4352:../../Source/Kernel/rme_kernel.c **** void _RME_Thd_Fatal(struct RME_Reg_Struct* Reg)
4353:../../Source/Kernel/rme_kernel.c **** {
 9383              		.loc 1 4353 1
 9384              		.cfi_startproc
 9385              		@ args = 0, pretend = 0, frame = 16
 9386              		@ frame_needed = 1, uses_anonymous_args = 0
 9387 0000 00482DE9 		push	{fp, lr}
 9388              		.cfi_def_cfa_offset 8
 9389              		.cfi_offset 11, -8
 9390              		.cfi_offset 14, -4
 9391 0004 04B08DE2 		add	fp, sp, #4
 9392              		.cfi_def_cfa 11, 4
 9393 0008 10D04DE2 		sub	sp, sp, #16
 9394 000c 10000BE5 		str	r0, [fp, #-16]
4354:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4355:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
4356:../../Source/Kernel/rme_kernel.c ****     
4357:../../Source/Kernel/rme_kernel.c ****     /* Attempt to return from the invocation, from fault */
4358:../../Source/Kernel/rme_kernel.c ****     if(_RME_Inv_Ret(Reg,0U,1U)!=0)
 9395              		.loc 1 4358 8
 9396 0010 0120A0E3 		mov	r2, #1
 9397 0014 0010A0E3 		mov	r1, #0
 9398 0018 10001BE5 		ldr	r0, [fp, #-16]
 9399 001c FEFFFFEB 		bl	_RME_Inv_Ret
 9400 0020 0030A0E1 		mov	r3, r0
 9401              		.loc 1 4358 7 discriminator 1
 9402 0024 000053E3 		cmp	r3, #0
 9403 0028 2C00000A 		beq	.L597
4359:../../Source/Kernel/rme_kernel.c ****     {
4360:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4361:../../Source/Kernel/rme_kernel.c **** 
4362:../../Source/Kernel/rme_kernel.c ****         /* Return failure - report the exception */
4363:../../Source/Kernel/rme_kernel.c ****         Local=RME_CPU_LOCAL();
 9404              		.loc 1 4363 14
 9405 002c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 9406 0030 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 9407 0034 08300BE5 		str	r3, [fp, #-8]
4364:../../Source/Kernel/rme_kernel.c ****         Thd_Cur=Local->Thd_Cur;
 9408              		.loc 1 4364 16
 9409 0038 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 244


 9410 003c 043093E5 		ldr	r3, [r3, #4]
 9411 0040 0C300BE5 		str	r3, [fp, #-12]
4365:../../Source/Kernel/rme_kernel.c ****         
4366:../../Source/Kernel/rme_kernel.c ****         /* Init thread shall never have exceptions */
4367:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 9412              		.loc 1 4367 26
 9413 0044 0C301BE5 		ldr	r3, [fp, #-12]
 9414 0048 183093E5 		ldr	r3, [r3, #24]
 9415              		.loc 1 4367 11
 9416 004c 060173E3 		cmn	r3, #-2147483647
 9417 0050 0B00001A 		bne	.L593
4368:../../Source/Kernel/rme_kernel.c ****         {
4369:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4370:../../Source/Kernel/rme_kernel.c ****             
4371:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("Attempted to kill init thread.");
 9418              		.loc 1 4371 13
 9419 0054 000000E3 		movw	r0, #:lower16:.LC19
 9420 0058 000040E3 		movt	r0, #:upper16:.LC19
 9421 005c FEFFFFEB 		bl	RME_Str_Print
4372:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(0U);
 9422              		.loc 1 4372 13 discriminator 1
 9423 0060 003000E3 		movw	r3, #:lower16:.LC6
 9424 0064 003040E3 		movt	r3, #:upper16:.LC6
 9425 0068 002000E3 		movw	r2, #:lower16:.LC7
 9426 006c 002040E3 		movt	r2, #:upper16:.LC7
 9427 0070 141101E3 		movw	r1, #4372
 9428 0074 000000E3 		movw	r0, #:lower16:.LC8
 9429 0078 000040E3 		movt	r0, #:upper16:.LC8
 9430 007c FEFFFFEB 		bl	RME_Log
 9431              	.L594:
 9432              		.loc 1 4372 13 is_stmt 0
 9433 0080 FEFFFFEA 		b	.L594
 9434              	.L593:
4373:../../Source/Kernel/rme_kernel.c ****         }
4374:../../Source/Kernel/rme_kernel.c ****         else
4375:../../Source/Kernel/rme_kernel.c ****         {
4376:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4377:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4378:../../Source/Kernel/rme_kernel.c ****         }
4379:../../Source/Kernel/rme_kernel.c ****         
4380:../../Source/Kernel/rme_kernel.c ****         /* We must be running at this point to trigger a synchronous exception */
4381:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 9435              		.loc 1 4381 9 is_stmt 1
 9436 0084 0C301BE5 		ldr	r3, [fp, #-12]
 9437 0088 1C3093E5 		ldr	r3, [r3, #28]
 9438 008c 000053E3 		cmp	r3, #0
 9439 0090 0800000A 		beq	.L595
 9440              		.loc 1 4381 9 is_stmt 0 discriminator 1
 9441 0094 003000E3 		movw	r3, #:lower16:.LC6
 9442 0098 003040E3 		movt	r3, #:upper16:.LC6
 9443 009c 002000E3 		movw	r2, #:lower16:.LC7
 9444 00a0 002040E3 		movt	r2, #:upper16:.LC7
 9445 00a4 1D1101E3 		movw	r1, #4381
 9446 00a8 000000E3 		movw	r0, #:lower16:.LC8
 9447 00ac 000040E3 		movt	r0, #:upper16:.LC8
 9448 00b0 FEFFFFEB 		bl	RME_Log
 9449              	.L596:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 245


 9450              		.loc 1 4381 9
 9451 00b4 FEFFFFEA 		b	.L596
 9452              	.L595:
4382:../../Source/Kernel/rme_kernel.c ****         
4383:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue */
4384:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thd_Cur);
 9453              		.loc 1 4384 9 is_stmt 1
 9454 00b8 0C001BE5 		ldr	r0, [fp, #-12]
 9455 00bc FEFFFFEB 		bl	_RME_Run_Del
4385:../../Source/Kernel/rme_kernel.c ****         
4386:../../Source/Kernel/rme_kernel.c ****         /* Exception pending and notify parent */
4387:../../Source/Kernel/rme_kernel.c ****         Thd_Cur->Sched.State=RME_THD_EXCPEND;
 9456              		.loc 1 4387 29
 9457 00c0 0C301BE5 		ldr	r3, [fp, #-12]
 9458 00c4 0320A0E3 		mov	r2, #3
 9459 00c8 1C2083E5 		str	r2, [r3, #28]
4388:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Notif(Thd_Cur);
 9460              		.loc 1 4388 9
 9461 00cc 0C001BE5 		ldr	r0, [fp, #-12]
 9462 00d0 FEFFFFEB 		bl	_RME_Run_Notif
4389:../../Source/Kernel/rme_kernel.c ****         
4390:../../Source/Kernel/rme_kernel.c ****         /* All kernel send complete, now pick the highest priority thread to run */
4391:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 9463              		.loc 1 4391 9
 9464 00d4 08101BE5 		ldr	r1, [fp, #-8]
 9465 00d8 10001BE5 		ldr	r0, [fp, #-16]
 9466 00dc FEFFFFEB 		bl	_RME_Kern_High
 9467              	.L597:
4392:../../Source/Kernel/rme_kernel.c ****     }
4393:../../Source/Kernel/rme_kernel.c ****     else
4394:../../Source/Kernel/rme_kernel.c ****     {
4395:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4396:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4397:../../Source/Kernel/rme_kernel.c ****     }
4398:../../Source/Kernel/rme_kernel.c **** }
 9468              		.loc 1 4398 1
 9469 00e0 00F020E3 		nop
 9470 00e4 04D04BE2 		sub	sp, fp, #4
 9471              		.cfi_def_cfa 13, 8
 9472              		@ sp needed
 9473 00e8 0088BDE8 		pop	{fp, pc}
 9474              		.cfi_endproc
 9475              	.LFE43:
 9477              		.section	.text._RME_Run_Ins,"ax",%progbits
 9478              		.align	2
 9479              		.syntax unified
 9480              		.arm
 9482              	_RME_Run_Ins:
 9483              	.LFB44:
4399:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Fatal ***********************************************/
4400:../../Source/Kernel/rme_kernel.c **** 
4401:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Ins ******************************************************
4402:../../Source/Kernel/rme_kernel.c **** Description : Insert a thread into the runqueue. In this function we do not
4403:../../Source/Kernel/rme_kernel.c ****               check if the thread is on the current core, or is runnable,
4404:../../Source/Kernel/rme_kernel.c ****               because it should have been checked by someone else.
4405:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to insert.
4406:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The cpu to consult.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 246


4407:../../Source/Kernel/rme_kernel.c **** Output      : None.
4408:../../Source/Kernel/rme_kernel.c **** Return      : None.
4409:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4410:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Ins(struct RME_Thd_Struct* Thd)
4411:../../Source/Kernel/rme_kernel.c **** {
 9484              		.loc 1 4411 1
 9485              		.cfi_startproc
 9486              		@ args = 0, pretend = 0, frame = 16
 9487              		@ frame_needed = 1, uses_anonymous_args = 0
 9488 0000 00482DE9 		push	{fp, lr}
 9489              		.cfi_def_cfa_offset 8
 9490              		.cfi_offset 11, -8
 9491              		.cfi_offset 14, -4
 9492 0004 04B08DE2 		add	fp, sp, #4
 9493              		.cfi_def_cfa 11, 4
 9494 0008 10D04DE2 		sub	sp, sp, #16
 9495 000c 10000BE5 		str	r0, [fp, #-16]
4412:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4413:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4414:../../Source/Kernel/rme_kernel.c ****     
4415:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9496              		.loc 1 4415 9
 9497 0010 10301BE5 		ldr	r3, [fp, #-16]
 9498 0014 203093E5 		ldr	r3, [r3, #32]
 9499 0018 08300BE5 		str	r3, [fp, #-8]
4416:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9500              		.loc 1 4416 10
 9501 001c 10301BE5 		ldr	r3, [fp, #-16]
 9502 0020 143093E5 		ldr	r3, [r3, #20]
 9503 0024 0C300BE5 		str	r3, [fp, #-12]
4417:../../Source/Kernel/rme_kernel.c ****     
4418:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4419:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9504              		.loc 1 4419 5
 9505 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9506 002c 010073E3 		cmn	r3, #1
 9507 0030 0800001A 		bne	.L599
 9508              		.loc 1 4419 5 is_stmt 0 discriminator 1
 9509 0034 003000E3 		movw	r3, #:lower16:.LC6
 9510 0038 003040E3 		movt	r3, #:upper16:.LC6
 9511 003c 002000E3 		movw	r2, #:lower16:.LC7
 9512 0040 002040E3 		movt	r2, #:upper16:.LC7
 9513 0044 431101E3 		movw	r1, #4419
 9514 0048 000000E3 		movw	r0, #:lower16:.LC8
 9515 004c 000040E3 		movt	r0, #:upper16:.LC8
 9516 0050 FEFFFFEB 		bl	RME_Log
 9517              	.L600:
 9518              		.loc 1 4419 5
 9519 0054 FEFFFFEA 		b	.L600
 9520              	.L599:
4420:../../Source/Kernel/rme_kernel.c ****     
4421:../../Source/Kernel/rme_kernel.c ****     /* Insert this thread into the runqueue */
4422:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Thd->Sched.Run),
 9521              		.loc 1 4422 5 is_stmt 1
 9522 0058 10001BE5 		ldr	r0, [fp, #-16]
 9523 005c 0C201BE5 		ldr	r2, [fp, #-12]
 9524 0060 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 247


 9525 0064 023083E2 		add	r3, r3, #2
 9526 0068 8331A0E1 		lsl	r3, r3, #3
 9527 006c 033082E0 		add	r3, r2, r3
 9528 0070 081093E5 		ldr	r1, [r3, #8]
 9529 0074 08301BE5 		ldr	r3, [fp, #-8]
 9530 0078 023083E2 		add	r3, r3, #2
 9531 007c 8331A0E1 		lsl	r3, r3, #3
 9532 0080 0C201BE5 		ldr	r2, [fp, #-12]
 9533 0084 033082E0 		add	r3, r2, r3
 9534 0088 043083E2 		add	r3, r3, #4
 9535 008c 0320A0E1 		mov	r2, r3
 9536 0090 FEFFFFEB 		bl	_RME_List_Ins
4423:../../Source/Kernel/rme_kernel.c ****                   Local->Run.List[Prio].Prev,
4424:../../Source/Kernel/rme_kernel.c ****                   &(Local->Run.List[Prio]));
4425:../../Source/Kernel/rme_kernel.c ****     
4426:../../Source/Kernel/rme_kernel.c ****     /* Set the bit in the bitmap */
4427:../../Source/Kernel/rme_kernel.c ****     RME_BITMAP_SET(Local->Run.Bitmap,Prio);
 9537              		.loc 1 4427 5
 9538 0094 08301BE5 		ldr	r3, [fp, #-8]
 9539 0098 A322A0E1 		lsr	r2, r3, #5
 9540 009c 0C301BE5 		ldr	r3, [fp, #-12]
 9541 00a0 042082E2 		add	r2, r2, #4
 9542 00a4 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9543 00a8 08301BE5 		ldr	r3, [fp, #-8]
 9544 00ac 1F3003E2 		and	r3, r3, #31
 9545 00b0 0120A0E3 		mov	r2, #1
 9546 00b4 1233A0E1 		lsl	r3, r2, r3
 9547 00b8 08201BE5 		ldr	r2, [fp, #-8]
 9548 00bc A222A0E1 		lsr	r2, r2, #5
 9549 00c0 031081E1 		orr	r1, r1, r3
 9550 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 9551 00c8 042082E2 		add	r2, r2, #4
 9552 00cc 021183E7 		str	r1, [r3, r2, lsl #2]
4428:../../Source/Kernel/rme_kernel.c **** }
 9553              		.loc 1 4428 1
 9554 00d0 00F020E3 		nop
 9555 00d4 04D04BE2 		sub	sp, fp, #4
 9556              		.cfi_def_cfa 13, 8
 9557              		@ sp needed
 9558 00d8 0088BDE8 		pop	{fp, pc}
 9559              		.cfi_endproc
 9560              	.LFE44:
 9562              		.section	.text._RME_Run_Del,"ax",%progbits
 9563              		.align	2
 9564              		.syntax unified
 9565              		.arm
 9567              	_RME_Run_Del:
 9568              	.LFB45:
4429:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Ins *************************************************/
4430:../../Source/Kernel/rme_kernel.c **** 
4431:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Del ******************************************************
4432:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread from the runqueue.
4433:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to delete.
4434:../../Source/Kernel/rme_kernel.c **** Output      : None.
4435:../../Source/Kernel/rme_kernel.c **** Return      : None.
4436:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4437:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Del(struct RME_Thd_Struct* Thd)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 248


4438:../../Source/Kernel/rme_kernel.c **** {
 9569              		.loc 1 4438 1
 9570              		.cfi_startproc
 9571              		@ args = 0, pretend = 0, frame = 16
 9572              		@ frame_needed = 1, uses_anonymous_args = 0
 9573 0000 00482DE9 		push	{fp, lr}
 9574              		.cfi_def_cfa_offset 8
 9575              		.cfi_offset 11, -8
 9576              		.cfi_offset 14, -4
 9577 0004 04B08DE2 		add	fp, sp, #4
 9578              		.cfi_def_cfa 11, 4
 9579 0008 10D04DE2 		sub	sp, sp, #16
 9580 000c 10000BE5 		str	r0, [fp, #-16]
4439:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4440:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4441:../../Source/Kernel/rme_kernel.c ****     
4442:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9581              		.loc 1 4442 9
 9582 0010 10301BE5 		ldr	r3, [fp, #-16]
 9583 0014 203093E5 		ldr	r3, [r3, #32]
 9584 0018 08300BE5 		str	r3, [fp, #-8]
4443:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9585              		.loc 1 4443 10
 9586 001c 10301BE5 		ldr	r3, [fp, #-16]
 9587 0020 143093E5 		ldr	r3, [r3, #20]
 9588 0024 0C300BE5 		str	r3, [fp, #-12]
4444:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4445:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9589              		.loc 1 4445 5
 9590 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9591 002c 010073E3 		cmn	r3, #1
 9592 0030 0800001A 		bne	.L602
 9593              		.loc 1 4445 5 is_stmt 0 discriminator 1
 9594 0034 003000E3 		movw	r3, #:lower16:.LC6
 9595 0038 003040E3 		movt	r3, #:upper16:.LC6
 9596 003c 002000E3 		movw	r2, #:lower16:.LC7
 9597 0040 002040E3 		movt	r2, #:upper16:.LC7
 9598 0044 5D1101E3 		movw	r1, #4445
 9599 0048 000000E3 		movw	r0, #:lower16:.LC8
 9600 004c 000040E3 		movt	r0, #:upper16:.LC8
 9601 0050 FEFFFFEB 		bl	RME_Log
 9602              	.L603:
 9603              		.loc 1 4445 5
 9604 0054 FEFFFFEA 		b	.L603
 9605              	.L602:
4446:../../Source/Kernel/rme_kernel.c ****     
4447:../../Source/Kernel/rme_kernel.c ****     /* Delete this thread from the runqueue */
4448:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thd->Sched.Run.Prev,Thd->Sched.Run.Next);
 9606              		.loc 1 4448 5 is_stmt 1
 9607 0058 10301BE5 		ldr	r3, [fp, #-16]
 9608 005c 042093E5 		ldr	r2, [r3, #4]
 9609 0060 10301BE5 		ldr	r3, [fp, #-16]
 9610 0064 003093E5 		ldr	r3, [r3]
 9611 0068 0310A0E1 		mov	r1, r3
 9612 006c 0200A0E1 		mov	r0, r2
 9613 0070 FEFFFFEB 		bl	_RME_List_Del
4449:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 249


4450:../../Source/Kernel/rme_kernel.c ****     /* See if there are any thread on this priority level */
4451:../../Source/Kernel/rme_kernel.c ****     if(Local->Run.List[Prio].Next==&(Local->Run.List[Prio]))
 9614              		.loc 1 4451 29
 9615 0074 0C201BE5 		ldr	r2, [fp, #-12]
 9616 0078 08301BE5 		ldr	r3, [fp, #-8]
 9617 007c 023083E2 		add	r3, r3, #2
 9618 0080 8331A0E1 		lsl	r3, r3, #3
 9619 0084 033082E0 		add	r3, r2, r3
 9620 0088 042093E5 		ldr	r2, [r3, #4]
 9621              		.loc 1 4451 36
 9622 008c 08301BE5 		ldr	r3, [fp, #-8]
 9623 0090 023083E2 		add	r3, r3, #2
 9624 0094 8331A0E1 		lsl	r3, r3, #3
 9625 0098 0C101BE5 		ldr	r1, [fp, #-12]
 9626 009c 033081E0 		add	r3, r1, r3
 9627 00a0 043083E2 		add	r3, r3, #4
 9628              		.loc 1 4451 7
 9629 00a4 030052E1 		cmp	r2, r3
 9630 00a8 0F00001A 		bne	.L605
4452:../../Source/Kernel/rme_kernel.c ****     {
4453:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4454:../../Source/Kernel/rme_kernel.c **** 
4455:../../Source/Kernel/rme_kernel.c ****         /* Nothing running, clear the bit in the bitmap */
4456:../../Source/Kernel/rme_kernel.c ****         RME_BITMAP_CLR(Local->Run.Bitmap,Prio);
 9631              		.loc 1 4456 9
 9632 00ac 08301BE5 		ldr	r3, [fp, #-8]
 9633 00b0 A322A0E1 		lsr	r2, r3, #5
 9634 00b4 0C301BE5 		ldr	r3, [fp, #-12]
 9635 00b8 042082E2 		add	r2, r2, #4
 9636 00bc 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9637 00c0 08301BE5 		ldr	r3, [fp, #-8]
 9638 00c4 1F3003E2 		and	r3, r3, #31
 9639 00c8 0120A0E3 		mov	r2, #1
 9640 00cc 1233A0E1 		lsl	r3, r2, r3
 9641 00d0 0330E0E1 		mvn	r3, r3
 9642 00d4 08201BE5 		ldr	r2, [fp, #-8]
 9643 00d8 A222A0E1 		lsr	r2, r2, #5
 9644 00dc 031001E0 		and	r1, r1, r3
 9645 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 9646 00e4 042082E2 		add	r2, r2, #4
 9647 00e8 021183E7 		str	r1, [r3, r2, lsl #2]
 9648              	.L605:
4457:../../Source/Kernel/rme_kernel.c ****     }
4458:../../Source/Kernel/rme_kernel.c ****     else
4459:../../Source/Kernel/rme_kernel.c ****     {
4460:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4461:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4462:../../Source/Kernel/rme_kernel.c ****     }
4463:../../Source/Kernel/rme_kernel.c **** }
 9649              		.loc 1 4463 1
 9650 00ec 00F020E3 		nop
 9651 00f0 04D04BE2 		sub	sp, fp, #4
 9652              		.cfi_def_cfa 13, 8
 9653              		@ sp needed
 9654 00f4 0088BDE8 		pop	{fp, pc}
 9655              		.cfi_endproc
 9656              	.LFE45:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 250


 9658              		.section	.text._RME_Run_High,"ax",%progbits
 9659              		.align	2
 9660              		.syntax unified
 9661              		.arm
 9663              	_RME_Run_High:
 9664              	.LFB46:
4464:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Del *************************************************/
4465:../../Source/Kernel/rme_kernel.c **** 
4466:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_High *****************************************************
4467:../../Source/Kernel/rme_kernel.c **** Description : Find the thread with the highest priority on the core.
4468:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The CPU-local data structure.
4469:../../Source/Kernel/rme_kernel.c **** Output      : None.
4470:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Thd_Struct* - The thread returned.
4471:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4472:../../Source/Kernel/rme_kernel.c **** static struct RME_Thd_Struct* _RME_Run_High(struct RME_CPU_Local* Local)
4473:../../Source/Kernel/rme_kernel.c **** {
 9665              		.loc 1 4473 1
 9666              		.cfi_startproc
 9667              		@ args = 0, pretend = 0, frame = 16
 9668              		@ frame_needed = 1, uses_anonymous_args = 0
 9669 0000 00482DE9 		push	{fp, lr}
 9670              		.cfi_def_cfa_offset 8
 9671              		.cfi_offset 11, -8
 9672              		.cfi_offset 14, -4
 9673 0004 04B08DE2 		add	fp, sp, #4
 9674              		.cfi_def_cfa 11, 4
 9675 0008 10D04DE2 		sub	sp, sp, #16
 9676 000c 10000BE5 		str	r0, [fp, #-16]
4474:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
4475:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4476:../../Source/Kernel/rme_kernel.c ****     
4477:../../Source/Kernel/rme_kernel.c ****     /* We start looking for preemption priority levels from the highest */
4478:../../Source/Kernel/rme_kernel.c ****     for(Count=(rme_cnt_t)(RME_PRIO_WORD_NUM-1U);Count>=0;Count--)
 9677              		.loc 1 4478 14
 9678 0010 0030A0E3 		mov	r3, #0
 9679 0014 08300BE5 		str	r3, [fp, #-8]
 9680              		.loc 1 4478 5
 9681 0018 080000EA 		b	.L607
 9682              	.L610:
4479:../../Source/Kernel/rme_kernel.c ****     {
4480:../../Source/Kernel/rme_kernel.c ****         if(Local->Run.Bitmap[Count]!=0U)
 9683              		.loc 1 4480 29
 9684 001c 10301BE5 		ldr	r3, [fp, #-16]
 9685 0020 08201BE5 		ldr	r2, [fp, #-8]
 9686 0024 042082E2 		add	r2, r2, #4
 9687 0028 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9688              		.loc 1 4480 11
 9689 002c 000053E3 		cmp	r3, #0
 9690 0030 0600001A 		bne	.L614
4478:../../Source/Kernel/rme_kernel.c ****     {
 9691              		.loc 1 4478 63 discriminator 2
 9692 0034 08301BE5 		ldr	r3, [fp, #-8]
 9693 0038 013043E2 		sub	r3, r3, #1
 9694 003c 08300BE5 		str	r3, [fp, #-8]
 9695              	.L607:
4478:../../Source/Kernel/rme_kernel.c ****     {
 9696              		.loc 1 4478 54 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 251


 9697 0040 08301BE5 		ldr	r3, [fp, #-8]
 9698 0044 000053E3 		cmp	r3, #0
 9699 0048 F3FFFFAA 		bge	.L610
 9700 004c 000000EA 		b	.L609
 9701              	.L614:
4481:../../Source/Kernel/rme_kernel.c ****         {
4482:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4483:../../Source/Kernel/rme_kernel.c ****             
4484:../../Source/Kernel/rme_kernel.c ****             break;
 9702              		.loc 1 4484 13
 9703 0050 00F020E3 		nop
 9704              	.L609:
4485:../../Source/Kernel/rme_kernel.c ****         }
4486:../../Source/Kernel/rme_kernel.c ****         else
4487:../../Source/Kernel/rme_kernel.c ****         {
4488:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4489:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4490:../../Source/Kernel/rme_kernel.c ****         }
4491:../../Source/Kernel/rme_kernel.c ****     }
4492:../../Source/Kernel/rme_kernel.c ****     
4493:../../Source/Kernel/rme_kernel.c ****     /* It must be possible to find one thread per core */
4494:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Count>=0);
 9705              		.loc 1 4494 5
 9706 0054 08301BE5 		ldr	r3, [fp, #-8]
 9707 0058 000053E3 		cmp	r3, #0
 9708 005c 080000AA 		bge	.L611
 9709              		.loc 1 4494 5 is_stmt 0 discriminator 1
 9710 0060 003000E3 		movw	r3, #:lower16:.LC6
 9711 0064 003040E3 		movt	r3, #:upper16:.LC6
 9712 0068 002000E3 		movw	r2, #:lower16:.LC7
 9713 006c 002040E3 		movt	r2, #:upper16:.LC7
 9714 0070 8E1101E3 		movw	r1, #4494
 9715 0074 000000E3 		movw	r0, #:lower16:.LC8
 9716 0078 000040E3 		movt	r0, #:upper16:.LC8
 9717 007c FEFFFFEB 		bl	RME_Log
 9718              	.L612:
 9719              		.loc 1 4494 5
 9720 0080 FEFFFFEA 		b	.L612
 9721              	.L611:
4495:../../Source/Kernel/rme_kernel.c **** 
4496:../../Source/Kernel/rme_kernel.c ****     /* Get the first "1"'s position in the word */
4497:../../Source/Kernel/rme_kernel.c ****     Prio=RME_MSB_GET(Local->Run.Bitmap[Count]);
 9722              		.loc 1 4497 10 is_stmt 1
 9723 0084 10301BE5 		ldr	r3, [fp, #-16]
 9724 0088 08201BE5 		ldr	r2, [fp, #-8]
 9725 008c 042082E2 		add	r2, r2, #4
 9726 0090 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9727 0094 0300A0E1 		mov	r0, r3
 9728 0098 FEFFFFEB 		bl	__RME_A7A_MSB_Get
 9729 009c 0C000BE5 		str	r0, [fp, #-12]
4498:../../Source/Kernel/rme_kernel.c ****     Prio+=((rme_ptr_t)Count)<<RME_WORD_ORDER;
 9730              		.loc 1 4498 29
 9731 00a0 08301BE5 		ldr	r3, [fp, #-8]
 9732 00a4 8332A0E1 		lsl	r3, r3, #5
 9733              		.loc 1 4498 9
 9734 00a8 0C201BE5 		ldr	r2, [fp, #-12]
 9735 00ac 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 252


 9736 00b0 0C300BE5 		str	r3, [fp, #-12]
4499:../../Source/Kernel/rme_kernel.c **** 
4500:../../Source/Kernel/rme_kernel.c ****     /* Now there is something at this priority level. Get it and start to run */
4501:../../Source/Kernel/rme_kernel.c ****     return (struct RME_Thd_Struct*)(Local->Run.List[Prio].Next);
 9737              		.loc 1 4501 12
 9738 00b4 10201BE5 		ldr	r2, [fp, #-16]
 9739 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 9740 00bc 023083E2 		add	r3, r3, #2
 9741 00c0 8331A0E1 		lsl	r3, r3, #3
 9742 00c4 033082E0 		add	r3, r2, r3
 9743 00c8 043093E5 		ldr	r3, [r3, #4]
4502:../../Source/Kernel/rme_kernel.c **** }
 9744              		.loc 1 4502 1
 9745 00cc 0300A0E1 		mov	r0, r3
 9746 00d0 04D04BE2 		sub	sp, fp, #4
 9747              		.cfi_def_cfa 13, 8
 9748              		@ sp needed
 9749 00d4 0088BDE8 		pop	{fp, pc}
 9750              		.cfi_endproc
 9751              	.LFE46:
 9753              		.section	.text._RME_Run_Notif,"ax",%progbits
 9754              		.align	2
 9755              		.syntax unified
 9756              		.arm
 9758              	_RME_Run_Notif:
 9759              	.LFB47:
4503:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_High ************************************************/
4504:../../Source/Kernel/rme_kernel.c **** 
4505:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Notif ****************************************************
4506:../../Source/Kernel/rme_kernel.c **** Description : Send a notification to the thread's parent, to notify that this 
4507:../../Source/Kernel/rme_kernel.c ****               thread is currently out of time, or have a fault.
4508:../../Source/Kernel/rme_kernel.c ****               This function includes kernel send, so we need to call 
4509:../../Source/Kernel/rme_kernel.c ****               _RME_Kern_High after this. The only exception being the
4510:../../Source/Kernel/rme_kernel.c ****               _RME_Thd_Swt system call, which we use a more optimized routine.
4511:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to send notification for.
4512:../../Source/Kernel/rme_kernel.c **** Output      : None.
4513:../../Source/Kernel/rme_kernel.c **** Return      : None.
4514:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4515:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Notif(struct RME_Thd_Struct* Thd)
4516:../../Source/Kernel/rme_kernel.c **** {
 9760              		.loc 1 4516 1
 9761              		.cfi_startproc
 9762              		@ args = 0, pretend = 0, frame = 16
 9763              		@ frame_needed = 1, uses_anonymous_args = 0
 9764 0000 00482DE9 		push	{fp, lr}
 9765              		.cfi_def_cfa_offset 8
 9766              		.cfi_offset 11, -8
 9767              		.cfi_offset 14, -4
 9768 0004 04B08DE2 		add	fp, sp, #4
 9769              		.cfi_def_cfa 11, 4
 9770 0008 10D04DE2 		sub	sp, sp, #16
 9771 000c 10000BE5 		str	r0, [fp, #-16]
4517:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Sched_Thd;
4518:../../Source/Kernel/rme_kernel.c ****     
4519:../../Source/Kernel/rme_kernel.c ****     Sched_Thd=Thd->Sched.Sched_Thd;
 9772              		.loc 1 4519 14
 9773 0010 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 253


 9774 0014 343093E5 		ldr	r3, [r3, #52]
 9775 0018 08300BE5 		str	r3, [fp, #-8]
4520:../../Source/Kernel/rme_kernel.c ****     
4521:../../Source/Kernel/rme_kernel.c ****     /* See if there is already a notification. If yes, do not do the send again */
4522:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Notif.Next==&(Thd->Sched.Notif))
 9776              		.loc 1 4522 24
 9777 001c 10301BE5 		ldr	r3, [fp, #-16]
 9778 0020 082093E5 		ldr	r2, [r3, #8]
 9779              		.loc 1 4522 31
 9780 0024 10301BE5 		ldr	r3, [fp, #-16]
 9781 0028 083083E2 		add	r3, r3, #8
 9782              		.loc 1 4522 7
 9783 002c 030052E1 		cmp	r2, r3
 9784 0030 0700001A 		bne	.L616
4523:../../Source/Kernel/rme_kernel.c ****     {
4524:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4525:../../Source/Kernel/rme_kernel.c **** 
4526:../../Source/Kernel/rme_kernel.c ****         _RME_List_Ins(&(Thd->Sched.Notif), 
 9785              		.loc 1 4526 9
 9786 0034 10301BE5 		ldr	r3, [fp, #-16]
 9787 0038 080083E2 		add	r0, r3, #8
 9788 003c 08301BE5 		ldr	r3, [fp, #-8]
 9789 0040 401093E5 		ldr	r1, [r3, #64]
 9790 0044 08301BE5 		ldr	r3, [fp, #-8]
 9791 0048 3C3083E2 		add	r3, r3, #60
 9792 004c 0320A0E1 		mov	r2, r3
 9793 0050 FEFFFFEB 		bl	_RME_List_Ins
 9794              	.L616:
4527:../../Source/Kernel/rme_kernel.c ****                       Sched_Thd->Sched.Event.Prev,&(Sched_Thd->Sched.Event));
4528:../../Source/Kernel/rme_kernel.c ****     }
4529:../../Source/Kernel/rme_kernel.c ****     else
4530:../../Source/Kernel/rme_kernel.c ****     {
4531:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4532:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4533:../../Source/Kernel/rme_kernel.c ****     }
4534:../../Source/Kernel/rme_kernel.c **** 
4535:../../Source/Kernel/rme_kernel.c ****     /* If this guy have an endpoint, send to it */
4536:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Sched_Sig!=0U)
 9795              		.loc 1 4536 18
 9796 0054 10301BE5 		ldr	r3, [fp, #-16]
 9797 0058 383093E5 		ldr	r3, [r3, #56]
 9798              		.loc 1 4536 7
 9799 005c 000053E3 		cmp	r3, #0
 9800 0060 0300000A 		beq	.L618
4537:../../Source/Kernel/rme_kernel.c ****     {
4538:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4539:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_Snd(Thd->Sched.Sched_Sig);
 9801              		.loc 1 4539 9
 9802 0064 10301BE5 		ldr	r3, [fp, #-16]
 9803 0068 383093E5 		ldr	r3, [r3, #56]
 9804 006c 0300A0E1 		mov	r0, r3
 9805 0070 FEFFFFEB 		bl	_RME_Kern_Snd
 9806              	.L618:
4540:../../Source/Kernel/rme_kernel.c ****     }
4541:../../Source/Kernel/rme_kernel.c ****     else
4542:../../Source/Kernel/rme_kernel.c ****     {
4543:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 254


4544:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4545:../../Source/Kernel/rme_kernel.c ****     }
4546:../../Source/Kernel/rme_kernel.c **** }
 9807              		.loc 1 4546 1
 9808 0074 00F020E3 		nop
 9809 0078 04D04BE2 		sub	sp, fp, #4
 9810              		.cfi_def_cfa 13, 8
 9811              		@ sp needed
 9812 007c 0088BDE8 		pop	{fp, pc}
 9813              		.cfi_endproc
 9814              	.LFE47:
 9816              		.section	.text._RME_Thd_Pgt,"ax",%progbits
 9817              		.align	2
 9818              		.global	_RME_Thd_Pgt
 9819              		.syntax unified
 9820              		.arm
 9822              	_RME_Thd_Pgt:
 9823              	.LFB48:
4547:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Notif ***********************************************/
4548:../../Source/Kernel/rme_kernel.c **** 
4549:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Pgt ******************************************************
4550:../../Source/Kernel/rme_kernel.c **** Description : Get a thread's page table. 
4551:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread.
4552:../../Source/Kernel/rme_kernel.c **** Output      : None.
4553:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Cap_Pgt* / rme_ptr_t - The page table.
4554:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4555:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4556:../../Source/Kernel/rme_kernel.c **** struct RME_Cap_Pgt* _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4557:../../Source/Kernel/rme_kernel.c **** #else
4558:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4559:../../Source/Kernel/rme_kernel.c **** #endif
4560:../../Source/Kernel/rme_kernel.c **** {
 9824              		.loc 1 4560 1
 9825              		.cfi_startproc
 9826              		@ args = 0, pretend = 0, frame = 16
 9827              		@ frame_needed = 1, uses_anonymous_args = 0
 9828              		@ link register save eliminated.
 9829 0000 04B02DE5 		str	fp, [sp, #-4]!
 9830              		.cfi_def_cfa_offset 4
 9831              		.cfi_offset 11, -4
 9832 0004 00B08DE2 		add	fp, sp, #0
 9833              		.cfi_def_cfa_register 11
 9834 0008 14D04DE2 		sub	sp, sp, #20
 9835 000c 10000BE5 		str	r0, [fp, #-16]
4561:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
4562:../../Source/Kernel/rme_kernel.c ****     
4563:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd);
 9836              		.loc 1 4563 13
 9837 0010 10301BE5 		ldr	r3, [fp, #-16]
 9838 0014 4C2093E5 		ldr	r2, [r3, #76]
 9839 0018 10301BE5 		ldr	r3, [fp, #-16]
 9840 001c 4C3083E2 		add	r3, r3, #76
 9841 0020 030052E1 		cmp	r2, r3
 9842 0024 0200000A 		beq	.L620
 9843              		.loc 1 4563 13 is_stmt 0 discriminator 1
 9844 0028 10301BE5 		ldr	r3, [fp, #-16]
 9845 002c 4C3093E5 		ldr	r3, [r3, #76]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 255


 9846 0030 000000EA 		b	.L621
 9847              	.L620:
 9848              		.loc 1 4563 13 discriminator 2
 9849 0034 0030A0E3 		mov	r3, #0
 9850              	.L621:
 9851              		.loc 1 4563 12 is_stmt 1 discriminator 4
 9852 0038 08300BE5 		str	r3, [fp, #-8]
4564:../../Source/Kernel/rme_kernel.c ****     
4565:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 9853              		.loc 1 4565 7
 9854 003c 08301BE5 		ldr	r3, [fp, #-8]
 9855 0040 000053E3 		cmp	r3, #0
 9856 0044 0300001A 		bne	.L622
4566:../../Source/Kernel/rme_kernel.c ****     {
4567:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4568:../../Source/Kernel/rme_kernel.c **** 
4569:../../Source/Kernel/rme_kernel.c ****         return Thd->Sched.Prc->Pgt;
 9857              		.loc 1 4569 26
 9858 0048 10301BE5 		ldr	r3, [fp, #-16]
 9859 004c 2C3093E5 		ldr	r3, [r3, #44]
 9860              		.loc 1 4569 30
 9861 0050 183093E5 		ldr	r3, [r3, #24]
 9862 0054 020000EA 		b	.L623
 9863              	.L622:
4570:../../Source/Kernel/rme_kernel.c ****     }
4571:../../Source/Kernel/rme_kernel.c ****     else
4572:../../Source/Kernel/rme_kernel.c ****     {
4573:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4574:../../Source/Kernel/rme_kernel.c **** 
4575:../../Source/Kernel/rme_kernel.c ****         return Inv_Top->Prc->Pgt;
 9864              		.loc 1 4575 23
 9865 0058 08301BE5 		ldr	r3, [fp, #-8]
 9866 005c 083093E5 		ldr	r3, [r3, #8]
 9867              		.loc 1 4575 28
 9868 0060 183093E5 		ldr	r3, [r3, #24]
 9869              	.L623:
4576:../../Source/Kernel/rme_kernel.c ****     }
4577:../../Source/Kernel/rme_kernel.c **** }
 9870              		.loc 1 4577 1
 9871 0064 0300A0E1 		mov	r0, r3
 9872 0068 00D08BE2 		add	sp, fp, #0
 9873              		.cfi_def_cfa_register 13
 9874              		@ sp needed
 9875 006c 04B09DE4 		ldr	fp, [sp], #4
 9876              		.cfi_restore 11
 9877              		.cfi_def_cfa_offset 0
 9878 0070 1EFF2FE1 		bx	lr
 9879              		.cfi_endproc
 9880              	.LFE48:
 9882              		.section	.text._RME_Run_Swt,"ax",%progbits
 9883              		.align	2
 9884              		.syntax unified
 9885              		.arm
 9887              	_RME_Run_Swt:
 9888              	.LFB49:
4578:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Pgt *************************************************/
4579:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 256


4580:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Swt ******************************************************
4581:../../Source/Kernel/rme_kernel.c **** Description : Switch the register set and page table to another thread. 
4582:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4583:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_Cur - The current thread.
4584:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_New - The next thread.
4585:../../Source/Kernel/rme_kernel.c **** Output      : None.
4586:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
4587:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4588:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Run_Swt(struct RME_Reg_Struct* Reg,
4589:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_Cur, 
4590:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_New)
4591:../../Source/Kernel/rme_kernel.c **** {
 9889              		.loc 1 4591 1
 9890              		.cfi_startproc
 9891              		@ args = 0, pretend = 0, frame = 32
 9892              		@ frame_needed = 1, uses_anonymous_args = 0
 9893 0000 00482DE9 		push	{fp, lr}
 9894              		.cfi_def_cfa_offset 8
 9895              		.cfi_offset 11, -8
 9896              		.cfi_offset 14, -4
 9897 0004 04B08DE2 		add	fp, sp, #4
 9898              		.cfi_def_cfa 11, 4
 9899 0008 20D04DE2 		sub	sp, sp, #32
 9900 000c 18000BE5 		str	r0, [fp, #-24]
 9901 0010 1C100BE5 		str	r1, [fp, #-28]
 9902 0014 20200BE5 		str	r2, [fp, #-32]
4592:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4593:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Cur;
4594:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4595:../../Source/Kernel/rme_kernel.c **** #else
4596:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Cur;
4597:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_New;
4598:../../Source/Kernel/rme_kernel.c **** #endif
4599:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_Cur;
4600:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_New;
4601:../../Source/Kernel/rme_kernel.c ****     
4602:../../Source/Kernel/rme_kernel.c ****     Reg_Cur=&(Thd_Cur->Ctx.Reg->Reg);
 9903              		.loc 1 4602 27
 9904 0018 1C301BE5 		ldr	r3, [fp, #-28]
 9905 001c 483093E5 		ldr	r3, [r3, #72]
 9906              		.loc 1 4602 12
 9907 0020 08300BE5 		str	r3, [fp, #-8]
4603:../../Source/Kernel/rme_kernel.c ****     Reg_New=&(Thd_New->Ctx.Reg->Reg);
 9908              		.loc 1 4603 27
 9909 0024 20301BE5 		ldr	r3, [fp, #-32]
 9910 0028 483093E5 		ldr	r3, [r3, #72]
 9911              		.loc 1 4603 12
 9912 002c 0C300BE5 		str	r3, [fp, #-12]
4604:../../Source/Kernel/rme_kernel.c ****     
4605:../../Source/Kernel/rme_kernel.c ****     /* Save register context */
4606:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg_Cur,Reg);
 9913              		.loc 1 4606 5
 9914 0030 18101BE5 		ldr	r1, [fp, #-24]
 9915 0034 08001BE5 		ldr	r0, [fp, #-8]
 9916 0038 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4607:../../Source/Kernel/rme_kernel.c ****     
4608:../../Source/Kernel/rme_kernel.c ****     /* If coprocessor is enabled, handle coprocessor context as well */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 257


4609:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
4610:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Cop_Swap(RME_THD_ATTR(Thd_New->Ctx.Hyp_Attr),
4611:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_New->Ctx.Hyp_Attr),
4612:../../Source/Kernel/rme_kernel.c ****                        Reg_New,Thd_New->Ctx.Reg->Cop,
4613:../../Source/Kernel/rme_kernel.c ****                        RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
4614:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_Cur->Ctx.Hyp_Attr),
4615:../../Source/Kernel/rme_kernel.c ****                        Reg_Cur,Thd_Cur->Ctx.Reg->Cop);
4616:../../Source/Kernel/rme_kernel.c **** #endif
4617:../../Source/Kernel/rme_kernel.c **** 
4618:../../Source/Kernel/rme_kernel.c ****     /* Load register context */
4619:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg,Reg_New);
 9917              		.loc 1 4619 5
 9918 003c 0C101BE5 		ldr	r1, [fp, #-12]
 9919 0040 18001BE5 		ldr	r0, [fp, #-24]
 9920 0044 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4620:../../Source/Kernel/rme_kernel.c **** 
4621:../../Source/Kernel/rme_kernel.c ****     /* Are we going to switch page tables? If yes, we change it now */
4622:../../Source/Kernel/rme_kernel.c ****     Pgt_Cur=_RME_Thd_Pgt(Thd_Cur);
 9921              		.loc 1 4622 13
 9922 0048 1C001BE5 		ldr	r0, [fp, #-28]
 9923 004c FEFFFFEB 		bl	_RME_Thd_Pgt
 9924 0050 10000BE5 		str	r0, [fp, #-16]
4623:../../Source/Kernel/rme_kernel.c ****     Pgt_New=_RME_Thd_Pgt(Thd_New);
 9925              		.loc 1 4623 13
 9926 0054 20001BE5 		ldr	r0, [fp, #-32]
 9927 0058 FEFFFFEB 		bl	_RME_Thd_Pgt
 9928 005c 14000BE5 		str	r0, [fp, #-20]
4624:../../Source/Kernel/rme_kernel.c ****     
4625:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4626:../../Source/Kernel/rme_kernel.c ****     /* The page tables here must be root cap */
4627:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_Cur)!=0U);
 9929              		.loc 1 4627 5
 9930 0060 10301BE5 		ldr	r3, [fp, #-16]
 9931 0064 003093E5 		ldr	r3, [r3]
 9932 0068 7330FFE6 		uxth	r3, r3
 9933 006c 000053E3 		cmp	r3, #0
 9934 0070 0800000A 		beq	.L625
 9935              		.loc 1 4627 5 is_stmt 0 discriminator 1
 9936 0074 003000E3 		movw	r3, #:lower16:.LC6
 9937 0078 003040E3 		movt	r3, #:upper16:.LC6
 9938 007c 002000E3 		movw	r2, #:lower16:.LC7
 9939 0080 002040E3 		movt	r2, #:upper16:.LC7
 9940 0084 131201E3 		movw	r1, #4627
 9941 0088 000000E3 		movw	r0, #:lower16:.LC8
 9942 008c 000040E3 		movt	r0, #:upper16:.LC8
 9943 0090 FEFFFFEB 		bl	RME_Log
 9944              	.L626:
 9945              		.loc 1 4627 5
 9946 0094 FEFFFFEA 		b	.L626
 9947              	.L625:
4628:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_New)!=0U);
 9948              		.loc 1 4628 5 is_stmt 1
 9949 0098 14301BE5 		ldr	r3, [fp, #-20]
 9950 009c 003093E5 		ldr	r3, [r3]
 9951 00a0 7330FFE6 		uxth	r3, r3
 9952 00a4 000053E3 		cmp	r3, #0
 9953 00a8 0800000A 		beq	.L627
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 258


 9954              		.loc 1 4628 5 is_stmt 0 discriminator 1
 9955 00ac 003000E3 		movw	r3, #:lower16:.LC6
 9956 00b0 003040E3 		movt	r3, #:upper16:.LC6
 9957 00b4 002000E3 		movw	r2, #:lower16:.LC7
 9958 00b8 002040E3 		movt	r2, #:upper16:.LC7
 9959 00bc 141201E3 		movw	r1, #4628
 9960 00c0 000000E3 		movw	r0, #:lower16:.LC8
 9961 00c4 000040E3 		movt	r0, #:upper16:.LC8
 9962 00c8 FEFFFFEB 		bl	RME_Log
 9963              	.L628:
 9964              		.loc 1 4628 5
 9965 00cc FEFFFFEA 		b	.L628
 9966              	.L627:
4629:../../Source/Kernel/rme_kernel.c **** #endif
4630:../../Source/Kernel/rme_kernel.c ****     
4631:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4632:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_GETOBJ(Pgt_Cur,rme_ptr_t)!=RME_CAP_GETOBJ(Pgt_New,rme_ptr_t))
 9967              		.loc 1 4632 8 is_stmt 1
 9968 00d0 10301BE5 		ldr	r3, [fp, #-16]
 9969 00d4 0C2093E5 		ldr	r2, [r3, #12]
 9970              		.loc 1 4632 43
 9971 00d8 14301BE5 		ldr	r3, [fp, #-20]
 9972 00dc 0C3093E5 		ldr	r3, [r3, #12]
 9973              		.loc 1 4632 7
 9974 00e0 030052E1 		cmp	r2, r3
 9975 00e4 0100000A 		beq	.L629
4633:../../Source/Kernel/rme_kernel.c **** #else
4634:../../Source/Kernel/rme_kernel.c ****     if(Pgt_Cur!=Pgt_New)
4635:../../Source/Kernel/rme_kernel.c **** #endif
4636:../../Source/Kernel/rme_kernel.c ****     {
4637:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4638:../../Source/Kernel/rme_kernel.c ****         
4639:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Pgt_New);
 9976              		.loc 1 4639 9
 9977 00e8 14001BE5 		ldr	r0, [fp, #-20]
 9978 00ec FEFFFFEB 		bl	__RME_Pgt_Set
 9979              	.L629:
4640:../../Source/Kernel/rme_kernel.c ****     }
4641:../../Source/Kernel/rme_kernel.c ****     else
4642:../../Source/Kernel/rme_kernel.c ****     {
4643:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4644:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4645:../../Source/Kernel/rme_kernel.c ****     }
4646:../../Source/Kernel/rme_kernel.c **** 
4647:../../Source/Kernel/rme_kernel.c ****     return 0;
 9980              		.loc 1 4647 12
 9981 00f0 0030A0E3 		mov	r3, #0
4648:../../Source/Kernel/rme_kernel.c **** }
 9982              		.loc 1 4648 1
 9983 00f4 0300A0E1 		mov	r0, r3
 9984 00f8 04D04BE2 		sub	sp, fp, #4
 9985              		.cfi_def_cfa 13, 8
 9986              		@ sp needed
 9987 00fc 0088BDE8 		pop	{fp, pc}
 9988              		.cfi_endproc
 9989              	.LFE49:
 9991              		.section	.text._RME_Prc_Boot_Crt,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 259


 9992              		.align	2
 9993              		.global	_RME_Prc_Boot_Crt
 9994              		.syntax unified
 9995              		.arm
 9997              	_RME_Prc_Boot_Crt:
 9998              	.LFB50:
4649:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Swt *************************************************/
4650:../../Source/Kernel/rme_kernel.c **** 
4651:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Boot_Crt *************************************************
4652:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4653:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4654:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and is
4655:../../Source/Kernel/rme_kernel.c ****               only used to create the first process at boot-time.
4656:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4657:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4658:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4659:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4660:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4661:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4662:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4663:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4664:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4665:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4666:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4667:../../Source/Kernel/rme_kernel.c ****                                   this process.
4668:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4669:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4670:../../Source/Kernel/rme_kernel.c ****                                   address.
4671:../../Source/Kernel/rme_kernel.c **** Output      : None.
4672:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4673:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4674:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4675:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4676:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4677:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4678:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4679:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt)
4680:../../Source/Kernel/rme_kernel.c **** #else
4681:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4682:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4683:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4684:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4685:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Raw_Pgt)
4686:../../Source/Kernel/rme_kernel.c **** #endif
4687:../../Source/Kernel/rme_kernel.c **** {
 9999              		.loc 1 4687 1
 10000              		.cfi_startproc
 10001              		@ args = 4, pretend = 0, frame = 48
 10002              		@ frame_needed = 1, uses_anonymous_args = 0
 10003 0000 00482DE9 		push	{fp, lr}
 10004              		.cfi_def_cfa_offset 8
 10005              		.cfi_offset 11, -8
 10006              		.cfi_offset 14, -4
 10007 0004 04B08DE2 		add	fp, sp, #4
 10008              		.cfi_def_cfa 11, 4
 10009 0008 30D04DE2 		sub	sp, sp, #48
 10010 000c 28000BE5 		str	r0, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 260


 10011 0010 2C100BE5 		str	r1, [fp, #-44]
 10012 0014 30200BE5 		str	r2, [fp, #-48]
 10013 0018 34300BE5 		str	r3, [fp, #-52]
4688:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4689:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4690:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4691:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4692:../../Source/Kernel/rme_kernel.c **** #endif
4693:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4694:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4695:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4696:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4697:../../Source/Kernel/rme_kernel.c **** #endif
4698:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4699:../../Source/Kernel/rme_kernel.c ****     
4700:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4701:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10014              		.loc 1 4701 5
 10015 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10016 0020 803003E2 		and	r3, r3, #128
 10017 0024 000053E3 		cmp	r3, #0
 10018 0028 1C00001A 		bne	.L632
 10019              		.loc 1 4701 5 is_stmt 0 discriminator 1
 10020 002c 28301BE5 		ldr	r3, [fp, #-40]
 10021 0030 142093E5 		ldr	r2, [r3, #20]
 10022 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10023 0038 030052E1 		cmp	r2, r3
 10024 003c 0100008A 		bhi	.L633
 10025              		.loc 1 4701 5 discriminator 3
 10026 0040 0230E0E3 		mvn	r3, #2
 10027              		.loc 1 4701 5
 10028 0044 740100EA 		b	.L634
 10029              	.L633:
 10030              		.loc 1 4701 5 discriminator 4
 10031 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10032 004c 8322A0E1 		lsl	r2, r3, #5
 10033 0050 28301BE5 		ldr	r3, [fp, #-40]
 10034 0054 0C3093E5 		ldr	r3, [r3, #12]
 10035 0058 033082E0 		add	r3, r2, r3
 10036 005c 08300BE5 		str	r3, [fp, #-8]
 10037 0060 08301BE5 		ldr	r3, [fp, #-8]
 10038 0064 0300A0E1 		mov	r0, r3
 10039 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10040 006c 14000BE5 		str	r0, [fp, #-20]
 10041              		.loc 1 4701 5 discriminator 1
 10042 0070 14301BE5 		ldr	r3, [fp, #-20]
 10043 0074 FF3803E2 		and	r3, r3, #16711680
 10044 0078 020853E3 		cmp	r3, #131072
 10045 007c 0100001A 		bne	.L635
 10046              		.loc 1 4701 5 discriminator 5
 10047 0080 0830E0E3 		mvn	r3, #8
 10048              		.loc 1 4701 5
 10049 0084 640100EA 		b	.L634
 10050              	.L635:
 10051              		.loc 1 4701 5 discriminator 6
 10052 0088 14301BE5 		ldr	r3, [fp, #-20]
 10053 008c 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 261


 10054 0090 030053E3 		cmp	r3, #3
 10055 0094 3F00000A 		beq	.L636
 10056              		.loc 1 4701 5 discriminator 7
 10057 0098 0130E0E3 		mvn	r3, #1
 10058              		.loc 1 4701 5
 10059 009c 5E0100EA 		b	.L634
 10060              	.L632:
 10061              		.loc 1 4701 5 discriminator 2
 10062 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 10063 00a4 2324A0E1 		lsr	r2, r3, #8
 10064 00a8 28301BE5 		ldr	r3, [fp, #-40]
 10065 00ac 143093E5 		ldr	r3, [r3, #20]
 10066 00b0 030052E1 		cmp	r2, r3
 10067 00b4 0100003A 		bcc	.L637
 10068              		.loc 1 4701 5 discriminator 8
 10069 00b8 0230E0E3 		mvn	r3, #2
 10070              		.loc 1 4701 5
 10071 00bc 560100EA 		b	.L634
 10072              	.L637:
 10073              		.loc 1 4701 5 discriminator 9
 10074 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10075 00c4 2334A0E1 		lsr	r3, r3, #8
 10076 00c8 8322A0E1 		lsl	r2, r3, #5
 10077 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10078 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10079 00d4 033082E0 		add	r3, r2, r3
 10080 00d8 08300BE5 		str	r3, [fp, #-8]
 10081 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10082 00e0 0300A0E1 		mov	r0, r3
 10083 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10084 00e8 14000BE5 		str	r0, [fp, #-20]
 10085              		.loc 1 4701 5 discriminator 1
 10086 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10087 00f0 FF3803E2 		and	r3, r3, #16711680
 10088 00f4 020853E3 		cmp	r3, #131072
 10089 00f8 0100001A 		bne	.L638
 10090              		.loc 1 4701 5 discriminator 10
 10091 00fc 0830E0E3 		mvn	r3, #8
 10092              		.loc 1 4701 5
 10093 0100 450100EA 		b	.L634
 10094              	.L638:
 10095              		.loc 1 4701 5 discriminator 11
 10096 0104 14301BE5 		ldr	r3, [fp, #-20]
 10097 0108 233CA0E1 		lsr	r3, r3, #24
 10098 010c 030053E3 		cmp	r3, #3
 10099 0110 0100000A 		beq	.L639
 10100              		.loc 1 4701 5 discriminator 12
 10101 0114 0130E0E3 		mvn	r3, #1
 10102              		.loc 1 4701 5
 10103 0118 3F0100EA 		b	.L634
 10104              	.L639:
 10105              		.loc 1 4701 5 discriminator 13
 10106 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10107 0120 7F2003E2 		and	r2, r3, #127
 10108 0124 08301BE5 		ldr	r3, [fp, #-8]
 10109 0128 143093E5 		ldr	r3, [r3, #20]
 10110 012c 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 262


 10111 0130 0100003A 		bcc	.L640
 10112              		.loc 1 4701 5 discriminator 14
 10113 0134 0230E0E3 		mvn	r3, #2
 10114              		.loc 1 4701 5
 10115 0138 370100EA 		b	.L634
 10116              	.L640:
 10117              		.loc 1 4701 5 discriminator 15
 10118 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10119 0140 7F3003E2 		and	r3, r3, #127
 10120 0144 8322A0E1 		lsl	r2, r3, #5
 10121 0148 08301BE5 		ldr	r3, [fp, #-8]
 10122 014c 0C3093E5 		ldr	r3, [r3, #12]
 10123 0150 033082E0 		add	r3, r2, r3
 10124 0154 08300BE5 		str	r3, [fp, #-8]
 10125 0158 08301BE5 		ldr	r3, [fp, #-8]
 10126 015c 0300A0E1 		mov	r0, r3
 10127 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10128 0164 14000BE5 		str	r0, [fp, #-20]
 10129              		.loc 1 4701 5 discriminator 1
 10130 0168 14301BE5 		ldr	r3, [fp, #-20]
 10131 016c FF3803E2 		and	r3, r3, #16711680
 10132 0170 020853E3 		cmp	r3, #131072
 10133 0174 0100001A 		bne	.L641
 10134              		.loc 1 4701 5 discriminator 16
 10135 0178 0830E0E3 		mvn	r3, #8
 10136              		.loc 1 4701 5
 10137 017c 260100EA 		b	.L634
 10138              	.L641:
 10139              		.loc 1 4701 5 discriminator 17
 10140 0180 14301BE5 		ldr	r3, [fp, #-20]
 10141 0184 233CA0E1 		lsr	r3, r3, #24
 10142 0188 030053E3 		cmp	r3, #3
 10143 018c 0100000A 		beq	.L636
 10144              		.loc 1 4701 5 discriminator 18
 10145 0190 0130E0E3 		mvn	r3, #1
 10146              		.loc 1 4701 5
 10147 0194 200100EA 		b	.L634
 10148              	.L636:
4702:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4703:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10149              		.loc 1 4703 5 is_stmt 1
 10150 0198 34301BE5 		ldr	r3, [fp, #-52]
 10151 019c 803003E2 		and	r3, r3, #128
 10152 01a0 000053E3 		cmp	r3, #0
 10153 01a4 1C00001A 		bne	.L642
 10154              		.loc 1 4703 5 is_stmt 0 discriminator 1
 10155 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10156 01ac 142093E5 		ldr	r2, [r3, #20]
 10157 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10158 01b4 030052E1 		cmp	r2, r3
 10159 01b8 0100008A 		bhi	.L643
 10160              		.loc 1 4703 5 discriminator 3
 10161 01bc 0230E0E3 		mvn	r3, #2
 10162              		.loc 1 4703 5
 10163 01c0 150100EA 		b	.L634
 10164              	.L643:
 10165              		.loc 1 4703 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 263


 10166 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10167 01c8 8322A0E1 		lsl	r2, r3, #5
 10168 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10169 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10170 01d4 033082E0 		add	r3, r2, r3
 10171 01d8 0C300BE5 		str	r3, [fp, #-12]
 10172 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10173 01e0 0300A0E1 		mov	r0, r3
 10174 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10175 01e8 14000BE5 		str	r0, [fp, #-20]
 10176              		.loc 1 4703 5 discriminator 1
 10177 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10178 01f0 FF3803E2 		and	r3, r3, #16711680
 10179 01f4 020853E3 		cmp	r3, #131072
 10180 01f8 0100001A 		bne	.L644
 10181              		.loc 1 4703 5 discriminator 5
 10182 01fc 0830E0E3 		mvn	r3, #8
 10183              		.loc 1 4703 5
 10184 0200 050100EA 		b	.L634
 10185              	.L644:
 10186              		.loc 1 4703 5 discriminator 6
 10187 0204 14301BE5 		ldr	r3, [fp, #-20]
 10188 0208 233CA0E1 		lsr	r3, r3, #24
 10189 020c 030053E3 		cmp	r3, #3
 10190 0210 3F00000A 		beq	.L645
 10191              		.loc 1 4703 5 discriminator 7
 10192 0214 0130E0E3 		mvn	r3, #1
 10193              		.loc 1 4703 5
 10194 0218 FF0000EA 		b	.L634
 10195              	.L642:
 10196              		.loc 1 4703 5 discriminator 2
 10197 021c 34301BE5 		ldr	r3, [fp, #-52]
 10198 0220 2324A0E1 		lsr	r2, r3, #8
 10199 0224 28301BE5 		ldr	r3, [fp, #-40]
 10200 0228 143093E5 		ldr	r3, [r3, #20]
 10201 022c 030052E1 		cmp	r2, r3
 10202 0230 0100003A 		bcc	.L646
 10203              		.loc 1 4703 5 discriminator 8
 10204 0234 0230E0E3 		mvn	r3, #2
 10205              		.loc 1 4703 5
 10206 0238 F70000EA 		b	.L634
 10207              	.L646:
 10208              		.loc 1 4703 5 discriminator 9
 10209 023c 34301BE5 		ldr	r3, [fp, #-52]
 10210 0240 2334A0E1 		lsr	r3, r3, #8
 10211 0244 8322A0E1 		lsl	r2, r3, #5
 10212 0248 28301BE5 		ldr	r3, [fp, #-40]
 10213 024c 0C3093E5 		ldr	r3, [r3, #12]
 10214 0250 033082E0 		add	r3, r2, r3
 10215 0254 0C300BE5 		str	r3, [fp, #-12]
 10216 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10217 025c 0300A0E1 		mov	r0, r3
 10218 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10219 0264 14000BE5 		str	r0, [fp, #-20]
 10220              		.loc 1 4703 5 discriminator 1
 10221 0268 14301BE5 		ldr	r3, [fp, #-20]
 10222 026c FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 264


 10223 0270 020853E3 		cmp	r3, #131072
 10224 0274 0100001A 		bne	.L647
 10225              		.loc 1 4703 5 discriminator 10
 10226 0278 0830E0E3 		mvn	r3, #8
 10227              		.loc 1 4703 5
 10228 027c E60000EA 		b	.L634
 10229              	.L647:
 10230              		.loc 1 4703 5 discriminator 11
 10231 0280 14301BE5 		ldr	r3, [fp, #-20]
 10232 0284 233CA0E1 		lsr	r3, r3, #24
 10233 0288 030053E3 		cmp	r3, #3
 10234 028c 0100000A 		beq	.L648
 10235              		.loc 1 4703 5 discriminator 12
 10236 0290 0130E0E3 		mvn	r3, #1
 10237              		.loc 1 4703 5
 10238 0294 E00000EA 		b	.L634
 10239              	.L648:
 10240              		.loc 1 4703 5 discriminator 13
 10241 0298 34301BE5 		ldr	r3, [fp, #-52]
 10242 029c 7F2003E2 		and	r2, r3, #127
 10243 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10244 02a4 143093E5 		ldr	r3, [r3, #20]
 10245 02a8 030052E1 		cmp	r2, r3
 10246 02ac 0100003A 		bcc	.L649
 10247              		.loc 1 4703 5 discriminator 14
 10248 02b0 0230E0E3 		mvn	r3, #2
 10249              		.loc 1 4703 5
 10250 02b4 D80000EA 		b	.L634
 10251              	.L649:
 10252              		.loc 1 4703 5 discriminator 15
 10253 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10254 02bc 7F3003E2 		and	r3, r3, #127
 10255 02c0 8322A0E1 		lsl	r2, r3, #5
 10256 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10257 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10258 02cc 033082E0 		add	r3, r2, r3
 10259 02d0 0C300BE5 		str	r3, [fp, #-12]
 10260 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10261 02d8 0300A0E1 		mov	r0, r3
 10262 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10263 02e0 14000BE5 		str	r0, [fp, #-20]
 10264              		.loc 1 4703 5 discriminator 1
 10265 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10266 02e8 FF3803E2 		and	r3, r3, #16711680
 10267 02ec 020853E3 		cmp	r3, #131072
 10268 02f0 0100001A 		bne	.L650
 10269              		.loc 1 4703 5 discriminator 16
 10270 02f4 0830E0E3 		mvn	r3, #8
 10271              		.loc 1 4703 5
 10272 02f8 C70000EA 		b	.L634
 10273              	.L650:
 10274              		.loc 1 4703 5 discriminator 17
 10275 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10276 0300 233CA0E1 		lsr	r3, r3, #24
 10277 0304 030053E3 		cmp	r3, #3
 10278 0308 0100000A 		beq	.L645
 10279              		.loc 1 4703 5 discriminator 18
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 265


 10280 030c 0130E0E3 		mvn	r3, #1
 10281              		.loc 1 4703 5
 10282 0310 C10000EA 		b	.L634
 10283              	.L645:
4704:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4705:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4706:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10284              		.loc 1 4706 5 is_stmt 1
 10285 0314 04309BE5 		ldr	r3, [fp, #4]
 10286 0318 803003E2 		and	r3, r3, #128
 10287 031c 000053E3 		cmp	r3, #0
 10288 0320 1C00001A 		bne	.L651
 10289              		.loc 1 4706 5 is_stmt 0 discriminator 1
 10290 0324 28301BE5 		ldr	r3, [fp, #-40]
 10291 0328 142093E5 		ldr	r2, [r3, #20]
 10292 032c 04309BE5 		ldr	r3, [fp, #4]
 10293 0330 030052E1 		cmp	r2, r3
 10294 0334 0100008A 		bhi	.L652
 10295              		.loc 1 4706 5 discriminator 3
 10296 0338 0230E0E3 		mvn	r3, #2
 10297              		.loc 1 4706 5
 10298 033c B60000EA 		b	.L634
 10299              	.L652:
 10300              		.loc 1 4706 5 discriminator 4
 10301 0340 04309BE5 		ldr	r3, [fp, #4]
 10302 0344 8322A0E1 		lsl	r2, r3, #5
 10303 0348 28301BE5 		ldr	r3, [fp, #-40]
 10304 034c 0C3093E5 		ldr	r3, [r3, #12]
 10305 0350 033082E0 		add	r3, r2, r3
 10306 0354 10300BE5 		str	r3, [fp, #-16]
 10307 0358 10301BE5 		ldr	r3, [fp, #-16]
 10308 035c 0300A0E1 		mov	r0, r3
 10309 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10310 0364 14000BE5 		str	r0, [fp, #-20]
 10311              		.loc 1 4706 5 discriminator 1
 10312 0368 14301BE5 		ldr	r3, [fp, #-20]
 10313 036c FF3803E2 		and	r3, r3, #16711680
 10314 0370 020853E3 		cmp	r3, #131072
 10315 0374 0100001A 		bne	.L653
 10316              		.loc 1 4706 5 discriminator 5
 10317 0378 0830E0E3 		mvn	r3, #8
 10318              		.loc 1 4706 5
 10319 037c A60000EA 		b	.L634
 10320              	.L653:
 10321              		.loc 1 4706 5 discriminator 6
 10322 0380 14301BE5 		ldr	r3, [fp, #-20]
 10323 0384 233CA0E1 		lsr	r3, r3, #24
 10324 0388 040053E3 		cmp	r3, #4
 10325 038c 3F00000A 		beq	.L654
 10326              		.loc 1 4706 5 discriminator 7
 10327 0390 0130E0E3 		mvn	r3, #1
 10328              		.loc 1 4706 5
 10329 0394 A00000EA 		b	.L634
 10330              	.L651:
 10331              		.loc 1 4706 5 discriminator 2
 10332 0398 04309BE5 		ldr	r3, [fp, #4]
 10333 039c 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 266


 10334 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10335 03a4 143093E5 		ldr	r3, [r3, #20]
 10336 03a8 030052E1 		cmp	r2, r3
 10337 03ac 0100003A 		bcc	.L655
 10338              		.loc 1 4706 5 discriminator 8
 10339 03b0 0230E0E3 		mvn	r3, #2
 10340              		.loc 1 4706 5
 10341 03b4 980000EA 		b	.L634
 10342              	.L655:
 10343              		.loc 1 4706 5 discriminator 9
 10344 03b8 04309BE5 		ldr	r3, [fp, #4]
 10345 03bc 2334A0E1 		lsr	r3, r3, #8
 10346 03c0 8322A0E1 		lsl	r2, r3, #5
 10347 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10348 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10349 03cc 033082E0 		add	r3, r2, r3
 10350 03d0 10300BE5 		str	r3, [fp, #-16]
 10351 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10352 03d8 0300A0E1 		mov	r0, r3
 10353 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10354 03e0 14000BE5 		str	r0, [fp, #-20]
 10355              		.loc 1 4706 5 discriminator 1
 10356 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10357 03e8 FF3803E2 		and	r3, r3, #16711680
 10358 03ec 020853E3 		cmp	r3, #131072
 10359 03f0 0100001A 		bne	.L656
 10360              		.loc 1 4706 5 discriminator 10
 10361 03f4 0830E0E3 		mvn	r3, #8
 10362              		.loc 1 4706 5
 10363 03f8 870000EA 		b	.L634
 10364              	.L656:
 10365              		.loc 1 4706 5 discriminator 11
 10366 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10367 0400 233CA0E1 		lsr	r3, r3, #24
 10368 0404 030053E3 		cmp	r3, #3
 10369 0408 0100000A 		beq	.L657
 10370              		.loc 1 4706 5 discriminator 12
 10371 040c 0130E0E3 		mvn	r3, #1
 10372              		.loc 1 4706 5
 10373 0410 810000EA 		b	.L634
 10374              	.L657:
 10375              		.loc 1 4706 5 discriminator 13
 10376 0414 04309BE5 		ldr	r3, [fp, #4]
 10377 0418 7F2003E2 		and	r2, r3, #127
 10378 041c 10301BE5 		ldr	r3, [fp, #-16]
 10379 0420 143093E5 		ldr	r3, [r3, #20]
 10380 0424 030052E1 		cmp	r2, r3
 10381 0428 0100003A 		bcc	.L658
 10382              		.loc 1 4706 5 discriminator 14
 10383 042c 0230E0E3 		mvn	r3, #2
 10384              		.loc 1 4706 5
 10385 0430 790000EA 		b	.L634
 10386              	.L658:
 10387              		.loc 1 4706 5 discriminator 15
 10388 0434 04309BE5 		ldr	r3, [fp, #4]
 10389 0438 7F3003E2 		and	r3, r3, #127
 10390 043c 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 267


 10391 0440 10301BE5 		ldr	r3, [fp, #-16]
 10392 0444 0C3093E5 		ldr	r3, [r3, #12]
 10393 0448 033082E0 		add	r3, r2, r3
 10394 044c 10300BE5 		str	r3, [fp, #-16]
 10395 0450 10301BE5 		ldr	r3, [fp, #-16]
 10396 0454 0300A0E1 		mov	r0, r3
 10397 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10398 045c 14000BE5 		str	r0, [fp, #-20]
 10399              		.loc 1 4706 5 discriminator 1
 10400 0460 14301BE5 		ldr	r3, [fp, #-20]
 10401 0464 FF3803E2 		and	r3, r3, #16711680
 10402 0468 020853E3 		cmp	r3, #131072
 10403 046c 0100001A 		bne	.L659
 10404              		.loc 1 4706 5 discriminator 16
 10405 0470 0830E0E3 		mvn	r3, #8
 10406              		.loc 1 4706 5
 10407 0474 680000EA 		b	.L634
 10408              	.L659:
 10409              		.loc 1 4706 5 discriminator 17
 10410 0478 14301BE5 		ldr	r3, [fp, #-20]
 10411 047c 233CA0E1 		lsr	r3, r3, #24
 10412 0480 040053E3 		cmp	r3, #4
 10413 0484 0100000A 		beq	.L654
 10414              		.loc 1 4706 5 discriminator 18
 10415 0488 0130E0E3 		mvn	r3, #1
 10416              		.loc 1 4706 5
 10417 048c 620000EA 		b	.L634
 10418              	.L654:
4707:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4708:../../Source/Kernel/rme_kernel.c **** #endif
4709:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4710:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10419              		.loc 1 4710 5 is_stmt 1
 10420 0490 08301BE5 		ldr	r3, [fp, #-8]
 10421 0494 083093E5 		ldr	r3, [r3, #8]
 10422 0498 013003E2 		and	r3, r3, #1
 10423 049c 000053E3 		cmp	r3, #0
 10424 04a0 0100001A 		bne	.L660
 10425              		.loc 1 4710 5 is_stmt 0 discriminator 1
 10426 04a4 0630E0E3 		mvn	r3, #6
 10427              		.loc 1 4710 5
 10428 04a8 5B0000EA 		b	.L634
 10429              	.L660:
4711:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10430              		.loc 1 4711 5 is_stmt 1
 10431 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10432 04b0 083093E5 		ldr	r3, [r3, #8]
 10433 04b4 403003E2 		and	r3, r3, #64
 10434 04b8 000053E3 		cmp	r3, #0
 10435 04bc 0100001A 		bne	.L661
 10436              		.loc 1 4711 5 is_stmt 0 discriminator 1
 10437 04c0 0630E0E3 		mvn	r3, #6
 10438              		.loc 1 4711 5
 10439 04c4 540000EA 		b	.L634
 10440              	.L661:
4712:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4713:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 268


 10441              		.loc 1 4713 5 is_stmt 1
 10442 04c8 10301BE5 		ldr	r3, [fp, #-16]
 10443 04cc 083093E5 		ldr	r3, [r3, #8]
 10444 04d0 403003E2 		and	r3, r3, #64
 10445 04d4 000053E3 		cmp	r3, #0
 10446 04d8 0100001A 		bne	.L662
 10447              		.loc 1 4713 5 is_stmt 0 discriminator 1
 10448 04dc 0630E0E3 		mvn	r3, #6
 10449              		.loc 1 4713 5
 10450 04e0 4D0000EA 		b	.L634
 10451              	.L662:
4714:../../Source/Kernel/rme_kernel.c **** #endif
4715:../../Source/Kernel/rme_kernel.c ****     
4716:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4717:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10452              		.loc 1 4717 5 is_stmt 1
 10453 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10454 04e8 142093E5 		ldr	r2, [r3, #20]
 10455 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10456 04f0 030052E1 		cmp	r2, r3
 10457 04f4 0100008A 		bhi	.L663
 10458              		.loc 1 4717 5 is_stmt 0 discriminator 1
 10459 04f8 0230E0E3 		mvn	r3, #2
 10460              		.loc 1 4717 5
 10461 04fc 460000EA 		b	.L634
 10462              	.L663:
 10463              		.loc 1 4717 5 discriminator 2
 10464 0500 30301BE5 		ldr	r3, [fp, #-48]
 10465 0504 8322A0E1 		lsl	r2, r3, #5
 10466 0508 08301BE5 		ldr	r3, [fp, #-8]
 10467 050c 0C3093E5 		ldr	r3, [r3, #12]
 10468 0510 033082E0 		add	r3, r2, r3
 10469 0514 18300BE5 		str	r3, [fp, #-24]
4718:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4719:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10470              		.loc 1 4719 5 is_stmt 1
 10471 0518 18301BE5 		ldr	r3, [fp, #-24]
 10472 051c 0128A0E3 		mov	r2, #65536
 10473 0520 0010A0E3 		mov	r1, #0
 10474 0524 0300A0E1 		mov	r0, r3
 10475 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10476 052c 0030A0E1 		mov	r3, r0
 10477              		.loc 1 4719 5 is_stmt 0 discriminator 1
 10478 0530 000053E3 		cmp	r3, #0
 10479 0534 0100001A 		bne	.L664
 10480 0538 0430E0E3 		mvn	r3, #4
 10481              		.loc 1 4719 5
 10482 053c 360000EA 		b	.L634
 10483              	.L664:
 10484              		.loc 1 4719 5 discriminator 2
 10485 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10486 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10487 0548 002093E5 		ldr	r2, [r3]
 10488 054c 18301BE5 		ldr	r3, [fp, #-24]
 10489 0550 102083E5 		str	r2, [r3, #16]
4720:../../Source/Kernel/rme_kernel.c **** 
4721:../../Source/Kernel/rme_kernel.c ****     /* Header init */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 269


4722:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=1U;
 10490              		.loc 1 4722 27 is_stmt 1
 10491 0554 18301BE5 		ldr	r3, [fp, #-24]
 10492 0558 0120A0E3 		mov	r2, #1
 10493 055c 042083E5 		str	r2, [r3, #4]
4723:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10494              		.loc 1 4723 25
 10495 0560 18301BE5 		ldr	r3, [fp, #-24]
 10496 0564 0020A0E3 		mov	r2, #0
 10497 0568 0C2083E5 		str	r2, [r3, #12]
4724:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_INV|RME_PRC_FLAG_THD;
 10498              		.loc 1 4724 23
 10499 056c 18301BE5 		ldr	r3, [fp, #-24]
 10500 0570 0320A0E3 		mov	r2, #3
 10501 0574 082083E5 		str	r2, [r3, #8]
4725:../../Source/Kernel/rme_kernel.c **** 
4726:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4727:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10502              		.loc 1 4727 13
 10503 0578 0C301BE5 		ldr	r3, [fp, #-12]
 10504 057c 003093E5 		ldr	r3, [r3]
 10505 0580 7330FFE6 		uxth	r3, r3
 10506 0584 000053E3 		cmp	r3, #0
 10507 0588 0200000A 		beq	.L665
 10508              		.loc 1 4727 13 is_stmt 0 discriminator 1
 10509 058c 0C301BE5 		ldr	r3, [fp, #-12]
 10510 0590 043093E5 		ldr	r3, [r3, #4]
 10511 0594 000000EA 		b	.L666
 10512              	.L665:
 10513              		.loc 1 4727 13 discriminator 2
 10514 0598 0C301BE5 		ldr	r3, [fp, #-12]
 10515              	.L666:
 10516              		.loc 1 4727 12 is_stmt 1 discriminator 4
 10517 059c 1C300BE5 		str	r3, [fp, #-28]
4728:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4729:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10518              		.loc 1 4729 13
 10519 05a0 10301BE5 		ldr	r3, [fp, #-16]
 10520 05a4 003093E5 		ldr	r3, [r3]
 10521 05a8 7330FFE6 		uxth	r3, r3
 10522 05ac 000053E3 		cmp	r3, #0
 10523 05b0 0200000A 		beq	.L667
 10524              		.loc 1 4729 13 is_stmt 0 discriminator 1
 10525 05b4 10301BE5 		ldr	r3, [fp, #-16]
 10526 05b8 043093E5 		ldr	r3, [r3, #4]
 10527 05bc 000000EA 		b	.L668
 10528              	.L667:
 10529              		.loc 1 4729 13 discriminator 2
 10530 05c0 10301BE5 		ldr	r3, [fp, #-16]
 10531              	.L668:
 10532              		.loc 1 4729 12 is_stmt 1 discriminator 4
 10533 05c4 20300BE5 		str	r3, [fp, #-32]
4730:../../Source/Kernel/rme_kernel.c **** #endif
4731:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10534              		.loc 1 4731 17
 10535 05c8 18301BE5 		ldr	r3, [fp, #-24]
 10536 05cc 1C201BE5 		ldr	r2, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 270


 10537 05d0 142083E5 		str	r2, [r3, #20]
4732:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4733:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 10538              		.loc 1 4733 17
 10539 05d4 18301BE5 		ldr	r3, [fp, #-24]
 10540 05d8 20201BE5 		ldr	r2, [fp, #-32]
 10541 05dc 182083E5 		str	r2, [r3, #24]
4734:../../Source/Kernel/rme_kernel.c **** #else
4735:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4736:../../Source/Kernel/rme_kernel.c **** #endif
4737:../../Source/Kernel/rme_kernel.c ****     
4738:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4739:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10542              		.loc 1 4739 5
 10543 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 10544 05e4 043083E2 		add	r3, r3, #4
 10545 05e8 0110A0E3 		mov	r1, #1
 10546 05ec 0300A0E1 		mov	r0, r3
 10547 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4740:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4741:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10548              		.loc 1 4741 5
 10549 05f4 20301BE5 		ldr	r3, [fp, #-32]
 10550 05f8 043083E2 		add	r3, r3, #4
 10551 05fc 0110A0E3 		mov	r1, #1
 10552 0600 0300A0E1 		mov	r0, r3
 10553 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4742:../../Source/Kernel/rme_kernel.c **** #endif
4743:../../Source/Kernel/rme_kernel.c **** 
4744:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4745:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10554              		.loc 1 4745 5
 10555 0608 18301BE5 		ldr	r3, [fp, #-24]
 10556 060c 0514A0E3 		mov	r1, #83886080
 10557 0610 0300A0E1 		mov	r0, r3
 10558 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4746:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4747:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4748:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4749:../../Source/Kernel/rme_kernel.c **** 
4750:../../Source/Kernel/rme_kernel.c ****     return 0;
 10559              		.loc 1 4750 12
 10560 0618 0030A0E3 		mov	r3, #0
 10561              	.L634:
4751:../../Source/Kernel/rme_kernel.c **** }
 10562              		.loc 1 4751 1
 10563 061c 0300A0E1 		mov	r0, r3
 10564 0620 04D04BE2 		sub	sp, fp, #4
 10565              		.cfi_def_cfa 13, 8
 10566              		@ sp needed
 10567 0624 0088BDE8 		pop	{fp, pc}
 10568              		.cfi_endproc
 10569              	.LFE50:
 10571              		.section	.text._RME_Prc_Crt,"ax",%progbits
 10572              		.align	2
 10573              		.syntax unified
 10574              		.arm
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 271


 10576              	_RME_Prc_Crt:
 10577              	.LFB51:
4752:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Boot_Crt ********************************************/
4753:../../Source/Kernel/rme_kernel.c **** 
4754:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Crt ******************************************************
4755:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4756:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4757:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4758:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4759:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4760:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4761:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4762:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4763:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4764:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4765:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4766:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4767:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4768:../../Source/Kernel/rme_kernel.c ****                                   this process.
4769:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4770:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4771:../../Source/Kernel/rme_kernel.c ****                                   address.
4772:../../Source/Kernel/rme_kernel.c **** Output      : None.
4773:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4774:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4775:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4776:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4777:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4778:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4779:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4780:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4781:../../Source/Kernel/rme_kernel.c **** #else
4782:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4783:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4784:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4785:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4786:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4787:../../Source/Kernel/rme_kernel.c **** #endif
4788:../../Source/Kernel/rme_kernel.c **** {
 10578              		.loc 1 4788 1
 10579              		.cfi_startproc
 10580              		@ args = 4, pretend = 0, frame = 48
 10581              		@ frame_needed = 1, uses_anonymous_args = 0
 10582 0000 00482DE9 		push	{fp, lr}
 10583              		.cfi_def_cfa_offset 8
 10584              		.cfi_offset 11, -8
 10585              		.cfi_offset 14, -4
 10586 0004 04B08DE2 		add	fp, sp, #4
 10587              		.cfi_def_cfa 11, 4
 10588 0008 30D04DE2 		sub	sp, sp, #48
 10589 000c 28000BE5 		str	r0, [fp, #-40]
 10590 0010 2C100BE5 		str	r1, [fp, #-44]
 10591 0014 30200BE5 		str	r2, [fp, #-48]
 10592 0018 34300BE5 		str	r3, [fp, #-52]
4789:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4790:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4791:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 272


4792:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4793:../../Source/Kernel/rme_kernel.c **** #endif
4794:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4795:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4796:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4797:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4798:../../Source/Kernel/rme_kernel.c **** #endif
4799:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4800:../../Source/Kernel/rme_kernel.c ****     
4801:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4802:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10593              		.loc 1 4802 5
 10594 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10595 0020 803003E2 		and	r3, r3, #128
 10596 0024 000053E3 		cmp	r3, #0
 10597 0028 1C00001A 		bne	.L670
 10598              		.loc 1 4802 5 is_stmt 0 discriminator 1
 10599 002c 28301BE5 		ldr	r3, [fp, #-40]
 10600 0030 142093E5 		ldr	r2, [r3, #20]
 10601 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10602 0038 030052E1 		cmp	r2, r3
 10603 003c 0100008A 		bhi	.L671
 10604              		.loc 1 4802 5 discriminator 3
 10605 0040 0230E0E3 		mvn	r3, #2
 10606              		.loc 1 4802 5
 10607 0044 740100EA 		b	.L672
 10608              	.L671:
 10609              		.loc 1 4802 5 discriminator 4
 10610 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10611 004c 8322A0E1 		lsl	r2, r3, #5
 10612 0050 28301BE5 		ldr	r3, [fp, #-40]
 10613 0054 0C3093E5 		ldr	r3, [r3, #12]
 10614 0058 033082E0 		add	r3, r2, r3
 10615 005c 08300BE5 		str	r3, [fp, #-8]
 10616 0060 08301BE5 		ldr	r3, [fp, #-8]
 10617 0064 0300A0E1 		mov	r0, r3
 10618 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10619 006c 14000BE5 		str	r0, [fp, #-20]
 10620              		.loc 1 4802 5 discriminator 1
 10621 0070 14301BE5 		ldr	r3, [fp, #-20]
 10622 0074 FF3803E2 		and	r3, r3, #16711680
 10623 0078 020853E3 		cmp	r3, #131072
 10624 007c 0100001A 		bne	.L673
 10625              		.loc 1 4802 5 discriminator 5
 10626 0080 0830E0E3 		mvn	r3, #8
 10627              		.loc 1 4802 5
 10628 0084 640100EA 		b	.L672
 10629              	.L673:
 10630              		.loc 1 4802 5 discriminator 6
 10631 0088 14301BE5 		ldr	r3, [fp, #-20]
 10632 008c 233CA0E1 		lsr	r3, r3, #24
 10633 0090 030053E3 		cmp	r3, #3
 10634 0094 3F00000A 		beq	.L674
 10635              		.loc 1 4802 5 discriminator 7
 10636 0098 0130E0E3 		mvn	r3, #1
 10637              		.loc 1 4802 5
 10638 009c 5E0100EA 		b	.L672
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 273


 10639              	.L670:
 10640              		.loc 1 4802 5 discriminator 2
 10641 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 10642 00a4 2324A0E1 		lsr	r2, r3, #8
 10643 00a8 28301BE5 		ldr	r3, [fp, #-40]
 10644 00ac 143093E5 		ldr	r3, [r3, #20]
 10645 00b0 030052E1 		cmp	r2, r3
 10646 00b4 0100003A 		bcc	.L675
 10647              		.loc 1 4802 5 discriminator 8
 10648 00b8 0230E0E3 		mvn	r3, #2
 10649              		.loc 1 4802 5
 10650 00bc 560100EA 		b	.L672
 10651              	.L675:
 10652              		.loc 1 4802 5 discriminator 9
 10653 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10654 00c4 2334A0E1 		lsr	r3, r3, #8
 10655 00c8 8322A0E1 		lsl	r2, r3, #5
 10656 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10657 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10658 00d4 033082E0 		add	r3, r2, r3
 10659 00d8 08300BE5 		str	r3, [fp, #-8]
 10660 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10661 00e0 0300A0E1 		mov	r0, r3
 10662 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10663 00e8 14000BE5 		str	r0, [fp, #-20]
 10664              		.loc 1 4802 5 discriminator 1
 10665 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10666 00f0 FF3803E2 		and	r3, r3, #16711680
 10667 00f4 020853E3 		cmp	r3, #131072
 10668 00f8 0100001A 		bne	.L676
 10669              		.loc 1 4802 5 discriminator 10
 10670 00fc 0830E0E3 		mvn	r3, #8
 10671              		.loc 1 4802 5
 10672 0100 450100EA 		b	.L672
 10673              	.L676:
 10674              		.loc 1 4802 5 discriminator 11
 10675 0104 14301BE5 		ldr	r3, [fp, #-20]
 10676 0108 233CA0E1 		lsr	r3, r3, #24
 10677 010c 030053E3 		cmp	r3, #3
 10678 0110 0100000A 		beq	.L677
 10679              		.loc 1 4802 5 discriminator 12
 10680 0114 0130E0E3 		mvn	r3, #1
 10681              		.loc 1 4802 5
 10682 0118 3F0100EA 		b	.L672
 10683              	.L677:
 10684              		.loc 1 4802 5 discriminator 13
 10685 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10686 0120 7F2003E2 		and	r2, r3, #127
 10687 0124 08301BE5 		ldr	r3, [fp, #-8]
 10688 0128 143093E5 		ldr	r3, [r3, #20]
 10689 012c 030052E1 		cmp	r2, r3
 10690 0130 0100003A 		bcc	.L678
 10691              		.loc 1 4802 5 discriminator 14
 10692 0134 0230E0E3 		mvn	r3, #2
 10693              		.loc 1 4802 5
 10694 0138 370100EA 		b	.L672
 10695              	.L678:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 274


 10696              		.loc 1 4802 5 discriminator 15
 10697 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10698 0140 7F3003E2 		and	r3, r3, #127
 10699 0144 8322A0E1 		lsl	r2, r3, #5
 10700 0148 08301BE5 		ldr	r3, [fp, #-8]
 10701 014c 0C3093E5 		ldr	r3, [r3, #12]
 10702 0150 033082E0 		add	r3, r2, r3
 10703 0154 08300BE5 		str	r3, [fp, #-8]
 10704 0158 08301BE5 		ldr	r3, [fp, #-8]
 10705 015c 0300A0E1 		mov	r0, r3
 10706 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10707 0164 14000BE5 		str	r0, [fp, #-20]
 10708              		.loc 1 4802 5 discriminator 1
 10709 0168 14301BE5 		ldr	r3, [fp, #-20]
 10710 016c FF3803E2 		and	r3, r3, #16711680
 10711 0170 020853E3 		cmp	r3, #131072
 10712 0174 0100001A 		bne	.L679
 10713              		.loc 1 4802 5 discriminator 16
 10714 0178 0830E0E3 		mvn	r3, #8
 10715              		.loc 1 4802 5
 10716 017c 260100EA 		b	.L672
 10717              	.L679:
 10718              		.loc 1 4802 5 discriminator 17
 10719 0180 14301BE5 		ldr	r3, [fp, #-20]
 10720 0184 233CA0E1 		lsr	r3, r3, #24
 10721 0188 030053E3 		cmp	r3, #3
 10722 018c 0100000A 		beq	.L674
 10723              		.loc 1 4802 5 discriminator 18
 10724 0190 0130E0E3 		mvn	r3, #1
 10725              		.loc 1 4802 5
 10726 0194 200100EA 		b	.L672
 10727              	.L674:
4803:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4804:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10728              		.loc 1 4804 5 is_stmt 1
 10729 0198 34301BE5 		ldr	r3, [fp, #-52]
 10730 019c 803003E2 		and	r3, r3, #128
 10731 01a0 000053E3 		cmp	r3, #0
 10732 01a4 1C00001A 		bne	.L680
 10733              		.loc 1 4804 5 is_stmt 0 discriminator 1
 10734 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10735 01ac 142093E5 		ldr	r2, [r3, #20]
 10736 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10737 01b4 030052E1 		cmp	r2, r3
 10738 01b8 0100008A 		bhi	.L681
 10739              		.loc 1 4804 5 discriminator 3
 10740 01bc 0230E0E3 		mvn	r3, #2
 10741              		.loc 1 4804 5
 10742 01c0 150100EA 		b	.L672
 10743              	.L681:
 10744              		.loc 1 4804 5 discriminator 4
 10745 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10746 01c8 8322A0E1 		lsl	r2, r3, #5
 10747 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10748 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10749 01d4 033082E0 		add	r3, r2, r3
 10750 01d8 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 275


 10751 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10752 01e0 0300A0E1 		mov	r0, r3
 10753 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10754 01e8 14000BE5 		str	r0, [fp, #-20]
 10755              		.loc 1 4804 5 discriminator 1
 10756 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10757 01f0 FF3803E2 		and	r3, r3, #16711680
 10758 01f4 020853E3 		cmp	r3, #131072
 10759 01f8 0100001A 		bne	.L682
 10760              		.loc 1 4804 5 discriminator 5
 10761 01fc 0830E0E3 		mvn	r3, #8
 10762              		.loc 1 4804 5
 10763 0200 050100EA 		b	.L672
 10764              	.L682:
 10765              		.loc 1 4804 5 discriminator 6
 10766 0204 14301BE5 		ldr	r3, [fp, #-20]
 10767 0208 233CA0E1 		lsr	r3, r3, #24
 10768 020c 030053E3 		cmp	r3, #3
 10769 0210 3F00000A 		beq	.L683
 10770              		.loc 1 4804 5 discriminator 7
 10771 0214 0130E0E3 		mvn	r3, #1
 10772              		.loc 1 4804 5
 10773 0218 FF0000EA 		b	.L672
 10774              	.L680:
 10775              		.loc 1 4804 5 discriminator 2
 10776 021c 34301BE5 		ldr	r3, [fp, #-52]
 10777 0220 2324A0E1 		lsr	r2, r3, #8
 10778 0224 28301BE5 		ldr	r3, [fp, #-40]
 10779 0228 143093E5 		ldr	r3, [r3, #20]
 10780 022c 030052E1 		cmp	r2, r3
 10781 0230 0100003A 		bcc	.L684
 10782              		.loc 1 4804 5 discriminator 8
 10783 0234 0230E0E3 		mvn	r3, #2
 10784              		.loc 1 4804 5
 10785 0238 F70000EA 		b	.L672
 10786              	.L684:
 10787              		.loc 1 4804 5 discriminator 9
 10788 023c 34301BE5 		ldr	r3, [fp, #-52]
 10789 0240 2334A0E1 		lsr	r3, r3, #8
 10790 0244 8322A0E1 		lsl	r2, r3, #5
 10791 0248 28301BE5 		ldr	r3, [fp, #-40]
 10792 024c 0C3093E5 		ldr	r3, [r3, #12]
 10793 0250 033082E0 		add	r3, r2, r3
 10794 0254 0C300BE5 		str	r3, [fp, #-12]
 10795 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10796 025c 0300A0E1 		mov	r0, r3
 10797 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10798 0264 14000BE5 		str	r0, [fp, #-20]
 10799              		.loc 1 4804 5 discriminator 1
 10800 0268 14301BE5 		ldr	r3, [fp, #-20]
 10801 026c FF3803E2 		and	r3, r3, #16711680
 10802 0270 020853E3 		cmp	r3, #131072
 10803 0274 0100001A 		bne	.L685
 10804              		.loc 1 4804 5 discriminator 10
 10805 0278 0830E0E3 		mvn	r3, #8
 10806              		.loc 1 4804 5
 10807 027c E60000EA 		b	.L672
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 276


 10808              	.L685:
 10809              		.loc 1 4804 5 discriminator 11
 10810 0280 14301BE5 		ldr	r3, [fp, #-20]
 10811 0284 233CA0E1 		lsr	r3, r3, #24
 10812 0288 030053E3 		cmp	r3, #3
 10813 028c 0100000A 		beq	.L686
 10814              		.loc 1 4804 5 discriminator 12
 10815 0290 0130E0E3 		mvn	r3, #1
 10816              		.loc 1 4804 5
 10817 0294 E00000EA 		b	.L672
 10818              	.L686:
 10819              		.loc 1 4804 5 discriminator 13
 10820 0298 34301BE5 		ldr	r3, [fp, #-52]
 10821 029c 7F2003E2 		and	r2, r3, #127
 10822 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10823 02a4 143093E5 		ldr	r3, [r3, #20]
 10824 02a8 030052E1 		cmp	r2, r3
 10825 02ac 0100003A 		bcc	.L687
 10826              		.loc 1 4804 5 discriminator 14
 10827 02b0 0230E0E3 		mvn	r3, #2
 10828              		.loc 1 4804 5
 10829 02b4 D80000EA 		b	.L672
 10830              	.L687:
 10831              		.loc 1 4804 5 discriminator 15
 10832 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10833 02bc 7F3003E2 		and	r3, r3, #127
 10834 02c0 8322A0E1 		lsl	r2, r3, #5
 10835 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10836 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10837 02cc 033082E0 		add	r3, r2, r3
 10838 02d0 0C300BE5 		str	r3, [fp, #-12]
 10839 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10840 02d8 0300A0E1 		mov	r0, r3
 10841 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10842 02e0 14000BE5 		str	r0, [fp, #-20]
 10843              		.loc 1 4804 5 discriminator 1
 10844 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10845 02e8 FF3803E2 		and	r3, r3, #16711680
 10846 02ec 020853E3 		cmp	r3, #131072
 10847 02f0 0100001A 		bne	.L688
 10848              		.loc 1 4804 5 discriminator 16
 10849 02f4 0830E0E3 		mvn	r3, #8
 10850              		.loc 1 4804 5
 10851 02f8 C70000EA 		b	.L672
 10852              	.L688:
 10853              		.loc 1 4804 5 discriminator 17
 10854 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10855 0300 233CA0E1 		lsr	r3, r3, #24
 10856 0304 030053E3 		cmp	r3, #3
 10857 0308 0100000A 		beq	.L683
 10858              		.loc 1 4804 5 discriminator 18
 10859 030c 0130E0E3 		mvn	r3, #1
 10860              		.loc 1 4804 5
 10861 0310 C10000EA 		b	.L672
 10862              	.L683:
4805:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4806:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 277


4807:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10863              		.loc 1 4807 5 is_stmt 1
 10864 0314 04309BE5 		ldr	r3, [fp, #4]
 10865 0318 803003E2 		and	r3, r3, #128
 10866 031c 000053E3 		cmp	r3, #0
 10867 0320 1C00001A 		bne	.L689
 10868              		.loc 1 4807 5 is_stmt 0 discriminator 1
 10869 0324 28301BE5 		ldr	r3, [fp, #-40]
 10870 0328 142093E5 		ldr	r2, [r3, #20]
 10871 032c 04309BE5 		ldr	r3, [fp, #4]
 10872 0330 030052E1 		cmp	r2, r3
 10873 0334 0100008A 		bhi	.L690
 10874              		.loc 1 4807 5 discriminator 3
 10875 0338 0230E0E3 		mvn	r3, #2
 10876              		.loc 1 4807 5
 10877 033c B60000EA 		b	.L672
 10878              	.L690:
 10879              		.loc 1 4807 5 discriminator 4
 10880 0340 04309BE5 		ldr	r3, [fp, #4]
 10881 0344 8322A0E1 		lsl	r2, r3, #5
 10882 0348 28301BE5 		ldr	r3, [fp, #-40]
 10883 034c 0C3093E5 		ldr	r3, [r3, #12]
 10884 0350 033082E0 		add	r3, r2, r3
 10885 0354 10300BE5 		str	r3, [fp, #-16]
 10886 0358 10301BE5 		ldr	r3, [fp, #-16]
 10887 035c 0300A0E1 		mov	r0, r3
 10888 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10889 0364 14000BE5 		str	r0, [fp, #-20]
 10890              		.loc 1 4807 5 discriminator 1
 10891 0368 14301BE5 		ldr	r3, [fp, #-20]
 10892 036c FF3803E2 		and	r3, r3, #16711680
 10893 0370 020853E3 		cmp	r3, #131072
 10894 0374 0100001A 		bne	.L691
 10895              		.loc 1 4807 5 discriminator 5
 10896 0378 0830E0E3 		mvn	r3, #8
 10897              		.loc 1 4807 5
 10898 037c A60000EA 		b	.L672
 10899              	.L691:
 10900              		.loc 1 4807 5 discriminator 6
 10901 0380 14301BE5 		ldr	r3, [fp, #-20]
 10902 0384 233CA0E1 		lsr	r3, r3, #24
 10903 0388 040053E3 		cmp	r3, #4
 10904 038c 3F00000A 		beq	.L692
 10905              		.loc 1 4807 5 discriminator 7
 10906 0390 0130E0E3 		mvn	r3, #1
 10907              		.loc 1 4807 5
 10908 0394 A00000EA 		b	.L672
 10909              	.L689:
 10910              		.loc 1 4807 5 discriminator 2
 10911 0398 04309BE5 		ldr	r3, [fp, #4]
 10912 039c 2324A0E1 		lsr	r2, r3, #8
 10913 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10914 03a4 143093E5 		ldr	r3, [r3, #20]
 10915 03a8 030052E1 		cmp	r2, r3
 10916 03ac 0100003A 		bcc	.L693
 10917              		.loc 1 4807 5 discriminator 8
 10918 03b0 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 278


 10919              		.loc 1 4807 5
 10920 03b4 980000EA 		b	.L672
 10921              	.L693:
 10922              		.loc 1 4807 5 discriminator 9
 10923 03b8 04309BE5 		ldr	r3, [fp, #4]
 10924 03bc 2334A0E1 		lsr	r3, r3, #8
 10925 03c0 8322A0E1 		lsl	r2, r3, #5
 10926 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10927 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10928 03cc 033082E0 		add	r3, r2, r3
 10929 03d0 10300BE5 		str	r3, [fp, #-16]
 10930 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10931 03d8 0300A0E1 		mov	r0, r3
 10932 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10933 03e0 14000BE5 		str	r0, [fp, #-20]
 10934              		.loc 1 4807 5 discriminator 1
 10935 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10936 03e8 FF3803E2 		and	r3, r3, #16711680
 10937 03ec 020853E3 		cmp	r3, #131072
 10938 03f0 0100001A 		bne	.L694
 10939              		.loc 1 4807 5 discriminator 10
 10940 03f4 0830E0E3 		mvn	r3, #8
 10941              		.loc 1 4807 5
 10942 03f8 870000EA 		b	.L672
 10943              	.L694:
 10944              		.loc 1 4807 5 discriminator 11
 10945 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10946 0400 233CA0E1 		lsr	r3, r3, #24
 10947 0404 030053E3 		cmp	r3, #3
 10948 0408 0100000A 		beq	.L695
 10949              		.loc 1 4807 5 discriminator 12
 10950 040c 0130E0E3 		mvn	r3, #1
 10951              		.loc 1 4807 5
 10952 0410 810000EA 		b	.L672
 10953              	.L695:
 10954              		.loc 1 4807 5 discriminator 13
 10955 0414 04309BE5 		ldr	r3, [fp, #4]
 10956 0418 7F2003E2 		and	r2, r3, #127
 10957 041c 10301BE5 		ldr	r3, [fp, #-16]
 10958 0420 143093E5 		ldr	r3, [r3, #20]
 10959 0424 030052E1 		cmp	r2, r3
 10960 0428 0100003A 		bcc	.L696
 10961              		.loc 1 4807 5 discriminator 14
 10962 042c 0230E0E3 		mvn	r3, #2
 10963              		.loc 1 4807 5
 10964 0430 790000EA 		b	.L672
 10965              	.L696:
 10966              		.loc 1 4807 5 discriminator 15
 10967 0434 04309BE5 		ldr	r3, [fp, #4]
 10968 0438 7F3003E2 		and	r3, r3, #127
 10969 043c 8322A0E1 		lsl	r2, r3, #5
 10970 0440 10301BE5 		ldr	r3, [fp, #-16]
 10971 0444 0C3093E5 		ldr	r3, [r3, #12]
 10972 0448 033082E0 		add	r3, r2, r3
 10973 044c 10300BE5 		str	r3, [fp, #-16]
 10974 0450 10301BE5 		ldr	r3, [fp, #-16]
 10975 0454 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 279


 10976 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10977 045c 14000BE5 		str	r0, [fp, #-20]
 10978              		.loc 1 4807 5 discriminator 1
 10979 0460 14301BE5 		ldr	r3, [fp, #-20]
 10980 0464 FF3803E2 		and	r3, r3, #16711680
 10981 0468 020853E3 		cmp	r3, #131072
 10982 046c 0100001A 		bne	.L697
 10983              		.loc 1 4807 5 discriminator 16
 10984 0470 0830E0E3 		mvn	r3, #8
 10985              		.loc 1 4807 5
 10986 0474 680000EA 		b	.L672
 10987              	.L697:
 10988              		.loc 1 4807 5 discriminator 17
 10989 0478 14301BE5 		ldr	r3, [fp, #-20]
 10990 047c 233CA0E1 		lsr	r3, r3, #24
 10991 0480 040053E3 		cmp	r3, #4
 10992 0484 0100000A 		beq	.L692
 10993              		.loc 1 4807 5 discriminator 18
 10994 0488 0130E0E3 		mvn	r3, #1
 10995              		.loc 1 4807 5
 10996 048c 620000EA 		b	.L672
 10997              	.L692:
4808:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4809:../../Source/Kernel/rme_kernel.c **** #endif
4810:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4811:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10998              		.loc 1 4811 5 is_stmt 1
 10999 0490 08301BE5 		ldr	r3, [fp, #-8]
 11000 0494 083093E5 		ldr	r3, [r3, #8]
 11001 0498 013003E2 		and	r3, r3, #1
 11002 049c 000053E3 		cmp	r3, #0
 11003 04a0 0100001A 		bne	.L698
 11004              		.loc 1 4811 5 is_stmt 0 discriminator 1
 11005 04a4 0630E0E3 		mvn	r3, #6
 11006              		.loc 1 4811 5
 11007 04a8 5B0000EA 		b	.L672
 11008              	.L698:
4812:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 11009              		.loc 1 4812 5 is_stmt 1
 11010 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 11011 04b0 083093E5 		ldr	r3, [r3, #8]
 11012 04b4 403003E2 		and	r3, r3, #64
 11013 04b8 000053E3 		cmp	r3, #0
 11014 04bc 0100001A 		bne	.L699
 11015              		.loc 1 4812 5 is_stmt 0 discriminator 1
 11016 04c0 0630E0E3 		mvn	r3, #6
 11017              		.loc 1 4812 5
 11018 04c4 540000EA 		b	.L672
 11019              	.L699:
4813:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4814:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 11020              		.loc 1 4814 5 is_stmt 1
 11021 04c8 10301BE5 		ldr	r3, [fp, #-16]
 11022 04cc 083093E5 		ldr	r3, [r3, #8]
 11023 04d0 403003E2 		and	r3, r3, #64
 11024 04d4 000053E3 		cmp	r3, #0
 11025 04d8 0100001A 		bne	.L700
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 280


 11026              		.loc 1 4814 5 is_stmt 0 discriminator 1
 11027 04dc 0630E0E3 		mvn	r3, #6
 11028              		.loc 1 4814 5
 11029 04e0 4D0000EA 		b	.L672
 11030              	.L700:
4815:../../Source/Kernel/rme_kernel.c **** #endif
4816:../../Source/Kernel/rme_kernel.c ****     
4817:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4818:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 11031              		.loc 1 4818 5 is_stmt 1
 11032 04e4 08301BE5 		ldr	r3, [fp, #-8]
 11033 04e8 142093E5 		ldr	r2, [r3, #20]
 11034 04ec 30301BE5 		ldr	r3, [fp, #-48]
 11035 04f0 030052E1 		cmp	r2, r3
 11036 04f4 0100008A 		bhi	.L701
 11037              		.loc 1 4818 5 is_stmt 0 discriminator 1
 11038 04f8 0230E0E3 		mvn	r3, #2
 11039              		.loc 1 4818 5
 11040 04fc 460000EA 		b	.L672
 11041              	.L701:
 11042              		.loc 1 4818 5 discriminator 2
 11043 0500 30301BE5 		ldr	r3, [fp, #-48]
 11044 0504 8322A0E1 		lsl	r2, r3, #5
 11045 0508 08301BE5 		ldr	r3, [fp, #-8]
 11046 050c 0C3093E5 		ldr	r3, [r3, #12]
 11047 0510 033082E0 		add	r3, r2, r3
 11048 0514 18300BE5 		str	r3, [fp, #-24]
4819:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4820:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 11049              		.loc 1 4820 5 is_stmt 1
 11050 0518 18301BE5 		ldr	r3, [fp, #-24]
 11051 051c 0128A0E3 		mov	r2, #65536
 11052 0520 0010A0E3 		mov	r1, #0
 11053 0524 0300A0E1 		mov	r0, r3
 11054 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11055 052c 0030A0E1 		mov	r3, r0
 11056              		.loc 1 4820 5 is_stmt 0 discriminator 1
 11057 0530 000053E3 		cmp	r3, #0
 11058 0534 0100001A 		bne	.L702
 11059 0538 0430E0E3 		mvn	r3, #4
 11060              		.loc 1 4820 5
 11061 053c 360000EA 		b	.L672
 11062              	.L702:
 11063              		.loc 1 4820 5 discriminator 2
 11064 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 11065 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 11066 0548 002093E5 		ldr	r2, [r3]
 11067 054c 18301BE5 		ldr	r3, [fp, #-24]
 11068 0550 102083E5 		str	r2, [r3, #16]
4821:../../Source/Kernel/rme_kernel.c ****     
4822:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4823:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=0U;
 11069              		.loc 1 4823 27 is_stmt 1
 11070 0554 18301BE5 		ldr	r3, [fp, #-24]
 11071 0558 0020A0E3 		mov	r2, #0
 11072 055c 042083E5 		str	r2, [r3, #4]
4824:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 281


 11073              		.loc 1 4824 25
 11074 0560 18301BE5 		ldr	r3, [fp, #-24]
 11075 0564 0020A0E3 		mov	r2, #0
 11076 0568 0C2083E5 		str	r2, [r3, #12]
4825:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_ALL;
 11077              		.loc 1 4825 23
 11078 056c 18301BE5 		ldr	r3, [fp, #-24]
 11079 0570 0F20A0E3 		mov	r2, #15
 11080 0574 082083E5 		str	r2, [r3, #8]
4826:../../Source/Kernel/rme_kernel.c ****     
4827:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4828:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 11081              		.loc 1 4828 13
 11082 0578 0C301BE5 		ldr	r3, [fp, #-12]
 11083 057c 003093E5 		ldr	r3, [r3]
 11084 0580 7330FFE6 		uxth	r3, r3
 11085 0584 000053E3 		cmp	r3, #0
 11086 0588 0200000A 		beq	.L703
 11087              		.loc 1 4828 13 is_stmt 0 discriminator 1
 11088 058c 0C301BE5 		ldr	r3, [fp, #-12]
 11089 0590 043093E5 		ldr	r3, [r3, #4]
 11090 0594 000000EA 		b	.L704
 11091              	.L703:
 11092              		.loc 1 4828 13 discriminator 2
 11093 0598 0C301BE5 		ldr	r3, [fp, #-12]
 11094              	.L704:
 11095              		.loc 1 4828 12 is_stmt 1 discriminator 4
 11096 059c 1C300BE5 		str	r3, [fp, #-28]
4829:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4830:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 11097              		.loc 1 4830 13
 11098 05a0 10301BE5 		ldr	r3, [fp, #-16]
 11099 05a4 003093E5 		ldr	r3, [r3]
 11100 05a8 7330FFE6 		uxth	r3, r3
 11101 05ac 000053E3 		cmp	r3, #0
 11102 05b0 0200000A 		beq	.L705
 11103              		.loc 1 4830 13 is_stmt 0 discriminator 1
 11104 05b4 10301BE5 		ldr	r3, [fp, #-16]
 11105 05b8 043093E5 		ldr	r3, [r3, #4]
 11106 05bc 000000EA 		b	.L706
 11107              	.L705:
 11108              		.loc 1 4830 13 discriminator 2
 11109 05c0 10301BE5 		ldr	r3, [fp, #-16]
 11110              	.L706:
 11111              		.loc 1 4830 12 is_stmt 1 discriminator 4
 11112 05c4 20300BE5 		str	r3, [fp, #-32]
4831:../../Source/Kernel/rme_kernel.c **** #endif
4832:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 11113              		.loc 1 4832 17
 11114 05c8 18301BE5 		ldr	r3, [fp, #-24]
 11115 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 11116 05d0 142083E5 		str	r2, [r3, #20]
4833:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4834:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 11117              		.loc 1 4834 17
 11118 05d4 18301BE5 		ldr	r3, [fp, #-24]
 11119 05d8 20201BE5 		ldr	r2, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 282


 11120 05dc 182083E5 		str	r2, [r3, #24]
4835:../../Source/Kernel/rme_kernel.c **** #else
4836:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4837:../../Source/Kernel/rme_kernel.c **** #endif
4838:../../Source/Kernel/rme_kernel.c ****     
4839:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4840:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 11121              		.loc 1 4840 5
 11122 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 11123 05e4 043083E2 		add	r3, r3, #4
 11124 05e8 0110A0E3 		mov	r1, #1
 11125 05ec 0300A0E1 		mov	r0, r3
 11126 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4841:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4842:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 11127              		.loc 1 4842 5
 11128 05f4 20301BE5 		ldr	r3, [fp, #-32]
 11129 05f8 043083E2 		add	r3, r3, #4
 11130 05fc 0110A0E3 		mov	r1, #1
 11131 0600 0300A0E1 		mov	r0, r3
 11132 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4843:../../Source/Kernel/rme_kernel.c **** #endif
4844:../../Source/Kernel/rme_kernel.c **** 
4845:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4846:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 11133              		.loc 1 4846 5
 11134 0608 18301BE5 		ldr	r3, [fp, #-24]
 11135 060c 0514A0E3 		mov	r1, #83886080
 11136 0610 0300A0E1 		mov	r0, r3
 11137 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4847:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4848:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4849:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4850:../../Source/Kernel/rme_kernel.c **** 
4851:../../Source/Kernel/rme_kernel.c ****     return 0;
 11138              		.loc 1 4851 12
 11139 0618 0030A0E3 		mov	r3, #0
 11140              	.L672:
4852:../../Source/Kernel/rme_kernel.c **** }
 11141              		.loc 1 4852 1
 11142 061c 0300A0E1 		mov	r0, r3
 11143 0620 04D04BE2 		sub	sp, fp, #4
 11144              		.cfi_def_cfa 13, 8
 11145              		@ sp needed
 11146 0624 0088BDE8 		pop	{fp, pc}
 11147              		.cfi_endproc
 11148              	.LFE51:
 11150              		.section	.text._RME_Prc_Del,"ax",%progbits
 11151              		.align	2
 11152              		.syntax unified
 11153              		.arm
 11155              	_RME_Prc_Del:
 11156              	.LFB52:
4853:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Crt *************************************************/
4854:../../Source/Kernel/rme_kernel.c **** 
4855:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Del ******************************************************
4856:../../Source/Kernel/rme_kernel.c **** Description : Delete a process.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 283


4857:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
4858:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
4859:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4860:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process.
4861:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4862:../../Source/Kernel/rme_kernel.c **** Output      : None.
4863:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4864:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4865:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Del(struct RME_Cap_Cpt* Cpt,
4866:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4867:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc)
4868:../../Source/Kernel/rme_kernel.c **** {
 11157              		.loc 1 4868 1
 11158              		.cfi_startproc
 11159              		@ args = 0, pretend = 0, frame = 40
 11160              		@ frame_needed = 1, uses_anonymous_args = 0
 11161 0000 00482DE9 		push	{fp, lr}
 11162              		.cfi_def_cfa_offset 8
 11163              		.cfi_offset 11, -8
 11164              		.cfi_offset 14, -4
 11165 0004 04B08DE2 		add	fp, sp, #4
 11166              		.cfi_def_cfa 11, 4
 11167 0008 28D04DE2 		sub	sp, sp, #40
 11168 000c 20000BE5 		str	r0, [fp, #-32]
 11169 0010 24100BE5 		str	r1, [fp, #-36]
 11170 0014 28200BE5 		str	r2, [fp, #-40]
4869:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4870:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Del;
4871:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4872:../../Source/Kernel/rme_kernel.c ****     /* For deletion use */
4873:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4874:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4875:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4876:../../Source/Kernel/rme_kernel.c **** #endif
4877:../../Source/Kernel/rme_kernel.c **** 
4878:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4879:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11171              		.loc 1 4879 5
 11172 0018 24301BE5 		ldr	r3, [fp, #-36]
 11173 001c 803003E2 		and	r3, r3, #128
 11174 0020 000053E3 		cmp	r3, #0
 11175 0024 1C00001A 		bne	.L708
 11176              		.loc 1 4879 5 is_stmt 0 discriminator 1
 11177 0028 20301BE5 		ldr	r3, [fp, #-32]
 11178 002c 142093E5 		ldr	r2, [r3, #20]
 11179 0030 24301BE5 		ldr	r3, [fp, #-36]
 11180 0034 030052E1 		cmp	r2, r3
 11181 0038 0100008A 		bhi	.L709
 11182              		.loc 1 4879 5 discriminator 3
 11183 003c 0230E0E3 		mvn	r3, #2
 11184              		.loc 1 4879 5
 11185 0040 BC0000EA 		b	.L710
 11186              	.L709:
 11187              		.loc 1 4879 5 discriminator 4
 11188 0044 24301BE5 		ldr	r3, [fp, #-36]
 11189 0048 8322A0E1 		lsl	r2, r3, #5
 11190 004c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 284


 11191 0050 0C3093E5 		ldr	r3, [r3, #12]
 11192 0054 033082E0 		add	r3, r2, r3
 11193 0058 08300BE5 		str	r3, [fp, #-8]
 11194 005c 08301BE5 		ldr	r3, [fp, #-8]
 11195 0060 0300A0E1 		mov	r0, r3
 11196 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11197 0068 0C000BE5 		str	r0, [fp, #-12]
 11198              		.loc 1 4879 5 discriminator 1
 11199 006c 0C301BE5 		ldr	r3, [fp, #-12]
 11200 0070 FF3803E2 		and	r3, r3, #16711680
 11201 0074 020853E3 		cmp	r3, #131072
 11202 0078 0100001A 		bne	.L711
 11203              		.loc 1 4879 5 discriminator 5
 11204 007c 0830E0E3 		mvn	r3, #8
 11205              		.loc 1 4879 5
 11206 0080 AC0000EA 		b	.L710
 11207              	.L711:
 11208              		.loc 1 4879 5 discriminator 6
 11209 0084 0C301BE5 		ldr	r3, [fp, #-12]
 11210 0088 233CA0E1 		lsr	r3, r3, #24
 11211 008c 030053E3 		cmp	r3, #3
 11212 0090 3F00000A 		beq	.L712
 11213              		.loc 1 4879 5 discriminator 7
 11214 0094 0130E0E3 		mvn	r3, #1
 11215              		.loc 1 4879 5
 11216 0098 A60000EA 		b	.L710
 11217              	.L708:
 11218              		.loc 1 4879 5 discriminator 2
 11219 009c 24301BE5 		ldr	r3, [fp, #-36]
 11220 00a0 2324A0E1 		lsr	r2, r3, #8
 11221 00a4 20301BE5 		ldr	r3, [fp, #-32]
 11222 00a8 143093E5 		ldr	r3, [r3, #20]
 11223 00ac 030052E1 		cmp	r2, r3
 11224 00b0 0100003A 		bcc	.L713
 11225              		.loc 1 4879 5 discriminator 8
 11226 00b4 0230E0E3 		mvn	r3, #2
 11227              		.loc 1 4879 5
 11228 00b8 9E0000EA 		b	.L710
 11229              	.L713:
 11230              		.loc 1 4879 5 discriminator 9
 11231 00bc 24301BE5 		ldr	r3, [fp, #-36]
 11232 00c0 2334A0E1 		lsr	r3, r3, #8
 11233 00c4 8322A0E1 		lsl	r2, r3, #5
 11234 00c8 20301BE5 		ldr	r3, [fp, #-32]
 11235 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11236 00d0 033082E0 		add	r3, r2, r3
 11237 00d4 08300BE5 		str	r3, [fp, #-8]
 11238 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11239 00dc 0300A0E1 		mov	r0, r3
 11240 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11241 00e4 0C000BE5 		str	r0, [fp, #-12]
 11242              		.loc 1 4879 5 discriminator 1
 11243 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 11244 00ec FF3803E2 		and	r3, r3, #16711680
 11245 00f0 020853E3 		cmp	r3, #131072
 11246 00f4 0100001A 		bne	.L714
 11247              		.loc 1 4879 5 discriminator 10
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 285


 11248 00f8 0830E0E3 		mvn	r3, #8
 11249              		.loc 1 4879 5
 11250 00fc 8D0000EA 		b	.L710
 11251              	.L714:
 11252              		.loc 1 4879 5 discriminator 11
 11253 0100 0C301BE5 		ldr	r3, [fp, #-12]
 11254 0104 233CA0E1 		lsr	r3, r3, #24
 11255 0108 030053E3 		cmp	r3, #3
 11256 010c 0100000A 		beq	.L715
 11257              		.loc 1 4879 5 discriminator 12
 11258 0110 0130E0E3 		mvn	r3, #1
 11259              		.loc 1 4879 5
 11260 0114 870000EA 		b	.L710
 11261              	.L715:
 11262              		.loc 1 4879 5 discriminator 13
 11263 0118 24301BE5 		ldr	r3, [fp, #-36]
 11264 011c 7F2003E2 		and	r2, r3, #127
 11265 0120 08301BE5 		ldr	r3, [fp, #-8]
 11266 0124 143093E5 		ldr	r3, [r3, #20]
 11267 0128 030052E1 		cmp	r2, r3
 11268 012c 0100003A 		bcc	.L716
 11269              		.loc 1 4879 5 discriminator 14
 11270 0130 0230E0E3 		mvn	r3, #2
 11271              		.loc 1 4879 5
 11272 0134 7F0000EA 		b	.L710
 11273              	.L716:
 11274              		.loc 1 4879 5 discriminator 15
 11275 0138 24301BE5 		ldr	r3, [fp, #-36]
 11276 013c 7F3003E2 		and	r3, r3, #127
 11277 0140 8322A0E1 		lsl	r2, r3, #5
 11278 0144 08301BE5 		ldr	r3, [fp, #-8]
 11279 0148 0C3093E5 		ldr	r3, [r3, #12]
 11280 014c 033082E0 		add	r3, r2, r3
 11281 0150 08300BE5 		str	r3, [fp, #-8]
 11282 0154 08301BE5 		ldr	r3, [fp, #-8]
 11283 0158 0300A0E1 		mov	r0, r3
 11284 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11285 0160 0C000BE5 		str	r0, [fp, #-12]
 11286              		.loc 1 4879 5 discriminator 1
 11287 0164 0C301BE5 		ldr	r3, [fp, #-12]
 11288 0168 FF3803E2 		and	r3, r3, #16711680
 11289 016c 020853E3 		cmp	r3, #131072
 11290 0170 0100001A 		bne	.L717
 11291              		.loc 1 4879 5 discriminator 16
 11292 0174 0830E0E3 		mvn	r3, #8
 11293              		.loc 1 4879 5
 11294 0178 6E0000EA 		b	.L710
 11295              	.L717:
 11296              		.loc 1 4879 5 discriminator 17
 11297 017c 0C301BE5 		ldr	r3, [fp, #-12]
 11298 0180 233CA0E1 		lsr	r3, r3, #24
 11299 0184 030053E3 		cmp	r3, #3
 11300 0188 0100000A 		beq	.L712
 11301              		.loc 1 4879 5 discriminator 18
 11302 018c 0130E0E3 		mvn	r3, #1
 11303              		.loc 1 4879 5
 11304 0190 680000EA 		b	.L710
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 286


 11305              	.L712:
4880:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
4881:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4882:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 11306              		.loc 1 4882 5 is_stmt 1
 11307 0194 08301BE5 		ldr	r3, [fp, #-8]
 11308 0198 083093E5 		ldr	r3, [r3, #8]
 11309 019c 023003E2 		and	r3, r3, #2
 11310 01a0 000053E3 		cmp	r3, #0
 11311 01a4 0100001A 		bne	.L718
 11312              		.loc 1 4882 5 is_stmt 0 discriminator 1
 11313 01a8 0630E0E3 		mvn	r3, #6
 11314              		.loc 1 4882 5
 11315 01ac 610000EA 		b	.L710
 11316              	.L718:
4883:../../Source/Kernel/rme_kernel.c **** 
4884:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4885:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Prc,struct RME_Cap_Prc*,Prc_Del);
 11317              		.loc 1 4885 5 is_stmt 1
 11318 01b0 08301BE5 		ldr	r3, [fp, #-8]
 11319 01b4 142093E5 		ldr	r2, [r3, #20]
 11320 01b8 28301BE5 		ldr	r3, [fp, #-40]
 11321 01bc 030052E1 		cmp	r2, r3
 11322 01c0 0100008A 		bhi	.L719
 11323              		.loc 1 4885 5 is_stmt 0 discriminator 1
 11324 01c4 0230E0E3 		mvn	r3, #2
 11325              		.loc 1 4885 5
 11326 01c8 5A0000EA 		b	.L710
 11327              	.L719:
 11328              		.loc 1 4885 5 discriminator 2
 11329 01cc 28301BE5 		ldr	r3, [fp, #-40]
 11330 01d0 8322A0E1 		lsl	r2, r3, #5
 11331 01d4 08301BE5 		ldr	r3, [fp, #-8]
 11332 01d8 0C3093E5 		ldr	r3, [r3, #12]
 11333 01dc 033082E0 		add	r3, r2, r3
 11334 01e0 10300BE5 		str	r3, [fp, #-16]
4886:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
4887:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Prc_Del,Type_Stat,RME_CAP_TYPE_PRC);
 11335              		.loc 1 4887 5 is_stmt 1
 11336 01e4 10301BE5 		ldr	r3, [fp, #-16]
 11337 01e8 0300A0E1 		mov	r0, r3
 11338 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11339 01f0 0C000BE5 		str	r0, [fp, #-12]
 11340              		.loc 1 4887 5 is_stmt 0 discriminator 1
 11341 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 11342 01f8 FF3803E2 		and	r3, r3, #16711680
 11343 01fc 020853E3 		cmp	r3, #131072
 11344 0200 0100000A 		beq	.L720
 11345 0204 0830E0E3 		mvn	r3, #8
 11346              		.loc 1 4887 5
 11347 0208 4A0000EA 		b	.L710
 11348              	.L720:
 11349              		.loc 1 4887 5 discriminator 2
 11350 020c 0C301BE5 		ldr	r3, [fp, #-12]
 11351 0210 233CA0E1 		lsr	r3, r3, #24
 11352 0214 050053E3 		cmp	r3, #5
 11353 0218 0100000A 		beq	.L721
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 287


 11354              		.loc 1 4887 5 discriminator 3
 11355 021c 0130E0E3 		mvn	r3, #1
 11356              		.loc 1 4887 5
 11357 0220 440000EA 		b	.L710
 11358              	.L721:
 11359              		.loc 1 4887 5 discriminator 4
 11360 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 11361 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 11362 022c 002093E5 		ldr	r2, [r3]
 11363 0230 10301BE5 		ldr	r3, [fp, #-16]
 11364 0234 103093E5 		ldr	r3, [r3, #16]
 11365 0238 0310A0E1 		mov	r1, r3
 11366 023c 0200A0E1 		mov	r0, r2
 11367 0240 FEFFFFEB 		bl	_RME_Diff
 11368 0244 0030A0E1 		mov	r3, r0
 11369              		.loc 1 4887 5 discriminator 1
 11370 0248 0A0053E3 		cmp	r3, #10
 11371 024c 0100008A 		bhi	.L722
 11372              		.loc 1 4887 5 discriminator 5
 11373 0250 0730E0E3 		mvn	r3, #7
 11374              		.loc 1 4887 5
 11375 0254 370000EA 		b	.L710
 11376              	.L722:
 11377              		.loc 1 4887 5 discriminator 6
 11378 0258 10301BE5 		ldr	r3, [fp, #-16]
 11379 025c 043093E5 		ldr	r3, [r3, #4]
 11380 0260 000053E3 		cmp	r3, #0
 11381 0264 0B00000A 		beq	.L723
 11382              		.loc 1 4887 5 discriminator 7
 11383 0268 0C301BE5 		ldr	r3, [fp, #-12]
 11384 026c 7330FFE6 		uxth	r3, r3
 11385 0270 000053E3 		cmp	r3, #0
 11386 0274 0500001A 		bne	.L724
 11387              		.loc 1 4887 5 discriminator 9
 11388 0278 10001BE5 		ldr	r0, [fp, #-16]
 11389 027c 0C301BE5 		ldr	r3, [fp, #-12]
 11390 0280 FF38C3E3 		bic	r3, r3, #16711680
 11391 0284 0320A0E1 		mov	r2, r3
 11392 0288 0C101BE5 		ldr	r1, [fp, #-12]
 11393 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11394              	.L724:
 11395              		.loc 1 4887 5 discriminator 11
 11396 0290 0530E0E3 		mvn	r3, #5
 11397              		.loc 1 4887 5
 11398 0294 270000EA 		b	.L710
 11399              	.L723:
 11400              		.loc 1 4887 5 discriminator 8
 11401 0298 0C301BE5 		ldr	r3, [fp, #-12]
 11402 029c 7330FFE6 		uxth	r3, r3
 11403 02a0 000053E3 		cmp	r3, #0
 11404 02a4 0800000A 		beq	.L725
 11405              		.loc 1 4887 5 discriminator 12
 11406 02a8 003000E3 		movw	r3, #:lower16:.LC6
 11407 02ac 003040E3 		movt	r3, #:upper16:.LC6
 11408 02b0 002000E3 		movw	r2, #:lower16:.LC7
 11409 02b4 002040E3 		movt	r2, #:upper16:.LC7
 11410 02b8 171301E3 		movw	r1, #4887
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 288


 11411 02bc 000000E3 		movw	r0, #:lower16:.LC8
 11412 02c0 000040E3 		movt	r0, #:upper16:.LC8
 11413 02c4 FEFFFFEB 		bl	RME_Log
 11414              	.L726:
 11415              		.loc 1 4887 5
 11416 02c8 FEFFFFEA 		b	.L726
 11417              	.L725:
4888:../../Source/Kernel/rme_kernel.c **** 
4889:../../Source/Kernel/rme_kernel.c ****     /* Remember for deletion */
4890:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=Prc_Del->Cpt;
 11418              		.loc 1 4890 12 is_stmt 1
 11419 02cc 10301BE5 		ldr	r3, [fp, #-16]
 11420 02d0 143093E5 		ldr	r3, [r3, #20]
 11421 02d4 14300BE5 		str	r3, [fp, #-20]
4891:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4892:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=Prc_Del->Pgt;
 11422              		.loc 1 4892 12
 11423 02d8 10301BE5 		ldr	r3, [fp, #-16]
 11424 02dc 183093E5 		ldr	r3, [r3, #24]
 11425 02e0 18300BE5 		str	r3, [fp, #-24]
4893:../../Source/Kernel/rme_kernel.c **** #endif
4894:../../Source/Kernel/rme_kernel.c **** 
4895:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
4896:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Prc_Del,Type_Stat);
 11426              		.loc 1 4896 5
 11427 02e4 10301BE5 		ldr	r3, [fp, #-16]
 11428 02e8 0020A0E3 		mov	r2, #0
 11429 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 11430 02f0 0300A0E1 		mov	r0, r3
 11431 02f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11432 02f8 0030A0E1 		mov	r3, r0
 11433              		.loc 1 4896 5 is_stmt 0 discriminator 1
 11434 02fc 000053E3 		cmp	r3, #0
 11435 0300 0100001A 		bne	.L727
 11436 0304 0030E0E3 		mvn	r3, #0
 11437              		.loc 1 4896 5
 11438 0308 0A0000EA 		b	.L710
 11439              	.L727:
4897:../../Source/Kernel/rme_kernel.c **** 
4898:../../Source/Kernel/rme_kernel.c ****     /* Dereference caps */
4899:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),-1);
 11440              		.loc 1 4899 5 is_stmt 1
 11441 030c 14301BE5 		ldr	r3, [fp, #-20]
 11442 0310 043083E2 		add	r3, r3, #4
 11443 0314 0010E0E3 		mvn	r1, #0
 11444 0318 0300A0E1 		mov	r0, r3
 11445 031c FEFFFFEB 		bl	_RME_Fetch_Add_Single
4900:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4901:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),-1);
 11446              		.loc 1 4901 5
 11447 0320 18301BE5 		ldr	r3, [fp, #-24]
 11448 0324 043083E2 		add	r3, r3, #4
 11449 0328 0010E0E3 		mvn	r1, #0
 11450 032c 0300A0E1 		mov	r0, r3
 11451 0330 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4902:../../Source/Kernel/rme_kernel.c **** #endif
4903:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 289


4904:../../Source/Kernel/rme_kernel.c ****     return 0;
 11452              		.loc 1 4904 12
 11453 0334 0030A0E3 		mov	r3, #0
 11454              	.L710:
4905:../../Source/Kernel/rme_kernel.c **** }
 11455              		.loc 1 4905 1
 11456 0338 0300A0E1 		mov	r0, r3
 11457 033c 04D04BE2 		sub	sp, fp, #4
 11458              		.cfi_def_cfa 13, 8
 11459              		@ sp needed
 11460 0340 0088BDE8 		pop	{fp, pc}
 11461              		.cfi_endproc
 11462              	.LFE52:
 11464              		.section	.text._RME_Prc_Cpt,"ax",%progbits
 11465              		.align	2
 11466              		.syntax unified
 11467              		.arm
 11469              	_RME_Prc_Cpt:
 11470              	.LFB53:
4906:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Del *************************************************/
4907:../../Source/Kernel/rme_kernel.c **** 
4908:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Cpt ******************************************************
4909:../../Source/Kernel/rme_kernel.c **** Description : Change a process's capability table.
4910:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4911:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4912:../../Source/Kernel/rme_kernel.c ****                                   created already.
4913:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4914:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4915:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4916:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4917:../../Source/Kernel/rme_kernel.c **** Output      : None.
4918:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4919:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4920:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Cpt(struct RME_Cap_Cpt* Cpt,
4921:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4922:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt)
4923:../../Source/Kernel/rme_kernel.c **** {
 11471              		.loc 1 4923 1
 11472              		.cfi_startproc
 11473              		@ args = 0, pretend = 0, frame = 32
 11474              		@ frame_needed = 1, uses_anonymous_args = 0
 11475 0000 00482DE9 		push	{fp, lr}
 11476              		.cfi_def_cfa_offset 8
 11477              		.cfi_offset 11, -8
 11478              		.cfi_offset 14, -4
 11479 0004 04B08DE2 		add	fp, sp, #4
 11480              		.cfi_def_cfa 11, 4
 11481 0008 20D04DE2 		sub	sp, sp, #32
 11482 000c 18000BE5 		str	r0, [fp, #-24]
 11483 0010 1C100BE5 		str	r1, [fp, #-28]
 11484 0014 20200BE5 		str	r2, [fp, #-32]
4924:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4925:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_New;
4926:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Old;
4927:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4928:../../Source/Kernel/rme_kernel.c ****     
4929:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 290


4930:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11485              		.loc 1 4930 5
 11486 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11487 001c 803003E2 		and	r3, r3, #128
 11488 0020 000053E3 		cmp	r3, #0
 11489 0024 1C00001A 		bne	.L729
 11490              		.loc 1 4930 5 is_stmt 0 discriminator 1
 11491 0028 18301BE5 		ldr	r3, [fp, #-24]
 11492 002c 142093E5 		ldr	r2, [r3, #20]
 11493 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11494 0034 030052E1 		cmp	r2, r3
 11495 0038 0100008A 		bhi	.L730
 11496              		.loc 1 4930 5 discriminator 3
 11497 003c 0230E0E3 		mvn	r3, #2
 11498              		.loc 1 4930 5
 11499 0040 E30000EA 		b	.L731
 11500              	.L730:
 11501              		.loc 1 4930 5 discriminator 4
 11502 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11503 0048 8322A0E1 		lsl	r2, r3, #5
 11504 004c 18301BE5 		ldr	r3, [fp, #-24]
 11505 0050 0C3093E5 		ldr	r3, [r3, #12]
 11506 0054 033082E0 		add	r3, r2, r3
 11507 0058 08300BE5 		str	r3, [fp, #-8]
 11508 005c 08301BE5 		ldr	r3, [fp, #-8]
 11509 0060 0300A0E1 		mov	r0, r3
 11510 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11511 0068 10000BE5 		str	r0, [fp, #-16]
 11512              		.loc 1 4930 5 discriminator 1
 11513 006c 10301BE5 		ldr	r3, [fp, #-16]
 11514 0070 FF3803E2 		and	r3, r3, #16711680
 11515 0074 020853E3 		cmp	r3, #131072
 11516 0078 0100001A 		bne	.L732
 11517              		.loc 1 4930 5 discriminator 5
 11518 007c 0830E0E3 		mvn	r3, #8
 11519              		.loc 1 4930 5
 11520 0080 D30000EA 		b	.L731
 11521              	.L732:
 11522              		.loc 1 4930 5 discriminator 6
 11523 0084 10301BE5 		ldr	r3, [fp, #-16]
 11524 0088 233CA0E1 		lsr	r3, r3, #24
 11525 008c 050053E3 		cmp	r3, #5
 11526 0090 3F00000A 		beq	.L733
 11527              		.loc 1 4930 5 discriminator 7
 11528 0094 0130E0E3 		mvn	r3, #1
 11529              		.loc 1 4930 5
 11530 0098 CD0000EA 		b	.L731
 11531              	.L729:
 11532              		.loc 1 4930 5 discriminator 2
 11533 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11534 00a0 2324A0E1 		lsr	r2, r3, #8
 11535 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11536 00a8 143093E5 		ldr	r3, [r3, #20]
 11537 00ac 030052E1 		cmp	r2, r3
 11538 00b0 0100003A 		bcc	.L734
 11539              		.loc 1 4930 5 discriminator 8
 11540 00b4 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 291


 11541              		.loc 1 4930 5
 11542 00b8 C50000EA 		b	.L731
 11543              	.L734:
 11544              		.loc 1 4930 5 discriminator 9
 11545 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11546 00c0 2334A0E1 		lsr	r3, r3, #8
 11547 00c4 8322A0E1 		lsl	r2, r3, #5
 11548 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11549 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11550 00d0 033082E0 		add	r3, r2, r3
 11551 00d4 08300BE5 		str	r3, [fp, #-8]
 11552 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11553 00dc 0300A0E1 		mov	r0, r3
 11554 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11555 00e4 10000BE5 		str	r0, [fp, #-16]
 11556              		.loc 1 4930 5 discriminator 1
 11557 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11558 00ec FF3803E2 		and	r3, r3, #16711680
 11559 00f0 020853E3 		cmp	r3, #131072
 11560 00f4 0100001A 		bne	.L735
 11561              		.loc 1 4930 5 discriminator 10
 11562 00f8 0830E0E3 		mvn	r3, #8
 11563              		.loc 1 4930 5
 11564 00fc B40000EA 		b	.L731
 11565              	.L735:
 11566              		.loc 1 4930 5 discriminator 11
 11567 0100 10301BE5 		ldr	r3, [fp, #-16]
 11568 0104 233CA0E1 		lsr	r3, r3, #24
 11569 0108 030053E3 		cmp	r3, #3
 11570 010c 0100000A 		beq	.L736
 11571              		.loc 1 4930 5 discriminator 12
 11572 0110 0130E0E3 		mvn	r3, #1
 11573              		.loc 1 4930 5
 11574 0114 AE0000EA 		b	.L731
 11575              	.L736:
 11576              		.loc 1 4930 5 discriminator 13
 11577 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11578 011c 7F2003E2 		and	r2, r3, #127
 11579 0120 08301BE5 		ldr	r3, [fp, #-8]
 11580 0124 143093E5 		ldr	r3, [r3, #20]
 11581 0128 030052E1 		cmp	r2, r3
 11582 012c 0100003A 		bcc	.L737
 11583              		.loc 1 4930 5 discriminator 14
 11584 0130 0230E0E3 		mvn	r3, #2
 11585              		.loc 1 4930 5
 11586 0134 A60000EA 		b	.L731
 11587              	.L737:
 11588              		.loc 1 4930 5 discriminator 15
 11589 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11590 013c 7F3003E2 		and	r3, r3, #127
 11591 0140 8322A0E1 		lsl	r2, r3, #5
 11592 0144 08301BE5 		ldr	r3, [fp, #-8]
 11593 0148 0C3093E5 		ldr	r3, [r3, #12]
 11594 014c 033082E0 		add	r3, r2, r3
 11595 0150 08300BE5 		str	r3, [fp, #-8]
 11596 0154 08301BE5 		ldr	r3, [fp, #-8]
 11597 0158 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 292


 11598 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11599 0160 10000BE5 		str	r0, [fp, #-16]
 11600              		.loc 1 4930 5 discriminator 1
 11601 0164 10301BE5 		ldr	r3, [fp, #-16]
 11602 0168 FF3803E2 		and	r3, r3, #16711680
 11603 016c 020853E3 		cmp	r3, #131072
 11604 0170 0100001A 		bne	.L738
 11605              		.loc 1 4930 5 discriminator 16
 11606 0174 0830E0E3 		mvn	r3, #8
 11607              		.loc 1 4930 5
 11608 0178 950000EA 		b	.L731
 11609              	.L738:
 11610              		.loc 1 4930 5 discriminator 17
 11611 017c 10301BE5 		ldr	r3, [fp, #-16]
 11612 0180 233CA0E1 		lsr	r3, r3, #24
 11613 0184 050053E3 		cmp	r3, #5
 11614 0188 0100000A 		beq	.L733
 11615              		.loc 1 4930 5 discriminator 18
 11616 018c 0130E0E3 		mvn	r3, #1
 11617              		.loc 1 4930 5
 11618 0190 8F0000EA 		b	.L731
 11619              	.L733:
4931:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4932:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11620              		.loc 1 4932 5 is_stmt 1
 11621 0194 20301BE5 		ldr	r3, [fp, #-32]
 11622 0198 803003E2 		and	r3, r3, #128
 11623 019c 000053E3 		cmp	r3, #0
 11624 01a0 1C00001A 		bne	.L739
 11625              		.loc 1 4932 5 is_stmt 0 discriminator 1
 11626 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11627 01a8 142093E5 		ldr	r2, [r3, #20]
 11628 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11629 01b0 030052E1 		cmp	r2, r3
 11630 01b4 0100008A 		bhi	.L740
 11631              		.loc 1 4932 5 discriminator 3
 11632 01b8 0230E0E3 		mvn	r3, #2
 11633              		.loc 1 4932 5
 11634 01bc 840000EA 		b	.L731
 11635              	.L740:
 11636              		.loc 1 4932 5 discriminator 4
 11637 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11638 01c4 8322A0E1 		lsl	r2, r3, #5
 11639 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11640 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11641 01d0 033082E0 		add	r3, r2, r3
 11642 01d4 0C300BE5 		str	r3, [fp, #-12]
 11643 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11644 01dc 0300A0E1 		mov	r0, r3
 11645 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11646 01e4 10000BE5 		str	r0, [fp, #-16]
 11647              		.loc 1 4932 5 discriminator 1
 11648 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11649 01ec FF3803E2 		and	r3, r3, #16711680
 11650 01f0 020853E3 		cmp	r3, #131072
 11651 01f4 0100001A 		bne	.L741
 11652              		.loc 1 4932 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 293


 11653 01f8 0830E0E3 		mvn	r3, #8
 11654              		.loc 1 4932 5
 11655 01fc 740000EA 		b	.L731
 11656              	.L741:
 11657              		.loc 1 4932 5 discriminator 6
 11658 0200 10301BE5 		ldr	r3, [fp, #-16]
 11659 0204 233CA0E1 		lsr	r3, r3, #24
 11660 0208 030053E3 		cmp	r3, #3
 11661 020c 3F00000A 		beq	.L742
 11662              		.loc 1 4932 5 discriminator 7
 11663 0210 0130E0E3 		mvn	r3, #1
 11664              		.loc 1 4932 5
 11665 0214 6E0000EA 		b	.L731
 11666              	.L739:
 11667              		.loc 1 4932 5 discriminator 2
 11668 0218 20301BE5 		ldr	r3, [fp, #-32]
 11669 021c 2324A0E1 		lsr	r2, r3, #8
 11670 0220 18301BE5 		ldr	r3, [fp, #-24]
 11671 0224 143093E5 		ldr	r3, [r3, #20]
 11672 0228 030052E1 		cmp	r2, r3
 11673 022c 0100003A 		bcc	.L743
 11674              		.loc 1 4932 5 discriminator 8
 11675 0230 0230E0E3 		mvn	r3, #2
 11676              		.loc 1 4932 5
 11677 0234 660000EA 		b	.L731
 11678              	.L743:
 11679              		.loc 1 4932 5 discriminator 9
 11680 0238 20301BE5 		ldr	r3, [fp, #-32]
 11681 023c 2334A0E1 		lsr	r3, r3, #8
 11682 0240 8322A0E1 		lsl	r2, r3, #5
 11683 0244 18301BE5 		ldr	r3, [fp, #-24]
 11684 0248 0C3093E5 		ldr	r3, [r3, #12]
 11685 024c 033082E0 		add	r3, r2, r3
 11686 0250 0C300BE5 		str	r3, [fp, #-12]
 11687 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11688 0258 0300A0E1 		mov	r0, r3
 11689 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11690 0260 10000BE5 		str	r0, [fp, #-16]
 11691              		.loc 1 4932 5 discriminator 1
 11692 0264 10301BE5 		ldr	r3, [fp, #-16]
 11693 0268 FF3803E2 		and	r3, r3, #16711680
 11694 026c 020853E3 		cmp	r3, #131072
 11695 0270 0100001A 		bne	.L744
 11696              		.loc 1 4932 5 discriminator 10
 11697 0274 0830E0E3 		mvn	r3, #8
 11698              		.loc 1 4932 5
 11699 0278 550000EA 		b	.L731
 11700              	.L744:
 11701              		.loc 1 4932 5 discriminator 11
 11702 027c 10301BE5 		ldr	r3, [fp, #-16]
 11703 0280 233CA0E1 		lsr	r3, r3, #24
 11704 0284 030053E3 		cmp	r3, #3
 11705 0288 0100000A 		beq	.L745
 11706              		.loc 1 4932 5 discriminator 12
 11707 028c 0130E0E3 		mvn	r3, #1
 11708              		.loc 1 4932 5
 11709 0290 4F0000EA 		b	.L731
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 294


 11710              	.L745:
 11711              		.loc 1 4932 5 discriminator 13
 11712 0294 20301BE5 		ldr	r3, [fp, #-32]
 11713 0298 7F2003E2 		and	r2, r3, #127
 11714 029c 0C301BE5 		ldr	r3, [fp, #-12]
 11715 02a0 143093E5 		ldr	r3, [r3, #20]
 11716 02a4 030052E1 		cmp	r2, r3
 11717 02a8 0100003A 		bcc	.L746
 11718              		.loc 1 4932 5 discriminator 14
 11719 02ac 0230E0E3 		mvn	r3, #2
 11720              		.loc 1 4932 5
 11721 02b0 470000EA 		b	.L731
 11722              	.L746:
 11723              		.loc 1 4932 5 discriminator 15
 11724 02b4 20301BE5 		ldr	r3, [fp, #-32]
 11725 02b8 7F3003E2 		and	r3, r3, #127
 11726 02bc 8322A0E1 		lsl	r2, r3, #5
 11727 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 11728 02c4 0C3093E5 		ldr	r3, [r3, #12]
 11729 02c8 033082E0 		add	r3, r2, r3
 11730 02cc 0C300BE5 		str	r3, [fp, #-12]
 11731 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 11732 02d4 0300A0E1 		mov	r0, r3
 11733 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11734 02dc 10000BE5 		str	r0, [fp, #-16]
 11735              		.loc 1 4932 5 discriminator 1
 11736 02e0 10301BE5 		ldr	r3, [fp, #-16]
 11737 02e4 FF3803E2 		and	r3, r3, #16711680
 11738 02e8 020853E3 		cmp	r3, #131072
 11739 02ec 0100001A 		bne	.L747
 11740              		.loc 1 4932 5 discriminator 16
 11741 02f0 0830E0E3 		mvn	r3, #8
 11742              		.loc 1 4932 5
 11743 02f4 360000EA 		b	.L731
 11744              	.L747:
 11745              		.loc 1 4932 5 discriminator 17
 11746 02f8 10301BE5 		ldr	r3, [fp, #-16]
 11747 02fc 233CA0E1 		lsr	r3, r3, #24
 11748 0300 030053E3 		cmp	r3, #3
 11749 0304 0100000A 		beq	.L742
 11750              		.loc 1 4932 5 discriminator 18
 11751 0308 0130E0E3 		mvn	r3, #1
 11752              		.loc 1 4932 5
 11753 030c 300000EA 		b	.L731
 11754              	.L742:
4933:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_New,Type_Stat);     
4934:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4935:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_CPT);
 11755              		.loc 1 4935 5 is_stmt 1
 11756 0310 08301BE5 		ldr	r3, [fp, #-8]
 11757 0314 083093E5 		ldr	r3, [r3, #8]
 11758 0318 043003E2 		and	r3, r3, #4
 11759 031c 000053E3 		cmp	r3, #0
 11760 0320 0100001A 		bne	.L748
 11761              		.loc 1 4935 5 is_stmt 0 discriminator 1
 11762 0324 0630E0E3 		mvn	r3, #6
 11763              		.loc 1 4935 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 295


 11764 0328 290000EA 		b	.L731
 11765              	.L748:
4936:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_New,RME_CPT_FLAG_PRC_CPT);
 11766              		.loc 1 4936 5 is_stmt 1
 11767 032c 0C301BE5 		ldr	r3, [fp, #-12]
 11768 0330 083093E5 		ldr	r3, [r3, #8]
 11769 0334 803003E2 		and	r3, r3, #128
 11770 0338 000053E3 		cmp	r3, #0
 11771 033c 0100001A 		bne	.L749
 11772              		.loc 1 4936 5 is_stmt 0 discriminator 1
 11773 0340 0630E0E3 		mvn	r3, #6
 11774              		.loc 1 4936 5
 11775 0344 220000EA 		b	.L731
 11776              	.L749:
4937:../../Source/Kernel/rme_kernel.c ****     
4938:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
4939:../../Source/Kernel/rme_kernel.c ****     Cpt_New=RME_CAP_CONV_ROOT(Cpt_New,struct RME_Cap_Cpt*);
 11777              		.loc 1 4939 13 is_stmt 1
 11778 0348 0C301BE5 		ldr	r3, [fp, #-12]
 11779 034c 003093E5 		ldr	r3, [r3]
 11780 0350 7330FFE6 		uxth	r3, r3
 11781 0354 000053E3 		cmp	r3, #0
 11782 0358 0200000A 		beq	.L750
 11783              		.loc 1 4939 13 is_stmt 0 discriminator 1
 11784 035c 0C301BE5 		ldr	r3, [fp, #-12]
 11785 0360 043093E5 		ldr	r3, [r3, #4]
 11786 0364 000000EA 		b	.L751
 11787              	.L750:
 11788              		.loc 1 4939 13 discriminator 2
 11789 0368 0C301BE5 		ldr	r3, [fp, #-12]
 11790              	.L751:
 11791              		.loc 1 4939 12 is_stmt 1 discriminator 4
 11792 036c 0C300BE5 		str	r3, [fp, #-12]
4940:../../Source/Kernel/rme_kernel.c ****     
4941:../../Source/Kernel/rme_kernel.c ****     /* Commit the change */
4942:../../Source/Kernel/rme_kernel.c ****     Cpt_Old=Prc_Op->Cpt;
 11793              		.loc 1 4942 12
 11794 0370 08301BE5 		ldr	r3, [fp, #-8]
 11795 0374 143093E5 		ldr	r3, [r3, #20]
 11796 0378 14300BE5 		str	r3, [fp, #-20]
4943:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Cpt)),
 11797              		.loc 1 4943 8
 11798 037c 08301BE5 		ldr	r3, [fp, #-8]
 11799 0380 143083E2 		add	r3, r3, #20
 11800 0384 14101BE5 		ldr	r1, [fp, #-20]
 11801 0388 0C201BE5 		ldr	r2, [fp, #-12]
 11802 038c 0300A0E1 		mov	r0, r3
 11803 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11804 0394 0030A0E1 		mov	r3, r0
 11805              		.loc 1 4943 7 discriminator 1
 11806 0398 000053E3 		cmp	r3, #0
 11807 039c 0100001A 		bne	.L752
4944:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Cpt_Old,(rme_ptr_t)Cpt_New)==RME_CASFAIL)
4945:../../Source/Kernel/rme_kernel.c ****     {
4946:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4947:../../Source/Kernel/rme_kernel.c ****         
4948:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 296


 11808              		.loc 1 4948 16
 11809 03a0 C930E0E3 		mvn	r3, #201
 11810 03a4 0A0000EA 		b	.L731
 11811              	.L752:
4949:../../Source/Kernel/rme_kernel.c ****     }
4950:../../Source/Kernel/rme_kernel.c ****     else
4951:../../Source/Kernel/rme_kernel.c ****     {
4952:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4953:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4954:../../Source/Kernel/rme_kernel.c ****     }
4955:../../Source/Kernel/rme_kernel.c ****     
4956:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
4957:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_New->Head.Root_Ref),1);
 11812              		.loc 1 4957 5
 11813 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 11814 03ac 043083E2 		add	r3, r3, #4
 11815 03b0 0110A0E3 		mov	r1, #1
 11816 03b4 0300A0E1 		mov	r0, r3
 11817 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4958:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_Old->Head.Root_Ref),-1);
 11818              		.loc 1 4958 5
 11819 03bc 14301BE5 		ldr	r3, [fp, #-20]
 11820 03c0 043083E2 		add	r3, r3, #4
 11821 03c4 0010E0E3 		mvn	r1, #0
 11822 03c8 0300A0E1 		mov	r0, r3
 11823 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
4959:../../Source/Kernel/rme_kernel.c **** 
4960:../../Source/Kernel/rme_kernel.c ****     return 0;
 11824              		.loc 1 4960 12
 11825 03d0 0030A0E3 		mov	r3, #0
 11826              	.L731:
4961:../../Source/Kernel/rme_kernel.c **** }
 11827              		.loc 1 4961 1
 11828 03d4 0300A0E1 		mov	r0, r3
 11829 03d8 04D04BE2 		sub	sp, fp, #4
 11830              		.cfi_def_cfa 13, 8
 11831              		@ sp needed
 11832 03dc 0088BDE8 		pop	{fp, pc}
 11833              		.cfi_endproc
 11834              	.LFE53:
 11836              		.section	.text._RME_Prc_Pgt,"ax",%progbits
 11837              		.align	2
 11838              		.syntax unified
 11839              		.arm
 11841              	_RME_Prc_Pgt:
 11842              	.LFB54:
4962:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Cpt *************************************************/
4963:../../Source/Kernel/rme_kernel.c **** 
4964:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Pgt ******************************************************
4965:../../Source/Kernel/rme_kernel.c **** Description : Change a process's page table.
4966:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4967:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4968:../../Source/Kernel/rme_kernel.c ****                                   created already.
4969:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4970:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4971:../../Source/Kernel/rme_kernel.c ****                                   this process.
4972:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 297


4973:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4974:../../Source/Kernel/rme_kernel.c ****                                   address.
4975:../../Source/Kernel/rme_kernel.c **** Output      : None.
4976:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4977:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4978:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4979:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4980:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4981:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4982:../../Source/Kernel/rme_kernel.c **** #else
4983:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4984:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4985:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4986:../../Source/Kernel/rme_kernel.c **** #endif
4987:../../Source/Kernel/rme_kernel.c **** {
 11843              		.loc 1 4987 1
 11844              		.cfi_startproc
 11845              		@ args = 0, pretend = 0, frame = 32
 11846              		@ frame_needed = 1, uses_anonymous_args = 0
 11847 0000 00482DE9 		push	{fp, lr}
 11848              		.cfi_def_cfa_offset 8
 11849              		.cfi_offset 11, -8
 11850              		.cfi_offset 14, -4
 11851 0004 04B08DE2 		add	fp, sp, #4
 11852              		.cfi_def_cfa 11, 4
 11853 0008 20D04DE2 		sub	sp, sp, #32
 11854 000c 18000BE5 		str	r0, [fp, #-24]
 11855 0010 1C100BE5 		str	r1, [fp, #-28]
 11856 0014 20200BE5 		str	r2, [fp, #-32]
4988:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4989:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4990:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4991:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Old;
4992:../../Source/Kernel/rme_kernel.c **** #else
4993:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Old;
4994:../../Source/Kernel/rme_kernel.c **** #endif
4995:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4996:../../Source/Kernel/rme_kernel.c ****     
4997:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4998:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11857              		.loc 1 4998 5
 11858 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11859 001c 803003E2 		and	r3, r3, #128
 11860 0020 000053E3 		cmp	r3, #0
 11861 0024 1C00001A 		bne	.L754
 11862              		.loc 1 4998 5 is_stmt 0 discriminator 1
 11863 0028 18301BE5 		ldr	r3, [fp, #-24]
 11864 002c 142093E5 		ldr	r2, [r3, #20]
 11865 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11866 0034 030052E1 		cmp	r2, r3
 11867 0038 0100008A 		bhi	.L755
 11868              		.loc 1 4998 5 discriminator 3
 11869 003c 0230E0E3 		mvn	r3, #2
 11870              		.loc 1 4998 5
 11871 0040 E30000EA 		b	.L756
 11872              	.L755:
 11873              		.loc 1 4998 5 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 298


 11874 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11875 0048 8322A0E1 		lsl	r2, r3, #5
 11876 004c 18301BE5 		ldr	r3, [fp, #-24]
 11877 0050 0C3093E5 		ldr	r3, [r3, #12]
 11878 0054 033082E0 		add	r3, r2, r3
 11879 0058 08300BE5 		str	r3, [fp, #-8]
 11880 005c 08301BE5 		ldr	r3, [fp, #-8]
 11881 0060 0300A0E1 		mov	r0, r3
 11882 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11883 0068 10000BE5 		str	r0, [fp, #-16]
 11884              		.loc 1 4998 5 discriminator 1
 11885 006c 10301BE5 		ldr	r3, [fp, #-16]
 11886 0070 FF3803E2 		and	r3, r3, #16711680
 11887 0074 020853E3 		cmp	r3, #131072
 11888 0078 0100001A 		bne	.L757
 11889              		.loc 1 4998 5 discriminator 5
 11890 007c 0830E0E3 		mvn	r3, #8
 11891              		.loc 1 4998 5
 11892 0080 D30000EA 		b	.L756
 11893              	.L757:
 11894              		.loc 1 4998 5 discriminator 6
 11895 0084 10301BE5 		ldr	r3, [fp, #-16]
 11896 0088 233CA0E1 		lsr	r3, r3, #24
 11897 008c 050053E3 		cmp	r3, #5
 11898 0090 3F00000A 		beq	.L758
 11899              		.loc 1 4998 5 discriminator 7
 11900 0094 0130E0E3 		mvn	r3, #1
 11901              		.loc 1 4998 5
 11902 0098 CD0000EA 		b	.L756
 11903              	.L754:
 11904              		.loc 1 4998 5 discriminator 2
 11905 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11906 00a0 2324A0E1 		lsr	r2, r3, #8
 11907 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11908 00a8 143093E5 		ldr	r3, [r3, #20]
 11909 00ac 030052E1 		cmp	r2, r3
 11910 00b0 0100003A 		bcc	.L759
 11911              		.loc 1 4998 5 discriminator 8
 11912 00b4 0230E0E3 		mvn	r3, #2
 11913              		.loc 1 4998 5
 11914 00b8 C50000EA 		b	.L756
 11915              	.L759:
 11916              		.loc 1 4998 5 discriminator 9
 11917 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11918 00c0 2334A0E1 		lsr	r3, r3, #8
 11919 00c4 8322A0E1 		lsl	r2, r3, #5
 11920 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11921 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11922 00d0 033082E0 		add	r3, r2, r3
 11923 00d4 08300BE5 		str	r3, [fp, #-8]
 11924 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11925 00dc 0300A0E1 		mov	r0, r3
 11926 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11927 00e4 10000BE5 		str	r0, [fp, #-16]
 11928              		.loc 1 4998 5 discriminator 1
 11929 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11930 00ec FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 299


 11931 00f0 020853E3 		cmp	r3, #131072
 11932 00f4 0100001A 		bne	.L760
 11933              		.loc 1 4998 5 discriminator 10
 11934 00f8 0830E0E3 		mvn	r3, #8
 11935              		.loc 1 4998 5
 11936 00fc B40000EA 		b	.L756
 11937              	.L760:
 11938              		.loc 1 4998 5 discriminator 11
 11939 0100 10301BE5 		ldr	r3, [fp, #-16]
 11940 0104 233CA0E1 		lsr	r3, r3, #24
 11941 0108 030053E3 		cmp	r3, #3
 11942 010c 0100000A 		beq	.L761
 11943              		.loc 1 4998 5 discriminator 12
 11944 0110 0130E0E3 		mvn	r3, #1
 11945              		.loc 1 4998 5
 11946 0114 AE0000EA 		b	.L756
 11947              	.L761:
 11948              		.loc 1 4998 5 discriminator 13
 11949 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11950 011c 7F2003E2 		and	r2, r3, #127
 11951 0120 08301BE5 		ldr	r3, [fp, #-8]
 11952 0124 143093E5 		ldr	r3, [r3, #20]
 11953 0128 030052E1 		cmp	r2, r3
 11954 012c 0100003A 		bcc	.L762
 11955              		.loc 1 4998 5 discriminator 14
 11956 0130 0230E0E3 		mvn	r3, #2
 11957              		.loc 1 4998 5
 11958 0134 A60000EA 		b	.L756
 11959              	.L762:
 11960              		.loc 1 4998 5 discriminator 15
 11961 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11962 013c 7F3003E2 		and	r3, r3, #127
 11963 0140 8322A0E1 		lsl	r2, r3, #5
 11964 0144 08301BE5 		ldr	r3, [fp, #-8]
 11965 0148 0C3093E5 		ldr	r3, [r3, #12]
 11966 014c 033082E0 		add	r3, r2, r3
 11967 0150 08300BE5 		str	r3, [fp, #-8]
 11968 0154 08301BE5 		ldr	r3, [fp, #-8]
 11969 0158 0300A0E1 		mov	r0, r3
 11970 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11971 0160 10000BE5 		str	r0, [fp, #-16]
 11972              		.loc 1 4998 5 discriminator 1
 11973 0164 10301BE5 		ldr	r3, [fp, #-16]
 11974 0168 FF3803E2 		and	r3, r3, #16711680
 11975 016c 020853E3 		cmp	r3, #131072
 11976 0170 0100001A 		bne	.L763
 11977              		.loc 1 4998 5 discriminator 16
 11978 0174 0830E0E3 		mvn	r3, #8
 11979              		.loc 1 4998 5
 11980 0178 950000EA 		b	.L756
 11981              	.L763:
 11982              		.loc 1 4998 5 discriminator 17
 11983 017c 10301BE5 		ldr	r3, [fp, #-16]
 11984 0180 233CA0E1 		lsr	r3, r3, #24
 11985 0184 050053E3 		cmp	r3, #5
 11986 0188 0100000A 		beq	.L758
 11987              		.loc 1 4998 5 discriminator 18
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 300


 11988 018c 0130E0E3 		mvn	r3, #1
 11989              		.loc 1 4998 5
 11990 0190 8F0000EA 		b	.L756
 11991              	.L758:
4999:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
5000:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5001:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 11992              		.loc 1 5001 5 is_stmt 1
 11993 0194 20301BE5 		ldr	r3, [fp, #-32]
 11994 0198 803003E2 		and	r3, r3, #128
 11995 019c 000053E3 		cmp	r3, #0
 11996 01a0 1C00001A 		bne	.L764
 11997              		.loc 1 5001 5 is_stmt 0 discriminator 1
 11998 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11999 01a8 142093E5 		ldr	r2, [r3, #20]
 12000 01ac 20301BE5 		ldr	r3, [fp, #-32]
 12001 01b0 030052E1 		cmp	r2, r3
 12002 01b4 0100008A 		bhi	.L765
 12003              		.loc 1 5001 5 discriminator 3
 12004 01b8 0230E0E3 		mvn	r3, #2
 12005              		.loc 1 5001 5
 12006 01bc 840000EA 		b	.L756
 12007              	.L765:
 12008              		.loc 1 5001 5 discriminator 4
 12009 01c0 20301BE5 		ldr	r3, [fp, #-32]
 12010 01c4 8322A0E1 		lsl	r2, r3, #5
 12011 01c8 18301BE5 		ldr	r3, [fp, #-24]
 12012 01cc 0C3093E5 		ldr	r3, [r3, #12]
 12013 01d0 033082E0 		add	r3, r2, r3
 12014 01d4 0C300BE5 		str	r3, [fp, #-12]
 12015 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 12016 01dc 0300A0E1 		mov	r0, r3
 12017 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12018 01e4 10000BE5 		str	r0, [fp, #-16]
 12019              		.loc 1 5001 5 discriminator 1
 12020 01e8 10301BE5 		ldr	r3, [fp, #-16]
 12021 01ec FF3803E2 		and	r3, r3, #16711680
 12022 01f0 020853E3 		cmp	r3, #131072
 12023 01f4 0100001A 		bne	.L766
 12024              		.loc 1 5001 5 discriminator 5
 12025 01f8 0830E0E3 		mvn	r3, #8
 12026              		.loc 1 5001 5
 12027 01fc 740000EA 		b	.L756
 12028              	.L766:
 12029              		.loc 1 5001 5 discriminator 6
 12030 0200 10301BE5 		ldr	r3, [fp, #-16]
 12031 0204 233CA0E1 		lsr	r3, r3, #24
 12032 0208 040053E3 		cmp	r3, #4
 12033 020c 3F00000A 		beq	.L767
 12034              		.loc 1 5001 5 discriminator 7
 12035 0210 0130E0E3 		mvn	r3, #1
 12036              		.loc 1 5001 5
 12037 0214 6E0000EA 		b	.L756
 12038              	.L764:
 12039              		.loc 1 5001 5 discriminator 2
 12040 0218 20301BE5 		ldr	r3, [fp, #-32]
 12041 021c 2324A0E1 		lsr	r2, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 301


 12042 0220 18301BE5 		ldr	r3, [fp, #-24]
 12043 0224 143093E5 		ldr	r3, [r3, #20]
 12044 0228 030052E1 		cmp	r2, r3
 12045 022c 0100003A 		bcc	.L768
 12046              		.loc 1 5001 5 discriminator 8
 12047 0230 0230E0E3 		mvn	r3, #2
 12048              		.loc 1 5001 5
 12049 0234 660000EA 		b	.L756
 12050              	.L768:
 12051              		.loc 1 5001 5 discriminator 9
 12052 0238 20301BE5 		ldr	r3, [fp, #-32]
 12053 023c 2334A0E1 		lsr	r3, r3, #8
 12054 0240 8322A0E1 		lsl	r2, r3, #5
 12055 0244 18301BE5 		ldr	r3, [fp, #-24]
 12056 0248 0C3093E5 		ldr	r3, [r3, #12]
 12057 024c 033082E0 		add	r3, r2, r3
 12058 0250 0C300BE5 		str	r3, [fp, #-12]
 12059 0254 0C301BE5 		ldr	r3, [fp, #-12]
 12060 0258 0300A0E1 		mov	r0, r3
 12061 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12062 0260 10000BE5 		str	r0, [fp, #-16]
 12063              		.loc 1 5001 5 discriminator 1
 12064 0264 10301BE5 		ldr	r3, [fp, #-16]
 12065 0268 FF3803E2 		and	r3, r3, #16711680
 12066 026c 020853E3 		cmp	r3, #131072
 12067 0270 0100001A 		bne	.L769
 12068              		.loc 1 5001 5 discriminator 10
 12069 0274 0830E0E3 		mvn	r3, #8
 12070              		.loc 1 5001 5
 12071 0278 550000EA 		b	.L756
 12072              	.L769:
 12073              		.loc 1 5001 5 discriminator 11
 12074 027c 10301BE5 		ldr	r3, [fp, #-16]
 12075 0280 233CA0E1 		lsr	r3, r3, #24
 12076 0284 030053E3 		cmp	r3, #3
 12077 0288 0100000A 		beq	.L770
 12078              		.loc 1 5001 5 discriminator 12
 12079 028c 0130E0E3 		mvn	r3, #1
 12080              		.loc 1 5001 5
 12081 0290 4F0000EA 		b	.L756
 12082              	.L770:
 12083              		.loc 1 5001 5 discriminator 13
 12084 0294 20301BE5 		ldr	r3, [fp, #-32]
 12085 0298 7F2003E2 		and	r2, r3, #127
 12086 029c 0C301BE5 		ldr	r3, [fp, #-12]
 12087 02a0 143093E5 		ldr	r3, [r3, #20]
 12088 02a4 030052E1 		cmp	r2, r3
 12089 02a8 0100003A 		bcc	.L771
 12090              		.loc 1 5001 5 discriminator 14
 12091 02ac 0230E0E3 		mvn	r3, #2
 12092              		.loc 1 5001 5
 12093 02b0 470000EA 		b	.L756
 12094              	.L771:
 12095              		.loc 1 5001 5 discriminator 15
 12096 02b4 20301BE5 		ldr	r3, [fp, #-32]
 12097 02b8 7F3003E2 		and	r3, r3, #127
 12098 02bc 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 302


 12099 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 12100 02c4 0C3093E5 		ldr	r3, [r3, #12]
 12101 02c8 033082E0 		add	r3, r2, r3
 12102 02cc 0C300BE5 		str	r3, [fp, #-12]
 12103 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 12104 02d4 0300A0E1 		mov	r0, r3
 12105 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12106 02dc 10000BE5 		str	r0, [fp, #-16]
 12107              		.loc 1 5001 5 discriminator 1
 12108 02e0 10301BE5 		ldr	r3, [fp, #-16]
 12109 02e4 FF3803E2 		and	r3, r3, #16711680
 12110 02e8 020853E3 		cmp	r3, #131072
 12111 02ec 0100001A 		bne	.L772
 12112              		.loc 1 5001 5 discriminator 16
 12113 02f0 0830E0E3 		mvn	r3, #8
 12114              		.loc 1 5001 5
 12115 02f4 360000EA 		b	.L756
 12116              	.L772:
 12117              		.loc 1 5001 5 discriminator 17
 12118 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12119 02fc 233CA0E1 		lsr	r3, r3, #24
 12120 0300 040053E3 		cmp	r3, #4
 12121 0304 0100000A 		beq	.L767
 12122              		.loc 1 5001 5 discriminator 18
 12123 0308 0130E0E3 		mvn	r3, #1
 12124              		.loc 1 5001 5
 12125 030c 300000EA 		b	.L756
 12126              	.L767:
5002:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_New,Type_Stat);
5003:../../Source/Kernel/rme_kernel.c **** #endif
5004:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5005:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_PGT);
 12127              		.loc 1 5005 5 is_stmt 1
 12128 0310 08301BE5 		ldr	r3, [fp, #-8]
 12129 0314 083093E5 		ldr	r3, [r3, #8]
 12130 0318 083003E2 		and	r3, r3, #8
 12131 031c 000053E3 		cmp	r3, #0
 12132 0320 0100001A 		bne	.L773
 12133              		.loc 1 5005 5 is_stmt 0 discriminator 1
 12134 0324 0630E0E3 		mvn	r3, #6
 12135              		.loc 1 5005 5
 12136 0328 290000EA 		b	.L756
 12137              	.L773:
5006:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5007:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_New,RME_PGT_FLAG_PRC_PGT);
 12138              		.loc 1 5007 5 is_stmt 1
 12139 032c 0C301BE5 		ldr	r3, [fp, #-12]
 12140 0330 083093E5 		ldr	r3, [r3, #8]
 12141 0334 803003E2 		and	r3, r3, #128
 12142 0338 000053E3 		cmp	r3, #0
 12143 033c 0100001A 		bne	.L774
 12144              		.loc 1 5007 5 is_stmt 0 discriminator 1
 12145 0340 0630E0E3 		mvn	r3, #6
 12146              		.loc 1 5007 5
 12147 0344 220000EA 		b	.L756
 12148              	.L774:
5008:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 303


5009:../../Source/Kernel/rme_kernel.c ****     
5010:../../Source/Kernel/rme_kernel.c ****     Pgt_Old=Prc_Op->Pgt;
 12149              		.loc 1 5010 12 is_stmt 1
 12150 0348 08301BE5 		ldr	r3, [fp, #-8]
 12151 034c 183093E5 		ldr	r3, [r3, #24]
 12152 0350 14300BE5 		str	r3, [fp, #-20]
5011:../../Source/Kernel/rme_kernel.c ****     
5012:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5013:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
5014:../../Source/Kernel/rme_kernel.c ****     Pgt_New=RME_CAP_CONV_ROOT(Pgt_New,struct RME_Cap_Pgt*);
 12153              		.loc 1 5014 13
 12154 0354 0C301BE5 		ldr	r3, [fp, #-12]
 12155 0358 003093E5 		ldr	r3, [r3]
 12156 035c 7330FFE6 		uxth	r3, r3
 12157 0360 000053E3 		cmp	r3, #0
 12158 0364 0200000A 		beq	.L775
 12159              		.loc 1 5014 13 is_stmt 0 discriminator 1
 12160 0368 0C301BE5 		ldr	r3, [fp, #-12]
 12161 036c 043093E5 		ldr	r3, [r3, #4]
 12162 0370 000000EA 		b	.L776
 12163              	.L775:
 12164              		.loc 1 5014 13 discriminator 2
 12165 0374 0C301BE5 		ldr	r3, [fp, #-12]
 12166              	.L776:
 12167              		.loc 1 5014 12 is_stmt 1 discriminator 4
 12168 0378 0C300BE5 		str	r3, [fp, #-12]
5015:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5016:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
 12169              		.loc 1 5016 8
 12170 037c 08301BE5 		ldr	r3, [fp, #-8]
 12171 0380 183083E2 		add	r3, r3, #24
 12172 0384 14101BE5 		ldr	r1, [fp, #-20]
 12173 0388 0C201BE5 		ldr	r2, [fp, #-12]
 12174 038c 0300A0E1 		mov	r0, r3
 12175 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12176 0394 0030A0E1 		mov	r3, r0
 12177              		.loc 1 5016 7 discriminator 1
 12178 0398 000053E3 		cmp	r3, #0
 12179 039c 0100001A 		bne	.L777
5017:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5018:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_New)==RME_CASFAIL)
5019:../../Source/Kernel/rme_kernel.c **** #else
5020:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5021:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
5022:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5023:../../Source/Kernel/rme_kernel.c ****                      Raw_Pgt)==RME_CASFAIL)
5024:../../Source/Kernel/rme_kernel.c **** #endif
5025:../../Source/Kernel/rme_kernel.c ****     {
5026:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5027:../../Source/Kernel/rme_kernel.c ****         
5028:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 12180              		.loc 1 5028 16
 12181 03a0 C930E0E3 		mvn	r3, #201
 12182 03a4 0A0000EA 		b	.L756
 12183              	.L777:
5029:../../Source/Kernel/rme_kernel.c ****     }
5030:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 304


5031:../../Source/Kernel/rme_kernel.c ****     {
5032:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5033:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5034:../../Source/Kernel/rme_kernel.c ****     }
5035:../../Source/Kernel/rme_kernel.c ****     
5036:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
5037:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5038:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_New->Head.Root_Ref),1);
 12184              		.loc 1 5038 5
 12185 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 12186 03ac 043083E2 		add	r3, r3, #4
 12187 03b0 0110A0E3 		mov	r1, #1
 12188 03b4 0300A0E1 		mov	r0, r3
 12189 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5039:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Old->Head.Root_Ref),-1);
 12190              		.loc 1 5039 5
 12191 03bc 14301BE5 		ldr	r3, [fp, #-20]
 12192 03c0 043083E2 		add	r3, r3, #4
 12193 03c4 0010E0E3 		mvn	r1, #0
 12194 03c8 0300A0E1 		mov	r0, r3
 12195 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
5040:../../Source/Kernel/rme_kernel.c **** #endif
5041:../../Source/Kernel/rme_kernel.c ****     
5042:../../Source/Kernel/rme_kernel.c ****     return 0;
 12196              		.loc 1 5042 12
 12197 03d0 0030A0E3 		mov	r3, #0
 12198              	.L756:
5043:../../Source/Kernel/rme_kernel.c **** }
 12199              		.loc 1 5043 1
 12200 03d4 0300A0E1 		mov	r0, r3
 12201 03d8 04D04BE2 		sub	sp, fp, #4
 12202              		.cfi_def_cfa 13, 8
 12203              		@ sp needed
 12204 03dc 0088BDE8 		pop	{fp, pc}
 12205              		.cfi_endproc
 12206              	.LFE54:
 12208              		.section	.text._RME_Thd_Boot_Crt,"ax",%progbits
 12209              		.align	2
 12210              		.global	_RME_Thd_Boot_Crt
 12211              		.syntax unified
 12212              		.arm
 12214              	_RME_Thd_Boot_Crt:
 12215              	.LFB55:
5044:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Pgt *************************************************/
5045:../../Source/Kernel/rme_kernel.c **** 
5046:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Boot_Crt *************************************************
5047:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time thread. The boot-time thread is per-core, and
5048:../../Source/Kernel/rme_kernel.c ****               will have infinite budget, and has no parent. This function
5049:../../Source/Kernel/rme_kernel.c ****               allows creation of a thread on behalf of other processors,
5050:../../Source/Kernel/rme_kernel.c ****               by passing a CPUID parameter. Therefore, it is recommended to
5051:../../Source/Kernel/rme_kernel.c ****               create the threads sequentially during boot-up; if you create
5052:../../Source/Kernel/rme_kernel.c ****               threads in parallel, be sure to only create the thread on your
5053:../../Source/Kernel/rme_kernel.c ****               local core.
5054:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and 
5055:../../Source/Kernel/rme_kernel.c ****               the initial threads' maximum priority will be set by the system.
5056:../../Source/Kernel/rme_kernel.c ****               This thread is a basic thread and hence always have attribute 0.
5057:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 305


5058:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5059:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5060:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5061:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5062:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5063:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5064:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5065:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the thread.
5066:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level of the thread.
5067:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure of the
5068:../../Source/Kernel/rme_kernel.c ****                                             CPU to bind the thread to.
5069:../../Source/Kernel/rme_kernel.c **** Output      : None.
5070:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5071:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5072:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Thd_Boot_Crt(struct RME_Cap_Cpt* Cpt,
5073:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
5074:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Thd,
5075:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
5076:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
5077:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Prio,
5078:../../Source/Kernel/rme_kernel.c ****                             struct RME_CPU_Local* Local)
5079:../../Source/Kernel/rme_kernel.c **** {
 12216              		.loc 1 5079 1
 12217              		.cfi_startproc
 12218              		@ args = 12, pretend = 0, frame = 40
 12219              		@ frame_needed = 1, uses_anonymous_args = 0
 12220 0000 00482DE9 		push	{fp, lr}
 12221              		.cfi_def_cfa_offset 8
 12222              		.cfi_offset 11, -8
 12223              		.cfi_offset 14, -4
 12224 0004 04B08DE2 		add	fp, sp, #4
 12225              		.cfi_def_cfa 11, 4
 12226 0008 28D04DE2 		sub	sp, sp, #40
 12227 000c 20000BE5 		str	r0, [fp, #-32]
 12228 0010 24100BE5 		str	r1, [fp, #-36]
 12229 0014 28200BE5 		str	r2, [fp, #-40]
 12230 0018 2C300BE5 		str	r3, [fp, #-44]
5080:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5081:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5082:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5083:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5084:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5085:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5086:../../Source/Kernel/rme_kernel.c ****     
5087:../../Source/Kernel/rme_kernel.c ****     /* Check whether the priority level is allowed */
5088:../../Source/Kernel/rme_kernel.c ****     if(Prio>=RME_PREEMPT_PRIO_NUM)
 12231              		.loc 1 5088 7
 12232 001c 08309BE5 		ldr	r3, [fp, #8]
 12233 0020 1F0053E3 		cmp	r3, #31
 12234 0024 0100009A 		bls	.L779
5089:../../Source/Kernel/rme_kernel.c ****     {
5090:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5091:../../Source/Kernel/rme_kernel.c **** 
5092:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12235              		.loc 1 5092 16
 12236 0028 CC30E0E3 		mvn	r3, #204
 12237 002c 4C0100EA 		b	.L780
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 306


 12238              	.L779:
5093:../../Source/Kernel/rme_kernel.c ****     }
5094:../../Source/Kernel/rme_kernel.c ****     else
5095:../../Source/Kernel/rme_kernel.c ****     {
5096:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5097:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5098:../../Source/Kernel/rme_kernel.c ****     }
5099:../../Source/Kernel/rme_kernel.c ****     
5100:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5101:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12239              		.loc 1 5101 5
 12240 0030 24301BE5 		ldr	r3, [fp, #-36]
 12241 0034 803003E2 		and	r3, r3, #128
 12242 0038 000053E3 		cmp	r3, #0
 12243 003c 1C00001A 		bne	.L781
 12244              		.loc 1 5101 5 is_stmt 0 discriminator 1
 12245 0040 20301BE5 		ldr	r3, [fp, #-32]
 12246 0044 142093E5 		ldr	r2, [r3, #20]
 12247 0048 24301BE5 		ldr	r3, [fp, #-36]
 12248 004c 030052E1 		cmp	r2, r3
 12249 0050 0100008A 		bhi	.L782
 12250              		.loc 1 5101 5 discriminator 3
 12251 0054 0230E0E3 		mvn	r3, #2
 12252              		.loc 1 5101 5
 12253 0058 410100EA 		b	.L780
 12254              	.L782:
 12255              		.loc 1 5101 5 discriminator 4
 12256 005c 24301BE5 		ldr	r3, [fp, #-36]
 12257 0060 8322A0E1 		lsl	r2, r3, #5
 12258 0064 20301BE5 		ldr	r3, [fp, #-32]
 12259 0068 0C3093E5 		ldr	r3, [r3, #12]
 12260 006c 033082E0 		add	r3, r2, r3
 12261 0070 08300BE5 		str	r3, [fp, #-8]
 12262 0074 08301BE5 		ldr	r3, [fp, #-8]
 12263 0078 0300A0E1 		mov	r0, r3
 12264 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12265 0080 10000BE5 		str	r0, [fp, #-16]
 12266              		.loc 1 5101 5 discriminator 1
 12267 0084 10301BE5 		ldr	r3, [fp, #-16]
 12268 0088 FF3803E2 		and	r3, r3, #16711680
 12269 008c 020853E3 		cmp	r3, #131072
 12270 0090 0100001A 		bne	.L783
 12271              		.loc 1 5101 5 discriminator 5
 12272 0094 0830E0E3 		mvn	r3, #8
 12273              		.loc 1 5101 5
 12274 0098 310100EA 		b	.L780
 12275              	.L783:
 12276              		.loc 1 5101 5 discriminator 6
 12277 009c 10301BE5 		ldr	r3, [fp, #-16]
 12278 00a0 233CA0E1 		lsr	r3, r3, #24
 12279 00a4 030053E3 		cmp	r3, #3
 12280 00a8 3F00000A 		beq	.L784
 12281              		.loc 1 5101 5 discriminator 7
 12282 00ac 0130E0E3 		mvn	r3, #1
 12283              		.loc 1 5101 5
 12284 00b0 2B0100EA 		b	.L780
 12285              	.L781:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 307


 12286              		.loc 1 5101 5 discriminator 2
 12287 00b4 24301BE5 		ldr	r3, [fp, #-36]
 12288 00b8 2324A0E1 		lsr	r2, r3, #8
 12289 00bc 20301BE5 		ldr	r3, [fp, #-32]
 12290 00c0 143093E5 		ldr	r3, [r3, #20]
 12291 00c4 030052E1 		cmp	r2, r3
 12292 00c8 0100003A 		bcc	.L785
 12293              		.loc 1 5101 5 discriminator 8
 12294 00cc 0230E0E3 		mvn	r3, #2
 12295              		.loc 1 5101 5
 12296 00d0 230100EA 		b	.L780
 12297              	.L785:
 12298              		.loc 1 5101 5 discriminator 9
 12299 00d4 24301BE5 		ldr	r3, [fp, #-36]
 12300 00d8 2334A0E1 		lsr	r3, r3, #8
 12301 00dc 8322A0E1 		lsl	r2, r3, #5
 12302 00e0 20301BE5 		ldr	r3, [fp, #-32]
 12303 00e4 0C3093E5 		ldr	r3, [r3, #12]
 12304 00e8 033082E0 		add	r3, r2, r3
 12305 00ec 08300BE5 		str	r3, [fp, #-8]
 12306 00f0 08301BE5 		ldr	r3, [fp, #-8]
 12307 00f4 0300A0E1 		mov	r0, r3
 12308 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12309 00fc 10000BE5 		str	r0, [fp, #-16]
 12310              		.loc 1 5101 5 discriminator 1
 12311 0100 10301BE5 		ldr	r3, [fp, #-16]
 12312 0104 FF3803E2 		and	r3, r3, #16711680
 12313 0108 020853E3 		cmp	r3, #131072
 12314 010c 0100001A 		bne	.L786
 12315              		.loc 1 5101 5 discriminator 10
 12316 0110 0830E0E3 		mvn	r3, #8
 12317              		.loc 1 5101 5
 12318 0114 120100EA 		b	.L780
 12319              	.L786:
 12320              		.loc 1 5101 5 discriminator 11
 12321 0118 10301BE5 		ldr	r3, [fp, #-16]
 12322 011c 233CA0E1 		lsr	r3, r3, #24
 12323 0120 030053E3 		cmp	r3, #3
 12324 0124 0100000A 		beq	.L787
 12325              		.loc 1 5101 5 discriminator 12
 12326 0128 0130E0E3 		mvn	r3, #1
 12327              		.loc 1 5101 5
 12328 012c 0C0100EA 		b	.L780
 12329              	.L787:
 12330              		.loc 1 5101 5 discriminator 13
 12331 0130 24301BE5 		ldr	r3, [fp, #-36]
 12332 0134 7F2003E2 		and	r2, r3, #127
 12333 0138 08301BE5 		ldr	r3, [fp, #-8]
 12334 013c 143093E5 		ldr	r3, [r3, #20]
 12335 0140 030052E1 		cmp	r2, r3
 12336 0144 0100003A 		bcc	.L788
 12337              		.loc 1 5101 5 discriminator 14
 12338 0148 0230E0E3 		mvn	r3, #2
 12339              		.loc 1 5101 5
 12340 014c 040100EA 		b	.L780
 12341              	.L788:
 12342              		.loc 1 5101 5 discriminator 15
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 308


 12343 0150 24301BE5 		ldr	r3, [fp, #-36]
 12344 0154 7F3003E2 		and	r3, r3, #127
 12345 0158 8322A0E1 		lsl	r2, r3, #5
 12346 015c 08301BE5 		ldr	r3, [fp, #-8]
 12347 0160 0C3093E5 		ldr	r3, [r3, #12]
 12348 0164 033082E0 		add	r3, r2, r3
 12349 0168 08300BE5 		str	r3, [fp, #-8]
 12350 016c 08301BE5 		ldr	r3, [fp, #-8]
 12351 0170 0300A0E1 		mov	r0, r3
 12352 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12353 0178 10000BE5 		str	r0, [fp, #-16]
 12354              		.loc 1 5101 5 discriminator 1
 12355 017c 10301BE5 		ldr	r3, [fp, #-16]
 12356 0180 FF3803E2 		and	r3, r3, #16711680
 12357 0184 020853E3 		cmp	r3, #131072
 12358 0188 0100001A 		bne	.L789
 12359              		.loc 1 5101 5 discriminator 16
 12360 018c 0830E0E3 		mvn	r3, #8
 12361              		.loc 1 5101 5
 12362 0190 F30000EA 		b	.L780
 12363              	.L789:
 12364              		.loc 1 5101 5 discriminator 17
 12365 0194 10301BE5 		ldr	r3, [fp, #-16]
 12366 0198 233CA0E1 		lsr	r3, r3, #24
 12367 019c 030053E3 		cmp	r3, #3
 12368 01a0 0100000A 		beq	.L784
 12369              		.loc 1 5101 5 discriminator 18
 12370 01a4 0130E0E3 		mvn	r3, #1
 12371              		.loc 1 5101 5
 12372 01a8 ED0000EA 		b	.L780
 12373              	.L784:
5102:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5103:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12374              		.loc 1 5103 5 is_stmt 1
 12375 01ac 2C301BE5 		ldr	r3, [fp, #-44]
 12376 01b0 803003E2 		and	r3, r3, #128
 12377 01b4 000053E3 		cmp	r3, #0
 12378 01b8 1C00001A 		bne	.L790
 12379              		.loc 1 5103 5 is_stmt 0 discriminator 1
 12380 01bc 20301BE5 		ldr	r3, [fp, #-32]
 12381 01c0 142093E5 		ldr	r2, [r3, #20]
 12382 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 12383 01c8 030052E1 		cmp	r2, r3
 12384 01cc 0100008A 		bhi	.L791
 12385              		.loc 1 5103 5 discriminator 3
 12386 01d0 0230E0E3 		mvn	r3, #2
 12387              		.loc 1 5103 5
 12388 01d4 E20000EA 		b	.L780
 12389              	.L791:
 12390              		.loc 1 5103 5 discriminator 4
 12391 01d8 2C301BE5 		ldr	r3, [fp, #-44]
 12392 01dc 8322A0E1 		lsl	r2, r3, #5
 12393 01e0 20301BE5 		ldr	r3, [fp, #-32]
 12394 01e4 0C3093E5 		ldr	r3, [r3, #12]
 12395 01e8 033082E0 		add	r3, r2, r3
 12396 01ec 0C300BE5 		str	r3, [fp, #-12]
 12397 01f0 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 309


 12398 01f4 0300A0E1 		mov	r0, r3
 12399 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12400 01fc 10000BE5 		str	r0, [fp, #-16]
 12401              		.loc 1 5103 5 discriminator 1
 12402 0200 10301BE5 		ldr	r3, [fp, #-16]
 12403 0204 FF3803E2 		and	r3, r3, #16711680
 12404 0208 020853E3 		cmp	r3, #131072
 12405 020c 0100001A 		bne	.L792
 12406              		.loc 1 5103 5 discriminator 5
 12407 0210 0830E0E3 		mvn	r3, #8
 12408              		.loc 1 5103 5
 12409 0214 D20000EA 		b	.L780
 12410              	.L792:
 12411              		.loc 1 5103 5 discriminator 6
 12412 0218 10301BE5 		ldr	r3, [fp, #-16]
 12413 021c 233CA0E1 		lsr	r3, r3, #24
 12414 0220 050053E3 		cmp	r3, #5
 12415 0224 3F00000A 		beq	.L793
 12416              		.loc 1 5103 5 discriminator 7
 12417 0228 0130E0E3 		mvn	r3, #1
 12418              		.loc 1 5103 5
 12419 022c CC0000EA 		b	.L780
 12420              	.L790:
 12421              		.loc 1 5103 5 discriminator 2
 12422 0230 2C301BE5 		ldr	r3, [fp, #-44]
 12423 0234 2324A0E1 		lsr	r2, r3, #8
 12424 0238 20301BE5 		ldr	r3, [fp, #-32]
 12425 023c 143093E5 		ldr	r3, [r3, #20]
 12426 0240 030052E1 		cmp	r2, r3
 12427 0244 0100003A 		bcc	.L794
 12428              		.loc 1 5103 5 discriminator 8
 12429 0248 0230E0E3 		mvn	r3, #2
 12430              		.loc 1 5103 5
 12431 024c C40000EA 		b	.L780
 12432              	.L794:
 12433              		.loc 1 5103 5 discriminator 9
 12434 0250 2C301BE5 		ldr	r3, [fp, #-44]
 12435 0254 2334A0E1 		lsr	r3, r3, #8
 12436 0258 8322A0E1 		lsl	r2, r3, #5
 12437 025c 20301BE5 		ldr	r3, [fp, #-32]
 12438 0260 0C3093E5 		ldr	r3, [r3, #12]
 12439 0264 033082E0 		add	r3, r2, r3
 12440 0268 0C300BE5 		str	r3, [fp, #-12]
 12441 026c 0C301BE5 		ldr	r3, [fp, #-12]
 12442 0270 0300A0E1 		mov	r0, r3
 12443 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12444 0278 10000BE5 		str	r0, [fp, #-16]
 12445              		.loc 1 5103 5 discriminator 1
 12446 027c 10301BE5 		ldr	r3, [fp, #-16]
 12447 0280 FF3803E2 		and	r3, r3, #16711680
 12448 0284 020853E3 		cmp	r3, #131072
 12449 0288 0100001A 		bne	.L795
 12450              		.loc 1 5103 5 discriminator 10
 12451 028c 0830E0E3 		mvn	r3, #8
 12452              		.loc 1 5103 5
 12453 0290 B30000EA 		b	.L780
 12454              	.L795:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 310


 12455              		.loc 1 5103 5 discriminator 11
 12456 0294 10301BE5 		ldr	r3, [fp, #-16]
 12457 0298 233CA0E1 		lsr	r3, r3, #24
 12458 029c 030053E3 		cmp	r3, #3
 12459 02a0 0100000A 		beq	.L796
 12460              		.loc 1 5103 5 discriminator 12
 12461 02a4 0130E0E3 		mvn	r3, #1
 12462              		.loc 1 5103 5
 12463 02a8 AD0000EA 		b	.L780
 12464              	.L796:
 12465              		.loc 1 5103 5 discriminator 13
 12466 02ac 2C301BE5 		ldr	r3, [fp, #-44]
 12467 02b0 7F2003E2 		and	r2, r3, #127
 12468 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 12469 02b8 143093E5 		ldr	r3, [r3, #20]
 12470 02bc 030052E1 		cmp	r2, r3
 12471 02c0 0100003A 		bcc	.L797
 12472              		.loc 1 5103 5 discriminator 14
 12473 02c4 0230E0E3 		mvn	r3, #2
 12474              		.loc 1 5103 5
 12475 02c8 A50000EA 		b	.L780
 12476              	.L797:
 12477              		.loc 1 5103 5 discriminator 15
 12478 02cc 2C301BE5 		ldr	r3, [fp, #-44]
 12479 02d0 7F3003E2 		and	r3, r3, #127
 12480 02d4 8322A0E1 		lsl	r2, r3, #5
 12481 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 12482 02dc 0C3093E5 		ldr	r3, [r3, #12]
 12483 02e0 033082E0 		add	r3, r2, r3
 12484 02e4 0C300BE5 		str	r3, [fp, #-12]
 12485 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 12486 02ec 0300A0E1 		mov	r0, r3
 12487 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12488 02f4 10000BE5 		str	r0, [fp, #-16]
 12489              		.loc 1 5103 5 discriminator 1
 12490 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12491 02fc FF3803E2 		and	r3, r3, #16711680
 12492 0300 020853E3 		cmp	r3, #131072
 12493 0304 0100001A 		bne	.L798
 12494              		.loc 1 5103 5 discriminator 16
 12495 0308 0830E0E3 		mvn	r3, #8
 12496              		.loc 1 5103 5
 12497 030c 940000EA 		b	.L780
 12498              	.L798:
 12499              		.loc 1 5103 5 discriminator 17
 12500 0310 10301BE5 		ldr	r3, [fp, #-16]
 12501 0314 233CA0E1 		lsr	r3, r3, #24
 12502 0318 050053E3 		cmp	r3, #5
 12503 031c 0100000A 		beq	.L793
 12504              		.loc 1 5103 5 discriminator 18
 12505 0320 0130E0E3 		mvn	r3, #1
 12506              		.loc 1 5103 5
 12507 0324 8E0000EA 		b	.L780
 12508              	.L793:
5104:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);   
5105:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5106:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 311


 12509              		.loc 1 5106 5 is_stmt 1
 12510 0328 08301BE5 		ldr	r3, [fp, #-8]
 12511 032c 083093E5 		ldr	r3, [r3, #8]
 12512 0330 013003E2 		and	r3, r3, #1
 12513 0334 000053E3 		cmp	r3, #0
 12514 0338 0100001A 		bne	.L799
 12515              		.loc 1 5106 5 is_stmt 0 discriminator 1
 12516 033c 0630E0E3 		mvn	r3, #6
 12517              		.loc 1 5106 5
 12518 0340 870000EA 		b	.L780
 12519              	.L799:
5107:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 12520              		.loc 1 5107 5 is_stmt 1
 12521 0344 0C301BE5 		ldr	r3, [fp, #-12]
 12522 0348 083093E5 		ldr	r3, [r3, #8]
 12523 034c 023003E2 		and	r3, r3, #2
 12524 0350 000053E3 		cmp	r3, #0
 12525 0354 0100001A 		bne	.L800
 12526              		.loc 1 5107 5 is_stmt 0 discriminator 1
 12527 0358 0630E0E3 		mvn	r3, #6
 12528              		.loc 1 5107 5
 12529 035c 800000EA 		b	.L780
 12530              	.L800:
5108:../../Source/Kernel/rme_kernel.c ****     
5109:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5110:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 12531              		.loc 1 5110 5 is_stmt 1
 12532 0360 08301BE5 		ldr	r3, [fp, #-8]
 12533 0364 142093E5 		ldr	r2, [r3, #20]
 12534 0368 28301BE5 		ldr	r3, [fp, #-40]
 12535 036c 030052E1 		cmp	r2, r3
 12536 0370 0100008A 		bhi	.L801
 12537              		.loc 1 5110 5 is_stmt 0 discriminator 1
 12538 0374 0230E0E3 		mvn	r3, #2
 12539              		.loc 1 5110 5
 12540 0378 790000EA 		b	.L780
 12541              	.L801:
 12542              		.loc 1 5110 5 discriminator 2
 12543 037c 28301BE5 		ldr	r3, [fp, #-40]
 12544 0380 8322A0E1 		lsl	r2, r3, #5
 12545 0384 08301BE5 		ldr	r3, [fp, #-8]
 12546 0388 0C3093E5 		ldr	r3, [r3, #12]
 12547 038c 033082E0 		add	r3, r2, r3
 12548 0390 14300BE5 		str	r3, [fp, #-20]
5111:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5112:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 12549              		.loc 1 5112 5 is_stmt 1
 12550 0394 14301BE5 		ldr	r3, [fp, #-20]
 12551 0398 0128A0E3 		mov	r2, #65536
 12552 039c 0010A0E3 		mov	r1, #0
 12553 03a0 0300A0E1 		mov	r0, r3
 12554 03a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12555 03a8 0030A0E1 		mov	r3, r0
 12556              		.loc 1 5112 5 is_stmt 0 discriminator 1
 12557 03ac 000053E3 		cmp	r3, #0
 12558 03b0 0100001A 		bne	.L802
 12559 03b4 0430E0E3 		mvn	r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 312


 12560              		.loc 1 5112 5
 12561 03b8 690000EA 		b	.L780
 12562              	.L802:
 12563              		.loc 1 5112 5 discriminator 2
 12564 03bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 12565 03c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 12566 03c4 002093E5 		ldr	r2, [r3]
 12567 03c8 14301BE5 		ldr	r3, [fp, #-20]
 12568 03cc 102083E5 		str	r2, [r3, #16]
5113:../../Source/Kernel/rme_kernel.c ****      
5114:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5115:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_THD_SIZE(0U))!=0)
 12569              		.loc 1 5115 8 is_stmt 1
 12570 03d0 9C10A0E3 		mov	r1, #156
 12571 03d4 04009BE5 		ldr	r0, [fp, #4]
 12572 03d8 FEFFFFEB 		bl	_RME_Kot_Mark
 12573 03dc 0030A0E1 		mov	r3, r0
 12574              		.loc 1 5115 7 discriminator 1
 12575 03e0 000053E3 		cmp	r3, #0
 12576 03e4 0500000A 		beq	.L803
5116:../../Source/Kernel/rme_kernel.c ****     {
5117:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5118:../../Source/Kernel/rme_kernel.c **** 
5119:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 12577              		.loc 1 5119 9
 12578 03e8 14301BE5 		ldr	r3, [fp, #-20]
 12579 03ec 0010A0E3 		mov	r1, #0
 12580 03f0 0300A0E1 		mov	r0, r3
 12581 03f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5120:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 12582              		.loc 1 5120 16
 12583 03f8 0330E0E3 		mvn	r3, #3
 12584 03fc 580000EA 		b	.L780
 12585              	.L803:
5121:../../Source/Kernel/rme_kernel.c ****     }
5122:../../Source/Kernel/rme_kernel.c ****     else
5123:../../Source/Kernel/rme_kernel.c ****     {
5124:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5125:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5126:../../Source/Kernel/rme_kernel.c ****     }
5127:../../Source/Kernel/rme_kernel.c **** 
5128:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5129:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 12586              		.loc 1 5129 11
 12587 0400 04309BE5 		ldr	r3, [fp, #4]
 12588 0404 18300BE5 		str	r3, [fp, #-24]
5130:../../Source/Kernel/rme_kernel.c ****     /* The TID of these threads are by default taken care of by the kernel */
5131:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 12589              		.loc 1 5131 22
 12590 0408 18301BE5 		ldr	r3, [fp, #-24]
 12591 040c 0020A0E3 		mov	r2, #0
 12592 0410 102083E5 		str	r2, [r3, #16]
5132:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=RME_THD_INIT_TIME;
 12593              		.loc 1 5132 24
 12594 0414 18301BE5 		ldr	r3, [fp, #-24]
 12595 0418 0221E0E3 		mvn	r2, #-2147483648
 12596 041c 182083E5 		str	r2, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 313


5133:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_READY;
 12597              		.loc 1 5133 24
 12598 0420 18301BE5 		ldr	r3, [fp, #-24]
 12599 0424 0020A0E3 		mov	r2, #0
 12600 0428 1C2083E5 		str	r2, [r3, #28]
5134:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 12601              		.loc 1 5134 14
 12602 042c 0C301BE5 		ldr	r3, [fp, #-12]
 12603 0430 003093E5 		ldr	r3, [r3]
 12604 0434 7330FFE6 		uxth	r3, r3
 12605 0438 000053E3 		cmp	r3, #0
 12606 043c 0200000A 		beq	.L804
 12607              		.loc 1 5134 14 is_stmt 0 discriminator 1
 12608 0440 0C301BE5 		ldr	r3, [fp, #-12]
 12609 0444 043093E5 		ldr	r3, [r3, #4]
 12610 0448 000000EA 		b	.L805
 12611              	.L804:
 12612              		.loc 1 5134 14 discriminator 2
 12613 044c 0C301BE5 		ldr	r3, [fp, #-12]
 12614              	.L805:
 12615              		.loc 1 5134 13 is_stmt 1 discriminator 4
 12616 0450 1C300BE5 		str	r3, [fp, #-28]
5135:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 12617              		.loc 1 5135 22
 12618 0454 18301BE5 		ldr	r3, [fp, #-24]
 12619 0458 1C201BE5 		ldr	r2, [fp, #-28]
 12620 045c 2C2083E5 		str	r2, [r3, #44]
5136:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 12621              		.loc 1 5136 25
 12622 0460 18301BE5 		ldr	r3, [fp, #-24]
 12623 0464 0020A0E3 		mov	r2, #0
 12624 0468 282083E5 		str	r2, [r3, #40]
5137:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 12625              		.loc 1 5137 23
 12626 046c 18301BE5 		ldr	r3, [fp, #-24]
 12627 0470 08209BE5 		ldr	r2, [fp, #8]
 12628 0474 202083E5 		str	r2, [r3, #32]
5138:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=RME_PREEMPT_PRIO_NUM-1U;
 12629              		.loc 1 5138 27
 12630 0478 18301BE5 		ldr	r3, [fp, #-24]
 12631 047c 1F20A0E3 		mov	r2, #31
 12632 0480 242083E5 		str	r2, [r3, #36]
5139:../../Source/Kernel/rme_kernel.c ****     /* Set scheduler reference to 1 so cannot be free */
5140:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=1U;
 12633              		.loc 1 5140 28
 12634 0484 18301BE5 		ldr	r3, [fp, #-24]
 12635 0488 0120A0E3 		mov	r2, #1
 12636 048c 302083E5 		str	r2, [r3, #48]
5141:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 12637              		.loc 1 5141 28
 12638 0490 18301BE5 		ldr	r3, [fp, #-24]
 12639 0494 0020A0E3 		mov	r2, #0
 12640 0498 382083E5 		str	r2, [r3, #56]
5142:../../Source/Kernel/rme_kernel.c ****     /* Bind the thread to the current CPU */
5143:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=Local;
 12641              		.loc 1 5143 24
 12642 049c 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 314


 12643 04a0 0C209BE5 		ldr	r2, [fp, #12]
 12644 04a4 142083E5 		str	r2, [r3, #20]
5144:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5145:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 12645              		.loc 1 5145 5
 12646 04a8 18301BE5 		ldr	r3, [fp, #-24]
 12647 04ac 083083E2 		add	r3, r3, #8
 12648 04b0 0300A0E1 		mov	r0, r3
 12649 04b4 FEFFFFEB 		bl	_RME_List_Crt
5146:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 12650              		.loc 1 5146 5
 12651 04b8 18301BE5 		ldr	r3, [fp, #-24]
 12652 04bc 3C3083E2 		add	r3, r3, #60
 12653 04c0 0300A0E1 		mov	r0, r3
 12654 04c4 FEFFFFEB 		bl	_RME_List_Crt
5147:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this will never be a hypervisor thread */
5148:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Hyp_Attr=0U;
 12655              		.loc 1 5148 25
 12656 04c8 18301BE5 		ldr	r3, [fp, #-24]
 12657 04cc 0020A0E3 		mov	r2, #0
 12658 04d0 442083E5 		str	r2, [r3, #68]
5149:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 12659              		.loc 1 5149 48
 12660 04d4 04309BE5 		ldr	r3, [fp, #4]
 12661 04d8 583083E2 		add	r3, r3, #88
 12662              		.loc 1 5149 21
 12663 04dc 0320A0E1 		mov	r2, r3
 12664              		.loc 1 5149 20
 12665 04e0 18301BE5 		ldr	r3, [fp, #-24]
 12666 04e4 482083E5 		str	r2, [r3, #72]
5150:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5151:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 12667              		.loc 1 5151 5
 12668 04e8 18301BE5 		ldr	r3, [fp, #-24]
 12669 04ec 4C3083E2 		add	r3, r3, #76
 12670 04f0 0300A0E1 		mov	r0, r3
 12671 04f4 FEFFFFEB 		bl	_RME_List_Crt
5152:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 12672              		.loc 1 5152 29
 12673 04f8 18301BE5 		ldr	r3, [fp, #-24]
 12674 04fc 0020A0E3 		mov	r2, #0
 12675 0500 542083E5 		str	r2, [r3, #84]
5153:../../Source/Kernel/rme_kernel.c ****     
5154:../../Source/Kernel/rme_kernel.c ****     /* Info init */
5155:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=1U;
 12676              		.loc 1 5155 27
 12677 0504 14301BE5 		ldr	r3, [fp, #-20]
 12678 0508 0120A0E3 		mov	r2, #1
 12679 050c 042083E5 		str	r2, [r3, #4]
5156:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 12680              		.loc 1 5156 25
 12681 0510 14301BE5 		ldr	r3, [fp, #-20]
 12682 0514 04209BE5 		ldr	r2, [fp, #4]
 12683 0518 0C2083E5 		str	r2, [r3, #12]
5157:../../Source/Kernel/rme_kernel.c ****     /* This can only be a parent, and not a child, and cannot be freed. Additionally,
5158:../../Source/Kernel/rme_kernel.c ****      * this should not be blocked on any endpoint. Any attempt to block this thread will fail.
5159:../../Source/Kernel/rme_kernel.c ****      * Setting execution information for this is also prohibited. */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 315


5160:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_SCHED_PRIO|RME_THD_FLAG_SCHED_PARENT|
 12684              		.loc 1 5160 23
 12685 051c 14301BE5 		ldr	r3, [fp, #-20]
 12686 0520 7B2FA0E3 		mov	r2, #492
 12687 0524 082083E5 		str	r2, [r3, #8]
5161:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_XFER_DST|RME_THD_FLAG_XFER_SRC|
5162:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_SCHED_RCV|RME_THD_FLAG_SWT;
5163:../../Source/Kernel/rme_kernel.c **** 
5164:../../Source/Kernel/rme_kernel.c ****     /* Referece process */
5165:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 12688              		.loc 1 5165 5
 12689 0528 1C301BE5 		ldr	r3, [fp, #-28]
 12690 052c 043083E2 		add	r3, r3, #4
 12691 0530 0110A0E3 		mov	r1, #1
 12692 0534 0300A0E1 		mov	r0, r3
 12693 0538 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5166:../../Source/Kernel/rme_kernel.c ****     
5167:../../Source/Kernel/rme_kernel.c ****     /* Insert this into the runqueue, and set current thread to it */
5168:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Ins(Thread);
 12694              		.loc 1 5168 5
 12695 053c 18001BE5 		ldr	r0, [fp, #-24]
 12696 0540 FEFFFFEB 		bl	_RME_Run_Ins
5169:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thread;
 12697              		.loc 1 5169 19
 12698 0544 0C309BE5 		ldr	r3, [fp, #12]
 12699 0548 18201BE5 		ldr	r2, [fp, #-24]
 12700 054c 042083E5 		str	r2, [r3, #4]
5170:../../Source/Kernel/rme_kernel.c **** 
5171:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5172:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 12701              		.loc 1 5172 5
 12702 0550 14301BE5 		ldr	r3, [fp, #-20]
 12703 0554 0614A0E3 		mov	r1, #100663296
 12704 0558 0300A0E1 		mov	r0, r3
 12705 055c FEFFFFEB 		bl	__RME_A7A_Write_Release
5173:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5174:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5175:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5176:../../Source/Kernel/rme_kernel.c **** 
5177:../../Source/Kernel/rme_kernel.c ****     return 0;
 12706              		.loc 1 5177 12
 12707 0560 0030A0E3 		mov	r3, #0
 12708              	.L780:
5178:../../Source/Kernel/rme_kernel.c **** }
 12709              		.loc 1 5178 1
 12710 0564 0300A0E1 		mov	r0, r3
 12711 0568 04D04BE2 		sub	sp, fp, #4
 12712              		.cfi_def_cfa 13, 8
 12713              		@ sp needed
 12714 056c 0088BDE8 		pop	{fp, pc}
 12715              		.cfi_endproc
 12716              	.LFE55:
 12718              		.section	.rodata
 12719 01df 00       		.align	2
 12720              	.LC20:
 12721 01e0 0D0A4370 		.ascii	"\015\012Cpt addr \000"
 12721      74206164 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 316


 12721      64722000 
 12722              		.align	2
 12723              	.LC21:
 12724 01ec 0D0A4361 		.ascii	"\015\012Cap_Cpt \000"
 12724      705F4370 
 12724      742000
 12725 01f7 00       		.align	2
 12726              	.LC22:
 12727 01f8 0D0A4361 		.ascii	"\015\012Cap_Kom \000"
 12727      705F4B6F 
 12727      6D2000
 12728 0203 00       		.align	2
 12729              	.LC23:
 12730 0204 0D0A4361 		.ascii	"\015\012Cap_Thd \000"
 12730      705F5468 
 12730      642000
 12731 020f 00       		.align	2
 12732              	.LC24:
 12733 0210 0D0A4361 		.ascii	"\015\012Cap_Prc \000"
 12733      705F5072 
 12733      632000
 12734 021b 00       		.align	2
 12735              	.LC25:
 12736 021c 0D0A5072 		.ascii	"\015\012Prio_Max \000"
 12736      696F5F4D 
 12736      61782000 
 12737              		.align	2
 12738              	.LC26:
 12739 0228 0D0A5261 		.ascii	"\015\012Raddr \000"
 12739      64647220 
 12739      00
 12740 0231 000000   		.align	2
 12741              	.LC27:
 12742 0234 0D0A4174 		.ascii	"\015\012Attr \000"
 12742      74722000 
 12743              		.align	2
 12744              	.LC28:
 12745 023c 0D0A4973 		.ascii	"\015\012Is_Hyp \000"
 12745      5F487970 
 12745      2000
 12746 0246 0000     		.align	2
 12747              	.LC29:
 12748 0248 0D0A6D61 		.ascii	"\015\012maximum priority relationship is not correc"
 12748      78696D75 
 12748      6D207072 
 12748      696F7269 
 12748      74792072 
 12749 0275 7400     		.ascii	"t\000"
 12750 0277 00       		.align	2
 12751              	.LC30:
 12752 0278 0D0A7265 		.ascii	"\015\012reach 1\000"
 12752      61636820 
 12752      3100
 12753 0282 0000     		.align	2
 12754              	.LC31:
 12755 0284 0D0A7265 		.ascii	"\015\012reach 2\000"
 12755      61636820 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 317


 12755      3200
 12756 028e 0000     		.align	2
 12757              	.LC32:
 12758 0290 0D0A7265 		.ascii	"\015\012reach 3\000"
 12758      61636820 
 12758      3300
 12759 029a 0000     		.align	2
 12760              	.LC33:
 12761 029c 0D0A7265 		.ascii	"\015\012reach 4\000"
 12761      61636820 
 12761      3400
 12762 02a6 0000     		.align	2
 12763              	.LC34:
 12764 02a8 0D0A7265 		.ascii	"\015\012reach 5\000"
 12764      61636820 
 12764      3500
 12765 02b2 0000     		.align	2
 12766              	.LC35:
 12767 02b4 0D0A7661 		.ascii	"\015\012vaddr= \000"
 12767      6464723D 
 12767      2000
 12768 02be 0000     		.align	2
 12769              	.LC36:
 12770 02c0 0D0A5261 		.ascii	"\015\012Raddr= \000"
 12770      6464723D 
 12770      2000
 12771 02ca 0000     		.align	2
 12772              	.LC37:
 12773 02cc 0D0A7265 		.ascii	"\015\012reach 6\000"
 12773      61636820 
 12773      3600
 12774 02d6 0000     		.align	2
 12775              	.LC38:
 12776 02d8 0D0A7265 		.ascii	"\015\012reach 7\000"
 12776      61636820 
 12776      3700
 12777 02e2 0000     		.align	2
 12778              	.LC39:
 12779 02e4 0D0A7265 		.ascii	"\015\012reach 8\000"
 12779      61636820 
 12779      3800
 12780 02ee 0000     		.align	2
 12781              	.LC40:
 12782 02f0 0D0A5F52 		.ascii	"\015\012_RME_Kot_Mark(Vaddr,Size)\000"
 12782      4D455F4B 
 12782      6F745F4D 
 12782      61726B28 
 12782      56616464 
 12783              		.section	.text._RME_Thd_Crt,"ax",%progbits
 12784              		.align	2
 12785              		.syntax unified
 12786              		.arm
 12788              	_RME_Thd_Crt:
 12789              	.LFB56:
5179:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Boot_Crt ********************************************/
5180:../../Source/Kernel/rme_kernel.c **** 
5181:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Crt ******************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 318


5182:../../Source/Kernel/rme_kernel.c **** Description : Create a thread. A thread is the minimal kernel-level execution
5183:../../Source/Kernel/rme_kernel.c ****               unit.
5184:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5185:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5186:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5187:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
5188:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5189:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5190:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5191:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5192:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5193:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5194:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio_Max - The maximum priority allowed for this
5195:../../Source/Kernel/rme_kernel.c ****                                    thread. Once set, this cannot be changed.
5196:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
5197:../../Source/Kernel/rme_kernel.c ****                                 thread kernel object.
5198:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Attr - The context attributes.
5199:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Hyp - Whether this is a hypervisor thread.
5200:../../Source/Kernel/rme_kernel.c **** Output      : None.
5201:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5202:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5203:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Crt(struct RME_Cap_Cpt* Cpt,
5204:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5205:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
5206:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
5207:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5208:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Prio_Max,
5209:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
5210:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Attr,
5211:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Hyp)
5212:../../Source/Kernel/rme_kernel.c **** {
 12790              		.loc 1 5212 1
 12791              		.cfi_startproc
 12792              		@ args = 20, pretend = 0, frame = 56
 12793              		@ frame_needed = 1, uses_anonymous_args = 0
 12794 0000 00482DE9 		push	{fp, lr}
 12795              		.cfi_def_cfa_offset 8
 12796              		.cfi_offset 11, -8
 12797              		.cfi_offset 14, -4
 12798 0004 04B08DE2 		add	fp, sp, #4
 12799              		.cfi_def_cfa 11, 4
 12800 0008 38D04DE2 		sub	sp, sp, #56
 12801 000c 30000BE5 		str	r0, [fp, #-48]
 12802 0010 34100BE5 		str	r1, [fp, #-52]
 12803 0014 38200BE5 		str	r2, [fp, #-56]
 12804 0018 3C300BE5 		str	r3, [fp, #-60]
5213:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5214:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5215:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
5216:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5217:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5218:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5219:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5220:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
5221:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
5222:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCpt addr ");
 12805              		.loc 1 5222 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 319


 12806 001c 000000E3 		movw	r0, #:lower16:.LC20
 12807 0020 000040E3 		movt	r0, #:upper16:.LC20
 12808 0024 FEFFFFEB 		bl	RME_Str_Print
5223:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H((rme_ptr_t)Cpt);
 12809              		.loc 1 5223 5
 12810 0028 30301BE5 		ldr	r3, [fp, #-48]
 12811 002c 0300A0E1 		mov	r0, r3
 12812 0030 FEFFFFEB 		bl	RME_Hex_Print
5224:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Cpt ");
 12813              		.loc 1 5224 5
 12814 0034 000000E3 		movw	r0, #:lower16:.LC21
 12815 0038 000040E3 		movt	r0, #:upper16:.LC21
 12816 003c FEFFFFEB 		bl	RME_Str_Print
5225:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Cpt);
 12817              		.loc 1 5225 5
 12818 0040 34301BE5 		ldr	r3, [fp, #-52]
 12819 0044 0300A0E1 		mov	r0, r3
 12820 0048 FEFFFFEB 		bl	RME_Hex_Print
5226:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Kom ");
 12821              		.loc 1 5226 5
 12822 004c 000000E3 		movw	r0, #:lower16:.LC22
 12823 0050 000040E3 		movt	r0, #:upper16:.LC22
 12824 0054 FEFFFFEB 		bl	RME_Str_Print
5227:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Kom);
 12825              		.loc 1 5227 5
 12826 0058 38301BE5 		ldr	r3, [fp, #-56]
 12827 005c 0300A0E1 		mov	r0, r3
 12828 0060 FEFFFFEB 		bl	RME_Hex_Print
5228:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd ");
 12829              		.loc 1 5228 5
 12830 0064 000000E3 		movw	r0, #:lower16:.LC23
 12831 0068 000040E3 		movt	r0, #:upper16:.LC23
 12832 006c FEFFFFEB 		bl	RME_Str_Print
5229:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
 12833              		.loc 1 5229 5
 12834 0070 3C301BE5 		ldr	r3, [fp, #-60]
 12835 0074 0300A0E1 		mov	r0, r3
 12836 0078 FEFFFFEB 		bl	RME_Hex_Print
5230:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Prc ");
 12837              		.loc 1 5230 5
 12838 007c 000000E3 		movw	r0, #:lower16:.LC24
 12839 0080 000040E3 		movt	r0, #:upper16:.LC24
 12840 0084 FEFFFFEB 		bl	RME_Str_Print
5231:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Prc);
 12841              		.loc 1 5231 5
 12842 0088 04309BE5 		ldr	r3, [fp, #4]
 12843 008c 0300A0E1 		mov	r0, r3
 12844 0090 FEFFFFEB 		bl	RME_Hex_Print
5232:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nPrio_Max ");
 12845              		.loc 1 5232 5
 12846 0094 000000E3 		movw	r0, #:lower16:.LC25
 12847 0098 000040E3 		movt	r0, #:upper16:.LC25
 12848 009c FEFFFFEB 		bl	RME_Str_Print
5233:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Prio_Max);
 12849              		.loc 1 5233 5
 12850 00a0 08009BE5 		ldr	r0, [fp, #8]
 12851 00a4 FEFFFFEB 		bl	RME_Hex_Print
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 320


5234:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nRaddr ");
 12852              		.loc 1 5234 5
 12853 00a8 000000E3 		movw	r0, #:lower16:.LC26
 12854 00ac 000040E3 		movt	r0, #:upper16:.LC26
 12855 00b0 FEFFFFEB 		bl	RME_Str_Print
5235:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Raddr);
 12856              		.loc 1 5235 5
 12857 00b4 0C009BE5 		ldr	r0, [fp, #12]
 12858 00b8 FEFFFFEB 		bl	RME_Hex_Print
5236:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nAttr ");
 12859              		.loc 1 5236 5
 12860 00bc 000000E3 		movw	r0, #:lower16:.LC27
 12861 00c0 000040E3 		movt	r0, #:upper16:.LC27
 12862 00c4 FEFFFFEB 		bl	RME_Str_Print
5237:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Attr);
 12863              		.loc 1 5237 5
 12864 00c8 10009BE5 		ldr	r0, [fp, #16]
 12865 00cc FEFFFFEB 		bl	RME_Hex_Print
5238:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nIs_Hyp ");
 12866              		.loc 1 5238 5
 12867 00d0 000000E3 		movw	r0, #:lower16:.LC28
 12868 00d4 000040E3 		movt	r0, #:upper16:.LC28
 12869 00d8 FEFFFFEB 		bl	RME_Str_Print
5239:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Is_Hyp);
 12870              		.loc 1 5239 5
 12871 00dc 14009BE5 		ldr	r0, [fp, #20]
 12872 00e0 FEFFFFEB 		bl	RME_Hex_Print
5240:../../Source/Kernel/rme_kernel.c ****      
5241:../../Source/Kernel/rme_kernel.c ****     
5242:../../Source/Kernel/rme_kernel.c ****     /* See if the maximum priority relationship is correct - a thread
5243:../../Source/Kernel/rme_kernel.c ****      * can never create a thread with higher maximum priority */
5244:../../Source/Kernel/rme_kernel.c ****     if((RME_CPU_LOCAL()->Thd_Cur)->Sched.Prio_Max<Prio_Max)
 12873              		.loc 1 5244 24
 12874 00e4 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 12875 00e8 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 12876 00ec 043093E5 		ldr	r3, [r3, #4]
 12877              		.loc 1 5244 41
 12878 00f0 243093E5 		ldr	r3, [r3, #36]
 12879              		.loc 1 5244 7
 12880 00f4 08209BE5 		ldr	r2, [fp, #8]
 12881 00f8 030052E1 		cmp	r2, r3
 12882 00fc 0400009A 		bls	.L807
5245:../../Source/Kernel/rme_kernel.c ****     {
5246:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5247:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nmaximum priority relationship is not correct");
 12883              		.loc 1 5247 9
 12884 0100 000000E3 		movw	r0, #:lower16:.LC29
 12885 0104 000040E3 		movt	r0, #:upper16:.LC29
 12886 0108 FEFFFFEB 		bl	RME_Str_Print
5248:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12887              		.loc 1 5248 16
 12888 010c CC30E0E3 		mvn	r3, #204
 12889 0110 100200EA 		b	.L808
 12890              	.L807:
5249:../../Source/Kernel/rme_kernel.c ****     }
5250:../../Source/Kernel/rme_kernel.c ****     else
5251:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 321


5252:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5253:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5254:../../Source/Kernel/rme_kernel.c ****     }
5255:../../Source/Kernel/rme_kernel.c **** 
5256:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5257:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12891              		.loc 1 5257 5
 12892 0114 34301BE5 		ldr	r3, [fp, #-52]
 12893 0118 803003E2 		and	r3, r3, #128
 12894 011c 000053E3 		cmp	r3, #0
 12895 0120 1C00001A 		bne	.L809
 12896              		.loc 1 5257 5 is_stmt 0 discriminator 1
 12897 0124 30301BE5 		ldr	r3, [fp, #-48]
 12898 0128 142093E5 		ldr	r2, [r3, #20]
 12899 012c 34301BE5 		ldr	r3, [fp, #-52]
 12900 0130 030052E1 		cmp	r2, r3
 12901 0134 0100008A 		bhi	.L810
 12902              		.loc 1 5257 5 discriminator 3
 12903 0138 0230E0E3 		mvn	r3, #2
 12904              		.loc 1 5257 5
 12905 013c 050200EA 		b	.L808
 12906              	.L810:
 12907              		.loc 1 5257 5 discriminator 4
 12908 0140 34301BE5 		ldr	r3, [fp, #-52]
 12909 0144 8322A0E1 		lsl	r2, r3, #5
 12910 0148 30301BE5 		ldr	r3, [fp, #-48]
 12911 014c 0C3093E5 		ldr	r3, [r3, #12]
 12912 0150 033082E0 		add	r3, r2, r3
 12913 0154 08300BE5 		str	r3, [fp, #-8]
 12914 0158 08301BE5 		ldr	r3, [fp, #-8]
 12915 015c 0300A0E1 		mov	r0, r3
 12916 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12917 0164 18000BE5 		str	r0, [fp, #-24]
 12918              		.loc 1 5257 5 discriminator 1
 12919 0168 18301BE5 		ldr	r3, [fp, #-24]
 12920 016c FF3803E2 		and	r3, r3, #16711680
 12921 0170 020853E3 		cmp	r3, #131072
 12922 0174 0100001A 		bne	.L811
 12923              		.loc 1 5257 5 discriminator 5
 12924 0178 0830E0E3 		mvn	r3, #8
 12925              		.loc 1 5257 5
 12926 017c F50100EA 		b	.L808
 12927              	.L811:
 12928              		.loc 1 5257 5 discriminator 6
 12929 0180 18301BE5 		ldr	r3, [fp, #-24]
 12930 0184 233CA0E1 		lsr	r3, r3, #24
 12931 0188 030053E3 		cmp	r3, #3
 12932 018c 3F00000A 		beq	.L812
 12933              		.loc 1 5257 5 discriminator 7
 12934 0190 0130E0E3 		mvn	r3, #1
 12935              		.loc 1 5257 5
 12936 0194 EF0100EA 		b	.L808
 12937              	.L809:
 12938              		.loc 1 5257 5 discriminator 2
 12939 0198 34301BE5 		ldr	r3, [fp, #-52]
 12940 019c 2324A0E1 		lsr	r2, r3, #8
 12941 01a0 30301BE5 		ldr	r3, [fp, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 322


 12942 01a4 143093E5 		ldr	r3, [r3, #20]
 12943 01a8 030052E1 		cmp	r2, r3
 12944 01ac 0100003A 		bcc	.L813
 12945              		.loc 1 5257 5 discriminator 8
 12946 01b0 0230E0E3 		mvn	r3, #2
 12947              		.loc 1 5257 5
 12948 01b4 E70100EA 		b	.L808
 12949              	.L813:
 12950              		.loc 1 5257 5 discriminator 9
 12951 01b8 34301BE5 		ldr	r3, [fp, #-52]
 12952 01bc 2334A0E1 		lsr	r3, r3, #8
 12953 01c0 8322A0E1 		lsl	r2, r3, #5
 12954 01c4 30301BE5 		ldr	r3, [fp, #-48]
 12955 01c8 0C3093E5 		ldr	r3, [r3, #12]
 12956 01cc 033082E0 		add	r3, r2, r3
 12957 01d0 08300BE5 		str	r3, [fp, #-8]
 12958 01d4 08301BE5 		ldr	r3, [fp, #-8]
 12959 01d8 0300A0E1 		mov	r0, r3
 12960 01dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12961 01e0 18000BE5 		str	r0, [fp, #-24]
 12962              		.loc 1 5257 5 discriminator 1
 12963 01e4 18301BE5 		ldr	r3, [fp, #-24]
 12964 01e8 FF3803E2 		and	r3, r3, #16711680
 12965 01ec 020853E3 		cmp	r3, #131072
 12966 01f0 0100001A 		bne	.L814
 12967              		.loc 1 5257 5 discriminator 10
 12968 01f4 0830E0E3 		mvn	r3, #8
 12969              		.loc 1 5257 5
 12970 01f8 D60100EA 		b	.L808
 12971              	.L814:
 12972              		.loc 1 5257 5 discriminator 11
 12973 01fc 18301BE5 		ldr	r3, [fp, #-24]
 12974 0200 233CA0E1 		lsr	r3, r3, #24
 12975 0204 030053E3 		cmp	r3, #3
 12976 0208 0100000A 		beq	.L815
 12977              		.loc 1 5257 5 discriminator 12
 12978 020c 0130E0E3 		mvn	r3, #1
 12979              		.loc 1 5257 5
 12980 0210 D00100EA 		b	.L808
 12981              	.L815:
 12982              		.loc 1 5257 5 discriminator 13
 12983 0214 34301BE5 		ldr	r3, [fp, #-52]
 12984 0218 7F2003E2 		and	r2, r3, #127
 12985 021c 08301BE5 		ldr	r3, [fp, #-8]
 12986 0220 143093E5 		ldr	r3, [r3, #20]
 12987 0224 030052E1 		cmp	r2, r3
 12988 0228 0100003A 		bcc	.L816
 12989              		.loc 1 5257 5 discriminator 14
 12990 022c 0230E0E3 		mvn	r3, #2
 12991              		.loc 1 5257 5
 12992 0230 C80100EA 		b	.L808
 12993              	.L816:
 12994              		.loc 1 5257 5 discriminator 15
 12995 0234 34301BE5 		ldr	r3, [fp, #-52]
 12996 0238 7F3003E2 		and	r3, r3, #127
 12997 023c 8322A0E1 		lsl	r2, r3, #5
 12998 0240 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 323


 12999 0244 0C3093E5 		ldr	r3, [r3, #12]
 13000 0248 033082E0 		add	r3, r2, r3
 13001 024c 08300BE5 		str	r3, [fp, #-8]
 13002 0250 08301BE5 		ldr	r3, [fp, #-8]
 13003 0254 0300A0E1 		mov	r0, r3
 13004 0258 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13005 025c 18000BE5 		str	r0, [fp, #-24]
 13006              		.loc 1 5257 5 discriminator 1
 13007 0260 18301BE5 		ldr	r3, [fp, #-24]
 13008 0264 FF3803E2 		and	r3, r3, #16711680
 13009 0268 020853E3 		cmp	r3, #131072
 13010 026c 0100001A 		bne	.L817
 13011              		.loc 1 5257 5 discriminator 16
 13012 0270 0830E0E3 		mvn	r3, #8
 13013              		.loc 1 5257 5
 13014 0274 B70100EA 		b	.L808
 13015              	.L817:
 13016              		.loc 1 5257 5 discriminator 17
 13017 0278 18301BE5 		ldr	r3, [fp, #-24]
 13018 027c 233CA0E1 		lsr	r3, r3, #24
 13019 0280 030053E3 		cmp	r3, #3
 13020 0284 0100000A 		beq	.L812
 13021              		.loc 1 5257 5 discriminator 18
 13022 0288 0130E0E3 		mvn	r3, #1
 13023              		.loc 1 5257 5
 13024 028c B10100EA 		b	.L808
 13025              	.L812:
5258:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5259:../../Source/Kernel/rme_kernel.c ****                    RME_DBG_S("\r\nreach 1");
 13026              		.loc 1 5259 20 is_stmt 1
 13027 0290 000000E3 		movw	r0, #:lower16:.LC30
 13028 0294 000040E3 		movt	r0, #:upper16:.LC30
 13029 0298 FEFFFFEB 		bl	RME_Str_Print
5260:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 13030              		.loc 1 5260 5
 13031 029c 38301BE5 		ldr	r3, [fp, #-56]
 13032 02a0 803003E2 		and	r3, r3, #128
 13033 02a4 000053E3 		cmp	r3, #0
 13034 02a8 1C00001A 		bne	.L818
 13035              		.loc 1 5260 5 is_stmt 0 discriminator 1
 13036 02ac 30301BE5 		ldr	r3, [fp, #-48]
 13037 02b0 142093E5 		ldr	r2, [r3, #20]
 13038 02b4 38301BE5 		ldr	r3, [fp, #-56]
 13039 02b8 030052E1 		cmp	r2, r3
 13040 02bc 0100008A 		bhi	.L819
 13041              		.loc 1 5260 5 discriminator 3
 13042 02c0 0230E0E3 		mvn	r3, #2
 13043              		.loc 1 5260 5
 13044 02c4 A30100EA 		b	.L808
 13045              	.L819:
 13046              		.loc 1 5260 5 discriminator 4
 13047 02c8 38301BE5 		ldr	r3, [fp, #-56]
 13048 02cc 8322A0E1 		lsl	r2, r3, #5
 13049 02d0 30301BE5 		ldr	r3, [fp, #-48]
 13050 02d4 0C3093E5 		ldr	r3, [r3, #12]
 13051 02d8 033082E0 		add	r3, r2, r3
 13052 02dc 10300BE5 		str	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 324


 13053 02e0 10301BE5 		ldr	r3, [fp, #-16]
 13054 02e4 0300A0E1 		mov	r0, r3
 13055 02e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13056 02ec 18000BE5 		str	r0, [fp, #-24]
 13057              		.loc 1 5260 5 discriminator 1
 13058 02f0 18301BE5 		ldr	r3, [fp, #-24]
 13059 02f4 FF3803E2 		and	r3, r3, #16711680
 13060 02f8 020853E3 		cmp	r3, #131072
 13061 02fc 0100001A 		bne	.L820
 13062              		.loc 1 5260 5 discriminator 5
 13063 0300 0830E0E3 		mvn	r3, #8
 13064              		.loc 1 5260 5
 13065 0304 930100EA 		b	.L808
 13066              	.L820:
 13067              		.loc 1 5260 5 discriminator 6
 13068 0308 18301BE5 		ldr	r3, [fp, #-24]
 13069 030c 233CA0E1 		lsr	r3, r3, #24
 13070 0310 020053E3 		cmp	r3, #2
 13071 0314 3F00000A 		beq	.L821
 13072              		.loc 1 5260 5 discriminator 7
 13073 0318 0130E0E3 		mvn	r3, #1
 13074              		.loc 1 5260 5
 13075 031c 8D0100EA 		b	.L808
 13076              	.L818:
 13077              		.loc 1 5260 5 discriminator 2
 13078 0320 38301BE5 		ldr	r3, [fp, #-56]
 13079 0324 2324A0E1 		lsr	r2, r3, #8
 13080 0328 30301BE5 		ldr	r3, [fp, #-48]
 13081 032c 143093E5 		ldr	r3, [r3, #20]
 13082 0330 030052E1 		cmp	r2, r3
 13083 0334 0100003A 		bcc	.L822
 13084              		.loc 1 5260 5 discriminator 8
 13085 0338 0230E0E3 		mvn	r3, #2
 13086              		.loc 1 5260 5
 13087 033c 850100EA 		b	.L808
 13088              	.L822:
 13089              		.loc 1 5260 5 discriminator 9
 13090 0340 38301BE5 		ldr	r3, [fp, #-56]
 13091 0344 2334A0E1 		lsr	r3, r3, #8
 13092 0348 8322A0E1 		lsl	r2, r3, #5
 13093 034c 30301BE5 		ldr	r3, [fp, #-48]
 13094 0350 0C3093E5 		ldr	r3, [r3, #12]
 13095 0354 033082E0 		add	r3, r2, r3
 13096 0358 10300BE5 		str	r3, [fp, #-16]
 13097 035c 10301BE5 		ldr	r3, [fp, #-16]
 13098 0360 0300A0E1 		mov	r0, r3
 13099 0364 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13100 0368 18000BE5 		str	r0, [fp, #-24]
 13101              		.loc 1 5260 5 discriminator 1
 13102 036c 18301BE5 		ldr	r3, [fp, #-24]
 13103 0370 FF3803E2 		and	r3, r3, #16711680
 13104 0374 020853E3 		cmp	r3, #131072
 13105 0378 0100001A 		bne	.L823
 13106              		.loc 1 5260 5 discriminator 10
 13107 037c 0830E0E3 		mvn	r3, #8
 13108              		.loc 1 5260 5
 13109 0380 740100EA 		b	.L808
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 325


 13110              	.L823:
 13111              		.loc 1 5260 5 discriminator 11
 13112 0384 18301BE5 		ldr	r3, [fp, #-24]
 13113 0388 233CA0E1 		lsr	r3, r3, #24
 13114 038c 030053E3 		cmp	r3, #3
 13115 0390 0100000A 		beq	.L824
 13116              		.loc 1 5260 5 discriminator 12
 13117 0394 0130E0E3 		mvn	r3, #1
 13118              		.loc 1 5260 5
 13119 0398 6E0100EA 		b	.L808
 13120              	.L824:
 13121              		.loc 1 5260 5 discriminator 13
 13122 039c 38301BE5 		ldr	r3, [fp, #-56]
 13123 03a0 7F2003E2 		and	r2, r3, #127
 13124 03a4 10301BE5 		ldr	r3, [fp, #-16]
 13125 03a8 143093E5 		ldr	r3, [r3, #20]
 13126 03ac 030052E1 		cmp	r2, r3
 13127 03b0 0100003A 		bcc	.L825
 13128              		.loc 1 5260 5 discriminator 14
 13129 03b4 0230E0E3 		mvn	r3, #2
 13130              		.loc 1 5260 5
 13131 03b8 660100EA 		b	.L808
 13132              	.L825:
 13133              		.loc 1 5260 5 discriminator 15
 13134 03bc 38301BE5 		ldr	r3, [fp, #-56]
 13135 03c0 7F3003E2 		and	r3, r3, #127
 13136 03c4 8322A0E1 		lsl	r2, r3, #5
 13137 03c8 10301BE5 		ldr	r3, [fp, #-16]
 13138 03cc 0C3093E5 		ldr	r3, [r3, #12]
 13139 03d0 033082E0 		add	r3, r2, r3
 13140 03d4 10300BE5 		str	r3, [fp, #-16]
 13141 03d8 10301BE5 		ldr	r3, [fp, #-16]
 13142 03dc 0300A0E1 		mov	r0, r3
 13143 03e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13144 03e4 18000BE5 		str	r0, [fp, #-24]
 13145              		.loc 1 5260 5 discriminator 1
 13146 03e8 18301BE5 		ldr	r3, [fp, #-24]
 13147 03ec FF3803E2 		and	r3, r3, #16711680
 13148 03f0 020853E3 		cmp	r3, #131072
 13149 03f4 0100001A 		bne	.L826
 13150              		.loc 1 5260 5 discriminator 16
 13151 03f8 0830E0E3 		mvn	r3, #8
 13152              		.loc 1 5260 5
 13153 03fc 550100EA 		b	.L808
 13154              	.L826:
 13155              		.loc 1 5260 5 discriminator 17
 13156 0400 18301BE5 		ldr	r3, [fp, #-24]
 13157 0404 233CA0E1 		lsr	r3, r3, #24
 13158 0408 020053E3 		cmp	r3, #2
 13159 040c 0100000A 		beq	.L821
 13160              		.loc 1 5260 5 discriminator 18
 13161 0410 0130E0E3 		mvn	r3, #1
 13162              		.loc 1 5260 5
 13163 0414 4F0100EA 		b	.L808
 13164              	.L821:
5261:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
5262:../../Source/Kernel/rme_kernel.c ****                    RME_DBG_S("\r\nreach 2");
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 326


 13165              		.loc 1 5262 20 is_stmt 1
 13166 0418 000000E3 		movw	r0, #:lower16:.LC31
 13167 041c 000040E3 		movt	r0, #:upper16:.LC31
 13168 0420 FEFFFFEB 		bl	RME_Str_Print
5263:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 13169              		.loc 1 5263 5
 13170 0424 04309BE5 		ldr	r3, [fp, #4]
 13171 0428 803003E2 		and	r3, r3, #128
 13172 042c 000053E3 		cmp	r3, #0
 13173 0430 1C00001A 		bne	.L827
 13174              		.loc 1 5263 5 is_stmt 0 discriminator 1
 13175 0434 30301BE5 		ldr	r3, [fp, #-48]
 13176 0438 142093E5 		ldr	r2, [r3, #20]
 13177 043c 04309BE5 		ldr	r3, [fp, #4]
 13178 0440 030052E1 		cmp	r2, r3
 13179 0444 0100008A 		bhi	.L828
 13180              		.loc 1 5263 5 discriminator 3
 13181 0448 0230E0E3 		mvn	r3, #2
 13182              		.loc 1 5263 5
 13183 044c 410100EA 		b	.L808
 13184              	.L828:
 13185              		.loc 1 5263 5 discriminator 4
 13186 0450 04309BE5 		ldr	r3, [fp, #4]
 13187 0454 8322A0E1 		lsl	r2, r3, #5
 13188 0458 30301BE5 		ldr	r3, [fp, #-48]
 13189 045c 0C3093E5 		ldr	r3, [r3, #12]
 13190 0460 033082E0 		add	r3, r2, r3
 13191 0464 0C300BE5 		str	r3, [fp, #-12]
 13192 0468 0C301BE5 		ldr	r3, [fp, #-12]
 13193 046c 0300A0E1 		mov	r0, r3
 13194 0470 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13195 0474 18000BE5 		str	r0, [fp, #-24]
 13196              		.loc 1 5263 5 discriminator 1
 13197 0478 18301BE5 		ldr	r3, [fp, #-24]
 13198 047c FF3803E2 		and	r3, r3, #16711680
 13199 0480 020853E3 		cmp	r3, #131072
 13200 0484 0100001A 		bne	.L829
 13201              		.loc 1 5263 5 discriminator 5
 13202 0488 0830E0E3 		mvn	r3, #8
 13203              		.loc 1 5263 5
 13204 048c 310100EA 		b	.L808
 13205              	.L829:
 13206              		.loc 1 5263 5 discriminator 6
 13207 0490 18301BE5 		ldr	r3, [fp, #-24]
 13208 0494 233CA0E1 		lsr	r3, r3, #24
 13209 0498 050053E3 		cmp	r3, #5
 13210 049c 3F00000A 		beq	.L830
 13211              		.loc 1 5263 5 discriminator 7
 13212 04a0 0130E0E3 		mvn	r3, #1
 13213              		.loc 1 5263 5
 13214 04a4 2B0100EA 		b	.L808
 13215              	.L827:
 13216              		.loc 1 5263 5 discriminator 2
 13217 04a8 04309BE5 		ldr	r3, [fp, #4]
 13218 04ac 2324A0E1 		lsr	r2, r3, #8
 13219 04b0 30301BE5 		ldr	r3, [fp, #-48]
 13220 04b4 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 327


 13221 04b8 030052E1 		cmp	r2, r3
 13222 04bc 0100003A 		bcc	.L831
 13223              		.loc 1 5263 5 discriminator 8
 13224 04c0 0230E0E3 		mvn	r3, #2
 13225              		.loc 1 5263 5
 13226 04c4 230100EA 		b	.L808
 13227              	.L831:
 13228              		.loc 1 5263 5 discriminator 9
 13229 04c8 04309BE5 		ldr	r3, [fp, #4]
 13230 04cc 2334A0E1 		lsr	r3, r3, #8
 13231 04d0 8322A0E1 		lsl	r2, r3, #5
 13232 04d4 30301BE5 		ldr	r3, [fp, #-48]
 13233 04d8 0C3093E5 		ldr	r3, [r3, #12]
 13234 04dc 033082E0 		add	r3, r2, r3
 13235 04e0 0C300BE5 		str	r3, [fp, #-12]
 13236 04e4 0C301BE5 		ldr	r3, [fp, #-12]
 13237 04e8 0300A0E1 		mov	r0, r3
 13238 04ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13239 04f0 18000BE5 		str	r0, [fp, #-24]
 13240              		.loc 1 5263 5 discriminator 1
 13241 04f4 18301BE5 		ldr	r3, [fp, #-24]
 13242 04f8 FF3803E2 		and	r3, r3, #16711680
 13243 04fc 020853E3 		cmp	r3, #131072
 13244 0500 0100001A 		bne	.L832
 13245              		.loc 1 5263 5 discriminator 10
 13246 0504 0830E0E3 		mvn	r3, #8
 13247              		.loc 1 5263 5
 13248 0508 120100EA 		b	.L808
 13249              	.L832:
 13250              		.loc 1 5263 5 discriminator 11
 13251 050c 18301BE5 		ldr	r3, [fp, #-24]
 13252 0510 233CA0E1 		lsr	r3, r3, #24
 13253 0514 030053E3 		cmp	r3, #3
 13254 0518 0100000A 		beq	.L833
 13255              		.loc 1 5263 5 discriminator 12
 13256 051c 0130E0E3 		mvn	r3, #1
 13257              		.loc 1 5263 5
 13258 0520 0C0100EA 		b	.L808
 13259              	.L833:
 13260              		.loc 1 5263 5 discriminator 13
 13261 0524 04309BE5 		ldr	r3, [fp, #4]
 13262 0528 7F2003E2 		and	r2, r3, #127
 13263 052c 0C301BE5 		ldr	r3, [fp, #-12]
 13264 0530 143093E5 		ldr	r3, [r3, #20]
 13265 0534 030052E1 		cmp	r2, r3
 13266 0538 0100003A 		bcc	.L834
 13267              		.loc 1 5263 5 discriminator 14
 13268 053c 0230E0E3 		mvn	r3, #2
 13269              		.loc 1 5263 5
 13270 0540 040100EA 		b	.L808
 13271              	.L834:
 13272              		.loc 1 5263 5 discriminator 15
 13273 0544 04309BE5 		ldr	r3, [fp, #4]
 13274 0548 7F3003E2 		and	r3, r3, #127
 13275 054c 8322A0E1 		lsl	r2, r3, #5
 13276 0550 0C301BE5 		ldr	r3, [fp, #-12]
 13277 0554 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 328


 13278 0558 033082E0 		add	r3, r2, r3
 13279 055c 0C300BE5 		str	r3, [fp, #-12]
 13280 0560 0C301BE5 		ldr	r3, [fp, #-12]
 13281 0564 0300A0E1 		mov	r0, r3
 13282 0568 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13283 056c 18000BE5 		str	r0, [fp, #-24]
 13284              		.loc 1 5263 5 discriminator 1
 13285 0570 18301BE5 		ldr	r3, [fp, #-24]
 13286 0574 FF3803E2 		and	r3, r3, #16711680
 13287 0578 020853E3 		cmp	r3, #131072
 13288 057c 0100001A 		bne	.L835
 13289              		.loc 1 5263 5 discriminator 16
 13290 0580 0830E0E3 		mvn	r3, #8
 13291              		.loc 1 5263 5
 13292 0584 F30000EA 		b	.L808
 13293              	.L835:
 13294              		.loc 1 5263 5 discriminator 17
 13295 0588 18301BE5 		ldr	r3, [fp, #-24]
 13296 058c 233CA0E1 		lsr	r3, r3, #24
 13297 0590 050053E3 		cmp	r3, #5
 13298 0594 0100000A 		beq	.L830
 13299              		.loc 1 5263 5 discriminator 18
 13300 0598 0130E0E3 		mvn	r3, #1
 13301              		.loc 1 5263 5
 13302 059c ED0000EA 		b	.L808
 13303              	.L830:
5264:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
5265:../../Source/Kernel/rme_kernel.c ****                    RME_DBG_S("\r\nreach 3");
 13304              		.loc 1 5265 20 is_stmt 1
 13305 05a0 000000E3 		movw	r0, #:lower16:.LC32
 13306 05a4 000040E3 		movt	r0, #:upper16:.LC32
 13307 05a8 FEFFFFEB 		bl	RME_Str_Print
5266:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5267:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 13308              		.loc 1 5267 5
 13309 05ac 08301BE5 		ldr	r3, [fp, #-8]
 13310 05b0 083093E5 		ldr	r3, [r3, #8]
 13311 05b4 013003E2 		and	r3, r3, #1
 13312 05b8 000053E3 		cmp	r3, #0
 13313 05bc 0100001A 		bne	.L836
 13314              		.loc 1 5267 5 is_stmt 0 discriminator 1
 13315 05c0 0630E0E3 		mvn	r3, #6
 13316              		.loc 1 5267 5
 13317 05c4 E30000EA 		b	.L808
 13318              	.L836:
5268:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 4");
 13319              		.loc 1 5268 5 is_stmt 1
 13320 05c8 000000E3 		movw	r0, #:lower16:.LC33
 13321 05cc 000040E3 		movt	r0, #:upper16:.LC33
 13322 05d0 FEFFFFEB 		bl	RME_Str_Print
5269:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 13323              		.loc 1 5269 5
 13324 05d4 0C301BE5 		ldr	r3, [fp, #-12]
 13325 05d8 083093E5 		ldr	r3, [r3, #8]
 13326 05dc 023003E2 		and	r3, r3, #2
 13327 05e0 000053E3 		cmp	r3, #0
 13328 05e4 0100001A 		bne	.L837
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 329


 13329              		.loc 1 5269 5 is_stmt 0 discriminator 1
 13330 05e8 0630E0E3 		mvn	r3, #6
 13331              		.loc 1 5269 5
 13332 05ec D90000EA 		b	.L808
 13333              	.L837:
5270:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 5");
 13334              		.loc 1 5270 5 is_stmt 1
 13335 05f0 000000E3 		movw	r0, #:lower16:.LC34
 13336 05f4 000040E3 		movt	r0, #:upper16:.LC34
 13337 05f8 FEFFFFEB 		bl	RME_Str_Print
5271:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
5272:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13338              		.loc 1 5272 7
 13339 05fc 14309BE5 		ldr	r3, [fp, #20]
 13340 0600 000053E3 		cmp	r3, #0
 13341 0604 0200001A 		bne	.L838
5273:../../Source/Kernel/rme_kernel.c ****     {
5274:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5275:../../Source/Kernel/rme_kernel.c ****         
5276:../../Source/Kernel/rme_kernel.c ****         Size=RME_THD_SIZE(Attr);
 13342              		.loc 1 5276 13
 13343 0608 9C30A0E3 		mov	r3, #156
 13344 060c 14300BE5 		str	r3, [fp, #-20]
 13345 0610 010000EA 		b	.L839
 13346              	.L838:
5277:../../Source/Kernel/rme_kernel.c ****     }
5278:../../Source/Kernel/rme_kernel.c ****     else
5279:../../Source/Kernel/rme_kernel.c ****     {
5280:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5281:../../Source/Kernel/rme_kernel.c ****         
5282:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_SIZE==0U)
5283:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
5284:../../Source/Kernel/rme_kernel.c **** #else
5285:../../Source/Kernel/rme_kernel.c ****         Size=RME_HYP_SIZE;
 13347              		.loc 1 5285 13
 13348 0614 5830A0E3 		mov	r3, #88
 13349 0618 14300BE5 		str	r3, [fp, #-20]
 13350              	.L839:
5286:../../Source/Kernel/rme_kernel.c **** #endif
5287:../../Source/Kernel/rme_kernel.c ****     }
5288:../../Source/Kernel/rme_kernel.c ****     
5289:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Vaddr)<(Raddr))) 
 13351              		.loc 1 5289 7
 13352 061c 1C201BE5 		ldr	r2, [fp, #-28]
 13353 0620 0C309BE5 		ldr	r3, [fp, #12]
 13354 0624 030052E1 		cmp	r2, r3
 13355 0628 0900002A 		bcs	.L840
5290:../../Source/Kernel/rme_kernel.c ****     {
5291:../../Source/Kernel/rme_kernel.c ****       RME_DBG_S("\r\nvaddr= ");
 13356              		.loc 1 5291 7
 13357 062c 000000E3 		movw	r0, #:lower16:.LC35
 13358 0630 000040E3 		movt	r0, #:upper16:.LC35
 13359 0634 FEFFFFEB 		bl	RME_Str_Print
5292:../../Source/Kernel/rme_kernel.c ****       RME_DBG_H(Vaddr);
 13360              		.loc 1 5292 7
 13361 0638 1C001BE5 		ldr	r0, [fp, #-28]
 13362 063c FEFFFFEB 		bl	RME_Hex_Print
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 330


5293:../../Source/Kernel/rme_kernel.c ****       RME_DBG_S("\r\nRaddr= ");
 13363              		.loc 1 5293 7
 13364 0640 000000E3 		movw	r0, #:lower16:.LC36
 13365 0644 000040E3 		movt	r0, #:upper16:.LC36
 13366 0648 FEFFFFEB 		bl	RME_Str_Print
5294:../../Source/Kernel/rme_kernel.c ****       RME_DBG_H(Raddr);
 13367              		.loc 1 5294 7
 13368 064c 0C009BE5 		ldr	r0, [fp, #12]
 13369 0650 FEFFFFEB 		bl	RME_Hex_Print
 13370              	.L840:
5295:../../Source/Kernel/rme_kernel.c ****     }
5296:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_THD,Raddr,Vaddr,Size);
 13371              		.loc 1 5296 5
 13372 0654 10301BE5 		ldr	r3, [fp, #-16]
 13373 0658 083093E5 		ldr	r3, [r3, #8]
 13374 065c 043003E2 		and	r3, r3, #4
 13375 0660 000053E3 		cmp	r3, #0
 13376 0664 0100001A 		bne	.L841
 13377              		.loc 1 5296 5 is_stmt 0 discriminator 1
 13378 0668 0630E0E3 		mvn	r3, #6
 13379              		.loc 1 5296 5
 13380 066c B90000EA 		b	.L808
 13381              	.L841:
 13382              		.loc 1 5296 5 discriminator 2
 13383 0670 10301BE5 		ldr	r3, [fp, #-16]
 13384 0674 143093E5 		ldr	r3, [r3, #20]
 13385 0678 0C209BE5 		ldr	r2, [fp, #12]
 13386 067c 033082E0 		add	r3, r2, r3
 13387 0680 1C300BE5 		str	r3, [fp, #-28]
 13388 0684 1C201BE5 		ldr	r2, [fp, #-28]
 13389 0688 0C309BE5 		ldr	r3, [fp, #12]
 13390 068c 030052E1 		cmp	r2, r3
 13391 0690 0100002A 		bcs	.L842
 13392              		.loc 1 5296 5 discriminator 3
 13393 0694 0630E0E3 		mvn	r3, #6
 13394              		.loc 1 5296 5
 13395 0698 AE0000EA 		b	.L808
 13396              	.L842:
 13397              		.loc 1 5296 5 discriminator 4
 13398 069c 10301BE5 		ldr	r3, [fp, #-16]
 13399 06a0 143093E5 		ldr	r3, [r3, #20]
 13400 06a4 1C201BE5 		ldr	r2, [fp, #-28]
 13401 06a8 030052E1 		cmp	r2, r3
 13402 06ac 0100002A 		bcs	.L843
 13403              		.loc 1 5296 5 discriminator 5
 13404 06b0 0630E0E3 		mvn	r3, #6
 13405              		.loc 1 5296 5
 13406 06b4 A70000EA 		b	.L808
 13407              	.L843:
 13408              		.loc 1 5296 5 discriminator 6
 13409 06b8 1C201BE5 		ldr	r2, [fp, #-28]
 13410 06bc 14301BE5 		ldr	r3, [fp, #-20]
 13411 06c0 033082E0 		add	r3, r2, r3
 13412 06c4 1C201BE5 		ldr	r2, [fp, #-28]
 13413 06c8 030052E1 		cmp	r2, r3
 13414 06cc 0100009A 		bls	.L844
 13415              		.loc 1 5296 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 331


 13416 06d0 0630E0E3 		mvn	r3, #6
 13417              		.loc 1 5296 5
 13418 06d4 9F0000EA 		b	.L808
 13419              	.L844:
 13420              		.loc 1 5296 5 discriminator 8
 13421 06d8 10301BE5 		ldr	r3, [fp, #-16]
 13422 06dc 182093E5 		ldr	r2, [r3, #24]
 13423 06e0 1C101BE5 		ldr	r1, [fp, #-28]
 13424 06e4 14301BE5 		ldr	r3, [fp, #-20]
 13425 06e8 033081E0 		add	r3, r1, r3
 13426 06ec 013043E2 		sub	r3, r3, #1
 13427 06f0 030052E1 		cmp	r2, r3
 13428 06f4 0100002A 		bcs	.L845
 13429              		.loc 1 5296 5 discriminator 9
 13430 06f8 0630E0E3 		mvn	r3, #6
 13431              		.loc 1 5296 5
 13432 06fc 950000EA 		b	.L808
 13433              	.L845:
5297:../../Source/Kernel/rme_kernel.c ****     
5298:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 6");
 13434              		.loc 1 5298 5 is_stmt 1
 13435 0700 000000E3 		movw	r0, #:lower16:.LC37
 13436 0704 000040E3 		movt	r0, #:upper16:.LC37
 13437 0708 FEFFFFEB 		bl	RME_Str_Print
5299:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5300:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 13438              		.loc 1 5300 5
 13439 070c 08301BE5 		ldr	r3, [fp, #-8]
 13440 0710 142093E5 		ldr	r2, [r3, #20]
 13441 0714 3C301BE5 		ldr	r3, [fp, #-60]
 13442 0718 030052E1 		cmp	r2, r3
 13443 071c 0100008A 		bhi	.L846
 13444              		.loc 1 5300 5 is_stmt 0 discriminator 1
 13445 0720 0230E0E3 		mvn	r3, #2
 13446              		.loc 1 5300 5
 13447 0724 8B0000EA 		b	.L808
 13448              	.L846:
 13449              		.loc 1 5300 5 discriminator 2
 13450 0728 3C301BE5 		ldr	r3, [fp, #-60]
 13451 072c 8322A0E1 		lsl	r2, r3, #5
 13452 0730 08301BE5 		ldr	r3, [fp, #-8]
 13453 0734 0C3093E5 		ldr	r3, [r3, #12]
 13454 0738 033082E0 		add	r3, r2, r3
 13455 073c 20300BE5 		str	r3, [fp, #-32]
5301:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 7");
 13456              		.loc 1 5301 5 is_stmt 1
 13457 0740 000000E3 		movw	r0, #:lower16:.LC38
 13458 0744 000040E3 		movt	r0, #:upper16:.LC38
 13459 0748 FEFFFFEB 		bl	RME_Str_Print
5302:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5303:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 13460              		.loc 1 5303 5
 13461 074c 20301BE5 		ldr	r3, [fp, #-32]
 13462 0750 0128A0E3 		mov	r2, #65536
 13463 0754 0010A0E3 		mov	r1, #0
 13464 0758 0300A0E1 		mov	r0, r3
 13465 075c FEFFFFEB 		bl	_RME_Comp_Swap_Single
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 332


 13466 0760 0030A0E1 		mov	r3, r0
 13467              		.loc 1 5303 5 is_stmt 0 discriminator 1
 13468 0764 000053E3 		cmp	r3, #0
 13469 0768 0100001A 		bne	.L847
 13470 076c 0430E0E3 		mvn	r3, #4
 13471              		.loc 1 5303 5
 13472 0770 780000EA 		b	.L808
 13473              	.L847:
 13474              		.loc 1 5303 5 discriminator 2
 13475 0774 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13476 0778 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13477 077c 002093E5 		ldr	r2, [r3]
 13478 0780 20301BE5 		ldr	r3, [fp, #-32]
 13479 0784 102083E5 		str	r2, [r3, #16]
5304:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 8");
 13480              		.loc 1 5304 5 is_stmt 1
 13481 0788 000000E3 		movw	r0, #:lower16:.LC39
 13482 078c 000040E3 		movt	r0, #:upper16:.LC39
 13483 0790 FEFFFFEB 		bl	RME_Str_Print
5305:../../Source/Kernel/rme_kernel.c ****      
5306:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5307:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Size)<0)
 13484              		.loc 1 5307 8
 13485 0794 14101BE5 		ldr	r1, [fp, #-20]
 13486 0798 1C001BE5 		ldr	r0, [fp, #-28]
 13487 079c FEFFFFEB 		bl	_RME_Kot_Mark
 13488 07a0 0030A0E1 		mov	r3, r0
 13489              		.loc 1 5307 7 discriminator 1
 13490 07a4 000053E3 		cmp	r3, #0
 13491 07a8 0E0000AA 		bge	.L848
5308:../../Source/Kernel/rme_kernel.c ****     {
5309:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5310:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n_RME_Kot_Mark(Vaddr,Size)");
 13492              		.loc 1 5310 9
 13493 07ac 000000E3 		movw	r0, #:lower16:.LC40
 13494 07b0 000040E3 		movt	r0, #:upper16:.LC40
 13495 07b4 FEFFFFEB 		bl	RME_Str_Print
5311:../../Source/Kernel/rme_kernel.c ****         RME_DBG_I(_RME_Kot_Mark(Vaddr,Size));
 13496              		.loc 1 5311 9
 13497 07b8 14101BE5 		ldr	r1, [fp, #-20]
 13498 07bc 1C001BE5 		ldr	r0, [fp, #-28]
 13499 07c0 FEFFFFEB 		bl	_RME_Kot_Mark
 13500 07c4 0030A0E1 		mov	r3, r0
 13501              		.loc 1 5311 9 is_stmt 0 discriminator 1
 13502 07c8 0300A0E1 		mov	r0, r3
 13503 07cc FEFFFFEB 		bl	RME_Int_Print
5312:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 13504              		.loc 1 5312 9 is_stmt 1
 13505 07d0 20301BE5 		ldr	r3, [fp, #-32]
 13506 07d4 0010A0E3 		mov	r1, #0
 13507 07d8 0300A0E1 		mov	r0, r3
 13508 07dc FEFFFFEB 		bl	__RME_A7A_Write_Release
5313:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 13509              		.loc 1 5313 16
 13510 07e0 0330E0E3 		mvn	r3, #3
 13511 07e4 5B0000EA 		b	.L808
 13512              	.L848:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 333


5314:../../Source/Kernel/rme_kernel.c ****     }
5315:../../Source/Kernel/rme_kernel.c ****     else
5316:../../Source/Kernel/rme_kernel.c ****     {
5317:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5318:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5319:../../Source/Kernel/rme_kernel.c ****     }
5320:../../Source/Kernel/rme_kernel.c ****     
5321:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5322:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 13513              		.loc 1 5322 11
 13514 07e8 1C301BE5 		ldr	r3, [fp, #-28]
 13515 07ec 24300BE5 		str	r3, [fp, #-36]
5323:../../Source/Kernel/rme_kernel.c ****     /* These thread's TID default to 0, and have no timeslices assigned */
5324:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 13516              		.loc 1 5324 22
 13517 07f0 24301BE5 		ldr	r3, [fp, #-36]
 13518 07f4 0020A0E3 		mov	r2, #0
 13519 07f8 102083E5 		str	r2, [r3, #16]
5325:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 13520              		.loc 1 5325 24
 13521 07fc 24301BE5 		ldr	r3, [fp, #-36]
 13522 0800 0020A0E3 		mov	r2, #0
 13523 0804 182083E5 		str	r2, [r3, #24]
5326:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_TIMEOUT;
 13524              		.loc 1 5326 24
 13525 0808 24301BE5 		ldr	r3, [fp, #-36]
 13526 080c 0220A0E3 		mov	r2, #2
 13527 0810 1C2083E5 		str	r2, [r3, #28]
5327:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 13528              		.loc 1 5327 14
 13529 0814 0C301BE5 		ldr	r3, [fp, #-12]
 13530 0818 003093E5 		ldr	r3, [r3]
 13531 081c 7330FFE6 		uxth	r3, r3
 13532 0820 000053E3 		cmp	r3, #0
 13533 0824 0200000A 		beq	.L849
 13534              		.loc 1 5327 14 is_stmt 0 discriminator 1
 13535 0828 0C301BE5 		ldr	r3, [fp, #-12]
 13536 082c 043093E5 		ldr	r3, [r3, #4]
 13537 0830 000000EA 		b	.L850
 13538              	.L849:
 13539              		.loc 1 5327 14 discriminator 2
 13540 0834 0C301BE5 		ldr	r3, [fp, #-12]
 13541              	.L850:
 13542              		.loc 1 5327 13 is_stmt 1 discriminator 4
 13543 0838 28300BE5 		str	r3, [fp, #-40]
5328:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 13544              		.loc 1 5328 22
 13545 083c 24301BE5 		ldr	r3, [fp, #-36]
 13546 0840 28201BE5 		ldr	r2, [fp, #-40]
 13547 0844 2C2083E5 		str	r2, [r3, #44]
5329:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 13548              		.loc 1 5329 25
 13549 0848 24301BE5 		ldr	r3, [fp, #-36]
 13550 084c 0020A0E3 		mov	r2, #0
 13551 0850 282083E5 		str	r2, [r3, #40]
5330:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=Prio_Max;
 13552              		.loc 1 5330 27
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 334


 13553 0854 24301BE5 		ldr	r3, [fp, #-36]
 13554 0858 08209BE5 		ldr	r2, [fp, #8]
 13555 085c 242083E5 		str	r2, [r3, #36]
5331:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=0U;
 13556              		.loc 1 5331 28
 13557 0860 24301BE5 		ldr	r3, [fp, #-36]
 13558 0864 0020A0E3 		mov	r2, #0
 13559 0868 302083E5 		str	r2, [r3, #48]
5332:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 13560              		.loc 1 5332 28
 13561 086c 24301BE5 		ldr	r3, [fp, #-36]
 13562 0870 0020A0E3 		mov	r2, #0
 13563 0874 382083E5 		str	r2, [r3, #56]
5333:../../Source/Kernel/rme_kernel.c ****     /* Currently the thread is not bound to any particular CPU */
5334:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=RME_THD_FREE;
 13564              		.loc 1 5334 24
 13565 0878 24301BE5 		ldr	r3, [fp, #-36]
 13566 087c 0020E0E3 		mvn	r2, #0
 13567 0880 142083E5 		str	r2, [r3, #20]
5335:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5336:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 13568              		.loc 1 5336 5
 13569 0884 24301BE5 		ldr	r3, [fp, #-36]
 13570 0888 083083E2 		add	r3, r3, #8
 13571 088c 0300A0E1 		mov	r0, r3
 13572 0890 FEFFFFEB 		bl	_RME_List_Crt
5337:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 13573              		.loc 1 5337 5
 13574 0894 24301BE5 		ldr	r3, [fp, #-36]
 13575 0898 3C3083E2 		add	r3, r3, #60
 13576 089c 0300A0E1 		mov	r0, r3
 13577 08a0 FEFFFFEB 		bl	_RME_List_Crt
5338:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this is not a hypervisor thread yet */
5339:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13578              		.loc 1 5339 7
 13579 08a4 14309BE5 		ldr	r3, [fp, #20]
 13580 08a8 000053E3 		cmp	r3, #0
 13581 08ac 0800001A 		bne	.L851
5340:../../Source/Kernel/rme_kernel.c ****     {
5341:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5342:../../Source/Kernel/rme_kernel.c ****         
5343:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr;
 13582              		.loc 1 5343 29
 13583 08b0 24301BE5 		ldr	r3, [fp, #-36]
 13584 08b4 10209BE5 		ldr	r2, [fp, #16]
 13585 08b8 442083E5 		str	r2, [r3, #68]
5344:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 13586              		.loc 1 5344 52
 13587 08bc 1C301BE5 		ldr	r3, [fp, #-28]
 13588 08c0 583083E2 		add	r3, r3, #88
 13589              		.loc 1 5344 25
 13590 08c4 0320A0E1 		mov	r2, r3
 13591              		.loc 1 5344 24
 13592 08c8 24301BE5 		ldr	r3, [fp, #-36]
 13593 08cc 482083E5 		str	r2, [r3, #72]
 13594 08d0 060000EA 		b	.L852
 13595              	.L851:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 335


5345:../../Source/Kernel/rme_kernel.c ****     }
5346:../../Source/Kernel/rme_kernel.c ****     /* Default to HYP_VA_BASE for all created hypervisor threads */
5347:../../Source/Kernel/rme_kernel.c ****     else
5348:../../Source/Kernel/rme_kernel.c ****     {
5349:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5350:../../Source/Kernel/rme_kernel.c ****         
5351:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr|RME_THD_HYP_FLAG;
 13596              		.loc 1 5351 34
 13597 08d4 10309BE5 		ldr	r3, [fp, #16]
 13598 08d8 022183E3 		orr	r2, r3, #-2147483648
 13599              		.loc 1 5351 29
 13600 08dc 24301BE5 		ldr	r3, [fp, #-36]
 13601 08e0 442083E5 		str	r2, [r3, #68]
5352:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg *)RME_HYP_VA_BASE;
 13602              		.loc 1 5352 24
 13603 08e4 24301BE5 		ldr	r3, [fp, #-36]
 13604 08e8 0222A0E3 		mov	r2, #536870912
 13605 08ec 482083E5 		str	r2, [r3, #72]
 13606              	.L852:
5353:../../Source/Kernel/rme_kernel.c ****     }
5354:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5355:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 13607              		.loc 1 5355 5
 13608 08f0 24301BE5 		ldr	r3, [fp, #-36]
 13609 08f4 4C3083E2 		add	r3, r3, #76
 13610 08f8 0300A0E1 		mov	r0, r3
 13611 08fc FEFFFFEB 		bl	_RME_List_Crt
5356:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 13612              		.loc 1 5356 29
 13613 0900 24301BE5 		ldr	r3, [fp, #-36]
 13614 0904 0020A0E3 		mov	r2, #0
 13615 0908 542083E5 		str	r2, [r3, #84]
5357:../../Source/Kernel/rme_kernel.c **** 
5358:../../Source/Kernel/rme_kernel.c ****     /* Header init */
5359:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=0U;
 13616              		.loc 1 5359 27
 13617 090c 20301BE5 		ldr	r3, [fp, #-32]
 13618 0910 0020A0E3 		mov	r2, #0
 13619 0914 042083E5 		str	r2, [r3, #4]
5360:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 13620              		.loc 1 5360 25
 13621 0918 20301BE5 		ldr	r3, [fp, #-32]
 13622 091c 1C201BE5 		ldr	r2, [fp, #-28]
 13623 0920 0C2083E5 		str	r2, [r3, #12]
5361:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_ALL;
 13624              		.loc 1 5361 23
 13625 0924 20301BE5 		ldr	r3, [fp, #-32]
 13626 0928 FF2100E3 		movw	r2, #511
 13627 092c 082083E5 		str	r2, [r3, #8]
5362:../../Source/Kernel/rme_kernel.c **** 
5363:../../Source/Kernel/rme_kernel.c ****     /* Reference process */
5364:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 13628              		.loc 1 5364 5
 13629 0930 28301BE5 		ldr	r3, [fp, #-40]
 13630 0934 043083E2 		add	r3, r3, #4
 13631 0938 0110A0E3 		mov	r1, #1
 13632 093c 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 336


 13633 0940 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5365:../../Source/Kernel/rme_kernel.c ****     
5366:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5367:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 13634              		.loc 1 5367 5
 13635 0944 20301BE5 		ldr	r3, [fp, #-32]
 13636 0948 0614A0E3 		mov	r1, #100663296
 13637 094c 0300A0E1 		mov	r0, r3
 13638 0950 FEFFFFEB 		bl	__RME_A7A_Write_Release
5368:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5369:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5370:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5371:../../Source/Kernel/rme_kernel.c **** 
5372:../../Source/Kernel/rme_kernel.c ****     return 0;
 13639              		.loc 1 5372 12
 13640 0954 0030A0E3 		mov	r3, #0
 13641              	.L808:
5373:../../Source/Kernel/rme_kernel.c **** }
 13642              		.loc 1 5373 1
 13643 0958 0300A0E1 		mov	r0, r3
 13644 095c 04D04BE2 		sub	sp, fp, #4
 13645              		.cfi_def_cfa 13, 8
 13646              		@ sp needed
 13647 0960 0088BDE8 		pop	{fp, pc}
 13648              		.cfi_endproc
 13649              	.LFE56:
 13651              		.section	.text._RME_Thd_Del,"ax",%progbits
 13652              		.align	2
 13653              		.syntax unified
 13654              		.arm
 13656              	_RME_Thd_Del:
 13657              	.LFB57:
5374:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Crt *************************************************/
5375:../../Source/Kernel/rme_kernel.c **** 
5376:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Del ******************************************************
5377:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread.
5378:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
5379:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5380:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5381:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread in the captbl.
5382:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5383:../../Source/Kernel/rme_kernel.c **** Output      : None.
5384:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5385:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5386:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Del(struct RME_Cap_Cpt* Cpt,
5387:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5388:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd)
5389:../../Source/Kernel/rme_kernel.c **** {
 13658              		.loc 1 5389 1
 13659              		.cfi_startproc
 13660              		@ args = 0, pretend = 0, frame = 40
 13661              		@ frame_needed = 1, uses_anonymous_args = 0
 13662 0000 00482DE9 		push	{fp, lr}
 13663              		.cfi_def_cfa_offset 8
 13664              		.cfi_offset 11, -8
 13665              		.cfi_offset 14, -4
 13666 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 337


 13667              		.cfi_def_cfa 11, 4
 13668 0008 28D04DE2 		sub	sp, sp, #40
 13669 000c 20000BE5 		str	r0, [fp, #-32]
 13670 0010 24100BE5 		str	r1, [fp, #-36]
 13671 0014 28200BE5 		str	r2, [fp, #-40]
5390:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5391:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Del;
5392:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5393:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
5394:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5395:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
5396:../../Source/Kernel/rme_kernel.c ****     
5397:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5398:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 13672              		.loc 1 5398 5
 13673 0018 24301BE5 		ldr	r3, [fp, #-36]
 13674 001c 803003E2 		and	r3, r3, #128
 13675 0020 000053E3 		cmp	r3, #0
 13676 0024 1C00001A 		bne	.L854
 13677              		.loc 1 5398 5 is_stmt 0 discriminator 1
 13678 0028 20301BE5 		ldr	r3, [fp, #-32]
 13679 002c 142093E5 		ldr	r2, [r3, #20]
 13680 0030 24301BE5 		ldr	r3, [fp, #-36]
 13681 0034 030052E1 		cmp	r2, r3
 13682 0038 0100008A 		bhi	.L855
 13683              		.loc 1 5398 5 discriminator 3
 13684 003c 0230E0E3 		mvn	r3, #2
 13685              		.loc 1 5398 5
 13686 0040 0A0100EA 		b	.L856
 13687              	.L855:
 13688              		.loc 1 5398 5 discriminator 4
 13689 0044 24301BE5 		ldr	r3, [fp, #-36]
 13690 0048 8322A0E1 		lsl	r2, r3, #5
 13691 004c 20301BE5 		ldr	r3, [fp, #-32]
 13692 0050 0C3093E5 		ldr	r3, [r3, #12]
 13693 0054 033082E0 		add	r3, r2, r3
 13694 0058 08300BE5 		str	r3, [fp, #-8]
 13695 005c 08301BE5 		ldr	r3, [fp, #-8]
 13696 0060 0300A0E1 		mov	r0, r3
 13697 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13698 0068 0C000BE5 		str	r0, [fp, #-12]
 13699              		.loc 1 5398 5 discriminator 1
 13700 006c 0C301BE5 		ldr	r3, [fp, #-12]
 13701 0070 FF3803E2 		and	r3, r3, #16711680
 13702 0074 020853E3 		cmp	r3, #131072
 13703 0078 0100001A 		bne	.L857
 13704              		.loc 1 5398 5 discriminator 5
 13705 007c 0830E0E3 		mvn	r3, #8
 13706              		.loc 1 5398 5
 13707 0080 FA0000EA 		b	.L856
 13708              	.L857:
 13709              		.loc 1 5398 5 discriminator 6
 13710 0084 0C301BE5 		ldr	r3, [fp, #-12]
 13711 0088 233CA0E1 		lsr	r3, r3, #24
 13712 008c 030053E3 		cmp	r3, #3
 13713 0090 3F00000A 		beq	.L858
 13714              		.loc 1 5398 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 338


 13715 0094 0130E0E3 		mvn	r3, #1
 13716              		.loc 1 5398 5
 13717 0098 F40000EA 		b	.L856
 13718              	.L854:
 13719              		.loc 1 5398 5 discriminator 2
 13720 009c 24301BE5 		ldr	r3, [fp, #-36]
 13721 00a0 2324A0E1 		lsr	r2, r3, #8
 13722 00a4 20301BE5 		ldr	r3, [fp, #-32]
 13723 00a8 143093E5 		ldr	r3, [r3, #20]
 13724 00ac 030052E1 		cmp	r2, r3
 13725 00b0 0100003A 		bcc	.L859
 13726              		.loc 1 5398 5 discriminator 8
 13727 00b4 0230E0E3 		mvn	r3, #2
 13728              		.loc 1 5398 5
 13729 00b8 EC0000EA 		b	.L856
 13730              	.L859:
 13731              		.loc 1 5398 5 discriminator 9
 13732 00bc 24301BE5 		ldr	r3, [fp, #-36]
 13733 00c0 2334A0E1 		lsr	r3, r3, #8
 13734 00c4 8322A0E1 		lsl	r2, r3, #5
 13735 00c8 20301BE5 		ldr	r3, [fp, #-32]
 13736 00cc 0C3093E5 		ldr	r3, [r3, #12]
 13737 00d0 033082E0 		add	r3, r2, r3
 13738 00d4 08300BE5 		str	r3, [fp, #-8]
 13739 00d8 08301BE5 		ldr	r3, [fp, #-8]
 13740 00dc 0300A0E1 		mov	r0, r3
 13741 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13742 00e4 0C000BE5 		str	r0, [fp, #-12]
 13743              		.loc 1 5398 5 discriminator 1
 13744 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 13745 00ec FF3803E2 		and	r3, r3, #16711680
 13746 00f0 020853E3 		cmp	r3, #131072
 13747 00f4 0100001A 		bne	.L860
 13748              		.loc 1 5398 5 discriminator 10
 13749 00f8 0830E0E3 		mvn	r3, #8
 13750              		.loc 1 5398 5
 13751 00fc DB0000EA 		b	.L856
 13752              	.L860:
 13753              		.loc 1 5398 5 discriminator 11
 13754 0100 0C301BE5 		ldr	r3, [fp, #-12]
 13755 0104 233CA0E1 		lsr	r3, r3, #24
 13756 0108 030053E3 		cmp	r3, #3
 13757 010c 0100000A 		beq	.L861
 13758              		.loc 1 5398 5 discriminator 12
 13759 0110 0130E0E3 		mvn	r3, #1
 13760              		.loc 1 5398 5
 13761 0114 D50000EA 		b	.L856
 13762              	.L861:
 13763              		.loc 1 5398 5 discriminator 13
 13764 0118 24301BE5 		ldr	r3, [fp, #-36]
 13765 011c 7F2003E2 		and	r2, r3, #127
 13766 0120 08301BE5 		ldr	r3, [fp, #-8]
 13767 0124 143093E5 		ldr	r3, [r3, #20]
 13768 0128 030052E1 		cmp	r2, r3
 13769 012c 0100003A 		bcc	.L862
 13770              		.loc 1 5398 5 discriminator 14
 13771 0130 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 339


 13772              		.loc 1 5398 5
 13773 0134 CD0000EA 		b	.L856
 13774              	.L862:
 13775              		.loc 1 5398 5 discriminator 15
 13776 0138 24301BE5 		ldr	r3, [fp, #-36]
 13777 013c 7F3003E2 		and	r3, r3, #127
 13778 0140 8322A0E1 		lsl	r2, r3, #5
 13779 0144 08301BE5 		ldr	r3, [fp, #-8]
 13780 0148 0C3093E5 		ldr	r3, [r3, #12]
 13781 014c 033082E0 		add	r3, r2, r3
 13782 0150 08300BE5 		str	r3, [fp, #-8]
 13783 0154 08301BE5 		ldr	r3, [fp, #-8]
 13784 0158 0300A0E1 		mov	r0, r3
 13785 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13786 0160 0C000BE5 		str	r0, [fp, #-12]
 13787              		.loc 1 5398 5 discriminator 1
 13788 0164 0C301BE5 		ldr	r3, [fp, #-12]
 13789 0168 FF3803E2 		and	r3, r3, #16711680
 13790 016c 020853E3 		cmp	r3, #131072
 13791 0170 0100001A 		bne	.L863
 13792              		.loc 1 5398 5 discriminator 16
 13793 0174 0830E0E3 		mvn	r3, #8
 13794              		.loc 1 5398 5
 13795 0178 BC0000EA 		b	.L856
 13796              	.L863:
 13797              		.loc 1 5398 5 discriminator 17
 13798 017c 0C301BE5 		ldr	r3, [fp, #-12]
 13799 0180 233CA0E1 		lsr	r3, r3, #24
 13800 0184 030053E3 		cmp	r3, #3
 13801 0188 0100000A 		beq	.L858
 13802              		.loc 1 5398 5 discriminator 18
 13803 018c 0130E0E3 		mvn	r3, #1
 13804              		.loc 1 5398 5
 13805 0190 B60000EA 		b	.L856
 13806              	.L858:
5399:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
5400:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
5401:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 13807              		.loc 1 5401 5 is_stmt 1
 13808 0194 08301BE5 		ldr	r3, [fp, #-8]
 13809 0198 083093E5 		ldr	r3, [r3, #8]
 13810 019c 023003E2 		and	r3, r3, #2
 13811 01a0 000053E3 		cmp	r3, #0
 13812 01a4 0100001A 		bne	.L864
 13813              		.loc 1 5401 5 is_stmt 0 discriminator 1
 13814 01a8 0630E0E3 		mvn	r3, #6
 13815              		.loc 1 5401 5
 13816 01ac AF0000EA 		b	.L856
 13817              	.L864:
5402:../../Source/Kernel/rme_kernel.c ****     
5403:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5404:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Del);
 13818              		.loc 1 5404 5 is_stmt 1
 13819 01b0 08301BE5 		ldr	r3, [fp, #-8]
 13820 01b4 142093E5 		ldr	r2, [r3, #20]
 13821 01b8 28301BE5 		ldr	r3, [fp, #-40]
 13822 01bc 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 340


 13823 01c0 0100008A 		bhi	.L865
 13824              		.loc 1 5404 5 is_stmt 0 discriminator 1
 13825 01c4 0230E0E3 		mvn	r3, #2
 13826              		.loc 1 5404 5
 13827 01c8 A80000EA 		b	.L856
 13828              	.L865:
 13829              		.loc 1 5404 5 discriminator 2
 13830 01cc 28301BE5 		ldr	r3, [fp, #-40]
 13831 01d0 8322A0E1 		lsl	r2, r3, #5
 13832 01d4 08301BE5 		ldr	r3, [fp, #-8]
 13833 01d8 0C3093E5 		ldr	r3, [r3, #12]
 13834 01dc 033082E0 		add	r3, r2, r3
 13835 01e0 10300BE5 		str	r3, [fp, #-16]
5405:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
5406:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Thd_Del,Type_Stat,RME_CAP_TYPE_THD);
 13836              		.loc 1 5406 5 is_stmt 1
 13837 01e4 10301BE5 		ldr	r3, [fp, #-16]
 13838 01e8 0300A0E1 		mov	r0, r3
 13839 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13840 01f0 0C000BE5 		str	r0, [fp, #-12]
 13841              		.loc 1 5406 5 is_stmt 0 discriminator 1
 13842 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 13843 01f8 FF3803E2 		and	r3, r3, #16711680
 13844 01fc 020853E3 		cmp	r3, #131072
 13845 0200 0100000A 		beq	.L866
 13846 0204 0830E0E3 		mvn	r3, #8
 13847              		.loc 1 5406 5
 13848 0208 980000EA 		b	.L856
 13849              	.L866:
 13850              		.loc 1 5406 5 discriminator 2
 13851 020c 0C301BE5 		ldr	r3, [fp, #-12]
 13852 0210 233CA0E1 		lsr	r3, r3, #24
 13853 0214 060053E3 		cmp	r3, #6
 13854 0218 0100000A 		beq	.L867
 13855              		.loc 1 5406 5 discriminator 3
 13856 021c 0130E0E3 		mvn	r3, #1
 13857              		.loc 1 5406 5
 13858 0220 920000EA 		b	.L856
 13859              	.L867:
 13860              		.loc 1 5406 5 discriminator 4
 13861 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13862 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13863 022c 002093E5 		ldr	r2, [r3]
 13864 0230 10301BE5 		ldr	r3, [fp, #-16]
 13865 0234 103093E5 		ldr	r3, [r3, #16]
 13866 0238 0310A0E1 		mov	r1, r3
 13867 023c 0200A0E1 		mov	r0, r2
 13868 0240 FEFFFFEB 		bl	_RME_Diff
 13869 0244 0030A0E1 		mov	r3, r0
 13870              		.loc 1 5406 5 discriminator 1
 13871 0248 0A0053E3 		cmp	r3, #10
 13872 024c 0100008A 		bhi	.L868
 13873              		.loc 1 5406 5 discriminator 5
 13874 0250 0730E0E3 		mvn	r3, #7
 13875              		.loc 1 5406 5
 13876 0254 850000EA 		b	.L856
 13877              	.L868:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 341


 13878              		.loc 1 5406 5 discriminator 6
 13879 0258 10301BE5 		ldr	r3, [fp, #-16]
 13880 025c 043093E5 		ldr	r3, [r3, #4]
 13881 0260 000053E3 		cmp	r3, #0
 13882 0264 0B00000A 		beq	.L869
 13883              		.loc 1 5406 5 discriminator 7
 13884 0268 0C301BE5 		ldr	r3, [fp, #-12]
 13885 026c 7330FFE6 		uxth	r3, r3
 13886 0270 000053E3 		cmp	r3, #0
 13887 0274 0500001A 		bne	.L870
 13888              		.loc 1 5406 5 discriminator 9
 13889 0278 10001BE5 		ldr	r0, [fp, #-16]
 13890 027c 0C301BE5 		ldr	r3, [fp, #-12]
 13891 0280 FF38C3E3 		bic	r3, r3, #16711680
 13892 0284 0320A0E1 		mov	r2, r3
 13893 0288 0C101BE5 		ldr	r1, [fp, #-12]
 13894 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13895              	.L870:
 13896              		.loc 1 5406 5 discriminator 11
 13897 0290 0530E0E3 		mvn	r3, #5
 13898              		.loc 1 5406 5
 13899 0294 750000EA 		b	.L856
 13900              	.L869:
 13901              		.loc 1 5406 5 discriminator 8
 13902 0298 0C301BE5 		ldr	r3, [fp, #-12]
 13903 029c 7330FFE6 		uxth	r3, r3
 13904 02a0 000053E3 		cmp	r3, #0
 13905 02a4 0800000A 		beq	.L871
 13906              		.loc 1 5406 5 discriminator 12
 13907 02a8 003000E3 		movw	r3, #:lower16:.LC6
 13908 02ac 003040E3 		movt	r3, #:upper16:.LC6
 13909 02b0 002000E3 		movw	r2, #:lower16:.LC7
 13910 02b4 002040E3 		movt	r2, #:upper16:.LC7
 13911 02b8 1E1501E3 		movw	r1, #5406
 13912 02bc 000000E3 		movw	r0, #:lower16:.LC8
 13913 02c0 000040E3 		movt	r0, #:upper16:.LC8
 13914 02c4 FEFFFFEB 		bl	RME_Log
 13915              	.L872:
 13916              		.loc 1 5406 5
 13917 02c8 FEFFFFEA 		b	.L872
 13918              	.L871:
5407:../../Source/Kernel/rme_kernel.c ****     
5408:../../Source/Kernel/rme_kernel.c ****     /* Get the thread */
5409:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Del,struct RME_Thd_Struct*);
 13919              		.loc 1 5409 12 is_stmt 1
 13920 02cc 10301BE5 		ldr	r3, [fp, #-16]
 13921 02d0 0C3093E5 		ldr	r3, [r3, #12]
 13922              		.loc 1 5409 11
 13923 02d4 14300BE5 		str	r3, [fp, #-20]
5410:../../Source/Kernel/rme_kernel.c ****     
5411:../../Source/Kernel/rme_kernel.c ****     /* See if the thread is free. If still bound, we cannot proceed to deletion */
5412:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=RME_THD_FREE)
 13924              		.loc 1 5412 21
 13925 02d8 14301BE5 		ldr	r3, [fp, #-20]
 13926 02dc 143093E5 		ldr	r3, [r3, #20]
 13927              		.loc 1 5412 7
 13928 02e0 010073E3 		cmn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 342


 13929 02e4 0700000A 		beq	.L873
5413:../../Source/Kernel/rme_kernel.c ****     {
5414:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5415:../../Source/Kernel/rme_kernel.c **** 
5416:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Thd_Del,Type_Stat);
 13930              		.loc 1 5416 9
 13931 02e8 10001BE5 		ldr	r0, [fp, #-16]
 13932 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 13933 02f0 FF38C3E3 		bic	r3, r3, #16711680
 13934 02f4 0320A0E1 		mov	r2, r3
 13935 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 13936 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
5417:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13937              		.loc 1 5417 16
 13938 0300 CB30E0E3 		mvn	r3, #203
 13939 0304 590000EA 		b	.L856
 13940              	.L873:
5418:../../Source/Kernel/rme_kernel.c ****     }
5419:../../Source/Kernel/rme_kernel.c ****     else
5420:../../Source/Kernel/rme_kernel.c ****     {
5421:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5422:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5423:../../Source/Kernel/rme_kernel.c ****     }
5424:../../Source/Kernel/rme_kernel.c ****     
5425:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
5426:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Thd_Del,Type_Stat);
 13941              		.loc 1 5426 5
 13942 0308 10301BE5 		ldr	r3, [fp, #-16]
 13943 030c 0020A0E3 		mov	r2, #0
 13944 0310 0C101BE5 		ldr	r1, [fp, #-12]
 13945 0314 0300A0E1 		mov	r0, r3
 13946 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13947 031c 0030A0E1 		mov	r3, r0
 13948              		.loc 1 5426 5 is_stmt 0 discriminator 1
 13949 0320 000053E3 		cmp	r3, #0
 13950 0324 1300001A 		bne	.L875
 13951 0328 0030E0E3 		mvn	r3, #0
 13952              		.loc 1 5426 5
 13953 032c 4F0000EA 		b	.L856
 13954              	.L876:
5427:../../Source/Kernel/rme_kernel.c ****     
5428:../../Source/Kernel/rme_kernel.c ****     /* Is the thread using any invocation? If yes, just pop the invocation
5429:../../Source/Kernel/rme_kernel.c ****      * stack to empty, and free all the invocation stubs. This can be virtually
5430:../../Source/Kernel/rme_kernel.c ****      * unbounded if the invocation stack is just too deep. This is left to the
5431:../../Source/Kernel/rme_kernel.c ****      * user; if this is what he or she wants, be our guest. */
5432:../../Source/Kernel/rme_kernel.c ****     while(Thread->Ctx.Invstk.Next!=&(Thread->Ctx.Invstk))
5433:../../Source/Kernel/rme_kernel.c ****     {
5434:../../Source/Kernel/rme_kernel.c ****         Invocation=(struct RME_Inv_Struct*)(Thread->Ctx.Invstk.Next);
 13955              		.loc 1 5434 19 is_stmt 1
 13956 0330 14301BE5 		ldr	r3, [fp, #-20]
 13957 0334 4C3093E5 		ldr	r3, [r3, #76]
 13958 0338 18300BE5 		str	r3, [fp, #-24]
5435:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 13959              		.loc 1 5435 9
 13960 033c 18301BE5 		ldr	r3, [fp, #-24]
 13961 0340 042093E5 		ldr	r2, [r3, #4]
 13962 0344 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 343


 13963 0348 003093E5 		ldr	r3, [r3]
 13964 034c 0310A0E1 		mov	r1, r3
 13965 0350 0200A0E1 		mov	r0, r2
 13966 0354 FEFFFFEB 		bl	_RME_List_Del
5436:../../Source/Kernel/rme_kernel.c ****         Invocation->Thd_Act=0U;
 13967              		.loc 1 5436 28
 13968 0358 18301BE5 		ldr	r3, [fp, #-24]
 13969 035c 0020A0E3 		mov	r2, #0
 13970 0360 0C2083E5 		str	r2, [r3, #12]
5437:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Invstk_Depth--;
 13971              		.loc 1 5437 20
 13972 0364 14301BE5 		ldr	r3, [fp, #-20]
 13973 0368 543093E5 		ldr	r3, [r3, #84]
 13974              		.loc 1 5437 33
 13975 036c 012043E2 		sub	r2, r3, #1
 13976 0370 14301BE5 		ldr	r3, [fp, #-20]
 13977 0374 542083E5 		str	r2, [r3, #84]
 13978              	.L875:
5432:../../Source/Kernel/rme_kernel.c ****     {
 13979              		.loc 1 5432 29
 13980 0378 14301BE5 		ldr	r3, [fp, #-20]
 13981 037c 4C2093E5 		ldr	r2, [r3, #76]
5432:../../Source/Kernel/rme_kernel.c ****     {
 13982              		.loc 1 5432 36
 13983 0380 14301BE5 		ldr	r3, [fp, #-20]
 13984 0384 4C3083E2 		add	r3, r3, #76
5432:../../Source/Kernel/rme_kernel.c ****     {
 13985              		.loc 1 5432 34
 13986 0388 030052E1 		cmp	r2, r3
 13987 038c E7FFFF1A 		bne	.L876
5438:../../Source/Kernel/rme_kernel.c ****     }
5439:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thread->Ctx.Invstk_Depth==0U);
 13988              		.loc 1 5439 5
 13989 0390 14301BE5 		ldr	r3, [fp, #-20]
 13990 0394 543093E5 		ldr	r3, [r3, #84]
 13991 0398 000053E3 		cmp	r3, #0
 13992 039c 0800000A 		beq	.L877
 13993              		.loc 1 5439 5 is_stmt 0 discriminator 1
 13994 03a0 003000E3 		movw	r3, #:lower16:.LC6
 13995 03a4 003040E3 		movt	r3, #:upper16:.LC6
 13996 03a8 002000E3 		movw	r2, #:lower16:.LC7
 13997 03ac 002040E3 		movt	r2, #:upper16:.LC7
 13998 03b0 3F1501E3 		movw	r1, #5439
 13999 03b4 000000E3 		movw	r0, #:lower16:.LC8
 14000 03b8 000040E3 		movt	r0, #:upper16:.LC8
 14001 03bc FEFFFFEB 		bl	RME_Log
 14002              	.L878:
 14003              		.loc 1 5439 5
 14004 03c0 FEFFFFEA 		b	.L878
 14005              	.L877:
5440:../../Source/Kernel/rme_kernel.c ****     
5441:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
5442:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Thread->Sched.Prc->Head.Root_Ref), -1);
 14006              		.loc 1 5442 5 is_stmt 1
 14007 03c4 14301BE5 		ldr	r3, [fp, #-20]
 14008 03c8 2C3093E5 		ldr	r3, [r3, #44]
 14009 03cc 043083E2 		add	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 344


 14010 03d0 0010E0E3 		mvn	r1, #0
 14011 03d4 0300A0E1 		mov	r0, r3
 14012 03d8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5443:../../Source/Kernel/rme_kernel.c ****     
5444:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
5445:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)==0U)
 14013              		.loc 1 5445 20
 14014 03dc 14301BE5 		ldr	r3, [fp, #-20]
 14015 03e0 443093E5 		ldr	r3, [r3, #68]
 14016              		.loc 1 5445 7
 14017 03e4 000053E3 		cmp	r3, #0
 14018 03e8 0F0000BA 		blt	.L879
5446:../../Source/Kernel/rme_kernel.c ****     {
5447:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5448:../../Source/Kernel/rme_kernel.c **** 
5449:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 14019              		.loc 1 5449 9
 14020 03ec 14301BE5 		ldr	r3, [fp, #-20]
 14021 03f0 9C10A0E3 		mov	r1, #156
 14022 03f4 0300A0E1 		mov	r0, r3
 14023 03f8 FEFFFFEB 		bl	_RME_Kot_Erase
 14024 03fc 0030A0E1 		mov	r3, r0
 14025              		.loc 1 5449 9 is_stmt 0 discriminator 1
 14026 0400 000053E3 		cmp	r3, #0
 14027 0404 1800000A 		beq	.L880
 14028 0408 003000E3 		movw	r3, #:lower16:.LC6
 14029 040c 003040E3 		movt	r3, #:upper16:.LC6
 14030 0410 002000E3 		movw	r2, #:lower16:.LC7
 14031 0414 002040E3 		movt	r2, #:upper16:.LC7
 14032 0418 491501E3 		movw	r1, #5449
 14033 041c 000000E3 		movw	r0, #:lower16:.LC8
 14034 0420 000040E3 		movt	r0, #:upper16:.LC8
 14035 0424 FEFFFFEB 		bl	RME_Log
 14036              	.L881:
 14037              		.loc 1 5449 9
 14038 0428 FEFFFFEA 		b	.L881
 14039              	.L879:
5450:../../Source/Kernel/rme_kernel.c ****                                   RME_THD_SIZE(Thread->Ctx.Hyp_Attr))==0);
5451:../../Source/Kernel/rme_kernel.c ****     }
5452:../../Source/Kernel/rme_kernel.c ****     else
5453:../../Source/Kernel/rme_kernel.c ****     {
5454:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5455:../../Source/Kernel/rme_kernel.c **** 
5456:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 14040              		.loc 1 5456 9 is_stmt 1
 14041 042c 14301BE5 		ldr	r3, [fp, #-20]
 14042 0430 5810A0E3 		mov	r1, #88
 14043 0434 0300A0E1 		mov	r0, r3
 14044 0438 FEFFFFEB 		bl	_RME_Kot_Erase
 14045 043c 0030A0E1 		mov	r3, r0
 14046              		.loc 1 5456 9 is_stmt 0 discriminator 1
 14047 0440 000053E3 		cmp	r3, #0
 14048 0444 0800000A 		beq	.L880
 14049 0448 003000E3 		movw	r3, #:lower16:.LC6
 14050 044c 003040E3 		movt	r3, #:upper16:.LC6
 14051 0450 002000E3 		movw	r2, #:lower16:.LC7
 14052 0454 002040E3 		movt	r2, #:upper16:.LC7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 345


 14053 0458 501501E3 		movw	r1, #5456
 14054 045c 000000E3 		movw	r0, #:lower16:.LC8
 14055 0460 000040E3 		movt	r0, #:upper16:.LC8
 14056 0464 FEFFFFEB 		bl	RME_Log
 14057              	.L882:
 14058              		.loc 1 5456 9
 14059 0468 FEFFFFEA 		b	.L882
 14060              	.L880:
5457:../../Source/Kernel/rme_kernel.c ****                    RME_HYP_SIZE)==0);
5458:../../Source/Kernel/rme_kernel.c ****     }
5459:../../Source/Kernel/rme_kernel.c ****     
5460:../../Source/Kernel/rme_kernel.c ****     return 0;
 14061              		.loc 1 5460 12 is_stmt 1
 14062 046c 0030A0E3 		mov	r3, #0
 14063              	.L856:
5461:../../Source/Kernel/rme_kernel.c **** }
 14064              		.loc 1 5461 1
 14065 0470 0300A0E1 		mov	r0, r3
 14066 0474 04D04BE2 		sub	sp, fp, #4
 14067              		.cfi_def_cfa 13, 8
 14068              		@ sp needed
 14069 0478 0088BDE8 		pop	{fp, pc}
 14070              		.cfi_endproc
 14071              	.LFE57:
 14073              		.section	.text._RME_Thd_Sched_Bind,"ax",%progbits
 14074              		.align	2
 14075              		.syntax unified
 14076              		.arm
 14078              	_RME_Thd_Sched_Bind:
 14079              	.LFB58:
5462:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Del *************************************************/
5463:../../Source/Kernel/rme_kernel.c **** 
5464:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Bind ***********************************************
5465:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's priority level, and its scheduler thread. When
5466:../../Source/Kernel/rme_kernel.c ****               there are any state changes on this thread, a notification will
5467:../../Source/Kernel/rme_kernel.c ****               be sent to its scheduler thread. If the state of the thread
5468:../../Source/Kernel/rme_kernel.c ****               changes for multiple times, then only the most recent state will
5469:../../Source/Kernel/rme_kernel.c ****               be reflected in the scheduler's receive queue.
5470:../../Source/Kernel/rme_kernel.c ****               The scheduler and the threads that it schedule must be on the
5471:../../Source/Kernel/rme_kernel.c ****               same core. When a thread wants to go from one core to another,
5472:../../Source/Kernel/rme_kernel.c ****               it must be freed from that core first. 
5473:../../Source/Kernel/rme_kernel.c ****               This must be called on the same core with the Cap_Thd_Sched, and
5474:../../Source/Kernel/rme_kernel.c ****               the Cap_Thd itself must be free.
5475:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5476:../../Source/Kernel/rme_kernel.c ****               priority.
5477:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5478:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5479:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5480:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Sched - The scheduler thread.
5481:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
5482:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The signal endpoint for scheduler
5483:../../Source/Kernel/rme_kernel.c ****                                   notifications. This signal endpoint will be
5484:../../Source/Kernel/rme_kernel.c ****                                   sent to whenever this thread has a fault, or
5485:../../Source/Kernel/rme_kernel.c ****                                   timeouts. This is purely optional; if it is
5486:../../Source/Kernel/rme_kernel.c ****                                   not needed, pass in RME_CID_NULL.
5487:../../Source/Kernel/rme_kernel.c ****               rme_tid_t TID - The thread ID. This is user-supplied, and the
5488:../../Source/Kernel/rme_kernel.c ****                               kernel will not check whether there are two
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 346


5489:../../Source/Kernel/rme_kernel.c ****                               threads that have the same TID.
5490:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level, higher is more critical.
5491:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Haddr - The kernel-accessible virtual memory address
5492:../../Source/Kernel/rme_kernel.c ****                                 for this thread's register sets, only used by
5493:../../Source/Kernel/rme_kernel.c ****                                 hypervisor-managed threads. For other threads,
5494:../../Source/Kernel/rme_kernel.c ****                                 please pass in NULL instead.
5495:../../Source/Kernel/rme_kernel.c **** Output      : None.
5496:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5497:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5498:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Bind(struct RME_Cap_Cpt* Cpt,
5499:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd,
5500:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd_Sched,
5501:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Sig,
5502:../../Source/Kernel/rme_kernel.c ****                                      rme_tid_t TID,
5503:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio,
5504:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Haddr)
5505:../../Source/Kernel/rme_kernel.c **** {
 14080              		.loc 1 5505 1
 14081              		.cfi_startproc
 14082              		@ args = 12, pretend = 0, frame = 56
 14083              		@ frame_needed = 1, uses_anonymous_args = 0
 14084 0000 00482DE9 		push	{fp, lr}
 14085              		.cfi_def_cfa_offset 8
 14086              		.cfi_offset 11, -8
 14087              		.cfi_offset 14, -4
 14088 0004 04B08DE2 		add	fp, sp, #4
 14089              		.cfi_def_cfa 11, 4
 14090 0008 38D04DE2 		sub	sp, sp, #56
 14091 000c 30000BE5 		str	r0, [fp, #-48]
 14092 0010 34100BE5 		str	r1, [fp, #-52]
 14093 0014 38200BE5 		str	r2, [fp, #-56]
 14094 0018 3C300BE5 		str	r3, [fp, #-60]
5506:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5507:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Sched;
5508:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
5509:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5510:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
5511:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_Old;
5512:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_New;
5513:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5514:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Hyp_Attr;
5515:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
5516:../../Source/Kernel/rme_kernel.c **** 
5517:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5518:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14095              		.loc 1 5518 5
 14096 001c 34301BE5 		ldr	r3, [fp, #-52]
 14097 0020 803003E2 		and	r3, r3, #128
 14098 0024 000053E3 		cmp	r3, #0
 14099 0028 1C00001A 		bne	.L884
 14100              		.loc 1 5518 5 is_stmt 0 discriminator 1
 14101 002c 30301BE5 		ldr	r3, [fp, #-48]
 14102 0030 142093E5 		ldr	r2, [r3, #20]
 14103 0034 34301BE5 		ldr	r3, [fp, #-52]
 14104 0038 030052E1 		cmp	r2, r3
 14105 003c 0100008A 		bhi	.L885
 14106              		.loc 1 5518 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 347


 14107 0040 0230E0E3 		mvn	r3, #2
 14108              		.loc 1 5518 5
 14109 0044 D60100EA 		b	.L886
 14110              	.L885:
 14111              		.loc 1 5518 5 discriminator 4
 14112 0048 34301BE5 		ldr	r3, [fp, #-52]
 14113 004c 8322A0E1 		lsl	r2, r3, #5
 14114 0050 30301BE5 		ldr	r3, [fp, #-48]
 14115 0054 0C3093E5 		ldr	r3, [r3, #12]
 14116 0058 033082E0 		add	r3, r2, r3
 14117 005c 08300BE5 		str	r3, [fp, #-8]
 14118 0060 08301BE5 		ldr	r3, [fp, #-8]
 14119 0064 0300A0E1 		mov	r0, r3
 14120 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14121 006c 14000BE5 		str	r0, [fp, #-20]
 14122              		.loc 1 5518 5 discriminator 1
 14123 0070 14301BE5 		ldr	r3, [fp, #-20]
 14124 0074 FF3803E2 		and	r3, r3, #16711680
 14125 0078 020853E3 		cmp	r3, #131072
 14126 007c 0100001A 		bne	.L887
 14127              		.loc 1 5518 5 discriminator 5
 14128 0080 0830E0E3 		mvn	r3, #8
 14129              		.loc 1 5518 5
 14130 0084 C60100EA 		b	.L886
 14131              	.L887:
 14132              		.loc 1 5518 5 discriminator 6
 14133 0088 14301BE5 		ldr	r3, [fp, #-20]
 14134 008c 233CA0E1 		lsr	r3, r3, #24
 14135 0090 060053E3 		cmp	r3, #6
 14136 0094 3F00000A 		beq	.L888
 14137              		.loc 1 5518 5 discriminator 7
 14138 0098 0130E0E3 		mvn	r3, #1
 14139              		.loc 1 5518 5
 14140 009c C00100EA 		b	.L886
 14141              	.L884:
 14142              		.loc 1 5518 5 discriminator 2
 14143 00a0 34301BE5 		ldr	r3, [fp, #-52]
 14144 00a4 2324A0E1 		lsr	r2, r3, #8
 14145 00a8 30301BE5 		ldr	r3, [fp, #-48]
 14146 00ac 143093E5 		ldr	r3, [r3, #20]
 14147 00b0 030052E1 		cmp	r2, r3
 14148 00b4 0100003A 		bcc	.L889
 14149              		.loc 1 5518 5 discriminator 8
 14150 00b8 0230E0E3 		mvn	r3, #2
 14151              		.loc 1 5518 5
 14152 00bc B80100EA 		b	.L886
 14153              	.L889:
 14154              		.loc 1 5518 5 discriminator 9
 14155 00c0 34301BE5 		ldr	r3, [fp, #-52]
 14156 00c4 2334A0E1 		lsr	r3, r3, #8
 14157 00c8 8322A0E1 		lsl	r2, r3, #5
 14158 00cc 30301BE5 		ldr	r3, [fp, #-48]
 14159 00d0 0C3093E5 		ldr	r3, [r3, #12]
 14160 00d4 033082E0 		add	r3, r2, r3
 14161 00d8 08300BE5 		str	r3, [fp, #-8]
 14162 00dc 08301BE5 		ldr	r3, [fp, #-8]
 14163 00e0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 348


 14164 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14165 00e8 14000BE5 		str	r0, [fp, #-20]
 14166              		.loc 1 5518 5 discriminator 1
 14167 00ec 14301BE5 		ldr	r3, [fp, #-20]
 14168 00f0 FF3803E2 		and	r3, r3, #16711680
 14169 00f4 020853E3 		cmp	r3, #131072
 14170 00f8 0100001A 		bne	.L890
 14171              		.loc 1 5518 5 discriminator 10
 14172 00fc 0830E0E3 		mvn	r3, #8
 14173              		.loc 1 5518 5
 14174 0100 A70100EA 		b	.L886
 14175              	.L890:
 14176              		.loc 1 5518 5 discriminator 11
 14177 0104 14301BE5 		ldr	r3, [fp, #-20]
 14178 0108 233CA0E1 		lsr	r3, r3, #24
 14179 010c 030053E3 		cmp	r3, #3
 14180 0110 0100000A 		beq	.L891
 14181              		.loc 1 5518 5 discriminator 12
 14182 0114 0130E0E3 		mvn	r3, #1
 14183              		.loc 1 5518 5
 14184 0118 A10100EA 		b	.L886
 14185              	.L891:
 14186              		.loc 1 5518 5 discriminator 13
 14187 011c 34301BE5 		ldr	r3, [fp, #-52]
 14188 0120 7F2003E2 		and	r2, r3, #127
 14189 0124 08301BE5 		ldr	r3, [fp, #-8]
 14190 0128 143093E5 		ldr	r3, [r3, #20]
 14191 012c 030052E1 		cmp	r2, r3
 14192 0130 0100003A 		bcc	.L892
 14193              		.loc 1 5518 5 discriminator 14
 14194 0134 0230E0E3 		mvn	r3, #2
 14195              		.loc 1 5518 5
 14196 0138 990100EA 		b	.L886
 14197              	.L892:
 14198              		.loc 1 5518 5 discriminator 15
 14199 013c 34301BE5 		ldr	r3, [fp, #-52]
 14200 0140 7F3003E2 		and	r3, r3, #127
 14201 0144 8322A0E1 		lsl	r2, r3, #5
 14202 0148 08301BE5 		ldr	r3, [fp, #-8]
 14203 014c 0C3093E5 		ldr	r3, [r3, #12]
 14204 0150 033082E0 		add	r3, r2, r3
 14205 0154 08300BE5 		str	r3, [fp, #-8]
 14206 0158 08301BE5 		ldr	r3, [fp, #-8]
 14207 015c 0300A0E1 		mov	r0, r3
 14208 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14209 0164 14000BE5 		str	r0, [fp, #-20]
 14210              		.loc 1 5518 5 discriminator 1
 14211 0168 14301BE5 		ldr	r3, [fp, #-20]
 14212 016c FF3803E2 		and	r3, r3, #16711680
 14213 0170 020853E3 		cmp	r3, #131072
 14214 0174 0100001A 		bne	.L893
 14215              		.loc 1 5518 5 discriminator 16
 14216 0178 0830E0E3 		mvn	r3, #8
 14217              		.loc 1 5518 5
 14218 017c 880100EA 		b	.L886
 14219              	.L893:
 14220              		.loc 1 5518 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 349


 14221 0180 14301BE5 		ldr	r3, [fp, #-20]
 14222 0184 233CA0E1 		lsr	r3, r3, #24
 14223 0188 060053E3 		cmp	r3, #6
 14224 018c 0100000A 		beq	.L888
 14225              		.loc 1 5518 5 discriminator 18
 14226 0190 0130E0E3 		mvn	r3, #1
 14227              		.loc 1 5518 5
 14228 0194 820100EA 		b	.L886
 14229              	.L888:
5519:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5520:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Sched,RME_CAP_TYPE_THD,
 14230              		.loc 1 5520 5 is_stmt 1
 14231 0198 38301BE5 		ldr	r3, [fp, #-56]
 14232 019c 803003E2 		and	r3, r3, #128
 14233 01a0 000053E3 		cmp	r3, #0
 14234 01a4 1C00001A 		bne	.L894
 14235              		.loc 1 5520 5 is_stmt 0 discriminator 1
 14236 01a8 30301BE5 		ldr	r3, [fp, #-48]
 14237 01ac 142093E5 		ldr	r2, [r3, #20]
 14238 01b0 38301BE5 		ldr	r3, [fp, #-56]
 14239 01b4 030052E1 		cmp	r2, r3
 14240 01b8 0100008A 		bhi	.L895
 14241              		.loc 1 5520 5 discriminator 3
 14242 01bc 0230E0E3 		mvn	r3, #2
 14243              		.loc 1 5520 5
 14244 01c0 770100EA 		b	.L886
 14245              	.L895:
 14246              		.loc 1 5520 5 discriminator 4
 14247 01c4 38301BE5 		ldr	r3, [fp, #-56]
 14248 01c8 8322A0E1 		lsl	r2, r3, #5
 14249 01cc 30301BE5 		ldr	r3, [fp, #-48]
 14250 01d0 0C3093E5 		ldr	r3, [r3, #12]
 14251 01d4 033082E0 		add	r3, r2, r3
 14252 01d8 0C300BE5 		str	r3, [fp, #-12]
 14253 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 14254 01e0 0300A0E1 		mov	r0, r3
 14255 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14256 01e8 14000BE5 		str	r0, [fp, #-20]
 14257              		.loc 1 5520 5 discriminator 1
 14258 01ec 14301BE5 		ldr	r3, [fp, #-20]
 14259 01f0 FF3803E2 		and	r3, r3, #16711680
 14260 01f4 020853E3 		cmp	r3, #131072
 14261 01f8 0100001A 		bne	.L896
 14262              		.loc 1 5520 5 discriminator 5
 14263 01fc 0830E0E3 		mvn	r3, #8
 14264              		.loc 1 5520 5
 14265 0200 670100EA 		b	.L886
 14266              	.L896:
 14267              		.loc 1 5520 5 discriminator 6
 14268 0204 14301BE5 		ldr	r3, [fp, #-20]
 14269 0208 233CA0E1 		lsr	r3, r3, #24
 14270 020c 060053E3 		cmp	r3, #6
 14271 0210 3F00000A 		beq	.L897
 14272              		.loc 1 5520 5 discriminator 7
 14273 0214 0130E0E3 		mvn	r3, #1
 14274              		.loc 1 5520 5
 14275 0218 610100EA 		b	.L886
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 350


 14276              	.L894:
 14277              		.loc 1 5520 5 discriminator 2
 14278 021c 38301BE5 		ldr	r3, [fp, #-56]
 14279 0220 2324A0E1 		lsr	r2, r3, #8
 14280 0224 30301BE5 		ldr	r3, [fp, #-48]
 14281 0228 143093E5 		ldr	r3, [r3, #20]
 14282 022c 030052E1 		cmp	r2, r3
 14283 0230 0100003A 		bcc	.L898
 14284              		.loc 1 5520 5 discriminator 8
 14285 0234 0230E0E3 		mvn	r3, #2
 14286              		.loc 1 5520 5
 14287 0238 590100EA 		b	.L886
 14288              	.L898:
 14289              		.loc 1 5520 5 discriminator 9
 14290 023c 38301BE5 		ldr	r3, [fp, #-56]
 14291 0240 2334A0E1 		lsr	r3, r3, #8
 14292 0244 8322A0E1 		lsl	r2, r3, #5
 14293 0248 30301BE5 		ldr	r3, [fp, #-48]
 14294 024c 0C3093E5 		ldr	r3, [r3, #12]
 14295 0250 033082E0 		add	r3, r2, r3
 14296 0254 0C300BE5 		str	r3, [fp, #-12]
 14297 0258 0C301BE5 		ldr	r3, [fp, #-12]
 14298 025c 0300A0E1 		mov	r0, r3
 14299 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14300 0264 14000BE5 		str	r0, [fp, #-20]
 14301              		.loc 1 5520 5 discriminator 1
 14302 0268 14301BE5 		ldr	r3, [fp, #-20]
 14303 026c FF3803E2 		and	r3, r3, #16711680
 14304 0270 020853E3 		cmp	r3, #131072
 14305 0274 0100001A 		bne	.L899
 14306              		.loc 1 5520 5 discriminator 10
 14307 0278 0830E0E3 		mvn	r3, #8
 14308              		.loc 1 5520 5
 14309 027c 480100EA 		b	.L886
 14310              	.L899:
 14311              		.loc 1 5520 5 discriminator 11
 14312 0280 14301BE5 		ldr	r3, [fp, #-20]
 14313 0284 233CA0E1 		lsr	r3, r3, #24
 14314 0288 030053E3 		cmp	r3, #3
 14315 028c 0100000A 		beq	.L900
 14316              		.loc 1 5520 5 discriminator 12
 14317 0290 0130E0E3 		mvn	r3, #1
 14318              		.loc 1 5520 5
 14319 0294 420100EA 		b	.L886
 14320              	.L900:
 14321              		.loc 1 5520 5 discriminator 13
 14322 0298 38301BE5 		ldr	r3, [fp, #-56]
 14323 029c 7F2003E2 		and	r2, r3, #127
 14324 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 14325 02a4 143093E5 		ldr	r3, [r3, #20]
 14326 02a8 030052E1 		cmp	r2, r3
 14327 02ac 0100003A 		bcc	.L901
 14328              		.loc 1 5520 5 discriminator 14
 14329 02b0 0230E0E3 		mvn	r3, #2
 14330              		.loc 1 5520 5
 14331 02b4 3A0100EA 		b	.L886
 14332              	.L901:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 351


 14333              		.loc 1 5520 5 discriminator 15
 14334 02b8 38301BE5 		ldr	r3, [fp, #-56]
 14335 02bc 7F3003E2 		and	r3, r3, #127
 14336 02c0 8322A0E1 		lsl	r2, r3, #5
 14337 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 14338 02c8 0C3093E5 		ldr	r3, [r3, #12]
 14339 02cc 033082E0 		add	r3, r2, r3
 14340 02d0 0C300BE5 		str	r3, [fp, #-12]
 14341 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 14342 02d8 0300A0E1 		mov	r0, r3
 14343 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14344 02e0 14000BE5 		str	r0, [fp, #-20]
 14345              		.loc 1 5520 5 discriminator 1
 14346 02e4 14301BE5 		ldr	r3, [fp, #-20]
 14347 02e8 FF3803E2 		and	r3, r3, #16711680
 14348 02ec 020853E3 		cmp	r3, #131072
 14349 02f0 0100001A 		bne	.L902
 14350              		.loc 1 5520 5 discriminator 16
 14351 02f4 0830E0E3 		mvn	r3, #8
 14352              		.loc 1 5520 5
 14353 02f8 290100EA 		b	.L886
 14354              	.L902:
 14355              		.loc 1 5520 5 discriminator 17
 14356 02fc 14301BE5 		ldr	r3, [fp, #-20]
 14357 0300 233CA0E1 		lsr	r3, r3, #24
 14358 0304 060053E3 		cmp	r3, #6
 14359 0308 0100000A 		beq	.L897
 14360              		.loc 1 5520 5 discriminator 18
 14361 030c 0130E0E3 		mvn	r3, #1
 14362              		.loc 1 5520 5
 14363 0310 230100EA 		b	.L886
 14364              	.L897:
5521:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Sched,Type_Stat);
5522:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5523:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_CHILD);
 14365              		.loc 1 5523 5 is_stmt 1
 14366 0314 08301BE5 		ldr	r3, [fp, #-8]
 14367 0318 083093E5 		ldr	r3, [r3, #8]
 14368 031c 023003E2 		and	r3, r3, #2
 14369 0320 000053E3 		cmp	r3, #0
 14370 0324 0100001A 		bne	.L903
 14371              		.loc 1 5523 5 is_stmt 0 discriminator 1
 14372 0328 0630E0E3 		mvn	r3, #6
 14373              		.loc 1 5523 5
 14374 032c 1C0100EA 		b	.L886
 14375              	.L903:
5524:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Sched,RME_THD_FLAG_SCHED_PARENT);
 14376              		.loc 1 5524 5 is_stmt 1
 14377 0330 0C301BE5 		ldr	r3, [fp, #-12]
 14378 0334 083093E5 		ldr	r3, [r3, #8]
 14379 0338 043003E2 		and	r3, r3, #4
 14380 033c 000053E3 		cmp	r3, #0
 14381 0340 0100001A 		bne	.L904
 14382              		.loc 1 5524 5 is_stmt 0 discriminator 1
 14383 0344 0630E0E3 		mvn	r3, #6
 14384              		.loc 1 5524 5
 14385 0348 150100EA 		b	.L886
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 352


 14386              	.L904:
5525:../../Source/Kernel/rme_kernel.c ****     
5526:../../Source/Kernel/rme_kernel.c ****     /* Check if we need the signal endpoint for this operation */
5527:../../Source/Kernel/rme_kernel.c ****     if(Cap_Sig!=RME_CID_NULL)
 14387              		.loc 1 5527 7 is_stmt 1
 14388 034c 3C301BE5 		ldr	r3, [fp, #-60]
 14389 0350 020953E3 		cmp	r3, #32768
 14390 0354 6500000A 		beq	.L905
5528:../../Source/Kernel/rme_kernel.c ****     {
5529:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5530:../../Source/Kernel/rme_kernel.c **** 
5531:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 14391              		.loc 1 5531 9
 14392 0358 3C301BE5 		ldr	r3, [fp, #-60]
 14393 035c 803003E2 		and	r3, r3, #128
 14394 0360 000053E3 		cmp	r3, #0
 14395 0364 1C00001A 		bne	.L906
 14396              		.loc 1 5531 9 is_stmt 0 discriminator 1
 14397 0368 30301BE5 		ldr	r3, [fp, #-48]
 14398 036c 142093E5 		ldr	r2, [r3, #20]
 14399 0370 3C301BE5 		ldr	r3, [fp, #-60]
 14400 0374 030052E1 		cmp	r2, r3
 14401 0378 0100008A 		bhi	.L907
 14402              		.loc 1 5531 9 discriminator 3
 14403 037c 0230E0E3 		mvn	r3, #2
 14404              		.loc 1 5531 9
 14405 0380 070100EA 		b	.L886
 14406              	.L907:
 14407              		.loc 1 5531 9 discriminator 4
 14408 0384 3C301BE5 		ldr	r3, [fp, #-60]
 14409 0388 8322A0E1 		lsl	r2, r3, #5
 14410 038c 30301BE5 		ldr	r3, [fp, #-48]
 14411 0390 0C3093E5 		ldr	r3, [r3, #12]
 14412 0394 033082E0 		add	r3, r2, r3
 14413 0398 10300BE5 		str	r3, [fp, #-16]
 14414 039c 10301BE5 		ldr	r3, [fp, #-16]
 14415 03a0 0300A0E1 		mov	r0, r3
 14416 03a4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14417 03a8 14000BE5 		str	r0, [fp, #-20]
 14418              		.loc 1 5531 9 discriminator 1
 14419 03ac 14301BE5 		ldr	r3, [fp, #-20]
 14420 03b0 FF3803E2 		and	r3, r3, #16711680
 14421 03b4 020853E3 		cmp	r3, #131072
 14422 03b8 0100001A 		bne	.L908
 14423              		.loc 1 5531 9 discriminator 5
 14424 03bc 0830E0E3 		mvn	r3, #8
 14425              		.loc 1 5531 9
 14426 03c0 F70000EA 		b	.L886
 14427              	.L908:
 14428              		.loc 1 5531 9 discriminator 6
 14429 03c4 14301BE5 		ldr	r3, [fp, #-20]
 14430 03c8 233CA0E1 		lsr	r3, r3, #24
 14431 03cc 080053E3 		cmp	r3, #8
 14432 03d0 3F00000A 		beq	.L909
 14433              		.loc 1 5531 9 discriminator 7
 14434 03d4 0130E0E3 		mvn	r3, #1
 14435              		.loc 1 5531 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 353


 14436 03d8 F10000EA 		b	.L886
 14437              	.L906:
 14438              		.loc 1 5531 9 discriminator 2
 14439 03dc 3C301BE5 		ldr	r3, [fp, #-60]
 14440 03e0 2324A0E1 		lsr	r2, r3, #8
 14441 03e4 30301BE5 		ldr	r3, [fp, #-48]
 14442 03e8 143093E5 		ldr	r3, [r3, #20]
 14443 03ec 030052E1 		cmp	r2, r3
 14444 03f0 0100003A 		bcc	.L910
 14445              		.loc 1 5531 9 discriminator 8
 14446 03f4 0230E0E3 		mvn	r3, #2
 14447              		.loc 1 5531 9
 14448 03f8 E90000EA 		b	.L886
 14449              	.L910:
 14450              		.loc 1 5531 9 discriminator 9
 14451 03fc 3C301BE5 		ldr	r3, [fp, #-60]
 14452 0400 2334A0E1 		lsr	r3, r3, #8
 14453 0404 8322A0E1 		lsl	r2, r3, #5
 14454 0408 30301BE5 		ldr	r3, [fp, #-48]
 14455 040c 0C3093E5 		ldr	r3, [r3, #12]
 14456 0410 033082E0 		add	r3, r2, r3
 14457 0414 10300BE5 		str	r3, [fp, #-16]
 14458 0418 10301BE5 		ldr	r3, [fp, #-16]
 14459 041c 0300A0E1 		mov	r0, r3
 14460 0420 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14461 0424 14000BE5 		str	r0, [fp, #-20]
 14462              		.loc 1 5531 9 discriminator 1
 14463 0428 14301BE5 		ldr	r3, [fp, #-20]
 14464 042c FF3803E2 		and	r3, r3, #16711680
 14465 0430 020853E3 		cmp	r3, #131072
 14466 0434 0100001A 		bne	.L911
 14467              		.loc 1 5531 9 discriminator 10
 14468 0438 0830E0E3 		mvn	r3, #8
 14469              		.loc 1 5531 9
 14470 043c D80000EA 		b	.L886
 14471              	.L911:
 14472              		.loc 1 5531 9 discriminator 11
 14473 0440 14301BE5 		ldr	r3, [fp, #-20]
 14474 0444 233CA0E1 		lsr	r3, r3, #24
 14475 0448 030053E3 		cmp	r3, #3
 14476 044c 0100000A 		beq	.L912
 14477              		.loc 1 5531 9 discriminator 12
 14478 0450 0130E0E3 		mvn	r3, #1
 14479              		.loc 1 5531 9
 14480 0454 D20000EA 		b	.L886
 14481              	.L912:
 14482              		.loc 1 5531 9 discriminator 13
 14483 0458 3C301BE5 		ldr	r3, [fp, #-60]
 14484 045c 7F2003E2 		and	r2, r3, #127
 14485 0460 10301BE5 		ldr	r3, [fp, #-16]
 14486 0464 143093E5 		ldr	r3, [r3, #20]
 14487 0468 030052E1 		cmp	r2, r3
 14488 046c 0100003A 		bcc	.L913
 14489              		.loc 1 5531 9 discriminator 14
 14490 0470 0230E0E3 		mvn	r3, #2
 14491              		.loc 1 5531 9
 14492 0474 CA0000EA 		b	.L886
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 354


 14493              	.L913:
 14494              		.loc 1 5531 9 discriminator 15
 14495 0478 3C301BE5 		ldr	r3, [fp, #-60]
 14496 047c 7F3003E2 		and	r3, r3, #127
 14497 0480 8322A0E1 		lsl	r2, r3, #5
 14498 0484 10301BE5 		ldr	r3, [fp, #-16]
 14499 0488 0C3093E5 		ldr	r3, [r3, #12]
 14500 048c 033082E0 		add	r3, r2, r3
 14501 0490 10300BE5 		str	r3, [fp, #-16]
 14502 0494 10301BE5 		ldr	r3, [fp, #-16]
 14503 0498 0300A0E1 		mov	r0, r3
 14504 049c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14505 04a0 14000BE5 		str	r0, [fp, #-20]
 14506              		.loc 1 5531 9 discriminator 1
 14507 04a4 14301BE5 		ldr	r3, [fp, #-20]
 14508 04a8 FF3803E2 		and	r3, r3, #16711680
 14509 04ac 020853E3 		cmp	r3, #131072
 14510 04b0 0100001A 		bne	.L914
 14511              		.loc 1 5531 9 discriminator 16
 14512 04b4 0830E0E3 		mvn	r3, #8
 14513              		.loc 1 5531 9
 14514 04b8 B90000EA 		b	.L886
 14515              	.L914:
 14516              		.loc 1 5531 9 discriminator 17
 14517 04bc 14301BE5 		ldr	r3, [fp, #-20]
 14518 04c0 233CA0E1 		lsr	r3, r3, #24
 14519 04c4 080053E3 		cmp	r3, #8
 14520 04c8 0100000A 		beq	.L909
 14521              		.loc 1 5531 9 discriminator 18
 14522 04cc 0130E0E3 		mvn	r3, #1
 14523              		.loc 1 5531 9
 14524 04d0 B30000EA 		b	.L886
 14525              	.L909:
5532:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Sig*,Sig_Op,Type_Stat);
5533:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SCHED);
 14526              		.loc 1 5533 9 is_stmt 1
 14527 04d4 10301BE5 		ldr	r3, [fp, #-16]
 14528 04d8 083093E5 		ldr	r3, [r3, #8]
 14529 04dc 203003E2 		and	r3, r3, #32
 14530 04e0 000053E3 		cmp	r3, #0
 14531 04e4 0300001A 		bne	.L915
 14532              		.loc 1 5533 9 is_stmt 0 discriminator 1
 14533 04e8 0630E0E3 		mvn	r3, #6
 14534              		.loc 1 5533 9
 14535 04ec AC0000EA 		b	.L886
 14536              	.L905:
5534:../../Source/Kernel/rme_kernel.c ****     }
5535:../../Source/Kernel/rme_kernel.c ****     else
5536:../../Source/Kernel/rme_kernel.c ****     {
5537:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5538:../../Source/Kernel/rme_kernel.c **** 
5539:../../Source/Kernel/rme_kernel.c ****         Sig_Op=RME_NULL;
 14537              		.loc 1 5539 15 is_stmt 1
 14538 04f0 0030A0E3 		mov	r3, #0
 14539 04f4 10300BE5 		str	r3, [fp, #-16]
 14540              	.L915:
5540:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 355


5541:../../Source/Kernel/rme_kernel.c **** 
5542:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound. If yes, we just quit */
5543:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 14541              		.loc 1 5543 12
 14542 04f8 08301BE5 		ldr	r3, [fp, #-8]
 14543 04fc 0C3093E5 		ldr	r3, [r3, #12]
 14544              		.loc 1 5543 11
 14545 0500 18300BE5 		str	r3, [fp, #-24]
5544:../../Source/Kernel/rme_kernel.c ****     Local_Old=Thread->Sched.Local;
 14546              		.loc 1 5544 14
 14547 0504 18301BE5 		ldr	r3, [fp, #-24]
 14548 0508 143093E5 		ldr	r3, [r3, #20]
 14549 050c 1C300BE5 		str	r3, [fp, #-28]
5545:../../Source/Kernel/rme_kernel.c ****     if(Local_Old!=RME_THD_FREE)
 14550              		.loc 1 5545 7
 14551 0510 1C301BE5 		ldr	r3, [fp, #-28]
 14552 0514 010073E3 		cmn	r3, #1
 14553 0518 0100000A 		beq	.L916
5546:../../Source/Kernel/rme_kernel.c ****     {
5547:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5548:../../Source/Kernel/rme_kernel.c **** 
5549:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14554              		.loc 1 5549 16
 14555 051c CB30E0E3 		mvn	r3, #203
 14556 0520 9F0000EA 		b	.L886
 14557              	.L916:
5550:../../Source/Kernel/rme_kernel.c ****     }
5551:../../Source/Kernel/rme_kernel.c ****     else
5552:../../Source/Kernel/rme_kernel.c ****     {
5553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5554:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5555:../../Source/Kernel/rme_kernel.c ****     }
5556:../../Source/Kernel/rme_kernel.c ****     
5557:../../Source/Kernel/rme_kernel.c ****     /* See if the parent thread is on the same core with the current processor */
5558:../../Source/Kernel/rme_kernel.c ****     Local_New=RME_CPU_LOCAL();
 14558              		.loc 1 5558 14
 14559 0524 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14560 0528 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14561 052c 20300BE5 		str	r3, [fp, #-32]
5559:../../Source/Kernel/rme_kernel.c ****     Scheduler=RME_CAP_GETOBJ(Thd_Sched,struct RME_Thd_Struct*);
 14562              		.loc 1 5559 15
 14563 0530 0C301BE5 		ldr	r3, [fp, #-12]
 14564 0534 0C3093E5 		ldr	r3, [r3, #12]
 14565              		.loc 1 5559 14
 14566 0538 24300BE5 		str	r3, [fp, #-36]
5560:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=Local_New)
 14567              		.loc 1 5560 24
 14568 053c 24301BE5 		ldr	r3, [fp, #-36]
 14569 0540 143093E5 		ldr	r3, [r3, #20]
 14570              		.loc 1 5560 7
 14571 0544 20201BE5 		ldr	r2, [fp, #-32]
 14572 0548 030052E1 		cmp	r2, r3
 14573 054c 0100000A 		beq	.L917
5561:../../Source/Kernel/rme_kernel.c ****     {
5562:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5563:../../Source/Kernel/rme_kernel.c **** 
5564:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 356


 14574              		.loc 1 5564 16
 14575 0550 CB30E0E3 		mvn	r3, #203
 14576 0554 920000EA 		b	.L886
 14577              	.L917:
5565:../../Source/Kernel/rme_kernel.c ****     }
5566:../../Source/Kernel/rme_kernel.c ****     else
5567:../../Source/Kernel/rme_kernel.c ****     {
5568:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5569:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5570:../../Source/Kernel/rme_kernel.c ****     }
5571:../../Source/Kernel/rme_kernel.c **** 
5572:../../Source/Kernel/rme_kernel.c ****     /* See if we are trying to bind to ourself - prohibited */
5573:../../Source/Kernel/rme_kernel.c ****     if(Thread==Scheduler)
 14578              		.loc 1 5573 7
 14579 0558 18201BE5 		ldr	r2, [fp, #-24]
 14580 055c 24301BE5 		ldr	r3, [fp, #-36]
 14581 0560 030052E1 		cmp	r2, r3
 14582 0564 0100001A 		bne	.L918
5574:../../Source/Kernel/rme_kernel.c ****     {
5575:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5576:../../Source/Kernel/rme_kernel.c **** 
5577:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 14583              		.loc 1 5577 16
 14584 0568 CE30E0E3 		mvn	r3, #206
 14585 056c 8C0000EA 		b	.L886
 14586              	.L918:
5578:../../Source/Kernel/rme_kernel.c ****     }
5579:../../Source/Kernel/rme_kernel.c ****     else
5580:../../Source/Kernel/rme_kernel.c ****     {
5581:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5582:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5583:../../Source/Kernel/rme_kernel.c ****     }
5584:../../Source/Kernel/rme_kernel.c ****     
5585:../../Source/Kernel/rme_kernel.c ****     /* See if the priority relationship is correct */
5586:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Prio_Max<Prio)
 14587              		.loc 1 5586 24
 14588 0570 24301BE5 		ldr	r3, [fp, #-36]
 14589 0574 243093E5 		ldr	r3, [r3, #36]
 14590              		.loc 1 5586 7
 14591 0578 08209BE5 		ldr	r2, [fp, #8]
 14592 057c 030052E1 		cmp	r2, r3
 14593 0580 0100009A 		bls	.L919
5587:../../Source/Kernel/rme_kernel.c ****     {
5588:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5589:../../Source/Kernel/rme_kernel.c **** 
5590:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 14594              		.loc 1 5590 16
 14595 0584 CC30E0E3 		mvn	r3, #204
 14596 0588 850000EA 		b	.L886
 14597              	.L919:
5591:../../Source/Kernel/rme_kernel.c ****     }
5592:../../Source/Kernel/rme_kernel.c ****     else
5593:../../Source/Kernel/rme_kernel.c ****     {
5594:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5595:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5596:../../Source/Kernel/rme_kernel.c ****     }
5597:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 357


5598:../../Source/Kernel/rme_kernel.c ****     /* Check whether the coprocessor context attribute is compatible with this core */
5599:../../Source/Kernel/rme_kernel.c ****     Hyp_Attr=Thread->Ctx.Hyp_Attr;
 14598              		.loc 1 5599 13
 14599 058c 18301BE5 		ldr	r3, [fp, #-24]
 14600 0590 443093E5 		ldr	r3, [r3, #68]
 14601 0594 28300BE5 		str	r3, [fp, #-40]
5600:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5601:../../Source/Kernel/rme_kernel.c ****     if(__RME_Thd_Cop_Check(RME_THD_ATTR(Hyp_Attr))<0)
5602:../../Source/Kernel/rme_kernel.c ****     {
5603:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5604:../../Source/Kernel/rme_kernel.c **** 
5605:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
5606:../../Source/Kernel/rme_kernel.c ****     }
5607:../../Source/Kernel/rme_kernel.c **** #else
5608:../../Source/Kernel/rme_kernel.c ****     if(RME_THD_ATTR(Hyp_Attr)!=0U)
 14602              		.loc 1 5608 8
 14603 0598 28301BE5 		ldr	r3, [fp, #-40]
 14604 059c 0231C3E3 		bic	r3, r3, #-2147483648
 14605              		.loc 1 5608 7
 14606 05a0 000053E3 		cmp	r3, #0
 14607 05a4 0100000A 		beq	.L920
5609:../../Source/Kernel/rme_kernel.c ****     {
5610:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5611:../../Source/Kernel/rme_kernel.c **** 
5612:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 14608              		.loc 1 5612 16
 14609 05a8 0630E0E3 		mvn	r3, #6
 14610 05ac 7C0000EA 		b	.L886
 14611              	.L920:
5613:../../Source/Kernel/rme_kernel.c ****     }
5614:../../Source/Kernel/rme_kernel.c **** #endif
5615:../../Source/Kernel/rme_kernel.c ****     else
5616:../../Source/Kernel/rme_kernel.c ****     {
5617:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5618:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5619:../../Source/Kernel/rme_kernel.c ****     }
5620:../../Source/Kernel/rme_kernel.c **** 
5621:../../Source/Kernel/rme_kernel.c ****     /* Check the hypervisor context buffer passed in to see whether it is good */
5622:../../Source/Kernel/rme_kernel.c ****     if((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U))
 14612              		.loc 1 5622 7
 14613 05b0 0C309BE5 		ldr	r3, [fp, #12]
 14614 05b4 000053E3 		cmp	r3, #0
 14615 05b8 2000000A 		beq	.L921
 14616              		.loc 1 5622 55 discriminator 1
 14617 05bc 28301BE5 		ldr	r3, [fp, #-40]
 14618              		.loc 1 5622 25 discriminator 1
 14619 05c0 000053E3 		cmp	r3, #0
 14620 05c4 1D0000AA 		bge	.L921
5623:../../Source/Kernel/rme_kernel.c ****     {
5624:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5625:../../Source/Kernel/rme_kernel.c ****         
5626:../../Source/Kernel/rme_kernel.c ****         /* Register save area must be aligned to word boundary */
5627:../../Source/Kernel/rme_kernel.c ****         if(RME_IS_ALIGNED(Haddr)!=0U)
 14621              		.loc 1 5627 12
 14622 05c8 0C309BE5 		ldr	r3, [fp, #12]
 14623 05cc 033003E2 		and	r3, r3, #3
 14624              		.loc 1 5627 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 358


 14625 05d0 000053E3 		cmp	r3, #0
 14626 05d4 0100001A 		bne	.L922
 14627              		.loc 1 5627 33 is_stmt 0 discriminator 1
 14628 05d8 0130A0E3 		mov	r3, #1
 14629 05dc 000000EA 		b	.L923
 14630              	.L922:
 14631              		.loc 1 5627 33 discriminator 2
 14632 05e0 0030A0E3 		mov	r3, #0
 14633              	.L923:
 14634              		.loc 1 5627 11 is_stmt 1 discriminator 4
 14635 05e4 000053E3 		cmp	r3, #0
 14636 05e8 1200000A 		beq	.L924
5628:../../Source/Kernel/rme_kernel.c ****         {
5629:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5630:../../Source/Kernel/rme_kernel.c ****             
5631:../../Source/Kernel/rme_kernel.c ****             /* It needs to be safely accessible to the kernel as well */
5632:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5633:../../Source/Kernel/rme_kernel.c ****             if(Haddr<RME_HYP_VA_BASE)
 14637              		.loc 1 5633 15
 14638 05ec 0C309BE5 		ldr	r3, [fp, #12]
 14639 05f0 1E0273E3 		cmn	r3, #-536870911
 14640 05f4 0100008A 		bhi	.L925
5634:../../Source/Kernel/rme_kernel.c ****             {
5635:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
5636:../../Source/Kernel/rme_kernel.c **** 
5637:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PTH_HADDR;
 14641              		.loc 1 5637 24
 14642 05f8 CA30E0E3 		mvn	r3, #202
 14643 05fc 680000EA 		b	.L886
 14644              	.L925:
5638:../../Source/Kernel/rme_kernel.c ****             }
5639:../../Source/Kernel/rme_kernel.c ****             else
5640:../../Source/Kernel/rme_kernel.c ****             {
5641:../../Source/Kernel/rme_kernel.c **** #endif
5642:../../Source/Kernel/rme_kernel.c ****                 End=Haddr+RME_REG_SIZE(RME_THD_ATTR(Thread->Ctx.Hyp_Attr));
 14645              		.loc 1 5642 20
 14646 0600 0C309BE5 		ldr	r3, [fp, #12]
 14647 0604 443083E2 		add	r3, r3, #68
 14648 0608 2C300BE5 		str	r3, [fp, #-44]
5643:../../Source/Kernel/rme_kernel.c ****                 if((End<=Haddr)||(End>(RME_HYP_VA_BASE+RME_HYP_VA_SIZE)))
 14649              		.loc 1 5643 19
 14650 060c 2C201BE5 		ldr	r2, [fp, #-44]
 14651 0610 0C309BE5 		ldr	r3, [fp, #12]
 14652 0614 030052E1 		cmp	r2, r3
 14653 0618 0400009A 		bls	.L926
 14654              		.loc 1 5643 32 discriminator 1
 14655 061c 2C201BE5 		ldr	r2, [fp, #-44]
 14656 0620 0030A0E3 		mov	r3, #0
 14657 0624 023042E3 		movt	r3, 8194
 14658 0628 030052E1 		cmp	r2, r3
 14659 062c 1100009A 		bls	.L939
 14660              	.L926:
5644:../../Source/Kernel/rme_kernel.c ****                 {
5645:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5646:../../Source/Kernel/rme_kernel.c **** 
5647:../../Source/Kernel/rme_kernel.c ****                     return RME_ERR_PTH_HADDR;
 14661              		.loc 1 5647 28
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 359


 14662 0630 CA30E0E3 		mvn	r3, #202
 14663 0634 5A0000EA 		b	.L886
 14664              	.L924:
5648:../../Source/Kernel/rme_kernel.c ****                 }
5649:../../Source/Kernel/rme_kernel.c ****                 else
5650:../../Source/Kernel/rme_kernel.c ****                 {
5651:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5652:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
5653:../../Source/Kernel/rme_kernel.c ****                 }
5654:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5655:../../Source/Kernel/rme_kernel.c ****             }
5656:../../Source/Kernel/rme_kernel.c **** #endif
5657:../../Source/Kernel/rme_kernel.c ****         }
5658:../../Source/Kernel/rme_kernel.c ****         /* Not aligned, exiting */
5659:../../Source/Kernel/rme_kernel.c ****         else
5660:../../Source/Kernel/rme_kernel.c ****         {
5661:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5662:../../Source/Kernel/rme_kernel.c **** 
5663:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_HADDR;
 14665              		.loc 1 5663 20
 14666 0638 CA30E0E3 		mvn	r3, #202
 14667 063c 580000EA 		b	.L886
 14668              	.L921:
5664:../../Source/Kernel/rme_kernel.c ****         }
5665:../../Source/Kernel/rme_kernel.c ****     }
5666:../../Source/Kernel/rme_kernel.c ****     /* We don't allow setting HYP addr for normal threads, nor do we allow
5667:../../Source/Kernel/rme_kernel.c ****      * setting HYP addr to NULL for hypervisor-managed threads. */
5668:../../Source/Kernel/rme_kernel.c ****     else if(((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)==0U))||
 14669              		.loc 1 5668 12
 14670 0640 0C309BE5 		ldr	r3, [fp, #12]
 14671 0644 000053E3 		cmp	r3, #0
 14672 0648 0200000A 		beq	.L929
 14673              		.loc 1 5668 61 discriminator 1
 14674 064c 28301BE5 		ldr	r3, [fp, #-40]
 14675              		.loc 1 5668 31 discriminator 1
 14676 0650 000053E3 		cmp	r3, #0
 14677 0654 050000AA 		bge	.L930
 14678              	.L929:
 14679              		.loc 1 5668 67 discriminator 3
 14680 0658 0C309BE5 		ldr	r3, [fp, #12]
 14681 065c 000053E3 		cmp	r3, #0
 14682 0660 0500001A 		bne	.L928
5669:../../Source/Kernel/rme_kernel.c ****             ((Haddr==RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U)))
 14683              		.loc 1 5669 61
 14684 0664 28301BE5 		ldr	r3, [fp, #-40]
 14685              		.loc 1 5669 31
 14686 0668 000053E3 		cmp	r3, #0
 14687 066c 020000AA 		bge	.L928
 14688              	.L930:
5670:../../Source/Kernel/rme_kernel.c ****     {
5671:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5672:../../Source/Kernel/rme_kernel.c **** 
5673:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
 14689              		.loc 1 5673 16
 14690 0670 CA30E0E3 		mvn	r3, #202
 14691 0674 4A0000EA 		b	.L886
 14692              	.L939:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 360


5627:../../Source/Kernel/rme_kernel.c ****         {
 14693              		.loc 1 5627 11
 14694 0678 00F020E3 		nop
 14695              	.L928:
5674:../../Source/Kernel/rme_kernel.c ****     }
5675:../../Source/Kernel/rme_kernel.c ****     else
5676:../../Source/Kernel/rme_kernel.c ****     {
5677:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5678:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5679:../../Source/Kernel/rme_kernel.c ****     }
5680:../../Source/Kernel/rme_kernel.c **** 
5681:../../Source/Kernel/rme_kernel.c ****     /* Try to bind the thread */
5682:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)&(Thread->Sched.Local),
 14696              		.loc 1 5682 8
 14697 067c 18301BE5 		ldr	r3, [fp, #-24]
 14698 0680 143083E2 		add	r3, r3, #20
 14699 0684 1C101BE5 		ldr	r1, [fp, #-28]
 14700 0688 20201BE5 		ldr	r2, [fp, #-32]
 14701 068c 0300A0E1 		mov	r0, r3
 14702 0690 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 14703 0694 0030A0E1 		mov	r3, r0
 14704              		.loc 1 5682 7 discriminator 1
 14705 0698 000053E3 		cmp	r3, #0
 14706 069c 0100001A 		bne	.L931
5683:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_Old,
5684:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_New)==RME_CASFAIL)
5685:../../Source/Kernel/rme_kernel.c ****     {
5686:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5687:../../Source/Kernel/rme_kernel.c **** 
5688:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 14707              		.loc 1 5688 16
 14708 06a0 C930E0E3 		mvn	r3, #201
 14709 06a4 3E0000EA 		b	.L886
 14710              	.L931:
5689:../../Source/Kernel/rme_kernel.c ****     }
5690:../../Source/Kernel/rme_kernel.c ****     else
5691:../../Source/Kernel/rme_kernel.c ****     {
5692:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5693:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5694:../../Source/Kernel/rme_kernel.c ****     }
5695:../../Source/Kernel/rme_kernel.c ****     
5696:../../Source/Kernel/rme_kernel.c ****     /* Increase the reference count of the scheduler thread struct - same core */
5697:../../Source/Kernel/rme_kernel.c ****     Scheduler->Sched.Sched_Ref++;
 14711              		.loc 1 5697 21
 14712 06a8 24301BE5 		ldr	r3, [fp, #-36]
 14713 06ac 303093E5 		ldr	r3, [r3, #48]
 14714              		.loc 1 5697 31
 14715 06b0 012083E2 		add	r2, r3, #1
 14716 06b4 24301BE5 		ldr	r3, [fp, #-36]
 14717 06b8 302083E5 		str	r2, [r3, #48]
5698:../../Source/Kernel/rme_kernel.c ****     
5699:../../Source/Kernel/rme_kernel.c ****     /* Bind successful and finish the work off. No need to worry about other cores'
5700:../../Source/Kernel/rme_kernel.c ****      * operations on this thread because this thread is already bound to this core.
5701:../../Source/Kernel/rme_kernel.c ****      * TID is half-word parameter-wise, but is stored and returned as a full word. */
5702:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd=Scheduler;
 14718              		.loc 1 5702 28
 14719 06bc 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 361


 14720 06c0 24201BE5 		ldr	r2, [fp, #-36]
 14721 06c4 342083E5 		str	r2, [r3, #52]
5703:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 14722              		.loc 1 5703 23
 14723 06c8 18301BE5 		ldr	r3, [fp, #-24]
 14724 06cc 08209BE5 		ldr	r2, [fp, #8]
 14725 06d0 202083E5 		str	r2, [r3, #32]
5704:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=(rme_ptr_t)TID;
 14726              		.loc 1 5704 23
 14727 06d4 04209BE5 		ldr	r2, [fp, #4]
 14728              		.loc 1 5704 22
 14729 06d8 18301BE5 		ldr	r3, [fp, #-24]
 14730 06dc 102083E5 		str	r2, [r3, #16]
5705:../../Source/Kernel/rme_kernel.c ****     
5706:../../Source/Kernel/rme_kernel.c ****     /* The state must be TIMEOUT or EXCPEND at this point */
5707:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT((Thread->Sched.State==RME_THD_TIMEOUT)||
 14731              		.loc 1 5707 5
 14732 06e0 18301BE5 		ldr	r3, [fp, #-24]
 14733 06e4 1C3093E5 		ldr	r3, [r3, #28]
 14734 06e8 020053E3 		cmp	r3, #2
 14735 06ec 0C00000A 		beq	.L932
 14736              		.loc 1 5707 5 is_stmt 0 discriminator 1
 14737 06f0 18301BE5 		ldr	r3, [fp, #-24]
 14738 06f4 1C3093E5 		ldr	r3, [r3, #28]
 14739 06f8 030053E3 		cmp	r3, #3
 14740 06fc 0800000A 		beq	.L932
 14741              		.loc 1 5707 5 discriminator 2
 14742 0700 003000E3 		movw	r3, #:lower16:.LC6
 14743 0704 003040E3 		movt	r3, #:upper16:.LC6
 14744 0708 002000E3 		movw	r2, #:lower16:.LC7
 14745 070c 002040E3 		movt	r2, #:upper16:.LC7
 14746 0710 4B1601E3 		movw	r1, #5707
 14747 0714 000000E3 		movw	r0, #:lower16:.LC8
 14748 0718 000040E3 		movt	r0, #:upper16:.LC8
 14749 071c FEFFFFEB 		bl	RME_Log
 14750              	.L933:
 14751              		.loc 1 5707 5
 14752 0720 FEFFFFEA 		b	.L933
 14753              	.L932:
5708:../../Source/Kernel/rme_kernel.c ****                (Thread->Sched.State==RME_THD_EXCPEND));
5709:../../Source/Kernel/rme_kernel.c **** 
5710:../../Source/Kernel/rme_kernel.c ****     /* Tie the signal endpoint to it if not zero */
5711:../../Source/Kernel/rme_kernel.c ****     if(Sig_Op==0U)
 14754              		.loc 1 5711 7 is_stmt 1
 14755 0724 10301BE5 		ldr	r3, [fp, #-16]
 14756 0728 000053E3 		cmp	r3, #0
 14757 072c 0300001A 		bne	.L934
5712:../../Source/Kernel/rme_kernel.c ****     {
5713:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5714:../../Source/Kernel/rme_kernel.c **** 
5715:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=0U;
 14758              		.loc 1 5715 32
 14759 0730 18301BE5 		ldr	r3, [fp, #-24]
 14760 0734 0020A0E3 		mov	r2, #0
 14761 0738 382083E5 		str	r2, [r3, #56]
 14762 073c 100000EA 		b	.L935
 14763              	.L934:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 362


5716:../../Source/Kernel/rme_kernel.c ****     }
5717:../../Source/Kernel/rme_kernel.c ****     else
5718:../../Source/Kernel/rme_kernel.c ****     {
5719:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5720:../../Source/Kernel/rme_kernel.c **** 
5721:../../Source/Kernel/rme_kernel.c ****         /* Convert to root cap */
5722:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 14764              		.loc 1 5722 33
 14765 0740 10301BE5 		ldr	r3, [fp, #-16]
 14766 0744 003093E5 		ldr	r3, [r3]
 14767 0748 7330FFE6 		uxth	r3, r3
 14768 074c 000053E3 		cmp	r3, #0
 14769 0750 0200000A 		beq	.L936
 14770              		.loc 1 5722 33 is_stmt 0 discriminator 1
 14771 0754 10301BE5 		ldr	r3, [fp, #-16]
 14772 0758 043093E5 		ldr	r3, [r3, #4]
 14773 075c 000000EA 		b	.L937
 14774              	.L936:
 14775              		.loc 1 5722 33 discriminator 2
 14776 0760 10301BE5 		ldr	r3, [fp, #-16]
 14777              	.L937:
 14778              		.loc 1 5722 32 is_stmt 1 discriminator 4
 14779 0764 18201BE5 		ldr	r2, [fp, #-24]
 14780 0768 383082E5 		str	r3, [r2, #56]
5723:../../Source/Kernel/rme_kernel.c ****         
5724:../../Source/Kernel/rme_kernel.c ****         /* Increase refcnt */
5725:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),1U);
 14781              		.loc 1 5725 9
 14782 076c 18301BE5 		ldr	r3, [fp, #-24]
 14783 0770 383093E5 		ldr	r3, [r3, #56]
 14784 0774 043083E2 		add	r3, r3, #4
 14785 0778 0110A0E3 		mov	r1, #1
 14786 077c 0300A0E1 		mov	r0, r3
 14787 0780 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14788              	.L935:
5726:../../Source/Kernel/rme_kernel.c ****     }
5727:../../Source/Kernel/rme_kernel.c ****     
5728:../../Source/Kernel/rme_kernel.c ****     /* Set hypervisor context address if we're hypervisor-managed */
5729:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)!=0U)
 14789              		.loc 1 5729 20
 14790 0784 18301BE5 		ldr	r3, [fp, #-24]
 14791 0788 443093E5 		ldr	r3, [r3, #68]
 14792              		.loc 1 5729 7
 14793 078c 000053E3 		cmp	r3, #0
 14794 0790 020000AA 		bge	.L938
5730:../../Source/Kernel/rme_kernel.c ****     {
5731:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5732:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)Haddr;
 14795              		.loc 1 5732 25
 14796 0794 0C209BE5 		ldr	r2, [fp, #12]
 14797              		.loc 1 5732 24
 14798 0798 18301BE5 		ldr	r3, [fp, #-24]
 14799 079c 482083E5 		str	r2, [r3, #72]
 14800              	.L938:
5733:../../Source/Kernel/rme_kernel.c ****     }
5734:../../Source/Kernel/rme_kernel.c ****     else
5735:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 363


5736:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5737:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5738:../../Source/Kernel/rme_kernel.c ****     }
5739:../../Source/Kernel/rme_kernel.c ****     
5740:../../Source/Kernel/rme_kernel.c ****     return 0;
 14801              		.loc 1 5740 12
 14802 07a0 0030A0E3 		mov	r3, #0
 14803              	.L886:
5741:../../Source/Kernel/rme_kernel.c **** }
 14804              		.loc 1 5741 1
 14805 07a4 0300A0E1 		mov	r0, r3
 14806 07a8 04D04BE2 		sub	sp, fp, #4
 14807              		.cfi_def_cfa 13, 8
 14808              		@ sp needed
 14809 07ac 0088BDE8 		pop	{fp, pc}
 14810              		.cfi_endproc
 14811              	.LFE58:
 14813              		.section	.text._RME_Thd_Sched_Free,"ax",%progbits
 14814              		.align	2
 14815              		.syntax unified
 14816              		.arm
 14818              	_RME_Thd_Sched_Free:
 14819              	.LFB59:
5742:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Bind ******************************************/
5743:../../Source/Kernel/rme_kernel.c **** 
5744:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Free ***********************************************
5745:../../Source/Kernel/rme_kernel.c **** Description : Free a thread from its current processor binding. This function
5746:../../Source/Kernel/rme_kernel.c ****               can only be executed from the same core on with the thread.
5747:../../Source/Kernel/rme_kernel.c ****               To free a thread from a core, it must not be the scheduler of
5748:../../Source/Kernel/rme_kernel.c ****               someone else. It could have pending scheduler notifications to
5749:../../Source/Kernel/rme_kernel.c ****               its parent though.
5750:../../Source/Kernel/rme_kernel.c ****               This system call can cause a potential context switch.
5751:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5752:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
5753:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5754:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5755:../../Source/Kernel/rme_kernel.c **** Output      : None.
5756:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5757:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5758:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Free(struct RME_Cap_Cpt* Cpt, 
5759:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5760:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd)
5761:../../Source/Kernel/rme_kernel.c **** {
 14820              		.loc 1 5761 1
 14821              		.cfi_startproc
 14822              		@ args = 0, pretend = 0, frame = 32
 14823              		@ frame_needed = 1, uses_anonymous_args = 0
 14824 0000 00482DE9 		push	{fp, lr}
 14825              		.cfi_def_cfa_offset 8
 14826              		.cfi_offset 11, -8
 14827              		.cfi_offset 14, -4
 14828 0004 04B08DE2 		add	fp, sp, #4
 14829              		.cfi_def_cfa 11, 4
 14830 0008 20D04DE2 		sub	sp, sp, #32
 14831 000c 18000BE5 		str	r0, [fp, #-24]
 14832 0010 1C100BE5 		str	r1, [fp, #-28]
 14833 0014 20200BE5 		str	r2, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 364


5762:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5763:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5764:../../Source/Kernel/rme_kernel.c ****     /* These are used to free the thread */
5765:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5766:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5767:../../Source/Kernel/rme_kernel.c ****     
5768:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5769:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14834              		.loc 1 5769 5
 14835 0018 20301BE5 		ldr	r3, [fp, #-32]
 14836 001c 803003E2 		and	r3, r3, #128
 14837 0020 000053E3 		cmp	r3, #0
 14838 0024 1C00001A 		bne	.L941
 14839              		.loc 1 5769 5 is_stmt 0 discriminator 1
 14840 0028 18301BE5 		ldr	r3, [fp, #-24]
 14841 002c 142093E5 		ldr	r2, [r3, #20]
 14842 0030 20301BE5 		ldr	r3, [fp, #-32]
 14843 0034 030052E1 		cmp	r2, r3
 14844 0038 0100008A 		bhi	.L942
 14845              		.loc 1 5769 5 discriminator 3
 14846 003c 0230E0E3 		mvn	r3, #2
 14847              		.loc 1 5769 5
 14848 0040 D90000EA 		b	.L943
 14849              	.L942:
 14850              		.loc 1 5769 5 discriminator 4
 14851 0044 20301BE5 		ldr	r3, [fp, #-32]
 14852 0048 8322A0E1 		lsl	r2, r3, #5
 14853 004c 18301BE5 		ldr	r3, [fp, #-24]
 14854 0050 0C3093E5 		ldr	r3, [r3, #12]
 14855 0054 033082E0 		add	r3, r2, r3
 14856 0058 08300BE5 		str	r3, [fp, #-8]
 14857 005c 08301BE5 		ldr	r3, [fp, #-8]
 14858 0060 0300A0E1 		mov	r0, r3
 14859 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14860 0068 0C000BE5 		str	r0, [fp, #-12]
 14861              		.loc 1 5769 5 discriminator 1
 14862 006c 0C301BE5 		ldr	r3, [fp, #-12]
 14863 0070 FF3803E2 		and	r3, r3, #16711680
 14864 0074 020853E3 		cmp	r3, #131072
 14865 0078 0100001A 		bne	.L944
 14866              		.loc 1 5769 5 discriminator 5
 14867 007c 0830E0E3 		mvn	r3, #8
 14868              		.loc 1 5769 5
 14869 0080 C90000EA 		b	.L943
 14870              	.L944:
 14871              		.loc 1 5769 5 discriminator 6
 14872 0084 0C301BE5 		ldr	r3, [fp, #-12]
 14873 0088 233CA0E1 		lsr	r3, r3, #24
 14874 008c 060053E3 		cmp	r3, #6
 14875 0090 3F00000A 		beq	.L945
 14876              		.loc 1 5769 5 discriminator 7
 14877 0094 0130E0E3 		mvn	r3, #1
 14878              		.loc 1 5769 5
 14879 0098 C30000EA 		b	.L943
 14880              	.L941:
 14881              		.loc 1 5769 5 discriminator 2
 14882 009c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 365


 14883 00a0 2324A0E1 		lsr	r2, r3, #8
 14884 00a4 18301BE5 		ldr	r3, [fp, #-24]
 14885 00a8 143093E5 		ldr	r3, [r3, #20]
 14886 00ac 030052E1 		cmp	r2, r3
 14887 00b0 0100003A 		bcc	.L946
 14888              		.loc 1 5769 5 discriminator 8
 14889 00b4 0230E0E3 		mvn	r3, #2
 14890              		.loc 1 5769 5
 14891 00b8 BB0000EA 		b	.L943
 14892              	.L946:
 14893              		.loc 1 5769 5 discriminator 9
 14894 00bc 20301BE5 		ldr	r3, [fp, #-32]
 14895 00c0 2334A0E1 		lsr	r3, r3, #8
 14896 00c4 8322A0E1 		lsl	r2, r3, #5
 14897 00c8 18301BE5 		ldr	r3, [fp, #-24]
 14898 00cc 0C3093E5 		ldr	r3, [r3, #12]
 14899 00d0 033082E0 		add	r3, r2, r3
 14900 00d4 08300BE5 		str	r3, [fp, #-8]
 14901 00d8 08301BE5 		ldr	r3, [fp, #-8]
 14902 00dc 0300A0E1 		mov	r0, r3
 14903 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14904 00e4 0C000BE5 		str	r0, [fp, #-12]
 14905              		.loc 1 5769 5 discriminator 1
 14906 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 14907 00ec FF3803E2 		and	r3, r3, #16711680
 14908 00f0 020853E3 		cmp	r3, #131072
 14909 00f4 0100001A 		bne	.L947
 14910              		.loc 1 5769 5 discriminator 10
 14911 00f8 0830E0E3 		mvn	r3, #8
 14912              		.loc 1 5769 5
 14913 00fc AA0000EA 		b	.L943
 14914              	.L947:
 14915              		.loc 1 5769 5 discriminator 11
 14916 0100 0C301BE5 		ldr	r3, [fp, #-12]
 14917 0104 233CA0E1 		lsr	r3, r3, #24
 14918 0108 030053E3 		cmp	r3, #3
 14919 010c 0100000A 		beq	.L948
 14920              		.loc 1 5769 5 discriminator 12
 14921 0110 0130E0E3 		mvn	r3, #1
 14922              		.loc 1 5769 5
 14923 0114 A40000EA 		b	.L943
 14924              	.L948:
 14925              		.loc 1 5769 5 discriminator 13
 14926 0118 20301BE5 		ldr	r3, [fp, #-32]
 14927 011c 7F2003E2 		and	r2, r3, #127
 14928 0120 08301BE5 		ldr	r3, [fp, #-8]
 14929 0124 143093E5 		ldr	r3, [r3, #20]
 14930 0128 030052E1 		cmp	r2, r3
 14931 012c 0100003A 		bcc	.L949
 14932              		.loc 1 5769 5 discriminator 14
 14933 0130 0230E0E3 		mvn	r3, #2
 14934              		.loc 1 5769 5
 14935 0134 9C0000EA 		b	.L943
 14936              	.L949:
 14937              		.loc 1 5769 5 discriminator 15
 14938 0138 20301BE5 		ldr	r3, [fp, #-32]
 14939 013c 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 366


 14940 0140 8322A0E1 		lsl	r2, r3, #5
 14941 0144 08301BE5 		ldr	r3, [fp, #-8]
 14942 0148 0C3093E5 		ldr	r3, [r3, #12]
 14943 014c 033082E0 		add	r3, r2, r3
 14944 0150 08300BE5 		str	r3, [fp, #-8]
 14945 0154 08301BE5 		ldr	r3, [fp, #-8]
 14946 0158 0300A0E1 		mov	r0, r3
 14947 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14948 0160 0C000BE5 		str	r0, [fp, #-12]
 14949              		.loc 1 5769 5 discriminator 1
 14950 0164 0C301BE5 		ldr	r3, [fp, #-12]
 14951 0168 FF3803E2 		and	r3, r3, #16711680
 14952 016c 020853E3 		cmp	r3, #131072
 14953 0170 0100001A 		bne	.L950
 14954              		.loc 1 5769 5 discriminator 16
 14955 0174 0830E0E3 		mvn	r3, #8
 14956              		.loc 1 5769 5
 14957 0178 8B0000EA 		b	.L943
 14958              	.L950:
 14959              		.loc 1 5769 5 discriminator 17
 14960 017c 0C301BE5 		ldr	r3, [fp, #-12]
 14961 0180 233CA0E1 		lsr	r3, r3, #24
 14962 0184 060053E3 		cmp	r3, #6
 14963 0188 0100000A 		beq	.L945
 14964              		.loc 1 5769 5 discriminator 18
 14965 018c 0130E0E3 		mvn	r3, #1
 14966              		.loc 1 5769 5
 14967 0190 850000EA 		b	.L943
 14968              	.L945:
5770:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5771:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5772:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_FREE);
 14969              		.loc 1 5772 5 is_stmt 1
 14970 0194 08301BE5 		ldr	r3, [fp, #-8]
 14971 0198 083093E5 		ldr	r3, [r3, #8]
 14972 019c 103003E2 		and	r3, r3, #16
 14973 01a0 000053E3 		cmp	r3, #0
 14974 01a4 0100001A 		bne	.L951
 14975              		.loc 1 5772 5 is_stmt 0 discriminator 1
 14976 01a8 0630E0E3 		mvn	r3, #6
 14977              		.loc 1 5772 5
 14978 01ac 7E0000EA 		b	.L943
 14979              	.L951:
5773:../../Source/Kernel/rme_kernel.c ****     
5774:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound to this core */
5775:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 14980              		.loc 1 5775 10 is_stmt 1
 14981 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14982 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14983 01b8 10300BE5 		str	r3, [fp, #-16]
5776:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 14984              		.loc 1 5776 48
 14985 01bc 08301BE5 		ldr	r3, [fp, #-8]
 14986 01c0 0C3093E5 		ldr	r3, [r3, #12]
 14987              		.loc 1 5776 11
 14988 01c4 14300BE5 		str	r3, [fp, #-20]
5777:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 367


 14989              		.loc 1 5777 21
 14990 01c8 14301BE5 		ldr	r3, [fp, #-20]
 14991 01cc 143093E5 		ldr	r3, [r3, #20]
 14992              		.loc 1 5777 7
 14993 01d0 10201BE5 		ldr	r2, [fp, #-16]
 14994 01d4 030052E1 		cmp	r2, r3
 14995 01d8 0100000A 		beq	.L952
5778:../../Source/Kernel/rme_kernel.c ****     {
5779:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5780:../../Source/Kernel/rme_kernel.c **** 
5781:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14996              		.loc 1 5781 16
 14997 01dc CB30E0E3 		mvn	r3, #203
 14998 01e0 710000EA 		b	.L943
 14999              	.L952:
5782:../../Source/Kernel/rme_kernel.c ****     }
5783:../../Source/Kernel/rme_kernel.c ****     else
5784:../../Source/Kernel/rme_kernel.c ****     {
5785:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5786:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5787:../../Source/Kernel/rme_kernel.c ****     }
5788:../../Source/Kernel/rme_kernel.c ****     
5789:../../Source/Kernel/rme_kernel.c ****     /* Am I referenced by someone as a scheduler? If yes, we cannot unbind. Because
5790:../../Source/Kernel/rme_kernel.c ****      * boot-time thread's refcnt will never be 0, thus they will never pass this checking */
5791:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Ref!=0U)
 15000              		.loc 1 5791 21
 15001 01e4 14301BE5 		ldr	r3, [fp, #-20]
 15002 01e8 303093E5 		ldr	r3, [r3, #48]
 15003              		.loc 1 5791 7
 15004 01ec 000053E3 		cmp	r3, #0
 15005 01f0 0100000A 		beq	.L953
5792:../../Source/Kernel/rme_kernel.c ****     {
5793:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5794:../../Source/Kernel/rme_kernel.c **** 
5795:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_REFCNT;
 15006              		.loc 1 5795 16
 15007 01f4 CD30E0E3 		mvn	r3, #205
 15008 01f8 6B0000EA 		b	.L943
 15009              	.L953:
5796:../../Source/Kernel/rme_kernel.c ****     }
5797:../../Source/Kernel/rme_kernel.c ****     else
5798:../../Source/Kernel/rme_kernel.c ****     {
5799:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5800:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5801:../../Source/Kernel/rme_kernel.c ****     }
5802:../../Source/Kernel/rme_kernel.c **** 
5803:../../Source/Kernel/rme_kernel.c ****     /* Decrease the parent's reference count - on the same core */
5804:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd->Sched.Sched_Ref--;
 15010              		.loc 1 5804 18
 15011 01fc 14301BE5 		ldr	r3, [fp, #-20]
 15012 0200 343093E5 		ldr	r3, [r3, #52]
 15013              		.loc 1 5804 35
 15014 0204 302093E5 		ldr	r2, [r3, #48]
 15015              		.loc 1 5804 45
 15016 0208 012042E2 		sub	r2, r2, #1
 15017 020c 302083E5 		str	r2, [r3, #48]
5805:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 368


5806:../../Source/Kernel/rme_kernel.c ****     /* See if we have any events sent to the parent. If yes, remove that event */
5807:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Notif.Next!=&(Thread->Sched.Notif))
 15018              		.loc 1 5807 27
 15019 0210 14301BE5 		ldr	r3, [fp, #-20]
 15020 0214 082093E5 		ldr	r2, [r3, #8]
 15021              		.loc 1 5807 34
 15022 0218 14301BE5 		ldr	r3, [fp, #-20]
 15023 021c 083083E2 		add	r3, r3, #8
 15024              		.loc 1 5807 7
 15025 0220 030052E1 		cmp	r2, r3
 15026 0224 0A00000A 		beq	.L954
5808:../../Source/Kernel/rme_kernel.c ****     {
5809:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5810:../../Source/Kernel/rme_kernel.c **** 
5811:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 15027              		.loc 1 5811 9
 15028 0228 14301BE5 		ldr	r3, [fp, #-20]
 15029 022c 0C2093E5 		ldr	r2, [r3, #12]
 15030 0230 14301BE5 		ldr	r3, [fp, #-20]
 15031 0234 083093E5 		ldr	r3, [r3, #8]
 15032 0238 0310A0E1 		mov	r1, r3
 15033 023c 0200A0E1 		mov	r0, r2
 15034 0240 FEFFFFEB 		bl	_RME_List_Del
5812:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Thread->Sched.Notif));
 15035              		.loc 1 5812 9
 15036 0244 14301BE5 		ldr	r3, [fp, #-20]
 15037 0248 083083E2 		add	r3, r3, #8
 15038 024c 0300A0E1 		mov	r0, r3
 15039 0250 FEFFFFEB 		bl	_RME_List_Crt
 15040              	.L954:
5813:../../Source/Kernel/rme_kernel.c ****     }
5814:../../Source/Kernel/rme_kernel.c ****     else
5815:../../Source/Kernel/rme_kernel.c ****     {
5816:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5817:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5818:../../Source/Kernel/rme_kernel.c ****     }
5819:../../Source/Kernel/rme_kernel.c **** 
5820:../../Source/Kernel/rme_kernel.c ****     /* If we have an scheduler event endpoint, release it */
5821:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Sig!=RME_NULL)
 15041              		.loc 1 5821 21
 15042 0254 14301BE5 		ldr	r3, [fp, #-20]
 15043 0258 383093E5 		ldr	r3, [r3, #56]
 15044              		.loc 1 5821 7
 15045 025c 000053E3 		cmp	r3, #0
 15046 0260 0500000A 		beq	.L955
5822:../../Source/Kernel/rme_kernel.c ****     {
5823:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5824:../../Source/Kernel/rme_kernel.c **** 
5825:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),-1);
 15047              		.loc 1 5825 9
 15048 0264 14301BE5 		ldr	r3, [fp, #-20]
 15049 0268 383093E5 		ldr	r3, [r3, #56]
 15050 026c 043083E2 		add	r3, r3, #4
 15051 0270 0010E0E3 		mvn	r1, #0
 15052 0274 0300A0E1 		mov	r0, r3
 15053 0278 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 15054              	.L955:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 369


5826:../../Source/Kernel/rme_kernel.c ****     }
5827:../../Source/Kernel/rme_kernel.c ****     else
5828:../../Source/Kernel/rme_kernel.c ****     {
5829:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5830:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5831:../../Source/Kernel/rme_kernel.c ****     }
5832:../../Source/Kernel/rme_kernel.c **** 
5833:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5834:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 15055              		.loc 1 5834 5
 15056 027c 0010A0E3 		mov	r1, #0
 15057 0280 1C001BE5 		ldr	r0, [fp, #-28]
 15058 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5835:../../Source/Kernel/rme_kernel.c ****     
5836:../../Source/Kernel/rme_kernel.c ****     /* If the thread is ready, kick it out of the run queue. If it is blocked on
5837:../../Source/Kernel/rme_kernel.c ****      * some endpoint, end the blocking and set the return value to RME_ERR_SIV_FREE.
5838:../../Source/Kernel/rme_kernel.c ****      * If the thread is killed due to a fault, we will not clear the fault here, and
5839:../../Source/Kernel/rme_kernel.c ****      * we will wait for the Exec_Set to clear it. No scheduler notifications are sent
5840:../../Source/Kernel/rme_kernel.c ****      * because the thread is being freed and notifications at this point are useless. */
5841:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_READY)
 15059              		.loc 1 5841 21
 15060 0288 14301BE5 		ldr	r3, [fp, #-20]
 15061 028c 1C3093E5 		ldr	r3, [r3, #28]
 15062              		.loc 1 5841 7
 15063 0290 000053E3 		cmp	r3, #0
 15064 0294 0500001A 		bne	.L956
5842:../../Source/Kernel/rme_kernel.c ****     {
5843:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5844:../../Source/Kernel/rme_kernel.c **** 
5845:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue and timeout but don't notify parent */
5846:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thread);
 15065              		.loc 1 5846 9
 15066 0298 14001BE5 		ldr	r0, [fp, #-20]
 15067 029c FEFFFFEB 		bl	_RME_Run_Del
5847:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 15068              		.loc 1 5847 28
 15069 02a0 14301BE5 		ldr	r3, [fp, #-20]
 15070 02a4 0220A0E3 		mov	r2, #2
 15071 02a8 1C2083E5 		str	r2, [r3, #28]
 15072 02ac 130000EA 		b	.L957
 15073              	.L956:
5848:../../Source/Kernel/rme_kernel.c ****     }
5849:../../Source/Kernel/rme_kernel.c ****     /* BLOCKED */
5850:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_BLOCKED)
 15074              		.loc 1 5850 26
 15075 02b0 14301BE5 		ldr	r3, [fp, #-20]
 15076 02b4 1C3093E5 		ldr	r3, [r3, #28]
 15077              		.loc 1 5850 12
 15078 02b8 010053E3 		cmp	r3, #1
 15079 02bc 0F00001A 		bne	.L957
5851:../../Source/Kernel/rme_kernel.c ****     {
5852:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5853:../../Source/Kernel/rme_kernel.c ****         
5854:../../Source/Kernel/rme_kernel.c ****         /* If it got here, the thread that is operated on cannot be the current 
5855:../../Source/Kernel/rme_kernel.c ****          * thread, so we are not overwriting the return value of the caller. */
5856:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thread->Ctx.Reg->Reg),RME_ERR_SIV_FREE);
 15080              		.loc 1 5856 43
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 370


 15081 02c0 14301BE5 		ldr	r3, [fp, #-20]
 15082 02c4 483093E5 		ldr	r3, [r3, #72]
 15083              		.loc 1 5856 9
 15084 02c8 CE1E0FE3 		movw	r1, #65230
 15085 02cc FF1F4FE3 		movt	r1, 65535
 15086 02d0 0300A0E1 		mov	r0, r3
 15087 02d4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5857:../../Source/Kernel/rme_kernel.c ****         /* Release signal and thread from each other */
5858:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal->Thd=RME_NULL;
 15088              		.loc 1 5858 22
 15089 02d8 14301BE5 		ldr	r3, [fp, #-20]
 15090 02dc 283093E5 		ldr	r3, [r3, #40]
 15091              		.loc 1 5858 34
 15092 02e0 0020A0E3 		mov	r2, #0
 15093 02e4 182083E5 		str	r2, [r3, #24]
5859:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal=RME_NULL;
 15094              		.loc 1 5859 29
 15095 02e8 14301BE5 		ldr	r3, [fp, #-20]
 15096 02ec 0020A0E3 		mov	r2, #0
 15097 02f0 282083E5 		str	r2, [r3, #40]
5860:../../Source/Kernel/rme_kernel.c ****         /* Timeout but don't notify parent */
5861:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 15098              		.loc 1 5861 28
 15099 02f4 14301BE5 		ldr	r3, [fp, #-20]
 15100 02f8 0220A0E3 		mov	r2, #2
 15101 02fc 1C2083E5 		str	r2, [r3, #28]
 15102              	.L957:
5862:../../Source/Kernel/rme_kernel.c ****     }
5863:../../Source/Kernel/rme_kernel.c ****     /* TIMEOUT or EXCPEND */
5864:../../Source/Kernel/rme_kernel.c ****     else
5865:../../Source/Kernel/rme_kernel.c ****     {
5866:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5867:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5868:../../Source/Kernel/rme_kernel.c ****     }
5869:../../Source/Kernel/rme_kernel.c **** 
5870:../../Source/Kernel/rme_kernel.c ****     /* Cleanup all remaining timeslices on it */
5871:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 15103              		.loc 1 5871 24
 15104 0300 14301BE5 		ldr	r3, [fp, #-20]
 15105 0304 0020A0E3 		mov	r2, #0
 15106 0308 182083E5 		str	r2, [r3, #24]
5872:../../Source/Kernel/rme_kernel.c ****     
5873:../../Source/Kernel/rme_kernel.c ****     /* Check if this thread is the current one and we may need to switch away */
5874:../../Source/Kernel/rme_kernel.c ****     if(Local->Thd_Cur==Thread)
 15107              		.loc 1 5874 13
 15108 030c 10301BE5 		ldr	r3, [fp, #-16]
 15109 0310 043093E5 		ldr	r3, [r3, #4]
 15110              		.loc 1 5874 7
 15111 0314 14201BE5 		ldr	r2, [fp, #-20]
 15112 0318 030052E1 		cmp	r2, r3
 15113 031c 1C00001A 		bne	.L958
5875:../../Source/Kernel/rme_kernel.c ****     {
5876:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5877:../../Source/Kernel/rme_kernel.c **** 
5878:../../Source/Kernel/rme_kernel.c ****         Local->Thd_Cur=_RME_Run_High(Local);
 15114              		.loc 1 5878 24
 15115 0320 10001BE5 		ldr	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 371


 15116 0324 FEFFFFEB 		bl	_RME_Run_High
 15117 0328 0020A0E1 		mov	r2, r0
 15118              		.loc 1 5878 23 discriminator 1
 15119 032c 10301BE5 		ldr	r3, [fp, #-16]
 15120 0330 042083E5 		str	r2, [r3, #4]
5879:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Local->Thd_Cur);
 15121              		.loc 1 5879 9
 15122 0334 10301BE5 		ldr	r3, [fp, #-16]
 15123 0338 043093E5 		ldr	r3, [r3, #4]
 15124 033c 0300A0E1 		mov	r0, r3
 15125 0340 FEFFFFEB 		bl	_RME_Run_Ins
5880:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Local->Thd_Cur->Sched.State==RME_THD_READY);
 15126              		.loc 1 5880 9
 15127 0344 10301BE5 		ldr	r3, [fp, #-16]
 15128 0348 043093E5 		ldr	r3, [r3, #4]
 15129 034c 1C3093E5 		ldr	r3, [r3, #28]
 15130 0350 000053E3 		cmp	r3, #0
 15131 0354 0800000A 		beq	.L959
 15132              		.loc 1 5880 9 is_stmt 0 discriminator 1
 15133 0358 003000E3 		movw	r3, #:lower16:.LC6
 15134 035c 003040E3 		movt	r3, #:upper16:.LC6
 15135 0360 002000E3 		movw	r2, #:lower16:.LC7
 15136 0364 002040E3 		movt	r2, #:upper16:.LC7
 15137 0368 F81601E3 		movw	r1, #5880
 15138 036c 000000E3 		movw	r0, #:lower16:.LC8
 15139 0370 000040E3 		movt	r0, #:upper16:.LC8
 15140 0374 FEFFFFEB 		bl	RME_Log
 15141              	.L960:
 15142              		.loc 1 5880 9
 15143 0378 FEFFFFEA 		b	.L960
 15144              	.L959:
5881:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Swt(Reg,Thread,Local->Thd_Cur);
 15145              		.loc 1 5881 9 is_stmt 1
 15146 037c 10301BE5 		ldr	r3, [fp, #-16]
 15147 0380 043093E5 		ldr	r3, [r3, #4]
 15148 0384 0320A0E1 		mov	r2, r3
 15149 0388 14101BE5 		ldr	r1, [fp, #-20]
 15150 038c 1C001BE5 		ldr	r0, [fp, #-28]
 15151 0390 FEFFFFEB 		bl	_RME_Run_Swt
 15152              	.L958:
5882:../../Source/Kernel/rme_kernel.c ****     }
5883:../../Source/Kernel/rme_kernel.c ****     else
5884:../../Source/Kernel/rme_kernel.c ****     {
5885:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5886:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5887:../../Source/Kernel/rme_kernel.c ****     }
5888:../../Source/Kernel/rme_kernel.c ****     
5889:../../Source/Kernel/rme_kernel.c ****     /* Set the state to free so other cores can bind */
5890:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((rme_ptr_t*)&(Thread->Sched.Local),
 15153              		.loc 1 5890 5
 15154 0394 14301BE5 		ldr	r3, [fp, #-20]
 15155 0398 143083E2 		add	r3, r3, #20
 15156 039c 0010E0E3 		mvn	r1, #0
 15157 03a0 0300A0E1 		mov	r0, r3
 15158 03a4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5891:../../Source/Kernel/rme_kernel.c ****                       (rme_ptr_t)RME_THD_FREE);
5892:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 372


5893:../../Source/Kernel/rme_kernel.c ****     return 0;
 15159              		.loc 1 5893 12
 15160 03a8 0030A0E3 		mov	r3, #0
 15161              	.L943:
5894:../../Source/Kernel/rme_kernel.c **** }
 15162              		.loc 1 5894 1
 15163 03ac 0300A0E1 		mov	r0, r3
 15164 03b0 04D04BE2 		sub	sp, fp, #4
 15165              		.cfi_def_cfa 13, 8
 15166              		@ sp needed
 15167 03b4 0088BDE8 		pop	{fp, pc}
 15168              		.cfi_endproc
 15169              	.LFE59:
 15171              		.section	.text._RME_Thd_Exec_Set,"ax",%progbits
 15172              		.align	2
 15173              		.syntax unified
 15174              		.arm
 15176              	_RME_Thd_Exec_Set:
 15177              	.LFB60:
5895:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Free ******************************************/
5896:../../Source/Kernel/rme_kernel.c **** 
5897:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Exec_Set *************************************************
5898:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's entry point and stack. The registers will be
5899:../../Source/Kernel/rme_kernel.c ****               initialized with these contents.
5900:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5901:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5902:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5903:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5904:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry address of the thread.
5905:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
5906:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter to pass to the thread.
5907:../../Source/Kernel/rme_kernel.c **** Output      : None.
5908:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5909:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5910:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Exec_Set(struct RME_Cap_Cpt* Cpt,
5911:../../Source/Kernel/rme_kernel.c ****                                    struct RME_Reg_Struct* Reg,
5912:../../Source/Kernel/rme_kernel.c ****                                    rme_cid_t Cap_Thd,
5913:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Entry,
5914:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Stack,
5915:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Param)
5916:../../Source/Kernel/rme_kernel.c **** {
 15178              		.loc 1 5916 1
 15179              		.cfi_startproc
 15180              		@ args = 8, pretend = 0, frame = 32
 15181              		@ frame_needed = 1, uses_anonymous_args = 0
 15182 0000 00482DE9 		push	{fp, lr}
 15183              		.cfi_def_cfa_offset 8
 15184              		.cfi_offset 11, -8
 15185              		.cfi_offset 14, -4
 15186 0004 04B08DE2 		add	fp, sp, #4
 15187              		.cfi_def_cfa 11, 4
 15188 0008 28D04DE2 		sub	sp, sp, #40
 15189 000c 18000BE5 		str	r0, [fp, #-24]
 15190 0010 1C100BE5 		str	r1, [fp, #-28]
 15191 0014 20200BE5 		str	r2, [fp, #-32]
 15192 0018 24300BE5 		str	r3, [fp, #-36]
5917:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 373


5918:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5919:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5920:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5921:../../Source/Kernel/rme_kernel.c ****     
5922:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5923:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15193              		.loc 1 5923 5
 15194 001c 20301BE5 		ldr	r3, [fp, #-32]
 15195 0020 803003E2 		and	r3, r3, #128
 15196 0024 000053E3 		cmp	r3, #0
 15197 0028 1C00001A 		bne	.L962
 15198              		.loc 1 5923 5 is_stmt 0 discriminator 1
 15199 002c 18301BE5 		ldr	r3, [fp, #-24]
 15200 0030 142093E5 		ldr	r2, [r3, #20]
 15201 0034 20301BE5 		ldr	r3, [fp, #-32]
 15202 0038 030052E1 		cmp	r2, r3
 15203 003c 0100008A 		bhi	.L963
 15204              		.loc 1 5923 5 discriminator 3
 15205 0040 0230E0E3 		mvn	r3, #2
 15206              		.loc 1 5923 5
 15207 0044 910000EA 		b	.L964
 15208              	.L963:
 15209              		.loc 1 5923 5 discriminator 4
 15210 0048 20301BE5 		ldr	r3, [fp, #-32]
 15211 004c 8322A0E1 		lsl	r2, r3, #5
 15212 0050 18301BE5 		ldr	r3, [fp, #-24]
 15213 0054 0C3093E5 		ldr	r3, [r3, #12]
 15214 0058 033082E0 		add	r3, r2, r3
 15215 005c 08300BE5 		str	r3, [fp, #-8]
 15216 0060 08301BE5 		ldr	r3, [fp, #-8]
 15217 0064 0300A0E1 		mov	r0, r3
 15218 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15219 006c 0C000BE5 		str	r0, [fp, #-12]
 15220              		.loc 1 5923 5 discriminator 1
 15221 0070 0C301BE5 		ldr	r3, [fp, #-12]
 15222 0074 FF3803E2 		and	r3, r3, #16711680
 15223 0078 020853E3 		cmp	r3, #131072
 15224 007c 0100001A 		bne	.L965
 15225              		.loc 1 5923 5 discriminator 5
 15226 0080 0830E0E3 		mvn	r3, #8
 15227              		.loc 1 5923 5
 15228 0084 810000EA 		b	.L964
 15229              	.L965:
 15230              		.loc 1 5923 5 discriminator 6
 15231 0088 0C301BE5 		ldr	r3, [fp, #-12]
 15232 008c 233CA0E1 		lsr	r3, r3, #24
 15233 0090 060053E3 		cmp	r3, #6
 15234 0094 3F00000A 		beq	.L966
 15235              		.loc 1 5923 5 discriminator 7
 15236 0098 0130E0E3 		mvn	r3, #1
 15237              		.loc 1 5923 5
 15238 009c 7B0000EA 		b	.L964
 15239              	.L962:
 15240              		.loc 1 5923 5 discriminator 2
 15241 00a0 20301BE5 		ldr	r3, [fp, #-32]
 15242 00a4 2324A0E1 		lsr	r2, r3, #8
 15243 00a8 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 374


 15244 00ac 143093E5 		ldr	r3, [r3, #20]
 15245 00b0 030052E1 		cmp	r2, r3
 15246 00b4 0100003A 		bcc	.L967
 15247              		.loc 1 5923 5 discriminator 8
 15248 00b8 0230E0E3 		mvn	r3, #2
 15249              		.loc 1 5923 5
 15250 00bc 730000EA 		b	.L964
 15251              	.L967:
 15252              		.loc 1 5923 5 discriminator 9
 15253 00c0 20301BE5 		ldr	r3, [fp, #-32]
 15254 00c4 2334A0E1 		lsr	r3, r3, #8
 15255 00c8 8322A0E1 		lsl	r2, r3, #5
 15256 00cc 18301BE5 		ldr	r3, [fp, #-24]
 15257 00d0 0C3093E5 		ldr	r3, [r3, #12]
 15258 00d4 033082E0 		add	r3, r2, r3
 15259 00d8 08300BE5 		str	r3, [fp, #-8]
 15260 00dc 08301BE5 		ldr	r3, [fp, #-8]
 15261 00e0 0300A0E1 		mov	r0, r3
 15262 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15263 00e8 0C000BE5 		str	r0, [fp, #-12]
 15264              		.loc 1 5923 5 discriminator 1
 15265 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 15266 00f0 FF3803E2 		and	r3, r3, #16711680
 15267 00f4 020853E3 		cmp	r3, #131072
 15268 00f8 0100001A 		bne	.L968
 15269              		.loc 1 5923 5 discriminator 10
 15270 00fc 0830E0E3 		mvn	r3, #8
 15271              		.loc 1 5923 5
 15272 0100 620000EA 		b	.L964
 15273              	.L968:
 15274              		.loc 1 5923 5 discriminator 11
 15275 0104 0C301BE5 		ldr	r3, [fp, #-12]
 15276 0108 233CA0E1 		lsr	r3, r3, #24
 15277 010c 030053E3 		cmp	r3, #3
 15278 0110 0100000A 		beq	.L969
 15279              		.loc 1 5923 5 discriminator 12
 15280 0114 0130E0E3 		mvn	r3, #1
 15281              		.loc 1 5923 5
 15282 0118 5C0000EA 		b	.L964
 15283              	.L969:
 15284              		.loc 1 5923 5 discriminator 13
 15285 011c 20301BE5 		ldr	r3, [fp, #-32]
 15286 0120 7F2003E2 		and	r2, r3, #127
 15287 0124 08301BE5 		ldr	r3, [fp, #-8]
 15288 0128 143093E5 		ldr	r3, [r3, #20]
 15289 012c 030052E1 		cmp	r2, r3
 15290 0130 0100003A 		bcc	.L970
 15291              		.loc 1 5923 5 discriminator 14
 15292 0134 0230E0E3 		mvn	r3, #2
 15293              		.loc 1 5923 5
 15294 0138 540000EA 		b	.L964
 15295              	.L970:
 15296              		.loc 1 5923 5 discriminator 15
 15297 013c 20301BE5 		ldr	r3, [fp, #-32]
 15298 0140 7F3003E2 		and	r3, r3, #127
 15299 0144 8322A0E1 		lsl	r2, r3, #5
 15300 0148 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 375


 15301 014c 0C3093E5 		ldr	r3, [r3, #12]
 15302 0150 033082E0 		add	r3, r2, r3
 15303 0154 08300BE5 		str	r3, [fp, #-8]
 15304 0158 08301BE5 		ldr	r3, [fp, #-8]
 15305 015c 0300A0E1 		mov	r0, r3
 15306 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15307 0164 0C000BE5 		str	r0, [fp, #-12]
 15308              		.loc 1 5923 5 discriminator 1
 15309 0168 0C301BE5 		ldr	r3, [fp, #-12]
 15310 016c FF3803E2 		and	r3, r3, #16711680
 15311 0170 020853E3 		cmp	r3, #131072
 15312 0174 0100001A 		bne	.L971
 15313              		.loc 1 5923 5 discriminator 16
 15314 0178 0830E0E3 		mvn	r3, #8
 15315              		.loc 1 5923 5
 15316 017c 430000EA 		b	.L964
 15317              	.L971:
 15318              		.loc 1 5923 5 discriminator 17
 15319 0180 0C301BE5 		ldr	r3, [fp, #-12]
 15320 0184 233CA0E1 		lsr	r3, r3, #24
 15321 0188 060053E3 		cmp	r3, #6
 15322 018c 0100000A 		beq	.L966
 15323              		.loc 1 5923 5 discriminator 18
 15324 0190 0130E0E3 		mvn	r3, #1
 15325              		.loc 1 5923 5
 15326 0194 3D0000EA 		b	.L964
 15327              	.L966:
5924:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5925:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5926:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_EXEC_SET);
 15328              		.loc 1 5926 5 is_stmt 1
 15329 0198 08301BE5 		ldr	r3, [fp, #-8]
 15330 019c 083093E5 		ldr	r3, [r3, #8]
 15331 01a0 013003E2 		and	r3, r3, #1
 15332 01a4 000053E3 		cmp	r3, #0
 15333 01a8 0100001A 		bne	.L972
 15334              		.loc 1 5926 5 is_stmt 0 discriminator 1
 15335 01ac 0630E0E3 		mvn	r3, #6
 15336              		.loc 1 5926 5
 15337 01b0 360000EA 		b	.L964
 15338              	.L972:
5927:../../Source/Kernel/rme_kernel.c ****     
5928:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound, and quit if it is not on our core */
5929:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 15339              		.loc 1 5929 12 is_stmt 1
 15340 01b4 08301BE5 		ldr	r3, [fp, #-8]
 15341 01b8 0C3093E5 		ldr	r3, [r3, #12]
 15342              		.loc 1 5929 11
 15343 01bc 10300BE5 		str	r3, [fp, #-16]
5930:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15344              		.loc 1 5930 10
 15345 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15346 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15347 01c8 14300BE5 		str	r3, [fp, #-20]
5931:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 15348              		.loc 1 5931 21
 15349 01cc 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 376


 15350 01d0 143093E5 		ldr	r3, [r3, #20]
 15351              		.loc 1 5931 7
 15352 01d4 14201BE5 		ldr	r2, [fp, #-20]
 15353 01d8 030052E1 		cmp	r2, r3
 15354 01dc 0100000A 		beq	.L973
5932:../../Source/Kernel/rme_kernel.c ****     {
5933:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5934:../../Source/Kernel/rme_kernel.c **** 
5935:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15355              		.loc 1 5935 16
 15356 01e0 CB30E0E3 		mvn	r3, #203
 15357 01e4 290000EA 		b	.L964
 15358              	.L973:
5936:../../Source/Kernel/rme_kernel.c ****     }
5937:../../Source/Kernel/rme_kernel.c ****     else
5938:../../Source/Kernel/rme_kernel.c ****     {
5939:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5940:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5941:../../Source/Kernel/rme_kernel.c ****     }
5942:../../Source/Kernel/rme_kernel.c ****     
5943:../../Source/Kernel/rme_kernel.c ****     /* Commit the change if both values are non-zero. If both are zero we are just
5944:../../Source/Kernel/rme_kernel.c ****      * clearing the error flag and continue from where the exception happened. */
5945:../../Source/Kernel/rme_kernel.c ****     if((Entry!=RME_NULL)&&(Stack!=RME_NULL))
 15359              		.loc 1 5945 7
 15360 01e8 24301BE5 		ldr	r3, [fp, #-36]
 15361 01ec 000053E3 		cmp	r3, #0
 15362 01f0 0C00000A 		beq	.L974
 15363              		.loc 1 5945 25 discriminator 1
 15364 01f4 04309BE5 		ldr	r3, [fp, #4]
 15365 01f8 000053E3 		cmp	r3, #0
 15366 01fc 0900000A 		beq	.L974
5946:../../Source/Kernel/rme_kernel.c ****     {
5947:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5948:../../Source/Kernel/rme_kernel.c **** 
5949:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Reg_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr),
 15367              		.loc 1 5949 28
 15368 0200 10301BE5 		ldr	r3, [fp, #-16]
 15369 0204 443093E5 		ldr	r3, [r3, #68]
 15370              		.loc 1 5949 9
 15371 0208 0201C3E3 		bic	r0, r3, #-2147483648
5950:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15372              		.loc 1 5950 59
 15373 020c 10301BE5 		ldr	r3, [fp, #-16]
 15374 0210 483093E5 		ldr	r3, [r3, #72]
5949:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15375              		.loc 1 5949 9
 15376 0214 00308DE5 		str	r3, [sp]
 15377 0218 08309BE5 		ldr	r3, [fp, #8]
 15378 021c 04209BE5 		ldr	r2, [fp, #4]
 15379 0220 24101BE5 		ldr	r1, [fp, #-36]
 15380 0224 FEFFFFEB 		bl	__RME_Thd_Reg_Init
 15381              	.L974:
5951:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5952:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Cop_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr), 
5953:../../Source/Kernel/rme_kernel.c ****                            &(Thread->Ctx.Reg->Reg),&(Thread->Ctx.Reg->Cop));
5954:../../Source/Kernel/rme_kernel.c **** #endif
5955:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 377


5956:../../Source/Kernel/rme_kernel.c ****     else
5957:../../Source/Kernel/rme_kernel.c ****     {
5958:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5959:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5960:../../Source/Kernel/rme_kernel.c ****     }
5961:../../Source/Kernel/rme_kernel.c ****     
5962:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5963:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 15382              		.loc 1 5963 5
 15383 0228 0010A0E3 		mov	r1, #0
 15384 022c 1C001BE5 		ldr	r0, [fp, #-28]
 15385 0230 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5964:../../Source/Kernel/rme_kernel.c ****     
5965:../../Source/Kernel/rme_kernel.c ****     /* Check if there is a exception pending and clear it if there is */
5966:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15386              		.loc 1 5966 21
 15387 0234 10301BE5 		ldr	r3, [fp, #-16]
 15388 0238 1C3093E5 		ldr	r3, [r3, #28]
 15389              		.loc 1 5966 7
 15390 023c 030053E3 		cmp	r3, #3
 15391 0240 1100001A 		bne	.L975
5967:../../Source/Kernel/rme_kernel.c ****     {
5968:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5969:../../Source/Kernel/rme_kernel.c ****         
5970:../../Source/Kernel/rme_kernel.c ****         /* Check if the thread still have timeslices. If yes, put it into the runqueue;
5971:../../Source/Kernel/rme_kernel.c ****          * if no, mark it as TIMEOUT and send scheduler notification to its parent. */
5972:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice!=0U)
 15392              		.loc 1 5972 25
 15393 0244 10301BE5 		ldr	r3, [fp, #-16]
 15394 0248 183093E5 		ldr	r3, [r3, #24]
 15395              		.loc 1 5972 11
 15396 024c 000053E3 		cmp	r3, #0
 15397 0250 0500000A 		beq	.L976
5973:../../Source/Kernel/rme_kernel.c ****         {
5974:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5975:../../Source/Kernel/rme_kernel.c ****             
5976:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
5977:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_READY;
 15398              		.loc 1 5977 32
 15399 0254 10301BE5 		ldr	r3, [fp, #-16]
 15400 0258 0020A0E3 		mov	r2, #0
 15401 025c 1C2083E5 		str	r2, [r3, #28]
5978:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread);
 15402              		.loc 1 5978 13
 15403 0260 10001BE5 		ldr	r0, [fp, #-16]
 15404 0264 FEFFFFEB 		bl	_RME_Run_Ins
 15405 0268 040000EA 		b	.L977
 15406              	.L976:
5979:../../Source/Kernel/rme_kernel.c ****         }
5980:../../Source/Kernel/rme_kernel.c ****         else
5981:../../Source/Kernel/rme_kernel.c ****         {
5982:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5983:../../Source/Kernel/rme_kernel.c ****             
5984:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
5985:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_TIMEOUT;
 15407              		.loc 1 5985 32
 15408 026c 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 378


 15409 0270 0220A0E3 		mov	r2, #2
 15410 0274 1C2083E5 		str	r2, [r3, #28]
5986:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thread);
 15411              		.loc 1 5986 13
 15412 0278 10001BE5 		ldr	r0, [fp, #-16]
 15413 027c FEFFFFEB 		bl	_RME_Run_Notif
 15414              	.L977:
5987:../../Source/Kernel/rme_kernel.c ****         }
5988:../../Source/Kernel/rme_kernel.c ****         
5989:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread because something unblocked */
5990:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 15415              		.loc 1 5990 9
 15416 0280 14101BE5 		ldr	r1, [fp, #-20]
 15417 0284 1C001BE5 		ldr	r0, [fp, #-28]
 15418 0288 FEFFFFEB 		bl	_RME_Kern_High
 15419              	.L975:
5991:../../Source/Kernel/rme_kernel.c ****     }
5992:../../Source/Kernel/rme_kernel.c ****     else
5993:../../Source/Kernel/rme_kernel.c ****     {
5994:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5995:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5996:../../Source/Kernel/rme_kernel.c ****     }
5997:../../Source/Kernel/rme_kernel.c ****     
5998:../../Source/Kernel/rme_kernel.c ****     return 0;
 15420              		.loc 1 5998 12
 15421 028c 0030A0E3 		mov	r3, #0
 15422              	.L964:
5999:../../Source/Kernel/rme_kernel.c **** }
 15423              		.loc 1 5999 1
 15424 0290 0300A0E1 		mov	r0, r3
 15425 0294 04D04BE2 		sub	sp, fp, #4
 15426              		.cfi_def_cfa 13, 8
 15427              		@ sp needed
 15428 0298 0088BDE8 		pop	{fp, pc}
 15429              		.cfi_endproc
 15430              	.LFE60:
 15432              		.section	.text._RME_Thd_Sched_Prio,"ax",%progbits
 15433              		.align	2
 15434              		.syntax unified
 15435              		.arm
 15437              	_RME_Thd_Sched_Prio:
 15438              	.LFB61:
6000:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Exec_Set ********************************************/
6001:../../Source/Kernel/rme_kernel.c **** 
6002:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Prio ***********************************************
6003:../../Source/Kernel/rme_kernel.c **** Description : Change a thread's priority level. This can only be called from
6004:../../Source/Kernel/rme_kernel.c ****               the core that have the thread bound. To facilitate scheduling,
6005:../../Source/Kernel/rme_kernel.c ****               this system call allows up to 3 thread's priority changes per
6006:../../Source/Kernel/rme_kernel.c ****               call. This system call can cause a potential context switch.
6007:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
6008:../../Source/Kernel/rme_kernel.c ****               priority. 
6009:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6010:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6011:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Number - The number of threads to adjust priority.
6012:../../Source/Kernel/rme_kernel.c ****                                  Allowed values are 1, 2 and 3.
6013:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd0 - The capability to the first thread.
6014:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 379


6015:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio0 - The priority level, higher is more critical.
6016:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd1 - The capability to the second thread.
6017:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6018:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio1 - The priority level, higher is more critical.
6019:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd2 - The capability to the third thread.
6020:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6021:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio2 - The priority level, higher is more critical.
6022:../../Source/Kernel/rme_kernel.c **** Output      : None.
6023:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6024:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6025:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Prio(struct RME_Cap_Cpt* Cpt,
6026:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
6027:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Number,
6028:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd0,
6029:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio0,
6030:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd1,
6031:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio1,
6032:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd2,
6033:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio2)
6034:../../Source/Kernel/rme_kernel.c **** {
 15439              		.loc 1 6034 1
 15440              		.cfi_startproc
 15441              		@ args = 20, pretend = 0, frame = 80
 15442              		@ frame_needed = 1, uses_anonymous_args = 0
 15443 0000 00482DE9 		push	{fp, lr}
 15444              		.cfi_def_cfa_offset 8
 15445              		.cfi_offset 11, -8
 15446              		.cfi_offset 14, -4
 15447 0004 04B08DE2 		add	fp, sp, #4
 15448              		.cfi_def_cfa 11, 4
 15449 0008 50D04DE2 		sub	sp, sp, #80
 15450 000c 48000BE5 		str	r0, [fp, #-72]
 15451 0010 4C100BE5 		str	r1, [fp, #-76]
 15452 0014 50200BE5 		str	r2, [fp, #-80]
 15453 0018 54300BE5 		str	r3, [fp, #-84]
6035:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
6036:../../Source/Kernel/rme_kernel.c ****     rme_cid_t Cap_Thd[3];
6037:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio[3];
6038:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op[3];
6039:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread[3];
6040:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6041:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6042:../../Source/Kernel/rme_kernel.c ****     
6043:../../Source/Kernel/rme_kernel.c ****     /* Check parameter validity */
6044:../../Source/Kernel/rme_kernel.c ****     if((Number==0U)||(Number>3U))
 15454              		.loc 1 6044 7
 15455 001c 50301BE5 		ldr	r3, [fp, #-80]
 15456 0020 000053E3 		cmp	r3, #0
 15457 0024 0200000A 		beq	.L979
 15458              		.loc 1 6044 20 discriminator 1
 15459 0028 50301BE5 		ldr	r3, [fp, #-80]
 15460 002c 030053E3 		cmp	r3, #3
 15461 0030 0100009A 		bls	.L980
 15462              	.L979:
6045:../../Source/Kernel/rme_kernel.c ****     {
6046:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6047:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 380


6048:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15463              		.loc 1 6048 16
 15464 0034 CB30E0E3 		mvn	r3, #203
 15465 0038 260100EA 		b	.L1000
 15466              	.L980:
6049:../../Source/Kernel/rme_kernel.c ****     }
6050:../../Source/Kernel/rme_kernel.c ****     
6051:../../Source/Kernel/rme_kernel.c ****     /* We'll use arrays in the next */
6052:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[0]=Cap_Thd0;
 15467              		.loc 1 6052 15
 15468 003c 54301BE5 		ldr	r3, [fp, #-84]
 15469 0040 1C300BE5 		str	r3, [fp, #-28]
6053:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[1]=Cap_Thd1;
 15470              		.loc 1 6053 15
 15471 0044 08309BE5 		ldr	r3, [fp, #8]
 15472 0048 18300BE5 		str	r3, [fp, #-24]
6054:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[2]=Cap_Thd2;
 15473              		.loc 1 6054 15
 15474 004c 10309BE5 		ldr	r3, [fp, #16]
 15475 0050 14300BE5 		str	r3, [fp, #-20]
6055:../../Source/Kernel/rme_kernel.c ****     Prio[0]=Prio0;
 15476              		.loc 1 6055 12
 15477 0054 04309BE5 		ldr	r3, [fp, #4]
 15478 0058 28300BE5 		str	r3, [fp, #-40]
6056:../../Source/Kernel/rme_kernel.c ****     Prio[1]=Prio1;
 15479              		.loc 1 6056 12
 15480 005c 0C309BE5 		ldr	r3, [fp, #12]
 15481 0060 24300BE5 		str	r3, [fp, #-36]
6057:../../Source/Kernel/rme_kernel.c ****     Prio[2]=Prio2;
 15482              		.loc 1 6057 12
 15483 0064 14309BE5 		ldr	r3, [fp, #20]
 15484 0068 20300BE5 		str	r3, [fp, #-32]
6058:../../Source/Kernel/rme_kernel.c **** 
6059:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15485              		.loc 1 6059 10
 15486 006c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15487 0070 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15488 0074 0C300BE5 		str	r3, [fp, #-12]
6060:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15489              		.loc 1 6060 14
 15490 0078 0030A0E3 		mov	r3, #0
 15491 007c 08300BE5 		str	r3, [fp, #-8]
 15492              		.loc 1 6060 5
 15493 0080 D20000EA 		b	.L982
 15494              	.L995:
6061:../../Source/Kernel/rme_kernel.c ****     {
6062:../../Source/Kernel/rme_kernel.c ****         /* Get the capability slot */
6063:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd[Count],RME_CAP_TYPE_THD,
 15495              		.loc 1 6063 9
 15496 0084 08301BE5 		ldr	r3, [fp, #-8]
 15497 0088 0331A0E1 		lsl	r3, r3, #2
 15498 008c 043043E2 		sub	r3, r3, #4
 15499 0090 0B3083E0 		add	r3, r3, fp
 15500 0094 183013E5 		ldr	r3, [r3, #-24]
 15501 0098 803003E2 		and	r3, r3, #128
 15502 009c 000053E3 		cmp	r3, #0
 15503 00a0 2E00001A 		bne	.L983
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 381


 15504              		.loc 1 6063 9 is_stmt 0 discriminator 1
 15505 00a4 08301BE5 		ldr	r3, [fp, #-8]
 15506 00a8 0331A0E1 		lsl	r3, r3, #2
 15507 00ac 043043E2 		sub	r3, r3, #4
 15508 00b0 0B3083E0 		add	r3, r3, fp
 15509 00b4 183013E5 		ldr	r3, [r3, #-24]
 15510 00b8 0320A0E1 		mov	r2, r3
 15511 00bc 48301BE5 		ldr	r3, [fp, #-72]
 15512 00c0 143093E5 		ldr	r3, [r3, #20]
 15513 00c4 030052E1 		cmp	r2, r3
 15514 00c8 0100003A 		bcc	.L984
 15515              		.loc 1 6063 9 discriminator 3
 15516 00cc 0230E0E3 		mvn	r3, #2
 15517              		.loc 1 6063 9
 15518 00d0 000100EA 		b	.L1000
 15519              	.L984:
 15520              		.loc 1 6063 9 discriminator 4
 15521 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15522 00d8 0331A0E1 		lsl	r3, r3, #2
 15523 00dc 043043E2 		sub	r3, r3, #4
 15524 00e0 0B3083E0 		add	r3, r3, fp
 15525 00e4 183013E5 		ldr	r3, [r3, #-24]
 15526 00e8 8322A0E1 		lsl	r2, r3, #5
 15527 00ec 48301BE5 		ldr	r3, [fp, #-72]
 15528 00f0 0C3093E5 		ldr	r3, [r3, #12]
 15529 00f4 033082E0 		add	r3, r2, r3
 15530 00f8 0320A0E1 		mov	r2, r3
 15531 00fc 08301BE5 		ldr	r3, [fp, #-8]
 15532 0100 0331A0E1 		lsl	r3, r3, #2
 15533 0104 043043E2 		sub	r3, r3, #4
 15534 0108 0B3083E0 		add	r3, r3, fp
 15535 010c 302003E5 		str	r2, [r3, #-48]
 15536 0110 08301BE5 		ldr	r3, [fp, #-8]
 15537 0114 0331A0E1 		lsl	r3, r3, #2
 15538 0118 043043E2 		sub	r3, r3, #4
 15539 011c 0B3083E0 		add	r3, r3, fp
 15540 0120 303013E5 		ldr	r3, [r3, #-48]
 15541 0124 0300A0E1 		mov	r0, r3
 15542 0128 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15543 012c 10000BE5 		str	r0, [fp, #-16]
 15544              		.loc 1 6063 9 discriminator 1
 15545 0130 10301BE5 		ldr	r3, [fp, #-16]
 15546 0134 FF3803E2 		and	r3, r3, #16711680
 15547 0138 020853E3 		cmp	r3, #131072
 15548 013c 0100001A 		bne	.L985
 15549              		.loc 1 6063 9 discriminator 5
 15550 0140 0830E0E3 		mvn	r3, #8
 15551              		.loc 1 6063 9
 15552 0144 E30000EA 		b	.L1000
 15553              	.L985:
 15554              		.loc 1 6063 9 discriminator 6
 15555 0148 10301BE5 		ldr	r3, [fp, #-16]
 15556 014c 233CA0E1 		lsr	r3, r3, #24
 15557 0150 060053E3 		cmp	r3, #6
 15558 0154 6900000A 		beq	.L986
 15559              		.loc 1 6063 9 discriminator 7
 15560 0158 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 382


 15561              		.loc 1 6063 9
 15562 015c DD0000EA 		b	.L1000
 15563              	.L983:
 15564              		.loc 1 6063 9 discriminator 2
 15565 0160 08301BE5 		ldr	r3, [fp, #-8]
 15566 0164 0331A0E1 		lsl	r3, r3, #2
 15567 0168 043043E2 		sub	r3, r3, #4
 15568 016c 0B3083E0 		add	r3, r3, fp
 15569 0170 183013E5 		ldr	r3, [r3, #-24]
 15570 0174 2324A0E1 		lsr	r2, r3, #8
 15571 0178 48301BE5 		ldr	r3, [fp, #-72]
 15572 017c 143093E5 		ldr	r3, [r3, #20]
 15573 0180 030052E1 		cmp	r2, r3
 15574 0184 0100003A 		bcc	.L987
 15575              		.loc 1 6063 9 discriminator 8
 15576 0188 0230E0E3 		mvn	r3, #2
 15577              		.loc 1 6063 9
 15578 018c D10000EA 		b	.L1000
 15579              	.L987:
 15580              		.loc 1 6063 9 discriminator 9
 15581 0190 08301BE5 		ldr	r3, [fp, #-8]
 15582 0194 0331A0E1 		lsl	r3, r3, #2
 15583 0198 043043E2 		sub	r3, r3, #4
 15584 019c 0B3083E0 		add	r3, r3, fp
 15585 01a0 183013E5 		ldr	r3, [r3, #-24]
 15586 01a4 2334A0E1 		lsr	r3, r3, #8
 15587 01a8 8322A0E1 		lsl	r2, r3, #5
 15588 01ac 48301BE5 		ldr	r3, [fp, #-72]
 15589 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15590 01b4 033082E0 		add	r3, r2, r3
 15591 01b8 0320A0E1 		mov	r2, r3
 15592 01bc 08301BE5 		ldr	r3, [fp, #-8]
 15593 01c0 0331A0E1 		lsl	r3, r3, #2
 15594 01c4 043043E2 		sub	r3, r3, #4
 15595 01c8 0B3083E0 		add	r3, r3, fp
 15596 01cc 302003E5 		str	r2, [r3, #-48]
 15597 01d0 08301BE5 		ldr	r3, [fp, #-8]
 15598 01d4 0331A0E1 		lsl	r3, r3, #2
 15599 01d8 043043E2 		sub	r3, r3, #4
 15600 01dc 0B3083E0 		add	r3, r3, fp
 15601 01e0 303013E5 		ldr	r3, [r3, #-48]
 15602 01e4 0300A0E1 		mov	r0, r3
 15603 01e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15604 01ec 10000BE5 		str	r0, [fp, #-16]
 15605              		.loc 1 6063 9 discriminator 1
 15606 01f0 10301BE5 		ldr	r3, [fp, #-16]
 15607 01f4 FF3803E2 		and	r3, r3, #16711680
 15608 01f8 020853E3 		cmp	r3, #131072
 15609 01fc 0100001A 		bne	.L988
 15610              		.loc 1 6063 9 discriminator 10
 15611 0200 0830E0E3 		mvn	r3, #8
 15612              		.loc 1 6063 9
 15613 0204 B30000EA 		b	.L1000
 15614              	.L988:
 15615              		.loc 1 6063 9 discriminator 11
 15616 0208 10301BE5 		ldr	r3, [fp, #-16]
 15617 020c 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 383


 15618 0210 030053E3 		cmp	r3, #3
 15619 0214 0100000A 		beq	.L989
 15620              		.loc 1 6063 9 discriminator 12
 15621 0218 0130E0E3 		mvn	r3, #1
 15622              		.loc 1 6063 9
 15623 021c AD0000EA 		b	.L1000
 15624              	.L989:
 15625              		.loc 1 6063 9 discriminator 13
 15626 0220 08301BE5 		ldr	r3, [fp, #-8]
 15627 0224 0331A0E1 		lsl	r3, r3, #2
 15628 0228 043043E2 		sub	r3, r3, #4
 15629 022c 0B3083E0 		add	r3, r3, fp
 15630 0230 183013E5 		ldr	r3, [r3, #-24]
 15631 0234 7F2003E2 		and	r2, r3, #127
 15632 0238 08301BE5 		ldr	r3, [fp, #-8]
 15633 023c 0331A0E1 		lsl	r3, r3, #2
 15634 0240 043043E2 		sub	r3, r3, #4
 15635 0244 0B3083E0 		add	r3, r3, fp
 15636 0248 303013E5 		ldr	r3, [r3, #-48]
 15637 024c 143093E5 		ldr	r3, [r3, #20]
 15638 0250 030052E1 		cmp	r2, r3
 15639 0254 0100003A 		bcc	.L990
 15640              		.loc 1 6063 9 discriminator 14
 15641 0258 0230E0E3 		mvn	r3, #2
 15642              		.loc 1 6063 9
 15643 025c 9D0000EA 		b	.L1000
 15644              	.L990:
 15645              		.loc 1 6063 9 discriminator 15
 15646 0260 08301BE5 		ldr	r3, [fp, #-8]
 15647 0264 0331A0E1 		lsl	r3, r3, #2
 15648 0268 043043E2 		sub	r3, r3, #4
 15649 026c 0B3083E0 		add	r3, r3, fp
 15650 0270 183013E5 		ldr	r3, [r3, #-24]
 15651 0274 7F3003E2 		and	r3, r3, #127
 15652 0278 8322A0E1 		lsl	r2, r3, #5
 15653 027c 08301BE5 		ldr	r3, [fp, #-8]
 15654 0280 0331A0E1 		lsl	r3, r3, #2
 15655 0284 043043E2 		sub	r3, r3, #4
 15656 0288 0B3083E0 		add	r3, r3, fp
 15657 028c 303013E5 		ldr	r3, [r3, #-48]
 15658 0290 0C3093E5 		ldr	r3, [r3, #12]
 15659 0294 033082E0 		add	r3, r2, r3
 15660 0298 0320A0E1 		mov	r2, r3
 15661 029c 08301BE5 		ldr	r3, [fp, #-8]
 15662 02a0 0331A0E1 		lsl	r3, r3, #2
 15663 02a4 043043E2 		sub	r3, r3, #4
 15664 02a8 0B3083E0 		add	r3, r3, fp
 15665 02ac 302003E5 		str	r2, [r3, #-48]
 15666 02b0 08301BE5 		ldr	r3, [fp, #-8]
 15667 02b4 0331A0E1 		lsl	r3, r3, #2
 15668 02b8 043043E2 		sub	r3, r3, #4
 15669 02bc 0B3083E0 		add	r3, r3, fp
 15670 02c0 303013E5 		ldr	r3, [r3, #-48]
 15671 02c4 0300A0E1 		mov	r0, r3
 15672 02c8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15673 02cc 10000BE5 		str	r0, [fp, #-16]
 15674              		.loc 1 6063 9 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 384


 15675 02d0 10301BE5 		ldr	r3, [fp, #-16]
 15676 02d4 FF3803E2 		and	r3, r3, #16711680
 15677 02d8 020853E3 		cmp	r3, #131072
 15678 02dc 0100001A 		bne	.L991
 15679              		.loc 1 6063 9 discriminator 16
 15680 02e0 0830E0E3 		mvn	r3, #8
 15681              		.loc 1 6063 9
 15682 02e4 7B0000EA 		b	.L1000
 15683              	.L991:
 15684              		.loc 1 6063 9 discriminator 17
 15685 02e8 10301BE5 		ldr	r3, [fp, #-16]
 15686 02ec 233CA0E1 		lsr	r3, r3, #24
 15687 02f0 060053E3 		cmp	r3, #6
 15688 02f4 0100000A 		beq	.L986
 15689              		.loc 1 6063 9 discriminator 18
 15690 02f8 0130E0E3 		mvn	r3, #1
 15691              		.loc 1 6063 9
 15692 02fc 750000EA 		b	.L1000
 15693              	.L986:
6064:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Op[Count],Type_Stat);
6065:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6066:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Op[Count],RME_THD_FLAG_SCHED_PRIO);
 15694              		.loc 1 6066 9 is_stmt 1
 15695 0300 08301BE5 		ldr	r3, [fp, #-8]
 15696 0304 0331A0E1 		lsl	r3, r3, #2
 15697 0308 043043E2 		sub	r3, r3, #4
 15698 030c 0B3083E0 		add	r3, r3, fp
 15699 0310 303013E5 		ldr	r3, [r3, #-48]
 15700 0314 083093E5 		ldr	r3, [r3, #8]
 15701 0318 083003E2 		and	r3, r3, #8
 15702 031c 000053E3 		cmp	r3, #0
 15703 0320 0100001A 		bne	.L992
 15704              		.loc 1 6066 9 is_stmt 0 discriminator 1
 15705 0324 0630E0E3 		mvn	r3, #6
 15706              		.loc 1 6066 9
 15707 0328 6A0000EA 		b	.L1000
 15708              	.L992:
6067:../../Source/Kernel/rme_kernel.c ****         
6068:../../Source/Kernel/rme_kernel.c ****         /* See if the target thread is already bound to this core. If no, we just quit */
6069:../../Source/Kernel/rme_kernel.c ****         Thread[Count]=(struct RME_Thd_Struct*)(Thd_Op[Count]->Head.Object);
 15709              		.loc 1 6069 54 is_stmt 1
 15710 032c 08301BE5 		ldr	r3, [fp, #-8]
 15711 0330 0331A0E1 		lsl	r3, r3, #2
 15712 0334 043043E2 		sub	r3, r3, #4
 15713 0338 0B3083E0 		add	r3, r3, fp
 15714 033c 303013E5 		ldr	r3, [r3, #-48]
 15715              		.loc 1 6069 67
 15716 0340 0C3093E5 		ldr	r3, [r3, #12]
 15717              		.loc 1 6069 23
 15718 0344 0320A0E1 		mov	r2, r3
 15719              		.loc 1 6069 22
 15720 0348 08301BE5 		ldr	r3, [fp, #-8]
 15721 034c 0331A0E1 		lsl	r3, r3, #2
 15722 0350 043043E2 		sub	r3, r3, #4
 15723 0354 0B3083E0 		add	r3, r3, fp
 15724 0358 3C2003E5 		str	r2, [r3, #-60]
6070:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Local!=Local)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 385


 15725              		.loc 1 6070 18
 15726 035c 08301BE5 		ldr	r3, [fp, #-8]
 15727 0360 0331A0E1 		lsl	r3, r3, #2
 15728 0364 043043E2 		sub	r3, r3, #4
 15729 0368 0B3083E0 		add	r3, r3, fp
 15730 036c 3C3013E5 		ldr	r3, [r3, #-60]
 15731              		.loc 1 6070 32
 15732 0370 143093E5 		ldr	r3, [r3, #20]
 15733              		.loc 1 6070 11
 15734 0374 0C201BE5 		ldr	r2, [fp, #-12]
 15735 0378 030052E1 		cmp	r2, r3
 15736 037c 0100000A 		beq	.L993
6071:../../Source/Kernel/rme_kernel.c ****         {
6072:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6073:../../Source/Kernel/rme_kernel.c **** 
6074:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 15737              		.loc 1 6074 20
 15738 0380 CB30E0E3 		mvn	r3, #203
 15739 0384 530000EA 		b	.L1000
 15740              	.L993:
6075:../../Source/Kernel/rme_kernel.c ****         }
6076:../../Source/Kernel/rme_kernel.c ****         else
6077:../../Source/Kernel/rme_kernel.c ****         {
6078:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6079:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6080:../../Source/Kernel/rme_kernel.c ****         }
6081:../../Source/Kernel/rme_kernel.c ****         
6082:../../Source/Kernel/rme_kernel.c ****         /* See if the priority relationship is correct */
6083:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Prio_Max<Prio[Count])
 15741              		.loc 1 6083 18
 15742 0388 08301BE5 		ldr	r3, [fp, #-8]
 15743 038c 0331A0E1 		lsl	r3, r3, #2
 15744 0390 043043E2 		sub	r3, r3, #4
 15745 0394 0B3083E0 		add	r3, r3, fp
 15746 0398 3C3013E5 		ldr	r3, [r3, #-60]
 15747              		.loc 1 6083 32
 15748 039c 242093E5 		ldr	r2, [r3, #36]
 15749              		.loc 1 6083 46
 15750 03a0 08301BE5 		ldr	r3, [fp, #-8]
 15751 03a4 0331A0E1 		lsl	r3, r3, #2
 15752 03a8 043043E2 		sub	r3, r3, #4
 15753 03ac 0B3083E0 		add	r3, r3, fp
 15754 03b0 243013E5 		ldr	r3, [r3, #-36]
 15755              		.loc 1 6083 11
 15756 03b4 030052E1 		cmp	r2, r3
 15757 03b8 0100002A 		bcs	.L994
6084:../../Source/Kernel/rme_kernel.c ****         {
6085:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6086:../../Source/Kernel/rme_kernel.c **** 
6087:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 15758              		.loc 1 6087 20
 15759 03bc CC30E0E3 		mvn	r3, #204
 15760 03c0 440000EA 		b	.L1000
 15761              	.L994:
6060:../../Source/Kernel/rme_kernel.c ****     {
 15762              		.loc 1 6060 36 discriminator 2
 15763 03c4 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 386


 15764 03c8 013083E2 		add	r3, r3, #1
 15765 03cc 08300BE5 		str	r3, [fp, #-8]
 15766              	.L982:
6060:../../Source/Kernel/rme_kernel.c ****     {
 15767              		.loc 1 6060 23 discriminator 1
 15768 03d0 08201BE5 		ldr	r2, [fp, #-8]
 15769 03d4 50301BE5 		ldr	r3, [fp, #-80]
 15770 03d8 030052E1 		cmp	r2, r3
 15771 03dc 28FFFF3A 		bcc	.L995
6088:../../Source/Kernel/rme_kernel.c ****         }
6089:../../Source/Kernel/rme_kernel.c ****         else
6090:../../Source/Kernel/rme_kernel.c ****         {
6091:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6092:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6093:../../Source/Kernel/rme_kernel.c ****         }
6094:../../Source/Kernel/rme_kernel.c ****     }
6095:../../Source/Kernel/rme_kernel.c ****     
6096:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6097:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 15772              		.loc 1 6097 5
 15773 03e0 0010A0E3 		mov	r1, #0
 15774 03e4 4C001BE5 		ldr	r0, [fp, #-76]
 15775 03e8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6098:../../Source/Kernel/rme_kernel.c ****     
6099:../../Source/Kernel/rme_kernel.c ****     /* Change priority for each thread, and we'll switch to the real highest priority
6100:../../Source/Kernel/rme_kernel.c ****      * thread after all these changes. This can help remove the excessive overhead. */
6101:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15776              		.loc 1 6101 14
 15777 03ec 0030A0E3 		mov	r3, #0
 15778 03f0 08300BE5 		str	r3, [fp, #-8]
 15779              		.loc 1 6101 5
 15780 03f4 2F0000EA 		b	.L996
 15781              	.L999:
6102:../../Source/Kernel/rme_kernel.c ****     {
6103:../../Source/Kernel/rme_kernel.c ****         /* See if this thread is currently in the runqueue */
6104:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.State==RME_THD_READY)
 15782              		.loc 1 6104 18
 15783 03f8 08301BE5 		ldr	r3, [fp, #-8]
 15784 03fc 0331A0E1 		lsl	r3, r3, #2
 15785 0400 043043E2 		sub	r3, r3, #4
 15786 0404 0B3083E0 		add	r3, r3, fp
 15787 0408 3C3013E5 		ldr	r3, [r3, #-60]
 15788              		.loc 1 6104 32
 15789 040c 1C3093E5 		ldr	r3, [r3, #28]
 15790              		.loc 1 6104 11
 15791 0410 000053E3 		cmp	r3, #0
 15792 0414 1900001A 		bne	.L997
6105:../../Source/Kernel/rme_kernel.c ****         {
6106:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6107:../../Source/Kernel/rme_kernel.c **** 
6108:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue, change priority, and add it back */
6109:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thread[Count]);
 15793              		.loc 1 6109 13
 15794 0418 08301BE5 		ldr	r3, [fp, #-8]
 15795 041c 0331A0E1 		lsl	r3, r3, #2
 15796 0420 043043E2 		sub	r3, r3, #4
 15797 0424 0B3083E0 		add	r3, r3, fp
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 387


 15798 0428 3C3013E5 		ldr	r3, [r3, #-60]
 15799 042c 0300A0E1 		mov	r0, r3
 15800 0430 FEFFFFEB 		bl	_RME_Run_Del
6110:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15801              		.loc 1 6110 19
 15802 0434 08301BE5 		ldr	r3, [fp, #-8]
 15803 0438 0331A0E1 		lsl	r3, r3, #2
 15804 043c 043043E2 		sub	r3, r3, #4
 15805 0440 0B3083E0 		add	r3, r3, fp
 15806 0444 3C2013E5 		ldr	r2, [r3, #-60]
 15807              		.loc 1 6110 43
 15808 0448 08301BE5 		ldr	r3, [fp, #-8]
 15809 044c 0331A0E1 		lsl	r3, r3, #2
 15810 0450 043043E2 		sub	r3, r3, #4
 15811 0454 0B3083E0 		add	r3, r3, fp
 15812 0458 243013E5 		ldr	r3, [r3, #-36]
 15813              		.loc 1 6110 38
 15814 045c 203082E5 		str	r3, [r2, #32]
6111:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread[Count]);
 15815              		.loc 1 6111 13
 15816 0460 08301BE5 		ldr	r3, [fp, #-8]
 15817 0464 0331A0E1 		lsl	r3, r3, #2
 15818 0468 043043E2 		sub	r3, r3, #4
 15819 046c 0B3083E0 		add	r3, r3, fp
 15820 0470 3C3013E5 		ldr	r3, [r3, #-60]
 15821 0474 0300A0E1 		mov	r0, r3
 15822 0478 FEFFFFEB 		bl	_RME_Run_Ins
 15823 047c 0A0000EA 		b	.L998
 15824              	.L997:
6112:../../Source/Kernel/rme_kernel.c ****         }
6113:../../Source/Kernel/rme_kernel.c ****         /* If it is BLOCKED, TIMEOUT or EXCPEND, changing the number will suffice */
6114:../../Source/Kernel/rme_kernel.c ****         else
6115:../../Source/Kernel/rme_kernel.c ****         {
6116:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6117:../../Source/Kernel/rme_kernel.c **** 
6118:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15825              		.loc 1 6118 19
 15826 0480 08301BE5 		ldr	r3, [fp, #-8]
 15827 0484 0331A0E1 		lsl	r3, r3, #2
 15828 0488 043043E2 		sub	r3, r3, #4
 15829 048c 0B3083E0 		add	r3, r3, fp
 15830 0490 3C2013E5 		ldr	r2, [r3, #-60]
 15831              		.loc 1 6118 43
 15832 0494 08301BE5 		ldr	r3, [fp, #-8]
 15833 0498 0331A0E1 		lsl	r3, r3, #2
 15834 049c 043043E2 		sub	r3, r3, #4
 15835 04a0 0B3083E0 		add	r3, r3, fp
 15836 04a4 243013E5 		ldr	r3, [r3, #-36]
 15837              		.loc 1 6118 38
 15838 04a8 203082E5 		str	r3, [r2, #32]
 15839              	.L998:
6101:../../Source/Kernel/rme_kernel.c ****     {
 15840              		.loc 1 6101 36 discriminator 2
 15841 04ac 08301BE5 		ldr	r3, [fp, #-8]
 15842 04b0 013083E2 		add	r3, r3, #1
 15843 04b4 08300BE5 		str	r3, [fp, #-8]
 15844              	.L996:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 388


6101:../../Source/Kernel/rme_kernel.c ****     {
 15845              		.loc 1 6101 23 discriminator 1
 15846 04b8 08201BE5 		ldr	r2, [fp, #-8]
 15847 04bc 50301BE5 		ldr	r3, [fp, #-80]
 15848 04c0 030052E1 		cmp	r2, r3
 15849 04c4 CBFFFF3A 		bcc	.L999
6119:../../Source/Kernel/rme_kernel.c ****         }
6120:../../Source/Kernel/rme_kernel.c ****     }
6121:../../Source/Kernel/rme_kernel.c ****     
6122:../../Source/Kernel/rme_kernel.c ****     /* Pick the current highest priority thread to run */
6123:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 15850              		.loc 1 6123 5
 15851 04c8 0C101BE5 		ldr	r1, [fp, #-12]
 15852 04cc 4C001BE5 		ldr	r0, [fp, #-76]
 15853 04d0 FEFFFFEB 		bl	_RME_Kern_High
6124:../../Source/Kernel/rme_kernel.c **** 
6125:../../Source/Kernel/rme_kernel.c ****     return 0;
 15854              		.loc 1 6125 12
 15855 04d4 0030A0E3 		mov	r3, #0
 15856              	.L1000:
6126:../../Source/Kernel/rme_kernel.c **** }
 15857              		.loc 1 6126 1
 15858 04d8 0300A0E1 		mov	r0, r3
 15859 04dc 04D04BE2 		sub	sp, fp, #4
 15860              		.cfi_def_cfa 13, 8
 15861              		@ sp needed
 15862 04e0 0088BDE8 		pop	{fp, pc}
 15863              		.cfi_endproc
 15864              	.LFE61:
 15866              		.section	.text._RME_Thd_Sched_Rcv,"ax",%progbits
 15867              		.align	2
 15868              		.syntax unified
 15869              		.arm
 15871              	_RME_Thd_Sched_Rcv:
 15872              	.LFB62:
6127:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Prio ******************************************/
6128:../../Source/Kernel/rme_kernel.c **** 
6129:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Rcv ************************************************
6130:../../Source/Kernel/rme_kernel.c **** Description : Try to receive a notification from the scheduler queue. This
6131:../../Source/Kernel/rme_kernel.c ****               can only be called from the same core the thread is on.
6132:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6133:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the scheduler thread. We
6134:../../Source/Kernel/rme_kernel.c ****                                   are going to get timeout or exception
6135:../../Source/Kernel/rme_kernel.c ****                                   notifications for the threads that it is
6136:../../Source/Kernel/rme_kernel.c ****                                   responsible for scheduling. This capability
6137:../../Source/Kernel/rme_kernel.c ****                                   must point to a thread on the same core.
6138:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6139:../../Source/Kernel/rme_kernel.c **** Output      : None.
6140:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the thread ID; or an error code.
6141:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6142:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Rcv(struct RME_Cap_Cpt* Cpt,
6143:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd)
6144:../../Source/Kernel/rme_kernel.c **** {
 15873              		.loc 1 6144 1
 15874              		.cfi_startproc
 15875              		@ args = 0, pretend = 0, frame = 32
 15876              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 389


 15877 0000 00482DE9 		push	{fp, lr}
 15878              		.cfi_def_cfa_offset 8
 15879              		.cfi_offset 11, -8
 15880              		.cfi_offset 14, -4
 15881 0004 04B08DE2 		add	fp, sp, #4
 15882              		.cfi_def_cfa 11, 4
 15883 0008 20D04DE2 		sub	sp, sp, #32
 15884 000c 20000BE5 		str	r0, [fp, #-32]
 15885 0010 24100BE5 		str	r1, [fp, #-36]
6145:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
6146:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
6147:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
6148:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6149:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag;
6150:../../Source/Kernel/rme_kernel.c ****     
6151:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6152:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15886              		.loc 1 6152 5
 15887 0014 24301BE5 		ldr	r3, [fp, #-36]
 15888 0018 803003E2 		and	r3, r3, #128
 15889 001c 000053E3 		cmp	r3, #0
 15890 0020 1C00001A 		bne	.L1002
 15891              		.loc 1 6152 5 is_stmt 0 discriminator 1
 15892 0024 20301BE5 		ldr	r3, [fp, #-32]
 15893 0028 142093E5 		ldr	r2, [r3, #20]
 15894 002c 24301BE5 		ldr	r3, [fp, #-36]
 15895 0030 030052E1 		cmp	r2, r3
 15896 0034 0100008A 		bhi	.L1003
 15897              		.loc 1 6152 5 discriminator 3
 15898 0038 0230E0E3 		mvn	r3, #2
 15899              		.loc 1 6152 5
 15900 003c 970000EA 		b	.L1004
 15901              	.L1003:
 15902              		.loc 1 6152 5 discriminator 4
 15903 0040 24301BE5 		ldr	r3, [fp, #-36]
 15904 0044 8322A0E1 		lsl	r2, r3, #5
 15905 0048 20301BE5 		ldr	r3, [fp, #-32]
 15906 004c 0C3093E5 		ldr	r3, [r3, #12]
 15907 0050 033082E0 		add	r3, r2, r3
 15908 0054 08300BE5 		str	r3, [fp, #-8]
 15909 0058 08301BE5 		ldr	r3, [fp, #-8]
 15910 005c 0300A0E1 		mov	r0, r3
 15911 0060 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15912 0064 10000BE5 		str	r0, [fp, #-16]
 15913              		.loc 1 6152 5 discriminator 1
 15914 0068 10301BE5 		ldr	r3, [fp, #-16]
 15915 006c FF3803E2 		and	r3, r3, #16711680
 15916 0070 020853E3 		cmp	r3, #131072
 15917 0074 0100001A 		bne	.L1005
 15918              		.loc 1 6152 5 discriminator 5
 15919 0078 0830E0E3 		mvn	r3, #8
 15920              		.loc 1 6152 5
 15921 007c 870000EA 		b	.L1004
 15922              	.L1005:
 15923              		.loc 1 6152 5 discriminator 6
 15924 0080 10301BE5 		ldr	r3, [fp, #-16]
 15925 0084 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 390


 15926 0088 060053E3 		cmp	r3, #6
 15927 008c 3F00000A 		beq	.L1006
 15928              		.loc 1 6152 5 discriminator 7
 15929 0090 0130E0E3 		mvn	r3, #1
 15930              		.loc 1 6152 5
 15931 0094 810000EA 		b	.L1004
 15932              	.L1002:
 15933              		.loc 1 6152 5 discriminator 2
 15934 0098 24301BE5 		ldr	r3, [fp, #-36]
 15935 009c 2324A0E1 		lsr	r2, r3, #8
 15936 00a0 20301BE5 		ldr	r3, [fp, #-32]
 15937 00a4 143093E5 		ldr	r3, [r3, #20]
 15938 00a8 030052E1 		cmp	r2, r3
 15939 00ac 0100003A 		bcc	.L1007
 15940              		.loc 1 6152 5 discriminator 8
 15941 00b0 0230E0E3 		mvn	r3, #2
 15942              		.loc 1 6152 5
 15943 00b4 790000EA 		b	.L1004
 15944              	.L1007:
 15945              		.loc 1 6152 5 discriminator 9
 15946 00b8 24301BE5 		ldr	r3, [fp, #-36]
 15947 00bc 2334A0E1 		lsr	r3, r3, #8
 15948 00c0 8322A0E1 		lsl	r2, r3, #5
 15949 00c4 20301BE5 		ldr	r3, [fp, #-32]
 15950 00c8 0C3093E5 		ldr	r3, [r3, #12]
 15951 00cc 033082E0 		add	r3, r2, r3
 15952 00d0 08300BE5 		str	r3, [fp, #-8]
 15953 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15954 00d8 0300A0E1 		mov	r0, r3
 15955 00dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15956 00e0 10000BE5 		str	r0, [fp, #-16]
 15957              		.loc 1 6152 5 discriminator 1
 15958 00e4 10301BE5 		ldr	r3, [fp, #-16]
 15959 00e8 FF3803E2 		and	r3, r3, #16711680
 15960 00ec 020853E3 		cmp	r3, #131072
 15961 00f0 0100001A 		bne	.L1008
 15962              		.loc 1 6152 5 discriminator 10
 15963 00f4 0830E0E3 		mvn	r3, #8
 15964              		.loc 1 6152 5
 15965 00f8 680000EA 		b	.L1004
 15966              	.L1008:
 15967              		.loc 1 6152 5 discriminator 11
 15968 00fc 10301BE5 		ldr	r3, [fp, #-16]
 15969 0100 233CA0E1 		lsr	r3, r3, #24
 15970 0104 030053E3 		cmp	r3, #3
 15971 0108 0100000A 		beq	.L1009
 15972              		.loc 1 6152 5 discriminator 12
 15973 010c 0130E0E3 		mvn	r3, #1
 15974              		.loc 1 6152 5
 15975 0110 620000EA 		b	.L1004
 15976              	.L1009:
 15977              		.loc 1 6152 5 discriminator 13
 15978 0114 24301BE5 		ldr	r3, [fp, #-36]
 15979 0118 7F2003E2 		and	r2, r3, #127
 15980 011c 08301BE5 		ldr	r3, [fp, #-8]
 15981 0120 143093E5 		ldr	r3, [r3, #20]
 15982 0124 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 391


 15983 0128 0100003A 		bcc	.L1010
 15984              		.loc 1 6152 5 discriminator 14
 15985 012c 0230E0E3 		mvn	r3, #2
 15986              		.loc 1 6152 5
 15987 0130 5A0000EA 		b	.L1004
 15988              	.L1010:
 15989              		.loc 1 6152 5 discriminator 15
 15990 0134 24301BE5 		ldr	r3, [fp, #-36]
 15991 0138 7F3003E2 		and	r3, r3, #127
 15992 013c 8322A0E1 		lsl	r2, r3, #5
 15993 0140 08301BE5 		ldr	r3, [fp, #-8]
 15994 0144 0C3093E5 		ldr	r3, [r3, #12]
 15995 0148 033082E0 		add	r3, r2, r3
 15996 014c 08300BE5 		str	r3, [fp, #-8]
 15997 0150 08301BE5 		ldr	r3, [fp, #-8]
 15998 0154 0300A0E1 		mov	r0, r3
 15999 0158 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16000 015c 10000BE5 		str	r0, [fp, #-16]
 16001              		.loc 1 6152 5 discriminator 1
 16002 0160 10301BE5 		ldr	r3, [fp, #-16]
 16003 0164 FF3803E2 		and	r3, r3, #16711680
 16004 0168 020853E3 		cmp	r3, #131072
 16005 016c 0100001A 		bne	.L1011
 16006              		.loc 1 6152 5 discriminator 16
 16007 0170 0830E0E3 		mvn	r3, #8
 16008              		.loc 1 6152 5
 16009 0174 490000EA 		b	.L1004
 16010              	.L1011:
 16011              		.loc 1 6152 5 discriminator 17
 16012 0178 10301BE5 		ldr	r3, [fp, #-16]
 16013 017c 233CA0E1 		lsr	r3, r3, #24
 16014 0180 060053E3 		cmp	r3, #6
 16015 0184 0100000A 		beq	.L1006
 16016              		.loc 1 6152 5 discriminator 18
 16017 0188 0130E0E3 		mvn	r3, #1
 16018              		.loc 1 6152 5
 16019 018c 430000EA 		b	.L1004
 16020              	.L1006:
6153:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
6154:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6155:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_RCV);
 16021              		.loc 1 6155 5 is_stmt 1
 16022 0190 08301BE5 		ldr	r3, [fp, #-8]
 16023 0194 083093E5 		ldr	r3, [r3, #8]
 16024 0198 203003E2 		and	r3, r3, #32
 16025 019c 000053E3 		cmp	r3, #0
 16026 01a0 0100001A 		bne	.L1012
 16027              		.loc 1 6155 5 is_stmt 0 discriminator 1
 16028 01a4 0630E0E3 		mvn	r3, #6
 16029              		.loc 1 6155 5
 16030 01a8 3C0000EA 		b	.L1004
 16031              	.L1012:
6156:../../Source/Kernel/rme_kernel.c ****     
6157:../../Source/Kernel/rme_kernel.c ****     /* Check if we are on the same core with the target thread */
6158:../../Source/Kernel/rme_kernel.c ****     Scheduler=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 16032              		.loc 1 6158 51 is_stmt 1
 16033 01ac 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 392


 16034 01b0 0C3093E5 		ldr	r3, [r3, #12]
 16035              		.loc 1 6158 14
 16036 01b4 14300BE5 		str	r3, [fp, #-20]
6159:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=RME_CPU_LOCAL())
 16037              		.loc 1 6159 24
 16038 01b8 14301BE5 		ldr	r3, [fp, #-20]
 16039 01bc 142093E5 		ldr	r2, [r3, #20]
 16040              		.loc 1 6159 7
 16041 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16042 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16043 01c8 030052E1 		cmp	r2, r3
 16044 01cc 0100000A 		beq	.L1013
6160:../../Source/Kernel/rme_kernel.c ****     {
6161:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6162:../../Source/Kernel/rme_kernel.c **** 
6163:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16045              		.loc 1 6163 16
 16046 01d0 CB30E0E3 		mvn	r3, #203
 16047 01d4 310000EA 		b	.L1004
 16048              	.L1013:
6164:../../Source/Kernel/rme_kernel.c ****     }
6165:../../Source/Kernel/rme_kernel.c ****     else
6166:../../Source/Kernel/rme_kernel.c ****     {
6167:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6168:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6169:../../Source/Kernel/rme_kernel.c ****     }
6170:../../Source/Kernel/rme_kernel.c ****     
6171:../../Source/Kernel/rme_kernel.c ****     /* Check if there are any notifications */
6172:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Event.Next==&(Scheduler->Sched.Event))
 16049              		.loc 1 6172 30
 16050 01d8 14301BE5 		ldr	r3, [fp, #-20]
 16051 01dc 3C2093E5 		ldr	r2, [r3, #60]
 16052              		.loc 1 6172 37
 16053 01e0 14301BE5 		ldr	r3, [fp, #-20]
 16054 01e4 3C3083E2 		add	r3, r3, #60
 16055              		.loc 1 6172 7
 16056 01e8 030052E1 		cmp	r2, r3
 16057 01ec 0100001A 		bne	.L1014
6173:../../Source/Kernel/rme_kernel.c ****     {
6174:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6175:../../Source/Kernel/rme_kernel.c **** 
6176:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 16058              		.loc 1 6176 16
 16059 01f0 CE30E0E3 		mvn	r3, #206
 16060 01f4 290000EA 		b	.L1004
 16061              	.L1014:
6177:../../Source/Kernel/rme_kernel.c ****     }
6178:../../Source/Kernel/rme_kernel.c ****     else
6179:../../Source/Kernel/rme_kernel.c ****     {
6180:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6181:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6182:../../Source/Kernel/rme_kernel.c ****     }
6183:../../Source/Kernel/rme_kernel.c ****     
6184:../../Source/Kernel/rme_kernel.c ****     /* Return one notification and delete it from the notification list */
6185:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)(Scheduler->Sched.Event.Next-1U);
 16062              		.loc 1 6185 59
 16063 01f8 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 393


 16064 01fc 3C3093E5 		ldr	r3, [r3, #60]
 16065              		.loc 1 6185 11
 16066 0200 083043E2 		sub	r3, r3, #8
 16067 0204 18300BE5 		str	r3, [fp, #-24]
6186:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 16068              		.loc 1 6186 5
 16069 0208 18301BE5 		ldr	r3, [fp, #-24]
 16070 020c 0C2093E5 		ldr	r2, [r3, #12]
 16071 0210 18301BE5 		ldr	r3, [fp, #-24]
 16072 0214 083093E5 		ldr	r3, [r3, #8]
 16073 0218 0310A0E1 		mov	r1, r3
 16074 021c 0200A0E1 		mov	r0, r2
 16075 0220 FEFFFFEB 		bl	_RME_List_Del
6187:../../Source/Kernel/rme_kernel.c ****     /* We need to do this because we are using this to detect whether the notification is sent */
6188:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 16076              		.loc 1 6188 5
 16077 0224 18301BE5 		ldr	r3, [fp, #-24]
 16078 0228 083083E2 		add	r3, r3, #8
 16079 022c 0300A0E1 		mov	r0, r3
 16080 0230 FEFFFFEB 		bl	_RME_List_Crt
6189:../../Source/Kernel/rme_kernel.c ****     
6190:../../Source/Kernel/rme_kernel.c ****     /* Exception pending */
6191:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 16081              		.loc 1 6191 21
 16082 0234 18301BE5 		ldr	r3, [fp, #-24]
 16083 0238 1C3093E5 		ldr	r3, [r3, #28]
 16084              		.loc 1 6191 7
 16085 023c 030053E3 		cmp	r3, #3
 16086 0240 0900001A 		bne	.L1015
6192:../../Source/Kernel/rme_kernel.c ****     {
6193:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6194:../../Source/Kernel/rme_kernel.c ****         
6195:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_EXCPEND_FLAG;
 16087              		.loc 1 6195 13
 16088 0244 0131A0E3 		mov	r3, #1073741824
 16089 0248 0C300BE5 		str	r3, [fp, #-12]
6196:../../Source/Kernel/rme_kernel.c ****         
6197:../../Source/Kernel/rme_kernel.c ****         /* Is it also out of timeslice? */
6198:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice==0U)
 16090              		.loc 1 6198 25
 16091 024c 18301BE5 		ldr	r3, [fp, #-24]
 16092 0250 183093E5 		ldr	r3, [r3, #24]
 16093              		.loc 1 6198 11
 16094 0254 000053E3 		cmp	r3, #0
 16095 0258 0C00001A 		bne	.L1016
6199:../../Source/Kernel/rme_kernel.c ****         {
6200:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6201:../../Source/Kernel/rme_kernel.c ****             
6202:../../Source/Kernel/rme_kernel.c ****             Flag|=RME_THD_TIMEOUT_FLAG;
 16096              		.loc 1 6202 17
 16097 025c 0C301BE5 		ldr	r3, [fp, #-12]
 16098 0260 023283E3 		orr	r3, r3, #536870912
 16099 0264 0C300BE5 		str	r3, [fp, #-12]
 16100 0268 080000EA 		b	.L1016
 16101              	.L1015:
6203:../../Source/Kernel/rme_kernel.c ****         }
6204:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 394


6205:../../Source/Kernel/rme_kernel.c ****         {
6206:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6207:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6208:../../Source/Kernel/rme_kernel.c ****         }
6209:../../Source/Kernel/rme_kernel.c ****     }
6210:../../Source/Kernel/rme_kernel.c ****     /* Timeout */
6211:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_TIMEOUT)
 16102              		.loc 1 6211 26
 16103 026c 18301BE5 		ldr	r3, [fp, #-24]
 16104 0270 1C3093E5 		ldr	r3, [r3, #28]
 16105              		.loc 1 6211 12
 16106 0274 020053E3 		cmp	r3, #2
 16107 0278 0200001A 		bne	.L1017
6212:../../Source/Kernel/rme_kernel.c ****     {
6213:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6214:../../Source/Kernel/rme_kernel.c ****         
6215:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_TIMEOUT_FLAG;
 16108              		.loc 1 6215 13
 16109 027c 0232A0E3 		mov	r3, #536870912
 16110 0280 0C300BE5 		str	r3, [fp, #-12]
 16111 0284 010000EA 		b	.L1016
 16112              	.L1017:
6216:../../Source/Kernel/rme_kernel.c ****     }
6217:../../Source/Kernel/rme_kernel.c ****     /* Spurious notification, cause eliminated before this sched rcv */
6218:../../Source/Kernel/rme_kernel.c ****     else
6219:../../Source/Kernel/rme_kernel.c ****     {
6220:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6221:../../Source/Kernel/rme_kernel.c ****         
6222:../../Source/Kernel/rme_kernel.c ****         Flag=0U;
 16113              		.loc 1 6222 13
 16114 0288 0030A0E3 		mov	r3, #0
 16115 028c 0C300BE5 		str	r3, [fp, #-12]
 16116              	.L1016:
6223:../../Source/Kernel/rme_kernel.c ****     }
6224:../../Source/Kernel/rme_kernel.c ****     
6225:../../Source/Kernel/rme_kernel.c ****     /* Return the notification TID with the flags */
6226:../../Source/Kernel/rme_kernel.c ****     return (rme_ret_t)(Thread->Sched.TID|Flag);
 16117              		.loc 1 6226 37
 16118 0290 18301BE5 		ldr	r3, [fp, #-24]
 16119 0294 102093E5 		ldr	r2, [r3, #16]
 16120              		.loc 1 6226 41
 16121 0298 0C301BE5 		ldr	r3, [fp, #-12]
 16122 029c 033082E1 		orr	r3, r2, r3
 16123              	.L1004:
6227:../../Source/Kernel/rme_kernel.c **** }
 16124              		.loc 1 6227 1
 16125 02a0 0300A0E1 		mov	r0, r3
 16126 02a4 04D04BE2 		sub	sp, fp, #4
 16127              		.cfi_def_cfa 13, 8
 16128              		@ sp needed
 16129 02a8 0088BDE8 		pop	{fp, pc}
 16130              		.cfi_endproc
 16131              	.LFE62:
 16133              		.section	.text._RME_Thd_Time_Xfer,"ax",%progbits
 16134              		.align	2
 16135              		.syntax unified
 16136              		.arm
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 395


 16138              	_RME_Thd_Time_Xfer:
 16139              	.LFB63:
6228:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Rcv *******************************************/
6229:../../Source/Kernel/rme_kernel.c **** 
6230:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Time_Xfer ************************************************
6231:../../Source/Kernel/rme_kernel.c **** Description : Transfer time from one thread to another. This can only be called
6232:../../Source/Kernel/rme_kernel.c ****               from the core that the thread is on, and the the two threads
6233:../../Source/Kernel/rme_kernel.c ****               involved in the time transfer must be on the same core.
6234:../../Source/Kernel/rme_kernel.c ****               If the time transfered is more than or equal to what the source
6235:../../Source/Kernel/rme_kernel.c ****               have, the source will be out of time or blocked. If the source is
6236:../../Source/Kernel/rme_kernel.c ****               both out of time and blocked, we do not send the notification;
6237:../../Source/Kernel/rme_kernel.c ****               Instead, we send the notification when the receive endpoint
6238:../../Source/Kernel/rme_kernel.c ****               actually receive something.
6239:../../Source/Kernel/rme_kernel.c ****               It is possible to transfer time to threads have a lower priority,
6240:../../Source/Kernel/rme_kernel.c ****               and it is also possible to transfer time to threads that have a
6241:../../Source/Kernel/rme_kernel.c ****               higher priority. In the latter case, and if the source is
6242:../../Source/Kernel/rme_kernel.c ****               currently running, a preemption will occur. However, it is not
6243:../../Source/Kernel/rme_kernel.c ****               allowed to transfer time to a thread with higher maximum priority,
6244:../../Source/Kernel/rme_kernel.c ****               and this guarantees that the quality of time can only degrade.
6245:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of threads in the system:
6246:../../Source/Kernel/rme_kernel.c ****               1. Init threads - They are created at boot-time and have infinite
6247:../../Source/Kernel/rme_kernel.c ****                                 budget.
6248:../../Source/Kernel/rme_kernel.c ****               2. Infinite threads - They are created later but have infinite
6249:../../Source/Kernel/rme_kernel.c ****                                     budget.
6250:../../Source/Kernel/rme_kernel.c ****               3. Normal threads - They are created later and have a finite
6251:../../Source/Kernel/rme_kernel.c ****                                   budget.
6252:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of transfer in the system:
6253:../../Source/Kernel/rme_kernel.c ****               1. Normal transfers - They transfer a finite budget.
6254:../../Source/Kernel/rme_kernel.c ****               2. Infinite transfers - They attempt to transfer an infinite
6255:../../Source/Kernel/rme_kernel.c ****                                       budget but will not revoke the timeslices
6256:../../Source/Kernel/rme_kernel.c ****                                       of the source if the source have infinite
6257:../../Source/Kernel/rme_kernel.c ****                                       budget.
6258:../../Source/Kernel/rme_kernel.c ****               3. Revoking transfers - They attempt to transfer an infinite
6259:../../Source/Kernel/rme_kernel.c ****                                       budget but will revoke the timeslices of
6260:../../Source/Kernel/rme_kernel.c ****                                       the source if the source is an infinite
6261:../../Source/Kernel/rme_kernel.c ****                                       thread.
6262:../../Source/Kernel/rme_kernel.c ****               Normal budget transferring rules:
6263:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6264:../../Source/Kernel/rme_kernel.c ****                 Nom   |   From   |     Init     |   Infinite   |    Normal
6265:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6266:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      T-
6267:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6268:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      T-
6269:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6270:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -A      |      -A      |      TA
6271:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6272:../../Source/Kernel/rme_kernel.c ****               Infinite budget transferring rules:
6273:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6274:../../Source/Kernel/rme_kernel.c ****                 Inf   |   From   |     Init     |   Infinite   |    Normal
6275:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6276:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      S-
6277:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6278:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      S-
6279:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6280:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      -I      |      TA
6281:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6282:../../Source/Kernel/rme_kernel.c ****               Revoking budget transferring rules:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 396


6283:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6284:../../Source/Kernel/rme_kernel.c ****                 Rev   |   From   |     Init     |   Infinite   |    Normal
6285:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6286:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      S-      |      S-
6287:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6288:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      S-      |      S-
6289:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6290:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      SI      |      TA
6291:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6292:../../Source/Kernel/rme_kernel.c ****               Notations:
6293:../../Source/Kernel/rme_kernel.c ****               -:Nothing will happen on source/destination.
6294:../../Source/Kernel/rme_kernel.c ****               T:Source timeout if all transferred.
6295:../../Source/Kernel/rme_kernel.c ****               S:Source will definitely timeout.
6296:../../Source/Kernel/rme_kernel.c ****               A:Destination accept if not overflow.
6297:../../Source/Kernel/rme_kernel.c ****               I:Destination will definitely become an infinite thread.
6298:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6299:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6300:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Dst - The destination thread.
6301:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6302:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Src - The source thread.
6303:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6304:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Time - The time to transfer, in slices.
6305:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INIT_TIME for revoking transfer.
6306:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INF_TIME for infinite trasnfer.
6307:../../Source/Kernel/rme_kernel.c **** Output      : None.
6308:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the destination time amount; or an
6309:../../Source/Kernel/rme_kernel.c ****                           error code.
6310:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6311:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Time_Xfer(struct RME_Cap_Cpt* Cpt,
6312:../../Source/Kernel/rme_kernel.c ****                                     struct RME_Reg_Struct* Reg,
6313:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Dst,
6314:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Src,
6315:../../Source/Kernel/rme_kernel.c ****                                     rme_ptr_t Time)
6316:../../Source/Kernel/rme_kernel.c **** {
 16140              		.loc 1 6316 1
 16141              		.cfi_startproc
 16142              		@ args = 4, pretend = 0, frame = 48
 16143              		@ frame_needed = 1, uses_anonymous_args = 0
 16144 0000 00482DE9 		push	{fp, lr}
 16145              		.cfi_def_cfa_offset 8
 16146              		.cfi_offset 11, -8
 16147              		.cfi_offset 14, -4
 16148 0004 04B08DE2 		add	fp, sp, #4
 16149              		.cfi_def_cfa 11, 4
 16150 0008 30D04DE2 		sub	sp, sp, #48
 16151 000c 28000BE5 		str	r0, [fp, #-40]
 16152 0010 2C100BE5 		str	r1, [fp, #-44]
 16153 0014 30200BE5 		str	r2, [fp, #-48]
 16154 0018 34300BE5 		str	r3, [fp, #-52]
6317:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Dst_Op;
6318:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Src_Op;
6319:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Dst;
6320:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Src;
6321:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6322:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Time_Xfer;
6323:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6324:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 397


6325:../../Source/Kernel/rme_kernel.c ****     /* We may allow transferring infinite time here */
6326:../../Source/Kernel/rme_kernel.c ****     if(Time==0U)
 16155              		.loc 1 6326 7
 16156 001c 04309BE5 		ldr	r3, [fp, #4]
 16157 0020 000053E3 		cmp	r3, #0
 16158 0024 0100001A 		bne	.L1019
6327:../../Source/Kernel/rme_kernel.c ****     {
6328:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6329:../../Source/Kernel/rme_kernel.c **** 
6330:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16159              		.loc 1 6330 16
 16160 0028 CB30E0E3 		mvn	r3, #203
 16161 002c 770100EA 		b	.L1020
 16162              	.L1019:
6331:../../Source/Kernel/rme_kernel.c ****     }
6332:../../Source/Kernel/rme_kernel.c ****     else
6333:../../Source/Kernel/rme_kernel.c ****     {
6334:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6335:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6336:../../Source/Kernel/rme_kernel.c ****     }
6337:../../Source/Kernel/rme_kernel.c ****     
6338:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6339:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Dst,RME_CAP_TYPE_THD,
 16163              		.loc 1 6339 5
 16164 0030 30301BE5 		ldr	r3, [fp, #-48]
 16165 0034 803003E2 		and	r3, r3, #128
 16166 0038 000053E3 		cmp	r3, #0
 16167 003c 1C00001A 		bne	.L1021
 16168              		.loc 1 6339 5 is_stmt 0 discriminator 1
 16169 0040 28301BE5 		ldr	r3, [fp, #-40]
 16170 0044 142093E5 		ldr	r2, [r3, #20]
 16171 0048 30301BE5 		ldr	r3, [fp, #-48]
 16172 004c 030052E1 		cmp	r2, r3
 16173 0050 0100008A 		bhi	.L1022
 16174              		.loc 1 6339 5 discriminator 3
 16175 0054 0230E0E3 		mvn	r3, #2
 16176              		.loc 1 6339 5
 16177 0058 6C0100EA 		b	.L1020
 16178              	.L1022:
 16179              		.loc 1 6339 5 discriminator 4
 16180 005c 30301BE5 		ldr	r3, [fp, #-48]
 16181 0060 8322A0E1 		lsl	r2, r3, #5
 16182 0064 28301BE5 		ldr	r3, [fp, #-40]
 16183 0068 0C3093E5 		ldr	r3, [r3, #12]
 16184 006c 033082E0 		add	r3, r2, r3
 16185 0070 08300BE5 		str	r3, [fp, #-8]
 16186 0074 08301BE5 		ldr	r3, [fp, #-8]
 16187 0078 0300A0E1 		mov	r0, r3
 16188 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16189 0080 14000BE5 		str	r0, [fp, #-20]
 16190              		.loc 1 6339 5 discriminator 1
 16191 0084 14301BE5 		ldr	r3, [fp, #-20]
 16192 0088 FF3803E2 		and	r3, r3, #16711680
 16193 008c 020853E3 		cmp	r3, #131072
 16194 0090 0100001A 		bne	.L1023
 16195              		.loc 1 6339 5 discriminator 5
 16196 0094 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 398


 16197              		.loc 1 6339 5
 16198 0098 5C0100EA 		b	.L1020
 16199              	.L1023:
 16200              		.loc 1 6339 5 discriminator 6
 16201 009c 14301BE5 		ldr	r3, [fp, #-20]
 16202 00a0 233CA0E1 		lsr	r3, r3, #24
 16203 00a4 060053E3 		cmp	r3, #6
 16204 00a8 3F00000A 		beq	.L1024
 16205              		.loc 1 6339 5 discriminator 7
 16206 00ac 0130E0E3 		mvn	r3, #1
 16207              		.loc 1 6339 5
 16208 00b0 560100EA 		b	.L1020
 16209              	.L1021:
 16210              		.loc 1 6339 5 discriminator 2
 16211 00b4 30301BE5 		ldr	r3, [fp, #-48]
 16212 00b8 2324A0E1 		lsr	r2, r3, #8
 16213 00bc 28301BE5 		ldr	r3, [fp, #-40]
 16214 00c0 143093E5 		ldr	r3, [r3, #20]
 16215 00c4 030052E1 		cmp	r2, r3
 16216 00c8 0100003A 		bcc	.L1025
 16217              		.loc 1 6339 5 discriminator 8
 16218 00cc 0230E0E3 		mvn	r3, #2
 16219              		.loc 1 6339 5
 16220 00d0 4E0100EA 		b	.L1020
 16221              	.L1025:
 16222              		.loc 1 6339 5 discriminator 9
 16223 00d4 30301BE5 		ldr	r3, [fp, #-48]
 16224 00d8 2334A0E1 		lsr	r3, r3, #8
 16225 00dc 8322A0E1 		lsl	r2, r3, #5
 16226 00e0 28301BE5 		ldr	r3, [fp, #-40]
 16227 00e4 0C3093E5 		ldr	r3, [r3, #12]
 16228 00e8 033082E0 		add	r3, r2, r3
 16229 00ec 08300BE5 		str	r3, [fp, #-8]
 16230 00f0 08301BE5 		ldr	r3, [fp, #-8]
 16231 00f4 0300A0E1 		mov	r0, r3
 16232 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16233 00fc 14000BE5 		str	r0, [fp, #-20]
 16234              		.loc 1 6339 5 discriminator 1
 16235 0100 14301BE5 		ldr	r3, [fp, #-20]
 16236 0104 FF3803E2 		and	r3, r3, #16711680
 16237 0108 020853E3 		cmp	r3, #131072
 16238 010c 0100001A 		bne	.L1026
 16239              		.loc 1 6339 5 discriminator 10
 16240 0110 0830E0E3 		mvn	r3, #8
 16241              		.loc 1 6339 5
 16242 0114 3D0100EA 		b	.L1020
 16243              	.L1026:
 16244              		.loc 1 6339 5 discriminator 11
 16245 0118 14301BE5 		ldr	r3, [fp, #-20]
 16246 011c 233CA0E1 		lsr	r3, r3, #24
 16247 0120 030053E3 		cmp	r3, #3
 16248 0124 0100000A 		beq	.L1027
 16249              		.loc 1 6339 5 discriminator 12
 16250 0128 0130E0E3 		mvn	r3, #1
 16251              		.loc 1 6339 5
 16252 012c 370100EA 		b	.L1020
 16253              	.L1027:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 399


 16254              		.loc 1 6339 5 discriminator 13
 16255 0130 30301BE5 		ldr	r3, [fp, #-48]
 16256 0134 7F2003E2 		and	r2, r3, #127
 16257 0138 08301BE5 		ldr	r3, [fp, #-8]
 16258 013c 143093E5 		ldr	r3, [r3, #20]
 16259 0140 030052E1 		cmp	r2, r3
 16260 0144 0100003A 		bcc	.L1028
 16261              		.loc 1 6339 5 discriminator 14
 16262 0148 0230E0E3 		mvn	r3, #2
 16263              		.loc 1 6339 5
 16264 014c 2F0100EA 		b	.L1020
 16265              	.L1028:
 16266              		.loc 1 6339 5 discriminator 15
 16267 0150 30301BE5 		ldr	r3, [fp, #-48]
 16268 0154 7F3003E2 		and	r3, r3, #127
 16269 0158 8322A0E1 		lsl	r2, r3, #5
 16270 015c 08301BE5 		ldr	r3, [fp, #-8]
 16271 0160 0C3093E5 		ldr	r3, [r3, #12]
 16272 0164 033082E0 		add	r3, r2, r3
 16273 0168 08300BE5 		str	r3, [fp, #-8]
 16274 016c 08301BE5 		ldr	r3, [fp, #-8]
 16275 0170 0300A0E1 		mov	r0, r3
 16276 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16277 0178 14000BE5 		str	r0, [fp, #-20]
 16278              		.loc 1 6339 5 discriminator 1
 16279 017c 14301BE5 		ldr	r3, [fp, #-20]
 16280 0180 FF3803E2 		and	r3, r3, #16711680
 16281 0184 020853E3 		cmp	r3, #131072
 16282 0188 0100001A 		bne	.L1029
 16283              		.loc 1 6339 5 discriminator 16
 16284 018c 0830E0E3 		mvn	r3, #8
 16285              		.loc 1 6339 5
 16286 0190 1E0100EA 		b	.L1020
 16287              	.L1029:
 16288              		.loc 1 6339 5 discriminator 17
 16289 0194 14301BE5 		ldr	r3, [fp, #-20]
 16290 0198 233CA0E1 		lsr	r3, r3, #24
 16291 019c 060053E3 		cmp	r3, #6
 16292 01a0 0100000A 		beq	.L1024
 16293              		.loc 1 6339 5 discriminator 18
 16294 01a4 0130E0E3 		mvn	r3, #1
 16295              		.loc 1 6339 5
 16296 01a8 180100EA 		b	.L1020
 16297              	.L1024:
6340:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Dst_Op,Type_Stat);
6341:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Src,RME_CAP_TYPE_THD,
 16298              		.loc 1 6341 5 is_stmt 1
 16299 01ac 34301BE5 		ldr	r3, [fp, #-52]
 16300 01b0 803003E2 		and	r3, r3, #128
 16301 01b4 000053E3 		cmp	r3, #0
 16302 01b8 1C00001A 		bne	.L1030
 16303              		.loc 1 6341 5 is_stmt 0 discriminator 1
 16304 01bc 28301BE5 		ldr	r3, [fp, #-40]
 16305 01c0 142093E5 		ldr	r2, [r3, #20]
 16306 01c4 34301BE5 		ldr	r3, [fp, #-52]
 16307 01c8 030052E1 		cmp	r2, r3
 16308 01cc 0100008A 		bhi	.L1031
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 400


 16309              		.loc 1 6341 5 discriminator 3
 16310 01d0 0230E0E3 		mvn	r3, #2
 16311              		.loc 1 6341 5
 16312 01d4 0D0100EA 		b	.L1020
 16313              	.L1031:
 16314              		.loc 1 6341 5 discriminator 4
 16315 01d8 34301BE5 		ldr	r3, [fp, #-52]
 16316 01dc 8322A0E1 		lsl	r2, r3, #5
 16317 01e0 28301BE5 		ldr	r3, [fp, #-40]
 16318 01e4 0C3093E5 		ldr	r3, [r3, #12]
 16319 01e8 033082E0 		add	r3, r2, r3
 16320 01ec 0C300BE5 		str	r3, [fp, #-12]
 16321 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 16322 01f4 0300A0E1 		mov	r0, r3
 16323 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16324 01fc 14000BE5 		str	r0, [fp, #-20]
 16325              		.loc 1 6341 5 discriminator 1
 16326 0200 14301BE5 		ldr	r3, [fp, #-20]
 16327 0204 FF3803E2 		and	r3, r3, #16711680
 16328 0208 020853E3 		cmp	r3, #131072
 16329 020c 0100001A 		bne	.L1032
 16330              		.loc 1 6341 5 discriminator 5
 16331 0210 0830E0E3 		mvn	r3, #8
 16332              		.loc 1 6341 5
 16333 0214 FD0000EA 		b	.L1020
 16334              	.L1032:
 16335              		.loc 1 6341 5 discriminator 6
 16336 0218 14301BE5 		ldr	r3, [fp, #-20]
 16337 021c 233CA0E1 		lsr	r3, r3, #24
 16338 0220 060053E3 		cmp	r3, #6
 16339 0224 3F00000A 		beq	.L1033
 16340              		.loc 1 6341 5 discriminator 7
 16341 0228 0130E0E3 		mvn	r3, #1
 16342              		.loc 1 6341 5
 16343 022c F70000EA 		b	.L1020
 16344              	.L1030:
 16345              		.loc 1 6341 5 discriminator 2
 16346 0230 34301BE5 		ldr	r3, [fp, #-52]
 16347 0234 2324A0E1 		lsr	r2, r3, #8
 16348 0238 28301BE5 		ldr	r3, [fp, #-40]
 16349 023c 143093E5 		ldr	r3, [r3, #20]
 16350 0240 030052E1 		cmp	r2, r3
 16351 0244 0100003A 		bcc	.L1034
 16352              		.loc 1 6341 5 discriminator 8
 16353 0248 0230E0E3 		mvn	r3, #2
 16354              		.loc 1 6341 5
 16355 024c EF0000EA 		b	.L1020
 16356              	.L1034:
 16357              		.loc 1 6341 5 discriminator 9
 16358 0250 34301BE5 		ldr	r3, [fp, #-52]
 16359 0254 2334A0E1 		lsr	r3, r3, #8
 16360 0258 8322A0E1 		lsl	r2, r3, #5
 16361 025c 28301BE5 		ldr	r3, [fp, #-40]
 16362 0260 0C3093E5 		ldr	r3, [r3, #12]
 16363 0264 033082E0 		add	r3, r2, r3
 16364 0268 0C300BE5 		str	r3, [fp, #-12]
 16365 026c 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 401


 16366 0270 0300A0E1 		mov	r0, r3
 16367 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16368 0278 14000BE5 		str	r0, [fp, #-20]
 16369              		.loc 1 6341 5 discriminator 1
 16370 027c 14301BE5 		ldr	r3, [fp, #-20]
 16371 0280 FF3803E2 		and	r3, r3, #16711680
 16372 0284 020853E3 		cmp	r3, #131072
 16373 0288 0100001A 		bne	.L1035
 16374              		.loc 1 6341 5 discriminator 10
 16375 028c 0830E0E3 		mvn	r3, #8
 16376              		.loc 1 6341 5
 16377 0290 DE0000EA 		b	.L1020
 16378              	.L1035:
 16379              		.loc 1 6341 5 discriminator 11
 16380 0294 14301BE5 		ldr	r3, [fp, #-20]
 16381 0298 233CA0E1 		lsr	r3, r3, #24
 16382 029c 030053E3 		cmp	r3, #3
 16383 02a0 0100000A 		beq	.L1036
 16384              		.loc 1 6341 5 discriminator 12
 16385 02a4 0130E0E3 		mvn	r3, #1
 16386              		.loc 1 6341 5
 16387 02a8 D80000EA 		b	.L1020
 16388              	.L1036:
 16389              		.loc 1 6341 5 discriminator 13
 16390 02ac 34301BE5 		ldr	r3, [fp, #-52]
 16391 02b0 7F2003E2 		and	r2, r3, #127
 16392 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 16393 02b8 143093E5 		ldr	r3, [r3, #20]
 16394 02bc 030052E1 		cmp	r2, r3
 16395 02c0 0100003A 		bcc	.L1037
 16396              		.loc 1 6341 5 discriminator 14
 16397 02c4 0230E0E3 		mvn	r3, #2
 16398              		.loc 1 6341 5
 16399 02c8 D00000EA 		b	.L1020
 16400              	.L1037:
 16401              		.loc 1 6341 5 discriminator 15
 16402 02cc 34301BE5 		ldr	r3, [fp, #-52]
 16403 02d0 7F3003E2 		and	r3, r3, #127
 16404 02d4 8322A0E1 		lsl	r2, r3, #5
 16405 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 16406 02dc 0C3093E5 		ldr	r3, [r3, #12]
 16407 02e0 033082E0 		add	r3, r2, r3
 16408 02e4 0C300BE5 		str	r3, [fp, #-12]
 16409 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 16410 02ec 0300A0E1 		mov	r0, r3
 16411 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16412 02f4 14000BE5 		str	r0, [fp, #-20]
 16413              		.loc 1 6341 5 discriminator 1
 16414 02f8 14301BE5 		ldr	r3, [fp, #-20]
 16415 02fc FF3803E2 		and	r3, r3, #16711680
 16416 0300 020853E3 		cmp	r3, #131072
 16417 0304 0100001A 		bne	.L1038
 16418              		.loc 1 6341 5 discriminator 16
 16419 0308 0830E0E3 		mvn	r3, #8
 16420              		.loc 1 6341 5
 16421 030c BF0000EA 		b	.L1020
 16422              	.L1038:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 402


 16423              		.loc 1 6341 5 discriminator 17
 16424 0310 14301BE5 		ldr	r3, [fp, #-20]
 16425 0314 233CA0E1 		lsr	r3, r3, #24
 16426 0318 060053E3 		cmp	r3, #6
 16427 031c 0100000A 		beq	.L1033
 16428              		.loc 1 6341 5 discriminator 18
 16429 0320 0130E0E3 		mvn	r3, #1
 16430              		.loc 1 6341 5
 16431 0324 B90000EA 		b	.L1020
 16432              	.L1033:
6342:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Src_Op,Type_Stat);
6343:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6344:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Dst_Op,RME_THD_FLAG_XFER_DST);
 16433              		.loc 1 6344 5 is_stmt 1
 16434 0328 08301BE5 		ldr	r3, [fp, #-8]
 16435 032c 083093E5 		ldr	r3, [r3, #8]
 16436 0330 803003E2 		and	r3, r3, #128
 16437 0334 000053E3 		cmp	r3, #0
 16438 0338 0100001A 		bne	.L1039
 16439              		.loc 1 6344 5 is_stmt 0 discriminator 1
 16440 033c 0630E0E3 		mvn	r3, #6
 16441              		.loc 1 6344 5
 16442 0340 B20000EA 		b	.L1020
 16443              	.L1039:
6345:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Src_Op,RME_THD_FLAG_XFER_SRC);
 16444              		.loc 1 6345 5 is_stmt 1
 16445 0344 0C301BE5 		ldr	r3, [fp, #-12]
 16446 0348 083093E5 		ldr	r3, [r3, #8]
 16447 034c 403003E2 		and	r3, r3, #64
 16448 0350 000053E3 		cmp	r3, #0
 16449 0354 0100001A 		bne	.L1040
 16450              		.loc 1 6345 5 is_stmt 0 discriminator 1
 16451 0358 0630E0E3 		mvn	r3, #6
 16452              		.loc 1 6345 5
 16453 035c AB0000EA 		b	.L1020
 16454              	.L1040:
6346:../../Source/Kernel/rme_kernel.c **** 
6347:../../Source/Kernel/rme_kernel.c ****     /* Check if the two threads are on the core that is accordance with what we are on */
6348:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16455              		.loc 1 6348 10 is_stmt 1
 16456 0360 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16457 0364 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16458 0368 18300BE5 		str	r3, [fp, #-24]
6349:../../Source/Kernel/rme_kernel.c ****     Thd_Src=RME_CAP_GETOBJ(Thd_Src_Op,struct RME_Thd_Struct*);
 16459              		.loc 1 6349 13
 16460 036c 0C301BE5 		ldr	r3, [fp, #-12]
 16461 0370 0C3093E5 		ldr	r3, [r3, #12]
 16462              		.loc 1 6349 12
 16463 0374 1C300BE5 		str	r3, [fp, #-28]
6350:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Local!=Local)
 16464              		.loc 1 6350 22
 16465 0378 1C301BE5 		ldr	r3, [fp, #-28]
 16466 037c 143093E5 		ldr	r3, [r3, #20]
 16467              		.loc 1 6350 7
 16468 0380 18201BE5 		ldr	r2, [fp, #-24]
 16469 0384 030052E1 		cmp	r2, r3
 16470 0388 0100000A 		beq	.L1041
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 403


6351:../../Source/Kernel/rme_kernel.c ****     {
6352:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6353:../../Source/Kernel/rme_kernel.c **** 
6354:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16471              		.loc 1 6354 16
 16472 038c CB30E0E3 		mvn	r3, #203
 16473 0390 9E0000EA 		b	.L1020
 16474              	.L1041:
6355:../../Source/Kernel/rme_kernel.c ****     }
6356:../../Source/Kernel/rme_kernel.c ****     else
6357:../../Source/Kernel/rme_kernel.c ****     {
6358:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6359:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6360:../../Source/Kernel/rme_kernel.c ****     }
6361:../../Source/Kernel/rme_kernel.c ****     
6362:../../Source/Kernel/rme_kernel.c ****     /* Check if we have slices to transfer; 0 implies TIMEOUT, BLOCKED, or EXCPEND */
6363:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16475              		.loc 1 6363 22
 16476 0394 1C301BE5 		ldr	r3, [fp, #-28]
 16477 0398 183093E5 		ldr	r3, [r3, #24]
 16478              		.loc 1 6363 7
 16479 039c 000053E3 		cmp	r3, #0
 16480 03a0 0100001A 		bne	.L1042
6364:../../Source/Kernel/rme_kernel.c ****     {
6365:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6366:../../Source/Kernel/rme_kernel.c **** 
6367:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16481              		.loc 1 6367 16
 16482 03a4 CB30E0E3 		mvn	r3, #203
 16483 03a8 980000EA 		b	.L1020
 16484              	.L1042:
6368:../../Source/Kernel/rme_kernel.c ****     }
6369:../../Source/Kernel/rme_kernel.c ****     else
6370:../../Source/Kernel/rme_kernel.c ****     {
6371:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6372:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6373:../../Source/Kernel/rme_kernel.c ****     }
6374:../../Source/Kernel/rme_kernel.c ****     
6375:../../Source/Kernel/rme_kernel.c ****     Thd_Dst=RME_CAP_GETOBJ(Thd_Dst_Op,struct RME_Thd_Struct*);
 16485              		.loc 1 6375 13
 16486 03ac 08301BE5 		ldr	r3, [fp, #-8]
 16487 03b0 0C3093E5 		ldr	r3, [r3, #12]
 16488              		.loc 1 6375 12
 16489 03b4 20300BE5 		str	r3, [fp, #-32]
6376:../../Source/Kernel/rme_kernel.c ****     
6377:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.Local!=Local)
 16490              		.loc 1 6377 22
 16491 03b8 20301BE5 		ldr	r3, [fp, #-32]
 16492 03bc 143093E5 		ldr	r3, [r3, #20]
 16493              		.loc 1 6377 7
 16494 03c0 18201BE5 		ldr	r2, [fp, #-24]
 16495 03c4 030052E1 		cmp	r2, r3
 16496 03c8 0100000A 		beq	.L1043
6378:../../Source/Kernel/rme_kernel.c ****     {
6379:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6380:../../Source/Kernel/rme_kernel.c **** 
6381:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 404


 16497              		.loc 1 6381 16
 16498 03cc CB30E0E3 		mvn	r3, #203
 16499 03d0 8E0000EA 		b	.L1020
 16500              	.L1043:
6382:../../Source/Kernel/rme_kernel.c ****     }
6383:../../Source/Kernel/rme_kernel.c ****     else
6384:../../Source/Kernel/rme_kernel.c ****     {
6385:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6386:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6387:../../Source/Kernel/rme_kernel.c ****     }
6388:../../Source/Kernel/rme_kernel.c **** 
6389:../../Source/Kernel/rme_kernel.c ****     /* The destination must never have higher maximum priority than the source,
6390:../../Source/Kernel/rme_kernel.c ****      * unless it is a init thread which could be used as a black hole */
6391:../../Source/Kernel/rme_kernel.c ****     if((Thd_Src->Sched.Prio_Max<Thd_Dst->Sched.Prio_Max)&&
 16501              		.loc 1 6391 23
 16502 03d4 1C301BE5 		ldr	r3, [fp, #-28]
 16503 03d8 242093E5 		ldr	r2, [r3, #36]
 16504              		.loc 1 6391 47
 16505 03dc 20301BE5 		ldr	r3, [fp, #-32]
 16506 03e0 243093E5 		ldr	r3, [r3, #36]
 16507              		.loc 1 6391 7
 16508 03e4 030052E1 		cmp	r2, r3
 16509 03e8 0500002A 		bcs	.L1044
6392:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16510              		.loc 1 6392 23
 16511 03ec 20301BE5 		ldr	r3, [fp, #-32]
 16512 03f0 183093E5 		ldr	r3, [r3, #24]
6391:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16513              		.loc 1 6391 57 discriminator 1
 16514 03f4 060173E3 		cmn	r3, #-2147483647
 16515 03f8 0100000A 		beq	.L1044
6393:../../Source/Kernel/rme_kernel.c ****     {
6394:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6395:../../Source/Kernel/rme_kernel.c **** 
6396:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 16516              		.loc 1 6396 16
 16517 03fc CC30E0E3 		mvn	r3, #204
 16518 0400 820000EA 		b	.L1020
 16519              	.L1044:
6397:../../Source/Kernel/rme_kernel.c ****     }
6398:../../Source/Kernel/rme_kernel.c ****     else
6399:../../Source/Kernel/rme_kernel.c ****     {
6400:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6401:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6402:../../Source/Kernel/rme_kernel.c ****     }
6403:../../Source/Kernel/rme_kernel.c ****     
6404:../../Source/Kernel/rme_kernel.c ****     /* Delegating from a normal thread */
6405:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice<RME_THD_INF_TIME)
 16520              		.loc 1 6405 22
 16521 0404 1C301BE5 		ldr	r3, [fp, #-28]
 16522 0408 183093E5 		ldr	r3, [r3, #24]
 16523              		.loc 1 6405 7
 16524 040c 0E0173E3 		cmn	r3, #-2147483645
 16525 0410 3200008A 		bhi	.L1045
6406:../../Source/Kernel/rme_kernel.c ****     {
6407:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6408:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 405


6409:../../Source/Kernel/rme_kernel.c ****         /* Delegate all our time */
6410:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16526              		.loc 1 6410 11
 16527 0414 04309BE5 		ldr	r3, [fp, #4]
 16528 0418 0E0173E3 		cmn	r3, #-2147483645
 16529 041c 0300009A 		bls	.L1046
6411:../../Source/Kernel/rme_kernel.c ****         {
6412:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6413:../../Source/Kernel/rme_kernel.c **** 
6414:../../Source/Kernel/rme_kernel.c ****             Time_Xfer=Thd_Src->Sched.Slice;
 16530              		.loc 1 6414 22
 16531 0420 1C301BE5 		ldr	r3, [fp, #-28]
 16532 0424 183093E5 		ldr	r3, [r3, #24]
 16533 0428 10300BE5 		str	r3, [fp, #-16]
 16534 042c 0A0000EA 		b	.L1047
 16535              	.L1046:
6415:../../Source/Kernel/rme_kernel.c ****         }
6416:../../Source/Kernel/rme_kernel.c ****         /* Delegate some time, if not sufficient, clean up the source time */
6417:../../Source/Kernel/rme_kernel.c ****         else
6418:../../Source/Kernel/rme_kernel.c ****         {
6419:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6420:../../Source/Kernel/rme_kernel.c ****             
6421:../../Source/Kernel/rme_kernel.c ****             if(Thd_Src->Sched.Slice>Time)
 16536              		.loc 1 6421 30
 16537 0430 1C301BE5 		ldr	r3, [fp, #-28]
 16538 0434 183093E5 		ldr	r3, [r3, #24]
 16539              		.loc 1 6421 15
 16540 0438 04209BE5 		ldr	r2, [fp, #4]
 16541 043c 030052E1 		cmp	r2, r3
 16542 0440 0200002A 		bcs	.L1048
6422:../../Source/Kernel/rme_kernel.c ****             {
6423:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6424:../../Source/Kernel/rme_kernel.c **** 
6425:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Time;
 16543              		.loc 1 6425 26
 16544 0444 04309BE5 		ldr	r3, [fp, #4]
 16545 0448 10300BE5 		str	r3, [fp, #-16]
 16546 044c 020000EA 		b	.L1047
 16547              	.L1048:
6426:../../Source/Kernel/rme_kernel.c ****             }
6427:../../Source/Kernel/rme_kernel.c ****             else
6428:../../Source/Kernel/rme_kernel.c ****             {
6429:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6430:../../Source/Kernel/rme_kernel.c **** 
6431:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Thd_Src->Sched.Slice;
 16548              		.loc 1 6431 26
 16549 0450 1C301BE5 		ldr	r3, [fp, #-28]
 16550 0454 183093E5 		ldr	r3, [r3, #24]
 16551 0458 10300BE5 		str	r3, [fp, #-16]
 16552              	.L1047:
6432:../../Source/Kernel/rme_kernel.c ****             }
6433:../../Source/Kernel/rme_kernel.c ****         }
6434:../../Source/Kernel/rme_kernel.c ****         
6435:../../Source/Kernel/rme_kernel.c ****         /* See if we are transferring to an infinite budget thread. If yes, we
6436:../../Source/Kernel/rme_kernel.c ****          * are revoking timeslices; If not, this is a finite transfer */
6437:../../Source/Kernel/rme_kernel.c ****         if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16553              		.loc 1 6437 26
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 406


 16554 045c 20301BE5 		ldr	r3, [fp, #-32]
 16555 0460 183093E5 		ldr	r3, [r3, #24]
 16556              		.loc 1 6437 11
 16557 0464 0E0173E3 		cmn	r3, #-2147483645
 16558 0468 1500008A 		bhi	.L1049
6438:../../Source/Kernel/rme_kernel.c ****         {
6439:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6440:../../Source/Kernel/rme_kernel.c ****             
6441:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time_Xfer);
 16559              		.loc 1 6441 13
 16560 046c 20301BE5 		ldr	r3, [fp, #-32]
 16561 0470 182093E5 		ldr	r2, [r3, #24]
 16562 0474 10301BE5 		ldr	r3, [fp, #-16]
 16563 0478 033082E0 		add	r3, r2, r3
 16564 047c 0E0173E3 		cmn	r3, #-2147483645
 16565 0480 0700008A 		bhi	.L1050
 16566              		.loc 1 6441 13 is_stmt 0 discriminator 2
 16567 0484 20301BE5 		ldr	r3, [fp, #-32]
 16568 0488 182093E5 		ldr	r2, [r3, #24]
 16569 048c 10301BE5 		ldr	r3, [fp, #-16]
 16570 0490 032082E0 		add	r2, r2, r3
 16571 0494 20301BE5 		ldr	r3, [fp, #-32]
 16572 0498 183093E5 		ldr	r3, [r3, #24]
 16573 049c 030052E1 		cmp	r2, r3
 16574 04a0 0100002A 		bcs	.L1051
 16575              	.L1050:
 16576              		.loc 1 6441 13 discriminator 3
 16577 04a4 CF30E0E3 		mvn	r3, #207
 16578              		.loc 1 6441 13
 16579 04a8 580000EA 		b	.L1020
 16580              	.L1051:
6442:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time_Xfer;
 16581              		.loc 1 6442 27 is_stmt 1
 16582 04ac 20301BE5 		ldr	r3, [fp, #-32]
 16583 04b0 182093E5 		ldr	r2, [r3, #24]
 16584              		.loc 1 6442 33
 16585 04b4 10301BE5 		ldr	r3, [fp, #-16]
 16586 04b8 032082E0 		add	r2, r2, r3
 16587 04bc 20301BE5 		ldr	r3, [fp, #-32]
 16588 04c0 182083E5 		str	r2, [r3, #24]
 16589              	.L1049:
6443:../../Source/Kernel/rme_kernel.c ****         }
6444:../../Source/Kernel/rme_kernel.c ****         else
6445:../../Source/Kernel/rme_kernel.c ****         {
6446:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6447:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6448:../../Source/Kernel/rme_kernel.c ****         }
6449:../../Source/Kernel/rme_kernel.c ****         
6450:../../Source/Kernel/rme_kernel.c ****         Thd_Src->Sched.Slice-=Time_Xfer;
 16590              		.loc 1 6450 23
 16591 04c4 1C301BE5 		ldr	r3, [fp, #-28]
 16592 04c8 182093E5 		ldr	r2, [r3, #24]
 16593              		.loc 1 6450 29
 16594 04cc 10301BE5 		ldr	r3, [fp, #-16]
 16595 04d0 032042E0 		sub	r2, r2, r3
 16596 04d4 1C301BE5 		ldr	r3, [fp, #-28]
 16597 04d8 182083E5 		str	r2, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 407


 16598 04dc 2A0000EA 		b	.L1052
 16599              	.L1045:
6451:../../Source/Kernel/rme_kernel.c ****     }
6452:../../Source/Kernel/rme_kernel.c ****     /* Delegating from init or infinite thread */
6453:../../Source/Kernel/rme_kernel.c ****     else
6454:../../Source/Kernel/rme_kernel.c ****     {
6455:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6456:../../Source/Kernel/rme_kernel.c **** 
6457:../../Source/Kernel/rme_kernel.c ****         /* Infinite transfer to the destination */
6458:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16600              		.loc 1 6458 11
 16601 04e0 04309BE5 		ldr	r3, [fp, #4]
 16602 04e4 0E0173E3 		cmn	r3, #-2147483645
 16603 04e8 1100009A 		bls	.L1053
6459:../../Source/Kernel/rme_kernel.c ****         {
6460:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6461:../../Source/Kernel/rme_kernel.c **** 
6462:../../Source/Kernel/rme_kernel.c ****             /* This transfer will revoke the infinite budget */
6463:../../Source/Kernel/rme_kernel.c ****             if(Time==RME_THD_INIT_TIME)
 16604              		.loc 1 6463 15
 16605 04ec 04309BE5 		ldr	r3, [fp, #4]
 16606 04f0 060173E3 		cmn	r3, #-2147483647
 16607 04f4 0600001A 		bne	.L1054
6464:../../Source/Kernel/rme_kernel.c ****             {
6465:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6466:../../Source/Kernel/rme_kernel.c ****                 
6467:../../Source/Kernel/rme_kernel.c ****                 /* Will not revoke, source is an init thread */
6468:../../Source/Kernel/rme_kernel.c ****                 if(Thd_Src->Sched.Slice!=RME_THD_INIT_TIME)
 16608              		.loc 1 6468 34
 16609 04f8 1C301BE5 		ldr	r3, [fp, #-28]
 16610 04fc 183093E5 		ldr	r3, [r3, #24]
 16611              		.loc 1 6468 19
 16612 0500 060173E3 		cmn	r3, #-2147483647
 16613 0504 0200000A 		beq	.L1054
6469:../../Source/Kernel/rme_kernel.c ****                 {
6470:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6471:../../Source/Kernel/rme_kernel.c ****                     
6472:../../Source/Kernel/rme_kernel.c ****                     Thd_Src->Sched.Slice=0U;
 16614              		.loc 1 6472 41
 16615 0508 1C301BE5 		ldr	r3, [fp, #-28]
 16616 050c 0020A0E3 		mov	r2, #0
 16617 0510 182083E5 		str	r2, [r3, #24]
 16618              	.L1054:
6473:../../Source/Kernel/rme_kernel.c ****                 }
6474:../../Source/Kernel/rme_kernel.c ****                 else
6475:../../Source/Kernel/rme_kernel.c ****                 {
6476:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6477:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
6478:../../Source/Kernel/rme_kernel.c ****                 }
6479:../../Source/Kernel/rme_kernel.c ****             }
6480:../../Source/Kernel/rme_kernel.c ****             else
6481:../../Source/Kernel/rme_kernel.c ****             {
6482:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6483:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6484:../../Source/Kernel/rme_kernel.c ****             }
6485:../../Source/Kernel/rme_kernel.c ****             
6486:../../Source/Kernel/rme_kernel.c ****             /* Set destination to infinite if it is not an init thread */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 408


6487:../../Source/Kernel/rme_kernel.c ****             if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16619              		.loc 1 6487 30
 16620 0514 20301BE5 		ldr	r3, [fp, #-32]
 16621 0518 183093E5 		ldr	r3, [r3, #24]
 16622              		.loc 1 6487 15
 16623 051c 0E0173E3 		cmn	r3, #-2147483645
 16624 0520 1900008A 		bhi	.L1052
6488:../../Source/Kernel/rme_kernel.c ****             {
6489:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6490:../../Source/Kernel/rme_kernel.c ****                 
6491:../../Source/Kernel/rme_kernel.c ****                 Thd_Dst->Sched.Slice=RME_THD_INF_TIME;
 16625              		.loc 1 6491 37
 16626 0524 20301BE5 		ldr	r3, [fp, #-32]
 16627 0528 0621E0E3 		mvn	r2, #-2147483647
 16628 052c 182083E5 		str	r2, [r3, #24]
 16629 0530 150000EA 		b	.L1052
 16630              	.L1053:
6492:../../Source/Kernel/rme_kernel.c ****             }
6493:../../Source/Kernel/rme_kernel.c ****             else
6494:../../Source/Kernel/rme_kernel.c ****             {
6495:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6496:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6497:../../Source/Kernel/rme_kernel.c ****             }
6498:../../Source/Kernel/rme_kernel.c ****         }
6499:../../Source/Kernel/rme_kernel.c ****         else
6500:../../Source/Kernel/rme_kernel.c ****         {
6501:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6502:../../Source/Kernel/rme_kernel.c **** 
6503:../../Source/Kernel/rme_kernel.c ****             /* Just increase the budget of the other thread - check first */
6504:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time);
 16631              		.loc 1 6504 13
 16632 0534 20301BE5 		ldr	r3, [fp, #-32]
 16633 0538 182093E5 		ldr	r2, [r3, #24]
 16634 053c 04309BE5 		ldr	r3, [fp, #4]
 16635 0540 033082E0 		add	r3, r2, r3
 16636 0544 0E0173E3 		cmn	r3, #-2147483645
 16637 0548 0700008A 		bhi	.L1055
 16638              		.loc 1 6504 13 is_stmt 0 discriminator 2
 16639 054c 20301BE5 		ldr	r3, [fp, #-32]
 16640 0550 182093E5 		ldr	r2, [r3, #24]
 16641 0554 04309BE5 		ldr	r3, [fp, #4]
 16642 0558 032082E0 		add	r2, r2, r3
 16643 055c 20301BE5 		ldr	r3, [fp, #-32]
 16644 0560 183093E5 		ldr	r3, [r3, #24]
 16645 0564 030052E1 		cmp	r2, r3
 16646 0568 0100002A 		bcs	.L1056
 16647              	.L1055:
 16648              		.loc 1 6504 13 discriminator 3
 16649 056c CF30E0E3 		mvn	r3, #207
 16650              		.loc 1 6504 13
 16651 0570 260000EA 		b	.L1020
 16652              	.L1056:
6505:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time;
 16653              		.loc 1 6505 27 is_stmt 1
 16654 0574 20301BE5 		ldr	r3, [fp, #-32]
 16655 0578 182093E5 		ldr	r2, [r3, #24]
 16656              		.loc 1 6505 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 409


 16657 057c 04309BE5 		ldr	r3, [fp, #4]
 16658 0580 032082E0 		add	r2, r2, r3
 16659 0584 20301BE5 		ldr	r3, [fp, #-32]
 16660 0588 182083E5 		str	r2, [r3, #24]
 16661              	.L1052:
6506:../../Source/Kernel/rme_kernel.c ****         }
6507:../../Source/Kernel/rme_kernel.c ****     }
6508:../../Source/Kernel/rme_kernel.c **** 
6509:../../Source/Kernel/rme_kernel.c ****     /* Is the source time used up? If yes, delete it from the run queue, and notify its 
6510:../../Source/Kernel/rme_kernel.c ****      * parent. If it is not in the run queue, The state of the source must be BLOCKED. */
6511:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16662              		.loc 1 6511 22
 16663 058c 1C301BE5 		ldr	r3, [fp, #-28]
 16664 0590 183093E5 		ldr	r3, [r3, #24]
 16665              		.loc 1 6511 7
 16666 0594 000053E3 		cmp	r3, #0
 16667 0598 0A00001A 		bne	.L1057
6512:../../Source/Kernel/rme_kernel.c ****     {
6513:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6514:../../Source/Kernel/rme_kernel.c ****         
6515:../../Source/Kernel/rme_kernel.c ****         /* If it is blocked or have an exception, we neither change its state nor send
6516:../../Source/Kernel/rme_kernel.c ****          * the scheduler notification. It will be sent when the thread unblocks, or gets
6517:../../Source/Kernel/rme_kernel.c ****          * its exception handled. The rule of the thumb is, we only send scheduler 
6518:../../Source/Kernel/rme_kernel.c ****          * notifications when the thread really enter TIMEOUT or EXCPEND state. */
6519:../../Source/Kernel/rme_kernel.c ****         if(Thd_Src->Sched.State==RME_THD_READY)
 16668              		.loc 1 6519 26
 16669 059c 1C301BE5 		ldr	r3, [fp, #-28]
 16670 05a0 1C3093E5 		ldr	r3, [r3, #28]
 16671              		.loc 1 6519 11
 16672 05a4 000053E3 		cmp	r3, #0
 16673 05a8 0600001A 		bne	.L1057
6520:../../Source/Kernel/rme_kernel.c ****         {
6521:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6522:../../Source/Kernel/rme_kernel.c ****             
6523:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue */
6524:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Src);
 16674              		.loc 1 6524 13
 16675 05ac 1C001BE5 		ldr	r0, [fp, #-28]
 16676 05b0 FEFFFFEB 		bl	_RME_Run_Del
6525:../../Source/Kernel/rme_kernel.c ****             
6526:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6527:../../Source/Kernel/rme_kernel.c ****             Thd_Src->Sched.State=RME_THD_TIMEOUT;
 16677              		.loc 1 6527 33
 16678 05b4 1C301BE5 		ldr	r3, [fp, #-28]
 16679 05b8 0220A0E3 		mov	r2, #2
 16680 05bc 1C2083E5 		str	r2, [r3, #28]
6528:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Src);
 16681              		.loc 1 6528 13
 16682 05c0 1C001BE5 		ldr	r0, [fp, #-28]
 16683 05c4 FEFFFFEB 		bl	_RME_Run_Notif
 16684              	.L1057:
6529:../../Source/Kernel/rme_kernel.c ****         }
6530:../../Source/Kernel/rme_kernel.c ****         else
6531:../../Source/Kernel/rme_kernel.c ****         {
6532:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6533:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6534:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 410


6535:../../Source/Kernel/rme_kernel.c ****     }
6536:../../Source/Kernel/rme_kernel.c ****     else
6537:../../Source/Kernel/rme_kernel.c ****     {
6538:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6539:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6540:../../Source/Kernel/rme_kernel.c ****     }
6541:../../Source/Kernel/rme_kernel.c **** 
6542:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller 
6543:../../Source/Kernel/rme_kernel.c ****      * stack - how much time the destination have now */
6544:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,(rme_ret_t)(Thd_Dst->Sched.Slice));
 16685              		.loc 1 6544 56
 16686 05c8 20301BE5 		ldr	r3, [fp, #-32]
 16687 05cc 183093E5 		ldr	r3, [r3, #24]
 16688              		.loc 1 6544 5
 16689 05d0 0310A0E1 		mov	r1, r3
 16690 05d4 2C001BE5 		ldr	r0, [fp, #-44]
 16691 05d8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6545:../../Source/Kernel/rme_kernel.c **** 
6546:../../Source/Kernel/rme_kernel.c ****     /* See what was the state of the destination thread. If it is timeout, then activate
6547:../../Source/Kernel/rme_kernel.c ****      * it. If it is BLOCKED or EXCPEND, then leave it alone, and it will be activated
6548:../../Source/Kernel/rme_kernel.c ****      * when it unblocks or when the exception is handled. */
6549:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.State==RME_THD_TIMEOUT)
 16692              		.loc 1 6549 22
 16693 05dc 20301BE5 		ldr	r3, [fp, #-32]
 16694 05e0 1C3093E5 		ldr	r3, [r3, #28]
 16695              		.loc 1 6549 7
 16696 05e4 020053E3 		cmp	r3, #2
 16697 05e8 0400001A 		bne	.L1058
6550:../../Source/Kernel/rme_kernel.c ****     {
6551:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6552:../../Source/Kernel/rme_kernel.c **** 
6553:../../Source/Kernel/rme_kernel.c ****         /* Ready and add to runqueue */
6554:../../Source/Kernel/rme_kernel.c ****         Thd_Dst->Sched.State=RME_THD_READY;
 16698              		.loc 1 6554 29
 16699 05ec 20301BE5 		ldr	r3, [fp, #-32]
 16700 05f0 0020A0E3 		mov	r2, #0
 16701 05f4 1C2083E5 		str	r2, [r3, #28]
6555:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Thd_Dst);
 16702              		.loc 1 6555 9
 16703 05f8 20001BE5 		ldr	r0, [fp, #-32]
 16704 05fc FEFFFFEB 		bl	_RME_Run_Ins
 16705              	.L1058:
6556:../../Source/Kernel/rme_kernel.c ****     }
6557:../../Source/Kernel/rme_kernel.c ****     else
6558:../../Source/Kernel/rme_kernel.c ****     {
6559:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6560:../../Source/Kernel/rme_kernel.c ****     }
6561:../../Source/Kernel/rme_kernel.c ****     
6562:../../Source/Kernel/rme_kernel.c ****     /* All possible kernel send (scheduler notifications) done,
6563:../../Source/Kernel/rme_kernel.c ****      * now pick the highest priority thread to run */
6564:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 16706              		.loc 1 6564 5
 16707 0600 18101BE5 		ldr	r1, [fp, #-24]
 16708 0604 2C001BE5 		ldr	r0, [fp, #-44]
 16709 0608 FEFFFFEB 		bl	_RME_Kern_High
6565:../../Source/Kernel/rme_kernel.c **** 
6566:../../Source/Kernel/rme_kernel.c ****     return 0;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 411


 16710              		.loc 1 6566 12
 16711 060c 0030A0E3 		mov	r3, #0
 16712              	.L1020:
6567:../../Source/Kernel/rme_kernel.c **** }
 16713              		.loc 1 6567 1
 16714 0610 0300A0E1 		mov	r0, r3
 16715 0614 04D04BE2 		sub	sp, fp, #4
 16716              		.cfi_def_cfa 13, 8
 16717              		@ sp needed
 16718 0618 0088BDE8 		pop	{fp, pc}
 16719              		.cfi_endproc
 16720              	.LFE63:
 16722              		.section	.text._RME_Thd_Swt,"ax",%progbits
 16723              		.align	2
 16724              		.syntax unified
 16725              		.arm
 16727              	_RME_Thd_Swt:
 16728              	.LFB64:
6568:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Time_Xfer *******************************************/
6569:../../Source/Kernel/rme_kernel.c **** 
6570:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Swt ******************************************************
6571:../../Source/Kernel/rme_kernel.c **** Description : Switch to another thread. The thread to switch to must have the same
6572:../../Source/Kernel/rme_kernel.c ****               preemptive priority as this thread, and have time, and not blocked.
6573:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a higher priority thread, this is impossible
6574:../../Source/Kernel/rme_kernel.c ****               because whenever a thread with higher priority exists in the system,
6575:../../Source/Kernel/rme_kernel.c ****               the kernel wiull let it preempt the current thread. 
6576:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a lower priority thread, this is impossible
6577:../../Source/Kernel/rme_kernel.c ****               because the current thread just preempts it after the thread switch.
6578:../../Source/Kernel/rme_kernel.c ****               This syscall does not end with _RME_Kern_High because the user may
6579:../../Source/Kernel/rme_kernel.c ****               designate a specific thread rather than a random one.
6580:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
6581:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
6582:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread. If this is -1,
6583:../../Source/Kernel/rme_kernel.c ****                                   the kernel will pickup whatever thread that
6584:../../Source/Kernel/rme_kernel.c ****                                   has the highest priority and time to run. 
6585:../../Source/Kernel/rme_kernel.c ****                                   2-Level. 
6586:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Yield - This is a flag to indicate whether this
6587:../../Source/Kernel/rme_kernel.c ****                                    is a full yield. If it is, the kernel will
6588:../../Source/Kernel/rme_kernel.c ****                                    discard all the time alloted on this
6589:../../Source/Kernel/rme_kernel.c ****                                    thread. This only works for threads that
6590:../../Source/Kernel/rme_kernel.c ****                                    have a finite budget.
6591:../../Source/Kernel/rme_kernel.c **** Output      : None.
6592:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6593:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6594:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Swt(struct RME_Cap_Cpt* Cpt,
6595:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
6596:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
6597:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Yield)
6598:../../Source/Kernel/rme_kernel.c **** {
 16729              		.loc 1 6598 1
 16730              		.cfi_startproc
 16731              		@ args = 0, pretend = 0, frame = 40
 16732              		@ frame_needed = 1, uses_anonymous_args = 0
 16733 0000 00482DE9 		push	{fp, lr}
 16734              		.cfi_def_cfa_offset 8
 16735              		.cfi_offset 11, -8
 16736              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 412


 16737 0004 04B08DE2 		add	fp, sp, #4
 16738              		.cfi_def_cfa 11, 4
 16739 0008 28D04DE2 		sub	sp, sp, #40
 16740 000c 20000BE5 		str	r0, [fp, #-32]
 16741 0010 24100BE5 		str	r1, [fp, #-36]
 16742 0014 28200BE5 		str	r2, [fp, #-40]
 16743 0018 2C300BE5 		str	r3, [fp, #-44]
6599:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Cap_New;
6600:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6601:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_High;
6602:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6603:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6604:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6605:../../Source/Kernel/rme_kernel.c **** 
6606:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16744              		.loc 1 6606 10
 16745 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16746 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16747 0024 10300BE5 		str	r3, [fp, #-16]
6607:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 16748              		.loc 1 6607 12
 16749 0028 10301BE5 		ldr	r3, [fp, #-16]
 16750 002c 043093E5 		ldr	r3, [r3, #4]
 16751 0030 14300BE5 		str	r3, [fp, #-20]
6608:../../Source/Kernel/rme_kernel.c ****     
6609:../../Source/Kernel/rme_kernel.c ****     /* The caller have picked a thread to switch to */
6610:../../Source/Kernel/rme_kernel.c ****     if(Cap_Thd<RME_CID_NULL)
 16752              		.loc 1 6610 7
 16753 0034 28301BE5 		ldr	r3, [fp, #-40]
 16754 0038 020953E3 		cmp	r3, #32768
 16755 003c A60000AA 		bge	.L1060
6611:../../Source/Kernel/rme_kernel.c ****     {
6612:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6613:../../Source/Kernel/rme_kernel.c ****         
6614:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 16756              		.loc 1 6614 9
 16757 0040 28301BE5 		ldr	r3, [fp, #-40]
 16758 0044 803003E2 		and	r3, r3, #128
 16759 0048 000053E3 		cmp	r3, #0
 16760 004c 1C00001A 		bne	.L1061
 16761              		.loc 1 6614 9 is_stmt 0 discriminator 1
 16762 0050 20301BE5 		ldr	r3, [fp, #-32]
 16763 0054 142093E5 		ldr	r2, [r3, #20]
 16764 0058 28301BE5 		ldr	r3, [fp, #-40]
 16765 005c 030052E1 		cmp	r2, r3
 16766 0060 0100008A 		bhi	.L1062
 16767              		.loc 1 6614 9 discriminator 3
 16768 0064 0230E0E3 		mvn	r3, #2
 16769              		.loc 1 6614 9
 16770 0068 DF0000EA 		b	.L1063
 16771              	.L1062:
 16772              		.loc 1 6614 9 discriminator 4
 16773 006c 28301BE5 		ldr	r3, [fp, #-40]
 16774 0070 8322A0E1 		lsl	r2, r3, #5
 16775 0074 20301BE5 		ldr	r3, [fp, #-32]
 16776 0078 0C3093E5 		ldr	r3, [r3, #12]
 16777 007c 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 413


 16778 0080 08300BE5 		str	r3, [fp, #-8]
 16779 0084 08301BE5 		ldr	r3, [fp, #-8]
 16780 0088 0300A0E1 		mov	r0, r3
 16781 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16782 0090 18000BE5 		str	r0, [fp, #-24]
 16783              		.loc 1 6614 9 discriminator 1
 16784 0094 18301BE5 		ldr	r3, [fp, #-24]
 16785 0098 FF3803E2 		and	r3, r3, #16711680
 16786 009c 020853E3 		cmp	r3, #131072
 16787 00a0 0100001A 		bne	.L1064
 16788              		.loc 1 6614 9 discriminator 5
 16789 00a4 0830E0E3 		mvn	r3, #8
 16790              		.loc 1 6614 9
 16791 00a8 CF0000EA 		b	.L1063
 16792              	.L1064:
 16793              		.loc 1 6614 9 discriminator 6
 16794 00ac 18301BE5 		ldr	r3, [fp, #-24]
 16795 00b0 233CA0E1 		lsr	r3, r3, #24
 16796 00b4 060053E3 		cmp	r3, #6
 16797 00b8 3F00000A 		beq	.L1065
 16798              		.loc 1 6614 9 discriminator 7
 16799 00bc 0130E0E3 		mvn	r3, #1
 16800              		.loc 1 6614 9
 16801 00c0 C90000EA 		b	.L1063
 16802              	.L1061:
 16803              		.loc 1 6614 9 discriminator 2
 16804 00c4 28301BE5 		ldr	r3, [fp, #-40]
 16805 00c8 2324A0E1 		lsr	r2, r3, #8
 16806 00cc 20301BE5 		ldr	r3, [fp, #-32]
 16807 00d0 143093E5 		ldr	r3, [r3, #20]
 16808 00d4 030052E1 		cmp	r2, r3
 16809 00d8 0100003A 		bcc	.L1066
 16810              		.loc 1 6614 9 discriminator 8
 16811 00dc 0230E0E3 		mvn	r3, #2
 16812              		.loc 1 6614 9
 16813 00e0 C10000EA 		b	.L1063
 16814              	.L1066:
 16815              		.loc 1 6614 9 discriminator 9
 16816 00e4 28301BE5 		ldr	r3, [fp, #-40]
 16817 00e8 2334A0E1 		lsr	r3, r3, #8
 16818 00ec 8322A0E1 		lsl	r2, r3, #5
 16819 00f0 20301BE5 		ldr	r3, [fp, #-32]
 16820 00f4 0C3093E5 		ldr	r3, [r3, #12]
 16821 00f8 033082E0 		add	r3, r2, r3
 16822 00fc 08300BE5 		str	r3, [fp, #-8]
 16823 0100 08301BE5 		ldr	r3, [fp, #-8]
 16824 0104 0300A0E1 		mov	r0, r3
 16825 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16826 010c 18000BE5 		str	r0, [fp, #-24]
 16827              		.loc 1 6614 9 discriminator 1
 16828 0110 18301BE5 		ldr	r3, [fp, #-24]
 16829 0114 FF3803E2 		and	r3, r3, #16711680
 16830 0118 020853E3 		cmp	r3, #131072
 16831 011c 0100001A 		bne	.L1067
 16832              		.loc 1 6614 9 discriminator 10
 16833 0120 0830E0E3 		mvn	r3, #8
 16834              		.loc 1 6614 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 414


 16835 0124 B00000EA 		b	.L1063
 16836              	.L1067:
 16837              		.loc 1 6614 9 discriminator 11
 16838 0128 18301BE5 		ldr	r3, [fp, #-24]
 16839 012c 233CA0E1 		lsr	r3, r3, #24
 16840 0130 030053E3 		cmp	r3, #3
 16841 0134 0100000A 		beq	.L1068
 16842              		.loc 1 6614 9 discriminator 12
 16843 0138 0130E0E3 		mvn	r3, #1
 16844              		.loc 1 6614 9
 16845 013c AA0000EA 		b	.L1063
 16846              	.L1068:
 16847              		.loc 1 6614 9 discriminator 13
 16848 0140 28301BE5 		ldr	r3, [fp, #-40]
 16849 0144 7F2003E2 		and	r2, r3, #127
 16850 0148 08301BE5 		ldr	r3, [fp, #-8]
 16851 014c 143093E5 		ldr	r3, [r3, #20]
 16852 0150 030052E1 		cmp	r2, r3
 16853 0154 0100003A 		bcc	.L1069
 16854              		.loc 1 6614 9 discriminator 14
 16855 0158 0230E0E3 		mvn	r3, #2
 16856              		.loc 1 6614 9
 16857 015c A20000EA 		b	.L1063
 16858              	.L1069:
 16859              		.loc 1 6614 9 discriminator 15
 16860 0160 28301BE5 		ldr	r3, [fp, #-40]
 16861 0164 7F3003E2 		and	r3, r3, #127
 16862 0168 8322A0E1 		lsl	r2, r3, #5
 16863 016c 08301BE5 		ldr	r3, [fp, #-8]
 16864 0170 0C3093E5 		ldr	r3, [r3, #12]
 16865 0174 033082E0 		add	r3, r2, r3
 16866 0178 08300BE5 		str	r3, [fp, #-8]
 16867 017c 08301BE5 		ldr	r3, [fp, #-8]
 16868 0180 0300A0E1 		mov	r0, r3
 16869 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16870 0188 18000BE5 		str	r0, [fp, #-24]
 16871              		.loc 1 6614 9 discriminator 1
 16872 018c 18301BE5 		ldr	r3, [fp, #-24]
 16873 0190 FF3803E2 		and	r3, r3, #16711680
 16874 0194 020853E3 		cmp	r3, #131072
 16875 0198 0100001A 		bne	.L1070
 16876              		.loc 1 6614 9 discriminator 16
 16877 019c 0830E0E3 		mvn	r3, #8
 16878              		.loc 1 6614 9
 16879 01a0 910000EA 		b	.L1063
 16880              	.L1070:
 16881              		.loc 1 6614 9 discriminator 17
 16882 01a4 18301BE5 		ldr	r3, [fp, #-24]
 16883 01a8 233CA0E1 		lsr	r3, r3, #24
 16884 01ac 060053E3 		cmp	r3, #6
 16885 01b0 0100000A 		beq	.L1065
 16886              		.loc 1 6614 9 discriminator 18
 16887 01b4 0130E0E3 		mvn	r3, #1
 16888              		.loc 1 6614 9
 16889 01b8 8B0000EA 		b	.L1063
 16890              	.L1065:
6615:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Cap_New,Type_Stat);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 415


6616:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6617:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Cap_New,RME_THD_FLAG_SWT);
 16891              		.loc 1 6617 9 is_stmt 1
 16892 01bc 08301BE5 		ldr	r3, [fp, #-8]
 16893 01c0 083093E5 		ldr	r3, [r3, #8]
 16894 01c4 013C03E2 		and	r3, r3, #256
 16895 01c8 000053E3 		cmp	r3, #0
 16896 01cc 0100001A 		bne	.L1071
 16897              		.loc 1 6617 9 is_stmt 0 discriminator 1
 16898 01d0 0630E0E3 		mvn	r3, #6
 16899              		.loc 1 6617 9
 16900 01d4 840000EA 		b	.L1063
 16901              	.L1071:
6618:../../Source/Kernel/rme_kernel.c ****         /* See if we can do operation on this core */
6619:../../Source/Kernel/rme_kernel.c ****         Thd_New=RME_CAP_GETOBJ(Thd_Cap_New,struct RME_Thd_Struct*);
 16902              		.loc 1 6619 17 is_stmt 1
 16903 01d8 08301BE5 		ldr	r3, [fp, #-8]
 16904 01dc 0C3093E5 		ldr	r3, [r3, #12]
 16905              		.loc 1 6619 16
 16906 01e0 0C300BE5 		str	r3, [fp, #-12]
6620:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Local!=Local)
 16907              		.loc 1 6620 26
 16908 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 16909 01e8 143093E5 		ldr	r3, [r3, #20]
 16910              		.loc 1 6620 11
 16911 01ec 10201BE5 		ldr	r2, [fp, #-16]
 16912 01f0 030052E1 		cmp	r2, r3
 16913 01f4 0100000A 		beq	.L1072
6621:../../Source/Kernel/rme_kernel.c ****         {
6622:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6623:../../Source/Kernel/rme_kernel.c **** 
6624:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16914              		.loc 1 6624 20
 16915 01f8 CB30E0E3 		mvn	r3, #203
 16916 01fc 7A0000EA 		b	.L1063
 16917              	.L1072:
6625:../../Source/Kernel/rme_kernel.c ****         }
6626:../../Source/Kernel/rme_kernel.c ****         else
6627:../../Source/Kernel/rme_kernel.c ****         {
6628:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6629:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6630:../../Source/Kernel/rme_kernel.c ****         }
6631:../../Source/Kernel/rme_kernel.c ****             
6632:../../Source/Kernel/rme_kernel.c ****         /* See if we can yield to the thread */
6633:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Prio!=Thd_New->Sched.Prio)
 16918              		.loc 1 6633 26
 16919 0200 14301BE5 		ldr	r3, [fp, #-20]
 16920 0204 202093E5 		ldr	r2, [r3, #32]
 16921              		.loc 1 6633 47
 16922 0208 0C301BE5 		ldr	r3, [fp, #-12]
 16923 020c 203093E5 		ldr	r3, [r3, #32]
 16924              		.loc 1 6633 11
 16925 0210 030052E1 		cmp	r2, r3
 16926 0214 0100000A 		beq	.L1073
6634:../../Source/Kernel/rme_kernel.c ****         {
6635:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6636:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 416


6637:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 16927              		.loc 1 6637 20
 16928 0218 CC30E0E3 		mvn	r3, #204
 16929 021c 720000EA 		b	.L1063
 16930              	.L1073:
6638:../../Source/Kernel/rme_kernel.c ****         }
6639:../../Source/Kernel/rme_kernel.c ****         else
6640:../../Source/Kernel/rme_kernel.c ****         {
6641:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6642:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6643:../../Source/Kernel/rme_kernel.c ****         }
6644:../../Source/Kernel/rme_kernel.c ****             
6645:../../Source/Kernel/rme_kernel.c ****         /* Check if the target thread state is valid */
6646:../../Source/Kernel/rme_kernel.c ****         if((Thd_New->Sched.State==RME_THD_BLOCKED)||
 16931              		.loc 1 6646 27
 16932 0220 0C301BE5 		ldr	r3, [fp, #-12]
 16933 0224 1C3093E5 		ldr	r3, [r3, #28]
 16934              		.loc 1 6646 11
 16935 0228 010053E3 		cmp	r3, #1
 16936 022c 0700000A 		beq	.L1074
6647:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16937              		.loc 1 6647 27
 16938 0230 0C301BE5 		ldr	r3, [fp, #-12]
 16939 0234 1C3093E5 		ldr	r3, [r3, #28]
6646:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16940              		.loc 1 6646 51 discriminator 1
 16941 0238 020053E3 		cmp	r3, #2
 16942 023c 0300000A 		beq	.L1074
6648:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_EXCPEND))
 16943              		.loc 1 6648 27
 16944 0240 0C301BE5 		ldr	r3, [fp, #-12]
 16945 0244 1C3093E5 		ldr	r3, [r3, #28]
6647:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 16946              		.loc 1 6647 51
 16947 0248 030053E3 		cmp	r3, #3
 16948 024c 0100001A 		bne	.L1075
 16949              	.L1074:
6649:../../Source/Kernel/rme_kernel.c ****         {
6650:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6651:../../Source/Kernel/rme_kernel.c **** 
6652:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 16950              		.loc 1 6652 20
 16951 0250 CB30E0E3 		mvn	r3, #203
 16952 0254 640000EA 		b	.L1063
 16953              	.L1075:
6653:../../Source/Kernel/rme_kernel.c ****         }
6654:../../Source/Kernel/rme_kernel.c ****         else
6655:../../Source/Kernel/rme_kernel.c ****         {
6656:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6657:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6658:../../Source/Kernel/rme_kernel.c ****         }
6659:../../Source/Kernel/rme_kernel.c ****         
6660:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6661:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 16954              		.loc 1 6661 11
 16955 0258 2C301BE5 		ldr	r3, [fp, #-44]
 16956 025c 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 417


 16957 0260 4300000A 		beq	.L1076
 16958              		.loc 1 6661 43 discriminator 1
 16959 0264 14301BE5 		ldr	r3, [fp, #-20]
 16960 0268 183093E5 		ldr	r3, [r3, #24]
 16961              		.loc 1 6661 26 discriminator 1
 16962 026c 0E0173E3 		cmn	r3, #-2147483645
 16963 0270 3F00008A 		bhi	.L1076
6662:../../Source/Kernel/rme_kernel.c ****         {
6663:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6664:../../Source/Kernel/rme_kernel.c ****             
6665:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6666:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 16964              		.loc 1 6666 33
 16965 0274 14301BE5 		ldr	r3, [fp, #-20]
 16966 0278 0020A0E3 		mov	r2, #0
 16967 027c 182083E5 		str	r2, [r3, #24]
6667:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 16968              		.loc 1 6667 13
 16969 0280 14001BE5 		ldr	r0, [fp, #-20]
 16970 0284 FEFFFFEB 		bl	_RME_Run_Del
6668:../../Source/Kernel/rme_kernel.c ****             
6669:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6670:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 16971              		.loc 1 6670 33
 16972 0288 14301BE5 		ldr	r3, [fp, #-20]
 16973 028c 0220A0E3 		mov	r2, #2
 16974 0290 1C2083E5 		str	r2, [r3, #28]
6671:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 16975              		.loc 1 6671 13
 16976 0294 14001BE5 		ldr	r0, [fp, #-20]
 16977 0298 FEFFFFEB 		bl	_RME_Run_Notif
6672:../../Source/Kernel/rme_kernel.c ****             
6673:../../Source/Kernel/rme_kernel.c ****             /* Because we have sent a notification, we could have unblocked a
6674:../../Source/Kernel/rme_kernel.c ****              * thread at higher priority. Additionally, if the new thread is
6675:../../Source/Kernel/rme_kernel.c ****              * the current thread, we are forced to switch to someone else,
6676:../../Source/Kernel/rme_kernel.c ****              * because the current thread's timeslice must be exhausted. */
6677:../../Source/Kernel/rme_kernel.c ****             Thd_High=_RME_Run_High(Local);
 16978              		.loc 1 6677 22
 16979 029c 10001BE5 		ldr	r0, [fp, #-16]
 16980 02a0 FEFFFFEB 		bl	_RME_Run_High
 16981 02a4 1C000BE5 		str	r0, [fp, #-28]
6678:../../Source/Kernel/rme_kernel.c ****             if((Thd_High->Sched.Prio>Thd_New->Sched.Prio)||(Thd_Cur==Thd_New))
 16982              		.loc 1 6678 32
 16983 02a8 1C301BE5 		ldr	r3, [fp, #-28]
 16984 02ac 202093E5 		ldr	r2, [r3, #32]
 16985              		.loc 1 6678 52
 16986 02b0 0C301BE5 		ldr	r3, [fp, #-12]
 16987 02b4 203093E5 		ldr	r3, [r3, #32]
 16988              		.loc 1 6678 15
 16989 02b8 030052E1 		cmp	r2, r3
 16990 02bc 0300008A 		bhi	.L1077
 16991              		.loc 1 6678 58 discriminator 1
 16992 02c0 14201BE5 		ldr	r2, [fp, #-20]
 16993 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 16994 02c8 030052E1 		cmp	r2, r3
 16995 02cc 2800001A 		bne	.L1076
 16996              	.L1077:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 418


6679:../../Source/Kernel/rme_kernel.c ****             {
6680:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6681:../../Source/Kernel/rme_kernel.c **** 
6682:../../Source/Kernel/rme_kernel.c ****                 Thd_New=Thd_High;
 16997              		.loc 1 6682 24
 16998 02d0 1C301BE5 		ldr	r3, [fp, #-28]
 16999 02d4 0C300BE5 		str	r3, [fp, #-12]
 17000 02d8 250000EA 		b	.L1076
 17001              	.L1060:
6683:../../Source/Kernel/rme_kernel.c ****             }
6684:../../Source/Kernel/rme_kernel.c ****             else
6685:../../Source/Kernel/rme_kernel.c ****             {
6686:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6687:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6688:../../Source/Kernel/rme_kernel.c ****             }
6689:../../Source/Kernel/rme_kernel.c ****         }
6690:../../Source/Kernel/rme_kernel.c ****         else
6691:../../Source/Kernel/rme_kernel.c ****         {
6692:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6693:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6694:../../Source/Kernel/rme_kernel.c ****         }
6695:../../Source/Kernel/rme_kernel.c ****     }
6696:../../Source/Kernel/rme_kernel.c ****     /* The kernel needs to pick a thread to switch to */
6697:../../Source/Kernel/rme_kernel.c ****     else
6698:../../Source/Kernel/rme_kernel.c ****     {
6699:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6700:../../Source/Kernel/rme_kernel.c ****         
6701:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6702:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 17002              		.loc 1 6702 11
 17003 02dc 2C301BE5 		ldr	r3, [fp, #-44]
 17004 02e0 000053E3 		cmp	r3, #0
 17005 02e4 0E00000A 		beq	.L1078
 17006              		.loc 1 6702 43 discriminator 1
 17007 02e8 14301BE5 		ldr	r3, [fp, #-20]
 17008 02ec 183093E5 		ldr	r3, [r3, #24]
 17009              		.loc 1 6702 26 discriminator 1
 17010 02f0 0E0173E3 		cmn	r3, #-2147483645
 17011 02f4 0A00008A 		bhi	.L1078
6703:../../Source/Kernel/rme_kernel.c ****         {
6704:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6705:../../Source/Kernel/rme_kernel.c ****             
6706:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6707:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 17012              		.loc 1 6707 33
 17013 02f8 14301BE5 		ldr	r3, [fp, #-20]
 17014 02fc 0020A0E3 		mov	r2, #0
 17015 0300 182083E5 		str	r2, [r3, #24]
6708:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 17016              		.loc 1 6708 13
 17017 0304 14001BE5 		ldr	r0, [fp, #-20]
 17018 0308 FEFFFFEB 		bl	_RME_Run_Del
6709:../../Source/Kernel/rme_kernel.c ****             
6710:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6711:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 17019              		.loc 1 6711 33
 17020 030c 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 419


 17021 0310 0220A0E3 		mov	r2, #2
 17022 0314 1C2083E5 		str	r2, [r3, #28]
6712:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 17023              		.loc 1 6712 13
 17024 0318 14001BE5 		ldr	r0, [fp, #-20]
 17025 031c FEFFFFEB 		bl	_RME_Run_Notif
 17026 0320 100000EA 		b	.L1079
 17027              	.L1078:
6713:../../Source/Kernel/rme_kernel.c ****         }
6714:../../Source/Kernel/rme_kernel.c ****         else
6715:../../Source/Kernel/rme_kernel.c ****         {
6716:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6717:../../Source/Kernel/rme_kernel.c ****             
6718:../../Source/Kernel/rme_kernel.c ****             /* This operation is just to make sure that if there are any other
6719:../../Source/Kernel/rme_kernel.c ****              * thread at the same priority level, we're not switching to ourself */
6720:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 17028              		.loc 1 6720 13
 17029 0324 14301BE5 		ldr	r3, [fp, #-20]
 17030 0328 1C3093E5 		ldr	r3, [r3, #28]
 17031 032c 000053E3 		cmp	r3, #0
 17032 0330 0800000A 		beq	.L1080
 17033              		.loc 1 6720 13 is_stmt 0 discriminator 1
 17034 0334 003000E3 		movw	r3, #:lower16:.LC6
 17035 0338 003040E3 		movt	r3, #:upper16:.LC6
 17036 033c 002000E3 		movw	r2, #:lower16:.LC7
 17037 0340 002040E3 		movt	r2, #:upper16:.LC7
 17038 0344 691DA0E3 		mov	r1, #6720
 17039 0348 000000E3 		movw	r0, #:lower16:.LC8
 17040 034c 000040E3 		movt	r0, #:upper16:.LC8
 17041 0350 FEFFFFEB 		bl	RME_Log
 17042              	.L1081:
 17043              		.loc 1 6720 13
 17044 0354 FEFFFFEA 		b	.L1081
 17045              	.L1080:
6721:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 17046              		.loc 1 6721 13 is_stmt 1
 17047 0358 14001BE5 		ldr	r0, [fp, #-20]
 17048 035c FEFFFFEB 		bl	_RME_Run_Del
6722:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Cur);
 17049              		.loc 1 6722 13
 17050 0360 14001BE5 		ldr	r0, [fp, #-20]
 17051 0364 FEFFFFEB 		bl	_RME_Run_Ins
 17052              	.L1079:
6723:../../Source/Kernel/rme_kernel.c ****         }
6724:../../Source/Kernel/rme_kernel.c ****         
6725:../../Source/Kernel/rme_kernel.c ****         Thd_New=_RME_Run_High(Local);
 17053              		.loc 1 6725 17
 17054 0368 10001BE5 		ldr	r0, [fp, #-16]
 17055 036c FEFFFFEB 		bl	_RME_Run_High
 17056 0370 0C000BE5 		str	r0, [fp, #-12]
 17057              	.L1076:
6726:../../Source/Kernel/rme_kernel.c ****     }
6727:../../Source/Kernel/rme_kernel.c ****     
6728:../../Source/Kernel/rme_kernel.c ****     /* Now that we are successful, save the return value to the caller stack */
6729:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 17058              		.loc 1 6729 5
 17059 0374 0010A0E3 		mov	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 420


 17060 0378 24001BE5 		ldr	r0, [fp, #-36]
 17061 037c FEFFFFEB 		bl	__RME_Svc_Retval_Set
6730:../../Source/Kernel/rme_kernel.c **** 
6731:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 17062              		.loc 1 6731 5
 17063 0380 0C301BE5 		ldr	r3, [fp, #-12]
 17064 0384 1C3093E5 		ldr	r3, [r3, #28]
 17065 0388 000053E3 		cmp	r3, #0
 17066 038c 0800000A 		beq	.L1082
 17067              		.loc 1 6731 5 is_stmt 0 discriminator 1
 17068 0390 003000E3 		movw	r3, #:lower16:.LC6
 17069 0394 003040E3 		movt	r3, #:upper16:.LC6
 17070 0398 002000E3 		movw	r2, #:lower16:.LC7
 17071 039c 002040E3 		movt	r2, #:upper16:.LC7
 17072 03a0 4B1A01E3 		movw	r1, #6731
 17073 03a4 000000E3 		movw	r0, #:lower16:.LC8
 17074 03a8 000040E3 		movt	r0, #:upper16:.LC8
 17075 03ac FEFFFFEB 		bl	RME_Log
 17076              	.L1083:
 17077              		.loc 1 6731 5
 17078 03b0 FEFFFFEA 		b	.L1083
 17079              	.L1082:
6732:../../Source/Kernel/rme_kernel.c ****     /* We cannot call _RME_Kern_High because it picks some random thread. Instead,
6733:../../Source/Kernel/rme_kernel.c ****      * we use a manual implementation that is faster than the _RME_Kern_High. */
6734:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur==Thd_New)
 17080              		.loc 1 6734 7 is_stmt 1
 17081 03b4 14201BE5 		ldr	r2, [fp, #-20]
 17082 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 17083 03bc 030052E1 		cmp	r2, r3
 17084 03c0 0100001A 		bne	.L1084
6735:../../Source/Kernel/rme_kernel.c ****     {
6736:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6737:../../Source/Kernel/rme_kernel.c ****         
6738:../../Source/Kernel/rme_kernel.c ****         return 0;
 17085              		.loc 1 6738 16
 17086 03c4 0030A0E3 		mov	r3, #0
 17087 03c8 070000EA 		b	.L1063
 17088              	.L1084:
6739:../../Source/Kernel/rme_kernel.c ****     }
6740:../../Source/Kernel/rme_kernel.c ****     else
6741:../../Source/Kernel/rme_kernel.c ****     {
6742:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6743:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6744:../../Source/Kernel/rme_kernel.c ****     }
6745:../../Source/Kernel/rme_kernel.c ****             
6746:../../Source/Kernel/rme_kernel.c ****     /* We have a solid context switch at this point */
6747:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 17089              		.loc 1 6747 5
 17090 03cc 0C201BE5 		ldr	r2, [fp, #-12]
 17091 03d0 14101BE5 		ldr	r1, [fp, #-20]
 17092 03d4 24001BE5 		ldr	r0, [fp, #-36]
 17093 03d8 FEFFFFEB 		bl	_RME_Run_Swt
6748:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 17094              		.loc 1 6748 19
 17095 03dc 10301BE5 		ldr	r3, [fp, #-16]
 17096 03e0 0C201BE5 		ldr	r2, [fp, #-12]
 17097 03e4 042083E5 		str	r2, [r3, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 421


6749:../../Source/Kernel/rme_kernel.c **** 
6750:../../Source/Kernel/rme_kernel.c ****     return 0;
 17098              		.loc 1 6750 12
 17099 03e8 0030A0E3 		mov	r3, #0
 17100              	.L1063:
6751:../../Source/Kernel/rme_kernel.c **** }
 17101              		.loc 1 6751 1
 17102 03ec 0300A0E1 		mov	r0, r3
 17103 03f0 04D04BE2 		sub	sp, fp, #4
 17104              		.cfi_def_cfa 13, 8
 17105              		@ sp needed
 17106 03f4 0088BDE8 		pop	{fp, pc}
 17107              		.cfi_endproc
 17108              	.LFE64:
 17110              		.section	.text._RME_Sig_Boot_Crt,"ax",%progbits
 17111              		.align	2
 17112              		.global	_RME_Sig_Boot_Crt
 17113              		.syntax unified
 17114              		.arm
 17116              	_RME_Sig_Boot_Crt:
 17117              	.LFB65:
6752:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Swt *************************************************/
6753:../../Source/Kernel/rme_kernel.c **** 
6754:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Boot_Crt *************************************************
6755:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time kernel signal endpoint. This is only used at
6756:../../Source/Kernel/rme_kernel.c ****               boot-time to create endpoints that are related directly to 
6757:../../Source/Kernel/rme_kernel.c ****               hardware interrupts.
6758:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
6759:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6760:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6761:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6762:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6763:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6764:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6765:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6766:../../Source/Kernel/rme_kernel.c **** Output      : None.
6767:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6768:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6769:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Sig_Boot_Crt(struct RME_Cap_Cpt* Cpt,
6770:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
6771:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Sig)
6772:../../Source/Kernel/rme_kernel.c **** {
 17118              		.loc 1 6772 1
 17119              		.cfi_startproc
 17120              		@ args = 0, pretend = 0, frame = 32
 17121              		@ frame_needed = 1, uses_anonymous_args = 0
 17122 0000 00482DE9 		push	{fp, lr}
 17123              		.cfi_def_cfa_offset 8
 17124              		.cfi_offset 11, -8
 17125              		.cfi_offset 14, -4
 17126 0004 04B08DE2 		add	fp, sp, #4
 17127              		.cfi_def_cfa 11, 4
 17128 0008 20D04DE2 		sub	sp, sp, #32
 17129 000c 18000BE5 		str	r0, [fp, #-24]
 17130 0010 1C100BE5 		str	r1, [fp, #-28]
 17131 0014 20200BE5 		str	r2, [fp, #-32]
6773:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 422


6774:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Crt;
6775:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6776:../../Source/Kernel/rme_kernel.c ****     
6777:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6778:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17132              		.loc 1 6778 5
 17133 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17134 001c 803003E2 		and	r3, r3, #128
 17135 0020 000053E3 		cmp	r3, #0
 17136 0024 1C00001A 		bne	.L1086
 17137              		.loc 1 6778 5 is_stmt 0 discriminator 1
 17138 0028 18301BE5 		ldr	r3, [fp, #-24]
 17139 002c 142093E5 		ldr	r2, [r3, #20]
 17140 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17141 0034 030052E1 		cmp	r2, r3
 17142 0038 0100008A 		bhi	.L1087
 17143              		.loc 1 6778 5 discriminator 3
 17144 003c 0230E0E3 		mvn	r3, #2
 17145              		.loc 1 6778 5
 17146 0040 8A0000EA 		b	.L1088
 17147              	.L1087:
 17148              		.loc 1 6778 5 discriminator 4
 17149 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17150 0048 8322A0E1 		lsl	r2, r3, #5
 17151 004c 18301BE5 		ldr	r3, [fp, #-24]
 17152 0050 0C3093E5 		ldr	r3, [r3, #12]
 17153 0054 033082E0 		add	r3, r2, r3
 17154 0058 08300BE5 		str	r3, [fp, #-8]
 17155 005c 08301BE5 		ldr	r3, [fp, #-8]
 17156 0060 0300A0E1 		mov	r0, r3
 17157 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17158 0068 0C000BE5 		str	r0, [fp, #-12]
 17159              		.loc 1 6778 5 discriminator 1
 17160 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17161 0070 FF3803E2 		and	r3, r3, #16711680
 17162 0074 020853E3 		cmp	r3, #131072
 17163 0078 0100001A 		bne	.L1089
 17164              		.loc 1 6778 5 discriminator 5
 17165 007c 0830E0E3 		mvn	r3, #8
 17166              		.loc 1 6778 5
 17167 0080 7A0000EA 		b	.L1088
 17168              	.L1089:
 17169              		.loc 1 6778 5 discriminator 6
 17170 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17171 0088 233CA0E1 		lsr	r3, r3, #24
 17172 008c 030053E3 		cmp	r3, #3
 17173 0090 3F00000A 		beq	.L1090
 17174              		.loc 1 6778 5 discriminator 7
 17175 0094 0130E0E3 		mvn	r3, #1
 17176              		.loc 1 6778 5
 17177 0098 740000EA 		b	.L1088
 17178              	.L1086:
 17179              		.loc 1 6778 5 discriminator 2
 17180 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17181 00a0 2324A0E1 		lsr	r2, r3, #8
 17182 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17183 00a8 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 423


 17184 00ac 030052E1 		cmp	r2, r3
 17185 00b0 0100003A 		bcc	.L1091
 17186              		.loc 1 6778 5 discriminator 8
 17187 00b4 0230E0E3 		mvn	r3, #2
 17188              		.loc 1 6778 5
 17189 00b8 6C0000EA 		b	.L1088
 17190              	.L1091:
 17191              		.loc 1 6778 5 discriminator 9
 17192 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17193 00c0 2334A0E1 		lsr	r3, r3, #8
 17194 00c4 8322A0E1 		lsl	r2, r3, #5
 17195 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17196 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17197 00d0 033082E0 		add	r3, r2, r3
 17198 00d4 08300BE5 		str	r3, [fp, #-8]
 17199 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17200 00dc 0300A0E1 		mov	r0, r3
 17201 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17202 00e4 0C000BE5 		str	r0, [fp, #-12]
 17203              		.loc 1 6778 5 discriminator 1
 17204 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17205 00ec FF3803E2 		and	r3, r3, #16711680
 17206 00f0 020853E3 		cmp	r3, #131072
 17207 00f4 0100001A 		bne	.L1092
 17208              		.loc 1 6778 5 discriminator 10
 17209 00f8 0830E0E3 		mvn	r3, #8
 17210              		.loc 1 6778 5
 17211 00fc 5B0000EA 		b	.L1088
 17212              	.L1092:
 17213              		.loc 1 6778 5 discriminator 11
 17214 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17215 0104 233CA0E1 		lsr	r3, r3, #24
 17216 0108 030053E3 		cmp	r3, #3
 17217 010c 0100000A 		beq	.L1093
 17218              		.loc 1 6778 5 discriminator 12
 17219 0110 0130E0E3 		mvn	r3, #1
 17220              		.loc 1 6778 5
 17221 0114 550000EA 		b	.L1088
 17222              	.L1093:
 17223              		.loc 1 6778 5 discriminator 13
 17224 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17225 011c 7F2003E2 		and	r2, r3, #127
 17226 0120 08301BE5 		ldr	r3, [fp, #-8]
 17227 0124 143093E5 		ldr	r3, [r3, #20]
 17228 0128 030052E1 		cmp	r2, r3
 17229 012c 0100003A 		bcc	.L1094
 17230              		.loc 1 6778 5 discriminator 14
 17231 0130 0230E0E3 		mvn	r3, #2
 17232              		.loc 1 6778 5
 17233 0134 4D0000EA 		b	.L1088
 17234              	.L1094:
 17235              		.loc 1 6778 5 discriminator 15
 17236 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17237 013c 7F3003E2 		and	r3, r3, #127
 17238 0140 8322A0E1 		lsl	r2, r3, #5
 17239 0144 08301BE5 		ldr	r3, [fp, #-8]
 17240 0148 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 424


 17241 014c 033082E0 		add	r3, r2, r3
 17242 0150 08300BE5 		str	r3, [fp, #-8]
 17243 0154 08301BE5 		ldr	r3, [fp, #-8]
 17244 0158 0300A0E1 		mov	r0, r3
 17245 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17246 0160 0C000BE5 		str	r0, [fp, #-12]
 17247              		.loc 1 6778 5 discriminator 1
 17248 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17249 0168 FF3803E2 		and	r3, r3, #16711680
 17250 016c 020853E3 		cmp	r3, #131072
 17251 0170 0100001A 		bne	.L1095
 17252              		.loc 1 6778 5 discriminator 16
 17253 0174 0830E0E3 		mvn	r3, #8
 17254              		.loc 1 6778 5
 17255 0178 3C0000EA 		b	.L1088
 17256              	.L1095:
 17257              		.loc 1 6778 5 discriminator 17
 17258 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17259 0180 233CA0E1 		lsr	r3, r3, #24
 17260 0184 030053E3 		cmp	r3, #3
 17261 0188 0100000A 		beq	.L1090
 17262              		.loc 1 6778 5 discriminator 18
 17263 018c 0130E0E3 		mvn	r3, #1
 17264              		.loc 1 6778 5
 17265 0190 360000EA 		b	.L1088
 17266              	.L1090:
6779:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
6780:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6781:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 17267              		.loc 1 6781 5 is_stmt 1
 17268 0194 08301BE5 		ldr	r3, [fp, #-8]
 17269 0198 083093E5 		ldr	r3, [r3, #8]
 17270 019c 013003E2 		and	r3, r3, #1
 17271 01a0 000053E3 		cmp	r3, #0
 17272 01a4 0100001A 		bne	.L1096
 17273              		.loc 1 6781 5 is_stmt 0 discriminator 1
 17274 01a8 0630E0E3 		mvn	r3, #6
 17275              		.loc 1 6781 5
 17276 01ac 2F0000EA 		b	.L1088
 17277              	.L1096:
6782:../../Source/Kernel/rme_kernel.c ****     
6783:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6784:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17278              		.loc 1 6784 5 is_stmt 1
 17279 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17280 01b4 142093E5 		ldr	r2, [r3, #20]
 17281 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17282 01bc 030052E1 		cmp	r2, r3
 17283 01c0 0100008A 		bhi	.L1097
 17284              		.loc 1 6784 5 is_stmt 0 discriminator 1
 17285 01c4 0230E0E3 		mvn	r3, #2
 17286              		.loc 1 6784 5
 17287 01c8 280000EA 		b	.L1088
 17288              	.L1097:
 17289              		.loc 1 6784 5 discriminator 2
 17290 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17291 01d0 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 425


 17292 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17293 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17294 01dc 033082E0 		add	r3, r2, r3
 17295 01e0 10300BE5 		str	r3, [fp, #-16]
6785:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6786:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17296              		.loc 1 6786 5 is_stmt 1
 17297 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17298 01e8 0128A0E3 		mov	r2, #65536
 17299 01ec 0010A0E3 		mov	r1, #0
 17300 01f0 0300A0E1 		mov	r0, r3
 17301 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17302 01f8 0030A0E1 		mov	r3, r0
 17303              		.loc 1 6786 5 is_stmt 0 discriminator 1
 17304 01fc 000053E3 		cmp	r3, #0
 17305 0200 0100001A 		bne	.L1098
 17306 0204 0430E0E3 		mvn	r3, #4
 17307              		.loc 1 6786 5
 17308 0208 180000EA 		b	.L1088
 17309              	.L1098:
 17310              		.loc 1 6786 5 discriminator 2
 17311 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17312 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17313 0214 002093E5 		ldr	r2, [r3]
 17314 0218 10301BE5 		ldr	r3, [fp, #-16]
 17315 021c 102083E5 		str	r2, [r3, #16]
6787:../../Source/Kernel/rme_kernel.c ****     
6788:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6789:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=1U;
 17316              		.loc 1 6789 27 is_stmt 1
 17317 0220 10301BE5 		ldr	r3, [fp, #-16]
 17318 0224 0120A0E3 		mov	r2, #1
 17319 0228 042083E5 		str	r2, [r3, #4]
6790:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17320              		.loc 1 6790 25
 17321 022c 10301BE5 		ldr	r3, [fp, #-16]
 17322 0230 0020A0E3 		mov	r2, #0
 17323 0234 0C2083E5 		str	r2, [r3, #12]
6791:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17324              		.loc 1 6791 23
 17325 0238 10301BE5 		ldr	r3, [fp, #-16]
 17326 023c 3F20A0E3 		mov	r2, #63
 17327 0240 082083E5 		str	r2, [r3, #8]
6792:../../Source/Kernel/rme_kernel.c ****     
6793:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6794:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17328              		.loc 1 6794 21
 17329 0244 10301BE5 		ldr	r3, [fp, #-16]
 17330 0248 0020A0E3 		mov	r2, #0
 17331 024c 142083E5 		str	r2, [r3, #20]
6795:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=RME_NULL;
 17332              		.loc 1 6795 17
 17333 0250 10301BE5 		ldr	r3, [fp, #-16]
 17334 0254 0020A0E3 		mov	r2, #0
 17335 0258 182083E5 		str	r2, [r3, #24]
6796:../../Source/Kernel/rme_kernel.c **** 
6797:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 426


6798:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17336              		.loc 1 6798 5
 17337 025c 10301BE5 		ldr	r3, [fp, #-16]
 17338 0260 0213A0E3 		mov	r1, #134217728
 17339 0264 0300A0E1 		mov	r0, r3
 17340 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6799:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6800:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6801:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6802:../../Source/Kernel/rme_kernel.c **** 
6803:../../Source/Kernel/rme_kernel.c ****     return 0;
 17341              		.loc 1 6803 12
 17342 026c 0030A0E3 		mov	r3, #0
 17343              	.L1088:
6804:../../Source/Kernel/rme_kernel.c **** }
 17344              		.loc 1 6804 1
 17345 0270 0300A0E1 		mov	r0, r3
 17346 0274 04D04BE2 		sub	sp, fp, #4
 17347              		.cfi_def_cfa 13, 8
 17348              		@ sp needed
 17349 0278 0088BDE8 		pop	{fp, pc}
 17350              		.cfi_endproc
 17351              	.LFE65:
 17353              		.section	.text._RME_Sig_Crt,"ax",%progbits
 17354              		.align	2
 17355              		.syntax unified
 17356              		.arm
 17358              	_RME_Sig_Crt:
 17359              	.LFB66:
6805:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Boot_Crt ********************************************/
6806:../../Source/Kernel/rme_kernel.c **** 
6807:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Crt ******************************************************
6808:../../Source/Kernel/rme_kernel.c **** Description : Create a signal endpoint.
6809:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6810:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6811:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6812:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6813:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6814:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6815:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6816:../../Source/Kernel/rme_kernel.c **** Output      : None.
6817:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6818:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6819:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Crt(struct RME_Cap_Cpt* Cpt,
6820:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6821:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6822:../../Source/Kernel/rme_kernel.c **** {
 17360              		.loc 1 6822 1
 17361              		.cfi_startproc
 17362              		@ args = 0, pretend = 0, frame = 32
 17363              		@ frame_needed = 1, uses_anonymous_args = 0
 17364 0000 00482DE9 		push	{fp, lr}
 17365              		.cfi_def_cfa_offset 8
 17366              		.cfi_offset 11, -8
 17367              		.cfi_offset 14, -4
 17368 0004 04B08DE2 		add	fp, sp, #4
 17369              		.cfi_def_cfa 11, 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 427


 17370 0008 20D04DE2 		sub	sp, sp, #32
 17371 000c 18000BE5 		str	r0, [fp, #-24]
 17372 0010 1C100BE5 		str	r1, [fp, #-28]
 17373 0014 20200BE5 		str	r2, [fp, #-32]
6823:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6824:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Crt;
6825:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6826:../../Source/Kernel/rme_kernel.c ****     
6827:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6828:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17374              		.loc 1 6828 5
 17375 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17376 001c 803003E2 		and	r3, r3, #128
 17377 0020 000053E3 		cmp	r3, #0
 17378 0024 1C00001A 		bne	.L1100
 17379              		.loc 1 6828 5 is_stmt 0 discriminator 1
 17380 0028 18301BE5 		ldr	r3, [fp, #-24]
 17381 002c 142093E5 		ldr	r2, [r3, #20]
 17382 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17383 0034 030052E1 		cmp	r2, r3
 17384 0038 0100008A 		bhi	.L1101
 17385              		.loc 1 6828 5 discriminator 3
 17386 003c 0230E0E3 		mvn	r3, #2
 17387              		.loc 1 6828 5
 17388 0040 8A0000EA 		b	.L1102
 17389              	.L1101:
 17390              		.loc 1 6828 5 discriminator 4
 17391 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17392 0048 8322A0E1 		lsl	r2, r3, #5
 17393 004c 18301BE5 		ldr	r3, [fp, #-24]
 17394 0050 0C3093E5 		ldr	r3, [r3, #12]
 17395 0054 033082E0 		add	r3, r2, r3
 17396 0058 08300BE5 		str	r3, [fp, #-8]
 17397 005c 08301BE5 		ldr	r3, [fp, #-8]
 17398 0060 0300A0E1 		mov	r0, r3
 17399 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17400 0068 0C000BE5 		str	r0, [fp, #-12]
 17401              		.loc 1 6828 5 discriminator 1
 17402 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17403 0070 FF3803E2 		and	r3, r3, #16711680
 17404 0074 020853E3 		cmp	r3, #131072
 17405 0078 0100001A 		bne	.L1103
 17406              		.loc 1 6828 5 discriminator 5
 17407 007c 0830E0E3 		mvn	r3, #8
 17408              		.loc 1 6828 5
 17409 0080 7A0000EA 		b	.L1102
 17410              	.L1103:
 17411              		.loc 1 6828 5 discriminator 6
 17412 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17413 0088 233CA0E1 		lsr	r3, r3, #24
 17414 008c 030053E3 		cmp	r3, #3
 17415 0090 3F00000A 		beq	.L1104
 17416              		.loc 1 6828 5 discriminator 7
 17417 0094 0130E0E3 		mvn	r3, #1
 17418              		.loc 1 6828 5
 17419 0098 740000EA 		b	.L1102
 17420              	.L1100:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 428


 17421              		.loc 1 6828 5 discriminator 2
 17422 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17423 00a0 2324A0E1 		lsr	r2, r3, #8
 17424 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17425 00a8 143093E5 		ldr	r3, [r3, #20]
 17426 00ac 030052E1 		cmp	r2, r3
 17427 00b0 0100003A 		bcc	.L1105
 17428              		.loc 1 6828 5 discriminator 8
 17429 00b4 0230E0E3 		mvn	r3, #2
 17430              		.loc 1 6828 5
 17431 00b8 6C0000EA 		b	.L1102
 17432              	.L1105:
 17433              		.loc 1 6828 5 discriminator 9
 17434 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17435 00c0 2334A0E1 		lsr	r3, r3, #8
 17436 00c4 8322A0E1 		lsl	r2, r3, #5
 17437 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17438 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17439 00d0 033082E0 		add	r3, r2, r3
 17440 00d4 08300BE5 		str	r3, [fp, #-8]
 17441 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17442 00dc 0300A0E1 		mov	r0, r3
 17443 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17444 00e4 0C000BE5 		str	r0, [fp, #-12]
 17445              		.loc 1 6828 5 discriminator 1
 17446 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17447 00ec FF3803E2 		and	r3, r3, #16711680
 17448 00f0 020853E3 		cmp	r3, #131072
 17449 00f4 0100001A 		bne	.L1106
 17450              		.loc 1 6828 5 discriminator 10
 17451 00f8 0830E0E3 		mvn	r3, #8
 17452              		.loc 1 6828 5
 17453 00fc 5B0000EA 		b	.L1102
 17454              	.L1106:
 17455              		.loc 1 6828 5 discriminator 11
 17456 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17457 0104 233CA0E1 		lsr	r3, r3, #24
 17458 0108 030053E3 		cmp	r3, #3
 17459 010c 0100000A 		beq	.L1107
 17460              		.loc 1 6828 5 discriminator 12
 17461 0110 0130E0E3 		mvn	r3, #1
 17462              		.loc 1 6828 5
 17463 0114 550000EA 		b	.L1102
 17464              	.L1107:
 17465              		.loc 1 6828 5 discriminator 13
 17466 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17467 011c 7F2003E2 		and	r2, r3, #127
 17468 0120 08301BE5 		ldr	r3, [fp, #-8]
 17469 0124 143093E5 		ldr	r3, [r3, #20]
 17470 0128 030052E1 		cmp	r2, r3
 17471 012c 0100003A 		bcc	.L1108
 17472              		.loc 1 6828 5 discriminator 14
 17473 0130 0230E0E3 		mvn	r3, #2
 17474              		.loc 1 6828 5
 17475 0134 4D0000EA 		b	.L1102
 17476              	.L1108:
 17477              		.loc 1 6828 5 discriminator 15
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 429


 17478 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17479 013c 7F3003E2 		and	r3, r3, #127
 17480 0140 8322A0E1 		lsl	r2, r3, #5
 17481 0144 08301BE5 		ldr	r3, [fp, #-8]
 17482 0148 0C3093E5 		ldr	r3, [r3, #12]
 17483 014c 033082E0 		add	r3, r2, r3
 17484 0150 08300BE5 		str	r3, [fp, #-8]
 17485 0154 08301BE5 		ldr	r3, [fp, #-8]
 17486 0158 0300A0E1 		mov	r0, r3
 17487 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17488 0160 0C000BE5 		str	r0, [fp, #-12]
 17489              		.loc 1 6828 5 discriminator 1
 17490 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17491 0168 FF3803E2 		and	r3, r3, #16711680
 17492 016c 020853E3 		cmp	r3, #131072
 17493 0170 0100001A 		bne	.L1109
 17494              		.loc 1 6828 5 discriminator 16
 17495 0174 0830E0E3 		mvn	r3, #8
 17496              		.loc 1 6828 5
 17497 0178 3C0000EA 		b	.L1102
 17498              	.L1109:
 17499              		.loc 1 6828 5 discriminator 17
 17500 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17501 0180 233CA0E1 		lsr	r3, r3, #24
 17502 0184 030053E3 		cmp	r3, #3
 17503 0188 0100000A 		beq	.L1104
 17504              		.loc 1 6828 5 discriminator 18
 17505 018c 0130E0E3 		mvn	r3, #1
 17506              		.loc 1 6828 5
 17507 0190 360000EA 		b	.L1102
 17508              	.L1104:
6829:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
6830:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6831:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 17509              		.loc 1 6831 5 is_stmt 1
 17510 0194 08301BE5 		ldr	r3, [fp, #-8]
 17511 0198 083093E5 		ldr	r3, [r3, #8]
 17512 019c 013003E2 		and	r3, r3, #1
 17513 01a0 000053E3 		cmp	r3, #0
 17514 01a4 0100001A 		bne	.L1110
 17515              		.loc 1 6831 5 is_stmt 0 discriminator 1
 17516 01a8 0630E0E3 		mvn	r3, #6
 17517              		.loc 1 6831 5
 17518 01ac 2F0000EA 		b	.L1102
 17519              	.L1110:
6832:../../Source/Kernel/rme_kernel.c ****     
6833:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6834:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17520              		.loc 1 6834 5 is_stmt 1
 17521 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17522 01b4 142093E5 		ldr	r2, [r3, #20]
 17523 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17524 01bc 030052E1 		cmp	r2, r3
 17525 01c0 0100008A 		bhi	.L1111
 17526              		.loc 1 6834 5 is_stmt 0 discriminator 1
 17527 01c4 0230E0E3 		mvn	r3, #2
 17528              		.loc 1 6834 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 430


 17529 01c8 280000EA 		b	.L1102
 17530              	.L1111:
 17531              		.loc 1 6834 5 discriminator 2
 17532 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17533 01d0 8322A0E1 		lsl	r2, r3, #5
 17534 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17535 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17536 01dc 033082E0 		add	r3, r2, r3
 17537 01e0 10300BE5 		str	r3, [fp, #-16]
6835:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6836:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17538              		.loc 1 6836 5 is_stmt 1
 17539 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17540 01e8 0128A0E3 		mov	r2, #65536
 17541 01ec 0010A0E3 		mov	r1, #0
 17542 01f0 0300A0E1 		mov	r0, r3
 17543 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17544 01f8 0030A0E1 		mov	r3, r0
 17545              		.loc 1 6836 5 is_stmt 0 discriminator 1
 17546 01fc 000053E3 		cmp	r3, #0
 17547 0200 0100001A 		bne	.L1112
 17548 0204 0430E0E3 		mvn	r3, #4
 17549              		.loc 1 6836 5
 17550 0208 180000EA 		b	.L1102
 17551              	.L1112:
 17552              		.loc 1 6836 5 discriminator 2
 17553 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17554 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17555 0214 002093E5 		ldr	r2, [r3]
 17556 0218 10301BE5 		ldr	r3, [fp, #-16]
 17557 021c 102083E5 		str	r2, [r3, #16]
6837:../../Source/Kernel/rme_kernel.c **** 
6838:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6839:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=0U;
 17558              		.loc 1 6839 27 is_stmt 1
 17559 0220 10301BE5 		ldr	r3, [fp, #-16]
 17560 0224 0020A0E3 		mov	r2, #0
 17561 0228 042083E5 		str	r2, [r3, #4]
6840:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17562              		.loc 1 6840 25
 17563 022c 10301BE5 		ldr	r3, [fp, #-16]
 17564 0230 0020A0E3 		mov	r2, #0
 17565 0234 0C2083E5 		str	r2, [r3, #12]
6841:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17566              		.loc 1 6841 23
 17567 0238 10301BE5 		ldr	r3, [fp, #-16]
 17568 023c 3F20A0E3 		mov	r2, #63
 17569 0240 082083E5 		str	r2, [r3, #8]
6842:../../Source/Kernel/rme_kernel.c ****     
6843:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6844:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17570              		.loc 1 6844 21
 17571 0244 10301BE5 		ldr	r3, [fp, #-16]
 17572 0248 0020A0E3 		mov	r2, #0
 17573 024c 142083E5 		str	r2, [r3, #20]
6845:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=0U;
 17574              		.loc 1 6845 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 431


 17575 0250 10301BE5 		ldr	r3, [fp, #-16]
 17576 0254 0020A0E3 		mov	r2, #0
 17577 0258 182083E5 		str	r2, [r3, #24]
6846:../../Source/Kernel/rme_kernel.c ****     
6847:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6848:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17578              		.loc 1 6848 5
 17579 025c 10301BE5 		ldr	r3, [fp, #-16]
 17580 0260 0213A0E3 		mov	r1, #134217728
 17581 0264 0300A0E1 		mov	r0, r3
 17582 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6849:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6850:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6851:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6852:../../Source/Kernel/rme_kernel.c **** 
6853:../../Source/Kernel/rme_kernel.c ****     return 0;
 17583              		.loc 1 6853 12
 17584 026c 0030A0E3 		mov	r3, #0
 17585              	.L1102:
6854:../../Source/Kernel/rme_kernel.c **** }
 17586              		.loc 1 6854 1
 17587 0270 0300A0E1 		mov	r0, r3
 17588 0274 04D04BE2 		sub	sp, fp, #4
 17589              		.cfi_def_cfa 13, 8
 17590              		@ sp needed
 17591 0278 0088BDE8 		pop	{fp, pc}
 17592              		.cfi_endproc
 17593              	.LFE66:
 17595              		.section	.text._RME_Sig_Del,"ax",%progbits
 17596              		.align	2
 17597              		.syntax unified
 17598              		.arm
 17600              	_RME_Sig_Del:
 17601              	.LFB67:
6855:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Crt *************************************************/
6856:../../Source/Kernel/rme_kernel.c **** 
6857:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Del ******************************************************
6858:../../Source/Kernel/rme_kernel.c **** Description : Delete a signal endpoint.
6859:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6860:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
6861:../../Source/Kernel/rme_kernel.c ****                                   delete from.
6862:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6863:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
6864:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6865:../../Source/Kernel/rme_kernel.c **** Output      : None.
6866:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6867:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6868:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Del(struct RME_Cap_Cpt* Cpt,
6869:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6870:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6871:../../Source/Kernel/rme_kernel.c **** {
 17602              		.loc 1 6871 1
 17603              		.cfi_startproc
 17604              		@ args = 0, pretend = 0, frame = 32
 17605              		@ frame_needed = 1, uses_anonymous_args = 0
 17606 0000 00482DE9 		push	{fp, lr}
 17607              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 432


 17608              		.cfi_offset 11, -8
 17609              		.cfi_offset 14, -4
 17610 0004 04B08DE2 		add	fp, sp, #4
 17611              		.cfi_def_cfa 11, 4
 17612 0008 20D04DE2 		sub	sp, sp, #32
 17613 000c 18000BE5 		str	r0, [fp, #-24]
 17614 0010 1C100BE5 		str	r1, [fp, #-28]
 17615 0014 20200BE5 		str	r2, [fp, #-32]
6872:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6873:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Del;
6874:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6875:../../Source/Kernel/rme_kernel.c ****     
6876:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6877:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17616              		.loc 1 6877 5
 17617 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17618 001c 803003E2 		and	r3, r3, #128
 17619 0020 000053E3 		cmp	r3, #0
 17620 0024 1C00001A 		bne	.L1114
 17621              		.loc 1 6877 5 is_stmt 0 discriminator 1
 17622 0028 18301BE5 		ldr	r3, [fp, #-24]
 17623 002c 142093E5 		ldr	r2, [r3, #20]
 17624 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17625 0034 030052E1 		cmp	r2, r3
 17626 0038 0100008A 		bhi	.L1115
 17627              		.loc 1 6877 5 discriminator 3
 17628 003c 0230E0E3 		mvn	r3, #2
 17629              		.loc 1 6877 5
 17630 0040 B80000EA 		b	.L1116
 17631              	.L1115:
 17632              		.loc 1 6877 5 discriminator 4
 17633 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17634 0048 8322A0E1 		lsl	r2, r3, #5
 17635 004c 18301BE5 		ldr	r3, [fp, #-24]
 17636 0050 0C3093E5 		ldr	r3, [r3, #12]
 17637 0054 033082E0 		add	r3, r2, r3
 17638 0058 08300BE5 		str	r3, [fp, #-8]
 17639 005c 08301BE5 		ldr	r3, [fp, #-8]
 17640 0060 0300A0E1 		mov	r0, r3
 17641 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17642 0068 0C000BE5 		str	r0, [fp, #-12]
 17643              		.loc 1 6877 5 discriminator 1
 17644 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17645 0070 FF3803E2 		and	r3, r3, #16711680
 17646 0074 020853E3 		cmp	r3, #131072
 17647 0078 0100001A 		bne	.L1117
 17648              		.loc 1 6877 5 discriminator 5
 17649 007c 0830E0E3 		mvn	r3, #8
 17650              		.loc 1 6877 5
 17651 0080 A80000EA 		b	.L1116
 17652              	.L1117:
 17653              		.loc 1 6877 5 discriminator 6
 17654 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17655 0088 233CA0E1 		lsr	r3, r3, #24
 17656 008c 030053E3 		cmp	r3, #3
 17657 0090 3F00000A 		beq	.L1118
 17658              		.loc 1 6877 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 433


 17659 0094 0130E0E3 		mvn	r3, #1
 17660              		.loc 1 6877 5
 17661 0098 A20000EA 		b	.L1116
 17662              	.L1114:
 17663              		.loc 1 6877 5 discriminator 2
 17664 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17665 00a0 2324A0E1 		lsr	r2, r3, #8
 17666 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17667 00a8 143093E5 		ldr	r3, [r3, #20]
 17668 00ac 030052E1 		cmp	r2, r3
 17669 00b0 0100003A 		bcc	.L1119
 17670              		.loc 1 6877 5 discriminator 8
 17671 00b4 0230E0E3 		mvn	r3, #2
 17672              		.loc 1 6877 5
 17673 00b8 9A0000EA 		b	.L1116
 17674              	.L1119:
 17675              		.loc 1 6877 5 discriminator 9
 17676 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17677 00c0 2334A0E1 		lsr	r3, r3, #8
 17678 00c4 8322A0E1 		lsl	r2, r3, #5
 17679 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17680 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17681 00d0 033082E0 		add	r3, r2, r3
 17682 00d4 08300BE5 		str	r3, [fp, #-8]
 17683 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17684 00dc 0300A0E1 		mov	r0, r3
 17685 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17686 00e4 0C000BE5 		str	r0, [fp, #-12]
 17687              		.loc 1 6877 5 discriminator 1
 17688 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17689 00ec FF3803E2 		and	r3, r3, #16711680
 17690 00f0 020853E3 		cmp	r3, #131072
 17691 00f4 0100001A 		bne	.L1120
 17692              		.loc 1 6877 5 discriminator 10
 17693 00f8 0830E0E3 		mvn	r3, #8
 17694              		.loc 1 6877 5
 17695 00fc 890000EA 		b	.L1116
 17696              	.L1120:
 17697              		.loc 1 6877 5 discriminator 11
 17698 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17699 0104 233CA0E1 		lsr	r3, r3, #24
 17700 0108 030053E3 		cmp	r3, #3
 17701 010c 0100000A 		beq	.L1121
 17702              		.loc 1 6877 5 discriminator 12
 17703 0110 0130E0E3 		mvn	r3, #1
 17704              		.loc 1 6877 5
 17705 0114 830000EA 		b	.L1116
 17706              	.L1121:
 17707              		.loc 1 6877 5 discriminator 13
 17708 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17709 011c 7F2003E2 		and	r2, r3, #127
 17710 0120 08301BE5 		ldr	r3, [fp, #-8]
 17711 0124 143093E5 		ldr	r3, [r3, #20]
 17712 0128 030052E1 		cmp	r2, r3
 17713 012c 0100003A 		bcc	.L1122
 17714              		.loc 1 6877 5 discriminator 14
 17715 0130 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 434


 17716              		.loc 1 6877 5
 17717 0134 7B0000EA 		b	.L1116
 17718              	.L1122:
 17719              		.loc 1 6877 5 discriminator 15
 17720 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17721 013c 7F3003E2 		and	r3, r3, #127
 17722 0140 8322A0E1 		lsl	r2, r3, #5
 17723 0144 08301BE5 		ldr	r3, [fp, #-8]
 17724 0148 0C3093E5 		ldr	r3, [r3, #12]
 17725 014c 033082E0 		add	r3, r2, r3
 17726 0150 08300BE5 		str	r3, [fp, #-8]
 17727 0154 08301BE5 		ldr	r3, [fp, #-8]
 17728 0158 0300A0E1 		mov	r0, r3
 17729 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17730 0160 0C000BE5 		str	r0, [fp, #-12]
 17731              		.loc 1 6877 5 discriminator 1
 17732 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17733 0168 FF3803E2 		and	r3, r3, #16711680
 17734 016c 020853E3 		cmp	r3, #131072
 17735 0170 0100001A 		bne	.L1123
 17736              		.loc 1 6877 5 discriminator 16
 17737 0174 0830E0E3 		mvn	r3, #8
 17738              		.loc 1 6877 5
 17739 0178 6A0000EA 		b	.L1116
 17740              	.L1123:
 17741              		.loc 1 6877 5 discriminator 17
 17742 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17743 0180 233CA0E1 		lsr	r3, r3, #24
 17744 0184 030053E3 		cmp	r3, #3
 17745 0188 0100000A 		beq	.L1118
 17746              		.loc 1 6877 5 discriminator 18
 17747 018c 0130E0E3 		mvn	r3, #1
 17748              		.loc 1 6877 5
 17749 0190 640000EA 		b	.L1116
 17750              	.L1118:
6878:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
6879:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
6880:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 17751              		.loc 1 6880 5 is_stmt 1
 17752 0194 08301BE5 		ldr	r3, [fp, #-8]
 17753 0198 083093E5 		ldr	r3, [r3, #8]
 17754 019c 023003E2 		and	r3, r3, #2
 17755 01a0 000053E3 		cmp	r3, #0
 17756 01a4 0100001A 		bne	.L1124
 17757              		.loc 1 6880 5 is_stmt 0 discriminator 1
 17758 01a8 0630E0E3 		mvn	r3, #6
 17759              		.loc 1 6880 5
 17760 01ac 5D0000EA 		b	.L1116
 17761              	.L1124:
6881:../../Source/Kernel/rme_kernel.c ****     
6882:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6883:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Del);
 17762              		.loc 1 6883 5 is_stmt 1
 17763 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17764 01b4 142093E5 		ldr	r2, [r3, #20]
 17765 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17766 01bc 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 435


 17767 01c0 0100008A 		bhi	.L1125
 17768              		.loc 1 6883 5 is_stmt 0 discriminator 1
 17769 01c4 0230E0E3 		mvn	r3, #2
 17770              		.loc 1 6883 5
 17771 01c8 560000EA 		b	.L1116
 17772              	.L1125:
 17773              		.loc 1 6883 5 discriminator 2
 17774 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17775 01d0 8322A0E1 		lsl	r2, r3, #5
 17776 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17777 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17778 01dc 033082E0 		add	r3, r2, r3
 17779 01e0 10300BE5 		str	r3, [fp, #-16]
6884:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
6885:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Sig_Del,Type_Stat,RME_CAP_TYPE_SIG);
 17780              		.loc 1 6885 5 is_stmt 1
 17781 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17782 01e8 0300A0E1 		mov	r0, r3
 17783 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17784 01f0 0C000BE5 		str	r0, [fp, #-12]
 17785              		.loc 1 6885 5 is_stmt 0 discriminator 1
 17786 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 17787 01f8 FF3803E2 		and	r3, r3, #16711680
 17788 01fc 020853E3 		cmp	r3, #131072
 17789 0200 0100000A 		beq	.L1126
 17790 0204 0830E0E3 		mvn	r3, #8
 17791              		.loc 1 6885 5
 17792 0208 460000EA 		b	.L1116
 17793              	.L1126:
 17794              		.loc 1 6885 5 discriminator 2
 17795 020c 0C301BE5 		ldr	r3, [fp, #-12]
 17796 0210 233CA0E1 		lsr	r3, r3, #24
 17797 0214 080053E3 		cmp	r3, #8
 17798 0218 0100000A 		beq	.L1127
 17799              		.loc 1 6885 5 discriminator 3
 17800 021c 0130E0E3 		mvn	r3, #1
 17801              		.loc 1 6885 5
 17802 0220 400000EA 		b	.L1116
 17803              	.L1127:
 17804              		.loc 1 6885 5 discriminator 4
 17805 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17806 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17807 022c 002093E5 		ldr	r2, [r3]
 17808 0230 10301BE5 		ldr	r3, [fp, #-16]
 17809 0234 103093E5 		ldr	r3, [r3, #16]
 17810 0238 0310A0E1 		mov	r1, r3
 17811 023c 0200A0E1 		mov	r0, r2
 17812 0240 FEFFFFEB 		bl	_RME_Diff
 17813 0244 0030A0E1 		mov	r3, r0
 17814              		.loc 1 6885 5 discriminator 1
 17815 0248 0A0053E3 		cmp	r3, #10
 17816 024c 0100008A 		bhi	.L1128
 17817              		.loc 1 6885 5 discriminator 5
 17818 0250 0730E0E3 		mvn	r3, #7
 17819              		.loc 1 6885 5
 17820 0254 330000EA 		b	.L1116
 17821              	.L1128:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 436


 17822              		.loc 1 6885 5 discriminator 6
 17823 0258 10301BE5 		ldr	r3, [fp, #-16]
 17824 025c 043093E5 		ldr	r3, [r3, #4]
 17825 0260 000053E3 		cmp	r3, #0
 17826 0264 0B00000A 		beq	.L1129
 17827              		.loc 1 6885 5 discriminator 7
 17828 0268 0C301BE5 		ldr	r3, [fp, #-12]
 17829 026c 7330FFE6 		uxth	r3, r3
 17830 0270 000053E3 		cmp	r3, #0
 17831 0274 0500001A 		bne	.L1130
 17832              		.loc 1 6885 5 discriminator 9
 17833 0278 10001BE5 		ldr	r0, [fp, #-16]
 17834 027c 0C301BE5 		ldr	r3, [fp, #-12]
 17835 0280 FF38C3E3 		bic	r3, r3, #16711680
 17836 0284 0320A0E1 		mov	r2, r3
 17837 0288 0C101BE5 		ldr	r1, [fp, #-12]
 17838 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17839              	.L1130:
 17840              		.loc 1 6885 5 discriminator 11
 17841 0290 0530E0E3 		mvn	r3, #5
 17842              		.loc 1 6885 5
 17843 0294 230000EA 		b	.L1116
 17844              	.L1129:
 17845              		.loc 1 6885 5 discriminator 8
 17846 0298 0C301BE5 		ldr	r3, [fp, #-12]
 17847 029c 7330FFE6 		uxth	r3, r3
 17848 02a0 000053E3 		cmp	r3, #0
 17849 02a4 0800000A 		beq	.L1131
 17850              		.loc 1 6885 5 discriminator 12
 17851 02a8 003000E3 		movw	r3, #:lower16:.LC6
 17852 02ac 003040E3 		movt	r3, #:upper16:.LC6
 17853 02b0 002000E3 		movw	r2, #:lower16:.LC7
 17854 02b4 002040E3 		movt	r2, #:upper16:.LC7
 17855 02b8 E51A01E3 		movw	r1, #6885
 17856 02bc 000000E3 		movw	r0, #:lower16:.LC8
 17857 02c0 000040E3 		movt	r0, #:upper16:.LC8
 17858 02c4 FEFFFFEB 		bl	RME_Log
 17859              	.L1132:
 17860              		.loc 1 6885 5
 17861 02c8 FEFFFFEA 		b	.L1132
 17862              	.L1131:
6886:../../Source/Kernel/rme_kernel.c **** 
6887:../../Source/Kernel/rme_kernel.c ****     /* Check if the signal endpoint is currently used and cannot be deleted */
6888:../../Source/Kernel/rme_kernel.c ****     if(Sig_Del->Thd!=0U)
 17863              		.loc 1 6888 15 is_stmt 1
 17864 02cc 10301BE5 		ldr	r3, [fp, #-16]
 17865 02d0 183093E5 		ldr	r3, [r3, #24]
 17866              		.loc 1 6888 7
 17867 02d4 000053E3 		cmp	r3, #0
 17868 02d8 0700000A 		beq	.L1133
6889:../../Source/Kernel/rme_kernel.c ****     {
6890:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6891:../../Source/Kernel/rme_kernel.c **** 
6892:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Sig_Del,Type_Stat);
 17869              		.loc 1 6892 9
 17870 02dc 10001BE5 		ldr	r0, [fp, #-16]
 17871 02e0 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 437


 17872 02e4 FF38C3E3 		bic	r3, r3, #16711680
 17873 02e8 0320A0E1 		mov	r2, r3
 17874 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 17875 02f0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
6893:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 17876              		.loc 1 6893 16
 17877 02f4 4B3FE0E3 		mvn	r3, #300
 17878 02f8 0A0000EA 		b	.L1116
 17879              	.L1133:
6894:../../Source/Kernel/rme_kernel.c ****     }
6895:../../Source/Kernel/rme_kernel.c ****     else
6896:../../Source/Kernel/rme_kernel.c ****     {
6897:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6898:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6899:../../Source/Kernel/rme_kernel.c ****     }
6900:../../Source/Kernel/rme_kernel.c ****     
6901:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
6902:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Sig_Del,Type_Stat);
 17880              		.loc 1 6902 5
 17881 02fc 10301BE5 		ldr	r3, [fp, #-16]
 17882 0300 0020A0E3 		mov	r2, #0
 17883 0304 0C101BE5 		ldr	r1, [fp, #-12]
 17884 0308 0300A0E1 		mov	r0, r3
 17885 030c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17886 0310 0030A0E1 		mov	r3, r0
 17887              		.loc 1 6902 5 is_stmt 0 discriminator 1
 17888 0314 000053E3 		cmp	r3, #0
 17889 0318 0100001A 		bne	.L1134
 17890 031c 0030E0E3 		mvn	r3, #0
 17891              		.loc 1 6902 5
 17892 0320 000000EA 		b	.L1116
 17893              	.L1134:
6903:../../Source/Kernel/rme_kernel.c ****     
6904:../../Source/Kernel/rme_kernel.c ****     return 0;
 17894              		.loc 1 6904 12 is_stmt 1
 17895 0324 0030A0E3 		mov	r3, #0
 17896              	.L1116:
6905:../../Source/Kernel/rme_kernel.c **** }
 17897              		.loc 1 6905 1
 17898 0328 0300A0E1 		mov	r0, r3
 17899 032c 04D04BE2 		sub	sp, fp, #4
 17900              		.cfi_def_cfa 13, 8
 17901              		@ sp needed
 17902 0330 0088BDE8 		pop	{fp, pc}
 17903              		.cfi_endproc
 17904              	.LFE67:
 17906              		.section	.text._RME_Kern_High,"ax",%progbits
 17907              		.align	2
 17908              		.global	_RME_Kern_High
 17909              		.syntax unified
 17910              		.arm
 17912              	_RME_Kern_High:
 17913              	.LFB68:
6906:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Del *************************************************/
6907:../../Source/Kernel/rme_kernel.c **** 
6908:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_High ****************************************************
6909:../../Source/Kernel/rme_kernel.c **** Description : Pick the thread with the highest priority to run. Always call
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 438


6910:../../Source/Kernel/rme_kernel.c ****               this after you finish all your kernel sending stuff in the
6911:../../Source/Kernel/rme_kernel.c ****               interrupt handler, or the kernel send will not be correct.
6912:../../Source/Kernel/rme_kernel.c ****               This function is also used by system calls to pick a random
6913:../../Source/Kernel/rme_kernel.c ****               highest priority thread.
6914:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
6915:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure.
6916:../../Source/Kernel/rme_kernel.c **** Output      : volatile struct RME_Reg_Struct* Reg - The updated register set.
6917:../../Source/Kernel/rme_kernel.c **** Return      : None.
6918:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6919:../../Source/Kernel/rme_kernel.c **** void _RME_Kern_High(struct RME_Reg_Struct* Reg,
6920:../../Source/Kernel/rme_kernel.c ****                     struct RME_CPU_Local* Local)
6921:../../Source/Kernel/rme_kernel.c **** {
 17914              		.loc 1 6921 1
 17915              		.cfi_startproc
 17916              		@ args = 0, pretend = 0, frame = 16
 17917              		@ frame_needed = 1, uses_anonymous_args = 0
 17918 0000 00482DE9 		push	{fp, lr}
 17919              		.cfi_def_cfa_offset 8
 17920              		.cfi_offset 11, -8
 17921              		.cfi_offset 14, -4
 17922 0004 04B08DE2 		add	fp, sp, #4
 17923              		.cfi_def_cfa 11, 4
 17924 0008 10D04DE2 		sub	sp, sp, #16
 17925 000c 10000BE5 		str	r0, [fp, #-16]
 17926 0010 14100BE5 		str	r1, [fp, #-20]
6922:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6923:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6924:../../Source/Kernel/rme_kernel.c **** 
6925:../../Source/Kernel/rme_kernel.c ****     Thd_New=_RME_Run_High(Local);
 17927              		.loc 1 6925 13
 17928 0014 14001BE5 		ldr	r0, [fp, #-20]
 17929 0018 FEFFFFEB 		bl	_RME_Run_High
 17930 001c 08000BE5 		str	r0, [fp, #-8]
6926:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New!=RME_NULL);
 17931              		.loc 1 6926 5
 17932 0020 08301BE5 		ldr	r3, [fp, #-8]
 17933 0024 000053E3 		cmp	r3, #0
 17934 0028 0800001A 		bne	.L1136
 17935              		.loc 1 6926 5 is_stmt 0 discriminator 1
 17936 002c 003000E3 		movw	r3, #:lower16:.LC6
 17937 0030 003040E3 		movt	r3, #:upper16:.LC6
 17938 0034 002000E3 		movw	r2, #:lower16:.LC7
 17939 0038 002040E3 		movt	r2, #:upper16:.LC7
 17940 003c 0E1B01E3 		movw	r1, #6926
 17941 0040 000000E3 		movw	r0, #:lower16:.LC8
 17942 0044 000040E3 		movt	r0, #:upper16:.LC8
 17943 0048 FEFFFFEB 		bl	RME_Log
 17944              	.L1137:
 17945              		.loc 1 6926 5
 17946 004c FEFFFFEA 		b	.L1137
 17947              	.L1136:
6927:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 17948              		.loc 1 6927 12 is_stmt 1
 17949 0050 14301BE5 		ldr	r3, [fp, #-20]
 17950 0054 043093E5 		ldr	r3, [r3, #4]
 17951 0058 0C300BE5 		str	r3, [fp, #-12]
6928:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 439


6929:../../Source/Kernel/rme_kernel.c ****     /* Are these two threads the same? */
6930:../../Source/Kernel/rme_kernel.c ****     if(Thd_New==Thd_Cur)
 17952              		.loc 1 6930 7
 17953 005c 08201BE5 		ldr	r2, [fp, #-8]
 17954 0060 0C301BE5 		ldr	r3, [fp, #-12]
 17955 0064 030052E1 		cmp	r2, r3
 17956 0068 1E00000A 		beq	.L1143
6931:../../Source/Kernel/rme_kernel.c ****     {
6932:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6933:../../Source/Kernel/rme_kernel.c **** 
6934:../../Source/Kernel/rme_kernel.c ****         return;
6935:../../Source/Kernel/rme_kernel.c ****     }
6936:../../Source/Kernel/rme_kernel.c ****     else
6937:../../Source/Kernel/rme_kernel.c ****     {
6938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6939:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6940:../../Source/Kernel/rme_kernel.c ****     }
6941:../../Source/Kernel/rme_kernel.c **** 
6942:../../Source/Kernel/rme_kernel.c ****     /* Check if we need to do the context switch regardless of priority
6943:../../Source/Kernel/rme_kernel.c ****      * because the current thread is not ready yet. */
6944:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.State==RME_THD_READY)
 17957              		.loc 1 6944 22
 17958 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17959 0070 1C3093E5 		ldr	r3, [r3, #28]
 17960              		.loc 1 6944 7
 17961 0074 000053E3 		cmp	r3, #0
 17962 0078 0500001A 		bne	.L1140
6945:../../Source/Kernel/rme_kernel.c ****     {
6946:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6947:../../Source/Kernel/rme_kernel.c **** 
6948:../../Source/Kernel/rme_kernel.c ****         /* Check priority to see if the switch is necessary */
6949:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Prio<=Thd_Cur->Sched.Prio)
 17963              		.loc 1 6949 26
 17964 007c 08301BE5 		ldr	r3, [fp, #-8]
 17965 0080 202093E5 		ldr	r2, [r3, #32]
 17966              		.loc 1 6949 47
 17967 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17968 0088 203093E5 		ldr	r3, [r3, #32]
 17969              		.loc 1 6949 11
 17970 008c 030052E1 		cmp	r2, r3
 17971 0090 1600009A 		bls	.L1144
 17972              	.L1140:
6950:../../Source/Kernel/rme_kernel.c ****         {
6951:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6952:../../Source/Kernel/rme_kernel.c **** 
6953:../../Source/Kernel/rme_kernel.c ****             return;
6954:../../Source/Kernel/rme_kernel.c ****         }
6955:../../Source/Kernel/rme_kernel.c ****         else
6956:../../Source/Kernel/rme_kernel.c ****         {
6957:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6958:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6959:../../Source/Kernel/rme_kernel.c ****         }
6960:../../Source/Kernel/rme_kernel.c ****     }
6961:../../Source/Kernel/rme_kernel.c ****     else
6962:../../Source/Kernel/rme_kernel.c ****     {
6963:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6964:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 440


6965:../../Source/Kernel/rme_kernel.c ****     }
6966:../../Source/Kernel/rme_kernel.c **** 
6967:../../Source/Kernel/rme_kernel.c ****     /* We will have a solid context switch on this point. The current 
6968:../../Source/Kernel/rme_kernel.c ****      * thread is not necessarily READY, it could be EXCPEND as well. */
6969:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 17973              		.loc 1 6969 5
 17974 0094 08301BE5 		ldr	r3, [fp, #-8]
 17975 0098 1C3093E5 		ldr	r3, [r3, #28]
 17976 009c 000053E3 		cmp	r3, #0
 17977 00a0 0800000A 		beq	.L1141
 17978              		.loc 1 6969 5 is_stmt 0 discriminator 1
 17979 00a4 003000E3 		movw	r3, #:lower16:.LC6
 17980 00a8 003040E3 		movt	r3, #:upper16:.LC6
 17981 00ac 002000E3 		movw	r2, #:lower16:.LC7
 17982 00b0 002040E3 		movt	r2, #:upper16:.LC7
 17983 00b4 391B01E3 		movw	r1, #6969
 17984 00b8 000000E3 		movw	r0, #:lower16:.LC8
 17985 00bc 000040E3 		movt	r0, #:upper16:.LC8
 17986 00c0 FEFFFFEB 		bl	RME_Log
 17987              	.L1142:
 17988              		.loc 1 6969 5
 17989 00c4 FEFFFFEA 		b	.L1142
 17990              	.L1141:
6970:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 17991              		.loc 1 6970 5 is_stmt 1
 17992 00c8 08201BE5 		ldr	r2, [fp, #-8]
 17993 00cc 0C101BE5 		ldr	r1, [fp, #-12]
 17994 00d0 10001BE5 		ldr	r0, [fp, #-16]
 17995 00d4 FEFFFFEB 		bl	_RME_Run_Swt
6971:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 17996              		.loc 1 6971 19
 17997 00d8 14301BE5 		ldr	r3, [fp, #-20]
 17998 00dc 08201BE5 		ldr	r2, [fp, #-8]
 17999 00e0 042083E5 		str	r2, [r3, #4]
 18000 00e4 020000EA 		b	.L1135
 18001              	.L1143:
6934:../../Source/Kernel/rme_kernel.c ****     }
 18002              		.loc 1 6934 9
 18003 00e8 00F020E3 		nop
 18004 00ec 000000EA 		b	.L1135
 18005              	.L1144:
6953:../../Source/Kernel/rme_kernel.c ****         }
 18006              		.loc 1 6953 13
 18007 00f0 00F020E3 		nop
 18008              	.L1135:
6972:../../Source/Kernel/rme_kernel.c **** }
 18009              		.loc 1 6972 1
 18010 00f4 04D04BE2 		sub	sp, fp, #4
 18011              		.cfi_def_cfa 13, 8
 18012              		@ sp needed
 18013 00f8 0088BDE8 		pop	{fp, pc}
 18014              		.cfi_endproc
 18015              	.LFE68:
 18017              		.section	.text._RME_Kern_Snd,"ax",%progbits
 18018              		.align	2
 18019              		.global	_RME_Kern_Snd
 18020              		.syntax unified
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 441


 18021              		.arm
 18023              	_RME_Kern_Snd:
 18024              	.LFB69:
6973:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_High ***********************************************/
6974:../../Source/Kernel/rme_kernel.c **** 
6975:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_Snd *****************************************************
6976:../../Source/Kernel/rme_kernel.c **** Description : Try to send a signal to an endpoint from kernel. This is intended
6977:../../Source/Kernel/rme_kernel.c ****               to be called in the interrupt routines in the kernel, and this is
6978:../../Source/Kernel/rme_kernel.c ****               not a system call. The capability passed in must be the root
6979:../../Source/Kernel/rme_kernel.c ****               capability, and this function will not check whether it really is.
6980:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Sig* Cap_Sig - The signal root capability.
6981:../../Source/Kernel/rme_kernel.c **** Output      : None.
6982:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
6983:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6984:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kern_Snd(struct RME_Cap_Sig* Cap_Sig)
6985:../../Source/Kernel/rme_kernel.c **** {
 18025              		.loc 1 6985 1
 18026              		.cfi_startproc
 18027              		@ args = 0, pretend = 0, frame = 16
 18028              		@ frame_needed = 1, uses_anonymous_args = 0
 18029 0000 00482DE9 		push	{fp, lr}
 18030              		.cfi_def_cfa_offset 8
 18031              		.cfi_offset 11, -8
 18032              		.cfi_offset 14, -4
 18033 0004 04B08DE2 		add	fp, sp, #4
 18034              		.cfi_def_cfa 11, 4
 18035 0008 10D04DE2 		sub	sp, sp, #16
 18036 000c 10000BE5 		str	r0, [fp, #-16]
6986:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
6987:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Sig;
6988:../../Source/Kernel/rme_kernel.c ****     
6989:../../Source/Kernel/rme_kernel.c ****     Thd_Sig=Cap_Sig->Thd;
 18037              		.loc 1 6989 12
 18038 0010 10301BE5 		ldr	r3, [fp, #-16]
 18039 0014 183093E5 		ldr	r3, [r3, #24]
 18040 0018 0C300BE5 		str	r3, [fp, #-12]
6990:../../Source/Kernel/rme_kernel.c ****     
6991:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
6992:../../Source/Kernel/rme_kernel.c ****     if(Thd_Sig!=RME_NULL)
 18041              		.loc 1 6992 7
 18042 001c 0C301BE5 		ldr	r3, [fp, #-12]
 18043 0020 000053E3 		cmp	r3, #0
 18044 0024 0B00000A 		beq	.L1146
6993:../../Source/Kernel/rme_kernel.c ****     {
6994:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6995:../../Source/Kernel/rme_kernel.c **** 
6996:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Local==RME_CPU_LOCAL())
 18045              		.loc 1 6996 26
 18046 0028 0C301BE5 		ldr	r3, [fp, #-12]
 18047 002c 142093E5 		ldr	r2, [r3, #20]
 18048              		.loc 1 6996 11
 18049 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18050 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18051 0038 030052E1 		cmp	r2, r3
 18052 003c 0200001A 		bne	.L1147
6997:../../Source/Kernel/rme_kernel.c ****         {
6998:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 442


6999:../../Source/Kernel/rme_kernel.c **** 
7000:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 18053              		.loc 1 7000 20
 18054 0040 0130A0E3 		mov	r3, #1
 18055 0044 08300BE5 		str	r3, [fp, #-8]
 18056 0048 040000EA 		b	.L1148
 18057              	.L1147:
7001:../../Source/Kernel/rme_kernel.c ****         }
7002:../../Source/Kernel/rme_kernel.c ****         else
7003:../../Source/Kernel/rme_kernel.c ****         {
7004:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7005:../../Source/Kernel/rme_kernel.c **** 
7006:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 18058              		.loc 1 7006 20
 18059 004c 0030A0E3 		mov	r3, #0
 18060 0050 08300BE5 		str	r3, [fp, #-8]
 18061 0054 010000EA 		b	.L1148
 18062              	.L1146:
7007:../../Source/Kernel/rme_kernel.c ****         }
7008:../../Source/Kernel/rme_kernel.c ****     }
7009:../../Source/Kernel/rme_kernel.c ****     else
7010:../../Source/Kernel/rme_kernel.c ****     {
7011:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7012:../../Source/Kernel/rme_kernel.c **** 
7013:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 18063              		.loc 1 7013 16
 18064 0058 0030A0E3 		mov	r3, #0
 18065 005c 08300BE5 		str	r3, [fp, #-8]
 18066              	.L1148:
7014:../../Source/Kernel/rme_kernel.c ****     }
7015:../../Source/Kernel/rme_kernel.c **** 
7016:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 18067              		.loc 1 7016 7
 18068 0060 08301BE5 		ldr	r3, [fp, #-8]
 18069 0064 000053E3 		cmp	r3, #0
 18070 0068 1700000A 		beq	.L1149
7017:../../Source/Kernel/rme_kernel.c ****     {
7018:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7019:../../Source/Kernel/rme_kernel.c **** 
7020:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7021:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7022:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7023:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7024:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Sig->Ctx.Reg->Reg),1);
 18071              		.loc 1 7024 44
 18072 006c 0C301BE5 		ldr	r3, [fp, #-12]
 18073 0070 483093E5 		ldr	r3, [r3, #72]
 18074              		.loc 1 7024 9
 18075 0074 0110A0E3 		mov	r1, #1
 18076 0078 0300A0E1 		mov	r0, r3
 18077 007c FEFFFFEB 		bl	__RME_Svc_Retval_Set
7025:../../Source/Kernel/rme_kernel.c ****         
7026:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7027:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Slice!=0U)
 18078              		.loc 1 7027 26
 18079 0080 0C301BE5 		ldr	r3, [fp, #-12]
 18080 0084 183093E5 		ldr	r3, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 443


 18081              		.loc 1 7027 11
 18082 0088 000053E3 		cmp	r3, #0
 18083 008c 0500000A 		beq	.L1150
7028:../../Source/Kernel/rme_kernel.c ****         {
7029:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7030:../../Source/Kernel/rme_kernel.c **** 
7031:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7032:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_READY;
 18084              		.loc 1 7032 33
 18085 0090 0C301BE5 		ldr	r3, [fp, #-12]
 18086 0094 0020A0E3 		mov	r2, #0
 18087 0098 1C2083E5 		str	r2, [r3, #28]
7033:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Sig);
 18088              		.loc 1 7033 13
 18089 009c 0C001BE5 		ldr	r0, [fp, #-12]
 18090 00a0 FEFFFFEB 		bl	_RME_Run_Ins
 18091 00a4 040000EA 		b	.L1151
 18092              	.L1150:
7034:../../Source/Kernel/rme_kernel.c ****         }
7035:../../Source/Kernel/rme_kernel.c ****         else
7036:../../Source/Kernel/rme_kernel.c ****         {
7037:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7038:../../Source/Kernel/rme_kernel.c **** 
7039:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7040:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_TIMEOUT;
 18093              		.loc 1 7040 33
 18094 00a8 0C301BE5 		ldr	r3, [fp, #-12]
 18095 00ac 0220A0E3 		mov	r2, #2
 18096 00b0 1C2083E5 		str	r2, [r3, #28]
7041:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Sig);
 18097              		.loc 1 7041 13
 18098 00b4 0C001BE5 		ldr	r0, [fp, #-12]
 18099 00b8 FEFFFFEB 		bl	_RME_Run_Notif
 18100              	.L1151:
7042:../../Source/Kernel/rme_kernel.c ****         }
7043:../../Source/Kernel/rme_kernel.c ****         
7044:../../Source/Kernel/rme_kernel.c ****         /* We will not pick the highest priority thread here immediately, 
7045:../../Source/Kernel/rme_kernel.c ****          * because we may send to a myriad of endpoints in one interrupt, and
7046:../../Source/Kernel/rme_kernel.c ****          * we hope to perform the context switch only once when exiting that
7047:../../Source/Kernel/rme_kernel.c ****          * handler. Also note that the current thread could be EXCPEND as well;
7048:../../Source/Kernel/rme_kernel.c ****          * this is different from the normal signal sending system call. */
7049:../../Source/Kernel/rme_kernel.c ****         
7050:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7051:../../Source/Kernel/rme_kernel.c ****         Cap_Sig->Thd=RME_NULL;
 18101              		.loc 1 7051 21
 18102 00bc 10301BE5 		ldr	r3, [fp, #-16]
 18103 00c0 0020A0E3 		mov	r2, #0
 18104 00c4 182083E5 		str	r2, [r3, #24]
 18105 00c8 0F0000EA 		b	.L1152
 18106              	.L1149:
7052:../../Source/Kernel/rme_kernel.c ****     }
7053:../../Source/Kernel/rme_kernel.c ****     else
7054:../../Source/Kernel/rme_kernel.c ****     {
7055:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7056:../../Source/Kernel/rme_kernel.c **** 
7057:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, or nobody blocked.
7058:../../Source/Kernel/rme_kernel.c ****          * We just faa the counter value and return. */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 444


7059:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Cap_Sig->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 18107              		.loc 1 7059 12
 18108 00cc 10301BE5 		ldr	r3, [fp, #-16]
 18109 00d0 143083E2 		add	r3, r3, #20
 18110 00d4 0110A0E3 		mov	r1, #1
 18111 00d8 0300A0E1 		mov	r0, r3
 18112 00dc FEFFFFEB 		bl	_RME_Fetch_Add_Single
 18113 00e0 0030A0E1 		mov	r3, r0
 18114              		.loc 1 7059 11 discriminator 1
 18115 00e4 0A0173E3 		cmn	r3, #-2147483646
 18116 00e8 0700009A 		bls	.L1152
7060:../../Source/Kernel/rme_kernel.c ****         {
7061:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7062:../../Source/Kernel/rme_kernel.c **** 
7063:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Cap_Sig->Sig_Num),-1);
 18117              		.loc 1 7063 13
 18118 00ec 10301BE5 		ldr	r3, [fp, #-16]
 18119 00f0 143083E2 		add	r3, r3, #20
 18120 00f4 0010E0E3 		mvn	r1, #0
 18121 00f8 0300A0E1 		mov	r0, r3
 18122 00fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
7064:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 18123              		.loc 1 7064 20
 18124 0100 D13E0FE3 		movw	r3, #65233
 18125 0104 FF3F4FE3 		movt	r3, 65535
 18126 0108 000000EA 		b	.L1153
 18127              	.L1152:
7065:../../Source/Kernel/rme_kernel.c ****         }
7066:../../Source/Kernel/rme_kernel.c ****         else
7067:../../Source/Kernel/rme_kernel.c ****         {
7068:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7069:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7070:../../Source/Kernel/rme_kernel.c ****         }
7071:../../Source/Kernel/rme_kernel.c ****     }
7072:../../Source/Kernel/rme_kernel.c **** 
7073:../../Source/Kernel/rme_kernel.c ****     return 0;
 18128              		.loc 1 7073 12
 18129 010c 0030A0E3 		mov	r3, #0
 18130              	.L1153:
7074:../../Source/Kernel/rme_kernel.c **** }
 18131              		.loc 1 7074 1
 18132 0110 0300A0E1 		mov	r0, r3
 18133 0114 04D04BE2 		sub	sp, fp, #4
 18134              		.cfi_def_cfa 13, 8
 18135              		@ sp needed
 18136 0118 0088BDE8 		pop	{fp, pc}
 18137              		.cfi_endproc
 18138              	.LFE69:
 18140              		.section	.text._RME_Sig_Snd,"ax",%progbits
 18141              		.align	2
 18142              		.syntax unified
 18143              		.arm
 18145              	_RME_Sig_Snd:
 18146              	.LFB70:
7075:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_Snd ************************************************/
7076:../../Source/Kernel/rme_kernel.c **** 
7077:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Snd ******************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 445


7078:../../Source/Kernel/rme_kernel.c **** Description : Try to send to a signal endpoint. This system call can cause
7079:../../Source/Kernel/rme_kernel.c ****               a potential context switch.
7080:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7081:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7082:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7083:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7084:../../Source/Kernel/rme_kernel.c **** Output      : None.
7085:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7086:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7087:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Snd(struct RME_Cap_Cpt* Cpt, 
7088:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7089:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
7090:../../Source/Kernel/rme_kernel.c **** {
 18147              		.loc 1 7090 1
 18148              		.cfi_startproc
 18149              		@ args = 0, pretend = 0, frame = 40
 18150              		@ frame_needed = 1, uses_anonymous_args = 0
 18151 0000 00482DE9 		push	{fp, lr}
 18152              		.cfi_def_cfa_offset 8
 18153              		.cfi_offset 11, -8
 18154              		.cfi_offset 14, -4
 18155 0004 04B08DE2 		add	fp, sp, #4
 18156              		.cfi_def_cfa 11, 4
 18157 0008 28D04DE2 		sub	sp, sp, #40
 18158 000c 20000BE5 		str	r0, [fp, #-32]
 18159 0010 24100BE5 		str	r1, [fp, #-36]
 18160 0014 28200BE5 		str	r2, [fp, #-40]
7091:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7092:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7093:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Rcv;
7094:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7095:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7096:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7097:../../Source/Kernel/rme_kernel.c ****     
7098:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7099:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 18161              		.loc 1 7099 5
 18162 0018 28301BE5 		ldr	r3, [fp, #-40]
 18163 001c 803003E2 		and	r3, r3, #128
 18164 0020 000053E3 		cmp	r3, #0
 18165 0024 1C00001A 		bne	.L1155
 18166              		.loc 1 7099 5 is_stmt 0 discriminator 1
 18167 0028 20301BE5 		ldr	r3, [fp, #-32]
 18168 002c 142093E5 		ldr	r2, [r3, #20]
 18169 0030 28301BE5 		ldr	r3, [fp, #-40]
 18170 0034 030052E1 		cmp	r2, r3
 18171 0038 0100008A 		bhi	.L1156
 18172              		.loc 1 7099 5 discriminator 3
 18173 003c 0230E0E3 		mvn	r3, #2
 18174              		.loc 1 7099 5
 18175 0040 AF0000EA 		b	.L1157
 18176              	.L1156:
 18177              		.loc 1 7099 5 discriminator 4
 18178 0044 28301BE5 		ldr	r3, [fp, #-40]
 18179 0048 8322A0E1 		lsl	r2, r3, #5
 18180 004c 20301BE5 		ldr	r3, [fp, #-32]
 18181 0050 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 446


 18182 0054 033082E0 		add	r3, r2, r3
 18183 0058 08300BE5 		str	r3, [fp, #-8]
 18184 005c 08301BE5 		ldr	r3, [fp, #-8]
 18185 0060 0300A0E1 		mov	r0, r3
 18186 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18187 0068 10000BE5 		str	r0, [fp, #-16]
 18188              		.loc 1 7099 5 discriminator 1
 18189 006c 10301BE5 		ldr	r3, [fp, #-16]
 18190 0070 FF3803E2 		and	r3, r3, #16711680
 18191 0074 020853E3 		cmp	r3, #131072
 18192 0078 0100001A 		bne	.L1158
 18193              		.loc 1 7099 5 discriminator 5
 18194 007c 0830E0E3 		mvn	r3, #8
 18195              		.loc 1 7099 5
 18196 0080 9F0000EA 		b	.L1157
 18197              	.L1158:
 18198              		.loc 1 7099 5 discriminator 6
 18199 0084 10301BE5 		ldr	r3, [fp, #-16]
 18200 0088 233CA0E1 		lsr	r3, r3, #24
 18201 008c 080053E3 		cmp	r3, #8
 18202 0090 3F00000A 		beq	.L1159
 18203              		.loc 1 7099 5 discriminator 7
 18204 0094 0130E0E3 		mvn	r3, #1
 18205              		.loc 1 7099 5
 18206 0098 990000EA 		b	.L1157
 18207              	.L1155:
 18208              		.loc 1 7099 5 discriminator 2
 18209 009c 28301BE5 		ldr	r3, [fp, #-40]
 18210 00a0 2324A0E1 		lsr	r2, r3, #8
 18211 00a4 20301BE5 		ldr	r3, [fp, #-32]
 18212 00a8 143093E5 		ldr	r3, [r3, #20]
 18213 00ac 030052E1 		cmp	r2, r3
 18214 00b0 0100003A 		bcc	.L1160
 18215              		.loc 1 7099 5 discriminator 8
 18216 00b4 0230E0E3 		mvn	r3, #2
 18217              		.loc 1 7099 5
 18218 00b8 910000EA 		b	.L1157
 18219              	.L1160:
 18220              		.loc 1 7099 5 discriminator 9
 18221 00bc 28301BE5 		ldr	r3, [fp, #-40]
 18222 00c0 2334A0E1 		lsr	r3, r3, #8
 18223 00c4 8322A0E1 		lsl	r2, r3, #5
 18224 00c8 20301BE5 		ldr	r3, [fp, #-32]
 18225 00cc 0C3093E5 		ldr	r3, [r3, #12]
 18226 00d0 033082E0 		add	r3, r2, r3
 18227 00d4 08300BE5 		str	r3, [fp, #-8]
 18228 00d8 08301BE5 		ldr	r3, [fp, #-8]
 18229 00dc 0300A0E1 		mov	r0, r3
 18230 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18231 00e4 10000BE5 		str	r0, [fp, #-16]
 18232              		.loc 1 7099 5 discriminator 1
 18233 00e8 10301BE5 		ldr	r3, [fp, #-16]
 18234 00ec FF3803E2 		and	r3, r3, #16711680
 18235 00f0 020853E3 		cmp	r3, #131072
 18236 00f4 0100001A 		bne	.L1161
 18237              		.loc 1 7099 5 discriminator 10
 18238 00f8 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 447


 18239              		.loc 1 7099 5
 18240 00fc 800000EA 		b	.L1157
 18241              	.L1161:
 18242              		.loc 1 7099 5 discriminator 11
 18243 0100 10301BE5 		ldr	r3, [fp, #-16]
 18244 0104 233CA0E1 		lsr	r3, r3, #24
 18245 0108 030053E3 		cmp	r3, #3
 18246 010c 0100000A 		beq	.L1162
 18247              		.loc 1 7099 5 discriminator 12
 18248 0110 0130E0E3 		mvn	r3, #1
 18249              		.loc 1 7099 5
 18250 0114 7A0000EA 		b	.L1157
 18251              	.L1162:
 18252              		.loc 1 7099 5 discriminator 13
 18253 0118 28301BE5 		ldr	r3, [fp, #-40]
 18254 011c 7F2003E2 		and	r2, r3, #127
 18255 0120 08301BE5 		ldr	r3, [fp, #-8]
 18256 0124 143093E5 		ldr	r3, [r3, #20]
 18257 0128 030052E1 		cmp	r2, r3
 18258 012c 0100003A 		bcc	.L1163
 18259              		.loc 1 7099 5 discriminator 14
 18260 0130 0230E0E3 		mvn	r3, #2
 18261              		.loc 1 7099 5
 18262 0134 720000EA 		b	.L1157
 18263              	.L1163:
 18264              		.loc 1 7099 5 discriminator 15
 18265 0138 28301BE5 		ldr	r3, [fp, #-40]
 18266 013c 7F3003E2 		and	r3, r3, #127
 18267 0140 8322A0E1 		lsl	r2, r3, #5
 18268 0144 08301BE5 		ldr	r3, [fp, #-8]
 18269 0148 0C3093E5 		ldr	r3, [r3, #12]
 18270 014c 033082E0 		add	r3, r2, r3
 18271 0150 08300BE5 		str	r3, [fp, #-8]
 18272 0154 08301BE5 		ldr	r3, [fp, #-8]
 18273 0158 0300A0E1 		mov	r0, r3
 18274 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18275 0160 10000BE5 		str	r0, [fp, #-16]
 18276              		.loc 1 7099 5 discriminator 1
 18277 0164 10301BE5 		ldr	r3, [fp, #-16]
 18278 0168 FF3803E2 		and	r3, r3, #16711680
 18279 016c 020853E3 		cmp	r3, #131072
 18280 0170 0100001A 		bne	.L1164
 18281              		.loc 1 7099 5 discriminator 16
 18282 0174 0830E0E3 		mvn	r3, #8
 18283              		.loc 1 7099 5
 18284 0178 610000EA 		b	.L1157
 18285              	.L1164:
 18286              		.loc 1 7099 5 discriminator 17
 18287 017c 10301BE5 		ldr	r3, [fp, #-16]
 18288 0180 233CA0E1 		lsr	r3, r3, #24
 18289 0184 080053E3 		cmp	r3, #8
 18290 0188 0100000A 		beq	.L1159
 18291              		.loc 1 7099 5 discriminator 18
 18292 018c 0130E0E3 		mvn	r3, #1
 18293              		.loc 1 7099 5
 18294 0190 5B0000EA 		b	.L1157
 18295              	.L1159:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 448


7100:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7101:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7102:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SND);
 18296              		.loc 1 7102 5 is_stmt 1
 18297 0194 08301BE5 		ldr	r3, [fp, #-8]
 18298 0198 083093E5 		ldr	r3, [r3, #8]
 18299 019c 013003E2 		and	r3, r3, #1
 18300 01a0 000053E3 		cmp	r3, #0
 18301 01a4 0100001A 		bne	.L1165
 18302              		.loc 1 7102 5 is_stmt 0 discriminator 1
 18303 01a8 0630E0E3 		mvn	r3, #6
 18304              		.loc 1 7102 5
 18305 01ac 540000EA 		b	.L1157
 18306              	.L1165:
7103:../../Source/Kernel/rme_kernel.c ****     
7104:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18307              		.loc 1 7104 10 is_stmt 1
 18308 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18309 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18310 01b8 14300BE5 		str	r3, [fp, #-20]
7105:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18311              		.loc 1 7105 14
 18312 01bc 08301BE5 		ldr	r3, [fp, #-8]
 18313 01c0 003093E5 		ldr	r3, [r3]
 18314 01c4 7330FFE6 		uxth	r3, r3
 18315 01c8 000053E3 		cmp	r3, #0
 18316 01cc 0200000A 		beq	.L1166
 18317              		.loc 1 7105 14 is_stmt 0 discriminator 1
 18318 01d0 08301BE5 		ldr	r3, [fp, #-8]
 18319 01d4 043093E5 		ldr	r3, [r3, #4]
 18320 01d8 000000EA 		b	.L1167
 18321              	.L1166:
 18322              		.loc 1 7105 14 discriminator 2
 18323 01dc 08301BE5 		ldr	r3, [fp, #-8]
 18324              	.L1167:
 18325              		.loc 1 7105 13 is_stmt 1 discriminator 4
 18326 01e0 18300BE5 		str	r3, [fp, #-24]
7106:../../Source/Kernel/rme_kernel.c ****     Thd_Rcv=Sig_Root->Thd;
 18327              		.loc 1 7106 12
 18328 01e4 18301BE5 		ldr	r3, [fp, #-24]
 18329 01e8 183093E5 		ldr	r3, [r3, #24]
 18330 01ec 1C300BE5 		str	r3, [fp, #-28]
7107:../../Source/Kernel/rme_kernel.c **** 
7108:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7109:../../Source/Kernel/rme_kernel.c ****     if(Thd_Rcv!=RME_NULL)
 18331              		.loc 1 7109 7
 18332 01f0 1C301BE5 		ldr	r3, [fp, #-28]
 18333 01f4 000053E3 		cmp	r3, #0
 18334 01f8 0A00000A 		beq	.L1168
7110:../../Source/Kernel/rme_kernel.c ****     {
7111:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7112:../../Source/Kernel/rme_kernel.c **** 
7113:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Local==Local)
 18335              		.loc 1 7113 26
 18336 01fc 1C301BE5 		ldr	r3, [fp, #-28]
 18337 0200 143093E5 		ldr	r3, [r3, #20]
 18338              		.loc 1 7113 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 449


 18339 0204 14201BE5 		ldr	r2, [fp, #-20]
 18340 0208 030052E1 		cmp	r2, r3
 18341 020c 0200001A 		bne	.L1169
7114:../../Source/Kernel/rme_kernel.c ****         {
7115:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7116:../../Source/Kernel/rme_kernel.c **** 
7117:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 18342              		.loc 1 7117 20
 18343 0210 0130A0E3 		mov	r3, #1
 18344 0214 0C300BE5 		str	r3, [fp, #-12]
 18345 0218 040000EA 		b	.L1170
 18346              	.L1169:
7118:../../Source/Kernel/rme_kernel.c ****         }
7119:../../Source/Kernel/rme_kernel.c ****         else
7120:../../Source/Kernel/rme_kernel.c ****         {
7121:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7122:../../Source/Kernel/rme_kernel.c **** 
7123:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 18347              		.loc 1 7123 20
 18348 021c 0030A0E3 		mov	r3, #0
 18349 0220 0C300BE5 		str	r3, [fp, #-12]
 18350 0224 010000EA 		b	.L1170
 18351              	.L1168:
7124:../../Source/Kernel/rme_kernel.c ****         }
7125:../../Source/Kernel/rme_kernel.c ****     }
7126:../../Source/Kernel/rme_kernel.c ****     else
7127:../../Source/Kernel/rme_kernel.c ****     {
7128:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7129:../../Source/Kernel/rme_kernel.c **** 
7130:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 18352              		.loc 1 7130 16
 18353 0228 0030A0E3 		mov	r3, #0
 18354 022c 0C300BE5 		str	r3, [fp, #-12]
 18355              	.L1170:
7131:../../Source/Kernel/rme_kernel.c ****     }
7132:../../Source/Kernel/rme_kernel.c ****     
7133:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 18356              		.loc 1 7133 7
 18357 0230 0C301BE5 		ldr	r3, [fp, #-12]
 18358 0234 000053E3 		cmp	r3, #0
 18359 0238 1D00000A 		beq	.L1171
7134:../../Source/Kernel/rme_kernel.c ****     {
7135:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7136:../../Source/Kernel/rme_kernel.c **** 
7137:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7138:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18360              		.loc 1 7138 9
 18361 023c 0010A0E3 		mov	r1, #0
 18362 0240 24001BE5 		ldr	r0, [fp, #-36]
 18363 0244 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7139:../../Source/Kernel/rme_kernel.c ****         
7140:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7141:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7142:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7143:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7144:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Rcv->Ctx.Reg->Reg),1);
 18364              		.loc 1 7144 44
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 450


 18365 0248 1C301BE5 		ldr	r3, [fp, #-28]
 18366 024c 483093E5 		ldr	r3, [r3, #72]
 18367              		.loc 1 7144 9
 18368 0250 0110A0E3 		mov	r1, #1
 18369 0254 0300A0E1 		mov	r0, r3
 18370 0258 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7145:../../Source/Kernel/rme_kernel.c ****         
7146:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7147:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Slice!=0U)
 18371              		.loc 1 7147 26
 18372 025c 1C301BE5 		ldr	r3, [fp, #-28]
 18373 0260 183093E5 		ldr	r3, [r3, #24]
 18374              		.loc 1 7147 11
 18375 0264 000053E3 		cmp	r3, #0
 18376 0268 0500000A 		beq	.L1172
7148:../../Source/Kernel/rme_kernel.c ****         {
7149:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7150:../../Source/Kernel/rme_kernel.c **** 
7151:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7152:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_READY;
 18377              		.loc 1 7152 33
 18378 026c 1C301BE5 		ldr	r3, [fp, #-28]
 18379 0270 0020A0E3 		mov	r2, #0
 18380 0274 1C2083E5 		str	r2, [r3, #28]
7153:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Rcv);
 18381              		.loc 1 7153 13
 18382 0278 1C001BE5 		ldr	r0, [fp, #-28]
 18383 027c FEFFFFEB 		bl	_RME_Run_Ins
 18384 0280 040000EA 		b	.L1173
 18385              	.L1172:
7154:../../Source/Kernel/rme_kernel.c ****         }
7155:../../Source/Kernel/rme_kernel.c ****         else
7156:../../Source/Kernel/rme_kernel.c ****         {
7157:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7158:../../Source/Kernel/rme_kernel.c **** 
7159:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7160:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_TIMEOUT;
 18386              		.loc 1 7160 33
 18387 0284 1C301BE5 		ldr	r3, [fp, #-28]
 18388 0288 0220A0E3 		mov	r2, #2
 18389 028c 1C2083E5 		str	r2, [r3, #28]
7161:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Rcv);
 18390              		.loc 1 7161 13
 18391 0290 1C001BE5 		ldr	r0, [fp, #-28]
 18392 0294 FEFFFFEB 		bl	_RME_Run_Notif
 18393              	.L1173:
7162:../../Source/Kernel/rme_kernel.c ****         }
7163:../../Source/Kernel/rme_kernel.c ****         
7164:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread to run */
7165:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 18394              		.loc 1 7165 9
 18395 0298 14101BE5 		ldr	r1, [fp, #-20]
 18396 029c 24001BE5 		ldr	r0, [fp, #-36]
 18397 02a0 FEFFFFEB 		bl	_RME_Kern_High
7166:../../Source/Kernel/rme_kernel.c ****         
7167:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7168:../../Source/Kernel/rme_kernel.c ****         Sig_Root->Thd=RME_NULL;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 451


 18398              		.loc 1 7168 22
 18399 02a4 18301BE5 		ldr	r3, [fp, #-24]
 18400 02a8 0020A0E3 		mov	r2, #0
 18401 02ac 182083E5 		str	r2, [r3, #24]
 18402 02b0 120000EA 		b	.L1174
 18403              	.L1171:
7169:../../Source/Kernel/rme_kernel.c ****     }
7170:../../Source/Kernel/rme_kernel.c ****     else
7171:../../Source/Kernel/rme_kernel.c ****     {
7172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7173:../../Source/Kernel/rme_kernel.c **** 
7174:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, we just faa and return */
7175:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Sig_Root->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 18404              		.loc 1 7175 12
 18405 02b4 18301BE5 		ldr	r3, [fp, #-24]
 18406 02b8 143083E2 		add	r3, r3, #20
 18407 02bc 0110A0E3 		mov	r1, #1
 18408 02c0 0300A0E1 		mov	r0, r3
 18409 02c4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 18410 02c8 0030A0E1 		mov	r3, r0
 18411              		.loc 1 7175 11 discriminator 1
 18412 02cc 0A0173E3 		cmn	r3, #-2147483646
 18413 02d0 0700009A 		bls	.L1175
7176:../../Source/Kernel/rme_kernel.c ****         {
7177:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7178:../../Source/Kernel/rme_kernel.c **** 
7179:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Sig_Root->Sig_Num),-1);
 18414              		.loc 1 7179 13
 18415 02d4 18301BE5 		ldr	r3, [fp, #-24]
 18416 02d8 143083E2 		add	r3, r3, #20
 18417 02dc 0010E0E3 		mvn	r1, #0
 18418 02e0 0300A0E1 		mov	r0, r3
 18419 02e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7180:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 18420              		.loc 1 7180 20
 18421 02e8 D13E0FE3 		movw	r3, #65233
 18422 02ec FF3F4FE3 		movt	r3, 65535
 18423 02f0 030000EA 		b	.L1157
 18424              	.L1175:
7181:../../Source/Kernel/rme_kernel.c ****         }
7182:../../Source/Kernel/rme_kernel.c ****         else
7183:../../Source/Kernel/rme_kernel.c ****         {
7184:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7185:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7186:../../Source/Kernel/rme_kernel.c ****         }
7187:../../Source/Kernel/rme_kernel.c ****         
7188:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7189:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18425              		.loc 1 7189 9
 18426 02f4 0010A0E3 		mov	r1, #0
 18427 02f8 24001BE5 		ldr	r0, [fp, #-36]
 18428 02fc FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18429              	.L1174:
7190:../../Source/Kernel/rme_kernel.c ****     }
7191:../../Source/Kernel/rme_kernel.c **** 
7192:../../Source/Kernel/rme_kernel.c ****     return 0;
 18430              		.loc 1 7192 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 452


 18431 0300 0030A0E3 		mov	r3, #0
 18432              	.L1157:
7193:../../Source/Kernel/rme_kernel.c **** }
 18433              		.loc 1 7193 1
 18434 0304 0300A0E1 		mov	r0, r3
 18435 0308 04D04BE2 		sub	sp, fp, #4
 18436              		.cfi_def_cfa 13, 8
 18437              		@ sp needed
 18438 030c 0088BDE8 		pop	{fp, pc}
 18439              		.cfi_endproc
 18440              	.LFE70:
 18442              		.section	.text._RME_Sig_Rcv,"ax",%progbits
 18443              		.align	2
 18444              		.syntax unified
 18445              		.arm
 18447              	_RME_Sig_Rcv:
 18448              	.LFB71:
7194:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Snd *************************************************/
7195:../../Source/Kernel/rme_kernel.c **** 
7196:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Rcv ******************************************************
7197:../../Source/Kernel/rme_kernel.c **** Description : Try to receive from a signal endpoint. The rules for signal
7198:../../Source/Kernel/rme_kernel.c ****               endpoint receive is:
7199:../../Source/Kernel/rme_kernel.c ****               1.If a receive endpoint have many send endpoints, everyone can
7200:../../Source/Kernel/rme_kernel.c ****                 send to it, and sending to it will increase the count by 1.
7201:../../Source/Kernel/rme_kernel.c ****               2.If some thread blocks on a receive endpoint, the wakeup is only
7202:../../Source/Kernel/rme_kernel.c ****                 possible from the same core that thread is on.
7203:../../Source/Kernel/rme_kernel.c ****               3.It is not recommended to let 2 cores operate on the rcv endpoint
7204:../../Source/Kernel/rme_kernel.c ****                 simutaneously.
7205:../../Source/Kernel/rme_kernel.c ****               This system call can potentially trigger a context switch.
7206:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7207:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
7208:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7209:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7210:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Option - The receive option.
7211:../../Source/Kernel/rme_kernel.c **** Output      : None.
7212:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, a non-negative number containing the 
7213:../../Source/Kernel/rme_kernel.c ****                           number of signals received; or an error code.
7214:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7215:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Rcv(struct RME_Cap_Cpt* Cpt,
7216:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7217:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig,
7218:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Option)
7219:../../Source/Kernel/rme_kernel.c **** {
 18449              		.loc 1 7219 1
 18450              		.cfi_startproc
 18451              		@ args = 0, pretend = 0, frame = 40
 18452              		@ frame_needed = 1, uses_anonymous_args = 0
 18453 0000 00482DE9 		push	{fp, lr}
 18454              		.cfi_def_cfa_offset 8
 18455              		.cfi_offset 11, -8
 18456              		.cfi_offset 14, -4
 18457 0004 04B08DE2 		add	fp, sp, #4
 18458              		.cfi_def_cfa 11, 4
 18459 0008 28D04DE2 		sub	sp, sp, #40
 18460 000c 20000BE5 		str	r0, [fp, #-32]
 18461 0010 24100BE5 		str	r1, [fp, #-36]
 18462 0014 28200BE5 		str	r2, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 453


 18463 0018 2C300BE5 		str	r3, [fp, #-44]
7220:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7221:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7222:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7223:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7224:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Value;
7225:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7226:../../Source/Kernel/rme_kernel.c ****     
7227:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7228:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 18464              		.loc 1 7228 5
 18465 001c 28301BE5 		ldr	r3, [fp, #-40]
 18466 0020 803003E2 		and	r3, r3, #128
 18467 0024 000053E3 		cmp	r3, #0
 18468 0028 1C00001A 		bne	.L1177
 18469              		.loc 1 7228 5 is_stmt 0 discriminator 1
 18470 002c 20301BE5 		ldr	r3, [fp, #-32]
 18471 0030 142093E5 		ldr	r2, [r3, #20]
 18472 0034 28301BE5 		ldr	r3, [fp, #-40]
 18473 0038 030052E1 		cmp	r2, r3
 18474 003c 0100008A 		bhi	.L1178
 18475              		.loc 1 7228 5 discriminator 3
 18476 0040 0230E0E3 		mvn	r3, #2
 18477              		.loc 1 7228 5
 18478 0044 F60000EA 		b	.L1179
 18479              	.L1178:
 18480              		.loc 1 7228 5 discriminator 4
 18481 0048 28301BE5 		ldr	r3, [fp, #-40]
 18482 004c 8322A0E1 		lsl	r2, r3, #5
 18483 0050 20301BE5 		ldr	r3, [fp, #-32]
 18484 0054 0C3093E5 		ldr	r3, [r3, #12]
 18485 0058 033082E0 		add	r3, r2, r3
 18486 005c 08300BE5 		str	r3, [fp, #-8]
 18487 0060 08301BE5 		ldr	r3, [fp, #-8]
 18488 0064 0300A0E1 		mov	r0, r3
 18489 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18490 006c 0C000BE5 		str	r0, [fp, #-12]
 18491              		.loc 1 7228 5 discriminator 1
 18492 0070 0C301BE5 		ldr	r3, [fp, #-12]
 18493 0074 FF3803E2 		and	r3, r3, #16711680
 18494 0078 020853E3 		cmp	r3, #131072
 18495 007c 0100001A 		bne	.L1180
 18496              		.loc 1 7228 5 discriminator 5
 18497 0080 0830E0E3 		mvn	r3, #8
 18498              		.loc 1 7228 5
 18499 0084 E60000EA 		b	.L1179
 18500              	.L1180:
 18501              		.loc 1 7228 5 discriminator 6
 18502 0088 0C301BE5 		ldr	r3, [fp, #-12]
 18503 008c 233CA0E1 		lsr	r3, r3, #24
 18504 0090 080053E3 		cmp	r3, #8
 18505 0094 3F00000A 		beq	.L1181
 18506              		.loc 1 7228 5 discriminator 7
 18507 0098 0130E0E3 		mvn	r3, #1
 18508              		.loc 1 7228 5
 18509 009c E00000EA 		b	.L1179
 18510              	.L1177:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 454


 18511              		.loc 1 7228 5 discriminator 2
 18512 00a0 28301BE5 		ldr	r3, [fp, #-40]
 18513 00a4 2324A0E1 		lsr	r2, r3, #8
 18514 00a8 20301BE5 		ldr	r3, [fp, #-32]
 18515 00ac 143093E5 		ldr	r3, [r3, #20]
 18516 00b0 030052E1 		cmp	r2, r3
 18517 00b4 0100003A 		bcc	.L1182
 18518              		.loc 1 7228 5 discriminator 8
 18519 00b8 0230E0E3 		mvn	r3, #2
 18520              		.loc 1 7228 5
 18521 00bc D80000EA 		b	.L1179
 18522              	.L1182:
 18523              		.loc 1 7228 5 discriminator 9
 18524 00c0 28301BE5 		ldr	r3, [fp, #-40]
 18525 00c4 2334A0E1 		lsr	r3, r3, #8
 18526 00c8 8322A0E1 		lsl	r2, r3, #5
 18527 00cc 20301BE5 		ldr	r3, [fp, #-32]
 18528 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18529 00d4 033082E0 		add	r3, r2, r3
 18530 00d8 08300BE5 		str	r3, [fp, #-8]
 18531 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18532 00e0 0300A0E1 		mov	r0, r3
 18533 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18534 00e8 0C000BE5 		str	r0, [fp, #-12]
 18535              		.loc 1 7228 5 discriminator 1
 18536 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 18537 00f0 FF3803E2 		and	r3, r3, #16711680
 18538 00f4 020853E3 		cmp	r3, #131072
 18539 00f8 0100001A 		bne	.L1183
 18540              		.loc 1 7228 5 discriminator 10
 18541 00fc 0830E0E3 		mvn	r3, #8
 18542              		.loc 1 7228 5
 18543 0100 C70000EA 		b	.L1179
 18544              	.L1183:
 18545              		.loc 1 7228 5 discriminator 11
 18546 0104 0C301BE5 		ldr	r3, [fp, #-12]
 18547 0108 233CA0E1 		lsr	r3, r3, #24
 18548 010c 030053E3 		cmp	r3, #3
 18549 0110 0100000A 		beq	.L1184
 18550              		.loc 1 7228 5 discriminator 12
 18551 0114 0130E0E3 		mvn	r3, #1
 18552              		.loc 1 7228 5
 18553 0118 C10000EA 		b	.L1179
 18554              	.L1184:
 18555              		.loc 1 7228 5 discriminator 13
 18556 011c 28301BE5 		ldr	r3, [fp, #-40]
 18557 0120 7F2003E2 		and	r2, r3, #127
 18558 0124 08301BE5 		ldr	r3, [fp, #-8]
 18559 0128 143093E5 		ldr	r3, [r3, #20]
 18560 012c 030052E1 		cmp	r2, r3
 18561 0130 0100003A 		bcc	.L1185
 18562              		.loc 1 7228 5 discriminator 14
 18563 0134 0230E0E3 		mvn	r3, #2
 18564              		.loc 1 7228 5
 18565 0138 B90000EA 		b	.L1179
 18566              	.L1185:
 18567              		.loc 1 7228 5 discriminator 15
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 455


 18568 013c 28301BE5 		ldr	r3, [fp, #-40]
 18569 0140 7F3003E2 		and	r3, r3, #127
 18570 0144 8322A0E1 		lsl	r2, r3, #5
 18571 0148 08301BE5 		ldr	r3, [fp, #-8]
 18572 014c 0C3093E5 		ldr	r3, [r3, #12]
 18573 0150 033082E0 		add	r3, r2, r3
 18574 0154 08300BE5 		str	r3, [fp, #-8]
 18575 0158 08301BE5 		ldr	r3, [fp, #-8]
 18576 015c 0300A0E1 		mov	r0, r3
 18577 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18578 0164 0C000BE5 		str	r0, [fp, #-12]
 18579              		.loc 1 7228 5 discriminator 1
 18580 0168 0C301BE5 		ldr	r3, [fp, #-12]
 18581 016c FF3803E2 		and	r3, r3, #16711680
 18582 0170 020853E3 		cmp	r3, #131072
 18583 0174 0100001A 		bne	.L1186
 18584              		.loc 1 7228 5 discriminator 16
 18585 0178 0830E0E3 		mvn	r3, #8
 18586              		.loc 1 7228 5
 18587 017c A80000EA 		b	.L1179
 18588              	.L1186:
 18589              		.loc 1 7228 5 discriminator 17
 18590 0180 0C301BE5 		ldr	r3, [fp, #-12]
 18591 0184 233CA0E1 		lsr	r3, r3, #24
 18592 0188 080053E3 		cmp	r3, #8
 18593 018c 0100000A 		beq	.L1181
 18594              		.loc 1 7228 5 discriminator 18
 18595 0190 0130E0E3 		mvn	r3, #1
 18596              		.loc 1 7228 5
 18597 0194 A20000EA 		b	.L1179
 18598              	.L1181:
7229:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7230:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7231:../../Source/Kernel/rme_kernel.c ****     switch(Option)
 18599              		.loc 1 7231 5 is_stmt 1
 18600 0198 2C201BE5 		ldr	r2, [fp, #-44]
 18601 019c 8C329FE5 		ldr	r3, .L1218
 18602 01a0 030052E3 		cmp	r2, #3
 18603 01a4 1D00008A 		bhi	.L1187
 18604 01a8 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 18605              	.Lrtx1189:
 18606 01ac 00F020E3 		nop
 18607              		.section	.rodata._RME_Sig_Rcv,"a",%progbits
 18608              		.align	2
 18609              	.L1189:
 18610 0000 B0010000 		.word	.L1192
 18611 0004 CC010000 		.word	.L1191
 18612 0008 E8010000 		.word	.L1190
 18613 000c 04020000 		.word	.L1188
 18614              		.section	.text._RME_Sig_Rcv
 18615              		.p2align 2
 18616              	.L1192:
7232:../../Source/Kernel/rme_kernel.c ****     {
7233:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BS:
7234:../../Source/Kernel/rme_kernel.c ****         {
7235:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7236:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 456


7237:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BS);
 18617              		.loc 1 7237 13
 18618 01b0 08301BE5 		ldr	r3, [fp, #-8]
 18619 01b4 083093E5 		ldr	r3, [r3, #8]
 18620 01b8 023003E2 		and	r3, r3, #2
 18621 01bc 000053E3 		cmp	r3, #0
 18622 01c0 1800001A 		bne	.L1214
 18623              		.loc 1 7237 13 is_stmt 0 discriminator 1
 18624 01c4 0630E0E3 		mvn	r3, #6
 18625              		.loc 1 7237 13
 18626 01c8 950000EA 		b	.L1179
 18627              	.L1191:
7238:../../Source/Kernel/rme_kernel.c ****             break;
7239:../../Source/Kernel/rme_kernel.c ****         }
7240:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BM:
7241:../../Source/Kernel/rme_kernel.c ****         {
7242:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7243:../../Source/Kernel/rme_kernel.c ****             
7244:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BM);
 18628              		.loc 1 7244 13 is_stmt 1
 18629 01cc 08301BE5 		ldr	r3, [fp, #-8]
 18630 01d0 083093E5 		ldr	r3, [r3, #8]
 18631 01d4 043003E2 		and	r3, r3, #4
 18632 01d8 000053E3 		cmp	r3, #0
 18633 01dc 1300001A 		bne	.L1215
 18634              		.loc 1 7244 13 is_stmt 0 discriminator 1
 18635 01e0 0630E0E3 		mvn	r3, #6
 18636              		.loc 1 7244 13
 18637 01e4 8E0000EA 		b	.L1179
 18638              	.L1190:
7245:../../Source/Kernel/rme_kernel.c ****             break;
7246:../../Source/Kernel/rme_kernel.c ****         }
7247:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NS:
7248:../../Source/Kernel/rme_kernel.c ****         {
7249:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7250:../../Source/Kernel/rme_kernel.c ****             
7251:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NS);
 18639              		.loc 1 7251 13 is_stmt 1
 18640 01e8 08301BE5 		ldr	r3, [fp, #-8]
 18641 01ec 083093E5 		ldr	r3, [r3, #8]
 18642 01f0 083003E2 		and	r3, r3, #8
 18643 01f4 000053E3 		cmp	r3, #0
 18644 01f8 0E00001A 		bne	.L1216
 18645              		.loc 1 7251 13 is_stmt 0 discriminator 1
 18646 01fc 0630E0E3 		mvn	r3, #6
 18647              		.loc 1 7251 13
 18648 0200 870000EA 		b	.L1179
 18649              	.L1188:
7252:../../Source/Kernel/rme_kernel.c ****             break;
7253:../../Source/Kernel/rme_kernel.c ****         }
7254:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NM:
7255:../../Source/Kernel/rme_kernel.c ****         {
7256:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7257:../../Source/Kernel/rme_kernel.c ****             
7258:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NM);
 18650              		.loc 1 7258 13 is_stmt 1
 18651 0204 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 457


 18652 0208 083093E5 		ldr	r3, [r3, #8]
 18653 020c 103003E2 		and	r3, r3, #16
 18654 0210 000053E3 		cmp	r3, #0
 18655 0214 0900001A 		bne	.L1217
 18656              		.loc 1 7258 13 is_stmt 0 discriminator 1
 18657 0218 0630E0E3 		mvn	r3, #6
 18658              		.loc 1 7258 13
 18659 021c 800000EA 		b	.L1179
 18660              	.L1187:
7259:../../Source/Kernel/rme_kernel.c ****             break;
7260:../../Source/Kernel/rme_kernel.c ****         }
7261:../../Source/Kernel/rme_kernel.c ****         default:
7262:../../Source/Kernel/rme_kernel.c ****         {
7263:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7264:../../Source/Kernel/rme_kernel.c ****             
7265:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_ACT;
 18661              		.loc 1 7265 20 is_stmt 1
 18662 0220 4B3FE0E3 		mvn	r3, #300
 18663 0224 7E0000EA 		b	.L1179
 18664              	.L1214:
7238:../../Source/Kernel/rme_kernel.c ****         }
 18665              		.loc 1 7238 13
 18666 0228 00F020E3 		nop
 18667 022c 040000EA 		b	.L1194
 18668              	.L1215:
7245:../../Source/Kernel/rme_kernel.c ****         }
 18669              		.loc 1 7245 13
 18670 0230 00F020E3 		nop
 18671 0234 020000EA 		b	.L1194
 18672              	.L1216:
7252:../../Source/Kernel/rme_kernel.c ****         }
 18673              		.loc 1 7252 13
 18674 0238 00F020E3 		nop
 18675 023c 000000EA 		b	.L1194
 18676              	.L1217:
7259:../../Source/Kernel/rme_kernel.c ****         }
 18677              		.loc 1 7259 13
 18678 0240 00F020E3 		nop
 18679              	.L1194:
7266:../../Source/Kernel/rme_kernel.c ****         }
7267:../../Source/Kernel/rme_kernel.c ****     }
7268:../../Source/Kernel/rme_kernel.c ****     
7269:../../Source/Kernel/rme_kernel.c ****     /* Convert to root cap */
7270:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18680              		.loc 1 7270 14
 18681 0244 08301BE5 		ldr	r3, [fp, #-8]
 18682 0248 003093E5 		ldr	r3, [r3]
 18683 024c 7330FFE6 		uxth	r3, r3
 18684 0250 000053E3 		cmp	r3, #0
 18685 0254 0200000A 		beq	.L1198
 18686              		.loc 1 7270 14 is_stmt 0 discriminator 1
 18687 0258 08301BE5 		ldr	r3, [fp, #-8]
 18688 025c 043093E5 		ldr	r3, [r3, #4]
 18689 0260 000000EA 		b	.L1199
 18690              	.L1198:
 18691              		.loc 1 7270 14 discriminator 2
 18692 0264 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 458


 18693              	.L1199:
 18694              		.loc 1 7270 13 is_stmt 1 discriminator 4
 18695 0268 10300BE5 		str	r3, [fp, #-16]
7271:../../Source/Kernel/rme_kernel.c ****     
7272:../../Source/Kernel/rme_kernel.c ****     /* See if we can receive on that endpoint - if someone blocks on it, we 
7273:../../Source/Kernel/rme_kernel.c ****      * must wait for it to unblock before we can proceed. */
7274:../../Source/Kernel/rme_kernel.c ****     if(Sig_Root->Thd!=RME_NULL)
 18696              		.loc 1 7274 16
 18697 026c 10301BE5 		ldr	r3, [fp, #-16]
 18698 0270 183093E5 		ldr	r3, [r3, #24]
 18699              		.loc 1 7274 7
 18700 0274 000053E3 		cmp	r3, #0
 18701 0278 0100000A 		beq	.L1200
7275:../../Source/Kernel/rme_kernel.c ****     {
7276:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7277:../../Source/Kernel/rme_kernel.c **** 
7278:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 18702              		.loc 1 7278 16
 18703 027c 4B3FE0E3 		mvn	r3, #300
 18704 0280 670000EA 		b	.L1179
 18705              	.L1200:
7279:../../Source/Kernel/rme_kernel.c ****     }
7280:../../Source/Kernel/rme_kernel.c ****     else
7281:../../Source/Kernel/rme_kernel.c ****     {
7282:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7283:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7284:../../Source/Kernel/rme_kernel.c ****     }
7285:../../Source/Kernel/rme_kernel.c ****     
7286:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18706              		.loc 1 7286 10
 18707 0284 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18708 0288 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18709 028c 14300BE5 		str	r3, [fp, #-20]
7287:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 18710              		.loc 1 7287 12
 18711 0290 14301BE5 		ldr	r3, [fp, #-20]
 18712 0294 043093E5 		ldr	r3, [r3, #4]
 18713 0298 18300BE5 		str	r3, [fp, #-24]
7288:../../Source/Kernel/rme_kernel.c ****     
7289:../../Source/Kernel/rme_kernel.c ****     /* Check if we trying to let a boot-time thread block on a signal, which is
7290:../../Source/Kernel/rme_kernel.c ****      * disallowed. Additionally, if the current thread have no timeslice left
7291:../../Source/Kernel/rme_kernel.c ****      * (which shouldn't happen under any circumstances), we assert and die. */
7292:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_Cur->Sched.Slice!=0U);
 18714              		.loc 1 7292 5
 18715 029c 18301BE5 		ldr	r3, [fp, #-24]
 18716 02a0 183093E5 		ldr	r3, [r3, #24]
 18717 02a4 000053E3 		cmp	r3, #0
 18718 02a8 0800001A 		bne	.L1201
 18719              		.loc 1 7292 5 is_stmt 0 discriminator 1
 18720 02ac 003000E3 		movw	r3, #:lower16:.LC6
 18721 02b0 003040E3 		movt	r3, #:upper16:.LC6
 18722 02b4 002000E3 		movw	r2, #:lower16:.LC7
 18723 02b8 002040E3 		movt	r2, #:upper16:.LC7
 18724 02bc 7C1C01E3 		movw	r1, #7292
 18725 02c0 000000E3 		movw	r0, #:lower16:.LC8
 18726 02c4 000040E3 		movt	r0, #:upper16:.LC8
 18727 02c8 FEFFFFEB 		bl	RME_Log
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 459


 18728              	.L1202:
 18729              		.loc 1 7292 5
 18730 02cc FEFFFFEA 		b	.L1202
 18731              	.L1201:
7293:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 18732              		.loc 1 7293 22 is_stmt 1
 18733 02d0 18301BE5 		ldr	r3, [fp, #-24]
 18734 02d4 183093E5 		ldr	r3, [r3, #24]
 18735              		.loc 1 7293 7
 18736 02d8 060173E3 		cmn	r3, #-2147483647
 18737 02dc 0200001A 		bne	.L1203
7294:../../Source/Kernel/rme_kernel.c ****     {
7295:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7296:../../Source/Kernel/rme_kernel.c **** 
7297:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_BOOT;
 18738              		.loc 1 7297 16
 18739 02e0 CD3E0FE3 		movw	r3, #65229
 18740 02e4 FF3F4FE3 		movt	r3, 65535
 18741 02e8 4D0000EA 		b	.L1179
 18742              	.L1203:
7298:../../Source/Kernel/rme_kernel.c ****     }
7299:../../Source/Kernel/rme_kernel.c ****     else
7300:../../Source/Kernel/rme_kernel.c ****     {
7301:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7302:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7303:../../Source/Kernel/rme_kernel.c ****     }
7304:../../Source/Kernel/rme_kernel.c **** 
7305:../../Source/Kernel/rme_kernel.c ****     /* Check if there are signals available */
7306:../../Source/Kernel/rme_kernel.c ****     Old_Value=Sig_Root->Sig_Num;
 18743              		.loc 1 7306 14
 18744 02ec 10301BE5 		ldr	r3, [fp, #-16]
 18745 02f0 143093E5 		ldr	r3, [r3, #20]
 18746 02f4 1C300BE5 		str	r3, [fp, #-28]
7307:../../Source/Kernel/rme_kernel.c ****     if(Old_Value>0U)
 18747              		.loc 1 7307 7
 18748 02f8 1C301BE5 		ldr	r3, [fp, #-28]
 18749 02fc 000053E3 		cmp	r3, #0
 18750 0300 2600000A 		beq	.L1204
7308:../../Source/Kernel/rme_kernel.c ****     {
7309:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7310:../../Source/Kernel/rme_kernel.c **** 
7311:../../Source/Kernel/rme_kernel.c ****         /* Can't use faa, other cores may reduce count to zero in the meantime */
7312:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_NS))
 18751              		.loc 1 7312 11
 18752 0304 2C301BE5 		ldr	r3, [fp, #-44]
 18753 0308 000053E3 		cmp	r3, #0
 18754 030c 0200000A 		beq	.L1205
 18755              		.loc 1 7312 32 discriminator 1
 18756 0310 2C301BE5 		ldr	r3, [fp, #-44]
 18757 0314 020053E3 		cmp	r3, #2
 18758 0318 0F00001A 		bne	.L1206
 18759              	.L1205:
7313:../../Source/Kernel/rme_kernel.c ****         {
7314:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7315:../../Source/Kernel/rme_kernel.c **** 
7316:../../Source/Kernel/rme_kernel.c ****             /* Try to take one */
7317:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 460


 18760              		.loc 1 7317 16
 18761 031c 10301BE5 		ldr	r3, [fp, #-16]
 18762 0320 140083E2 		add	r0, r3, #20
 18763 0324 1C301BE5 		ldr	r3, [fp, #-28]
 18764 0328 013043E2 		sub	r3, r3, #1
 18765 032c 0320A0E1 		mov	r2, r3
 18766 0330 1C101BE5 		ldr	r1, [fp, #-28]
 18767 0334 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18768 0338 0030A0E1 		mov	r3, r0
 18769              		.loc 1 7317 15 discriminator 1
 18770 033c 000053E3 		cmp	r3, #0
 18771 0340 0100001A 		bne	.L1207
7318:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7319:../../Source/Kernel/rme_kernel.c ****                              Old_Value-1U)==RME_CASFAIL)
7320:../../Source/Kernel/rme_kernel.c ****             {
7321:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7322:../../Source/Kernel/rme_kernel.c **** 
7323:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18772              		.loc 1 7323 24
 18773 0344 133EE0E3 		mvn	r3, #304
 18774 0348 350000EA 		b	.L1179
 18775              	.L1207:
7324:../../Source/Kernel/rme_kernel.c ****             }
7325:../../Source/Kernel/rme_kernel.c ****             else
7326:../../Source/Kernel/rme_kernel.c ****             {
7327:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7328:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7329:../../Source/Kernel/rme_kernel.c ****             }
7330:../../Source/Kernel/rme_kernel.c ****             
7331:../../Source/Kernel/rme_kernel.c ****             /* We have taken it, now return what we have taken */
7332:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,1);
 18776              		.loc 1 7332 13
 18777 034c 0110A0E3 		mov	r1, #1
 18778 0350 24001BE5 		ldr	r0, [fp, #-36]
 18779 0354 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18780 0358 0E0000EA 		b	.L1208
 18781              	.L1206:
7333:../../Source/Kernel/rme_kernel.c ****         }
7334:../../Source/Kernel/rme_kernel.c ****         else
7335:../../Source/Kernel/rme_kernel.c ****         {
7336:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7337:../../Source/Kernel/rme_kernel.c **** 
7338:../../Source/Kernel/rme_kernel.c ****             /* Try to take all */
7339:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18782              		.loc 1 7339 16
 18783 035c 10301BE5 		ldr	r3, [fp, #-16]
 18784 0360 143083E2 		add	r3, r3, #20
 18785 0364 0020A0E3 		mov	r2, #0
 18786 0368 1C101BE5 		ldr	r1, [fp, #-28]
 18787 036c 0300A0E1 		mov	r0, r3
 18788 0370 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18789 0374 0030A0E1 		mov	r3, r0
 18790              		.loc 1 7339 15 discriminator 1
 18791 0378 000053E3 		cmp	r3, #0
 18792 037c 0100001A 		bne	.L1209
7340:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7341:../../Source/Kernel/rme_kernel.c ****                              0U)==RME_CASFAIL)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 461


7342:../../Source/Kernel/rme_kernel.c ****             {
7343:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7344:../../Source/Kernel/rme_kernel.c **** 
7345:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18793              		.loc 1 7345 24
 18794 0380 133EE0E3 		mvn	r3, #304
 18795 0384 260000EA 		b	.L1179
 18796              	.L1209:
7346:../../Source/Kernel/rme_kernel.c ****             }
7347:../../Source/Kernel/rme_kernel.c ****             else
7348:../../Source/Kernel/rme_kernel.c ****             {
7349:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7350:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7351:../../Source/Kernel/rme_kernel.c ****             }
7352:../../Source/Kernel/rme_kernel.c ****             
7353:../../Source/Kernel/rme_kernel.c ****             /* We have taken all, now return what we have taken */
7354:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,(rme_ret_t)Old_Value);
 18797              		.loc 1 7354 13
 18798 0388 1C301BE5 		ldr	r3, [fp, #-28]
 18799 038c 0310A0E1 		mov	r1, r3
 18800 0390 24001BE5 		ldr	r0, [fp, #-36]
 18801 0394 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18802              	.L1208:
7355:../../Source/Kernel/rme_kernel.c ****         }
7356:../../Source/Kernel/rme_kernel.c ****         
7357:../../Source/Kernel/rme_kernel.c ****         return 0;
 18803              		.loc 1 7357 16
 18804 0398 0030A0E3 		mov	r3, #0
 18805 039c 200000EA 		b	.L1179
 18806              	.L1204:
7358:../../Source/Kernel/rme_kernel.c ****     }
7359:../../Source/Kernel/rme_kernel.c ****     else
7360:../../Source/Kernel/rme_kernel.c ****     {
7361:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7362:../../Source/Kernel/rme_kernel.c **** 
7363:../../Source/Kernel/rme_kernel.c ****         /* There's no value, try to block */
7364:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_BM))
 18807              		.loc 1 7364 11
 18808 03a0 2C301BE5 		ldr	r3, [fp, #-44]
 18809 03a4 000053E3 		cmp	r3, #0
 18810 03a8 0200000A 		beq	.L1210
 18811              		.loc 1 7364 32 discriminator 1
 18812 03ac 2C301BE5 		ldr	r3, [fp, #-44]
 18813 03b0 010053E3 		cmp	r3, #1
 18814 03b4 1600001A 		bne	.L1211
 18815              	.L1210:
7365:../../Source/Kernel/rme_kernel.c ****         {
7366:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7367:../../Source/Kernel/rme_kernel.c **** 
7368:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP((rme_ptr_t*)&(Sig_Root->Thd),
 18816              		.loc 1 7368 16
 18817 03b8 10301BE5 		ldr	r3, [fp, #-16]
 18818 03bc 183083E2 		add	r3, r3, #24
 18819 03c0 18201BE5 		ldr	r2, [fp, #-24]
 18820 03c4 0010A0E3 		mov	r1, #0
 18821 03c8 0300A0E1 		mov	r0, r3
 18822 03cc FEFFFFEB 		bl	_RME_Comp_Swap_Single
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 462


 18823 03d0 0030A0E1 		mov	r3, r0
 18824              		.loc 1 7368 15 discriminator 1
 18825 03d4 000053E3 		cmp	r3, #0
 18826 03d8 0100001A 		bne	.L1212
7369:../../Source/Kernel/rme_kernel.c ****                              RME_NULL,
7370:../../Source/Kernel/rme_kernel.c ****                              (rme_ptr_t)Thd_Cur)==RME_CASFAIL)
7371:../../Source/Kernel/rme_kernel.c ****             {
7372:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7373:../../Source/Kernel/rme_kernel.c **** 
7374:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18827              		.loc 1 7374 24
 18828 03dc 133EE0E3 		mvn	r3, #304
 18829 03e0 0F0000EA 		b	.L1179
 18830              	.L1212:
7375:../../Source/Kernel/rme_kernel.c ****             }
7376:../../Source/Kernel/rme_kernel.c ****             else
7377:../../Source/Kernel/rme_kernel.c ****             {
7378:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7379:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7380:../../Source/Kernel/rme_kernel.c ****             }
7381:../../Source/Kernel/rme_kernel.c **** 
7382:../../Source/Kernel/rme_kernel.c ****             /* Now we block our current thread. No need to set any return value
7383:../../Source/Kernel/rme_kernel.c ****              * to the register set here, because we do not yet know how many
7384:../../Source/Kernel/rme_kernel.c ****              * signals will be there when the thread unblocks. The unblocking
7385:../../Source/Kernel/rme_kernel.c ****              * does not need an option so we don't keep that; we always treat
7386:../../Source/Kernel/rme_kernel.c ****              * it as single receive when we unblock anyway. */
7387:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Signal=Sig_Root;
 18831              		.loc 1 7387 34
 18832 03e4 18301BE5 		ldr	r3, [fp, #-24]
 18833 03e8 10201BE5 		ldr	r2, [fp, #-16]
 18834 03ec 282083E5 		str	r2, [r3, #40]
7388:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_BLOCKED;
 18835              		.loc 1 7388 33
 18836 03f0 18301BE5 		ldr	r3, [fp, #-24]
 18837 03f4 0120A0E3 		mov	r2, #1
 18838 03f8 1C2083E5 		str	r2, [r3, #28]
7389:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 18839              		.loc 1 7389 13
 18840 03fc 18001BE5 		ldr	r0, [fp, #-24]
 18841 0400 FEFFFFEB 		bl	_RME_Run_Del
7390:../../Source/Kernel/rme_kernel.c ****             
7391:../../Source/Kernel/rme_kernel.c ****             /* Pick the highest priority thread to run */
7392:../../Source/Kernel/rme_kernel.c ****             _RME_Kern_High(Reg,Local);
 18842              		.loc 1 7392 13
 18843 0404 14101BE5 		ldr	r1, [fp, #-20]
 18844 0408 24001BE5 		ldr	r0, [fp, #-36]
 18845 040c FEFFFFEB 		bl	_RME_Kern_High
 18846 0410 020000EA 		b	.L1213
 18847              	.L1211:
7393:../../Source/Kernel/rme_kernel.c ****         }
7394:../../Source/Kernel/rme_kernel.c ****         else
7395:../../Source/Kernel/rme_kernel.c ****         {
7396:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7397:../../Source/Kernel/rme_kernel.c **** 
7398:../../Source/Kernel/rme_kernel.c ****             /* We have taken nothing but the system call is successful anyway */
7399:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,0);
 18848              		.loc 1 7399 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 463


 18849 0414 0010A0E3 		mov	r1, #0
 18850 0418 24001BE5 		ldr	r0, [fp, #-36]
 18851 041c FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18852              	.L1213:
7400:../../Source/Kernel/rme_kernel.c ****         }
7401:../../Source/Kernel/rme_kernel.c ****     }
7402:../../Source/Kernel/rme_kernel.c ****     
7403:../../Source/Kernel/rme_kernel.c ****     return 0;
 18853              		.loc 1 7403 12
 18854 0420 0030A0E3 		mov	r3, #0
 18855              	.L1179:
7404:../../Source/Kernel/rme_kernel.c **** }
 18856              		.loc 1 7404 1
 18857 0424 0300A0E1 		mov	r0, r3
 18858 0428 04D04BE2 		sub	sp, fp, #4
 18859              		.cfi_def_cfa 13, 8
 18860              		@ sp needed
 18861 042c 0088BDE8 		pop	{fp, pc}
 18862              	.L1219:
 18863              		.align	2
 18864              	.L1218:
 18865 0430 00000000 		.word	.L1189
 18866              		.cfi_endproc
 18867              	.LFE71:
 18869              		.section	.text._RME_Inv_Crt,"ax",%progbits
 18870              		.align	2
 18871              		.syntax unified
 18872              		.arm
 18874              	_RME_Inv_Crt:
 18875              	.LFB72:
7405:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Rcv *************************************************/
7406:../../Source/Kernel/rme_kernel.c **** 
7407:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Crt ******************************************************
7408:../../Source/Kernel/rme_kernel.c **** Description : Create an invocation stub.
7409:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7410:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
7411:../../Source/Kernel/rme_kernel.c ****                                   for this process.
7412:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7413:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability slot that you want this newly
7414:../../Source/Kernel/rme_kernel.c ****                                   created invocation capability to be in.
7415:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7416:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
7417:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7418:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
7419:../../Source/Kernel/rme_kernel.c ****                                 invocation port kernel object.
7420:../../Source/Kernel/rme_kernel.c **** Output      : None.
7421:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7422:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7423:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Crt(struct RME_Cap_Cpt* Cpt,
7424:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7425:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
7426:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7427:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
7428:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr)
7429:../../Source/Kernel/rme_kernel.c **** {
 18876              		.loc 1 7429 1
 18877              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 464


 18878              		@ args = 8, pretend = 0, frame = 48
 18879              		@ frame_needed = 1, uses_anonymous_args = 0
 18880 0000 00482DE9 		push	{fp, lr}
 18881              		.cfi_def_cfa_offset 8
 18882              		.cfi_offset 11, -8
 18883              		.cfi_offset 14, -4
 18884 0004 04B08DE2 		add	fp, sp, #4
 18885              		.cfi_def_cfa 11, 4
 18886 0008 30D04DE2 		sub	sp, sp, #48
 18887 000c 28000BE5 		str	r0, [fp, #-40]
 18888 0010 2C100BE5 		str	r1, [fp, #-44]
 18889 0014 30200BE5 		str	r2, [fp, #-48]
 18890 0018 34300BE5 		str	r3, [fp, #-52]
7430:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7431:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
7432:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
7433:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Crt;
7434:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
7435:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7436:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7437:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
7438:../../Source/Kernel/rme_kernel.c ****     
7439:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
7440:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 18891              		.loc 1 7440 5
 18892 001c 2C301BE5 		ldr	r3, [fp, #-44]
 18893 0020 803003E2 		and	r3, r3, #128
 18894 0024 000053E3 		cmp	r3, #0
 18895 0028 1C00001A 		bne	.L1221
 18896              		.loc 1 7440 5 is_stmt 0 discriminator 1
 18897 002c 28301BE5 		ldr	r3, [fp, #-40]
 18898 0030 142093E5 		ldr	r2, [r3, #20]
 18899 0034 2C301BE5 		ldr	r3, [fp, #-44]
 18900 0038 030052E1 		cmp	r2, r3
 18901 003c 0100008A 		bhi	.L1222
 18902              		.loc 1 7440 5 discriminator 3
 18903 0040 0230E0E3 		mvn	r3, #2
 18904              		.loc 1 7440 5
 18905 0044 950100EA 		b	.L1223
 18906              	.L1222:
 18907              		.loc 1 7440 5 discriminator 4
 18908 0048 2C301BE5 		ldr	r3, [fp, #-44]
 18909 004c 8322A0E1 		lsl	r2, r3, #5
 18910 0050 28301BE5 		ldr	r3, [fp, #-40]
 18911 0054 0C3093E5 		ldr	r3, [r3, #12]
 18912 0058 033082E0 		add	r3, r2, r3
 18913 005c 08300BE5 		str	r3, [fp, #-8]
 18914 0060 08301BE5 		ldr	r3, [fp, #-8]
 18915 0064 0300A0E1 		mov	r0, r3
 18916 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18917 006c 14000BE5 		str	r0, [fp, #-20]
 18918              		.loc 1 7440 5 discriminator 1
 18919 0070 14301BE5 		ldr	r3, [fp, #-20]
 18920 0074 FF3803E2 		and	r3, r3, #16711680
 18921 0078 020853E3 		cmp	r3, #131072
 18922 007c 0100001A 		bne	.L1224
 18923              		.loc 1 7440 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 465


 18924 0080 0830E0E3 		mvn	r3, #8
 18925              		.loc 1 7440 5
 18926 0084 850100EA 		b	.L1223
 18927              	.L1224:
 18928              		.loc 1 7440 5 discriminator 6
 18929 0088 14301BE5 		ldr	r3, [fp, #-20]
 18930 008c 233CA0E1 		lsr	r3, r3, #24
 18931 0090 030053E3 		cmp	r3, #3
 18932 0094 3F00000A 		beq	.L1225
 18933              		.loc 1 7440 5 discriminator 7
 18934 0098 0130E0E3 		mvn	r3, #1
 18935              		.loc 1 7440 5
 18936 009c 7F0100EA 		b	.L1223
 18937              	.L1221:
 18938              		.loc 1 7440 5 discriminator 2
 18939 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 18940 00a4 2324A0E1 		lsr	r2, r3, #8
 18941 00a8 28301BE5 		ldr	r3, [fp, #-40]
 18942 00ac 143093E5 		ldr	r3, [r3, #20]
 18943 00b0 030052E1 		cmp	r2, r3
 18944 00b4 0100003A 		bcc	.L1226
 18945              		.loc 1 7440 5 discriminator 8
 18946 00b8 0230E0E3 		mvn	r3, #2
 18947              		.loc 1 7440 5
 18948 00bc 770100EA 		b	.L1223
 18949              	.L1226:
 18950              		.loc 1 7440 5 discriminator 9
 18951 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 18952 00c4 2334A0E1 		lsr	r3, r3, #8
 18953 00c8 8322A0E1 		lsl	r2, r3, #5
 18954 00cc 28301BE5 		ldr	r3, [fp, #-40]
 18955 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18956 00d4 033082E0 		add	r3, r2, r3
 18957 00d8 08300BE5 		str	r3, [fp, #-8]
 18958 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18959 00e0 0300A0E1 		mov	r0, r3
 18960 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18961 00e8 14000BE5 		str	r0, [fp, #-20]
 18962              		.loc 1 7440 5 discriminator 1
 18963 00ec 14301BE5 		ldr	r3, [fp, #-20]
 18964 00f0 FF3803E2 		and	r3, r3, #16711680
 18965 00f4 020853E3 		cmp	r3, #131072
 18966 00f8 0100001A 		bne	.L1227
 18967              		.loc 1 7440 5 discriminator 10
 18968 00fc 0830E0E3 		mvn	r3, #8
 18969              		.loc 1 7440 5
 18970 0100 660100EA 		b	.L1223
 18971              	.L1227:
 18972              		.loc 1 7440 5 discriminator 11
 18973 0104 14301BE5 		ldr	r3, [fp, #-20]
 18974 0108 233CA0E1 		lsr	r3, r3, #24
 18975 010c 030053E3 		cmp	r3, #3
 18976 0110 0100000A 		beq	.L1228
 18977              		.loc 1 7440 5 discriminator 12
 18978 0114 0130E0E3 		mvn	r3, #1
 18979              		.loc 1 7440 5
 18980 0118 600100EA 		b	.L1223
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 466


 18981              	.L1228:
 18982              		.loc 1 7440 5 discriminator 13
 18983 011c 2C301BE5 		ldr	r3, [fp, #-44]
 18984 0120 7F2003E2 		and	r2, r3, #127
 18985 0124 08301BE5 		ldr	r3, [fp, #-8]
 18986 0128 143093E5 		ldr	r3, [r3, #20]
 18987 012c 030052E1 		cmp	r2, r3
 18988 0130 0100003A 		bcc	.L1229
 18989              		.loc 1 7440 5 discriminator 14
 18990 0134 0230E0E3 		mvn	r3, #2
 18991              		.loc 1 7440 5
 18992 0138 580100EA 		b	.L1223
 18993              	.L1229:
 18994              		.loc 1 7440 5 discriminator 15
 18995 013c 2C301BE5 		ldr	r3, [fp, #-44]
 18996 0140 7F3003E2 		and	r3, r3, #127
 18997 0144 8322A0E1 		lsl	r2, r3, #5
 18998 0148 08301BE5 		ldr	r3, [fp, #-8]
 18999 014c 0C3093E5 		ldr	r3, [r3, #12]
 19000 0150 033082E0 		add	r3, r2, r3
 19001 0154 08300BE5 		str	r3, [fp, #-8]
 19002 0158 08301BE5 		ldr	r3, [fp, #-8]
 19003 015c 0300A0E1 		mov	r0, r3
 19004 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19005 0164 14000BE5 		str	r0, [fp, #-20]
 19006              		.loc 1 7440 5 discriminator 1
 19007 0168 14301BE5 		ldr	r3, [fp, #-20]
 19008 016c FF3803E2 		and	r3, r3, #16711680
 19009 0170 020853E3 		cmp	r3, #131072
 19010 0174 0100001A 		bne	.L1230
 19011              		.loc 1 7440 5 discriminator 16
 19012 0178 0830E0E3 		mvn	r3, #8
 19013              		.loc 1 7440 5
 19014 017c 470100EA 		b	.L1223
 19015              	.L1230:
 19016              		.loc 1 7440 5 discriminator 17
 19017 0180 14301BE5 		ldr	r3, [fp, #-20]
 19018 0184 233CA0E1 		lsr	r3, r3, #24
 19019 0188 030053E3 		cmp	r3, #3
 19020 018c 0100000A 		beq	.L1225
 19021              		.loc 1 7440 5 discriminator 18
 19022 0190 0130E0E3 		mvn	r3, #1
 19023              		.loc 1 7440 5
 19024 0194 410100EA 		b	.L1223
 19025              	.L1225:
7441:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7442:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 19026              		.loc 1 7442 5 is_stmt 1
 19027 0198 04309BE5 		ldr	r3, [fp, #4]
 19028 019c 803003E2 		and	r3, r3, #128
 19029 01a0 000053E3 		cmp	r3, #0
 19030 01a4 1C00001A 		bne	.L1231
 19031              		.loc 1 7442 5 is_stmt 0 discriminator 1
 19032 01a8 28301BE5 		ldr	r3, [fp, #-40]
 19033 01ac 142093E5 		ldr	r2, [r3, #20]
 19034 01b0 04309BE5 		ldr	r3, [fp, #4]
 19035 01b4 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 467


 19036 01b8 0100008A 		bhi	.L1232
 19037              		.loc 1 7442 5 discriminator 3
 19038 01bc 0230E0E3 		mvn	r3, #2
 19039              		.loc 1 7442 5
 19040 01c0 360100EA 		b	.L1223
 19041              	.L1232:
 19042              		.loc 1 7442 5 discriminator 4
 19043 01c4 04309BE5 		ldr	r3, [fp, #4]
 19044 01c8 8322A0E1 		lsl	r2, r3, #5
 19045 01cc 28301BE5 		ldr	r3, [fp, #-40]
 19046 01d0 0C3093E5 		ldr	r3, [r3, #12]
 19047 01d4 033082E0 		add	r3, r2, r3
 19048 01d8 0C300BE5 		str	r3, [fp, #-12]
 19049 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 19050 01e0 0300A0E1 		mov	r0, r3
 19051 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19052 01e8 14000BE5 		str	r0, [fp, #-20]
 19053              		.loc 1 7442 5 discriminator 1
 19054 01ec 14301BE5 		ldr	r3, [fp, #-20]
 19055 01f0 FF3803E2 		and	r3, r3, #16711680
 19056 01f4 020853E3 		cmp	r3, #131072
 19057 01f8 0100001A 		bne	.L1233
 19058              		.loc 1 7442 5 discriminator 5
 19059 01fc 0830E0E3 		mvn	r3, #8
 19060              		.loc 1 7442 5
 19061 0200 260100EA 		b	.L1223
 19062              	.L1233:
 19063              		.loc 1 7442 5 discriminator 6
 19064 0204 14301BE5 		ldr	r3, [fp, #-20]
 19065 0208 233CA0E1 		lsr	r3, r3, #24
 19066 020c 050053E3 		cmp	r3, #5
 19067 0210 3F00000A 		beq	.L1234
 19068              		.loc 1 7442 5 discriminator 7
 19069 0214 0130E0E3 		mvn	r3, #1
 19070              		.loc 1 7442 5
 19071 0218 200100EA 		b	.L1223
 19072              	.L1231:
 19073              		.loc 1 7442 5 discriminator 2
 19074 021c 04309BE5 		ldr	r3, [fp, #4]
 19075 0220 2324A0E1 		lsr	r2, r3, #8
 19076 0224 28301BE5 		ldr	r3, [fp, #-40]
 19077 0228 143093E5 		ldr	r3, [r3, #20]
 19078 022c 030052E1 		cmp	r2, r3
 19079 0230 0100003A 		bcc	.L1235
 19080              		.loc 1 7442 5 discriminator 8
 19081 0234 0230E0E3 		mvn	r3, #2
 19082              		.loc 1 7442 5
 19083 0238 180100EA 		b	.L1223
 19084              	.L1235:
 19085              		.loc 1 7442 5 discriminator 9
 19086 023c 04309BE5 		ldr	r3, [fp, #4]
 19087 0240 2334A0E1 		lsr	r3, r3, #8
 19088 0244 8322A0E1 		lsl	r2, r3, #5
 19089 0248 28301BE5 		ldr	r3, [fp, #-40]
 19090 024c 0C3093E5 		ldr	r3, [r3, #12]
 19091 0250 033082E0 		add	r3, r2, r3
 19092 0254 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 468


 19093 0258 0C301BE5 		ldr	r3, [fp, #-12]
 19094 025c 0300A0E1 		mov	r0, r3
 19095 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19096 0264 14000BE5 		str	r0, [fp, #-20]
 19097              		.loc 1 7442 5 discriminator 1
 19098 0268 14301BE5 		ldr	r3, [fp, #-20]
 19099 026c FF3803E2 		and	r3, r3, #16711680
 19100 0270 020853E3 		cmp	r3, #131072
 19101 0274 0100001A 		bne	.L1236
 19102              		.loc 1 7442 5 discriminator 10
 19103 0278 0830E0E3 		mvn	r3, #8
 19104              		.loc 1 7442 5
 19105 027c 070100EA 		b	.L1223
 19106              	.L1236:
 19107              		.loc 1 7442 5 discriminator 11
 19108 0280 14301BE5 		ldr	r3, [fp, #-20]
 19109 0284 233CA0E1 		lsr	r3, r3, #24
 19110 0288 030053E3 		cmp	r3, #3
 19111 028c 0100000A 		beq	.L1237
 19112              		.loc 1 7442 5 discriminator 12
 19113 0290 0130E0E3 		mvn	r3, #1
 19114              		.loc 1 7442 5
 19115 0294 010100EA 		b	.L1223
 19116              	.L1237:
 19117              		.loc 1 7442 5 discriminator 13
 19118 0298 04309BE5 		ldr	r3, [fp, #4]
 19119 029c 7F2003E2 		and	r2, r3, #127
 19120 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 19121 02a4 143093E5 		ldr	r3, [r3, #20]
 19122 02a8 030052E1 		cmp	r2, r3
 19123 02ac 0100003A 		bcc	.L1238
 19124              		.loc 1 7442 5 discriminator 14
 19125 02b0 0230E0E3 		mvn	r3, #2
 19126              		.loc 1 7442 5
 19127 02b4 F90000EA 		b	.L1223
 19128              	.L1238:
 19129              		.loc 1 7442 5 discriminator 15
 19130 02b8 04309BE5 		ldr	r3, [fp, #4]
 19131 02bc 7F3003E2 		and	r3, r3, #127
 19132 02c0 8322A0E1 		lsl	r2, r3, #5
 19133 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 19134 02c8 0C3093E5 		ldr	r3, [r3, #12]
 19135 02cc 033082E0 		add	r3, r2, r3
 19136 02d0 0C300BE5 		str	r3, [fp, #-12]
 19137 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 19138 02d8 0300A0E1 		mov	r0, r3
 19139 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19140 02e0 14000BE5 		str	r0, [fp, #-20]
 19141              		.loc 1 7442 5 discriminator 1
 19142 02e4 14301BE5 		ldr	r3, [fp, #-20]
 19143 02e8 FF3803E2 		and	r3, r3, #16711680
 19144 02ec 020853E3 		cmp	r3, #131072
 19145 02f0 0100001A 		bne	.L1239
 19146              		.loc 1 7442 5 discriminator 16
 19147 02f4 0830E0E3 		mvn	r3, #8
 19148              		.loc 1 7442 5
 19149 02f8 E80000EA 		b	.L1223
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 469


 19150              	.L1239:
 19151              		.loc 1 7442 5 discriminator 17
 19152 02fc 14301BE5 		ldr	r3, [fp, #-20]
 19153 0300 233CA0E1 		lsr	r3, r3, #24
 19154 0304 050053E3 		cmp	r3, #5
 19155 0308 0100000A 		beq	.L1234
 19156              		.loc 1 7442 5 discriminator 18
 19157 030c 0130E0E3 		mvn	r3, #1
 19158              		.loc 1 7442 5
 19159 0310 E20000EA 		b	.L1223
 19160              	.L1234:
7443:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
7444:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 19161              		.loc 1 7444 5 is_stmt 1
 19162 0314 30301BE5 		ldr	r3, [fp, #-48]
 19163 0318 803003E2 		and	r3, r3, #128
 19164 031c 000053E3 		cmp	r3, #0
 19165 0320 1C00001A 		bne	.L1240
 19166              		.loc 1 7444 5 is_stmt 0 discriminator 1
 19167 0324 28301BE5 		ldr	r3, [fp, #-40]
 19168 0328 142093E5 		ldr	r2, [r3, #20]
 19169 032c 30301BE5 		ldr	r3, [fp, #-48]
 19170 0330 030052E1 		cmp	r2, r3
 19171 0334 0100008A 		bhi	.L1241
 19172              		.loc 1 7444 5 discriminator 3
 19173 0338 0230E0E3 		mvn	r3, #2
 19174              		.loc 1 7444 5
 19175 033c D70000EA 		b	.L1223
 19176              	.L1241:
 19177              		.loc 1 7444 5 discriminator 4
 19178 0340 30301BE5 		ldr	r3, [fp, #-48]
 19179 0344 8322A0E1 		lsl	r2, r3, #5
 19180 0348 28301BE5 		ldr	r3, [fp, #-40]
 19181 034c 0C3093E5 		ldr	r3, [r3, #12]
 19182 0350 033082E0 		add	r3, r2, r3
 19183 0354 10300BE5 		str	r3, [fp, #-16]
 19184 0358 10301BE5 		ldr	r3, [fp, #-16]
 19185 035c 0300A0E1 		mov	r0, r3
 19186 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19187 0364 14000BE5 		str	r0, [fp, #-20]
 19188              		.loc 1 7444 5 discriminator 1
 19189 0368 14301BE5 		ldr	r3, [fp, #-20]
 19190 036c FF3803E2 		and	r3, r3, #16711680
 19191 0370 020853E3 		cmp	r3, #131072
 19192 0374 0100001A 		bne	.L1242
 19193              		.loc 1 7444 5 discriminator 5
 19194 0378 0830E0E3 		mvn	r3, #8
 19195              		.loc 1 7444 5
 19196 037c C70000EA 		b	.L1223
 19197              	.L1242:
 19198              		.loc 1 7444 5 discriminator 6
 19199 0380 14301BE5 		ldr	r3, [fp, #-20]
 19200 0384 233CA0E1 		lsr	r3, r3, #24
 19201 0388 020053E3 		cmp	r3, #2
 19202 038c 3F00000A 		beq	.L1243
 19203              		.loc 1 7444 5 discriminator 7
 19204 0390 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 470


 19205              		.loc 1 7444 5
 19206 0394 C10000EA 		b	.L1223
 19207              	.L1240:
 19208              		.loc 1 7444 5 discriminator 2
 19209 0398 30301BE5 		ldr	r3, [fp, #-48]
 19210 039c 2324A0E1 		lsr	r2, r3, #8
 19211 03a0 28301BE5 		ldr	r3, [fp, #-40]
 19212 03a4 143093E5 		ldr	r3, [r3, #20]
 19213 03a8 030052E1 		cmp	r2, r3
 19214 03ac 0100003A 		bcc	.L1244
 19215              		.loc 1 7444 5 discriminator 8
 19216 03b0 0230E0E3 		mvn	r3, #2
 19217              		.loc 1 7444 5
 19218 03b4 B90000EA 		b	.L1223
 19219              	.L1244:
 19220              		.loc 1 7444 5 discriminator 9
 19221 03b8 30301BE5 		ldr	r3, [fp, #-48]
 19222 03bc 2334A0E1 		lsr	r3, r3, #8
 19223 03c0 8322A0E1 		lsl	r2, r3, #5
 19224 03c4 28301BE5 		ldr	r3, [fp, #-40]
 19225 03c8 0C3093E5 		ldr	r3, [r3, #12]
 19226 03cc 033082E0 		add	r3, r2, r3
 19227 03d0 10300BE5 		str	r3, [fp, #-16]
 19228 03d4 10301BE5 		ldr	r3, [fp, #-16]
 19229 03d8 0300A0E1 		mov	r0, r3
 19230 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19231 03e0 14000BE5 		str	r0, [fp, #-20]
 19232              		.loc 1 7444 5 discriminator 1
 19233 03e4 14301BE5 		ldr	r3, [fp, #-20]
 19234 03e8 FF3803E2 		and	r3, r3, #16711680
 19235 03ec 020853E3 		cmp	r3, #131072
 19236 03f0 0100001A 		bne	.L1245
 19237              		.loc 1 7444 5 discriminator 10
 19238 03f4 0830E0E3 		mvn	r3, #8
 19239              		.loc 1 7444 5
 19240 03f8 A80000EA 		b	.L1223
 19241              	.L1245:
 19242              		.loc 1 7444 5 discriminator 11
 19243 03fc 14301BE5 		ldr	r3, [fp, #-20]
 19244 0400 233CA0E1 		lsr	r3, r3, #24
 19245 0404 030053E3 		cmp	r3, #3
 19246 0408 0100000A 		beq	.L1246
 19247              		.loc 1 7444 5 discriminator 12
 19248 040c 0130E0E3 		mvn	r3, #1
 19249              		.loc 1 7444 5
 19250 0410 A20000EA 		b	.L1223
 19251              	.L1246:
 19252              		.loc 1 7444 5 discriminator 13
 19253 0414 30301BE5 		ldr	r3, [fp, #-48]
 19254 0418 7F2003E2 		and	r2, r3, #127
 19255 041c 10301BE5 		ldr	r3, [fp, #-16]
 19256 0420 143093E5 		ldr	r3, [r3, #20]
 19257 0424 030052E1 		cmp	r2, r3
 19258 0428 0100003A 		bcc	.L1247
 19259              		.loc 1 7444 5 discriminator 14
 19260 042c 0230E0E3 		mvn	r3, #2
 19261              		.loc 1 7444 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 471


 19262 0430 9A0000EA 		b	.L1223
 19263              	.L1247:
 19264              		.loc 1 7444 5 discriminator 15
 19265 0434 30301BE5 		ldr	r3, [fp, #-48]
 19266 0438 7F3003E2 		and	r3, r3, #127
 19267 043c 8322A0E1 		lsl	r2, r3, #5
 19268 0440 10301BE5 		ldr	r3, [fp, #-16]
 19269 0444 0C3093E5 		ldr	r3, [r3, #12]
 19270 0448 033082E0 		add	r3, r2, r3
 19271 044c 10300BE5 		str	r3, [fp, #-16]
 19272 0450 10301BE5 		ldr	r3, [fp, #-16]
 19273 0454 0300A0E1 		mov	r0, r3
 19274 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19275 045c 14000BE5 		str	r0, [fp, #-20]
 19276              		.loc 1 7444 5 discriminator 1
 19277 0460 14301BE5 		ldr	r3, [fp, #-20]
 19278 0464 FF3803E2 		and	r3, r3, #16711680
 19279 0468 020853E3 		cmp	r3, #131072
 19280 046c 0100001A 		bne	.L1248
 19281              		.loc 1 7444 5 discriminator 16
 19282 0470 0830E0E3 		mvn	r3, #8
 19283              		.loc 1 7444 5
 19284 0474 890000EA 		b	.L1223
 19285              	.L1248:
 19286              		.loc 1 7444 5 discriminator 17
 19287 0478 14301BE5 		ldr	r3, [fp, #-20]
 19288 047c 233CA0E1 		lsr	r3, r3, #24
 19289 0480 020053E3 		cmp	r3, #2
 19290 0484 0100000A 		beq	.L1243
 19291              		.loc 1 7444 5 discriminator 18
 19292 0488 0130E0E3 		mvn	r3, #1
 19293              		.loc 1 7444 5
 19294 048c 830000EA 		b	.L1223
 19295              	.L1243:
7445:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
7446:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
7447:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 19296              		.loc 1 7447 5 is_stmt 1
 19297 0490 08301BE5 		ldr	r3, [fp, #-8]
 19298 0494 083093E5 		ldr	r3, [r3, #8]
 19299 0498 013003E2 		and	r3, r3, #1
 19300 049c 000053E3 		cmp	r3, #0
 19301 04a0 0100001A 		bne	.L1249
 19302              		.loc 1 7447 5 is_stmt 0 discriminator 1
 19303 04a4 0630E0E3 		mvn	r3, #6
 19304              		.loc 1 7447 5
 19305 04a8 7C0000EA 		b	.L1223
 19306              	.L1249:
7448:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_INV);
 19307              		.loc 1 7448 5 is_stmt 1
 19308 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 19309 04b0 083093E5 		ldr	r3, [r3, #8]
 19310 04b4 013003E2 		and	r3, r3, #1
 19311 04b8 000053E3 		cmp	r3, #0
 19312 04bc 0100001A 		bne	.L1250
 19313              		.loc 1 7448 5 is_stmt 0 discriminator 1
 19314 04c0 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 472


 19315              		.loc 1 7448 5
 19316 04c4 750000EA 		b	.L1223
 19317              	.L1250:
7449:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
7450:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_INV,Raddr,Vaddr,RME_INV_SIZE);
 19318              		.loc 1 7450 5 is_stmt 1
 19319 04c8 10301BE5 		ldr	r3, [fp, #-16]
 19320 04cc 083093E5 		ldr	r3, [r3, #8]
 19321 04d0 083003E2 		and	r3, r3, #8
 19322 04d4 000053E3 		cmp	r3, #0
 19323 04d8 0100001A 		bne	.L1251
 19324              		.loc 1 7450 5 is_stmt 0 discriminator 1
 19325 04dc 0630E0E3 		mvn	r3, #6
 19326              		.loc 1 7450 5
 19327 04e0 6E0000EA 		b	.L1223
 19328              	.L1251:
 19329              		.loc 1 7450 5 discriminator 2
 19330 04e4 10301BE5 		ldr	r3, [fp, #-16]
 19331 04e8 143093E5 		ldr	r3, [r3, #20]
 19332 04ec 08209BE5 		ldr	r2, [fp, #8]
 19333 04f0 033082E0 		add	r3, r2, r3
 19334 04f4 18300BE5 		str	r3, [fp, #-24]
 19335 04f8 18201BE5 		ldr	r2, [fp, #-24]
 19336 04fc 08309BE5 		ldr	r3, [fp, #8]
 19337 0500 030052E1 		cmp	r2, r3
 19338 0504 0100002A 		bcs	.L1252
 19339              		.loc 1 7450 5 discriminator 3
 19340 0508 0630E0E3 		mvn	r3, #6
 19341              		.loc 1 7450 5
 19342 050c 630000EA 		b	.L1223
 19343              	.L1252:
 19344              		.loc 1 7450 5 discriminator 4
 19345 0510 10301BE5 		ldr	r3, [fp, #-16]
 19346 0514 143093E5 		ldr	r3, [r3, #20]
 19347 0518 18201BE5 		ldr	r2, [fp, #-24]
 19348 051c 030052E1 		cmp	r2, r3
 19349 0520 0100002A 		bcs	.L1253
 19350              		.loc 1 7450 5 discriminator 5
 19351 0524 0630E0E3 		mvn	r3, #6
 19352              		.loc 1 7450 5
 19353 0528 5C0000EA 		b	.L1223
 19354              	.L1253:
 19355              		.loc 1 7450 5 discriminator 6
 19356 052c 18301BE5 		ldr	r3, [fp, #-24]
 19357 0530 250073E3 		cmn	r3, #37
 19358 0534 0100009A 		bls	.L1254
 19359              		.loc 1 7450 5 discriminator 7
 19360 0538 0630E0E3 		mvn	r3, #6
 19361              		.loc 1 7450 5
 19362 053c 570000EA 		b	.L1223
 19363              	.L1254:
 19364              		.loc 1 7450 5 discriminator 8
 19365 0540 10301BE5 		ldr	r3, [fp, #-16]
 19366 0544 182093E5 		ldr	r2, [r3, #24]
 19367 0548 18301BE5 		ldr	r3, [fp, #-24]
 19368 054c 233083E2 		add	r3, r3, #35
 19369 0550 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 473


 19370 0554 0100002A 		bcs	.L1255
 19371              		.loc 1 7450 5 discriminator 9
 19372 0558 0630E0E3 		mvn	r3, #6
 19373              		.loc 1 7450 5
 19374 055c 4F0000EA 		b	.L1223
 19375              	.L1255:
7451:../../Source/Kernel/rme_kernel.c ****     
7452:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7453:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Crt);
 19376              		.loc 1 7453 5 is_stmt 1
 19377 0560 08301BE5 		ldr	r3, [fp, #-8]
 19378 0564 142093E5 		ldr	r2, [r3, #20]
 19379 0568 34301BE5 		ldr	r3, [fp, #-52]
 19380 056c 030052E1 		cmp	r2, r3
 19381 0570 0100008A 		bhi	.L1256
 19382              		.loc 1 7453 5 is_stmt 0 discriminator 1
 19383 0574 0230E0E3 		mvn	r3, #2
 19384              		.loc 1 7453 5
 19385 0578 480000EA 		b	.L1223
 19386              	.L1256:
 19387              		.loc 1 7453 5 discriminator 2
 19388 057c 34301BE5 		ldr	r3, [fp, #-52]
 19389 0580 8322A0E1 		lsl	r2, r3, #5
 19390 0584 08301BE5 		ldr	r3, [fp, #-8]
 19391 0588 0C3093E5 		ldr	r3, [r3, #12]
 19392 058c 033082E0 		add	r3, r2, r3
 19393 0590 1C300BE5 		str	r3, [fp, #-28]
7454:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7455:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Inv_Crt);
 19394              		.loc 1 7455 5 is_stmt 1
 19395 0594 1C301BE5 		ldr	r3, [fp, #-28]
 19396 0598 0128A0E3 		mov	r2, #65536
 19397 059c 0010A0E3 		mov	r1, #0
 19398 05a0 0300A0E1 		mov	r0, r3
 19399 05a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19400 05a8 0030A0E1 		mov	r3, r0
 19401              		.loc 1 7455 5 is_stmt 0 discriminator 1
 19402 05ac 000053E3 		cmp	r3, #0
 19403 05b0 0100001A 		bne	.L1257
 19404 05b4 0430E0E3 		mvn	r3, #4
 19405              		.loc 1 7455 5
 19406 05b8 380000EA 		b	.L1223
 19407              	.L1257:
 19408              		.loc 1 7455 5 discriminator 2
 19409 05bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19410 05c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19411 05c4 002093E5 		ldr	r2, [r3]
 19412 05c8 1C301BE5 		ldr	r3, [fp, #-28]
 19413 05cc 102083E5 		str	r2, [r3, #16]
7456:../../Source/Kernel/rme_kernel.c ****     
7457:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
7458:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_INV_SIZE)!=0)
 19414              		.loc 1 7458 8 is_stmt 1
 19415 05d0 2410A0E3 		mov	r1, #36
 19416 05d4 18001BE5 		ldr	r0, [fp, #-24]
 19417 05d8 FEFFFFEB 		bl	_RME_Kot_Mark
 19418 05dc 0030A0E1 		mov	r3, r0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 474


 19419              		.loc 1 7458 7 discriminator 1
 19420 05e0 000053E3 		cmp	r3, #0
 19421 05e4 0500000A 		beq	.L1258
7459:../../Source/Kernel/rme_kernel.c ****     {
7460:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7461:../../Source/Kernel/rme_kernel.c **** 
7462:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),0U);
 19422              		.loc 1 7462 9
 19423 05e8 1C301BE5 		ldr	r3, [fp, #-28]
 19424 05ec 0010A0E3 		mov	r1, #0
 19425 05f0 0300A0E1 		mov	r0, r3
 19426 05f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
7463:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 19427              		.loc 1 7463 16
 19428 05f8 0330E0E3 		mvn	r3, #3
 19429 05fc 270000EA 		b	.L1223
 19430              	.L1258:
7464:../../Source/Kernel/rme_kernel.c ****     }
7465:../../Source/Kernel/rme_kernel.c ****     else
7466:../../Source/Kernel/rme_kernel.c ****     {
7467:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7468:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7469:../../Source/Kernel/rme_kernel.c ****     }
7470:../../Source/Kernel/rme_kernel.c ****     
7471:../../Source/Kernel/rme_kernel.c ****     /* Object init */
7472:../../Source/Kernel/rme_kernel.c ****     Invocation=(struct RME_Inv_Struct*)Vaddr;
 19431              		.loc 1 7472 15
 19432 0600 18301BE5 		ldr	r3, [fp, #-24]
 19433 0604 20300BE5 		str	r3, [fp, #-32]
7473:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 19434              		.loc 1 7473 14
 19435 0608 0C301BE5 		ldr	r3, [fp, #-12]
 19436 060c 003093E5 		ldr	r3, [r3]
 19437 0610 7330FFE6 		uxth	r3, r3
 19438 0614 000053E3 		cmp	r3, #0
 19439 0618 0200000A 		beq	.L1259
 19440              		.loc 1 7473 14 is_stmt 0 discriminator 1
 19441 061c 0C301BE5 		ldr	r3, [fp, #-12]
 19442 0620 043093E5 		ldr	r3, [r3, #4]
 19443 0624 000000EA 		b	.L1260
 19444              	.L1259:
 19445              		.loc 1 7473 14 discriminator 2
 19446 0628 0C301BE5 		ldr	r3, [fp, #-12]
 19447              	.L1260:
 19448              		.loc 1 7473 13 is_stmt 1 discriminator 4
 19449 062c 24300BE5 		str	r3, [fp, #-36]
7474:../../Source/Kernel/rme_kernel.c ****     Invocation->Prc=Prc_Root;
 19450              		.loc 1 7474 20
 19451 0630 20301BE5 		ldr	r3, [fp, #-32]
 19452 0634 24201BE5 		ldr	r2, [fp, #-36]
 19453 0638 082083E5 		str	r2, [r3, #8]
7475:../../Source/Kernel/rme_kernel.c ****     Invocation->Thd_Act=RME_NULL;
 19454              		.loc 1 7475 24
 19455 063c 20301BE5 		ldr	r3, [fp, #-32]
 19456 0640 0020A0E3 		mov	r2, #0
 19457 0644 0C2083E5 		str	r2, [r3, #12]
7476:../../Source/Kernel/rme_kernel.c ****     /* By default we do not return on exception */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 475


7477:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=0U;
 19458              		.loc 1 7477 27
 19459 0648 20301BE5 		ldr	r3, [fp, #-32]
 19460 064c 0020A0E3 		mov	r2, #0
 19461 0650 182083E5 		str	r2, [r3, #24]
7478:../../Source/Kernel/rme_kernel.c ****     
7479:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7480:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Root_Ref=0U;
 19462              		.loc 1 7480 27
 19463 0654 1C301BE5 		ldr	r3, [fp, #-28]
 19464 0658 0020A0E3 		mov	r2, #0
 19465 065c 042083E5 		str	r2, [r3, #4]
7481:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Object=Vaddr;
 19466              		.loc 1 7481 25
 19467 0660 1C301BE5 		ldr	r3, [fp, #-28]
 19468 0664 18201BE5 		ldr	r2, [fp, #-24]
 19469 0668 0C2083E5 		str	r2, [r3, #12]
7482:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Flag=RME_INV_FLAG_ALL;
 19470              		.loc 1 7482 23
 19471 066c 1C301BE5 		ldr	r3, [fp, #-28]
 19472 0670 0320A0E3 		mov	r2, #3
 19473 0674 082083E5 		str	r2, [r3, #8]
7483:../../Source/Kernel/rme_kernel.c ****     
7484:../../Source/Kernel/rme_kernel.c ****     /* Reference object */
7485:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref),1U);
 19474              		.loc 1 7485 5
 19475 0678 24301BE5 		ldr	r3, [fp, #-36]
 19476 067c 043083E2 		add	r3, r3, #4
 19477 0680 0110A0E3 		mov	r1, #1
 19478 0684 0300A0E1 		mov	r0, r3
 19479 0688 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7486:../../Source/Kernel/rme_kernel.c ****     
7487:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7488:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),
 19480              		.loc 1 7488 5
 19481 068c 1C301BE5 		ldr	r3, [fp, #-28]
 19482 0690 0714A0E3 		mov	r1, #117440512
 19483 0694 0300A0E1 		mov	r0, r3
 19484 0698 FEFFFFEB 		bl	__RME_A7A_Write_Release
7489:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_INV,
7490:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7491:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7492:../../Source/Kernel/rme_kernel.c **** 
7493:../../Source/Kernel/rme_kernel.c ****     return 0;
 19485              		.loc 1 7493 12
 19486 069c 0030A0E3 		mov	r3, #0
 19487              	.L1223:
7494:../../Source/Kernel/rme_kernel.c **** }
 19488              		.loc 1 7494 1
 19489 06a0 0300A0E1 		mov	r0, r3
 19490 06a4 04D04BE2 		sub	sp, fp, #4
 19491              		.cfi_def_cfa 13, 8
 19492              		@ sp needed
 19493 06a8 0088BDE8 		pop	{fp, pc}
 19494              		.cfi_endproc
 19495              	.LFE72:
 19497              		.section	.text._RME_Inv_Del,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 476


 19498              		.align	2
 19499              		.syntax unified
 19500              		.arm
 19502              	_RME_Inv_Del:
 19503              	.LFB73:
7495:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Crt *************************************************/
7496:../../Source/Kernel/rme_kernel.c **** 
7497:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Del ******************************************************
7498:../../Source/Kernel/rme_kernel.c **** Description : Delete an invocation stub.
7499:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7500:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
7501:../../Source/Kernel/rme_kernel.c ****                                   delete from.
7502:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7503:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7504:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7505:../../Source/Kernel/rme_kernel.c **** Output      : None.
7506:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7507:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7508:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Del(struct RME_Cap_Cpt* Cpt,
7509:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7510:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv)
7511:../../Source/Kernel/rme_kernel.c **** {
 19504              		.loc 1 7511 1
 19505              		.cfi_startproc
 19506              		@ args = 0, pretend = 0, frame = 32
 19507              		@ frame_needed = 1, uses_anonymous_args = 0
 19508 0000 00482DE9 		push	{fp, lr}
 19509              		.cfi_def_cfa_offset 8
 19510              		.cfi_offset 11, -8
 19511              		.cfi_offset 14, -4
 19512 0004 04B08DE2 		add	fp, sp, #4
 19513              		.cfi_def_cfa 11, 4
 19514 0008 20D04DE2 		sub	sp, sp, #32
 19515 000c 18000BE5 		str	r0, [fp, #-24]
 19516 0010 1C100BE5 		str	r1, [fp, #-28]
 19517 0014 20200BE5 		str	r2, [fp, #-32]
7512:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7513:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Del;
7514:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7515:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
7516:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7517:../../Source/Kernel/rme_kernel.c ****     
7518:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7519:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 19518              		.loc 1 7519 5
 19519 0018 1C301BE5 		ldr	r3, [fp, #-28]
 19520 001c 803003E2 		and	r3, r3, #128
 19521 0020 000053E3 		cmp	r3, #0
 19522 0024 1C00001A 		bne	.L1262
 19523              		.loc 1 7519 5 is_stmt 0 discriminator 1
 19524 0028 18301BE5 		ldr	r3, [fp, #-24]
 19525 002c 142093E5 		ldr	r2, [r3, #20]
 19526 0030 1C301BE5 		ldr	r3, [fp, #-28]
 19527 0034 030052E1 		cmp	r2, r3
 19528 0038 0100008A 		bhi	.L1263
 19529              		.loc 1 7519 5 discriminator 3
 19530 003c 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 477


 19531              		.loc 1 7519 5
 19532 0040 D10000EA 		b	.L1264
 19533              	.L1263:
 19534              		.loc 1 7519 5 discriminator 4
 19535 0044 1C301BE5 		ldr	r3, [fp, #-28]
 19536 0048 8322A0E1 		lsl	r2, r3, #5
 19537 004c 18301BE5 		ldr	r3, [fp, #-24]
 19538 0050 0C3093E5 		ldr	r3, [r3, #12]
 19539 0054 033082E0 		add	r3, r2, r3
 19540 0058 08300BE5 		str	r3, [fp, #-8]
 19541 005c 08301BE5 		ldr	r3, [fp, #-8]
 19542 0060 0300A0E1 		mov	r0, r3
 19543 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19544 0068 0C000BE5 		str	r0, [fp, #-12]
 19545              		.loc 1 7519 5 discriminator 1
 19546 006c 0C301BE5 		ldr	r3, [fp, #-12]
 19547 0070 FF3803E2 		and	r3, r3, #16711680
 19548 0074 020853E3 		cmp	r3, #131072
 19549 0078 0100001A 		bne	.L1265
 19550              		.loc 1 7519 5 discriminator 5
 19551 007c 0830E0E3 		mvn	r3, #8
 19552              		.loc 1 7519 5
 19553 0080 C10000EA 		b	.L1264
 19554              	.L1265:
 19555              		.loc 1 7519 5 discriminator 6
 19556 0084 0C301BE5 		ldr	r3, [fp, #-12]
 19557 0088 233CA0E1 		lsr	r3, r3, #24
 19558 008c 030053E3 		cmp	r3, #3
 19559 0090 3F00000A 		beq	.L1266
 19560              		.loc 1 7519 5 discriminator 7
 19561 0094 0130E0E3 		mvn	r3, #1
 19562              		.loc 1 7519 5
 19563 0098 BB0000EA 		b	.L1264
 19564              	.L1262:
 19565              		.loc 1 7519 5 discriminator 2
 19566 009c 1C301BE5 		ldr	r3, [fp, #-28]
 19567 00a0 2324A0E1 		lsr	r2, r3, #8
 19568 00a4 18301BE5 		ldr	r3, [fp, #-24]
 19569 00a8 143093E5 		ldr	r3, [r3, #20]
 19570 00ac 030052E1 		cmp	r2, r3
 19571 00b0 0100003A 		bcc	.L1267
 19572              		.loc 1 7519 5 discriminator 8
 19573 00b4 0230E0E3 		mvn	r3, #2
 19574              		.loc 1 7519 5
 19575 00b8 B30000EA 		b	.L1264
 19576              	.L1267:
 19577              		.loc 1 7519 5 discriminator 9
 19578 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 19579 00c0 2334A0E1 		lsr	r3, r3, #8
 19580 00c4 8322A0E1 		lsl	r2, r3, #5
 19581 00c8 18301BE5 		ldr	r3, [fp, #-24]
 19582 00cc 0C3093E5 		ldr	r3, [r3, #12]
 19583 00d0 033082E0 		add	r3, r2, r3
 19584 00d4 08300BE5 		str	r3, [fp, #-8]
 19585 00d8 08301BE5 		ldr	r3, [fp, #-8]
 19586 00dc 0300A0E1 		mov	r0, r3
 19587 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 478


 19588 00e4 0C000BE5 		str	r0, [fp, #-12]
 19589              		.loc 1 7519 5 discriminator 1
 19590 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 19591 00ec FF3803E2 		and	r3, r3, #16711680
 19592 00f0 020853E3 		cmp	r3, #131072
 19593 00f4 0100001A 		bne	.L1268
 19594              		.loc 1 7519 5 discriminator 10
 19595 00f8 0830E0E3 		mvn	r3, #8
 19596              		.loc 1 7519 5
 19597 00fc A20000EA 		b	.L1264
 19598              	.L1268:
 19599              		.loc 1 7519 5 discriminator 11
 19600 0100 0C301BE5 		ldr	r3, [fp, #-12]
 19601 0104 233CA0E1 		lsr	r3, r3, #24
 19602 0108 030053E3 		cmp	r3, #3
 19603 010c 0100000A 		beq	.L1269
 19604              		.loc 1 7519 5 discriminator 12
 19605 0110 0130E0E3 		mvn	r3, #1
 19606              		.loc 1 7519 5
 19607 0114 9C0000EA 		b	.L1264
 19608              	.L1269:
 19609              		.loc 1 7519 5 discriminator 13
 19610 0118 1C301BE5 		ldr	r3, [fp, #-28]
 19611 011c 7F2003E2 		and	r2, r3, #127
 19612 0120 08301BE5 		ldr	r3, [fp, #-8]
 19613 0124 143093E5 		ldr	r3, [r3, #20]
 19614 0128 030052E1 		cmp	r2, r3
 19615 012c 0100003A 		bcc	.L1270
 19616              		.loc 1 7519 5 discriminator 14
 19617 0130 0230E0E3 		mvn	r3, #2
 19618              		.loc 1 7519 5
 19619 0134 940000EA 		b	.L1264
 19620              	.L1270:
 19621              		.loc 1 7519 5 discriminator 15
 19622 0138 1C301BE5 		ldr	r3, [fp, #-28]
 19623 013c 7F3003E2 		and	r3, r3, #127
 19624 0140 8322A0E1 		lsl	r2, r3, #5
 19625 0144 08301BE5 		ldr	r3, [fp, #-8]
 19626 0148 0C3093E5 		ldr	r3, [r3, #12]
 19627 014c 033082E0 		add	r3, r2, r3
 19628 0150 08300BE5 		str	r3, [fp, #-8]
 19629 0154 08301BE5 		ldr	r3, [fp, #-8]
 19630 0158 0300A0E1 		mov	r0, r3
 19631 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19632 0160 0C000BE5 		str	r0, [fp, #-12]
 19633              		.loc 1 7519 5 discriminator 1
 19634 0164 0C301BE5 		ldr	r3, [fp, #-12]
 19635 0168 FF3803E2 		and	r3, r3, #16711680
 19636 016c 020853E3 		cmp	r3, #131072
 19637 0170 0100001A 		bne	.L1271
 19638              		.loc 1 7519 5 discriminator 16
 19639 0174 0830E0E3 		mvn	r3, #8
 19640              		.loc 1 7519 5
 19641 0178 830000EA 		b	.L1264
 19642              	.L1271:
 19643              		.loc 1 7519 5 discriminator 17
 19644 017c 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 479


 19645 0180 233CA0E1 		lsr	r3, r3, #24
 19646 0184 030053E3 		cmp	r3, #3
 19647 0188 0100000A 		beq	.L1266
 19648              		.loc 1 7519 5 discriminator 18
 19649 018c 0130E0E3 		mvn	r3, #1
 19650              		.loc 1 7519 5
 19651 0190 7D0000EA 		b	.L1264
 19652              	.L1266:
7520:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
7521:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7522:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 19653              		.loc 1 7522 5 is_stmt 1
 19654 0194 08301BE5 		ldr	r3, [fp, #-8]
 19655 0198 083093E5 		ldr	r3, [r3, #8]
 19656 019c 023003E2 		and	r3, r3, #2
 19657 01a0 000053E3 		cmp	r3, #0
 19658 01a4 0100001A 		bne	.L1272
 19659              		.loc 1 7522 5 is_stmt 0 discriminator 1
 19660 01a8 0630E0E3 		mvn	r3, #6
 19661              		.loc 1 7522 5
 19662 01ac 760000EA 		b	.L1264
 19663              	.L1272:
7523:../../Source/Kernel/rme_kernel.c ****     
7524:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7525:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Del);
 19664              		.loc 1 7525 5 is_stmt 1
 19665 01b0 08301BE5 		ldr	r3, [fp, #-8]
 19666 01b4 142093E5 		ldr	r2, [r3, #20]
 19667 01b8 20301BE5 		ldr	r3, [fp, #-32]
 19668 01bc 030052E1 		cmp	r2, r3
 19669 01c0 0100008A 		bhi	.L1273
 19670              		.loc 1 7525 5 is_stmt 0 discriminator 1
 19671 01c4 0230E0E3 		mvn	r3, #2
 19672              		.loc 1 7525 5
 19673 01c8 6F0000EA 		b	.L1264
 19674              	.L1273:
 19675              		.loc 1 7525 5 discriminator 2
 19676 01cc 20301BE5 		ldr	r3, [fp, #-32]
 19677 01d0 8322A0E1 		lsl	r2, r3, #5
 19678 01d4 08301BE5 		ldr	r3, [fp, #-8]
 19679 01d8 0C3093E5 		ldr	r3, [r3, #12]
 19680 01dc 033082E0 		add	r3, r2, r3
 19681 01e0 10300BE5 		str	r3, [fp, #-16]
7526:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
7527:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Inv_Del,Type_Stat,RME_CAP_TYPE_INV);
 19682              		.loc 1 7527 5 is_stmt 1
 19683 01e4 10301BE5 		ldr	r3, [fp, #-16]
 19684 01e8 0300A0E1 		mov	r0, r3
 19685 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19686 01f0 0C000BE5 		str	r0, [fp, #-12]
 19687              		.loc 1 7527 5 is_stmt 0 discriminator 1
 19688 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 19689 01f8 FF3803E2 		and	r3, r3, #16711680
 19690 01fc 020853E3 		cmp	r3, #131072
 19691 0200 0100000A 		beq	.L1274
 19692 0204 0830E0E3 		mvn	r3, #8
 19693              		.loc 1 7527 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 480


 19694 0208 5F0000EA 		b	.L1264
 19695              	.L1274:
 19696              		.loc 1 7527 5 discriminator 2
 19697 020c 0C301BE5 		ldr	r3, [fp, #-12]
 19698 0210 233CA0E1 		lsr	r3, r3, #24
 19699 0214 070053E3 		cmp	r3, #7
 19700 0218 0100000A 		beq	.L1275
 19701              		.loc 1 7527 5 discriminator 3
 19702 021c 0130E0E3 		mvn	r3, #1
 19703              		.loc 1 7527 5
 19704 0220 590000EA 		b	.L1264
 19705              	.L1275:
 19706              		.loc 1 7527 5 discriminator 4
 19707 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19708 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19709 022c 002093E5 		ldr	r2, [r3]
 19710 0230 10301BE5 		ldr	r3, [fp, #-16]
 19711 0234 103093E5 		ldr	r3, [r3, #16]
 19712 0238 0310A0E1 		mov	r1, r3
 19713 023c 0200A0E1 		mov	r0, r2
 19714 0240 FEFFFFEB 		bl	_RME_Diff
 19715 0244 0030A0E1 		mov	r3, r0
 19716              		.loc 1 7527 5 discriminator 1
 19717 0248 0A0053E3 		cmp	r3, #10
 19718 024c 0100008A 		bhi	.L1276
 19719              		.loc 1 7527 5 discriminator 5
 19720 0250 0730E0E3 		mvn	r3, #7
 19721              		.loc 1 7527 5
 19722 0254 4C0000EA 		b	.L1264
 19723              	.L1276:
 19724              		.loc 1 7527 5 discriminator 6
 19725 0258 10301BE5 		ldr	r3, [fp, #-16]
 19726 025c 043093E5 		ldr	r3, [r3, #4]
 19727 0260 000053E3 		cmp	r3, #0
 19728 0264 0B00000A 		beq	.L1277
 19729              		.loc 1 7527 5 discriminator 7
 19730 0268 0C301BE5 		ldr	r3, [fp, #-12]
 19731 026c 7330FFE6 		uxth	r3, r3
 19732 0270 000053E3 		cmp	r3, #0
 19733 0274 0500001A 		bne	.L1278
 19734              		.loc 1 7527 5 discriminator 9
 19735 0278 10001BE5 		ldr	r0, [fp, #-16]
 19736 027c 0C301BE5 		ldr	r3, [fp, #-12]
 19737 0280 FF38C3E3 		bic	r3, r3, #16711680
 19738 0284 0320A0E1 		mov	r2, r3
 19739 0288 0C101BE5 		ldr	r1, [fp, #-12]
 19740 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19741              	.L1278:
 19742              		.loc 1 7527 5 discriminator 11
 19743 0290 0530E0E3 		mvn	r3, #5
 19744              		.loc 1 7527 5
 19745 0294 3C0000EA 		b	.L1264
 19746              	.L1277:
 19747              		.loc 1 7527 5 discriminator 8
 19748 0298 0C301BE5 		ldr	r3, [fp, #-12]
 19749 029c 7330FFE6 		uxth	r3, r3
 19750 02a0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 481


 19751 02a4 0800000A 		beq	.L1279
 19752              		.loc 1 7527 5 discriminator 12
 19753 02a8 003000E3 		movw	r3, #:lower16:.LC6
 19754 02ac 003040E3 		movt	r3, #:upper16:.LC6
 19755 02b0 002000E3 		movw	r2, #:lower16:.LC7
 19756 02b4 002040E3 		movt	r2, #:upper16:.LC7
 19757 02b8 671D01E3 		movw	r1, #7527
 19758 02bc 000000E3 		movw	r0, #:lower16:.LC8
 19759 02c0 000040E3 		movt	r0, #:upper16:.LC8
 19760 02c4 FEFFFFEB 		bl	RME_Log
 19761              	.L1280:
 19762              		.loc 1 7527 5
 19763 02c8 FEFFFFEA 		b	.L1280
 19764              	.L1279:
7528:../../Source/Kernel/rme_kernel.c ****     
7529:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation */
7530:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Del,struct RME_Inv_Struct*);
 19765              		.loc 1 7530 16 is_stmt 1
 19766 02cc 10301BE5 		ldr	r3, [fp, #-16]
 19767 02d0 0C3093E5 		ldr	r3, [r3, #12]
 19768              		.loc 1 7530 15
 19769 02d4 14300BE5 		str	r3, [fp, #-20]
7531:../../Source/Kernel/rme_kernel.c ****     
7532:../../Source/Kernel/rme_kernel.c ****     /* See if the invocation is currently being used. If yes, we cannot delete it */
7533:../../Source/Kernel/rme_kernel.c ****     if(Invocation->Thd_Act!=RME_NULL)
 19770              		.loc 1 7533 18
 19771 02d8 14301BE5 		ldr	r3, [fp, #-20]
 19772 02dc 0C3093E5 		ldr	r3, [r3, #12]
 19773              		.loc 1 7533 7
 19774 02e0 000053E3 		cmp	r3, #0
 19775 02e4 0700000A 		beq	.L1281
7534:../../Source/Kernel/rme_kernel.c ****     {
7535:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7536:../../Source/Kernel/rme_kernel.c **** 
7537:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Inv_Del,Type_Stat);
 19776              		.loc 1 7537 9
 19777 02e8 10001BE5 		ldr	r0, [fp, #-16]
 19778 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 19779 02f0 FF38C3E3 		bic	r3, r3, #16711680
 19780 02f4 0320A0E1 		mov	r2, r3
 19781 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 19782 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
7538:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19783              		.loc 1 7538 16
 19784 0300 4B3FE0E3 		mvn	r3, #300
 19785 0304 200000EA 		b	.L1264
 19786              	.L1281:
7539:../../Source/Kernel/rme_kernel.c ****     }
7540:../../Source/Kernel/rme_kernel.c ****     else
7541:../../Source/Kernel/rme_kernel.c ****     {
7542:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7543:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7544:../../Source/Kernel/rme_kernel.c ****     }
7545:../../Source/Kernel/rme_kernel.c ****     
7546:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
7547:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Inv_Del,Type_Stat);
 19787              		.loc 1 7547 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 482


 19788 0308 10301BE5 		ldr	r3, [fp, #-16]
 19789 030c 0020A0E3 		mov	r2, #0
 19790 0310 0C101BE5 		ldr	r1, [fp, #-12]
 19791 0314 0300A0E1 		mov	r0, r3
 19792 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19793 031c 0030A0E1 		mov	r3, r0
 19794              		.loc 1 7547 5 is_stmt 0 discriminator 1
 19795 0320 000053E3 		cmp	r3, #0
 19796 0324 0100001A 		bne	.L1282
 19797 0328 0030E0E3 		mvn	r3, #0
 19798              		.loc 1 7547 5
 19799 032c 160000EA 		b	.L1264
 19800              	.L1282:
7548:../../Source/Kernel/rme_kernel.c ****     
7549:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
7550:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Invocation->Prc->Head.Root_Ref), -1);
 19801              		.loc 1 7550 5 is_stmt 1
 19802 0330 14301BE5 		ldr	r3, [fp, #-20]
 19803 0334 083093E5 		ldr	r3, [r3, #8]
 19804 0338 043083E2 		add	r3, r3, #4
 19805 033c 0010E0E3 		mvn	r1, #0
 19806 0340 0300A0E1 		mov	r0, r3
 19807 0344 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7551:../../Source/Kernel/rme_kernel.c ****     
7552:../../Source/Kernel/rme_kernel.c ****     /* Try to clear the area - this must be successful */
7553:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Invocation,RME_INV_SIZE)==0);
 19808              		.loc 1 7553 5
 19809 0348 14301BE5 		ldr	r3, [fp, #-20]
 19810 034c 2410A0E3 		mov	r1, #36
 19811 0350 0300A0E1 		mov	r0, r3
 19812 0354 FEFFFFEB 		bl	_RME_Kot_Erase
 19813 0358 0030A0E1 		mov	r3, r0
 19814              		.loc 1 7553 5 is_stmt 0 discriminator 1
 19815 035c 000053E3 		cmp	r3, #0
 19816 0360 0800000A 		beq	.L1283
 19817 0364 003000E3 		movw	r3, #:lower16:.LC6
 19818 0368 003040E3 		movt	r3, #:upper16:.LC6
 19819 036c 002000E3 		movw	r2, #:lower16:.LC7
 19820 0370 002040E3 		movt	r2, #:upper16:.LC7
 19821 0374 811D01E3 		movw	r1, #7553
 19822 0378 000000E3 		movw	r0, #:lower16:.LC8
 19823 037c 000040E3 		movt	r0, #:upper16:.LC8
 19824 0380 FEFFFFEB 		bl	RME_Log
 19825              	.L1284:
 19826              		.loc 1 7553 5
 19827 0384 FEFFFFEA 		b	.L1284
 19828              	.L1283:
7554:../../Source/Kernel/rme_kernel.c ****     
7555:../../Source/Kernel/rme_kernel.c ****     return 0;
 19829              		.loc 1 7555 12 is_stmt 1
 19830 0388 0030A0E3 		mov	r3, #0
 19831              	.L1264:
7556:../../Source/Kernel/rme_kernel.c **** }
 19832              		.loc 1 7556 1
 19833 038c 0300A0E1 		mov	r0, r3
 19834 0390 04D04BE2 		sub	sp, fp, #4
 19835              		.cfi_def_cfa 13, 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 483


 19836              		@ sp needed
 19837 0394 0088BDE8 		pop	{fp, pc}
 19838              		.cfi_endproc
 19839              	.LFE73:
 19841              		.section	.text._RME_Inv_Set,"ax",%progbits
 19842              		.align	2
 19843              		.syntax unified
 19844              		.arm
 19846              	_RME_Inv_Set:
 19847              	.LFB74:
7557:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Del *************************************************/
7558:../../Source/Kernel/rme_kernel.c **** 
7559:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Set ******************************************************
7560:../../Source/Kernel/rme_kernel.c **** Description : Set an invocation stub's entry point and stack. The registers will
7561:../../Source/Kernel/rme_kernel.c ****               be initialized with these contents.
7562:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7563:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7564:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7565:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry of the thread.
7566:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
7567:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc_Ret - If there is an exception in this
7568:../../Source/Kernel/rme_kernel.c ****                                      invocation, return immediately, or wait
7569:../../Source/Kernel/rme_kernel.c ****                                      for fault handling?
7570:../../Source/Kernel/rme_kernel.c ****                                      If 1, we return directly on fault.
7571:../../Source/Kernel/rme_kernel.c **** Output      : None.
7572:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7573:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7574:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Set(struct RME_Cap_Cpt* Cpt,
7575:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7576:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry,
7577:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Stack,
7578:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc_Ret)
7579:../../Source/Kernel/rme_kernel.c **** {
 19848              		.loc 1 7579 1
 19849              		.cfi_startproc
 19850              		@ args = 4, pretend = 0, frame = 32
 19851              		@ frame_needed = 1, uses_anonymous_args = 0
 19852 0000 00482DE9 		push	{fp, lr}
 19853              		.cfi_def_cfa_offset 8
 19854              		.cfi_offset 11, -8
 19855              		.cfi_offset 14, -4
 19856 0004 04B08DE2 		add	fp, sp, #4
 19857              		.cfi_def_cfa 11, 4
 19858 0008 20D04DE2 		sub	sp, sp, #32
 19859 000c 18000BE5 		str	r0, [fp, #-24]
 19860 0010 1C100BE5 		str	r1, [fp, #-28]
 19861 0014 20200BE5 		str	r2, [fp, #-32]
 19862 0018 24300BE5 		str	r3, [fp, #-36]
7580:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7581:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Inv_Struct* Invocation;
7582:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7583:../../Source/Kernel/rme_kernel.c ****     
7584:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7585:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 19863              		.loc 1 7585 5
 19864 001c 1C301BE5 		ldr	r3, [fp, #-28]
 19865 0020 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 484


 19866 0024 000053E3 		cmp	r3, #0
 19867 0028 1C00001A 		bne	.L1286
 19868              		.loc 1 7585 5 is_stmt 0 discriminator 1
 19869 002c 18301BE5 		ldr	r3, [fp, #-24]
 19870 0030 142093E5 		ldr	r2, [r3, #20]
 19871 0034 1C301BE5 		ldr	r3, [fp, #-28]
 19872 0038 030052E1 		cmp	r2, r3
 19873 003c 0100008A 		bhi	.L1287
 19874              		.loc 1 7585 5 discriminator 3
 19875 0040 0230E0E3 		mvn	r3, #2
 19876              		.loc 1 7585 5
 19877 0044 670000EA 		b	.L1288
 19878              	.L1287:
 19879              		.loc 1 7585 5 discriminator 4
 19880 0048 1C301BE5 		ldr	r3, [fp, #-28]
 19881 004c 8322A0E1 		lsl	r2, r3, #5
 19882 0050 18301BE5 		ldr	r3, [fp, #-24]
 19883 0054 0C3093E5 		ldr	r3, [r3, #12]
 19884 0058 033082E0 		add	r3, r2, r3
 19885 005c 08300BE5 		str	r3, [fp, #-8]
 19886 0060 08301BE5 		ldr	r3, [fp, #-8]
 19887 0064 0300A0E1 		mov	r0, r3
 19888 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19889 006c 0C000BE5 		str	r0, [fp, #-12]
 19890              		.loc 1 7585 5 discriminator 1
 19891 0070 0C301BE5 		ldr	r3, [fp, #-12]
 19892 0074 FF3803E2 		and	r3, r3, #16711680
 19893 0078 020853E3 		cmp	r3, #131072
 19894 007c 0100001A 		bne	.L1289
 19895              		.loc 1 7585 5 discriminator 5
 19896 0080 0830E0E3 		mvn	r3, #8
 19897              		.loc 1 7585 5
 19898 0084 570000EA 		b	.L1288
 19899              	.L1289:
 19900              		.loc 1 7585 5 discriminator 6
 19901 0088 0C301BE5 		ldr	r3, [fp, #-12]
 19902 008c 233CA0E1 		lsr	r3, r3, #24
 19903 0090 070053E3 		cmp	r3, #7
 19904 0094 3F00000A 		beq	.L1290
 19905              		.loc 1 7585 5 discriminator 7
 19906 0098 0130E0E3 		mvn	r3, #1
 19907              		.loc 1 7585 5
 19908 009c 510000EA 		b	.L1288
 19909              	.L1286:
 19910              		.loc 1 7585 5 discriminator 2
 19911 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 19912 00a4 2324A0E1 		lsr	r2, r3, #8
 19913 00a8 18301BE5 		ldr	r3, [fp, #-24]
 19914 00ac 143093E5 		ldr	r3, [r3, #20]
 19915 00b0 030052E1 		cmp	r2, r3
 19916 00b4 0100003A 		bcc	.L1291
 19917              		.loc 1 7585 5 discriminator 8
 19918 00b8 0230E0E3 		mvn	r3, #2
 19919              		.loc 1 7585 5
 19920 00bc 490000EA 		b	.L1288
 19921              	.L1291:
 19922              		.loc 1 7585 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 485


 19923 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 19924 00c4 2334A0E1 		lsr	r3, r3, #8
 19925 00c8 8322A0E1 		lsl	r2, r3, #5
 19926 00cc 18301BE5 		ldr	r3, [fp, #-24]
 19927 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19928 00d4 033082E0 		add	r3, r2, r3
 19929 00d8 08300BE5 		str	r3, [fp, #-8]
 19930 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19931 00e0 0300A0E1 		mov	r0, r3
 19932 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19933 00e8 0C000BE5 		str	r0, [fp, #-12]
 19934              		.loc 1 7585 5 discriminator 1
 19935 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 19936 00f0 FF3803E2 		and	r3, r3, #16711680
 19937 00f4 020853E3 		cmp	r3, #131072
 19938 00f8 0100001A 		bne	.L1292
 19939              		.loc 1 7585 5 discriminator 10
 19940 00fc 0830E0E3 		mvn	r3, #8
 19941              		.loc 1 7585 5
 19942 0100 380000EA 		b	.L1288
 19943              	.L1292:
 19944              		.loc 1 7585 5 discriminator 11
 19945 0104 0C301BE5 		ldr	r3, [fp, #-12]
 19946 0108 233CA0E1 		lsr	r3, r3, #24
 19947 010c 030053E3 		cmp	r3, #3
 19948 0110 0100000A 		beq	.L1293
 19949              		.loc 1 7585 5 discriminator 12
 19950 0114 0130E0E3 		mvn	r3, #1
 19951              		.loc 1 7585 5
 19952 0118 320000EA 		b	.L1288
 19953              	.L1293:
 19954              		.loc 1 7585 5 discriminator 13
 19955 011c 1C301BE5 		ldr	r3, [fp, #-28]
 19956 0120 7F2003E2 		and	r2, r3, #127
 19957 0124 08301BE5 		ldr	r3, [fp, #-8]
 19958 0128 143093E5 		ldr	r3, [r3, #20]
 19959 012c 030052E1 		cmp	r2, r3
 19960 0130 0100003A 		bcc	.L1294
 19961              		.loc 1 7585 5 discriminator 14
 19962 0134 0230E0E3 		mvn	r3, #2
 19963              		.loc 1 7585 5
 19964 0138 2A0000EA 		b	.L1288
 19965              	.L1294:
 19966              		.loc 1 7585 5 discriminator 15
 19967 013c 1C301BE5 		ldr	r3, [fp, #-28]
 19968 0140 7F3003E2 		and	r3, r3, #127
 19969 0144 8322A0E1 		lsl	r2, r3, #5
 19970 0148 08301BE5 		ldr	r3, [fp, #-8]
 19971 014c 0C3093E5 		ldr	r3, [r3, #12]
 19972 0150 033082E0 		add	r3, r2, r3
 19973 0154 08300BE5 		str	r3, [fp, #-8]
 19974 0158 08301BE5 		ldr	r3, [fp, #-8]
 19975 015c 0300A0E1 		mov	r0, r3
 19976 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19977 0164 0C000BE5 		str	r0, [fp, #-12]
 19978              		.loc 1 7585 5 discriminator 1
 19979 0168 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 486


 19980 016c FF3803E2 		and	r3, r3, #16711680
 19981 0170 020853E3 		cmp	r3, #131072
 19982 0174 0100001A 		bne	.L1295
 19983              		.loc 1 7585 5 discriminator 16
 19984 0178 0830E0E3 		mvn	r3, #8
 19985              		.loc 1 7585 5
 19986 017c 190000EA 		b	.L1288
 19987              	.L1295:
 19988              		.loc 1 7585 5 discriminator 17
 19989 0180 0C301BE5 		ldr	r3, [fp, #-12]
 19990 0184 233CA0E1 		lsr	r3, r3, #24
 19991 0188 070053E3 		cmp	r3, #7
 19992 018c 0100000A 		beq	.L1290
 19993              		.loc 1 7585 5 discriminator 18
 19994 0190 0130E0E3 		mvn	r3, #1
 19995              		.loc 1 7585 5
 19996 0194 130000EA 		b	.L1288
 19997              	.L1290:
7586:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7587:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7588:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_SET);
 19998              		.loc 1 7588 5 is_stmt 1
 19999 0198 08301BE5 		ldr	r3, [fp, #-8]
 20000 019c 083093E5 		ldr	r3, [r3, #8]
 20001 01a0 013003E2 		and	r3, r3, #1
 20002 01a4 000053E3 		cmp	r3, #0
 20003 01a8 0100001A 		bne	.L1296
 20004              		.loc 1 7588 5 is_stmt 0 discriminator 1
 20005 01ac 0630E0E3 		mvn	r3, #6
 20006              		.loc 1 7588 5
 20007 01b0 0C0000EA 		b	.L1288
 20008              	.L1296:
7589:../../Source/Kernel/rme_kernel.c ****     
7590:../../Source/Kernel/rme_kernel.c ****     /* Commit the change - we do not care if the invocation is in use, it is
7591:../../Source/Kernel/rme_kernel.c ****      * the user's responsibility to guarantee the integrity of applications */
7592:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 20009              		.loc 1 7592 16 is_stmt 1
 20010 01b4 08301BE5 		ldr	r3, [fp, #-8]
 20011 01b8 0C3093E5 		ldr	r3, [r3, #12]
 20012              		.loc 1 7592 15
 20013 01bc 10300BE5 		str	r3, [fp, #-16]
7593:../../Source/Kernel/rme_kernel.c ****     Invocation->Entry=Entry;
 20014              		.loc 1 7593 22
 20015 01c0 10301BE5 		ldr	r3, [fp, #-16]
 20016 01c4 20201BE5 		ldr	r2, [fp, #-32]
 20017 01c8 102083E5 		str	r2, [r3, #16]
7594:../../Source/Kernel/rme_kernel.c ****     Invocation->Stack=Stack;
 20018              		.loc 1 7594 22
 20019 01cc 10301BE5 		ldr	r3, [fp, #-16]
 20020 01d0 24201BE5 		ldr	r2, [fp, #-36]
 20021 01d4 142083E5 		str	r2, [r3, #20]
7595:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=Is_Exc_Ret;
 20022              		.loc 1 7595 27
 20023 01d8 10301BE5 		ldr	r3, [fp, #-16]
 20024 01dc 04209BE5 		ldr	r2, [fp, #4]
 20025 01e0 182083E5 		str	r2, [r3, #24]
7596:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 487


7597:../../Source/Kernel/rme_kernel.c ****     return 0;
 20026              		.loc 1 7597 12
 20027 01e4 0030A0E3 		mov	r3, #0
 20028              	.L1288:
7598:../../Source/Kernel/rme_kernel.c **** }
 20029              		.loc 1 7598 1
 20030 01e8 0300A0E1 		mov	r0, r3
 20031 01ec 04D04BE2 		sub	sp, fp, #4
 20032              		.cfi_def_cfa 13, 8
 20033              		@ sp needed
 20034 01f0 0088BDE8 		pop	{fp, pc}
 20035              		.cfi_endproc
 20036              	.LFE74:
 20038              		.section	.text._RME_Inv_Act,"ax",%progbits
 20039              		.align	2
 20040              		.syntax unified
 20041              		.arm
 20043              	_RME_Inv_Act:
 20044              	.LFB75:
7599:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Set *************************************************/
7600:../../Source/Kernel/rme_kernel.c **** 
7601:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Act ******************************************************
7602:../../Source/Kernel/rme_kernel.c **** Description : Call the invocation stub. One parameter is guaranteed; however, 
7603:../../Source/Kernel/rme_kernel.c ****               some platforms may provide more than that.
7604:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7605:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7606:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The invocation stub.
7607:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7608:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter for the call.
7609:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7610:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7611:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Act(struct RME_Cap_Cpt* Cpt, 
7612:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7613:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7614:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param)
7615:../../Source/Kernel/rme_kernel.c **** {
 20045              		.loc 1 7615 1
 20046              		.cfi_startproc
 20047              		@ args = 0, pretend = 0, frame = 40
 20048              		@ frame_needed = 1, uses_anonymous_args = 0
 20049 0000 00482DE9 		push	{fp, lr}
 20050              		.cfi_def_cfa_offset 8
 20051              		.cfi_offset 11, -8
 20052              		.cfi_offset 14, -4
 20053 0004 04B08DE2 		add	fp, sp, #4
 20054              		.cfi_def_cfa 11, 4
 20055 0008 30D04DE2 		sub	sp, sp, #48
 20056 000c 20000BE5 		str	r0, [fp, #-32]
 20057 0010 24100BE5 		str	r1, [fp, #-36]
 20058 0014 28200BE5 		str	r2, [fp, #-40]
 20059 0018 2C300BE5 		str	r3, [fp, #-44]
7616:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7617:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7618:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7619:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Act;
7620:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7621:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 488


7622:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
7623:../../Source/Kernel/rme_kernel.c ****     /* Check if the current invocation stack has reached its limit */
7624:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
7625:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Ctx.Invstk_Depth>=RME_INV_DEPTH_MAX)
7626:../../Source/Kernel/rme_kernel.c ****     {
7627:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7628:../../Source/Kernel/rme_kernel.c **** 
7629:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
7630:../../Source/Kernel/rme_kernel.c ****     }
7631:../../Source/Kernel/rme_kernel.c ****     else
7632:../../Source/Kernel/rme_kernel.c ****     {
7633:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7634:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7635:../../Source/Kernel/rme_kernel.c ****     }
7636:../../Source/Kernel/rme_kernel.c **** #endif
7637:../../Source/Kernel/rme_kernel.c **** 
7638:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7639:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 20060              		.loc 1 7639 5
 20061 001c 28301BE5 		ldr	r3, [fp, #-40]
 20062 0020 803003E2 		and	r3, r3, #128
 20063 0024 000053E3 		cmp	r3, #0
 20064 0028 1C00001A 		bne	.L1298
 20065              		.loc 1 7639 5 is_stmt 0 discriminator 1
 20066 002c 20301BE5 		ldr	r3, [fp, #-32]
 20067 0030 142093E5 		ldr	r2, [r3, #20]
 20068 0034 28301BE5 		ldr	r3, [fp, #-40]
 20069 0038 030052E1 		cmp	r2, r3
 20070 003c 0100008A 		bhi	.L1299
 20071              		.loc 1 7639 5 discriminator 3
 20072 0040 0230E0E3 		mvn	r3, #2
 20073              		.loc 1 7639 5
 20074 0044 A60000EA 		b	.L1300
 20075              	.L1299:
 20076              		.loc 1 7639 5 discriminator 4
 20077 0048 28301BE5 		ldr	r3, [fp, #-40]
 20078 004c 8322A0E1 		lsl	r2, r3, #5
 20079 0050 20301BE5 		ldr	r3, [fp, #-32]
 20080 0054 0C3093E5 		ldr	r3, [r3, #12]
 20081 0058 033082E0 		add	r3, r2, r3
 20082 005c 08300BE5 		str	r3, [fp, #-8]
 20083 0060 08301BE5 		ldr	r3, [fp, #-8]
 20084 0064 0300A0E1 		mov	r0, r3
 20085 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20086 006c 0C000BE5 		str	r0, [fp, #-12]
 20087              		.loc 1 7639 5 discriminator 1
 20088 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20089 0074 FF3803E2 		and	r3, r3, #16711680
 20090 0078 020853E3 		cmp	r3, #131072
 20091 007c 0100001A 		bne	.L1301
 20092              		.loc 1 7639 5 discriminator 5
 20093 0080 0830E0E3 		mvn	r3, #8
 20094              		.loc 1 7639 5
 20095 0084 960000EA 		b	.L1300
 20096              	.L1301:
 20097              		.loc 1 7639 5 discriminator 6
 20098 0088 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 489


 20099 008c 233CA0E1 		lsr	r3, r3, #24
 20100 0090 070053E3 		cmp	r3, #7
 20101 0094 3F00000A 		beq	.L1302
 20102              		.loc 1 7639 5 discriminator 7
 20103 0098 0130E0E3 		mvn	r3, #1
 20104              		.loc 1 7639 5
 20105 009c 900000EA 		b	.L1300
 20106              	.L1298:
 20107              		.loc 1 7639 5 discriminator 2
 20108 00a0 28301BE5 		ldr	r3, [fp, #-40]
 20109 00a4 2324A0E1 		lsr	r2, r3, #8
 20110 00a8 20301BE5 		ldr	r3, [fp, #-32]
 20111 00ac 143093E5 		ldr	r3, [r3, #20]
 20112 00b0 030052E1 		cmp	r2, r3
 20113 00b4 0100003A 		bcc	.L1303
 20114              		.loc 1 7639 5 discriminator 8
 20115 00b8 0230E0E3 		mvn	r3, #2
 20116              		.loc 1 7639 5
 20117 00bc 880000EA 		b	.L1300
 20118              	.L1303:
 20119              		.loc 1 7639 5 discriminator 9
 20120 00c0 28301BE5 		ldr	r3, [fp, #-40]
 20121 00c4 2334A0E1 		lsr	r3, r3, #8
 20122 00c8 8322A0E1 		lsl	r2, r3, #5
 20123 00cc 20301BE5 		ldr	r3, [fp, #-32]
 20124 00d0 0C3093E5 		ldr	r3, [r3, #12]
 20125 00d4 033082E0 		add	r3, r2, r3
 20126 00d8 08300BE5 		str	r3, [fp, #-8]
 20127 00dc 08301BE5 		ldr	r3, [fp, #-8]
 20128 00e0 0300A0E1 		mov	r0, r3
 20129 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20130 00e8 0C000BE5 		str	r0, [fp, #-12]
 20131              		.loc 1 7639 5 discriminator 1
 20132 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 20133 00f0 FF3803E2 		and	r3, r3, #16711680
 20134 00f4 020853E3 		cmp	r3, #131072
 20135 00f8 0100001A 		bne	.L1304
 20136              		.loc 1 7639 5 discriminator 10
 20137 00fc 0830E0E3 		mvn	r3, #8
 20138              		.loc 1 7639 5
 20139 0100 770000EA 		b	.L1300
 20140              	.L1304:
 20141              		.loc 1 7639 5 discriminator 11
 20142 0104 0C301BE5 		ldr	r3, [fp, #-12]
 20143 0108 233CA0E1 		lsr	r3, r3, #24
 20144 010c 030053E3 		cmp	r3, #3
 20145 0110 0100000A 		beq	.L1305
 20146              		.loc 1 7639 5 discriminator 12
 20147 0114 0130E0E3 		mvn	r3, #1
 20148              		.loc 1 7639 5
 20149 0118 710000EA 		b	.L1300
 20150              	.L1305:
 20151              		.loc 1 7639 5 discriminator 13
 20152 011c 28301BE5 		ldr	r3, [fp, #-40]
 20153 0120 7F2003E2 		and	r2, r3, #127
 20154 0124 08301BE5 		ldr	r3, [fp, #-8]
 20155 0128 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 490


 20156 012c 030052E1 		cmp	r2, r3
 20157 0130 0100003A 		bcc	.L1306
 20158              		.loc 1 7639 5 discriminator 14
 20159 0134 0230E0E3 		mvn	r3, #2
 20160              		.loc 1 7639 5
 20161 0138 690000EA 		b	.L1300
 20162              	.L1306:
 20163              		.loc 1 7639 5 discriminator 15
 20164 013c 28301BE5 		ldr	r3, [fp, #-40]
 20165 0140 7F3003E2 		and	r3, r3, #127
 20166 0144 8322A0E1 		lsl	r2, r3, #5
 20167 0148 08301BE5 		ldr	r3, [fp, #-8]
 20168 014c 0C3093E5 		ldr	r3, [r3, #12]
 20169 0150 033082E0 		add	r3, r2, r3
 20170 0154 08300BE5 		str	r3, [fp, #-8]
 20171 0158 08301BE5 		ldr	r3, [fp, #-8]
 20172 015c 0300A0E1 		mov	r0, r3
 20173 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20174 0164 0C000BE5 		str	r0, [fp, #-12]
 20175              		.loc 1 7639 5 discriminator 1
 20176 0168 0C301BE5 		ldr	r3, [fp, #-12]
 20177 016c FF3803E2 		and	r3, r3, #16711680
 20178 0170 020853E3 		cmp	r3, #131072
 20179 0174 0100001A 		bne	.L1307
 20180              		.loc 1 7639 5 discriminator 16
 20181 0178 0830E0E3 		mvn	r3, #8
 20182              		.loc 1 7639 5
 20183 017c 580000EA 		b	.L1300
 20184              	.L1307:
 20185              		.loc 1 7639 5 discriminator 17
 20186 0180 0C301BE5 		ldr	r3, [fp, #-12]
 20187 0184 233CA0E1 		lsr	r3, r3, #24
 20188 0188 070053E3 		cmp	r3, #7
 20189 018c 0100000A 		beq	.L1302
 20190              		.loc 1 7639 5 discriminator 18
 20191 0190 0130E0E3 		mvn	r3, #1
 20192              		.loc 1 7639 5
 20193 0194 520000EA 		b	.L1300
 20194              	.L1302:
7640:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7641:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7642:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_ACT);
 20195              		.loc 1 7642 5 is_stmt 1
 20196 0198 08301BE5 		ldr	r3, [fp, #-8]
 20197 019c 083093E5 		ldr	r3, [r3, #8]
 20198 01a0 023003E2 		and	r3, r3, #2
 20199 01a4 000053E3 		cmp	r3, #0
 20200 01a8 0100001A 		bne	.L1308
 20201              		.loc 1 7642 5 is_stmt 0 discriminator 1
 20202 01ac 0630E0E3 		mvn	r3, #6
 20203              		.loc 1 7642 5
 20204 01b0 4B0000EA 		b	.L1300
 20205              	.L1308:
7643:../../Source/Kernel/rme_kernel.c **** 
7644:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation struct */
7645:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 20206              		.loc 1 7645 16 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 491


 20207 01b4 08301BE5 		ldr	r3, [fp, #-8]
 20208 01b8 0C3093E5 		ldr	r3, [r3, #12]
 20209              		.loc 1 7645 15
 20210 01bc 10300BE5 		str	r3, [fp, #-16]
7646:../../Source/Kernel/rme_kernel.c ****     /* Check if this invocation port is already active */
7647:../../Source/Kernel/rme_kernel.c ****     Thd_Act=Invocation->Thd_Act;
 20211              		.loc 1 7647 12
 20212 01c0 10301BE5 		ldr	r3, [fp, #-16]
 20213 01c4 0C3093E5 		ldr	r3, [r3, #12]
 20214 01c8 14300BE5 		str	r3, [fp, #-20]
7648:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Thd_Act!=0U))
 20215              		.loc 1 7648 7
 20216 01cc 14301BE5 		ldr	r3, [fp, #-20]
 20217 01d0 000053E3 		cmp	r3, #0
 20218 01d4 0100000A 		beq	.L1309
7649:../../Source/Kernel/rme_kernel.c ****     {
7650:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7651:../../Source/Kernel/rme_kernel.c **** 
7652:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 20219              		.loc 1 7652 16
 20220 01d8 4B3FE0E3 		mvn	r3, #300
 20221 01dc 400000EA 		b	.L1300
 20222              	.L1309:
7653:../../Source/Kernel/rme_kernel.c ****     }
7654:../../Source/Kernel/rme_kernel.c ****     else
7655:../../Source/Kernel/rme_kernel.c ****     {
7656:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7657:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7658:../../Source/Kernel/rme_kernel.c ****     }
7659:../../Source/Kernel/rme_kernel.c **** 
7660:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX==0U)
7661:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 20223              		.loc 1 7661 12
 20224 01e0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 20225 01e4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 20226 01e8 043093E5 		ldr	r3, [r3, #4]
 20227 01ec 18300BE5 		str	r3, [fp, #-24]
7662:../../Source/Kernel/rme_kernel.c **** #endif
7663:../../Source/Kernel/rme_kernel.c ****     
7664:../../Source/Kernel/rme_kernel.c ****     /* Try to do CAS and activate this port */
7665:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_COMP_SWAP((volatile rme_ptr_t*)&(Invocation->Thd_Act),
 20228              		.loc 1 7665 8
 20229 01f0 10301BE5 		ldr	r3, [fp, #-16]
 20230 01f4 0C3083E2 		add	r3, r3, #12
 20231 01f8 14101BE5 		ldr	r1, [fp, #-20]
 20232 01fc 18201BE5 		ldr	r2, [fp, #-24]
 20233 0200 0300A0E1 		mov	r0, r3
 20234 0204 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20235 0208 0030A0E1 		mov	r3, r0
 20236              		.loc 1 7665 7 discriminator 1
 20237 020c 000053E3 		cmp	r3, #0
 20238 0210 0100001A 		bne	.L1310
7666:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Act,
7667:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Cur)==RME_CASFAIL))
7668:../../Source/Kernel/rme_kernel.c ****     {
7669:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7670:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 492


7671:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 20239              		.loc 1 7671 16
 20240 0214 4B3FE0E3 		mvn	r3, #300
 20241 0218 310000EA 		b	.L1300
 20242              	.L1310:
7672:../../Source/Kernel/rme_kernel.c ****     }
7673:../../Source/Kernel/rme_kernel.c ****     else
7674:../../Source/Kernel/rme_kernel.c ****     {
7675:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7676:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7677:../../Source/Kernel/rme_kernel.c ****     }
7678:../../Source/Kernel/rme_kernel.c **** 
7679:../../Source/Kernel/rme_kernel.c ****     /* Save whatever is needed to return to the point - normally only SP and IP needed
7680:../../Source/Kernel/rme_kernel.c ****      * because all other registers, including the coprocessor registers, are saved at
7681:../../Source/Kernel/rme_kernel.c ****      * user-level. We do not set the return value because it will be set by Inv_Ret.
7682:../../Source/Kernel/rme_kernel.c ****      * The coprocessor state will be consistent across the call */
7683:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Save(&(Invocation->Ret),Reg);
 20243              		.loc 1 7683 5
 20244 021c 10301BE5 		ldr	r3, [fp, #-16]
 20245 0220 1C3083E2 		add	r3, r3, #28
 20246 0224 24101BE5 		ldr	r1, [fp, #-36]
 20247 0228 0300A0E1 		mov	r0, r3
 20248 022c FEFFFFEB 		bl	__RME_Inv_Reg_Save
7684:../../Source/Kernel/rme_kernel.c ****     /* Push this into the stack: insert after the thread list header */
7685:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Invocation->Head),
 20249              		.loc 1 7685 5
 20250 0230 10001BE5 		ldr	r0, [fp, #-16]
 20251 0234 18301BE5 		ldr	r3, [fp, #-24]
 20252 0238 4C1083E2 		add	r1, r3, #76
 20253 023c 18301BE5 		ldr	r3, [fp, #-24]
 20254 0240 4C3093E5 		ldr	r3, [r3, #76]
 20255 0244 0320A0E1 		mov	r2, r3
 20256 0248 FEFFFFEB 		bl	_RME_List_Ins
7686:../../Source/Kernel/rme_kernel.c ****                   &(Thd_Cur->Ctx.Invstk),
7687:../../Source/Kernel/rme_kernel.c ****                   Thd_Cur->Ctx.Invstk.Next);
7688:../../Source/Kernel/rme_kernel.c ****     /* Increase invocation depth - no atomic operation needed */
7689:../../Source/Kernel/rme_kernel.c ****     Thd_Cur->Ctx.Invstk_Depth++;
 20257              		.loc 1 7689 17
 20258 024c 18301BE5 		ldr	r3, [fp, #-24]
 20259 0250 543093E5 		ldr	r3, [r3, #84]
 20260              		.loc 1 7689 30
 20261 0254 012083E2 		add	r2, r3, #1
 20262 0258 18301BE5 		ldr	r3, [fp, #-24]
 20263 025c 542083E5 		str	r2, [r3, #84]
7690:../../Source/Kernel/rme_kernel.c ****     /* Setup the register contents, and do the invocation */
7691:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Init(RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
 20264              		.loc 1 7691 24
 20265 0260 18301BE5 		ldr	r3, [fp, #-24]
 20266 0264 443093E5 		ldr	r3, [r3, #68]
 20267              		.loc 1 7691 5
 20268 0268 0201C3E3 		bic	r0, r3, #-2147483648
 20269 026c 10301BE5 		ldr	r3, [fp, #-16]
 20270 0270 101093E5 		ldr	r1, [r3, #16]
 20271 0274 10301BE5 		ldr	r3, [fp, #-16]
 20272 0278 142093E5 		ldr	r2, [r3, #20]
 20273 027c 24301BE5 		ldr	r3, [fp, #-36]
 20274 0280 00308DE5 		str	r3, [sp]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 493


 20275 0284 2C301BE5 		ldr	r3, [fp, #-44]
 20276 0288 FEFFFFEB 		bl	__RME_Thd_Reg_Init
7692:../../Source/Kernel/rme_kernel.c ****                        Invocation->Entry,
7693:../../Source/Kernel/rme_kernel.c ****                        Invocation->Stack,
7694:../../Source/Kernel/rme_kernel.c ****                        Param,Reg);
7695:../../Source/Kernel/rme_kernel.c ****     
7696:../../Source/Kernel/rme_kernel.c ****     
7697:../../Source/Kernel/rme_kernel.c ****     /* We are assuming that we are always invoking into a new process (why use synchronous
7698:../../Source/Kernel/rme_kernel.c ****      * invocation if you don't do so?). So we always switch page tables regardless. */
7699:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7700:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20277              		.loc 1 7700 5
 20278 028c 10301BE5 		ldr	r3, [fp, #-16]
 20279 0290 083093E5 		ldr	r3, [r3, #8]
 20280 0294 183093E5 		ldr	r3, [r3, #24]
 20281 0298 003093E5 		ldr	r3, [r3]
 20282 029c 7330FFE6 		uxth	r3, r3
 20283 02a0 000053E3 		cmp	r3, #0
 20284 02a4 0800000A 		beq	.L1311
 20285              		.loc 1 7700 5 is_stmt 0 discriminator 1
 20286 02a8 003000E3 		movw	r3, #:lower16:.LC6
 20287 02ac 003040E3 		movt	r3, #:upper16:.LC6
 20288 02b0 002000E3 		movw	r2, #:lower16:.LC7
 20289 02b4 002040E3 		movt	r2, #:upper16:.LC7
 20290 02b8 141E01E3 		movw	r1, #7700
 20291 02bc 000000E3 		movw	r0, #:lower16:.LC8
 20292 02c0 000040E3 		movt	r0, #:upper16:.LC8
 20293 02c4 FEFFFFEB 		bl	RME_Log
 20294              	.L1312:
 20295              		.loc 1 7700 5
 20296 02c8 FEFFFFEA 		b	.L1312
 20297              	.L1311:
7701:../../Source/Kernel/rme_kernel.c **** #endif
7702:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Set(Invocation->Prc->Pgt);
 20298              		.loc 1 7702 29 is_stmt 1
 20299 02cc 10301BE5 		ldr	r3, [fp, #-16]
 20300 02d0 083093E5 		ldr	r3, [r3, #8]
 20301              		.loc 1 7702 5
 20302 02d4 183093E5 		ldr	r3, [r3, #24]
 20303 02d8 0300A0E1 		mov	r0, r3
 20304 02dc FEFFFFEB 		bl	__RME_Pgt_Set
7703:../../Source/Kernel/rme_kernel.c ****     
7704:../../Source/Kernel/rme_kernel.c ****     return 0;
 20305              		.loc 1 7704 12
 20306 02e0 0030A0E3 		mov	r3, #0
 20307              	.L1300:
7705:../../Source/Kernel/rme_kernel.c **** }
 20308              		.loc 1 7705 1
 20309 02e4 0300A0E1 		mov	r0, r3
 20310 02e8 04D04BE2 		sub	sp, fp, #4
 20311              		.cfi_def_cfa 13, 8
 20312              		@ sp needed
 20313 02ec 0088BDE8 		pop	{fp, pc}
 20314              		.cfi_endproc
 20315              	.LFE75:
 20317              		.section	.text._RME_Inv_Ret,"ax",%progbits
 20318              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 494


 20319              		.syntax unified
 20320              		.arm
 20322              	_RME_Inv_Ret:
 20323              	.LFB76:
7706:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Act *************************************************/
7707:../../Source/Kernel/rme_kernel.c **** 
7708:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Ret ******************************************************
7709:../../Source/Kernel/rme_kernel.c **** Description : Return from the invocation function, and set the return value to
7710:../../Source/Kernel/rme_kernel.c ****               the old register set. This function does not need a capability
7711:../../Source/Kernel/rme_kernel.c ****               table to work.
7712:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
7713:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Retval - The return value of this synchronous invocation.
7714:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc - Are we attempting a return from exception?
7715:../../Source/Kernel/rme_kernel.c **** Output      : None.
7716:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7717:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7718:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Ret(struct RME_Reg_Struct* Reg,
7719:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Retval,
7720:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc)
7721:../../Source/Kernel/rme_kernel.c **** {
 20324              		.loc 1 7721 1
 20325              		.cfi_startproc
 20326              		@ args = 0, pretend = 0, frame = 24
 20327              		@ frame_needed = 1, uses_anonymous_args = 0
 20328 0000 00482DE9 		push	{fp, lr}
 20329              		.cfi_def_cfa_offset 8
 20330              		.cfi_offset 11, -8
 20331              		.cfi_offset 14, -4
 20332 0004 04B08DE2 		add	fp, sp, #4
 20333              		.cfi_def_cfa 11, 4
 20334 0008 18D04DE2 		sub	sp, sp, #24
 20335 000c 10000BE5 		str	r0, [fp, #-16]
 20336 0010 14100BE5 		str	r1, [fp, #-20]
 20337 0014 18200BE5 		str	r2, [fp, #-24]
7722:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
7723:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7724:../../Source/Kernel/rme_kernel.c **** 
7725:../../Source/Kernel/rme_kernel.c ****     /* See if we can return; If we can, get the structure */
7726:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CPU_LOCAL()->Thd_Cur;
 20338              		.loc 1 7726 11
 20339 0018 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 20340 001c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 20341 0020 043093E5 		ldr	r3, [r3, #4]
 20342 0024 08300BE5 		str	r3, [fp, #-8]
7727:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20343              		.loc 1 7727 16
 20344 0028 08301BE5 		ldr	r3, [fp, #-8]
 20345 002c 4C2093E5 		ldr	r2, [r3, #76]
 20346 0030 08301BE5 		ldr	r3, [fp, #-8]
 20347 0034 4C3083E2 		add	r3, r3, #76
 20348 0038 030052E1 		cmp	r2, r3
 20349 003c 0200000A 		beq	.L1314
 20350              		.loc 1 7727 16 is_stmt 0 discriminator 1
 20351 0040 08301BE5 		ldr	r3, [fp, #-8]
 20352 0044 4C3093E5 		ldr	r3, [r3, #76]
 20353 0048 000000EA 		b	.L1315
 20354              	.L1314:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 495


 20355              		.loc 1 7727 16 discriminator 2
 20356 004c 0030A0E3 		mov	r3, #0
 20357              	.L1315:
 20358              		.loc 1 7727 15 is_stmt 1 discriminator 4
 20359 0050 0C300BE5 		str	r3, [fp, #-12]
7728:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Invocation==RME_NULL))
 20360              		.loc 1 7728 7
 20361 0054 0C301BE5 		ldr	r3, [fp, #-12]
 20362 0058 000053E3 		cmp	r3, #0
 20363 005c 0200001A 		bne	.L1316
7729:../../Source/Kernel/rme_kernel.c ****     {
7730:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7731:../../Source/Kernel/rme_kernel.c **** 
7732:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_EMPTY;
 20364              		.loc 1 7732 16
 20365 0060 D03E0FE3 		movw	r3, #65232
 20366 0064 FF3F4FE3 		movt	r3, 65535
 20367 0068 680000EA 		b	.L1317
 20368              	.L1316:
7733:../../Source/Kernel/rme_kernel.c ****     }
7734:../../Source/Kernel/rme_kernel.c ****     else
7735:../../Source/Kernel/rme_kernel.c ****     {
7736:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7737:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7738:../../Source/Kernel/rme_kernel.c ****     }
7739:../../Source/Kernel/rme_kernel.c **** 
7740:../../Source/Kernel/rme_kernel.c ****     /* See if this port allows return-on-fault */
7741:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Is_Exc!=0U)&&(Invocation->Is_Exc_Ret==0U)))
 20369              		.loc 1 7741 7
 20370 006c 18301BE5 		ldr	r3, [fp, #-24]
 20371 0070 000053E3 		cmp	r3, #0
 20372 0074 0600000A 		beq	.L1318
 20373              		.loc 1 7741 8 discriminator 1
 20374 0078 0C301BE5 		ldr	r3, [fp, #-12]
 20375 007c 183093E5 		ldr	r3, [r3, #24]
 20376 0080 000053E3 		cmp	r3, #0
 20377 0084 0200001A 		bne	.L1318
7742:../../Source/Kernel/rme_kernel.c ****     {
7743:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7744:../../Source/Kernel/rme_kernel.c **** 
7745:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_FAULT;
 20378              		.loc 1 7745 16
 20379 0088 D23E0FE3 		movw	r3, #65234
 20380 008c FF3F4FE3 		movt	r3, 65535
 20381 0090 5E0000EA 		b	.L1317
 20382              	.L1318:
7746:../../Source/Kernel/rme_kernel.c ****     }
7747:../../Source/Kernel/rme_kernel.c ****     else
7748:../../Source/Kernel/rme_kernel.c ****     {
7749:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7750:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7751:../../Source/Kernel/rme_kernel.c ****     }
7752:../../Source/Kernel/rme_kernel.c **** 
7753:../../Source/Kernel/rme_kernel.c ****     /* Pop it from the stack */
7754:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 20383              		.loc 1 7754 5
 20384 0094 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 496


 20385 0098 042093E5 		ldr	r2, [r3, #4]
 20386 009c 0C301BE5 		ldr	r3, [fp, #-12]
 20387 00a0 003093E5 		ldr	r3, [r3]
 20388 00a4 0310A0E1 		mov	r1, r3
 20389 00a8 0200A0E1 		mov	r0, r2
 20390 00ac FEFFFFEB 		bl	_RME_List_Del
7755:../../Source/Kernel/rme_kernel.c ****     /* Decrease invocation depth - no atomic operation needed */
7756:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth--;
 20391              		.loc 1 7756 16
 20392 00b0 08301BE5 		ldr	r3, [fp, #-8]
 20393 00b4 543093E5 		ldr	r3, [r3, #84]
 20394              		.loc 1 7756 29
 20395 00b8 012043E2 		sub	r2, r3, #1
 20396 00bc 08301BE5 		ldr	r3, [fp, #-8]
 20397 00c0 542083E5 		str	r2, [r3, #84]
7757:../../Source/Kernel/rme_kernel.c **** 
7758:../../Source/Kernel/rme_kernel.c ****     /* Restore the register contents, and set return value. We need to set
7759:../../Source/Kernel/rme_kernel.c ****      * the return value of the invocation system call itself as well. */
7760:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Restore(Reg,&(Invocation->Ret));
 20398              		.loc 1 7760 5
 20399 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 20400 00c8 1C3083E2 		add	r3, r3, #28
 20401 00cc 0310A0E1 		mov	r1, r3
 20402 00d0 10001BE5 		ldr	r0, [fp, #-16]
 20403 00d4 FEFFFFEB 		bl	__RME_Inv_Reg_Restore
7761:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Retval_Set(Reg,(rme_ret_t)Retval);
 20404              		.loc 1 7761 5
 20405 00d8 14301BE5 		ldr	r3, [fp, #-20]
 20406 00dc 0310A0E1 		mov	r1, r3
 20407 00e0 10001BE5 		ldr	r0, [fp, #-16]
 20408 00e4 FEFFFFEB 		bl	__RME_Inv_Retval_Set
7762:../../Source/Kernel/rme_kernel.c **** 
7763:../../Source/Kernel/rme_kernel.c ****     /* We have successfully returned, set the invocation as inactive. We need
7764:../../Source/Kernel/rme_kernel.c ****      * a barrier here to avoid potential destruction of the return value. */
7765:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((volatile rme_ptr_t*)&(Invocation->Thd_Act),0U);
 20409              		.loc 1 7765 5
 20410 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20411 00ec 0C3083E2 		add	r3, r3, #12
 20412 00f0 0010A0E3 		mov	r1, #0
 20413 00f4 0300A0E1 		mov	r0, r3
 20414 00f8 FEFFFFEB 		bl	__RME_A7A_Write_Release
7766:../../Source/Kernel/rme_kernel.c **** 
7767:../../Source/Kernel/rme_kernel.c ****     /* Decide the system call's return value */
7768:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Is_Exc!=0U))
 20415              		.loc 1 7768 7
 20416 00fc 18301BE5 		ldr	r3, [fp, #-24]
 20417 0100 000053E3 		cmp	r3, #0
 20418 0104 0400000A 		beq	.L1319
7769:../../Source/Kernel/rme_kernel.c ****     {
7770:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7771:../../Source/Kernel/rme_kernel.c **** 
7772:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg, RME_ERR_SIV_FAULT);
 20419              		.loc 1 7772 9
 20420 0108 D21E0FE3 		movw	r1, #65234
 20421 010c FF1F4FE3 		movt	r1, 65535
 20422 0110 10001BE5 		ldr	r0, [fp, #-16]
 20423 0114 FEFFFFEB 		bl	__RME_Svc_Retval_Set
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 497


 20424 0118 020000EA 		b	.L1320
 20425              	.L1319:
7773:../../Source/Kernel/rme_kernel.c ****     }
7774:../../Source/Kernel/rme_kernel.c ****     else
7775:../../Source/Kernel/rme_kernel.c ****     {
7776:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7777:../../Source/Kernel/rme_kernel.c **** 
7778:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 20426              		.loc 1 7778 9
 20427 011c 0010A0E3 		mov	r1, #0
 20428 0120 10001BE5 		ldr	r0, [fp, #-16]
 20429 0124 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20430              	.L1320:
7779:../../Source/Kernel/rme_kernel.c ****     }
7780:../../Source/Kernel/rme_kernel.c **** 
7781:../../Source/Kernel/rme_kernel.c ****     /* Same assumptions as in invocation activation */
7782:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20431              		.loc 1 7782 16
 20432 0128 08301BE5 		ldr	r3, [fp, #-8]
 20433 012c 4C2093E5 		ldr	r2, [r3, #76]
 20434 0130 08301BE5 		ldr	r3, [fp, #-8]
 20435 0134 4C3083E2 		add	r3, r3, #76
 20436 0138 030052E1 		cmp	r2, r3
 20437 013c 0200000A 		beq	.L1321
 20438              		.loc 1 7782 16 is_stmt 0 discriminator 1
 20439 0140 08301BE5 		ldr	r3, [fp, #-8]
 20440 0144 4C3093E5 		ldr	r3, [r3, #76]
 20441 0148 000000EA 		b	.L1322
 20442              	.L1321:
 20443              		.loc 1 7782 16 discriminator 2
 20444 014c 0030A0E3 		mov	r3, #0
 20445              	.L1322:
 20446              		.loc 1 7782 15 is_stmt 1 discriminator 4
 20447 0150 0C300BE5 		str	r3, [fp, #-12]
7783:../../Source/Kernel/rme_kernel.c ****     if(Invocation!=RME_NULL)
 20448              		.loc 1 7783 7
 20449 0154 0C301BE5 		ldr	r3, [fp, #-12]
 20450 0158 000053E3 		cmp	r3, #0
 20451 015c 1500000A 		beq	.L1323
7784:../../Source/Kernel/rme_kernel.c ****     {
7785:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7786:../../Source/Kernel/rme_kernel.c ****         
7787:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7788:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20452              		.loc 1 7788 9
 20453 0160 0C301BE5 		ldr	r3, [fp, #-12]
 20454 0164 083093E5 		ldr	r3, [r3, #8]
 20455 0168 183093E5 		ldr	r3, [r3, #24]
 20456 016c 003093E5 		ldr	r3, [r3]
 20457 0170 7330FFE6 		uxth	r3, r3
 20458 0174 000053E3 		cmp	r3, #0
 20459 0178 0800000A 		beq	.L1324
 20460              		.loc 1 7788 9 is_stmt 0 discriminator 1
 20461 017c 003000E3 		movw	r3, #:lower16:.LC6
 20462 0180 003040E3 		movt	r3, #:upper16:.LC6
 20463 0184 002000E3 		movw	r2, #:lower16:.LC7
 20464 0188 002040E3 		movt	r2, #:upper16:.LC7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 498


 20465 018c 6C1E01E3 		movw	r1, #7788
 20466 0190 000000E3 		movw	r0, #:lower16:.LC8
 20467 0194 000040E3 		movt	r0, #:upper16:.LC8
 20468 0198 FEFFFFEB 		bl	RME_Log
 20469              	.L1325:
 20470              		.loc 1 7788 9
 20471 019c FEFFFFEA 		b	.L1325
 20472              	.L1324:
7789:../../Source/Kernel/rme_kernel.c **** #endif
7790:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Invocation->Prc->Pgt);
 20473              		.loc 1 7790 33 is_stmt 1
 20474 01a0 0C301BE5 		ldr	r3, [fp, #-12]
 20475 01a4 083093E5 		ldr	r3, [r3, #8]
 20476              		.loc 1 7790 9
 20477 01a8 183093E5 		ldr	r3, [r3, #24]
 20478 01ac 0300A0E1 		mov	r0, r3
 20479 01b0 FEFFFFEB 		bl	__RME_Pgt_Set
 20480 01b4 140000EA 		b	.L1326
 20481              	.L1323:
7791:../../Source/Kernel/rme_kernel.c ****     }
7792:../../Source/Kernel/rme_kernel.c ****     else
7793:../../Source/Kernel/rme_kernel.c ****     {
7794:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7795:../../Source/Kernel/rme_kernel.c ****         
7796:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7797:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Thread->Sched.Prc->Pgt)!=0U);
 20482              		.loc 1 7797 9
 20483 01b8 08301BE5 		ldr	r3, [fp, #-8]
 20484 01bc 2C3093E5 		ldr	r3, [r3, #44]
 20485 01c0 183093E5 		ldr	r3, [r3, #24]
 20486 01c4 003093E5 		ldr	r3, [r3]
 20487 01c8 7330FFE6 		uxth	r3, r3
 20488 01cc 000053E3 		cmp	r3, #0
 20489 01d0 0800000A 		beq	.L1327
 20490              		.loc 1 7797 9 is_stmt 0 discriminator 1
 20491 01d4 003000E3 		movw	r3, #:lower16:.LC6
 20492 01d8 003040E3 		movt	r3, #:upper16:.LC6
 20493 01dc 002000E3 		movw	r2, #:lower16:.LC7
 20494 01e0 002040E3 		movt	r2, #:upper16:.LC7
 20495 01e4 751E01E3 		movw	r1, #7797
 20496 01e8 000000E3 		movw	r0, #:lower16:.LC8
 20497 01ec 000040E3 		movt	r0, #:upper16:.LC8
 20498 01f0 FEFFFFEB 		bl	RME_Log
 20499              	.L1328:
 20500              		.loc 1 7797 9
 20501 01f4 FEFFFFEA 		b	.L1328
 20502              	.L1327:
7798:../../Source/Kernel/rme_kernel.c **** #endif
7799:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Thread->Sched.Prc->Pgt);
 20503              		.loc 1 7799 36 is_stmt 1
 20504 01f8 08301BE5 		ldr	r3, [fp, #-8]
 20505 01fc 2C3093E5 		ldr	r3, [r3, #44]
 20506              		.loc 1 7799 9
 20507 0200 183093E5 		ldr	r3, [r3, #24]
 20508 0204 0300A0E1 		mov	r0, r3
 20509 0208 FEFFFFEB 		bl	__RME_Pgt_Set
 20510              	.L1326:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 499


7800:../../Source/Kernel/rme_kernel.c ****     }
7801:../../Source/Kernel/rme_kernel.c ****     
7802:../../Source/Kernel/rme_kernel.c ****     return 0;
 20511              		.loc 1 7802 12
 20512 020c 0030A0E3 		mov	r3, #0
 20513              	.L1317:
7803:../../Source/Kernel/rme_kernel.c **** }
 20514              		.loc 1 7803 1
 20515 0210 0300A0E1 		mov	r0, r3
 20516 0214 04D04BE2 		sub	sp, fp, #4
 20517              		.cfi_def_cfa 13, 8
 20518              		@ sp needed
 20519 0218 0088BDE8 		pop	{fp, pc}
 20520              		.cfi_endproc
 20521              	.LFE76:
 20523              		.section	.text._RME_Kfn_Boot_Crt,"ax",%progbits
 20524              		.align	2
 20525              		.global	_RME_Kfn_Boot_Crt
 20526              		.syntax unified
 20527              		.arm
 20529              	_RME_Kfn_Boot_Crt:
 20530              	.LFB77:
7804:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Ret *************************************************/
7805:../../Source/Kernel/rme_kernel.c **** 
7806:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Boot_Crt *************************************************
7807:../../Source/Kernel/rme_kernel.c **** Description : This function is used to create boot-time kernel call capability.
7808:../../Source/Kernel/rme_kernel.c ****               This kind of capability that does not have a kernel object.
7809:../../Source/Kernel/rme_kernel.c ****               Kernel function capabilities allow you to execute user-defined 
7810:../../Source/Kernel/rme_kernel.c ****               functions in kernel mode. These functions must be defined in the
7811:../../Source/Kernel/rme_kernel.c ****               platform extensions.
7812:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7813:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
7814:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
7815:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7816:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel function.
7817:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7818:../../Source/Kernel/rme_kernel.c **** Output      : None.
7819:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or error code.
7820:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7821:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kfn_Boot_Crt(struct RME_Cap_Cpt* Cpt,
7822:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
7823:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kfn)
7824:../../Source/Kernel/rme_kernel.c **** {
 20531              		.loc 1 7824 1
 20532              		.cfi_startproc
 20533              		@ args = 0, pretend = 0, frame = 32
 20534              		@ frame_needed = 1, uses_anonymous_args = 0
 20535 0000 00482DE9 		push	{fp, lr}
 20536              		.cfi_def_cfa_offset 8
 20537              		.cfi_offset 11, -8
 20538              		.cfi_offset 14, -4
 20539 0004 04B08DE2 		add	fp, sp, #4
 20540              		.cfi_def_cfa 11, 4
 20541 0008 20D04DE2 		sub	sp, sp, #32
 20542 000c 18000BE5 		str	r0, [fp, #-24]
 20543 0010 1C100BE5 		str	r1, [fp, #-28]
 20544 0014 20200BE5 		str	r2, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 500


7825:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7826:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kfn* Kfn_Crt;
7827:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7828:../../Source/Kernel/rme_kernel.c ****     
7829:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
7830:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 20545              		.loc 1 7830 5
 20546 0018 1C301BE5 		ldr	r3, [fp, #-28]
 20547 001c 803003E2 		and	r3, r3, #128
 20548 0020 000053E3 		cmp	r3, #0
 20549 0024 1C00001A 		bne	.L1330
 20550              		.loc 1 7830 5 is_stmt 0 discriminator 1
 20551 0028 18301BE5 		ldr	r3, [fp, #-24]
 20552 002c 142093E5 		ldr	r2, [r3, #20]
 20553 0030 1C301BE5 		ldr	r3, [fp, #-28]
 20554 0034 030052E1 		cmp	r2, r3
 20555 0038 0100008A 		bhi	.L1331
 20556              		.loc 1 7830 5 discriminator 3
 20557 003c 0230E0E3 		mvn	r3, #2
 20558              		.loc 1 7830 5
 20559 0040 850000EA 		b	.L1332
 20560              	.L1331:
 20561              		.loc 1 7830 5 discriminator 4
 20562 0044 1C301BE5 		ldr	r3, [fp, #-28]
 20563 0048 8322A0E1 		lsl	r2, r3, #5
 20564 004c 18301BE5 		ldr	r3, [fp, #-24]
 20565 0050 0C3093E5 		ldr	r3, [r3, #12]
 20566 0054 033082E0 		add	r3, r2, r3
 20567 0058 08300BE5 		str	r3, [fp, #-8]
 20568 005c 08301BE5 		ldr	r3, [fp, #-8]
 20569 0060 0300A0E1 		mov	r0, r3
 20570 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20571 0068 0C000BE5 		str	r0, [fp, #-12]
 20572              		.loc 1 7830 5 discriminator 1
 20573 006c 0C301BE5 		ldr	r3, [fp, #-12]
 20574 0070 FF3803E2 		and	r3, r3, #16711680
 20575 0074 020853E3 		cmp	r3, #131072
 20576 0078 0100001A 		bne	.L1333
 20577              		.loc 1 7830 5 discriminator 5
 20578 007c 0830E0E3 		mvn	r3, #8
 20579              		.loc 1 7830 5
 20580 0080 750000EA 		b	.L1332
 20581              	.L1333:
 20582              		.loc 1 7830 5 discriminator 6
 20583 0084 0C301BE5 		ldr	r3, [fp, #-12]
 20584 0088 233CA0E1 		lsr	r3, r3, #24
 20585 008c 030053E3 		cmp	r3, #3
 20586 0090 3F00000A 		beq	.L1334
 20587              		.loc 1 7830 5 discriminator 7
 20588 0094 0130E0E3 		mvn	r3, #1
 20589              		.loc 1 7830 5
 20590 0098 6F0000EA 		b	.L1332
 20591              	.L1330:
 20592              		.loc 1 7830 5 discriminator 2
 20593 009c 1C301BE5 		ldr	r3, [fp, #-28]
 20594 00a0 2324A0E1 		lsr	r2, r3, #8
 20595 00a4 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 501


 20596 00a8 143093E5 		ldr	r3, [r3, #20]
 20597 00ac 030052E1 		cmp	r2, r3
 20598 00b0 0100003A 		bcc	.L1335
 20599              		.loc 1 7830 5 discriminator 8
 20600 00b4 0230E0E3 		mvn	r3, #2
 20601              		.loc 1 7830 5
 20602 00b8 670000EA 		b	.L1332
 20603              	.L1335:
 20604              		.loc 1 7830 5 discriminator 9
 20605 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 20606 00c0 2334A0E1 		lsr	r3, r3, #8
 20607 00c4 8322A0E1 		lsl	r2, r3, #5
 20608 00c8 18301BE5 		ldr	r3, [fp, #-24]
 20609 00cc 0C3093E5 		ldr	r3, [r3, #12]
 20610 00d0 033082E0 		add	r3, r2, r3
 20611 00d4 08300BE5 		str	r3, [fp, #-8]
 20612 00d8 08301BE5 		ldr	r3, [fp, #-8]
 20613 00dc 0300A0E1 		mov	r0, r3
 20614 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20615 00e4 0C000BE5 		str	r0, [fp, #-12]
 20616              		.loc 1 7830 5 discriminator 1
 20617 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20618 00ec FF3803E2 		and	r3, r3, #16711680
 20619 00f0 020853E3 		cmp	r3, #131072
 20620 00f4 0100001A 		bne	.L1336
 20621              		.loc 1 7830 5 discriminator 10
 20622 00f8 0830E0E3 		mvn	r3, #8
 20623              		.loc 1 7830 5
 20624 00fc 560000EA 		b	.L1332
 20625              	.L1336:
 20626              		.loc 1 7830 5 discriminator 11
 20627 0100 0C301BE5 		ldr	r3, [fp, #-12]
 20628 0104 233CA0E1 		lsr	r3, r3, #24
 20629 0108 030053E3 		cmp	r3, #3
 20630 010c 0100000A 		beq	.L1337
 20631              		.loc 1 7830 5 discriminator 12
 20632 0110 0130E0E3 		mvn	r3, #1
 20633              		.loc 1 7830 5
 20634 0114 500000EA 		b	.L1332
 20635              	.L1337:
 20636              		.loc 1 7830 5 discriminator 13
 20637 0118 1C301BE5 		ldr	r3, [fp, #-28]
 20638 011c 7F2003E2 		and	r2, r3, #127
 20639 0120 08301BE5 		ldr	r3, [fp, #-8]
 20640 0124 143093E5 		ldr	r3, [r3, #20]
 20641 0128 030052E1 		cmp	r2, r3
 20642 012c 0100003A 		bcc	.L1338
 20643              		.loc 1 7830 5 discriminator 14
 20644 0130 0230E0E3 		mvn	r3, #2
 20645              		.loc 1 7830 5
 20646 0134 480000EA 		b	.L1332
 20647              	.L1338:
 20648              		.loc 1 7830 5 discriminator 15
 20649 0138 1C301BE5 		ldr	r3, [fp, #-28]
 20650 013c 7F3003E2 		and	r3, r3, #127
 20651 0140 8322A0E1 		lsl	r2, r3, #5
 20652 0144 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 502


 20653 0148 0C3093E5 		ldr	r3, [r3, #12]
 20654 014c 033082E0 		add	r3, r2, r3
 20655 0150 08300BE5 		str	r3, [fp, #-8]
 20656 0154 08301BE5 		ldr	r3, [fp, #-8]
 20657 0158 0300A0E1 		mov	r0, r3
 20658 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20659 0160 0C000BE5 		str	r0, [fp, #-12]
 20660              		.loc 1 7830 5 discriminator 1
 20661 0164 0C301BE5 		ldr	r3, [fp, #-12]
 20662 0168 FF3803E2 		and	r3, r3, #16711680
 20663 016c 020853E3 		cmp	r3, #131072
 20664 0170 0100001A 		bne	.L1339
 20665              		.loc 1 7830 5 discriminator 16
 20666 0174 0830E0E3 		mvn	r3, #8
 20667              		.loc 1 7830 5
 20668 0178 370000EA 		b	.L1332
 20669              	.L1339:
 20670              		.loc 1 7830 5 discriminator 17
 20671 017c 0C301BE5 		ldr	r3, [fp, #-12]
 20672 0180 233CA0E1 		lsr	r3, r3, #24
 20673 0184 030053E3 		cmp	r3, #3
 20674 0188 0100000A 		beq	.L1334
 20675              		.loc 1 7830 5 discriminator 18
 20676 018c 0130E0E3 		mvn	r3, #1
 20677              		.loc 1 7830 5
 20678 0190 310000EA 		b	.L1332
 20679              	.L1334:
7831:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7832:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7833:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 20680              		.loc 1 7833 5 is_stmt 1
 20681 0194 08301BE5 		ldr	r3, [fp, #-8]
 20682 0198 083093E5 		ldr	r3, [r3, #8]
 20683 019c 013003E2 		and	r3, r3, #1
 20684 01a0 000053E3 		cmp	r3, #0
 20685 01a4 0100001A 		bne	.L1340
 20686              		.loc 1 7833 5 is_stmt 0 discriminator 1
 20687 01a8 0630E0E3 		mvn	r3, #6
 20688              		.loc 1 7833 5
 20689 01ac 2A0000EA 		b	.L1332
 20690              	.L1340:
7834:../../Source/Kernel/rme_kernel.c ****     
7835:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7836:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kfn,struct RME_Cap_Kfn*,Kfn_Crt);
 20691              		.loc 1 7836 5 is_stmt 1
 20692 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20693 01b4 142093E5 		ldr	r2, [r3, #20]
 20694 01b8 20301BE5 		ldr	r3, [fp, #-32]
 20695 01bc 030052E1 		cmp	r2, r3
 20696 01c0 0100008A 		bhi	.L1341
 20697              		.loc 1 7836 5 is_stmt 0 discriminator 1
 20698 01c4 0230E0E3 		mvn	r3, #2
 20699              		.loc 1 7836 5
 20700 01c8 230000EA 		b	.L1332
 20701              	.L1341:
 20702              		.loc 1 7836 5 discriminator 2
 20703 01cc 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 503


 20704 01d0 8322A0E1 		lsl	r2, r3, #5
 20705 01d4 08301BE5 		ldr	r3, [fp, #-8]
 20706 01d8 0C3093E5 		ldr	r3, [r3, #12]
 20707 01dc 033082E0 		add	r3, r2, r3
 20708 01e0 10300BE5 		str	r3, [fp, #-16]
7837:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7838:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kfn_Crt);
 20709              		.loc 1 7838 5 is_stmt 1
 20710 01e4 10301BE5 		ldr	r3, [fp, #-16]
 20711 01e8 0128A0E3 		mov	r2, #65536
 20712 01ec 0010A0E3 		mov	r1, #0
 20713 01f0 0300A0E1 		mov	r0, r3
 20714 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20715 01f8 0030A0E1 		mov	r3, r0
 20716              		.loc 1 7838 5 is_stmt 0 discriminator 1
 20717 01fc 000053E3 		cmp	r3, #0
 20718 0200 0100001A 		bne	.L1342
 20719 0204 0430E0E3 		mvn	r3, #4
 20720              		.loc 1 7838 5
 20721 0208 130000EA 		b	.L1332
 20722              	.L1342:
 20723              		.loc 1 7838 5 discriminator 2
 20724 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 20725 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 20726 0214 002093E5 		ldr	r2, [r3]
 20727 0218 10301BE5 		ldr	r3, [fp, #-16]
 20728 021c 102083E5 		str	r2, [r3, #16]
7839:../../Source/Kernel/rme_kernel.c ****     
7840:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7841:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Root_Ref=1U;
 20729              		.loc 1 7841 27 is_stmt 1
 20730 0220 10301BE5 		ldr	r3, [fp, #-16]
 20731 0224 0120A0E3 		mov	r2, #1
 20732 0228 042083E5 		str	r2, [r3, #4]
7842:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Object=0U;
 20733              		.loc 1 7842 25
 20734 022c 10301BE5 		ldr	r3, [fp, #-16]
 20735 0230 0020A0E3 		mov	r2, #0
 20736 0234 0C2083E5 		str	r2, [r3, #12]
7843:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Flag=RME_KFN_FLAG_FULL_RANGE;
 20737              		.loc 1 7843 23
 20738 0238 10201BE5 		ldr	r2, [fp, #-16]
 20739 023c 0030A0E3 		mov	r3, #0
 20740 0240 FF3F4FE3 		movt	r3, 65535
 20741 0244 083082E5 		str	r3, [r2, #8]
7844:../../Source/Kernel/rme_kernel.c ****     
7845:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7846:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kfn_Crt->Head.Type_Stat),
 20742              		.loc 1 7846 5
 20743 0248 10301BE5 		ldr	r3, [fp, #-16]
 20744 024c 0114A0E3 		mov	r1, #16777216
 20745 0250 0300A0E1 		mov	r0, r3
 20746 0254 FEFFFFEB 		bl	__RME_A7A_Write_Release
7847:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KFN,
7848:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7849:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7850:../../Source/Kernel/rme_kernel.c **** 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 504


7851:../../Source/Kernel/rme_kernel.c ****     return 0;
 20747              		.loc 1 7851 12
 20748 0258 0030A0E3 		mov	r3, #0
 20749              	.L1332:
7852:../../Source/Kernel/rme_kernel.c **** }
 20750              		.loc 1 7852 1
 20751 025c 0300A0E1 		mov	r0, r3
 20752 0260 04D04BE2 		sub	sp, fp, #4
 20753              		.cfi_def_cfa 13, 8
 20754              		@ sp needed
 20755 0264 0088BDE8 		pop	{fp, pc}
 20756              		.cfi_endproc
 20757              	.LFE77:
 20759              		.section	.text._RME_Kfn_Act,"ax",%progbits
 20760              		.align	2
 20761              		.syntax unified
 20762              		.arm
 20764              	_RME_Kfn_Act:
 20765              	.LFB78:
7853:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kfn_Boot_Crt ********************************************/
7854:../../Source/Kernel/rme_kernel.c **** 
7855:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Act ******************************************************
7856:../../Source/Kernel/rme_kernel.c **** Description : Activate a kernel function.
7857:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7858:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7859:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel capability.
7860:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7861:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Func_ID - The function ID to invoke.
7862:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Sub_ID - The subfunction ID to invoke.
7863:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param1 - The first parameter.
7864:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param2 - The second parameter.
7865:../../Source/Kernel/rme_kernel.c **** Output      : None.
7866:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the call is successful, it will return whatever
7867:../../Source/Kernel/rme_kernel.c ****                           the 
7868:../../Source/Kernel/rme_kernel.c ****                           function returned (It is expected that they shall
7869:../../Source/Kernel/rme_kernel.c ****                           never return an negative value); or an error code.
7870:../../Source/Kernel/rme_kernel.c ****                           If the kernel function ever causes a context switch,
7871:../../Source/Kernel/rme_kernel.c ****                           it is responsible for setting the return value. On 
7872:../../Source/Kernel/rme_kernel.c ****                           failure, no context switch is allowed.
7873:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7874:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Kfn_Act(struct RME_Cap_Cpt* Cpt,
7875:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7876:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kfn,
7877:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Func_ID,
7878:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Sub_ID,
7879:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param1,
7880:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param2)
7881:../../Source/Kernel/rme_kernel.c **** {
 20766              		.loc 1 7881 1
 20767              		.cfi_startproc
 20768              		@ args = 12, pretend = 0, frame = 24
 20769              		@ frame_needed = 1, uses_anonymous_args = 0
 20770 0000 00482DE9 		push	{fp, lr}
 20771              		.cfi_def_cfa_offset 8
 20772              		.cfi_offset 11, -8
 20773              		.cfi_offset 14, -4
 20774 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 505


 20775              		.cfi_def_cfa 11, 4
 20776 0008 20D04DE2 		sub	sp, sp, #32
 20777 000c 10000BE5 		str	r0, [fp, #-16]
 20778 0010 14100BE5 		str	r1, [fp, #-20]
 20779 0014 18200BE5 		str	r2, [fp, #-24]
 20780 0018 1C300BE5 		str	r3, [fp, #-28]
7882:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kfn* Kfn_Op;
7883:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7884:../../Source/Kernel/rme_kernel.c ****     
7885:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7886:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kfn,RME_CAP_TYPE_KFN,
 20781              		.loc 1 7886 5
 20782 001c 18301BE5 		ldr	r3, [fp, #-24]
 20783 0020 803003E2 		and	r3, r3, #128
 20784 0024 000053E3 		cmp	r3, #0
 20785 0028 1C00001A 		bne	.L1344
 20786              		.loc 1 7886 5 is_stmt 0 discriminator 1
 20787 002c 10301BE5 		ldr	r3, [fp, #-16]
 20788 0030 142093E5 		ldr	r2, [r3, #20]
 20789 0034 18301BE5 		ldr	r3, [fp, #-24]
 20790 0038 030052E1 		cmp	r2, r3
 20791 003c 0100008A 		bhi	.L1345
 20792              		.loc 1 7886 5 discriminator 3
 20793 0040 0230E0E3 		mvn	r3, #2
 20794              		.loc 1 7886 5
 20795 0044 6B0000EA 		b	.L1346
 20796              	.L1345:
 20797              		.loc 1 7886 5 discriminator 4
 20798 0048 18301BE5 		ldr	r3, [fp, #-24]
 20799 004c 8322A0E1 		lsl	r2, r3, #5
 20800 0050 10301BE5 		ldr	r3, [fp, #-16]
 20801 0054 0C3093E5 		ldr	r3, [r3, #12]
 20802 0058 033082E0 		add	r3, r2, r3
 20803 005c 08300BE5 		str	r3, [fp, #-8]
 20804 0060 08301BE5 		ldr	r3, [fp, #-8]
 20805 0064 0300A0E1 		mov	r0, r3
 20806 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20807 006c 0C000BE5 		str	r0, [fp, #-12]
 20808              		.loc 1 7886 5 discriminator 1
 20809 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20810 0074 FF3803E2 		and	r3, r3, #16711680
 20811 0078 020853E3 		cmp	r3, #131072
 20812 007c 0100001A 		bne	.L1347
 20813              		.loc 1 7886 5 discriminator 5
 20814 0080 0830E0E3 		mvn	r3, #8
 20815              		.loc 1 7886 5
 20816 0084 5B0000EA 		b	.L1346
 20817              	.L1347:
 20818              		.loc 1 7886 5 discriminator 6
 20819 0088 0C301BE5 		ldr	r3, [fp, #-12]
 20820 008c 233CA0E1 		lsr	r3, r3, #24
 20821 0090 010053E3 		cmp	r3, #1
 20822 0094 3F00000A 		beq	.L1348
 20823              		.loc 1 7886 5 discriminator 7
 20824 0098 0130E0E3 		mvn	r3, #1
 20825              		.loc 1 7886 5
 20826 009c 550000EA 		b	.L1346
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 506


 20827              	.L1344:
 20828              		.loc 1 7886 5 discriminator 2
 20829 00a0 18301BE5 		ldr	r3, [fp, #-24]
 20830 00a4 2324A0E1 		lsr	r2, r3, #8
 20831 00a8 10301BE5 		ldr	r3, [fp, #-16]
 20832 00ac 143093E5 		ldr	r3, [r3, #20]
 20833 00b0 030052E1 		cmp	r2, r3
 20834 00b4 0100003A 		bcc	.L1349
 20835              		.loc 1 7886 5 discriminator 8
 20836 00b8 0230E0E3 		mvn	r3, #2
 20837              		.loc 1 7886 5
 20838 00bc 4D0000EA 		b	.L1346
 20839              	.L1349:
 20840              		.loc 1 7886 5 discriminator 9
 20841 00c0 18301BE5 		ldr	r3, [fp, #-24]
 20842 00c4 2334A0E1 		lsr	r3, r3, #8
 20843 00c8 8322A0E1 		lsl	r2, r3, #5
 20844 00cc 10301BE5 		ldr	r3, [fp, #-16]
 20845 00d0 0C3093E5 		ldr	r3, [r3, #12]
 20846 00d4 033082E0 		add	r3, r2, r3
 20847 00d8 08300BE5 		str	r3, [fp, #-8]
 20848 00dc 08301BE5 		ldr	r3, [fp, #-8]
 20849 00e0 0300A0E1 		mov	r0, r3
 20850 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20851 00e8 0C000BE5 		str	r0, [fp, #-12]
 20852              		.loc 1 7886 5 discriminator 1
 20853 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 20854 00f0 FF3803E2 		and	r3, r3, #16711680
 20855 00f4 020853E3 		cmp	r3, #131072
 20856 00f8 0100001A 		bne	.L1350
 20857              		.loc 1 7886 5 discriminator 10
 20858 00fc 0830E0E3 		mvn	r3, #8
 20859              		.loc 1 7886 5
 20860 0100 3C0000EA 		b	.L1346
 20861              	.L1350:
 20862              		.loc 1 7886 5 discriminator 11
 20863 0104 0C301BE5 		ldr	r3, [fp, #-12]
 20864 0108 233CA0E1 		lsr	r3, r3, #24
 20865 010c 030053E3 		cmp	r3, #3
 20866 0110 0100000A 		beq	.L1351
 20867              		.loc 1 7886 5 discriminator 12
 20868 0114 0130E0E3 		mvn	r3, #1
 20869              		.loc 1 7886 5
 20870 0118 360000EA 		b	.L1346
 20871              	.L1351:
 20872              		.loc 1 7886 5 discriminator 13
 20873 011c 18301BE5 		ldr	r3, [fp, #-24]
 20874 0120 7F2003E2 		and	r2, r3, #127
 20875 0124 08301BE5 		ldr	r3, [fp, #-8]
 20876 0128 143093E5 		ldr	r3, [r3, #20]
 20877 012c 030052E1 		cmp	r2, r3
 20878 0130 0100003A 		bcc	.L1352
 20879              		.loc 1 7886 5 discriminator 14
 20880 0134 0230E0E3 		mvn	r3, #2
 20881              		.loc 1 7886 5
 20882 0138 2E0000EA 		b	.L1346
 20883              	.L1352:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 507


 20884              		.loc 1 7886 5 discriminator 15
 20885 013c 18301BE5 		ldr	r3, [fp, #-24]
 20886 0140 7F3003E2 		and	r3, r3, #127
 20887 0144 8322A0E1 		lsl	r2, r3, #5
 20888 0148 08301BE5 		ldr	r3, [fp, #-8]
 20889 014c 0C3093E5 		ldr	r3, [r3, #12]
 20890 0150 033082E0 		add	r3, r2, r3
 20891 0154 08300BE5 		str	r3, [fp, #-8]
 20892 0158 08301BE5 		ldr	r3, [fp, #-8]
 20893 015c 0300A0E1 		mov	r0, r3
 20894 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20895 0164 0C000BE5 		str	r0, [fp, #-12]
 20896              		.loc 1 7886 5 discriminator 1
 20897 0168 0C301BE5 		ldr	r3, [fp, #-12]
 20898 016c FF3803E2 		and	r3, r3, #16711680
 20899 0170 020853E3 		cmp	r3, #131072
 20900 0174 0100001A 		bne	.L1353
 20901              		.loc 1 7886 5 discriminator 16
 20902 0178 0830E0E3 		mvn	r3, #8
 20903              		.loc 1 7886 5
 20904 017c 1D0000EA 		b	.L1346
 20905              	.L1353:
 20906              		.loc 1 7886 5 discriminator 17
 20907 0180 0C301BE5 		ldr	r3, [fp, #-12]
 20908 0184 233CA0E1 		lsr	r3, r3, #24
 20909 0188 010053E3 		cmp	r3, #1
 20910 018c 0100000A 		beq	.L1348
 20911              		.loc 1 7886 5 discriminator 18
 20912 0190 0130E0E3 		mvn	r3, #1
 20913              		.loc 1 7886 5
 20914 0194 170000EA 		b	.L1346
 20915              	.L1348:
7887:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kfn*,Kfn_Op,Type_Stat);    
7888:../../Source/Kernel/rme_kernel.c **** 
7889:../../Source/Kernel/rme_kernel.c ****     /* Check if the range of calling is allowed - kernel function specific */
7890:../../Source/Kernel/rme_kernel.c ****     if((Func_ID>RME_KFN_FLAG_HIGH(Kfn_Op->Head.Flag))||
 20916              		.loc 1 7890 17 is_stmt 1
 20917 0198 08301BE5 		ldr	r3, [fp, #-8]
 20918 019c 083093E5 		ldr	r3, [r3, #8]
 20919 01a0 2338A0E1 		lsr	r3, r3, #16
 20920              		.loc 1 7890 7
 20921 01a4 1C201BE5 		ldr	r2, [fp, #-28]
 20922 01a8 030052E1 		cmp	r2, r3
 20923 01ac 0500008A 		bhi	.L1354
7891:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20924              		.loc 1 7891 17
 20925 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20926 01b4 083093E5 		ldr	r3, [r3, #8]
 20927 01b8 7330FFE6 		uxth	r3, r3
7890:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 20928              		.loc 1 7890 54 discriminator 1
 20929 01bc 1C201BE5 		ldr	r2, [fp, #-28]
 20930 01c0 030052E1 		cmp	r2, r3
 20931 01c4 0100002A 		bcs	.L1355
 20932              	.L1354:
7892:../../Source/Kernel/rme_kernel.c ****     {
7893:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 508


7894:../../Source/Kernel/rme_kernel.c **** 
7895:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 20933              		.loc 1 7895 16
 20934 01c8 0630E0E3 		mvn	r3, #6
 20935 01cc 090000EA 		b	.L1346
 20936              	.L1355:
7896:../../Source/Kernel/rme_kernel.c ****     }
7897:../../Source/Kernel/rme_kernel.c ****     else
7898:../../Source/Kernel/rme_kernel.c ****     {
7899:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7900:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7901:../../Source/Kernel/rme_kernel.c ****     }
7902:../../Source/Kernel/rme_kernel.c **** 
7903:../../Source/Kernel/rme_kernel.c ****     /* Return whatever the function returns */
7904:../../Source/Kernel/rme_kernel.c ****     return __RME_Kfn_Handler(Cpt,Reg,Func_ID,Sub_ID,Param1,Param2);
 20937              		.loc 1 7904 12
 20938 01d0 0C309BE5 		ldr	r3, [fp, #12]
 20939 01d4 04308DE5 		str	r3, [sp, #4]
 20940 01d8 08309BE5 		ldr	r3, [fp, #8]
 20941 01dc 00308DE5 		str	r3, [sp]
 20942 01e0 04309BE5 		ldr	r3, [fp, #4]
 20943 01e4 1C201BE5 		ldr	r2, [fp, #-28]
 20944 01e8 14101BE5 		ldr	r1, [fp, #-20]
 20945 01ec 10001BE5 		ldr	r0, [fp, #-16]
 20946 01f0 FEFFFFEB 		bl	__RME_Kfn_Handler
 20947 01f4 0030A0E1 		mov	r3, r0
 20948              	.L1346:
7905:../../Source/Kernel/rme_kernel.c **** }
 20949              		.loc 1 7905 1
 20950 01f8 0300A0E1 		mov	r0, r3
 20951 01fc 04D04BE2 		sub	sp, fp, #4
 20952              		.cfi_def_cfa 13, 8
 20953              		@ sp needed
 20954 0200 0088BDE8 		pop	{fp, pc}
 20955              		.cfi_endproc
 20956              	.LFE78:
 20958              		.section	.rodata.Table.1,"a"
 20959              		.align	2
 20962              	Table.1:
 20963 0000 00000101 		.ascii	"\000\000\001\001\002\002\002\002\003\003\003\003\003"
 20963      02020202 
 20963      03030303 
 20963      03
 20964 000d 03030304 		.ascii	"\003\003\003\004\004\004\004\004\004\004\004\004\004"
 20964      04040404 
 20964      04040404 
 20964      04
 20965 001a 04040404 		.ascii	"\004\004\004\004\004\004\005\005\005\005\005\005\005"
 20965      04040505 
 20965      05050505 
 20965      05
 20966 0027 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\005"
 20966      05050505 
 20966      05050505 
 20966      05
 20967 0034 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\006"
 20967      05050505 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 509


 20967      05050505 
 20967      06
 20968 0041 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20968      06060606 
 20968      06060606 
 20968      06
 20969 004e 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20969      06060606 
 20969      06060606 
 20969      06
 20970 005b 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20970      06060606 
 20970      06060606 
 20970      06
 20971 0068 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 20971      06060606 
 20971      06060606 
 20971      06
 20972 0075 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\007\007"
 20972      06060606 
 20972      06060607 
 20972      07
 20973 0082 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20973      07070707 
 20973      07070707 
 20973      07
 20974 008f 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20974      07070707 
 20974      07070707 
 20974      07
 20975 009c 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20975      07070707 
 20975      07070707 
 20975      07
 20976 00a9 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20976      07070707 
 20976      07070707 
 20976      07
 20977 00b6 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20977      07070707 
 20977      07070707 
 20977      07
 20978 00c3 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20978      07070707 
 20978      07070707 
 20978      07
 20979 00d0 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20979      07070707 
 20979      07070707 
 20979      07
 20980 00dd 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20980      07070707 
 20980      07070707 
 20980      07
 20981 00ea 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 20981      07070707 
 20981      07070707 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 510


 20981      07
 20982 00f7 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007"
 20982      07070707 
 20982      07
 20983              		.section	.rodata.Table.0,"a"
 20984              		.align	2
 20987              	Table.0:
 20988 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 20988      02000100 
 20988      03000100 
 20988      02
 20989 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 20989      00010002 
 20989      00010003 
 20989      00
 20990 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 20990      01000500 
 20990      01000200 
 20990      01
 20991 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 20991      00020001 
 20991      00040001 
 20991      00
 20992 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 20992      03000100 
 20992      02000100 
 20992      06
 20993 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 20993      00010003 
 20993      00010002 
 20993      00
 20994 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 20994      01000200 
 20994      01000300 
 20994      01
 20995 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 20995      00050001 
 20995      00020001 
 20995      00
 20996 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 20996      02000100 
 20996      04000100 
 20996      02
 20997 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 20997      00010002 
 20997      00010007 
 20997      00
 20998 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 20998      01000300 
 20998      01000200 
 20998      01
 20999 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 20999      00020001 
 20999      00030001 
 20999      00
 21000 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 21000      05000100 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 511


 21000      02000100 
 21000      03
 21001 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 21001      00010004 
 21001      00010002 
 21001      00
 21002 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 21002      01000200 
 21002      01000600 
 21002      01
 21003 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 21003      00030001 
 21003      00020001 
 21003      00
 21004 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 21004      02000100 
 21004      03000100 
 21004      02
 21005 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 21005      00010002 
 21005      00010003 
 21005      00
 21006 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 21006      01000400 
 21006      01000200 
 21006      01
 21007 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 21007      00020001 
 21007      00
 21008              		.text
 21009              	.Letext0:
 21010              		.file 2 "../../Include/Platform/A7A/rme_platform_a7a.h"
 21011              		.file 3 "../../Include/Kernel/rme_kernel.h"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 512


DEFINED SYMBOLS
                            *ABS*:00000000 rme_kernel.c
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:21     .text.RME_Int_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:26     .text.RME_Int_Print:00000000 RME_Int_Print
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:176    .text.RME_Hex_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:181    .text.RME_Hex_Print:00000000 RME_Hex_Print
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:297    .text.RME_Str_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:302    .text.RME_Str_Print:00000000 RME_Str_Print
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:364    .rodata:00000000 $d
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:365    .rodata:00000000 .LC0
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:369    .rodata:00000028 .LC1
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:372    .rodata:00000034 .LC2
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:375    .rodata:00000038 .LC3
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:378    .text.RME_Log:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:383    .text.RME_Log:00000000 RME_Log
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:442    .text._RME_MSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:447    .text._RME_MSB_Generic:00000000 _RME_MSB_Generic
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20962  .rodata.Table.1:00000000 Table.1
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:517    .text._RME_LSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:522    .text._RME_LSB_Generic:00000000 _RME_LSB_Generic
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20987  .rodata.Table.0:00000000 Table.0
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:601    .text._RME_Comp_Swap_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:606    .text._RME_Comp_Swap_Single:00000000 _RME_Comp_Swap_Single
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:653    .text._RME_Fetch_Add_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:658    .text._RME_Fetch_Add_Single:00000000 _RME_Fetch_Add_Single
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:702    .text._RME_Fetch_And_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:707    .text._RME_Fetch_And_Single:00000000 _RME_Fetch_And_Single
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:748    .text._RME_List_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:753    .text._RME_List_Crt:00000000 _RME_List_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:788    .text._RME_List_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:793    .text._RME_List_Del:00000000 _RME_List_Del
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:829    .text._RME_List_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:834    .text._RME_List_Ins:00000000 _RME_List_Ins
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:879    .text._RME_Clear:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:884    .text._RME_Clear:00000000 _RME_Clear
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:936    .text._RME_Memcmp:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:941    .text._RME_Memcmp:00000000 _RME_Memcmp
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1023   .text._RME_Memcpy:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1028   .text._RME_Memcpy:00000000 _RME_Memcpy
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1087   .text._RME_Diff:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1092   .text._RME_Diff:00000000 _RME_Diff
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1142   .text.RME_Kmain:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1147   .text.RME_Kmain:00000000 RME_Kmain
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1185   .text._RME_Lowlvl_Check:00000000 _RME_Lowlvl_Check
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8351   .text._RME_Kot_Init:00000000 _RME_Kot_Init
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1181   .text._RME_Lowlvl_Check:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1212   .text._RME_Svc_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1217   .text._RME_Svc_Handler:00000000 _RME_Svc_Handler
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20322  .text._RME_Inv_Ret:00000000 _RME_Inv_Ret
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20043  .text._RME_Inv_Act:00000000 _RME_Inv_Act
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:1341   .rodata._RME_Svc_Handler:00000000 $d
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18145  .text._RME_Sig_Snd:00000000 _RME_Sig_Snd
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18447  .text._RME_Sig_Rcv:00000000 _RME_Sig_Rcv
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20764  .text._RME_Kfn_Act:00000000 _RME_Kfn_Act
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:14818  .text._RME_Thd_Sched_Free:00000000 _RME_Thd_Sched_Free
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:15176  .text._RME_Thd_Exec_Set:00000000 _RME_Thd_Exec_Set
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:15437  .text._RME_Thd_Sched_Prio:00000000 _RME_Thd_Sched_Prio
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 513


C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:16138  .text._RME_Thd_Time_Xfer:00000000 _RME_Thd_Time_Xfer
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:16727  .text._RME_Thd_Swt:00000000 _RME_Thd_Swt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2709   .text._RME_Cpt_Crt:00000000 _RME_Cpt_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3214   .text._RME_Cpt_Del:00000000 _RME_Cpt_Del
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3584   .text._RME_Cpt_Frz:00000000 _RME_Cpt_Frz
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3853   .text._RME_Cpt_Add:00000000 _RME_Cpt_Add
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:4641   .text._RME_Cpt_Rem:00000000 _RME_Cpt_Rem
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:5917   .text._RME_Pgt_Crt:00000000 _RME_Pgt_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:6443   .text._RME_Pgt_Del:00000000 _RME_Pgt_Del
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:6791   .text._RME_Pgt_Add:00000000 _RME_Pgt_Add
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:7265   .text._RME_Pgt_Rem:00000000 _RME_Pgt_Rem
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:7484   .text._RME_Pgt_Con:00000000 _RME_Pgt_Con
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:7931   .text._RME_Pgt_Des:00000000 _RME_Pgt_Des
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:10576  .text._RME_Prc_Crt:00000000 _RME_Prc_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:11155  .text._RME_Prc_Del:00000000 _RME_Prc_Del
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:11469  .text._RME_Prc_Cpt:00000000 _RME_Prc_Cpt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:11841  .text._RME_Prc_Pgt:00000000 _RME_Prc_Pgt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12788  .text._RME_Thd_Crt:00000000 _RME_Thd_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:13656  .text._RME_Thd_Del:00000000 _RME_Thd_Del
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:14078  .text._RME_Thd_Sched_Bind:00000000 _RME_Thd_Sched_Bind
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:15871  .text._RME_Thd_Sched_Rcv:00000000 _RME_Thd_Sched_Rcv
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:17358  .text._RME_Sig_Crt:00000000 _RME_Sig_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:17600  .text._RME_Sig_Del:00000000 _RME_Sig_Del
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18874  .text._RME_Inv_Crt:00000000 _RME_Inv_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:19502  .text._RME_Inv_Del:00000000 _RME_Inv_Del
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:19846  .text._RME_Inv_Set:00000000 _RME_Inv_Set
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2103   .text._RME_Svc_Handler:000008b0 $d
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2109   .text._RME_Tim_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2114   .text._RME_Tim_Handler:00000000 _RME_Tim_Handler
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9567   .text._RME_Run_Del:00000000 _RME_Run_Del
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9758   .text._RME_Run_Notif:00000000 _RME_Run_Notif
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18023  .text._RME_Kern_Snd:00000000 _RME_Kern_Snd
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:17912  .text._RME_Kern_High:00000000 _RME_Kern_High
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2194   .text._RME_Tim_Elapse:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2199   .text._RME_Tim_Elapse:00000000 _RME_Tim_Elapse
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2260   .text._RME_Tim_Future:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2265   .text._RME_Tim_Future:00000000 _RME_Tim_Future
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2296   .text._RME_Cpt_Boot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2301   .text._RME_Cpt_Boot_Init:00000000 _RME_Cpt_Boot_Init
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8441   .text._RME_Kot_Mark:00000000 _RME_Kot_Mark
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2409   .text._RME_Cpt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2414   .text._RME_Cpt_Boot_Crt:00000000 _RME_Cpt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:2705   .text._RME_Cpt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3201   .rodata:0000003c .LC6
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3204   .rodata:00000048 .LC7
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3207   .rodata:00000054 .LC8
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3210   .text._RME_Cpt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8789   .text._RME_Kot_Erase:00000000 _RME_Kot_Erase
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3580   .text._RME_Cpt_Frz:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:3849   .text._RME_Cpt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:4637   .text._RME_Cpt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:4929   .text._RME_Pgt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:4934   .text._RME_Pgt_Boot_Crt:00000000 _RME_Pgt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:5267   .rodata:00000078 .LC9
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:5271   .rodata:000000ac .LC10
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:5274   .text._RME_Pgt_Boot_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:5279   .text._RME_Pgt_Boot_Add:00000000 _RME_Pgt_Boot_Add
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 514


C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:5509   .text._RME_Pgt_Boot_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:5514   .text._RME_Pgt_Boot_Con:00000000 _RME_Pgt_Boot_Con
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:5913   .text._RME_Pgt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:6439   .text._RME_Pgt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:6787   .text._RME_Pgt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:7261   .text._RME_Pgt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:7480   .text._RME_Pgt_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:7927   .text._RME_Pgt_Des:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8346   .text._RME_Kot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8412   .rodata:000000d8 .LC11
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8415   .rodata:00000100 .LC12
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8418   .rodata:0000012c .LC13
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8421   .rodata:00000138 .LC14
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8424   .rodata:00000148 .LC15
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8427   .rodata:00000154 .LC16
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8430   .rodata:0000017c .LC17
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8433   .rodata:00000194 .LC18
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8436   .text._RME_Kot_Mark:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:8784   .text._RME_Kot_Erase:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9018   .text._RME_Kom_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9023   .text._RME_Kom_Boot_Crt:00000000 _RME_Kom_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9293   .text._RME_CPU_Local_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9298   .text._RME_CPU_Local_Init:00000000 _RME_CPU_Local_Init
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9373   .rodata:000001c0 .LC19
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9376   .text._RME_Thd_Fatal:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9381   .text._RME_Thd_Fatal:00000000 _RME_Thd_Fatal
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9478   .text._RME_Run_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9482   .text._RME_Run_Ins:00000000 _RME_Run_Ins
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9563   .text._RME_Run_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9659   .text._RME_Run_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9663   .text._RME_Run_High:00000000 _RME_Run_High
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9754   .text._RME_Run_Notif:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9817   .text._RME_Thd_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9822   .text._RME_Thd_Pgt:00000000 _RME_Thd_Pgt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9883   .text._RME_Run_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9887   .text._RME_Run_Swt:00000000 _RME_Run_Swt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9992   .text._RME_Prc_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:9997   .text._RME_Prc_Boot_Crt:00000000 _RME_Prc_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:10572  .text._RME_Prc_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:11151  .text._RME_Prc_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:11465  .text._RME_Prc_Cpt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:11837  .text._RME_Prc_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12209  .text._RME_Thd_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12214  .text._RME_Thd_Boot_Crt:00000000 _RME_Thd_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12720  .rodata:000001e0 .LC20
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12723  .rodata:000001ec .LC21
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12726  .rodata:000001f8 .LC22
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12729  .rodata:00000204 .LC23
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12732  .rodata:00000210 .LC24
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12735  .rodata:0000021c .LC25
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12738  .rodata:00000228 .LC26
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12741  .rodata:00000234 .LC27
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12744  .rodata:0000023c .LC28
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12747  .rodata:00000248 .LC29
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12751  .rodata:00000278 .LC30
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12754  .rodata:00000284 .LC31
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12757  .rodata:00000290 .LC32
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 515


C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12760  .rodata:0000029c .LC33
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12763  .rodata:000002a8 .LC34
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12766  .rodata:000002b4 .LC35
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12769  .rodata:000002c0 .LC36
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12772  .rodata:000002cc .LC37
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12775  .rodata:000002d8 .LC38
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12778  .rodata:000002e4 .LC39
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12781  .rodata:000002f0 .LC40
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:12784  .text._RME_Thd_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:13652  .text._RME_Thd_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:14074  .text._RME_Thd_Sched_Bind:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:14814  .text._RME_Thd_Sched_Free:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:15172  .text._RME_Thd_Exec_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:15433  .text._RME_Thd_Sched_Prio:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:15867  .text._RME_Thd_Sched_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:16134  .text._RME_Thd_Time_Xfer:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:16723  .text._RME_Thd_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:17111  .text._RME_Sig_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:17116  .text._RME_Sig_Boot_Crt:00000000 _RME_Sig_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:17354  .text._RME_Sig_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:17596  .text._RME_Sig_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:17907  .text._RME_Kern_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18018  .text._RME_Kern_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18141  .text._RME_Sig_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18443  .text._RME_Sig_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18608  .rodata._RME_Sig_Rcv:00000000 $d
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18865  .text._RME_Sig_Rcv:00000430 $d
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:18870  .text._RME_Inv_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:19498  .text._RME_Inv_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:19842  .text._RME_Inv_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20039  .text._RME_Inv_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20318  .text._RME_Inv_Ret:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20524  .text._RME_Kfn_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20529  .text._RME_Kfn_Boot_Crt:00000000 _RME_Kfn_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20760  .text._RME_Kfn_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20959  .rodata.Table.1:00000000 $d
C:\Users\even\AppData\Local\Temp\ccZTiLdA.s:20984  .rodata.Table.0:00000000 $d
                           .group:00000000 wm4.0.3b9f63523dc4e8d86e863c7e7e762be7
                           .group:00000000 wm4.rme_platform_a7a.h.12.6f31e4bbf2ba0e08caa014445997fe37
                           .group:00000000 wm4.rme_platform_xc7z020.h.16.ad2f0318b93804fb8601302b8cc407b4
                           .group:00000000 wm4.rme_platform_a7a.h.137.fdc6a038503ac117e4f4f30ba1107f52
                           .group:00000000 wm4.rme_kernel.h.27.716340edb41bad57d522729bf2b8a38a
                           .group:00000000 wm4.rme.h.11.105c42759f88404be372052d8d99e5e6
                           .group:00000000 wm4.rme_kernel.h.185.d02db6497e1a69d04e005d15d216f811
                           .group:00000000 wm4.rme_platform_a7a.h.390.918e282e9d9d990fe491c99e3e90944b
                           .group:00000000 wm4.rme_kernel.h.678.0572fdf2012fb48f701f562b23d175bb
                           .group:00000000 wm4.rme_kernel.h.930.a0227bbf293ff3272fab74c6046a5fa5
                           .group:00000000 wm4.rme_platform_a7a.h.506.815e9496b532c0a06bdb02a9ab106ce7

UNDEFINED SYMBOLS
__RME_Putchar
__aeabi_idiv
__aeabi_idivmod
__RME_Int_Disable
__RME_Lowlvl_Init
__RME_Pgt_Kom_Init
__RME_Boot
ARM GAS  C:\Users\even\AppData\Local\Temp\ccZTiLdA.s 			page 516


__RME_Svc_Param_Get
__RME_Svc_Retval_Set
RME_A7A_Local
__RME_A7A_Write_Release
__RME_A7A_Read_Acquire
RME_A7A_Timestamp
__RME_Pgt_Check
__RME_Pgt_Init
__RME_Pgt_Page_Map
__RME_Pgt_Pgdir_Map
__RME_Pgt_Del_Check
__RME_Pgt_Lookup
__RME_Pgt_Page_Unmap
__RME_Pgt_Pgdir_Unmap
RME_A7A_Kot
__RME_A7A_MSB_Get
__RME_Thd_Reg_Copy
__RME_Pgt_Set
__RME_Thd_Reg_Init
__RME_Inv_Reg_Save
__RME_Inv_Reg_Restore
__RME_Inv_Retval_Set
__RME_Kfn_Handler
