ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 1


   1              		.cpu cortex-a9
   2              		.arch armv7-a
   3              		.fpu neon-fp16
   4              		.arch_extension mp
   5              		.arch_extension sec
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"rme_kernel.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "../../Source/Kernel/rme_kernel.c"
  20              		.section	.text.RME_Int_Print,"ax",%progbits
  21              		.align	2
  22              		.global	RME_Int_Print
  23              		.syntax unified
  24              		.arm
  26              	RME_Int_Print:
  27              	.LFB0:
   1:../../Source/Kernel/rme_kernel.c **** /******************************************************************************
   2:../../Source/Kernel/rme_kernel.c **** Filename    : rme_kernel.c
   3:../../Source/Kernel/rme_kernel.c **** Author      : pry
   4:../../Source/Kernel/rme_kernel.c **** Date        : 23/03/2017
   5:../../Source/Kernel/rme_kernel.c **** Licence     : The Unlicense; see LICENSE for details.
   6:../../Source/Kernel/rme_kernel.c **** Description : The system call processing path, debugging primitives and kernel
   7:../../Source/Kernel/rme_kernel.c ****               capability implementation for the RME system.
   8:../../Source/Kernel/rme_kernel.c **** 
   9:../../Source/Kernel/rme_kernel.c **** * Capability Table ************************************************************
  10:../../Source/Kernel/rme_kernel.c **** This section of code might be confusing if the underlying principles
  11:../../Source/Kernel/rme_kernel.c **** of capability-based systems is not well understood. 
  12:../../Source/Kernel/rme_kernel.c **** 1. Owning a capability means you have the power to use the function
  13:../../Source/Kernel/rme_kernel.c ****    represented by that capability.
  14:../../Source/Kernel/rme_kernel.c **** 2. Capabilities have an field called flags, which denotes what operations
  15:../../Source/Kernel/rme_kernel.c ****    is allowed on that captbl.
  16:../../Source/Kernel/rme_kernel.c **** 3. Owning a capability to a capability table means that you have the
  17:../../Source/Kernel/rme_kernel.c ****    power to modify the capability table's contents.
  18:../../Source/Kernel/rme_kernel.c **** 4. Creation and deletion of kernel objects is an operation on capability
  19:../../Source/Kernel/rme_kernel.c ****    table, thus requiring the capability to the capability table.
  20:../../Source/Kernel/rme_kernel.c **** 
  21:../../Source/Kernel/rme_kernel.c **** Remember we do not check our master table to see if it is frozen, or if it is
  22:../../Source/Kernel/rme_kernel.c **** captbl, or something, because if the master table's cap is not explicitly 
  23:../../Source/Kernel/rme_kernel.c **** passed in, we do not operate on it at all; If it is explicitly passed in, it
  24:../../Source/Kernel/rme_kernel.c **** will be checked.
  25:../../Source/Kernel/rme_kernel.c **** 
  26:../../Source/Kernel/rme_kernel.c **** There are 4 basic types of operations, as listed below:
  27:../../Source/Kernel/rme_kernel.c **** Operation                     What it does
  28:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  29:../../Source/Kernel/rme_kernel.c **** Create/Add-Dst                CAS the slot to CREATING state.
  30:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  31:../../Source/Kernel/rme_kernel.c ****                               Create kernel object.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 2


  32:../../Source/Kernel/rme_kernel.c ****                               Atomically update header to complete creation.
  33:../../Source/Kernel/rme_kernel.c **** Use/Add-Src                   Use the kernel object, have a WCET.
  34:../../Source/Kernel/rme_kernel.c **** Freeze                        Check timestamp for create-freeze QUIESCENCE.
  35:../../Source/Kernel/rme_kernel.c ****                               Update timestamp.
  36:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to FROZEN state.
  37:../../Source/Kernel/rme_kernel.c **** Delete/Removal                Check FROZEN.
  38:../../Source/Kernel/rme_kernel.c ****                               Check timestamp for freeze-delete QUIESCENCE.
  39:../../Source/Kernel/rme_kernel.c ****                               Check REFCNT (delete only).
  40:../../Source/Kernel/rme_kernel.c ****                               CAS the slot to empty.
  41:../../Source/Kernel/rme_kernel.c ****                               Delete the kernel object (delete only).
  42:../../Source/Kernel/rme_kernel.c **** 
  43:../../Source/Kernel/rme_kernel.c **** Hazard Table: (Operation 2 follows Operation 1)
  44:../../Source/Kernel/rme_kernel.c **** Operation 1    Operation 2    Reason why it is safe
  45:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  46:../../Source/Kernel/rme_kernel.c **** Create         Create         Only one creation will be successful, because 
  47:../../Source/Kernel/rme_kernel.c ****                               CREATING slot is done by CAS.
  48:../../Source/Kernel/rme_kernel.c **** Create         Delete         Create only set the CREATING. Delete will require
  49:../../Source/Kernel/rme_kernel.c ****                               a TYPE data, which will only be set after the 
  50:../../Source/Kernel/rme_kernel.c ****                               creation completes. ABA problem cannot occur
  51:../../Source/Kernel/rme_kernel.c ****                               because of create-freeze quiescence.
  52:../../Source/Kernel/rme_kernel.c ****                               If there is no quiescence between Create-Freeze, 
  53:../../Source/Kernel/rme_kernel.c ****                               the following may occur:
  54:../../Source/Kernel/rme_kernel.c ****                               T1: Check ---------------------------- Delete(CAS)
  55:../../Source/Kernel/rme_kernel.c ****                               T2: Check - Delete - Create - Freeze -------------
  56:../../Source/Kernel/rme_kernel.c ****                               In this case, thread 1 will perform a wrong 
  57:../../Source/Kernel/rme_kernel.c ****                               deletion on the new capability (the CAS will be
  58:../../Source/Kernel/rme_kernel.c ****                               successful), but this cap is actually a new cap 
  59:../../Source/Kernel/rme_kernel.c ****                               created by the thread 2 at the same location, not
  60:../../Source/Kernel/rme_kernel.c ****                               the old cap, and its quiescence may not be satisfied.
  61:../../Source/Kernel/rme_kernel.c **** Create         Freeze         OCCUPY only set the FROZEN. FROZEN will require
  62:../../Source/Kernel/rme_kernel.c ****                               that bit not set.
  63:../../Source/Kernel/rme_kernel.c **** Create         Add-Src        Add-Src will require a TYPE data, which will only
  64:../../Source/Kernel/rme_kernel.c ****                               be set after the creation completes.
  65:../../Source/Kernel/rme_kernel.c **** Create         Add-Dst        Only one creation will be successful, because 
  66:../../Source/Kernel/rme_kernel.c ****                               OCCUPY slot is done by CAS.
  67:../../Source/Kernel/rme_kernel.c **** Create         Remove         OCCUPY only set the FROZEN. Remove will require a
  68:../../Source/Kernel/rme_kernel.c ****                               TYPE data, which will only be set after the
  69:../../Source/Kernel/rme_kernel.c ****                               creation completes. See Create-Delete for details.
  70:../../Source/Kernel/rme_kernel.c **** Create         Use            OCCUPY only set the FROZEN. Use the cap will 
  71:../../Source/Kernel/rme_kernel.c ****                               require a TYPE data, which will only be set after
  72:../../Source/Kernel/rme_kernel.c ****                               the creation completes.
  73:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  74:../../Source/Kernel/rme_kernel.c **** Delete         Delete         Actual deletion done by CAS so only one deletion
  75:../../Source/Kernel/rme_kernel.c ****                               will be successful.
  76:../../Source/Kernel/rme_kernel.c **** Delete         Freeze         If the deletion fails and clears the FROZEN flag,
  77:../../Source/Kernel/rme_kernel.c ****                               nothing will be done;
  78:../../Source/Kernel/rme_kernel.c ****                               If it does not fail, then the cap will be erased,
  79:../../Source/Kernel/rme_kernel.c ****                               and the FREEZE CAS will not succeed.
  80:../../Source/Kernel/rme_kernel.c **** Delete         Remove         Only one will be successful because only the root
  81:../../Source/Kernel/rme_kernel.c ****                               can be DELETED.
  82:../../Source/Kernel/rme_kernel.c **** Delete         Others         Banned by the FROZEN flag before deletion. 
  83:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  84:../../Source/Kernel/rme_kernel.c **** Freeze         Create         Create fails because slot is still OCCUPY.
  85:../../Source/Kernel/rme_kernel.c **** Freeze         Delete         Delete fails if not FROZEN, or not QUIESCENT.
  86:../../Source/Kernel/rme_kernel.c **** Freeze         Remove         Remove fails if not FROZEN, or not QUIESCENT.
  87:../../Source/Kernel/rme_kernel.c **** Freeze         Freeze         Freeze done by CAS, and only one will be successful.
  88:../../Source/Kernel/rme_kernel.c **** Freeze         Others         Freeze bans them if they attempt after FROZEN set.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 3


  89:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  90:../../Source/Kernel/rme_kernel.c **** Add-Src        Create         Impossible because something in that slot.
  91:../../Source/Kernel/rme_kernel.c **** Add-Src        Freeze         Cannot freeze if already increased REFCNT. If they
  92:../../Source/Kernel/rme_kernel.c ****                               increase REFCNT just after FROZEN set, let it be.
  93:../../Source/Kernel/rme_kernel.c ****                               The cap can't be deleted because of non-zero REFCNT.
  94:../../Source/Kernel/rme_kernel.c **** Add-Src        Delete         Impossible because cap not FROZEN.
  95:../../Source/Kernel/rme_kernel.c **** Add-Src        Remove         Impossible because cap not FROZEN.
  96:../../Source/Kernel/rme_kernel.c **** Add-Src        Others         These operations can be parallel, which is fine.
  97:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
  98:../../Source/Kernel/rme_kernel.c **** Add-Dst         ...           Conclusion same as Create operation.
  99:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 100:../../Source/Kernel/rme_kernel.c **** Remove          ...           Conclusion same as Delete operation.
 101:../../Source/Kernel/rme_kernel.c **** -------------------------------------------------------------------------------
 102:../../Source/Kernel/rme_kernel.c **** Use            Create         Impossible because something in that slot.
 103:../../Source/Kernel/rme_kernel.c **** Use            Delete         Impossible because not FROZEN. The use can't be
 104:../../Source/Kernel/rme_kernel.c ****                               from leaf caps as well because deletion will check
 105:../../Source/Kernel/rme_kernel.c ****                               the REFCNT, and if the REFCNT is 0, then the only
 106:../../Source/Kernel/rme_kernel.c ****                               case where an unsettled use can happen is that it
 107:../../Source/Kernel/rme_kernel.c ****                               happens within WCET time to REFCNT check time. This
 108:../../Source/Kernel/rme_kernel.c ****                               unsettled use must come from a leaf cap, as the use
 109:../../Source/Kernel/rme_kernel.c ****                               happened after the root gets FROZEN. This leaf cap
 110:../../Source/Kernel/rme_kernel.c ****                               itself, will set the REFCNT to 1, and it have no
 111:../../Source/Kernel/rme_kernel.c ****                               chance to freeze then remove itself before a WCET.
 112:../../Source/Kernel/rme_kernel.c ****                               The unsettled use case is thus impossible and there
 113:../../Source/Kernel/rme_kernel.c ****                               is no race. As long as all new reference to caps
 114:../../Source/Kernel/rme_kernel.c ****                               require an active cap passed in, there is no such
 115:../../Source/Kernel/rme_kernel.c ****                               race. Also, for cap creation, the header create step 
 116:../../Source/Kernel/rme_kernel.c ****                               must be the last step (after refcnt can be seen on
 117:../../Source/Kernel/rme_kernel.c ****                               all cores as we use write release semantics), and
 118:../../Source/Kernel/rme_kernel.c ****                               this ensures that no new leaf caps will be available
 119:../../Source/Kernel/rme_kernel.c ****                               for use before REFCNT is seen by all cores.
 120:../../Source/Kernel/rme_kernel.c **** Use            Freeze         It is fine.
 121:../../Source/Kernel/rme_kernel.c **** Use            Add-Src        It is fine.
 122:../../Source/Kernel/rme_kernel.c **** Use            Add-Dst        Impossible because something in that slot.
 123:../../Source/Kernel/rme_kernel.c **** Use            Remove         Impossible because not FROZEN.
 124:../../Source/Kernel/rme_kernel.c **** Use            Use            It is fine.
 125:../../Source/Kernel/rme_kernel.c **** 
 126:../../Source/Kernel/rme_kernel.c **** * Page Table ******************************************************************
 127:../../Source/Kernel/rme_kernel.c **** Different from most large-scale operating systems, RME requires the page tables
 128:../../Source/Kernel/rme_kernel.c **** to be constructed by the user-level rather than kernel logic. Yet, RME provided
 129:../../Source/Kernel/rme_kernel.c **** sufficient utilities for the user to conduct the necessary paging operations:
 130:../../Source/Kernel/rme_kernel.c **** 1. Creating page directories;
 131:../../Source/Kernel/rme_kernel.c **** 2. Deletiing page directories;
 132:../../Source/Kernel/rme_kernel.c **** 3. Adding(mapping) pages into page directories;
 133:../../Source/Kernel/rme_kernel.c **** 4. Deleting(unmapping) pages from page directories.
 134:../../Source/Kernel/rme_kernel.c **** 5. Constructing hierachical page tables;
 135:../../Source/Kernel/rme_kernel.c **** 6. Destructing hierachical page tables.
 136:../../Source/Kernel/rme_kernel.c **** 
 137:../../Source/Kernel/rme_kernel.c **** * Kernel Memory ***************************************************************
 138:../../Source/Kernel/rme_kernel.c **** Different seL4 and Composite, RME applys a principle that resembles Fiasco.OC's
 139:../../Source/Kernel/rme_kernel.c **** kernel object factory. However, this is simplified very much in RME - just a table
 140:../../Source/Kernel/rme_kernel.c **** for registering kernel memory usage! Some may think that this prohibits retyping;
 141:../../Source/Kernel/rme_kernel.c **** this is not true because we can implement it with a trusted user-level proxy.
 142:../../Source/Kernel/rme_kernel.c **** 
 143:../../Source/Kernel/rme_kernel.c **** * Process and Thread **********************************************************
 144:../../Source/Kernel/rme_kernel.c **** RME provided process as a light-weight virtual machine/container abstraction, 
 145:../../Source/Kernel/rme_kernel.c **** and a versatile thread abstraction. Processes enforce isolation, while threads
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 4


 146:../../Source/Kernel/rme_kernel.c **** carry out the task.
 147:../../Source/Kernel/rme_kernel.c **** There is no bind-bind race because bind is done using CAS.
 148:../../Source/Kernel/rme_kernel.c **** There is no bind-unbind race for scheduler thread because all are core-local.
 149:../../Source/Kernel/rme_kernel.c **** 
 150:../../Source/Kernel/rme_kernel.c **** * Signal and Invocation *******************************************************
 151:../../Source/Kernel/rme_kernel.c **** RME employs simple signal endpoints for interrupt passing, inter-core interrupt
 152:../../Source/Kernel/rme_kernel.c **** and asynchronous communication. Different from most operating systems, it employs
 153:../../Source/Kernel/rme_kernel.c **** thread migration model for cross-boundary synchronous communication rather than
 154:../../Source/Kernel/rme_kernel.c **** simple blockpoints. This invocation design have many benefits in many facets.
 155:../../Source/Kernel/rme_kernel.c **** 
 156:../../Source/Kernel/rme_kernel.c **** * Kernel Function *************************************************************
 157:../../Source/Kernel/rme_kernel.c **** There's no perfect operating system for a particular hardware. A hardware may
 158:../../Source/Kernel/rme_kernel.c **** have its own idiosyncrasies that needs extra hacks. RME's kernel function utility
 159:../../Source/Kernel/rme_kernel.c **** provides a disciplined way of making such hacks, in case you need to add new 
 160:../../Source/Kernel/rme_kernel.c **** system calls or directly manipulate hardware.
 161:../../Source/Kernel/rme_kernel.c **** 
 162:../../Source/Kernel/rme_kernel.c **** * The Use of 'volatile' *******************************************************
 163:../../Source/Kernel/rme_kernel.c **** 'volatile' is not needed in the kernel because the syscall interface acts as a
 164:../../Source/Kernel/rme_kernel.c **** natural compiler barrier. We're safe to assume that, during one syscall, data
 165:../../Source/Kernel/rme_kernel.c **** in memory remains unchanged. If anything changes, it has been dealt with the 
 166:../../Source/Kernel/rme_kernel.c **** dedicated assembly atomics. If LTO has been enabled, there are three cases:
 167:../../Source/Kernel/rme_kernel.c **** (1) Uniprocessor with C-implemented "atomics" with no real atomic support.
 168:../../Source/Kernel/rme_kernel.c ****     In this case, compiler barriers are not needed due to no kernel concurrency.
 169:../../Source/Kernel/rme_kernel.c **** (2) Multiprocessor with assembly-implemented atomics, but the compiler LTO does
 170:../../Source/Kernel/rme_kernel.c ****     not honor the assembly functions; instead it thinks that they are opaque.
 171:../../Source/Kernel/rme_kernel.c ****     In this case, the opaque function call itself is a full compiler barrier.
 172:../../Source/Kernel/rme_kernel.c **** (3) Multiprocessor with assembly-implemented atomics, and the compiler LTO does
 173:../../Source/Kernel/rme_kernel.c ****     honor the assembly functions.
 174:../../Source/Kernel/rme_kernel.c ****     In this case, the compiler should be aware of the semantics of the assembly,
 175:../../Source/Kernel/rme_kernel.c ****     and produce correct code.
 176:../../Source/Kernel/rme_kernel.c **** * Function Name Rules *********************************************************
 177:../../Source/Kernel/rme_kernel.c **** (1) No "_": OS entry function RME_Kmain and C entry "main".
 178:../../Source/Kernel/rme_kernel.c **** (2) "_"   : Kernel functions that are be called by kernel.
 179:../../Source/Kernel/rme_kernel.c **** (3) "__"  : HAL functions that are called by kernel.
 180:../../Source/Kernel/rme_kernel.c **** (4) "___" : HAL functions that should only be called by HAL.
 181:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 182:../../Source/Kernel/rme_kernel.c **** 
 183:../../Source/Kernel/rme_kernel.c **** /* Include *******************************************************************/
 184:../../Source/Kernel/rme_kernel.c **** #define __HDR_DEF__
 185:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 186:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 187:../../Source/Kernel/rme_kernel.c **** #undef __HDR_DEF__
 188:../../Source/Kernel/rme_kernel.c **** 
 189:../../Source/Kernel/rme_kernel.c **** #define __HDR_STRUCT__
 190:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 191:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 192:../../Source/Kernel/rme_kernel.c **** #undef __HDR_STRUCT__
 193:../../Source/Kernel/rme_kernel.c **** 
 194:../../Source/Kernel/rme_kernel.c **** /* Private include */
 195:../../Source/Kernel/rme_kernel.c **** #include "Kernel/rme_kernel.h"
 196:../../Source/Kernel/rme_kernel.c **** 
 197:../../Source/Kernel/rme_kernel.c **** #define __HDR_PUBLIC__
 198:../../Source/Kernel/rme_kernel.c **** #include "rme_platform.h"
 199:../../Source/Kernel/rme_kernel.c **** #undef __HDR_PUBLIC__
 200:../../Source/Kernel/rme_kernel.c **** /* End Include ***************************************************************/
 201:../../Source/Kernel/rme_kernel.c **** 
 202:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Int_Print *****************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 5


 203:../../Source/Kernel/rme_kernel.c **** Description : Print a signed integer on the debugging console. This integer is
 204:../../Source/Kernel/rme_kernel.c ****               printed as decimal with sign.
 205:../../Source/Kernel/rme_kernel.c **** Input       : rme_cnt_t Int - The integer to print.
 206:../../Source/Kernel/rme_kernel.c **** Output      : None.
 207:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 208:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 209:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 210:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Int_Print(rme_cnt_t Int)
 211:../../Source/Kernel/rme_kernel.c **** {
  28              		.loc 1 211 1
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 1, uses_anonymous_args = 0
  32 0000 00482DE9 		push	{fp, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 11, -8
  35              		.cfi_offset 14, -4
  36 0004 04B08DE2 		add	fp, sp, #4
  37              		.cfi_def_cfa 11, 4
  38 0008 20D04DE2 		sub	sp, sp, #32
  39 000c 20000BE5 		str	r0, [fp, #-32]
 212:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Num;
 213:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Abs;
 214:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Iter;
 215:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
 216:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Div;
 217:../../Source/Kernel/rme_kernel.c ****     
 218:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 219:../../Source/Kernel/rme_kernel.c ****     if(Int==0)
  40              		.loc 1 219 7
  41 0010 20301BE5 		ldr	r3, [fp, #-32]
  42 0014 000053E3 		cmp	r3, #0
  43 0018 0300001A 		bne	.L2
 220:../../Source/Kernel/rme_kernel.c ****     {
 221:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 222:../../Source/Kernel/rme_kernel.c **** 
 223:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
  44              		.loc 1 223 9
  45 001c 3000A0E3 		mov	r0, #48
  46 0020 FEFFFFEB 		bl	__RME_Putchar
 224:../../Source/Kernel/rme_kernel.c ****         return 1;
  47              		.loc 1 224 16
  48 0024 0130A0E3 		mov	r3, #1
  49 0028 500000EA 		b	.L3
  50              	.L2:
 225:../../Source/Kernel/rme_kernel.c ****     }
 226:../../Source/Kernel/rme_kernel.c ****     else
 227:../../Source/Kernel/rme_kernel.c ****     {
 228:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 229:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 230:../../Source/Kernel/rme_kernel.c ****     }
 231:../../Source/Kernel/rme_kernel.c **** 
 232:../../Source/Kernel/rme_kernel.c **** 
 233:../../Source/Kernel/rme_kernel.c ****     /* Correct all negatives into positives */
 234:../../Source/Kernel/rme_kernel.c ****     if(Int<0)
  51              		.loc 1 234 7
  52 002c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 6


  53 0030 000053E3 		cmp	r3, #0
  54 0034 070000AA 		bge	.L4
 235:../../Source/Kernel/rme_kernel.c ****     {
 236:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 237:../../Source/Kernel/rme_kernel.c **** 
 238:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('-');
  55              		.loc 1 238 9
  56 0038 2D00A0E3 		mov	r0, #45
  57 003c FEFFFFEB 		bl	__RME_Putchar
 239:../../Source/Kernel/rme_kernel.c ****         Abs=-Int;
  58              		.loc 1 239 12
  59 0040 20301BE5 		ldr	r3, [fp, #-32]
  60 0044 003063E2 		rsb	r3, r3, #0
  61 0048 0C300BE5 		str	r3, [fp, #-12]
 240:../../Source/Kernel/rme_kernel.c ****         Num=1;
  62              		.loc 1 240 12
  63 004c 0130A0E3 		mov	r3, #1
  64 0050 08300BE5 		str	r3, [fp, #-8]
  65 0054 030000EA 		b	.L5
  66              	.L4:
 241:../../Source/Kernel/rme_kernel.c ****     }
 242:../../Source/Kernel/rme_kernel.c ****     else
 243:../../Source/Kernel/rme_kernel.c ****     {
 244:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 245:../../Source/Kernel/rme_kernel.c **** 
 246:../../Source/Kernel/rme_kernel.c ****         Abs=Int;
  67              		.loc 1 246 12
  68 0058 20301BE5 		ldr	r3, [fp, #-32]
  69 005c 0C300BE5 		str	r3, [fp, #-12]
 247:../../Source/Kernel/rme_kernel.c ****         Num=0;
  70              		.loc 1 247 12
  71 0060 0030A0E3 		mov	r3, #0
  72 0064 08300BE5 		str	r3, [fp, #-8]
  73              	.L5:
 248:../../Source/Kernel/rme_kernel.c ****     }
 249:../../Source/Kernel/rme_kernel.c **** 
 250:../../Source/Kernel/rme_kernel.c ****     /* How many digits are there? */
 251:../../Source/Kernel/rme_kernel.c ****     Count=0;
  74              		.loc 1 251 10
  75 0068 0030A0E3 		mov	r3, #0
  76 006c 14300BE5 		str	r3, [fp, #-20]
 252:../../Source/Kernel/rme_kernel.c ****     Div=1;
  77              		.loc 1 252 8
  78 0070 0130A0E3 		mov	r3, #1
  79 0074 18300BE5 		str	r3, [fp, #-24]
 253:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
  80              		.loc 1 253 9
  81 0078 0C301BE5 		ldr	r3, [fp, #-12]
  82 007c 10300BE5 		str	r3, [fp, #-16]
  83              	.L9:
 254:../../Source/Kernel/rme_kernel.c ****     while(1U)
 255:../../Source/Kernel/rme_kernel.c ****     {
 256:../../Source/Kernel/rme_kernel.c ****         Iter/=10;
  84              		.loc 1 256 13
  85 0080 10201BE5 		ldr	r2, [fp, #-16]
  86 0084 673606E3 		movw	r3, #26215
  87 0088 663646E3 		movt	r3, 26214
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 7


  88 008c 9312C3E0 		smull	r1, r3, r3, r2
  89 0090 4311A0E1 		asr	r1, r3, #2
  90 0094 C23FA0E1 		asr	r3, r2, #31
  91 0098 033041E0 		sub	r3, r1, r3
  92 009c 10300BE5 		str	r3, [fp, #-16]
 257:../../Source/Kernel/rme_kernel.c ****         Count++;
  93              		.loc 1 257 14
  94 00a0 14301BE5 		ldr	r3, [fp, #-20]
  95 00a4 013083E2 		add	r3, r3, #1
  96 00a8 14300BE5 		str	r3, [fp, #-20]
 258:../../Source/Kernel/rme_kernel.c ****         if(Iter!=0)
  97              		.loc 1 258 11
  98 00ac 10301BE5 		ldr	r3, [fp, #-16]
  99 00b0 000053E3 		cmp	r3, #0
 100 00b4 0600000A 		beq	.L12
 259:../../Source/Kernel/rme_kernel.c ****         {
 260:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 261:../../Source/Kernel/rme_kernel.c **** 
 262:../../Source/Kernel/rme_kernel.c ****             Div*=10;
 101              		.loc 1 262 16
 102 00b8 18201BE5 		ldr	r2, [fp, #-24]
 103 00bc 0230A0E1 		mov	r3, r2
 104 00c0 0331A0E1 		lsl	r3, r3, #2
 105 00c4 023083E0 		add	r3, r3, r2
 106 00c8 8330A0E1 		lsl	r3, r3, #1
 107 00cc 18300BE5 		str	r3, [fp, #-24]
 256:../../Source/Kernel/rme_kernel.c ****         Count++;
 108              		.loc 1 256 13
 109 00d0 EAFFFFEA 		b	.L9
 110              	.L12:
 263:../../Source/Kernel/rme_kernel.c ****         }
 264:../../Source/Kernel/rme_kernel.c ****         else
 265:../../Source/Kernel/rme_kernel.c ****         {
 266:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 267:../../Source/Kernel/rme_kernel.c **** 
 268:../../Source/Kernel/rme_kernel.c ****             break;
 111              		.loc 1 268 13
 112 00d4 00F020E3 		nop
 269:../../Source/Kernel/rme_kernel.c ****         }
 270:../../Source/Kernel/rme_kernel.c ****     }
 271:../../Source/Kernel/rme_kernel.c ****     Num+=Count;
 113              		.loc 1 271 8
 114 00d8 08201BE5 		ldr	r2, [fp, #-8]
 115 00dc 14301BE5 		ldr	r3, [fp, #-20]
 116 00e0 033082E0 		add	r3, r2, r3
 117 00e4 08300BE5 		str	r3, [fp, #-8]
 272:../../Source/Kernel/rme_kernel.c **** 
 273:../../Source/Kernel/rme_kernel.c ****     /* Print the integer */
 274:../../Source/Kernel/rme_kernel.c ****     Iter=Abs;
 118              		.loc 1 274 9
 119 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 120 00ec 10300BE5 		str	r3, [fp, #-16]
 275:../../Source/Kernel/rme_kernel.c **** 
 276:../../Source/Kernel/rme_kernel.c ****     while(Count>0)
 121              		.loc 1 276 10
 122 00f0 1A0000EA 		b	.L10
 123              	.L11:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 8


 277:../../Source/Kernel/rme_kernel.c ****     {
 278:../../Source/Kernel/rme_kernel.c ****         Count--;
 124              		.loc 1 278 14
 125 00f4 14301BE5 		ldr	r3, [fp, #-20]
 126 00f8 013043E2 		sub	r3, r3, #1
 127 00fc 14300BE5 		str	r3, [fp, #-20]
 279:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar((rme_s8_t)(Iter/Div)+'0');
 128              		.loc 1 279 38
 129 0100 18101BE5 		ldr	r1, [fp, #-24]
 130 0104 10001BE5 		ldr	r0, [fp, #-16]
 131 0108 FEFFFFEB 		bl	__aeabi_idiv
 132 010c 0030A0E1 		mov	r3, r0
 133              		.loc 1 279 23
 134 0110 7330EFE6 		uxtb	r3, r3
 135              		.loc 1 279 43
 136 0114 303083E2 		add	r3, r3, #48
 137 0118 7330EFE6 		uxtb	r3, r3
 138              		.loc 1 279 9
 139 011c 7330AFE6 		sxtb	r3, r3
 140 0120 0300A0E1 		mov	r0, r3
 141 0124 FEFFFFEB 		bl	__RME_Putchar
 280:../../Source/Kernel/rme_kernel.c ****         Iter=Iter%Div;
 142              		.loc 1 280 13
 143 0128 10301BE5 		ldr	r3, [fp, #-16]
 144 012c 18101BE5 		ldr	r1, [fp, #-24]
 145 0130 0300A0E1 		mov	r0, r3
 146 0134 FEFFFFEB 		bl	__aeabi_idivmod
 147 0138 0130A0E1 		mov	r3, r1
 148 013c 10300BE5 		str	r3, [fp, #-16]
 281:../../Source/Kernel/rme_kernel.c ****         Div/=10;
 149              		.loc 1 281 12
 150 0140 18201BE5 		ldr	r2, [fp, #-24]
 151 0144 673606E3 		movw	r3, #26215
 152 0148 663646E3 		movt	r3, 26214
 153 014c 9312C3E0 		smull	r1, r3, r3, r2
 154 0150 4311A0E1 		asr	r1, r3, #2
 155 0154 C23FA0E1 		asr	r3, r2, #31
 156 0158 033041E0 		sub	r3, r1, r3
 157 015c 18300BE5 		str	r3, [fp, #-24]
 158              	.L10:
 276:../../Source/Kernel/rme_kernel.c ****     {
 159              		.loc 1 276 16
 160 0160 14301BE5 		ldr	r3, [fp, #-20]
 161 0164 000053E3 		cmp	r3, #0
 162 0168 E1FFFFCA 		bgt	.L11
 282:../../Source/Kernel/rme_kernel.c ****     }
 283:../../Source/Kernel/rme_kernel.c ****     
 284:../../Source/Kernel/rme_kernel.c ****     return Num;
 163              		.loc 1 284 12
 164 016c 08301BE5 		ldr	r3, [fp, #-8]
 165              	.L3:
 285:../../Source/Kernel/rme_kernel.c **** }
 166              		.loc 1 285 1
 167 0170 0300A0E1 		mov	r0, r3
 168 0174 04D04BE2 		sub	sp, fp, #4
 169              		.cfi_def_cfa 13, 8
 170              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 9


 171 0178 0088BDE8 		pop	{fp, pc}
 172              		.cfi_endproc
 173              	.LFE0:
 175              		.section	.text.RME_Hex_Print,"ax",%progbits
 176              		.align	2
 177              		.global	RME_Hex_Print
 178              		.syntax unified
 179              		.arm
 181              	RME_Hex_Print:
 182              	.LFB1:
 286:../../Source/Kernel/rme_kernel.c **** #endif
 287:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Int_Print ************************************************/
 288:../../Source/Kernel/rme_kernel.c **** 
 289:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Hex_Print *****************************************************
 290:../../Source/Kernel/rme_kernel.c **** Description : Print a unsigned integer on the debugging console. This integer is
 291:../../Source/Kernel/rme_kernel.c ****               printed as hexadecimal.
 292:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Uint - The unsigned integer to print.
 293:../../Source/Kernel/rme_kernel.c **** Output      : None.
 294:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed.
 295:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 296:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 297:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Hex_Print(rme_ptr_t Uint)
 298:../../Source/Kernel/rme_kernel.c **** {
 183              		.loc 1 298 1
 184              		.cfi_startproc
 185              		@ args = 0, pretend = 0, frame = 24
 186              		@ frame_needed = 1, uses_anonymous_args = 0
 187 0000 00482DE9 		push	{fp, lr}
 188              		.cfi_def_cfa_offset 8
 189              		.cfi_offset 11, -8
 190              		.cfi_offset 14, -4
 191 0004 04B08DE2 		add	fp, sp, #4
 192              		.cfi_def_cfa 11, 4
 193 0008 18D04DE2 		sub	sp, sp, #24
 194 000c 18000BE5 		str	r0, [fp, #-24]
 299:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Iter;
 300:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 301:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Num;
 302:../../Source/Kernel/rme_kernel.c ****     
 303:../../Source/Kernel/rme_kernel.c ****     /* Exit on zero */
 304:../../Source/Kernel/rme_kernel.c ****     if(Uint==0U)
 195              		.loc 1 304 7
 196 0010 18301BE5 		ldr	r3, [fp, #-24]
 197 0014 000053E3 		cmp	r3, #0
 198 0018 0300001A 		bne	.L14
 305:../../Source/Kernel/rme_kernel.c ****     {
 306:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 307:../../Source/Kernel/rme_kernel.c ****         
 308:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar('0');
 199              		.loc 1 308 9
 200 001c 3000A0E3 		mov	r0, #48
 201 0020 FEFFFFEB 		bl	__RME_Putchar
 309:../../Source/Kernel/rme_kernel.c ****         return 1;
 202              		.loc 1 309 16
 203 0024 0130A0E3 		mov	r3, #1
 204 0028 330000EA 		b	.L15
 205              	.L14:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 10


 310:../../Source/Kernel/rme_kernel.c ****     }
 311:../../Source/Kernel/rme_kernel.c ****     else
 312:../../Source/Kernel/rme_kernel.c ****     {
 313:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 314:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 315:../../Source/Kernel/rme_kernel.c ****     }
 316:../../Source/Kernel/rme_kernel.c **** 
 317:../../Source/Kernel/rme_kernel.c ****     /* Filter out all the zeroes */
 318:../../Source/Kernel/rme_kernel.c ****     Count=0U;
 206              		.loc 1 318 10
 207 002c 0030A0E3 		mov	r3, #0
 208 0030 0C300BE5 		str	r3, [fp, #-12]
 319:../../Source/Kernel/rme_kernel.c ****     Iter=Uint;
 209              		.loc 1 319 9
 210 0034 18301BE5 		ldr	r3, [fp, #-24]
 211 0038 08300BE5 		str	r3, [fp, #-8]
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 212              		.loc 1 320 10
 213 003c 050000EA 		b	.L16
 214              	.L17:
 321:../../Source/Kernel/rme_kernel.c ****     {
 322:../../Source/Kernel/rme_kernel.c ****         Iter<<=4;
 215              		.loc 1 322 13
 216 0040 08301BE5 		ldr	r3, [fp, #-8]
 217 0044 0332A0E1 		lsl	r3, r3, #4
 218 0048 08300BE5 		str	r3, [fp, #-8]
 323:../../Source/Kernel/rme_kernel.c ****         Count++;
 219              		.loc 1 323 14
 220 004c 0C301BE5 		ldr	r3, [fp, #-12]
 221 0050 013083E2 		add	r3, r3, #1
 222 0054 0C300BE5 		str	r3, [fp, #-12]
 223              	.L16:
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 224              		.loc 1 320 16
 225 0058 08301BE5 		ldr	r3, [fp, #-8]
 226 005c 233EA0E1 		lsr	r3, r3, #28
 320:../../Source/Kernel/rme_kernel.c ****     while((Iter>>(RME_WORD_BIT-4U))==0U)
 227              		.loc 1 320 36
 228 0060 000053E3 		cmp	r3, #0
 229 0064 F5FFFF0A 		beq	.L17
 324:../../Source/Kernel/rme_kernel.c ****     }
 325:../../Source/Kernel/rme_kernel.c ****     
 326:../../Source/Kernel/rme_kernel.c ****     /* Count is the number of pts to print */
 327:../../Source/Kernel/rme_kernel.c ****     Count=RME_POW2(RME_WORD_ORDER-2U)-Count;
 230              		.loc 1 327 10
 231 0068 0C301BE5 		ldr	r3, [fp, #-12]
 232 006c 083063E2 		rsb	r3, r3, #8
 233 0070 0C300BE5 		str	r3, [fp, #-12]
 328:../../Source/Kernel/rme_kernel.c ****     Num=Count;
 234              		.loc 1 328 8
 235 0074 0C301BE5 		ldr	r3, [fp, #-12]
 236 0078 10300BE5 		str	r3, [fp, #-16]
 329:../../Source/Kernel/rme_kernel.c ****     while(Count>0U)
 237              		.loc 1 329 10
 238 007c 1A0000EA 		b	.L18
 239              	.L20:
 330:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 11


 331:../../Source/Kernel/rme_kernel.c ****         Count--;
 240              		.loc 1 331 14
 241 0080 0C301BE5 		ldr	r3, [fp, #-12]
 242 0084 013043E2 		sub	r3, r3, #1
 243 0088 0C300BE5 		str	r3, [fp, #-12]
 332:../../Source/Kernel/rme_kernel.c ****         Iter=(Uint>>(Count<<2U))&0x0FU;
 244              		.loc 1 332 27
 245 008c 0C301BE5 		ldr	r3, [fp, #-12]
 246 0090 0331A0E1 		lsl	r3, r3, #2
 247              		.loc 1 332 19
 248 0094 18201BE5 		ldr	r2, [fp, #-24]
 249 0098 3233A0E1 		lsr	r3, r2, r3
 250              		.loc 1 332 13
 251 009c 0F3003E2 		and	r3, r3, #15
 252 00a0 08300BE5 		str	r3, [fp, #-8]
 333:../../Source/Kernel/rme_kernel.c ****         if(Iter<10U)
 253              		.loc 1 333 11
 254 00a4 08301BE5 		ldr	r3, [fp, #-8]
 255 00a8 090053E3 		cmp	r3, #9
 256 00ac 0700008A 		bhi	.L19
 334:../../Source/Kernel/rme_kernel.c ****         {
 335:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 336:../../Source/Kernel/rme_kernel.c ****             
 337:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'0');
 257              		.loc 1 337 27
 258 00b0 08301BE5 		ldr	r3, [fp, #-8]
 259 00b4 7330EFE6 		uxtb	r3, r3
 260              		.loc 1 337 41
 261 00b8 303083E2 		add	r3, r3, #48
 262 00bc 7330EFE6 		uxtb	r3, r3
 263              		.loc 1 337 13
 264 00c0 7330AFE6 		sxtb	r3, r3
 265 00c4 0300A0E1 		mov	r0, r3
 266 00c8 FEFFFFEB 		bl	__RME_Putchar
 267 00cc 060000EA 		b	.L18
 268              	.L19:
 338:../../Source/Kernel/rme_kernel.c ****         }
 339:../../Source/Kernel/rme_kernel.c ****         else
 340:../../Source/Kernel/rme_kernel.c ****         {
 341:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 342:../../Source/Kernel/rme_kernel.c ****             
 343:../../Source/Kernel/rme_kernel.c ****             __RME_Putchar((rme_s8_t)Iter+'A'-10);
 269              		.loc 1 343 27
 270 00d0 08301BE5 		ldr	r3, [fp, #-8]
 271 00d4 7330EFE6 		uxtb	r3, r3
 272              		.loc 1 343 45
 273 00d8 373083E2 		add	r3, r3, #55
 274 00dc 7330EFE6 		uxtb	r3, r3
 275              		.loc 1 343 13
 276 00e0 7330AFE6 		sxtb	r3, r3
 277 00e4 0300A0E1 		mov	r0, r3
 278 00e8 FEFFFFEB 		bl	__RME_Putchar
 279              	.L18:
 329:../../Source/Kernel/rme_kernel.c ****     {
 280              		.loc 1 329 16
 281 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 282 00f0 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 12


 283 00f4 E1FFFF1A 		bne	.L20
 344:../../Source/Kernel/rme_kernel.c ****         }
 345:../../Source/Kernel/rme_kernel.c ****     }
 346:../../Source/Kernel/rme_kernel.c ****     
 347:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Num;
 284              		.loc 1 347 12
 285 00f8 10301BE5 		ldr	r3, [fp, #-16]
 286              	.L15:
 348:../../Source/Kernel/rme_kernel.c **** }
 287              		.loc 1 348 1
 288 00fc 0300A0E1 		mov	r0, r3
 289 0100 04D04BE2 		sub	sp, fp, #4
 290              		.cfi_def_cfa 13, 8
 291              		@ sp needed
 292 0104 0088BDE8 		pop	{fp, pc}
 293              		.cfi_endproc
 294              	.LFE1:
 296              		.section	.text.RME_Str_Print,"ax",%progbits
 297              		.align	2
 298              		.global	RME_Str_Print
 299              		.syntax unified
 300              		.arm
 302              	RME_Str_Print:
 303              	.LFB2:
 349:../../Source/Kernel/rme_kernel.c **** #endif
 350:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Hex_Print ************************************************/
 351:../../Source/Kernel/rme_kernel.c **** 
 352:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Str_Print *****************************************************
 353:../../Source/Kernel/rme_kernel.c **** Description : Print a string the kernel console.
 354:../../Source/Kernel/rme_kernel.c ****               This is only used for kernel-level debugging.
 355:../../Source/Kernel/rme_kernel.c **** Input       : const rme_s8_t* String - The string to print
 356:../../Source/Kernel/rme_kernel.c **** Output      : None.
 357:../../Source/Kernel/rme_kernel.c **** Return      : rme_cnt_t - The length of the string printed, the '\0' is not included.
 358:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 359:../../Source/Kernel/rme_kernel.c **** #if(RME_DBGLOG_ENABLE!=0U)
 360:../../Source/Kernel/rme_kernel.c **** rme_cnt_t RME_Str_Print(const rme_s8_t* String)
 361:../../Source/Kernel/rme_kernel.c **** {
 304              		.loc 1 361 1
 305              		.cfi_startproc
 306              		@ args = 0, pretend = 0, frame = 16
 307              		@ frame_needed = 1, uses_anonymous_args = 0
 308 0000 00482DE9 		push	{fp, lr}
 309              		.cfi_def_cfa_offset 8
 310              		.cfi_offset 11, -8
 311              		.cfi_offset 14, -4
 312 0004 04B08DE2 		add	fp, sp, #4
 313              		.cfi_def_cfa 11, 4
 314 0008 10D04DE2 		sub	sp, sp, #16
 315 000c 10000BE5 		str	r0, [fp, #-16]
 362:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 363:../../Source/Kernel/rme_kernel.c ****     
 364:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_DBGLOG_MAX;Count++)
 316              		.loc 1 364 14
 317 0010 0030A0E3 		mov	r3, #0
 318 0014 08300BE5 		str	r3, [fp, #-8]
 319              		.loc 1 364 5
 320 0018 0E0000EA 		b	.L22
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 13


 321              	.L25:
 365:../../Source/Kernel/rme_kernel.c ****     {
 366:../../Source/Kernel/rme_kernel.c ****         if(String[Count]==(rme_s8_t)'\0')
 322              		.loc 1 366 18
 323 001c 10201BE5 		ldr	r2, [fp, #-16]
 324 0020 08301BE5 		ldr	r3, [fp, #-8]
 325 0024 033082E0 		add	r3, r2, r3
 326 0028 D030D3E1 		ldrsb	r3, [r3]
 327              		.loc 1 366 11
 328 002c 000053E3 		cmp	r3, #0
 329 0030 0C00000A 		beq	.L27
 367:../../Source/Kernel/rme_kernel.c ****         {
 368:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 369:../../Source/Kernel/rme_kernel.c ****             
 370:../../Source/Kernel/rme_kernel.c ****             break;
 371:../../Source/Kernel/rme_kernel.c ****         }
 372:../../Source/Kernel/rme_kernel.c ****         else
 373:../../Source/Kernel/rme_kernel.c ****         {
 374:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 375:../../Source/Kernel/rme_kernel.c ****             /* No action required */
 376:../../Source/Kernel/rme_kernel.c ****         }
 377:../../Source/Kernel/rme_kernel.c ****         
 378:../../Source/Kernel/rme_kernel.c ****         __RME_Putchar(String[Count]);
 330              		.loc 1 378 29
 331 0034 10201BE5 		ldr	r2, [fp, #-16]
 332 0038 08301BE5 		ldr	r3, [fp, #-8]
 333 003c 033082E0 		add	r3, r2, r3
 334              		.loc 1 378 9
 335 0040 D030D3E1 		ldrsb	r3, [r3]
 336 0044 0300A0E1 		mov	r0, r3
 337 0048 FEFFFFEB 		bl	__RME_Putchar
 364:../../Source/Kernel/rme_kernel.c ****     {
 338              		.loc 1 364 44 discriminator 2
 339 004c 08301BE5 		ldr	r3, [fp, #-8]
 340 0050 013083E2 		add	r3, r3, #1
 341 0054 08300BE5 		str	r3, [fp, #-8]
 342              	.L22:
 364:../../Source/Kernel/rme_kernel.c ****     {
 343              		.loc 1 364 23 discriminator 1
 344 0058 08301BE5 		ldr	r3, [fp, #-8]
 345 005c FE0053E3 		cmp	r3, #254
 346 0060 EDFFFF9A 		bls	.L25
 347 0064 000000EA 		b	.L24
 348              	.L27:
 370:../../Source/Kernel/rme_kernel.c ****         }
 349              		.loc 1 370 13
 350 0068 00F020E3 		nop
 351              	.L24:
 379:../../Source/Kernel/rme_kernel.c ****     }
 380:../../Source/Kernel/rme_kernel.c ****     
 381:../../Source/Kernel/rme_kernel.c ****     return (rme_cnt_t)Count;
 352              		.loc 1 381 12
 353 006c 08301BE5 		ldr	r3, [fp, #-8]
 382:../../Source/Kernel/rme_kernel.c **** }
 354              		.loc 1 382 1
 355 0070 0300A0E1 		mov	r0, r3
 356 0074 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 14


 357              		.cfi_def_cfa 13, 8
 358              		@ sp needed
 359 0078 0088BDE8 		pop	{fp, pc}
 360              		.cfi_endproc
 361              	.LFE2:
 363              		.section	.rodata
 364              		.align	2
 365              	.LC0:
 366 0000 0D0A2A2A 		.ascii	"\015\012***\015\012Kernel panic - not syncing :\015"
 366      2A0D0A4B 
 366      65726E65 
 366      6C207061 
 366      6E696320 
 367 0024 0A00     		.ascii	"\012\000"
 368 0026 0000     		.align	2
 369              	.LC1:
 370 0028 202C204C 		.ascii	" , Line \000"
 370      696E6520 
 370      00
 371 0031 000000   		.align	2
 372              	.LC2:
 373 0034 0D0A00   		.ascii	"\015\012\000"
 374 0037 00       		.align	2
 375              	.LC3:
 376 0038 202C2000 		.ascii	" , \000"
 377              		.section	.text.RME_Log,"ax",%progbits
 378              		.align	2
 379              		.global	RME_Log
 380              		.syntax unified
 381              		.arm
 383              	RME_Log:
 384              	.LFB3:
 383:../../Source/Kernel/rme_kernel.c **** #endif
 384:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Str_Print ************************************************/
 385:../../Source/Kernel/rme_kernel.c **** 
 386:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Log ***********************************************************
 387:../../Source/Kernel/rme_kernel.c **** Description : Default logging function, will be used when the user does not 
 388:../../Source/Kernel/rme_kernel.c ****               supply one. This will only be called when the kernel panics.
 389:../../Source/Kernel/rme_kernel.c **** Input       : const char* File - The filename.
 390:../../Source/Kernel/rme_kernel.c ****               long Line - The line number.
 391:../../Source/Kernel/rme_kernel.c ****               const char* Date - The compilation date.
 392:../../Source/Kernel/rme_kernel.c ****               const char* Time - The compilation time.
 393:../../Source/Kernel/rme_kernel.c **** Output      : None.
 394:../../Source/Kernel/rme_kernel.c **** Return      : None.
 395:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 396:../../Source/Kernel/rme_kernel.c **** #ifndef RME_LOG
 397:../../Source/Kernel/rme_kernel.c **** void RME_Log(const char* File,
 398:../../Source/Kernel/rme_kernel.c ****              long Line,
 399:../../Source/Kernel/rme_kernel.c ****              const char* Date,
 400:../../Source/Kernel/rme_kernel.c ****              const char* Time)
 401:../../Source/Kernel/rme_kernel.c **** {
 385              		.loc 1 401 1
 386              		.cfi_startproc
 387              		@ args = 0, pretend = 0, frame = 16
 388              		@ frame_needed = 1, uses_anonymous_args = 0
 389 0000 00482DE9 		push	{fp, lr}
 390              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 15


 391              		.cfi_offset 11, -8
 392              		.cfi_offset 14, -4
 393 0004 04B08DE2 		add	fp, sp, #4
 394              		.cfi_def_cfa 11, 4
 395 0008 10D04DE2 		sub	sp, sp, #16
 396 000c 08000BE5 		str	r0, [fp, #-8]
 397 0010 0C100BE5 		str	r1, [fp, #-12]
 398 0014 10200BE5 		str	r2, [fp, #-16]
 399 0018 14300BE5 		str	r3, [fp, #-20]
 402:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n***\r\nKernel panic - not syncing :\r\n"); \
 400              		.loc 1 402 5
 401 001c 000000E3 		movw	r0, #:lower16:.LC0
 402 0020 000040E3 		movt	r0, #:upper16:.LC0
 403 0024 FEFFFFEB 		bl	RME_Str_Print
 403:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(File); \
 404              		.loc 1 403 5
 405 0028 08001BE5 		ldr	r0, [fp, #-8]
 406 002c FEFFFFEB 		bl	RME_Str_Print
 404:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , Line "); \
 407              		.loc 1 404 5
 408 0030 000000E3 		movw	r0, #:lower16:.LC1
 409 0034 000040E3 		movt	r0, #:upper16:.LC1
 410 0038 FEFFFFEB 		bl	RME_Str_Print
 405:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Line); \
 411              		.loc 1 405 5
 412 003c 0C001BE5 		ldr	r0, [fp, #-12]
 413 0040 FEFFFFEB 		bl	RME_Int_Print
 406:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 414              		.loc 1 406 5
 415 0044 000000E3 		movw	r0, #:lower16:.LC2
 416 0048 000040E3 		movt	r0, #:upper16:.LC2
 417 004c FEFFFFEB 		bl	RME_Str_Print
 407:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Date); \
 418              		.loc 1 407 5
 419 0050 10001BE5 		ldr	r0, [fp, #-16]
 420 0054 FEFFFFEB 		bl	RME_Str_Print
 408:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(" , "); \
 421              		.loc 1 408 5
 422 0058 000000E3 		movw	r0, #:lower16:.LC3
 423 005c 000040E3 		movt	r0, #:upper16:.LC3
 424 0060 FEFFFFEB 		bl	RME_Str_Print
 409:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S(Time); \
 425              		.loc 1 409 5
 426 0064 14001BE5 		ldr	r0, [fp, #-20]
 427 0068 FEFFFFEB 		bl	RME_Str_Print
 410:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\n"); \
 428              		.loc 1 410 5
 429 006c 000000E3 		movw	r0, #:lower16:.LC2
 430 0070 000040E3 		movt	r0, #:upper16:.LC2
 431 0074 FEFFFFEB 		bl	RME_Str_Print
 411:../../Source/Kernel/rme_kernel.c **** }
 432              		.loc 1 411 1
 433 0078 00F020E3 		nop
 434 007c 04D04BE2 		sub	sp, fp, #4
 435              		.cfi_def_cfa 13, 8
 436              		@ sp needed
 437 0080 0088BDE8 		pop	{fp, pc}
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 16


 438              		.cfi_endproc
 439              	.LFE3:
 441              		.section	.text._RME_MSB_Generic,"ax",%progbits
 442              		.align	2
 443              		.global	_RME_MSB_Generic
 444              		.syntax unified
 445              		.arm
 447              	_RME_MSB_Generic:
 448              	.LFB4:
 412:../../Source/Kernel/rme_kernel.c **** #endif
 413:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Log ******************************************************/
 414:../../Source/Kernel/rme_kernel.c **** 
 415:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Cov_Print *****************************************************
 416:../../Source/Kernel/rme_kernel.c **** Description : The coverage data printer. Should always be disabled for all cases
 417:../../Source/Kernel/rme_kernel.c ****               except where a kernel coverage test is needed. This should never
 418:../../Source/Kernel/rme_kernel.c ****               be called any any user application; for coverage testing only.
 419:../../Source/Kernel/rme_kernel.c **** Input       : None.
 420:../../Source/Kernel/rme_kernel.c **** Output      : None.
 421:../../Source/Kernel/rme_kernel.c **** Return      : None.
 422:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 423:../../Source/Kernel/rme_kernel.c **** #ifdef RME_COV_LINE_NUM
 424:../../Source/Kernel/rme_kernel.c **** void RME_Cov_Print(void)
 425:../../Source/Kernel/rme_kernel.c **** {
 426:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Count;
 427:../../Source/Kernel/rme_kernel.c ****     rmp_ptr_t Next;
 428:../../Source/Kernel/rme_kernel.c ****     
 429:../../Source/Kernel/rme_kernel.c ****     Next=0U;
 430:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<RME_COV_LINE_NUM;Count++)
 431:../../Source/Kernel/rme_kernel.c ****     {
 432:../../Source/Kernel/rme_kernel.c ****         if(RME_BITMAP_IS_SET(RME_Cov,Count))
 433:../../Source/Kernel/rme_kernel.c ****         {
 434:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 435:../../Source/Kernel/rme_kernel.c ****             RME_DBG_I(Count);
 436:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S(",");
 437:../../Source/Kernel/rme_kernel.c ****             /* We put 12 markers on a single line */
 438:../../Source/Kernel/rme_kernel.c ****             Next++;
 439:../../Source/Kernel/rme_kernel.c ****             if(Next>11U)
 440:../../Source/Kernel/rme_kernel.c ****             {
 441:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 442:../../Source/Kernel/rme_kernel.c ****                 
 443:../../Source/Kernel/rme_kernel.c ****                 Next=0U;
 444:../../Source/Kernel/rme_kernel.c ****                 RME_DBG_S("\r\n");
 445:../../Source/Kernel/rme_kernel.c ****             }
 446:../../Source/Kernel/rme_kernel.c ****             else
 447:../../Source/Kernel/rme_kernel.c ****             {
 448:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 449:../../Source/Kernel/rme_kernel.c ****                 /* No action needed */
 450:../../Source/Kernel/rme_kernel.c ****             }
 451:../../Source/Kernel/rme_kernel.c ****         }
 452:../../Source/Kernel/rme_kernel.c ****         else
 453:../../Source/Kernel/rme_kernel.c ****         {
 454:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 455:../../Source/Kernel/rme_kernel.c ****             /* No action needed */
 456:../../Source/Kernel/rme_kernel.c ****         }
 457:../../Source/Kernel/rme_kernel.c ****     }
 458:../../Source/Kernel/rme_kernel.c **** }
 459:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 17


 460:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Cov_Print ************************************************/
 461:../../Source/Kernel/rme_kernel.c **** 
 462:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_MSB_Generic **************************************************
 463:../../Source/Kernel/rme_kernel.c **** Description : Find the MSB's position. This is a portable solution for all
 464:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 465:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 466:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to compute for.
 467:../../Source/Kernel/rme_kernel.c **** Output      : None.
 468:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 469:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 470:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_MSB_Generic(rme_ptr_t Value)
 471:../../Source/Kernel/rme_kernel.c **** {
 449              		.loc 1 471 1
 450              		.cfi_startproc
 451              		@ args = 0, pretend = 0, frame = 16
 452              		@ frame_needed = 1, uses_anonymous_args = 0
 453              		@ link register save eliminated.
 454 0000 04B02DE5 		str	fp, [sp, #-4]!
 455              		.cfi_def_cfa_offset 4
 456              		.cfi_offset 11, -4
 457 0004 00B08DE2 		add	fp, sp, #0
 458              		.cfi_def_cfa_register 11
 459 0008 14D04DE2 		sub	sp, sp, #20
 460 000c 10000BE5 		str	r0, [fp, #-16]
 472:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 473:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 474:../../Source/Kernel/rme_kernel.c ****     {
 475:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,1U,2U,2U,2U,2U,3U,3U,3U,3U,3U,3U,3U,3U,
 476:../../Source/Kernel/rme_kernel.c ****         4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,4U,
 477:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 478:../../Source/Kernel/rme_kernel.c ****         5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,5U,
 479:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 480:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 481:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 482:../../Source/Kernel/rme_kernel.c ****         6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,6U,
 483:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 484:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 485:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 486:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 487:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 488:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 489:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,
 490:../../Source/Kernel/rme_kernel.c ****         7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U,7U
 491:../../Source/Kernel/rme_kernel.c ****     };
 492:../../Source/Kernel/rme_kernel.c **** 
 493:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 494:../../Source/Kernel/rme_kernel.c ****     /* 15-8 */
 495:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(8U))
 496:../../Source/Kernel/rme_kernel.c ****     {
 497:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 498:../../Source/Kernel/rme_kernel.c ****         
 499:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 500:../../Source/Kernel/rme_kernel.c ****     }
 501:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 502:../../Source/Kernel/rme_kernel.c ****     else
 503:../../Source/Kernel/rme_kernel.c ****     {
 504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 18


 505:../../Source/Kernel/rme_kernel.c ****         
 506:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 507:../../Source/Kernel/rme_kernel.c ****     }
 508:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 509:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 510:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(16U))
 461              		.loc 1 510 7
 462 0010 10301BE5 		ldr	r3, [fp, #-16]
 463 0014 010853E3 		cmp	r3, #65536
 464 0018 0800003A 		bcc	.L30
 511:../../Source/Kernel/rme_kernel.c ****     {
 512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 513:../../Source/Kernel/rme_kernel.c ****         
 514:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 515:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(24U))
 465              		.loc 1 515 11
 466 001c 10301BE5 		ldr	r3, [fp, #-16]
 467 0020 010453E3 		cmp	r3, #16777216
 468 0024 0200003A 		bcc	.L31
 516:../../Source/Kernel/rme_kernel.c ****         {
 517:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 518:../../Source/Kernel/rme_kernel.c ****             
 519:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 469              		.loc 1 519 16
 470 0028 1830A0E3 		mov	r3, #24
 471 002c 08300BE5 		str	r3, [fp, #-8]
 472 0030 0A0000EA 		b	.L32
 473              	.L31:
 520:../../Source/Kernel/rme_kernel.c ****         }
 521:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 522:../../Source/Kernel/rme_kernel.c ****         else
 523:../../Source/Kernel/rme_kernel.c ****         {
 524:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 525:../../Source/Kernel/rme_kernel.c ****             
 526:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 474              		.loc 1 526 16
 475 0034 1030A0E3 		mov	r3, #16
 476 0038 08300BE5 		str	r3, [fp, #-8]
 477 003c 070000EA 		b	.L32
 478              	.L30:
 527:../../Source/Kernel/rme_kernel.c ****         }
 528:../../Source/Kernel/rme_kernel.c ****     }
 529:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 530:../../Source/Kernel/rme_kernel.c ****     else
 531:../../Source/Kernel/rme_kernel.c ****     {
 532:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 533:../../Source/Kernel/rme_kernel.c ****         
 534:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 535:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(8U))
 479              		.loc 1 535 11
 480 0040 10301BE5 		ldr	r3, [fp, #-16]
 481 0044 FF0053E3 		cmp	r3, #255
 482 0048 0200009A 		bls	.L33
 536:../../Source/Kernel/rme_kernel.c ****         {
 537:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 538:../../Source/Kernel/rme_kernel.c ****             
 539:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 19


 483              		.loc 1 539 16
 484 004c 0830A0E3 		mov	r3, #8
 485 0050 08300BE5 		str	r3, [fp, #-8]
 486 0054 010000EA 		b	.L32
 487              	.L33:
 540:../../Source/Kernel/rme_kernel.c ****         }
 541:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 542:../../Source/Kernel/rme_kernel.c ****         else
 543:../../Source/Kernel/rme_kernel.c ****         {
 544:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 545:../../Source/Kernel/rme_kernel.c ****             
 546:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 488              		.loc 1 546 16
 489 0058 0030A0E3 		mov	r3, #0
 490 005c 08300BE5 		str	r3, [fp, #-8]
 491              	.L32:
 547:../../Source/Kernel/rme_kernel.c ****         }
 548:../../Source/Kernel/rme_kernel.c ****     }
 549:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 550:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 551:../../Source/Kernel/rme_kernel.c ****     if(Value>=RME_POW2(32U))
 552:../../Source/Kernel/rme_kernel.c ****     {
 553:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 554:../../Source/Kernel/rme_kernel.c ****         
 555:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 556:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(48U))
 557:../../Source/Kernel/rme_kernel.c ****         {
 558:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 559:../../Source/Kernel/rme_kernel.c ****             
 560:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 561:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(56U))
 562:../../Source/Kernel/rme_kernel.c ****             {
 563:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 564:../../Source/Kernel/rme_kernel.c ****                 
 565:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 566:../../Source/Kernel/rme_kernel.c ****             }
 567:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 568:../../Source/Kernel/rme_kernel.c ****             else
 569:../../Source/Kernel/rme_kernel.c ****             {
 570:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 571:../../Source/Kernel/rme_kernel.c ****                 
 572:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 573:../../Source/Kernel/rme_kernel.c ****             }
 574:../../Source/Kernel/rme_kernel.c ****         }
 575:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 576:../../Source/Kernel/rme_kernel.c ****         else
 577:../../Source/Kernel/rme_kernel.c ****         {
 578:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 579:../../Source/Kernel/rme_kernel.c ****             
 580:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 581:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(40U))
 582:../../Source/Kernel/rme_kernel.c ****             {
 583:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 584:../../Source/Kernel/rme_kernel.c ****                 
 585:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 586:../../Source/Kernel/rme_kernel.c ****             }
 587:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 20


 588:../../Source/Kernel/rme_kernel.c ****             else
 589:../../Source/Kernel/rme_kernel.c ****             {
 590:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 591:../../Source/Kernel/rme_kernel.c ****                 
 592:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 593:../../Source/Kernel/rme_kernel.c ****             }
 594:../../Source/Kernel/rme_kernel.c ****         }
 595:../../Source/Kernel/rme_kernel.c ****     }
 596:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 597:../../Source/Kernel/rme_kernel.c ****     else
 598:../../Source/Kernel/rme_kernel.c ****     {
 599:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 600:../../Source/Kernel/rme_kernel.c ****         
 601:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 602:../../Source/Kernel/rme_kernel.c ****         if(Value>=RME_POW2(16U))
 603:../../Source/Kernel/rme_kernel.c ****         {
 604:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 605:../../Source/Kernel/rme_kernel.c ****             
 606:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 607:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(24U))
 608:../../Source/Kernel/rme_kernel.c ****             {
 609:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 610:../../Source/Kernel/rme_kernel.c ****                 
 611:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 612:../../Source/Kernel/rme_kernel.c ****             }
 613:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 614:../../Source/Kernel/rme_kernel.c ****             else
 615:../../Source/Kernel/rme_kernel.c ****             {
 616:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 617:../../Source/Kernel/rme_kernel.c ****                 
 618:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 619:../../Source/Kernel/rme_kernel.c ****             }
 620:../../Source/Kernel/rme_kernel.c ****         }
 621:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 622:../../Source/Kernel/rme_kernel.c ****         else
 623:../../Source/Kernel/rme_kernel.c ****         {
 624:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 625:../../Source/Kernel/rme_kernel.c ****             
 626:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 627:../../Source/Kernel/rme_kernel.c ****             if(Value>=RME_POW2(8U))
 628:../../Source/Kernel/rme_kernel.c ****             {
 629:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 630:../../Source/Kernel/rme_kernel.c ****                 
 631:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 632:../../Source/Kernel/rme_kernel.c ****             }
 633:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 634:../../Source/Kernel/rme_kernel.c ****             else
 635:../../Source/Kernel/rme_kernel.c ****             {
 636:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 637:../../Source/Kernel/rme_kernel.c ****                 
 638:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 639:../../Source/Kernel/rme_kernel.c ****             }
 640:../../Source/Kernel/rme_kernel.c ****         }
 641:../../Source/Kernel/rme_kernel.c ****     }
 642:../../Source/Kernel/rme_kernel.c **** #else
 643:../../Source/Kernel/rme_kernel.c **** #error Generic MSB for 128-bits & above are not implemented.
 644:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 21


 645:../../Source/Kernel/rme_kernel.c **** 
 646:../../Source/Kernel/rme_kernel.c ****     return Table[Value>>Bit]+Bit;
 492              		.loc 1 646 23
 493 0060 10201BE5 		ldr	r2, [fp, #-16]
 494 0064 08301BE5 		ldr	r3, [fp, #-8]
 495 0068 3223A0E1 		lsr	r2, r2, r3
 496              		.loc 1 646 17
 497 006c 003000E3 		movw	r3, #:lower16:Table.1
 498 0070 003040E3 		movt	r3, #:upper16:Table.1
 499 0074 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 500 0078 0320A0E1 		mov	r2, r3
 501              		.loc 1 646 29
 502 007c 08301BE5 		ldr	r3, [fp, #-8]
 503 0080 033082E0 		add	r3, r2, r3
 647:../../Source/Kernel/rme_kernel.c **** }
 504              		.loc 1 647 1
 505 0084 0300A0E1 		mov	r0, r3
 506 0088 00D08BE2 		add	sp, fp, #0
 507              		.cfi_def_cfa_register 13
 508              		@ sp needed
 509 008c 04B09DE4 		ldr	fp, [sp], #4
 510              		.cfi_restore 11
 511              		.cfi_def_cfa_offset 0
 512 0090 1EFF2FE1 		bx	lr
 513              		.cfi_endproc
 514              	.LFE4:
 516              		.section	.text._RME_LSB_Generic,"ax",%progbits
 517              		.align	2
 518              		.global	_RME_LSB_Generic
 519              		.syntax unified
 520              		.arm
 522              	_RME_LSB_Generic:
 523              	.LFB5:
 648:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_MSB_Generic *********************************************/
 649:../../Source/Kernel/rme_kernel.c **** 
 650:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_LSB_Generic **************************************************
 651:../../Source/Kernel/rme_kernel.c **** Description : Find the LSB's position. This is a portable solution for all
 652:../../Source/Kernel/rme_kernel.c ****               processors; if your processor does not have fast built-in bit
 653:../../Source/Kernel/rme_kernel.c ****               manipulation support, you can resort to this when porting.
 654:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Value - The value to count.
 655:../../Source/Kernel/rme_kernel.c **** Output      : None.
 656:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The result. 0 will be returned for 0.
 657:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 658:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_LSB_Generic(rme_ptr_t Value)
 659:../../Source/Kernel/rme_kernel.c **** {
 524              		.loc 1 659 1
 525              		.cfi_startproc
 526              		@ args = 0, pretend = 0, frame = 16
 527              		@ frame_needed = 1, uses_anonymous_args = 0
 528              		@ link register save eliminated.
 529 0000 04B02DE5 		str	fp, [sp, #-4]!
 530              		.cfi_def_cfa_offset 4
 531              		.cfi_offset 11, -4
 532 0004 00B08DE2 		add	fp, sp, #0
 533              		.cfi_def_cfa_register 11
 534 0008 14D04DE2 		sub	sp, sp, #20
 535 000c 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 22


 660:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Bit;
 661:../../Source/Kernel/rme_kernel.c ****     static const rme_u8_t Table[256U]=
 662:../../Source/Kernel/rme_kernel.c ****     {
 663:../../Source/Kernel/rme_kernel.c ****         0U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 664:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 665:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 666:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 667:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 668:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 669:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 670:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 671:../../Source/Kernel/rme_kernel.c ****         7U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 672:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 673:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 674:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 675:../../Source/Kernel/rme_kernel.c ****         6U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 676:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 677:../../Source/Kernel/rme_kernel.c ****         5U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U,
 678:../../Source/Kernel/rme_kernel.c ****         4U,0U,1U,0U,2U,0U,1U,0U,3U,0U,1U,0U,2U,0U,1U,0U
 679:../../Source/Kernel/rme_kernel.c ****     };
 680:../../Source/Kernel/rme_kernel.c ****     
 681:../../Source/Kernel/rme_kernel.c **** #if(RME_WORD_ORDER==4U)
 682:../../Source/Kernel/rme_kernel.c ****     /* 16-8 */
 683:../../Source/Kernel/rme_kernel.c ****     if((Value<<8U)==0U)
 684:../../Source/Kernel/rme_kernel.c ****     {
 685:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 686:../../Source/Kernel/rme_kernel.c ****         
 687:../../Source/Kernel/rme_kernel.c ****         Bit=8U;
 688:../../Source/Kernel/rme_kernel.c ****     }
 689:../../Source/Kernel/rme_kernel.c ****     /* 7-0 */
 690:../../Source/Kernel/rme_kernel.c ****     else
 691:../../Source/Kernel/rme_kernel.c ****     {
 692:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 693:../../Source/Kernel/rme_kernel.c ****         
 694:../../Source/Kernel/rme_kernel.c ****         Bit=0U;
 695:../../Source/Kernel/rme_kernel.c ****     }
 696:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==5U)
 697:../../Source/Kernel/rme_kernel.c ****     /* 31-16 */
 698:../../Source/Kernel/rme_kernel.c ****     if((Value<<16U)==0U)
 536              		.loc 1 698 14
 537 0010 10301BE5 		ldr	r3, [fp, #-16]
 538 0014 0338A0E1 		lsl	r3, r3, #16
 539              		.loc 1 698 7
 540 0018 000053E3 		cmp	r3, #0
 541 001c 0900001A 		bne	.L36
 699:../../Source/Kernel/rme_kernel.c ****     {
 700:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 701:../../Source/Kernel/rme_kernel.c ****         
 702:../../Source/Kernel/rme_kernel.c ****         /* 31-24 */
 703:../../Source/Kernel/rme_kernel.c ****         if((Value<<8U)==0U)
 542              		.loc 1 703 18
 543 0020 10301BE5 		ldr	r3, [fp, #-16]
 544 0024 0334A0E1 		lsl	r3, r3, #8
 545              		.loc 1 703 11
 546 0028 000053E3 		cmp	r3, #0
 547 002c 0200001A 		bne	.L37
 704:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 23


 705:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 706:../../Source/Kernel/rme_kernel.c ****             
 707:../../Source/Kernel/rme_kernel.c ****             Bit=24U;
 548              		.loc 1 707 16
 549 0030 1830A0E3 		mov	r3, #24
 550 0034 08300BE5 		str	r3, [fp, #-8]
 551 0038 0B0000EA 		b	.L38
 552              	.L37:
 708:../../Source/Kernel/rme_kernel.c ****         }
 709:../../Source/Kernel/rme_kernel.c ****         /* 24-16 */
 710:../../Source/Kernel/rme_kernel.c ****         else
 711:../../Source/Kernel/rme_kernel.c ****         {
 712:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 713:../../Source/Kernel/rme_kernel.c ****             
 714:../../Source/Kernel/rme_kernel.c ****             Bit=16U;
 553              		.loc 1 714 16
 554 003c 1030A0E3 		mov	r3, #16
 555 0040 08300BE5 		str	r3, [fp, #-8]
 556 0044 080000EA 		b	.L38
 557              	.L36:
 715:../../Source/Kernel/rme_kernel.c ****         }
 716:../../Source/Kernel/rme_kernel.c ****     }
 717:../../Source/Kernel/rme_kernel.c ****     /* 15-0 */
 718:../../Source/Kernel/rme_kernel.c ****     else
 719:../../Source/Kernel/rme_kernel.c ****     {
 720:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 721:../../Source/Kernel/rme_kernel.c ****         
 722:../../Source/Kernel/rme_kernel.c ****         /* 15-8 */
 723:../../Source/Kernel/rme_kernel.c ****         if((Value<<24U)==0U)
 558              		.loc 1 723 18
 559 0048 10301BE5 		ldr	r3, [fp, #-16]
 560 004c 033CA0E1 		lsl	r3, r3, #24
 561              		.loc 1 723 11
 562 0050 000053E3 		cmp	r3, #0
 563 0054 0200001A 		bne	.L39
 724:../../Source/Kernel/rme_kernel.c ****         {
 725:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 726:../../Source/Kernel/rme_kernel.c ****             
 727:../../Source/Kernel/rme_kernel.c ****             Bit=8U;
 564              		.loc 1 727 16
 565 0058 0830A0E3 		mov	r3, #8
 566 005c 08300BE5 		str	r3, [fp, #-8]
 567 0060 010000EA 		b	.L38
 568              	.L39:
 728:../../Source/Kernel/rme_kernel.c ****         }
 729:../../Source/Kernel/rme_kernel.c ****         /* 7-0 */
 730:../../Source/Kernel/rme_kernel.c ****         else
 731:../../Source/Kernel/rme_kernel.c ****         {
 732:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 733:../../Source/Kernel/rme_kernel.c ****             
 734:../../Source/Kernel/rme_kernel.c ****             Bit=0U;
 569              		.loc 1 734 16
 570 0064 0030A0E3 		mov	r3, #0
 571 0068 08300BE5 		str	r3, [fp, #-8]
 572              	.L38:
 735:../../Source/Kernel/rme_kernel.c ****         }
 736:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 24


 737:../../Source/Kernel/rme_kernel.c **** #elif(RME_WORD_ORDER==6U)
 738:../../Source/Kernel/rme_kernel.c ****     /* 63-32 */
 739:../../Source/Kernel/rme_kernel.c ****     if((Value<<32U)==0U)
 740:../../Source/Kernel/rme_kernel.c ****     {
 741:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 742:../../Source/Kernel/rme_kernel.c ****         
 743:../../Source/Kernel/rme_kernel.c ****         /* 63-48 */
 744:../../Source/Kernel/rme_kernel.c ****         if((Value<<16U)==0U)
 745:../../Source/Kernel/rme_kernel.c ****         {
 746:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 747:../../Source/Kernel/rme_kernel.c ****             
 748:../../Source/Kernel/rme_kernel.c ****             /* 63-56 */
 749:../../Source/Kernel/rme_kernel.c ****             if((Value<<8U)==0U)
 750:../../Source/Kernel/rme_kernel.c ****             {
 751:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 752:../../Source/Kernel/rme_kernel.c ****                 
 753:../../Source/Kernel/rme_kernel.c ****                 Bit=56U;
 754:../../Source/Kernel/rme_kernel.c ****             }
 755:../../Source/Kernel/rme_kernel.c ****             /* 56-48 */
 756:../../Source/Kernel/rme_kernel.c ****             else
 757:../../Source/Kernel/rme_kernel.c ****             {
 758:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 759:../../Source/Kernel/rme_kernel.c ****                 
 760:../../Source/Kernel/rme_kernel.c ****                 Bit=48U;
 761:../../Source/Kernel/rme_kernel.c ****             }
 762:../../Source/Kernel/rme_kernel.c ****         }
 763:../../Source/Kernel/rme_kernel.c ****         /* 47-32 */
 764:../../Source/Kernel/rme_kernel.c ****         else
 765:../../Source/Kernel/rme_kernel.c ****         {
 766:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 767:../../Source/Kernel/rme_kernel.c ****             
 768:../../Source/Kernel/rme_kernel.c ****             /* 47-40 */
 769:../../Source/Kernel/rme_kernel.c ****             if((Value<<24U)==0U)
 770:../../Source/Kernel/rme_kernel.c ****             {
 771:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 772:../../Source/Kernel/rme_kernel.c ****                 
 773:../../Source/Kernel/rme_kernel.c ****                 Bit=40U;
 774:../../Source/Kernel/rme_kernel.c ****             }
 775:../../Source/Kernel/rme_kernel.c ****             /* 39-32 */
 776:../../Source/Kernel/rme_kernel.c ****             else
 777:../../Source/Kernel/rme_kernel.c ****             {
 778:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 779:../../Source/Kernel/rme_kernel.c ****                 
 780:../../Source/Kernel/rme_kernel.c ****                 Bit=32U;
 781:../../Source/Kernel/rme_kernel.c ****             }
 782:../../Source/Kernel/rme_kernel.c ****         }
 783:../../Source/Kernel/rme_kernel.c ****     }
 784:../../Source/Kernel/rme_kernel.c ****     /* 31-0 */
 785:../../Source/Kernel/rme_kernel.c ****     else
 786:../../Source/Kernel/rme_kernel.c ****     {
 787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 788:../../Source/Kernel/rme_kernel.c ****         
 789:../../Source/Kernel/rme_kernel.c ****         /* 31-16 */
 790:../../Source/Kernel/rme_kernel.c ****         if((Value<<48U)==0U)
 791:../../Source/Kernel/rme_kernel.c ****         {
 792:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 793:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 25


 794:../../Source/Kernel/rme_kernel.c ****             /* 31-24 */
 795:../../Source/Kernel/rme_kernel.c ****             if((Value<<40U)==0U)
 796:../../Source/Kernel/rme_kernel.c ****             {
 797:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 798:../../Source/Kernel/rme_kernel.c ****                 
 799:../../Source/Kernel/rme_kernel.c ****                 Bit=24U;
 800:../../Source/Kernel/rme_kernel.c ****             }
 801:../../Source/Kernel/rme_kernel.c ****             /* 24-16 */
 802:../../Source/Kernel/rme_kernel.c ****             else
 803:../../Source/Kernel/rme_kernel.c ****             {
 804:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 805:../../Source/Kernel/rme_kernel.c ****                 
 806:../../Source/Kernel/rme_kernel.c ****                 Bit=16U;
 807:../../Source/Kernel/rme_kernel.c ****             }
 808:../../Source/Kernel/rme_kernel.c ****         }
 809:../../Source/Kernel/rme_kernel.c ****         /* 15-0 */
 810:../../Source/Kernel/rme_kernel.c ****         else
 811:../../Source/Kernel/rme_kernel.c ****         {
 812:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
 813:../../Source/Kernel/rme_kernel.c ****             
 814:../../Source/Kernel/rme_kernel.c ****             /* 15-8 */
 815:../../Source/Kernel/rme_kernel.c ****             if((Value<<56U)==0U)
 816:../../Source/Kernel/rme_kernel.c ****             {
 817:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 818:../../Source/Kernel/rme_kernel.c ****                 
 819:../../Source/Kernel/rme_kernel.c ****                 Bit=8U;
 820:../../Source/Kernel/rme_kernel.c ****             }
 821:../../Source/Kernel/rme_kernel.c ****             /* 7-0 */
 822:../../Source/Kernel/rme_kernel.c ****             else
 823:../../Source/Kernel/rme_kernel.c ****             {
 824:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
 825:../../Source/Kernel/rme_kernel.c ****                 
 826:../../Source/Kernel/rme_kernel.c ****                 Bit=0U;
 827:../../Source/Kernel/rme_kernel.c ****             }
 828:../../Source/Kernel/rme_kernel.c ****         }
 829:../../Source/Kernel/rme_kernel.c ****     }
 830:../../Source/Kernel/rme_kernel.c **** #else
 831:../../Source/Kernel/rme_kernel.c **** #error Generic LSB for 128-bits & above are not implemented.
 832:../../Source/Kernel/rme_kernel.c **** #endif
 833:../../Source/Kernel/rme_kernel.c **** 
 834:../../Source/Kernel/rme_kernel.c ****     return Table[(rme_u8_t)(Value>>Bit)]+Bit;
 573              		.loc 1 834 34
 574 006c 10201BE5 		ldr	r2, [fp, #-16]
 575 0070 08301BE5 		ldr	r3, [fp, #-8]
 576 0074 3233A0E1 		lsr	r3, r2, r3
 577              		.loc 1 834 18
 578 0078 7330EFE6 		uxtb	r3, r3
 579 007c 0320A0E1 		mov	r2, r3
 580              		.loc 1 834 17
 581 0080 003000E3 		movw	r3, #:lower16:Table.0
 582 0084 003040E3 		movt	r3, #:upper16:Table.0
 583 0088 0230D3E7 		ldrb	r3, [r3, r2]	@ zero_extendqisi2
 584 008c 0320A0E1 		mov	r2, r3
 585              		.loc 1 834 41
 586 0090 08301BE5 		ldr	r3, [fp, #-8]
 587 0094 033082E0 		add	r3, r2, r3
 835:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 26


 588              		.loc 1 835 1
 589 0098 0300A0E1 		mov	r0, r3
 590 009c 00D08BE2 		add	sp, fp, #0
 591              		.cfi_def_cfa_register 13
 592              		@ sp needed
 593 00a0 04B09DE4 		ldr	fp, [sp], #4
 594              		.cfi_restore 11
 595              		.cfi_def_cfa_offset 0
 596 00a4 1EFF2FE1 		bx	lr
 597              		.cfi_endproc
 598              	.LFE5:
 600              		.section	.text._RME_Comp_Swap_Single,"ax",%progbits
 601              		.align	2
 602              		.global	_RME_Comp_Swap_Single
 603              		.syntax unified
 604              		.arm
 606              	_RME_Comp_Swap_Single:
 607              	.LFB6:
 836:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_LSB_Generic *********************************************/
 837:../../Source/Kernel/rme_kernel.c **** 
 838:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Comp_Swap_Single *********************************************
 839:../../Source/Kernel/rme_kernel.c **** Description : The compare-and-swap atomic instruction. If the Old value is
 840:../../Source/Kernel/rme_kernel.c ****               equal to *Ptr, then set the *Ptr as New and return 1; else return
 841:../../Source/Kernel/rme_kernel.c ****               0.
 842:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 843:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 844:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Old - The old value.
 845:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t New - The new value.
 846:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 847:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - If successful, 1; else 0.
 848:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 849:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Comp_Swap_Single(volatile rme_ptr_t* Ptr,
 850:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Old,
 851:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t New)
 852:../../Source/Kernel/rme_kernel.c **** {
 608              		.loc 1 852 1
 609              		.cfi_startproc
 610              		@ args = 0, pretend = 0, frame = 16
 611              		@ frame_needed = 1, uses_anonymous_args = 0
 612              		@ link register save eliminated.
 613 0000 04B02DE5 		str	fp, [sp, #-4]!
 614              		.cfi_def_cfa_offset 4
 615              		.cfi_offset 11, -4
 616 0004 00B08DE2 		add	fp, sp, #0
 617              		.cfi_def_cfa_register 11
 618 0008 14D04DE2 		sub	sp, sp, #20
 619 000c 08000BE5 		str	r0, [fp, #-8]
 620 0010 0C100BE5 		str	r1, [fp, #-12]
 621 0014 10200BE5 		str	r2, [fp, #-16]
 853:../../Source/Kernel/rme_kernel.c ****     if(*Ptr==Old)
 622              		.loc 1 853 8
 623 0018 08301BE5 		ldr	r3, [fp, #-8]
 624 001c 003093E5 		ldr	r3, [r3]
 625              		.loc 1 853 7
 626 0020 0C201BE5 		ldr	r2, [fp, #-12]
 627 0024 030052E1 		cmp	r2, r3
 628 0028 0400001A 		bne	.L42
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 27


 854:../../Source/Kernel/rme_kernel.c ****     {
 855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 856:../../Source/Kernel/rme_kernel.c ****         
 857:../../Source/Kernel/rme_kernel.c ****         *Ptr=New;
 629              		.loc 1 857 13
 630 002c 08301BE5 		ldr	r3, [fp, #-8]
 631 0030 10201BE5 		ldr	r2, [fp, #-16]
 632 0034 002083E5 		str	r2, [r3]
 858:../../Source/Kernel/rme_kernel.c ****         return 1U;
 633              		.loc 1 858 16
 634 0038 0130A0E3 		mov	r3, #1
 635 003c 000000EA 		b	.L43
 636              	.L42:
 859:../../Source/Kernel/rme_kernel.c ****     }
 860:../../Source/Kernel/rme_kernel.c ****     else
 861:../../Source/Kernel/rme_kernel.c ****     {
 862:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
 863:../../Source/Kernel/rme_kernel.c ****         /* No action required */
 864:../../Source/Kernel/rme_kernel.c ****     }
 865:../../Source/Kernel/rme_kernel.c **** 
 866:../../Source/Kernel/rme_kernel.c ****     return 0U;
 637              		.loc 1 866 12
 638 0040 0030A0E3 		mov	r3, #0
 639              	.L43:
 867:../../Source/Kernel/rme_kernel.c **** }
 640              		.loc 1 867 1
 641 0044 0300A0E1 		mov	r0, r3
 642 0048 00D08BE2 		add	sp, fp, #0
 643              		.cfi_def_cfa_register 13
 644              		@ sp needed
 645 004c 04B09DE4 		ldr	fp, [sp], #4
 646              		.cfi_restore 11
 647              		.cfi_def_cfa_offset 0
 648 0050 1EFF2FE1 		bx	lr
 649              		.cfi_endproc
 650              	.LFE6:
 652              		.section	.text._RME_Fetch_Add_Single,"ax",%progbits
 653              		.align	2
 654              		.global	_RME_Fetch_Add_Single
 655              		.syntax unified
 656              		.arm
 658              	_RME_Fetch_Add_Single:
 659              	.LFB7:
 868:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Comp_Swap_Single ****************************************/
 869:../../Source/Kernel/rme_kernel.c **** 
 870:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_Add_Single *********************************************
 871:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-add atomic instruction. Increase the value that is
 872:../../Source/Kernel/rme_kernel.c ****               pointed to by the pointer, and return the value before addition.
 873:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 874:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 875:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Addend - The number to add.
 876:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 877:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the addition.
 878:../../Source/Kernel/rme_kernel.c **** *******************************************************************************/
 879:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_Add_Single(volatile rme_ptr_t* Ptr,
 880:../../Source/Kernel/rme_kernel.c ****                                 rme_cnt_t Addend)
 881:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 28


 660              		.loc 1 881 1
 661              		.cfi_startproc
 662              		@ args = 0, pretend = 0, frame = 16
 663              		@ frame_needed = 1, uses_anonymous_args = 0
 664              		@ link register save eliminated.
 665 0000 04B02DE5 		str	fp, [sp, #-4]!
 666              		.cfi_def_cfa_offset 4
 667              		.cfi_offset 11, -4
 668 0004 00B08DE2 		add	fp, sp, #0
 669              		.cfi_def_cfa_register 11
 670 0008 14D04DE2 		sub	sp, sp, #20
 671 000c 10000BE5 		str	r0, [fp, #-16]
 672 0010 14100BE5 		str	r1, [fp, #-20]
 882:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Old;
 883:../../Source/Kernel/rme_kernel.c **** 
 884:../../Source/Kernel/rme_kernel.c ****     Old=(rme_cnt_t)(*Ptr);
 673              		.loc 1 884 21
 674 0014 10301BE5 		ldr	r3, [fp, #-16]
 675 0018 003093E5 		ldr	r3, [r3]
 676              		.loc 1 884 8
 677 001c 08300BE5 		str	r3, [fp, #-8]
 885:../../Source/Kernel/rme_kernel.c ****     *Ptr=(rme_ptr_t)(Old+Addend);
 678              		.loc 1 885 25
 679 0020 08201BE5 		ldr	r2, [fp, #-8]
 680 0024 14301BE5 		ldr	r3, [fp, #-20]
 681 0028 033082E0 		add	r3, r2, r3
 682              		.loc 1 885 10
 683 002c 0320A0E1 		mov	r2, r3
 684              		.loc 1 885 9
 685 0030 10301BE5 		ldr	r3, [fp, #-16]
 686 0034 002083E5 		str	r2, [r3]
 886:../../Source/Kernel/rme_kernel.c **** 
 887:../../Source/Kernel/rme_kernel.c ****     return (rme_ptr_t)Old;
 687              		.loc 1 887 12
 688 0038 08301BE5 		ldr	r3, [fp, #-8]
 888:../../Source/Kernel/rme_kernel.c **** }
 689              		.loc 1 888 1
 690 003c 0300A0E1 		mov	r0, r3
 691 0040 00D08BE2 		add	sp, fp, #0
 692              		.cfi_def_cfa_register 13
 693              		@ sp needed
 694 0044 04B09DE4 		ldr	fp, [sp], #4
 695              		.cfi_restore 11
 696              		.cfi_def_cfa_offset 0
 697 0048 1EFF2FE1 		bx	lr
 698              		.cfi_endproc
 699              	.LFE7:
 701              		.section	.text._RME_Fetch_And_Single,"ax",%progbits
 702              		.align	2
 703              		.global	_RME_Fetch_And_Single
 704              		.syntax unified
 705              		.arm
 707              	_RME_Fetch_And_Single:
 708              	.LFB8:
 889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_Add_Single ****************************************/
 890:../../Source/Kernel/rme_kernel.c **** 
 891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Fetch_And_Single *********************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 29


 892:../../Source/Kernel/rme_kernel.c **** Description : The fetch-and-logic-and atomic instruction. Logic AND the pointer
 893:../../Source/Kernel/rme_kernel.c ****               value with the operand, and return the value before logic AND.
 894:../../Source/Kernel/rme_kernel.c ****               This is for use on single-core processors.
 895:../../Source/Kernel/rme_kernel.c **** Input       : volatile rme_ptr_t* Ptr - The pointer to the data.
 896:../../Source/Kernel/rme_kernel.c ****               rme_cnt_t Operand - The number to logic AND with the destination.
 897:../../Source/Kernel/rme_kernel.c **** Output      : volatile rme_ptr_t* Ptr - The pointer to the data.
 898:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The value before the AND operation.
 899:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 900:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Fetch_And_Single(volatile rme_ptr_t* Ptr,
 901:../../Source/Kernel/rme_kernel.c ****                                 rme_ptr_t Operand)
 902:../../Source/Kernel/rme_kernel.c **** {
 709              		.loc 1 902 1
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 16
 712              		@ frame_needed = 1, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714 0000 04B02DE5 		str	fp, [sp, #-4]!
 715              		.cfi_def_cfa_offset 4
 716              		.cfi_offset 11, -4
 717 0004 00B08DE2 		add	fp, sp, #0
 718              		.cfi_def_cfa_register 11
 719 0008 14D04DE2 		sub	sp, sp, #20
 720 000c 10000BE5 		str	r0, [fp, #-16]
 721 0010 14100BE5 		str	r1, [fp, #-20]
 903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old;
 904:../../Source/Kernel/rme_kernel.c **** 
 905:../../Source/Kernel/rme_kernel.c ****     Old=*Ptr;
 722              		.loc 1 905 8
 723 0014 10301BE5 		ldr	r3, [fp, #-16]
 724 0018 003093E5 		ldr	r3, [r3]
 725 001c 08300BE5 		str	r3, [fp, #-8]
 906:../../Source/Kernel/rme_kernel.c ****     *Ptr=Old&Operand;
 726              		.loc 1 906 13
 727 0020 08201BE5 		ldr	r2, [fp, #-8]
 728 0024 14301BE5 		ldr	r3, [fp, #-20]
 729 0028 032002E0 		and	r2, r2, r3
 730              		.loc 1 906 9
 731 002c 10301BE5 		ldr	r3, [fp, #-16]
 732 0030 002083E5 		str	r2, [r3]
 907:../../Source/Kernel/rme_kernel.c **** 
 908:../../Source/Kernel/rme_kernel.c ****     return Old;
 733              		.loc 1 908 12
 734 0034 08301BE5 		ldr	r3, [fp, #-8]
 909:../../Source/Kernel/rme_kernel.c **** }
 735              		.loc 1 909 1
 736 0038 0300A0E1 		mov	r0, r3
 737 003c 00D08BE2 		add	sp, fp, #0
 738              		.cfi_def_cfa_register 13
 739              		@ sp needed
 740 0040 04B09DE4 		ldr	fp, [sp], #4
 741              		.cfi_restore 11
 742              		.cfi_def_cfa_offset 0
 743 0044 1EFF2FE1 		bx	lr
 744              		.cfi_endproc
 745              	.LFE8:
 747              		.section	.text._RME_List_Crt,"ax",%progbits
 748              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 30


 749              		.global	_RME_List_Crt
 750              		.syntax unified
 751              		.arm
 753              	_RME_List_Crt:
 754              	.LFB9:
 910:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Fetch_And_Single ****************************************/
 911:../../Source/Kernel/rme_kernel.c **** 
 912:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Crt *****************************************************
 913:../../Source/Kernel/rme_kernel.c **** Description : Create a doubly linked list.
 914:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Head - The pointer to the list head.
 915:../../Source/Kernel/rme_kernel.c **** Output      : None.
 916:../../Source/Kernel/rme_kernel.c **** Return      : None.
 917:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 918:../../Source/Kernel/rme_kernel.c **** void _RME_List_Crt(struct RME_List* Head)
 919:../../Source/Kernel/rme_kernel.c **** {
 755              		.loc 1 919 1
 756              		.cfi_startproc
 757              		@ args = 0, pretend = 0, frame = 8
 758              		@ frame_needed = 1, uses_anonymous_args = 0
 759              		@ link register save eliminated.
 760 0000 04B02DE5 		str	fp, [sp, #-4]!
 761              		.cfi_def_cfa_offset 4
 762              		.cfi_offset 11, -4
 763 0004 00B08DE2 		add	fp, sp, #0
 764              		.cfi_def_cfa_register 11
 765 0008 0CD04DE2 		sub	sp, sp, #12
 766 000c 08000BE5 		str	r0, [fp, #-8]
 920:../../Source/Kernel/rme_kernel.c ****     Head->Prev=Head;
 767              		.loc 1 920 15
 768 0010 08301BE5 		ldr	r3, [fp, #-8]
 769 0014 08201BE5 		ldr	r2, [fp, #-8]
 770 0018 042083E5 		str	r2, [r3, #4]
 921:../../Source/Kernel/rme_kernel.c ****     Head->Next=Head;
 771              		.loc 1 921 15
 772 001c 08301BE5 		ldr	r3, [fp, #-8]
 773 0020 08201BE5 		ldr	r2, [fp, #-8]
 774 0024 002083E5 		str	r2, [r3]
 922:../../Source/Kernel/rme_kernel.c **** }
 775              		.loc 1 922 1
 776 0028 00F020E3 		nop
 777 002c 00D08BE2 		add	sp, fp, #0
 778              		.cfi_def_cfa_register 13
 779              		@ sp needed
 780 0030 04B09DE4 		ldr	fp, [sp], #4
 781              		.cfi_restore 11
 782              		.cfi_def_cfa_offset 0
 783 0034 1EFF2FE1 		bx	lr
 784              		.cfi_endproc
 785              	.LFE9:
 787              		.section	.text._RME_List_Del,"ax",%progbits
 788              		.align	2
 789              		.global	_RME_List_Del
 790              		.syntax unified
 791              		.arm
 793              	_RME_List_Del:
 794              	.LFB10:
 923:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Crt ************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 31


 924:../../Source/Kernel/rme_kernel.c **** 
 925:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Del *****************************************************
 926:../../Source/Kernel/rme_kernel.c **** Description : Delete a node from the doubly-linked list.
 927:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* Prev - The previous node.
 928:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 929:../../Source/Kernel/rme_kernel.c **** Output      : None.
 930:../../Source/Kernel/rme_kernel.c **** Return      : None.
 931:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 932:../../Source/Kernel/rme_kernel.c **** void _RME_List_Del(struct RME_List* Prev,
 933:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 934:../../Source/Kernel/rme_kernel.c **** {
 795              		.loc 1 934 1
 796              		.cfi_startproc
 797              		@ args = 0, pretend = 0, frame = 8
 798              		@ frame_needed = 1, uses_anonymous_args = 0
 799              		@ link register save eliminated.
 800 0000 04B02DE5 		str	fp, [sp, #-4]!
 801              		.cfi_def_cfa_offset 4
 802              		.cfi_offset 11, -4
 803 0004 00B08DE2 		add	fp, sp, #0
 804              		.cfi_def_cfa_register 11
 805 0008 0CD04DE2 		sub	sp, sp, #12
 806 000c 08000BE5 		str	r0, [fp, #-8]
 807 0010 0C100BE5 		str	r1, [fp, #-12]
 935:../../Source/Kernel/rme_kernel.c ****     Next->Prev=Prev;
 808              		.loc 1 935 15
 809 0014 0C301BE5 		ldr	r3, [fp, #-12]
 810 0018 08201BE5 		ldr	r2, [fp, #-8]
 811 001c 042083E5 		str	r2, [r3, #4]
 936:../../Source/Kernel/rme_kernel.c ****     Prev->Next=Next;
 812              		.loc 1 936 15
 813 0020 08301BE5 		ldr	r3, [fp, #-8]
 814 0024 0C201BE5 		ldr	r2, [fp, #-12]
 815 0028 002083E5 		str	r2, [r3]
 937:../../Source/Kernel/rme_kernel.c **** }
 816              		.loc 1 937 1
 817 002c 00F020E3 		nop
 818 0030 00D08BE2 		add	sp, fp, #0
 819              		.cfi_def_cfa_register 13
 820              		@ sp needed
 821 0034 04B09DE4 		ldr	fp, [sp], #4
 822              		.cfi_restore 11
 823              		.cfi_def_cfa_offset 0
 824 0038 1EFF2FE1 		bx	lr
 825              		.cfi_endproc
 826              	.LFE10:
 828              		.section	.text._RME_List_Ins,"ax",%progbits
 829              		.align	2
 830              		.global	_RME_List_Ins
 831              		.syntax unified
 832              		.arm
 834              	_RME_List_Ins:
 835              	.LFB11:
 938:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Del ************************************************/
 939:../../Source/Kernel/rme_kernel.c **** 
 940:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_List_Ins *****************************************************
 941:../../Source/Kernel/rme_kernel.c **** Description : Insert a node to the doubly-linked list.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 32


 942:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_List* New - The new node to insert.
 943:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Prev - The previous node.
 944:../../Source/Kernel/rme_kernel.c ****               struct RME_List* Next - The next node.
 945:../../Source/Kernel/rme_kernel.c **** Output      : None.
 946:../../Source/Kernel/rme_kernel.c **** Return      : None.
 947:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 948:../../Source/Kernel/rme_kernel.c **** void _RME_List_Ins(struct RME_List* New,
 949:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Prev,
 950:../../Source/Kernel/rme_kernel.c ****                    struct RME_List* Next)
 951:../../Source/Kernel/rme_kernel.c **** {
 836              		.loc 1 951 1
 837              		.cfi_startproc
 838              		@ args = 0, pretend = 0, frame = 16
 839              		@ frame_needed = 1, uses_anonymous_args = 0
 840              		@ link register save eliminated.
 841 0000 04B02DE5 		str	fp, [sp, #-4]!
 842              		.cfi_def_cfa_offset 4
 843              		.cfi_offset 11, -4
 844 0004 00B08DE2 		add	fp, sp, #0
 845              		.cfi_def_cfa_register 11
 846 0008 14D04DE2 		sub	sp, sp, #20
 847 000c 08000BE5 		str	r0, [fp, #-8]
 848 0010 0C100BE5 		str	r1, [fp, #-12]
 849 0014 10200BE5 		str	r2, [fp, #-16]
 952:../../Source/Kernel/rme_kernel.c ****     Next->Prev=New;
 850              		.loc 1 952 15
 851 0018 10301BE5 		ldr	r3, [fp, #-16]
 852 001c 08201BE5 		ldr	r2, [fp, #-8]
 853 0020 042083E5 		str	r2, [r3, #4]
 953:../../Source/Kernel/rme_kernel.c ****     New->Next=Next;
 854              		.loc 1 953 14
 855 0024 08301BE5 		ldr	r3, [fp, #-8]
 856 0028 10201BE5 		ldr	r2, [fp, #-16]
 857 002c 002083E5 		str	r2, [r3]
 954:../../Source/Kernel/rme_kernel.c ****     New->Prev=Prev;
 858              		.loc 1 954 14
 859 0030 08301BE5 		ldr	r3, [fp, #-8]
 860 0034 0C201BE5 		ldr	r2, [fp, #-12]
 861 0038 042083E5 		str	r2, [r3, #4]
 955:../../Source/Kernel/rme_kernel.c ****     Prev->Next=New;
 862              		.loc 1 955 15
 863 003c 0C301BE5 		ldr	r3, [fp, #-12]
 864 0040 08201BE5 		ldr	r2, [fp, #-8]
 865 0044 002083E5 		str	r2, [r3]
 956:../../Source/Kernel/rme_kernel.c **** }
 866              		.loc 1 956 1
 867 0048 00F020E3 		nop
 868 004c 00D08BE2 		add	sp, fp, #0
 869              		.cfi_def_cfa_register 13
 870              		@ sp needed
 871 0050 04B09DE4 		ldr	fp, [sp], #4
 872              		.cfi_restore 11
 873              		.cfi_def_cfa_offset 0
 874 0054 1EFF2FE1 		bx	lr
 875              		.cfi_endproc
 876              	.LFE11:
 878              		.section	.text._RME_Clear,"ax",%progbits
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 33


 879              		.align	2
 880              		.global	_RME_Clear
 881              		.syntax unified
 882              		.arm
 884              	_RME_Clear:
 885              	.LFB12:
 957:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_List_Ins ************************************************/
 958:../../Source/Kernel/rme_kernel.c **** 
 959:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Clear ********************************************************
 960:../../Source/Kernel/rme_kernel.c **** Description : Memset a memory area to zero. This is not fast due to byte operations;
 961:../../Source/Kernel/rme_kernel.c ****               this is not meant for large memory. However, it is indeed secure.
 962:../../Source/Kernel/rme_kernel.c **** Input       : void* Addr - The address to clear.
 963:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
 964:../../Source/Kernel/rme_kernel.c **** Output      : None.
 965:../../Source/Kernel/rme_kernel.c **** Return      : None.
 966:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 967:../../Source/Kernel/rme_kernel.c **** void _RME_Clear(void* Addr,
 968:../../Source/Kernel/rme_kernel.c ****                 rme_ptr_t Size)
 969:../../Source/Kernel/rme_kernel.c **** {
 886              		.loc 1 969 1
 887              		.cfi_startproc
 888              		@ args = 0, pretend = 0, frame = 16
 889              		@ frame_needed = 1, uses_anonymous_args = 0
 890              		@ link register save eliminated.
 891 0000 04B02DE5 		str	fp, [sp, #-4]!
 892              		.cfi_def_cfa_offset 4
 893              		.cfi_offset 11, -4
 894 0004 00B08DE2 		add	fp, sp, #0
 895              		.cfi_def_cfa_register 11
 896 0008 14D04DE2 		sub	sp, sp, #20
 897 000c 10000BE5 		str	r0, [fp, #-16]
 898 0010 14100BE5 		str	r1, [fp, #-20]
 970:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 971:../../Source/Kernel/rme_kernel.c **** 
 972:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Size;Count++)
 899              		.loc 1 972 14
 900 0014 0030A0E3 		mov	r3, #0
 901 0018 08300BE5 		str	r3, [fp, #-8]
 902              		.loc 1 972 5
 903 001c 070000EA 		b	.L52
 904              	.L53:
 973:../../Source/Kernel/rme_kernel.c ****     {
 974:../../Source/Kernel/rme_kernel.c ****         ((rme_u8_t*)Addr)[Count]=0U;
 905              		.loc 1 974 26
 906 0020 10201BE5 		ldr	r2, [fp, #-16]
 907 0024 08301BE5 		ldr	r3, [fp, #-8]
 908 0028 033082E0 		add	r3, r2, r3
 909              		.loc 1 974 33
 910 002c 0020A0E3 		mov	r2, #0
 911 0030 0020C3E5 		strb	r2, [r3]
 972:../../Source/Kernel/rme_kernel.c ****     {
 912              		.loc 1 972 34 discriminator 3
 913 0034 08301BE5 		ldr	r3, [fp, #-8]
 914 0038 013083E2 		add	r3, r3, #1
 915 003c 08300BE5 		str	r3, [fp, #-8]
 916              	.L52:
 972:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 34


 917              		.loc 1 972 23 discriminator 1
 918 0040 08201BE5 		ldr	r2, [fp, #-8]
 919 0044 14301BE5 		ldr	r3, [fp, #-20]
 920 0048 030052E1 		cmp	r2, r3
 921 004c F3FFFF3A 		bcc	.L53
 975:../../Source/Kernel/rme_kernel.c ****     }
 976:../../Source/Kernel/rme_kernel.c **** }
 922              		.loc 1 976 1
 923 0050 00F020E3 		nop
 924 0054 00F020E3 		nop
 925 0058 00D08BE2 		add	sp, fp, #0
 926              		.cfi_def_cfa_register 13
 927              		@ sp needed
 928 005c 04B09DE4 		ldr	fp, [sp], #4
 929              		.cfi_restore 11
 930              		.cfi_def_cfa_offset 0
 931 0060 1EFF2FE1 		bx	lr
 932              		.cfi_endproc
 933              	.LFE12:
 935              		.section	.text._RME_Memcmp,"ax",%progbits
 936              		.align	2
 937              		.global	_RME_Memcmp
 938              		.syntax unified
 939              		.arm
 941              	_RME_Memcmp:
 942              	.LFB13:
 977:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Clear ***************************************************/
 978:../../Source/Kernel/rme_kernel.c **** 
 979:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcmp *******************************************************
 980:../../Source/Kernel/rme_kernel.c **** Description : Compare two memory segments to see if they are equal. This is not
 981:../../Source/Kernel/rme_kernel.c ****               fast due to byte operations; this is not meant for large memory.
 982:../../Source/Kernel/rme_kernel.c **** Input       : const void* Ptr1 - The first memory region.
 983:../../Source/Kernel/rme_kernel.c ****               const void* Ptr2 - The second memory region.
 984:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
 985:../../Source/Kernel/rme_kernel.c **** Output      : None.
 986:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If Ptr1>Ptr2, then return a positive value; else a negative
 987:../../Source/Kernel/rme_kernel.c ****                           value. If Ptr1==Ptr2, then return 0;
 988:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
 989:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Memcmp(const void* Ptr1,
 990:../../Source/Kernel/rme_kernel.c ****                       const void* Ptr2,
 991:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Num)
 992:../../Source/Kernel/rme_kernel.c **** {
 943              		.loc 1 992 1
 944              		.cfi_startproc
 945              		@ args = 0, pretend = 0, frame = 32
 946              		@ frame_needed = 1, uses_anonymous_args = 0
 947              		@ link register save eliminated.
 948 0000 04B02DE5 		str	fp, [sp, #-4]!
 949              		.cfi_def_cfa_offset 4
 950              		.cfi_offset 11, -4
 951 0004 00B08DE2 		add	fp, sp, #0
 952              		.cfi_def_cfa_register 11
 953 0008 24D04DE2 		sub	sp, sp, #36
 954 000c 18000BE5 		str	r0, [fp, #-24]
 955 0010 1C100BE5 		str	r1, [fp, #-28]
 956 0014 20200BE5 		str	r2, [fp, #-32]
 993:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Dst;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 35


 994:../../Source/Kernel/rme_kernel.c ****     const rme_s8_t* Src;
 995:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
 996:../../Source/Kernel/rme_kernel.c **** 
 997:../../Source/Kernel/rme_kernel.c ****     Dst=(const rme_s8_t*)Ptr1;
 957              		.loc 1 997 8
 958 0018 18301BE5 		ldr	r3, [fp, #-24]
 959 001c 0C300BE5 		str	r3, [fp, #-12]
 998:../../Source/Kernel/rme_kernel.c ****     Src=(const rme_s8_t*)Ptr2;
 960              		.loc 1 998 8
 961 0020 1C301BE5 		ldr	r3, [fp, #-28]
 962 0024 10300BE5 		str	r3, [fp, #-16]
 999:../../Source/Kernel/rme_kernel.c **** 
1000:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 963              		.loc 1 1000 14
 964 0028 0030A0E3 		mov	r3, #0
 965 002c 08300BE5 		str	r3, [fp, #-8]
 966              		.loc 1 1000 5
 967 0030 170000EA 		b	.L55
 968              	.L58:
1001:../../Source/Kernel/rme_kernel.c ****     {
1002:../../Source/Kernel/rme_kernel.c ****         if(Dst[Count]!=Src[Count])
 969              		.loc 1 1002 15
 970 0034 0C201BE5 		ldr	r2, [fp, #-12]
 971 0038 08301BE5 		ldr	r3, [fp, #-8]
 972 003c 033082E0 		add	r3, r2, r3
 973 0040 D020D3E1 		ldrsb	r2, [r3]
 974              		.loc 1 1002 27
 975 0044 10101BE5 		ldr	r1, [fp, #-16]
 976 0048 08301BE5 		ldr	r3, [fp, #-8]
 977 004c 033081E0 		add	r3, r1, r3
 978 0050 D030D3E1 		ldrsb	r3, [r3]
 979              		.loc 1 1002 11
 980 0054 030052E1 		cmp	r2, r3
 981 0058 0A00000A 		beq	.L56
1003:../../Source/Kernel/rme_kernel.c ****         {
1004:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1005:../../Source/Kernel/rme_kernel.c ****             
1006:../../Source/Kernel/rme_kernel.c ****             return Dst[Count]-Src[Count];
 982              		.loc 1 1006 23
 983 005c 0C201BE5 		ldr	r2, [fp, #-12]
 984 0060 08301BE5 		ldr	r3, [fp, #-8]
 985 0064 033082E0 		add	r3, r2, r3
 986 0068 D030D3E1 		ldrsb	r3, [r3]
 987 006c 0310A0E1 		mov	r1, r3
 988              		.loc 1 1006 34
 989 0070 10201BE5 		ldr	r2, [fp, #-16]
 990 0074 08301BE5 		ldr	r3, [fp, #-8]
 991 0078 033082E0 		add	r3, r2, r3
 992 007c D030D3E1 		ldrsb	r3, [r3]
 993              		.loc 1 1006 30
 994 0080 033041E0 		sub	r3, r1, r3
 995 0084 070000EA 		b	.L57
 996              	.L56:
1000:../../Source/Kernel/rme_kernel.c ****     {
 997              		.loc 1 1000 33 discriminator 2
 998 0088 08301BE5 		ldr	r3, [fp, #-8]
 999 008c 013083E2 		add	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 36


 1000 0090 08300BE5 		str	r3, [fp, #-8]
 1001              	.L55:
1000:../../Source/Kernel/rme_kernel.c ****     {
 1002              		.loc 1 1000 23 discriminator 1
 1003 0094 08201BE5 		ldr	r2, [fp, #-8]
 1004 0098 20301BE5 		ldr	r3, [fp, #-32]
 1005 009c 030052E1 		cmp	r2, r3
 1006 00a0 E3FFFF3A 		bcc	.L58
1007:../../Source/Kernel/rme_kernel.c ****         }
1008:../../Source/Kernel/rme_kernel.c ****         else
1009:../../Source/Kernel/rme_kernel.c ****         {
1010:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1011:../../Source/Kernel/rme_kernel.c ****             /* No action required */
1012:../../Source/Kernel/rme_kernel.c ****         }
1013:../../Source/Kernel/rme_kernel.c ****     }
1014:../../Source/Kernel/rme_kernel.c **** 
1015:../../Source/Kernel/rme_kernel.c ****     return 0;
 1007              		.loc 1 1015 12
 1008 00a4 0030A0E3 		mov	r3, #0
 1009              	.L57:
1016:../../Source/Kernel/rme_kernel.c **** }
 1010              		.loc 1 1016 1
 1011 00a8 0300A0E1 		mov	r0, r3
 1012 00ac 00D08BE2 		add	sp, fp, #0
 1013              		.cfi_def_cfa_register 13
 1014              		@ sp needed
 1015 00b0 04B09DE4 		ldr	fp, [sp], #4
 1016              		.cfi_restore 11
 1017              		.cfi_def_cfa_offset 0
 1018 00b4 1EFF2FE1 		bx	lr
 1019              		.cfi_endproc
 1020              	.LFE13:
 1022              		.section	.text._RME_Memcpy,"ax",%progbits
 1023              		.align	2
 1024              		.global	_RME_Memcpy
 1025              		.syntax unified
 1026              		.arm
 1028              	_RME_Memcpy:
 1029              	.LFB14:
1017:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcmp **************************************************/
1018:../../Source/Kernel/rme_kernel.c **** 
1019:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Memcpy *******************************************************
1020:../../Source/Kernel/rme_kernel.c **** Description : Copy one segment of memory to another segment. This is not fast
1021:../../Source/Kernel/rme_kernel.c ****               due to byte operations; this is not meant for large memory.
1022:../../Source/Kernel/rme_kernel.c **** Input       : volatile void* Dst - The first memory region.
1023:../../Source/Kernel/rme_kernel.c ****               volatile void* Src - The second memory region.
1024:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num - The number of bytes to compare.
1025:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size to clear.
1026:../../Source/Kernel/rme_kernel.c **** Output      : None.
1027:../../Source/Kernel/rme_kernel.c **** Return      : None.
1028:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1029:../../Source/Kernel/rme_kernel.c **** void _RME_Memcpy(void* Dst,
1030:../../Source/Kernel/rme_kernel.c ****                  void* Src,
1031:../../Source/Kernel/rme_kernel.c ****                  rme_ptr_t Num)
1032:../../Source/Kernel/rme_kernel.c **** {
 1030              		.loc 1 1032 1
 1031              		.cfi_startproc
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 37


 1032              		@ args = 0, pretend = 0, frame = 24
 1033              		@ frame_needed = 1, uses_anonymous_args = 0
 1034              		@ link register save eliminated.
 1035 0000 04B02DE5 		str	fp, [sp, #-4]!
 1036              		.cfi_def_cfa_offset 4
 1037              		.cfi_offset 11, -4
 1038 0004 00B08DE2 		add	fp, sp, #0
 1039              		.cfi_def_cfa_register 11
 1040 0008 1CD04DE2 		sub	sp, sp, #28
 1041 000c 10000BE5 		str	r0, [fp, #-16]
 1042 0010 14100BE5 		str	r1, [fp, #-20]
 1043 0014 18200BE5 		str	r2, [fp, #-24]
1033:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1034:../../Source/Kernel/rme_kernel.c **** 
1035:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Num;Count++)
 1044              		.loc 1 1035 14
 1045 0018 0030A0E3 		mov	r3, #0
 1046 001c 08300BE5 		str	r3, [fp, #-8]
 1047              		.loc 1 1035 5
 1048 0020 0B0000EA 		b	.L60
 1049              	.L61:
1036:../../Source/Kernel/rme_kernel.c ****     {
1037:../../Source/Kernel/rme_kernel.c ****         ((volatile rme_u8_t*)Dst)[Count]=((volatile rme_u8_t*)Src)[Count];
 1050              		.loc 1 1037 67
 1051 0024 14201BE5 		ldr	r2, [fp, #-20]
 1052 0028 08301BE5 		ldr	r3, [fp, #-8]
 1053 002c 032082E0 		add	r2, r2, r3
 1054              		.loc 1 1037 34
 1055 0030 10101BE5 		ldr	r1, [fp, #-16]
 1056 0034 08301BE5 		ldr	r3, [fp, #-8]
 1057 0038 033081E0 		add	r3, r1, r3
 1058              		.loc 1 1037 67
 1059 003c 0020D2E5 		ldrb	r2, [r2]
 1060 0040 7220EFE6 		uxtb	r2, r2
 1061              		.loc 1 1037 41
 1062 0044 0020C3E5 		strb	r2, [r3]
1035:../../Source/Kernel/rme_kernel.c ****     {
 1063              		.loc 1 1035 33 discriminator 3
 1064 0048 08301BE5 		ldr	r3, [fp, #-8]
 1065 004c 013083E2 		add	r3, r3, #1
 1066 0050 08300BE5 		str	r3, [fp, #-8]
 1067              	.L60:
1035:../../Source/Kernel/rme_kernel.c ****     {
 1068              		.loc 1 1035 23 discriminator 1
 1069 0054 08201BE5 		ldr	r2, [fp, #-8]
 1070 0058 18301BE5 		ldr	r3, [fp, #-24]
 1071 005c 030052E1 		cmp	r2, r3
 1072 0060 EFFFFF3A 		bcc	.L61
1038:../../Source/Kernel/rme_kernel.c ****     }
1039:../../Source/Kernel/rme_kernel.c **** }
 1073              		.loc 1 1039 1
 1074 0064 00F020E3 		nop
 1075 0068 00F020E3 		nop
 1076 006c 00D08BE2 		add	sp, fp, #0
 1077              		.cfi_def_cfa_register 13
 1078              		@ sp needed
 1079 0070 04B09DE4 		ldr	fp, [sp], #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 38


 1080              		.cfi_restore 11
 1081              		.cfi_def_cfa_offset 0
 1082 0074 1EFF2FE1 		bx	lr
 1083              		.cfi_endproc
 1084              	.LFE14:
 1086              		.section	.text._RME_Diff,"ax",%progbits
 1087              		.align	2
 1088              		.global	_RME_Diff
 1089              		.syntax unified
 1090              		.arm
 1092              	_RME_Diff:
 1093              	.LFB15:
1040:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Memcpy **************************************************/
1041:../../Source/Kernel/rme_kernel.c **** 
1042:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Diff *********************************************************
1043:../../Source/Kernel/rme_kernel.c **** Description : Compute the absolute difference between two numbers, when integer
1044:../../Source/Kernel/rme_kernel.c ****               wraparound is considered.
1045:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Num1 - The first number.
1046:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num2 - The second number.
1047:../../Source/Kernel/rme_kernel.c **** Output      : None.
1048:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - The distance.
1049:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1050:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Diff(rme_ptr_t Num1,
1051:../../Source/Kernel/rme_kernel.c ****                     rme_ptr_t Num2)
1052:../../Source/Kernel/rme_kernel.c **** {
 1094              		.loc 1 1052 1
 1095              		.cfi_startproc
 1096              		@ args = 0, pretend = 0, frame = 16
 1097              		@ frame_needed = 1, uses_anonymous_args = 0
 1098              		@ link register save eliminated.
 1099 0000 04B02DE5 		str	fp, [sp, #-4]!
 1100              		.cfi_def_cfa_offset 4
 1101              		.cfi_offset 11, -4
 1102 0004 00B08DE2 		add	fp, sp, #0
 1103              		.cfi_def_cfa_register 11
 1104 0008 14D04DE2 		sub	sp, sp, #20
 1105 000c 10000BE5 		str	r0, [fp, #-16]
 1106 0010 14100BE5 		str	r1, [fp, #-20]
1053:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff1;
1054:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Diff2;
1055:../../Source/Kernel/rme_kernel.c ****     
1056:../../Source/Kernel/rme_kernel.c ****     Diff1=Num1-Num2;
 1107              		.loc 1 1056 10
 1108 0014 10201BE5 		ldr	r2, [fp, #-16]
 1109 0018 14301BE5 		ldr	r3, [fp, #-20]
 1110 001c 033042E0 		sub	r3, r2, r3
 1111 0020 08300BE5 		str	r3, [fp, #-8]
1057:../../Source/Kernel/rme_kernel.c ****     Diff2=Num2-Num1;
 1112              		.loc 1 1057 10
 1113 0024 14201BE5 		ldr	r2, [fp, #-20]
 1114 0028 10301BE5 		ldr	r3, [fp, #-16]
 1115 002c 033042E0 		sub	r3, r2, r3
 1116 0030 0C300BE5 		str	r3, [fp, #-12]
1058:../../Source/Kernel/rme_kernel.c ****     
1059:../../Source/Kernel/rme_kernel.c ****     if(Diff1>Diff2)
 1117              		.loc 1 1059 7
 1118 0034 08201BE5 		ldr	r2, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 39


 1119 0038 0C301BE5 		ldr	r3, [fp, #-12]
 1120 003c 030052E1 		cmp	r2, r3
 1121 0040 0100009A 		bls	.L63
1060:../../Source/Kernel/rme_kernel.c ****     {
1061:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1062:../../Source/Kernel/rme_kernel.c ****         
1063:../../Source/Kernel/rme_kernel.c ****         return Diff2;
 1122              		.loc 1 1063 16
 1123 0044 0C301BE5 		ldr	r3, [fp, #-12]
 1124 0048 000000EA 		b	.L64
 1125              	.L63:
1064:../../Source/Kernel/rme_kernel.c ****     }
1065:../../Source/Kernel/rme_kernel.c ****     else
1066:../../Source/Kernel/rme_kernel.c ****     {
1067:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1068:../../Source/Kernel/rme_kernel.c ****         
1069:../../Source/Kernel/rme_kernel.c ****         return Diff1;
 1126              		.loc 1 1069 16
 1127 004c 08301BE5 		ldr	r3, [fp, #-8]
 1128              	.L64:
1070:../../Source/Kernel/rme_kernel.c ****     }
1071:../../Source/Kernel/rme_kernel.c **** }
 1129              		.loc 1 1071 1
 1130 0050 0300A0E1 		mov	r0, r3
 1131 0054 00D08BE2 		add	sp, fp, #0
 1132              		.cfi_def_cfa_register 13
 1133              		@ sp needed
 1134 0058 04B09DE4 		ldr	fp, [sp], #4
 1135              		.cfi_restore 11
 1136              		.cfi_def_cfa_offset 0
 1137 005c 1EFF2FE1 		bx	lr
 1138              		.cfi_endproc
 1139              	.LFE15:
 1141              		.section	.text.RME_Kmain,"ax",%progbits
 1142              		.align	2
 1143              		.global	RME_Kmain
 1144              		.syntax unified
 1145              		.arm
 1147              	RME_Kmain:
 1148              	.LFB16:
1072:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Diff ****************************************************/
1073:../../Source/Kernel/rme_kernel.c **** 
1074:../../Source/Kernel/rme_kernel.c **** /* Function:RME_Kmain *********************************************************
1075:../../Source/Kernel/rme_kernel.c **** Description : The entry of the operating system.
1076:../../Source/Kernel/rme_kernel.c **** Input       : None.
1077:../../Source/Kernel/rme_kernel.c **** Output      : None.
1078:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - This function never returns.
1079:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1080:../../Source/Kernel/rme_kernel.c **** rme_ret_t RME_Kmain(void)
1081:../../Source/Kernel/rme_kernel.c **** {
 1149              		.loc 1 1081 1
 1150              		.cfi_startproc
 1151              		@ args = 0, pretend = 0, frame = 0
 1152              		@ frame_needed = 1, uses_anonymous_args = 0
 1153 0000 00482DE9 		push	{fp, lr}
 1154              		.cfi_def_cfa_offset 8
 1155              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 40


 1156              		.cfi_offset 14, -4
 1157 0004 04B08DE2 		add	fp, sp, #4
 1158              		.cfi_def_cfa 11, 4
1082:../../Source/Kernel/rme_kernel.c ****     /* Disable all interrupts first */
1083:../../Source/Kernel/rme_kernel.c ****     __RME_Int_Disable();
 1159              		.loc 1 1083 5
 1160 0008 FEFFFFEB 		bl	__RME_Int_Disable
1084:../../Source/Kernel/rme_kernel.c ****     /* Some low-level kernel assertions */
1085:../../Source/Kernel/rme_kernel.c ****     _RME_Lowlvl_Check();
 1161              		.loc 1 1085 5
 1162 000c FEFFFFEB 		bl	_RME_Lowlvl_Check
1086:../../Source/Kernel/rme_kernel.c ****     /* Hardware low-level init */
1087:../../Source/Kernel/rme_kernel.c ****     __RME_Lowlvl_Init();
 1163              		.loc 1 1087 5
 1164 0010 FEFFFFEB 		bl	__RME_Lowlvl_Init
1088:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel page tables or memory mappings */
1089:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Kom_Init();
 1165              		.loc 1 1089 5
 1166 0014 FEFFFFEB 		bl	__RME_Pgt_Kom_Init
1090:../../Source/Kernel/rme_kernel.c ****     
1091:../../Source/Kernel/rme_kernel.c ****     /* Initialize the kernel object allocation table - default init */
1092:../../Source/Kernel/rme_kernel.c ****     _RME_Kot_Init(RME_KOT_WORD_NUM);
 1167              		.loc 1 1092 5
 1168 0018 0209A0E3 		mov	r0, #32768
 1169 001c FEFFFFEB 		bl	_RME_Kot_Init
1093:../../Source/Kernel/rme_kernel.c ****     
1094:../../Source/Kernel/rme_kernel.c ****     /* Boot into the first process */
1095:../../Source/Kernel/rme_kernel.c ****     __RME_Boot();
 1170              		.loc 1 1095 5
 1171 0020 FEFFFFEB 		bl	__RME_Boot
1096:../../Source/Kernel/rme_kernel.c ****     
1097:../../Source/Kernel/rme_kernel.c ****     /* Should never reach here */
1098:../../Source/Kernel/rme_kernel.c ****     return 0;
 1172              		.loc 1 1098 12
 1173 0024 0030A0E3 		mov	r3, #0
1099:../../Source/Kernel/rme_kernel.c **** }
 1174              		.loc 1 1099 1
 1175 0028 0300A0E1 		mov	r0, r3
 1176 002c 0088BDE8 		pop	{fp, pc}
 1177              		.cfi_endproc
 1178              	.LFE16:
 1180              		.section	.text._RME_Lowlvl_Check,"ax",%progbits
 1181              		.align	2
 1182              		.syntax unified
 1183              		.arm
 1185              	_RME_Lowlvl_Check:
 1186              	.LFB17:
1100:../../Source/Kernel/rme_kernel.c **** /* End Function:RME_Kmain ****************************************************/
1101:../../Source/Kernel/rme_kernel.c **** 
1102:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Lowlvl_Check *************************************************
1103:../../Source/Kernel/rme_kernel.c **** Description : Do some low-level checking for the operating system.
1104:../../Source/Kernel/rme_kernel.c **** Input       : None.
1105:../../Source/Kernel/rme_kernel.c **** Output      : None.
1106:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
1107:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1108:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Lowlvl_Check(void)
1109:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 41


 1187              		.loc 1 1109 1
 1188              		.cfi_startproc
 1189              		@ args = 0, pretend = 0, frame = 0
 1190              		@ frame_needed = 1, uses_anonymous_args = 0
 1191              		@ link register save eliminated.
 1192 0000 04B02DE5 		str	fp, [sp, #-4]!
 1193              		.cfi_def_cfa_offset 4
 1194              		.cfi_offset 11, -4
 1195 0004 00B08DE2 		add	fp, sp, #0
 1196              		.cfi_def_cfa_register 11
1110:../../Source/Kernel/rme_kernel.c ****     /* Make sure the machine is at least 32-bit */
1111:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_ORDER>=5U);
1112:../../Source/Kernel/rme_kernel.c ****     /* Check if the word order setting is correct */
1113:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_WORD_BIT==RME_POW2(RME_WORD_ORDER));
1114:../../Source/Kernel/rme_kernel.c ****     /* Check if the struct sizes are correct */
1115:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Struct)==RME_CAP_SIZE);
1116:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Cpt)==RME_CAP_SIZE);
1117:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1118:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Pgt)==RME_CAP_SIZE);
1119:../../Source/Kernel/rme_kernel.c **** #endif
1120:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Prc)==RME_CAP_SIZE);
1121:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Thd)==RME_CAP_SIZE);
1122:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Sig)==RME_CAP_SIZE);
1123:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Inv)==RME_CAP_SIZE);
1124:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kfn)==RME_CAP_SIZE);
1125:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(sizeof(struct RME_Cap_Kom)==RME_CAP_SIZE);
1126:../../Source/Kernel/rme_kernel.c ****     /* Check if the other configurations are correct */
1127:../../Source/Kernel/rme_kernel.c ****     /* Kernel memory allocation minimal size aligned to word boundary */
1128:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_KOM_SLOT_ORDER>=RME_WORD_ORDER-3U);
1129:../../Source/Kernel/rme_kernel.c ****     /* Make sure the number of priorities do not exceed half-word boundary */
1130:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_PREEMPT_PRIO_NUM<=RME_POW2(RME_WORD_BIT>>1));
1131:../../Source/Kernel/rme_kernel.c ****     
1132:../../Source/Kernel/rme_kernel.c ****     return 0;
 1197              		.loc 1 1132 12
 1198 0008 0030A0E3 		mov	r3, #0
1133:../../Source/Kernel/rme_kernel.c **** }
 1199              		.loc 1 1133 1
 1200 000c 0300A0E1 		mov	r0, r3
 1201 0010 00D08BE2 		add	sp, fp, #0
 1202              		.cfi_def_cfa_register 13
 1203              		@ sp needed
 1204 0014 04B09DE4 		ldr	fp, [sp], #4
 1205              		.cfi_restore 11
 1206              		.cfi_def_cfa_offset 0
 1207 0018 1EFF2FE1 		bx	lr
 1208              		.cfi_endproc
 1209              	.LFE17:
 1211              		.section	.text._RME_Svc_Handler,"ax",%progbits
 1212              		.align	2
 1213              		.global	_RME_Svc_Handler
 1214              		.syntax unified
 1215              		.arm
 1217              	_RME_Svc_Handler:
 1218              	.LFB18:
1134:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Lowlvl_Check ********************************************/
1135:../../Source/Kernel/rme_kernel.c **** 
1136:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Svc_Handler **************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 42


1137:../../Source/Kernel/rme_kernel.c **** Description : The system call handler of the operating system. The register set 
1138:../../Source/Kernel/rme_kernel.c ****               of the current thread shall be passed in as a parameter.
1139:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1140:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1141:../../Source/Kernel/rme_kernel.c **** Return      : None.
1142:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1143:../../Source/Kernel/rme_kernel.c **** void _RME_Svc_Handler(struct RME_Reg_Struct* Reg)
1144:../../Source/Kernel/rme_kernel.c **** {
 1219              		.loc 1 1144 1
 1220              		.cfi_startproc
 1221              		@ args = 0, pretend = 0, frame = 48
 1222              		@ frame_needed = 1, uses_anonymous_args = 0
 1223 0000 30482DE9 		push	{r4, r5, fp, lr}
 1224              		.cfi_def_cfa_offset 16
 1225              		.cfi_offset 4, -16
 1226              		.cfi_offset 5, -12
 1227              		.cfi_offset 11, -8
 1228              		.cfi_offset 14, -4
 1229 0004 0CB08DE2 		add	fp, sp, #12
 1230              		.cfi_def_cfa 11, 4
 1231 0008 48D04DE2 		sub	sp, sp, #72
 1232 000c 38000BE5 		str	r0, [fp, #-56]
1145:../../Source/Kernel/rme_kernel.c ****     /* What's the system call number and major capability ID? */
1146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc;
1147:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Cid;
1148:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Param[3];
1149:../../Source/Kernel/rme_kernel.c ****     rme_ret_t Retval;
1150:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Svc_Num;
1151:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1152:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
1153:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1154:../../Source/Kernel/rme_kernel.c **** 
1155:../../Source/Kernel/rme_kernel.c ****     /* Get the system call parameters from the system call */
1156:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Param_Get(Reg, &Svc, &Cid, Param);
 1233              		.loc 1 1156 5
 1234 0010 34304BE2 		sub	r3, fp, #52
 1235 0014 28204BE2 		sub	r2, fp, #40
 1236 0018 24104BE2 		sub	r1, fp, #36
 1237 001c 38001BE5 		ldr	r0, [fp, #-56]
 1238 0020 FEFFFFEB 		bl	__RME_Svc_Param_Get
1157:../../Source/Kernel/rme_kernel.c ****     /* System call number takes [5:0] bits */
1158:../../Source/Kernel/rme_kernel.c ****     Svc_Num=Svc&RME_MASK_END(5U);
 1239              		.loc 1 1158 16
 1240 0024 24301BE5 		ldr	r3, [fp, #-36]
 1241              		.loc 1 1158 12
 1242 0028 3F3003E2 		and	r3, r3, #63
 1243 002c 18300BE5 		str	r3, [fp, #-24]
1159:../../Source/Kernel/rme_kernel.c ****     
1160:../../Source/Kernel/rme_kernel.c ****     /* Ultra-fast path - synchronous invocation returning */
1161:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_RET)
 1244              		.loc 1 1161 7
 1245 0030 18301BE5 		ldr	r3, [fp, #-24]
 1246 0034 000053E3 		cmp	r3, #0
 1247 0038 0C00001A 		bne	.L70
1162:../../Source/Kernel/rme_kernel.c ****     {
1163:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1164:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 43


1165:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Ret(Reg,                                            /* volatile struct RME_
 1248              		.loc 1 1165 16
 1249 003c 34301BE5 		ldr	r3, [fp, #-52]
 1250 0040 0020A0E3 		mov	r2, #0
 1251 0044 0310A0E1 		mov	r1, r3
 1252 0048 38001BE5 		ldr	r0, [fp, #-56]
 1253 004c FEFFFFEB 		bl	_RME_Inv_Ret
 1254 0050 10000BE5 		str	r0, [fp, #-16]
1166:../../Source/Kernel/rme_kernel.c ****                             Param[0],                                       /* rme_ptr_t Retval */
1167:../../Source/Kernel/rme_kernel.c ****                             0U);                                            /* rme_ptr_t Is_Exc */
1168:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg, Retval);
 1255              		.loc 1 1168 9
 1256 0054 10301BE5 		ldr	r3, [fp, #-16]
 1257 0058 000053E3 		cmp	r3, #0
 1258 005c 110200AA 		bge	.L69
 1259              		.loc 1 1168 9 is_stmt 0 discriminator 1
 1260 0060 10101BE5 		ldr	r1, [fp, #-16]
 1261 0064 38001BE5 		ldr	r0, [fp, #-56]
 1262 0068 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1263              		.loc 1 1168 9
 1264 006c 0D0200EA 		b	.L69
 1265              	.L70:
1169:../../Source/Kernel/rme_kernel.c ****     }
1170:../../Source/Kernel/rme_kernel.c ****     else
1171:../../Source/Kernel/rme_kernel.c ****     {
1172:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1173:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1174:../../Source/Kernel/rme_kernel.c ****     }
1175:../../Source/Kernel/rme_kernel.c ****     
1176:../../Source/Kernel/rme_kernel.c ****     /* Get our current capability table. No need to check whether it is frozen
1177:../../Source/Kernel/rme_kernel.c ****      * because it can't be deleted anyway */
1178:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 1266              		.loc 1 1178 12 is_stmt 1
 1267 0070 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 1268 0074 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 1269 0078 043093E5 		ldr	r3, [r3, #4]
 1270 007c 1C300BE5 		str	r3, [fp, #-28]
1179:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd_Cur);
 1271              		.loc 1 1179 13
 1272 0080 1C301BE5 		ldr	r3, [fp, #-28]
 1273 0084 4C2093E5 		ldr	r2, [r3, #76]
 1274 0088 1C301BE5 		ldr	r3, [fp, #-28]
 1275 008c 4C3083E2 		add	r3, r3, #76
 1276 0090 030052E1 		cmp	r2, r3
 1277 0094 0200000A 		beq	.L73
 1278              		.loc 1 1179 13 is_stmt 0 discriminator 1
 1279 0098 1C301BE5 		ldr	r3, [fp, #-28]
 1280 009c 4C3093E5 		ldr	r3, [r3, #76]
 1281 00a0 000000EA 		b	.L74
 1282              	.L73:
 1283              		.loc 1 1179 13 discriminator 2
 1284 00a4 0030A0E3 		mov	r3, #0
 1285              	.L74:
 1286              		.loc 1 1179 12 is_stmt 1 discriminator 4
 1287 00a8 20300BE5 		str	r3, [fp, #-32]
1180:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 1288              		.loc 1 1180 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 44


 1289 00ac 20301BE5 		ldr	r3, [fp, #-32]
 1290 00b0 000053E3 		cmp	r3, #0
 1291 00b4 0400001A 		bne	.L75
1181:../../Source/Kernel/rme_kernel.c ****     {
1182:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1183:../../Source/Kernel/rme_kernel.c ****         
1184:../../Source/Kernel/rme_kernel.c ****         Cpt=Thd_Cur->Sched.Prc->Cpt;
 1292              		.loc 1 1184 27
 1293 00b8 1C301BE5 		ldr	r3, [fp, #-28]
 1294 00bc 2C3093E5 		ldr	r3, [r3, #44]
 1295              		.loc 1 1184 12
 1296 00c0 143093E5 		ldr	r3, [r3, #20]
 1297 00c4 14300BE5 		str	r3, [fp, #-20]
 1298 00c8 030000EA 		b	.L76
 1299              	.L75:
1185:../../Source/Kernel/rme_kernel.c ****     }
1186:../../Source/Kernel/rme_kernel.c ****     else
1187:../../Source/Kernel/rme_kernel.c ****     {
1188:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1189:../../Source/Kernel/rme_kernel.c ****         
1190:../../Source/Kernel/rme_kernel.c ****         Cpt=Inv_Top->Prc->Cpt;
 1300              		.loc 1 1190 20
 1301 00cc 20301BE5 		ldr	r3, [fp, #-32]
 1302 00d0 083093E5 		ldr	r3, [r3, #8]
 1303              		.loc 1 1190 12
 1304 00d4 143093E5 		ldr	r3, [r3, #20]
 1305 00d8 14300BE5 		str	r3, [fp, #-20]
 1306              	.L76:
1191:../../Source/Kernel/rme_kernel.c ****     }
1192:../../Source/Kernel/rme_kernel.c **** 
1193:../../Source/Kernel/rme_kernel.c ****     /* Fast path - synchronous invocation activation */
1194:../../Source/Kernel/rme_kernel.c ****     if(Svc_Num==RME_SVC_INV_ACT)
 1307              		.loc 1 1194 7
 1308 00dc 18301BE5 		ldr	r3, [fp, #-24]
 1309 00e0 010053E3 		cmp	r3, #1
 1310 00e4 0D00001A 		bne	.L77
1195:../../Source/Kernel/rme_kernel.c ****     {
1196:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1197:../../Source/Kernel/rme_kernel.c ****         
1198:../../Source/Kernel/rme_kernel.c ****         Retval=_RME_Inv_Act(Cpt,
1199:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
1200:../../Source/Kernel/rme_kernel.c ****                             (rme_cid_t)Param[0],                            /* rme_cid_t Cap_Inv */
 1311              		.loc 1 1200 45
 1312 00e8 34301BE5 		ldr	r3, [fp, #-52]
1198:../../Source/Kernel/rme_kernel.c ****                             Reg,                                            /* volatile struct RME_
 1313              		.loc 1 1198 16
 1314 00ec 0320A0E1 		mov	r2, r3
 1315 00f0 30301BE5 		ldr	r3, [fp, #-48]
 1316 00f4 38101BE5 		ldr	r1, [fp, #-56]
 1317 00f8 14001BE5 		ldr	r0, [fp, #-20]
 1318 00fc FEFFFFEB 		bl	_RME_Inv_Act
 1319 0100 10000BE5 		str	r0, [fp, #-16]
1201:../../Source/Kernel/rme_kernel.c ****                             Param[1]);                                      /* rme_ptr_t Param */
1202:../../Source/Kernel/rme_kernel.c ****         RME_SWITCH_RETURN(Reg,Retval);
 1320              		.loc 1 1202 9
 1321 0104 10301BE5 		ldr	r3, [fp, #-16]
 1322 0108 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 45


 1323 010c E50100AA 		bge	.L69
 1324              		.loc 1 1202 9 is_stmt 0 discriminator 1
 1325 0110 10101BE5 		ldr	r1, [fp, #-16]
 1326 0114 38001BE5 		ldr	r0, [fp, #-56]
 1327 0118 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1328              		.loc 1 1202 9
 1329 011c E10100EA 		b	.L69
 1330              	.L77:
1203:../../Source/Kernel/rme_kernel.c ****     }
1204:../../Source/Kernel/rme_kernel.c ****     else
1205:../../Source/Kernel/rme_kernel.c ****     {
1206:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1207:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1208:../../Source/Kernel/rme_kernel.c ****     }
1209:../../Source/Kernel/rme_kernel.c **** 
1210:../../Source/Kernel/rme_kernel.c ****     /* See if this operation can potentially cause a context switch. All the 
1211:../../Source/Kernel/rme_kernel.c ****      * functions that may cause a context switch is listed here. The behavior
1212:../../Source/Kernel/rme_kernel.c ****      * of these functions shall be: If the function is successful, they shall
1213:../../Source/Kernel/rme_kernel.c ****      * perform the return value saving on proper register stacks by themselves;
1214:../../Source/Kernel/rme_kernel.c ****      * if the function fails, it should not conduct such return value saving.
1215:../../Source/Kernel/rme_kernel.c ****      * These paths are less optimized than synchronous invocation, but are still
1216:../../Source/Kernel/rme_kernel.c ****      * optimized anyway. */
1217:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1331              		.loc 1 1217 5 is_stmt 1
 1332 0120 18301BE5 		ldr	r3, [fp, #-24]
 1333 0124 022043E2 		sub	r2, r3, #2
 1334 0128 80379FE5 		ldr	r3, .L127
 1335 012c 070052E3 		cmp	r2, #7
 1336 0130 9400008A 		bhi	.L126
 1337 0134 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1338              	.Lrtx81:
 1339 0138 00F020E3 		nop
 1340              		.section	.rodata._RME_Svc_Handler,"a",%progbits
 1341              		.align	2
 1342              	.L81:
 1343 0000 3C010000 		.word	.L88
 1344 0004 70010000 		.word	.L87
 1345 0008 A8010000 		.word	.L86
 1346 000c 08020000 		.word	.L85
 1347 0010 3C020000 		.word	.L84
 1348 0014 8C020000 		.word	.L83
 1349 0018 08030000 		.word	.L82
 1350 001c 50030000 		.word	.L80
 1351              		.section	.text._RME_Svc_Handler
 1352              		.p2align 2
 1353              	.L88:
1218:../../Source/Kernel/rme_kernel.c ****     {
1219:../../Source/Kernel/rme_kernel.c ****         /* Send to a signal endpoint */
1220:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_SND:
1221:../../Source/Kernel/rme_kernel.c ****         {
1222:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1223:../../Source/Kernel/rme_kernel.c ****             
1224:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Snd(Cpt,
1225:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1226:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 1354              		.loc 1 1226 49
 1355 013c 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 46


1224:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1356              		.loc 1 1224 20
 1357 0140 0320A0E1 		mov	r2, r3
 1358 0144 38101BE5 		ldr	r1, [fp, #-56]
 1359 0148 14001BE5 		ldr	r0, [fp, #-20]
 1360 014c FEFFFFEB 		bl	_RME_Sig_Snd
 1361 0150 10000BE5 		str	r0, [fp, #-16]
1227:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1362              		.loc 1 1227 13
 1363 0154 10301BE5 		ldr	r3, [fp, #-16]
 1364 0158 000053E3 		cmp	r3, #0
 1365 015c D10100AA 		bge	.L69
 1366              		.loc 1 1227 13 is_stmt 0 discriminator 1
 1367 0160 10101BE5 		ldr	r1, [fp, #-16]
 1368 0164 38001BE5 		ldr	r0, [fp, #-56]
 1369 0168 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1370              		.loc 1 1227 13
 1371 016c CD0100EA 		b	.L69
 1372              	.L87:
1228:../../Source/Kernel/rme_kernel.c ****         }
1229:../../Source/Kernel/rme_kernel.c ****         /* Receive from a signal endpoint */
1230:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_RCV:
1231:../../Source/Kernel/rme_kernel.c ****         {
1232:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1233:../../Source/Kernel/rme_kernel.c ****             
1234:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Rcv(Cpt,
1235:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1236:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Sig */
 1373              		.loc 1 1236 49 is_stmt 1
 1374 0170 34301BE5 		ldr	r3, [fp, #-52]
1234:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1375              		.loc 1 1234 20
 1376 0174 0320A0E1 		mov	r2, r3
 1377 0178 30301BE5 		ldr	r3, [fp, #-48]
 1378 017c 38101BE5 		ldr	r1, [fp, #-56]
 1379 0180 14001BE5 		ldr	r0, [fp, #-20]
 1380 0184 FEFFFFEB 		bl	_RME_Sig_Rcv
 1381 0188 10000BE5 		str	r0, [fp, #-16]
1237:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Option */
1238:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1382              		.loc 1 1238 13
 1383 018c 10301BE5 		ldr	r3, [fp, #-16]
 1384 0190 000053E3 		cmp	r3, #0
 1385 0194 C30100AA 		bge	.L69
 1386              		.loc 1 1238 13 is_stmt 0 discriminator 1
 1387 0198 10101BE5 		ldr	r1, [fp, #-16]
 1388 019c 38001BE5 		ldr	r0, [fp, #-56]
 1389 01a0 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1390              		.loc 1 1238 13
 1391 01a4 BF0100EA 		b	.L69
 1392              	.L86:
1239:../../Source/Kernel/rme_kernel.c ****         }
1240:../../Source/Kernel/rme_kernel.c ****         /* Call kernel functions */
1241:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_KFN:
1242:../../Source/Kernel/rme_kernel.c ****         {
1243:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1244:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 47


1245:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Kfn_Act(Cpt,
 1393              		.loc 1 1245 20 is_stmt 1
 1394 01a8 28301BE5 		ldr	r3, [fp, #-40]
 1395 01ac 03C0A0E1 		mov	ip, r3
1246:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1247:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Kfn */
1248:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Func_ID */
 1396              		.loc 1 1248 33
 1397 01b0 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1398              		.loc 1 1245 20
 1399 01b4 7300FFE6 		uxth	r0, r3
1249:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]),                     /* rme_ptr_t Sub_ID */
 1400              		.loc 1 1249 33
 1401 01b8 34301BE5 		ldr	r3, [fp, #-52]
1245:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1402              		.loc 1 1245 20
 1403 01bc 2338A0E1 		lsr	r3, r3, #16
 1404 01c0 30201BE5 		ldr	r2, [fp, #-48]
 1405 01c4 2C101BE5 		ldr	r1, [fp, #-44]
 1406 01c8 08108DE5 		str	r1, [sp, #8]
 1407 01cc 04208DE5 		str	r2, [sp, #4]
 1408 01d0 00308DE5 		str	r3, [sp]
 1409 01d4 0030A0E1 		mov	r3, r0
 1410 01d8 0C20A0E1 		mov	r2, ip
 1411 01dc 38101BE5 		ldr	r1, [fp, #-56]
 1412 01e0 14001BE5 		ldr	r0, [fp, #-20]
 1413 01e4 FEFFFFEB 		bl	_RME_Kfn_Act
 1414 01e8 10000BE5 		str	r0, [fp, #-16]
1250:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Param1 */
1251:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Param2 */
1252:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg, Retval);
 1415              		.loc 1 1252 13
 1416 01ec 10301BE5 		ldr	r3, [fp, #-16]
 1417 01f0 000053E3 		cmp	r3, #0
 1418 01f4 AB0100AA 		bge	.L69
 1419              		.loc 1 1252 13 is_stmt 0 discriminator 1
 1420 01f8 10101BE5 		ldr	r1, [fp, #-16]
 1421 01fc 38001BE5 		ldr	r0, [fp, #-56]
 1422 0200 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1423              		.loc 1 1252 13
 1424 0204 A70100EA 		b	.L69
 1425              	.L85:
1253:../../Source/Kernel/rme_kernel.c ****         }
1254:../../Source/Kernel/rme_kernel.c ****         /* Free a thread from some core */
1255:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_FREE:
1256:../../Source/Kernel/rme_kernel.c ****         {
1257:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1258:../../Source/Kernel/rme_kernel.c ****             
1259:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Free(Cpt,
1260:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1261:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Param[0]);                /* rme_cid_t Cap_Thd */
 1426              		.loc 1 1261 56 is_stmt 1
 1427 0208 34301BE5 		ldr	r3, [fp, #-52]
1259:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1428              		.loc 1 1259 20
 1429 020c 0320A0E1 		mov	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 48


 1430 0210 38101BE5 		ldr	r1, [fp, #-56]
 1431 0214 14001BE5 		ldr	r0, [fp, #-20]
 1432 0218 FEFFFFEB 		bl	_RME_Thd_Sched_Free
 1433 021c 10000BE5 		str	r0, [fp, #-16]
1262:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1434              		.loc 1 1262 13
 1435 0220 10301BE5 		ldr	r3, [fp, #-16]
 1436 0224 000053E3 		cmp	r3, #0
 1437 0228 9E0100AA 		bge	.L69
 1438              		.loc 1 1262 13 is_stmt 0 discriminator 1
 1439 022c 10101BE5 		ldr	r1, [fp, #-16]
 1440 0230 38001BE5 		ldr	r0, [fp, #-56]
 1441 0234 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1442              		.loc 1 1262 13
 1443 0238 9A0100EA 		b	.L69
 1444              	.L84:
1263:../../Source/Kernel/rme_kernel.c ****         }
1264:../../Source/Kernel/rme_kernel.c ****         /* Changing thread execution context */
1265:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_EXEC_SET:
1266:../../Source/Kernel/rme_kernel.c ****         {
1267:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1268:../../Source/Kernel/rme_kernel.c ****             
1269:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Exec_Set(Cpt,
 1445              		.loc 1 1269 20 is_stmt 1
 1446 023c 28301BE5 		ldr	r3, [fp, #-40]
 1447 0240 0300A0E1 		mov	r0, r3
 1448 0244 34101BE5 		ldr	r1, [fp, #-52]
 1449 0248 30301BE5 		ldr	r3, [fp, #-48]
 1450 024c 2C201BE5 		ldr	r2, [fp, #-44]
 1451 0250 04208DE5 		str	r2, [sp, #4]
 1452 0254 00308DE5 		str	r3, [sp]
 1453 0258 0130A0E1 		mov	r3, r1
 1454 025c 0020A0E1 		mov	r2, r0
 1455 0260 38101BE5 		ldr	r1, [fp, #-56]
 1456 0264 14001BE5 		ldr	r0, [fp, #-20]
 1457 0268 FEFFFFEB 		bl	_RME_Thd_Exec_Set
 1458 026c 10000BE5 		str	r0, [fp, #-16]
1270:../../Source/Kernel/rme_kernel.c ****                                      Reg,                                   /* volatile struct RME_
1271:../../Source/Kernel/rme_kernel.c ****                                      (rme_cid_t)Cid,                        /* rme_cid_t Cap_Thd */
1272:../../Source/Kernel/rme_kernel.c ****                                      Param[0],                              /* rme_ptr_t Entry */
1273:../../Source/Kernel/rme_kernel.c ****                                      Param[1],                              /* rme_ptr_t Stack */
1274:../../Source/Kernel/rme_kernel.c ****                                      Param[2]);                             /* rme_ptr_t Param */
1275:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1459              		.loc 1 1275 13
 1460 0270 10301BE5 		ldr	r3, [fp, #-16]
 1461 0274 000053E3 		cmp	r3, #0
 1462 0278 8A0100AA 		bge	.L69
 1463              		.loc 1 1275 13 is_stmt 0 discriminator 1
 1464 027c 10101BE5 		ldr	r1, [fp, #-16]
 1465 0280 38001BE5 		ldr	r0, [fp, #-56]
 1466 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1467              		.loc 1 1275 13
 1468 0288 860100EA 		b	.L69
 1469              	.L83:
1276:../../Source/Kernel/rme_kernel.c ****         }
1277:../../Source/Kernel/rme_kernel.c ****         /* Changing thread priority (up to three threads at once) */
1278:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_PRIO:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 49


1279:../../Source/Kernel/rme_kernel.c ****         {
1280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1281:../../Source/Kernel/rme_kernel.c ****             
1282:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Prio(Cpt,
 1470              		.loc 1 1282 20 is_stmt 1
 1471 028c 28E01BE5 		ldr	lr, [fp, #-40]
1283:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
1284:../../Source/Kernel/rme_kernel.c ****                                        Cid,                                 /* rme_ptr_t Number */
1285:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Thd0 *
 1472              		.loc 1 1285 51
 1473 0290 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1474              		.loc 1 1282 20
 1475 0294 7340FFE6 		uxth	r4, r3
1286:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[0]),              /* rme_ptr_t Prio0 */
 1476              		.loc 1 1286 40
 1477 0298 34301BE5 		ldr	r3, [fp, #-52]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1478              		.loc 1 1282 20
 1479 029c 2338A0E1 		lsr	r3, r3, #16
1287:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[1]),   /* rme_cid_t Cap_Thd1 *
 1480              		.loc 1 1287 51
 1481 02a0 30201BE5 		ldr	r2, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1482              		.loc 1 1282 20
 1483 02a4 7220FFE6 		uxth	r2, r2
1288:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[1]),              /* rme_ptr_t Prio1 */
 1484              		.loc 1 1288 40
 1485 02a8 30101BE5 		ldr	r1, [fp, #-48]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1486              		.loc 1 1282 20
 1487 02ac 2118A0E1 		lsr	r1, r1, #16
1289:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[2]),   /* rme_cid_t Cap_Thd2 *
 1488              		.loc 1 1289 51
 1489 02b0 2C001BE5 		ldr	r0, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1490              		.loc 1 1282 20
 1491 02b4 7000FFE6 		uxth	r0, r0
1290:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D1(Param[2]));             /* rme_ptr_t Prio2 */
 1492              		.loc 1 1290 40
 1493 02b8 2CC01BE5 		ldr	ip, [fp, #-44]
1282:../../Source/Kernel/rme_kernel.c ****                                        Reg,                                 /* volatile struct RME_
 1494              		.loc 1 1282 20
 1495 02bc 2CC8A0E1 		lsr	ip, ip, #16
 1496 02c0 10C08DE5 		str	ip, [sp, #16]
 1497 02c4 0C008DE5 		str	r0, [sp, #12]
 1498 02c8 08108DE5 		str	r1, [sp, #8]
 1499 02cc 04208DE5 		str	r2, [sp, #4]
 1500 02d0 00308DE5 		str	r3, [sp]
 1501 02d4 0430A0E1 		mov	r3, r4
 1502 02d8 0E20A0E1 		mov	r2, lr
 1503 02dc 38101BE5 		ldr	r1, [fp, #-56]
 1504 02e0 14001BE5 		ldr	r0, [fp, #-20]
 1505 02e4 FEFFFFEB 		bl	_RME_Thd_Sched_Prio
 1506 02e8 10000BE5 		str	r0, [fp, #-16]
1291:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1507              		.loc 1 1291 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 50


 1508 02ec 10301BE5 		ldr	r3, [fp, #-16]
 1509 02f0 000053E3 		cmp	r3, #0
 1510 02f4 6B0100AA 		bge	.L69
 1511              		.loc 1 1291 13 is_stmt 0 discriminator 1
 1512 02f8 10101BE5 		ldr	r1, [fp, #-16]
 1513 02fc 38001BE5 		ldr	r0, [fp, #-56]
 1514 0300 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1515              		.loc 1 1291 13
 1516 0304 670100EA 		b	.L69
 1517              	.L82:
1292:../../Source/Kernel/rme_kernel.c ****         }
1293:../../Source/Kernel/rme_kernel.c ****         /* Transfer time to a thread */
1294:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_TIME_XFER:
1295:../../Source/Kernel/rme_kernel.c ****         {
1296:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1297:../../Source/Kernel/rme_kernel.c ****             
1298:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Time_Xfer(Cpt,
1299:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
1300:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0],                  /* rme_cid_t Cap_Thd_Ds
 1518              		.loc 1 1300 55 is_stmt 1
 1519 0308 34301BE5 		ldr	r3, [fp, #-52]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1520              		.loc 1 1298 20
 1521 030c 0320A0E1 		mov	r2, r3
1301:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[1],                  /* rme_cid_t Cap_Thd_Sr
 1522              		.loc 1 1301 55
 1523 0310 30301BE5 		ldr	r3, [fp, #-48]
1298:../../Source/Kernel/rme_kernel.c ****                                       Reg,                                  /* volatile struct RME_
 1524              		.loc 1 1298 20
 1525 0314 0310A0E1 		mov	r1, r3
 1526 0318 2C301BE5 		ldr	r3, [fp, #-44]
 1527 031c 00308DE5 		str	r3, [sp]
 1528 0320 0130A0E1 		mov	r3, r1
 1529 0324 38101BE5 		ldr	r1, [fp, #-56]
 1530 0328 14001BE5 		ldr	r0, [fp, #-20]
 1531 032c FEFFFFEB 		bl	_RME_Thd_Time_Xfer
 1532 0330 10000BE5 		str	r0, [fp, #-16]
1302:../../Source/Kernel/rme_kernel.c ****                                       Param[2]);                            /* rme_ptr_t Time */
1303:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1533              		.loc 1 1303 13
 1534 0334 10301BE5 		ldr	r3, [fp, #-16]
 1535 0338 000053E3 		cmp	r3, #0
 1536 033c 590100AA 		bge	.L69
 1537              		.loc 1 1303 13 is_stmt 0 discriminator 1
 1538 0340 10101BE5 		ldr	r1, [fp, #-16]
 1539 0344 38001BE5 		ldr	r0, [fp, #-56]
 1540 0348 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1541              		.loc 1 1303 13
 1542 034c 550100EA 		b	.L69
 1543              	.L80:
1304:../../Source/Kernel/rme_kernel.c ****         }
1305:../../Source/Kernel/rme_kernel.c ****         /* Switch to another thread */
1306:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SWT:
1307:../../Source/Kernel/rme_kernel.c ****         {
1308:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1309:../../Source/Kernel/rme_kernel.c ****             
1310:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Swt(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 51


1311:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
1312:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Thd */
 1544              		.loc 1 1312 49 is_stmt 1
 1545 0350 34301BE5 		ldr	r3, [fp, #-52]
1310:../../Source/Kernel/rme_kernel.c ****                                 Reg,                                        /* volatile struct RME_
 1546              		.loc 1 1310 20
 1547 0354 0320A0E1 		mov	r2, r3
 1548 0358 30301BE5 		ldr	r3, [fp, #-48]
 1549 035c 38101BE5 		ldr	r1, [fp, #-56]
 1550 0360 14001BE5 		ldr	r0, [fp, #-20]
 1551 0364 FEFFFFEB 		bl	_RME_Thd_Swt
 1552 0368 10000BE5 		str	r0, [fp, #-16]
1313:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Full_Yield
1314:../../Source/Kernel/rme_kernel.c ****             RME_SWITCH_RETURN(Reg,Retval);
 1553              		.loc 1 1314 13
 1554 036c 10301BE5 		ldr	r3, [fp, #-16]
 1555 0370 000053E3 		cmp	r3, #0
 1556 0374 4B0100AA 		bge	.L69
 1557              		.loc 1 1314 13 is_stmt 0 discriminator 1
 1558 0378 10101BE5 		ldr	r1, [fp, #-16]
 1559 037c 38001BE5 		ldr	r0, [fp, #-56]
 1560 0380 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 1561              		.loc 1 1314 13
 1562 0384 470100EA 		b	.L69
 1563              	.L126:
1315:../../Source/Kernel/rme_kernel.c ****         }
1316:../../Source/Kernel/rme_kernel.c ****         default:
1317:../../Source/Kernel/rme_kernel.c ****         {
1318:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1319:../../Source/Kernel/rme_kernel.c ****             break;
 1564              		.loc 1 1319 13 is_stmt 1
 1565 0388 00F020E3 		nop
1320:../../Source/Kernel/rme_kernel.c ****         }
1321:../../Source/Kernel/rme_kernel.c ****     } 
1322:../../Source/Kernel/rme_kernel.c **** 
1323:../../Source/Kernel/rme_kernel.c ****     /* It is guaranteed that these functions will never cause a context switch */
1324:../../Source/Kernel/rme_kernel.c ****     switch(Svc_Num)
 1566              		.loc 1 1324 5
 1567 038c 18301BE5 		ldr	r3, [fp, #-24]
 1568 0390 0A2043E2 		sub	r2, r3, #10
 1569 0394 18359FE5 		ldr	r3, .L127+4
 1570 0398 170052E3 		cmp	r2, #23
 1571 039c 3B01008A 		bhi	.L97
 1572 03a0 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 1573              	.Lrtx99:
 1574 03a4 00F020E3 		nop
 1575              		.section	.rodata._RME_Svc_Handler
 1576              		.align	2
 1577              	.L99:
 1578 0020 A8030000 		.word	.L122
 1579 0024 F0030000 		.word	.L121
 1580 0028 10040000 		.word	.L120
 1581 002c 30040000 		.word	.L119
 1582 0030 94040000 		.word	.L118
 1583 0034 B4040000 		.word	.L117
 1584 0038 28050000 		.word	.L116
 1585 003c 48050000 		.word	.L115
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 52


 1586 0040 A0050000 		.word	.L114
 1587 0044 C0050000 		.word	.L113
 1588 0048 F8050000 		.word	.L112
 1589 004c 18060000 		.word	.L111
 1590 0050 4C060000 		.word	.L110
 1591 0054 6C060000 		.word	.L109
 1592 0058 8C060000 		.word	.L108
 1593 005c AC060000 		.word	.L107
 1594 0060 20070000 		.word	.L106
 1595 0064 40070000 		.word	.L105
 1596 0068 9C070000 		.word	.L104
 1597 006c B4070000 		.word	.L103
 1598 0070 D4070000 		.word	.L102
 1599 0074 F4070000 		.word	.L101
 1600 0078 40080000 		.word	.L100
 1601 007c 60080000 		.word	.L98
 1602              		.section	.text._RME_Svc_Handler
 1603              		.p2align 2
 1604              	.L122:
1325:../../Source/Kernel/rme_kernel.c ****     {
1326:../../Source/Kernel/rme_kernel.c ****         /* Capability table */
1327:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_CRT:
1328:../../Source/Kernel/rme_kernel.c ****         {
1329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1330:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Crt(Cpt,
 1605              		.loc 1 1330 20
 1606 03a8 28301BE5 		ldr	r3, [fp, #-40]
 1607 03ac 0300A0E1 		mov	r0, r3
1331:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1332:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1608              		.loc 1 1332 44
 1609 03b0 34301BE5 		ldr	r3, [fp, #-52]
 1610 03b4 2338A0E1 		lsr	r3, r3, #16
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1611              		.loc 1 1330 20
 1612 03b8 03C0A0E1 		mov	ip, r3
1333:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Crt */
 1613              		.loc 1 1333 44
 1614 03bc 34301BE5 		ldr	r3, [fp, #-52]
1330:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1615              		.loc 1 1330 20
 1616 03c0 7310FFE6 		uxth	r1, r3
 1617 03c4 30301BE5 		ldr	r3, [fp, #-48]
 1618 03c8 2C201BE5 		ldr	r2, [fp, #-44]
 1619 03cc 04208DE5 		str	r2, [sp, #4]
 1620 03d0 00308DE5 		str	r3, [sp]
 1621 03d4 0130A0E1 		mov	r3, r1
 1622 03d8 0C20A0E1 		mov	r2, ip
 1623 03dc 0010A0E1 		mov	r1, r0
 1624 03e0 14001BE5 		ldr	r0, [fp, #-20]
 1625 03e4 FEFFFFEB 		bl	_RME_Cpt_Crt
 1626 03e8 10000BE5 		str	r0, [fp, #-16]
1334:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1335:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Entry_Num 
1336:../../Source/Kernel/rme_kernel.c ****             break;
 1627              		.loc 1 1336 13
 1628 03ec 2A0100EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 53


 1629              	.L121:
1337:../../Source/Kernel/rme_kernel.c ****         }
1338:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_DEL:
1339:../../Source/Kernel/rme_kernel.c ****         {
1340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1341:../../Source/Kernel/rme_kernel.c ****             
1342:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Del(Cpt,
 1630              		.loc 1 1342 20
 1631 03f0 28301BE5 		ldr	r3, [fp, #-40]
 1632 03f4 0310A0E1 		mov	r1, r3
1343:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
1344:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Cpt */
 1633              		.loc 1 1344 49
 1634 03f8 34301BE5 		ldr	r3, [fp, #-52]
1342:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_De
 1635              		.loc 1 1342 20
 1636 03fc 0320A0E1 		mov	r2, r3
 1637 0400 14001BE5 		ldr	r0, [fp, #-20]
 1638 0404 FEFFFFEB 		bl	_RME_Cpt_Del
 1639 0408 10000BE5 		str	r0, [fp, #-16]
1345:../../Source/Kernel/rme_kernel.c ****             break;
 1640              		.loc 1 1345 13
 1641 040c 220100EA 		b	.L123
 1642              	.L120:
1346:../../Source/Kernel/rme_kernel.c ****         }
1347:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_FRZ:
1348:../../Source/Kernel/rme_kernel.c ****         {
1349:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1350:../../Source/Kernel/rme_kernel.c ****             
1351:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Frz(Cpt,
 1643              		.loc 1 1351 20
 1644 0410 28301BE5 		ldr	r3, [fp, #-40]
 1645 0414 0310A0E1 		mov	r1, r3
1352:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
1353:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Frz */
 1646              		.loc 1 1353 49
 1647 0418 34301BE5 		ldr	r3, [fp, #-52]
1351:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Fr
 1648              		.loc 1 1351 20
 1649 041c 0320A0E1 		mov	r2, r3
 1650 0420 14001BE5 		ldr	r0, [fp, #-20]
 1651 0424 FEFFFFEB 		bl	_RME_Cpt_Frz
 1652 0428 10000BE5 		str	r0, [fp, #-16]
1354:../../Source/Kernel/rme_kernel.c ****             break;
 1653              		.loc 1 1354 13
 1654 042c 1A0100EA 		b	.L123
 1655              	.L119:
1355:../../Source/Kernel/rme_kernel.c ****         }
1356:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_ADD:
1357:../../Source/Kernel/rme_kernel.c ****         {
1358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1359:../../Source/Kernel/rme_kernel.c ****             
1360:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Add(Cpt,
1361:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1656              		.loc 1 1361 44
 1657 0430 34301BE5 		ldr	r3, [fp, #-52]
 1658 0434 2338A0E1 		lsr	r3, r3, #16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 54


1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1659              		.loc 1 1360 20
 1660 0438 03E0A0E1 		mov	lr, r3
1362:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Dst */
 1661              		.loc 1 1362 44
 1662 043c 34301BE5 		ldr	r3, [fp, #-52]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1663              		.loc 1 1360 20
 1664 0440 73C0FFE6 		uxth	ip, r3
1363:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Cpt_Sr
 1665              		.loc 1 1363 44
 1666 0444 30301BE5 		ldr	r3, [fp, #-48]
 1667 0448 2338A0E1 		lsr	r3, r3, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1668              		.loc 1 1360 20
 1669 044c 0340A0E1 		mov	r4, r3
1364:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[1]),          /* rme_cid_t Cap_Src */
 1670              		.loc 1 1364 44
 1671 0450 30301BE5 		ldr	r3, [fp, #-48]
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1672              		.loc 1 1360 20
 1673 0454 7330FFE6 		uxth	r3, r3
 1674 0458 2C201BE5 		ldr	r2, [fp, #-44]
1365:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Flag */
1366:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_KM(Svc,Cid));                     /* rme_ptr_t Ext_Flag *
 1675              		.loc 1 1366 33
 1676 045c 24101BE5 		ldr	r1, [fp, #-36]
 1677 0460 0108A0E1 		lsl	r0, r1, #16
1360:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Cpt_Ds
 1678              		.loc 1 1360 20
 1679 0464 28101BE5 		ldr	r1, [fp, #-40]
 1680 0468 011080E1 		orr	r1, r0, r1
 1681 046c 08108DE5 		str	r1, [sp, #8]
 1682 0470 04208DE5 		str	r2, [sp, #4]
 1683 0474 00308DE5 		str	r3, [sp]
 1684 0478 0430A0E1 		mov	r3, r4
 1685 047c 0C20A0E1 		mov	r2, ip
 1686 0480 0E10A0E1 		mov	r1, lr
 1687 0484 14001BE5 		ldr	r0, [fp, #-20]
 1688 0488 FEFFFFEB 		bl	_RME_Cpt_Add
 1689 048c 10000BE5 		str	r0, [fp, #-16]
1367:../../Source/Kernel/rme_kernel.c ****             break;
 1690              		.loc 1 1367 13
 1691 0490 010100EA 		b	.L123
 1692              	.L118:
1368:../../Source/Kernel/rme_kernel.c ****         }
1369:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_CPT_REM:
1370:../../Source/Kernel/rme_kernel.c ****         {
1371:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1372:../../Source/Kernel/rme_kernel.c ****             
1373:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Cpt_Rem(Cpt,
 1693              		.loc 1 1373 20
 1694 0494 28301BE5 		ldr	r3, [fp, #-40]
 1695 0498 0310A0E1 		mov	r1, r3
1374:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
1375:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Rem */
 1696              		.loc 1 1375 49
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 55


 1697 049c 34301BE5 		ldr	r3, [fp, #-52]
1373:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Re
 1698              		.loc 1 1373 20
 1699 04a0 0320A0E1 		mov	r2, r3
 1700 04a4 14001BE5 		ldr	r0, [fp, #-20]
 1701 04a8 FEFFFFEB 		bl	_RME_Cpt_Rem
 1702 04ac 10000BE5 		str	r0, [fp, #-16]
1376:../../Source/Kernel/rme_kernel.c ****             break;
 1703              		.loc 1 1376 13
 1704 04b0 F90000EA 		b	.L123
 1705              	.L117:
1377:../../Source/Kernel/rme_kernel.c ****         }
1378:../../Source/Kernel/rme_kernel.c ****         
1379:../../Source/Kernel/rme_kernel.c ****         /* Page table */
1380:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1381:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CRT:
1382:../../Source/Kernel/rme_kernel.c ****         {
1383:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1384:../../Source/Kernel/rme_kernel.c ****             
1385:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Crt(Cpt,
 1706              		.loc 1 1385 20
 1707 04b4 28301BE5 		ldr	r3, [fp, #-40]
 1708 04b8 0340A0E1 		mov	r4, r3
1386:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1387:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1709              		.loc 1 1387 44
 1710 04bc 34301BE5 		ldr	r3, [fp, #-52]
 1711 04c0 2338A0E1 		lsr	r3, r3, #16
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1712              		.loc 1 1385 20
 1713 04c4 0350A0E1 		mov	r5, r3
1388:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_Q1(Param[0]),          /* rme_cid_t Cap_Pgt */
 1714              		.loc 1 1388 44
 1715 04c8 34301BE5 		ldr	r3, [fp, #-52]
 1716 04cc 2334A0E1 		lsr	r3, r3, #8
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1717              		.loc 1 1385 20
 1718 04d0 73E0EFE6 		uxtb	lr, r3
 1719 04d4 30301BE5 		ldr	r3, [fp, #-48]
1389:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Raddr */
1390:../../Source/Kernel/rme_kernel.c ****                                 Param[2]&RME_MASK_BEGIN(1U),                /* rme_ptr_t Base */
 1720              		.loc 1 1390 38
 1721 04d8 2C201BE5 		ldr	r2, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1722              		.loc 1 1385 20
 1723 04dc 0120C2E3 		bic	r2, r2, #1
1391:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PT(Param[2]),                     /* rme_ptr_t Is_Top */
 1724              		.loc 1 1391 33
 1725 04e0 2C101BE5 		ldr	r1, [fp, #-44]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1726              		.loc 1 1385 20
 1727 04e4 011001E2 		and	r1, r1, #1
1392:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_Q0(Param[0]),                     /* rme_ptr_t Size_Order
 1728              		.loc 1 1392 33
 1729 04e8 34001BE5 		ldr	r0, [fp, #-52]
1385:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1730              		.loc 1 1385 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 56


 1731 04ec 7000EFE6 		uxtb	r0, r0
 1732 04f0 24C01BE5 		ldr	ip, [fp, #-36]
 1733 04f4 2CC4A0E1 		lsr	ip, ip, #8
 1734 04f8 10C08DE5 		str	ip, [sp, #16]
 1735 04fc 0C008DE5 		str	r0, [sp, #12]
 1736 0500 08108DE5 		str	r1, [sp, #8]
 1737 0504 04208DE5 		str	r2, [sp, #4]
 1738 0508 00308DE5 		str	r3, [sp]
 1739 050c 0E30A0E1 		mov	r3, lr
 1740 0510 0520A0E1 		mov	r2, r5
 1741 0514 0410A0E1 		mov	r1, r4
 1742 0518 14001BE5 		ldr	r0, [fp, #-20]
 1743 051c FEFFFFEB 		bl	_RME_Pgt_Crt
 1744 0520 10000BE5 		str	r0, [fp, #-16]
1393:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_PC(Svc));                         /* rme_ptr_t Num_Order 
1394:../../Source/Kernel/rme_kernel.c ****             break;
 1745              		.loc 1 1394 13
 1746 0524 DC0000EA 		b	.L123
 1747              	.L116:
1395:../../Source/Kernel/rme_kernel.c ****         }
1396:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DEL:
1397:../../Source/Kernel/rme_kernel.c ****         {
1398:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1399:../../Source/Kernel/rme_kernel.c ****             
1400:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Del(Cpt,
 1748              		.loc 1 1400 20
 1749 0528 28301BE5 		ldr	r3, [fp, #-40]
 1750 052c 0310A0E1 		mov	r1, r3
1401:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1402:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Pgt */
 1751              		.loc 1 1402 49
 1752 0530 34301BE5 		ldr	r3, [fp, #-52]
1400:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1753              		.loc 1 1400 20
 1754 0534 0320A0E1 		mov	r2, r3
 1755 0538 14001BE5 		ldr	r0, [fp, #-20]
 1756 053c FEFFFFEB 		bl	_RME_Pgt_Del
 1757 0540 10000BE5 		str	r0, [fp, #-16]
1403:../../Source/Kernel/rme_kernel.c ****             break;
 1758              		.loc 1 1403 13
 1759 0544 D40000EA 		b	.L123
 1760              	.L115:
1404:../../Source/Kernel/rme_kernel.c ****         }
1405:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_ADD:
1406:../../Source/Kernel/rme_kernel.c ****         {
1407:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1408:../../Source/Kernel/rme_kernel.c ****             
1409:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Add(Cpt,
1410:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1761              		.loc 1 1410 44
 1762 0548 34301BE5 		ldr	r3, [fp, #-52]
 1763 054c 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1764              		.loc 1 1409 20
 1765 0550 03E0A0E1 		mov	lr, r3
1411:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[0]),                     /* rme_ptr_t Pos_Dst */
 1766              		.loc 1 1411 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 57


 1767 0554 34301BE5 		ldr	r3, [fp, #-52]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1768              		.loc 1 1409 20
 1769 0558 7310FFE6 		uxth	r1, r3
 1770 055c 28001BE5 		ldr	r0, [fp, #-40]
1412:../../Source/Kernel/rme_kernel.c ****                                 Cid,                                        /* rme_ptr_t Flag_Dst *
1413:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Pgt_Sr
 1771              		.loc 1 1413 44
 1772 0560 30301BE5 		ldr	r3, [fp, #-48]
 1773 0564 2338A0E1 		lsr	r3, r3, #16
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1774              		.loc 1 1409 20
 1775 0568 03C0A0E1 		mov	ip, r3
1414:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Pos_Src */
 1776              		.loc 1 1414 33
 1777 056c 30301BE5 		ldr	r3, [fp, #-48]
1409:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Ds
 1778              		.loc 1 1409 20
 1779 0570 7330FFE6 		uxth	r3, r3
 1780 0574 2C201BE5 		ldr	r2, [fp, #-44]
 1781 0578 08208DE5 		str	r2, [sp, #8]
 1782 057c 04308DE5 		str	r3, [sp, #4]
 1783 0580 00C08DE5 		str	ip, [sp]
 1784 0584 0030A0E1 		mov	r3, r0
 1785 0588 0120A0E1 		mov	r2, r1
 1786 058c 0E10A0E1 		mov	r1, lr
 1787 0590 14001BE5 		ldr	r0, [fp, #-20]
 1788 0594 FEFFFFEB 		bl	_RME_Pgt_Add
 1789 0598 10000BE5 		str	r0, [fp, #-16]
1415:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Index */
1416:../../Source/Kernel/rme_kernel.c ****             break;
 1790              		.loc 1 1416 13
 1791 059c BE0000EA 		b	.L123
 1792              	.L114:
1417:../../Source/Kernel/rme_kernel.c ****         }
1418:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_REM:
1419:../../Source/Kernel/rme_kernel.c ****         {
1420:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1421:../../Source/Kernel/rme_kernel.c ****             
1422:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Rem(Cpt,
1423:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1793              		.loc 1 1423 49
 1794 05a0 34301BE5 		ldr	r3, [fp, #-52]
1422:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt */
 1795              		.loc 1 1422 20
 1796 05a4 0310A0E1 		mov	r1, r3
 1797 05a8 30301BE5 		ldr	r3, [fp, #-48]
 1798 05ac 0320A0E1 		mov	r2, r3
 1799 05b0 14001BE5 		ldr	r0, [fp, #-20]
 1800 05b4 FEFFFFEB 		bl	_RME_Pgt_Rem
 1801 05b8 10000BE5 		str	r0, [fp, #-16]
1424:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Pos */
1425:../../Source/Kernel/rme_kernel.c ****             break;
 1802              		.loc 1 1425 13
 1803 05bc B60000EA 		b	.L123
 1804              	.L113:
1426:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 58


1427:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_CON:
1428:../../Source/Kernel/rme_kernel.c ****         {
1429:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1430:../../Source/Kernel/rme_kernel.c ****             
1431:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Con(Cpt,
1432:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1805              		.loc 1 1432 44
 1806 05c0 34301BE5 		ldr	r3, [fp, #-52]
 1807 05c4 2338A0E1 		lsr	r3, r3, #16
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1808              		.loc 1 1431 20
 1809 05c8 0300A0E1 		mov	r0, r3
 1810 05cc 30201BE5 		ldr	r2, [fp, #-48]
1433:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1434:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Pgt_Ch
 1811              		.loc 1 1434 44
 1812 05d0 34301BE5 		ldr	r3, [fp, #-52]
1431:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Pgt_Pa
 1813              		.loc 1 1431 20
 1814 05d4 7310FFE6 		uxth	r1, r3
 1815 05d8 2C301BE5 		ldr	r3, [fp, #-44]
 1816 05dc 00308DE5 		str	r3, [sp]
 1817 05e0 0130A0E1 		mov	r3, r1
 1818 05e4 0010A0E1 		mov	r1, r0
 1819 05e8 14001BE5 		ldr	r0, [fp, #-20]
 1820 05ec FEFFFFEB 		bl	_RME_Pgt_Con
 1821 05f0 10000BE5 		str	r0, [fp, #-16]
1435:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Flag_Child
1436:../../Source/Kernel/rme_kernel.c ****             break;
 1822              		.loc 1 1436 13
 1823 05f4 A80000EA 		b	.L123
 1824              	.L112:
1437:../../Source/Kernel/rme_kernel.c ****         }
1438:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PGT_DES:
1439:../../Source/Kernel/rme_kernel.c ****         {
1440:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1441:../../Source/Kernel/rme_kernel.c ****             
1442:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Pgt_Des(Cpt,
1443:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1825              		.loc 1 1443 49
 1826 05f8 34301BE5 		ldr	r3, [fp, #-52]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1827              		.loc 1 1442 20
 1828 05fc 0310A0E1 		mov	r1, r3
 1829 0600 30201BE5 		ldr	r2, [fp, #-48]
1444:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Pos */
1445:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt_Ch
 1830              		.loc 1 1445 49
 1831 0604 2C301BE5 		ldr	r3, [fp, #-44]
1442:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Pgt_Pa
 1832              		.loc 1 1442 20
 1833 0608 14001BE5 		ldr	r0, [fp, #-20]
 1834 060c FEFFFFEB 		bl	_RME_Pgt_Des
 1835 0610 10000BE5 		str	r0, [fp, #-16]
1446:../../Source/Kernel/rme_kernel.c ****             break;
 1836              		.loc 1 1446 13
 1837 0614 A00000EA 		b	.L123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 59


 1838              	.L111:
1447:../../Source/Kernel/rme_kernel.c ****         }
1448:../../Source/Kernel/rme_kernel.c **** #endif
1449:../../Source/Kernel/rme_kernel.c ****         /* Process */
1450:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CRT:
1451:../../Source/Kernel/rme_kernel.c ****         {
1452:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1453:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
 1839              		.loc 1 1453 20
 1840 0618 28301BE5 		ldr	r3, [fp, #-40]
 1841 061c 0310A0E1 		mov	r1, r3
1454:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1455:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1842              		.loc 1 1455 49
 1843 0620 34301BE5 		ldr	r3, [fp, #-52]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1844              		.loc 1 1453 20
 1845 0624 0320A0E1 		mov	r2, r3
1456:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
 1846              		.loc 1 1456 49
 1847 0628 30301BE5 		ldr	r3, [fp, #-48]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1848              		.loc 1 1453 20
 1849 062c 0300A0E1 		mov	r0, r3
1457:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[2]);                       /* rme_cid_t Cap_Pgt */
 1850              		.loc 1 1457 49
 1851 0630 2C301BE5 		ldr	r3, [fp, #-44]
1453:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
 1852              		.loc 1 1453 20
 1853 0634 00308DE5 		str	r3, [sp]
 1854 0638 0030A0E1 		mov	r3, r0
 1855 063c 14001BE5 		ldr	r0, [fp, #-20]
 1856 0640 FEFFFFEB 		bl	_RME_Prc_Crt
 1857 0644 10000BE5 		str	r0, [fp, #-16]
1458:../../Source/Kernel/rme_kernel.c **** #else
1459:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Crt(Cpt,
1460:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt_Cr
1461:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1462:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Cpt */
1463:../../Source/Kernel/rme_kernel.c ****                                 (rme_ptr_t)Param[2]);                       /* rme_ptr_t Raw_Pgt */
1464:../../Source/Kernel/rme_kernel.c **** #endif
1465:../../Source/Kernel/rme_kernel.c ****             break;
 1858              		.loc 1 1465 13
 1859 0648 930000EA 		b	.L123
 1860              	.L110:
1466:../../Source/Kernel/rme_kernel.c ****         }
1467:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_DEL:
1468:../../Source/Kernel/rme_kernel.c ****         {
1469:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1470:../../Source/Kernel/rme_kernel.c ****             
1471:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Del(Cpt,
 1861              		.loc 1 1471 20
 1862 064c 28301BE5 		ldr	r3, [fp, #-40]
 1863 0650 0310A0E1 		mov	r1, r3
1472:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1473:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Prc */
 1864              		.loc 1 1473 49
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 60


 1865 0654 34301BE5 		ldr	r3, [fp, #-52]
1471:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1866              		.loc 1 1471 20
 1867 0658 0320A0E1 		mov	r2, r3
 1868 065c 14001BE5 		ldr	r0, [fp, #-20]
 1869 0660 FEFFFFEB 		bl	_RME_Prc_Del
 1870 0664 10000BE5 		str	r0, [fp, #-16]
1474:../../Source/Kernel/rme_kernel.c ****             break;
 1871              		.loc 1 1474 13
 1872 0668 8B0000EA 		b	.L123
 1873              	.L109:
1475:../../Source/Kernel/rme_kernel.c ****         }
1476:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_CPT:
1477:../../Source/Kernel/rme_kernel.c ****         {
1478:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1479:../../Source/Kernel/rme_kernel.c ****             
1480:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Cpt(Cpt,
1481:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1874              		.loc 1 1481 49
 1875 066c 34301BE5 		ldr	r3, [fp, #-52]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1876              		.loc 1 1480 20
 1877 0670 0310A0E1 		mov	r1, r3
1482:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Cpt */
 1878              		.loc 1 1482 49
 1879 0674 30301BE5 		ldr	r3, [fp, #-48]
1480:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1880              		.loc 1 1480 20
 1881 0678 0320A0E1 		mov	r2, r3
 1882 067c 14001BE5 		ldr	r0, [fp, #-20]
 1883 0680 FEFFFFEB 		bl	_RME_Prc_Cpt
 1884 0684 10000BE5 		str	r0, [fp, #-16]
1483:../../Source/Kernel/rme_kernel.c ****             break;
 1885              		.loc 1 1483 13
 1886 0688 830000EA 		b	.L123
 1887              	.L108:
1484:../../Source/Kernel/rme_kernel.c ****         }
1485:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_PRC_PGT:
1486:../../Source/Kernel/rme_kernel.c ****         {
1487:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1488:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
1489:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1490:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1888              		.loc 1 1490 49
 1889 068c 34301BE5 		ldr	r3, [fp, #-52]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1890              		.loc 1 1489 20
 1891 0690 0310A0E1 		mov	r1, r3
1491:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1]);                       /* rme_cid_t Cap_Pgt */
 1892              		.loc 1 1491 49
 1893 0694 30301BE5 		ldr	r3, [fp, #-48]
1489:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
 1894              		.loc 1 1489 20
 1895 0698 0320A0E1 		mov	r2, r3
 1896 069c 14001BE5 		ldr	r0, [fp, #-20]
 1897 06a0 FEFFFFEB 		bl	_RME_Prc_Pgt
 1898 06a4 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 61


1492:../../Source/Kernel/rme_kernel.c **** #else
1493:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Prc_Pgt(Cpt,
1494:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0],                        /* rme_cid_t Cap_Prc */
1495:../../Source/Kernel/rme_kernel.c ****                                 Param[1]);                                  /* rme_ptr_t Raw_Pgt */
1496:../../Source/Kernel/rme_kernel.c **** #endif
1497:../../Source/Kernel/rme_kernel.c ****             break;
 1899              		.loc 1 1497 13
 1900 06a8 7B0000EA 		b	.L123
 1901              	.L107:
1498:../../Source/Kernel/rme_kernel.c ****         }
1499:../../Source/Kernel/rme_kernel.c ****         
1500:../../Source/Kernel/rme_kernel.c ****         /* Thread */
1501:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_CRT:
1502:../../Source/Kernel/rme_kernel.c ****         {
1503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1504:../../Source/Kernel/rme_kernel.c **** 
1505:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Crt(Cpt,
 1902              		.loc 1 1505 20
 1903 06ac 28301BE5 		ldr	r3, [fp, #-40]
 1904 06b0 0340A0E1 		mov	r4, r3
1506:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1507:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 1905              		.loc 1 1507 44
 1906 06b4 34301BE5 		ldr	r3, [fp, #-52]
 1907 06b8 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1908              		.loc 1 1505 20
 1909 06bc 0350A0E1 		mov	r5, r3
1508:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Thd */
 1910              		.loc 1 1508 44
 1911 06c0 34301BE5 		ldr	r3, [fp, #-52]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1912              		.loc 1 1505 20
 1913 06c4 73C0FFE6 		uxth	ip, r3
1509:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[1]),          /* rme_cid_t Cap_Prc */
 1914              		.loc 1 1509 44
 1915 06c8 30301BE5 		ldr	r3, [fp, #-48]
 1916 06cc 2338A0E1 		lsr	r3, r3, #16
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1917              		.loc 1 1505 20
 1918 06d0 03E0A0E1 		mov	lr, r3
1510:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D0(Param[1]),                     /* rme_ptr_t Prio_Max *
 1919              		.loc 1 1510 33
 1920 06d4 30301BE5 		ldr	r3, [fp, #-48]
1505:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1921              		.loc 1 1505 20
 1922 06d8 7330FFE6 		uxth	r3, r3
 1923 06dc 2C201BE5 		ldr	r2, [fp, #-44]
 1924 06e0 24101BE5 		ldr	r1, [fp, #-36]
 1925 06e4 A113A0E1 		lsr	r1, r1, #7
 1926 06e8 24001BE5 		ldr	r0, [fp, #-36]
 1927 06ec 400000E2 		and	r0, r0, #64
 1928 06f0 10008DE5 		str	r0, [sp, #16]
 1929 06f4 0C108DE5 		str	r1, [sp, #12]
 1930 06f8 08208DE5 		str	r2, [sp, #8]
 1931 06fc 04308DE5 		str	r3, [sp, #4]
 1932 0700 00E08DE5 		str	lr, [sp]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 62


 1933 0704 0C30A0E1 		mov	r3, ip
 1934 0708 0520A0E1 		mov	r2, r5
 1935 070c 0410A0E1 		mov	r1, r4
 1936 0710 14001BE5 		ldr	r0, [fp, #-20]
 1937 0714 FEFFFFEB 		bl	_RME_Thd_Crt
 1938 0718 10000BE5 		str	r0, [fp, #-16]
1511:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Raddr */
1512:../../Source/Kernel/rme_kernel.c ****                                 Svc>>7,                                     /* rme_ptr_t Attr */
1513:../../Source/Kernel/rme_kernel.c ****                                 Svc&0x40U);                                 /* rme_ptr_t Is_Hyp */
1514:../../Source/Kernel/rme_kernel.c ****             break;
 1939              		.loc 1 1514 13
 1940 071c 5E0000EA 		b	.L123
 1941              	.L106:
1515:../../Source/Kernel/rme_kernel.c ****         }
1516:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_DEL:
1517:../../Source/Kernel/rme_kernel.c ****         {
1518:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1519:../../Source/Kernel/rme_kernel.c ****             
1520:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Del(Cpt,
 1942              		.loc 1 1520 20
 1943 0720 28301BE5 		ldr	r3, [fp, #-40]
 1944 0724 0310A0E1 		mov	r1, r3
1521:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1522:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Thd */
 1945              		.loc 1 1522 49
 1946 0728 34301BE5 		ldr	r3, [fp, #-52]
1520:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 1947              		.loc 1 1520 20
 1948 072c 0320A0E1 		mov	r2, r3
 1949 0730 14001BE5 		ldr	r0, [fp, #-20]
 1950 0734 FEFFFFEB 		bl	_RME_Thd_Del
 1951 0738 10000BE5 		str	r0, [fp, #-16]
1523:../../Source/Kernel/rme_kernel.c ****             break;
 1952              		.loc 1 1523 13
 1953 073c 560000EA 		b	.L123
 1954              	.L105:
1524:../../Source/Kernel/rme_kernel.c ****         }
1525:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_BIND:
1526:../../Source/Kernel/rme_kernel.c ****         {
1527:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1528:../../Source/Kernel/rme_kernel.c ****             
1529:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Bind(Cpt,
 1955              		.loc 1 1529 20
 1956 0740 28301BE5 		ldr	r3, [fp, #-40]
 1957 0744 03C0A0E1 		mov	ip, r3
1530:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
1531:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D1(Param[0]),   /* rme_cid_t Cap_Thd_Sc
 1958              		.loc 1 1531 51
 1959 0748 34301BE5 		ldr	r3, [fp, #-52]
 1960 074c 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1961              		.loc 1 1529 20
 1962 0750 03E0A0E1 		mov	lr, r3
1532:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)RME_PARAM_D0(Param[0]),   /* rme_cid_t Cap_Sig */
 1963              		.loc 1 1532 51
 1964 0754 34301BE5 		ldr	r3, [fp, #-52]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 63


 1965              		.loc 1 1529 20
 1966 0758 7310FFE6 		uxth	r1, r3
1533:../../Source/Kernel/rme_kernel.c ****                                        (rme_tid_t)RME_PARAM_D1(Param[1]),   /* rme_tid_t TID */
 1967              		.loc 1 1533 51
 1968 075c 30301BE5 		ldr	r3, [fp, #-48]
 1969 0760 2338A0E1 		lsr	r3, r3, #16
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1970              		.loc 1 1529 20
 1971 0764 0300A0E1 		mov	r0, r3
1534:../../Source/Kernel/rme_kernel.c ****                                        RME_PARAM_D0(Param[1]),              /* rme_ptr_t Prio */
 1972              		.loc 1 1534 40
 1973 0768 30301BE5 		ldr	r3, [fp, #-48]
1529:../../Source/Kernel/rme_kernel.c ****                                        (rme_cid_t)Cid,                      /* rme_cid_t Cap_Thd */
 1974              		.loc 1 1529 20
 1975 076c 7330FFE6 		uxth	r3, r3
 1976 0770 2C201BE5 		ldr	r2, [fp, #-44]
 1977 0774 08208DE5 		str	r2, [sp, #8]
 1978 0778 04308DE5 		str	r3, [sp, #4]
 1979 077c 00008DE5 		str	r0, [sp]
 1980 0780 0130A0E1 		mov	r3, r1
 1981 0784 0E20A0E1 		mov	r2, lr
 1982 0788 0C10A0E1 		mov	r1, ip
 1983 078c 14001BE5 		ldr	r0, [fp, #-20]
 1984 0790 FEFFFFEB 		bl	_RME_Thd_Sched_Bind
 1985 0794 10000BE5 		str	r0, [fp, #-16]
1535:../../Source/Kernel/rme_kernel.c ****                                        Param[2]);                           /* rme_ptr_t Haddr */
1536:../../Source/Kernel/rme_kernel.c ****             break;
 1986              		.loc 1 1536 13
 1987 0798 3F0000EA 		b	.L123
 1988              	.L104:
1537:../../Source/Kernel/rme_kernel.c ****         }
1538:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_THD_SCHED_RCV:
1539:../../Source/Kernel/rme_kernel.c ****         {
1540:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1541:../../Source/Kernel/rme_kernel.c ****             
1542:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Thd_Sched_Rcv(Cpt,
1543:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1989              		.loc 1 1543 55
 1990 079c 34301BE5 		ldr	r3, [fp, #-52]
1542:../../Source/Kernel/rme_kernel.c ****                                       (rme_cid_t)Param[0]);                 /* rme_cid_t Cap_Thd */
 1991              		.loc 1 1542 20
 1992 07a0 0310A0E1 		mov	r1, r3
 1993 07a4 14001BE5 		ldr	r0, [fp, #-20]
 1994 07a8 FEFFFFEB 		bl	_RME_Thd_Sched_Rcv
 1995 07ac 10000BE5 		str	r0, [fp, #-16]
1544:../../Source/Kernel/rme_kernel.c ****             break;
 1996              		.loc 1 1544 13
 1997 07b0 390000EA 		b	.L123
 1998              	.L103:
1545:../../Source/Kernel/rme_kernel.c ****         }
1546:../../Source/Kernel/rme_kernel.c ****         
1547:../../Source/Kernel/rme_kernel.c ****         /* Signal */
1548:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_CRT:
1549:../../Source/Kernel/rme_kernel.c ****         {
1550:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1551:../../Source/Kernel/rme_kernel.c ****             
1552:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Crt(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 64


 1999              		.loc 1 1552 20
 2000 07b4 28301BE5 		ldr	r3, [fp, #-40]
 2001 07b8 0310A0E1 		mov	r1, r3
1553:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1554:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2002              		.loc 1 1554 49
 2003 07bc 34301BE5 		ldr	r3, [fp, #-52]
1552:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2004              		.loc 1 1552 20
 2005 07c0 0320A0E1 		mov	r2, r3
 2006 07c4 14001BE5 		ldr	r0, [fp, #-20]
 2007 07c8 FEFFFFEB 		bl	_RME_Sig_Crt
 2008 07cc 10000BE5 		str	r0, [fp, #-16]
1555:../../Source/Kernel/rme_kernel.c ****             break;
 2009              		.loc 1 1555 13
 2010 07d0 310000EA 		b	.L123
 2011              	.L102:
1556:../../Source/Kernel/rme_kernel.c ****         }
1557:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_SIG_DEL:
1558:../../Source/Kernel/rme_kernel.c ****         {
1559:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1560:../../Source/Kernel/rme_kernel.c ****             
1561:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Sig_Del(Cpt,
 2012              		.loc 1 1561 20
 2013 07d4 28301BE5 		ldr	r3, [fp, #-40]
 2014 07d8 0310A0E1 		mov	r1, r3
1562:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1563:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Sig */
 2015              		.loc 1 1563 49
 2016 07dc 34301BE5 		ldr	r3, [fp, #-52]
1561:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2017              		.loc 1 1561 20
 2018 07e0 0320A0E1 		mov	r2, r3
 2019 07e4 14001BE5 		ldr	r0, [fp, #-20]
 2020 07e8 FEFFFFEB 		bl	_RME_Sig_Del
 2021 07ec 10000BE5 		str	r0, [fp, #-16]
1564:../../Source/Kernel/rme_kernel.c ****             break;
 2022              		.loc 1 1564 13
 2023 07f0 290000EA 		b	.L123
 2024              	.L101:
1565:../../Source/Kernel/rme_kernel.c ****         }
1566:../../Source/Kernel/rme_kernel.c ****         
1567:../../Source/Kernel/rme_kernel.c ****         /* Invocation */
1568:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_CRT:
1569:../../Source/Kernel/rme_kernel.c ****         {
1570:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1571:../../Source/Kernel/rme_kernel.c ****             
1572:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Crt(Cpt,
 2025              		.loc 1 1572 20
 2026 07f4 28301BE5 		ldr	r3, [fp, #-40]
 2027 07f8 0300A0E1 		mov	r0, r3
1573:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1574:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D1(Param[0]),          /* rme_cid_t Cap_Kom */
 2028              		.loc 1 1574 44
 2029 07fc 34301BE5 		ldr	r3, [fp, #-52]
 2030 0800 2338A0E1 		lsr	r3, r3, #16
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 65


 2031              		.loc 1 1572 20
 2032 0804 03C0A0E1 		mov	ip, r3
1575:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2033              		.loc 1 1575 44
 2034 0808 34301BE5 		ldr	r3, [fp, #-52]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2035              		.loc 1 1572 20
 2036 080c 7320FFE6 		uxth	r2, r3
1576:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[1],                        /* rme_cid_t Cap_Prc */
 2037              		.loc 1 1576 49
 2038 0810 30301BE5 		ldr	r3, [fp, #-48]
1572:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2039              		.loc 1 1572 20
 2040 0814 0310A0E1 		mov	r1, r3
 2041 0818 2C301BE5 		ldr	r3, [fp, #-44]
 2042 081c 04308DE5 		str	r3, [sp, #4]
 2043 0820 00108DE5 		str	r1, [sp]
 2044 0824 0230A0E1 		mov	r3, r2
 2045 0828 0C20A0E1 		mov	r2, ip
 2046 082c 0010A0E1 		mov	r1, r0
 2047 0830 14001BE5 		ldr	r0, [fp, #-20]
 2048 0834 FEFFFFEB 		bl	_RME_Inv_Crt
 2049 0838 10000BE5 		str	r0, [fp, #-16]
1577:../../Source/Kernel/rme_kernel.c ****                                 Param[2]);                                  /* rme_ptr_t Raddr */
1578:../../Source/Kernel/rme_kernel.c ****             break;
 2050              		.loc 1 1578 13
 2051 083c 160000EA 		b	.L123
 2052              	.L100:
1579:../../Source/Kernel/rme_kernel.c ****         }
1580:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_DEL:
1581:../../Source/Kernel/rme_kernel.c ****         {
1582:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1583:../../Source/Kernel/rme_kernel.c ****             
1584:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Del(Cpt,
 2053              		.loc 1 1584 20
 2054 0840 28301BE5 		ldr	r3, [fp, #-40]
 2055 0844 0310A0E1 		mov	r1, r3
1585:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
1586:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Param[0]);                       /* rme_cid_t Cap_Inv */
 2056              		.loc 1 1586 49
 2057 0848 34301BE5 		ldr	r3, [fp, #-52]
1584:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)Cid,                             /* rme_cid_t Cap_Cpt */
 2058              		.loc 1 1584 20
 2059 084c 0320A0E1 		mov	r2, r3
 2060 0850 14001BE5 		ldr	r0, [fp, #-20]
 2061 0854 FEFFFFEB 		bl	_RME_Inv_Del
 2062 0858 10000BE5 		str	r0, [fp, #-16]
1587:../../Source/Kernel/rme_kernel.c ****             break;
 2063              		.loc 1 1587 13
 2064 085c 0E0000EA 		b	.L123
 2065              	.L98:
1588:../../Source/Kernel/rme_kernel.c ****         }
1589:../../Source/Kernel/rme_kernel.c ****         case RME_SVC_INV_SET:
1590:../../Source/Kernel/rme_kernel.c ****         {
1591:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1592:../../Source/Kernel/rme_kernel.c ****             
1593:../../Source/Kernel/rme_kernel.c ****             Retval=_RME_Inv_Set(Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 66


1594:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2066              		.loc 1 1594 44
 2067 0860 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2068              		.loc 1 1593 20
 2069 0864 7310FFE6 		uxth	r1, r3
 2070 0868 30201BE5 		ldr	r2, [fp, #-48]
 2071 086c 2C001BE5 		ldr	r0, [fp, #-44]
1595:../../Source/Kernel/rme_kernel.c ****                                 Param[1],                                   /* rme_ptr_t Entry */
1596:../../Source/Kernel/rme_kernel.c ****                                 Param[2],                                   /* rme_ptr_t Stack */
1597:../../Source/Kernel/rme_kernel.c ****                                 RME_PARAM_D1(Param[0]));                    /* rme_ptr_t Is_Exc_Ret
 2072              		.loc 1 1597 33
 2073 0870 34301BE5 		ldr	r3, [fp, #-52]
1593:../../Source/Kernel/rme_kernel.c ****                                 (rme_cid_t)RME_PARAM_D0(Param[0]),          /* rme_cid_t Cap_Inv */
 2074              		.loc 1 1593 20
 2075 0874 2338A0E1 		lsr	r3, r3, #16
 2076 0878 00308DE5 		str	r3, [sp]
 2077 087c 0030A0E1 		mov	r3, r0
 2078 0880 14001BE5 		ldr	r0, [fp, #-20]
 2079 0884 FEFFFFEB 		bl	_RME_Inv_Set
 2080 0888 10000BE5 		str	r0, [fp, #-16]
1598:../../Source/Kernel/rme_kernel.c ****             break;
 2081              		.loc 1 1598 13
 2082 088c 020000EA 		b	.L123
 2083              	.L97:
1599:../../Source/Kernel/rme_kernel.c ****         }
1600:../../Source/Kernel/rme_kernel.c ****         /* This is an error */
1601:../../Source/Kernel/rme_kernel.c ****         default: 
1602:../../Source/Kernel/rme_kernel.c ****         {
1603:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1604:../../Source/Kernel/rme_kernel.c ****             
1605:../../Source/Kernel/rme_kernel.c ****             Retval=RME_ERR_CPT_NULL;
 2084              		.loc 1 1605 19
 2085 0890 0030E0E3 		mvn	r3, #0
 2086 0894 10300BE5 		str	r3, [fp, #-16]
1606:../../Source/Kernel/rme_kernel.c ****             break;
 2087              		.loc 1 1606 13
 2088 0898 00F020E3 		nop
 2089              	.L123:
1607:../../Source/Kernel/rme_kernel.c ****         }
1608:../../Source/Kernel/rme_kernel.c ****     }
1609:../../Source/Kernel/rme_kernel.c ****     
1610:../../Source/Kernel/rme_kernel.c ****     /* We set the registers and return */
1611:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,Retval);
 2090              		.loc 1 1611 5
 2091 089c 10101BE5 		ldr	r1, [fp, #-16]
 2092 08a0 38001BE5 		ldr	r0, [fp, #-56]
 2093 08a4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 2094              	.L69:
1612:../../Source/Kernel/rme_kernel.c **** }
 2095              		.loc 1 1612 1
 2096 08a8 0CD04BE2 		sub	sp, fp, #12
 2097              		.cfi_def_cfa 13, 16
 2098              		@ sp needed
 2099 08ac 3088BDE8 		pop	{r4, r5, fp, pc}
 2100              	.L128:
 2101              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 67


 2102              	.L127:
 2103 08b0 00000000 		.word	.L81
 2104 08b4 20000000 		.word	.L99
 2105              		.cfi_endproc
 2106              	.LFE18:
 2108              		.section	.text._RME_Tim_Handler,"ax",%progbits
 2109              		.align	2
 2110              		.global	_RME_Tim_Handler
 2111              		.syntax unified
 2112              		.arm
 2114              	_RME_Tim_Handler:
 2115              	.LFB19:
1613:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Svc_Handler *********************************************/
1614:../../Source/Kernel/rme_kernel.c **** 
1615:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Handler **************************************************
1616:../../Source/Kernel/rme_kernel.c **** Description : The system tick timer handler of RME.
1617:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
1618:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Slice - Number of slices passed since last call of
1619:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1620:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
1621:../../Source/Kernel/rme_kernel.c **** Return      : None.
1622:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1623:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Handler(struct RME_Reg_Struct* Reg,
1624:../../Source/Kernel/rme_kernel.c ****                       rme_ptr_t Slice)
1625:../../Source/Kernel/rme_kernel.c **** {
 2116              		.loc 1 1625 1
 2117              		.cfi_startproc
 2118              		@ args = 0, pretend = 0, frame = 16
 2119              		@ frame_needed = 1, uses_anonymous_args = 0
 2120 0000 00482DE9 		push	{fp, lr}
 2121              		.cfi_def_cfa_offset 8
 2122              		.cfi_offset 11, -8
 2123              		.cfi_offset 14, -4
 2124 0004 04B08DE2 		add	fp, sp, #4
 2125              		.cfi_def_cfa 11, 4
 2126 0008 10D04DE2 		sub	sp, sp, #16
 2127 000c 10000BE5 		str	r0, [fp, #-16]
 2128 0010 14100BE5 		str	r1, [fp, #-20]
1626:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
1627:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1628:../../Source/Kernel/rme_kernel.c ****     
1629:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 2129              		.loc 1 1629 10
 2130 0014 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2131 0018 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2132 001c 08300BE5 		str	r3, [fp, #-8]
1630:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 2133              		.loc 1 1630 12
 2134 0020 08301BE5 		ldr	r3, [fp, #-8]
 2135 0024 043093E5 		ldr	r3, [r3, #4]
 2136 0028 0C300BE5 		str	r3, [fp, #-12]
1631:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2137              		.loc 1 1631 22
 2138 002c 0C301BE5 		ldr	r3, [fp, #-12]
 2139 0030 183093E5 		ldr	r3, [r3, #24]
 2140              		.loc 1 1631 7
 2141 0034 0E0173E3 		cmn	r3, #-2147483645
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 68


 2142 0038 1500008A 		bhi	.L130
1632:../../Source/Kernel/rme_kernel.c ****     {
1633:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1634:../../Source/Kernel/rme_kernel.c **** 
1635:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, and see if the timeslice is used up */
1636:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2143              		.loc 1 1636 32
 2144 003c 0C301BE5 		ldr	r3, [fp, #-12]
 2145 0040 183093E5 		ldr	r3, [r3, #24]
 2146              		.loc 1 1636 11
 2147 0044 14201BE5 		ldr	r2, [fp, #-20]
 2148 0048 030052E1 		cmp	r2, r3
 2149 004c 0600002A 		bcs	.L131
1637:../../Source/Kernel/rme_kernel.c ****         {
1638:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1639:../../Source/Kernel/rme_kernel.c ****             
1640:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2150              		.loc 1 1640 27
 2151 0050 0C301BE5 		ldr	r3, [fp, #-12]
 2152 0054 182093E5 		ldr	r2, [r3, #24]
 2153              		.loc 1 1640 33
 2154 0058 14301BE5 		ldr	r3, [fp, #-20]
 2155 005c 032042E0 		sub	r2, r2, r3
 2156 0060 0C301BE5 		ldr	r3, [fp, #-12]
 2157 0064 182083E5 		str	r2, [r3, #24]
 2158 0068 090000EA 		b	.L130
 2159              	.L131:
1641:../../Source/Kernel/rme_kernel.c ****         }
1642:../../Source/Kernel/rme_kernel.c ****         else
1643:../../Source/Kernel/rme_kernel.c ****         {
1644:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1645:../../Source/Kernel/rme_kernel.c **** 
1646:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
1647:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 2160              		.loc 1 1647 33
 2161 006c 0C301BE5 		ldr	r3, [fp, #-12]
 2162 0070 0020A0E3 		mov	r2, #0
 2163 0074 182083E5 		str	r2, [r3, #24]
1648:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 2164              		.loc 1 1648 13
 2165 0078 0C001BE5 		ldr	r0, [fp, #-12]
 2166 007c FEFFFFEB 		bl	_RME_Run_Del
1649:../../Source/Kernel/rme_kernel.c ****             
1650:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
1651:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 2167              		.loc 1 1651 33
 2168 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2169 0084 0220A0E3 		mov	r2, #2
 2170 0088 1C2083E5 		str	r2, [r3, #28]
1652:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 2171              		.loc 1 1652 13
 2172 008c 0C001BE5 		ldr	r0, [fp, #-12]
 2173 0090 FEFFFFEB 		bl	_RME_Run_Notif
 2174              	.L130:
1653:../../Source/Kernel/rme_kernel.c ****         }
1654:../../Source/Kernel/rme_kernel.c ****     }
1655:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 69


1656:../../Source/Kernel/rme_kernel.c ****     {
1657:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1658:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1659:../../Source/Kernel/rme_kernel.c ****     }
1660:../../Source/Kernel/rme_kernel.c **** 
1661:../../Source/Kernel/rme_kernel.c ****     /* Send to the system tick timer endpoint. This endpoint is per-core */
1662:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_Snd(Local->Sig_Tim);
 2175              		.loc 1 1662 5
 2176 0094 08301BE5 		ldr	r3, [fp, #-8]
 2177 0098 083093E5 		ldr	r3, [r3, #8]
 2178 009c 0300A0E1 		mov	r0, r3
 2179 00a0 FEFFFFEB 		bl	_RME_Kern_Snd
1663:../../Source/Kernel/rme_kernel.c **** 
1664:../../Source/Kernel/rme_kernel.c ****     /* All kernel send complete, now pick the highest priority thread to run */
1665:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 2180              		.loc 1 1665 5
 2181 00a4 08101BE5 		ldr	r1, [fp, #-8]
 2182 00a8 10001BE5 		ldr	r0, [fp, #-16]
 2183 00ac FEFFFFEB 		bl	_RME_Kern_High
1666:../../Source/Kernel/rme_kernel.c **** }
 2184              		.loc 1 1666 1
 2185 00b0 00F020E3 		nop
 2186 00b4 04D04BE2 		sub	sp, fp, #4
 2187              		.cfi_def_cfa 13, 8
 2188              		@ sp needed
 2189 00b8 0088BDE8 		pop	{fp, pc}
 2190              		.cfi_endproc
 2191              	.LFE19:
 2193              		.section	.text._RME_Tim_Elapse,"ax",%progbits
 2194              		.align	2
 2195              		.global	_RME_Tim_Elapse
 2196              		.syntax unified
 2197              		.arm
 2199              	_RME_Tim_Elapse:
 2200              	.LFB20:
1667:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Handler *********************************************/
1668:../../Source/Kernel/rme_kernel.c **** 
1669:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Elapse ***************************************************
1670:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1671:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Slice - Number of slices passed since last call of
1672:../../Source/Kernel/rme_kernel.c ****                                 _RME_Tim_Elapse or _RME_Tim_Handler.
1673:../../Source/Kernel/rme_kernel.c **** Output      : None.
1674:../../Source/Kernel/rme_kernel.c **** Return      : None.
1675:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1676:../../Source/Kernel/rme_kernel.c **** void _RME_Tim_Elapse(rme_ptr_t Slice)
1677:../../Source/Kernel/rme_kernel.c **** {
 2201              		.loc 1 1677 1
 2202              		.cfi_startproc
 2203              		@ args = 0, pretend = 0, frame = 16
 2204              		@ frame_needed = 1, uses_anonymous_args = 0
 2205              		@ link register save eliminated.
 2206 0000 04B02DE5 		str	fp, [sp, #-4]!
 2207              		.cfi_def_cfa_offset 4
 2208              		.cfi_offset 11, -4
 2209 0004 00B08DE2 		add	fp, sp, #0
 2210              		.cfi_def_cfa_register 11
 2211 0008 14D04DE2 		sub	sp, sp, #20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 70


 2212 000c 10000BE5 		str	r0, [fp, #-16]
1678:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
1679:../../Source/Kernel/rme_kernel.c ****     
1680:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 2213              		.loc 1 1680 12
 2214 0010 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2215 0014 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2216 0018 043093E5 		ldr	r3, [r3, #4]
 2217 001c 08300BE5 		str	r3, [fp, #-8]
1681:../../Source/Kernel/rme_kernel.c ****     
1682:../../Source/Kernel/rme_kernel.c ****     /* We don't want the slices less than 1 because we want to keep the kernel
1683:../../Source/Kernel/rme_kernel.c ****      * SVC invariants - the current thread must still be running after this */
1684:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice<RME_THD_INF_TIME)
 2218              		.loc 1 1684 22
 2219 0020 08301BE5 		ldr	r3, [fp, #-8]
 2220 0024 183093E5 		ldr	r3, [r3, #24]
 2221              		.loc 1 1684 7
 2222 0028 0E0173E3 		cmn	r3, #-2147483645
 2223 002c 0E00008A 		bhi	.L135
1685:../../Source/Kernel/rme_kernel.c ****     {
1686:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1687:../../Source/Kernel/rme_kernel.c **** 
1688:../../Source/Kernel/rme_kernel.c ****         /* Decrease timeslice count, but no less than 1, so the thread is
1689:../../Source/Kernel/rme_kernel.c ****          * always running, which keeps the invariant of the kernel */
1690:../../Source/Kernel/rme_kernel.c ****         if(Slice<Thd_Cur->Sched.Slice)
 2224              		.loc 1 1690 32
 2225 0030 08301BE5 		ldr	r3, [fp, #-8]
 2226 0034 183093E5 		ldr	r3, [r3, #24]
 2227              		.loc 1 1690 11
 2228 0038 10201BE5 		ldr	r2, [fp, #-16]
 2229 003c 030052E1 		cmp	r2, r3
 2230 0040 0600002A 		bcs	.L134
1691:../../Source/Kernel/rme_kernel.c ****         {
1692:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1693:../../Source/Kernel/rme_kernel.c ****             
1694:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice-=Slice;
 2231              		.loc 1 1694 27
 2232 0044 08301BE5 		ldr	r3, [fp, #-8]
 2233 0048 182093E5 		ldr	r2, [r3, #24]
 2234              		.loc 1 1694 33
 2235 004c 10301BE5 		ldr	r3, [fp, #-16]
 2236 0050 032042E0 		sub	r2, r2, r3
 2237 0054 08301BE5 		ldr	r3, [fp, #-8]
 2238 0058 182083E5 		str	r2, [r3, #24]
1695:../../Source/Kernel/rme_kernel.c ****         }
1696:../../Source/Kernel/rme_kernel.c ****         else
1697:../../Source/Kernel/rme_kernel.c ****         {
1698:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
1699:../../Source/Kernel/rme_kernel.c ****             
1700:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=1U;
1701:../../Source/Kernel/rme_kernel.c ****         }
1702:../../Source/Kernel/rme_kernel.c ****     }
1703:../../Source/Kernel/rme_kernel.c ****     else
1704:../../Source/Kernel/rme_kernel.c ****     {
1705:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1706:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1707:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 71


1708:../../Source/Kernel/rme_kernel.c **** }
 2239              		.loc 1 1708 1
 2240 005c 020000EA 		b	.L135
 2241              	.L134:
1700:../../Source/Kernel/rme_kernel.c ****         }
 2242              		.loc 1 1700 33
 2243 0060 08301BE5 		ldr	r3, [fp, #-8]
 2244 0064 0120A0E3 		mov	r2, #1
 2245 0068 182083E5 		str	r2, [r3, #24]
 2246              	.L135:
 2247              		.loc 1 1708 1
 2248 006c 00F020E3 		nop
 2249 0070 00D08BE2 		add	sp, fp, #0
 2250              		.cfi_def_cfa_register 13
 2251              		@ sp needed
 2252 0074 04B09DE4 		ldr	fp, [sp], #4
 2253              		.cfi_restore 11
 2254              		.cfi_def_cfa_offset 0
 2255 0078 1EFF2FE1 		bx	lr
 2256              		.cfi_endproc
 2257              	.LFE20:
 2259              		.section	.text._RME_Tim_Future,"ax",%progbits
 2260              		.align	2
 2261              		.global	_RME_Tim_Future
 2262              		.syntax unified
 2263              		.arm
 2265              	_RME_Tim_Future:
 2266              	.LFB21:
1709:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Elapse **********************************************/
1710:../../Source/Kernel/rme_kernel.c **** 
1711:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Tim_Future ***************************************************
1712:../../Source/Kernel/rme_kernel.c **** Description : Honor the elapse of time from the last timer firing.
1713:../../Source/Kernel/rme_kernel.c **** Input       : None.
1714:../../Source/Kernel/rme_kernel.c **** Output      : None.
1715:../../Source/Kernel/rme_kernel.c **** Return      : rme_ptr_t - How many slices to program until the next timeout.
1716:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1717:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Tim_Future(void)
1718:../../Source/Kernel/rme_kernel.c **** {
 2267              		.loc 1 1718 1
 2268              		.cfi_startproc
 2269              		@ args = 0, pretend = 0, frame = 0
 2270              		@ frame_needed = 1, uses_anonymous_args = 0
 2271              		@ link register save eliminated.
 2272 0000 04B02DE5 		str	fp, [sp, #-4]!
 2273              		.cfi_def_cfa_offset 4
 2274              		.cfi_offset 11, -4
 2275 0004 00B08DE2 		add	fp, sp, #0
 2276              		.cfi_def_cfa_register 11
1719:../../Source/Kernel/rme_kernel.c ****     /* If we're running an infinite thread, just program infinite time,
1720:../../Source/Kernel/rme_kernel.c ****      * these values are very large so that's fine */
1721:../../Source/Kernel/rme_kernel.c ****     return RME_CPU_LOCAL()->Thd_Cur->Sched.Slice;
 2277              		.loc 1 1721 27
 2278 0008 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 2279 000c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 2280 0010 043093E5 		ldr	r3, [r3, #4]
 2281              		.loc 1 1721 43
 2282 0014 183093E5 		ldr	r3, [r3, #24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 72


1722:../../Source/Kernel/rme_kernel.c **** }
 2283              		.loc 1 1722 1
 2284 0018 0300A0E1 		mov	r0, r3
 2285 001c 00D08BE2 		add	sp, fp, #0
 2286              		.cfi_def_cfa_register 13
 2287              		@ sp needed
 2288 0020 04B09DE4 		ldr	fp, [sp], #4
 2289              		.cfi_restore 11
 2290              		.cfi_def_cfa_offset 0
 2291 0024 1EFF2FE1 		bx	lr
 2292              		.cfi_endproc
 2293              	.LFE21:
 2295              		.section	.text._RME_Cpt_Boot_Init,"ax",%progbits
 2296              		.align	2
 2297              		.global	_RME_Cpt_Boot_Init
 2298              		.syntax unified
 2299              		.arm
 2301              	_RME_Cpt_Boot_Init:
 2302              	.LFB22:
1723:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Tim_Future **********************************************/
1724:../../Source/Kernel/rme_kernel.c **** 
1725:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Init ************************************************
1726:../../Source/Kernel/rme_kernel.c **** Description : Create the first capability table in the system, at boot-time. 
1727:../../Source/Kernel/rme_kernel.c ****               This function must be called at system startup before setting up
1728:../../Source/Kernel/rme_kernel.c ****               any other kernel objects.
1729:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
1730:../../Source/Kernel/rme_kernel.c **** Input       : rme_cid_t Cap_Cpt - The capability slot that you want this newly
1731:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1732:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1733:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the
1734:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1735:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capability entries in the
1736:../../Source/Kernel/rme_kernel.c ****                                     capability table.
1737:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1738:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1739:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Init(rme_cid_t Cap_Cpt,
1740:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Vaddr,
1741:../../Source/Kernel/rme_kernel.c ****                              rme_ptr_t Entry_Num)
1742:../../Source/Kernel/rme_kernel.c **** {
 2303              		.loc 1 1742 1
 2304              		.cfi_startproc
 2305              		@ args = 0, pretend = 0, frame = 24
 2306              		@ frame_needed = 1, uses_anonymous_args = 0
 2307 0000 00482DE9 		push	{fp, lr}
 2308              		.cfi_def_cfa_offset 8
 2309              		.cfi_offset 11, -8
 2310              		.cfi_offset 14, -4
 2311 0004 04B08DE2 		add	fp, sp, #4
 2312              		.cfi_def_cfa 11, 4
 2313 0008 18D04DE2 		sub	sp, sp, #24
 2314 000c 10000BE5 		str	r0, [fp, #-16]
 2315 0010 14100BE5 		str	r1, [fp, #-20]
 2316 0014 18200BE5 		str	r2, [fp, #-24]
1743:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1744:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt;
1745:../../Source/Kernel/rme_kernel.c **** 
1746:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 73


1747:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2317              		.loc 1 1747 7
 2318 0018 18301BE5 		ldr	r3, [fp, #-24]
 2319 001c 000053E3 		cmp	r3, #0
 2320 0020 0200000A 		beq	.L139
 2321              		.loc 1 1747 23 discriminator 1
 2322 0024 18301BE5 		ldr	r3, [fp, #-24]
 2323 0028 800053E3 		cmp	r3, #128
 2324 002c 0100009A 		bls	.L140
 2325              	.L139:
1748:../../Source/Kernel/rme_kernel.c ****     {
1749:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1750:../../Source/Kernel/rme_kernel.c ****         
1751:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2326              		.loc 1 1751 16
 2327 0030 0230E0E3 		mvn	r3, #2
 2328 0034 300000EA 		b	.L141
 2329              	.L140:
1752:../../Source/Kernel/rme_kernel.c ****     }
1753:../../Source/Kernel/rme_kernel.c ****     else
1754:../../Source/Kernel/rme_kernel.c ****     {
1755:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1756:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1757:../../Source/Kernel/rme_kernel.c ****     }
1758:../../Source/Kernel/rme_kernel.c ****     
1759:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
1760:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2330              		.loc 1 1760 8
 2331 0038 18301BE5 		ldr	r3, [fp, #-24]
 2332 003c 8332A0E1 		lsl	r3, r3, #5
 2333 0040 0310A0E1 		mov	r1, r3
 2334 0044 14001BE5 		ldr	r0, [fp, #-20]
 2335 0048 FEFFFFEB 		bl	_RME_Kot_Mark
 2336 004c 0030A0E1 		mov	r3, r0
 2337              		.loc 1 1760 7 discriminator 1
 2338 0050 000053E3 		cmp	r3, #0
 2339 0054 0100000A 		beq	.L142
1761:../../Source/Kernel/rme_kernel.c ****     {
1762:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1763:../../Source/Kernel/rme_kernel.c ****         
1764:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2340              		.loc 1 1764 16
 2341 0058 0330E0E3 		mvn	r3, #3
 2342 005c 260000EA 		b	.L141
 2343              	.L142:
1765:../../Source/Kernel/rme_kernel.c ****     }
1766:../../Source/Kernel/rme_kernel.c ****     else
1767:../../Source/Kernel/rme_kernel.c ****     {
1768:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1769:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1770:../../Source/Kernel/rme_kernel.c ****     }
1771:../../Source/Kernel/rme_kernel.c **** 
1772:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1773:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2344              		.loc 1 1773 14
 2345 0060 0030A0E3 		mov	r3, #0
 2346 0064 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 74


 2347              		.loc 1 1773 5
 2348 0068 090000EA 		b	.L143
 2349              	.L144:
1774:../../Source/Kernel/rme_kernel.c ****     {
1775:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2350              		.loc 1 1775 9
 2351 006c 08301BE5 		ldr	r3, [fp, #-8]
 2352 0070 8322A0E1 		lsl	r2, r3, #5
 2353 0074 14301BE5 		ldr	r3, [fp, #-20]
 2354 0078 033082E0 		add	r3, r2, r3
 2355 007c 0320A0E1 		mov	r2, r3
 2356 0080 0030A0E3 		mov	r3, #0
 2357 0084 003082E5 		str	r3, [r2]
1773:../../Source/Kernel/rme_kernel.c ****     {
 2358              		.loc 1 1773 39 discriminator 3
 2359 0088 08301BE5 		ldr	r3, [fp, #-8]
 2360 008c 013083E2 		add	r3, r3, #1
 2361 0090 08300BE5 		str	r3, [fp, #-8]
 2362              	.L143:
1773:../../Source/Kernel/rme_kernel.c ****     {
 2363              		.loc 1 1773 23 discriminator 1
 2364 0094 08201BE5 		ldr	r2, [fp, #-8]
 2365 0098 18301BE5 		ldr	r3, [fp, #-24]
 2366 009c 030052E1 		cmp	r2, r3
 2367 00a0 F1FFFF3A 		bcc	.L144
1776:../../Source/Kernel/rme_kernel.c ****     }
1777:../../Source/Kernel/rme_kernel.c **** 
1778:../../Source/Kernel/rme_kernel.c ****     Cpt=&(((struct RME_Cap_Cpt*)Vaddr)[Cap_Cpt]);
 2368              		.loc 1 1778 39
 2369 00a4 10301BE5 		ldr	r3, [fp, #-16]
 2370 00a8 8322A0E1 		lsl	r2, r3, #5
 2371 00ac 14301BE5 		ldr	r3, [fp, #-20]
 2372 00b0 033082E0 		add	r3, r2, r3
 2373              		.loc 1 1778 8
 2374 00b4 0C300BE5 		str	r3, [fp, #-12]
1779:../../Source/Kernel/rme_kernel.c ****     
1780:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1781:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Root_Ref=1U;
 2375              		.loc 1 1781 23
 2376 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 2377 00bc 0120A0E3 		mov	r2, #1
 2378 00c0 042083E5 		str	r2, [r3, #4]
1782:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Object=Vaddr;
 2379              		.loc 1 1782 21
 2380 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 2381 00c8 14201BE5 		ldr	r2, [fp, #-20]
 2382 00cc 0C2083E5 		str	r2, [r3, #12]
1783:../../Source/Kernel/rme_kernel.c ****     Cpt->Head.Flag=RME_CPT_FLAG_ALL;
 2383              		.loc 1 1783 19
 2384 00d0 0C301BE5 		ldr	r3, [fp, #-12]
 2385 00d4 FF20A0E3 		mov	r2, #255
 2386 00d8 082083E5 		str	r2, [r3, #8]
1784:../../Source/Kernel/rme_kernel.c ****     
1785:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1786:../../Source/Kernel/rme_kernel.c ****     Cpt->Entry_Num=Entry_Num;
 2387              		.loc 1 1786 19
 2388 00dc 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 75


 2389 00e0 18201BE5 		ldr	r2, [fp, #-24]
 2390 00e4 142083E5 		str	r2, [r3, #20]
1787:../../Source/Kernel/rme_kernel.c **** 
1788:../../Source/Kernel/rme_kernel.c ****     /* At last, write into slot the correct information, and set status to VALID */
1789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt->Head.Type_Stat),
 2391              		.loc 1 1789 5
 2392 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 2393 00ec 0314A0E3 		mov	r1, #50331648
 2394 00f0 0300A0E1 		mov	r0, r3
 2395 00f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
1790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1793:../../Source/Kernel/rme_kernel.c **** 
1794:../../Source/Kernel/rme_kernel.c ****     return Cap_Cpt;
 2396              		.loc 1 1794 12
 2397 00f8 10301BE5 		ldr	r3, [fp, #-16]
 2398              	.L141:
1795:../../Source/Kernel/rme_kernel.c **** }
 2399              		.loc 1 1795 1
 2400 00fc 0300A0E1 		mov	r0, r3
 2401 0100 04D04BE2 		sub	sp, fp, #4
 2402              		.cfi_def_cfa 13, 8
 2403              		@ sp needed
 2404 0104 0088BDE8 		pop	{fp, pc}
 2405              		.cfi_endproc
 2406              	.LFE22:
 2408              		.section	.text._RME_Cpt_Boot_Crt,"ax",%progbits
 2409              		.align	2
 2410              		.global	_RME_Cpt_Boot_Crt
 2411              		.syntax unified
 2412              		.arm
 2414              	_RME_Cpt_Boot_Crt:
 2415              	.LFB23:
1796:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Init *******************************************/
1797:../../Source/Kernel/rme_kernel.c **** 
1798:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Boot_Crt *************************************************
1799:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time capability table at the designated memory
1800:../../Source/Kernel/rme_kernel.c ****               address.
1801:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1802:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1803:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1804:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1805:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1806:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1807:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1808:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The kernel virtual address to store the 
1809:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1810:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of capabilities in the capability table.
1811:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1812:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1813:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Cpt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
1814:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
1815:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Crt,
1816:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
1817:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Entry_Num)
1818:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 76


 2416              		.loc 1 1818 1
 2417              		.cfi_startproc
 2418              		@ args = 4, pretend = 0, frame = 32
 2419              		@ frame_needed = 1, uses_anonymous_args = 0
 2420 0000 00482DE9 		push	{fp, lr}
 2421              		.cfi_def_cfa_offset 8
 2422              		.cfi_offset 11, -8
 2423              		.cfi_offset 14, -4
 2424 0004 04B08DE2 		add	fp, sp, #4
 2425              		.cfi_def_cfa 11, 4
 2426 0008 20D04DE2 		sub	sp, sp, #32
 2427 000c 18000BE5 		str	r0, [fp, #-24]
 2428 0010 1C100BE5 		str	r1, [fp, #-28]
 2429 0014 20200BE5 		str	r2, [fp, #-32]
 2430 0018 24300BE5 		str	r3, [fp, #-36]
1819:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1820:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1821:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1822:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1823:../../Source/Kernel/rme_kernel.c ****     
1824:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big - this is not restricted by RME_CPT_ENTRY_MAX */
1825:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2431              		.loc 1 1825 7
 2432 001c 04309BE5 		ldr	r3, [fp, #4]
 2433 0020 000053E3 		cmp	r3, #0
 2434 0024 0200000A 		beq	.L146
 2435              		.loc 1 1825 23 discriminator 1
 2436 0028 04309BE5 		ldr	r3, [fp, #4]
 2437 002c 800053E3 		cmp	r3, #128
 2438 0030 0100009A 		bls	.L147
 2439              	.L146:
1826:../../Source/Kernel/rme_kernel.c ****     {
1827:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1828:../../Source/Kernel/rme_kernel.c ****         
1829:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2440              		.loc 1 1829 16
 2441 0034 0230E0E3 		mvn	r3, #2
 2442 0038 B10000EA 		b	.L148
 2443              	.L147:
1830:../../Source/Kernel/rme_kernel.c ****     }
1831:../../Source/Kernel/rme_kernel.c ****     else
1832:../../Source/Kernel/rme_kernel.c ****     {
1833:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1834:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1835:../../Source/Kernel/rme_kernel.c ****     }
1836:../../Source/Kernel/rme_kernel.c **** 
1837:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1838:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,
 2444              		.loc 1 1838 5
 2445 003c 1C301BE5 		ldr	r3, [fp, #-28]
 2446 0040 803003E2 		and	r3, r3, #128
 2447 0044 000053E3 		cmp	r3, #0
 2448 0048 1C00001A 		bne	.L149
 2449              		.loc 1 1838 5 is_stmt 0 discriminator 1
 2450 004c 18301BE5 		ldr	r3, [fp, #-24]
 2451 0050 142093E5 		ldr	r2, [r3, #20]
 2452 0054 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 77


 2453 0058 030052E1 		cmp	r2, r3
 2454 005c 0100008A 		bhi	.L150
 2455              		.loc 1 1838 5 discriminator 3
 2456 0060 0230E0E3 		mvn	r3, #2
 2457              		.loc 1 1838 5
 2458 0064 A60000EA 		b	.L148
 2459              	.L150:
 2460              		.loc 1 1838 5 discriminator 4
 2461 0068 1C301BE5 		ldr	r3, [fp, #-28]
 2462 006c 8322A0E1 		lsl	r2, r3, #5
 2463 0070 18301BE5 		ldr	r3, [fp, #-24]
 2464 0074 0C3093E5 		ldr	r3, [r3, #12]
 2465 0078 033082E0 		add	r3, r2, r3
 2466 007c 0C300BE5 		str	r3, [fp, #-12]
 2467 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2468 0084 0300A0E1 		mov	r0, r3
 2469 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2470 008c 10000BE5 		str	r0, [fp, #-16]
 2471              		.loc 1 1838 5 discriminator 1
 2472 0090 10301BE5 		ldr	r3, [fp, #-16]
 2473 0094 FF3803E2 		and	r3, r3, #16711680
 2474 0098 020853E3 		cmp	r3, #131072
 2475 009c 0100001A 		bne	.L151
 2476              		.loc 1 1838 5 discriminator 5
 2477 00a0 0830E0E3 		mvn	r3, #8
 2478              		.loc 1 1838 5
 2479 00a4 960000EA 		b	.L148
 2480              	.L151:
 2481              		.loc 1 1838 5 discriminator 6
 2482 00a8 10301BE5 		ldr	r3, [fp, #-16]
 2483 00ac 233CA0E1 		lsr	r3, r3, #24
 2484 00b0 030053E3 		cmp	r3, #3
 2485 00b4 3F00000A 		beq	.L152
 2486              		.loc 1 1838 5 discriminator 7
 2487 00b8 0130E0E3 		mvn	r3, #1
 2488              		.loc 1 1838 5
 2489 00bc 900000EA 		b	.L148
 2490              	.L149:
 2491              		.loc 1 1838 5 discriminator 2
 2492 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 2493 00c4 2324A0E1 		lsr	r2, r3, #8
 2494 00c8 18301BE5 		ldr	r3, [fp, #-24]
 2495 00cc 143093E5 		ldr	r3, [r3, #20]
 2496 00d0 030052E1 		cmp	r2, r3
 2497 00d4 0100003A 		bcc	.L153
 2498              		.loc 1 1838 5 discriminator 8
 2499 00d8 0230E0E3 		mvn	r3, #2
 2500              		.loc 1 1838 5
 2501 00dc 880000EA 		b	.L148
 2502              	.L153:
 2503              		.loc 1 1838 5 discriminator 9
 2504 00e0 1C301BE5 		ldr	r3, [fp, #-28]
 2505 00e4 2334A0E1 		lsr	r3, r3, #8
 2506 00e8 8322A0E1 		lsl	r2, r3, #5
 2507 00ec 18301BE5 		ldr	r3, [fp, #-24]
 2508 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2509 00f4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 78


 2510 00f8 0C300BE5 		str	r3, [fp, #-12]
 2511 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2512 0100 0300A0E1 		mov	r0, r3
 2513 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2514 0108 10000BE5 		str	r0, [fp, #-16]
 2515              		.loc 1 1838 5 discriminator 1
 2516 010c 10301BE5 		ldr	r3, [fp, #-16]
 2517 0110 FF3803E2 		and	r3, r3, #16711680
 2518 0114 020853E3 		cmp	r3, #131072
 2519 0118 0100001A 		bne	.L154
 2520              		.loc 1 1838 5 discriminator 10
 2521 011c 0830E0E3 		mvn	r3, #8
 2522              		.loc 1 1838 5
 2523 0120 770000EA 		b	.L148
 2524              	.L154:
 2525              		.loc 1 1838 5 discriminator 11
 2526 0124 10301BE5 		ldr	r3, [fp, #-16]
 2527 0128 233CA0E1 		lsr	r3, r3, #24
 2528 012c 030053E3 		cmp	r3, #3
 2529 0130 0100000A 		beq	.L155
 2530              		.loc 1 1838 5 discriminator 12
 2531 0134 0130E0E3 		mvn	r3, #1
 2532              		.loc 1 1838 5
 2533 0138 710000EA 		b	.L148
 2534              	.L155:
 2535              		.loc 1 1838 5 discriminator 13
 2536 013c 1C301BE5 		ldr	r3, [fp, #-28]
 2537 0140 7F2003E2 		and	r2, r3, #127
 2538 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2539 0148 143093E5 		ldr	r3, [r3, #20]
 2540 014c 030052E1 		cmp	r2, r3
 2541 0150 0100003A 		bcc	.L156
 2542              		.loc 1 1838 5 discriminator 14
 2543 0154 0230E0E3 		mvn	r3, #2
 2544              		.loc 1 1838 5
 2545 0158 690000EA 		b	.L148
 2546              	.L156:
 2547              		.loc 1 1838 5 discriminator 15
 2548 015c 1C301BE5 		ldr	r3, [fp, #-28]
 2549 0160 7F3003E2 		and	r3, r3, #127
 2550 0164 8322A0E1 		lsl	r2, r3, #5
 2551 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2552 016c 0C3093E5 		ldr	r3, [r3, #12]
 2553 0170 033082E0 		add	r3, r2, r3
 2554 0174 0C300BE5 		str	r3, [fp, #-12]
 2555 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2556 017c 0300A0E1 		mov	r0, r3
 2557 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2558 0184 10000BE5 		str	r0, [fp, #-16]
 2559              		.loc 1 1838 5 discriminator 1
 2560 0188 10301BE5 		ldr	r3, [fp, #-16]
 2561 018c FF3803E2 		and	r3, r3, #16711680
 2562 0190 020853E3 		cmp	r3, #131072
 2563 0194 0100001A 		bne	.L157
 2564              		.loc 1 1838 5 discriminator 16
 2565 0198 0830E0E3 		mvn	r3, #8
 2566              		.loc 1 1838 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 79


 2567 019c 580000EA 		b	.L148
 2568              	.L157:
 2569              		.loc 1 1838 5 discriminator 17
 2570 01a0 10301BE5 		ldr	r3, [fp, #-16]
 2571 01a4 233CA0E1 		lsr	r3, r3, #24
 2572 01a8 030053E3 		cmp	r3, #3
 2573 01ac 0100000A 		beq	.L152
 2574              		.loc 1 1838 5 discriminator 18
 2575 01b0 0130E0E3 		mvn	r3, #1
 2576              		.loc 1 1838 5
 2577 01b4 520000EA 		b	.L148
 2578              	.L152:
1839:../../Source/Kernel/rme_kernel.c ****                    Cap_Cpt_Crt,
1840:../../Source/Kernel/rme_kernel.c ****                    RME_CAP_TYPE_CPT,
1841:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,
1842:../../Source/Kernel/rme_kernel.c ****                    Cpt_Op,
1843:../../Source/Kernel/rme_kernel.c ****                    Type_Stat);
1844:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1845:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 2579              		.loc 1 1845 5 is_stmt 1
 2580 01b8 0C301BE5 		ldr	r3, [fp, #-12]
 2581 01bc 083093E5 		ldr	r3, [r3, #8]
 2582 01c0 013003E2 		and	r3, r3, #1
 2583 01c4 000053E3 		cmp	r3, #0
 2584 01c8 0100001A 		bne	.L158
 2585              		.loc 1 1845 5 is_stmt 0 discriminator 1
 2586 01cc 0630E0E3 		mvn	r3, #6
 2587              		.loc 1 1845 5
 2588 01d0 4B0000EA 		b	.L148
 2589              	.L158:
1846:../../Source/Kernel/rme_kernel.c **** 
1847:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1848:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 2590              		.loc 1 1848 5 is_stmt 1
 2591 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 2592 01d8 142093E5 		ldr	r2, [r3, #20]
 2593 01dc 20301BE5 		ldr	r3, [fp, #-32]
 2594 01e0 030052E1 		cmp	r2, r3
 2595 01e4 0100008A 		bhi	.L159
 2596              		.loc 1 1848 5 is_stmt 0 discriminator 1
 2597 01e8 0230E0E3 		mvn	r3, #2
 2598              		.loc 1 1848 5
 2599 01ec 440000EA 		b	.L148
 2600              	.L159:
 2601              		.loc 1 1848 5 discriminator 2
 2602 01f0 20301BE5 		ldr	r3, [fp, #-32]
 2603 01f4 8322A0E1 		lsl	r2, r3, #5
 2604 01f8 0C301BE5 		ldr	r3, [fp, #-12]
 2605 01fc 0C3093E5 		ldr	r3, [r3, #12]
 2606 0200 033082E0 		add	r3, r2, r3
 2607 0204 14300BE5 		str	r3, [fp, #-20]
1849:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1850:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 2608              		.loc 1 1850 5 is_stmt 1
 2609 0208 14301BE5 		ldr	r3, [fp, #-20]
 2610 020c 0128A0E3 		mov	r2, #65536
 2611 0210 0010A0E3 		mov	r1, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 80


 2612 0214 0300A0E1 		mov	r0, r3
 2613 0218 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 2614 021c 0030A0E1 		mov	r3, r0
 2615              		.loc 1 1850 5 is_stmt 0 discriminator 1
 2616 0220 000053E3 		cmp	r3, #0
 2617 0224 0100001A 		bne	.L160
 2618 0228 0430E0E3 		mvn	r3, #4
 2619              		.loc 1 1850 5
 2620 022c 340000EA 		b	.L148
 2621              	.L160:
 2622              		.loc 1 1850 5 discriminator 2
 2623 0230 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 2624 0234 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 2625 0238 002093E5 		ldr	r2, [r3]
 2626 023c 14301BE5 		ldr	r3, [fp, #-20]
 2627 0240 102083E5 		str	r2, [r3, #16]
1851:../../Source/Kernel/rme_kernel.c **** 
1852:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1853:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))!=0)
 2628              		.loc 1 1853 8 is_stmt 1
 2629 0244 04309BE5 		ldr	r3, [fp, #4]
 2630 0248 8332A0E1 		lsl	r3, r3, #5
 2631 024c 0310A0E1 		mov	r1, r3
 2632 0250 24001BE5 		ldr	r0, [fp, #-36]
 2633 0254 FEFFFFEB 		bl	_RME_Kot_Mark
 2634 0258 0030A0E1 		mov	r3, r0
 2635              		.loc 1 1853 7 discriminator 1
 2636 025c 000053E3 		cmp	r3, #0
 2637 0260 0500000A 		beq	.L161
1854:../../Source/Kernel/rme_kernel.c ****     {
1855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1856:../../Source/Kernel/rme_kernel.c ****         
1857:../../Source/Kernel/rme_kernel.c ****         /* Abort the creation process */
1858:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 2638              		.loc 1 1858 9
 2639 0264 14301BE5 		ldr	r3, [fp, #-20]
 2640 0268 0010A0E3 		mov	r1, #0
 2641 026c 0300A0E1 		mov	r0, r3
 2642 0270 FEFFFFEB 		bl	__RME_A7A_Write_Release
1859:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 2643              		.loc 1 1859 16
 2644 0274 0330E0E3 		mvn	r3, #3
 2645 0278 210000EA 		b	.L148
 2646              	.L161:
1860:../../Source/Kernel/rme_kernel.c ****     }
1861:../../Source/Kernel/rme_kernel.c ****     else
1862:../../Source/Kernel/rme_kernel.c ****     {
1863:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1864:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1865:../../Source/Kernel/rme_kernel.c ****     }
1866:../../Source/Kernel/rme_kernel.c **** 
1867:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1868:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 2647              		.loc 1 1868 14
 2648 027c 0030A0E3 		mov	r3, #0
 2649 0280 08300BE5 		str	r3, [fp, #-8]
 2650              		.loc 1 1868 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 81


 2651 0284 090000EA 		b	.L162
 2652              	.L163:
1869:../../Source/Kernel/rme_kernel.c ****     {
1870:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 2653              		.loc 1 1870 9
 2654 0288 08301BE5 		ldr	r3, [fp, #-8]
 2655 028c 8322A0E1 		lsl	r2, r3, #5
 2656 0290 24301BE5 		ldr	r3, [fp, #-36]
 2657 0294 033082E0 		add	r3, r2, r3
 2658 0298 0320A0E1 		mov	r2, r3
 2659 029c 0030A0E3 		mov	r3, #0
 2660 02a0 003082E5 		str	r3, [r2]
1868:../../Source/Kernel/rme_kernel.c ****     {
 2661              		.loc 1 1868 39 discriminator 3
 2662 02a4 08301BE5 		ldr	r3, [fp, #-8]
 2663 02a8 013083E2 		add	r3, r3, #1
 2664 02ac 08300BE5 		str	r3, [fp, #-8]
 2665              	.L162:
1868:../../Source/Kernel/rme_kernel.c ****     {
 2666              		.loc 1 1868 23 discriminator 1
 2667 02b0 08201BE5 		ldr	r2, [fp, #-8]
 2668 02b4 04309BE5 		ldr	r3, [fp, #4]
 2669 02b8 030052E1 		cmp	r2, r3
 2670 02bc F1FFFF3A 		bcc	.L163
1871:../../Source/Kernel/rme_kernel.c ****     }
1872:../../Source/Kernel/rme_kernel.c **** 
1873:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1874:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 2671              		.loc 1 1874 27
 2672 02c0 14301BE5 		ldr	r3, [fp, #-20]
 2673 02c4 0020A0E3 		mov	r2, #0
 2674 02c8 042083E5 		str	r2, [r3, #4]
1875:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 2675              		.loc 1 1875 25
 2676 02cc 14301BE5 		ldr	r3, [fp, #-20]
 2677 02d0 24201BE5 		ldr	r2, [fp, #-36]
 2678 02d4 0C2083E5 		str	r2, [r3, #12]
1876:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 2679              		.loc 1 1876 23
 2680 02d8 14301BE5 		ldr	r3, [fp, #-20]
 2681 02dc FF20A0E3 		mov	r2, #255
 2682 02e0 082083E5 		str	r2, [r3, #8]
1877:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1878:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 2683              		.loc 1 1878 23
 2684 02e4 14301BE5 		ldr	r3, [fp, #-20]
 2685 02e8 04209BE5 		ldr	r2, [fp, #4]
 2686 02ec 142083E5 		str	r2, [r3, #20]
1879:../../Source/Kernel/rme_kernel.c **** 
1880:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1881:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 2687              		.loc 1 1881 5
 2688 02f0 14301BE5 		ldr	r3, [fp, #-20]
 2689 02f4 0314A0E3 		mov	r1, #50331648
 2690 02f8 0300A0E1 		mov	r0, r3
 2691 02fc FEFFFFEB 		bl	__RME_A7A_Write_Release
1882:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 82


1883:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1884:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1885:../../Source/Kernel/rme_kernel.c **** 
1886:../../Source/Kernel/rme_kernel.c ****     return 0;
 2692              		.loc 1 1886 12
 2693 0300 0030A0E3 		mov	r3, #0
 2694              	.L148:
1887:../../Source/Kernel/rme_kernel.c **** }
 2695              		.loc 1 1887 1
 2696 0304 0300A0E1 		mov	r0, r3
 2697 0308 04D04BE2 		sub	sp, fp, #4
 2698              		.cfi_def_cfa 13, 8
 2699              		@ sp needed
 2700 030c 0088BDE8 		pop	{fp, pc}
 2701              		.cfi_endproc
 2702              	.LFE23:
 2704              		.section	.text._RME_Cpt_Crt,"ax",%progbits
 2705              		.align	2
 2706              		.syntax unified
 2707              		.arm
 2709              	_RME_Cpt_Crt:
 2710              	.LFB24:
1888:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Boot_Crt ********************************************/
1889:../../Source/Kernel/rme_kernel.c **** 
1890:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Crt ******************************************************
1891:../../Source/Kernel/rme_kernel.c **** Description : Create a capability table.
1892:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
1893:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability table that contains the 
1894:../../Source/Kernel/rme_kernel.c ****                                       newly created cap to captbl.
1895:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
1896:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
1897:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
1898:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Crt - The capability slot that you want this newly
1899:../../Source/Kernel/rme_kernel.c ****                                   created capability table capability to be in.
1900:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
1901:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the 
1902:../../Source/Kernel/rme_kernel.c ****                                 capability table.
1903:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry_Num - The number of entries in that capability
1904:../../Source/Kernel/rme_kernel.c ****                                     table.
1905:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
1906:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
1907:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Crt(struct RME_Cap_Cpt* Cpt,
1908:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
1909:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
1910:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Crt,
1911:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
1912:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry_Num)
1913:../../Source/Kernel/rme_kernel.c **** {
 2711              		.loc 1 1913 1
 2712              		.cfi_startproc
 2713              		@ args = 8, pretend = 0, frame = 40
 2714              		@ frame_needed = 1, uses_anonymous_args = 0
 2715 0000 00482DE9 		push	{fp, lr}
 2716              		.cfi_def_cfa_offset 8
 2717              		.cfi_offset 11, -8
 2718              		.cfi_offset 14, -4
 2719 0004 04B08DE2 		add	fp, sp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 83


 2720              		.cfi_def_cfa 11, 4
 2721 0008 28D04DE2 		sub	sp, sp, #40
 2722 000c 20000BE5 		str	r0, [fp, #-32]
 2723 0010 24100BE5 		str	r1, [fp, #-36]
 2724 0014 28200BE5 		str	r2, [fp, #-40]
 2725 0018 2C300BE5 		str	r3, [fp, #-44]
1914:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
1915:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
1916:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
1917:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Crt;
1918:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
1919:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
1920:../../Source/Kernel/rme_kernel.c **** 
1921:../../Source/Kernel/rme_kernel.c ****     /* See if the entry number is too big */
1922:../../Source/Kernel/rme_kernel.c ****     if((Entry_Num==0U)||(Entry_Num>RME_CID_2L))
 2726              		.loc 1 1922 7
 2727 001c 08309BE5 		ldr	r3, [fp, #8]
 2728 0020 000053E3 		cmp	r3, #0
 2729 0024 0200000A 		beq	.L165
 2730              		.loc 1 1922 23 discriminator 1
 2731 0028 08309BE5 		ldr	r3, [fp, #8]
 2732 002c 800053E3 		cmp	r3, #128
 2733 0030 0100009A 		bls	.L166
 2734              	.L165:
1923:../../Source/Kernel/rme_kernel.c ****     {
1924:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1925:../../Source/Kernel/rme_kernel.c ****         
1926:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
 2735              		.loc 1 1926 16
 2736 0034 0230E0E3 		mvn	r3, #2
 2737 0038 3D0100EA 		b	.L167
 2738              	.L166:
1927:../../Source/Kernel/rme_kernel.c ****     }
1928:../../Source/Kernel/rme_kernel.c ****     else
1929:../../Source/Kernel/rme_kernel.c ****     {
1930:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1931:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1932:../../Source/Kernel/rme_kernel.c ****     }
1933:../../Source/Kernel/rme_kernel.c **** 
1934:../../Source/Kernel/rme_kernel.c ****     /* Are we overrunning the size limit? */
1935:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
1936:../../Source/Kernel/rme_kernel.c ****     if(Entry_Num>RME_CPT_ENTRY_MAX)
1937:../../Source/Kernel/rme_kernel.c ****     {
1938:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1939:../../Source/Kernel/rme_kernel.c ****         
1940:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_RANGE;
1941:../../Source/Kernel/rme_kernel.c ****     }
1942:../../Source/Kernel/rme_kernel.c ****     else
1943:../../Source/Kernel/rme_kernel.c ****     {
1944:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1945:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1946:../../Source/Kernel/rme_kernel.c ****     }
1947:../../Source/Kernel/rme_kernel.c **** #endif
1948:../../Source/Kernel/rme_kernel.c **** 
1949:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
1950:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 2739              		.loc 1 1950 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 84


 2740 003c 24301BE5 		ldr	r3, [fp, #-36]
 2741 0040 803003E2 		and	r3, r3, #128
 2742 0044 000053E3 		cmp	r3, #0
 2743 0048 1C00001A 		bne	.L168
 2744              		.loc 1 1950 5 is_stmt 0 discriminator 1
 2745 004c 20301BE5 		ldr	r3, [fp, #-32]
 2746 0050 142093E5 		ldr	r2, [r3, #20]
 2747 0054 24301BE5 		ldr	r3, [fp, #-36]
 2748 0058 030052E1 		cmp	r2, r3
 2749 005c 0100008A 		bhi	.L169
 2750              		.loc 1 1950 5 discriminator 3
 2751 0060 0230E0E3 		mvn	r3, #2
 2752              		.loc 1 1950 5
 2753 0064 320100EA 		b	.L167
 2754              	.L169:
 2755              		.loc 1 1950 5 discriminator 4
 2756 0068 24301BE5 		ldr	r3, [fp, #-36]
 2757 006c 8322A0E1 		lsl	r2, r3, #5
 2758 0070 20301BE5 		ldr	r3, [fp, #-32]
 2759 0074 0C3093E5 		ldr	r3, [r3, #12]
 2760 0078 033082E0 		add	r3, r2, r3
 2761 007c 0C300BE5 		str	r3, [fp, #-12]
 2762 0080 0C301BE5 		ldr	r3, [fp, #-12]
 2763 0084 0300A0E1 		mov	r0, r3
 2764 0088 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2765 008c 14000BE5 		str	r0, [fp, #-20]
 2766              		.loc 1 1950 5 discriminator 1
 2767 0090 14301BE5 		ldr	r3, [fp, #-20]
 2768 0094 FF3803E2 		and	r3, r3, #16711680
 2769 0098 020853E3 		cmp	r3, #131072
 2770 009c 0100001A 		bne	.L170
 2771              		.loc 1 1950 5 discriminator 5
 2772 00a0 0830E0E3 		mvn	r3, #8
 2773              		.loc 1 1950 5
 2774 00a4 220100EA 		b	.L167
 2775              	.L170:
 2776              		.loc 1 1950 5 discriminator 6
 2777 00a8 14301BE5 		ldr	r3, [fp, #-20]
 2778 00ac 233CA0E1 		lsr	r3, r3, #24
 2779 00b0 030053E3 		cmp	r3, #3
 2780 00b4 3F00000A 		beq	.L171
 2781              		.loc 1 1950 5 discriminator 7
 2782 00b8 0130E0E3 		mvn	r3, #1
 2783              		.loc 1 1950 5
 2784 00bc 1C0100EA 		b	.L167
 2785              	.L168:
 2786              		.loc 1 1950 5 discriminator 2
 2787 00c0 24301BE5 		ldr	r3, [fp, #-36]
 2788 00c4 2324A0E1 		lsr	r2, r3, #8
 2789 00c8 20301BE5 		ldr	r3, [fp, #-32]
 2790 00cc 143093E5 		ldr	r3, [r3, #20]
 2791 00d0 030052E1 		cmp	r2, r3
 2792 00d4 0100003A 		bcc	.L172
 2793              		.loc 1 1950 5 discriminator 8
 2794 00d8 0230E0E3 		mvn	r3, #2
 2795              		.loc 1 1950 5
 2796 00dc 140100EA 		b	.L167
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 85


 2797              	.L172:
 2798              		.loc 1 1950 5 discriminator 9
 2799 00e0 24301BE5 		ldr	r3, [fp, #-36]
 2800 00e4 2334A0E1 		lsr	r3, r3, #8
 2801 00e8 8322A0E1 		lsl	r2, r3, #5
 2802 00ec 20301BE5 		ldr	r3, [fp, #-32]
 2803 00f0 0C3093E5 		ldr	r3, [r3, #12]
 2804 00f4 033082E0 		add	r3, r2, r3
 2805 00f8 0C300BE5 		str	r3, [fp, #-12]
 2806 00fc 0C301BE5 		ldr	r3, [fp, #-12]
 2807 0100 0300A0E1 		mov	r0, r3
 2808 0104 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2809 0108 14000BE5 		str	r0, [fp, #-20]
 2810              		.loc 1 1950 5 discriminator 1
 2811 010c 14301BE5 		ldr	r3, [fp, #-20]
 2812 0110 FF3803E2 		and	r3, r3, #16711680
 2813 0114 020853E3 		cmp	r3, #131072
 2814 0118 0100001A 		bne	.L173
 2815              		.loc 1 1950 5 discriminator 10
 2816 011c 0830E0E3 		mvn	r3, #8
 2817              		.loc 1 1950 5
 2818 0120 030100EA 		b	.L167
 2819              	.L173:
 2820              		.loc 1 1950 5 discriminator 11
 2821 0124 14301BE5 		ldr	r3, [fp, #-20]
 2822 0128 233CA0E1 		lsr	r3, r3, #24
 2823 012c 030053E3 		cmp	r3, #3
 2824 0130 0100000A 		beq	.L174
 2825              		.loc 1 1950 5 discriminator 12
 2826 0134 0130E0E3 		mvn	r3, #1
 2827              		.loc 1 1950 5
 2828 0138 FD0000EA 		b	.L167
 2829              	.L174:
 2830              		.loc 1 1950 5 discriminator 13
 2831 013c 24301BE5 		ldr	r3, [fp, #-36]
 2832 0140 7F2003E2 		and	r2, r3, #127
 2833 0144 0C301BE5 		ldr	r3, [fp, #-12]
 2834 0148 143093E5 		ldr	r3, [r3, #20]
 2835 014c 030052E1 		cmp	r2, r3
 2836 0150 0100003A 		bcc	.L175
 2837              		.loc 1 1950 5 discriminator 14
 2838 0154 0230E0E3 		mvn	r3, #2
 2839              		.loc 1 1950 5
 2840 0158 F50000EA 		b	.L167
 2841              	.L175:
 2842              		.loc 1 1950 5 discriminator 15
 2843 015c 24301BE5 		ldr	r3, [fp, #-36]
 2844 0160 7F3003E2 		and	r3, r3, #127
 2845 0164 8322A0E1 		lsl	r2, r3, #5
 2846 0168 0C301BE5 		ldr	r3, [fp, #-12]
 2847 016c 0C3093E5 		ldr	r3, [r3, #12]
 2848 0170 033082E0 		add	r3, r2, r3
 2849 0174 0C300BE5 		str	r3, [fp, #-12]
 2850 0178 0C301BE5 		ldr	r3, [fp, #-12]
 2851 017c 0300A0E1 		mov	r0, r3
 2852 0180 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2853 0184 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 86


 2854              		.loc 1 1950 5 discriminator 1
 2855 0188 14301BE5 		ldr	r3, [fp, #-20]
 2856 018c FF3803E2 		and	r3, r3, #16711680
 2857 0190 020853E3 		cmp	r3, #131072
 2858 0194 0100001A 		bne	.L176
 2859              		.loc 1 1950 5 discriminator 16
 2860 0198 0830E0E3 		mvn	r3, #8
 2861              		.loc 1 1950 5
 2862 019c E40000EA 		b	.L167
 2863              	.L176:
 2864              		.loc 1 1950 5 discriminator 17
 2865 01a0 14301BE5 		ldr	r3, [fp, #-20]
 2866 01a4 233CA0E1 		lsr	r3, r3, #24
 2867 01a8 030053E3 		cmp	r3, #3
 2868 01ac 0100000A 		beq	.L171
 2869              		.loc 1 1950 5 discriminator 18
 2870 01b0 0130E0E3 		mvn	r3, #1
 2871              		.loc 1 1950 5
 2872 01b4 DE0000EA 		b	.L167
 2873              	.L171:
1951:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
1952:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 2874              		.loc 1 1952 5 is_stmt 1
 2875 01b8 28301BE5 		ldr	r3, [fp, #-40]
 2876 01bc 803003E2 		and	r3, r3, #128
 2877 01c0 000053E3 		cmp	r3, #0
 2878 01c4 1C00001A 		bne	.L177
 2879              		.loc 1 1952 5 is_stmt 0 discriminator 1
 2880 01c8 20301BE5 		ldr	r3, [fp, #-32]
 2881 01cc 142093E5 		ldr	r2, [r3, #20]
 2882 01d0 28301BE5 		ldr	r3, [fp, #-40]
 2883 01d4 030052E1 		cmp	r2, r3
 2884 01d8 0100008A 		bhi	.L178
 2885              		.loc 1 1952 5 discriminator 3
 2886 01dc 0230E0E3 		mvn	r3, #2
 2887              		.loc 1 1952 5
 2888 01e0 D30000EA 		b	.L167
 2889              	.L178:
 2890              		.loc 1 1952 5 discriminator 4
 2891 01e4 28301BE5 		ldr	r3, [fp, #-40]
 2892 01e8 8322A0E1 		lsl	r2, r3, #5
 2893 01ec 20301BE5 		ldr	r3, [fp, #-32]
 2894 01f0 0C3093E5 		ldr	r3, [r3, #12]
 2895 01f4 033082E0 		add	r3, r2, r3
 2896 01f8 10300BE5 		str	r3, [fp, #-16]
 2897 01fc 10301BE5 		ldr	r3, [fp, #-16]
 2898 0200 0300A0E1 		mov	r0, r3
 2899 0204 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2900 0208 14000BE5 		str	r0, [fp, #-20]
 2901              		.loc 1 1952 5 discriminator 1
 2902 020c 14301BE5 		ldr	r3, [fp, #-20]
 2903 0210 FF3803E2 		and	r3, r3, #16711680
 2904 0214 020853E3 		cmp	r3, #131072
 2905 0218 0100001A 		bne	.L179
 2906              		.loc 1 1952 5 discriminator 5
 2907 021c 0830E0E3 		mvn	r3, #8
 2908              		.loc 1 1952 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 87


 2909 0220 C30000EA 		b	.L167
 2910              	.L179:
 2911              		.loc 1 1952 5 discriminator 6
 2912 0224 14301BE5 		ldr	r3, [fp, #-20]
 2913 0228 233CA0E1 		lsr	r3, r3, #24
 2914 022c 020053E3 		cmp	r3, #2
 2915 0230 3F00000A 		beq	.L180
 2916              		.loc 1 1952 5 discriminator 7
 2917 0234 0130E0E3 		mvn	r3, #1
 2918              		.loc 1 1952 5
 2919 0238 BD0000EA 		b	.L167
 2920              	.L177:
 2921              		.loc 1 1952 5 discriminator 2
 2922 023c 28301BE5 		ldr	r3, [fp, #-40]
 2923 0240 2324A0E1 		lsr	r2, r3, #8
 2924 0244 20301BE5 		ldr	r3, [fp, #-32]
 2925 0248 143093E5 		ldr	r3, [r3, #20]
 2926 024c 030052E1 		cmp	r2, r3
 2927 0250 0100003A 		bcc	.L181
 2928              		.loc 1 1952 5 discriminator 8
 2929 0254 0230E0E3 		mvn	r3, #2
 2930              		.loc 1 1952 5
 2931 0258 B50000EA 		b	.L167
 2932              	.L181:
 2933              		.loc 1 1952 5 discriminator 9
 2934 025c 28301BE5 		ldr	r3, [fp, #-40]
 2935 0260 2334A0E1 		lsr	r3, r3, #8
 2936 0264 8322A0E1 		lsl	r2, r3, #5
 2937 0268 20301BE5 		ldr	r3, [fp, #-32]
 2938 026c 0C3093E5 		ldr	r3, [r3, #12]
 2939 0270 033082E0 		add	r3, r2, r3
 2940 0274 10300BE5 		str	r3, [fp, #-16]
 2941 0278 10301BE5 		ldr	r3, [fp, #-16]
 2942 027c 0300A0E1 		mov	r0, r3
 2943 0280 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2944 0284 14000BE5 		str	r0, [fp, #-20]
 2945              		.loc 1 1952 5 discriminator 1
 2946 0288 14301BE5 		ldr	r3, [fp, #-20]
 2947 028c FF3803E2 		and	r3, r3, #16711680
 2948 0290 020853E3 		cmp	r3, #131072
 2949 0294 0100001A 		bne	.L182
 2950              		.loc 1 1952 5 discriminator 10
 2951 0298 0830E0E3 		mvn	r3, #8
 2952              		.loc 1 1952 5
 2953 029c A40000EA 		b	.L167
 2954              	.L182:
 2955              		.loc 1 1952 5 discriminator 11
 2956 02a0 14301BE5 		ldr	r3, [fp, #-20]
 2957 02a4 233CA0E1 		lsr	r3, r3, #24
 2958 02a8 030053E3 		cmp	r3, #3
 2959 02ac 0100000A 		beq	.L183
 2960              		.loc 1 1952 5 discriminator 12
 2961 02b0 0130E0E3 		mvn	r3, #1
 2962              		.loc 1 1952 5
 2963 02b4 9E0000EA 		b	.L167
 2964              	.L183:
 2965              		.loc 1 1952 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 88


 2966 02b8 28301BE5 		ldr	r3, [fp, #-40]
 2967 02bc 7F2003E2 		and	r2, r3, #127
 2968 02c0 10301BE5 		ldr	r3, [fp, #-16]
 2969 02c4 143093E5 		ldr	r3, [r3, #20]
 2970 02c8 030052E1 		cmp	r2, r3
 2971 02cc 0100003A 		bcc	.L184
 2972              		.loc 1 1952 5 discriminator 14
 2973 02d0 0230E0E3 		mvn	r3, #2
 2974              		.loc 1 1952 5
 2975 02d4 960000EA 		b	.L167
 2976              	.L184:
 2977              		.loc 1 1952 5 discriminator 15
 2978 02d8 28301BE5 		ldr	r3, [fp, #-40]
 2979 02dc 7F3003E2 		and	r3, r3, #127
 2980 02e0 8322A0E1 		lsl	r2, r3, #5
 2981 02e4 10301BE5 		ldr	r3, [fp, #-16]
 2982 02e8 0C3093E5 		ldr	r3, [r3, #12]
 2983 02ec 033082E0 		add	r3, r2, r3
 2984 02f0 10300BE5 		str	r3, [fp, #-16]
 2985 02f4 10301BE5 		ldr	r3, [fp, #-16]
 2986 02f8 0300A0E1 		mov	r0, r3
 2987 02fc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 2988 0300 14000BE5 		str	r0, [fp, #-20]
 2989              		.loc 1 1952 5 discriminator 1
 2990 0304 14301BE5 		ldr	r3, [fp, #-20]
 2991 0308 FF3803E2 		and	r3, r3, #16711680
 2992 030c 020853E3 		cmp	r3, #131072
 2993 0310 0100001A 		bne	.L185
 2994              		.loc 1 1952 5 discriminator 16
 2995 0314 0830E0E3 		mvn	r3, #8
 2996              		.loc 1 1952 5
 2997 0318 850000EA 		b	.L167
 2998              	.L185:
 2999              		.loc 1 1952 5 discriminator 17
 3000 031c 14301BE5 		ldr	r3, [fp, #-20]
 3001 0320 233CA0E1 		lsr	r3, r3, #24
 3002 0324 020053E3 		cmp	r3, #2
 3003 0328 0100000A 		beq	.L180
 3004              		.loc 1 1952 5 discriminator 18
 3005 032c 0130E0E3 		mvn	r3, #1
 3006              		.loc 1 1952 5
 3007 0330 7F0000EA 		b	.L167
 3008              	.L180:
1953:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
1954:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
1955:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 3009              		.loc 1 1955 5 is_stmt 1
 3010 0334 0C301BE5 		ldr	r3, [fp, #-12]
 3011 0338 083093E5 		ldr	r3, [r3, #8]
 3012 033c 013003E2 		and	r3, r3, #1
 3013 0340 000053E3 		cmp	r3, #0
 3014 0344 0100001A 		bne	.L186
 3015              		.loc 1 1955 5 is_stmt 0 discriminator 1
 3016 0348 0630E0E3 		mvn	r3, #6
 3017              		.loc 1 1955 5
 3018 034c 780000EA 		b	.L167
 3019              	.L186:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 89


1956:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
1957:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_CPT,Raddr,Vaddr,RME_CPT_SIZE(Entry_Num));
 3020              		.loc 1 1957 5 is_stmt 1
 3021 0350 10301BE5 		ldr	r3, [fp, #-16]
 3022 0354 083093E5 		ldr	r3, [r3, #8]
 3023 0358 013003E2 		and	r3, r3, #1
 3024 035c 000053E3 		cmp	r3, #0
 3025 0360 0100001A 		bne	.L187
 3026              		.loc 1 1957 5 is_stmt 0 discriminator 1
 3027 0364 0630E0E3 		mvn	r3, #6
 3028              		.loc 1 1957 5
 3029 0368 710000EA 		b	.L167
 3030              	.L187:
 3031              		.loc 1 1957 5 discriminator 2
 3032 036c 10301BE5 		ldr	r3, [fp, #-16]
 3033 0370 143093E5 		ldr	r3, [r3, #20]
 3034 0374 04209BE5 		ldr	r2, [fp, #4]
 3035 0378 033082E0 		add	r3, r2, r3
 3036 037c 18300BE5 		str	r3, [fp, #-24]
 3037 0380 18201BE5 		ldr	r2, [fp, #-24]
 3038 0384 04309BE5 		ldr	r3, [fp, #4]
 3039 0388 030052E1 		cmp	r2, r3
 3040 038c 0100002A 		bcs	.L188
 3041              		.loc 1 1957 5 discriminator 3
 3042 0390 0630E0E3 		mvn	r3, #6
 3043              		.loc 1 1957 5
 3044 0394 660000EA 		b	.L167
 3045              	.L188:
 3046              		.loc 1 1957 5 discriminator 4
 3047 0398 10301BE5 		ldr	r3, [fp, #-16]
 3048 039c 143093E5 		ldr	r3, [r3, #20]
 3049 03a0 18201BE5 		ldr	r2, [fp, #-24]
 3050 03a4 030052E1 		cmp	r2, r3
 3051 03a8 0100002A 		bcs	.L189
 3052              		.loc 1 1957 5 discriminator 5
 3053 03ac 0630E0E3 		mvn	r3, #6
 3054              		.loc 1 1957 5
 3055 03b0 5F0000EA 		b	.L167
 3056              	.L189:
 3057              		.loc 1 1957 5 discriminator 6
 3058 03b4 08309BE5 		ldr	r3, [fp, #8]
 3059 03b8 8322A0E1 		lsl	r2, r3, #5
 3060 03bc 18301BE5 		ldr	r3, [fp, #-24]
 3061 03c0 033082E0 		add	r3, r2, r3
 3062 03c4 18201BE5 		ldr	r2, [fp, #-24]
 3063 03c8 030052E1 		cmp	r2, r3
 3064 03cc 0100009A 		bls	.L190
 3065              		.loc 1 1957 5 discriminator 7
 3066 03d0 0630E0E3 		mvn	r3, #6
 3067              		.loc 1 1957 5
 3068 03d4 560000EA 		b	.L167
 3069              	.L190:
 3070              		.loc 1 1957 5 discriminator 8
 3071 03d8 10301BE5 		ldr	r3, [fp, #-16]
 3072 03dc 182093E5 		ldr	r2, [r3, #24]
 3073 03e0 08309BE5 		ldr	r3, [fp, #8]
 3074 03e4 8312A0E1 		lsl	r1, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 90


 3075 03e8 18301BE5 		ldr	r3, [fp, #-24]
 3076 03ec 033081E0 		add	r3, r1, r3
 3077 03f0 013043E2 		sub	r3, r3, #1
 3078 03f4 030052E1 		cmp	r2, r3
 3079 03f8 0100002A 		bcs	.L191
 3080              		.loc 1 1957 5 discriminator 9
 3081 03fc 0630E0E3 		mvn	r3, #6
 3082              		.loc 1 1957 5
 3083 0400 4B0000EA 		b	.L167
 3084              	.L191:
1958:../../Source/Kernel/rme_kernel.c **** 
1959:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
1960:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Crt,struct RME_Cap_Cpt*,Cpt_Crt);
 3085              		.loc 1 1960 5 is_stmt 1
 3086 0404 0C301BE5 		ldr	r3, [fp, #-12]
 3087 0408 142093E5 		ldr	r2, [r3, #20]
 3088 040c 2C301BE5 		ldr	r3, [fp, #-44]
 3089 0410 030052E1 		cmp	r2, r3
 3090 0414 0100008A 		bhi	.L192
 3091              		.loc 1 1960 5 is_stmt 0 discriminator 1
 3092 0418 0230E0E3 		mvn	r3, #2
 3093              		.loc 1 1960 5
 3094 041c 440000EA 		b	.L167
 3095              	.L192:
 3096              		.loc 1 1960 5 discriminator 2
 3097 0420 2C301BE5 		ldr	r3, [fp, #-44]
 3098 0424 8322A0E1 		lsl	r2, r3, #5
 3099 0428 0C301BE5 		ldr	r3, [fp, #-12]
 3100 042c 0C3093E5 		ldr	r3, [r3, #12]
 3101 0430 033082E0 		add	r3, r2, r3
 3102 0434 1C300BE5 		str	r3, [fp, #-28]
1961:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
1962:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Cpt_Crt);
 3103              		.loc 1 1962 5 is_stmt 1
 3104 0438 1C301BE5 		ldr	r3, [fp, #-28]
 3105 043c 0128A0E3 		mov	r2, #65536
 3106 0440 0010A0E3 		mov	r1, #0
 3107 0444 0300A0E1 		mov	r0, r3
 3108 0448 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3109 044c 0030A0E1 		mov	r3, r0
 3110              		.loc 1 1962 5 is_stmt 0 discriminator 1
 3111 0450 000053E3 		cmp	r3, #0
 3112 0454 0100001A 		bne	.L193
 3113 0458 0430E0E3 		mvn	r3, #4
 3114              		.loc 1 1962 5
 3115 045c 340000EA 		b	.L167
 3116              	.L193:
 3117              		.loc 1 1962 5 discriminator 2
 3118 0460 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3119 0464 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3120 0468 002093E5 		ldr	r2, [r3]
 3121 046c 1C301BE5 		ldr	r3, [fp, #-28]
 3122 0470 102083E5 		str	r2, [r3, #16]
1963:../../Source/Kernel/rme_kernel.c **** 
1964:../../Source/Kernel/rme_kernel.c ****     /* Try to mark this area as populated */
1965:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_CPT_SIZE(Entry_Num))<0)
 3123              		.loc 1 1965 8 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 91


 3124 0474 08309BE5 		ldr	r3, [fp, #8]
 3125 0478 8332A0E1 		lsl	r3, r3, #5
 3126 047c 0310A0E1 		mov	r1, r3
 3127 0480 18001BE5 		ldr	r0, [fp, #-24]
 3128 0484 FEFFFFEB 		bl	_RME_Kot_Mark
 3129 0488 0030A0E1 		mov	r3, r0
 3130              		.loc 1 1965 7 discriminator 1
 3131 048c 000053E3 		cmp	r3, #0
 3132 0490 050000AA 		bge	.L194
1966:../../Source/Kernel/rme_kernel.c ****     {
1967:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1968:../../Source/Kernel/rme_kernel.c ****         
1969:../../Source/Kernel/rme_kernel.c ****         /* Failure. Set the Type_Stat back to 0 and abort the creation process */
1970:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),0U);
 3133              		.loc 1 1970 9
 3134 0494 1C301BE5 		ldr	r3, [fp, #-28]
 3135 0498 0010A0E3 		mov	r1, #0
 3136 049c 0300A0E1 		mov	r0, r3
 3137 04a0 FEFFFFEB 		bl	__RME_A7A_Write_Release
1971:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 3138              		.loc 1 1971 16
 3139 04a4 0330E0E3 		mvn	r3, #3
 3140 04a8 210000EA 		b	.L167
 3141              	.L194:
1972:../../Source/Kernel/rme_kernel.c ****     }
1973:../../Source/Kernel/rme_kernel.c ****     else
1974:../../Source/Kernel/rme_kernel.c ****     {
1975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
1976:../../Source/Kernel/rme_kernel.c ****         /* No action required */
1977:../../Source/Kernel/rme_kernel.c ****     }
1978:../../Source/Kernel/rme_kernel.c **** 
1979:../../Source/Kernel/rme_kernel.c ****     /* Object init */
1980:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3142              		.loc 1 1980 14
 3143 04ac 0030A0E3 		mov	r3, #0
 3144 04b0 08300BE5 		str	r3, [fp, #-8]
 3145              		.loc 1 1980 5
 3146 04b4 090000EA 		b	.L195
 3147              	.L196:
1981:../../Source/Kernel/rme_kernel.c ****     {
1982:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CLEAR(&(((struct RME_Cap_Struct*)Vaddr)[Count]));
 3148              		.loc 1 1982 9
 3149 04b8 08301BE5 		ldr	r3, [fp, #-8]
 3150 04bc 8322A0E1 		lsl	r2, r3, #5
 3151 04c0 18301BE5 		ldr	r3, [fp, #-24]
 3152 04c4 033082E0 		add	r3, r2, r3
 3153 04c8 0320A0E1 		mov	r2, r3
 3154 04cc 0030A0E3 		mov	r3, #0
 3155 04d0 003082E5 		str	r3, [r2]
1980:../../Source/Kernel/rme_kernel.c ****     {
 3156              		.loc 1 1980 39 discriminator 3
 3157 04d4 08301BE5 		ldr	r3, [fp, #-8]
 3158 04d8 013083E2 		add	r3, r3, #1
 3159 04dc 08300BE5 		str	r3, [fp, #-8]
 3160              	.L195:
1980:../../Source/Kernel/rme_kernel.c ****     {
 3161              		.loc 1 1980 23 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 92


 3162 04e0 08201BE5 		ldr	r2, [fp, #-8]
 3163 04e4 08309BE5 		ldr	r3, [fp, #8]
 3164 04e8 030052E1 		cmp	r2, r3
 3165 04ec F1FFFF3A 		bcc	.L196
1983:../../Source/Kernel/rme_kernel.c ****     }
1984:../../Source/Kernel/rme_kernel.c **** 
1985:../../Source/Kernel/rme_kernel.c ****     /* Header init */
1986:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Root_Ref=0U;
 3166              		.loc 1 1986 27
 3167 04f0 1C301BE5 		ldr	r3, [fp, #-28]
 3168 04f4 0020A0E3 		mov	r2, #0
 3169 04f8 042083E5 		str	r2, [r3, #4]
1987:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Object=Vaddr;
 3170              		.loc 1 1987 25
 3171 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 3172 0500 18201BE5 		ldr	r2, [fp, #-24]
 3173 0504 0C2083E5 		str	r2, [r3, #12]
1988:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Head.Flag=RME_CPT_FLAG_ALL;
 3174              		.loc 1 1988 23
 3175 0508 1C301BE5 		ldr	r3, [fp, #-28]
 3176 050c FF20A0E3 		mov	r2, #255
 3177 0510 082083E5 		str	r2, [r3, #8]
1989:../../Source/Kernel/rme_kernel.c ****     
1990:../../Source/Kernel/rme_kernel.c ****     /* Info init */
1991:../../Source/Kernel/rme_kernel.c ****     Cpt_Crt->Entry_Num=Entry_Num;
 3178              		.loc 1 1991 23
 3179 0514 1C301BE5 		ldr	r3, [fp, #-28]
 3180 0518 08209BE5 		ldr	r2, [fp, #8]
 3181 051c 142083E5 		str	r2, [r3, #20]
1992:../../Source/Kernel/rme_kernel.c **** 
1993:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
1994:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Cpt_Crt->Head.Type_Stat),
 3182              		.loc 1 1994 5
 3183 0520 1C301BE5 		ldr	r3, [fp, #-28]
 3184 0524 0314A0E3 		mov	r1, #50331648
 3185 0528 0300A0E1 		mov	r0, r3
 3186 052c FEFFFFEB 		bl	__RME_A7A_Write_Release
1995:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_CPT,
1996:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
1997:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
1998:../../Source/Kernel/rme_kernel.c **** 
1999:../../Source/Kernel/rme_kernel.c ****     return 0;
 3187              		.loc 1 1999 12
 3188 0530 0030A0E3 		mov	r3, #0
 3189              	.L167:
2000:../../Source/Kernel/rme_kernel.c **** }
 3190              		.loc 1 2000 1
 3191 0534 0300A0E1 		mov	r0, r3
 3192 0538 04D04BE2 		sub	sp, fp, #4
 3193              		.cfi_def_cfa 13, 8
 3194              		@ sp needed
 3195 053c 0088BDE8 		pop	{fp, pc}
 3196              		.cfi_endproc
 3197              	.LFE24:
 3199              		.section	.rodata
 3200              		.align	2
 3201              	.LC6:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 93


 3202 003c 30303A34 		.ascii	"00:46:19\000"
 3202      363A3139 
 3202      00
 3203 0045 000000   		.align	2
 3204              	.LC7:
 3205 0048 4D617220 		.ascii	"Mar 21 2025\000"
 3205      32312032 
 3205      30323500 
 3206              		.align	2
 3207              	.LC8:
 3208 0054 2E2E2F2E 		.ascii	"../../Source/Kernel/rme_kernel.c\000"
 3208      2E2F536F 
 3208      75726365 
 3208      2F4B6572 
 3208      6E656C2F 
 3209              		.section	.text._RME_Cpt_Del,"ax",%progbits
 3210              		.align	2
 3211              		.syntax unified
 3212              		.arm
 3214              	_RME_Cpt_Del:
 3215              	.LFB25:
2001:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Crt *************************************************/
2002:../../Source/Kernel/rme_kernel.c **** 
2003:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Del ******************************************************
2004:../../Source/Kernel/rme_kernel.c **** Description : Delete a layer of capability table.
2005:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2006:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Del - The capability table that contains the
2007:../../Source/Kernel/rme_kernel.c ****                                       cap to captbl.
2008:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2009:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Del - The capability to the capability table to be
2010:../../Source/Kernel/rme_kernel.c ****                                   deleted.
2011:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2012:../../Source/Kernel/rme_kernel.c **** Output      : None.
2013:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2014:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2015:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Del(struct RME_Cap_Cpt* Cpt,
2016:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Del,
2017:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Del)
2018:../../Source/Kernel/rme_kernel.c **** {
 3216              		.loc 1 2018 1
 3217              		.cfi_startproc
 3218              		@ args = 0, pretend = 0, frame = 48
 3219              		@ frame_needed = 1, uses_anonymous_args = 0
 3220 0000 00482DE9 		push	{fp, lr}
 3221              		.cfi_def_cfa_offset 8
 3222              		.cfi_offset 11, -8
 3223              		.cfi_offset 14, -4
 3224 0004 04B08DE2 		add	fp, sp, #4
 3225              		.cfi_def_cfa 11, 4
 3226 0008 30D04DE2 		sub	sp, sp, #48
 3227 000c 28000BE5 		str	r0, [fp, #-40]
 3228 0010 2C100BE5 		str	r1, [fp, #-44]
 3229 0014 30200BE5 		str	r2, [fp, #-48]
2019:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
2020:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Entry_Num;
2021:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2022:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Cpt* Cpt_Del;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 94


2023:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Struct* Table;
2024:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2025:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
2026:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
2027:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
2028:../../Source/Kernel/rme_kernel.c ****     
2029:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2030:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Del,RME_CAP_TYPE_CPT,
 3230              		.loc 1 2030 5
 3231 0018 2C301BE5 		ldr	r3, [fp, #-44]
 3232 001c 803003E2 		and	r3, r3, #128
 3233 0020 000053E3 		cmp	r3, #0
 3234 0024 1C00001A 		bne	.L198
 3235              		.loc 1 2030 5 is_stmt 0 discriminator 1
 3236 0028 28301BE5 		ldr	r3, [fp, #-40]
 3237 002c 142093E5 		ldr	r2, [r3, #20]
 3238 0030 2C301BE5 		ldr	r3, [fp, #-44]
 3239 0034 030052E1 		cmp	r2, r3
 3240 0038 0100008A 		bhi	.L199
 3241              		.loc 1 2030 5 discriminator 3
 3242 003c 0230E0E3 		mvn	r3, #2
 3243              		.loc 1 2030 5
 3244 0040 E10000EA 		b	.L200
 3245              	.L199:
 3246              		.loc 1 2030 5 discriminator 4
 3247 0044 2C301BE5 		ldr	r3, [fp, #-44]
 3248 0048 8322A0E1 		lsl	r2, r3, #5
 3249 004c 28301BE5 		ldr	r3, [fp, #-40]
 3250 0050 0C3093E5 		ldr	r3, [r3, #12]
 3251 0054 033082E0 		add	r3, r2, r3
 3252 0058 0C300BE5 		str	r3, [fp, #-12]
 3253 005c 0C301BE5 		ldr	r3, [fp, #-12]
 3254 0060 0300A0E1 		mov	r0, r3
 3255 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3256 0068 10000BE5 		str	r0, [fp, #-16]
 3257              		.loc 1 2030 5 discriminator 1
 3258 006c 10301BE5 		ldr	r3, [fp, #-16]
 3259 0070 FF3803E2 		and	r3, r3, #16711680
 3260 0074 020853E3 		cmp	r3, #131072
 3261 0078 0100001A 		bne	.L201
 3262              		.loc 1 2030 5 discriminator 5
 3263 007c 0830E0E3 		mvn	r3, #8
 3264              		.loc 1 2030 5
 3265 0080 D10000EA 		b	.L200
 3266              	.L201:
 3267              		.loc 1 2030 5 discriminator 6
 3268 0084 10301BE5 		ldr	r3, [fp, #-16]
 3269 0088 233CA0E1 		lsr	r3, r3, #24
 3270 008c 030053E3 		cmp	r3, #3
 3271 0090 3F00000A 		beq	.L202
 3272              		.loc 1 2030 5 discriminator 7
 3273 0094 0130E0E3 		mvn	r3, #1
 3274              		.loc 1 2030 5
 3275 0098 CB0000EA 		b	.L200
 3276              	.L198:
 3277              		.loc 1 2030 5 discriminator 2
 3278 009c 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 95


 3279 00a0 2324A0E1 		lsr	r2, r3, #8
 3280 00a4 28301BE5 		ldr	r3, [fp, #-40]
 3281 00a8 143093E5 		ldr	r3, [r3, #20]
 3282 00ac 030052E1 		cmp	r2, r3
 3283 00b0 0100003A 		bcc	.L203
 3284              		.loc 1 2030 5 discriminator 8
 3285 00b4 0230E0E3 		mvn	r3, #2
 3286              		.loc 1 2030 5
 3287 00b8 C30000EA 		b	.L200
 3288              	.L203:
 3289              		.loc 1 2030 5 discriminator 9
 3290 00bc 2C301BE5 		ldr	r3, [fp, #-44]
 3291 00c0 2334A0E1 		lsr	r3, r3, #8
 3292 00c4 8322A0E1 		lsl	r2, r3, #5
 3293 00c8 28301BE5 		ldr	r3, [fp, #-40]
 3294 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3295 00d0 033082E0 		add	r3, r2, r3
 3296 00d4 0C300BE5 		str	r3, [fp, #-12]
 3297 00d8 0C301BE5 		ldr	r3, [fp, #-12]
 3298 00dc 0300A0E1 		mov	r0, r3
 3299 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3300 00e4 10000BE5 		str	r0, [fp, #-16]
 3301              		.loc 1 2030 5 discriminator 1
 3302 00e8 10301BE5 		ldr	r3, [fp, #-16]
 3303 00ec FF3803E2 		and	r3, r3, #16711680
 3304 00f0 020853E3 		cmp	r3, #131072
 3305 00f4 0100001A 		bne	.L204
 3306              		.loc 1 2030 5 discriminator 10
 3307 00f8 0830E0E3 		mvn	r3, #8
 3308              		.loc 1 2030 5
 3309 00fc B20000EA 		b	.L200
 3310              	.L204:
 3311              		.loc 1 2030 5 discriminator 11
 3312 0100 10301BE5 		ldr	r3, [fp, #-16]
 3313 0104 233CA0E1 		lsr	r3, r3, #24
 3314 0108 030053E3 		cmp	r3, #3
 3315 010c 0100000A 		beq	.L205
 3316              		.loc 1 2030 5 discriminator 12
 3317 0110 0130E0E3 		mvn	r3, #1
 3318              		.loc 1 2030 5
 3319 0114 AC0000EA 		b	.L200
 3320              	.L205:
 3321              		.loc 1 2030 5 discriminator 13
 3322 0118 2C301BE5 		ldr	r3, [fp, #-44]
 3323 011c 7F2003E2 		and	r2, r3, #127
 3324 0120 0C301BE5 		ldr	r3, [fp, #-12]
 3325 0124 143093E5 		ldr	r3, [r3, #20]
 3326 0128 030052E1 		cmp	r2, r3
 3327 012c 0100003A 		bcc	.L206
 3328              		.loc 1 2030 5 discriminator 14
 3329 0130 0230E0E3 		mvn	r3, #2
 3330              		.loc 1 2030 5
 3331 0134 A40000EA 		b	.L200
 3332              	.L206:
 3333              		.loc 1 2030 5 discriminator 15
 3334 0138 2C301BE5 		ldr	r3, [fp, #-44]
 3335 013c 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 96


 3336 0140 8322A0E1 		lsl	r2, r3, #5
 3337 0144 0C301BE5 		ldr	r3, [fp, #-12]
 3338 0148 0C3093E5 		ldr	r3, [r3, #12]
 3339 014c 033082E0 		add	r3, r2, r3
 3340 0150 0C300BE5 		str	r3, [fp, #-12]
 3341 0154 0C301BE5 		ldr	r3, [fp, #-12]
 3342 0158 0300A0E1 		mov	r0, r3
 3343 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3344 0160 10000BE5 		str	r0, [fp, #-16]
 3345              		.loc 1 2030 5 discriminator 1
 3346 0164 10301BE5 		ldr	r3, [fp, #-16]
 3347 0168 FF3803E2 		and	r3, r3, #16711680
 3348 016c 020853E3 		cmp	r3, #131072
 3349 0170 0100001A 		bne	.L207
 3350              		.loc 1 2030 5 discriminator 16
 3351 0174 0830E0E3 		mvn	r3, #8
 3352              		.loc 1 2030 5
 3353 0178 930000EA 		b	.L200
 3354              	.L207:
 3355              		.loc 1 2030 5 discriminator 17
 3356 017c 10301BE5 		ldr	r3, [fp, #-16]
 3357 0180 233CA0E1 		lsr	r3, r3, #24
 3358 0184 030053E3 		cmp	r3, #3
 3359 0188 0100000A 		beq	.L202
 3360              		.loc 1 2030 5 discriminator 18
 3361 018c 0130E0E3 		mvn	r3, #1
 3362              		.loc 1 2030 5
 3363 0190 8D0000EA 		b	.L200
 3364              	.L202:
2031:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2032:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2033:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 3365              		.loc 1 2033 5 is_stmt 1
 3366 0194 0C301BE5 		ldr	r3, [fp, #-12]
 3367 0198 083093E5 		ldr	r3, [r3, #8]
 3368 019c 023003E2 		and	r3, r3, #2
 3369 01a0 000053E3 		cmp	r3, #0
 3370 01a4 0100001A 		bne	.L208
 3371              		.loc 1 2033 5 is_stmt 0 discriminator 1
 3372 01a8 0630E0E3 		mvn	r3, #6
 3373              		.loc 1 2033 5
 3374 01ac 860000EA 		b	.L200
 3375              	.L208:
2034:../../Source/Kernel/rme_kernel.c ****     
2035:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2036:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Del,struct RME_Cap_Cpt*,Cpt_Del);
 3376              		.loc 1 2036 5 is_stmt 1
 3377 01b0 0C301BE5 		ldr	r3, [fp, #-12]
 3378 01b4 142093E5 		ldr	r2, [r3, #20]
 3379 01b8 30301BE5 		ldr	r3, [fp, #-48]
 3380 01bc 030052E1 		cmp	r2, r3
 3381 01c0 0100008A 		bhi	.L209
 3382              		.loc 1 2036 5 is_stmt 0 discriminator 1
 3383 01c4 0230E0E3 		mvn	r3, #2
 3384              		.loc 1 2036 5
 3385 01c8 7F0000EA 		b	.L200
 3386              	.L209:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 97


 3387              		.loc 1 2036 5 discriminator 2
 3388 01cc 30301BE5 		ldr	r3, [fp, #-48]
 3389 01d0 8322A0E1 		lsl	r2, r3, #5
 3390 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 3391 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3392 01dc 033082E0 		add	r3, r2, r3
 3393 01e0 14300BE5 		str	r3, [fp, #-20]
2037:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
2038:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Cpt_Del,Type_Stat,RME_CAP_TYPE_CPT);
 3394              		.loc 1 2038 5 is_stmt 1
 3395 01e4 14301BE5 		ldr	r3, [fp, #-20]
 3396 01e8 0300A0E1 		mov	r0, r3
 3397 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3398 01f0 10000BE5 		str	r0, [fp, #-16]
 3399              		.loc 1 2038 5 is_stmt 0 discriminator 1
 3400 01f4 10301BE5 		ldr	r3, [fp, #-16]
 3401 01f8 FF3803E2 		and	r3, r3, #16711680
 3402 01fc 020853E3 		cmp	r3, #131072
 3403 0200 0100000A 		beq	.L210
 3404 0204 0830E0E3 		mvn	r3, #8
 3405              		.loc 1 2038 5
 3406 0208 6F0000EA 		b	.L200
 3407              	.L210:
 3408              		.loc 1 2038 5 discriminator 2
 3409 020c 10301BE5 		ldr	r3, [fp, #-16]
 3410 0210 233CA0E1 		lsr	r3, r3, #24
 3411 0214 030053E3 		cmp	r3, #3
 3412 0218 0100000A 		beq	.L211
 3413              		.loc 1 2038 5 discriminator 3
 3414 021c 0130E0E3 		mvn	r3, #1
 3415              		.loc 1 2038 5
 3416 0220 690000EA 		b	.L200
 3417              	.L211:
 3418              		.loc 1 2038 5 discriminator 4
 3419 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3420 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3421 022c 002093E5 		ldr	r2, [r3]
 3422 0230 14301BE5 		ldr	r3, [fp, #-20]
 3423 0234 103093E5 		ldr	r3, [r3, #16]
 3424 0238 0310A0E1 		mov	r1, r3
 3425 023c 0200A0E1 		mov	r0, r2
 3426 0240 FEFFFFEB 		bl	_RME_Diff
 3427 0244 0030A0E1 		mov	r3, r0
 3428              		.loc 1 2038 5 discriminator 1
 3429 0248 0A0053E3 		cmp	r3, #10
 3430 024c 0100008A 		bhi	.L212
 3431              		.loc 1 2038 5 discriminator 5
 3432 0250 0730E0E3 		mvn	r3, #7
 3433              		.loc 1 2038 5
 3434 0254 5C0000EA 		b	.L200
 3435              	.L212:
 3436              		.loc 1 2038 5 discriminator 6
 3437 0258 14301BE5 		ldr	r3, [fp, #-20]
 3438 025c 043093E5 		ldr	r3, [r3, #4]
 3439 0260 000053E3 		cmp	r3, #0
 3440 0264 0B00000A 		beq	.L213
 3441              		.loc 1 2038 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 98


 3442 0268 10301BE5 		ldr	r3, [fp, #-16]
 3443 026c 7330FFE6 		uxth	r3, r3
 3444 0270 000053E3 		cmp	r3, #0
 3445 0274 0500001A 		bne	.L214
 3446              		.loc 1 2038 5 discriminator 9
 3447 0278 14001BE5 		ldr	r0, [fp, #-20]
 3448 027c 10301BE5 		ldr	r3, [fp, #-16]
 3449 0280 FF38C3E3 		bic	r3, r3, #16711680
 3450 0284 0320A0E1 		mov	r2, r3
 3451 0288 10101BE5 		ldr	r1, [fp, #-16]
 3452 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3453              	.L214:
 3454              		.loc 1 2038 5 discriminator 11
 3455 0290 0530E0E3 		mvn	r3, #5
 3456              		.loc 1 2038 5
 3457 0294 4C0000EA 		b	.L200
 3458              	.L213:
 3459              		.loc 1 2038 5 discriminator 8
 3460 0298 10301BE5 		ldr	r3, [fp, #-16]
 3461 029c 7330FFE6 		uxth	r3, r3
 3462 02a0 000053E3 		cmp	r3, #0
 3463 02a4 0800000A 		beq	.L215
 3464              		.loc 1 2038 5 discriminator 12
 3465 02a8 003000E3 		movw	r3, #:lower16:.LC6
 3466 02ac 003040E3 		movt	r3, #:upper16:.LC6
 3467 02b0 002000E3 		movw	r2, #:lower16:.LC7
 3468 02b4 002040E3 		movt	r2, #:upper16:.LC7
 3469 02b8 F61700E3 		movw	r1, #2038
 3470 02bc 000000E3 		movw	r0, #:lower16:.LC8
 3471 02c0 000040E3 		movt	r0, #:upper16:.LC8
 3472 02c4 FEFFFFEB 		bl	RME_Log
 3473              	.L216:
 3474              		.loc 1 2038 5
 3475 02c8 FEFFFFEA 		b	.L216
 3476              	.L215:
2039:../../Source/Kernel/rme_kernel.c ****     
2040:../../Source/Kernel/rme_kernel.c ****     /* Is there any capability in this capability table? If yes, we cannot destroy it.
2041:../../Source/Kernel/rme_kernel.c ****      * We will check every slot to make sure nothing is there. This is surely,
2042:../../Source/Kernel/rme_kernel.c ****      * predictable but not so perfect. So, if the time of such operations is to be 
2043:../../Source/Kernel/rme_kernel.c ****      * bounded, the user must control the maximum number of entries in the table
2044:../../Source/Kernel/rme_kernel.c ****      * by configuring RME_CPT_ENTRY_MAX to a non-zero value. */
2045:../../Source/Kernel/rme_kernel.c ****     Table=RME_CAP_GETOBJ(Cpt_Del,struct RME_Cap_Struct*);
 3477              		.loc 1 2045 11 is_stmt 1
 3478 02cc 14301BE5 		ldr	r3, [fp, #-20]
 3479 02d0 0C3093E5 		ldr	r3, [r3, #12]
 3480              		.loc 1 2045 10
 3481 02d4 18300BE5 		str	r3, [fp, #-24]
2046:../../Source/Kernel/rme_kernel.c ****     Entry_Num=Cpt_Del->Entry_Num;
 3482              		.loc 1 2046 14
 3483 02d8 14301BE5 		ldr	r3, [fp, #-20]
 3484 02dc 143093E5 		ldr	r3, [r3, #20]
 3485 02e0 1C300BE5 		str	r3, [fp, #-28]
2047:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Entry_Num;Count++)
 3486              		.loc 1 2047 14
 3487 02e4 0030A0E3 		mov	r3, #0
 3488 02e8 08300BE5 		str	r3, [fp, #-8]
 3489              		.loc 1 2047 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 99


 3490 02ec 110000EA 		b	.L217
 3491              	.L219:
2048:../../Source/Kernel/rme_kernel.c ****     {
2049:../../Source/Kernel/rme_kernel.c ****         if(Table[Count].Head.Type_Stat!=0U)
 3492              		.loc 1 2049 17
 3493 02f0 08301BE5 		ldr	r3, [fp, #-8]
 3494 02f4 8332A0E1 		lsl	r3, r3, #5
 3495 02f8 18201BE5 		ldr	r2, [fp, #-24]
 3496 02fc 033082E0 		add	r3, r2, r3
 3497              		.loc 1 2049 29
 3498 0300 003093E5 		ldr	r3, [r3]
 3499              		.loc 1 2049 11
 3500 0304 000053E3 		cmp	r3, #0
 3501 0308 0700000A 		beq	.L218
2050:../../Source/Kernel/rme_kernel.c ****         {
2051:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2052:../../Source/Kernel/rme_kernel.c ****             
2053:../../Source/Kernel/rme_kernel.c ****             RME_CAP_DEFROST(Cpt_Del,Type_Stat);
 3502              		.loc 1 2053 13
 3503 030c 14001BE5 		ldr	r0, [fp, #-20]
 3504 0310 10301BE5 		ldr	r3, [fp, #-16]
 3505 0314 FF38C3E3 		bic	r3, r3, #16711680
 3506 0318 0320A0E1 		mov	r2, r3
 3507 031c 10101BE5 		ldr	r1, [fp, #-16]
 3508 0320 FEFFFFEB 		bl	_RME_Comp_Swap_Single
2054:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_EXIST;
 3509              		.loc 1 2054 20
 3510 0324 0430E0E3 		mvn	r3, #4
 3511 0328 270000EA 		b	.L200
 3512              	.L218:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3513              		.loc 1 2047 39 discriminator 2
 3514 032c 08301BE5 		ldr	r3, [fp, #-8]
 3515 0330 013083E2 		add	r3, r3, #1
 3516 0334 08300BE5 		str	r3, [fp, #-8]
 3517              	.L217:
2047:../../Source/Kernel/rme_kernel.c ****     {
 3518              		.loc 1 2047 23 discriminator 1
 3519 0338 08201BE5 		ldr	r2, [fp, #-8]
 3520 033c 1C301BE5 		ldr	r3, [fp, #-28]
 3521 0340 030052E1 		cmp	r2, r3
 3522 0344 E9FFFF3A 		bcc	.L219
2055:../../Source/Kernel/rme_kernel.c ****         }
2056:../../Source/Kernel/rme_kernel.c ****         else
2057:../../Source/Kernel/rme_kernel.c ****         {
2058:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2059:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2060:../../Source/Kernel/rme_kernel.c ****         }
2061:../../Source/Kernel/rme_kernel.c ****     }
2062:../../Source/Kernel/rme_kernel.c ****     
2063:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
2064:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Cpt_Del,rme_ptr_t);
 3523              		.loc 1 2064 11
 3524 0348 14301BE5 		ldr	r3, [fp, #-20]
 3525 034c 0C3093E5 		ldr	r3, [r3, #12]
 3526 0350 20300BE5 		str	r3, [fp, #-32]
2065:../../Source/Kernel/rme_kernel.c ****     Size=RME_CPT_SIZE(Cpt_Del->Entry_Num);
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 100


 3527              		.loc 1 2065 10
 3528 0354 14301BE5 		ldr	r3, [fp, #-20]
 3529 0358 143093E5 		ldr	r3, [r3, #20]
 3530              		.loc 1 2065 9
 3531 035c 8332A0E1 		lsl	r3, r3, #5
 3532 0360 24300BE5 		str	r3, [fp, #-36]
2066:../../Source/Kernel/rme_kernel.c **** 
2067:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
2068:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Cpt_Del,Type_Stat);
 3533              		.loc 1 2068 5
 3534 0364 14301BE5 		ldr	r3, [fp, #-20]
 3535 0368 0020A0E3 		mov	r2, #0
 3536 036c 10101BE5 		ldr	r1, [fp, #-16]
 3537 0370 0300A0E1 		mov	r0, r3
 3538 0374 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 3539 0378 0030A0E1 		mov	r3, r0
 3540              		.loc 1 2068 5 is_stmt 0 discriminator 1
 3541 037c 000053E3 		cmp	r3, #0
 3542 0380 0100001A 		bne	.L220
 3543 0384 0030E0E3 		mvn	r3, #0
 3544              		.loc 1 2068 5
 3545 0388 0F0000EA 		b	.L200
 3546              	.L220:
2069:../../Source/Kernel/rme_kernel.c **** 
2070:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
2071:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Size)==0);
 3547              		.loc 1 2071 5 is_stmt 1
 3548 038c 24101BE5 		ldr	r1, [fp, #-36]
 3549 0390 20001BE5 		ldr	r0, [fp, #-32]
 3550 0394 FEFFFFEB 		bl	_RME_Kot_Erase
 3551 0398 0030A0E1 		mov	r3, r0
 3552              		.loc 1 2071 5 is_stmt 0 discriminator 1
 3553 039c 000053E3 		cmp	r3, #0
 3554 03a0 0800000A 		beq	.L221
 3555 03a4 003000E3 		movw	r3, #:lower16:.LC6
 3556 03a8 003040E3 		movt	r3, #:upper16:.LC6
 3557 03ac 002000E3 		movw	r2, #:lower16:.LC7
 3558 03b0 002040E3 		movt	r2, #:upper16:.LC7
 3559 03b4 171800E3 		movw	r1, #2071
 3560 03b8 000000E3 		movw	r0, #:lower16:.LC8
 3561 03bc 000040E3 		movt	r0, #:upper16:.LC8
 3562 03c0 FEFFFFEB 		bl	RME_Log
 3563              	.L222:
 3564              		.loc 1 2071 5
 3565 03c4 FEFFFFEA 		b	.L222
 3566              	.L221:
2072:../../Source/Kernel/rme_kernel.c ****     
2073:../../Source/Kernel/rme_kernel.c ****     return 0;
 3567              		.loc 1 2073 12 is_stmt 1
 3568 03c8 0030A0E3 		mov	r3, #0
 3569              	.L200:
2074:../../Source/Kernel/rme_kernel.c **** }
 3570              		.loc 1 2074 1
 3571 03cc 0300A0E1 		mov	r0, r3
 3572 03d0 04D04BE2 		sub	sp, fp, #4
 3573              		.cfi_def_cfa 13, 8
 3574              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 101


 3575 03d4 0088BDE8 		pop	{fp, pc}
 3576              		.cfi_endproc
 3577              	.LFE25:
 3579              		.section	.text._RME_Cpt_Frz,"ax",%progbits
 3580              		.align	2
 3581              		.syntax unified
 3582              		.arm
 3584              	_RME_Cpt_Frz:
 3585              	.LFB26:
2075:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Del *************************************************/
2076:../../Source/Kernel/rme_kernel.c **** 
2077:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Frz ******************************************************
2078:../../Source/Kernel/rme_kernel.c **** Description : Freeze a capability in the capability table.
2079:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2080:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Frz  - The capability table containing the cap
2081:../../Source/Kernel/rme_kernel.c ****                                        to captbl for this operation.
2082:../../Source/Kernel/rme_kernel.c ****                                        2-Level.
2083:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Frz - The cap to the kernel object being freezed.
2084:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2085:../../Source/Kernel/rme_kernel.c **** Output      : None.
2086:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2087:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2088:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Frz(struct RME_Cap_Cpt* Cpt,
2089:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Frz,
2090:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Frz)
2091:../../Source/Kernel/rme_kernel.c **** {
 3586              		.loc 1 2091 1
 3587              		.cfi_startproc
 3588              		@ args = 0, pretend = 0, frame = 32
 3589              		@ frame_needed = 1, uses_anonymous_args = 0
 3590 0000 00482DE9 		push	{fp, lr}
 3591              		.cfi_def_cfa_offset 8
 3592              		.cfi_offset 11, -8
 3593              		.cfi_offset 14, -4
 3594 0004 04B08DE2 		add	fp, sp, #4
 3595              		.cfi_def_cfa 11, 4
 3596 0008 20D04DE2 		sub	sp, sp, #32
 3597 000c 18000BE5 		str	r0, [fp, #-24]
 3598 0010 1C100BE5 		str	r1, [fp, #-28]
 3599 0014 20200BE5 		str	r2, [fp, #-32]
2092:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2093:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Frz;
2094:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2095:../../Source/Kernel/rme_kernel.c ****     
2096:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2097:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Frz,RME_CAP_TYPE_CPT,
 3600              		.loc 1 2097 5
 3601 0018 1C301BE5 		ldr	r3, [fp, #-28]
 3602 001c 803003E2 		and	r3, r3, #128
 3603 0020 000053E3 		cmp	r3, #0
 3604 0024 1C00001A 		bne	.L224
 3605              		.loc 1 2097 5 is_stmt 0 discriminator 1
 3606 0028 18301BE5 		ldr	r3, [fp, #-24]
 3607 002c 142093E5 		ldr	r2, [r3, #20]
 3608 0030 1C301BE5 		ldr	r3, [fp, #-28]
 3609 0034 030052E1 		cmp	r2, r3
 3610 0038 0100008A 		bhi	.L225
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 102


 3611              		.loc 1 2097 5 discriminator 3
 3612 003c 0230E0E3 		mvn	r3, #2
 3613              		.loc 1 2097 5
 3614 0040 9B0000EA 		b	.L226
 3615              	.L225:
 3616              		.loc 1 2097 5 discriminator 4
 3617 0044 1C301BE5 		ldr	r3, [fp, #-28]
 3618 0048 8322A0E1 		lsl	r2, r3, #5
 3619 004c 18301BE5 		ldr	r3, [fp, #-24]
 3620 0050 0C3093E5 		ldr	r3, [r3, #12]
 3621 0054 033082E0 		add	r3, r2, r3
 3622 0058 08300BE5 		str	r3, [fp, #-8]
 3623 005c 08301BE5 		ldr	r3, [fp, #-8]
 3624 0060 0300A0E1 		mov	r0, r3
 3625 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3626 0068 0C000BE5 		str	r0, [fp, #-12]
 3627              		.loc 1 2097 5 discriminator 1
 3628 006c 0C301BE5 		ldr	r3, [fp, #-12]
 3629 0070 FF3803E2 		and	r3, r3, #16711680
 3630 0074 020853E3 		cmp	r3, #131072
 3631 0078 0100001A 		bne	.L227
 3632              		.loc 1 2097 5 discriminator 5
 3633 007c 0830E0E3 		mvn	r3, #8
 3634              		.loc 1 2097 5
 3635 0080 8B0000EA 		b	.L226
 3636              	.L227:
 3637              		.loc 1 2097 5 discriminator 6
 3638 0084 0C301BE5 		ldr	r3, [fp, #-12]
 3639 0088 233CA0E1 		lsr	r3, r3, #24
 3640 008c 030053E3 		cmp	r3, #3
 3641 0090 3F00000A 		beq	.L228
 3642              		.loc 1 2097 5 discriminator 7
 3643 0094 0130E0E3 		mvn	r3, #1
 3644              		.loc 1 2097 5
 3645 0098 850000EA 		b	.L226
 3646              	.L224:
 3647              		.loc 1 2097 5 discriminator 2
 3648 009c 1C301BE5 		ldr	r3, [fp, #-28]
 3649 00a0 2324A0E1 		lsr	r2, r3, #8
 3650 00a4 18301BE5 		ldr	r3, [fp, #-24]
 3651 00a8 143093E5 		ldr	r3, [r3, #20]
 3652 00ac 030052E1 		cmp	r2, r3
 3653 00b0 0100003A 		bcc	.L229
 3654              		.loc 1 2097 5 discriminator 8
 3655 00b4 0230E0E3 		mvn	r3, #2
 3656              		.loc 1 2097 5
 3657 00b8 7D0000EA 		b	.L226
 3658              	.L229:
 3659              		.loc 1 2097 5 discriminator 9
 3660 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 3661 00c0 2334A0E1 		lsr	r3, r3, #8
 3662 00c4 8322A0E1 		lsl	r2, r3, #5
 3663 00c8 18301BE5 		ldr	r3, [fp, #-24]
 3664 00cc 0C3093E5 		ldr	r3, [r3, #12]
 3665 00d0 033082E0 		add	r3, r2, r3
 3666 00d4 08300BE5 		str	r3, [fp, #-8]
 3667 00d8 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 103


 3668 00dc 0300A0E1 		mov	r0, r3
 3669 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3670 00e4 0C000BE5 		str	r0, [fp, #-12]
 3671              		.loc 1 2097 5 discriminator 1
 3672 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 3673 00ec FF3803E2 		and	r3, r3, #16711680
 3674 00f0 020853E3 		cmp	r3, #131072
 3675 00f4 0100001A 		bne	.L230
 3676              		.loc 1 2097 5 discriminator 10
 3677 00f8 0830E0E3 		mvn	r3, #8
 3678              		.loc 1 2097 5
 3679 00fc 6C0000EA 		b	.L226
 3680              	.L230:
 3681              		.loc 1 2097 5 discriminator 11
 3682 0100 0C301BE5 		ldr	r3, [fp, #-12]
 3683 0104 233CA0E1 		lsr	r3, r3, #24
 3684 0108 030053E3 		cmp	r3, #3
 3685 010c 0100000A 		beq	.L231
 3686              		.loc 1 2097 5 discriminator 12
 3687 0110 0130E0E3 		mvn	r3, #1
 3688              		.loc 1 2097 5
 3689 0114 660000EA 		b	.L226
 3690              	.L231:
 3691              		.loc 1 2097 5 discriminator 13
 3692 0118 1C301BE5 		ldr	r3, [fp, #-28]
 3693 011c 7F2003E2 		and	r2, r3, #127
 3694 0120 08301BE5 		ldr	r3, [fp, #-8]
 3695 0124 143093E5 		ldr	r3, [r3, #20]
 3696 0128 030052E1 		cmp	r2, r3
 3697 012c 0100003A 		bcc	.L232
 3698              		.loc 1 2097 5 discriminator 14
 3699 0130 0230E0E3 		mvn	r3, #2
 3700              		.loc 1 2097 5
 3701 0134 5E0000EA 		b	.L226
 3702              	.L232:
 3703              		.loc 1 2097 5 discriminator 15
 3704 0138 1C301BE5 		ldr	r3, [fp, #-28]
 3705 013c 7F3003E2 		and	r3, r3, #127
 3706 0140 8322A0E1 		lsl	r2, r3, #5
 3707 0144 08301BE5 		ldr	r3, [fp, #-8]
 3708 0148 0C3093E5 		ldr	r3, [r3, #12]
 3709 014c 033082E0 		add	r3, r2, r3
 3710 0150 08300BE5 		str	r3, [fp, #-8]
 3711 0154 08301BE5 		ldr	r3, [fp, #-8]
 3712 0158 0300A0E1 		mov	r0, r3
 3713 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3714 0160 0C000BE5 		str	r0, [fp, #-12]
 3715              		.loc 1 2097 5 discriminator 1
 3716 0164 0C301BE5 		ldr	r3, [fp, #-12]
 3717 0168 FF3803E2 		and	r3, r3, #16711680
 3718 016c 020853E3 		cmp	r3, #131072
 3719 0170 0100001A 		bne	.L233
 3720              		.loc 1 2097 5 discriminator 16
 3721 0174 0830E0E3 		mvn	r3, #8
 3722              		.loc 1 2097 5
 3723 0178 4D0000EA 		b	.L226
 3724              	.L233:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 104


 3725              		.loc 1 2097 5 discriminator 17
 3726 017c 0C301BE5 		ldr	r3, [fp, #-12]
 3727 0180 233CA0E1 		lsr	r3, r3, #24
 3728 0184 030053E3 		cmp	r3, #3
 3729 0188 0100000A 		beq	.L228
 3730              		.loc 1 2097 5 discriminator 18
 3731 018c 0130E0E3 		mvn	r3, #1
 3732              		.loc 1 2097 5
 3733 0190 470000EA 		b	.L226
 3734              	.L228:
2098:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2099:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2100:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_FRZ);
 3735              		.loc 1 2100 5 is_stmt 1
 3736 0194 08301BE5 		ldr	r3, [fp, #-8]
 3737 0198 083093E5 		ldr	r3, [r3, #8]
 3738 019c 043003E2 		and	r3, r3, #4
 3739 01a0 000053E3 		cmp	r3, #0
 3740 01a4 0100001A 		bne	.L234
 3741              		.loc 1 2100 5 is_stmt 0 discriminator 1
 3742 01a8 0630E0E3 		mvn	r3, #6
 3743              		.loc 1 2100 5
 3744 01ac 400000EA 		b	.L226
 3745              	.L234:
2101:../../Source/Kernel/rme_kernel.c ****     
2102:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2103:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Frz,struct RME_Cap_Struct*,Capobj_Frz);
 3746              		.loc 1 2103 5 is_stmt 1
 3747 01b0 08301BE5 		ldr	r3, [fp, #-8]
 3748 01b4 142093E5 		ldr	r2, [r3, #20]
 3749 01b8 20301BE5 		ldr	r3, [fp, #-32]
 3750 01bc 030052E1 		cmp	r2, r3
 3751 01c0 0100008A 		bhi	.L235
 3752              		.loc 1 2103 5 is_stmt 0 discriminator 1
 3753 01c4 0230E0E3 		mvn	r3, #2
 3754              		.loc 1 2103 5
 3755 01c8 390000EA 		b	.L226
 3756              	.L235:
 3757              		.loc 1 2103 5 discriminator 2
 3758 01cc 20301BE5 		ldr	r3, [fp, #-32]
 3759 01d0 8322A0E1 		lsl	r2, r3, #5
 3760 01d4 08301BE5 		ldr	r3, [fp, #-8]
 3761 01d8 0C3093E5 		ldr	r3, [r3, #12]
 3762 01dc 033082E0 		add	r3, r2, r3
 3763 01e0 10300BE5 		str	r3, [fp, #-16]
2104:../../Source/Kernel/rme_kernel.c ****     
2105:../../Source/Kernel/rme_kernel.c ****     /* Check if anything is there. If nothing there, the Type_Stat must be 0. 
2106:../../Source/Kernel/rme_kernel.c ****      * Need a read acquire barrier here to avoid stale reads below. */
2107:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Frz->Head.Type_Stat));
 3764              		.loc 1 2107 15 is_stmt 1
 3765 01e4 10301BE5 		ldr	r3, [fp, #-16]
 3766 01e8 0300A0E1 		mov	r0, r3
 3767 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3768 01f0 0C000BE5 		str	r0, [fp, #-12]
2108:../../Source/Kernel/rme_kernel.c ****     /* See if there is a cap */
2109:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_TYPE(Type_Stat)==RME_CAP_TYPE_NOP)
 3769              		.loc 1 2109 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 105


 3770 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 3771 01f8 233CA0E1 		lsr	r3, r3, #24
 3772              		.loc 1 2109 7
 3773 01fc 000053E3 		cmp	r3, #0
 3774 0200 0100001A 		bne	.L236
2110:../../Source/Kernel/rme_kernel.c ****     {
2111:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2112:../../Source/Kernel/rme_kernel.c ****         
2113:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 3775              		.loc 1 2113 16
 3776 0204 0030E0E3 		mvn	r3, #0
 3777 0208 290000EA 		b	.L226
 3778              	.L236:
2114:../../Source/Kernel/rme_kernel.c ****     }
2115:../../Source/Kernel/rme_kernel.c ****     else
2116:../../Source/Kernel/rme_kernel.c ****     {
2117:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2118:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2119:../../Source/Kernel/rme_kernel.c ****     }
2120:../../Source/Kernel/rme_kernel.c ****     
2121:../../Source/Kernel/rme_kernel.c ****     /* If this is a root capability, check if the reference count allows freezing */
2122:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_ATTR(Type_Stat)==RME_CAP_ATTR_ROOT)
 3779              		.loc 1 2122 8
 3780 020c 0C301BE5 		ldr	r3, [fp, #-12]
 3781 0210 7330FFE6 		uxth	r3, r3
 3782              		.loc 1 2122 7
 3783 0214 000053E3 		cmp	r3, #0
 3784 0218 0500001A 		bne	.L237
2123:../../Source/Kernel/rme_kernel.c ****     {
2124:../../Source/Kernel/rme_kernel.c ****         if(Capobj_Frz->Head.Root_Ref!=0U)
 3785              		.loc 1 2124 28
 3786 021c 10301BE5 		ldr	r3, [fp, #-16]
 3787 0220 043093E5 		ldr	r3, [r3, #4]
 3788              		.loc 1 2124 11
 3789 0224 000053E3 		cmp	r3, #0
 3790 0228 0100000A 		beq	.L237
2125:../../Source/Kernel/rme_kernel.c ****         {
2126:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2127:../../Source/Kernel/rme_kernel.c ****             
2128:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_REFCNT;
 3791              		.loc 1 2128 20
 3792 022c 0530E0E3 		mvn	r3, #5
 3793 0230 1F0000EA 		b	.L226
 3794              	.L237:
2129:../../Source/Kernel/rme_kernel.c ****         }
2130:../../Source/Kernel/rme_kernel.c ****         else
2131:../../Source/Kernel/rme_kernel.c ****         {
2132:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2133:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2134:../../Source/Kernel/rme_kernel.c ****         }
2135:../../Source/Kernel/rme_kernel.c ****     }
2136:../../Source/Kernel/rme_kernel.c ****     else
2137:../../Source/Kernel/rme_kernel.c ****     {
2138:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2139:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2140:../../Source/Kernel/rme_kernel.c ****     }
2141:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 106


2142:../../Source/Kernel/rme_kernel.c ****     /* The capability is already frozen - why do it again? */
2143:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 3795              		.loc 1 2143 31
 3796 0234 0C301BE5 		ldr	r3, [fp, #-12]
 3797 0238 FF3803E2 		and	r3, r3, #16711680
 3798              		.loc 1 2143 7
 3799 023c 020853E3 		cmp	r3, #131072
 3800 0240 0100001A 		bne	.L238
2144:../../Source/Kernel/rme_kernel.c ****     {
2145:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2146:../../Source/Kernel/rme_kernel.c ****         
2147:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 3801              		.loc 1 2147 16
 3802 0244 0830E0E3 		mvn	r3, #8
 3803 0248 190000EA 		b	.L226
 3804              	.L238:
2148:../../Source/Kernel/rme_kernel.c ****     }
2149:../../Source/Kernel/rme_kernel.c ****     else
2150:../../Source/Kernel/rme_kernel.c ****     {
2151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2152:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2153:../../Source/Kernel/rme_kernel.c ****     }
2154:../../Source/Kernel/rme_kernel.c ****     
2155:../../Source/Kernel/rme_kernel.c ****     /* See if the slot is quiescent */
2156:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_CAP_QUIE(Capobj_Frz->Head.Timestamp)==0U))
 3805              		.loc 1 2156 8
 3806 024c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 3807 0250 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3808 0254 002093E5 		ldr	r2, [r3]
 3809 0258 10301BE5 		ldr	r3, [fp, #-16]
 3810 025c 103093E5 		ldr	r3, [r3, #16]
 3811 0260 0310A0E1 		mov	r1, r3
 3812 0264 0200A0E1 		mov	r0, r2
 3813 0268 FEFFFFEB 		bl	_RME_Diff
 3814 026c 0030A0E1 		mov	r3, r0
 3815              		.loc 1 2156 7 discriminator 1
 3816 0270 0A0053E3 		cmp	r3, #10
 3817 0274 0100008A 		bhi	.L239
2157:../../Source/Kernel/rme_kernel.c ****     {
2158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2159:../../Source/Kernel/rme_kernel.c ****         
2160:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_QUIE;
 3818              		.loc 1 2160 16
 3819 0278 0730E0E3 		mvn	r3, #7
 3820 027c 0C0000EA 		b	.L226
 3821              	.L239:
2161:../../Source/Kernel/rme_kernel.c ****     }
2162:../../Source/Kernel/rme_kernel.c ****     else
2163:../../Source/Kernel/rme_kernel.c ****     {
2164:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2165:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2166:../../Source/Kernel/rme_kernel.c ****     }
2167:../../Source/Kernel/rme_kernel.c **** 
2168:../../Source/Kernel/rme_kernel.c ****     /* Update the timestamp */
2169:../../Source/Kernel/rme_kernel.c ****     Capobj_Frz->Head.Timestamp=RME_TIMESTAMP;
 3822              		.loc 1 2169 31
 3823 0280 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 107


 3824 0284 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 3825 0288 002093E5 		ldr	r2, [r3]
 3826 028c 10301BE5 		ldr	r3, [fp, #-16]
 3827 0290 102083E5 		str	r2, [r3, #16]
2170:../../Source/Kernel/rme_kernel.c ****     
2171:../../Source/Kernel/rme_kernel.c ****     /* Finally, freeze it. We do not report error here because if we CASFAIL someone must have help
2172:../../Source/Kernel/rme_kernel.c ****     RME_COMP_SWAP(&(Capobj_Frz->Head.Type_Stat),Type_Stat,
 3828              		.loc 1 2172 5
 3829 0294 10001BE5 		ldr	r0, [fp, #-16]
 3830 0298 0C301BE5 		ldr	r3, [fp, #-12]
 3831 029c FF38C3E3 		bic	r3, r3, #16711680
 3832 02a0 023883E3 		orr	r3, r3, #131072
 3833 02a4 0320A0E1 		mov	r2, r3
 3834 02a8 0C101BE5 		ldr	r1, [fp, #-12]
 3835 02ac FEFFFFEB 		bl	_RME_Comp_Swap_Single
2173:../../Source/Kernel/rme_kernel.c ****                   RME_CAP_TYPE_STAT(RME_CAP_TYPE(Type_Stat),
2174:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_STAT_FROZEN,
2175:../../Source/Kernel/rme_kernel.c ****                                     RME_CAP_ATTR(Type_Stat)));
2176:../../Source/Kernel/rme_kernel.c **** 
2177:../../Source/Kernel/rme_kernel.c ****     return 0;
 3836              		.loc 1 2177 12
 3837 02b0 0030A0E3 		mov	r3, #0
 3838              	.L226:
2178:../../Source/Kernel/rme_kernel.c **** }
 3839              		.loc 1 2178 1
 3840 02b4 0300A0E1 		mov	r0, r3
 3841 02b8 04D04BE2 		sub	sp, fp, #4
 3842              		.cfi_def_cfa 13, 8
 3843              		@ sp needed
 3844 02bc 0088BDE8 		pop	{fp, pc}
 3845              		.cfi_endproc
 3846              	.LFE26:
 3848              		.section	.text._RME_Cpt_Add,"ax",%progbits
 3849              		.align	2
 3850              		.syntax unified
 3851              		.arm
 3853              	_RME_Cpt_Add:
 3854              	.LFB27:
2179:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Frz *************************************************/
2180:../../Source/Kernel/rme_kernel.c **** 
2181:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Add ******************************************************
2182:../../Source/Kernel/rme_kernel.c **** Description : Delegate capability from one capability table to another.
2183:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2184:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Dst - The capability to the destination 
2185:../../Source/Kernel/rme_kernel.c ****                                       capability table.
2186:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2187:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Dst - The capability slot you want to add to.
2188:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2189:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Src - The capability to the source capability
2190:../../Source/Kernel/rme_kernel.c ****                                       table.
2191:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2192:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Src - The capability in the source capability table
2193:../../Source/Kernel/rme_kernel.c ****                                   to delegate.
2194:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2195:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the capability.
2196:../../Source/Kernel/rme_kernel.c **** Output      : None.
2197:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 108


2198:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2199:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Add(struct RME_Cap_Cpt* Cpt,
2200:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Dst,
2201:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Dst, 
2202:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Src,
2203:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Src,
2204:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag,
2205:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Ext_Flag)
2206:../../Source/Kernel/rme_kernel.c **** {
 3855              		.loc 1 2206 1
 3856              		.cfi_startproc
 3857              		@ args = 12, pretend = 0, frame = 56
 3858              		@ frame_needed = 1, uses_anonymous_args = 0
 3859 0000 00482DE9 		push	{fp, lr}
 3860              		.cfi_def_cfa_offset 8
 3861              		.cfi_offset 11, -8
 3862              		.cfi_offset 14, -4
 3863 0004 04B08DE2 		add	fp, sp, #4
 3864              		.cfi_def_cfa 11, 4
 3865 0008 38D04DE2 		sub	sp, sp, #56
 3866 000c 30000BE5 		str	r0, [fp, #-48]
 3867 0010 34100BE5 		str	r1, [fp, #-52]
 3868 0014 38200BE5 		str	r2, [fp, #-56]
 3869 0018 3C300BE5 		str	r3, [fp, #-60]
2207:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Dst;
2208:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Src;
2209:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Dst;
2210:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Src;
2211:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2212:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Src_Type;
2213:../../Source/Kernel/rme_kernel.c ****     
2214:../../Source/Kernel/rme_kernel.c ****     /* These variables are only used for kernel memory checks */
2215:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
2216:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
2217:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Flag;
2218:../../Source/Kernel/rme_kernel.c **** 
2219:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2220:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Dst,RME_CAP_TYPE_CPT,
 3870              		.loc 1 2220 5
 3871 001c 34301BE5 		ldr	r3, [fp, #-52]
 3872 0020 803003E2 		and	r3, r3, #128
 3873 0024 000053E3 		cmp	r3, #0
 3874 0028 1C00001A 		bne	.L241
 3875              		.loc 1 2220 5 is_stmt 0 discriminator 1
 3876 002c 30301BE5 		ldr	r3, [fp, #-48]
 3877 0030 142093E5 		ldr	r2, [r3, #20]
 3878 0034 34301BE5 		ldr	r3, [fp, #-52]
 3879 0038 030052E1 		cmp	r2, r3
 3880 003c 0100008A 		bhi	.L242
 3881              		.loc 1 2220 5 discriminator 3
 3882 0040 0230E0E3 		mvn	r3, #2
 3883              		.loc 1 2220 5
 3884 0044 020200EA 		b	.L243
 3885              	.L242:
 3886              		.loc 1 2220 5 discriminator 4
 3887 0048 34301BE5 		ldr	r3, [fp, #-52]
 3888 004c 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 109


 3889 0050 30301BE5 		ldr	r3, [fp, #-48]
 3890 0054 0C3093E5 		ldr	r3, [r3, #12]
 3891 0058 033082E0 		add	r3, r2, r3
 3892 005c 08300BE5 		str	r3, [fp, #-8]
 3893 0060 08301BE5 		ldr	r3, [fp, #-8]
 3894 0064 0300A0E1 		mov	r0, r3
 3895 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3896 006c 1C000BE5 		str	r0, [fp, #-28]
 3897              		.loc 1 2220 5 discriminator 1
 3898 0070 1C301BE5 		ldr	r3, [fp, #-28]
 3899 0074 FF3803E2 		and	r3, r3, #16711680
 3900 0078 020853E3 		cmp	r3, #131072
 3901 007c 0100001A 		bne	.L244
 3902              		.loc 1 2220 5 discriminator 5
 3903 0080 0830E0E3 		mvn	r3, #8
 3904              		.loc 1 2220 5
 3905 0084 F20100EA 		b	.L243
 3906              	.L244:
 3907              		.loc 1 2220 5 discriminator 6
 3908 0088 1C301BE5 		ldr	r3, [fp, #-28]
 3909 008c 233CA0E1 		lsr	r3, r3, #24
 3910 0090 030053E3 		cmp	r3, #3
 3911 0094 3F00000A 		beq	.L245
 3912              		.loc 1 2220 5 discriminator 7
 3913 0098 0130E0E3 		mvn	r3, #1
 3914              		.loc 1 2220 5
 3915 009c EC0100EA 		b	.L243
 3916              	.L241:
 3917              		.loc 1 2220 5 discriminator 2
 3918 00a0 34301BE5 		ldr	r3, [fp, #-52]
 3919 00a4 2324A0E1 		lsr	r2, r3, #8
 3920 00a8 30301BE5 		ldr	r3, [fp, #-48]
 3921 00ac 143093E5 		ldr	r3, [r3, #20]
 3922 00b0 030052E1 		cmp	r2, r3
 3923 00b4 0100003A 		bcc	.L246
 3924              		.loc 1 2220 5 discriminator 8
 3925 00b8 0230E0E3 		mvn	r3, #2
 3926              		.loc 1 2220 5
 3927 00bc E40100EA 		b	.L243
 3928              	.L246:
 3929              		.loc 1 2220 5 discriminator 9
 3930 00c0 34301BE5 		ldr	r3, [fp, #-52]
 3931 00c4 2334A0E1 		lsr	r3, r3, #8
 3932 00c8 8322A0E1 		lsl	r2, r3, #5
 3933 00cc 30301BE5 		ldr	r3, [fp, #-48]
 3934 00d0 0C3093E5 		ldr	r3, [r3, #12]
 3935 00d4 033082E0 		add	r3, r2, r3
 3936 00d8 08300BE5 		str	r3, [fp, #-8]
 3937 00dc 08301BE5 		ldr	r3, [fp, #-8]
 3938 00e0 0300A0E1 		mov	r0, r3
 3939 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3940 00e8 1C000BE5 		str	r0, [fp, #-28]
 3941              		.loc 1 2220 5 discriminator 1
 3942 00ec 1C301BE5 		ldr	r3, [fp, #-28]
 3943 00f0 FF3803E2 		and	r3, r3, #16711680
 3944 00f4 020853E3 		cmp	r3, #131072
 3945 00f8 0100001A 		bne	.L247
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 110


 3946              		.loc 1 2220 5 discriminator 10
 3947 00fc 0830E0E3 		mvn	r3, #8
 3948              		.loc 1 2220 5
 3949 0100 D30100EA 		b	.L243
 3950              	.L247:
 3951              		.loc 1 2220 5 discriminator 11
 3952 0104 1C301BE5 		ldr	r3, [fp, #-28]
 3953 0108 233CA0E1 		lsr	r3, r3, #24
 3954 010c 030053E3 		cmp	r3, #3
 3955 0110 0100000A 		beq	.L248
 3956              		.loc 1 2220 5 discriminator 12
 3957 0114 0130E0E3 		mvn	r3, #1
 3958              		.loc 1 2220 5
 3959 0118 CD0100EA 		b	.L243
 3960              	.L248:
 3961              		.loc 1 2220 5 discriminator 13
 3962 011c 34301BE5 		ldr	r3, [fp, #-52]
 3963 0120 7F2003E2 		and	r2, r3, #127
 3964 0124 08301BE5 		ldr	r3, [fp, #-8]
 3965 0128 143093E5 		ldr	r3, [r3, #20]
 3966 012c 030052E1 		cmp	r2, r3
 3967 0130 0100003A 		bcc	.L249
 3968              		.loc 1 2220 5 discriminator 14
 3969 0134 0230E0E3 		mvn	r3, #2
 3970              		.loc 1 2220 5
 3971 0138 C50100EA 		b	.L243
 3972              	.L249:
 3973              		.loc 1 2220 5 discriminator 15
 3974 013c 34301BE5 		ldr	r3, [fp, #-52]
 3975 0140 7F3003E2 		and	r3, r3, #127
 3976 0144 8322A0E1 		lsl	r2, r3, #5
 3977 0148 08301BE5 		ldr	r3, [fp, #-8]
 3978 014c 0C3093E5 		ldr	r3, [r3, #12]
 3979 0150 033082E0 		add	r3, r2, r3
 3980 0154 08300BE5 		str	r3, [fp, #-8]
 3981 0158 08301BE5 		ldr	r3, [fp, #-8]
 3982 015c 0300A0E1 		mov	r0, r3
 3983 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 3984 0164 1C000BE5 		str	r0, [fp, #-28]
 3985              		.loc 1 2220 5 discriminator 1
 3986 0168 1C301BE5 		ldr	r3, [fp, #-28]
 3987 016c FF3803E2 		and	r3, r3, #16711680
 3988 0170 020853E3 		cmp	r3, #131072
 3989 0174 0100001A 		bne	.L250
 3990              		.loc 1 2220 5 discriminator 16
 3991 0178 0830E0E3 		mvn	r3, #8
 3992              		.loc 1 2220 5
 3993 017c B40100EA 		b	.L243
 3994              	.L250:
 3995              		.loc 1 2220 5 discriminator 17
 3996 0180 1C301BE5 		ldr	r3, [fp, #-28]
 3997 0184 233CA0E1 		lsr	r3, r3, #24
 3998 0188 030053E3 		cmp	r3, #3
 3999 018c 0100000A 		beq	.L245
 4000              		.loc 1 2220 5 discriminator 18
 4001 0190 0130E0E3 		mvn	r3, #1
 4002              		.loc 1 2220 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 111


 4003 0194 AE0100EA 		b	.L243
 4004              	.L245:
2221:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Dst,Type_Stat);
2222:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Src,RME_CAP_TYPE_CPT,
 4005              		.loc 1 2222 5 is_stmt 1
 4006 0198 3C301BE5 		ldr	r3, [fp, #-60]
 4007 019c 803003E2 		and	r3, r3, #128
 4008 01a0 000053E3 		cmp	r3, #0
 4009 01a4 1C00001A 		bne	.L251
 4010              		.loc 1 2222 5 is_stmt 0 discriminator 1
 4011 01a8 30301BE5 		ldr	r3, [fp, #-48]
 4012 01ac 142093E5 		ldr	r2, [r3, #20]
 4013 01b0 3C301BE5 		ldr	r3, [fp, #-60]
 4014 01b4 030052E1 		cmp	r2, r3
 4015 01b8 0100008A 		bhi	.L252
 4016              		.loc 1 2222 5 discriminator 3
 4017 01bc 0230E0E3 		mvn	r3, #2
 4018              		.loc 1 2222 5
 4019 01c0 A30100EA 		b	.L243
 4020              	.L252:
 4021              		.loc 1 2222 5 discriminator 4
 4022 01c4 3C301BE5 		ldr	r3, [fp, #-60]
 4023 01c8 8322A0E1 		lsl	r2, r3, #5
 4024 01cc 30301BE5 		ldr	r3, [fp, #-48]
 4025 01d0 0C3093E5 		ldr	r3, [r3, #12]
 4026 01d4 033082E0 		add	r3, r2, r3
 4027 01d8 0C300BE5 		str	r3, [fp, #-12]
 4028 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 4029 01e0 0300A0E1 		mov	r0, r3
 4030 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4031 01e8 1C000BE5 		str	r0, [fp, #-28]
 4032              		.loc 1 2222 5 discriminator 1
 4033 01ec 1C301BE5 		ldr	r3, [fp, #-28]
 4034 01f0 FF3803E2 		and	r3, r3, #16711680
 4035 01f4 020853E3 		cmp	r3, #131072
 4036 01f8 0100001A 		bne	.L253
 4037              		.loc 1 2222 5 discriminator 5
 4038 01fc 0830E0E3 		mvn	r3, #8
 4039              		.loc 1 2222 5
 4040 0200 930100EA 		b	.L243
 4041              	.L253:
 4042              		.loc 1 2222 5 discriminator 6
 4043 0204 1C301BE5 		ldr	r3, [fp, #-28]
 4044 0208 233CA0E1 		lsr	r3, r3, #24
 4045 020c 030053E3 		cmp	r3, #3
 4046 0210 3F00000A 		beq	.L254
 4047              		.loc 1 2222 5 discriminator 7
 4048 0214 0130E0E3 		mvn	r3, #1
 4049              		.loc 1 2222 5
 4050 0218 8D0100EA 		b	.L243
 4051              	.L251:
 4052              		.loc 1 2222 5 discriminator 2
 4053 021c 3C301BE5 		ldr	r3, [fp, #-60]
 4054 0220 2324A0E1 		lsr	r2, r3, #8
 4055 0224 30301BE5 		ldr	r3, [fp, #-48]
 4056 0228 143093E5 		ldr	r3, [r3, #20]
 4057 022c 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 112


 4058 0230 0100003A 		bcc	.L255
 4059              		.loc 1 2222 5 discriminator 8
 4060 0234 0230E0E3 		mvn	r3, #2
 4061              		.loc 1 2222 5
 4062 0238 850100EA 		b	.L243
 4063              	.L255:
 4064              		.loc 1 2222 5 discriminator 9
 4065 023c 3C301BE5 		ldr	r3, [fp, #-60]
 4066 0240 2334A0E1 		lsr	r3, r3, #8
 4067 0244 8322A0E1 		lsl	r2, r3, #5
 4068 0248 30301BE5 		ldr	r3, [fp, #-48]
 4069 024c 0C3093E5 		ldr	r3, [r3, #12]
 4070 0250 033082E0 		add	r3, r2, r3
 4071 0254 0C300BE5 		str	r3, [fp, #-12]
 4072 0258 0C301BE5 		ldr	r3, [fp, #-12]
 4073 025c 0300A0E1 		mov	r0, r3
 4074 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4075 0264 1C000BE5 		str	r0, [fp, #-28]
 4076              		.loc 1 2222 5 discriminator 1
 4077 0268 1C301BE5 		ldr	r3, [fp, #-28]
 4078 026c FF3803E2 		and	r3, r3, #16711680
 4079 0270 020853E3 		cmp	r3, #131072
 4080 0274 0100001A 		bne	.L256
 4081              		.loc 1 2222 5 discriminator 10
 4082 0278 0830E0E3 		mvn	r3, #8
 4083              		.loc 1 2222 5
 4084 027c 740100EA 		b	.L243
 4085              	.L256:
 4086              		.loc 1 2222 5 discriminator 11
 4087 0280 1C301BE5 		ldr	r3, [fp, #-28]
 4088 0284 233CA0E1 		lsr	r3, r3, #24
 4089 0288 030053E3 		cmp	r3, #3
 4090 028c 0100000A 		beq	.L257
 4091              		.loc 1 2222 5 discriminator 12
 4092 0290 0130E0E3 		mvn	r3, #1
 4093              		.loc 1 2222 5
 4094 0294 6E0100EA 		b	.L243
 4095              	.L257:
 4096              		.loc 1 2222 5 discriminator 13
 4097 0298 3C301BE5 		ldr	r3, [fp, #-60]
 4098 029c 7F2003E2 		and	r2, r3, #127
 4099 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 4100 02a4 143093E5 		ldr	r3, [r3, #20]
 4101 02a8 030052E1 		cmp	r2, r3
 4102 02ac 0100003A 		bcc	.L258
 4103              		.loc 1 2222 5 discriminator 14
 4104 02b0 0230E0E3 		mvn	r3, #2
 4105              		.loc 1 2222 5
 4106 02b4 660100EA 		b	.L243
 4107              	.L258:
 4108              		.loc 1 2222 5 discriminator 15
 4109 02b8 3C301BE5 		ldr	r3, [fp, #-60]
 4110 02bc 7F3003E2 		and	r3, r3, #127
 4111 02c0 8322A0E1 		lsl	r2, r3, #5
 4112 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 4113 02c8 0C3093E5 		ldr	r3, [r3, #12]
 4114 02cc 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 113


 4115 02d0 0C300BE5 		str	r3, [fp, #-12]
 4116 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 4117 02d8 0300A0E1 		mov	r0, r3
 4118 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4119 02e0 1C000BE5 		str	r0, [fp, #-28]
 4120              		.loc 1 2222 5 discriminator 1
 4121 02e4 1C301BE5 		ldr	r3, [fp, #-28]
 4122 02e8 FF3803E2 		and	r3, r3, #16711680
 4123 02ec 020853E3 		cmp	r3, #131072
 4124 02f0 0100001A 		bne	.L259
 4125              		.loc 1 2222 5 discriminator 16
 4126 02f4 0830E0E3 		mvn	r3, #8
 4127              		.loc 1 2222 5
 4128 02f8 550100EA 		b	.L243
 4129              	.L259:
 4130              		.loc 1 2222 5 discriminator 17
 4131 02fc 1C301BE5 		ldr	r3, [fp, #-28]
 4132 0300 233CA0E1 		lsr	r3, r3, #24
 4133 0304 030053E3 		cmp	r3, #3
 4134 0308 0100000A 		beq	.L254
 4135              		.loc 1 2222 5 discriminator 18
 4136 030c 0130E0E3 		mvn	r3, #1
 4137              		.loc 1 2222 5
 4138 0310 4F0100EA 		b	.L243
 4139              	.L254:
2223:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Src,Type_Stat);
2224:../../Source/Kernel/rme_kernel.c ****     /* Check if both captbls are not frozen and allows such operations */
2225:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Dst,RME_CPT_FLAG_ADD_DST);
 4140              		.loc 1 2225 5 is_stmt 1
 4141 0314 08301BE5 		ldr	r3, [fp, #-8]
 4142 0318 083093E5 		ldr	r3, [r3, #8]
 4143 031c 103003E2 		and	r3, r3, #16
 4144 0320 000053E3 		cmp	r3, #0
 4145 0324 0100001A 		bne	.L260
 4146              		.loc 1 2225 5 is_stmt 0 discriminator 1
 4147 0328 0630E0E3 		mvn	r3, #6
 4148              		.loc 1 2225 5
 4149 032c 480100EA 		b	.L243
 4150              	.L260:
2226:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Src,RME_CPT_FLAG_ADD_SRC);
 4151              		.loc 1 2226 5 is_stmt 1
 4152 0330 0C301BE5 		ldr	r3, [fp, #-12]
 4153 0334 083093E5 		ldr	r3, [r3, #8]
 4154 0338 083003E2 		and	r3, r3, #8
 4155 033c 000053E3 		cmp	r3, #0
 4156 0340 0100001A 		bne	.L261
 4157              		.loc 1 2226 5 is_stmt 0 discriminator 1
 4158 0344 0630E0E3 		mvn	r3, #6
 4159              		.loc 1 2226 5
 4160 0348 410100EA 		b	.L243
 4161              	.L261:
2227:../../Source/Kernel/rme_kernel.c ****     
2228:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slots */
2229:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Dst,Cap_Dst,struct RME_Cap_Struct*,Capobj_Dst);
 4162              		.loc 1 2229 5 is_stmt 1
 4163 034c 08301BE5 		ldr	r3, [fp, #-8]
 4164 0350 142093E5 		ldr	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 114


 4165 0354 38301BE5 		ldr	r3, [fp, #-56]
 4166 0358 030052E1 		cmp	r2, r3
 4167 035c 0100008A 		bhi	.L262
 4168              		.loc 1 2229 5 is_stmt 0 discriminator 1
 4169 0360 0230E0E3 		mvn	r3, #2
 4170              		.loc 1 2229 5
 4171 0364 3A0100EA 		b	.L243
 4172              	.L262:
 4173              		.loc 1 2229 5 discriminator 2
 4174 0368 38301BE5 		ldr	r3, [fp, #-56]
 4175 036c 8322A0E1 		lsl	r2, r3, #5
 4176 0370 08301BE5 		ldr	r3, [fp, #-8]
 4177 0374 0C3093E5 		ldr	r3, [r3, #12]
 4178 0378 033082E0 		add	r3, r2, r3
 4179 037c 20300BE5 		str	r3, [fp, #-32]
2230:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Src,Cap_Src,struct RME_Cap_Struct*,Capobj_Src);
 4180              		.loc 1 2230 5 is_stmt 1
 4181 0380 0C301BE5 		ldr	r3, [fp, #-12]
 4182 0384 142093E5 		ldr	r2, [r3, #20]
 4183 0388 04309BE5 		ldr	r3, [fp, #4]
 4184 038c 030052E1 		cmp	r2, r3
 4185 0390 0100008A 		bhi	.L263
 4186              		.loc 1 2230 5 is_stmt 0 discriminator 1
 4187 0394 0230E0E3 		mvn	r3, #2
 4188              		.loc 1 2230 5
 4189 0398 2D0100EA 		b	.L243
 4190              	.L263:
 4191              		.loc 1 2230 5 discriminator 2
 4192 039c 04309BE5 		ldr	r3, [fp, #4]
 4193 03a0 8322A0E1 		lsl	r2, r3, #5
 4194 03a4 0C301BE5 		ldr	r3, [fp, #-12]
 4195 03a8 0C3093E5 		ldr	r3, [r3, #12]
 4196 03ac 033082E0 		add	r3, r2, r3
 4197 03b0 24300BE5 		str	r3, [fp, #-36]
2231:../../Source/Kernel/rme_kernel.c ****     
2232:../../Source/Kernel/rme_kernel.c ****     /* Atomic read - Read barrier to avoid premature checking of the rest */
2233:../../Source/Kernel/rme_kernel.c ****     Type_Stat=RME_READ_ACQUIRE(&(Capobj_Src->Head.Type_Stat));
 4198              		.loc 1 2233 15 is_stmt 1
 4199 03b4 24301BE5 		ldr	r3, [fp, #-36]
 4200 03b8 0300A0E1 		mov	r0, r3
 4201 03bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4202 03c0 1C000BE5 		str	r0, [fp, #-28]
2234:../../Source/Kernel/rme_kernel.c ****     /* Is the source cap frozen? */
2235:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_STAT(Type_Stat)==RME_CAP_STAT_FROZEN)
 4203              		.loc 1 2235 31
 4204 03c4 1C301BE5 		ldr	r3, [fp, #-28]
 4205 03c8 FF3803E2 		and	r3, r3, #16711680
 4206              		.loc 1 2235 7
 4207 03cc 020853E3 		cmp	r3, #131072
 4208 03d0 0100001A 		bne	.L264
2236:../../Source/Kernel/rme_kernel.c ****     {
2237:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2238:../../Source/Kernel/rme_kernel.c ****         
2239:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FROZEN;
 4209              		.loc 1 2239 16
 4210 03d4 0830E0E3 		mvn	r3, #8
 4211 03d8 1D0100EA 		b	.L243
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 115


 4212              	.L264:
2240:../../Source/Kernel/rme_kernel.c ****     }
2241:../../Source/Kernel/rme_kernel.c ****     else
2242:../../Source/Kernel/rme_kernel.c ****     {
2243:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2244:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2245:../../Source/Kernel/rme_kernel.c ****     }
2246:../../Source/Kernel/rme_kernel.c ****     
2247:../../Source/Kernel/rme_kernel.c ****     /* Does the source cap exist at all? */
2248:../../Source/Kernel/rme_kernel.c ****     if(Type_Stat==0U)
 4213              		.loc 1 2248 7
 4214 03dc 1C301BE5 		ldr	r3, [fp, #-28]
 4215 03e0 000053E3 		cmp	r3, #0
 4216 03e4 0100001A 		bne	.L265
2249:../../Source/Kernel/rme_kernel.c ****     {
2250:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2251:../../Source/Kernel/rme_kernel.c ****         
2252:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_NULL;
 4217              		.loc 1 2252 16
 4218 03e8 0030E0E3 		mvn	r3, #0
 4219 03ec 180100EA 		b	.L243
 4220              	.L265:
2253:../../Source/Kernel/rme_kernel.c ****     }
2254:../../Source/Kernel/rme_kernel.c ****     else
2255:../../Source/Kernel/rme_kernel.c ****     {
2256:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2257:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2258:../../Source/Kernel/rme_kernel.c ****     }
2259:../../Source/Kernel/rme_kernel.c **** 
2260:../../Source/Kernel/rme_kernel.c ****     /* Dewarn some compilers that complain about uninitialized variables */
2261:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=0U;
 4221              		.loc 1 2261 14
 4222 03f0 0030A0E3 		mov	r3, #0
 4223 03f4 10300BE5 		str	r3, [fp, #-16]
2262:../../Source/Kernel/rme_kernel.c ****     Kom_End=0U;
 4224              		.loc 1 2262 12
 4225 03f8 0030A0E3 		mov	r3, #0
 4226 03fc 14300BE5 		str	r3, [fp, #-20]
2263:../../Source/Kernel/rme_kernel.c ****     Kom_Flag=0U;
 4227              		.loc 1 2263 13
 4228 0400 0030A0E3 		mov	r3, #0
 4229 0404 18300BE5 		str	r3, [fp, #-24]
2264:../../Source/Kernel/rme_kernel.c ****     
2265:../../Source/Kernel/rme_kernel.c ****     /* Is there a flag conflict? - For page tables, we have different checking mechanisms */
2266:../../Source/Kernel/rme_kernel.c ****     Src_Type=RME_CAP_TYPE(Type_Stat);
 4230              		.loc 1 2266 13
 4231 0408 1C301BE5 		ldr	r3, [fp, #-28]
 4232 040c 233CA0E1 		lsr	r3, r3, #24
 4233 0410 28300BE5 		str	r3, [fp, #-40]
2267:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_PGT)
 4234              		.loc 1 2267 7
 4235 0414 28301BE5 		ldr	r3, [fp, #-40]
 4236 0418 040053E3 		cmp	r3, #4
 4237 041c 2D00001A 		bne	.L266
2268:../../Source/Kernel/rme_kernel.c ****     {
2269:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2270:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 116


2271:../../Source/Kernel/rme_kernel.c ****         /* Check the delegation range */
2272:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)>RME_PGT_FLAG_HIGH(Capobj_Src->Head.Flag))
 4238              		.loc 1 2272 12
 4239 0420 08309BE5 		ldr	r3, [fp, #8]
 4240 0424 232AA0E1 		lsr	r2, r3, #20
 4241              		.loc 1 2272 36
 4242 0428 24301BE5 		ldr	r3, [fp, #-36]
 4243 042c 083093E5 		ldr	r3, [r3, #8]
 4244 0430 233AA0E1 		lsr	r3, r3, #20
 4245              		.loc 1 2272 11
 4246 0434 030052E1 		cmp	r2, r3
 4247 0438 0100009A 		bls	.L267
2273:../../Source/Kernel/rme_kernel.c ****         {
2274:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2275:../../Source/Kernel/rme_kernel.c ****         
2276:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4248              		.loc 1 2276 20
 4249 043c 0630E0E3 		mvn	r3, #6
 4250 0440 030100EA 		b	.L243
 4251              	.L267:
2277:../../Source/Kernel/rme_kernel.c ****         }
2278:../../Source/Kernel/rme_kernel.c ****         else
2279:../../Source/Kernel/rme_kernel.c ****         {
2280:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2281:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2282:../../Source/Kernel/rme_kernel.c ****         }
2283:../../Source/Kernel/rme_kernel.c ****         
2284:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_LOW(Flag)<RME_PGT_FLAG_LOW(Capobj_Src->Head.Flag))
 4252              		.loc 1 2284 12
 4253 0444 08309BE5 		ldr	r3, [fp, #8]
 4254 0448 2334A0E1 		lsr	r3, r3, #8
 4255 044c 5320EBE7 		ubfx	r2, r3, #0, #12
 4256              		.loc 1 2284 35
 4257 0450 24301BE5 		ldr	r3, [fp, #-36]
 4258 0454 083093E5 		ldr	r3, [r3, #8]
 4259 0458 2334A0E1 		lsr	r3, r3, #8
 4260 045c 5330EBE7 		ubfx	r3, r3, #0, #12
 4261              		.loc 1 2284 11
 4262 0460 030052E1 		cmp	r2, r3
 4263 0464 0100002A 		bcs	.L268
2285:../../Source/Kernel/rme_kernel.c ****         {
2286:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2287:../../Source/Kernel/rme_kernel.c ****             
2288:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4264              		.loc 1 2288 20
 4265 0468 0630E0E3 		mvn	r3, #6
 4266 046c F80000EA 		b	.L243
 4267              	.L268:
2289:../../Source/Kernel/rme_kernel.c ****         }
2290:../../Source/Kernel/rme_kernel.c ****         else
2291:../../Source/Kernel/rme_kernel.c ****         {
2292:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2293:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2294:../../Source/Kernel/rme_kernel.c ****         }
2295:../../Source/Kernel/rme_kernel.c ****         
2296:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_HIGH(Flag)<RME_PGT_FLAG_LOW(Flag))
 4268              		.loc 1 2296 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 117


 4269 0470 08309BE5 		ldr	r3, [fp, #8]
 4270 0474 232AA0E1 		lsr	r2, r3, #20
 4271              		.loc 1 2296 36
 4272 0478 08309BE5 		ldr	r3, [fp, #8]
 4273 047c 2334A0E1 		lsr	r3, r3, #8
 4274 0480 5330EBE7 		ubfx	r3, r3, #0, #12
 4275              		.loc 1 2296 11
 4276 0484 030052E1 		cmp	r2, r3
 4277 0488 0100002A 		bcs	.L269
2297:../../Source/Kernel/rme_kernel.c ****         {
2298:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2299:../../Source/Kernel/rme_kernel.c ****             
2300:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4278              		.loc 1 2300 20
 4279 048c 0630E0E3 		mvn	r3, #6
 4280 0490 EF0000EA 		b	.L243
 4281              	.L269:
2301:../../Source/Kernel/rme_kernel.c ****         }
2302:../../Source/Kernel/rme_kernel.c ****         else
2303:../../Source/Kernel/rme_kernel.c ****         {
2304:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2305:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2306:../../Source/Kernel/rme_kernel.c ****         }
2307:../../Source/Kernel/rme_kernel.c ****         
2308:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2309:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_FLAG_FLAG(Flag)==0U)
 4282              		.loc 1 2309 12
 4283 0494 08309BE5 		ldr	r3, [fp, #8]
 4284 0498 7330EFE6 		uxtb	r3, r3
 4285              		.loc 1 2309 11
 4286 049c 000053E3 		cmp	r3, #0
 4287 04a0 0100001A 		bne	.L270
2310:../../Source/Kernel/rme_kernel.c ****         {
2311:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2312:../../Source/Kernel/rme_kernel.c ****             
2313:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4288              		.loc 1 2313 20
 4289 04a4 0630E0E3 		mvn	r3, #6
 4290 04a8 E90000EA 		b	.L243
 4291              	.L270:
2314:../../Source/Kernel/rme_kernel.c ****         }
2315:../../Source/Kernel/rme_kernel.c ****         else
2316:../../Source/Kernel/rme_kernel.c ****         {
2317:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2318:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2319:../../Source/Kernel/rme_kernel.c ****         }
2320:../../Source/Kernel/rme_kernel.c ****         
2321:../../Source/Kernel/rme_kernel.c ****         if((RME_PGT_FLAG_FLAG(Flag)&(~RME_PGT_FLAG_FLAG(Capobj_Src->Head.Flag)))!=0U)
 4292              		.loc 1 2321 39
 4293 04ac 24301BE5 		ldr	r3, [fp, #-36]
 4294 04b0 083093E5 		ldr	r3, [r3, #8]
 4295 04b4 7330EFE6 		uxtb	r3, r3
 4296              		.loc 1 2321 38
 4297 04b8 0320E0E1 		mvn	r2, r3
 4298              		.loc 1 2321 36
 4299 04bc 08309BE5 		ldr	r3, [fp, #8]
 4300 04c0 023003E0 		and	r3, r3, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 118


 4301 04c4 7330EFE6 		uxtb	r3, r3
 4302              		.loc 1 2321 11
 4303 04c8 000053E3 		cmp	r3, #0
 4304 04cc 7700000A 		beq	.L271
2322:../../Source/Kernel/rme_kernel.c ****         {
2323:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2324:../../Source/Kernel/rme_kernel.c ****             
2325:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4305              		.loc 1 2325 20
 4306 04d0 0630E0E3 		mvn	r3, #6
 4307 04d4 DE0000EA 		b	.L243
 4308              	.L266:
2326:../../Source/Kernel/rme_kernel.c ****         }
2327:../../Source/Kernel/rme_kernel.c ****         else
2328:../../Source/Kernel/rme_kernel.c ****         {
2329:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2330:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2331:../../Source/Kernel/rme_kernel.c ****         }
2332:../../Source/Kernel/rme_kernel.c ****     }
2333:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KFN)
 4309              		.loc 1 2333 12
 4310 04d8 28301BE5 		ldr	r3, [fp, #-40]
 4311 04dc 010053E3 		cmp	r3, #1
 4312 04e0 1900001A 		bne	.L272
2334:../../Source/Kernel/rme_kernel.c ****     {
2335:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2336:../../Source/Kernel/rme_kernel.c ****         
2337:../../Source/Kernel/rme_kernel.c ****         /* Kernel funcrions only have ranges, no flags - check the delegation range */
2338:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)>RME_KFN_FLAG_HIGH(Capobj_Src->Head.Flag))
 4313              		.loc 1 2338 12
 4314 04e4 08309BE5 		ldr	r3, [fp, #8]
 4315 04e8 2328A0E1 		lsr	r2, r3, #16
 4316              		.loc 1 2338 36
 4317 04ec 24301BE5 		ldr	r3, [fp, #-36]
 4318 04f0 083093E5 		ldr	r3, [r3, #8]
 4319 04f4 2338A0E1 		lsr	r3, r3, #16
 4320              		.loc 1 2338 11
 4321 04f8 030052E1 		cmp	r2, r3
 4322 04fc 0100009A 		bls	.L273
2339:../../Source/Kernel/rme_kernel.c ****         {
2340:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2341:../../Source/Kernel/rme_kernel.c ****             
2342:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4323              		.loc 1 2342 20
 4324 0500 0630E0E3 		mvn	r3, #6
 4325 0504 D20000EA 		b	.L243
 4326              	.L273:
2343:../../Source/Kernel/rme_kernel.c ****         }
2344:../../Source/Kernel/rme_kernel.c ****         else
2345:../../Source/Kernel/rme_kernel.c ****         {
2346:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2347:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2348:../../Source/Kernel/rme_kernel.c ****         }
2349:../../Source/Kernel/rme_kernel.c ****         
2350:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_LOW(Flag)<RME_KFN_FLAG_LOW(Capobj_Src->Head.Flag))
 4327              		.loc 1 2350 12
 4328 0508 08309BE5 		ldr	r3, [fp, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 119


 4329 050c 7320FFE6 		uxth	r2, r3
 4330              		.loc 1 2350 35
 4331 0510 24301BE5 		ldr	r3, [fp, #-36]
 4332 0514 083093E5 		ldr	r3, [r3, #8]
 4333 0518 7330FFE6 		uxth	r3, r3
 4334              		.loc 1 2350 11
 4335 051c 030052E1 		cmp	r2, r3
 4336 0520 0100002A 		bcs	.L274
2351:../../Source/Kernel/rme_kernel.c ****         {
2352:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2353:../../Source/Kernel/rme_kernel.c ****             
2354:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4337              		.loc 1 2354 20
 4338 0524 0630E0E3 		mvn	r3, #6
 4339 0528 C90000EA 		b	.L243
 4340              	.L274:
2355:../../Source/Kernel/rme_kernel.c ****         }
2356:../../Source/Kernel/rme_kernel.c ****         else
2357:../../Source/Kernel/rme_kernel.c ****         {
2358:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2359:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2360:../../Source/Kernel/rme_kernel.c ****         }
2361:../../Source/Kernel/rme_kernel.c ****         
2362:../../Source/Kernel/rme_kernel.c ****         if(RME_KFN_FLAG_HIGH(Flag)<RME_KFN_FLAG_LOW(Flag))
 4341              		.loc 1 2362 12
 4342 052c 08309BE5 		ldr	r3, [fp, #8]
 4343 0530 2328A0E1 		lsr	r2, r3, #16
 4344              		.loc 1 2362 36
 4345 0534 08309BE5 		ldr	r3, [fp, #8]
 4346 0538 7330FFE6 		uxth	r3, r3
 4347              		.loc 1 2362 11
 4348 053c 030052E1 		cmp	r2, r3
 4349 0540 5A00002A 		bcs	.L271
2363:../../Source/Kernel/rme_kernel.c ****         {
2364:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2365:../../Source/Kernel/rme_kernel.c ****             
2366:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4350              		.loc 1 2366 20
 4351 0544 0630E0E3 		mvn	r3, #6
 4352 0548 C10000EA 		b	.L243
 4353              	.L272:
2367:../../Source/Kernel/rme_kernel.c ****         }
2368:../../Source/Kernel/rme_kernel.c ****         else
2369:../../Source/Kernel/rme_kernel.c ****         {
2370:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2371:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2372:../../Source/Kernel/rme_kernel.c ****         }
2373:../../Source/Kernel/rme_kernel.c ****     }
2374:../../Source/Kernel/rme_kernel.c ****     else if(Src_Type==RME_CAP_TYPE_KOM)
 4354              		.loc 1 2374 12
 4355 054c 28301BE5 		ldr	r3, [fp, #-40]
 4356 0550 020053E3 		cmp	r3, #2
 4357 0554 4700001A 		bne	.L275
2375:../../Source/Kernel/rme_kernel.c ****     {
2376:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2377:../../Source/Kernel/rme_kernel.c ****         
2378:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End here is exclusive */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 120


2379:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_KOM_FLAG_LOW(Flag,Ext_Flag);
 4358              		.loc 1 2379 18
 4359 0558 08309BE5 		ldr	r3, [fp, #8]
 4360 055c 0338A0E1 		lsl	r3, r3, #16
 4361 0560 10300BE5 		str	r3, [fp, #-16]
2380:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_KOM_FLAG_HIGH(Flag,Ext_Flag);
 4362              		.loc 1 2380 17
 4363 0564 08309BE5 		ldr	r3, [fp, #8]
 4364 0568 2338A0E1 		lsr	r3, r3, #16
 4365 056c 0338A0E1 		lsl	r3, r3, #16
 4366 0570 0C209BE5 		ldr	r2, [fp, #12]
 4367 0574 2228A0E1 		lsr	r2, r2, #16
 4368 0578 3F20C2E3 		bic	r2, r2, #63
 4369              		.loc 1 2380 16
 4370 057c 023083E1 		orr	r3, r3, r2
 4371 0580 14300BE5 		str	r3, [fp, #-20]
2381:../../Source/Kernel/rme_kernel.c ****         Kom_Flag=RME_KOM_FLAG_KOM(Ext_Flag);
 4372              		.loc 1 2381 17
 4373 0584 0030A0E3 		mov	r3, #0
 4374 0588 18300BE5 		str	r3, [fp, #-24]
2382:../../Source/Kernel/rme_kernel.c ****         
2383:../../Source/Kernel/rme_kernel.c ****         /* Round start and end to the slot boundary, if we are using slots bigger than 64 bytes */
2384:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
2385:../../Source/Kernel/rme_kernel.c ****         Kom_End=RME_ROUND_DOWN(Kom_End,RME_KOM_SLOT_ORDER);
2386:../../Source/Kernel/rme_kernel.c ****         Kom_Begin=RME_ROUND_UP(Kom_Begin,RME_KOM_SLOT_ORDER);
2387:../../Source/Kernel/rme_kernel.c **** #endif
2388:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<=Kom_Begin)
 4375              		.loc 1 2388 11
 4376 058c 14201BE5 		ldr	r2, [fp, #-20]
 4377 0590 10301BE5 		ldr	r3, [fp, #-16]
 4378 0594 030052E1 		cmp	r2, r3
 4379 0598 0100008A 		bhi	.L276
2389:../../Source/Kernel/rme_kernel.c ****         {
2390:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2391:../../Source/Kernel/rme_kernel.c ****             
2392:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4380              		.loc 1 2392 20
 4381 059c 0630E0E3 		mvn	r3, #6
 4382 05a0 AB0000EA 		b	.L243
 4383              	.L276:
2393:../../Source/Kernel/rme_kernel.c ****         }
2394:../../Source/Kernel/rme_kernel.c ****         else
2395:../../Source/Kernel/rme_kernel.c ****         {
2396:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2397:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2398:../../Source/Kernel/rme_kernel.c ****         }
2399:../../Source/Kernel/rme_kernel.c **** 
2400:../../Source/Kernel/rme_kernel.c ****         /* Convert relative addresses to absolute addresses and check for overflow */
2401:../../Source/Kernel/rme_kernel.c ****         Kom_Begin+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4384              		.loc 1 2401 62
 4385 05a4 24301BE5 		ldr	r3, [fp, #-36]
 4386 05a8 143093E5 		ldr	r3, [r3, #20]
 4387              		.loc 1 2401 18
 4388 05ac 10201BE5 		ldr	r2, [fp, #-16]
 4389 05b0 033082E0 		add	r3, r2, r3
 4390 05b4 10300BE5 		str	r3, [fp, #-16]
2402:../../Source/Kernel/rme_kernel.c ****         if(Kom_Begin<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 121


 4391              		.loc 1 2402 64
 4392 05b8 24301BE5 		ldr	r3, [fp, #-36]
 4393 05bc 143093E5 		ldr	r3, [r3, #20]
 4394              		.loc 1 2402 11
 4395 05c0 10201BE5 		ldr	r2, [fp, #-16]
 4396 05c4 030052E1 		cmp	r2, r3
 4397 05c8 0100002A 		bcs	.L277
2403:../../Source/Kernel/rme_kernel.c ****         {
2404:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2405:../../Source/Kernel/rme_kernel.c ****             
2406:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4398              		.loc 1 2406 20
 4399 05cc 0630E0E3 		mvn	r3, #6
 4400 05d0 9F0000EA 		b	.L243
 4401              	.L277:
2407:../../Source/Kernel/rme_kernel.c ****         }
2408:../../Source/Kernel/rme_kernel.c ****         else
2409:../../Source/Kernel/rme_kernel.c ****         {
2410:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2411:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2412:../../Source/Kernel/rme_kernel.c ****         }
2413:../../Source/Kernel/rme_kernel.c ****         
2414:../../Source/Kernel/rme_kernel.c ****         Kom_End+=((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin;
 4402              		.loc 1 2414 60
 4403 05d4 24301BE5 		ldr	r3, [fp, #-36]
 4404 05d8 143093E5 		ldr	r3, [r3, #20]
 4405              		.loc 1 2414 16
 4406 05dc 14201BE5 		ldr	r2, [fp, #-20]
 4407 05e0 033082E0 		add	r3, r2, r3
 4408 05e4 14300BE5 		str	r3, [fp, #-20]
2415:../../Source/Kernel/rme_kernel.c ****         if(Kom_End<((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin)
 4409              		.loc 1 2415 62
 4410 05e8 24301BE5 		ldr	r3, [fp, #-36]
 4411 05ec 143093E5 		ldr	r3, [r3, #20]
 4412              		.loc 1 2415 11
 4413 05f0 14201BE5 		ldr	r2, [fp, #-20]
 4414 05f4 030052E1 		cmp	r2, r3
 4415 05f8 0100002A 		bcs	.L278
2416:../../Source/Kernel/rme_kernel.c ****         {
2417:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2418:../../Source/Kernel/rme_kernel.c ****             
2419:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4416              		.loc 1 2419 20
 4417 05fc 0630E0E3 		mvn	r3, #6
 4418 0600 930000EA 		b	.L243
 4419              	.L278:
2420:../../Source/Kernel/rme_kernel.c ****         }
2421:../../Source/Kernel/rme_kernel.c ****         else
2422:../../Source/Kernel/rme_kernel.c ****         {
2423:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2424:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2425:../../Source/Kernel/rme_kernel.c ****         }
2426:../../Source/Kernel/rme_kernel.c **** 
2427:../../Source/Kernel/rme_kernel.c ****         /* Check the ranges of kernel memory */
2428:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->Begin>Kom_Begin)
 4420              		.loc 1 2428 54
 4421 0604 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 122


 4422 0608 143093E5 		ldr	r3, [r3, #20]
 4423              		.loc 1 2428 11
 4424 060c 10201BE5 		ldr	r2, [fp, #-16]
 4425 0610 030052E1 		cmp	r2, r3
 4426 0614 0100002A 		bcs	.L279
2429:../../Source/Kernel/rme_kernel.c ****         {
2430:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2431:../../Source/Kernel/rme_kernel.c ****             
2432:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4427              		.loc 1 2432 20
 4428 0618 0630E0E3 		mvn	r3, #6
 4429 061c 8C0000EA 		b	.L243
 4430              	.L279:
2433:../../Source/Kernel/rme_kernel.c ****         }
2434:../../Source/Kernel/rme_kernel.c ****         else
2435:../../Source/Kernel/rme_kernel.c ****         {
2436:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2437:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2438:../../Source/Kernel/rme_kernel.c ****         }
2439:../../Source/Kernel/rme_kernel.c ****         
2440:../../Source/Kernel/rme_kernel.c ****         /* Internal encoding of 'end' is inclusive */
2441:../../Source/Kernel/rme_kernel.c ****         if(((volatile struct RME_Cap_Kom*)Capobj_Src)->End<(Kom_End-1U))
 4431              		.loc 1 2441 54
 4432 0620 24301BE5 		ldr	r3, [fp, #-36]
 4433 0624 182093E5 		ldr	r2, [r3, #24]
 4434              		.loc 1 2441 68
 4435 0628 14301BE5 		ldr	r3, [fp, #-20]
 4436 062c 013043E2 		sub	r3, r3, #1
 4437              		.loc 1 2441 11
 4438 0630 030052E1 		cmp	r2, r3
 4439 0634 0100002A 		bcs	.L280
2442:../../Source/Kernel/rme_kernel.c ****         {
2443:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2444:../../Source/Kernel/rme_kernel.c ****             
2445:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4440              		.loc 1 2445 20
 4441 0638 0630E0E3 		mvn	r3, #6
 4442 063c 840000EA 		b	.L243
 4443              	.L280:
2446:../../Source/Kernel/rme_kernel.c ****         }
2447:../../Source/Kernel/rme_kernel.c ****         else
2448:../../Source/Kernel/rme_kernel.c ****         {
2449:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2450:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2451:../../Source/Kernel/rme_kernel.c ****         }
2452:../../Source/Kernel/rme_kernel.c ****         
2453:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2454:../../Source/Kernel/rme_kernel.c ****         if(Kom_Flag==0U)
 4444              		.loc 1 2454 11
 4445 0640 18301BE5 		ldr	r3, [fp, #-24]
 4446 0644 000053E3 		cmp	r3, #0
 4447 0648 0100001A 		bne	.L281
2455:../../Source/Kernel/rme_kernel.c ****         {
2456:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2457:../../Source/Kernel/rme_kernel.c ****             
2458:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4448              		.loc 1 2458 20
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 123


 4449 064c 0630E0E3 		mvn	r3, #6
 4450 0650 7F0000EA 		b	.L243
 4451              	.L281:
2459:../../Source/Kernel/rme_kernel.c ****         }
2460:../../Source/Kernel/rme_kernel.c ****         else
2461:../../Source/Kernel/rme_kernel.c ****         {
2462:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2463:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2464:../../Source/Kernel/rme_kernel.c ****         }
2465:../../Source/Kernel/rme_kernel.c ****         
2466:../../Source/Kernel/rme_kernel.c ****         if((Kom_Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4452              		.loc 1 2466 41
 4453 0654 24301BE5 		ldr	r3, [fp, #-36]
 4454 0658 083093E5 		ldr	r3, [r3, #8]
 4455              		.loc 1 2466 23
 4456 065c 0320E0E1 		mvn	r2, r3
 4457              		.loc 1 2466 21
 4458 0660 18301BE5 		ldr	r3, [fp, #-24]
 4459 0664 023003E0 		and	r3, r3, r2
 4460              		.loc 1 2466 11
 4461 0668 000053E3 		cmp	r3, #0
 4462 066c 0F00000A 		beq	.L271
2467:../../Source/Kernel/rme_kernel.c ****         {
2468:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2469:../../Source/Kernel/rme_kernel.c ****             
2470:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4463              		.loc 1 2470 20
 4464 0670 0630E0E3 		mvn	r3, #6
 4465 0674 760000EA 		b	.L243
 4466              	.L275:
2471:../../Source/Kernel/rme_kernel.c ****         }
2472:../../Source/Kernel/rme_kernel.c ****         else
2473:../../Source/Kernel/rme_kernel.c ****         {
2474:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2475:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2476:../../Source/Kernel/rme_kernel.c ****         }
2477:../../Source/Kernel/rme_kernel.c ****     }
2478:../../Source/Kernel/rme_kernel.c ****     /* All other caps */
2479:../../Source/Kernel/rme_kernel.c ****     else
2480:../../Source/Kernel/rme_kernel.c ****     {
2481:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2482:../../Source/Kernel/rme_kernel.c ****         
2483:../../Source/Kernel/rme_kernel.c ****         /* Check the flags - if there are extra ones, or all zero */
2484:../../Source/Kernel/rme_kernel.c ****         if(Flag==0U)
 4467              		.loc 1 2484 11
 4468 0678 08309BE5 		ldr	r3, [fp, #8]
 4469 067c 000053E3 		cmp	r3, #0
 4470 0680 0100001A 		bne	.L282
2485:../../Source/Kernel/rme_kernel.c ****         {
2486:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2487:../../Source/Kernel/rme_kernel.c ****             
2488:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4471              		.loc 1 2488 20
 4472 0684 0630E0E3 		mvn	r3, #6
 4473 0688 710000EA 		b	.L243
 4474              	.L282:
2489:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 124


2490:../../Source/Kernel/rme_kernel.c ****         else
2491:../../Source/Kernel/rme_kernel.c ****         {
2492:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2493:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2494:../../Source/Kernel/rme_kernel.c ****         }
2495:../../Source/Kernel/rme_kernel.c ****         if((Flag&(~(Capobj_Src->Head.Flag)))!=0U)
 4475              		.loc 1 2495 37
 4476 068c 24301BE5 		ldr	r3, [fp, #-36]
 4477 0690 083093E5 		ldr	r3, [r3, #8]
 4478              		.loc 1 2495 19
 4479 0694 0320E0E1 		mvn	r2, r3
 4480              		.loc 1 2495 17
 4481 0698 08309BE5 		ldr	r3, [fp, #8]
 4482 069c 023003E0 		and	r3, r3, r2
 4483              		.loc 1 2495 11
 4484 06a0 000053E3 		cmp	r3, #0
 4485 06a4 0100000A 		beq	.L271
2496:../../Source/Kernel/rme_kernel.c ****         {
2497:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2498:../../Source/Kernel/rme_kernel.c ****             
2499:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_CPT_FLAG;
 4486              		.loc 1 2499 20
 4487 06a8 0630E0E3 		mvn	r3, #6
 4488 06ac 680000EA 		b	.L243
 4489              	.L271:
2500:../../Source/Kernel/rme_kernel.c ****         }
2501:../../Source/Kernel/rme_kernel.c ****         else
2502:../../Source/Kernel/rme_kernel.c ****         {
2503:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2504:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2505:../../Source/Kernel/rme_kernel.c ****         }
2506:../../Source/Kernel/rme_kernel.c ****     }
2507:../../Source/Kernel/rme_kernel.c ****     
2508:../../Source/Kernel/rme_kernel.c ****     /* Is the destination slot unoccupied? */
2509:../../Source/Kernel/rme_kernel.c ****     if(Capobj_Dst->Head.Type_Stat!=0U)
 4490              		.loc 1 2509 24
 4491 06b0 20301BE5 		ldr	r3, [fp, #-32]
 4492 06b4 003093E5 		ldr	r3, [r3]
 4493              		.loc 1 2509 7
 4494 06b8 000053E3 		cmp	r3, #0
 4495 06bc 0100000A 		beq	.L283
2510:../../Source/Kernel/rme_kernel.c ****     {
2511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2512:../../Source/Kernel/rme_kernel.c ****             
2513:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_EXIST;
 4496              		.loc 1 2513 16
 4497 06c0 0430E0E3 		mvn	r3, #4
 4498 06c4 620000EA 		b	.L243
 4499              	.L283:
2514:../../Source/Kernel/rme_kernel.c ****     }
2515:../../Source/Kernel/rme_kernel.c ****     else
2516:../../Source/Kernel/rme_kernel.c ****     {
2517:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2518:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2519:../../Source/Kernel/rme_kernel.c ****     }
2520:../../Source/Kernel/rme_kernel.c ****     
2521:../../Source/Kernel/rme_kernel.c ****     /* Try to take the empty slot */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 125


2522:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Capobj_Dst);
 4500              		.loc 1 2522 5
 4501 06c8 20301BE5 		ldr	r3, [fp, #-32]
 4502 06cc 0128A0E3 		mov	r2, #65536
 4503 06d0 0010A0E3 		mov	r1, #0
 4504 06d4 0300A0E1 		mov	r0, r3
 4505 06d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4506 06dc 0030A0E1 		mov	r3, r0
 4507              		.loc 1 2522 5 is_stmt 0 discriminator 1
 4508 06e0 000053E3 		cmp	r3, #0
 4509 06e4 0100001A 		bne	.L284
 4510 06e8 0430E0E3 		mvn	r3, #4
 4511              		.loc 1 2522 5
 4512 06ec 580000EA 		b	.L243
 4513              	.L284:
 4514              		.loc 1 2522 5 discriminator 2
 4515 06f0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4516 06f4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4517 06f8 002093E5 		ldr	r2, [r3]
 4518 06fc 20301BE5 		ldr	r3, [fp, #-32]
 4519 0700 102083E5 		str	r2, [r3, #16]
2523:../../Source/Kernel/rme_kernel.c ****     
2524:../../Source/Kernel/rme_kernel.c ****     /* All done, we replicate the cap with flags */
2525:../../Source/Kernel/rme_kernel.c ****     if(Src_Type==RME_CAP_TYPE_KOM)
 4520              		.loc 1 2525 7 is_stmt 1
 4521 0704 28301BE5 		ldr	r3, [fp, #-40]
 4522 0708 020053E3 		cmp	r3, #2
 4523 070c 1A00001A 		bne	.L285
2526:../../Source/Kernel/rme_kernel.c ****     {
2527:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2528:../../Source/Kernel/rme_kernel.c ****             
2529:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Kom_Flag);
 4524              		.loc 1 2529 9
 4525 0710 20301BE5 		ldr	r3, [fp, #-32]
 4526 0714 18201BE5 		ldr	r2, [fp, #-24]
 4527 0718 082083E5 		str	r2, [r3, #8]
 4528 071c 24301BE5 		ldr	r3, [fp, #-36]
 4529 0720 0C2093E5 		ldr	r2, [r3, #12]
 4530 0724 20301BE5 		ldr	r3, [fp, #-32]
 4531 0728 0C2083E5 		str	r2, [r3, #12]
 4532 072c 24301BE5 		ldr	r3, [fp, #-36]
 4533 0730 142093E5 		ldr	r2, [r3, #20]
 4534 0734 20301BE5 		ldr	r3, [fp, #-32]
 4535 0738 142083E5 		str	r2, [r3, #20]
 4536 073c 24301BE5 		ldr	r3, [fp, #-36]
 4537 0740 182093E5 		ldr	r2, [r3, #24]
 4538 0744 20301BE5 		ldr	r3, [fp, #-32]
 4539 0748 182083E5 		str	r2, [r3, #24]
 4540 074c 24301BE5 		ldr	r3, [fp, #-36]
 4541 0750 1C2093E5 		ldr	r2, [r3, #28]
 4542 0754 20301BE5 		ldr	r3, [fp, #-32]
 4543 0758 1C2083E5 		str	r2, [r3, #28]
2530:../../Source/Kernel/rme_kernel.c ****         /* Write absolute range information for kernel memory caps */
2531:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->Begin=Kom_Begin;
 4544              		.loc 1 2531 58
 4545 075c 20301BE5 		ldr	r3, [fp, #-32]
 4546 0760 10201BE5 		ldr	r2, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 126


 4547 0764 142083E5 		str	r2, [r3, #20]
2532:../../Source/Kernel/rme_kernel.c ****         /* The Kom_End encoded inclusively to avoid overflow at max address */
2533:../../Source/Kernel/rme_kernel.c ****         ((volatile struct RME_Cap_Kom*)Capobj_Dst)->End=Kom_End-1U;
 4548              		.loc 1 2533 64
 4549 0768 14301BE5 		ldr	r3, [fp, #-20]
 4550 076c 012043E2 		sub	r2, r3, #1
 4551              		.loc 1 2533 56
 4552 0770 20301BE5 		ldr	r3, [fp, #-32]
 4553 0774 182083E5 		str	r2, [r3, #24]
 4554 0778 120000EA 		b	.L286
 4555              	.L285:
2534:../../Source/Kernel/rme_kernel.c ****     }
2535:../../Source/Kernel/rme_kernel.c ****     else
2536:../../Source/Kernel/rme_kernel.c ****     {
2537:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2538:../../Source/Kernel/rme_kernel.c ****         
2539:../../Source/Kernel/rme_kernel.c ****         RME_CAP_COPY(Capobj_Dst,Capobj_Src,Flag);
 4556              		.loc 1 2539 9
 4557 077c 20301BE5 		ldr	r3, [fp, #-32]
 4558 0780 08209BE5 		ldr	r2, [fp, #8]
 4559 0784 082083E5 		str	r2, [r3, #8]
 4560 0788 24301BE5 		ldr	r3, [fp, #-36]
 4561 078c 0C2093E5 		ldr	r2, [r3, #12]
 4562 0790 20301BE5 		ldr	r3, [fp, #-32]
 4563 0794 0C2083E5 		str	r2, [r3, #12]
 4564 0798 24301BE5 		ldr	r3, [fp, #-36]
 4565 079c 142093E5 		ldr	r2, [r3, #20]
 4566 07a0 20301BE5 		ldr	r3, [fp, #-32]
 4567 07a4 142083E5 		str	r2, [r3, #20]
 4568 07a8 24301BE5 		ldr	r3, [fp, #-36]
 4569 07ac 182093E5 		ldr	r2, [r3, #24]
 4570 07b0 20301BE5 		ldr	r3, [fp, #-32]
 4571 07b4 182083E5 		str	r2, [r3, #24]
 4572 07b8 24301BE5 		ldr	r3, [fp, #-36]
 4573 07bc 1C2093E5 		ldr	r2, [r3, #28]
 4574 07c0 20301BE5 		ldr	r3, [fp, #-32]
 4575 07c4 1C2083E5 		str	r2, [r3, #28]
 4576              	.L286:
2540:../../Source/Kernel/rme_kernel.c ****     }
2541:../../Source/Kernel/rme_kernel.c ****     
2542:../../Source/Kernel/rme_kernel.c ****     /* Set the parent and increase reference count - if this is actually needed.
2543:../../Source/Kernel/rme_kernel.c ****      * The only two cases where this is not needed are KFN and KOM. These two
2544:../../Source/Kernel/rme_kernel.c ****      * capability types are standalone on their own and do not need to reference
2545:../../Source/Kernel/rme_kernel.c ****      * their parent, nor will they update the parent's reference count. This
2546:../../Source/Kernel/rme_kernel.c ****      * design decision comes from the fact that these two capability types are
2547:../../Source/Kernel/rme_kernel.c ****      * always created on boot and delegated everywhere, and they don't actually
2548:../../Source/Kernel/rme_kernel.c ****      * have an object. If we use refcnt on these, we may cause scalability 
2549:../../Source/Kernel/rme_kernel.c ****      * issues. The parent cap can't be deleted anyway, so this is fine. */
2550:../../Source/Kernel/rme_kernel.c ****     if((Src_Type!=RME_CAP_TYPE_KOM)&&(Src_Type!=RME_CAP_TYPE_KFN))
 4577              		.loc 1 2550 7
 4578 07c8 28301BE5 		ldr	r3, [fp, #-40]
 4579 07cc 020053E3 		cmp	r3, #2
 4580 07d0 1400000A 		beq	.L287
 4581              		.loc 1 2550 36 discriminator 1
 4582 07d4 28301BE5 		ldr	r3, [fp, #-40]
 4583 07d8 010053E3 		cmp	r3, #1
 4584 07dc 1100000A 		beq	.L287
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 127


2551:../../Source/Kernel/rme_kernel.c ****     {
2552:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2553:../../Source/Kernel/rme_kernel.c ****         
2554:../../Source/Kernel/rme_kernel.c ****         /* Register root */
2555:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=RME_CAP_CONV_ROOT(Capobj_Src,rme_ptr_t);
 4585              		.loc 1 2555 35
 4586 07e0 24301BE5 		ldr	r3, [fp, #-36]
 4587 07e4 003093E5 		ldr	r3, [r3]
 4588 07e8 7330FFE6 		uxth	r3, r3
 4589 07ec 000053E3 		cmp	r3, #0
 4590 07f0 0200000A 		beq	.L288
 4591              		.loc 1 2555 35 is_stmt 0 discriminator 1
 4592 07f4 24301BE5 		ldr	r3, [fp, #-36]
 4593 07f8 043093E5 		ldr	r3, [r3, #4]
 4594 07fc 000000EA 		b	.L289
 4595              	.L288:
 4596              		.loc 1 2555 35 discriminator 2
 4597 0800 24301BE5 		ldr	r3, [fp, #-36]
 4598              	.L289:
 4599              		.loc 1 2555 34 is_stmt 1 discriminator 4
 4600 0804 20201BE5 		ldr	r2, [fp, #-32]
 4601 0808 043082E5 		str	r3, [r2, #4]
2556:../../Source/Kernel/rme_kernel.c ****     
2557:../../Source/Kernel/rme_kernel.c ****         /* Increase the parent's refcnt - never overflows, guaranteed by field size */
2558:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(((volatile struct RME_Cap_Struct*)
 4602              		.loc 1 2558 9
 4603 080c 20301BE5 		ldr	r3, [fp, #-32]
 4604 0810 043093E5 		ldr	r3, [r3, #4]
 4605 0814 043083E2 		add	r3, r3, #4
 4606 0818 0110A0E3 		mov	r1, #1
 4607 081c 0300A0E1 		mov	r0, r3
 4608 0820 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4609 0824 020000EA 		b	.L290
 4610              	.L287:
2559:../../Source/Kernel/rme_kernel.c ****                         (Capobj_Dst->Head.Root_Ref))->Head.Root_Ref),1U);
2560:../../Source/Kernel/rme_kernel.c ****     }
2561:../../Source/Kernel/rme_kernel.c ****     else
2562:../../Source/Kernel/rme_kernel.c ****     {
2563:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2564:../../Source/Kernel/rme_kernel.c ****         
2565:../../Source/Kernel/rme_kernel.c ****         /* No root for KOM and KFN */
2566:../../Source/Kernel/rme_kernel.c ****         Capobj_Dst->Head.Root_Ref=0U;
 4611              		.loc 1 2566 34
 4612 0828 20301BE5 		ldr	r3, [fp, #-32]
 4613 082c 0020A0E3 		mov	r2, #0
 4614 0830 042083E5 		str	r2, [r3, #4]
 4615              	.L290:
2567:../../Source/Kernel/rme_kernel.c ****     }
2568:../../Source/Kernel/rme_kernel.c **** 
2569:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2570:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Capobj_Dst->Head.Type_Stat),
 4616              		.loc 1 2570 5
 4617 0834 20201BE5 		ldr	r2, [fp, #-32]
 4618 0838 28301BE5 		ldr	r3, [fp, #-40]
 4619 083c 033CA0E1 		lsl	r3, r3, #24
 4620 0840 013083E3 		orr	r3, r3, #1
 4621 0844 0310A0E1 		mov	r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 128


 4622 0848 0200A0E1 		mov	r0, r2
 4623 084c FEFFFFEB 		bl	__RME_A7A_Write_Release
2571:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(Src_Type,
2572:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2573:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_LEAF));
2574:../../Source/Kernel/rme_kernel.c **** 
2575:../../Source/Kernel/rme_kernel.c ****     return 0;
 4624              		.loc 1 2575 12
 4625 0850 0030A0E3 		mov	r3, #0
 4626              	.L243:
2576:../../Source/Kernel/rme_kernel.c **** }
 4627              		.loc 1 2576 1
 4628 0854 0300A0E1 		mov	r0, r3
 4629 0858 04D04BE2 		sub	sp, fp, #4
 4630              		.cfi_def_cfa 13, 8
 4631              		@ sp needed
 4632 085c 0088BDE8 		pop	{fp, pc}
 4633              		.cfi_endproc
 4634              	.LFE27:
 4636              		.section	.text._RME_Cpt_Rem,"ax",%progbits
 4637              		.align	2
 4638              		.syntax unified
 4639              		.arm
 4641              	_RME_Cpt_Rem:
 4642              	.LFB28:
2577:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Add *************************************************/
2578:../../Source/Kernel/rme_kernel.c **** 
2579:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Cpt_Rem ******************************************************
2580:../../Source/Kernel/rme_kernel.c **** Description : Remove one capability from the capability table. This function
2581:../../Source/Kernel/rme_kernel.c ****               reverts the delegation.
2582:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2583:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Rem - The capability to the capability table to
2584:../../Source/Kernel/rme_kernel.c ****                                       remove from.
2585:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
2586:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Rem - The capability slot you want to remove.
2587:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2588:../../Source/Kernel/rme_kernel.c **** Output      : None.
2589:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2590:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2591:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Cpt_Rem(struct RME_Cap_Cpt* Cpt,
2592:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Rem,
2593:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Rem)
2594:../../Source/Kernel/rme_kernel.c **** {
 4643              		.loc 1 2594 1
 4644              		.cfi_startproc
 4645              		@ args = 0, pretend = 0, frame = 40
 4646              		@ frame_needed = 1, uses_anonymous_args = 0
 4647 0000 00482DE9 		push	{fp, lr}
 4648              		.cfi_def_cfa_offset 8
 4649              		.cfi_offset 11, -8
 4650              		.cfi_offset 14, -4
 4651 0004 04B08DE2 		add	fp, sp, #4
 4652              		.cfi_def_cfa 11, 4
 4653 0008 28D04DE2 		sub	sp, sp, #40
 4654 000c 20000BE5 		str	r0, [fp, #-32]
 4655 0010 24100BE5 		str	r1, [fp, #-36]
 4656 0014 28200BE5 		str	r2, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 129


2595:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2596:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Rem;
2597:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2598:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Rem_Type;
2599:../../Source/Kernel/rme_kernel.c ****     /* This is used for removal */
2600:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Struct* Capobj_Root;
2601:../../Source/Kernel/rme_kernel.c ****     
2602:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2603:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Rem,RME_CAP_TYPE_CPT,
 4657              		.loc 1 2603 5
 4658 0018 24301BE5 		ldr	r3, [fp, #-36]
 4659 001c 803003E2 		and	r3, r3, #128
 4660 0020 000053E3 		cmp	r3, #0
 4661 0024 1C00001A 		bne	.L292
 4662              		.loc 1 2603 5 is_stmt 0 discriminator 1
 4663 0028 20301BE5 		ldr	r3, [fp, #-32]
 4664 002c 142093E5 		ldr	r2, [r3, #20]
 4665 0030 24301BE5 		ldr	r3, [fp, #-36]
 4666 0034 030052E1 		cmp	r2, r3
 4667 0038 0100008A 		bhi	.L293
 4668              		.loc 1 2603 5 discriminator 3
 4669 003c 0230E0E3 		mvn	r3, #2
 4670              		.loc 1 2603 5
 4671 0040 AB0000EA 		b	.L294
 4672              	.L293:
 4673              		.loc 1 2603 5 discriminator 4
 4674 0044 24301BE5 		ldr	r3, [fp, #-36]
 4675 0048 8322A0E1 		lsl	r2, r3, #5
 4676 004c 20301BE5 		ldr	r3, [fp, #-32]
 4677 0050 0C3093E5 		ldr	r3, [r3, #12]
 4678 0054 033082E0 		add	r3, r2, r3
 4679 0058 08300BE5 		str	r3, [fp, #-8]
 4680 005c 08301BE5 		ldr	r3, [fp, #-8]
 4681 0060 0300A0E1 		mov	r0, r3
 4682 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4683 0068 0C000BE5 		str	r0, [fp, #-12]
 4684              		.loc 1 2603 5 discriminator 1
 4685 006c 0C301BE5 		ldr	r3, [fp, #-12]
 4686 0070 FF3803E2 		and	r3, r3, #16711680
 4687 0074 020853E3 		cmp	r3, #131072
 4688 0078 0100001A 		bne	.L295
 4689              		.loc 1 2603 5 discriminator 5
 4690 007c 0830E0E3 		mvn	r3, #8
 4691              		.loc 1 2603 5
 4692 0080 9B0000EA 		b	.L294
 4693              	.L295:
 4694              		.loc 1 2603 5 discriminator 6
 4695 0084 0C301BE5 		ldr	r3, [fp, #-12]
 4696 0088 233CA0E1 		lsr	r3, r3, #24
 4697 008c 030053E3 		cmp	r3, #3
 4698 0090 3F00000A 		beq	.L296
 4699              		.loc 1 2603 5 discriminator 7
 4700 0094 0130E0E3 		mvn	r3, #1
 4701              		.loc 1 2603 5
 4702 0098 950000EA 		b	.L294
 4703              	.L292:
 4704              		.loc 1 2603 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 130


 4705 009c 24301BE5 		ldr	r3, [fp, #-36]
 4706 00a0 2324A0E1 		lsr	r2, r3, #8
 4707 00a4 20301BE5 		ldr	r3, [fp, #-32]
 4708 00a8 143093E5 		ldr	r3, [r3, #20]
 4709 00ac 030052E1 		cmp	r2, r3
 4710 00b0 0100003A 		bcc	.L297
 4711              		.loc 1 2603 5 discriminator 8
 4712 00b4 0230E0E3 		mvn	r3, #2
 4713              		.loc 1 2603 5
 4714 00b8 8D0000EA 		b	.L294
 4715              	.L297:
 4716              		.loc 1 2603 5 discriminator 9
 4717 00bc 24301BE5 		ldr	r3, [fp, #-36]
 4718 00c0 2334A0E1 		lsr	r3, r3, #8
 4719 00c4 8322A0E1 		lsl	r2, r3, #5
 4720 00c8 20301BE5 		ldr	r3, [fp, #-32]
 4721 00cc 0C3093E5 		ldr	r3, [r3, #12]
 4722 00d0 033082E0 		add	r3, r2, r3
 4723 00d4 08300BE5 		str	r3, [fp, #-8]
 4724 00d8 08301BE5 		ldr	r3, [fp, #-8]
 4725 00dc 0300A0E1 		mov	r0, r3
 4726 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4727 00e4 0C000BE5 		str	r0, [fp, #-12]
 4728              		.loc 1 2603 5 discriminator 1
 4729 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 4730 00ec FF3803E2 		and	r3, r3, #16711680
 4731 00f0 020853E3 		cmp	r3, #131072
 4732 00f4 0100001A 		bne	.L298
 4733              		.loc 1 2603 5 discriminator 10
 4734 00f8 0830E0E3 		mvn	r3, #8
 4735              		.loc 1 2603 5
 4736 00fc 7C0000EA 		b	.L294
 4737              	.L298:
 4738              		.loc 1 2603 5 discriminator 11
 4739 0100 0C301BE5 		ldr	r3, [fp, #-12]
 4740 0104 233CA0E1 		lsr	r3, r3, #24
 4741 0108 030053E3 		cmp	r3, #3
 4742 010c 0100000A 		beq	.L299
 4743              		.loc 1 2603 5 discriminator 12
 4744 0110 0130E0E3 		mvn	r3, #1
 4745              		.loc 1 2603 5
 4746 0114 760000EA 		b	.L294
 4747              	.L299:
 4748              		.loc 1 2603 5 discriminator 13
 4749 0118 24301BE5 		ldr	r3, [fp, #-36]
 4750 011c 7F2003E2 		and	r2, r3, #127
 4751 0120 08301BE5 		ldr	r3, [fp, #-8]
 4752 0124 143093E5 		ldr	r3, [r3, #20]
 4753 0128 030052E1 		cmp	r2, r3
 4754 012c 0100003A 		bcc	.L300
 4755              		.loc 1 2603 5 discriminator 14
 4756 0130 0230E0E3 		mvn	r3, #2
 4757              		.loc 1 2603 5
 4758 0134 6E0000EA 		b	.L294
 4759              	.L300:
 4760              		.loc 1 2603 5 discriminator 15
 4761 0138 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 131


 4762 013c 7F3003E2 		and	r3, r3, #127
 4763 0140 8322A0E1 		lsl	r2, r3, #5
 4764 0144 08301BE5 		ldr	r3, [fp, #-8]
 4765 0148 0C3093E5 		ldr	r3, [r3, #12]
 4766 014c 033082E0 		add	r3, r2, r3
 4767 0150 08300BE5 		str	r3, [fp, #-8]
 4768 0154 08301BE5 		ldr	r3, [fp, #-8]
 4769 0158 0300A0E1 		mov	r0, r3
 4770 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4771 0160 0C000BE5 		str	r0, [fp, #-12]
 4772              		.loc 1 2603 5 discriminator 1
 4773 0164 0C301BE5 		ldr	r3, [fp, #-12]
 4774 0168 FF3803E2 		and	r3, r3, #16711680
 4775 016c 020853E3 		cmp	r3, #131072
 4776 0170 0100001A 		bne	.L301
 4777              		.loc 1 2603 5 discriminator 16
 4778 0174 0830E0E3 		mvn	r3, #8
 4779              		.loc 1 2603 5
 4780 0178 5D0000EA 		b	.L294
 4781              	.L301:
 4782              		.loc 1 2603 5 discriminator 17
 4783 017c 0C301BE5 		ldr	r3, [fp, #-12]
 4784 0180 233CA0E1 		lsr	r3, r3, #24
 4785 0184 030053E3 		cmp	r3, #3
 4786 0188 0100000A 		beq	.L296
 4787              		.loc 1 2603 5 discriminator 18
 4788 018c 0130E0E3 		mvn	r3, #1
 4789              		.loc 1 2603 5
 4790 0190 570000EA 		b	.L294
 4791              	.L296:
2604:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
2605:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2606:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_REM);
 4792              		.loc 1 2606 5 is_stmt 1
 4793 0194 08301BE5 		ldr	r3, [fp, #-8]
 4794 0198 083093E5 		ldr	r3, [r3, #8]
 4795 019c 203003E2 		and	r3, r3, #32
 4796 01a0 000053E3 		cmp	r3, #0
 4797 01a4 0100001A 		bne	.L302
 4798              		.loc 1 2606 5 is_stmt 0 discriminator 1
 4799 01a8 0630E0E3 		mvn	r3, #6
 4800              		.loc 1 2606 5
 4801 01ac 500000EA 		b	.L294
 4802              	.L302:
2607:../../Source/Kernel/rme_kernel.c ****     
2608:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2609:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Rem,struct RME_Cap_Struct*,Capobj_Rem);
 4803              		.loc 1 2609 5 is_stmt 1
 4804 01b0 08301BE5 		ldr	r3, [fp, #-8]
 4805 01b4 142093E5 		ldr	r2, [r3, #20]
 4806 01b8 28301BE5 		ldr	r3, [fp, #-40]
 4807 01bc 030052E1 		cmp	r2, r3
 4808 01c0 0100008A 		bhi	.L303
 4809              		.loc 1 2609 5 is_stmt 0 discriminator 1
 4810 01c4 0230E0E3 		mvn	r3, #2
 4811              		.loc 1 2609 5
 4812 01c8 490000EA 		b	.L294
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 132


 4813              	.L303:
 4814              		.loc 1 2609 5 discriminator 2
 4815 01cc 28301BE5 		ldr	r3, [fp, #-40]
 4816 01d0 8322A0E1 		lsl	r2, r3, #5
 4817 01d4 08301BE5 		ldr	r3, [fp, #-8]
 4818 01d8 0C3093E5 		ldr	r3, [r3, #12]
 4819 01dc 033082E0 		add	r3, r2, r3
 4820 01e0 10300BE5 		str	r3, [fp, #-16]
2610:../../Source/Kernel/rme_kernel.c ****     /* Removal check */
2611:../../Source/Kernel/rme_kernel.c ****     RME_CAP_REM_CHECK(Capobj_Rem,Type_Stat);
 4821              		.loc 1 2611 5 is_stmt 1
 4822 01e4 10301BE5 		ldr	r3, [fp, #-16]
 4823 01e8 0300A0E1 		mov	r0, r3
 4824 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4825 01f0 0C000BE5 		str	r0, [fp, #-12]
 4826              		.loc 1 2611 5 is_stmt 0 discriminator 1
 4827 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 4828 01f8 FF3803E2 		and	r3, r3, #16711680
 4829 01fc 020853E3 		cmp	r3, #131072
 4830 0200 0100000A 		beq	.L304
 4831 0204 0830E0E3 		mvn	r3, #8
 4832              		.loc 1 2611 5
 4833 0208 390000EA 		b	.L294
 4834              	.L304:
 4835              		.loc 1 2611 5 discriminator 2
 4836 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 4837 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 4838 0214 002093E5 		ldr	r2, [r3]
 4839 0218 10301BE5 		ldr	r3, [fp, #-16]
 4840 021c 103093E5 		ldr	r3, [r3, #16]
 4841 0220 0310A0E1 		mov	r1, r3
 4842 0224 0200A0E1 		mov	r0, r2
 4843 0228 FEFFFFEB 		bl	_RME_Diff
 4844 022c 0030A0E1 		mov	r3, r0
 4845              		.loc 1 2611 5 discriminator 1
 4846 0230 0A0053E3 		cmp	r3, #10
 4847 0234 0100008A 		bhi	.L305
 4848              		.loc 1 2611 5 discriminator 3
 4849 0238 0730E0E3 		mvn	r3, #7
 4850              		.loc 1 2611 5
 4851 023c 2C0000EA 		b	.L294
 4852              	.L305:
 4853              		.loc 1 2611 5 discriminator 4
 4854 0240 0C301BE5 		ldr	r3, [fp, #-12]
 4855 0244 7330FFE6 		uxth	r3, r3
 4856 0248 000053E3 		cmp	r3, #0
 4857 024c 0100001A 		bne	.L306
 4858              		.loc 1 2611 5 discriminator 5
 4859 0250 0930E0E3 		mvn	r3, #9
 4860              		.loc 1 2611 5
 4861 0254 260000EA 		b	.L294
 4862              	.L306:
2612:../../Source/Kernel/rme_kernel.c ****     
2613:../../Source/Kernel/rme_kernel.c ****     /* If we are KFN or KOM, we don't care about parent or refcnt */
2614:../../Source/Kernel/rme_kernel.c ****     Rem_Type=RME_CAP_TYPE(Type_Stat);
 4863              		.loc 1 2614 13 is_stmt 1
 4864 0258 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 133


 4865 025c 233CA0E1 		lsr	r3, r3, #24
 4866 0260 14300BE5 		str	r3, [fp, #-20]
2615:../../Source/Kernel/rme_kernel.c ****     if((Rem_Type!=RME_CAP_TYPE_KOM)&&(Rem_Type!=RME_CAP_TYPE_KFN))
 4867              		.loc 1 2615 7
 4868 0264 14301BE5 		ldr	r3, [fp, #-20]
 4869 0268 020053E3 		cmp	r3, #2
 4870 026c 1500000A 		beq	.L307
 4871              		.loc 1 2615 36 discriminator 1
 4872 0270 14301BE5 		ldr	r3, [fp, #-20]
 4873 0274 010053E3 		cmp	r3, #1
 4874 0278 1200000A 		beq	.L307
2616:../../Source/Kernel/rme_kernel.c ****     {
2617:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2618:../../Source/Kernel/rme_kernel.c ****         
2619:../../Source/Kernel/rme_kernel.c ****         /* Remember this for refcnt operations */
2620:../../Source/Kernel/rme_kernel.c ****         Capobj_Root=(struct RME_Cap_Struct*)(Capobj_Rem->Head.Root_Ref);
 4875              		.loc 1 2620 62
 4876 027c 10301BE5 		ldr	r3, [fp, #-16]
 4877 0280 043093E5 		ldr	r3, [r3, #4]
 4878              		.loc 1 2620 20
 4879 0284 18300BE5 		str	r3, [fp, #-24]
2621:../../Source/Kernel/rme_kernel.c ****         
2622:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4880              		.loc 1 2622 9
 4881 0288 10301BE5 		ldr	r3, [fp, #-16]
 4882 028c 0020A0E3 		mov	r2, #0
 4883 0290 0C101BE5 		ldr	r1, [fp, #-12]
 4884 0294 0300A0E1 		mov	r0, r3
 4885 0298 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4886 029c 0030A0E1 		mov	r3, r0
 4887              		.loc 1 2622 9 is_stmt 0 discriminator 1
 4888 02a0 000053E3 		cmp	r3, #0
 4889 02a4 0100001A 		bne	.L308
 4890 02a8 0030E0E3 		mvn	r3, #0
 4891              		.loc 1 2622 9
 4892 02ac 100000EA 		b	.L294
 4893              	.L308:
2623:../../Source/Kernel/rme_kernel.c **** 
2624:../../Source/Kernel/rme_kernel.c ****         /* Check done, decrease its parent's refcnt. This must be done at last */
2625:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Capobj_Root->Head.Root_Ref),-1);
 4894              		.loc 1 2625 9 is_stmt 1
 4895 02b0 18301BE5 		ldr	r3, [fp, #-24]
 4896 02b4 043083E2 		add	r3, r3, #4
 4897 02b8 0010E0E3 		mvn	r1, #0
 4898 02bc 0300A0E1 		mov	r0, r3
 4899 02c0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 4900 02c4 090000EA 		b	.L309
 4901              	.L307:
2626:../../Source/Kernel/rme_kernel.c ****     }
2627:../../Source/Kernel/rme_kernel.c ****     else
2628:../../Source/Kernel/rme_kernel.c ****     {
2629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2630:../../Source/Kernel/rme_kernel.c **** 
2631:../../Source/Kernel/rme_kernel.c ****         /* Helping also applies here */
2632:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DELETE(Capobj_Rem,Type_Stat);
 4902              		.loc 1 2632 9
 4903 02c8 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 134


 4904 02cc 0020A0E3 		mov	r2, #0
 4905 02d0 0C101BE5 		ldr	r1, [fp, #-12]
 4906 02d4 0300A0E1 		mov	r0, r3
 4907 02d8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 4908 02dc 0030A0E1 		mov	r3, r0
 4909              		.loc 1 2632 9 is_stmt 0 discriminator 1
 4910 02e0 000053E3 		cmp	r3, #0
 4911 02e4 0100001A 		bne	.L309
 4912 02e8 0030E0E3 		mvn	r3, #0
 4913              		.loc 1 2632 9
 4914 02ec 000000EA 		b	.L294
 4915              	.L309:
2633:../../Source/Kernel/rme_kernel.c ****     }
2634:../../Source/Kernel/rme_kernel.c ****     
2635:../../Source/Kernel/rme_kernel.c ****     return 0;
 4916              		.loc 1 2635 12 is_stmt 1
 4917 02f0 0030A0E3 		mov	r3, #0
 4918              	.L294:
2636:../../Source/Kernel/rme_kernel.c **** }
 4919              		.loc 1 2636 1
 4920 02f4 0300A0E1 		mov	r0, r3
 4921 02f8 04D04BE2 		sub	sp, fp, #4
 4922              		.cfi_def_cfa 13, 8
 4923              		@ sp needed
 4924 02fc 0088BDE8 		pop	{fp, pc}
 4925              		.cfi_endproc
 4926              	.LFE28:
 4928              		.section	.text._RME_Pgt_Boot_Crt,"ax",%progbits
 4929              		.align	2
 4930              		.global	_RME_Pgt_Boot_Crt
 4931              		.syntax unified
 4932              		.arm
 4934              	_RME_Pgt_Boot_Crt:
 4935              	.LFB29:
2637:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Cpt_Rem *************************************************/
2638:../../Source/Kernel/rme_kernel.c **** 
2639:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Crt *************************************************
2640:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time page table.
2641:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
2642:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2643:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
2644:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
2645:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2646:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
2647:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
2648:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
2649:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the page table.
2650:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
2651:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
2652:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
2653:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
2654:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page
2655:../../Source/Kernel/rme_kernel.c ****                                  directories into it.
2656:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
2657:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the
2658:../../Source/Kernel/rme_kernel.c ****                                      page directory.
2659:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the page
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 135


2660:../../Source/Kernel/rme_kernel.c ****                                     table.
2661:../../Source/Kernel/rme_kernel.c **** Output      : None.
2662:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2663:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2664:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2665:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Crt(struct RME_Cap_Cpt* Cpt,
2666:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
2667:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt,
2668:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
2669:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Base,
2670:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Is_Top,
2671:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Size_Order,
2672:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Num_Order)
2673:../../Source/Kernel/rme_kernel.c **** {
 4936              		.loc 1 2673 1
 4937              		.cfi_startproc
 4938              		@ args = 16, pretend = 0, frame = 32
 4939              		@ frame_needed = 1, uses_anonymous_args = 0
 4940 0000 00482DE9 		push	{fp, lr}
 4941              		.cfi_def_cfa_offset 8
 4942              		.cfi_offset 11, -8
 4943              		.cfi_offset 14, -4
 4944 0004 04B08DE2 		add	fp, sp, #4
 4945              		.cfi_def_cfa 11, 4
 4946 0008 28D04DE2 		sub	sp, sp, #40
 4947 000c 18000BE5 		str	r0, [fp, #-24]
 4948 0010 1C100BE5 		str	r1, [fp, #-28]
 4949 0014 20200BE5 		str	r2, [fp, #-32]
 4950 0018 24300BE5 		str	r3, [fp, #-36]
2674:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
2675:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
2676:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2677:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
2678:../../Source/Kernel/rme_kernel.c ****     
2679:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
2680:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
2681:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 4951              		.loc 1 2681 19
 4952 001c 0C209BE5 		ldr	r2, [fp, #12]
 4953 0020 10309BE5 		ldr	r3, [fp, #16]
 4954 0024 033082E0 		add	r3, r2, r3
 4955              		.loc 1 2681 7
 4956 0028 200053E3 		cmp	r3, #32
 4957 002c 0100009A 		bls	.L311
2682:../../Source/Kernel/rme_kernel.c ****     {
2683:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2684:../../Source/Kernel/rme_kernel.c **** 
2685:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 4958              		.loc 1 2685 16
 4959 0030 6630E0E3 		mvn	r3, #102
 4960 0034 D00000EA 		b	.L312
 4961              	.L311:
2686:../../Source/Kernel/rme_kernel.c ****     }
2687:../../Source/Kernel/rme_kernel.c ****     else
2688:../../Source/Kernel/rme_kernel.c ****     {
2689:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2690:../../Source/Kernel/rme_kernel.c ****         /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 136


2691:../../Source/Kernel/rme_kernel.c ****     }
2692:../../Source/Kernel/rme_kernel.c **** 
2693:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
2694:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 4962              		.loc 1 2694 5
 4963 0038 1C301BE5 		ldr	r3, [fp, #-28]
 4964 003c 803003E2 		and	r3, r3, #128
 4965 0040 000053E3 		cmp	r3, #0
 4966 0044 1C00001A 		bne	.L313
 4967              		.loc 1 2694 5 is_stmt 0 discriminator 1
 4968 0048 18301BE5 		ldr	r3, [fp, #-24]
 4969 004c 142093E5 		ldr	r2, [r3, #20]
 4970 0050 1C301BE5 		ldr	r3, [fp, #-28]
 4971 0054 030052E1 		cmp	r2, r3
 4972 0058 0100008A 		bhi	.L314
 4973              		.loc 1 2694 5 discriminator 3
 4974 005c 0230E0E3 		mvn	r3, #2
 4975              		.loc 1 2694 5
 4976 0060 C50000EA 		b	.L312
 4977              	.L314:
 4978              		.loc 1 2694 5 discriminator 4
 4979 0064 1C301BE5 		ldr	r3, [fp, #-28]
 4980 0068 8322A0E1 		lsl	r2, r3, #5
 4981 006c 18301BE5 		ldr	r3, [fp, #-24]
 4982 0070 0C3093E5 		ldr	r3, [r3, #12]
 4983 0074 033082E0 		add	r3, r2, r3
 4984 0078 0C300BE5 		str	r3, [fp, #-12]
 4985 007c 0C301BE5 		ldr	r3, [fp, #-12]
 4986 0080 0300A0E1 		mov	r0, r3
 4987 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 4988 0088 10000BE5 		str	r0, [fp, #-16]
 4989              		.loc 1 2694 5 discriminator 1
 4990 008c 10301BE5 		ldr	r3, [fp, #-16]
 4991 0090 FF3803E2 		and	r3, r3, #16711680
 4992 0094 020853E3 		cmp	r3, #131072
 4993 0098 0100001A 		bne	.L315
 4994              		.loc 1 2694 5 discriminator 5
 4995 009c 0830E0E3 		mvn	r3, #8
 4996              		.loc 1 2694 5
 4997 00a0 B50000EA 		b	.L312
 4998              	.L315:
 4999              		.loc 1 2694 5 discriminator 6
 5000 00a4 10301BE5 		ldr	r3, [fp, #-16]
 5001 00a8 233CA0E1 		lsr	r3, r3, #24
 5002 00ac 030053E3 		cmp	r3, #3
 5003 00b0 3F00000A 		beq	.L316
 5004              		.loc 1 2694 5 discriminator 7
 5005 00b4 0130E0E3 		mvn	r3, #1
 5006              		.loc 1 2694 5
 5007 00b8 AF0000EA 		b	.L312
 5008              	.L313:
 5009              		.loc 1 2694 5 discriminator 2
 5010 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 5011 00c0 2324A0E1 		lsr	r2, r3, #8
 5012 00c4 18301BE5 		ldr	r3, [fp, #-24]
 5013 00c8 143093E5 		ldr	r3, [r3, #20]
 5014 00cc 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 137


 5015 00d0 0100003A 		bcc	.L317
 5016              		.loc 1 2694 5 discriminator 8
 5017 00d4 0230E0E3 		mvn	r3, #2
 5018              		.loc 1 2694 5
 5019 00d8 A70000EA 		b	.L312
 5020              	.L317:
 5021              		.loc 1 2694 5 discriminator 9
 5022 00dc 1C301BE5 		ldr	r3, [fp, #-28]
 5023 00e0 2334A0E1 		lsr	r3, r3, #8
 5024 00e4 8322A0E1 		lsl	r2, r3, #5
 5025 00e8 18301BE5 		ldr	r3, [fp, #-24]
 5026 00ec 0C3093E5 		ldr	r3, [r3, #12]
 5027 00f0 033082E0 		add	r3, r2, r3
 5028 00f4 0C300BE5 		str	r3, [fp, #-12]
 5029 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 5030 00fc 0300A0E1 		mov	r0, r3
 5031 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5032 0104 10000BE5 		str	r0, [fp, #-16]
 5033              		.loc 1 2694 5 discriminator 1
 5034 0108 10301BE5 		ldr	r3, [fp, #-16]
 5035 010c FF3803E2 		and	r3, r3, #16711680
 5036 0110 020853E3 		cmp	r3, #131072
 5037 0114 0100001A 		bne	.L318
 5038              		.loc 1 2694 5 discriminator 10
 5039 0118 0830E0E3 		mvn	r3, #8
 5040              		.loc 1 2694 5
 5041 011c 960000EA 		b	.L312
 5042              	.L318:
 5043              		.loc 1 2694 5 discriminator 11
 5044 0120 10301BE5 		ldr	r3, [fp, #-16]
 5045 0124 233CA0E1 		lsr	r3, r3, #24
 5046 0128 030053E3 		cmp	r3, #3
 5047 012c 0100000A 		beq	.L319
 5048              		.loc 1 2694 5 discriminator 12
 5049 0130 0130E0E3 		mvn	r3, #1
 5050              		.loc 1 2694 5
 5051 0134 900000EA 		b	.L312
 5052              	.L319:
 5053              		.loc 1 2694 5 discriminator 13
 5054 0138 1C301BE5 		ldr	r3, [fp, #-28]
 5055 013c 7F2003E2 		and	r2, r3, #127
 5056 0140 0C301BE5 		ldr	r3, [fp, #-12]
 5057 0144 143093E5 		ldr	r3, [r3, #20]
 5058 0148 030052E1 		cmp	r2, r3
 5059 014c 0100003A 		bcc	.L320
 5060              		.loc 1 2694 5 discriminator 14
 5061 0150 0230E0E3 		mvn	r3, #2
 5062              		.loc 1 2694 5
 5063 0154 880000EA 		b	.L312
 5064              	.L320:
 5065              		.loc 1 2694 5 discriminator 15
 5066 0158 1C301BE5 		ldr	r3, [fp, #-28]
 5067 015c 7F3003E2 		and	r3, r3, #127
 5068 0160 8322A0E1 		lsl	r2, r3, #5
 5069 0164 0C301BE5 		ldr	r3, [fp, #-12]
 5070 0168 0C3093E5 		ldr	r3, [r3, #12]
 5071 016c 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 138


 5072 0170 0C300BE5 		str	r3, [fp, #-12]
 5073 0174 0C301BE5 		ldr	r3, [fp, #-12]
 5074 0178 0300A0E1 		mov	r0, r3
 5075 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5076 0180 10000BE5 		str	r0, [fp, #-16]
 5077              		.loc 1 2694 5 discriminator 1
 5078 0184 10301BE5 		ldr	r3, [fp, #-16]
 5079 0188 FF3803E2 		and	r3, r3, #16711680
 5080 018c 020853E3 		cmp	r3, #131072
 5081 0190 0100001A 		bne	.L321
 5082              		.loc 1 2694 5 discriminator 16
 5083 0194 0830E0E3 		mvn	r3, #8
 5084              		.loc 1 2694 5
 5085 0198 770000EA 		b	.L312
 5086              	.L321:
 5087              		.loc 1 2694 5 discriminator 17
 5088 019c 10301BE5 		ldr	r3, [fp, #-16]
 5089 01a0 233CA0E1 		lsr	r3, r3, #24
 5090 01a4 030053E3 		cmp	r3, #3
 5091 01a8 0100000A 		beq	.L316
 5092              		.loc 1 2694 5 discriminator 18
 5093 01ac 0130E0E3 		mvn	r3, #1
 5094              		.loc 1 2694 5
 5095 01b0 710000EA 		b	.L312
 5096              	.L316:
2695:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
2696:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
2697:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 5097              		.loc 1 2697 5 is_stmt 1
 5098 01b4 0C301BE5 		ldr	r3, [fp, #-12]
 5099 01b8 083093E5 		ldr	r3, [r3, #8]
 5100 01bc 013003E2 		and	r3, r3, #1
 5101 01c0 000053E3 		cmp	r3, #0
 5102 01c4 0100001A 		bne	.L322
 5103              		.loc 1 2697 5 is_stmt 0 discriminator 1
 5104 01c8 0630E0E3 		mvn	r3, #6
 5105              		.loc 1 2697 5
 5106 01cc 6A0000EA 		b	.L312
 5107              	.L322:
2698:../../Source/Kernel/rme_kernel.c ****     
2699:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
2700:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)!=0)
 5108              		.loc 1 2700 8 is_stmt 1
 5109 01d0 24301BE5 		ldr	r3, [fp, #-36]
 5110 01d4 00308DE5 		str	r3, [sp]
 5111 01d8 10309BE5 		ldr	r3, [fp, #16]
 5112 01dc 0C209BE5 		ldr	r2, [fp, #12]
 5113 01e0 08109BE5 		ldr	r1, [fp, #8]
 5114 01e4 04009BE5 		ldr	r0, [fp, #4]
 5115 01e8 FEFFFFEB 		bl	__RME_Pgt_Check
 5116 01ec 0030A0E1 		mov	r3, r0
 5117              		.loc 1 2700 7 discriminator 1
 5118 01f0 000053E3 		cmp	r3, #0
 5119 01f4 0100000A 		beq	.L323
2701:../../Source/Kernel/rme_kernel.c ****     {
2702:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2703:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 139


2704:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5120              		.loc 1 2704 16
 5121 01f8 6630E0E3 		mvn	r3, #102
 5122 01fc 5E0000EA 		b	.L312
 5123              	.L323:
2705:../../Source/Kernel/rme_kernel.c ****     }
2706:../../Source/Kernel/rme_kernel.c ****     else
2707:../../Source/Kernel/rme_kernel.c ****     {
2708:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2709:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2710:../../Source/Kernel/rme_kernel.c ****     }
2711:../../Source/Kernel/rme_kernel.c ****     
2712:../../Source/Kernel/rme_kernel.c ****     /* Check if the base address is properly aligned to the total order of the page table */
2713:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 5124              		.loc 1 2713 14
 5125 0200 0C209BE5 		ldr	r2, [fp, #12]
 5126 0204 10309BE5 		ldr	r3, [fp, #16]
 5127 0208 033082E0 		add	r3, r2, r3
 5128 020c 203063E2 		rsb	r3, r3, #32
 5129 0210 0020E0E3 		mvn	r2, #0
 5130 0214 3223A0E1 		lsr	r2, r2, r3
 5131              		.loc 1 2713 13
 5132 0218 04309BE5 		ldr	r3, [fp, #4]
 5133 021c 023003E0 		and	r3, r3, r2
 5134              		.loc 1 2713 7
 5135 0220 000053E3 		cmp	r3, #0
 5136 0224 0100000A 		beq	.L324
2714:../../Source/Kernel/rme_kernel.c ****     {
2715:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2716:../../Source/Kernel/rme_kernel.c **** 
2717:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5137              		.loc 1 2717 16
 5138 0228 6630E0E3 		mvn	r3, #102
 5139 022c 520000EA 		b	.L312
 5140              	.L324:
2718:../../Source/Kernel/rme_kernel.c ****     }
2719:../../Source/Kernel/rme_kernel.c ****     else
2720:../../Source/Kernel/rme_kernel.c ****     {
2721:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2722:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2723:../../Source/Kernel/rme_kernel.c ****     }
2724:../../Source/Kernel/rme_kernel.c **** 
2725:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
2726:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 5141              		.loc 1 2726 5
 5142 0230 0C301BE5 		ldr	r3, [fp, #-12]
 5143 0234 142093E5 		ldr	r2, [r3, #20]
 5144 0238 20301BE5 		ldr	r3, [fp, #-32]
 5145 023c 030052E1 		cmp	r2, r3
 5146 0240 0100008A 		bhi	.L325
 5147              		.loc 1 2726 5 is_stmt 0 discriminator 1
 5148 0244 0230E0E3 		mvn	r3, #2
 5149              		.loc 1 2726 5
 5150 0248 4B0000EA 		b	.L312
 5151              	.L325:
 5152              		.loc 1 2726 5 discriminator 2
 5153 024c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 140


 5154 0250 8322A0E1 		lsl	r2, r3, #5
 5155 0254 0C301BE5 		ldr	r3, [fp, #-12]
 5156 0258 0C3093E5 		ldr	r3, [r3, #12]
 5157 025c 033082E0 		add	r3, r2, r3
 5158 0260 14300BE5 		str	r3, [fp, #-20]
2727:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
2728:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 5159              		.loc 1 2728 5 is_stmt 1
 5160 0264 14301BE5 		ldr	r3, [fp, #-20]
 5161 0268 0128A0E3 		mov	r2, #65536
 5162 026c 0010A0E3 		mov	r1, #0
 5163 0270 0300A0E1 		mov	r0, r3
 5164 0274 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 5165 0278 0030A0E1 		mov	r3, r0
 5166              		.loc 1 2728 5 is_stmt 0 discriminator 1
 5167 027c 000053E3 		cmp	r3, #0
 5168 0280 0100001A 		bne	.L326
 5169 0284 0430E0E3 		mvn	r3, #4
 5170              		.loc 1 2728 5
 5171 0288 3B0000EA 		b	.L312
 5172              	.L326:
 5173              		.loc 1 2728 5 discriminator 2
 5174 028c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 5175 0290 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 5176 0294 002093E5 		ldr	r2, [r3]
 5177 0298 14301BE5 		ldr	r3, [fp, #-20]
 5178 029c 102083E5 		str	r2, [r3, #16]
2729:../../Source/Kernel/rme_kernel.c **** 
2730:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top level? */
2731:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 5179              		.loc 1 2731 7 is_stmt 1
 5180 02a0 08309BE5 		ldr	r3, [fp, #8]
 5181 02a4 000053E3 		cmp	r3, #0
 5182 02a8 0400000A 		beq	.L327
2732:../../Source/Kernel/rme_kernel.c ****     {
2733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2734:../../Source/Kernel/rme_kernel.c ****         
2735:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 5183              		.loc 1 2735 19
 5184 02ac 0420A0E3 		mov	r2, #4
 5185 02b0 10309BE5 		ldr	r3, [fp, #16]
 5186 02b4 1233A0E1 		lsl	r3, r2, r3
 5187 02b8 08300BE5 		str	r3, [fp, #-8]
 5188 02bc 030000EA 		b	.L328
 5189              	.L327:
2736:../../Source/Kernel/rme_kernel.c ****     }
2737:../../Source/Kernel/rme_kernel.c ****     else
2738:../../Source/Kernel/rme_kernel.c ****     {
2739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2740:../../Source/Kernel/rme_kernel.c ****         
2741:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 5190              		.loc 1 2741 19
 5191 02c0 0420A0E3 		mov	r2, #4
 5192 02c4 10309BE5 		ldr	r3, [fp, #16]
 5193 02c8 1233A0E1 		lsl	r3, r2, r3
 5194 02cc 08300BE5 		str	r3, [fp, #-8]
 5195              	.L328:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 141


2742:../../Source/Kernel/rme_kernel.c ****     }
2743:../../Source/Kernel/rme_kernel.c ****     
2744:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
2745:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr, Table_Size)!=0)
 5196              		.loc 1 2745 8
 5197 02d0 08101BE5 		ldr	r1, [fp, #-8]
 5198 02d4 24001BE5 		ldr	r0, [fp, #-36]
 5199 02d8 FEFFFFEB 		bl	_RME_Kot_Mark
 5200 02dc 0030A0E1 		mov	r3, r0
 5201              		.loc 1 2745 7 discriminator 1
 5202 02e0 000053E3 		cmp	r3, #0
 5203 02e4 0500000A 		beq	.L329
2746:../../Source/Kernel/rme_kernel.c ****     {
2747:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2748:../../Source/Kernel/rme_kernel.c ****     
2749:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 5204              		.loc 1 2749 9
 5205 02e8 14301BE5 		ldr	r3, [fp, #-20]
 5206 02ec 0010A0E3 		mov	r1, #0
 5207 02f0 0300A0E1 		mov	r0, r3
 5208 02f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
2750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 5209              		.loc 1 2750 16
 5210 02f8 0330E0E3 		mvn	r3, #3
 5211 02fc 1E0000EA 		b	.L312
 5212              	.L329:
2751:../../Source/Kernel/rme_kernel.c ****     }
2752:../../Source/Kernel/rme_kernel.c ****     else
2753:../../Source/Kernel/rme_kernel.c ****     {
2754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2756:../../Source/Kernel/rme_kernel.c ****     }
2757:../../Source/Kernel/rme_kernel.c ****     
2758:../../Source/Kernel/rme_kernel.c ****     /* Header init */
2759:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 5213              		.loc 1 2759 27
 5214 0300 14301BE5 		ldr	r3, [fp, #-20]
 5215 0304 0020A0E3 		mov	r2, #0
 5216 0308 042083E5 		str	r2, [r3, #4]
2760:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
 5217              		.loc 1 2760 25
 5218 030c 14301BE5 		ldr	r3, [fp, #-20]
 5219 0310 24201BE5 		ldr	r2, [fp, #-36]
 5220 0314 0C2083E5 		str	r2, [r3, #12]
2761:../../Source/Kernel/rme_kernel.c ****     /* Set the property of the page table to only act as source and creating process */
2762:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ADD_SRC|
 5221              		.loc 1 2762 23
 5222 0318 14201BE5 		ldr	r2, [fp, #-20]
 5223 031c C130A0E3 		mov	r3, #193
 5224 0320 F03F4FE3 		movt	r3, 65520
 5225 0324 083082E5 		str	r3, [r2, #8]
2763:../../Source/Kernel/rme_kernel.c ****                        RME_PGT_FLAG_PRC_CRT|RME_PGT_FLAG_PRC_PGT;
2764:../../Source/Kernel/rme_kernel.c ****     
2765:../../Source/Kernel/rme_kernel.c ****     /* Info init */
2766:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 5226              		.loc 1 2766 23
 5227 0328 04209BE5 		ldr	r2, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 142


 5228 032c 08309BE5 		ldr	r3, [fp, #8]
 5229 0330 032082E1 		orr	r2, r2, r3
 5230              		.loc 1 2766 18
 5231 0334 14301BE5 		ldr	r3, [fp, #-20]
 5232 0338 182083E5 		str	r2, [r3, #24]
2767:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 5233              		.loc 1 2767 20
 5234 033c 0C309BE5 		ldr	r3, [fp, #12]
 5235 0340 0328A0E1 		lsl	r2, r3, #16
 5236 0344 10309BE5 		ldr	r3, [fp, #16]
 5237 0348 032082E1 		orr	r2, r2, r3
 5238              		.loc 1 2767 19
 5239 034c 14301BE5 		ldr	r3, [fp, #-20]
 5240 0350 142083E5 		str	r2, [r3, #20]
2768:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 5241              		.loc 1 2768 18
 5242 0354 14301BE5 		ldr	r3, [fp, #-20]
 5243 0358 0020A0E3 		mov	r2, #0
 5244 035c 1C2083E5 		str	r2, [r3, #28]
2769:../../Source/Kernel/rme_kernel.c **** 
2770:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
2771:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 5245              		.loc 1 2771 8
 5246 0360 14001BE5 		ldr	r0, [fp, #-20]
 5247 0364 FEFFFFEB 		bl	__RME_Pgt_Init
2772:../../Source/Kernel/rme_kernel.c ****     {
2773:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2774:../../Source/Kernel/rme_kernel.c ****         
2775:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
2776:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr, Table_Size)==0);
2777:../../Source/Kernel/rme_kernel.c **** 
2778:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
2779:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
2780:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
2781:../../Source/Kernel/rme_kernel.c ****     }
2782:../../Source/Kernel/rme_kernel.c ****     else
2783:../../Source/Kernel/rme_kernel.c ****     {
2784:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2785:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2786:../../Source/Kernel/rme_kernel.c ****     }
2787:../../Source/Kernel/rme_kernel.c **** 
2788:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
2789:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 5248              		.loc 1 2789 5
 5249 0368 14301BE5 		ldr	r3, [fp, #-20]
 5250 036c 0113A0E3 		mov	r1, #67108864
 5251 0370 0300A0E1 		mov	r0, r3
 5252 0374 FEFFFFEB 		bl	__RME_A7A_Write_Release
2790:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
2791:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
2792:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
2793:../../Source/Kernel/rme_kernel.c **** 
2794:../../Source/Kernel/rme_kernel.c ****     return 0;
 5253              		.loc 1 2794 12
 5254 0378 0030A0E3 		mov	r3, #0
 5255              	.L312:
2795:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 143


 5256              		.loc 1 2795 1
 5257 037c 0300A0E1 		mov	r0, r3
 5258 0380 04D04BE2 		sub	sp, fp, #4
 5259              		.cfi_def_cfa 13, 8
 5260              		@ sp needed
 5261 0384 0088BDE8 		pop	{fp, pc}
 5262              		.cfi_endproc
 5263              	.LFE29:
 5265              		.section	.rodata
 5266 0075 000000   		.align	2
 5267              	.LC9:
 5268 0078 0D0A6D61 		.ascii	"\015\012mapping range and the granularity is not al"
 5268      7070696E 
 5268      67207261 
 5268      6E676520 
 5268      616E6420 
 5269 00a5 6C6F7765 		.ascii	"lowed \000"
 5269      642000
 5270              		.align	2
 5271              	.LC10:
 5272 00ac 0D0A5468 		.ascii	"\015\012This work is not passed down to the HAL \000"
 5272      69732077 
 5272      6F726B20 
 5272      6973206E 
 5272      6F742070 
 5273              		.section	.text._RME_Pgt_Boot_Add,"ax",%progbits
 5274              		.align	2
 5275              		.global	_RME_Pgt_Boot_Add
 5276              		.syntax unified
 5277              		.arm
 5279              	_RME_Pgt_Boot_Add:
 5280              	.LFB30:
2796:../../Source/Kernel/rme_kernel.c **** #endif
2797:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Crt ********************************************/
2798:../../Source/Kernel/rme_kernel.c **** 
2799:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Add *************************************************
2800:../../Source/Kernel/rme_kernel.c **** Description : This function is exclusively used to set up the Init process's
2801:../../Source/Kernel/rme_kernel.c ****               memory mappings in the booting process. When the system has
2802:../../Source/Kernel/rme_kernel.c ****               booted, it won't possible to fabricate pages like this.
2803:../../Source/Kernel/rme_kernel.c ****               Additionally, this function will set the cap to page table's 
2804:../../Source/Kernel/rme_kernel.c ****               property as unremovable. This means that it is not allowed to
2805:../../Source/Kernel/rme_kernel.c ****               remove any pages in the directory. It will set the reference
2806:../../Source/Kernel/rme_kernel.c ****               count of the capability as 1, thus making the capability to the
2807:../../Source/Kernel/rme_kernel.c ****               initial page table undeletable.
2808:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2809:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
2810:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
2811:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Paddr - The physical address to map from.
2812:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to map to.
2813:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The flags for the user page.
2814:../../Source/Kernel/rme_kernel.c **** Output      : None.
2815:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2816:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2817:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2818:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Add(struct RME_Cap_Cpt* Cpt,
2819:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt, 
2820:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Paddr,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 144


2821:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2822:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
2823:../../Source/Kernel/rme_kernel.c **** {
 5281              		.loc 1 2823 1
 5282              		.cfi_startproc
 5283              		@ args = 4, pretend = 0, frame = 32
 5284              		@ frame_needed = 1, uses_anonymous_args = 0
 5285 0000 00482DE9 		push	{fp, lr}
 5286              		.cfi_def_cfa_offset 8
 5287              		.cfi_offset 11, -8
 5288              		.cfi_offset 14, -4
 5289 0004 04B08DE2 		add	fp, sp, #4
 5290              		.cfi_def_cfa 11, 4
 5291 0008 20D04DE2 		sub	sp, sp, #32
 5292 000c 18000BE5 		str	r0, [fp, #-24]
 5293 0010 1C100BE5 		str	r1, [fp, #-28]
 5294 0014 20200BE5 		str	r2, [fp, #-32]
 5295 0018 24300BE5 		str	r3, [fp, #-36]
2824:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
2825:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2826:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord;
2827:../../Source/Kernel/rme_kernel.c ****     
2828:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
2829:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 5296              		.loc 1 2829 5
 5297 001c 1C301BE5 		ldr	r3, [fp, #-28]
 5298 0020 803003E2 		and	r3, r3, #128
 5299 0024 000053E3 		cmp	r3, #0
 5300 0028 1C00001A 		bne	.L331
 5301              		.loc 1 2829 5 is_stmt 0 discriminator 1
 5302 002c 18301BE5 		ldr	r3, [fp, #-24]
 5303 0030 142093E5 		ldr	r2, [r3, #20]
 5304 0034 1C301BE5 		ldr	r3, [fp, #-28]
 5305 0038 030052E1 		cmp	r2, r3
 5306 003c 0100008A 		bhi	.L332
 5307              		.loc 1 2829 5 discriminator 3
 5308 0040 0230E0E3 		mvn	r3, #2
 5309              		.loc 1 2829 5
 5310 0044 800000EA 		b	.L333
 5311              	.L332:
 5312              		.loc 1 2829 5 discriminator 4
 5313 0048 1C301BE5 		ldr	r3, [fp, #-28]
 5314 004c 8322A0E1 		lsl	r2, r3, #5
 5315 0050 18301BE5 		ldr	r3, [fp, #-24]
 5316 0054 0C3093E5 		ldr	r3, [r3, #12]
 5317 0058 033082E0 		add	r3, r2, r3
 5318 005c 08300BE5 		str	r3, [fp, #-8]
 5319 0060 08301BE5 		ldr	r3, [fp, #-8]
 5320 0064 0300A0E1 		mov	r0, r3
 5321 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5322 006c 0C000BE5 		str	r0, [fp, #-12]
 5323              		.loc 1 2829 5 discriminator 1
 5324 0070 0C301BE5 		ldr	r3, [fp, #-12]
 5325 0074 FF3803E2 		and	r3, r3, #16711680
 5326 0078 020853E3 		cmp	r3, #131072
 5327 007c 0100001A 		bne	.L334
 5328              		.loc 1 2829 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 145


 5329 0080 0830E0E3 		mvn	r3, #8
 5330              		.loc 1 2829 5
 5331 0084 700000EA 		b	.L333
 5332              	.L334:
 5333              		.loc 1 2829 5 discriminator 6
 5334 0088 0C301BE5 		ldr	r3, [fp, #-12]
 5335 008c 233CA0E1 		lsr	r3, r3, #24
 5336 0090 040053E3 		cmp	r3, #4
 5337 0094 3F00000A 		beq	.L335
 5338              		.loc 1 2829 5 discriminator 7
 5339 0098 0130E0E3 		mvn	r3, #1
 5340              		.loc 1 2829 5
 5341 009c 6A0000EA 		b	.L333
 5342              	.L331:
 5343              		.loc 1 2829 5 discriminator 2
 5344 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 5345 00a4 2324A0E1 		lsr	r2, r3, #8
 5346 00a8 18301BE5 		ldr	r3, [fp, #-24]
 5347 00ac 143093E5 		ldr	r3, [r3, #20]
 5348 00b0 030052E1 		cmp	r2, r3
 5349 00b4 0100003A 		bcc	.L336
 5350              		.loc 1 2829 5 discriminator 8
 5351 00b8 0230E0E3 		mvn	r3, #2
 5352              		.loc 1 2829 5
 5353 00bc 620000EA 		b	.L333
 5354              	.L336:
 5355              		.loc 1 2829 5 discriminator 9
 5356 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 5357 00c4 2334A0E1 		lsr	r3, r3, #8
 5358 00c8 8322A0E1 		lsl	r2, r3, #5
 5359 00cc 18301BE5 		ldr	r3, [fp, #-24]
 5360 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5361 00d4 033082E0 		add	r3, r2, r3
 5362 00d8 08300BE5 		str	r3, [fp, #-8]
 5363 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5364 00e0 0300A0E1 		mov	r0, r3
 5365 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5366 00e8 0C000BE5 		str	r0, [fp, #-12]
 5367              		.loc 1 2829 5 discriminator 1
 5368 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 5369 00f0 FF3803E2 		and	r3, r3, #16711680
 5370 00f4 020853E3 		cmp	r3, #131072
 5371 00f8 0100001A 		bne	.L337
 5372              		.loc 1 2829 5 discriminator 10
 5373 00fc 0830E0E3 		mvn	r3, #8
 5374              		.loc 1 2829 5
 5375 0100 510000EA 		b	.L333
 5376              	.L337:
 5377              		.loc 1 2829 5 discriminator 11
 5378 0104 0C301BE5 		ldr	r3, [fp, #-12]
 5379 0108 233CA0E1 		lsr	r3, r3, #24
 5380 010c 030053E3 		cmp	r3, #3
 5381 0110 0100000A 		beq	.L338
 5382              		.loc 1 2829 5 discriminator 12
 5383 0114 0130E0E3 		mvn	r3, #1
 5384              		.loc 1 2829 5
 5385 0118 4B0000EA 		b	.L333
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 146


 5386              	.L338:
 5387              		.loc 1 2829 5 discriminator 13
 5388 011c 1C301BE5 		ldr	r3, [fp, #-28]
 5389 0120 7F2003E2 		and	r2, r3, #127
 5390 0124 08301BE5 		ldr	r3, [fp, #-8]
 5391 0128 143093E5 		ldr	r3, [r3, #20]
 5392 012c 030052E1 		cmp	r2, r3
 5393 0130 0100003A 		bcc	.L339
 5394              		.loc 1 2829 5 discriminator 14
 5395 0134 0230E0E3 		mvn	r3, #2
 5396              		.loc 1 2829 5
 5397 0138 430000EA 		b	.L333
 5398              	.L339:
 5399              		.loc 1 2829 5 discriminator 15
 5400 013c 1C301BE5 		ldr	r3, [fp, #-28]
 5401 0140 7F3003E2 		and	r3, r3, #127
 5402 0144 8322A0E1 		lsl	r2, r3, #5
 5403 0148 08301BE5 		ldr	r3, [fp, #-8]
 5404 014c 0C3093E5 		ldr	r3, [r3, #12]
 5405 0150 033082E0 		add	r3, r2, r3
 5406 0154 08300BE5 		str	r3, [fp, #-8]
 5407 0158 08301BE5 		ldr	r3, [fp, #-8]
 5408 015c 0300A0E1 		mov	r0, r3
 5409 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5410 0164 0C000BE5 		str	r0, [fp, #-12]
 5411              		.loc 1 2829 5 discriminator 1
 5412 0168 0C301BE5 		ldr	r3, [fp, #-12]
 5413 016c FF3803E2 		and	r3, r3, #16711680
 5414 0170 020853E3 		cmp	r3, #131072
 5415 0174 0100001A 		bne	.L340
 5416              		.loc 1 2829 5 discriminator 16
 5417 0178 0830E0E3 		mvn	r3, #8
 5418              		.loc 1 2829 5
 5419 017c 320000EA 		b	.L333
 5420              	.L340:
 5421              		.loc 1 2829 5 discriminator 17
 5422 0180 0C301BE5 		ldr	r3, [fp, #-12]
 5423 0184 233CA0E1 		lsr	r3, r3, #24
 5424 0188 040053E3 		cmp	r3, #4
 5425 018c 0100000A 		beq	.L335
 5426              		.loc 1 2829 5 discriminator 18
 5427 0190 0130E0E3 		mvn	r3, #1
 5428              		.loc 1 2829 5
 5429 0194 2C0000EA 		b	.L333
 5430              	.L335:
2830:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);    
2831:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen, but don't check their properties */
2832:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,0U);
2833:../../Source/Kernel/rme_kernel.c **** 
2834:../../Source/Kernel/rme_kernel.c ****     Szord=RME_PGT_SZORD(Pgt_Op->Order);
 5431              		.loc 1 2834 11 is_stmt 1
 5432 0198 08301BE5 		ldr	r3, [fp, #-8]
 5433 019c 143093E5 		ldr	r3, [r3, #20]
 5434              		.loc 1 2834 10
 5435 01a0 2338A0E1 		lsr	r3, r3, #16
 5436 01a4 10300BE5 		str	r3, [fp, #-16]
2835:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 147


2836:../../Source/Kernel/rme_kernel.c ****     /* Check if we force identical mapping */
2837:../../Source/Kernel/rme_kernel.c ****     if(Szord==RME_WORD_BIT)
2838:../../Source/Kernel/rme_kernel.c ****     {
2839:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2840:../../Source/Kernel/rme_kernel.c ****         
2841:../../Source/Kernel/rme_kernel.c ****         if((Paddr!=0U)||(Pos!=0U))
2842:../../Source/Kernel/rme_kernel.c ****         {
2843:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2844:../../Source/Kernel/rme_kernel.c ****             
2845:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2846:../../Source/Kernel/rme_kernel.c ****         }
2847:../../Source/Kernel/rme_kernel.c ****         else
2848:../../Source/Kernel/rme_kernel.c ****         {
2849:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2850:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2851:../../Source/Kernel/rme_kernel.c ****         }
2852:../../Source/Kernel/rme_kernel.c ****     }
2853:../../Source/Kernel/rme_kernel.c ****     else if(Paddr!=(RME_PGT_BASE(Pgt_Op->Base)+(Pos<<Szord)))
2854:../../Source/Kernel/rme_kernel.c ****     {
2855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2856:../../Source/Kernel/rme_kernel.c ****         
2857:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
2858:../../Source/Kernel/rme_kernel.c ****     }
2859:../../Source/Kernel/rme_kernel.c ****     else
2860:../../Source/Kernel/rme_kernel.c ****     {
2861:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2862:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2863:../../Source/Kernel/rme_kernel.c ****     }
2864:../../Source/Kernel/rme_kernel.c **** #endif
2865:../../Source/Kernel/rme_kernel.c **** 
2866:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range and the granularity is allowed */
2867:../../Source/Kernel/rme_kernel.c ****     if(((Pos>>RME_PGT_NMORD(Pgt_Op->Order))!=0U)||
 5437              		.loc 1 2867 15
 5438 01a8 08301BE5 		ldr	r3, [fp, #-8]
 5439 01ac 143093E5 		ldr	r3, [r3, #20]
 5440 01b0 7330FFE6 		uxth	r3, r3
 5441              		.loc 1 2867 13
 5442 01b4 24201BE5 		ldr	r2, [fp, #-36]
 5443 01b8 3233A0E1 		lsr	r3, r2, r3
 5444              		.loc 1 2867 7
 5445 01bc 000053E3 		cmp	r3, #0
 5446 01c0 0700001A 		bne	.L341
2868:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5447              		.loc 1 2868 16
 5448 01c4 10301BE5 		ldr	r3, [fp, #-16]
 5449 01c8 203063E2 		rsb	r3, r3, #32
 5450 01cc 0020E0E3 		mvn	r2, #0
 5451 01d0 3223A0E1 		lsr	r2, r2, r3
 5452              		.loc 1 2868 15
 5453 01d4 20301BE5 		ldr	r3, [fp, #-32]
 5454 01d8 023003E0 		and	r3, r3, r2
2867:../../Source/Kernel/rme_kernel.c ****        ((Paddr&RME_MASK_END(Szord-1U))!=0U))
 5455              		.loc 1 2867 49 discriminator 1
 5456 01dc 000053E3 		cmp	r3, #0
 5457 01e0 0400000A 		beq	.L342
 5458              	.L341:
2869:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 148


2870:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2871:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nmapping range and the granularity is not allowed ");
 5459              		.loc 1 2871 9
 5460 01e4 000000E3 		movw	r0, #:lower16:.LC9
 5461 01e8 000040E3 		movt	r0, #:upper16:.LC9
 5462 01ec FEFFFFEB 		bl	RME_Str_Print
2872:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5463              		.loc 1 2872 16
 5464 01f0 6430E0E3 		mvn	r3, #100
 5465 01f4 140000EA 		b	.L333
 5466              	.L342:
2873:../../Source/Kernel/rme_kernel.c ****     }
2874:../../Source/Kernel/rme_kernel.c ****     else
2875:../../Source/Kernel/rme_kernel.c ****     {
2876:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2877:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2878:../../Source/Kernel/rme_kernel.c ****     }
2879:../../Source/Kernel/rme_kernel.c **** 
2880:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
2881:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
2882:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag)!=0)
 5467              		.loc 1 2882 8
 5468 01f8 04309BE5 		ldr	r3, [fp, #4]
 5469 01fc 24201BE5 		ldr	r2, [fp, #-36]
 5470 0200 20101BE5 		ldr	r1, [fp, #-32]
 5471 0204 08001BE5 		ldr	r0, [fp, #-8]
 5472 0208 FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5473 020c 0030A0E1 		mov	r3, r0
 5474              		.loc 1 2882 7 discriminator 1
 5475 0210 000053E3 		cmp	r3, #0
 5476 0214 0B00000A 		beq	.L343
 5477              	.LBB2:
2883:../../Source/Kernel/rme_kernel.c ****     {
2884:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2885:../../Source/Kernel/rme_kernel.c ****         int a=__RME_Pgt_Page_Map(Pgt_Op,Paddr,Pos,Flag);
 5478              		.loc 1 2885 15
 5479 0218 04309BE5 		ldr	r3, [fp, #4]
 5480 021c 24201BE5 		ldr	r2, [fp, #-36]
 5481 0220 20101BE5 		ldr	r1, [fp, #-32]
 5482 0224 08001BE5 		ldr	r0, [fp, #-8]
 5483 0228 FEFFFFEB 		bl	__RME_Pgt_Page_Map
 5484 022c 0030A0E1 		mov	r3, r0
 5485              		.loc 1 2885 13 discriminator 1
 5486 0230 14300BE5 		str	r3, [fp, #-20]
2886:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nThis work is not passed down to the HAL ");
 5487              		.loc 1 2886 9
 5488 0234 000000E3 		movw	r0, #:lower16:.LC10
 5489 0238 000040E3 		movt	r0, #:upper16:.LC10
 5490 023c FEFFFFEB 		bl	RME_Str_Print
2887:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 5491              		.loc 1 2887 16
 5492 0240 6530E0E3 		mvn	r3, #101
 5493 0244 000000EA 		b	.L333
 5494              	.L343:
 5495              	.LBE2:
2888:../../Source/Kernel/rme_kernel.c ****     }
2889:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 149


2890:../../Source/Kernel/rme_kernel.c ****     {
2891:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2892:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2893:../../Source/Kernel/rme_kernel.c ****     }
2894:../../Source/Kernel/rme_kernel.c **** 
2895:../../Source/Kernel/rme_kernel.c ****     return 0;
 5496              		.loc 1 2895 12
 5497 0248 0030A0E3 		mov	r3, #0
 5498              	.L333:
2896:../../Source/Kernel/rme_kernel.c **** }
 5499              		.loc 1 2896 1
 5500 024c 0300A0E1 		mov	r0, r3
 5501 0250 04D04BE2 		sub	sp, fp, #4
 5502              		.cfi_def_cfa 13, 8
 5503              		@ sp needed
 5504 0254 0088BDE8 		pop	{fp, pc}
 5505              		.cfi_endproc
 5506              	.LFE30:
 5508              		.section	.text._RME_Pgt_Boot_Con,"ax",%progbits
 5509              		.align	2
 5510              		.global	_RME_Pgt_Boot_Con
 5511              		.syntax unified
 5512              		.arm
 5514              	_RME_Pgt_Boot_Con:
 5515              	.LFB31:
2897:../../Source/Kernel/rme_kernel.c **** #endif
2898:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Add ********************************************/
2899:../../Source/Kernel/rme_kernel.c **** 
2900:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Boot_Con *************************************************
2901:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table from the parent page table at boot-time.
2902:../../Source/Kernel/rme_kernel.c ****               This does not check flags.
2903:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
2904:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
2905:../../Source/Kernel/rme_kernel.c ****                                          table.
2906:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
2907:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
2908:../../Source/Kernel/rme_kernel.c ****                               page table to.
2909:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
2910:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
2911:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
2912:../../Source/Kernel/rme_kernel.c **** Output      : None.
2913:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
2914:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
2915:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
2916:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Pgt_Boot_Con(struct RME_Cap_Cpt* Cpt,
2917:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Parent,
2918:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Pos,
2919:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt_Child,
2920:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag_Child)
2921:../../Source/Kernel/rme_kernel.c **** {
 5516              		.loc 1 2921 1
 5517              		.cfi_startproc
 5518              		@ args = 4, pretend = 0, frame = 40
 5519              		@ frame_needed = 1, uses_anonymous_args = 0
 5520 0000 00482DE9 		push	{fp, lr}
 5521              		.cfi_def_cfa_offset 8
 5522              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 150


 5523              		.cfi_offset 14, -4
 5524 0004 04B08DE2 		add	fp, sp, #4
 5525              		.cfi_def_cfa 11, 4
 5526 0008 28D04DE2 		sub	sp, sp, #40
 5527 000c 20000BE5 		str	r0, [fp, #-32]
 5528 0010 24100BE5 		str	r1, [fp, #-36]
 5529 0014 28200BE5 		str	r2, [fp, #-40]
 5530 0018 2C300BE5 		str	r3, [fp, #-44]
2922:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
2923:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
2924:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
2925:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
2926:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
2927:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
2928:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2929:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
2930:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
2931:../../Source/Kernel/rme_kernel.c **** #endif
2932:../../Source/Kernel/rme_kernel.c ****     
2933:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
2934:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 5531              		.loc 1 2934 5
 5532 001c 24301BE5 		ldr	r3, [fp, #-36]
 5533 0020 803003E2 		and	r3, r3, #128
 5534 0024 000053E3 		cmp	r3, #0
 5535 0028 1C00001A 		bne	.L345
 5536              		.loc 1 2934 5 is_stmt 0 discriminator 1
 5537 002c 20301BE5 		ldr	r3, [fp, #-32]
 5538 0030 142093E5 		ldr	r2, [r3, #20]
 5539 0034 24301BE5 		ldr	r3, [fp, #-36]
 5540 0038 030052E1 		cmp	r2, r3
 5541 003c 0100008A 		bhi	.L346
 5542              		.loc 1 2934 5 discriminator 3
 5543 0040 0230E0E3 		mvn	r3, #2
 5544              		.loc 1 2934 5
 5545 0044 F70000EA 		b	.L347
 5546              	.L346:
 5547              		.loc 1 2934 5 discriminator 4
 5548 0048 24301BE5 		ldr	r3, [fp, #-36]
 5549 004c 8322A0E1 		lsl	r2, r3, #5
 5550 0050 20301BE5 		ldr	r3, [fp, #-32]
 5551 0054 0C3093E5 		ldr	r3, [r3, #12]
 5552 0058 033082E0 		add	r3, r2, r3
 5553 005c 08300BE5 		str	r3, [fp, #-8]
 5554 0060 08301BE5 		ldr	r3, [fp, #-8]
 5555 0064 0300A0E1 		mov	r0, r3
 5556 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5557 006c 10000BE5 		str	r0, [fp, #-16]
 5558              		.loc 1 2934 5 discriminator 1
 5559 0070 10301BE5 		ldr	r3, [fp, #-16]
 5560 0074 FF3803E2 		and	r3, r3, #16711680
 5561 0078 020853E3 		cmp	r3, #131072
 5562 007c 0100001A 		bne	.L348
 5563              		.loc 1 2934 5 discriminator 5
 5564 0080 0830E0E3 		mvn	r3, #8
 5565              		.loc 1 2934 5
 5566 0084 E70000EA 		b	.L347
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 151


 5567              	.L348:
 5568              		.loc 1 2934 5 discriminator 6
 5569 0088 10301BE5 		ldr	r3, [fp, #-16]
 5570 008c 233CA0E1 		lsr	r3, r3, #24
 5571 0090 040053E3 		cmp	r3, #4
 5572 0094 3F00000A 		beq	.L349
 5573              		.loc 1 2934 5 discriminator 7
 5574 0098 0130E0E3 		mvn	r3, #1
 5575              		.loc 1 2934 5
 5576 009c E10000EA 		b	.L347
 5577              	.L345:
 5578              		.loc 1 2934 5 discriminator 2
 5579 00a0 24301BE5 		ldr	r3, [fp, #-36]
 5580 00a4 2324A0E1 		lsr	r2, r3, #8
 5581 00a8 20301BE5 		ldr	r3, [fp, #-32]
 5582 00ac 143093E5 		ldr	r3, [r3, #20]
 5583 00b0 030052E1 		cmp	r2, r3
 5584 00b4 0100003A 		bcc	.L350
 5585              		.loc 1 2934 5 discriminator 8
 5586 00b8 0230E0E3 		mvn	r3, #2
 5587              		.loc 1 2934 5
 5588 00bc D90000EA 		b	.L347
 5589              	.L350:
 5590              		.loc 1 2934 5 discriminator 9
 5591 00c0 24301BE5 		ldr	r3, [fp, #-36]
 5592 00c4 2334A0E1 		lsr	r3, r3, #8
 5593 00c8 8322A0E1 		lsl	r2, r3, #5
 5594 00cc 20301BE5 		ldr	r3, [fp, #-32]
 5595 00d0 0C3093E5 		ldr	r3, [r3, #12]
 5596 00d4 033082E0 		add	r3, r2, r3
 5597 00d8 08300BE5 		str	r3, [fp, #-8]
 5598 00dc 08301BE5 		ldr	r3, [fp, #-8]
 5599 00e0 0300A0E1 		mov	r0, r3
 5600 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5601 00e8 10000BE5 		str	r0, [fp, #-16]
 5602              		.loc 1 2934 5 discriminator 1
 5603 00ec 10301BE5 		ldr	r3, [fp, #-16]
 5604 00f0 FF3803E2 		and	r3, r3, #16711680
 5605 00f4 020853E3 		cmp	r3, #131072
 5606 00f8 0100001A 		bne	.L351
 5607              		.loc 1 2934 5 discriminator 10
 5608 00fc 0830E0E3 		mvn	r3, #8
 5609              		.loc 1 2934 5
 5610 0100 C80000EA 		b	.L347
 5611              	.L351:
 5612              		.loc 1 2934 5 discriminator 11
 5613 0104 10301BE5 		ldr	r3, [fp, #-16]
 5614 0108 233CA0E1 		lsr	r3, r3, #24
 5615 010c 030053E3 		cmp	r3, #3
 5616 0110 0100000A 		beq	.L352
 5617              		.loc 1 2934 5 discriminator 12
 5618 0114 0130E0E3 		mvn	r3, #1
 5619              		.loc 1 2934 5
 5620 0118 C20000EA 		b	.L347
 5621              	.L352:
 5622              		.loc 1 2934 5 discriminator 13
 5623 011c 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 152


 5624 0120 7F2003E2 		and	r2, r3, #127
 5625 0124 08301BE5 		ldr	r3, [fp, #-8]
 5626 0128 143093E5 		ldr	r3, [r3, #20]
 5627 012c 030052E1 		cmp	r2, r3
 5628 0130 0100003A 		bcc	.L353
 5629              		.loc 1 2934 5 discriminator 14
 5630 0134 0230E0E3 		mvn	r3, #2
 5631              		.loc 1 2934 5
 5632 0138 BA0000EA 		b	.L347
 5633              	.L353:
 5634              		.loc 1 2934 5 discriminator 15
 5635 013c 24301BE5 		ldr	r3, [fp, #-36]
 5636 0140 7F3003E2 		and	r3, r3, #127
 5637 0144 8322A0E1 		lsl	r2, r3, #5
 5638 0148 08301BE5 		ldr	r3, [fp, #-8]
 5639 014c 0C3093E5 		ldr	r3, [r3, #12]
 5640 0150 033082E0 		add	r3, r2, r3
 5641 0154 08300BE5 		str	r3, [fp, #-8]
 5642 0158 08301BE5 		ldr	r3, [fp, #-8]
 5643 015c 0300A0E1 		mov	r0, r3
 5644 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5645 0164 10000BE5 		str	r0, [fp, #-16]
 5646              		.loc 1 2934 5 discriminator 1
 5647 0168 10301BE5 		ldr	r3, [fp, #-16]
 5648 016c FF3803E2 		and	r3, r3, #16711680
 5649 0170 020853E3 		cmp	r3, #131072
 5650 0174 0100001A 		bne	.L354
 5651              		.loc 1 2934 5 discriminator 16
 5652 0178 0830E0E3 		mvn	r3, #8
 5653              		.loc 1 2934 5
 5654 017c A90000EA 		b	.L347
 5655              	.L354:
 5656              		.loc 1 2934 5 discriminator 17
 5657 0180 10301BE5 		ldr	r3, [fp, #-16]
 5658 0184 233CA0E1 		lsr	r3, r3, #24
 5659 0188 040053E3 		cmp	r3, #4
 5660 018c 0100000A 		beq	.L349
 5661              		.loc 1 2934 5 discriminator 18
 5662 0190 0130E0E3 		mvn	r3, #1
 5663              		.loc 1 2934 5
 5664 0194 A30000EA 		b	.L347
 5665              	.L349:
2935:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
2936:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 5666              		.loc 1 2936 5 is_stmt 1
 5667 0198 2C301BE5 		ldr	r3, [fp, #-44]
 5668 019c 803003E2 		and	r3, r3, #128
 5669 01a0 000053E3 		cmp	r3, #0
 5670 01a4 1C00001A 		bne	.L355
 5671              		.loc 1 2936 5 is_stmt 0 discriminator 1
 5672 01a8 20301BE5 		ldr	r3, [fp, #-32]
 5673 01ac 142093E5 		ldr	r2, [r3, #20]
 5674 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 5675 01b4 030052E1 		cmp	r2, r3
 5676 01b8 0100008A 		bhi	.L356
 5677              		.loc 1 2936 5 discriminator 3
 5678 01bc 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 153


 5679              		.loc 1 2936 5
 5680 01c0 980000EA 		b	.L347
 5681              	.L356:
 5682              		.loc 1 2936 5 discriminator 4
 5683 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 5684 01c8 8322A0E1 		lsl	r2, r3, #5
 5685 01cc 20301BE5 		ldr	r3, [fp, #-32]
 5686 01d0 0C3093E5 		ldr	r3, [r3, #12]
 5687 01d4 033082E0 		add	r3, r2, r3
 5688 01d8 0C300BE5 		str	r3, [fp, #-12]
 5689 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 5690 01e0 0300A0E1 		mov	r0, r3
 5691 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5692 01e8 10000BE5 		str	r0, [fp, #-16]
 5693              		.loc 1 2936 5 discriminator 1
 5694 01ec 10301BE5 		ldr	r3, [fp, #-16]
 5695 01f0 FF3803E2 		and	r3, r3, #16711680
 5696 01f4 020853E3 		cmp	r3, #131072
 5697 01f8 0100001A 		bne	.L357
 5698              		.loc 1 2936 5 discriminator 5
 5699 01fc 0830E0E3 		mvn	r3, #8
 5700              		.loc 1 2936 5
 5701 0200 880000EA 		b	.L347
 5702              	.L357:
 5703              		.loc 1 2936 5 discriminator 6
 5704 0204 10301BE5 		ldr	r3, [fp, #-16]
 5705 0208 233CA0E1 		lsr	r3, r3, #24
 5706 020c 040053E3 		cmp	r3, #4
 5707 0210 3F00000A 		beq	.L358
 5708              		.loc 1 2936 5 discriminator 7
 5709 0214 0130E0E3 		mvn	r3, #1
 5710              		.loc 1 2936 5
 5711 0218 820000EA 		b	.L347
 5712              	.L355:
 5713              		.loc 1 2936 5 discriminator 2
 5714 021c 2C301BE5 		ldr	r3, [fp, #-44]
 5715 0220 2324A0E1 		lsr	r2, r3, #8
 5716 0224 20301BE5 		ldr	r3, [fp, #-32]
 5717 0228 143093E5 		ldr	r3, [r3, #20]
 5718 022c 030052E1 		cmp	r2, r3
 5719 0230 0100003A 		bcc	.L359
 5720              		.loc 1 2936 5 discriminator 8
 5721 0234 0230E0E3 		mvn	r3, #2
 5722              		.loc 1 2936 5
 5723 0238 7A0000EA 		b	.L347
 5724              	.L359:
 5725              		.loc 1 2936 5 discriminator 9
 5726 023c 2C301BE5 		ldr	r3, [fp, #-44]
 5727 0240 2334A0E1 		lsr	r3, r3, #8
 5728 0244 8322A0E1 		lsl	r2, r3, #5
 5729 0248 20301BE5 		ldr	r3, [fp, #-32]
 5730 024c 0C3093E5 		ldr	r3, [r3, #12]
 5731 0250 033082E0 		add	r3, r2, r3
 5732 0254 0C300BE5 		str	r3, [fp, #-12]
 5733 0258 0C301BE5 		ldr	r3, [fp, #-12]
 5734 025c 0300A0E1 		mov	r0, r3
 5735 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 154


 5736 0264 10000BE5 		str	r0, [fp, #-16]
 5737              		.loc 1 2936 5 discriminator 1
 5738 0268 10301BE5 		ldr	r3, [fp, #-16]
 5739 026c FF3803E2 		and	r3, r3, #16711680
 5740 0270 020853E3 		cmp	r3, #131072
 5741 0274 0100001A 		bne	.L360
 5742              		.loc 1 2936 5 discriminator 10
 5743 0278 0830E0E3 		mvn	r3, #8
 5744              		.loc 1 2936 5
 5745 027c 690000EA 		b	.L347
 5746              	.L360:
 5747              		.loc 1 2936 5 discriminator 11
 5748 0280 10301BE5 		ldr	r3, [fp, #-16]
 5749 0284 233CA0E1 		lsr	r3, r3, #24
 5750 0288 030053E3 		cmp	r3, #3
 5751 028c 0100000A 		beq	.L361
 5752              		.loc 1 2936 5 discriminator 12
 5753 0290 0130E0E3 		mvn	r3, #1
 5754              		.loc 1 2936 5
 5755 0294 630000EA 		b	.L347
 5756              	.L361:
 5757              		.loc 1 2936 5 discriminator 13
 5758 0298 2C301BE5 		ldr	r3, [fp, #-44]
 5759 029c 7F2003E2 		and	r2, r3, #127
 5760 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 5761 02a4 143093E5 		ldr	r3, [r3, #20]
 5762 02a8 030052E1 		cmp	r2, r3
 5763 02ac 0100003A 		bcc	.L362
 5764              		.loc 1 2936 5 discriminator 14
 5765 02b0 0230E0E3 		mvn	r3, #2
 5766              		.loc 1 2936 5
 5767 02b4 5B0000EA 		b	.L347
 5768              	.L362:
 5769              		.loc 1 2936 5 discriminator 15
 5770 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 5771 02bc 7F3003E2 		and	r3, r3, #127
 5772 02c0 8322A0E1 		lsl	r2, r3, #5
 5773 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 5774 02c8 0C3093E5 		ldr	r3, [r3, #12]
 5775 02cc 033082E0 		add	r3, r2, r3
 5776 02d0 0C300BE5 		str	r3, [fp, #-12]
 5777 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 5778 02d8 0300A0E1 		mov	r0, r3
 5779 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5780 02e0 10000BE5 		str	r0, [fp, #-16]
 5781              		.loc 1 2936 5 discriminator 1
 5782 02e4 10301BE5 		ldr	r3, [fp, #-16]
 5783 02e8 FF3803E2 		and	r3, r3, #16711680
 5784 02ec 020853E3 		cmp	r3, #131072
 5785 02f0 0100001A 		bne	.L363
 5786              		.loc 1 2936 5 discriminator 16
 5787 02f4 0830E0E3 		mvn	r3, #8
 5788              		.loc 1 2936 5
 5789 02f8 4A0000EA 		b	.L347
 5790              	.L363:
 5791              		.loc 1 2936 5 discriminator 17
 5792 02fc 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 155


 5793 0300 233CA0E1 		lsr	r3, r3, #24
 5794 0304 040053E3 		cmp	r3, #4
 5795 0308 0100000A 		beq	.L358
 5796              		.loc 1 2936 5 discriminator 18
 5797 030c 0130E0E3 		mvn	r3, #1
 5798              		.loc 1 2936 5
 5799 0310 440000EA 		b	.L347
 5800              	.L358:
2937:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
2938:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen but don't check flags */
2939:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent,0U);
2940:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child,0U);
2941:../../Source/Kernel/rme_kernel.c ****     
2942:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
2943:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 5801              		.loc 1 2943 14 is_stmt 1
 5802 0314 08301BE5 		ldr	r3, [fp, #-8]
 5803 0318 143093E5 		ldr	r3, [r3, #20]
 5804 031c 7330FFE6 		uxth	r3, r3
 5805              		.loc 1 2943 12
 5806 0320 28201BE5 		ldr	r2, [fp, #-40]
 5807 0324 3233A0E1 		lsr	r3, r2, r3
 5808              		.loc 1 2943 7
 5809 0328 000053E3 		cmp	r3, #0
 5810 032c 0100000A 		beq	.L364
2944:../../Source/Kernel/rme_kernel.c ****     {
2945:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2946:../../Source/Kernel/rme_kernel.c ****         
2947:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5811              		.loc 1 2947 16
 5812 0330 6430E0E3 		mvn	r3, #100
 5813 0334 3B0000EA 		b	.L347
 5814              	.L364:
2948:../../Source/Kernel/rme_kernel.c ****     }
2949:../../Source/Kernel/rme_kernel.c ****     else
2950:../../Source/Kernel/rme_kernel.c ****     {
2951:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2952:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2953:../../Source/Kernel/rme_kernel.c ****     }
2954:../../Source/Kernel/rme_kernel.c ****     
2955:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
2956:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 5815              		.loc 1 2956 17
 5816 0338 0C301BE5 		ldr	r3, [fp, #-12]
 5817 033c 143093E5 		ldr	r3, [r3, #20]
 5818 0340 7320FFE6 		uxth	r2, r3
 5819              		.loc 1 2956 49
 5820 0344 0C301BE5 		ldr	r3, [fp, #-12]
 5821 0348 143093E5 		ldr	r3, [r3, #20]
 5822 034c 2338A0E1 		lsr	r3, r3, #16
 5823              		.loc 1 2956 16
 5824 0350 033082E0 		add	r3, r2, r3
 5825 0354 14300BE5 		str	r3, [fp, #-20]
2957:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 5826              		.loc 1 2957 18
 5827 0358 08301BE5 		ldr	r3, [fp, #-8]
 5828 035c 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 156


 5829              		.loc 1 2957 17
 5830 0360 2338A0E1 		lsr	r3, r3, #16
 5831 0364 18300BE5 		str	r3, [fp, #-24]
2958:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 5832              		.loc 1 2958 7
 5833 0368 18201BE5 		ldr	r2, [fp, #-24]
 5834 036c 14301BE5 		ldr	r3, [fp, #-20]
 5835 0370 030052E1 		cmp	r2, r3
 5836 0374 0100002A 		bcs	.L365
2959:../../Source/Kernel/rme_kernel.c ****     {
2960:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2961:../../Source/Kernel/rme_kernel.c ****         
2962:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5837              		.loc 1 2962 16
 5838 0378 6430E0E3 		mvn	r3, #100
 5839 037c 290000EA 		b	.L347
 5840              	.L365:
2963:../../Source/Kernel/rme_kernel.c ****     }
2964:../../Source/Kernel/rme_kernel.c ****     else
2965:../../Source/Kernel/rme_kernel.c ****     {
2966:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2967:../../Source/Kernel/rme_kernel.c ****         /* No action required */
2968:../../Source/Kernel/rme_kernel.c ****     }
2969:../../Source/Kernel/rme_kernel.c **** 
2970:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
2971:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
2972:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
2973:../../Source/Kernel/rme_kernel.c ****     {
2974:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
2975:../../Source/Kernel/rme_kernel.c ****         
2976:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
2977:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
2978:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
2979:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
2980:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
2981:../../Source/Kernel/rme_kernel.c ****         {
2982:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2983:../../Source/Kernel/rme_kernel.c ****             
2984:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
2985:../../Source/Kernel/rme_kernel.c ****         }
2986:../../Source/Kernel/rme_kernel.c ****         else
2987:../../Source/Kernel/rme_kernel.c ****         {
2988:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
2989:../../Source/Kernel/rme_kernel.c ****             /* No action required */
2990:../../Source/Kernel/rme_kernel.c ****         }
2991:../../Source/Kernel/rme_kernel.c ****         
2992:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
2993:../../Source/Kernel/rme_kernel.c ****         
2994:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
2995:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
2996:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
2997:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
2998:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
2999:../../Source/Kernel/rme_kernel.c ****         {
3000:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3001:../../Source/Kernel/rme_kernel.c ****             
3002:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 157


3003:../../Source/Kernel/rme_kernel.c ****             {
3004:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3005:../../Source/Kernel/rme_kernel.c **** 
3006:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3007:../../Source/Kernel/rme_kernel.c ****             }
3008:../../Source/Kernel/rme_kernel.c ****             else
3009:../../Source/Kernel/rme_kernel.c ****             {
3010:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3011:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3012:../../Source/Kernel/rme_kernel.c ****             }
3013:../../Source/Kernel/rme_kernel.c ****         }
3014:../../Source/Kernel/rme_kernel.c ****         else
3015:../../Source/Kernel/rme_kernel.c ****         {
3016:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3017:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3018:../../Source/Kernel/rme_kernel.c ****         }
3019:../../Source/Kernel/rme_kernel.c ****     }
3020:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, no need to check */
3021:../../Source/Kernel/rme_kernel.c ****     else
3022:../../Source/Kernel/rme_kernel.c ****     {
3023:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3024:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3025:../../Source/Kernel/rme_kernel.c ****     }
3026:../../Source/Kernel/rme_kernel.c **** #else
3027:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3028:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 5841              		.loc 1 3028 7
 5842 0380 18201BE5 		ldr	r2, [fp, #-24]
 5843 0384 14301BE5 		ldr	r3, [fp, #-20]
 5844 0388 030052E1 		cmp	r2, r3
 5845 038c 0100000A 		beq	.L366
3029:../../Source/Kernel/rme_kernel.c ****     {
3030:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3031:../../Source/Kernel/rme_kernel.c **** 
3032:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 5846              		.loc 1 3032 16
 5847 0390 6430E0E3 		mvn	r3, #100
 5848 0394 230000EA 		b	.L347
 5849              	.L366:
3033:../../Source/Kernel/rme_kernel.c ****     }
3034:../../Source/Kernel/rme_kernel.c ****     else
3035:../../Source/Kernel/rme_kernel.c ****     {
3036:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3037:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3038:../../Source/Kernel/rme_kernel.c ****     }
3039:../../Source/Kernel/rme_kernel.c **** #endif
3040:../../Source/Kernel/rme_kernel.c **** 
3041:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3042:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3043:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 5850              		.loc 1 3043 8
 5851 0398 04309BE5 		ldr	r3, [fp, #4]
 5852 039c 0C201BE5 		ldr	r2, [fp, #-12]
 5853 03a0 28101BE5 		ldr	r1, [fp, #-40]
 5854 03a4 08001BE5 		ldr	r0, [fp, #-8]
 5855 03a8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3044:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 158


3045:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3046:../../Source/Kernel/rme_kernel.c **** 
3047:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3048:../../Source/Kernel/rme_kernel.c ****     }
3049:../../Source/Kernel/rme_kernel.c ****     else
3050:../../Source/Kernel/rme_kernel.c ****     {
3051:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3052:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3053:../../Source/Kernel/rme_kernel.c ****     }
3054:../../Source/Kernel/rme_kernel.c ****     
3055:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3056:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 5856              		.loc 1 3056 14
 5857 03ac 08301BE5 		ldr	r3, [fp, #-8]
 5858 03b0 003093E5 		ldr	r3, [r3]
 5859 03b4 7330FFE6 		uxth	r3, r3
 5860 03b8 000053E3 		cmp	r3, #0
 5861 03bc 0200000A 		beq	.L367
 5862              		.loc 1 3056 14 is_stmt 0 discriminator 1
 5863 03c0 08301BE5 		ldr	r3, [fp, #-8]
 5864 03c4 043093E5 		ldr	r3, [r3, #4]
 5865 03c8 000000EA 		b	.L368
 5866              	.L367:
 5867              		.loc 1 3056 14 discriminator 2
 5868 03cc 08301BE5 		ldr	r3, [fp, #-8]
 5869              	.L368:
 5870              		.loc 1 3056 13 is_stmt 1 discriminator 4
 5871 03d0 1C300BE5 		str	r3, [fp, #-28]
3057:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5872              		.loc 1 3057 5
 5873 03d4 1C301BE5 		ldr	r3, [fp, #-28]
 5874 03d8 043083E2 		add	r3, r3, #4
 5875 03dc 0110A0E3 		mov	r1, #1
 5876 03e0 0300A0E1 		mov	r0, r3
 5877 03e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3058:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 5878              		.loc 1 3058 14
 5879 03e8 0C301BE5 		ldr	r3, [fp, #-12]
 5880 03ec 003093E5 		ldr	r3, [r3]
 5881 03f0 7330FFE6 		uxth	r3, r3
 5882 03f4 000053E3 		cmp	r3, #0
 5883 03f8 0200000A 		beq	.L369
 5884              		.loc 1 3058 14 is_stmt 0 discriminator 1
 5885 03fc 0C301BE5 		ldr	r3, [fp, #-12]
 5886 0400 043093E5 		ldr	r3, [r3, #4]
 5887 0404 000000EA 		b	.L370
 5888              	.L369:
 5889              		.loc 1 3058 14 discriminator 2
 5890 0408 0C301BE5 		ldr	r3, [fp, #-12]
 5891              	.L370:
 5892              		.loc 1 3058 13 is_stmt 1 discriminator 4
 5893 040c 1C300BE5 		str	r3, [fp, #-28]
3059:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1U);
 5894              		.loc 1 3059 5
 5895 0410 1C301BE5 		ldr	r3, [fp, #-28]
 5896 0414 043083E2 		add	r3, r3, #4
 5897 0418 0110A0E3 		mov	r1, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 159


 5898 041c 0300A0E1 		mov	r0, r3
 5899 0420 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3060:../../Source/Kernel/rme_kernel.c **** 
3061:../../Source/Kernel/rme_kernel.c ****     return 0;
 5900              		.loc 1 3061 12
 5901 0424 0030A0E3 		mov	r3, #0
 5902              	.L347:
3062:../../Source/Kernel/rme_kernel.c **** }
 5903              		.loc 1 3062 1
 5904 0428 0300A0E1 		mov	r0, r3
 5905 042c 04D04BE2 		sub	sp, fp, #4
 5906              		.cfi_def_cfa 13, 8
 5907              		@ sp needed
 5908 0430 0088BDE8 		pop	{fp, pc}
 5909              		.cfi_endproc
 5910              	.LFE31:
 5912              		.section	.text._RME_Pgt_Crt,"ax",%progbits
 5913              		.align	2
 5914              		.syntax unified
 5915              		.arm
 5917              	_RME_Pgt_Crt:
 5918              	.LFB32:
3063:../../Source/Kernel/rme_kernel.c **** #endif
3064:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Boot_Con ********************************************/
3065:../../Source/Kernel/rme_kernel.c **** 
3066:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Crt ******************************************************
3067:../../Source/Kernel/rme_kernel.c **** Description : Create a page table.
3068:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3069:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability table that contains the newly
3070:../../Source/Kernel/rme_kernel.c ****                                   created cap to pgtbl.
3071:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3072:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
3073:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3074:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3075:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3076:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3077:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the page
3078:../../Source/Kernel/rme_kernel.c ****                                 table kernel object.
3079:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Base - The virtual address to start mapping for this
3080:../../Source/Kernel/rme_kernel.c ****                                page table. This address must be aligned to the
3081:../../Source/Kernel/rme_kernel.c ****                                total size of the table.
3082:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Top - Whether this page table is the top-level. If
3083:../../Source/Kernel/rme_kernel.c ****                                  it is, we will map all the kernel page 
3084:../../Source/Kernel/rme_kernel.c ****                                  directories into this one.
3085:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size_Order - The size order of the page table. The size
3086:../../Source/Kernel/rme_kernel.c ****                                      refers to the size of each page in the 
3087:../../Source/Kernel/rme_kernel.c ****                                      page directory.
3088:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Num_Order - The number order of entries in the table.
3089:../../Source/Kernel/rme_kernel.c **** Output      : None.
3090:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3091:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3092:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3093:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Crt(struct RME_Cap_Cpt* Cpt,
3094:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3095:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
3096:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3097:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 160


3098:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Base,
3099:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Top,
3100:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Size_Order,
3101:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Num_Order)
3102:../../Source/Kernel/rme_kernel.c **** {
 5919              		.loc 1 3102 1
 5920              		.cfi_startproc
 5921              		@ args = 20, pretend = 0, frame = 40
 5922              		@ frame_needed = 1, uses_anonymous_args = 0
 5923 0000 00482DE9 		push	{fp, lr}
 5924              		.cfi_def_cfa_offset 8
 5925              		.cfi_offset 11, -8
 5926              		.cfi_offset 14, -4
 5927 0004 04B08DE2 		add	fp, sp, #4
 5928              		.cfi_def_cfa 11, 4
 5929 0008 30D04DE2 		sub	sp, sp, #48
 5930 000c 20000BE5 		str	r0, [fp, #-32]
 5931 0010 24100BE5 		str	r1, [fp, #-36]
 5932 0014 28200BE5 		str	r2, [fp, #-40]
 5933 0018 2C300BE5 		str	r3, [fp, #-44]
3103:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3104:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
3105:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Crt;
3106:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3107:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
3108:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3109:../../Source/Kernel/rme_kernel.c ****     
3110:../../Source/Kernel/rme_kernel.c ****     /* Check if the total representable memory exceeds our maximum possible
3111:../../Source/Kernel/rme_kernel.c ****      * addressible memory under the machine word length */
3112:../../Source/Kernel/rme_kernel.c ****     if((Size_Order+Num_Order)>RME_POW2(RME_WORD_ORDER))
 5934              		.loc 1 3112 19
 5935 001c 10209BE5 		ldr	r2, [fp, #16]
 5936 0020 14309BE5 		ldr	r3, [fp, #20]
 5937 0024 033082E0 		add	r3, r2, r3
 5938              		.loc 1 3112 7
 5939 0028 200053E3 		cmp	r3, #32
 5940 002c 0100009A 		bls	.L372
3113:../../Source/Kernel/rme_kernel.c ****     {
3114:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3115:../../Source/Kernel/rme_kernel.c ****         
3116:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 5941              		.loc 1 3116 16
 5942 0030 6630E0E3 		mvn	r3, #102
 5943 0034 550100EA 		b	.L373
 5944              	.L372:
3117:../../Source/Kernel/rme_kernel.c ****     }
3118:../../Source/Kernel/rme_kernel.c ****     else
3119:../../Source/Kernel/rme_kernel.c ****     {
3120:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3121:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3122:../../Source/Kernel/rme_kernel.c ****     }
3123:../../Source/Kernel/rme_kernel.c ****     
3124:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3125:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 5945              		.loc 1 3125 5
 5946 0038 24301BE5 		ldr	r3, [fp, #-36]
 5947 003c 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 161


 5948 0040 000053E3 		cmp	r3, #0
 5949 0044 1C00001A 		bne	.L374
 5950              		.loc 1 3125 5 is_stmt 0 discriminator 1
 5951 0048 20301BE5 		ldr	r3, [fp, #-32]
 5952 004c 142093E5 		ldr	r2, [r3, #20]
 5953 0050 24301BE5 		ldr	r3, [fp, #-36]
 5954 0054 030052E1 		cmp	r2, r3
 5955 0058 0100008A 		bhi	.L375
 5956              		.loc 1 3125 5 discriminator 3
 5957 005c 0230E0E3 		mvn	r3, #2
 5958              		.loc 1 3125 5
 5959 0060 4A0100EA 		b	.L373
 5960              	.L375:
 5961              		.loc 1 3125 5 discriminator 4
 5962 0064 24301BE5 		ldr	r3, [fp, #-36]
 5963 0068 8322A0E1 		lsl	r2, r3, #5
 5964 006c 20301BE5 		ldr	r3, [fp, #-32]
 5965 0070 0C3093E5 		ldr	r3, [r3, #12]
 5966 0074 033082E0 		add	r3, r2, r3
 5967 0078 0C300BE5 		str	r3, [fp, #-12]
 5968 007c 0C301BE5 		ldr	r3, [fp, #-12]
 5969 0080 0300A0E1 		mov	r0, r3
 5970 0084 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 5971 0088 14000BE5 		str	r0, [fp, #-20]
 5972              		.loc 1 3125 5 discriminator 1
 5973 008c 14301BE5 		ldr	r3, [fp, #-20]
 5974 0090 FF3803E2 		and	r3, r3, #16711680
 5975 0094 020853E3 		cmp	r3, #131072
 5976 0098 0100001A 		bne	.L376
 5977              		.loc 1 3125 5 discriminator 5
 5978 009c 0830E0E3 		mvn	r3, #8
 5979              		.loc 1 3125 5
 5980 00a0 3A0100EA 		b	.L373
 5981              	.L376:
 5982              		.loc 1 3125 5 discriminator 6
 5983 00a4 14301BE5 		ldr	r3, [fp, #-20]
 5984 00a8 233CA0E1 		lsr	r3, r3, #24
 5985 00ac 030053E3 		cmp	r3, #3
 5986 00b0 3F00000A 		beq	.L377
 5987              		.loc 1 3125 5 discriminator 7
 5988 00b4 0130E0E3 		mvn	r3, #1
 5989              		.loc 1 3125 5
 5990 00b8 340100EA 		b	.L373
 5991              	.L374:
 5992              		.loc 1 3125 5 discriminator 2
 5993 00bc 24301BE5 		ldr	r3, [fp, #-36]
 5994 00c0 2324A0E1 		lsr	r2, r3, #8
 5995 00c4 20301BE5 		ldr	r3, [fp, #-32]
 5996 00c8 143093E5 		ldr	r3, [r3, #20]
 5997 00cc 030052E1 		cmp	r2, r3
 5998 00d0 0100003A 		bcc	.L378
 5999              		.loc 1 3125 5 discriminator 8
 6000 00d4 0230E0E3 		mvn	r3, #2
 6001              		.loc 1 3125 5
 6002 00d8 2C0100EA 		b	.L373
 6003              	.L378:
 6004              		.loc 1 3125 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 162


 6005 00dc 24301BE5 		ldr	r3, [fp, #-36]
 6006 00e0 2334A0E1 		lsr	r3, r3, #8
 6007 00e4 8322A0E1 		lsl	r2, r3, #5
 6008 00e8 20301BE5 		ldr	r3, [fp, #-32]
 6009 00ec 0C3093E5 		ldr	r3, [r3, #12]
 6010 00f0 033082E0 		add	r3, r2, r3
 6011 00f4 0C300BE5 		str	r3, [fp, #-12]
 6012 00f8 0C301BE5 		ldr	r3, [fp, #-12]
 6013 00fc 0300A0E1 		mov	r0, r3
 6014 0100 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6015 0104 14000BE5 		str	r0, [fp, #-20]
 6016              		.loc 1 3125 5 discriminator 1
 6017 0108 14301BE5 		ldr	r3, [fp, #-20]
 6018 010c FF3803E2 		and	r3, r3, #16711680
 6019 0110 020853E3 		cmp	r3, #131072
 6020 0114 0100001A 		bne	.L379
 6021              		.loc 1 3125 5 discriminator 10
 6022 0118 0830E0E3 		mvn	r3, #8
 6023              		.loc 1 3125 5
 6024 011c 1B0100EA 		b	.L373
 6025              	.L379:
 6026              		.loc 1 3125 5 discriminator 11
 6027 0120 14301BE5 		ldr	r3, [fp, #-20]
 6028 0124 233CA0E1 		lsr	r3, r3, #24
 6029 0128 030053E3 		cmp	r3, #3
 6030 012c 0100000A 		beq	.L380
 6031              		.loc 1 3125 5 discriminator 12
 6032 0130 0130E0E3 		mvn	r3, #1
 6033              		.loc 1 3125 5
 6034 0134 150100EA 		b	.L373
 6035              	.L380:
 6036              		.loc 1 3125 5 discriminator 13
 6037 0138 24301BE5 		ldr	r3, [fp, #-36]
 6038 013c 7F2003E2 		and	r2, r3, #127
 6039 0140 0C301BE5 		ldr	r3, [fp, #-12]
 6040 0144 143093E5 		ldr	r3, [r3, #20]
 6041 0148 030052E1 		cmp	r2, r3
 6042 014c 0100003A 		bcc	.L381
 6043              		.loc 1 3125 5 discriminator 14
 6044 0150 0230E0E3 		mvn	r3, #2
 6045              		.loc 1 3125 5
 6046 0154 0D0100EA 		b	.L373
 6047              	.L381:
 6048              		.loc 1 3125 5 discriminator 15
 6049 0158 24301BE5 		ldr	r3, [fp, #-36]
 6050 015c 7F3003E2 		and	r3, r3, #127
 6051 0160 8322A0E1 		lsl	r2, r3, #5
 6052 0164 0C301BE5 		ldr	r3, [fp, #-12]
 6053 0168 0C3093E5 		ldr	r3, [r3, #12]
 6054 016c 033082E0 		add	r3, r2, r3
 6055 0170 0C300BE5 		str	r3, [fp, #-12]
 6056 0174 0C301BE5 		ldr	r3, [fp, #-12]
 6057 0178 0300A0E1 		mov	r0, r3
 6058 017c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6059 0180 14000BE5 		str	r0, [fp, #-20]
 6060              		.loc 1 3125 5 discriminator 1
 6061 0184 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 163


 6062 0188 FF3803E2 		and	r3, r3, #16711680
 6063 018c 020853E3 		cmp	r3, #131072
 6064 0190 0100001A 		bne	.L382
 6065              		.loc 1 3125 5 discriminator 16
 6066 0194 0830E0E3 		mvn	r3, #8
 6067              		.loc 1 3125 5
 6068 0198 FC0000EA 		b	.L373
 6069              	.L382:
 6070              		.loc 1 3125 5 discriminator 17
 6071 019c 14301BE5 		ldr	r3, [fp, #-20]
 6072 01a0 233CA0E1 		lsr	r3, r3, #24
 6073 01a4 030053E3 		cmp	r3, #3
 6074 01a8 0100000A 		beq	.L377
 6075              		.loc 1 3125 5 discriminator 18
 6076 01ac 0130E0E3 		mvn	r3, #1
 6077              		.loc 1 3125 5
 6078 01b0 F60000EA 		b	.L373
 6079              	.L377:
3126:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3127:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 6080              		.loc 1 3127 5 is_stmt 1
 6081 01b4 28301BE5 		ldr	r3, [fp, #-40]
 6082 01b8 803003E2 		and	r3, r3, #128
 6083 01bc 000053E3 		cmp	r3, #0
 6084 01c0 1C00001A 		bne	.L383
 6085              		.loc 1 3127 5 is_stmt 0 discriminator 1
 6086 01c4 20301BE5 		ldr	r3, [fp, #-32]
 6087 01c8 142093E5 		ldr	r2, [r3, #20]
 6088 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6089 01d0 030052E1 		cmp	r2, r3
 6090 01d4 0100008A 		bhi	.L384
 6091              		.loc 1 3127 5 discriminator 3
 6092 01d8 0230E0E3 		mvn	r3, #2
 6093              		.loc 1 3127 5
 6094 01dc EB0000EA 		b	.L373
 6095              	.L384:
 6096              		.loc 1 3127 5 discriminator 4
 6097 01e0 28301BE5 		ldr	r3, [fp, #-40]
 6098 01e4 8322A0E1 		lsl	r2, r3, #5
 6099 01e8 20301BE5 		ldr	r3, [fp, #-32]
 6100 01ec 0C3093E5 		ldr	r3, [r3, #12]
 6101 01f0 033082E0 		add	r3, r2, r3
 6102 01f4 08300BE5 		str	r3, [fp, #-8]
 6103 01f8 08301BE5 		ldr	r3, [fp, #-8]
 6104 01fc 0300A0E1 		mov	r0, r3
 6105 0200 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6106 0204 14000BE5 		str	r0, [fp, #-20]
 6107              		.loc 1 3127 5 discriminator 1
 6108 0208 14301BE5 		ldr	r3, [fp, #-20]
 6109 020c FF3803E2 		and	r3, r3, #16711680
 6110 0210 020853E3 		cmp	r3, #131072
 6111 0214 0100001A 		bne	.L385
 6112              		.loc 1 3127 5 discriminator 5
 6113 0218 0830E0E3 		mvn	r3, #8
 6114              		.loc 1 3127 5
 6115 021c DB0000EA 		b	.L373
 6116              	.L385:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 164


 6117              		.loc 1 3127 5 discriminator 6
 6118 0220 14301BE5 		ldr	r3, [fp, #-20]
 6119 0224 233CA0E1 		lsr	r3, r3, #24
 6120 0228 020053E3 		cmp	r3, #2
 6121 022c 3F00000A 		beq	.L386
 6122              		.loc 1 3127 5 discriminator 7
 6123 0230 0130E0E3 		mvn	r3, #1
 6124              		.loc 1 3127 5
 6125 0234 D50000EA 		b	.L373
 6126              	.L383:
 6127              		.loc 1 3127 5 discriminator 2
 6128 0238 28301BE5 		ldr	r3, [fp, #-40]
 6129 023c 2324A0E1 		lsr	r2, r3, #8
 6130 0240 20301BE5 		ldr	r3, [fp, #-32]
 6131 0244 143093E5 		ldr	r3, [r3, #20]
 6132 0248 030052E1 		cmp	r2, r3
 6133 024c 0100003A 		bcc	.L387
 6134              		.loc 1 3127 5 discriminator 8
 6135 0250 0230E0E3 		mvn	r3, #2
 6136              		.loc 1 3127 5
 6137 0254 CD0000EA 		b	.L373
 6138              	.L387:
 6139              		.loc 1 3127 5 discriminator 9
 6140 0258 28301BE5 		ldr	r3, [fp, #-40]
 6141 025c 2334A0E1 		lsr	r3, r3, #8
 6142 0260 8322A0E1 		lsl	r2, r3, #5
 6143 0264 20301BE5 		ldr	r3, [fp, #-32]
 6144 0268 0C3093E5 		ldr	r3, [r3, #12]
 6145 026c 033082E0 		add	r3, r2, r3
 6146 0270 08300BE5 		str	r3, [fp, #-8]
 6147 0274 08301BE5 		ldr	r3, [fp, #-8]
 6148 0278 0300A0E1 		mov	r0, r3
 6149 027c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6150 0280 14000BE5 		str	r0, [fp, #-20]
 6151              		.loc 1 3127 5 discriminator 1
 6152 0284 14301BE5 		ldr	r3, [fp, #-20]
 6153 0288 FF3803E2 		and	r3, r3, #16711680
 6154 028c 020853E3 		cmp	r3, #131072
 6155 0290 0100001A 		bne	.L388
 6156              		.loc 1 3127 5 discriminator 10
 6157 0294 0830E0E3 		mvn	r3, #8
 6158              		.loc 1 3127 5
 6159 0298 BC0000EA 		b	.L373
 6160              	.L388:
 6161              		.loc 1 3127 5 discriminator 11
 6162 029c 14301BE5 		ldr	r3, [fp, #-20]
 6163 02a0 233CA0E1 		lsr	r3, r3, #24
 6164 02a4 030053E3 		cmp	r3, #3
 6165 02a8 0100000A 		beq	.L389
 6166              		.loc 1 3127 5 discriminator 12
 6167 02ac 0130E0E3 		mvn	r3, #1
 6168              		.loc 1 3127 5
 6169 02b0 B60000EA 		b	.L373
 6170              	.L389:
 6171              		.loc 1 3127 5 discriminator 13
 6172 02b4 28301BE5 		ldr	r3, [fp, #-40]
 6173 02b8 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 165


 6174 02bc 08301BE5 		ldr	r3, [fp, #-8]
 6175 02c0 143093E5 		ldr	r3, [r3, #20]
 6176 02c4 030052E1 		cmp	r2, r3
 6177 02c8 0100003A 		bcc	.L390
 6178              		.loc 1 3127 5 discriminator 14
 6179 02cc 0230E0E3 		mvn	r3, #2
 6180              		.loc 1 3127 5
 6181 02d0 AE0000EA 		b	.L373
 6182              	.L390:
 6183              		.loc 1 3127 5 discriminator 15
 6184 02d4 28301BE5 		ldr	r3, [fp, #-40]
 6185 02d8 7F3003E2 		and	r3, r3, #127
 6186 02dc 8322A0E1 		lsl	r2, r3, #5
 6187 02e0 08301BE5 		ldr	r3, [fp, #-8]
 6188 02e4 0C3093E5 		ldr	r3, [r3, #12]
 6189 02e8 033082E0 		add	r3, r2, r3
 6190 02ec 08300BE5 		str	r3, [fp, #-8]
 6191 02f0 08301BE5 		ldr	r3, [fp, #-8]
 6192 02f4 0300A0E1 		mov	r0, r3
 6193 02f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6194 02fc 14000BE5 		str	r0, [fp, #-20]
 6195              		.loc 1 3127 5 discriminator 1
 6196 0300 14301BE5 		ldr	r3, [fp, #-20]
 6197 0304 FF3803E2 		and	r3, r3, #16711680
 6198 0308 020853E3 		cmp	r3, #131072
 6199 030c 0100001A 		bne	.L391
 6200              		.loc 1 3127 5 discriminator 16
 6201 0310 0830E0E3 		mvn	r3, #8
 6202              		.loc 1 3127 5
 6203 0314 9D0000EA 		b	.L373
 6204              	.L391:
 6205              		.loc 1 3127 5 discriminator 17
 6206 0318 14301BE5 		ldr	r3, [fp, #-20]
 6207 031c 233CA0E1 		lsr	r3, r3, #24
 6208 0320 020053E3 		cmp	r3, #2
 6209 0324 0100000A 		beq	.L386
 6210              		.loc 1 3127 5 discriminator 18
 6211 0328 0130E0E3 		mvn	r3, #1
 6212              		.loc 1 3127 5
 6213 032c 970000EA 		b	.L373
 6214              	.L386:
3128:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
3129:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3130:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op, RME_CPT_FLAG_CRT);
 6215              		.loc 1 3130 5 is_stmt 1
 6216 0330 0C301BE5 		ldr	r3, [fp, #-12]
 6217 0334 083093E5 		ldr	r3, [r3, #8]
 6218 0338 013003E2 		and	r3, r3, #1
 6219 033c 000053E3 		cmp	r3, #0
 6220 0340 0100001A 		bne	.L392
 6221              		.loc 1 3130 5 is_stmt 0 discriminator 1
 6222 0344 0630E0E3 		mvn	r3, #6
 6223              		.loc 1 3130 5
 6224 0348 900000EA 		b	.L373
 6225              	.L392:
3131:../../Source/Kernel/rme_kernel.c ****     
3132:../../Source/Kernel/rme_kernel.c ****     /* Are we creating the top-level? */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 166


3133:../../Source/Kernel/rme_kernel.c ****     if(Is_Top!=0U)
 6226              		.loc 1 3133 7 is_stmt 1
 6227 034c 0C309BE5 		ldr	r3, [fp, #12]
 6228 0350 000053E3 		cmp	r3, #0
 6229 0354 0400000A 		beq	.L393
3134:../../Source/Kernel/rme_kernel.c ****     {
3135:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3136:../../Source/Kernel/rme_kernel.c **** 
3137:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(Num_Order);
 6230              		.loc 1 3137 19
 6231 0358 0420A0E3 		mov	r2, #4
 6232 035c 14309BE5 		ldr	r3, [fp, #20]
 6233 0360 1233A0E1 		lsl	r3, r2, r3
 6234 0364 10300BE5 		str	r3, [fp, #-16]
 6235 0368 030000EA 		b	.L394
 6236              	.L393:
3138:../../Source/Kernel/rme_kernel.c ****     }
3139:../../Source/Kernel/rme_kernel.c ****     else
3140:../../Source/Kernel/rme_kernel.c ****     {
3141:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3142:../../Source/Kernel/rme_kernel.c **** 
3143:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(Num_Order);
 6237              		.loc 1 3143 19
 6238 036c 0420A0E3 		mov	r2, #4
 6239 0370 14309BE5 		ldr	r3, [fp, #20]
 6240 0374 1233A0E1 		lsl	r3, r2, r3
 6241 0378 10300BE5 		str	r3, [fp, #-16]
 6242              	.L394:
3144:../../Source/Kernel/rme_kernel.c ****     }
3145:../../Source/Kernel/rme_kernel.c ****     
3146:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
3147:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_PGT,Raddr,Vaddr,Table_Size);
 6243              		.loc 1 3147 5
 6244 037c 08301BE5 		ldr	r3, [fp, #-8]
 6245 0380 083093E5 		ldr	r3, [r3, #8]
 6246 0384 023003E2 		and	r3, r3, #2
 6247 0388 000053E3 		cmp	r3, #0
 6248 038c 0100001A 		bne	.L395
 6249              		.loc 1 3147 5 is_stmt 0 discriminator 1
 6250 0390 0630E0E3 		mvn	r3, #6
 6251              		.loc 1 3147 5
 6252 0394 7D0000EA 		b	.L373
 6253              	.L395:
 6254              		.loc 1 3147 5 discriminator 2
 6255 0398 08301BE5 		ldr	r3, [fp, #-8]
 6256 039c 143093E5 		ldr	r3, [r3, #20]
 6257 03a0 04209BE5 		ldr	r2, [fp, #4]
 6258 03a4 033082E0 		add	r3, r2, r3
 6259 03a8 18300BE5 		str	r3, [fp, #-24]
 6260 03ac 18201BE5 		ldr	r2, [fp, #-24]
 6261 03b0 04309BE5 		ldr	r3, [fp, #4]
 6262 03b4 030052E1 		cmp	r2, r3
 6263 03b8 0100002A 		bcs	.L396
 6264              		.loc 1 3147 5 discriminator 3
 6265 03bc 0630E0E3 		mvn	r3, #6
 6266              		.loc 1 3147 5
 6267 03c0 720000EA 		b	.L373
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 167


 6268              	.L396:
 6269              		.loc 1 3147 5 discriminator 4
 6270 03c4 08301BE5 		ldr	r3, [fp, #-8]
 6271 03c8 143093E5 		ldr	r3, [r3, #20]
 6272 03cc 18201BE5 		ldr	r2, [fp, #-24]
 6273 03d0 030052E1 		cmp	r2, r3
 6274 03d4 0100002A 		bcs	.L397
 6275              		.loc 1 3147 5 discriminator 5
 6276 03d8 0630E0E3 		mvn	r3, #6
 6277              		.loc 1 3147 5
 6278 03dc 6B0000EA 		b	.L373
 6279              	.L397:
 6280              		.loc 1 3147 5 discriminator 6
 6281 03e0 18201BE5 		ldr	r2, [fp, #-24]
 6282 03e4 10301BE5 		ldr	r3, [fp, #-16]
 6283 03e8 033082E0 		add	r3, r2, r3
 6284 03ec 18201BE5 		ldr	r2, [fp, #-24]
 6285 03f0 030052E1 		cmp	r2, r3
 6286 03f4 0100009A 		bls	.L398
 6287              		.loc 1 3147 5 discriminator 7
 6288 03f8 0630E0E3 		mvn	r3, #6
 6289              		.loc 1 3147 5
 6290 03fc 630000EA 		b	.L373
 6291              	.L398:
 6292              		.loc 1 3147 5 discriminator 8
 6293 0400 08301BE5 		ldr	r3, [fp, #-8]
 6294 0404 182093E5 		ldr	r2, [r3, #24]
 6295 0408 18101BE5 		ldr	r1, [fp, #-24]
 6296 040c 10301BE5 		ldr	r3, [fp, #-16]
 6297 0410 033081E0 		add	r3, r1, r3
 6298 0414 013043E2 		sub	r3, r3, #1
 6299 0418 030052E1 		cmp	r2, r3
 6300 041c 0100002A 		bcs	.L399
 6301              		.loc 1 3147 5 discriminator 9
 6302 0420 0630E0E3 		mvn	r3, #6
 6303              		.loc 1 3147 5
 6304 0424 590000EA 		b	.L373
 6305              	.L399:
3148:../../Source/Kernel/rme_kernel.c **** 
3149:../../Source/Kernel/rme_kernel.c ****     /* Check if these parameters are feasible */
3150:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Check(Base,Is_Top,Size_Order,Num_Order,Vaddr)<0)
 6306              		.loc 1 3150 8 is_stmt 1
 6307 0428 18301BE5 		ldr	r3, [fp, #-24]
 6308 042c 00308DE5 		str	r3, [sp]
 6309 0430 14309BE5 		ldr	r3, [fp, #20]
 6310 0434 10209BE5 		ldr	r2, [fp, #16]
 6311 0438 0C109BE5 		ldr	r1, [fp, #12]
 6312 043c 08009BE5 		ldr	r0, [fp, #8]
 6313 0440 FEFFFFEB 		bl	__RME_Pgt_Check
3151:../../Source/Kernel/rme_kernel.c ****     {
3152:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3153:../../Source/Kernel/rme_kernel.c **** 
3154:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3155:../../Source/Kernel/rme_kernel.c ****     }
3156:../../Source/Kernel/rme_kernel.c ****     else
3157:../../Source/Kernel/rme_kernel.c ****     {
3158:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 168


3159:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3160:../../Source/Kernel/rme_kernel.c ****     }
3161:../../Source/Kernel/rme_kernel.c **** 
3162:../../Source/Kernel/rme_kernel.c ****     /* Check if the start address is properly aligned to the total order of the page table */
3163:../../Source/Kernel/rme_kernel.c ****     if((Base&RME_MASK_END(Size_Order+Num_Order-1U))!=0U)
 6314              		.loc 1 3163 14
 6315 0444 10209BE5 		ldr	r2, [fp, #16]
 6316 0448 14309BE5 		ldr	r3, [fp, #20]
 6317 044c 033082E0 		add	r3, r2, r3
 6318 0450 203063E2 		rsb	r3, r3, #32
 6319 0454 0020E0E3 		mvn	r2, #0
 6320 0458 3223A0E1 		lsr	r2, r2, r3
 6321              		.loc 1 3163 13
 6322 045c 08309BE5 		ldr	r3, [fp, #8]
 6323 0460 023003E0 		and	r3, r3, r2
 6324              		.loc 1 3163 7
 6325 0464 000053E3 		cmp	r3, #0
 6326 0468 0100000A 		beq	.L400
3164:../../Source/Kernel/rme_kernel.c ****     {
3165:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3166:../../Source/Kernel/rme_kernel.c **** 
3167:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
 6327              		.loc 1 3167 16
 6328 046c 6630E0E3 		mvn	r3, #102
 6329 0470 460000EA 		b	.L373
 6330              	.L400:
3168:../../Source/Kernel/rme_kernel.c ****     }
3169:../../Source/Kernel/rme_kernel.c ****     else
3170:../../Source/Kernel/rme_kernel.c ****     {
3171:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3172:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3173:../../Source/Kernel/rme_kernel.c ****     }
3174:../../Source/Kernel/rme_kernel.c **** 
3175:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3176:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Crt);
 6331              		.loc 1 3176 5
 6332 0474 0C301BE5 		ldr	r3, [fp, #-12]
 6333 0478 142093E5 		ldr	r2, [r3, #20]
 6334 047c 2C301BE5 		ldr	r3, [fp, #-44]
 6335 0480 030052E1 		cmp	r2, r3
 6336 0484 0100008A 		bhi	.L401
 6337              		.loc 1 3176 5 is_stmt 0 discriminator 1
 6338 0488 0230E0E3 		mvn	r3, #2
 6339              		.loc 1 3176 5
 6340 048c 3F0000EA 		b	.L373
 6341              	.L401:
 6342              		.loc 1 3176 5 discriminator 2
 6343 0490 2C301BE5 		ldr	r3, [fp, #-44]
 6344 0494 8322A0E1 		lsl	r2, r3, #5
 6345 0498 0C301BE5 		ldr	r3, [fp, #-12]
 6346 049c 0C3093E5 		ldr	r3, [r3, #12]
 6347 04a0 033082E0 		add	r3, r2, r3
 6348 04a4 1C300BE5 		str	r3, [fp, #-28]
3177:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
3178:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Pgt_Crt);
 6349              		.loc 1 3178 5 is_stmt 1
 6350 04a8 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 169


 6351 04ac 0128A0E3 		mov	r2, #65536
 6352 04b0 0010A0E3 		mov	r1, #0
 6353 04b4 0300A0E1 		mov	r0, r3
 6354 04b8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6355 04bc 0030A0E1 		mov	r3, r0
 6356              		.loc 1 3178 5 is_stmt 0 discriminator 1
 6357 04c0 000053E3 		cmp	r3, #0
 6358 04c4 0100001A 		bne	.L402
 6359 04c8 0430E0E3 		mvn	r3, #4
 6360              		.loc 1 3178 5
 6361 04cc 2F0000EA 		b	.L373
 6362              	.L402:
 6363              		.loc 1 3178 5 discriminator 2
 6364 04d0 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6365 04d4 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6366 04d8 002093E5 		ldr	r2, [r3]
 6367 04dc 1C301BE5 		ldr	r3, [fp, #-28]
 6368 04e0 102083E5 		str	r2, [r3, #16]
3179:../../Source/Kernel/rme_kernel.c **** 
3180:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
3181:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Table_Size)!=0)
 6369              		.loc 1 3181 8 is_stmt 1
 6370 04e4 10101BE5 		ldr	r1, [fp, #-16]
 6371 04e8 18001BE5 		ldr	r0, [fp, #-24]
 6372 04ec FEFFFFEB 		bl	_RME_Kot_Mark
 6373 04f0 0030A0E1 		mov	r3, r0
 6374              		.loc 1 3181 7 discriminator 1
 6375 04f4 000053E3 		cmp	r3, #0
 6376 04f8 0500000A 		beq	.L403
3182:../../Source/Kernel/rme_kernel.c ****     {
3183:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3184:../../Source/Kernel/rme_kernel.c **** 
3185:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
 6377              		.loc 1 3185 9
 6378 04fc 1C301BE5 		ldr	r3, [fp, #-28]
 6379 0500 0010A0E3 		mov	r1, #0
 6380 0504 0300A0E1 		mov	r0, r3
 6381 0508 FEFFFFEB 		bl	__RME_A7A_Write_Release
3186:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 6382              		.loc 1 3186 16
 6383 050c 0330E0E3 		mvn	r3, #3
 6384 0510 1E0000EA 		b	.L373
 6385              	.L403:
3187:../../Source/Kernel/rme_kernel.c ****     }
3188:../../Source/Kernel/rme_kernel.c ****     else
3189:../../Source/Kernel/rme_kernel.c ****     {
3190:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3191:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3192:../../Source/Kernel/rme_kernel.c ****     }
3193:../../Source/Kernel/rme_kernel.c ****     
3194:../../Source/Kernel/rme_kernel.c ****     /* Header init */
3195:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Root_Ref=0U;
 6386              		.loc 1 3195 27
 6387 0514 1C301BE5 		ldr	r3, [fp, #-28]
 6388 0518 0020A0E3 		mov	r2, #0
 6389 051c 042083E5 		str	r2, [r3, #4]
3196:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Object=Vaddr;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 170


 6390              		.loc 1 3196 25
 6391 0520 1C301BE5 		ldr	r3, [fp, #-28]
 6392 0524 18201BE5 		ldr	r2, [fp, #-24]
 6393 0528 0C2083E5 		str	r2, [r3, #12]
3197:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Head.Flag=RME_PGT_FLAG_FULL_RANGE|RME_PGT_FLAG_ALL;
 6394              		.loc 1 3197 23
 6395 052c 1C201BE5 		ldr	r2, [fp, #-28]
 6396 0530 FF30A0E3 		mov	r3, #255
 6397 0534 F03F4FE3 		movt	r3, 65520
 6398 0538 083082E5 		str	r3, [r2, #8]
3198:../../Source/Kernel/rme_kernel.c ****     
3199:../../Source/Kernel/rme_kernel.c ****     /* Info init */
3200:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Base=Base|Is_Top;
 6399              		.loc 1 3200 23
 6400 053c 08209BE5 		ldr	r2, [fp, #8]
 6401 0540 0C309BE5 		ldr	r3, [fp, #12]
 6402 0544 032082E1 		orr	r2, r2, r3
 6403              		.loc 1 3200 18
 6404 0548 1C301BE5 		ldr	r3, [fp, #-28]
 6405 054c 182083E5 		str	r2, [r3, #24]
3201:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->Order=RME_PGT_ORDER(Size_Order,Num_Order);
 6406              		.loc 1 3201 20
 6407 0550 10309BE5 		ldr	r3, [fp, #16]
 6408 0554 0328A0E1 		lsl	r2, r3, #16
 6409 0558 14309BE5 		ldr	r3, [fp, #20]
 6410 055c 032082E1 		orr	r2, r2, r3
 6411              		.loc 1 3201 19
 6412 0560 1C301BE5 		ldr	r3, [fp, #-28]
 6413 0564 142083E5 		str	r2, [r3, #20]
3202:../../Source/Kernel/rme_kernel.c ****     Pgt_Crt->ASID=0U;
 6414              		.loc 1 3202 18
 6415 0568 1C301BE5 		ldr	r3, [fp, #-28]
 6416 056c 0020A0E3 		mov	r2, #0
 6417 0570 1C2083E5 		str	r2, [r3, #28]
3203:../../Source/Kernel/rme_kernel.c ****     
3204:../../Source/Kernel/rme_kernel.c ****     /* Object init - need to add all kernel pages if they are top-level */
3205:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Init(Pgt_Crt)<0)
 6418              		.loc 1 3205 8
 6419 0574 1C001BE5 		ldr	r0, [fp, #-28]
 6420 0578 FEFFFFEB 		bl	__RME_Pgt_Init
3206:../../Source/Kernel/rme_kernel.c ****     {
3207:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3208:../../Source/Kernel/rme_kernel.c **** 
3209:../../Source/Kernel/rme_kernel.c ****         /* This must be successful */
3210:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase(Vaddr,Table_Size)==0);
3211:../../Source/Kernel/rme_kernel.c ****         
3212:../../Source/Kernel/rme_kernel.c ****         /* Unsuccessful. Revert operations */
3213:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),0U);
3214:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3215:../../Source/Kernel/rme_kernel.c ****     }
3216:../../Source/Kernel/rme_kernel.c ****     else
3217:../../Source/Kernel/rme_kernel.c ****     {
3218:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3219:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3220:../../Source/Kernel/rme_kernel.c ****     }
3221:../../Source/Kernel/rme_kernel.c **** 
3222:../../Source/Kernel/rme_kernel.c ****     /* Creation complete */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 171


3223:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Pgt_Crt->Head.Type_Stat),
 6421              		.loc 1 3223 5
 6422 057c 1C301BE5 		ldr	r3, [fp, #-28]
 6423 0580 0113A0E3 		mov	r1, #67108864
 6424 0584 0300A0E1 		mov	r0, r3
 6425 0588 FEFFFFEB 		bl	__RME_A7A_Write_Release
3224:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PGT,
3225:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
3226:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
3227:../../Source/Kernel/rme_kernel.c **** 
3228:../../Source/Kernel/rme_kernel.c ****     return 0;
 6426              		.loc 1 3228 12
 6427 058c 0030A0E3 		mov	r3, #0
 6428              	.L373:
3229:../../Source/Kernel/rme_kernel.c **** }
 6429              		.loc 1 3229 1
 6430 0590 0300A0E1 		mov	r0, r3
 6431 0594 04D04BE2 		sub	sp, fp, #4
 6432              		.cfi_def_cfa 13, 8
 6433              		@ sp needed
 6434 0598 0088BDE8 		pop	{fp, pc}
 6435              		.cfi_endproc
 6436              	.LFE32:
 6438              		.section	.text._RME_Pgt_Del,"ax",%progbits
 6439              		.align	2
 6440              		.syntax unified
 6441              		.arm
 6443              	_RME_Pgt_Del:
 6444              	.LFB33:
3230:../../Source/Kernel/rme_kernel.c **** #endif
3231:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Crt *************************************************/
3232:../../Source/Kernel/rme_kernel.c **** 
3233:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Del ******************************************************
3234:../../Source/Kernel/rme_kernel.c **** Description : Delete a page table.
3235:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3236:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
3237:../../Source/Kernel/rme_kernel.c ****                                   the cap to new captbl.
3238:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3239:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability slot that you want this newly
3240:../../Source/Kernel/rme_kernel.c ****                                   created page table capability to be in.
3241:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
3242:../../Source/Kernel/rme_kernel.c **** Output      : None.
3243:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3244:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3245:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3246:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Del(struct RME_Cap_Cpt* Cpt,
3247:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
3248:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
3249:../../Source/Kernel/rme_kernel.c **** {
 6445              		.loc 1 3249 1
 6446              		.cfi_startproc
 6447              		@ args = 0, pretend = 0, frame = 40
 6448              		@ frame_needed = 1, uses_anonymous_args = 0
 6449 0000 00482DE9 		push	{fp, lr}
 6450              		.cfi_def_cfa_offset 8
 6451              		.cfi_offset 11, -8
 6452              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 172


 6453 0004 04B08DE2 		add	fp, sp, #4
 6454              		.cfi_def_cfa 11, 4
 6455 0008 28D04DE2 		sub	sp, sp, #40
 6456 000c 20000BE5 		str	r0, [fp, #-32]
 6457 0010 24100BE5 		str	r1, [fp, #-36]
 6458 0014 28200BE5 		str	r2, [fp, #-40]
3250:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
3251:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Del;
3252:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3253:../../Source/Kernel/rme_kernel.c ****     /* These are used for deletion */
3254:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Object;
3255:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Table_Size;
3256:../../Source/Kernel/rme_kernel.c ****     
3257:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3258:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 6459              		.loc 1 3258 5
 6460 0018 24301BE5 		ldr	r3, [fp, #-36]
 6461 001c 803003E2 		and	r3, r3, #128
 6462 0020 000053E3 		cmp	r3, #0
 6463 0024 1C00001A 		bne	.L405
 6464              		.loc 1 3258 5 is_stmt 0 discriminator 1
 6465 0028 20301BE5 		ldr	r3, [fp, #-32]
 6466 002c 142093E5 		ldr	r2, [r3, #20]
 6467 0030 24301BE5 		ldr	r3, [fp, #-36]
 6468 0034 030052E1 		cmp	r2, r3
 6469 0038 0100008A 		bhi	.L406
 6470              		.loc 1 3258 5 discriminator 3
 6471 003c 0230E0E3 		mvn	r3, #2
 6472              		.loc 1 3258 5
 6473 0040 D20000EA 		b	.L407
 6474              	.L406:
 6475              		.loc 1 3258 5 discriminator 4
 6476 0044 24301BE5 		ldr	r3, [fp, #-36]
 6477 0048 8322A0E1 		lsl	r2, r3, #5
 6478 004c 20301BE5 		ldr	r3, [fp, #-32]
 6479 0050 0C3093E5 		ldr	r3, [r3, #12]
 6480 0054 033082E0 		add	r3, r2, r3
 6481 0058 08300BE5 		str	r3, [fp, #-8]
 6482 005c 08301BE5 		ldr	r3, [fp, #-8]
 6483 0060 0300A0E1 		mov	r0, r3
 6484 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6485 0068 10000BE5 		str	r0, [fp, #-16]
 6486              		.loc 1 3258 5 discriminator 1
 6487 006c 10301BE5 		ldr	r3, [fp, #-16]
 6488 0070 FF3803E2 		and	r3, r3, #16711680
 6489 0074 020853E3 		cmp	r3, #131072
 6490 0078 0100001A 		bne	.L408
 6491              		.loc 1 3258 5 discriminator 5
 6492 007c 0830E0E3 		mvn	r3, #8
 6493              		.loc 1 3258 5
 6494 0080 C20000EA 		b	.L407
 6495              	.L408:
 6496              		.loc 1 3258 5 discriminator 6
 6497 0084 10301BE5 		ldr	r3, [fp, #-16]
 6498 0088 233CA0E1 		lsr	r3, r3, #24
 6499 008c 030053E3 		cmp	r3, #3
 6500 0090 3F00000A 		beq	.L409
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 173


 6501              		.loc 1 3258 5 discriminator 7
 6502 0094 0130E0E3 		mvn	r3, #1
 6503              		.loc 1 3258 5
 6504 0098 BC0000EA 		b	.L407
 6505              	.L405:
 6506              		.loc 1 3258 5 discriminator 2
 6507 009c 24301BE5 		ldr	r3, [fp, #-36]
 6508 00a0 2324A0E1 		lsr	r2, r3, #8
 6509 00a4 20301BE5 		ldr	r3, [fp, #-32]
 6510 00a8 143093E5 		ldr	r3, [r3, #20]
 6511 00ac 030052E1 		cmp	r2, r3
 6512 00b0 0100003A 		bcc	.L410
 6513              		.loc 1 3258 5 discriminator 8
 6514 00b4 0230E0E3 		mvn	r3, #2
 6515              		.loc 1 3258 5
 6516 00b8 B40000EA 		b	.L407
 6517              	.L410:
 6518              		.loc 1 3258 5 discriminator 9
 6519 00bc 24301BE5 		ldr	r3, [fp, #-36]
 6520 00c0 2334A0E1 		lsr	r3, r3, #8
 6521 00c4 8322A0E1 		lsl	r2, r3, #5
 6522 00c8 20301BE5 		ldr	r3, [fp, #-32]
 6523 00cc 0C3093E5 		ldr	r3, [r3, #12]
 6524 00d0 033082E0 		add	r3, r2, r3
 6525 00d4 08300BE5 		str	r3, [fp, #-8]
 6526 00d8 08301BE5 		ldr	r3, [fp, #-8]
 6527 00dc 0300A0E1 		mov	r0, r3
 6528 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6529 00e4 10000BE5 		str	r0, [fp, #-16]
 6530              		.loc 1 3258 5 discriminator 1
 6531 00e8 10301BE5 		ldr	r3, [fp, #-16]
 6532 00ec FF3803E2 		and	r3, r3, #16711680
 6533 00f0 020853E3 		cmp	r3, #131072
 6534 00f4 0100001A 		bne	.L411
 6535              		.loc 1 3258 5 discriminator 10
 6536 00f8 0830E0E3 		mvn	r3, #8
 6537              		.loc 1 3258 5
 6538 00fc A30000EA 		b	.L407
 6539              	.L411:
 6540              		.loc 1 3258 5 discriminator 11
 6541 0100 10301BE5 		ldr	r3, [fp, #-16]
 6542 0104 233CA0E1 		lsr	r3, r3, #24
 6543 0108 030053E3 		cmp	r3, #3
 6544 010c 0100000A 		beq	.L412
 6545              		.loc 1 3258 5 discriminator 12
 6546 0110 0130E0E3 		mvn	r3, #1
 6547              		.loc 1 3258 5
 6548 0114 9D0000EA 		b	.L407
 6549              	.L412:
 6550              		.loc 1 3258 5 discriminator 13
 6551 0118 24301BE5 		ldr	r3, [fp, #-36]
 6552 011c 7F2003E2 		and	r2, r3, #127
 6553 0120 08301BE5 		ldr	r3, [fp, #-8]
 6554 0124 143093E5 		ldr	r3, [r3, #20]
 6555 0128 030052E1 		cmp	r2, r3
 6556 012c 0100003A 		bcc	.L413
 6557              		.loc 1 3258 5 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 174


 6558 0130 0230E0E3 		mvn	r3, #2
 6559              		.loc 1 3258 5
 6560 0134 950000EA 		b	.L407
 6561              	.L413:
 6562              		.loc 1 3258 5 discriminator 15
 6563 0138 24301BE5 		ldr	r3, [fp, #-36]
 6564 013c 7F3003E2 		and	r3, r3, #127
 6565 0140 8322A0E1 		lsl	r2, r3, #5
 6566 0144 08301BE5 		ldr	r3, [fp, #-8]
 6567 0148 0C3093E5 		ldr	r3, [r3, #12]
 6568 014c 033082E0 		add	r3, r2, r3
 6569 0150 08300BE5 		str	r3, [fp, #-8]
 6570 0154 08301BE5 		ldr	r3, [fp, #-8]
 6571 0158 0300A0E1 		mov	r0, r3
 6572 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6573 0160 10000BE5 		str	r0, [fp, #-16]
 6574              		.loc 1 3258 5 discriminator 1
 6575 0164 10301BE5 		ldr	r3, [fp, #-16]
 6576 0168 FF3803E2 		and	r3, r3, #16711680
 6577 016c 020853E3 		cmp	r3, #131072
 6578 0170 0100001A 		bne	.L414
 6579              		.loc 1 3258 5 discriminator 16
 6580 0174 0830E0E3 		mvn	r3, #8
 6581              		.loc 1 3258 5
 6582 0178 840000EA 		b	.L407
 6583              	.L414:
 6584              		.loc 1 3258 5 discriminator 17
 6585 017c 10301BE5 		ldr	r3, [fp, #-16]
 6586 0180 233CA0E1 		lsr	r3, r3, #24
 6587 0184 030053E3 		cmp	r3, #3
 6588 0188 0100000A 		beq	.L409
 6589              		.loc 1 3258 5 discriminator 18
 6590 018c 0130E0E3 		mvn	r3, #1
 6591              		.loc 1 3258 5
 6592 0190 7E0000EA 		b	.L407
 6593              	.L409:
3259:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
3260:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3261:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 6594              		.loc 1 3261 5 is_stmt 1
 6595 0194 08301BE5 		ldr	r3, [fp, #-8]
 6596 0198 083093E5 		ldr	r3, [r3, #8]
 6597 019c 023003E2 		and	r3, r3, #2
 6598 01a0 000053E3 		cmp	r3, #0
 6599 01a4 0100001A 		bne	.L415
 6600              		.loc 1 3261 5 is_stmt 0 discriminator 1
 6601 01a8 0630E0E3 		mvn	r3, #6
 6602              		.loc 1 3261 5
 6603 01ac 770000EA 		b	.L407
 6604              	.L415:
3262:../../Source/Kernel/rme_kernel.c ****     
3263:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
3264:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Pgt,struct RME_Cap_Pgt*,Pgt_Del);
 6605              		.loc 1 3264 5 is_stmt 1
 6606 01b0 08301BE5 		ldr	r3, [fp, #-8]
 6607 01b4 142093E5 		ldr	r2, [r3, #20]
 6608 01b8 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 175


 6609 01bc 030052E1 		cmp	r2, r3
 6610 01c0 0100008A 		bhi	.L416
 6611              		.loc 1 3264 5 is_stmt 0 discriminator 1
 6612 01c4 0230E0E3 		mvn	r3, #2
 6613              		.loc 1 3264 5
 6614 01c8 700000EA 		b	.L407
 6615              	.L416:
 6616              		.loc 1 3264 5 discriminator 2
 6617 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6618 01d0 8322A0E1 		lsl	r2, r3, #5
 6619 01d4 08301BE5 		ldr	r3, [fp, #-8]
 6620 01d8 0C3093E5 		ldr	r3, [r3, #12]
 6621 01dc 033082E0 		add	r3, r2, r3
 6622 01e0 14300BE5 		str	r3, [fp, #-20]
3265:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
3266:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Pgt_Del,Type_Stat,RME_CAP_TYPE_PGT);
 6623              		.loc 1 3266 5 is_stmt 1
 6624 01e4 14301BE5 		ldr	r3, [fp, #-20]
 6625 01e8 0300A0E1 		mov	r0, r3
 6626 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6627 01f0 10000BE5 		str	r0, [fp, #-16]
 6628              		.loc 1 3266 5 is_stmt 0 discriminator 1
 6629 01f4 10301BE5 		ldr	r3, [fp, #-16]
 6630 01f8 FF3803E2 		and	r3, r3, #16711680
 6631 01fc 020853E3 		cmp	r3, #131072
 6632 0200 0100000A 		beq	.L417
 6633 0204 0830E0E3 		mvn	r3, #8
 6634              		.loc 1 3266 5
 6635 0208 600000EA 		b	.L407
 6636              	.L417:
 6637              		.loc 1 3266 5 discriminator 2
 6638 020c 10301BE5 		ldr	r3, [fp, #-16]
 6639 0210 233CA0E1 		lsr	r3, r3, #24
 6640 0214 040053E3 		cmp	r3, #4
 6641 0218 0100000A 		beq	.L418
 6642              		.loc 1 3266 5 discriminator 3
 6643 021c 0130E0E3 		mvn	r3, #1
 6644              		.loc 1 3266 5
 6645 0220 5A0000EA 		b	.L407
 6646              	.L418:
 6647              		.loc 1 3266 5 discriminator 4
 6648 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 6649 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 6650 022c 002093E5 		ldr	r2, [r3]
 6651 0230 14301BE5 		ldr	r3, [fp, #-20]
 6652 0234 103093E5 		ldr	r3, [r3, #16]
 6653 0238 0310A0E1 		mov	r1, r3
 6654 023c 0200A0E1 		mov	r0, r2
 6655 0240 FEFFFFEB 		bl	_RME_Diff
 6656 0244 0030A0E1 		mov	r3, r0
 6657              		.loc 1 3266 5 discriminator 1
 6658 0248 0A0053E3 		cmp	r3, #10
 6659 024c 0100008A 		bhi	.L419
 6660              		.loc 1 3266 5 discriminator 5
 6661 0250 0730E0E3 		mvn	r3, #7
 6662              		.loc 1 3266 5
 6663 0254 4D0000EA 		b	.L407
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 176


 6664              	.L419:
 6665              		.loc 1 3266 5 discriminator 6
 6666 0258 14301BE5 		ldr	r3, [fp, #-20]
 6667 025c 043093E5 		ldr	r3, [r3, #4]
 6668 0260 000053E3 		cmp	r3, #0
 6669 0264 0B00000A 		beq	.L420
 6670              		.loc 1 3266 5 discriminator 7
 6671 0268 10301BE5 		ldr	r3, [fp, #-16]
 6672 026c 7330FFE6 		uxth	r3, r3
 6673 0270 000053E3 		cmp	r3, #0
 6674 0274 0500001A 		bne	.L421
 6675              		.loc 1 3266 5 discriminator 9
 6676 0278 14001BE5 		ldr	r0, [fp, #-20]
 6677 027c 10301BE5 		ldr	r3, [fp, #-16]
 6678 0280 FF38C3E3 		bic	r3, r3, #16711680
 6679 0284 0320A0E1 		mov	r2, r3
 6680 0288 10101BE5 		ldr	r1, [fp, #-16]
 6681 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6682              	.L421:
 6683              		.loc 1 3266 5 discriminator 11
 6684 0290 0530E0E3 		mvn	r3, #5
 6685              		.loc 1 3266 5
 6686 0294 3D0000EA 		b	.L407
 6687              	.L420:
 6688              		.loc 1 3266 5 discriminator 8
 6689 0298 10301BE5 		ldr	r3, [fp, #-16]
 6690 029c 7330FFE6 		uxth	r3, r3
 6691 02a0 000053E3 		cmp	r3, #0
 6692 02a4 0800000A 		beq	.L422
 6693              		.loc 1 3266 5 discriminator 12
 6694 02a8 003000E3 		movw	r3, #:lower16:.LC6
 6695 02ac 003040E3 		movt	r3, #:upper16:.LC6
 6696 02b0 002000E3 		movw	r2, #:lower16:.LC7
 6697 02b4 002040E3 		movt	r2, #:upper16:.LC7
 6698 02b8 C21C00E3 		movw	r1, #3266
 6699 02bc 000000E3 		movw	r0, #:lower16:.LC8
 6700 02c0 000040E3 		movt	r0, #:upper16:.LC8
 6701 02c4 FEFFFFEB 		bl	RME_Log
 6702              	.L423:
 6703              		.loc 1 3266 5
 6704 02c8 FEFFFFEA 		b	.L423
 6705              	.L422:
3267:../../Source/Kernel/rme_kernel.c ****     
3268:../../Source/Kernel/rme_kernel.c ****     /* Hardware related deletion check passed down to the HAL. The driver should make
3269:../../Source/Kernel/rme_kernel.c ****      * sure that it does not reference any lower level tables. If the driver layer does
3270:../../Source/Kernel/rme_kernel.c ****      * not conform to this, the deletion of page table is not guaranteed to main kernel
3271:../../Source/Kernel/rme_kernel.c ****      * consistency, and such consistency must be maintained by the user-level. It is 
3272:../../Source/Kernel/rme_kernel.c ****      * recommended that the driver layer enforce such consistency. */
3273:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Del_Check(Pgt_Del)<0)
 6706              		.loc 1 3273 8 is_stmt 1
 6707 02cc 14001BE5 		ldr	r0, [fp, #-20]
 6708 02d0 FEFFFFEB 		bl	__RME_Pgt_Del_Check
3274:../../Source/Kernel/rme_kernel.c ****     {
3275:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3276:../../Source/Kernel/rme_kernel.c **** 
3277:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Pgt_Del,Type_Stat);
3278:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 177


3279:../../Source/Kernel/rme_kernel.c ****     }
3280:../../Source/Kernel/rme_kernel.c ****     else
3281:../../Source/Kernel/rme_kernel.c ****     {
3282:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3283:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3284:../../Source/Kernel/rme_kernel.c ****     }
3285:../../Source/Kernel/rme_kernel.c ****     
3286:../../Source/Kernel/rme_kernel.c ****     /* Remember these two variables for deletion */
3287:../../Source/Kernel/rme_kernel.c ****     Object=RME_CAP_GETOBJ(Pgt_Del,rme_ptr_t);
 6709              		.loc 1 3287 11
 6710 02d4 14301BE5 		ldr	r3, [fp, #-20]
 6711 02d8 0C3093E5 		ldr	r3, [r3, #12]
 6712 02dc 18300BE5 		str	r3, [fp, #-24]
3288:../../Source/Kernel/rme_kernel.c ****     if(((Pgt_Del->Base)&RME_PGT_TOP)!=0U)
 6713              		.loc 1 3288 17
 6714 02e0 14301BE5 		ldr	r3, [fp, #-20]
 6715 02e4 183093E5 		ldr	r3, [r3, #24]
 6716              		.loc 1 3288 24
 6717 02e8 013003E2 		and	r3, r3, #1
 6718              		.loc 1 3288 7
 6719 02ec 000053E3 		cmp	r3, #0
 6720 02f0 0600000A 		beq	.L424
3289:../../Source/Kernel/rme_kernel.c ****     {
3290:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3291:../../Source/Kernel/rme_kernel.c **** 
3292:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_TOP(RME_PGT_NMORD(Pgt_Del->Order));
 6721              		.loc 1 3292 20
 6722 02f4 14301BE5 		ldr	r3, [fp, #-20]
 6723 02f8 143093E5 		ldr	r3, [r3, #20]
 6724 02fc 7330FFE6 		uxth	r3, r3
 6725              		.loc 1 3292 19
 6726 0300 0420A0E3 		mov	r2, #4
 6727 0304 1233A0E1 		lsl	r3, r2, r3
 6728 0308 0C300BE5 		str	r3, [fp, #-12]
 6729 030c 050000EA 		b	.L425
 6730              	.L424:
3293:../../Source/Kernel/rme_kernel.c ****     }
3294:../../Source/Kernel/rme_kernel.c ****     else
3295:../../Source/Kernel/rme_kernel.c ****     {
3296:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3297:../../Source/Kernel/rme_kernel.c **** 
3298:../../Source/Kernel/rme_kernel.c ****         Table_Size=RME_PGT_SIZE_NOM(RME_PGT_NMORD(Pgt_Del->Order));
 6731              		.loc 1 3298 20
 6732 0310 14301BE5 		ldr	r3, [fp, #-20]
 6733 0314 143093E5 		ldr	r3, [r3, #20]
 6734 0318 7330FFE6 		uxth	r3, r3
 6735              		.loc 1 3298 19
 6736 031c 0420A0E3 		mov	r2, #4
 6737 0320 1233A0E1 		lsl	r3, r2, r3
 6738 0324 0C300BE5 		str	r3, [fp, #-12]
 6739              	.L425:
3299:../../Source/Kernel/rme_kernel.c ****     }
3300:../../Source/Kernel/rme_kernel.c ****     
3301:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
3302:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Pgt_Del,Type_Stat);
 6740              		.loc 1 3302 5
 6741 0328 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 178


 6742 032c 0020A0E3 		mov	r2, #0
 6743 0330 10101BE5 		ldr	r1, [fp, #-16]
 6744 0334 0300A0E1 		mov	r0, r3
 6745 0338 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 6746 033c 0030A0E1 		mov	r3, r0
 6747              		.loc 1 3302 5 is_stmt 0 discriminator 1
 6748 0340 000053E3 		cmp	r3, #0
 6749 0344 0100001A 		bne	.L426
 6750 0348 0030E0E3 		mvn	r3, #0
 6751              		.loc 1 3302 5
 6752 034c 0F0000EA 		b	.L407
 6753              	.L426:
3303:../../Source/Kernel/rme_kernel.c **** 
3304:../../Source/Kernel/rme_kernel.c ****     /* Try to erase the area - This must be successful */
3305:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase(Object,Table_Size)==0);
 6754              		.loc 1 3305 5 is_stmt 1
 6755 0350 0C101BE5 		ldr	r1, [fp, #-12]
 6756 0354 18001BE5 		ldr	r0, [fp, #-24]
 6757 0358 FEFFFFEB 		bl	_RME_Kot_Erase
 6758 035c 0030A0E1 		mov	r3, r0
 6759              		.loc 1 3305 5 is_stmt 0 discriminator 1
 6760 0360 000053E3 		cmp	r3, #0
 6761 0364 0800000A 		beq	.L427
 6762 0368 003000E3 		movw	r3, #:lower16:.LC6
 6763 036c 003040E3 		movt	r3, #:upper16:.LC6
 6764 0370 002000E3 		movw	r2, #:lower16:.LC7
 6765 0374 002040E3 		movt	r2, #:upper16:.LC7
 6766 0378 E91C00E3 		movw	r1, #3305
 6767 037c 000000E3 		movw	r0, #:lower16:.LC8
 6768 0380 000040E3 		movt	r0, #:upper16:.LC8
 6769 0384 FEFFFFEB 		bl	RME_Log
 6770              	.L428:
 6771              		.loc 1 3305 5
 6772 0388 FEFFFFEA 		b	.L428
 6773              	.L427:
3306:../../Source/Kernel/rme_kernel.c **** 
3307:../../Source/Kernel/rme_kernel.c ****     return 0;
 6774              		.loc 1 3307 12 is_stmt 1
 6775 038c 0030A0E3 		mov	r3, #0
 6776              	.L407:
3308:../../Source/Kernel/rme_kernel.c **** }
 6777              		.loc 1 3308 1
 6778 0390 0300A0E1 		mov	r0, r3
 6779 0394 04D04BE2 		sub	sp, fp, #4
 6780              		.cfi_def_cfa 13, 8
 6781              		@ sp needed
 6782 0398 0088BDE8 		pop	{fp, pc}
 6783              		.cfi_endproc
 6784              	.LFE33:
 6786              		.section	.text._RME_Pgt_Add,"ax",%progbits
 6787              		.align	2
 6788              		.syntax unified
 6789              		.arm
 6791              	_RME_Pgt_Add:
 6792              	.LFB34:
3309:../../Source/Kernel/rme_kernel.c **** #endif
3310:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Del *************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 179


3311:../../Source/Kernel/rme_kernel.c **** 
3312:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Add ******************************************************
3313:../../Source/Kernel/rme_kernel.c **** Description : Delegate a page from one page table to another. This is the only
3314:../../Source/Kernel/rme_kernel.c ****               way to add pages to new page tables after the system boots.
3315:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3316:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Dst - The capability to the destination page
3317:../../Source/Kernel/rme_kernel.c ****                                       directory.
3318:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3319:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate to in the
3320:../../Source/Kernel/rme_kernel.c ****                                   destination page directory.
3321:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Dst - The page access permission for the
3322:../../Source/Kernel/rme_kernel.c ****                                    destination page.
3323:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Src - The capability to the source page 
3324:../../Source/Kernel/rme_kernel.c ****                                       directory.
3325:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
3326:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos_Dst - The position to delegate from in the source
3327:../../Source/Kernel/rme_kernel.c ****                                   page directory.
3328:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Index - The index of the physical address frame to
3329:../../Source/Kernel/rme_kernel.c ****                                 delegate. For example, if the destination
3330:../../Source/Kernel/rme_kernel.c ****                                 directory's page size is 1/4 of that of the
3331:../../Source/Kernel/rme_kernel.c ****                                 source directory, index=0 will delegate the
3332:../../Source/Kernel/rme_kernel.c ****                                 first 1/4, index=1 will delegate the second
3333:../../Source/Kernel/rme_kernel.c ****                                 1/4, index=2 will delegate the third 1/4, and
3334:../../Source/Kernel/rme_kernel.c ****                                 index=3 will delegate the last 1/4.
3335:../../Source/Kernel/rme_kernel.c ****                                 All other index values are illegal.
3336:../../Source/Kernel/rme_kernel.c **** Output      : None.
3337:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3338:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3339:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3340:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Add(struct RME_Cap_Cpt* Cpt, 
3341:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Dst,
3342:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Dst,
3343:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Dst,
3344:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Src,
3345:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos_Src,
3346:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Index)
3347:../../Source/Kernel/rme_kernel.c **** {
 6793              		.loc 1 3347 1
 6794              		.cfi_startproc
 6795              		@ args = 12, pretend = 0, frame = 48
 6796              		@ frame_needed = 1, uses_anonymous_args = 0
 6797 0000 00482DE9 		push	{fp, lr}
 6798              		.cfi_def_cfa_offset 8
 6799              		.cfi_offset 11, -8
 6800              		.cfi_offset 14, -4
 6801 0004 04B08DE2 		add	fp, sp, #4
 6802              		.cfi_def_cfa 11, 4
 6803 0008 30D04DE2 		sub	sp, sp, #48
 6804 000c 28000BE5 		str	r0, [fp, #-40]
 6805 0010 2C100BE5 		str	r1, [fp, #-44]
 6806 0014 30200BE5 		str	r2, [fp, #-48]
 6807 0018 34300BE5 		str	r3, [fp, #-52]
3348:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Src;
3349:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Dst;
3350:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Dst;
3351:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Paddr_Src;
3352:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag_Src;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 180


3353:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3354:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Src;
3355:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Dst;
3356:../../Source/Kernel/rme_kernel.c **** 
3357:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3358:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Dst,RME_CAP_TYPE_PGT,
 6808              		.loc 1 3358 5
 6809 001c 2C301BE5 		ldr	r3, [fp, #-44]
 6810 0020 803003E2 		and	r3, r3, #128
 6811 0024 000053E3 		cmp	r3, #0
 6812 0028 1C00001A 		bne	.L430
 6813              		.loc 1 3358 5 is_stmt 0 discriminator 1
 6814 002c 28301BE5 		ldr	r3, [fp, #-40]
 6815 0030 142093E5 		ldr	r2, [r3, #20]
 6816 0034 2C301BE5 		ldr	r3, [fp, #-44]
 6817 0038 030052E1 		cmp	r2, r3
 6818 003c 0100008A 		bhi	.L431
 6819              		.loc 1 3358 5 discriminator 3
 6820 0040 0230E0E3 		mvn	r3, #2
 6821              		.loc 1 3358 5
 6822 0044 260100EA 		b	.L460
 6823              	.L431:
 6824              		.loc 1 3358 5 discriminator 4
 6825 0048 2C301BE5 		ldr	r3, [fp, #-44]
 6826 004c 8322A0E1 		lsl	r2, r3, #5
 6827 0050 28301BE5 		ldr	r3, [fp, #-40]
 6828 0054 0C3093E5 		ldr	r3, [r3, #12]
 6829 0058 033082E0 		add	r3, r2, r3
 6830 005c 0C300BE5 		str	r3, [fp, #-12]
 6831 0060 0C301BE5 		ldr	r3, [fp, #-12]
 6832 0064 0300A0E1 		mov	r0, r3
 6833 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6834 006c 14000BE5 		str	r0, [fp, #-20]
 6835              		.loc 1 3358 5 discriminator 1
 6836 0070 14301BE5 		ldr	r3, [fp, #-20]
 6837 0074 FF3803E2 		and	r3, r3, #16711680
 6838 0078 020853E3 		cmp	r3, #131072
 6839 007c 0100001A 		bne	.L433
 6840              		.loc 1 3358 5 discriminator 5
 6841 0080 0830E0E3 		mvn	r3, #8
 6842              		.loc 1 3358 5
 6843 0084 160100EA 		b	.L460
 6844              	.L433:
 6845              		.loc 1 3358 5 discriminator 6
 6846 0088 14301BE5 		ldr	r3, [fp, #-20]
 6847 008c 233CA0E1 		lsr	r3, r3, #24
 6848 0090 040053E3 		cmp	r3, #4
 6849 0094 3F00000A 		beq	.L434
 6850              		.loc 1 3358 5 discriminator 7
 6851 0098 0130E0E3 		mvn	r3, #1
 6852              		.loc 1 3358 5
 6853 009c 100100EA 		b	.L460
 6854              	.L430:
 6855              		.loc 1 3358 5 discriminator 2
 6856 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 6857 00a4 2324A0E1 		lsr	r2, r3, #8
 6858 00a8 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 181


 6859 00ac 143093E5 		ldr	r3, [r3, #20]
 6860 00b0 030052E1 		cmp	r2, r3
 6861 00b4 0100003A 		bcc	.L435
 6862              		.loc 1 3358 5 discriminator 8
 6863 00b8 0230E0E3 		mvn	r3, #2
 6864              		.loc 1 3358 5
 6865 00bc 080100EA 		b	.L460
 6866              	.L435:
 6867              		.loc 1 3358 5 discriminator 9
 6868 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 6869 00c4 2334A0E1 		lsr	r3, r3, #8
 6870 00c8 8322A0E1 		lsl	r2, r3, #5
 6871 00cc 28301BE5 		ldr	r3, [fp, #-40]
 6872 00d0 0C3093E5 		ldr	r3, [r3, #12]
 6873 00d4 033082E0 		add	r3, r2, r3
 6874 00d8 0C300BE5 		str	r3, [fp, #-12]
 6875 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 6876 00e0 0300A0E1 		mov	r0, r3
 6877 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6878 00e8 14000BE5 		str	r0, [fp, #-20]
 6879              		.loc 1 3358 5 discriminator 1
 6880 00ec 14301BE5 		ldr	r3, [fp, #-20]
 6881 00f0 FF3803E2 		and	r3, r3, #16711680
 6882 00f4 020853E3 		cmp	r3, #131072
 6883 00f8 0100001A 		bne	.L436
 6884              		.loc 1 3358 5 discriminator 10
 6885 00fc 0830E0E3 		mvn	r3, #8
 6886              		.loc 1 3358 5
 6887 0100 F70000EA 		b	.L460
 6888              	.L436:
 6889              		.loc 1 3358 5 discriminator 11
 6890 0104 14301BE5 		ldr	r3, [fp, #-20]
 6891 0108 233CA0E1 		lsr	r3, r3, #24
 6892 010c 030053E3 		cmp	r3, #3
 6893 0110 0100000A 		beq	.L437
 6894              		.loc 1 3358 5 discriminator 12
 6895 0114 0130E0E3 		mvn	r3, #1
 6896              		.loc 1 3358 5
 6897 0118 F10000EA 		b	.L460
 6898              	.L437:
 6899              		.loc 1 3358 5 discriminator 13
 6900 011c 2C301BE5 		ldr	r3, [fp, #-44]
 6901 0120 7F2003E2 		and	r2, r3, #127
 6902 0124 0C301BE5 		ldr	r3, [fp, #-12]
 6903 0128 143093E5 		ldr	r3, [r3, #20]
 6904 012c 030052E1 		cmp	r2, r3
 6905 0130 0100003A 		bcc	.L438
 6906              		.loc 1 3358 5 discriminator 14
 6907 0134 0230E0E3 		mvn	r3, #2
 6908              		.loc 1 3358 5
 6909 0138 E90000EA 		b	.L460
 6910              	.L438:
 6911              		.loc 1 3358 5 discriminator 15
 6912 013c 2C301BE5 		ldr	r3, [fp, #-44]
 6913 0140 7F3003E2 		and	r3, r3, #127
 6914 0144 8322A0E1 		lsl	r2, r3, #5
 6915 0148 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 182


 6916 014c 0C3093E5 		ldr	r3, [r3, #12]
 6917 0150 033082E0 		add	r3, r2, r3
 6918 0154 0C300BE5 		str	r3, [fp, #-12]
 6919 0158 0C301BE5 		ldr	r3, [fp, #-12]
 6920 015c 0300A0E1 		mov	r0, r3
 6921 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6922 0164 14000BE5 		str	r0, [fp, #-20]
 6923              		.loc 1 3358 5 discriminator 1
 6924 0168 14301BE5 		ldr	r3, [fp, #-20]
 6925 016c FF3803E2 		and	r3, r3, #16711680
 6926 0170 020853E3 		cmp	r3, #131072
 6927 0174 0100001A 		bne	.L439
 6928              		.loc 1 3358 5 discriminator 16
 6929 0178 0830E0E3 		mvn	r3, #8
 6930              		.loc 1 3358 5
 6931 017c D80000EA 		b	.L460
 6932              	.L439:
 6933              		.loc 1 3358 5 discriminator 17
 6934 0180 14301BE5 		ldr	r3, [fp, #-20]
 6935 0184 233CA0E1 		lsr	r3, r3, #24
 6936 0188 040053E3 		cmp	r3, #4
 6937 018c 0100000A 		beq	.L434
 6938              		.loc 1 3358 5 discriminator 18
 6939 0190 0130E0E3 		mvn	r3, #1
 6940              		.loc 1 3358 5
 6941 0194 D20000EA 		b	.L460
 6942              	.L434:
3359:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Dst,Type_Stat);
3360:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Src,RME_CAP_TYPE_PGT,
 6943              		.loc 1 3360 5 is_stmt 1
 6944 0198 04309BE5 		ldr	r3, [fp, #4]
 6945 019c 803003E2 		and	r3, r3, #128
 6946 01a0 000053E3 		cmp	r3, #0
 6947 01a4 1C00001A 		bne	.L440
 6948              		.loc 1 3360 5 is_stmt 0 discriminator 1
 6949 01a8 28301BE5 		ldr	r3, [fp, #-40]
 6950 01ac 142093E5 		ldr	r2, [r3, #20]
 6951 01b0 04309BE5 		ldr	r3, [fp, #4]
 6952 01b4 030052E1 		cmp	r2, r3
 6953 01b8 0100008A 		bhi	.L441
 6954              		.loc 1 3360 5 discriminator 3
 6955 01bc 0230E0E3 		mvn	r3, #2
 6956              		.loc 1 3360 5
 6957 01c0 C70000EA 		b	.L460
 6958              	.L441:
 6959              		.loc 1 3360 5 discriminator 4
 6960 01c4 04309BE5 		ldr	r3, [fp, #4]
 6961 01c8 8322A0E1 		lsl	r2, r3, #5
 6962 01cc 28301BE5 		ldr	r3, [fp, #-40]
 6963 01d0 0C3093E5 		ldr	r3, [r3, #12]
 6964 01d4 033082E0 		add	r3, r2, r3
 6965 01d8 08300BE5 		str	r3, [fp, #-8]
 6966 01dc 08301BE5 		ldr	r3, [fp, #-8]
 6967 01e0 0300A0E1 		mov	r0, r3
 6968 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 6969 01e8 14000BE5 		str	r0, [fp, #-20]
 6970              		.loc 1 3360 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 183


 6971 01ec 14301BE5 		ldr	r3, [fp, #-20]
 6972 01f0 FF3803E2 		and	r3, r3, #16711680
 6973 01f4 020853E3 		cmp	r3, #131072
 6974 01f8 0100001A 		bne	.L442
 6975              		.loc 1 3360 5 discriminator 5
 6976 01fc 0830E0E3 		mvn	r3, #8
 6977              		.loc 1 3360 5
 6978 0200 B70000EA 		b	.L460
 6979              	.L442:
 6980              		.loc 1 3360 5 discriminator 6
 6981 0204 14301BE5 		ldr	r3, [fp, #-20]
 6982 0208 233CA0E1 		lsr	r3, r3, #24
 6983 020c 040053E3 		cmp	r3, #4
 6984 0210 3F00000A 		beq	.L443
 6985              		.loc 1 3360 5 discriminator 7
 6986 0214 0130E0E3 		mvn	r3, #1
 6987              		.loc 1 3360 5
 6988 0218 B10000EA 		b	.L460
 6989              	.L440:
 6990              		.loc 1 3360 5 discriminator 2
 6991 021c 04309BE5 		ldr	r3, [fp, #4]
 6992 0220 2324A0E1 		lsr	r2, r3, #8
 6993 0224 28301BE5 		ldr	r3, [fp, #-40]
 6994 0228 143093E5 		ldr	r3, [r3, #20]
 6995 022c 030052E1 		cmp	r2, r3
 6996 0230 0100003A 		bcc	.L444
 6997              		.loc 1 3360 5 discriminator 8
 6998 0234 0230E0E3 		mvn	r3, #2
 6999              		.loc 1 3360 5
 7000 0238 A90000EA 		b	.L460
 7001              	.L444:
 7002              		.loc 1 3360 5 discriminator 9
 7003 023c 04309BE5 		ldr	r3, [fp, #4]
 7004 0240 2334A0E1 		lsr	r3, r3, #8
 7005 0244 8322A0E1 		lsl	r2, r3, #5
 7006 0248 28301BE5 		ldr	r3, [fp, #-40]
 7007 024c 0C3093E5 		ldr	r3, [r3, #12]
 7008 0250 033082E0 		add	r3, r2, r3
 7009 0254 08300BE5 		str	r3, [fp, #-8]
 7010 0258 08301BE5 		ldr	r3, [fp, #-8]
 7011 025c 0300A0E1 		mov	r0, r3
 7012 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7013 0264 14000BE5 		str	r0, [fp, #-20]
 7014              		.loc 1 3360 5 discriminator 1
 7015 0268 14301BE5 		ldr	r3, [fp, #-20]
 7016 026c FF3803E2 		and	r3, r3, #16711680
 7017 0270 020853E3 		cmp	r3, #131072
 7018 0274 0100001A 		bne	.L445
 7019              		.loc 1 3360 5 discriminator 10
 7020 0278 0830E0E3 		mvn	r3, #8
 7021              		.loc 1 3360 5
 7022 027c 980000EA 		b	.L460
 7023              	.L445:
 7024              		.loc 1 3360 5 discriminator 11
 7025 0280 14301BE5 		ldr	r3, [fp, #-20]
 7026 0284 233CA0E1 		lsr	r3, r3, #24
 7027 0288 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 184


 7028 028c 0100000A 		beq	.L446
 7029              		.loc 1 3360 5 discriminator 12
 7030 0290 0130E0E3 		mvn	r3, #1
 7031              		.loc 1 3360 5
 7032 0294 920000EA 		b	.L460
 7033              	.L446:
 7034              		.loc 1 3360 5 discriminator 13
 7035 0298 04309BE5 		ldr	r3, [fp, #4]
 7036 029c 7F2003E2 		and	r2, r3, #127
 7037 02a0 08301BE5 		ldr	r3, [fp, #-8]
 7038 02a4 143093E5 		ldr	r3, [r3, #20]
 7039 02a8 030052E1 		cmp	r2, r3
 7040 02ac 0100003A 		bcc	.L447
 7041              		.loc 1 3360 5 discriminator 14
 7042 02b0 0230E0E3 		mvn	r3, #2
 7043              		.loc 1 3360 5
 7044 02b4 8A0000EA 		b	.L460
 7045              	.L447:
 7046              		.loc 1 3360 5 discriminator 15
 7047 02b8 04309BE5 		ldr	r3, [fp, #4]
 7048 02bc 7F3003E2 		and	r3, r3, #127
 7049 02c0 8322A0E1 		lsl	r2, r3, #5
 7050 02c4 08301BE5 		ldr	r3, [fp, #-8]
 7051 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7052 02cc 033082E0 		add	r3, r2, r3
 7053 02d0 08300BE5 		str	r3, [fp, #-8]
 7054 02d4 08301BE5 		ldr	r3, [fp, #-8]
 7055 02d8 0300A0E1 		mov	r0, r3
 7056 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7057 02e0 14000BE5 		str	r0, [fp, #-20]
 7058              		.loc 1 3360 5 discriminator 1
 7059 02e4 14301BE5 		ldr	r3, [fp, #-20]
 7060 02e8 FF3803E2 		and	r3, r3, #16711680
 7061 02ec 020853E3 		cmp	r3, #131072
 7062 02f0 0100001A 		bne	.L448
 7063              		.loc 1 3360 5 discriminator 16
 7064 02f4 0830E0E3 		mvn	r3, #8
 7065              		.loc 1 3360 5
 7066 02f8 790000EA 		b	.L460
 7067              	.L448:
 7068              		.loc 1 3360 5 discriminator 17
 7069 02fc 14301BE5 		ldr	r3, [fp, #-20]
 7070 0300 233CA0E1 		lsr	r3, r3, #24
 7071 0304 040053E3 		cmp	r3, #4
 7072 0308 0100000A 		beq	.L443
 7073              		.loc 1 3360 5 discriminator 18
 7074 030c 0130E0E3 		mvn	r3, #1
 7075              		.loc 1 3360 5
 7076 0310 730000EA 		b	.L460
 7077              	.L443:
3361:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Src,Type_Stat);
3362:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3363:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Dst,RME_PGT_FLAG_ADD_DST);
 7078              		.loc 1 3363 5 is_stmt 1
 7079 0314 0C301BE5 		ldr	r3, [fp, #-12]
 7080 0318 083093E5 		ldr	r3, [r3, #8]
 7081 031c 023003E2 		and	r3, r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 185


 7082 0320 000053E3 		cmp	r3, #0
 7083 0324 0100001A 		bne	.L449
 7084              		.loc 1 3363 5 is_stmt 0 discriminator 1
 7085 0328 0630E0E3 		mvn	r3, #6
 7086              		.loc 1 3363 5
 7087 032c 6C0000EA 		b	.L460
 7088              	.L449:
3364:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Src,RME_PGT_FLAG_ADD_SRC);
 7089              		.loc 1 3364 5 is_stmt 1
 7090 0330 08301BE5 		ldr	r3, [fp, #-8]
 7091 0334 083093E5 		ldr	r3, [r3, #8]
 7092 0338 013003E2 		and	r3, r3, #1
 7093 033c 000053E3 		cmp	r3, #0
 7094 0340 0100001A 		bne	.L450
 7095              		.loc 1 3364 5 is_stmt 0 discriminator 1
 7096 0344 0630E0E3 		mvn	r3, #6
 7097              		.loc 1 3364 5
 7098 0348 650000EA 		b	.L460
 7099              	.L450:
3365:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3366:../../Source/Kernel/rme_kernel.c ****     if((Pos_Dst>RME_PGT_FLAG_HIGH(Pgt_Dst->Head.Flag))||
 7100              		.loc 1 3366 17 is_stmt 1
 7101 034c 0C301BE5 		ldr	r3, [fp, #-12]
 7102 0350 083093E5 		ldr	r3, [r3, #8]
 7103 0354 233AA0E1 		lsr	r3, r3, #20
 7104              		.loc 1 3366 7
 7105 0358 30201BE5 		ldr	r2, [fp, #-48]
 7106 035c 030052E1 		cmp	r2, r3
 7107 0360 1300008A 		bhi	.L451
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7108              		.loc 1 3367 17
 7109 0364 0C301BE5 		ldr	r3, [fp, #-12]
 7110 0368 083093E5 		ldr	r3, [r3, #8]
 7111 036c 2334A0E1 		lsr	r3, r3, #8
 7112 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3366:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7113              		.loc 1 3366 55 discriminator 1
 7114 0374 30201BE5 		ldr	r2, [fp, #-48]
 7115 0378 030052E1 		cmp	r2, r3
 7116 037c 0C00003A 		bcc	.L451
3368:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
 7117              		.loc 1 3368 17
 7118 0380 08301BE5 		ldr	r3, [fp, #-8]
 7119 0384 083093E5 		ldr	r3, [r3, #8]
 7120 0388 233AA0E1 		lsr	r3, r3, #20
3367:../../Source/Kernel/rme_kernel.c ****        (Pos_Dst<RME_PGT_FLAG_LOW(Pgt_Dst->Head.Flag))||
 7121              		.loc 1 3367 54
 7122 038c 08209BE5 		ldr	r2, [fp, #8]
 7123 0390 030052E1 		cmp	r2, r3
 7124 0394 0600008A 		bhi	.L451
3369:../../Source/Kernel/rme_kernel.c ****        (Pos_Src<RME_PGT_FLAG_LOW(Pgt_Src->Head.Flag)))
 7125              		.loc 1 3369 17
 7126 0398 08301BE5 		ldr	r3, [fp, #-8]
 7127 039c 083093E5 		ldr	r3, [r3, #8]
 7128 03a0 2334A0E1 		lsr	r3, r3, #8
 7129 03a4 5330EBE7 		ubfx	r3, r3, #0, #12
3368:../../Source/Kernel/rme_kernel.c ****        (Pos_Src>RME_PGT_FLAG_HIGH(Pgt_Src->Head.Flag))||
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 186


 7130              		.loc 1 3368 55
 7131 03a8 08209BE5 		ldr	r2, [fp, #8]
 7132 03ac 030052E1 		cmp	r2, r3
 7133 03b0 0100002A 		bcs	.L452
 7134              	.L451:
3370:../../Source/Kernel/rme_kernel.c ****     {
3371:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3372:../../Source/Kernel/rme_kernel.c **** 
3373:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7135              		.loc 1 3373 16
 7136 03b4 0630E0E3 		mvn	r3, #6
 7137 03b8 490000EA 		b	.L460
 7138              	.L452:
3374:../../Source/Kernel/rme_kernel.c ****     }
3375:../../Source/Kernel/rme_kernel.c ****     else
3376:../../Source/Kernel/rme_kernel.c ****     {
3377:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3378:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3379:../../Source/Kernel/rme_kernel.c ****     }
3380:../../Source/Kernel/rme_kernel.c **** 
3381:../../Source/Kernel/rme_kernel.c ****     /* See if the size order relationship is correct */
3382:../../Source/Kernel/rme_kernel.c ****     Szord_Dst=RME_PGT_SZORD(Pgt_Dst->Order);
 7139              		.loc 1 3382 15
 7140 03bc 0C301BE5 		ldr	r3, [fp, #-12]
 7141 03c0 143093E5 		ldr	r3, [r3, #20]
 7142              		.loc 1 3382 14
 7143 03c4 2338A0E1 		lsr	r3, r3, #16
 7144 03c8 18300BE5 		str	r3, [fp, #-24]
3383:../../Source/Kernel/rme_kernel.c ****     Szord_Src=RME_PGT_SZORD(Pgt_Src->Order);
 7145              		.loc 1 3383 15
 7146 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7147 03d0 143093E5 		ldr	r3, [r3, #20]
 7148              		.loc 1 3383 14
 7149 03d4 2338A0E1 		lsr	r3, r3, #16
 7150 03d8 1C300BE5 		str	r3, [fp, #-28]
3384:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst>Szord_Src)
 7151              		.loc 1 3384 7
 7152 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7153 03e0 1C301BE5 		ldr	r3, [fp, #-28]
 7154 03e4 030052E1 		cmp	r2, r3
 7155 03e8 0100009A 		bls	.L453
3385:../../Source/Kernel/rme_kernel.c ****     {
3386:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3387:../../Source/Kernel/rme_kernel.c **** 
3388:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7156              		.loc 1 3388 16
 7157 03ec 6430E0E3 		mvn	r3, #100
 7158 03f0 3B0000EA 		b	.L460
 7159              	.L453:
3389:../../Source/Kernel/rme_kernel.c ****     }
3390:../../Source/Kernel/rme_kernel.c ****     else
3391:../../Source/Kernel/rme_kernel.c ****     {
3392:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3393:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3394:../../Source/Kernel/rme_kernel.c ****     }
3395:../../Source/Kernel/rme_kernel.c **** 
3396:../../Source/Kernel/rme_kernel.c ****     /* See if the positions are out of range - NMORD is restricted, no UB */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 187


3397:../../Source/Kernel/rme_kernel.c ****     if(((Pos_Dst>>RME_PGT_NMORD(Pgt_Dst->Order))!=0U)||
 7160              		.loc 1 3397 19
 7161 03f4 0C301BE5 		ldr	r3, [fp, #-12]
 7162 03f8 143093E5 		ldr	r3, [r3, #20]
 7163 03fc 7330FFE6 		uxth	r3, r3
 7164              		.loc 1 3397 17
 7165 0400 30201BE5 		ldr	r2, [fp, #-48]
 7166 0404 3233A0E1 		lsr	r3, r2, r3
 7167              		.loc 1 3397 7
 7168 0408 000053E3 		cmp	r3, #0
 7169 040c 0600001A 		bne	.L454
3398:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7170              		.loc 1 3398 19
 7171 0410 08301BE5 		ldr	r3, [fp, #-8]
 7172 0414 143093E5 		ldr	r3, [r3, #20]
 7173 0418 7330FFE6 		uxth	r3, r3
 7174              		.loc 1 3398 17
 7175 041c 08209BE5 		ldr	r2, [fp, #8]
 7176 0420 3233A0E1 		lsr	r3, r2, r3
3397:../../Source/Kernel/rme_kernel.c ****        ((Pos_Src>>RME_PGT_NMORD(Pgt_Src->Order))!=0U))
 7177              		.loc 1 3397 54 discriminator 1
 7178 0424 000053E3 		cmp	r3, #0
 7179 0428 0100000A 		beq	.L455
 7180              	.L454:
3399:../../Source/Kernel/rme_kernel.c ****     {
3400:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3401:../../Source/Kernel/rme_kernel.c **** 
3402:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7181              		.loc 1 3402 16
 7182 042c 6430E0E3 		mvn	r3, #100
 7183 0430 2B0000EA 		b	.L460
 7184              	.L455:
3403:../../Source/Kernel/rme_kernel.c ****     }
3404:../../Source/Kernel/rme_kernel.c ****     else
3405:../../Source/Kernel/rme_kernel.c ****     {
3406:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3407:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3408:../../Source/Kernel/rme_kernel.c ****     }
3409:../../Source/Kernel/rme_kernel.c **** 
3410:../../Source/Kernel/rme_kernel.c ****     /* See if the source subposition is out of range - avoid UB */
3411:../../Source/Kernel/rme_kernel.c ****     if(Szord_Src<RME_WORD_BIT)
 7185              		.loc 1 3411 7
 7186 0434 1C301BE5 		ldr	r3, [fp, #-28]
 7187 0438 1F0053E3 		cmp	r3, #31
 7188 043c 0900008A 		bhi	.L456
3412:../../Source/Kernel/rme_kernel.c ****     {
3413:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3414:../../Source/Kernel/rme_kernel.c ****         
3415:../../Source/Kernel/rme_kernel.c ****         /* No UB because Szord_Dst<=Szord_Src */
3416:../../Source/Kernel/rme_kernel.c ****         if(RME_POW2(Szord_Src)<=(Index<<Szord_Dst))
 7189              		.loc 1 3416 12
 7190 0440 0120A0E3 		mov	r2, #1
 7191 0444 1C301BE5 		ldr	r3, [fp, #-28]
 7192 0448 1223A0E1 		lsl	r2, r2, r3
 7193              		.loc 1 3416 39
 7194 044c 0C109BE5 		ldr	r1, [fp, #12]
 7195 0450 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 188


 7196 0454 1133A0E1 		lsl	r3, r1, r3
 7197              		.loc 1 3416 11
 7198 0458 030052E1 		cmp	r2, r3
 7199 045c 0100008A 		bhi	.L456
3417:../../Source/Kernel/rme_kernel.c ****         {
3418:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3419:../../Source/Kernel/rme_kernel.c **** 
3420:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
 7200              		.loc 1 3420 20
 7201 0460 6430E0E3 		mvn	r3, #100
 7202 0464 1E0000EA 		b	.L460
 7203              	.L456:
3421:../../Source/Kernel/rme_kernel.c ****         }
3422:../../Source/Kernel/rme_kernel.c ****         else
3423:../../Source/Kernel/rme_kernel.c ****         {
3424:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3425:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3426:../../Source/Kernel/rme_kernel.c ****         }
3427:../../Source/Kernel/rme_kernel.c ****     }
3428:../../Source/Kernel/rme_kernel.c ****     else
3429:../../Source/Kernel/rme_kernel.c ****     {
3430:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3431:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3432:../../Source/Kernel/rme_kernel.c ****     }
3433:../../Source/Kernel/rme_kernel.c **** 
3434:../../Source/Kernel/rme_kernel.c ****     /* Get the physical address and RME standard flags of that source page */
3435:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Lookup(Pgt_Src,Pos_Src,&Paddr_Src,&Flag_Src)<0)
 7204              		.loc 1 3435 8
 7205 0468 24304BE2 		sub	r3, fp, #36
 7206 046c 20204BE2 		sub	r2, fp, #32
 7207 0470 08109BE5 		ldr	r1, [fp, #8]
 7208 0474 08001BE5 		ldr	r0, [fp, #-8]
 7209 0478 FEFFFFEB 		bl	__RME_Pgt_Lookup
3436:../../Source/Kernel/rme_kernel.c ****     {
3437:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3438:../../Source/Kernel/rme_kernel.c **** 
3439:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_HW;
3440:../../Source/Kernel/rme_kernel.c ****     }
3441:../../Source/Kernel/rme_kernel.c ****     else
3442:../../Source/Kernel/rme_kernel.c ****     {
3443:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3444:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3445:../../Source/Kernel/rme_kernel.c ****     }
3446:../../Source/Kernel/rme_kernel.c **** 
3447:../../Source/Kernel/rme_kernel.c ****     /* Calculate the destination physical address - avoid UB */
3448:../../Source/Kernel/rme_kernel.c ****     if(Szord_Dst<RME_WORD_BIT)
 7210              		.loc 1 3448 7
 7211 047c 18301BE5 		ldr	r3, [fp, #-24]
 7212 0480 1F0053E3 		cmp	r3, #31
 7213 0484 0600008A 		bhi	.L457
3449:../../Source/Kernel/rme_kernel.c ****     {
3450:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3451:../../Source/Kernel/rme_kernel.c ****         
3452:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src+(Index<<Szord_Dst);
 7214              		.loc 1 3452 35
 7215 0488 0C209BE5 		ldr	r2, [fp, #12]
 7216 048c 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 189


 7217 0490 1223A0E1 		lsl	r2, r2, r3
 7218              		.loc 1 3452 28
 7219 0494 20301BE5 		ldr	r3, [fp, #-32]
 7220              		.loc 1 3452 18
 7221 0498 033082E0 		add	r3, r2, r3
 7222 049c 10300BE5 		str	r3, [fp, #-16]
 7223 04a0 010000EA 		b	.L458
 7224              	.L457:
3453:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3454:../../Source/Kernel/rme_kernel.c ****         /* Check if we force identical mapping */
3455:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=(RME_PGT_BASE(Pgt_Dst->Base)+(Pos_Dst<<Szord_Dst)))
3456:../../Source/Kernel/rme_kernel.c ****         {
3457:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3458:../../Source/Kernel/rme_kernel.c **** 
3459:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3460:../../Source/Kernel/rme_kernel.c ****         }
3461:../../Source/Kernel/rme_kernel.c ****         else
3462:../../Source/Kernel/rme_kernel.c ****         {
3463:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3464:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3465:../../Source/Kernel/rme_kernel.c ****         }
3466:../../Source/Kernel/rme_kernel.c **** #endif
3467:../../Source/Kernel/rme_kernel.c ****     }
3468:../../Source/Kernel/rme_kernel.c ****     /* The destination is also full range */
3469:../../Source/Kernel/rme_kernel.c ****     else
3470:../../Source/Kernel/rme_kernel.c ****     {
3471:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3472:../../Source/Kernel/rme_kernel.c ****         
3473:../../Source/Kernel/rme_kernel.c ****         Paddr_Dst=Paddr_Src;
 7225              		.loc 1 3473 18
 7226 04a4 20301BE5 		ldr	r3, [fp, #-32]
 7227 04a8 10300BE5 		str	r3, [fp, #-16]
 7228              	.L458:
3474:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3475:../../Source/Kernel/rme_kernel.c ****         if(Paddr_Dst!=RME_PGT_BASE(Pgt_Dst->Base))
3476:../../Source/Kernel/rme_kernel.c ****         {
3477:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3478:../../Source/Kernel/rme_kernel.c **** 
3479:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3480:../../Source/Kernel/rme_kernel.c ****         }
3481:../../Source/Kernel/rme_kernel.c ****         else
3482:../../Source/Kernel/rme_kernel.c ****         {
3483:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3484:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3485:../../Source/Kernel/rme_kernel.c ****         }
3486:../../Source/Kernel/rme_kernel.c **** #endif
3487:../../Source/Kernel/rme_kernel.c ****     }
3488:../../Source/Kernel/rme_kernel.c ****     
3489:../../Source/Kernel/rme_kernel.c ****     /* Analyze the flags - we do not allow expansion of access permissions */
3490:../../Source/Kernel/rme_kernel.c ****     if(((Flag_Dst)&(~Flag_Src))!=0U)
 7229              		.loc 1 3490 21
 7230 04ac 24301BE5 		ldr	r3, [fp, #-36]
 7231 04b0 0320E0E1 		mvn	r2, r3
 7232              		.loc 1 3490 19
 7233 04b4 34301BE5 		ldr	r3, [fp, #-52]
 7234 04b8 023003E0 		and	r3, r3, r2
 7235              		.loc 1 3490 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 190


 7236 04bc 000053E3 		cmp	r3, #0
 7237 04c0 0100000A 		beq	.L459
3491:../../Source/Kernel/rme_kernel.c ****     {
3492:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3493:../../Source/Kernel/rme_kernel.c **** 
3494:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_PERM;
 7238              		.loc 1 3494 16
 7239 04c4 6730E0E3 		mvn	r3, #103
 7240 04c8 050000EA 		b	.L460
 7241              	.L459:
3495:../../Source/Kernel/rme_kernel.c ****     }
3496:../../Source/Kernel/rme_kernel.c ****     else
3497:../../Source/Kernel/rme_kernel.c ****     {
3498:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3499:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3500:../../Source/Kernel/rme_kernel.c ****     }
3501:../../Source/Kernel/rme_kernel.c **** 
3502:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3503:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3504:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Map(Pgt_Dst,Paddr_Dst,Pos_Dst,Flag_Dst)<0)
 7242              		.loc 1 3504 8
 7243 04cc 34301BE5 		ldr	r3, [fp, #-52]
 7244 04d0 30201BE5 		ldr	r2, [fp, #-48]
 7245 04d4 10101BE5 		ldr	r1, [fp, #-16]
 7246 04d8 0C001BE5 		ldr	r0, [fp, #-12]
 7247 04dc FEFFFFEB 		bl	__RME_Pgt_Page_Map
3505:../../Source/Kernel/rme_kernel.c ****     {
3506:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3507:../../Source/Kernel/rme_kernel.c **** 
3508:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3509:../../Source/Kernel/rme_kernel.c ****     }
3510:../../Source/Kernel/rme_kernel.c ****     else
3511:../../Source/Kernel/rme_kernel.c ****     {
3512:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3513:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3514:../../Source/Kernel/rme_kernel.c ****     }
3515:../../Source/Kernel/rme_kernel.c **** 
3516:../../Source/Kernel/rme_kernel.c ****     return 0;
 7248              		.loc 1 3516 12
 7249 04e0 0030A0E3 		mov	r3, #0
 7250              	.L460:
3517:../../Source/Kernel/rme_kernel.c **** }
 7251              		.loc 1 3517 1
 7252 04e4 0300A0E1 		mov	r0, r3
 7253 04e8 04D04BE2 		sub	sp, fp, #4
 7254              		.cfi_def_cfa 13, 8
 7255              		@ sp needed
 7256 04ec 0088BDE8 		pop	{fp, pc}
 7257              		.cfi_endproc
 7258              	.LFE34:
 7260              		.section	.text._RME_Pgt_Rem,"ax",%progbits
 7261              		.align	2
 7262              		.syntax unified
 7263              		.arm
 7265              	_RME_Pgt_Rem:
 7266              	.LFB35:
3518:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 191


3519:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Add *************************************************/
3520:../../Source/Kernel/rme_kernel.c **** 
3521:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Rem ******************************************************
3522:../../Source/Kernel/rme_kernel.c **** Description : Remove a page from the page table. We are doing unmapping of a
3523:../../Source/Kernel/rme_kernel.c ****               page.
3524:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3525:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table.
3526:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
3527:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The page table position to unmap from.
3528:../../Source/Kernel/rme_kernel.c **** Output      : None.
3529:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3530:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3531:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3532:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Rem(struct RME_Cap_Cpt* Cpt,
3533:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt,
3534:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos)
3535:../../Source/Kernel/rme_kernel.c **** {
 7267              		.loc 1 3535 1
 7268              		.cfi_startproc
 7269              		@ args = 0, pretend = 0, frame = 24
 7270              		@ frame_needed = 1, uses_anonymous_args = 0
 7271 0000 00482DE9 		push	{fp, lr}
 7272              		.cfi_def_cfa_offset 8
 7273              		.cfi_offset 11, -8
 7274              		.cfi_offset 14, -4
 7275 0004 04B08DE2 		add	fp, sp, #4
 7276              		.cfi_def_cfa 11, 4
 7277 0008 18D04DE2 		sub	sp, sp, #24
 7278 000c 10000BE5 		str	r0, [fp, #-16]
 7279 0010 14100BE5 		str	r1, [fp, #-20]
 7280 0014 18200BE5 		str	r2, [fp, #-24]
3536:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Rem;
3537:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3538:../../Source/Kernel/rme_kernel.c ****     
3539:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3540:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_CPT,
 7281              		.loc 1 3540 5
 7282 0018 14301BE5 		ldr	r3, [fp, #-20]
 7283 001c 803003E2 		and	r3, r3, #128
 7284 0020 000053E3 		cmp	r3, #0
 7285 0024 1C00001A 		bne	.L462
 7286              		.loc 1 3540 5 is_stmt 0 discriminator 1
 7287 0028 10301BE5 		ldr	r3, [fp, #-16]
 7288 002c 142093E5 		ldr	r2, [r3, #20]
 7289 0030 14301BE5 		ldr	r3, [fp, #-20]
 7290 0034 030052E1 		cmp	r2, r3
 7291 0038 0100008A 		bhi	.L463
 7292              		.loc 1 3540 5 discriminator 3
 7293 003c 0230E0E3 		mvn	r3, #2
 7294              		.loc 1 3540 5
 7295 0040 760000EA 		b	.L464
 7296              	.L463:
 7297              		.loc 1 3540 5 discriminator 4
 7298 0044 14301BE5 		ldr	r3, [fp, #-20]
 7299 0048 8322A0E1 		lsl	r2, r3, #5
 7300 004c 10301BE5 		ldr	r3, [fp, #-16]
 7301 0050 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 192


 7302 0054 033082E0 		add	r3, r2, r3
 7303 0058 08300BE5 		str	r3, [fp, #-8]
 7304 005c 08301BE5 		ldr	r3, [fp, #-8]
 7305 0060 0300A0E1 		mov	r0, r3
 7306 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7307 0068 0C000BE5 		str	r0, [fp, #-12]
 7308              		.loc 1 3540 5 discriminator 1
 7309 006c 0C301BE5 		ldr	r3, [fp, #-12]
 7310 0070 FF3803E2 		and	r3, r3, #16711680
 7311 0074 020853E3 		cmp	r3, #131072
 7312 0078 0100001A 		bne	.L465
 7313              		.loc 1 3540 5 discriminator 5
 7314 007c 0830E0E3 		mvn	r3, #8
 7315              		.loc 1 3540 5
 7316 0080 660000EA 		b	.L464
 7317              	.L465:
 7318              		.loc 1 3540 5 discriminator 6
 7319 0084 0C301BE5 		ldr	r3, [fp, #-12]
 7320 0088 233CA0E1 		lsr	r3, r3, #24
 7321 008c 030053E3 		cmp	r3, #3
 7322 0090 3F00000A 		beq	.L466
 7323              		.loc 1 3540 5 discriminator 7
 7324 0094 0130E0E3 		mvn	r3, #1
 7325              		.loc 1 3540 5
 7326 0098 600000EA 		b	.L464
 7327              	.L462:
 7328              		.loc 1 3540 5 discriminator 2
 7329 009c 14301BE5 		ldr	r3, [fp, #-20]
 7330 00a0 2324A0E1 		lsr	r2, r3, #8
 7331 00a4 10301BE5 		ldr	r3, [fp, #-16]
 7332 00a8 143093E5 		ldr	r3, [r3, #20]
 7333 00ac 030052E1 		cmp	r2, r3
 7334 00b0 0100003A 		bcc	.L467
 7335              		.loc 1 3540 5 discriminator 8
 7336 00b4 0230E0E3 		mvn	r3, #2
 7337              		.loc 1 3540 5
 7338 00b8 580000EA 		b	.L464
 7339              	.L467:
 7340              		.loc 1 3540 5 discriminator 9
 7341 00bc 14301BE5 		ldr	r3, [fp, #-20]
 7342 00c0 2334A0E1 		lsr	r3, r3, #8
 7343 00c4 8322A0E1 		lsl	r2, r3, #5
 7344 00c8 10301BE5 		ldr	r3, [fp, #-16]
 7345 00cc 0C3093E5 		ldr	r3, [r3, #12]
 7346 00d0 033082E0 		add	r3, r2, r3
 7347 00d4 08300BE5 		str	r3, [fp, #-8]
 7348 00d8 08301BE5 		ldr	r3, [fp, #-8]
 7349 00dc 0300A0E1 		mov	r0, r3
 7350 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7351 00e4 0C000BE5 		str	r0, [fp, #-12]
 7352              		.loc 1 3540 5 discriminator 1
 7353 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 7354 00ec FF3803E2 		and	r3, r3, #16711680
 7355 00f0 020853E3 		cmp	r3, #131072
 7356 00f4 0100001A 		bne	.L468
 7357              		.loc 1 3540 5 discriminator 10
 7358 00f8 0830E0E3 		mvn	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 193


 7359              		.loc 1 3540 5
 7360 00fc 470000EA 		b	.L464
 7361              	.L468:
 7362              		.loc 1 3540 5 discriminator 11
 7363 0100 0C301BE5 		ldr	r3, [fp, #-12]
 7364 0104 233CA0E1 		lsr	r3, r3, #24
 7365 0108 030053E3 		cmp	r3, #3
 7366 010c 0100000A 		beq	.L469
 7367              		.loc 1 3540 5 discriminator 12
 7368 0110 0130E0E3 		mvn	r3, #1
 7369              		.loc 1 3540 5
 7370 0114 410000EA 		b	.L464
 7371              	.L469:
 7372              		.loc 1 3540 5 discriminator 13
 7373 0118 14301BE5 		ldr	r3, [fp, #-20]
 7374 011c 7F2003E2 		and	r2, r3, #127
 7375 0120 08301BE5 		ldr	r3, [fp, #-8]
 7376 0124 143093E5 		ldr	r3, [r3, #20]
 7377 0128 030052E1 		cmp	r2, r3
 7378 012c 0100003A 		bcc	.L470
 7379              		.loc 1 3540 5 discriminator 14
 7380 0130 0230E0E3 		mvn	r3, #2
 7381              		.loc 1 3540 5
 7382 0134 390000EA 		b	.L464
 7383              	.L470:
 7384              		.loc 1 3540 5 discriminator 15
 7385 0138 14301BE5 		ldr	r3, [fp, #-20]
 7386 013c 7F3003E2 		and	r3, r3, #127
 7387 0140 8322A0E1 		lsl	r2, r3, #5
 7388 0144 08301BE5 		ldr	r3, [fp, #-8]
 7389 0148 0C3093E5 		ldr	r3, [r3, #12]
 7390 014c 033082E0 		add	r3, r2, r3
 7391 0150 08300BE5 		str	r3, [fp, #-8]
 7392 0154 08301BE5 		ldr	r3, [fp, #-8]
 7393 0158 0300A0E1 		mov	r0, r3
 7394 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7395 0160 0C000BE5 		str	r0, [fp, #-12]
 7396              		.loc 1 3540 5 discriminator 1
 7397 0164 0C301BE5 		ldr	r3, [fp, #-12]
 7398 0168 FF3803E2 		and	r3, r3, #16711680
 7399 016c 020853E3 		cmp	r3, #131072
 7400 0170 0100001A 		bne	.L471
 7401              		.loc 1 3540 5 discriminator 16
 7402 0174 0830E0E3 		mvn	r3, #8
 7403              		.loc 1 3540 5
 7404 0178 280000EA 		b	.L464
 7405              	.L471:
 7406              		.loc 1 3540 5 discriminator 17
 7407 017c 0C301BE5 		ldr	r3, [fp, #-12]
 7408 0180 233CA0E1 		lsr	r3, r3, #24
 7409 0184 030053E3 		cmp	r3, #3
 7410 0188 0100000A 		beq	.L466
 7411              		.loc 1 3540 5 discriminator 18
 7412 018c 0130E0E3 		mvn	r3, #1
 7413              		.loc 1 3540 5
 7414 0190 220000EA 		b	.L464
 7415              	.L466:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 194


3541:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Rem,Type_Stat);
3542:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3543:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Rem,RME_PGT_FLAG_REM);
 7416              		.loc 1 3543 5 is_stmt 1
 7417 0194 08301BE5 		ldr	r3, [fp, #-8]
 7418 0198 083093E5 		ldr	r3, [r3, #8]
 7419 019c 043003E2 		and	r3, r3, #4
 7420 01a0 000053E3 		cmp	r3, #0
 7421 01a4 0100001A 		bne	.L472
 7422              		.loc 1 3543 5 is_stmt 0 discriminator 1
 7423 01a8 0630E0E3 		mvn	r3, #6
 7424              		.loc 1 3543 5
 7425 01ac 1B0000EA 		b	.L464
 7426              	.L472:
3544:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3545:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Rem->Head.Flag))||
 7427              		.loc 1 3545 13 is_stmt 1
 7428 01b0 08301BE5 		ldr	r3, [fp, #-8]
 7429 01b4 083093E5 		ldr	r3, [r3, #8]
 7430 01b8 233AA0E1 		lsr	r3, r3, #20
 7431              		.loc 1 3545 7
 7432 01bc 18201BE5 		ldr	r2, [fp, #-24]
 7433 01c0 030052E1 		cmp	r2, r3
 7434 01c4 0600008A 		bhi	.L473
3546:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7435              		.loc 1 3546 13
 7436 01c8 08301BE5 		ldr	r3, [fp, #-8]
 7437 01cc 083093E5 		ldr	r3, [r3, #8]
 7438 01d0 2334A0E1 		lsr	r3, r3, #8
 7439 01d4 5330EBE7 		ubfx	r3, r3, #0, #12
3545:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Rem->Head.Flag)))
 7440              		.loc 1 3545 51 discriminator 1
 7441 01d8 18201BE5 		ldr	r2, [fp, #-24]
 7442 01dc 030052E1 		cmp	r2, r3
 7443 01e0 0100002A 		bcs	.L474
 7444              	.L473:
3547:../../Source/Kernel/rme_kernel.c ****     {
3548:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3549:../../Source/Kernel/rme_kernel.c **** 
3550:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7445              		.loc 1 3550 16
 7446 01e4 0630E0E3 		mvn	r3, #6
 7447 01e8 0C0000EA 		b	.L464
 7448              	.L474:
3551:../../Source/Kernel/rme_kernel.c ****     }
3552:../../Source/Kernel/rme_kernel.c ****     else
3553:../../Source/Kernel/rme_kernel.c ****     {
3554:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3555:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3556:../../Source/Kernel/rme_kernel.c ****     }
3557:../../Source/Kernel/rme_kernel.c **** 
3558:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3559:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Rem->Order))!=0U)
 7449              		.loc 1 3559 14
 7450 01ec 08301BE5 		ldr	r3, [fp, #-8]
 7451 01f0 143093E5 		ldr	r3, [r3, #20]
 7452 01f4 7330FFE6 		uxth	r3, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 195


 7453              		.loc 1 3559 12
 7454 01f8 18201BE5 		ldr	r2, [fp, #-24]
 7455 01fc 3233A0E1 		lsr	r3, r2, r3
 7456              		.loc 1 3559 7
 7457 0200 000053E3 		cmp	r3, #0
 7458 0204 0100000A 		beq	.L475
3560:../../Source/Kernel/rme_kernel.c ****     {
3561:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3562:../../Source/Kernel/rme_kernel.c **** 
3563:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7459              		.loc 1 3563 16
 7460 0208 6430E0E3 		mvn	r3, #100
 7461 020c 030000EA 		b	.L464
 7462              	.L475:
3564:../../Source/Kernel/rme_kernel.c ****     }
3565:../../Source/Kernel/rme_kernel.c ****     else
3566:../../Source/Kernel/rme_kernel.c ****     {
3567:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3568:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3569:../../Source/Kernel/rme_kernel.c ****     }
3570:../../Source/Kernel/rme_kernel.c **** 
3571:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3572:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3573:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Page_Unmap(Pgt_Rem,Pos)<0)
 7463              		.loc 1 3573 8
 7464 0210 18101BE5 		ldr	r1, [fp, #-24]
 7465 0214 08001BE5 		ldr	r0, [fp, #-8]
 7466 0218 FEFFFFEB 		bl	__RME_Pgt_Page_Unmap
3574:../../Source/Kernel/rme_kernel.c ****     {
3575:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3576:../../Source/Kernel/rme_kernel.c **** 
3577:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3578:../../Source/Kernel/rme_kernel.c ****     }
3579:../../Source/Kernel/rme_kernel.c ****     else
3580:../../Source/Kernel/rme_kernel.c ****     {
3581:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3582:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3583:../../Source/Kernel/rme_kernel.c ****     }
3584:../../Source/Kernel/rme_kernel.c **** 
3585:../../Source/Kernel/rme_kernel.c ****     return 0;
 7467              		.loc 1 3585 12
 7468 021c 0030A0E3 		mov	r3, #0
 7469              	.L464:
3586:../../Source/Kernel/rme_kernel.c **** }
 7470              		.loc 1 3586 1
 7471 0220 0300A0E1 		mov	r0, r3
 7472 0224 04D04BE2 		sub	sp, fp, #4
 7473              		.cfi_def_cfa 13, 8
 7474              		@ sp needed
 7475 0228 0088BDE8 		pop	{fp, pc}
 7476              		.cfi_endproc
 7477              	.LFE35:
 7479              		.section	.text._RME_Pgt_Con,"ax",%progbits
 7480              		.align	2
 7481              		.syntax unified
 7482              		.arm
 7484              	_RME_Pgt_Con:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 196


 7485              	.LFB36:
3587:../../Source/Kernel/rme_kernel.c **** #endif
3588:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Rem *************************************************/
3589:../../Source/Kernel/rme_kernel.c **** 
3590:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Con ******************************************************
3591:../../Source/Kernel/rme_kernel.c **** Description : Map a child page table into the parent page table, to construct
3592:../../Source/Kernel/rme_kernel.c ****               an address space tree.
3593:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3594:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page 
3595:../../Source/Kernel/rme_kernel.c ****                                          table.
3596:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3597:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to map the child
3598:../../Source/Kernel/rme_kernel.c ****                               page table to.
3599:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3600:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3601:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag_Child - Mapping flags.
3602:../../Source/Kernel/rme_kernel.c **** Output      : None.
3603:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3604:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3605:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3606:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Con(struct RME_Cap_Cpt* Cpt,
3607:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3608:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3609:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child,
3610:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Flag_Child)
3611:../../Source/Kernel/rme_kernel.c **** {
 7486              		.loc 1 3611 1
 7487              		.cfi_startproc
 7488              		@ args = 4, pretend = 0, frame = 40
 7489              		@ frame_needed = 1, uses_anonymous_args = 0
 7490 0000 00482DE9 		push	{fp, lr}
 7491              		.cfi_def_cfa_offset 8
 7492              		.cfi_offset 11, -8
 7493              		.cfi_offset 14, -4
 7494 0004 04B08DE2 		add	fp, sp, #4
 7495              		.cfi_def_cfa 11, 4
 7496 0008 28D04DE2 		sub	sp, sp, #40
 7497 000c 20000BE5 		str	r0, [fp, #-32]
 7498 0010 24100BE5 		str	r1, [fp, #-36]
 7499 0014 28200BE5 		str	r2, [fp, #-40]
 7500 0018 2C300BE5 		str	r3, [fp, #-44]
3612:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3613:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3614:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Pgt* Pgt_Root;
3615:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Order_Child;
3616:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Szord_Parent;
3617:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3618:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Begin_Parent;
3619:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End_Parent;
3620:../../Source/Kernel/rme_kernel.c **** #endif
3621:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3622:../../Source/Kernel/rme_kernel.c ****     
3623:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
3624:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_PGT,
 7501              		.loc 1 3624 5
 7502 001c 24301BE5 		ldr	r3, [fp, #-36]
 7503 0020 803003E2 		and	r3, r3, #128
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 197


 7504 0024 000053E3 		cmp	r3, #0
 7505 0028 1C00001A 		bne	.L477
 7506              		.loc 1 3624 5 is_stmt 0 discriminator 1
 7507 002c 20301BE5 		ldr	r3, [fp, #-32]
 7508 0030 142093E5 		ldr	r2, [r3, #20]
 7509 0034 24301BE5 		ldr	r3, [fp, #-36]
 7510 0038 030052E1 		cmp	r2, r3
 7511 003c 0100008A 		bhi	.L478
 7512              		.loc 1 3624 5 discriminator 3
 7513 0040 0230E0E3 		mvn	r3, #2
 7514              		.loc 1 3624 5
 7515 0044 140100EA 		b	.L479
 7516              	.L478:
 7517              		.loc 1 3624 5 discriminator 4
 7518 0048 24301BE5 		ldr	r3, [fp, #-36]
 7519 004c 8322A0E1 		lsl	r2, r3, #5
 7520 0050 20301BE5 		ldr	r3, [fp, #-32]
 7521 0054 0C3093E5 		ldr	r3, [r3, #12]
 7522 0058 033082E0 		add	r3, r2, r3
 7523 005c 08300BE5 		str	r3, [fp, #-8]
 7524 0060 08301BE5 		ldr	r3, [fp, #-8]
 7525 0064 0300A0E1 		mov	r0, r3
 7526 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7527 006c 10000BE5 		str	r0, [fp, #-16]
 7528              		.loc 1 3624 5 discriminator 1
 7529 0070 10301BE5 		ldr	r3, [fp, #-16]
 7530 0074 FF3803E2 		and	r3, r3, #16711680
 7531 0078 020853E3 		cmp	r3, #131072
 7532 007c 0100001A 		bne	.L480
 7533              		.loc 1 3624 5 discriminator 5
 7534 0080 0830E0E3 		mvn	r3, #8
 7535              		.loc 1 3624 5
 7536 0084 040100EA 		b	.L479
 7537              	.L480:
 7538              		.loc 1 3624 5 discriminator 6
 7539 0088 10301BE5 		ldr	r3, [fp, #-16]
 7540 008c 233CA0E1 		lsr	r3, r3, #24
 7541 0090 040053E3 		cmp	r3, #4
 7542 0094 3F00000A 		beq	.L481
 7543              		.loc 1 3624 5 discriminator 7
 7544 0098 0130E0E3 		mvn	r3, #1
 7545              		.loc 1 3624 5
 7546 009c FE0000EA 		b	.L479
 7547              	.L477:
 7548              		.loc 1 3624 5 discriminator 2
 7549 00a0 24301BE5 		ldr	r3, [fp, #-36]
 7550 00a4 2324A0E1 		lsr	r2, r3, #8
 7551 00a8 20301BE5 		ldr	r3, [fp, #-32]
 7552 00ac 143093E5 		ldr	r3, [r3, #20]
 7553 00b0 030052E1 		cmp	r2, r3
 7554 00b4 0100003A 		bcc	.L482
 7555              		.loc 1 3624 5 discriminator 8
 7556 00b8 0230E0E3 		mvn	r3, #2
 7557              		.loc 1 3624 5
 7558 00bc F60000EA 		b	.L479
 7559              	.L482:
 7560              		.loc 1 3624 5 discriminator 9
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 198


 7561 00c0 24301BE5 		ldr	r3, [fp, #-36]
 7562 00c4 2334A0E1 		lsr	r3, r3, #8
 7563 00c8 8322A0E1 		lsl	r2, r3, #5
 7564 00cc 20301BE5 		ldr	r3, [fp, #-32]
 7565 00d0 0C3093E5 		ldr	r3, [r3, #12]
 7566 00d4 033082E0 		add	r3, r2, r3
 7567 00d8 08300BE5 		str	r3, [fp, #-8]
 7568 00dc 08301BE5 		ldr	r3, [fp, #-8]
 7569 00e0 0300A0E1 		mov	r0, r3
 7570 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7571 00e8 10000BE5 		str	r0, [fp, #-16]
 7572              		.loc 1 3624 5 discriminator 1
 7573 00ec 10301BE5 		ldr	r3, [fp, #-16]
 7574 00f0 FF3803E2 		and	r3, r3, #16711680
 7575 00f4 020853E3 		cmp	r3, #131072
 7576 00f8 0100001A 		bne	.L483
 7577              		.loc 1 3624 5 discriminator 10
 7578 00fc 0830E0E3 		mvn	r3, #8
 7579              		.loc 1 3624 5
 7580 0100 E50000EA 		b	.L479
 7581              	.L483:
 7582              		.loc 1 3624 5 discriminator 11
 7583 0104 10301BE5 		ldr	r3, [fp, #-16]
 7584 0108 233CA0E1 		lsr	r3, r3, #24
 7585 010c 030053E3 		cmp	r3, #3
 7586 0110 0100000A 		beq	.L484
 7587              		.loc 1 3624 5 discriminator 12
 7588 0114 0130E0E3 		mvn	r3, #1
 7589              		.loc 1 3624 5
 7590 0118 DF0000EA 		b	.L479
 7591              	.L484:
 7592              		.loc 1 3624 5 discriminator 13
 7593 011c 24301BE5 		ldr	r3, [fp, #-36]
 7594 0120 7F2003E2 		and	r2, r3, #127
 7595 0124 08301BE5 		ldr	r3, [fp, #-8]
 7596 0128 143093E5 		ldr	r3, [r3, #20]
 7597 012c 030052E1 		cmp	r2, r3
 7598 0130 0100003A 		bcc	.L485
 7599              		.loc 1 3624 5 discriminator 14
 7600 0134 0230E0E3 		mvn	r3, #2
 7601              		.loc 1 3624 5
 7602 0138 D70000EA 		b	.L479
 7603              	.L485:
 7604              		.loc 1 3624 5 discriminator 15
 7605 013c 24301BE5 		ldr	r3, [fp, #-36]
 7606 0140 7F3003E2 		and	r3, r3, #127
 7607 0144 8322A0E1 		lsl	r2, r3, #5
 7608 0148 08301BE5 		ldr	r3, [fp, #-8]
 7609 014c 0C3093E5 		ldr	r3, [r3, #12]
 7610 0150 033082E0 		add	r3, r2, r3
 7611 0154 08300BE5 		str	r3, [fp, #-8]
 7612 0158 08301BE5 		ldr	r3, [fp, #-8]
 7613 015c 0300A0E1 		mov	r0, r3
 7614 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7615 0164 10000BE5 		str	r0, [fp, #-16]
 7616              		.loc 1 3624 5 discriminator 1
 7617 0168 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 199


 7618 016c FF3803E2 		and	r3, r3, #16711680
 7619 0170 020853E3 		cmp	r3, #131072
 7620 0174 0100001A 		bne	.L486
 7621              		.loc 1 3624 5 discriminator 16
 7622 0178 0830E0E3 		mvn	r3, #8
 7623              		.loc 1 3624 5
 7624 017c C60000EA 		b	.L479
 7625              	.L486:
 7626              		.loc 1 3624 5 discriminator 17
 7627 0180 10301BE5 		ldr	r3, [fp, #-16]
 7628 0184 233CA0E1 		lsr	r3, r3, #24
 7629 0188 040053E3 		cmp	r3, #4
 7630 018c 0100000A 		beq	.L481
 7631              		.loc 1 3624 5 discriminator 18
 7632 0190 0130E0E3 		mvn	r3, #1
 7633              		.loc 1 3624 5
 7634 0194 C00000EA 		b	.L479
 7635              	.L481:
3625:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3626:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_PGT,
 7636              		.loc 1 3626 5 is_stmt 1
 7637 0198 2C301BE5 		ldr	r3, [fp, #-44]
 7638 019c 803003E2 		and	r3, r3, #128
 7639 01a0 000053E3 		cmp	r3, #0
 7640 01a4 1C00001A 		bne	.L487
 7641              		.loc 1 3626 5 is_stmt 0 discriminator 1
 7642 01a8 20301BE5 		ldr	r3, [fp, #-32]
 7643 01ac 142093E5 		ldr	r2, [r3, #20]
 7644 01b0 2C301BE5 		ldr	r3, [fp, #-44]
 7645 01b4 030052E1 		cmp	r2, r3
 7646 01b8 0100008A 		bhi	.L488
 7647              		.loc 1 3626 5 discriminator 3
 7648 01bc 0230E0E3 		mvn	r3, #2
 7649              		.loc 1 3626 5
 7650 01c0 B50000EA 		b	.L479
 7651              	.L488:
 7652              		.loc 1 3626 5 discriminator 4
 7653 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 7654 01c8 8322A0E1 		lsl	r2, r3, #5
 7655 01cc 20301BE5 		ldr	r3, [fp, #-32]
 7656 01d0 0C3093E5 		ldr	r3, [r3, #12]
 7657 01d4 033082E0 		add	r3, r2, r3
 7658 01d8 0C300BE5 		str	r3, [fp, #-12]
 7659 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 7660 01e0 0300A0E1 		mov	r0, r3
 7661 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7662 01e8 10000BE5 		str	r0, [fp, #-16]
 7663              		.loc 1 3626 5 discriminator 1
 7664 01ec 10301BE5 		ldr	r3, [fp, #-16]
 7665 01f0 FF3803E2 		and	r3, r3, #16711680
 7666 01f4 020853E3 		cmp	r3, #131072
 7667 01f8 0100001A 		bne	.L489
 7668              		.loc 1 3626 5 discriminator 5
 7669 01fc 0830E0E3 		mvn	r3, #8
 7670              		.loc 1 3626 5
 7671 0200 A50000EA 		b	.L479
 7672              	.L489:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 200


 7673              		.loc 1 3626 5 discriminator 6
 7674 0204 10301BE5 		ldr	r3, [fp, #-16]
 7675 0208 233CA0E1 		lsr	r3, r3, #24
 7676 020c 040053E3 		cmp	r3, #4
 7677 0210 3F00000A 		beq	.L490
 7678              		.loc 1 3626 5 discriminator 7
 7679 0214 0130E0E3 		mvn	r3, #1
 7680              		.loc 1 3626 5
 7681 0218 9F0000EA 		b	.L479
 7682              	.L487:
 7683              		.loc 1 3626 5 discriminator 2
 7684 021c 2C301BE5 		ldr	r3, [fp, #-44]
 7685 0220 2324A0E1 		lsr	r2, r3, #8
 7686 0224 20301BE5 		ldr	r3, [fp, #-32]
 7687 0228 143093E5 		ldr	r3, [r3, #20]
 7688 022c 030052E1 		cmp	r2, r3
 7689 0230 0100003A 		bcc	.L491
 7690              		.loc 1 3626 5 discriminator 8
 7691 0234 0230E0E3 		mvn	r3, #2
 7692              		.loc 1 3626 5
 7693 0238 970000EA 		b	.L479
 7694              	.L491:
 7695              		.loc 1 3626 5 discriminator 9
 7696 023c 2C301BE5 		ldr	r3, [fp, #-44]
 7697 0240 2334A0E1 		lsr	r3, r3, #8
 7698 0244 8322A0E1 		lsl	r2, r3, #5
 7699 0248 20301BE5 		ldr	r3, [fp, #-32]
 7700 024c 0C3093E5 		ldr	r3, [r3, #12]
 7701 0250 033082E0 		add	r3, r2, r3
 7702 0254 0C300BE5 		str	r3, [fp, #-12]
 7703 0258 0C301BE5 		ldr	r3, [fp, #-12]
 7704 025c 0300A0E1 		mov	r0, r3
 7705 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7706 0264 10000BE5 		str	r0, [fp, #-16]
 7707              		.loc 1 3626 5 discriminator 1
 7708 0268 10301BE5 		ldr	r3, [fp, #-16]
 7709 026c FF3803E2 		and	r3, r3, #16711680
 7710 0270 020853E3 		cmp	r3, #131072
 7711 0274 0100001A 		bne	.L492
 7712              		.loc 1 3626 5 discriminator 10
 7713 0278 0830E0E3 		mvn	r3, #8
 7714              		.loc 1 3626 5
 7715 027c 860000EA 		b	.L479
 7716              	.L492:
 7717              		.loc 1 3626 5 discriminator 11
 7718 0280 10301BE5 		ldr	r3, [fp, #-16]
 7719 0284 233CA0E1 		lsr	r3, r3, #24
 7720 0288 030053E3 		cmp	r3, #3
 7721 028c 0100000A 		beq	.L493
 7722              		.loc 1 3626 5 discriminator 12
 7723 0290 0130E0E3 		mvn	r3, #1
 7724              		.loc 1 3626 5
 7725 0294 800000EA 		b	.L479
 7726              	.L493:
 7727              		.loc 1 3626 5 discriminator 13
 7728 0298 2C301BE5 		ldr	r3, [fp, #-44]
 7729 029c 7F2003E2 		and	r2, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 201


 7730 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 7731 02a4 143093E5 		ldr	r3, [r3, #20]
 7732 02a8 030052E1 		cmp	r2, r3
 7733 02ac 0100003A 		bcc	.L494
 7734              		.loc 1 3626 5 discriminator 14
 7735 02b0 0230E0E3 		mvn	r3, #2
 7736              		.loc 1 3626 5
 7737 02b4 780000EA 		b	.L479
 7738              	.L494:
 7739              		.loc 1 3626 5 discriminator 15
 7740 02b8 2C301BE5 		ldr	r3, [fp, #-44]
 7741 02bc 7F3003E2 		and	r3, r3, #127
 7742 02c0 8322A0E1 		lsl	r2, r3, #5
 7743 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 7744 02c8 0C3093E5 		ldr	r3, [r3, #12]
 7745 02cc 033082E0 		add	r3, r2, r3
 7746 02d0 0C300BE5 		str	r3, [fp, #-12]
 7747 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 7748 02d8 0300A0E1 		mov	r0, r3
 7749 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7750 02e0 10000BE5 		str	r0, [fp, #-16]
 7751              		.loc 1 3626 5 discriminator 1
 7752 02e4 10301BE5 		ldr	r3, [fp, #-16]
 7753 02e8 FF3803E2 		and	r3, r3, #16711680
 7754 02ec 020853E3 		cmp	r3, #131072
 7755 02f0 0100001A 		bne	.L495
 7756              		.loc 1 3626 5 discriminator 16
 7757 02f4 0830E0E3 		mvn	r3, #8
 7758              		.loc 1 3626 5
 7759 02f8 670000EA 		b	.L479
 7760              	.L495:
 7761              		.loc 1 3626 5 discriminator 17
 7762 02fc 10301BE5 		ldr	r3, [fp, #-16]
 7763 0300 233CA0E1 		lsr	r3, r3, #24
 7764 0304 040053E3 		cmp	r3, #4
 7765 0308 0100000A 		beq	.L490
 7766              		.loc 1 3626 5 discriminator 18
 7767 030c 0130E0E3 		mvn	r3, #1
 7768              		.loc 1 3626 5
 7769 0310 610000EA 		b	.L479
 7770              	.L490:
3627:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3628:../../Source/Kernel/rme_kernel.c ****     /* Check if both page table caps are not frozen and allows such operations */
3629:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_CON_PARENT);
 7771              		.loc 1 3629 5 is_stmt 1
 7772 0314 08301BE5 		ldr	r3, [fp, #-8]
 7773 0318 083093E5 		ldr	r3, [r3, #8]
 7774 031c 103003E2 		and	r3, r3, #16
 7775 0320 000053E3 		cmp	r3, #0
 7776 0324 0100001A 		bne	.L496
 7777              		.loc 1 3629 5 is_stmt 0 discriminator 1
 7778 0328 0630E0E3 		mvn	r3, #6
 7779              		.loc 1 3629 5
 7780 032c 5A0000EA 		b	.L479
 7781              	.L496:
3630:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 7782              		.loc 1 3630 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 202


 7783 0330 0C301BE5 		ldr	r3, [fp, #-12]
 7784 0334 083093E5 		ldr	r3, [r3, #8]
 7785 0338 083003E2 		and	r3, r3, #8
 7786 033c 000053E3 		cmp	r3, #0
 7787 0340 0100001A 		bne	.L497
 7788              		.loc 1 3630 5 is_stmt 0 discriminator 1
 7789 0344 0630E0E3 		mvn	r3, #6
 7790              		.loc 1 3630 5
 7791 0348 530000EA 		b	.L479
 7792              	.L497:
3631:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3632:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 7793              		.loc 1 3632 13 is_stmt 1
 7794 034c 08301BE5 		ldr	r3, [fp, #-8]
 7795 0350 083093E5 		ldr	r3, [r3, #8]
 7796 0354 233AA0E1 		lsr	r3, r3, #20
 7797              		.loc 1 3632 7
 7798 0358 28201BE5 		ldr	r2, [fp, #-40]
 7799 035c 030052E1 		cmp	r2, r3
 7800 0360 0600008A 		bhi	.L498
3633:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7801              		.loc 1 3633 13
 7802 0364 08301BE5 		ldr	r3, [fp, #-8]
 7803 0368 083093E5 		ldr	r3, [r3, #8]
 7804 036c 2334A0E1 		lsr	r3, r3, #8
 7805 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3632:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 7806              		.loc 1 3632 54 discriminator 1
 7807 0374 28201BE5 		ldr	r2, [fp, #-40]
 7808 0378 030052E1 		cmp	r2, r3
 7809 037c 0100002A 		bcs	.L499
 7810              	.L498:
3634:../../Source/Kernel/rme_kernel.c ****     {
3635:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3636:../../Source/Kernel/rme_kernel.c **** 
3637:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 7811              		.loc 1 3637 16
 7812 0380 0630E0E3 		mvn	r3, #6
 7813 0384 440000EA 		b	.L479
 7814              	.L499:
3638:../../Source/Kernel/rme_kernel.c ****     }
3639:../../Source/Kernel/rme_kernel.c ****     else
3640:../../Source/Kernel/rme_kernel.c ****     {
3641:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3642:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3643:../../Source/Kernel/rme_kernel.c ****     }
3644:../../Source/Kernel/rme_kernel.c ****     
3645:../../Source/Kernel/rme_kernel.c ****     /* See if the mapping range is allowed */
3646:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 7815              		.loc 1 3646 14
 7816 0388 08301BE5 		ldr	r3, [fp, #-8]
 7817 038c 143093E5 		ldr	r3, [r3, #20]
 7818 0390 7330FFE6 		uxth	r3, r3
 7819              		.loc 1 3646 12
 7820 0394 28201BE5 		ldr	r2, [fp, #-40]
 7821 0398 3233A0E1 		lsr	r3, r2, r3
 7822              		.loc 1 3646 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 203


 7823 039c 000053E3 		cmp	r3, #0
 7824 03a0 0100000A 		beq	.L500
3647:../../Source/Kernel/rme_kernel.c ****     {
3648:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3649:../../Source/Kernel/rme_kernel.c **** 
3650:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7825              		.loc 1 3650 16
 7826 03a4 6430E0E3 		mvn	r3, #100
 7827 03a8 3B0000EA 		b	.L479
 7828              	.L500:
3651:../../Source/Kernel/rme_kernel.c ****     }
3652:../../Source/Kernel/rme_kernel.c ****     else
3653:../../Source/Kernel/rme_kernel.c ****     {
3654:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3655:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3656:../../Source/Kernel/rme_kernel.c ****     }
3657:../../Source/Kernel/rme_kernel.c ****     
3658:../../Source/Kernel/rme_kernel.c ****     /* See if the child table falls within one slot of the parent table */
3659:../../Source/Kernel/rme_kernel.c ****     Order_Child=RME_PGT_NMORD(Pgt_Child->Order)+RME_PGT_SZORD(Pgt_Child->Order);
 7829              		.loc 1 3659 17
 7830 03ac 0C301BE5 		ldr	r3, [fp, #-12]
 7831 03b0 143093E5 		ldr	r3, [r3, #20]
 7832 03b4 7320FFE6 		uxth	r2, r3
 7833              		.loc 1 3659 49
 7834 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 7835 03bc 143093E5 		ldr	r3, [r3, #20]
 7836 03c0 2338A0E1 		lsr	r3, r3, #16
 7837              		.loc 1 3659 16
 7838 03c4 033082E0 		add	r3, r2, r3
 7839 03c8 14300BE5 		str	r3, [fp, #-20]
3660:../../Source/Kernel/rme_kernel.c ****     Szord_Parent=RME_PGT_SZORD(Pgt_Parent->Order);
 7840              		.loc 1 3660 18
 7841 03cc 08301BE5 		ldr	r3, [fp, #-8]
 7842 03d0 143093E5 		ldr	r3, [r3, #20]
 7843              		.loc 1 3660 17
 7844 03d4 2338A0E1 		lsr	r3, r3, #16
 7845 03d8 18300BE5 		str	r3, [fp, #-24]
3661:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<Order_Child)
 7846              		.loc 1 3661 7
 7847 03dc 18201BE5 		ldr	r2, [fp, #-24]
 7848 03e0 14301BE5 		ldr	r3, [fp, #-20]
 7849 03e4 030052E1 		cmp	r2, r3
 7850 03e8 0100002A 		bcs	.L501
3662:../../Source/Kernel/rme_kernel.c ****     {
3663:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3664:../../Source/Kernel/rme_kernel.c ****         
3665:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7851              		.loc 1 3665 16
 7852 03ec 6430E0E3 		mvn	r3, #100
 7853 03f0 290000EA 		b	.L479
 7854              	.L501:
3666:../../Source/Kernel/rme_kernel.c ****     }
3667:../../Source/Kernel/rme_kernel.c ****     else
3668:../../Source/Kernel/rme_kernel.c ****     {
3669:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3670:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3671:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 204


3672:../../Source/Kernel/rme_kernel.c **** 
3673:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_PHYS_ENABLE!=0U)
3674:../../Source/Kernel/rme_kernel.c ****     /* Check if the child falls into the correct slot */
3675:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent<RME_WORD_BIT)
3676:../../Source/Kernel/rme_kernel.c ****     {
3677:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3678:../../Source/Kernel/rme_kernel.c ****         
3679:../../Source/Kernel/rme_kernel.c ****         /* Check if the virtual address mapping is correct - note that the child
3680:../../Source/Kernel/rme_kernel.c ****          * could also be a top-level page table. Whether constructing a top into 
3681:../../Source/Kernel/rme_kernel.c ****          * another top is allowed is HAL-defined. */
3682:../../Source/Kernel/rme_kernel.c ****         Begin_Parent=RME_PGT_BASE(Pgt_Parent->Base)+(Pos<<Szord_Parent);
3683:../../Source/Kernel/rme_kernel.c ****         if(RME_PGT_BASE(Pgt_Child->Base)<Begin_Parent)
3684:../../Source/Kernel/rme_kernel.c ****         {
3685:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3686:../../Source/Kernel/rme_kernel.c ****             
3687:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PGT_ADDR;
3688:../../Source/Kernel/rme_kernel.c ****         }
3689:../../Source/Kernel/rme_kernel.c ****         else
3690:../../Source/Kernel/rme_kernel.c ****         {
3691:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3692:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3693:../../Source/Kernel/rme_kernel.c ****         }
3694:../../Source/Kernel/rme_kernel.c ****         
3695:../../Source/Kernel/rme_kernel.c ****         End_Parent=Begin_Parent+RME_POW2(Szord_Parent);
3696:../../Source/Kernel/rme_kernel.c ****         
3697:../../Source/Kernel/rme_kernel.c ****         /* If this is zero, then the parent table's slot expands to the end of 
3698:../../Source/Kernel/rme_kernel.c ****          * memory, and we are sure that overflow won't happen because start
3699:../../Source/Kernel/rme_kernel.c ****          * address is always aligned to the total order of the child table. 
3700:../../Source/Kernel/rme_kernel.c ****          * No UB for Order_Child here because Szord_Parent>=Order_Child */
3701:../../Source/Kernel/rme_kernel.c ****         if(End_Parent!=0U)
3702:../../Source/Kernel/rme_kernel.c ****         {
3703:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3704:../../Source/Kernel/rme_kernel.c ****             
3705:../../Source/Kernel/rme_kernel.c ****             if((RME_PGT_BASE(Pgt_Child->Base)+RME_POW2(Order_Child))>End_Parent)
3706:../../Source/Kernel/rme_kernel.c ****             {
3707:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3708:../../Source/Kernel/rme_kernel.c **** 
3709:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PGT_ADDR;
3710:../../Source/Kernel/rme_kernel.c ****             }
3711:../../Source/Kernel/rme_kernel.c ****             else
3712:../../Source/Kernel/rme_kernel.c ****             {
3713:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
3714:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
3715:../../Source/Kernel/rme_kernel.c ****             }
3716:../../Source/Kernel/rme_kernel.c ****         }
3717:../../Source/Kernel/rme_kernel.c ****         else
3718:../../Source/Kernel/rme_kernel.c ****         {
3719:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3720:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3721:../../Source/Kernel/rme_kernel.c ****         }
3722:../../Source/Kernel/rme_kernel.c ****     }
3723:../../Source/Kernel/rme_kernel.c ****     /* Parent is full range, check exempt */
3724:../../Source/Kernel/rme_kernel.c ****     else
3725:../../Source/Kernel/rme_kernel.c ****     {
3726:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3727:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3728:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 205


3729:../../Source/Kernel/rme_kernel.c **** #else
3730:../../Source/Kernel/rme_kernel.c ****     /* Force no path compression when virtual mappings are enabled */
3731:../../Source/Kernel/rme_kernel.c ****     if(Szord_Parent!=Order_Child)
 7855              		.loc 1 3731 7
 7856 03f4 18201BE5 		ldr	r2, [fp, #-24]
 7857 03f8 14301BE5 		ldr	r3, [fp, #-20]
 7858 03fc 030052E1 		cmp	r2, r3
 7859 0400 0100000A 		beq	.L502
3732:../../Source/Kernel/rme_kernel.c ****     {
3733:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3734:../../Source/Kernel/rme_kernel.c **** 
3735:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 7860              		.loc 1 3735 16
 7861 0404 6430E0E3 		mvn	r3, #100
 7862 0408 230000EA 		b	.L479
 7863              	.L502:
3736:../../Source/Kernel/rme_kernel.c ****     }
3737:../../Source/Kernel/rme_kernel.c ****     else
3738:../../Source/Kernel/rme_kernel.c ****     {
3739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3740:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3741:../../Source/Kernel/rme_kernel.c ****     }
3742:../../Source/Kernel/rme_kernel.c **** #endif
3743:../../Source/Kernel/rme_kernel.c **** 
3744:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3745:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict */
3746:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Map(Pgt_Parent,Pos,Pgt_Child,Flag_Child)<0)
 7864              		.loc 1 3746 8
 7865 040c 04309BE5 		ldr	r3, [fp, #4]
 7866 0410 0C201BE5 		ldr	r2, [fp, #-12]
 7867 0414 28101BE5 		ldr	r1, [fp, #-40]
 7868 0418 08001BE5 		ldr	r0, [fp, #-8]
 7869 041c FEFFFFEB 		bl	__RME_Pgt_Pgdir_Map
3747:../../Source/Kernel/rme_kernel.c ****     {
3748:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3749:../../Source/Kernel/rme_kernel.c **** 
3750:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
3751:../../Source/Kernel/rme_kernel.c ****     }
3752:../../Source/Kernel/rme_kernel.c ****     else
3753:../../Source/Kernel/rme_kernel.c ****     {
3754:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3755:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3756:../../Source/Kernel/rme_kernel.c ****     }
3757:../../Source/Kernel/rme_kernel.c ****     
3758:../../Source/Kernel/rme_kernel.c ****     /* Increase refcnt for both parent/child */
3759:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 7870              		.loc 1 3759 14
 7871 0420 08301BE5 		ldr	r3, [fp, #-8]
 7872 0424 003093E5 		ldr	r3, [r3]
 7873 0428 7330FFE6 		uxth	r3, r3
 7874 042c 000053E3 		cmp	r3, #0
 7875 0430 0200000A 		beq	.L503
 7876              		.loc 1 3759 14 is_stmt 0 discriminator 1
 7877 0434 08301BE5 		ldr	r3, [fp, #-8]
 7878 0438 043093E5 		ldr	r3, [r3, #4]
 7879 043c 000000EA 		b	.L504
 7880              	.L503:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 206


 7881              		.loc 1 3759 14 discriminator 2
 7882 0440 08301BE5 		ldr	r3, [fp, #-8]
 7883              	.L504:
 7884              		.loc 1 3759 13 is_stmt 1 discriminator 4
 7885 0444 1C300BE5 		str	r3, [fp, #-28]
3760:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7886              		.loc 1 3760 5
 7887 0448 1C301BE5 		ldr	r3, [fp, #-28]
 7888 044c 043083E2 		add	r3, r3, #4
 7889 0450 0110A0E3 		mov	r1, #1
 7890 0454 0300A0E1 		mov	r0, r3
 7891 0458 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3761:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 7892              		.loc 1 3761 14
 7893 045c 0C301BE5 		ldr	r3, [fp, #-12]
 7894 0460 003093E5 		ldr	r3, [r3]
 7895 0464 7330FFE6 		uxth	r3, r3
 7896 0468 000053E3 		cmp	r3, #0
 7897 046c 0200000A 		beq	.L505
 7898              		.loc 1 3761 14 is_stmt 0 discriminator 1
 7899 0470 0C301BE5 		ldr	r3, [fp, #-12]
 7900 0474 043093E5 		ldr	r3, [r3, #4]
 7901 0478 000000EA 		b	.L506
 7902              	.L505:
 7903              		.loc 1 3761 14 discriminator 2
 7904 047c 0C301BE5 		ldr	r3, [fp, #-12]
 7905              	.L506:
 7906              		.loc 1 3761 13 is_stmt 1 discriminator 4
 7907 0480 1C300BE5 		str	r3, [fp, #-28]
3762:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),1);
 7908              		.loc 1 3762 5
 7909 0484 1C301BE5 		ldr	r3, [fp, #-28]
 7910 0488 043083E2 		add	r3, r3, #4
 7911 048c 0110A0E3 		mov	r1, #1
 7912 0490 0300A0E1 		mov	r0, r3
 7913 0494 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3763:../../Source/Kernel/rme_kernel.c **** 
3764:../../Source/Kernel/rme_kernel.c ****     return 0;
 7914              		.loc 1 3764 12
 7915 0498 0030A0E3 		mov	r3, #0
 7916              	.L479:
3765:../../Source/Kernel/rme_kernel.c **** }
 7917              		.loc 1 3765 1
 7918 049c 0300A0E1 		mov	r0, r3
 7919 04a0 04D04BE2 		sub	sp, fp, #4
 7920              		.cfi_def_cfa 13, 8
 7921              		@ sp needed
 7922 04a4 0088BDE8 		pop	{fp, pc}
 7923              		.cfi_endproc
 7924              	.LFE36:
 7926              		.section	.text._RME_Pgt_Des,"ax",%progbits
 7927              		.align	2
 7928              		.syntax unified
 7929              		.arm
 7931              	_RME_Pgt_Des:
 7932              	.LFB37:
3766:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 207


3767:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Con *************************************************/
3768:../../Source/Kernel/rme_kernel.c **** 
3769:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Pgt_Des ******************************************************
3770:../../Source/Kernel/rme_kernel.c **** Description : Unmap a child page table from the parent page table, destructing
3771:../../Source/Kernel/rme_kernel.c ****               the address space tree.
3772:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
3773:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Parent - The capability to the parent page
3774:../../Source/Kernel/rme_kernel.c ****                                          table.
3775:../../Source/Kernel/rme_kernel.c ****                                          2-Level.
3776:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Pos - The parent page table position to position unmap
3777:../../Source/Kernel/rme_kernel.c ****                               the child page table from. The child page table
3778:../../Source/Kernel/rme_kernel.c ****                               must be there for the destruction to succeed.
3779:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt_Child - The capability to the child page table.
3780:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
3781:../../Source/Kernel/rme_kernel.c **** Output      : None.
3782:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3783:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3784:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
3785:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Pgt_Des(struct RME_Cap_Cpt* Cpt, 
3786:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Parent,
3787:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Pos,
3788:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt_Child)
3789:../../Source/Kernel/rme_kernel.c **** {
 7933              		.loc 1 3789 1
 7934              		.cfi_startproc
 7935              		@ args = 0, pretend = 0, frame = 32
 7936              		@ frame_needed = 1, uses_anonymous_args = 0
 7937 0000 00482DE9 		push	{fp, lr}
 7938              		.cfi_def_cfa_offset 8
 7939              		.cfi_offset 11, -8
 7940              		.cfi_offset 14, -4
 7941 0004 04B08DE2 		add	fp, sp, #4
 7942              		.cfi_def_cfa 11, 4
 7943 0008 20D04DE2 		sub	sp, sp, #32
 7944 000c 18000BE5 		str	r0, [fp, #-24]
 7945 0010 1C100BE5 		str	r1, [fp, #-28]
 7946 0014 20200BE5 		str	r2, [fp, #-32]
 7947 0018 24300BE5 		str	r3, [fp, #-36]
3790:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Parent;
3791:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Child;
3792:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Root;
3793:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
3794:../../Source/Kernel/rme_kernel.c ****     
3795:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
3796:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Parent,RME_CAP_TYPE_CPT,
 7948              		.loc 1 3796 5
 7949 001c 1C301BE5 		ldr	r3, [fp, #-28]
 7950 0020 803003E2 		and	r3, r3, #128
 7951 0024 000053E3 		cmp	r3, #0
 7952 0028 1C00001A 		bne	.L508
 7953              		.loc 1 3796 5 is_stmt 0 discriminator 1
 7954 002c 18301BE5 		ldr	r3, [fp, #-24]
 7955 0030 142093E5 		ldr	r2, [r3, #20]
 7956 0034 1C301BE5 		ldr	r3, [fp, #-28]
 7957 0038 030052E1 		cmp	r2, r3
 7958 003c 0100008A 		bhi	.L509
 7959              		.loc 1 3796 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 208


 7960 0040 0230E0E3 		mvn	r3, #2
 7961              		.loc 1 3796 5
 7962 0044 000100EA 		b	.L510
 7963              	.L509:
 7964              		.loc 1 3796 5 discriminator 4
 7965 0048 1C301BE5 		ldr	r3, [fp, #-28]
 7966 004c 8322A0E1 		lsl	r2, r3, #5
 7967 0050 18301BE5 		ldr	r3, [fp, #-24]
 7968 0054 0C3093E5 		ldr	r3, [r3, #12]
 7969 0058 033082E0 		add	r3, r2, r3
 7970 005c 08300BE5 		str	r3, [fp, #-8]
 7971 0060 08301BE5 		ldr	r3, [fp, #-8]
 7972 0064 0300A0E1 		mov	r0, r3
 7973 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 7974 006c 10000BE5 		str	r0, [fp, #-16]
 7975              		.loc 1 3796 5 discriminator 1
 7976 0070 10301BE5 		ldr	r3, [fp, #-16]
 7977 0074 FF3803E2 		and	r3, r3, #16711680
 7978 0078 020853E3 		cmp	r3, #131072
 7979 007c 0100001A 		bne	.L511
 7980              		.loc 1 3796 5 discriminator 5
 7981 0080 0830E0E3 		mvn	r3, #8
 7982              		.loc 1 3796 5
 7983 0084 F00000EA 		b	.L510
 7984              	.L511:
 7985              		.loc 1 3796 5 discriminator 6
 7986 0088 10301BE5 		ldr	r3, [fp, #-16]
 7987 008c 233CA0E1 		lsr	r3, r3, #24
 7988 0090 030053E3 		cmp	r3, #3
 7989 0094 3F00000A 		beq	.L512
 7990              		.loc 1 3796 5 discriminator 7
 7991 0098 0130E0E3 		mvn	r3, #1
 7992              		.loc 1 3796 5
 7993 009c EA0000EA 		b	.L510
 7994              	.L508:
 7995              		.loc 1 3796 5 discriminator 2
 7996 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 7997 00a4 2324A0E1 		lsr	r2, r3, #8
 7998 00a8 18301BE5 		ldr	r3, [fp, #-24]
 7999 00ac 143093E5 		ldr	r3, [r3, #20]
 8000 00b0 030052E1 		cmp	r2, r3
 8001 00b4 0100003A 		bcc	.L513
 8002              		.loc 1 3796 5 discriminator 8
 8003 00b8 0230E0E3 		mvn	r3, #2
 8004              		.loc 1 3796 5
 8005 00bc E20000EA 		b	.L510
 8006              	.L513:
 8007              		.loc 1 3796 5 discriminator 9
 8008 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 8009 00c4 2334A0E1 		lsr	r3, r3, #8
 8010 00c8 8322A0E1 		lsl	r2, r3, #5
 8011 00cc 18301BE5 		ldr	r3, [fp, #-24]
 8012 00d0 0C3093E5 		ldr	r3, [r3, #12]
 8013 00d4 033082E0 		add	r3, r2, r3
 8014 00d8 08300BE5 		str	r3, [fp, #-8]
 8015 00dc 08301BE5 		ldr	r3, [fp, #-8]
 8016 00e0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 209


 8017 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8018 00e8 10000BE5 		str	r0, [fp, #-16]
 8019              		.loc 1 3796 5 discriminator 1
 8020 00ec 10301BE5 		ldr	r3, [fp, #-16]
 8021 00f0 FF3803E2 		and	r3, r3, #16711680
 8022 00f4 020853E3 		cmp	r3, #131072
 8023 00f8 0100001A 		bne	.L514
 8024              		.loc 1 3796 5 discriminator 10
 8025 00fc 0830E0E3 		mvn	r3, #8
 8026              		.loc 1 3796 5
 8027 0100 D10000EA 		b	.L510
 8028              	.L514:
 8029              		.loc 1 3796 5 discriminator 11
 8030 0104 10301BE5 		ldr	r3, [fp, #-16]
 8031 0108 233CA0E1 		lsr	r3, r3, #24
 8032 010c 030053E3 		cmp	r3, #3
 8033 0110 0100000A 		beq	.L515
 8034              		.loc 1 3796 5 discriminator 12
 8035 0114 0130E0E3 		mvn	r3, #1
 8036              		.loc 1 3796 5
 8037 0118 CB0000EA 		b	.L510
 8038              	.L515:
 8039              		.loc 1 3796 5 discriminator 13
 8040 011c 1C301BE5 		ldr	r3, [fp, #-28]
 8041 0120 7F2003E2 		and	r2, r3, #127
 8042 0124 08301BE5 		ldr	r3, [fp, #-8]
 8043 0128 143093E5 		ldr	r3, [r3, #20]
 8044 012c 030052E1 		cmp	r2, r3
 8045 0130 0100003A 		bcc	.L516
 8046              		.loc 1 3796 5 discriminator 14
 8047 0134 0230E0E3 		mvn	r3, #2
 8048              		.loc 1 3796 5
 8049 0138 C30000EA 		b	.L510
 8050              	.L516:
 8051              		.loc 1 3796 5 discriminator 15
 8052 013c 1C301BE5 		ldr	r3, [fp, #-28]
 8053 0140 7F3003E2 		and	r3, r3, #127
 8054 0144 8322A0E1 		lsl	r2, r3, #5
 8055 0148 08301BE5 		ldr	r3, [fp, #-8]
 8056 014c 0C3093E5 		ldr	r3, [r3, #12]
 8057 0150 033082E0 		add	r3, r2, r3
 8058 0154 08300BE5 		str	r3, [fp, #-8]
 8059 0158 08301BE5 		ldr	r3, [fp, #-8]
 8060 015c 0300A0E1 		mov	r0, r3
 8061 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8062 0164 10000BE5 		str	r0, [fp, #-16]
 8063              		.loc 1 3796 5 discriminator 1
 8064 0168 10301BE5 		ldr	r3, [fp, #-16]
 8065 016c FF3803E2 		and	r3, r3, #16711680
 8066 0170 020853E3 		cmp	r3, #131072
 8067 0174 0100001A 		bne	.L517
 8068              		.loc 1 3796 5 discriminator 16
 8069 0178 0830E0E3 		mvn	r3, #8
 8070              		.loc 1 3796 5
 8071 017c B20000EA 		b	.L510
 8072              	.L517:
 8073              		.loc 1 3796 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 210


 8074 0180 10301BE5 		ldr	r3, [fp, #-16]
 8075 0184 233CA0E1 		lsr	r3, r3, #24
 8076 0188 030053E3 		cmp	r3, #3
 8077 018c 0100000A 		beq	.L512
 8078              		.loc 1 3796 5 discriminator 18
 8079 0190 0130E0E3 		mvn	r3, #1
 8080              		.loc 1 3796 5
 8081 0194 AC0000EA 		b	.L510
 8082              	.L512:
3797:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Parent,Type_Stat);
3798:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt_Child,RME_CAP_TYPE_CPT,
 8083              		.loc 1 3798 5 is_stmt 1
 8084 0198 24301BE5 		ldr	r3, [fp, #-36]
 8085 019c 803003E2 		and	r3, r3, #128
 8086 01a0 000053E3 		cmp	r3, #0
 8087 01a4 1C00001A 		bne	.L518
 8088              		.loc 1 3798 5 is_stmt 0 discriminator 1
 8089 01a8 18301BE5 		ldr	r3, [fp, #-24]
 8090 01ac 142093E5 		ldr	r2, [r3, #20]
 8091 01b0 24301BE5 		ldr	r3, [fp, #-36]
 8092 01b4 030052E1 		cmp	r2, r3
 8093 01b8 0100008A 		bhi	.L519
 8094              		.loc 1 3798 5 discriminator 3
 8095 01bc 0230E0E3 		mvn	r3, #2
 8096              		.loc 1 3798 5
 8097 01c0 A10000EA 		b	.L510
 8098              	.L519:
 8099              		.loc 1 3798 5 discriminator 4
 8100 01c4 24301BE5 		ldr	r3, [fp, #-36]
 8101 01c8 8322A0E1 		lsl	r2, r3, #5
 8102 01cc 18301BE5 		ldr	r3, [fp, #-24]
 8103 01d0 0C3093E5 		ldr	r3, [r3, #12]
 8104 01d4 033082E0 		add	r3, r2, r3
 8105 01d8 0C300BE5 		str	r3, [fp, #-12]
 8106 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 8107 01e0 0300A0E1 		mov	r0, r3
 8108 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8109 01e8 10000BE5 		str	r0, [fp, #-16]
 8110              		.loc 1 3798 5 discriminator 1
 8111 01ec 10301BE5 		ldr	r3, [fp, #-16]
 8112 01f0 FF3803E2 		and	r3, r3, #16711680
 8113 01f4 020853E3 		cmp	r3, #131072
 8114 01f8 0100001A 		bne	.L520
 8115              		.loc 1 3798 5 discriminator 5
 8116 01fc 0830E0E3 		mvn	r3, #8
 8117              		.loc 1 3798 5
 8118 0200 910000EA 		b	.L510
 8119              	.L520:
 8120              		.loc 1 3798 5 discriminator 6
 8121 0204 10301BE5 		ldr	r3, [fp, #-16]
 8122 0208 233CA0E1 		lsr	r3, r3, #24
 8123 020c 030053E3 		cmp	r3, #3
 8124 0210 3F00000A 		beq	.L521
 8125              		.loc 1 3798 5 discriminator 7
 8126 0214 0130E0E3 		mvn	r3, #1
 8127              		.loc 1 3798 5
 8128 0218 8B0000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 211


 8129              	.L518:
 8130              		.loc 1 3798 5 discriminator 2
 8131 021c 24301BE5 		ldr	r3, [fp, #-36]
 8132 0220 2324A0E1 		lsr	r2, r3, #8
 8133 0224 18301BE5 		ldr	r3, [fp, #-24]
 8134 0228 143093E5 		ldr	r3, [r3, #20]
 8135 022c 030052E1 		cmp	r2, r3
 8136 0230 0100003A 		bcc	.L522
 8137              		.loc 1 3798 5 discriminator 8
 8138 0234 0230E0E3 		mvn	r3, #2
 8139              		.loc 1 3798 5
 8140 0238 830000EA 		b	.L510
 8141              	.L522:
 8142              		.loc 1 3798 5 discriminator 9
 8143 023c 24301BE5 		ldr	r3, [fp, #-36]
 8144 0240 2334A0E1 		lsr	r3, r3, #8
 8145 0244 8322A0E1 		lsl	r2, r3, #5
 8146 0248 18301BE5 		ldr	r3, [fp, #-24]
 8147 024c 0C3093E5 		ldr	r3, [r3, #12]
 8148 0250 033082E0 		add	r3, r2, r3
 8149 0254 0C300BE5 		str	r3, [fp, #-12]
 8150 0258 0C301BE5 		ldr	r3, [fp, #-12]
 8151 025c 0300A0E1 		mov	r0, r3
 8152 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8153 0264 10000BE5 		str	r0, [fp, #-16]
 8154              		.loc 1 3798 5 discriminator 1
 8155 0268 10301BE5 		ldr	r3, [fp, #-16]
 8156 026c FF3803E2 		and	r3, r3, #16711680
 8157 0270 020853E3 		cmp	r3, #131072
 8158 0274 0100001A 		bne	.L523
 8159              		.loc 1 3798 5 discriminator 10
 8160 0278 0830E0E3 		mvn	r3, #8
 8161              		.loc 1 3798 5
 8162 027c 720000EA 		b	.L510
 8163              	.L523:
 8164              		.loc 1 3798 5 discriminator 11
 8165 0280 10301BE5 		ldr	r3, [fp, #-16]
 8166 0284 233CA0E1 		lsr	r3, r3, #24
 8167 0288 030053E3 		cmp	r3, #3
 8168 028c 0100000A 		beq	.L524
 8169              		.loc 1 3798 5 discriminator 12
 8170 0290 0130E0E3 		mvn	r3, #1
 8171              		.loc 1 3798 5
 8172 0294 6C0000EA 		b	.L510
 8173              	.L524:
 8174              		.loc 1 3798 5 discriminator 13
 8175 0298 24301BE5 		ldr	r3, [fp, #-36]
 8176 029c 7F2003E2 		and	r2, r3, #127
 8177 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 8178 02a4 143093E5 		ldr	r3, [r3, #20]
 8179 02a8 030052E1 		cmp	r2, r3
 8180 02ac 0100003A 		bcc	.L525
 8181              		.loc 1 3798 5 discriminator 14
 8182 02b0 0230E0E3 		mvn	r3, #2
 8183              		.loc 1 3798 5
 8184 02b4 640000EA 		b	.L510
 8185              	.L525:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 212


 8186              		.loc 1 3798 5 discriminator 15
 8187 02b8 24301BE5 		ldr	r3, [fp, #-36]
 8188 02bc 7F3003E2 		and	r3, r3, #127
 8189 02c0 8322A0E1 		lsl	r2, r3, #5
 8190 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 8191 02c8 0C3093E5 		ldr	r3, [r3, #12]
 8192 02cc 033082E0 		add	r3, r2, r3
 8193 02d0 0C300BE5 		str	r3, [fp, #-12]
 8194 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 8195 02d8 0300A0E1 		mov	r0, r3
 8196 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 8197 02e0 10000BE5 		str	r0, [fp, #-16]
 8198              		.loc 1 3798 5 discriminator 1
 8199 02e4 10301BE5 		ldr	r3, [fp, #-16]
 8200 02e8 FF3803E2 		and	r3, r3, #16711680
 8201 02ec 020853E3 		cmp	r3, #131072
 8202 02f0 0100001A 		bne	.L526
 8203              		.loc 1 3798 5 discriminator 16
 8204 02f4 0830E0E3 		mvn	r3, #8
 8205              		.loc 1 3798 5
 8206 02f8 530000EA 		b	.L510
 8207              	.L526:
 8208              		.loc 1 3798 5 discriminator 17
 8209 02fc 10301BE5 		ldr	r3, [fp, #-16]
 8210 0300 233CA0E1 		lsr	r3, r3, #24
 8211 0304 030053E3 		cmp	r3, #3
 8212 0308 0100000A 		beq	.L521
 8213              		.loc 1 3798 5 discriminator 18
 8214 030c 0130E0E3 		mvn	r3, #1
 8215              		.loc 1 3798 5
 8216 0310 4D0000EA 		b	.L510
 8217              	.L521:
3799:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Child,Type_Stat);
3800:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
3801:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Parent, RME_PGT_FLAG_DES_PARENT);
 8218              		.loc 1 3801 5 is_stmt 1
 8219 0314 08301BE5 		ldr	r3, [fp, #-8]
 8220 0318 083093E5 		ldr	r3, [r3, #8]
 8221 031c 203003E2 		and	r3, r3, #32
 8222 0320 000053E3 		cmp	r3, #0
 8223 0324 0100001A 		bne	.L527
 8224              		.loc 1 3801 5 is_stmt 0 discriminator 1
 8225 0328 0630E0E3 		mvn	r3, #6
 8226              		.loc 1 3801 5
 8227 032c 460000EA 		b	.L510
 8228              	.L527:
3802:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Child, RME_PGT_FLAG_CHILD);
 8229              		.loc 1 3802 5 is_stmt 1
 8230 0330 0C301BE5 		ldr	r3, [fp, #-12]
 8231 0334 083093E5 		ldr	r3, [r3, #8]
 8232 0338 083003E2 		and	r3, r3, #8
 8233 033c 000053E3 		cmp	r3, #0
 8234 0340 0100001A 		bne	.L528
 8235              		.loc 1 3802 5 is_stmt 0 discriminator 1
 8236 0344 0630E0E3 		mvn	r3, #6
 8237              		.loc 1 3802 5
 8238 0348 3F0000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 213


 8239              	.L528:
3803:../../Source/Kernel/rme_kernel.c ****     /* Check the operation range - This is page table specific */
3804:../../Source/Kernel/rme_kernel.c ****     if((Pos>RME_PGT_FLAG_HIGH(Pgt_Parent->Head.Flag))||
 8240              		.loc 1 3804 13 is_stmt 1
 8241 034c 08301BE5 		ldr	r3, [fp, #-8]
 8242 0350 083093E5 		ldr	r3, [r3, #8]
 8243 0354 233AA0E1 		lsr	r3, r3, #20
 8244              		.loc 1 3804 7
 8245 0358 20201BE5 		ldr	r2, [fp, #-32]
 8246 035c 030052E1 		cmp	r2, r3
 8247 0360 0600008A 		bhi	.L529
3805:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8248              		.loc 1 3805 13
 8249 0364 08301BE5 		ldr	r3, [fp, #-8]
 8250 0368 083093E5 		ldr	r3, [r3, #8]
 8251 036c 2334A0E1 		lsr	r3, r3, #8
 8252 0370 5330EBE7 		ubfx	r3, r3, #0, #12
3804:../../Source/Kernel/rme_kernel.c ****        (Pos<RME_PGT_FLAG_LOW(Pgt_Parent->Head.Flag)))
 8253              		.loc 1 3804 54 discriminator 1
 8254 0374 20201BE5 		ldr	r2, [fp, #-32]
 8255 0378 030052E1 		cmp	r2, r3
 8256 037c 0100002A 		bcs	.L530
 8257              	.L529:
3806:../../Source/Kernel/rme_kernel.c ****     {
3807:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3808:../../Source/Kernel/rme_kernel.c **** 
3809:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 8258              		.loc 1 3809 16
 8259 0380 0630E0E3 		mvn	r3, #6
 8260 0384 300000EA 		b	.L510
 8261              	.L530:
3810:../../Source/Kernel/rme_kernel.c ****     }
3811:../../Source/Kernel/rme_kernel.c ****     else
3812:../../Source/Kernel/rme_kernel.c ****     {
3813:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3814:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3815:../../Source/Kernel/rme_kernel.c ****     }
3816:../../Source/Kernel/rme_kernel.c **** 
3817:../../Source/Kernel/rme_kernel.c ****     /* See if the unmapping range is allowed */
3818:../../Source/Kernel/rme_kernel.c ****     if((Pos>>RME_PGT_NMORD(Pgt_Parent->Order))!=0U)
 8262              		.loc 1 3818 14
 8263 0388 08301BE5 		ldr	r3, [fp, #-8]
 8264 038c 143093E5 		ldr	r3, [r3, #20]
 8265 0390 7330FFE6 		uxth	r3, r3
 8266              		.loc 1 3818 12
 8267 0394 20201BE5 		ldr	r2, [fp, #-32]
 8268 0398 3233A0E1 		lsr	r3, r2, r3
 8269              		.loc 1 3818 7
 8270 039c 000053E3 		cmp	r3, #0
 8271 03a0 0100000A 		beq	.L531
3819:../../Source/Kernel/rme_kernel.c ****     {
3820:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3821:../../Source/Kernel/rme_kernel.c **** 
3822:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_ADDR;
 8272              		.loc 1 3822 16
 8273 03a4 6430E0E3 		mvn	r3, #100
 8274 03a8 270000EA 		b	.L510
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 214


 8275              	.L531:
3823:../../Source/Kernel/rme_kernel.c ****     }
3824:../../Source/Kernel/rme_kernel.c ****     else
3825:../../Source/Kernel/rme_kernel.c ****     {
3826:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3827:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3828:../../Source/Kernel/rme_kernel.c ****     }
3829:../../Source/Kernel/rme_kernel.c **** 
3830:../../Source/Kernel/rme_kernel.c ****     /* Actually do the mapping - This work is passed down to the HAL. 
3831:../../Source/Kernel/rme_kernel.c ****      * Under multi-core, HAL should use CAS to avoid a conflict. Also,
3832:../../Source/Kernel/rme_kernel.c ****      * the HAL needs to guarantee that the Child is actually mapped there,
3833:../../Source/Kernel/rme_kernel.c ****      * and use that as the old value in CAS */
3834:../../Source/Kernel/rme_kernel.c ****     if(__RME_Pgt_Pgdir_Unmap(Pgt_Parent,Pos,Pgt_Child)<0)
 8276              		.loc 1 3834 8
 8277 03ac 0C201BE5 		ldr	r2, [fp, #-12]
 8278 03b0 20101BE5 		ldr	r1, [fp, #-32]
 8279 03b4 08001BE5 		ldr	r0, [fp, #-8]
 8280 03b8 FEFFFFEB 		bl	__RME_Pgt_Pgdir_Unmap
 8281 03bc 0030A0E1 		mov	r3, r0
 8282              		.loc 1 3834 7 discriminator 1
 8283 03c0 000053E3 		cmp	r3, #0
 8284 03c4 010000AA 		bge	.L532
3835:../../Source/Kernel/rme_kernel.c ****     {
3836:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3837:../../Source/Kernel/rme_kernel.c **** 
3838:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PGT_MAP;
 8285              		.loc 1 3838 16
 8286 03c8 6530E0E3 		mvn	r3, #101
 8287 03cc 1E0000EA 		b	.L510
 8288              	.L532:
3839:../../Source/Kernel/rme_kernel.c ****     }
3840:../../Source/Kernel/rme_kernel.c ****     else
3841:../../Source/Kernel/rme_kernel.c ****     {
3842:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3843:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3844:../../Source/Kernel/rme_kernel.c ****     }
3845:../../Source/Kernel/rme_kernel.c ****     
3846:../../Source/Kernel/rme_kernel.c ****     /* Decrease refcnt for both parent/child */
3847:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Parent,struct RME_Cap_Pgt*);
 8289              		.loc 1 3847 14
 8290 03d0 08301BE5 		ldr	r3, [fp, #-8]
 8291 03d4 003093E5 		ldr	r3, [r3]
 8292 03d8 7330FFE6 		uxth	r3, r3
 8293 03dc 000053E3 		cmp	r3, #0
 8294 03e0 0200000A 		beq	.L533
 8295              		.loc 1 3847 14 is_stmt 0 discriminator 1
 8296 03e4 08301BE5 		ldr	r3, [fp, #-8]
 8297 03e8 043093E5 		ldr	r3, [r3, #4]
 8298 03ec 000000EA 		b	.L534
 8299              	.L533:
 8300              		.loc 1 3847 14 discriminator 2
 8301 03f0 08301BE5 		ldr	r3, [fp, #-8]
 8302              	.L534:
 8303              		.loc 1 3847 13 is_stmt 1 discriminator 4
 8304 03f4 14300BE5 		str	r3, [fp, #-20]
3848:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8305              		.loc 1 3848 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 215


 8306 03f8 14301BE5 		ldr	r3, [fp, #-20]
 8307 03fc 043083E2 		add	r3, r3, #4
 8308 0400 0010E0E3 		mvn	r1, #0
 8309 0404 0300A0E1 		mov	r0, r3
 8310 0408 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3849:../../Source/Kernel/rme_kernel.c ****     Pgt_Root=RME_CAP_CONV_ROOT(Pgt_Child,struct RME_Cap_Pgt*);
 8311              		.loc 1 3849 14
 8312 040c 0C301BE5 		ldr	r3, [fp, #-12]
 8313 0410 003093E5 		ldr	r3, [r3]
 8314 0414 7330FFE6 		uxth	r3, r3
 8315 0418 000053E3 		cmp	r3, #0
 8316 041c 0200000A 		beq	.L535
 8317              		.loc 1 3849 14 is_stmt 0 discriminator 1
 8318 0420 0C301BE5 		ldr	r3, [fp, #-12]
 8319 0424 043093E5 		ldr	r3, [r3, #4]
 8320 0428 000000EA 		b	.L536
 8321              	.L535:
 8322              		.loc 1 3849 14 discriminator 2
 8323 042c 0C301BE5 		ldr	r3, [fp, #-12]
 8324              	.L536:
 8325              		.loc 1 3849 13 is_stmt 1 discriminator 4
 8326 0430 14300BE5 		str	r3, [fp, #-20]
3850:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Root->Head.Root_Ref),-1);
 8327              		.loc 1 3850 5
 8328 0434 14301BE5 		ldr	r3, [fp, #-20]
 8329 0438 043083E2 		add	r3, r3, #4
 8330 043c 0010E0E3 		mvn	r1, #0
 8331 0440 0300A0E1 		mov	r0, r3
 8332 0444 FEFFFFEB 		bl	_RME_Fetch_Add_Single
3851:../../Source/Kernel/rme_kernel.c **** 
3852:../../Source/Kernel/rme_kernel.c ****     return 0;
 8333              		.loc 1 3852 12
 8334 0448 0030A0E3 		mov	r3, #0
 8335              	.L510:
3853:../../Source/Kernel/rme_kernel.c **** }
 8336              		.loc 1 3853 1
 8337 044c 0300A0E1 		mov	r0, r3
 8338 0450 04D04BE2 		sub	sp, fp, #4
 8339              		.cfi_def_cfa 13, 8
 8340              		@ sp needed
 8341 0454 0088BDE8 		pop	{fp, pc}
 8342              		.cfi_endproc
 8343              	.LFE37:
 8345              		.section	.text._RME_Kot_Init,"ax",%progbits
 8346              		.align	2
 8347              		.global	_RME_Kot_Init
 8348              		.syntax unified
 8349              		.arm
 8351              	_RME_Kot_Init:
 8352              	.LFB38:
3854:../../Source/Kernel/rme_kernel.c **** #endif
3855:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Pgt_Des *************************************************/
3856:../../Source/Kernel/rme_kernel.c **** 
3857:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Init *****************************************************
3858:../../Source/Kernel/rme_kernel.c **** Description : Initialize the kernel object table according to the total kernel
3859:../../Source/Kernel/rme_kernel.c ****               memory size, which decides the number of words in the table.
3860:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Words - the number of words in the table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 216


3861:../../Source/Kernel/rme_kernel.c **** Output      : None.
3862:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the number of words are is not sufficient to hold 
3863:../../Source/Kernel/rme_kernel.c ****                           all kernel memory, -1; else 0.
3864:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3865:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Init(rme_ptr_t Word)
3866:../../Source/Kernel/rme_kernel.c **** {
 8353              		.loc 1 3866 1
 8354              		.cfi_startproc
 8355              		@ args = 0, pretend = 0, frame = 16
 8356              		@ frame_needed = 1, uses_anonymous_args = 0
 8357              		@ link register save eliminated.
 8358 0000 04B02DE5 		str	fp, [sp, #-4]!
 8359              		.cfi_def_cfa_offset 4
 8360              		.cfi_offset 11, -4
 8361 0004 00B08DE2 		add	fp, sp, #0
 8362              		.cfi_def_cfa_register 11
 8363 0008 14D04DE2 		sub	sp, sp, #20
 8364 000c 10000BE5 		str	r0, [fp, #-16]
3867:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
3868:../../Source/Kernel/rme_kernel.c ****     
3869:../../Source/Kernel/rme_kernel.c ****     if(Word<RME_KOT_WORD_NUM)
 8365              		.loc 1 3869 7
 8366 0010 10301BE5 		ldr	r3, [fp, #-16]
 8367 0014 020953E3 		cmp	r3, #32768
 8368 0018 0100002A 		bcs	.L538
3870:../../Source/Kernel/rme_kernel.c ****     {
3871:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3872:../../Source/Kernel/rme_kernel.c **** 
3873:../../Source/Kernel/rme_kernel.c ****         return -1;
 8369              		.loc 1 3873 16
 8370 001c 0030E0E3 		mvn	r3, #0
 8371 0020 0F0000EA 		b	.L539
 8372              	.L538:
3874:../../Source/Kernel/rme_kernel.c ****     }
3875:../../Source/Kernel/rme_kernel.c ****     else
3876:../../Source/Kernel/rme_kernel.c ****     {
3877:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3878:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3879:../../Source/Kernel/rme_kernel.c ****     }
3880:../../Source/Kernel/rme_kernel.c **** 
3881:../../Source/Kernel/rme_kernel.c ****     /* Zero out the whole table */
3882:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Word;Count++)
 8373              		.loc 1 3882 14
 8374 0024 0030A0E3 		mov	r3, #0
 8375 0028 08300BE5 		str	r3, [fp, #-8]
 8376              		.loc 1 3882 5
 8377 002c 070000EA 		b	.L540
 8378              	.L541:
3883:../../Source/Kernel/rme_kernel.c ****     {
3884:../../Source/Kernel/rme_kernel.c ****         RME_KOT_VA_BASE[Count]=0U;
 8379              		.loc 1 3884 31
 8380 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8381 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8382 0038 08201BE5 		ldr	r2, [fp, #-8]
 8383 003c 0010A0E3 		mov	r1, #0
 8384 0040 021183E7 		str	r1, [r3, r2, lsl #2]
3882:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 217


 8385              		.loc 1 3882 34 discriminator 3
 8386 0044 08301BE5 		ldr	r3, [fp, #-8]
 8387 0048 013083E2 		add	r3, r3, #1
 8388 004c 08300BE5 		str	r3, [fp, #-8]
 8389              	.L540:
3882:../../Source/Kernel/rme_kernel.c ****     {
 8390              		.loc 1 3882 23 discriminator 1
 8391 0050 08201BE5 		ldr	r2, [fp, #-8]
 8392 0054 10301BE5 		ldr	r3, [fp, #-16]
 8393 0058 030052E1 		cmp	r2, r3
 8394 005c F3FFFF3A 		bcc	.L541
3885:../../Source/Kernel/rme_kernel.c ****     }
3886:../../Source/Kernel/rme_kernel.c **** 
3887:../../Source/Kernel/rme_kernel.c ****     return 0;
 8395              		.loc 1 3887 12
 8396 0060 0030A0E3 		mov	r3, #0
 8397              	.L539:
3888:../../Source/Kernel/rme_kernel.c **** }
 8398              		.loc 1 3888 1
 8399 0064 0300A0E1 		mov	r0, r3
 8400 0068 00D08BE2 		add	sp, fp, #0
 8401              		.cfi_def_cfa_register 13
 8402              		@ sp needed
 8403 006c 04B09DE4 		ldr	fp, [sp], #4
 8404              		.cfi_restore 11
 8405              		.cfi_def_cfa_offset 0
 8406 0070 1EFF2FE1 		bx	lr
 8407              		.cfi_endproc
 8408              	.LFE38:
 8410              		.section	.rodata
 8411 00d7 00       		.align	2
 8412              	.LC11:
 8413 00d8 0D0A4368 		.ascii	"\015\012Check if the marking is well aligned\000"
 8413      65636B20 
 8413      69662074 
 8413      6865206D 
 8413      61726B69 
 8414 00ff 00       		.align	2
 8415              	.LC12:
 8416 0100 0D0A536F 		.ascii	"\015\012Someone already populated something here\000"
 8416      6D656F6E 
 8416      6520616C 
 8416      72656164 
 8416      7920706F 
 8417 012b 00       		.align	2
 8418              	.LC13:
 8419 012c 0D0A4F6C 		.ascii	"\015\012Old_Val \000"
 8419      645F5661 
 8419      6C2000
 8420 0137 00       		.align	2
 8421              	.LC14:
 8422 0138 0D0A4D61 		.ascii	"\015\012Mask_Begin \000"
 8422      736B5F42 
 8422      6567696E 
 8422      2000
 8423 0146 0000     		.align	2
 8424              	.LC15:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 218


 8425 0148 0D0A4D61 		.ascii	"\015\012Mask_End \000"
 8425      736B5F45 
 8425      6E642000 
 8426              		.align	2
 8427              	.LC16:
 8428 0154 0D0A4368 		.ascii	"\015\012Check done, do the marking with CAS\000"
 8428      65636B20 
 8428      646F6E65 
 8428      2C20646F 
 8428      20746865 
 8429 017a 0000     		.align	2
 8430              	.LC17:
 8431 017c 0D0A4368 		.ascii	"\015\012Check&Mark the start\000"
 8431      65636B26 
 8431      4D61726B 
 8431      20746865 
 8431      20737461 
 8432 0193 00       		.align	2
 8433              	.LC18:
 8434 0194 0D0A524D 		.ascii	"\015\012RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],\000"
 8434      455F434F 
 8434      4D505F53 
 8434      57415028 
 8434      26524D45 
 8435              		.section	.text._RME_Kot_Mark,"ax",%progbits
 8436              		.align	2
 8437              		.global	_RME_Kot_Mark
 8438              		.syntax unified
 8439              		.arm
 8441              	_RME_Kot_Mark:
 8442              	.LFB39:
3889:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Init ************************************************/
3890:../../Source/Kernel/rme_kernel.c **** 
3891:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Mark *****************************************************
3892:../../Source/Kernel/rme_kernel.c **** Description : Populate the kernel object bitmap contiguously.
3893:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
3894:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to populate.
3895:../../Source/Kernel/rme_kernel.c **** Output      : None.
3896:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
3897:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
3898:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Mark(rme_ptr_t Kaddr,
3899:../../Source/Kernel/rme_kernel.c ****                         rme_ptr_t Size)
3900:../../Source/Kernel/rme_kernel.c **** {
 8443              		.loc 1 3900 1
 8444              		.cfi_startproc
 8445              		@ args = 0, pretend = 0, frame = 40
 8446              		@ frame_needed = 1, uses_anonymous_args = 0
 8447 0000 00482DE9 		push	{fp, lr}
 8448              		.cfi_def_cfa_offset 8
 8449              		.cfi_offset 11, -8
 8450              		.cfi_offset 14, -4
 8451 0004 04B08DE2 		add	fp, sp, #4
 8452              		.cfi_def_cfa 11, 4
 8453 0008 28D04DE2 		sub	sp, sp, #40
 8454 000c 28000BE5 		str	r0, [fp, #-40]
 8455 0010 2C100BE5 		str	r1, [fp, #-44]
3901:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 219


3902:../../Source/Kernel/rme_kernel.c ****     /* The old value */
3903:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Val;
3904:../../Source/Kernel/rme_kernel.c ****     /* Whether we need to undo our operations because of CAS failure */
3905:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Undo;
3906:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
3907:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
3908:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
3909:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
3910:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
3911:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
3912:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
3913:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
3914:../../Source/Kernel/rme_kernel.c **** 
3915:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
3916:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8456              		.loc 1 3916 14
 8457 0014 28301BE5 		ldr	r3, [fp, #-40]
 8458 0018 0F3003E2 		and	r3, r3, #15
 8459              		.loc 1 3916 7
 8460 001c 000053E3 		cmp	r3, #0
 8461 0020 0400000A 		beq	.L543
3917:../../Source/Kernel/rme_kernel.c ****     {
3918:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3919:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nCheck if the marking is well aligned");
 8462              		.loc 1 3919 9
 8463 0024 000000E3 		movw	r0, #:lower16:.LC11
 8464 0028 000040E3 		movt	r0, #:upper16:.LC11
 8465 002c FEFFFFEB 		bl	RME_Str_Print
3920:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8466              		.loc 1 3920 16
 8467 0030 0030E0E3 		mvn	r3, #0
 8468 0034 DD0000EA 		b	.L544
 8469              	.L543:
3921:../../Source/Kernel/rme_kernel.c ****     }
3922:../../Source/Kernel/rme_kernel.c ****     else
3923:../../Source/Kernel/rme_kernel.c ****     {
3924:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3925:../../Source/Kernel/rme_kernel.c ****         /* No action required */
3926:../../Source/Kernel/rme_kernel.c ****     }
3927:../../Source/Kernel/rme_kernel.c ****     
3928:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
3929:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8470              		.loc 1 3929 17
 8471 0038 28301BE5 		ldr	r3, [fp, #-40]
 8472 003c 7F3483E2 		add	r3, r3, #2130706432
 8473              		.loc 1 3929 10
 8474 0040 2332A0E1 		lsr	r3, r3, #4
 8475 0044 10300BE5 		str	r3, [fp, #-16]
3930:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8476              		.loc 1 3930 16
 8477 0048 10301BE5 		ldr	r3, [fp, #-16]
 8478 004c 1F3003E2 		and	r3, r3, #31
 8479              		.loc 1 3930 15
 8480 0050 0020E0E3 		mvn	r2, #0
 8481 0054 1233A0E1 		lsl	r3, r2, r3
 8482 0058 14300BE5 		str	r3, [fp, #-20]
3931:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 220


 8483              		.loc 1 3931 10
 8484 005c 10301BE5 		ldr	r3, [fp, #-16]
 8485 0060 A332A0E1 		lsr	r3, r3, #5
 8486 0064 10300BE5 		str	r3, [fp, #-16]
3932:../../Source/Kernel/rme_kernel.c ****     
3933:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8487              		.loc 1 3933 15
 8488 0068 28201BE5 		ldr	r2, [fp, #-40]
 8489 006c 2C301BE5 		ldr	r3, [fp, #-44]
 8490 0070 033082E0 		add	r3, r2, r3
 8491              		.loc 1 3933 23
 8492 0074 7F3483E2 		add	r3, r3, #2130706432
 8493 0078 013043E2 		sub	r3, r3, #1
 8494              		.loc 1 3933 8
 8495 007c 2332A0E1 		lsr	r3, r3, #4
 8496 0080 18300BE5 		str	r3, [fp, #-24]
3934:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8497              		.loc 1 3934 14
 8498 0084 18301BE5 		ldr	r3, [fp, #-24]
 8499 0088 0330E0E1 		mvn	r3, r3
 8500 008c 1F3003E2 		and	r3, r3, #31
 8501              		.loc 1 3934 13
 8502 0090 0020E0E3 		mvn	r2, #0
 8503 0094 3233A0E1 		lsr	r3, r2, r3
 8504 0098 1C300BE5 		str	r3, [fp, #-28]
3935:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8505              		.loc 1 3935 8
 8506 009c 18301BE5 		ldr	r3, [fp, #-24]
 8507 00a0 A332A0E1 		lsr	r3, r3, #5
 8508 00a4 18300BE5 		str	r3, [fp, #-24]
3936:../../Source/Kernel/rme_kernel.c ****     
3937:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
3938:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8509              		.loc 1 3938 7
 8510 00a8 10201BE5 		ldr	r2, [fp, #-16]
 8511 00ac 18301BE5 		ldr	r3, [fp, #-24]
 8512 00b0 030052E1 		cmp	r2, r3
 8513 00b4 3400001A 		bne	.L545
3939:../../Source/Kernel/rme_kernel.c ****     {
3940:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3941:../../Source/Kernel/rme_kernel.c ****         
3942:../../Source/Kernel/rme_kernel.c ****         /* Someone already populated something here */
3943:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8514              		.loc 1 3943 16
 8515 00b8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8516 00bc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8517 00c0 10201BE5 		ldr	r2, [fp, #-16]
 8518 00c4 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8519 00c8 20300BE5 		str	r3, [fp, #-32]
3944:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&(Mask_Begin&Mask_End))!=0U)
 8520              		.loc 1 3944 32
 8521 00cc 14201BE5 		ldr	r2, [fp, #-20]
 8522 00d0 1C301BE5 		ldr	r3, [fp, #-28]
 8523 00d4 032002E0 		and	r2, r2, r3
 8524              		.loc 1 3944 20
 8525 00d8 20301BE5 		ldr	r3, [fp, #-32]
 8526 00dc 023003E0 		and	r3, r3, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 221


 8527              		.loc 1 3944 11
 8528 00e0 000053E3 		cmp	r3, #0
 8529 00e4 1300000A 		beq	.L546
3945:../../Source/Kernel/rme_kernel.c ****         {
3946:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3947:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nSomeone already populated something here");
 8530              		.loc 1 3947 13
 8531 00e8 000000E3 		movw	r0, #:lower16:.LC12
 8532 00ec 000040E3 		movt	r0, #:upper16:.LC12
 8533 00f0 FEFFFFEB 		bl	RME_Str_Print
3948:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nOld_Val ");
 8534              		.loc 1 3948 13
 8535 00f4 000000E3 		movw	r0, #:lower16:.LC13
 8536 00f8 000040E3 		movt	r0, #:upper16:.LC13
 8537 00fc FEFFFFEB 		bl	RME_Str_Print
3949:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Old_Val);
 8538              		.loc 1 3949 13
 8539 0100 20001BE5 		ldr	r0, [fp, #-32]
 8540 0104 FEFFFFEB 		bl	RME_Hex_Print
3950:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nMask_Begin ");
 8541              		.loc 1 3950 13
 8542 0108 000000E3 		movw	r0, #:lower16:.LC14
 8543 010c 000040E3 		movt	r0, #:upper16:.LC14
 8544 0110 FEFFFFEB 		bl	RME_Str_Print
3951:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Mask_Begin);
 8545              		.loc 1 3951 13
 8546 0114 14001BE5 		ldr	r0, [fp, #-20]
 8547 0118 FEFFFFEB 		bl	RME_Hex_Print
3952:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nMask_End ");
 8548              		.loc 1 3952 13
 8549 011c 000000E3 		movw	r0, #:lower16:.LC15
 8550 0120 000040E3 		movt	r0, #:upper16:.LC15
 8551 0124 FEFFFFEB 		bl	RME_Str_Print
3953:../../Source/Kernel/rme_kernel.c ****             RME_DBG_H(Mask_End);
 8552              		.loc 1 3953 13
 8553 0128 1C001BE5 		ldr	r0, [fp, #-28]
 8554 012c FEFFFFEB 		bl	RME_Hex_Print
3954:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8555              		.loc 1 3954 20
 8556 0130 0030E0E3 		mvn	r3, #0
 8557 0134 9D0000EA 		b	.L544
 8558              	.L546:
3955:../../Source/Kernel/rme_kernel.c ****         }
3956:../../Source/Kernel/rme_kernel.c ****         else
3957:../../Source/Kernel/rme_kernel.c ****         {
3958:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3959:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3960:../../Source/Kernel/rme_kernel.c ****         }
3961:../../Source/Kernel/rme_kernel.c ****         
3962:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the marking with CAS */
3963:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8559              		.loc 1 3963 12
 8560 0138 10301BE5 		ldr	r3, [fp, #-16]
 8561 013c 0321A0E1 		lsl	r2, r3, #2
 8562 0140 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8563 0144 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8564 0148 030082E0 		add	r0, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 222


 8565 014c 14201BE5 		ldr	r2, [fp, #-20]
 8566 0150 1C301BE5 		ldr	r3, [fp, #-28]
 8567 0154 032002E0 		and	r2, r2, r3
 8568 0158 20301BE5 		ldr	r3, [fp, #-32]
 8569 015c 033082E1 		orr	r3, r2, r3
 8570 0160 0320A0E1 		mov	r2, r3
 8571 0164 20101BE5 		ldr	r1, [fp, #-32]
 8572 0168 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8573 016c 0030A0E1 		mov	r3, r0
 8574              		.loc 1 3963 11 discriminator 1
 8575 0170 000053E3 		cmp	r3, #0
 8576 0174 8C00001A 		bne	.L547
3964:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3965:../../Source/Kernel/rme_kernel.c ****                          Old_Val|(Mask_Begin&Mask_End))==RME_CASFAIL)
3966:../../Source/Kernel/rme_kernel.c ****         {
3967:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3968:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nCheck done, do the marking with CAS");
 8577              		.loc 1 3968 13
 8578 0178 000000E3 		movw	r0, #:lower16:.LC16
 8579 017c 000040E3 		movt	r0, #:upper16:.LC16
 8580 0180 FEFFFFEB 		bl	RME_Str_Print
3969:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8581              		.loc 1 3969 20
 8582 0184 0030E0E3 		mvn	r3, #0
 8583 0188 880000EA 		b	.L544
 8584              	.L545:
3970:../../Source/Kernel/rme_kernel.c ****         }
3971:../../Source/Kernel/rme_kernel.c ****         else
3972:../../Source/Kernel/rme_kernel.c ****         {
3973:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3974:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3975:../../Source/Kernel/rme_kernel.c ****         }
3976:../../Source/Kernel/rme_kernel.c ****     }
3977:../../Source/Kernel/rme_kernel.c ****     else
3978:../../Source/Kernel/rme_kernel.c ****     {
3979:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
3980:../../Source/Kernel/rme_kernel.c ****         
3981:../../Source/Kernel/rme_kernel.c ****         Undo=0U;
 8585              		.loc 1 3981 13
 8586 018c 0030A0E3 		mov	r3, #0
 8587 0190 0C300BE5 		str	r3, [fp, #-12]
3982:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the start */
3983:../../Source/Kernel/rme_kernel.c ****         Old_Val=RME_KOT_VA_BASE[Start];
 8588              		.loc 1 3983 16
 8589 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8590 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8591 019c 10201BE5 		ldr	r2, [fp, #-16]
 8592 01a0 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8593 01a4 20300BE5 		str	r3, [fp, #-32]
3984:../../Source/Kernel/rme_kernel.c ****         if((Old_Val&Mask_Begin)!=0U)
 8594              		.loc 1 3984 20
 8595 01a8 20201BE5 		ldr	r2, [fp, #-32]
 8596 01ac 14301BE5 		ldr	r3, [fp, #-20]
 8597 01b0 023003E0 		and	r3, r3, r2
 8598              		.loc 1 3984 11
 8599 01b4 000053E3 		cmp	r3, #0
 8600 01b8 0400000A 		beq	.L548
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 223


3985:../../Source/Kernel/rme_kernel.c ****         {
3986:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3987:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nCheck&Mark the start");
 8601              		.loc 1 3987 13
 8602 01bc 000000E3 		movw	r0, #:lower16:.LC17
 8603 01c0 000040E3 		movt	r0, #:upper16:.LC17
 8604 01c4 FEFFFFEB 		bl	RME_Str_Print
3988:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8605              		.loc 1 3988 20
 8606 01c8 0030E0E3 		mvn	r3, #0
 8607 01cc 770000EA 		b	.L544
 8608              	.L548:
3989:../../Source/Kernel/rme_kernel.c ****         }
3990:../../Source/Kernel/rme_kernel.c ****         else
3991:../../Source/Kernel/rme_kernel.c ****         {
3992:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
3993:../../Source/Kernel/rme_kernel.c ****             /* No action required */
3994:../../Source/Kernel/rme_kernel.c ****         }
3995:../../Source/Kernel/rme_kernel.c ****         
3996:../../Source/Kernel/rme_kernel.c ****         if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Start],
 8609              		.loc 1 3996 12
 8610 01d0 10301BE5 		ldr	r3, [fp, #-16]
 8611 01d4 0321A0E1 		lsl	r2, r3, #2
 8612 01d8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8613 01dc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8614 01e0 030082E0 		add	r0, r2, r3
 8615 01e4 20201BE5 		ldr	r2, [fp, #-32]
 8616 01e8 14301BE5 		ldr	r3, [fp, #-20]
 8617 01ec 033082E1 		orr	r3, r2, r3
 8618 01f0 0320A0E1 		mov	r2, r3
 8619 01f4 20101BE5 		ldr	r1, [fp, #-32]
 8620 01f8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8621 01fc 0030A0E1 		mov	r3, r0
 8622              		.loc 1 3996 11 discriminator 1
 8623 0200 000053E3 		cmp	r3, #0
 8624 0204 0400001A 		bne	.L549
3997:../../Source/Kernel/rme_kernel.c ****                          Old_Val,
3998:../../Source/Kernel/rme_kernel.c ****                          Old_Val|Mask_Begin)==RME_CASFAIL)
3999:../../Source/Kernel/rme_kernel.c ****         {
4000:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4001:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("\r\nRME_COMP_SWAP(&RME_KOT_VA_BASE[Start],");
 8625              		.loc 1 4001 13
 8626 0208 000000E3 		movw	r0, #:lower16:.LC18
 8627 020c 000040E3 		movt	r0, #:upper16:.LC18
 8628 0210 FEFFFFEB 		bl	RME_Str_Print
4002:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8629              		.loc 1 4002 20
 8630 0214 0030E0E3 		mvn	r3, #0
 8631 0218 640000EA 		b	.L544
 8632              	.L549:
4003:../../Source/Kernel/rme_kernel.c ****         }
4004:../../Source/Kernel/rme_kernel.c ****         else
4005:../../Source/Kernel/rme_kernel.c ****         {
4006:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4007:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4008:../../Source/Kernel/rme_kernel.c ****         }
4009:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 224


4010:../../Source/Kernel/rme_kernel.c ****         /* Check&Mark the middle */
4011:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End;Count++)
 8633              		.loc 1 4011 18
 8634 021c 10301BE5 		ldr	r3, [fp, #-16]
 8635 0220 013083E2 		add	r3, r3, #1
 8636 0224 08300BE5 		str	r3, [fp, #-8]
 8637              		.loc 1 4011 9
 8638 0228 1C0000EA 		b	.L550
 8639              	.L554:
4012:../../Source/Kernel/rme_kernel.c ****         {
4013:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[Count];
 8640              		.loc 1 4013 20
 8641 022c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8642 0230 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8643 0234 08201BE5 		ldr	r2, [fp, #-8]
 8644 0238 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8645 023c 20300BE5 		str	r3, [fp, #-32]
4014:../../Source/Kernel/rme_kernel.c ****             if(Old_Val!=0U)
 8646              		.loc 1 4014 15
 8647 0240 20301BE5 		ldr	r3, [fp, #-32]
 8648 0244 000053E3 		cmp	r3, #0
 8649 0248 0200000A 		beq	.L551
4015:../../Source/Kernel/rme_kernel.c ****             {
4016:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4017:../../Source/Kernel/rme_kernel.c **** 
4018:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8650              		.loc 1 4018 21
 8651 024c 0130A0E3 		mov	r3, #1
 8652 0250 0C300BE5 		str	r3, [fp, #-12]
4019:../../Source/Kernel/rme_kernel.c ****                 break;
 8653              		.loc 1 4019 17
 8654 0254 150000EA 		b	.L552
 8655              	.L551:
4020:../../Source/Kernel/rme_kernel.c ****             }
4021:../../Source/Kernel/rme_kernel.c ****             else
4022:../../Source/Kernel/rme_kernel.c ****             {
4023:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4024:../../Source/Kernel/rme_kernel.c ****                 
4025:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[Count],
 8656              		.loc 1 4025 20
 8657 0258 08301BE5 		ldr	r3, [fp, #-8]
 8658 025c 0321A0E1 		lsl	r2, r3, #2
 8659 0260 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8660 0264 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8661 0268 033082E0 		add	r3, r2, r3
 8662 026c 0020E0E3 		mvn	r2, #0
 8663 0270 20101BE5 		ldr	r1, [fp, #-32]
 8664 0274 0300A0E1 		mov	r0, r3
 8665 0278 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8666 027c 0030A0E1 		mov	r3, r0
 8667              		.loc 1 4025 19 discriminator 1
 8668 0280 000053E3 		cmp	r3, #0
 8669 0284 0200001A 		bne	.L553
4026:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4027:../../Source/Kernel/rme_kernel.c ****                                  RME_MASK_FULL)==RME_CASFAIL)
4028:../../Source/Kernel/rme_kernel.c ****                 {
4029:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 225


4030:../../Source/Kernel/rme_kernel.c ****                     
4031:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8670              		.loc 1 4031 25
 8671 0288 0130A0E3 		mov	r3, #1
 8672 028c 0C300BE5 		str	r3, [fp, #-12]
4032:../../Source/Kernel/rme_kernel.c ****                     break;
 8673              		.loc 1 4032 21
 8674 0290 060000EA 		b	.L552
 8675              	.L553:
4011:../../Source/Kernel/rme_kernel.c ****         {
 8676              		.loc 1 4011 43 discriminator 2
 8677 0294 08301BE5 		ldr	r3, [fp, #-8]
 8678 0298 013083E2 		add	r3, r3, #1
 8679 029c 08300BE5 		str	r3, [fp, #-8]
 8680              	.L550:
4011:../../Source/Kernel/rme_kernel.c ****         {
 8681              		.loc 1 4011 33 discriminator 1
 8682 02a0 08201BE5 		ldr	r2, [fp, #-8]
 8683 02a4 18301BE5 		ldr	r3, [fp, #-24]
 8684 02a8 030052E1 		cmp	r2, r3
 8685 02ac DEFFFF3A 		bcc	.L554
 8686              	.L552:
4033:../../Source/Kernel/rme_kernel.c ****                 }
4034:../../Source/Kernel/rme_kernel.c ****                 else
4035:../../Source/Kernel/rme_kernel.c ****                 {
4036:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4037:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4038:../../Source/Kernel/rme_kernel.c ****                 }
4039:../../Source/Kernel/rme_kernel.c ****             }
4040:../../Source/Kernel/rme_kernel.c ****         }
4041:../../Source/Kernel/rme_kernel.c ****         
4042:../../Source/Kernel/rme_kernel.c ****         /* See if the middle part failed. If yes, we skip the end marking */
4043:../../Source/Kernel/rme_kernel.c ****         if(Undo==0U)
 8687              		.loc 1 4043 11
 8688 02b0 0C301BE5 		ldr	r3, [fp, #-12]
 8689 02b4 000053E3 		cmp	r3, #0
 8690 02b8 1C00001A 		bne	.L555
4044:../../Source/Kernel/rme_kernel.c ****         {
4045:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4046:../../Source/Kernel/rme_kernel.c **** 
4047:../../Source/Kernel/rme_kernel.c ****             /* Check&Mark the end */
4048:../../Source/Kernel/rme_kernel.c ****             Old_Val=RME_KOT_VA_BASE[End];
 8691              		.loc 1 4048 20
 8692 02bc 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8693 02c0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8694 02c4 18201BE5 		ldr	r2, [fp, #-24]
 8695 02c8 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8696 02cc 20300BE5 		str	r3, [fp, #-32]
4049:../../Source/Kernel/rme_kernel.c ****             if((Old_Val&Mask_End)!=0U)
 8697              		.loc 1 4049 24
 8698 02d0 20201BE5 		ldr	r2, [fp, #-32]
 8699 02d4 1C301BE5 		ldr	r3, [fp, #-28]
 8700 02d8 023003E0 		and	r3, r3, r2
 8701              		.loc 1 4049 15
 8702 02dc 000053E3 		cmp	r3, #0
 8703 02e0 0200000A 		beq	.L556
4050:../../Source/Kernel/rme_kernel.c ****             {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 226


4051:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4052:../../Source/Kernel/rme_kernel.c **** 
4053:../../Source/Kernel/rme_kernel.c ****                 Undo=1U;
 8704              		.loc 1 4053 21
 8705 02e4 0130A0E3 		mov	r3, #1
 8706 02e8 0C300BE5 		str	r3, [fp, #-12]
 8707 02ec 0F0000EA 		b	.L555
 8708              	.L556:
4054:../../Source/Kernel/rme_kernel.c ****             }
4055:../../Source/Kernel/rme_kernel.c ****             else
4056:../../Source/Kernel/rme_kernel.c ****             {
4057:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4058:../../Source/Kernel/rme_kernel.c **** 
4059:../../Source/Kernel/rme_kernel.c ****                 if(RME_COMP_SWAP(&RME_KOT_VA_BASE[End],
 8709              		.loc 1 4059 20
 8710 02f0 18301BE5 		ldr	r3, [fp, #-24]
 8711 02f4 0321A0E1 		lsl	r2, r3, #2
 8712 02f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8713 02fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8714 0300 030082E0 		add	r0, r2, r3
 8715 0304 20201BE5 		ldr	r2, [fp, #-32]
 8716 0308 1C301BE5 		ldr	r3, [fp, #-28]
 8717 030c 033082E1 		orr	r3, r2, r3
 8718 0310 0320A0E1 		mov	r2, r3
 8719 0314 20101BE5 		ldr	r1, [fp, #-32]
 8720 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 8721 031c 0030A0E1 		mov	r3, r0
 8722              		.loc 1 4059 19 discriminator 1
 8723 0320 000053E3 		cmp	r3, #0
 8724 0324 0100001A 		bne	.L555
4060:../../Source/Kernel/rme_kernel.c ****                                  Old_Val,
4061:../../Source/Kernel/rme_kernel.c ****                                  Old_Val|Mask_End)==RME_CASFAIL)
4062:../../Source/Kernel/rme_kernel.c ****                 {
4063:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4064:../../Source/Kernel/rme_kernel.c **** 
4065:../../Source/Kernel/rme_kernel.c ****                     Undo=1U;
 8725              		.loc 1 4065 25
 8726 0328 0130A0E3 		mov	r3, #1
 8727 032c 0C300BE5 		str	r3, [fp, #-12]
 8728              	.L555:
4066:../../Source/Kernel/rme_kernel.c ****                 }
4067:../../Source/Kernel/rme_kernel.c ****                 else
4068:../../Source/Kernel/rme_kernel.c ****                 {
4069:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
4070:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
4071:../../Source/Kernel/rme_kernel.c ****                 }
4072:../../Source/Kernel/rme_kernel.c ****             }
4073:../../Source/Kernel/rme_kernel.c ****         }
4074:../../Source/Kernel/rme_kernel.c ****         else
4075:../../Source/Kernel/rme_kernel.c ****         {
4076:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4077:../../Source/Kernel/rme_kernel.c ****         }
4078:../../Source/Kernel/rme_kernel.c ****         
4079:../../Source/Kernel/rme_kernel.c ****         /* See if we need to undo. If yes, proceed to unroll and return error */
4080:../../Source/Kernel/rme_kernel.c ****         if(Undo!=0U)
 8729              		.loc 1 4080 11
 8730 0330 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 227


 8731 0334 000053E3 		cmp	r3, #0
 8732 0338 1B00000A 		beq	.L547
4081:../../Source/Kernel/rme_kernel.c ****         {
4082:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4083:../../Source/Kernel/rme_kernel.c **** 
4084:../../Source/Kernel/rme_kernel.c ****             /* Undo the middle part - no CAS neeeded, write back is always atomic */
4085:../../Source/Kernel/rme_kernel.c ****             for(Count--;Count>Start;Count--)
 8733              		.loc 1 4085 22
 8734 033c 08301BE5 		ldr	r3, [fp, #-8]
 8735 0340 013043E2 		sub	r3, r3, #1
 8736 0344 08300BE5 		str	r3, [fp, #-8]
 8737              		.loc 1 4085 13
 8738 0348 070000EA 		b	.L557
 8739              	.L558:
4086:../../Source/Kernel/rme_kernel.c ****             {
4087:../../Source/Kernel/rme_kernel.c ****                 RME_KOT_VA_BASE[Count]=0U;
 8740              		.loc 1 4087 39
 8741 034c 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8742 0350 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8743 0354 08201BE5 		ldr	r2, [fp, #-8]
 8744 0358 0010A0E3 		mov	r1, #0
 8745 035c 021183E7 		str	r1, [r3, r2, lsl #2]
4085:../../Source/Kernel/rme_kernel.c ****             {
 8746              		.loc 1 4085 42 discriminator 3
 8747 0360 08301BE5 		ldr	r3, [fp, #-8]
 8748 0364 013043E2 		sub	r3, r3, #1
 8749 0368 08300BE5 		str	r3, [fp, #-8]
 8750              	.L557:
4085:../../Source/Kernel/rme_kernel.c ****             {
 8751              		.loc 1 4085 30 discriminator 1
 8752 036c 08201BE5 		ldr	r2, [fp, #-8]
 8753 0370 10301BE5 		ldr	r3, [fp, #-16]
 8754 0374 030052E1 		cmp	r2, r3
 8755 0378 F3FFFF8A 		bhi	.L558
4088:../../Source/Kernel/rme_kernel.c ****             }
4089:../../Source/Kernel/rme_kernel.c ****             /* Undo the first word - need atomic instructions */
4090:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8756              		.loc 1 4090 13
 8757 037c 10301BE5 		ldr	r3, [fp, #-16]
 8758 0380 0321A0E1 		lsl	r2, r3, #2
 8759 0384 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8760 0388 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8761 038c 032082E0 		add	r2, r2, r3
 8762 0390 14301BE5 		ldr	r3, [fp, #-20]
 8763 0394 0330E0E1 		mvn	r3, r3
 8764 0398 0310A0E1 		mov	r1, r3
 8765 039c 0200A0E1 		mov	r0, r2
 8766 03a0 FEFFFFEB 		bl	_RME_Fetch_And_Single
4091:../../Source/Kernel/rme_kernel.c ****             /* Return failure */
4092:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8767              		.loc 1 4092 20
 8768 03a4 0030E0E3 		mvn	r3, #0
 8769 03a8 000000EA 		b	.L544
 8770              	.L547:
4093:../../Source/Kernel/rme_kernel.c ****         }
4094:../../Source/Kernel/rme_kernel.c ****         else
4095:../../Source/Kernel/rme_kernel.c ****         {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 228


4096:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4097:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4098:../../Source/Kernel/rme_kernel.c ****         }
4099:../../Source/Kernel/rme_kernel.c ****     }
4100:../../Source/Kernel/rme_kernel.c **** 
4101:../../Source/Kernel/rme_kernel.c ****     return 0;
 8771              		.loc 1 4101 12
 8772 03ac 0030A0E3 		mov	r3, #0
 8773              	.L544:
4102:../../Source/Kernel/rme_kernel.c **** }
 8774              		.loc 1 4102 1
 8775 03b0 0300A0E1 		mov	r0, r3
 8776 03b4 04D04BE2 		sub	sp, fp, #4
 8777              		.cfi_def_cfa 13, 8
 8778              		@ sp needed
 8779 03b8 0088BDE8 		pop	{fp, pc}
 8780              		.cfi_endproc
 8781              	.LFE39:
 8783              		.section	.text._RME_Kot_Erase,"ax",%progbits
 8784              		.align	2
 8785              		.global	_RME_Kot_Erase
 8786              		.syntax unified
 8787              		.arm
 8789              	_RME_Kot_Erase:
 8790              	.LFB40:
4103:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Mark ************************************************/
4104:../../Source/Kernel/rme_kernel.c **** 
4105:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kot_Erase ****************************************************
4106:../../Source/Kernel/rme_kernel.c **** Description : Depopulate the kernel object bitmap contiguously. We do not need 
4107:../../Source/Kernel/rme_kernel.c ****               CAS on erasure operations.
4108:../../Source/Kernel/rme_kernel.c **** Input       : rme_ptr_t Kaddr - The kernel virtual address.
4109:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Size - The size of the memory to depopulate.
4110:../../Source/Kernel/rme_kernel.c **** Output      : None.
4111:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4112:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4113:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kot_Erase(rme_ptr_t Kaddr,
4114:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t Size)
4115:../../Source/Kernel/rme_kernel.c **** {
 8791              		.loc 1 4115 1
 8792              		.cfi_startproc
 8793              		@ args = 0, pretend = 0, frame = 32
 8794              		@ frame_needed = 1, uses_anonymous_args = 0
 8795 0000 00482DE9 		push	{fp, lr}
 8796              		.cfi_def_cfa_offset 8
 8797              		.cfi_offset 11, -8
 8798              		.cfi_offset 14, -4
 8799 0004 04B08DE2 		add	fp, sp, #4
 8800              		.cfi_def_cfa 11, 4
 8801 0008 20D04DE2 		sub	sp, sp, #32
 8802 000c 20000BE5 		str	r0, [fp, #-32]
 8803 0010 24100BE5 		str	r1, [fp, #-36]
4116:../../Source/Kernel/rme_kernel.c ****     /* The actual word to start the marking */
4117:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Start;
4118:../../Source/Kernel/rme_kernel.c ****     /* The actual word to end the marking */
4119:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
4120:../../Source/Kernel/rme_kernel.c ****     /* The mask at the begin word */
4121:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_Begin;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 229


4122:../../Source/Kernel/rme_kernel.c ****     /* The mask at the end word */
4123:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Mask_End;
4124:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
4125:../../Source/Kernel/rme_kernel.c **** 
4126:../../Source/Kernel/rme_kernel.c ****     /* Check if the marking is well aligned */
4127:../../Source/Kernel/rme_kernel.c ****     if((Kaddr&RME_MASK_END(RME_KOM_SLOT_ORDER-1U))!=0U)
 8804              		.loc 1 4127 14
 8805 0014 20301BE5 		ldr	r3, [fp, #-32]
 8806 0018 0F3003E2 		and	r3, r3, #15
 8807              		.loc 1 4127 7
 8808 001c 000053E3 		cmp	r3, #0
 8809 0020 0100000A 		beq	.L560
4128:../../Source/Kernel/rme_kernel.c ****     {
4129:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4130:../../Source/Kernel/rme_kernel.c **** 
4131:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_KOT_BMP;
 8810              		.loc 1 4131 16
 8811 0024 0030E0E3 		mvn	r3, #0
 8812 0028 8A0000EA 		b	.L561
 8813              	.L560:
4132:../../Source/Kernel/rme_kernel.c ****     }
4133:../../Source/Kernel/rme_kernel.c ****     else
4134:../../Source/Kernel/rme_kernel.c ****     {
4135:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4136:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4137:../../Source/Kernel/rme_kernel.c ****     }
4138:../../Source/Kernel/rme_kernel.c ****     
4139:../../Source/Kernel/rme_kernel.c ****     /* Round the marking to RME_KOM_SLOT_ORDER boundary, and rely on compiler for optimization */
4140:../../Source/Kernel/rme_kernel.c ****     Start=(Kaddr-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8814              		.loc 1 4140 17
 8815 002c 20301BE5 		ldr	r3, [fp, #-32]
 8816 0030 7F3483E2 		add	r3, r3, #2130706432
 8817              		.loc 1 4140 10
 8818 0034 2332A0E1 		lsr	r3, r3, #4
 8819 0038 0C300BE5 		str	r3, [fp, #-12]
4141:../../Source/Kernel/rme_kernel.c ****     Mask_Begin=RME_MASK_BEGIN(Start&RME_MASK_END(RME_WORD_ORDER-1U));
 8820              		.loc 1 4141 16
 8821 003c 0C301BE5 		ldr	r3, [fp, #-12]
 8822 0040 1F3003E2 		and	r3, r3, #31
 8823              		.loc 1 4141 15
 8824 0044 0020E0E3 		mvn	r2, #0
 8825 0048 1233A0E1 		lsl	r3, r2, r3
 8826 004c 10300BE5 		str	r3, [fp, #-16]
4142:../../Source/Kernel/rme_kernel.c ****     Start=Start>>RME_WORD_ORDER;
 8827              		.loc 1 4142 10
 8828 0050 0C301BE5 		ldr	r3, [fp, #-12]
 8829 0054 A332A0E1 		lsr	r3, r3, #5
 8830 0058 0C300BE5 		str	r3, [fp, #-12]
4143:../../Source/Kernel/rme_kernel.c ****     
4144:../../Source/Kernel/rme_kernel.c ****     End=(Kaddr+Size-1U-RME_KOM_VA_BASE)>>RME_KOM_SLOT_ORDER;
 8831              		.loc 1 4144 15
 8832 005c 20201BE5 		ldr	r2, [fp, #-32]
 8833 0060 24301BE5 		ldr	r3, [fp, #-36]
 8834 0064 033082E0 		add	r3, r2, r3
 8835              		.loc 1 4144 23
 8836 0068 7F3483E2 		add	r3, r3, #2130706432
 8837 006c 013043E2 		sub	r3, r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 230


 8838              		.loc 1 4144 8
 8839 0070 2332A0E1 		lsr	r3, r3, #4
 8840 0074 14300BE5 		str	r3, [fp, #-20]
4145:../../Source/Kernel/rme_kernel.c ****     Mask_End=RME_MASK_END(End&RME_MASK_END(RME_WORD_ORDER-1U));
 8841              		.loc 1 4145 14
 8842 0078 14301BE5 		ldr	r3, [fp, #-20]
 8843 007c 0330E0E1 		mvn	r3, r3
 8844 0080 1F3003E2 		and	r3, r3, #31
 8845              		.loc 1 4145 13
 8846 0084 0020E0E3 		mvn	r2, #0
 8847 0088 3233A0E1 		lsr	r3, r2, r3
 8848 008c 18300BE5 		str	r3, [fp, #-24]
4146:../../Source/Kernel/rme_kernel.c ****     End=End>>RME_WORD_ORDER;
 8849              		.loc 1 4146 8
 8850 0090 14301BE5 		ldr	r3, [fp, #-20]
 8851 0094 A332A0E1 		lsr	r3, r3, #5
 8852 0098 14300BE5 		str	r3, [fp, #-20]
4147:../../Source/Kernel/rme_kernel.c ****     
4148:../../Source/Kernel/rme_kernel.c ****     /* See if the start and end are in the same word */
4149:../../Source/Kernel/rme_kernel.c ****     if(Start==End)
 8853              		.loc 1 4149 7
 8854 009c 0C201BE5 		ldr	r2, [fp, #-12]
 8855 00a0 14301BE5 		ldr	r3, [fp, #-20]
 8856 00a4 030052E1 		cmp	r2, r3
 8857 00a8 1A00001A 		bne	.L562
4150:../../Source/Kernel/rme_kernel.c ****     {
4151:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4152:../../Source/Kernel/rme_kernel.c **** 
4153:../../Source/Kernel/rme_kernel.c ****         /* This address range is not fully populated */
4154:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&(Mask_Begin&Mask_End))!=(Mask_Begin&Mask_End))
 8858              		.loc 1 4154 28
 8859 00ac 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8860 00b0 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8861 00b4 0C201BE5 		ldr	r2, [fp, #-12]
 8862 00b8 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8863              		.loc 1 4154 47
 8864 00bc 10101BE5 		ldr	r1, [fp, #-16]
 8865 00c0 18301BE5 		ldr	r3, [fp, #-24]
 8866 00c4 013003E0 		and	r3, r3, r1
 8867              		.loc 1 4154 35
 8868 00c8 032002E0 		and	r2, r2, r3
 8869              		.loc 1 4154 71
 8870 00cc 10101BE5 		ldr	r1, [fp, #-16]
 8871 00d0 18301BE5 		ldr	r3, [fp, #-24]
 8872 00d4 013003E0 		and	r3, r3, r1
 8873              		.loc 1 4154 11
 8874 00d8 030052E1 		cmp	r2, r3
 8875 00dc 0100000A 		beq	.L563
4155:../../Source/Kernel/rme_kernel.c ****         {
4156:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4157:../../Source/Kernel/rme_kernel.c **** 
4158:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8876              		.loc 1 4158 20
 8877 00e0 0030E0E3 		mvn	r3, #0
 8878 00e4 5B0000EA 		b	.L561
 8879              	.L563:
4159:../../Source/Kernel/rme_kernel.c ****         }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 231


4160:../../Source/Kernel/rme_kernel.c ****         else
4161:../../Source/Kernel/rme_kernel.c ****         {
4162:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4163:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4164:../../Source/Kernel/rme_kernel.c ****         }
4165:../../Source/Kernel/rme_kernel.c **** 
4166:../../Source/Kernel/rme_kernel.c ****         /* Check done, do the unmarking - need atomic operations */
4167:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~(Mask_Begin&Mask_End));
 8880              		.loc 1 4167 9
 8881 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 8882 00ec 0321A0E1 		lsl	r2, r3, #2
 8883 00f0 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8884 00f4 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8885 00f8 030082E0 		add	r0, r2, r3
 8886 00fc 10201BE5 		ldr	r2, [fp, #-16]
 8887 0100 18301BE5 		ldr	r3, [fp, #-24]
 8888 0104 023003E0 		and	r3, r3, r2
 8889 0108 0330E0E1 		mvn	r3, r3
 8890 010c 0310A0E1 		mov	r1, r3
 8891 0110 FEFFFFEB 		bl	_RME_Fetch_And_Single
 8892 0114 4E0000EA 		b	.L564
 8893              	.L562:
4168:../../Source/Kernel/rme_kernel.c ****     }
4169:../../Source/Kernel/rme_kernel.c ****     else
4170:../../Source/Kernel/rme_kernel.c ****     {
4171:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4172:../../Source/Kernel/rme_kernel.c **** 
4173:../../Source/Kernel/rme_kernel.c ****         /* Check the start */
4174:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[Start]&Mask_Begin)!=Mask_Begin)
 8894              		.loc 1 4174 28
 8895 0118 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8896 011c 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8897 0120 0C201BE5 		ldr	r2, [fp, #-12]
 8898 0124 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8899              		.loc 1 4174 35
 8900 0128 10301BE5 		ldr	r3, [fp, #-16]
 8901 012c 023003E0 		and	r3, r3, r2
 8902              		.loc 1 4174 11
 8903 0130 10201BE5 		ldr	r2, [fp, #-16]
 8904 0134 030052E1 		cmp	r2, r3
 8905 0138 0100000A 		beq	.L565
4175:../../Source/Kernel/rme_kernel.c ****         {
4176:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4177:../../Source/Kernel/rme_kernel.c **** 
4178:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8906              		.loc 1 4178 20
 8907 013c 0030E0E3 		mvn	r3, #0
 8908 0140 440000EA 		b	.L561
 8909              	.L565:
4179:../../Source/Kernel/rme_kernel.c ****         }
4180:../../Source/Kernel/rme_kernel.c ****         else
4181:../../Source/Kernel/rme_kernel.c ****         {
4182:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4183:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4184:../../Source/Kernel/rme_kernel.c ****         }
4185:../../Source/Kernel/rme_kernel.c ****         
4186:../../Source/Kernel/rme_kernel.c ****         /* Check the middle */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 232


4187:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8910              		.loc 1 4187 18
 8911 0144 0C301BE5 		ldr	r3, [fp, #-12]
 8912 0148 013083E2 		add	r3, r3, #1
 8913 014c 08300BE5 		str	r3, [fp, #-8]
 8914              		.loc 1 4187 9
 8915 0150 0A0000EA 		b	.L566
 8916              	.L568:
4188:../../Source/Kernel/rme_kernel.c ****         {
4189:../../Source/Kernel/rme_kernel.c ****             if(RME_KOT_VA_BASE[Count]!=RME_MASK_FULL)
 8917              		.loc 1 4189 31
 8918 0154 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8919 0158 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8920 015c 08201BE5 		ldr	r2, [fp, #-8]
 8921 0160 023193E7 		ldr	r3, [r3, r2, lsl #2]
 8922              		.loc 1 4189 15
 8923 0164 010073E3 		cmn	r3, #1
 8924 0168 0100000A 		beq	.L567
4190:../../Source/Kernel/rme_kernel.c ****             {
4191:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4192:../../Source/Kernel/rme_kernel.c **** 
4193:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_KOT_BMP;
 8925              		.loc 1 4193 24
 8926 016c 0030E0E3 		mvn	r3, #0
 8927 0170 380000EA 		b	.L561
 8928              	.L567:
4187:../../Source/Kernel/rme_kernel.c ****         {
 8929              		.loc 1 4187 46 discriminator 2
 8930 0174 08301BE5 		ldr	r3, [fp, #-8]
 8931 0178 013083E2 		add	r3, r3, #1
 8932 017c 08300BE5 		str	r3, [fp, #-8]
 8933              	.L566:
4187:../../Source/Kernel/rme_kernel.c ****         {
 8934              		.loc 1 4187 37 discriminator 1
 8935 0180 14301BE5 		ldr	r3, [fp, #-20]
 8936 0184 013043E2 		sub	r3, r3, #1
4187:../../Source/Kernel/rme_kernel.c ****         {
 8937              		.loc 1 4187 33 discriminator 1
 8938 0188 08201BE5 		ldr	r2, [fp, #-8]
 8939 018c 030052E1 		cmp	r2, r3
 8940 0190 EFFFFF3A 		bcc	.L568
4194:../../Source/Kernel/rme_kernel.c ****             }
4195:../../Source/Kernel/rme_kernel.c ****             else
4196:../../Source/Kernel/rme_kernel.c ****             {
4197:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
4198:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
4199:../../Source/Kernel/rme_kernel.c ****             }
4200:../../Source/Kernel/rme_kernel.c ****         }
4201:../../Source/Kernel/rme_kernel.c **** 
4202:../../Source/Kernel/rme_kernel.c ****         /* Check the end */
4203:../../Source/Kernel/rme_kernel.c ****         if((RME_KOT_VA_BASE[End]&Mask_End)!=Mask_End)
 8941              		.loc 1 4203 28
 8942 0194 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8943 0198 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8944 019c 14201BE5 		ldr	r2, [fp, #-20]
 8945 01a0 022193E7 		ldr	r2, [r3, r2, lsl #2]
 8946              		.loc 1 4203 33
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 233


 8947 01a4 18301BE5 		ldr	r3, [fp, #-24]
 8948 01a8 023003E0 		and	r3, r3, r2
 8949              		.loc 1 4203 11
 8950 01ac 18201BE5 		ldr	r2, [fp, #-24]
 8951 01b0 030052E1 		cmp	r2, r3
 8952 01b4 0100000A 		beq	.L569
4204:../../Source/Kernel/rme_kernel.c ****         {
4205:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4206:../../Source/Kernel/rme_kernel.c **** 
4207:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_KOT_BMP;
 8953              		.loc 1 4207 20
 8954 01b8 0030E0E3 		mvn	r3, #0
 8955 01bc 250000EA 		b	.L561
 8956              	.L569:
4208:../../Source/Kernel/rme_kernel.c ****         }
4209:../../Source/Kernel/rme_kernel.c ****         else
4210:../../Source/Kernel/rme_kernel.c ****         {
4211:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4212:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4213:../../Source/Kernel/rme_kernel.c ****         }
4214:../../Source/Kernel/rme_kernel.c ****         
4215:../../Source/Kernel/rme_kernel.c ****         /* Erase the start - make it atomic */
4216:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[Start]),~Mask_Begin);
 8957              		.loc 1 4216 9
 8958 01c0 0C301BE5 		ldr	r3, [fp, #-12]
 8959 01c4 0321A0E1 		lsl	r2, r3, #2
 8960 01c8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8961 01cc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8962 01d0 032082E0 		add	r2, r2, r3
 8963 01d4 10301BE5 		ldr	r3, [fp, #-16]
 8964 01d8 0330E0E1 		mvn	r3, r3
 8965 01dc 0310A0E1 		mov	r1, r3
 8966 01e0 0200A0E1 		mov	r0, r2
 8967 01e4 FEFFFFEB 		bl	_RME_Fetch_And_Single
4217:../../Source/Kernel/rme_kernel.c ****         /* Erase the middle - do not need atomics here */
4218:../../Source/Kernel/rme_kernel.c ****         for(Count=Start+1U;Count<End-1U;Count++)
 8968              		.loc 1 4218 18
 8969 01e8 0C301BE5 		ldr	r3, [fp, #-12]
 8970 01ec 013083E2 		add	r3, r3, #1
 8971 01f0 08300BE5 		str	r3, [fp, #-8]
 8972              		.loc 1 4218 9
 8973 01f4 070000EA 		b	.L570
 8974              	.L571:
4219:../../Source/Kernel/rme_kernel.c ****         {
4220:../../Source/Kernel/rme_kernel.c ****             RME_KOT_VA_BASE[Count]=0U;
 8975              		.loc 1 4220 35
 8976 01f8 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8977 01fc 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8978 0200 08201BE5 		ldr	r2, [fp, #-8]
 8979 0204 0010A0E3 		mov	r1, #0
 8980 0208 021183E7 		str	r1, [r3, r2, lsl #2]
4218:../../Source/Kernel/rme_kernel.c ****         {
 8981              		.loc 1 4218 46 discriminator 3
 8982 020c 08301BE5 		ldr	r3, [fp, #-8]
 8983 0210 013083E2 		add	r3, r3, #1
 8984 0214 08300BE5 		str	r3, [fp, #-8]
 8985              	.L570:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 234


4218:../../Source/Kernel/rme_kernel.c ****         {
 8986              		.loc 1 4218 37 discriminator 1
 8987 0218 14301BE5 		ldr	r3, [fp, #-20]
 8988 021c 013043E2 		sub	r3, r3, #1
4218:../../Source/Kernel/rme_kernel.c ****         {
 8989              		.loc 1 4218 33 discriminator 1
 8990 0220 08201BE5 		ldr	r2, [fp, #-8]
 8991 0224 030052E1 		cmp	r2, r3
 8992 0228 F2FFFF3A 		bcc	.L571
4221:../../Source/Kernel/rme_kernel.c ****         }
4222:../../Source/Kernel/rme_kernel.c ****         /* Erase the end - make it atomic */
4223:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_AND(&(RME_KOT_VA_BASE[End]),~Mask_End);
 8993              		.loc 1 4223 9
 8994 022c 14301BE5 		ldr	r3, [fp, #-20]
 8995 0230 0321A0E1 		lsl	r2, r3, #2
 8996 0234 003000E3 		movw	r3, #:lower16:RME_A7A_Kot
 8997 0238 003040E3 		movt	r3, #:upper16:RME_A7A_Kot
 8998 023c 032082E0 		add	r2, r2, r3
 8999 0240 18301BE5 		ldr	r3, [fp, #-24]
 9000 0244 0330E0E1 		mvn	r3, r3
 9001 0248 0310A0E1 		mov	r1, r3
 9002 024c 0200A0E1 		mov	r0, r2
 9003 0250 FEFFFFEB 		bl	_RME_Fetch_And_Single
 9004              	.L564:
4224:../../Source/Kernel/rme_kernel.c ****     }
4225:../../Source/Kernel/rme_kernel.c **** 
4226:../../Source/Kernel/rme_kernel.c ****     return 0;
 9005              		.loc 1 4226 12
 9006 0254 0030A0E3 		mov	r3, #0
 9007              	.L561:
4227:../../Source/Kernel/rme_kernel.c **** }
 9008              		.loc 1 4227 1
 9009 0258 0300A0E1 		mov	r0, r3
 9010 025c 04D04BE2 		sub	sp, fp, #4
 9011              		.cfi_def_cfa 13, 8
 9012              		@ sp needed
 9013 0260 0088BDE8 		pop	{fp, pc}
 9014              		.cfi_endproc
 9015              	.LFE40:
 9017              		.section	.text._RME_Kom_Boot_Crt,"ax",%progbits
 9018              		.align	2
 9019              		.global	_RME_Kom_Boot_Crt
 9020              		.syntax unified
 9021              		.arm
 9023              	_RME_Kom_Boot_Crt:
 9024              	.LFB41:
4228:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kot_Erase ***********************************************/
4229:../../Source/Kernel/rme_kernel.c **** 
4230:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kom_Boot_Crt *************************************************
4231:../../Source/Kernel/rme_kernel.c **** Description : Create boot-time kernel memory capability. Kernel memory allow
4232:../../Source/Kernel/rme_kernel.c ****               you to create specific types of kernel objects in a specific 
4233:../../Source/Kernel/rme_kernel.c ****               kernel memory range. The initial kernel memory capability's
4234:../../Source/Kernel/rme_kernel.c ****               content is supplied by the kernel according to config.
4235:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4236:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
4237:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
4238:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 235


4239:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The capability to the kernel memory.
4240:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4241:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Begin - The begin address of the kernel memory, aligned
4242:../../Source/Kernel/rme_kernel.c ****                                 to kotbl granularity.
4243:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t End - The end address of the kernel memory, aligned to
4244:../../Source/Kernel/rme_kernel.c ****                               kotbl granularity, then -1.
4245:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Flag - The operation flags for this kernel memory. Set
4246:../../Source/Kernel/rme_kernel.c ****                                acoording to your needs.
4247:../../Source/Kernel/rme_kernel.c **** Output      : None.
4248:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4249:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4250:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kom_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4251:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4252:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kom,
4253:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Begin,
4254:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t End,
4255:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Flag)
4256:../../Source/Kernel/rme_kernel.c **** {
 9025              		.loc 1 4256 1
 9026              		.cfi_startproc
 9027              		@ args = 8, pretend = 0, frame = 40
 9028              		@ frame_needed = 1, uses_anonymous_args = 0
 9029 0000 00482DE9 		push	{fp, lr}
 9030              		.cfi_def_cfa_offset 8
 9031              		.cfi_offset 11, -8
 9032              		.cfi_offset 14, -4
 9033 0004 04B08DE2 		add	fp, sp, #4
 9034              		.cfi_def_cfa 11, 4
 9035 0008 28D04DE2 		sub	sp, sp, #40
 9036 000c 20000BE5 		str	r0, [fp, #-32]
 9037 0010 24100BE5 		str	r1, [fp, #-36]
 9038 0014 28200BE5 		str	r2, [fp, #-40]
 9039 0018 2C300BE5 		str	r3, [fp, #-44]
4257:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4258:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kom* Kom_Crt;
4259:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_Begin;
4260:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Kom_End;
4261:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4262:../../Source/Kernel/rme_kernel.c ****     
4263:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
4264:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 9040              		.loc 1 4264 5
 9041 001c 24301BE5 		ldr	r3, [fp, #-36]
 9042 0020 803003E2 		and	r3, r3, #128
 9043 0024 000053E3 		cmp	r3, #0
 9044 0028 1C00001A 		bne	.L573
 9045              		.loc 1 4264 5 is_stmt 0 discriminator 1
 9046 002c 20301BE5 		ldr	r3, [fp, #-32]
 9047 0030 142093E5 		ldr	r2, [r3, #20]
 9048 0034 24301BE5 		ldr	r3, [fp, #-36]
 9049 0038 030052E1 		cmp	r2, r3
 9050 003c 0100008A 		bhi	.L574
 9051              		.loc 1 4264 5 discriminator 3
 9052 0040 0230E0E3 		mvn	r3, #2
 9053              		.loc 1 4264 5
 9054 0044 9F0000EA 		b	.L575
 9055              	.L574:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 236


 9056              		.loc 1 4264 5 discriminator 4
 9057 0048 24301BE5 		ldr	r3, [fp, #-36]
 9058 004c 8322A0E1 		lsl	r2, r3, #5
 9059 0050 20301BE5 		ldr	r3, [fp, #-32]
 9060 0054 0C3093E5 		ldr	r3, [r3, #12]
 9061 0058 033082E0 		add	r3, r2, r3
 9062 005c 08300BE5 		str	r3, [fp, #-8]
 9063 0060 08301BE5 		ldr	r3, [fp, #-8]
 9064 0064 0300A0E1 		mov	r0, r3
 9065 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9066 006c 0C000BE5 		str	r0, [fp, #-12]
 9067              		.loc 1 4264 5 discriminator 1
 9068 0070 0C301BE5 		ldr	r3, [fp, #-12]
 9069 0074 FF3803E2 		and	r3, r3, #16711680
 9070 0078 020853E3 		cmp	r3, #131072
 9071 007c 0100001A 		bne	.L576
 9072              		.loc 1 4264 5 discriminator 5
 9073 0080 0830E0E3 		mvn	r3, #8
 9074              		.loc 1 4264 5
 9075 0084 8F0000EA 		b	.L575
 9076              	.L576:
 9077              		.loc 1 4264 5 discriminator 6
 9078 0088 0C301BE5 		ldr	r3, [fp, #-12]
 9079 008c 233CA0E1 		lsr	r3, r3, #24
 9080 0090 030053E3 		cmp	r3, #3
 9081 0094 3F00000A 		beq	.L577
 9082              		.loc 1 4264 5 discriminator 7
 9083 0098 0130E0E3 		mvn	r3, #1
 9084              		.loc 1 4264 5
 9085 009c 890000EA 		b	.L575
 9086              	.L573:
 9087              		.loc 1 4264 5 discriminator 2
 9088 00a0 24301BE5 		ldr	r3, [fp, #-36]
 9089 00a4 2324A0E1 		lsr	r2, r3, #8
 9090 00a8 20301BE5 		ldr	r3, [fp, #-32]
 9091 00ac 143093E5 		ldr	r3, [r3, #20]
 9092 00b0 030052E1 		cmp	r2, r3
 9093 00b4 0100003A 		bcc	.L578
 9094              		.loc 1 4264 5 discriminator 8
 9095 00b8 0230E0E3 		mvn	r3, #2
 9096              		.loc 1 4264 5
 9097 00bc 810000EA 		b	.L575
 9098              	.L578:
 9099              		.loc 1 4264 5 discriminator 9
 9100 00c0 24301BE5 		ldr	r3, [fp, #-36]
 9101 00c4 2334A0E1 		lsr	r3, r3, #8
 9102 00c8 8322A0E1 		lsl	r2, r3, #5
 9103 00cc 20301BE5 		ldr	r3, [fp, #-32]
 9104 00d0 0C3093E5 		ldr	r3, [r3, #12]
 9105 00d4 033082E0 		add	r3, r2, r3
 9106 00d8 08300BE5 		str	r3, [fp, #-8]
 9107 00dc 08301BE5 		ldr	r3, [fp, #-8]
 9108 00e0 0300A0E1 		mov	r0, r3
 9109 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9110 00e8 0C000BE5 		str	r0, [fp, #-12]
 9111              		.loc 1 4264 5 discriminator 1
 9112 00ec 0C301BE5 		ldr	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 237


 9113 00f0 FF3803E2 		and	r3, r3, #16711680
 9114 00f4 020853E3 		cmp	r3, #131072
 9115 00f8 0100001A 		bne	.L579
 9116              		.loc 1 4264 5 discriminator 10
 9117 00fc 0830E0E3 		mvn	r3, #8
 9118              		.loc 1 4264 5
 9119 0100 700000EA 		b	.L575
 9120              	.L579:
 9121              		.loc 1 4264 5 discriminator 11
 9122 0104 0C301BE5 		ldr	r3, [fp, #-12]
 9123 0108 233CA0E1 		lsr	r3, r3, #24
 9124 010c 030053E3 		cmp	r3, #3
 9125 0110 0100000A 		beq	.L580
 9126              		.loc 1 4264 5 discriminator 12
 9127 0114 0130E0E3 		mvn	r3, #1
 9128              		.loc 1 4264 5
 9129 0118 6A0000EA 		b	.L575
 9130              	.L580:
 9131              		.loc 1 4264 5 discriminator 13
 9132 011c 24301BE5 		ldr	r3, [fp, #-36]
 9133 0120 7F2003E2 		and	r2, r3, #127
 9134 0124 08301BE5 		ldr	r3, [fp, #-8]
 9135 0128 143093E5 		ldr	r3, [r3, #20]
 9136 012c 030052E1 		cmp	r2, r3
 9137 0130 0100003A 		bcc	.L581
 9138              		.loc 1 4264 5 discriminator 14
 9139 0134 0230E0E3 		mvn	r3, #2
 9140              		.loc 1 4264 5
 9141 0138 620000EA 		b	.L575
 9142              	.L581:
 9143              		.loc 1 4264 5 discriminator 15
 9144 013c 24301BE5 		ldr	r3, [fp, #-36]
 9145 0140 7F3003E2 		and	r3, r3, #127
 9146 0144 8322A0E1 		lsl	r2, r3, #5
 9147 0148 08301BE5 		ldr	r3, [fp, #-8]
 9148 014c 0C3093E5 		ldr	r3, [r3, #12]
 9149 0150 033082E0 		add	r3, r2, r3
 9150 0154 08300BE5 		str	r3, [fp, #-8]
 9151 0158 08301BE5 		ldr	r3, [fp, #-8]
 9152 015c 0300A0E1 		mov	r0, r3
 9153 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 9154 0164 0C000BE5 		str	r0, [fp, #-12]
 9155              		.loc 1 4264 5 discriminator 1
 9156 0168 0C301BE5 		ldr	r3, [fp, #-12]
 9157 016c FF3803E2 		and	r3, r3, #16711680
 9158 0170 020853E3 		cmp	r3, #131072
 9159 0174 0100001A 		bne	.L582
 9160              		.loc 1 4264 5 discriminator 16
 9161 0178 0830E0E3 		mvn	r3, #8
 9162              		.loc 1 4264 5
 9163 017c 510000EA 		b	.L575
 9164              	.L582:
 9165              		.loc 1 4264 5 discriminator 17
 9166 0180 0C301BE5 		ldr	r3, [fp, #-12]
 9167 0184 233CA0E1 		lsr	r3, r3, #24
 9168 0188 030053E3 		cmp	r3, #3
 9169 018c 0100000A 		beq	.L577
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 238


 9170              		.loc 1 4264 5 discriminator 18
 9171 0190 0130E0E3 		mvn	r3, #1
 9172              		.loc 1 4264 5
 9173 0194 4B0000EA 		b	.L575
 9174              	.L577:
4265:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4266:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4267:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 9175              		.loc 1 4267 5 is_stmt 1
 9176 0198 08301BE5 		ldr	r3, [fp, #-8]
 9177 019c 083093E5 		ldr	r3, [r3, #8]
 9178 01a0 013003E2 		and	r3, r3, #1
 9179 01a4 000053E3 		cmp	r3, #0
 9180 01a8 0100001A 		bne	.L583
 9181              		.loc 1 4267 5 is_stmt 0 discriminator 1
 9182 01ac 0630E0E3 		mvn	r3, #6
 9183              		.loc 1 4267 5
 9184 01b0 440000EA 		b	.L575
 9185              	.L583:
4268:../../Source/Kernel/rme_kernel.c **** 
4269:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4270:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kom,struct RME_Cap_Kom*,Kom_Crt);
 9186              		.loc 1 4270 5 is_stmt 1
 9187 01b4 08301BE5 		ldr	r3, [fp, #-8]
 9188 01b8 142093E5 		ldr	r2, [r3, #20]
 9189 01bc 28301BE5 		ldr	r3, [fp, #-40]
 9190 01c0 030052E1 		cmp	r2, r3
 9191 01c4 0100008A 		bhi	.L584
 9192              		.loc 1 4270 5 is_stmt 0 discriminator 1
 9193 01c8 0230E0E3 		mvn	r3, #2
 9194              		.loc 1 4270 5
 9195 01cc 3D0000EA 		b	.L575
 9196              	.L584:
 9197              		.loc 1 4270 5 discriminator 2
 9198 01d0 28301BE5 		ldr	r3, [fp, #-40]
 9199 01d4 8322A0E1 		lsl	r2, r3, #5
 9200 01d8 08301BE5 		ldr	r3, [fp, #-8]
 9201 01dc 0C3093E5 		ldr	r3, [r3, #12]
 9202 01e0 033082E0 		add	r3, r2, r3
 9203 01e4 10300BE5 		str	r3, [fp, #-16]
4271:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4272:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kom_Crt);
 9204              		.loc 1 4272 5 is_stmt 1
 9205 01e8 10301BE5 		ldr	r3, [fp, #-16]
 9206 01ec 0128A0E3 		mov	r2, #65536
 9207 01f0 0010A0E3 		mov	r1, #0
 9208 01f4 0300A0E1 		mov	r0, r3
 9209 01f8 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 9210 01fc 0030A0E1 		mov	r3, r0
 9211              		.loc 1 4272 5 is_stmt 0 discriminator 1
 9212 0200 000053E3 		cmp	r3, #0
 9213 0204 0100001A 		bne	.L585
 9214 0208 0430E0E3 		mvn	r3, #4
 9215              		.loc 1 4272 5
 9216 020c 2D0000EA 		b	.L575
 9217              	.L585:
 9218              		.loc 1 4272 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 239


 9219 0210 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 9220 0214 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 9221 0218 002093E5 		ldr	r2, [r3]
 9222 021c 10301BE5 		ldr	r3, [fp, #-16]
 9223 0220 102083E5 		str	r2, [r3, #16]
4273:../../Source/Kernel/rme_kernel.c ****     
4274:../../Source/Kernel/rme_kernel.c ****     /* Align addresses */
4275:../../Source/Kernel/rme_kernel.c **** #if(RME_KOM_SLOT_ORDER>6U)
4276:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,RME_KOM_SLOT_ORDER);
4277:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Start,RME_KOM_SLOT_ORDER);
4278:../../Source/Kernel/rme_kernel.c **** #else
4279:../../Source/Kernel/rme_kernel.c ****     Kom_End=RME_ROUND_DOWN(End+1U,6U);
 9224              		.loc 1 4279 13 is_stmt 1
 9225 0224 04309BE5 		ldr	r3, [fp, #4]
 9226 0228 013083E2 		add	r3, r3, #1
 9227              		.loc 1 4279 12
 9228 022c 3F30C3E3 		bic	r3, r3, #63
 9229 0230 14300BE5 		str	r3, [fp, #-20]
4280:../../Source/Kernel/rme_kernel.c ****     Kom_Begin=RME_ROUND_UP(Begin,6U);
 9230              		.loc 1 4280 15
 9231 0234 2C301BE5 		ldr	r3, [fp, #-44]
 9232 0238 3F3083E2 		add	r3, r3, #63
 9233              		.loc 1 4280 14
 9234 023c 3F30C3E3 		bic	r3, r3, #63
 9235 0240 18300BE5 		str	r3, [fp, #-24]
4281:../../Source/Kernel/rme_kernel.c **** #endif
4282:../../Source/Kernel/rme_kernel.c **** 
4283:../../Source/Kernel/rme_kernel.c ****     /* Must at least allow creation of something */
4284:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Flag!=0U);
 9236              		.loc 1 4284 5
 9237 0244 08309BE5 		ldr	r3, [fp, #8]
 9238 0248 000053E3 		cmp	r3, #0
 9239 024c 0800001A 		bne	.L586
 9240              		.loc 1 4284 5 is_stmt 0 discriminator 1
 9241 0250 003000E3 		movw	r3, #:lower16:.LC6
 9242 0254 003040E3 		movt	r3, #:upper16:.LC6
 9243 0258 002000E3 		movw	r2, #:lower16:.LC7
 9244 025c 002040E3 		movt	r2, #:upper16:.LC7
 9245 0260 BC1001E3 		movw	r1, #4284
 9246 0264 000000E3 		movw	r0, #:lower16:.LC8
 9247 0268 000040E3 		movt	r0, #:upper16:.LC8
 9248 026c FEFFFFEB 		bl	RME_Log
 9249              	.L587:
 9250              		.loc 1 4284 5
 9251 0270 FEFFFFEA 		b	.L587
 9252              	.L586:
4285:../../Source/Kernel/rme_kernel.c **** 
4286:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4287:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Root_Ref=1U;
 9253              		.loc 1 4287 27 is_stmt 1
 9254 0274 10301BE5 		ldr	r3, [fp, #-16]
 9255 0278 0120A0E3 		mov	r2, #1
 9256 027c 042083E5 		str	r2, [r3, #4]
4288:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Object=0U;
 9257              		.loc 1 4288 25
 9258 0280 10301BE5 		ldr	r3, [fp, #-16]
 9259 0284 0020A0E3 		mov	r2, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 240


 9260 0288 0C2083E5 		str	r2, [r3, #12]
4289:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Head.Flag=Flag;
 9261              		.loc 1 4289 23
 9262 028c 10301BE5 		ldr	r3, [fp, #-16]
 9263 0290 08209BE5 		ldr	r2, [fp, #8]
 9264 0294 082083E5 		str	r2, [r3, #8]
4290:../../Source/Kernel/rme_kernel.c ****     
4291:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4292:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->Begin=Kom_Begin;
 9265              		.loc 1 4292 19
 9266 0298 10301BE5 		ldr	r3, [fp, #-16]
 9267 029c 18201BE5 		ldr	r2, [fp, #-24]
 9268 02a0 142083E5 		str	r2, [r3, #20]
4293:../../Source/Kernel/rme_kernel.c ****     Kom_Crt->End=Kom_End-1U;
 9269              		.loc 1 4293 25
 9270 02a4 14301BE5 		ldr	r3, [fp, #-20]
 9271 02a8 012043E2 		sub	r2, r3, #1
 9272              		.loc 1 4293 17
 9273 02ac 10301BE5 		ldr	r3, [fp, #-16]
 9274 02b0 182083E5 		str	r2, [r3, #24]
4294:../../Source/Kernel/rme_kernel.c **** 
4295:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4296:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kom_Crt->Head.Type_Stat),
 9275              		.loc 1 4296 5
 9276 02b4 10301BE5 		ldr	r3, [fp, #-16]
 9277 02b8 0214A0E3 		mov	r1, #33554432
 9278 02bc 0300A0E1 		mov	r0, r3
 9279 02c0 FEFFFFEB 		bl	__RME_A7A_Write_Release
4297:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KOM,
4298:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4299:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4300:../../Source/Kernel/rme_kernel.c **** 
4301:../../Source/Kernel/rme_kernel.c ****     return 0;
 9280              		.loc 1 4301 12
 9281 02c4 0030A0E3 		mov	r3, #0
 9282              	.L575:
4302:../../Source/Kernel/rme_kernel.c **** }
 9283              		.loc 1 4302 1
 9284 02c8 0300A0E1 		mov	r0, r3
 9285 02cc 04D04BE2 		sub	sp, fp, #4
 9286              		.cfi_def_cfa 13, 8
 9287              		@ sp needed
 9288 02d0 0088BDE8 		pop	{fp, pc}
 9289              		.cfi_endproc
 9290              	.LFE41:
 9292              		.section	.text._RME_CPU_Local_Init,"ax",%progbits
 9293              		.align	2
 9294              		.global	_RME_CPU_Local_Init
 9295              		.syntax unified
 9296              		.arm
 9298              	_RME_CPU_Local_Init:
 9299              	.LFB42:
4303:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kom_Boot_Crt ********************************************/
4304:../../Source/Kernel/rme_kernel.c **** 
4305:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_CPU_Local_Init ***********************************************
4306:../../Source/Kernel/rme_kernel.c **** Description : Initialize the CPU-local data structure.
4307:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The pointer to the per-CPU values.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 241


4308:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The CPUID of the CPU.
4309:../../Source/Kernel/rme_kernel.c **** Output      : None.
4310:../../Source/Kernel/rme_kernel.c **** Return      : None.
4311:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4312:../../Source/Kernel/rme_kernel.c **** void _RME_CPU_Local_Init(struct RME_CPU_Local* Local,
4313:../../Source/Kernel/rme_kernel.c ****                          rme_ptr_t CPUID)
4314:../../Source/Kernel/rme_kernel.c **** {
 9300              		.loc 1 4314 1
 9301              		.cfi_startproc
 9302              		@ args = 0, pretend = 0, frame = 16
 9303              		@ frame_needed = 1, uses_anonymous_args = 0
 9304 0000 00482DE9 		push	{fp, lr}
 9305              		.cfi_def_cfa_offset 8
 9306              		.cfi_offset 11, -8
 9307              		.cfi_offset 14, -4
 9308 0004 04B08DE2 		add	fp, sp, #4
 9309              		.cfi_def_cfa 11, 4
 9310 0008 10D04DE2 		sub	sp, sp, #16
 9311 000c 10000BE5 		str	r0, [fp, #-16]
 9312 0010 14100BE5 		str	r1, [fp, #-20]
4315:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio_Cnt;
4316:../../Source/Kernel/rme_kernel.c ****     
4317:../../Source/Kernel/rme_kernel.c ****     Local->CPUID=CPUID;
 9313              		.loc 1 4317 17
 9314 0014 10301BE5 		ldr	r3, [fp, #-16]
 9315 0018 14201BE5 		ldr	r2, [fp, #-20]
 9316 001c 002083E5 		str	r2, [r3]
4318:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=RME_NULL;
 9317              		.loc 1 4318 19
 9318 0020 10301BE5 		ldr	r3, [fp, #-16]
 9319 0024 0020A0E3 		mov	r2, #0
 9320 0028 042083E5 		str	r2, [r3, #4]
4319:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Vct=RME_NULL;
 9321              		.loc 1 4319 19
 9322 002c 10301BE5 		ldr	r3, [fp, #-16]
 9323 0030 0020A0E3 		mov	r2, #0
 9324 0034 0C2083E5 		str	r2, [r3, #12]
4320:../../Source/Kernel/rme_kernel.c ****     Local->Sig_Tim=RME_NULL;
 9325              		.loc 1 4320 19
 9326 0038 10301BE5 		ldr	r3, [fp, #-16]
 9327 003c 0020A0E3 		mov	r2, #0
 9328 0040 082083E5 		str	r2, [r3, #8]
4321:../../Source/Kernel/rme_kernel.c ****     
4322:../../Source/Kernel/rme_kernel.c ****     /* Initialize the run-queue and bitmap */
4323:../../Source/Kernel/rme_kernel.c ****     for(Prio_Cnt=0U;Prio_Cnt<RME_PREEMPT_PRIO_NUM;Prio_Cnt++)
 9329              		.loc 1 4323 17
 9330 0044 0030A0E3 		mov	r3, #0
 9331 0048 08300BE5 		str	r3, [fp, #-8]
 9332              		.loc 1 4323 5
 9333 004c 100000EA 		b	.L589
 9334              	.L590:
4324:../../Source/Kernel/rme_kernel.c ****     {
4325:../../Source/Kernel/rme_kernel.c ****         Local->Run.Bitmap[Prio_Cnt>>RME_WORD_ORDER]=0U;
 9335              		.loc 1 4325 35
 9336 0050 08301BE5 		ldr	r3, [fp, #-8]
 9337 0054 A322A0E1 		lsr	r2, r3, #5
 9338              		.loc 1 4325 52
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 242


 9339 0058 10301BE5 		ldr	r3, [fp, #-16]
 9340 005c 042082E2 		add	r2, r2, #4
 9341 0060 0010A0E3 		mov	r1, #0
 9342 0064 021183E7 		str	r1, [r3, r2, lsl #2]
4326:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Local->Run.List[Prio_Cnt]));
 9343              		.loc 1 4326 9
 9344 0068 08301BE5 		ldr	r3, [fp, #-8]
 9345 006c 023083E2 		add	r3, r3, #2
 9346 0070 8331A0E1 		lsl	r3, r3, #3
 9347 0074 10201BE5 		ldr	r2, [fp, #-16]
 9348 0078 033082E0 		add	r3, r2, r3
 9349 007c 043083E2 		add	r3, r3, #4
 9350 0080 0300A0E1 		mov	r0, r3
 9351 0084 FEFFFFEB 		bl	_RME_List_Crt
4323:../../Source/Kernel/rme_kernel.c ****     {
 9352              		.loc 1 4323 59 discriminator 3
 9353 0088 08301BE5 		ldr	r3, [fp, #-8]
 9354 008c 013083E2 		add	r3, r3, #1
 9355 0090 08300BE5 		str	r3, [fp, #-8]
 9356              	.L589:
4323:../../Source/Kernel/rme_kernel.c ****     {
 9357              		.loc 1 4323 29 discriminator 1
 9358 0094 08301BE5 		ldr	r3, [fp, #-8]
 9359 0098 1F0053E3 		cmp	r3, #31
 9360 009c EBFFFF9A 		bls	.L590
4327:../../Source/Kernel/rme_kernel.c ****     }
4328:../../Source/Kernel/rme_kernel.c **** }
 9361              		.loc 1 4328 1
 9362 00a0 00F020E3 		nop
 9363 00a4 00F020E3 		nop
 9364 00a8 04D04BE2 		sub	sp, fp, #4
 9365              		.cfi_def_cfa 13, 8
 9366              		@ sp needed
 9367 00ac 0088BDE8 		pop	{fp, pc}
 9368              		.cfi_endproc
 9369              	.LFE42:
 9371              		.section	.rodata
 9372 01bd 000000   		.align	2
 9373              	.LC19:
 9374 01c0 41747465 		.ascii	"Attempted to kill init thread.\000"
 9374      6D707465 
 9374      6420746F 
 9374      206B696C 
 9374      6C20696E 
 9375              		.section	.text._RME_Thd_Fatal,"ax",%progbits
 9376              		.align	2
 9377              		.global	_RME_Thd_Fatal
 9378              		.syntax unified
 9379              		.arm
 9381              	_RME_Thd_Fatal:
 9382              	.LFB43:
4329:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_CPU_Local_Init ******************************************/
4330:../../Source/Kernel/rme_kernel.c **** 
4331:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Fatal ***************************************************
4332:../../Source/Kernel/rme_kernel.c **** Description : The fatal fault handler of RME. This handler will be called by
4333:../../Source/Kernel/rme_kernel.c ****               the ISR that handles the exceptions. This indicates that a fatal
4334:../../Source/Kernel/rme_kernel.c ****               exception has happened and we need to see if this thread is in a
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 243


4335:../../Source/Kernel/rme_kernel.c ****               synchronous invocation. If yes, we stop the invocation, and
4336:../../Source/Kernel/rme_kernel.c ****               possibly return a fault value to the old register set. If not, we
4337:../../Source/Kernel/rme_kernel.c ****               just kill the thread. If the thread is killed, a notification
4338:../../Source/Kernel/rme_kernel.c ****               will be sent to its scheduler. An Exec_Set is required to clear
4339:../../Source/Kernel/rme_kernel.c ****               the exception pending status of the thread.
4340:../../Source/Kernel/rme_kernel.c ****               Some processors may raise some exceptions that are difficult to
4341:../../Source/Kernel/rme_kernel.c ****               attribute to a particular thread, either due to the fact that
4342:../../Source/Kernel/rme_kernel.c ****               they are asynchronous, or they are derived from exception entry.
4343:../../Source/Kernel/rme_kernel.c ****               A good example is ARMv7-M: its autostacking feature derives fault
4344:../../Source/Kernel/rme_kernel.c ****               from exception entry, and some of its bus faults are asynchronous
4345:../../Source/Kernel/rme_kernel.c ****               and can cross context boundaries. RME requires that all these
4346:../../Source/Kernel/rme_kernel.c ****               exceptions be dropped rather than handled; or there will be 
4347:../../Source/Kernel/rme_kernel.c ****               integrity and availability compromises.
4348:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4349:../../Source/Kernel/rme_kernel.c **** Output      : struct RME_Reg_Struct* Reg - The updated register set.
4350:../../Source/Kernel/rme_kernel.c **** Return      : None.
4351:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4352:../../Source/Kernel/rme_kernel.c **** void _RME_Thd_Fatal(struct RME_Reg_Struct* Reg)
4353:../../Source/Kernel/rme_kernel.c **** {
 9383              		.loc 1 4353 1
 9384              		.cfi_startproc
 9385              		@ args = 0, pretend = 0, frame = 16
 9386              		@ frame_needed = 1, uses_anonymous_args = 0
 9387 0000 00482DE9 		push	{fp, lr}
 9388              		.cfi_def_cfa_offset 8
 9389              		.cfi_offset 11, -8
 9390              		.cfi_offset 14, -4
 9391 0004 04B08DE2 		add	fp, sp, #4
 9392              		.cfi_def_cfa 11, 4
 9393 0008 10D04DE2 		sub	sp, sp, #16
 9394 000c 10000BE5 		str	r0, [fp, #-16]
4354:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4355:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
4356:../../Source/Kernel/rme_kernel.c ****     
4357:../../Source/Kernel/rme_kernel.c ****     /* Attempt to return from the invocation, from fault */
4358:../../Source/Kernel/rme_kernel.c ****     if(_RME_Inv_Ret(Reg,0U,1U)!=0)
 9395              		.loc 1 4358 8
 9396 0010 0120A0E3 		mov	r2, #1
 9397 0014 0010A0E3 		mov	r1, #0
 9398 0018 10001BE5 		ldr	r0, [fp, #-16]
 9399 001c FEFFFFEB 		bl	_RME_Inv_Ret
 9400 0020 0030A0E1 		mov	r3, r0
 9401              		.loc 1 4358 7 discriminator 1
 9402 0024 000053E3 		cmp	r3, #0
 9403 0028 2C00000A 		beq	.L597
4359:../../Source/Kernel/rme_kernel.c ****     {
4360:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4361:../../Source/Kernel/rme_kernel.c **** 
4362:../../Source/Kernel/rme_kernel.c ****         /* Return failure - report the exception */
4363:../../Source/Kernel/rme_kernel.c ****         Local=RME_CPU_LOCAL();
 9404              		.loc 1 4363 14
 9405 002c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 9406 0030 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 9407 0034 08300BE5 		str	r3, [fp, #-8]
4364:../../Source/Kernel/rme_kernel.c ****         Thd_Cur=Local->Thd_Cur;
 9408              		.loc 1 4364 16
 9409 0038 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 244


 9410 003c 043093E5 		ldr	r3, [r3, #4]
 9411 0040 0C300BE5 		str	r3, [fp, #-12]
4365:../../Source/Kernel/rme_kernel.c ****         
4366:../../Source/Kernel/rme_kernel.c ****         /* Init thread shall never have exceptions */
4367:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 9412              		.loc 1 4367 26
 9413 0044 0C301BE5 		ldr	r3, [fp, #-12]
 9414 0048 183093E5 		ldr	r3, [r3, #24]
 9415              		.loc 1 4367 11
 9416 004c 060173E3 		cmn	r3, #-2147483647
 9417 0050 0B00001A 		bne	.L593
4368:../../Source/Kernel/rme_kernel.c ****         {
4369:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4370:../../Source/Kernel/rme_kernel.c ****             
4371:../../Source/Kernel/rme_kernel.c ****             RME_DBG_S("Attempted to kill init thread.");
 9418              		.loc 1 4371 13
 9419 0054 000000E3 		movw	r0, #:lower16:.LC19
 9420 0058 000040E3 		movt	r0, #:upper16:.LC19
 9421 005c FEFFFFEB 		bl	RME_Str_Print
4372:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(0U);
 9422              		.loc 1 4372 13 discriminator 1
 9423 0060 003000E3 		movw	r3, #:lower16:.LC6
 9424 0064 003040E3 		movt	r3, #:upper16:.LC6
 9425 0068 002000E3 		movw	r2, #:lower16:.LC7
 9426 006c 002040E3 		movt	r2, #:upper16:.LC7
 9427 0070 141101E3 		movw	r1, #4372
 9428 0074 000000E3 		movw	r0, #:lower16:.LC8
 9429 0078 000040E3 		movt	r0, #:upper16:.LC8
 9430 007c FEFFFFEB 		bl	RME_Log
 9431              	.L594:
 9432              		.loc 1 4372 13 is_stmt 0
 9433 0080 FEFFFFEA 		b	.L594
 9434              	.L593:
4373:../../Source/Kernel/rme_kernel.c ****         }
4374:../../Source/Kernel/rme_kernel.c ****         else
4375:../../Source/Kernel/rme_kernel.c ****         {
4376:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4377:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4378:../../Source/Kernel/rme_kernel.c ****         }
4379:../../Source/Kernel/rme_kernel.c ****         
4380:../../Source/Kernel/rme_kernel.c ****         /* We must be running at this point to trigger a synchronous exception */
4381:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 9435              		.loc 1 4381 9 is_stmt 1
 9436 0084 0C301BE5 		ldr	r3, [fp, #-12]
 9437 0088 1C3093E5 		ldr	r3, [r3, #28]
 9438 008c 000053E3 		cmp	r3, #0
 9439 0090 0800000A 		beq	.L595
 9440              		.loc 1 4381 9 is_stmt 0 discriminator 1
 9441 0094 003000E3 		movw	r3, #:lower16:.LC6
 9442 0098 003040E3 		movt	r3, #:upper16:.LC6
 9443 009c 002000E3 		movw	r2, #:lower16:.LC7
 9444 00a0 002040E3 		movt	r2, #:upper16:.LC7
 9445 00a4 1D1101E3 		movw	r1, #4381
 9446 00a8 000000E3 		movw	r0, #:lower16:.LC8
 9447 00ac 000040E3 		movt	r0, #:upper16:.LC8
 9448 00b0 FEFFFFEB 		bl	RME_Log
 9449              	.L596:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 245


 9450              		.loc 1 4381 9
 9451 00b4 FEFFFFEA 		b	.L596
 9452              	.L595:
4382:../../Source/Kernel/rme_kernel.c ****         
4383:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue */
4384:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thd_Cur);
 9453              		.loc 1 4384 9 is_stmt 1
 9454 00b8 0C001BE5 		ldr	r0, [fp, #-12]
 9455 00bc FEFFFFEB 		bl	_RME_Run_Del
4385:../../Source/Kernel/rme_kernel.c ****         
4386:../../Source/Kernel/rme_kernel.c ****         /* Exception pending and notify parent */
4387:../../Source/Kernel/rme_kernel.c ****         Thd_Cur->Sched.State=RME_THD_EXCPEND;
 9456              		.loc 1 4387 29
 9457 00c0 0C301BE5 		ldr	r3, [fp, #-12]
 9458 00c4 0320A0E3 		mov	r2, #3
 9459 00c8 1C2083E5 		str	r2, [r3, #28]
4388:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Notif(Thd_Cur);
 9460              		.loc 1 4388 9
 9461 00cc 0C001BE5 		ldr	r0, [fp, #-12]
 9462 00d0 FEFFFFEB 		bl	_RME_Run_Notif
4389:../../Source/Kernel/rme_kernel.c ****         
4390:../../Source/Kernel/rme_kernel.c ****         /* All kernel send complete, now pick the highest priority thread to run */
4391:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 9463              		.loc 1 4391 9
 9464 00d4 08101BE5 		ldr	r1, [fp, #-8]
 9465 00d8 10001BE5 		ldr	r0, [fp, #-16]
 9466 00dc FEFFFFEB 		bl	_RME_Kern_High
 9467              	.L597:
4392:../../Source/Kernel/rme_kernel.c ****     }
4393:../../Source/Kernel/rme_kernel.c ****     else
4394:../../Source/Kernel/rme_kernel.c ****     {
4395:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4396:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4397:../../Source/Kernel/rme_kernel.c ****     }
4398:../../Source/Kernel/rme_kernel.c **** }
 9468              		.loc 1 4398 1
 9469 00e0 00F020E3 		nop
 9470 00e4 04D04BE2 		sub	sp, fp, #4
 9471              		.cfi_def_cfa 13, 8
 9472              		@ sp needed
 9473 00e8 0088BDE8 		pop	{fp, pc}
 9474              		.cfi_endproc
 9475              	.LFE43:
 9477              		.section	.text._RME_Run_Ins,"ax",%progbits
 9478              		.align	2
 9479              		.syntax unified
 9480              		.arm
 9482              	_RME_Run_Ins:
 9483              	.LFB44:
4399:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Fatal ***********************************************/
4400:../../Source/Kernel/rme_kernel.c **** 
4401:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Ins ******************************************************
4402:../../Source/Kernel/rme_kernel.c **** Description : Insert a thread into the runqueue. In this function we do not
4403:../../Source/Kernel/rme_kernel.c ****               check if the thread is on the current core, or is runnable,
4404:../../Source/Kernel/rme_kernel.c ****               because it should have been checked by someone else.
4405:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to insert.
4406:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t CPUID - The cpu to consult.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 246


4407:../../Source/Kernel/rme_kernel.c **** Output      : None.
4408:../../Source/Kernel/rme_kernel.c **** Return      : None.
4409:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4410:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Ins(struct RME_Thd_Struct* Thd)
4411:../../Source/Kernel/rme_kernel.c **** {
 9484              		.loc 1 4411 1
 9485              		.cfi_startproc
 9486              		@ args = 0, pretend = 0, frame = 16
 9487              		@ frame_needed = 1, uses_anonymous_args = 0
 9488 0000 00482DE9 		push	{fp, lr}
 9489              		.cfi_def_cfa_offset 8
 9490              		.cfi_offset 11, -8
 9491              		.cfi_offset 14, -4
 9492 0004 04B08DE2 		add	fp, sp, #4
 9493              		.cfi_def_cfa 11, 4
 9494 0008 10D04DE2 		sub	sp, sp, #16
 9495 000c 10000BE5 		str	r0, [fp, #-16]
4412:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4413:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4414:../../Source/Kernel/rme_kernel.c ****     
4415:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9496              		.loc 1 4415 9
 9497 0010 10301BE5 		ldr	r3, [fp, #-16]
 9498 0014 203093E5 		ldr	r3, [r3, #32]
 9499 0018 08300BE5 		str	r3, [fp, #-8]
4416:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9500              		.loc 1 4416 10
 9501 001c 10301BE5 		ldr	r3, [fp, #-16]
 9502 0020 143093E5 		ldr	r3, [r3, #20]
 9503 0024 0C300BE5 		str	r3, [fp, #-12]
4417:../../Source/Kernel/rme_kernel.c ****     
4418:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4419:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9504              		.loc 1 4419 5
 9505 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9506 002c 010073E3 		cmn	r3, #1
 9507 0030 0800001A 		bne	.L599
 9508              		.loc 1 4419 5 is_stmt 0 discriminator 1
 9509 0034 003000E3 		movw	r3, #:lower16:.LC6
 9510 0038 003040E3 		movt	r3, #:upper16:.LC6
 9511 003c 002000E3 		movw	r2, #:lower16:.LC7
 9512 0040 002040E3 		movt	r2, #:upper16:.LC7
 9513 0044 431101E3 		movw	r1, #4419
 9514 0048 000000E3 		movw	r0, #:lower16:.LC8
 9515 004c 000040E3 		movt	r0, #:upper16:.LC8
 9516 0050 FEFFFFEB 		bl	RME_Log
 9517              	.L600:
 9518              		.loc 1 4419 5
 9519 0054 FEFFFFEA 		b	.L600
 9520              	.L599:
4420:../../Source/Kernel/rme_kernel.c ****     
4421:../../Source/Kernel/rme_kernel.c ****     /* Insert this thread into the runqueue */
4422:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Thd->Sched.Run),
 9521              		.loc 1 4422 5 is_stmt 1
 9522 0058 10001BE5 		ldr	r0, [fp, #-16]
 9523 005c 0C201BE5 		ldr	r2, [fp, #-12]
 9524 0060 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 247


 9525 0064 023083E2 		add	r3, r3, #2
 9526 0068 8331A0E1 		lsl	r3, r3, #3
 9527 006c 033082E0 		add	r3, r2, r3
 9528 0070 081093E5 		ldr	r1, [r3, #8]
 9529 0074 08301BE5 		ldr	r3, [fp, #-8]
 9530 0078 023083E2 		add	r3, r3, #2
 9531 007c 8331A0E1 		lsl	r3, r3, #3
 9532 0080 0C201BE5 		ldr	r2, [fp, #-12]
 9533 0084 033082E0 		add	r3, r2, r3
 9534 0088 043083E2 		add	r3, r3, #4
 9535 008c 0320A0E1 		mov	r2, r3
 9536 0090 FEFFFFEB 		bl	_RME_List_Ins
4423:../../Source/Kernel/rme_kernel.c ****                   Local->Run.List[Prio].Prev,
4424:../../Source/Kernel/rme_kernel.c ****                   &(Local->Run.List[Prio]));
4425:../../Source/Kernel/rme_kernel.c ****     
4426:../../Source/Kernel/rme_kernel.c ****     /* Set the bit in the bitmap */
4427:../../Source/Kernel/rme_kernel.c ****     RME_BITMAP_SET(Local->Run.Bitmap,Prio);
 9537              		.loc 1 4427 5
 9538 0094 08301BE5 		ldr	r3, [fp, #-8]
 9539 0098 A322A0E1 		lsr	r2, r3, #5
 9540 009c 0C301BE5 		ldr	r3, [fp, #-12]
 9541 00a0 042082E2 		add	r2, r2, #4
 9542 00a4 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9543 00a8 08301BE5 		ldr	r3, [fp, #-8]
 9544 00ac 1F3003E2 		and	r3, r3, #31
 9545 00b0 0120A0E3 		mov	r2, #1
 9546 00b4 1233A0E1 		lsl	r3, r2, r3
 9547 00b8 08201BE5 		ldr	r2, [fp, #-8]
 9548 00bc A222A0E1 		lsr	r2, r2, #5
 9549 00c0 031081E1 		orr	r1, r1, r3
 9550 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 9551 00c8 042082E2 		add	r2, r2, #4
 9552 00cc 021183E7 		str	r1, [r3, r2, lsl #2]
4428:../../Source/Kernel/rme_kernel.c **** }
 9553              		.loc 1 4428 1
 9554 00d0 00F020E3 		nop
 9555 00d4 04D04BE2 		sub	sp, fp, #4
 9556              		.cfi_def_cfa 13, 8
 9557              		@ sp needed
 9558 00d8 0088BDE8 		pop	{fp, pc}
 9559              		.cfi_endproc
 9560              	.LFE44:
 9562              		.section	.text._RME_Run_Del,"ax",%progbits
 9563              		.align	2
 9564              		.syntax unified
 9565              		.arm
 9567              	_RME_Run_Del:
 9568              	.LFB45:
4429:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Ins *************************************************/
4430:../../Source/Kernel/rme_kernel.c **** 
4431:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Del ******************************************************
4432:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread from the runqueue.
4433:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to delete.
4434:../../Source/Kernel/rme_kernel.c **** Output      : None.
4435:../../Source/Kernel/rme_kernel.c **** Return      : None.
4436:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4437:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Del(struct RME_Thd_Struct* Thd)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 248


4438:../../Source/Kernel/rme_kernel.c **** {
 9569              		.loc 1 4438 1
 9570              		.cfi_startproc
 9571              		@ args = 0, pretend = 0, frame = 16
 9572              		@ frame_needed = 1, uses_anonymous_args = 0
 9573 0000 00482DE9 		push	{fp, lr}
 9574              		.cfi_def_cfa_offset 8
 9575              		.cfi_offset 11, -8
 9576              		.cfi_offset 14, -4
 9577 0004 04B08DE2 		add	fp, sp, #4
 9578              		.cfi_def_cfa 11, 4
 9579 0008 10D04DE2 		sub	sp, sp, #16
 9580 000c 10000BE5 		str	r0, [fp, #-16]
4439:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4440:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
4441:../../Source/Kernel/rme_kernel.c ****     
4442:../../Source/Kernel/rme_kernel.c ****     Prio=Thd->Sched.Prio;
 9581              		.loc 1 4442 9
 9582 0010 10301BE5 		ldr	r3, [fp, #-16]
 9583 0014 203093E5 		ldr	r3, [r3, #32]
 9584 0018 08300BE5 		str	r3, [fp, #-8]
4443:../../Source/Kernel/rme_kernel.c ****     Local=Thd->Sched.Local;
 9585              		.loc 1 4443 10
 9586 001c 10301BE5 		ldr	r3, [fp, #-16]
 9587 0020 143093E5 		ldr	r3, [r3, #20]
 9588 0024 0C300BE5 		str	r3, [fp, #-12]
4444:../../Source/Kernel/rme_kernel.c ****     /* It can't be free or there must be an error */
4445:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Local!=RME_THD_FREE);
 9589              		.loc 1 4445 5
 9590 0028 0C301BE5 		ldr	r3, [fp, #-12]
 9591 002c 010073E3 		cmn	r3, #1
 9592 0030 0800001A 		bne	.L602
 9593              		.loc 1 4445 5 is_stmt 0 discriminator 1
 9594 0034 003000E3 		movw	r3, #:lower16:.LC6
 9595 0038 003040E3 		movt	r3, #:upper16:.LC6
 9596 003c 002000E3 		movw	r2, #:lower16:.LC7
 9597 0040 002040E3 		movt	r2, #:upper16:.LC7
 9598 0044 5D1101E3 		movw	r1, #4445
 9599 0048 000000E3 		movw	r0, #:lower16:.LC8
 9600 004c 000040E3 		movt	r0, #:upper16:.LC8
 9601 0050 FEFFFFEB 		bl	RME_Log
 9602              	.L603:
 9603              		.loc 1 4445 5
 9604 0054 FEFFFFEA 		b	.L603
 9605              	.L602:
4446:../../Source/Kernel/rme_kernel.c ****     
4447:../../Source/Kernel/rme_kernel.c ****     /* Delete this thread from the runqueue */
4448:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thd->Sched.Run.Prev,Thd->Sched.Run.Next);
 9606              		.loc 1 4448 5 is_stmt 1
 9607 0058 10301BE5 		ldr	r3, [fp, #-16]
 9608 005c 042093E5 		ldr	r2, [r3, #4]
 9609 0060 10301BE5 		ldr	r3, [fp, #-16]
 9610 0064 003093E5 		ldr	r3, [r3]
 9611 0068 0310A0E1 		mov	r1, r3
 9612 006c 0200A0E1 		mov	r0, r2
 9613 0070 FEFFFFEB 		bl	_RME_List_Del
4449:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 249


4450:../../Source/Kernel/rme_kernel.c ****     /* See if there are any thread on this priority level */
4451:../../Source/Kernel/rme_kernel.c ****     if(Local->Run.List[Prio].Next==&(Local->Run.List[Prio]))
 9614              		.loc 1 4451 29
 9615 0074 0C201BE5 		ldr	r2, [fp, #-12]
 9616 0078 08301BE5 		ldr	r3, [fp, #-8]
 9617 007c 023083E2 		add	r3, r3, #2
 9618 0080 8331A0E1 		lsl	r3, r3, #3
 9619 0084 033082E0 		add	r3, r2, r3
 9620 0088 042093E5 		ldr	r2, [r3, #4]
 9621              		.loc 1 4451 36
 9622 008c 08301BE5 		ldr	r3, [fp, #-8]
 9623 0090 023083E2 		add	r3, r3, #2
 9624 0094 8331A0E1 		lsl	r3, r3, #3
 9625 0098 0C101BE5 		ldr	r1, [fp, #-12]
 9626 009c 033081E0 		add	r3, r1, r3
 9627 00a0 043083E2 		add	r3, r3, #4
 9628              		.loc 1 4451 7
 9629 00a4 030052E1 		cmp	r2, r3
 9630 00a8 0F00001A 		bne	.L605
4452:../../Source/Kernel/rme_kernel.c ****     {
4453:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4454:../../Source/Kernel/rme_kernel.c **** 
4455:../../Source/Kernel/rme_kernel.c ****         /* Nothing running, clear the bit in the bitmap */
4456:../../Source/Kernel/rme_kernel.c ****         RME_BITMAP_CLR(Local->Run.Bitmap,Prio);
 9631              		.loc 1 4456 9
 9632 00ac 08301BE5 		ldr	r3, [fp, #-8]
 9633 00b0 A322A0E1 		lsr	r2, r3, #5
 9634 00b4 0C301BE5 		ldr	r3, [fp, #-12]
 9635 00b8 042082E2 		add	r2, r2, #4
 9636 00bc 021193E7 		ldr	r1, [r3, r2, lsl #2]
 9637 00c0 08301BE5 		ldr	r3, [fp, #-8]
 9638 00c4 1F3003E2 		and	r3, r3, #31
 9639 00c8 0120A0E3 		mov	r2, #1
 9640 00cc 1233A0E1 		lsl	r3, r2, r3
 9641 00d0 0330E0E1 		mvn	r3, r3
 9642 00d4 08201BE5 		ldr	r2, [fp, #-8]
 9643 00d8 A222A0E1 		lsr	r2, r2, #5
 9644 00dc 031001E0 		and	r1, r1, r3
 9645 00e0 0C301BE5 		ldr	r3, [fp, #-12]
 9646 00e4 042082E2 		add	r2, r2, #4
 9647 00e8 021183E7 		str	r1, [r3, r2, lsl #2]
 9648              	.L605:
4457:../../Source/Kernel/rme_kernel.c ****     }
4458:../../Source/Kernel/rme_kernel.c ****     else
4459:../../Source/Kernel/rme_kernel.c ****     {
4460:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4461:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4462:../../Source/Kernel/rme_kernel.c ****     }
4463:../../Source/Kernel/rme_kernel.c **** }
 9649              		.loc 1 4463 1
 9650 00ec 00F020E3 		nop
 9651 00f0 04D04BE2 		sub	sp, fp, #4
 9652              		.cfi_def_cfa 13, 8
 9653              		@ sp needed
 9654 00f4 0088BDE8 		pop	{fp, pc}
 9655              		.cfi_endproc
 9656              	.LFE45:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 250


 9658              		.section	.text._RME_Run_High,"ax",%progbits
 9659              		.align	2
 9660              		.syntax unified
 9661              		.arm
 9663              	_RME_Run_High:
 9664              	.LFB46:
4464:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Del *************************************************/
4465:../../Source/Kernel/rme_kernel.c **** 
4466:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_High *****************************************************
4467:../../Source/Kernel/rme_kernel.c **** Description : Find the thread with the highest priority on the core.
4468:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_CPU_Local* Local - The CPU-local data structure.
4469:../../Source/Kernel/rme_kernel.c **** Output      : None.
4470:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Thd_Struct* - The thread returned.
4471:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4472:../../Source/Kernel/rme_kernel.c **** static struct RME_Thd_Struct* _RME_Run_High(struct RME_CPU_Local* Local)
4473:../../Source/Kernel/rme_kernel.c **** {
 9665              		.loc 1 4473 1
 9666              		.cfi_startproc
 9667              		@ args = 0, pretend = 0, frame = 16
 9668              		@ frame_needed = 1, uses_anonymous_args = 0
 9669 0000 00482DE9 		push	{fp, lr}
 9670              		.cfi_def_cfa_offset 8
 9671              		.cfi_offset 11, -8
 9672              		.cfi_offset 14, -4
 9673 0004 04B08DE2 		add	fp, sp, #4
 9674              		.cfi_def_cfa 11, 4
 9675 0008 10D04DE2 		sub	sp, sp, #16
 9676 000c 10000BE5 		str	r0, [fp, #-16]
4474:../../Source/Kernel/rme_kernel.c ****     rme_cnt_t Count;
4475:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio;
4476:../../Source/Kernel/rme_kernel.c ****     
4477:../../Source/Kernel/rme_kernel.c ****     /* We start looking for preemption priority levels from the highest */
4478:../../Source/Kernel/rme_kernel.c ****     for(Count=(rme_cnt_t)(RME_PRIO_WORD_NUM-1U);Count>=0;Count--)
 9677              		.loc 1 4478 14
 9678 0010 0030A0E3 		mov	r3, #0
 9679 0014 08300BE5 		str	r3, [fp, #-8]
 9680              		.loc 1 4478 5
 9681 0018 080000EA 		b	.L607
 9682              	.L610:
4479:../../Source/Kernel/rme_kernel.c ****     {
4480:../../Source/Kernel/rme_kernel.c ****         if(Local->Run.Bitmap[Count]!=0U)
 9683              		.loc 1 4480 29
 9684 001c 10301BE5 		ldr	r3, [fp, #-16]
 9685 0020 08201BE5 		ldr	r2, [fp, #-8]
 9686 0024 042082E2 		add	r2, r2, #4
 9687 0028 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9688              		.loc 1 4480 11
 9689 002c 000053E3 		cmp	r3, #0
 9690 0030 0600001A 		bne	.L614
4478:../../Source/Kernel/rme_kernel.c ****     {
 9691              		.loc 1 4478 63 discriminator 2
 9692 0034 08301BE5 		ldr	r3, [fp, #-8]
 9693 0038 013043E2 		sub	r3, r3, #1
 9694 003c 08300BE5 		str	r3, [fp, #-8]
 9695              	.L607:
4478:../../Source/Kernel/rme_kernel.c ****     {
 9696              		.loc 1 4478 54 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 251


 9697 0040 08301BE5 		ldr	r3, [fp, #-8]
 9698 0044 000053E3 		cmp	r3, #0
 9699 0048 F3FFFFAA 		bge	.L610
 9700 004c 000000EA 		b	.L609
 9701              	.L614:
4481:../../Source/Kernel/rme_kernel.c ****         {
4482:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4483:../../Source/Kernel/rme_kernel.c ****             
4484:../../Source/Kernel/rme_kernel.c ****             break;
 9702              		.loc 1 4484 13
 9703 0050 00F020E3 		nop
 9704              	.L609:
4485:../../Source/Kernel/rme_kernel.c ****         }
4486:../../Source/Kernel/rme_kernel.c ****         else
4487:../../Source/Kernel/rme_kernel.c ****         {
4488:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
4489:../../Source/Kernel/rme_kernel.c ****             /* No action required */
4490:../../Source/Kernel/rme_kernel.c ****         }
4491:../../Source/Kernel/rme_kernel.c ****     }
4492:../../Source/Kernel/rme_kernel.c ****     
4493:../../Source/Kernel/rme_kernel.c ****     /* It must be possible to find one thread per core */
4494:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Count>=0);
 9705              		.loc 1 4494 5
 9706 0054 08301BE5 		ldr	r3, [fp, #-8]
 9707 0058 000053E3 		cmp	r3, #0
 9708 005c 080000AA 		bge	.L611
 9709              		.loc 1 4494 5 is_stmt 0 discriminator 1
 9710 0060 003000E3 		movw	r3, #:lower16:.LC6
 9711 0064 003040E3 		movt	r3, #:upper16:.LC6
 9712 0068 002000E3 		movw	r2, #:lower16:.LC7
 9713 006c 002040E3 		movt	r2, #:upper16:.LC7
 9714 0070 8E1101E3 		movw	r1, #4494
 9715 0074 000000E3 		movw	r0, #:lower16:.LC8
 9716 0078 000040E3 		movt	r0, #:upper16:.LC8
 9717 007c FEFFFFEB 		bl	RME_Log
 9718              	.L612:
 9719              		.loc 1 4494 5
 9720 0080 FEFFFFEA 		b	.L612
 9721              	.L611:
4495:../../Source/Kernel/rme_kernel.c **** 
4496:../../Source/Kernel/rme_kernel.c ****     /* Get the first "1"'s position in the word */
4497:../../Source/Kernel/rme_kernel.c ****     Prio=RME_MSB_GET(Local->Run.Bitmap[Count]);
 9722              		.loc 1 4497 10 is_stmt 1
 9723 0084 10301BE5 		ldr	r3, [fp, #-16]
 9724 0088 08201BE5 		ldr	r2, [fp, #-8]
 9725 008c 042082E2 		add	r2, r2, #4
 9726 0090 023193E7 		ldr	r3, [r3, r2, lsl #2]
 9727 0094 0300A0E1 		mov	r0, r3
 9728 0098 FEFFFFEB 		bl	__RME_A7A_MSB_Get
 9729 009c 0C000BE5 		str	r0, [fp, #-12]
4498:../../Source/Kernel/rme_kernel.c ****     Prio+=((rme_ptr_t)Count)<<RME_WORD_ORDER;
 9730              		.loc 1 4498 29
 9731 00a0 08301BE5 		ldr	r3, [fp, #-8]
 9732 00a4 8332A0E1 		lsl	r3, r3, #5
 9733              		.loc 1 4498 9
 9734 00a8 0C201BE5 		ldr	r2, [fp, #-12]
 9735 00ac 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 252


 9736 00b0 0C300BE5 		str	r3, [fp, #-12]
4499:../../Source/Kernel/rme_kernel.c **** 
4500:../../Source/Kernel/rme_kernel.c ****     /* Now there is something at this priority level. Get it and start to run */
4501:../../Source/Kernel/rme_kernel.c ****     return (struct RME_Thd_Struct*)(Local->Run.List[Prio].Next);
 9737              		.loc 1 4501 12
 9738 00b4 10201BE5 		ldr	r2, [fp, #-16]
 9739 00b8 0C301BE5 		ldr	r3, [fp, #-12]
 9740 00bc 023083E2 		add	r3, r3, #2
 9741 00c0 8331A0E1 		lsl	r3, r3, #3
 9742 00c4 033082E0 		add	r3, r2, r3
 9743 00c8 043093E5 		ldr	r3, [r3, #4]
4502:../../Source/Kernel/rme_kernel.c **** }
 9744              		.loc 1 4502 1
 9745 00cc 0300A0E1 		mov	r0, r3
 9746 00d0 04D04BE2 		sub	sp, fp, #4
 9747              		.cfi_def_cfa 13, 8
 9748              		@ sp needed
 9749 00d4 0088BDE8 		pop	{fp, pc}
 9750              		.cfi_endproc
 9751              	.LFE46:
 9753              		.section	.text._RME_Run_Notif,"ax",%progbits
 9754              		.align	2
 9755              		.syntax unified
 9756              		.arm
 9758              	_RME_Run_Notif:
 9759              	.LFB47:
4503:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_High ************************************************/
4504:../../Source/Kernel/rme_kernel.c **** 
4505:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Notif ****************************************************
4506:../../Source/Kernel/rme_kernel.c **** Description : Send a notification to the thread's parent, to notify that this 
4507:../../Source/Kernel/rme_kernel.c ****               thread is currently out of time, or have a fault.
4508:../../Source/Kernel/rme_kernel.c ****               This function includes kernel send, so we need to call 
4509:../../Source/Kernel/rme_kernel.c ****               _RME_Kern_High after this. The only exception being the
4510:../../Source/Kernel/rme_kernel.c ****               _RME_Thd_Swt system call, which we use a more optimized routine.
4511:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread to send notification for.
4512:../../Source/Kernel/rme_kernel.c **** Output      : None.
4513:../../Source/Kernel/rme_kernel.c **** Return      : None.
4514:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4515:../../Source/Kernel/rme_kernel.c **** static void _RME_Run_Notif(struct RME_Thd_Struct* Thd)
4516:../../Source/Kernel/rme_kernel.c **** {
 9760              		.loc 1 4516 1
 9761              		.cfi_startproc
 9762              		@ args = 0, pretend = 0, frame = 16
 9763              		@ frame_needed = 1, uses_anonymous_args = 0
 9764 0000 00482DE9 		push	{fp, lr}
 9765              		.cfi_def_cfa_offset 8
 9766              		.cfi_offset 11, -8
 9767              		.cfi_offset 14, -4
 9768 0004 04B08DE2 		add	fp, sp, #4
 9769              		.cfi_def_cfa 11, 4
 9770 0008 10D04DE2 		sub	sp, sp, #16
 9771 000c 10000BE5 		str	r0, [fp, #-16]
4517:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Sched_Thd;
4518:../../Source/Kernel/rme_kernel.c ****     
4519:../../Source/Kernel/rme_kernel.c ****     Sched_Thd=Thd->Sched.Sched_Thd;
 9772              		.loc 1 4519 14
 9773 0010 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 253


 9774 0014 343093E5 		ldr	r3, [r3, #52]
 9775 0018 08300BE5 		str	r3, [fp, #-8]
4520:../../Source/Kernel/rme_kernel.c ****     
4521:../../Source/Kernel/rme_kernel.c ****     /* See if there is already a notification. If yes, do not do the send again */
4522:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Notif.Next==&(Thd->Sched.Notif))
 9776              		.loc 1 4522 24
 9777 001c 10301BE5 		ldr	r3, [fp, #-16]
 9778 0020 082093E5 		ldr	r2, [r3, #8]
 9779              		.loc 1 4522 31
 9780 0024 10301BE5 		ldr	r3, [fp, #-16]
 9781 0028 083083E2 		add	r3, r3, #8
 9782              		.loc 1 4522 7
 9783 002c 030052E1 		cmp	r2, r3
 9784 0030 0700001A 		bne	.L616
4523:../../Source/Kernel/rme_kernel.c ****     {
4524:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4525:../../Source/Kernel/rme_kernel.c **** 
4526:../../Source/Kernel/rme_kernel.c ****         _RME_List_Ins(&(Thd->Sched.Notif), 
 9785              		.loc 1 4526 9
 9786 0034 10301BE5 		ldr	r3, [fp, #-16]
 9787 0038 080083E2 		add	r0, r3, #8
 9788 003c 08301BE5 		ldr	r3, [fp, #-8]
 9789 0040 401093E5 		ldr	r1, [r3, #64]
 9790 0044 08301BE5 		ldr	r3, [fp, #-8]
 9791 0048 3C3083E2 		add	r3, r3, #60
 9792 004c 0320A0E1 		mov	r2, r3
 9793 0050 FEFFFFEB 		bl	_RME_List_Ins
 9794              	.L616:
4527:../../Source/Kernel/rme_kernel.c ****                       Sched_Thd->Sched.Event.Prev,&(Sched_Thd->Sched.Event));
4528:../../Source/Kernel/rme_kernel.c ****     }
4529:../../Source/Kernel/rme_kernel.c ****     else
4530:../../Source/Kernel/rme_kernel.c ****     {
4531:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4532:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4533:../../Source/Kernel/rme_kernel.c ****     }
4534:../../Source/Kernel/rme_kernel.c **** 
4535:../../Source/Kernel/rme_kernel.c ****     /* If this guy have an endpoint, send to it */
4536:../../Source/Kernel/rme_kernel.c ****     if(Thd->Sched.Sched_Sig!=0U)
 9795              		.loc 1 4536 18
 9796 0054 10301BE5 		ldr	r3, [fp, #-16]
 9797 0058 383093E5 		ldr	r3, [r3, #56]
 9798              		.loc 1 4536 7
 9799 005c 000053E3 		cmp	r3, #0
 9800 0060 0300000A 		beq	.L618
4537:../../Source/Kernel/rme_kernel.c ****     {
4538:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4539:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_Snd(Thd->Sched.Sched_Sig);
 9801              		.loc 1 4539 9
 9802 0064 10301BE5 		ldr	r3, [fp, #-16]
 9803 0068 383093E5 		ldr	r3, [r3, #56]
 9804 006c 0300A0E1 		mov	r0, r3
 9805 0070 FEFFFFEB 		bl	_RME_Kern_Snd
 9806              	.L618:
4540:../../Source/Kernel/rme_kernel.c ****     }
4541:../../Source/Kernel/rme_kernel.c ****     else
4542:../../Source/Kernel/rme_kernel.c ****     {
4543:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 254


4544:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4545:../../Source/Kernel/rme_kernel.c ****     }
4546:../../Source/Kernel/rme_kernel.c **** }
 9807              		.loc 1 4546 1
 9808 0074 00F020E3 		nop
 9809 0078 04D04BE2 		sub	sp, fp, #4
 9810              		.cfi_def_cfa 13, 8
 9811              		@ sp needed
 9812 007c 0088BDE8 		pop	{fp, pc}
 9813              		.cfi_endproc
 9814              	.LFE47:
 9816              		.section	.text._RME_Thd_Pgt,"ax",%progbits
 9817              		.align	2
 9818              		.global	_RME_Thd_Pgt
 9819              		.syntax unified
 9820              		.arm
 9822              	_RME_Thd_Pgt:
 9823              	.LFB48:
4547:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Notif ***********************************************/
4548:../../Source/Kernel/rme_kernel.c **** 
4549:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Pgt ******************************************************
4550:../../Source/Kernel/rme_kernel.c **** Description : Get a thread's page table. 
4551:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Thd_Struct* Thd - The thread.
4552:../../Source/Kernel/rme_kernel.c **** Output      : None.
4553:../../Source/Kernel/rme_kernel.c **** Return      : struct RME_Cap_Pgt* / rme_ptr_t - The page table.
4554:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4555:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4556:../../Source/Kernel/rme_kernel.c **** struct RME_Cap_Pgt* _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4557:../../Source/Kernel/rme_kernel.c **** #else
4558:../../Source/Kernel/rme_kernel.c **** rme_ptr_t _RME_Thd_Pgt(struct RME_Thd_Struct* Thd)
4559:../../Source/Kernel/rme_kernel.c **** #endif
4560:../../Source/Kernel/rme_kernel.c **** {
 9824              		.loc 1 4560 1
 9825              		.cfi_startproc
 9826              		@ args = 0, pretend = 0, frame = 16
 9827              		@ frame_needed = 1, uses_anonymous_args = 0
 9828              		@ link register save eliminated.
 9829 0000 04B02DE5 		str	fp, [sp, #-4]!
 9830              		.cfi_def_cfa_offset 4
 9831              		.cfi_offset 11, -4
 9832 0004 00B08DE2 		add	fp, sp, #0
 9833              		.cfi_def_cfa_register 11
 9834 0008 14D04DE2 		sub	sp, sp, #20
 9835 000c 10000BE5 		str	r0, [fp, #-16]
4561:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Inv_Top;
4562:../../Source/Kernel/rme_kernel.c ****     
4563:../../Source/Kernel/rme_kernel.c ****     Inv_Top=RME_INVSTK_TOP(Thd);
 9836              		.loc 1 4563 13
 9837 0010 10301BE5 		ldr	r3, [fp, #-16]
 9838 0014 4C2093E5 		ldr	r2, [r3, #76]
 9839 0018 10301BE5 		ldr	r3, [fp, #-16]
 9840 001c 4C3083E2 		add	r3, r3, #76
 9841 0020 030052E1 		cmp	r2, r3
 9842 0024 0200000A 		beq	.L620
 9843              		.loc 1 4563 13 is_stmt 0 discriminator 1
 9844 0028 10301BE5 		ldr	r3, [fp, #-16]
 9845 002c 4C3093E5 		ldr	r3, [r3, #76]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 255


 9846 0030 000000EA 		b	.L621
 9847              	.L620:
 9848              		.loc 1 4563 13 discriminator 2
 9849 0034 0030A0E3 		mov	r3, #0
 9850              	.L621:
 9851              		.loc 1 4563 12 is_stmt 1 discriminator 4
 9852 0038 08300BE5 		str	r3, [fp, #-8]
4564:../../Source/Kernel/rme_kernel.c ****     
4565:../../Source/Kernel/rme_kernel.c ****     if(Inv_Top==RME_NULL)
 9853              		.loc 1 4565 7
 9854 003c 08301BE5 		ldr	r3, [fp, #-8]
 9855 0040 000053E3 		cmp	r3, #0
 9856 0044 0300001A 		bne	.L622
4566:../../Source/Kernel/rme_kernel.c ****     {
4567:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4568:../../Source/Kernel/rme_kernel.c **** 
4569:../../Source/Kernel/rme_kernel.c ****         return Thd->Sched.Prc->Pgt;
 9857              		.loc 1 4569 26
 9858 0048 10301BE5 		ldr	r3, [fp, #-16]
 9859 004c 2C3093E5 		ldr	r3, [r3, #44]
 9860              		.loc 1 4569 30
 9861 0050 183093E5 		ldr	r3, [r3, #24]
 9862 0054 020000EA 		b	.L623
 9863              	.L622:
4570:../../Source/Kernel/rme_kernel.c ****     }
4571:../../Source/Kernel/rme_kernel.c ****     else
4572:../../Source/Kernel/rme_kernel.c ****     {
4573:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4574:../../Source/Kernel/rme_kernel.c **** 
4575:../../Source/Kernel/rme_kernel.c ****         return Inv_Top->Prc->Pgt;
 9864              		.loc 1 4575 23
 9865 0058 08301BE5 		ldr	r3, [fp, #-8]
 9866 005c 083093E5 		ldr	r3, [r3, #8]
 9867              		.loc 1 4575 28
 9868 0060 183093E5 		ldr	r3, [r3, #24]
 9869              	.L623:
4576:../../Source/Kernel/rme_kernel.c ****     }
4577:../../Source/Kernel/rme_kernel.c **** }
 9870              		.loc 1 4577 1
 9871 0064 0300A0E1 		mov	r0, r3
 9872 0068 00D08BE2 		add	sp, fp, #0
 9873              		.cfi_def_cfa_register 13
 9874              		@ sp needed
 9875 006c 04B09DE4 		ldr	fp, [sp], #4
 9876              		.cfi_restore 11
 9877              		.cfi_def_cfa_offset 0
 9878 0070 1EFF2FE1 		bx	lr
 9879              		.cfi_endproc
 9880              	.LFE48:
 9882              		.section	.rodata
 9883 01df 00       		.align	2
 9884              	.LC20:
 9885 01e0 2A2A2A2A 		.ascii	"***************************SWT PGT*****************"
 9885      2A2A2A2A 
 9885      2A2A2A2A 
 9885      2A2A2A2A 
 9885      2A2A2A2A 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 256


 9886 0213 2A2A2A2A 		.ascii	"****************\015\012\000"
 9886      2A2A2A2A 
 9886      2A2A2A2A 
 9886      2A2A2A2A 
 9886      0D0A00
 9887 0226 0000     		.align	2
 9888              	.LC21:
 9889 0228 43757220 		.ascii	"Cur - \000"
 9889      2D2000
 9890 022f 00       		.align	2
 9891              	.LC22:
 9892 0230 4E657720 		.ascii	"New - \000"
 9892      2D2000
 9893              		.section	.text._RME_Run_Swt,"ax",%progbits
 9894              		.align	2
 9895              		.syntax unified
 9896              		.arm
 9898              	_RME_Run_Swt:
 9899              	.LFB49:
4578:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Pgt *************************************************/
4579:../../Source/Kernel/rme_kernel.c **** 
4580:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Run_Swt ******************************************************
4581:../../Source/Kernel/rme_kernel.c **** Description : Switch the register set and page table to another thread. 
4582:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
4583:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_Cur - The current thread.
4584:../../Source/Kernel/rme_kernel.c ****               struct RME_Thd_Struct* Thd_New - The next thread.
4585:../../Source/Kernel/rme_kernel.c **** Output      : None.
4586:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - Always 0.
4587:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4588:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Run_Swt(struct RME_Reg_Struct* Reg,
4589:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_Cur, 
4590:../../Source/Kernel/rme_kernel.c ****                               struct RME_Thd_Struct* Thd_New)
4591:../../Source/Kernel/rme_kernel.c **** {
 9900              		.loc 1 4591 1
 9901              		.cfi_startproc
 9902              		@ args = 0, pretend = 0, frame = 32
 9903              		@ frame_needed = 1, uses_anonymous_args = 0
 9904 0000 00482DE9 		push	{fp, lr}
 9905              		.cfi_def_cfa_offset 8
 9906              		.cfi_offset 11, -8
 9907              		.cfi_offset 14, -4
 9908 0004 04B08DE2 		add	fp, sp, #4
 9909              		.cfi_def_cfa 11, 4
 9910 0008 20D04DE2 		sub	sp, sp, #32
 9911 000c 18000BE5 		str	r0, [fp, #-24]
 9912 0010 1C100BE5 		str	r1, [fp, #-28]
 9913 0014 20200BE5 		str	r2, [fp, #-32]
4592:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4593:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Cur;
4594:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4595:../../Source/Kernel/rme_kernel.c **** #else
4596:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Cur;
4597:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_New;
4598:../../Source/Kernel/rme_kernel.c **** #endif
4599:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_Cur;
4600:../../Source/Kernel/rme_kernel.c ****     struct RME_Reg_Struct* Reg_New;
4601:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 257


4602:../../Source/Kernel/rme_kernel.c ****     Reg_Cur=&(Thd_Cur->Ctx.Reg->Reg);
 9914              		.loc 1 4602 27
 9915 0018 1C301BE5 		ldr	r3, [fp, #-28]
 9916 001c 483093E5 		ldr	r3, [r3, #72]
 9917              		.loc 1 4602 12
 9918 0020 08300BE5 		str	r3, [fp, #-8]
4603:../../Source/Kernel/rme_kernel.c ****     Reg_New=&(Thd_New->Ctx.Reg->Reg);
 9919              		.loc 1 4603 27
 9920 0024 20301BE5 		ldr	r3, [fp, #-32]
 9921 0028 483093E5 		ldr	r3, [r3, #72]
 9922              		.loc 1 4603 12
 9923 002c 0C300BE5 		str	r3, [fp, #-12]
4604:../../Source/Kernel/rme_kernel.c ****     
4605:../../Source/Kernel/rme_kernel.c ****     /* Save register context */
4606:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg_Cur,Reg);
 9924              		.loc 1 4606 5
 9925 0030 18101BE5 		ldr	r1, [fp, #-24]
 9926 0034 08001BE5 		ldr	r0, [fp, #-8]
 9927 0038 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4607:../../Source/Kernel/rme_kernel.c ****     
4608:../../Source/Kernel/rme_kernel.c ****     /* If coprocessor is enabled, handle coprocessor context as well */
4609:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
4610:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Cop_Swap(RME_THD_ATTR(Thd_New->Ctx.Hyp_Attr),
4611:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_New->Ctx.Hyp_Attr),
4612:../../Source/Kernel/rme_kernel.c ****                        Reg_New,Thd_New->Ctx.Reg->Cop,
4613:../../Source/Kernel/rme_kernel.c ****                        RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
4614:../../Source/Kernel/rme_kernel.c ****                        RME_THD_IS_HYP(Thd_Cur->Ctx.Hyp_Attr),
4615:../../Source/Kernel/rme_kernel.c ****                        Reg_Cur,Thd_Cur->Ctx.Reg->Cop);
4616:../../Source/Kernel/rme_kernel.c **** #endif
4617:../../Source/Kernel/rme_kernel.c **** 
4618:../../Source/Kernel/rme_kernel.c ****     /* Load register context */
4619:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Copy(Reg,Reg_New);
 9928              		.loc 1 4619 5
 9929 003c 0C101BE5 		ldr	r1, [fp, #-12]
 9930 0040 18001BE5 		ldr	r0, [fp, #-24]
 9931 0044 FEFFFFEB 		bl	__RME_Thd_Reg_Copy
4620:../../Source/Kernel/rme_kernel.c **** 
4621:../../Source/Kernel/rme_kernel.c ****     /* Are we going to switch page tables? If yes, we change it now */
4622:../../Source/Kernel/rme_kernel.c ****     Pgt_Cur=_RME_Thd_Pgt(Thd_Cur);
 9932              		.loc 1 4622 13
 9933 0048 1C001BE5 		ldr	r0, [fp, #-28]
 9934 004c FEFFFFEB 		bl	_RME_Thd_Pgt
 9935 0050 10000BE5 		str	r0, [fp, #-16]
4623:../../Source/Kernel/rme_kernel.c ****     Pgt_New=_RME_Thd_Pgt(Thd_New);
 9936              		.loc 1 4623 13
 9937 0054 20001BE5 		ldr	r0, [fp, #-32]
 9938 0058 FEFFFFEB 		bl	_RME_Thd_Pgt
 9939 005c 14000BE5 		str	r0, [fp, #-20]
4624:../../Source/Kernel/rme_kernel.c **** 
4625:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4626:../../Source/Kernel/rme_kernel.c ****     /* The page tables here must be root cap */
4627:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_Cur)!=0U);
 9940              		.loc 1 4627 5
 9941 0060 10301BE5 		ldr	r3, [fp, #-16]
 9942 0064 003093E5 		ldr	r3, [r3]
 9943 0068 7330FFE6 		uxth	r3, r3
 9944 006c 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 258


 9945 0070 0800000A 		beq	.L625
 9946              		.loc 1 4627 5 is_stmt 0 discriminator 1
 9947 0074 003000E3 		movw	r3, #:lower16:.LC6
 9948 0078 003040E3 		movt	r3, #:upper16:.LC6
 9949 007c 002000E3 		movw	r2, #:lower16:.LC7
 9950 0080 002040E3 		movt	r2, #:upper16:.LC7
 9951 0084 131201E3 		movw	r1, #4627
 9952 0088 000000E3 		movw	r0, #:lower16:.LC8
 9953 008c 000040E3 		movt	r0, #:upper16:.LC8
 9954 0090 FEFFFFEB 		bl	RME_Log
 9955              	.L626:
 9956              		.loc 1 4627 5
 9957 0094 FEFFFFEA 		b	.L626
 9958              	.L625:
4628:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Pgt_New)!=0U);
 9959              		.loc 1 4628 5 is_stmt 1
 9960 0098 14301BE5 		ldr	r3, [fp, #-20]
 9961 009c 003093E5 		ldr	r3, [r3]
 9962 00a0 7330FFE6 		uxth	r3, r3
 9963 00a4 000053E3 		cmp	r3, #0
 9964 00a8 0800000A 		beq	.L627
 9965              		.loc 1 4628 5 is_stmt 0 discriminator 1
 9966 00ac 003000E3 		movw	r3, #:lower16:.LC6
 9967 00b0 003040E3 		movt	r3, #:upper16:.LC6
 9968 00b4 002000E3 		movw	r2, #:lower16:.LC7
 9969 00b8 002040E3 		movt	r2, #:upper16:.LC7
 9970 00bc 141201E3 		movw	r1, #4628
 9971 00c0 000000E3 		movw	r0, #:lower16:.LC8
 9972 00c4 000040E3 		movt	r0, #:upper16:.LC8
 9973 00c8 FEFFFFEB 		bl	RME_Log
 9974              	.L628:
 9975              		.loc 1 4628 5
 9976 00cc FEFFFFEA 		b	.L628
 9977              	.L627:
4629:../../Source/Kernel/rme_kernel.c **** #endif
4630:../../Source/Kernel/rme_kernel.c ****     
4631:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4632:../../Source/Kernel/rme_kernel.c ****     if(RME_CAP_GETOBJ(Pgt_Cur,rme_ptr_t)!=RME_CAP_GETOBJ(Pgt_New,rme_ptr_t))
 9978              		.loc 1 4632 8 is_stmt 1
 9979 00d0 10301BE5 		ldr	r3, [fp, #-16]
 9980 00d4 0C2093E5 		ldr	r2, [r3, #12]
 9981              		.loc 1 4632 43
 9982 00d8 14301BE5 		ldr	r3, [fp, #-20]
 9983 00dc 0C3093E5 		ldr	r3, [r3, #12]
 9984              		.loc 1 4632 7
 9985 00e0 030052E1 		cmp	r2, r3
 9986 00e4 1600000A 		beq	.L629
4633:../../Source/Kernel/rme_kernel.c **** #else
4634:../../Source/Kernel/rme_kernel.c ****     if(Pgt_Cur!=Pgt_New)
4635:../../Source/Kernel/rme_kernel.c **** #endif
4636:../../Source/Kernel/rme_kernel.c ****     {
4637:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4638:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("***************************SWT PGT*********************************\r\n");
 9987              		.loc 1 4638 9
 9988 00e8 000000E3 		movw	r0, #:lower16:.LC20
 9989 00ec 000040E3 		movt	r0, #:upper16:.LC20
 9990 00f0 FEFFFFEB 		bl	RME_Str_Print
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 259


4639:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("Cur - ");
 9991              		.loc 1 4639 9
 9992 00f4 000000E3 		movw	r0, #:lower16:.LC21
 9993 00f8 000040E3 		movt	r0, #:upper16:.LC21
 9994 00fc FEFFFFEB 		bl	RME_Str_Print
4640:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pgt_Cur);
 9995              		.loc 1 4640 9
 9996 0100 10301BE5 		ldr	r3, [fp, #-16]
 9997 0104 0300A0E1 		mov	r0, r3
 9998 0108 FEFFFFEB 		bl	RME_Hex_Print
4641:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n");;
 9999              		.loc 1 4641 9
 10000 010c 000000E3 		movw	r0, #:lower16:.LC2
 10001 0110 000040E3 		movt	r0, #:upper16:.LC2
 10002 0114 FEFFFFEB 		bl	RME_Str_Print
4642:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("New - ");
 10003              		.loc 1 4642 9
 10004 0118 000000E3 		movw	r0, #:lower16:.LC22
 10005 011c 000040E3 		movt	r0, #:upper16:.LC22
 10006 0120 FEFFFFEB 		bl	RME_Str_Print
4643:../../Source/Kernel/rme_kernel.c ****         RME_DBG_H(Pgt_New);
 10007              		.loc 1 4643 9
 10008 0124 14301BE5 		ldr	r3, [fp, #-20]
 10009 0128 0300A0E1 		mov	r0, r3
 10010 012c FEFFFFEB 		bl	RME_Hex_Print
4644:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n");
 10011              		.loc 1 4644 9
 10012 0130 000000E3 		movw	r0, #:lower16:.LC2
 10013 0134 000040E3 		movt	r0, #:upper16:.LC2
 10014 0138 FEFFFFEB 		bl	RME_Str_Print
4645:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Pgt_New);
 10015              		.loc 1 4645 9
 10016 013c 14001BE5 		ldr	r0, [fp, #-20]
 10017 0140 FEFFFFEB 		bl	__RME_Pgt_Set
 10018              	.L629:
4646:../../Source/Kernel/rme_kernel.c ****     }
4647:../../Source/Kernel/rme_kernel.c ****     else
4648:../../Source/Kernel/rme_kernel.c ****     {
4649:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4650:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4651:../../Source/Kernel/rme_kernel.c ****     }
4652:../../Source/Kernel/rme_kernel.c **** 
4653:../../Source/Kernel/rme_kernel.c ****     return 0;
 10019              		.loc 1 4653 12
 10020 0144 0030A0E3 		mov	r3, #0
4654:../../Source/Kernel/rme_kernel.c **** }
 10021              		.loc 1 4654 1
 10022 0148 0300A0E1 		mov	r0, r3
 10023 014c 04D04BE2 		sub	sp, fp, #4
 10024              		.cfi_def_cfa 13, 8
 10025              		@ sp needed
 10026 0150 0088BDE8 		pop	{fp, pc}
 10027              		.cfi_endproc
 10028              	.LFE49:
 10030              		.section	.text._RME_Prc_Boot_Crt,"ax",%progbits
 10031              		.align	2
 10032              		.global	_RME_Prc_Boot_Crt
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 260


 10033              		.syntax unified
 10034              		.arm
 10036              	_RME_Prc_Boot_Crt:
 10037              	.LFB50:
4655:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Run_Swt *************************************************/
4656:../../Source/Kernel/rme_kernel.c **** 
4657:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Boot_Crt *************************************************
4658:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4659:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4660:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and is
4661:../../Source/Kernel/rme_kernel.c ****               only used to create the first process at boot-time.
4662:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4663:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4664:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4665:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4666:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4667:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4668:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4669:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4670:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4671:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4672:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4673:../../Source/Kernel/rme_kernel.c ****                                   this process.
4674:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4675:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4676:../../Source/Kernel/rme_kernel.c ****                                   address.
4677:../../Source/Kernel/rme_kernel.c **** Output      : None.
4678:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4679:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4680:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4681:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4682:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4683:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4684:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4685:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Pgt)
4686:../../Source/Kernel/rme_kernel.c **** #else
4687:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Prc_Boot_Crt(struct RME_Cap_Cpt* Cpt,
4688:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt_Crt,
4689:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
4690:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
4691:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Raw_Pgt)
4692:../../Source/Kernel/rme_kernel.c **** #endif
4693:../../Source/Kernel/rme_kernel.c **** {
 10038              		.loc 1 4693 1
 10039              		.cfi_startproc
 10040              		@ args = 4, pretend = 0, frame = 48
 10041              		@ frame_needed = 1, uses_anonymous_args = 0
 10042 0000 00482DE9 		push	{fp, lr}
 10043              		.cfi_def_cfa_offset 8
 10044              		.cfi_offset 11, -8
 10045              		.cfi_offset 14, -4
 10046 0004 04B08DE2 		add	fp, sp, #4
 10047              		.cfi_def_cfa 11, 4
 10048 0008 30D04DE2 		sub	sp, sp, #48
 10049 000c 28000BE5 		str	r0, [fp, #-40]
 10050 0010 2C100BE5 		str	r1, [fp, #-44]
 10051 0014 30200BE5 		str	r2, [fp, #-48]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 261


 10052 0018 34300BE5 		str	r3, [fp, #-52]
4694:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4695:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4696:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4697:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4698:../../Source/Kernel/rme_kernel.c **** #endif
4699:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4700:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4701:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4702:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4703:../../Source/Kernel/rme_kernel.c **** #endif
4704:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4705:../../Source/Kernel/rme_kernel.c ****     
4706:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4707:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10053              		.loc 1 4707 5
 10054 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10055 0020 803003E2 		and	r3, r3, #128
 10056 0024 000053E3 		cmp	r3, #0
 10057 0028 1C00001A 		bne	.L632
 10058              		.loc 1 4707 5 is_stmt 0 discriminator 1
 10059 002c 28301BE5 		ldr	r3, [fp, #-40]
 10060 0030 142093E5 		ldr	r2, [r3, #20]
 10061 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10062 0038 030052E1 		cmp	r2, r3
 10063 003c 0100008A 		bhi	.L633
 10064              		.loc 1 4707 5 discriminator 3
 10065 0040 0230E0E3 		mvn	r3, #2
 10066              		.loc 1 4707 5
 10067 0044 740100EA 		b	.L634
 10068              	.L633:
 10069              		.loc 1 4707 5 discriminator 4
 10070 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10071 004c 8322A0E1 		lsl	r2, r3, #5
 10072 0050 28301BE5 		ldr	r3, [fp, #-40]
 10073 0054 0C3093E5 		ldr	r3, [r3, #12]
 10074 0058 033082E0 		add	r3, r2, r3
 10075 005c 08300BE5 		str	r3, [fp, #-8]
 10076 0060 08301BE5 		ldr	r3, [fp, #-8]
 10077 0064 0300A0E1 		mov	r0, r3
 10078 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10079 006c 14000BE5 		str	r0, [fp, #-20]
 10080              		.loc 1 4707 5 discriminator 1
 10081 0070 14301BE5 		ldr	r3, [fp, #-20]
 10082 0074 FF3803E2 		and	r3, r3, #16711680
 10083 0078 020853E3 		cmp	r3, #131072
 10084 007c 0100001A 		bne	.L635
 10085              		.loc 1 4707 5 discriminator 5
 10086 0080 0830E0E3 		mvn	r3, #8
 10087              		.loc 1 4707 5
 10088 0084 640100EA 		b	.L634
 10089              	.L635:
 10090              		.loc 1 4707 5 discriminator 6
 10091 0088 14301BE5 		ldr	r3, [fp, #-20]
 10092 008c 233CA0E1 		lsr	r3, r3, #24
 10093 0090 030053E3 		cmp	r3, #3
 10094 0094 3F00000A 		beq	.L636
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 262


 10095              		.loc 1 4707 5 discriminator 7
 10096 0098 0130E0E3 		mvn	r3, #1
 10097              		.loc 1 4707 5
 10098 009c 5E0100EA 		b	.L634
 10099              	.L632:
 10100              		.loc 1 4707 5 discriminator 2
 10101 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 10102 00a4 2324A0E1 		lsr	r2, r3, #8
 10103 00a8 28301BE5 		ldr	r3, [fp, #-40]
 10104 00ac 143093E5 		ldr	r3, [r3, #20]
 10105 00b0 030052E1 		cmp	r2, r3
 10106 00b4 0100003A 		bcc	.L637
 10107              		.loc 1 4707 5 discriminator 8
 10108 00b8 0230E0E3 		mvn	r3, #2
 10109              		.loc 1 4707 5
 10110 00bc 560100EA 		b	.L634
 10111              	.L637:
 10112              		.loc 1 4707 5 discriminator 9
 10113 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10114 00c4 2334A0E1 		lsr	r3, r3, #8
 10115 00c8 8322A0E1 		lsl	r2, r3, #5
 10116 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10117 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10118 00d4 033082E0 		add	r3, r2, r3
 10119 00d8 08300BE5 		str	r3, [fp, #-8]
 10120 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10121 00e0 0300A0E1 		mov	r0, r3
 10122 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10123 00e8 14000BE5 		str	r0, [fp, #-20]
 10124              		.loc 1 4707 5 discriminator 1
 10125 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10126 00f0 FF3803E2 		and	r3, r3, #16711680
 10127 00f4 020853E3 		cmp	r3, #131072
 10128 00f8 0100001A 		bne	.L638
 10129              		.loc 1 4707 5 discriminator 10
 10130 00fc 0830E0E3 		mvn	r3, #8
 10131              		.loc 1 4707 5
 10132 0100 450100EA 		b	.L634
 10133              	.L638:
 10134              		.loc 1 4707 5 discriminator 11
 10135 0104 14301BE5 		ldr	r3, [fp, #-20]
 10136 0108 233CA0E1 		lsr	r3, r3, #24
 10137 010c 030053E3 		cmp	r3, #3
 10138 0110 0100000A 		beq	.L639
 10139              		.loc 1 4707 5 discriminator 12
 10140 0114 0130E0E3 		mvn	r3, #1
 10141              		.loc 1 4707 5
 10142 0118 3F0100EA 		b	.L634
 10143              	.L639:
 10144              		.loc 1 4707 5 discriminator 13
 10145 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10146 0120 7F2003E2 		and	r2, r3, #127
 10147 0124 08301BE5 		ldr	r3, [fp, #-8]
 10148 0128 143093E5 		ldr	r3, [r3, #20]
 10149 012c 030052E1 		cmp	r2, r3
 10150 0130 0100003A 		bcc	.L640
 10151              		.loc 1 4707 5 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 263


 10152 0134 0230E0E3 		mvn	r3, #2
 10153              		.loc 1 4707 5
 10154 0138 370100EA 		b	.L634
 10155              	.L640:
 10156              		.loc 1 4707 5 discriminator 15
 10157 013c 2C301BE5 		ldr	r3, [fp, #-44]
 10158 0140 7F3003E2 		and	r3, r3, #127
 10159 0144 8322A0E1 		lsl	r2, r3, #5
 10160 0148 08301BE5 		ldr	r3, [fp, #-8]
 10161 014c 0C3093E5 		ldr	r3, [r3, #12]
 10162 0150 033082E0 		add	r3, r2, r3
 10163 0154 08300BE5 		str	r3, [fp, #-8]
 10164 0158 08301BE5 		ldr	r3, [fp, #-8]
 10165 015c 0300A0E1 		mov	r0, r3
 10166 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10167 0164 14000BE5 		str	r0, [fp, #-20]
 10168              		.loc 1 4707 5 discriminator 1
 10169 0168 14301BE5 		ldr	r3, [fp, #-20]
 10170 016c FF3803E2 		and	r3, r3, #16711680
 10171 0170 020853E3 		cmp	r3, #131072
 10172 0174 0100001A 		bne	.L641
 10173              		.loc 1 4707 5 discriminator 16
 10174 0178 0830E0E3 		mvn	r3, #8
 10175              		.loc 1 4707 5
 10176 017c 260100EA 		b	.L634
 10177              	.L641:
 10178              		.loc 1 4707 5 discriminator 17
 10179 0180 14301BE5 		ldr	r3, [fp, #-20]
 10180 0184 233CA0E1 		lsr	r3, r3, #24
 10181 0188 030053E3 		cmp	r3, #3
 10182 018c 0100000A 		beq	.L636
 10183              		.loc 1 4707 5 discriminator 18
 10184 0190 0130E0E3 		mvn	r3, #1
 10185              		.loc 1 4707 5
 10186 0194 200100EA 		b	.L634
 10187              	.L636:
4708:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4709:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10188              		.loc 1 4709 5 is_stmt 1
 10189 0198 34301BE5 		ldr	r3, [fp, #-52]
 10190 019c 803003E2 		and	r3, r3, #128
 10191 01a0 000053E3 		cmp	r3, #0
 10192 01a4 1C00001A 		bne	.L642
 10193              		.loc 1 4709 5 is_stmt 0 discriminator 1
 10194 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10195 01ac 142093E5 		ldr	r2, [r3, #20]
 10196 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10197 01b4 030052E1 		cmp	r2, r3
 10198 01b8 0100008A 		bhi	.L643
 10199              		.loc 1 4709 5 discriminator 3
 10200 01bc 0230E0E3 		mvn	r3, #2
 10201              		.loc 1 4709 5
 10202 01c0 150100EA 		b	.L634
 10203              	.L643:
 10204              		.loc 1 4709 5 discriminator 4
 10205 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10206 01c8 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 264


 10207 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10208 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10209 01d4 033082E0 		add	r3, r2, r3
 10210 01d8 0C300BE5 		str	r3, [fp, #-12]
 10211 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10212 01e0 0300A0E1 		mov	r0, r3
 10213 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10214 01e8 14000BE5 		str	r0, [fp, #-20]
 10215              		.loc 1 4709 5 discriminator 1
 10216 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10217 01f0 FF3803E2 		and	r3, r3, #16711680
 10218 01f4 020853E3 		cmp	r3, #131072
 10219 01f8 0100001A 		bne	.L644
 10220              		.loc 1 4709 5 discriminator 5
 10221 01fc 0830E0E3 		mvn	r3, #8
 10222              		.loc 1 4709 5
 10223 0200 050100EA 		b	.L634
 10224              	.L644:
 10225              		.loc 1 4709 5 discriminator 6
 10226 0204 14301BE5 		ldr	r3, [fp, #-20]
 10227 0208 233CA0E1 		lsr	r3, r3, #24
 10228 020c 030053E3 		cmp	r3, #3
 10229 0210 3F00000A 		beq	.L645
 10230              		.loc 1 4709 5 discriminator 7
 10231 0214 0130E0E3 		mvn	r3, #1
 10232              		.loc 1 4709 5
 10233 0218 FF0000EA 		b	.L634
 10234              	.L642:
 10235              		.loc 1 4709 5 discriminator 2
 10236 021c 34301BE5 		ldr	r3, [fp, #-52]
 10237 0220 2324A0E1 		lsr	r2, r3, #8
 10238 0224 28301BE5 		ldr	r3, [fp, #-40]
 10239 0228 143093E5 		ldr	r3, [r3, #20]
 10240 022c 030052E1 		cmp	r2, r3
 10241 0230 0100003A 		bcc	.L646
 10242              		.loc 1 4709 5 discriminator 8
 10243 0234 0230E0E3 		mvn	r3, #2
 10244              		.loc 1 4709 5
 10245 0238 F70000EA 		b	.L634
 10246              	.L646:
 10247              		.loc 1 4709 5 discriminator 9
 10248 023c 34301BE5 		ldr	r3, [fp, #-52]
 10249 0240 2334A0E1 		lsr	r3, r3, #8
 10250 0244 8322A0E1 		lsl	r2, r3, #5
 10251 0248 28301BE5 		ldr	r3, [fp, #-40]
 10252 024c 0C3093E5 		ldr	r3, [r3, #12]
 10253 0250 033082E0 		add	r3, r2, r3
 10254 0254 0C300BE5 		str	r3, [fp, #-12]
 10255 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10256 025c 0300A0E1 		mov	r0, r3
 10257 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10258 0264 14000BE5 		str	r0, [fp, #-20]
 10259              		.loc 1 4709 5 discriminator 1
 10260 0268 14301BE5 		ldr	r3, [fp, #-20]
 10261 026c FF3803E2 		and	r3, r3, #16711680
 10262 0270 020853E3 		cmp	r3, #131072
 10263 0274 0100001A 		bne	.L647
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 265


 10264              		.loc 1 4709 5 discriminator 10
 10265 0278 0830E0E3 		mvn	r3, #8
 10266              		.loc 1 4709 5
 10267 027c E60000EA 		b	.L634
 10268              	.L647:
 10269              		.loc 1 4709 5 discriminator 11
 10270 0280 14301BE5 		ldr	r3, [fp, #-20]
 10271 0284 233CA0E1 		lsr	r3, r3, #24
 10272 0288 030053E3 		cmp	r3, #3
 10273 028c 0100000A 		beq	.L648
 10274              		.loc 1 4709 5 discriminator 12
 10275 0290 0130E0E3 		mvn	r3, #1
 10276              		.loc 1 4709 5
 10277 0294 E00000EA 		b	.L634
 10278              	.L648:
 10279              		.loc 1 4709 5 discriminator 13
 10280 0298 34301BE5 		ldr	r3, [fp, #-52]
 10281 029c 7F2003E2 		and	r2, r3, #127
 10282 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10283 02a4 143093E5 		ldr	r3, [r3, #20]
 10284 02a8 030052E1 		cmp	r2, r3
 10285 02ac 0100003A 		bcc	.L649
 10286              		.loc 1 4709 5 discriminator 14
 10287 02b0 0230E0E3 		mvn	r3, #2
 10288              		.loc 1 4709 5
 10289 02b4 D80000EA 		b	.L634
 10290              	.L649:
 10291              		.loc 1 4709 5 discriminator 15
 10292 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10293 02bc 7F3003E2 		and	r3, r3, #127
 10294 02c0 8322A0E1 		lsl	r2, r3, #5
 10295 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10296 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10297 02cc 033082E0 		add	r3, r2, r3
 10298 02d0 0C300BE5 		str	r3, [fp, #-12]
 10299 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10300 02d8 0300A0E1 		mov	r0, r3
 10301 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10302 02e0 14000BE5 		str	r0, [fp, #-20]
 10303              		.loc 1 4709 5 discriminator 1
 10304 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10305 02e8 FF3803E2 		and	r3, r3, #16711680
 10306 02ec 020853E3 		cmp	r3, #131072
 10307 02f0 0100001A 		bne	.L650
 10308              		.loc 1 4709 5 discriminator 16
 10309 02f4 0830E0E3 		mvn	r3, #8
 10310              		.loc 1 4709 5
 10311 02f8 C70000EA 		b	.L634
 10312              	.L650:
 10313              		.loc 1 4709 5 discriminator 17
 10314 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10315 0300 233CA0E1 		lsr	r3, r3, #24
 10316 0304 030053E3 		cmp	r3, #3
 10317 0308 0100000A 		beq	.L645
 10318              		.loc 1 4709 5 discriminator 18
 10319 030c 0130E0E3 		mvn	r3, #1
 10320              		.loc 1 4709 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 266


 10321 0310 C10000EA 		b	.L634
 10322              	.L645:
4710:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4711:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4712:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10323              		.loc 1 4712 5 is_stmt 1
 10324 0314 04309BE5 		ldr	r3, [fp, #4]
 10325 0318 803003E2 		and	r3, r3, #128
 10326 031c 000053E3 		cmp	r3, #0
 10327 0320 1C00001A 		bne	.L651
 10328              		.loc 1 4712 5 is_stmt 0 discriminator 1
 10329 0324 28301BE5 		ldr	r3, [fp, #-40]
 10330 0328 142093E5 		ldr	r2, [r3, #20]
 10331 032c 04309BE5 		ldr	r3, [fp, #4]
 10332 0330 030052E1 		cmp	r2, r3
 10333 0334 0100008A 		bhi	.L652
 10334              		.loc 1 4712 5 discriminator 3
 10335 0338 0230E0E3 		mvn	r3, #2
 10336              		.loc 1 4712 5
 10337 033c B60000EA 		b	.L634
 10338              	.L652:
 10339              		.loc 1 4712 5 discriminator 4
 10340 0340 04309BE5 		ldr	r3, [fp, #4]
 10341 0344 8322A0E1 		lsl	r2, r3, #5
 10342 0348 28301BE5 		ldr	r3, [fp, #-40]
 10343 034c 0C3093E5 		ldr	r3, [r3, #12]
 10344 0350 033082E0 		add	r3, r2, r3
 10345 0354 10300BE5 		str	r3, [fp, #-16]
 10346 0358 10301BE5 		ldr	r3, [fp, #-16]
 10347 035c 0300A0E1 		mov	r0, r3
 10348 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10349 0364 14000BE5 		str	r0, [fp, #-20]
 10350              		.loc 1 4712 5 discriminator 1
 10351 0368 14301BE5 		ldr	r3, [fp, #-20]
 10352 036c FF3803E2 		and	r3, r3, #16711680
 10353 0370 020853E3 		cmp	r3, #131072
 10354 0374 0100001A 		bne	.L653
 10355              		.loc 1 4712 5 discriminator 5
 10356 0378 0830E0E3 		mvn	r3, #8
 10357              		.loc 1 4712 5
 10358 037c A60000EA 		b	.L634
 10359              	.L653:
 10360              		.loc 1 4712 5 discriminator 6
 10361 0380 14301BE5 		ldr	r3, [fp, #-20]
 10362 0384 233CA0E1 		lsr	r3, r3, #24
 10363 0388 040053E3 		cmp	r3, #4
 10364 038c 3F00000A 		beq	.L654
 10365              		.loc 1 4712 5 discriminator 7
 10366 0390 0130E0E3 		mvn	r3, #1
 10367              		.loc 1 4712 5
 10368 0394 A00000EA 		b	.L634
 10369              	.L651:
 10370              		.loc 1 4712 5 discriminator 2
 10371 0398 04309BE5 		ldr	r3, [fp, #4]
 10372 039c 2324A0E1 		lsr	r2, r3, #8
 10373 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10374 03a4 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 267


 10375 03a8 030052E1 		cmp	r2, r3
 10376 03ac 0100003A 		bcc	.L655
 10377              		.loc 1 4712 5 discriminator 8
 10378 03b0 0230E0E3 		mvn	r3, #2
 10379              		.loc 1 4712 5
 10380 03b4 980000EA 		b	.L634
 10381              	.L655:
 10382              		.loc 1 4712 5 discriminator 9
 10383 03b8 04309BE5 		ldr	r3, [fp, #4]
 10384 03bc 2334A0E1 		lsr	r3, r3, #8
 10385 03c0 8322A0E1 		lsl	r2, r3, #5
 10386 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10387 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10388 03cc 033082E0 		add	r3, r2, r3
 10389 03d0 10300BE5 		str	r3, [fp, #-16]
 10390 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10391 03d8 0300A0E1 		mov	r0, r3
 10392 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10393 03e0 14000BE5 		str	r0, [fp, #-20]
 10394              		.loc 1 4712 5 discriminator 1
 10395 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10396 03e8 FF3803E2 		and	r3, r3, #16711680
 10397 03ec 020853E3 		cmp	r3, #131072
 10398 03f0 0100001A 		bne	.L656
 10399              		.loc 1 4712 5 discriminator 10
 10400 03f4 0830E0E3 		mvn	r3, #8
 10401              		.loc 1 4712 5
 10402 03f8 870000EA 		b	.L634
 10403              	.L656:
 10404              		.loc 1 4712 5 discriminator 11
 10405 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10406 0400 233CA0E1 		lsr	r3, r3, #24
 10407 0404 030053E3 		cmp	r3, #3
 10408 0408 0100000A 		beq	.L657
 10409              		.loc 1 4712 5 discriminator 12
 10410 040c 0130E0E3 		mvn	r3, #1
 10411              		.loc 1 4712 5
 10412 0410 810000EA 		b	.L634
 10413              	.L657:
 10414              		.loc 1 4712 5 discriminator 13
 10415 0414 04309BE5 		ldr	r3, [fp, #4]
 10416 0418 7F2003E2 		and	r2, r3, #127
 10417 041c 10301BE5 		ldr	r3, [fp, #-16]
 10418 0420 143093E5 		ldr	r3, [r3, #20]
 10419 0424 030052E1 		cmp	r2, r3
 10420 0428 0100003A 		bcc	.L658
 10421              		.loc 1 4712 5 discriminator 14
 10422 042c 0230E0E3 		mvn	r3, #2
 10423              		.loc 1 4712 5
 10424 0430 790000EA 		b	.L634
 10425              	.L658:
 10426              		.loc 1 4712 5 discriminator 15
 10427 0434 04309BE5 		ldr	r3, [fp, #4]
 10428 0438 7F3003E2 		and	r3, r3, #127
 10429 043c 8322A0E1 		lsl	r2, r3, #5
 10430 0440 10301BE5 		ldr	r3, [fp, #-16]
 10431 0444 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 268


 10432 0448 033082E0 		add	r3, r2, r3
 10433 044c 10300BE5 		str	r3, [fp, #-16]
 10434 0450 10301BE5 		ldr	r3, [fp, #-16]
 10435 0454 0300A0E1 		mov	r0, r3
 10436 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10437 045c 14000BE5 		str	r0, [fp, #-20]
 10438              		.loc 1 4712 5 discriminator 1
 10439 0460 14301BE5 		ldr	r3, [fp, #-20]
 10440 0464 FF3803E2 		and	r3, r3, #16711680
 10441 0468 020853E3 		cmp	r3, #131072
 10442 046c 0100001A 		bne	.L659
 10443              		.loc 1 4712 5 discriminator 16
 10444 0470 0830E0E3 		mvn	r3, #8
 10445              		.loc 1 4712 5
 10446 0474 680000EA 		b	.L634
 10447              	.L659:
 10448              		.loc 1 4712 5 discriminator 17
 10449 0478 14301BE5 		ldr	r3, [fp, #-20]
 10450 047c 233CA0E1 		lsr	r3, r3, #24
 10451 0480 040053E3 		cmp	r3, #4
 10452 0484 0100000A 		beq	.L654
 10453              		.loc 1 4712 5 discriminator 18
 10454 0488 0130E0E3 		mvn	r3, #1
 10455              		.loc 1 4712 5
 10456 048c 620000EA 		b	.L634
 10457              	.L654:
4713:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4714:../../Source/Kernel/rme_kernel.c **** #endif
4715:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4716:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 10458              		.loc 1 4716 5 is_stmt 1
 10459 0490 08301BE5 		ldr	r3, [fp, #-8]
 10460 0494 083093E5 		ldr	r3, [r3, #8]
 10461 0498 013003E2 		and	r3, r3, #1
 10462 049c 000053E3 		cmp	r3, #0
 10463 04a0 0100001A 		bne	.L660
 10464              		.loc 1 4716 5 is_stmt 0 discriminator 1
 10465 04a4 0630E0E3 		mvn	r3, #6
 10466              		.loc 1 4716 5
 10467 04a8 5B0000EA 		b	.L634
 10468              	.L660:
4717:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 10469              		.loc 1 4717 5 is_stmt 1
 10470 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 10471 04b0 083093E5 		ldr	r3, [r3, #8]
 10472 04b4 403003E2 		and	r3, r3, #64
 10473 04b8 000053E3 		cmp	r3, #0
 10474 04bc 0100001A 		bne	.L661
 10475              		.loc 1 4717 5 is_stmt 0 discriminator 1
 10476 04c0 0630E0E3 		mvn	r3, #6
 10477              		.loc 1 4717 5
 10478 04c4 540000EA 		b	.L634
 10479              	.L661:
4718:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4719:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 10480              		.loc 1 4719 5 is_stmt 1
 10481 04c8 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 269


 10482 04cc 083093E5 		ldr	r3, [r3, #8]
 10483 04d0 403003E2 		and	r3, r3, #64
 10484 04d4 000053E3 		cmp	r3, #0
 10485 04d8 0100001A 		bne	.L662
 10486              		.loc 1 4719 5 is_stmt 0 discriminator 1
 10487 04dc 0630E0E3 		mvn	r3, #6
 10488              		.loc 1 4719 5
 10489 04e0 4D0000EA 		b	.L634
 10490              	.L662:
4720:../../Source/Kernel/rme_kernel.c **** #endif
4721:../../Source/Kernel/rme_kernel.c ****     
4722:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4723:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 10491              		.loc 1 4723 5 is_stmt 1
 10492 04e4 08301BE5 		ldr	r3, [fp, #-8]
 10493 04e8 142093E5 		ldr	r2, [r3, #20]
 10494 04ec 30301BE5 		ldr	r3, [fp, #-48]
 10495 04f0 030052E1 		cmp	r2, r3
 10496 04f4 0100008A 		bhi	.L663
 10497              		.loc 1 4723 5 is_stmt 0 discriminator 1
 10498 04f8 0230E0E3 		mvn	r3, #2
 10499              		.loc 1 4723 5
 10500 04fc 460000EA 		b	.L634
 10501              	.L663:
 10502              		.loc 1 4723 5 discriminator 2
 10503 0500 30301BE5 		ldr	r3, [fp, #-48]
 10504 0504 8322A0E1 		lsl	r2, r3, #5
 10505 0508 08301BE5 		ldr	r3, [fp, #-8]
 10506 050c 0C3093E5 		ldr	r3, [r3, #12]
 10507 0510 033082E0 		add	r3, r2, r3
 10508 0514 18300BE5 		str	r3, [fp, #-24]
4724:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4725:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 10509              		.loc 1 4725 5 is_stmt 1
 10510 0518 18301BE5 		ldr	r3, [fp, #-24]
 10511 051c 0128A0E3 		mov	r2, #65536
 10512 0520 0010A0E3 		mov	r1, #0
 10513 0524 0300A0E1 		mov	r0, r3
 10514 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 10515 052c 0030A0E1 		mov	r3, r0
 10516              		.loc 1 4725 5 is_stmt 0 discriminator 1
 10517 0530 000053E3 		cmp	r3, #0
 10518 0534 0100001A 		bne	.L664
 10519 0538 0430E0E3 		mvn	r3, #4
 10520              		.loc 1 4725 5
 10521 053c 360000EA 		b	.L634
 10522              	.L664:
 10523              		.loc 1 4725 5 discriminator 2
 10524 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 10525 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 10526 0548 002093E5 		ldr	r2, [r3]
 10527 054c 18301BE5 		ldr	r3, [fp, #-24]
 10528 0550 102083E5 		str	r2, [r3, #16]
4726:../../Source/Kernel/rme_kernel.c **** 
4727:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4728:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=1U;
 10529              		.loc 1 4728 27 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 270


 10530 0554 18301BE5 		ldr	r3, [fp, #-24]
 10531 0558 0120A0E3 		mov	r2, #1
 10532 055c 042083E5 		str	r2, [r3, #4]
4729:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 10533              		.loc 1 4729 25
 10534 0560 18301BE5 		ldr	r3, [fp, #-24]
 10535 0564 0020A0E3 		mov	r2, #0
 10536 0568 0C2083E5 		str	r2, [r3, #12]
4730:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_INV|RME_PRC_FLAG_THD;
 10537              		.loc 1 4730 23
 10538 056c 18301BE5 		ldr	r3, [fp, #-24]
 10539 0570 0320A0E3 		mov	r2, #3
 10540 0574 082083E5 		str	r2, [r3, #8]
4731:../../Source/Kernel/rme_kernel.c **** 
4732:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4733:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 10541              		.loc 1 4733 13
 10542 0578 0C301BE5 		ldr	r3, [fp, #-12]
 10543 057c 003093E5 		ldr	r3, [r3]
 10544 0580 7330FFE6 		uxth	r3, r3
 10545 0584 000053E3 		cmp	r3, #0
 10546 0588 0200000A 		beq	.L665
 10547              		.loc 1 4733 13 is_stmt 0 discriminator 1
 10548 058c 0C301BE5 		ldr	r3, [fp, #-12]
 10549 0590 043093E5 		ldr	r3, [r3, #4]
 10550 0594 000000EA 		b	.L666
 10551              	.L665:
 10552              		.loc 1 4733 13 discriminator 2
 10553 0598 0C301BE5 		ldr	r3, [fp, #-12]
 10554              	.L666:
 10555              		.loc 1 4733 12 is_stmt 1 discriminator 4
 10556 059c 1C300BE5 		str	r3, [fp, #-28]
4734:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4735:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 10557              		.loc 1 4735 13
 10558 05a0 10301BE5 		ldr	r3, [fp, #-16]
 10559 05a4 003093E5 		ldr	r3, [r3]
 10560 05a8 7330FFE6 		uxth	r3, r3
 10561 05ac 000053E3 		cmp	r3, #0
 10562 05b0 0200000A 		beq	.L667
 10563              		.loc 1 4735 13 is_stmt 0 discriminator 1
 10564 05b4 10301BE5 		ldr	r3, [fp, #-16]
 10565 05b8 043093E5 		ldr	r3, [r3, #4]
 10566 05bc 000000EA 		b	.L668
 10567              	.L667:
 10568              		.loc 1 4735 13 discriminator 2
 10569 05c0 10301BE5 		ldr	r3, [fp, #-16]
 10570              	.L668:
 10571              		.loc 1 4735 12 is_stmt 1 discriminator 4
 10572 05c4 20300BE5 		str	r3, [fp, #-32]
4736:../../Source/Kernel/rme_kernel.c **** #endif
4737:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 10573              		.loc 1 4737 17
 10574 05c8 18301BE5 		ldr	r3, [fp, #-24]
 10575 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 10576 05d0 142083E5 		str	r2, [r3, #20]
4738:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 271


4739:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 10577              		.loc 1 4739 17
 10578 05d4 18301BE5 		ldr	r3, [fp, #-24]
 10579 05d8 20201BE5 		ldr	r2, [fp, #-32]
 10580 05dc 182083E5 		str	r2, [r3, #24]
4740:../../Source/Kernel/rme_kernel.c **** #else
4741:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4742:../../Source/Kernel/rme_kernel.c **** #endif
4743:../../Source/Kernel/rme_kernel.c ****     
4744:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4745:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 10581              		.loc 1 4745 5
 10582 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 10583 05e4 043083E2 		add	r3, r3, #4
 10584 05e8 0110A0E3 		mov	r1, #1
 10585 05ec 0300A0E1 		mov	r0, r3
 10586 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4746:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4747:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 10587              		.loc 1 4747 5
 10588 05f4 20301BE5 		ldr	r3, [fp, #-32]
 10589 05f8 043083E2 		add	r3, r3, #4
 10590 05fc 0110A0E3 		mov	r1, #1
 10591 0600 0300A0E1 		mov	r0, r3
 10592 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4748:../../Source/Kernel/rme_kernel.c **** #endif
4749:../../Source/Kernel/rme_kernel.c **** 
4750:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4751:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 10593              		.loc 1 4751 5
 10594 0608 18301BE5 		ldr	r3, [fp, #-24]
 10595 060c 0514A0E3 		mov	r1, #83886080
 10596 0610 0300A0E1 		mov	r0, r3
 10597 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4752:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4753:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4754:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4755:../../Source/Kernel/rme_kernel.c **** 
4756:../../Source/Kernel/rme_kernel.c ****     return 0;
 10598              		.loc 1 4756 12
 10599 0618 0030A0E3 		mov	r3, #0
 10600              	.L634:
4757:../../Source/Kernel/rme_kernel.c **** }
 10601              		.loc 1 4757 1
 10602 061c 0300A0E1 		mov	r0, r3
 10603 0620 04D04BE2 		sub	sp, fp, #4
 10604              		.cfi_def_cfa 13, 8
 10605              		@ sp needed
 10606 0624 0088BDE8 		pop	{fp, pc}
 10607              		.cfi_endproc
 10608              	.LFE50:
 10610              		.section	.text._RME_Prc_Crt,"ax",%progbits
 10611              		.align	2
 10612              		.syntax unified
 10613              		.arm
 10615              	_RME_Prc_Crt:
 10616              	.LFB51:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 272


4758:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Boot_Crt ********************************************/
4759:../../Source/Kernel/rme_kernel.c **** 
4760:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Crt ******************************************************
4761:../../Source/Kernel/rme_kernel.c **** Description : Create a process. A process is in fact a protection domain
4762:../../Source/Kernel/rme_kernel.c ****               associated with a set of capabilities.
4763:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4764:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt_Crt - The capability to the capability table to
4765:../../Source/Kernel/rme_kernel.c ****                                       put this process capability in.
4766:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
4767:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability slot that you want this newly
4768:../../Source/Kernel/rme_kernel.c ****                                   created process capability to be in.
4769:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4770:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4771:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4772:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4773:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4774:../../Source/Kernel/rme_kernel.c ****                                   this process.
4775:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4776:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4777:../../Source/Kernel/rme_kernel.c ****                                   address.
4778:../../Source/Kernel/rme_kernel.c **** Output      : None.
4779:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4780:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4781:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4782:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4783:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4784:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4785:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4786:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4787:../../Source/Kernel/rme_kernel.c **** #else
4788:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Crt(struct RME_Cap_Cpt* Cpt,
4789:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt_Crt,
4790:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4791:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4792:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4793:../../Source/Kernel/rme_kernel.c **** #endif
4794:../../Source/Kernel/rme_kernel.c **** {
 10617              		.loc 1 4794 1
 10618              		.cfi_startproc
 10619              		@ args = 4, pretend = 0, frame = 48
 10620              		@ frame_needed = 1, uses_anonymous_args = 0
 10621 0000 00482DE9 		push	{fp, lr}
 10622              		.cfi_def_cfa_offset 8
 10623              		.cfi_offset 11, -8
 10624              		.cfi_offset 14, -4
 10625 0004 04B08DE2 		add	fp, sp, #4
 10626              		.cfi_def_cfa 11, 4
 10627 0008 30D04DE2 		sub	sp, sp, #48
 10628 000c 28000BE5 		str	r0, [fp, #-40]
 10629 0010 2C100BE5 		str	r1, [fp, #-44]
 10630 0014 30200BE5 		str	r2, [fp, #-48]
 10631 0018 34300BE5 		str	r3, [fp, #-52]
4795:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
4796:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4797:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4798:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Op;
4799:../../Source/Kernel/rme_kernel.c **** #endif
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 273


4800:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Crt;
4801:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4802:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4803:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4804:../../Source/Kernel/rme_kernel.c **** #endif
4805:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4806:../../Source/Kernel/rme_kernel.c ****     
4807:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
4808:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt_Crt,RME_CAP_TYPE_CPT,
 10632              		.loc 1 4808 5
 10633 001c 2C301BE5 		ldr	r3, [fp, #-44]
 10634 0020 803003E2 		and	r3, r3, #128
 10635 0024 000053E3 		cmp	r3, #0
 10636 0028 1C00001A 		bne	.L670
 10637              		.loc 1 4808 5 is_stmt 0 discriminator 1
 10638 002c 28301BE5 		ldr	r3, [fp, #-40]
 10639 0030 142093E5 		ldr	r2, [r3, #20]
 10640 0034 2C301BE5 		ldr	r3, [fp, #-44]
 10641 0038 030052E1 		cmp	r2, r3
 10642 003c 0100008A 		bhi	.L671
 10643              		.loc 1 4808 5 discriminator 3
 10644 0040 0230E0E3 		mvn	r3, #2
 10645              		.loc 1 4808 5
 10646 0044 740100EA 		b	.L672
 10647              	.L671:
 10648              		.loc 1 4808 5 discriminator 4
 10649 0048 2C301BE5 		ldr	r3, [fp, #-44]
 10650 004c 8322A0E1 		lsl	r2, r3, #5
 10651 0050 28301BE5 		ldr	r3, [fp, #-40]
 10652 0054 0C3093E5 		ldr	r3, [r3, #12]
 10653 0058 033082E0 		add	r3, r2, r3
 10654 005c 08300BE5 		str	r3, [fp, #-8]
 10655 0060 08301BE5 		ldr	r3, [fp, #-8]
 10656 0064 0300A0E1 		mov	r0, r3
 10657 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10658 006c 14000BE5 		str	r0, [fp, #-20]
 10659              		.loc 1 4808 5 discriminator 1
 10660 0070 14301BE5 		ldr	r3, [fp, #-20]
 10661 0074 FF3803E2 		and	r3, r3, #16711680
 10662 0078 020853E3 		cmp	r3, #131072
 10663 007c 0100001A 		bne	.L673
 10664              		.loc 1 4808 5 discriminator 5
 10665 0080 0830E0E3 		mvn	r3, #8
 10666              		.loc 1 4808 5
 10667 0084 640100EA 		b	.L672
 10668              	.L673:
 10669              		.loc 1 4808 5 discriminator 6
 10670 0088 14301BE5 		ldr	r3, [fp, #-20]
 10671 008c 233CA0E1 		lsr	r3, r3, #24
 10672 0090 030053E3 		cmp	r3, #3
 10673 0094 3F00000A 		beq	.L674
 10674              		.loc 1 4808 5 discriminator 7
 10675 0098 0130E0E3 		mvn	r3, #1
 10676              		.loc 1 4808 5
 10677 009c 5E0100EA 		b	.L672
 10678              	.L670:
 10679              		.loc 1 4808 5 discriminator 2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 274


 10680 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 10681 00a4 2324A0E1 		lsr	r2, r3, #8
 10682 00a8 28301BE5 		ldr	r3, [fp, #-40]
 10683 00ac 143093E5 		ldr	r3, [r3, #20]
 10684 00b0 030052E1 		cmp	r2, r3
 10685 00b4 0100003A 		bcc	.L675
 10686              		.loc 1 4808 5 discriminator 8
 10687 00b8 0230E0E3 		mvn	r3, #2
 10688              		.loc 1 4808 5
 10689 00bc 560100EA 		b	.L672
 10690              	.L675:
 10691              		.loc 1 4808 5 discriminator 9
 10692 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 10693 00c4 2334A0E1 		lsr	r3, r3, #8
 10694 00c8 8322A0E1 		lsl	r2, r3, #5
 10695 00cc 28301BE5 		ldr	r3, [fp, #-40]
 10696 00d0 0C3093E5 		ldr	r3, [r3, #12]
 10697 00d4 033082E0 		add	r3, r2, r3
 10698 00d8 08300BE5 		str	r3, [fp, #-8]
 10699 00dc 08301BE5 		ldr	r3, [fp, #-8]
 10700 00e0 0300A0E1 		mov	r0, r3
 10701 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10702 00e8 14000BE5 		str	r0, [fp, #-20]
 10703              		.loc 1 4808 5 discriminator 1
 10704 00ec 14301BE5 		ldr	r3, [fp, #-20]
 10705 00f0 FF3803E2 		and	r3, r3, #16711680
 10706 00f4 020853E3 		cmp	r3, #131072
 10707 00f8 0100001A 		bne	.L676
 10708              		.loc 1 4808 5 discriminator 10
 10709 00fc 0830E0E3 		mvn	r3, #8
 10710              		.loc 1 4808 5
 10711 0100 450100EA 		b	.L672
 10712              	.L676:
 10713              		.loc 1 4808 5 discriminator 11
 10714 0104 14301BE5 		ldr	r3, [fp, #-20]
 10715 0108 233CA0E1 		lsr	r3, r3, #24
 10716 010c 030053E3 		cmp	r3, #3
 10717 0110 0100000A 		beq	.L677
 10718              		.loc 1 4808 5 discriminator 12
 10719 0114 0130E0E3 		mvn	r3, #1
 10720              		.loc 1 4808 5
 10721 0118 3F0100EA 		b	.L672
 10722              	.L677:
 10723              		.loc 1 4808 5 discriminator 13
 10724 011c 2C301BE5 		ldr	r3, [fp, #-44]
 10725 0120 7F2003E2 		and	r2, r3, #127
 10726 0124 08301BE5 		ldr	r3, [fp, #-8]
 10727 0128 143093E5 		ldr	r3, [r3, #20]
 10728 012c 030052E1 		cmp	r2, r3
 10729 0130 0100003A 		bcc	.L678
 10730              		.loc 1 4808 5 discriminator 14
 10731 0134 0230E0E3 		mvn	r3, #2
 10732              		.loc 1 4808 5
 10733 0138 370100EA 		b	.L672
 10734              	.L678:
 10735              		.loc 1 4808 5 discriminator 15
 10736 013c 2C301BE5 		ldr	r3, [fp, #-44]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 275


 10737 0140 7F3003E2 		and	r3, r3, #127
 10738 0144 8322A0E1 		lsl	r2, r3, #5
 10739 0148 08301BE5 		ldr	r3, [fp, #-8]
 10740 014c 0C3093E5 		ldr	r3, [r3, #12]
 10741 0150 033082E0 		add	r3, r2, r3
 10742 0154 08300BE5 		str	r3, [fp, #-8]
 10743 0158 08301BE5 		ldr	r3, [fp, #-8]
 10744 015c 0300A0E1 		mov	r0, r3
 10745 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10746 0164 14000BE5 		str	r0, [fp, #-20]
 10747              		.loc 1 4808 5 discriminator 1
 10748 0168 14301BE5 		ldr	r3, [fp, #-20]
 10749 016c FF3803E2 		and	r3, r3, #16711680
 10750 0170 020853E3 		cmp	r3, #131072
 10751 0174 0100001A 		bne	.L679
 10752              		.loc 1 4808 5 discriminator 16
 10753 0178 0830E0E3 		mvn	r3, #8
 10754              		.loc 1 4808 5
 10755 017c 260100EA 		b	.L672
 10756              	.L679:
 10757              		.loc 1 4808 5 discriminator 17
 10758 0180 14301BE5 		ldr	r3, [fp, #-20]
 10759 0184 233CA0E1 		lsr	r3, r3, #24
 10760 0188 030053E3 		cmp	r3, #3
 10761 018c 0100000A 		beq	.L674
 10762              		.loc 1 4808 5 discriminator 18
 10763 0190 0130E0E3 		mvn	r3, #1
 10764              		.loc 1 4808 5
 10765 0194 200100EA 		b	.L672
 10766              	.L674:
4809:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
4810:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 10767              		.loc 1 4810 5 is_stmt 1
 10768 0198 34301BE5 		ldr	r3, [fp, #-52]
 10769 019c 803003E2 		and	r3, r3, #128
 10770 01a0 000053E3 		cmp	r3, #0
 10771 01a4 1C00001A 		bne	.L680
 10772              		.loc 1 4810 5 is_stmt 0 discriminator 1
 10773 01a8 28301BE5 		ldr	r3, [fp, #-40]
 10774 01ac 142093E5 		ldr	r2, [r3, #20]
 10775 01b0 34301BE5 		ldr	r3, [fp, #-52]
 10776 01b4 030052E1 		cmp	r2, r3
 10777 01b8 0100008A 		bhi	.L681
 10778              		.loc 1 4810 5 discriminator 3
 10779 01bc 0230E0E3 		mvn	r3, #2
 10780              		.loc 1 4810 5
 10781 01c0 150100EA 		b	.L672
 10782              	.L681:
 10783              		.loc 1 4810 5 discriminator 4
 10784 01c4 34301BE5 		ldr	r3, [fp, #-52]
 10785 01c8 8322A0E1 		lsl	r2, r3, #5
 10786 01cc 28301BE5 		ldr	r3, [fp, #-40]
 10787 01d0 0C3093E5 		ldr	r3, [r3, #12]
 10788 01d4 033082E0 		add	r3, r2, r3
 10789 01d8 0C300BE5 		str	r3, [fp, #-12]
 10790 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 10791 01e0 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 276


 10792 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10793 01e8 14000BE5 		str	r0, [fp, #-20]
 10794              		.loc 1 4810 5 discriminator 1
 10795 01ec 14301BE5 		ldr	r3, [fp, #-20]
 10796 01f0 FF3803E2 		and	r3, r3, #16711680
 10797 01f4 020853E3 		cmp	r3, #131072
 10798 01f8 0100001A 		bne	.L682
 10799              		.loc 1 4810 5 discriminator 5
 10800 01fc 0830E0E3 		mvn	r3, #8
 10801              		.loc 1 4810 5
 10802 0200 050100EA 		b	.L672
 10803              	.L682:
 10804              		.loc 1 4810 5 discriminator 6
 10805 0204 14301BE5 		ldr	r3, [fp, #-20]
 10806 0208 233CA0E1 		lsr	r3, r3, #24
 10807 020c 030053E3 		cmp	r3, #3
 10808 0210 3F00000A 		beq	.L683
 10809              		.loc 1 4810 5 discriminator 7
 10810 0214 0130E0E3 		mvn	r3, #1
 10811              		.loc 1 4810 5
 10812 0218 FF0000EA 		b	.L672
 10813              	.L680:
 10814              		.loc 1 4810 5 discriminator 2
 10815 021c 34301BE5 		ldr	r3, [fp, #-52]
 10816 0220 2324A0E1 		lsr	r2, r3, #8
 10817 0224 28301BE5 		ldr	r3, [fp, #-40]
 10818 0228 143093E5 		ldr	r3, [r3, #20]
 10819 022c 030052E1 		cmp	r2, r3
 10820 0230 0100003A 		bcc	.L684
 10821              		.loc 1 4810 5 discriminator 8
 10822 0234 0230E0E3 		mvn	r3, #2
 10823              		.loc 1 4810 5
 10824 0238 F70000EA 		b	.L672
 10825              	.L684:
 10826              		.loc 1 4810 5 discriminator 9
 10827 023c 34301BE5 		ldr	r3, [fp, #-52]
 10828 0240 2334A0E1 		lsr	r3, r3, #8
 10829 0244 8322A0E1 		lsl	r2, r3, #5
 10830 0248 28301BE5 		ldr	r3, [fp, #-40]
 10831 024c 0C3093E5 		ldr	r3, [r3, #12]
 10832 0250 033082E0 		add	r3, r2, r3
 10833 0254 0C300BE5 		str	r3, [fp, #-12]
 10834 0258 0C301BE5 		ldr	r3, [fp, #-12]
 10835 025c 0300A0E1 		mov	r0, r3
 10836 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10837 0264 14000BE5 		str	r0, [fp, #-20]
 10838              		.loc 1 4810 5 discriminator 1
 10839 0268 14301BE5 		ldr	r3, [fp, #-20]
 10840 026c FF3803E2 		and	r3, r3, #16711680
 10841 0270 020853E3 		cmp	r3, #131072
 10842 0274 0100001A 		bne	.L685
 10843              		.loc 1 4810 5 discriminator 10
 10844 0278 0830E0E3 		mvn	r3, #8
 10845              		.loc 1 4810 5
 10846 027c E60000EA 		b	.L672
 10847              	.L685:
 10848              		.loc 1 4810 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 277


 10849 0280 14301BE5 		ldr	r3, [fp, #-20]
 10850 0284 233CA0E1 		lsr	r3, r3, #24
 10851 0288 030053E3 		cmp	r3, #3
 10852 028c 0100000A 		beq	.L686
 10853              		.loc 1 4810 5 discriminator 12
 10854 0290 0130E0E3 		mvn	r3, #1
 10855              		.loc 1 4810 5
 10856 0294 E00000EA 		b	.L672
 10857              	.L686:
 10858              		.loc 1 4810 5 discriminator 13
 10859 0298 34301BE5 		ldr	r3, [fp, #-52]
 10860 029c 7F2003E2 		and	r2, r3, #127
 10861 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 10862 02a4 143093E5 		ldr	r3, [r3, #20]
 10863 02a8 030052E1 		cmp	r2, r3
 10864 02ac 0100003A 		bcc	.L687
 10865              		.loc 1 4810 5 discriminator 14
 10866 02b0 0230E0E3 		mvn	r3, #2
 10867              		.loc 1 4810 5
 10868 02b4 D80000EA 		b	.L672
 10869              	.L687:
 10870              		.loc 1 4810 5 discriminator 15
 10871 02b8 34301BE5 		ldr	r3, [fp, #-52]
 10872 02bc 7F3003E2 		and	r3, r3, #127
 10873 02c0 8322A0E1 		lsl	r2, r3, #5
 10874 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 10875 02c8 0C3093E5 		ldr	r3, [r3, #12]
 10876 02cc 033082E0 		add	r3, r2, r3
 10877 02d0 0C300BE5 		str	r3, [fp, #-12]
 10878 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 10879 02d8 0300A0E1 		mov	r0, r3
 10880 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10881 02e0 14000BE5 		str	r0, [fp, #-20]
 10882              		.loc 1 4810 5 discriminator 1
 10883 02e4 14301BE5 		ldr	r3, [fp, #-20]
 10884 02e8 FF3803E2 		and	r3, r3, #16711680
 10885 02ec 020853E3 		cmp	r3, #131072
 10886 02f0 0100001A 		bne	.L688
 10887              		.loc 1 4810 5 discriminator 16
 10888 02f4 0830E0E3 		mvn	r3, #8
 10889              		.loc 1 4810 5
 10890 02f8 C70000EA 		b	.L672
 10891              	.L688:
 10892              		.loc 1 4810 5 discriminator 17
 10893 02fc 14301BE5 		ldr	r3, [fp, #-20]
 10894 0300 233CA0E1 		lsr	r3, r3, #24
 10895 0304 030053E3 		cmp	r3, #3
 10896 0308 0100000A 		beq	.L683
 10897              		.loc 1 4810 5 discriminator 18
 10898 030c 0130E0E3 		mvn	r3, #1
 10899              		.loc 1 4810 5
 10900 0310 C10000EA 		b	.L672
 10901              	.L683:
4811:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
4812:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4813:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 10902              		.loc 1 4813 5 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 278


 10903 0314 04309BE5 		ldr	r3, [fp, #4]
 10904 0318 803003E2 		and	r3, r3, #128
 10905 031c 000053E3 		cmp	r3, #0
 10906 0320 1C00001A 		bne	.L689
 10907              		.loc 1 4813 5 is_stmt 0 discriminator 1
 10908 0324 28301BE5 		ldr	r3, [fp, #-40]
 10909 0328 142093E5 		ldr	r2, [r3, #20]
 10910 032c 04309BE5 		ldr	r3, [fp, #4]
 10911 0330 030052E1 		cmp	r2, r3
 10912 0334 0100008A 		bhi	.L690
 10913              		.loc 1 4813 5 discriminator 3
 10914 0338 0230E0E3 		mvn	r3, #2
 10915              		.loc 1 4813 5
 10916 033c B60000EA 		b	.L672
 10917              	.L690:
 10918              		.loc 1 4813 5 discriminator 4
 10919 0340 04309BE5 		ldr	r3, [fp, #4]
 10920 0344 8322A0E1 		lsl	r2, r3, #5
 10921 0348 28301BE5 		ldr	r3, [fp, #-40]
 10922 034c 0C3093E5 		ldr	r3, [r3, #12]
 10923 0350 033082E0 		add	r3, r2, r3
 10924 0354 10300BE5 		str	r3, [fp, #-16]
 10925 0358 10301BE5 		ldr	r3, [fp, #-16]
 10926 035c 0300A0E1 		mov	r0, r3
 10927 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10928 0364 14000BE5 		str	r0, [fp, #-20]
 10929              		.loc 1 4813 5 discriminator 1
 10930 0368 14301BE5 		ldr	r3, [fp, #-20]
 10931 036c FF3803E2 		and	r3, r3, #16711680
 10932 0370 020853E3 		cmp	r3, #131072
 10933 0374 0100001A 		bne	.L691
 10934              		.loc 1 4813 5 discriminator 5
 10935 0378 0830E0E3 		mvn	r3, #8
 10936              		.loc 1 4813 5
 10937 037c A60000EA 		b	.L672
 10938              	.L691:
 10939              		.loc 1 4813 5 discriminator 6
 10940 0380 14301BE5 		ldr	r3, [fp, #-20]
 10941 0384 233CA0E1 		lsr	r3, r3, #24
 10942 0388 040053E3 		cmp	r3, #4
 10943 038c 3F00000A 		beq	.L692
 10944              		.loc 1 4813 5 discriminator 7
 10945 0390 0130E0E3 		mvn	r3, #1
 10946              		.loc 1 4813 5
 10947 0394 A00000EA 		b	.L672
 10948              	.L689:
 10949              		.loc 1 4813 5 discriminator 2
 10950 0398 04309BE5 		ldr	r3, [fp, #4]
 10951 039c 2324A0E1 		lsr	r2, r3, #8
 10952 03a0 28301BE5 		ldr	r3, [fp, #-40]
 10953 03a4 143093E5 		ldr	r3, [r3, #20]
 10954 03a8 030052E1 		cmp	r2, r3
 10955 03ac 0100003A 		bcc	.L693
 10956              		.loc 1 4813 5 discriminator 8
 10957 03b0 0230E0E3 		mvn	r3, #2
 10958              		.loc 1 4813 5
 10959 03b4 980000EA 		b	.L672
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 279


 10960              	.L693:
 10961              		.loc 1 4813 5 discriminator 9
 10962 03b8 04309BE5 		ldr	r3, [fp, #4]
 10963 03bc 2334A0E1 		lsr	r3, r3, #8
 10964 03c0 8322A0E1 		lsl	r2, r3, #5
 10965 03c4 28301BE5 		ldr	r3, [fp, #-40]
 10966 03c8 0C3093E5 		ldr	r3, [r3, #12]
 10967 03cc 033082E0 		add	r3, r2, r3
 10968 03d0 10300BE5 		str	r3, [fp, #-16]
 10969 03d4 10301BE5 		ldr	r3, [fp, #-16]
 10970 03d8 0300A0E1 		mov	r0, r3
 10971 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 10972 03e0 14000BE5 		str	r0, [fp, #-20]
 10973              		.loc 1 4813 5 discriminator 1
 10974 03e4 14301BE5 		ldr	r3, [fp, #-20]
 10975 03e8 FF3803E2 		and	r3, r3, #16711680
 10976 03ec 020853E3 		cmp	r3, #131072
 10977 03f0 0100001A 		bne	.L694
 10978              		.loc 1 4813 5 discriminator 10
 10979 03f4 0830E0E3 		mvn	r3, #8
 10980              		.loc 1 4813 5
 10981 03f8 870000EA 		b	.L672
 10982              	.L694:
 10983              		.loc 1 4813 5 discriminator 11
 10984 03fc 14301BE5 		ldr	r3, [fp, #-20]
 10985 0400 233CA0E1 		lsr	r3, r3, #24
 10986 0404 030053E3 		cmp	r3, #3
 10987 0408 0100000A 		beq	.L695
 10988              		.loc 1 4813 5 discriminator 12
 10989 040c 0130E0E3 		mvn	r3, #1
 10990              		.loc 1 4813 5
 10991 0410 810000EA 		b	.L672
 10992              	.L695:
 10993              		.loc 1 4813 5 discriminator 13
 10994 0414 04309BE5 		ldr	r3, [fp, #4]
 10995 0418 7F2003E2 		and	r2, r3, #127
 10996 041c 10301BE5 		ldr	r3, [fp, #-16]
 10997 0420 143093E5 		ldr	r3, [r3, #20]
 10998 0424 030052E1 		cmp	r2, r3
 10999 0428 0100003A 		bcc	.L696
 11000              		.loc 1 4813 5 discriminator 14
 11001 042c 0230E0E3 		mvn	r3, #2
 11002              		.loc 1 4813 5
 11003 0430 790000EA 		b	.L672
 11004              	.L696:
 11005              		.loc 1 4813 5 discriminator 15
 11006 0434 04309BE5 		ldr	r3, [fp, #4]
 11007 0438 7F3003E2 		and	r3, r3, #127
 11008 043c 8322A0E1 		lsl	r2, r3, #5
 11009 0440 10301BE5 		ldr	r3, [fp, #-16]
 11010 0444 0C3093E5 		ldr	r3, [r3, #12]
 11011 0448 033082E0 		add	r3, r2, r3
 11012 044c 10300BE5 		str	r3, [fp, #-16]
 11013 0450 10301BE5 		ldr	r3, [fp, #-16]
 11014 0454 0300A0E1 		mov	r0, r3
 11015 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11016 045c 14000BE5 		str	r0, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 280


 11017              		.loc 1 4813 5 discriminator 1
 11018 0460 14301BE5 		ldr	r3, [fp, #-20]
 11019 0464 FF3803E2 		and	r3, r3, #16711680
 11020 0468 020853E3 		cmp	r3, #131072
 11021 046c 0100001A 		bne	.L697
 11022              		.loc 1 4813 5 discriminator 16
 11023 0470 0830E0E3 		mvn	r3, #8
 11024              		.loc 1 4813 5
 11025 0474 680000EA 		b	.L672
 11026              	.L697:
 11027              		.loc 1 4813 5 discriminator 17
 11028 0478 14301BE5 		ldr	r3, [fp, #-20]
 11029 047c 233CA0E1 		lsr	r3, r3, #24
 11030 0480 040053E3 		cmp	r3, #4
 11031 0484 0100000A 		beq	.L692
 11032              		.loc 1 4813 5 discriminator 18
 11033 0488 0130E0E3 		mvn	r3, #1
 11034              		.loc 1 4813 5
 11035 048c 620000EA 		b	.L672
 11036              	.L692:
4814:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_Op,Type_Stat);
4815:../../Source/Kernel/rme_kernel.c **** #endif
4816:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
4817:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 11037              		.loc 1 4817 5 is_stmt 1
 11038 0490 08301BE5 		ldr	r3, [fp, #-8]
 11039 0494 083093E5 		ldr	r3, [r3, #8]
 11040 0498 013003E2 		and	r3, r3, #1
 11041 049c 000053E3 		cmp	r3, #0
 11042 04a0 0100001A 		bne	.L698
 11043              		.loc 1 4817 5 is_stmt 0 discriminator 1
 11044 04a4 0630E0E3 		mvn	r3, #6
 11045              		.loc 1 4817 5
 11046 04a8 5B0000EA 		b	.L672
 11047              	.L698:
4818:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_PRC_CRT);
 11048              		.loc 1 4818 5 is_stmt 1
 11049 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 11050 04b0 083093E5 		ldr	r3, [r3, #8]
 11051 04b4 403003E2 		and	r3, r3, #64
 11052 04b8 000053E3 		cmp	r3, #0
 11053 04bc 0100001A 		bne	.L699
 11054              		.loc 1 4818 5 is_stmt 0 discriminator 1
 11055 04c0 0630E0E3 		mvn	r3, #6
 11056              		.loc 1 4818 5
 11057 04c4 540000EA 		b	.L672
 11058              	.L699:
4819:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4820:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_Op,RME_PGT_FLAG_PRC_CRT);
 11059              		.loc 1 4820 5 is_stmt 1
 11060 04c8 10301BE5 		ldr	r3, [fp, #-16]
 11061 04cc 083093E5 		ldr	r3, [r3, #8]
 11062 04d0 403003E2 		and	r3, r3, #64
 11063 04d4 000053E3 		cmp	r3, #0
 11064 04d8 0100001A 		bne	.L700
 11065              		.loc 1 4820 5 is_stmt 0 discriminator 1
 11066 04dc 0630E0E3 		mvn	r3, #6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 281


 11067              		.loc 1 4820 5
 11068 04e0 4D0000EA 		b	.L672
 11069              	.L700:
4821:../../Source/Kernel/rme_kernel.c **** #endif
4822:../../Source/Kernel/rme_kernel.c ****     
4823:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4824:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Prc,struct RME_Cap_Prc*,Prc_Crt);
 11070              		.loc 1 4824 5 is_stmt 1
 11071 04e4 08301BE5 		ldr	r3, [fp, #-8]
 11072 04e8 142093E5 		ldr	r2, [r3, #20]
 11073 04ec 30301BE5 		ldr	r3, [fp, #-48]
 11074 04f0 030052E1 		cmp	r2, r3
 11075 04f4 0100008A 		bhi	.L701
 11076              		.loc 1 4824 5 is_stmt 0 discriminator 1
 11077 04f8 0230E0E3 		mvn	r3, #2
 11078              		.loc 1 4824 5
 11079 04fc 460000EA 		b	.L672
 11080              	.L701:
 11081              		.loc 1 4824 5 discriminator 2
 11082 0500 30301BE5 		ldr	r3, [fp, #-48]
 11083 0504 8322A0E1 		lsl	r2, r3, #5
 11084 0508 08301BE5 		ldr	r3, [fp, #-8]
 11085 050c 0C3093E5 		ldr	r3, [r3, #12]
 11086 0510 033082E0 		add	r3, r2, r3
 11087 0514 18300BE5 		str	r3, [fp, #-24]
4825:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
4826:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Prc_Crt);
 11088              		.loc 1 4826 5 is_stmt 1
 11089 0518 18301BE5 		ldr	r3, [fp, #-24]
 11090 051c 0128A0E3 		mov	r2, #65536
 11091 0520 0010A0E3 		mov	r1, #0
 11092 0524 0300A0E1 		mov	r0, r3
 11093 0528 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11094 052c 0030A0E1 		mov	r3, r0
 11095              		.loc 1 4826 5 is_stmt 0 discriminator 1
 11096 0530 000053E3 		cmp	r3, #0
 11097 0534 0100001A 		bne	.L702
 11098 0538 0430E0E3 		mvn	r3, #4
 11099              		.loc 1 4826 5
 11100 053c 360000EA 		b	.L672
 11101              	.L702:
 11102              		.loc 1 4826 5 discriminator 2
 11103 0540 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 11104 0544 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 11105 0548 002093E5 		ldr	r2, [r3]
 11106 054c 18301BE5 		ldr	r3, [fp, #-24]
 11107 0550 102083E5 		str	r2, [r3, #16]
4827:../../Source/Kernel/rme_kernel.c ****     
4828:../../Source/Kernel/rme_kernel.c ****     /* Header init */
4829:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Root_Ref=0U;
 11108              		.loc 1 4829 27 is_stmt 1
 11109 0554 18301BE5 		ldr	r3, [fp, #-24]
 11110 0558 0020A0E3 		mov	r2, #0
 11111 055c 042083E5 		str	r2, [r3, #4]
4830:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Object=0U;
 11112              		.loc 1 4830 25
 11113 0560 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 282


 11114 0564 0020A0E3 		mov	r2, #0
 11115 0568 0C2083E5 		str	r2, [r3, #12]
4831:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Head.Flag=RME_PRC_FLAG_ALL;
 11116              		.loc 1 4831 23
 11117 056c 18301BE5 		ldr	r3, [fp, #-24]
 11118 0570 0F20A0E3 		mov	r2, #15
 11119 0574 082083E5 		str	r2, [r3, #8]
4832:../../Source/Kernel/rme_kernel.c ****     
4833:../../Source/Kernel/rme_kernel.c ****     /* Info init */
4834:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=RME_CAP_CONV_ROOT(Cpt_Op,struct RME_Cap_Cpt*);
 11120              		.loc 1 4834 13
 11121 0578 0C301BE5 		ldr	r3, [fp, #-12]
 11122 057c 003093E5 		ldr	r3, [r3]
 11123 0580 7330FFE6 		uxth	r3, r3
 11124 0584 000053E3 		cmp	r3, #0
 11125 0588 0200000A 		beq	.L703
 11126              		.loc 1 4834 13 is_stmt 0 discriminator 1
 11127 058c 0C301BE5 		ldr	r3, [fp, #-12]
 11128 0590 043093E5 		ldr	r3, [r3, #4]
 11129 0594 000000EA 		b	.L704
 11130              	.L703:
 11131              		.loc 1 4834 13 discriminator 2
 11132 0598 0C301BE5 		ldr	r3, [fp, #-12]
 11133              	.L704:
 11134              		.loc 1 4834 12 is_stmt 1 discriminator 4
 11135 059c 1C300BE5 		str	r3, [fp, #-28]
4835:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4836:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=RME_CAP_CONV_ROOT(Pgt_Op,struct RME_Cap_Pgt*);
 11136              		.loc 1 4836 13
 11137 05a0 10301BE5 		ldr	r3, [fp, #-16]
 11138 05a4 003093E5 		ldr	r3, [r3]
 11139 05a8 7330FFE6 		uxth	r3, r3
 11140 05ac 000053E3 		cmp	r3, #0
 11141 05b0 0200000A 		beq	.L705
 11142              		.loc 1 4836 13 is_stmt 0 discriminator 1
 11143 05b4 10301BE5 		ldr	r3, [fp, #-16]
 11144 05b8 043093E5 		ldr	r3, [r3, #4]
 11145 05bc 000000EA 		b	.L706
 11146              	.L705:
 11147              		.loc 1 4836 13 discriminator 2
 11148 05c0 10301BE5 		ldr	r3, [fp, #-16]
 11149              	.L706:
 11150              		.loc 1 4836 12 is_stmt 1 discriminator 4
 11151 05c4 20300BE5 		str	r3, [fp, #-32]
4837:../../Source/Kernel/rme_kernel.c **** #endif
4838:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Cpt=Prc_Cpt;
 11152              		.loc 1 4838 17
 11153 05c8 18301BE5 		ldr	r3, [fp, #-24]
 11154 05cc 1C201BE5 		ldr	r2, [fp, #-28]
 11155 05d0 142083E5 		str	r2, [r3, #20]
4839:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4840:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Prc_Pgt;
 11156              		.loc 1 4840 17
 11157 05d4 18301BE5 		ldr	r3, [fp, #-24]
 11158 05d8 20201BE5 		ldr	r2, [fp, #-32]
 11159 05dc 182083E5 		str	r2, [r3, #24]
4841:../../Source/Kernel/rme_kernel.c **** #else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 283


4842:../../Source/Kernel/rme_kernel.c ****     Prc_Crt->Pgt=Raw_Pgt;
4843:../../Source/Kernel/rme_kernel.c **** #endif
4844:../../Source/Kernel/rme_kernel.c ****     
4845:../../Source/Kernel/rme_kernel.c ****     /* Reference objects */
4846:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),1U);
 11160              		.loc 1 4846 5
 11161 05e0 1C301BE5 		ldr	r3, [fp, #-28]
 11162 05e4 043083E2 		add	r3, r3, #4
 11163 05e8 0110A0E3 		mov	r1, #1
 11164 05ec 0300A0E1 		mov	r0, r3
 11165 05f0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4847:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4848:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),1U);
 11166              		.loc 1 4848 5
 11167 05f4 20301BE5 		ldr	r3, [fp, #-32]
 11168 05f8 043083E2 		add	r3, r3, #4
 11169 05fc 0110A0E3 		mov	r1, #1
 11170 0600 0300A0E1 		mov	r0, r3
 11171 0604 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4849:../../Source/Kernel/rme_kernel.c **** #endif
4850:../../Source/Kernel/rme_kernel.c **** 
4851:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
4852:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Prc_Crt->Head.Type_Stat),
 11172              		.loc 1 4852 5
 11173 0608 18301BE5 		ldr	r3, [fp, #-24]
 11174 060c 0514A0E3 		mov	r1, #83886080
 11175 0610 0300A0E1 		mov	r0, r3
 11176 0614 FEFFFFEB 		bl	__RME_A7A_Write_Release
4853:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_PRC,
4854:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
4855:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
4856:../../Source/Kernel/rme_kernel.c **** 
4857:../../Source/Kernel/rme_kernel.c ****     return 0;
 11177              		.loc 1 4857 12
 11178 0618 0030A0E3 		mov	r3, #0
 11179              	.L672:
4858:../../Source/Kernel/rme_kernel.c **** }
 11180              		.loc 1 4858 1
 11181 061c 0300A0E1 		mov	r0, r3
 11182 0620 04D04BE2 		sub	sp, fp, #4
 11183              		.cfi_def_cfa 13, 8
 11184              		@ sp needed
 11185 0624 0088BDE8 		pop	{fp, pc}
 11186              		.cfi_endproc
 11187              	.LFE51:
 11189              		.section	.text._RME_Prc_Del,"ax",%progbits
 11190              		.align	2
 11191              		.syntax unified
 11192              		.arm
 11194              	_RME_Prc_Del:
 11195              	.LFB52:
4859:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Crt *************************************************/
4860:../../Source/Kernel/rme_kernel.c **** 
4861:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Del ******************************************************
4862:../../Source/Kernel/rme_kernel.c **** Description : Delete a process.
4863:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
4864:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 284


4865:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4866:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process.
4867:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
4868:../../Source/Kernel/rme_kernel.c **** Output      : None.
4869:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4870:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4871:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Del(struct RME_Cap_Cpt* Cpt,
4872:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
4873:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc)
4874:../../Source/Kernel/rme_kernel.c **** {
 11196              		.loc 1 4874 1
 11197              		.cfi_startproc
 11198              		@ args = 0, pretend = 0, frame = 40
 11199              		@ frame_needed = 1, uses_anonymous_args = 0
 11200 0000 00482DE9 		push	{fp, lr}
 11201              		.cfi_def_cfa_offset 8
 11202              		.cfi_offset 11, -8
 11203              		.cfi_offset 14, -4
 11204 0004 04B08DE2 		add	fp, sp, #4
 11205              		.cfi_def_cfa 11, 4
 11206 0008 28D04DE2 		sub	sp, sp, #40
 11207 000c 20000BE5 		str	r0, [fp, #-32]
 11208 0010 24100BE5 		str	r1, [fp, #-36]
 11209 0014 28200BE5 		str	r2, [fp, #-40]
4875:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
4876:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Del;
4877:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4878:../../Source/Kernel/rme_kernel.c ****     /* For deletion use */
4879:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Prc_Cpt;
4880:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4881:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Prc_Pgt;
4882:../../Source/Kernel/rme_kernel.c **** #endif
4883:../../Source/Kernel/rme_kernel.c **** 
4884:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4885:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11210              		.loc 1 4885 5
 11211 0018 24301BE5 		ldr	r3, [fp, #-36]
 11212 001c 803003E2 		and	r3, r3, #128
 11213 0020 000053E3 		cmp	r3, #0
 11214 0024 1C00001A 		bne	.L708
 11215              		.loc 1 4885 5 is_stmt 0 discriminator 1
 11216 0028 20301BE5 		ldr	r3, [fp, #-32]
 11217 002c 142093E5 		ldr	r2, [r3, #20]
 11218 0030 24301BE5 		ldr	r3, [fp, #-36]
 11219 0034 030052E1 		cmp	r2, r3
 11220 0038 0100008A 		bhi	.L709
 11221              		.loc 1 4885 5 discriminator 3
 11222 003c 0230E0E3 		mvn	r3, #2
 11223              		.loc 1 4885 5
 11224 0040 BC0000EA 		b	.L710
 11225              	.L709:
 11226              		.loc 1 4885 5 discriminator 4
 11227 0044 24301BE5 		ldr	r3, [fp, #-36]
 11228 0048 8322A0E1 		lsl	r2, r3, #5
 11229 004c 20301BE5 		ldr	r3, [fp, #-32]
 11230 0050 0C3093E5 		ldr	r3, [r3, #12]
 11231 0054 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 285


 11232 0058 08300BE5 		str	r3, [fp, #-8]
 11233 005c 08301BE5 		ldr	r3, [fp, #-8]
 11234 0060 0300A0E1 		mov	r0, r3
 11235 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11236 0068 0C000BE5 		str	r0, [fp, #-12]
 11237              		.loc 1 4885 5 discriminator 1
 11238 006c 0C301BE5 		ldr	r3, [fp, #-12]
 11239 0070 FF3803E2 		and	r3, r3, #16711680
 11240 0074 020853E3 		cmp	r3, #131072
 11241 0078 0100001A 		bne	.L711
 11242              		.loc 1 4885 5 discriminator 5
 11243 007c 0830E0E3 		mvn	r3, #8
 11244              		.loc 1 4885 5
 11245 0080 AC0000EA 		b	.L710
 11246              	.L711:
 11247              		.loc 1 4885 5 discriminator 6
 11248 0084 0C301BE5 		ldr	r3, [fp, #-12]
 11249 0088 233CA0E1 		lsr	r3, r3, #24
 11250 008c 030053E3 		cmp	r3, #3
 11251 0090 3F00000A 		beq	.L712
 11252              		.loc 1 4885 5 discriminator 7
 11253 0094 0130E0E3 		mvn	r3, #1
 11254              		.loc 1 4885 5
 11255 0098 A60000EA 		b	.L710
 11256              	.L708:
 11257              		.loc 1 4885 5 discriminator 2
 11258 009c 24301BE5 		ldr	r3, [fp, #-36]
 11259 00a0 2324A0E1 		lsr	r2, r3, #8
 11260 00a4 20301BE5 		ldr	r3, [fp, #-32]
 11261 00a8 143093E5 		ldr	r3, [r3, #20]
 11262 00ac 030052E1 		cmp	r2, r3
 11263 00b0 0100003A 		bcc	.L713
 11264              		.loc 1 4885 5 discriminator 8
 11265 00b4 0230E0E3 		mvn	r3, #2
 11266              		.loc 1 4885 5
 11267 00b8 9E0000EA 		b	.L710
 11268              	.L713:
 11269              		.loc 1 4885 5 discriminator 9
 11270 00bc 24301BE5 		ldr	r3, [fp, #-36]
 11271 00c0 2334A0E1 		lsr	r3, r3, #8
 11272 00c4 8322A0E1 		lsl	r2, r3, #5
 11273 00c8 20301BE5 		ldr	r3, [fp, #-32]
 11274 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11275 00d0 033082E0 		add	r3, r2, r3
 11276 00d4 08300BE5 		str	r3, [fp, #-8]
 11277 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11278 00dc 0300A0E1 		mov	r0, r3
 11279 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11280 00e4 0C000BE5 		str	r0, [fp, #-12]
 11281              		.loc 1 4885 5 discriminator 1
 11282 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 11283 00ec FF3803E2 		and	r3, r3, #16711680
 11284 00f0 020853E3 		cmp	r3, #131072
 11285 00f4 0100001A 		bne	.L714
 11286              		.loc 1 4885 5 discriminator 10
 11287 00f8 0830E0E3 		mvn	r3, #8
 11288              		.loc 1 4885 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 286


 11289 00fc 8D0000EA 		b	.L710
 11290              	.L714:
 11291              		.loc 1 4885 5 discriminator 11
 11292 0100 0C301BE5 		ldr	r3, [fp, #-12]
 11293 0104 233CA0E1 		lsr	r3, r3, #24
 11294 0108 030053E3 		cmp	r3, #3
 11295 010c 0100000A 		beq	.L715
 11296              		.loc 1 4885 5 discriminator 12
 11297 0110 0130E0E3 		mvn	r3, #1
 11298              		.loc 1 4885 5
 11299 0114 870000EA 		b	.L710
 11300              	.L715:
 11301              		.loc 1 4885 5 discriminator 13
 11302 0118 24301BE5 		ldr	r3, [fp, #-36]
 11303 011c 7F2003E2 		and	r2, r3, #127
 11304 0120 08301BE5 		ldr	r3, [fp, #-8]
 11305 0124 143093E5 		ldr	r3, [r3, #20]
 11306 0128 030052E1 		cmp	r2, r3
 11307 012c 0100003A 		bcc	.L716
 11308              		.loc 1 4885 5 discriminator 14
 11309 0130 0230E0E3 		mvn	r3, #2
 11310              		.loc 1 4885 5
 11311 0134 7F0000EA 		b	.L710
 11312              	.L716:
 11313              		.loc 1 4885 5 discriminator 15
 11314 0138 24301BE5 		ldr	r3, [fp, #-36]
 11315 013c 7F3003E2 		and	r3, r3, #127
 11316 0140 8322A0E1 		lsl	r2, r3, #5
 11317 0144 08301BE5 		ldr	r3, [fp, #-8]
 11318 0148 0C3093E5 		ldr	r3, [r3, #12]
 11319 014c 033082E0 		add	r3, r2, r3
 11320 0150 08300BE5 		str	r3, [fp, #-8]
 11321 0154 08301BE5 		ldr	r3, [fp, #-8]
 11322 0158 0300A0E1 		mov	r0, r3
 11323 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11324 0160 0C000BE5 		str	r0, [fp, #-12]
 11325              		.loc 1 4885 5 discriminator 1
 11326 0164 0C301BE5 		ldr	r3, [fp, #-12]
 11327 0168 FF3803E2 		and	r3, r3, #16711680
 11328 016c 020853E3 		cmp	r3, #131072
 11329 0170 0100001A 		bne	.L717
 11330              		.loc 1 4885 5 discriminator 16
 11331 0174 0830E0E3 		mvn	r3, #8
 11332              		.loc 1 4885 5
 11333 0178 6E0000EA 		b	.L710
 11334              	.L717:
 11335              		.loc 1 4885 5 discriminator 17
 11336 017c 0C301BE5 		ldr	r3, [fp, #-12]
 11337 0180 233CA0E1 		lsr	r3, r3, #24
 11338 0184 030053E3 		cmp	r3, #3
 11339 0188 0100000A 		beq	.L712
 11340              		.loc 1 4885 5 discriminator 18
 11341 018c 0130E0E3 		mvn	r3, #1
 11342              		.loc 1 4885 5
 11343 0190 680000EA 		b	.L710
 11344              	.L712:
4886:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 287


4887:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
4888:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 11345              		.loc 1 4888 5 is_stmt 1
 11346 0194 08301BE5 		ldr	r3, [fp, #-8]
 11347 0198 083093E5 		ldr	r3, [r3, #8]
 11348 019c 023003E2 		and	r3, r3, #2
 11349 01a0 000053E3 		cmp	r3, #0
 11350 01a4 0100001A 		bne	.L718
 11351              		.loc 1 4888 5 is_stmt 0 discriminator 1
 11352 01a8 0630E0E3 		mvn	r3, #6
 11353              		.loc 1 4888 5
 11354 01ac 610000EA 		b	.L710
 11355              	.L718:
4889:../../Source/Kernel/rme_kernel.c **** 
4890:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
4891:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Prc,struct RME_Cap_Prc*,Prc_Del);
 11356              		.loc 1 4891 5 is_stmt 1
 11357 01b0 08301BE5 		ldr	r3, [fp, #-8]
 11358 01b4 142093E5 		ldr	r2, [r3, #20]
 11359 01b8 28301BE5 		ldr	r3, [fp, #-40]
 11360 01bc 030052E1 		cmp	r2, r3
 11361 01c0 0100008A 		bhi	.L719
 11362              		.loc 1 4891 5 is_stmt 0 discriminator 1
 11363 01c4 0230E0E3 		mvn	r3, #2
 11364              		.loc 1 4891 5
 11365 01c8 5A0000EA 		b	.L710
 11366              	.L719:
 11367              		.loc 1 4891 5 discriminator 2
 11368 01cc 28301BE5 		ldr	r3, [fp, #-40]
 11369 01d0 8322A0E1 		lsl	r2, r3, #5
 11370 01d4 08301BE5 		ldr	r3, [fp, #-8]
 11371 01d8 0C3093E5 		ldr	r3, [r3, #12]
 11372 01dc 033082E0 		add	r3, r2, r3
 11373 01e0 10300BE5 		str	r3, [fp, #-16]
4892:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
4893:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Prc_Del,Type_Stat,RME_CAP_TYPE_PRC);
 11374              		.loc 1 4893 5 is_stmt 1
 11375 01e4 10301BE5 		ldr	r3, [fp, #-16]
 11376 01e8 0300A0E1 		mov	r0, r3
 11377 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11378 01f0 0C000BE5 		str	r0, [fp, #-12]
 11379              		.loc 1 4893 5 is_stmt 0 discriminator 1
 11380 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 11381 01f8 FF3803E2 		and	r3, r3, #16711680
 11382 01fc 020853E3 		cmp	r3, #131072
 11383 0200 0100000A 		beq	.L720
 11384 0204 0830E0E3 		mvn	r3, #8
 11385              		.loc 1 4893 5
 11386 0208 4A0000EA 		b	.L710
 11387              	.L720:
 11388              		.loc 1 4893 5 discriminator 2
 11389 020c 0C301BE5 		ldr	r3, [fp, #-12]
 11390 0210 233CA0E1 		lsr	r3, r3, #24
 11391 0214 050053E3 		cmp	r3, #5
 11392 0218 0100000A 		beq	.L721
 11393              		.loc 1 4893 5 discriminator 3
 11394 021c 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 288


 11395              		.loc 1 4893 5
 11396 0220 440000EA 		b	.L710
 11397              	.L721:
 11398              		.loc 1 4893 5 discriminator 4
 11399 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 11400 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 11401 022c 002093E5 		ldr	r2, [r3]
 11402 0230 10301BE5 		ldr	r3, [fp, #-16]
 11403 0234 103093E5 		ldr	r3, [r3, #16]
 11404 0238 0310A0E1 		mov	r1, r3
 11405 023c 0200A0E1 		mov	r0, r2
 11406 0240 FEFFFFEB 		bl	_RME_Diff
 11407 0244 0030A0E1 		mov	r3, r0
 11408              		.loc 1 4893 5 discriminator 1
 11409 0248 0A0053E3 		cmp	r3, #10
 11410 024c 0100008A 		bhi	.L722
 11411              		.loc 1 4893 5 discriminator 5
 11412 0250 0730E0E3 		mvn	r3, #7
 11413              		.loc 1 4893 5
 11414 0254 370000EA 		b	.L710
 11415              	.L722:
 11416              		.loc 1 4893 5 discriminator 6
 11417 0258 10301BE5 		ldr	r3, [fp, #-16]
 11418 025c 043093E5 		ldr	r3, [r3, #4]
 11419 0260 000053E3 		cmp	r3, #0
 11420 0264 0B00000A 		beq	.L723
 11421              		.loc 1 4893 5 discriminator 7
 11422 0268 0C301BE5 		ldr	r3, [fp, #-12]
 11423 026c 7330FFE6 		uxth	r3, r3
 11424 0270 000053E3 		cmp	r3, #0
 11425 0274 0500001A 		bne	.L724
 11426              		.loc 1 4893 5 discriminator 9
 11427 0278 10001BE5 		ldr	r0, [fp, #-16]
 11428 027c 0C301BE5 		ldr	r3, [fp, #-12]
 11429 0280 FF38C3E3 		bic	r3, r3, #16711680
 11430 0284 0320A0E1 		mov	r2, r3
 11431 0288 0C101BE5 		ldr	r1, [fp, #-12]
 11432 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11433              	.L724:
 11434              		.loc 1 4893 5 discriminator 11
 11435 0290 0530E0E3 		mvn	r3, #5
 11436              		.loc 1 4893 5
 11437 0294 270000EA 		b	.L710
 11438              	.L723:
 11439              		.loc 1 4893 5 discriminator 8
 11440 0298 0C301BE5 		ldr	r3, [fp, #-12]
 11441 029c 7330FFE6 		uxth	r3, r3
 11442 02a0 000053E3 		cmp	r3, #0
 11443 02a4 0800000A 		beq	.L725
 11444              		.loc 1 4893 5 discriminator 12
 11445 02a8 003000E3 		movw	r3, #:lower16:.LC6
 11446 02ac 003040E3 		movt	r3, #:upper16:.LC6
 11447 02b0 002000E3 		movw	r2, #:lower16:.LC7
 11448 02b4 002040E3 		movt	r2, #:upper16:.LC7
 11449 02b8 1D1301E3 		movw	r1, #4893
 11450 02bc 000000E3 		movw	r0, #:lower16:.LC8
 11451 02c0 000040E3 		movt	r0, #:upper16:.LC8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 289


 11452 02c4 FEFFFFEB 		bl	RME_Log
 11453              	.L726:
 11454              		.loc 1 4893 5
 11455 02c8 FEFFFFEA 		b	.L726
 11456              	.L725:
4894:../../Source/Kernel/rme_kernel.c **** 
4895:../../Source/Kernel/rme_kernel.c ****     /* Remember for deletion */
4896:../../Source/Kernel/rme_kernel.c ****     Prc_Cpt=Prc_Del->Cpt;
 11457              		.loc 1 4896 12 is_stmt 1
 11458 02cc 10301BE5 		ldr	r3, [fp, #-16]
 11459 02d0 143093E5 		ldr	r3, [r3, #20]
 11460 02d4 14300BE5 		str	r3, [fp, #-20]
4897:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4898:../../Source/Kernel/rme_kernel.c ****     Prc_Pgt=Prc_Del->Pgt;
 11461              		.loc 1 4898 12
 11462 02d8 10301BE5 		ldr	r3, [fp, #-16]
 11463 02dc 183093E5 		ldr	r3, [r3, #24]
 11464 02e0 18300BE5 		str	r3, [fp, #-24]
4899:../../Source/Kernel/rme_kernel.c **** #endif
4900:../../Source/Kernel/rme_kernel.c **** 
4901:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
4902:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Prc_Del,Type_Stat);
 11465              		.loc 1 4902 5
 11466 02e4 10301BE5 		ldr	r3, [fp, #-16]
 11467 02e8 0020A0E3 		mov	r2, #0
 11468 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 11469 02f0 0300A0E1 		mov	r0, r3
 11470 02f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11471 02f8 0030A0E1 		mov	r3, r0
 11472              		.loc 1 4902 5 is_stmt 0 discriminator 1
 11473 02fc 000053E3 		cmp	r3, #0
 11474 0300 0100001A 		bne	.L727
 11475 0304 0030E0E3 		mvn	r3, #0
 11476              		.loc 1 4902 5
 11477 0308 0A0000EA 		b	.L710
 11478              	.L727:
4903:../../Source/Kernel/rme_kernel.c **** 
4904:../../Source/Kernel/rme_kernel.c ****     /* Dereference caps */
4905:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Cpt->Head.Root_Ref),-1);
 11479              		.loc 1 4905 5 is_stmt 1
 11480 030c 14301BE5 		ldr	r3, [fp, #-20]
 11481 0310 043083E2 		add	r3, r3, #4
 11482 0314 0010E0E3 		mvn	r1, #0
 11483 0318 0300A0E1 		mov	r0, r3
 11484 031c FEFFFFEB 		bl	_RME_Fetch_Add_Single
4906:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4907:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Pgt->Head.Root_Ref),-1);
 11485              		.loc 1 4907 5
 11486 0320 18301BE5 		ldr	r3, [fp, #-24]
 11487 0324 043083E2 		add	r3, r3, #4
 11488 0328 0010E0E3 		mvn	r1, #0
 11489 032c 0300A0E1 		mov	r0, r3
 11490 0330 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4908:../../Source/Kernel/rme_kernel.c **** #endif
4909:../../Source/Kernel/rme_kernel.c ****     
4910:../../Source/Kernel/rme_kernel.c ****     return 0;
 11491              		.loc 1 4910 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 290


 11492 0334 0030A0E3 		mov	r3, #0
 11493              	.L710:
4911:../../Source/Kernel/rme_kernel.c **** }
 11494              		.loc 1 4911 1
 11495 0338 0300A0E1 		mov	r0, r3
 11496 033c 04D04BE2 		sub	sp, fp, #4
 11497              		.cfi_def_cfa 13, 8
 11498              		@ sp needed
 11499 0340 0088BDE8 		pop	{fp, pc}
 11500              		.cfi_endproc
 11501              	.LFE52:
 11503              		.section	.text._RME_Prc_Cpt,"ax",%progbits
 11504              		.align	2
 11505              		.syntax unified
 11506              		.arm
 11508              	_RME_Prc_Cpt:
 11509              	.LFB53:
4912:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Del *************************************************/
4913:../../Source/Kernel/rme_kernel.c **** 
4914:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Cpt ******************************************************
4915:../../Source/Kernel/rme_kernel.c **** Description : Change a process's capability table.
4916:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4917:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4918:../../Source/Kernel/rme_kernel.c ****                                   created already.
4919:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4920:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
4921:../../Source/Kernel/rme_kernel.c ****                                   for this process.
4922:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4923:../../Source/Kernel/rme_kernel.c **** Output      : None.
4924:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4925:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4926:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Cpt(struct RME_Cap_Cpt* Cpt,
4927:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4928:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt)
4929:../../Source/Kernel/rme_kernel.c **** {
 11510              		.loc 1 4929 1
 11511              		.cfi_startproc
 11512              		@ args = 0, pretend = 0, frame = 32
 11513              		@ frame_needed = 1, uses_anonymous_args = 0
 11514 0000 00482DE9 		push	{fp, lr}
 11515              		.cfi_def_cfa_offset 8
 11516              		.cfi_offset 11, -8
 11517              		.cfi_offset 14, -4
 11518 0004 04B08DE2 		add	fp, sp, #4
 11519              		.cfi_def_cfa 11, 4
 11520 0008 20D04DE2 		sub	sp, sp, #32
 11521 000c 18000BE5 		str	r0, [fp, #-24]
 11522 0010 1C100BE5 		str	r1, [fp, #-28]
 11523 0014 20200BE5 		str	r2, [fp, #-32]
4930:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4931:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_New;
4932:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Old;
4933:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
4934:../../Source/Kernel/rme_kernel.c ****     
4935:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
4936:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11524              		.loc 1 4936 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 291


 11525 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11526 001c 803003E2 		and	r3, r3, #128
 11527 0020 000053E3 		cmp	r3, #0
 11528 0024 1C00001A 		bne	.L729
 11529              		.loc 1 4936 5 is_stmt 0 discriminator 1
 11530 0028 18301BE5 		ldr	r3, [fp, #-24]
 11531 002c 142093E5 		ldr	r2, [r3, #20]
 11532 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11533 0034 030052E1 		cmp	r2, r3
 11534 0038 0100008A 		bhi	.L730
 11535              		.loc 1 4936 5 discriminator 3
 11536 003c 0230E0E3 		mvn	r3, #2
 11537              		.loc 1 4936 5
 11538 0040 E30000EA 		b	.L731
 11539              	.L730:
 11540              		.loc 1 4936 5 discriminator 4
 11541 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11542 0048 8322A0E1 		lsl	r2, r3, #5
 11543 004c 18301BE5 		ldr	r3, [fp, #-24]
 11544 0050 0C3093E5 		ldr	r3, [r3, #12]
 11545 0054 033082E0 		add	r3, r2, r3
 11546 0058 08300BE5 		str	r3, [fp, #-8]
 11547 005c 08301BE5 		ldr	r3, [fp, #-8]
 11548 0060 0300A0E1 		mov	r0, r3
 11549 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11550 0068 10000BE5 		str	r0, [fp, #-16]
 11551              		.loc 1 4936 5 discriminator 1
 11552 006c 10301BE5 		ldr	r3, [fp, #-16]
 11553 0070 FF3803E2 		and	r3, r3, #16711680
 11554 0074 020853E3 		cmp	r3, #131072
 11555 0078 0100001A 		bne	.L732
 11556              		.loc 1 4936 5 discriminator 5
 11557 007c 0830E0E3 		mvn	r3, #8
 11558              		.loc 1 4936 5
 11559 0080 D30000EA 		b	.L731
 11560              	.L732:
 11561              		.loc 1 4936 5 discriminator 6
 11562 0084 10301BE5 		ldr	r3, [fp, #-16]
 11563 0088 233CA0E1 		lsr	r3, r3, #24
 11564 008c 050053E3 		cmp	r3, #5
 11565 0090 3F00000A 		beq	.L733
 11566              		.loc 1 4936 5 discriminator 7
 11567 0094 0130E0E3 		mvn	r3, #1
 11568              		.loc 1 4936 5
 11569 0098 CD0000EA 		b	.L731
 11570              	.L729:
 11571              		.loc 1 4936 5 discriminator 2
 11572 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11573 00a0 2324A0E1 		lsr	r2, r3, #8
 11574 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11575 00a8 143093E5 		ldr	r3, [r3, #20]
 11576 00ac 030052E1 		cmp	r2, r3
 11577 00b0 0100003A 		bcc	.L734
 11578              		.loc 1 4936 5 discriminator 8
 11579 00b4 0230E0E3 		mvn	r3, #2
 11580              		.loc 1 4936 5
 11581 00b8 C50000EA 		b	.L731
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 292


 11582              	.L734:
 11583              		.loc 1 4936 5 discriminator 9
 11584 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11585 00c0 2334A0E1 		lsr	r3, r3, #8
 11586 00c4 8322A0E1 		lsl	r2, r3, #5
 11587 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11588 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11589 00d0 033082E0 		add	r3, r2, r3
 11590 00d4 08300BE5 		str	r3, [fp, #-8]
 11591 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11592 00dc 0300A0E1 		mov	r0, r3
 11593 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11594 00e4 10000BE5 		str	r0, [fp, #-16]
 11595              		.loc 1 4936 5 discriminator 1
 11596 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11597 00ec FF3803E2 		and	r3, r3, #16711680
 11598 00f0 020853E3 		cmp	r3, #131072
 11599 00f4 0100001A 		bne	.L735
 11600              		.loc 1 4936 5 discriminator 10
 11601 00f8 0830E0E3 		mvn	r3, #8
 11602              		.loc 1 4936 5
 11603 00fc B40000EA 		b	.L731
 11604              	.L735:
 11605              		.loc 1 4936 5 discriminator 11
 11606 0100 10301BE5 		ldr	r3, [fp, #-16]
 11607 0104 233CA0E1 		lsr	r3, r3, #24
 11608 0108 030053E3 		cmp	r3, #3
 11609 010c 0100000A 		beq	.L736
 11610              		.loc 1 4936 5 discriminator 12
 11611 0110 0130E0E3 		mvn	r3, #1
 11612              		.loc 1 4936 5
 11613 0114 AE0000EA 		b	.L731
 11614              	.L736:
 11615              		.loc 1 4936 5 discriminator 13
 11616 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11617 011c 7F2003E2 		and	r2, r3, #127
 11618 0120 08301BE5 		ldr	r3, [fp, #-8]
 11619 0124 143093E5 		ldr	r3, [r3, #20]
 11620 0128 030052E1 		cmp	r2, r3
 11621 012c 0100003A 		bcc	.L737
 11622              		.loc 1 4936 5 discriminator 14
 11623 0130 0230E0E3 		mvn	r3, #2
 11624              		.loc 1 4936 5
 11625 0134 A60000EA 		b	.L731
 11626              	.L737:
 11627              		.loc 1 4936 5 discriminator 15
 11628 0138 1C301BE5 		ldr	r3, [fp, #-28]
 11629 013c 7F3003E2 		and	r3, r3, #127
 11630 0140 8322A0E1 		lsl	r2, r3, #5
 11631 0144 08301BE5 		ldr	r3, [fp, #-8]
 11632 0148 0C3093E5 		ldr	r3, [r3, #12]
 11633 014c 033082E0 		add	r3, r2, r3
 11634 0150 08300BE5 		str	r3, [fp, #-8]
 11635 0154 08301BE5 		ldr	r3, [fp, #-8]
 11636 0158 0300A0E1 		mov	r0, r3
 11637 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11638 0160 10000BE5 		str	r0, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 293


 11639              		.loc 1 4936 5 discriminator 1
 11640 0164 10301BE5 		ldr	r3, [fp, #-16]
 11641 0168 FF3803E2 		and	r3, r3, #16711680
 11642 016c 020853E3 		cmp	r3, #131072
 11643 0170 0100001A 		bne	.L738
 11644              		.loc 1 4936 5 discriminator 16
 11645 0174 0830E0E3 		mvn	r3, #8
 11646              		.loc 1 4936 5
 11647 0178 950000EA 		b	.L731
 11648              	.L738:
 11649              		.loc 1 4936 5 discriminator 17
 11650 017c 10301BE5 		ldr	r3, [fp, #-16]
 11651 0180 233CA0E1 		lsr	r3, r3, #24
 11652 0184 050053E3 		cmp	r3, #5
 11653 0188 0100000A 		beq	.L733
 11654              		.loc 1 4936 5 discriminator 18
 11655 018c 0130E0E3 		mvn	r3, #1
 11656              		.loc 1 4936 5
 11657 0190 8F0000EA 		b	.L731
 11658              	.L733:
4937:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
4938:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 11659              		.loc 1 4938 5 is_stmt 1
 11660 0194 20301BE5 		ldr	r3, [fp, #-32]
 11661 0198 803003E2 		and	r3, r3, #128
 11662 019c 000053E3 		cmp	r3, #0
 11663 01a0 1C00001A 		bne	.L739
 11664              		.loc 1 4938 5 is_stmt 0 discriminator 1
 11665 01a4 18301BE5 		ldr	r3, [fp, #-24]
 11666 01a8 142093E5 		ldr	r2, [r3, #20]
 11667 01ac 20301BE5 		ldr	r3, [fp, #-32]
 11668 01b0 030052E1 		cmp	r2, r3
 11669 01b4 0100008A 		bhi	.L740
 11670              		.loc 1 4938 5 discriminator 3
 11671 01b8 0230E0E3 		mvn	r3, #2
 11672              		.loc 1 4938 5
 11673 01bc 840000EA 		b	.L731
 11674              	.L740:
 11675              		.loc 1 4938 5 discriminator 4
 11676 01c0 20301BE5 		ldr	r3, [fp, #-32]
 11677 01c4 8322A0E1 		lsl	r2, r3, #5
 11678 01c8 18301BE5 		ldr	r3, [fp, #-24]
 11679 01cc 0C3093E5 		ldr	r3, [r3, #12]
 11680 01d0 033082E0 		add	r3, r2, r3
 11681 01d4 0C300BE5 		str	r3, [fp, #-12]
 11682 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 11683 01dc 0300A0E1 		mov	r0, r3
 11684 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11685 01e4 10000BE5 		str	r0, [fp, #-16]
 11686              		.loc 1 4938 5 discriminator 1
 11687 01e8 10301BE5 		ldr	r3, [fp, #-16]
 11688 01ec FF3803E2 		and	r3, r3, #16711680
 11689 01f0 020853E3 		cmp	r3, #131072
 11690 01f4 0100001A 		bne	.L741
 11691              		.loc 1 4938 5 discriminator 5
 11692 01f8 0830E0E3 		mvn	r3, #8
 11693              		.loc 1 4938 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 294


 11694 01fc 740000EA 		b	.L731
 11695              	.L741:
 11696              		.loc 1 4938 5 discriminator 6
 11697 0200 10301BE5 		ldr	r3, [fp, #-16]
 11698 0204 233CA0E1 		lsr	r3, r3, #24
 11699 0208 030053E3 		cmp	r3, #3
 11700 020c 3F00000A 		beq	.L742
 11701              		.loc 1 4938 5 discriminator 7
 11702 0210 0130E0E3 		mvn	r3, #1
 11703              		.loc 1 4938 5
 11704 0214 6E0000EA 		b	.L731
 11705              	.L739:
 11706              		.loc 1 4938 5 discriminator 2
 11707 0218 20301BE5 		ldr	r3, [fp, #-32]
 11708 021c 2324A0E1 		lsr	r2, r3, #8
 11709 0220 18301BE5 		ldr	r3, [fp, #-24]
 11710 0224 143093E5 		ldr	r3, [r3, #20]
 11711 0228 030052E1 		cmp	r2, r3
 11712 022c 0100003A 		bcc	.L743
 11713              		.loc 1 4938 5 discriminator 8
 11714 0230 0230E0E3 		mvn	r3, #2
 11715              		.loc 1 4938 5
 11716 0234 660000EA 		b	.L731
 11717              	.L743:
 11718              		.loc 1 4938 5 discriminator 9
 11719 0238 20301BE5 		ldr	r3, [fp, #-32]
 11720 023c 2334A0E1 		lsr	r3, r3, #8
 11721 0240 8322A0E1 		lsl	r2, r3, #5
 11722 0244 18301BE5 		ldr	r3, [fp, #-24]
 11723 0248 0C3093E5 		ldr	r3, [r3, #12]
 11724 024c 033082E0 		add	r3, r2, r3
 11725 0250 0C300BE5 		str	r3, [fp, #-12]
 11726 0254 0C301BE5 		ldr	r3, [fp, #-12]
 11727 0258 0300A0E1 		mov	r0, r3
 11728 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11729 0260 10000BE5 		str	r0, [fp, #-16]
 11730              		.loc 1 4938 5 discriminator 1
 11731 0264 10301BE5 		ldr	r3, [fp, #-16]
 11732 0268 FF3803E2 		and	r3, r3, #16711680
 11733 026c 020853E3 		cmp	r3, #131072
 11734 0270 0100001A 		bne	.L744
 11735              		.loc 1 4938 5 discriminator 10
 11736 0274 0830E0E3 		mvn	r3, #8
 11737              		.loc 1 4938 5
 11738 0278 550000EA 		b	.L731
 11739              	.L744:
 11740              		.loc 1 4938 5 discriminator 11
 11741 027c 10301BE5 		ldr	r3, [fp, #-16]
 11742 0280 233CA0E1 		lsr	r3, r3, #24
 11743 0284 030053E3 		cmp	r3, #3
 11744 0288 0100000A 		beq	.L745
 11745              		.loc 1 4938 5 discriminator 12
 11746 028c 0130E0E3 		mvn	r3, #1
 11747              		.loc 1 4938 5
 11748 0290 4F0000EA 		b	.L731
 11749              	.L745:
 11750              		.loc 1 4938 5 discriminator 13
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 295


 11751 0294 20301BE5 		ldr	r3, [fp, #-32]
 11752 0298 7F2003E2 		and	r2, r3, #127
 11753 029c 0C301BE5 		ldr	r3, [fp, #-12]
 11754 02a0 143093E5 		ldr	r3, [r3, #20]
 11755 02a4 030052E1 		cmp	r2, r3
 11756 02a8 0100003A 		bcc	.L746
 11757              		.loc 1 4938 5 discriminator 14
 11758 02ac 0230E0E3 		mvn	r3, #2
 11759              		.loc 1 4938 5
 11760 02b0 470000EA 		b	.L731
 11761              	.L746:
 11762              		.loc 1 4938 5 discriminator 15
 11763 02b4 20301BE5 		ldr	r3, [fp, #-32]
 11764 02b8 7F3003E2 		and	r3, r3, #127
 11765 02bc 8322A0E1 		lsl	r2, r3, #5
 11766 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 11767 02c4 0C3093E5 		ldr	r3, [r3, #12]
 11768 02c8 033082E0 		add	r3, r2, r3
 11769 02cc 0C300BE5 		str	r3, [fp, #-12]
 11770 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 11771 02d4 0300A0E1 		mov	r0, r3
 11772 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11773 02dc 10000BE5 		str	r0, [fp, #-16]
 11774              		.loc 1 4938 5 discriminator 1
 11775 02e0 10301BE5 		ldr	r3, [fp, #-16]
 11776 02e4 FF3803E2 		and	r3, r3, #16711680
 11777 02e8 020853E3 		cmp	r3, #131072
 11778 02ec 0100001A 		bne	.L747
 11779              		.loc 1 4938 5 discriminator 16
 11780 02f0 0830E0E3 		mvn	r3, #8
 11781              		.loc 1 4938 5
 11782 02f4 360000EA 		b	.L731
 11783              	.L747:
 11784              		.loc 1 4938 5 discriminator 17
 11785 02f8 10301BE5 		ldr	r3, [fp, #-16]
 11786 02fc 233CA0E1 		lsr	r3, r3, #24
 11787 0300 030053E3 		cmp	r3, #3
 11788 0304 0100000A 		beq	.L742
 11789              		.loc 1 4938 5 discriminator 18
 11790 0308 0130E0E3 		mvn	r3, #1
 11791              		.loc 1 4938 5
 11792 030c 300000EA 		b	.L731
 11793              	.L742:
4939:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_New,Type_Stat);     
4940:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
4941:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_CPT);
 11794              		.loc 1 4941 5 is_stmt 1
 11795 0310 08301BE5 		ldr	r3, [fp, #-8]
 11796 0314 083093E5 		ldr	r3, [r3, #8]
 11797 0318 043003E2 		and	r3, r3, #4
 11798 031c 000053E3 		cmp	r3, #0
 11799 0320 0100001A 		bne	.L748
 11800              		.loc 1 4941 5 is_stmt 0 discriminator 1
 11801 0324 0630E0E3 		mvn	r3, #6
 11802              		.loc 1 4941 5
 11803 0328 290000EA 		b	.L731
 11804              	.L748:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 296


4942:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_New,RME_CPT_FLAG_PRC_CPT);
 11805              		.loc 1 4942 5 is_stmt 1
 11806 032c 0C301BE5 		ldr	r3, [fp, #-12]
 11807 0330 083093E5 		ldr	r3, [r3, #8]
 11808 0334 803003E2 		and	r3, r3, #128
 11809 0338 000053E3 		cmp	r3, #0
 11810 033c 0100001A 		bne	.L749
 11811              		.loc 1 4942 5 is_stmt 0 discriminator 1
 11812 0340 0630E0E3 		mvn	r3, #6
 11813              		.loc 1 4942 5
 11814 0344 220000EA 		b	.L731
 11815              	.L749:
4943:../../Source/Kernel/rme_kernel.c ****     
4944:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
4945:../../Source/Kernel/rme_kernel.c ****     Cpt_New=RME_CAP_CONV_ROOT(Cpt_New,struct RME_Cap_Cpt*);
 11816              		.loc 1 4945 13 is_stmt 1
 11817 0348 0C301BE5 		ldr	r3, [fp, #-12]
 11818 034c 003093E5 		ldr	r3, [r3]
 11819 0350 7330FFE6 		uxth	r3, r3
 11820 0354 000053E3 		cmp	r3, #0
 11821 0358 0200000A 		beq	.L750
 11822              		.loc 1 4945 13 is_stmt 0 discriminator 1
 11823 035c 0C301BE5 		ldr	r3, [fp, #-12]
 11824 0360 043093E5 		ldr	r3, [r3, #4]
 11825 0364 000000EA 		b	.L751
 11826              	.L750:
 11827              		.loc 1 4945 13 discriminator 2
 11828 0368 0C301BE5 		ldr	r3, [fp, #-12]
 11829              	.L751:
 11830              		.loc 1 4945 12 is_stmt 1 discriminator 4
 11831 036c 0C300BE5 		str	r3, [fp, #-12]
4946:../../Source/Kernel/rme_kernel.c ****     
4947:../../Source/Kernel/rme_kernel.c ****     /* Commit the change */
4948:../../Source/Kernel/rme_kernel.c ****     Cpt_Old=Prc_Op->Cpt;
 11832              		.loc 1 4948 12
 11833 0370 08301BE5 		ldr	r3, [fp, #-8]
 11834 0374 143093E5 		ldr	r3, [r3, #20]
 11835 0378 14300BE5 		str	r3, [fp, #-20]
4949:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Cpt)),
 11836              		.loc 1 4949 8
 11837 037c 08301BE5 		ldr	r3, [fp, #-8]
 11838 0380 143083E2 		add	r3, r3, #20
 11839 0384 14101BE5 		ldr	r1, [fp, #-20]
 11840 0388 0C201BE5 		ldr	r2, [fp, #-12]
 11841 038c 0300A0E1 		mov	r0, r3
 11842 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 11843 0394 0030A0E1 		mov	r3, r0
 11844              		.loc 1 4949 7 discriminator 1
 11845 0398 000053E3 		cmp	r3, #0
 11846 039c 0100001A 		bne	.L752
4950:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Cpt_Old,(rme_ptr_t)Cpt_New)==RME_CASFAIL)
4951:../../Source/Kernel/rme_kernel.c ****     {
4952:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4953:../../Source/Kernel/rme_kernel.c ****         
4954:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 11847              		.loc 1 4954 16
 11848 03a0 C930E0E3 		mvn	r3, #201
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 297


 11849 03a4 0A0000EA 		b	.L731
 11850              	.L752:
4955:../../Source/Kernel/rme_kernel.c ****     }
4956:../../Source/Kernel/rme_kernel.c ****     else
4957:../../Source/Kernel/rme_kernel.c ****     {
4958:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
4959:../../Source/Kernel/rme_kernel.c ****         /* No action required */
4960:../../Source/Kernel/rme_kernel.c ****     }
4961:../../Source/Kernel/rme_kernel.c ****     
4962:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
4963:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_New->Head.Root_Ref),1);
 11851              		.loc 1 4963 5
 11852 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 11853 03ac 043083E2 		add	r3, r3, #4
 11854 03b0 0110A0E3 		mov	r1, #1
 11855 03b4 0300A0E1 		mov	r0, r3
 11856 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
4964:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Cpt_Old->Head.Root_Ref),-1);
 11857              		.loc 1 4964 5
 11858 03bc 14301BE5 		ldr	r3, [fp, #-20]
 11859 03c0 043083E2 		add	r3, r3, #4
 11860 03c4 0010E0E3 		mvn	r1, #0
 11861 03c8 0300A0E1 		mov	r0, r3
 11862 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
4965:../../Source/Kernel/rme_kernel.c **** 
4966:../../Source/Kernel/rme_kernel.c ****     return 0;
 11863              		.loc 1 4966 12
 11864 03d0 0030A0E3 		mov	r3, #0
 11865              	.L731:
4967:../../Source/Kernel/rme_kernel.c **** }
 11866              		.loc 1 4967 1
 11867 03d4 0300A0E1 		mov	r0, r3
 11868 03d8 04D04BE2 		sub	sp, fp, #4
 11869              		.cfi_def_cfa 13, 8
 11870              		@ sp needed
 11871 03dc 0088BDE8 		pop	{fp, pc}
 11872              		.cfi_endproc
 11873              	.LFE53:
 11875              		.section	.text._RME_Prc_Pgt,"ax",%progbits
 11876              		.align	2
 11877              		.syntax unified
 11878              		.arm
 11880              	_RME_Prc_Pgt:
 11881              	.LFB54:
4968:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Cpt *************************************************/
4969:../../Source/Kernel/rme_kernel.c **** 
4970:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Prc_Pgt ******************************************************
4971:../../Source/Kernel/rme_kernel.c **** Description : Change a process's page table.
4972:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
4973:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that have been
4974:../../Source/Kernel/rme_kernel.c ****                                   created already.
4975:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4976:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Pgt - The capability to the page table to use for
4977:../../Source/Kernel/rme_kernel.c ****                                   this process.
4978:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
4979:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raw_Pgt - Alternate user-supplied page table physical
4980:../../Source/Kernel/rme_kernel.c ****                                   address.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 298


4981:../../Source/Kernel/rme_kernel.c **** Output      : None.
4982:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
4983:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
4984:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4985:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4986:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4987:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Pgt)
4988:../../Source/Kernel/rme_kernel.c **** #else
4989:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Prc_Pgt(struct RME_Cap_Cpt* Cpt,
4990:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
4991:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raw_Pgt)
4992:../../Source/Kernel/rme_kernel.c **** #endif
4993:../../Source/Kernel/rme_kernel.c **** {
 11882              		.loc 1 4993 1
 11883              		.cfi_startproc
 11884              		@ args = 0, pretend = 0, frame = 32
 11885              		@ frame_needed = 1, uses_anonymous_args = 0
 11886 0000 00482DE9 		push	{fp, lr}
 11887              		.cfi_def_cfa_offset 8
 11888              		.cfi_offset 11, -8
 11889              		.cfi_offset 14, -4
 11890 0004 04B08DE2 		add	fp, sp, #4
 11891              		.cfi_def_cfa 11, 4
 11892 0008 20D04DE2 		sub	sp, sp, #32
 11893 000c 18000BE5 		str	r0, [fp, #-24]
 11894 0010 1C100BE5 		str	r1, [fp, #-28]
 11895 0014 20200BE5 		str	r2, [fp, #-32]
4994:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
4995:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
4996:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_New;
4997:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Pgt* Pgt_Old;
4998:../../Source/Kernel/rme_kernel.c **** #else
4999:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Pgt_Old;
5000:../../Source/Kernel/rme_kernel.c **** #endif
5001:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5002:../../Source/Kernel/rme_kernel.c ****     
5003:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5004:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 11896              		.loc 1 5004 5
 11897 0018 1C301BE5 		ldr	r3, [fp, #-28]
 11898 001c 803003E2 		and	r3, r3, #128
 11899 0020 000053E3 		cmp	r3, #0
 11900 0024 1C00001A 		bne	.L754
 11901              		.loc 1 5004 5 is_stmt 0 discriminator 1
 11902 0028 18301BE5 		ldr	r3, [fp, #-24]
 11903 002c 142093E5 		ldr	r2, [r3, #20]
 11904 0030 1C301BE5 		ldr	r3, [fp, #-28]
 11905 0034 030052E1 		cmp	r2, r3
 11906 0038 0100008A 		bhi	.L755
 11907              		.loc 1 5004 5 discriminator 3
 11908 003c 0230E0E3 		mvn	r3, #2
 11909              		.loc 1 5004 5
 11910 0040 E30000EA 		b	.L756
 11911              	.L755:
 11912              		.loc 1 5004 5 discriminator 4
 11913 0044 1C301BE5 		ldr	r3, [fp, #-28]
 11914 0048 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 299


 11915 004c 18301BE5 		ldr	r3, [fp, #-24]
 11916 0050 0C3093E5 		ldr	r3, [r3, #12]
 11917 0054 033082E0 		add	r3, r2, r3
 11918 0058 08300BE5 		str	r3, [fp, #-8]
 11919 005c 08301BE5 		ldr	r3, [fp, #-8]
 11920 0060 0300A0E1 		mov	r0, r3
 11921 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11922 0068 10000BE5 		str	r0, [fp, #-16]
 11923              		.loc 1 5004 5 discriminator 1
 11924 006c 10301BE5 		ldr	r3, [fp, #-16]
 11925 0070 FF3803E2 		and	r3, r3, #16711680
 11926 0074 020853E3 		cmp	r3, #131072
 11927 0078 0100001A 		bne	.L757
 11928              		.loc 1 5004 5 discriminator 5
 11929 007c 0830E0E3 		mvn	r3, #8
 11930              		.loc 1 5004 5
 11931 0080 D30000EA 		b	.L756
 11932              	.L757:
 11933              		.loc 1 5004 5 discriminator 6
 11934 0084 10301BE5 		ldr	r3, [fp, #-16]
 11935 0088 233CA0E1 		lsr	r3, r3, #24
 11936 008c 050053E3 		cmp	r3, #5
 11937 0090 3F00000A 		beq	.L758
 11938              		.loc 1 5004 5 discriminator 7
 11939 0094 0130E0E3 		mvn	r3, #1
 11940              		.loc 1 5004 5
 11941 0098 CD0000EA 		b	.L756
 11942              	.L754:
 11943              		.loc 1 5004 5 discriminator 2
 11944 009c 1C301BE5 		ldr	r3, [fp, #-28]
 11945 00a0 2324A0E1 		lsr	r2, r3, #8
 11946 00a4 18301BE5 		ldr	r3, [fp, #-24]
 11947 00a8 143093E5 		ldr	r3, [r3, #20]
 11948 00ac 030052E1 		cmp	r2, r3
 11949 00b0 0100003A 		bcc	.L759
 11950              		.loc 1 5004 5 discriminator 8
 11951 00b4 0230E0E3 		mvn	r3, #2
 11952              		.loc 1 5004 5
 11953 00b8 C50000EA 		b	.L756
 11954              	.L759:
 11955              		.loc 1 5004 5 discriminator 9
 11956 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 11957 00c0 2334A0E1 		lsr	r3, r3, #8
 11958 00c4 8322A0E1 		lsl	r2, r3, #5
 11959 00c8 18301BE5 		ldr	r3, [fp, #-24]
 11960 00cc 0C3093E5 		ldr	r3, [r3, #12]
 11961 00d0 033082E0 		add	r3, r2, r3
 11962 00d4 08300BE5 		str	r3, [fp, #-8]
 11963 00d8 08301BE5 		ldr	r3, [fp, #-8]
 11964 00dc 0300A0E1 		mov	r0, r3
 11965 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 11966 00e4 10000BE5 		str	r0, [fp, #-16]
 11967              		.loc 1 5004 5 discriminator 1
 11968 00e8 10301BE5 		ldr	r3, [fp, #-16]
 11969 00ec FF3803E2 		and	r3, r3, #16711680
 11970 00f0 020853E3 		cmp	r3, #131072
 11971 00f4 0100001A 		bne	.L760
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 300


 11972              		.loc 1 5004 5 discriminator 10
 11973 00f8 0830E0E3 		mvn	r3, #8
 11974              		.loc 1 5004 5
 11975 00fc B40000EA 		b	.L756
 11976              	.L760:
 11977              		.loc 1 5004 5 discriminator 11
 11978 0100 10301BE5 		ldr	r3, [fp, #-16]
 11979 0104 233CA0E1 		lsr	r3, r3, #24
 11980 0108 030053E3 		cmp	r3, #3
 11981 010c 0100000A 		beq	.L761
 11982              		.loc 1 5004 5 discriminator 12
 11983 0110 0130E0E3 		mvn	r3, #1
 11984              		.loc 1 5004 5
 11985 0114 AE0000EA 		b	.L756
 11986              	.L761:
 11987              		.loc 1 5004 5 discriminator 13
 11988 0118 1C301BE5 		ldr	r3, [fp, #-28]
 11989 011c 7F2003E2 		and	r2, r3, #127
 11990 0120 08301BE5 		ldr	r3, [fp, #-8]
 11991 0124 143093E5 		ldr	r3, [r3, #20]
 11992 0128 030052E1 		cmp	r2, r3
 11993 012c 0100003A 		bcc	.L762
 11994              		.loc 1 5004 5 discriminator 14
 11995 0130 0230E0E3 		mvn	r3, #2
 11996              		.loc 1 5004 5
 11997 0134 A60000EA 		b	.L756
 11998              	.L762:
 11999              		.loc 1 5004 5 discriminator 15
 12000 0138 1C301BE5 		ldr	r3, [fp, #-28]
 12001 013c 7F3003E2 		and	r3, r3, #127
 12002 0140 8322A0E1 		lsl	r2, r3, #5
 12003 0144 08301BE5 		ldr	r3, [fp, #-8]
 12004 0148 0C3093E5 		ldr	r3, [r3, #12]
 12005 014c 033082E0 		add	r3, r2, r3
 12006 0150 08300BE5 		str	r3, [fp, #-8]
 12007 0154 08301BE5 		ldr	r3, [fp, #-8]
 12008 0158 0300A0E1 		mov	r0, r3
 12009 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12010 0160 10000BE5 		str	r0, [fp, #-16]
 12011              		.loc 1 5004 5 discriminator 1
 12012 0164 10301BE5 		ldr	r3, [fp, #-16]
 12013 0168 FF3803E2 		and	r3, r3, #16711680
 12014 016c 020853E3 		cmp	r3, #131072
 12015 0170 0100001A 		bne	.L763
 12016              		.loc 1 5004 5 discriminator 16
 12017 0174 0830E0E3 		mvn	r3, #8
 12018              		.loc 1 5004 5
 12019 0178 950000EA 		b	.L756
 12020              	.L763:
 12021              		.loc 1 5004 5 discriminator 17
 12022 017c 10301BE5 		ldr	r3, [fp, #-16]
 12023 0180 233CA0E1 		lsr	r3, r3, #24
 12024 0184 050053E3 		cmp	r3, #5
 12025 0188 0100000A 		beq	.L758
 12026              		.loc 1 5004 5 discriminator 18
 12027 018c 0130E0E3 		mvn	r3, #1
 12028              		.loc 1 5004 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 301


 12029 0190 8F0000EA 		b	.L756
 12030              	.L758:
5005:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat); 
5006:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5007:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Pgt,RME_CAP_TYPE_PGT,
 12031              		.loc 1 5007 5 is_stmt 1
 12032 0194 20301BE5 		ldr	r3, [fp, #-32]
 12033 0198 803003E2 		and	r3, r3, #128
 12034 019c 000053E3 		cmp	r3, #0
 12035 01a0 1C00001A 		bne	.L764
 12036              		.loc 1 5007 5 is_stmt 0 discriminator 1
 12037 01a4 18301BE5 		ldr	r3, [fp, #-24]
 12038 01a8 142093E5 		ldr	r2, [r3, #20]
 12039 01ac 20301BE5 		ldr	r3, [fp, #-32]
 12040 01b0 030052E1 		cmp	r2, r3
 12041 01b4 0100008A 		bhi	.L765
 12042              		.loc 1 5007 5 discriminator 3
 12043 01b8 0230E0E3 		mvn	r3, #2
 12044              		.loc 1 5007 5
 12045 01bc 840000EA 		b	.L756
 12046              	.L765:
 12047              		.loc 1 5007 5 discriminator 4
 12048 01c0 20301BE5 		ldr	r3, [fp, #-32]
 12049 01c4 8322A0E1 		lsl	r2, r3, #5
 12050 01c8 18301BE5 		ldr	r3, [fp, #-24]
 12051 01cc 0C3093E5 		ldr	r3, [r3, #12]
 12052 01d0 033082E0 		add	r3, r2, r3
 12053 01d4 0C300BE5 		str	r3, [fp, #-12]
 12054 01d8 0C301BE5 		ldr	r3, [fp, #-12]
 12055 01dc 0300A0E1 		mov	r0, r3
 12056 01e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12057 01e4 10000BE5 		str	r0, [fp, #-16]
 12058              		.loc 1 5007 5 discriminator 1
 12059 01e8 10301BE5 		ldr	r3, [fp, #-16]
 12060 01ec FF3803E2 		and	r3, r3, #16711680
 12061 01f0 020853E3 		cmp	r3, #131072
 12062 01f4 0100001A 		bne	.L766
 12063              		.loc 1 5007 5 discriminator 5
 12064 01f8 0830E0E3 		mvn	r3, #8
 12065              		.loc 1 5007 5
 12066 01fc 740000EA 		b	.L756
 12067              	.L766:
 12068              		.loc 1 5007 5 discriminator 6
 12069 0200 10301BE5 		ldr	r3, [fp, #-16]
 12070 0204 233CA0E1 		lsr	r3, r3, #24
 12071 0208 040053E3 		cmp	r3, #4
 12072 020c 3F00000A 		beq	.L767
 12073              		.loc 1 5007 5 discriminator 7
 12074 0210 0130E0E3 		mvn	r3, #1
 12075              		.loc 1 5007 5
 12076 0214 6E0000EA 		b	.L756
 12077              	.L764:
 12078              		.loc 1 5007 5 discriminator 2
 12079 0218 20301BE5 		ldr	r3, [fp, #-32]
 12080 021c 2324A0E1 		lsr	r2, r3, #8
 12081 0220 18301BE5 		ldr	r3, [fp, #-24]
 12082 0224 143093E5 		ldr	r3, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 302


 12083 0228 030052E1 		cmp	r2, r3
 12084 022c 0100003A 		bcc	.L768
 12085              		.loc 1 5007 5 discriminator 8
 12086 0230 0230E0E3 		mvn	r3, #2
 12087              		.loc 1 5007 5
 12088 0234 660000EA 		b	.L756
 12089              	.L768:
 12090              		.loc 1 5007 5 discriminator 9
 12091 0238 20301BE5 		ldr	r3, [fp, #-32]
 12092 023c 2334A0E1 		lsr	r3, r3, #8
 12093 0240 8322A0E1 		lsl	r2, r3, #5
 12094 0244 18301BE5 		ldr	r3, [fp, #-24]
 12095 0248 0C3093E5 		ldr	r3, [r3, #12]
 12096 024c 033082E0 		add	r3, r2, r3
 12097 0250 0C300BE5 		str	r3, [fp, #-12]
 12098 0254 0C301BE5 		ldr	r3, [fp, #-12]
 12099 0258 0300A0E1 		mov	r0, r3
 12100 025c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12101 0260 10000BE5 		str	r0, [fp, #-16]
 12102              		.loc 1 5007 5 discriminator 1
 12103 0264 10301BE5 		ldr	r3, [fp, #-16]
 12104 0268 FF3803E2 		and	r3, r3, #16711680
 12105 026c 020853E3 		cmp	r3, #131072
 12106 0270 0100001A 		bne	.L769
 12107              		.loc 1 5007 5 discriminator 10
 12108 0274 0830E0E3 		mvn	r3, #8
 12109              		.loc 1 5007 5
 12110 0278 550000EA 		b	.L756
 12111              	.L769:
 12112              		.loc 1 5007 5 discriminator 11
 12113 027c 10301BE5 		ldr	r3, [fp, #-16]
 12114 0280 233CA0E1 		lsr	r3, r3, #24
 12115 0284 030053E3 		cmp	r3, #3
 12116 0288 0100000A 		beq	.L770
 12117              		.loc 1 5007 5 discriminator 12
 12118 028c 0130E0E3 		mvn	r3, #1
 12119              		.loc 1 5007 5
 12120 0290 4F0000EA 		b	.L756
 12121              	.L770:
 12122              		.loc 1 5007 5 discriminator 13
 12123 0294 20301BE5 		ldr	r3, [fp, #-32]
 12124 0298 7F2003E2 		and	r2, r3, #127
 12125 029c 0C301BE5 		ldr	r3, [fp, #-12]
 12126 02a0 143093E5 		ldr	r3, [r3, #20]
 12127 02a4 030052E1 		cmp	r2, r3
 12128 02a8 0100003A 		bcc	.L771
 12129              		.loc 1 5007 5 discriminator 14
 12130 02ac 0230E0E3 		mvn	r3, #2
 12131              		.loc 1 5007 5
 12132 02b0 470000EA 		b	.L756
 12133              	.L771:
 12134              		.loc 1 5007 5 discriminator 15
 12135 02b4 20301BE5 		ldr	r3, [fp, #-32]
 12136 02b8 7F3003E2 		and	r3, r3, #127
 12137 02bc 8322A0E1 		lsl	r2, r3, #5
 12138 02c0 0C301BE5 		ldr	r3, [fp, #-12]
 12139 02c4 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 303


 12140 02c8 033082E0 		add	r3, r2, r3
 12141 02cc 0C300BE5 		str	r3, [fp, #-12]
 12142 02d0 0C301BE5 		ldr	r3, [fp, #-12]
 12143 02d4 0300A0E1 		mov	r0, r3
 12144 02d8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12145 02dc 10000BE5 		str	r0, [fp, #-16]
 12146              		.loc 1 5007 5 discriminator 1
 12147 02e0 10301BE5 		ldr	r3, [fp, #-16]
 12148 02e4 FF3803E2 		and	r3, r3, #16711680
 12149 02e8 020853E3 		cmp	r3, #131072
 12150 02ec 0100001A 		bne	.L772
 12151              		.loc 1 5007 5 discriminator 16
 12152 02f0 0830E0E3 		mvn	r3, #8
 12153              		.loc 1 5007 5
 12154 02f4 360000EA 		b	.L756
 12155              	.L772:
 12156              		.loc 1 5007 5 discriminator 17
 12157 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12158 02fc 233CA0E1 		lsr	r3, r3, #24
 12159 0300 040053E3 		cmp	r3, #4
 12160 0304 0100000A 		beq	.L767
 12161              		.loc 1 5007 5 discriminator 18
 12162 0308 0130E0E3 		mvn	r3, #1
 12163              		.loc 1 5007 5
 12164 030c 300000EA 		b	.L756
 12165              	.L767:
5008:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Pgt*,Pgt_New,Type_Stat);
5009:../../Source/Kernel/rme_kernel.c **** #endif
5010:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5011:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_PGT);
 12166              		.loc 1 5011 5 is_stmt 1
 12167 0310 08301BE5 		ldr	r3, [fp, #-8]
 12168 0314 083093E5 		ldr	r3, [r3, #8]
 12169 0318 083003E2 		and	r3, r3, #8
 12170 031c 000053E3 		cmp	r3, #0
 12171 0320 0100001A 		bne	.L773
 12172              		.loc 1 5011 5 is_stmt 0 discriminator 1
 12173 0324 0630E0E3 		mvn	r3, #6
 12174              		.loc 1 5011 5
 12175 0328 290000EA 		b	.L756
 12176              	.L773:
5012:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5013:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Pgt_New,RME_PGT_FLAG_PRC_PGT);
 12177              		.loc 1 5013 5 is_stmt 1
 12178 032c 0C301BE5 		ldr	r3, [fp, #-12]
 12179 0330 083093E5 		ldr	r3, [r3, #8]
 12180 0334 803003E2 		and	r3, r3, #128
 12181 0338 000053E3 		cmp	r3, #0
 12182 033c 0100001A 		bne	.L774
 12183              		.loc 1 5013 5 is_stmt 0 discriminator 1
 12184 0340 0630E0E3 		mvn	r3, #6
 12185              		.loc 1 5013 5
 12186 0344 220000EA 		b	.L756
 12187              	.L774:
5014:../../Source/Kernel/rme_kernel.c **** #endif
5015:../../Source/Kernel/rme_kernel.c ****     
5016:../../Source/Kernel/rme_kernel.c ****     Pgt_Old=Prc_Op->Pgt;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 304


 12188              		.loc 1 5016 12 is_stmt 1
 12189 0348 08301BE5 		ldr	r3, [fp, #-8]
 12190 034c 183093E5 		ldr	r3, [r3, #24]
 12191 0350 14300BE5 		str	r3, [fp, #-20]
5017:../../Source/Kernel/rme_kernel.c ****     
5018:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5019:../../Source/Kernel/rme_kernel.c ****     /* Convert to root */
5020:../../Source/Kernel/rme_kernel.c ****     Pgt_New=RME_CAP_CONV_ROOT(Pgt_New,struct RME_Cap_Pgt*);
 12192              		.loc 1 5020 13
 12193 0354 0C301BE5 		ldr	r3, [fp, #-12]
 12194 0358 003093E5 		ldr	r3, [r3]
 12195 035c 7330FFE6 		uxth	r3, r3
 12196 0360 000053E3 		cmp	r3, #0
 12197 0364 0200000A 		beq	.L775
 12198              		.loc 1 5020 13 is_stmt 0 discriminator 1
 12199 0368 0C301BE5 		ldr	r3, [fp, #-12]
 12200 036c 043093E5 		ldr	r3, [r3, #4]
 12201 0370 000000EA 		b	.L776
 12202              	.L775:
 12203              		.loc 1 5020 13 discriminator 2
 12204 0374 0C301BE5 		ldr	r3, [fp, #-12]
 12205              	.L776:
 12206              		.loc 1 5020 12 is_stmt 1 discriminator 4
 12207 0378 0C300BE5 		str	r3, [fp, #-12]
5021:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5022:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
 12208              		.loc 1 5022 8
 12209 037c 08301BE5 		ldr	r3, [fp, #-8]
 12210 0380 183083E2 		add	r3, r3, #24
 12211 0384 14101BE5 		ldr	r1, [fp, #-20]
 12212 0388 0C201BE5 		ldr	r2, [fp, #-12]
 12213 038c 0300A0E1 		mov	r0, r3
 12214 0390 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12215 0394 0030A0E1 		mov	r3, r0
 12216              		.loc 1 5022 7 discriminator 1
 12217 0398 000053E3 		cmp	r3, #0
 12218 039c 0100001A 		bne	.L777
5023:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5024:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_New)==RME_CASFAIL)
5025:../../Source/Kernel/rme_kernel.c **** #else
5026:../../Source/Kernel/rme_kernel.c ****     /* Actually commit the change */
5027:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)(&(Prc_Op->Pgt)),
5028:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Pgt_Old,
5029:../../Source/Kernel/rme_kernel.c ****                      Raw_Pgt)==RME_CASFAIL)
5030:../../Source/Kernel/rme_kernel.c **** #endif
5031:../../Source/Kernel/rme_kernel.c ****     {
5032:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5033:../../Source/Kernel/rme_kernel.c ****         
5034:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 12219              		.loc 1 5034 16
 12220 03a0 C930E0E3 		mvn	r3, #201
 12221 03a4 0A0000EA 		b	.L756
 12222              	.L777:
5035:../../Source/Kernel/rme_kernel.c ****     }
5036:../../Source/Kernel/rme_kernel.c ****     else
5037:../../Source/Kernel/rme_kernel.c ****     {
5038:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 305


5039:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5040:../../Source/Kernel/rme_kernel.c ****     }
5041:../../Source/Kernel/rme_kernel.c ****     
5042:../../Source/Kernel/rme_kernel.c ****     /* Reference new table and dereference the old table */
5043:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
5044:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_New->Head.Root_Ref),1);
 12223              		.loc 1 5044 5
 12224 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 12225 03ac 043083E2 		add	r3, r3, #4
 12226 03b0 0110A0E3 		mov	r1, #1
 12227 03b4 0300A0E1 		mov	r0, r3
 12228 03b8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5045:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Pgt_Old->Head.Root_Ref),-1);
 12229              		.loc 1 5045 5
 12230 03bc 14301BE5 		ldr	r3, [fp, #-20]
 12231 03c0 043083E2 		add	r3, r3, #4
 12232 03c4 0010E0E3 		mvn	r1, #0
 12233 03c8 0300A0E1 		mov	r0, r3
 12234 03cc FEFFFFEB 		bl	_RME_Fetch_Add_Single
5046:../../Source/Kernel/rme_kernel.c **** #endif
5047:../../Source/Kernel/rme_kernel.c ****     
5048:../../Source/Kernel/rme_kernel.c ****     return 0;
 12235              		.loc 1 5048 12
 12236 03d0 0030A0E3 		mov	r3, #0
 12237              	.L756:
5049:../../Source/Kernel/rme_kernel.c **** }
 12238              		.loc 1 5049 1
 12239 03d4 0300A0E1 		mov	r0, r3
 12240 03d8 04D04BE2 		sub	sp, fp, #4
 12241              		.cfi_def_cfa 13, 8
 12242              		@ sp needed
 12243 03dc 0088BDE8 		pop	{fp, pc}
 12244              		.cfi_endproc
 12245              	.LFE54:
 12247              		.section	.text._RME_Thd_Boot_Crt,"ax",%progbits
 12248              		.align	2
 12249              		.global	_RME_Thd_Boot_Crt
 12250              		.syntax unified
 12251              		.arm
 12253              	_RME_Thd_Boot_Crt:
 12254              	.LFB55:
5050:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Prc_Pgt *************************************************/
5051:../../Source/Kernel/rme_kernel.c **** 
5052:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Boot_Crt *************************************************
5053:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time thread. The boot-time thread is per-core, and
5054:../../Source/Kernel/rme_kernel.c ****               will have infinite budget, and has no parent. This function
5055:../../Source/Kernel/rme_kernel.c ****               allows creation of a thread on behalf of other processors,
5056:../../Source/Kernel/rme_kernel.c ****               by passing a CPUID parameter. Therefore, it is recommended to
5057:../../Source/Kernel/rme_kernel.c ****               create the threads sequentially during boot-up; if you create
5058:../../Source/Kernel/rme_kernel.c ****               threads in parallel, be sure to only create the thread on your
5059:../../Source/Kernel/rme_kernel.c ****               local core.
5060:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability, and 
5061:../../Source/Kernel/rme_kernel.c ****               the initial threads' maximum priority will be set by the system.
5062:../../Source/Kernel/rme_kernel.c ****               This thread is a basic thread and hence always have attribute 0.
5063:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5064:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5065:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 306


5066:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5067:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5068:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5069:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5070:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5071:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Vaddr - The virtual address to store the thread.
5072:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level of the thread.
5073:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure of the
5074:../../Source/Kernel/rme_kernel.c ****                                             CPU to bind the thread to.
5075:../../Source/Kernel/rme_kernel.c **** Output      : None.
5076:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5077:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5078:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Thd_Boot_Crt(struct RME_Cap_Cpt* Cpt,
5079:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
5080:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Thd,
5081:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Prc,
5082:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Vaddr,
5083:../../Source/Kernel/rme_kernel.c ****                             rme_ptr_t Prio,
5084:../../Source/Kernel/rme_kernel.c ****                             struct RME_CPU_Local* Local)
5085:../../Source/Kernel/rme_kernel.c **** {
 12255              		.loc 1 5085 1
 12256              		.cfi_startproc
 12257              		@ args = 12, pretend = 0, frame = 40
 12258              		@ frame_needed = 1, uses_anonymous_args = 0
 12259 0000 00482DE9 		push	{fp, lr}
 12260              		.cfi_def_cfa_offset 8
 12261              		.cfi_offset 11, -8
 12262              		.cfi_offset 14, -4
 12263 0004 04B08DE2 		add	fp, sp, #4
 12264              		.cfi_def_cfa 11, 4
 12265 0008 28D04DE2 		sub	sp, sp, #40
 12266 000c 20000BE5 		str	r0, [fp, #-32]
 12267 0010 24100BE5 		str	r1, [fp, #-36]
 12268 0014 28200BE5 		str	r2, [fp, #-40]
 12269 0018 2C300BE5 		str	r3, [fp, #-44]
5086:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5087:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5088:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5089:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5090:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5091:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5092:../../Source/Kernel/rme_kernel.c ****     
5093:../../Source/Kernel/rme_kernel.c ****     /* Check whether the priority level is allowed */
5094:../../Source/Kernel/rme_kernel.c ****     if(Prio>=RME_PREEMPT_PRIO_NUM)
 12270              		.loc 1 5094 7
 12271 001c 08309BE5 		ldr	r3, [fp, #8]
 12272 0020 1F0053E3 		cmp	r3, #31
 12273 0024 0100009A 		bls	.L779
5095:../../Source/Kernel/rme_kernel.c ****     {
5096:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5097:../../Source/Kernel/rme_kernel.c **** 
5098:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12274              		.loc 1 5098 16
 12275 0028 CC30E0E3 		mvn	r3, #204
 12276 002c 4C0100EA 		b	.L780
 12277              	.L779:
5099:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 307


5100:../../Source/Kernel/rme_kernel.c ****     else
5101:../../Source/Kernel/rme_kernel.c ****     {
5102:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5103:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5104:../../Source/Kernel/rme_kernel.c ****     }
5105:../../Source/Kernel/rme_kernel.c ****     
5106:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5107:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12278              		.loc 1 5107 5
 12279 0030 24301BE5 		ldr	r3, [fp, #-36]
 12280 0034 803003E2 		and	r3, r3, #128
 12281 0038 000053E3 		cmp	r3, #0
 12282 003c 1C00001A 		bne	.L781
 12283              		.loc 1 5107 5 is_stmt 0 discriminator 1
 12284 0040 20301BE5 		ldr	r3, [fp, #-32]
 12285 0044 142093E5 		ldr	r2, [r3, #20]
 12286 0048 24301BE5 		ldr	r3, [fp, #-36]
 12287 004c 030052E1 		cmp	r2, r3
 12288 0050 0100008A 		bhi	.L782
 12289              		.loc 1 5107 5 discriminator 3
 12290 0054 0230E0E3 		mvn	r3, #2
 12291              		.loc 1 5107 5
 12292 0058 410100EA 		b	.L780
 12293              	.L782:
 12294              		.loc 1 5107 5 discriminator 4
 12295 005c 24301BE5 		ldr	r3, [fp, #-36]
 12296 0060 8322A0E1 		lsl	r2, r3, #5
 12297 0064 20301BE5 		ldr	r3, [fp, #-32]
 12298 0068 0C3093E5 		ldr	r3, [r3, #12]
 12299 006c 033082E0 		add	r3, r2, r3
 12300 0070 08300BE5 		str	r3, [fp, #-8]
 12301 0074 08301BE5 		ldr	r3, [fp, #-8]
 12302 0078 0300A0E1 		mov	r0, r3
 12303 007c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12304 0080 10000BE5 		str	r0, [fp, #-16]
 12305              		.loc 1 5107 5 discriminator 1
 12306 0084 10301BE5 		ldr	r3, [fp, #-16]
 12307 0088 FF3803E2 		and	r3, r3, #16711680
 12308 008c 020853E3 		cmp	r3, #131072
 12309 0090 0100001A 		bne	.L783
 12310              		.loc 1 5107 5 discriminator 5
 12311 0094 0830E0E3 		mvn	r3, #8
 12312              		.loc 1 5107 5
 12313 0098 310100EA 		b	.L780
 12314              	.L783:
 12315              		.loc 1 5107 5 discriminator 6
 12316 009c 10301BE5 		ldr	r3, [fp, #-16]
 12317 00a0 233CA0E1 		lsr	r3, r3, #24
 12318 00a4 030053E3 		cmp	r3, #3
 12319 00a8 3F00000A 		beq	.L784
 12320              		.loc 1 5107 5 discriminator 7
 12321 00ac 0130E0E3 		mvn	r3, #1
 12322              		.loc 1 5107 5
 12323 00b0 2B0100EA 		b	.L780
 12324              	.L781:
 12325              		.loc 1 5107 5 discriminator 2
 12326 00b4 24301BE5 		ldr	r3, [fp, #-36]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 308


 12327 00b8 2324A0E1 		lsr	r2, r3, #8
 12328 00bc 20301BE5 		ldr	r3, [fp, #-32]
 12329 00c0 143093E5 		ldr	r3, [r3, #20]
 12330 00c4 030052E1 		cmp	r2, r3
 12331 00c8 0100003A 		bcc	.L785
 12332              		.loc 1 5107 5 discriminator 8
 12333 00cc 0230E0E3 		mvn	r3, #2
 12334              		.loc 1 5107 5
 12335 00d0 230100EA 		b	.L780
 12336              	.L785:
 12337              		.loc 1 5107 5 discriminator 9
 12338 00d4 24301BE5 		ldr	r3, [fp, #-36]
 12339 00d8 2334A0E1 		lsr	r3, r3, #8
 12340 00dc 8322A0E1 		lsl	r2, r3, #5
 12341 00e0 20301BE5 		ldr	r3, [fp, #-32]
 12342 00e4 0C3093E5 		ldr	r3, [r3, #12]
 12343 00e8 033082E0 		add	r3, r2, r3
 12344 00ec 08300BE5 		str	r3, [fp, #-8]
 12345 00f0 08301BE5 		ldr	r3, [fp, #-8]
 12346 00f4 0300A0E1 		mov	r0, r3
 12347 00f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12348 00fc 10000BE5 		str	r0, [fp, #-16]
 12349              		.loc 1 5107 5 discriminator 1
 12350 0100 10301BE5 		ldr	r3, [fp, #-16]
 12351 0104 FF3803E2 		and	r3, r3, #16711680
 12352 0108 020853E3 		cmp	r3, #131072
 12353 010c 0100001A 		bne	.L786
 12354              		.loc 1 5107 5 discriminator 10
 12355 0110 0830E0E3 		mvn	r3, #8
 12356              		.loc 1 5107 5
 12357 0114 120100EA 		b	.L780
 12358              	.L786:
 12359              		.loc 1 5107 5 discriminator 11
 12360 0118 10301BE5 		ldr	r3, [fp, #-16]
 12361 011c 233CA0E1 		lsr	r3, r3, #24
 12362 0120 030053E3 		cmp	r3, #3
 12363 0124 0100000A 		beq	.L787
 12364              		.loc 1 5107 5 discriminator 12
 12365 0128 0130E0E3 		mvn	r3, #1
 12366              		.loc 1 5107 5
 12367 012c 0C0100EA 		b	.L780
 12368              	.L787:
 12369              		.loc 1 5107 5 discriminator 13
 12370 0130 24301BE5 		ldr	r3, [fp, #-36]
 12371 0134 7F2003E2 		and	r2, r3, #127
 12372 0138 08301BE5 		ldr	r3, [fp, #-8]
 12373 013c 143093E5 		ldr	r3, [r3, #20]
 12374 0140 030052E1 		cmp	r2, r3
 12375 0144 0100003A 		bcc	.L788
 12376              		.loc 1 5107 5 discriminator 14
 12377 0148 0230E0E3 		mvn	r3, #2
 12378              		.loc 1 5107 5
 12379 014c 040100EA 		b	.L780
 12380              	.L788:
 12381              		.loc 1 5107 5 discriminator 15
 12382 0150 24301BE5 		ldr	r3, [fp, #-36]
 12383 0154 7F3003E2 		and	r3, r3, #127
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 309


 12384 0158 8322A0E1 		lsl	r2, r3, #5
 12385 015c 08301BE5 		ldr	r3, [fp, #-8]
 12386 0160 0C3093E5 		ldr	r3, [r3, #12]
 12387 0164 033082E0 		add	r3, r2, r3
 12388 0168 08300BE5 		str	r3, [fp, #-8]
 12389 016c 08301BE5 		ldr	r3, [fp, #-8]
 12390 0170 0300A0E1 		mov	r0, r3
 12391 0174 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12392 0178 10000BE5 		str	r0, [fp, #-16]
 12393              		.loc 1 5107 5 discriminator 1
 12394 017c 10301BE5 		ldr	r3, [fp, #-16]
 12395 0180 FF3803E2 		and	r3, r3, #16711680
 12396 0184 020853E3 		cmp	r3, #131072
 12397 0188 0100001A 		bne	.L789
 12398              		.loc 1 5107 5 discriminator 16
 12399 018c 0830E0E3 		mvn	r3, #8
 12400              		.loc 1 5107 5
 12401 0190 F30000EA 		b	.L780
 12402              	.L789:
 12403              		.loc 1 5107 5 discriminator 17
 12404 0194 10301BE5 		ldr	r3, [fp, #-16]
 12405 0198 233CA0E1 		lsr	r3, r3, #24
 12406 019c 030053E3 		cmp	r3, #3
 12407 01a0 0100000A 		beq	.L784
 12408              		.loc 1 5107 5 discriminator 18
 12409 01a4 0130E0E3 		mvn	r3, #1
 12410              		.loc 1 5107 5
 12411 01a8 ED0000EA 		b	.L780
 12412              	.L784:
5108:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5109:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 12413              		.loc 1 5109 5 is_stmt 1
 12414 01ac 2C301BE5 		ldr	r3, [fp, #-44]
 12415 01b0 803003E2 		and	r3, r3, #128
 12416 01b4 000053E3 		cmp	r3, #0
 12417 01b8 1C00001A 		bne	.L790
 12418              		.loc 1 5109 5 is_stmt 0 discriminator 1
 12419 01bc 20301BE5 		ldr	r3, [fp, #-32]
 12420 01c0 142093E5 		ldr	r2, [r3, #20]
 12421 01c4 2C301BE5 		ldr	r3, [fp, #-44]
 12422 01c8 030052E1 		cmp	r2, r3
 12423 01cc 0100008A 		bhi	.L791
 12424              		.loc 1 5109 5 discriminator 3
 12425 01d0 0230E0E3 		mvn	r3, #2
 12426              		.loc 1 5109 5
 12427 01d4 E20000EA 		b	.L780
 12428              	.L791:
 12429              		.loc 1 5109 5 discriminator 4
 12430 01d8 2C301BE5 		ldr	r3, [fp, #-44]
 12431 01dc 8322A0E1 		lsl	r2, r3, #5
 12432 01e0 20301BE5 		ldr	r3, [fp, #-32]
 12433 01e4 0C3093E5 		ldr	r3, [r3, #12]
 12434 01e8 033082E0 		add	r3, r2, r3
 12435 01ec 0C300BE5 		str	r3, [fp, #-12]
 12436 01f0 0C301BE5 		ldr	r3, [fp, #-12]
 12437 01f4 0300A0E1 		mov	r0, r3
 12438 01f8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 310


 12439 01fc 10000BE5 		str	r0, [fp, #-16]
 12440              		.loc 1 5109 5 discriminator 1
 12441 0200 10301BE5 		ldr	r3, [fp, #-16]
 12442 0204 FF3803E2 		and	r3, r3, #16711680
 12443 0208 020853E3 		cmp	r3, #131072
 12444 020c 0100001A 		bne	.L792
 12445              		.loc 1 5109 5 discriminator 5
 12446 0210 0830E0E3 		mvn	r3, #8
 12447              		.loc 1 5109 5
 12448 0214 D20000EA 		b	.L780
 12449              	.L792:
 12450              		.loc 1 5109 5 discriminator 6
 12451 0218 10301BE5 		ldr	r3, [fp, #-16]
 12452 021c 233CA0E1 		lsr	r3, r3, #24
 12453 0220 050053E3 		cmp	r3, #5
 12454 0224 3F00000A 		beq	.L793
 12455              		.loc 1 5109 5 discriminator 7
 12456 0228 0130E0E3 		mvn	r3, #1
 12457              		.loc 1 5109 5
 12458 022c CC0000EA 		b	.L780
 12459              	.L790:
 12460              		.loc 1 5109 5 discriminator 2
 12461 0230 2C301BE5 		ldr	r3, [fp, #-44]
 12462 0234 2324A0E1 		lsr	r2, r3, #8
 12463 0238 20301BE5 		ldr	r3, [fp, #-32]
 12464 023c 143093E5 		ldr	r3, [r3, #20]
 12465 0240 030052E1 		cmp	r2, r3
 12466 0244 0100003A 		bcc	.L794
 12467              		.loc 1 5109 5 discriminator 8
 12468 0248 0230E0E3 		mvn	r3, #2
 12469              		.loc 1 5109 5
 12470 024c C40000EA 		b	.L780
 12471              	.L794:
 12472              		.loc 1 5109 5 discriminator 9
 12473 0250 2C301BE5 		ldr	r3, [fp, #-44]
 12474 0254 2334A0E1 		lsr	r3, r3, #8
 12475 0258 8322A0E1 		lsl	r2, r3, #5
 12476 025c 20301BE5 		ldr	r3, [fp, #-32]
 12477 0260 0C3093E5 		ldr	r3, [r3, #12]
 12478 0264 033082E0 		add	r3, r2, r3
 12479 0268 0C300BE5 		str	r3, [fp, #-12]
 12480 026c 0C301BE5 		ldr	r3, [fp, #-12]
 12481 0270 0300A0E1 		mov	r0, r3
 12482 0274 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12483 0278 10000BE5 		str	r0, [fp, #-16]
 12484              		.loc 1 5109 5 discriminator 1
 12485 027c 10301BE5 		ldr	r3, [fp, #-16]
 12486 0280 FF3803E2 		and	r3, r3, #16711680
 12487 0284 020853E3 		cmp	r3, #131072
 12488 0288 0100001A 		bne	.L795
 12489              		.loc 1 5109 5 discriminator 10
 12490 028c 0830E0E3 		mvn	r3, #8
 12491              		.loc 1 5109 5
 12492 0290 B30000EA 		b	.L780
 12493              	.L795:
 12494              		.loc 1 5109 5 discriminator 11
 12495 0294 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 311


 12496 0298 233CA0E1 		lsr	r3, r3, #24
 12497 029c 030053E3 		cmp	r3, #3
 12498 02a0 0100000A 		beq	.L796
 12499              		.loc 1 5109 5 discriminator 12
 12500 02a4 0130E0E3 		mvn	r3, #1
 12501              		.loc 1 5109 5
 12502 02a8 AD0000EA 		b	.L780
 12503              	.L796:
 12504              		.loc 1 5109 5 discriminator 13
 12505 02ac 2C301BE5 		ldr	r3, [fp, #-44]
 12506 02b0 7F2003E2 		and	r2, r3, #127
 12507 02b4 0C301BE5 		ldr	r3, [fp, #-12]
 12508 02b8 143093E5 		ldr	r3, [r3, #20]
 12509 02bc 030052E1 		cmp	r2, r3
 12510 02c0 0100003A 		bcc	.L797
 12511              		.loc 1 5109 5 discriminator 14
 12512 02c4 0230E0E3 		mvn	r3, #2
 12513              		.loc 1 5109 5
 12514 02c8 A50000EA 		b	.L780
 12515              	.L797:
 12516              		.loc 1 5109 5 discriminator 15
 12517 02cc 2C301BE5 		ldr	r3, [fp, #-44]
 12518 02d0 7F3003E2 		and	r3, r3, #127
 12519 02d4 8322A0E1 		lsl	r2, r3, #5
 12520 02d8 0C301BE5 		ldr	r3, [fp, #-12]
 12521 02dc 0C3093E5 		ldr	r3, [r3, #12]
 12522 02e0 033082E0 		add	r3, r2, r3
 12523 02e4 0C300BE5 		str	r3, [fp, #-12]
 12524 02e8 0C301BE5 		ldr	r3, [fp, #-12]
 12525 02ec 0300A0E1 		mov	r0, r3
 12526 02f0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12527 02f4 10000BE5 		str	r0, [fp, #-16]
 12528              		.loc 1 5109 5 discriminator 1
 12529 02f8 10301BE5 		ldr	r3, [fp, #-16]
 12530 02fc FF3803E2 		and	r3, r3, #16711680
 12531 0300 020853E3 		cmp	r3, #131072
 12532 0304 0100001A 		bne	.L798
 12533              		.loc 1 5109 5 discriminator 16
 12534 0308 0830E0E3 		mvn	r3, #8
 12535              		.loc 1 5109 5
 12536 030c 940000EA 		b	.L780
 12537              	.L798:
 12538              		.loc 1 5109 5 discriminator 17
 12539 0310 10301BE5 		ldr	r3, [fp, #-16]
 12540 0314 233CA0E1 		lsr	r3, r3, #24
 12541 0318 050053E3 		cmp	r3, #5
 12542 031c 0100000A 		beq	.L793
 12543              		.loc 1 5109 5 discriminator 18
 12544 0320 0130E0E3 		mvn	r3, #1
 12545              		.loc 1 5109 5
 12546 0324 8E0000EA 		b	.L780
 12547              	.L793:
5110:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);   
5111:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5112:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 12548              		.loc 1 5112 5 is_stmt 1
 12549 0328 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 312


 12550 032c 083093E5 		ldr	r3, [r3, #8]
 12551 0330 013003E2 		and	r3, r3, #1
 12552 0334 000053E3 		cmp	r3, #0
 12553 0338 0100001A 		bne	.L799
 12554              		.loc 1 5112 5 is_stmt 0 discriminator 1
 12555 033c 0630E0E3 		mvn	r3, #6
 12556              		.loc 1 5112 5
 12557 0340 870000EA 		b	.L780
 12558              	.L799:
5113:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 12559              		.loc 1 5113 5 is_stmt 1
 12560 0344 0C301BE5 		ldr	r3, [fp, #-12]
 12561 0348 083093E5 		ldr	r3, [r3, #8]
 12562 034c 023003E2 		and	r3, r3, #2
 12563 0350 000053E3 		cmp	r3, #0
 12564 0354 0100001A 		bne	.L800
 12565              		.loc 1 5113 5 is_stmt 0 discriminator 1
 12566 0358 0630E0E3 		mvn	r3, #6
 12567              		.loc 1 5113 5
 12568 035c 800000EA 		b	.L780
 12569              	.L800:
5114:../../Source/Kernel/rme_kernel.c ****     
5115:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5116:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 12570              		.loc 1 5116 5 is_stmt 1
 12571 0360 08301BE5 		ldr	r3, [fp, #-8]
 12572 0364 142093E5 		ldr	r2, [r3, #20]
 12573 0368 28301BE5 		ldr	r3, [fp, #-40]
 12574 036c 030052E1 		cmp	r2, r3
 12575 0370 0100008A 		bhi	.L801
 12576              		.loc 1 5116 5 is_stmt 0 discriminator 1
 12577 0374 0230E0E3 		mvn	r3, #2
 12578              		.loc 1 5116 5
 12579 0378 790000EA 		b	.L780
 12580              	.L801:
 12581              		.loc 1 5116 5 discriminator 2
 12582 037c 28301BE5 		ldr	r3, [fp, #-40]
 12583 0380 8322A0E1 		lsl	r2, r3, #5
 12584 0384 08301BE5 		ldr	r3, [fp, #-8]
 12585 0388 0C3093E5 		ldr	r3, [r3, #12]
 12586 038c 033082E0 		add	r3, r2, r3
 12587 0390 14300BE5 		str	r3, [fp, #-20]
5117:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5118:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 12588              		.loc 1 5118 5 is_stmt 1
 12589 0394 14301BE5 		ldr	r3, [fp, #-20]
 12590 0398 0128A0E3 		mov	r2, #65536
 12591 039c 0010A0E3 		mov	r1, #0
 12592 03a0 0300A0E1 		mov	r0, r3
 12593 03a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 12594 03a8 0030A0E1 		mov	r3, r0
 12595              		.loc 1 5118 5 is_stmt 0 discriminator 1
 12596 03ac 000053E3 		cmp	r3, #0
 12597 03b0 0100001A 		bne	.L802
 12598 03b4 0430E0E3 		mvn	r3, #4
 12599              		.loc 1 5118 5
 12600 03b8 690000EA 		b	.L780
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 313


 12601              	.L802:
 12602              		.loc 1 5118 5 discriminator 2
 12603 03bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 12604 03c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 12605 03c4 002093E5 		ldr	r2, [r3]
 12606 03c8 14301BE5 		ldr	r3, [fp, #-20]
 12607 03cc 102083E5 		str	r2, [r3, #16]
5119:../../Source/Kernel/rme_kernel.c ****      
5120:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5121:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_THD_SIZE(0U))!=0)
 12608              		.loc 1 5121 8 is_stmt 1
 12609 03d0 9C10A0E3 		mov	r1, #156
 12610 03d4 04009BE5 		ldr	r0, [fp, #4]
 12611 03d8 FEFFFFEB 		bl	_RME_Kot_Mark
 12612 03dc 0030A0E1 		mov	r3, r0
 12613              		.loc 1 5121 7 discriminator 1
 12614 03e0 000053E3 		cmp	r3, #0
 12615 03e4 0500000A 		beq	.L803
5122:../../Source/Kernel/rme_kernel.c ****     {
5123:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5124:../../Source/Kernel/rme_kernel.c **** 
5125:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 12616              		.loc 1 5125 9
 12617 03e8 14301BE5 		ldr	r3, [fp, #-20]
 12618 03ec 0010A0E3 		mov	r1, #0
 12619 03f0 0300A0E1 		mov	r0, r3
 12620 03f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5126:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 12621              		.loc 1 5126 16
 12622 03f8 0330E0E3 		mvn	r3, #3
 12623 03fc 580000EA 		b	.L780
 12624              	.L803:
5127:../../Source/Kernel/rme_kernel.c ****     }
5128:../../Source/Kernel/rme_kernel.c ****     else
5129:../../Source/Kernel/rme_kernel.c ****     {
5130:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5131:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5132:../../Source/Kernel/rme_kernel.c ****     }
5133:../../Source/Kernel/rme_kernel.c **** 
5134:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5135:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 12625              		.loc 1 5135 11
 12626 0400 04309BE5 		ldr	r3, [fp, #4]
 12627 0404 18300BE5 		str	r3, [fp, #-24]
5136:../../Source/Kernel/rme_kernel.c ****     /* The TID of these threads are by default taken care of by the kernel */
5137:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 12628              		.loc 1 5137 22
 12629 0408 18301BE5 		ldr	r3, [fp, #-24]
 12630 040c 0020A0E3 		mov	r2, #0
 12631 0410 102083E5 		str	r2, [r3, #16]
5138:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=RME_THD_INIT_TIME;
 12632              		.loc 1 5138 24
 12633 0414 18301BE5 		ldr	r3, [fp, #-24]
 12634 0418 0221E0E3 		mvn	r2, #-2147483648
 12635 041c 182083E5 		str	r2, [r3, #24]
5139:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_READY;
 12636              		.loc 1 5139 24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 314


 12637 0420 18301BE5 		ldr	r3, [fp, #-24]
 12638 0424 0020A0E3 		mov	r2, #0
 12639 0428 1C2083E5 		str	r2, [r3, #28]
5140:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 12640              		.loc 1 5140 14
 12641 042c 0C301BE5 		ldr	r3, [fp, #-12]
 12642 0430 003093E5 		ldr	r3, [r3]
 12643 0434 7330FFE6 		uxth	r3, r3
 12644 0438 000053E3 		cmp	r3, #0
 12645 043c 0200000A 		beq	.L804
 12646              		.loc 1 5140 14 is_stmt 0 discriminator 1
 12647 0440 0C301BE5 		ldr	r3, [fp, #-12]
 12648 0444 043093E5 		ldr	r3, [r3, #4]
 12649 0448 000000EA 		b	.L805
 12650              	.L804:
 12651              		.loc 1 5140 14 discriminator 2
 12652 044c 0C301BE5 		ldr	r3, [fp, #-12]
 12653              	.L805:
 12654              		.loc 1 5140 13 is_stmt 1 discriminator 4
 12655 0450 1C300BE5 		str	r3, [fp, #-28]
5141:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 12656              		.loc 1 5141 22
 12657 0454 18301BE5 		ldr	r3, [fp, #-24]
 12658 0458 1C201BE5 		ldr	r2, [fp, #-28]
 12659 045c 2C2083E5 		str	r2, [r3, #44]
5142:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 12660              		.loc 1 5142 25
 12661 0460 18301BE5 		ldr	r3, [fp, #-24]
 12662 0464 0020A0E3 		mov	r2, #0
 12663 0468 282083E5 		str	r2, [r3, #40]
5143:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 12664              		.loc 1 5143 23
 12665 046c 18301BE5 		ldr	r3, [fp, #-24]
 12666 0470 08209BE5 		ldr	r2, [fp, #8]
 12667 0474 202083E5 		str	r2, [r3, #32]
5144:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=RME_PREEMPT_PRIO_NUM-1U;
 12668              		.loc 1 5144 27
 12669 0478 18301BE5 		ldr	r3, [fp, #-24]
 12670 047c 1F20A0E3 		mov	r2, #31
 12671 0480 242083E5 		str	r2, [r3, #36]
5145:../../Source/Kernel/rme_kernel.c ****     /* Set scheduler reference to 1 so cannot be free */
5146:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=1U;
 12672              		.loc 1 5146 28
 12673 0484 18301BE5 		ldr	r3, [fp, #-24]
 12674 0488 0120A0E3 		mov	r2, #1
 12675 048c 302083E5 		str	r2, [r3, #48]
5147:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 12676              		.loc 1 5147 28
 12677 0490 18301BE5 		ldr	r3, [fp, #-24]
 12678 0494 0020A0E3 		mov	r2, #0
 12679 0498 382083E5 		str	r2, [r3, #56]
5148:../../Source/Kernel/rme_kernel.c ****     /* Bind the thread to the current CPU */
5149:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=Local;
 12680              		.loc 1 5149 24
 12681 049c 18301BE5 		ldr	r3, [fp, #-24]
 12682 04a0 0C209BE5 		ldr	r2, [fp, #12]
 12683 04a4 142083E5 		str	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 315


5150:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5151:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 12684              		.loc 1 5151 5
 12685 04a8 18301BE5 		ldr	r3, [fp, #-24]
 12686 04ac 083083E2 		add	r3, r3, #8
 12687 04b0 0300A0E1 		mov	r0, r3
 12688 04b4 FEFFFFEB 		bl	_RME_List_Crt
5152:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 12689              		.loc 1 5152 5
 12690 04b8 18301BE5 		ldr	r3, [fp, #-24]
 12691 04bc 3C3083E2 		add	r3, r3, #60
 12692 04c0 0300A0E1 		mov	r0, r3
 12693 04c4 FEFFFFEB 		bl	_RME_List_Crt
5153:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this will never be a hypervisor thread */
5154:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Hyp_Attr=0U;
 12694              		.loc 1 5154 25
 12695 04c8 18301BE5 		ldr	r3, [fp, #-24]
 12696 04cc 0020A0E3 		mov	r2, #0
 12697 04d0 442083E5 		str	r2, [r3, #68]
5155:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 12698              		.loc 1 5155 48
 12699 04d4 04309BE5 		ldr	r3, [fp, #4]
 12700 04d8 583083E2 		add	r3, r3, #88
 12701              		.loc 1 5155 21
 12702 04dc 0320A0E1 		mov	r2, r3
 12703              		.loc 1 5155 20
 12704 04e0 18301BE5 		ldr	r3, [fp, #-24]
 12705 04e4 482083E5 		str	r2, [r3, #72]
5156:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5157:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 12706              		.loc 1 5157 5
 12707 04e8 18301BE5 		ldr	r3, [fp, #-24]
 12708 04ec 4C3083E2 		add	r3, r3, #76
 12709 04f0 0300A0E1 		mov	r0, r3
 12710 04f4 FEFFFFEB 		bl	_RME_List_Crt
5158:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 12711              		.loc 1 5158 29
 12712 04f8 18301BE5 		ldr	r3, [fp, #-24]
 12713 04fc 0020A0E3 		mov	r2, #0
 12714 0500 542083E5 		str	r2, [r3, #84]
5159:../../Source/Kernel/rme_kernel.c ****     
5160:../../Source/Kernel/rme_kernel.c ****     /* Info init */
5161:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=1U;
 12715              		.loc 1 5161 27
 12716 0504 14301BE5 		ldr	r3, [fp, #-20]
 12717 0508 0120A0E3 		mov	r2, #1
 12718 050c 042083E5 		str	r2, [r3, #4]
5162:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 12719              		.loc 1 5162 25
 12720 0510 14301BE5 		ldr	r3, [fp, #-20]
 12721 0514 04209BE5 		ldr	r2, [fp, #4]
 12722 0518 0C2083E5 		str	r2, [r3, #12]
5163:../../Source/Kernel/rme_kernel.c ****     /* This can only be a parent, and not a child, and cannot be freed. Additionally,
5164:../../Source/Kernel/rme_kernel.c ****      * this should not be blocked on any endpoint. Any attempt to block this thread will fail.
5165:../../Source/Kernel/rme_kernel.c ****      * Setting execution information for this is also prohibited. */
5166:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_SCHED_PRIO|RME_THD_FLAG_SCHED_PARENT|
 12723              		.loc 1 5166 23
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 316


 12724 051c 14301BE5 		ldr	r3, [fp, #-20]
 12725 0520 7B2FA0E3 		mov	r2, #492
 12726 0524 082083E5 		str	r2, [r3, #8]
5167:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_XFER_DST|RME_THD_FLAG_XFER_SRC|
5168:../../Source/Kernel/rme_kernel.c ****                        RME_THD_FLAG_SCHED_RCV|RME_THD_FLAG_SWT;
5169:../../Source/Kernel/rme_kernel.c **** 
5170:../../Source/Kernel/rme_kernel.c ****     /* Referece process */
5171:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 12727              		.loc 1 5171 5
 12728 0528 1C301BE5 		ldr	r3, [fp, #-28]
 12729 052c 043083E2 		add	r3, r3, #4
 12730 0530 0110A0E3 		mov	r1, #1
 12731 0534 0300A0E1 		mov	r0, r3
 12732 0538 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5172:../../Source/Kernel/rme_kernel.c ****     
5173:../../Source/Kernel/rme_kernel.c ****     /* Insert this into the runqueue, and set current thread to it */
5174:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Ins(Thread);
 12733              		.loc 1 5174 5
 12734 053c 18001BE5 		ldr	r0, [fp, #-24]
 12735 0540 FEFFFFEB 		bl	_RME_Run_Ins
5175:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thread;
 12736              		.loc 1 5175 19
 12737 0544 0C309BE5 		ldr	r3, [fp, #12]
 12738 0548 18201BE5 		ldr	r2, [fp, #-24]
 12739 054c 042083E5 		str	r2, [r3, #4]
5176:../../Source/Kernel/rme_kernel.c **** 
5177:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5178:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 12740              		.loc 1 5178 5
 12741 0550 14301BE5 		ldr	r3, [fp, #-20]
 12742 0554 0614A0E3 		mov	r1, #100663296
 12743 0558 0300A0E1 		mov	r0, r3
 12744 055c FEFFFFEB 		bl	__RME_A7A_Write_Release
5179:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5180:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5181:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5182:../../Source/Kernel/rme_kernel.c **** 
5183:../../Source/Kernel/rme_kernel.c ****     return 0;
 12745              		.loc 1 5183 12
 12746 0560 0030A0E3 		mov	r3, #0
 12747              	.L780:
5184:../../Source/Kernel/rme_kernel.c **** }
 12748              		.loc 1 5184 1
 12749 0564 0300A0E1 		mov	r0, r3
 12750 0568 04D04BE2 		sub	sp, fp, #4
 12751              		.cfi_def_cfa 13, 8
 12752              		@ sp needed
 12753 056c 0088BDE8 		pop	{fp, pc}
 12754              		.cfi_endproc
 12755              	.LFE55:
 12757              		.section	.rodata
 12758 0237 00       		.align	2
 12759              	.LC23:
 12760 0238 0D0A4370 		.ascii	"\015\012Cpt addr \000"
 12760      74206164 
 12760      64722000 
 12761              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 317


 12762              	.LC24:
 12763 0244 0D0A4361 		.ascii	"\015\012Cap_Cpt \000"
 12763      705F4370 
 12763      742000
 12764 024f 00       		.align	2
 12765              	.LC25:
 12766 0250 0D0A4361 		.ascii	"\015\012Cap_Kom \000"
 12766      705F4B6F 
 12766      6D2000
 12767 025b 00       		.align	2
 12768              	.LC26:
 12769 025c 0D0A4361 		.ascii	"\015\012Cap_Thd \000"
 12769      705F5468 
 12769      642000
 12770 0267 00       		.align	2
 12771              	.LC27:
 12772 0268 0D0A4361 		.ascii	"\015\012Cap_Prc \000"
 12772      705F5072 
 12772      632000
 12773 0273 00       		.align	2
 12774              	.LC28:
 12775 0274 0D0A5072 		.ascii	"\015\012Prio_Max \000"
 12775      696F5F4D 
 12775      61782000 
 12776              		.align	2
 12777              	.LC29:
 12778 0280 0D0A5261 		.ascii	"\015\012Raddr \000"
 12778      64647220 
 12778      00
 12779 0289 000000   		.align	2
 12780              	.LC30:
 12781 028c 0D0A4174 		.ascii	"\015\012Attr \000"
 12781      74722000 
 12782              		.align	2
 12783              	.LC31:
 12784 0294 0D0A4973 		.ascii	"\015\012Is_Hyp \000"
 12784      5F487970 
 12784      2000
 12785 029e 0000     		.align	2
 12786              	.LC32:
 12787 02a0 0D0A6D61 		.ascii	"\015\012maximum priority relationship is not correc"
 12787      78696D75 
 12787      6D207072 
 12787      696F7269 
 12787      74792072 
 12788 02cd 7400     		.ascii	"t\000"
 12789 02cf 00       		.align	2
 12790              	.LC33:
 12791 02d0 0D0A7661 		.ascii	"\015\012vaddr= \000"
 12791      6464723D 
 12791      2000
 12792 02da 0000     		.align	2
 12793              	.LC34:
 12794 02dc 0D0A5261 		.ascii	"\015\012Raddr= \000"
 12794      6464723D 
 12794      2000
 12795 02e6 0000     		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 318


 12796              	.LC35:
 12797 02e8 0D0A5F52 		.ascii	"\015\012_RME_Kot_Mark(Vaddr,Size)\000"
 12797      4D455F4B 
 12797      6F745F4D 
 12797      61726B28 
 12797      56616464 
 12798              		.section	.text._RME_Thd_Crt,"ax",%progbits
 12799              		.align	2
 12800              		.syntax unified
 12801              		.arm
 12803              	_RME_Thd_Crt:
 12804              	.LFB56:
5185:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Boot_Crt ********************************************/
5186:../../Source/Kernel/rme_kernel.c **** 
5187:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Crt ******************************************************
5188:../../Source/Kernel/rme_kernel.c **** Description : Create a thread. A thread is the minimal kernel-level execution
5189:../../Source/Kernel/rme_kernel.c ****               unit.
5190:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5191:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5192:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5193:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kom - The kernel memory capability.
5194:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5195:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability slot that you want this newly
5196:../../Source/Kernel/rme_kernel.c ****                                   created thread capability to be in.
5197:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5198:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
5199:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5200:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio_Max - The maximum priority allowed for this
5201:../../Source/Kernel/rme_kernel.c ****                                    thread. Once set, this cannot be changed.
5202:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
5203:../../Source/Kernel/rme_kernel.c ****                                 thread kernel object.
5204:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Attr - The context attributes.
5205:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Hyp - Whether this is a hypervisor thread.
5206:../../Source/Kernel/rme_kernel.c **** Output      : None.
5207:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5208:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5209:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Crt(struct RME_Cap_Cpt* Cpt,
5210:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5211:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
5212:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
5213:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
5214:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Prio_Max,
5215:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr,
5216:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Attr,
5217:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Hyp)
5218:../../Source/Kernel/rme_kernel.c **** {
 12805              		.loc 1 5218 1
 12806              		.cfi_startproc
 12807              		@ args = 20, pretend = 0, frame = 56
 12808              		@ frame_needed = 1, uses_anonymous_args = 0
 12809 0000 00482DE9 		push	{fp, lr}
 12810              		.cfi_def_cfa_offset 8
 12811              		.cfi_offset 11, -8
 12812              		.cfi_offset 14, -4
 12813 0004 04B08DE2 		add	fp, sp, #4
 12814              		.cfi_def_cfa 11, 4
 12815 0008 38D04DE2 		sub	sp, sp, #56
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 319


 12816 000c 30000BE5 		str	r0, [fp, #-48]
 12817 0010 34100BE5 		str	r1, [fp, #-52]
 12818 0014 38200BE5 		str	r2, [fp, #-56]
 12819 0018 3C300BE5 		str	r3, [fp, #-60]
5219:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5220:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
5221:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
5222:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Crt;
5223:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
5224:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5225:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5226:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
5227:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Size;
5228:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCpt addr ");
 12820              		.loc 1 5228 5
 12821 001c 000000E3 		movw	r0, #:lower16:.LC23
 12822 0020 000040E3 		movt	r0, #:upper16:.LC23
 12823 0024 FEFFFFEB 		bl	RME_Str_Print
5229:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H((rme_ptr_t)Cpt);
 12824              		.loc 1 5229 5
 12825 0028 30301BE5 		ldr	r3, [fp, #-48]
 12826 002c 0300A0E1 		mov	r0, r3
 12827 0030 FEFFFFEB 		bl	RME_Hex_Print
5230:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Cpt ");
 12828              		.loc 1 5230 5
 12829 0034 000000E3 		movw	r0, #:lower16:.LC24
 12830 0038 000040E3 		movt	r0, #:upper16:.LC24
 12831 003c FEFFFFEB 		bl	RME_Str_Print
5231:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Cpt);
 12832              		.loc 1 5231 5
 12833 0040 34301BE5 		ldr	r3, [fp, #-52]
 12834 0044 0300A0E1 		mov	r0, r3
 12835 0048 FEFFFFEB 		bl	RME_Hex_Print
5232:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Kom ");
 12836              		.loc 1 5232 5
 12837 004c 000000E3 		movw	r0, #:lower16:.LC25
 12838 0050 000040E3 		movt	r0, #:upper16:.LC25
 12839 0054 FEFFFFEB 		bl	RME_Str_Print
5233:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Kom);
 12840              		.loc 1 5233 5
 12841 0058 38301BE5 		ldr	r3, [fp, #-56]
 12842 005c 0300A0E1 		mov	r0, r3
 12843 0060 FEFFFFEB 		bl	RME_Hex_Print
5234:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd ");
 12844              		.loc 1 5234 5
 12845 0064 000000E3 		movw	r0, #:lower16:.LC26
 12846 0068 000040E3 		movt	r0, #:upper16:.LC26
 12847 006c FEFFFFEB 		bl	RME_Str_Print
5235:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
 12848              		.loc 1 5235 5
 12849 0070 3C301BE5 		ldr	r3, [fp, #-60]
 12850 0074 0300A0E1 		mov	r0, r3
 12851 0078 FEFFFFEB 		bl	RME_Hex_Print
5236:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Prc ");
 12852              		.loc 1 5236 5
 12853 007c 000000E3 		movw	r0, #:lower16:.LC27
 12854 0080 000040E3 		movt	r0, #:upper16:.LC27
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 320


 12855 0084 FEFFFFEB 		bl	RME_Str_Print
5237:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Prc);
 12856              		.loc 1 5237 5
 12857 0088 04309BE5 		ldr	r3, [fp, #4]
 12858 008c 0300A0E1 		mov	r0, r3
 12859 0090 FEFFFFEB 		bl	RME_Hex_Print
5238:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nPrio_Max ");
 12860              		.loc 1 5238 5
 12861 0094 000000E3 		movw	r0, #:lower16:.LC28
 12862 0098 000040E3 		movt	r0, #:upper16:.LC28
 12863 009c FEFFFFEB 		bl	RME_Str_Print
5239:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Prio_Max);
 12864              		.loc 1 5239 5
 12865 00a0 08009BE5 		ldr	r0, [fp, #8]
 12866 00a4 FEFFFFEB 		bl	RME_Hex_Print
5240:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nRaddr ");
 12867              		.loc 1 5240 5
 12868 00a8 000000E3 		movw	r0, #:lower16:.LC29
 12869 00ac 000040E3 		movt	r0, #:upper16:.LC29
 12870 00b0 FEFFFFEB 		bl	RME_Str_Print
5241:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Raddr);
 12871              		.loc 1 5241 5
 12872 00b4 0C009BE5 		ldr	r0, [fp, #12]
 12873 00b8 FEFFFFEB 		bl	RME_Hex_Print
5242:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nAttr ");
 12874              		.loc 1 5242 5
 12875 00bc 000000E3 		movw	r0, #:lower16:.LC30
 12876 00c0 000040E3 		movt	r0, #:upper16:.LC30
 12877 00c4 FEFFFFEB 		bl	RME_Str_Print
5243:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Attr);
 12878              		.loc 1 5243 5
 12879 00c8 10009BE5 		ldr	r0, [fp, #16]
 12880 00cc FEFFFFEB 		bl	RME_Hex_Print
5244:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nIs_Hyp ");
 12881              		.loc 1 5244 5
 12882 00d0 000000E3 		movw	r0, #:lower16:.LC31
 12883 00d4 000040E3 		movt	r0, #:upper16:.LC31
 12884 00d8 FEFFFFEB 		bl	RME_Str_Print
5245:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Is_Hyp);
 12885              		.loc 1 5245 5
 12886 00dc 14009BE5 		ldr	r0, [fp, #20]
 12887 00e0 FEFFFFEB 		bl	RME_Hex_Print
5246:../../Source/Kernel/rme_kernel.c ****      
5247:../../Source/Kernel/rme_kernel.c ****     
5248:../../Source/Kernel/rme_kernel.c ****     /* See if the maximum priority relationship is correct - a thread
5249:../../Source/Kernel/rme_kernel.c ****      * can never create a thread with higher maximum priority */
5250:../../Source/Kernel/rme_kernel.c ****     if((RME_CPU_LOCAL()->Thd_Cur)->Sched.Prio_Max<Prio_Max)
 12888              		.loc 1 5250 24
 12889 00e4 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 12890 00e8 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 12891 00ec 043093E5 		ldr	r3, [r3, #4]
 12892              		.loc 1 5250 41
 12893 00f0 243093E5 		ldr	r3, [r3, #36]
 12894              		.loc 1 5250 7
 12895 00f4 08209BE5 		ldr	r2, [fp, #8]
 12896 00f8 030052E1 		cmp	r2, r3
 12897 00fc 0400009A 		bls	.L807
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 321


5251:../../Source/Kernel/rme_kernel.c ****     {
5252:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5253:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nmaximum priority relationship is not correct");
 12898              		.loc 1 5253 9
 12899 0100 000000E3 		movw	r0, #:lower16:.LC32
 12900 0104 000040E3 		movt	r0, #:upper16:.LC32
 12901 0108 FEFFFFEB 		bl	RME_Str_Print
5254:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 12902              		.loc 1 5254 16
 12903 010c CC30E0E3 		mvn	r3, #204
 12904 0110 F80100EA 		b	.L808
 12905              	.L807:
5255:../../Source/Kernel/rme_kernel.c ****     }
5256:../../Source/Kernel/rme_kernel.c ****     else
5257:../../Source/Kernel/rme_kernel.c ****     {
5258:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5259:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5260:../../Source/Kernel/rme_kernel.c ****     }
5261:../../Source/Kernel/rme_kernel.c **** 
5262:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
5263:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 12906              		.loc 1 5263 5
 12907 0114 34301BE5 		ldr	r3, [fp, #-52]
 12908 0118 803003E2 		and	r3, r3, #128
 12909 011c 000053E3 		cmp	r3, #0
 12910 0120 1C00001A 		bne	.L809
 12911              		.loc 1 5263 5 is_stmt 0 discriminator 1
 12912 0124 30301BE5 		ldr	r3, [fp, #-48]
 12913 0128 142093E5 		ldr	r2, [r3, #20]
 12914 012c 34301BE5 		ldr	r3, [fp, #-52]
 12915 0130 030052E1 		cmp	r2, r3
 12916 0134 0100008A 		bhi	.L810
 12917              		.loc 1 5263 5 discriminator 3
 12918 0138 0230E0E3 		mvn	r3, #2
 12919              		.loc 1 5263 5
 12920 013c ED0100EA 		b	.L808
 12921              	.L810:
 12922              		.loc 1 5263 5 discriminator 4
 12923 0140 34301BE5 		ldr	r3, [fp, #-52]
 12924 0144 8322A0E1 		lsl	r2, r3, #5
 12925 0148 30301BE5 		ldr	r3, [fp, #-48]
 12926 014c 0C3093E5 		ldr	r3, [r3, #12]
 12927 0150 033082E0 		add	r3, r2, r3
 12928 0154 08300BE5 		str	r3, [fp, #-8]
 12929 0158 08301BE5 		ldr	r3, [fp, #-8]
 12930 015c 0300A0E1 		mov	r0, r3
 12931 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12932 0164 18000BE5 		str	r0, [fp, #-24]
 12933              		.loc 1 5263 5 discriminator 1
 12934 0168 18301BE5 		ldr	r3, [fp, #-24]
 12935 016c FF3803E2 		and	r3, r3, #16711680
 12936 0170 020853E3 		cmp	r3, #131072
 12937 0174 0100001A 		bne	.L811
 12938              		.loc 1 5263 5 discriminator 5
 12939 0178 0830E0E3 		mvn	r3, #8
 12940              		.loc 1 5263 5
 12941 017c DD0100EA 		b	.L808
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 322


 12942              	.L811:
 12943              		.loc 1 5263 5 discriminator 6
 12944 0180 18301BE5 		ldr	r3, [fp, #-24]
 12945 0184 233CA0E1 		lsr	r3, r3, #24
 12946 0188 030053E3 		cmp	r3, #3
 12947 018c 3F00000A 		beq	.L812
 12948              		.loc 1 5263 5 discriminator 7
 12949 0190 0130E0E3 		mvn	r3, #1
 12950              		.loc 1 5263 5
 12951 0194 D70100EA 		b	.L808
 12952              	.L809:
 12953              		.loc 1 5263 5 discriminator 2
 12954 0198 34301BE5 		ldr	r3, [fp, #-52]
 12955 019c 2324A0E1 		lsr	r2, r3, #8
 12956 01a0 30301BE5 		ldr	r3, [fp, #-48]
 12957 01a4 143093E5 		ldr	r3, [r3, #20]
 12958 01a8 030052E1 		cmp	r2, r3
 12959 01ac 0100003A 		bcc	.L813
 12960              		.loc 1 5263 5 discriminator 8
 12961 01b0 0230E0E3 		mvn	r3, #2
 12962              		.loc 1 5263 5
 12963 01b4 CF0100EA 		b	.L808
 12964              	.L813:
 12965              		.loc 1 5263 5 discriminator 9
 12966 01b8 34301BE5 		ldr	r3, [fp, #-52]
 12967 01bc 2334A0E1 		lsr	r3, r3, #8
 12968 01c0 8322A0E1 		lsl	r2, r3, #5
 12969 01c4 30301BE5 		ldr	r3, [fp, #-48]
 12970 01c8 0C3093E5 		ldr	r3, [r3, #12]
 12971 01cc 033082E0 		add	r3, r2, r3
 12972 01d0 08300BE5 		str	r3, [fp, #-8]
 12973 01d4 08301BE5 		ldr	r3, [fp, #-8]
 12974 01d8 0300A0E1 		mov	r0, r3
 12975 01dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 12976 01e0 18000BE5 		str	r0, [fp, #-24]
 12977              		.loc 1 5263 5 discriminator 1
 12978 01e4 18301BE5 		ldr	r3, [fp, #-24]
 12979 01e8 FF3803E2 		and	r3, r3, #16711680
 12980 01ec 020853E3 		cmp	r3, #131072
 12981 01f0 0100001A 		bne	.L814
 12982              		.loc 1 5263 5 discriminator 10
 12983 01f4 0830E0E3 		mvn	r3, #8
 12984              		.loc 1 5263 5
 12985 01f8 BE0100EA 		b	.L808
 12986              	.L814:
 12987              		.loc 1 5263 5 discriminator 11
 12988 01fc 18301BE5 		ldr	r3, [fp, #-24]
 12989 0200 233CA0E1 		lsr	r3, r3, #24
 12990 0204 030053E3 		cmp	r3, #3
 12991 0208 0100000A 		beq	.L815
 12992              		.loc 1 5263 5 discriminator 12
 12993 020c 0130E0E3 		mvn	r3, #1
 12994              		.loc 1 5263 5
 12995 0210 B80100EA 		b	.L808
 12996              	.L815:
 12997              		.loc 1 5263 5 discriminator 13
 12998 0214 34301BE5 		ldr	r3, [fp, #-52]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 323


 12999 0218 7F2003E2 		and	r2, r3, #127
 13000 021c 08301BE5 		ldr	r3, [fp, #-8]
 13001 0220 143093E5 		ldr	r3, [r3, #20]
 13002 0224 030052E1 		cmp	r2, r3
 13003 0228 0100003A 		bcc	.L816
 13004              		.loc 1 5263 5 discriminator 14
 13005 022c 0230E0E3 		mvn	r3, #2
 13006              		.loc 1 5263 5
 13007 0230 B00100EA 		b	.L808
 13008              	.L816:
 13009              		.loc 1 5263 5 discriminator 15
 13010 0234 34301BE5 		ldr	r3, [fp, #-52]
 13011 0238 7F3003E2 		and	r3, r3, #127
 13012 023c 8322A0E1 		lsl	r2, r3, #5
 13013 0240 08301BE5 		ldr	r3, [fp, #-8]
 13014 0244 0C3093E5 		ldr	r3, [r3, #12]
 13015 0248 033082E0 		add	r3, r2, r3
 13016 024c 08300BE5 		str	r3, [fp, #-8]
 13017 0250 08301BE5 		ldr	r3, [fp, #-8]
 13018 0254 0300A0E1 		mov	r0, r3
 13019 0258 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13020 025c 18000BE5 		str	r0, [fp, #-24]
 13021              		.loc 1 5263 5 discriminator 1
 13022 0260 18301BE5 		ldr	r3, [fp, #-24]
 13023 0264 FF3803E2 		and	r3, r3, #16711680
 13024 0268 020853E3 		cmp	r3, #131072
 13025 026c 0100001A 		bne	.L817
 13026              		.loc 1 5263 5 discriminator 16
 13027 0270 0830E0E3 		mvn	r3, #8
 13028              		.loc 1 5263 5
 13029 0274 9F0100EA 		b	.L808
 13030              	.L817:
 13031              		.loc 1 5263 5 discriminator 17
 13032 0278 18301BE5 		ldr	r3, [fp, #-24]
 13033 027c 233CA0E1 		lsr	r3, r3, #24
 13034 0280 030053E3 		cmp	r3, #3
 13035 0284 0100000A 		beq	.L812
 13036              		.loc 1 5263 5 discriminator 18
 13037 0288 0130E0E3 		mvn	r3, #1
 13038              		.loc 1 5263 5
 13039 028c 990100EA 		b	.L808
 13040              	.L812:
5264:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat); 
5265:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 1");
5266:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 13041              		.loc 1 5266 5 is_stmt 1
 13042 0290 38301BE5 		ldr	r3, [fp, #-56]
 13043 0294 803003E2 		and	r3, r3, #128
 13044 0298 000053E3 		cmp	r3, #0
 13045 029c 1C00001A 		bne	.L818
 13046              		.loc 1 5266 5 is_stmt 0 discriminator 1
 13047 02a0 30301BE5 		ldr	r3, [fp, #-48]
 13048 02a4 142093E5 		ldr	r2, [r3, #20]
 13049 02a8 38301BE5 		ldr	r3, [fp, #-56]
 13050 02ac 030052E1 		cmp	r2, r3
 13051 02b0 0100008A 		bhi	.L819
 13052              		.loc 1 5266 5 discriminator 3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 324


 13053 02b4 0230E0E3 		mvn	r3, #2
 13054              		.loc 1 5266 5
 13055 02b8 8E0100EA 		b	.L808
 13056              	.L819:
 13057              		.loc 1 5266 5 discriminator 4
 13058 02bc 38301BE5 		ldr	r3, [fp, #-56]
 13059 02c0 8322A0E1 		lsl	r2, r3, #5
 13060 02c4 30301BE5 		ldr	r3, [fp, #-48]
 13061 02c8 0C3093E5 		ldr	r3, [r3, #12]
 13062 02cc 033082E0 		add	r3, r2, r3
 13063 02d0 10300BE5 		str	r3, [fp, #-16]
 13064 02d4 10301BE5 		ldr	r3, [fp, #-16]
 13065 02d8 0300A0E1 		mov	r0, r3
 13066 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13067 02e0 18000BE5 		str	r0, [fp, #-24]
 13068              		.loc 1 5266 5 discriminator 1
 13069 02e4 18301BE5 		ldr	r3, [fp, #-24]
 13070 02e8 FF3803E2 		and	r3, r3, #16711680
 13071 02ec 020853E3 		cmp	r3, #131072
 13072 02f0 0100001A 		bne	.L820
 13073              		.loc 1 5266 5 discriminator 5
 13074 02f4 0830E0E3 		mvn	r3, #8
 13075              		.loc 1 5266 5
 13076 02f8 7E0100EA 		b	.L808
 13077              	.L820:
 13078              		.loc 1 5266 5 discriminator 6
 13079 02fc 18301BE5 		ldr	r3, [fp, #-24]
 13080 0300 233CA0E1 		lsr	r3, r3, #24
 13081 0304 020053E3 		cmp	r3, #2
 13082 0308 3F00000A 		beq	.L821
 13083              		.loc 1 5266 5 discriminator 7
 13084 030c 0130E0E3 		mvn	r3, #1
 13085              		.loc 1 5266 5
 13086 0310 780100EA 		b	.L808
 13087              	.L818:
 13088              		.loc 1 5266 5 discriminator 2
 13089 0314 38301BE5 		ldr	r3, [fp, #-56]
 13090 0318 2324A0E1 		lsr	r2, r3, #8
 13091 031c 30301BE5 		ldr	r3, [fp, #-48]
 13092 0320 143093E5 		ldr	r3, [r3, #20]
 13093 0324 030052E1 		cmp	r2, r3
 13094 0328 0100003A 		bcc	.L822
 13095              		.loc 1 5266 5 discriminator 8
 13096 032c 0230E0E3 		mvn	r3, #2
 13097              		.loc 1 5266 5
 13098 0330 700100EA 		b	.L808
 13099              	.L822:
 13100              		.loc 1 5266 5 discriminator 9
 13101 0334 38301BE5 		ldr	r3, [fp, #-56]
 13102 0338 2334A0E1 		lsr	r3, r3, #8
 13103 033c 8322A0E1 		lsl	r2, r3, #5
 13104 0340 30301BE5 		ldr	r3, [fp, #-48]
 13105 0344 0C3093E5 		ldr	r3, [r3, #12]
 13106 0348 033082E0 		add	r3, r2, r3
 13107 034c 10300BE5 		str	r3, [fp, #-16]
 13108 0350 10301BE5 		ldr	r3, [fp, #-16]
 13109 0354 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 325


 13110 0358 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13111 035c 18000BE5 		str	r0, [fp, #-24]
 13112              		.loc 1 5266 5 discriminator 1
 13113 0360 18301BE5 		ldr	r3, [fp, #-24]
 13114 0364 FF3803E2 		and	r3, r3, #16711680
 13115 0368 020853E3 		cmp	r3, #131072
 13116 036c 0100001A 		bne	.L823
 13117              		.loc 1 5266 5 discriminator 10
 13118 0370 0830E0E3 		mvn	r3, #8
 13119              		.loc 1 5266 5
 13120 0374 5F0100EA 		b	.L808
 13121              	.L823:
 13122              		.loc 1 5266 5 discriminator 11
 13123 0378 18301BE5 		ldr	r3, [fp, #-24]
 13124 037c 233CA0E1 		lsr	r3, r3, #24
 13125 0380 030053E3 		cmp	r3, #3
 13126 0384 0100000A 		beq	.L824
 13127              		.loc 1 5266 5 discriminator 12
 13128 0388 0130E0E3 		mvn	r3, #1
 13129              		.loc 1 5266 5
 13130 038c 590100EA 		b	.L808
 13131              	.L824:
 13132              		.loc 1 5266 5 discriminator 13
 13133 0390 38301BE5 		ldr	r3, [fp, #-56]
 13134 0394 7F2003E2 		and	r2, r3, #127
 13135 0398 10301BE5 		ldr	r3, [fp, #-16]
 13136 039c 143093E5 		ldr	r3, [r3, #20]
 13137 03a0 030052E1 		cmp	r2, r3
 13138 03a4 0100003A 		bcc	.L825
 13139              		.loc 1 5266 5 discriminator 14
 13140 03a8 0230E0E3 		mvn	r3, #2
 13141              		.loc 1 5266 5
 13142 03ac 510100EA 		b	.L808
 13143              	.L825:
 13144              		.loc 1 5266 5 discriminator 15
 13145 03b0 38301BE5 		ldr	r3, [fp, #-56]
 13146 03b4 7F3003E2 		and	r3, r3, #127
 13147 03b8 8322A0E1 		lsl	r2, r3, #5
 13148 03bc 10301BE5 		ldr	r3, [fp, #-16]
 13149 03c0 0C3093E5 		ldr	r3, [r3, #12]
 13150 03c4 033082E0 		add	r3, r2, r3
 13151 03c8 10300BE5 		str	r3, [fp, #-16]
 13152 03cc 10301BE5 		ldr	r3, [fp, #-16]
 13153 03d0 0300A0E1 		mov	r0, r3
 13154 03d4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13155 03d8 18000BE5 		str	r0, [fp, #-24]
 13156              		.loc 1 5266 5 discriminator 1
 13157 03dc 18301BE5 		ldr	r3, [fp, #-24]
 13158 03e0 FF3803E2 		and	r3, r3, #16711680
 13159 03e4 020853E3 		cmp	r3, #131072
 13160 03e8 0100001A 		bne	.L826
 13161              		.loc 1 5266 5 discriminator 16
 13162 03ec 0830E0E3 		mvn	r3, #8
 13163              		.loc 1 5266 5
 13164 03f0 400100EA 		b	.L808
 13165              	.L826:
 13166              		.loc 1 5266 5 discriminator 17
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 326


 13167 03f4 18301BE5 		ldr	r3, [fp, #-24]
 13168 03f8 233CA0E1 		lsr	r3, r3, #24
 13169 03fc 020053E3 		cmp	r3, #2
 13170 0400 0100000A 		beq	.L821
 13171              		.loc 1 5266 5 discriminator 18
 13172 0404 0130E0E3 		mvn	r3, #1
 13173              		.loc 1 5266 5
 13174 0408 3A0100EA 		b	.L808
 13175              	.L821:
5267:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
5268:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 2");
5269:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 13176              		.loc 1 5269 5 is_stmt 1
 13177 040c 04309BE5 		ldr	r3, [fp, #4]
 13178 0410 803003E2 		and	r3, r3, #128
 13179 0414 000053E3 		cmp	r3, #0
 13180 0418 1C00001A 		bne	.L827
 13181              		.loc 1 5269 5 is_stmt 0 discriminator 1
 13182 041c 30301BE5 		ldr	r3, [fp, #-48]
 13183 0420 142093E5 		ldr	r2, [r3, #20]
 13184 0424 04309BE5 		ldr	r3, [fp, #4]
 13185 0428 030052E1 		cmp	r2, r3
 13186 042c 0100008A 		bhi	.L828
 13187              		.loc 1 5269 5 discriminator 3
 13188 0430 0230E0E3 		mvn	r3, #2
 13189              		.loc 1 5269 5
 13190 0434 2F0100EA 		b	.L808
 13191              	.L828:
 13192              		.loc 1 5269 5 discriminator 4
 13193 0438 04309BE5 		ldr	r3, [fp, #4]
 13194 043c 8322A0E1 		lsl	r2, r3, #5
 13195 0440 30301BE5 		ldr	r3, [fp, #-48]
 13196 0444 0C3093E5 		ldr	r3, [r3, #12]
 13197 0448 033082E0 		add	r3, r2, r3
 13198 044c 0C300BE5 		str	r3, [fp, #-12]
 13199 0450 0C301BE5 		ldr	r3, [fp, #-12]
 13200 0454 0300A0E1 		mov	r0, r3
 13201 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13202 045c 18000BE5 		str	r0, [fp, #-24]
 13203              		.loc 1 5269 5 discriminator 1
 13204 0460 18301BE5 		ldr	r3, [fp, #-24]
 13205 0464 FF3803E2 		and	r3, r3, #16711680
 13206 0468 020853E3 		cmp	r3, #131072
 13207 046c 0100001A 		bne	.L829
 13208              		.loc 1 5269 5 discriminator 5
 13209 0470 0830E0E3 		mvn	r3, #8
 13210              		.loc 1 5269 5
 13211 0474 1F0100EA 		b	.L808
 13212              	.L829:
 13213              		.loc 1 5269 5 discriminator 6
 13214 0478 18301BE5 		ldr	r3, [fp, #-24]
 13215 047c 233CA0E1 		lsr	r3, r3, #24
 13216 0480 050053E3 		cmp	r3, #5
 13217 0484 3F00000A 		beq	.L830
 13218              		.loc 1 5269 5 discriminator 7
 13219 0488 0130E0E3 		mvn	r3, #1
 13220              		.loc 1 5269 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 327


 13221 048c 190100EA 		b	.L808
 13222              	.L827:
 13223              		.loc 1 5269 5 discriminator 2
 13224 0490 04309BE5 		ldr	r3, [fp, #4]
 13225 0494 2324A0E1 		lsr	r2, r3, #8
 13226 0498 30301BE5 		ldr	r3, [fp, #-48]
 13227 049c 143093E5 		ldr	r3, [r3, #20]
 13228 04a0 030052E1 		cmp	r2, r3
 13229 04a4 0100003A 		bcc	.L831
 13230              		.loc 1 5269 5 discriminator 8
 13231 04a8 0230E0E3 		mvn	r3, #2
 13232              		.loc 1 5269 5
 13233 04ac 110100EA 		b	.L808
 13234              	.L831:
 13235              		.loc 1 5269 5 discriminator 9
 13236 04b0 04309BE5 		ldr	r3, [fp, #4]
 13237 04b4 2334A0E1 		lsr	r3, r3, #8
 13238 04b8 8322A0E1 		lsl	r2, r3, #5
 13239 04bc 30301BE5 		ldr	r3, [fp, #-48]
 13240 04c0 0C3093E5 		ldr	r3, [r3, #12]
 13241 04c4 033082E0 		add	r3, r2, r3
 13242 04c8 0C300BE5 		str	r3, [fp, #-12]
 13243 04cc 0C301BE5 		ldr	r3, [fp, #-12]
 13244 04d0 0300A0E1 		mov	r0, r3
 13245 04d4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13246 04d8 18000BE5 		str	r0, [fp, #-24]
 13247              		.loc 1 5269 5 discriminator 1
 13248 04dc 18301BE5 		ldr	r3, [fp, #-24]
 13249 04e0 FF3803E2 		and	r3, r3, #16711680
 13250 04e4 020853E3 		cmp	r3, #131072
 13251 04e8 0100001A 		bne	.L832
 13252              		.loc 1 5269 5 discriminator 10
 13253 04ec 0830E0E3 		mvn	r3, #8
 13254              		.loc 1 5269 5
 13255 04f0 000100EA 		b	.L808
 13256              	.L832:
 13257              		.loc 1 5269 5 discriminator 11
 13258 04f4 18301BE5 		ldr	r3, [fp, #-24]
 13259 04f8 233CA0E1 		lsr	r3, r3, #24
 13260 04fc 030053E3 		cmp	r3, #3
 13261 0500 0100000A 		beq	.L833
 13262              		.loc 1 5269 5 discriminator 12
 13263 0504 0130E0E3 		mvn	r3, #1
 13264              		.loc 1 5269 5
 13265 0508 FA0000EA 		b	.L808
 13266              	.L833:
 13267              		.loc 1 5269 5 discriminator 13
 13268 050c 04309BE5 		ldr	r3, [fp, #4]
 13269 0510 7F2003E2 		and	r2, r3, #127
 13270 0514 0C301BE5 		ldr	r3, [fp, #-12]
 13271 0518 143093E5 		ldr	r3, [r3, #20]
 13272 051c 030052E1 		cmp	r2, r3
 13273 0520 0100003A 		bcc	.L834
 13274              		.loc 1 5269 5 discriminator 14
 13275 0524 0230E0E3 		mvn	r3, #2
 13276              		.loc 1 5269 5
 13277 0528 F20000EA 		b	.L808
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 328


 13278              	.L834:
 13279              		.loc 1 5269 5 discriminator 15
 13280 052c 04309BE5 		ldr	r3, [fp, #4]
 13281 0530 7F3003E2 		and	r3, r3, #127
 13282 0534 8322A0E1 		lsl	r2, r3, #5
 13283 0538 0C301BE5 		ldr	r3, [fp, #-12]
 13284 053c 0C3093E5 		ldr	r3, [r3, #12]
 13285 0540 033082E0 		add	r3, r2, r3
 13286 0544 0C300BE5 		str	r3, [fp, #-12]
 13287 0548 0C301BE5 		ldr	r3, [fp, #-12]
 13288 054c 0300A0E1 		mov	r0, r3
 13289 0550 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13290 0554 18000BE5 		str	r0, [fp, #-24]
 13291              		.loc 1 5269 5 discriminator 1
 13292 0558 18301BE5 		ldr	r3, [fp, #-24]
 13293 055c FF3803E2 		and	r3, r3, #16711680
 13294 0560 020853E3 		cmp	r3, #131072
 13295 0564 0100001A 		bne	.L835
 13296              		.loc 1 5269 5 discriminator 16
 13297 0568 0830E0E3 		mvn	r3, #8
 13298              		.loc 1 5269 5
 13299 056c E10000EA 		b	.L808
 13300              	.L835:
 13301              		.loc 1 5269 5 discriminator 17
 13302 0570 18301BE5 		ldr	r3, [fp, #-24]
 13303 0574 233CA0E1 		lsr	r3, r3, #24
 13304 0578 050053E3 		cmp	r3, #5
 13305 057c 0100000A 		beq	.L830
 13306              		.loc 1 5269 5 discriminator 18
 13307 0580 0130E0E3 		mvn	r3, #1
 13308              		.loc 1 5269 5
 13309 0584 DB0000EA 		b	.L808
 13310              	.L830:
5270:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
5271:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 3");
5272:../../Source/Kernel/rme_kernel.c ****     /* Check if the target caps is not frozen and allows such operations */
5273:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 13311              		.loc 1 5273 5 is_stmt 1
 13312 0588 08301BE5 		ldr	r3, [fp, #-8]
 13313 058c 083093E5 		ldr	r3, [r3, #8]
 13314 0590 013003E2 		and	r3, r3, #1
 13315 0594 000053E3 		cmp	r3, #0
 13316 0598 0100001A 		bne	.L836
 13317              		.loc 1 5273 5 is_stmt 0 discriminator 1
 13318 059c 0630E0E3 		mvn	r3, #6
 13319              		.loc 1 5273 5
 13320 05a0 D40000EA 		b	.L808
 13321              	.L836:
5274:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 4");
5275:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_THD);
 13322              		.loc 1 5275 5 is_stmt 1
 13323 05a4 0C301BE5 		ldr	r3, [fp, #-12]
 13324 05a8 083093E5 		ldr	r3, [r3, #8]
 13325 05ac 023003E2 		and	r3, r3, #2
 13326 05b0 000053E3 		cmp	r3, #0
 13327 05b4 0100001A 		bne	.L837
 13328              		.loc 1 5275 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 329


 13329 05b8 0630E0E3 		mvn	r3, #6
 13330              		.loc 1 5275 5
 13331 05bc CD0000EA 		b	.L808
 13332              	.L837:
5276:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 5");
5277:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
5278:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13333              		.loc 1 5278 7 is_stmt 1
 13334 05c0 14309BE5 		ldr	r3, [fp, #20]
 13335 05c4 000053E3 		cmp	r3, #0
 13336 05c8 0200001A 		bne	.L838
5279:../../Source/Kernel/rme_kernel.c ****     {
5280:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5281:../../Source/Kernel/rme_kernel.c ****         
5282:../../Source/Kernel/rme_kernel.c ****         Size=RME_THD_SIZE(Attr);
 13337              		.loc 1 5282 13
 13338 05cc 9C30A0E3 		mov	r3, #156
 13339 05d0 14300BE5 		str	r3, [fp, #-20]
 13340 05d4 010000EA 		b	.L839
 13341              	.L838:
5283:../../Source/Kernel/rme_kernel.c ****     }
5284:../../Source/Kernel/rme_kernel.c ****     else
5285:../../Source/Kernel/rme_kernel.c ****     {
5286:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5287:../../Source/Kernel/rme_kernel.c ****         
5288:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_SIZE==0U)
5289:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
5290:../../Source/Kernel/rme_kernel.c **** #else
5291:../../Source/Kernel/rme_kernel.c ****         Size=RME_HYP_SIZE;
 13342              		.loc 1 5291 13
 13343 05d8 5830A0E3 		mov	r3, #88
 13344 05dc 14300BE5 		str	r3, [fp, #-20]
 13345              	.L839:
5292:../../Source/Kernel/rme_kernel.c **** #endif
5293:../../Source/Kernel/rme_kernel.c ****     }
5294:../../Source/Kernel/rme_kernel.c ****     
5295:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Vaddr)<(Raddr))) 
 13346              		.loc 1 5295 7
 13347 05e0 1C201BE5 		ldr	r2, [fp, #-28]
 13348 05e4 0C309BE5 		ldr	r3, [fp, #12]
 13349 05e8 030052E1 		cmp	r2, r3
 13350 05ec 0900002A 		bcs	.L840
5296:../../Source/Kernel/rme_kernel.c ****     {
5297:../../Source/Kernel/rme_kernel.c ****       RME_DBG_S("\r\nvaddr= ");
 13351              		.loc 1 5297 7
 13352 05f0 000000E3 		movw	r0, #:lower16:.LC33
 13353 05f4 000040E3 		movt	r0, #:upper16:.LC33
 13354 05f8 FEFFFFEB 		bl	RME_Str_Print
5298:../../Source/Kernel/rme_kernel.c ****       RME_DBG_H(Vaddr);
 13355              		.loc 1 5298 7
 13356 05fc 1C001BE5 		ldr	r0, [fp, #-28]
 13357 0600 FEFFFFEB 		bl	RME_Hex_Print
5299:../../Source/Kernel/rme_kernel.c ****       RME_DBG_S("\r\nRaddr= ");
 13358              		.loc 1 5299 7
 13359 0604 000000E3 		movw	r0, #:lower16:.LC34
 13360 0608 000040E3 		movt	r0, #:upper16:.LC34
 13361 060c FEFFFFEB 		bl	RME_Str_Print
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 330


5300:../../Source/Kernel/rme_kernel.c ****       RME_DBG_H(Raddr);
 13362              		.loc 1 5300 7
 13363 0610 0C009BE5 		ldr	r0, [fp, #12]
 13364 0614 FEFFFFEB 		bl	RME_Hex_Print
 13365              	.L840:
5301:../../Source/Kernel/rme_kernel.c ****     }
5302:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_THD,Raddr,Vaddr,Size);
 13366              		.loc 1 5302 5
 13367 0618 10301BE5 		ldr	r3, [fp, #-16]
 13368 061c 083093E5 		ldr	r3, [r3, #8]
 13369 0620 043003E2 		and	r3, r3, #4
 13370 0624 000053E3 		cmp	r3, #0
 13371 0628 0100001A 		bne	.L841
 13372              		.loc 1 5302 5 is_stmt 0 discriminator 1
 13373 062c 0630E0E3 		mvn	r3, #6
 13374              		.loc 1 5302 5
 13375 0630 B00000EA 		b	.L808
 13376              	.L841:
 13377              		.loc 1 5302 5 discriminator 2
 13378 0634 10301BE5 		ldr	r3, [fp, #-16]
 13379 0638 143093E5 		ldr	r3, [r3, #20]
 13380 063c 0C209BE5 		ldr	r2, [fp, #12]
 13381 0640 033082E0 		add	r3, r2, r3
 13382 0644 1C300BE5 		str	r3, [fp, #-28]
 13383 0648 1C201BE5 		ldr	r2, [fp, #-28]
 13384 064c 0C309BE5 		ldr	r3, [fp, #12]
 13385 0650 030052E1 		cmp	r2, r3
 13386 0654 0100002A 		bcs	.L842
 13387              		.loc 1 5302 5 discriminator 3
 13388 0658 0630E0E3 		mvn	r3, #6
 13389              		.loc 1 5302 5
 13390 065c A50000EA 		b	.L808
 13391              	.L842:
 13392              		.loc 1 5302 5 discriminator 4
 13393 0660 10301BE5 		ldr	r3, [fp, #-16]
 13394 0664 143093E5 		ldr	r3, [r3, #20]
 13395 0668 1C201BE5 		ldr	r2, [fp, #-28]
 13396 066c 030052E1 		cmp	r2, r3
 13397 0670 0100002A 		bcs	.L843
 13398              		.loc 1 5302 5 discriminator 5
 13399 0674 0630E0E3 		mvn	r3, #6
 13400              		.loc 1 5302 5
 13401 0678 9E0000EA 		b	.L808
 13402              	.L843:
 13403              		.loc 1 5302 5 discriminator 6
 13404 067c 1C201BE5 		ldr	r2, [fp, #-28]
 13405 0680 14301BE5 		ldr	r3, [fp, #-20]
 13406 0684 033082E0 		add	r3, r2, r3
 13407 0688 1C201BE5 		ldr	r2, [fp, #-28]
 13408 068c 030052E1 		cmp	r2, r3
 13409 0690 0100009A 		bls	.L844
 13410              		.loc 1 5302 5 discriminator 7
 13411 0694 0630E0E3 		mvn	r3, #6
 13412              		.loc 1 5302 5
 13413 0698 960000EA 		b	.L808
 13414              	.L844:
 13415              		.loc 1 5302 5 discriminator 8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 331


 13416 069c 10301BE5 		ldr	r3, [fp, #-16]
 13417 06a0 182093E5 		ldr	r2, [r3, #24]
 13418 06a4 1C101BE5 		ldr	r1, [fp, #-28]
 13419 06a8 14301BE5 		ldr	r3, [fp, #-20]
 13420 06ac 033081E0 		add	r3, r1, r3
 13421 06b0 013043E2 		sub	r3, r3, #1
 13422 06b4 030052E1 		cmp	r2, r3
 13423 06b8 0100002A 		bcs	.L845
 13424              		.loc 1 5302 5 discriminator 9
 13425 06bc 0630E0E3 		mvn	r3, #6
 13426              		.loc 1 5302 5
 13427 06c0 8C0000EA 		b	.L808
 13428              	.L845:
5303:../../Source/Kernel/rme_kernel.c ****     
5304:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5305:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Crt);
 13429              		.loc 1 5305 5 is_stmt 1
 13430 06c4 08301BE5 		ldr	r3, [fp, #-8]
 13431 06c8 142093E5 		ldr	r2, [r3, #20]
 13432 06cc 3C301BE5 		ldr	r3, [fp, #-60]
 13433 06d0 030052E1 		cmp	r2, r3
 13434 06d4 0100008A 		bhi	.L846
 13435              		.loc 1 5305 5 is_stmt 0 discriminator 1
 13436 06d8 0230E0E3 		mvn	r3, #2
 13437              		.loc 1 5305 5
 13438 06dc 850000EA 		b	.L808
 13439              	.L846:
 13440              		.loc 1 5305 5 discriminator 2
 13441 06e0 3C301BE5 		ldr	r3, [fp, #-60]
 13442 06e4 8322A0E1 		lsl	r2, r3, #5
 13443 06e8 08301BE5 		ldr	r3, [fp, #-8]
 13444 06ec 0C3093E5 		ldr	r3, [r3, #12]
 13445 06f0 033082E0 		add	r3, r2, r3
 13446 06f4 20300BE5 		str	r3, [fp, #-32]
5306:../../Source/Kernel/rme_kernel.c **** 
5307:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
5308:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Thd_Crt);
 13447              		.loc 1 5308 5 is_stmt 1
 13448 06f8 20301BE5 		ldr	r3, [fp, #-32]
 13449 06fc 0128A0E3 		mov	r2, #65536
 13450 0700 0010A0E3 		mov	r1, #0
 13451 0704 0300A0E1 		mov	r0, r3
 13452 0708 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13453 070c 0030A0E1 		mov	r3, r0
 13454              		.loc 1 5308 5 is_stmt 0 discriminator 1
 13455 0710 000053E3 		cmp	r3, #0
 13456 0714 0100001A 		bne	.L847
 13457 0718 0430E0E3 		mvn	r3, #4
 13458              		.loc 1 5308 5
 13459 071c 750000EA 		b	.L808
 13460              	.L847:
 13461              		.loc 1 5308 5 discriminator 2
 13462 0720 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13463 0724 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13464 0728 002093E5 		ldr	r2, [r3]
 13465 072c 20301BE5 		ldr	r3, [fp, #-32]
 13466 0730 102083E5 		str	r2, [r3, #16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 332


5309:../../Source/Kernel/rme_kernel.c ****      
5310:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
5311:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,Size)<0)
 13467              		.loc 1 5311 8 is_stmt 1
 13468 0734 14101BE5 		ldr	r1, [fp, #-20]
 13469 0738 1C001BE5 		ldr	r0, [fp, #-28]
 13470 073c FEFFFFEB 		bl	_RME_Kot_Mark
 13471 0740 0030A0E1 		mov	r3, r0
 13472              		.loc 1 5311 7 discriminator 1
 13473 0744 000053E3 		cmp	r3, #0
 13474 0748 0E0000AA 		bge	.L848
5312:../../Source/Kernel/rme_kernel.c ****     {
5313:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5314:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\n_RME_Kot_Mark(Vaddr,Size)");
 13475              		.loc 1 5314 9
 13476 074c 000000E3 		movw	r0, #:lower16:.LC35
 13477 0750 000040E3 		movt	r0, #:upper16:.LC35
 13478 0754 FEFFFFEB 		bl	RME_Str_Print
5315:../../Source/Kernel/rme_kernel.c ****         RME_DBG_I(_RME_Kot_Mark(Vaddr,Size));
 13479              		.loc 1 5315 9
 13480 0758 14101BE5 		ldr	r1, [fp, #-20]
 13481 075c 1C001BE5 		ldr	r0, [fp, #-28]
 13482 0760 FEFFFFEB 		bl	_RME_Kot_Mark
 13483 0764 0030A0E1 		mov	r3, r0
 13484              		.loc 1 5315 9 is_stmt 0 discriminator 1
 13485 0768 0300A0E1 		mov	r0, r3
 13486 076c FEFFFFEB 		bl	RME_Int_Print
5316:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),0U);
 13487              		.loc 1 5316 9 is_stmt 1
 13488 0770 20301BE5 		ldr	r3, [fp, #-32]
 13489 0774 0010A0E3 		mov	r1, #0
 13490 0778 0300A0E1 		mov	r0, r3
 13491 077c FEFFFFEB 		bl	__RME_A7A_Write_Release
5317:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 13492              		.loc 1 5317 16
 13493 0780 0330E0E3 		mvn	r3, #3
 13494 0784 5B0000EA 		b	.L808
 13495              	.L848:
5318:../../Source/Kernel/rme_kernel.c ****     }
5319:../../Source/Kernel/rme_kernel.c ****     else
5320:../../Source/Kernel/rme_kernel.c ****     {
5321:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5322:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5323:../../Source/Kernel/rme_kernel.c ****     }
5324:../../Source/Kernel/rme_kernel.c ****     
5325:../../Source/Kernel/rme_kernel.c ****     /* Object init */
5326:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Vaddr;
 13496              		.loc 1 5326 11
 13497 0788 1C301BE5 		ldr	r3, [fp, #-28]
 13498 078c 24300BE5 		str	r3, [fp, #-36]
5327:../../Source/Kernel/rme_kernel.c ****     /* These thread's TID default to 0, and have no timeslices assigned */
5328:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=0U;
 13499              		.loc 1 5328 22
 13500 0790 24301BE5 		ldr	r3, [fp, #-36]
 13501 0794 0020A0E3 		mov	r2, #0
 13502 0798 102083E5 		str	r2, [r3, #16]
5329:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 333


 13503              		.loc 1 5329 24
 13504 079c 24301BE5 		ldr	r3, [fp, #-36]
 13505 07a0 0020A0E3 		mov	r2, #0
 13506 07a4 182083E5 		str	r2, [r3, #24]
5330:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.State=RME_THD_TIMEOUT;
 13507              		.loc 1 5330 24
 13508 07a8 24301BE5 		ldr	r3, [fp, #-36]
 13509 07ac 0220A0E3 		mov	r2, #2
 13510 07b0 1C2083E5 		str	r2, [r3, #28]
5331:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 13511              		.loc 1 5331 14
 13512 07b4 0C301BE5 		ldr	r3, [fp, #-12]
 13513 07b8 003093E5 		ldr	r3, [r3]
 13514 07bc 7330FFE6 		uxth	r3, r3
 13515 07c0 000053E3 		cmp	r3, #0
 13516 07c4 0200000A 		beq	.L849
 13517              		.loc 1 5331 14 is_stmt 0 discriminator 1
 13518 07c8 0C301BE5 		ldr	r3, [fp, #-12]
 13519 07cc 043093E5 		ldr	r3, [r3, #4]
 13520 07d0 000000EA 		b	.L850
 13521              	.L849:
 13522              		.loc 1 5331 14 discriminator 2
 13523 07d4 0C301BE5 		ldr	r3, [fp, #-12]
 13524              	.L850:
 13525              		.loc 1 5331 13 is_stmt 1 discriminator 4
 13526 07d8 28300BE5 		str	r3, [fp, #-40]
5332:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prc=Prc_Root;
 13527              		.loc 1 5332 22
 13528 07dc 24301BE5 		ldr	r3, [fp, #-36]
 13529 07e0 28201BE5 		ldr	r2, [fp, #-40]
 13530 07e4 2C2083E5 		str	r2, [r3, #44]
5333:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Signal=0U;
 13531              		.loc 1 5333 25
 13532 07e8 24301BE5 		ldr	r3, [fp, #-36]
 13533 07ec 0020A0E3 		mov	r2, #0
 13534 07f0 282083E5 		str	r2, [r3, #40]
5334:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio_Max=Prio_Max;
 13535              		.loc 1 5334 27
 13536 07f4 24301BE5 		ldr	r3, [fp, #-36]
 13537 07f8 08209BE5 		ldr	r2, [fp, #8]
 13538 07fc 242083E5 		str	r2, [r3, #36]
5335:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Ref=0U;
 13539              		.loc 1 5335 28
 13540 0800 24301BE5 		ldr	r3, [fp, #-36]
 13541 0804 0020A0E3 		mov	r2, #0
 13542 0808 302083E5 		str	r2, [r3, #48]
5336:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Sig=0U;
 13543              		.loc 1 5336 28
 13544 080c 24301BE5 		ldr	r3, [fp, #-36]
 13545 0810 0020A0E3 		mov	r2, #0
 13546 0814 382083E5 		str	r2, [r3, #56]
5337:../../Source/Kernel/rme_kernel.c ****     /* Currently the thread is not bound to any particular CPU */
5338:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Local=RME_THD_FREE;
 13547              		.loc 1 5338 24
 13548 0818 24301BE5 		ldr	r3, [fp, #-36]
 13549 081c 0020E0E3 		mvn	r2, #0
 13550 0820 142083E5 		str	r2, [r3, #20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 334


5339:../../Source/Kernel/rme_kernel.c ****     /* This is a marking that this thread haven't sent any notifications */
5340:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 13551              		.loc 1 5340 5
 13552 0824 24301BE5 		ldr	r3, [fp, #-36]
 13553 0828 083083E2 		add	r3, r3, #8
 13554 082c 0300A0E1 		mov	r0, r3
 13555 0830 FEFFFFEB 		bl	_RME_List_Crt
5341:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Event));
 13556              		.loc 1 5341 5
 13557 0834 24301BE5 		ldr	r3, [fp, #-36]
 13558 0838 3C3083E2 		add	r3, r3, #60
 13559 083c 0300A0E1 		mov	r0, r3
 13560 0840 FEFFFFEB 		bl	_RME_List_Crt
5342:../../Source/Kernel/rme_kernel.c ****     /* Point its pointer to itself - this is not a hypervisor thread yet */
5343:../../Source/Kernel/rme_kernel.c ****     if(Is_Hyp==0U)
 13561              		.loc 1 5343 7
 13562 0844 14309BE5 		ldr	r3, [fp, #20]
 13563 0848 000053E3 		cmp	r3, #0
 13564 084c 0800001A 		bne	.L851
5344:../../Source/Kernel/rme_kernel.c ****     {
5345:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5346:../../Source/Kernel/rme_kernel.c ****         
5347:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr;
 13565              		.loc 1 5347 29
 13566 0850 24301BE5 		ldr	r3, [fp, #-36]
 13567 0854 10209BE5 		ldr	r2, [fp, #16]
 13568 0858 442083E5 		str	r2, [r3, #68]
5348:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)(Vaddr+RME_HYP_SIZE);
 13569              		.loc 1 5348 52
 13570 085c 1C301BE5 		ldr	r3, [fp, #-28]
 13571 0860 583083E2 		add	r3, r3, #88
 13572              		.loc 1 5348 25
 13573 0864 0320A0E1 		mov	r2, r3
 13574              		.loc 1 5348 24
 13575 0868 24301BE5 		ldr	r3, [fp, #-36]
 13576 086c 482083E5 		str	r2, [r3, #72]
 13577 0870 060000EA 		b	.L852
 13578              	.L851:
5349:../../Source/Kernel/rme_kernel.c ****     }
5350:../../Source/Kernel/rme_kernel.c ****     /* Default to HYP_VA_BASE for all created hypervisor threads */
5351:../../Source/Kernel/rme_kernel.c ****     else
5352:../../Source/Kernel/rme_kernel.c ****     {
5353:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5354:../../Source/Kernel/rme_kernel.c ****         
5355:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Hyp_Attr=Attr|RME_THD_HYP_FLAG;
 13579              		.loc 1 5355 34
 13580 0874 10309BE5 		ldr	r3, [fp, #16]
 13581 0878 022183E3 		orr	r2, r3, #-2147483648
 13582              		.loc 1 5355 29
 13583 087c 24301BE5 		ldr	r3, [fp, #-36]
 13584 0880 442083E5 		str	r2, [r3, #68]
5356:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg *)RME_HYP_VA_BASE;
 13585              		.loc 1 5356 24
 13586 0884 24301BE5 		ldr	r3, [fp, #-36]
 13587 0888 0222A0E3 		mov	r2, #536870912
 13588 088c 482083E5 		str	r2, [r3, #72]
 13589              	.L852:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 335


5357:../../Source/Kernel/rme_kernel.c ****     }
5358:../../Source/Kernel/rme_kernel.c ****     /* Initialize the invocation stack */
5359:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Ctx.Invstk));
 13590              		.loc 1 5359 5
 13591 0890 24301BE5 		ldr	r3, [fp, #-36]
 13592 0894 4C3083E2 		add	r3, r3, #76
 13593 0898 0300A0E1 		mov	r0, r3
 13594 089c FEFFFFEB 		bl	_RME_List_Crt
5360:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth=0U;
 13595              		.loc 1 5360 29
 13596 08a0 24301BE5 		ldr	r3, [fp, #-36]
 13597 08a4 0020A0E3 		mov	r2, #0
 13598 08a8 542083E5 		str	r2, [r3, #84]
5361:../../Source/Kernel/rme_kernel.c **** 
5362:../../Source/Kernel/rme_kernel.c ****     /* Header init */
5363:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Root_Ref=0U;
 13599              		.loc 1 5363 27
 13600 08ac 20301BE5 		ldr	r3, [fp, #-32]
 13601 08b0 0020A0E3 		mov	r2, #0
 13602 08b4 042083E5 		str	r2, [r3, #4]
5364:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Object=Vaddr;
 13603              		.loc 1 5364 25
 13604 08b8 20301BE5 		ldr	r3, [fp, #-32]
 13605 08bc 1C201BE5 		ldr	r2, [fp, #-28]
 13606 08c0 0C2083E5 		str	r2, [r3, #12]
5365:../../Source/Kernel/rme_kernel.c ****     Thd_Crt->Head.Flag=RME_THD_FLAG_ALL;
 13607              		.loc 1 5365 23
 13608 08c4 20301BE5 		ldr	r3, [fp, #-32]
 13609 08c8 FF2100E3 		movw	r2, #511
 13610 08cc 082083E5 		str	r2, [r3, #8]
5366:../../Source/Kernel/rme_kernel.c **** 
5367:../../Source/Kernel/rme_kernel.c ****     /* Reference process */
5368:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref), 1U);
 13611              		.loc 1 5368 5
 13612 08d0 28301BE5 		ldr	r3, [fp, #-40]
 13613 08d4 043083E2 		add	r3, r3, #4
 13614 08d8 0110A0E3 		mov	r1, #1
 13615 08dc 0300A0E1 		mov	r0, r3
 13616 08e0 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5369:../../Source/Kernel/rme_kernel.c ****     
5370:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
5371:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Thd_Crt->Head.Type_Stat),
 13617              		.loc 1 5371 5
 13618 08e4 20301BE5 		ldr	r3, [fp, #-32]
 13619 08e8 0614A0E3 		mov	r1, #100663296
 13620 08ec 0300A0E1 		mov	r0, r3
 13621 08f0 FEFFFFEB 		bl	__RME_A7A_Write_Release
5372:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_THD,
5373:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
5374:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
5375:../../Source/Kernel/rme_kernel.c **** 
5376:../../Source/Kernel/rme_kernel.c ****     return 0;
 13622              		.loc 1 5376 12
 13623 08f4 0030A0E3 		mov	r3, #0
 13624              	.L808:
5377:../../Source/Kernel/rme_kernel.c **** }
 13625              		.loc 1 5377 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 336


 13626 08f8 0300A0E1 		mov	r0, r3
 13627 08fc 04D04BE2 		sub	sp, fp, #4
 13628              		.cfi_def_cfa 13, 8
 13629              		@ sp needed
 13630 0900 0088BDE8 		pop	{fp, pc}
 13631              		.cfi_endproc
 13632              	.LFE56:
 13634              		.section	.text._RME_Thd_Del,"ax",%progbits
 13635              		.align	2
 13636              		.syntax unified
 13637              		.arm
 13639              	_RME_Thd_Del:
 13640              	.LFB57:
5378:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Crt *************************************************/
5379:../../Source/Kernel/rme_kernel.c **** 
5380:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Del ******************************************************
5381:../../Source/Kernel/rme_kernel.c **** Description : Delete a thread.
5382:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
5383:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table.
5384:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5385:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread in the captbl.
5386:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
5387:../../Source/Kernel/rme_kernel.c **** Output      : None.
5388:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5389:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5390:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Del(struct RME_Cap_Cpt* Cpt,
5391:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
5392:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd)
5393:../../Source/Kernel/rme_kernel.c **** {
 13641              		.loc 1 5393 1
 13642              		.cfi_startproc
 13643              		@ args = 0, pretend = 0, frame = 40
 13644              		@ frame_needed = 1, uses_anonymous_args = 0
 13645 0000 00482DE9 		push	{fp, lr}
 13646              		.cfi_def_cfa_offset 8
 13647              		.cfi_offset 11, -8
 13648              		.cfi_offset 14, -4
 13649 0004 04B08DE2 		add	fp, sp, #4
 13650              		.cfi_def_cfa 11, 4
 13651 0008 28D04DE2 		sub	sp, sp, #40
 13652 000c 20000BE5 		str	r0, [fp, #-32]
 13653 0010 24100BE5 		str	r1, [fp, #-36]
 13654 0014 28200BE5 		str	r2, [fp, #-40]
5394:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
5395:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Del;
5396:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5397:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
5398:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5399:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
5400:../../Source/Kernel/rme_kernel.c ****     
5401:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5402:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 13655              		.loc 1 5402 5
 13656 0018 24301BE5 		ldr	r3, [fp, #-36]
 13657 001c 803003E2 		and	r3, r3, #128
 13658 0020 000053E3 		cmp	r3, #0
 13659 0024 1C00001A 		bne	.L854
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 337


 13660              		.loc 1 5402 5 is_stmt 0 discriminator 1
 13661 0028 20301BE5 		ldr	r3, [fp, #-32]
 13662 002c 142093E5 		ldr	r2, [r3, #20]
 13663 0030 24301BE5 		ldr	r3, [fp, #-36]
 13664 0034 030052E1 		cmp	r2, r3
 13665 0038 0100008A 		bhi	.L855
 13666              		.loc 1 5402 5 discriminator 3
 13667 003c 0230E0E3 		mvn	r3, #2
 13668              		.loc 1 5402 5
 13669 0040 0A0100EA 		b	.L856
 13670              	.L855:
 13671              		.loc 1 5402 5 discriminator 4
 13672 0044 24301BE5 		ldr	r3, [fp, #-36]
 13673 0048 8322A0E1 		lsl	r2, r3, #5
 13674 004c 20301BE5 		ldr	r3, [fp, #-32]
 13675 0050 0C3093E5 		ldr	r3, [r3, #12]
 13676 0054 033082E0 		add	r3, r2, r3
 13677 0058 08300BE5 		str	r3, [fp, #-8]
 13678 005c 08301BE5 		ldr	r3, [fp, #-8]
 13679 0060 0300A0E1 		mov	r0, r3
 13680 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13681 0068 0C000BE5 		str	r0, [fp, #-12]
 13682              		.loc 1 5402 5 discriminator 1
 13683 006c 0C301BE5 		ldr	r3, [fp, #-12]
 13684 0070 FF3803E2 		and	r3, r3, #16711680
 13685 0074 020853E3 		cmp	r3, #131072
 13686 0078 0100001A 		bne	.L857
 13687              		.loc 1 5402 5 discriminator 5
 13688 007c 0830E0E3 		mvn	r3, #8
 13689              		.loc 1 5402 5
 13690 0080 FA0000EA 		b	.L856
 13691              	.L857:
 13692              		.loc 1 5402 5 discriminator 6
 13693 0084 0C301BE5 		ldr	r3, [fp, #-12]
 13694 0088 233CA0E1 		lsr	r3, r3, #24
 13695 008c 030053E3 		cmp	r3, #3
 13696 0090 3F00000A 		beq	.L858
 13697              		.loc 1 5402 5 discriminator 7
 13698 0094 0130E0E3 		mvn	r3, #1
 13699              		.loc 1 5402 5
 13700 0098 F40000EA 		b	.L856
 13701              	.L854:
 13702              		.loc 1 5402 5 discriminator 2
 13703 009c 24301BE5 		ldr	r3, [fp, #-36]
 13704 00a0 2324A0E1 		lsr	r2, r3, #8
 13705 00a4 20301BE5 		ldr	r3, [fp, #-32]
 13706 00a8 143093E5 		ldr	r3, [r3, #20]
 13707 00ac 030052E1 		cmp	r2, r3
 13708 00b0 0100003A 		bcc	.L859
 13709              		.loc 1 5402 5 discriminator 8
 13710 00b4 0230E0E3 		mvn	r3, #2
 13711              		.loc 1 5402 5
 13712 00b8 EC0000EA 		b	.L856
 13713              	.L859:
 13714              		.loc 1 5402 5 discriminator 9
 13715 00bc 24301BE5 		ldr	r3, [fp, #-36]
 13716 00c0 2334A0E1 		lsr	r3, r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 338


 13717 00c4 8322A0E1 		lsl	r2, r3, #5
 13718 00c8 20301BE5 		ldr	r3, [fp, #-32]
 13719 00cc 0C3093E5 		ldr	r3, [r3, #12]
 13720 00d0 033082E0 		add	r3, r2, r3
 13721 00d4 08300BE5 		str	r3, [fp, #-8]
 13722 00d8 08301BE5 		ldr	r3, [fp, #-8]
 13723 00dc 0300A0E1 		mov	r0, r3
 13724 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13725 00e4 0C000BE5 		str	r0, [fp, #-12]
 13726              		.loc 1 5402 5 discriminator 1
 13727 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 13728 00ec FF3803E2 		and	r3, r3, #16711680
 13729 00f0 020853E3 		cmp	r3, #131072
 13730 00f4 0100001A 		bne	.L860
 13731              		.loc 1 5402 5 discriminator 10
 13732 00f8 0830E0E3 		mvn	r3, #8
 13733              		.loc 1 5402 5
 13734 00fc DB0000EA 		b	.L856
 13735              	.L860:
 13736              		.loc 1 5402 5 discriminator 11
 13737 0100 0C301BE5 		ldr	r3, [fp, #-12]
 13738 0104 233CA0E1 		lsr	r3, r3, #24
 13739 0108 030053E3 		cmp	r3, #3
 13740 010c 0100000A 		beq	.L861
 13741              		.loc 1 5402 5 discriminator 12
 13742 0110 0130E0E3 		mvn	r3, #1
 13743              		.loc 1 5402 5
 13744 0114 D50000EA 		b	.L856
 13745              	.L861:
 13746              		.loc 1 5402 5 discriminator 13
 13747 0118 24301BE5 		ldr	r3, [fp, #-36]
 13748 011c 7F2003E2 		and	r2, r3, #127
 13749 0120 08301BE5 		ldr	r3, [fp, #-8]
 13750 0124 143093E5 		ldr	r3, [r3, #20]
 13751 0128 030052E1 		cmp	r2, r3
 13752 012c 0100003A 		bcc	.L862
 13753              		.loc 1 5402 5 discriminator 14
 13754 0130 0230E0E3 		mvn	r3, #2
 13755              		.loc 1 5402 5
 13756 0134 CD0000EA 		b	.L856
 13757              	.L862:
 13758              		.loc 1 5402 5 discriminator 15
 13759 0138 24301BE5 		ldr	r3, [fp, #-36]
 13760 013c 7F3003E2 		and	r3, r3, #127
 13761 0140 8322A0E1 		lsl	r2, r3, #5
 13762 0144 08301BE5 		ldr	r3, [fp, #-8]
 13763 0148 0C3093E5 		ldr	r3, [r3, #12]
 13764 014c 033082E0 		add	r3, r2, r3
 13765 0150 08300BE5 		str	r3, [fp, #-8]
 13766 0154 08301BE5 		ldr	r3, [fp, #-8]
 13767 0158 0300A0E1 		mov	r0, r3
 13768 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 13769 0160 0C000BE5 		str	r0, [fp, #-12]
 13770              		.loc 1 5402 5 discriminator 1
 13771 0164 0C301BE5 		ldr	r3, [fp, #-12]
 13772 0168 FF3803E2 		and	r3, r3, #16711680
 13773 016c 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 339


 13774 0170 0100001A 		bne	.L863
 13775              		.loc 1 5402 5 discriminator 16
 13776 0174 0830E0E3 		mvn	r3, #8
 13777              		.loc 1 5402 5
 13778 0178 BC0000EA 		b	.L856
 13779              	.L863:
 13780              		.loc 1 5402 5 discriminator 17
 13781 017c 0C301BE5 		ldr	r3, [fp, #-12]
 13782 0180 233CA0E1 		lsr	r3, r3, #24
 13783 0184 030053E3 		cmp	r3, #3
 13784 0188 0100000A 		beq	.L858
 13785              		.loc 1 5402 5 discriminator 18
 13786 018c 0130E0E3 		mvn	r3, #1
 13787              		.loc 1 5402 5
 13788 0190 B60000EA 		b	.L856
 13789              	.L858:
5403:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
5404:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
5405:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 13790              		.loc 1 5405 5 is_stmt 1
 13791 0194 08301BE5 		ldr	r3, [fp, #-8]
 13792 0198 083093E5 		ldr	r3, [r3, #8]
 13793 019c 023003E2 		and	r3, r3, #2
 13794 01a0 000053E3 		cmp	r3, #0
 13795 01a4 0100001A 		bne	.L864
 13796              		.loc 1 5405 5 is_stmt 0 discriminator 1
 13797 01a8 0630E0E3 		mvn	r3, #6
 13798              		.loc 1 5405 5
 13799 01ac AF0000EA 		b	.L856
 13800              	.L864:
5406:../../Source/Kernel/rme_kernel.c ****     
5407:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
5408:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Thd,struct RME_Cap_Thd*,Thd_Del);
 13801              		.loc 1 5408 5 is_stmt 1
 13802 01b0 08301BE5 		ldr	r3, [fp, #-8]
 13803 01b4 142093E5 		ldr	r2, [r3, #20]
 13804 01b8 28301BE5 		ldr	r3, [fp, #-40]
 13805 01bc 030052E1 		cmp	r2, r3
 13806 01c0 0100008A 		bhi	.L865
 13807              		.loc 1 5408 5 is_stmt 0 discriminator 1
 13808 01c4 0230E0E3 		mvn	r3, #2
 13809              		.loc 1 5408 5
 13810 01c8 A80000EA 		b	.L856
 13811              	.L865:
 13812              		.loc 1 5408 5 discriminator 2
 13813 01cc 28301BE5 		ldr	r3, [fp, #-40]
 13814 01d0 8322A0E1 		lsl	r2, r3, #5
 13815 01d4 08301BE5 		ldr	r3, [fp, #-8]
 13816 01d8 0C3093E5 		ldr	r3, [r3, #12]
 13817 01dc 033082E0 		add	r3, r2, r3
 13818 01e0 10300BE5 		str	r3, [fp, #-16]
5409:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
5410:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Thd_Del,Type_Stat,RME_CAP_TYPE_THD);
 13819              		.loc 1 5410 5 is_stmt 1
 13820 01e4 10301BE5 		ldr	r3, [fp, #-16]
 13821 01e8 0300A0E1 		mov	r0, r3
 13822 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 340


 13823 01f0 0C000BE5 		str	r0, [fp, #-12]
 13824              		.loc 1 5410 5 is_stmt 0 discriminator 1
 13825 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 13826 01f8 FF3803E2 		and	r3, r3, #16711680
 13827 01fc 020853E3 		cmp	r3, #131072
 13828 0200 0100000A 		beq	.L866
 13829 0204 0830E0E3 		mvn	r3, #8
 13830              		.loc 1 5410 5
 13831 0208 980000EA 		b	.L856
 13832              	.L866:
 13833              		.loc 1 5410 5 discriminator 2
 13834 020c 0C301BE5 		ldr	r3, [fp, #-12]
 13835 0210 233CA0E1 		lsr	r3, r3, #24
 13836 0214 060053E3 		cmp	r3, #6
 13837 0218 0100000A 		beq	.L867
 13838              		.loc 1 5410 5 discriminator 3
 13839 021c 0130E0E3 		mvn	r3, #1
 13840              		.loc 1 5410 5
 13841 0220 920000EA 		b	.L856
 13842              	.L867:
 13843              		.loc 1 5410 5 discriminator 4
 13844 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 13845 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 13846 022c 002093E5 		ldr	r2, [r3]
 13847 0230 10301BE5 		ldr	r3, [fp, #-16]
 13848 0234 103093E5 		ldr	r3, [r3, #16]
 13849 0238 0310A0E1 		mov	r1, r3
 13850 023c 0200A0E1 		mov	r0, r2
 13851 0240 FEFFFFEB 		bl	_RME_Diff
 13852 0244 0030A0E1 		mov	r3, r0
 13853              		.loc 1 5410 5 discriminator 1
 13854 0248 0A0053E3 		cmp	r3, #10
 13855 024c 0100008A 		bhi	.L868
 13856              		.loc 1 5410 5 discriminator 5
 13857 0250 0730E0E3 		mvn	r3, #7
 13858              		.loc 1 5410 5
 13859 0254 850000EA 		b	.L856
 13860              	.L868:
 13861              		.loc 1 5410 5 discriminator 6
 13862 0258 10301BE5 		ldr	r3, [fp, #-16]
 13863 025c 043093E5 		ldr	r3, [r3, #4]
 13864 0260 000053E3 		cmp	r3, #0
 13865 0264 0B00000A 		beq	.L869
 13866              		.loc 1 5410 5 discriminator 7
 13867 0268 0C301BE5 		ldr	r3, [fp, #-12]
 13868 026c 7330FFE6 		uxth	r3, r3
 13869 0270 000053E3 		cmp	r3, #0
 13870 0274 0500001A 		bne	.L870
 13871              		.loc 1 5410 5 discriminator 9
 13872 0278 10001BE5 		ldr	r0, [fp, #-16]
 13873 027c 0C301BE5 		ldr	r3, [fp, #-12]
 13874 0280 FF38C3E3 		bic	r3, r3, #16711680
 13875 0284 0320A0E1 		mov	r2, r3
 13876 0288 0C101BE5 		ldr	r1, [fp, #-12]
 13877 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13878              	.L870:
 13879              		.loc 1 5410 5 discriminator 11
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 341


 13880 0290 0530E0E3 		mvn	r3, #5
 13881              		.loc 1 5410 5
 13882 0294 750000EA 		b	.L856
 13883              	.L869:
 13884              		.loc 1 5410 5 discriminator 8
 13885 0298 0C301BE5 		ldr	r3, [fp, #-12]
 13886 029c 7330FFE6 		uxth	r3, r3
 13887 02a0 000053E3 		cmp	r3, #0
 13888 02a4 0800000A 		beq	.L871
 13889              		.loc 1 5410 5 discriminator 12
 13890 02a8 003000E3 		movw	r3, #:lower16:.LC6
 13891 02ac 003040E3 		movt	r3, #:upper16:.LC6
 13892 02b0 002000E3 		movw	r2, #:lower16:.LC7
 13893 02b4 002040E3 		movt	r2, #:upper16:.LC7
 13894 02b8 221501E3 		movw	r1, #5410
 13895 02bc 000000E3 		movw	r0, #:lower16:.LC8
 13896 02c0 000040E3 		movt	r0, #:upper16:.LC8
 13897 02c4 FEFFFFEB 		bl	RME_Log
 13898              	.L872:
 13899              		.loc 1 5410 5
 13900 02c8 FEFFFFEA 		b	.L872
 13901              	.L871:
5411:../../Source/Kernel/rme_kernel.c ****     
5412:../../Source/Kernel/rme_kernel.c ****     /* Get the thread */
5413:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Del,struct RME_Thd_Struct*);
 13902              		.loc 1 5413 12 is_stmt 1
 13903 02cc 10301BE5 		ldr	r3, [fp, #-16]
 13904 02d0 0C3093E5 		ldr	r3, [r3, #12]
 13905              		.loc 1 5413 11
 13906 02d4 14300BE5 		str	r3, [fp, #-20]
5414:../../Source/Kernel/rme_kernel.c ****     
5415:../../Source/Kernel/rme_kernel.c ****     /* See if the thread is free. If still bound, we cannot proceed to deletion */
5416:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=RME_THD_FREE)
 13907              		.loc 1 5416 21
 13908 02d8 14301BE5 		ldr	r3, [fp, #-20]
 13909 02dc 143093E5 		ldr	r3, [r3, #20]
 13910              		.loc 1 5416 7
 13911 02e0 010073E3 		cmn	r3, #1
 13912 02e4 0700000A 		beq	.L873
5417:../../Source/Kernel/rme_kernel.c ****     {
5418:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5419:../../Source/Kernel/rme_kernel.c **** 
5420:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Thd_Del,Type_Stat);
 13913              		.loc 1 5420 9
 13914 02e8 10001BE5 		ldr	r0, [fp, #-16]
 13915 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 13916 02f0 FF38C3E3 		bic	r3, r3, #16711680
 13917 02f4 0320A0E1 		mov	r2, r3
 13918 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 13919 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
5421:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 13920              		.loc 1 5421 16
 13921 0300 CB30E0E3 		mvn	r3, #203
 13922 0304 590000EA 		b	.L856
 13923              	.L873:
5422:../../Source/Kernel/rme_kernel.c ****     }
5423:../../Source/Kernel/rme_kernel.c ****     else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 342


5424:../../Source/Kernel/rme_kernel.c ****     {
5425:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5426:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5427:../../Source/Kernel/rme_kernel.c ****     }
5428:../../Source/Kernel/rme_kernel.c ****     
5429:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
5430:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Thd_Del,Type_Stat);
 13924              		.loc 1 5430 5
 13925 0308 10301BE5 		ldr	r3, [fp, #-16]
 13926 030c 0020A0E3 		mov	r2, #0
 13927 0310 0C101BE5 		ldr	r1, [fp, #-12]
 13928 0314 0300A0E1 		mov	r0, r3
 13929 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 13930 031c 0030A0E1 		mov	r3, r0
 13931              		.loc 1 5430 5 is_stmt 0 discriminator 1
 13932 0320 000053E3 		cmp	r3, #0
 13933 0324 1300001A 		bne	.L875
 13934 0328 0030E0E3 		mvn	r3, #0
 13935              		.loc 1 5430 5
 13936 032c 4F0000EA 		b	.L856
 13937              	.L876:
5431:../../Source/Kernel/rme_kernel.c ****     
5432:../../Source/Kernel/rme_kernel.c ****     /* Is the thread using any invocation? If yes, just pop the invocation
5433:../../Source/Kernel/rme_kernel.c ****      * stack to empty, and free all the invocation stubs. This can be virtually
5434:../../Source/Kernel/rme_kernel.c ****      * unbounded if the invocation stack is just too deep. This is left to the
5435:../../Source/Kernel/rme_kernel.c ****      * user; if this is what he or she wants, be our guest. */
5436:../../Source/Kernel/rme_kernel.c ****     while(Thread->Ctx.Invstk.Next!=&(Thread->Ctx.Invstk))
5437:../../Source/Kernel/rme_kernel.c ****     {
5438:../../Source/Kernel/rme_kernel.c ****         Invocation=(struct RME_Inv_Struct*)(Thread->Ctx.Invstk.Next);
 13938              		.loc 1 5438 19 is_stmt 1
 13939 0330 14301BE5 		ldr	r3, [fp, #-20]
 13940 0334 4C3093E5 		ldr	r3, [r3, #76]
 13941 0338 18300BE5 		str	r3, [fp, #-24]
5439:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 13942              		.loc 1 5439 9
 13943 033c 18301BE5 		ldr	r3, [fp, #-24]
 13944 0340 042093E5 		ldr	r2, [r3, #4]
 13945 0344 18301BE5 		ldr	r3, [fp, #-24]
 13946 0348 003093E5 		ldr	r3, [r3]
 13947 034c 0310A0E1 		mov	r1, r3
 13948 0350 0200A0E1 		mov	r0, r2
 13949 0354 FEFFFFEB 		bl	_RME_List_Del
5440:../../Source/Kernel/rme_kernel.c ****         Invocation->Thd_Act=0U;
 13950              		.loc 1 5440 28
 13951 0358 18301BE5 		ldr	r3, [fp, #-24]
 13952 035c 0020A0E3 		mov	r2, #0
 13953 0360 0C2083E5 		str	r2, [r3, #12]
5441:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Invstk_Depth--;
 13954              		.loc 1 5441 20
 13955 0364 14301BE5 		ldr	r3, [fp, #-20]
 13956 0368 543093E5 		ldr	r3, [r3, #84]
 13957              		.loc 1 5441 33
 13958 036c 012043E2 		sub	r2, r3, #1
 13959 0370 14301BE5 		ldr	r3, [fp, #-20]
 13960 0374 542083E5 		str	r2, [r3, #84]
 13961              	.L875:
5436:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 343


 13962              		.loc 1 5436 29
 13963 0378 14301BE5 		ldr	r3, [fp, #-20]
 13964 037c 4C2093E5 		ldr	r2, [r3, #76]
5436:../../Source/Kernel/rme_kernel.c ****     {
 13965              		.loc 1 5436 36
 13966 0380 14301BE5 		ldr	r3, [fp, #-20]
 13967 0384 4C3083E2 		add	r3, r3, #76
5436:../../Source/Kernel/rme_kernel.c ****     {
 13968              		.loc 1 5436 34
 13969 0388 030052E1 		cmp	r2, r3
 13970 038c E7FFFF1A 		bne	.L876
5442:../../Source/Kernel/rme_kernel.c ****     }
5443:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thread->Ctx.Invstk_Depth==0U);
 13971              		.loc 1 5443 5
 13972 0390 14301BE5 		ldr	r3, [fp, #-20]
 13973 0394 543093E5 		ldr	r3, [r3, #84]
 13974 0398 000053E3 		cmp	r3, #0
 13975 039c 0800000A 		beq	.L877
 13976              		.loc 1 5443 5 is_stmt 0 discriminator 1
 13977 03a0 003000E3 		movw	r3, #:lower16:.LC6
 13978 03a4 003040E3 		movt	r3, #:upper16:.LC6
 13979 03a8 002000E3 		movw	r2, #:lower16:.LC7
 13980 03ac 002040E3 		movt	r2, #:upper16:.LC7
 13981 03b0 431501E3 		movw	r1, #5443
 13982 03b4 000000E3 		movw	r0, #:lower16:.LC8
 13983 03b8 000040E3 		movt	r0, #:upper16:.LC8
 13984 03bc FEFFFFEB 		bl	RME_Log
 13985              	.L878:
 13986              		.loc 1 5443 5
 13987 03c0 FEFFFFEA 		b	.L878
 13988              	.L877:
5444:../../Source/Kernel/rme_kernel.c ****     
5445:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
5446:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Thread->Sched.Prc->Head.Root_Ref), -1);
 13989              		.loc 1 5446 5 is_stmt 1
 13990 03c4 14301BE5 		ldr	r3, [fp, #-20]
 13991 03c8 2C3093E5 		ldr	r3, [r3, #44]
 13992 03cc 043083E2 		add	r3, r3, #4
 13993 03d0 0010E0E3 		mvn	r1, #0
 13994 03d4 0300A0E1 		mov	r0, r3
 13995 03d8 FEFFFFEB 		bl	_RME_Fetch_Add_Single
5447:../../Source/Kernel/rme_kernel.c ****     
5448:../../Source/Kernel/rme_kernel.c ****     /* Try to depopulate the area - this must be successful */
5449:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)==0U)
 13996              		.loc 1 5449 20
 13997 03dc 14301BE5 		ldr	r3, [fp, #-20]
 13998 03e0 443093E5 		ldr	r3, [r3, #68]
 13999              		.loc 1 5449 7
 14000 03e4 000053E3 		cmp	r3, #0
 14001 03e8 0F0000BA 		blt	.L879
5450:../../Source/Kernel/rme_kernel.c ****     {
5451:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5452:../../Source/Kernel/rme_kernel.c **** 
5453:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 14002              		.loc 1 5453 9
 14003 03ec 14301BE5 		ldr	r3, [fp, #-20]
 14004 03f0 9C10A0E3 		mov	r1, #156
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 344


 14005 03f4 0300A0E1 		mov	r0, r3
 14006 03f8 FEFFFFEB 		bl	_RME_Kot_Erase
 14007 03fc 0030A0E1 		mov	r3, r0
 14008              		.loc 1 5453 9 is_stmt 0 discriminator 1
 14009 0400 000053E3 		cmp	r3, #0
 14010 0404 1800000A 		beq	.L880
 14011 0408 003000E3 		movw	r3, #:lower16:.LC6
 14012 040c 003040E3 		movt	r3, #:upper16:.LC6
 14013 0410 002000E3 		movw	r2, #:lower16:.LC7
 14014 0414 002040E3 		movt	r2, #:upper16:.LC7
 14015 0418 4D1501E3 		movw	r1, #5453
 14016 041c 000000E3 		movw	r0, #:lower16:.LC8
 14017 0420 000040E3 		movt	r0, #:upper16:.LC8
 14018 0424 FEFFFFEB 		bl	RME_Log
 14019              	.L881:
 14020              		.loc 1 5453 9
 14021 0428 FEFFFFEA 		b	.L881
 14022              	.L879:
5454:../../Source/Kernel/rme_kernel.c ****                                   RME_THD_SIZE(Thread->Ctx.Hyp_Attr))==0);
5455:../../Source/Kernel/rme_kernel.c ****     }
5456:../../Source/Kernel/rme_kernel.c ****     else
5457:../../Source/Kernel/rme_kernel.c ****     {
5458:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5459:../../Source/Kernel/rme_kernel.c **** 
5460:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Thread,
 14023              		.loc 1 5460 9 is_stmt 1
 14024 042c 14301BE5 		ldr	r3, [fp, #-20]
 14025 0430 5810A0E3 		mov	r1, #88
 14026 0434 0300A0E1 		mov	r0, r3
 14027 0438 FEFFFFEB 		bl	_RME_Kot_Erase
 14028 043c 0030A0E1 		mov	r3, r0
 14029              		.loc 1 5460 9 is_stmt 0 discriminator 1
 14030 0440 000053E3 		cmp	r3, #0
 14031 0444 0800000A 		beq	.L880
 14032 0448 003000E3 		movw	r3, #:lower16:.LC6
 14033 044c 003040E3 		movt	r3, #:upper16:.LC6
 14034 0450 002000E3 		movw	r2, #:lower16:.LC7
 14035 0454 002040E3 		movt	r2, #:upper16:.LC7
 14036 0458 541501E3 		movw	r1, #5460
 14037 045c 000000E3 		movw	r0, #:lower16:.LC8
 14038 0460 000040E3 		movt	r0, #:upper16:.LC8
 14039 0464 FEFFFFEB 		bl	RME_Log
 14040              	.L882:
 14041              		.loc 1 5460 9
 14042 0468 FEFFFFEA 		b	.L882
 14043              	.L880:
5461:../../Source/Kernel/rme_kernel.c ****                    RME_HYP_SIZE)==0);
5462:../../Source/Kernel/rme_kernel.c ****     }
5463:../../Source/Kernel/rme_kernel.c ****     
5464:../../Source/Kernel/rme_kernel.c ****     return 0;
 14044              		.loc 1 5464 12 is_stmt 1
 14045 046c 0030A0E3 		mov	r3, #0
 14046              	.L856:
5465:../../Source/Kernel/rme_kernel.c **** }
 14047              		.loc 1 5465 1
 14048 0470 0300A0E1 		mov	r0, r3
 14049 0474 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 345


 14050              		.cfi_def_cfa 13, 8
 14051              		@ sp needed
 14052 0478 0088BDE8 		pop	{fp, pc}
 14053              		.cfi_endproc
 14054              	.LFE57:
 14056              		.section	.rodata
 14057              		.align	2
 14058              	.LC36:
 14059 0304 0D0A4361 		.ascii	"\015\012Cap_Thd_Sched \000"
 14059      705F5468 
 14059      645F5363 
 14059      68656420 
 14059      00
 14060 0315 000000   		.align	2
 14061              	.LC37:
 14062 0318 0D0A4361 		.ascii	"\015\012Cap_Sig \000"
 14062      705F5369 
 14062      672000
 14063 0323 00       		.align	2
 14064              	.LC38:
 14065 0324 0D0A5449 		.ascii	"\015\012TID \000"
 14065      442000
 14066 032b 00       		.align	2
 14067              	.LC39:
 14068 032c 0D0A5072 		.ascii	"\015\012Prio \000"
 14068      696F2000 
 14069              		.align	2
 14070              	.LC40:
 14071 0334 0D0A4861 		.ascii	"\015\012Haddr \000"
 14071      64647220 
 14071      00
 14072 033d 000000   		.align	2
 14073              	.LC41:
 14074 0340 0D0A7265 		.ascii	"\015\012reach 5\000"
 14074      61636820 
 14074      3500
 14075              		.section	.text._RME_Thd_Sched_Bind,"ax",%progbits
 14076              		.align	2
 14077              		.syntax unified
 14078              		.arm
 14080              	_RME_Thd_Sched_Bind:
 14081              	.LFB58:
5466:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Del *************************************************/
5467:../../Source/Kernel/rme_kernel.c **** 
5468:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Bind ***********************************************
5469:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's priority level, and its scheduler thread. When
5470:../../Source/Kernel/rme_kernel.c ****               there are any state changes on this thread, a notification will
5471:../../Source/Kernel/rme_kernel.c ****               be sent to its scheduler thread. If the state of the thread
5472:../../Source/Kernel/rme_kernel.c ****               changes for multiple times, then only the most recent state will
5473:../../Source/Kernel/rme_kernel.c ****               be reflected in the scheduler's receive queue.
5474:../../Source/Kernel/rme_kernel.c ****               The scheduler and the threads that it schedule must be on the
5475:../../Source/Kernel/rme_kernel.c ****               same core. When a thread wants to go from one core to another,
5476:../../Source/Kernel/rme_kernel.c ****               it must be freed from that core first. 
5477:../../Source/Kernel/rme_kernel.c ****               This must be called on the same core with the Cap_Thd_Sched, and
5478:../../Source/Kernel/rme_kernel.c ****               the Cap_Thd itself must be free.
5479:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
5480:../../Source/Kernel/rme_kernel.c ****               priority.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 346


5481:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5482:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5483:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5484:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Sched - The scheduler thread.
5485:../../Source/Kernel/rme_kernel.c ****                                         2-Level.
5486:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The signal endpoint for scheduler
5487:../../Source/Kernel/rme_kernel.c ****                                   notifications. This signal endpoint will be
5488:../../Source/Kernel/rme_kernel.c ****                                   sent to whenever this thread has a fault, or
5489:../../Source/Kernel/rme_kernel.c ****                                   timeouts. This is purely optional; if it is
5490:../../Source/Kernel/rme_kernel.c ****                                   not needed, pass in RME_CID_NULL.
5491:../../Source/Kernel/rme_kernel.c ****               rme_tid_t TID - The thread ID. This is user-supplied, and the
5492:../../Source/Kernel/rme_kernel.c ****                               kernel will not check whether there are two
5493:../../Source/Kernel/rme_kernel.c ****                               threads that have the same TID.
5494:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio - The priority level, higher is more critical.
5495:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Haddr - The kernel-accessible virtual memory address
5496:../../Source/Kernel/rme_kernel.c ****                                 for this thread's register sets, only used by
5497:../../Source/Kernel/rme_kernel.c ****                                 hypervisor-managed threads. For other threads,
5498:../../Source/Kernel/rme_kernel.c ****                                 please pass in NULL instead.
5499:../../Source/Kernel/rme_kernel.c **** Output      : None.
5500:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5501:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5502:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Bind(struct RME_Cap_Cpt* Cpt,
5503:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd,
5504:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd_Sched,
5505:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Sig,
5506:../../Source/Kernel/rme_kernel.c ****                                      rme_tid_t TID,
5507:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio,
5508:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Haddr)
5509:../../Source/Kernel/rme_kernel.c **** {
 14082              		.loc 1 5509 1
 14083              		.cfi_startproc
 14084              		@ args = 12, pretend = 0, frame = 56
 14085              		@ frame_needed = 1, uses_anonymous_args = 0
 14086 0000 00482DE9 		push	{fp, lr}
 14087              		.cfi_def_cfa_offset 8
 14088              		.cfi_offset 11, -8
 14089              		.cfi_offset 14, -4
 14090 0004 04B08DE2 		add	fp, sp, #4
 14091              		.cfi_def_cfa 11, 4
 14092 0008 38D04DE2 		sub	sp, sp, #56
 14093 000c 30000BE5 		str	r0, [fp, #-48]
 14094 0010 34100BE5 		str	r1, [fp, #-52]
 14095 0014 38200BE5 		str	r2, [fp, #-56]
 14096 0018 3C300BE5 		str	r3, [fp, #-60]
5510:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5511:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Sched;
5512:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
5513:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5514:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
5515:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_Old;
5516:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local_New;
5517:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5518:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Hyp_Attr;
5519:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t End;
5520:../../Source/Kernel/rme_kernel.c **** 
5521:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCpt addr ");
 14097              		.loc 1 5521 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 347


 14098 001c 000000E3 		movw	r0, #:lower16:.LC23
 14099 0020 000040E3 		movt	r0, #:upper16:.LC23
 14100 0024 FEFFFFEB 		bl	RME_Str_Print
5522:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H((rme_ptr_t)Cpt);
 14101              		.loc 1 5522 5
 14102 0028 30301BE5 		ldr	r3, [fp, #-48]
 14103 002c 0300A0E1 		mov	r0, r3
 14104 0030 FEFFFFEB 		bl	RME_Hex_Print
5523:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd ");
 14105              		.loc 1 5523 5
 14106 0034 000000E3 		movw	r0, #:lower16:.LC26
 14107 0038 000040E3 		movt	r0, #:upper16:.LC26
 14108 003c FEFFFFEB 		bl	RME_Str_Print
5524:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
 14109              		.loc 1 5524 5
 14110 0040 34301BE5 		ldr	r3, [fp, #-52]
 14111 0044 0300A0E1 		mov	r0, r3
 14112 0048 FEFFFFEB 		bl	RME_Hex_Print
5525:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd_Sched ");
 14113              		.loc 1 5525 5
 14114 004c 000000E3 		movw	r0, #:lower16:.LC36
 14115 0050 000040E3 		movt	r0, #:upper16:.LC36
 14116 0054 FEFFFFEB 		bl	RME_Str_Print
5526:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd_Sched);
 14117              		.loc 1 5526 5
 14118 0058 38301BE5 		ldr	r3, [fp, #-56]
 14119 005c 0300A0E1 		mov	r0, r3
 14120 0060 FEFFFFEB 		bl	RME_Hex_Print
5527:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Sig ");
 14121              		.loc 1 5527 5
 14122 0064 000000E3 		movw	r0, #:lower16:.LC37
 14123 0068 000040E3 		movt	r0, #:upper16:.LC37
 14124 006c FEFFFFEB 		bl	RME_Str_Print
5528:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Sig);
 14125              		.loc 1 5528 5
 14126 0070 3C301BE5 		ldr	r3, [fp, #-60]
 14127 0074 0300A0E1 		mov	r0, r3
 14128 0078 FEFFFFEB 		bl	RME_Hex_Print
5529:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nTID ");
 14129              		.loc 1 5529 5
 14130 007c 000000E3 		movw	r0, #:lower16:.LC38
 14131 0080 000040E3 		movt	r0, #:upper16:.LC38
 14132 0084 FEFFFFEB 		bl	RME_Str_Print
5530:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(TID);
 14133              		.loc 1 5530 5
 14134 0088 04309BE5 		ldr	r3, [fp, #4]
 14135 008c 0300A0E1 		mov	r0, r3
 14136 0090 FEFFFFEB 		bl	RME_Hex_Print
5531:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nPrio ");
 14137              		.loc 1 5531 5
 14138 0094 000000E3 		movw	r0, #:lower16:.LC39
 14139 0098 000040E3 		movt	r0, #:upper16:.LC39
 14140 009c FEFFFFEB 		bl	RME_Str_Print
5532:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Prio);
 14141              		.loc 1 5532 5
 14142 00a0 08009BE5 		ldr	r0, [fp, #8]
 14143 00a4 FEFFFFEB 		bl	RME_Hex_Print
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 348


5533:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nHaddr ");
 14144              		.loc 1 5533 5
 14145 00a8 000000E3 		movw	r0, #:lower16:.LC40
 14146 00ac 000040E3 		movt	r0, #:upper16:.LC40
 14147 00b0 FEFFFFEB 		bl	RME_Str_Print
5534:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Haddr);
 14148              		.loc 1 5534 5
 14149 00b4 0C009BE5 		ldr	r0, [fp, #12]
 14150 00b8 FEFFFFEB 		bl	RME_Hex_Print
5535:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nRME_CID_NULL ");
5536:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_I(RME_CID_NULL);
5537:../../Source/Kernel/rme_kernel.c **** 
5538:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5539:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14151              		.loc 1 5539 5
 14152 00bc 34301BE5 		ldr	r3, [fp, #-52]
 14153 00c0 803003E2 		and	r3, r3, #128
 14154 00c4 000053E3 		cmp	r3, #0
 14155 00c8 1C00001A 		bne	.L884
 14156              		.loc 1 5539 5 is_stmt 0 discriminator 1
 14157 00cc 30301BE5 		ldr	r3, [fp, #-48]
 14158 00d0 142093E5 		ldr	r2, [r3, #20]
 14159 00d4 34301BE5 		ldr	r3, [fp, #-52]
 14160 00d8 030052E1 		cmp	r2, r3
 14161 00dc 0100008A 		bhi	.L885
 14162              		.loc 1 5539 5 discriminator 3
 14163 00e0 0230E0E3 		mvn	r3, #2
 14164              		.loc 1 5539 5
 14165 00e4 D90100EA 		b	.L886
 14166              	.L885:
 14167              		.loc 1 5539 5 discriminator 4
 14168 00e8 34301BE5 		ldr	r3, [fp, #-52]
 14169 00ec 8322A0E1 		lsl	r2, r3, #5
 14170 00f0 30301BE5 		ldr	r3, [fp, #-48]
 14171 00f4 0C3093E5 		ldr	r3, [r3, #12]
 14172 00f8 033082E0 		add	r3, r2, r3
 14173 00fc 08300BE5 		str	r3, [fp, #-8]
 14174 0100 08301BE5 		ldr	r3, [fp, #-8]
 14175 0104 0300A0E1 		mov	r0, r3
 14176 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14177 010c 14000BE5 		str	r0, [fp, #-20]
 14178              		.loc 1 5539 5 discriminator 1
 14179 0110 14301BE5 		ldr	r3, [fp, #-20]
 14180 0114 FF3803E2 		and	r3, r3, #16711680
 14181 0118 020853E3 		cmp	r3, #131072
 14182 011c 0100001A 		bne	.L887
 14183              		.loc 1 5539 5 discriminator 5
 14184 0120 0830E0E3 		mvn	r3, #8
 14185              		.loc 1 5539 5
 14186 0124 C90100EA 		b	.L886
 14187              	.L887:
 14188              		.loc 1 5539 5 discriminator 6
 14189 0128 14301BE5 		ldr	r3, [fp, #-20]
 14190 012c 233CA0E1 		lsr	r3, r3, #24
 14191 0130 060053E3 		cmp	r3, #6
 14192 0134 3F00000A 		beq	.L888
 14193              		.loc 1 5539 5 discriminator 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 349


 14194 0138 0130E0E3 		mvn	r3, #1
 14195              		.loc 1 5539 5
 14196 013c C30100EA 		b	.L886
 14197              	.L884:
 14198              		.loc 1 5539 5 discriminator 2
 14199 0140 34301BE5 		ldr	r3, [fp, #-52]
 14200 0144 2324A0E1 		lsr	r2, r3, #8
 14201 0148 30301BE5 		ldr	r3, [fp, #-48]
 14202 014c 143093E5 		ldr	r3, [r3, #20]
 14203 0150 030052E1 		cmp	r2, r3
 14204 0154 0100003A 		bcc	.L889
 14205              		.loc 1 5539 5 discriminator 8
 14206 0158 0230E0E3 		mvn	r3, #2
 14207              		.loc 1 5539 5
 14208 015c BB0100EA 		b	.L886
 14209              	.L889:
 14210              		.loc 1 5539 5 discriminator 9
 14211 0160 34301BE5 		ldr	r3, [fp, #-52]
 14212 0164 2334A0E1 		lsr	r3, r3, #8
 14213 0168 8322A0E1 		lsl	r2, r3, #5
 14214 016c 30301BE5 		ldr	r3, [fp, #-48]
 14215 0170 0C3093E5 		ldr	r3, [r3, #12]
 14216 0174 033082E0 		add	r3, r2, r3
 14217 0178 08300BE5 		str	r3, [fp, #-8]
 14218 017c 08301BE5 		ldr	r3, [fp, #-8]
 14219 0180 0300A0E1 		mov	r0, r3
 14220 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14221 0188 14000BE5 		str	r0, [fp, #-20]
 14222              		.loc 1 5539 5 discriminator 1
 14223 018c 14301BE5 		ldr	r3, [fp, #-20]
 14224 0190 FF3803E2 		and	r3, r3, #16711680
 14225 0194 020853E3 		cmp	r3, #131072
 14226 0198 0100001A 		bne	.L890
 14227              		.loc 1 5539 5 discriminator 10
 14228 019c 0830E0E3 		mvn	r3, #8
 14229              		.loc 1 5539 5
 14230 01a0 AA0100EA 		b	.L886
 14231              	.L890:
 14232              		.loc 1 5539 5 discriminator 11
 14233 01a4 14301BE5 		ldr	r3, [fp, #-20]
 14234 01a8 233CA0E1 		lsr	r3, r3, #24
 14235 01ac 030053E3 		cmp	r3, #3
 14236 01b0 0100000A 		beq	.L891
 14237              		.loc 1 5539 5 discriminator 12
 14238 01b4 0130E0E3 		mvn	r3, #1
 14239              		.loc 1 5539 5
 14240 01b8 A40100EA 		b	.L886
 14241              	.L891:
 14242              		.loc 1 5539 5 discriminator 13
 14243 01bc 34301BE5 		ldr	r3, [fp, #-52]
 14244 01c0 7F2003E2 		and	r2, r3, #127
 14245 01c4 08301BE5 		ldr	r3, [fp, #-8]
 14246 01c8 143093E5 		ldr	r3, [r3, #20]
 14247 01cc 030052E1 		cmp	r2, r3
 14248 01d0 0100003A 		bcc	.L892
 14249              		.loc 1 5539 5 discriminator 14
 14250 01d4 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 350


 14251              		.loc 1 5539 5
 14252 01d8 9C0100EA 		b	.L886
 14253              	.L892:
 14254              		.loc 1 5539 5 discriminator 15
 14255 01dc 34301BE5 		ldr	r3, [fp, #-52]
 14256 01e0 7F3003E2 		and	r3, r3, #127
 14257 01e4 8322A0E1 		lsl	r2, r3, #5
 14258 01e8 08301BE5 		ldr	r3, [fp, #-8]
 14259 01ec 0C3093E5 		ldr	r3, [r3, #12]
 14260 01f0 033082E0 		add	r3, r2, r3
 14261 01f4 08300BE5 		str	r3, [fp, #-8]
 14262 01f8 08301BE5 		ldr	r3, [fp, #-8]
 14263 01fc 0300A0E1 		mov	r0, r3
 14264 0200 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14265 0204 14000BE5 		str	r0, [fp, #-20]
 14266              		.loc 1 5539 5 discriminator 1
 14267 0208 14301BE5 		ldr	r3, [fp, #-20]
 14268 020c FF3803E2 		and	r3, r3, #16711680
 14269 0210 020853E3 		cmp	r3, #131072
 14270 0214 0100001A 		bne	.L893
 14271              		.loc 1 5539 5 discriminator 16
 14272 0218 0830E0E3 		mvn	r3, #8
 14273              		.loc 1 5539 5
 14274 021c 8B0100EA 		b	.L886
 14275              	.L893:
 14276              		.loc 1 5539 5 discriminator 17
 14277 0220 14301BE5 		ldr	r3, [fp, #-20]
 14278 0224 233CA0E1 		lsr	r3, r3, #24
 14279 0228 060053E3 		cmp	r3, #6
 14280 022c 0100000A 		beq	.L888
 14281              		.loc 1 5539 5 discriminator 18
 14282 0230 0130E0E3 		mvn	r3, #1
 14283              		.loc 1 5539 5
 14284 0234 850100EA 		b	.L886
 14285              	.L888:
5540:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5541:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 1");
5542:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Sched,RME_CAP_TYPE_THD,
 14286              		.loc 1 5542 5 is_stmt 1
 14287 0238 38301BE5 		ldr	r3, [fp, #-56]
 14288 023c 803003E2 		and	r3, r3, #128
 14289 0240 000053E3 		cmp	r3, #0
 14290 0244 1C00001A 		bne	.L894
 14291              		.loc 1 5542 5 is_stmt 0 discriminator 1
 14292 0248 30301BE5 		ldr	r3, [fp, #-48]
 14293 024c 142093E5 		ldr	r2, [r3, #20]
 14294 0250 38301BE5 		ldr	r3, [fp, #-56]
 14295 0254 030052E1 		cmp	r2, r3
 14296 0258 0100008A 		bhi	.L895
 14297              		.loc 1 5542 5 discriminator 3
 14298 025c 0230E0E3 		mvn	r3, #2
 14299              		.loc 1 5542 5
 14300 0260 7A0100EA 		b	.L886
 14301              	.L895:
 14302              		.loc 1 5542 5 discriminator 4
 14303 0264 38301BE5 		ldr	r3, [fp, #-56]
 14304 0268 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 351


 14305 026c 30301BE5 		ldr	r3, [fp, #-48]
 14306 0270 0C3093E5 		ldr	r3, [r3, #12]
 14307 0274 033082E0 		add	r3, r2, r3
 14308 0278 0C300BE5 		str	r3, [fp, #-12]
 14309 027c 0C301BE5 		ldr	r3, [fp, #-12]
 14310 0280 0300A0E1 		mov	r0, r3
 14311 0284 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14312 0288 14000BE5 		str	r0, [fp, #-20]
 14313              		.loc 1 5542 5 discriminator 1
 14314 028c 14301BE5 		ldr	r3, [fp, #-20]
 14315 0290 FF3803E2 		and	r3, r3, #16711680
 14316 0294 020853E3 		cmp	r3, #131072
 14317 0298 0100001A 		bne	.L896
 14318              		.loc 1 5542 5 discriminator 5
 14319 029c 0830E0E3 		mvn	r3, #8
 14320              		.loc 1 5542 5
 14321 02a0 6A0100EA 		b	.L886
 14322              	.L896:
 14323              		.loc 1 5542 5 discriminator 6
 14324 02a4 14301BE5 		ldr	r3, [fp, #-20]
 14325 02a8 233CA0E1 		lsr	r3, r3, #24
 14326 02ac 060053E3 		cmp	r3, #6
 14327 02b0 3F00000A 		beq	.L897
 14328              		.loc 1 5542 5 discriminator 7
 14329 02b4 0130E0E3 		mvn	r3, #1
 14330              		.loc 1 5542 5
 14331 02b8 640100EA 		b	.L886
 14332              	.L894:
 14333              		.loc 1 5542 5 discriminator 2
 14334 02bc 38301BE5 		ldr	r3, [fp, #-56]
 14335 02c0 2324A0E1 		lsr	r2, r3, #8
 14336 02c4 30301BE5 		ldr	r3, [fp, #-48]
 14337 02c8 143093E5 		ldr	r3, [r3, #20]
 14338 02cc 030052E1 		cmp	r2, r3
 14339 02d0 0100003A 		bcc	.L898
 14340              		.loc 1 5542 5 discriminator 8
 14341 02d4 0230E0E3 		mvn	r3, #2
 14342              		.loc 1 5542 5
 14343 02d8 5C0100EA 		b	.L886
 14344              	.L898:
 14345              		.loc 1 5542 5 discriminator 9
 14346 02dc 38301BE5 		ldr	r3, [fp, #-56]
 14347 02e0 2334A0E1 		lsr	r3, r3, #8
 14348 02e4 8322A0E1 		lsl	r2, r3, #5
 14349 02e8 30301BE5 		ldr	r3, [fp, #-48]
 14350 02ec 0C3093E5 		ldr	r3, [r3, #12]
 14351 02f0 033082E0 		add	r3, r2, r3
 14352 02f4 0C300BE5 		str	r3, [fp, #-12]
 14353 02f8 0C301BE5 		ldr	r3, [fp, #-12]
 14354 02fc 0300A0E1 		mov	r0, r3
 14355 0300 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14356 0304 14000BE5 		str	r0, [fp, #-20]
 14357              		.loc 1 5542 5 discriminator 1
 14358 0308 14301BE5 		ldr	r3, [fp, #-20]
 14359 030c FF3803E2 		and	r3, r3, #16711680
 14360 0310 020853E3 		cmp	r3, #131072
 14361 0314 0100001A 		bne	.L899
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 352


 14362              		.loc 1 5542 5 discriminator 10
 14363 0318 0830E0E3 		mvn	r3, #8
 14364              		.loc 1 5542 5
 14365 031c 4B0100EA 		b	.L886
 14366              	.L899:
 14367              		.loc 1 5542 5 discriminator 11
 14368 0320 14301BE5 		ldr	r3, [fp, #-20]
 14369 0324 233CA0E1 		lsr	r3, r3, #24
 14370 0328 030053E3 		cmp	r3, #3
 14371 032c 0100000A 		beq	.L900
 14372              		.loc 1 5542 5 discriminator 12
 14373 0330 0130E0E3 		mvn	r3, #1
 14374              		.loc 1 5542 5
 14375 0334 450100EA 		b	.L886
 14376              	.L900:
 14377              		.loc 1 5542 5 discriminator 13
 14378 0338 38301BE5 		ldr	r3, [fp, #-56]
 14379 033c 7F2003E2 		and	r2, r3, #127
 14380 0340 0C301BE5 		ldr	r3, [fp, #-12]
 14381 0344 143093E5 		ldr	r3, [r3, #20]
 14382 0348 030052E1 		cmp	r2, r3
 14383 034c 0100003A 		bcc	.L901
 14384              		.loc 1 5542 5 discriminator 14
 14385 0350 0230E0E3 		mvn	r3, #2
 14386              		.loc 1 5542 5
 14387 0354 3D0100EA 		b	.L886
 14388              	.L901:
 14389              		.loc 1 5542 5 discriminator 15
 14390 0358 38301BE5 		ldr	r3, [fp, #-56]
 14391 035c 7F3003E2 		and	r3, r3, #127
 14392 0360 8322A0E1 		lsl	r2, r3, #5
 14393 0364 0C301BE5 		ldr	r3, [fp, #-12]
 14394 0368 0C3093E5 		ldr	r3, [r3, #12]
 14395 036c 033082E0 		add	r3, r2, r3
 14396 0370 0C300BE5 		str	r3, [fp, #-12]
 14397 0374 0C301BE5 		ldr	r3, [fp, #-12]
 14398 0378 0300A0E1 		mov	r0, r3
 14399 037c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14400 0380 14000BE5 		str	r0, [fp, #-20]
 14401              		.loc 1 5542 5 discriminator 1
 14402 0384 14301BE5 		ldr	r3, [fp, #-20]
 14403 0388 FF3803E2 		and	r3, r3, #16711680
 14404 038c 020853E3 		cmp	r3, #131072
 14405 0390 0100001A 		bne	.L902
 14406              		.loc 1 5542 5 discriminator 16
 14407 0394 0830E0E3 		mvn	r3, #8
 14408              		.loc 1 5542 5
 14409 0398 2C0100EA 		b	.L886
 14410              	.L902:
 14411              		.loc 1 5542 5 discriminator 17
 14412 039c 14301BE5 		ldr	r3, [fp, #-20]
 14413 03a0 233CA0E1 		lsr	r3, r3, #24
 14414 03a4 060053E3 		cmp	r3, #6
 14415 03a8 0100000A 		beq	.L897
 14416              		.loc 1 5542 5 discriminator 18
 14417 03ac 0130E0E3 		mvn	r3, #1
 14418              		.loc 1 5542 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 353


 14419 03b0 260100EA 		b	.L886
 14420              	.L897:
5543:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Sched,Type_Stat);
5544:../../Source/Kernel/rme_kernel.c ****                    //RME_DBG_S("\r\nreach 2");
5545:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5546:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_CHILD);
 14421              		.loc 1 5546 5 is_stmt 1
 14422 03b4 08301BE5 		ldr	r3, [fp, #-8]
 14423 03b8 083093E5 		ldr	r3, [r3, #8]
 14424 03bc 023003E2 		and	r3, r3, #2
 14425 03c0 000053E3 		cmp	r3, #0
 14426 03c4 0100001A 		bne	.L903
 14427              		.loc 1 5546 5 is_stmt 0 discriminator 1
 14428 03c8 0630E0E3 		mvn	r3, #6
 14429              		.loc 1 5546 5
 14430 03cc 1F0100EA 		b	.L886
 14431              	.L903:
5547:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 3");
5548:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Sched,RME_THD_FLAG_SCHED_PARENT);
 14432              		.loc 1 5548 5 is_stmt 1
 14433 03d0 0C301BE5 		ldr	r3, [fp, #-12]
 14434 03d4 083093E5 		ldr	r3, [r3, #8]
 14435 03d8 043003E2 		and	r3, r3, #4
 14436 03dc 000053E3 		cmp	r3, #0
 14437 03e0 0100001A 		bne	.L904
 14438              		.loc 1 5548 5 is_stmt 0 discriminator 1
 14439 03e4 0630E0E3 		mvn	r3, #6
 14440              		.loc 1 5548 5
 14441 03e8 180100EA 		b	.L886
 14442              	.L904:
5549:../../Source/Kernel/rme_kernel.c ****     //RME_DBG_S("\r\nreach 4");
5550:../../Source/Kernel/rme_kernel.c ****     
5551:../../Source/Kernel/rme_kernel.c ****     /* Check if we need the signal endpoint for this operation */
5552:../../Source/Kernel/rme_kernel.c ****     if(Cap_Sig!=RME_CID_NULL)
 14443              		.loc 1 5552 7 is_stmt 1
 14444 03ec 3C301BE5 		ldr	r3, [fp, #-60]
 14445 03f0 020953E3 		cmp	r3, #32768
 14446 03f4 6500000A 		beq	.L905
5553:../../Source/Kernel/rme_kernel.c ****     {
5554:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5555:../../Source/Kernel/rme_kernel.c **** 
5556:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 14447              		.loc 1 5556 9
 14448 03f8 3C301BE5 		ldr	r3, [fp, #-60]
 14449 03fc 803003E2 		and	r3, r3, #128
 14450 0400 000053E3 		cmp	r3, #0
 14451 0404 1C00001A 		bne	.L906
 14452              		.loc 1 5556 9 is_stmt 0 discriminator 1
 14453 0408 30301BE5 		ldr	r3, [fp, #-48]
 14454 040c 142093E5 		ldr	r2, [r3, #20]
 14455 0410 3C301BE5 		ldr	r3, [fp, #-60]
 14456 0414 030052E1 		cmp	r2, r3
 14457 0418 0100008A 		bhi	.L907
 14458              		.loc 1 5556 9 discriminator 3
 14459 041c 0230E0E3 		mvn	r3, #2
 14460              		.loc 1 5556 9
 14461 0420 0A0100EA 		b	.L886
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 354


 14462              	.L907:
 14463              		.loc 1 5556 9 discriminator 4
 14464 0424 3C301BE5 		ldr	r3, [fp, #-60]
 14465 0428 8322A0E1 		lsl	r2, r3, #5
 14466 042c 30301BE5 		ldr	r3, [fp, #-48]
 14467 0430 0C3093E5 		ldr	r3, [r3, #12]
 14468 0434 033082E0 		add	r3, r2, r3
 14469 0438 10300BE5 		str	r3, [fp, #-16]
 14470 043c 10301BE5 		ldr	r3, [fp, #-16]
 14471 0440 0300A0E1 		mov	r0, r3
 14472 0444 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14473 0448 14000BE5 		str	r0, [fp, #-20]
 14474              		.loc 1 5556 9 discriminator 1
 14475 044c 14301BE5 		ldr	r3, [fp, #-20]
 14476 0450 FF3803E2 		and	r3, r3, #16711680
 14477 0454 020853E3 		cmp	r3, #131072
 14478 0458 0100001A 		bne	.L908
 14479              		.loc 1 5556 9 discriminator 5
 14480 045c 0830E0E3 		mvn	r3, #8
 14481              		.loc 1 5556 9
 14482 0460 FA0000EA 		b	.L886
 14483              	.L908:
 14484              		.loc 1 5556 9 discriminator 6
 14485 0464 14301BE5 		ldr	r3, [fp, #-20]
 14486 0468 233CA0E1 		lsr	r3, r3, #24
 14487 046c 080053E3 		cmp	r3, #8
 14488 0470 3F00000A 		beq	.L909
 14489              		.loc 1 5556 9 discriminator 7
 14490 0474 0130E0E3 		mvn	r3, #1
 14491              		.loc 1 5556 9
 14492 0478 F40000EA 		b	.L886
 14493              	.L906:
 14494              		.loc 1 5556 9 discriminator 2
 14495 047c 3C301BE5 		ldr	r3, [fp, #-60]
 14496 0480 2324A0E1 		lsr	r2, r3, #8
 14497 0484 30301BE5 		ldr	r3, [fp, #-48]
 14498 0488 143093E5 		ldr	r3, [r3, #20]
 14499 048c 030052E1 		cmp	r2, r3
 14500 0490 0100003A 		bcc	.L910
 14501              		.loc 1 5556 9 discriminator 8
 14502 0494 0230E0E3 		mvn	r3, #2
 14503              		.loc 1 5556 9
 14504 0498 EC0000EA 		b	.L886
 14505              	.L910:
 14506              		.loc 1 5556 9 discriminator 9
 14507 049c 3C301BE5 		ldr	r3, [fp, #-60]
 14508 04a0 2334A0E1 		lsr	r3, r3, #8
 14509 04a4 8322A0E1 		lsl	r2, r3, #5
 14510 04a8 30301BE5 		ldr	r3, [fp, #-48]
 14511 04ac 0C3093E5 		ldr	r3, [r3, #12]
 14512 04b0 033082E0 		add	r3, r2, r3
 14513 04b4 10300BE5 		str	r3, [fp, #-16]
 14514 04b8 10301BE5 		ldr	r3, [fp, #-16]
 14515 04bc 0300A0E1 		mov	r0, r3
 14516 04c0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14517 04c4 14000BE5 		str	r0, [fp, #-20]
 14518              		.loc 1 5556 9 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 355


 14519 04c8 14301BE5 		ldr	r3, [fp, #-20]
 14520 04cc FF3803E2 		and	r3, r3, #16711680
 14521 04d0 020853E3 		cmp	r3, #131072
 14522 04d4 0100001A 		bne	.L911
 14523              		.loc 1 5556 9 discriminator 10
 14524 04d8 0830E0E3 		mvn	r3, #8
 14525              		.loc 1 5556 9
 14526 04dc DB0000EA 		b	.L886
 14527              	.L911:
 14528              		.loc 1 5556 9 discriminator 11
 14529 04e0 14301BE5 		ldr	r3, [fp, #-20]
 14530 04e4 233CA0E1 		lsr	r3, r3, #24
 14531 04e8 030053E3 		cmp	r3, #3
 14532 04ec 0100000A 		beq	.L912
 14533              		.loc 1 5556 9 discriminator 12
 14534 04f0 0130E0E3 		mvn	r3, #1
 14535              		.loc 1 5556 9
 14536 04f4 D50000EA 		b	.L886
 14537              	.L912:
 14538              		.loc 1 5556 9 discriminator 13
 14539 04f8 3C301BE5 		ldr	r3, [fp, #-60]
 14540 04fc 7F2003E2 		and	r2, r3, #127
 14541 0500 10301BE5 		ldr	r3, [fp, #-16]
 14542 0504 143093E5 		ldr	r3, [r3, #20]
 14543 0508 030052E1 		cmp	r2, r3
 14544 050c 0100003A 		bcc	.L913
 14545              		.loc 1 5556 9 discriminator 14
 14546 0510 0230E0E3 		mvn	r3, #2
 14547              		.loc 1 5556 9
 14548 0514 CD0000EA 		b	.L886
 14549              	.L913:
 14550              		.loc 1 5556 9 discriminator 15
 14551 0518 3C301BE5 		ldr	r3, [fp, #-60]
 14552 051c 7F3003E2 		and	r3, r3, #127
 14553 0520 8322A0E1 		lsl	r2, r3, #5
 14554 0524 10301BE5 		ldr	r3, [fp, #-16]
 14555 0528 0C3093E5 		ldr	r3, [r3, #12]
 14556 052c 033082E0 		add	r3, r2, r3
 14557 0530 10300BE5 		str	r3, [fp, #-16]
 14558 0534 10301BE5 		ldr	r3, [fp, #-16]
 14559 0538 0300A0E1 		mov	r0, r3
 14560 053c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14561 0540 14000BE5 		str	r0, [fp, #-20]
 14562              		.loc 1 5556 9 discriminator 1
 14563 0544 14301BE5 		ldr	r3, [fp, #-20]
 14564 0548 FF3803E2 		and	r3, r3, #16711680
 14565 054c 020853E3 		cmp	r3, #131072
 14566 0550 0100001A 		bne	.L914
 14567              		.loc 1 5556 9 discriminator 16
 14568 0554 0830E0E3 		mvn	r3, #8
 14569              		.loc 1 5556 9
 14570 0558 BC0000EA 		b	.L886
 14571              	.L914:
 14572              		.loc 1 5556 9 discriminator 17
 14573 055c 14301BE5 		ldr	r3, [fp, #-20]
 14574 0560 233CA0E1 		lsr	r3, r3, #24
 14575 0564 080053E3 		cmp	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 356


 14576 0568 0100000A 		beq	.L909
 14577              		.loc 1 5556 9 discriminator 18
 14578 056c 0130E0E3 		mvn	r3, #1
 14579              		.loc 1 5556 9
 14580 0570 B60000EA 		b	.L886
 14581              	.L909:
5557:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Sig*,Sig_Op,Type_Stat);
5558:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SCHED);
 14582              		.loc 1 5558 9 is_stmt 1
 14583 0574 10301BE5 		ldr	r3, [fp, #-16]
 14584 0578 083093E5 		ldr	r3, [r3, #8]
 14585 057c 203003E2 		and	r3, r3, #32
 14586 0580 000053E3 		cmp	r3, #0
 14587 0584 0300001A 		bne	.L915
 14588              		.loc 1 5558 9 is_stmt 0 discriminator 1
 14589 0588 0630E0E3 		mvn	r3, #6
 14590              		.loc 1 5558 9
 14591 058c AF0000EA 		b	.L886
 14592              	.L905:
5559:../../Source/Kernel/rme_kernel.c ****     }
5560:../../Source/Kernel/rme_kernel.c ****     else
5561:../../Source/Kernel/rme_kernel.c ****     {
5562:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5563:../../Source/Kernel/rme_kernel.c **** 
5564:../../Source/Kernel/rme_kernel.c ****         Sig_Op=RME_NULL;
 14593              		.loc 1 5564 15 is_stmt 1
 14594 0590 0030A0E3 		mov	r3, #0
 14595 0594 10300BE5 		str	r3, [fp, #-16]
 14596              	.L915:
5565:../../Source/Kernel/rme_kernel.c ****     }
5566:../../Source/Kernel/rme_kernel.c **** 
5567:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound. If yes, we just quit */
5568:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 14597              		.loc 1 5568 12
 14598 0598 08301BE5 		ldr	r3, [fp, #-8]
 14599 059c 0C3093E5 		ldr	r3, [r3, #12]
 14600              		.loc 1 5568 11
 14601 05a0 18300BE5 		str	r3, [fp, #-24]
5569:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 5");
 14602              		.loc 1 5569 5
 14603 05a4 000000E3 		movw	r0, #:lower16:.LC41
 14604 05a8 000040E3 		movt	r0, #:upper16:.LC41
 14605 05ac FEFFFFEB 		bl	RME_Str_Print
5570:../../Source/Kernel/rme_kernel.c ****     Local_Old=Thread->Sched.Local;
 14606              		.loc 1 5570 14
 14607 05b0 18301BE5 		ldr	r3, [fp, #-24]
 14608 05b4 143093E5 		ldr	r3, [r3, #20]
 14609 05b8 1C300BE5 		str	r3, [fp, #-28]
5571:../../Source/Kernel/rme_kernel.c ****     if(Local_Old!=RME_THD_FREE)
 14610              		.loc 1 5571 7
 14611 05bc 1C301BE5 		ldr	r3, [fp, #-28]
 14612 05c0 010073E3 		cmn	r3, #1
 14613 05c4 0100000A 		beq	.L916
5572:../../Source/Kernel/rme_kernel.c ****     {
5573:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5574:../../Source/Kernel/rme_kernel.c **** 
5575:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 357


 14614              		.loc 1 5575 16
 14615 05c8 CB30E0E3 		mvn	r3, #203
 14616 05cc 9F0000EA 		b	.L886
 14617              	.L916:
5576:../../Source/Kernel/rme_kernel.c ****     }
5577:../../Source/Kernel/rme_kernel.c ****     else
5578:../../Source/Kernel/rme_kernel.c ****     {
5579:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5580:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5581:../../Source/Kernel/rme_kernel.c ****     }
5582:../../Source/Kernel/rme_kernel.c ****     
5583:../../Source/Kernel/rme_kernel.c ****     /* See if the parent thread is on the same core with the current processor */
5584:../../Source/Kernel/rme_kernel.c ****     Local_New=RME_CPU_LOCAL();
 14618              		.loc 1 5584 14
 14619 05d0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 14620 05d4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 14621 05d8 20300BE5 		str	r3, [fp, #-32]
5585:../../Source/Kernel/rme_kernel.c ****     Scheduler=RME_CAP_GETOBJ(Thd_Sched,struct RME_Thd_Struct*);
 14622              		.loc 1 5585 15
 14623 05dc 0C301BE5 		ldr	r3, [fp, #-12]
 14624 05e0 0C3093E5 		ldr	r3, [r3, #12]
 14625              		.loc 1 5585 14
 14626 05e4 24300BE5 		str	r3, [fp, #-36]
5586:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=Local_New)
 14627              		.loc 1 5586 24
 14628 05e8 24301BE5 		ldr	r3, [fp, #-36]
 14629 05ec 143093E5 		ldr	r3, [r3, #20]
 14630              		.loc 1 5586 7
 14631 05f0 20201BE5 		ldr	r2, [fp, #-32]
 14632 05f4 030052E1 		cmp	r2, r3
 14633 05f8 0100000A 		beq	.L917
5587:../../Source/Kernel/rme_kernel.c ****     {
5588:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5589:../../Source/Kernel/rme_kernel.c **** 
5590:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 14634              		.loc 1 5590 16
 14635 05fc CB30E0E3 		mvn	r3, #203
 14636 0600 920000EA 		b	.L886
 14637              	.L917:
5591:../../Source/Kernel/rme_kernel.c ****     }
5592:../../Source/Kernel/rme_kernel.c ****     else
5593:../../Source/Kernel/rme_kernel.c ****     {
5594:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5595:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5596:../../Source/Kernel/rme_kernel.c ****     }
5597:../../Source/Kernel/rme_kernel.c **** 
5598:../../Source/Kernel/rme_kernel.c ****     /* See if we are trying to bind to ourself - prohibited */
5599:../../Source/Kernel/rme_kernel.c ****     if(Thread==Scheduler)
 14638              		.loc 1 5599 7
 14639 0604 18201BE5 		ldr	r2, [fp, #-24]
 14640 0608 24301BE5 		ldr	r3, [fp, #-36]
 14641 060c 030052E1 		cmp	r2, r3
 14642 0610 0100001A 		bne	.L918
5600:../../Source/Kernel/rme_kernel.c ****     {
5601:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5602:../../Source/Kernel/rme_kernel.c **** 
5603:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 358


 14643              		.loc 1 5603 16
 14644 0614 CE30E0E3 		mvn	r3, #206
 14645 0618 8C0000EA 		b	.L886
 14646              	.L918:
5604:../../Source/Kernel/rme_kernel.c ****     }
5605:../../Source/Kernel/rme_kernel.c ****     else
5606:../../Source/Kernel/rme_kernel.c ****     {
5607:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5608:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5609:../../Source/Kernel/rme_kernel.c ****     }
5610:../../Source/Kernel/rme_kernel.c ****     
5611:../../Source/Kernel/rme_kernel.c ****     /* See if the priority relationship is correct */
5612:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Prio_Max<Prio)
 14647              		.loc 1 5612 24
 14648 061c 24301BE5 		ldr	r3, [fp, #-36]
 14649 0620 243093E5 		ldr	r3, [r3, #36]
 14650              		.loc 1 5612 7
 14651 0624 08209BE5 		ldr	r2, [fp, #8]
 14652 0628 030052E1 		cmp	r2, r3
 14653 062c 0100009A 		bls	.L919
5613:../../Source/Kernel/rme_kernel.c ****     {
5614:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5615:../../Source/Kernel/rme_kernel.c **** 
5616:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 14654              		.loc 1 5616 16
 14655 0630 CC30E0E3 		mvn	r3, #204
 14656 0634 850000EA 		b	.L886
 14657              	.L919:
5617:../../Source/Kernel/rme_kernel.c ****     }
5618:../../Source/Kernel/rme_kernel.c ****     else
5619:../../Source/Kernel/rme_kernel.c ****     {
5620:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5621:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5622:../../Source/Kernel/rme_kernel.c ****     }
5623:../../Source/Kernel/rme_kernel.c ****     
5624:../../Source/Kernel/rme_kernel.c ****     /* Check whether the coprocessor context attribute is compatible with this core */
5625:../../Source/Kernel/rme_kernel.c ****     Hyp_Attr=Thread->Ctx.Hyp_Attr;
 14658              		.loc 1 5625 13
 14659 0638 18301BE5 		ldr	r3, [fp, #-24]
 14660 063c 443093E5 		ldr	r3, [r3, #68]
 14661 0640 28300BE5 		str	r3, [fp, #-40]
5626:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5627:../../Source/Kernel/rme_kernel.c ****     if(__RME_Thd_Cop_Check(RME_THD_ATTR(Hyp_Attr))<0)
5628:../../Source/Kernel/rme_kernel.c ****     {
5629:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5630:../../Source/Kernel/rme_kernel.c **** 
5631:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
5632:../../Source/Kernel/rme_kernel.c ****     }
5633:../../Source/Kernel/rme_kernel.c **** #else
5634:../../Source/Kernel/rme_kernel.c ****     if(RME_THD_ATTR(Hyp_Attr)!=0U)
 14662              		.loc 1 5634 8
 14663 0644 28301BE5 		ldr	r3, [fp, #-40]
 14664 0648 0231C3E3 		bic	r3, r3, #-2147483648
 14665              		.loc 1 5634 7
 14666 064c 000053E3 		cmp	r3, #0
 14667 0650 0100000A 		beq	.L920
5635:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 359


5636:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5637:../../Source/Kernel/rme_kernel.c **** 
5638:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 14668              		.loc 1 5638 16
 14669 0654 0630E0E3 		mvn	r3, #6
 14670 0658 7C0000EA 		b	.L886
 14671              	.L920:
5639:../../Source/Kernel/rme_kernel.c ****     }
5640:../../Source/Kernel/rme_kernel.c **** #endif
5641:../../Source/Kernel/rme_kernel.c ****     else
5642:../../Source/Kernel/rme_kernel.c ****     {
5643:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5644:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5645:../../Source/Kernel/rme_kernel.c ****     }
5646:../../Source/Kernel/rme_kernel.c **** 
5647:../../Source/Kernel/rme_kernel.c ****     /* Check the hypervisor context buffer passed in to see whether it is good */
5648:../../Source/Kernel/rme_kernel.c ****     if((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U))
 14672              		.loc 1 5648 7
 14673 065c 0C309BE5 		ldr	r3, [fp, #12]
 14674 0660 000053E3 		cmp	r3, #0
 14675 0664 2000000A 		beq	.L921
 14676              		.loc 1 5648 55 discriminator 1
 14677 0668 28301BE5 		ldr	r3, [fp, #-40]
 14678              		.loc 1 5648 25 discriminator 1
 14679 066c 000053E3 		cmp	r3, #0
 14680 0670 1D0000AA 		bge	.L921
5649:../../Source/Kernel/rme_kernel.c ****     {
5650:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5651:../../Source/Kernel/rme_kernel.c ****         
5652:../../Source/Kernel/rme_kernel.c ****         /* Register save area must be aligned to word boundary */
5653:../../Source/Kernel/rme_kernel.c ****         if(RME_IS_ALIGNED(Haddr)!=0U)
 14681              		.loc 1 5653 12
 14682 0674 0C309BE5 		ldr	r3, [fp, #12]
 14683 0678 033003E2 		and	r3, r3, #3
 14684              		.loc 1 5653 33
 14685 067c 000053E3 		cmp	r3, #0
 14686 0680 0100001A 		bne	.L922
 14687              		.loc 1 5653 33 is_stmt 0 discriminator 1
 14688 0684 0130A0E3 		mov	r3, #1
 14689 0688 000000EA 		b	.L923
 14690              	.L922:
 14691              		.loc 1 5653 33 discriminator 2
 14692 068c 0030A0E3 		mov	r3, #0
 14693              	.L923:
 14694              		.loc 1 5653 11 is_stmt 1 discriminator 4
 14695 0690 000053E3 		cmp	r3, #0
 14696 0694 1200000A 		beq	.L924
5654:../../Source/Kernel/rme_kernel.c ****         {
5655:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5656:../../Source/Kernel/rme_kernel.c ****             
5657:../../Source/Kernel/rme_kernel.c ****             /* It needs to be safely accessible to the kernel as well */
5658:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5659:../../Source/Kernel/rme_kernel.c ****             if(Haddr<RME_HYP_VA_BASE)
 14697              		.loc 1 5659 15
 14698 0698 0C309BE5 		ldr	r3, [fp, #12]
 14699 069c 1E0273E3 		cmn	r3, #-536870911
 14700 06a0 0100008A 		bhi	.L925
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 360


5660:../../Source/Kernel/rme_kernel.c ****             {
5661:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
5662:../../Source/Kernel/rme_kernel.c **** 
5663:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_PTH_HADDR;
 14701              		.loc 1 5663 24
 14702 06a4 CA30E0E3 		mvn	r3, #202
 14703 06a8 680000EA 		b	.L886
 14704              	.L925:
5664:../../Source/Kernel/rme_kernel.c ****             }
5665:../../Source/Kernel/rme_kernel.c ****             else
5666:../../Source/Kernel/rme_kernel.c ****             {
5667:../../Source/Kernel/rme_kernel.c **** #endif
5668:../../Source/Kernel/rme_kernel.c ****                 End=Haddr+RME_REG_SIZE(RME_THD_ATTR(Thread->Ctx.Hyp_Attr));
 14705              		.loc 1 5668 20
 14706 06ac 0C309BE5 		ldr	r3, [fp, #12]
 14707 06b0 443083E2 		add	r3, r3, #68
 14708 06b4 2C300BE5 		str	r3, [fp, #-44]
5669:../../Source/Kernel/rme_kernel.c ****                 if((End<=Haddr)||(End>(RME_HYP_VA_BASE+RME_HYP_VA_SIZE)))
 14709              		.loc 1 5669 19
 14710 06b8 2C201BE5 		ldr	r2, [fp, #-44]
 14711 06bc 0C309BE5 		ldr	r3, [fp, #12]
 14712 06c0 030052E1 		cmp	r2, r3
 14713 06c4 0400009A 		bls	.L926
 14714              		.loc 1 5669 32 discriminator 1
 14715 06c8 2C201BE5 		ldr	r2, [fp, #-44]
 14716 06cc 0030A0E3 		mov	r3, #0
 14717 06d0 023042E3 		movt	r3, 8194
 14718 06d4 030052E1 		cmp	r2, r3
 14719 06d8 1100009A 		bls	.L939
 14720              	.L926:
5670:../../Source/Kernel/rme_kernel.c ****                 {
5671:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5672:../../Source/Kernel/rme_kernel.c **** 
5673:../../Source/Kernel/rme_kernel.c ****                     return RME_ERR_PTH_HADDR;
 14721              		.loc 1 5673 28
 14722 06dc CA30E0E3 		mvn	r3, #202
 14723 06e0 5A0000EA 		b	.L886
 14724              	.L924:
5674:../../Source/Kernel/rme_kernel.c ****                 }
5675:../../Source/Kernel/rme_kernel.c ****                 else
5676:../../Source/Kernel/rme_kernel.c ****                 {
5677:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
5678:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
5679:../../Source/Kernel/rme_kernel.c ****                 }
5680:../../Source/Kernel/rme_kernel.c **** #if(RME_HYP_VA_BASE!=0U)
5681:../../Source/Kernel/rme_kernel.c ****             }
5682:../../Source/Kernel/rme_kernel.c **** #endif
5683:../../Source/Kernel/rme_kernel.c ****         }
5684:../../Source/Kernel/rme_kernel.c ****         /* Not aligned, exiting */
5685:../../Source/Kernel/rme_kernel.c ****         else
5686:../../Source/Kernel/rme_kernel.c ****         {
5687:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
5688:../../Source/Kernel/rme_kernel.c **** 
5689:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_HADDR;
 14725              		.loc 1 5689 20
 14726 06e4 CA30E0E3 		mvn	r3, #202
 14727 06e8 580000EA 		b	.L886
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 361


 14728              	.L921:
5690:../../Source/Kernel/rme_kernel.c ****         }
5691:../../Source/Kernel/rme_kernel.c ****     }
5692:../../Source/Kernel/rme_kernel.c ****     /* We don't allow setting HYP addr for normal threads, nor do we allow
5693:../../Source/Kernel/rme_kernel.c ****      * setting HYP addr to NULL for hypervisor-managed threads. */
5694:../../Source/Kernel/rme_kernel.c ****     else if(((Haddr!=RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)==0U))||
 14729              		.loc 1 5694 12
 14730 06ec 0C309BE5 		ldr	r3, [fp, #12]
 14731 06f0 000053E3 		cmp	r3, #0
 14732 06f4 0200000A 		beq	.L929
 14733              		.loc 1 5694 61 discriminator 1
 14734 06f8 28301BE5 		ldr	r3, [fp, #-40]
 14735              		.loc 1 5694 31 discriminator 1
 14736 06fc 000053E3 		cmp	r3, #0
 14737 0700 050000AA 		bge	.L930
 14738              	.L929:
 14739              		.loc 1 5694 67 discriminator 3
 14740 0704 0C309BE5 		ldr	r3, [fp, #12]
 14741 0708 000053E3 		cmp	r3, #0
 14742 070c 0500001A 		bne	.L928
5695:../../Source/Kernel/rme_kernel.c ****             ((Haddr==RME_NULL)&&((Hyp_Attr&RME_THD_HYP_FLAG)!=0U)))
 14743              		.loc 1 5695 61
 14744 0710 28301BE5 		ldr	r3, [fp, #-40]
 14745              		.loc 1 5695 31
 14746 0714 000053E3 		cmp	r3, #0
 14747 0718 020000AA 		bge	.L928
 14748              	.L930:
5696:../../Source/Kernel/rme_kernel.c ****     {
5697:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5698:../../Source/Kernel/rme_kernel.c **** 
5699:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_HADDR;
 14749              		.loc 1 5699 16
 14750 071c CA30E0E3 		mvn	r3, #202
 14751 0720 4A0000EA 		b	.L886
 14752              	.L939:
5653:../../Source/Kernel/rme_kernel.c ****         {
 14753              		.loc 1 5653 11
 14754 0724 00F020E3 		nop
 14755              	.L928:
5700:../../Source/Kernel/rme_kernel.c ****     }
5701:../../Source/Kernel/rme_kernel.c ****     else
5702:../../Source/Kernel/rme_kernel.c ****     {
5703:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5704:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5705:../../Source/Kernel/rme_kernel.c ****     }
5706:../../Source/Kernel/rme_kernel.c **** 
5707:../../Source/Kernel/rme_kernel.c ****     /* Try to bind the thread */
5708:../../Source/Kernel/rme_kernel.c ****     if(RME_COMP_SWAP((rme_ptr_t*)&(Thread->Sched.Local),
 14756              		.loc 1 5708 8
 14757 0728 18301BE5 		ldr	r3, [fp, #-24]
 14758 072c 143083E2 		add	r3, r3, #20
 14759 0730 1C101BE5 		ldr	r1, [fp, #-28]
 14760 0734 20201BE5 		ldr	r2, [fp, #-32]
 14761 0738 0300A0E1 		mov	r0, r3
 14762 073c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 14763 0740 0030A0E1 		mov	r3, r0
 14764              		.loc 1 5708 7 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 362


 14765 0744 000053E3 		cmp	r3, #0
 14766 0748 0100001A 		bne	.L931
5709:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_Old,
5710:../../Source/Kernel/rme_kernel.c ****                      (rme_ptr_t)Local_New)==RME_CASFAIL)
5711:../../Source/Kernel/rme_kernel.c ****     {
5712:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5713:../../Source/Kernel/rme_kernel.c **** 
5714:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_CONFLICT;
 14767              		.loc 1 5714 16
 14768 074c C930E0E3 		mvn	r3, #201
 14769 0750 3E0000EA 		b	.L886
 14770              	.L931:
5715:../../Source/Kernel/rme_kernel.c ****     }
5716:../../Source/Kernel/rme_kernel.c ****     else
5717:../../Source/Kernel/rme_kernel.c ****     {
5718:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5719:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5720:../../Source/Kernel/rme_kernel.c ****     }
5721:../../Source/Kernel/rme_kernel.c ****     
5722:../../Source/Kernel/rme_kernel.c ****     /* Increase the reference count of the scheduler thread struct - same core */
5723:../../Source/Kernel/rme_kernel.c ****     Scheduler->Sched.Sched_Ref++;
 14771              		.loc 1 5723 21
 14772 0754 24301BE5 		ldr	r3, [fp, #-36]
 14773 0758 303093E5 		ldr	r3, [r3, #48]
 14774              		.loc 1 5723 31
 14775 075c 012083E2 		add	r2, r3, #1
 14776 0760 24301BE5 		ldr	r3, [fp, #-36]
 14777 0764 302083E5 		str	r2, [r3, #48]
5724:../../Source/Kernel/rme_kernel.c ****     
5725:../../Source/Kernel/rme_kernel.c ****     /* Bind successful and finish the work off. No need to worry about other cores'
5726:../../Source/Kernel/rme_kernel.c ****      * operations on this thread because this thread is already bound to this core.
5727:../../Source/Kernel/rme_kernel.c ****      * TID is half-word parameter-wise, but is stored and returned as a full word. */
5728:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd=Scheduler;
 14778              		.loc 1 5728 28
 14779 0768 18301BE5 		ldr	r3, [fp, #-24]
 14780 076c 24201BE5 		ldr	r2, [fp, #-36]
 14781 0770 342083E5 		str	r2, [r3, #52]
5729:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Prio=Prio;
 14782              		.loc 1 5729 23
 14783 0774 18301BE5 		ldr	r3, [fp, #-24]
 14784 0778 08209BE5 		ldr	r2, [fp, #8]
 14785 077c 202083E5 		str	r2, [r3, #32]
5730:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.TID=(rme_ptr_t)TID;
 14786              		.loc 1 5730 23
 14787 0780 04209BE5 		ldr	r2, [fp, #4]
 14788              		.loc 1 5730 22
 14789 0784 18301BE5 		ldr	r3, [fp, #-24]
 14790 0788 102083E5 		str	r2, [r3, #16]
5731:../../Source/Kernel/rme_kernel.c ****     
5732:../../Source/Kernel/rme_kernel.c ****     /* The state must be TIMEOUT or EXCPEND at this point */
5733:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT((Thread->Sched.State==RME_THD_TIMEOUT)||
 14791              		.loc 1 5733 5
 14792 078c 18301BE5 		ldr	r3, [fp, #-24]
 14793 0790 1C3093E5 		ldr	r3, [r3, #28]
 14794 0794 020053E3 		cmp	r3, #2
 14795 0798 0C00000A 		beq	.L932
 14796              		.loc 1 5733 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 363


 14797 079c 18301BE5 		ldr	r3, [fp, #-24]
 14798 07a0 1C3093E5 		ldr	r3, [r3, #28]
 14799 07a4 030053E3 		cmp	r3, #3
 14800 07a8 0800000A 		beq	.L932
 14801              		.loc 1 5733 5 discriminator 2
 14802 07ac 003000E3 		movw	r3, #:lower16:.LC6
 14803 07b0 003040E3 		movt	r3, #:upper16:.LC6
 14804 07b4 002000E3 		movw	r2, #:lower16:.LC7
 14805 07b8 002040E3 		movt	r2, #:upper16:.LC7
 14806 07bc 651601E3 		movw	r1, #5733
 14807 07c0 000000E3 		movw	r0, #:lower16:.LC8
 14808 07c4 000040E3 		movt	r0, #:upper16:.LC8
 14809 07c8 FEFFFFEB 		bl	RME_Log
 14810              	.L933:
 14811              		.loc 1 5733 5
 14812 07cc FEFFFFEA 		b	.L933
 14813              	.L932:
5734:../../Source/Kernel/rme_kernel.c ****                (Thread->Sched.State==RME_THD_EXCPEND));
5735:../../Source/Kernel/rme_kernel.c **** 
5736:../../Source/Kernel/rme_kernel.c ****     /* Tie the signal endpoint to it if not zero */
5737:../../Source/Kernel/rme_kernel.c ****     if(Sig_Op==0U)
 14814              		.loc 1 5737 7 is_stmt 1
 14815 07d0 10301BE5 		ldr	r3, [fp, #-16]
 14816 07d4 000053E3 		cmp	r3, #0
 14817 07d8 0300001A 		bne	.L934
5738:../../Source/Kernel/rme_kernel.c ****     {
5739:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5740:../../Source/Kernel/rme_kernel.c **** 
5741:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=0U;
 14818              		.loc 1 5741 32
 14819 07dc 18301BE5 		ldr	r3, [fp, #-24]
 14820 07e0 0020A0E3 		mov	r2, #0
 14821 07e4 382083E5 		str	r2, [r3, #56]
 14822 07e8 100000EA 		b	.L935
 14823              	.L934:
5742:../../Source/Kernel/rme_kernel.c ****     }
5743:../../Source/Kernel/rme_kernel.c ****     else
5744:../../Source/Kernel/rme_kernel.c ****     {
5745:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5746:../../Source/Kernel/rme_kernel.c **** 
5747:../../Source/Kernel/rme_kernel.c ****         /* Convert to root cap */
5748:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Sched_Sig=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 14824              		.loc 1 5748 33
 14825 07ec 10301BE5 		ldr	r3, [fp, #-16]
 14826 07f0 003093E5 		ldr	r3, [r3]
 14827 07f4 7330FFE6 		uxth	r3, r3
 14828 07f8 000053E3 		cmp	r3, #0
 14829 07fc 0200000A 		beq	.L936
 14830              		.loc 1 5748 33 is_stmt 0 discriminator 1
 14831 0800 10301BE5 		ldr	r3, [fp, #-16]
 14832 0804 043093E5 		ldr	r3, [r3, #4]
 14833 0808 000000EA 		b	.L937
 14834              	.L936:
 14835              		.loc 1 5748 33 discriminator 2
 14836 080c 10301BE5 		ldr	r3, [fp, #-16]
 14837              	.L937:
 14838              		.loc 1 5748 32 is_stmt 1 discriminator 4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 364


 14839 0810 18201BE5 		ldr	r2, [fp, #-24]
 14840 0814 383082E5 		str	r3, [r2, #56]
5749:../../Source/Kernel/rme_kernel.c ****         
5750:../../Source/Kernel/rme_kernel.c ****         /* Increase refcnt */
5751:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),1U);
 14841              		.loc 1 5751 9
 14842 0818 18301BE5 		ldr	r3, [fp, #-24]
 14843 081c 383093E5 		ldr	r3, [r3, #56]
 14844 0820 043083E2 		add	r3, r3, #4
 14845 0824 0110A0E3 		mov	r1, #1
 14846 0828 0300A0E1 		mov	r0, r3
 14847 082c FEFFFFEB 		bl	_RME_Fetch_Add_Single
 14848              	.L935:
5752:../../Source/Kernel/rme_kernel.c ****     }
5753:../../Source/Kernel/rme_kernel.c ****     
5754:../../Source/Kernel/rme_kernel.c ****     /* Set hypervisor context address if we're hypervisor-managed */
5755:../../Source/Kernel/rme_kernel.c ****     if((Thread->Ctx.Hyp_Attr&RME_THD_HYP_FLAG)!=0U)
 14849              		.loc 1 5755 20
 14850 0830 18301BE5 		ldr	r3, [fp, #-24]
 14851 0834 443093E5 		ldr	r3, [r3, #68]
 14852              		.loc 1 5755 7
 14853 0838 000053E3 		cmp	r3, #0
 14854 083c 020000AA 		bge	.L938
5756:../../Source/Kernel/rme_kernel.c ****     {
5757:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5758:../../Source/Kernel/rme_kernel.c ****         Thread->Ctx.Reg=(struct RME_Thd_Reg*)Haddr;
 14855              		.loc 1 5758 25
 14856 0840 0C209BE5 		ldr	r2, [fp, #12]
 14857              		.loc 1 5758 24
 14858 0844 18301BE5 		ldr	r3, [fp, #-24]
 14859 0848 482083E5 		str	r2, [r3, #72]
 14860              	.L938:
5759:../../Source/Kernel/rme_kernel.c ****     }
5760:../../Source/Kernel/rme_kernel.c ****     else
5761:../../Source/Kernel/rme_kernel.c ****     {
5762:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5763:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5764:../../Source/Kernel/rme_kernel.c ****     }
5765:../../Source/Kernel/rme_kernel.c ****     
5766:../../Source/Kernel/rme_kernel.c ****     return 0;
 14861              		.loc 1 5766 12
 14862 084c 0030A0E3 		mov	r3, #0
 14863              	.L886:
5767:../../Source/Kernel/rme_kernel.c **** }
 14864              		.loc 1 5767 1
 14865 0850 0300A0E1 		mov	r0, r3
 14866 0854 04D04BE2 		sub	sp, fp, #4
 14867              		.cfi_def_cfa 13, 8
 14868              		@ sp needed
 14869 0858 0088BDE8 		pop	{fp, pc}
 14870              		.cfi_endproc
 14871              	.LFE58:
 14873              		.section	.text._RME_Thd_Sched_Free,"ax",%progbits
 14874              		.align	2
 14875              		.syntax unified
 14876              		.arm
 14878              	_RME_Thd_Sched_Free:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 365


 14879              	.LFB59:
5768:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Bind ******************************************/
5769:../../Source/Kernel/rme_kernel.c **** 
5770:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Free ***********************************************
5771:../../Source/Kernel/rme_kernel.c **** Description : Free a thread from its current processor binding. This function
5772:../../Source/Kernel/rme_kernel.c ****               can only be executed from the same core on with the thread.
5773:../../Source/Kernel/rme_kernel.c ****               To free a thread from a core, it must not be the scheduler of
5774:../../Source/Kernel/rme_kernel.c ****               someone else. It could have pending scheduler notifications to
5775:../../Source/Kernel/rme_kernel.c ****               its parent though.
5776:../../Source/Kernel/rme_kernel.c ****               This system call can cause a potential context switch.
5777:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5778:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
5779:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5780:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5781:../../Source/Kernel/rme_kernel.c **** Output      : None.
5782:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5783:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5784:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Free(struct RME_Cap_Cpt* Cpt, 
5785:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
5786:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd)
5787:../../Source/Kernel/rme_kernel.c **** {
 14880              		.loc 1 5787 1
 14881              		.cfi_startproc
 14882              		@ args = 0, pretend = 0, frame = 32
 14883              		@ frame_needed = 1, uses_anonymous_args = 0
 14884 0000 00482DE9 		push	{fp, lr}
 14885              		.cfi_def_cfa_offset 8
 14886              		.cfi_offset 11, -8
 14887              		.cfi_offset 14, -4
 14888 0004 04B08DE2 		add	fp, sp, #4
 14889              		.cfi_def_cfa 11, 4
 14890 0008 20D04DE2 		sub	sp, sp, #32
 14891 000c 18000BE5 		str	r0, [fp, #-24]
 14892 0010 1C100BE5 		str	r1, [fp, #-28]
 14893 0014 20200BE5 		str	r2, [fp, #-32]
5788:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5789:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5790:../../Source/Kernel/rme_kernel.c ****     /* These are used to free the thread */
5791:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5792:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5793:../../Source/Kernel/rme_kernel.c ****     
5794:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5795:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 14894              		.loc 1 5795 5
 14895 0018 20301BE5 		ldr	r3, [fp, #-32]
 14896 001c 803003E2 		and	r3, r3, #128
 14897 0020 000053E3 		cmp	r3, #0
 14898 0024 1C00001A 		bne	.L941
 14899              		.loc 1 5795 5 is_stmt 0 discriminator 1
 14900 0028 18301BE5 		ldr	r3, [fp, #-24]
 14901 002c 142093E5 		ldr	r2, [r3, #20]
 14902 0030 20301BE5 		ldr	r3, [fp, #-32]
 14903 0034 030052E1 		cmp	r2, r3
 14904 0038 0100008A 		bhi	.L942
 14905              		.loc 1 5795 5 discriminator 3
 14906 003c 0230E0E3 		mvn	r3, #2
 14907              		.loc 1 5795 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 366


 14908 0040 D90000EA 		b	.L943
 14909              	.L942:
 14910              		.loc 1 5795 5 discriminator 4
 14911 0044 20301BE5 		ldr	r3, [fp, #-32]
 14912 0048 8322A0E1 		lsl	r2, r3, #5
 14913 004c 18301BE5 		ldr	r3, [fp, #-24]
 14914 0050 0C3093E5 		ldr	r3, [r3, #12]
 14915 0054 033082E0 		add	r3, r2, r3
 14916 0058 08300BE5 		str	r3, [fp, #-8]
 14917 005c 08301BE5 		ldr	r3, [fp, #-8]
 14918 0060 0300A0E1 		mov	r0, r3
 14919 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14920 0068 0C000BE5 		str	r0, [fp, #-12]
 14921              		.loc 1 5795 5 discriminator 1
 14922 006c 0C301BE5 		ldr	r3, [fp, #-12]
 14923 0070 FF3803E2 		and	r3, r3, #16711680
 14924 0074 020853E3 		cmp	r3, #131072
 14925 0078 0100001A 		bne	.L944
 14926              		.loc 1 5795 5 discriminator 5
 14927 007c 0830E0E3 		mvn	r3, #8
 14928              		.loc 1 5795 5
 14929 0080 C90000EA 		b	.L943
 14930              	.L944:
 14931              		.loc 1 5795 5 discriminator 6
 14932 0084 0C301BE5 		ldr	r3, [fp, #-12]
 14933 0088 233CA0E1 		lsr	r3, r3, #24
 14934 008c 060053E3 		cmp	r3, #6
 14935 0090 3F00000A 		beq	.L945
 14936              		.loc 1 5795 5 discriminator 7
 14937 0094 0130E0E3 		mvn	r3, #1
 14938              		.loc 1 5795 5
 14939 0098 C30000EA 		b	.L943
 14940              	.L941:
 14941              		.loc 1 5795 5 discriminator 2
 14942 009c 20301BE5 		ldr	r3, [fp, #-32]
 14943 00a0 2324A0E1 		lsr	r2, r3, #8
 14944 00a4 18301BE5 		ldr	r3, [fp, #-24]
 14945 00a8 143093E5 		ldr	r3, [r3, #20]
 14946 00ac 030052E1 		cmp	r2, r3
 14947 00b0 0100003A 		bcc	.L946
 14948              		.loc 1 5795 5 discriminator 8
 14949 00b4 0230E0E3 		mvn	r3, #2
 14950              		.loc 1 5795 5
 14951 00b8 BB0000EA 		b	.L943
 14952              	.L946:
 14953              		.loc 1 5795 5 discriminator 9
 14954 00bc 20301BE5 		ldr	r3, [fp, #-32]
 14955 00c0 2334A0E1 		lsr	r3, r3, #8
 14956 00c4 8322A0E1 		lsl	r2, r3, #5
 14957 00c8 18301BE5 		ldr	r3, [fp, #-24]
 14958 00cc 0C3093E5 		ldr	r3, [r3, #12]
 14959 00d0 033082E0 		add	r3, r2, r3
 14960 00d4 08300BE5 		str	r3, [fp, #-8]
 14961 00d8 08301BE5 		ldr	r3, [fp, #-8]
 14962 00dc 0300A0E1 		mov	r0, r3
 14963 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 14964 00e4 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 367


 14965              		.loc 1 5795 5 discriminator 1
 14966 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 14967 00ec FF3803E2 		and	r3, r3, #16711680
 14968 00f0 020853E3 		cmp	r3, #131072
 14969 00f4 0100001A 		bne	.L947
 14970              		.loc 1 5795 5 discriminator 10
 14971 00f8 0830E0E3 		mvn	r3, #8
 14972              		.loc 1 5795 5
 14973 00fc AA0000EA 		b	.L943
 14974              	.L947:
 14975              		.loc 1 5795 5 discriminator 11
 14976 0100 0C301BE5 		ldr	r3, [fp, #-12]
 14977 0104 233CA0E1 		lsr	r3, r3, #24
 14978 0108 030053E3 		cmp	r3, #3
 14979 010c 0100000A 		beq	.L948
 14980              		.loc 1 5795 5 discriminator 12
 14981 0110 0130E0E3 		mvn	r3, #1
 14982              		.loc 1 5795 5
 14983 0114 A40000EA 		b	.L943
 14984              	.L948:
 14985              		.loc 1 5795 5 discriminator 13
 14986 0118 20301BE5 		ldr	r3, [fp, #-32]
 14987 011c 7F2003E2 		and	r2, r3, #127
 14988 0120 08301BE5 		ldr	r3, [fp, #-8]
 14989 0124 143093E5 		ldr	r3, [r3, #20]
 14990 0128 030052E1 		cmp	r2, r3
 14991 012c 0100003A 		bcc	.L949
 14992              		.loc 1 5795 5 discriminator 14
 14993 0130 0230E0E3 		mvn	r3, #2
 14994              		.loc 1 5795 5
 14995 0134 9C0000EA 		b	.L943
 14996              	.L949:
 14997              		.loc 1 5795 5 discriminator 15
 14998 0138 20301BE5 		ldr	r3, [fp, #-32]
 14999 013c 7F3003E2 		and	r3, r3, #127
 15000 0140 8322A0E1 		lsl	r2, r3, #5
 15001 0144 08301BE5 		ldr	r3, [fp, #-8]
 15002 0148 0C3093E5 		ldr	r3, [r3, #12]
 15003 014c 033082E0 		add	r3, r2, r3
 15004 0150 08300BE5 		str	r3, [fp, #-8]
 15005 0154 08301BE5 		ldr	r3, [fp, #-8]
 15006 0158 0300A0E1 		mov	r0, r3
 15007 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15008 0160 0C000BE5 		str	r0, [fp, #-12]
 15009              		.loc 1 5795 5 discriminator 1
 15010 0164 0C301BE5 		ldr	r3, [fp, #-12]
 15011 0168 FF3803E2 		and	r3, r3, #16711680
 15012 016c 020853E3 		cmp	r3, #131072
 15013 0170 0100001A 		bne	.L950
 15014              		.loc 1 5795 5 discriminator 16
 15015 0174 0830E0E3 		mvn	r3, #8
 15016              		.loc 1 5795 5
 15017 0178 8B0000EA 		b	.L943
 15018              	.L950:
 15019              		.loc 1 5795 5 discriminator 17
 15020 017c 0C301BE5 		ldr	r3, [fp, #-12]
 15021 0180 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 368


 15022 0184 060053E3 		cmp	r3, #6
 15023 0188 0100000A 		beq	.L945
 15024              		.loc 1 5795 5 discriminator 18
 15025 018c 0130E0E3 		mvn	r3, #1
 15026              		.loc 1 5795 5
 15027 0190 850000EA 		b	.L943
 15028              	.L945:
5796:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5797:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5798:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_FREE);
 15029              		.loc 1 5798 5 is_stmt 1
 15030 0194 08301BE5 		ldr	r3, [fp, #-8]
 15031 0198 083093E5 		ldr	r3, [r3, #8]
 15032 019c 103003E2 		and	r3, r3, #16
 15033 01a0 000053E3 		cmp	r3, #0
 15034 01a4 0100001A 		bne	.L951
 15035              		.loc 1 5798 5 is_stmt 0 discriminator 1
 15036 01a8 0630E0E3 		mvn	r3, #6
 15037              		.loc 1 5798 5
 15038 01ac 7E0000EA 		b	.L943
 15039              	.L951:
5799:../../Source/Kernel/rme_kernel.c ****     
5800:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound to this core */
5801:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15040              		.loc 1 5801 10 is_stmt 1
 15041 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15042 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15043 01b8 10300BE5 		str	r3, [fp, #-16]
5802:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 15044              		.loc 1 5802 48
 15045 01bc 08301BE5 		ldr	r3, [fp, #-8]
 15046 01c0 0C3093E5 		ldr	r3, [r3, #12]
 15047              		.loc 1 5802 11
 15048 01c4 14300BE5 		str	r3, [fp, #-20]
5803:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 15049              		.loc 1 5803 21
 15050 01c8 14301BE5 		ldr	r3, [fp, #-20]
 15051 01cc 143093E5 		ldr	r3, [r3, #20]
 15052              		.loc 1 5803 7
 15053 01d0 10201BE5 		ldr	r2, [fp, #-16]
 15054 01d4 030052E1 		cmp	r2, r3
 15055 01d8 0100000A 		beq	.L952
5804:../../Source/Kernel/rme_kernel.c ****     {
5805:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5806:../../Source/Kernel/rme_kernel.c **** 
5807:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15056              		.loc 1 5807 16
 15057 01dc CB30E0E3 		mvn	r3, #203
 15058 01e0 710000EA 		b	.L943
 15059              	.L952:
5808:../../Source/Kernel/rme_kernel.c ****     }
5809:../../Source/Kernel/rme_kernel.c ****     else
5810:../../Source/Kernel/rme_kernel.c ****     {
5811:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5812:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5813:../../Source/Kernel/rme_kernel.c ****     }
5814:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 369


5815:../../Source/Kernel/rme_kernel.c ****     /* Am I referenced by someone as a scheduler? If yes, we cannot unbind. Because
5816:../../Source/Kernel/rme_kernel.c ****      * boot-time thread's refcnt will never be 0, thus they will never pass this checking */
5817:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Ref!=0U)
 15060              		.loc 1 5817 21
 15061 01e4 14301BE5 		ldr	r3, [fp, #-20]
 15062 01e8 303093E5 		ldr	r3, [r3, #48]
 15063              		.loc 1 5817 7
 15064 01ec 000053E3 		cmp	r3, #0
 15065 01f0 0100000A 		beq	.L953
5818:../../Source/Kernel/rme_kernel.c ****     {
5819:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5820:../../Source/Kernel/rme_kernel.c **** 
5821:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_REFCNT;
 15066              		.loc 1 5821 16
 15067 01f4 CD30E0E3 		mvn	r3, #205
 15068 01f8 6B0000EA 		b	.L943
 15069              	.L953:
5822:../../Source/Kernel/rme_kernel.c ****     }
5823:../../Source/Kernel/rme_kernel.c ****     else
5824:../../Source/Kernel/rme_kernel.c ****     {
5825:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5826:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5827:../../Source/Kernel/rme_kernel.c ****     }
5828:../../Source/Kernel/rme_kernel.c **** 
5829:../../Source/Kernel/rme_kernel.c ****     /* Decrease the parent's reference count - on the same core */
5830:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Sched_Thd->Sched.Sched_Ref--;
 15070              		.loc 1 5830 18
 15071 01fc 14301BE5 		ldr	r3, [fp, #-20]
 15072 0200 343093E5 		ldr	r3, [r3, #52]
 15073              		.loc 1 5830 35
 15074 0204 302093E5 		ldr	r2, [r3, #48]
 15075              		.loc 1 5830 45
 15076 0208 012042E2 		sub	r2, r2, #1
 15077 020c 302083E5 		str	r2, [r3, #48]
5831:../../Source/Kernel/rme_kernel.c **** 
5832:../../Source/Kernel/rme_kernel.c ****     /* See if we have any events sent to the parent. If yes, remove that event */
5833:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Notif.Next!=&(Thread->Sched.Notif))
 15078              		.loc 1 5833 27
 15079 0210 14301BE5 		ldr	r3, [fp, #-20]
 15080 0214 082093E5 		ldr	r2, [r3, #8]
 15081              		.loc 1 5833 34
 15082 0218 14301BE5 		ldr	r3, [fp, #-20]
 15083 021c 083083E2 		add	r3, r3, #8
 15084              		.loc 1 5833 7
 15085 0220 030052E1 		cmp	r2, r3
 15086 0224 0A00000A 		beq	.L954
5834:../../Source/Kernel/rme_kernel.c ****     {
5835:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5836:../../Source/Kernel/rme_kernel.c **** 
5837:../../Source/Kernel/rme_kernel.c ****         _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 15087              		.loc 1 5837 9
 15088 0228 14301BE5 		ldr	r3, [fp, #-20]
 15089 022c 0C2093E5 		ldr	r2, [r3, #12]
 15090 0230 14301BE5 		ldr	r3, [fp, #-20]
 15091 0234 083093E5 		ldr	r3, [r3, #8]
 15092 0238 0310A0E1 		mov	r1, r3
 15093 023c 0200A0E1 		mov	r0, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 370


 15094 0240 FEFFFFEB 		bl	_RME_List_Del
5838:../../Source/Kernel/rme_kernel.c ****         _RME_List_Crt(&(Thread->Sched.Notif));
 15095              		.loc 1 5838 9
 15096 0244 14301BE5 		ldr	r3, [fp, #-20]
 15097 0248 083083E2 		add	r3, r3, #8
 15098 024c 0300A0E1 		mov	r0, r3
 15099 0250 FEFFFFEB 		bl	_RME_List_Crt
 15100              	.L954:
5839:../../Source/Kernel/rme_kernel.c ****     }
5840:../../Source/Kernel/rme_kernel.c ****     else
5841:../../Source/Kernel/rme_kernel.c ****     {
5842:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5843:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5844:../../Source/Kernel/rme_kernel.c ****     }
5845:../../Source/Kernel/rme_kernel.c **** 
5846:../../Source/Kernel/rme_kernel.c ****     /* If we have an scheduler event endpoint, release it */
5847:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Sched_Sig!=RME_NULL)
 15101              		.loc 1 5847 21
 15102 0254 14301BE5 		ldr	r3, [fp, #-20]
 15103 0258 383093E5 		ldr	r3, [r3, #56]
 15104              		.loc 1 5847 7
 15105 025c 000053E3 		cmp	r3, #0
 15106 0260 0500000A 		beq	.L955
5848:../../Source/Kernel/rme_kernel.c ****     {
5849:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5850:../../Source/Kernel/rme_kernel.c **** 
5851:../../Source/Kernel/rme_kernel.c ****         RME_FETCH_ADD(&(Thread->Sched.Sched_Sig->Head.Root_Ref),-1);
 15107              		.loc 1 5851 9
 15108 0264 14301BE5 		ldr	r3, [fp, #-20]
 15109 0268 383093E5 		ldr	r3, [r3, #56]
 15110 026c 043083E2 		add	r3, r3, #4
 15111 0270 0010E0E3 		mvn	r1, #0
 15112 0274 0300A0E1 		mov	r0, r3
 15113 0278 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 15114              	.L955:
5852:../../Source/Kernel/rme_kernel.c ****     }
5853:../../Source/Kernel/rme_kernel.c ****     else
5854:../../Source/Kernel/rme_kernel.c ****     {
5855:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5856:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5857:../../Source/Kernel/rme_kernel.c ****     }
5858:../../Source/Kernel/rme_kernel.c **** 
5859:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5860:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 15115              		.loc 1 5860 5
 15116 027c 0010A0E3 		mov	r1, #0
 15117 0280 1C001BE5 		ldr	r0, [fp, #-28]
 15118 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5861:../../Source/Kernel/rme_kernel.c ****     
5862:../../Source/Kernel/rme_kernel.c ****     /* If the thread is ready, kick it out of the run queue. If it is blocked on
5863:../../Source/Kernel/rme_kernel.c ****      * some endpoint, end the blocking and set the return value to RME_ERR_SIV_FREE.
5864:../../Source/Kernel/rme_kernel.c ****      * If the thread is killed due to a fault, we will not clear the fault here, and
5865:../../Source/Kernel/rme_kernel.c ****      * we will wait for the Exec_Set to clear it. No scheduler notifications are sent
5866:../../Source/Kernel/rme_kernel.c ****      * because the thread is being freed and notifications at this point are useless. */
5867:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_READY)
 15119              		.loc 1 5867 21
 15120 0288 14301BE5 		ldr	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 371


 15121 028c 1C3093E5 		ldr	r3, [r3, #28]
 15122              		.loc 1 5867 7
 15123 0290 000053E3 		cmp	r3, #0
 15124 0294 0500001A 		bne	.L956
5868:../../Source/Kernel/rme_kernel.c ****     {
5869:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5870:../../Source/Kernel/rme_kernel.c **** 
5871:../../Source/Kernel/rme_kernel.c ****         /* Remove from runqueue and timeout but don't notify parent */
5872:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Del(Thread);
 15125              		.loc 1 5872 9
 15126 0298 14001BE5 		ldr	r0, [fp, #-20]
 15127 029c FEFFFFEB 		bl	_RME_Run_Del
5873:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
 15128              		.loc 1 5873 28
 15129 02a0 14301BE5 		ldr	r3, [fp, #-20]
 15130 02a4 0220A0E3 		mov	r2, #2
 15131 02a8 1C2083E5 		str	r2, [r3, #28]
 15132 02ac 130000EA 		b	.L957
 15133              	.L956:
5874:../../Source/Kernel/rme_kernel.c ****     }
5875:../../Source/Kernel/rme_kernel.c ****     /* BLOCKED */
5876:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_BLOCKED)
 15134              		.loc 1 5876 26
 15135 02b0 14301BE5 		ldr	r3, [fp, #-20]
 15136 02b4 1C3093E5 		ldr	r3, [r3, #28]
 15137              		.loc 1 5876 12
 15138 02b8 010053E3 		cmp	r3, #1
 15139 02bc 0F00001A 		bne	.L957
5877:../../Source/Kernel/rme_kernel.c ****     {
5878:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5879:../../Source/Kernel/rme_kernel.c ****         
5880:../../Source/Kernel/rme_kernel.c ****         /* If it got here, the thread that is operated on cannot be the current 
5881:../../Source/Kernel/rme_kernel.c ****          * thread, so we are not overwriting the return value of the caller. */
5882:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thread->Ctx.Reg->Reg),RME_ERR_SIV_FREE);
 15140              		.loc 1 5882 43
 15141 02c0 14301BE5 		ldr	r3, [fp, #-20]
 15142 02c4 483093E5 		ldr	r3, [r3, #72]
 15143              		.loc 1 5882 9
 15144 02c8 CE1E0FE3 		movw	r1, #65230
 15145 02cc FF1F4FE3 		movt	r1, 65535
 15146 02d0 0300A0E1 		mov	r0, r3
 15147 02d4 FEFFFFEB 		bl	__RME_Svc_Retval_Set
5883:../../Source/Kernel/rme_kernel.c ****         /* Release signal and thread from each other */
5884:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal->Thd=RME_NULL;
 15148              		.loc 1 5884 22
 15149 02d8 14301BE5 		ldr	r3, [fp, #-20]
 15150 02dc 283093E5 		ldr	r3, [r3, #40]
 15151              		.loc 1 5884 34
 15152 02e0 0020A0E3 		mov	r2, #0
 15153 02e4 182083E5 		str	r2, [r3, #24]
5885:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.Signal=RME_NULL;
 15154              		.loc 1 5885 29
 15155 02e8 14301BE5 		ldr	r3, [fp, #-20]
 15156 02ec 0020A0E3 		mov	r2, #0
 15157 02f0 282083E5 		str	r2, [r3, #40]
5886:../../Source/Kernel/rme_kernel.c ****         /* Timeout but don't notify parent */
5887:../../Source/Kernel/rme_kernel.c ****         Thread->Sched.State=RME_THD_TIMEOUT;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 372


 15158              		.loc 1 5887 28
 15159 02f4 14301BE5 		ldr	r3, [fp, #-20]
 15160 02f8 0220A0E3 		mov	r2, #2
 15161 02fc 1C2083E5 		str	r2, [r3, #28]
 15162              	.L957:
5888:../../Source/Kernel/rme_kernel.c ****     }
5889:../../Source/Kernel/rme_kernel.c ****     /* TIMEOUT or EXCPEND */
5890:../../Source/Kernel/rme_kernel.c ****     else
5891:../../Source/Kernel/rme_kernel.c ****     {
5892:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5893:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5894:../../Source/Kernel/rme_kernel.c ****     }
5895:../../Source/Kernel/rme_kernel.c **** 
5896:../../Source/Kernel/rme_kernel.c ****     /* Cleanup all remaining timeslices on it */
5897:../../Source/Kernel/rme_kernel.c ****     Thread->Sched.Slice=0U;
 15163              		.loc 1 5897 24
 15164 0300 14301BE5 		ldr	r3, [fp, #-20]
 15165 0304 0020A0E3 		mov	r2, #0
 15166 0308 182083E5 		str	r2, [r3, #24]
5898:../../Source/Kernel/rme_kernel.c ****     
5899:../../Source/Kernel/rme_kernel.c ****     /* Check if this thread is the current one and we may need to switch away */
5900:../../Source/Kernel/rme_kernel.c ****     if(Local->Thd_Cur==Thread)
 15167              		.loc 1 5900 13
 15168 030c 10301BE5 		ldr	r3, [fp, #-16]
 15169 0310 043093E5 		ldr	r3, [r3, #4]
 15170              		.loc 1 5900 7
 15171 0314 14201BE5 		ldr	r2, [fp, #-20]
 15172 0318 030052E1 		cmp	r2, r3
 15173 031c 1C00001A 		bne	.L958
5901:../../Source/Kernel/rme_kernel.c ****     {
5902:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5903:../../Source/Kernel/rme_kernel.c **** 
5904:../../Source/Kernel/rme_kernel.c ****         Local->Thd_Cur=_RME_Run_High(Local);
 15174              		.loc 1 5904 24
 15175 0320 10001BE5 		ldr	r0, [fp, #-16]
 15176 0324 FEFFFFEB 		bl	_RME_Run_High
 15177 0328 0020A0E1 		mov	r2, r0
 15178              		.loc 1 5904 23 discriminator 1
 15179 032c 10301BE5 		ldr	r3, [fp, #-16]
 15180 0330 042083E5 		str	r2, [r3, #4]
5905:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Local->Thd_Cur);
 15181              		.loc 1 5905 9
 15182 0334 10301BE5 		ldr	r3, [fp, #-16]
 15183 0338 043093E5 		ldr	r3, [r3, #4]
 15184 033c 0300A0E1 		mov	r0, r3
 15185 0340 FEFFFFEB 		bl	_RME_Run_Ins
5906:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(Local->Thd_Cur->Sched.State==RME_THD_READY);
 15186              		.loc 1 5906 9
 15187 0344 10301BE5 		ldr	r3, [fp, #-16]
 15188 0348 043093E5 		ldr	r3, [r3, #4]
 15189 034c 1C3093E5 		ldr	r3, [r3, #28]
 15190 0350 000053E3 		cmp	r3, #0
 15191 0354 0800000A 		beq	.L959
 15192              		.loc 1 5906 9 is_stmt 0 discriminator 1
 15193 0358 003000E3 		movw	r3, #:lower16:.LC6
 15194 035c 003040E3 		movt	r3, #:upper16:.LC6
 15195 0360 002000E3 		movw	r2, #:lower16:.LC7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 373


 15196 0364 002040E3 		movt	r2, #:upper16:.LC7
 15197 0368 121701E3 		movw	r1, #5906
 15198 036c 000000E3 		movw	r0, #:lower16:.LC8
 15199 0370 000040E3 		movt	r0, #:upper16:.LC8
 15200 0374 FEFFFFEB 		bl	RME_Log
 15201              	.L960:
 15202              		.loc 1 5906 9
 15203 0378 FEFFFFEA 		b	.L960
 15204              	.L959:
5907:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Swt(Reg,Thread,Local->Thd_Cur);
 15205              		.loc 1 5907 9 is_stmt 1
 15206 037c 10301BE5 		ldr	r3, [fp, #-16]
 15207 0380 043093E5 		ldr	r3, [r3, #4]
 15208 0384 0320A0E1 		mov	r2, r3
 15209 0388 14101BE5 		ldr	r1, [fp, #-20]
 15210 038c 1C001BE5 		ldr	r0, [fp, #-28]
 15211 0390 FEFFFFEB 		bl	_RME_Run_Swt
 15212              	.L958:
5908:../../Source/Kernel/rme_kernel.c ****     }
5909:../../Source/Kernel/rme_kernel.c ****     else
5910:../../Source/Kernel/rme_kernel.c ****     {
5911:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5912:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5913:../../Source/Kernel/rme_kernel.c ****     }
5914:../../Source/Kernel/rme_kernel.c ****     
5915:../../Source/Kernel/rme_kernel.c ****     /* Set the state to free so other cores can bind */
5916:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((rme_ptr_t*)&(Thread->Sched.Local),
 15213              		.loc 1 5916 5
 15214 0394 14301BE5 		ldr	r3, [fp, #-20]
 15215 0398 143083E2 		add	r3, r3, #20
 15216 039c 0010E0E3 		mvn	r1, #0
 15217 03a0 0300A0E1 		mov	r0, r3
 15218 03a4 FEFFFFEB 		bl	__RME_A7A_Write_Release
5917:../../Source/Kernel/rme_kernel.c ****                       (rme_ptr_t)RME_THD_FREE);
5918:../../Source/Kernel/rme_kernel.c **** 
5919:../../Source/Kernel/rme_kernel.c ****     return 0;
 15219              		.loc 1 5919 12
 15220 03a8 0030A0E3 		mov	r3, #0
 15221              	.L943:
5920:../../Source/Kernel/rme_kernel.c **** }
 15222              		.loc 1 5920 1
 15223 03ac 0300A0E1 		mov	r0, r3
 15224 03b0 04D04BE2 		sub	sp, fp, #4
 15225              		.cfi_def_cfa 13, 8
 15226              		@ sp needed
 15227 03b4 0088BDE8 		pop	{fp, pc}
 15228              		.cfi_endproc
 15229              	.LFE59:
 15231              		.section	.rodata
 15232 034a 0000     		.align	2
 15233              	.LC42:
 15234 034c 0D0A456E 		.ascii	"\015\012Entry \000"
 15234      74727920 
 15234      00
 15235 0355 000000   		.align	2
 15236              	.LC43:
 15237 0358 0D0A5374 		.ascii	"\015\012Stack \000"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 374


 15237      61636B20 
 15237      00
 15238 0361 000000   		.align	2
 15239              	.LC44:
 15240 0364 0D0A5061 		.ascii	"\015\012Param \000"
 15240      72616D20 
 15240      00
 15241              		.section	.text._RME_Thd_Exec_Set,"ax",%progbits
 15242              		.align	2
 15243              		.syntax unified
 15244              		.arm
 15246              	_RME_Thd_Exec_Set:
 15247              	.LFB60:
5921:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Free ******************************************/
5922:../../Source/Kernel/rme_kernel.c **** 
5923:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Exec_Set *************************************************
5924:../../Source/Kernel/rme_kernel.c **** Description : Set a thread's entry point and stack. The registers will be
5925:../../Source/Kernel/rme_kernel.c ****               initialized with these contents.
5926:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
5927:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
5928:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread.
5929:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
5930:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry address of the thread.
5931:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
5932:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter to pass to the thread.
5933:../../Source/Kernel/rme_kernel.c **** Output      : None.
5934:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
5935:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
5936:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Exec_Set(struct RME_Cap_Cpt* Cpt,
5937:../../Source/Kernel/rme_kernel.c ****                                    struct RME_Reg_Struct* Reg,
5938:../../Source/Kernel/rme_kernel.c ****                                    rme_cid_t Cap_Thd,
5939:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Entry,
5940:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Stack,
5941:../../Source/Kernel/rme_kernel.c ****                                    rme_ptr_t Param)
5942:../../Source/Kernel/rme_kernel.c **** {
 15248              		.loc 1 5942 1
 15249              		.cfi_startproc
 15250              		@ args = 8, pretend = 0, frame = 32
 15251              		@ frame_needed = 1, uses_anonymous_args = 0
 15252 0000 00482DE9 		push	{fp, lr}
 15253              		.cfi_def_cfa_offset 8
 15254              		.cfi_offset 11, -8
 15255              		.cfi_offset 14, -4
 15256 0004 04B08DE2 		add	fp, sp, #4
 15257              		.cfi_def_cfa 11, 4
 15258 0008 28D04DE2 		sub	sp, sp, #40
 15259 000c 18000BE5 		str	r0, [fp, #-24]
 15260 0010 1C100BE5 		str	r1, [fp, #-28]
 15261 0014 20200BE5 		str	r2, [fp, #-32]
 15262 0018 24300BE5 		str	r3, [fp, #-36]
5943:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
5944:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
5945:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
5946:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
5947:../../Source/Kernel/rme_kernel.c ****     
5948:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd ");
 15263              		.loc 1 5948 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 375


 15264 001c 000000E3 		movw	r0, #:lower16:.LC26
 15265 0020 000040E3 		movt	r0, #:upper16:.LC26
 15266 0024 FEFFFFEB 		bl	RME_Str_Print
5949:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Cap_Thd);
 15267              		.loc 1 5949 5
 15268 0028 20301BE5 		ldr	r3, [fp, #-32]
 15269 002c 0300A0E1 		mov	r0, r3
 15270 0030 FEFFFFEB 		bl	RME_Hex_Print
5950:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nEntry ");
 15271              		.loc 1 5950 5
 15272 0034 000000E3 		movw	r0, #:lower16:.LC42
 15273 0038 000040E3 		movt	r0, #:upper16:.LC42
 15274 003c FEFFFFEB 		bl	RME_Str_Print
5951:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Entry);
 15275              		.loc 1 5951 5
 15276 0040 24001BE5 		ldr	r0, [fp, #-36]
 15277 0044 FEFFFFEB 		bl	RME_Hex_Print
5952:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nStack ");
 15278              		.loc 1 5952 5
 15279 0048 000000E3 		movw	r0, #:lower16:.LC43
 15280 004c 000040E3 		movt	r0, #:upper16:.LC43
 15281 0050 FEFFFFEB 		bl	RME_Str_Print
5953:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Stack);
 15282              		.loc 1 5953 5
 15283 0054 04009BE5 		ldr	r0, [fp, #4]
 15284 0058 FEFFFFEB 		bl	RME_Hex_Print
5954:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nParam ");
 15285              		.loc 1 5954 5
 15286 005c 000000E3 		movw	r0, #:lower16:.LC44
 15287 0060 000040E3 		movt	r0, #:upper16:.LC44
 15288 0064 FEFFFFEB 		bl	RME_Str_Print
5955:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Param);
 15289              		.loc 1 5955 5
 15290 0068 08009BE5 		ldr	r0, [fp, #8]
 15291 006c FEFFFFEB 		bl	RME_Hex_Print
5956:../../Source/Kernel/rme_kernel.c **** 
5957:../../Source/Kernel/rme_kernel.c **** 
5958:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
5959:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15292              		.loc 1 5959 5
 15293 0070 20301BE5 		ldr	r3, [fp, #-32]
 15294 0074 803003E2 		and	r3, r3, #128
 15295 0078 000053E3 		cmp	r3, #0
 15296 007c 1C00001A 		bne	.L962
 15297              		.loc 1 5959 5 is_stmt 0 discriminator 1
 15298 0080 18301BE5 		ldr	r3, [fp, #-24]
 15299 0084 142093E5 		ldr	r2, [r3, #20]
 15300 0088 20301BE5 		ldr	r3, [fp, #-32]
 15301 008c 030052E1 		cmp	r2, r3
 15302 0090 0100008A 		bhi	.L963
 15303              		.loc 1 5959 5 discriminator 3
 15304 0094 0230E0E3 		mvn	r3, #2
 15305              		.loc 1 5959 5
 15306 0098 910000EA 		b	.L964
 15307              	.L963:
 15308              		.loc 1 5959 5 discriminator 4
 15309 009c 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 376


 15310 00a0 8322A0E1 		lsl	r2, r3, #5
 15311 00a4 18301BE5 		ldr	r3, [fp, #-24]
 15312 00a8 0C3093E5 		ldr	r3, [r3, #12]
 15313 00ac 033082E0 		add	r3, r2, r3
 15314 00b0 08300BE5 		str	r3, [fp, #-8]
 15315 00b4 08301BE5 		ldr	r3, [fp, #-8]
 15316 00b8 0300A0E1 		mov	r0, r3
 15317 00bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15318 00c0 0C000BE5 		str	r0, [fp, #-12]
 15319              		.loc 1 5959 5 discriminator 1
 15320 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 15321 00c8 FF3803E2 		and	r3, r3, #16711680
 15322 00cc 020853E3 		cmp	r3, #131072
 15323 00d0 0100001A 		bne	.L965
 15324              		.loc 1 5959 5 discriminator 5
 15325 00d4 0830E0E3 		mvn	r3, #8
 15326              		.loc 1 5959 5
 15327 00d8 810000EA 		b	.L964
 15328              	.L965:
 15329              		.loc 1 5959 5 discriminator 6
 15330 00dc 0C301BE5 		ldr	r3, [fp, #-12]
 15331 00e0 233CA0E1 		lsr	r3, r3, #24
 15332 00e4 060053E3 		cmp	r3, #6
 15333 00e8 3F00000A 		beq	.L966
 15334              		.loc 1 5959 5 discriminator 7
 15335 00ec 0130E0E3 		mvn	r3, #1
 15336              		.loc 1 5959 5
 15337 00f0 7B0000EA 		b	.L964
 15338              	.L962:
 15339              		.loc 1 5959 5 discriminator 2
 15340 00f4 20301BE5 		ldr	r3, [fp, #-32]
 15341 00f8 2324A0E1 		lsr	r2, r3, #8
 15342 00fc 18301BE5 		ldr	r3, [fp, #-24]
 15343 0100 143093E5 		ldr	r3, [r3, #20]
 15344 0104 030052E1 		cmp	r2, r3
 15345 0108 0100003A 		bcc	.L967
 15346              		.loc 1 5959 5 discriminator 8
 15347 010c 0230E0E3 		mvn	r3, #2
 15348              		.loc 1 5959 5
 15349 0110 730000EA 		b	.L964
 15350              	.L967:
 15351              		.loc 1 5959 5 discriminator 9
 15352 0114 20301BE5 		ldr	r3, [fp, #-32]
 15353 0118 2334A0E1 		lsr	r3, r3, #8
 15354 011c 8322A0E1 		lsl	r2, r3, #5
 15355 0120 18301BE5 		ldr	r3, [fp, #-24]
 15356 0124 0C3093E5 		ldr	r3, [r3, #12]
 15357 0128 033082E0 		add	r3, r2, r3
 15358 012c 08300BE5 		str	r3, [fp, #-8]
 15359 0130 08301BE5 		ldr	r3, [fp, #-8]
 15360 0134 0300A0E1 		mov	r0, r3
 15361 0138 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15362 013c 0C000BE5 		str	r0, [fp, #-12]
 15363              		.loc 1 5959 5 discriminator 1
 15364 0140 0C301BE5 		ldr	r3, [fp, #-12]
 15365 0144 FF3803E2 		and	r3, r3, #16711680
 15366 0148 020853E3 		cmp	r3, #131072
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 377


 15367 014c 0100001A 		bne	.L968
 15368              		.loc 1 5959 5 discriminator 10
 15369 0150 0830E0E3 		mvn	r3, #8
 15370              		.loc 1 5959 5
 15371 0154 620000EA 		b	.L964
 15372              	.L968:
 15373              		.loc 1 5959 5 discriminator 11
 15374 0158 0C301BE5 		ldr	r3, [fp, #-12]
 15375 015c 233CA0E1 		lsr	r3, r3, #24
 15376 0160 030053E3 		cmp	r3, #3
 15377 0164 0100000A 		beq	.L969
 15378              		.loc 1 5959 5 discriminator 12
 15379 0168 0130E0E3 		mvn	r3, #1
 15380              		.loc 1 5959 5
 15381 016c 5C0000EA 		b	.L964
 15382              	.L969:
 15383              		.loc 1 5959 5 discriminator 13
 15384 0170 20301BE5 		ldr	r3, [fp, #-32]
 15385 0174 7F2003E2 		and	r2, r3, #127
 15386 0178 08301BE5 		ldr	r3, [fp, #-8]
 15387 017c 143093E5 		ldr	r3, [r3, #20]
 15388 0180 030052E1 		cmp	r2, r3
 15389 0184 0100003A 		bcc	.L970
 15390              		.loc 1 5959 5 discriminator 14
 15391 0188 0230E0E3 		mvn	r3, #2
 15392              		.loc 1 5959 5
 15393 018c 540000EA 		b	.L964
 15394              	.L970:
 15395              		.loc 1 5959 5 discriminator 15
 15396 0190 20301BE5 		ldr	r3, [fp, #-32]
 15397 0194 7F3003E2 		and	r3, r3, #127
 15398 0198 8322A0E1 		lsl	r2, r3, #5
 15399 019c 08301BE5 		ldr	r3, [fp, #-8]
 15400 01a0 0C3093E5 		ldr	r3, [r3, #12]
 15401 01a4 033082E0 		add	r3, r2, r3
 15402 01a8 08300BE5 		str	r3, [fp, #-8]
 15403 01ac 08301BE5 		ldr	r3, [fp, #-8]
 15404 01b0 0300A0E1 		mov	r0, r3
 15405 01b4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15406 01b8 0C000BE5 		str	r0, [fp, #-12]
 15407              		.loc 1 5959 5 discriminator 1
 15408 01bc 0C301BE5 		ldr	r3, [fp, #-12]
 15409 01c0 FF3803E2 		and	r3, r3, #16711680
 15410 01c4 020853E3 		cmp	r3, #131072
 15411 01c8 0100001A 		bne	.L971
 15412              		.loc 1 5959 5 discriminator 16
 15413 01cc 0830E0E3 		mvn	r3, #8
 15414              		.loc 1 5959 5
 15415 01d0 430000EA 		b	.L964
 15416              	.L971:
 15417              		.loc 1 5959 5 discriminator 17
 15418 01d4 0C301BE5 		ldr	r3, [fp, #-12]
 15419 01d8 233CA0E1 		lsr	r3, r3, #24
 15420 01dc 060053E3 		cmp	r3, #6
 15421 01e0 0100000A 		beq	.L966
 15422              		.loc 1 5959 5 discriminator 18
 15423 01e4 0130E0E3 		mvn	r3, #1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 378


 15424              		.loc 1 5959 5
 15425 01e8 3D0000EA 		b	.L964
 15426              	.L966:
5960:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
5961:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
5962:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_EXEC_SET);
 15427              		.loc 1 5962 5 is_stmt 1
 15428 01ec 08301BE5 		ldr	r3, [fp, #-8]
 15429 01f0 083093E5 		ldr	r3, [r3, #8]
 15430 01f4 013003E2 		and	r3, r3, #1
 15431 01f8 000053E3 		cmp	r3, #0
 15432 01fc 0100001A 		bne	.L972
 15433              		.loc 1 5962 5 is_stmt 0 discriminator 1
 15434 0200 0630E0E3 		mvn	r3, #6
 15435              		.loc 1 5962 5
 15436 0204 360000EA 		b	.L964
 15437              	.L972:
5963:../../Source/Kernel/rme_kernel.c ****     
5964:../../Source/Kernel/rme_kernel.c ****     /* Check if the target thread is already bound, and quit if it is not on our core */
5965:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CAP_GETOBJ(Thd_Op,struct RME_Thd_Struct*);
 15438              		.loc 1 5965 12 is_stmt 1
 15439 0208 08301BE5 		ldr	r3, [fp, #-8]
 15440 020c 0C3093E5 		ldr	r3, [r3, #12]
 15441              		.loc 1 5965 11
 15442 0210 10300BE5 		str	r3, [fp, #-16]
5966:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15443              		.loc 1 5966 10
 15444 0214 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15445 0218 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15446 021c 14300BE5 		str	r3, [fp, #-20]
5967:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.Local!=Local)
 15447              		.loc 1 5967 21
 15448 0220 10301BE5 		ldr	r3, [fp, #-16]
 15449 0224 143093E5 		ldr	r3, [r3, #20]
 15450              		.loc 1 5967 7
 15451 0228 14201BE5 		ldr	r2, [fp, #-20]
 15452 022c 030052E1 		cmp	r2, r3
 15453 0230 0100000A 		beq	.L973
5968:../../Source/Kernel/rme_kernel.c ****     {
5969:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5970:../../Source/Kernel/rme_kernel.c **** 
5971:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15454              		.loc 1 5971 16
 15455 0234 CB30E0E3 		mvn	r3, #203
 15456 0238 290000EA 		b	.L964
 15457              	.L973:
5972:../../Source/Kernel/rme_kernel.c ****     }
5973:../../Source/Kernel/rme_kernel.c ****     else
5974:../../Source/Kernel/rme_kernel.c ****     {
5975:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5976:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5977:../../Source/Kernel/rme_kernel.c ****     }
5978:../../Source/Kernel/rme_kernel.c ****     
5979:../../Source/Kernel/rme_kernel.c ****     /* Commit the change if both values are non-zero. If both are zero we are just
5980:../../Source/Kernel/rme_kernel.c ****      * clearing the error flag and continue from where the exception happened. */
5981:../../Source/Kernel/rme_kernel.c ****     if((Entry!=RME_NULL)&&(Stack!=RME_NULL))
 15458              		.loc 1 5981 7
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 379


 15459 023c 24301BE5 		ldr	r3, [fp, #-36]
 15460 0240 000053E3 		cmp	r3, #0
 15461 0244 0C00000A 		beq	.L974
 15462              		.loc 1 5981 25 discriminator 1
 15463 0248 04309BE5 		ldr	r3, [fp, #4]
 15464 024c 000053E3 		cmp	r3, #0
 15465 0250 0900000A 		beq	.L974
5982:../../Source/Kernel/rme_kernel.c ****     {
5983:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5984:../../Source/Kernel/rme_kernel.c **** 
5985:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Reg_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr),
 15466              		.loc 1 5985 28
 15467 0254 10301BE5 		ldr	r3, [fp, #-16]
 15468 0258 443093E5 		ldr	r3, [r3, #68]
 15469              		.loc 1 5985 9
 15470 025c 0201C3E3 		bic	r0, r3, #-2147483648
5986:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15471              		.loc 1 5986 59
 15472 0260 10301BE5 		ldr	r3, [fp, #-16]
 15473 0264 483093E5 		ldr	r3, [r3, #72]
5985:../../Source/Kernel/rme_kernel.c ****                            Entry,Stack,Param,&(Thread->Ctx.Reg->Reg));
 15474              		.loc 1 5985 9
 15475 0268 00308DE5 		str	r3, [sp]
 15476 026c 08309BE5 		ldr	r3, [fp, #8]
 15477 0270 04209BE5 		ldr	r2, [fp, #4]
 15478 0274 24101BE5 		ldr	r1, [fp, #-36]
 15479 0278 FEFFFFEB 		bl	__RME_Thd_Reg_Init
 15480              	.L974:
5987:../../Source/Kernel/rme_kernel.c **** #if(RME_COP_NUM!=0U)
5988:../../Source/Kernel/rme_kernel.c ****         __RME_Thd_Cop_Init(RME_THD_ATTR(Thread->Ctx.Hyp_Attr), 
5989:../../Source/Kernel/rme_kernel.c ****                            &(Thread->Ctx.Reg->Reg),&(Thread->Ctx.Reg->Cop));
5990:../../Source/Kernel/rme_kernel.c **** #endif
5991:../../Source/Kernel/rme_kernel.c ****     }
5992:../../Source/Kernel/rme_kernel.c ****     else
5993:../../Source/Kernel/rme_kernel.c ****     {
5994:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
5995:../../Source/Kernel/rme_kernel.c ****         /* No action required */
5996:../../Source/Kernel/rme_kernel.c ****     }
5997:../../Source/Kernel/rme_kernel.c ****     
5998:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
5999:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);  
 15481              		.loc 1 5999 5
 15482 027c 0010A0E3 		mov	r1, #0
 15483 0280 1C001BE5 		ldr	r0, [fp, #-28]
 15484 0284 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6000:../../Source/Kernel/rme_kernel.c ****     
6001:../../Source/Kernel/rme_kernel.c ****     /* Check if there is a exception pending and clear it if there is */
6002:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 15485              		.loc 1 6002 21
 15486 0288 10301BE5 		ldr	r3, [fp, #-16]
 15487 028c 1C3093E5 		ldr	r3, [r3, #28]
 15488              		.loc 1 6002 7
 15489 0290 030053E3 		cmp	r3, #3
 15490 0294 1100001A 		bne	.L975
6003:../../Source/Kernel/rme_kernel.c ****     {
6004:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6005:../../Source/Kernel/rme_kernel.c ****         
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 380


6006:../../Source/Kernel/rme_kernel.c ****         /* Check if the thread still have timeslices. If yes, put it into the runqueue;
6007:../../Source/Kernel/rme_kernel.c ****          * if no, mark it as TIMEOUT and send scheduler notification to its parent. */
6008:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice!=0U)
 15491              		.loc 1 6008 25
 15492 0298 10301BE5 		ldr	r3, [fp, #-16]
 15493 029c 183093E5 		ldr	r3, [r3, #24]
 15494              		.loc 1 6008 11
 15495 02a0 000053E3 		cmp	r3, #0
 15496 02a4 0500000A 		beq	.L976
6009:../../Source/Kernel/rme_kernel.c ****         {
6010:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6011:../../Source/Kernel/rme_kernel.c ****             
6012:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
6013:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_READY;
 15497              		.loc 1 6013 32
 15498 02a8 10301BE5 		ldr	r3, [fp, #-16]
 15499 02ac 0020A0E3 		mov	r2, #0
 15500 02b0 1C2083E5 		str	r2, [r3, #28]
6014:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread);
 15501              		.loc 1 6014 13
 15502 02b4 10001BE5 		ldr	r0, [fp, #-16]
 15503 02b8 FEFFFFEB 		bl	_RME_Run_Ins
 15504 02bc 040000EA 		b	.L977
 15505              	.L976:
6015:../../Source/Kernel/rme_kernel.c ****         }
6016:../../Source/Kernel/rme_kernel.c ****         else
6017:../../Source/Kernel/rme_kernel.c ****         {
6018:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6019:../../Source/Kernel/rme_kernel.c ****             
6020:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6021:../../Source/Kernel/rme_kernel.c ****             Thread->Sched.State=RME_THD_TIMEOUT;
 15506              		.loc 1 6021 32
 15507 02c0 10301BE5 		ldr	r3, [fp, #-16]
 15508 02c4 0220A0E3 		mov	r2, #2
 15509 02c8 1C2083E5 		str	r2, [r3, #28]
6022:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thread);
 15510              		.loc 1 6022 13
 15511 02cc 10001BE5 		ldr	r0, [fp, #-16]
 15512 02d0 FEFFFFEB 		bl	_RME_Run_Notif
 15513              	.L977:
6023:../../Source/Kernel/rme_kernel.c ****         }
6024:../../Source/Kernel/rme_kernel.c ****         
6025:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread because something unblocked */
6026:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 15514              		.loc 1 6026 9
 15515 02d4 14101BE5 		ldr	r1, [fp, #-20]
 15516 02d8 1C001BE5 		ldr	r0, [fp, #-28]
 15517 02dc FEFFFFEB 		bl	_RME_Kern_High
 15518              	.L975:
6027:../../Source/Kernel/rme_kernel.c ****     }
6028:../../Source/Kernel/rme_kernel.c ****     else
6029:../../Source/Kernel/rme_kernel.c ****     {
6030:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6031:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6032:../../Source/Kernel/rme_kernel.c ****     }
6033:../../Source/Kernel/rme_kernel.c ****     
6034:../../Source/Kernel/rme_kernel.c ****     return 0;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 381


 15519              		.loc 1 6034 12
 15520 02e0 0030A0E3 		mov	r3, #0
 15521              	.L964:
6035:../../Source/Kernel/rme_kernel.c **** }
 15522              		.loc 1 6035 1
 15523 02e4 0300A0E1 		mov	r0, r3
 15524 02e8 04D04BE2 		sub	sp, fp, #4
 15525              		.cfi_def_cfa 13, 8
 15526              		@ sp needed
 15527 02ec 0088BDE8 		pop	{fp, pc}
 15528              		.cfi_endproc
 15529              	.LFE60:
 15531              		.section	.text._RME_Thd_Sched_Prio,"ax",%progbits
 15532              		.align	2
 15533              		.syntax unified
 15534              		.arm
 15536              	_RME_Thd_Sched_Prio:
 15537              	.LFB61:
6036:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Exec_Set ********************************************/
6037:../../Source/Kernel/rme_kernel.c **** 
6038:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Prio ***********************************************
6039:../../Source/Kernel/rme_kernel.c **** Description : Change a thread's priority level. This can only be called from
6040:../../Source/Kernel/rme_kernel.c ****               the core that have the thread bound. To facilitate scheduling,
6041:../../Source/Kernel/rme_kernel.c ****               this system call allows up to 3 thread's priority changes per
6042:../../Source/Kernel/rme_kernel.c ****               call. This system call can cause a potential context switch.
6043:../../Source/Kernel/rme_kernel.c ****               It is impossible to set a thread's priority beyond its maximum
6044:../../Source/Kernel/rme_kernel.c ****               priority. 
6045:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6046:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6047:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Number - The number of threads to adjust priority.
6048:../../Source/Kernel/rme_kernel.c ****                                  Allowed values are 1, 2 and 3.
6049:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd0 - The capability to the first thread.
6050:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6051:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio0 - The priority level, higher is more critical.
6052:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd1 - The capability to the second thread.
6053:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6054:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio1 - The priority level, higher is more critical.
6055:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd2 - The capability to the third thread.
6056:../../Source/Kernel/rme_kernel.c ****                                    2-Level.
6057:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Prio2 - The priority level, higher is more critical.
6058:../../Source/Kernel/rme_kernel.c **** Output      : None.
6059:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6060:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6061:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Prio(struct RME_Cap_Cpt* Cpt,
6062:../../Source/Kernel/rme_kernel.c ****                                      struct RME_Reg_Struct* Reg,
6063:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Number,
6064:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd0,
6065:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio0,
6066:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd1,
6067:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio1,
6068:../../Source/Kernel/rme_kernel.c ****                                      rme_cid_t Cap_Thd2,
6069:../../Source/Kernel/rme_kernel.c ****                                      rme_ptr_t Prio2)
6070:../../Source/Kernel/rme_kernel.c **** {
 15538              		.loc 1 6070 1
 15539              		.cfi_startproc
 15540              		@ args = 20, pretend = 0, frame = 80
 15541              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 382


 15542 0000 00482DE9 		push	{fp, lr}
 15543              		.cfi_def_cfa_offset 8
 15544              		.cfi_offset 11, -8
 15545              		.cfi_offset 14, -4
 15546 0004 04B08DE2 		add	fp, sp, #4
 15547              		.cfi_def_cfa 11, 4
 15548 0008 50D04DE2 		sub	sp, sp, #80
 15549 000c 48000BE5 		str	r0, [fp, #-72]
 15550 0010 4C100BE5 		str	r1, [fp, #-76]
 15551 0014 50200BE5 		str	r2, [fp, #-80]
 15552 0018 54300BE5 		str	r3, [fp, #-84]
6071:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Count;
6072:../../Source/Kernel/rme_kernel.c ****     rme_cid_t Cap_Thd[3];
6073:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Prio[3];
6074:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op[3];
6075:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread[3];
6076:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6077:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6078:../../Source/Kernel/rme_kernel.c ****     
6079:../../Source/Kernel/rme_kernel.c ****     /* Check parameter validity */
6080:../../Source/Kernel/rme_kernel.c ****     if((Number==0U)||(Number>3U))
 15553              		.loc 1 6080 7
 15554 001c 50301BE5 		ldr	r3, [fp, #-80]
 15555 0020 000053E3 		cmp	r3, #0
 15556 0024 0200000A 		beq	.L979
 15557              		.loc 1 6080 20 discriminator 1
 15558 0028 50301BE5 		ldr	r3, [fp, #-80]
 15559 002c 030053E3 		cmp	r3, #3
 15560 0030 0100009A 		bls	.L980
 15561              	.L979:
6081:../../Source/Kernel/rme_kernel.c ****     {
6082:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6083:../../Source/Kernel/rme_kernel.c **** 
6084:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 15562              		.loc 1 6084 16
 15563 0034 CB30E0E3 		mvn	r3, #203
 15564 0038 260100EA 		b	.L1000
 15565              	.L980:
6085:../../Source/Kernel/rme_kernel.c ****     }
6086:../../Source/Kernel/rme_kernel.c ****     
6087:../../Source/Kernel/rme_kernel.c ****     /* We'll use arrays in the next */
6088:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[0]=Cap_Thd0;
 15566              		.loc 1 6088 15
 15567 003c 54301BE5 		ldr	r3, [fp, #-84]
 15568 0040 1C300BE5 		str	r3, [fp, #-28]
6089:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[1]=Cap_Thd1;
 15569              		.loc 1 6089 15
 15570 0044 08309BE5 		ldr	r3, [fp, #8]
 15571 0048 18300BE5 		str	r3, [fp, #-24]
6090:../../Source/Kernel/rme_kernel.c ****     Cap_Thd[2]=Cap_Thd2;
 15572              		.loc 1 6090 15
 15573 004c 10309BE5 		ldr	r3, [fp, #16]
 15574 0050 14300BE5 		str	r3, [fp, #-20]
6091:../../Source/Kernel/rme_kernel.c ****     Prio[0]=Prio0;
 15575              		.loc 1 6091 12
 15576 0054 04309BE5 		ldr	r3, [fp, #4]
 15577 0058 28300BE5 		str	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 383


6092:../../Source/Kernel/rme_kernel.c ****     Prio[1]=Prio1;
 15578              		.loc 1 6092 12
 15579 005c 0C309BE5 		ldr	r3, [fp, #12]
 15580 0060 24300BE5 		str	r3, [fp, #-36]
6093:../../Source/Kernel/rme_kernel.c ****     Prio[2]=Prio2;
 15581              		.loc 1 6093 12
 15582 0064 14309BE5 		ldr	r3, [fp, #20]
 15583 0068 20300BE5 		str	r3, [fp, #-32]
6094:../../Source/Kernel/rme_kernel.c **** 
6095:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 15584              		.loc 1 6095 10
 15585 006c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 15586 0070 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 15587 0074 0C300BE5 		str	r3, [fp, #-12]
6096:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15588              		.loc 1 6096 14
 15589 0078 0030A0E3 		mov	r3, #0
 15590 007c 08300BE5 		str	r3, [fp, #-8]
 15591              		.loc 1 6096 5
 15592 0080 D20000EA 		b	.L982
 15593              	.L995:
6097:../../Source/Kernel/rme_kernel.c ****     {
6098:../../Source/Kernel/rme_kernel.c ****         /* Get the capability slot */
6099:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd[Count],RME_CAP_TYPE_THD,
 15594              		.loc 1 6099 9
 15595 0084 08301BE5 		ldr	r3, [fp, #-8]
 15596 0088 0331A0E1 		lsl	r3, r3, #2
 15597 008c 043043E2 		sub	r3, r3, #4
 15598 0090 0B3083E0 		add	r3, r3, fp
 15599 0094 183013E5 		ldr	r3, [r3, #-24]
 15600 0098 803003E2 		and	r3, r3, #128
 15601 009c 000053E3 		cmp	r3, #0
 15602 00a0 2E00001A 		bne	.L983
 15603              		.loc 1 6099 9 is_stmt 0 discriminator 1
 15604 00a4 08301BE5 		ldr	r3, [fp, #-8]
 15605 00a8 0331A0E1 		lsl	r3, r3, #2
 15606 00ac 043043E2 		sub	r3, r3, #4
 15607 00b0 0B3083E0 		add	r3, r3, fp
 15608 00b4 183013E5 		ldr	r3, [r3, #-24]
 15609 00b8 0320A0E1 		mov	r2, r3
 15610 00bc 48301BE5 		ldr	r3, [fp, #-72]
 15611 00c0 143093E5 		ldr	r3, [r3, #20]
 15612 00c4 030052E1 		cmp	r2, r3
 15613 00c8 0100003A 		bcc	.L984
 15614              		.loc 1 6099 9 discriminator 3
 15615 00cc 0230E0E3 		mvn	r3, #2
 15616              		.loc 1 6099 9
 15617 00d0 000100EA 		b	.L1000
 15618              	.L984:
 15619              		.loc 1 6099 9 discriminator 4
 15620 00d4 08301BE5 		ldr	r3, [fp, #-8]
 15621 00d8 0331A0E1 		lsl	r3, r3, #2
 15622 00dc 043043E2 		sub	r3, r3, #4
 15623 00e0 0B3083E0 		add	r3, r3, fp
 15624 00e4 183013E5 		ldr	r3, [r3, #-24]
 15625 00e8 8322A0E1 		lsl	r2, r3, #5
 15626 00ec 48301BE5 		ldr	r3, [fp, #-72]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 384


 15627 00f0 0C3093E5 		ldr	r3, [r3, #12]
 15628 00f4 033082E0 		add	r3, r2, r3
 15629 00f8 0320A0E1 		mov	r2, r3
 15630 00fc 08301BE5 		ldr	r3, [fp, #-8]
 15631 0100 0331A0E1 		lsl	r3, r3, #2
 15632 0104 043043E2 		sub	r3, r3, #4
 15633 0108 0B3083E0 		add	r3, r3, fp
 15634 010c 302003E5 		str	r2, [r3, #-48]
 15635 0110 08301BE5 		ldr	r3, [fp, #-8]
 15636 0114 0331A0E1 		lsl	r3, r3, #2
 15637 0118 043043E2 		sub	r3, r3, #4
 15638 011c 0B3083E0 		add	r3, r3, fp
 15639 0120 303013E5 		ldr	r3, [r3, #-48]
 15640 0124 0300A0E1 		mov	r0, r3
 15641 0128 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15642 012c 10000BE5 		str	r0, [fp, #-16]
 15643              		.loc 1 6099 9 discriminator 1
 15644 0130 10301BE5 		ldr	r3, [fp, #-16]
 15645 0134 FF3803E2 		and	r3, r3, #16711680
 15646 0138 020853E3 		cmp	r3, #131072
 15647 013c 0100001A 		bne	.L985
 15648              		.loc 1 6099 9 discriminator 5
 15649 0140 0830E0E3 		mvn	r3, #8
 15650              		.loc 1 6099 9
 15651 0144 E30000EA 		b	.L1000
 15652              	.L985:
 15653              		.loc 1 6099 9 discriminator 6
 15654 0148 10301BE5 		ldr	r3, [fp, #-16]
 15655 014c 233CA0E1 		lsr	r3, r3, #24
 15656 0150 060053E3 		cmp	r3, #6
 15657 0154 6900000A 		beq	.L986
 15658              		.loc 1 6099 9 discriminator 7
 15659 0158 0130E0E3 		mvn	r3, #1
 15660              		.loc 1 6099 9
 15661 015c DD0000EA 		b	.L1000
 15662              	.L983:
 15663              		.loc 1 6099 9 discriminator 2
 15664 0160 08301BE5 		ldr	r3, [fp, #-8]
 15665 0164 0331A0E1 		lsl	r3, r3, #2
 15666 0168 043043E2 		sub	r3, r3, #4
 15667 016c 0B3083E0 		add	r3, r3, fp
 15668 0170 183013E5 		ldr	r3, [r3, #-24]
 15669 0174 2324A0E1 		lsr	r2, r3, #8
 15670 0178 48301BE5 		ldr	r3, [fp, #-72]
 15671 017c 143093E5 		ldr	r3, [r3, #20]
 15672 0180 030052E1 		cmp	r2, r3
 15673 0184 0100003A 		bcc	.L987
 15674              		.loc 1 6099 9 discriminator 8
 15675 0188 0230E0E3 		mvn	r3, #2
 15676              		.loc 1 6099 9
 15677 018c D10000EA 		b	.L1000
 15678              	.L987:
 15679              		.loc 1 6099 9 discriminator 9
 15680 0190 08301BE5 		ldr	r3, [fp, #-8]
 15681 0194 0331A0E1 		lsl	r3, r3, #2
 15682 0198 043043E2 		sub	r3, r3, #4
 15683 019c 0B3083E0 		add	r3, r3, fp
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 385


 15684 01a0 183013E5 		ldr	r3, [r3, #-24]
 15685 01a4 2334A0E1 		lsr	r3, r3, #8
 15686 01a8 8322A0E1 		lsl	r2, r3, #5
 15687 01ac 48301BE5 		ldr	r3, [fp, #-72]
 15688 01b0 0C3093E5 		ldr	r3, [r3, #12]
 15689 01b4 033082E0 		add	r3, r2, r3
 15690 01b8 0320A0E1 		mov	r2, r3
 15691 01bc 08301BE5 		ldr	r3, [fp, #-8]
 15692 01c0 0331A0E1 		lsl	r3, r3, #2
 15693 01c4 043043E2 		sub	r3, r3, #4
 15694 01c8 0B3083E0 		add	r3, r3, fp
 15695 01cc 302003E5 		str	r2, [r3, #-48]
 15696 01d0 08301BE5 		ldr	r3, [fp, #-8]
 15697 01d4 0331A0E1 		lsl	r3, r3, #2
 15698 01d8 043043E2 		sub	r3, r3, #4
 15699 01dc 0B3083E0 		add	r3, r3, fp
 15700 01e0 303013E5 		ldr	r3, [r3, #-48]
 15701 01e4 0300A0E1 		mov	r0, r3
 15702 01e8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15703 01ec 10000BE5 		str	r0, [fp, #-16]
 15704              		.loc 1 6099 9 discriminator 1
 15705 01f0 10301BE5 		ldr	r3, [fp, #-16]
 15706 01f4 FF3803E2 		and	r3, r3, #16711680
 15707 01f8 020853E3 		cmp	r3, #131072
 15708 01fc 0100001A 		bne	.L988
 15709              		.loc 1 6099 9 discriminator 10
 15710 0200 0830E0E3 		mvn	r3, #8
 15711              		.loc 1 6099 9
 15712 0204 B30000EA 		b	.L1000
 15713              	.L988:
 15714              		.loc 1 6099 9 discriminator 11
 15715 0208 10301BE5 		ldr	r3, [fp, #-16]
 15716 020c 233CA0E1 		lsr	r3, r3, #24
 15717 0210 030053E3 		cmp	r3, #3
 15718 0214 0100000A 		beq	.L989
 15719              		.loc 1 6099 9 discriminator 12
 15720 0218 0130E0E3 		mvn	r3, #1
 15721              		.loc 1 6099 9
 15722 021c AD0000EA 		b	.L1000
 15723              	.L989:
 15724              		.loc 1 6099 9 discriminator 13
 15725 0220 08301BE5 		ldr	r3, [fp, #-8]
 15726 0224 0331A0E1 		lsl	r3, r3, #2
 15727 0228 043043E2 		sub	r3, r3, #4
 15728 022c 0B3083E0 		add	r3, r3, fp
 15729 0230 183013E5 		ldr	r3, [r3, #-24]
 15730 0234 7F2003E2 		and	r2, r3, #127
 15731 0238 08301BE5 		ldr	r3, [fp, #-8]
 15732 023c 0331A0E1 		lsl	r3, r3, #2
 15733 0240 043043E2 		sub	r3, r3, #4
 15734 0244 0B3083E0 		add	r3, r3, fp
 15735 0248 303013E5 		ldr	r3, [r3, #-48]
 15736 024c 143093E5 		ldr	r3, [r3, #20]
 15737 0250 030052E1 		cmp	r2, r3
 15738 0254 0100003A 		bcc	.L990
 15739              		.loc 1 6099 9 discriminator 14
 15740 0258 0230E0E3 		mvn	r3, #2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 386


 15741              		.loc 1 6099 9
 15742 025c 9D0000EA 		b	.L1000
 15743              	.L990:
 15744              		.loc 1 6099 9 discriminator 15
 15745 0260 08301BE5 		ldr	r3, [fp, #-8]
 15746 0264 0331A0E1 		lsl	r3, r3, #2
 15747 0268 043043E2 		sub	r3, r3, #4
 15748 026c 0B3083E0 		add	r3, r3, fp
 15749 0270 183013E5 		ldr	r3, [r3, #-24]
 15750 0274 7F3003E2 		and	r3, r3, #127
 15751 0278 8322A0E1 		lsl	r2, r3, #5
 15752 027c 08301BE5 		ldr	r3, [fp, #-8]
 15753 0280 0331A0E1 		lsl	r3, r3, #2
 15754 0284 043043E2 		sub	r3, r3, #4
 15755 0288 0B3083E0 		add	r3, r3, fp
 15756 028c 303013E5 		ldr	r3, [r3, #-48]
 15757 0290 0C3093E5 		ldr	r3, [r3, #12]
 15758 0294 033082E0 		add	r3, r2, r3
 15759 0298 0320A0E1 		mov	r2, r3
 15760 029c 08301BE5 		ldr	r3, [fp, #-8]
 15761 02a0 0331A0E1 		lsl	r3, r3, #2
 15762 02a4 043043E2 		sub	r3, r3, #4
 15763 02a8 0B3083E0 		add	r3, r3, fp
 15764 02ac 302003E5 		str	r2, [r3, #-48]
 15765 02b0 08301BE5 		ldr	r3, [fp, #-8]
 15766 02b4 0331A0E1 		lsl	r3, r3, #2
 15767 02b8 043043E2 		sub	r3, r3, #4
 15768 02bc 0B3083E0 		add	r3, r3, fp
 15769 02c0 303013E5 		ldr	r3, [r3, #-48]
 15770 02c4 0300A0E1 		mov	r0, r3
 15771 02c8 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 15772 02cc 10000BE5 		str	r0, [fp, #-16]
 15773              		.loc 1 6099 9 discriminator 1
 15774 02d0 10301BE5 		ldr	r3, [fp, #-16]
 15775 02d4 FF3803E2 		and	r3, r3, #16711680
 15776 02d8 020853E3 		cmp	r3, #131072
 15777 02dc 0100001A 		bne	.L991
 15778              		.loc 1 6099 9 discriminator 16
 15779 02e0 0830E0E3 		mvn	r3, #8
 15780              		.loc 1 6099 9
 15781 02e4 7B0000EA 		b	.L1000
 15782              	.L991:
 15783              		.loc 1 6099 9 discriminator 17
 15784 02e8 10301BE5 		ldr	r3, [fp, #-16]
 15785 02ec 233CA0E1 		lsr	r3, r3, #24
 15786 02f0 060053E3 		cmp	r3, #6
 15787 02f4 0100000A 		beq	.L986
 15788              		.loc 1 6099 9 discriminator 18
 15789 02f8 0130E0E3 		mvn	r3, #1
 15790              		.loc 1 6099 9
 15791 02fc 750000EA 		b	.L1000
 15792              	.L986:
6100:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Op[Count],Type_Stat);
6101:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6102:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Op[Count],RME_THD_FLAG_SCHED_PRIO);
 15793              		.loc 1 6102 9 is_stmt 1
 15794 0300 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 387


 15795 0304 0331A0E1 		lsl	r3, r3, #2
 15796 0308 043043E2 		sub	r3, r3, #4
 15797 030c 0B3083E0 		add	r3, r3, fp
 15798 0310 303013E5 		ldr	r3, [r3, #-48]
 15799 0314 083093E5 		ldr	r3, [r3, #8]
 15800 0318 083003E2 		and	r3, r3, #8
 15801 031c 000053E3 		cmp	r3, #0
 15802 0320 0100001A 		bne	.L992
 15803              		.loc 1 6102 9 is_stmt 0 discriminator 1
 15804 0324 0630E0E3 		mvn	r3, #6
 15805              		.loc 1 6102 9
 15806 0328 6A0000EA 		b	.L1000
 15807              	.L992:
6103:../../Source/Kernel/rme_kernel.c ****         
6104:../../Source/Kernel/rme_kernel.c ****         /* See if the target thread is already bound to this core. If no, we just quit */
6105:../../Source/Kernel/rme_kernel.c ****         Thread[Count]=(struct RME_Thd_Struct*)(Thd_Op[Count]->Head.Object);
 15808              		.loc 1 6105 54 is_stmt 1
 15809 032c 08301BE5 		ldr	r3, [fp, #-8]
 15810 0330 0331A0E1 		lsl	r3, r3, #2
 15811 0334 043043E2 		sub	r3, r3, #4
 15812 0338 0B3083E0 		add	r3, r3, fp
 15813 033c 303013E5 		ldr	r3, [r3, #-48]
 15814              		.loc 1 6105 67
 15815 0340 0C3093E5 		ldr	r3, [r3, #12]
 15816              		.loc 1 6105 23
 15817 0344 0320A0E1 		mov	r2, r3
 15818              		.loc 1 6105 22
 15819 0348 08301BE5 		ldr	r3, [fp, #-8]
 15820 034c 0331A0E1 		lsl	r3, r3, #2
 15821 0350 043043E2 		sub	r3, r3, #4
 15822 0354 0B3083E0 		add	r3, r3, fp
 15823 0358 3C2003E5 		str	r2, [r3, #-60]
6106:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Local!=Local)
 15824              		.loc 1 6106 18
 15825 035c 08301BE5 		ldr	r3, [fp, #-8]
 15826 0360 0331A0E1 		lsl	r3, r3, #2
 15827 0364 043043E2 		sub	r3, r3, #4
 15828 0368 0B3083E0 		add	r3, r3, fp
 15829 036c 3C3013E5 		ldr	r3, [r3, #-60]
 15830              		.loc 1 6106 32
 15831 0370 143093E5 		ldr	r3, [r3, #20]
 15832              		.loc 1 6106 11
 15833 0374 0C201BE5 		ldr	r2, [fp, #-12]
 15834 0378 030052E1 		cmp	r2, r3
 15835 037c 0100000A 		beq	.L993
6107:../../Source/Kernel/rme_kernel.c ****         {
6108:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6109:../../Source/Kernel/rme_kernel.c **** 
6110:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 15836              		.loc 1 6110 20
 15837 0380 CB30E0E3 		mvn	r3, #203
 15838 0384 530000EA 		b	.L1000
 15839              	.L993:
6111:../../Source/Kernel/rme_kernel.c ****         }
6112:../../Source/Kernel/rme_kernel.c ****         else
6113:../../Source/Kernel/rme_kernel.c ****         {
6114:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 388


6115:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6116:../../Source/Kernel/rme_kernel.c ****         }
6117:../../Source/Kernel/rme_kernel.c ****         
6118:../../Source/Kernel/rme_kernel.c ****         /* See if the priority relationship is correct */
6119:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.Prio_Max<Prio[Count])
 15840              		.loc 1 6119 18
 15841 0388 08301BE5 		ldr	r3, [fp, #-8]
 15842 038c 0331A0E1 		lsl	r3, r3, #2
 15843 0390 043043E2 		sub	r3, r3, #4
 15844 0394 0B3083E0 		add	r3, r3, fp
 15845 0398 3C3013E5 		ldr	r3, [r3, #-60]
 15846              		.loc 1 6119 32
 15847 039c 242093E5 		ldr	r2, [r3, #36]
 15848              		.loc 1 6119 46
 15849 03a0 08301BE5 		ldr	r3, [fp, #-8]
 15850 03a4 0331A0E1 		lsl	r3, r3, #2
 15851 03a8 043043E2 		sub	r3, r3, #4
 15852 03ac 0B3083E0 		add	r3, r3, fp
 15853 03b0 243013E5 		ldr	r3, [r3, #-36]
 15854              		.loc 1 6119 11
 15855 03b4 030052E1 		cmp	r2, r3
 15856 03b8 0100002A 		bcs	.L994
6120:../../Source/Kernel/rme_kernel.c ****         {
6121:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6122:../../Source/Kernel/rme_kernel.c **** 
6123:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 15857              		.loc 1 6123 20
 15858 03bc CC30E0E3 		mvn	r3, #204
 15859 03c0 440000EA 		b	.L1000
 15860              	.L994:
6096:../../Source/Kernel/rme_kernel.c ****     {
 15861              		.loc 1 6096 36 discriminator 2
 15862 03c4 08301BE5 		ldr	r3, [fp, #-8]
 15863 03c8 013083E2 		add	r3, r3, #1
 15864 03cc 08300BE5 		str	r3, [fp, #-8]
 15865              	.L982:
6096:../../Source/Kernel/rme_kernel.c ****     {
 15866              		.loc 1 6096 23 discriminator 1
 15867 03d0 08201BE5 		ldr	r2, [fp, #-8]
 15868 03d4 50301BE5 		ldr	r3, [fp, #-80]
 15869 03d8 030052E1 		cmp	r2, r3
 15870 03dc 28FFFF3A 		bcc	.L995
6124:../../Source/Kernel/rme_kernel.c ****         }
6125:../../Source/Kernel/rme_kernel.c ****         else
6126:../../Source/Kernel/rme_kernel.c ****         {
6127:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6128:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6129:../../Source/Kernel/rme_kernel.c ****         }
6130:../../Source/Kernel/rme_kernel.c ****     }
6131:../../Source/Kernel/rme_kernel.c ****     
6132:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller stack */
6133:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 15871              		.loc 1 6133 5
 15872 03e0 0010A0E3 		mov	r1, #0
 15873 03e4 4C001BE5 		ldr	r0, [fp, #-76]
 15874 03e8 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6134:../../Source/Kernel/rme_kernel.c ****     
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 389


6135:../../Source/Kernel/rme_kernel.c ****     /* Change priority for each thread, and we'll switch to the real highest priority
6136:../../Source/Kernel/rme_kernel.c ****      * thread after all these changes. This can help remove the excessive overhead. */
6137:../../Source/Kernel/rme_kernel.c ****     for(Count=0U;Count<Number;Count++)
 15875              		.loc 1 6137 14
 15876 03ec 0030A0E3 		mov	r3, #0
 15877 03f0 08300BE5 		str	r3, [fp, #-8]
 15878              		.loc 1 6137 5
 15879 03f4 2F0000EA 		b	.L996
 15880              	.L999:
6138:../../Source/Kernel/rme_kernel.c ****     {
6139:../../Source/Kernel/rme_kernel.c ****         /* See if this thread is currently in the runqueue */
6140:../../Source/Kernel/rme_kernel.c ****         if(Thread[Count]->Sched.State==RME_THD_READY)
 15881              		.loc 1 6140 18
 15882 03f8 08301BE5 		ldr	r3, [fp, #-8]
 15883 03fc 0331A0E1 		lsl	r3, r3, #2
 15884 0400 043043E2 		sub	r3, r3, #4
 15885 0404 0B3083E0 		add	r3, r3, fp
 15886 0408 3C3013E5 		ldr	r3, [r3, #-60]
 15887              		.loc 1 6140 32
 15888 040c 1C3093E5 		ldr	r3, [r3, #28]
 15889              		.loc 1 6140 11
 15890 0410 000053E3 		cmp	r3, #0
 15891 0414 1900001A 		bne	.L997
6141:../../Source/Kernel/rme_kernel.c ****         {
6142:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6143:../../Source/Kernel/rme_kernel.c **** 
6144:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue, change priority, and add it back */
6145:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thread[Count]);
 15892              		.loc 1 6145 13
 15893 0418 08301BE5 		ldr	r3, [fp, #-8]
 15894 041c 0331A0E1 		lsl	r3, r3, #2
 15895 0420 043043E2 		sub	r3, r3, #4
 15896 0424 0B3083E0 		add	r3, r3, fp
 15897 0428 3C3013E5 		ldr	r3, [r3, #-60]
 15898 042c 0300A0E1 		mov	r0, r3
 15899 0430 FEFFFFEB 		bl	_RME_Run_Del
6146:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15900              		.loc 1 6146 19
 15901 0434 08301BE5 		ldr	r3, [fp, #-8]
 15902 0438 0331A0E1 		lsl	r3, r3, #2
 15903 043c 043043E2 		sub	r3, r3, #4
 15904 0440 0B3083E0 		add	r3, r3, fp
 15905 0444 3C2013E5 		ldr	r2, [r3, #-60]
 15906              		.loc 1 6146 43
 15907 0448 08301BE5 		ldr	r3, [fp, #-8]
 15908 044c 0331A0E1 		lsl	r3, r3, #2
 15909 0450 043043E2 		sub	r3, r3, #4
 15910 0454 0B3083E0 		add	r3, r3, fp
 15911 0458 243013E5 		ldr	r3, [r3, #-36]
 15912              		.loc 1 6146 38
 15913 045c 203082E5 		str	r3, [r2, #32]
6147:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thread[Count]);
 15914              		.loc 1 6147 13
 15915 0460 08301BE5 		ldr	r3, [fp, #-8]
 15916 0464 0331A0E1 		lsl	r3, r3, #2
 15917 0468 043043E2 		sub	r3, r3, #4
 15918 046c 0B3083E0 		add	r3, r3, fp
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 390


 15919 0470 3C3013E5 		ldr	r3, [r3, #-60]
 15920 0474 0300A0E1 		mov	r0, r3
 15921 0478 FEFFFFEB 		bl	_RME_Run_Ins
 15922 047c 0A0000EA 		b	.L998
 15923              	.L997:
6148:../../Source/Kernel/rme_kernel.c ****         }
6149:../../Source/Kernel/rme_kernel.c ****         /* If it is BLOCKED, TIMEOUT or EXCPEND, changing the number will suffice */
6150:../../Source/Kernel/rme_kernel.c ****         else
6151:../../Source/Kernel/rme_kernel.c ****         {
6152:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6153:../../Source/Kernel/rme_kernel.c **** 
6154:../../Source/Kernel/rme_kernel.c ****             Thread[Count]->Sched.Prio=Prio[Count];
 15924              		.loc 1 6154 19
 15925 0480 08301BE5 		ldr	r3, [fp, #-8]
 15926 0484 0331A0E1 		lsl	r3, r3, #2
 15927 0488 043043E2 		sub	r3, r3, #4
 15928 048c 0B3083E0 		add	r3, r3, fp
 15929 0490 3C2013E5 		ldr	r2, [r3, #-60]
 15930              		.loc 1 6154 43
 15931 0494 08301BE5 		ldr	r3, [fp, #-8]
 15932 0498 0331A0E1 		lsl	r3, r3, #2
 15933 049c 043043E2 		sub	r3, r3, #4
 15934 04a0 0B3083E0 		add	r3, r3, fp
 15935 04a4 243013E5 		ldr	r3, [r3, #-36]
 15936              		.loc 1 6154 38
 15937 04a8 203082E5 		str	r3, [r2, #32]
 15938              	.L998:
6137:../../Source/Kernel/rme_kernel.c ****     {
 15939              		.loc 1 6137 36 discriminator 2
 15940 04ac 08301BE5 		ldr	r3, [fp, #-8]
 15941 04b0 013083E2 		add	r3, r3, #1
 15942 04b4 08300BE5 		str	r3, [fp, #-8]
 15943              	.L996:
6137:../../Source/Kernel/rme_kernel.c ****     {
 15944              		.loc 1 6137 23 discriminator 1
 15945 04b8 08201BE5 		ldr	r2, [fp, #-8]
 15946 04bc 50301BE5 		ldr	r3, [fp, #-80]
 15947 04c0 030052E1 		cmp	r2, r3
 15948 04c4 CBFFFF3A 		bcc	.L999
6155:../../Source/Kernel/rme_kernel.c ****         }
6156:../../Source/Kernel/rme_kernel.c ****     }
6157:../../Source/Kernel/rme_kernel.c ****     
6158:../../Source/Kernel/rme_kernel.c ****     /* Pick the current highest priority thread to run */
6159:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 15949              		.loc 1 6159 5
 15950 04c8 0C101BE5 		ldr	r1, [fp, #-12]
 15951 04cc 4C001BE5 		ldr	r0, [fp, #-76]
 15952 04d0 FEFFFFEB 		bl	_RME_Kern_High
6160:../../Source/Kernel/rme_kernel.c **** 
6161:../../Source/Kernel/rme_kernel.c ****     return 0;
 15953              		.loc 1 6161 12
 15954 04d4 0030A0E3 		mov	r3, #0
 15955              	.L1000:
6162:../../Source/Kernel/rme_kernel.c **** }
 15956              		.loc 1 6162 1
 15957 04d8 0300A0E1 		mov	r0, r3
 15958 04dc 04D04BE2 		sub	sp, fp, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 391


 15959              		.cfi_def_cfa 13, 8
 15960              		@ sp needed
 15961 04e0 0088BDE8 		pop	{fp, pc}
 15962              		.cfi_endproc
 15963              	.LFE61:
 15965              		.section	.text._RME_Thd_Sched_Rcv,"ax",%progbits
 15966              		.align	2
 15967              		.syntax unified
 15968              		.arm
 15970              	_RME_Thd_Sched_Rcv:
 15971              	.LFB62:
6163:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Prio ******************************************/
6164:../../Source/Kernel/rme_kernel.c **** 
6165:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Sched_Rcv ************************************************
6166:../../Source/Kernel/rme_kernel.c **** Description : Try to receive a notification from the scheduler queue. This
6167:../../Source/Kernel/rme_kernel.c ****               can only be called from the same core the thread is on.
6168:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6169:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the scheduler thread. We
6170:../../Source/Kernel/rme_kernel.c ****                                   are going to get timeout or exception
6171:../../Source/Kernel/rme_kernel.c ****                                   notifications for the threads that it is
6172:../../Source/Kernel/rme_kernel.c ****                                   responsible for scheduling. This capability
6173:../../Source/Kernel/rme_kernel.c ****                                   must point to a thread on the same core.
6174:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6175:../../Source/Kernel/rme_kernel.c **** Output      : None.
6176:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the thread ID; or an error code.
6177:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6178:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Sched_Rcv(struct RME_Cap_Cpt* Cpt,
6179:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd)
6180:../../Source/Kernel/rme_kernel.c **** {
 15972              		.loc 1 6180 1
 15973              		.cfi_startproc
 15974              		@ args = 0, pretend = 0, frame = 32
 15975              		@ frame_needed = 1, uses_anonymous_args = 0
 15976 0000 00482DE9 		push	{fp, lr}
 15977              		.cfi_def_cfa_offset 8
 15978              		.cfi_offset 11, -8
 15979              		.cfi_offset 14, -4
 15980 0004 04B08DE2 		add	fp, sp, #4
 15981              		.cfi_def_cfa 11, 4
 15982 0008 20D04DE2 		sub	sp, sp, #32
 15983 000c 20000BE5 		str	r0, [fp, #-32]
 15984 0010 24100BE5 		str	r1, [fp, #-36]
6181:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Op;
6182:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Scheduler;
6183:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
6184:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6185:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Flag;
6186:../../Source/Kernel/rme_kernel.c ****     
6187:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6188:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 15985              		.loc 1 6188 5
 15986 0014 24301BE5 		ldr	r3, [fp, #-36]
 15987 0018 803003E2 		and	r3, r3, #128
 15988 001c 000053E3 		cmp	r3, #0
 15989 0020 1C00001A 		bne	.L1002
 15990              		.loc 1 6188 5 is_stmt 0 discriminator 1
 15991 0024 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 392


 15992 0028 142093E5 		ldr	r2, [r3, #20]
 15993 002c 24301BE5 		ldr	r3, [fp, #-36]
 15994 0030 030052E1 		cmp	r2, r3
 15995 0034 0100008A 		bhi	.L1003
 15996              		.loc 1 6188 5 discriminator 3
 15997 0038 0230E0E3 		mvn	r3, #2
 15998              		.loc 1 6188 5
 15999 003c 970000EA 		b	.L1004
 16000              	.L1003:
 16001              		.loc 1 6188 5 discriminator 4
 16002 0040 24301BE5 		ldr	r3, [fp, #-36]
 16003 0044 8322A0E1 		lsl	r2, r3, #5
 16004 0048 20301BE5 		ldr	r3, [fp, #-32]
 16005 004c 0C3093E5 		ldr	r3, [r3, #12]
 16006 0050 033082E0 		add	r3, r2, r3
 16007 0054 08300BE5 		str	r3, [fp, #-8]
 16008 0058 08301BE5 		ldr	r3, [fp, #-8]
 16009 005c 0300A0E1 		mov	r0, r3
 16010 0060 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16011 0064 10000BE5 		str	r0, [fp, #-16]
 16012              		.loc 1 6188 5 discriminator 1
 16013 0068 10301BE5 		ldr	r3, [fp, #-16]
 16014 006c FF3803E2 		and	r3, r3, #16711680
 16015 0070 020853E3 		cmp	r3, #131072
 16016 0074 0100001A 		bne	.L1005
 16017              		.loc 1 6188 5 discriminator 5
 16018 0078 0830E0E3 		mvn	r3, #8
 16019              		.loc 1 6188 5
 16020 007c 870000EA 		b	.L1004
 16021              	.L1005:
 16022              		.loc 1 6188 5 discriminator 6
 16023 0080 10301BE5 		ldr	r3, [fp, #-16]
 16024 0084 233CA0E1 		lsr	r3, r3, #24
 16025 0088 060053E3 		cmp	r3, #6
 16026 008c 3F00000A 		beq	.L1006
 16027              		.loc 1 6188 5 discriminator 7
 16028 0090 0130E0E3 		mvn	r3, #1
 16029              		.loc 1 6188 5
 16030 0094 810000EA 		b	.L1004
 16031              	.L1002:
 16032              		.loc 1 6188 5 discriminator 2
 16033 0098 24301BE5 		ldr	r3, [fp, #-36]
 16034 009c 2324A0E1 		lsr	r2, r3, #8
 16035 00a0 20301BE5 		ldr	r3, [fp, #-32]
 16036 00a4 143093E5 		ldr	r3, [r3, #20]
 16037 00a8 030052E1 		cmp	r2, r3
 16038 00ac 0100003A 		bcc	.L1007
 16039              		.loc 1 6188 5 discriminator 8
 16040 00b0 0230E0E3 		mvn	r3, #2
 16041              		.loc 1 6188 5
 16042 00b4 790000EA 		b	.L1004
 16043              	.L1007:
 16044              		.loc 1 6188 5 discriminator 9
 16045 00b8 24301BE5 		ldr	r3, [fp, #-36]
 16046 00bc 2334A0E1 		lsr	r3, r3, #8
 16047 00c0 8322A0E1 		lsl	r2, r3, #5
 16048 00c4 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 393


 16049 00c8 0C3093E5 		ldr	r3, [r3, #12]
 16050 00cc 033082E0 		add	r3, r2, r3
 16051 00d0 08300BE5 		str	r3, [fp, #-8]
 16052 00d4 08301BE5 		ldr	r3, [fp, #-8]
 16053 00d8 0300A0E1 		mov	r0, r3
 16054 00dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16055 00e0 10000BE5 		str	r0, [fp, #-16]
 16056              		.loc 1 6188 5 discriminator 1
 16057 00e4 10301BE5 		ldr	r3, [fp, #-16]
 16058 00e8 FF3803E2 		and	r3, r3, #16711680
 16059 00ec 020853E3 		cmp	r3, #131072
 16060 00f0 0100001A 		bne	.L1008
 16061              		.loc 1 6188 5 discriminator 10
 16062 00f4 0830E0E3 		mvn	r3, #8
 16063              		.loc 1 6188 5
 16064 00f8 680000EA 		b	.L1004
 16065              	.L1008:
 16066              		.loc 1 6188 5 discriminator 11
 16067 00fc 10301BE5 		ldr	r3, [fp, #-16]
 16068 0100 233CA0E1 		lsr	r3, r3, #24
 16069 0104 030053E3 		cmp	r3, #3
 16070 0108 0100000A 		beq	.L1009
 16071              		.loc 1 6188 5 discriminator 12
 16072 010c 0130E0E3 		mvn	r3, #1
 16073              		.loc 1 6188 5
 16074 0110 620000EA 		b	.L1004
 16075              	.L1009:
 16076              		.loc 1 6188 5 discriminator 13
 16077 0114 24301BE5 		ldr	r3, [fp, #-36]
 16078 0118 7F2003E2 		and	r2, r3, #127
 16079 011c 08301BE5 		ldr	r3, [fp, #-8]
 16080 0120 143093E5 		ldr	r3, [r3, #20]
 16081 0124 030052E1 		cmp	r2, r3
 16082 0128 0100003A 		bcc	.L1010
 16083              		.loc 1 6188 5 discriminator 14
 16084 012c 0230E0E3 		mvn	r3, #2
 16085              		.loc 1 6188 5
 16086 0130 5A0000EA 		b	.L1004
 16087              	.L1010:
 16088              		.loc 1 6188 5 discriminator 15
 16089 0134 24301BE5 		ldr	r3, [fp, #-36]
 16090 0138 7F3003E2 		and	r3, r3, #127
 16091 013c 8322A0E1 		lsl	r2, r3, #5
 16092 0140 08301BE5 		ldr	r3, [fp, #-8]
 16093 0144 0C3093E5 		ldr	r3, [r3, #12]
 16094 0148 033082E0 		add	r3, r2, r3
 16095 014c 08300BE5 		str	r3, [fp, #-8]
 16096 0150 08301BE5 		ldr	r3, [fp, #-8]
 16097 0154 0300A0E1 		mov	r0, r3
 16098 0158 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16099 015c 10000BE5 		str	r0, [fp, #-16]
 16100              		.loc 1 6188 5 discriminator 1
 16101 0160 10301BE5 		ldr	r3, [fp, #-16]
 16102 0164 FF3803E2 		and	r3, r3, #16711680
 16103 0168 020853E3 		cmp	r3, #131072
 16104 016c 0100001A 		bne	.L1011
 16105              		.loc 1 6188 5 discriminator 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 394


 16106 0170 0830E0E3 		mvn	r3, #8
 16107              		.loc 1 6188 5
 16108 0174 490000EA 		b	.L1004
 16109              	.L1011:
 16110              		.loc 1 6188 5 discriminator 17
 16111 0178 10301BE5 		ldr	r3, [fp, #-16]
 16112 017c 233CA0E1 		lsr	r3, r3, #24
 16113 0180 060053E3 		cmp	r3, #6
 16114 0184 0100000A 		beq	.L1006
 16115              		.loc 1 6188 5 discriminator 18
 16116 0188 0130E0E3 		mvn	r3, #1
 16117              		.loc 1 6188 5
 16118 018c 430000EA 		b	.L1004
 16119              	.L1006:
6189:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Op,Type_Stat);
6190:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6191:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Op,RME_THD_FLAG_SCHED_RCV);
 16120              		.loc 1 6191 5 is_stmt 1
 16121 0190 08301BE5 		ldr	r3, [fp, #-8]
 16122 0194 083093E5 		ldr	r3, [r3, #8]
 16123 0198 203003E2 		and	r3, r3, #32
 16124 019c 000053E3 		cmp	r3, #0
 16125 01a0 0100001A 		bne	.L1012
 16126              		.loc 1 6191 5 is_stmt 0 discriminator 1
 16127 01a4 0630E0E3 		mvn	r3, #6
 16128              		.loc 1 6191 5
 16129 01a8 3C0000EA 		b	.L1004
 16130              	.L1012:
6192:../../Source/Kernel/rme_kernel.c ****     
6193:../../Source/Kernel/rme_kernel.c ****     /* Check if we are on the same core with the target thread */
6194:../../Source/Kernel/rme_kernel.c ****     Scheduler=(struct RME_Thd_Struct*)Thd_Op->Head.Object;
 16131              		.loc 1 6194 51 is_stmt 1
 16132 01ac 08301BE5 		ldr	r3, [fp, #-8]
 16133 01b0 0C3093E5 		ldr	r3, [r3, #12]
 16134              		.loc 1 6194 14
 16135 01b4 14300BE5 		str	r3, [fp, #-20]
6195:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Local!=RME_CPU_LOCAL())
 16136              		.loc 1 6195 24
 16137 01b8 14301BE5 		ldr	r3, [fp, #-20]
 16138 01bc 142093E5 		ldr	r2, [r3, #20]
 16139              		.loc 1 6195 7
 16140 01c0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16141 01c4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16142 01c8 030052E1 		cmp	r2, r3
 16143 01cc 0100000A 		beq	.L1013
6196:../../Source/Kernel/rme_kernel.c ****     {
6197:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6198:../../Source/Kernel/rme_kernel.c **** 
6199:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16144              		.loc 1 6199 16
 16145 01d0 CB30E0E3 		mvn	r3, #203
 16146 01d4 310000EA 		b	.L1004
 16147              	.L1013:
6200:../../Source/Kernel/rme_kernel.c ****     }
6201:../../Source/Kernel/rme_kernel.c ****     else
6202:../../Source/Kernel/rme_kernel.c ****     {
6203:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 395


6204:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6205:../../Source/Kernel/rme_kernel.c ****     }
6206:../../Source/Kernel/rme_kernel.c ****     
6207:../../Source/Kernel/rme_kernel.c ****     /* Check if there are any notifications */
6208:../../Source/Kernel/rme_kernel.c ****     if(Scheduler->Sched.Event.Next==&(Scheduler->Sched.Event))
 16148              		.loc 1 6208 30
 16149 01d8 14301BE5 		ldr	r3, [fp, #-20]
 16150 01dc 3C2093E5 		ldr	r2, [r3, #60]
 16151              		.loc 1 6208 37
 16152 01e0 14301BE5 		ldr	r3, [fp, #-20]
 16153 01e4 3C3083E2 		add	r3, r3, #60
 16154              		.loc 1 6208 7
 16155 01e8 030052E1 		cmp	r2, r3
 16156 01ec 0100001A 		bne	.L1014
6209:../../Source/Kernel/rme_kernel.c ****     {
6210:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6211:../../Source/Kernel/rme_kernel.c **** 
6212:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_NOTIF;
 16157              		.loc 1 6212 16
 16158 01f0 CE30E0E3 		mvn	r3, #206
 16159 01f4 290000EA 		b	.L1004
 16160              	.L1014:
6213:../../Source/Kernel/rme_kernel.c ****     }
6214:../../Source/Kernel/rme_kernel.c ****     else
6215:../../Source/Kernel/rme_kernel.c ****     {
6216:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6217:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6218:../../Source/Kernel/rme_kernel.c ****     }
6219:../../Source/Kernel/rme_kernel.c ****     
6220:../../Source/Kernel/rme_kernel.c ****     /* Return one notification and delete it from the notification list */
6221:../../Source/Kernel/rme_kernel.c ****     Thread=(struct RME_Thd_Struct*)(Scheduler->Sched.Event.Next-1U);
 16161              		.loc 1 6221 59
 16162 01f8 14301BE5 		ldr	r3, [fp, #-20]
 16163 01fc 3C3093E5 		ldr	r3, [r3, #60]
 16164              		.loc 1 6221 11
 16165 0200 083043E2 		sub	r3, r3, #8
 16166 0204 18300BE5 		str	r3, [fp, #-24]
6222:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Thread->Sched.Notif.Prev,Thread->Sched.Notif.Next);
 16167              		.loc 1 6222 5
 16168 0208 18301BE5 		ldr	r3, [fp, #-24]
 16169 020c 0C2093E5 		ldr	r2, [r3, #12]
 16170 0210 18301BE5 		ldr	r3, [fp, #-24]
 16171 0214 083093E5 		ldr	r3, [r3, #8]
 16172 0218 0310A0E1 		mov	r1, r3
 16173 021c 0200A0E1 		mov	r0, r2
 16174 0220 FEFFFFEB 		bl	_RME_List_Del
6223:../../Source/Kernel/rme_kernel.c ****     /* We need to do this because we are using this to detect whether the notification is sent */
6224:../../Source/Kernel/rme_kernel.c ****     _RME_List_Crt(&(Thread->Sched.Notif));
 16175              		.loc 1 6224 5
 16176 0224 18301BE5 		ldr	r3, [fp, #-24]
 16177 0228 083083E2 		add	r3, r3, #8
 16178 022c 0300A0E1 		mov	r0, r3
 16179 0230 FEFFFFEB 		bl	_RME_List_Crt
6225:../../Source/Kernel/rme_kernel.c ****     
6226:../../Source/Kernel/rme_kernel.c ****     /* Exception pending */
6227:../../Source/Kernel/rme_kernel.c ****     if(Thread->Sched.State==RME_THD_EXCPEND)
 16180              		.loc 1 6227 21
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 396


 16181 0234 18301BE5 		ldr	r3, [fp, #-24]
 16182 0238 1C3093E5 		ldr	r3, [r3, #28]
 16183              		.loc 1 6227 7
 16184 023c 030053E3 		cmp	r3, #3
 16185 0240 0900001A 		bne	.L1015
6228:../../Source/Kernel/rme_kernel.c ****     {
6229:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6230:../../Source/Kernel/rme_kernel.c ****         
6231:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_EXCPEND_FLAG;
 16186              		.loc 1 6231 13
 16187 0244 0131A0E3 		mov	r3, #1073741824
 16188 0248 0C300BE5 		str	r3, [fp, #-12]
6232:../../Source/Kernel/rme_kernel.c ****         
6233:../../Source/Kernel/rme_kernel.c ****         /* Is it also out of timeslice? */
6234:../../Source/Kernel/rme_kernel.c ****         if(Thread->Sched.Slice==0U)
 16189              		.loc 1 6234 25
 16190 024c 18301BE5 		ldr	r3, [fp, #-24]
 16191 0250 183093E5 		ldr	r3, [r3, #24]
 16192              		.loc 1 6234 11
 16193 0254 000053E3 		cmp	r3, #0
 16194 0258 0C00001A 		bne	.L1016
6235:../../Source/Kernel/rme_kernel.c ****         {
6236:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6237:../../Source/Kernel/rme_kernel.c ****             
6238:../../Source/Kernel/rme_kernel.c ****             Flag|=RME_THD_TIMEOUT_FLAG;
 16195              		.loc 1 6238 17
 16196 025c 0C301BE5 		ldr	r3, [fp, #-12]
 16197 0260 023283E3 		orr	r3, r3, #536870912
 16198 0264 0C300BE5 		str	r3, [fp, #-12]
 16199 0268 080000EA 		b	.L1016
 16200              	.L1015:
6239:../../Source/Kernel/rme_kernel.c ****         }
6240:../../Source/Kernel/rme_kernel.c ****         else
6241:../../Source/Kernel/rme_kernel.c ****         {
6242:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6243:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6244:../../Source/Kernel/rme_kernel.c ****         }
6245:../../Source/Kernel/rme_kernel.c ****     }
6246:../../Source/Kernel/rme_kernel.c ****     /* Timeout */
6247:../../Source/Kernel/rme_kernel.c ****     else if(Thread->Sched.State==RME_THD_TIMEOUT)
 16201              		.loc 1 6247 26
 16202 026c 18301BE5 		ldr	r3, [fp, #-24]
 16203 0270 1C3093E5 		ldr	r3, [r3, #28]
 16204              		.loc 1 6247 12
 16205 0274 020053E3 		cmp	r3, #2
 16206 0278 0200001A 		bne	.L1017
6248:../../Source/Kernel/rme_kernel.c ****     {
6249:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6250:../../Source/Kernel/rme_kernel.c ****         
6251:../../Source/Kernel/rme_kernel.c ****         Flag=RME_THD_TIMEOUT_FLAG;
 16207              		.loc 1 6251 13
 16208 027c 0232A0E3 		mov	r3, #536870912
 16209 0280 0C300BE5 		str	r3, [fp, #-12]
 16210 0284 010000EA 		b	.L1016
 16211              	.L1017:
6252:../../Source/Kernel/rme_kernel.c ****     }
6253:../../Source/Kernel/rme_kernel.c ****     /* Spurious notification, cause eliminated before this sched rcv */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 397


6254:../../Source/Kernel/rme_kernel.c ****     else
6255:../../Source/Kernel/rme_kernel.c ****     {
6256:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6257:../../Source/Kernel/rme_kernel.c ****         
6258:../../Source/Kernel/rme_kernel.c ****         Flag=0U;
 16212              		.loc 1 6258 13
 16213 0288 0030A0E3 		mov	r3, #0
 16214 028c 0C300BE5 		str	r3, [fp, #-12]
 16215              	.L1016:
6259:../../Source/Kernel/rme_kernel.c ****     }
6260:../../Source/Kernel/rme_kernel.c ****     
6261:../../Source/Kernel/rme_kernel.c ****     /* Return the notification TID with the flags */
6262:../../Source/Kernel/rme_kernel.c ****     return (rme_ret_t)(Thread->Sched.TID|Flag);
 16216              		.loc 1 6262 37
 16217 0290 18301BE5 		ldr	r3, [fp, #-24]
 16218 0294 102093E5 		ldr	r2, [r3, #16]
 16219              		.loc 1 6262 41
 16220 0298 0C301BE5 		ldr	r3, [fp, #-12]
 16221 029c 033082E1 		orr	r3, r2, r3
 16222              	.L1004:
6263:../../Source/Kernel/rme_kernel.c **** }
 16223              		.loc 1 6263 1
 16224 02a0 0300A0E1 		mov	r0, r3
 16225 02a4 04D04BE2 		sub	sp, fp, #4
 16226              		.cfi_def_cfa 13, 8
 16227              		@ sp needed
 16228 02a8 0088BDE8 		pop	{fp, pc}
 16229              		.cfi_endproc
 16230              	.LFE62:
 16232              		.section	.rodata
 16233 036d 000000   		.align	2
 16234              	.LC45:
 16235 0370 0D0A4361 		.ascii	"\015\012Cap_Thd_Dst \000"
 16235      705F5468 
 16235      645F4473 
 16235      742000
 16236 037f 00       		.align	2
 16237              	.LC46:
 16238 0380 0D0A4361 		.ascii	"\015\012Cap_Thd_Src \000"
 16238      705F5468 
 16238      645F5372 
 16238      632000
 16239 038f 00       		.align	2
 16240              	.LC47:
 16241 0390 0D0A5469 		.ascii	"\015\012Time \000"
 16241      6D652000 
 16242              		.align	2
 16243              	.LC48:
 16244 0398 0D0A7265 		.ascii	"\015\012reach 1\000"
 16244      61636820 
 16244      3100
 16245 03a2 0000     		.align	2
 16246              	.LC49:
 16247 03a4 0D0A7265 		.ascii	"\015\012reach 2\000"
 16247      61636820 
 16247      3200
 16248 03ae 0000     		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 398


 16249              	.LC50:
 16250 03b0 0D0A7265 		.ascii	"\015\012reach 3\000"
 16250      61636820 
 16250      3300
 16251 03ba 0000     		.align	2
 16252              	.LC51:
 16253 03bc 0D0A7265 		.ascii	"\015\012reach 4\000"
 16253      61636820 
 16253      3400
 16254 03c6 0000     		.align	2
 16255              	.LC52:
 16256 03c8 0D0A5468 		.ascii	"\015\012Thd_Src\000"
 16256      645F5372 
 16256      6300
 16257 03d2 0000     		.align	2
 16258              	.LC53:
 16259 03d4 0D0A524D 		.ascii	"\015\012RME_ERR_PTH_INVSTATE\000"
 16259      455F4552 
 16259      525F5054 
 16259      485F494E 
 16259      56535441 
 16260              		.section	.text._RME_Thd_Time_Xfer,"ax",%progbits
 16261              		.align	2
 16262              		.syntax unified
 16263              		.arm
 16265              	_RME_Thd_Time_Xfer:
 16266              	.LFB63:
6264:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Sched_Rcv *******************************************/
6265:../../Source/Kernel/rme_kernel.c **** 
6266:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Time_Xfer ************************************************
6267:../../Source/Kernel/rme_kernel.c **** Description : Transfer time from one thread to another. This can only be called
6268:../../Source/Kernel/rme_kernel.c ****               from the core that the thread is on, and the the two threads
6269:../../Source/Kernel/rme_kernel.c ****               involved in the time transfer must be on the same core.
6270:../../Source/Kernel/rme_kernel.c ****               If the time transfered is more than or equal to what the source
6271:../../Source/Kernel/rme_kernel.c ****               have, the source will be out of time or blocked. If the source is
6272:../../Source/Kernel/rme_kernel.c ****               both out of time and blocked, we do not send the notification;
6273:../../Source/Kernel/rme_kernel.c ****               Instead, we send the notification when the receive endpoint
6274:../../Source/Kernel/rme_kernel.c ****               actually receive something.
6275:../../Source/Kernel/rme_kernel.c ****               It is possible to transfer time to threads have a lower priority,
6276:../../Source/Kernel/rme_kernel.c ****               and it is also possible to transfer time to threads that have a
6277:../../Source/Kernel/rme_kernel.c ****               higher priority. In the latter case, and if the source is
6278:../../Source/Kernel/rme_kernel.c ****               currently running, a preemption will occur. However, it is not
6279:../../Source/Kernel/rme_kernel.c ****               allowed to transfer time to a thread with higher maximum priority,
6280:../../Source/Kernel/rme_kernel.c ****               and this guarantees that the quality of time can only degrade.
6281:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of threads in the system:
6282:../../Source/Kernel/rme_kernel.c ****               1. Init threads - They are created at boot-time and have infinite
6283:../../Source/Kernel/rme_kernel.c ****                                 budget.
6284:../../Source/Kernel/rme_kernel.c ****               2. Infinite threads - They are created later but have infinite
6285:../../Source/Kernel/rme_kernel.c ****                                     budget.
6286:../../Source/Kernel/rme_kernel.c ****               3. Normal threads - They are created later and have a finite
6287:../../Source/Kernel/rme_kernel.c ****                                   budget.
6288:../../Source/Kernel/rme_kernel.c ****               There are 3 kinds of transfer in the system:
6289:../../Source/Kernel/rme_kernel.c ****               1. Normal transfers - They transfer a finite budget.
6290:../../Source/Kernel/rme_kernel.c ****               2. Infinite transfers - They attempt to transfer an infinite
6291:../../Source/Kernel/rme_kernel.c ****                                       budget but will not revoke the timeslices
6292:../../Source/Kernel/rme_kernel.c ****                                       of the source if the source have infinite
6293:../../Source/Kernel/rme_kernel.c ****                                       budget.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 399


6294:../../Source/Kernel/rme_kernel.c ****               3. Revoking transfers - They attempt to transfer an infinite
6295:../../Source/Kernel/rme_kernel.c ****                                       budget but will revoke the timeslices of
6296:../../Source/Kernel/rme_kernel.c ****                                       the source if the source is an infinite
6297:../../Source/Kernel/rme_kernel.c ****                                       thread.
6298:../../Source/Kernel/rme_kernel.c ****               Normal budget transferring rules:
6299:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6300:../../Source/Kernel/rme_kernel.c ****                 Nom   |   From   |     Init     |   Infinite   |    Normal
6301:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6302:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      T-
6303:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6304:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      T-
6305:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6306:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -A      |      -A      |      TA
6307:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6308:../../Source/Kernel/rme_kernel.c ****               Infinite budget transferring rules:
6309:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6310:../../Source/Kernel/rme_kernel.c ****                 Inf   |   From   |     Init     |   Infinite   |    Normal
6311:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6312:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      --      |      S-
6313:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6314:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      --      |      S-
6315:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6316:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      -I      |      TA
6317:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6318:../../Source/Kernel/rme_kernel.c ****               Revoking budget transferring rules:
6319:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6320:../../Source/Kernel/rme_kernel.c ****                 Rev   |   From   |     Init     |   Infinite   |    Normal
6321:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6322:../../Source/Kernel/rme_kernel.c ****                  To   |   Init   |      --      |      S-      |      S-
6323:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6324:../../Source/Kernel/rme_kernel.c ****                       | Infinite |      --      |      S-      |      S-
6325:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6326:../../Source/Kernel/rme_kernel.c ****                       |  Normal  |      -I      |      SI      |      TA
6327:../../Source/Kernel/rme_kernel.c ****               -----------------------------------------------------------------
6328:../../Source/Kernel/rme_kernel.c ****               Notations:
6329:../../Source/Kernel/rme_kernel.c ****               -:Nothing will happen on source/destination.
6330:../../Source/Kernel/rme_kernel.c ****               T:Source timeout if all transferred.
6331:../../Source/Kernel/rme_kernel.c ****               S:Source will definitely timeout.
6332:../../Source/Kernel/rme_kernel.c ****               A:Destination accept if not overflow.
6333:../../Source/Kernel/rme_kernel.c ****               I:Destination will definitely become an infinite thread.
6334:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6335:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
6336:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Dst - The destination thread.
6337:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6338:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd_Src - The source thread.
6339:../../Source/Kernel/rme_kernel.c ****                                       2-Level.
6340:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Time - The time to transfer, in slices.
6341:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INIT_TIME for revoking transfer.
6342:../../Source/Kernel/rme_kernel.c ****                                Use RME_THD_INF_TIME for infinite trasnfer.
6343:../../Source/Kernel/rme_kernel.c **** Output      : None.
6344:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, the destination time amount; or an
6345:../../Source/Kernel/rme_kernel.c ****                           error code.
6346:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6347:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Time_Xfer(struct RME_Cap_Cpt* Cpt,
6348:../../Source/Kernel/rme_kernel.c ****                                     struct RME_Reg_Struct* Reg,
6349:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Dst,
6350:../../Source/Kernel/rme_kernel.c ****                                     rme_cid_t Cap_Thd_Src,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 400


6351:../../Source/Kernel/rme_kernel.c ****                                     rme_ptr_t Time)
6352:../../Source/Kernel/rme_kernel.c **** {
 16267              		.loc 1 6352 1
 16268              		.cfi_startproc
 16269              		@ args = 4, pretend = 0, frame = 48
 16270              		@ frame_needed = 1, uses_anonymous_args = 0
 16271 0000 00482DE9 		push	{fp, lr}
 16272              		.cfi_def_cfa_offset 8
 16273              		.cfi_offset 11, -8
 16274              		.cfi_offset 14, -4
 16275 0004 04B08DE2 		add	fp, sp, #4
 16276              		.cfi_def_cfa 11, 4
 16277 0008 30D04DE2 		sub	sp, sp, #48
 16278 000c 28000BE5 		str	r0, [fp, #-40]
 16279 0010 2C100BE5 		str	r1, [fp, #-44]
 16280 0014 30200BE5 		str	r2, [fp, #-48]
 16281 0018 34300BE5 		str	r3, [fp, #-52]
6353:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Dst_Op;
6354:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Src_Op;
6355:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Dst;
6356:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Src;
6357:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6358:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Time_Xfer;
6359:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6360:../../Source/Kernel/rme_kernel.c ****     
6361:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd_Dst ");
 16282              		.loc 1 6361 5
 16283 001c 000000E3 		movw	r0, #:lower16:.LC45
 16284 0020 000040E3 		movt	r0, #:upper16:.LC45
 16285 0024 FEFFFFEB 		bl	RME_Str_Print
6362:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Cap_Thd_Dst);
 16286              		.loc 1 6362 5
 16287 0028 30001BE5 		ldr	r0, [fp, #-48]
 16288 002c FEFFFFEB 		bl	RME_Int_Print
6363:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nCap_Thd_Src ");
 16289              		.loc 1 6363 5
 16290 0030 000000E3 		movw	r0, #:lower16:.LC46
 16291 0034 000040E3 		movt	r0, #:upper16:.LC46
 16292 0038 FEFFFFEB 		bl	RME_Str_Print
6364:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Cap_Thd_Src);
 16293              		.loc 1 6364 5
 16294 003c 34001BE5 		ldr	r0, [fp, #-52]
 16295 0040 FEFFFFEB 		bl	RME_Int_Print
6365:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nTime ");
 16296              		.loc 1 6365 5
 16297 0044 000000E3 		movw	r0, #:lower16:.LC47
 16298 0048 000040E3 		movt	r0, #:upper16:.LC47
 16299 004c FEFFFFEB 		bl	RME_Str_Print
6366:../../Source/Kernel/rme_kernel.c ****     RME_DBG_I(Time);
 16300              		.loc 1 6366 5
 16301 0050 04309BE5 		ldr	r3, [fp, #4]
 16302 0054 0300A0E1 		mov	r0, r3
 16303 0058 FEFFFFEB 		bl	RME_Int_Print
6367:../../Source/Kernel/rme_kernel.c ****     /* We may allow transferring infinite time here */
6368:../../Source/Kernel/rme_kernel.c ****     if(Time==0U)
 16304              		.loc 1 6368 7
 16305 005c 04309BE5 		ldr	r3, [fp, #4]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 401


 16306 0060 000053E3 		cmp	r3, #0
 16307 0064 0100001A 		bne	.L1019
6369:../../Source/Kernel/rme_kernel.c ****     {
6370:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6371:../../Source/Kernel/rme_kernel.c **** 
6372:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16308              		.loc 1 6372 16
 16309 0068 CB30E0E3 		mvn	r3, #203
 16310 006c 8F0100EA 		b	.L1020
 16311              	.L1019:
6373:../../Source/Kernel/rme_kernel.c ****     }
6374:../../Source/Kernel/rme_kernel.c ****     else
6375:../../Source/Kernel/rme_kernel.c ****     {
6376:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6377:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6378:../../Source/Kernel/rme_kernel.c ****     }
6379:../../Source/Kernel/rme_kernel.c ****     
6380:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6381:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Dst,RME_CAP_TYPE_THD,
 16312              		.loc 1 6381 5
 16313 0070 30301BE5 		ldr	r3, [fp, #-48]
 16314 0074 803003E2 		and	r3, r3, #128
 16315 0078 000053E3 		cmp	r3, #0
 16316 007c 1C00001A 		bne	.L1021
 16317              		.loc 1 6381 5 is_stmt 0 discriminator 1
 16318 0080 28301BE5 		ldr	r3, [fp, #-40]
 16319 0084 142093E5 		ldr	r2, [r3, #20]
 16320 0088 30301BE5 		ldr	r3, [fp, #-48]
 16321 008c 030052E1 		cmp	r2, r3
 16322 0090 0100008A 		bhi	.L1022
 16323              		.loc 1 6381 5 discriminator 3
 16324 0094 0230E0E3 		mvn	r3, #2
 16325              		.loc 1 6381 5
 16326 0098 840100EA 		b	.L1020
 16327              	.L1022:
 16328              		.loc 1 6381 5 discriminator 4
 16329 009c 30301BE5 		ldr	r3, [fp, #-48]
 16330 00a0 8322A0E1 		lsl	r2, r3, #5
 16331 00a4 28301BE5 		ldr	r3, [fp, #-40]
 16332 00a8 0C3093E5 		ldr	r3, [r3, #12]
 16333 00ac 033082E0 		add	r3, r2, r3
 16334 00b0 08300BE5 		str	r3, [fp, #-8]
 16335 00b4 08301BE5 		ldr	r3, [fp, #-8]
 16336 00b8 0300A0E1 		mov	r0, r3
 16337 00bc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16338 00c0 14000BE5 		str	r0, [fp, #-20]
 16339              		.loc 1 6381 5 discriminator 1
 16340 00c4 14301BE5 		ldr	r3, [fp, #-20]
 16341 00c8 FF3803E2 		and	r3, r3, #16711680
 16342 00cc 020853E3 		cmp	r3, #131072
 16343 00d0 0100001A 		bne	.L1023
 16344              		.loc 1 6381 5 discriminator 5
 16345 00d4 0830E0E3 		mvn	r3, #8
 16346              		.loc 1 6381 5
 16347 00d8 740100EA 		b	.L1020
 16348              	.L1023:
 16349              		.loc 1 6381 5 discriminator 6
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 402


 16350 00dc 14301BE5 		ldr	r3, [fp, #-20]
 16351 00e0 233CA0E1 		lsr	r3, r3, #24
 16352 00e4 060053E3 		cmp	r3, #6
 16353 00e8 3F00000A 		beq	.L1024
 16354              		.loc 1 6381 5 discriminator 7
 16355 00ec 0130E0E3 		mvn	r3, #1
 16356              		.loc 1 6381 5
 16357 00f0 6E0100EA 		b	.L1020
 16358              	.L1021:
 16359              		.loc 1 6381 5 discriminator 2
 16360 00f4 30301BE5 		ldr	r3, [fp, #-48]
 16361 00f8 2324A0E1 		lsr	r2, r3, #8
 16362 00fc 28301BE5 		ldr	r3, [fp, #-40]
 16363 0100 143093E5 		ldr	r3, [r3, #20]
 16364 0104 030052E1 		cmp	r2, r3
 16365 0108 0100003A 		bcc	.L1025
 16366              		.loc 1 6381 5 discriminator 8
 16367 010c 0230E0E3 		mvn	r3, #2
 16368              		.loc 1 6381 5
 16369 0110 660100EA 		b	.L1020
 16370              	.L1025:
 16371              		.loc 1 6381 5 discriminator 9
 16372 0114 30301BE5 		ldr	r3, [fp, #-48]
 16373 0118 2334A0E1 		lsr	r3, r3, #8
 16374 011c 8322A0E1 		lsl	r2, r3, #5
 16375 0120 28301BE5 		ldr	r3, [fp, #-40]
 16376 0124 0C3093E5 		ldr	r3, [r3, #12]
 16377 0128 033082E0 		add	r3, r2, r3
 16378 012c 08300BE5 		str	r3, [fp, #-8]
 16379 0130 08301BE5 		ldr	r3, [fp, #-8]
 16380 0134 0300A0E1 		mov	r0, r3
 16381 0138 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16382 013c 14000BE5 		str	r0, [fp, #-20]
 16383              		.loc 1 6381 5 discriminator 1
 16384 0140 14301BE5 		ldr	r3, [fp, #-20]
 16385 0144 FF3803E2 		and	r3, r3, #16711680
 16386 0148 020853E3 		cmp	r3, #131072
 16387 014c 0100001A 		bne	.L1026
 16388              		.loc 1 6381 5 discriminator 10
 16389 0150 0830E0E3 		mvn	r3, #8
 16390              		.loc 1 6381 5
 16391 0154 550100EA 		b	.L1020
 16392              	.L1026:
 16393              		.loc 1 6381 5 discriminator 11
 16394 0158 14301BE5 		ldr	r3, [fp, #-20]
 16395 015c 233CA0E1 		lsr	r3, r3, #24
 16396 0160 030053E3 		cmp	r3, #3
 16397 0164 0100000A 		beq	.L1027
 16398              		.loc 1 6381 5 discriminator 12
 16399 0168 0130E0E3 		mvn	r3, #1
 16400              		.loc 1 6381 5
 16401 016c 4F0100EA 		b	.L1020
 16402              	.L1027:
 16403              		.loc 1 6381 5 discriminator 13
 16404 0170 30301BE5 		ldr	r3, [fp, #-48]
 16405 0174 7F2003E2 		and	r2, r3, #127
 16406 0178 08301BE5 		ldr	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 403


 16407 017c 143093E5 		ldr	r3, [r3, #20]
 16408 0180 030052E1 		cmp	r2, r3
 16409 0184 0100003A 		bcc	.L1028
 16410              		.loc 1 6381 5 discriminator 14
 16411 0188 0230E0E3 		mvn	r3, #2
 16412              		.loc 1 6381 5
 16413 018c 470100EA 		b	.L1020
 16414              	.L1028:
 16415              		.loc 1 6381 5 discriminator 15
 16416 0190 30301BE5 		ldr	r3, [fp, #-48]
 16417 0194 7F3003E2 		and	r3, r3, #127
 16418 0198 8322A0E1 		lsl	r2, r3, #5
 16419 019c 08301BE5 		ldr	r3, [fp, #-8]
 16420 01a0 0C3093E5 		ldr	r3, [r3, #12]
 16421 01a4 033082E0 		add	r3, r2, r3
 16422 01a8 08300BE5 		str	r3, [fp, #-8]
 16423 01ac 08301BE5 		ldr	r3, [fp, #-8]
 16424 01b0 0300A0E1 		mov	r0, r3
 16425 01b4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16426 01b8 14000BE5 		str	r0, [fp, #-20]
 16427              		.loc 1 6381 5 discriminator 1
 16428 01bc 14301BE5 		ldr	r3, [fp, #-20]
 16429 01c0 FF3803E2 		and	r3, r3, #16711680
 16430 01c4 020853E3 		cmp	r3, #131072
 16431 01c8 0100001A 		bne	.L1029
 16432              		.loc 1 6381 5 discriminator 16
 16433 01cc 0830E0E3 		mvn	r3, #8
 16434              		.loc 1 6381 5
 16435 01d0 360100EA 		b	.L1020
 16436              	.L1029:
 16437              		.loc 1 6381 5 discriminator 17
 16438 01d4 14301BE5 		ldr	r3, [fp, #-20]
 16439 01d8 233CA0E1 		lsr	r3, r3, #24
 16440 01dc 060053E3 		cmp	r3, #6
 16441 01e0 0100000A 		beq	.L1024
 16442              		.loc 1 6381 5 discriminator 18
 16443 01e4 0130E0E3 		mvn	r3, #1
 16444              		.loc 1 6381 5
 16445 01e8 300100EA 		b	.L1020
 16446              	.L1024:
6382:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Dst_Op,Type_Stat);
6383:../../Source/Kernel/rme_kernel.c ****                    RME_DBG_S("\r\nreach 1");
 16447              		.loc 1 6383 20 is_stmt 1
 16448 01ec 000000E3 		movw	r0, #:lower16:.LC48
 16449 01f0 000040E3 		movt	r0, #:upper16:.LC48
 16450 01f4 FEFFFFEB 		bl	RME_Str_Print
6384:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Thd_Src,RME_CAP_TYPE_THD,
 16451              		.loc 1 6384 5
 16452 01f8 34301BE5 		ldr	r3, [fp, #-52]
 16453 01fc 803003E2 		and	r3, r3, #128
 16454 0200 000053E3 		cmp	r3, #0
 16455 0204 1C00001A 		bne	.L1030
 16456              		.loc 1 6384 5 is_stmt 0 discriminator 1
 16457 0208 28301BE5 		ldr	r3, [fp, #-40]
 16458 020c 142093E5 		ldr	r2, [r3, #20]
 16459 0210 34301BE5 		ldr	r3, [fp, #-52]
 16460 0214 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 404


 16461 0218 0100008A 		bhi	.L1031
 16462              		.loc 1 6384 5 discriminator 3
 16463 021c 0230E0E3 		mvn	r3, #2
 16464              		.loc 1 6384 5
 16465 0220 220100EA 		b	.L1020
 16466              	.L1031:
 16467              		.loc 1 6384 5 discriminator 4
 16468 0224 34301BE5 		ldr	r3, [fp, #-52]
 16469 0228 8322A0E1 		lsl	r2, r3, #5
 16470 022c 28301BE5 		ldr	r3, [fp, #-40]
 16471 0230 0C3093E5 		ldr	r3, [r3, #12]
 16472 0234 033082E0 		add	r3, r2, r3
 16473 0238 0C300BE5 		str	r3, [fp, #-12]
 16474 023c 0C301BE5 		ldr	r3, [fp, #-12]
 16475 0240 0300A0E1 		mov	r0, r3
 16476 0244 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16477 0248 14000BE5 		str	r0, [fp, #-20]
 16478              		.loc 1 6384 5 discriminator 1
 16479 024c 14301BE5 		ldr	r3, [fp, #-20]
 16480 0250 FF3803E2 		and	r3, r3, #16711680
 16481 0254 020853E3 		cmp	r3, #131072
 16482 0258 0100001A 		bne	.L1032
 16483              		.loc 1 6384 5 discriminator 5
 16484 025c 0830E0E3 		mvn	r3, #8
 16485              		.loc 1 6384 5
 16486 0260 120100EA 		b	.L1020
 16487              	.L1032:
 16488              		.loc 1 6384 5 discriminator 6
 16489 0264 14301BE5 		ldr	r3, [fp, #-20]
 16490 0268 233CA0E1 		lsr	r3, r3, #24
 16491 026c 060053E3 		cmp	r3, #6
 16492 0270 3F00000A 		beq	.L1033
 16493              		.loc 1 6384 5 discriminator 7
 16494 0274 0130E0E3 		mvn	r3, #1
 16495              		.loc 1 6384 5
 16496 0278 0C0100EA 		b	.L1020
 16497              	.L1030:
 16498              		.loc 1 6384 5 discriminator 2
 16499 027c 34301BE5 		ldr	r3, [fp, #-52]
 16500 0280 2324A0E1 		lsr	r2, r3, #8
 16501 0284 28301BE5 		ldr	r3, [fp, #-40]
 16502 0288 143093E5 		ldr	r3, [r3, #20]
 16503 028c 030052E1 		cmp	r2, r3
 16504 0290 0100003A 		bcc	.L1034
 16505              		.loc 1 6384 5 discriminator 8
 16506 0294 0230E0E3 		mvn	r3, #2
 16507              		.loc 1 6384 5
 16508 0298 040100EA 		b	.L1020
 16509              	.L1034:
 16510              		.loc 1 6384 5 discriminator 9
 16511 029c 34301BE5 		ldr	r3, [fp, #-52]
 16512 02a0 2334A0E1 		lsr	r3, r3, #8
 16513 02a4 8322A0E1 		lsl	r2, r3, #5
 16514 02a8 28301BE5 		ldr	r3, [fp, #-40]
 16515 02ac 0C3093E5 		ldr	r3, [r3, #12]
 16516 02b0 033082E0 		add	r3, r2, r3
 16517 02b4 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 405


 16518 02b8 0C301BE5 		ldr	r3, [fp, #-12]
 16519 02bc 0300A0E1 		mov	r0, r3
 16520 02c0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16521 02c4 14000BE5 		str	r0, [fp, #-20]
 16522              		.loc 1 6384 5 discriminator 1
 16523 02c8 14301BE5 		ldr	r3, [fp, #-20]
 16524 02cc FF3803E2 		and	r3, r3, #16711680
 16525 02d0 020853E3 		cmp	r3, #131072
 16526 02d4 0100001A 		bne	.L1035
 16527              		.loc 1 6384 5 discriminator 10
 16528 02d8 0830E0E3 		mvn	r3, #8
 16529              		.loc 1 6384 5
 16530 02dc F30000EA 		b	.L1020
 16531              	.L1035:
 16532              		.loc 1 6384 5 discriminator 11
 16533 02e0 14301BE5 		ldr	r3, [fp, #-20]
 16534 02e4 233CA0E1 		lsr	r3, r3, #24
 16535 02e8 030053E3 		cmp	r3, #3
 16536 02ec 0100000A 		beq	.L1036
 16537              		.loc 1 6384 5 discriminator 12
 16538 02f0 0130E0E3 		mvn	r3, #1
 16539              		.loc 1 6384 5
 16540 02f4 ED0000EA 		b	.L1020
 16541              	.L1036:
 16542              		.loc 1 6384 5 discriminator 13
 16543 02f8 34301BE5 		ldr	r3, [fp, #-52]
 16544 02fc 7F2003E2 		and	r2, r3, #127
 16545 0300 0C301BE5 		ldr	r3, [fp, #-12]
 16546 0304 143093E5 		ldr	r3, [r3, #20]
 16547 0308 030052E1 		cmp	r2, r3
 16548 030c 0100003A 		bcc	.L1037
 16549              		.loc 1 6384 5 discriminator 14
 16550 0310 0230E0E3 		mvn	r3, #2
 16551              		.loc 1 6384 5
 16552 0314 E50000EA 		b	.L1020
 16553              	.L1037:
 16554              		.loc 1 6384 5 discriminator 15
 16555 0318 34301BE5 		ldr	r3, [fp, #-52]
 16556 031c 7F3003E2 		and	r3, r3, #127
 16557 0320 8322A0E1 		lsl	r2, r3, #5
 16558 0324 0C301BE5 		ldr	r3, [fp, #-12]
 16559 0328 0C3093E5 		ldr	r3, [r3, #12]
 16560 032c 033082E0 		add	r3, r2, r3
 16561 0330 0C300BE5 		str	r3, [fp, #-12]
 16562 0334 0C301BE5 		ldr	r3, [fp, #-12]
 16563 0338 0300A0E1 		mov	r0, r3
 16564 033c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16565 0340 14000BE5 		str	r0, [fp, #-20]
 16566              		.loc 1 6384 5 discriminator 1
 16567 0344 14301BE5 		ldr	r3, [fp, #-20]
 16568 0348 FF3803E2 		and	r3, r3, #16711680
 16569 034c 020853E3 		cmp	r3, #131072
 16570 0350 0100001A 		bne	.L1038
 16571              		.loc 1 6384 5 discriminator 16
 16572 0354 0830E0E3 		mvn	r3, #8
 16573              		.loc 1 6384 5
 16574 0358 D40000EA 		b	.L1020
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 406


 16575              	.L1038:
 16576              		.loc 1 6384 5 discriminator 17
 16577 035c 14301BE5 		ldr	r3, [fp, #-20]
 16578 0360 233CA0E1 		lsr	r3, r3, #24
 16579 0364 060053E3 		cmp	r3, #6
 16580 0368 0100000A 		beq	.L1033
 16581              		.loc 1 6384 5 discriminator 18
 16582 036c 0130E0E3 		mvn	r3, #1
 16583              		.loc 1 6384 5
 16584 0370 CE0000EA 		b	.L1020
 16585              	.L1033:
6385:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Thd*,Thd_Src_Op,Type_Stat);
6386:../../Source/Kernel/rme_kernel.c ****                    RME_DBG_S("\r\nreach 2");
 16586              		.loc 1 6386 20 is_stmt 1
 16587 0374 000000E3 		movw	r0, #:lower16:.LC49
 16588 0378 000040E3 		movt	r0, #:upper16:.LC49
 16589 037c FEFFFFEB 		bl	RME_Str_Print
6387:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
6388:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Dst_Op,RME_THD_FLAG_XFER_DST);
 16590              		.loc 1 6388 5
 16591 0380 08301BE5 		ldr	r3, [fp, #-8]
 16592 0384 083093E5 		ldr	r3, [r3, #8]
 16593 0388 803003E2 		and	r3, r3, #128
 16594 038c 000053E3 		cmp	r3, #0
 16595 0390 0100001A 		bne	.L1039
 16596              		.loc 1 6388 5 is_stmt 0 discriminator 1
 16597 0394 0630E0E3 		mvn	r3, #6
 16598              		.loc 1 6388 5
 16599 0398 C40000EA 		b	.L1020
 16600              	.L1039:
6389:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 3");
 16601              		.loc 1 6389 5 is_stmt 1
 16602 039c 000000E3 		movw	r0, #:lower16:.LC50
 16603 03a0 000040E3 		movt	r0, #:upper16:.LC50
 16604 03a4 FEFFFFEB 		bl	RME_Str_Print
6390:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Thd_Src_Op,RME_THD_FLAG_XFER_SRC);
 16605              		.loc 1 6390 5
 16606 03a8 0C301BE5 		ldr	r3, [fp, #-12]
 16607 03ac 083093E5 		ldr	r3, [r3, #8]
 16608 03b0 403003E2 		and	r3, r3, #64
 16609 03b4 000053E3 		cmp	r3, #0
 16610 03b8 0100001A 		bne	.L1040
 16611              		.loc 1 6390 5 is_stmt 0 discriminator 1
 16612 03bc 0630E0E3 		mvn	r3, #6
 16613              		.loc 1 6390 5
 16614 03c0 BA0000EA 		b	.L1020
 16615              	.L1040:
6391:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 4");
 16616              		.loc 1 6391 5 is_stmt 1
 16617 03c4 000000E3 		movw	r0, #:lower16:.LC51
 16618 03c8 000040E3 		movt	r0, #:upper16:.LC51
 16619 03cc FEFFFFEB 		bl	RME_Str_Print
6392:../../Source/Kernel/rme_kernel.c **** 
6393:../../Source/Kernel/rme_kernel.c ****     /* Check if the two threads are on the core that is accordance with what we are on */
6394:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16620              		.loc 1 6394 10
 16621 03d0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 407


 16622 03d4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16623 03d8 18300BE5 		str	r3, [fp, #-24]
6395:../../Source/Kernel/rme_kernel.c ****     Thd_Src=RME_CAP_GETOBJ(Thd_Src_Op,struct RME_Thd_Struct*);
 16624              		.loc 1 6395 13
 16625 03dc 0C301BE5 		ldr	r3, [fp, #-12]
 16626 03e0 0C3093E5 		ldr	r3, [r3, #12]
 16627              		.loc 1 6395 12
 16628 03e4 1C300BE5 		str	r3, [fp, #-28]
6396:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nreach 5");
 16629              		.loc 1 6396 5
 16630 03e8 000000E3 		movw	r0, #:lower16:.LC41
 16631 03ec 000040E3 		movt	r0, #:upper16:.LC41
 16632 03f0 FEFFFFEB 		bl	RME_Str_Print
6397:../../Source/Kernel/rme_kernel.c ****     RME_DBG_S("\r\nThd_Src");
 16633              		.loc 1 6397 5
 16634 03f4 000000E3 		movw	r0, #:lower16:.LC52
 16635 03f8 000040E3 		movt	r0, #:upper16:.LC52
 16636 03fc FEFFFFEB 		bl	RME_Str_Print
6398:../../Source/Kernel/rme_kernel.c ****     RME_DBG_H(Thd_Src);
 16637              		.loc 1 6398 5
 16638 0400 1C301BE5 		ldr	r3, [fp, #-28]
 16639 0404 0300A0E1 		mov	r0, r3
 16640 0408 FEFFFFEB 		bl	RME_Hex_Print
6399:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Local!=Local)
 16641              		.loc 1 6399 22
 16642 040c 1C301BE5 		ldr	r3, [fp, #-28]
 16643 0410 143093E5 		ldr	r3, [r3, #20]
 16644              		.loc 1 6399 7
 16645 0414 18201BE5 		ldr	r2, [fp, #-24]
 16646 0418 030052E1 		cmp	r2, r3
 16647 041c 0400000A 		beq	.L1041
6400:../../Source/Kernel/rme_kernel.c ****     {
6401:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6402:../../Source/Kernel/rme_kernel.c ****         RME_DBG_S("\r\nRME_ERR_PTH_INVSTATE");
 16648              		.loc 1 6402 9
 16649 0420 000000E3 		movw	r0, #:lower16:.LC53
 16650 0424 000040E3 		movt	r0, #:upper16:.LC53
 16651 0428 FEFFFFEB 		bl	RME_Str_Print
6403:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16652              		.loc 1 6403 16
 16653 042c CB30E0E3 		mvn	r3, #203
 16654 0430 9E0000EA 		b	.L1020
 16655              	.L1041:
6404:../../Source/Kernel/rme_kernel.c ****     }
6405:../../Source/Kernel/rme_kernel.c ****     else
6406:../../Source/Kernel/rme_kernel.c ****     {
6407:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6408:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6409:../../Source/Kernel/rme_kernel.c ****     }
6410:../../Source/Kernel/rme_kernel.c ****     
6411:../../Source/Kernel/rme_kernel.c ****     /* Check if we have slices to transfer; 0 implies TIMEOUT, BLOCKED, or EXCPEND */
6412:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16656              		.loc 1 6412 22
 16657 0434 1C301BE5 		ldr	r3, [fp, #-28]
 16658 0438 183093E5 		ldr	r3, [r3, #24]
 16659              		.loc 1 6412 7
 16660 043c 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 408


 16661 0440 0100001A 		bne	.L1042
6413:../../Source/Kernel/rme_kernel.c ****     {
6414:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6415:../../Source/Kernel/rme_kernel.c **** 
6416:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16662              		.loc 1 6416 16
 16663 0444 CB30E0E3 		mvn	r3, #203
 16664 0448 980000EA 		b	.L1020
 16665              	.L1042:
6417:../../Source/Kernel/rme_kernel.c ****     }
6418:../../Source/Kernel/rme_kernel.c ****     else
6419:../../Source/Kernel/rme_kernel.c ****     {
6420:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6421:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6422:../../Source/Kernel/rme_kernel.c ****     }
6423:../../Source/Kernel/rme_kernel.c ****     
6424:../../Source/Kernel/rme_kernel.c ****     Thd_Dst=RME_CAP_GETOBJ(Thd_Dst_Op,struct RME_Thd_Struct*);
 16666              		.loc 1 6424 13
 16667 044c 08301BE5 		ldr	r3, [fp, #-8]
 16668 0450 0C3093E5 		ldr	r3, [r3, #12]
 16669              		.loc 1 6424 12
 16670 0454 20300BE5 		str	r3, [fp, #-32]
6425:../../Source/Kernel/rme_kernel.c ****     
6426:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.Local!=Local)
 16671              		.loc 1 6426 22
 16672 0458 20301BE5 		ldr	r3, [fp, #-32]
 16673 045c 143093E5 		ldr	r3, [r3, #20]
 16674              		.loc 1 6426 7
 16675 0460 18201BE5 		ldr	r2, [fp, #-24]
 16676 0464 030052E1 		cmp	r2, r3
 16677 0468 0100000A 		beq	.L1043
6427:../../Source/Kernel/rme_kernel.c ****     {
6428:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6429:../../Source/Kernel/rme_kernel.c **** 
6430:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_INVSTATE;
 16678              		.loc 1 6430 16
 16679 046c CB30E0E3 		mvn	r3, #203
 16680 0470 8E0000EA 		b	.L1020
 16681              	.L1043:
6431:../../Source/Kernel/rme_kernel.c ****     }
6432:../../Source/Kernel/rme_kernel.c ****     else
6433:../../Source/Kernel/rme_kernel.c ****     {
6434:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6435:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6436:../../Source/Kernel/rme_kernel.c ****     }
6437:../../Source/Kernel/rme_kernel.c **** 
6438:../../Source/Kernel/rme_kernel.c ****     /* The destination must never have higher maximum priority than the source,
6439:../../Source/Kernel/rme_kernel.c ****      * unless it is a init thread which could be used as a black hole */
6440:../../Source/Kernel/rme_kernel.c ****     if((Thd_Src->Sched.Prio_Max<Thd_Dst->Sched.Prio_Max)&&
 16682              		.loc 1 6440 23
 16683 0474 1C301BE5 		ldr	r3, [fp, #-28]
 16684 0478 242093E5 		ldr	r2, [r3, #36]
 16685              		.loc 1 6440 47
 16686 047c 20301BE5 		ldr	r3, [fp, #-32]
 16687 0480 243093E5 		ldr	r3, [r3, #36]
 16688              		.loc 1 6440 7
 16689 0484 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 409


 16690 0488 0500002A 		bcs	.L1044
6441:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16691              		.loc 1 6441 23
 16692 048c 20301BE5 		ldr	r3, [fp, #-32]
 16693 0490 183093E5 		ldr	r3, [r3, #24]
6440:../../Source/Kernel/rme_kernel.c ****        (Thd_Dst->Sched.Slice!=RME_THD_INIT_TIME))
 16694              		.loc 1 6440 57 discriminator 1
 16695 0494 060173E3 		cmn	r3, #-2147483647
 16696 0498 0100000A 		beq	.L1044
6442:../../Source/Kernel/rme_kernel.c ****     {
6443:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6444:../../Source/Kernel/rme_kernel.c **** 
6445:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_PTH_PRIO;
 16697              		.loc 1 6445 16
 16698 049c CC30E0E3 		mvn	r3, #204
 16699 04a0 820000EA 		b	.L1020
 16700              	.L1044:
6446:../../Source/Kernel/rme_kernel.c ****     }
6447:../../Source/Kernel/rme_kernel.c ****     else
6448:../../Source/Kernel/rme_kernel.c ****     {
6449:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6450:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6451:../../Source/Kernel/rme_kernel.c ****     }
6452:../../Source/Kernel/rme_kernel.c ****     
6453:../../Source/Kernel/rme_kernel.c ****     /* Delegating from a normal thread */
6454:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice<RME_THD_INF_TIME)
 16701              		.loc 1 6454 22
 16702 04a4 1C301BE5 		ldr	r3, [fp, #-28]
 16703 04a8 183093E5 		ldr	r3, [r3, #24]
 16704              		.loc 1 6454 7
 16705 04ac 0E0173E3 		cmn	r3, #-2147483645
 16706 04b0 3200008A 		bhi	.L1045
6455:../../Source/Kernel/rme_kernel.c ****     {
6456:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6457:../../Source/Kernel/rme_kernel.c **** 
6458:../../Source/Kernel/rme_kernel.c ****         /* Delegate all our time */
6459:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16707              		.loc 1 6459 11
 16708 04b4 04309BE5 		ldr	r3, [fp, #4]
 16709 04b8 0E0173E3 		cmn	r3, #-2147483645
 16710 04bc 0300009A 		bls	.L1046
6460:../../Source/Kernel/rme_kernel.c ****         {
6461:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6462:../../Source/Kernel/rme_kernel.c **** 
6463:../../Source/Kernel/rme_kernel.c ****             Time_Xfer=Thd_Src->Sched.Slice;
 16711              		.loc 1 6463 22
 16712 04c0 1C301BE5 		ldr	r3, [fp, #-28]
 16713 04c4 183093E5 		ldr	r3, [r3, #24]
 16714 04c8 10300BE5 		str	r3, [fp, #-16]
 16715 04cc 0A0000EA 		b	.L1047
 16716              	.L1046:
6464:../../Source/Kernel/rme_kernel.c ****         }
6465:../../Source/Kernel/rme_kernel.c ****         /* Delegate some time, if not sufficient, clean up the source time */
6466:../../Source/Kernel/rme_kernel.c ****         else
6467:../../Source/Kernel/rme_kernel.c ****         {
6468:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6469:../../Source/Kernel/rme_kernel.c ****             
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 410


6470:../../Source/Kernel/rme_kernel.c ****             if(Thd_Src->Sched.Slice>Time)
 16717              		.loc 1 6470 30
 16718 04d0 1C301BE5 		ldr	r3, [fp, #-28]
 16719 04d4 183093E5 		ldr	r3, [r3, #24]
 16720              		.loc 1 6470 15
 16721 04d8 04209BE5 		ldr	r2, [fp, #4]
 16722 04dc 030052E1 		cmp	r2, r3
 16723 04e0 0200002A 		bcs	.L1048
6471:../../Source/Kernel/rme_kernel.c ****             {
6472:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6473:../../Source/Kernel/rme_kernel.c **** 
6474:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Time;
 16724              		.loc 1 6474 26
 16725 04e4 04309BE5 		ldr	r3, [fp, #4]
 16726 04e8 10300BE5 		str	r3, [fp, #-16]
 16727 04ec 020000EA 		b	.L1047
 16728              	.L1048:
6475:../../Source/Kernel/rme_kernel.c ****             }
6476:../../Source/Kernel/rme_kernel.c ****             else
6477:../../Source/Kernel/rme_kernel.c ****             {
6478:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6479:../../Source/Kernel/rme_kernel.c **** 
6480:../../Source/Kernel/rme_kernel.c ****                 Time_Xfer=Thd_Src->Sched.Slice;
 16729              		.loc 1 6480 26
 16730 04f0 1C301BE5 		ldr	r3, [fp, #-28]
 16731 04f4 183093E5 		ldr	r3, [r3, #24]
 16732 04f8 10300BE5 		str	r3, [fp, #-16]
 16733              	.L1047:
6481:../../Source/Kernel/rme_kernel.c ****             }
6482:../../Source/Kernel/rme_kernel.c ****         }
6483:../../Source/Kernel/rme_kernel.c ****         
6484:../../Source/Kernel/rme_kernel.c ****         /* See if we are transferring to an infinite budget thread. If yes, we
6485:../../Source/Kernel/rme_kernel.c ****          * are revoking timeslices; If not, this is a finite transfer */
6486:../../Source/Kernel/rme_kernel.c ****         if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16734              		.loc 1 6486 26
 16735 04fc 20301BE5 		ldr	r3, [fp, #-32]
 16736 0500 183093E5 		ldr	r3, [r3, #24]
 16737              		.loc 1 6486 11
 16738 0504 0E0173E3 		cmn	r3, #-2147483645
 16739 0508 1500008A 		bhi	.L1049
6487:../../Source/Kernel/rme_kernel.c ****         {
6488:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6489:../../Source/Kernel/rme_kernel.c ****             
6490:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time_Xfer);
 16740              		.loc 1 6490 13
 16741 050c 20301BE5 		ldr	r3, [fp, #-32]
 16742 0510 182093E5 		ldr	r2, [r3, #24]
 16743 0514 10301BE5 		ldr	r3, [fp, #-16]
 16744 0518 033082E0 		add	r3, r2, r3
 16745 051c 0E0173E3 		cmn	r3, #-2147483645
 16746 0520 0700008A 		bhi	.L1050
 16747              		.loc 1 6490 13 is_stmt 0 discriminator 2
 16748 0524 20301BE5 		ldr	r3, [fp, #-32]
 16749 0528 182093E5 		ldr	r2, [r3, #24]
 16750 052c 10301BE5 		ldr	r3, [fp, #-16]
 16751 0530 032082E0 		add	r2, r2, r3
 16752 0534 20301BE5 		ldr	r3, [fp, #-32]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 411


 16753 0538 183093E5 		ldr	r3, [r3, #24]
 16754 053c 030052E1 		cmp	r2, r3
 16755 0540 0100002A 		bcs	.L1051
 16756              	.L1050:
 16757              		.loc 1 6490 13 discriminator 3
 16758 0544 CF30E0E3 		mvn	r3, #207
 16759              		.loc 1 6490 13
 16760 0548 580000EA 		b	.L1020
 16761              	.L1051:
6491:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time_Xfer;
 16762              		.loc 1 6491 27 is_stmt 1
 16763 054c 20301BE5 		ldr	r3, [fp, #-32]
 16764 0550 182093E5 		ldr	r2, [r3, #24]
 16765              		.loc 1 6491 33
 16766 0554 10301BE5 		ldr	r3, [fp, #-16]
 16767 0558 032082E0 		add	r2, r2, r3
 16768 055c 20301BE5 		ldr	r3, [fp, #-32]
 16769 0560 182083E5 		str	r2, [r3, #24]
 16770              	.L1049:
6492:../../Source/Kernel/rme_kernel.c ****         }
6493:../../Source/Kernel/rme_kernel.c ****         else
6494:../../Source/Kernel/rme_kernel.c ****         {
6495:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6496:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6497:../../Source/Kernel/rme_kernel.c ****         }
6498:../../Source/Kernel/rme_kernel.c ****         
6499:../../Source/Kernel/rme_kernel.c ****         Thd_Src->Sched.Slice-=Time_Xfer;
 16771              		.loc 1 6499 23
 16772 0564 1C301BE5 		ldr	r3, [fp, #-28]
 16773 0568 182093E5 		ldr	r2, [r3, #24]
 16774              		.loc 1 6499 29
 16775 056c 10301BE5 		ldr	r3, [fp, #-16]
 16776 0570 032042E0 		sub	r2, r2, r3
 16777 0574 1C301BE5 		ldr	r3, [fp, #-28]
 16778 0578 182083E5 		str	r2, [r3, #24]
 16779 057c 2A0000EA 		b	.L1052
 16780              	.L1045:
6500:../../Source/Kernel/rme_kernel.c ****     }
6501:../../Source/Kernel/rme_kernel.c ****     /* Delegating from init or infinite thread */
6502:../../Source/Kernel/rme_kernel.c ****     else
6503:../../Source/Kernel/rme_kernel.c ****     {
6504:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6505:../../Source/Kernel/rme_kernel.c **** 
6506:../../Source/Kernel/rme_kernel.c ****         /* Infinite transfer to the destination */
6507:../../Source/Kernel/rme_kernel.c ****         if(Time>=RME_THD_INF_TIME)
 16781              		.loc 1 6507 11
 16782 0580 04309BE5 		ldr	r3, [fp, #4]
 16783 0584 0E0173E3 		cmn	r3, #-2147483645
 16784 0588 1100009A 		bls	.L1053
6508:../../Source/Kernel/rme_kernel.c ****         {
6509:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6510:../../Source/Kernel/rme_kernel.c **** 
6511:../../Source/Kernel/rme_kernel.c ****             /* This transfer will revoke the infinite budget */
6512:../../Source/Kernel/rme_kernel.c ****             if(Time==RME_THD_INIT_TIME)
 16785              		.loc 1 6512 15
 16786 058c 04309BE5 		ldr	r3, [fp, #4]
 16787 0590 060173E3 		cmn	r3, #-2147483647
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 412


 16788 0594 0600001A 		bne	.L1054
6513:../../Source/Kernel/rme_kernel.c ****             {
6514:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6515:../../Source/Kernel/rme_kernel.c ****                 
6516:../../Source/Kernel/rme_kernel.c ****                 /* Will not revoke, source is an init thread */
6517:../../Source/Kernel/rme_kernel.c ****                 if(Thd_Src->Sched.Slice!=RME_THD_INIT_TIME)
 16789              		.loc 1 6517 34
 16790 0598 1C301BE5 		ldr	r3, [fp, #-28]
 16791 059c 183093E5 		ldr	r3, [r3, #24]
 16792              		.loc 1 6517 19
 16793 05a0 060173E3 		cmn	r3, #-2147483647
 16794 05a4 0200000A 		beq	.L1054
6518:../../Source/Kernel/rme_kernel.c ****                 {
6519:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6520:../../Source/Kernel/rme_kernel.c ****                     
6521:../../Source/Kernel/rme_kernel.c ****                     Thd_Src->Sched.Slice=0U;
 16795              		.loc 1 6521 41
 16796 05a8 1C301BE5 		ldr	r3, [fp, #-28]
 16797 05ac 0020A0E3 		mov	r2, #0
 16798 05b0 182083E5 		str	r2, [r3, #24]
 16799              	.L1054:
6522:../../Source/Kernel/rme_kernel.c ****                 }
6523:../../Source/Kernel/rme_kernel.c ****                 else
6524:../../Source/Kernel/rme_kernel.c ****                 {
6525:../../Source/Kernel/rme_kernel.c ****                     RME_COV_MARKER();
6526:../../Source/Kernel/rme_kernel.c ****                     /* No action required */
6527:../../Source/Kernel/rme_kernel.c ****                 }
6528:../../Source/Kernel/rme_kernel.c ****             }
6529:../../Source/Kernel/rme_kernel.c ****             else
6530:../../Source/Kernel/rme_kernel.c ****             {
6531:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6532:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6533:../../Source/Kernel/rme_kernel.c ****             }
6534:../../Source/Kernel/rme_kernel.c ****             
6535:../../Source/Kernel/rme_kernel.c ****             /* Set destination to infinite if it is not an init thread */
6536:../../Source/Kernel/rme_kernel.c ****             if(Thd_Dst->Sched.Slice<RME_THD_INF_TIME)
 16800              		.loc 1 6536 30
 16801 05b4 20301BE5 		ldr	r3, [fp, #-32]
 16802 05b8 183093E5 		ldr	r3, [r3, #24]
 16803              		.loc 1 6536 15
 16804 05bc 0E0173E3 		cmn	r3, #-2147483645
 16805 05c0 1900008A 		bhi	.L1052
6537:../../Source/Kernel/rme_kernel.c ****             {
6538:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6539:../../Source/Kernel/rme_kernel.c ****                 
6540:../../Source/Kernel/rme_kernel.c ****                 Thd_Dst->Sched.Slice=RME_THD_INF_TIME;
 16806              		.loc 1 6540 37
 16807 05c4 20301BE5 		ldr	r3, [fp, #-32]
 16808 05c8 0621E0E3 		mvn	r2, #-2147483647
 16809 05cc 182083E5 		str	r2, [r3, #24]
 16810 05d0 150000EA 		b	.L1052
 16811              	.L1053:
6541:../../Source/Kernel/rme_kernel.c ****             }
6542:../../Source/Kernel/rme_kernel.c ****             else
6543:../../Source/Kernel/rme_kernel.c ****             {
6544:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6545:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 413


6546:../../Source/Kernel/rme_kernel.c ****             }
6547:../../Source/Kernel/rme_kernel.c ****         }
6548:../../Source/Kernel/rme_kernel.c ****         else
6549:../../Source/Kernel/rme_kernel.c ****         {
6550:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6551:../../Source/Kernel/rme_kernel.c **** 
6552:../../Source/Kernel/rme_kernel.c ****             /* Just increase the budget of the other thread - check first */
6553:../../Source/Kernel/rme_kernel.c ****             RME_TIME_CHECK(Thd_Dst->Sched.Slice,Time);
 16812              		.loc 1 6553 13
 16813 05d4 20301BE5 		ldr	r3, [fp, #-32]
 16814 05d8 182093E5 		ldr	r2, [r3, #24]
 16815 05dc 04309BE5 		ldr	r3, [fp, #4]
 16816 05e0 033082E0 		add	r3, r2, r3
 16817 05e4 0E0173E3 		cmn	r3, #-2147483645
 16818 05e8 0700008A 		bhi	.L1055
 16819              		.loc 1 6553 13 is_stmt 0 discriminator 2
 16820 05ec 20301BE5 		ldr	r3, [fp, #-32]
 16821 05f0 182093E5 		ldr	r2, [r3, #24]
 16822 05f4 04309BE5 		ldr	r3, [fp, #4]
 16823 05f8 032082E0 		add	r2, r2, r3
 16824 05fc 20301BE5 		ldr	r3, [fp, #-32]
 16825 0600 183093E5 		ldr	r3, [r3, #24]
 16826 0604 030052E1 		cmp	r2, r3
 16827 0608 0100002A 		bcs	.L1056
 16828              	.L1055:
 16829              		.loc 1 6553 13 discriminator 3
 16830 060c CF30E0E3 		mvn	r3, #207
 16831              		.loc 1 6553 13
 16832 0610 260000EA 		b	.L1020
 16833              	.L1056:
6554:../../Source/Kernel/rme_kernel.c ****             Thd_Dst->Sched.Slice+=Time;
 16834              		.loc 1 6554 27 is_stmt 1
 16835 0614 20301BE5 		ldr	r3, [fp, #-32]
 16836 0618 182093E5 		ldr	r2, [r3, #24]
 16837              		.loc 1 6554 33
 16838 061c 04309BE5 		ldr	r3, [fp, #4]
 16839 0620 032082E0 		add	r2, r2, r3
 16840 0624 20301BE5 		ldr	r3, [fp, #-32]
 16841 0628 182083E5 		str	r2, [r3, #24]
 16842              	.L1052:
6555:../../Source/Kernel/rme_kernel.c ****         }
6556:../../Source/Kernel/rme_kernel.c ****     }
6557:../../Source/Kernel/rme_kernel.c **** 
6558:../../Source/Kernel/rme_kernel.c ****     /* Is the source time used up? If yes, delete it from the run queue, and notify its 
6559:../../Source/Kernel/rme_kernel.c ****      * parent. If it is not in the run queue, The state of the source must be BLOCKED. */
6560:../../Source/Kernel/rme_kernel.c ****     if(Thd_Src->Sched.Slice==0U)
 16843              		.loc 1 6560 22
 16844 062c 1C301BE5 		ldr	r3, [fp, #-28]
 16845 0630 183093E5 		ldr	r3, [r3, #24]
 16846              		.loc 1 6560 7
 16847 0634 000053E3 		cmp	r3, #0
 16848 0638 0A00001A 		bne	.L1057
6561:../../Source/Kernel/rme_kernel.c ****     {
6562:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6563:../../Source/Kernel/rme_kernel.c ****         
6564:../../Source/Kernel/rme_kernel.c ****         /* If it is blocked or have an exception, we neither change its state nor send
6565:../../Source/Kernel/rme_kernel.c ****          * the scheduler notification. It will be sent when the thread unblocks, or gets
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 414


6566:../../Source/Kernel/rme_kernel.c ****          * its exception handled. The rule of the thumb is, we only send scheduler 
6567:../../Source/Kernel/rme_kernel.c ****          * notifications when the thread really enter TIMEOUT or EXCPEND state. */
6568:../../Source/Kernel/rme_kernel.c ****         if(Thd_Src->Sched.State==RME_THD_READY)
 16849              		.loc 1 6568 26
 16850 063c 1C301BE5 		ldr	r3, [fp, #-28]
 16851 0640 1C3093E5 		ldr	r3, [r3, #28]
 16852              		.loc 1 6568 11
 16853 0644 000053E3 		cmp	r3, #0
 16854 0648 0600001A 		bne	.L1057
6569:../../Source/Kernel/rme_kernel.c ****         {
6570:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6571:../../Source/Kernel/rme_kernel.c ****             
6572:../../Source/Kernel/rme_kernel.c ****             /* Remove from runqueue */
6573:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Src);
 16855              		.loc 1 6573 13
 16856 064c 1C001BE5 		ldr	r0, [fp, #-28]
 16857 0650 FEFFFFEB 		bl	_RME_Run_Del
6574:../../Source/Kernel/rme_kernel.c ****             
6575:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6576:../../Source/Kernel/rme_kernel.c ****             Thd_Src->Sched.State=RME_THD_TIMEOUT;
 16858              		.loc 1 6576 33
 16859 0654 1C301BE5 		ldr	r3, [fp, #-28]
 16860 0658 0220A0E3 		mov	r2, #2
 16861 065c 1C2083E5 		str	r2, [r3, #28]
6577:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Src);
 16862              		.loc 1 6577 13
 16863 0660 1C001BE5 		ldr	r0, [fp, #-28]
 16864 0664 FEFFFFEB 		bl	_RME_Run_Notif
 16865              	.L1057:
6578:../../Source/Kernel/rme_kernel.c ****         }
6579:../../Source/Kernel/rme_kernel.c ****         else
6580:../../Source/Kernel/rme_kernel.c ****         {
6581:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6582:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6583:../../Source/Kernel/rme_kernel.c ****         }
6584:../../Source/Kernel/rme_kernel.c ****     }
6585:../../Source/Kernel/rme_kernel.c ****     else
6586:../../Source/Kernel/rme_kernel.c ****     {
6587:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6588:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6589:../../Source/Kernel/rme_kernel.c ****     }
6590:../../Source/Kernel/rme_kernel.c **** 
6591:../../Source/Kernel/rme_kernel.c ****     /* Now save the system call return value to the caller 
6592:../../Source/Kernel/rme_kernel.c ****      * stack - how much time the destination have now */
6593:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,(rme_ret_t)(Thd_Dst->Sched.Slice));
 16866              		.loc 1 6593 56
 16867 0668 20301BE5 		ldr	r3, [fp, #-32]
 16868 066c 183093E5 		ldr	r3, [r3, #24]
 16869              		.loc 1 6593 5
 16870 0670 0310A0E1 		mov	r1, r3
 16871 0674 2C001BE5 		ldr	r0, [fp, #-44]
 16872 0678 FEFFFFEB 		bl	__RME_Svc_Retval_Set
6594:../../Source/Kernel/rme_kernel.c **** 
6595:../../Source/Kernel/rme_kernel.c ****     /* See what was the state of the destination thread. If it is timeout, then activate
6596:../../Source/Kernel/rme_kernel.c ****      * it. If it is BLOCKED or EXCPEND, then leave it alone, and it will be activated
6597:../../Source/Kernel/rme_kernel.c ****      * when it unblocks or when the exception is handled. */
6598:../../Source/Kernel/rme_kernel.c ****     if(Thd_Dst->Sched.State==RME_THD_TIMEOUT)
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 415


 16873              		.loc 1 6598 22
 16874 067c 20301BE5 		ldr	r3, [fp, #-32]
 16875 0680 1C3093E5 		ldr	r3, [r3, #28]
 16876              		.loc 1 6598 7
 16877 0684 020053E3 		cmp	r3, #2
 16878 0688 0400001A 		bne	.L1058
6599:../../Source/Kernel/rme_kernel.c ****     {
6600:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6601:../../Source/Kernel/rme_kernel.c **** 
6602:../../Source/Kernel/rme_kernel.c ****         /* Ready and add to runqueue */
6603:../../Source/Kernel/rme_kernel.c ****         Thd_Dst->Sched.State=RME_THD_READY;
 16879              		.loc 1 6603 29
 16880 068c 20301BE5 		ldr	r3, [fp, #-32]
 16881 0690 0020A0E3 		mov	r2, #0
 16882 0694 1C2083E5 		str	r2, [r3, #28]
6604:../../Source/Kernel/rme_kernel.c ****         _RME_Run_Ins(Thd_Dst);
 16883              		.loc 1 6604 9
 16884 0698 20001BE5 		ldr	r0, [fp, #-32]
 16885 069c FEFFFFEB 		bl	_RME_Run_Ins
 16886              	.L1058:
6605:../../Source/Kernel/rme_kernel.c ****     }
6606:../../Source/Kernel/rme_kernel.c ****     else
6607:../../Source/Kernel/rme_kernel.c ****     {
6608:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6609:../../Source/Kernel/rme_kernel.c ****     }
6610:../../Source/Kernel/rme_kernel.c ****     
6611:../../Source/Kernel/rme_kernel.c ****     /* All possible kernel send (scheduler notifications) done,
6612:../../Source/Kernel/rme_kernel.c ****      * now pick the highest priority thread to run */
6613:../../Source/Kernel/rme_kernel.c ****     _RME_Kern_High(Reg,Local);
 16887              		.loc 1 6613 5
 16888 06a0 18101BE5 		ldr	r1, [fp, #-24]
 16889 06a4 2C001BE5 		ldr	r0, [fp, #-44]
 16890 06a8 FEFFFFEB 		bl	_RME_Kern_High
6614:../../Source/Kernel/rme_kernel.c **** 
6615:../../Source/Kernel/rme_kernel.c ****     return 0;
 16891              		.loc 1 6615 12
 16892 06ac 0030A0E3 		mov	r3, #0
 16893              	.L1020:
6616:../../Source/Kernel/rme_kernel.c **** }
 16894              		.loc 1 6616 1
 16895 06b0 0300A0E1 		mov	r0, r3
 16896 06b4 04D04BE2 		sub	sp, fp, #4
 16897              		.cfi_def_cfa 13, 8
 16898              		@ sp needed
 16899 06b8 0088BDE8 		pop	{fp, pc}
 16900              		.cfi_endproc
 16901              	.LFE63:
 16903              		.section	.text._RME_Thd_Swt,"ax",%progbits
 16904              		.align	2
 16905              		.syntax unified
 16906              		.arm
 16908              	_RME_Thd_Swt:
 16909              	.LFB64:
6617:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Time_Xfer *******************************************/
6618:../../Source/Kernel/rme_kernel.c **** 
6619:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Thd_Swt ******************************************************
6620:../../Source/Kernel/rme_kernel.c **** Description : Switch to another thread. The thread to switch to must have the same
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 416


6621:../../Source/Kernel/rme_kernel.c ****               preemptive priority as this thread, and have time, and not blocked.
6622:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a higher priority thread, this is impossible
6623:../../Source/Kernel/rme_kernel.c ****               because whenever a thread with higher priority exists in the system,
6624:../../Source/Kernel/rme_kernel.c ****               the kernel wiull let it preempt the current thread. 
6625:../../Source/Kernel/rme_kernel.c ****               If trying to switch to a lower priority thread, this is impossible
6626:../../Source/Kernel/rme_kernel.c ****               because the current thread just preempts it after the thread switch.
6627:../../Source/Kernel/rme_kernel.c ****               This syscall does not end with _RME_Kern_High because the user may
6628:../../Source/Kernel/rme_kernel.c ****               designate a specific thread rather than a random one.
6629:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table. 
6630:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
6631:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Thd - The capability to the thread. If this is -1,
6632:../../Source/Kernel/rme_kernel.c ****                                   the kernel will pickup whatever thread that
6633:../../Source/Kernel/rme_kernel.c ****                                   has the highest priority and time to run. 
6634:../../Source/Kernel/rme_kernel.c ****                                   2-Level. 
6635:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Yield - This is a flag to indicate whether this
6636:../../Source/Kernel/rme_kernel.c ****                                    is a full yield. If it is, the kernel will
6637:../../Source/Kernel/rme_kernel.c ****                                    discard all the time alloted on this
6638:../../Source/Kernel/rme_kernel.c ****                                    thread. This only works for threads that
6639:../../Source/Kernel/rme_kernel.c ****                                    have a finite budget.
6640:../../Source/Kernel/rme_kernel.c **** Output      : None.
6641:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6642:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6643:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Thd_Swt(struct RME_Cap_Cpt* Cpt,
6644:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
6645:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Thd,
6646:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Yield)
6647:../../Source/Kernel/rme_kernel.c **** {
 16910              		.loc 1 6647 1
 16911              		.cfi_startproc
 16912              		@ args = 0, pretend = 0, frame = 40
 16913              		@ frame_needed = 1, uses_anonymous_args = 0
 16914 0000 00482DE9 		push	{fp, lr}
 16915              		.cfi_def_cfa_offset 8
 16916              		.cfi_offset 11, -8
 16917              		.cfi_offset 14, -4
 16918 0004 04B08DE2 		add	fp, sp, #4
 16919              		.cfi_def_cfa 11, 4
 16920 0008 28D04DE2 		sub	sp, sp, #40
 16921 000c 20000BE5 		str	r0, [fp, #-32]
 16922 0010 24100BE5 		str	r1, [fp, #-36]
 16923 0014 28200BE5 		str	r2, [fp, #-40]
 16924 0018 2C300BE5 		str	r3, [fp, #-44]
6648:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Thd* Thd_Cap_New;
6649:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6650:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_High;
6651:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
6652:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6653:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6654:../../Source/Kernel/rme_kernel.c ****     
6655:../../Source/Kernel/rme_kernel.c ****     
6656:../../Source/Kernel/rme_kernel.c **** 
6657:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 16925              		.loc 1 6657 10
 16926 001c 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 16927 0020 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 16928 0024 10300BE5 		str	r3, [fp, #-16]
6658:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 417


 16929              		.loc 1 6658 12
 16930 0028 10301BE5 		ldr	r3, [fp, #-16]
 16931 002c 043093E5 		ldr	r3, [r3, #4]
 16932 0030 14300BE5 		str	r3, [fp, #-20]
6659:../../Source/Kernel/rme_kernel.c ****     
6660:../../Source/Kernel/rme_kernel.c ****     /* The caller have picked a thread to switch to */
6661:../../Source/Kernel/rme_kernel.c ****     if(Cap_Thd<RME_CID_NULL)
 16933              		.loc 1 6661 7
 16934 0034 28301BE5 		ldr	r3, [fp, #-40]
 16935 0038 020953E3 		cmp	r3, #32768
 16936 003c A60000AA 		bge	.L1060
6662:../../Source/Kernel/rme_kernel.c ****     {
6663:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6664:../../Source/Kernel/rme_kernel.c ****         
6665:../../Source/Kernel/rme_kernel.c ****         RME_CPT_GETCAP(Cpt,Cap_Thd,RME_CAP_TYPE_THD,
 16937              		.loc 1 6665 9
 16938 0040 28301BE5 		ldr	r3, [fp, #-40]
 16939 0044 803003E2 		and	r3, r3, #128
 16940 0048 000053E3 		cmp	r3, #0
 16941 004c 1C00001A 		bne	.L1061
 16942              		.loc 1 6665 9 is_stmt 0 discriminator 1
 16943 0050 20301BE5 		ldr	r3, [fp, #-32]
 16944 0054 142093E5 		ldr	r2, [r3, #20]
 16945 0058 28301BE5 		ldr	r3, [fp, #-40]
 16946 005c 030052E1 		cmp	r2, r3
 16947 0060 0100008A 		bhi	.L1062
 16948              		.loc 1 6665 9 discriminator 3
 16949 0064 0230E0E3 		mvn	r3, #2
 16950              		.loc 1 6665 9
 16951 0068 DF0000EA 		b	.L1063
 16952              	.L1062:
 16953              		.loc 1 6665 9 discriminator 4
 16954 006c 28301BE5 		ldr	r3, [fp, #-40]
 16955 0070 8322A0E1 		lsl	r2, r3, #5
 16956 0074 20301BE5 		ldr	r3, [fp, #-32]
 16957 0078 0C3093E5 		ldr	r3, [r3, #12]
 16958 007c 033082E0 		add	r3, r2, r3
 16959 0080 08300BE5 		str	r3, [fp, #-8]
 16960 0084 08301BE5 		ldr	r3, [fp, #-8]
 16961 0088 0300A0E1 		mov	r0, r3
 16962 008c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 16963 0090 18000BE5 		str	r0, [fp, #-24]
 16964              		.loc 1 6665 9 discriminator 1
 16965 0094 18301BE5 		ldr	r3, [fp, #-24]
 16966 0098 FF3803E2 		and	r3, r3, #16711680
 16967 009c 020853E3 		cmp	r3, #131072
 16968 00a0 0100001A 		bne	.L1064
 16969              		.loc 1 6665 9 discriminator 5
 16970 00a4 0830E0E3 		mvn	r3, #8
 16971              		.loc 1 6665 9
 16972 00a8 CF0000EA 		b	.L1063
 16973              	.L1064:
 16974              		.loc 1 6665 9 discriminator 6
 16975 00ac 18301BE5 		ldr	r3, [fp, #-24]
 16976 00b0 233CA0E1 		lsr	r3, r3, #24
 16977 00b4 060053E3 		cmp	r3, #6
 16978 00b8 3F00000A 		beq	.L1065
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 418


 16979              		.loc 1 6665 9 discriminator 7
 16980 00bc 0130E0E3 		mvn	r3, #1
 16981              		.loc 1 6665 9
 16982 00c0 C90000EA 		b	.L1063
 16983              	.L1061:
 16984              		.loc 1 6665 9 discriminator 2
 16985 00c4 28301BE5 		ldr	r3, [fp, #-40]
 16986 00c8 2324A0E1 		lsr	r2, r3, #8
 16987 00cc 20301BE5 		ldr	r3, [fp, #-32]
 16988 00d0 143093E5 		ldr	r3, [r3, #20]
 16989 00d4 030052E1 		cmp	r2, r3
 16990 00d8 0100003A 		bcc	.L1066
 16991              		.loc 1 6665 9 discriminator 8
 16992 00dc 0230E0E3 		mvn	r3, #2
 16993              		.loc 1 6665 9
 16994 00e0 C10000EA 		b	.L1063
 16995              	.L1066:
 16996              		.loc 1 6665 9 discriminator 9
 16997 00e4 28301BE5 		ldr	r3, [fp, #-40]
 16998 00e8 2334A0E1 		lsr	r3, r3, #8
 16999 00ec 8322A0E1 		lsl	r2, r3, #5
 17000 00f0 20301BE5 		ldr	r3, [fp, #-32]
 17001 00f4 0C3093E5 		ldr	r3, [r3, #12]
 17002 00f8 033082E0 		add	r3, r2, r3
 17003 00fc 08300BE5 		str	r3, [fp, #-8]
 17004 0100 08301BE5 		ldr	r3, [fp, #-8]
 17005 0104 0300A0E1 		mov	r0, r3
 17006 0108 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17007 010c 18000BE5 		str	r0, [fp, #-24]
 17008              		.loc 1 6665 9 discriminator 1
 17009 0110 18301BE5 		ldr	r3, [fp, #-24]
 17010 0114 FF3803E2 		and	r3, r3, #16711680
 17011 0118 020853E3 		cmp	r3, #131072
 17012 011c 0100001A 		bne	.L1067
 17013              		.loc 1 6665 9 discriminator 10
 17014 0120 0830E0E3 		mvn	r3, #8
 17015              		.loc 1 6665 9
 17016 0124 B00000EA 		b	.L1063
 17017              	.L1067:
 17018              		.loc 1 6665 9 discriminator 11
 17019 0128 18301BE5 		ldr	r3, [fp, #-24]
 17020 012c 233CA0E1 		lsr	r3, r3, #24
 17021 0130 030053E3 		cmp	r3, #3
 17022 0134 0100000A 		beq	.L1068
 17023              		.loc 1 6665 9 discriminator 12
 17024 0138 0130E0E3 		mvn	r3, #1
 17025              		.loc 1 6665 9
 17026 013c AA0000EA 		b	.L1063
 17027              	.L1068:
 17028              		.loc 1 6665 9 discriminator 13
 17029 0140 28301BE5 		ldr	r3, [fp, #-40]
 17030 0144 7F2003E2 		and	r2, r3, #127
 17031 0148 08301BE5 		ldr	r3, [fp, #-8]
 17032 014c 143093E5 		ldr	r3, [r3, #20]
 17033 0150 030052E1 		cmp	r2, r3
 17034 0154 0100003A 		bcc	.L1069
 17035              		.loc 1 6665 9 discriminator 14
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 419


 17036 0158 0230E0E3 		mvn	r3, #2
 17037              		.loc 1 6665 9
 17038 015c A20000EA 		b	.L1063
 17039              	.L1069:
 17040              		.loc 1 6665 9 discriminator 15
 17041 0160 28301BE5 		ldr	r3, [fp, #-40]
 17042 0164 7F3003E2 		and	r3, r3, #127
 17043 0168 8322A0E1 		lsl	r2, r3, #5
 17044 016c 08301BE5 		ldr	r3, [fp, #-8]
 17045 0170 0C3093E5 		ldr	r3, [r3, #12]
 17046 0174 033082E0 		add	r3, r2, r3
 17047 0178 08300BE5 		str	r3, [fp, #-8]
 17048 017c 08301BE5 		ldr	r3, [fp, #-8]
 17049 0180 0300A0E1 		mov	r0, r3
 17050 0184 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17051 0188 18000BE5 		str	r0, [fp, #-24]
 17052              		.loc 1 6665 9 discriminator 1
 17053 018c 18301BE5 		ldr	r3, [fp, #-24]
 17054 0190 FF3803E2 		and	r3, r3, #16711680
 17055 0194 020853E3 		cmp	r3, #131072
 17056 0198 0100001A 		bne	.L1070
 17057              		.loc 1 6665 9 discriminator 16
 17058 019c 0830E0E3 		mvn	r3, #8
 17059              		.loc 1 6665 9
 17060 01a0 910000EA 		b	.L1063
 17061              	.L1070:
 17062              		.loc 1 6665 9 discriminator 17
 17063 01a4 18301BE5 		ldr	r3, [fp, #-24]
 17064 01a8 233CA0E1 		lsr	r3, r3, #24
 17065 01ac 060053E3 		cmp	r3, #6
 17066 01b0 0100000A 		beq	.L1065
 17067              		.loc 1 6665 9 discriminator 18
 17068 01b4 0130E0E3 		mvn	r3, #1
 17069              		.loc 1 6665 9
 17070 01b8 8B0000EA 		b	.L1063
 17071              	.L1065:
6666:../../Source/Kernel/rme_kernel.c ****                        struct RME_Cap_Thd*,Thd_Cap_New,Type_Stat);
6667:../../Source/Kernel/rme_kernel.c ****         /* Check if the target cap is not frozen and allows such operations */
6668:../../Source/Kernel/rme_kernel.c ****         RME_CAP_CHECK(Thd_Cap_New,RME_THD_FLAG_SWT);
 17072              		.loc 1 6668 9 is_stmt 1
 17073 01bc 08301BE5 		ldr	r3, [fp, #-8]
 17074 01c0 083093E5 		ldr	r3, [r3, #8]
 17075 01c4 013C03E2 		and	r3, r3, #256
 17076 01c8 000053E3 		cmp	r3, #0
 17077 01cc 0100001A 		bne	.L1071
 17078              		.loc 1 6668 9 is_stmt 0 discriminator 1
 17079 01d0 0630E0E3 		mvn	r3, #6
 17080              		.loc 1 6668 9
 17081 01d4 840000EA 		b	.L1063
 17082              	.L1071:
6669:../../Source/Kernel/rme_kernel.c ****         /* See if we can do operation on this core */
6670:../../Source/Kernel/rme_kernel.c ****         Thd_New=RME_CAP_GETOBJ(Thd_Cap_New,struct RME_Thd_Struct*);
 17083              		.loc 1 6670 17 is_stmt 1
 17084 01d8 08301BE5 		ldr	r3, [fp, #-8]
 17085 01dc 0C3093E5 		ldr	r3, [r3, #12]
 17086              		.loc 1 6670 16
 17087 01e0 0C300BE5 		str	r3, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 420


6671:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Local!=Local)
 17088              		.loc 1 6671 26
 17089 01e4 0C301BE5 		ldr	r3, [fp, #-12]
 17090 01e8 143093E5 		ldr	r3, [r3, #20]
 17091              		.loc 1 6671 11
 17092 01ec 10201BE5 		ldr	r2, [fp, #-16]
 17093 01f0 030052E1 		cmp	r2, r3
 17094 01f4 0100000A 		beq	.L1072
6672:../../Source/Kernel/rme_kernel.c ****         {
6673:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6674:../../Source/Kernel/rme_kernel.c **** 
6675:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 17095              		.loc 1 6675 20
 17096 01f8 CB30E0E3 		mvn	r3, #203
 17097 01fc 7A0000EA 		b	.L1063
 17098              	.L1072:
6676:../../Source/Kernel/rme_kernel.c ****         }
6677:../../Source/Kernel/rme_kernel.c ****         else
6678:../../Source/Kernel/rme_kernel.c ****         {
6679:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6680:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6681:../../Source/Kernel/rme_kernel.c ****         }
6682:../../Source/Kernel/rme_kernel.c ****             
6683:../../Source/Kernel/rme_kernel.c ****         /* See if we can yield to the thread */
6684:../../Source/Kernel/rme_kernel.c ****         if(Thd_Cur->Sched.Prio!=Thd_New->Sched.Prio)
 17099              		.loc 1 6684 26
 17100 0200 14301BE5 		ldr	r3, [fp, #-20]
 17101 0204 202093E5 		ldr	r2, [r3, #32]
 17102              		.loc 1 6684 47
 17103 0208 0C301BE5 		ldr	r3, [fp, #-12]
 17104 020c 203093E5 		ldr	r3, [r3, #32]
 17105              		.loc 1 6684 11
 17106 0210 030052E1 		cmp	r2, r3
 17107 0214 0100000A 		beq	.L1073
6685:../../Source/Kernel/rme_kernel.c ****         {
6686:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6687:../../Source/Kernel/rme_kernel.c **** 
6688:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_PRIO;
 17108              		.loc 1 6688 20
 17109 0218 CC30E0E3 		mvn	r3, #204
 17110 021c 720000EA 		b	.L1063
 17111              	.L1073:
6689:../../Source/Kernel/rme_kernel.c ****         }
6690:../../Source/Kernel/rme_kernel.c ****         else
6691:../../Source/Kernel/rme_kernel.c ****         {
6692:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6693:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6694:../../Source/Kernel/rme_kernel.c ****         }
6695:../../Source/Kernel/rme_kernel.c ****             
6696:../../Source/Kernel/rme_kernel.c ****         /* Check if the target thread state is valid */
6697:../../Source/Kernel/rme_kernel.c ****         if((Thd_New->Sched.State==RME_THD_BLOCKED)||
 17112              		.loc 1 6697 27
 17113 0220 0C301BE5 		ldr	r3, [fp, #-12]
 17114 0224 1C3093E5 		ldr	r3, [r3, #28]
 17115              		.loc 1 6697 11
 17116 0228 010053E3 		cmp	r3, #1
 17117 022c 0700000A 		beq	.L1074
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 421


6698:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 17118              		.loc 1 6698 27
 17119 0230 0C301BE5 		ldr	r3, [fp, #-12]
 17120 0234 1C3093E5 		ldr	r3, [r3, #28]
6697:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 17121              		.loc 1 6697 51 discriminator 1
 17122 0238 020053E3 		cmp	r3, #2
 17123 023c 0300000A 		beq	.L1074
6699:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_EXCPEND))
 17124              		.loc 1 6699 27
 17125 0240 0C301BE5 		ldr	r3, [fp, #-12]
 17126 0244 1C3093E5 		ldr	r3, [r3, #28]
6698:../../Source/Kernel/rme_kernel.c ****            (Thd_New->Sched.State==RME_THD_TIMEOUT)||
 17127              		.loc 1 6698 51
 17128 0248 030053E3 		cmp	r3, #3
 17129 024c 0100001A 		bne	.L1075
 17130              	.L1074:
6700:../../Source/Kernel/rme_kernel.c ****         {
6701:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6702:../../Source/Kernel/rme_kernel.c **** 
6703:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_PTH_INVSTATE;
 17131              		.loc 1 6703 20
 17132 0250 CB30E0E3 		mvn	r3, #203
 17133 0254 640000EA 		b	.L1063
 17134              	.L1075:
6704:../../Source/Kernel/rme_kernel.c ****         }
6705:../../Source/Kernel/rme_kernel.c ****         else
6706:../../Source/Kernel/rme_kernel.c ****         {
6707:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6708:../../Source/Kernel/rme_kernel.c ****             /* No action required */
6709:../../Source/Kernel/rme_kernel.c ****         }
6710:../../Source/Kernel/rme_kernel.c ****         
6711:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6712:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 17135              		.loc 1 6712 11
 17136 0258 2C301BE5 		ldr	r3, [fp, #-44]
 17137 025c 000053E3 		cmp	r3, #0
 17138 0260 4300000A 		beq	.L1076
 17139              		.loc 1 6712 43 discriminator 1
 17140 0264 14301BE5 		ldr	r3, [fp, #-20]
 17141 0268 183093E5 		ldr	r3, [r3, #24]
 17142              		.loc 1 6712 26 discriminator 1
 17143 026c 0E0173E3 		cmn	r3, #-2147483645
 17144 0270 3F00008A 		bhi	.L1076
6713:../../Source/Kernel/rme_kernel.c ****         {
6714:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6715:../../Source/Kernel/rme_kernel.c ****             
6716:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6717:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 17145              		.loc 1 6717 33
 17146 0274 14301BE5 		ldr	r3, [fp, #-20]
 17147 0278 0020A0E3 		mov	r2, #0
 17148 027c 182083E5 		str	r2, [r3, #24]
6718:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 17149              		.loc 1 6718 13
 17150 0280 14001BE5 		ldr	r0, [fp, #-20]
 17151 0284 FEFFFFEB 		bl	_RME_Run_Del
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 422


6719:../../Source/Kernel/rme_kernel.c ****             
6720:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6721:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 17152              		.loc 1 6721 33
 17153 0288 14301BE5 		ldr	r3, [fp, #-20]
 17154 028c 0220A0E3 		mov	r2, #2
 17155 0290 1C2083E5 		str	r2, [r3, #28]
6722:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 17156              		.loc 1 6722 13
 17157 0294 14001BE5 		ldr	r0, [fp, #-20]
 17158 0298 FEFFFFEB 		bl	_RME_Run_Notif
6723:../../Source/Kernel/rme_kernel.c ****             
6724:../../Source/Kernel/rme_kernel.c ****             /* Because we have sent a notification, we could have unblocked a
6725:../../Source/Kernel/rme_kernel.c ****              * thread at higher priority. Additionally, if the new thread is
6726:../../Source/Kernel/rme_kernel.c ****              * the current thread, we are forced to switch to someone else,
6727:../../Source/Kernel/rme_kernel.c ****              * because the current thread's timeslice must be exhausted. */
6728:../../Source/Kernel/rme_kernel.c ****             Thd_High=_RME_Run_High(Local);
 17159              		.loc 1 6728 22
 17160 029c 10001BE5 		ldr	r0, [fp, #-16]
 17161 02a0 FEFFFFEB 		bl	_RME_Run_High
 17162 02a4 1C000BE5 		str	r0, [fp, #-28]
6729:../../Source/Kernel/rme_kernel.c ****             if((Thd_High->Sched.Prio>Thd_New->Sched.Prio)||(Thd_Cur==Thd_New))
 17163              		.loc 1 6729 32
 17164 02a8 1C301BE5 		ldr	r3, [fp, #-28]
 17165 02ac 202093E5 		ldr	r2, [r3, #32]
 17166              		.loc 1 6729 52
 17167 02b0 0C301BE5 		ldr	r3, [fp, #-12]
 17168 02b4 203093E5 		ldr	r3, [r3, #32]
 17169              		.loc 1 6729 15
 17170 02b8 030052E1 		cmp	r2, r3
 17171 02bc 0300008A 		bhi	.L1077
 17172              		.loc 1 6729 58 discriminator 1
 17173 02c0 14201BE5 		ldr	r2, [fp, #-20]
 17174 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 17175 02c8 030052E1 		cmp	r2, r3
 17176 02cc 2800001A 		bne	.L1076
 17177              	.L1077:
6730:../../Source/Kernel/rme_kernel.c ****             {
6731:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6732:../../Source/Kernel/rme_kernel.c **** 
6733:../../Source/Kernel/rme_kernel.c ****                 Thd_New=Thd_High;
 17178              		.loc 1 6733 24
 17179 02d0 1C301BE5 		ldr	r3, [fp, #-28]
 17180 02d4 0C300BE5 		str	r3, [fp, #-12]
 17181 02d8 250000EA 		b	.L1076
 17182              	.L1060:
6734:../../Source/Kernel/rme_kernel.c ****             }
6735:../../Source/Kernel/rme_kernel.c ****             else
6736:../../Source/Kernel/rme_kernel.c ****             {
6737:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
6738:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
6739:../../Source/Kernel/rme_kernel.c ****             }
6740:../../Source/Kernel/rme_kernel.c ****         }
6741:../../Source/Kernel/rme_kernel.c ****         else
6742:../../Source/Kernel/rme_kernel.c ****         {
6743:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6744:../../Source/Kernel/rme_kernel.c ****             /* No action required */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 423


6745:../../Source/Kernel/rme_kernel.c ****         }
6746:../../Source/Kernel/rme_kernel.c ****     }
6747:../../Source/Kernel/rme_kernel.c ****     /* The kernel needs to pick a thread to switch to */
6748:../../Source/Kernel/rme_kernel.c ****     else
6749:../../Source/Kernel/rme_kernel.c ****     {
6750:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6751:../../Source/Kernel/rme_kernel.c ****         
6752:../../Source/Kernel/rme_kernel.c ****         /* See if we need to give up all our timeslices in this yield */
6753:../../Source/Kernel/rme_kernel.c ****         if((Is_Yield!=0U)&&(Thd_Cur->Sched.Slice<RME_THD_INF_TIME))
 17183              		.loc 1 6753 11
 17184 02dc 2C301BE5 		ldr	r3, [fp, #-44]
 17185 02e0 000053E3 		cmp	r3, #0
 17186 02e4 0E00000A 		beq	.L1078
 17187              		.loc 1 6753 43 discriminator 1
 17188 02e8 14301BE5 		ldr	r3, [fp, #-20]
 17189 02ec 183093E5 		ldr	r3, [r3, #24]
 17190              		.loc 1 6753 26 discriminator 1
 17191 02f0 0E0173E3 		cmn	r3, #-2147483645
 17192 02f4 0A00008A 		bhi	.L1078
6754:../../Source/Kernel/rme_kernel.c ****         {
6755:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6756:../../Source/Kernel/rme_kernel.c ****             
6757:../../Source/Kernel/rme_kernel.c ****             /* Deprive all timeslices and remove from runqueue */
6758:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Slice=0U;
 17193              		.loc 1 6758 33
 17194 02f8 14301BE5 		ldr	r3, [fp, #-20]
 17195 02fc 0020A0E3 		mov	r2, #0
 17196 0300 182083E5 		str	r2, [r3, #24]
6759:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 17197              		.loc 1 6759 13
 17198 0304 14001BE5 		ldr	r0, [fp, #-20]
 17199 0308 FEFFFFEB 		bl	_RME_Run_Del
6760:../../Source/Kernel/rme_kernel.c ****             
6761:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
6762:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_TIMEOUT;
 17200              		.loc 1 6762 33
 17201 030c 14301BE5 		ldr	r3, [fp, #-20]
 17202 0310 0220A0E3 		mov	r2, #2
 17203 0314 1C2083E5 		str	r2, [r3, #28]
6763:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Cur);
 17204              		.loc 1 6763 13
 17205 0318 14001BE5 		ldr	r0, [fp, #-20]
 17206 031c FEFFFFEB 		bl	_RME_Run_Notif
 17207 0320 100000EA 		b	.L1079
 17208              	.L1078:
6764:../../Source/Kernel/rme_kernel.c ****         }
6765:../../Source/Kernel/rme_kernel.c ****         else
6766:../../Source/Kernel/rme_kernel.c ****         {
6767:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
6768:../../Source/Kernel/rme_kernel.c ****             
6769:../../Source/Kernel/rme_kernel.c ****             /* This operation is just to make sure that if there are any other
6770:../../Source/Kernel/rme_kernel.c ****              * thread at the same priority level, we're not switching to ourself */
6771:../../Source/Kernel/rme_kernel.c ****             RME_ASSERT(Thd_Cur->Sched.State==RME_THD_READY);
 17209              		.loc 1 6771 13
 17210 0324 14301BE5 		ldr	r3, [fp, #-20]
 17211 0328 1C3093E5 		ldr	r3, [r3, #28]
 17212 032c 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 424


 17213 0330 0800000A 		beq	.L1080
 17214              		.loc 1 6771 13 is_stmt 0 discriminator 1
 17215 0334 003000E3 		movw	r3, #:lower16:.LC6
 17216 0338 003040E3 		movt	r3, #:upper16:.LC6
 17217 033c 002000E3 		movw	r2, #:lower16:.LC7
 17218 0340 002040E3 		movt	r2, #:upper16:.LC7
 17219 0344 731A01E3 		movw	r1, #6771
 17220 0348 000000E3 		movw	r0, #:lower16:.LC8
 17221 034c 000040E3 		movt	r0, #:upper16:.LC8
 17222 0350 FEFFFFEB 		bl	RME_Log
 17223              	.L1081:
 17224              		.loc 1 6771 13
 17225 0354 FEFFFFEA 		b	.L1081
 17226              	.L1080:
6772:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 17227              		.loc 1 6772 13 is_stmt 1
 17228 0358 14001BE5 		ldr	r0, [fp, #-20]
 17229 035c FEFFFFEB 		bl	_RME_Run_Del
6773:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Cur);
 17230              		.loc 1 6773 13
 17231 0360 14001BE5 		ldr	r0, [fp, #-20]
 17232 0364 FEFFFFEB 		bl	_RME_Run_Ins
 17233              	.L1079:
6774:../../Source/Kernel/rme_kernel.c ****         }
6775:../../Source/Kernel/rme_kernel.c ****         
6776:../../Source/Kernel/rme_kernel.c ****         Thd_New=_RME_Run_High(Local);
 17234              		.loc 1 6776 17
 17235 0368 10001BE5 		ldr	r0, [fp, #-16]
 17236 036c FEFFFFEB 		bl	_RME_Run_High
 17237 0370 0C000BE5 		str	r0, [fp, #-12]
 17238              	.L1076:
6777:../../Source/Kernel/rme_kernel.c ****     }
6778:../../Source/Kernel/rme_kernel.c ****     
6779:../../Source/Kernel/rme_kernel.c ****     /* Now that we are successful, save the return value to the caller stack */
6780:../../Source/Kernel/rme_kernel.c ****     __RME_Svc_Retval_Set(Reg,0);
 17239              		.loc 1 6780 5
 17240 0374 0010A0E3 		mov	r1, #0
 17241 0378 24001BE5 		ldr	r0, [fp, #-36]
 17242 037c FEFFFFEB 		bl	__RME_Svc_Retval_Set
6781:../../Source/Kernel/rme_kernel.c **** 
6782:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 17243              		.loc 1 6782 5
 17244 0380 0C301BE5 		ldr	r3, [fp, #-12]
 17245 0384 1C3093E5 		ldr	r3, [r3, #28]
 17246 0388 000053E3 		cmp	r3, #0
 17247 038c 0800000A 		beq	.L1082
 17248              		.loc 1 6782 5 is_stmt 0 discriminator 1
 17249 0390 003000E3 		movw	r3, #:lower16:.LC6
 17250 0394 003040E3 		movt	r3, #:upper16:.LC6
 17251 0398 002000E3 		movw	r2, #:lower16:.LC7
 17252 039c 002040E3 		movt	r2, #:upper16:.LC7
 17253 03a0 7E1A01E3 		movw	r1, #6782
 17254 03a4 000000E3 		movw	r0, #:lower16:.LC8
 17255 03a8 000040E3 		movt	r0, #:upper16:.LC8
 17256 03ac FEFFFFEB 		bl	RME_Log
 17257              	.L1083:
 17258              		.loc 1 6782 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 425


 17259 03b0 FEFFFFEA 		b	.L1083
 17260              	.L1082:
6783:../../Source/Kernel/rme_kernel.c ****     /* We cannot call _RME_Kern_High because it picks some random thread. Instead,
6784:../../Source/Kernel/rme_kernel.c ****      * we use a manual implementation that is faster than the _RME_Kern_High. */
6785:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur==Thd_New)
 17261              		.loc 1 6785 7 is_stmt 1
 17262 03b4 14201BE5 		ldr	r2, [fp, #-20]
 17263 03b8 0C301BE5 		ldr	r3, [fp, #-12]
 17264 03bc 030052E1 		cmp	r2, r3
 17265 03c0 0100001A 		bne	.L1084
6786:../../Source/Kernel/rme_kernel.c ****     {
6787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6788:../../Source/Kernel/rme_kernel.c ****         
6789:../../Source/Kernel/rme_kernel.c ****         return 0;
 17266              		.loc 1 6789 16
 17267 03c4 0030A0E3 		mov	r3, #0
 17268 03c8 070000EA 		b	.L1063
 17269              	.L1084:
6790:../../Source/Kernel/rme_kernel.c ****     }
6791:../../Source/Kernel/rme_kernel.c ****     else
6792:../../Source/Kernel/rme_kernel.c ****     {
6793:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6794:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6795:../../Source/Kernel/rme_kernel.c ****     }
6796:../../Source/Kernel/rme_kernel.c ****             
6797:../../Source/Kernel/rme_kernel.c ****     /* We have a solid context switch at this point */
6798:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 17270              		.loc 1 6798 5
 17271 03cc 0C201BE5 		ldr	r2, [fp, #-12]
 17272 03d0 14101BE5 		ldr	r1, [fp, #-20]
 17273 03d4 24001BE5 		ldr	r0, [fp, #-36]
 17274 03d8 FEFFFFEB 		bl	_RME_Run_Swt
6799:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 17275              		.loc 1 6799 19
 17276 03dc 10301BE5 		ldr	r3, [fp, #-16]
 17277 03e0 0C201BE5 		ldr	r2, [fp, #-12]
 17278 03e4 042083E5 		str	r2, [r3, #4]
6800:../../Source/Kernel/rme_kernel.c **** 
6801:../../Source/Kernel/rme_kernel.c ****     return 0;
 17279              		.loc 1 6801 12
 17280 03e8 0030A0E3 		mov	r3, #0
 17281              	.L1063:
6802:../../Source/Kernel/rme_kernel.c **** }
 17282              		.loc 1 6802 1
 17283 03ec 0300A0E1 		mov	r0, r3
 17284 03f0 04D04BE2 		sub	sp, fp, #4
 17285              		.cfi_def_cfa 13, 8
 17286              		@ sp needed
 17287 03f4 0088BDE8 		pop	{fp, pc}
 17288              		.cfi_endproc
 17289              	.LFE64:
 17291              		.section	.text._RME_Sig_Boot_Crt,"ax",%progbits
 17292              		.align	2
 17293              		.global	_RME_Sig_Boot_Crt
 17294              		.syntax unified
 17295              		.arm
 17297              	_RME_Sig_Boot_Crt:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 426


 17298              	.LFB65:
6803:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Thd_Swt *************************************************/
6804:../../Source/Kernel/rme_kernel.c **** 
6805:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Boot_Crt *************************************************
6806:../../Source/Kernel/rme_kernel.c **** Description : Create a boot-time kernel signal endpoint. This is only used at
6807:../../Source/Kernel/rme_kernel.c ****               boot-time to create endpoints that are related directly to 
6808:../../Source/Kernel/rme_kernel.c ****               hardware interrupts.
6809:../../Source/Kernel/rme_kernel.c ****               This function does not require a kernel memory capability.
6810:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6811:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6812:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6813:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6814:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6815:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6816:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6817:../../Source/Kernel/rme_kernel.c **** Output      : None.
6818:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6819:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6820:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Sig_Boot_Crt(struct RME_Cap_Cpt* Cpt,
6821:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
6822:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Sig)
6823:../../Source/Kernel/rme_kernel.c **** {
 17299              		.loc 1 6823 1
 17300              		.cfi_startproc
 17301              		@ args = 0, pretend = 0, frame = 32
 17302              		@ frame_needed = 1, uses_anonymous_args = 0
 17303 0000 00482DE9 		push	{fp, lr}
 17304              		.cfi_def_cfa_offset 8
 17305              		.cfi_offset 11, -8
 17306              		.cfi_offset 14, -4
 17307 0004 04B08DE2 		add	fp, sp, #4
 17308              		.cfi_def_cfa 11, 4
 17309 0008 20D04DE2 		sub	sp, sp, #32
 17310 000c 18000BE5 		str	r0, [fp, #-24]
 17311 0010 1C100BE5 		str	r1, [fp, #-28]
 17312 0014 20200BE5 		str	r2, [fp, #-32]
6824:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Crt;
6825:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Crt;
6826:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6827:../../Source/Kernel/rme_kernel.c ****     
6828:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6829:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17313              		.loc 1 6829 5
 17314 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17315 001c 803003E2 		and	r3, r3, #128
 17316 0020 000053E3 		cmp	r3, #0
 17317 0024 1C00001A 		bne	.L1086
 17318              		.loc 1 6829 5 is_stmt 0 discriminator 1
 17319 0028 18301BE5 		ldr	r3, [fp, #-24]
 17320 002c 142093E5 		ldr	r2, [r3, #20]
 17321 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17322 0034 030052E1 		cmp	r2, r3
 17323 0038 0100008A 		bhi	.L1087
 17324              		.loc 1 6829 5 discriminator 3
 17325 003c 0230E0E3 		mvn	r3, #2
 17326              		.loc 1 6829 5
 17327 0040 8A0000EA 		b	.L1088
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 427


 17328              	.L1087:
 17329              		.loc 1 6829 5 discriminator 4
 17330 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17331 0048 8322A0E1 		lsl	r2, r3, #5
 17332 004c 18301BE5 		ldr	r3, [fp, #-24]
 17333 0050 0C3093E5 		ldr	r3, [r3, #12]
 17334 0054 033082E0 		add	r3, r2, r3
 17335 0058 08300BE5 		str	r3, [fp, #-8]
 17336 005c 08301BE5 		ldr	r3, [fp, #-8]
 17337 0060 0300A0E1 		mov	r0, r3
 17338 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17339 0068 0C000BE5 		str	r0, [fp, #-12]
 17340              		.loc 1 6829 5 discriminator 1
 17341 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17342 0070 FF3803E2 		and	r3, r3, #16711680
 17343 0074 020853E3 		cmp	r3, #131072
 17344 0078 0100001A 		bne	.L1089
 17345              		.loc 1 6829 5 discriminator 5
 17346 007c 0830E0E3 		mvn	r3, #8
 17347              		.loc 1 6829 5
 17348 0080 7A0000EA 		b	.L1088
 17349              	.L1089:
 17350              		.loc 1 6829 5 discriminator 6
 17351 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17352 0088 233CA0E1 		lsr	r3, r3, #24
 17353 008c 030053E3 		cmp	r3, #3
 17354 0090 3F00000A 		beq	.L1090
 17355              		.loc 1 6829 5 discriminator 7
 17356 0094 0130E0E3 		mvn	r3, #1
 17357              		.loc 1 6829 5
 17358 0098 740000EA 		b	.L1088
 17359              	.L1086:
 17360              		.loc 1 6829 5 discriminator 2
 17361 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17362 00a0 2324A0E1 		lsr	r2, r3, #8
 17363 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17364 00a8 143093E5 		ldr	r3, [r3, #20]
 17365 00ac 030052E1 		cmp	r2, r3
 17366 00b0 0100003A 		bcc	.L1091
 17367              		.loc 1 6829 5 discriminator 8
 17368 00b4 0230E0E3 		mvn	r3, #2
 17369              		.loc 1 6829 5
 17370 00b8 6C0000EA 		b	.L1088
 17371              	.L1091:
 17372              		.loc 1 6829 5 discriminator 9
 17373 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17374 00c0 2334A0E1 		lsr	r3, r3, #8
 17375 00c4 8322A0E1 		lsl	r2, r3, #5
 17376 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17377 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17378 00d0 033082E0 		add	r3, r2, r3
 17379 00d4 08300BE5 		str	r3, [fp, #-8]
 17380 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17381 00dc 0300A0E1 		mov	r0, r3
 17382 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17383 00e4 0C000BE5 		str	r0, [fp, #-12]
 17384              		.loc 1 6829 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 428


 17385 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17386 00ec FF3803E2 		and	r3, r3, #16711680
 17387 00f0 020853E3 		cmp	r3, #131072
 17388 00f4 0100001A 		bne	.L1092
 17389              		.loc 1 6829 5 discriminator 10
 17390 00f8 0830E0E3 		mvn	r3, #8
 17391              		.loc 1 6829 5
 17392 00fc 5B0000EA 		b	.L1088
 17393              	.L1092:
 17394              		.loc 1 6829 5 discriminator 11
 17395 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17396 0104 233CA0E1 		lsr	r3, r3, #24
 17397 0108 030053E3 		cmp	r3, #3
 17398 010c 0100000A 		beq	.L1093
 17399              		.loc 1 6829 5 discriminator 12
 17400 0110 0130E0E3 		mvn	r3, #1
 17401              		.loc 1 6829 5
 17402 0114 550000EA 		b	.L1088
 17403              	.L1093:
 17404              		.loc 1 6829 5 discriminator 13
 17405 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17406 011c 7F2003E2 		and	r2, r3, #127
 17407 0120 08301BE5 		ldr	r3, [fp, #-8]
 17408 0124 143093E5 		ldr	r3, [r3, #20]
 17409 0128 030052E1 		cmp	r2, r3
 17410 012c 0100003A 		bcc	.L1094
 17411              		.loc 1 6829 5 discriminator 14
 17412 0130 0230E0E3 		mvn	r3, #2
 17413              		.loc 1 6829 5
 17414 0134 4D0000EA 		b	.L1088
 17415              	.L1094:
 17416              		.loc 1 6829 5 discriminator 15
 17417 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17418 013c 7F3003E2 		and	r3, r3, #127
 17419 0140 8322A0E1 		lsl	r2, r3, #5
 17420 0144 08301BE5 		ldr	r3, [fp, #-8]
 17421 0148 0C3093E5 		ldr	r3, [r3, #12]
 17422 014c 033082E0 		add	r3, r2, r3
 17423 0150 08300BE5 		str	r3, [fp, #-8]
 17424 0154 08301BE5 		ldr	r3, [fp, #-8]
 17425 0158 0300A0E1 		mov	r0, r3
 17426 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17427 0160 0C000BE5 		str	r0, [fp, #-12]
 17428              		.loc 1 6829 5 discriminator 1
 17429 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17430 0168 FF3803E2 		and	r3, r3, #16711680
 17431 016c 020853E3 		cmp	r3, #131072
 17432 0170 0100001A 		bne	.L1095
 17433              		.loc 1 6829 5 discriminator 16
 17434 0174 0830E0E3 		mvn	r3, #8
 17435              		.loc 1 6829 5
 17436 0178 3C0000EA 		b	.L1088
 17437              	.L1095:
 17438              		.loc 1 6829 5 discriminator 17
 17439 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17440 0180 233CA0E1 		lsr	r3, r3, #24
 17441 0184 030053E3 		cmp	r3, #3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 429


 17442 0188 0100000A 		beq	.L1090
 17443              		.loc 1 6829 5 discriminator 18
 17444 018c 0130E0E3 		mvn	r3, #1
 17445              		.loc 1 6829 5
 17446 0190 360000EA 		b	.L1088
 17447              	.L1090:
6830:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Crt,Type_Stat);
6831:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6832:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Crt,RME_CPT_FLAG_CRT);
 17448              		.loc 1 6832 5 is_stmt 1
 17449 0194 08301BE5 		ldr	r3, [fp, #-8]
 17450 0198 083093E5 		ldr	r3, [r3, #8]
 17451 019c 013003E2 		and	r3, r3, #1
 17452 01a0 000053E3 		cmp	r3, #0
 17453 01a4 0100001A 		bne	.L1096
 17454              		.loc 1 6832 5 is_stmt 0 discriminator 1
 17455 01a8 0630E0E3 		mvn	r3, #6
 17456              		.loc 1 6832 5
 17457 01ac 2F0000EA 		b	.L1088
 17458              	.L1096:
6833:../../Source/Kernel/rme_kernel.c ****     
6834:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6835:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Crt,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17459              		.loc 1 6835 5 is_stmt 1
 17460 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17461 01b4 142093E5 		ldr	r2, [r3, #20]
 17462 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17463 01bc 030052E1 		cmp	r2, r3
 17464 01c0 0100008A 		bhi	.L1097
 17465              		.loc 1 6835 5 is_stmt 0 discriminator 1
 17466 01c4 0230E0E3 		mvn	r3, #2
 17467              		.loc 1 6835 5
 17468 01c8 280000EA 		b	.L1088
 17469              	.L1097:
 17470              		.loc 1 6835 5 discriminator 2
 17471 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17472 01d0 8322A0E1 		lsl	r2, r3, #5
 17473 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17474 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17475 01dc 033082E0 		add	r3, r2, r3
 17476 01e0 10300BE5 		str	r3, [fp, #-16]
6836:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6837:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17477              		.loc 1 6837 5 is_stmt 1
 17478 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17479 01e8 0128A0E3 		mov	r2, #65536
 17480 01ec 0010A0E3 		mov	r1, #0
 17481 01f0 0300A0E1 		mov	r0, r3
 17482 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17483 01f8 0030A0E1 		mov	r3, r0
 17484              		.loc 1 6837 5 is_stmt 0 discriminator 1
 17485 01fc 000053E3 		cmp	r3, #0
 17486 0200 0100001A 		bne	.L1098
 17487 0204 0430E0E3 		mvn	r3, #4
 17488              		.loc 1 6837 5
 17489 0208 180000EA 		b	.L1088
 17490              	.L1098:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 430


 17491              		.loc 1 6837 5 discriminator 2
 17492 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17493 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17494 0214 002093E5 		ldr	r2, [r3]
 17495 0218 10301BE5 		ldr	r3, [fp, #-16]
 17496 021c 102083E5 		str	r2, [r3, #16]
6838:../../Source/Kernel/rme_kernel.c ****     
6839:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6840:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=1U;
 17497              		.loc 1 6840 27 is_stmt 1
 17498 0220 10301BE5 		ldr	r3, [fp, #-16]
 17499 0224 0120A0E3 		mov	r2, #1
 17500 0228 042083E5 		str	r2, [r3, #4]
6841:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17501              		.loc 1 6841 25
 17502 022c 10301BE5 		ldr	r3, [fp, #-16]
 17503 0230 0020A0E3 		mov	r2, #0
 17504 0234 0C2083E5 		str	r2, [r3, #12]
6842:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17505              		.loc 1 6842 23
 17506 0238 10301BE5 		ldr	r3, [fp, #-16]
 17507 023c 3F20A0E3 		mov	r2, #63
 17508 0240 082083E5 		str	r2, [r3, #8]
6843:../../Source/Kernel/rme_kernel.c ****     
6844:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6845:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17509              		.loc 1 6845 21
 17510 0244 10301BE5 		ldr	r3, [fp, #-16]
 17511 0248 0020A0E3 		mov	r2, #0
 17512 024c 142083E5 		str	r2, [r3, #20]
6846:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=RME_NULL;
 17513              		.loc 1 6846 17
 17514 0250 10301BE5 		ldr	r3, [fp, #-16]
 17515 0254 0020A0E3 		mov	r2, #0
 17516 0258 182083E5 		str	r2, [r3, #24]
6847:../../Source/Kernel/rme_kernel.c **** 
6848:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6849:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17517              		.loc 1 6849 5
 17518 025c 10301BE5 		ldr	r3, [fp, #-16]
 17519 0260 0213A0E3 		mov	r1, #134217728
 17520 0264 0300A0E1 		mov	r0, r3
 17521 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6850:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6851:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6852:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6853:../../Source/Kernel/rme_kernel.c **** 
6854:../../Source/Kernel/rme_kernel.c ****     return 0;
 17522              		.loc 1 6854 12
 17523 026c 0030A0E3 		mov	r3, #0
 17524              	.L1088:
6855:../../Source/Kernel/rme_kernel.c **** }
 17525              		.loc 1 6855 1
 17526 0270 0300A0E1 		mov	r0, r3
 17527 0274 04D04BE2 		sub	sp, fp, #4
 17528              		.cfi_def_cfa 13, 8
 17529              		@ sp needed
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 431


 17530 0278 0088BDE8 		pop	{fp, pc}
 17531              		.cfi_endproc
 17532              	.LFE65:
 17534              		.section	.text._RME_Sig_Crt,"ax",%progbits
 17535              		.align	2
 17536              		.syntax unified
 17537              		.arm
 17539              	_RME_Sig_Crt:
 17540              	.LFB66:
6856:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Boot_Crt ********************************************/
6857:../../Source/Kernel/rme_kernel.c **** 
6858:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Crt ******************************************************
6859:../../Source/Kernel/rme_kernel.c **** Description : Create a signal endpoint.
6860:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6861:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
6862:../../Source/Kernel/rme_kernel.c ****                                   for this signal.
6863:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6864:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability slot that you want this newly
6865:../../Source/Kernel/rme_kernel.c ****                                   created signal capability to be in.
6866:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6867:../../Source/Kernel/rme_kernel.c **** Output      : None.
6868:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6869:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6870:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Crt(struct RME_Cap_Cpt* Cpt,
6871:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6872:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6873:../../Source/Kernel/rme_kernel.c **** {
 17541              		.loc 1 6873 1
 17542              		.cfi_startproc
 17543              		@ args = 0, pretend = 0, frame = 32
 17544              		@ frame_needed = 1, uses_anonymous_args = 0
 17545 0000 00482DE9 		push	{fp, lr}
 17546              		.cfi_def_cfa_offset 8
 17547              		.cfi_offset 11, -8
 17548              		.cfi_offset 14, -4
 17549 0004 04B08DE2 		add	fp, sp, #4
 17550              		.cfi_def_cfa 11, 4
 17551 0008 20D04DE2 		sub	sp, sp, #32
 17552 000c 18000BE5 		str	r0, [fp, #-24]
 17553 0010 1C100BE5 		str	r1, [fp, #-28]
 17554 0014 20200BE5 		str	r2, [fp, #-32]
6874:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6875:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Crt;
6876:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6877:../../Source/Kernel/rme_kernel.c ****     
6878:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
6879:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17555              		.loc 1 6879 5
 17556 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17557 001c 803003E2 		and	r3, r3, #128
 17558 0020 000053E3 		cmp	r3, #0
 17559 0024 1C00001A 		bne	.L1100
 17560              		.loc 1 6879 5 is_stmt 0 discriminator 1
 17561 0028 18301BE5 		ldr	r3, [fp, #-24]
 17562 002c 142093E5 		ldr	r2, [r3, #20]
 17563 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17564 0034 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 432


 17565 0038 0100008A 		bhi	.L1101
 17566              		.loc 1 6879 5 discriminator 3
 17567 003c 0230E0E3 		mvn	r3, #2
 17568              		.loc 1 6879 5
 17569 0040 8A0000EA 		b	.L1102
 17570              	.L1101:
 17571              		.loc 1 6879 5 discriminator 4
 17572 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17573 0048 8322A0E1 		lsl	r2, r3, #5
 17574 004c 18301BE5 		ldr	r3, [fp, #-24]
 17575 0050 0C3093E5 		ldr	r3, [r3, #12]
 17576 0054 033082E0 		add	r3, r2, r3
 17577 0058 08300BE5 		str	r3, [fp, #-8]
 17578 005c 08301BE5 		ldr	r3, [fp, #-8]
 17579 0060 0300A0E1 		mov	r0, r3
 17580 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17581 0068 0C000BE5 		str	r0, [fp, #-12]
 17582              		.loc 1 6879 5 discriminator 1
 17583 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17584 0070 FF3803E2 		and	r3, r3, #16711680
 17585 0074 020853E3 		cmp	r3, #131072
 17586 0078 0100001A 		bne	.L1103
 17587              		.loc 1 6879 5 discriminator 5
 17588 007c 0830E0E3 		mvn	r3, #8
 17589              		.loc 1 6879 5
 17590 0080 7A0000EA 		b	.L1102
 17591              	.L1103:
 17592              		.loc 1 6879 5 discriminator 6
 17593 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17594 0088 233CA0E1 		lsr	r3, r3, #24
 17595 008c 030053E3 		cmp	r3, #3
 17596 0090 3F00000A 		beq	.L1104
 17597              		.loc 1 6879 5 discriminator 7
 17598 0094 0130E0E3 		mvn	r3, #1
 17599              		.loc 1 6879 5
 17600 0098 740000EA 		b	.L1102
 17601              	.L1100:
 17602              		.loc 1 6879 5 discriminator 2
 17603 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17604 00a0 2324A0E1 		lsr	r2, r3, #8
 17605 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17606 00a8 143093E5 		ldr	r3, [r3, #20]
 17607 00ac 030052E1 		cmp	r2, r3
 17608 00b0 0100003A 		bcc	.L1105
 17609              		.loc 1 6879 5 discriminator 8
 17610 00b4 0230E0E3 		mvn	r3, #2
 17611              		.loc 1 6879 5
 17612 00b8 6C0000EA 		b	.L1102
 17613              	.L1105:
 17614              		.loc 1 6879 5 discriminator 9
 17615 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17616 00c0 2334A0E1 		lsr	r3, r3, #8
 17617 00c4 8322A0E1 		lsl	r2, r3, #5
 17618 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17619 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17620 00d0 033082E0 		add	r3, r2, r3
 17621 00d4 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 433


 17622 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17623 00dc 0300A0E1 		mov	r0, r3
 17624 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17625 00e4 0C000BE5 		str	r0, [fp, #-12]
 17626              		.loc 1 6879 5 discriminator 1
 17627 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17628 00ec FF3803E2 		and	r3, r3, #16711680
 17629 00f0 020853E3 		cmp	r3, #131072
 17630 00f4 0100001A 		bne	.L1106
 17631              		.loc 1 6879 5 discriminator 10
 17632 00f8 0830E0E3 		mvn	r3, #8
 17633              		.loc 1 6879 5
 17634 00fc 5B0000EA 		b	.L1102
 17635              	.L1106:
 17636              		.loc 1 6879 5 discriminator 11
 17637 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17638 0104 233CA0E1 		lsr	r3, r3, #24
 17639 0108 030053E3 		cmp	r3, #3
 17640 010c 0100000A 		beq	.L1107
 17641              		.loc 1 6879 5 discriminator 12
 17642 0110 0130E0E3 		mvn	r3, #1
 17643              		.loc 1 6879 5
 17644 0114 550000EA 		b	.L1102
 17645              	.L1107:
 17646              		.loc 1 6879 5 discriminator 13
 17647 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17648 011c 7F2003E2 		and	r2, r3, #127
 17649 0120 08301BE5 		ldr	r3, [fp, #-8]
 17650 0124 143093E5 		ldr	r3, [r3, #20]
 17651 0128 030052E1 		cmp	r2, r3
 17652 012c 0100003A 		bcc	.L1108
 17653              		.loc 1 6879 5 discriminator 14
 17654 0130 0230E0E3 		mvn	r3, #2
 17655              		.loc 1 6879 5
 17656 0134 4D0000EA 		b	.L1102
 17657              	.L1108:
 17658              		.loc 1 6879 5 discriminator 15
 17659 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17660 013c 7F3003E2 		and	r3, r3, #127
 17661 0140 8322A0E1 		lsl	r2, r3, #5
 17662 0144 08301BE5 		ldr	r3, [fp, #-8]
 17663 0148 0C3093E5 		ldr	r3, [r3, #12]
 17664 014c 033082E0 		add	r3, r2, r3
 17665 0150 08300BE5 		str	r3, [fp, #-8]
 17666 0154 08301BE5 		ldr	r3, [fp, #-8]
 17667 0158 0300A0E1 		mov	r0, r3
 17668 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17669 0160 0C000BE5 		str	r0, [fp, #-12]
 17670              		.loc 1 6879 5 discriminator 1
 17671 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17672 0168 FF3803E2 		and	r3, r3, #16711680
 17673 016c 020853E3 		cmp	r3, #131072
 17674 0170 0100001A 		bne	.L1109
 17675              		.loc 1 6879 5 discriminator 16
 17676 0174 0830E0E3 		mvn	r3, #8
 17677              		.loc 1 6879 5
 17678 0178 3C0000EA 		b	.L1102
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 434


 17679              	.L1109:
 17680              		.loc 1 6879 5 discriminator 17
 17681 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17682 0180 233CA0E1 		lsr	r3, r3, #24
 17683 0184 030053E3 		cmp	r3, #3
 17684 0188 0100000A 		beq	.L1104
 17685              		.loc 1 6879 5 discriminator 18
 17686 018c 0130E0E3 		mvn	r3, #1
 17687              		.loc 1 6879 5
 17688 0190 360000EA 		b	.L1102
 17689              	.L1104:
6880:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
6881:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
6882:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 17690              		.loc 1 6882 5 is_stmt 1
 17691 0194 08301BE5 		ldr	r3, [fp, #-8]
 17692 0198 083093E5 		ldr	r3, [r3, #8]
 17693 019c 013003E2 		and	r3, r3, #1
 17694 01a0 000053E3 		cmp	r3, #0
 17695 01a4 0100001A 		bne	.L1110
 17696              		.loc 1 6882 5 is_stmt 0 discriminator 1
 17697 01a8 0630E0E3 		mvn	r3, #6
 17698              		.loc 1 6882 5
 17699 01ac 2F0000EA 		b	.L1102
 17700              	.L1110:
6883:../../Source/Kernel/rme_kernel.c ****     
6884:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6885:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Crt);
 17701              		.loc 1 6885 5 is_stmt 1
 17702 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17703 01b4 142093E5 		ldr	r2, [r3, #20]
 17704 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17705 01bc 030052E1 		cmp	r2, r3
 17706 01c0 0100008A 		bhi	.L1111
 17707              		.loc 1 6885 5 is_stmt 0 discriminator 1
 17708 01c4 0230E0E3 		mvn	r3, #2
 17709              		.loc 1 6885 5
 17710 01c8 280000EA 		b	.L1102
 17711              	.L1111:
 17712              		.loc 1 6885 5 discriminator 2
 17713 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17714 01d0 8322A0E1 		lsl	r2, r3, #5
 17715 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17716 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17717 01dc 033082E0 		add	r3, r2, r3
 17718 01e0 10300BE5 		str	r3, [fp, #-16]
6886:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
6887:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Sig_Crt);
 17719              		.loc 1 6887 5 is_stmt 1
 17720 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17721 01e8 0128A0E3 		mov	r2, #65536
 17722 01ec 0010A0E3 		mov	r1, #0
 17723 01f0 0300A0E1 		mov	r0, r3
 17724 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 17725 01f8 0030A0E1 		mov	r3, r0
 17726              		.loc 1 6887 5 is_stmt 0 discriminator 1
 17727 01fc 000053E3 		cmp	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 435


 17728 0200 0100001A 		bne	.L1112
 17729 0204 0430E0E3 		mvn	r3, #4
 17730              		.loc 1 6887 5
 17731 0208 180000EA 		b	.L1102
 17732              	.L1112:
 17733              		.loc 1 6887 5 discriminator 2
 17734 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17735 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17736 0214 002093E5 		ldr	r2, [r3]
 17737 0218 10301BE5 		ldr	r3, [fp, #-16]
 17738 021c 102083E5 		str	r2, [r3, #16]
6888:../../Source/Kernel/rme_kernel.c **** 
6889:../../Source/Kernel/rme_kernel.c ****     /* Header init */
6890:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Root_Ref=0U;
 17739              		.loc 1 6890 27 is_stmt 1
 17740 0220 10301BE5 		ldr	r3, [fp, #-16]
 17741 0224 0020A0E3 		mov	r2, #0
 17742 0228 042083E5 		str	r2, [r3, #4]
6891:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Object=0U;
 17743              		.loc 1 6891 25
 17744 022c 10301BE5 		ldr	r3, [fp, #-16]
 17745 0230 0020A0E3 		mov	r2, #0
 17746 0234 0C2083E5 		str	r2, [r3, #12]
6892:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Head.Flag=RME_SIG_FLAG_ALL;
 17747              		.loc 1 6892 23
 17748 0238 10301BE5 		ldr	r3, [fp, #-16]
 17749 023c 3F20A0E3 		mov	r2, #63
 17750 0240 082083E5 		str	r2, [r3, #8]
6893:../../Source/Kernel/rme_kernel.c ****     
6894:../../Source/Kernel/rme_kernel.c ****     /* Info init */
6895:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Sig_Num=0U;
 17751              		.loc 1 6895 21
 17752 0244 10301BE5 		ldr	r3, [fp, #-16]
 17753 0248 0020A0E3 		mov	r2, #0
 17754 024c 142083E5 		str	r2, [r3, #20]
6896:../../Source/Kernel/rme_kernel.c ****     Sig_Crt->Thd=0U;
 17755              		.loc 1 6896 17
 17756 0250 10301BE5 		ldr	r3, [fp, #-16]
 17757 0254 0020A0E3 		mov	r2, #0
 17758 0258 182083E5 		str	r2, [r3, #24]
6897:../../Source/Kernel/rme_kernel.c ****     
6898:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
6899:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Sig_Crt->Head.Type_Stat),
 17759              		.loc 1 6899 5
 17760 025c 10301BE5 		ldr	r3, [fp, #-16]
 17761 0260 0213A0E3 		mov	r1, #134217728
 17762 0264 0300A0E1 		mov	r0, r3
 17763 0268 FEFFFFEB 		bl	__RME_A7A_Write_Release
6900:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_SIG,
6901:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
6902:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
6903:../../Source/Kernel/rme_kernel.c **** 
6904:../../Source/Kernel/rme_kernel.c ****     return 0;
 17764              		.loc 1 6904 12
 17765 026c 0030A0E3 		mov	r3, #0
 17766              	.L1102:
6905:../../Source/Kernel/rme_kernel.c **** }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 436


 17767              		.loc 1 6905 1
 17768 0270 0300A0E1 		mov	r0, r3
 17769 0274 04D04BE2 		sub	sp, fp, #4
 17770              		.cfi_def_cfa 13, 8
 17771              		@ sp needed
 17772 0278 0088BDE8 		pop	{fp, pc}
 17773              		.cfi_endproc
 17774              	.LFE66:
 17776              		.section	.text._RME_Sig_Del,"ax",%progbits
 17777              		.align	2
 17778              		.syntax unified
 17779              		.arm
 17781              	_RME_Sig_Del:
 17782              	.LFB67:
6906:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Crt *************************************************/
6907:../../Source/Kernel/rme_kernel.c **** 
6908:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Del ******************************************************
6909:../../Source/Kernel/rme_kernel.c **** Description : Delete a signal endpoint.
6910:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
6911:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
6912:../../Source/Kernel/rme_kernel.c ****                                   delete from.
6913:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
6914:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
6915:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
6916:../../Source/Kernel/rme_kernel.c **** Output      : None.
6917:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
6918:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6919:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Del(struct RME_Cap_Cpt* Cpt,
6920:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
6921:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
6922:../../Source/Kernel/rme_kernel.c **** {
 17783              		.loc 1 6922 1
 17784              		.cfi_startproc
 17785              		@ args = 0, pretend = 0, frame = 32
 17786              		@ frame_needed = 1, uses_anonymous_args = 0
 17787 0000 00482DE9 		push	{fp, lr}
 17788              		.cfi_def_cfa_offset 8
 17789              		.cfi_offset 11, -8
 17790              		.cfi_offset 14, -4
 17791 0004 04B08DE2 		add	fp, sp, #4
 17792              		.cfi_def_cfa 11, 4
 17793 0008 20D04DE2 		sub	sp, sp, #32
 17794 000c 18000BE5 		str	r0, [fp, #-24]
 17795 0010 1C100BE5 		str	r1, [fp, #-28]
 17796 0014 20200BE5 		str	r2, [fp, #-32]
6923:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
6924:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Sig* Sig_Del;
6925:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
6926:../../Source/Kernel/rme_kernel.c ****     
6927:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
6928:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 17797              		.loc 1 6928 5
 17798 0018 1C301BE5 		ldr	r3, [fp, #-28]
 17799 001c 803003E2 		and	r3, r3, #128
 17800 0020 000053E3 		cmp	r3, #0
 17801 0024 1C00001A 		bne	.L1114
 17802              		.loc 1 6928 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 437


 17803 0028 18301BE5 		ldr	r3, [fp, #-24]
 17804 002c 142093E5 		ldr	r2, [r3, #20]
 17805 0030 1C301BE5 		ldr	r3, [fp, #-28]
 17806 0034 030052E1 		cmp	r2, r3
 17807 0038 0100008A 		bhi	.L1115
 17808              		.loc 1 6928 5 discriminator 3
 17809 003c 0230E0E3 		mvn	r3, #2
 17810              		.loc 1 6928 5
 17811 0040 B80000EA 		b	.L1116
 17812              	.L1115:
 17813              		.loc 1 6928 5 discriminator 4
 17814 0044 1C301BE5 		ldr	r3, [fp, #-28]
 17815 0048 8322A0E1 		lsl	r2, r3, #5
 17816 004c 18301BE5 		ldr	r3, [fp, #-24]
 17817 0050 0C3093E5 		ldr	r3, [r3, #12]
 17818 0054 033082E0 		add	r3, r2, r3
 17819 0058 08300BE5 		str	r3, [fp, #-8]
 17820 005c 08301BE5 		ldr	r3, [fp, #-8]
 17821 0060 0300A0E1 		mov	r0, r3
 17822 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17823 0068 0C000BE5 		str	r0, [fp, #-12]
 17824              		.loc 1 6928 5 discriminator 1
 17825 006c 0C301BE5 		ldr	r3, [fp, #-12]
 17826 0070 FF3803E2 		and	r3, r3, #16711680
 17827 0074 020853E3 		cmp	r3, #131072
 17828 0078 0100001A 		bne	.L1117
 17829              		.loc 1 6928 5 discriminator 5
 17830 007c 0830E0E3 		mvn	r3, #8
 17831              		.loc 1 6928 5
 17832 0080 A80000EA 		b	.L1116
 17833              	.L1117:
 17834              		.loc 1 6928 5 discriminator 6
 17835 0084 0C301BE5 		ldr	r3, [fp, #-12]
 17836 0088 233CA0E1 		lsr	r3, r3, #24
 17837 008c 030053E3 		cmp	r3, #3
 17838 0090 3F00000A 		beq	.L1118
 17839              		.loc 1 6928 5 discriminator 7
 17840 0094 0130E0E3 		mvn	r3, #1
 17841              		.loc 1 6928 5
 17842 0098 A20000EA 		b	.L1116
 17843              	.L1114:
 17844              		.loc 1 6928 5 discriminator 2
 17845 009c 1C301BE5 		ldr	r3, [fp, #-28]
 17846 00a0 2324A0E1 		lsr	r2, r3, #8
 17847 00a4 18301BE5 		ldr	r3, [fp, #-24]
 17848 00a8 143093E5 		ldr	r3, [r3, #20]
 17849 00ac 030052E1 		cmp	r2, r3
 17850 00b0 0100003A 		bcc	.L1119
 17851              		.loc 1 6928 5 discriminator 8
 17852 00b4 0230E0E3 		mvn	r3, #2
 17853              		.loc 1 6928 5
 17854 00b8 9A0000EA 		b	.L1116
 17855              	.L1119:
 17856              		.loc 1 6928 5 discriminator 9
 17857 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 17858 00c0 2334A0E1 		lsr	r3, r3, #8
 17859 00c4 8322A0E1 		lsl	r2, r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 438


 17860 00c8 18301BE5 		ldr	r3, [fp, #-24]
 17861 00cc 0C3093E5 		ldr	r3, [r3, #12]
 17862 00d0 033082E0 		add	r3, r2, r3
 17863 00d4 08300BE5 		str	r3, [fp, #-8]
 17864 00d8 08301BE5 		ldr	r3, [fp, #-8]
 17865 00dc 0300A0E1 		mov	r0, r3
 17866 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17867 00e4 0C000BE5 		str	r0, [fp, #-12]
 17868              		.loc 1 6928 5 discriminator 1
 17869 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 17870 00ec FF3803E2 		and	r3, r3, #16711680
 17871 00f0 020853E3 		cmp	r3, #131072
 17872 00f4 0100001A 		bne	.L1120
 17873              		.loc 1 6928 5 discriminator 10
 17874 00f8 0830E0E3 		mvn	r3, #8
 17875              		.loc 1 6928 5
 17876 00fc 890000EA 		b	.L1116
 17877              	.L1120:
 17878              		.loc 1 6928 5 discriminator 11
 17879 0100 0C301BE5 		ldr	r3, [fp, #-12]
 17880 0104 233CA0E1 		lsr	r3, r3, #24
 17881 0108 030053E3 		cmp	r3, #3
 17882 010c 0100000A 		beq	.L1121
 17883              		.loc 1 6928 5 discriminator 12
 17884 0110 0130E0E3 		mvn	r3, #1
 17885              		.loc 1 6928 5
 17886 0114 830000EA 		b	.L1116
 17887              	.L1121:
 17888              		.loc 1 6928 5 discriminator 13
 17889 0118 1C301BE5 		ldr	r3, [fp, #-28]
 17890 011c 7F2003E2 		and	r2, r3, #127
 17891 0120 08301BE5 		ldr	r3, [fp, #-8]
 17892 0124 143093E5 		ldr	r3, [r3, #20]
 17893 0128 030052E1 		cmp	r2, r3
 17894 012c 0100003A 		bcc	.L1122
 17895              		.loc 1 6928 5 discriminator 14
 17896 0130 0230E0E3 		mvn	r3, #2
 17897              		.loc 1 6928 5
 17898 0134 7B0000EA 		b	.L1116
 17899              	.L1122:
 17900              		.loc 1 6928 5 discriminator 15
 17901 0138 1C301BE5 		ldr	r3, [fp, #-28]
 17902 013c 7F3003E2 		and	r3, r3, #127
 17903 0140 8322A0E1 		lsl	r2, r3, #5
 17904 0144 08301BE5 		ldr	r3, [fp, #-8]
 17905 0148 0C3093E5 		ldr	r3, [r3, #12]
 17906 014c 033082E0 		add	r3, r2, r3
 17907 0150 08300BE5 		str	r3, [fp, #-8]
 17908 0154 08301BE5 		ldr	r3, [fp, #-8]
 17909 0158 0300A0E1 		mov	r0, r3
 17910 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17911 0160 0C000BE5 		str	r0, [fp, #-12]
 17912              		.loc 1 6928 5 discriminator 1
 17913 0164 0C301BE5 		ldr	r3, [fp, #-12]
 17914 0168 FF3803E2 		and	r3, r3, #16711680
 17915 016c 020853E3 		cmp	r3, #131072
 17916 0170 0100001A 		bne	.L1123
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 439


 17917              		.loc 1 6928 5 discriminator 16
 17918 0174 0830E0E3 		mvn	r3, #8
 17919              		.loc 1 6928 5
 17920 0178 6A0000EA 		b	.L1116
 17921              	.L1123:
 17922              		.loc 1 6928 5 discriminator 17
 17923 017c 0C301BE5 		ldr	r3, [fp, #-12]
 17924 0180 233CA0E1 		lsr	r3, r3, #24
 17925 0184 030053E3 		cmp	r3, #3
 17926 0188 0100000A 		beq	.L1118
 17927              		.loc 1 6928 5 discriminator 18
 17928 018c 0130E0E3 		mvn	r3, #1
 17929              		.loc 1 6928 5
 17930 0190 640000EA 		b	.L1116
 17931              	.L1118:
6929:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
6930:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
6931:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 17932              		.loc 1 6931 5 is_stmt 1
 17933 0194 08301BE5 		ldr	r3, [fp, #-8]
 17934 0198 083093E5 		ldr	r3, [r3, #8]
 17935 019c 023003E2 		and	r3, r3, #2
 17936 01a0 000053E3 		cmp	r3, #0
 17937 01a4 0100001A 		bne	.L1124
 17938              		.loc 1 6931 5 is_stmt 0 discriminator 1
 17939 01a8 0630E0E3 		mvn	r3, #6
 17940              		.loc 1 6931 5
 17941 01ac 5D0000EA 		b	.L1116
 17942              	.L1124:
6932:../../Source/Kernel/rme_kernel.c ****     
6933:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
6934:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Sig,struct RME_Cap_Sig*,Sig_Del);
 17943              		.loc 1 6934 5 is_stmt 1
 17944 01b0 08301BE5 		ldr	r3, [fp, #-8]
 17945 01b4 142093E5 		ldr	r2, [r3, #20]
 17946 01b8 20301BE5 		ldr	r3, [fp, #-32]
 17947 01bc 030052E1 		cmp	r2, r3
 17948 01c0 0100008A 		bhi	.L1125
 17949              		.loc 1 6934 5 is_stmt 0 discriminator 1
 17950 01c4 0230E0E3 		mvn	r3, #2
 17951              		.loc 1 6934 5
 17952 01c8 560000EA 		b	.L1116
 17953              	.L1125:
 17954              		.loc 1 6934 5 discriminator 2
 17955 01cc 20301BE5 		ldr	r3, [fp, #-32]
 17956 01d0 8322A0E1 		lsl	r2, r3, #5
 17957 01d4 08301BE5 		ldr	r3, [fp, #-8]
 17958 01d8 0C3093E5 		ldr	r3, [r3, #12]
 17959 01dc 033082E0 		add	r3, r2, r3
 17960 01e0 10300BE5 		str	r3, [fp, #-16]
6935:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
6936:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Sig_Del,Type_Stat,RME_CAP_TYPE_SIG);
 17961              		.loc 1 6936 5 is_stmt 1
 17962 01e4 10301BE5 		ldr	r3, [fp, #-16]
 17963 01e8 0300A0E1 		mov	r0, r3
 17964 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 17965 01f0 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 440


 17966              		.loc 1 6936 5 is_stmt 0 discriminator 1
 17967 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 17968 01f8 FF3803E2 		and	r3, r3, #16711680
 17969 01fc 020853E3 		cmp	r3, #131072
 17970 0200 0100000A 		beq	.L1126
 17971 0204 0830E0E3 		mvn	r3, #8
 17972              		.loc 1 6936 5
 17973 0208 460000EA 		b	.L1116
 17974              	.L1126:
 17975              		.loc 1 6936 5 discriminator 2
 17976 020c 0C301BE5 		ldr	r3, [fp, #-12]
 17977 0210 233CA0E1 		lsr	r3, r3, #24
 17978 0214 080053E3 		cmp	r3, #8
 17979 0218 0100000A 		beq	.L1127
 17980              		.loc 1 6936 5 discriminator 3
 17981 021c 0130E0E3 		mvn	r3, #1
 17982              		.loc 1 6936 5
 17983 0220 400000EA 		b	.L1116
 17984              	.L1127:
 17985              		.loc 1 6936 5 discriminator 4
 17986 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 17987 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 17988 022c 002093E5 		ldr	r2, [r3]
 17989 0230 10301BE5 		ldr	r3, [fp, #-16]
 17990 0234 103093E5 		ldr	r3, [r3, #16]
 17991 0238 0310A0E1 		mov	r1, r3
 17992 023c 0200A0E1 		mov	r0, r2
 17993 0240 FEFFFFEB 		bl	_RME_Diff
 17994 0244 0030A0E1 		mov	r3, r0
 17995              		.loc 1 6936 5 discriminator 1
 17996 0248 0A0053E3 		cmp	r3, #10
 17997 024c 0100008A 		bhi	.L1128
 17998              		.loc 1 6936 5 discriminator 5
 17999 0250 0730E0E3 		mvn	r3, #7
 18000              		.loc 1 6936 5
 18001 0254 330000EA 		b	.L1116
 18002              	.L1128:
 18003              		.loc 1 6936 5 discriminator 6
 18004 0258 10301BE5 		ldr	r3, [fp, #-16]
 18005 025c 043093E5 		ldr	r3, [r3, #4]
 18006 0260 000053E3 		cmp	r3, #0
 18007 0264 0B00000A 		beq	.L1129
 18008              		.loc 1 6936 5 discriminator 7
 18009 0268 0C301BE5 		ldr	r3, [fp, #-12]
 18010 026c 7330FFE6 		uxth	r3, r3
 18011 0270 000053E3 		cmp	r3, #0
 18012 0274 0500001A 		bne	.L1130
 18013              		.loc 1 6936 5 discriminator 9
 18014 0278 10001BE5 		ldr	r0, [fp, #-16]
 18015 027c 0C301BE5 		ldr	r3, [fp, #-12]
 18016 0280 FF38C3E3 		bic	r3, r3, #16711680
 18017 0284 0320A0E1 		mov	r2, r3
 18018 0288 0C101BE5 		ldr	r1, [fp, #-12]
 18019 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18020              	.L1130:
 18021              		.loc 1 6936 5 discriminator 11
 18022 0290 0530E0E3 		mvn	r3, #5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 441


 18023              		.loc 1 6936 5
 18024 0294 230000EA 		b	.L1116
 18025              	.L1129:
 18026              		.loc 1 6936 5 discriminator 8
 18027 0298 0C301BE5 		ldr	r3, [fp, #-12]
 18028 029c 7330FFE6 		uxth	r3, r3
 18029 02a0 000053E3 		cmp	r3, #0
 18030 02a4 0800000A 		beq	.L1131
 18031              		.loc 1 6936 5 discriminator 12
 18032 02a8 003000E3 		movw	r3, #:lower16:.LC6
 18033 02ac 003040E3 		movt	r3, #:upper16:.LC6
 18034 02b0 002000E3 		movw	r2, #:lower16:.LC7
 18035 02b4 002040E3 		movt	r2, #:upper16:.LC7
 18036 02b8 181B01E3 		movw	r1, #6936
 18037 02bc 000000E3 		movw	r0, #:lower16:.LC8
 18038 02c0 000040E3 		movt	r0, #:upper16:.LC8
 18039 02c4 FEFFFFEB 		bl	RME_Log
 18040              	.L1132:
 18041              		.loc 1 6936 5
 18042 02c8 FEFFFFEA 		b	.L1132
 18043              	.L1131:
6937:../../Source/Kernel/rme_kernel.c **** 
6938:../../Source/Kernel/rme_kernel.c ****     /* Check if the signal endpoint is currently used and cannot be deleted */
6939:../../Source/Kernel/rme_kernel.c ****     if(Sig_Del->Thd!=0U)
 18044              		.loc 1 6939 15 is_stmt 1
 18045 02cc 10301BE5 		ldr	r3, [fp, #-16]
 18046 02d0 183093E5 		ldr	r3, [r3, #24]
 18047              		.loc 1 6939 7
 18048 02d4 000053E3 		cmp	r3, #0
 18049 02d8 0700000A 		beq	.L1133
6940:../../Source/Kernel/rme_kernel.c ****     {
6941:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6942:../../Source/Kernel/rme_kernel.c **** 
6943:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Sig_Del,Type_Stat);
 18050              		.loc 1 6943 9
 18051 02dc 10001BE5 		ldr	r0, [fp, #-16]
 18052 02e0 0C301BE5 		ldr	r3, [fp, #-12]
 18053 02e4 FF38C3E3 		bic	r3, r3, #16711680
 18054 02e8 0320A0E1 		mov	r2, r3
 18055 02ec 0C101BE5 		ldr	r1, [fp, #-12]
 18056 02f0 FEFFFFEB 		bl	_RME_Comp_Swap_Single
6944:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 18057              		.loc 1 6944 16
 18058 02f4 4B3FE0E3 		mvn	r3, #300
 18059 02f8 0A0000EA 		b	.L1116
 18060              	.L1133:
6945:../../Source/Kernel/rme_kernel.c ****     }
6946:../../Source/Kernel/rme_kernel.c ****     else
6947:../../Source/Kernel/rme_kernel.c ****     {
6948:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6949:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6950:../../Source/Kernel/rme_kernel.c ****     }
6951:../../Source/Kernel/rme_kernel.c ****     
6952:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
6953:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Sig_Del,Type_Stat);
 18061              		.loc 1 6953 5
 18062 02fc 10301BE5 		ldr	r3, [fp, #-16]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 442


 18063 0300 0020A0E3 		mov	r2, #0
 18064 0304 0C101BE5 		ldr	r1, [fp, #-12]
 18065 0308 0300A0E1 		mov	r0, r3
 18066 030c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18067 0310 0030A0E1 		mov	r3, r0
 18068              		.loc 1 6953 5 is_stmt 0 discriminator 1
 18069 0314 000053E3 		cmp	r3, #0
 18070 0318 0100001A 		bne	.L1134
 18071 031c 0030E0E3 		mvn	r3, #0
 18072              		.loc 1 6953 5
 18073 0320 000000EA 		b	.L1116
 18074              	.L1134:
6954:../../Source/Kernel/rme_kernel.c ****     
6955:../../Source/Kernel/rme_kernel.c ****     return 0;
 18075              		.loc 1 6955 12 is_stmt 1
 18076 0324 0030A0E3 		mov	r3, #0
 18077              	.L1116:
6956:../../Source/Kernel/rme_kernel.c **** }
 18078              		.loc 1 6956 1
 18079 0328 0300A0E1 		mov	r0, r3
 18080 032c 04D04BE2 		sub	sp, fp, #4
 18081              		.cfi_def_cfa 13, 8
 18082              		@ sp needed
 18083 0330 0088BDE8 		pop	{fp, pc}
 18084              		.cfi_endproc
 18085              	.LFE67:
 18087              		.section	.text._RME_Kern_High,"ax",%progbits
 18088              		.align	2
 18089              		.global	_RME_Kern_High
 18090              		.syntax unified
 18091              		.arm
 18093              	_RME_Kern_High:
 18094              	.LFB68:
6957:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Del *************************************************/
6958:../../Source/Kernel/rme_kernel.c **** 
6959:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_High ****************************************************
6960:../../Source/Kernel/rme_kernel.c **** Description : Pick the thread with the highest priority to run. Always call
6961:../../Source/Kernel/rme_kernel.c ****               this after you finish all your kernel sending stuff in the
6962:../../Source/Kernel/rme_kernel.c ****               interrupt handler, or the kernel send will not be correct.
6963:../../Source/Kernel/rme_kernel.c ****               This function is also used by system calls to pick a random
6964:../../Source/Kernel/rme_kernel.c ****               highest priority thread.
6965:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
6966:../../Source/Kernel/rme_kernel.c ****               struct RME_CPU_Local* Local - The CPU-local data structure.
6967:../../Source/Kernel/rme_kernel.c **** Output      : volatile struct RME_Reg_Struct* Reg - The updated register set.
6968:../../Source/Kernel/rme_kernel.c **** Return      : None.
6969:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
6970:../../Source/Kernel/rme_kernel.c **** void _RME_Kern_High(struct RME_Reg_Struct* Reg,
6971:../../Source/Kernel/rme_kernel.c ****                     struct RME_CPU_Local* Local)
6972:../../Source/Kernel/rme_kernel.c **** {
 18095              		.loc 1 6972 1
 18096              		.cfi_startproc
 18097              		@ args = 0, pretend = 0, frame = 16
 18098              		@ frame_needed = 1, uses_anonymous_args = 0
 18099 0000 00482DE9 		push	{fp, lr}
 18100              		.cfi_def_cfa_offset 8
 18101              		.cfi_offset 11, -8
 18102              		.cfi_offset 14, -4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 443


 18103 0004 04B08DE2 		add	fp, sp, #4
 18104              		.cfi_def_cfa 11, 4
 18105 0008 10D04DE2 		sub	sp, sp, #16
 18106 000c 10000BE5 		str	r0, [fp, #-16]
 18107 0010 14100BE5 		str	r1, [fp, #-20]
6973:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_New;
6974:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
6975:../../Source/Kernel/rme_kernel.c **** 
6976:../../Source/Kernel/rme_kernel.c ****     Thd_New=_RME_Run_High(Local);
 18108              		.loc 1 6976 13
 18109 0014 14001BE5 		ldr	r0, [fp, #-20]
 18110 0018 FEFFFFEB 		bl	_RME_Run_High
 18111 001c 08000BE5 		str	r0, [fp, #-8]
6977:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New!=RME_NULL);
 18112              		.loc 1 6977 5
 18113 0020 08301BE5 		ldr	r3, [fp, #-8]
 18114 0024 000053E3 		cmp	r3, #0
 18115 0028 0800001A 		bne	.L1136
 18116              		.loc 1 6977 5 is_stmt 0 discriminator 1
 18117 002c 003000E3 		movw	r3, #:lower16:.LC6
 18118 0030 003040E3 		movt	r3, #:upper16:.LC6
 18119 0034 002000E3 		movw	r2, #:lower16:.LC7
 18120 0038 002040E3 		movt	r2, #:upper16:.LC7
 18121 003c 411B01E3 		movw	r1, #6977
 18122 0040 000000E3 		movw	r0, #:lower16:.LC8
 18123 0044 000040E3 		movt	r0, #:upper16:.LC8
 18124 0048 FEFFFFEB 		bl	RME_Log
 18125              	.L1137:
 18126              		.loc 1 6977 5
 18127 004c FEFFFFEA 		b	.L1137
 18128              	.L1136:
6978:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 18129              		.loc 1 6978 12 is_stmt 1
 18130 0050 14301BE5 		ldr	r3, [fp, #-20]
 18131 0054 043093E5 		ldr	r3, [r3, #4]
 18132 0058 0C300BE5 		str	r3, [fp, #-12]
6979:../../Source/Kernel/rme_kernel.c **** 
6980:../../Source/Kernel/rme_kernel.c ****     /* Are these two threads the same? */
6981:../../Source/Kernel/rme_kernel.c ****     if(Thd_New==Thd_Cur)
 18133              		.loc 1 6981 7
 18134 005c 08201BE5 		ldr	r2, [fp, #-8]
 18135 0060 0C301BE5 		ldr	r3, [fp, #-12]
 18136 0064 030052E1 		cmp	r2, r3
 18137 0068 1E00000A 		beq	.L1143
6982:../../Source/Kernel/rme_kernel.c ****     {
6983:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6984:../../Source/Kernel/rme_kernel.c **** 
6985:../../Source/Kernel/rme_kernel.c ****         return;
6986:../../Source/Kernel/rme_kernel.c ****     }
6987:../../Source/Kernel/rme_kernel.c ****     else
6988:../../Source/Kernel/rme_kernel.c ****     {
6989:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6990:../../Source/Kernel/rme_kernel.c ****         /* No action required */
6991:../../Source/Kernel/rme_kernel.c ****     }
6992:../../Source/Kernel/rme_kernel.c **** 
6993:../../Source/Kernel/rme_kernel.c ****     /* Check if we need to do the context switch regardless of priority
6994:../../Source/Kernel/rme_kernel.c ****      * because the current thread is not ready yet. */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 444


6995:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.State==RME_THD_READY)
 18138              		.loc 1 6995 22
 18139 006c 0C301BE5 		ldr	r3, [fp, #-12]
 18140 0070 1C3093E5 		ldr	r3, [r3, #28]
 18141              		.loc 1 6995 7
 18142 0074 000053E3 		cmp	r3, #0
 18143 0078 0500001A 		bne	.L1140
6996:../../Source/Kernel/rme_kernel.c ****     {
6997:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
6998:../../Source/Kernel/rme_kernel.c **** 
6999:../../Source/Kernel/rme_kernel.c ****         /* Check priority to see if the switch is necessary */
7000:../../Source/Kernel/rme_kernel.c ****         if(Thd_New->Sched.Prio<=Thd_Cur->Sched.Prio)
 18144              		.loc 1 7000 26
 18145 007c 08301BE5 		ldr	r3, [fp, #-8]
 18146 0080 202093E5 		ldr	r2, [r3, #32]
 18147              		.loc 1 7000 47
 18148 0084 0C301BE5 		ldr	r3, [fp, #-12]
 18149 0088 203093E5 		ldr	r3, [r3, #32]
 18150              		.loc 1 7000 11
 18151 008c 030052E1 		cmp	r2, r3
 18152 0090 1600009A 		bls	.L1144
 18153              	.L1140:
7001:../../Source/Kernel/rme_kernel.c ****         {
7002:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7003:../../Source/Kernel/rme_kernel.c **** 
7004:../../Source/Kernel/rme_kernel.c ****             return;
7005:../../Source/Kernel/rme_kernel.c ****         }
7006:../../Source/Kernel/rme_kernel.c ****         else
7007:../../Source/Kernel/rme_kernel.c ****         {
7008:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7009:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7010:../../Source/Kernel/rme_kernel.c ****         }
7011:../../Source/Kernel/rme_kernel.c ****     }
7012:../../Source/Kernel/rme_kernel.c ****     else
7013:../../Source/Kernel/rme_kernel.c ****     {
7014:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7015:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7016:../../Source/Kernel/rme_kernel.c ****     }
7017:../../Source/Kernel/rme_kernel.c **** 
7018:../../Source/Kernel/rme_kernel.c ****     /* We will have a solid context switch on this point. The current 
7019:../../Source/Kernel/rme_kernel.c ****      * thread is not necessarily READY, it could be EXCPEND as well. */
7020:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_New->Sched.State==RME_THD_READY);
 18154              		.loc 1 7020 5
 18155 0094 08301BE5 		ldr	r3, [fp, #-8]
 18156 0098 1C3093E5 		ldr	r3, [r3, #28]
 18157 009c 000053E3 		cmp	r3, #0
 18158 00a0 0800000A 		beq	.L1141
 18159              		.loc 1 7020 5 is_stmt 0 discriminator 1
 18160 00a4 003000E3 		movw	r3, #:lower16:.LC6
 18161 00a8 003040E3 		movt	r3, #:upper16:.LC6
 18162 00ac 002000E3 		movw	r2, #:lower16:.LC7
 18163 00b0 002040E3 		movt	r2, #:upper16:.LC7
 18164 00b4 6C1B01E3 		movw	r1, #7020
 18165 00b8 000000E3 		movw	r0, #:lower16:.LC8
 18166 00bc 000040E3 		movt	r0, #:upper16:.LC8
 18167 00c0 FEFFFFEB 		bl	RME_Log
 18168              	.L1142:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 445


 18169              		.loc 1 7020 5
 18170 00c4 FEFFFFEA 		b	.L1142
 18171              	.L1141:
7021:../../Source/Kernel/rme_kernel.c ****     _RME_Run_Swt(Reg,Thd_Cur,Thd_New);
 18172              		.loc 1 7021 5 is_stmt 1
 18173 00c8 08201BE5 		ldr	r2, [fp, #-8]
 18174 00cc 0C101BE5 		ldr	r1, [fp, #-12]
 18175 00d0 10001BE5 		ldr	r0, [fp, #-16]
 18176 00d4 FEFFFFEB 		bl	_RME_Run_Swt
7022:../../Source/Kernel/rme_kernel.c ****     Local->Thd_Cur=Thd_New;
 18177              		.loc 1 7022 19
 18178 00d8 14301BE5 		ldr	r3, [fp, #-20]
 18179 00dc 08201BE5 		ldr	r2, [fp, #-8]
 18180 00e0 042083E5 		str	r2, [r3, #4]
 18181 00e4 020000EA 		b	.L1135
 18182              	.L1143:
6985:../../Source/Kernel/rme_kernel.c ****     }
 18183              		.loc 1 6985 9
 18184 00e8 00F020E3 		nop
 18185 00ec 000000EA 		b	.L1135
 18186              	.L1144:
7004:../../Source/Kernel/rme_kernel.c ****         }
 18187              		.loc 1 7004 13
 18188 00f0 00F020E3 		nop
 18189              	.L1135:
7023:../../Source/Kernel/rme_kernel.c **** }
 18190              		.loc 1 7023 1
 18191 00f4 04D04BE2 		sub	sp, fp, #4
 18192              		.cfi_def_cfa 13, 8
 18193              		@ sp needed
 18194 00f8 0088BDE8 		pop	{fp, pc}
 18195              		.cfi_endproc
 18196              	.LFE68:
 18198              		.section	.text._RME_Kern_Snd,"ax",%progbits
 18199              		.align	2
 18200              		.global	_RME_Kern_Snd
 18201              		.syntax unified
 18202              		.arm
 18204              	_RME_Kern_Snd:
 18205              	.LFB69:
7024:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_High ***********************************************/
7025:../../Source/Kernel/rme_kernel.c **** 
7026:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kern_Snd *****************************************************
7027:../../Source/Kernel/rme_kernel.c **** Description : Try to send a signal to an endpoint from kernel. This is intended
7028:../../Source/Kernel/rme_kernel.c ****               to be called in the interrupt routines in the kernel, and this is
7029:../../Source/Kernel/rme_kernel.c ****               not a system call. The capability passed in must be the root
7030:../../Source/Kernel/rme_kernel.c ****               capability, and this function will not check whether it really is.
7031:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Sig* Cap_Sig - The signal root capability.
7032:../../Source/Kernel/rme_kernel.c **** Output      : None.
7033:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7034:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7035:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kern_Snd(struct RME_Cap_Sig* Cap_Sig)
7036:../../Source/Kernel/rme_kernel.c **** {
 18206              		.loc 1 7036 1
 18207              		.cfi_startproc
 18208              		@ args = 0, pretend = 0, frame = 16
 18209              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 446


 18210 0000 00482DE9 		push	{fp, lr}
 18211              		.cfi_def_cfa_offset 8
 18212              		.cfi_offset 11, -8
 18213              		.cfi_offset 14, -4
 18214 0004 04B08DE2 		add	fp, sp, #4
 18215              		.cfi_def_cfa 11, 4
 18216 0008 10D04DE2 		sub	sp, sp, #16
 18217 000c 10000BE5 		str	r0, [fp, #-16]
7037:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7038:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Sig;
7039:../../Source/Kernel/rme_kernel.c ****     
7040:../../Source/Kernel/rme_kernel.c ****     Thd_Sig=Cap_Sig->Thd;
 18218              		.loc 1 7040 12
 18219 0010 10301BE5 		ldr	r3, [fp, #-16]
 18220 0014 183093E5 		ldr	r3, [r3, #24]
 18221 0018 0C300BE5 		str	r3, [fp, #-12]
7041:../../Source/Kernel/rme_kernel.c ****     
7042:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7043:../../Source/Kernel/rme_kernel.c ****     if(Thd_Sig!=RME_NULL)
 18222              		.loc 1 7043 7
 18223 001c 0C301BE5 		ldr	r3, [fp, #-12]
 18224 0020 000053E3 		cmp	r3, #0
 18225 0024 0B00000A 		beq	.L1146
7044:../../Source/Kernel/rme_kernel.c ****     {
7045:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7046:../../Source/Kernel/rme_kernel.c **** 
7047:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Local==RME_CPU_LOCAL())
 18226              		.loc 1 7047 26
 18227 0028 0C301BE5 		ldr	r3, [fp, #-12]
 18228 002c 142093E5 		ldr	r2, [r3, #20]
 18229              		.loc 1 7047 11
 18230 0030 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18231 0034 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18232 0038 030052E1 		cmp	r2, r3
 18233 003c 0200001A 		bne	.L1147
7048:../../Source/Kernel/rme_kernel.c ****         {
7049:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7050:../../Source/Kernel/rme_kernel.c **** 
7051:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 18234              		.loc 1 7051 20
 18235 0040 0130A0E3 		mov	r3, #1
 18236 0044 08300BE5 		str	r3, [fp, #-8]
 18237 0048 040000EA 		b	.L1148
 18238              	.L1147:
7052:../../Source/Kernel/rme_kernel.c ****         }
7053:../../Source/Kernel/rme_kernel.c ****         else
7054:../../Source/Kernel/rme_kernel.c ****         {
7055:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7056:../../Source/Kernel/rme_kernel.c **** 
7057:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 18239              		.loc 1 7057 20
 18240 004c 0030A0E3 		mov	r3, #0
 18241 0050 08300BE5 		str	r3, [fp, #-8]
 18242 0054 010000EA 		b	.L1148
 18243              	.L1146:
7058:../../Source/Kernel/rme_kernel.c ****         }
7059:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 447


7060:../../Source/Kernel/rme_kernel.c ****     else
7061:../../Source/Kernel/rme_kernel.c ****     {
7062:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7063:../../Source/Kernel/rme_kernel.c **** 
7064:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 18244              		.loc 1 7064 16
 18245 0058 0030A0E3 		mov	r3, #0
 18246 005c 08300BE5 		str	r3, [fp, #-8]
 18247              	.L1148:
7065:../../Source/Kernel/rme_kernel.c ****     }
7066:../../Source/Kernel/rme_kernel.c **** 
7067:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 18248              		.loc 1 7067 7
 18249 0060 08301BE5 		ldr	r3, [fp, #-8]
 18250 0064 000053E3 		cmp	r3, #0
 18251 0068 1700000A 		beq	.L1149
7068:../../Source/Kernel/rme_kernel.c ****     {
7069:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7070:../../Source/Kernel/rme_kernel.c **** 
7071:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7072:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7073:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7074:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7075:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Sig->Ctx.Reg->Reg),1);
 18252              		.loc 1 7075 44
 18253 006c 0C301BE5 		ldr	r3, [fp, #-12]
 18254 0070 483093E5 		ldr	r3, [r3, #72]
 18255              		.loc 1 7075 9
 18256 0074 0110A0E3 		mov	r1, #1
 18257 0078 0300A0E1 		mov	r0, r3
 18258 007c FEFFFFEB 		bl	__RME_Svc_Retval_Set
7076:../../Source/Kernel/rme_kernel.c ****         
7077:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7078:../../Source/Kernel/rme_kernel.c ****         if(Thd_Sig->Sched.Slice!=0U)
 18259              		.loc 1 7078 26
 18260 0080 0C301BE5 		ldr	r3, [fp, #-12]
 18261 0084 183093E5 		ldr	r3, [r3, #24]
 18262              		.loc 1 7078 11
 18263 0088 000053E3 		cmp	r3, #0
 18264 008c 0500000A 		beq	.L1150
7079:../../Source/Kernel/rme_kernel.c ****         {
7080:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7081:../../Source/Kernel/rme_kernel.c **** 
7082:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7083:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_READY;
 18265              		.loc 1 7083 33
 18266 0090 0C301BE5 		ldr	r3, [fp, #-12]
 18267 0094 0020A0E3 		mov	r2, #0
 18268 0098 1C2083E5 		str	r2, [r3, #28]
7084:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Sig);
 18269              		.loc 1 7084 13
 18270 009c 0C001BE5 		ldr	r0, [fp, #-12]
 18271 00a0 FEFFFFEB 		bl	_RME_Run_Ins
 18272 00a4 040000EA 		b	.L1151
 18273              	.L1150:
7085:../../Source/Kernel/rme_kernel.c ****         }
7086:../../Source/Kernel/rme_kernel.c ****         else
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 448


7087:../../Source/Kernel/rme_kernel.c ****         {
7088:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7089:../../Source/Kernel/rme_kernel.c **** 
7090:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7091:../../Source/Kernel/rme_kernel.c ****             Thd_Sig->Sched.State=RME_THD_TIMEOUT;
 18274              		.loc 1 7091 33
 18275 00a8 0C301BE5 		ldr	r3, [fp, #-12]
 18276 00ac 0220A0E3 		mov	r2, #2
 18277 00b0 1C2083E5 		str	r2, [r3, #28]
7092:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Sig);
 18278              		.loc 1 7092 13
 18279 00b4 0C001BE5 		ldr	r0, [fp, #-12]
 18280 00b8 FEFFFFEB 		bl	_RME_Run_Notif
 18281              	.L1151:
7093:../../Source/Kernel/rme_kernel.c ****         }
7094:../../Source/Kernel/rme_kernel.c ****         
7095:../../Source/Kernel/rme_kernel.c ****         /* We will not pick the highest priority thread here immediately, 
7096:../../Source/Kernel/rme_kernel.c ****          * because we may send to a myriad of endpoints in one interrupt, and
7097:../../Source/Kernel/rme_kernel.c ****          * we hope to perform the context switch only once when exiting that
7098:../../Source/Kernel/rme_kernel.c ****          * handler. Also note that the current thread could be EXCPEND as well;
7099:../../Source/Kernel/rme_kernel.c ****          * this is different from the normal signal sending system call. */
7100:../../Source/Kernel/rme_kernel.c ****         
7101:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7102:../../Source/Kernel/rme_kernel.c ****         Cap_Sig->Thd=RME_NULL;
 18282              		.loc 1 7102 21
 18283 00bc 10301BE5 		ldr	r3, [fp, #-16]
 18284 00c0 0020A0E3 		mov	r2, #0
 18285 00c4 182083E5 		str	r2, [r3, #24]
 18286 00c8 0F0000EA 		b	.L1152
 18287              	.L1149:
7103:../../Source/Kernel/rme_kernel.c ****     }
7104:../../Source/Kernel/rme_kernel.c ****     else
7105:../../Source/Kernel/rme_kernel.c ****     {
7106:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7107:../../Source/Kernel/rme_kernel.c **** 
7108:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, or nobody blocked.
7109:../../Source/Kernel/rme_kernel.c ****          * We just faa the counter value and return. */
7110:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Cap_Sig->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 18288              		.loc 1 7110 12
 18289 00cc 10301BE5 		ldr	r3, [fp, #-16]
 18290 00d0 143083E2 		add	r3, r3, #20
 18291 00d4 0110A0E3 		mov	r1, #1
 18292 00d8 0300A0E1 		mov	r0, r3
 18293 00dc FEFFFFEB 		bl	_RME_Fetch_Add_Single
 18294 00e0 0030A0E1 		mov	r3, r0
 18295              		.loc 1 7110 11 discriminator 1
 18296 00e4 0A0173E3 		cmn	r3, #-2147483646
 18297 00e8 0700009A 		bls	.L1152
7111:../../Source/Kernel/rme_kernel.c ****         {
7112:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7113:../../Source/Kernel/rme_kernel.c **** 
7114:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Cap_Sig->Sig_Num),-1);
 18298              		.loc 1 7114 13
 18299 00ec 10301BE5 		ldr	r3, [fp, #-16]
 18300 00f0 143083E2 		add	r3, r3, #20
 18301 00f4 0010E0E3 		mvn	r1, #0
 18302 00f8 0300A0E1 		mov	r0, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 449


 18303 00fc FEFFFFEB 		bl	_RME_Fetch_Add_Single
7115:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 18304              		.loc 1 7115 20
 18305 0100 D13E0FE3 		movw	r3, #65233
 18306 0104 FF3F4FE3 		movt	r3, 65535
 18307 0108 000000EA 		b	.L1153
 18308              	.L1152:
7116:../../Source/Kernel/rme_kernel.c ****         }
7117:../../Source/Kernel/rme_kernel.c ****         else
7118:../../Source/Kernel/rme_kernel.c ****         {
7119:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7120:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7121:../../Source/Kernel/rme_kernel.c ****         }
7122:../../Source/Kernel/rme_kernel.c ****     }
7123:../../Source/Kernel/rme_kernel.c **** 
7124:../../Source/Kernel/rme_kernel.c ****     return 0;
 18309              		.loc 1 7124 12
 18310 010c 0030A0E3 		mov	r3, #0
 18311              	.L1153:
7125:../../Source/Kernel/rme_kernel.c **** }
 18312              		.loc 1 7125 1
 18313 0110 0300A0E1 		mov	r0, r3
 18314 0114 04D04BE2 		sub	sp, fp, #4
 18315              		.cfi_def_cfa 13, 8
 18316              		@ sp needed
 18317 0118 0088BDE8 		pop	{fp, pc}
 18318              		.cfi_endproc
 18319              	.LFE69:
 18321              		.section	.text._RME_Sig_Snd,"ax",%progbits
 18322              		.align	2
 18323              		.syntax unified
 18324              		.arm
 18326              	_RME_Sig_Snd:
 18327              	.LFB70:
7126:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kern_Snd ************************************************/
7127:../../Source/Kernel/rme_kernel.c **** 
7128:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Snd ******************************************************
7129:../../Source/Kernel/rme_kernel.c **** Description : Try to send to a signal endpoint. This system call can cause
7130:../../Source/Kernel/rme_kernel.c ****               a potential context switch.
7131:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7132:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7133:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7134:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7135:../../Source/Kernel/rme_kernel.c **** Output      : None.
7136:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0, or an error code.
7137:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7138:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Snd(struct RME_Cap_Cpt* Cpt, 
7139:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7140:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig)
7141:../../Source/Kernel/rme_kernel.c **** {
 18328              		.loc 1 7141 1
 18329              		.cfi_startproc
 18330              		@ args = 0, pretend = 0, frame = 40
 18331              		@ frame_needed = 1, uses_anonymous_args = 0
 18332 0000 00482DE9 		push	{fp, lr}
 18333              		.cfi_def_cfa_offset 8
 18334              		.cfi_offset 11, -8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 450


 18335              		.cfi_offset 14, -4
 18336 0004 04B08DE2 		add	fp, sp, #4
 18337              		.cfi_def_cfa 11, 4
 18338 0008 28D04DE2 		sub	sp, sp, #40
 18339 000c 20000BE5 		str	r0, [fp, #-32]
 18340 0010 24100BE5 		str	r1, [fp, #-36]
 18341 0014 28200BE5 		str	r2, [fp, #-40]
7142:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7143:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7144:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Rcv;
7145:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7146:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Unblock;
7147:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7148:../../Source/Kernel/rme_kernel.c ****     
7149:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7150:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 18342              		.loc 1 7150 5
 18343 0018 28301BE5 		ldr	r3, [fp, #-40]
 18344 001c 803003E2 		and	r3, r3, #128
 18345 0020 000053E3 		cmp	r3, #0
 18346 0024 1C00001A 		bne	.L1155
 18347              		.loc 1 7150 5 is_stmt 0 discriminator 1
 18348 0028 20301BE5 		ldr	r3, [fp, #-32]
 18349 002c 142093E5 		ldr	r2, [r3, #20]
 18350 0030 28301BE5 		ldr	r3, [fp, #-40]
 18351 0034 030052E1 		cmp	r2, r3
 18352 0038 0100008A 		bhi	.L1156
 18353              		.loc 1 7150 5 discriminator 3
 18354 003c 0230E0E3 		mvn	r3, #2
 18355              		.loc 1 7150 5
 18356 0040 AF0000EA 		b	.L1157
 18357              	.L1156:
 18358              		.loc 1 7150 5 discriminator 4
 18359 0044 28301BE5 		ldr	r3, [fp, #-40]
 18360 0048 8322A0E1 		lsl	r2, r3, #5
 18361 004c 20301BE5 		ldr	r3, [fp, #-32]
 18362 0050 0C3093E5 		ldr	r3, [r3, #12]
 18363 0054 033082E0 		add	r3, r2, r3
 18364 0058 08300BE5 		str	r3, [fp, #-8]
 18365 005c 08301BE5 		ldr	r3, [fp, #-8]
 18366 0060 0300A0E1 		mov	r0, r3
 18367 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18368 0068 10000BE5 		str	r0, [fp, #-16]
 18369              		.loc 1 7150 5 discriminator 1
 18370 006c 10301BE5 		ldr	r3, [fp, #-16]
 18371 0070 FF3803E2 		and	r3, r3, #16711680
 18372 0074 020853E3 		cmp	r3, #131072
 18373 0078 0100001A 		bne	.L1158
 18374              		.loc 1 7150 5 discriminator 5
 18375 007c 0830E0E3 		mvn	r3, #8
 18376              		.loc 1 7150 5
 18377 0080 9F0000EA 		b	.L1157
 18378              	.L1158:
 18379              		.loc 1 7150 5 discriminator 6
 18380 0084 10301BE5 		ldr	r3, [fp, #-16]
 18381 0088 233CA0E1 		lsr	r3, r3, #24
 18382 008c 080053E3 		cmp	r3, #8
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 451


 18383 0090 3F00000A 		beq	.L1159
 18384              		.loc 1 7150 5 discriminator 7
 18385 0094 0130E0E3 		mvn	r3, #1
 18386              		.loc 1 7150 5
 18387 0098 990000EA 		b	.L1157
 18388              	.L1155:
 18389              		.loc 1 7150 5 discriminator 2
 18390 009c 28301BE5 		ldr	r3, [fp, #-40]
 18391 00a0 2324A0E1 		lsr	r2, r3, #8
 18392 00a4 20301BE5 		ldr	r3, [fp, #-32]
 18393 00a8 143093E5 		ldr	r3, [r3, #20]
 18394 00ac 030052E1 		cmp	r2, r3
 18395 00b0 0100003A 		bcc	.L1160
 18396              		.loc 1 7150 5 discriminator 8
 18397 00b4 0230E0E3 		mvn	r3, #2
 18398              		.loc 1 7150 5
 18399 00b8 910000EA 		b	.L1157
 18400              	.L1160:
 18401              		.loc 1 7150 5 discriminator 9
 18402 00bc 28301BE5 		ldr	r3, [fp, #-40]
 18403 00c0 2334A0E1 		lsr	r3, r3, #8
 18404 00c4 8322A0E1 		lsl	r2, r3, #5
 18405 00c8 20301BE5 		ldr	r3, [fp, #-32]
 18406 00cc 0C3093E5 		ldr	r3, [r3, #12]
 18407 00d0 033082E0 		add	r3, r2, r3
 18408 00d4 08300BE5 		str	r3, [fp, #-8]
 18409 00d8 08301BE5 		ldr	r3, [fp, #-8]
 18410 00dc 0300A0E1 		mov	r0, r3
 18411 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18412 00e4 10000BE5 		str	r0, [fp, #-16]
 18413              		.loc 1 7150 5 discriminator 1
 18414 00e8 10301BE5 		ldr	r3, [fp, #-16]
 18415 00ec FF3803E2 		and	r3, r3, #16711680
 18416 00f0 020853E3 		cmp	r3, #131072
 18417 00f4 0100001A 		bne	.L1161
 18418              		.loc 1 7150 5 discriminator 10
 18419 00f8 0830E0E3 		mvn	r3, #8
 18420              		.loc 1 7150 5
 18421 00fc 800000EA 		b	.L1157
 18422              	.L1161:
 18423              		.loc 1 7150 5 discriminator 11
 18424 0100 10301BE5 		ldr	r3, [fp, #-16]
 18425 0104 233CA0E1 		lsr	r3, r3, #24
 18426 0108 030053E3 		cmp	r3, #3
 18427 010c 0100000A 		beq	.L1162
 18428              		.loc 1 7150 5 discriminator 12
 18429 0110 0130E0E3 		mvn	r3, #1
 18430              		.loc 1 7150 5
 18431 0114 7A0000EA 		b	.L1157
 18432              	.L1162:
 18433              		.loc 1 7150 5 discriminator 13
 18434 0118 28301BE5 		ldr	r3, [fp, #-40]
 18435 011c 7F2003E2 		and	r2, r3, #127
 18436 0120 08301BE5 		ldr	r3, [fp, #-8]
 18437 0124 143093E5 		ldr	r3, [r3, #20]
 18438 0128 030052E1 		cmp	r2, r3
 18439 012c 0100003A 		bcc	.L1163
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 452


 18440              		.loc 1 7150 5 discriminator 14
 18441 0130 0230E0E3 		mvn	r3, #2
 18442              		.loc 1 7150 5
 18443 0134 720000EA 		b	.L1157
 18444              	.L1163:
 18445              		.loc 1 7150 5 discriminator 15
 18446 0138 28301BE5 		ldr	r3, [fp, #-40]
 18447 013c 7F3003E2 		and	r3, r3, #127
 18448 0140 8322A0E1 		lsl	r2, r3, #5
 18449 0144 08301BE5 		ldr	r3, [fp, #-8]
 18450 0148 0C3093E5 		ldr	r3, [r3, #12]
 18451 014c 033082E0 		add	r3, r2, r3
 18452 0150 08300BE5 		str	r3, [fp, #-8]
 18453 0154 08301BE5 		ldr	r3, [fp, #-8]
 18454 0158 0300A0E1 		mov	r0, r3
 18455 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18456 0160 10000BE5 		str	r0, [fp, #-16]
 18457              		.loc 1 7150 5 discriminator 1
 18458 0164 10301BE5 		ldr	r3, [fp, #-16]
 18459 0168 FF3803E2 		and	r3, r3, #16711680
 18460 016c 020853E3 		cmp	r3, #131072
 18461 0170 0100001A 		bne	.L1164
 18462              		.loc 1 7150 5 discriminator 16
 18463 0174 0830E0E3 		mvn	r3, #8
 18464              		.loc 1 7150 5
 18465 0178 610000EA 		b	.L1157
 18466              	.L1164:
 18467              		.loc 1 7150 5 discriminator 17
 18468 017c 10301BE5 		ldr	r3, [fp, #-16]
 18469 0180 233CA0E1 		lsr	r3, r3, #24
 18470 0184 080053E3 		cmp	r3, #8
 18471 0188 0100000A 		beq	.L1159
 18472              		.loc 1 7150 5 discriminator 18
 18473 018c 0130E0E3 		mvn	r3, #1
 18474              		.loc 1 7150 5
 18475 0190 5B0000EA 		b	.L1157
 18476              	.L1159:
7151:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7152:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7153:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_SND);
 18477              		.loc 1 7153 5 is_stmt 1
 18478 0194 08301BE5 		ldr	r3, [fp, #-8]
 18479 0198 083093E5 		ldr	r3, [r3, #8]
 18480 019c 013003E2 		and	r3, r3, #1
 18481 01a0 000053E3 		cmp	r3, #0
 18482 01a4 0100001A 		bne	.L1165
 18483              		.loc 1 7153 5 is_stmt 0 discriminator 1
 18484 01a8 0630E0E3 		mvn	r3, #6
 18485              		.loc 1 7153 5
 18486 01ac 540000EA 		b	.L1157
 18487              	.L1165:
7154:../../Source/Kernel/rme_kernel.c ****     
7155:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18488              		.loc 1 7155 10 is_stmt 1
 18489 01b0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18490 01b4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18491 01b8 14300BE5 		str	r3, [fp, #-20]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 453


7156:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18492              		.loc 1 7156 14
 18493 01bc 08301BE5 		ldr	r3, [fp, #-8]
 18494 01c0 003093E5 		ldr	r3, [r3]
 18495 01c4 7330FFE6 		uxth	r3, r3
 18496 01c8 000053E3 		cmp	r3, #0
 18497 01cc 0200000A 		beq	.L1166
 18498              		.loc 1 7156 14 is_stmt 0 discriminator 1
 18499 01d0 08301BE5 		ldr	r3, [fp, #-8]
 18500 01d4 043093E5 		ldr	r3, [r3, #4]
 18501 01d8 000000EA 		b	.L1167
 18502              	.L1166:
 18503              		.loc 1 7156 14 discriminator 2
 18504 01dc 08301BE5 		ldr	r3, [fp, #-8]
 18505              	.L1167:
 18506              		.loc 1 7156 13 is_stmt 1 discriminator 4
 18507 01e0 18300BE5 		str	r3, [fp, #-24]
7157:../../Source/Kernel/rme_kernel.c ****     Thd_Rcv=Sig_Root->Thd;
 18508              		.loc 1 7157 12
 18509 01e4 18301BE5 		ldr	r3, [fp, #-24]
 18510 01e8 183093E5 		ldr	r3, [r3, #24]
 18511 01ec 1C300BE5 		str	r3, [fp, #-28]
7158:../../Source/Kernel/rme_kernel.c **** 
7159:../../Source/Kernel/rme_kernel.c ****     /* If and only if we are calling from the same core do we unblock */
7160:../../Source/Kernel/rme_kernel.c ****     if(Thd_Rcv!=RME_NULL)
 18512              		.loc 1 7160 7
 18513 01f0 1C301BE5 		ldr	r3, [fp, #-28]
 18514 01f4 000053E3 		cmp	r3, #0
 18515 01f8 0A00000A 		beq	.L1168
7161:../../Source/Kernel/rme_kernel.c ****     {
7162:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7163:../../Source/Kernel/rme_kernel.c **** 
7164:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Local==Local)
 18516              		.loc 1 7164 26
 18517 01fc 1C301BE5 		ldr	r3, [fp, #-28]
 18518 0200 143093E5 		ldr	r3, [r3, #20]
 18519              		.loc 1 7164 11
 18520 0204 14201BE5 		ldr	r2, [fp, #-20]
 18521 0208 030052E1 		cmp	r2, r3
 18522 020c 0200001A 		bne	.L1169
7165:../../Source/Kernel/rme_kernel.c ****         {
7166:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7167:../../Source/Kernel/rme_kernel.c **** 
7168:../../Source/Kernel/rme_kernel.c ****             Unblock=1U;
 18523              		.loc 1 7168 20
 18524 0210 0130A0E3 		mov	r3, #1
 18525 0214 0C300BE5 		str	r3, [fp, #-12]
 18526 0218 040000EA 		b	.L1170
 18527              	.L1169:
7169:../../Source/Kernel/rme_kernel.c ****         }
7170:../../Source/Kernel/rme_kernel.c ****         else
7171:../../Source/Kernel/rme_kernel.c ****         {
7172:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7173:../../Source/Kernel/rme_kernel.c **** 
7174:../../Source/Kernel/rme_kernel.c ****             Unblock=0U;
 18528              		.loc 1 7174 20
 18529 021c 0030A0E3 		mov	r3, #0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 454


 18530 0220 0C300BE5 		str	r3, [fp, #-12]
 18531 0224 010000EA 		b	.L1170
 18532              	.L1168:
7175:../../Source/Kernel/rme_kernel.c ****         }
7176:../../Source/Kernel/rme_kernel.c ****     }
7177:../../Source/Kernel/rme_kernel.c ****     else
7178:../../Source/Kernel/rme_kernel.c ****     {
7179:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7180:../../Source/Kernel/rme_kernel.c **** 
7181:../../Source/Kernel/rme_kernel.c ****         Unblock=0U;
 18533              		.loc 1 7181 16
 18534 0228 0030A0E3 		mov	r3, #0
 18535 022c 0C300BE5 		str	r3, [fp, #-12]
 18536              	.L1170:
7182:../../Source/Kernel/rme_kernel.c ****     }
7183:../../Source/Kernel/rme_kernel.c ****     
7184:../../Source/Kernel/rme_kernel.c ****     if(Unblock!=0U)
 18537              		.loc 1 7184 7
 18538 0230 0C301BE5 		ldr	r3, [fp, #-12]
 18539 0234 000053E3 		cmp	r3, #0
 18540 0238 1D00000A 		beq	.L1171
7185:../../Source/Kernel/rme_kernel.c ****     {
7186:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7187:../../Source/Kernel/rme_kernel.c **** 
7188:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7189:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18541              		.loc 1 7189 9
 18542 023c 0010A0E3 		mov	r1, #0
 18543 0240 24001BE5 		ldr	r0, [fp, #-36]
 18544 0244 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7190:../../Source/Kernel/rme_kernel.c ****         
7191:../../Source/Kernel/rme_kernel.c ****         /* The thread is blocked, and it is on our core. Unblock it, and
7192:../../Source/Kernel/rme_kernel.c ****          * set the return value to one as always, Even if we were specifying
7193:../../Source/Kernel/rme_kernel.c ****          * multi-receive. This is because other cores may reduce the count
7194:../../Source/Kernel/rme_kernel.c ****          * to zero while we are doing this. */
7195:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(&(Thd_Rcv->Ctx.Reg->Reg),1);
 18545              		.loc 1 7195 44
 18546 0248 1C301BE5 		ldr	r3, [fp, #-28]
 18547 024c 483093E5 		ldr	r3, [r3, #72]
 18548              		.loc 1 7195 9
 18549 0250 0110A0E3 		mov	r1, #1
 18550 0254 0300A0E1 		mov	r0, r3
 18551 0258 FEFFFFEB 		bl	__RME_Svc_Retval_Set
7196:../../Source/Kernel/rme_kernel.c ****         
7197:../../Source/Kernel/rme_kernel.c ****         /* See if the thread still have time left */
7198:../../Source/Kernel/rme_kernel.c ****         if(Thd_Rcv->Sched.Slice!=0U)
 18552              		.loc 1 7198 26
 18553 025c 1C301BE5 		ldr	r3, [fp, #-28]
 18554 0260 183093E5 		ldr	r3, [r3, #24]
 18555              		.loc 1 7198 11
 18556 0264 000053E3 		cmp	r3, #0
 18557 0268 0500000A 		beq	.L1172
7199:../../Source/Kernel/rme_kernel.c ****         {
7200:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7201:../../Source/Kernel/rme_kernel.c **** 
7202:../../Source/Kernel/rme_kernel.c ****             /* Ready and add to runqueue */
7203:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_READY;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 455


 18558              		.loc 1 7203 33
 18559 026c 1C301BE5 		ldr	r3, [fp, #-28]
 18560 0270 0020A0E3 		mov	r2, #0
 18561 0274 1C2083E5 		str	r2, [r3, #28]
7204:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Ins(Thd_Rcv);
 18562              		.loc 1 7204 13
 18563 0278 1C001BE5 		ldr	r0, [fp, #-28]
 18564 027c FEFFFFEB 		bl	_RME_Run_Ins
 18565 0280 040000EA 		b	.L1173
 18566              	.L1172:
7205:../../Source/Kernel/rme_kernel.c ****         }
7206:../../Source/Kernel/rme_kernel.c ****         else
7207:../../Source/Kernel/rme_kernel.c ****         {
7208:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7209:../../Source/Kernel/rme_kernel.c **** 
7210:../../Source/Kernel/rme_kernel.c ****             /* Timeout and notify parent */
7211:../../Source/Kernel/rme_kernel.c ****             Thd_Rcv->Sched.State=RME_THD_TIMEOUT;
 18567              		.loc 1 7211 33
 18568 0284 1C301BE5 		ldr	r3, [fp, #-28]
 18569 0288 0220A0E3 		mov	r2, #2
 18570 028c 1C2083E5 		str	r2, [r3, #28]
7212:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Notif(Thd_Rcv);
 18571              		.loc 1 7212 13
 18572 0290 1C001BE5 		ldr	r0, [fp, #-28]
 18573 0294 FEFFFFEB 		bl	_RME_Run_Notif
 18574              	.L1173:
7213:../../Source/Kernel/rme_kernel.c ****         }
7214:../../Source/Kernel/rme_kernel.c ****         
7215:../../Source/Kernel/rme_kernel.c ****         /* Pick the highest priority thread to run */
7216:../../Source/Kernel/rme_kernel.c ****         _RME_Kern_High(Reg,Local);
 18575              		.loc 1 7216 9
 18576 0298 14101BE5 		ldr	r1, [fp, #-20]
 18577 029c 24001BE5 		ldr	r0, [fp, #-36]
 18578 02a0 FEFFFFEB 		bl	_RME_Kern_High
7217:../../Source/Kernel/rme_kernel.c ****         
7218:../../Source/Kernel/rme_kernel.c ****         /* Clear endpoint blocking status - no write release required */
7219:../../Source/Kernel/rme_kernel.c ****         Sig_Root->Thd=RME_NULL;
 18579              		.loc 1 7219 22
 18580 02a4 18301BE5 		ldr	r3, [fp, #-24]
 18581 02a8 0020A0E3 		mov	r2, #0
 18582 02ac 182083E5 		str	r2, [r3, #24]
 18583 02b0 120000EA 		b	.L1174
 18584              	.L1171:
7220:../../Source/Kernel/rme_kernel.c ****     }
7221:../../Source/Kernel/rme_kernel.c ****     else
7222:../../Source/Kernel/rme_kernel.c ****     {
7223:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7224:../../Source/Kernel/rme_kernel.c **** 
7225:../../Source/Kernel/rme_kernel.c ****         /* The guy who blocked on it is not on our core, we just faa and return */
7226:../../Source/Kernel/rme_kernel.c ****         if(RME_FETCH_ADD(&(Sig_Root->Sig_Num),1U)>=RME_MAX_SIG_NUM)
 18585              		.loc 1 7226 12
 18586 02b4 18301BE5 		ldr	r3, [fp, #-24]
 18587 02b8 143083E2 		add	r3, r3, #20
 18588 02bc 0110A0E3 		mov	r1, #1
 18589 02c0 0300A0E1 		mov	r0, r3
 18590 02c4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
 18591 02c8 0030A0E1 		mov	r3, r0
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 456


 18592              		.loc 1 7226 11 discriminator 1
 18593 02cc 0A0173E3 		cmn	r3, #-2147483646
 18594 02d0 0700009A 		bls	.L1175
7227:../../Source/Kernel/rme_kernel.c ****         {
7228:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7229:../../Source/Kernel/rme_kernel.c **** 
7230:../../Source/Kernel/rme_kernel.c ****             RME_FETCH_ADD(&(Sig_Root->Sig_Num),-1);
 18595              		.loc 1 7230 13
 18596 02d4 18301BE5 		ldr	r3, [fp, #-24]
 18597 02d8 143083E2 		add	r3, r3, #20
 18598 02dc 0010E0E3 		mvn	r1, #0
 18599 02e0 0300A0E1 		mov	r0, r3
 18600 02e4 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7231:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_FULL;
 18601              		.loc 1 7231 20
 18602 02e8 D13E0FE3 		movw	r3, #65233
 18603 02ec FF3F4FE3 		movt	r3, 65535
 18604 02f0 030000EA 		b	.L1157
 18605              	.L1175:
7232:../../Source/Kernel/rme_kernel.c ****         }
7233:../../Source/Kernel/rme_kernel.c ****         else
7234:../../Source/Kernel/rme_kernel.c ****         {
7235:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7236:../../Source/Kernel/rme_kernel.c ****             /* No action required */
7237:../../Source/Kernel/rme_kernel.c ****         }
7238:../../Source/Kernel/rme_kernel.c ****         
7239:../../Source/Kernel/rme_kernel.c ****         /* Now save the system call return value to the caller stack */
7240:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 18606              		.loc 1 7240 9
 18607 02f4 0010A0E3 		mov	r1, #0
 18608 02f8 24001BE5 		ldr	r0, [fp, #-36]
 18609 02fc FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18610              	.L1174:
7241:../../Source/Kernel/rme_kernel.c ****     }
7242:../../Source/Kernel/rme_kernel.c **** 
7243:../../Source/Kernel/rme_kernel.c ****     return 0;
 18611              		.loc 1 7243 12
 18612 0300 0030A0E3 		mov	r3, #0
 18613              	.L1157:
7244:../../Source/Kernel/rme_kernel.c **** }
 18614              		.loc 1 7244 1
 18615 0304 0300A0E1 		mov	r0, r3
 18616 0308 04D04BE2 		sub	sp, fp, #4
 18617              		.cfi_def_cfa 13, 8
 18618              		@ sp needed
 18619 030c 0088BDE8 		pop	{fp, pc}
 18620              		.cfi_endproc
 18621              	.LFE70:
 18623              		.section	.text._RME_Sig_Rcv,"ax",%progbits
 18624              		.align	2
 18625              		.syntax unified
 18626              		.arm
 18628              	_RME_Sig_Rcv:
 18629              	.LFB71:
7245:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Snd *************************************************/
7246:../../Source/Kernel/rme_kernel.c **** 
7247:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Sig_Rcv ******************************************************
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 457


7248:../../Source/Kernel/rme_kernel.c **** Description : Try to receive from a signal endpoint. The rules for signal
7249:../../Source/Kernel/rme_kernel.c ****               endpoint receive is:
7250:../../Source/Kernel/rme_kernel.c ****               1.If a receive endpoint have many send endpoints, everyone can
7251:../../Source/Kernel/rme_kernel.c ****                 send to it, and sending to it will increase the count by 1.
7252:../../Source/Kernel/rme_kernel.c ****               2.If some thread blocks on a receive endpoint, the wakeup is only
7253:../../Source/Kernel/rme_kernel.c ****                 possible from the same core that thread is on.
7254:../../Source/Kernel/rme_kernel.c ****               3.It is not recommended to let 2 cores operate on the rcv endpoint
7255:../../Source/Kernel/rme_kernel.c ****                 simutaneously.
7256:../../Source/Kernel/rme_kernel.c ****               This system call can potentially trigger a context switch.
7257:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7258:../../Source/Kernel/rme_kernel.c ****               volatile struct RME_Reg_Struct* Reg - The register set.
7259:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Sig - The capability to the signal.
7260:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7261:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Option - The receive option.
7262:../../Source/Kernel/rme_kernel.c **** Output      : None.
7263:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, a non-negative number containing the 
7264:../../Source/Kernel/rme_kernel.c ****                           number of signals received; or an error code.
7265:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7266:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Sig_Rcv(struct RME_Cap_Cpt* Cpt,
7267:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7268:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Sig,
7269:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Option)
7270:../../Source/Kernel/rme_kernel.c **** {
 18630              		.loc 1 7270 1
 18631              		.cfi_startproc
 18632              		@ args = 0, pretend = 0, frame = 40
 18633              		@ frame_needed = 1, uses_anonymous_args = 0
 18634 0000 00482DE9 		push	{fp, lr}
 18635              		.cfi_def_cfa_offset 8
 18636              		.cfi_offset 11, -8
 18637              		.cfi_offset 14, -4
 18638 0004 04B08DE2 		add	fp, sp, #4
 18639              		.cfi_def_cfa 11, 4
 18640 0008 28D04DE2 		sub	sp, sp, #40
 18641 000c 20000BE5 		str	r0, [fp, #-32]
 18642 0010 24100BE5 		str	r1, [fp, #-36]
 18643 0014 28200BE5 		str	r2, [fp, #-40]
 18644 0018 2C300BE5 		str	r3, [fp, #-44]
7271:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Op;
7272:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Sig* Sig_Root;
7273:../../Source/Kernel/rme_kernel.c ****     struct RME_CPU_Local* Local;
7274:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7275:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Old_Value;
7276:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7277:../../Source/Kernel/rme_kernel.c ****     
7278:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7279:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Sig,RME_CAP_TYPE_SIG,
 18645              		.loc 1 7279 5
 18646 001c 28301BE5 		ldr	r3, [fp, #-40]
 18647 0020 803003E2 		and	r3, r3, #128
 18648 0024 000053E3 		cmp	r3, #0
 18649 0028 1C00001A 		bne	.L1177
 18650              		.loc 1 7279 5 is_stmt 0 discriminator 1
 18651 002c 20301BE5 		ldr	r3, [fp, #-32]
 18652 0030 142093E5 		ldr	r2, [r3, #20]
 18653 0034 28301BE5 		ldr	r3, [fp, #-40]
 18654 0038 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 458


 18655 003c 0100008A 		bhi	.L1178
 18656              		.loc 1 7279 5 discriminator 3
 18657 0040 0230E0E3 		mvn	r3, #2
 18658              		.loc 1 7279 5
 18659 0044 F60000EA 		b	.L1179
 18660              	.L1178:
 18661              		.loc 1 7279 5 discriminator 4
 18662 0048 28301BE5 		ldr	r3, [fp, #-40]
 18663 004c 8322A0E1 		lsl	r2, r3, #5
 18664 0050 20301BE5 		ldr	r3, [fp, #-32]
 18665 0054 0C3093E5 		ldr	r3, [r3, #12]
 18666 0058 033082E0 		add	r3, r2, r3
 18667 005c 08300BE5 		str	r3, [fp, #-8]
 18668 0060 08301BE5 		ldr	r3, [fp, #-8]
 18669 0064 0300A0E1 		mov	r0, r3
 18670 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18671 006c 0C000BE5 		str	r0, [fp, #-12]
 18672              		.loc 1 7279 5 discriminator 1
 18673 0070 0C301BE5 		ldr	r3, [fp, #-12]
 18674 0074 FF3803E2 		and	r3, r3, #16711680
 18675 0078 020853E3 		cmp	r3, #131072
 18676 007c 0100001A 		bne	.L1180
 18677              		.loc 1 7279 5 discriminator 5
 18678 0080 0830E0E3 		mvn	r3, #8
 18679              		.loc 1 7279 5
 18680 0084 E60000EA 		b	.L1179
 18681              	.L1180:
 18682              		.loc 1 7279 5 discriminator 6
 18683 0088 0C301BE5 		ldr	r3, [fp, #-12]
 18684 008c 233CA0E1 		lsr	r3, r3, #24
 18685 0090 080053E3 		cmp	r3, #8
 18686 0094 3F00000A 		beq	.L1181
 18687              		.loc 1 7279 5 discriminator 7
 18688 0098 0130E0E3 		mvn	r3, #1
 18689              		.loc 1 7279 5
 18690 009c E00000EA 		b	.L1179
 18691              	.L1177:
 18692              		.loc 1 7279 5 discriminator 2
 18693 00a0 28301BE5 		ldr	r3, [fp, #-40]
 18694 00a4 2324A0E1 		lsr	r2, r3, #8
 18695 00a8 20301BE5 		ldr	r3, [fp, #-32]
 18696 00ac 143093E5 		ldr	r3, [r3, #20]
 18697 00b0 030052E1 		cmp	r2, r3
 18698 00b4 0100003A 		bcc	.L1182
 18699              		.loc 1 7279 5 discriminator 8
 18700 00b8 0230E0E3 		mvn	r3, #2
 18701              		.loc 1 7279 5
 18702 00bc D80000EA 		b	.L1179
 18703              	.L1182:
 18704              		.loc 1 7279 5 discriminator 9
 18705 00c0 28301BE5 		ldr	r3, [fp, #-40]
 18706 00c4 2334A0E1 		lsr	r3, r3, #8
 18707 00c8 8322A0E1 		lsl	r2, r3, #5
 18708 00cc 20301BE5 		ldr	r3, [fp, #-32]
 18709 00d0 0C3093E5 		ldr	r3, [r3, #12]
 18710 00d4 033082E0 		add	r3, r2, r3
 18711 00d8 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 459


 18712 00dc 08301BE5 		ldr	r3, [fp, #-8]
 18713 00e0 0300A0E1 		mov	r0, r3
 18714 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18715 00e8 0C000BE5 		str	r0, [fp, #-12]
 18716              		.loc 1 7279 5 discriminator 1
 18717 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 18718 00f0 FF3803E2 		and	r3, r3, #16711680
 18719 00f4 020853E3 		cmp	r3, #131072
 18720 00f8 0100001A 		bne	.L1183
 18721              		.loc 1 7279 5 discriminator 10
 18722 00fc 0830E0E3 		mvn	r3, #8
 18723              		.loc 1 7279 5
 18724 0100 C70000EA 		b	.L1179
 18725              	.L1183:
 18726              		.loc 1 7279 5 discriminator 11
 18727 0104 0C301BE5 		ldr	r3, [fp, #-12]
 18728 0108 233CA0E1 		lsr	r3, r3, #24
 18729 010c 030053E3 		cmp	r3, #3
 18730 0110 0100000A 		beq	.L1184
 18731              		.loc 1 7279 5 discriminator 12
 18732 0114 0130E0E3 		mvn	r3, #1
 18733              		.loc 1 7279 5
 18734 0118 C10000EA 		b	.L1179
 18735              	.L1184:
 18736              		.loc 1 7279 5 discriminator 13
 18737 011c 28301BE5 		ldr	r3, [fp, #-40]
 18738 0120 7F2003E2 		and	r2, r3, #127
 18739 0124 08301BE5 		ldr	r3, [fp, #-8]
 18740 0128 143093E5 		ldr	r3, [r3, #20]
 18741 012c 030052E1 		cmp	r2, r3
 18742 0130 0100003A 		bcc	.L1185
 18743              		.loc 1 7279 5 discriminator 14
 18744 0134 0230E0E3 		mvn	r3, #2
 18745              		.loc 1 7279 5
 18746 0138 B90000EA 		b	.L1179
 18747              	.L1185:
 18748              		.loc 1 7279 5 discriminator 15
 18749 013c 28301BE5 		ldr	r3, [fp, #-40]
 18750 0140 7F3003E2 		and	r3, r3, #127
 18751 0144 8322A0E1 		lsl	r2, r3, #5
 18752 0148 08301BE5 		ldr	r3, [fp, #-8]
 18753 014c 0C3093E5 		ldr	r3, [r3, #12]
 18754 0150 033082E0 		add	r3, r2, r3
 18755 0154 08300BE5 		str	r3, [fp, #-8]
 18756 0158 08301BE5 		ldr	r3, [fp, #-8]
 18757 015c 0300A0E1 		mov	r0, r3
 18758 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 18759 0164 0C000BE5 		str	r0, [fp, #-12]
 18760              		.loc 1 7279 5 discriminator 1
 18761 0168 0C301BE5 		ldr	r3, [fp, #-12]
 18762 016c FF3803E2 		and	r3, r3, #16711680
 18763 0170 020853E3 		cmp	r3, #131072
 18764 0174 0100001A 		bne	.L1186
 18765              		.loc 1 7279 5 discriminator 16
 18766 0178 0830E0E3 		mvn	r3, #8
 18767              		.loc 1 7279 5
 18768 017c A80000EA 		b	.L1179
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 460


 18769              	.L1186:
 18770              		.loc 1 7279 5 discriminator 17
 18771 0180 0C301BE5 		ldr	r3, [fp, #-12]
 18772 0184 233CA0E1 		lsr	r3, r3, #24
 18773 0188 080053E3 		cmp	r3, #8
 18774 018c 0100000A 		beq	.L1181
 18775              		.loc 1 7279 5 discriminator 18
 18776 0190 0130E0E3 		mvn	r3, #1
 18777              		.loc 1 7279 5
 18778 0194 A20000EA 		b	.L1179
 18779              	.L1181:
7280:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Sig*,Sig_Op,Type_Stat);    
7281:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7282:../../Source/Kernel/rme_kernel.c ****     switch(Option)
 18780              		.loc 1 7282 5 is_stmt 1
 18781 0198 2C201BE5 		ldr	r2, [fp, #-44]
 18782 019c 8C329FE5 		ldr	r3, .L1218
 18783 01a0 030052E3 		cmp	r2, #3
 18784 01a4 1D00008A 		bhi	.L1187
 18785 01a8 02F193E7 		ldr	pc, [r3, r2, lsl #2]
 18786              	.Lrtx1189:
 18787 01ac 00F020E3 		nop
 18788              		.section	.rodata._RME_Sig_Rcv,"a",%progbits
 18789              		.align	2
 18790              	.L1189:
 18791 0000 B0010000 		.word	.L1192
 18792 0004 CC010000 		.word	.L1191
 18793 0008 E8010000 		.word	.L1190
 18794 000c 04020000 		.word	.L1188
 18795              		.section	.text._RME_Sig_Rcv
 18796              		.p2align 2
 18797              	.L1192:
7283:../../Source/Kernel/rme_kernel.c ****     {
7284:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BS:
7285:../../Source/Kernel/rme_kernel.c ****         {
7286:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7287:../../Source/Kernel/rme_kernel.c **** 
7288:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BS);
 18798              		.loc 1 7288 13
 18799 01b0 08301BE5 		ldr	r3, [fp, #-8]
 18800 01b4 083093E5 		ldr	r3, [r3, #8]
 18801 01b8 023003E2 		and	r3, r3, #2
 18802 01bc 000053E3 		cmp	r3, #0
 18803 01c0 1800001A 		bne	.L1214
 18804              		.loc 1 7288 13 is_stmt 0 discriminator 1
 18805 01c4 0630E0E3 		mvn	r3, #6
 18806              		.loc 1 7288 13
 18807 01c8 950000EA 		b	.L1179
 18808              	.L1191:
7289:../../Source/Kernel/rme_kernel.c ****             break;
7290:../../Source/Kernel/rme_kernel.c ****         }
7291:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_BM:
7292:../../Source/Kernel/rme_kernel.c ****         {
7293:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7294:../../Source/Kernel/rme_kernel.c ****             
7295:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_BM);
 18809              		.loc 1 7295 13 is_stmt 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 461


 18810 01cc 08301BE5 		ldr	r3, [fp, #-8]
 18811 01d0 083093E5 		ldr	r3, [r3, #8]
 18812 01d4 043003E2 		and	r3, r3, #4
 18813 01d8 000053E3 		cmp	r3, #0
 18814 01dc 1300001A 		bne	.L1215
 18815              		.loc 1 7295 13 is_stmt 0 discriminator 1
 18816 01e0 0630E0E3 		mvn	r3, #6
 18817              		.loc 1 7295 13
 18818 01e4 8E0000EA 		b	.L1179
 18819              	.L1190:
7296:../../Source/Kernel/rme_kernel.c ****             break;
7297:../../Source/Kernel/rme_kernel.c ****         }
7298:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NS:
7299:../../Source/Kernel/rme_kernel.c ****         {
7300:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7301:../../Source/Kernel/rme_kernel.c ****             
7302:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NS);
 18820              		.loc 1 7302 13 is_stmt 1
 18821 01e8 08301BE5 		ldr	r3, [fp, #-8]
 18822 01ec 083093E5 		ldr	r3, [r3, #8]
 18823 01f0 083003E2 		and	r3, r3, #8
 18824 01f4 000053E3 		cmp	r3, #0
 18825 01f8 0E00001A 		bne	.L1216
 18826              		.loc 1 7302 13 is_stmt 0 discriminator 1
 18827 01fc 0630E0E3 		mvn	r3, #6
 18828              		.loc 1 7302 13
 18829 0200 870000EA 		b	.L1179
 18830              	.L1188:
7303:../../Source/Kernel/rme_kernel.c ****             break;
7304:../../Source/Kernel/rme_kernel.c ****         }
7305:../../Source/Kernel/rme_kernel.c ****         case RME_RCV_NM:
7306:../../Source/Kernel/rme_kernel.c ****         {
7307:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7308:../../Source/Kernel/rme_kernel.c ****             
7309:../../Source/Kernel/rme_kernel.c ****             RME_CAP_CHECK(Sig_Op,RME_SIG_FLAG_RCV_NM);
 18831              		.loc 1 7309 13 is_stmt 1
 18832 0204 08301BE5 		ldr	r3, [fp, #-8]
 18833 0208 083093E5 		ldr	r3, [r3, #8]
 18834 020c 103003E2 		and	r3, r3, #16
 18835 0210 000053E3 		cmp	r3, #0
 18836 0214 0900001A 		bne	.L1217
 18837              		.loc 1 7309 13 is_stmt 0 discriminator 1
 18838 0218 0630E0E3 		mvn	r3, #6
 18839              		.loc 1 7309 13
 18840 021c 800000EA 		b	.L1179
 18841              	.L1187:
7310:../../Source/Kernel/rme_kernel.c ****             break;
7311:../../Source/Kernel/rme_kernel.c ****         }
7312:../../Source/Kernel/rme_kernel.c ****         default:
7313:../../Source/Kernel/rme_kernel.c ****         {
7314:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7315:../../Source/Kernel/rme_kernel.c ****             
7316:../../Source/Kernel/rme_kernel.c ****             return RME_ERR_SIV_ACT;
 18842              		.loc 1 7316 20 is_stmt 1
 18843 0220 4B3FE0E3 		mvn	r3, #300
 18844 0224 7E0000EA 		b	.L1179
 18845              	.L1214:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 462


7289:../../Source/Kernel/rme_kernel.c ****         }
 18846              		.loc 1 7289 13
 18847 0228 00F020E3 		nop
 18848 022c 040000EA 		b	.L1194
 18849              	.L1215:
7296:../../Source/Kernel/rme_kernel.c ****         }
 18850              		.loc 1 7296 13
 18851 0230 00F020E3 		nop
 18852 0234 020000EA 		b	.L1194
 18853              	.L1216:
7303:../../Source/Kernel/rme_kernel.c ****         }
 18854              		.loc 1 7303 13
 18855 0238 00F020E3 		nop
 18856 023c 000000EA 		b	.L1194
 18857              	.L1217:
7310:../../Source/Kernel/rme_kernel.c ****         }
 18858              		.loc 1 7310 13
 18859 0240 00F020E3 		nop
 18860              	.L1194:
7317:../../Source/Kernel/rme_kernel.c ****         }
7318:../../Source/Kernel/rme_kernel.c ****     }
7319:../../Source/Kernel/rme_kernel.c ****     
7320:../../Source/Kernel/rme_kernel.c ****     /* Convert to root cap */
7321:../../Source/Kernel/rme_kernel.c ****     Sig_Root=RME_CAP_CONV_ROOT(Sig_Op,struct RME_Cap_Sig*);
 18861              		.loc 1 7321 14
 18862 0244 08301BE5 		ldr	r3, [fp, #-8]
 18863 0248 003093E5 		ldr	r3, [r3]
 18864 024c 7330FFE6 		uxth	r3, r3
 18865 0250 000053E3 		cmp	r3, #0
 18866 0254 0200000A 		beq	.L1198
 18867              		.loc 1 7321 14 is_stmt 0 discriminator 1
 18868 0258 08301BE5 		ldr	r3, [fp, #-8]
 18869 025c 043093E5 		ldr	r3, [r3, #4]
 18870 0260 000000EA 		b	.L1199
 18871              	.L1198:
 18872              		.loc 1 7321 14 discriminator 2
 18873 0264 08301BE5 		ldr	r3, [fp, #-8]
 18874              	.L1199:
 18875              		.loc 1 7321 13 is_stmt 1 discriminator 4
 18876 0268 10300BE5 		str	r3, [fp, #-16]
7322:../../Source/Kernel/rme_kernel.c ****     
7323:../../Source/Kernel/rme_kernel.c ****     /* See if we can receive on that endpoint - if someone blocks on it, we 
7324:../../Source/Kernel/rme_kernel.c ****      * must wait for it to unblock before we can proceed. */
7325:../../Source/Kernel/rme_kernel.c ****     if(Sig_Root->Thd!=RME_NULL)
 18877              		.loc 1 7325 16
 18878 026c 10301BE5 		ldr	r3, [fp, #-16]
 18879 0270 183093E5 		ldr	r3, [r3, #24]
 18880              		.loc 1 7325 7
 18881 0274 000053E3 		cmp	r3, #0
 18882 0278 0100000A 		beq	.L1200
7326:../../Source/Kernel/rme_kernel.c ****     {
7327:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7328:../../Source/Kernel/rme_kernel.c **** 
7329:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 18883              		.loc 1 7329 16
 18884 027c 4B3FE0E3 		mvn	r3, #300
 18885 0280 670000EA 		b	.L1179
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 463


 18886              	.L1200:
7330:../../Source/Kernel/rme_kernel.c ****     }
7331:../../Source/Kernel/rme_kernel.c ****     else
7332:../../Source/Kernel/rme_kernel.c ****     {
7333:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7334:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7335:../../Source/Kernel/rme_kernel.c ****     }
7336:../../Source/Kernel/rme_kernel.c ****     
7337:../../Source/Kernel/rme_kernel.c ****     Local=RME_CPU_LOCAL();
 18887              		.loc 1 7337 10
 18888 0284 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 18889 0288 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 18890 028c 14300BE5 		str	r3, [fp, #-20]
7338:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=Local->Thd_Cur;
 18891              		.loc 1 7338 12
 18892 0290 14301BE5 		ldr	r3, [fp, #-20]
 18893 0294 043093E5 		ldr	r3, [r3, #4]
 18894 0298 18300BE5 		str	r3, [fp, #-24]
7339:../../Source/Kernel/rme_kernel.c ****     
7340:../../Source/Kernel/rme_kernel.c ****     /* Check if we trying to let a boot-time thread block on a signal, which is
7341:../../Source/Kernel/rme_kernel.c ****      * disallowed. Additionally, if the current thread have no timeslice left
7342:../../Source/Kernel/rme_kernel.c ****      * (which shouldn't happen under any circumstances), we assert and die. */
7343:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(Thd_Cur->Sched.Slice!=0U);
 18895              		.loc 1 7343 5
 18896 029c 18301BE5 		ldr	r3, [fp, #-24]
 18897 02a0 183093E5 		ldr	r3, [r3, #24]
 18898 02a4 000053E3 		cmp	r3, #0
 18899 02a8 0800001A 		bne	.L1201
 18900              		.loc 1 7343 5 is_stmt 0 discriminator 1
 18901 02ac 003000E3 		movw	r3, #:lower16:.LC6
 18902 02b0 003040E3 		movt	r3, #:upper16:.LC6
 18903 02b4 002000E3 		movw	r2, #:lower16:.LC7
 18904 02b8 002040E3 		movt	r2, #:upper16:.LC7
 18905 02bc AF1C01E3 		movw	r1, #7343
 18906 02c0 000000E3 		movw	r0, #:lower16:.LC8
 18907 02c4 000040E3 		movt	r0, #:upper16:.LC8
 18908 02c8 FEFFFFEB 		bl	RME_Log
 18909              	.L1202:
 18910              		.loc 1 7343 5
 18911 02cc FEFFFFEA 		b	.L1202
 18912              	.L1201:
7344:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Sched.Slice==RME_THD_INIT_TIME)
 18913              		.loc 1 7344 22 is_stmt 1
 18914 02d0 18301BE5 		ldr	r3, [fp, #-24]
 18915 02d4 183093E5 		ldr	r3, [r3, #24]
 18916              		.loc 1 7344 7
 18917 02d8 060173E3 		cmn	r3, #-2147483647
 18918 02dc 0200001A 		bne	.L1203
7345:../../Source/Kernel/rme_kernel.c ****     {
7346:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7347:../../Source/Kernel/rme_kernel.c **** 
7348:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_BOOT;
 18919              		.loc 1 7348 16
 18920 02e0 CD3E0FE3 		movw	r3, #65229
 18921 02e4 FF3F4FE3 		movt	r3, 65535
 18922 02e8 4D0000EA 		b	.L1179
 18923              	.L1203:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 464


7349:../../Source/Kernel/rme_kernel.c ****     }
7350:../../Source/Kernel/rme_kernel.c ****     else
7351:../../Source/Kernel/rme_kernel.c ****     {
7352:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7353:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7354:../../Source/Kernel/rme_kernel.c ****     }
7355:../../Source/Kernel/rme_kernel.c **** 
7356:../../Source/Kernel/rme_kernel.c ****     /* Check if there are signals available */
7357:../../Source/Kernel/rme_kernel.c ****     Old_Value=Sig_Root->Sig_Num;
 18924              		.loc 1 7357 14
 18925 02ec 10301BE5 		ldr	r3, [fp, #-16]
 18926 02f0 143093E5 		ldr	r3, [r3, #20]
 18927 02f4 1C300BE5 		str	r3, [fp, #-28]
7358:../../Source/Kernel/rme_kernel.c ****     if(Old_Value>0U)
 18928              		.loc 1 7358 7
 18929 02f8 1C301BE5 		ldr	r3, [fp, #-28]
 18930 02fc 000053E3 		cmp	r3, #0
 18931 0300 2600000A 		beq	.L1204
7359:../../Source/Kernel/rme_kernel.c ****     {
7360:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7361:../../Source/Kernel/rme_kernel.c **** 
7362:../../Source/Kernel/rme_kernel.c ****         /* Can't use faa, other cores may reduce count to zero in the meantime */
7363:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_NS))
 18932              		.loc 1 7363 11
 18933 0304 2C301BE5 		ldr	r3, [fp, #-44]
 18934 0308 000053E3 		cmp	r3, #0
 18935 030c 0200000A 		beq	.L1205
 18936              		.loc 1 7363 32 discriminator 1
 18937 0310 2C301BE5 		ldr	r3, [fp, #-44]
 18938 0314 020053E3 		cmp	r3, #2
 18939 0318 0F00001A 		bne	.L1206
 18940              	.L1205:
7364:../../Source/Kernel/rme_kernel.c ****         {
7365:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7366:../../Source/Kernel/rme_kernel.c **** 
7367:../../Source/Kernel/rme_kernel.c ****             /* Try to take one */
7368:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18941              		.loc 1 7368 16
 18942 031c 10301BE5 		ldr	r3, [fp, #-16]
 18943 0320 140083E2 		add	r0, r3, #20
 18944 0324 1C301BE5 		ldr	r3, [fp, #-28]
 18945 0328 013043E2 		sub	r3, r3, #1
 18946 032c 0320A0E1 		mov	r2, r3
 18947 0330 1C101BE5 		ldr	r1, [fp, #-28]
 18948 0334 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18949 0338 0030A0E1 		mov	r3, r0
 18950              		.loc 1 7368 15 discriminator 1
 18951 033c 000053E3 		cmp	r3, #0
 18952 0340 0100001A 		bne	.L1207
7369:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7370:../../Source/Kernel/rme_kernel.c ****                              Old_Value-1U)==RME_CASFAIL)
7371:../../Source/Kernel/rme_kernel.c ****             {
7372:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7373:../../Source/Kernel/rme_kernel.c **** 
7374:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18953              		.loc 1 7374 24
 18954 0344 133EE0E3 		mvn	r3, #304
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 465


 18955 0348 350000EA 		b	.L1179
 18956              	.L1207:
7375:../../Source/Kernel/rme_kernel.c ****             }
7376:../../Source/Kernel/rme_kernel.c ****             else
7377:../../Source/Kernel/rme_kernel.c ****             {
7378:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7379:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7380:../../Source/Kernel/rme_kernel.c ****             }
7381:../../Source/Kernel/rme_kernel.c ****             
7382:../../Source/Kernel/rme_kernel.c ****             /* We have taken it, now return what we have taken */
7383:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,1);
 18957              		.loc 1 7383 13
 18958 034c 0110A0E3 		mov	r1, #1
 18959 0350 24001BE5 		ldr	r0, [fp, #-36]
 18960 0354 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18961 0358 0E0000EA 		b	.L1208
 18962              	.L1206:
7384:../../Source/Kernel/rme_kernel.c ****         }
7385:../../Source/Kernel/rme_kernel.c ****         else
7386:../../Source/Kernel/rme_kernel.c ****         {
7387:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7388:../../Source/Kernel/rme_kernel.c **** 
7389:../../Source/Kernel/rme_kernel.c ****             /* Try to take all */
7390:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP(&(Sig_Root->Sig_Num),
 18963              		.loc 1 7390 16
 18964 035c 10301BE5 		ldr	r3, [fp, #-16]
 18965 0360 143083E2 		add	r3, r3, #20
 18966 0364 0020A0E3 		mov	r2, #0
 18967 0368 1C101BE5 		ldr	r1, [fp, #-28]
 18968 036c 0300A0E1 		mov	r0, r3
 18969 0370 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 18970 0374 0030A0E1 		mov	r3, r0
 18971              		.loc 1 7390 15 discriminator 1
 18972 0378 000053E3 		cmp	r3, #0
 18973 037c 0100001A 		bne	.L1209
7391:../../Source/Kernel/rme_kernel.c ****                              Old_Value,
7392:../../Source/Kernel/rme_kernel.c ****                              0U)==RME_CASFAIL)
7393:../../Source/Kernel/rme_kernel.c ****             {
7394:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7395:../../Source/Kernel/rme_kernel.c **** 
7396:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 18974              		.loc 1 7396 24
 18975 0380 133EE0E3 		mvn	r3, #304
 18976 0384 260000EA 		b	.L1179
 18977              	.L1209:
7397:../../Source/Kernel/rme_kernel.c ****             }
7398:../../Source/Kernel/rme_kernel.c ****             else
7399:../../Source/Kernel/rme_kernel.c ****             {
7400:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7401:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7402:../../Source/Kernel/rme_kernel.c ****             }
7403:../../Source/Kernel/rme_kernel.c ****             
7404:../../Source/Kernel/rme_kernel.c ****             /* We have taken all, now return what we have taken */
7405:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,(rme_ret_t)Old_Value);
 18978              		.loc 1 7405 13
 18979 0388 1C301BE5 		ldr	r3, [fp, #-28]
 18980 038c 0310A0E1 		mov	r1, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 466


 18981 0390 24001BE5 		ldr	r0, [fp, #-36]
 18982 0394 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 18983              	.L1208:
7406:../../Source/Kernel/rme_kernel.c ****         }
7407:../../Source/Kernel/rme_kernel.c ****         
7408:../../Source/Kernel/rme_kernel.c ****         return 0;
 18984              		.loc 1 7408 16
 18985 0398 0030A0E3 		mov	r3, #0
 18986 039c 200000EA 		b	.L1179
 18987              	.L1204:
7409:../../Source/Kernel/rme_kernel.c ****     }
7410:../../Source/Kernel/rme_kernel.c ****     else
7411:../../Source/Kernel/rme_kernel.c ****     {
7412:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7413:../../Source/Kernel/rme_kernel.c **** 
7414:../../Source/Kernel/rme_kernel.c ****         /* There's no value, try to block */
7415:../../Source/Kernel/rme_kernel.c ****         if((Option==RME_RCV_BS)||(Option==RME_RCV_BM))
 18988              		.loc 1 7415 11
 18989 03a0 2C301BE5 		ldr	r3, [fp, #-44]
 18990 03a4 000053E3 		cmp	r3, #0
 18991 03a8 0200000A 		beq	.L1210
 18992              		.loc 1 7415 32 discriminator 1
 18993 03ac 2C301BE5 		ldr	r3, [fp, #-44]
 18994 03b0 010053E3 		cmp	r3, #1
 18995 03b4 1600001A 		bne	.L1211
 18996              	.L1210:
7416:../../Source/Kernel/rme_kernel.c ****         {
7417:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7418:../../Source/Kernel/rme_kernel.c **** 
7419:../../Source/Kernel/rme_kernel.c ****             if(RME_COMP_SWAP((rme_ptr_t*)&(Sig_Root->Thd),
 18997              		.loc 1 7419 16
 18998 03b8 10301BE5 		ldr	r3, [fp, #-16]
 18999 03bc 183083E2 		add	r3, r3, #24
 19000 03c0 18201BE5 		ldr	r2, [fp, #-24]
 19001 03c4 0010A0E3 		mov	r1, #0
 19002 03c8 0300A0E1 		mov	r0, r3
 19003 03cc FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19004 03d0 0030A0E1 		mov	r3, r0
 19005              		.loc 1 7419 15 discriminator 1
 19006 03d4 000053E3 		cmp	r3, #0
 19007 03d8 0100001A 		bne	.L1212
7420:../../Source/Kernel/rme_kernel.c ****                              RME_NULL,
7421:../../Source/Kernel/rme_kernel.c ****                              (rme_ptr_t)Thd_Cur)==RME_CASFAIL)
7422:../../Source/Kernel/rme_kernel.c ****             {
7423:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7424:../../Source/Kernel/rme_kernel.c **** 
7425:../../Source/Kernel/rme_kernel.c ****                 return RME_ERR_SIV_CONFLICT;
 19008              		.loc 1 7425 24
 19009 03dc 133EE0E3 		mvn	r3, #304
 19010 03e0 0F0000EA 		b	.L1179
 19011              	.L1212:
7426:../../Source/Kernel/rme_kernel.c ****             }
7427:../../Source/Kernel/rme_kernel.c ****             else
7428:../../Source/Kernel/rme_kernel.c ****             {
7429:../../Source/Kernel/rme_kernel.c ****                 RME_COV_MARKER();
7430:../../Source/Kernel/rme_kernel.c ****                 /* No action required */
7431:../../Source/Kernel/rme_kernel.c ****             }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 467


7432:../../Source/Kernel/rme_kernel.c **** 
7433:../../Source/Kernel/rme_kernel.c ****             /* Now we block our current thread. No need to set any return value
7434:../../Source/Kernel/rme_kernel.c ****              * to the register set here, because we do not yet know how many
7435:../../Source/Kernel/rme_kernel.c ****              * signals will be there when the thread unblocks. The unblocking
7436:../../Source/Kernel/rme_kernel.c ****              * does not need an option so we don't keep that; we always treat
7437:../../Source/Kernel/rme_kernel.c ****              * it as single receive when we unblock anyway. */
7438:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.Signal=Sig_Root;
 19012              		.loc 1 7438 34
 19013 03e4 18301BE5 		ldr	r3, [fp, #-24]
 19014 03e8 10201BE5 		ldr	r2, [fp, #-16]
 19015 03ec 282083E5 		str	r2, [r3, #40]
7439:../../Source/Kernel/rme_kernel.c ****             Thd_Cur->Sched.State=RME_THD_BLOCKED;
 19016              		.loc 1 7439 33
 19017 03f0 18301BE5 		ldr	r3, [fp, #-24]
 19018 03f4 0120A0E3 		mov	r2, #1
 19019 03f8 1C2083E5 		str	r2, [r3, #28]
7440:../../Source/Kernel/rme_kernel.c ****             _RME_Run_Del(Thd_Cur);
 19020              		.loc 1 7440 13
 19021 03fc 18001BE5 		ldr	r0, [fp, #-24]
 19022 0400 FEFFFFEB 		bl	_RME_Run_Del
7441:../../Source/Kernel/rme_kernel.c ****             
7442:../../Source/Kernel/rme_kernel.c ****             /* Pick the highest priority thread to run */
7443:../../Source/Kernel/rme_kernel.c ****             _RME_Kern_High(Reg,Local);
 19023              		.loc 1 7443 13
 19024 0404 14101BE5 		ldr	r1, [fp, #-20]
 19025 0408 24001BE5 		ldr	r0, [fp, #-36]
 19026 040c FEFFFFEB 		bl	_RME_Kern_High
 19027 0410 020000EA 		b	.L1213
 19028              	.L1211:
7444:../../Source/Kernel/rme_kernel.c ****         }
7445:../../Source/Kernel/rme_kernel.c ****         else
7446:../../Source/Kernel/rme_kernel.c ****         {
7447:../../Source/Kernel/rme_kernel.c ****             RME_COV_MARKER();
7448:../../Source/Kernel/rme_kernel.c **** 
7449:../../Source/Kernel/rme_kernel.c ****             /* We have taken nothing but the system call is successful anyway */
7450:../../Source/Kernel/rme_kernel.c ****             __RME_Svc_Retval_Set(Reg,0);
 19029              		.loc 1 7450 13
 19030 0414 0010A0E3 		mov	r1, #0
 19031 0418 24001BE5 		ldr	r0, [fp, #-36]
 19032 041c FEFFFFEB 		bl	__RME_Svc_Retval_Set
 19033              	.L1213:
7451:../../Source/Kernel/rme_kernel.c ****         }
7452:../../Source/Kernel/rme_kernel.c ****     }
7453:../../Source/Kernel/rme_kernel.c ****     
7454:../../Source/Kernel/rme_kernel.c ****     return 0;
 19034              		.loc 1 7454 12
 19035 0420 0030A0E3 		mov	r3, #0
 19036              	.L1179:
7455:../../Source/Kernel/rme_kernel.c **** }
 19037              		.loc 1 7455 1
 19038 0424 0300A0E1 		mov	r0, r3
 19039 0428 04D04BE2 		sub	sp, fp, #4
 19040              		.cfi_def_cfa 13, 8
 19041              		@ sp needed
 19042 042c 0088BDE8 		pop	{fp, pc}
 19043              	.L1219:
 19044              		.align	2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 468


 19045              	.L1218:
 19046 0430 00000000 		.word	.L1189
 19047              		.cfi_endproc
 19048              	.LFE71:
 19050              		.section	.text._RME_Inv_Crt,"ax",%progbits
 19051              		.align	2
 19052              		.syntax unified
 19053              		.arm
 19055              	_RME_Inv_Crt:
 19056              	.LFB72:
7456:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Sig_Rcv *************************************************/
7457:../../Source/Kernel/rme_kernel.c **** 
7458:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Crt ******************************************************
7459:../../Source/Kernel/rme_kernel.c **** Description : Create an invocation stub.
7460:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7461:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to use
7462:../../Source/Kernel/rme_kernel.c ****                                   for this process.
7463:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7464:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability slot that you want this newly
7465:../../Source/Kernel/rme_kernel.c ****                                   created invocation capability to be in.
7466:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7467:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Prc - The capability to the process that it is in.
7468:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7469:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Raddr - The relative virtual address to store the
7470:../../Source/Kernel/rme_kernel.c ****                                 invocation port kernel object.
7471:../../Source/Kernel/rme_kernel.c **** Output      : None.
7472:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7473:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7474:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Crt(struct RME_Cap_Cpt* Cpt,
7475:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
7476:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kom,
7477:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7478:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Prc,
7479:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Raddr)
7480:../../Source/Kernel/rme_kernel.c **** {
 19057              		.loc 1 7480 1
 19058              		.cfi_startproc
 19059              		@ args = 8, pretend = 0, frame = 48
 19060              		@ frame_needed = 1, uses_anonymous_args = 0
 19061 0000 00482DE9 		push	{fp, lr}
 19062              		.cfi_def_cfa_offset 8
 19063              		.cfi_offset 11, -8
 19064              		.cfi_offset 14, -4
 19065 0004 04B08DE2 		add	fp, sp, #4
 19066              		.cfi_def_cfa 11, 4
 19067 0008 30D04DE2 		sub	sp, sp, #48
 19068 000c 28000BE5 		str	r0, [fp, #-40]
 19069 0010 2C100BE5 		str	r1, [fp, #-44]
 19070 0014 30200BE5 		str	r2, [fp, #-48]
 19071 0018 34300BE5 		str	r3, [fp, #-52]
7481:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7482:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Op;
7483:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kom* Kom_Op;
7484:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Crt;
7485:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Prc* Prc_Root;
7486:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7487:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 469


7488:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Vaddr;
7489:../../Source/Kernel/rme_kernel.c ****     
7490:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slots */
7491:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 19072              		.loc 1 7491 5
 19073 001c 2C301BE5 		ldr	r3, [fp, #-44]
 19074 0020 803003E2 		and	r3, r3, #128
 19075 0024 000053E3 		cmp	r3, #0
 19076 0028 1C00001A 		bne	.L1221
 19077              		.loc 1 7491 5 is_stmt 0 discriminator 1
 19078 002c 28301BE5 		ldr	r3, [fp, #-40]
 19079 0030 142093E5 		ldr	r2, [r3, #20]
 19080 0034 2C301BE5 		ldr	r3, [fp, #-44]
 19081 0038 030052E1 		cmp	r2, r3
 19082 003c 0100008A 		bhi	.L1222
 19083              		.loc 1 7491 5 discriminator 3
 19084 0040 0230E0E3 		mvn	r3, #2
 19085              		.loc 1 7491 5
 19086 0044 950100EA 		b	.L1223
 19087              	.L1222:
 19088              		.loc 1 7491 5 discriminator 4
 19089 0048 2C301BE5 		ldr	r3, [fp, #-44]
 19090 004c 8322A0E1 		lsl	r2, r3, #5
 19091 0050 28301BE5 		ldr	r3, [fp, #-40]
 19092 0054 0C3093E5 		ldr	r3, [r3, #12]
 19093 0058 033082E0 		add	r3, r2, r3
 19094 005c 08300BE5 		str	r3, [fp, #-8]
 19095 0060 08301BE5 		ldr	r3, [fp, #-8]
 19096 0064 0300A0E1 		mov	r0, r3
 19097 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19098 006c 14000BE5 		str	r0, [fp, #-20]
 19099              		.loc 1 7491 5 discriminator 1
 19100 0070 14301BE5 		ldr	r3, [fp, #-20]
 19101 0074 FF3803E2 		and	r3, r3, #16711680
 19102 0078 020853E3 		cmp	r3, #131072
 19103 007c 0100001A 		bne	.L1224
 19104              		.loc 1 7491 5 discriminator 5
 19105 0080 0830E0E3 		mvn	r3, #8
 19106              		.loc 1 7491 5
 19107 0084 850100EA 		b	.L1223
 19108              	.L1224:
 19109              		.loc 1 7491 5 discriminator 6
 19110 0088 14301BE5 		ldr	r3, [fp, #-20]
 19111 008c 233CA0E1 		lsr	r3, r3, #24
 19112 0090 030053E3 		cmp	r3, #3
 19113 0094 3F00000A 		beq	.L1225
 19114              		.loc 1 7491 5 discriminator 7
 19115 0098 0130E0E3 		mvn	r3, #1
 19116              		.loc 1 7491 5
 19117 009c 7F0100EA 		b	.L1223
 19118              	.L1221:
 19119              		.loc 1 7491 5 discriminator 2
 19120 00a0 2C301BE5 		ldr	r3, [fp, #-44]
 19121 00a4 2324A0E1 		lsr	r2, r3, #8
 19122 00a8 28301BE5 		ldr	r3, [fp, #-40]
 19123 00ac 143093E5 		ldr	r3, [r3, #20]
 19124 00b0 030052E1 		cmp	r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 470


 19125 00b4 0100003A 		bcc	.L1226
 19126              		.loc 1 7491 5 discriminator 8
 19127 00b8 0230E0E3 		mvn	r3, #2
 19128              		.loc 1 7491 5
 19129 00bc 770100EA 		b	.L1223
 19130              	.L1226:
 19131              		.loc 1 7491 5 discriminator 9
 19132 00c0 2C301BE5 		ldr	r3, [fp, #-44]
 19133 00c4 2334A0E1 		lsr	r3, r3, #8
 19134 00c8 8322A0E1 		lsl	r2, r3, #5
 19135 00cc 28301BE5 		ldr	r3, [fp, #-40]
 19136 00d0 0C3093E5 		ldr	r3, [r3, #12]
 19137 00d4 033082E0 		add	r3, r2, r3
 19138 00d8 08300BE5 		str	r3, [fp, #-8]
 19139 00dc 08301BE5 		ldr	r3, [fp, #-8]
 19140 00e0 0300A0E1 		mov	r0, r3
 19141 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19142 00e8 14000BE5 		str	r0, [fp, #-20]
 19143              		.loc 1 7491 5 discriminator 1
 19144 00ec 14301BE5 		ldr	r3, [fp, #-20]
 19145 00f0 FF3803E2 		and	r3, r3, #16711680
 19146 00f4 020853E3 		cmp	r3, #131072
 19147 00f8 0100001A 		bne	.L1227
 19148              		.loc 1 7491 5 discriminator 10
 19149 00fc 0830E0E3 		mvn	r3, #8
 19150              		.loc 1 7491 5
 19151 0100 660100EA 		b	.L1223
 19152              	.L1227:
 19153              		.loc 1 7491 5 discriminator 11
 19154 0104 14301BE5 		ldr	r3, [fp, #-20]
 19155 0108 233CA0E1 		lsr	r3, r3, #24
 19156 010c 030053E3 		cmp	r3, #3
 19157 0110 0100000A 		beq	.L1228
 19158              		.loc 1 7491 5 discriminator 12
 19159 0114 0130E0E3 		mvn	r3, #1
 19160              		.loc 1 7491 5
 19161 0118 600100EA 		b	.L1223
 19162              	.L1228:
 19163              		.loc 1 7491 5 discriminator 13
 19164 011c 2C301BE5 		ldr	r3, [fp, #-44]
 19165 0120 7F2003E2 		and	r2, r3, #127
 19166 0124 08301BE5 		ldr	r3, [fp, #-8]
 19167 0128 143093E5 		ldr	r3, [r3, #20]
 19168 012c 030052E1 		cmp	r2, r3
 19169 0130 0100003A 		bcc	.L1229
 19170              		.loc 1 7491 5 discriminator 14
 19171 0134 0230E0E3 		mvn	r3, #2
 19172              		.loc 1 7491 5
 19173 0138 580100EA 		b	.L1223
 19174              	.L1229:
 19175              		.loc 1 7491 5 discriminator 15
 19176 013c 2C301BE5 		ldr	r3, [fp, #-44]
 19177 0140 7F3003E2 		and	r3, r3, #127
 19178 0144 8322A0E1 		lsl	r2, r3, #5
 19179 0148 08301BE5 		ldr	r3, [fp, #-8]
 19180 014c 0C3093E5 		ldr	r3, [r3, #12]
 19181 0150 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 471


 19182 0154 08300BE5 		str	r3, [fp, #-8]
 19183 0158 08301BE5 		ldr	r3, [fp, #-8]
 19184 015c 0300A0E1 		mov	r0, r3
 19185 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19186 0164 14000BE5 		str	r0, [fp, #-20]
 19187              		.loc 1 7491 5 discriminator 1
 19188 0168 14301BE5 		ldr	r3, [fp, #-20]
 19189 016c FF3803E2 		and	r3, r3, #16711680
 19190 0170 020853E3 		cmp	r3, #131072
 19191 0174 0100001A 		bne	.L1230
 19192              		.loc 1 7491 5 discriminator 16
 19193 0178 0830E0E3 		mvn	r3, #8
 19194              		.loc 1 7491 5
 19195 017c 470100EA 		b	.L1223
 19196              	.L1230:
 19197              		.loc 1 7491 5 discriminator 17
 19198 0180 14301BE5 		ldr	r3, [fp, #-20]
 19199 0184 233CA0E1 		lsr	r3, r3, #24
 19200 0188 030053E3 		cmp	r3, #3
 19201 018c 0100000A 		beq	.L1225
 19202              		.loc 1 7491 5 discriminator 18
 19203 0190 0130E0E3 		mvn	r3, #1
 19204              		.loc 1 7491 5
 19205 0194 410100EA 		b	.L1223
 19206              	.L1225:
7492:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7493:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Prc,RME_CAP_TYPE_PRC,
 19207              		.loc 1 7493 5 is_stmt 1
 19208 0198 04309BE5 		ldr	r3, [fp, #4]
 19209 019c 803003E2 		and	r3, r3, #128
 19210 01a0 000053E3 		cmp	r3, #0
 19211 01a4 1C00001A 		bne	.L1231
 19212              		.loc 1 7493 5 is_stmt 0 discriminator 1
 19213 01a8 28301BE5 		ldr	r3, [fp, #-40]
 19214 01ac 142093E5 		ldr	r2, [r3, #20]
 19215 01b0 04309BE5 		ldr	r3, [fp, #4]
 19216 01b4 030052E1 		cmp	r2, r3
 19217 01b8 0100008A 		bhi	.L1232
 19218              		.loc 1 7493 5 discriminator 3
 19219 01bc 0230E0E3 		mvn	r3, #2
 19220              		.loc 1 7493 5
 19221 01c0 360100EA 		b	.L1223
 19222              	.L1232:
 19223              		.loc 1 7493 5 discriminator 4
 19224 01c4 04309BE5 		ldr	r3, [fp, #4]
 19225 01c8 8322A0E1 		lsl	r2, r3, #5
 19226 01cc 28301BE5 		ldr	r3, [fp, #-40]
 19227 01d0 0C3093E5 		ldr	r3, [r3, #12]
 19228 01d4 033082E0 		add	r3, r2, r3
 19229 01d8 0C300BE5 		str	r3, [fp, #-12]
 19230 01dc 0C301BE5 		ldr	r3, [fp, #-12]
 19231 01e0 0300A0E1 		mov	r0, r3
 19232 01e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19233 01e8 14000BE5 		str	r0, [fp, #-20]
 19234              		.loc 1 7493 5 discriminator 1
 19235 01ec 14301BE5 		ldr	r3, [fp, #-20]
 19236 01f0 FF3803E2 		and	r3, r3, #16711680
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 472


 19237 01f4 020853E3 		cmp	r3, #131072
 19238 01f8 0100001A 		bne	.L1233
 19239              		.loc 1 7493 5 discriminator 5
 19240 01fc 0830E0E3 		mvn	r3, #8
 19241              		.loc 1 7493 5
 19242 0200 260100EA 		b	.L1223
 19243              	.L1233:
 19244              		.loc 1 7493 5 discriminator 6
 19245 0204 14301BE5 		ldr	r3, [fp, #-20]
 19246 0208 233CA0E1 		lsr	r3, r3, #24
 19247 020c 050053E3 		cmp	r3, #5
 19248 0210 3F00000A 		beq	.L1234
 19249              		.loc 1 7493 5 discriminator 7
 19250 0214 0130E0E3 		mvn	r3, #1
 19251              		.loc 1 7493 5
 19252 0218 200100EA 		b	.L1223
 19253              	.L1231:
 19254              		.loc 1 7493 5 discriminator 2
 19255 021c 04309BE5 		ldr	r3, [fp, #4]
 19256 0220 2324A0E1 		lsr	r2, r3, #8
 19257 0224 28301BE5 		ldr	r3, [fp, #-40]
 19258 0228 143093E5 		ldr	r3, [r3, #20]
 19259 022c 030052E1 		cmp	r2, r3
 19260 0230 0100003A 		bcc	.L1235
 19261              		.loc 1 7493 5 discriminator 8
 19262 0234 0230E0E3 		mvn	r3, #2
 19263              		.loc 1 7493 5
 19264 0238 180100EA 		b	.L1223
 19265              	.L1235:
 19266              		.loc 1 7493 5 discriminator 9
 19267 023c 04309BE5 		ldr	r3, [fp, #4]
 19268 0240 2334A0E1 		lsr	r3, r3, #8
 19269 0244 8322A0E1 		lsl	r2, r3, #5
 19270 0248 28301BE5 		ldr	r3, [fp, #-40]
 19271 024c 0C3093E5 		ldr	r3, [r3, #12]
 19272 0250 033082E0 		add	r3, r2, r3
 19273 0254 0C300BE5 		str	r3, [fp, #-12]
 19274 0258 0C301BE5 		ldr	r3, [fp, #-12]
 19275 025c 0300A0E1 		mov	r0, r3
 19276 0260 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19277 0264 14000BE5 		str	r0, [fp, #-20]
 19278              		.loc 1 7493 5 discriminator 1
 19279 0268 14301BE5 		ldr	r3, [fp, #-20]
 19280 026c FF3803E2 		and	r3, r3, #16711680
 19281 0270 020853E3 		cmp	r3, #131072
 19282 0274 0100001A 		bne	.L1236
 19283              		.loc 1 7493 5 discriminator 10
 19284 0278 0830E0E3 		mvn	r3, #8
 19285              		.loc 1 7493 5
 19286 027c 070100EA 		b	.L1223
 19287              	.L1236:
 19288              		.loc 1 7493 5 discriminator 11
 19289 0280 14301BE5 		ldr	r3, [fp, #-20]
 19290 0284 233CA0E1 		lsr	r3, r3, #24
 19291 0288 030053E3 		cmp	r3, #3
 19292 028c 0100000A 		beq	.L1237
 19293              		.loc 1 7493 5 discriminator 12
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 473


 19294 0290 0130E0E3 		mvn	r3, #1
 19295              		.loc 1 7493 5
 19296 0294 010100EA 		b	.L1223
 19297              	.L1237:
 19298              		.loc 1 7493 5 discriminator 13
 19299 0298 04309BE5 		ldr	r3, [fp, #4]
 19300 029c 7F2003E2 		and	r2, r3, #127
 19301 02a0 0C301BE5 		ldr	r3, [fp, #-12]
 19302 02a4 143093E5 		ldr	r3, [r3, #20]
 19303 02a8 030052E1 		cmp	r2, r3
 19304 02ac 0100003A 		bcc	.L1238
 19305              		.loc 1 7493 5 discriminator 14
 19306 02b0 0230E0E3 		mvn	r3, #2
 19307              		.loc 1 7493 5
 19308 02b4 F90000EA 		b	.L1223
 19309              	.L1238:
 19310              		.loc 1 7493 5 discriminator 15
 19311 02b8 04309BE5 		ldr	r3, [fp, #4]
 19312 02bc 7F3003E2 		and	r3, r3, #127
 19313 02c0 8322A0E1 		lsl	r2, r3, #5
 19314 02c4 0C301BE5 		ldr	r3, [fp, #-12]
 19315 02c8 0C3093E5 		ldr	r3, [r3, #12]
 19316 02cc 033082E0 		add	r3, r2, r3
 19317 02d0 0C300BE5 		str	r3, [fp, #-12]
 19318 02d4 0C301BE5 		ldr	r3, [fp, #-12]
 19319 02d8 0300A0E1 		mov	r0, r3
 19320 02dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19321 02e0 14000BE5 		str	r0, [fp, #-20]
 19322              		.loc 1 7493 5 discriminator 1
 19323 02e4 14301BE5 		ldr	r3, [fp, #-20]
 19324 02e8 FF3803E2 		and	r3, r3, #16711680
 19325 02ec 020853E3 		cmp	r3, #131072
 19326 02f0 0100001A 		bne	.L1239
 19327              		.loc 1 7493 5 discriminator 16
 19328 02f4 0830E0E3 		mvn	r3, #8
 19329              		.loc 1 7493 5
 19330 02f8 E80000EA 		b	.L1223
 19331              	.L1239:
 19332              		.loc 1 7493 5 discriminator 17
 19333 02fc 14301BE5 		ldr	r3, [fp, #-20]
 19334 0300 233CA0E1 		lsr	r3, r3, #24
 19335 0304 050053E3 		cmp	r3, #5
 19336 0308 0100000A 		beq	.L1234
 19337              		.loc 1 7493 5 discriminator 18
 19338 030c 0130E0E3 		mvn	r3, #1
 19339              		.loc 1 7493 5
 19340 0310 E20000EA 		b	.L1223
 19341              	.L1234:
7494:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Prc*,Prc_Op,Type_Stat);
7495:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kom,RME_CAP_TYPE_KOM,
 19342              		.loc 1 7495 5 is_stmt 1
 19343 0314 30301BE5 		ldr	r3, [fp, #-48]
 19344 0318 803003E2 		and	r3, r3, #128
 19345 031c 000053E3 		cmp	r3, #0
 19346 0320 1C00001A 		bne	.L1240
 19347              		.loc 1 7495 5 is_stmt 0 discriminator 1
 19348 0324 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 474


 19349 0328 142093E5 		ldr	r2, [r3, #20]
 19350 032c 30301BE5 		ldr	r3, [fp, #-48]
 19351 0330 030052E1 		cmp	r2, r3
 19352 0334 0100008A 		bhi	.L1241
 19353              		.loc 1 7495 5 discriminator 3
 19354 0338 0230E0E3 		mvn	r3, #2
 19355              		.loc 1 7495 5
 19356 033c D70000EA 		b	.L1223
 19357              	.L1241:
 19358              		.loc 1 7495 5 discriminator 4
 19359 0340 30301BE5 		ldr	r3, [fp, #-48]
 19360 0344 8322A0E1 		lsl	r2, r3, #5
 19361 0348 28301BE5 		ldr	r3, [fp, #-40]
 19362 034c 0C3093E5 		ldr	r3, [r3, #12]
 19363 0350 033082E0 		add	r3, r2, r3
 19364 0354 10300BE5 		str	r3, [fp, #-16]
 19365 0358 10301BE5 		ldr	r3, [fp, #-16]
 19366 035c 0300A0E1 		mov	r0, r3
 19367 0360 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19368 0364 14000BE5 		str	r0, [fp, #-20]
 19369              		.loc 1 7495 5 discriminator 1
 19370 0368 14301BE5 		ldr	r3, [fp, #-20]
 19371 036c FF3803E2 		and	r3, r3, #16711680
 19372 0370 020853E3 		cmp	r3, #131072
 19373 0374 0100001A 		bne	.L1242
 19374              		.loc 1 7495 5 discriminator 5
 19375 0378 0830E0E3 		mvn	r3, #8
 19376              		.loc 1 7495 5
 19377 037c C70000EA 		b	.L1223
 19378              	.L1242:
 19379              		.loc 1 7495 5 discriminator 6
 19380 0380 14301BE5 		ldr	r3, [fp, #-20]
 19381 0384 233CA0E1 		lsr	r3, r3, #24
 19382 0388 020053E3 		cmp	r3, #2
 19383 038c 3F00000A 		beq	.L1243
 19384              		.loc 1 7495 5 discriminator 7
 19385 0390 0130E0E3 		mvn	r3, #1
 19386              		.loc 1 7495 5
 19387 0394 C10000EA 		b	.L1223
 19388              	.L1240:
 19389              		.loc 1 7495 5 discriminator 2
 19390 0398 30301BE5 		ldr	r3, [fp, #-48]
 19391 039c 2324A0E1 		lsr	r2, r3, #8
 19392 03a0 28301BE5 		ldr	r3, [fp, #-40]
 19393 03a4 143093E5 		ldr	r3, [r3, #20]
 19394 03a8 030052E1 		cmp	r2, r3
 19395 03ac 0100003A 		bcc	.L1244
 19396              		.loc 1 7495 5 discriminator 8
 19397 03b0 0230E0E3 		mvn	r3, #2
 19398              		.loc 1 7495 5
 19399 03b4 B90000EA 		b	.L1223
 19400              	.L1244:
 19401              		.loc 1 7495 5 discriminator 9
 19402 03b8 30301BE5 		ldr	r3, [fp, #-48]
 19403 03bc 2334A0E1 		lsr	r3, r3, #8
 19404 03c0 8322A0E1 		lsl	r2, r3, #5
 19405 03c4 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 475


 19406 03c8 0C3093E5 		ldr	r3, [r3, #12]
 19407 03cc 033082E0 		add	r3, r2, r3
 19408 03d0 10300BE5 		str	r3, [fp, #-16]
 19409 03d4 10301BE5 		ldr	r3, [fp, #-16]
 19410 03d8 0300A0E1 		mov	r0, r3
 19411 03dc FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19412 03e0 14000BE5 		str	r0, [fp, #-20]
 19413              		.loc 1 7495 5 discriminator 1
 19414 03e4 14301BE5 		ldr	r3, [fp, #-20]
 19415 03e8 FF3803E2 		and	r3, r3, #16711680
 19416 03ec 020853E3 		cmp	r3, #131072
 19417 03f0 0100001A 		bne	.L1245
 19418              		.loc 1 7495 5 discriminator 10
 19419 03f4 0830E0E3 		mvn	r3, #8
 19420              		.loc 1 7495 5
 19421 03f8 A80000EA 		b	.L1223
 19422              	.L1245:
 19423              		.loc 1 7495 5 discriminator 11
 19424 03fc 14301BE5 		ldr	r3, [fp, #-20]
 19425 0400 233CA0E1 		lsr	r3, r3, #24
 19426 0404 030053E3 		cmp	r3, #3
 19427 0408 0100000A 		beq	.L1246
 19428              		.loc 1 7495 5 discriminator 12
 19429 040c 0130E0E3 		mvn	r3, #1
 19430              		.loc 1 7495 5
 19431 0410 A20000EA 		b	.L1223
 19432              	.L1246:
 19433              		.loc 1 7495 5 discriminator 13
 19434 0414 30301BE5 		ldr	r3, [fp, #-48]
 19435 0418 7F2003E2 		and	r2, r3, #127
 19436 041c 10301BE5 		ldr	r3, [fp, #-16]
 19437 0420 143093E5 		ldr	r3, [r3, #20]
 19438 0424 030052E1 		cmp	r2, r3
 19439 0428 0100003A 		bcc	.L1247
 19440              		.loc 1 7495 5 discriminator 14
 19441 042c 0230E0E3 		mvn	r3, #2
 19442              		.loc 1 7495 5
 19443 0430 9A0000EA 		b	.L1223
 19444              	.L1247:
 19445              		.loc 1 7495 5 discriminator 15
 19446 0434 30301BE5 		ldr	r3, [fp, #-48]
 19447 0438 7F3003E2 		and	r3, r3, #127
 19448 043c 8322A0E1 		lsl	r2, r3, #5
 19449 0440 10301BE5 		ldr	r3, [fp, #-16]
 19450 0444 0C3093E5 		ldr	r3, [r3, #12]
 19451 0448 033082E0 		add	r3, r2, r3
 19452 044c 10300BE5 		str	r3, [fp, #-16]
 19453 0450 10301BE5 		ldr	r3, [fp, #-16]
 19454 0454 0300A0E1 		mov	r0, r3
 19455 0458 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19456 045c 14000BE5 		str	r0, [fp, #-20]
 19457              		.loc 1 7495 5 discriminator 1
 19458 0460 14301BE5 		ldr	r3, [fp, #-20]
 19459 0464 FF3803E2 		and	r3, r3, #16711680
 19460 0468 020853E3 		cmp	r3, #131072
 19461 046c 0100001A 		bne	.L1248
 19462              		.loc 1 7495 5 discriminator 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 476


 19463 0470 0830E0E3 		mvn	r3, #8
 19464              		.loc 1 7495 5
 19465 0474 890000EA 		b	.L1223
 19466              	.L1248:
 19467              		.loc 1 7495 5 discriminator 17
 19468 0478 14301BE5 		ldr	r3, [fp, #-20]
 19469 047c 233CA0E1 		lsr	r3, r3, #24
 19470 0480 020053E3 		cmp	r3, #2
 19471 0484 0100000A 		beq	.L1243
 19472              		.loc 1 7495 5 discriminator 18
 19473 0488 0130E0E3 		mvn	r3, #1
 19474              		.loc 1 7495 5
 19475 048c 830000EA 		b	.L1223
 19476              	.L1243:
7496:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kom*,Kom_Op,Type_Stat);
7497:../../Source/Kernel/rme_kernel.c ****     /* Check if the captbl is not frozen and allows such operations */
7498:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 19477              		.loc 1 7498 5 is_stmt 1
 19478 0490 08301BE5 		ldr	r3, [fp, #-8]
 19479 0494 083093E5 		ldr	r3, [r3, #8]
 19480 0498 013003E2 		and	r3, r3, #1
 19481 049c 000053E3 		cmp	r3, #0
 19482 04a0 0100001A 		bne	.L1249
 19483              		.loc 1 7498 5 is_stmt 0 discriminator 1
 19484 04a4 0630E0E3 		mvn	r3, #6
 19485              		.loc 1 7498 5
 19486 04a8 7C0000EA 		b	.L1223
 19487              	.L1249:
7499:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Prc_Op,RME_PRC_FLAG_INV);
 19488              		.loc 1 7499 5 is_stmt 1
 19489 04ac 0C301BE5 		ldr	r3, [fp, #-12]
 19490 04b0 083093E5 		ldr	r3, [r3, #8]
 19491 04b4 013003E2 		and	r3, r3, #1
 19492 04b8 000053E3 		cmp	r3, #0
 19493 04bc 0100001A 		bne	.L1250
 19494              		.loc 1 7499 5 is_stmt 0 discriminator 1
 19495 04c0 0630E0E3 		mvn	r3, #6
 19496              		.loc 1 7499 5
 19497 04c4 750000EA 		b	.L1223
 19498              	.L1250:
7500:../../Source/Kernel/rme_kernel.c ****     /* See if the creation is valid for this kmem range */
7501:../../Source/Kernel/rme_kernel.c ****     RME_KOM_CHECK(Kom_Op,RME_KOM_FLAG_INV,Raddr,Vaddr,RME_INV_SIZE);
 19499              		.loc 1 7501 5 is_stmt 1
 19500 04c8 10301BE5 		ldr	r3, [fp, #-16]
 19501 04cc 083093E5 		ldr	r3, [r3, #8]
 19502 04d0 083003E2 		and	r3, r3, #8
 19503 04d4 000053E3 		cmp	r3, #0
 19504 04d8 0100001A 		bne	.L1251
 19505              		.loc 1 7501 5 is_stmt 0 discriminator 1
 19506 04dc 0630E0E3 		mvn	r3, #6
 19507              		.loc 1 7501 5
 19508 04e0 6E0000EA 		b	.L1223
 19509              	.L1251:
 19510              		.loc 1 7501 5 discriminator 2
 19511 04e4 10301BE5 		ldr	r3, [fp, #-16]
 19512 04e8 143093E5 		ldr	r3, [r3, #20]
 19513 04ec 08209BE5 		ldr	r2, [fp, #8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 477


 19514 04f0 033082E0 		add	r3, r2, r3
 19515 04f4 18300BE5 		str	r3, [fp, #-24]
 19516 04f8 18201BE5 		ldr	r2, [fp, #-24]
 19517 04fc 08309BE5 		ldr	r3, [fp, #8]
 19518 0500 030052E1 		cmp	r2, r3
 19519 0504 0100002A 		bcs	.L1252
 19520              		.loc 1 7501 5 discriminator 3
 19521 0508 0630E0E3 		mvn	r3, #6
 19522              		.loc 1 7501 5
 19523 050c 630000EA 		b	.L1223
 19524              	.L1252:
 19525              		.loc 1 7501 5 discriminator 4
 19526 0510 10301BE5 		ldr	r3, [fp, #-16]
 19527 0514 143093E5 		ldr	r3, [r3, #20]
 19528 0518 18201BE5 		ldr	r2, [fp, #-24]
 19529 051c 030052E1 		cmp	r2, r3
 19530 0520 0100002A 		bcs	.L1253
 19531              		.loc 1 7501 5 discriminator 5
 19532 0524 0630E0E3 		mvn	r3, #6
 19533              		.loc 1 7501 5
 19534 0528 5C0000EA 		b	.L1223
 19535              	.L1253:
 19536              		.loc 1 7501 5 discriminator 6
 19537 052c 18301BE5 		ldr	r3, [fp, #-24]
 19538 0530 250073E3 		cmn	r3, #37
 19539 0534 0100009A 		bls	.L1254
 19540              		.loc 1 7501 5 discriminator 7
 19541 0538 0630E0E3 		mvn	r3, #6
 19542              		.loc 1 7501 5
 19543 053c 570000EA 		b	.L1223
 19544              	.L1254:
 19545              		.loc 1 7501 5 discriminator 8
 19546 0540 10301BE5 		ldr	r3, [fp, #-16]
 19547 0544 182093E5 		ldr	r2, [r3, #24]
 19548 0548 18301BE5 		ldr	r3, [fp, #-24]
 19549 054c 233083E2 		add	r3, r3, #35
 19550 0550 030052E1 		cmp	r2, r3
 19551 0554 0100002A 		bcs	.L1255
 19552              		.loc 1 7501 5 discriminator 9
 19553 0558 0630E0E3 		mvn	r3, #6
 19554              		.loc 1 7501 5
 19555 055c 4F0000EA 		b	.L1223
 19556              	.L1255:
7502:../../Source/Kernel/rme_kernel.c ****     
7503:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7504:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Crt);
 19557              		.loc 1 7504 5 is_stmt 1
 19558 0560 08301BE5 		ldr	r3, [fp, #-8]
 19559 0564 142093E5 		ldr	r2, [r3, #20]
 19560 0568 34301BE5 		ldr	r3, [fp, #-52]
 19561 056c 030052E1 		cmp	r2, r3
 19562 0570 0100008A 		bhi	.L1256
 19563              		.loc 1 7504 5 is_stmt 0 discriminator 1
 19564 0574 0230E0E3 		mvn	r3, #2
 19565              		.loc 1 7504 5
 19566 0578 480000EA 		b	.L1223
 19567              	.L1256:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 478


 19568              		.loc 1 7504 5 discriminator 2
 19569 057c 34301BE5 		ldr	r3, [fp, #-52]
 19570 0580 8322A0E1 		lsl	r2, r3, #5
 19571 0584 08301BE5 		ldr	r3, [fp, #-8]
 19572 0588 0C3093E5 		ldr	r3, [r3, #12]
 19573 058c 033082E0 		add	r3, r2, r3
 19574 0590 1C300BE5 		str	r3, [fp, #-28]
7505:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7506:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Inv_Crt);
 19575              		.loc 1 7506 5 is_stmt 1
 19576 0594 1C301BE5 		ldr	r3, [fp, #-28]
 19577 0598 0128A0E3 		mov	r2, #65536
 19578 059c 0010A0E3 		mov	r1, #0
 19579 05a0 0300A0E1 		mov	r0, r3
 19580 05a4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19581 05a8 0030A0E1 		mov	r3, r0
 19582              		.loc 1 7506 5 is_stmt 0 discriminator 1
 19583 05ac 000053E3 		cmp	r3, #0
 19584 05b0 0100001A 		bne	.L1257
 19585 05b4 0430E0E3 		mvn	r3, #4
 19586              		.loc 1 7506 5
 19587 05b8 380000EA 		b	.L1223
 19588              	.L1257:
 19589              		.loc 1 7506 5 discriminator 2
 19590 05bc 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19591 05c0 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19592 05c4 002093E5 		ldr	r2, [r3]
 19593 05c8 1C301BE5 		ldr	r3, [fp, #-28]
 19594 05cc 102083E5 		str	r2, [r3, #16]
7507:../../Source/Kernel/rme_kernel.c ****     
7508:../../Source/Kernel/rme_kernel.c ****     /* Try to populate the area */
7509:../../Source/Kernel/rme_kernel.c ****     if(_RME_Kot_Mark(Vaddr,RME_INV_SIZE)!=0)
 19595              		.loc 1 7509 8 is_stmt 1
 19596 05d0 2410A0E3 		mov	r1, #36
 19597 05d4 18001BE5 		ldr	r0, [fp, #-24]
 19598 05d8 FEFFFFEB 		bl	_RME_Kot_Mark
 19599 05dc 0030A0E1 		mov	r3, r0
 19600              		.loc 1 7509 7 discriminator 1
 19601 05e0 000053E3 		cmp	r3, #0
 19602 05e4 0500000A 		beq	.L1258
7510:../../Source/Kernel/rme_kernel.c ****     {
7511:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7512:../../Source/Kernel/rme_kernel.c **** 
7513:../../Source/Kernel/rme_kernel.c ****         RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),0U);
 19603              		.loc 1 7513 9
 19604 05e8 1C301BE5 		ldr	r3, [fp, #-28]
 19605 05ec 0010A0E3 		mov	r1, #0
 19606 05f0 0300A0E1 		mov	r0, r3
 19607 05f4 FEFFFFEB 		bl	__RME_A7A_Write_Release
7514:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_KOT;
 19608              		.loc 1 7514 16
 19609 05f8 0330E0E3 		mvn	r3, #3
 19610 05fc 270000EA 		b	.L1223
 19611              	.L1258:
7515:../../Source/Kernel/rme_kernel.c ****     }
7516:../../Source/Kernel/rme_kernel.c ****     else
7517:../../Source/Kernel/rme_kernel.c ****     {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 479


7518:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7519:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7520:../../Source/Kernel/rme_kernel.c ****     }
7521:../../Source/Kernel/rme_kernel.c ****     
7522:../../Source/Kernel/rme_kernel.c ****     /* Object init */
7523:../../Source/Kernel/rme_kernel.c ****     Invocation=(struct RME_Inv_Struct*)Vaddr;
 19612              		.loc 1 7523 15
 19613 0600 18301BE5 		ldr	r3, [fp, #-24]
 19614 0604 20300BE5 		str	r3, [fp, #-32]
7524:../../Source/Kernel/rme_kernel.c ****     Prc_Root=RME_CAP_CONV_ROOT(Prc_Op,struct RME_Cap_Prc*);
 19615              		.loc 1 7524 14
 19616 0608 0C301BE5 		ldr	r3, [fp, #-12]
 19617 060c 003093E5 		ldr	r3, [r3]
 19618 0610 7330FFE6 		uxth	r3, r3
 19619 0614 000053E3 		cmp	r3, #0
 19620 0618 0200000A 		beq	.L1259
 19621              		.loc 1 7524 14 is_stmt 0 discriminator 1
 19622 061c 0C301BE5 		ldr	r3, [fp, #-12]
 19623 0620 043093E5 		ldr	r3, [r3, #4]
 19624 0624 000000EA 		b	.L1260
 19625              	.L1259:
 19626              		.loc 1 7524 14 discriminator 2
 19627 0628 0C301BE5 		ldr	r3, [fp, #-12]
 19628              	.L1260:
 19629              		.loc 1 7524 13 is_stmt 1 discriminator 4
 19630 062c 24300BE5 		str	r3, [fp, #-36]
7525:../../Source/Kernel/rme_kernel.c ****     Invocation->Prc=Prc_Root;
 19631              		.loc 1 7525 20
 19632 0630 20301BE5 		ldr	r3, [fp, #-32]
 19633 0634 24201BE5 		ldr	r2, [fp, #-36]
 19634 0638 082083E5 		str	r2, [r3, #8]
7526:../../Source/Kernel/rme_kernel.c ****     Invocation->Thd_Act=RME_NULL;
 19635              		.loc 1 7526 24
 19636 063c 20301BE5 		ldr	r3, [fp, #-32]
 19637 0640 0020A0E3 		mov	r2, #0
 19638 0644 0C2083E5 		str	r2, [r3, #12]
7527:../../Source/Kernel/rme_kernel.c ****     /* By default we do not return on exception */
7528:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=0U;
 19639              		.loc 1 7528 27
 19640 0648 20301BE5 		ldr	r3, [fp, #-32]
 19641 064c 0020A0E3 		mov	r2, #0
 19642 0650 182083E5 		str	r2, [r3, #24]
7529:../../Source/Kernel/rme_kernel.c ****     
7530:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7531:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Root_Ref=0U;
 19643              		.loc 1 7531 27
 19644 0654 1C301BE5 		ldr	r3, [fp, #-28]
 19645 0658 0020A0E3 		mov	r2, #0
 19646 065c 042083E5 		str	r2, [r3, #4]
7532:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Object=Vaddr;
 19647              		.loc 1 7532 25
 19648 0660 1C301BE5 		ldr	r3, [fp, #-28]
 19649 0664 18201BE5 		ldr	r2, [fp, #-24]
 19650 0668 0C2083E5 		str	r2, [r3, #12]
7533:../../Source/Kernel/rme_kernel.c ****     Inv_Crt->Head.Flag=RME_INV_FLAG_ALL;
 19651              		.loc 1 7533 23
 19652 066c 1C301BE5 		ldr	r3, [fp, #-28]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 480


 19653 0670 0320A0E3 		mov	r2, #3
 19654 0674 082083E5 		str	r2, [r3, #8]
7534:../../Source/Kernel/rme_kernel.c ****     
7535:../../Source/Kernel/rme_kernel.c ****     /* Reference object */
7536:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Prc_Root->Head.Root_Ref),1U);
 19655              		.loc 1 7536 5
 19656 0678 24301BE5 		ldr	r3, [fp, #-36]
 19657 067c 043083E2 		add	r3, r3, #4
 19658 0680 0110A0E3 		mov	r1, #1
 19659 0684 0300A0E1 		mov	r0, r3
 19660 0688 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7537:../../Source/Kernel/rme_kernel.c ****     
7538:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7539:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Inv_Crt->Head.Type_Stat),
 19661              		.loc 1 7539 5
 19662 068c 1C301BE5 		ldr	r3, [fp, #-28]
 19663 0690 0714A0E3 		mov	r1, #117440512
 19664 0694 0300A0E1 		mov	r0, r3
 19665 0698 FEFFFFEB 		bl	__RME_A7A_Write_Release
7540:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_INV,
7541:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7542:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7543:../../Source/Kernel/rme_kernel.c **** 
7544:../../Source/Kernel/rme_kernel.c ****     return 0;
 19666              		.loc 1 7544 12
 19667 069c 0030A0E3 		mov	r3, #0
 19668              	.L1223:
7545:../../Source/Kernel/rme_kernel.c **** }
 19669              		.loc 1 7545 1
 19670 06a0 0300A0E1 		mov	r0, r3
 19671 06a4 04D04BE2 		sub	sp, fp, #4
 19672              		.cfi_def_cfa 13, 8
 19673              		@ sp needed
 19674 06a8 0088BDE8 		pop	{fp, pc}
 19675              		.cfi_endproc
 19676              	.LFE72:
 19678              		.section	.text._RME_Inv_Del,"ax",%progbits
 19679              		.align	2
 19680              		.syntax unified
 19681              		.arm
 19683              	_RME_Inv_Del:
 19684              	.LFB73:
7546:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Crt *************************************************/
7547:../../Source/Kernel/rme_kernel.c **** 
7548:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Del ******************************************************
7549:../../Source/Kernel/rme_kernel.c **** Description : Delete an invocation stub.
7550:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7551:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the capability table to
7552:../../Source/Kernel/rme_kernel.c ****                                   delete from.
7553:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7554:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7555:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7556:../../Source/Kernel/rme_kernel.c **** Output      : None.
7557:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7558:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7559:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Del(struct RME_Cap_Cpt* Cpt,
7560:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Cpt,
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 481


7561:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv)
7562:../../Source/Kernel/rme_kernel.c **** {
 19685              		.loc 1 7562 1
 19686              		.cfi_startproc
 19687              		@ args = 0, pretend = 0, frame = 32
 19688              		@ frame_needed = 1, uses_anonymous_args = 0
 19689 0000 00482DE9 		push	{fp, lr}
 19690              		.cfi_def_cfa_offset 8
 19691              		.cfi_offset 11, -8
 19692              		.cfi_offset 14, -4
 19693 0004 04B08DE2 		add	fp, sp, #4
 19694              		.cfi_def_cfa 11, 4
 19695 0008 20D04DE2 		sub	sp, sp, #32
 19696 000c 18000BE5 		str	r0, [fp, #-24]
 19697 0010 1C100BE5 		str	r1, [fp, #-28]
 19698 0014 20200BE5 		str	r2, [fp, #-32]
7563:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7564:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Inv* Inv_Del;
7565:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7566:../../Source/Kernel/rme_kernel.c ****     /* These are for deletion */
7567:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7568:../../Source/Kernel/rme_kernel.c ****     
7569:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7570:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 19699              		.loc 1 7570 5
 19700 0018 1C301BE5 		ldr	r3, [fp, #-28]
 19701 001c 803003E2 		and	r3, r3, #128
 19702 0020 000053E3 		cmp	r3, #0
 19703 0024 1C00001A 		bne	.L1262
 19704              		.loc 1 7570 5 is_stmt 0 discriminator 1
 19705 0028 18301BE5 		ldr	r3, [fp, #-24]
 19706 002c 142093E5 		ldr	r2, [r3, #20]
 19707 0030 1C301BE5 		ldr	r3, [fp, #-28]
 19708 0034 030052E1 		cmp	r2, r3
 19709 0038 0100008A 		bhi	.L1263
 19710              		.loc 1 7570 5 discriminator 3
 19711 003c 0230E0E3 		mvn	r3, #2
 19712              		.loc 1 7570 5
 19713 0040 D10000EA 		b	.L1264
 19714              	.L1263:
 19715              		.loc 1 7570 5 discriminator 4
 19716 0044 1C301BE5 		ldr	r3, [fp, #-28]
 19717 0048 8322A0E1 		lsl	r2, r3, #5
 19718 004c 18301BE5 		ldr	r3, [fp, #-24]
 19719 0050 0C3093E5 		ldr	r3, [r3, #12]
 19720 0054 033082E0 		add	r3, r2, r3
 19721 0058 08300BE5 		str	r3, [fp, #-8]
 19722 005c 08301BE5 		ldr	r3, [fp, #-8]
 19723 0060 0300A0E1 		mov	r0, r3
 19724 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19725 0068 0C000BE5 		str	r0, [fp, #-12]
 19726              		.loc 1 7570 5 discriminator 1
 19727 006c 0C301BE5 		ldr	r3, [fp, #-12]
 19728 0070 FF3803E2 		and	r3, r3, #16711680
 19729 0074 020853E3 		cmp	r3, #131072
 19730 0078 0100001A 		bne	.L1265
 19731              		.loc 1 7570 5 discriminator 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 482


 19732 007c 0830E0E3 		mvn	r3, #8
 19733              		.loc 1 7570 5
 19734 0080 C10000EA 		b	.L1264
 19735              	.L1265:
 19736              		.loc 1 7570 5 discriminator 6
 19737 0084 0C301BE5 		ldr	r3, [fp, #-12]
 19738 0088 233CA0E1 		lsr	r3, r3, #24
 19739 008c 030053E3 		cmp	r3, #3
 19740 0090 3F00000A 		beq	.L1266
 19741              		.loc 1 7570 5 discriminator 7
 19742 0094 0130E0E3 		mvn	r3, #1
 19743              		.loc 1 7570 5
 19744 0098 BB0000EA 		b	.L1264
 19745              	.L1262:
 19746              		.loc 1 7570 5 discriminator 2
 19747 009c 1C301BE5 		ldr	r3, [fp, #-28]
 19748 00a0 2324A0E1 		lsr	r2, r3, #8
 19749 00a4 18301BE5 		ldr	r3, [fp, #-24]
 19750 00a8 143093E5 		ldr	r3, [r3, #20]
 19751 00ac 030052E1 		cmp	r2, r3
 19752 00b0 0100003A 		bcc	.L1267
 19753              		.loc 1 7570 5 discriminator 8
 19754 00b4 0230E0E3 		mvn	r3, #2
 19755              		.loc 1 7570 5
 19756 00b8 B30000EA 		b	.L1264
 19757              	.L1267:
 19758              		.loc 1 7570 5 discriminator 9
 19759 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 19760 00c0 2334A0E1 		lsr	r3, r3, #8
 19761 00c4 8322A0E1 		lsl	r2, r3, #5
 19762 00c8 18301BE5 		ldr	r3, [fp, #-24]
 19763 00cc 0C3093E5 		ldr	r3, [r3, #12]
 19764 00d0 033082E0 		add	r3, r2, r3
 19765 00d4 08300BE5 		str	r3, [fp, #-8]
 19766 00d8 08301BE5 		ldr	r3, [fp, #-8]
 19767 00dc 0300A0E1 		mov	r0, r3
 19768 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19769 00e4 0C000BE5 		str	r0, [fp, #-12]
 19770              		.loc 1 7570 5 discriminator 1
 19771 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 19772 00ec FF3803E2 		and	r3, r3, #16711680
 19773 00f0 020853E3 		cmp	r3, #131072
 19774 00f4 0100001A 		bne	.L1268
 19775              		.loc 1 7570 5 discriminator 10
 19776 00f8 0830E0E3 		mvn	r3, #8
 19777              		.loc 1 7570 5
 19778 00fc A20000EA 		b	.L1264
 19779              	.L1268:
 19780              		.loc 1 7570 5 discriminator 11
 19781 0100 0C301BE5 		ldr	r3, [fp, #-12]
 19782 0104 233CA0E1 		lsr	r3, r3, #24
 19783 0108 030053E3 		cmp	r3, #3
 19784 010c 0100000A 		beq	.L1269
 19785              		.loc 1 7570 5 discriminator 12
 19786 0110 0130E0E3 		mvn	r3, #1
 19787              		.loc 1 7570 5
 19788 0114 9C0000EA 		b	.L1264
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 483


 19789              	.L1269:
 19790              		.loc 1 7570 5 discriminator 13
 19791 0118 1C301BE5 		ldr	r3, [fp, #-28]
 19792 011c 7F2003E2 		and	r2, r3, #127
 19793 0120 08301BE5 		ldr	r3, [fp, #-8]
 19794 0124 143093E5 		ldr	r3, [r3, #20]
 19795 0128 030052E1 		cmp	r2, r3
 19796 012c 0100003A 		bcc	.L1270
 19797              		.loc 1 7570 5 discriminator 14
 19798 0130 0230E0E3 		mvn	r3, #2
 19799              		.loc 1 7570 5
 19800 0134 940000EA 		b	.L1264
 19801              	.L1270:
 19802              		.loc 1 7570 5 discriminator 15
 19803 0138 1C301BE5 		ldr	r3, [fp, #-28]
 19804 013c 7F3003E2 		and	r3, r3, #127
 19805 0140 8322A0E1 		lsl	r2, r3, #5
 19806 0144 08301BE5 		ldr	r3, [fp, #-8]
 19807 0148 0C3093E5 		ldr	r3, [r3, #12]
 19808 014c 033082E0 		add	r3, r2, r3
 19809 0150 08300BE5 		str	r3, [fp, #-8]
 19810 0154 08301BE5 		ldr	r3, [fp, #-8]
 19811 0158 0300A0E1 		mov	r0, r3
 19812 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19813 0160 0C000BE5 		str	r0, [fp, #-12]
 19814              		.loc 1 7570 5 discriminator 1
 19815 0164 0C301BE5 		ldr	r3, [fp, #-12]
 19816 0168 FF3803E2 		and	r3, r3, #16711680
 19817 016c 020853E3 		cmp	r3, #131072
 19818 0170 0100001A 		bne	.L1271
 19819              		.loc 1 7570 5 discriminator 16
 19820 0174 0830E0E3 		mvn	r3, #8
 19821              		.loc 1 7570 5
 19822 0178 830000EA 		b	.L1264
 19823              	.L1271:
 19824              		.loc 1 7570 5 discriminator 17
 19825 017c 0C301BE5 		ldr	r3, [fp, #-12]
 19826 0180 233CA0E1 		lsr	r3, r3, #24
 19827 0184 030053E3 		cmp	r3, #3
 19828 0188 0100000A 		beq	.L1266
 19829              		.loc 1 7570 5 discriminator 18
 19830 018c 0130E0E3 		mvn	r3, #1
 19831              		.loc 1 7570 5
 19832 0190 7D0000EA 		b	.L1264
 19833              	.L1266:
7571:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);    
7572:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7573:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_DEL);
 19834              		.loc 1 7573 5 is_stmt 1
 19835 0194 08301BE5 		ldr	r3, [fp, #-8]
 19836 0198 083093E5 		ldr	r3, [r3, #8]
 19837 019c 023003E2 		and	r3, r3, #2
 19838 01a0 000053E3 		cmp	r3, #0
 19839 01a4 0100001A 		bne	.L1272
 19840              		.loc 1 7573 5 is_stmt 0 discriminator 1
 19841 01a8 0630E0E3 		mvn	r3, #6
 19842              		.loc 1 7573 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 484


 19843 01ac 760000EA 		b	.L1264
 19844              	.L1272:
7574:../../Source/Kernel/rme_kernel.c ****     
7575:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7576:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Inv,struct RME_Cap_Inv*,Inv_Del);
 19845              		.loc 1 7576 5 is_stmt 1
 19846 01b0 08301BE5 		ldr	r3, [fp, #-8]
 19847 01b4 142093E5 		ldr	r2, [r3, #20]
 19848 01b8 20301BE5 		ldr	r3, [fp, #-32]
 19849 01bc 030052E1 		cmp	r2, r3
 19850 01c0 0100008A 		bhi	.L1273
 19851              		.loc 1 7576 5 is_stmt 0 discriminator 1
 19852 01c4 0230E0E3 		mvn	r3, #2
 19853              		.loc 1 7576 5
 19854 01c8 6F0000EA 		b	.L1264
 19855              	.L1273:
 19856              		.loc 1 7576 5 discriminator 2
 19857 01cc 20301BE5 		ldr	r3, [fp, #-32]
 19858 01d0 8322A0E1 		lsl	r2, r3, #5
 19859 01d4 08301BE5 		ldr	r3, [fp, #-8]
 19860 01d8 0C3093E5 		ldr	r3, [r3, #12]
 19861 01dc 033082E0 		add	r3, r2, r3
 19862 01e0 10300BE5 		str	r3, [fp, #-16]
7577:../../Source/Kernel/rme_kernel.c ****     /* Delete check */
7578:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DEL_CHECK(Inv_Del,Type_Stat,RME_CAP_TYPE_INV);
 19863              		.loc 1 7578 5 is_stmt 1
 19864 01e4 10301BE5 		ldr	r3, [fp, #-16]
 19865 01e8 0300A0E1 		mov	r0, r3
 19866 01ec FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 19867 01f0 0C000BE5 		str	r0, [fp, #-12]
 19868              		.loc 1 7578 5 is_stmt 0 discriminator 1
 19869 01f4 0C301BE5 		ldr	r3, [fp, #-12]
 19870 01f8 FF3803E2 		and	r3, r3, #16711680
 19871 01fc 020853E3 		cmp	r3, #131072
 19872 0200 0100000A 		beq	.L1274
 19873 0204 0830E0E3 		mvn	r3, #8
 19874              		.loc 1 7578 5
 19875 0208 5F0000EA 		b	.L1264
 19876              	.L1274:
 19877              		.loc 1 7578 5 discriminator 2
 19878 020c 0C301BE5 		ldr	r3, [fp, #-12]
 19879 0210 233CA0E1 		lsr	r3, r3, #24
 19880 0214 070053E3 		cmp	r3, #7
 19881 0218 0100000A 		beq	.L1275
 19882              		.loc 1 7578 5 discriminator 3
 19883 021c 0130E0E3 		mvn	r3, #1
 19884              		.loc 1 7578 5
 19885 0220 590000EA 		b	.L1264
 19886              	.L1275:
 19887              		.loc 1 7578 5 discriminator 4
 19888 0224 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 19889 0228 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 19890 022c 002093E5 		ldr	r2, [r3]
 19891 0230 10301BE5 		ldr	r3, [fp, #-16]
 19892 0234 103093E5 		ldr	r3, [r3, #16]
 19893 0238 0310A0E1 		mov	r1, r3
 19894 023c 0200A0E1 		mov	r0, r2
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 485


 19895 0240 FEFFFFEB 		bl	_RME_Diff
 19896 0244 0030A0E1 		mov	r3, r0
 19897              		.loc 1 7578 5 discriminator 1
 19898 0248 0A0053E3 		cmp	r3, #10
 19899 024c 0100008A 		bhi	.L1276
 19900              		.loc 1 7578 5 discriminator 5
 19901 0250 0730E0E3 		mvn	r3, #7
 19902              		.loc 1 7578 5
 19903 0254 4C0000EA 		b	.L1264
 19904              	.L1276:
 19905              		.loc 1 7578 5 discriminator 6
 19906 0258 10301BE5 		ldr	r3, [fp, #-16]
 19907 025c 043093E5 		ldr	r3, [r3, #4]
 19908 0260 000053E3 		cmp	r3, #0
 19909 0264 0B00000A 		beq	.L1277
 19910              		.loc 1 7578 5 discriminator 7
 19911 0268 0C301BE5 		ldr	r3, [fp, #-12]
 19912 026c 7330FFE6 		uxth	r3, r3
 19913 0270 000053E3 		cmp	r3, #0
 19914 0274 0500001A 		bne	.L1278
 19915              		.loc 1 7578 5 discriminator 9
 19916 0278 10001BE5 		ldr	r0, [fp, #-16]
 19917 027c 0C301BE5 		ldr	r3, [fp, #-12]
 19918 0280 FF38C3E3 		bic	r3, r3, #16711680
 19919 0284 0320A0E1 		mov	r2, r3
 19920 0288 0C101BE5 		ldr	r1, [fp, #-12]
 19921 028c FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19922              	.L1278:
 19923              		.loc 1 7578 5 discriminator 11
 19924 0290 0530E0E3 		mvn	r3, #5
 19925              		.loc 1 7578 5
 19926 0294 3C0000EA 		b	.L1264
 19927              	.L1277:
 19928              		.loc 1 7578 5 discriminator 8
 19929 0298 0C301BE5 		ldr	r3, [fp, #-12]
 19930 029c 7330FFE6 		uxth	r3, r3
 19931 02a0 000053E3 		cmp	r3, #0
 19932 02a4 0800000A 		beq	.L1279
 19933              		.loc 1 7578 5 discriminator 12
 19934 02a8 003000E3 		movw	r3, #:lower16:.LC6
 19935 02ac 003040E3 		movt	r3, #:upper16:.LC6
 19936 02b0 002000E3 		movw	r2, #:lower16:.LC7
 19937 02b4 002040E3 		movt	r2, #:upper16:.LC7
 19938 02b8 9A1D01E3 		movw	r1, #7578
 19939 02bc 000000E3 		movw	r0, #:lower16:.LC8
 19940 02c0 000040E3 		movt	r0, #:upper16:.LC8
 19941 02c4 FEFFFFEB 		bl	RME_Log
 19942              	.L1280:
 19943              		.loc 1 7578 5
 19944 02c8 FEFFFFEA 		b	.L1280
 19945              	.L1279:
7579:../../Source/Kernel/rme_kernel.c ****     
7580:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation */
7581:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Del,struct RME_Inv_Struct*);
 19946              		.loc 1 7581 16 is_stmt 1
 19947 02cc 10301BE5 		ldr	r3, [fp, #-16]
 19948 02d0 0C3093E5 		ldr	r3, [r3, #12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 486


 19949              		.loc 1 7581 15
 19950 02d4 14300BE5 		str	r3, [fp, #-20]
7582:../../Source/Kernel/rme_kernel.c ****     
7583:../../Source/Kernel/rme_kernel.c ****     /* See if the invocation is currently being used. If yes, we cannot delete it */
7584:../../Source/Kernel/rme_kernel.c ****     if(Invocation->Thd_Act!=RME_NULL)
 19951              		.loc 1 7584 18
 19952 02d8 14301BE5 		ldr	r3, [fp, #-20]
 19953 02dc 0C3093E5 		ldr	r3, [r3, #12]
 19954              		.loc 1 7584 7
 19955 02e0 000053E3 		cmp	r3, #0
 19956 02e4 0700000A 		beq	.L1281
7585:../../Source/Kernel/rme_kernel.c ****     {
7586:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7587:../../Source/Kernel/rme_kernel.c **** 
7588:../../Source/Kernel/rme_kernel.c ****         RME_CAP_DEFROST(Inv_Del,Type_Stat);
 19957              		.loc 1 7588 9
 19958 02e8 10001BE5 		ldr	r0, [fp, #-16]
 19959 02ec 0C301BE5 		ldr	r3, [fp, #-12]
 19960 02f0 FF38C3E3 		bic	r3, r3, #16711680
 19961 02f4 0320A0E1 		mov	r2, r3
 19962 02f8 0C101BE5 		ldr	r1, [fp, #-12]
 19963 02fc FEFFFFEB 		bl	_RME_Comp_Swap_Single
7589:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 19964              		.loc 1 7589 16
 19965 0300 4B3FE0E3 		mvn	r3, #300
 19966 0304 200000EA 		b	.L1264
 19967              	.L1281:
7590:../../Source/Kernel/rme_kernel.c ****     }
7591:../../Source/Kernel/rme_kernel.c ****     else
7592:../../Source/Kernel/rme_kernel.c ****     {
7593:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7594:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7595:../../Source/Kernel/rme_kernel.c ****     }
7596:../../Source/Kernel/rme_kernel.c ****     
7597:../../Source/Kernel/rme_kernel.c ****     /* Now we can safely delete the cap */
7598:../../Source/Kernel/rme_kernel.c ****     RME_CAP_DELETE(Inv_Del,Type_Stat);
 19968              		.loc 1 7598 5
 19969 0308 10301BE5 		ldr	r3, [fp, #-16]
 19970 030c 0020A0E3 		mov	r2, #0
 19971 0310 0C101BE5 		ldr	r1, [fp, #-12]
 19972 0314 0300A0E1 		mov	r0, r3
 19973 0318 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 19974 031c 0030A0E1 		mov	r3, r0
 19975              		.loc 1 7598 5 is_stmt 0 discriminator 1
 19976 0320 000053E3 		cmp	r3, #0
 19977 0324 0100001A 		bne	.L1282
 19978 0328 0030E0E3 		mvn	r3, #0
 19979              		.loc 1 7598 5
 19980 032c 160000EA 		b	.L1264
 19981              	.L1282:
7599:../../Source/Kernel/rme_kernel.c ****     
7600:../../Source/Kernel/rme_kernel.c ****     /* Dereference the process */
7601:../../Source/Kernel/rme_kernel.c ****     RME_FETCH_ADD(&(Invocation->Prc->Head.Root_Ref), -1);
 19982              		.loc 1 7601 5 is_stmt 1
 19983 0330 14301BE5 		ldr	r3, [fp, #-20]
 19984 0334 083093E5 		ldr	r3, [r3, #8]
 19985 0338 043083E2 		add	r3, r3, #4
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 487


 19986 033c 0010E0E3 		mvn	r1, #0
 19987 0340 0300A0E1 		mov	r0, r3
 19988 0344 FEFFFFEB 		bl	_RME_Fetch_Add_Single
7602:../../Source/Kernel/rme_kernel.c ****     
7603:../../Source/Kernel/rme_kernel.c ****     /* Try to clear the area - this must be successful */
7604:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(_RME_Kot_Erase((rme_ptr_t)Invocation,RME_INV_SIZE)==0);
 19989              		.loc 1 7604 5
 19990 0348 14301BE5 		ldr	r3, [fp, #-20]
 19991 034c 2410A0E3 		mov	r1, #36
 19992 0350 0300A0E1 		mov	r0, r3
 19993 0354 FEFFFFEB 		bl	_RME_Kot_Erase
 19994 0358 0030A0E1 		mov	r3, r0
 19995              		.loc 1 7604 5 is_stmt 0 discriminator 1
 19996 035c 000053E3 		cmp	r3, #0
 19997 0360 0800000A 		beq	.L1283
 19998 0364 003000E3 		movw	r3, #:lower16:.LC6
 19999 0368 003040E3 		movt	r3, #:upper16:.LC6
 20000 036c 002000E3 		movw	r2, #:lower16:.LC7
 20001 0370 002040E3 		movt	r2, #:upper16:.LC7
 20002 0374 B41D01E3 		movw	r1, #7604
 20003 0378 000000E3 		movw	r0, #:lower16:.LC8
 20004 037c 000040E3 		movt	r0, #:upper16:.LC8
 20005 0380 FEFFFFEB 		bl	RME_Log
 20006              	.L1284:
 20007              		.loc 1 7604 5
 20008 0384 FEFFFFEA 		b	.L1284
 20009              	.L1283:
7605:../../Source/Kernel/rme_kernel.c ****     
7606:../../Source/Kernel/rme_kernel.c ****     return 0;
 20010              		.loc 1 7606 12 is_stmt 1
 20011 0388 0030A0E3 		mov	r3, #0
 20012              	.L1264:
7607:../../Source/Kernel/rme_kernel.c **** }
 20013              		.loc 1 7607 1
 20014 038c 0300A0E1 		mov	r0, r3
 20015 0390 04D04BE2 		sub	sp, fp, #4
 20016              		.cfi_def_cfa 13, 8
 20017              		@ sp needed
 20018 0394 0088BDE8 		pop	{fp, pc}
 20019              		.cfi_endproc
 20020              	.LFE73:
 20022              		.section	.text._RME_Inv_Set,"ax",%progbits
 20023              		.align	2
 20024              		.syntax unified
 20025              		.arm
 20027              	_RME_Inv_Set:
 20028              	.LFB74:
7608:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Del *************************************************/
7609:../../Source/Kernel/rme_kernel.c **** 
7610:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Set ******************************************************
7611:../../Source/Kernel/rme_kernel.c **** Description : Set an invocation stub's entry point and stack. The registers will
7612:../../Source/Kernel/rme_kernel.c ****               be initialized with these contents.
7613:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7614:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The capability to the invocation stub.
7615:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7616:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Entry - The entry of the thread.
7617:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Stack - The stack address to use for execution.
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 488


7618:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc_Ret - If there is an exception in this
7619:../../Source/Kernel/rme_kernel.c ****                                      invocation, return immediately, or wait
7620:../../Source/Kernel/rme_kernel.c ****                                      for fault handling?
7621:../../Source/Kernel/rme_kernel.c ****                                      If 1, we return directly on fault.
7622:../../Source/Kernel/rme_kernel.c **** Output      : None.
7623:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7624:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7625:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Set(struct RME_Cap_Cpt* Cpt,
7626:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7627:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Entry,
7628:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Stack,
7629:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc_Ret)
7630:../../Source/Kernel/rme_kernel.c **** {
 20029              		.loc 1 7630 1
 20030              		.cfi_startproc
 20031              		@ args = 4, pretend = 0, frame = 32
 20032              		@ frame_needed = 1, uses_anonymous_args = 0
 20033 0000 00482DE9 		push	{fp, lr}
 20034              		.cfi_def_cfa_offset 8
 20035              		.cfi_offset 11, -8
 20036              		.cfi_offset 14, -4
 20037 0004 04B08DE2 		add	fp, sp, #4
 20038              		.cfi_def_cfa 11, 4
 20039 0008 20D04DE2 		sub	sp, sp, #32
 20040 000c 18000BE5 		str	r0, [fp, #-24]
 20041 0010 1C100BE5 		str	r1, [fp, #-28]
 20042 0014 20200BE5 		str	r2, [fp, #-32]
 20043 0018 24300BE5 		str	r3, [fp, #-36]
7631:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7632:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Inv_Struct* Invocation;
7633:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7634:../../Source/Kernel/rme_kernel.c ****     
7635:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7636:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 20044              		.loc 1 7636 5
 20045 001c 1C301BE5 		ldr	r3, [fp, #-28]
 20046 0020 803003E2 		and	r3, r3, #128
 20047 0024 000053E3 		cmp	r3, #0
 20048 0028 1C00001A 		bne	.L1286
 20049              		.loc 1 7636 5 is_stmt 0 discriminator 1
 20050 002c 18301BE5 		ldr	r3, [fp, #-24]
 20051 0030 142093E5 		ldr	r2, [r3, #20]
 20052 0034 1C301BE5 		ldr	r3, [fp, #-28]
 20053 0038 030052E1 		cmp	r2, r3
 20054 003c 0100008A 		bhi	.L1287
 20055              		.loc 1 7636 5 discriminator 3
 20056 0040 0230E0E3 		mvn	r3, #2
 20057              		.loc 1 7636 5
 20058 0044 670000EA 		b	.L1288
 20059              	.L1287:
 20060              		.loc 1 7636 5 discriminator 4
 20061 0048 1C301BE5 		ldr	r3, [fp, #-28]
 20062 004c 8322A0E1 		lsl	r2, r3, #5
 20063 0050 18301BE5 		ldr	r3, [fp, #-24]
 20064 0054 0C3093E5 		ldr	r3, [r3, #12]
 20065 0058 033082E0 		add	r3, r2, r3
 20066 005c 08300BE5 		str	r3, [fp, #-8]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 489


 20067 0060 08301BE5 		ldr	r3, [fp, #-8]
 20068 0064 0300A0E1 		mov	r0, r3
 20069 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20070 006c 0C000BE5 		str	r0, [fp, #-12]
 20071              		.loc 1 7636 5 discriminator 1
 20072 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20073 0074 FF3803E2 		and	r3, r3, #16711680
 20074 0078 020853E3 		cmp	r3, #131072
 20075 007c 0100001A 		bne	.L1289
 20076              		.loc 1 7636 5 discriminator 5
 20077 0080 0830E0E3 		mvn	r3, #8
 20078              		.loc 1 7636 5
 20079 0084 570000EA 		b	.L1288
 20080              	.L1289:
 20081              		.loc 1 7636 5 discriminator 6
 20082 0088 0C301BE5 		ldr	r3, [fp, #-12]
 20083 008c 233CA0E1 		lsr	r3, r3, #24
 20084 0090 070053E3 		cmp	r3, #7
 20085 0094 3F00000A 		beq	.L1290
 20086              		.loc 1 7636 5 discriminator 7
 20087 0098 0130E0E3 		mvn	r3, #1
 20088              		.loc 1 7636 5
 20089 009c 510000EA 		b	.L1288
 20090              	.L1286:
 20091              		.loc 1 7636 5 discriminator 2
 20092 00a0 1C301BE5 		ldr	r3, [fp, #-28]
 20093 00a4 2324A0E1 		lsr	r2, r3, #8
 20094 00a8 18301BE5 		ldr	r3, [fp, #-24]
 20095 00ac 143093E5 		ldr	r3, [r3, #20]
 20096 00b0 030052E1 		cmp	r2, r3
 20097 00b4 0100003A 		bcc	.L1291
 20098              		.loc 1 7636 5 discriminator 8
 20099 00b8 0230E0E3 		mvn	r3, #2
 20100              		.loc 1 7636 5
 20101 00bc 490000EA 		b	.L1288
 20102              	.L1291:
 20103              		.loc 1 7636 5 discriminator 9
 20104 00c0 1C301BE5 		ldr	r3, [fp, #-28]
 20105 00c4 2334A0E1 		lsr	r3, r3, #8
 20106 00c8 8322A0E1 		lsl	r2, r3, #5
 20107 00cc 18301BE5 		ldr	r3, [fp, #-24]
 20108 00d0 0C3093E5 		ldr	r3, [r3, #12]
 20109 00d4 033082E0 		add	r3, r2, r3
 20110 00d8 08300BE5 		str	r3, [fp, #-8]
 20111 00dc 08301BE5 		ldr	r3, [fp, #-8]
 20112 00e0 0300A0E1 		mov	r0, r3
 20113 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20114 00e8 0C000BE5 		str	r0, [fp, #-12]
 20115              		.loc 1 7636 5 discriminator 1
 20116 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 20117 00f0 FF3803E2 		and	r3, r3, #16711680
 20118 00f4 020853E3 		cmp	r3, #131072
 20119 00f8 0100001A 		bne	.L1292
 20120              		.loc 1 7636 5 discriminator 10
 20121 00fc 0830E0E3 		mvn	r3, #8
 20122              		.loc 1 7636 5
 20123 0100 380000EA 		b	.L1288
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 490


 20124              	.L1292:
 20125              		.loc 1 7636 5 discriminator 11
 20126 0104 0C301BE5 		ldr	r3, [fp, #-12]
 20127 0108 233CA0E1 		lsr	r3, r3, #24
 20128 010c 030053E3 		cmp	r3, #3
 20129 0110 0100000A 		beq	.L1293
 20130              		.loc 1 7636 5 discriminator 12
 20131 0114 0130E0E3 		mvn	r3, #1
 20132              		.loc 1 7636 5
 20133 0118 320000EA 		b	.L1288
 20134              	.L1293:
 20135              		.loc 1 7636 5 discriminator 13
 20136 011c 1C301BE5 		ldr	r3, [fp, #-28]
 20137 0120 7F2003E2 		and	r2, r3, #127
 20138 0124 08301BE5 		ldr	r3, [fp, #-8]
 20139 0128 143093E5 		ldr	r3, [r3, #20]
 20140 012c 030052E1 		cmp	r2, r3
 20141 0130 0100003A 		bcc	.L1294
 20142              		.loc 1 7636 5 discriminator 14
 20143 0134 0230E0E3 		mvn	r3, #2
 20144              		.loc 1 7636 5
 20145 0138 2A0000EA 		b	.L1288
 20146              	.L1294:
 20147              		.loc 1 7636 5 discriminator 15
 20148 013c 1C301BE5 		ldr	r3, [fp, #-28]
 20149 0140 7F3003E2 		and	r3, r3, #127
 20150 0144 8322A0E1 		lsl	r2, r3, #5
 20151 0148 08301BE5 		ldr	r3, [fp, #-8]
 20152 014c 0C3093E5 		ldr	r3, [r3, #12]
 20153 0150 033082E0 		add	r3, r2, r3
 20154 0154 08300BE5 		str	r3, [fp, #-8]
 20155 0158 08301BE5 		ldr	r3, [fp, #-8]
 20156 015c 0300A0E1 		mov	r0, r3
 20157 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20158 0164 0C000BE5 		str	r0, [fp, #-12]
 20159              		.loc 1 7636 5 discriminator 1
 20160 0168 0C301BE5 		ldr	r3, [fp, #-12]
 20161 016c FF3803E2 		and	r3, r3, #16711680
 20162 0170 020853E3 		cmp	r3, #131072
 20163 0174 0100001A 		bne	.L1295
 20164              		.loc 1 7636 5 discriminator 16
 20165 0178 0830E0E3 		mvn	r3, #8
 20166              		.loc 1 7636 5
 20167 017c 190000EA 		b	.L1288
 20168              	.L1295:
 20169              		.loc 1 7636 5 discriminator 17
 20170 0180 0C301BE5 		ldr	r3, [fp, #-12]
 20171 0184 233CA0E1 		lsr	r3, r3, #24
 20172 0188 070053E3 		cmp	r3, #7
 20173 018c 0100000A 		beq	.L1290
 20174              		.loc 1 7636 5 discriminator 18
 20175 0190 0130E0E3 		mvn	r3, #1
 20176              		.loc 1 7636 5
 20177 0194 130000EA 		b	.L1288
 20178              	.L1290:
7637:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7638:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 491


7639:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_SET);
 20179              		.loc 1 7639 5 is_stmt 1
 20180 0198 08301BE5 		ldr	r3, [fp, #-8]
 20181 019c 083093E5 		ldr	r3, [r3, #8]
 20182 01a0 013003E2 		and	r3, r3, #1
 20183 01a4 000053E3 		cmp	r3, #0
 20184 01a8 0100001A 		bne	.L1296
 20185              		.loc 1 7639 5 is_stmt 0 discriminator 1
 20186 01ac 0630E0E3 		mvn	r3, #6
 20187              		.loc 1 7639 5
 20188 01b0 0C0000EA 		b	.L1288
 20189              	.L1296:
7640:../../Source/Kernel/rme_kernel.c ****     
7641:../../Source/Kernel/rme_kernel.c ****     /* Commit the change - we do not care if the invocation is in use, it is
7642:../../Source/Kernel/rme_kernel.c ****      * the user's responsibility to guarantee the integrity of applications */
7643:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 20190              		.loc 1 7643 16 is_stmt 1
 20191 01b4 08301BE5 		ldr	r3, [fp, #-8]
 20192 01b8 0C3093E5 		ldr	r3, [r3, #12]
 20193              		.loc 1 7643 15
 20194 01bc 10300BE5 		str	r3, [fp, #-16]
7644:../../Source/Kernel/rme_kernel.c ****     Invocation->Entry=Entry;
 20195              		.loc 1 7644 22
 20196 01c0 10301BE5 		ldr	r3, [fp, #-16]
 20197 01c4 20201BE5 		ldr	r2, [fp, #-32]
 20198 01c8 102083E5 		str	r2, [r3, #16]
7645:../../Source/Kernel/rme_kernel.c ****     Invocation->Stack=Stack;
 20199              		.loc 1 7645 22
 20200 01cc 10301BE5 		ldr	r3, [fp, #-16]
 20201 01d0 24201BE5 		ldr	r2, [fp, #-36]
 20202 01d4 142083E5 		str	r2, [r3, #20]
7646:../../Source/Kernel/rme_kernel.c ****     Invocation->Is_Exc_Ret=Is_Exc_Ret;
 20203              		.loc 1 7646 27
 20204 01d8 10301BE5 		ldr	r3, [fp, #-16]
 20205 01dc 04209BE5 		ldr	r2, [fp, #4]
 20206 01e0 182083E5 		str	r2, [r3, #24]
7647:../../Source/Kernel/rme_kernel.c ****     
7648:../../Source/Kernel/rme_kernel.c ****     return 0;
 20207              		.loc 1 7648 12
 20208 01e4 0030A0E3 		mov	r3, #0
 20209              	.L1288:
7649:../../Source/Kernel/rme_kernel.c **** }
 20210              		.loc 1 7649 1
 20211 01e8 0300A0E1 		mov	r0, r3
 20212 01ec 04D04BE2 		sub	sp, fp, #4
 20213              		.cfi_def_cfa 13, 8
 20214              		@ sp needed
 20215 01f0 0088BDE8 		pop	{fp, pc}
 20216              		.cfi_endproc
 20217              	.LFE74:
 20219              		.section	.text._RME_Inv_Act,"ax",%progbits
 20220              		.align	2
 20221              		.syntax unified
 20222              		.arm
 20224              	_RME_Inv_Act:
 20225              	.LFB75:
7650:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Set *************************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 492


7651:../../Source/Kernel/rme_kernel.c **** 
7652:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Act ******************************************************
7653:../../Source/Kernel/rme_kernel.c **** Description : Call the invocation stub. One parameter is guaranteed; however, 
7654:../../Source/Kernel/rme_kernel.c ****               some platforms may provide more than that.
7655:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The capability table.
7656:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7657:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Inv - The invocation stub.
7658:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7659:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param - The parameter for the call.
7660:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7661:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7662:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Act(struct RME_Cap_Cpt* Cpt, 
7663:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7664:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Inv,
7665:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param)
7666:../../Source/Kernel/rme_kernel.c **** {
 20226              		.loc 1 7666 1
 20227              		.cfi_startproc
 20228              		@ args = 0, pretend = 0, frame = 40
 20229              		@ frame_needed = 1, uses_anonymous_args = 0
 20230 0000 00482DE9 		push	{fp, lr}
 20231              		.cfi_def_cfa_offset 8
 20232              		.cfi_offset 11, -8
 20233              		.cfi_offset 14, -4
 20234 0004 04B08DE2 		add	fp, sp, #4
 20235              		.cfi_def_cfa 11, 4
 20236 0008 30D04DE2 		sub	sp, sp, #48
 20237 000c 20000BE5 		str	r0, [fp, #-32]
 20238 0010 24100BE5 		str	r1, [fp, #-36]
 20239 0014 28200BE5 		str	r2, [fp, #-40]
 20240 0018 2C300BE5 		str	r3, [fp, #-44]
7667:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Inv* Inv_Op;
7668:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7669:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Cur;
7670:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thd_Act;
7671:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7672:../../Source/Kernel/rme_kernel.c ****     
7673:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX!=0U)
7674:../../Source/Kernel/rme_kernel.c ****     /* Check if the current invocation stack has reached its limit */
7675:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
7676:../../Source/Kernel/rme_kernel.c ****     if(Thd_Cur->Ctx.Invstk_Depth>=RME_INV_DEPTH_MAX)
7677:../../Source/Kernel/rme_kernel.c ****     {
7678:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7679:../../Source/Kernel/rme_kernel.c **** 
7680:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
7681:../../Source/Kernel/rme_kernel.c ****     }
7682:../../Source/Kernel/rme_kernel.c ****     else
7683:../../Source/Kernel/rme_kernel.c ****     {
7684:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7685:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7686:../../Source/Kernel/rme_kernel.c ****     }
7687:../../Source/Kernel/rme_kernel.c **** #endif
7688:../../Source/Kernel/rme_kernel.c **** 
7689:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7690:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Inv,RME_CAP_TYPE_INV,
 20241              		.loc 1 7690 5
 20242 001c 28301BE5 		ldr	r3, [fp, #-40]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 493


 20243 0020 803003E2 		and	r3, r3, #128
 20244 0024 000053E3 		cmp	r3, #0
 20245 0028 1C00001A 		bne	.L1298
 20246              		.loc 1 7690 5 is_stmt 0 discriminator 1
 20247 002c 20301BE5 		ldr	r3, [fp, #-32]
 20248 0030 142093E5 		ldr	r2, [r3, #20]
 20249 0034 28301BE5 		ldr	r3, [fp, #-40]
 20250 0038 030052E1 		cmp	r2, r3
 20251 003c 0100008A 		bhi	.L1299
 20252              		.loc 1 7690 5 discriminator 3
 20253 0040 0230E0E3 		mvn	r3, #2
 20254              		.loc 1 7690 5
 20255 0044 A60000EA 		b	.L1300
 20256              	.L1299:
 20257              		.loc 1 7690 5 discriminator 4
 20258 0048 28301BE5 		ldr	r3, [fp, #-40]
 20259 004c 8322A0E1 		lsl	r2, r3, #5
 20260 0050 20301BE5 		ldr	r3, [fp, #-32]
 20261 0054 0C3093E5 		ldr	r3, [r3, #12]
 20262 0058 033082E0 		add	r3, r2, r3
 20263 005c 08300BE5 		str	r3, [fp, #-8]
 20264 0060 08301BE5 		ldr	r3, [fp, #-8]
 20265 0064 0300A0E1 		mov	r0, r3
 20266 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20267 006c 0C000BE5 		str	r0, [fp, #-12]
 20268              		.loc 1 7690 5 discriminator 1
 20269 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20270 0074 FF3803E2 		and	r3, r3, #16711680
 20271 0078 020853E3 		cmp	r3, #131072
 20272 007c 0100001A 		bne	.L1301
 20273              		.loc 1 7690 5 discriminator 5
 20274 0080 0830E0E3 		mvn	r3, #8
 20275              		.loc 1 7690 5
 20276 0084 960000EA 		b	.L1300
 20277              	.L1301:
 20278              		.loc 1 7690 5 discriminator 6
 20279 0088 0C301BE5 		ldr	r3, [fp, #-12]
 20280 008c 233CA0E1 		lsr	r3, r3, #24
 20281 0090 070053E3 		cmp	r3, #7
 20282 0094 3F00000A 		beq	.L1302
 20283              		.loc 1 7690 5 discriminator 7
 20284 0098 0130E0E3 		mvn	r3, #1
 20285              		.loc 1 7690 5
 20286 009c 900000EA 		b	.L1300
 20287              	.L1298:
 20288              		.loc 1 7690 5 discriminator 2
 20289 00a0 28301BE5 		ldr	r3, [fp, #-40]
 20290 00a4 2324A0E1 		lsr	r2, r3, #8
 20291 00a8 20301BE5 		ldr	r3, [fp, #-32]
 20292 00ac 143093E5 		ldr	r3, [r3, #20]
 20293 00b0 030052E1 		cmp	r2, r3
 20294 00b4 0100003A 		bcc	.L1303
 20295              		.loc 1 7690 5 discriminator 8
 20296 00b8 0230E0E3 		mvn	r3, #2
 20297              		.loc 1 7690 5
 20298 00bc 880000EA 		b	.L1300
 20299              	.L1303:
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 494


 20300              		.loc 1 7690 5 discriminator 9
 20301 00c0 28301BE5 		ldr	r3, [fp, #-40]
 20302 00c4 2334A0E1 		lsr	r3, r3, #8
 20303 00c8 8322A0E1 		lsl	r2, r3, #5
 20304 00cc 20301BE5 		ldr	r3, [fp, #-32]
 20305 00d0 0C3093E5 		ldr	r3, [r3, #12]
 20306 00d4 033082E0 		add	r3, r2, r3
 20307 00d8 08300BE5 		str	r3, [fp, #-8]
 20308 00dc 08301BE5 		ldr	r3, [fp, #-8]
 20309 00e0 0300A0E1 		mov	r0, r3
 20310 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20311 00e8 0C000BE5 		str	r0, [fp, #-12]
 20312              		.loc 1 7690 5 discriminator 1
 20313 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 20314 00f0 FF3803E2 		and	r3, r3, #16711680
 20315 00f4 020853E3 		cmp	r3, #131072
 20316 00f8 0100001A 		bne	.L1304
 20317              		.loc 1 7690 5 discriminator 10
 20318 00fc 0830E0E3 		mvn	r3, #8
 20319              		.loc 1 7690 5
 20320 0100 770000EA 		b	.L1300
 20321              	.L1304:
 20322              		.loc 1 7690 5 discriminator 11
 20323 0104 0C301BE5 		ldr	r3, [fp, #-12]
 20324 0108 233CA0E1 		lsr	r3, r3, #24
 20325 010c 030053E3 		cmp	r3, #3
 20326 0110 0100000A 		beq	.L1305
 20327              		.loc 1 7690 5 discriminator 12
 20328 0114 0130E0E3 		mvn	r3, #1
 20329              		.loc 1 7690 5
 20330 0118 710000EA 		b	.L1300
 20331              	.L1305:
 20332              		.loc 1 7690 5 discriminator 13
 20333 011c 28301BE5 		ldr	r3, [fp, #-40]
 20334 0120 7F2003E2 		and	r2, r3, #127
 20335 0124 08301BE5 		ldr	r3, [fp, #-8]
 20336 0128 143093E5 		ldr	r3, [r3, #20]
 20337 012c 030052E1 		cmp	r2, r3
 20338 0130 0100003A 		bcc	.L1306
 20339              		.loc 1 7690 5 discriminator 14
 20340 0134 0230E0E3 		mvn	r3, #2
 20341              		.loc 1 7690 5
 20342 0138 690000EA 		b	.L1300
 20343              	.L1306:
 20344              		.loc 1 7690 5 discriminator 15
 20345 013c 28301BE5 		ldr	r3, [fp, #-40]
 20346 0140 7F3003E2 		and	r3, r3, #127
 20347 0144 8322A0E1 		lsl	r2, r3, #5
 20348 0148 08301BE5 		ldr	r3, [fp, #-8]
 20349 014c 0C3093E5 		ldr	r3, [r3, #12]
 20350 0150 033082E0 		add	r3, r2, r3
 20351 0154 08300BE5 		str	r3, [fp, #-8]
 20352 0158 08301BE5 		ldr	r3, [fp, #-8]
 20353 015c 0300A0E1 		mov	r0, r3
 20354 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20355 0164 0C000BE5 		str	r0, [fp, #-12]
 20356              		.loc 1 7690 5 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 495


 20357 0168 0C301BE5 		ldr	r3, [fp, #-12]
 20358 016c FF3803E2 		and	r3, r3, #16711680
 20359 0170 020853E3 		cmp	r3, #131072
 20360 0174 0100001A 		bne	.L1307
 20361              		.loc 1 7690 5 discriminator 16
 20362 0178 0830E0E3 		mvn	r3, #8
 20363              		.loc 1 7690 5
 20364 017c 580000EA 		b	.L1300
 20365              	.L1307:
 20366              		.loc 1 7690 5 discriminator 17
 20367 0180 0C301BE5 		ldr	r3, [fp, #-12]
 20368 0184 233CA0E1 		lsr	r3, r3, #24
 20369 0188 070053E3 		cmp	r3, #7
 20370 018c 0100000A 		beq	.L1302
 20371              		.loc 1 7690 5 discriminator 18
 20372 0190 0130E0E3 		mvn	r3, #1
 20373              		.loc 1 7690 5
 20374 0194 520000EA 		b	.L1300
 20375              	.L1302:
7691:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Inv*,Inv_Op,Type_Stat);
7692:../../Source/Kernel/rme_kernel.c ****     /* Check if the target cap is not frozen and allows such operations */
7693:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Inv_Op,RME_INV_FLAG_ACT);
 20376              		.loc 1 7693 5 is_stmt 1
 20377 0198 08301BE5 		ldr	r3, [fp, #-8]
 20378 019c 083093E5 		ldr	r3, [r3, #8]
 20379 01a0 023003E2 		and	r3, r3, #2
 20380 01a4 000053E3 		cmp	r3, #0
 20381 01a8 0100001A 		bne	.L1308
 20382              		.loc 1 7693 5 is_stmt 0 discriminator 1
 20383 01ac 0630E0E3 		mvn	r3, #6
 20384              		.loc 1 7693 5
 20385 01b0 4B0000EA 		b	.L1300
 20386              	.L1308:
7694:../../Source/Kernel/rme_kernel.c **** 
7695:../../Source/Kernel/rme_kernel.c ****     /* Get the invocation struct */
7696:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_CAP_GETOBJ(Inv_Op,struct RME_Inv_Struct*);
 20387              		.loc 1 7696 16 is_stmt 1
 20388 01b4 08301BE5 		ldr	r3, [fp, #-8]
 20389 01b8 0C3093E5 		ldr	r3, [r3, #12]
 20390              		.loc 1 7696 15
 20391 01bc 10300BE5 		str	r3, [fp, #-16]
7697:../../Source/Kernel/rme_kernel.c ****     /* Check if this invocation port is already active */
7698:../../Source/Kernel/rme_kernel.c ****     Thd_Act=Invocation->Thd_Act;
 20392              		.loc 1 7698 12
 20393 01c0 10301BE5 		ldr	r3, [fp, #-16]
 20394 01c4 0C3093E5 		ldr	r3, [r3, #12]
 20395 01c8 14300BE5 		str	r3, [fp, #-20]
7699:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Thd_Act!=0U))
 20396              		.loc 1 7699 7
 20397 01cc 14301BE5 		ldr	r3, [fp, #-20]
 20398 01d0 000053E3 		cmp	r3, #0
 20399 01d4 0100000A 		beq	.L1309
7700:../../Source/Kernel/rme_kernel.c ****     {
7701:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7702:../../Source/Kernel/rme_kernel.c **** 
7703:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 20400              		.loc 1 7703 16
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 496


 20401 01d8 4B3FE0E3 		mvn	r3, #300
 20402 01dc 400000EA 		b	.L1300
 20403              	.L1309:
7704:../../Source/Kernel/rme_kernel.c ****     }
7705:../../Source/Kernel/rme_kernel.c ****     else
7706:../../Source/Kernel/rme_kernel.c ****     {
7707:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7708:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7709:../../Source/Kernel/rme_kernel.c ****     }
7710:../../Source/Kernel/rme_kernel.c **** 
7711:../../Source/Kernel/rme_kernel.c **** #if(RME_CPT_ENTRY_MAX==0U)
7712:../../Source/Kernel/rme_kernel.c ****     Thd_Cur=RME_CPU_LOCAL()->Thd_Cur;
 20404              		.loc 1 7712 12
 20405 01e0 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 20406 01e4 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 20407 01e8 043093E5 		ldr	r3, [r3, #4]
 20408 01ec 18300BE5 		str	r3, [fp, #-24]
7713:../../Source/Kernel/rme_kernel.c **** #endif
7714:../../Source/Kernel/rme_kernel.c ****     
7715:../../Source/Kernel/rme_kernel.c ****     /* Try to do CAS and activate this port */
7716:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(RME_COMP_SWAP((volatile rme_ptr_t*)&(Invocation->Thd_Act),
 20409              		.loc 1 7716 8
 20410 01f0 10301BE5 		ldr	r3, [fp, #-16]
 20411 01f4 0C3083E2 		add	r3, r3, #12
 20412 01f8 14101BE5 		ldr	r1, [fp, #-20]
 20413 01fc 18201BE5 		ldr	r2, [fp, #-24]
 20414 0200 0300A0E1 		mov	r0, r3
 20415 0204 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20416 0208 0030A0E1 		mov	r3, r0
 20417              		.loc 1 7716 7 discriminator 1
 20418 020c 000053E3 		cmp	r3, #0
 20419 0210 0100001A 		bne	.L1310
7717:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Act,
7718:../../Source/Kernel/rme_kernel.c ****                                   (rme_ptr_t)Thd_Cur)==RME_CASFAIL))
7719:../../Source/Kernel/rme_kernel.c ****     {
7720:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7721:../../Source/Kernel/rme_kernel.c **** 
7722:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_ACT;
 20420              		.loc 1 7722 16
 20421 0214 4B3FE0E3 		mvn	r3, #300
 20422 0218 310000EA 		b	.L1300
 20423              	.L1310:
7723:../../Source/Kernel/rme_kernel.c ****     }
7724:../../Source/Kernel/rme_kernel.c ****     else
7725:../../Source/Kernel/rme_kernel.c ****     {
7726:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7727:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7728:../../Source/Kernel/rme_kernel.c ****     }
7729:../../Source/Kernel/rme_kernel.c **** 
7730:../../Source/Kernel/rme_kernel.c ****     /* Save whatever is needed to return to the point - normally only SP and IP needed
7731:../../Source/Kernel/rme_kernel.c ****      * because all other registers, including the coprocessor registers, are saved at
7732:../../Source/Kernel/rme_kernel.c ****      * user-level. We do not set the return value because it will be set by Inv_Ret.
7733:../../Source/Kernel/rme_kernel.c ****      * The coprocessor state will be consistent across the call */
7734:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Save(&(Invocation->Ret),Reg);
 20424              		.loc 1 7734 5
 20425 021c 10301BE5 		ldr	r3, [fp, #-16]
 20426 0220 1C3083E2 		add	r3, r3, #28
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 497


 20427 0224 24101BE5 		ldr	r1, [fp, #-36]
 20428 0228 0300A0E1 		mov	r0, r3
 20429 022c FEFFFFEB 		bl	__RME_Inv_Reg_Save
7735:../../Source/Kernel/rme_kernel.c ****     /* Push this into the stack: insert after the thread list header */
7736:../../Source/Kernel/rme_kernel.c ****     _RME_List_Ins(&(Invocation->Head),
 20430              		.loc 1 7736 5
 20431 0230 10001BE5 		ldr	r0, [fp, #-16]
 20432 0234 18301BE5 		ldr	r3, [fp, #-24]
 20433 0238 4C1083E2 		add	r1, r3, #76
 20434 023c 18301BE5 		ldr	r3, [fp, #-24]
 20435 0240 4C3093E5 		ldr	r3, [r3, #76]
 20436 0244 0320A0E1 		mov	r2, r3
 20437 0248 FEFFFFEB 		bl	_RME_List_Ins
7737:../../Source/Kernel/rme_kernel.c ****                   &(Thd_Cur->Ctx.Invstk),
7738:../../Source/Kernel/rme_kernel.c ****                   Thd_Cur->Ctx.Invstk.Next);
7739:../../Source/Kernel/rme_kernel.c ****     /* Increase invocation depth - no atomic operation needed */
7740:../../Source/Kernel/rme_kernel.c ****     Thd_Cur->Ctx.Invstk_Depth++;
 20438              		.loc 1 7740 17
 20439 024c 18301BE5 		ldr	r3, [fp, #-24]
 20440 0250 543093E5 		ldr	r3, [r3, #84]
 20441              		.loc 1 7740 30
 20442 0254 012083E2 		add	r2, r3, #1
 20443 0258 18301BE5 		ldr	r3, [fp, #-24]
 20444 025c 542083E5 		str	r2, [r3, #84]
7741:../../Source/Kernel/rme_kernel.c ****     /* Setup the register contents, and do the invocation */
7742:../../Source/Kernel/rme_kernel.c ****     __RME_Thd_Reg_Init(RME_THD_ATTR(Thd_Cur->Ctx.Hyp_Attr),
 20445              		.loc 1 7742 24
 20446 0260 18301BE5 		ldr	r3, [fp, #-24]
 20447 0264 443093E5 		ldr	r3, [r3, #68]
 20448              		.loc 1 7742 5
 20449 0268 0201C3E3 		bic	r0, r3, #-2147483648
 20450 026c 10301BE5 		ldr	r3, [fp, #-16]
 20451 0270 101093E5 		ldr	r1, [r3, #16]
 20452 0274 10301BE5 		ldr	r3, [fp, #-16]
 20453 0278 142093E5 		ldr	r2, [r3, #20]
 20454 027c 24301BE5 		ldr	r3, [fp, #-36]
 20455 0280 00308DE5 		str	r3, [sp]
 20456 0284 2C301BE5 		ldr	r3, [fp, #-44]
 20457 0288 FEFFFFEB 		bl	__RME_Thd_Reg_Init
7743:../../Source/Kernel/rme_kernel.c ****                        Invocation->Entry,
7744:../../Source/Kernel/rme_kernel.c ****                        Invocation->Stack,
7745:../../Source/Kernel/rme_kernel.c ****                        Param,Reg);
7746:../../Source/Kernel/rme_kernel.c ****     
7747:../../Source/Kernel/rme_kernel.c ****     
7748:../../Source/Kernel/rme_kernel.c ****     /* We are assuming that we are always invoking into a new process (why use synchronous
7749:../../Source/Kernel/rme_kernel.c ****      * invocation if you don't do so?). So we always switch page tables regardless. */
7750:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7751:../../Source/Kernel/rme_kernel.c ****     RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20458              		.loc 1 7751 5
 20459 028c 10301BE5 		ldr	r3, [fp, #-16]
 20460 0290 083093E5 		ldr	r3, [r3, #8]
 20461 0294 183093E5 		ldr	r3, [r3, #24]
 20462 0298 003093E5 		ldr	r3, [r3]
 20463 029c 7330FFE6 		uxth	r3, r3
 20464 02a0 000053E3 		cmp	r3, #0
 20465 02a4 0800000A 		beq	.L1311
 20466              		.loc 1 7751 5 is_stmt 0 discriminator 1
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 498


 20467 02a8 003000E3 		movw	r3, #:lower16:.LC6
 20468 02ac 003040E3 		movt	r3, #:upper16:.LC6
 20469 02b0 002000E3 		movw	r2, #:lower16:.LC7
 20470 02b4 002040E3 		movt	r2, #:upper16:.LC7
 20471 02b8 471E01E3 		movw	r1, #7751
 20472 02bc 000000E3 		movw	r0, #:lower16:.LC8
 20473 02c0 000040E3 		movt	r0, #:upper16:.LC8
 20474 02c4 FEFFFFEB 		bl	RME_Log
 20475              	.L1312:
 20476              		.loc 1 7751 5
 20477 02c8 FEFFFFEA 		b	.L1312
 20478              	.L1311:
7752:../../Source/Kernel/rme_kernel.c **** #endif
7753:../../Source/Kernel/rme_kernel.c ****     __RME_Pgt_Set(Invocation->Prc->Pgt);
 20479              		.loc 1 7753 29 is_stmt 1
 20480 02cc 10301BE5 		ldr	r3, [fp, #-16]
 20481 02d0 083093E5 		ldr	r3, [r3, #8]
 20482              		.loc 1 7753 5
 20483 02d4 183093E5 		ldr	r3, [r3, #24]
 20484 02d8 0300A0E1 		mov	r0, r3
 20485 02dc FEFFFFEB 		bl	__RME_Pgt_Set
7754:../../Source/Kernel/rme_kernel.c ****     
7755:../../Source/Kernel/rme_kernel.c ****     return 0;
 20486              		.loc 1 7755 12
 20487 02e0 0030A0E3 		mov	r3, #0
 20488              	.L1300:
7756:../../Source/Kernel/rme_kernel.c **** }
 20489              		.loc 1 7756 1
 20490 02e4 0300A0E1 		mov	r0, r3
 20491 02e8 04D04BE2 		sub	sp, fp, #4
 20492              		.cfi_def_cfa 13, 8
 20493              		@ sp needed
 20494 02ec 0088BDE8 		pop	{fp, pc}
 20495              		.cfi_endproc
 20496              	.LFE75:
 20498              		.section	.text._RME_Inv_Ret,"ax",%progbits
 20499              		.align	2
 20500              		.syntax unified
 20501              		.arm
 20503              	_RME_Inv_Ret:
 20504              	.LFB76:
7757:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Act *************************************************/
7758:../../Source/Kernel/rme_kernel.c **** 
7759:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Inv_Ret ******************************************************
7760:../../Source/Kernel/rme_kernel.c **** Description : Return from the invocation function, and set the return value to
7761:../../Source/Kernel/rme_kernel.c ****               the old register set. This function does not need a capability
7762:../../Source/Kernel/rme_kernel.c ****               table to work.
7763:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Reg_Struct* Reg - The register set.
7764:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Retval - The return value of this synchronous invocation.
7765:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Is_Exc - Are we attempting a return from exception?
7766:../../Source/Kernel/rme_kernel.c **** Output      : None.
7767:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or an error code.
7768:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7769:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Inv_Ret(struct RME_Reg_Struct* Reg,
7770:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Retval,
7771:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Is_Exc)
7772:../../Source/Kernel/rme_kernel.c **** {
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 499


 20505              		.loc 1 7772 1
 20506              		.cfi_startproc
 20507              		@ args = 0, pretend = 0, frame = 24
 20508              		@ frame_needed = 1, uses_anonymous_args = 0
 20509 0000 00482DE9 		push	{fp, lr}
 20510              		.cfi_def_cfa_offset 8
 20511              		.cfi_offset 11, -8
 20512              		.cfi_offset 14, -4
 20513 0004 04B08DE2 		add	fp, sp, #4
 20514              		.cfi_def_cfa 11, 4
 20515 0008 18D04DE2 		sub	sp, sp, #24
 20516 000c 10000BE5 		str	r0, [fp, #-16]
 20517 0010 14100BE5 		str	r1, [fp, #-20]
 20518 0014 18200BE5 		str	r2, [fp, #-24]
7773:../../Source/Kernel/rme_kernel.c ****     struct RME_Thd_Struct* Thread;
7774:../../Source/Kernel/rme_kernel.c ****     struct RME_Inv_Struct* Invocation;
7775:../../Source/Kernel/rme_kernel.c **** 
7776:../../Source/Kernel/rme_kernel.c ****     /* See if we can return; If we can, get the structure */
7777:../../Source/Kernel/rme_kernel.c ****     Thread=RME_CPU_LOCAL()->Thd_Cur;
 20519              		.loc 1 7777 11
 20520 0018 003000E3 		movw	r3, #:lower16:RME_A7A_Local
 20521 001c 003040E3 		movt	r3, #:upper16:RME_A7A_Local
 20522 0020 043093E5 		ldr	r3, [r3, #4]
 20523 0024 08300BE5 		str	r3, [fp, #-8]
7778:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20524              		.loc 1 7778 16
 20525 0028 08301BE5 		ldr	r3, [fp, #-8]
 20526 002c 4C2093E5 		ldr	r2, [r3, #76]
 20527 0030 08301BE5 		ldr	r3, [fp, #-8]
 20528 0034 4C3083E2 		add	r3, r3, #76
 20529 0038 030052E1 		cmp	r2, r3
 20530 003c 0200000A 		beq	.L1314
 20531              		.loc 1 7778 16 is_stmt 0 discriminator 1
 20532 0040 08301BE5 		ldr	r3, [fp, #-8]
 20533 0044 4C3093E5 		ldr	r3, [r3, #76]
 20534 0048 000000EA 		b	.L1315
 20535              	.L1314:
 20536              		.loc 1 7778 16 discriminator 2
 20537 004c 0030A0E3 		mov	r3, #0
 20538              	.L1315:
 20539              		.loc 1 7778 15 is_stmt 1 discriminator 4
 20540 0050 0C300BE5 		str	r3, [fp, #-12]
7779:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Invocation==RME_NULL))
 20541              		.loc 1 7779 7
 20542 0054 0C301BE5 		ldr	r3, [fp, #-12]
 20543 0058 000053E3 		cmp	r3, #0
 20544 005c 0200001A 		bne	.L1316
7780:../../Source/Kernel/rme_kernel.c ****     {
7781:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7782:../../Source/Kernel/rme_kernel.c **** 
7783:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_EMPTY;
 20545              		.loc 1 7783 16
 20546 0060 D03E0FE3 		movw	r3, #65232
 20547 0064 FF3F4FE3 		movt	r3, 65535
 20548 0068 680000EA 		b	.L1317
 20549              	.L1316:
7784:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 500


7785:../../Source/Kernel/rme_kernel.c ****     else
7786:../../Source/Kernel/rme_kernel.c ****     {
7787:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7788:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7789:../../Source/Kernel/rme_kernel.c ****     }
7790:../../Source/Kernel/rme_kernel.c **** 
7791:../../Source/Kernel/rme_kernel.c ****     /* See if this port allows return-on-fault */
7792:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY((Is_Exc!=0U)&&(Invocation->Is_Exc_Ret==0U)))
 20550              		.loc 1 7792 7
 20551 006c 18301BE5 		ldr	r3, [fp, #-24]
 20552 0070 000053E3 		cmp	r3, #0
 20553 0074 0600000A 		beq	.L1318
 20554              		.loc 1 7792 8 discriminator 1
 20555 0078 0C301BE5 		ldr	r3, [fp, #-12]
 20556 007c 183093E5 		ldr	r3, [r3, #24]
 20557 0080 000053E3 		cmp	r3, #0
 20558 0084 0200001A 		bne	.L1318
7793:../../Source/Kernel/rme_kernel.c ****     {
7794:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7795:../../Source/Kernel/rme_kernel.c **** 
7796:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_SIV_FAULT;
 20559              		.loc 1 7796 16
 20560 0088 D23E0FE3 		movw	r3, #65234
 20561 008c FF3F4FE3 		movt	r3, 65535
 20562 0090 5E0000EA 		b	.L1317
 20563              	.L1318:
7797:../../Source/Kernel/rme_kernel.c ****     }
7798:../../Source/Kernel/rme_kernel.c ****     else
7799:../../Source/Kernel/rme_kernel.c ****     {
7800:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7801:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7802:../../Source/Kernel/rme_kernel.c ****     }
7803:../../Source/Kernel/rme_kernel.c **** 
7804:../../Source/Kernel/rme_kernel.c ****     /* Pop it from the stack */
7805:../../Source/Kernel/rme_kernel.c ****     _RME_List_Del(Invocation->Head.Prev,Invocation->Head.Next);
 20564              		.loc 1 7805 5
 20565 0094 0C301BE5 		ldr	r3, [fp, #-12]
 20566 0098 042093E5 		ldr	r2, [r3, #4]
 20567 009c 0C301BE5 		ldr	r3, [fp, #-12]
 20568 00a0 003093E5 		ldr	r3, [r3]
 20569 00a4 0310A0E1 		mov	r1, r3
 20570 00a8 0200A0E1 		mov	r0, r2
 20571 00ac FEFFFFEB 		bl	_RME_List_Del
7806:../../Source/Kernel/rme_kernel.c ****     /* Decrease invocation depth - no atomic operation needed */
7807:../../Source/Kernel/rme_kernel.c ****     Thread->Ctx.Invstk_Depth--;
 20572              		.loc 1 7807 16
 20573 00b0 08301BE5 		ldr	r3, [fp, #-8]
 20574 00b4 543093E5 		ldr	r3, [r3, #84]
 20575              		.loc 1 7807 29
 20576 00b8 012043E2 		sub	r2, r3, #1
 20577 00bc 08301BE5 		ldr	r3, [fp, #-8]
 20578 00c0 542083E5 		str	r2, [r3, #84]
7808:../../Source/Kernel/rme_kernel.c **** 
7809:../../Source/Kernel/rme_kernel.c ****     /* Restore the register contents, and set return value. We need to set
7810:../../Source/Kernel/rme_kernel.c ****      * the return value of the invocation system call itself as well. */
7811:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Reg_Restore(Reg,&(Invocation->Ret));
 20579              		.loc 1 7811 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 501


 20580 00c4 0C301BE5 		ldr	r3, [fp, #-12]
 20581 00c8 1C3083E2 		add	r3, r3, #28
 20582 00cc 0310A0E1 		mov	r1, r3
 20583 00d0 10001BE5 		ldr	r0, [fp, #-16]
 20584 00d4 FEFFFFEB 		bl	__RME_Inv_Reg_Restore
7812:../../Source/Kernel/rme_kernel.c ****     __RME_Inv_Retval_Set(Reg,(rme_ret_t)Retval);
 20585              		.loc 1 7812 5
 20586 00d8 14301BE5 		ldr	r3, [fp, #-20]
 20587 00dc 0310A0E1 		mov	r1, r3
 20588 00e0 10001BE5 		ldr	r0, [fp, #-16]
 20589 00e4 FEFFFFEB 		bl	__RME_Inv_Retval_Set
7813:../../Source/Kernel/rme_kernel.c **** 
7814:../../Source/Kernel/rme_kernel.c ****     /* We have successfully returned, set the invocation as inactive. We need
7815:../../Source/Kernel/rme_kernel.c ****      * a barrier here to avoid potential destruction of the return value. */
7816:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE((volatile rme_ptr_t*)&(Invocation->Thd_Act),0U);
 20590              		.loc 1 7816 5
 20591 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20592 00ec 0C3083E2 		add	r3, r3, #12
 20593 00f0 0010A0E3 		mov	r1, #0
 20594 00f4 0300A0E1 		mov	r0, r3
 20595 00f8 FEFFFFEB 		bl	__RME_A7A_Write_Release
7817:../../Source/Kernel/rme_kernel.c **** 
7818:../../Source/Kernel/rme_kernel.c ****     /* Decide the system call's return value */
7819:../../Source/Kernel/rme_kernel.c ****     if(RME_UNLIKELY(Is_Exc!=0U))
 20596              		.loc 1 7819 7
 20597 00fc 18301BE5 		ldr	r3, [fp, #-24]
 20598 0100 000053E3 		cmp	r3, #0
 20599 0104 0400000A 		beq	.L1319
7820:../../Source/Kernel/rme_kernel.c ****     {
7821:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7822:../../Source/Kernel/rme_kernel.c **** 
7823:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg, RME_ERR_SIV_FAULT);
 20600              		.loc 1 7823 9
 20601 0108 D21E0FE3 		movw	r1, #65234
 20602 010c FF1F4FE3 		movt	r1, 65535
 20603 0110 10001BE5 		ldr	r0, [fp, #-16]
 20604 0114 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20605 0118 020000EA 		b	.L1320
 20606              	.L1319:
7824:../../Source/Kernel/rme_kernel.c ****     }
7825:../../Source/Kernel/rme_kernel.c ****     else
7826:../../Source/Kernel/rme_kernel.c ****     {
7827:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7828:../../Source/Kernel/rme_kernel.c **** 
7829:../../Source/Kernel/rme_kernel.c ****         __RME_Svc_Retval_Set(Reg,0);
 20607              		.loc 1 7829 9
 20608 011c 0010A0E3 		mov	r1, #0
 20609 0120 10001BE5 		ldr	r0, [fp, #-16]
 20610 0124 FEFFFFEB 		bl	__RME_Svc_Retval_Set
 20611              	.L1320:
7830:../../Source/Kernel/rme_kernel.c ****     }
7831:../../Source/Kernel/rme_kernel.c **** 
7832:../../Source/Kernel/rme_kernel.c ****     /* Same assumptions as in invocation activation */
7833:../../Source/Kernel/rme_kernel.c ****     Invocation=RME_INVSTK_TOP(Thread);
 20612              		.loc 1 7833 16
 20613 0128 08301BE5 		ldr	r3, [fp, #-8]
 20614 012c 4C2093E5 		ldr	r2, [r3, #76]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 502


 20615 0130 08301BE5 		ldr	r3, [fp, #-8]
 20616 0134 4C3083E2 		add	r3, r3, #76
 20617 0138 030052E1 		cmp	r2, r3
 20618 013c 0200000A 		beq	.L1321
 20619              		.loc 1 7833 16 is_stmt 0 discriminator 1
 20620 0140 08301BE5 		ldr	r3, [fp, #-8]
 20621 0144 4C3093E5 		ldr	r3, [r3, #76]
 20622 0148 000000EA 		b	.L1322
 20623              	.L1321:
 20624              		.loc 1 7833 16 discriminator 2
 20625 014c 0030A0E3 		mov	r3, #0
 20626              	.L1322:
 20627              		.loc 1 7833 15 is_stmt 1 discriminator 4
 20628 0150 0C300BE5 		str	r3, [fp, #-12]
7834:../../Source/Kernel/rme_kernel.c ****     if(Invocation!=RME_NULL)
 20629              		.loc 1 7834 7
 20630 0154 0C301BE5 		ldr	r3, [fp, #-12]
 20631 0158 000053E3 		cmp	r3, #0
 20632 015c 1500000A 		beq	.L1323
7835:../../Source/Kernel/rme_kernel.c ****     {
7836:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7837:../../Source/Kernel/rme_kernel.c ****         
7838:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7839:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Invocation->Prc->Pgt)!=0U);
 20633              		.loc 1 7839 9
 20634 0160 0C301BE5 		ldr	r3, [fp, #-12]
 20635 0164 083093E5 		ldr	r3, [r3, #8]
 20636 0168 183093E5 		ldr	r3, [r3, #24]
 20637 016c 003093E5 		ldr	r3, [r3]
 20638 0170 7330FFE6 		uxth	r3, r3
 20639 0174 000053E3 		cmp	r3, #0
 20640 0178 0800000A 		beq	.L1324
 20641              		.loc 1 7839 9 is_stmt 0 discriminator 1
 20642 017c 003000E3 		movw	r3, #:lower16:.LC6
 20643 0180 003040E3 		movt	r3, #:upper16:.LC6
 20644 0184 002000E3 		movw	r2, #:lower16:.LC7
 20645 0188 002040E3 		movt	r2, #:upper16:.LC7
 20646 018c 9F1E01E3 		movw	r1, #7839
 20647 0190 000000E3 		movw	r0, #:lower16:.LC8
 20648 0194 000040E3 		movt	r0, #:upper16:.LC8
 20649 0198 FEFFFFEB 		bl	RME_Log
 20650              	.L1325:
 20651              		.loc 1 7839 9
 20652 019c FEFFFFEA 		b	.L1325
 20653              	.L1324:
7840:../../Source/Kernel/rme_kernel.c **** #endif
7841:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Invocation->Prc->Pgt);
 20654              		.loc 1 7841 33 is_stmt 1
 20655 01a0 0C301BE5 		ldr	r3, [fp, #-12]
 20656 01a4 083093E5 		ldr	r3, [r3, #8]
 20657              		.loc 1 7841 9
 20658 01a8 183093E5 		ldr	r3, [r3, #24]
 20659 01ac 0300A0E1 		mov	r0, r3
 20660 01b0 FEFFFFEB 		bl	__RME_Pgt_Set
 20661 01b4 140000EA 		b	.L1326
 20662              	.L1323:
7842:../../Source/Kernel/rme_kernel.c ****     }
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 503


7843:../../Source/Kernel/rme_kernel.c ****     else
7844:../../Source/Kernel/rme_kernel.c ****     {
7845:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7846:../../Source/Kernel/rme_kernel.c ****         
7847:../../Source/Kernel/rme_kernel.c **** #if(RME_PGT_RAW_ENABLE==0U)
7848:../../Source/Kernel/rme_kernel.c ****         RME_ASSERT(RME_CAP_IS_ROOT(Thread->Sched.Prc->Pgt)!=0U);
 20663              		.loc 1 7848 9
 20664 01b8 08301BE5 		ldr	r3, [fp, #-8]
 20665 01bc 2C3093E5 		ldr	r3, [r3, #44]
 20666 01c0 183093E5 		ldr	r3, [r3, #24]
 20667 01c4 003093E5 		ldr	r3, [r3]
 20668 01c8 7330FFE6 		uxth	r3, r3
 20669 01cc 000053E3 		cmp	r3, #0
 20670 01d0 0800000A 		beq	.L1327
 20671              		.loc 1 7848 9 is_stmt 0 discriminator 1
 20672 01d4 003000E3 		movw	r3, #:lower16:.LC6
 20673 01d8 003040E3 		movt	r3, #:upper16:.LC6
 20674 01dc 002000E3 		movw	r2, #:lower16:.LC7
 20675 01e0 002040E3 		movt	r2, #:upper16:.LC7
 20676 01e4 A81E01E3 		movw	r1, #7848
 20677 01e8 000000E3 		movw	r0, #:lower16:.LC8
 20678 01ec 000040E3 		movt	r0, #:upper16:.LC8
 20679 01f0 FEFFFFEB 		bl	RME_Log
 20680              	.L1328:
 20681              		.loc 1 7848 9
 20682 01f4 FEFFFFEA 		b	.L1328
 20683              	.L1327:
7849:../../Source/Kernel/rme_kernel.c **** #endif
7850:../../Source/Kernel/rme_kernel.c ****         __RME_Pgt_Set(Thread->Sched.Prc->Pgt);
 20684              		.loc 1 7850 36 is_stmt 1
 20685 01f8 08301BE5 		ldr	r3, [fp, #-8]
 20686 01fc 2C3093E5 		ldr	r3, [r3, #44]
 20687              		.loc 1 7850 9
 20688 0200 183093E5 		ldr	r3, [r3, #24]
 20689 0204 0300A0E1 		mov	r0, r3
 20690 0208 FEFFFFEB 		bl	__RME_Pgt_Set
 20691              	.L1326:
7851:../../Source/Kernel/rme_kernel.c ****     }
7852:../../Source/Kernel/rme_kernel.c ****     
7853:../../Source/Kernel/rme_kernel.c ****     return 0;
 20692              		.loc 1 7853 12
 20693 020c 0030A0E3 		mov	r3, #0
 20694              	.L1317:
7854:../../Source/Kernel/rme_kernel.c **** }
 20695              		.loc 1 7854 1
 20696 0210 0300A0E1 		mov	r0, r3
 20697 0214 04D04BE2 		sub	sp, fp, #4
 20698              		.cfi_def_cfa 13, 8
 20699              		@ sp needed
 20700 0218 0088BDE8 		pop	{fp, pc}
 20701              		.cfi_endproc
 20702              	.LFE76:
 20704              		.section	.text._RME_Kfn_Boot_Crt,"ax",%progbits
 20705              		.align	2
 20706              		.global	_RME_Kfn_Boot_Crt
 20707              		.syntax unified
 20708              		.arm
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 504


 20710              	_RME_Kfn_Boot_Crt:
 20711              	.LFB77:
7855:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Inv_Ret *************************************************/
7856:../../Source/Kernel/rme_kernel.c **** 
7857:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Boot_Crt *************************************************
7858:../../Source/Kernel/rme_kernel.c **** Description : This function is used to create boot-time kernel call capability.
7859:../../Source/Kernel/rme_kernel.c ****               This kind of capability that does not have a kernel object.
7860:../../Source/Kernel/rme_kernel.c ****               Kernel function capabilities allow you to execute user-defined 
7861:../../Source/Kernel/rme_kernel.c ****               functions in kernel mode. These functions must be defined in the
7862:../../Source/Kernel/rme_kernel.c ****               platform extensions.
7863:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7864:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Cpt - The capability to the captbl that may contain
7865:../../Source/Kernel/rme_kernel.c ****                                   the cap to kernel function.
7866:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7867:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel function.
7868:../../Source/Kernel/rme_kernel.c ****                                   1-Level.
7869:../../Source/Kernel/rme_kernel.c **** Output      : None.
7870:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If successful, 0; or error code.
7871:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7872:../../Source/Kernel/rme_kernel.c **** rme_ret_t _RME_Kfn_Boot_Crt(struct RME_Cap_Cpt* Cpt,
7873:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Cpt,
7874:../../Source/Kernel/rme_kernel.c ****                             rme_cid_t Cap_Kfn)
7875:../../Source/Kernel/rme_kernel.c **** {
 20712              		.loc 1 7875 1
 20713              		.cfi_startproc
 20714              		@ args = 0, pretend = 0, frame = 32
 20715              		@ frame_needed = 1, uses_anonymous_args = 0
 20716 0000 00482DE9 		push	{fp, lr}
 20717              		.cfi_def_cfa_offset 8
 20718              		.cfi_offset 11, -8
 20719              		.cfi_offset 14, -4
 20720 0004 04B08DE2 		add	fp, sp, #4
 20721              		.cfi_def_cfa 11, 4
 20722 0008 20D04DE2 		sub	sp, sp, #32
 20723 000c 18000BE5 		str	r0, [fp, #-24]
 20724 0010 1C100BE5 		str	r1, [fp, #-28]
 20725 0014 20200BE5 		str	r2, [fp, #-32]
7876:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Cpt* Cpt_Op;
7877:../../Source/Kernel/rme_kernel.c ****     volatile struct RME_Cap_Kfn* Kfn_Crt;
7878:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7879:../../Source/Kernel/rme_kernel.c ****     
7880:../../Source/Kernel/rme_kernel.c ****     /* Get the cap location that we care about */
7881:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Cpt,RME_CAP_TYPE_CPT,
 20726              		.loc 1 7881 5
 20727 0018 1C301BE5 		ldr	r3, [fp, #-28]
 20728 001c 803003E2 		and	r3, r3, #128
 20729 0020 000053E3 		cmp	r3, #0
 20730 0024 1C00001A 		bne	.L1330
 20731              		.loc 1 7881 5 is_stmt 0 discriminator 1
 20732 0028 18301BE5 		ldr	r3, [fp, #-24]
 20733 002c 142093E5 		ldr	r2, [r3, #20]
 20734 0030 1C301BE5 		ldr	r3, [fp, #-28]
 20735 0034 030052E1 		cmp	r2, r3
 20736 0038 0100008A 		bhi	.L1331
 20737              		.loc 1 7881 5 discriminator 3
 20738 003c 0230E0E3 		mvn	r3, #2
 20739              		.loc 1 7881 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 505


 20740 0040 850000EA 		b	.L1332
 20741              	.L1331:
 20742              		.loc 1 7881 5 discriminator 4
 20743 0044 1C301BE5 		ldr	r3, [fp, #-28]
 20744 0048 8322A0E1 		lsl	r2, r3, #5
 20745 004c 18301BE5 		ldr	r3, [fp, #-24]
 20746 0050 0C3093E5 		ldr	r3, [r3, #12]
 20747 0054 033082E0 		add	r3, r2, r3
 20748 0058 08300BE5 		str	r3, [fp, #-8]
 20749 005c 08301BE5 		ldr	r3, [fp, #-8]
 20750 0060 0300A0E1 		mov	r0, r3
 20751 0064 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20752 0068 0C000BE5 		str	r0, [fp, #-12]
 20753              		.loc 1 7881 5 discriminator 1
 20754 006c 0C301BE5 		ldr	r3, [fp, #-12]
 20755 0070 FF3803E2 		and	r3, r3, #16711680
 20756 0074 020853E3 		cmp	r3, #131072
 20757 0078 0100001A 		bne	.L1333
 20758              		.loc 1 7881 5 discriminator 5
 20759 007c 0830E0E3 		mvn	r3, #8
 20760              		.loc 1 7881 5
 20761 0080 750000EA 		b	.L1332
 20762              	.L1333:
 20763              		.loc 1 7881 5 discriminator 6
 20764 0084 0C301BE5 		ldr	r3, [fp, #-12]
 20765 0088 233CA0E1 		lsr	r3, r3, #24
 20766 008c 030053E3 		cmp	r3, #3
 20767 0090 3F00000A 		beq	.L1334
 20768              		.loc 1 7881 5 discriminator 7
 20769 0094 0130E0E3 		mvn	r3, #1
 20770              		.loc 1 7881 5
 20771 0098 6F0000EA 		b	.L1332
 20772              	.L1330:
 20773              		.loc 1 7881 5 discriminator 2
 20774 009c 1C301BE5 		ldr	r3, [fp, #-28]
 20775 00a0 2324A0E1 		lsr	r2, r3, #8
 20776 00a4 18301BE5 		ldr	r3, [fp, #-24]
 20777 00a8 143093E5 		ldr	r3, [r3, #20]
 20778 00ac 030052E1 		cmp	r2, r3
 20779 00b0 0100003A 		bcc	.L1335
 20780              		.loc 1 7881 5 discriminator 8
 20781 00b4 0230E0E3 		mvn	r3, #2
 20782              		.loc 1 7881 5
 20783 00b8 670000EA 		b	.L1332
 20784              	.L1335:
 20785              		.loc 1 7881 5 discriminator 9
 20786 00bc 1C301BE5 		ldr	r3, [fp, #-28]
 20787 00c0 2334A0E1 		lsr	r3, r3, #8
 20788 00c4 8322A0E1 		lsl	r2, r3, #5
 20789 00c8 18301BE5 		ldr	r3, [fp, #-24]
 20790 00cc 0C3093E5 		ldr	r3, [r3, #12]
 20791 00d0 033082E0 		add	r3, r2, r3
 20792 00d4 08300BE5 		str	r3, [fp, #-8]
 20793 00d8 08301BE5 		ldr	r3, [fp, #-8]
 20794 00dc 0300A0E1 		mov	r0, r3
 20795 00e0 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20796 00e4 0C000BE5 		str	r0, [fp, #-12]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 506


 20797              		.loc 1 7881 5 discriminator 1
 20798 00e8 0C301BE5 		ldr	r3, [fp, #-12]
 20799 00ec FF3803E2 		and	r3, r3, #16711680
 20800 00f0 020853E3 		cmp	r3, #131072
 20801 00f4 0100001A 		bne	.L1336
 20802              		.loc 1 7881 5 discriminator 10
 20803 00f8 0830E0E3 		mvn	r3, #8
 20804              		.loc 1 7881 5
 20805 00fc 560000EA 		b	.L1332
 20806              	.L1336:
 20807              		.loc 1 7881 5 discriminator 11
 20808 0100 0C301BE5 		ldr	r3, [fp, #-12]
 20809 0104 233CA0E1 		lsr	r3, r3, #24
 20810 0108 030053E3 		cmp	r3, #3
 20811 010c 0100000A 		beq	.L1337
 20812              		.loc 1 7881 5 discriminator 12
 20813 0110 0130E0E3 		mvn	r3, #1
 20814              		.loc 1 7881 5
 20815 0114 500000EA 		b	.L1332
 20816              	.L1337:
 20817              		.loc 1 7881 5 discriminator 13
 20818 0118 1C301BE5 		ldr	r3, [fp, #-28]
 20819 011c 7F2003E2 		and	r2, r3, #127
 20820 0120 08301BE5 		ldr	r3, [fp, #-8]
 20821 0124 143093E5 		ldr	r3, [r3, #20]
 20822 0128 030052E1 		cmp	r2, r3
 20823 012c 0100003A 		bcc	.L1338
 20824              		.loc 1 7881 5 discriminator 14
 20825 0130 0230E0E3 		mvn	r3, #2
 20826              		.loc 1 7881 5
 20827 0134 480000EA 		b	.L1332
 20828              	.L1338:
 20829              		.loc 1 7881 5 discriminator 15
 20830 0138 1C301BE5 		ldr	r3, [fp, #-28]
 20831 013c 7F3003E2 		and	r3, r3, #127
 20832 0140 8322A0E1 		lsl	r2, r3, #5
 20833 0144 08301BE5 		ldr	r3, [fp, #-8]
 20834 0148 0C3093E5 		ldr	r3, [r3, #12]
 20835 014c 033082E0 		add	r3, r2, r3
 20836 0150 08300BE5 		str	r3, [fp, #-8]
 20837 0154 08301BE5 		ldr	r3, [fp, #-8]
 20838 0158 0300A0E1 		mov	r0, r3
 20839 015c FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20840 0160 0C000BE5 		str	r0, [fp, #-12]
 20841              		.loc 1 7881 5 discriminator 1
 20842 0164 0C301BE5 		ldr	r3, [fp, #-12]
 20843 0168 FF3803E2 		and	r3, r3, #16711680
 20844 016c 020853E3 		cmp	r3, #131072
 20845 0170 0100001A 		bne	.L1339
 20846              		.loc 1 7881 5 discriminator 16
 20847 0174 0830E0E3 		mvn	r3, #8
 20848              		.loc 1 7881 5
 20849 0178 370000EA 		b	.L1332
 20850              	.L1339:
 20851              		.loc 1 7881 5 discriminator 17
 20852 017c 0C301BE5 		ldr	r3, [fp, #-12]
 20853 0180 233CA0E1 		lsr	r3, r3, #24
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 507


 20854 0184 030053E3 		cmp	r3, #3
 20855 0188 0100000A 		beq	.L1334
 20856              		.loc 1 7881 5 discriminator 18
 20857 018c 0130E0E3 		mvn	r3, #1
 20858              		.loc 1 7881 5
 20859 0190 310000EA 		b	.L1332
 20860              	.L1334:
7882:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Cpt*,Cpt_Op,Type_Stat);
7883:../../Source/Kernel/rme_kernel.c ****     /* Check if the target captbl is not frozen and allows such operations */
7884:../../Source/Kernel/rme_kernel.c ****     RME_CAP_CHECK(Cpt_Op,RME_CPT_FLAG_CRT);
 20861              		.loc 1 7884 5 is_stmt 1
 20862 0194 08301BE5 		ldr	r3, [fp, #-8]
 20863 0198 083093E5 		ldr	r3, [r3, #8]
 20864 019c 013003E2 		and	r3, r3, #1
 20865 01a0 000053E3 		cmp	r3, #0
 20866 01a4 0100001A 		bne	.L1340
 20867              		.loc 1 7884 5 is_stmt 0 discriminator 1
 20868 01a8 0630E0E3 		mvn	r3, #6
 20869              		.loc 1 7884 5
 20870 01ac 2A0000EA 		b	.L1332
 20871              	.L1340:
7885:../../Source/Kernel/rme_kernel.c ****     
7886:../../Source/Kernel/rme_kernel.c ****     /* Get the cap slot */
7887:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETSLOT(Cpt_Op,Cap_Kfn,struct RME_Cap_Kfn*,Kfn_Crt);
 20872              		.loc 1 7887 5 is_stmt 1
 20873 01b0 08301BE5 		ldr	r3, [fp, #-8]
 20874 01b4 142093E5 		ldr	r2, [r3, #20]
 20875 01b8 20301BE5 		ldr	r3, [fp, #-32]
 20876 01bc 030052E1 		cmp	r2, r3
 20877 01c0 0100008A 		bhi	.L1341
 20878              		.loc 1 7887 5 is_stmt 0 discriminator 1
 20879 01c4 0230E0E3 		mvn	r3, #2
 20880              		.loc 1 7887 5
 20881 01c8 230000EA 		b	.L1332
 20882              	.L1341:
 20883              		.loc 1 7887 5 discriminator 2
 20884 01cc 20301BE5 		ldr	r3, [fp, #-32]
 20885 01d0 8322A0E1 		lsl	r2, r3, #5
 20886 01d4 08301BE5 		ldr	r3, [fp, #-8]
 20887 01d8 0C3093E5 		ldr	r3, [r3, #12]
 20888 01dc 033082E0 		add	r3, r2, r3
 20889 01e0 10300BE5 		str	r3, [fp, #-16]
7888:../../Source/Kernel/rme_kernel.c ****     /* Take the slot if possible */
7889:../../Source/Kernel/rme_kernel.c ****     RME_CPT_OCCUPY(Kfn_Crt);
 20890              		.loc 1 7889 5 is_stmt 1
 20891 01e4 10301BE5 		ldr	r3, [fp, #-16]
 20892 01e8 0128A0E3 		mov	r2, #65536
 20893 01ec 0010A0E3 		mov	r1, #0
 20894 01f0 0300A0E1 		mov	r0, r3
 20895 01f4 FEFFFFEB 		bl	_RME_Comp_Swap_Single
 20896 01f8 0030A0E1 		mov	r3, r0
 20897              		.loc 1 7889 5 is_stmt 0 discriminator 1
 20898 01fc 000053E3 		cmp	r3, #0
 20899 0200 0100001A 		bne	.L1342
 20900 0204 0430E0E3 		mvn	r3, #4
 20901              		.loc 1 7889 5
 20902 0208 130000EA 		b	.L1332
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 508


 20903              	.L1342:
 20904              		.loc 1 7889 5 discriminator 2
 20905 020c 003000E3 		movw	r3, #:lower16:RME_A7A_Timestamp
 20906 0210 003040E3 		movt	r3, #:upper16:RME_A7A_Timestamp
 20907 0214 002093E5 		ldr	r2, [r3]
 20908 0218 10301BE5 		ldr	r3, [fp, #-16]
 20909 021c 102083E5 		str	r2, [r3, #16]
7890:../../Source/Kernel/rme_kernel.c ****     
7891:../../Source/Kernel/rme_kernel.c ****     /* Header init */
7892:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Root_Ref=1U;
 20910              		.loc 1 7892 27 is_stmt 1
 20911 0220 10301BE5 		ldr	r3, [fp, #-16]
 20912 0224 0120A0E3 		mov	r2, #1
 20913 0228 042083E5 		str	r2, [r3, #4]
7893:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Object=0U;
 20914              		.loc 1 7893 25
 20915 022c 10301BE5 		ldr	r3, [fp, #-16]
 20916 0230 0020A0E3 		mov	r2, #0
 20917 0234 0C2083E5 		str	r2, [r3, #12]
7894:../../Source/Kernel/rme_kernel.c ****     Kfn_Crt->Head.Flag=RME_KFN_FLAG_FULL_RANGE;
 20918              		.loc 1 7894 23
 20919 0238 10201BE5 		ldr	r2, [fp, #-16]
 20920 023c 0030A0E3 		mov	r3, #0
 20921 0240 FF3F4FE3 		movt	r3, 65535
 20922 0244 083082E5 		str	r3, [r2, #8]
7895:../../Source/Kernel/rme_kernel.c ****     
7896:../../Source/Kernel/rme_kernel.c ****     /* Establish cap */
7897:../../Source/Kernel/rme_kernel.c ****     RME_WRITE_RELEASE(&(Kfn_Crt->Head.Type_Stat),
 20923              		.loc 1 7897 5
 20924 0248 10301BE5 		ldr	r3, [fp, #-16]
 20925 024c 0114A0E3 		mov	r1, #16777216
 20926 0250 0300A0E1 		mov	r0, r3
 20927 0254 FEFFFFEB 		bl	__RME_A7A_Write_Release
7898:../../Source/Kernel/rme_kernel.c ****                       RME_CAP_TYPE_STAT(RME_CAP_TYPE_KFN,
7899:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_STAT_VALID,
7900:../../Source/Kernel/rme_kernel.c ****                                         RME_CAP_ATTR_ROOT));
7901:../../Source/Kernel/rme_kernel.c **** 
7902:../../Source/Kernel/rme_kernel.c ****     return 0;
 20928              		.loc 1 7902 12
 20929 0258 0030A0E3 		mov	r3, #0
 20930              	.L1332:
7903:../../Source/Kernel/rme_kernel.c **** }
 20931              		.loc 1 7903 1
 20932 025c 0300A0E1 		mov	r0, r3
 20933 0260 04D04BE2 		sub	sp, fp, #4
 20934              		.cfi_def_cfa 13, 8
 20935              		@ sp needed
 20936 0264 0088BDE8 		pop	{fp, pc}
 20937              		.cfi_endproc
 20938              	.LFE77:
 20940              		.section	.text._RME_Kfn_Act,"ax",%progbits
 20941              		.align	2
 20942              		.syntax unified
 20943              		.arm
 20945              	_RME_Kfn_Act:
 20946              	.LFB78:
7904:../../Source/Kernel/rme_kernel.c **** /* End Function:_RME_Kfn_Boot_Crt ********************************************/
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 509


7905:../../Source/Kernel/rme_kernel.c **** 
7906:../../Source/Kernel/rme_kernel.c **** /* Function:_RME_Kfn_Act ******************************************************
7907:../../Source/Kernel/rme_kernel.c **** Description : Activate a kernel function.
7908:../../Source/Kernel/rme_kernel.c **** Input       : struct RME_Cap_Cpt* Cpt - The master capability table.
7909:../../Source/Kernel/rme_kernel.c ****               struct RME_Reg_Struct* Reg - The register set.
7910:../../Source/Kernel/rme_kernel.c ****               rme_cid_t Cap_Kfn - The capability to the kernel capability.
7911:../../Source/Kernel/rme_kernel.c ****                                   2-Level.
7912:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Func_ID - The function ID to invoke.
7913:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Sub_ID - The subfunction ID to invoke.
7914:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param1 - The first parameter.
7915:../../Source/Kernel/rme_kernel.c ****               rme_ptr_t Param2 - The second parameter.
7916:../../Source/Kernel/rme_kernel.c **** Output      : None.
7917:../../Source/Kernel/rme_kernel.c **** Return      : rme_ret_t - If the call is successful, it will return whatever
7918:../../Source/Kernel/rme_kernel.c ****                           the 
7919:../../Source/Kernel/rme_kernel.c ****                           function returned (It is expected that they shall
7920:../../Source/Kernel/rme_kernel.c ****                           never return an negative value); or an error code.
7921:../../Source/Kernel/rme_kernel.c ****                           If the kernel function ever causes a context switch,
7922:../../Source/Kernel/rme_kernel.c ****                           it is responsible for setting the return value. On 
7923:../../Source/Kernel/rme_kernel.c ****                           failure, no context switch is allowed.
7924:../../Source/Kernel/rme_kernel.c **** ******************************************************************************/
7925:../../Source/Kernel/rme_kernel.c **** static rme_ret_t _RME_Kfn_Act(struct RME_Cap_Cpt* Cpt,
7926:../../Source/Kernel/rme_kernel.c ****                               struct RME_Reg_Struct* Reg,
7927:../../Source/Kernel/rme_kernel.c ****                               rme_cid_t Cap_Kfn,
7928:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Func_ID,
7929:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Sub_ID,
7930:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param1,
7931:../../Source/Kernel/rme_kernel.c ****                               rme_ptr_t Param2)
7932:../../Source/Kernel/rme_kernel.c **** {
 20947              		.loc 1 7932 1
 20948              		.cfi_startproc
 20949              		@ args = 12, pretend = 0, frame = 24
 20950              		@ frame_needed = 1, uses_anonymous_args = 0
 20951 0000 00482DE9 		push	{fp, lr}
 20952              		.cfi_def_cfa_offset 8
 20953              		.cfi_offset 11, -8
 20954              		.cfi_offset 14, -4
 20955 0004 04B08DE2 		add	fp, sp, #4
 20956              		.cfi_def_cfa 11, 4
 20957 0008 20D04DE2 		sub	sp, sp, #32
 20958 000c 10000BE5 		str	r0, [fp, #-16]
 20959 0010 14100BE5 		str	r1, [fp, #-20]
 20960 0014 18200BE5 		str	r2, [fp, #-24]
 20961 0018 1C300BE5 		str	r3, [fp, #-28]
7933:../../Source/Kernel/rme_kernel.c ****     struct RME_Cap_Kfn* Kfn_Op;
7934:../../Source/Kernel/rme_kernel.c ****     rme_ptr_t Type_Stat;
7935:../../Source/Kernel/rme_kernel.c ****     
7936:../../Source/Kernel/rme_kernel.c ****     /* Get the capability slot */
7937:../../Source/Kernel/rme_kernel.c ****     RME_CPT_GETCAP(Cpt,Cap_Kfn,RME_CAP_TYPE_KFN,
 20962              		.loc 1 7937 5
 20963 001c 18301BE5 		ldr	r3, [fp, #-24]
 20964 0020 803003E2 		and	r3, r3, #128
 20965 0024 000053E3 		cmp	r3, #0
 20966 0028 1C00001A 		bne	.L1344
 20967              		.loc 1 7937 5 is_stmt 0 discriminator 1
 20968 002c 10301BE5 		ldr	r3, [fp, #-16]
 20969 0030 142093E5 		ldr	r2, [r3, #20]
 20970 0034 18301BE5 		ldr	r3, [fp, #-24]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 510


 20971 0038 030052E1 		cmp	r2, r3
 20972 003c 0100008A 		bhi	.L1345
 20973              		.loc 1 7937 5 discriminator 3
 20974 0040 0230E0E3 		mvn	r3, #2
 20975              		.loc 1 7937 5
 20976 0044 6B0000EA 		b	.L1346
 20977              	.L1345:
 20978              		.loc 1 7937 5 discriminator 4
 20979 0048 18301BE5 		ldr	r3, [fp, #-24]
 20980 004c 8322A0E1 		lsl	r2, r3, #5
 20981 0050 10301BE5 		ldr	r3, [fp, #-16]
 20982 0054 0C3093E5 		ldr	r3, [r3, #12]
 20983 0058 033082E0 		add	r3, r2, r3
 20984 005c 08300BE5 		str	r3, [fp, #-8]
 20985 0060 08301BE5 		ldr	r3, [fp, #-8]
 20986 0064 0300A0E1 		mov	r0, r3
 20987 0068 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 20988 006c 0C000BE5 		str	r0, [fp, #-12]
 20989              		.loc 1 7937 5 discriminator 1
 20990 0070 0C301BE5 		ldr	r3, [fp, #-12]
 20991 0074 FF3803E2 		and	r3, r3, #16711680
 20992 0078 020853E3 		cmp	r3, #131072
 20993 007c 0100001A 		bne	.L1347
 20994              		.loc 1 7937 5 discriminator 5
 20995 0080 0830E0E3 		mvn	r3, #8
 20996              		.loc 1 7937 5
 20997 0084 5B0000EA 		b	.L1346
 20998              	.L1347:
 20999              		.loc 1 7937 5 discriminator 6
 21000 0088 0C301BE5 		ldr	r3, [fp, #-12]
 21001 008c 233CA0E1 		lsr	r3, r3, #24
 21002 0090 010053E3 		cmp	r3, #1
 21003 0094 3F00000A 		beq	.L1348
 21004              		.loc 1 7937 5 discriminator 7
 21005 0098 0130E0E3 		mvn	r3, #1
 21006              		.loc 1 7937 5
 21007 009c 550000EA 		b	.L1346
 21008              	.L1344:
 21009              		.loc 1 7937 5 discriminator 2
 21010 00a0 18301BE5 		ldr	r3, [fp, #-24]
 21011 00a4 2324A0E1 		lsr	r2, r3, #8
 21012 00a8 10301BE5 		ldr	r3, [fp, #-16]
 21013 00ac 143093E5 		ldr	r3, [r3, #20]
 21014 00b0 030052E1 		cmp	r2, r3
 21015 00b4 0100003A 		bcc	.L1349
 21016              		.loc 1 7937 5 discriminator 8
 21017 00b8 0230E0E3 		mvn	r3, #2
 21018              		.loc 1 7937 5
 21019 00bc 4D0000EA 		b	.L1346
 21020              	.L1349:
 21021              		.loc 1 7937 5 discriminator 9
 21022 00c0 18301BE5 		ldr	r3, [fp, #-24]
 21023 00c4 2334A0E1 		lsr	r3, r3, #8
 21024 00c8 8322A0E1 		lsl	r2, r3, #5
 21025 00cc 10301BE5 		ldr	r3, [fp, #-16]
 21026 00d0 0C3093E5 		ldr	r3, [r3, #12]
 21027 00d4 033082E0 		add	r3, r2, r3
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 511


 21028 00d8 08300BE5 		str	r3, [fp, #-8]
 21029 00dc 08301BE5 		ldr	r3, [fp, #-8]
 21030 00e0 0300A0E1 		mov	r0, r3
 21031 00e4 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 21032 00e8 0C000BE5 		str	r0, [fp, #-12]
 21033              		.loc 1 7937 5 discriminator 1
 21034 00ec 0C301BE5 		ldr	r3, [fp, #-12]
 21035 00f0 FF3803E2 		and	r3, r3, #16711680
 21036 00f4 020853E3 		cmp	r3, #131072
 21037 00f8 0100001A 		bne	.L1350
 21038              		.loc 1 7937 5 discriminator 10
 21039 00fc 0830E0E3 		mvn	r3, #8
 21040              		.loc 1 7937 5
 21041 0100 3C0000EA 		b	.L1346
 21042              	.L1350:
 21043              		.loc 1 7937 5 discriminator 11
 21044 0104 0C301BE5 		ldr	r3, [fp, #-12]
 21045 0108 233CA0E1 		lsr	r3, r3, #24
 21046 010c 030053E3 		cmp	r3, #3
 21047 0110 0100000A 		beq	.L1351
 21048              		.loc 1 7937 5 discriminator 12
 21049 0114 0130E0E3 		mvn	r3, #1
 21050              		.loc 1 7937 5
 21051 0118 360000EA 		b	.L1346
 21052              	.L1351:
 21053              		.loc 1 7937 5 discriminator 13
 21054 011c 18301BE5 		ldr	r3, [fp, #-24]
 21055 0120 7F2003E2 		and	r2, r3, #127
 21056 0124 08301BE5 		ldr	r3, [fp, #-8]
 21057 0128 143093E5 		ldr	r3, [r3, #20]
 21058 012c 030052E1 		cmp	r2, r3
 21059 0130 0100003A 		bcc	.L1352
 21060              		.loc 1 7937 5 discriminator 14
 21061 0134 0230E0E3 		mvn	r3, #2
 21062              		.loc 1 7937 5
 21063 0138 2E0000EA 		b	.L1346
 21064              	.L1352:
 21065              		.loc 1 7937 5 discriminator 15
 21066 013c 18301BE5 		ldr	r3, [fp, #-24]
 21067 0140 7F3003E2 		and	r3, r3, #127
 21068 0144 8322A0E1 		lsl	r2, r3, #5
 21069 0148 08301BE5 		ldr	r3, [fp, #-8]
 21070 014c 0C3093E5 		ldr	r3, [r3, #12]
 21071 0150 033082E0 		add	r3, r2, r3
 21072 0154 08300BE5 		str	r3, [fp, #-8]
 21073 0158 08301BE5 		ldr	r3, [fp, #-8]
 21074 015c 0300A0E1 		mov	r0, r3
 21075 0160 FEFFFFEB 		bl	__RME_A7A_Read_Acquire
 21076 0164 0C000BE5 		str	r0, [fp, #-12]
 21077              		.loc 1 7937 5 discriminator 1
 21078 0168 0C301BE5 		ldr	r3, [fp, #-12]
 21079 016c FF3803E2 		and	r3, r3, #16711680
 21080 0170 020853E3 		cmp	r3, #131072
 21081 0174 0100001A 		bne	.L1353
 21082              		.loc 1 7937 5 discriminator 16
 21083 0178 0830E0E3 		mvn	r3, #8
 21084              		.loc 1 7937 5
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 512


 21085 017c 1D0000EA 		b	.L1346
 21086              	.L1353:
 21087              		.loc 1 7937 5 discriminator 17
 21088 0180 0C301BE5 		ldr	r3, [fp, #-12]
 21089 0184 233CA0E1 		lsr	r3, r3, #24
 21090 0188 010053E3 		cmp	r3, #1
 21091 018c 0100000A 		beq	.L1348
 21092              		.loc 1 7937 5 discriminator 18
 21093 0190 0130E0E3 		mvn	r3, #1
 21094              		.loc 1 7937 5
 21095 0194 170000EA 		b	.L1346
 21096              	.L1348:
7938:../../Source/Kernel/rme_kernel.c ****                    struct RME_Cap_Kfn*,Kfn_Op,Type_Stat);    
7939:../../Source/Kernel/rme_kernel.c **** 
7940:../../Source/Kernel/rme_kernel.c ****     /* Check if the range of calling is allowed - kernel function specific */
7941:../../Source/Kernel/rme_kernel.c ****     if((Func_ID>RME_KFN_FLAG_HIGH(Kfn_Op->Head.Flag))||
 21097              		.loc 1 7941 17 is_stmt 1
 21098 0198 08301BE5 		ldr	r3, [fp, #-8]
 21099 019c 083093E5 		ldr	r3, [r3, #8]
 21100 01a0 2338A0E1 		lsr	r3, r3, #16
 21101              		.loc 1 7941 7
 21102 01a4 1C201BE5 		ldr	r2, [fp, #-28]
 21103 01a8 030052E1 		cmp	r2, r3
 21104 01ac 0500008A 		bhi	.L1354
7942:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 21105              		.loc 1 7942 17
 21106 01b0 08301BE5 		ldr	r3, [fp, #-8]
 21107 01b4 083093E5 		ldr	r3, [r3, #8]
 21108 01b8 7330FFE6 		uxth	r3, r3
7941:../../Source/Kernel/rme_kernel.c ****        (Func_ID<RME_KFN_FLAG_LOW(Kfn_Op->Head.Flag)))
 21109              		.loc 1 7941 54 discriminator 1
 21110 01bc 1C201BE5 		ldr	r2, [fp, #-28]
 21111 01c0 030052E1 		cmp	r2, r3
 21112 01c4 0100002A 		bcs	.L1355
 21113              	.L1354:
7943:../../Source/Kernel/rme_kernel.c ****     {
7944:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7945:../../Source/Kernel/rme_kernel.c **** 
7946:../../Source/Kernel/rme_kernel.c ****         return RME_ERR_CPT_FLAG;
 21114              		.loc 1 7946 16
 21115 01c8 0630E0E3 		mvn	r3, #6
 21116 01cc 090000EA 		b	.L1346
 21117              	.L1355:
7947:../../Source/Kernel/rme_kernel.c ****     }
7948:../../Source/Kernel/rme_kernel.c ****     else
7949:../../Source/Kernel/rme_kernel.c ****     {
7950:../../Source/Kernel/rme_kernel.c ****         RME_COV_MARKER();
7951:../../Source/Kernel/rme_kernel.c ****         /* No action required */
7952:../../Source/Kernel/rme_kernel.c ****     }
7953:../../Source/Kernel/rme_kernel.c **** 
7954:../../Source/Kernel/rme_kernel.c ****     /* Return whatever the function returns */
7955:../../Source/Kernel/rme_kernel.c ****     return __RME_Kfn_Handler(Cpt,Reg,Func_ID,Sub_ID,Param1,Param2);
 21118              		.loc 1 7955 12
 21119 01d0 0C309BE5 		ldr	r3, [fp, #12]
 21120 01d4 04308DE5 		str	r3, [sp, #4]
 21121 01d8 08309BE5 		ldr	r3, [fp, #8]
 21122 01dc 00308DE5 		str	r3, [sp]
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 513


 21123 01e0 04309BE5 		ldr	r3, [fp, #4]
 21124 01e4 1C201BE5 		ldr	r2, [fp, #-28]
 21125 01e8 14101BE5 		ldr	r1, [fp, #-20]
 21126 01ec 10001BE5 		ldr	r0, [fp, #-16]
 21127 01f0 FEFFFFEB 		bl	__RME_Kfn_Handler
 21128 01f4 0030A0E1 		mov	r3, r0
 21129              	.L1346:
7956:../../Source/Kernel/rme_kernel.c **** }
 21130              		.loc 1 7956 1
 21131 01f8 0300A0E1 		mov	r0, r3
 21132 01fc 04D04BE2 		sub	sp, fp, #4
 21133              		.cfi_def_cfa 13, 8
 21134              		@ sp needed
 21135 0200 0088BDE8 		pop	{fp, pc}
 21136              		.cfi_endproc
 21137              	.LFE78:
 21139              		.section	.rodata.Table.1,"a"
 21140              		.align	2
 21143              	Table.1:
 21144 0000 00000101 		.ascii	"\000\000\001\001\002\002\002\002\003\003\003\003\003"
 21144      02020202 
 21144      03030303 
 21144      03
 21145 000d 03030304 		.ascii	"\003\003\003\004\004\004\004\004\004\004\004\004\004"
 21145      04040404 
 21145      04040404 
 21145      04
 21146 001a 04040404 		.ascii	"\004\004\004\004\004\004\005\005\005\005\005\005\005"
 21146      04040505 
 21146      05050505 
 21146      05
 21147 0027 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\005"
 21147      05050505 
 21147      05050505 
 21147      05
 21148 0034 05050505 		.ascii	"\005\005\005\005\005\005\005\005\005\005\005\005\006"
 21148      05050505 
 21148      05050505 
 21148      06
 21149 0041 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 21149      06060606 
 21149      06060606 
 21149      06
 21150 004e 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 21150      06060606 
 21150      06060606 
 21150      06
 21151 005b 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 21151      06060606 
 21151      06060606 
 21151      06
 21152 0068 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\006\006"
 21152      06060606 
 21152      06060606 
 21152      06
 21153 0075 06060606 		.ascii	"\006\006\006\006\006\006\006\006\006\006\006\007\007"
 21153      06060606 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 514


 21153      06060607 
 21153      07
 21154 0082 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21154      07070707 
 21154      07070707 
 21154      07
 21155 008f 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21155      07070707 
 21155      07070707 
 21155      07
 21156 009c 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21156      07070707 
 21156      07070707 
 21156      07
 21157 00a9 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21157      07070707 
 21157      07070707 
 21157      07
 21158 00b6 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21158      07070707 
 21158      07070707 
 21158      07
 21159 00c3 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21159      07070707 
 21159      07070707 
 21159      07
 21160 00d0 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21160      07070707 
 21160      07070707 
 21160      07
 21161 00dd 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21161      07070707 
 21161      07070707 
 21161      07
 21162 00ea 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007\007\007\007\007"
 21162      07070707 
 21162      07070707 
 21162      07
 21163 00f7 07070707 		.ascii	"\007\007\007\007\007\007\007\007\007"
 21163      07070707 
 21163      07
 21164              		.section	.rodata.Table.0,"a"
 21165              		.align	2
 21168              	Table.0:
 21169 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 21169      02000100 
 21169      03000100 
 21169      02
 21170 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 21170      00010002 
 21170      00010003 
 21170      00
 21171 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 21171      01000500 
 21171      01000200 
 21171      01
 21172 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 515


 21172      00020001 
 21172      00040001 
 21172      00
 21173 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 21173      03000100 
 21173      02000100 
 21173      06
 21174 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 21174      00010003 
 21174      00010002 
 21174      00
 21175 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 21175      01000200 
 21175      01000300 
 21175      01
 21176 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 21176      00050001 
 21176      00020001 
 21176      00
 21177 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 21177      02000100 
 21177      04000100 
 21177      02
 21178 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 21178      00010002 
 21178      00010007 
 21178      00
 21179 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 21179      01000300 
 21179      01000200 
 21179      01
 21180 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 21180      00020001 
 21180      00030001 
 21180      00
 21181 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 21181      05000100 
 21181      02000100 
 21181      03
 21182 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 21182      00010004 
 21182      00010002 
 21182      00
 21183 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 21183      01000200 
 21183      01000600 
 21183      01
 21184 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 21184      00030001 
 21184      00020001 
 21184      00
 21185 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 21185      02000100 
 21185      03000100 
 21185      02
 21186 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 21186      00010002 
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 516


 21186      00010003 
 21186      00
 21187 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 21187      01000400 
 21187      01000200 
 21187      01
 21188 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 21188      00020001 
 21188      00
 21189              		.text
 21190              	.Letext0:
 21191              		.file 2 "../../Include/Platform/A7A/rme_platform_a7a.h"
 21192              		.file 3 "../../Include/Kernel/rme_kernel.h"
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 517


DEFINED SYMBOLS
                            *ABS*:00000000 rme_kernel.c
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:21     .text.RME_Int_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:26     .text.RME_Int_Print:00000000 RME_Int_Print
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:176    .text.RME_Hex_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:181    .text.RME_Hex_Print:00000000 RME_Hex_Print
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:297    .text.RME_Str_Print:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:302    .text.RME_Str_Print:00000000 RME_Str_Print
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:364    .rodata:00000000 $d
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:365    .rodata:00000000 .LC0
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:369    .rodata:00000028 .LC1
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:372    .rodata:00000034 .LC2
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:375    .rodata:00000038 .LC3
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:378    .text.RME_Log:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:383    .text.RME_Log:00000000 RME_Log
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:442    .text._RME_MSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:447    .text._RME_MSB_Generic:00000000 _RME_MSB_Generic
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:21143  .rodata.Table.1:00000000 Table.1
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:517    .text._RME_LSB_Generic:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:522    .text._RME_LSB_Generic:00000000 _RME_LSB_Generic
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:21168  .rodata.Table.0:00000000 Table.0
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:601    .text._RME_Comp_Swap_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:606    .text._RME_Comp_Swap_Single:00000000 _RME_Comp_Swap_Single
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:653    .text._RME_Fetch_Add_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:658    .text._RME_Fetch_Add_Single:00000000 _RME_Fetch_Add_Single
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:702    .text._RME_Fetch_And_Single:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:707    .text._RME_Fetch_And_Single:00000000 _RME_Fetch_And_Single
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:748    .text._RME_List_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:753    .text._RME_List_Crt:00000000 _RME_List_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:788    .text._RME_List_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:793    .text._RME_List_Del:00000000 _RME_List_Del
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:829    .text._RME_List_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:834    .text._RME_List_Ins:00000000 _RME_List_Ins
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:879    .text._RME_Clear:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:884    .text._RME_Clear:00000000 _RME_Clear
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:936    .text._RME_Memcmp:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:941    .text._RME_Memcmp:00000000 _RME_Memcmp
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1023   .text._RME_Memcpy:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1028   .text._RME_Memcpy:00000000 _RME_Memcpy
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1087   .text._RME_Diff:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1092   .text._RME_Diff:00000000 _RME_Diff
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1142   .text.RME_Kmain:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1147   .text.RME_Kmain:00000000 RME_Kmain
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1185   .text._RME_Lowlvl_Check:00000000 _RME_Lowlvl_Check
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8351   .text._RME_Kot_Init:00000000 _RME_Kot_Init
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1181   .text._RME_Lowlvl_Check:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1212   .text._RME_Svc_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1217   .text._RME_Svc_Handler:00000000 _RME_Svc_Handler
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20503  .text._RME_Inv_Ret:00000000 _RME_Inv_Ret
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20224  .text._RME_Inv_Act:00000000 _RME_Inv_Act
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:1341   .rodata._RME_Svc_Handler:00000000 $d
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18326  .text._RME_Sig_Snd:00000000 _RME_Sig_Snd
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18628  .text._RME_Sig_Rcv:00000000 _RME_Sig_Rcv
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20945  .text._RME_Kfn_Act:00000000 _RME_Kfn_Act
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14878  .text._RME_Thd_Sched_Free:00000000 _RME_Thd_Sched_Free
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15246  .text._RME_Thd_Exec_Set:00000000 _RME_Thd_Exec_Set
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15536  .text._RME_Thd_Sched_Prio:00000000 _RME_Thd_Sched_Prio
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 518


C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16265  .text._RME_Thd_Time_Xfer:00000000 _RME_Thd_Time_Xfer
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16908  .text._RME_Thd_Swt:00000000 _RME_Thd_Swt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2709   .text._RME_Cpt_Crt:00000000 _RME_Cpt_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3214   .text._RME_Cpt_Del:00000000 _RME_Cpt_Del
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3584   .text._RME_Cpt_Frz:00000000 _RME_Cpt_Frz
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3853   .text._RME_Cpt_Add:00000000 _RME_Cpt_Add
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:4641   .text._RME_Cpt_Rem:00000000 _RME_Cpt_Rem
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:5917   .text._RME_Pgt_Crt:00000000 _RME_Pgt_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:6443   .text._RME_Pgt_Del:00000000 _RME_Pgt_Del
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:6791   .text._RME_Pgt_Add:00000000 _RME_Pgt_Add
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:7265   .text._RME_Pgt_Rem:00000000 _RME_Pgt_Rem
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:7484   .text._RME_Pgt_Con:00000000 _RME_Pgt_Con
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:7931   .text._RME_Pgt_Des:00000000 _RME_Pgt_Des
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:10615  .text._RME_Prc_Crt:00000000 _RME_Prc_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:11194  .text._RME_Prc_Del:00000000 _RME_Prc_Del
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:11508  .text._RME_Prc_Cpt:00000000 _RME_Prc_Cpt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:11880  .text._RME_Prc_Pgt:00000000 _RME_Prc_Pgt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12803  .text._RME_Thd_Crt:00000000 _RME_Thd_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:13639  .text._RME_Thd_Del:00000000 _RME_Thd_Del
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14080  .text._RME_Thd_Sched_Bind:00000000 _RME_Thd_Sched_Bind
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15970  .text._RME_Thd_Sched_Rcv:00000000 _RME_Thd_Sched_Rcv
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:17539  .text._RME_Sig_Crt:00000000 _RME_Sig_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:17781  .text._RME_Sig_Del:00000000 _RME_Sig_Del
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:19055  .text._RME_Inv_Crt:00000000 _RME_Inv_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:19683  .text._RME_Inv_Del:00000000 _RME_Inv_Del
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20027  .text._RME_Inv_Set:00000000 _RME_Inv_Set
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2103   .text._RME_Svc_Handler:000008b0 $d
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2109   .text._RME_Tim_Handler:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2114   .text._RME_Tim_Handler:00000000 _RME_Tim_Handler
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9567   .text._RME_Run_Del:00000000 _RME_Run_Del
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9758   .text._RME_Run_Notif:00000000 _RME_Run_Notif
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18204  .text._RME_Kern_Snd:00000000 _RME_Kern_Snd
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18093  .text._RME_Kern_High:00000000 _RME_Kern_High
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2194   .text._RME_Tim_Elapse:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2199   .text._RME_Tim_Elapse:00000000 _RME_Tim_Elapse
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2260   .text._RME_Tim_Future:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2265   .text._RME_Tim_Future:00000000 _RME_Tim_Future
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2296   .text._RME_Cpt_Boot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2301   .text._RME_Cpt_Boot_Init:00000000 _RME_Cpt_Boot_Init
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8441   .text._RME_Kot_Mark:00000000 _RME_Kot_Mark
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2409   .text._RME_Cpt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2414   .text._RME_Cpt_Boot_Crt:00000000 _RME_Cpt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:2705   .text._RME_Cpt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3201   .rodata:0000003c .LC6
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3204   .rodata:00000048 .LC7
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3207   .rodata:00000054 .LC8
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3210   .text._RME_Cpt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8789   .text._RME_Kot_Erase:00000000 _RME_Kot_Erase
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3580   .text._RME_Cpt_Frz:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:3849   .text._RME_Cpt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:4637   .text._RME_Cpt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:4929   .text._RME_Pgt_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:4934   .text._RME_Pgt_Boot_Crt:00000000 _RME_Pgt_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:5267   .rodata:00000078 .LC9
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:5271   .rodata:000000ac .LC10
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:5274   .text._RME_Pgt_Boot_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:5279   .text._RME_Pgt_Boot_Add:00000000 _RME_Pgt_Boot_Add
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 519


C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:5509   .text._RME_Pgt_Boot_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:5514   .text._RME_Pgt_Boot_Con:00000000 _RME_Pgt_Boot_Con
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:5913   .text._RME_Pgt_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:6439   .text._RME_Pgt_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:6787   .text._RME_Pgt_Add:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:7261   .text._RME_Pgt_Rem:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:7480   .text._RME_Pgt_Con:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:7927   .text._RME_Pgt_Des:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8346   .text._RME_Kot_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8412   .rodata:000000d8 .LC11
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8415   .rodata:00000100 .LC12
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8418   .rodata:0000012c .LC13
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8421   .rodata:00000138 .LC14
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8424   .rodata:00000148 .LC15
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8427   .rodata:00000154 .LC16
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8430   .rodata:0000017c .LC17
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8433   .rodata:00000194 .LC18
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8436   .text._RME_Kot_Mark:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:8784   .text._RME_Kot_Erase:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9018   .text._RME_Kom_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9023   .text._RME_Kom_Boot_Crt:00000000 _RME_Kom_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9293   .text._RME_CPU_Local_Init:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9298   .text._RME_CPU_Local_Init:00000000 _RME_CPU_Local_Init
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9373   .rodata:000001c0 .LC19
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9376   .text._RME_Thd_Fatal:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9381   .text._RME_Thd_Fatal:00000000 _RME_Thd_Fatal
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9478   .text._RME_Run_Ins:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9482   .text._RME_Run_Ins:00000000 _RME_Run_Ins
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9563   .text._RME_Run_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9659   .text._RME_Run_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9663   .text._RME_Run_High:00000000 _RME_Run_High
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9754   .text._RME_Run_Notif:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9817   .text._RME_Thd_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9822   .text._RME_Thd_Pgt:00000000 _RME_Thd_Pgt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9884   .rodata:000001e0 .LC20
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9888   .rodata:00000228 .LC21
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9891   .rodata:00000230 .LC22
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9894   .text._RME_Run_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:9898   .text._RME_Run_Swt:00000000 _RME_Run_Swt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:10031  .text._RME_Prc_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:10036  .text._RME_Prc_Boot_Crt:00000000 _RME_Prc_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:10611  .text._RME_Prc_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:11190  .text._RME_Prc_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:11504  .text._RME_Prc_Cpt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:11876  .text._RME_Prc_Pgt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12248  .text._RME_Thd_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12253  .text._RME_Thd_Boot_Crt:00000000 _RME_Thd_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12759  .rodata:00000238 .LC23
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12762  .rodata:00000244 .LC24
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12765  .rodata:00000250 .LC25
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12768  .rodata:0000025c .LC26
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12771  .rodata:00000268 .LC27
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12774  .rodata:00000274 .LC28
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12777  .rodata:00000280 .LC29
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12780  .rodata:0000028c .LC30
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12783  .rodata:00000294 .LC31
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12786  .rodata:000002a0 .LC32
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 520


C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12790  .rodata:000002d0 .LC33
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12793  .rodata:000002dc .LC34
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12796  .rodata:000002e8 .LC35
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:12799  .text._RME_Thd_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:13635  .text._RME_Thd_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14058  .rodata:00000304 .LC36
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14061  .rodata:00000318 .LC37
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14064  .rodata:00000324 .LC38
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14067  .rodata:0000032c .LC39
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14070  .rodata:00000334 .LC40
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14073  .rodata:00000340 .LC41
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14076  .text._RME_Thd_Sched_Bind:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:14874  .text._RME_Thd_Sched_Free:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15233  .rodata:0000034c .LC42
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15236  .rodata:00000358 .LC43
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15239  .rodata:00000364 .LC44
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15242  .text._RME_Thd_Exec_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15532  .text._RME_Thd_Sched_Prio:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:15966  .text._RME_Thd_Sched_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16234  .rodata:00000370 .LC45
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16237  .rodata:00000380 .LC46
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16240  .rodata:00000390 .LC47
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16243  .rodata:00000398 .LC48
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16246  .rodata:000003a4 .LC49
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16249  .rodata:000003b0 .LC50
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16252  .rodata:000003bc .LC51
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16255  .rodata:000003c8 .LC52
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16258  .rodata:000003d4 .LC53
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16261  .text._RME_Thd_Time_Xfer:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:16904  .text._RME_Thd_Swt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:17292  .text._RME_Sig_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:17297  .text._RME_Sig_Boot_Crt:00000000 _RME_Sig_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:17535  .text._RME_Sig_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:17777  .text._RME_Sig_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18088  .text._RME_Kern_High:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18199  .text._RME_Kern_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18322  .text._RME_Sig_Snd:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18624  .text._RME_Sig_Rcv:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:18789  .rodata._RME_Sig_Rcv:00000000 $d
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:19046  .text._RME_Sig_Rcv:00000430 $d
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:19051  .text._RME_Inv_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:19679  .text._RME_Inv_Del:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20023  .text._RME_Inv_Set:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20220  .text._RME_Inv_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20499  .text._RME_Inv_Ret:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20705  .text._RME_Kfn_Boot_Crt:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20710  .text._RME_Kfn_Boot_Crt:00000000 _RME_Kfn_Boot_Crt
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:20941  .text._RME_Kfn_Act:00000000 $a
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:21140  .rodata.Table.1:00000000 $d
C:\Users\even\AppData\Local\Temp\ccFOgQgB.s:21165  .rodata.Table.0:00000000 $d
                           .group:00000000 wm4.0.3b9f63523dc4e8d86e863c7e7e762be7
                           .group:00000000 wm4.rme_platform_a7a.h.12.6f31e4bbf2ba0e08caa014445997fe37
                           .group:00000000 wm4.rme_platform_xc7z020.h.16.ad2f0318b93804fb8601302b8cc407b4
                           .group:00000000 wm4.rme_platform_a7a.h.137.fdc6a038503ac117e4f4f30ba1107f52
                           .group:00000000 wm4.rme_kernel.h.27.716340edb41bad57d522729bf2b8a38a
                           .group:00000000 wm4.rme.h.11.105c42759f88404be372052d8d99e5e6
                           .group:00000000 wm4.rme_kernel.h.185.d02db6497e1a69d04e005d15d216f811
ARM GAS  C:\Users\even\AppData\Local\Temp\ccFOgQgB.s 			page 521


                           .group:00000000 wm4.rme_platform_a7a.h.390.918e282e9d9d990fe491c99e3e90944b
                           .group:00000000 wm4.rme_kernel.h.678.0572fdf2012fb48f701f562b23d175bb
                           .group:00000000 wm4.rme_kernel.h.930.a0227bbf293ff3272fab74c6046a5fa5
                           .group:00000000 wm4.rme_platform_a7a.h.506.815e9496b532c0a06bdb02a9ab106ce7

UNDEFINED SYMBOLS
__RME_Putchar
__aeabi_idiv
__aeabi_idivmod
__RME_Int_Disable
__RME_Lowlvl_Init
__RME_Pgt_Kom_Init
__RME_Boot
__RME_Svc_Param_Get
__RME_Svc_Retval_Set
RME_A7A_Local
__RME_A7A_Write_Release
__RME_A7A_Read_Acquire
RME_A7A_Timestamp
__RME_Pgt_Check
__RME_Pgt_Init
__RME_Pgt_Page_Map
__RME_Pgt_Pgdir_Map
__RME_Pgt_Del_Check
__RME_Pgt_Lookup
__RME_Pgt_Page_Unmap
__RME_Pgt_Pgdir_Unmap
RME_A7A_Kot
__RME_A7A_MSB_Get
__RME_Thd_Reg_Copy
__RME_Pgt_Set
__RME_Thd_Reg_Init
__RME_Inv_Reg_Save
__RME_Inv_Reg_Restore
__RME_Inv_Retval_Set
__RME_Kfn_Handler
